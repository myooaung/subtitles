WEBVTT
0
1
00:00:04.130 --> 00:00:10.110
In this video, we are going to implement
find owner. We want to have a web
1

2
00:00:10.110 --> 00:00:14.370
form where we can search by last name
for owners. Let's take a quick look
2

3
00:00:14.370 --> 00:00:19.980
at how the Spring guys implemented it. So
there's two methods that are going to be
3

4
00:00:19.980 --> 00:00:25.680
in play. One is a GetMapping for owners
find and we are going to initialize the
4

5
00:00:25.680 --> 00:00:30.480
find form. They're doing something
unique here. They're passing in a map a
5

6
00:00:30.480 --> 00:00:35.969
String Object, model rather than Model
and I'm going to pass in the model
6

7
00:00:35.969 --> 00:00:40.680
object because that's how I prefer to do things.
What we want to do is we want to
7

8
00:00:40.680 --> 00:00:45.809
initialize a owner and put that into the
model for that form and then we'll
8

9
00:00:45.809 --> 00:00:50.940
return back the view. So I'll go ahead
and implement that. And now the response
9

10
00:00:50.940 --> 00:00:56.550
is a little more interesting. When we
process it, they're going to go through
10

11
00:00:56.550 --> 00:01:03.619
and do some processing on that. They
got a couple things here that are being
11

12
00:01:03.619 --> 00:01:09.210
interesting so to speak. They
want to do allow parameter lists get
12

13
00:01:09.210 --> 00:01:13.500
to return all records. You can see
they're in line 80 and then they're
13

14
00:01:13.500 --> 00:01:18.390
going to bring back the collection. So
they get a few different things here.
14

15
00:01:18.390 --> 00:01:23.970
If it's empty, they're going to reject it
and return back to the list. So they do
15

16
00:01:23.970 --> 00:01:28.650
a result rejectValue not found.
So this is going to reject the binding
16

17
00:01:28.650 --> 00:01:33.360
result and submit it back to the form
and display a message on it and then if
17

18
00:01:33.360 --> 00:01:37.770
it's 1, if we just get one, we're going to
display that owner
18

19
00:01:37.770 --> 00:01:42.930
so we'll do a redirect to owners get
owner ID to display that specific owner.
19

20
00:01:42.930 --> 00:01:49.079
If we have multiple found, we want to
return back the owners list. So a few
20

21
00:01:49.079 --> 00:01:53.399
different things that we want to see
here actually happen so we are going to
21

22
00:01:53.399 --> 00:01:59.310
go ahead and implement this. And then the
search function, let's take a look at the
22

23
00:01:59.310 --> 00:02:04.799
OwnerRepository also. I'm not going to
implement it this way I'm going to use
23

24
00:02:04.799 --> 00:02:10.440
Spring Data JPA for this. They are doing
a named query to go back and search it
24

25
00:02:10.440 --> 00:02:15.120
so this is one technique to do that.
I'm actually going to implement this
25

26
00:02:15.120 --> 00:02:18.840
using Spring Data JPA
and I'll show you how we get into that.
26

27
00:02:18.840 --> 00:02:22.590
Now let's jump over to IntelliJ. Again my
implementation is going to be a little
27

28
00:02:22.590 --> 00:02:26.430
bit different. I wanted to review what
the Spring guys did in pet clinic
28

29
00:02:26.430 --> 00:02:30.660
here but I'm going to show you a different
technique to do effectively the same
29

30
00:02:30.660 --> 00:02:33.570
thing.
So let's come back over here to IntelliJ.
30

31
00:02:33.570 --> 00:02:39.090
Now I do need to implement these methods.
You can see here I've gone in and
31

32
00:02:39.090 --> 00:02:42.360
written some tests. Let's bring
up the first one here.
32

33
00:02:42.360 --> 00:02:47.760
So findOwners, that originally returned
back of you not implemented. Now we are
33

34
00:02:47.760 --> 00:02:52.560
going to implement that. We want to
return back owners findOwners and it
34

35
00:02:52.560 --> 00:02:56.970
should have an attribute of owner and
then we are going to verify that there's
35

36
00:02:56.970 --> 00:03:01.440
zero interactions with the ownerService.
Now this here gets a little bit
36

37
00:03:01.440 --> 00:03:07.800
different. I want to do an ownerService.
I'm going to expand that out to findAll
37

38
00:03:07.800 --> 00:03:10.465
ByLastNameLike and this is a Spring
38

39
00:03:10.965 --> 00:03:13.200
Data JPA naming syntax so I'm doing find
39

40
00:03:13.200 --> 00:03:18.480
all which will return back all
matches. Last name is the property and
40

41
00:03:18.480 --> 00:03:22.830
then I'm doing a like to do a like on
that. You can see this is red because
41

42
00:03:22.830 --> 00:03:27.420
it's not implemented. Then I'm going to
say return back the Set of owners that
42

43
00:03:27.420 --> 00:03:31.350
we have for our tests. I'll return
back to and then I've set up the tests
43

44
00:03:31.350 --> 00:03:38.640
to also provide that. So when we do
this get action against the owners, we
44

45
00:03:38.640 --> 00:03:44.160
should get back a list in this example.
Now on line 92, I'm going to test the route
45

46
00:03:44.160 --> 00:03:50.190
for just one. So actually that's a
mistake there because this should
46

47
00:03:50.190 --> 00:03:54.770
actually return back owner.
47

48
00:03:55.920 --> 00:04:01.020
Let's double check that. I'm going to mimic
this one here so that it should return
48

49
00:04:01.020 --> 00:04:06.950
back owneId. So go back here.
49

50
00:04:08.459 --> 00:04:13.500
I got two test that I'm setting up here.
One to return back many, I should
50

51
00:04:13.500 --> 00:04:17.489
display the list. And then the second one
is returning that one and it should not
51

52
00:04:17.489 --> 00:04:21.630
display the specific one. So I've set up
these tests, right now, if I run this it's
52

53
00:04:21.630 --> 00:04:24.600
not going to compile because I haven't
implemented these methods. So that's the
53

54
00:04:24.600 --> 00:04:29.250
first thing that we want to do here is
go in and implement this find all by
54

55
00:04:29.250 --> 00:04:38.039
last name. I'm just going to copy that
and come back here to our services Owner
55

56
00:04:38.039 --> 00:04:42.199
Service. Let's modify him.
56

57
00:04:47.630 --> 00:04:55.730
That should be a String like so. This here, this
exact method name it also needs to be
57

58
00:04:55.730 --> 00:05:00.230
put on the repository so the OwnerRepository. You can see here I did
58

59
00:05:00.230 --> 00:05:04.670
findAllByLastName. That was kind of a
mistake in retrospect. Ultimately we're
59

60
00:05:04.670 --> 00:05:08.960
not going to be using that but I'm going
to leave it in place for right now. So
60

61
00:05:08.960 --> 00:05:15.110
we'll implement that. And now I need to
go in and my map implementations got to
61

62
00:05:15.110 --> 00:05:19.420
break. It should break.
62

63
00:05:24.060 --> 00:05:28.520
I'm not going to do that map right now.
63

64
00:05:28.600 --> 00:05:33.100
If somebody wants to implement this and
submit me a pull request, please do so
64

65
00:05:33.100 --> 00:05:38.950
but I'm going to leave this open for right
now. I primarily want to do the
65

66
00:05:38.950 --> 00:05:45.160
Spring Data JPA one. That's more
interesting. So I can see that we also
66

67
00:05:45.160 --> 00:05:51.520
need to implement that method here.
What we're going to do is owner
67

68
00:05:51.520 --> 00:05:57.590
Repository.
Looking in the wrong spot.
68

69
00:05:57.590 --> 00:06:02.690
Not petRepository
John. Owner. We're going to be
69

70
00:06:03.449 --> 00:06:08.550
doing findAll that till Spring Data
JPA to do a search for all and lastName
70

71
00:06:08.550 --> 00:06:14.249
is the property name and then finally
like. Then we say last name Like so. So that
71

72
00:06:14.249 --> 00:06:19.430
implements that inside a String Data JPA.
Now let's come back over to our test.
72

73
00:06:19.430 --> 00:06:27.599
You can see now these are happy.
Let's see here and owners is a Set and do a
73

74
00:06:27.599 --> 00:06:31.949
errase this list. Yeah let's do this. I'm going
to just going to steal this, chunk of code
74

75
00:06:31.949 --> 00:06:36.099
right here
rather than mess around converting a set
75

76
00:06:36.099 --> 00:06:40.319
to ArrayList.
76

77
00:06:41.020 --> 00:06:45.810
I just need two objects returned
back in this test.
77

78
00:06:50.460 --> 00:06:53.970
Let me pause this here for a second.
Okay.
78

79
00:06:53.970 --> 00:06:57.690
I skipped ahead a little bit just to
save you a time watching me stumble
79

80
00:06:57.690 --> 00:07:03.090
through some of the coding. So now I
have the test running and let's go ahead.
80

81
00:07:03.090 --> 00:07:06.600
I'm following a test-driven development
approach here so let's go ahead and run
81

82
00:07:06.600 --> 00:07:11.780
these tests. We should see them fail.
82

83
00:07:16.370 --> 00:07:21.480
So now we have three failing tests as expected so
Let's go ahead and fix the test now.
83

84
00:07:21.480 --> 00:07:26.550
Again this is a test-driven development.
We can see here that the find method is
84

85
00:07:26.550 --> 00:07:33.720
not functioning properly. So let's go
back to the OwnerController. Let's drag
85

86
00:07:33.720 --> 00:07:38.280
you over here since we'll be working
with you and now this findOwners not
86

87
00:07:38.280 --> 00:07:42.380
implemented. What we want to do again,
let's take a look at the Spring
87

88
00:07:42.380 --> 00:07:46.890
implementation here. We're doing initFindForm. They're passing in a Map
88

89
00:07:46.890 --> 00:07:52.860
and we want a model put there so let's
come in here and do it our way. You're
89

90
00:07:52.860 --> 00:07:56.000
going to do Model.
90

91
00:07:56.750 --> 00:08:02.210
Now what we want to do is
owner.
91

92
00:08:03.639 --> 00:08:06.550
Again, we're following the Builder
pattern here so slightly different from
92

93
00:08:06.550 --> 00:08:12.789
declaring the object what new and then
we should be returning back the find
93

94
00:08:12.789 --> 00:08:19.840
owners form, like so. Come in here. Add
that and now if we come in and rerun our
94

95
00:08:19.840 --> 00:08:25.800
failing test,
you'll see that one magically fixed itself
95

96
00:08:25.800 --> 00:08:31.410
so that is now functioning properly. Now
we need to process basically this Get
96

97
00:08:31.410 --> 00:08:36.270
Mapping here. I'm going to grab this
method signature right. Steal that
97

98
00:08:36.270 --> 00:08:39.560
directly from the Spring guys.
98

99
00:08:42.450 --> 00:08:47.060
And here rather than that,
I want the Model itself.
99

100
00:08:47.060 --> 00:08:52.880
We do want the binding result
like so.
100

101
00:08:52.880 --> 00:08:59.480
Let's grab this and we're just
going to modify this. I am doing the
101

102
00:08:59.480 --> 00:09:04.329
evils of cut and paste. Do not do that.
102

103
00:09:06.160 --> 00:09:12.180
So this is good here
103

104
00:09:12.740 --> 00:09:17.680
and now this is going to be a List.
104

105
00:09:25.750 --> 00:09:32.230
Again the logic here, we have the
results ownerService findAllByLast
105

106
00:09:32.230 --> 00:09:37.990
NameLike. If it comes back empty, we are
going to reject the value. If we only
106

107
00:09:37.990 --> 00:09:45.190
have 1, like so, we are going to return
back owner result
107

108
00:09:45.190 --> 00:09:52.630
so we'll do a redirect to the owners to
display that and then finally here that
108

109
00:09:52.630 --> 00:09:59.010
becomes addAttribute
selections results ownersList. I'm
109

110
00:09:59.010 --> 00:10:03.740
going to double-check that selections.
Let's take a look at that view
110

111
00:10:09.390 --> 00:10:13.970
and yes selections. I just want to double
check that views being like that so that
111

112
00:10:13.970 --> 00:10:16.750
is good.
112

113
00:10:16.960 --> 00:10:22.040
Now let's rerun our tests. See if that
logic is implemented.
113

114
00:10:22.040 --> 00:10:27.110
And these are still unhappy. Let's take a
closer look at this.
114

115
00:10:27.110 --> 00:10:34.480
owners/index. That should not do that.
So results.
115

116
00:10:37.089 --> 00:10:41.799
We know that it's an ArrayList. We
only have one index zero so that should
116

117
00:10:41.799 --> 00:10:44.519
fix that one.
117

118
00:10:45.550 --> 00:10:47.820
And again
118

119
00:10:49.389 --> 00:10:52.499
let's rerun that.
119

120
00:10:54.920 --> 00:10:58.850
Let's take a closer look at this. It's
the nice thing about having a test. We
120

121
00:10:58.850 --> 00:11:03.290
can actually run it inside the debugger
so I'm going to do the find one first. Let's
121

122
00:11:03.290 --> 00:11:09.420
go ahead and debug him
and see exactly what's happening here.
122

123
00:11:09.420 --> 00:11:13.790
You did not even get to my
breakpoint so
123

124
00:11:14.490 --> 00:11:16.760
GetMapping...
124

125
00:11:18.380 --> 00:11:22.769
Let's take a closer look
going on here.
125

126
00:11:23.920 --> 00:11:27.329
Debug you again.
126

127
00:11:30.570 --> 00:11:35.350
Ah, my mistake. So I get
owners owners so this is never going to
127

128
00:11:35.350 --> 00:11:41.139
happen. Let's go ahead and get rid of
that. What was happening is coming in
128

129
00:11:41.139 --> 00:11:48.279
here and doing a get and returning this
so I was falling into the wrong attribute all
129

130
00:11:48.279 --> 00:11:54.600
together. This might not actually
work either.
130

131
00:11:54.600 --> 00:11:58.820
Double-check to see
what they did here.
131

132
00:11:59.660 --> 00:12:04.160
So I have that implementation to bring up
the list and what's happening is I'm
132

133
00:12:04.160 --> 00:12:08.540
falling into this one so let's go ahead
and I don't think I need this guy
133

134
00:12:08.540 --> 00:12:12.530
anymore.
Because before, it would just display
134

135
00:12:12.530 --> 00:12:15.770
everything. So now we're going to change the
functionality of the application a
135

136
00:12:15.770 --> 00:12:20.240
little bit to actually go here into this
implementation here. So let's go ahead
136

137
00:12:20.240 --> 00:12:27.520
and see he's here. We should run now. Let's
go ahead and run them.
137

138
00:12:31.170 --> 00:12:36.839
and then our assertion is failing. So 302 is
an HTTP redirect. So let's fix our test
138

139
00:12:36.839 --> 00:12:39.199
there.
139

140
00:12:41.790 --> 00:12:49.760
Redirection. This here probably, I'm
guessing this is going to be the same.
140

141
00:12:51.810 --> 00:12:55.949
So we'll fix
one at a time here.
141

142
00:13:09.420 --> 00:13:13.370
So I should have been a redirection as
well.
142

143
00:13:17.370 --> 00:13:22.329
I could change that. That's a
problem with my test so that
143

144
00:13:22.329 --> 00:13:26.360
actually should be that.
We're just going through fixing
144

145
00:13:26.360 --> 00:13:30.620
there as one at a time and making sure
their tests are right.
145

146
00:13:30.620 --> 00:13:34.150
We're still not happy.
146

147
00:13:37.730 --> 00:13:41.440
I just gone through this. This here
147

148
00:13:41.610 --> 00:13:47.070
returned one, that should redirect and I
shouldn't have a model attribute here on
148

149
00:13:47.070 --> 00:13:51.740
that. So that is a invalid one.
149

150
00:13:52.010 --> 00:13:58.480
We should just have a redirect of one
so let's go ahead and test that.
150

151
00:13:59.570 --> 00:14:03.059
That is good
now. The return Many, let's take a look
151

152
00:14:03.059 --> 00:14:05.419
at him.
152

153
00:14:05.650 --> 00:14:11.010
Owners list so that's going to be
different.
153

154
00:14:13.880 --> 00:14:16.180
That's going to be isOk.
154

155
00:14:24.290 --> 00:14:28.290
We should have collection of zero
but was null so let's
155

156
00:14:28.290 --> 00:14:31.040
double check that.
156

157
00:14:35.800 --> 00:14:40.209
That's a problem in the model
property. So they're doing selections
157

158
00:14:40.209 --> 00:14:47.709
there. I did owners so I'm going to follow
that and that should be selections. So I
158

159
00:14:47.709 --> 00:14:51.279
don't like the terminology. That's also
used in the Thymeleaf form so I'm going to
159

160
00:14:51.279 --> 00:14:54.600
go ahead and roll with that.
And that is
160

161
00:14:58.290 --> 00:15:03.180
good. Let's go ahead and run all our
tests now. I think we can call this
161

162
00:15:03.180 --> 00:15:05.899
one done.
162

163
00:15:10.910 --> 00:15:14.870
And listOwners is broken.
163

164
00:15:17.860 --> 00:15:20.100
This actually goes away because I got
rid
164

165
00:15:20.100 --> 00:15:24.060
of that. So let's go ahead. I'm just
going to delete this test because it's no
165

166
00:15:24.060 --> 00:15:29.430
longer valid because originally I had
the functionality to go into the
166

167
00:15:29.430 --> 00:15:33.660
controller and we got rid of this
functionality so I'm going to get rid of
167

168
00:15:33.660 --> 00:15:36.990
that comment about it
code as well. Now let's rerun
168

169
00:15:36.990 --> 00:15:39.920
our failing tests.
169

170
00:15:49.440 --> 00:15:52.790
Going to pause this a second.
So I brought that. My mistake. We had two
170

171
00:15:53.220 --> 00:15:57.029
test methods looking at that. So we can
get rid of this one as well. I took a
171

172
00:15:57.029 --> 00:16:01.860
moment to make sure I was speaking right
here. So we can get rid of him as well. So
172

173
00:16:01.860 --> 00:16:05.930
now let's go ahead and run all our tests.
173

174
00:16:10.940 --> 00:16:16.280
That functionality works so let's
bring up the application now and go and
174

175
00:16:16.280 --> 00:16:20.720
give that a test. Take a look at it. This
videos getting a little long but we'll
175

176
00:16:20.720 --> 00:16:24.790
make sure that it's functioning properly.
176

177
00:16:25.670 --> 00:16:30.010
We are up and running. Let's come over to
Chrome.
177

178
00:16:30.290 --> 00:16:37.190
Home find owners. We can see that we
get a 500 error on this so let's take a
178

179
00:16:37.190 --> 00:16:39.820
look at that.
179

180
00:16:42.610 --> 00:16:46.120
So it's looking for lastName on
owners so that could be a different
180

181
00:16:46.120 --> 00:16:49.830
implementation. Let's take a quick look
at that.
181

182
00:16:54.960 --> 00:16:57.980
firstName lastName
182

183
00:17:07.449 --> 00:17:12.480
I think we have a name mismatch there so
form field lastName. I'm going to pause
183

184
00:17:12.480 --> 00:17:17.550
this again. Okay I've made a pretty simple
mistake here. I needed to look at this
184

185
00:17:17.550 --> 00:17:23.310
closer. What's happening here, right here,
it says OwnersOwnerBuilder so I made
185

186
00:17:23.310 --> 00:17:27.300
a mistake in the controller by not
passing the type. So if we come back over
186

187
00:17:27.300 --> 00:17:31.500
here to the controller,
I'll show exactly what I'm doing. I have
187

188
00:17:31.500 --> 00:17:37.950
Owner.builder() but I forgot to do build
to make that an Owner object rather than
188

189
00:17:37.950 --> 00:17:41.960
the Builder object. So let's go ahead and
build a project.
189

190
00:17:41.960 --> 00:17:46.440
Now I'll update to type and you can see
the build action inside of IntelliJ
190

191
00:17:46.440 --> 00:17:52.020
triggered the reload of the Spring
Context. Now let's come over here. Refresh
191

192
00:17:52.020 --> 00:17:59.760
this. See this? See if
we can find Weston and now we got
192

193
00:17:59.760 --> 00:18:04.770
Michael Westen.
Find owners find all
193

194
00:18:04.770 --> 00:18:08.210
has not been found.
194

195
00:18:10.909 --> 00:18:13.840
That should work.
195

196
00:18:14.980 --> 00:18:22.230
So find by is not working
properly but the equals works.
196

197
00:18:23.760 --> 00:18:28.250
So I'm going to follow that
bug and we'll look at that in next video.
197

198
00:18:28.250 --> 00:18:34.660
This one got pretty long. So I am going
to call that good. We'll go ahead.
198

199
00:18:37.250 --> 00:18:43.900
I can't remember that issue number. So
number 54.
199

200
00:18:44.690 --> 00:18:47.920
Git commit.
200

201
00:18:52.750 --> 00:18:58.809
And let's go ahead and create a new
issue. I'll say...
201

202
00:19:01.310 --> 00:19:09.100
And label that as a bug and we'll
fix that in a future video here.
