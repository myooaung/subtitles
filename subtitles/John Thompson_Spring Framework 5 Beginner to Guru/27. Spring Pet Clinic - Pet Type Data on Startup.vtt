WEBVTT
0
1
00:00:04.040 --> 00:00:09.179
Alright! I originally planned this video
to address the Create Pet Map Service,
1

2
00:00:09.179 --> 00:00:15.120
number 30 here. And I actually made a
mistake there in planning this. We
2

3
00:00:15.120 --> 00:00:19.439
already have the pet service implemented
as a map. So I'm just going to go ahead
3

4
00:00:19.439 --> 00:00:24.570
and close that, saying Not Required.
It's important when you're working with
4

5
00:00:24.570 --> 00:00:28.140
issue system like this to make comments
like that. Just don't randomly close up
5

6
00:00:28.140 --> 00:00:31.199
because if you're on a team, other people
are going to go," Well why'd you close that?"
6

7
00:00:31.199 --> 00:00:37.500
So just leave a trail of breadcrumbs as
to to why if something got closed.
7

8
00:00:37.500 --> 00:00:44.390
I'm just going to go ahead and close this.
Let's come back over to the issues.
8

9
00:00:44.390 --> 00:00:50.360
What we are going to do instead here
is add in the pet types with bootstrap.
9

10
00:00:50.360 --> 00:00:55.790
By that I mean, on startup so let's
talk about overt IntelliJ. If you
10

11
00:00:55.790 --> 00:01:02.129
remember here, down in the web project
source main java,
11

12
00:01:02.129 --> 00:01:09.750
we have our bootstrap, our DataLoader.
These can get a little funky and
12

13
00:01:09.750 --> 00:01:15.509
this is a tip from experience here. 
We're creating the owners and what we're
13

14
00:01:15.509 --> 00:01:20.009
going to be doing is creating some
objects as we go along. What we want
14

15
00:01:20.009 --> 00:01:24.420
to do is be able to use those objects as
we progress through this. So obviously, a
15

16
00:01:24.420 --> 00:01:28.170
PetType is going to be one of those
fundamental objects that we're going to
16

17
00:01:28.170 --> 00:01:30.270
establish persistence for. I'm going to
do that
17

18
00:01:30.270 --> 00:01:35.640
early here. There's been situations
where I'll create methods to create
18

19
00:01:35.640 --> 00:01:39.119
groups of data that I'll just call
methods to make your code a little
19

20
00:01:39.119 --> 00:01:43.590
bit cleaner. But in this case, we're
going to be using those objects, so the
20

21
00:01:43.590 --> 00:01:50.399
code for bootstrap classes can get a
little ugly. We'll do a PetType and say
21

22
00:01:50.399 --> 00:01:54.189
we'll start off with dogs. They're better than
cats.
22

23
00:01:54.189 --> 00:01:59.400
new PetType dog.setName()
23

24
00:02:00.310 --> 00:02:05.560
and now what we need to do is we need to
bring in our PetTypeService. I have to
24

25
00:02:05.560 --> 00:02:10.560
come up here. Do private final
PetTypeService.
25

26
00:02:11.640 --> 00:02:16.800
You can see that IntelliJ gives me that
little red squiggly line. If I do an
26

27
00:02:16.800 --> 00:02:22.440
option enter, I can say initialize a
constructor, like so. Op, that's not what
27

28
00:02:22.440 --> 00:02:26.310
I want to do. My mistake. Let's try that one
more time.
28

29
00:02:26.310 --> 00:02:32.250
Add constructor parameter. It's what I
actually want to do. So now, we can see
29

30
00:02:32.250 --> 00:02:37.830
that this is going to say, I'm going to take
in a PetTypeService again that's the
30

31
00:02:37.830 --> 00:02:43.140
interface, so Spring is going to go ahead
and load that. Through inversion of
31

32
00:02:43.140 --> 00:02:46.710
control at runtime when this component
starts up, Spring is going to auto wire
32

33
00:02:46.710 --> 00:02:56.540
in a PetTypeService. So now, what we can
do is say dog. Op, I'm sorry.
33

34
00:02:57.110 --> 00:03:00.130
PetType
34

35
00:03:00.459 --> 00:03:06.520
equals PetTypeService 
dot save. The reason I'm doing
35

36
00:03:06.520 --> 00:03:11.740
this, there's probably a couple different
ways that you could do this. But what I
36

37
00:03:11.740 --> 00:03:17.380
want to be sure of is when I get my
saved dog type. I guess remember the save
37

38
00:03:17.380 --> 00:03:21.520
process is going to establish that
identity for us. We're gonna go ahead
38

39
00:03:21.520 --> 00:03:25.390
and get the saved dog type. We can use
that later on when we start
39

40
00:03:25.390 --> 00:03:30.910
wiring in the data types or the objects
for owners and pets. We're
40

41
00:03:30.910 --> 00:03:35.080
establishing the pet types here, so I
would save dog type. Let me make that
41

42
00:03:35.080 --> 00:03:42.060
savedDogPetType. I am going to risk it.
42

43
00:03:42.060 --> 00:03:48.239
Cut and paste this. We'll say cat
43

44
00:03:48.950 --> 00:03:51.099
like so.
44

45
00:03:52.500 --> 00:03:57.540
savedCatPetType. We want you to do cat and
double check this since I'm doing the
45

46
00:03:57.540 --> 00:04:03.540
evils of cut and paste here. We have
PetType cats, new PetType, we're going
46

47
00:04:03.540 --> 00:04:12.870
to set the cat name to cat, and savedCatPetType.
That all looks good. Just
47

48
00:04:12.870 --> 00:04:18.480
as a double check here, because we are
not running integration test yet or any
48

49
00:04:18.480 --> 00:04:21.780
unit test yet to be honest, 
that's going to be coming up, I'm just
49

50
00:04:21.780 --> 00:04:26.010
kind of waiting until we get to that in
the course. Right now, we're laying down
50

51
00:04:26.010 --> 00:04:29.940
lot of stuff. I'm going to go ahead and
start up Spring Boot. Make sure that this
51

52
00:04:29.940 --> 00:04:33.780
runs happily without any exceptions. 
Right now, I'm just going to make sure it
52

53
00:04:33.780 --> 00:04:38.130
doesn't toss an exception. We could have
a hidden error here but I'm going to
53

54
00:04:38.130 --> 00:04:42.480
let that slide for now. We'll address
that if we have to. Everything started
54

55
00:04:42.480 --> 00:04:49.140
up normally so I'm going to go ahead and
commit this and double check that that
55

56
00:04:49.140 --> 00:04:57.980
was number 32. Let's go ahead in here.
Commit the directory.
56

57
00:05:01.229 --> 00:05:05.759
I'm closing the number 32. By
bootstrap, this can get confusing because
57

58
00:05:05.759 --> 00:05:10.680
we are using bootstrap CSS. Bootstrap,
 I'm talking about this bootstrap
58

59
00:05:10.680 --> 00:05:15.779
data loader class. So bootstrap as in
starting up a process and not bootstrap
59

60
00:05:15.779 --> 00:05:22.889
the CSS library. Go ahead and commit
and push that. That has been pushed up to
60

61
00:05:22.889 --> 00:05:28.310
GitHub and we can see that that is
closed.
