WEBVTT
0
1
00:00:04.100 --> 00:00:08.700
Alright! Since we got some tests added
to our project, now we can set up
1

2
00:00:08.700 --> 00:00:12.210
Continuous Integration testing so that
gives us a couple nice things that we
2

3
00:00:12.210 --> 00:00:17.160
can do to keep an eye on our project. If
you follow my courses and my blog, you
3

4
00:00:17.160 --> 00:00:21.539
know I am a big fan of Continuous
Integration. One project I really
4

5
00:00:21.539 --> 00:00:26.670
like a lot is CircleCI. I got it
open up here in a tab. CircleCI is
5

6
00:00:26.670 --> 00:00:30.029
they do have a free tier where you can
use it. I'm operating on the free tier.
6

7
00:00:30.029 --> 00:00:33.420
I've got a bunch of stuff in it. So the
free tier does give you quite bit
7

8
00:00:33.420 --> 00:00:38.579
capabilities and it has really really
nice integration with GitHub. What we
8

9
00:00:38.579 --> 00:00:44.129
are gonna do is go through and set up
our project on CircleCI. But first I
9

10
00:00:44.129 --> 00:00:52.640
wanna create an issue for that. We're
gonna set up CircleCI..setup.
10

11
00:00:54.250 --> 00:00:59.800
So I'm gonna add in that issue and
then we will add in one more issue which
11

12
00:00:59.800 --> 00:01:02.460
I think is nice. I'm gonna add Build
12

13
00:01:05.180 --> 00:01:12.230
Badge and what that will do is set up a
badge on the home. So I can set up a
13

14
00:01:12.230 --> 00:01:18.110
badge right here to show if the build is
occurring properly. So we'll do that also.
14

15
00:01:18.110 --> 00:01:24.680
So let's come back here to our issues.
I am going to start working on Setup
15

16
00:01:24.680 --> 00:01:30.980
CircleCI. Just add that to myself.
Setting up CircleCI is like
16

17
00:01:30.980 --> 00:01:37.130
crazy crazy simple. I can come here and
I'm gonna go in add projects. You can
17

18
00:01:37.130 --> 00:01:42.740
see I have a ton of stuff here and the
sfg-pet-clinic that's what we are
18

19
00:01:42.740 --> 00:01:48.550
working with so I'm gonna set up
project and we do have a Maven project.
19

20
00:01:48.550 --> 00:01:54.860
All I got to do is here and say Copy
To Clipboard and it's gonna copy this
20

21
00:01:54.860 --> 00:01:58.430
file over. I'm gonna go over to
IntelliJ then we'll talk through what's
21

22
00:01:58.430 --> 00:02:02.570
going on in here.
Now inside of IntelliJ, what I wanna do
22

23
00:02:02.570 --> 00:02:09.470
here is create a new directory.
So we want is .circle
23

24
00:02:09.470 --> 00:02:14.690
So CircleCI just wants a directory
called .circleci. So I'm gonna save
24

25
00:02:14.690 --> 00:02:22.910
that and then you see here and wants the
file config.yaml or yml. So I'm
25

26
00:02:22.910 --> 00:02:28.280
gonna come in here,
New File,
26

27
00:02:30.860 --> 00:02:37.280
OK and I'm gonna go ahead and paste in.
I'm just cutting and pasting
27

28
00:02:37.280 --> 00:02:44.600
literally. This is a sample file from
CircleCI. I literally clicked on Copy To
28

29
00:02:44.600 --> 00:02:51.830
Clipboard and pasted it into this file
inside my project. So let's go over and
29

30
00:02:51.830 --> 00:02:57.590
do a quick code review on what's going
on here. Line 5 is version 2. CircleCI
30

31
00:02:57.590 --> 00:03:02.090
recently went from 1 to 2. There's a lot
of differences in the syntax of the file.
31

32
00:03:02.090 --> 00:03:07.070
A lot of new capabilities. A lot of
people still using version 1 but
32

33
00:03:07.070 --> 00:03:10.430
you can see when I'm in CircleCI
have a warning at the top I've got some
33

34
00:03:10.430 --> 00:03:15.560
older project still using version 1. And
now, as we go down here, we have a build
34

35
00:03:15.560 --> 00:03:23.209
job, and here on line 7, we have a job
called build and it has an attribute for
35

36
00:03:23.209 --> 00:03:29.270
Docker. What's important here is on
line 10, our build is gonna run inside
36

37
00:03:29.270 --> 00:03:35.420
of a Docker Container and we are going to
utilize the circlec/openjdk:8. So this
37

38
00:03:35.420 --> 00:03:40.370
is setting up the JDK 8. I know
11 is out now but the world is still
38

39
00:03:40.370 --> 00:03:45.830
functioning on 8 quite a bit. So that
sets up that JDK 8. This is again a
39

40
00:03:45.830 --> 00:03:50.000
Docker Image that our build is gonna run
inside of. Line 17 sets up our 
40

41
00:03:50.000 --> 00:03:53.450
working_directory so we are gonna go to the
home folder of repo.
41

42
00:03:53.450 --> 00:03:58.370
Then we set up some MAVEN_OPTS. The amount
of memory there that's quite a bit
42

43
00:03:58.370 --> 00:04:05.360
generous so our Maven should not pop on
that I hope. And then our steps on line
43

44
00:04:05.360 --> 00:04:12.920
23, we're gonna check out. And here, CircleCI has the ability to cache dependencies
44

45
00:04:12.920 --> 00:04:15.320
and they're caching mechanism is a
little funny,
45

46
00:04:15.320 --> 00:04:19.190
depends on what host you're running on.
They have a variety of hosts so
46

47
00:04:19.190 --> 00:04:22.850
sometimes you'll get a cache, sometimes
you won't. It can be a little odd from
47

48
00:04:22.850 --> 00:04:28.400
just observations. And then the mvn
dependency:go-offline. That effectively
48

49
00:04:28.400 --> 00:04:32.960
says go and get all my dependencies
I'm gonna run in an offline mode from
49

50
00:04:32.960 --> 00:04:39.590
there and now we can save the cache
so you can see here on line 35 that is
50

51
00:04:39.590 --> 00:04:44.610
saving the cache and this is a CircleCI
thing. Spring projects do bring down a
51

52
00:04:44.610 --> 00:04:51.180
ton of stuff so your dependencies list gets
quite big in a relative sort of way. And
52

53
00:04:51.180 --> 00:04:57.270
then finally on line 41 at the bottom
there, we are gonna run integration tests.
53

54
00:04:57.270 --> 00:05:02.280
So this will run all your tests. So it'll
pick up unit tests and integration tests.
54

55
00:05:02.280 --> 00:05:06.120
This is a Maven command and you can
customize this quite a bit. So this is
55

56
00:05:06.120 --> 00:05:10.439
actual Maven run command but for our
purposes right now we are not doing any
56

57
00:05:10.439 --> 00:05:15.870
type of Docker build or deploy or
anything unusual code coverage, so the
57

58
00:05:15.870 --> 00:05:23.719
default is gonna work just fine for
us. So I'm gonna go ahead and commit this.
58

59
00:05:25.030 --> 00:05:31.860
I'm gonna say adding
and note I'm not doing to close this, on the
59

60
00:05:31.860 --> 00:05:37.710
issue because I'm not done yet but I do
need to commit this file up to GitHub. So
60

61
00:05:37.710 --> 00:05:41.940
I'm gonna go and commit and push because
I need to get that up to GitHub for
61

62
00:05:41.940 --> 00:05:46.229
CircleCI to actually see it .So we can
see that it's now pushed up there. Let's
62

63
00:05:46.229 --> 00:05:51.990
come back over here to CircleCI. And now
I can say Start building and this is
63

64
00:05:51.990 --> 00:05:56.669
gonna watch a build. You can see now
that it's going to go through and do the
64

65
00:05:56.669 --> 00:06:02.490
build on it. Click on that. We can see
that it's starting to run. This is gonna
65

66
00:06:02.490 --> 00:06:06.780
take a couple of minutes to run. I'm
gonna pause the video while it's running
66

67
00:06:06.780 --> 00:06:10.620
and then it'll come back to this. I'm gonna
hit pause right now. I'll be right back
67

68
00:06:10.620 --> 00:06:15.509
after this builds. Now resume the video
and our build failed. So let's go and
68

69
00:06:15.509 --> 00:06:23.419
take a look and see what happened. 
And we got a bunch of chatter here.
69

70
00:06:23.680 --> 00:06:30.820
The output can be quite verbose. I'm
still scrolling down to the bottom. I'm
70

71
00:06:30.820 --> 00:06:34.860
gonna grab the slider over here
71

72
00:06:37.040 --> 00:06:41.540
and I don't see why it
failed.
72

73
00:06:49.360 --> 00:06:55.500
So the build file could be too big so I downloaded it.
73

74
00:06:58.260 --> 00:07:01.400
Could not find...
74

75
00:07:03.860 --> 00:07:09.080
Okay so what's happening here is it
cannot find that. So the problem is
75

76
00:07:09.080 --> 00:07:13.550
the Maven command that I'm using. Because
it's a multi module project, it's not
76

77
00:07:13.550 --> 00:07:18.169
finding that. So I'm just running it
integration test and let's change our
77

78
00:07:18.169 --> 00:07:25.000
build. I believe this will solve it.
Rather than integration test, let's do
78

79
00:07:25.000 --> 00:07:31.819
install. So what install does is it tells
Maven to install to the local directory
79

80
00:07:31.819 --> 00:07:38.680
into the local M2. So I'm gonna go
ahead and Git and push that.
80

81
00:07:43.849 --> 00:07:48.039
So go ahead and push that up. I'll
explain that a little bit more. So now
81

82
00:07:48.039 --> 00:07:52.719
I'm committing this. We can see that
as going up to GitHub in the background.
82

83
00:07:52.719 --> 00:07:56.530
You can see in the lower right there, I
pushed successful so now then it's gonna
83

84
00:07:56.530 --> 00:08:00.789
kick off a build on CircleCI. While that
is cooking, I'm gonna explain what
84

85
00:08:00.789 --> 00:08:06.430
happened there. So we can see this cache
here and we have a couple of options here.
85

86
00:08:06.430 --> 00:08:10.930
We have the mvn dependency:go-offline
and we are saving the cache and you can
86

87
00:08:10.930 --> 00:08:15.370
see here this .m2.
So the container that we're running in
87

88
00:08:15.370 --> 00:08:21.520
will have a Maven directory a local
cache and what we are doing is mvn
88

89
00:08:21.520 --> 00:08:26.259
install. We are telling it to install it
so our build happened properly but we
89

90
00:08:26.259 --> 00:08:30.759
were only running integration tests so
that artifact was not installed into the
90

91
00:08:30.759 --> 00:08:34.390
local Maven directory. So this install
step will actually tell it to go ahead
91

92
00:08:34.390 --> 00:08:40.360
and install it. So let's go ahead and
toggle back over to CircleCI and take a
92

93
00:08:40.360 --> 00:08:44.400
look at our jobs and we should have one
running and this failed again.
93

94
00:08:50.400 --> 00:08:51.400
Let's see if we have the same error
94

95
00:08:51.490 --> 00:08:53.820
or not.
95

96
00:08:59.660 --> 00:09:04.850
Anyway the same thing. So the install did
not work. I'm gonna pause this and
96

97
00:09:04.850 --> 00:09:10.660
figure out the exact. I think it's
because we went offline.
97

98
00:09:10.660 --> 00:09:16.300
So hold on one second. I'm gonna pause
this and come up with a solution. Okay, did
98

99
00:09:16.300 --> 00:09:20.680
a little research. I think I got it
here. I'm going to go ahead and
99

100
00:09:20.680 --> 00:09:26.380
revert this back to integration-test and
what I wanna do here is before I go
100

101
00:09:26.380 --> 00:09:31.660
offline and w offline does
is kind of named funny. It forces Maven
101

102
00:09:31.660 --> 00:09:38.530
to download everything. So I'm going to
do this and what this does is it tells
102

103
00:09:38.530 --> 00:09:42.220
Maven to install and then I'm passing
it. I can remember that the syntax for
103

104
00:09:42.220 --> 00:09:47.080
the skip test but it's -DskipTests
that's why it does toggle over one
104

105
00:09:47.080 --> 00:09:53.560
make sure I had that right. So I'm gonna
do run. I'm gonna add in a run step
105

106
00:09:53.560 --> 00:09:56.980
here so you can see that the build has
multiple steps. So now it's gonna say
106

107
00:09:56.980 --> 00:10:03.160
checkout,  restore the cache from the checksum on the pom and then we are also
107

108
00:10:03.160 --> 00:10:09.640
going to run the run install which will
install the modules into the local maven
108

109
00:10:09.640 --> 00:10:14.770
cache but it's going to skip the test.
And then down here on line 43 we'll
109

110
00:10:14.770 --> 00:10:20.260
actually run the test. So the problem is
that we have one module depending on
110

111
00:10:20.260 --> 00:10:24.520
the other. But Maven by default it
doesn't look at your source code or what
111

112
00:10:24.520 --> 00:10:29.230
it's compiled source code, It's gonna look at jars in the maven .m2
112

113
00:10:29.230 --> 00:10:33.340
cache. So if you're looking at your
directory under m2, you'll find a
113

114
00:10:33.340 --> 00:10:38.440
repository and inside that repository
you'll find all those jars being used. So
114

115
00:10:38.440 --> 00:10:42.150
I'm gonna go ahead and commit this.
115

116
00:10:42.790 --> 00:10:51.370
Fixing build again and we'll go ahead
and commit and push that. Let's
116

117
00:10:51.370 --> 00:10:56.580
toggle over to CircleCI. Make sure
that pushing is successful, which it does. And
117

118
00:10:56.580 --> 00:11:04.820
now let's come back over here to Jobs
and you see that this is already running.
118

119
00:11:06.880 --> 00:11:12.850
You can see that it does download a
ton of stuff and this is all the stuff
119

120
00:11:12.850 --> 00:11:18.670
from Spring and all the dependency so
it's bringing down all the jars and
120

121
00:11:18.670 --> 00:11:26.410
checksums and yada yada. So you can see a
ton of stuff. So when you do a build like
121

122
00:11:26.410 --> 00:11:32.520
that with Spring build, you do get a ton of
stuff that comes down.
122

123
00:11:34.180 --> 00:11:38.700
So we are to the Saving Cache step.
123

124
00:11:41.340 --> 00:11:45.910
And now it looks like we are
looking pretty good I think. I think we
124

125
00:11:45.910 --> 00:11:50.410
got further than we did in the past so
we are now seeing the plugin. So it's
125

126
00:11:50.410 --> 00:11:55.089
actually building the artifact and we
are in the green. You can see here
126

127
00:11:55.089 --> 00:11:59.319
yeah my tests pass all the way at the
top there. So that is from a allowing
127

128
00:11:59.319 --> 00:12:04.779
alerts inside of Google Chrome. So our
test is now green. If they look at the
128

129
00:12:04.779 --> 00:12:11.980
jobs. We can see that that did fix it so
a pretty common. It's not uncommon
129

130
00:12:11.980 --> 00:12:14.980
when you're setting up a CI build to have
a couple fail right out of the gate
130

131
00:12:14.980 --> 00:12:18.699
until you get a couple things tweaked
depending on your build environment. So
131

132
00:12:18.699 --> 00:12:22.420
having two failures is not the end of
the world but we did get the third one
132

133
00:12:22.420 --> 00:12:27.160
to pass. But what's important now is as I
make changes what's gonna happen in
133

134
00:12:27.160 --> 00:12:30.939
the background, CircleCI is going to
check out the code and run these tests
134

135
00:12:30.939 --> 00:12:35.740
every time. And if I inadvertently break
something as we are progressing with the
135

136
00:12:35.740 --> 00:12:39.850
development of this application, I will
get an email saying, "Hey dummy, you broke
136

137
00:12:39.850 --> 00:12:43.449
the build." Well it doesn't actually
say hey dummy but I will get an alert
137

138
00:12:43.449 --> 00:12:49.300
that I broke something in my Continuous Integration test. So again, big fan of
138

139
00:12:49.300 --> 00:12:53.379
CircleCI. Big fan of doing Continuous
Integration testing. Definitely best
139

140
00:12:53.379 --> 00:12:56.949
practice to be using in your own
software development. So the last thing I
140

141
00:12:56.949 --> 00:13:02.139
need to do is because I had multiple
commits here, I did not change any issues
141

142
00:13:02.139 --> 00:13:07.209
but I do wanna go ahead and close this
because I wanna say that I finished that
142

143
00:13:07.209 --> 00:13:10.990
and in hindsight what I should have done
is I should have tagged this issue
143

144
00:13:10.990 --> 00:13:14.350
number so I would have seen that commits
on it. So that was my mistake.
144

145
00:13:14.350 --> 00:13:17.620
Technically I should go back and amend
those commit messages but I'm gonna
145

146
00:13:17.620 --> 00:13:20.610
call this good for right now.
I'm gonna go ahead
146

147
00:13:22.370 --> 00:13:29.180
and close and comment. And again if I come
over here to the commits in hindsight I
147

148
00:13:29.180 --> 00:13:35.480
should have done a pound 63 on that and
then these commits would have been
148

149
00:13:35.480 --> 00:13:38.779
associated with that task. So that was a
mistake that I made. But just be
149

150
00:13:38.779 --> 00:13:42.320
cognizant of that. If you're using an
issue tracker like that, I got into a
150

151
00:13:42.320 --> 00:13:46.250
pattern just to enclose as close as an
issue number. But if I have multiple
151

152
00:13:46.250 --> 00:13:51.440
commits, I am doing get something like
this. I can go in and either amend this
152

153
00:13:51.440 --> 00:13:56.140
or when I did the commits I should have
added a pound 63. So it would be
153

154
00:13:56.140 --> 00:13:59.630
associated with that issue so if I look
up that issue I could have seen the
154

155
00:13:59.630 --> 00:14:02.960
commits. But minor details but
just wanna make sure that you're aware
155

156
00:14:02.960 --> 00:14:07.670
of that best practice and point out my
home personal little mistake there. Okay
156

157
00:14:07.670 --> 00:14:12.260
I have an addition here. A number you are
having problems with CircleCI building
157

158
00:14:12.260 --> 00:14:18.200
properly and what's happening the error
that you can see is let me jump down to
158

159
00:14:18.200 --> 00:14:24.080
the bottom here.  You're gonna see the
Surefire the forked VM terminated and
159

160
00:14:24.080 --> 00:14:30.320
what's happening since I produced this
Java 8 there is a release to Java 8 and
160

161
00:14:30.320 --> 00:14:35.209
the CircleCI team updated the base
image and in that base image with the
161

162
00:14:35.209 --> 00:14:41.480
updated Java 8 JDK, there's a problem
with Maven. It is not happy. The solution
162

163
00:14:41.480 --> 00:14:46.910
I saw this in a different project and the
solution is to upgrade to Java 11.
163

164
00:14:46.910 --> 00:14:52.459
I've upgraded the project to Java 11. I
detail this in section 12 of the course.
164

165
00:14:52.459 --> 00:14:57.560
I've recorded a couple of videos detailing
this out for people proceeding through
165

166
00:14:57.560 --> 00:15:03.800
the course. If you do encounter this,
the solution is to upgrade to a Java 11
166

167
00:15:03.800 --> 00:15:11.029
and you can see here, I didn't make any
code changes. This build is now
167

168
00:15:11.029 --> 00:15:14.570
functioning normally and the only
changes I had to upgrade a number of
168

169
00:15:14.570 --> 00:15:19.070
dependencies for Java 11 to and also
bring the project and compile
169

170
00:15:19.070 --> 00:15:23.060
everything up to Java 11. That has been
done at the project level and it is
170

171
00:15:23.060 --> 00:15:28.310
detailed in section 12 of the course. So
I'm trying to integrate this in. This is
171

172
00:15:28.310 --> 00:15:33.260
number change. Have breaking change that
happened inside of the the JDK and when
172

173
00:15:33.260 --> 00:15:37.749
they updated that, that started to break it.
At the time of the recording, right
173

174
00:15:37.749 --> 00:15:43.929
now it is November 2018, Java 8 is
going into D support at the end of the
174

175
00:15:43.929 --> 00:15:49.239
year. So it's no longer being officially
supported by Oracle Corporation and Java
175

176
00:15:49.239 --> 00:15:54.579
11 is out and that is the LTS release so
will be on Java 11 for the foreseeable
176

177
00:15:54.579 --> 00:15:59.799
future. This is gonna be the first module
of course upgraded to Java 11. In Q1 of
177

178
00:15:59.799 --> 00:16:05.049
2019, I'll be upgrading the entire course
to run and function on Java 11. But at
178

179
00:16:05.049 --> 00:16:08.529
this point in time, if you do hit this
error and you wanna see CircleCI
179

180
00:16:08.529 --> 00:16:12.549
executing properly upgrade to Java 11.
You can see that detailed out in section
180

181
00:16:12.549 --> 00:16:16.089
12 of the course and I'm not gonna
update anything from there so it
181

182
00:16:16.089 --> 00:16:19.749
happened as we're proceeding through
there. So if you need help upgrading to
182

183
00:16:19.749 --> 00:16:24.549
Java 11, that is in section 12 of the
course and that will resolve the 
183

184
00:16:24.549 --> 00:16:27.779
CircleCI issues that you're seeing.
