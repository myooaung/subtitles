WEBVTT
0
1
00:00:04.700 --> 00:00:09.090
Alright, one configuration option we have
to use for external properties and
1

2
00:00:09.090 --> 00:00:13.230
Spring Boot is YAML and in this video
we're going to take a little
2

3
00:00:13.230 --> 00:00:16.890
introduction to the YAML syntax. If
you're familiar with YAML, go ahead
3

4
00:00:16.890 --> 00:00:21.630
and skip this. If not, continue on. We're
going to get into the YAML syntax. Now
4

5
00:00:21.630 --> 00:00:26.670
YAML originally stood for yet another
markup language, like we really
5

6
00:00:26.670 --> 00:00:30.689
do need another markup language out
there. The Authors and the people
6

7
00:00:30.689 --> 00:00:37.020
working at it actually changed it to mean
'YAML Ain't Markup Language.' So they had a
7

8
00:00:37.020 --> 00:00:42.059
little play on words there because YAML
is more suited towards describing data
8

9
00:00:42.059 --> 00:00:46.050
structures than it is being an actual
markup language. Now one of the nice
9

10
00:00:46.050 --> 00:00:50.489
things about YAML or I don't know if
it's actually nice enough, but pleasant
10

11
00:00:50.489 --> 00:00:55.199
on the eye is the YAML syntax in the
formatting and how the spacing works to
11

12
00:00:55.199 --> 00:01:00.420
designate properties and you'll see that
here in action. But for a new beginner
12

13
00:01:00.420 --> 00:01:05.460
with YAML, if you're first using
YAML, the spacing is very very important.
13

14
00:01:05.460 --> 00:01:10.320
Some people like to end done with two
spaces, some people like to do four, tabs are
14

15
00:01:10.320 --> 00:01:15.780
definitely no no. That will not make
YAML very happy. But at least two
15

16
00:01:15.780 --> 00:01:21.060
spaces, four if you prefer is fine but
there it really isn't a hard rule there
16

17
00:01:21.060 --> 00:01:27.150
but the YAML syntax, if you have
things off you'll see how we define a
17

18
00:01:27.150 --> 00:01:33.720
list by defining dashes and properties.
If you have that spacing off, it will
18

19
00:01:33.720 --> 00:01:37.470
definitely cause you headaches. So I'm
going to jump over to IntelliJ and step
19

20
00:01:37.470 --> 00:01:42.329
you through some examples in the YAML
syntax. It is really simple and it's actually
20

21
00:01:42.329 --> 00:01:47.909
kind of fun to code in. Alright let's
take a look at some YAML. So I am going
21

22
00:01:47.909 --> 00:01:54.570
to create a file under resources and I
am going to call that just example.yml
22

23
00:01:54.570 --> 00:02:03.420
and the extension you typically want to
use is yml. Now let's start taking a look
23

24
00:02:03.420 --> 00:02:10.170
at the syntax of this. Now if you start
off with a pound, see that that becomes a
24

25
00:02:10.170 --> 00:02:15.530
comment and anything that you have
as a comment is going to be ignored by
25

26
00:02:15.530 --> 00:02:20.360
YAML as far as it being a
data property. So YAML is used to
26

27
00:02:20.360 --> 00:02:29.240
describe data structures and one
way we can do that is something like. So
27

28
00:02:29.240 --> 00:02:35.450
now I just set up a property called name
and gave it my name. Now you can also do
28

29
00:02:35.450 --> 00:02:43.070
list, I did names. And YAML
is very sensitive in spacing so I'd like
29

30
00:02:43.070 --> 00:02:52.040
to use at least two spaces. Some like to
use four. So this is going to create an
30

31
00:02:52.040 --> 00:03:01.340
array of names. So John, Paul and Ringo. So
that's a quick easy way to set up a list
31

32
00:03:01.340 --> 00:03:09.470
and anywhere, you can do inline
comment. So once you hit the pound sign
32

33
00:03:09.470 --> 00:03:13.810
anything on that line after the pound
sight is going to be ignored.
33

34
00:03:13.810 --> 00:03:25.940
Now if I want to do a pound,
I could put single quotes around it. Now
34

35
00:03:25.940 --> 00:03:31.820
that's going to be a value and anything
after that is still going to
35

36
00:03:31.820 --> 00:03:40.090
be picked up. Now we can do more complex
on objects.
36

37
00:03:48.390 --> 00:03:53.230
So that's going to create a book object
with properties of author of Joe Buck
37

38
00:03:53.230 --> 00:03:59.680
and random house. So that's a handy way
to define more complex things. Now
38

39
00:03:59.680 --> 00:04:11.740
Boolean's can be tricky. So that is a
Boolean of yes. So if I do another truth,
39

40
00:04:11.740 --> 00:04:23.400
I can just do true like that and that will
come up as a Boolean. I can do more true,
40

41
00:04:23.400 --> 00:04:30.010
so lower case true. So all these are
going to be evaluating a true. I do
41

42
00:04:30.010 --> 00:04:39.340
false, so I can do no. So any of those
values would evaluate to Boolean of
42

43
00:04:39.340 --> 00:04:50.710
false. Now some of the strings that you
need to watch, I do string_vel. So if I
43

44
00:04:50.710 --> 00:04:55.420
do that with the single tick in there,
YAML is not going to like that. So to
44

45
00:04:55.420 --> 00:05:00.090
escape that what we want to do is double
quotes around it.
45

46
00:05:00.090 --> 00:05:07.060
Now YAML recognizes that full line
as a string and then you can get in
46

47
00:05:07.060 --> 00:05:16.600
trouble also with strings when you do
something like this. So see how I have
47

48
00:05:16.600 --> 00:05:19.870
that second colon in there. Yaml
definitely will not like that. That's
48

49
00:05:19.870 --> 00:05:25.630
another one where you have to go in and
escape out the string. Then you can also
49

50
00:05:25.630 --> 00:05:34.960
do a couple multiple line characters. So
I'm going to include new lines and the
50

51
00:05:34.960 --> 00:05:42.460
pipe character is going to say to read
in everything. So that whole example
51

52
00:05:42.460 --> 00:05:48.250
would get brought in and that string
would include the new lines. Now if I say
52

53
00:05:48.250 --> 00:05:57.660
ignore, put in that character
and typing this is just one long string.
53

54
00:05:57.660 --> 00:06:02.550
So in that case when this gets parsed in
the YAML processor that will just be
54

55
00:06:02.550 --> 00:06:07.260
one long string and the new lines
will get dropped. So that's an important
55

56
00:06:07.260 --> 00:06:10.800
distinction if you have multiple lines
of text that you need to enter into
56

57
00:06:10.800 --> 00:06:15.780
YAML. Alright that was YAML. So in the next video we are going to
57

58
00:06:15.780 --> 00:06:20.430
take a look at changing over our Spring
Boot configuration to utilise YAML
58

59
00:06:20.430 --> 00:06:25.100
for the properties and I'll show you how
to set that up in the next video.
