WEBVTT
0
1
00:00:04.279 --> 00:00:10.170
Alright! So I'm going to go ahead and
review the assignment. And just to recap
1

2
00:00:10.170 --> 00:00:16.139
we're creating a data model. Basically,
Plain Old Java Objects that we're gonna
2

3
00:00:16.139 --> 00:00:20.850
use for binding, coming up in the class.
So what we're gonna do is set up these
3

4
00:00:20.850 --> 00:00:25.080
POJOs and we'll use Spring Boot, which is
going to under the covers use Jackson to
4

5
00:00:25.080 --> 00:00:31.170
bind the JSON response from the web
service to our Java objects. And what we
5

6
00:00:31.170 --> 00:00:34.800
wanna do is set up these Java objects.
So, let's go over to postman and take a
6

7
00:00:34.800 --> 00:00:39.629
look at this. So the data, that we wanna
look at, so we're getting back a JSON
7

8
00:00:39.629 --> 00:00:45.570
object with data in it. And right here is
what we wanna call a user object. So,
8

9
00:00:45.570 --> 00:00:50.579
this area that I'm highlighting is the
JSON that we wanna convert to a user
9

10
00:00:50.579 --> 00:00:53.940
object. You can see that's got an
embedded objects like name, location,
10

11
00:00:53.940 --> 00:00:58.920
login, job, and billing. These are all
embedded objects that we wanna have
11

12
00:00:58.920 --> 00:01:04.739
Java classes for. So we're gonna create a
POJO data model for it. And i'm going to
12

13
00:01:04.739 --> 00:01:11.510
copy this right now. Saying a command C
and postman. And let's slide this over.
13

14
00:01:11.510 --> 00:01:19.110
And come up to Chrome. And I am going to
cheat here because I don't wanna type
14

15
00:01:19.110 --> 00:01:24.030
all that out. And I did a quick Google
search and found a JSON to POJO
15

16
00:01:24.030 --> 00:01:29.960
generator and actually it kind of works
pretty good. So we just come in here, and
16

17
00:01:29.960 --> 00:01:36.680
paste in our data. And then, we
got in here guru.springframework.api.domain.
17

18
00:01:36.680 --> 00:01:42.570
Just like the assignment.
And we got a class name of User and the
18

19
00:01:42.570 --> 00:01:47.520
source type is JSON, not JSON Schema,
but JSON. And I'm not gonna use any
19

20
00:01:47.520 --> 00:01:51.180
annotations even though we're using
Jackson not Jackson 2 under the covers.
20

21
00:01:51.180 --> 00:01:54.780
Right now, I'm not gonna add any
annotations. Jackson does a pretty good
21

22
00:01:54.780 --> 00:01:59.610
job of binding. And I'm gonna work
through that and when we get to that
22

23
00:01:59.610 --> 00:02:03.630
point we'll see how Jackson does. And if
we run into any problems, we'll actually
23

24
00:02:03.630 --> 00:02:07.020
go in and take that as a learning
opportunity to work with Jackson a
24

25
00:02:07.020 --> 00:02:11.580
little bit closer. So let's see here. No
more options there. I'm just gonna leave
25

26
00:02:11.580 --> 00:02:15.440
these two
mostly defaults. And then if we do a
26

27
00:02:15.440 --> 00:02:20.720
preview. We can see these are the Java
classes that's gonna create. And if I
27

28
00:02:20.720 --> 00:02:26.270
come down here. Do a zip. Now, I can
download that. And I'm gonna jump
28

29
00:02:26.270 --> 00:02:31.940
ahead now and show you this inside of
IntelliJ. Now jumped ahead, you can
29

30
00:02:31.940 --> 00:02:36.730
see that I am on the Git branch data-model. And here, we have the Billing.
30

31
00:02:36.730 --> 00:02:42.590
Actually, let's take a look at the User.
And it an implements a Serializable, which is
31

32
00:02:42.590 --> 00:02:46.550
exactly what we want. A case we want
serializes class. And we can see that we
32

33
00:02:46.550 --> 00:02:49.700
have all the getters and setters there.
This is all generated for us, based on
33

34
00:02:49.700 --> 00:02:56.150
the Json, that we gave the tool. And we
can see that we've set up, like we just
34

35
00:02:56.150 --> 00:03:02.840
click into Location. So you can see that.
Come back to User. We have that Login
35

36
00:03:02.840 --> 00:03:06.800
object. So we have a number of different
things there. So all this was generated
36

37
00:03:06.800 --> 00:03:10.910
for us and we are all set to go. So I'm
gonna check this into GitHub. And
37

38
00:03:10.910 --> 00:03:16.040
coming up in the course, we are gonna
use this with RestTemplate to bind that
38

39
00:03:16.040 --> 00:03:22.210
response coming back from that API
that we've been exercising.
