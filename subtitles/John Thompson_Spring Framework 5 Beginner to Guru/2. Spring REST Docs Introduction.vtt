WEBVTT
1
00:00:00.450 --> 00:00:05.230
In this video we are going to do an introduction to spring rust stocks.

2
00:00:05.270 --> 00:00:06.830
Now you might be wondering what it is.

3
00:00:06.850 --> 00:00:14.380
It is a tool for generating API documentation so obviously as we develop micro servers having properly

4
00:00:14.380 --> 00:00:16.930
documented n points is very important.

5
00:00:16.940 --> 00:00:23.660
This tool was developed by Andy Wilkinson of pivotal he is a pivotal employee and is the primary committee

6
00:00:23.710 --> 00:00:24.990
on Rostock.

7
00:00:25.000 --> 00:00:27.970
So he's added in a lot of great functionality to it.

8
00:00:28.390 --> 00:00:31.380
So once spring rest stocks does in a nutshell is it.

9
00:00:31.410 --> 00:00:36.700
It's going to hook into your controller test and these tests are going to be used to generate documentation

10
00:00:36.700 --> 00:00:37.500
snippets.

11
00:00:37.540 --> 00:00:43.000
It's kind of a cool approach because you're doing your test driven development at the same time you're

12
00:00:43.000 --> 00:00:47.290
going to allow those test to drive your documentation generation.

13
00:00:47.350 --> 00:00:49.120
So pretty clever idea.

14
00:00:49.120 --> 00:00:54.700
The test will generate snippets there call their small files of documentation and then these snippets

15
00:00:54.760 --> 00:00:59.370
are assembled into final documentation for you a tool called ASCII Doctor.

16
00:00:59.380 --> 00:01:04.420
Now the test clients that are supported are going to be Spring MVC test the web test client.

17
00:01:04.420 --> 00:01:08.550
That's the new reactive stuff in web flux and then also rest assured.

18
00:01:08.560 --> 00:01:14.640
So that is also a testing framework that is going to be supported by spring Russell docs now the test

19
00:01:14.640 --> 00:01:20.580
frameworks that are going to be supported primarily going to be Jane bass so Jane at five Jane for a

20
00:01:20.720 --> 00:01:23.690
spark actually in a makeover spot is very close to Jane.

21
00:01:24.090 --> 00:01:29.010
And then test energy there's going to be some additional configuration required for that.

22
00:01:29.040 --> 00:01:30.650
I'm not going to be covering test energy.

23
00:01:30.690 --> 00:01:36.000
You'll need to refer to documentation but if you're a test and a user that is an option that you can

24
00:01:36.000 --> 00:01:37.430
have.

25
00:01:37.620 --> 00:01:41.800
Now the snippets that are going to be generated it does some interesting things.

26
00:01:41.820 --> 00:01:45.090
These are the default snippets that are going to be generated.

27
00:01:45.090 --> 00:01:52.500
Curl also command line curl command is get generated the AC DP request and response so there's going

28
00:01:52.500 --> 00:02:02.220
to be documentation of those H2 ETP i.e. that's also a command line tool to invoke the API and then

29
00:02:02.220 --> 00:02:03.900
request body response body.

30
00:02:03.900 --> 00:02:09.420
So these are all documentation snippets that are going to be generated by default out of the box using

31
00:02:09.420 --> 00:02:10.220
spring rest.

32
00:02:11.420 --> 00:02:16.530
Now to help you envision what's going to happen you're testing it and generate a variety of snippets.

33
00:02:16.560 --> 00:02:21.490
So these are just small files with snippets of documentation in it.

34
00:02:21.870 --> 00:02:27.120
So you'll get a collection of these and ask doctor is going to work in conjunction with a template to

35
00:02:27.120 --> 00:02:29.330
assemble your final documentation.

36
00:02:29.340 --> 00:02:35.040
So ask a doctor kind of assembles everything together so to speak in kind of a interesting approach

37
00:02:35.460 --> 00:02:39.980
might be a little confusing but as we get through the course and show you this setup we'll go through

38
00:02:40.030 --> 00:02:43.540
step by step and you'll you'll see how this all fits together.

39
00:02:43.560 --> 00:02:48.040
Now there's a few options you can use markdown rather than ask a doctor.

40
00:02:48.100 --> 00:02:53.690
I'm not going to be covering that but that as an option maven and grail may be used for the build process.

41
00:02:53.700 --> 00:02:59.280
I'll be focusing on maven and then you can also optionally package the documentation to be served up

42
00:02:59.280 --> 00:03:06.920
a static content be a spring boot so you can do this right in your build process and then also ask doctors

43
00:03:06.970 --> 00:03:13.470
very very versatile so you have a ton of ways to customize your final output of your documentation so

44
00:03:13.890 --> 00:03:16.610
ask your doctor is a huge tool.

45
00:03:16.620 --> 00:03:22.200
I'm not going to explore all the nooks and crannies but it is a very flexible tool for working with

46
00:03:22.200 --> 00:03:24.320
documentation.

47
00:03:24.360 --> 00:03:30.290
Now there's also a variety of third party extensions available for spring rest Doc and these are the

48
00:03:30.740 --> 00:03:32.000
tools that are available right now.

49
00:03:32.000 --> 00:03:37.280
There might be more in the future but right now you have risk docs where Mark that's going to allow

50
00:03:37.280 --> 00:03:38.730
you to generate wire marks.

51
00:03:38.750 --> 00:03:42.660
So that's actually kind of cool to have rest stocks extension jersey.

52
00:03:42.650 --> 00:03:49.010
So Jersey has its own test framework so that allow you to use Spring rescue docs with the jersey framework

53
00:03:49.280 --> 00:03:54.800
and then a spring auto rest docs rust dogs can do an all the documentation and your tests can get be

54
00:03:54.800 --> 00:03:55.990
a little verbose.

55
00:03:56.180 --> 00:04:02.870
This is going to use reflection to help automatically document the requests and response parameters.

56
00:04:02.870 --> 00:04:08.800
And then there's also rest docs API spec so I am a big fan of open API 3.

57
00:04:08.870 --> 00:04:16.400
This is going to allow you to generate open API specifications from Rostock so kind of an interesting

58
00:04:16.400 --> 00:04:17.450
approach there as well.

59
00:04:17.450 --> 00:04:23.480
So if you need to generate that this is a tool that you can use for that coming up in the course what

60
00:04:23.480 --> 00:04:28.340
we're going to be doing in this section is I have a brand new example project we will go in and do a

61
00:04:28.340 --> 00:04:29.260
code review of that.

62
00:04:29.270 --> 00:04:35.390
So it's just going to be a simple rest style project then we will look at configuring maven support

63
00:04:35.390 --> 00:04:36.540
for rest stocks.

64
00:04:36.620 --> 00:04:37.850
I mean a focus on doing J.

65
00:04:37.850 --> 00:04:39.190
Unit five tests.

66
00:04:39.250 --> 00:04:44.870
So Jane AFIS went out for some time now and I'll be approaching the June for is pretty similar.

67
00:04:44.870 --> 00:04:48.550
There's just a couple minor nuances in the configuration that's well documented.

68
00:04:48.560 --> 00:04:53.140
So if you need Jane for the spring documentation is very good on that.

69
00:04:53.750 --> 00:04:58.770
And then we'll go through and modify the test of the project to have we'll have existing control or

70
00:04:58.770 --> 00:05:04.460
tests and we'll modify those controller tests to start doing documentation so that's what you can expect

71
00:05:04.460 --> 00:05:05.840
coming up in the section.
