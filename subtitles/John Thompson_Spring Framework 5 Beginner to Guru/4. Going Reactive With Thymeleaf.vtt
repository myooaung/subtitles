WEBVTT
0
1
00:00:05.306 --> 00:00:06.531
Okay, in this video we are gonna go
1

2
00:00:06.531 --> 00:00:08.628
fully reactive with Thymeleaf.
2

3
00:00:08.628 --> 00:00:11.070
And, what we wanna do is, we've kind of stopped
3

4
00:00:11.070 --> 00:00:14.397
things in the reactive chain right at the controller
4

5
00:00:14.397 --> 00:00:16.688
and I've got the IndexController up
5

6
00:00:16.688 --> 00:00:18.583
and I've made one small tweak here.
6

7
00:00:18.583 --> 00:00:21.702
So you can see I just click down the changes there
7

8
00:00:21.702 --> 00:00:25.081
and we were doing a collectList and block
8

9
00:00:25.081 --> 00:00:27.523
and that was causing that reactive type
9

10
00:00:27.523 --> 00:00:30.052
to return back to Thymeleaf,
10

11
00:00:30.052 --> 00:00:32.795
basically a List of the recipes.
11

12
00:00:32.795 --> 00:00:36.754
And in this case, we wanna return back that Flux.
12

13
00:00:36.754 --> 00:00:39.712
Because if you remember, if I come here,
13

14
00:00:39.712 --> 00:00:42.866
we are turning back Flux of recipes to Thymeleaf
14

15
00:00:42.866 --> 00:00:44.552
or out of that service.
15

16
00:00:44.552 --> 00:00:46.747
Now we wanna return that directly to Thymeleaf
16

17
00:00:46.747 --> 00:00:49.504
so that reactive type gets pushed up the chain
17

18
00:00:49.504 --> 00:00:52.465
into the Thymeleaf templating engine.
18

19
00:00:52.465 --> 00:00:57.169
Now we are doing that and I do have it running here.
19

20
00:00:57.169 --> 00:01:01.150
And let's come over here and take a look at Chrome.
20

21
00:01:01.150 --> 00:01:04.051
I am gonna do a refresh and for some reason
21

22
00:01:04.051 --> 00:01:07.288
Google Chrome thinks this is an Italian, or at least it did.
22

23
00:01:07.288 --> 00:01:09.132
It keeps changing it's mind on me.
23

24
00:01:09.132 --> 00:01:11.275
And we can see, this is the index page
24

25
00:01:11.275 --> 00:01:13.533
and now it's being rendered with that reactive type.
25

26
00:01:13.533 --> 00:01:16.209
And we can come in and actually prove this
26

27
00:01:16.209 --> 00:01:19.164
so let's come in and stop this.
27

28
00:01:19.164 --> 00:01:19.997
Stop you.
28

29
00:01:22.243 --> 00:01:26.725
And I am gonna put a debug breakpoint here.
29

30
00:01:26.725 --> 00:01:28.164
Let's go ahead and re-run him
30

31
00:01:28.164 --> 00:01:30.544
but bring him up in the debugger.
31

32
00:01:30.544 --> 00:01:32.327
We are gonna take a look at that.
32

33
00:01:32.327 --> 00:01:35.660
While, I am here, and some old debuggers
33

34
00:01:36.713 --> 00:01:38.637
we don't need that.
34

35
00:01:38.637 --> 00:01:40.554
Don't need you anymore.
35

36
00:01:41.613 --> 00:01:45.007
And now we are up there and we won't hit
36

37
00:01:45.007 --> 00:01:46.840
that until we refresh.
37

38
00:01:47.752 --> 00:01:51.937
So refresh this page that triggers the breakpoint.
38

39
00:01:51.937 --> 00:01:56.104
Now we can see the model here and we come down here
39

40
00:01:59.940 --> 00:02:04.273
and right here we have our recipes set on the model
40

41
00:02:04.273 --> 00:02:06.743
and we can see that is a Flux.
41

42
00:02:06.743 --> 00:02:08.695
So that Flux hasn't been triggered yet
42

43
00:02:08.695 --> 00:02:12.873
so it's just a pointer to that data coming out of Mongo.
43

44
00:02:12.873 --> 00:02:16.319
So once the Thymeleaf template picks that up
44

45
00:02:16.319 --> 00:02:17.870
and renders that, that's when that Flux
45

46
00:02:17.870 --> 00:02:19.924
is gonna get triggered to stream the data
46

47
00:02:19.924 --> 00:02:22.652
out of Mongo into the Thymeleaf template.
47

48
00:02:22.652 --> 00:02:25.617
I am gonna go ahead and let that play now.
48

49
00:02:25.617 --> 00:02:29.750
Now one other thing I that wanted to do is
49

50
00:02:29.750 --> 00:02:32.505
let me bring up the IndexControllerTest
50

51
00:02:32.505 --> 00:02:36.324
and tried number of different things here.
51

52
00:02:36.324 --> 00:02:40.284
Effectively now that we are running on WebFlux
52

53
00:02:40.284 --> 00:02:42.827
we broke the old MVC stuff so the mockMvc
53

54
00:02:42.827 --> 00:02:46.031
isn't gonna work because that is tied to Servlet API.
54

55
00:02:46.031 --> 00:02:50.198
Now we do get a new webTestClient that we can utilize.
55

56
00:02:51.046 --> 00:02:53.963
And right now, you can see here, I tried to
56

57
00:02:53.963 --> 00:02:56.289
number different things setting it up
57

58
00:02:56.289 --> 00:02:58.046
and I did not have any luck.
58

59
00:02:58.046 --> 00:03:00.745
I actually spent several hours working on this,
59

60
00:03:00.745 --> 00:03:01.949
trying to get this test going,
60

61
00:03:01.949 --> 00:03:05.712
so let me show you what's happening right now.
61

62
00:03:05.712 --> 00:03:08.379
I'll go ahead and run this test.
62

63
00:03:11.165 --> 00:03:14.709
And, coming up here, we are getting a 500 error
63

64
00:03:14.709 --> 00:03:17.664
and if I scroll all the way to the top
64

65
00:03:17.664 --> 00:03:20.083
we are not rendering that view 'index'
65

66
00:03:20.083 --> 00:03:22.838
and that's why I was coming in here trying to manually
66

67
00:03:22.838 --> 00:03:26.014
set up Thymeleaf, setting up template resolver,
67

68
00:03:26.014 --> 00:03:28.244
the FluxTemplateEngine, the Thymeleaf.
68

69
00:03:28.244 --> 00:03:30.415
What's happening is when Spring Boot runs
69

70
00:03:30.415 --> 00:03:34.484
in a test mode, it brings up a slice of the configuration
70

71
00:03:34.484 --> 00:03:38.484
and at this time it seems like the team has not completed
71

72
00:03:38.484 --> 00:03:39.683
development around this.
72

73
00:03:39.683 --> 00:03:41.814
So, the WebTestClient works great for
73

74
00:03:41.814 --> 00:03:43.861
returning back JSON and
74

75
00:03:43.861 --> 00:03:45.790
we are gonna see that very soon in the course
75

76
00:03:45.790 --> 00:03:49.584
but right now, it's not, I don't think it's out of the oven
76

77
00:03:49.584 --> 00:03:52.227
so to speak for doing testing with Thymeleaf.
77

78
00:03:52.227 --> 00:03:53.894
And, what are we on,
78

79
00:03:55.714 --> 00:03:59.562
I think we're just on M3 if I remember right.
79

80
00:03:59.562 --> 00:04:02.838
Yeah, so we are still on M3 so I am recording this video
80

81
00:04:02.838 --> 00:04:04.255
in August of 2017
81

82
00:04:05.592 --> 00:04:08.918
and Spring Boot 2 has not gone GA yet.
82

83
00:04:08.918 --> 00:04:13.139
So, that is expected probably towards the end of this year.
83

84
00:04:13.139 --> 00:04:16.172
So the Spring Boot 2 stuff is still catching up.
84

85
00:04:16.172 --> 00:04:18.575
The WebTest stuff is still very new
85

86
00:04:18.575 --> 00:04:20.415
and I expect they are gonna include
86

87
00:04:20.415 --> 00:04:22.462
support for Thymeleaf in the very near future
87

88
00:04:22.462 --> 00:04:24.142
but it looks like it's just not there yet.
88

89
00:04:24.142 --> 00:04:26.430
So, I am going to re-record this video.
89

90
00:04:26.430 --> 00:04:30.739
So, for the time being our test over our controllers
90

91
00:04:30.739 --> 00:04:32.365
are gonna be a little limited.
91

92
00:04:32.365 --> 00:04:36.190
But once the Spring Boot community does catch up,
92

93
00:04:36.190 --> 00:04:38.257
I am gonna go back and re-record this video
93

94
00:04:38.257 --> 00:04:40.101
with the new features that will support Thymeleaf
94

95
00:04:40.101 --> 00:04:42.564
but, at this point in time, not having any luck
95

96
00:04:42.564 --> 00:04:44.402
with supporting that.
96

97
00:04:44.402 --> 00:04:47.641
I tried a number of different ways, did not have any luck
97

98
00:04:47.641 --> 00:04:49.847
so I am just gonna put pause on that
98

99
00:04:49.847 --> 00:04:53.334
and we will come back and bring up our testing
99

100
00:04:53.334 --> 00:04:54.730
for the controllers up to speed
100

101
00:04:54.730 --> 00:04:57.910
because we definitely want to have our test coverage there.
101

102
00:04:57.910 --> 00:05:00.319
But again, like I said, this is still fairly new stuff
102

103
00:05:00.319 --> 00:05:05.063
and this Spring Boot, so Spring 5 is going GA next month
103

104
00:05:05.063 --> 00:05:07.766
and Spring Boot is gonna be catching up
104

105
00:05:07.766 --> 00:05:10.115
so there is still some configuration, auto configuration
105

106
00:05:10.115 --> 00:05:11.972
that needs to be done within Spring Boot.
106

107
00:05:11.972 --> 00:05:15.124
I did give it a college try and did not get through it
107

108
00:05:15.124 --> 00:05:17.056
but we will get there soon.
108

109
00:05:17.056 --> 00:05:18.867
And then just a quick note on the source code,
109

110
00:05:18.867 --> 00:05:22.077
I am not gonna check the stuff into source control
110

111
00:05:22.077 --> 00:05:23.341
so I am gonna get this cleaned up
111

112
00:05:23.341 --> 00:05:25.148
and just leave the test ignored
112

113
00:05:25.148 --> 00:05:27.367
with the Mock MVC stuff in there
113

114
00:05:27.367 --> 00:05:29.693
and we will be coming back to visit this.
114

115
00:05:29.693 --> 00:05:31.632
I'll probably just completely re-record this video
115

116
00:05:31.632 --> 00:05:35.632
with a new test of at some point in the future.
