WEBVTT
0
1
00:00:03.859 --> 00:00:07.980
In this video, we're gonna go ahead and
set up a POJO that we'll be using to
1

2
00:00:07.980 --> 00:00:12.480
send messages with. So, we're gonna do
a very very simple example of a POJO. So,
2

3
00:00:12.480 --> 00:00:17.490
I'm gonna come over here. And, what I
will do is I come in here, I'm gonna
3

4
00:00:17.490 --> 00:00:24.199
create a New Package. We'll call that
model like so.
4

5
00:00:24.199 --> 00:00:30.349
And, let's do this. We'll call a Java
class. I know you will do it Hello. Just
5

6
00:00:30.349 --> 00:00:34.760
do a HelloWorldMessage like so. And, we
will go ahead and add that into Github.
6

7
00:00:34.760 --> 00:00:45.579
And, let's come in do private
UUID. I'll just call it an id and
7

8
00:00:45.579 --> 00:00:52.070
private String and we'll call it just do
a message property there. And, let's also
8

9
00:00:52.070 --> 00:00:58.430
take advantage of Project Lombok here. So,
I'm gonna come in and say @Data. Let's
9

10
00:00:58.430 --> 00:01:05.780
do a @Builder as well. So do the Builder
pattern and then let's do @AllArgsConstructor
10

11
00:01:05.780 --> 00:01:11.929
and @NoArgsConstructor. So,
this is gonna setup Project Lombok. And,
11

12
00:01:11.929 --> 00:01:18.080
just as a quick recap, be sure under
settings you won't be coming up here and
12

13
00:01:18.080 --> 00:01:25.490
taking a look at under Build, Compiler,
Annotation Processors. Make sure that you
13

14
00:01:25.490 --> 00:01:30.500
have a Enable annotation processing and
then also to get them from the class
14

15
00:01:30.500 --> 00:01:34.670
path. Because if you do not enable that
especially inside of IntelliJ, what
15

16
00:01:34.670 --> 00:01:38.930
Project Lombok is doing for you is not
gonna be picking up things properly.
16

17
00:01:38.930 --> 00:01:43.729
And then, I'm gonna go ahead and apply
that. And then also, we can also double
17

18
00:01:43.729 --> 00:01:53.590
check plugins. There is a Lombok.
A Project Lombok plugin that does bring
18

19
00:01:53.590 --> 00:01:57.549
some additional functionality to
IntelliJ that will help you out as
19

20
00:01:57.549 --> 00:02:01.119
well. So, if you don't have that, install
it. I may have already had it
20

21
00:02:01.119 --> 00:02:05.590
installed and forgot to mention before.
So, the Project Lombok is also a nice
21

22
00:02:05.590 --> 00:02:09.250
nice feature. And, if you're on a
different IDE, I don't think the plugins
22

23
00:02:09.250 --> 00:02:14.590
are not always necessary. But other ones
such as Eclipse, pretty sure there are
23

24
00:02:14.590 --> 00:02:19.540
also Lombok specific plugins that you
can get for other IDEs if you're using
24

25
00:02:19.540 --> 00:02:24.519
something other than IntelliJ. But, just
to recap here pretty simple project, we
25

26
00:02:24.519 --> 00:02:30.670
created a POJO, its HelloWorldMessage POJO that has two properties - id property
26

27
00:02:30.670 --> 00:02:35.500
and a message property. We are gonna
be using this to send as a JMS message.
27

28
00:02:35.500 --> 00:02:40.510
So, very very simple example but we will
be using this not only to send but also
28

29
00:02:40.510 --> 00:02:44.530
to receive as a JMS message. And, we'll be
configuring that going forward in the
29

30
00:02:44.530 --> 00:02:49.569
course. And, it's one thing I do wanna
add to this. What we could do here is we
30

31
00:02:49.569 --> 00:02:55.510
could do implements Serializable. So, when
you start doing on JMS messages if we
31

32
00:02:55.510 --> 00:02:58.660
were going to be sending this as a Java
object, we'd have to implement
32

33
00:02:58.660 --> 00:03:05.040
Serializable. And, when you do implement
that, a best practice is to have this
33

34
00:03:05.040 --> 00:03:11.829
serial version number from the Java
serialized. If you read the documentation
34

35
00:03:11.829 --> 00:03:16.600
here, this is considered a best practice.
If you do not do it, Java will create one
35

36
00:03:16.600 --> 00:03:23.410
automatically for you. So, I'm gonna go
ahead and add that like so. And, you can
36

37
00:03:23.410 --> 00:03:28.000
see IntelliJ gives me a little pop-up
there. I'm gonna randomly go ahead
37

38
00:03:28.000 --> 00:03:32.650
and change that to a different value. So,
a different random log. Now, this is gonna
38

39
00:03:32.650 --> 00:03:36.160
be optional especially for what we
are doing in this section of the course
39

40
00:03:36.160 --> 00:03:40.959
because what we're gonna be doing
coming up is we will be sending this as
40

41
00:03:40.959 --> 00:03:46.870
a text message but as JSON. But if we
were to send this as a JMS object message,
41

42
00:03:46.870 --> 00:03:51.010
we would definitely need the
Serializable for everything to be happy.
42

43
00:03:51.010 --> 00:03:56.350
But in our case, we do not because we
will be sending this as a text message
43

44
00:03:56.350 --> 00:04:01.150
as JSON. Both has a sender and also the
receiver. So, we will not be dealing with
44

45
00:04:01.150 --> 00:04:05.710
Java Serialization. But
what I did want to show you here is to
45

46
00:04:05.710 --> 00:04:09.670
have that interface implemented. So,
that's always a not a bad thing to do
46

47
00:04:09.670 --> 00:04:13.960
generally even though we are gonna be
using JSON further down the road. Here,
47

48
00:04:13.960 --> 00:04:17.890
if we ever did need to serialize this, we
already have the work done. So, kind of
48

49
00:04:17.890 --> 00:04:21.820
something like I like to be in the habit
of doing is to have that implemented
49

50
00:04:21.820 --> 00:04:26.470
especially when you're using JMS. There
could be a use case for that. Maybe, maybe
50

51
00:04:26.470 --> 00:04:31.450
not. But I did wanna show you guys how
to implement Serializable. And, also this
51

52
00:04:31.450 --> 00:04:36.640
serial version ID so that then it's also
very important. That helps you keep your
52

53
00:04:36.640 --> 00:04:39.820
version straight without getting things
crossed up when you're dealing with
53

54
00:04:39.820 --> 00:04:43.320
multiple deployments.
