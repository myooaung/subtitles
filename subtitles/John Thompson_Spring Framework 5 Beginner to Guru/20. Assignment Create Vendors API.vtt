WEBVTT
0
1
00:00:04.730 --> 00:00:08.940
Okay. In this video, I have an assignment
for you, and we are going to go out and
1

2
00:00:08.940 --> 00:00:12.030
create the Vendors API. So this is gonna be a little bit of a challenging
2

3
00:00:12.030 --> 00:00:16.049
assignment because you're gonna have a
lot of coding to do. But we will go
3

4
00:00:16.049 --> 00:00:19.980
through everything. We wanna take
that API that we've been working with
4

5
00:00:19.980 --> 00:00:24.029
the fruit shop vendors API and we wanna develop everything for it. We've gone
5

6
00:00:24.029 --> 00:00:27.599
through a lot of these examples. So you
should be comfortable doing all this by
6

7
00:00:27.599 --> 00:00:32.160
now. So what we wanna do is create a
Main Class, Repository, Service Layer,
7

8
00:00:32.160 --> 00:00:37.140
a Data Transfer Object or DTO, Type
Converter, and of course, we're gonna
8

9
00:00:37.140 --> 00:00:40.980
be using test-driven development all
along the way. What we wanna do is
9

10
00:00:40.980 --> 00:00:47.129
also create the controller, that's gonna handle all these options. The API
10

11
00:00:47.129 --> 00:00:50.910
spec that we have does have some product
API calls in it. We're gonna skip over
11

12
00:00:50.910 --> 00:00:55.079
that for now. I just wanna get you
hands-on and complete the entire
12

13
00:00:55.079 --> 00:00:59.430
assignment here of setting up all these
different REST methods. So we're gonna
13

14
00:00:59.430 --> 00:01:06.119
escape out of this and toggle over to
Chrome. So we're gonna skip over the
14

15
00:01:06.119 --> 00:01:12.210
products stuff. And down here at the
bottom, we have the vendors. So this is at
15

16
00:01:12.210 --> 00:01:17.369
the api.predict8.de.
So it's a little Spring consulting shop
16

17
00:01:17.369 --> 00:01:21.720
that has this up. And what we wanna do
is implement all the stuff for vendors.
17

18
00:01:21.720 --> 00:01:26.280
And so, if we look at the GET, we're
gonna have, don't worry about the
18

19
00:01:26.280 --> 00:01:30.540
metadata stuff here, but we wanna do
the vendors name string, so we'll Try it
19

20
00:01:30.540 --> 00:01:38.189
out. And we can see here, that we have the
vendor so we'll need to create a DTO
20

21
00:01:38.189 --> 00:01:44.340
for that, as well as a domain object to
utilize. And of course, we wanna go in
21

22
00:01:44.340 --> 00:01:49.590
and implement all the rest endpoints for
this. So POST, DELETE, GET. So we should have
22

23
00:01:49.590 --> 00:01:54.509
everything working except for these last
two here, that are dealing with products.
23

24
00:01:54.509 --> 00:01:58.560
We are not going to implement those but
I wanna get everything else
24

25
00:01:58.560 --> 00:02:02.700
implemented here. So that is the
assignment. I know it's gonna be a bit of
25

26
00:02:02.700 --> 00:02:06.450
a challenge but I will go through this.
it's gonna be a lot of coding. So I'm not
26

27
00:02:06.450 --> 00:02:11.550
gonna live code this one. Probably take a
half hour to video to complete. I don't
27

28
00:02:11.550 --> 00:02:13.410
think anybody wants to watch me coding
that long.
28

29
00:02:13.410 --> 00:02:18.270
But I will go through a complete code
review and we will have a complete
29

30
00:02:18.270 --> 00:02:23.000
example, checked into GitHub for your
reference.
