WEBVTT
0
1
00:00:04.640 --> 00:00:08.820
Alright! In this video, I have an
assignment for you. We're gonna create a
1

2
00:00:08.820 --> 00:00:13.590
Model and Populate Data. So, what I want
you to do is create a new data model for
2

3
00:00:13.590 --> 00:00:18.930
a Vendor entity and have it, just like
the previous one, we're working with the
3

4
00:00:18.930 --> 00:00:22.890
REST interfaces. We're gonna set up ID,
First Name, Last Name, nothing too complex
4

5
00:00:22.890 --> 00:00:27.180
here. That's gonna be fine for our
purposes of developing RESTful API with
5

6
00:00:27.180 --> 00:00:31.590
the Webflux interface. I also want you
to create a Reactive Repository, just
6

7
00:00:31.590 --> 00:00:35.880
like I did in the last video. And the
nuance, I'm gonna toss to you here is
7

8
00:00:35.880 --> 00:00:39.989
to populate data and startup. So, I've
shown you a couple techniques throughout
8

9
00:00:39.989 --> 00:00:43.500
the course. So there's gonna be a little
bit of a challenge for you to go back
9

10
00:00:43.500 --> 00:00:48.329
and reach into your Spring Framework
tool bag, and I want you to populate that
10

11
00:00:48.329 --> 00:00:52.469
data on startup. And the way the project
is set up right now, you are going to
11

12
00:00:52.469 --> 00:00:57.449
need to have a Mongo database from
running locally. Now, my preference is to
12

13
00:00:57.449 --> 00:01:02.340
run it inside of a Docker Container. I
will show you that in the next video. But,
13

14
00:01:02.340 --> 00:01:08.580
realize that the way I set up the
project we will use MongoDB embedded
14

15
00:01:08.580 --> 00:01:13.680
for test, but it is a test dependency, so
when we start the application, normally,
15

16
00:01:13.680 --> 00:01:18.299
it's gonna be looking to connect to a
local instance of MongoDB. So, you need to
16

17
00:01:18.299 --> 00:01:22.110
have that running. If you wanna use
Docker, that's fantastic. I strongly
17

18
00:01:22.110 --> 00:01:27.030
encourage that. But if you wanna
install MongoDB locally, like you have
18

19
00:01:27.030 --> 00:01:31.200
before in the course, go ahead and do
that. Now, when you populate the data on
19

20
00:01:31.200 --> 00:01:36.810
startup, remember that Mongo is gonna
persist that data. So typically, what I
20

21
00:01:36.810 --> 00:01:41.460
will do, when I'm dealing with a database
that persist data were may and go away and
21

22
00:01:41.460 --> 00:01:46.470
get rebuilt. I will go out and get a
count first, and if that count comes back
22

23
00:01:46.470 --> 00:01:51.439
to zero on the entity that I'm
populating or in Mongo document,
23

24
00:01:51.439 --> 00:01:59.189
then, I will go out and create the seed
data that I wanna be utilizing for my
24

25
00:01:59.189 --> 00:02:04.950
application. So again, just to recap, we're
gonna create a new entity called Vendor.
25

26
00:02:04.950 --> 00:02:10.110
It'll have an ID, First Name, Last Name,
Reactive Repository for that. Then,
26

27
00:02:10.110 --> 00:02:14.350
we're gonna populate data on that.
And remember, you do need to have MongoDB
27

28
00:02:14.350 --> 00:02:18.700
running locally on your system. So, if
you're using OS X, which I hope you are
28

29
00:02:18.700 --> 00:02:23.890
or at least Linux. But if you're still
going on with Windows, be sure to have
29

30
00:02:23.890 --> 00:02:28.000
something up. MongoDB is supported on all
these platforms, and we've already used
30

31
00:02:28.000 --> 00:02:32.230
it in the course. I'm not gonna get too
specific on MongoDB. But this is just a
31

32
00:02:32.230 --> 00:02:36.010
little bit of a challenging assignment.
And in the next video, I am gonna go
32

33
00:02:36.010 --> 00:02:40.770
through this step by step and show you
exactly how to code this up.
