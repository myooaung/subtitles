WEBVTT
0
1
00:00:01.058 --> 00:00:05.309
(mellow music)
1

2
00:00:05.309 --> 00:00:06.142
Alright, in this video
2

3
00:00:06.142 --> 00:00:09.706
we are gonna start adapting our project to use WebFlux.
3

4
00:00:09.706 --> 00:00:13.170
Now, as you may recall, previously we talked about this.
4

5
00:00:13.170 --> 00:00:17.746
We actually have two web APIs that are running in parallel.
5

6
00:00:17.746 --> 00:00:21.302
We have very similar top-level functions,
6

7
00:00:21.302 --> 00:00:24.016
but what we need to do is bring in Spring WebFlux
7

8
00:00:24.016 --> 00:00:26.862
and get rid of the traditional Spring Web MVC.
8

9
00:00:26.862 --> 00:00:28.695
So I've got the official Spring documentation
9

10
00:00:28.695 --> 00:00:30.924
here on the screen.
10

11
00:00:30.924 --> 00:00:34.769
So we will configure the application the same,
11

12
00:00:34.769 --> 00:00:38.279
so we still use @Controller and @RequestMapping.
12

13
00:00:38.279 --> 00:00:39.737
There's some new functionality inside
13

14
00:00:39.737 --> 00:00:42.428
of Spring Framework 5 for router functions,
14

15
00:00:42.428 --> 00:00:44.445
which we haven't got to, but we will.
15

16
00:00:44.445 --> 00:00:48.612
And right now, we are configured using Spring Web MVC.
16

17
00:00:49.519 --> 00:00:51.562
And we wanna switch over to WebFlux.
17

18
00:00:51.562 --> 00:00:55.091
Now, the problem that we're gonna encounter coming up,
18

19
00:00:55.091 --> 00:00:57.803
is right now we do have components
19

20
00:00:57.803 --> 00:01:00.113
that are using the Servlet API.
20

21
00:01:00.113 --> 00:01:02.344
And now we wanna go over to the Reactive Stream stuff.
21

22
00:01:02.344 --> 00:01:06.105
So, when we change the references in our project,
22

23
00:01:06.105 --> 00:01:07.458
things are gonna break.
23

24
00:01:07.458 --> 00:01:09.832
So let's jump over to IntelliJ now,
24

25
00:01:09.832 --> 00:01:11.725
and I'll show you what we need to do.
25

26
00:01:11.725 --> 00:01:13.724
So, there's two starters there.
26

27
00:01:13.724 --> 00:01:16.384
The starter web brings in the Servlet API.
27

28
00:01:16.384 --> 00:01:20.248
Now, the starter webflux brings in the WebFlux stuff.
28

29
00:01:20.248 --> 00:01:21.527
So you can't run 'em both.
29

30
00:01:21.527 --> 00:01:23.296
You can't run 'em both concurrently,
30

31
00:01:23.296 --> 00:01:25.400
but it's really a "one or another."
31

32
00:01:25.400 --> 00:01:28.238
But when we do this, we will lose.
32

33
00:01:28.238 --> 00:01:32.269
When we get rid of this and bring in this guy,
33

34
00:01:32.269 --> 00:01:33.440
we are gonna break a bunch of stuff.
34

35
00:01:33.440 --> 00:01:35.374
So we can see that IntelliJ is going out
35

36
00:01:35.374 --> 00:01:39.374
and re-indexing the project, and let's go ahead.
36

37
00:01:40.380 --> 00:01:43.535
Once it gets done detecting the dependencies,
37

38
00:01:43.535 --> 00:01:44.690
we'll go ahead and build a project.
38

39
00:01:44.690 --> 00:01:46.966
And we're gonna see we do have dependencies
39

40
00:01:46.966 --> 00:01:49.279
directly on the Servlet API.
40

41
00:01:49.279 --> 00:01:51.595
So let's go ahead and build a project,
41

42
00:01:51.595 --> 00:01:54.456
and we are gonna get a few things blowing up.
42

43
00:01:54.456 --> 00:01:58.170
And what I'm gonna do is comment those out.
43

44
00:01:58.170 --> 00:02:02.293
And so you can see here,
44

45
00:02:02.293 --> 00:02:03.605
model and view no longer exist.
45

46
00:02:03.605 --> 00:02:06.705
So, there's a few things that we need to change.
46

47
00:02:06.705 --> 00:02:08.946
Now I'm gonna go in and refactor this.
47

48
00:02:08.946 --> 00:02:10.990
I'm gonna pause the video, refactor it,
48

49
00:02:10.990 --> 00:02:15.221
then we'll step through the changes that I made.
49

50
00:02:15.221 --> 00:02:18.644
Okay, I've gone through and refactored a few things,
50

51
00:02:18.644 --> 00:02:20.289
and a couple things that we're gonna have
51

52
00:02:20.289 --> 00:02:21.703
to address coming up.
52

53
00:02:21.703 --> 00:02:25.134
So the exception handler stuff is no longer working,
53

54
00:02:25.134 --> 00:02:26.361
and the Model and View is gone
54

55
00:02:26.361 --> 00:02:28.897
from the Spring Framework, the Reactive stuff.
55

56
00:02:28.897 --> 00:02:30.971
So we're gonna have to find a replacement for that.
56

57
00:02:30.971 --> 00:02:33.920
So, this exception handler is broken.
57

58
00:02:33.920 --> 00:02:36.869
And then our image handler, where we're taking in
58

59
00:02:36.869 --> 00:02:39.824
that file upload, that is also broken.
59

60
00:02:39.824 --> 00:02:41.532
So, had to comment out some stuff there.
60

61
00:02:41.532 --> 00:02:43.349
I'm just commenting it out for now.
61

62
00:02:43.349 --> 00:02:45.150
We will definitely address it as we move through
62

63
00:02:45.150 --> 00:02:48.795
and refactor this project, to be fully reactive.
63

64
00:02:48.795 --> 00:02:50.830
And then the RecipeController again,
64

65
00:02:50.830 --> 00:02:52.737
our ExceptionHandler here.
65

66
00:02:52.737 --> 00:02:54.217
So we're gonna have to find a new technique
66

67
00:02:54.217 --> 00:02:55.390
to handle that.
67

68
00:02:55.390 --> 00:02:57.049
But that's the only change that I made.
68

69
00:02:57.049 --> 00:02:59.260
You can see that I brought up the version control,
69

70
00:02:59.260 --> 00:03:01.274
and these five files were changed,
70

71
00:03:01.274 --> 00:03:02.343
and I just commented out the stuff
71

72
00:03:02.343 --> 00:03:05.421
that went away, and we'll have to re-fix this.
72

73
00:03:05.421 --> 00:03:08.410
What I wanna show you now,
73

74
00:03:08.410 --> 00:03:11.401
we're gonna bring that back up.
74

75
00:03:11.401 --> 00:03:14.117
So, we got the application running now,
75

76
00:03:14.117 --> 00:03:16.603
and we can see that we are now running Netty,
76

77
00:03:16.603 --> 00:03:18.328
rather than Tomcat.
77

78
00:03:18.328 --> 00:03:20.602
So we have the Netty server running,
78

79
00:03:20.602 --> 00:03:24.769
and let's jump over here and do a refresh,
79

80
00:03:26.696 --> 00:03:29.404
and we can see that our application is still running.
80

81
00:03:29.404 --> 00:03:33.223
So now we're running reactive stuff on Netty.
81

82
00:03:33.223 --> 00:03:35.114
And what's important to remember is that,
82

83
00:03:35.114 --> 00:03:38.086
and this is all being driven by the dependencies
83

84
00:03:38.086 --> 00:03:41.581
that we're picking up inside build.gradle,
84

85
00:03:41.581 --> 00:03:43.660
so now we changed out these dependencies.
85

86
00:03:43.660 --> 00:03:46.555
And Spring Boot is configuring itself differently,
86

87
00:03:46.555 --> 00:03:49.472
so it is now coming up with Netty,
87

88
00:03:49.472 --> 00:03:52.967
because we brought in the Webflux dependencies.
88

89
00:03:52.967 --> 00:03:54.145
So now it wired that up.
89

90
00:03:54.145 --> 00:03:56.856
Now if I bring in Tomcat specifically,
90

91
00:03:56.856 --> 00:03:58.347
it will configure itself for Tomcat.
91

92
00:03:58.347 --> 00:03:59.687
So that's how Spring Boot works.
92

93
00:03:59.687 --> 00:04:02.674
So, you get a lot of advantages using Spring Boot here,
93

94
00:04:02.674 --> 00:04:04.130
but I wanna point out, now that we're
94

95
00:04:04.130 --> 00:04:07.336
on the reactive stack, so remember,
95

96
00:04:07.336 --> 00:04:10.577
now we've reconfigured things,
96

97
00:04:10.577 --> 00:04:13.546
and we're now running on spring-webflux.
97

98
00:04:13.546 --> 00:04:16.477
Our @Controller and @RequestMapping remain the same.
98

99
00:04:16.477 --> 00:04:18.957
All that stuff continues to work, but now,
99

100
00:04:18.957 --> 00:04:21.761
we're not on the spring-webmvc stack anymore,
100

101
00:04:21.761 --> 00:04:25.453
which uses the Servlet API and the Servlet Container.
101

102
00:04:25.453 --> 00:04:29.043
We are now under webflux, which by default,
102

103
00:04:29.043 --> 00:04:31.703
under Spring Boot, since we didn't specify anything else,
103

104
00:04:31.703 --> 00:04:33.826
we are now using the Netty container.
104

105
00:04:33.826 --> 00:04:35.058
So, quite a bit of difference,
105

106
00:04:35.058 --> 00:04:37.506
but you could see we didn't change very much,
106

107
00:04:37.506 --> 00:04:38.528
and Spring Boot went through
107

108
00:04:38.528 --> 00:04:41.301
and reconfigured everything for us,
108

109
00:04:41.301 --> 00:04:43.872
to use the reactive Netty environment.
109

110
00:04:43.872 --> 00:04:45.653
And coming up, what we're gonna need to do
110

111
00:04:45.653 --> 00:04:46.700
is start refactoring things.
111

112
00:04:46.700 --> 00:04:49.654
Because right now, we still have Thymeleaf
112

113
00:04:49.654 --> 00:04:53.230
in a non-reactive mode, and we're still passing
113

114
00:04:53.230 --> 00:04:55.616
non-reactive objects into Thymeleaf.
114

115
00:04:55.616 --> 00:04:58.883
So we wanna get our whole application fully reactive,
115

116
00:04:58.883 --> 00:05:03.696
end to end, and we'll do that in upcoming videos.
116

117
00:05:03.696 --> 00:05:04.864
Okay, there's one other thing
117

118
00:05:04.864 --> 00:05:06.850
that I wanted to add to this video.
118

119
00:05:06.850 --> 00:05:09.757
And this is for testing, so I'm gonna go ahead
119

120
00:05:09.757 --> 00:05:14.058
and run this, and show you the errors that we're gonna get.
120

121
00:05:14.058 --> 00:05:17.130
So, our tests are gonna be failing
121

122
00:05:17.130 --> 00:05:20.618
because we are using the Spring MVC test framework,
122

123
00:05:20.618 --> 00:05:25.119
and we can see here, we are getting Servlet...
123

124
00:05:25.119 --> 00:05:27.993
NoClassDefFound the ServletException.
124

125
00:05:27.993 --> 00:05:32.824
So, the mockMvc stuff is specific to Spring MVC,
125

126
00:05:32.824 --> 00:05:34.950
so these tests are failing,
126

127
00:05:34.950 --> 00:05:36.633
and we're gonna have to refactor the test.
127

128
00:05:36.633 --> 00:05:39.593
But for right now, I'm gonna ignore the test,
128

129
00:05:39.593 --> 00:05:41.248
get this checked in, and we're definitely
129

130
00:05:41.248 --> 00:05:43.106
gonna address this in a future video.
130

131
00:05:43.106 --> 00:05:44.753
But for now, I'm gonna ignore the test
131

132
00:05:44.753 --> 00:05:47.362
as we go through and refactor the project.
132

133
00:05:47.362 --> 00:05:49.825
We will get our test coverage back.
133

134
00:05:49.825 --> 00:05:51.683
We most certainly will get our test coverage back.
134

135
00:05:51.683 --> 00:05:53.794
But, we're gonna have to use a different technique
135

136
00:05:53.794 --> 00:05:56.039
to test the Webflux stack.
136

137
00:05:56.039 --> 00:05:59.412
So the mockMvc stuff clearly is tied
137

138
00:05:59.412 --> 00:06:02.773
to the Servlet API, which is why it's going kaboom.
138

139
00:06:02.773 --> 00:06:05.604
Can't find a class, so we're gonna go ahead
139

140
00:06:05.604 --> 00:06:07.917
and ignore these tests for right now,
140

141
00:06:07.917 --> 00:06:10.459
and then in a future video, we will address it
141

142
00:06:10.459 --> 00:06:13.876
and get these tests up and cooking again.
