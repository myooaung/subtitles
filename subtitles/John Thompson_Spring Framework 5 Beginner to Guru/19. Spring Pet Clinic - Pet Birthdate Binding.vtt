WEBVTT
0
1
00:00:04.100 --> 00:00:08.580
This video we're going to take a look at
a date validation errors and this is a
1

2
00:00:08.580 --> 00:00:13.860
issue that was reported by Renan. I hope
I'm pronouncing that name correctly. He
2

3
00:00:13.860 --> 00:00:17.910
created this issue and then also
submitted a pull request for me to look
3

4
00:00:17.910 --> 00:00:21.630
at. This is very similar to what we
saw George provided. I want to step
4

5
00:00:21.630 --> 00:00:26.400
through a couple things here. So he's
using a standard date format from Brazil which is
5

6
00:00:26.400 --> 00:00:30.300
a little bit different from the US so
international dates in different
6

7
00:00:30.300 --> 00:00:38.550
formats can be hairy to deal with of the
varying date formats. So here, he's
7

8
00:00:38.550 --> 00:00:43.620
inputting a date and it's getting
rejected by the framework. He's come
8

9
00:00:43.620 --> 00:00:48.719
up with he provided this pull request
and let's take a look at what he changed
9

10
00:00:48.719 --> 00:00:53.789
here. He's using the dateTimeFormat. I
think this was introduced in Spring in
10

11
00:00:53.789 --> 00:00:58.079
like 3.1. If I remember correctly. So it's
been around for a while. It's a little
11

12
00:00:58.079 --> 00:01:03.350
bit different. Let's toggle over to
IntelliJ and take a look  in the
12

13
00:01:03.350 --> 00:01:07.189
implementation that George did.
13

14
00:01:09.340 --> 00:01:13.049
He did 
right towards the top you did the Init
14

15
00:01:13.049 --> 00:01:19.320
Binder. So for the VisitController, any
LocalDate property that's going to be
15

16
00:01:19.320 --> 00:01:25.140
taking in a String. It's going to get
parsed in the LocalDate. If I come in
16

17
00:01:25.140 --> 00:01:30.030
here and click on that, it's going to try
to parse the date on valid date String
17

18
00:01:30.030 --> 00:01:33.780
so it's going to allow different date
formats. I'm not quite sure exactly
18

19
00:01:33.780 --> 00:01:41.360
how it does it. Let's see here.
Yeah so ISO_LOCAL_DATE.
19

20
00:01:42.720 --> 00:01:47.600
So this is going to be year-month-day so
that's going to be a little nuts the
20

21
00:01:47.600 --> 00:01:54.230
default format year-month-day. So
different formats might not work
21

22
00:01:54.230 --> 00:01:59.820
here. So this here is going to be looking
for a specific format but this only
22

23
00:01:59.820 --> 00:02:05.880
affects the VisitController. Now the
pull request that is going to go for the
23

24
00:02:05.880 --> 00:02:10.860
pet birthDate. So that's going to be on a
property of our Entity. So when Spring
24

25
00:02:10.860 --> 00:02:16.950
goes in to bind data to this, if it's got
a String, it's going to look at that date
25

26
00:02:16.950 --> 00:02:23.340
time format. So here we have year month
day again so that is the pattern that is
26

27
00:02:23.340 --> 00:02:26.550
going to be looking at. And again this is
going to be different because this is
27

28
00:02:26.550 --> 00:02:31.500
working on the entity of pets versus
anything going through the Visit
28

29
00:02:31.500 --> 00:02:35.970
Controller. It's a very similar technique.
Just two different ways of handling how
29

30
00:02:35.970 --> 00:02:41.940
to do this. So I'm going to come in here
and I'm going to go ahead and merge in
30

31
00:02:41.940 --> 00:02:47.130
this change request. So we have a couple
different techniques being used here. I'm
31

32
00:02:47.130 --> 00:02:53.580
going to see how things behave first.
Let's come back down to IntelliJ. So we
32

33
00:02:53.580 --> 00:02:58.560
have two different techniques going on
as far as how we are handling the dates
33

34
00:02:58.560 --> 00:03:04.950
and I usually like to use one or the
other. So I'm going to leave it like this
34

35
00:03:04.950 --> 00:03:09.959
for now and see if it causes any
problems. If it does we will refactor
35

36
00:03:09.959 --> 00:03:14.940
this in the future. But being that we are
learning on this, I'm kind of tempted to
36

37
00:03:14.940 --> 00:03:19.670
leave it as is
because now we have the dataBinder
37

38
00:03:19.670 --> 00:03:24.319
where we are adjusting the dataBinder
itself. This is going to be more
38

39
00:03:24.319 --> 00:03:30.950
global for anything coming through the
VisitController. So any property, any
39

40
00:03:30.950 --> 00:03:37.430
LocalDate property is going to be
handled here. So two different
40

41
00:03:37.430 --> 00:03:41.269
ways that we can support it. 
This is looking for binding local dates
41

42
00:03:41.269 --> 00:03:46.730
from text or I should say Strings and
it's only going to affect the Visit
42

43
00:03:46.730 --> 00:03:52.239
Controller. The other one that is going
to be based on the pet.
43

44
00:03:52.600 --> 00:03:56.620
So this is going to handle pets on the
entity so whenever Spring goes to buying
44

45
00:03:56.620 --> 00:04:04.129
to this object specifically
here on line 48, the birthDate of the
45

46
00:04:04.129 --> 00:04:08.500
pet that is only going to be
effective there. So the DateTimeFormat.
46

47
00:04:08.500 --> 00:04:12.860
The nice part about that is it gives you
a lot of control over a specific
47

48
00:04:12.860 --> 00:04:20.900
property while the using the dataBinder
and that is going to handle that type so
48

49
00:04:20.900 --> 00:04:24.650
it's going to be more global. I'll
kind of split on which one to use here.
49

50
00:04:24.650 --> 00:04:29.210
We'll see if this causes problems or
not. I suspect it in a future video we
50

51
00:04:29.210 --> 00:04:33.400
will refactor this. I'm going to come
over to Chrome and make sure that
51

52
00:04:33.400 --> 00:04:37.610
Circles CI. So the build did run.
This videos getting a little bit long.
52

53
00:04:37.610 --> 00:04:45.800
I'm going to go ahead and that has been
that pull request is done
53

54
00:04:45.800 --> 00:04:52.690
and I'm going to go ahead and that isn't so
when when I merged it, we can see that
54

55
00:04:52.690 --> 00:04:57.169
merging it in close that on that issue
automatically so I'm going to consider this
55

56
00:04:57.169 --> 00:05:04.150
done and we will look at one more pull
request in the next video.
