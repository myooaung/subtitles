WEBVTT
0
1
00:00:04.190 --> 00:00:08.130
Okay, we are going to step through the
assignment step by step and I'm going to
1

2
00:00:08.130 --> 00:00:13.469
do a live coding style. So you can see
everything I'm going to do here to
2

3
00:00:13.469 --> 00:00:18.210
complete the assignment. So what we want
to do is create a new entity for UnitOf
3

4
00:00:18.210 --> 00:00:22.439
Measure. We're going to create a
unidirectional relationship of
4

5
00:00:22.439 --> 00:00:27.240
one-to-one unidirectional relationship
from Ingredient to UnitOfMeasure. We are
5

6
00:00:27.240 --> 00:00:30.869
not going to cascade any persistence
events from Ingredient to UnitOfMeasure
6

7
00:00:30.869 --> 00:00:35.130
because we definitely don't want to do
that. And just toggle over to Chrome here,
7

8
00:00:35.130 --> 00:00:39.649
we are creating that relationship there
in the bottom right hand side of
8

9
00:00:39.649 --> 00:00:44.070
Ingredient to UnitOfMeasure. You can
see it's set up as a one-way
9

10
00:00:44.070 --> 00:00:48.450
relationship and it's a one-to-one
relationship. So we just need to go in
10

11
00:00:48.450 --> 00:00:54.989
and complete this. I'm going to toggle
over to IntelliJ now. So I have a bunch
11

12
00:00:54.989 --> 00:01:00.300
of stuff open as usual and I am going to
go in and first thing I'm going to do is
12

13
00:01:00.300 --> 00:01:11.520
create a new branch here. I'm going to
call that one-to-one-jpa-assign-review and
13

14
00:01:11.520 --> 00:01:17.369
get that in to GitHub for you guys if
want to check this in. Now the first
14

15
00:01:17.369 --> 00:01:21.750
thing that we want to do is create this
UnitOfMeasure class here. I'm going to
15

16
00:01:21.750 --> 00:01:28.500
come in and I'm cheating it. I copied
that to the clipboard and say new Java
16

17
00:01:28.500 --> 00:01:39.810
class, paste that in, UnitOfMeasure, say
ok, yes and by my erd we have one
17

18
00:01:39.810 --> 00:01:51.240
property, uom String. Let's call that
description instead. Now we also want to
18

19
00:01:51.240 --> 00:01:58.680
make this an entity. I'm using the javax
persistence Entity annotation and we
19

20
00:01:58.680 --> 00:02:03.259
also want to give it an id value for the
database.
20

21
00:02:03.760 --> 00:02:12.260
And that property we want to annotate
with the Id annotation, then we're also
21

22
00:02:12.260 --> 00:02:23.390
going to use the GeneratedValue and a
GenerationType of IDENTITY. So that
22

23
00:02:23.390 --> 00:02:31.340
creates our POJO. I'm going to come in
here also hitting command N for getter and
23

24
00:02:31.340 --> 00:02:36.170
setter. We're going to generate those.
Shift and arrow down to highlight both
24

25
00:02:36.170 --> 00:02:41.000
properties, now you can just hit enter and we see
that IntelliJ goes ahead and creates the
25

26
00:02:41.000 --> 00:02:44.570
getters and setters for that. Little
ceremonial code that we get to create
26

27
00:02:44.570 --> 00:02:52.100
in Java. Now we want to go in and modify
our Ingredient class. So I'd already
27

28
00:02:52.100 --> 00:02:56.269
stubbed this out so now we have that
property and we do need to set up the
28

29
00:02:56.269 --> 00:03:00.890
getter and setter. So I'm going to come
down to the bottom. Do a command N getter
29

30
00:03:00.890 --> 00:03:08.570
and setter. So now we can access that
property okay and now what we want to
30

31
00:03:08.570 --> 00:03:20.239
do is say a one-to-one and I'm going to
show you something here. Now I'm pretty
31

32
00:03:20.239 --> 00:03:24.370
sure on the one-to-one, the FetchType is
going to be eager but I'm going to
32

33
00:03:24.370 --> 00:03:29.660
explicitly do that and I'm just doing
that to show you how you can set this
33

34
00:03:29.660 --> 00:03:35.000
FetchType there. So we do want that
loaded every time. That is the default
34

35
00:03:35.000 --> 00:03:40.510
behavior but sometimes doing something
like this, it's handy to show the intent.
35

36
00:03:40.510 --> 00:03:46.310
So you're saying hey I want this as
one-to-one and by that way, Hibernate
36

37
00:03:46.310 --> 00:03:51.650
I want you to get it every time. So I want
you use the eager fetch type and might
37

38
00:03:51.650 --> 00:03:55.640
not be apparent even though it is the
default for somebody else reading the
38

39
00:03:55.640 --> 00:03:59.480
code coming behind you, that could be
handy for them to trigger in their
39

40
00:03:59.480 --> 00:04:03.350
memory. Yeah, this is going to be
retrieved every time from the database.
40

41
00:04:03.350 --> 00:04:10.370
So let's double check the assignment. So
we created a UnitOfMeasure which we
41

42
00:04:10.370 --> 00:04:14.870
did. We created a unidirectional
relationship from Ingredient to UnitOf
42

43
00:04:14.870 --> 00:04:20.500
Measure. We did that and we did not
to a cascade operation. So just to recap
43

44
00:04:20.500 --> 00:04:25.930
the diagram. So we created the Ingredient,
a relationship from Ingredient as a one
44

45
00:04:25.930 --> 00:04:33.280
to one from UnitOfMeasure. And we will
do a quick code review of that. So we set
45

46
00:04:33.280 --> 00:04:37.960
up unit to measure, pretty simple POJO
here as property of id, description,
46

47
00:04:37.960 --> 00:04:44.229
getters and setters, annotated with the
Entity annotation, Id, generated values
47

48
00:04:44.229 --> 00:04:51.220
thing that we're going to get a id value
from the database and then Ingredient. We
48

49
00:04:51.220 --> 00:04:57.180
added in that property UnitOfMeasure
and we annotated it with the one-to-one
49

50
00:04:57.180 --> 00:05:10.090
annotation. And then inside of IntelliJ, I
can come in and say commit directory, adding
50

51
00:05:10.090 --> 00:05:15.430
in the comment, completing assignment and
I like to just do optimized imports.
51

52
00:05:15.430 --> 00:05:20.260
You can optionally do perform code
analysis check to do this. That is the
52

53
00:05:20.260 --> 00:05:25.120
default of IntelliJ. I usually override it
to just cleaning up the imports and now
53

54
00:05:25.120 --> 00:05:31.630
we can say go ahead commit and push and
that's going to push it up to GitHub
54

55
00:05:31.630 --> 00:05:36.270
where it will be available for you to
check out.
