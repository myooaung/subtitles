WEBVTT
0
1
00:00:04.339 --> 00:00:08.160
Alright, in this video we are going to go
through live coding exercise to show you
1

2
00:00:08.160 --> 00:00:11.969
how to implement the assignment to
display the remaining recipe property. So
2

3
00:00:11.969 --> 00:00:16.500
I'm going to go through it step by step. It's a live coding demonstration so
3

4
00:00:16.500 --> 00:00:19.800
you'll see me make some mistakes along
the way but I'm going to step through how I
4

5
00:00:19.800 --> 00:00:23.880
would normally develop a Thymeleaf
application. I'll try to teach you
5

6
00:00:23.880 --> 00:00:27.420
whatever I can along the way as we
encounter different things. So if you're
6

7
00:00:27.420 --> 00:00:30.179
getting more and more comfortable with
Thymeleaf, if I don't know where everybody's
7

8
00:00:30.179 --> 00:00:33.410
at in the course, I get so many different
skill levels here.
8

9
00:00:33.410 --> 00:00:38.820
If you feel comfortable with Thymeleaf
templating, go ahead and skip. But along
9

10
00:00:38.820 --> 00:00:44.820
the way I'm going to pass on some nice
tips for you. So, if you are uncomfortable
10

11
00:00:44.820 --> 00:00:48.960
a Thymeleaf please continue on watch it but
if you're think of your rock star with
11

12
00:00:48.960 --> 00:00:53.550
Thymeleaf templating, go ahead and skip on
to the next section. Okay the first thing
12

13
00:00:53.550 --> 00:00:59.850
we want to do is go in and add that hint. So let's jump back over to the index
13

14
00:00:59.850 --> 00:01:07.229
template and we can now just copy this right
over. So we have a the model name is the
14

15
00:01:07.229 --> 00:01:16.860
same. So we come in and add this up here
and this is just a comment but this is
15

16
00:01:16.860 --> 00:01:21.270
something that IntelliJ is going to use
to figure out the recipe property. So
16

17
00:01:21.270 --> 00:01:25.320
now IntelliJ will be able to
intellisense on that. So that gives us a
17

18
00:01:25.320 --> 00:01:33.270
little bit of help there. Now if you
remember on our index page,
18

19
00:01:33.270 --> 00:01:41.100
we did this, Thymeleaf remove all. So
on this where I have these additional
19

20
00:01:41.100 --> 00:01:48.090
list items, that's what I want to be doing
there. So we're going to remove those
20

21
00:01:48.090 --> 00:01:53.270
additional properties but here, we're
going to set up an iterator and remember
21

22
00:01:53.270 --> 00:01:59.969
this here, tag each recipes. So we want to
do that for the list item this time. I'm going to
22

23
00:01:59.969 --> 00:02:03.950
grab that over here come over to the
show.
23

24
00:02:05.740 --> 00:02:11.039
And this time we want to grab the
category
24

25
00:02:21.870 --> 00:02:27.220
and give that category there. We can see
how IntelliJ is still not happy with
25

26
00:02:27.220 --> 00:02:33.370
that so let's hide that comment right
above it again. And now you can see that
26

27
00:02:33.370 --> 00:02:41.590
the red squiggly went away. So now you
can do intellisense and there's our
27

28
00:02:41.590 --> 00:02:45.640
categories. So
that's going to create a iterator on
28

29
00:02:45.640 --> 00:02:56.320
that. So now we're going to say get that
description. So let's toggle over and
29

30
00:02:56.320 --> 00:03:00.160
take a look at that. So I have Spring Boot up
and running so this template should
30

31
00:03:00.160 --> 00:03:05.650
refresh automatically. And now we can see
that the two categories did in fact
31

32
00:03:05.650 --> 00:03:10.630
change. So now we have prep time, cook
time and source so let's go and tackle
32

33
00:03:10.630 --> 00:03:13.350
those real quick.
33

34
00:03:23.640 --> 00:03:50.610
And I'm surprised I should be picking
this up. I'll just do prepTime there.
34

35
00:03:50.610 --> 00:03:55.770
I'm going to expand out the Recipe so I can
see the properties. I don't want to put that
35

36
00:03:55.770 --> 00:04:12.180
hint down everywhere thought that hint
worked better. And we see that these are
36

37
00:04:12.180 --> 00:04:36.419
going by so we get ten and we need to add
in minutes and add a space there too.
37

38
00:04:36.419 --> 00:04:40.650
I'm not getting a space display, that's
interesting. And I see where I've made
38

39
00:04:40.650 --> 00:04:49.020
a mistake I got to come in here and do
paren, then we can catenate the
39

40
00:04:49.020 --> 00:04:52.979
field. So that's between the curly brackets
there that gets evaluated as an
40

41
00:04:52.979 --> 00:05:02.940
expression. Now this should work. And now
we can see that I do have that space
41

42
00:05:02.940 --> 00:05:14.810
there after it's done. So I can copy that
right down to cookTime. So open paren
42

43
00:05:16.559 --> 00:05:28.109
and closed paren. Now we want to add in
the source so I'm just going through the
43

44
00:05:28.109 --> 00:05:44.759
different properties here. So on our data
serving source and URL must be perhaps
44

45
00:05:44.759 --> 00:05:51.389
null. I have to take a look at our test
data and then here, we have the second
45

46
00:05:51.389 --> 00:05:57.179
iterator so we want to do the same thing
on that. And so we're going to use this th
46

47
00:05:57.179 --> 00:06:08.039
remove to hide those and I'm going to
grab this just to give our intellisense
47

48
00:06:08.039 --> 00:06:11.849
working. Like that would have worked
everywhere but apparently it's only
48

49
00:06:11.849 --> 00:06:16.529
going to work for the variable right
below it. And then we also want to set up
49

50
00:06:16.529 --> 00:06:24.229
our iterator and its final list item.
50

51
00:06:25.459 --> 00:06:35.429
That'll be a set of ingredients, we'll
call that ingredient. Now we want to do
51

52
00:06:35.429 --> 00:06:46.019
text. Last line squiggly and we can get the
description there and we'll get a list
52

53
00:06:46.019 --> 00:06:53.099
of our ingredients displayed on the page. Look over here, take a look. You can see
53

54
00:06:53.099 --> 00:06:56.639
that we're now getting our ingredients
but we are not getting the quantities or
54

55
00:06:56.639 --> 00:07:05.509
the uom. So it's going to get a little
tricky to display. So what we need to do is
55

56
00:07:05.989 --> 00:07:09.709
start this on a new line.
56

57
00:07:22.750 --> 00:07:25.970
And now we've got the different
properties so we have an amount,
57

58
00:07:25.970 --> 00:07:31.850
description and the problem is here,
doing this we're going to have it all in
58

59
00:07:31.850 --> 00:07:41.150
one string. So we need to add in a space. We will
do the same thing here. Now let's take a look
59

60
00:07:41.150 --> 00:07:47.390
at that. Alright so we've got our
ingredients now there, each and let's
60

61
00:07:47.390 --> 00:07:53.210
do make this a little more apparent. It
should look a little bit nicer to have a
61

62
00:07:53.210 --> 00:08:05.540
dash there. Picking it up right away
though. Go ahead and restart Spring
62

63
00:08:05.540 --> 00:08:07.720
Boot.
63

64
00:08:10.780 --> 00:08:16.220
There's our dash. So every now and then, that library load doesn't work. So
64

65
00:08:16.220 --> 00:08:20.060
you saw I just had a problem there and
from experience, you're like I okay I just
65

66
00:08:20.060 --> 00:08:29.840
need to restart it. Now here's our
directions, so come in with Thymeleaf
66

67
00:08:29.840 --> 00:08:38.030
text and display the recipe directions
and then we want to do the same thing on
67

68
00:08:38.030 --> 00:08:42.640
notes in the paragraph tag.
68

69
00:08:45.720 --> 00:08:51.810
Let's go ahead and refresh this. You can
see there's our directions. Notes
69

70
00:08:51.810 --> 00:09:03.150
did not seem to take. Now that's because
notes is a property and I did not
70

71
00:09:03.150 --> 00:09:11.420
specify. It must be notes. You saw I had a
bad property there alright. Actually I
71

72
00:09:11.420 --> 00:09:20.370
had the right property but I didn't specify
recipeNotes. So now we can see that
72

73
00:09:20.370 --> 00:09:26.970
our notes are actually displaying on the
page now. Servings URL, I thought we had
73

74
00:09:26.970 --> 00:09:42.180
URL. Let's double check that. Take a look
at the recipe bootstrap. Now it looks
74

75
00:09:42.180 --> 00:09:46.770
like we are not setting that, double
check the URL. And we are not assigning the
75

76
00:09:46.770 --> 00:09:52.610
URL value so let's make sure that we get
that. I'm going to fix that real quick.
76

77
00:09:58.590 --> 00:10:00.960
And actually I'm going to grab this
right from the web page, still have that
77

78
00:10:00.960 --> 00:10:13.440
open. So there's our simply recipes,
guacamole. That and that, and what else
78

79
00:10:13.440 --> 00:10:18.500
were we missing. Servings and source.
79

80
00:10:32.150 --> 00:10:37.230
And you can see that Spring Boot was
recycling there, reloading the classes.
80

81
00:10:37.230 --> 00:10:43.520
Let's do that and we'll cut, recipe not found.
81

82
00:10:44.150 --> 00:10:49.590
So that's my exception there, so that
wasn't loaded. So our bootstrap data did
82

83
00:10:49.590 --> 00:10:58.200
not get loaded. So I'm going to restart
Spring Boot and now we can see that
83

84
00:10:58.200 --> 00:11:02.040
the URL is there extending out a little
bit. I'll take a look at that offline and
84

85
00:11:02.040 --> 00:11:06.440
see if I cancome up with something to
make that look a little bit nicer. And
85

86
00:11:06.440 --> 00:11:12.270
now we are displaying all the properties. Now there's one other thing I wanted to
86

87
00:11:12.270 --> 00:11:19.050
show you before we close this down. I did
add a test up to our unit test. You
87

88
00:11:19.050 --> 00:11:24.630
can actually do andExpect model
attributeExists recipe. So I did add the
88

89
00:11:24.630 --> 00:11:29.160
validation there because in our
controller, this as a reminder, on our
89

90
00:11:29.160 --> 00:11:34.080
controller the're on line 24, we are
adding the model attribute recipe. So now
90

91
00:11:34.080 --> 00:11:39.690
our unit test is going to verify that a
recipe has been added to the model. So
91

92
00:11:39.690 --> 00:11:43.140
it's a handy thing to do to make sure
that you are populating your model
92

93
00:11:43.140 --> 00:11:48.420
correctly. So when I run this, we can see
that this additional test condition is
93

94
00:11:48.420 --> 00:11:53.210
going to pass because we are in fact
adding the recipe.
