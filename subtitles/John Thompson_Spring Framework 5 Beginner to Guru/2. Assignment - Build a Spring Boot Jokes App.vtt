WEBVTT
1
00:00:00.560 --> 00:00:04.850
OK, in this video, we're going to be talking about building a spring jokes at.

2
00:00:06.150 --> 00:00:11.220
So as I previously said in the introduction to the section, we're going to build a springboard application

3
00:00:11.220 --> 00:00:14.530
that is going to display random Chuck Norris quotes.

4
00:00:14.940 --> 00:00:21.200
So this is actually I think I mentioned it, it was inspired by a Chuck Norris plug in for Jenkins Suchi.

5
00:00:21.390 --> 00:00:26.360
Jenkins is a build server and you can do a plug in that does little Chuck Norris jokes.

6
00:00:26.370 --> 00:00:28.770
So I created one for spring boot actuator.

7
00:00:28.800 --> 00:00:33.280
So through an excavator endpoint, you can actually get a Chuck Norris joke out of that.

8
00:00:33.480 --> 00:00:38.100
So what we want to do is take this artifact that I have published in MAVEN Central.

9
00:00:38.430 --> 00:00:45.210
We'll include that in our project and utilize that to get a Chuck Norris quote or joke through a spring

10
00:00:45.210 --> 00:00:49.370
MVC application so we can use Spring MVC and timely.

11
00:00:49.560 --> 00:00:56.100
Then we'll create a service to get that from the library that I wrote and then display that.

12
00:00:56.130 --> 00:00:59.880
So this is going to be very similar to the spring route applications we've already talked about in the

13
00:00:59.880 --> 00:01:00.330
course.

14
00:01:00.600 --> 00:01:03.540
And what I want to do is a little bit of a challenge for you.

15
00:01:03.820 --> 00:01:09.650
I'd like you to go ahead and try to complete the task from the directions in this lecture.

16
00:01:09.660 --> 00:01:12.840
So we've done everything that we need to do for the assignment.

17
00:01:12.850 --> 00:01:14.850
We've already done that in the course here.

18
00:01:15.030 --> 00:01:18.020
I'm giving you a challenge to go in and actually utilize that.

19
00:01:18.390 --> 00:01:22.020
So I'm going to have some step by step directions for you.

20
00:01:22.320 --> 00:01:28.230
And I will go ahead and code that through the next series of videos and show you how to do each step.

21
00:01:28.230 --> 00:01:31.170
But what I want you to do is try to do it on your own first.

22
00:01:31.350 --> 00:01:37.350
So I am recommending you to go ahead and follow that GitHub workflow that we talked about in Section

23
00:01:37.350 --> 00:01:37.680
two.

24
00:01:38.010 --> 00:01:44.040
So that's going to be for my GitHub repository for this to your own GitHub account and then check that

25
00:01:44.040 --> 00:01:47.790
out into a working directory and you want to be using the default branch.

26
00:01:47.790 --> 00:01:51.620
Amane, if I remember right, I will just check in a read me on that.

27
00:01:51.630 --> 00:01:57.460
So effectively be an empty project for you to start building your good application.

28
00:01:58.560 --> 00:02:05.190
So what we want to do is go ahead and utilize the spring initialise or this is a tool that allows us

29
00:02:05.190 --> 00:02:07.200
to quickly generate a spring boot project.

30
00:02:07.560 --> 00:02:13.050
You can use the Web version at Startup Springdale or directly to your ontology.

31
00:02:13.050 --> 00:02:14.910
I'll let you decide on that.

32
00:02:15.260 --> 00:02:17.250
Use Java 11 or higher.

33
00:02:17.370 --> 00:02:19.370
I think 15 is out right now.

34
00:02:19.380 --> 00:02:22.170
So Java 11 is going to be with us for some time yet.

35
00:02:22.410 --> 00:02:24.420
We are going to do a Mavin build.

36
00:02:24.570 --> 00:02:28.140
If you want to use Gradle, go and do that in pretty simple lightweight projects.

37
00:02:28.140 --> 00:02:30.030
So I am going to be using MAVEN's.

38
00:02:30.030 --> 00:02:32.730
So that would be the example that you see me using.

39
00:02:32.970 --> 00:02:40.500
You want to be taking just the spring web and timely dependencies in the spring and Lizer, that will

40
00:02:40.500 --> 00:02:41.820
give us everything that we need.

41
00:02:42.090 --> 00:02:47.700
And then once you use spring there to create it, we want to take those generated files and add them

42
00:02:47.700 --> 00:02:48.640
to our workspace.

43
00:02:48.840 --> 00:02:55.740
Now, we need to go ahead and add in the dependancy for the Chuck Norris jokes that dependancy is guru,

44
00:02:55.750 --> 00:02:59.760
that spring framework, the artifact name as Chuck Norris for Actuator.

45
00:03:00.060 --> 00:03:04.920
And at the time of recording the latest release was the TUDA 4.0.

46
00:03:05.130 --> 00:03:06.860
So that's pretty stable.

47
00:03:06.870 --> 00:03:11.640
So I've had some people submit additional jokes that I've incremented that.

48
00:03:11.640 --> 00:03:14.460
But the current release is too tough or that zero.

49
00:03:14.670 --> 00:03:19.920
Well, we want to do is go ahead and create a service so we'll have a service that's going to just simply

50
00:03:19.920 --> 00:03:23.440
return a string and can see the method there.

51
00:03:23.490 --> 00:03:26.310
This is going to be good or spring framework.

52
00:03:26.310 --> 00:03:29.850
Noris, Chuck, Chuck Norris quotes and then get a random quote.

53
00:03:29.850 --> 00:03:32.310
So very simple method for us to call from our service.

54
00:03:33.570 --> 00:03:39.480
Then we want to take a jokes controller so that controller is going to have a single method, we just

55
00:03:39.480 --> 00:03:40.560
want to use the context.

56
00:03:40.830 --> 00:03:42.450
We don't have to do anything fancy here.

57
00:03:42.540 --> 00:03:48.840
And the model being returned, we want to add a property of joke to the model so that we can see the

58
00:03:48.840 --> 00:03:55.170
Chuck Norris quote or joke that is being returned from the service and then that controller method that

59
00:03:55.170 --> 00:04:00.930
is going to return back the view name of index for a timely template, view of index.

60
00:04:01.030 --> 00:04:07.740
So go ahead and correspond each other and then update the view to display the joke from the string in

61
00:04:07.740 --> 00:04:13.290
the model and start spring and enjoy the jokes that you see on the on the screen there.

62
00:04:13.680 --> 00:04:19.410
And just to reiterate the jokes controller, we won't use Spring Springs dependency injection to go

63
00:04:19.410 --> 00:04:26.100
ahead and inject and the jokes service into the controller that that way we'll use the spring dependency

64
00:04:26.100 --> 00:04:28.110
injection to to work together all this model.

65
00:04:28.950 --> 00:04:36.360
So just recap here again for my repository and then check out of GitHub, create that spring boot project,

66
00:04:36.900 --> 00:04:42.600
complete the application using the directions on the previous couple screens there, and the slide deck

67
00:04:42.600 --> 00:04:46.830
will be uploaded into the course resources as a PDF that you can download.

68
00:04:46.840 --> 00:04:51.440
So you'll have that for your reference and go ahead and see if you can complete that.

69
00:04:51.780 --> 00:04:54.930
But don't worry, I'm not going to leave you hanging on this.

70
00:04:54.930 --> 00:04:59.940
We will go through each of the steps in detail in upcoming videos in this section of the course.
