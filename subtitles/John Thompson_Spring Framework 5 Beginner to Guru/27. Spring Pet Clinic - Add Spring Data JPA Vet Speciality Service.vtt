WEBVTT
0
1
00:00:04.190 --> 00:00:09.660
In this video, we are going to tackle
number 44 here, Creating a Spring Data
1

2
00:00:09.660 --> 00:00:14.490
JPA Specialty for Vet Specialty
Service number 44 so I'm going to toggle
2

3
00:00:14.490 --> 00:00:22.290
over to IntelliJ and we will take care
of this now. This is going to be this.
3

4
00:00:22.290 --> 00:00:28.330
Actually, let's see here.I don't have a
SpecialtyMapService.
4

5
00:00:28.330 --> 00:00:35.290
So vet specialty. Okay, yes. Never
mind, my bad. Made a mistake there
5

6
00:00:35.290 --> 00:00:39.280
so I have the SpecialtyMapService and
what we want to do is I'm going to go
6

7
00:00:39.280 --> 00:00:42.879
ahead and split those because we are
going to be implementing an, a  JPA
7

8
00:00:42.879 --> 00:00:48.510
version of this in this video. So let's
come down here and say
8

9
00:00:48.570 --> 00:00:52.039
new Java class,
9

10
00:00:52.730 --> 00:00:56.950
an SD for Spring Data, Jpa.
Again, I
10

11
00:00:58.820 --> 00:01:02.450
following this naming convention, so I'm
saying SD for Spring Data just to save a
11

12
00:01:02.450 --> 00:01:09.550
little space. JpaService versus saying a
map service. I'm going to go ahead and
12

13
00:01:09.550 --> 00:01:16.460
create that, and vet service.
I'm just looking here. I have an
13

14
00:01:16.460 --> 00:01:22.000
inconsistency so I'm going to just
on-the-fly refactor this.
14

15
00:01:24.280 --> 00:01:30.300
So instead of VetServiceMap. I'm going to 
say VetMapService.
15

16
00:01:30.300 --> 00:01:35.440
Just a small refactoring like 
that. That'll just make that naming
16

17
00:01:35.440 --> 00:01:40.450
consistency with everything else.
Map service, map service, and pet
17

18
00:01:40.450 --> 00:01:43.230
services also.
18

19
00:01:45.630 --> 00:01:49.590
When I'm naming things, I like to
try to be consistent, so that was
19

20
00:01:49.590 --> 00:01:53.430
just a little inconsistency. I know
we have map service, map service, and
20

21
00:01:53.430 --> 00:01:57.979
we'll also refactor this guy too.
21

22
00:02:00.640 --> 00:02:04.950
Go ahead and do that factoring.
Let's go ahead and complete this
22

23
00:02:04.950 --> 00:02:13.020
implementation. This is going to
implement our SpecialtyService. I'm going to come down
23

24
00:02:15.200 --> 00:02:19.640
here and say implement the methods of
that. That's all the methods. We
24

25
00:02:19.640 --> 00:02:27.890
readjust this a little bit. We will
be using the SpecialtyRepository so set
25

26
00:02:27.890 --> 00:02:31.239
up a private final.
26

27
00:02:31.800 --> 00:02:35.720
I'm declaring it final so it
cannot change. We will initialize
27

28
00:02:35.720 --> 00:02:41.480
that in the constructor. Allow Spring
to implement that and then that's just a
28

29
00:02:41.480 --> 00:02:44.690
little defensive coding saying that we
are implementing that as a final method
29

30
00:02:44.690 --> 00:02:53.320
so he cannot change. Let's go ahead
and implement the findAll. So
30

31
00:02:54.080 --> 00:03:03.210
Set Specialties equals new Hash new HashSet.
Now we will do a specialtyRepository
31

32
00:03:03.210 --> 00:03:14.040
findAll.forEach and we will say
specialties add and then we will return
32

33
00:03:14.040 --> 00:03:17.040
specialties.
33

34
00:03:17.440 --> 00:03:22.100
Now that i implement findById,
we'll take the specialtyRepository
34

35
00:03:22.100 --> 00:03:31.430
findById, take the Long value, and then
say orElse null. So remember that this
35

36
00:03:31.430 --> 00:03:35.300
is returning back an optional, and then
if it's not found, we'll  return back
36

37
00:03:35.300 --> 00:03:41.490
null.
Then, say save object, like so.
37

38
00:03:41.490 --> 00:03:45.480
We just need to implement the delete
method.
38

39
00:03:50.040 --> 00:03:53.269
deleteById,
39

40
00:03:53.830 --> 00:03:59.620
like so, so that implements that, and then
the one thing we have not done is we did
40

41
00:03:59.620 --> 00:04:04.750
not set up the annotations. Remember
here, we want it to be a Spring
41

42
00:04:04.750 --> 00:04:10.870
component but only for the profile of
Spring Data JPA. Copy that over and paste
42

43
00:04:10.870 --> 00:04:13.170
that.
43

44
00:04:14.130 --> 00:04:18.989
Again, this is our Specialty Spring Data
JPA Service implementing specialty
44

45
00:04:18.989 --> 00:04:23.370
service, takes in a repository as one of
the key properties, and we're using the
45

46
00:04:23.370 --> 00:04:28.380
Spring Data Repository to do all our all
of our persistent operations against an
46

47
00:04:28.380 --> 00:04:33.270
SQL database. We've gone in and
implemented all the methods that are
47

48
00:04:33.270 --> 00:04:39.060
defined by our SpecialtyService, which
is a CrudService implementation, or an
48

49
00:04:39.060 --> 00:04:42.240
extension of the CrudService, I should
say. It's an interface and not
49

50
00:04:42.240 --> 00:04:47.640
an implementation. I misspoke there. 
This was issue number 44 so I am going
50

51
00:04:47.640 --> 00:04:54.569
to go ahead and 
commit this.
51

52
00:04:58.200 --> 00:05:02.220
Commit and push that. You can see that it's
getting up to GitHub. I'm going to toggle
52

53
00:05:02.220 --> 00:05:06.840
over real quick and we'll see that
closed. Now, I'm going to come back here.
53

54
00:05:06.840 --> 00:05:11.670
You can see that my work queue is
getting pretty lean, so in the next video,
54

55
00:05:11.670 --> 00:05:14.880
we're going to take a moment and plan
out some additional work there so some
55

56
00:05:14.880 --> 00:05:18.930
things that I want to implement yet. 
Our goal, again, where we are moving
56

57
00:05:18.930 --> 00:05:23.670
towards where we can change profiles and
bring up an active profile to have
57

58
00:05:23.670 --> 00:05:29.130
things load either with the map service
or the Spring Data JPA services. So in
58

59
00:05:29.130 --> 00:05:32.160
the next video, we're going to step back
for a moment and do some task planning
59

60
00:05:32.160 --> 00:05:36.620
since our work queue is pretty lean
right now.
