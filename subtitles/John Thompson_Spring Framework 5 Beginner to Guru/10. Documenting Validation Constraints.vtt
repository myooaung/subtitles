WEBVTT
1
00:00:05.100 --> 00:00:10.230
This video we're going to go through documentation of constraints and it's a little bit of a confusing

2
00:00:10.230 --> 00:00:13.830
process but I want to show you a couple of things with this.

3
00:00:13.830 --> 00:00:21.190
The documentation is leaves a little bit to be desired to be honest as to how you go about doing this.

4
00:00:21.270 --> 00:00:28.800
So we've gone through about setting up these constraints and I'm going to actually add in here set a

5
00:00:28.830 --> 00:00:39.160
Size constraint beer name and we'll say man three and we'll make a max of 100 for the the name of the

6
00:00:39.160 --> 00:00:44.890
beer and then the other ones here will actually come in here and we'll require the quantity on hand

7
00:00:44.890 --> 00:00:49.490
to be positive so these are just standard constraints that we've covered previously in the course so

8
00:00:49.490 --> 00:00:51.220
we're setting up our our output.

9
00:00:51.260 --> 00:00:57.920
Joe what these constraints on it and what would be nice is if we can get information from these into

10
00:00:57.920 --> 00:01:03.680
our documentation in a more automated way and there's a way to do that.

11
00:01:03.710 --> 00:01:05.050
I'm going to show you this.

12
00:01:05.180 --> 00:01:11.660
And what we need to do is set up a custom template first and you can see here under test.

13
00:01:11.660 --> 00:01:18.080
I don't have a Resources Directory so I'm going to come in here and create a new directory.

14
00:01:18.650 --> 00:01:25.040
We'll call that resources like so and notice that until Jay isn't picking that up right away.

15
00:01:25.040 --> 00:01:31.880
Quick trick to get it to recognize that it's to tell maven to reinforce the project and now you can

16
00:01:31.880 --> 00:01:34.550
see that that did now come in.

17
00:01:34.570 --> 00:01:36.130
So it can close up maven.

18
00:01:36.140 --> 00:01:44.600
So I only do here is create a directory I mean it's a new directory and it's very specific to spring

19
00:01:44.600 --> 00:01:45.170
Rostock.

20
00:01:45.170 --> 00:01:54.310
So we've got two org spring framework now it's docs templates like so.

21
00:01:54.510 --> 00:02:01.490
And what we want to do in here is we're going to create a new file and that's gonna be request fields.

22
00:02:01.530 --> 00:02:07.590
That snippet and we'll go ahead and add that and to get for this example.

23
00:02:07.990 --> 00:02:13.210
So this creating that request fields template and now I'm going to copy this.

24
00:02:13.210 --> 00:02:17.510
This is coming out of an example through from the rest ox team.

25
00:02:17.890 --> 00:02:22.570
And this is basically a mustache template and spring rest document.

26
00:02:22.630 --> 00:02:24.250
Neath it is going to be using it.

27
00:02:24.310 --> 00:02:30.850
And what we're doing is the default implementation already has these properties it has a path type and

28
00:02:30.850 --> 00:02:31.930
description.

29
00:02:31.930 --> 00:02:37.090
What we are doing is we're adding in constraints so now we're adding that template for constraint.

30
00:02:37.090 --> 00:02:41.690
So let's go ahead and verify something here.

31
00:02:41.690 --> 00:02:44.090
So let's go ahead and run this right now

32
00:02:47.790 --> 00:02:55.040
and I'm expecting this is going to fail because it's going to see this new template and it did not.

33
00:02:55.270 --> 00:02:57.760
He pauses real quick and take a closer look.

34
00:02:59.090 --> 00:03:04.670
So I paused pause the recording take a closer look at this air and this was my mistake.

35
00:03:04.670 --> 00:03:15.020
So what happened is I created this and one command and until Jay created a directory called or spring

36
00:03:15.020 --> 00:03:18.560
framework dot rust docs dot templates as all one.

37
00:03:18.740 --> 00:03:26.240
And what I need to do is actually come in here and create it as a directory and create each one of those

38
00:03:26.360 --> 00:03:30.560
one at a time so that we get the proper filing.

39
00:03:30.560 --> 00:03:32.930
So I'm going to go ahead and delete this guy.

40
00:03:33.320 --> 00:03:36.650
So that is a directory all one string.

41
00:03:36.650 --> 00:03:42.200
So what's happening is it's not being recognized those need to be actual different directories created

42
00:03:42.260 --> 00:03:49.520
under the resources rather than one blank file name because when spring goes to load this up it's going

43
00:03:49.520 --> 00:03:54.380
to look at the class path and the class path is going to be determined by this directory structure.

44
00:03:54.380 --> 00:04:01.820
So go ahead and flatten these middle packages so I'm used to working in those modes so that was my mistake.

45
00:04:01.850 --> 00:04:07.070
So we want this to be all separate directories in the file system which is why I didn't pick it up.

46
00:04:07.070 --> 00:04:11.600
So now when I run my test what's happening now I come down here to the bottom.

47
00:04:11.660 --> 00:04:15.540
We're seeing that there's no method or field with constraints on it online.

48
00:04:16.070 --> 00:04:18.400
So spring is seeing this now.

49
00:04:18.400 --> 00:04:21.650
So I know that it's being seen by rest docs.

50
00:04:21.740 --> 00:04:26.600
And now I need to go actually configure this and this again this is an example if you'd read through

51
00:04:26.600 --> 00:04:32.960
the documentation what I'm going to show you here is a technique that they have in the hate OS example

52
00:04:33.260 --> 00:04:38.820
they do reference it but it's not explained very well so I'm going to show you this here.

53
00:04:38.940 --> 00:04:43.540
Sorry to come in and this is code that I'm stealing directly from the spring guys.

54
00:04:44.090 --> 00:04:47.540
And what we're doing is we're taking this constrained fields.

55
00:04:47.540 --> 00:04:53.210
And what's important here is we're taking this constraint descriptions we're going to pass in a class

56
00:04:53.210 --> 00:04:58.910
to it spring rest docs is going to use reflection to get information from those field descriptors.

57
00:04:58.910 --> 00:05:04.570
So now let's go ahead and set this up so we can see that are are safe.

58
00:05:04.580 --> 00:05:06.260
Beer is now failing.

59
00:05:06.430 --> 00:05:14.230
And to use this well we wanted to come up here constraint descriptions and we'll call these fields.

60
00:05:14.970 --> 00:05:15.480
So

61
00:05:19.470 --> 00:05:22.110
then we're going to pass on the beer to yoga class

62
00:05:24.900 --> 00:05:30.190
and I am going to spell fields correctly.

63
00:05:30.240 --> 00:05:35.820
So now we have fields here and now we need to modify these fields with power because what's going to

64
00:05:35.820 --> 00:05:41.000
happen is we are passing this down and many collapses to here.

65
00:05:41.010 --> 00:05:48.410
So we can see this little bit better so we're going to come into this class and when we add in a field

66
00:05:48.410 --> 00:05:52.160
descriptor and then use with path and we're passing in the path.

67
00:05:52.160 --> 00:05:58.140
So we're going to be replacing this method here and we're going to see a fields

68
00:06:04.210 --> 00:06:05.800
that could see I have a mistake here.

69
00:06:05.810 --> 00:06:10.350
So I have constraint descriptions I actually want to use constraint fields.

70
00:06:10.370 --> 00:06:12.730
So this class I created so that was my mistake.

71
00:06:12.740 --> 00:06:16.240
So we'll just go and fix that.

72
00:06:16.250 --> 00:06:20.720
So I was referencing this class by mistake.

73
00:06:20.720 --> 00:06:23.850
So we're actually building a wrapper effectively around it.

74
00:06:23.840 --> 00:06:34.950
So now I'm going to do fields with path like so and I want to replace all these instances of it so I'm

75
00:06:34.950 --> 00:06:44.080
going to come up here and I'm just replacing all these occurrences to use that method.

76
00:06:44.080 --> 00:06:49.930
And again what this method is going to do this is going to go in and use the field with path that we

77
00:06:49.930 --> 00:06:56.410
looked at before that we were using before and now we're going to use attributes constraints and we're

78
00:06:56.410 --> 00:06:59.910
going to get basically constraint descriptions from this.

79
00:06:59.920 --> 00:07:07.540
This class we're going to use the built in utility from Spring rest stocks to do a reflection on our

80
00:07:07.640 --> 00:07:08.210
constraint.

81
00:07:08.200 --> 00:07:13.940
So we're gonna be able get get a constraint property so let's go ahead and rerun this right now.

82
00:07:14.140 --> 00:07:18.240
Make sure that is working and now we can see that did pass.

83
00:07:18.350 --> 00:07:26.260
I'm going to open up maven here and resize this a little bit and I'm going to do it clean.

84
00:07:26.450 --> 00:07:33.310
And let's go and do a package and the package is going to kick in the packaging and that's going to

85
00:07:33.310 --> 00:07:37.130
tell spring rest stocks to go ahead and build the documentation.

86
00:07:37.130 --> 00:07:38.140
So we do want to see that.

87
00:07:38.170 --> 00:07:39.930
I'm going to show you the template now.

88
00:07:40.070 --> 00:07:44.370
We haven't looked at it so far but we'll show you what is being generated.

89
00:07:45.890 --> 00:07:53.330
So if we come into Target and we go into generate snippets CV one beer oddly it looks like what we set

90
00:07:53.330 --> 00:07:56.200
up here and be one beer.

91
00:07:56.200 --> 00:08:02.510
And now if we look in two requests fields remember we said the request field snippet this here the requests

92
00:08:02.510 --> 00:08:07.470
fields aid OK so this is the ASCII Doc that's been generated from that mustache template.

93
00:08:07.700 --> 00:08:09.250
So let's go ahead and open that up.

94
00:08:10.270 --> 00:08:17.720
And now we can see that our snippet we can see that we do have constrained information again this is

95
00:08:17.720 --> 00:08:19.130
being done through reflection.

96
00:08:19.130 --> 00:08:22.930
So we have the name of the beer that's a description that we're setting.

97
00:08:23.030 --> 00:08:25.560
And then this must not be blank.

98
00:08:25.820 --> 00:08:28.610
That is being generated from

99
00:08:31.260 --> 00:08:32.160
these values here.

100
00:08:32.160 --> 00:08:33.890
So we're getting it must not be blank.

101
00:08:33.900 --> 00:08:35.040
And then the size value.

102
00:08:35.070 --> 00:08:41.280
So if I come back over here and look at that we can see must not be blank and then size must between

103
00:08:41.400 --> 00:08:45.650
three and one hundred and inclusive so that that is generated right from that.

104
00:08:45.810 --> 00:08:50.940
And if you want to customize these messages there's a lot of ways to do that are a lot of capability

105
00:08:50.940 --> 00:08:51.530
of doing that.

106
00:08:51.540 --> 00:08:57.230
And the spring rest stocks documentation will show you how how to customize these messages.

107
00:08:57.240 --> 00:09:00.160
So if you want to change it for a different language or whatnot.

108
00:09:00.210 --> 00:09:04.460
That is very much within the capabilities of what we have here in Rostock.

109
00:09:04.500 --> 00:09:07.710
Let's just recap real quick what we did in this video.

110
00:09:08.210 --> 00:09:15.060
So I added an edit in the resource directory and then very important that we accidentally found out

111
00:09:15.060 --> 00:09:18.120
that this needs to the actual directories.

112
00:09:18.240 --> 00:09:25.600
So in ontology when you go and create a new directory you'll need to do each segment one at a time.

113
00:09:25.650 --> 00:09:27.270
So that was my mistake.

114
00:09:27.360 --> 00:09:29.480
I've been cut by that in the past.

115
00:09:30.270 --> 00:09:38.670
And then we created this new mustache template to set up the constraints property in our documentation

116
00:09:39.270 --> 00:09:48.140
and then in the test we added in a new class and the embedded class for constrained fields.

117
00:09:48.140 --> 00:09:53.940
And that's going to use constraint descriptors and that is going to allow us to pass in a class and

118
00:09:53.940 --> 00:10:00.210
then this is going to be using reflection and looking at the constraint annotations to get information

119
00:10:00.210 --> 00:10:08.040
about the constraints so it's going to be adding in that constraint properties and extracting metadata

120
00:10:08.100 --> 00:10:15.270
about our constraints using standard Java reflection about those constraints and then we had to modify

121
00:10:15.270 --> 00:10:18.950
our test to use this new descriptor here.

122
00:10:19.060 --> 00:10:28.230
So now because we added in this new snippet with constraints that property must be available in our

123
00:10:28.230 --> 00:10:28.840
output.

124
00:10:28.860 --> 00:10:36.120
Otherwise as I showed you the test will fail and then ultimately we are going to be getting the information

125
00:10:36.570 --> 00:10:38.010
generated in the snippet.
