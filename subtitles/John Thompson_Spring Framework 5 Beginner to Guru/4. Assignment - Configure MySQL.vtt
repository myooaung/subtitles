WEBVTT
0
1
00:00:00.569 --> 00:00:03.069
(light music)
1

2
00:00:05.560 --> 00:00:06.922
<v Lecturer>All right, in this video we have</v>
2

3
00:00:06.922 --> 00:00:10.871
an assignment for you, this is to configure MySQL.
3

4
00:00:10.871 --> 00:00:12.637
Now, what I want you to do is create
4

5
00:00:12.637 --> 00:00:15.899
a local MySQL instance for use in this course.
5

6
00:00:15.899 --> 00:00:18.112
It is up to you whether to install it natively
6

7
00:00:18.112 --> 00:00:20.894
on your system or in a Docker container,
7

8
00:00:20.894 --> 00:00:22.441
I personally use a Docker container,
8

9
00:00:22.441 --> 00:00:24.698
that's why I included Docker in this course,
9

10
00:00:24.698 --> 00:00:26.460
so we can spool up a Docker container
10

11
00:00:26.460 --> 00:00:29.616
and run MySQL in that or run it locally on your system.
11

12
00:00:29.616 --> 00:00:31.366
So that is up to you.
12

13
00:00:32.540 --> 00:00:35.817
And what we want to do is set up two databases,
13

14
00:00:35.817 --> 00:00:38.378
one for dev and one for prod,
14

15
00:00:38.378 --> 00:00:42.545
I want you to call these databases sfg_dev and sfg_prod.
15

16
00:00:43.789 --> 00:00:46.663
So what we're going to be doing here is setting up our database
16

17
00:00:46.663 --> 00:00:49.591
to emulate a development environment for MySQL
17

18
00:00:49.591 --> 00:00:52.474
and a production environment for MySQL.
18

19
00:00:52.474 --> 00:00:56.541
Now, using MySQL root user is not a good practice,
19

20
00:00:56.541 --> 00:00:58.541
I'm going to show you best practices here,
20

21
00:00:58.541 --> 00:00:59.802
if you use a root user
21

22
00:00:59.802 --> 00:01:02.685
you're basically giving the application god access
22

23
00:01:02.685 --> 00:01:05.181
to the database and it can do a lot of damage
23

24
00:01:05.181 --> 00:01:08.750
and that likely leaves you wide open to having damage done
24

25
00:01:08.750 --> 00:01:11.994
by SQL injection attacks or a malicious user
25

26
00:01:11.994 --> 00:01:13.196
that gets the credentials could do
26

27
00:01:13.196 --> 00:01:14.623
a lot of damage to your database.
27

28
00:01:14.623 --> 00:01:18.190
So this is very common in enterprises
28

29
00:01:18.190 --> 00:01:21.501
to create accounts with minimal security required.
29

30
00:01:21.501 --> 00:01:23.943
It does take a little bit of extra work on our part
30

31
00:01:23.943 --> 00:01:26.942
to create these accounts, but as a rule of thumb,
31

32
00:01:26.942 --> 00:01:29.243
if you're in a company, especially if you're in a company
32

33
00:01:29.243 --> 00:01:32.468
and have a database that you're going to be using
33

34
00:01:32.468 --> 00:01:34.830
and if you're publicly traded here in the States
34

35
00:01:34.830 --> 00:01:36.328
you have to be worried about SOX compliance,
35

36
00:01:36.328 --> 00:01:38.231
if you're taking credit cards you have
36

37
00:01:38.231 --> 00:01:40.584
to worry about PCI compliance,
37

38
00:01:40.584 --> 00:01:41.937
if you're in financial services
38

39
00:01:41.937 --> 00:01:44.509
you're probably looking at SAS 70 compliance
39

40
00:01:44.509 --> 00:01:46.147
and all these regulations say
40

41
00:01:46.147 --> 00:01:48.094
that you need to lock down your systems
41

42
00:01:48.094 --> 00:01:49.593
and use what's called service accounts.
42

43
00:01:49.593 --> 00:01:51.659
So that's what I'm going to be showing you here,
43

44
00:01:51.659 --> 00:01:54.655
how to do is create service accounts
44

45
00:01:54.655 --> 00:01:57.572
and we want to set up two different accounts in the database,
45

46
00:01:57.572 --> 00:01:59.650
one for dev and one for prod,
46

47
00:01:59.650 --> 00:02:03.817
we're going to call it sfg_dev_user and sfg_prod_user.
47

48
00:02:05.406 --> 00:02:08.378
These will have DML access,
48

49
00:02:08.378 --> 00:02:12.128
and by DML I mean Data Manipulation Language,
49

50
00:02:15.657 --> 00:02:18.835
this will allow that account to do basic CRUD operations
50

51
00:02:18.835 --> 00:02:23.212
to that database. But neither one should have DDL access,
51

52
00:02:23.212 --> 00:02:25.175
and that's Data Definition Language.
52

53
00:02:25.175 --> 00:02:27.198
So these accounts will not be allowed to change
53

54
00:02:27.198 --> 00:02:28.736
the database structure at all.
54

55
00:02:28.736 --> 00:02:30.099
So they won't be able to create tables
55

56
00:02:30.099 --> 00:02:31.772
and they won't be able to drop tables.
56

57
00:02:31.772 --> 00:02:35.600
So that's more of what concerns me, able to drop a table.
57

58
00:02:35.600 --> 00:02:39.766
Now, I know that a lot of you are not SQL experts
58

59
00:02:39.766 --> 00:02:42.365
so I'm going to put the scripts up there in GitHub
59

60
00:02:42.365 --> 00:02:44.929
and in the next video we're going to go through step by step,
60

61
00:02:44.929 --> 00:02:47.685
so I'm going to create the scripts to set up the database
61

62
00:02:47.685 --> 00:02:50.768
and we'll save them, they will be in the course resources.
62

63
00:02:50.768 --> 00:02:53.615
In the next video lecture we'll go through step by step
63

64
00:02:53.615 --> 00:02:55.874
of setting up our database for use
64

65
00:02:55.874 --> 00:02:58.466
and then in the rest of this section of the course
65

66
00:02:58.466 --> 00:03:00.831
we are going to be looking at configuring Spring
66

67
00:03:00.831 --> 00:03:02.626
and using Spring Profiles to connect
67

68
00:03:02.626 --> 00:03:06.793
to these different configurations of the database.
