WEBVTT
0
1
00:00:04.879 --> 00:00:09.389
Okay, in this video, we are gonna take
a look at the Swagger Editor. And I'm not
1

2
00:00:09.389 --> 00:00:12.780
gonna be able to get into every
single feature of this. I just wanna
2

3
00:00:12.780 --> 00:00:18.330
show you this, more for your awareness.
And I'm here on the Swagger
3

4
00:00:18.330 --> 00:00:22.830
site, and what I'm gonna do is they do
have a client but I'm gonna use the
4

5
00:00:22.830 --> 00:00:28.199
online editor. So let's go into that and
take a look at this. And what we've been
5

6
00:00:28.199 --> 00:00:32.309
doing, so far, is we've been doing
development based. We've been developing
6

7
00:00:32.309 --> 00:00:38.430
our API first, and then, developing
documentation. But Swagger allows you to
7

8
00:00:38.430 --> 00:00:44.129
develop the documentation, the API
and then develop your back-end code to
8

9
00:00:44.129 --> 00:00:48.870
support the API. So, one way you develop
your code first and then documentation,
9

10
00:00:48.870 --> 00:00:54.059
or you can develop the documentation
first and then your code. So, I'm not
10

11
00:00:54.059 --> 00:00:57.180
gonna get into a debate, as to which is
better.
11

12
00:00:57.180 --> 00:01:00.510
I'm sure the Swagger guys think that
developing the documentation first is
12

13
00:01:00.510 --> 00:01:05.610
better, and I can see merit in that
because it does give you a contract to
13

14
00:01:05.610 --> 00:01:10.590
work towards. But in real life, may or may
not work out. So, what I wanna do is
14

15
00:01:10.590 --> 00:01:15.750
come through here and show you some of
the features of this online tool, and you
15

16
00:01:15.750 --> 00:01:20.670
can see here, that we have tags pet,
everything about your pets. And this is
16

17
00:01:20.670 --> 00:01:25.500
actually live. So, if I come in here and
change that, we can see over here that it
17

18
00:01:25.500 --> 00:01:32.000
had changed on the screen. And now, I also
wanna point out that we do have the
18

19
00:01:32.000 --> 00:01:38.009
ability to try it out. So I can do a try
it out, and say pet pending. And we'll
19

20
00:01:38.009 --> 00:01:44.820
bring it back in JSON. Execute. And here,
I'm getting a fail to fetch. So, it might
20

21
00:01:44.820 --> 00:01:50.970
be a glitch in there. But let's come in
here, and it does give this curl command.
21

22
00:01:50.970 --> 00:01:53.880
So let's go ahead and take a look at
that curl command.
22

23
00:01:53.880 --> 00:01:57.500
Come back over here
23

24
00:01:58.750 --> 00:02:03.610
and we can see that this curl command, it's
a little easier to see on the Swagger
24

25
00:02:03.610 --> 00:02:10.700
Documentation. So they are running an
instance of pet store on petstore.swagger.io
25

26
00:02:10.700 --> 00:02:14.020
So that is a live API
that we can be working against, and
26

27
00:02:14.020 --> 00:02:18.610
that's actually pretty cool stuff there,
that we have that API to work against.
27

28
00:02:18.610 --> 00:02:23.620
And I wanna point out that this
documentation is being dynamically
28

29
00:02:23.620 --> 00:02:30.930
created. And what we can also do, if you
remember over here,
29

30
00:02:31.300 --> 00:02:37.240
going back to the API Docs. Remember the
Swagger UI that we've been working with
30

31
00:02:37.240 --> 00:02:42.070
is actually pointing to this Json body,
which is the Swagger Documentation. Now,
31

32
00:02:42.070 --> 00:02:46.200
if I come here and say ctrl A and I'm
gonna copy that to the clipboard.
32

33
00:02:46.200 --> 00:02:53.450
Let's come over here
and I'm gonna paste that. And we do we
33

34
00:02:53.450 --> 00:02:57.790
wanna convert your JSON into YAML.
I'm gonna say yes.
34

35
00:02:57.790 --> 00:03:06.489
And now, look at that. We can see that it
took my Swagger documentation from the
35

36
00:03:06.489 --> 00:03:09.760
website here running on local host of
the project that we've been working with,
36

37
00:03:09.760 --> 00:03:16.310
and now, it converted that into that. And
now, I can make little tweaks to it.
37

38
00:03:16.310 --> 00:03:22.640
And so, we could tweak the documentation,
if we needed. And again, let's go ahead
38

39
00:03:22.640 --> 00:03:27.430
and show you how this works. Let's go Try
it out.
39

40
00:03:27.630 --> 00:03:32.280
And I'm not seeing the... so we are getting
a failed to fetch here on the
40

41
00:03:32.280 --> 00:03:36.510
documentation. But, it does give me a
valid curl command. It's smart enough to
41

42
00:03:36.510 --> 00:03:42.650
know that I'm running against
localhost. And we're here to clear this.
42

43
00:03:44.819 --> 00:03:48.270
And we can see that it is giving
valid curl command and this is data
43

44
00:03:48.270 --> 00:03:53.000
coming right off my localhost, the stuff
that we've been working with.
44

45
00:03:54.450 --> 00:03:58.920
Swagger Editor is a very very powerful
tool. It's very mature. Something that you
45

46
00:03:58.920 --> 00:04:03.209
can definitely utilize to generate. You
can come in start learning the Swagger
46

47
00:04:03.209 --> 00:04:08.160
Documentation and actually use it to
generate code. And in the next video, we
47

48
00:04:08.160 --> 00:04:11.940
are gonna take a look at the code
that it generates for us. But, this is
48

49
00:04:11.940 --> 00:04:16.739
just more of an introduction to the
Swagger UI. Again, I am using the web
49

50
00:04:16.739 --> 00:04:21.060
version. There are downloadable clients
that you can use and run it natively. So,
50

51
00:04:21.060 --> 00:04:26.190
it's a lot of really cool stuff. I'm
really impressed with Swagger and how it
51

52
00:04:26.190 --> 00:04:32.870
is giving us some type of standard
definition of what RESTful APIs are.
