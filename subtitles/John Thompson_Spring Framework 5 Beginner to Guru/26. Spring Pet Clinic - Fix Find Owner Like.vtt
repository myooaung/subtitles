WEBVTT
0
1
00:00:04.130 --> 00:00:08.550
Alright! In this video, we're going to take
a look at the find owner by like not
1

2
00:00:08.550 --> 00:00:12.389
working. I created a bug in the last
video that was getting a little bit long
2

3
00:00:12.389 --> 00:00:15.059
in the tooth there so I want to do a
separate video and take a look at this
3

4
00:00:15.059 --> 00:00:19.320
because I've noticed a couple problems
here. I still have Spring running in
4

5
00:00:19.320 --> 00:00:29.460
the background. I come to find owners.
If I do West, like so, it doesn't do
5

6
00:00:29.460 --> 00:00:34.649
anything. But if I do a percent, like so,
that should come up with something. So
6

7
00:00:34.649 --> 00:00:39.530
that is working. But I don't want
that functionality for people as well.
7

8
00:00:39.530 --> 00:00:43.680
They shouldn't have to know to do that
and they should be just do the wild-card
8

9
00:00:43.680 --> 00:00:49.350
search there. Then also you can see
here has not been found, we want to list
9

10
00:00:49.350 --> 00:00:53.610
everything there so that that logic is
broken as well. So let's come and take a
10

11
00:00:53.610 --> 00:01:05.339
look at this. Come over here to
IntelliJ. The problem here is... What
11

12
00:01:05.339 --> 00:01:19.380
should happen here is we need to append
the % to this and that. Let's take a look
12

13
00:01:19.380 --> 00:01:24.450
at that. We'll fix that first. Let's
go ahead and build that. I need to enable
13

14
00:01:24.450 --> 00:01:30.869
auto build on this. I'm on an EAP version
of IntelliJ. You need to go into
14

15
00:01:30.869 --> 00:01:35.759
settings and have it automatically build
upon save. So let's come back over here.
15

16
00:01:35.759 --> 00:01:38.420
And...
16

17
00:01:43.330 --> 00:01:49.510
So now that is working as far as Weston.
Now if we do this, okay good. That fixed
17

18
00:01:49.510 --> 00:01:54.730
both things because what happened was we
were not finding anything, but now by
18

19
00:01:54.730 --> 00:01:59.080
appending the wild card and just as a
refresher underneath the covers that's
19

20
00:01:59.080 --> 00:02:04.360
going to do a SQL search and it's going
to do a like clause. Then the little
20

21
00:02:04.360 --> 00:02:09.250
% there is a wild-card character in SQL,
so that's what we're appending to the
21

22
00:02:09.250 --> 00:02:15.430
String adding in a couple percent signs,
and because up here, if nothing comes in,
22

23
00:02:15.430 --> 00:02:20.230
we set to an empty String and when that
comes down. So we fix both problems at
23

24
00:02:20.230 --> 00:02:25.750
once. That is now working properly. I
am going to go ahead and commit and
24

25
00:02:25.750 --> 00:02:37.380
close this. Let's see here. Go ahead. That
was issue number 67.
25

26
00:02:45.800 --> 00:02:53.780
So I'm going to commit and push that. Now
we are missing a test for that find by
26

27
00:02:53.780 --> 00:03:00.580
like. So I'm going to create a issue for
that as well.
27

28
00:03:12.840 --> 00:03:17.430
On this, I am going to label it 'Help
Wanted'
28

29
00:03:17.430 --> 00:03:21.720
so I'm logging this into the issue
tracker. If somebody wants to write that
29

30
00:03:21.720 --> 00:03:26.430
test and send me a pull request, I will
add it into the project and probably
30

31
00:03:26.430 --> 00:03:32.610
even record a video reviewing it. So I'm
just adding a little help wanted here so
31

32
00:03:32.610 --> 00:03:37.230
now we have a couple of issues remaining.
In the next video, we are going to
32

33
00:03:37.230 --> 00:03:41.459
get into the meat and potatoes of
creating the ability to add or update a
33

34
00:03:41.459 --> 00:03:47.180
new owner so we will tackle that one in
the next video.
