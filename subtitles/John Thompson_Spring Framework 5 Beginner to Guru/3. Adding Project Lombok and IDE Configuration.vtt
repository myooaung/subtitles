WEBVTT
0
1
00:00:05.089 --> 00:00:09.540
Alright let's take a look at setting a
project Lombok in our little recipe
1

2
00:00:09.540 --> 00:00:13.889
project. So the first thing that we need
to do is add in the maven dependency. So
2

3
00:00:13.889 --> 00:00:18.390
I'm going to come over here to the maven
pom and bring that up. And we can see that
3

4
00:00:18.390 --> 00:00:22.859
this is pretty much untouched since we
brought it down with Spring Boot from
4

5
00:00:22.859 --> 00:00:27.090
the Spring initializer. And what I like
to do is come down to the bottom just
5

6
00:00:27.090 --> 00:00:31.830
above the test dependencies when I'm
adding in new dependencies. So we need to
6

7
00:00:31.830 --> 00:00:36.930
add in a dependency for it
and what we want to do is add in the
7

8
00:00:36.930 --> 00:00:47.690
artifact lombok. And the groupId is,
8

9
00:00:47.930 --> 00:00:55.260
projectlombok and now found it. And
notice I am not putting in the diversion
9

10
00:00:55.260 --> 00:01:01.500
and the project Lombok is supported by
the curated dependencies of the Spring
10

11
00:01:01.500 --> 00:01:06.479
Boot starter. So we are going to inherit,
just as a reminder, you know
11

12
00:01:06.479 --> 00:01:10.170
even over using Gradle. Either way, we are
going to be inheriting from the Spring
12

13
00:01:10.170 --> 00:01:15.210
Boot starter parent and we will get
that in. And IntelliJ is asking me to
13

14
00:01:15.210 --> 00:01:20.820
import the changes. So that we get project Lombok into our IDE or 
14

15
00:01:20.820 --> 00:01:24.570
environment for the project. And now if I
start using annotations, things are going
15

16
00:01:24.570 --> 00:01:31.110
to compile okay. And the next thing we need
to do is come up here to settings and we
16

17
00:01:31.110 --> 00:01:36.799
need to load in the plugin for IntelliJ. So we can come in and say browsing
17

18
00:01:36.799 --> 00:01:44.250
repositories and search on the project
Lombok plugin. You can see that it's a
18

19
00:01:44.250 --> 00:01:49.829
pretty popular tool and keeping updated. So
this is something that we want to add in
19

20
00:01:49.829 --> 00:01:56.460
and I already have it installed. So I
don't need to restart my IDE but this is
20

21
00:01:56.460 --> 00:02:01.079
something you're going to want to do and
there's also a plugin for Eclipse which
21

22
00:02:01.079 --> 00:02:05.399
you can install to get the project Lombok
functionality. Without it, methods that
22

23
00:02:05.399 --> 00:02:10.229
are added by project Lombok probably
will not show up in your IDE and your IDE
23

24
00:02:10.229 --> 00:02:18.049
will think that you have a compiler error or
coding error. Once you have the plugin
24

25
00:02:18.049 --> 00:02:26.480
installed, you will get a couple of options
under the refactor. And you can do, let's
25

26
00:02:26.480 --> 00:02:34.099
see if I can bring this up. Do a refactor
and you can do like default data and
26

27
00:02:34.099 --> 00:02:39.260
it's going to go in and modify your
class. A very quick way to do
27

28
00:02:39.260 --> 00:02:47.480
refactoring in a very handy way and we can
undo that and say Delombok and it's
28

29
00:02:47.480 --> 00:02:53.030
going to refactor it again. So this is
kind of interesting to see here
29

30
00:02:53.030 --> 00:02:58.819
because we did refactor and you can see
that like here's the equal method and
30

31
00:02:58.819 --> 00:03:05.090
the hash code that was added, and we also
had a couple other methods. So
31

32
00:03:05.090 --> 00:03:08.780
this is what happen when we Lombok it and Delombok it in the
32

33
00:03:08.780 --> 00:03:13.340
refactoring. So a quick way to see the
code that is going to be generated by
33

34
00:03:13.340 --> 00:03:18.470
project Lombok. And going forward, I'm
going to show you how to Lombok classes
34

35
00:03:18.470 --> 00:03:22.819
and refactor them manually and we'll
explore some of the other project Lombok
35

36
00:03:22.819 --> 00:03:25.750
annotations.
