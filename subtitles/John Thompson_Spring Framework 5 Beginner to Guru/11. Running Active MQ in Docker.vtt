WEBVTT
0
1
00:00:04.009 --> 00:00:09.150
In this video, we're gonna go ahead and
use Docker to start up an ActiveMQ
1

2
00:00:09.150 --> 00:00:13.980
broker. And up on the screen, here you can
see I have a Github page. And, this is a
2

3
00:00:13.980 --> 00:00:17.850
Dockerfile for the ActiveMQ Artemis
project. I hope I'm saying Artemis
3

4
00:00:17.850 --> 00:00:22.650
correctly. What this is is it gives us a
ready-made Dockerfile that is all
4

5
00:00:22.650 --> 00:00:27.960
configured to run ActiveMQ. So, if you
come in here, you can see that there's an
5

6
00:00:27.960 --> 00:00:32.640
it's a fairly active project and there's
a number of options here. I am not going
6

7
00:00:32.640 --> 00:00:37.020
to be going through everything. I'm more
interested in setting up ActiveMQ and
7

8
00:00:37.020 --> 00:00:41.219
connecting to it from Spring Boot. Now,
what's important here when you're in the
8

9
00:00:41.219 --> 00:00:44.190
enterprise typically what's gonna
happen is you'll have a DevOps team that
9

10
00:00:44.190 --> 00:00:48.120
is going to be taking care of ActiveMQ
for you. I could do an entire course on
10

11
00:00:48.120 --> 00:00:52.980
ActiveMQ. So, right now we're just focused
on really introductory and looking at
11

12
00:00:52.980 --> 00:00:59.280
using ActiveMQ from a Spring and Spring
Boot context. And, what we're gonna do is
12

13
00:00:59.280 --> 00:01:03.180
set up this Docker image to run it. And
the documentation here is really really
13

14
00:01:03.180 --> 00:01:07.830
good. You can see we have the Docker
command right here. What this is doing it
14

15
00:01:07.830 --> 00:01:13.340
saying Docker run interactively. The rm
tells it to remove it upon termination,
15

16
00:01:13.340 --> 00:01:18.630
remove that container. It's gonna
expose port 8161. That is gonna be
16

17
00:01:18.630 --> 00:01:25.380
the console and then 61616,
that is the JMS protocol we're working
17

18
00:01:25.380 --> 00:01:31.229
at the connecting and talking to JMS. Now,
you can see there's a number of
18

19
00:01:31.229 --> 00:01:34.950
different options here. You can do a lot
of memory tuning and I am not going to
19

20
00:01:34.950 --> 00:01:40.110
get into any of this. I am primarily
concerned about just running it. So, I'm
20

21
00:01:40.110 --> 00:01:45.050
gonna come over here.
And, I'm going to go ahead and bring that
21

22
00:01:45.050 --> 00:01:49.430
up like so and I'm jumping over to the
command line. And, let's go ahead and
22

23
00:01:49.430 --> 00:01:54.430
paste that like so.
We can see that this is now starting
23

24
00:01:54.430 --> 00:02:03.509
up and we come up and we are now up and
running. So, which is exactly what I want.
24

25
00:02:03.850 --> 00:02:09.880
And I'm gonna say a New Tab, Homebrew.
Waiting for login. Now, if I do a docker
25

26
00:02:09.880 --> 00:02:16.540
ps, we can see that this is up and
running. Let me resize this so it's a
26

27
00:02:16.540 --> 00:02:20.130
little more easier for us to see.
27

28
00:02:20.709 --> 00:02:25.659
We reposition that. So, now we can see it
just a docker ps to see the running
28

29
00:02:25.659 --> 00:02:30.879
containers on my system. And, we are up
and running. The key thing to note is
29

30
00:02:30.879 --> 00:02:35.230
that the Docker Image itself. You can see
here it's exposed several different
30

31
00:02:35.230 --> 00:02:44.019
ports. But we've only mapped two of them.
So, we've got the 8161 and then 6163.
31

32
00:02:44.019 --> 00:02:49.000
And what we can do is right here on the
console, you can see it's got
32

33
00:02:49.000 --> 00:02:54.160
localhost to 8161. By coming to that, we see this
33

34
00:02:54.160 --> 00:02:58.599
brings us into the ActiveMQ website. So,
this is actually running in the Docker
34

35
00:02:58.599 --> 00:03:02.769
container on my local system. You can
see there's a number of things here. But
35

36
00:03:02.769 --> 00:03:06.609
one of them of interest is the
management console. So, I'm going to 
36

37
00:03:06.609 --> 00:03:12.220
login and you'll be like oh what's the
Username and Password. That is actually
37

38
00:03:12.220 --> 00:03:18.930
on this previous screen.
You can see that it is artemis.
38

39
00:03:18.930 --> 00:03:25.950
I probably fat fingered that. That's why we
have pasted that. I would never
39

40
00:03:25.950 --> 00:03:31.050
remember that string so I'm gonna copy
that as well and it'll paste that in and
40

41
00:03:31.050 --> 00:03:37.470
we can log in. And now, we can see there's
actually a number of things here.
41

42
00:03:37.470 --> 00:03:41.790
This is ActiveMQ console so we can see a
lot that's going on here,
42

43
00:03:41.790 --> 00:03:47.269
things like connections. Of course,
we don't have any Connections, Sessions,
43

44
00:03:47.269 --> 00:03:53.370
Consumers, Producers, Queues. See that we
don't have anything there. So, this is
44

45
00:03:53.370 --> 00:03:59.190
like a completely empty ActiveMQ
instance and we're just looking at the
45

46
00:03:59.190 --> 00:04:03.269
console here. So, if we had messages going
across, this would be a lot more
46

47
00:04:03.269 --> 00:04:08.400
interesting and we will look at setting
up Spring Boot to do that. But for right
47

48
00:04:08.400 --> 00:04:12.780
now, we will not be doing that. But the
primary thing I wanted to get across in
48

49
00:04:12.780 --> 00:04:18.989
this video was one using this Docker
Image and this is from I don't know I
49

50
00:04:18.989 --> 00:04:23.760
say that Bromo. I will leave the link to
this in the course notes. It seems to be
50

51
00:04:23.760 --> 00:04:28.260
a very mature and very commonly used
Docker image. It's not officially from
51

52
00:04:28.260 --> 00:04:32.729
ActiveMQ. But it works out quite nicely
for our purposes that is being actively
52

53
00:04:32.729 --> 00:04:38.039
maintained. So, we're so great. And again,
if you have additional needs for this,
53

54
00:04:38.039 --> 00:04:43.350
you can see that you can do everything
for prometheus metrics to cross-origin
54

55
00:04:43.350 --> 00:04:48.210
logins for the console. So, a lot of stuff
you can do here. I'm not getting into a
55

56
00:04:48.210 --> 00:04:52.440
complete set of of ActiveMQ. I'm more
interested in showing you how to set up
56

57
00:04:52.440 --> 00:04:55.979
to an actual broker because I wanna
get away from using that embedded broker
57

58
00:04:55.979 --> 00:05:02.010
and into something a little bit more
realistic. So again, I did this to run
58

59
00:05:02.010 --> 00:05:06.990
this. Remember, Docker is a requirement
for the course and covered it. And need
59

60
00:05:06.990 --> 00:05:10.050
to have Docker installed on your system.
And now, we're seeing nothing running on
60

61
00:05:10.050 --> 00:05:16.080
those ports. If I come back over
to console, you can see that that command
61

62
00:05:16.080 --> 00:05:20.900
is an interactive command. And, you can
see this is the console log for
62

63
00:05:20.900 --> 00:05:26.970
ActiveMQ kind of handy to see. And then,
here I simply did on this command. I did
63

64
00:05:26.970 --> 00:05:31.800
a docker ps to
list the running containers on my system.
64

65
00:05:31.800 --> 00:05:37.650
So, this is a come up and we can see that
it's listing on 8161. That is the
65

66
00:05:37.650 --> 00:05:43.150
port that the council is running on.
So, that console you can see this is
66

67
00:05:43.150 --> 00:05:48.729
running on 8161 off the localhost. And on
the website, you have username and
67

68
00:05:48.729 --> 00:05:54.250
password artemis and this simetraehcapa.
I'm not sure how you say that. So, I'd
68

69
00:05:54.250 --> 00:05:58.150
never remember that string so that's
kind of a strange one. And of course, you
69

70
00:05:58.150 --> 00:06:02.440
can see here it also shows you how you
can override those. So, if you need to do
70

71
00:06:02.440 --> 00:06:07.120
that. So, a lot of versatility to this
image. But we are just gonna be using
71

72
00:06:07.120 --> 00:06:12.280
it to get away from using an embedded
ActiveMQ broker to actually using one
72

73
00:06:12.280 --> 00:06:16.360
running. And in theory, what I'm showing
you here this ActiveMQ broker that we
73

74
00:06:16.360 --> 00:06:22.210
are running a Docker container. You
could easily deploy that to VM or some
74

75
00:06:22.210 --> 00:06:26.740
other machine running Docker and run it
there. So here, we are just emulating
75

76
00:06:26.740 --> 00:06:30.639
trying to connect to an independent
broker. And we'll be showing you how to
76

77
00:06:30.639 --> 00:06:35.740
set up a Spring configuration to connect
to this running server in an upcoming
77

78
00:06:35.740 --> 00:06:38.220
video.
