WEBVTT
1
00:00:04.110 --> 00:00:04.650
OK.

2
00:00:05.170 --> 00:00:10.510
That's a video we're going to do is we're gonna start implementing some interfaces and we are going

3
00:00:10.510 --> 00:00:17.270
to be doing this one here to enter and create interfaces for the pet clinic services.

4
00:00:17.310 --> 00:00:24.660
And one thing that the reference implementation does not have is if you look at a second look at the

5
00:00:24.840 --> 00:00:26.520
pattern that they're using here real quick.

6
00:00:26.520 --> 00:00:32.500
So we have an owner controller and the controller directly uses the owner repository.

7
00:00:32.670 --> 00:00:37.980
And the way I personally prefer to do things I prefer to have a service layer and have that service

8
00:00:37.980 --> 00:00:43.350
layer interact with the repository and you'll see see why here and a little bit because what I'm gonna

9
00:00:43.350 --> 00:00:47.580
do is I'm going to step you through several different implementations of those.

10
00:00:47.710 --> 00:00:54.350
And what we can do here is provide different implementations of the services that we wire up into them.

11
00:00:54.390 --> 00:00:59.130
So I'm going to be showing you how to do that in a couple different ways.

12
00:00:59.250 --> 00:01:05.370
And what I want to do is provide interfaces for that and some of them are going to be the services we'll

13
00:01:05.370 --> 00:01:09.290
be using spring data JPA repositories where others.

14
00:01:09.300 --> 00:01:12.660
The first thing we're gonna do is create a map implementation.

15
00:01:12.660 --> 00:01:18.060
So if you can visualize this we will have a controller so here's an owner controller.

16
00:01:18.060 --> 00:01:20.380
This is what's going to be handling the web requests.

17
00:01:20.430 --> 00:01:26.220
I'm going to interject a service interface into it and depending on the implementation that service

18
00:01:26.220 --> 00:01:31.920
interface we can get the value from a hash map we can get him from Spring data repositories we can use

19
00:01:31.920 --> 00:01:37.150
plain old JD B.S. We could call a web service we could have the implementations for all the stuff and

20
00:01:37.170 --> 00:01:42.840
coming up in the course I'm going to show you how to wire in different mutations but in this video what

21
00:01:42.840 --> 00:01:49.440
I want to do is start setting up the interfaces for our stuff and if we come in here and look at our

22
00:01:49.440 --> 00:01:57.860
data our model we have owner person pet pet type and Java person is kind of a base class.

23
00:01:57.900 --> 00:02:05.910
So what I want to do is I want to implement interfaces for owner and that and then also pet and we're

24
00:02:05.910 --> 00:02:07.520
going to evolve this as we go forward.

25
00:02:07.530 --> 00:02:12.140
But for this particular video all I'm going to do is implement these interfaces.

26
00:02:12.210 --> 00:02:19.800
So if I could come over to ontology now up here this is a repository that we have when we implement

27
00:02:19.800 --> 00:02:25.440
something now this spring data JPA will provide us an implementation if we saw what happened to ask

28
00:02:25.440 --> 00:02:26.220
for it.

29
00:02:26.220 --> 00:02:30.840
What I'm gonna do is I'm going to mimic some of this stuff and this is a basic repository interface

30
00:02:30.850 --> 00:02:35.720
so this gives us CRUD operations so that's create read update and delete.

31
00:02:35.850 --> 00:02:41.670
So very basic stuff that we can have and we can also implement this and extend this where we need to

32
00:02:41.710 --> 00:02:54.110
but I am going to implement a service layer on that and I'm going to implement that in data so we have

33
00:02:54.110 --> 00:02:54.710
model

34
00:02:57.950 --> 00:03:00.430
that's kind of a lot more intelligent.

35
00:03:00.960 --> 00:03:04.270
I'm going to do those same new package

36
00:03:12.370 --> 00:03:15.420
I'm going to create a new package called services

37
00:03:21.910 --> 00:03:25.860
and now I say new class and this is going to be an interface

38
00:03:29.870 --> 00:03:31.370
so it's going to be owner service.

39
00:03:31.370 --> 00:03:36.530
So again I'm falling naming convention of just calling it owner service interface and then we'll create

40
00:03:36.590 --> 00:03:42.940
implementations for that in an upcoming video and I look through the code and what we want to do is

41
00:03:42.940 --> 00:03:48.830
a fine by De and we'll be using longs for the 90

42
00:03:53.370 --> 00:03:54.930
that's going to return back and owner

43
00:04:08.090 --> 00:04:12.960
so implement a find by I.D. that we don't have an I.D. property defined yet.

44
00:04:13.240 --> 00:04:20.540
We'll have a save that we'll save it and then we'll say Find all and we can actually enhance this to

45
00:04:28.000 --> 00:04:32.520
so I can see here that we are doing fine by last name that's a convenience method we're going to have

46
00:04:32.520 --> 00:04:39.640
we're looking up owners by last name and I am going to save these and we want to implement these for

47
00:04:39.640 --> 00:04:41.740
the other services.

48
00:04:41.740 --> 00:04:44.560
So we have owner service let's create a new

49
00:04:51.290 --> 00:04:52.710
yeah go ahead and add

50
00:04:57.940 --> 00:05:03.090
I'm not going to bring in owner I just want some we are going to change this to put

51
00:05:10.350 --> 00:05:16.770
so I have the interface for pet service that does a fine by I.D. save and find all.

52
00:05:16.770 --> 00:05:18.930
And let's also implement the VAT

53
00:05:24.650 --> 00:05:25.500
and to get

54
00:05:30.290 --> 00:05:31.700
and we're just clambering and set

55
00:05:39.600 --> 00:05:41.470
change this to

56
00:05:44.700 --> 00:05:45.120
pet.

57
00:05:45.190 --> 00:05:49.690
So what I've done is implemented three interfaces these are going to be some basic interfaces that are

58
00:05:49.690 --> 00:05:57.560
going to give us methods that we can add to so we can do a save find by D or find all.

59
00:05:57.580 --> 00:06:02.920
So we have a number of different options here that we can use and we'll use this to go ahead and set

60
00:06:02.920 --> 00:06:04.100
things up.

61
00:06:04.150 --> 00:06:09.910
We will create a map of temptation and going forward also do a spring data JPA implementation so we'll

62
00:06:09.910 --> 00:06:11.970
have some different imputations that we'll work with.

63
00:06:11.970 --> 00:06:13.770
I'm going to show you how to build that.

64
00:06:13.840 --> 00:06:17.680
And right now I do not have everything implemented.

65
00:06:17.680 --> 00:06:19.620
This is an incremental commit.

66
00:06:19.720 --> 00:06:23.670
So we are just kind of laying the groundwork for things that we will be doing coming up.

67
00:06:23.680 --> 00:06:29.350
Obviously we're going to need more services and interfaces and implementations and our object model

68
00:06:29.350 --> 00:06:35.260
is going to continue to evolve because if you look at our model I'm doing a fine by long and I'll give

69
00:06:35.260 --> 00:06:39.200
you a hint right now person.

70
00:06:39.450 --> 00:06:44.250
We don't have a 90 value there so that's something that we're gonna have to implement coming up.

71
00:06:44.250 --> 00:06:48.370
So let me go ahead and implement those.

72
00:06:48.430 --> 00:06:49.930
So I'm going to go ahead right click.

73
00:06:49.940 --> 00:06:55.280
There you commit directory that's going to bring a net dialogue.

74
00:06:55.410 --> 00:07:02.570
And I can't remember that issue idea Come back over here to issues and this is number five

75
00:07:11.540 --> 00:07:13.260
I'm putting in close number five.

76
00:07:13.310 --> 00:07:15.270
And now to commit and push

77
00:07:18.440 --> 00:07:21.910
and that is pushing out to get home you can see the push it's successful in time.

78
00:07:21.920 --> 00:07:30.130
Back over to Chrome and you can see that it's closed already so come back to issues and now I'm going

79
00:07:30.130 --> 00:07:31.100
to say add

80
00:07:33.940 --> 00:07:37.190
some I want to add in that I.D. we will do that an upcoming video

81
00:07:41.380 --> 00:07:48.690
will go ahead and add that as a long and now I'm going to go ahead and submit that new issue and just

82
00:07:48.710 --> 00:07:54.710
recap here I'm going to come into code and look at the commits and we can see here that I implemented

83
00:07:54.740 --> 00:08:00.530
this so let's go ahead and take a look at this commit and we can see that I added an a owner service

84
00:08:00.530 --> 00:08:07.430
interface a pet service interface and a VAT service interface and we are going to be having multiple

85
00:08:07.430 --> 00:08:15.230
implementations of these coming up and then we'll be using the spring version control container to wire

86
00:08:15.230 --> 00:08:18.860
up one at runtime depending on what our application needs are.

87
00:08:18.860 --> 00:08:24.260
So I'm doing this to show off the versatility of Spring and how we can configure the application and

88
00:08:24.260 --> 00:08:29.750
that's going to dovetail nicely as we learn more about dependency injection and working with the spring

89
00:08:29.750 --> 00:08:30.140
framework.
