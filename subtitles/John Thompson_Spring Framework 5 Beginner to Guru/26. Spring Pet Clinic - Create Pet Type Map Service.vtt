WEBVTT
0
1
00:00:04.279 --> 00:00:09.769
In this video, we are going to go ahead
and implement this PetType Map Service.
1

2
00:00:09.769 --> 00:00:13.500
I'm going to bring that up and we're
going to be working on issue number 29.
2

3
00:00:13.500 --> 00:00:19.279
I'm going to toggle over to IntelliJ
now. I'm going to close these out
3

4
00:00:19.290 --> 00:00:25.980
and our services here. Remember, we
have our map services. And basically, what
4

5
00:00:25.980 --> 00:00:30.450
we want to do is create an
implementation for our pet types.
5

6
00:00:30.450 --> 00:00:36.500
Let's go ahead and come in here. We
have a pet service so let's go ahead.
6

7
00:00:36.500 --> 00:00:42.629
Our pet service implements CRUD service.
We want to do the pet type service so
7

8
00:00:42.629 --> 00:00:47.629
we'll come in and do a new interface
8

9
00:00:53.090 --> 00:00:55.270
And that will be interface.
9

10
00:01:08.970 --> 00:01:13.720
So that is our interface. Now what we
want to do is create the actual
10

11
00:01:13.720 --> 00:01:18.600
implementation of it so we're going to
say new Java class
11

12
00:01:23.680 --> 00:01:27.640
like so.
Remember, we can take a look at our
12

13
00:01:27.640 --> 00:01:33.490
pet service and that implements an
AbstractMapService.
13

14
00:01:33.490 --> 00:01:39.300
We can go ahead and do the same thing
here.
14

15
00:01:40.860 --> 00:01:49.020
That is going to be PetType Long
15

16
00:01:49.550 --> 00:01:59.920
implements and that's going to implement
the PetTypeService. Come down here.
16

17
00:01:59.920 --> 00:02:03.030
Implement methods.
17

18
00:02:03.870 --> 00:02:10.560
Now we can see that I'm going to split this, so
split horizontally. We have our pet
18

19
00:02:10.560 --> 00:02:13.190
service map.
19

20
00:02:14.510 --> 00:02:19.970
It's almost all cookie cutter. In this
case, the code completion didn't work
20

21
00:02:19.970 --> 00:02:27.159
quite right, so we want pet type return
back. I'm going to say super.
21

22
00:02:27.430 --> 00:02:32.459
findAll. So that takes care of 
that implementation.
22

23
00:02:32.459 --> 00:02:36.550
This is going be...
23

24
00:02:36.550 --> 00:02:40.990
and the ID is going to be a 
Long value
24

25
00:02:50.140 --> 00:02:56.950
like so. Now we have to implement to
save. Save Method is going to of course
25

26
00:02:56.950 --> 00:03:01.110
return back a pet type
26

27
00:03:02.760 --> 00:03:06.660
and takes in a PetType
27

28
00:03:10.840 --> 00:03:17.680
like so.
Again, this is going to be a PetType.
28

29
00:03:26.099 --> 00:03:30.050
The ID is going to be a Long of course.
29

30
00:03:32.760 --> 00:03:37.270
Delete by ID.
30

31
00:03:38.510 --> 00:03:42.739
We can see that this is now happy.
We have this pet type service and then
31

32
00:03:42.739 --> 00:03:46.400
the one thing we don't want to forget is
if we don't add in the service
32

33
00:03:46.400 --> 00:03:52.489
annotation, a very easy thing to do.
Spring won't see this as a Spring
33

34
00:03:52.489 --> 00:03:56.390
component. It won't get wired up so you can
see that it became ungraded
34

35
00:03:56.390 --> 00:04:02.150
So now, when the Spring Context runs, it's
going to go ahead and implement that
35

36
00:04:02.150 --> 00:04:06.680
PetTypeMapService. I was just using
this as a template because these are all
36

37
00:04:06.680 --> 00:04:10.190
going to be cookie cutter. We're doing
very similar things. But because the
37

38
00:04:10.190 --> 00:04:15.080
typed in nature of Java, we need to do
some of these workarounds here, so that
38

39
00:04:15.080 --> 00:04:19.489
at this time, implements the pet type
service and I think that was number 29.
39

40
00:04:19.489 --> 00:04:24.400
Yep, so let's go ahead and commit this.
40

41
00:04:37.830 --> 00:04:44.270
I'll say that closes number 29 and we'll
commit and push that to GitHub.
