WEBVTT
0
1
00:00:03.920 --> 00:00:09.630
In this video, we are going to look at
number 37 here, to convert the POJOs
1

2
00:00:09.630 --> 00:00:13.590
for our vets into JPA entities. So I'm
going to go through and do that right
2

3
00:00:13.590 --> 00:00:17.850
now. It's going to be a little easier
than the previous video, where we're doing
3

4
00:00:17.850 --> 00:00:21.660
owners. The Owner object model is more
complex than what we have for the Vet
4

5
00:00:21.660 --> 00:00:25.699
object model. So let's toggle over to
IntelliJ and start taking a look at that.
5

6
00:00:25.699 --> 00:00:31.199
Let's take a look at Vet. We can
see that that extends out Person. In
6

7
00:00:31.199 --> 00:00:35.670
the previous video when we did Owners,
Owners also extends out Person. We
7

8
00:00:35.670 --> 00:00:40.260
already added in the JPA annotations for
Person so we don't have to touch
8

9
00:00:40.260 --> 00:00:45.270
anything in this particular video. Let's
go ahead and start setting up Vet
9

10
00:00:45.270 --> 00:00:48.890
to be a JPA Entity.
10

11
00:00:48.980 --> 00:00:53.030
The first thing we want to do is
annotate it as an Entity. Let's set
11

12
00:00:53.030 --> 00:00:59.320
up the table here.
We'll call that vets
12

13
00:00:59.320 --> 00:01:06.280
and then the specialty mapping that gets
a little more interesting. Let's do
13

14
00:01:06.280 --> 00:01:08.820
a many-to-many.
14

15
00:01:10.439 --> 00:01:15.030
I'm following the mapping that the
Spring Pet Clinic is using so I'm just
15

16
00:01:15.030 --> 00:01:18.770
kind of setting up everything to match
here. This is going to be a many-to-many
16

17
00:01:18.770 --> 00:01:23.399
implementation. We're going to follow
what they did. Let's set the fetch
17

18
00:01:23.399 --> 00:01:29.890
type to eager.
What this means is by default
18

19
00:01:29.890 --> 00:01:34.460
anything that's a many relationship is
going to be lazily initialized. When we
19

20
00:01:34.460 --> 00:01:38.690
set it to eager, that means that JPA is
going to try to load everything all at
20

21
00:01:38.690 --> 00:01:43.880
once. By lazy initialization, which is the
default, it doesn't load until it it's
21

22
00:01:43.880 --> 00:01:49.310
asked for so you'll get back of that
entity and the specialties would be null
22

23
00:01:49.310 --> 00:01:56.000
if we did not do this. So now, we're going
to set up a join table here. Join
23

24
00:01:56.000 --> 00:01:57.730
table is a
special table that's going to sit
24

25
00:01:57.730 --> 00:02:01.180
between so the entities are going to
have their own relationship but the
25

26
00:02:01.180 --> 00:02:05.380
underlying database is going to have a
table that's going to define IDs from
26

27
00:02:05.380 --> 00:02:10.619
both sides of their relationship.
That name, we're going to call it
27

28
00:02:10.619 --> 00:02:17.910
vet, vet_specialties,
join
28

29
00:02:20.650 --> 00:02:22.950
Columns
29

30
00:02:25.820 --> 00:02:29.360
and do JoinColumn.
30

31
00:02:35.060 --> 00:02:39.970
And then we're going to set up the
inverse as well.
31

32
00:02:48.160 --> 00:02:50.700
This is setting up a mapping
between the two
32

33
00:02:50.700 --> 00:02:55.239
tables and that this offer the
persistence so that JPA knows how to
33

34
00:02:55.239 --> 00:02:59.260
navigate between the two tables and how
the relationship is actually defined at
34

35
00:02:59.260 --> 00:03:03.730
the database level. So now of course we
need to jump over to Specialty. Of
35

36
00:03:03.730 --> 00:03:09.459
course, this is going to be annotated with
Entity. In entity what this is telling
36

37
00:03:09.459 --> 00:03:12.700
JPA that this is going to be an entity
persisted it to the database.
37

38
00:03:12.700 --> 00:03:17.349
Remember, just as a reminder, we look at
base entity. This is a map superclass, so
38

39
00:03:17.349 --> 00:03:22.239
we are inheriting an ID value from that.
That's why we don't have to set up
39

40
00:03:22.239 --> 00:03:26.470
any of the ID stuff. This all gets
inherited by that by extending out that
40

41
00:03:26.470 --> 00:03:34.650
class. So this gets a description. Almost
forgot to add in the table name.
41

42
00:03:46.050 --> 00:03:49.380
Alright! So like I said, this sort of
mapping is going to be a little bit
42

43
00:03:49.380 --> 00:03:54.270
easier because the object model is not
as complex for the vet as it was for the
43

44
00:03:54.270 --> 00:03:59.070
owners and we also completed some of the
mapping because remember we did set up a
44

45
00:03:59.070 --> 00:04:03.450
map superclass there. So let's just go
ahead and quickly review our object
45

46
00:04:03.450 --> 00:04:08.910
model here. We have the base entity,
that things inherit from. We already
46

47
00:04:08.910 --> 00:04:13.740
completed the owner that has been mapped
as a JPA entity. Person is an
47

48
00:04:13.740 --> 00:04:16.980
intermediary class so it's a map
superclass. This will never be
48

49
00:04:16.980 --> 00:04:23.310
implemented by us. We're going to inherit
from it. Pet, this is going to be another one
49

50
00:04:23.310 --> 00:04:26.760
of our entities. We completed that in
previous video, setting up that to the
50

51
00:04:26.760 --> 00:04:31.260
table of pets and the mapping related to
that and PetType and how it's related
51

52
00:04:31.260 --> 00:04:36.210
to Owner as well. PetType is one of
these root entities inherits from base
52

53
00:04:36.210 --> 00:04:43.860
entity. It just gives a pet type name.
Specialty, we modified in this video.
53

54
00:04:43.860 --> 00:04:48.750
This is specialties. It has one property
called description, also inherits from
54

55
00:04:48.750 --> 00:04:55.850
base entity. And then, vet, we are setting
up a many-to-many relationship here
55

56
00:04:55.850 --> 00:05:01.010
so that gives us some flexibility with
the specialties and you can see they're
56

57
00:05:01.010 --> 00:05:06.170
in line 15, we specify a join table so
that table is going to allow us to
57

58
00:05:06.170 --> 00:05:13.160
specify ID values from vets, the vet_id and specialty_id. So effectively, that
58

59
00:05:13.160 --> 00:05:17.090
table is just going to have two columns
in it - vet ID and specialty ID and
59

60
00:05:17.090 --> 00:05:20.750
that's going to define the relationship
between the two objects in the database.
60

61
00:05:20.750 --> 00:05:26.570
Now Visit, this is a visit. I do have a
task out there. We are going to convert
61

62
00:05:26.570 --> 00:05:29.690
this in an upcoming video so I'm going
to leave this one alone right now. But
62

63
00:05:29.690 --> 00:05:35.720
for the most part, our JPA mapping is
almost done. This was issue number 35 if
63

64
00:05:35.720 --> 00:05:40.520
I remember right. Double check here, 37.
I'm sorry. So we are going to close this
64

65
00:05:40.520 --> 00:05:46.570
out and call this one done and complete
the mapping in the upcoming video.
65

66
00:05:50.530 --> 00:05:54.069
Updated vet.
66

67
00:05:56.199 --> 00:06:01.050
We'll say that closes out 37.
