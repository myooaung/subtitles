WEBVTT
0
1
00:00:04.160 --> 00:00:08.280
In this video we are going to take a
look at implementing the vets JSON end
1

2
00:00:08.280 --> 00:00:12.380
point. Let's come in here and take a
quick look at how it was implemented.
2

3
00:00:12.380 --> 00:00:18.779
Here so if we look at the VetController,
a couple things they are hard mapping to
3

4
00:00:18.779 --> 00:00:25.410
vets.html and then we're doing a
GetMapping of vets and then the
4

5
00:00:25.410 --> 00:00:30.240
ResponseBody is what's going to parse
it to JSON or XML. What's interesting
5

6
00:00:30.240 --> 00:00:34.590
here is that we have of vets object.
It literally called vets and
6

7
00:00:34.590 --> 00:00:40.590
then we are adding a List to it.
What's going on is if we look at
7

8
00:00:40.590 --> 00:00:45.600
Vets, they're doing some older
stuff as far as setting up an XML root
8

9
00:00:45.600 --> 00:00:50.219
element and then adding an element for
this. We are going to be using just
9

10
00:00:50.219 --> 00:00:55.469
JSON and we are not going to be using
the older JAXB stuff around that. So
10

11
00:00:55.469 --> 00:00:59.820
a little bit simpler for what we're
going to be doing. The other thing I
11

12
00:00:59.820 --> 00:01:05.790
don't like what they did here is I'm
doing the vets.html versus vets. I'd
12

13
00:01:05.790 --> 00:01:09.090
like to do something a little bit
different there and we'll actually do an
13

14
00:01:09.090 --> 00:01:16.620
api/vets and set it up that. So
I'm going to jump over to IntelliJ now.
14

15
00:01:16.620 --> 00:01:23.970
Let's bring up our VetController.
And here, you can see here I kind of
15

16
00:01:23.970 --> 00:01:28.620
broke it so if you go to any of these
URLs that's going to happen to do that
16

17
00:01:28.620 --> 00:01:34.140
or it's going to break their 
implementation of it. So let's come and
17

18
00:01:34.140 --> 00:01:36.980
do public
18

19
00:01:40.700 --> 00:01:45.280
and here I'm going to do a RequestMapping.
19

20
00:01:45.750 --> 00:01:54.420
In this case let's say that we're
going to do /api/vets
20

21
00:01:54.420 --> 00:02:00.380
and here I don't actually want return
back that. Let's do a
21

22
00:02:05.000 --> 00:02:08.590
Set, Set of Vet like so.
22

23
00:02:12.730 --> 00:02:16.880
In here we can do
ResponseBody
23

24
00:02:16.880 --> 00:02:26.750
like so. So now, I just do return vetService.findAll like so. findAll is going
24

25
00:02:26.750 --> 00:02:32.540
to return back a Set of vets and let's
toggle over to their implementation.
25

26
00:02:32.540 --> 00:02:38.810
This ResponseBody basically says formatted
as a ResponseBody head. Exactly what
26

27
00:02:38.810 --> 00:02:43.910
it says. So let's take a look at the
documentation on that. Indicates that it should
27

28
00:02:43.910 --> 00:02:48.320
be bound to the web response body and
this is going to force it depending on your
28

29
00:02:48.320 --> 00:02:53.450
runtime parameters of the request it's
going to either get parse it out to JSON
29

30
00:02:53.450 --> 00:03:00.650
or XML. It can be configured either way.
Here by default is going to do JSON. So
30

31
00:03:00.650 --> 00:03:05.650
let's go ahead and restart this.
31

32
00:03:06.690 --> 00:03:13.620
I'm sending it again. I'm using the
api to simulate a Rest API and we're
32

33
00:03:13.620 --> 00:03:20.400
just going to do that. I'm going to change
this to GetMapping as well. So any get
33

34
00:03:20.400 --> 00:03:25.770
action against api/vets is going
to invoke this method. So let's come over
34

35
00:03:25.770 --> 00:03:33.890
here to Chrome. And now if I come here
35

36
00:03:35.530 --> 00:03:40.030
we can see that I get a JSON
36

37
00:03:40.030 --> 00:03:44.410
ResponseBody. You could do test
this using Postman or Curl or something
37

38
00:03:44.410 --> 00:03:49.870
like that. Here I'm just using a browser
for convenience. So we can see that I
38

39
00:03:49.870 --> 00:03:58.230
am invoking that endpoint properly. Let's
just do a quick code review on this. So
39

40
00:03:58.230 --> 00:04:03.910
I'm using GetMapping to limit this to
get requests. I'm mapping it to the
40

41
00:04:03.910 --> 00:04:09.010
URL of api/vets. ResponseBody
is going to say I want this to be
41

42
00:04:09.010 --> 00:04:13.870
formatted as JSON depending on the
request type. It's going to fall to to
42

43
00:04:13.870 --> 00:04:19.630
JSON but I could also set up Spring to
render XML as well. But here we're going
43

44
00:04:19.630 --> 00:04:24.160
to default out to JSON. Very simple
implementation. We're saying that we're
44

45
00:04:24.160 --> 00:04:28.870
going to turn back a Set. VetService
returns back a Set of Vets and then
45

46
00:04:28.870 --> 00:04:33.550
under the cover, Spring Framework is
going to be using Jackson to go ahead
46

47
00:04:33.550 --> 00:04:38.229
and create the JSON for that. So this
completes this task so I'm going to go
47

48
00:04:38.229 --> 00:04:44.979
ahead. Come over here.
That was number 75 and I will commit
48

49
00:04:44.979 --> 00:04:51.069
this into GitHub
and close out that task.
