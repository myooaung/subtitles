WEBVTT
1
00:00:05.140 --> 00:00:09.190
In this video what we are going to do is we're going to take a look at the Maven release plug in.

2
00:00:09.300 --> 00:00:15.840
Now what this plugin does is it allows you to generate releases of your artifacts and Maven.

3
00:00:15.840 --> 00:00:18.230
Now this is a pretty pretty handy plug in.

4
00:00:18.270 --> 00:00:24.120
There are some better plugins out there I should say are more popular ones and there's an argument around

5
00:00:24.120 --> 00:00:24.550
this.

6
00:00:24.570 --> 00:00:29.310
There's some very opinionated people how to perform releases.

7
00:00:29.310 --> 00:00:31.800
So I'm gonna introduce you those with a grain of salt.

8
00:00:31.810 --> 00:00:34.180
There are a lot of opinions around this.

9
00:00:34.290 --> 00:00:36.270
And this is a plugin I've used in the past.

10
00:00:36.270 --> 00:00:41.840
It works well it may not be perfect for your particular use case but it does work pretty well.

11
00:00:41.850 --> 00:00:44.060
Now I did go in and do some testing with this.

12
00:00:44.070 --> 00:00:49.320
And let me show you some changes that occurred that I did not cover before.

13
00:00:49.410 --> 00:00:58.060
So I'm going into GitHub repository if I come into the commits know we saw that I did do the refactoring

14
00:00:58.080 --> 00:01:02.360
multi module project I did have a problem with a failing test.

15
00:01:02.490 --> 00:01:08.250
Basically when I did the refactoring this got left in the wrong package and the spring context was not

16
00:01:08.250 --> 00:01:13.770
loading I thought I saw the test run when I was testing perhaps an error on my part but that has been

17
00:01:13.770 --> 00:01:20.860
corrected and then here I was doing some testing of the release plugin.

18
00:01:20.880 --> 00:01:26.730
We can see that I incremented the release ideas a couple times and I just want to show you some of the

19
00:01:26.760 --> 00:01:29.140
artifacts that happen here.

20
00:01:29.250 --> 00:01:35.100
We can see that we only have the master branch right now but in the testing of the plugin you can see

21
00:01:35.100 --> 00:01:41.190
that I did create two releases so I said Gee pet clinic there is there are 1 and zeroes are 2.

22
00:01:41.200 --> 00:01:46.610
These were my testing of preparing for this lesson so I do go through and actually do prepare for a

23
00:01:46.610 --> 00:01:51.490
number of weeks the lesson so these are artifacts have been left inside GitHub.

24
00:01:51.510 --> 00:01:54.870
Now I want to cover those at the beginning of this video.

25
00:01:54.900 --> 00:02:02.150
Now the Maven release plug in what it does to primary things are to prepare for release.

26
00:02:02.210 --> 00:02:07.440
I mean I come over here and click on the prepared example and very simple maven release prepare.

27
00:02:07.440 --> 00:02:09.600
And this is going to go through a number of things.

28
00:02:09.810 --> 00:02:13.140
And this is going to make sure that there's no uncommitted changes.

29
00:02:13.170 --> 00:02:15.960
We don't have a snapshot dependencies.

30
00:02:15.960 --> 00:02:18.380
We'll update ACM.

31
00:02:18.510 --> 00:02:23.730
This is your get or subversion or whatever whatever using for source control management.

32
00:02:23.730 --> 00:02:25.940
That's ICM source control management.

33
00:02:25.940 --> 00:02:28.440
And this is compatible with no tools out there.

34
00:02:28.590 --> 00:02:31.320
Get as probably the prominent one right now.

35
00:02:31.320 --> 00:02:33.220
It will run tests.

36
00:02:33.270 --> 00:02:38.330
It's going to commit the modified palms and then it will tag the source code.

37
00:02:38.340 --> 00:02:41.220
So that's all in the preparation of that.

38
00:02:41.250 --> 00:02:48.510
Now that perform release this is kind of important what this does it is going to check out from source

39
00:02:48.510 --> 00:02:51.150
control management and then it's going to run that.

40
00:02:51.300 --> 00:02:58.230
And what we are going to do here is it does do a deploy set up and when the capabilities of maven has

41
00:02:58.260 --> 00:03:03.720
I can configure maven and do this with my Chuck Norris jokes generator I have a jar published on maven

42
00:03:03.720 --> 00:03:09.170
central so I can use this plug in I think I can't remember it's been two years since I've done that

43
00:03:09.600 --> 00:03:16.180
but I think I use this plug in to go ahead and generate releases up to maven Central.

44
00:03:16.230 --> 00:03:21.240
So pretty common setup where you have a deploy set up for your artifacts and those artifacts are going

45
00:03:21.250 --> 00:03:27.000
to get deployed out to like a nexus server or maven central or something like that depending on your

46
00:03:27.000 --> 00:03:27.860
organizations.

47
00:03:27.930 --> 00:03:34.030
I do cover this a lot more in my dev ops course where we get into deploying them already used nexus

48
00:03:34.040 --> 00:03:34.540
there.

49
00:03:34.700 --> 00:03:40.890
Preshow use nexus to deploy artifacts to that so pretty common setup some type of internal Maven Repository

50
00:03:40.890 --> 00:03:43.450
where you deploy your internal artifacts too.

51
00:03:43.500 --> 00:03:46.610
And this is a plugin that's going to automate everything for you.

52
00:03:46.660 --> 00:03:50.940
I mean step through in this video here to show you this how we set this up.

53
00:03:51.120 --> 00:03:57.540
So we come back over here to ontology and close out a couple of these tabs here

54
00:04:00.530 --> 00:04:08.150
and now I am just on the route so I close this up a little bit so you can see better.

55
00:04:08.150 --> 00:04:10.970
So I am actually on the palm and the root of this.

56
00:04:10.970 --> 00:04:17.740
And what I want to do is I can get rid of the dependencies that's just an empty tag at this point.

57
00:04:18.030 --> 00:04:23.920
We will probably have to add that at some point in the future but for now we'll get rid of that.

58
00:04:23.960 --> 00:04:31.690
So we add and a plug in group I.D. that's going to be more patchy plugins

59
00:04:35.210 --> 00:04:37.330
and we're going to do the Maven release plug.

60
00:04:37.500 --> 00:04:42.790
Now what we don't need to do here is specify the version that will inherit from the Palm.

61
00:04:42.890 --> 00:04:49.340
The Palm has a version that we are using so that gives us some version of Apache.

62
00:04:49.470 --> 00:04:51.030
So it will inherit from that.

63
00:04:51.900 --> 00:04:57.940
And then what we need to do here is I do need to add in a configuration step member.

64
00:04:58.440 --> 00:05:02.960
Come over here remember where I said it to does the deploy.

65
00:05:03.210 --> 00:05:05.250
We do not want this to deploy.

66
00:05:05.430 --> 00:05:09.510
And so what we need to do is come in here and configure the plug in

67
00:05:14.750 --> 00:05:17.510
and I can say goals install.

68
00:05:17.510 --> 00:05:21.140
And by default the goal is going to be running for deploy.

69
00:05:21.170 --> 00:05:26.510
So deploy actually runs you see over here on the lifecycle it's just a little bit away.

70
00:05:26.600 --> 00:05:30.220
Maven works if you do compile compile run that.

71
00:05:30.230 --> 00:05:38.330
But if you do package package will run compile and test and package deploy will actually run compile

72
00:05:38.330 --> 00:05:45.440
test package verify install and then deploy and site and so deploy the deploy stuff does a lot of stuff

73
00:05:45.440 --> 00:05:46.240
that we don't want.

74
00:05:46.260 --> 00:05:49.010
That's why I'm overriding it to say install.

75
00:05:49.400 --> 00:05:51.140
So now I've made that change.

76
00:05:51.140 --> 00:05:59.290
We can see here I am on 0 0 3 snapshot and what I want to do is come here to Terminal and now I can

77
00:05:59.290 --> 00:06:12.260
say maven release cone prepare so I am asking them to run if I look at this here where I can see plugins

78
00:06:13.400 --> 00:06:16.370
I have the release plugin installed so we can see release call.

79
00:06:16.360 --> 00:06:19.470
And so these are different goals of that release plugin.

80
00:06:19.710 --> 00:06:26.830
And the first step I'm going to do is I release prepare and this is going to go through and rebuild

81
00:06:26.830 --> 00:06:30.110
a project test and make sure everything's right.

82
00:06:30.170 --> 00:06:40.110
That's going to do the ACM commits and tag the version inside of ACM and it's probably going to be unhappy.

83
00:06:40.310 --> 00:06:41.600
I thought it would be unhappy

84
00:06:44.630 --> 00:06:46.970
because I forgot to add an ACM tag

85
00:06:51.420 --> 00:06:52.980
I definitely know I need to do that

86
00:06:59.240 --> 00:07:06.010
and this tag here I need to come over here to get home to my project and what I can do is come here

87
00:07:06.490 --> 00:07:15.670
and I use us as H I have my keys configured for good hope so I can come back over here and do a c.

88
00:07:16.180 --> 00:07:23.120
Cohen get calling and then paste this like the URL.

89
00:07:23.340 --> 00:07:28.290
And depending on your provider depending on what source control management system you are using this

90
00:07:28.290 --> 00:07:28.940
could be different.

91
00:07:28.980 --> 00:07:32.570
And in the patchy documentation that does have additional details there

92
00:07:36.210 --> 00:07:37.180
Oh I see what I did.

93
00:07:37.200 --> 00:07:42.130
That's why I didn't air out because I accidentally clicked on run here.

94
00:07:42.180 --> 00:07:48.040
When I went to the command of the terminal window did not run earlier so that reran amazing command.

95
00:07:48.090 --> 00:07:55.460
So here I want to make an early least Paracelsus actually going to run the relief stop so that was my

96
00:07:55.460 --> 00:07:57.410
mistake earlier in the video.

97
00:07:57.410 --> 00:08:00.850
And now you can see it's asking me for the release version.

98
00:08:00.890 --> 00:08:06.980
I'm just going to hit enter and you can see it's just basically lopping off the snapshot and it's asking

99
00:08:06.980 --> 00:08:14.630
me for the sub modules and there's the label and the new version is going to be 0 0 for Def snapshot.

100
00:08:14.690 --> 00:08:15.740
So I'll be on a snapshot.

101
00:08:15.740 --> 00:08:19.360
Release and the same for that.

102
00:08:19.360 --> 00:08:24.210
So now it's going to go through and rebuild the project trust it tag it inside of us.

103
00:08:25.730 --> 00:08:30.070
And again I thought I was going to get an error there earlier and I accidentally reran a maven command

104
00:08:30.100 --> 00:08:32.470
and the run window rather than here

105
00:08:35.480 --> 00:08:41.790
and you could see that I now have built success so that is all happy and all I can do.

106
00:08:41.790 --> 00:08:51.730
Here is maven release perform.

107
00:08:51.910 --> 00:08:58.510
So again if I look over here these are the steps and you're primarily going to be using prepare and

108
00:08:58.510 --> 00:09:03.460
then perform prepare and perform these others and you're going to be running when something goes wrong

109
00:09:03.490 --> 00:09:04.990
or if you need to do something special on it.

110
00:09:05.080 --> 00:09:07.090
I'm not going to be able to get into each one of those.

111
00:09:07.120 --> 00:09:09.310
So let's go ahead and run or at least perform

112
00:09:16.340 --> 00:09:20.760
and you'll see us running through testing everything make sure it runs we bring up the spring context

113
00:09:20.760 --> 00:09:22.620
we don't have a lot of test here yet.

114
00:09:22.620 --> 00:09:27.320
So everything runs by pretty quick and we can see that that has not been committed.

115
00:09:27.330 --> 00:09:32.120
But if I come over here and do a refresh on this

116
00:09:35.960 --> 00:09:38.930
and we can see now that I have really.

117
00:09:38.990 --> 00:09:41.630
0 0 3 has been committed.

118
00:09:41.630 --> 00:09:43.720
Now what I also can do.

119
00:09:43.720 --> 00:09:50.850
You so I had to re tag had to say approve all the different tags for the modules.

120
00:09:50.960 --> 00:09:54.680
What we can do is add in one more configuration step here.

121
00:09:54.740 --> 00:10:01.700
Auto version sub modules and I'm going to say true for that value.

122
00:10:01.930 --> 00:10:11.700
Now if I come and do another release prepare so I'm going to prepare another release and now you can

123
00:10:11.700 --> 00:10:15.540
see he's asked me to do I want to use the 0 0 4 for the release.

124
00:10:15.540 --> 00:10:21.290
Yes and I'm going to use the label as f g Pet Clinic 0 0 4.

125
00:10:21.290 --> 00:10:22.470
Yes.

126
00:10:22.520 --> 00:10:28.410
Now it's going to ask me for the snapshot version so be 0 0 5 for the snapshot.

127
00:10:29.400 --> 00:10:35.640
And you can see that this time last time it prompted me for the two sub modules and this time it did

128
00:10:35.640 --> 00:10:36.500
not.

129
00:10:36.510 --> 00:10:38.880
So you can have differing versions.

130
00:10:38.910 --> 00:10:43.590
There's some people are very adamant where you do need to have different versions on your sub model.

131
00:10:43.590 --> 00:10:45.480
I am actually in the other camp.

132
00:10:45.510 --> 00:10:51.660
I'm not sure why if you're gonna have a multi module project why you would want to have different versions

133
00:10:51.830 --> 00:10:52.280
in that.

134
00:10:53.190 --> 00:10:55.680
So now I'm going to go do the release perform

135
00:10:58.390 --> 00:11:04.830
and now it's going to go through and actually perform that release and committed up to get some and

136
00:11:04.860 --> 00:11:09.180
these tests are running.

137
00:11:09.350 --> 00:11:11.220
You can see that that has completed.

138
00:11:11.220 --> 00:11:19.620
Now if I come back over to get hub and do a refresh build see tag 0 4 is there.

139
00:11:19.650 --> 00:11:26.000
So we've completed 0 4 and I am just going to go ahead and commit this.

140
00:11:26.110 --> 00:11:27.360
Let's go ahead and commit

141
00:11:30.380 --> 00:11:36.460
say commit the directory and we can see that the palms have changed and say adding

142
00:11:39.510 --> 00:11:41.190
Now these did not automatically commit.

143
00:11:41.190 --> 00:11:42.930
That's something I'm going to look into.

144
00:11:42.930 --> 00:11:48.140
I would expect in this release process that changes to the Palm should be committed.

145
00:11:48.150 --> 00:11:53.840
But in this case it was not so that produced a small bug that I need to work out.

146
00:11:54.340 --> 00:12:05.100
So I go ahead and commit this and I'm going to push that and this time I forgot to update the issue

147
00:12:05.130 --> 00:12:08.480
but I'm going to go ahead and say this and may even

148
00:12:14.380 --> 00:12:20.280
so I'm putting a note in there may have a problem a problem with get commits.

149
00:12:20.350 --> 00:12:23.650
So I'm going to go ahead and close and comment.

150
00:12:23.880 --> 00:12:29.740
And again I just put this plug in there just to show you as an example of using the Maven released plug

151
00:12:29.740 --> 00:12:34.430
in as you get into more and more complicated Java projects and this is a handy plugin to have.

152
00:12:34.540 --> 00:12:37.570
There's other plugins for maven that do very similar things.

153
00:12:37.630 --> 00:12:42.940
And if you're on great all again there's plugins were great all as well so this was very much favored

154
00:12:43.030 --> 00:12:44.840
three years ago development.

155
00:12:44.870 --> 00:12:50.650
It's kind of grown a little stagnant but it's a mature plugin still widely use so I would not be surprised

156
00:12:50.650 --> 00:12:56.590
if you see it in the industry again this plugin is all about creating releases of your artifacts.
