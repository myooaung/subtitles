WEBVTT
0
1
00:00:00.082 --> 00:00:04.249
(beeping)
(soft acoustic music)
1

2
00:00:05.386 --> 00:00:06.435
<v Instructor>All right, in this video</v>
2

3
00:00:06.435 --> 00:00:08.892
we are going to look at setting up MySQL
3

4
00:00:08.892 --> 00:00:11.028
in the Spring Boot context.
4

5
00:00:11.028 --> 00:00:13.401
Now, the first thing that we need to do
5

6
00:00:13.401 --> 00:00:16.272
is we need to add in the MySQL driver,
6

7
00:00:16.272 --> 00:00:19.706
and you can see there on line 63 of the Maven pom
7

8
00:00:19.706 --> 00:00:22.470
I've added in the MySQL driver for us,
8

9
00:00:22.470 --> 00:00:24.759
so now that will be available to our project.
9

10
00:00:24.759 --> 00:00:27.402
And also, please note I am not adding
10

11
00:00:27.402 --> 00:00:29.635
in the version at this time,
11

12
00:00:29.635 --> 00:00:32.421
and this is something important with a Spring Boot project
12

13
00:00:32.421 --> 00:00:36.293
because we do have the Spring Boot parent pom,
13

14
00:00:36.293 --> 00:00:38.914
and we're going to inherit version information from that,
14

15
00:00:38.914 --> 00:00:41.081
so that in this way, we are not messing
15

16
00:00:41.081 --> 00:00:42.618
with those curated dependencies.
16

17
00:00:42.618 --> 00:00:44.854
So we're going to depending on the Spring guys
17

18
00:00:44.854 --> 00:00:47.934
to be setting up the proper version of the driver,
18

19
00:00:47.934 --> 00:00:50.851
so we're going to trust in that to be working properly.
19

20
00:00:50.851 --> 00:00:54.757
So this configuration gives us the MySQL driver,
20

21
00:00:54.757 --> 00:00:57.250
but it does not give us the version.
21

22
00:00:57.250 --> 00:00:59.460
So, that is going to be getting inherited
22

23
00:00:59.460 --> 00:01:02.179
from the Spring Boot parent pom.
23

24
00:01:02.179 --> 00:01:04.499
Now, the next thing that we need to do
24

25
00:01:04.499 --> 00:01:07.515
is add in some configuration for that.
25

26
00:01:07.515 --> 00:01:11.193
Now, if you remember, here I have added in
26

27
00:01:11.193 --> 00:01:14.108
an application-dev.yml file just for fun
27

28
00:01:14.108 --> 00:01:15.988
because I thought it'd be fun to use yml
28

29
00:01:15.988 --> 00:01:17.917
in this example, rather than a plain old,
29

30
00:01:17.917 --> 00:01:20.688
boring properties file. And as you know,
30

31
00:01:20.688 --> 00:01:22.460
we can mix and match those.
31

32
00:01:22.460 --> 00:01:24.397
So I could easily create one as a properties file,
32

33
00:01:24.397 --> 00:01:27.580
and a different one as a yaml file.
33

34
00:01:27.580 --> 00:01:29.624
But let's step through what's going on in here.
34

35
00:01:29.624 --> 00:01:32.339
So, we're setting up the Spring data source URL,
35

36
00:01:32.339 --> 00:01:36.506
so see jdbc:mysql, and localhost which is fine.
36

37
00:01:37.586 --> 00:01:39.861
In my case, it's running in a Docker container,
37

38
00:01:39.861 --> 00:01:42.423
and we are pointing it to the port 3306,
38

39
00:01:42.423 --> 00:01:46.421
which is the standard MySQL database port,
39

40
00:01:46.421 --> 00:01:51.241
and then the /sfg_dev, that is the database
40

41
00:01:51.241 --> 00:01:53.169
that we want to connect to.
41

42
00:01:53.169 --> 00:01:56.084
And then we set up the username and password.
42

43
00:01:56.084 --> 00:01:58.849
Now, typically if you're in a Enterprise,
43

44
00:01:58.849 --> 00:02:00.539
setting up free-text password like that
44

45
00:02:00.539 --> 00:02:03.084
is definitely frowned upon.
45

46
00:02:03.084 --> 00:02:04.391
A lot of times, what you're going to do
46

47
00:02:04.391 --> 00:02:06.958
is not set the password in the properties file,
47

48
00:02:06.958 --> 00:02:10.126
but you'll pass that in as an environment variable,
48

49
00:02:10.126 --> 00:02:13.318
and then that's one way around the audit requirements.
49

50
00:02:13.318 --> 00:02:15.678
Another way is to set up encryption on that,
50

51
00:02:15.678 --> 00:02:18.239
I do get into that in my DevOpps course,
51

52
00:02:18.239 --> 00:02:20.279
may add that to that course later,
52

53
00:02:20.279 --> 00:02:21.840
as far as encrypting properties there,
53

54
00:02:21.840 --> 00:02:24.539
I think it's a good practice to do,
54

55
00:02:24.539 --> 00:02:27.428
but a lot of times what I will do when I'm running these
55

56
00:02:27.428 --> 00:02:30.753
and different environments in the Enterprise,
56

57
00:02:30.753 --> 00:02:33.190
those password values that I'll prefer to use
57

58
00:02:33.190 --> 00:02:35.348
and an environment variable that is set
58

59
00:02:35.348 --> 00:02:37.688
in the operating system environment,
59

60
00:02:37.688 --> 00:02:39.022
and gets pulled in that way.
60

61
00:02:39.022 --> 00:02:40.413
And the next thing we need to talk about
61

62
00:02:40.413 --> 00:02:42.913
is the jpa hibernate ddl-auto,
62

63
00:02:44.058 --> 00:02:46.932
and in this case, we are setting it to validate.
63

64
00:02:46.932 --> 00:02:49.053
When you're running against a database,
64

65
00:02:49.053 --> 00:02:51.041
especially in a production database,
65

66
00:02:51.041 --> 00:02:54.370
you do not want Hibernate doing dml changes,
66

67
00:02:54.370 --> 00:02:58.196
or I should say ddl, so, and also in this case,
67

68
00:02:58.196 --> 00:03:00.389
because of the way we set up our user accounts,
68

69
00:03:00.389 --> 00:03:02.983
they could not do it, so they would get smacked down,
69

70
00:03:02.983 --> 00:03:05.916
but I feel it's a good idea to put validate there
70

71
00:03:05.916 --> 00:03:07.903
because this is going to tell Hibernate
71

72
00:03:07.903 --> 00:03:11.063
to go in and check the schema, make sure that the schema
72

73
00:03:11.063 --> 00:03:13.541
that it finds is as expected.
73

74
00:03:13.541 --> 00:03:16.337
We're going to set up the database platform,
74

75
00:03:16.337 --> 00:03:19.387
the database of MySQL, and in dev,
75

76
00:03:19.387 --> 00:03:23.085
we are going to go ahead and set the parameter show-sql,
76

77
00:03:23.085 --> 00:03:26.785
so we'll see the SQL statements in the console as it runs.
77

78
00:03:26.785 --> 00:03:28.910
So that's a pretty handy thing for dev,
78

79
00:03:28.910 --> 00:03:31.827
but contrast with the prod configuration,
79

80
00:03:31.827 --> 00:03:33.372
I set that to false,
80

81
00:03:33.372 --> 00:03:35.854
because we don't want to clog up our logs
81

82
00:03:35.854 --> 00:03:38.247
and production with SQL statements,
82

83
00:03:38.247 --> 00:03:41.004
so I'm going to show you this run, now, so.
83

84
00:03:41.004 --> 00:03:44.103
And inside of IntelliJ, what's nice is,
84

85
00:03:44.103 --> 00:03:45.964
you can come in and set an active profile,
85

86
00:03:45.964 --> 00:03:50.107
so I'm going to go ahead and set this to dev.
86

87
00:03:50.107 --> 00:03:54.274
Say apply and okay, and now we go ahead and run this,
87

88
00:03:56.639 --> 00:03:59.207
and we can see that we get a failure on startup,
88

89
00:03:59.207 --> 00:04:02.301
and that's because the schema validation is failing.
89

90
00:04:02.301 --> 00:04:06.219
Now if I come back up here and edit configurations,
90

91
00:04:06.219 --> 00:04:07.552
and remove that,
91

92
00:04:11.295 --> 00:04:12.860
now I'm going to run it again,
92

93
00:04:12.860 --> 00:04:15.046
and this time it's going to come up,
93

94
00:04:15.046 --> 00:04:18.906
and that's because now, because I didn't specify a profile,
94

95
00:04:18.906 --> 00:04:23.103
it's defaulting back to the H2 in-memory database, where,
95

96
00:04:23.103 --> 00:04:27.097
here, the validate is actually the create-drop option.
96

97
00:04:27.097 --> 00:04:30.516
So that's a Spring Boot default, so that's why
97

98
00:04:30.516 --> 00:04:33.091
when we're running inside the H2 database,
98

99
00:04:33.091 --> 00:04:37.257
we're going to be running with the ddl auto of create-drop,
99

100
00:04:37.257 --> 00:04:40.138
against MySQL we're going to do validate instead.
100

101
00:04:40.138 --> 00:04:42.133
Let's see if that...
101

102
00:04:42.133 --> 00:04:45.446
So in this way, as we're doing development against this,
102

103
00:04:45.446 --> 00:04:48.658
this is a pretty handy configuration that we've set up here
103

104
00:04:48.658 --> 00:04:51.365
because it allows me to, without a profile,
104

105
00:04:51.365 --> 00:04:53.893
run against the H2 in-memory database,
105

106
00:04:53.893 --> 00:04:55.493
and do my rapid development,
106

107
00:04:55.493 --> 00:04:57.724
as we've been seeing throughout this course,
107

108
00:04:57.724 --> 00:05:02.007
and now when I want to connect to a real database,
108

109
00:05:02.007 --> 00:05:05.157
a persistent database, I can switch my profile
109

110
00:05:05.157 --> 00:05:08.462
and have that profile pick up those database properties.
110

111
00:05:08.462 --> 00:05:12.556
Now I do want to point out, here, what we are doing here,
111

112
00:05:12.556 --> 00:05:15.038
you'll see a lot of misunderstanding,
112

113
00:05:15.038 --> 00:05:16.846
especially out there in blog posts,
113

114
00:05:16.846 --> 00:05:19.881
where they'll actually go in and create a bean,
114

115
00:05:19.881 --> 00:05:22.537
a data source bean for the different databases,
115

116
00:05:22.537 --> 00:05:24.695
and like I said, that is a perfectly valid way of doing that
116

117
00:05:24.695 --> 00:05:27.373
to go in and declare a data source bean,
117

118
00:05:27.373 --> 00:05:30.712
but understand that if we set these properties
118

119
00:05:30.712 --> 00:05:33.196
for Spring Boot, Spring Boot is going to configure
119

120
00:05:33.196 --> 00:05:35.573
that data source for us, with these properties,
120

121
00:05:35.573 --> 00:05:38.881
so we don't have to explicitly set that data source bean.
121

122
00:05:38.881 --> 00:05:41.323
So important piece of information there.
122

123
00:05:41.323 --> 00:05:43.589
You will see it done differently.
123

124
00:05:43.589 --> 00:05:45.668
It's not necessarily incorrect,
124

125
00:05:45.668 --> 00:05:48.152
sometimes I will do that myself, no particular reason,
125

126
00:05:48.152 --> 00:05:50.111
sometimes I think it's a little bit more readable,
126

127
00:05:50.111 --> 00:05:52.416
but as I've become more and more comfortable
127

128
00:05:52.416 --> 00:05:54.469
with Spring Boot, this is kind of
128

129
00:05:54.469 --> 00:05:55.988
my preferred way of doing it,
129

130
00:05:55.988 --> 00:05:59.089
and I think it's simpler because you're not
130

131
00:05:59.089 --> 00:06:00.879
explicitly declaring that Spring bean
131

132
00:06:00.879 --> 00:06:02.598
in a configuration class.
132

133
00:06:02.598 --> 00:06:04.609
You're allowing the Spring Boot autoconfiguration
133

134
00:06:04.609 --> 00:06:06.175
to pick up these properties
134

135
00:06:06.175 --> 00:06:09.758
and configure the data source bean for you.
