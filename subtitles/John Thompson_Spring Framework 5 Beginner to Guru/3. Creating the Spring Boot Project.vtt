WEBVTT
0
1
00:00:03.560 --> 00:00:10.840
OK, you can see up on the screen there, I have the Spring 5 jokes up and a V2, so this section
1

2
00:00:10.840 --> 00:00:13.060
of the course is actually being rerecorded.
2

3
00:00:13.060 --> 00:00:17.950
So there's a second repository that I will be replacing the original one with.
3

4
00:00:17.950 --> 00:00:19.240
So this brand new repository.
4

5
00:00:19.250 --> 00:00:22.880
And that's why I'm using the V2 hand it to the end there.
5

6
00:00:23.250 --> 00:00:27.180
Now, right now, this repository is more or less empty.
6

7
00:00:27.180 --> 00:00:33.280
You see, it's basically got the README license and I git ignore file and I am on the main branch.
7

8
00:00:33.280 --> 00:00:35.830
So that is the default branch for this repository.
8

9
00:00:36.110 --> 00:00:41.620
And I've gone in and I've created an issue and something I like to start doing
9

10
00:00:41.620 --> 00:00:47.220
in the course as far as using GitHub issues, it allows me to check in against this.
10

11
00:00:47.230 --> 00:00:50.020
So you'll be able to see exactly what I committed for the code.
11

12
00:00:50.030 --> 00:00:55.570
And in this example here, we are just going to create the initial project and I'm going to show you
12

13
00:00:55.570 --> 00:00:57.000
two different ways to do that.
13

14
00:00:57.010 --> 00:00:59.770
One, let's go ahead and use Spring Initializr.
14

15
00:01:00.250 --> 00:01:05.410
This is Josh Long's favorite site ever start.spring.io
15

16
00:01:05.620 --> 00:01:09.460
And you'll see in my slides that I spell it like they did here.
16

17
00:01:09.520 --> 00:01:13.900
They got a little bit of a funky spelling there, that a few people say, hey, you got a typo there,
17

18
00:01:14.050 --> 00:01:16.980
like know kind of how they decided to spell it.
18

19
00:01:17.440 --> 00:01:23.320
So right now you should be able to use the most recent version of Spring Boot, the time recording.
19

20
00:01:23.560 --> 00:01:25.780
We are in the 2.4.2.
20

21
00:01:25.810 --> 00:01:28.540
So I'm going to go ahead and utilize that again.
21

22
00:01:28.540 --> 00:01:32.710
Maven Java and come here, do my my package.
22

23
00:01:34.150 --> 00:01:41.230
This is a pretty common Java Convention as far as doing reverse domain name, I know not all languages
23

24
00:01:41.230 --> 00:01:41.710
do that.
24

25
00:01:42.100 --> 00:01:49.990
And what I like to do here, you can see that I've got the Spring 5 jokes out just out of my personal
25

26
00:01:49.990 --> 00:01:50.770
convention.
26

27
00:01:50.800 --> 00:01:53.510
I like to make that the same name as the project.
27

28
00:01:53.530 --> 00:01:55.420
So now the artifact.
28

29
00:01:55.600 --> 00:02:02.990
So my artifact name matches the repository name just a way that I personally keep things organized.
29

30
00:02:03.370 --> 00:02:09.040
We are going to go ahead and use the jar packaging Java 11. You see here, Java 15 is available.
30

31
00:02:09.070 --> 00:02:11.740
I am not running on the newer releases.
31

32
00:02:11.740 --> 00:02:14.950
I'm staying on the long term release of Java 11 for this.
32

33
00:02:15.760 --> 00:02:18.460
And we need to add in two dependencies.
33

34
00:02:18.880 --> 00:02:24.700
We want to come up here and do Spring Web and then also we want
34

35
00:02:27.770 --> 00:02:28.320
Thymeleaf.
35

36
00:02:28.460 --> 00:02:30.420
So we'll go ahead and bring that in as far as our template went.
36

37
00:02:30.830 --> 00:02:32.720
So very, very simple project.
37

38
00:02:32.750 --> 00:02:33.560
That's all we need.
38

39
00:02:33.860 --> 00:02:37.240
And just double check everything here.
39

40
00:02:37.400 --> 00:02:41.390
And I could update the description and whatnot if I wanted to. For this here,
40

41
00:02:41.410 --> 00:02:43.040
I'm just going to take it as is.
41

42
00:02:43.400 --> 00:02:49.190
And when I click on Generate, I can see that that has downloaded a zip file.
42

43
00:02:49.190 --> 00:02:56.240
So depending on your operating system, grabbed that zip file and you could copy it over into your working
43

44
00:02:56.240 --> 00:02:56.730
directory.
44

45
00:02:57.110 --> 00:03:01.490
Now, the second way of generating project is right through IntelliJ.
45

46
00:03:01.880 --> 00:03:06.890
So I can jump over to IntelliJ and generate this project again using IntelliJ.
46

47
00:03:06.920 --> 00:03:08.690
So let me toggle over to IntelliJ.
47

48
00:03:11.230 --> 00:03:17.350
And here, what I want to do is come up to file new, I'm going to say new project.
48

49
00:03:18.890 --> 00:03:25.280
And here, I want you the Spring Initializr where you can see that it's asked me for JDK and the default
49

50
00:03:25.280 --> 00:03:27.170
service, y'all apparently could change.
50

51
00:03:27.290 --> 00:03:29.180
I don't know of any alternatives out there.
51

52
00:03:29.840 --> 00:03:35.870
I imagine they probably have developed in preproduction ones, and I don't know of any third parties
52

53
00:03:35.870 --> 00:03:36.290
using one.
53

54
00:03:36.290 --> 00:03:38.750
But if there is, you could change it there.
54

55
00:03:38.780 --> 00:03:39.590
We don't need to.
55

56
00:03:39.600 --> 00:03:43.580
So I'm going to click on Next. Again, use the first domain.
56

57
00:03:46.150 --> 00:03:53.350
That should still have that on the clipboard as far as the name, so spring5 jokes app v2. Maven
57

58
00:03:53.350 --> 00:03:55.210
Java Jar 11
58

59
00:03:56.140 --> 00:04:01.690
The version, the 0 0 1 snapshot, that is perfectly fine, the name here.
59

60
00:04:04.650 --> 00:04:10.890
Take that Chuck Norris jokes up and I'm just taken here. So this is fine, too, so it's setting up
60

61
00:04:10.890 --> 00:04:16.860
a default package of gurus.springframework.spring5jokesappv2 that you could overwrite
61

62
00:04:16.860 --> 00:04:16.980
it
62

63
00:04:16.980 --> 00:04:17.420
if you want.
63

64
00:04:17.430 --> 00:04:20.040
I'm going to take the default on that.
64

65
00:04:20.050 --> 00:04:21.840
So let's go ahead and say next.
65

66
00:04:23.050 --> 00:04:27.310
And here, very simple, you want spring web.
66

67
00:04:29.040 --> 00:04:38.010
Temple Engines Thymeleaf and you can see here 2.4.2 and I'm going to say next and here's where it's
67

68
00:04:38.010 --> 00:04:40.920
going to allow me to say where I want to bring it.
68

69
00:04:41.730 --> 00:04:44.220
And let's come in here.
69

70
00:04:46.270 --> 00:04:49.690
You need to navigate through so you can see a lot of my courses in here.
70

71
00:04:56.740 --> 00:05:04.330
So in here, so I'm going to do spring 5 spring 5 jokes app. So you can see the module name. Just
71

72
00:05:04.330 --> 00:05:05.440
double checking everything.
72

73
00:05:05.440 --> 00:05:06.550
Everything looks good.
73

74
00:05:07.620 --> 00:05:08.760
So content root.
74

75
00:05:10.750 --> 00:05:14.110
And now I am just going to go ahead and click on Finish.
75

76
00:05:15.660 --> 00:05:23.550
And here you can see that it is downloaded and created and you can see here, I did cheat a little bit
76

77
00:05:24.300 --> 00:05:29.420
because I am working on this. We do have the read me here, which is exactly what I wanted.
77

78
00:05:29.760 --> 00:05:32.730
So I had checked out of GitHub into that directory.
78

79
00:05:33.060 --> 00:05:34.500
So it already cloned the directory.
79

80
00:05:34.500 --> 00:05:41.130
But now what I've done is I took the Spring Initializr from inside of IntelliJ and generated those
80

81
00:05:41.130 --> 00:05:42.810
files through IntelliJ.
81

82
00:05:42.840 --> 00:05:49.500
Now, if you downloaded everything from the start.spring.io you would have to copy these files
82

83
00:05:49.500 --> 00:05:51.090
into that networking directory.
83

84
00:05:51.100 --> 00:05:54.750
So if you checked out into a working directory, you'd want to copy those files
84

85
00:05:54.750 --> 00:06:00.650
in and when you're done with everything, what you want to do is basically have what I'm seeing here.
85

86
00:06:00.660 --> 00:06:05.220
So we have the source, main Java, the spring boot application there.
86

87
00:06:05.610 --> 00:06:06.900
Let me resize this a little bit.
87

88
00:06:08.650 --> 00:06:16.390
So now this is the initial spring boot application, and what I'm going to do is I'll go ahead and commit
88

89
00:06:16.390 --> 00:06:18.280
this, I toggle back over to Crome.
89

90
00:06:21.300 --> 00:06:27.450
I'm going to commit all the files that I generated through the Spring Boot Initializr or into GitHub,
90

91
00:06:27.630 --> 00:06:33.090
and I will tag it with this issue number one here to create the Spring Boot project.
91

92
00:06:33.270 --> 00:06:35.880
And you'll see exactly what got committed.
92

93
00:06:36.330 --> 00:06:41.820
All the files that were generated in this video, you'll see committed against the ticket here.
