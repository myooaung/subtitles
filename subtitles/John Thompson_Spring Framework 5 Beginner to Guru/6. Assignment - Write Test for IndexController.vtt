WEBVTT
0
1
00:00:04.190 --> 00:00:09.750
Alright, I have an assignment for you
in this video here and what I want you
1

2
00:00:09.750 --> 00:00:15.179
to do is go in and write a test for the
index controller. And the requirements
2

3
00:00:15.179 --> 00:00:18.420
for this assignment, of course, we're
gonna use JUnit as we just saw and
3

4
00:00:18.420 --> 00:00:25.410
we wanna use Mockito Mock both for
the RecipeService and the Model. And we
4

5
00:00:25.410 --> 00:00:30.710
wanna make sure that the proper String
is returned from our index method and
5

6
00:00:30.710 --> 00:00:35.640
verify the interactions with the two
mocks. So let's take a look at the source
6

7
00:00:35.640 --> 00:00:41.879
code here real quick. I'm gonna get out of
keynote and we'll jump over to IntelliJ.
7

8
00:00:41.879 --> 00:00:47.910
So here's our IndexController class, so
we have the RecipeService there on line
8

9
00:00:47.910 --> 00:00:52.680
16. It gets injected into the constructor
so we'll need to create a Mockito Mock
9

10
00:00:52.680 --> 00:00:59.460
for that and then also, the getIndexPage() is
expecting a model from the Spring
10

11
00:00:59.460 --> 00:01:04.470
Framework. And model is actually an
interface so we can easily mock that. We
11

12
00:01:04.470 --> 00:01:08.570
don't really need to give it a proper
implementation of Mockito Mock. It will
12

13
00:01:08.570 --> 00:01:13.920
suit our purposes just fine there and we
wanna verify that the model 
13

14
00:01:13.920 --> 00:01:20.520
addAttribute is called one time. And we wanna verify that the recipeService 
14

15
00:01:20.520 --> 00:01:26.400
getRecipes() is called exactly one time. And
we wanna make sure that the method 
15

16
00:01:26.400 --> 00:01:31.350
getIndexPage() will return a String that
equals index. So go ahead and code that
16

17
00:01:31.350 --> 00:01:37.049
up and in the next video, I will step
through exactly that implementation and
17

18
00:01:37.049 --> 00:01:41.960
take you through it step by step and
show you exactly how to code this up.
