WEBVTT
0
1
00:00:04.950 --> 00:00:08.950
So in this video I'm going to show you how to utilize the H2 database council.
1

2
00:00:08.950 --> 00:00:12.090
So first thing I'm gonna do is go ahead and start the application.
2

3
00:00:12.100 --> 00:00:19.530
So I'm just gonna click here and run the Spring Boot web application and we can see that it starts up
3

4
00:00:19.650 --> 00:00:25.630
fairly quickly so we are up and running and we can see here in the council output that Tomcat started
4

5
00:00:25.650 --> 00:00:27.410
to port 80 80.
5

6
00:00:27.420 --> 00:00:29.160
Now I'm going to toggle over to Chrome
6

7
00:00:32.060 --> 00:00:36.370
and here you can see local host 80 80 so that's where Tomcat is listening.
7

8
00:00:36.490 --> 00:00:42.610
And if you go to the URL h2-console, that is where the database console is.
8

9
00:00:42.610 --> 00:00:46.380
You can see here I'm getting a white label error page.
9

10
00:00:46.390 --> 00:00:52.780
This is the standard Spring Boot error page and we're seeing that we're getting a not found status
10

11
00:00:52.800 --> 00:00:56.010
404 which is expected at this point.
11

12
00:00:56.030 --> 00:01:05.670
Now if I come back over here to IntelliJ, I need to do a stop spring coming new to application properties.
12

13
00:01:05.700 --> 00:01:12.390
I'm just going to type H2 and you can see that we do have several settings in the H2 console enable
13

14
00:01:12.490 --> 00:01:13.820
is default to false.
14

15
00:01:13.830 --> 00:01:17.700
There was a period in time where a Spring Boot was enabling that by default.
15

16
00:01:17.700 --> 00:01:18.560
True.
16

17
00:01:18.720 --> 00:01:25.020
But they made a change of some I forget what a release it was but that is now set to false and there's
17

18
00:01:25.020 --> 00:01:27.500
a couple other settings that we can adjust in here.
18

19
00:01:27.660 --> 00:01:32.910
Not going to get into those at this point but the primary thing is we want to take this enable it and
19

20
00:01:32.910 --> 00:01:39.120
set it to true and then we do need to restart Spring Boot.
20

21
00:01:39.120 --> 00:01:40.010
So I stopped.
21

22
00:01:40.030 --> 00:01:47.780
I'm just getting started again for the setting to take effect. Now we can see that we are up and running
22

23
00:01:47.780 --> 00:01:52.130
again and taking a look at the console output.
23

24
00:01:52.130 --> 00:01:56.300
Here we can see here that we do have output.
24

25
00:01:56.330 --> 00:02:03.720
So we are saying that it's available at H2 console. In this here, database available at this jdbc URL.
25

26
00:02:03.740 --> 00:02:04.760
This is very important.
26

27
00:02:04.790 --> 00:02:13.520
So that's at H jdbc:h2:mem  that means an in-memory database and the schema name is
27

28
00:02:13.520 --> 00:02:15.670
gonna be testdb. So that's very important
28

29
00:02:15.680 --> 00:02:19.310
to  set up. I toggle over to Chrome
29

30
00:02:19.320 --> 00:02:27.140
now. I'm just going to do a refresh since I already had that URL. And here you can see that we have
30

31
00:02:27.140 --> 00:02:31.940
a log in page, defaults to username as a password of normal.
31

32
00:02:32.060 --> 00:02:38.390
But what you want to watch out for here is this JDBC URL. I'll make sure that matches what we had before
32

33
00:02:38.720 --> 00:02:44.370
because what chances are if you are running this the first time you might get something different there.
33

34
00:02:44.390 --> 00:02:49.970
So definitely watch this. I see people have a lot of problems with this as far as having that. Because
34

35
00:02:49.970 --> 00:02:55.790
what happens if you have a different database string in there, different connect string, your the way
35

36
00:02:55.820 --> 00:03:00.560
H2 works is just going to create the database for you in memory and you're not going to see any
36

37
00:03:00.560 --> 00:03:01.730
of the tables.
37

38
00:03:01.790 --> 00:03:08.210
So this is a very important piece right here. So I'm going to do is click on Connect.
38

39
00:03:08.270 --> 00:03:15.740
Now we can see the database that has been created by Hibernate. So Hibernate as defaulting into a create
39

40
00:03:15.740 --> 00:03:22.130
mode. Just looking at our JPA entities and running the necessary rescue all statements to create our
40

41
00:03:22.130 --> 00:03:23.390
database tables.
41

42
00:03:23.390 --> 00:03:28.120
So now if I just come over here to publisher, I clicked on publisher. I'm to run that.
42

43
00:03:28.370 --> 00:03:33.290
And here we can see the properties that I set up there for that.
43

44
00:03:33.320 --> 00:03:40.860
So I clear this. We can also go to author and run that. Now we can see we've got Eric Evans and Ron
44

45
00:03:40.880 --> 00:03:48.280
Johnson that have been created in the author table. And if I clear this, come over to book, run that, we
45

46
00:03:48.280 --> 00:03:51.370
can see the table that was created for the book.
46

47
00:03:51.370 --> 00:03:58.600
So we are in fact loading data into in-memory database. This H2 Console is a very handy tool to use
47

48
00:03:58.600 --> 00:04:04.660
especially when you're developing. If you're going through and altering your domain objects, you can
48

49
00:04:05.050 --> 00:04:10.900
get feedback pretty quick about what's going on in the database. So this also helps you with the debugging.
49

50
00:04:10.900 --> 00:04:16.330
So you have something odd happening, sometimes it's important to go look at the database and see what's
50

51
00:04:16.330 --> 00:04:17.110
really going on.
51

52
00:04:17.620 --> 00:04:25.370
So just a recap, we toggle back over to IntelliJ. To enable this, all you need to do is add this line 
52

53
00:04:25.400 --> 00:04:34.660
spring.h2.console.enabled=true and then you'll see this console auto configuration. Here, this is
53

54
00:04:34.660 --> 00:04:35.620
very important.
54

55
00:04:36.100 --> 00:04:44.800
So the URL is going to be by default h2-console and then the database connect string, this
55

56
00:04:44.800 --> 00:04:52.690
jdbc:h2:mem: testdb so that is where you go. Chances are the first time you're
56

57
00:04:52.690 --> 00:04:58.240
running that. there's a good chance at the jdbc connect URL will be different and if you connect
57

58
00:04:58.630 --> 00:05:03.610
you're not going to see any of the tables or any of the data that's been created and to be in memory
58

59
00:05:03.610 --> 00:05:05.800
database that Spring Boot is using.
