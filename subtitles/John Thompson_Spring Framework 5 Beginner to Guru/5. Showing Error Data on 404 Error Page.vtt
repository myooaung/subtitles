WEBVTT
0
1
00:00:04.460 --> 00:00:08.760
Okay now that we have error page that we
can work with, what I want to show you in
1

2
00:00:08.760 --> 00:00:12.059
this video is how we can actually
provide some useful information back to
2

3
00:00:12.059 --> 00:00:16.260
our end user. And in troubleshooting that
sometimes you want to provide a little
3

4
00:00:16.260 --> 00:00:21.359
troubleshooting information on the web
page, the details of their errors happened. So
4

5
00:00:21.359 --> 00:00:25.949
in this case we got something that's not
found. So it'd be helpful to show the ID
5

6
00:00:25.949 --> 00:00:29.220
value that we did receive and repeat
that back to the user for
6

7
00:00:29.220 --> 00:00:33.870
troubleshooting purposes and I'm just
showing the capability how we can
7

8
00:00:33.870 --> 00:00:42.000
provide that information back. So let's
take a look at our service. So we'll go
8

9
00:00:42.000 --> 00:00:48.320
into the RecipeService and here I'm
just going to get rid of that one and
9

10
00:00:48.320 --> 00:00:56.760
let's enhance this a little bit and
we can say recipe not found and let's go
10

11
00:00:56.760 --> 00:01:10.920
ahead and say for ID value. Did I spell value right? Colon, space and let's do a plus and do
11

12
00:01:10.920 --> 00:01:18.720
'l' dot. toStrings are probably redundant
there. So we're going to get the
12

13
00:01:18.720 --> 00:01:24.990
string value of the long that was passed
in for the find by ID. So now we'll have
13

14
00:01:24.990 --> 00:01:30.810
a friendlier error message there. And so
now what we can do is come into the
14

15
00:01:30.810 --> 00:01:36.799
Controller and what we can do is pass in
the exception. We can tell Spring MVC
15

16
00:01:36.799 --> 00:01:41.600
that we want the exception be passed in.
16

17
00:01:47.380 --> 00:01:53.259
Like so and it's going to automatically
give us that. So let's go ahead and add
17

18
00:01:53.259 --> 00:02:13.630
that to the view. And we can do add object to the view and if you remember, exception
18

19
00:02:13.630 --> 00:02:20.709
has a getMessage and that's going to
give us a message. So let's go ahead and
19

20
00:02:20.709 --> 00:02:34.569
cut and paste that here. That's an error log message. So we'll also log that
20

21
00:02:34.569 --> 00:02:38.850
but what we want to do is also add that
to the page. So I'm adding that into the
21

22
00:02:38.850 --> 00:02:45.400
view and now what we can do is
get a hold of that exceptions. So we're
22

23
00:02:45.400 --> 00:02:50.440
calling exception and passing in the
exception. So now if we come over here to
23

24
00:02:50.440 --> 00:02:58.860
our 404error form, we can modify this. Let's just do that.
24

25
00:03:09.070 --> 00:03:28.550
Thymeleaf text. So let's say
exception getMessage and let's go ahead
25

26
00:03:28.550 --> 00:03:37.940
and build this. You can see that Spring
Boot is restarting with the build to do the
26

27
00:03:37.940 --> 00:03:43.850
developer tools. And let's come back over
here and do a refresh. Now we can see
27

28
00:03:43.850 --> 00:03:49.550
that we are getting the Id value and I
don't like the lowercase Id so I'm going
28

29
00:03:49.550 --> 00:03:52.450
to tweak that real quick.
29

30
00:03:57.610 --> 00:04:08.209
And build that. Let's go ahead and
refresh this. So now we get the ID value
30

31
00:04:08.209 --> 00:04:12.230
so we can see a much better error
message it gets more information and
31

32
00:04:12.230 --> 00:04:15.890
there's a lot of versatility you could
do with this. I've seen situations where
32

33
00:04:15.890 --> 00:04:19.700
you set up Spring so if you're in
development mode, using a development
33

34
00:04:19.700 --> 00:04:23.660
active profile, you'd pass in the whole
stack trace and display that like in a
34

35
00:04:23.660 --> 00:04:27.950
comment block on the web page. This is
just some tips and tricks that you can
35

36
00:04:27.950 --> 00:04:31.820
use to speed up your own development and
leave yourself some breadcrumbs when
36

37
00:04:31.820 --> 00:04:36.080
you're troubleshooting things because if
you're going to be in production, or in a
37

38
00:04:36.080 --> 00:04:40.940
large enterprise you might have
something that rolls to QA and one of
38

39
00:04:40.940 --> 00:04:44.960
your end users is testing it and they
run into a problem. Now you have some
39

40
00:04:44.960 --> 00:04:48.020
tools to quickly debug and figure out
what's going on in a different
40

41
00:04:48.020 --> 00:04:51.950
environment. So it does help you further
down the road in troubleshooting when
41

42
00:04:51.950 --> 00:04:56.840
you do enhance out that error
information that you do have available
42

43
00:04:56.840 --> 00:04:59.500
on the web page.
