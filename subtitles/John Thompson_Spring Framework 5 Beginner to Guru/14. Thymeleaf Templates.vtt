WEBVTT
1
00:00:05.010 --> 00:00:05.580
OK.

2
00:00:05.600 --> 00:00:09.870
Now as a Java developer you have several templating technologies to choose from.

3
00:00:09.890 --> 00:00:14.820
Now if you're not familiar with templates it's the technology we use to generate dynamic hastening e-mail.

4
00:00:14.820 --> 00:00:18.060
Like when we're pulling up in our database and we put it on a web page.

5
00:00:18.290 --> 00:00:21.640
In this lecture I'm going to introduce you to timely.

6
00:00:21.710 --> 00:00:27.260
Now I want to point out that it is pronounced time leaf not famed leaf.

7
00:00:27.270 --> 00:00:32.040
My first started using timely I was mistakenly calling it time leaf.

8
00:00:32.030 --> 00:00:37.570
And you can go on to YouTube on my channel and I do have an earlier video where I was calling it timely

9
00:00:37.580 --> 00:00:39.890
from the video and somebody called me out on it.

10
00:00:39.890 --> 00:00:44.110
So it happens now timely for the java tablet engine.

11
00:00:44.110 --> 00:00:49.370
It's an alternative to Java server pages and there's actually a number of alternatives to GSP as we

12
00:00:49.370 --> 00:00:50.340
can choose from.

13
00:00:50.570 --> 00:00:54.900
And I'm guessing it's because GSP is just so awful to work with I wouldn't use Jaspers forever.

14
00:00:54.920 --> 00:00:56.160
So I hate them.

15
00:00:56.230 --> 00:00:59.920
The first stable release of time leaf came out in 2011.

16
00:00:59.930 --> 00:01:06.200
The current releases on Version 3 which include some very cool features are reactive springs and spring

17
00:01:06.310 --> 00:01:13.790
five time leaf is known as a natural template engine meaning you can view the templates naturally in

18
00:01:13.790 --> 00:01:18.860
your browser this module we're going to take a quick look at running a simple HCM Al page to show a

19
00:01:18.870 --> 00:01:23.600
list of books we're only doing a quick introduction to time leaf in this video.

20
00:01:23.720 --> 00:01:24.820
There's a lot more to it.

21
00:01:24.830 --> 00:01:30.770
I actually have a whole course on timely and we're going to see a lot more of time live in this course.

22
00:01:30.770 --> 00:01:35.660
But like some of the new reactive programming stuff in spring five I'm kind of excited to get to that

23
00:01:35.750 --> 00:01:36.640
personally.

24
00:01:36.800 --> 00:01:38.810
But for now that's a whole different subject.

25
00:01:38.870 --> 00:01:44.020
I mean jump over to ontology and we're going take a look at our first time live template okay.

26
00:01:44.020 --> 00:01:48.260
I've gone ahead and created the HCM Al template for timely.

27
00:01:48.550 --> 00:01:53.860
I didn't want you to sit there and watch me code everything here and say Oh boring watching people write

28
00:01:53.860 --> 00:01:55.030
up HMO.

29
00:01:55.450 --> 00:02:02.260
So but I do want to step through what's going on so you can see that it looks like normal HDMI oil and

30
00:02:02.920 --> 00:02:05.850
I won't point out this is a natural template engine.

31
00:02:05.890 --> 00:02:14.310
So I'm going to bring it up in Chrome real quick and we can see that I have just generic e-mail here.

32
00:02:14.350 --> 00:02:21.880
A little tail that's being generated with a book in there and actually change that product was to book

33
00:02:21.880 --> 00:02:22.270
list

34
00:02:26.680 --> 00:02:33.520
so that's better it make this a book list make it a little more legible and you can see this is like

35
00:02:33.520 --> 00:02:38.710
editing chasing man alive I can come over here and just do a refresh.

36
00:02:38.710 --> 00:02:44.320
So when you're doing things like this in real time you're not messing with running it and deploying

37
00:02:44.320 --> 00:02:46.180
it and restarting the application server.

38
00:02:46.180 --> 00:02:51.370
So that's one of the things I really like about working with time leaf is that I can rapidly do stuff

39
00:02:51.370 --> 00:02:57.640
like this and get the Asian melt looking good without having the baggage of Tomcat running.

40
00:02:57.640 --> 00:03:02.020
So it's a pretty nice feature of having a national template engine.

41
00:03:02.110 --> 00:03:07.450
He had worked with GSP as you know you need to compile and deploy and restart Tomcat to see changes

42
00:03:07.450 --> 00:03:14.600
which is no fun at all so let's look at the time leaf specific feature so right at the top there we

43
00:03:14.600 --> 00:03:21.950
have a standard HCM all tag for H2 and 0 5 and then mind to there we have HCM now and you can see that

44
00:03:21.950 --> 00:03:26.840
we're specifying an Excel namespace and this is a namespace for the time tag.

45
00:03:26.840 --> 00:03:28.060
So this is important.

46
00:03:28.160 --> 00:03:33.710
This is what allows us to add in the tags that is looking for a well structured excel.

47
00:03:34.130 --> 00:03:38.500
And then beyond that that's also standard HMO.

48
00:03:38.550 --> 00:03:44.240
But let's take a closer look at line 16 to line 20.

49
00:03:44.410 --> 00:03:47.430
This is where the time leave tags kick in.

50
00:03:47.520 --> 00:03:52.310
Now online 16 you can see that's where I'm doing an each block.

51
00:03:52.340 --> 00:03:58.220
So the setting up in an iterator if you remember in our controller come back over here show you that

52
00:03:59.280 --> 00:04:05.190
can Rimmer and the controller assign a an attribute called books from the book repository and this is

53
00:04:05.190 --> 00:04:08.480
just going to return a noticeable.

54
00:04:08.560 --> 00:04:15.030
You can see that it is returning an admirable to timely and timely if can work with that at no use.

55
00:04:15.190 --> 00:04:20.320
Off the top of the list pretty much anything you can would iterate over lists its maps.

56
00:04:20.320 --> 00:04:21.350
That's all you can.

57
00:04:21.370 --> 00:04:25.690
I know there's a couple others in there but anything that you can iterate any type of list structure

58
00:04:25.690 --> 00:04:34.220
inside a Java generally timely we can iterate over it so let's jump back over here and that sets up

59
00:04:34.220 --> 00:04:46.010
my iterator and now I have my table rows and so that line 16 says look at the books attribute and iterate

60
00:04:46.010 --> 00:04:54.360
over it and it's like setting up a variable called book and then on line 17 we're using another time

61
00:04:54.360 --> 00:05:00.550
leaf tag for text and this kind of clever how timely for eggs it's using the x model attribute of the

62
00:05:00.600 --> 00:05:08.180
age context which is oh the X male namespace that we specified up there in line 2 and then inside the

63
00:05:08.560 --> 00:05:14.870
dollar saying curly bracket I'm specifying the object book from line 16 and then the property.

64
00:05:14.870 --> 00:05:22.430
So this is a Java object so we need to match up all those properties and we do follow the dot notation

65
00:05:22.430 --> 00:05:28.340
so we're not under the covers timely if it's going to execute the getter on that object.

66
00:05:28.340 --> 00:05:34.220
So kind of nice how does the dot notation reminds me a lot of groovy which is quite nice to work with

67
00:05:34.550 --> 00:05:40.790
but that's how it works in a nutshell on line 19 you can see how you can navigate down through properties

68
00:05:40.790 --> 00:05:46.820
on the object model so if you were to read what it's doing under the covers there's taking the book

69
00:05:46.820 --> 00:05:56.000
object and getting the publisher running get publisher and then get name of the publisher and know what

70
00:05:56.000 --> 00:06:01.710
time life is going to do you can see where on the I.D. and line 17 there.

71
00:06:01.730 --> 00:06:09.240
I do have one two three and that's what gets displayed when I look at it in Chrome so that that's what's

72
00:06:09.390 --> 00:06:12.120
natural about it that's a natural value.

73
00:06:12.120 --> 00:06:19.730
So let's go ahead and fire up spring boot now and we are going to take a look at how spring runners

74
00:06:19.730 --> 00:06:19.880
at

75
00:06:22.910 --> 00:06:24.200
they're up and alive.

76
00:06:24.270 --> 00:06:27.340
Come over here and I'm gonna do a refresh.

77
00:06:27.350 --> 00:06:29.730
So I'm just going to port 80 80 slash books

78
00:06:33.140 --> 00:06:35.680
and now we can see that the iterator is worked.

79
00:06:35.690 --> 00:06:45.710
I have ideas three domains urban design author FU That's publisher I'm sorry so we've got one mistake

80
00:06:45.710 --> 00:06:49.850
here that should be a publisher my bad

81
00:06:53.730 --> 00:06:59.390
see if that refreshes right away I saw we'd have to restart spring at this point I'll show you how to

82
00:06:59.390 --> 00:07:05.970
use Spring developer tools later we can get that to change automatically for us once we enable spring

83
00:07:05.970 --> 00:07:08.900
developer tools but I'll show you that in a later video.

84
00:07:09.090 --> 00:07:11.980
So just quickly recap what's going on here.

85
00:07:12.240 --> 00:07:16.720
Toggle back over to Intel Jay now setting up the timely template.

86
00:07:16.740 --> 00:07:22.150
The key parts are on line two to import the X Excel namespace.

87
00:07:22.440 --> 00:07:28.850
And in this case we are using the line 16 we're using a timely iterator for t h colon.

88
00:07:28.860 --> 00:07:35.080
Each we take in the books property from the model that was rendered from Spring Spring MVC.

89
00:07:35.340 --> 00:07:37.080
That gives us a book variable.

90
00:07:37.350 --> 00:07:43.200
And this is going to iterate for each book it's going to iterate over and create this block for us for

91
00:07:43.260 --> 00:07:45.100
our table rows.

92
00:07:45.280 --> 00:07:45.490
All right.

93
00:07:45.490 --> 00:07:51.040
So that is a quick introduction to timely so you can see how nice it is to work with when you have a

94
00:07:51.040 --> 00:07:54.910
natural Temple doing so and you can do your development on Easter email and toggle over and see your

95
00:07:54.910 --> 00:07:57.130
changes right away inside the browser.

96
00:07:57.140 --> 00:07:59.420
You saw what a clean language does too.

97
00:07:59.440 --> 00:08:05.500
We only went in about this deep onto timely finance capabilities but as a quick example I was able to

98
00:08:05.500 --> 00:08:12.110
take an object out of the database using spring data JPA run it through Spring MVC to the timely for

99
00:08:12.110 --> 00:08:19.610
you layer where we had a list of Po Joes and we rendered that list on a web page so you can see it once.

100
00:08:19.690 --> 00:08:25.300
Once we got this down it's a pretty seamless process to develop web applications using the spring framework.
