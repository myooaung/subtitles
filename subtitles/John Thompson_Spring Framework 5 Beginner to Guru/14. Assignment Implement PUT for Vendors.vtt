WEBVTT
0
1
00:00:04.730 --> 00:00:09.630
Alright! In this video, we have another
assignment for you. And this time, we are
1

2
00:00:09.630 --> 00:00:14.549
going to implement the PUT action for
vendors, and remember, in a RESTful APIs,
2

3
00:00:14.549 --> 00:00:20.310
PUT is going to update an existing
object. So, what we want to do is create
3

4
00:00:20.310 --> 00:00:25.289
a new endpoint, that's going to accept
the HTTP PUT action. This is going to
4

5
00:00:25.289 --> 00:00:30.240
be specifically for vendors, and like I
said, the PUT is going to update an
5

6
00:00:30.240 --> 00:00:36.059
existing Vendor. So, we want embed the ID
in the URL, and then, update an existing
6

7
00:00:36.059 --> 00:00:42.620
Vendor object. On success, we are going to
return back an HTTP 200 status code
7

8
00:00:42.620 --> 00:00:47.730
along with the updated Vendor object. And
in this assignment, I'm going to
8

9
00:00:47.730 --> 00:00:51.030
explicitly say to use test-driven
development, like I did in the last
9

10
00:00:51.030 --> 00:00:56.190
assignment review. And so, I want you to
go in and first create JUnit test and
10

11
00:00:56.190 --> 00:01:00.750
use Mockito in the WebTestClient to
set everything up. Get your tests created,
11

12
00:01:00.750 --> 00:01:07.710
and also failing. And then, implement the
controller method to support this. And in
12

13
00:01:07.710 --> 00:01:11.610
the next video, I'm going to step through
exactly this. Take you step by step and
13

14
00:01:11.610 --> 00:01:16.729
show you how to implement the PUT action
for vendors.
