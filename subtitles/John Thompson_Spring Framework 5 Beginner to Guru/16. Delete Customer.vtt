WEBVTT
0
1
00:00:04.730 --> 00:00:10.349
Okay. In this video, we are gonna take
a look at deleting records using a
1

2
00:00:10.349 --> 00:00:14.340
RESTful service. So what I've done is
I've implemented the backend already,
2

3
00:00:14.340 --> 00:00:18.840
and you can see here on the screen, I
have our CustomerService interface up
3

4
00:00:18.840 --> 00:00:24.359
and I've added in a new method deleteCustomerById. Let's go ahead and
4

5
00:00:24.359 --> 00:00:28.199
take a look at the implementation. So
this is actually pretty simple. It
5

6
00:00:28.199 --> 00:00:32.989
doesn't return anything. It just goes in
does the deleteById. You might
6

7
00:00:32.989 --> 00:00:36.540
technically wanna put in some error
handling to see if that id is found.
7

8
00:00:36.540 --> 00:00:40.980
But you could do it either way here, and
add an exception in bubble that up if it
8

9
00:00:40.980 --> 00:00:45.600
is not found. Some people like to delete
it if it's there, and if it doesn't, just
9

10
00:00:45.600 --> 00:00:49.890
return back in okay code. So I think
either way is appropriate. Depends on
10

11
00:00:49.890 --> 00:00:53.550
how you personally want to
implement it here. I'm not adding in any
11

12
00:00:53.550 --> 00:00:59.550
error handling, and could see that I've
implemented a very simple test. We are
12

13
00:00:59.550 --> 00:01:03.899
doing a delete, and I am verifying
that and this does run one time. So we'll
13

14
00:01:03.899 --> 00:01:11.340
go ahead and run that test right now.
You see that, that test does pass
14

15
00:01:11.340 --> 00:01:17.070
properly. Now let's take a look at the
controller. And in the controller, I've
15

16
00:01:17.070 --> 00:01:22.320
gone ahead and we'd wanna actually do
it delete here. Doing an easily delete
16

17
00:01:22.320 --> 00:01:27.030
method, and we are gonna verify that
this does run, and we want an OK status
17

18
00:01:27.030 --> 00:01:33.360
returned. So we will go ahead and run
this, and show it failing right now
18

19
00:01:33.360 --> 00:01:39.210
because it should not pass. And we can
see that it does in fact fail. So let's
19

20
00:01:39.210 --> 00:01:44.579
go ahead and implement that now. So let's
go ahead. We are gonna be using these
20

21
00:01:44.579 --> 00:01:54.180
same method. And as usual, I recommend not
to cut and paste, like I'm doing here.
21

22
00:01:54.180 --> 00:01:59.729
Now we're gonna change us to @DeleteMapping, and we wanna be giving that id
22

23
00:01:59.729 --> 00:02:06.170
value. That deleteCustomer.
23

24
00:02:06.340 --> 00:02:14.770
In this case, we are not bringing in the
body. So we get rid of that. We're gonna
24

25
00:02:14.770 --> 00:02:25.800
do a deleteById, delete that comma, and in this case,
let's refactor this a little bit.
25

26
00:02:33.990 --> 00:02:37.220
In case, we wanted to do a Void.
26

27
00:02:40.959 --> 00:02:49.930
And we are gonna return back a HttpStatus of OK. So that's a pretty
27

28
00:02:49.930 --> 00:02:53.349
simple implementation for our DeleteMapping. So let's go ahead and run our
28

29
00:02:53.349 --> 00:03:03.099
test now. See if that does run. We are now
passing. So let's go ahead and we will
29

30
00:03:03.099 --> 00:03:06.510
run. Bring up Spring Boot.
30

31
00:03:09.000 --> 00:03:16.359
We are up and running.
So let's come on over here and going
31

32
00:03:16.359 --> 00:03:21.400
against localhost to our api value, and
we can see that Michale Weston is there.
32

33
00:03:21.400 --> 00:03:28.389
So let's go ahead and do a DELETE method.
Send that. I can see that would get our
33

34
00:03:28.389 --> 00:03:35.530
OK. Now let's come back and get, do a
GET and we have not implemented any
34

35
00:03:35.530 --> 00:03:40.629
error handling here because we did got a
internal server error. Let's take a quick
35

36
00:03:40.629 --> 00:03:45.250
peek. See what happened there. So that
there's a runtime exception. So that's
36

37
00:03:45.250 --> 00:03:48.760
coming out of there. And here, we can
definitely add in something more
37

38
00:03:48.760 --> 00:03:53.799
graceful and I am going to get into that
in a future video. But the application
38

39
00:03:53.799 --> 00:03:57.419
for right now is behaving as expected.
