WEBVTT
0
1
00:00:04.160 --> 00:00:08.130
Alright! In the next video, not in this
video, in the next video, we are going to
1

2
00:00:08.130 --> 00:00:12.000
start getting into implementing find
owner but I want to talk about a very
2

3
00:00:12.000 --> 00:00:15.630
very important feature of the Spring
Framework which I did not address in the
3

4
00:00:15.630 --> 00:00:20.699
regular lessons of the course. This is
kind of a topic that's important and I
4

5
00:00:20.699 --> 00:00:25.170
want to address it. I'm going to take
a look at their implementation here.
5

6
00:00:25.170 --> 00:00:31.410
I am literally going to steal this
InitBinder. I'm going to put this into
6

7
00:00:31.410 --> 00:00:35.790
our project. This is a going to get
into some of the binding stuff that we
7

8
00:00:35.790 --> 00:00:43.620
are doing. I'm going to come over here
and paste this right in here. Now let's
8

9
00:00:43.620 --> 00:00:48.440
go ahead and port these and then I'm
going to talk about what's going on here.
9

10
00:00:48.440 --> 00:00:53.910
One of the things that we've seen in
the course is where we can use Spring to
10

11
00:00:53.910 --> 00:00:57.329
automatically bind web variables to
objects that are coming into the
11

12
00:00:57.329 --> 00:01:02.940
application. Now this is an important
feature, this WebDataBinder. This has
12

13
00:01:02.940 --> 00:01:10.650
been around very very early 1.2 of
Spring. It's when it came into play. It
13

14
00:01:10.650 --> 00:01:15.060
seems like a little magic in the
background where we have HTTP variables
14

15
00:01:15.060 --> 00:01:19.920
coming in and then Spring magically
binds everything to a Java object for us
15

16
00:01:19.920 --> 00:01:25.740
which is awesome. But that magic, I'm
using magic in air quotes. Sometimes you
16

17
00:01:25.740 --> 00:01:29.939
need to control that. The web data
binder is exactly how you...
17

18
00:01:29.939 --> 00:01:33.780
I have additional control over it. I'm
not going to get into every feature here
18

19
00:01:33.780 --> 00:01:38.220
but you can go ahead, look at the source
code on this. It got some really good
19

20
00:01:38.220 --> 00:01:41.130
comments in that. There's some good
documentation. A number of blog post on
20

21
00:01:41.130 --> 00:01:47.250
it as well. This is like old school
Spring Web MVC. Been around forever and
21

22
00:01:47.250 --> 00:01:53.640
it effects how we handle post. The
Spring communities really moving more
22

23
00:01:53.640 --> 00:01:57.780
towards RESTful web services and stuff
like that so we're not seeing Spring
23

24
00:01:57.780 --> 00:02:03.149
used as much for traditional HTML pages
and forms and stuff, but still out there,
24

25
00:02:03.149 --> 00:02:08.390
still widely used but kind of becoming
old-school in the modern technology.
25

26
00:02:08.390 --> 00:02:14.200
This here is specifically to deal
with handling things
26

27
00:02:14.200 --> 00:02:18.790
like form posts to a controller and how
we handle the binding to Java objects.
27

28
00:02:18.790 --> 00:02:22.780
This gives us more control over that.
I wanted to do a separate video on this
28

29
00:02:22.780 --> 00:02:27.580
just to dive into some of the features
and functionality of this. You can see
29

30
00:02:27.580 --> 00:02:32.620
there's a number of different options
and methods that we can use to control
30

31
00:02:32.620 --> 00:02:38.620
how things are happening. In this case
here, what the Spring team did and this is
31

32
00:02:38.620 --> 00:02:44.140
actually a very good thing is we are
sending a disallowed field of ID. And why
32

33
00:02:44.140 --> 00:02:49.630
ID? Let's take a quick look here.
This is kind of like defensive coding. If
33

34
00:02:49.630 --> 00:02:55.299
you remember, I'm going into our model
here, our BaseEntity, so our ID property
34

35
00:02:55.299 --> 00:02:59.620
is what drives everything in the
database. What we're saying is we
35

36
00:02:59.620 --> 00:03:05.650
don't want to allow the web forms to
address and manipulate the ID property.
36

37
00:03:05.650 --> 00:03:10.030
So this is a good thing,
security wise. Without it, we could some
37

38
00:03:10.030 --> 00:03:14.950
way could hack things and try to gain
the system and manipulate the ID
38

39
00:03:14.950 --> 00:03:19.209
property of object stored in the
database. We want our code to be doing
39

40
00:03:19.209 --> 00:03:24.400
that. We don't want to open up that door
to allow people to potentially hack the
40

41
00:03:24.400 --> 00:03:29.350
system's because remember we are in a
stateless system. When I come up here,
41

42
00:03:29.350 --> 00:03:36.480
let's take a quick look at the page.
42

43
00:03:36.900 --> 00:03:41.950
So here's a typical web form. I'm just
bringing this up. We'll be looking at
43

44
00:03:41.950 --> 00:03:46.060
this in an upcoming video more. But you
can see we're setting up input fields.
44

45
00:03:46.060 --> 00:03:52.299
Let's just create a normal HTML form and
somebody could do something and create
45

46
00:03:52.299 --> 00:03:58.959
an HTTP POST or GET with this form and
that could in theory mess with the
46

47
00:03:58.959 --> 00:04:05.470
system if we allow that ID property to
be set. So, what's happening here is we
47

48
00:04:05.470 --> 00:04:09.940
are grabbing this WebDataBinder, so
InitBinder. That's a standard
48

49
00:04:09.940 --> 00:04:16.690
Spring MVC annotation to allow us to
have that WebDataBinder inject it into
49

50
00:04:16.690 --> 00:04:21.010
our controller and then we can take
control of it. This is very old
50

51
00:04:21.010 --> 00:04:25.750
Spring stuff. Kind of an old style from
like I showed you that it's from Spring
51

52
00:04:25.750 --> 00:04:28.760
1.2. I think that was
before I started working with Spring.
52

53
00:04:28.760 --> 00:04:33.950
So very old school stuff here but also
very important. I wanted to do a separate
53

54
00:04:33.950 --> 00:04:38.570
video on this to make you aware of that.
We are going to be using InitBinder on
54

55
00:04:38.570 --> 00:04:43.520
our controllers coming up. I'm not
going to commit this specific one here
55

56
00:04:43.520 --> 00:04:47.480
because in the next video we are going
to start implementing the ability to do
56

57
00:04:47.480 --> 00:04:52.130
a find owner and then after that we'll
be getting into the form post of
57

58
00:04:52.130 --> 00:04:55.580
actually updating and creating an owner
so we'll get into that and upcoming it
58

59
00:04:55.580 --> 00:05:00.710
at videos as well. But be aware of this.
If you need to control a form post with
59

60
00:05:00.710 --> 00:05:06.580
more detail, the WebDataBinder is how
can you do that.
