WEBVTT
0
1
00:00:05.100 --> 00:00:07.630
Ok going to live code through something here.
1

2
00:00:07.630 --> 00:00:12.570
Got a student is having an issue and this is a repository.
2

3
00:00:12.660 --> 00:00:17.930
I asked him to upload the whole project and it's a lot easier for me to troubleshoot stuff like that.
3

4
00:00:17.940 --> 00:00:23.580
So the first thing I'm going to do is go ahead and clone it to my own GitHub account.
4

5
00:00:24.180 --> 00:00:26.120
I'm sorry fork it.
5

6
00:00:26.520 --> 00:00:36.920
I want to fork this to my Git. So I forking over to mine right now and then I will download it to mine
6

7
00:00:36.930 --> 00:00:38.120
so then there's the fork.
7

8
00:00:38.130 --> 00:00:45.610
Now I want to clone or download it so you just copy that over jump over here to the terminal
8

9
00:00:51.070 --> 00:00:52.360
clone that down.
9

10
00:00:52.360 --> 00:00:59.500
Now I want to come over to IntelliJ and open up this project. So I am going to say new project from existing
10

11
00:00:59.500 --> 00:01:01.350
sources.
11

12
00:01:02.650 --> 00:01:06.900
And see I'm working on some Spring 5 stuff right now.
12

13
00:01:06.900 --> 00:01:09.340
So come down here to source that thing and put in temp
13

14
00:01:13.240 --> 00:01:14.850
a different temp.
14

15
00:01:14.850 --> 00:01:16.030
Got a couple of temp directories
15

16
00:01:21.840 --> 00:01:26.360
so that Spring Data and go ahead click open
16

17
00:01:30.170 --> 00:01:33.980
up this in IntelliJ. Import project.
17

18
00:01:33.980 --> 00:01:35.840
Take all the defaults there.
18

19
00:01:35.840 --> 00:01:36.830
That looks fine
19

20
00:01:39.620 --> 00:01:49.710
and say OK it's like the JDK to use.
20

21
00:01:49.870 --> 00:01:51.240
And let's see what we've got here.
21

22
00:01:55.020 --> 00:01:57.330
And of course it opened up in a different window.
22

23
00:01:57.330 --> 00:01:59.310
Bring that over to the one that we are recording on
23

24
00:02:02.700 --> 00:02:08.720
now what he's telling me is we're having a problem with when we're logging in.
24

25
00:02:08.750 --> 00:02:16.970
So working on some Spring Security stuff and say if we leave the credentials blank the program crashes.
25

26
00:02:17.010 --> 00:02:18.840
Take a look at that now.
26

27
00:02:18.980 --> 00:02:22.920
So we'll go ahead and start this IntelliJ just finished indexing the project
27

28
00:02:26.790 --> 00:02:34.620
and now this is coming up because there is no git ignore project so I'll fix that for him in a minute.
28

29
00:02:34.620 --> 00:02:46.800
We don't have that.
29

30
00:02:47.420 --> 00:02:49.820
And I have kept running somewhere else.
30

31
00:02:49.820 --> 00:02:57.000
I think it's probably in my Spring 5 course he's on and they're. Going to kill them.
31

32
00:02:57.260 --> 00:03:04.160
Come back over to this and try that one more time should run better.
32

33
00:03:04.240 --> 00:03:05.590
If it doesn't have a port conflict
33

34
00:03:09.620 --> 00:03:17.950
so we are up and running so let's go over to Chrome and take a look at what's happening here.
34

35
00:03:27.290 --> 00:03:31.040
It's working OK here we are.
35

36
00:03:31.390 --> 00:03:34.880
So the problem is it crashes.
36

37
00:03:35.270 --> 00:03:36.910
We're getting 500 or so that's good.
37

38
00:03:36.910 --> 00:03:38.660
Take a look at what's happening.
38

39
00:03:40.500 --> 00:03:47.860
Look at the stack trace.
39

40
00:03:48.400 --> 00:03:51.370
So we're getting a NPE there.
40

41
00:04:10.600 --> 00:04:15.520
So we have a boolean there and that has not been initialized.
41

42
00:04:24.290 --> 00:04:26.660
So we can do is set a default value for that
42

43
00:04:36.620 --> 00:04:37.440
and restart it.
43

44
00:04:37.490 --> 00:04:40.350
I don't think we have a Spring Boot DevTools cooking.
44

45
00:04:46.580 --> 00:04:51.640
Try this again.
45

46
00:04:51.900 --> 00:04:52.450
There we go.
46

47
00:04:52.500 --> 00:04:55.460
So just that little null pointer error.
47

48
00:04:55.500 --> 00:04:57.930
So now that validation is working correctly
48

49
00:05:01.630 --> 00:05:06.670
and it's also I have a problem with the H-2 console. So let's take a look at that
49

50
00:05:13.540 --> 00:05:16.930
saying that it's coming up to a blank database.
50

51
00:05:19.590 --> 00:05:21.690
Actually not coming up to anything at all.
51

52
00:05:23.600 --> 00:05:27.060
So I don't know exactly what that is that's in the Spring config.
52

53
00:05:27.080 --> 00:05:30.450
I am going to pause this one second I need to look something up.
53

54
00:05:30.990 --> 00:05:36.650
OK I had to look up a couple of things there and the Spring Security and actually found my own blog
54

55
00:05:36.650 --> 00:05:39.060
post be helpful when I wrote a while back.
55

56
00:05:39.190 --> 00:05:41.970
So a couple of things wrong with the setup here.
56

57
00:05:42.020 --> 00:05:47.860
The ignoringAntMatchers there on line 53 should have a wild card there.
57

58
00:05:48.140 --> 00:05:53.220
And then the reason that it was coming up blank we both need to disable csrf.
58

59
00:05:53.270 --> 00:05:58.850
But we also need to do the header frameOptions and disable that as well.
59

60
00:05:58.850 --> 00:06:04.320
So that's where the Spring Security is interfering with the H-2 database console.
60

61
00:06:04.340 --> 00:06:08.400
So I've made those couple of tweaks there and then on line 57,
61

62
00:06:08.410 --> 00:06:17.450
I also explicitly said to permit all to the h2-console URL path and I've restarted the Spring Boot
62

63
00:06:17.450 --> 00:06:18.360
already.
63

64
00:06:18.670 --> 00:06:27.080
And if we come over here test it out and see that it does come up and we can come in and see or take
64

65
00:06:27.080 --> 00:06:32.210
a look at users and we can see that the H2 database consoleis is infact working.
65

66
00:06:32.420 --> 00:06:35.080
Now one thing that often does trip people up.
66

67
00:06:35.080 --> 00:06:40.120
Disconnect here is you've got to watch this JDBC URL.
67

68
00:06:40.310 --> 00:06:47.840
So if you come in and have that URL wrong different from what Spring Boot is defaulting when you
68

69
00:06:48.020 --> 00:06:48.920
try to connect.
69

70
00:06:48.980 --> 00:06:53.650
Now you can see I did connect but I'm connecting to a blank database.
70

71
00:06:53.990 --> 00:06:58.640
So it's not the database that we're working in that that often confuses people where they don't have
71

72
00:06:58.640 --> 00:07:01.090
that URL correct.
72

73
00:07:02.180 --> 00:07:05.270
And then they come in and say well I don't see my tables.
73

74
00:07:05.450 --> 00:07:11.390
Technically connecting to the different H-2 in memory database with the database console or something,
74

75
00:07:11.480 --> 00:07:18.710
definitely trips people up but just to view that one more time again that was the Spring Security causing
75

76
00:07:18.710 --> 00:07:20.870
this to misbehave.
76

77
00:07:21.140 --> 00:07:29.580
Specifically these these headers here, comment that I'll show you the behavior again so that it's
77

78
00:07:29.630 --> 00:07:34.980
these frameOptions that are going to mess with the H-2 database console.
78

79
00:07:35.600 --> 00:07:42.800
So we are almost back up now I come and refresh this.
79

80
00:07:42.940 --> 00:07:43.960
You.
80

81
00:07:44.840 --> 00:07:48.330
And when I connect you'd see that it's just a blank page
81

82
00:07:52.240 --> 00:07:53.950
back over here.
82

83
00:07:55.480 --> 00:08:05.090
Do that about Spring Boot.
83

84
00:08:05.190 --> 00:08:13.050
We're back up if I refresh this page.
84

85
00:08:13.280 --> 00:08:16.890
Now I can say connect and we connect normally.
85

86
00:08:16.970 --> 00:08:22.760
So now I'm going to come over to IntelliJ. We shall commit that.
86

87
00:08:33.040 --> 00:08:39.070
And technically if I was working on this for a company and done two commits here, two separate commits.
87

88
00:08:39.200 --> 00:08:59.630
Always remember small incremental commits.
88

89
00:08:59.820 --> 00:09:02.040
Go ahead and commit and push the
89

90
00:09:11.360 --> 00:09:15.830
up on GitHub. I'll come over here.
90

91
00:09:27.950 --> 00:09:29.670
Do a pull request.
91

92
00:09:32.980 --> 00:09:39.250
And now he'll he will get that request from me and anybody else see my changes and of course I'm going
92

93
00:09:39.250 --> 00:09:42.600
to share this video with them and get him going again.
