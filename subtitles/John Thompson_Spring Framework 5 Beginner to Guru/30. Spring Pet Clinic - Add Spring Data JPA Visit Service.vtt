WEBVTT
0
1
00:00:04.040 --> 00:00:09.059
In this video, we want to go in and
implement the Spring Data JPA Service
1

2
00:00:09.059 --> 00:00:14.519
for visit. In the previous video, we
implemented the map based service. Now
2

3
00:00:14.519 --> 00:00:19.140
we're going to come in and implement in
the Spring Data JPA version of that.
3

4
00:00:19.140 --> 00:00:24.300
So let's come on over to IntelliJ.
Here's the VisitService where we
4

5
00:00:24.300 --> 00:00:27.359
implemented the map version and remember
what we're doing here is we're going to
5

6
00:00:27.359 --> 00:00:33.090
be setting up a map based implementation
in the Spring Data JPA implementation and
6

7
00:00:33.090 --> 00:00:36.090
very soon I think we're going to be at the
point where can start running this based
7

8
00:00:36.090 --> 00:00:41.010
on active profiles. Now, we need to get
this implemented, so I'm going to go ahead
8

9
00:00:41.010 --> 00:00:47.610
and implement that now. In here, we
have these different implementations. I'm
9

10
00:00:47.610 --> 00:00:52.079
just going to bring up the vets
implementation. You can see this
10

11
00:00:52.079 --> 00:00:57.090
pretty self-explanatory. I'm going to
split this up just so we have it as a
11

12
00:00:57.090 --> 00:01:01.260
reference. Sometimes when I'm doing
things that are very similar, it's
12

13
00:01:01.260 --> 00:01:06.479
helpful for me to look back at it. I
think it's helpful for you just to see what
13

14
00:01:06.479 --> 00:01:11.600
we're going to be implementing here on the
screen. We can see that we need a
14

15
00:01:11.600 --> 00:01:17.520
repository. We do have to VisitRepository implemented already so that
15

16
00:01:17.520 --> 00:01:22.080
is good. We don't need to implement
that. What we can do is come in here.
16

17
00:01:22.080 --> 00:01:31.409
Say new Java class and we're going to say
VisitSDJpaService. I'm just
17

18
00:01:31.409 --> 00:01:35.790
following the same naming
convention here that we used before, so
18

19
00:01:35.790 --> 00:01:43.140
visit SD for Spring Data. Let me
spell JPA correctly. We'll go ahead
19

20
00:01:43.140 --> 00:01:48.399
and say okay and drag this up to the top
window just for consistency.
20

21
00:01:48.399 --> 00:01:53.039
We come in here and say implements
Visit
21

22
00:01:53.540 --> 00:01:55.840
Service
22

23
00:01:56.100 --> 00:02:05.280
and I come up here and say @Service.
See this Profile springdatajpa, we
23

24
00:02:05.280 --> 00:02:08.819
want to go ahead and make sure that we
are implementing the same profile
24

25
00:02:08.819 --> 00:02:14.610
because we only want this active with
the Spring Data JPA profile.
25

26
00:02:14.610 --> 00:02:19.650
Implement methods, like so, and now, we can
see that we're going to take in that
26

27
00:02:19.650 --> 00:02:27.830
repository. So I come up here private
final VisitRepository. Doing command N
27

28
00:02:29.050 --> 00:02:34.930
constructor. Add in a default constructor
for that. Now what we can do is come in
28

29
00:02:34.930 --> 00:02:39.930
and start implementing that so I bring
back a Set.
29

30
00:02:46.060 --> 00:02:50.269
We're implementing that. We're doing a
for each and what we're going to do is
30

31
00:02:50.269 --> 00:02:57.020
visits. Let's just do an add.
Now what we can do is return back
31

32
00:02:57.020 --> 00:03:02.310
visits, like so.
Here, we are going to do visit
32

33
00:03:02.310 --> 00:03:08.480
Repository findById(). Pass in that aLong.
In the or
33

34
00:03:09.510 --> 00:03:16.200
Else function, that's going to say return
that or return back a null, so
34

35
00:03:16.200 --> 00:03:19.860
that's the particular behavior. Not
very friendly for Java Optional. I
35

36
00:03:19.860 --> 00:03:24.090
admit that, but it's the functionality
that we happen to want. Here I'm just
36

37
00:03:24.090 --> 00:03:29.549
keeping that simple for this particular
implementation. So now, there save.  That is
37

38
00:03:29.549 --> 00:03:35.269
going to become very easy save object.
That one is an easy one to implement,
38

39
00:03:35.269 --> 00:03:39.230
almost as easy as delete.
39

40
00:03:42.129 --> 00:03:51.120
deleteById() and we'll give that aLong
and that implements everything there.
40

41
00:03:51.120 --> 00:03:56.940
That really completes the assignment. Now
one thing we had not done, I don't think
41

42
00:03:56.940 --> 00:04:01.140
I have a task for it but I want to go in
and add some data on startup
42

43
00:04:01.140 --> 00:04:07.980
so let's come in and I actually put that
into the pet clinic web. I'm going to
43

44
00:04:07.980 --> 00:04:16.010
make sure that we can actually save into
our bootstrap process in the data loader.
44

45
00:04:16.359 --> 00:04:23.020
So now, what we're going to do is come up
here and we'll do a private final
45

46
00:04:23.020 --> 00:04:27.550
VisitService and notice some
referencing them by the interface.
46

47
00:04:27.550 --> 00:04:32.860
This is going to allow Spring to go ahead
and inject it based on the active
47

48
00:04:32.860 --> 00:04:36.400
profile and checked in one of the
implementations - based on the active
48

49
00:04:36.400 --> 00:04:41.610
profile. So now, I have a new Owner OwnerService.
49

50
00:04:41.610 --> 00:04:48.619
Let's come in here.
So we have owner
50

51
00:04:48.619 --> 00:04:54.719
Fiona's cat. Let's make a visit for Fiona's
cat here.
51

52
00:04:54.719 --> 00:04:59.330
We can say Visit.
52

53
00:05:08.940 --> 00:05:14.030
We're going to make it for Fiona's
cat, like so.
53

54
00:05:15.999 --> 00:05:20.339
We'll just make it for right now
that is perfectly fine for our purposes.
54

55
00:05:20.339 --> 00:05:23.529
Now let's take a quick look at this
visit, so we have a LocalDate,
55

56
00:05:23.529 --> 00:05:29.099
description. Let's go ahead and give
it a description as well.
56

57
00:05:35.470 --> 00:05:41.360
We'll say that it's a sneezy kitty.
Then finally, what we need to do is
57

58
00:05:41.360 --> 00:05:49.420
grab a hold of our visitService and say
save catVisit like so.
58

59
00:05:49.650 --> 00:05:54.840
Now, I'm going to go ahead and start this up.
Make sure that it runs. We're still
59

60
00:05:54.840 --> 00:06:00.090
running against some map implementation,
so we'll start that. Make sure we're not
60

61
00:06:00.090 --> 00:06:05.100
tossing any exceptions. Very very
rudimentary set of testing. We are making
61

62
00:06:05.100 --> 00:06:08.940
sure that everything compiles okay and
that we don't throw any unexpected
62

63
00:06:08.940 --> 00:06:16.200
runtime exceptions. We see here
that VisitService
63

64
00:06:16.200 --> 00:06:22.070
could not be found, so that tells me I am
guessing. I forgot to annotate the map
64

65
00:06:22.070 --> 00:06:27.410
implementation,
and exactly that, I did not annotate that.
65

66
00:06:27.410 --> 00:06:32.210
So basically, Spring is going out. I
excluded this one. I did implement that
66

67
00:06:32.210 --> 00:06:36.980
but I put on a profile Spring Data JPA.
That's not available. This one's not
67

68
00:06:36.980 --> 00:06:44.330
implemented and you can see here that is
there, so I am just going to come up and say
68

69
00:06:44.330 --> 00:06:53.190
@Service like so and now if I come in
and restart those.
69

70
00:06:53.190 --> 00:06:58.560
Now since this is in the Spring
context now, it's marked as a Spring Bean.
70

71
00:06:58.560 --> 00:07:02.400
That Spring detects on the service.
You can see that everything loaded up
71

72
00:07:02.400 --> 00:07:08.070
properly. I just saw that I have a
typo there so let's go ahead and fix
72

73
00:07:08.070 --> 00:07:13.370
that while I'm here as well. You come and
refactor rename.
73

74
00:07:14.370 --> 00:07:22.480
I'm missing an 'i' so VisitMapService. Now refactor that, and see here we
74

75
00:07:22.480 --> 00:07:26.490
were on issue number 47.
75

76
00:07:26.650 --> 00:07:29.729
Let's go ahead and commit that.
76

77
00:07:35.759 --> 00:07:42.930
That was number 47.
Number 47. We'll go ahead and commit
77

78
00:07:42.930 --> 00:07:49.940
and push that up to Git and that action
will close out the task for us.
