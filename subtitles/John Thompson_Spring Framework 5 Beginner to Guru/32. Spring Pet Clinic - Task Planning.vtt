WEBVTT
0
1
00:00:04.160 --> 00:00:08.880
Alright! In this video, we are going to do
some task planning. Our queue is
1

2
00:00:08.880 --> 00:00:15.000
getting a little low so I got two help
wanted issues in there and a bug and a
2

3
00:00:15.000 --> 00:00:17.160
couple things that we need to add in
here as well.
3

4
00:00:17.160 --> 00:00:20.160
Issues I  have been tracking
definitely slacked off on the equals
4

5
00:00:20.160 --> 00:00:23.760
method so we do need to get that
implemented. Now I do want to show you a
5

6
00:00:23.760 --> 00:00:27.689
couple interesting things here. If you're
not very familiar with GitHub.
6

7
00:00:27.689 --> 00:00:33.710
I'll show you a couple things here. Under
insights, we can see the recent activity,
7

8
00:00:33.710 --> 00:00:39.120
contributors I did have one person so
far and submit some code via a pull
8

9
00:00:39.120 --> 00:00:43.500
request. I believe that was French messages.
I do have two issues out there so you
9

10
00:00:43.500 --> 00:00:48.270
could get up on the page here. The
community, there's not too much there.
10

11
00:00:48.270 --> 00:00:52.829
What's interesting about the traffic, we
can see that we are seeing more and more
11

12
00:00:52.829 --> 00:00:57.329
people clone this. So as as this gets
into the project, more people fork it.
12

13
00:00:57.329 --> 00:01:01.109
This will definitely pick up and we can
see number of visitors are picking up as
13

14
00:01:01.109 --> 00:01:06.960
to a number of people contributing to it.
And then finally the forks. This is
14

15
00:01:06.960 --> 00:01:10.140
what I found interesting. We do have a
number of people that have forked a
15

16
00:01:10.140 --> 00:01:15.000
repository. And again, if you have your
own GitHub repository, I highly recommend
16

17
00:01:15.000 --> 00:01:19.619
doing this, to fork it and then modify it
as you go along inside of your own
17

18
00:01:19.619 --> 00:01:24.420
GitHub repository. It is a great way to
show off your work to a perspective
18

19
00:01:24.420 --> 00:01:30.540
employers. So what I wanted to do in this
video here is we are going to go in and
19

20
00:01:30.540 --> 00:01:36.150
plan out some issues. We are getting
close to the end. We are about to
20

21
00:01:36.150 --> 00:01:40.170
wrap up, not too far from wrapping up a
whole Spring Pet Clinic project. Things
21

22
00:01:40.170 --> 00:01:45.000
are looking fairly good. So I have got a
list of issues here and we will go
22

23
00:01:45.000 --> 00:01:50.540
through it and hopefully we don't have
too many more to plan after this. So
23

24
00:01:50.540 --> 00:01:58.049
number one is to implement the vets
the list view. Now they only
24

25
00:01:58.049 --> 00:02:03.210
provided a list option for vets so I'm
going to do the same. We don't have CRUD
25

26
00:02:03.210 --> 00:02:07.649
operations there and then but what they
did was interesting. They also
26

27
00:02:07.649 --> 00:02:12.959
implemented a JSON endpoint for vets.
27

28
00:02:12.959 --> 00:02:17.640
So let's try a little RESTful style
endpoint for us to get a list of vets
28

29
00:02:17.640 --> 00:02:22.569
and get a JSON object back. And then we
want to
29

30
00:02:22.569 --> 00:02:31.580
add validation for owner, pet and visit.
So right now, we don't have any of those
30

31
00:02:31.580 --> 00:02:36.650
so we want to get those added into the
system so we can do proper validations
31

32
00:02:36.650 --> 00:02:41.830
and get messages coming back so we'll
get that cooking as well.
32

33
00:02:45.459 --> 00:02:48.790
Then we have the opportunity to
implement a custom validator. I don't
33

34
00:02:48.790 --> 00:02:52.180
think I showed this in the regular
course but we will show you how to do
34

35
00:02:52.180 --> 00:02:55.230
that as well with Spring MVC.
35

36
00:03:01.610 --> 00:03:05.430
So this is going to show us how to
handle errors. There's actually an
36

37
00:03:05.430 --> 00:03:10.050
endpoint here. This error endpoint, we
don't haven't implemented this yet so
37

38
00:03:10.050 --> 00:03:14.580
we will go ahead and add that in. 
That's again just to show how to
38

39
00:03:14.580 --> 00:03:18.120
handle errors a little bit gracefully.
I do cover that in the Spring MVC
39

40
00:03:18.120 --> 00:03:21.140
portion of the course.
40

41
00:03:23.830 --> 00:03:26.830
We're going to get into some caching.
Caching we haven't talked about in the
41

42
00:03:26.830 --> 00:03:30.700
course. I actually want to expand on this.
Hopefully more at a future point in the
42

43
00:03:30.700 --> 00:03:34.540
course, we'll get into some of the
caching options. Basically, caching is
43

44
00:03:34.540 --> 00:03:38.890
a way to take data that does not change
very often. It's not good for dynamic
44

45
00:03:38.890 --> 00:03:42.790
data but if you know something like
vets, it's a good option because vets
45

46
00:03:42.790 --> 00:03:46.570
are probably going to work at the clinic
forever and really not change that often
46

47
00:03:46.570 --> 00:03:50.620
so that's a good candidate for a caching
and what a cache is it will bring that
47

48
00:03:50.620 --> 00:03:54.760
data into real memory and it can
significantly increase what performance
48

49
00:03:54.760 --> 00:03:57.460
your application because you don't have
to go out to the database to fetch that
49

50
00:03:57.460 --> 00:04:00.670
data. It would come right out of real
memory and be very fast. So we'll show
50

51
00:04:00.670 --> 00:04:04.870
you how to set that up. Spring makes it
crazy stupid simple to do. Very very very
51

52
00:04:04.870 --> 00:04:10.470
easy. And then next, we're going to start
doing with the database.
52

53
00:04:14.010 --> 00:04:20.900
We are going to implement H2 Init
scripts. Right now, we are allowing
53

54
00:04:20.900 --> 00:04:25.169
Hibernate to create the database. We're
going to actually provide initialization
54

55
00:04:25.169 --> 00:04:29.100
scripts that will both create the
database and populate with data. I
55

56
00:04:29.100 --> 00:04:32.100
don't think I showed this technique and
of course but we will get into that.
56

57
00:04:32.100 --> 00:04:36.450
That's just a different way of doing it.
Gives us a lot of flexibility. Spring has
57

58
00:04:36.450 --> 00:04:41.070
a lot of capabilities in that area. And
then we also want to do the same for
58

59
00:04:41.070 --> 00:04:43.970
MySQL.
59

60
00:04:45.919 --> 00:04:50.509
So we're going to do the same there and
we will be able to bring the database up
60

61
00:04:50.509 --> 00:04:57.949
against H2 or permanent MySQL database.
So I'll cover that as well and then
61

62
00:04:57.949 --> 00:05:00.250
let's...
62

63
00:05:00.489 --> 00:05:04.720
We're going to add test
coverage to build. I've actually
63

64
00:05:04.720 --> 00:05:08.320
started development on a testing course.
Hopefully when you're watching this,
64

65
00:05:08.320 --> 00:05:14.050
it will be out. But here what we want to
do is provide a unit test coverage where
65

66
00:05:14.050 --> 00:05:17.260
there's a Maven plugin that we can add.
Actually there's a couple of them but we
66

67
00:05:17.260 --> 00:05:21.710
will get that configured and start
getting the test coverage published.
67

68
00:05:21.710 --> 00:05:27.080
That will give us information about
how well we are doing with our unit test
68

69
00:05:27.080 --> 00:05:29.889
coverage and our integration test
coverage.
69

70
00:05:33.629 --> 00:05:37.550
Here's a task
to add the Git build information to
70

71
00:05:37.550 --> 00:05:41.360
Spring Boot Actuator. This is a really
nice feature where we can add to git
71

72
00:05:41.360 --> 00:05:46.400
commit information so that will get put
into a properties file and then when the
72

73
00:05:46.400 --> 00:05:50.180
artifact is deployed you can go to
Spring Boot Actuator endpoint and see
73

74
00:05:50.180 --> 00:05:53.480
what is running. So this is real nice
thing to do. I like to do it in
74

75
00:05:53.480 --> 00:05:59.510
production. Very very handy to do. Again
in inside of production or actually
75

76
00:05:59.510 --> 00:06:02.810
anything that you've deployed. Doesn't
matter if it's up to like a QA system or
76

77
00:06:02.810 --> 00:06:07.490
UAT system or something. It's very
handy where you think version whatever
77

78
00:06:07.490 --> 00:06:11.780
is running, be able to go into an endpoint of the running application say
78

79
00:06:11.780 --> 00:06:15.650
that yes this is definitively what is
running because you do see some weird
79

80
00:06:15.650 --> 00:06:19.370
stuff happening where you think hey I've
already fixed this and you start looking
80

81
00:06:19.370 --> 00:06:22.790
at it and go wait a second, what's
actually running here? And sometimes you
81

82
00:06:22.790 --> 00:06:27.380
will actually find that you've already
fixed something but the artifact did not
82

83
00:06:27.380 --> 00:06:31.850
get deployed properly. So a very very
handy thing to have is this build
83

84
00:06:31.850 --> 00:06:36.140
information on a Spring Boot Actuator
Endpoint. I'll show you how to do
84

85
00:06:36.140 --> 00:06:39.190
that coming up in the course.
85

86
00:06:41.350 --> 00:06:45.900
Add SonarCloud. So SonarCloud or SonarQube gives us a lot of
86

87
00:06:45.900 --> 00:06:50.700
interesting metrics about our code
so we'll get that cooking. To do that, I
87

88
00:06:50.700 --> 00:06:53.820
think we need to get the code coverage
going first so we got a little
88

89
00:06:53.820 --> 00:07:00.080
dependency there. And then of course
we'll add in the SolarCloud build badge.
89

90
00:07:03.080 --> 00:07:08.919
The last one is kind of boring here.
Update...
90

91
00:07:13.020 --> 00:07:17.569
I'd better use direction so I'm going to go
ahead and submit that.
91

92
00:07:18.510 --> 00:07:22.260
I've looked at the Spring guys. I got a
lot more rich information than what I
92

93
00:07:22.260 --> 00:07:25.400
have on my page. I'd like to get this
database information on there and
93

94
00:07:25.400 --> 00:07:32.010
running as well. So add in some of
that so we can get our readme page.
94

95
00:07:32.010 --> 00:07:36.810
We're looking a little bit better. You
can see here. You can see my read
95

96
00:07:36.810 --> 00:07:40.650
means a little sparse right now so
adding a task take care of that. So just
96

97
00:07:40.650 --> 00:07:45.420
to recap here, we got 18 open issues now.
This is where the course is going to be
97

98
00:07:45.420 --> 00:07:50.130
going. Going to be working these roughly in
the order that I added them in. But
98

99
00:07:50.130 --> 00:07:54.960
obviously, we get a lot of interesting
stuff and we are in the final stretch
99

100
00:07:54.960 --> 00:08:00.990
here of wrapping up this Spring Boot Pet
Clinic. Also as a reminder, I'll probably
100

101
00:08:00.990 --> 00:08:05.400
add in some more Help Wanted tasks there
so if you see one and want to do it,
101

102
00:08:05.400 --> 00:08:11.100
please go right ahead and submit a pull
request and I could be adding a video of
102

103
00:08:11.100 --> 00:08:15.870
your contribution to our little Spring
Pet Clinic in the very near
103

104
00:08:15.870 --> 00:08:17.930
future.
