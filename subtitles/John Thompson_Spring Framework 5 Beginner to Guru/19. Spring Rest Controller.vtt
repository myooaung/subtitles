WEBVTT
0
1
00:00:04.069 --> 00:00:08.250
Alright. So far, I've been showing you a
rather traditional way of setting up
1

2
00:00:08.250 --> 00:00:14.820
REST API's using Spring MVC. Now, around
Spring 4, they provide us an annotation
2

3
00:00:14.820 --> 00:00:21.029
called @RestController. And what this is
it's a convenience annotation that is
3

4
00:00:21.029 --> 00:00:25.470
going to give us the @ResponseBody
Annotation. Now, what we've been doing is
4

5
00:00:25.470 --> 00:00:31.500
we've been returning back the ResponseEntity. So we've been returning back this
5

6
00:00:31.500 --> 00:00:36.630
and that is effectively almost nearly
the same as ResponseBody but it does
6

7
00:00:36.630 --> 00:00:43.649
give us a little more control. And what
what we can do is the equivalent of this.
7

8
00:00:43.649 --> 00:00:48.989
This is in Spring 4. I was I'm
thinking it's Spring 4-ish. This @RequestBody
8

9
00:00:48.989 --> 00:00:54.989
came out in Spring 3, but in 4.0, we
got this @RestController which is really
9

10
00:00:54.989 --> 00:00:59.190
just a convenience annotation that
combines these two annotations, so
10

11
00:00:59.190 --> 00:01:04.409
@Controller and @ResponseBody. So now the,
REST Controllers are gonna return
11

12
00:01:04.409 --> 00:01:16.619
back an Entity. So what we can do is
change this, like so and let's see here. You don't
12

13
00:01:16.619 --> 00:01:23.299
need to do that anymore. So let's get rid
of that give it all that.
13

14
00:01:32.390 --> 00:01:45.110
I should have to turn back a new. So
you can see here, let's bring up the old
14

15
00:01:45.110 --> 00:01:50.570
one, you can see that we were returning
back ResponseEntity with the generic of
15

16
00:01:50.570 --> 00:01:56.180
CategoryListDTO, and we're building
that object which gives us a lot more
16

17
00:01:56.180 --> 00:02:00.530
control over the response that we're
sending here. We're effectively doing the
17

18
00:02:00.530 --> 00:02:04.640
same thing a little bit cleaner code. So
I'm gonna refactor this guy too while
18

19
00:02:04.640 --> 00:02:07.030
we're here.
19

20
00:02:18.610 --> 00:02:24.610
Now let's double check our test. Make
sure that those are still running okay.
20

21
00:02:26.050 --> 00:02:31.130
So the tests are still happy. I'm not
gonna go through doing everything on
21

22
00:02:31.130 --> 00:02:35.720
the CustomerController. I'll update the
code and check that in on the branch for
22

23
00:02:35.720 --> 00:02:40.400
the end of this module. But just take
a look at how this is handling it. So a
23

24
00:02:40.400 --> 00:02:44.540
little bit cleaner implementation. We're no
longer returning back that Response
24

25
00:02:44.540 --> 00:02:50.210
Entity. So now we have a RestController
which is just a recap a convenience
25

26
00:02:50.210 --> 00:02:54.290
method, to say that we're returning back
a ResponseBody from these. So the
26

27
00:02:54.290 --> 00:02:58.880
@ResponseBody annotation says I'm gonna return back an object but I want you
27

28
00:02:58.880 --> 00:03:03.560
to parse it to the proper implementation
where the clients asking for JSON or XML
28

29
00:03:03.560 --> 00:03:07.520
or whatever, the Framework is gonna
handle that based on the request type
29

30
00:03:07.520 --> 00:03:11.030
and handling that object. So if you
remember when we were dealing with
30

31
00:03:11.030 --> 00:03:16.070
Spring MVC and Thymeleaf, we were
returning back a String and the String
31

32
00:03:16.070 --> 00:03:19.550
was used to figure out the template. In
this case, we're returning back an object
32

33
00:03:19.550 --> 00:03:25.550
because we're asking for JSON. Jackson
is gonna be utilized to generate a JSON
33

34
00:03:25.550 --> 00:03:32.150
response based on the object that we're
returning. So in this case, CategoryListDTO
34

35
00:03:32.150 --> 00:03:38.330
and CategoryDTO are gonna get
converted into JSON by Jackson because
35

36
00:03:38.330 --> 00:03:44.420
we are having a @RestController mapping
here that combines and @Controller and
36

37
00:03:44.420 --> 00:03:50.510
@ResponseBody for us. So I was showing
you an older way, prior to this. And with
37

38
00:03:50.510 --> 00:03:55.970
Spring 5, this is probably the most
modern and most preferred way. But you
38

39
00:03:55.970 --> 00:03:59.450
are gonna see a mixture of that of
these methods out there in the field. So
39

40
00:03:59.450 --> 00:04:02.840
there's a number of different ways to
skin the cat here. This is probably the
40

41
00:04:02.840 --> 00:04:07.340
most current one but when you get out on
the field and start working with legacy
41

42
00:04:07.340 --> 00:04:12.489
code, you can see a number of different
ways of handling this.
