WEBVTT
0
1
00:00:04.220 --> 00:00:09.030
Now before we start getting doing actual
dependency injection, what we need to
1

2
00:00:09.030 --> 00:00:13.049
talk about is the Spring Application
Context. So you saw this in action
2

3
00:00:13.049 --> 00:00:16.770
already a little bit where we are
bringing up Spring and it is creating
3

4
00:00:16.770 --> 00:00:20.730
Spring Beans and those all get stored in
something called the Application Context.
4

5
00:00:20.730 --> 00:00:25.369
So you can get literally hundreds of
Spring Beans of thousands sometimes
5

6
00:00:25.369 --> 00:00:30.029
Spring Beans loaded up into the
Application Context and this is where
6

7
00:00:30.029 --> 00:00:33.390
Spring does all its work of keeping
track of the dependencies of what it
7

8
00:00:33.390 --> 00:00:36.899
needs to create first and how it needs
to be created, where it's going to get it
8

9
00:00:36.899 --> 00:00:39.930
from so what we're going to do in this
I'm going to do a very simple
9

10
00:00:39.930 --> 00:00:43.710
demonstration of creating a Spring Bean
we're going to put it up into the
10

11
00:00:43.710 --> 00:00:48.840
Application Context by default when it
starts up, Spring is going to go out
11

12
00:00:48.840 --> 00:00:52.980
find the beans that it needs to wire up
and it's going to find our bean and
12

13
00:00:52.980 --> 00:00:57.000
it'll get an instance of that into the
Application Context and then what we're
13

14
00:00:57.000 --> 00:01:01.140
going to do this we're going to ask Spring
for an instance of that from the context.
14

15
00:01:01.140 --> 00:01:05.040
We're going to do a little hello world
demonstration here and we'll get a hold
15

16
00:01:05.040 --> 00:01:09.510
of that bean and from the context and
run a hello world on it. Alright to give
16

17
00:01:09.510 --> 00:01:13.439
you a little bit more of a demo of the
spring context what we're going to do is
17

18
00:01:13.439 --> 00:01:18.360
create a New Package here and create a
mock controller inside of it. So I'm
18

19
00:01:18.360 --> 00:01:25.470
going to give the package a name of
controllers and in it I'm going to
19

20
00:01:25.470 --> 00:01:35.100
create a New Class. I'm just going to
call it MyController. Now go ahead
20

21
00:01:35.100 --> 00:01:41.939
add that to Git. I'm going to
annotate it as a Controller so that's
21

22
00:01:41.939 --> 00:01:45.479
going to make it a Spring Component
which will be managed by the 
22

23
00:01:45.479 --> 00:01:50.759
spring-context. So when Spring
starts up he'll get a handle on this
23

24
00:01:50.759 --> 00:01:54.270
because it's marked as a Spring Component and it will create an instance of
24

25
00:01:54.270 --> 00:01:59.399
it and put that instance into the spring-context so I'm going to add a method to
25

26
00:01:59.399 --> 00:02:01.909
this as well.
26

27
00:02:08.330 --> 00:02:12.600
So I'm just going to have a same single
method hello and it's going to print out
27

28
00:02:12.600 --> 00:02:17.400
to the console. I'll print Hello. So let's
come over here now and we will get all
28

29
00:02:17.400 --> 00:02:29.190
of this. So now I'm saying ApplicationContext and the run method is going to
29

30
00:02:29.190 --> 00:02:34.470
return back an ApplicationContext for
us to work with. So now what I want to do
30

31
00:02:34.470 --> 00:02:48.720
is could take that context and get a
hold of bean. Now by default, what
31

32
00:02:48.720 --> 00:02:53.600
Spring is going to do is it's going to go
ahead and create that as a Spring Bean
32

33
00:02:53.600 --> 00:02:58.500
and it's going to give it a name of the
class name but with a leading lowercase
33

34
00:02:58.500 --> 00:03:04.620
character so rather than uppercase MyController it becomes lowercase "m" myController
34

35
00:03:04.620 --> 00:03:11.070
and because the context getBean is not strongly typed we do have to
35

36
00:03:11.070 --> 00:03:20.640
cast it so I'm going to go ahead and run
this now and we should get a Hello. Some
36

37
00:03:20.640 --> 00:03:35.610
return statement, my bad. Let's try
that one more time and we can see down
37

38
00:03:35.610 --> 00:03:39.570
in the bottom of the screen where I
could get the output of Hello there from
38

39
00:03:39.570 --> 00:03:43.370
my bean so just to recap what's going
back just so you understand everything.
39

40
00:03:43.370 --> 00:03:49.920
So I created a MyController class and
marked it as a Controller that created
40

41
00:03:49.920 --> 00:03:53.970
it as a Spring Bean or indicated that's
the Spring Bean and when I started up
41

42
00:03:53.970 --> 00:03:59.190
the application I loaded up the context,
I got a handle on the context from the
42

43
00:03:59.190 --> 00:04:04.380
Spring Application run and then I asked
the context to give me a bean called myController
43

44
00:04:04.380 --> 00:04:10.200
out of context and then I
called that method on there of hello so
44

45
00:04:10.200 --> 00:04:16.140
that all got wired up for us so when we
ran and came up, fell through
45

46
00:04:16.140 --> 00:04:19.900
here and now it's behaving a little bit
differently because this is not a web
46

47
00:04:19.900 --> 00:04:24.849
application, we're not starting up Tomcat
or anything so it's going to start to go
47

48
00:04:24.849 --> 00:04:29.949
through the main method and
so you can see that down at the bottom
48

49
00:04:29.949 --> 00:04:35.199
there, bottom of the screen that the program did terminate normally. Now you
49

50
00:04:35.199 --> 00:04:39.250
can see what happened there is we did
ask the context for the bean, we got an
50

51
00:04:39.250 --> 00:04:43.270
instance of that bean, so you noticed
that I did not do it new anywhere in
51

52
00:04:43.270 --> 00:04:46.629
there I did not create that Java class
that didn't create an instantiation of
52

53
00:04:46.629 --> 00:04:50.919
it that was all managed by the Spring
Framework so that bean got created
53

54
00:04:50.919 --> 00:04:54.460
by the Spring Framework and then we
asked the context which is going to be
54

55
00:04:54.460 --> 00:04:59.139
holding a reference to that bean and it
gave us a reference to that bean then
55

56
00:04:59.139 --> 00:05:02.919
we're able to call the method on and get
the output to the console for our little
56

57
00:05:02.919 --> 00:05:06.090
HelloWorld demonstration.
