WEBVTT
0
1
00:00:01.089 --> 00:00:05.740
In this video, I wanna introduce you to
the Spring Pet Clinic but the Spring
1

2
00:00:05.740 --> 00:00:10.389
Framework Guru edition of the pet clinic.
Now what we're going to be doing is
2

3
00:00:10.389 --> 00:00:15.580
we're going to follow an opinionated design,
so just to define that, opinionated is
3

4
00:00:15.580 --> 00:00:20.800
kind of a loose concept in the software
industry. Opinionated means there is one way
4

5
00:00:20.800 --> 00:00:24.579
of doing things. It's a particular
persons or groups opinion.
5

6
00:00:24.579 --> 00:00:28.990
Un-Opinionated means you can do
anything you want. Some frameworks are
6

7
00:00:28.990 --> 00:00:33.130
very loose. Others are very rigid like
Ruby and Rails is definitely opinionated.
7

8
00:00:33.130 --> 00:00:36.730
Some of the Microsoft frameworks are
fairly Un-Opinionated where you can
8

9
00:00:36.730 --> 00:00:41.790
go and do whatever you want. Spring Boot
itself is considered an Opinionated
9

10
00:00:41.790 --> 00:00:45.820
configuration because what it's doing is
bringing in a lot of configurations in
10

11
00:00:45.820 --> 00:00:50.710
an opinionated fashion of the Spring
team of what typical default
11

12
00:00:50.710 --> 00:00:55.230
configurations would be and it is very
helpful for you to bring in these
12

13
00:00:55.230 --> 00:00:59.770
options where you don't have to research
it. There's a lot of benefit in
13

14
00:00:59.770 --> 00:01:04.150
saving you time, so once you learn the
opinionated way of doing things, the one
14

15
00:01:04.150 --> 00:01:09.280
way things become a lot easier when
you're using framework. Now Opinionated
15

16
00:01:09.280 --> 00:01:15.100
Development, I'm saying that the Spring
Framework Guru SFG Pet Clinic will also be
16

17
00:01:15.100 --> 00:01:20.499
Opinionated software development and
the opinion of me, so I'm saying I'm
17

18
00:01:20.499 --> 00:01:24.549
gonna offer you my opinion and this
is based on my particular experience
18

19
00:01:24.549 --> 00:01:27.670
using the Spring Framework. I've got over
a decade of using the Spring Framework
19

20
00:01:27.670 --> 00:01:33.280
in a lot of different situations. I've
seen the framework evolve. I am actively
20

21
00:01:33.280 --> 00:01:37.810
involved in the Spring community, so I am
seeing what best practices are, emerging
21

22
00:01:37.810 --> 00:01:42.159
best practices. I do try to keep
finger on the pulse of what's happening
22

23
00:01:42.159 --> 00:01:45.520
in the community and now the best
practices that are going on. You will
23

24
00:01:45.520 --> 00:01:49.840
see in the course where I do follow
Object-Oriented Principles, SOLID design.
24

25
00:01:49.840 --> 00:01:53.619
Coming up in the course, we'll also be
following Test-Driven Development. I'm
25

26
00:01:53.619 --> 00:01:57.100
gonna show you naming conventions and
we're also gonna get into software
26

27
00:01:57.100 --> 00:02:00.639
development lifecycle. These are all
my opinions, not necessarily right or
27

28
00:02:00.639 --> 00:02:05.319
wrong. I'm offering you my experience.
Things that have worked well for me, so
28

29
00:02:05.319 --> 00:02:10.179
what you can expect coming up as we
develop the Pet Clinic Project, the
29

30
00:02:10.179 --> 00:02:13.239
sections of the course are gonna be a
little bit different. I'm going to try
30

31
00:02:13.239 --> 00:02:16.370
to emulate a real-world
software project, like I'm developing a
31

32
00:02:16.370 --> 00:02:20.780
project from scratch. I'm definitely
going to be leveraging GitHub. We will be
32

33
00:02:20.780 --> 00:02:25.790
using the master branch. In the course,
you'll see that I use branches to show
33

34
00:02:25.790 --> 00:02:30.980
you a beginning and ending version.
This is done throughout the course. This
34

35
00:02:30.980 --> 00:02:34.850
section of the course specifically on
Pet Clinic. It's gonna be a little
35

36
00:02:34.850 --> 00:02:37.910
bit different. We are going to be
following what's called a Mainline dev
36

37
00:02:37.910 --> 00:02:43.100
model, where we will be committing to the
master branch and this is also part of
37

38
00:02:43.100 --> 00:02:48.200
my opinion. Sometimes we get a little too
happy and branching and excessive
38

39
00:02:48.200 --> 00:02:52.130
branching. I don't think for every task
you need to create a branch, I think
39

40
00:02:52.130 --> 00:02:55.940
that's a little wasteful. I prefer a
mainline dev model especially when you
40

41
00:02:55.940 --> 00:02:59.660
have a small team. If you're doing small
incremental changes, the Mainline
41

42
00:02:59.660 --> 00:03:04.010
dev model works very well. I've seen
a lot of problems caused with branching
42

43
00:03:04.010 --> 00:03:08.600
so I think the pendulum in the industry
it's kind of swung to doing a lot of
43

44
00:03:08.600 --> 00:03:12.920
branches. It's probably gonna
swing back as we developed Pet Clinic. I
44

45
00:03:12.920 --> 00:03:16.610
am going to be taking you step by step
so it's gonna be a lot of hands-on and
45

46
00:03:16.610 --> 00:03:21.740
as I walk through things. A lot of people
like that. Some don't. But I do wanna
46

47
00:03:21.740 --> 00:03:26.450
show you step by step hands on and
really show you how to develop an
47

48
00:03:26.450 --> 00:03:29.420
application in Spring from start to
finish.
48

49
00:03:29.420 --> 00:03:33.050
So one of the things that we might be
doing is showing you like using GitHub
49

50
00:03:33.050 --> 00:03:37.730
issues where we can plan out tasks that
we want to do in the project. We'll
50

51
00:03:37.730 --> 00:03:42.020
track those against GitHub issues. Now
I'm gonna be sprinkling the Pet
51

52
00:03:42.020 --> 00:03:46.040
Clinic throughout the entire course and
what I want to do with the Pet Clinic is
52

53
00:03:46.040 --> 00:03:49.790
as we learn concepts in a particular
section of the course, I'm gonna add
53

54
00:03:49.790 --> 00:03:54.170
content using Pet Clinic to re-inforce
those concepts that we learned. So
54

55
00:03:54.170 --> 00:03:58.340
unfortunately, looking at the outline of
the course, Test-Driven Development and
55

56
00:03:58.340 --> 00:04:02.120
Continuous Integration are introduced a
little bit later so we're not going to
56

57
00:04:02.120 --> 00:04:05.630
be jumping into those right away. But I
will bring those in as soon as possible.
57

58
00:04:05.630 --> 00:04:09.500
We'll be laying down a solid
foundation and this is going to be
58

59
00:04:09.500 --> 00:04:12.830
something that we'll build upon. That
can't overwhelm you with everything all
59

60
00:04:12.830 --> 00:04:17.750
at once, though we will be layering it in.
Again, the whole purpose of developing
60

61
00:04:17.750 --> 00:04:21.260
Pet Clinic is to show you and re-inforce
sections that we've learned in the
61

62
00:04:21.260 --> 00:04:25.010
course. Some people may not like this
because it is gonna be a little time
62

63
00:04:25.010 --> 00:04:27.150
consuming.
It's okay to skip ahead if you're not
63

64
00:04:27.150 --> 00:04:31.230
getting value. Go ahead skip ahead. I know a
lot of people will get value, some don't.
64

65
00:04:31.230 --> 00:04:34.770
Everybody's got a different learning
style so I don't take offense if you
65

66
00:04:34.770 --> 00:04:37.980
skipping ahead at all. But keep in mind
as we go through it, I'm gonna be
66

67
00:04:37.980 --> 00:04:42.570
dropping hints as much as possible. So
just to summarize, we are gonna have a
67

68
00:04:42.570 --> 00:04:46.620
lot of fun with this. I'm actually 
looking forward to it and we will be
68

69
00:04:46.620 --> 00:04:50.760
getting a lot out of it
as we develop these Spring Framework Guru
69

70
00:04:50.760 --> 00:04:54.530
edition of the Spring Pet Clinic.
