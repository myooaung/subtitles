WEBVTT
0
1
00:00:05.150 --> 00:00:10.030
This video we're going to go ahead and setup initialization of some data for our application to work
1

2
00:00:10.030 --> 00:00:10.620
with.
2

3
00:00:10.630 --> 00:00:15.680
So what I'm gonna do is come in here and let's add in a new package.
3

4
00:00:15.700 --> 00:00:25.490
I'm going to call it bootstrap. And for those that don't know computer booting up is a very common terminology
4

5
00:00:25.490 --> 00:00:31.930
that comes from an old saying. I believe it's from the US is to pull yourself up by your bootstraps.
5

6
00:00:32.150 --> 00:00:38.270
So that's kind of where the origins of that saying are. I'm going to come in here and add in a new class
6

7
00:00:40.390 --> 00:00:41.850
and just call it bootstrap data.
7

8
00:00:45.520 --> 00:00:46.580
Go ahead and add that.
8

9
00:00:46.600 --> 00:00:52.180
And that's gonna implement a command line runner. In a command line runner,
9

10
00:00:52.180 --> 00:00:55.390
this is an interface that we want to implement.
10

11
00:00:56.020 --> 00:01:02.170
And this is going to tell Spring. Spring is going to look for instances of this type and want to find
11

12
00:01:02.170 --> 00:01:06.100
some that's going to go ahead and run them.
12

13
00:01:06.100 --> 00:01:10.990
So I need to implement a method here so just say command N and implement methods.
13

14
00:01:11.050 --> 00:01:19.200
And it wants to have that run method implemented and here what I want to do is mark this as a component.
14

15
00:01:20.350 --> 00:01:28.040
I'm doing this. It tells the Spring Framework to go ahead and detect this as a Spring managed component.
15

16
00:01:28.060 --> 00:01:30.820
Now I need to use dependency injection.
16

17
00:01:30.910 --> 00:01:33.670
We have a whole section on dependency injection.
17

18
00:01:33.730 --> 00:01:40.450
So what I want to do is I'm going to come in here private final and I will say let's start with the
18

19
00:01:40.450 --> 00:01:44.340
AuthorRepository just keep us in order.
19

20
00:01:44.430 --> 00:01:45.670
AuthorRepository
20

21
00:01:48.180 --> 00:01:52.200
and BookRepository.
21

22
00:01:52.320 --> 00:01:58.200
Then I'm going to do a command N. Constructor and bring those two in. so that sets up the constructor
22

23
00:01:58.200 --> 00:02:02.910
and what's gonna happen is when Spring implements this component that's going to bring it into the Spring
23

24
00:02:02.910 --> 00:02:03.930
context.
24

25
00:02:03.930 --> 00:02:10.740
It will do Dependency Injection into the constructor for an instance of the author repository and also
25

26
00:02:10.770 --> 00:02:12.570
the book repository.
26

27
00:02:12.570 --> 00:02:17.120
So let's go ahead and set up a couple authors and books.
27

28
00:02:17.350 --> 00:02:20.640
Let's do author and we'll call this guy Eric
28

29
00:02:25.150 --> 00:02:25.830
and we'll say
29

30
00:02:31.190 --> 00:02:32.560
let's see. What am I missing there?
30

31
00:02:36.010 --> 00:02:37.210
Empty set of book.
31

32
00:02:37.210 --> 00:02:43.270
We don't want to do that. So I'm going to modify the author and get rid of the book properties so we're not
32

33
00:02:43.270 --> 00:02:50.840
going to create an author with a set of books. Just go ahead and get rid of that for now. Gonna be a little
33

34
00:02:51.200 --> 00:02:55.330
more friendly. And let's create a new book.
34

35
00:02:59.300 --> 00:03:03.390
I'm curious everybody knows who Eric Evans is. I'm about to give it away here.
35

36
00:03:08.380 --> 00:03:10.840
This is a classic book, Domain Driven Design.
36

37
00:03:14.690 --> 00:03:16.250
Did I do the same thing with book?
37

38
00:03:16.260 --> 00:03:20.780
Let's go and take a look at that. We don't want to have the property there.
38

39
00:03:20.780 --> 00:03:24.630
So just doing a little refactoring of our objects here.
39

40
00:03:24.850 --> 00:03:33.250
So we don't have to initialize books and authors for us. Let's go back over the bootstrap and finish that
40

41
00:03:33.530 --> 00:03:43.590
up. Now that is going to set up a book by that and what we want to do is add in a book to the author
41

42
00:03:43.950 --> 00:03:45.510
and an author to the book.
42

43
00:03:45.660 --> 00:03:50.250
And by removing the constructor, it did cause one problem there.
43

44
00:03:50.730 --> 00:03:58.900
So what we want to do here is this books we want initialize that with a new hash set. So we'll initialize that
44

45
00:03:58.900 --> 00:04:00.160
property by default.
45

46
00:04:00.160 --> 00:04:05.920
And we'll do the same on book.
46

47
00:04:06.010 --> 00:04:18.480
Now what we can do is say Eric get books and we're going to add like so.
47

48
00:04:18.730 --> 00:04:27.060
And then also on the books object we want to get the authors and add Eric as an author of that book.
48

49
00:04:29.620 --> 00:04:34.410
Then finally what we can do is save both of those into a repository.
49

50
00:04:34.420 --> 00:04:39.220
So you want to say author repository save
50

51
00:04:39.690 --> 00:04:51.240
Eric and then book repository save so that's going to save those into the H2 database.
51

52
00:04:51.270 --> 00:04:57.690
Now let's also do one more example of those. We add an author. We'll call this Rod.
52

53
00:05:02.780 --> 00:05:11.990
So we're adding in Rod Johnson here. Rod Johnson is the founder of the Spring Framework. So we'll
53

54
00:05:11.990 --> 00:05:23.980
call his book NoEJBS, another iconic book. This is the old J2EE. It still scares
54

55
00:05:23.980 --> 00:05:30.730
me that was changed over a decade ago from J2EE to JEE and companies are still looking for
55

56
00:05:32.090 --> 00:05:38.050
J2EE developers. I'm just adding in a random value for those.
56

57
00:05:38.100 --> 00:05:43.430
I'm not gonna actually look that up and now what will I say is do the same thing here.
57

58
00:05:43.440 --> 00:05:48.100
Rod getBooks. We're gonna add in NoEJB.
58

59
00:05:48.840 --> 00:05:59.140
And then also we'll take the NoEJB and get authors and we'll add Rod as an author to that. And
59

60
00:05:59.140 --> 00:06:09.130
then finally let's do this.
60

61
00:06:09.250 --> 00:06:10.420
I'm also gonna do
61

62
00:06:16.290 --> 00:06:18.360
so the output account there.
62

63
00:06:18.380 --> 00:06:25.310
So now if I come in here and what I can do is go to the Spring application. I'm going to start that
63

64
00:06:25.310 --> 00:06:27.870
up and we should see counsel
64

65
00:06:27.880 --> 00:06:34.600
output that says the number of books that've been loaded into the database. So you can see here Spring
65

66
00:06:34.600 --> 00:06:40.730
is initializing. You can see it starting bootstrap and a number of books 1.
66

67
00:06:40.750 --> 00:06:44.090
So what did we do wrong there.
67

68
00:06:45.790 --> 00:06:48.170
I'm not sure if you see it but I see it right away there.
68

69
00:06:50.220 --> 00:06:51.420
I forgot to save Rod.
69

70
00:06:57.430 --> 00:07:02.500
It's going to help. Helps quite a bit if we actually go in and save the data that we're expecting. So
70

71
00:07:02.500 --> 00:07:08.770
let me go ahead and restart this and I bet the number of books will increment to 2 this time when we
71

72
00:07:08.950 --> 00:07:13.230
restart our little Spring Boot application here.
72

73
00:07:13.370 --> 00:07:13.800
There we go.
73

74
00:07:13.810 --> 00:07:18.490
That is much better so you can see down on the bottom screen I now have number of books 2.
74

75
00:07:18.520 --> 00:07:20.340
So I minimized counsel.
75

76
00:07:20.530 --> 00:07:27.100
Just to recap what we did here, online 13, I'm saying using this component annotation to tell the Spring
76

77
00:07:27.100 --> 00:07:33.460
Framework that this is a Spring managed component and I'm implementing the interface command line runner
77

78
00:07:33.460 --> 00:07:38.710
which has the one method that we have to bring in which is the run method which takes a string of arguments
78

79
00:07:38.710 --> 00:07:45.550
which we don't we're not using at all. But the Spring managed component, we're saying that it's got two properties:
79

80
00:07:45.980 --> 00:07:49.300
the author repository and the book repository.
80

81
00:07:49.570 --> 00:07:51.640
And they are final variables.
81

82
00:07:51.640 --> 00:07:58.030
So we're initializing those inside the constructor which tells the Spring Framework to when it constructs
82

83
00:07:58.030 --> 00:08:02.980
this bean that it has to inject an instance of author repository and book repository.
83

84
00:08:02.980 --> 00:08:09.320
So when it starts up, the run myth, that's bean is configured by the Spring Framework.
84

85
00:08:09.320 --> 00:08:16.570
And then what we are doing is we are creating two author objects and two book objects and we are going
85

86
00:08:16.810 --> 00:08:19.640
using the repository methods to save them.
86

87
00:08:19.690 --> 00:08:27.660
And underneath the covers, Spring Data JPA is utilizing  Hibernate to save these two in memory H2
87

88
00:08:27.670 --> 00:08:28.330
database.
