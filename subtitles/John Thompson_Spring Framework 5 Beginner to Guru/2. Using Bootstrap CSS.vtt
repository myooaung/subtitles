WEBVTT
0
1
00:00:03.770 --> 00:00:08.700
Now, before we jump into testing Spring,
I'm gonna take a little sidetrack in this
1

2
00:00:08.700 --> 00:00:13.230
video and we are gonna introduce
Bootstrap CSS. Bootstrap is like one of
2

3
00:00:13.230 --> 00:00:17.640
the largest, most popular frameworks for
websites or web application development
3

4
00:00:17.640 --> 00:00:21.420
for CSS. I like Bootstrap because it
makes me look like a genius when I'm
4

5
00:00:21.420 --> 00:00:24.960
developing websites. It's very easy to
use. We're gonna do a little crash
5

6
00:00:24.960 --> 00:00:30.660
course here on Bootstrap and refactor
our web page to utilize Bootstrap CSS
6

7
00:00:30.660 --> 00:00:35.010
because it kind of annoys me to have an
ugly web page. So let's get a really nice
7

8
00:00:35.010 --> 00:00:37.950
looking web page and I'm gonna show
you exactly how we can start using
8

9
00:00:37.950 --> 00:00:43.500
Bootstrap for our little web project
here. Alright, in this video what we wanna
9

10
00:00:43.500 --> 00:00:48.120
do is start using Bootstrap. Now
Bootstrap is probably the most
10

11
00:00:48.120 --> 00:00:54.480
popular CSS framework out there. And
right now, at the time of recording, 3.3.7
11

12
00:00:54.480 --> 00:00:59.730
is released. They are working on
Bootstrap 4. It's not released at the
12

13
00:00:59.730 --> 00:01:03.600
time of recording. But Bootstrap 3 has
been out for a long time and it's stable and
13

14
00:01:03.600 --> 00:01:08.280
I like it because it makes the worst web
developers look like geniuses in
14

15
00:01:08.280 --> 00:01:11.670
setting up their websites. It's very easy
to use, it's a grid-based
15

16
00:01:11.670 --> 00:01:16.890
system. And the course isn't specifically
on Bootstrap but we are gonna
16

17
00:01:16.890 --> 00:01:20.490
leverage it because I wanna make that
a little web page that we have to look a
17

18
00:01:20.490 --> 00:01:24.479
little bit nicer. And so we'll get a
little bit of experience but keep in
18

19
00:01:24.479 --> 00:01:29.700
mind I'm not training you on Bootstrap
CSS in this course. So what I wanna do
19

20
00:01:29.700 --> 00:01:34.530
is I'm gonna take advantage of
Bootstrap CDN. We can utilize this and
20

21
00:01:34.530 --> 00:01:42.360
I'm going to cut and paste it right on
over to our index page. And of course we
21

22
00:01:42.360 --> 00:01:52.979
want to put that in the header. That didn't
take. What I wanna do is copy that.
22

23
00:01:52.979 --> 00:01:59.610
Let's see if I get on my clipboard this
time. Alright so this is gonna bring
23

24
00:01:59.610 --> 00:02:04.610
in that and I do not. Let's skip
that optional thing. Let's just keep this
24

25
00:02:04.610 --> 00:02:12.420
generic Bootstrap. I'm gonna take a
minute and refactor this. To use
25

26
00:02:12.420 --> 00:02:15.239
Bootstrap, I'll step through that. I'm
gonna pause the video for a second
26

27
00:02:15.239 --> 00:02:20.760
and be right back and we'll have a nice
looking web page to see. Okay I've gone
27

28
00:02:20.760 --> 00:02:25.980
in and fast word a little bit. I've
updated the CSS or the styling in the
28

29
00:02:25.980 --> 00:02:29.940
HTML to give us a little more robust
looking application. So it's a little bit
29

30
00:02:29.940 --> 00:02:34.709
nicer for us to work with and I've updated
HTML to use Bootstrap. So let's take a
30

31
00:02:34.709 --> 00:02:39.420
quick look. I'll show you what we did. So
this is how we looked before and I am
31

32
00:02:39.420 --> 00:02:45.900
taking advantage right now of the Thymeleaf's Natural Templating engine. So I am
32

33
00:02:45.900 --> 00:02:50.370
viewing the HTML in the browser. I clicked
on I'll show you if you do this in
33

34
00:02:50.370 --> 00:02:55.200
IntelliJ, if you click on the browser
link, it's gonna open up in the
34

35
00:02:55.200 --> 00:03:00.239
browser and you can see that it actually
runs off a port which is kind of
35

36
00:03:00.239 --> 00:03:03.150
interesting that IntelliJ does it that
way rather than opening up the file
36

37
00:03:03.150 --> 00:03:09.690
directly. So this is running through
IntelliJ but it is the direct HTML file
37

38
00:03:09.690 --> 00:03:15.060
being displayed inside of Chrome. And
let's go in and do a refresh. So I added
38

39
00:03:15.060 --> 00:03:20.880
this in and so this is how it looked
previously. This is how it now looks with
39

40
00:03:20.880 --> 00:03:26.280
the Bootstrap styling. So I am gonna go through
and show you the changes that I made. So
40

41
00:03:26.280 --> 00:03:32.280
we saw the addition of the CSS
and I'm using a CDN right now and that's
41

42
00:03:32.280 --> 00:03:37.859
a convenient way. And coming up, we'll
switch over to using web JARs but we
42

43
00:03:37.859 --> 00:03:43.200
wanna have the CDN and therefore the
Natural Templating engine. So what's
43

44
00:03:43.200 --> 00:03:46.859
gonna happen in the next video, I'll show
you how to set up the web JARs and we'll
44

45
00:03:46.859 --> 00:03:52.530
replace this at runtime with the
Bootstrap files out of the web JARs. But
45

46
00:03:52.530 --> 00:03:56.790
we'll do that in the next video. First,
let's take a look at what we set up for
46

47
00:03:56.790 --> 00:04:04.560
Bootstrap. Now I did on line 18, we're
doing a div there container-fluid
47

48
00:04:04.560 --> 00:04:09.900
and I'm giving it a little margin 20px
bump off the top because when I was
48

49
00:04:09.900 --> 00:04:16.109
looking at it. Originally this was right
up against the top. So give it a little
49

50
00:04:16.109 --> 00:04:22.019
space there making it look a little bit
nicer. Then the way Bootstrap is working
50

51
00:04:22.019 --> 00:04:29.460
it does a grid layout. So line 19, I
declare a row and then on line 20, I'm
51

52
00:04:29.460 --> 00:04:34.919
saying make the panel give this
content six columns. So it uses a
52

53
00:04:34.919 --> 00:04:40.889
12 column grid. I'm saying make it six and
offset it by three. That's what the
53

54
00:04:40.889 --> 00:04:45.540
second CSS class does there. So it's
gonna offset by three being a 12
54

55
00:04:45.540 --> 00:04:50.669
column layout and so we'll have 3, 6 and
3 so that adds up to 12. So our content
55

56
00:04:50.669 --> 00:04:55.139
will be centered. That's what we want to
do there. Then next, we have the 
56

57
00:04:55.139 --> 00:05:00.870
panel-primary and what this is gonna do is
give us basically the rounded panel. So
57

58
00:05:00.870 --> 00:05:08.150
all the stuff around here. Then we have
the panel-heading saying My Recipes! and
58

59
00:05:08.150 --> 00:05:14.039
that gives us this blue block here
around My Recipes! and the h1 text. And
59

60
00:05:14.039 --> 00:05:20.220
actually we can do just look at my
example that I shamelessly stole this
60

61
00:05:20.220 --> 00:05:24.110
from. We can actually add in a class here
61

62
00:05:30.630 --> 00:05:38.919
called panel-title. And that should make
that look a little bit nicer. Let's
62

63
00:05:38.919 --> 00:05:44.650
refresh that. Yeah, that looks a little
bit nicer. So now we have a panel title
63

64
00:05:44.650 --> 00:05:51.040
so this looks a bit nicer than it did
before. And now the next div
64

65
00:05:51.040 --> 00:05:57.490
there online 26, the panel-body. That is
what sets up this area here everything
65

66
00:05:57.490 --> 00:06:05.889
below the header. And then we want
the class table-responsive and there
66

67
00:06:05.889 --> 00:06:10.150
on line 27 we have another Thymeleaf tag.
We're gonna be utilizing that and
67

68
00:06:10.150 --> 00:06:16.510
we're saying if list not empty. So if we
get an empty list we're not gonna
68

69
00:06:16.510 --> 00:06:20.320
display the table. So if nothing comes
back from the backend, this table does
69

70
00:06:20.320 --> 00:06:26.500
not get displayed. Next there on line
28, we have table and table-hover. So that
70

71
00:06:26.500 --> 00:06:31.780
gives us the styling and what's nice
about the table-hover CSS in Bootstrap,
71

72
00:06:31.780 --> 00:06:36.910
as you can see it gives us this effect. So as we hover over, the rows highlight.
72

73
00:06:36.910 --> 00:06:49.210
So that's a nice aesthetic for your
users. Then we also have table-inverse. So
73

74
00:06:49.210 --> 00:06:59.190
that's what helps the inverse as
we roll over. And let's see here.
74

75
00:07:00.190 --> 00:07:06.210
And I have the table headers.
75

76
00:07:20.730 --> 00:07:27.190
So give table row the ID and
Description there and this is another
76

77
00:07:27.190 --> 00:07:32.680
Thymeleaf tag here. So because we're
leveraging the Natural Templating, I
77

78
00:07:32.680 --> 00:07:39.670
wanna have in items for Tasty
Goodness one, two, and three. Now let's make
78

79
00:07:39.670 --> 00:07:48.310
these a little bit different. So now
we'll get different ID values there and
79

80
00:07:48.310 --> 00:07:53.020
what we're telling the Thymeleaf
templating engine do is to remove
80

81
00:07:53.020 --> 00:07:57.100
these blocks at runtime. So we're saying
I'm putting it in there now for to
81

82
00:07:57.100 --> 00:08:01.840
preserve the Natural Templating because
I wanna see how that table looks. So I
82

83
00:08:01.840 --> 00:08:05.470
wanna get a couple of rows in there so I
can mouse over and see the effects that
83

84
00:08:05.470 --> 00:08:09.700
we're getting. So this is just pure HTML
that we're running right now. And then
84

85
00:08:09.700 --> 00:08:15.640
down here, this is the one that gets
replaced by Thymeleaf. So if we have one
85

86
00:08:15.640 --> 00:08:20.920
recipe or five recipes or 100 recipes, it
will loop through that and create this
86

87
00:08:20.920 --> 00:08:26.230
block for each one. But we can only use
that once to tell it to repeat that. So
87

88
00:08:26.230 --> 00:08:30.520
for the ones that we're doing for our
styling is working with HTML, we're gonna
88

89
00:08:30.520 --> 00:08:34.930
remove those. Alright, let's go ahead
and start this up in Spring Boot and we
89

90
00:08:34.930 --> 00:08:43.060
shall take a look at the difference. So Spring Boot is coming up, and we are up
90

91
00:08:43.060 --> 00:08:49.000
and running on 8080. Let's toggle over
to Chrome. Here's our template, we still have
91

92
00:08:49.000 --> 00:08:54.700
the old up here. Let's do a refresh and
now we can see that we are rendering out
92

93
00:08:54.700 --> 00:08:58.690
of the database and getting our two
items that are displayed with the pretty
93

94
00:08:58.690 --> 00:09:01.830
CSS formatting.
