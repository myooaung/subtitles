WEBVTT
0
1
00:00:04.190 --> 00:00:09.630
Okay, I've gone in and made a small
adjustment to the model that we've been
1

2
00:00:09.630 --> 00:00:14.509
looking at. So we are going to be looking
at one to many and many to one
2

3
00:00:14.509 --> 00:00:21.119
relationships in this video. And what I
did is we have the Recipe object which
3

4
00:00:21.119 --> 00:00:26.400
is a one-to-many relationship to
Ingredient but we want to make this a
4

5
00:00:26.400 --> 00:00:31.800
bi-directional relationship. So we need
to get that mapping back from Ingredient
5

6
00:00:31.800 --> 00:00:38.070
to Recipe and that'll be many-to-one. So
we're going to go through and set this
6

7
00:00:38.070 --> 00:00:43.370
up so the Recipe is going to be the
owner and he will own the relationship
7

8
00:00:43.370 --> 00:00:47.700
but Ingredient, we want to be able to
navigate back to the Recipe from
8

9
00:00:47.700 --> 00:00:51.690
Ingredient in this case. And you can see
there the mapping between the the two
9

10
00:00:51.690 --> 00:00:56.670
entities has been updated where between
Recipe and Ingredient, we have a
10

11
00:00:56.670 --> 00:01:01.140
one-to-many relationship and then
Ingredient has a many to one
11

12
00:01:01.140 --> 00:01:05.280
relationship. So we're going to go in and
configure this now. I'll show you how to
12

13
00:01:05.280 --> 00:01:12.960
set it up inside of IntelliJ. So I've
gone in and I've created the Ingredient
13

14
00:01:12.960 --> 00:01:19.170
object and I have not created anything
further. So we'll step through creating
14

15
00:01:19.170 --> 00:01:26.040
him as an entity. So we're going to use
the Entity annotation and then I have a
15

16
00:01:26.040 --> 00:01:31.280
placeholder in there for UnitOfMeasure
which we'll get to in a future video and
16

17
00:01:31.280 --> 00:01:41.310
we want to add in a property for the
Recipe that he belongs to. So now we have
17

18
00:01:41.310 --> 00:01:45.869
this relationship between the two and we
want to add in the basic getter and
18

19
00:01:45.869 --> 00:01:51.750
setter. I'm going to hold off on that. We
also want to add in a Long property for
19

20
00:01:51.750 --> 00:01:53.869
id.
20

21
00:01:58.990 --> 00:02:05.720
And again we're going to use the
strategy, GenerationType IDENTITY which
21

22
00:02:05.720 --> 00:02:09.290
will get generated from the database. So
now I'm going to go in and add in the
22

23
00:02:09.290 --> 00:02:15.080
getter and setter. So this command in,
getters and setters, highlight all those.
23

24
00:02:15.080 --> 00:02:22.520
So now our Ingredient class is set up and
it's going to be set up as an entity
24

25
00:02:22.520 --> 00:02:31.450
in JPA. So now we want to modify the
Recipe class. So we want to annotate this
25

26
00:02:31.450 --> 00:02:39.940
using OneToMany. Now we want the Recipe
to own this. So now we want to add in a
26

27
00:02:39.940 --> 00:02:49.240
cascade type and it'll persist all
operations. Now we want to do a mappedBy.
27

28
00:02:49.240 --> 00:02:55.280
IntelliJ intellisense would come up
but in this case we want to say the
28

29
00:02:55.280 --> 00:03:01.489
property on the child class. So that's
going to be Recipe. So that defines the
29

30
00:03:01.489 --> 00:03:06.380
relationship from Recipe class and we're
saying that this Recipe will get stored
30

31
00:03:06.380 --> 00:03:12.230
on a property on the child or the
set of ingredients on each object of
31

32
00:03:12.230 --> 00:03:17.900
Ingredient is going to be a property
called recipe. So jump back over here to
32

33
00:03:17.900 --> 00:03:23.810
Chrome. That completes this direction of
the relationship so from Recipe to
33

34
00:03:23.810 --> 00:03:31.130
Ingredient. So we are getting a set
there of ingredients coming back and I'm
34

35
00:03:31.130 --> 00:03:35.420
using set there so I get a unique set of
ingredients. That's my preferred,
35

36
00:03:35.420 --> 00:03:39.860
some people like to use lists and
there's nothing wrong with that but just
36

37
00:03:39.860 --> 00:03:45.700
from experience and something like this,
I do prefer to use a Set.
37

38
00:03:45.700 --> 00:03:51.610
Now we need to set up the inverse side
of the relationship. We're going to use
38

39
00:03:51.610 --> 00:03:58.400
many-to-one and that establishes the
relationship so we do we don't want to
39

40
00:03:58.400 --> 00:04:03.200
do any type of cascade here because
obviously, if we delete an ingredient, we
40

41
00:04:03.200 --> 00:04:09.410
don't want that to cascade up and delete
the recipe. So we want to be able freely
41

42
00:04:09.410 --> 00:04:12.620
delete ingredients that are assigned to recipe but
42

43
00:04:12.620 --> 00:04:16.520
not the other way around. So we
definitely don't to do the cascading
43

44
00:04:16.520 --> 00:04:21.970
here. So that's why it's default
action is none. So just to quickly recap,
44

45
00:04:21.970 --> 00:04:27.470
we defined this recipe, we define this
relation to between a recipe and
45

46
00:04:27.470 --> 00:04:32.600
ingredient and it's a bi-directional
relationship. I mean we can navigate the
46

47
00:04:32.600 --> 00:04:36.890
object graph from either direction. So a
recipe is going to have many ingredients
47

48
00:04:36.890 --> 00:04:44.380
while an ingredient will have just one
recipe and we define the relationships.
48

49
00:04:44.380 --> 00:04:50.210
So if we look at Recipe, we set up a set
property and you'll see down here
49

50
00:04:50.210 --> 00:04:55.060
I did that and getters and setters so
you'll will see that get checked in. And
50

51
00:04:55.060 --> 00:05:01.220
we are using CascadeType of ALL and
saying map by recipe and that is
51

52
00:05:01.220 --> 00:05:08.780
the target property on the Ingredient
class. So if we look over at Ingredient, I
52

53
00:05:08.780 --> 00:05:15.050
have a property called recipe and so
that defines that direction. Now to define
53

54
00:05:15.050 --> 00:05:21.500
the inverse, we are using the ManyToOne
annotation to say that it goes back to a
54

55
00:05:21.500 --> 00:05:27.080
recipe and we are not using any cascade
there because we don't want to have any
55

56
00:05:27.080 --> 00:05:33.640
type of delete operation cascade back to
the parent object which is recipe.
