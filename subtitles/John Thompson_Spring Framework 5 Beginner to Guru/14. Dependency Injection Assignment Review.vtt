WEBVTT
0
1
00:00:04.250 --> 00:00:08.610
Alright now hopefully you checked out
of github and saw the errors. I'm going to
1

2
00:00:08.610 --> 00:00:12.750
jump over to IntelliJ and step you
through the errors step by step and explain
2

3
00:00:12.750 --> 00:00:18.210
what we learned in this module and how
to step through and see the errors and
3

4
00:00:18.210 --> 00:00:22.230
correct the errors and get this
application working and all the
4

5
00:00:22.230 --> 00:00:26.250
dependencies being managed by the Spring
context again. So I'm going to jump over
5

6
00:00:26.250 --> 00:00:30.269
to IntelliJ and step right through this
will get the errors and I'll show you
6

7
00:00:30.269 --> 00:00:35.370
how to fix those. Okay I'm going to go
through step by step here and fix this
7

8
00:00:35.370 --> 00:00:42.360
and let's go through and run it first
and see what happens and it's actually
8

9
00:00:42.360 --> 00:00:45.450
multiple problems here that I left you
with and the first thing that we are
9

10
00:00:45.450 --> 00:00:50.520
getting is a NullPointerException and
it's coming out of the PrimaryGermanGreetingService
10

11
00:00:50.520 --> 00:00:55.050
and you can see that
I've added in the GreetingRepository. I
11

12
00:00:55.050 --> 00:00:59.489
just added it in as a property but I
didn't do anything with it.
12

13
00:00:59.489 --> 00:01:04.729
I didn't add anything for dependency
injection so now what I want to do is
13

14
00:01:04.729 --> 00:01:10.140
constructor base dependency injection.
I'll go in and do that now so command N
14

15
00:01:10.140 --> 00:01:16.080
Constructor and because it's a
straight up GreetingRepository, Spring
15

16
00:01:16.080 --> 00:01:21.990
is going to autowire that for me and
let's go ahead and run it now see what
16

17
00:01:21.990 --> 00:01:28.140
else we get and now we can see that
it's complaining that it can't find it
17

18
00:01:28.140 --> 00:01:34.320
so let's look at the GreetingRepository
so I've got the interface and different
18

19
00:01:34.320 --> 00:01:38.640
methods of the interface. Take a look at
that everything looks okay with the class
19

20
00:01:38.640 --> 00:01:42.750
except there's no annotation at the top
of it and I'm going to throw you a
20

21
00:01:42.750 --> 00:01:48.000
curveball here and we've been using
service but I'm going to throw this in
21

22
00:01:48.000 --> 00:01:53.790
as a Component and actually if you use
component, service, controller or
22

23
00:01:53.790 --> 00:01:58.799
repository, any of those will cause the
Spring context to bring it in as a bean
23

24
00:01:58.799 --> 00:02:03.689
so we're going to get a component scan
on this package because of where the
24

25
00:02:03.689 --> 00:02:07.740
Spring boot application is and it will
get brought into the context now if I
25

26
00:02:07.740 --> 00:02:13.230
start this up, the German implementation
should be happy and
26

27
00:02:13.230 --> 00:02:18.360
everything worked and I did not expect
that so let's take a quick look. That was
27

28
00:02:18.360 --> 00:02:22.740
actually my mistake because we only have
the German implementation coming in so if
28

29
00:02:22.740 --> 00:02:33.170
I come over here and change this to es
we should see the same error again so I
29

30
00:02:33.170 --> 00:02:37.590
didn't implement it in the other ones as
well so we're going to need to do the
30

31
00:02:37.590 --> 00:02:44.610
same thing there. I'm going to do
Constructor and we'll also need to do
31

32
00:02:44.610 --> 00:02:52.620
the Primary here. Now let's go ahead and
run this if you get that output
32

33
00:02:52.620 --> 00:03:03.600
properly so that works there and let's
double check the other Profiles and
33

34
00:03:03.600 --> 00:03:12.660
let's make sure that this works without
any Profile active. So we can see that
34

35
00:03:12.660 --> 00:03:19.260
our with a Profile of English Spanish or
German or no Profile at all everything
35

36
00:03:19.260 --> 00:03:25.920
is working and just to recap what we
changed there, one problem was we didn't
36

37
00:03:25.920 --> 00:03:30.390
have this annotated as a Spring
component or Spring service so it wasn't
37

38
00:03:30.390 --> 00:03:34.560
getting brought into the context as a
bean and because we didn't specify any
38

39
00:03:34.560 --> 00:03:38.340
type of profile on it this will get
brought in regardless of what the active
39

40
00:03:38.340 --> 00:03:45.269
Profile is and originally when I ran it
and did not see the problem that was
40

41
00:03:45.269 --> 00:03:49.560
because the Profile wasn't active so we
only had the German Profile active you
41

42
00:03:49.560 --> 00:03:54.090
can see how Spring completely ignored
the lack of the constructor on the other
42

43
00:03:54.090 --> 00:03:58.380
beans because it wasn't trying to wire
those up. Once I changed the Profile we
43

44
00:03:58.380 --> 00:04:03.660
saw how Spring saw those beans and
complained about not being able to wire
44

45
00:04:03.660 --> 00:04:07.110
them up because we're missing the
constructor on them so now that we have
45

46
00:04:07.110 --> 00:04:12.090
the constructor, Spring does autowiring
by constructor on these three
46

47
00:04:12.090 --> 00:04:15.900
implementations and wires in that little
greeting repository and it works
47

48
00:04:15.900 --> 00:04:18.950
normally as expected.
