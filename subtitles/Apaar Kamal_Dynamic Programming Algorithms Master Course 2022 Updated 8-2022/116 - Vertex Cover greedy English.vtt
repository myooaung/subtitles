WEBVTT

00:01.030 --> 00:01.290
One.

00:01.470 --> 00:04.400
Let's see the vortex of a problem from sponge.

00:05.130 --> 00:07.590
This is my favorite problem from BP countries.

00:08.400 --> 00:09.480
Let's understand this.

00:10.530 --> 00:17.400
You were given in Virgin America to try and write a program to find a verdict set of minimum size in

00:17.400 --> 00:23.400
this tree, such that each edge has and at least one offered end points in their check.

00:23.700 --> 00:28.650
It is called a vertex score, but there are other definitions for vertex cover online.

00:28.890 --> 00:30.930
But this is also fine.

00:31.680 --> 00:38.850
What about is this a verdict over saying that if I were to be, I want to pick up some selected notes

00:38.850 --> 00:39.660
from the tree.

00:39.660 --> 00:47.970
I have to become some vertex from the tree such that all the edges have their end points in one of those

00:47.970 --> 00:48.690
nodes in the set.

00:49.020 --> 00:52.050
Basically all the it basically covering.

00:53.150 --> 00:59.120
I'm vertices, but actually like indirectly, the edges are being fulfilled.

00:59.150 --> 01:01.700
The conditions on the edges are being satisfied due.

01:03.510 --> 01:05.310
Let's see this and then we'll see example.

01:05.310 --> 01:08.700
Then we'll see the greedy approach, then we'll move on to the DB approach.

01:09.420 --> 01:10.470
The first line is this.

01:10.670 --> 01:12.060
Okay, it's one in five.

01:12.660 --> 01:14.760
Therefore, it has to be a good solution.

01:15.120 --> 01:15.510
And.

01:16.600 --> 01:18.700
Then we have n minus one edges of the tree.

01:18.700 --> 01:22.560
So here we have the first example which is 312138.

01:22.570 --> 01:23.470
So let me quickly.

01:24.500 --> 01:25.250
And I did.

01:26.030 --> 01:27.020
So it is one to.

01:27.970 --> 01:28.690
And one tree.

01:29.380 --> 01:36.850
In this case, what I want is I want some subset of these vertices such that I pick up those subset

01:36.850 --> 01:39.800
and all the edges are up there.

01:39.940 --> 01:40.490
It is very tight.

01:40.810 --> 01:47.020
So in this case, if I pick up one eight, so if I pick up one and two myself so that I can say, yes,

01:47.020 --> 01:51.100
this edge is satisfied because it has its one and in one.

01:51.460 --> 01:55.690
And this this has the second net is also satisfied because it also has this.

01:56.750 --> 01:58.070
One end and one right.

01:58.500 --> 02:05.480
So what I'll do is if I'm picking up some particular what is what I look like, remove its corresponding

02:05.480 --> 02:07.190
I just let me get in the sand.

02:07.190 --> 02:07.520
Yes.

02:07.760 --> 02:10.370
That the answer is being made right.

02:10.910 --> 02:14.360
There was a second, there could have been other cases that is.

02:14.600 --> 02:19.010
But if I pick two that means let's say if I pick two, that means this edge will go.

02:19.430 --> 02:20.900
That means I have to decide this edge.

02:20.900 --> 02:22.100
So I'm just excluding it.

02:22.490 --> 02:24.770
And now I can pick one or three, any one of them.

02:25.130 --> 02:33.620
In this case, if I pick two and let's say I pick three, then I'll have the vertex over equals to two.

02:33.980 --> 02:35.900
That means there are two nodes in my set.

02:36.500 --> 02:40.220
But what I want is I want the vertex cover to be.

02:41.220 --> 02:43.620
Minimum of minimum size industry.

02:44.670 --> 02:47.040
So can we think of greedy here?

02:47.280 --> 02:49.300
Okay, let's move to example to now.

02:49.350 --> 02:53.100
The second example is one, two and two, three, one, two.

02:54.380 --> 02:55.050
And three.

02:55.730 --> 02:57.230
So here you can see if I do.

02:57.290 --> 03:00.950
So basically, these both are the same structures.

03:01.670 --> 03:07.640
So if I just reorder the nodes, basically, if I say two is equal to one and one is equal to this gives

03:07.640 --> 03:08.630
me this second structure.

03:09.740 --> 03:19.490
But always remember the first important lesson of this entries that no matter where you start, no matter

03:19.490 --> 03:24.010
whatever number you give it, no matter that.

03:25.060 --> 03:25.600
Whichever.

03:25.660 --> 03:27.010
Notice the root of the tree.

03:27.640 --> 03:30.220
We all know what the root of the tree where I'm making vanilla.

03:30.220 --> 03:31.030
The root of the tree.

03:31.360 --> 03:32.140
But here.

03:32.470 --> 03:33.010
Let's see.

03:33.880 --> 03:34.690
Here, I'll make.

03:36.380 --> 03:37.540
Who was the root of the tree.

03:37.550 --> 03:40.240
So hit both of these trees the same, if you see.

03:40.250 --> 03:40.520
Right.

03:40.670 --> 03:42.440
I can also make tree as the root of the tree.

03:43.190 --> 03:43.540
Correct.

03:44.890 --> 03:48.670
All these three diagrams are of the same tree, right?

03:48.810 --> 03:54.790
So if this structure of the tree is not changing, just some reordering is happening or, you know,

03:54.790 --> 03:57.070
the numbering is happening, renaming is happening.

03:57.310 --> 04:02.260
It doesn't mean that the answer would change because the structure of the tree remains the same.

04:02.260 --> 04:02.530
Right?

04:02.800 --> 04:07.670
If I replace its number by saying three, two and one eight.

04:07.810 --> 04:11.830
Of course we can see now that it's a different thing, but this structure is same.

04:12.550 --> 04:17.620
So if the structures are same, no matter reordering, remembering or renaming is happening, the answer

04:17.620 --> 04:18.610
will never change.

04:19.480 --> 04:24.550
No matter which one would make the root of the tree, the answer should not change because the structure

04:24.550 --> 04:25.210
remains the same.

04:25.630 --> 04:27.640
Eric The vertex cover will be the same.

04:28.680 --> 04:31.050
Let's try to apply some gritty approaches here.

04:31.380 --> 04:38.400
If I wanted to select some minimum number of vertex vertex such that all the edges get fulfilled, then

04:38.400 --> 04:39.000
what can I do?

04:39.000 --> 04:42.510
Is can this be a valid really approach if I try to.

04:43.740 --> 04:44.190
Pickup.

04:44.640 --> 04:47.610
Let's say I pick some max.

04:49.170 --> 04:52.020
Okay, Max, we cannot.

04:52.020 --> 04:54.090
With maximum degree, we cannot.

04:55.050 --> 04:57.210
With maximum degree.

04:58.000 --> 04:59.380
Max Allegri.

05:00.780 --> 05:01.720
Eight related.

05:03.280 --> 05:05.860
One, two, three, four and five.

05:06.550 --> 05:07.600
And it's a this is a tree.

05:07.600 --> 05:13.320
And I'm picking up just one node, which is one that means this edge is dun dun dun dun.

05:13.330 --> 05:13.600
Right.

05:14.170 --> 05:15.070
Why did I pick one?

05:15.070 --> 05:16.720
Because one had the maximum degree.

05:16.720 --> 05:18.070
So we all know what is a degree.

05:18.400 --> 05:19.150
Degrees added.

05:20.470 --> 05:21.580
There are two types of degrees.

05:22.090 --> 05:25.510
So when we talk about undirected graphs, then we just say a degree.

05:25.510 --> 05:29.800
That means how many edges are connected to that particular vertex.

05:30.670 --> 05:34.420
But when I talk about dedicated graphs and there are directed.

05:36.220 --> 05:38.790
Just then we say about in degrees and degrees.

05:39.220 --> 05:45.100
So it's very clear that in degrees how many edges are coming in and how degrees how many edges are going

05:45.180 --> 05:45.490
right.

05:45.820 --> 05:46.090
So.

05:47.610 --> 05:51.420
Here I am trying to apply a greedy approach that has become the norm with the maximum degree.

05:51.810 --> 05:55.770
In this case, also, it will get fulfilled because I still pick up this note.

05:55.770 --> 05:57.750
That means what did I do that satisfied?

05:57.750 --> 06:01.550
That means the degree of this and this has been reduced, I think.

06:02.620 --> 06:03.520
And the second is.

06:05.310 --> 06:09.390
This one again, I'm thinking of one because it has a maximum target incidence rate.

06:09.590 --> 06:10.890
But will it always work?

06:11.980 --> 06:15.010
Well, picking up Deano would be the maximum degree.

06:15.010 --> 06:16.780
Always give me the right answer.

06:17.050 --> 06:17.710
Think about it.

06:19.370 --> 06:20.870
Let's make a case where it won't.

06:22.050 --> 06:25.460
Let's say I have one, two, three, four.

06:26.350 --> 06:26.830
And.

06:28.150 --> 06:29.710
Five six.

06:30.550 --> 06:30.970
Seven.

06:31.960 --> 06:32.150
Well.

06:32.680 --> 06:36.580
So here you can see that if I were to mix, what's the degree of one?

06:36.580 --> 06:41.020
It's three parts, a degree of two to do two and more to the degree of five, six, eight, one.

06:41.020 --> 06:42.640
It is 1113.

06:43.840 --> 06:45.040
Nor to the maximum degrees.

06:45.250 --> 06:45.550
But.

06:47.610 --> 06:51.420
But if I pick this note, that means de-register.

06:51.540 --> 06:53.010
Then it means I'm picking up.

06:53.010 --> 06:53.310
Fine.

06:53.760 --> 06:54.540
Now I can pick.

06:54.870 --> 06:58.410
Now you can see the degree of the notes change.

06:58.980 --> 07:00.210
It maintains them.

07:01.550 --> 07:01.830
Right.

07:02.120 --> 07:05.220
And now, if I believed in order, the maximum degree can be any one of them.

07:05.240 --> 07:05.780
So let's.

07:05.780 --> 07:08.480
Let's see if I pick two, three and four.

07:08.720 --> 07:10.460
Or I can also pick five.

07:12.050 --> 07:13.850
Six and seven.

07:14.360 --> 07:14.690
Eight.

07:15.110 --> 07:17.600
If I pick a five, six and seven, all of them will be.

07:18.720 --> 07:19.890
On the edges would be covered.

07:20.520 --> 07:20.870
Correct.

07:21.240 --> 07:23.340
So all of them will have no zero degrees.

07:23.340 --> 07:24.690
And I don't want to pick anymore.

07:24.960 --> 07:26.270
Not over this.

07:27.600 --> 07:29.130
But is this the answer?

07:29.160 --> 07:30.720
Is this the minimum number of.

07:32.210 --> 07:33.980
What is that I can pick up?

07:34.850 --> 07:38.360
Because here I can see the number is four, but we can do better.

07:38.750 --> 07:39.680
How can we do better?

07:40.290 --> 07:43.130
But what if we just pick two, three, four?

07:43.130 --> 07:44.190
Only eight.

07:44.240 --> 07:46.190
Let's say if I just pick two, three and four.

07:46.910 --> 07:47.690
So what will happen?

07:47.870 --> 07:49.700
All these ages will be satisfied.

07:49.700 --> 07:54.050
And these edges will also be satisfied in just picking up two, three and four.

07:54.440 --> 08:00.740
Now we can see the size is just three eight, but this is the minimum or next couple for this particular.

08:03.180 --> 08:06.240
I remember getting the point, but it won't always work.

08:06.270 --> 08:08.430
I have shown you a very small, simple example.

08:08.550 --> 08:12.150
Just imagine if history had done this to the power of five notes.

08:12.720 --> 08:13.590
It would never work.

08:13.860 --> 08:14.150
Eight.

08:15.840 --> 08:16.140
Yeah.

08:16.650 --> 08:19.300
So this was one counter-example for O'Grady.

08:19.320 --> 08:24.510
And in the next section, what we'll do is we'll discuss some very basics of Debian groups, also the

08:24.540 --> 08:31.860
very basics of Debian trees and we will make some, you know, rules and we will always follow those

08:31.860 --> 08:34.980
rules and figure out the answers will.
