WEBVTT

00:02.540 --> 00:07.370
Everyone in this lecture, we're going to discuss the slight modification to our previous problem.

00:07.370 --> 00:08.660
That is then Gwynn's problem.

00:09.290 --> 00:13.400
Sometimes you might be asked again, sort of blending one configuration.

00:13.790 --> 00:18.920
You're telling me the count of configurations, okay, in how many ways you can solve this problem?

00:19.820 --> 00:25.850
What we did in the previous call was we were exploring the third space.

00:26.150 --> 00:33.260
Okay, on each node in this such space represents a state of the grid in which a certain greens are

00:33.260 --> 00:33.740
placed.

00:34.340 --> 00:41.600
The what we did, we said okay, once we reached a valid state of the grid which satisfies the given

00:41.600 --> 00:45.860
constraints these are looking will return true and we will not make any further.

00:46.070 --> 00:47.060
So again, this is what we did.

00:47.480 --> 00:55.340
But if you need to count all possible configurations, we don't need to stop whether the configuration

00:55.340 --> 00:56.180
was found or not.

00:56.180 --> 00:56.390
Okay.

00:56.390 --> 00:58.760
Basically, we need to make some changes in this part.

00:59.800 --> 01:00.130
Okay.

01:00.520 --> 01:05.320
Because this is the part that is stopping the further calls.

01:05.320 --> 01:05.590
Okay.

01:06.040 --> 01:08.120
This is stopping the for the recursive calls.

01:08.140 --> 01:12.520
But if you want to find out all possible configurations, then you should not stop.

01:12.700 --> 01:13.000
Okay.

01:13.240 --> 01:15.850
So what we will do will make some changes in the quote I will tell you.

01:16.240 --> 01:19.750
So firstly, we really make it as maybe eight letters.

01:19.750 --> 01:21.660
We want to return the number of these.

01:22.240 --> 01:29.170
Maybe the return type is will change will change it to end and whenever the base cases hit.

01:29.240 --> 01:33.220
Okay, let let me just comment out Brentwood.

01:33.550 --> 01:34.210
So it's okay.

01:34.270 --> 01:40.250
Let me get done one, because there is one way in which we could add this base case.

01:40.270 --> 01:40.960
Okay, this is here.

01:40.960 --> 01:41.560
Don't leave.

01:41.560 --> 01:46.210
The configuration was successful or otherwise we could not reach a golden.

01:46.240 --> 01:46.510
Okay.

01:47.260 --> 01:50.560
In the recursive case, what we are going to do, we can still do the same thing.

01:50.560 --> 01:53.140
We'll try to place the Queen in every column.

01:53.650 --> 01:56.380
We will try to check whether the position is safe or not.

01:56.710 --> 02:02.740
If it is, if we will place it on here, we don't need to check whether the remaining board was ordered

02:02.740 --> 02:03.130
or not.

02:03.130 --> 02:03.370
Okay.

02:04.210 --> 02:05.020
So what are you going to do?

02:05.500 --> 02:08.410
You can assume that your answer is currently zero.

02:09.190 --> 02:14.050
You're starting from zero zero and the answer to note the number of is, okay, maybe the number of

02:14.050 --> 02:16.360
ways to solve this problem is zero.

02:16.870 --> 02:18.490
And what do you do?

02:18.550 --> 02:24.730
You basically ask the remaining the next row in how many ways you can solve this problem.

02:24.790 --> 02:25.090
Okay.

02:26.110 --> 02:28.900
So basically, you have something like this.

02:29.990 --> 02:32.720
You assume that for the current role?

02:33.940 --> 02:36.310
I'm assuming that my answer is zero.

02:36.910 --> 02:44.260
And you ask this remaining thread in how in how many ways you can make up the remaining configuration.

02:44.500 --> 02:46.930
If I fix a queen at this particular point.

02:47.320 --> 02:47.630
Okay.

02:47.980 --> 02:49.150
This is what we are doing.

02:49.780 --> 02:56.260
We are saying, okay, let us assume that the answer to the number of is right now is zero.

02:56.320 --> 03:00.900
But tell me how many ways you can fill this remaining grade under?

03:01.000 --> 03:02.600
I will add to the number of these.

03:02.620 --> 03:02.860
Okay.

03:02.860 --> 03:07.720
So I will say we actually don't need this one.

03:07.870 --> 03:09.010
We don't need this.

03:09.010 --> 03:13.930
But it's okay with plus equals to solve green.

03:14.200 --> 03:14.470
Okay.

03:15.250 --> 03:17.170
Now, this is an important step.

03:18.210 --> 03:20.260
So what is going to happen when you place a queen?

03:20.280 --> 03:27.040
It may be the remaining bold God wizard or maybe the remaining world guide wizard, and we will return

03:27.040 --> 03:27.690
to zero here.

03:28.110 --> 03:32.540
But maybe when you place a queen at this particular index, let's say.

03:33.750 --> 03:39.180
You place a in at this particular index that it may be the remaining world returns one.

03:39.510 --> 03:41.220
So you will add one to the mix.

03:41.610 --> 03:43.800
Maybe the new trailblazer queen at this index.

03:44.160 --> 03:46.140
The remaining board again returns a one.

03:46.500 --> 03:47.490
Maybe you are one here.

03:47.910 --> 03:50.310
Maybe you again play the queen in the remaining world.

03:50.310 --> 03:51.270
Return to zero here.

03:51.330 --> 03:53.000
Okay, so maybe you will get okay.

03:53.030 --> 04:01.620
There are two ways in which I can solve for this part of the board by putting Queen's at this location

04:01.640 --> 04:01.920
looking.

04:02.610 --> 04:05.340
And it is also possible for some bigger, bold.

04:06.400 --> 04:10.840
Maybe the remaining whatevers in this subcritical move alternate base.

04:11.320 --> 04:18.610
We will add it to the answer that you are forming for this particular group, so each row will form

04:18.610 --> 04:19.510
its own answer.

04:19.510 --> 04:19.700
Okay.

04:19.720 --> 04:21.790
Each row is going to form x unanswered.

04:22.150 --> 04:25.690
And when you're going to total up, you're going to total up the answers.

04:26.080 --> 04:31.960
But all the columns for a given row, we are going to add them up and we are going to return back to

04:31.960 --> 04:32.320
the mean.

04:32.450 --> 04:33.820
Okay, this is what we are going to do.

04:35.170 --> 04:38.050
So this is exactly what we are going to do here.

04:39.200 --> 04:40.500
So we have already made the changes.

04:40.510 --> 04:40.740
Okay.

04:41.080 --> 04:44.290
So assume that we don't know how many ways we can solve the problem.

04:44.290 --> 04:45.580
We assumed over until the zero.

04:45.910 --> 04:51.010
But every column, whatever the number of is, we computed using the recursive call.

04:52.010 --> 04:54.410
And every time you hit a base case, you're going to get a one.

04:54.800 --> 05:00.560
Now, why this will work is because, let's say from this board, you make multiple calls.

05:01.020 --> 05:01.020
Okay.

05:01.550 --> 05:05.030
If you have four columns, we're going to make four calls maybe one time.

05:05.030 --> 05:07.100
Green is yet another name or desir in their name.

05:07.450 --> 05:07.990
In their name.

05:08.000 --> 05:14.390
Or does it oc the whatever these words are going to read, done, maybe X, Y, Z and w, you're going

05:14.390 --> 05:20.030
to add them up and this will actually go recursively and this time is zero.

05:20.030 --> 05:24.060
This time I S1, this time I S2 and this will happen till then.

05:24.080 --> 05:24.350
Okay.

05:24.530 --> 05:30.740
So in the some of these calls will lead to the base cases and those base case, some base cases will

05:30.740 --> 05:32.450
return one and some.

05:35.120 --> 05:38.750
Some will not lead to basic -- calls will not lead to basis.

05:39.110 --> 05:41.270
And those calls may be the number of it is zero.

05:41.270 --> 05:42.770
And you're dining with as zero.

05:43.070 --> 05:45.080
When some calls, this answer might be zero.

05:45.480 --> 05:45.770
Okay.

05:46.070 --> 05:52.910
So the valid base case is older than one and then you are actually summing up these ones and here you

05:52.910 --> 05:55.550
will get a final answer, eight or nine or whatever it is.

06:00.450 --> 06:00.800
Okay.

06:00.960 --> 06:04.200
So maybe we should try to run this code.

06:05.730 --> 06:09.450
We should give change this output code.

06:09.930 --> 06:13.380
The number of ways is to solve the problem as this.

06:14.280 --> 06:16.050
And here what we are doing.

06:16.840 --> 06:18.810
Yeah, we are returning an integer.

06:19.500 --> 06:22.260
So let's render code for an equal to four.

06:23.660 --> 06:24.310
I knew MTV.

06:24.350 --> 06:25.670
We are actually doing this.

06:26.060 --> 06:27.050
And I will tell you what.

06:27.050 --> 06:28.040
I border those veins.

06:28.040 --> 06:28.310
Okay?

06:28.370 --> 06:29.690
I will tell you what are those vs.

06:30.110 --> 06:33.350
Let us run for an equal to eight for this, Don.

06:33.370 --> 06:34.400
There should be 92.

06:34.520 --> 06:35.150
So let's see.

06:35.510 --> 06:37.450
Yes, we are getting the right answer.

06:37.460 --> 06:37.730
Okay.

06:38.840 --> 06:42.770
So let me go back here and let me tell you why it doesn't.

06:42.770 --> 06:46.620
That is to of how this court is working.

06:46.640 --> 06:46.940
Okay.

06:47.570 --> 06:48.110
So.

06:49.260 --> 06:51.990
Right now we are now discussing.

06:51.990 --> 06:53.640
But in all config.

06:54.330 --> 06:55.140
All config.

06:56.230 --> 07:04.330
So the work we have done till this particular point in the explanation video, I'm going to just start

07:04.510 --> 07:05.560
on the top of that.

07:05.680 --> 07:06.040
Okay.

07:07.400 --> 07:10.610
What we discussed was time we found this particular solution.

07:10.630 --> 07:15.950
Okay, so first time in this particular role, we placed a queen at this location.

07:16.370 --> 07:20.760
But for this queen, we got the number and the number of days as zero.

07:20.780 --> 07:27.980
Okay, so let's assume we already got an entourage of zero because no configuration was possible for

07:27.980 --> 07:30.110
next time we placed the queen here.

07:30.530 --> 07:30.860
Okay.

07:31.250 --> 07:32.690
And we made a call on this rule.

07:33.260 --> 07:35.930
And for this rule, we are already on the last column.

07:36.440 --> 07:38.240
This column is going to done.

07:39.140 --> 07:41.990
It is going to be like this 000 plus one.

07:42.380 --> 07:45.120
You could only find out one way when you place the queen here.

07:45.140 --> 07:46.810
Okay, so it does.

07:46.820 --> 07:49.280
We actually want to return one to the previous rule.

07:49.880 --> 07:51.770
Now what is going to happen?

07:53.160 --> 07:55.330
So this was the first solution that we found found out.

07:55.350 --> 07:58.200
Now, we're not going to stop after finding this particular solution.

07:58.230 --> 08:03.360
What we're going to be doing to say, okay, already we are done with the solution.

08:03.690 --> 08:04.780
Let us backtrack.

08:04.800 --> 08:09.060
Let us remove this screen from here and let us try to place a screen here.

08:09.450 --> 08:09.780
Okay.

08:10.080 --> 08:12.720
So here you can place a screen that means something is wrong.

08:13.110 --> 08:14.740
It's not a valid state.

08:14.760 --> 08:15.630
We will go back.

08:16.830 --> 08:25.050
So this will actually be done a0 and v we are distro now and we say, okay, let us try to change the

08:25.050 --> 08:27.180
location of this particular queen.

08:27.690 --> 08:30.630
So this we have already tried can replace here.

08:30.780 --> 08:33.840
The answer is no can replace here.

08:33.840 --> 08:35.700
Done that is no can replace her done.

08:35.700 --> 08:42.100
Traditional will go back and we will try to remove this queen on Gandhi.

08:42.450 --> 08:48.540
We have already tried this one can replace here nowadays it is we can't do anything else here.

08:48.890 --> 08:52.440
So what we will do will again go back and we'll try a new configuration.

08:52.440 --> 08:52.710
Okay.

08:52.710 --> 08:53.610
So we will try.

08:55.120 --> 09:02.320
To place a green insert of although this was a successful configuration, we are we have already tried.

09:02.320 --> 09:06.190
We are going to remove it and we are going to start afresh.

09:06.760 --> 09:06.960
Yep.

09:07.360 --> 09:13.120
So I should have removed these crosses and we are trying out this location.

09:14.110 --> 09:18.100
If we place a green here, can we do something done that is can we place ahead?

09:18.100 --> 09:18.460
Yes.

09:19.000 --> 09:21.550
Let's go to the next stroke and we do something.

09:23.050 --> 09:24.010
Hernandez.

09:24.010 --> 09:24.340
Yes.

09:24.940 --> 09:27.130
Let's go to the next rook and replace the queen here.

09:27.130 --> 09:27.580
Done today?

09:27.610 --> 09:30.460
Yes, we found out another configuration.

09:30.490 --> 09:34.660
Okay, so here it is going to make a call on the base case because it's going to return.

09:34.660 --> 09:41.860
One way for this is going to be zero plus one less if you try to place ahead.

09:41.860 --> 09:43.570
It does not allow your trailblazer.

09:43.580 --> 09:44.320
It is not allowed.

09:44.620 --> 09:46.000
So it's going to be zero zero.

09:46.150 --> 09:46.450
Okay.

09:46.780 --> 09:52.420
So it is going to tell the previous row there is one way that this row would have been told.

09:52.450 --> 09:52.810
Okay.

09:53.860 --> 09:55.270
This row again was all in one way.

09:55.690 --> 10:00.580
This will tell us 000 less for this location.

10:00.580 --> 10:03.850
We have 12000 plus one.

10:04.120 --> 10:06.190
So this will tell one to the this call.

10:06.490 --> 10:11.560
And now this row will again try to place a queen here, which is not allowed here.

10:11.600 --> 10:12.860
It is not allowed here.

10:12.860 --> 10:13.590
It is not allowed to.

10:13.600 --> 10:17.350
It will be again zero zero plus one again when you're done, another one hit.

10:17.860 --> 10:20.890
So it would be like one zero plus, one plus, one plus.

10:21.370 --> 10:26.560
Now this row is going to try to play the queen hit and do the work, but it is a symmetrical case.

10:27.430 --> 10:28.300
Again, going to be zero.

10:28.300 --> 10:29.980
So you are going to get actually two ways.

10:30.970 --> 10:31.810
So effectively.

10:32.590 --> 10:38.290
The two ways that we are getting they are mirror images of each other.

10:38.290 --> 10:38.580
Okay.

10:39.010 --> 10:41.140
You will see the configuration as.

10:42.770 --> 10:43.760
Mirrored off each other.

10:43.820 --> 10:49.640
So I will just print this board for all the configurations by calling this method now, and I will show

10:49.640 --> 10:50.300
you the answer.

10:50.750 --> 10:54.020
Now, I took these two configurations that actually seem.

10:55.570 --> 11:02.890
Maybe we should call this Soylent Green and then try to run it.

11:03.520 --> 11:09.340
If you look carefully that these two configurations are actually identical.

11:09.580 --> 11:11.240
They are mirror images of each other.

11:11.390 --> 11:11.680
Okay.

11:12.940 --> 11:14.200
These are these two are mirrored.

11:14.650 --> 11:14.950
Right.

11:15.850 --> 11:17.830
So that's why we're getting these two ways.

11:18.220 --> 11:20.500
So I hope you really understood this problem.

11:20.590 --> 11:23.350
So in every regression problem, you need to see what to be.

11:24.590 --> 11:26.210
And how do they look?

11:26.480 --> 11:35.240
So here what we did is we made this logic that for every role that is being done, someone said the

11:35.240 --> 11:40.260
total number of days would be the sum of each column.

11:40.290 --> 11:44.540
Let's add this has as one this as as doing this as a study that says that's four.

11:45.110 --> 11:48.260
So the answer for row as one as two as three.

11:48.260 --> 11:51.710
As for rule, I would be sum of as one as two.

11:51.710 --> 11:59.750
A three has four, which in turn depends upon the number of ways returned by the remaining problem by

12:00.020 --> 12:03.090
placing the Queen at the date column.

12:03.190 --> 12:05.160
Okay, that's what we are doing.

12:05.290 --> 12:05.450
Okay.

12:05.840 --> 12:10.550
So I hope you really understood these two variations as well.

12:10.970 --> 12:16.990
How to count all possible configurations and how to present all possible configurations.

12:17.000 --> 12:19.910
Okay, so this is something.

12:21.900 --> 12:23.410
I relearned, Buddy.

12:23.730 --> 12:26.850
Now I have a very large number.

12:26.880 --> 12:32.630
This kind of record will not work because the complexity of this code is going to be exponential.

12:32.850 --> 12:38.170
You can see it is going to take a lot of time and we are going to get that really kind of thing.

12:38.230 --> 12:38.520
Okay.

12:39.420 --> 12:44.190
So it's not going to end, but for a small value, we can actually run discord.

12:44.190 --> 12:44.460
Okay.

12:45.790 --> 12:51.940
So you can see we're getting down to 4 to 8 cross aid grade and there are 92 such combinations which

12:51.940 --> 12:52.540
are possible.

12:53.350 --> 12:56.040
So one last thing was the complexity.

12:56.050 --> 12:58.410
How what is the complexity of this code look?

12:58.840 --> 13:00.490
Any guesses you want to make?

13:01.420 --> 13:03.580
So what we're doing for every arrow.

13:06.030 --> 13:06.660
What we are doing.

13:06.660 --> 13:07.890
We are picking one position.

13:07.900 --> 13:08.190
Okay.

13:08.490 --> 13:11.220
So we are picking one position and one base.

13:12.410 --> 13:15.470
And for each of these positions we are picking.

13:19.590 --> 13:23.900
And even position from hit and run position from hit and run position from it.

13:23.910 --> 13:27.720
So this is nothing but end to end.

13:27.840 --> 13:28.770
End to end.

13:30.610 --> 13:33.130
How many times we have Andrew's end times.

13:33.430 --> 13:33.790
Okay.

13:34.720 --> 13:41.110
This is Andrew's to devouring, which is a very large exponential complexity.

13:41.140 --> 13:44.830
Hence, this code will not work for larger values of end.

13:45.390 --> 13:50.650
And we can't actually solve for the larger values of an object in a limited thing.

13:52.840 --> 13:58.810
One small thing that you may you might be asked is, is there any tighter bound on the complexity?

13:59.260 --> 14:06.700
The one thing that we can think of is once you have placed a green in this particular role, you know

14:06.700 --> 14:09.520
that you will never place a green in this column again.

14:10.090 --> 14:18.580
So this, this, this, you can skip in like order one time and maybe you are trying the remaining and

14:18.580 --> 14:19.600
minus one combination.

14:19.630 --> 14:19.840
Okay.

14:20.140 --> 14:25.930
So if you have end with here for the next row, you have n minus one ways to pick the green for the

14:25.930 --> 14:27.250
next you have n minus two.

14:27.280 --> 14:27.600
Okay.

14:28.030 --> 14:35.020
So in some sense it can, but it allows and into n minus one, into n minus two, into into one.

14:35.590 --> 14:40.990
So you can also see that order of in Victoria, which is also an exponential complexity.

14:41.920 --> 14:46.750
This is slightly lighter dieterbohn then order of entry to the barbarian.

14:46.750 --> 14:46.990
Okay.

14:47.440 --> 14:48.640
So this is also fine.

14:48.670 --> 14:54.340
You can choose this as an option if you get a MCU kind of equation as well.

14:54.790 --> 14:56.330
So that's all for this lecture.

14:56.350 --> 14:56.830
Thank you.
