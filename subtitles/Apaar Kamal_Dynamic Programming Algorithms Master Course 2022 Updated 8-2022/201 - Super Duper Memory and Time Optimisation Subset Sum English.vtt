WEBVTT

00:00.750 --> 00:03.870
So we have seen for this episode some problem.

00:03.870 --> 00:06.420
We started with the complexity of.

00:08.530 --> 00:09.130
And GROSS.

00:10.520 --> 00:10.790
Some.

00:11.600 --> 00:18.650
And then we later optimized the to to grow some boats and then later optimize into one cross sum in

00:18.650 --> 00:25.400
only one row and further optimizing as as we know that a bull value is a one byte storage.

00:25.520 --> 00:26.600
That means a bit.

00:28.050 --> 00:31.530
Eight over two the of unpaid storage in which.

00:33.490 --> 00:40.380
Then why don't we do better to structure its image for values of what is called beachhead?

00:41.500 --> 00:44.620
So it is only one word for a particular value.

00:45.000 --> 00:47.710
It is eight times much optimized.

00:48.100 --> 00:51.850
What we do is, instead of an array of billion, what we will have will have a bit set.

00:52.870 --> 00:54.060
Of Homeland.

00:54.730 --> 00:59.890
If you're not familiar with it, you can get familiar with it because it is very easy to restrict it

00:59.920 --> 01:00.670
in C++.

01:01.120 --> 01:02.470
It's an inbuilt data structure.

01:04.180 --> 01:04.440
Right.

01:04.890 --> 01:06.130
So, yeah.

01:06.460 --> 01:09.640
What I'll do is I'll simply call it.

01:10.210 --> 01:10.420
Yeah.

01:10.540 --> 01:11.890
So what is Battelle doing here?

01:12.340 --> 01:15.280
What will be to do with a video, but for a subset, some problem.

01:17.690 --> 01:21.650
This 10000 and all these values can be stored.

01:21.650 --> 01:24.470
Insider Richard and then.

01:26.300 --> 01:33.080
By, you know, making the another by making the second rule, we can use the bits it is going to live

01:33.320 --> 01:40.820
the better than the thought of it and will achieve the big ticket items because that's what we need,

01:40.820 --> 01:41.900
the connections that we need.

01:42.770 --> 01:47.450
I'm not explaining this in much detail because I think it's very easy for you to understand.

01:49.330 --> 01:55.290
I just took a visit to the British island land of the British because students will initially take England

01:55.290 --> 01:55.990
to be 13.

01:56.200 --> 01:57.670
But you can take very big landlords.

01:59.390 --> 02:01.640
And as you know, it takes a very large complexity.

02:01.650 --> 02:04.850
So we won't have any problems here.

02:05.210 --> 02:08.060
I'm just digging 13 because of my this.

02:09.180 --> 02:10.620
Let me right in.

02:11.370 --> 02:12.090
So let me just.

02:13.020 --> 02:20.760
Print the word said one so that you can see what is said in heart as it's a 13 with all due to it.

02:20.820 --> 02:26.730
So you're interested in one thing that it's a set of its own, and so it was a base case in this oxygen

02:26.730 --> 02:27.210
problem.

02:27.300 --> 02:28.740
The base case is nothing but beauty.

02:28.780 --> 02:31.380
Zero is one, zero is one.

02:31.380 --> 02:34.620
So here you can see that the row starts on the right.

02:34.620 --> 02:43.350
Most part, it's not 10000 as as it's in our table over here read 10000 and so on.

02:44.100 --> 02:46.890
It is 000 and one is includes the reverse.

02:47.310 --> 02:47.540
Right?

02:47.670 --> 02:51.240
So what we'll do is we'll just assume that we are reverse filling it.

02:52.260 --> 02:56.060
It shouldn't make much problem to me.

02:56.100 --> 02:58.140
It should not cause cause much problem to me.

02:58.440 --> 03:00.150
What I'll do is I'll simply trade.

03:01.670 --> 03:02.330
Tilda.

03:02.660 --> 03:04.760
I start from one go, Dylan.

03:05.420 --> 03:07.040
Similarly, I'll do it for Jay.

03:07.700 --> 03:09.290
We have done this rate for the subject.

03:09.290 --> 03:09.890
Some problem.

03:10.760 --> 03:11.390
And if you're not.

03:11.990 --> 03:13.730
Okay, so now the thing is goes.

03:13.730 --> 03:15.660
I don't need this jay loop also.

03:16.220 --> 03:16.640
What I.

03:16.700 --> 03:17.750
What I want to do is.

03:17.750 --> 03:18.680
I want to.

03:20.980 --> 03:25.300
The bill, said Bill, restoring the values of the previous group.

03:25.810 --> 03:32.080
What I'll do is, as you all know, for any element, I want the previous element and this element which

03:32.080 --> 03:36.580
is eight comma de minus eight logos.

03:36.670 --> 03:37.780
This values nothing.

03:37.780 --> 03:40.520
What if I left shift with the items?

03:41.260 --> 03:45.930
If I shift those bits eight times and I take a note, then it will give me the same result.

03:45.940 --> 03:46.930
I want it.

03:47.260 --> 03:54.610
So basically what I'll do is I'll simply say be a bit set or equals two if I left you.

03:55.730 --> 03:56.240
If I.

03:58.000 --> 03:59.170
Left shift a bit.

03:59.530 --> 04:00.130
Yatim's.

04:01.560 --> 04:07.940
Well, I left you after those bits, eight things and I'm digging out again with the book itself.

04:07.950 --> 04:09.140
I'm digging out again with the Brits.

04:09.150 --> 04:10.710
It's the same thing.

04:11.410 --> 04:14.870
And now, if you want, I can just do it as well.

04:14.880 --> 04:15.660
It's printed.

04:19.590 --> 04:20.610
Initially it was this.

04:21.330 --> 04:24.660
Then second it is 101 and two until all zeros.

04:25.530 --> 04:27.900
It's what my table had one zero went into.

04:29.340 --> 04:31.740
It is 101 and we had two ones here.

04:32.250 --> 04:35.730
Similarly, we have 101 and two ones in the middle.

04:38.470 --> 04:42.010
101 and 212 video and similarly.

04:42.010 --> 04:42.220
Right.

04:42.250 --> 04:44.710
So you can see that these are the same rules.

04:44.710 --> 04:47.890
Just reverse it and.

04:49.300 --> 04:49.840
Finally.

04:50.260 --> 04:51.250
What's my answer?

04:51.280 --> 04:52.270
My answer is nothing.

04:52.270 --> 04:53.290
But it is basically.

04:56.850 --> 05:00.420
Well, so let me just unpredictably be certain that.

05:01.720 --> 05:04.130
So here you can see it's oh, optimize.

05:04.520 --> 05:09.200
Look, I can't even believe that I've optimized this a solution to this.

05:09.290 --> 05:15.890
And now of what is the space complexity of it it is in and the itself is of length.

05:15.910 --> 05:19.970
And we know it takes eight times less complexity than a boolean error.

05:20.840 --> 05:23.960
So it is very much optimized and worth the time complexity.

05:24.470 --> 05:27.710
So is the OR operation.

05:27.710 --> 05:31.850
With the left shifting of the orbits, it doesn't take much complexity.

05:32.120 --> 05:33.020
It's what I have heard.

05:33.500 --> 05:38.310
It's very easy to, you know, left shift orbits and it's an open operation.

05:38.840 --> 05:45.050
So now we're just solving the substitution problem in off ending is very little.

05:48.160 --> 05:49.960
So of course, this.

05:51.130 --> 05:56.790
They are like there are various questions around the complexity of basic, but the complexity of birds.

05:56.800 --> 05:59.320
It is not an exact complexity.

05:59.530 --> 06:01.840
It also depends on the volume.

06:02.950 --> 06:03.190
So.

06:04.160 --> 06:04.850
In the similar vein.

06:04.850 --> 06:07.410
Things you can do you know are trying to send.

06:08.380 --> 06:10.210
Being only working on it.

06:10.210 --> 06:11.920
If you want to go deeper, you can go deeper.

06:12.350 --> 06:21.490
But for me, this solution is off and only because I believe that it takes only one off one time by

06:21.520 --> 06:22.540
all constant pain.

06:23.510 --> 06:24.380
Lieutenant.

06:26.250 --> 06:27.930
So this was another opportunity.

06:29.160 --> 06:29.660
Objection.

06:30.000 --> 06:34.200
I don't think optimization of it are there that I know.

06:36.090 --> 06:36.570
Thank you.

06:36.990 --> 06:37.440
In the next.
