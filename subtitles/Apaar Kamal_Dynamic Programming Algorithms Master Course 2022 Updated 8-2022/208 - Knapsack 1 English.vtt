WEBVTT

00:00.720 --> 00:03.270
Well, let's start with the next problem, knapsack problem.

00:03.930 --> 00:04.380
And.

00:05.640 --> 00:08.770
There are a lot of new things that we learn in this school.

00:09.150 --> 00:10.620
A very famous classical problem.

00:10.790 --> 00:18.210
Is there an item number one, two in for each item, i.e. has a v, w, a and a value by eight.

00:19.410 --> 00:23.460
Dorothy decided to choose some of the negatives and carry them home in a knapsack.

00:23.940 --> 00:25.410
Knapsack is a thick.

00:26.470 --> 00:32.260
So the capacity of the knapsack is w that means this is the total weight it can carry w weight.

00:33.460 --> 00:40.840
Which means that the sum of the variance of the item taken must be at most w5a bag which has a capacity

00:40.840 --> 00:42.370
or other total weight.

00:43.090 --> 00:48.420
And I have some items which have some certain weight since I was on sardine profits eight.

00:48.740 --> 00:49.780
So everything is not good.

00:50.320 --> 00:51.160
All of them are different.

00:51.160 --> 00:52.700
They have their own values and their own weight.

00:53.500 --> 00:58.870
What I want is I want a subset of those values to find the maximum possible sum of the values of items

00:58.870 --> 01:00.640
that Thurrock can take home.

01:01.810 --> 01:03.580
Basically what this.

01:03.580 --> 01:04.060
And.

01:05.100 --> 01:06.360
I want a subset.

01:08.060 --> 01:09.710
I want a subset of this.

01:12.380 --> 01:16.070
Items these Nathan's talking take home.

01:16.890 --> 01:25.140
That means the total wage must be less than equal to W and the maximum possible sum of values it should

01:25.140 --> 01:25.320
have.

01:25.320 --> 01:27.030
That means V should be maximized.

01:28.000 --> 01:28.320
Eight.

01:28.510 --> 01:29.170
A subset.

01:29.470 --> 01:33.940
That's the total total sum of values visas maximized.

01:33.940 --> 01:34.420
And.

01:35.280 --> 01:40.500
The total weight of all those of all the subset should be less than a greater number.

01:41.310 --> 01:42.150
Very nice problem.

01:42.270 --> 01:43.560
It's a very famous problem.

01:44.040 --> 01:44.400
And.

01:46.280 --> 01:48.590
We will do a brute force in this.

01:48.890 --> 01:52.520
A brute force to what can be a brute force, guys?

01:53.400 --> 01:58.730
So you'll understand a very new thing from this lecture if you listen very carefully.

02:00.700 --> 02:01.030
And.

02:01.930 --> 02:07.990
We never know that this thing that you're learning, this might help us solve the really big problems

02:09.030 --> 02:09.350
we have.

02:09.370 --> 02:10.750
We have that basic.

02:12.810 --> 02:12.980
Eight.

02:14.800 --> 02:15.900
What is the.

02:17.010 --> 02:17.760
What is the.

02:19.070 --> 02:21.230
Brute force that we can code agents.

02:21.230 --> 02:21.770
You're explaining.

02:21.770 --> 02:23.660
I just called it out, and then you'll understand.

02:23.660 --> 02:24.860
How is this working?

02:25.640 --> 02:27.020
So what is the brute force, guys?

02:27.470 --> 02:29.360
Let's say initially, my sack is empty.

02:30.320 --> 02:31.070
Empty, sick.

02:32.070 --> 02:32.280
Right.

02:32.820 --> 02:36.210
So let's talk about the first example we have today.

02:36.210 --> 02:37.920
Items three, four, five.

02:40.930 --> 02:44.950
Maybe it's a three or five and the values are 30.

02:45.940 --> 02:46.450
If they.

02:47.370 --> 02:48.360
And 60.

02:50.350 --> 02:54.700
It also cleared another idea be pigeonhole principle in the case.

02:54.940 --> 02:56.230
Initially, the sack is empty.

02:56.260 --> 03:00.250
What I have is if I try to brute force and that I can take the value.

03:01.580 --> 03:07.580
Alex late added, I don't take not take the venue or I ignore it.

03:08.630 --> 03:11.360
So I'm talking about the zero ten NICS.

03:13.770 --> 03:17.220
Material, the zero two index item rate.

03:18.510 --> 03:18.930
Item.

03:18.930 --> 03:21.090
Yeah, I'm talking about the zeroth index item.

03:21.510 --> 03:21.810
So.

03:22.770 --> 03:24.180
And that I don't take it.

03:24.510 --> 03:28.230
And this is then knapsack and then I take it.

03:28.470 --> 03:29.610
And this is a knapsack.

03:30.060 --> 03:31.740
Initially we have an empty knapsack.

03:31.740 --> 03:33.680
And what is the.

03:35.110 --> 03:35.860
Really profit.

03:35.920 --> 03:37.060
Zero Total weight.

03:37.390 --> 03:38.440
Zero eight.

03:39.160 --> 03:42.040
If I don't take the first element.

03:42.880 --> 03:46.300
So I like before moving on here.

03:46.720 --> 03:51.580
We all know that how we can make all the possible subsets of any given area.

03:51.580 --> 03:57.250
If I want to write, if I want to figure out all possible subsets, then what I'll do is I'll take the

03:57.250 --> 03:58.870
element or I'll not take the element.

03:59.530 --> 04:03.730
If I have three elements, every element has to join since take or not, take or not.

04:04.480 --> 04:07.810
So how many subsets will be there possible to do the power?

04:08.300 --> 04:08.560
Three.

04:09.280 --> 04:09.610
Eight.

04:11.510 --> 04:13.790
So I hope this is very clear to everyone of us.

04:14.570 --> 04:19.760
If I want to call it out, if I want to figure out how to write all possible subsets, I can simply

04:19.760 --> 04:21.770
apply recursion and the take or not.

04:22.190 --> 04:23.780
So I think this has been already covered.

04:23.780 --> 04:24.980
Integration and backtracking.

04:25.610 --> 04:26.630
Just like.

04:28.050 --> 04:29.670
Light over there and check it out.

04:30.640 --> 04:30.910
Yeah.

04:31.240 --> 04:33.020
So let's start with this problem.

04:33.020 --> 04:35.530
When it is zero zero, let's continue with this.

04:36.860 --> 04:41.810
If I don't take an item or I take an item later, I'll do this for all the items.

04:41.990 --> 04:42.740
This is for the zero.

04:43.100 --> 04:45.770
If I don't take the zeroth item, then I have six.

04:45.770 --> 04:52.140
Rearden capacity zero only rates of weight and value and capacity of zero zero.

04:52.640 --> 04:58.800
If I take the first item, what is the total capacity of an absolute correct me check.

04:59.090 --> 04:59.510
You need.

05:01.040 --> 05:08.460
It is the total capacity there w eight because if I take this knapsack, let me give it another color.

05:09.210 --> 05:09.460
Eight.

05:10.780 --> 05:14.560
It is zero zero and easily if I don't take it, is zero zero still.

05:15.130 --> 05:20.730
If I take the first element, I can take the first alien because it has a bit of the late.

05:22.520 --> 05:28.790
And the prophet is 32, the wait is three and the prophet is defending the first element.

05:29.700 --> 05:30.300
Now, guys.

05:33.220 --> 05:38.790
Let's move on to the next step, which is if this don't take the second element or take the second,

05:38.800 --> 05:42.460
and similarly, don't take the second element or take the second element.

05:43.360 --> 05:44.890
So what is the second element?

05:44.890 --> 05:45.400
Let me.

05:46.800 --> 05:48.900
Quickly make this eight.

05:50.900 --> 05:54.080
Well, let's talk about this knapsack at zero zero.

05:54.080 --> 05:56.630
That means zero value's zero capacity.

05:56.900 --> 05:58.220
And I'm taking the second element.

05:59.000 --> 06:01.910
If I don't take the second element, it will still be zero zero.

06:02.000 --> 06:03.830
Because I'm not taking the element yet.

06:03.830 --> 06:04.730
I'm taking the element.

06:04.730 --> 06:05.600
Then it will become.

06:09.060 --> 06:13.180
The profit will be 50 because zero plus 50 will be 50.

06:13.200 --> 06:13.920
I'm taking it.

06:14.670 --> 06:16.130
And the word will be for.

06:17.930 --> 06:19.430
Eight similarly.

06:20.330 --> 06:21.110
I'm glad I didn't say.

06:21.200 --> 06:24.410
If you go, if you don't take the element and reject, eliminate.

06:24.470 --> 06:26.990
So if you don't take it, it will become 30 and the only.

06:27.920 --> 06:31.790
And if they agreed, it becomes four +27 rate.

06:31.790 --> 06:33.140
So we can take it because.

06:34.740 --> 06:36.240
Seven is less than eight.

06:36.390 --> 06:42.930
The total capacity of the knapsack is seven and 50 plus today will be.

06:46.290 --> 06:48.090
So this is the value we have.

06:48.360 --> 06:55.020
So I hope you're getting this that what all these nodes represent, this node represents that no item

06:55.020 --> 06:55.500
is taken.

06:55.500 --> 06:56.490
This node represents.

06:56.970 --> 06:58.380
Item number one is taken.

06:58.410 --> 06:59.250
This represents.

06:59.250 --> 07:01.230
Item number zero is taken.

07:01.230 --> 07:04.800
And this represents both item one inside of what it can.

07:05.760 --> 07:07.160
They'd pull.

07:08.480 --> 07:08.780
So.

07:09.050 --> 07:10.460
Yeah, let's move on to the next step.

07:10.880 --> 07:14.210
Not taken and not taken.

07:15.500 --> 07:15.920
You can.

07:21.180 --> 07:21.450
Eight.

07:21.730 --> 07:22.590
Oh, yeah.

07:23.480 --> 07:24.170
Ignore this.

07:25.420 --> 07:25.620
Here.

07:25.630 --> 07:29.560
What we have is if I don't take this, then it is simply zero zero.

07:30.640 --> 07:33.930
What is the third item is third item is five in 68.

07:33.970 --> 07:37.930
So the five is the word and 60 is the value we've taken.

07:37.960 --> 07:41.830
It becomes 60 on my right because I'm taking the third item.

07:43.060 --> 07:46.360
Similarly, let's not take the third item here.

07:46.990 --> 07:51.040
It will be 50 for 50 and for this will be 30 entity.

07:51.520 --> 07:56.080
And similarly, this in reality in seven, because I'm not taking the third element, writing the third

07:56.080 --> 07:58.540
element, it's where it is five.

07:58.810 --> 07:59.920
The five plus four is nine.

07:59.920 --> 08:05.260
So that means I cannot take that third element where I cannot take the third element, this.

08:07.690 --> 08:12.820
I cannot take the third element with element one because the total weight will be nine, which is five

08:12.820 --> 08:13.750
plus four.

08:14.020 --> 08:16.210
And that exceeds my limit, which is eight.

08:17.220 --> 08:19.970
So again, let's move on the right side here.

08:19.980 --> 08:21.570
We have three plus five, which is eight.

08:21.720 --> 08:26.130
And the maximum value will go to this 60 minutes 30, which is 90.

08:26.880 --> 08:27.780
And what is the last one?

08:27.780 --> 08:30.510
It is it be seven or eight.

08:32.090 --> 08:33.230
It is already 18 seven.

08:33.410 --> 08:34.730
That means I cannot take it.

08:36.160 --> 08:38.380
So what are the oil subsidies that we get?

08:39.510 --> 08:42.480
And we don't take anything zero zero we take only an element.

08:42.480 --> 08:43.730
We take one entity.

08:44.340 --> 08:45.270
We only one.

08:45.810 --> 08:47.190
We take one entity.

08:49.900 --> 08:51.940
We take one we don't take, too.

08:53.010 --> 08:54.150
But we take one.

08:55.200 --> 08:55.590
Okay.

08:55.950 --> 08:56.730
It's innovation.

08:57.100 --> 08:57.930
So we take zero.

08:57.930 --> 08:59.490
We don't take one and we don't take two.

09:00.300 --> 09:03.300
Then this means we take zero.

09:03.300 --> 09:06.000
We don't take one and we take the insulin.

09:06.510 --> 09:07.410
So what is the maximum?

09:07.420 --> 09:12.810
So we get 80, 60, maximum value, 50, 30, 90 and 80.

09:13.140 --> 09:14.490
The maximum is 90, let's say.

09:14.490 --> 09:14.760
Done.

09:16.370 --> 09:17.270
So we go to 90.

09:17.660 --> 09:18.560
How we go to 90?

09:18.980 --> 09:19.550
We first.

09:20.430 --> 09:21.300
Let's traceback.

09:21.360 --> 09:21.690
Right.

09:21.870 --> 09:23.670
That means we took the third element.

09:24.540 --> 09:25.140
We did not.

09:25.290 --> 09:26.880
We did not take the second element.

09:27.060 --> 09:28.530
But we took the first element.

09:29.080 --> 09:33.060
Between one combine, I have total weight to weight, which is less than a quarter.

09:33.060 --> 09:35.850
The gap is there doing that basic and 60 minutes today which is 90.

09:37.170 --> 09:40.290
I hope this sounds this makes sense.

09:41.250 --> 09:44.610
We everyone know this is normal recursion, normal brute force.

09:45.060 --> 09:46.110
It's called this Odin.

09:46.770 --> 09:49.740
Well, somewhere differently and it's a working solution.

09:50.820 --> 09:52.650
So let me quickly put this out.

09:53.720 --> 09:54.590
Won't even take.

09:55.450 --> 09:56.380
Two lines of code.

09:57.270 --> 09:59.970
Well, I'm just checking if I have saved the previous one or not.

10:02.200 --> 10:02.920
Vacation.

10:02.920 --> 10:05.050
Not received vacation.

10:06.010 --> 10:06.290
BP.

10:08.840 --> 10:09.140
Yeah.

10:09.410 --> 10:10.730
Let's open this and.

10:13.070 --> 10:16.290
Let's complete it with a brute force, only brute force rate.

10:17.020 --> 10:19.760
So what are the values that I have that CCP?

10:23.780 --> 10:27.350
So what what are the total ranges here and is 100.

10:28.220 --> 10:28.760
And.

10:30.850 --> 10:31.270
Okay.

10:31.730 --> 10:32.380
Here it is.

10:34.610 --> 10:36.380
Via our turn to the bar five.

10:37.360 --> 10:39.310
And values are tainted by name.

10:41.240 --> 10:41.490
Well.

10:43.290 --> 10:44.640
I don't think there should be a problem.

10:44.640 --> 10:44.910
Right.

10:45.270 --> 10:46.230
So let's stick.

10:46.230 --> 10:46.790
And do we?

10:47.640 --> 10:49.530
Because that's the total length.

10:51.740 --> 10:53.120
But it's okay.

10:53.120 --> 10:54.190
I already got this.

10:54.590 --> 10:55.730
The first is values.

10:57.200 --> 10:58.910
And it's only B.

10:59.060 --> 11:00.400
And the second is W's.

11:01.600 --> 11:02.350
See the debate.

11:02.470 --> 11:06.790
It's called the final weight, which is captain W and we have and.

11:07.930 --> 11:08.290
Right?

11:08.740 --> 11:08.970
Yeah.

11:08.980 --> 11:10.480
So let's take them as input.

11:13.410 --> 11:15.510
So after going in as an input, I'll try to take.

11:17.000 --> 11:19.340
W has the input, which is a total knapsack.

11:20.000 --> 11:22.340
What I do is I simply out knapsack.

11:25.420 --> 11:25.690
Eight.

11:26.890 --> 11:31.630
And what I'll do is I simply say, okay, it started with an empty knapsack.

11:31.630 --> 11:36.040
As I've explained to you, I will start with an empty knapsack and start with zero and zero.

11:36.490 --> 11:37.030
That means.

11:38.200 --> 11:38.650
Let me.

11:40.720 --> 11:43.110
It should be made into knapsack.

11:44.360 --> 11:44.800
Here.

11:45.040 --> 11:52.420
What I have is I have a total value that I have got below my mind, the total weight that I've got below

11:52.560 --> 11:52.840
eight.

11:53.350 --> 11:57.700
And also we need a third sum, which is.

11:58.820 --> 11:59.780
What's the third term, guys?

12:03.620 --> 12:05.540
The third term is this.

12:06.050 --> 12:06.770
That means.

12:08.000 --> 12:10.280
Index that currently I'm on which index?

12:10.280 --> 12:14.810
Aneesh Raman zeroth index then I'm on first indexing and when secondary next and so on eight.

12:15.050 --> 12:15.470
So let's.

12:18.680 --> 12:19.370
Index it.

12:20.660 --> 12:23.240
Well, now, this is the total value.

12:23.270 --> 12:25.220
This is the total weight and this is the index.

12:25.220 --> 12:25.670
So.

12:25.700 --> 12:26.030
Yeah.

12:27.180 --> 12:28.200
Let me pass this.

12:29.120 --> 12:34.070
So what happens is that I actually do not need this value to be boss.

12:34.070 --> 12:36.470
Right, because that's what this knapsack is threatening me.

12:37.130 --> 12:37.410
Right.

12:37.610 --> 12:38.660
So it returns me.

12:40.440 --> 12:41.220
That oldest.

12:42.850 --> 12:44.050
Value or.

12:45.030 --> 12:47.940
So maximum value.

12:48.180 --> 12:53.670
I'm writing a recursive function which will return me the maximum value if I have.

12:55.200 --> 13:01.020
It's like if I have if I'm on the third, if I'm on some particular index with this particular weight

13:01.590 --> 13:02.940
eight again, these.

13:04.420 --> 13:05.950
Although Nixon for all the bits.

13:06.930 --> 13:10.850
We have only two days of options at their peak.

13:10.860 --> 13:11.490
The item.

13:12.700 --> 13:15.730
At this index or do not.

13:16.560 --> 13:17.130
Big Exact.

13:18.220 --> 13:19.740
Hey, Indianapolis.

13:20.640 --> 13:20.890
Eight.

13:21.340 --> 13:21.590
So.

13:23.070 --> 13:25.110
If I do not take the item.

13:25.110 --> 13:27.450
So let's move it up and let's move this down.

13:27.780 --> 13:30.870
If I do not take the item at this particular index, I'm on some index.

13:31.530 --> 13:32.150
I go.

13:33.660 --> 13:34.600
Weird, right?

13:34.620 --> 13:36.090
So if I want, I get there next.

13:36.090 --> 13:41.820
And if I am not taking this item, that means what I simply say is I will say that answer should be

13:41.820 --> 13:44.190
equal to the AP index.

13:44.460 --> 13:45.030
Last one.

13:45.390 --> 13:46.950
That means, okay, I'm not taking this.

13:47.310 --> 13:49.770
Go to the next step as we saw in the.

13:51.530 --> 13:56.600
The tree that we did go to the next index and the way it will remain as it is.

13:57.800 --> 14:00.380
Well, this should be the answer or no.

14:00.920 --> 14:06.500
And if I'm taking the item so there should be a condition if I take this item, that is what would be

14:06.500 --> 14:09.230
the condition that w of index.

14:10.780 --> 14:12.070
Plus whatever the word.

14:13.700 --> 14:15.070
Is of the knapsack and I don't.

14:15.080 --> 14:18.110
They should be less than equal to the total weight.

14:18.170 --> 14:19.690
Then only I can include this item now.

14:20.390 --> 14:21.080
What is this word?

14:21.080 --> 14:22.730
That the word till now.

14:23.030 --> 14:23.600
That means.

14:23.780 --> 14:25.070
Let's come back to the trivia.

14:25.280 --> 14:26.390
The way tolerate.

14:26.690 --> 14:29.900
It means no matter how much item I have taken, I'm deciding a brute force addition.

14:31.140 --> 14:33.330
The W index, which is rate of the current.

14:35.320 --> 14:35.800
Item.

14:36.430 --> 14:43.570
And this weight is actually the total weight which is being passed on, as I have already done, and

14:43.570 --> 14:44.530
this is the total weight.

14:44.970 --> 14:47.110
If this is less than this, then only I can do it.

14:47.380 --> 14:50.350
What I'll do is I'll say, okay, answer this, max of answer Goma.

14:50.890 --> 14:51.820
If I'm taking this.

14:53.500 --> 14:58.690
Item, then the value should be included, which is v the let's call it v index.

14:59.200 --> 15:00.970
Plus if I'm taking it.

15:01.600 --> 15:02.410
What does it mean?

15:02.710 --> 15:03.700
It go to the next.

15:05.900 --> 15:07.700
Index, go to the next index.

15:07.700 --> 15:11.390
That is index plus one and give me the best answer with the new rate.

15:11.420 --> 15:15.380
What is a new word w an explicit.

15:16.590 --> 15:17.100
Always.

15:17.880 --> 15:20.220
That's what I was doing in this tree.

15:20.220 --> 15:24.270
And then I'm taking it or not taking it and just passing on the vegetables.

15:25.580 --> 15:27.220
I hope you can easily see this.

15:27.630 --> 15:32.060
And then I take it or I don't take it when I'm taking it.

15:32.060 --> 15:37.670
I just have a special condition that is the virtual realism and I'm simply adding the value of that

15:37.670 --> 15:45.440
particular item to the knapsack and into them into the answer, and asking for the further answers that

15:45.440 --> 15:48.260
give me the best values completed an answer from you.

15:49.360 --> 15:50.500
They now?

15:51.480 --> 15:53.820
But the basic is index goes out of bond.

15:53.970 --> 15:55.530
So if index is greater than.

15:58.510 --> 16:00.400
And or even equal to.

16:00.700 --> 16:05.350
Maybe because we are considering zero based indexing, then what we can do is we can simply return some

16:05.350 --> 16:06.130
very big value.

16:06.580 --> 16:07.780
And let's say it is.

16:08.820 --> 16:09.420
Index.

16:11.030 --> 16:12.920
It can either go deal in the mix.

16:14.690 --> 16:15.060
Yes.

16:15.060 --> 16:21.560
So I think the answer is your answer can go tell Max because VA is extended by nine.

16:22.310 --> 16:22.820
And.

16:25.470 --> 16:25.860
Yeah.

16:25.990 --> 16:33.420
So the values and in 202 it is and about 11 eight so yes it can go deal in make so let's take another

16:33.420 --> 16:34.740
value which is the 1750.

16:35.460 --> 16:39.750
So that part will already be entered because we have already defined long, long and do not to worry

16:39.750 --> 16:40.110
about it.

16:40.650 --> 16:45.180
The index goes greater than end district in 2015 and I let's build this.

16:46.050 --> 16:47.400
Okay so before building.

16:48.730 --> 16:49.570
Instead of Debbie.

16:50.630 --> 16:52.620
We need to have knapsack again.

16:53.000 --> 16:53.480
Mistake.

16:54.630 --> 16:56.830
Knapsack and didn't let me stay.

16:56.920 --> 17:01.860
I said, we have to go and end up with the input, but we're not taking the values and the weights.

17:03.420 --> 17:05.200
I bet it's quickly.

17:05.220 --> 17:05.640
Take them.

17:06.450 --> 17:08.800
The W, a and b a.

17:11.870 --> 17:12.680
Religious beliefs.

17:15.010 --> 17:15.520
Okay.

17:17.970 --> 17:20.220
That sounds so great.

17:22.770 --> 17:24.090
I'm digging maximum.

17:26.330 --> 17:26.840
Okay.

17:27.540 --> 17:27.890
Right.

17:28.280 --> 17:32.680
So if I don't have any option, do big items, whatever the base case, I'm not taking minimum wage,

17:32.730 --> 17:33.590
I'm taking maximum.

17:34.400 --> 17:37.040
But what is index are good isn't equal to end mean.

17:37.040 --> 17:39.230
It means that I don't have anything to pick from.

17:39.740 --> 17:40.850
I don't have any item.

17:41.360 --> 17:42.620
I'm not able to pick any item.

17:42.620 --> 17:44.630
What should be the answer?

17:44.630 --> 17:45.890
What should be the maximum value?

17:45.890 --> 17:46.220
Zero.

17:46.230 --> 17:46.550
Right.

17:49.350 --> 17:50.400
That makes him zero.

17:50.760 --> 17:51.090
Yeah.

17:52.050 --> 17:54.000
So it gives me 98.

17:54.880 --> 17:57.040
And what if I take this?

17:57.940 --> 17:59.920
It gives me fire into something great.

18:00.490 --> 18:01.750
What if I take the third value?

18:02.760 --> 18:03.360
It gives me.

18:04.730 --> 18:04.960
Well.

18:05.540 --> 18:08.240
Hey, so solving it was not my purpose.

18:08.510 --> 18:12.800
I hope you understood the brute force, and I'm taking it or I'm not taking it.

18:13.220 --> 18:16.820
It is part of the complexity of the solution.

18:16.820 --> 18:18.260
Will this value by somebody?

18:18.800 --> 18:19.530
It will not work.

18:20.120 --> 18:22.700
Because the complexity of the solution is.

18:24.110 --> 18:30.860
It will deliver in, as I already told you, that whenever we are trying to make subsidies, we are

18:31.730 --> 18:35.270
giving two choices to every index and this type of banditry will come down.

18:36.300 --> 18:36.570
Eight.

18:37.540 --> 18:40.300
This should not be a grade because 200 is too much.

18:41.330 --> 18:42.130
It's more than.

18:42.950 --> 18:43.850
Life of this planet.

18:43.850 --> 18:45.320
I guess it.

18:49.260 --> 18:49.800
Provided.

18:49.800 --> 18:50.640
I caught this out.

18:50.730 --> 18:54.060
Why did I brute force her provided I wrote it.

18:55.070 --> 19:00.450
Because I want to explain to you this, that there is a thing called pigeonhole principle.

19:00.470 --> 19:02.780
So we've already told you what is a general principle.

19:03.320 --> 19:06.020
It has already been well explained in the mathematics section.

19:07.040 --> 19:07.370
Right.

19:08.640 --> 19:10.890
So what does a pigeonhole principle mean?

19:11.160 --> 19:12.630
Now let's focus on this case.

19:13.110 --> 19:18.180
So here what I have is I have these two values which are w and values.

19:19.630 --> 19:19.930
Eight.

19:20.200 --> 19:21.820
Let's not talk about w n value.

19:21.820 --> 19:25.470
Let's talk about indexes in which the.

19:26.610 --> 19:34.920
All my recursion is only two values made every because function has only two values which are indexes

19:35.580 --> 19:36.000
and.

19:38.690 --> 19:38.930
Eight.

19:39.820 --> 19:46.240
So can I see that if I have to do the power hundred different recursive calls.

19:47.420 --> 19:55.900
All these to reduce 100 acres of gold and only have these many values which is indexes into weights,

19:55.940 --> 19:58.910
which is an Obama w.

20:00.120 --> 20:00.450
Eight.

20:00.810 --> 20:03.060
The how many indexes commemorate.

20:04.070 --> 20:05.390
Arguments can take place.

20:05.670 --> 20:07.370
Means how many possibilities are there?

20:07.400 --> 20:09.560
It is simply and into the possibilities.

20:10.160 --> 20:11.810
That means indexes can go from.

20:14.830 --> 20:15.910
Zero two and minus one.

20:16.570 --> 20:17.770
And which can go from.

20:20.080 --> 20:22.720
02w Hey, totally.

20:22.720 --> 20:24.430
W Let's not worry about that.

20:25.360 --> 20:29.200
What I'm trying to explain to you is that.

20:32.320 --> 20:40.600
Due to the power hundred values already above 100 because records can be summarized into indexes and

20:40.600 --> 20:48.310
weights and how many indexes and words are there they are only and in the w what is in for the problem?

20:48.310 --> 20:50.380
It is handed what is W for the problem?

20:50.380 --> 20:51.340
It is standard the power.

20:55.190 --> 20:55.420
Right.

20:56.060 --> 20:56.780
Let's take it.

20:57.440 --> 20:57.710
Yeah.

20:57.980 --> 20:58.610
Nobody's seen anything.

20:58.610 --> 21:00.930
If I were at an end, isn't it okay.

21:01.550 --> 21:04.970
What if I just make a recursive call?

21:05.240 --> 21:06.500
What if I memorize it?

21:08.230 --> 21:11.020
What if I memories the brute force?

21:15.160 --> 21:16.060
Think about this.

21:16.950 --> 21:17.570
What if?

21:17.870 --> 21:20.700
If it is calculated, then don't get reelected again.

21:21.090 --> 21:22.560
That's what memorization means, right?

21:23.460 --> 21:25.350
The how many states are possible?

21:25.500 --> 21:27.320
Actual states are above 100.

21:27.330 --> 21:31.530
But if I memorize it on the basis of indexes and weights.

21:32.530 --> 21:33.370
It's important.

21:33.370 --> 21:37.750
But I want to reiterate that if I is the.

21:39.280 --> 21:43.920
Solution though recursion with indexes and weights only.

21:44.610 --> 21:47.400
That means how many times a call will be done?

21:47.550 --> 21:48.660
Only ten to deep.

21:48.730 --> 21:49.860
Over seven times.

21:51.630 --> 21:55.860
Although we have to receive over 100 different recursive calls.

21:55.920 --> 22:00.750
But it won't go to all the goals raised because they are only 27 states.

22:01.080 --> 22:05.100
In the worst case, it will get a great alternative to over seven states on which it is going to.

22:06.610 --> 22:06.910
Eight.

22:08.120 --> 22:08.870
I regard this.

22:09.860 --> 22:15.260
So it's kind of a pigeonhole principle think that I have only about seven states.

22:16.260 --> 22:22.590
But there are over 100 sockets and all these sockets will contain only these states.

22:23.580 --> 22:25.980
So why not just get rid of these stains only once?

22:26.610 --> 22:31.290
Of course they will be the breeding suits because if there are so many suits possible to do, the behind

22:31.290 --> 22:32.280
the scenes are possible.

22:32.820 --> 22:34.920
That means they're there 100%.

22:34.920 --> 22:36.090
They will be repeating suits.

22:37.210 --> 22:37.480
Eight.

22:37.570 --> 22:43.180
And there will be many riveting states because unique series set into the seven only.

22:44.290 --> 22:44.590
Eight.

22:45.790 --> 22:46.650
Goldman, was it?

22:47.450 --> 22:49.360
So how do we perform them acquisition?

22:49.390 --> 22:55.490
I've already explained to everyone and it's 75 is the word.

22:55.510 --> 22:58.900
So let's say when you buy plus one because it can be W, right.

22:59.880 --> 23:02.250
So before calling the knapsack, let's.

23:03.910 --> 23:04.180
Mm.

23:04.240 --> 23:08.890
32 minus one size of memo.

23:09.770 --> 23:10.790
Called an epidemic.

23:11.580 --> 23:12.930
And here what we have is.

23:13.200 --> 23:13.420
Yeah.

23:13.470 --> 23:13.980
Memo.

23:15.480 --> 23:16.710
Look after the biscuits.

23:16.710 --> 23:18.750
What we'll do is we'll simply say that.

23:20.270 --> 23:21.230
Answer is this.

23:21.290 --> 23:22.310
But before this, it's.

23:23.410 --> 23:25.480
Do it my way, as already explained.

23:26.670 --> 23:28.380
So the answer is he goes to memo.

23:30.200 --> 23:30.780
Index.

23:32.600 --> 23:32.960
We?

23:34.040 --> 23:37.970
As we know it is never going about W because we have this check or whatever.

23:38.700 --> 23:41.060
It should always be less interview than only we are getting it.

23:42.340 --> 23:42.620
Eight.

23:43.730 --> 23:44.000
So.

23:44.360 --> 23:44.660
Yeah.

23:44.660 --> 23:47.930
So this is not my musician.

23:49.020 --> 23:49.470
Part.

23:53.000 --> 23:58.040
If answer is not equal to minus one return answer.

23:58.610 --> 24:01.100
Otherwise the answer will be this it will override.

24:01.880 --> 24:02.330
And.

24:03.680 --> 24:03.980
Yeah.

24:04.040 --> 24:05.390
It will be saved in memory itself.

24:06.180 --> 24:07.220
Well, let's build this again.

24:08.900 --> 24:10.220
We have some elders.

24:10.880 --> 24:12.800
25, blessed one.

24:15.410 --> 24:15.700
Yeah.

24:16.100 --> 24:18.560
The 100001.

24:21.300 --> 24:22.880
Well, we are getting 17.

24:22.890 --> 24:25.020
Yeah, 17 is the answer.

24:26.650 --> 24:29.650
Now tell me, guys, how many calls will be made?

24:30.980 --> 24:33.390
There will be only index comma type of calls.

24:33.410 --> 24:36.140
I leave you with having brute force to deliver 100 calls.

24:36.550 --> 24:42.170
But here we have introduced an additional argument, which is weight by introducing weight.

24:42.200 --> 24:44.900
What we get is we get a limited number of states.

24:45.690 --> 24:49.430
Hey, those people, you know, most states can be moist so that they are not getting injured again

24:49.430 --> 24:51.350
and begin to add in the pollution.

24:52.560 --> 24:53.550
So let's copy this.

24:55.360 --> 24:55.840
Instead.

24:56.930 --> 25:01.760
And some of you know, guys, if I have applied memorization, then what is the total complexity of

25:01.760 --> 25:02.060
this?

25:02.930 --> 25:04.850
How many times regression will be formed?

25:04.850 --> 25:10.040
In the worst case, it will retain its power by even retaining the power to be distinctive over seven.

25:10.280 --> 25:11.680
It should work in the given day.

25:12.230 --> 25:15.170
So as we can see, we have got the better dancer.

25:15.710 --> 25:15.920
Eight.

25:15.980 --> 25:19.730
And of course the time to gain is too much because regression is being called again and again.

25:21.130 --> 25:25.240
So this was my purpose of solving this.

25:25.580 --> 25:28.360
And sometimes you just write brute force and memorize it.

25:28.630 --> 25:29.170
It works.

25:30.300 --> 25:31.350
Because of the.

25:32.380 --> 25:34.780
Arguments, a limited number of states.

25:36.440 --> 25:39.470
So this was another way of thinking about it and improve on the solution.

25:40.070 --> 25:45.320
I've taken this way because after this again, you'll see that we have different explanations of knapsack

25:45.320 --> 25:45.740
problem.

25:45.770 --> 25:49.550
Ultimately, we are the explanation, as it were, before this or to this, I'm not sure.

25:50.120 --> 25:52.110
But here is a different way to imagine it.

25:52.470 --> 25:52.680
It.

25:53.320 --> 25:53.370
It.

25:54.050 --> 25:57.680
The box of starting from two different sectors.

25:58.450 --> 25:58.670
It.

25:59.900 --> 26:00.260
Great.

26:00.950 --> 26:01.790
In the next part, guys.

26:01.790 --> 26:02.180
Thank you.
