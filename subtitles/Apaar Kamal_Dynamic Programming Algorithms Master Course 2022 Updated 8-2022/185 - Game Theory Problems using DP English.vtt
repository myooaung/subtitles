WEBVTT

00:00.930 --> 00:01.310
Anyone.

00:01.440 --> 00:05.160
So here is another interesting problem, which is a game theory problem.

00:06.060 --> 00:07.440
And then it dig in to the problem.

00:07.440 --> 00:14.910
But we will be looking by the eyes of DPI so we'll see how to solve it using dynamic programming.

00:15.580 --> 00:21.720
Well, the problem is very simple and it's a I think the most famous problem from game theory of course

00:21.720 --> 00:22.470
after the name games.

00:23.640 --> 00:29.670
So the problem is that, listen, Baba playing a game of a pile of stones, so there's only one bite

00:29.970 --> 00:30.600
of stones.

00:31.080 --> 00:32.910
Initially they ran stones in a pile.

00:33.630 --> 00:39.030
A player can pick up one, two or three stones from the pile, at least plays first and play as players

00:39.030 --> 00:39.360
play.

00:39.390 --> 00:42.990
Alternatively, the player who is unable to make the move loses the game.

00:44.820 --> 00:46.800
It's very simple and crystal clear.

00:47.220 --> 00:48.090
Let's play a game.

00:48.110 --> 00:48.960
A short one.

00:49.440 --> 00:50.610
Let's say I have.

00:52.480 --> 00:53.840
Big stones, right?

00:54.460 --> 00:54.850
Or.

00:55.660 --> 00:56.290
Yeah, just.

00:56.320 --> 00:57.140
Just an example.

00:57.670 --> 01:00.910
Let's have, say, six stones, and Ellis is the first one to move.

01:01.930 --> 01:03.370
So let's say Ellis picks up.

01:04.000 --> 01:04.510
It was stones.

01:04.600 --> 01:10.210
So as written it can he he or she can pick up other one, two or three stones.

01:11.080 --> 01:13.210
Alice is initially picking up two stones.

01:13.210 --> 01:13.690
Let's see.

01:14.140 --> 01:18.460
So after this, there will be one for stones left above the liquidated.

01:18.460 --> 01:27.010
It takes it to Alice, picks up the remains for then let's say Bob picks up Bob can pick up any from

01:27.010 --> 01:27.670
one, two or three.

01:27.670 --> 01:29.960
Later Bob picks up three stones eight.

01:30.310 --> 01:32.280
If he picks up three stones, how many are left?

01:32.290 --> 01:33.010
One is left.

01:33.370 --> 01:35.170
Now, Alice picks up the last one.

01:35.950 --> 01:36.760
So how many are left?

01:36.770 --> 01:37.180
Zero.

01:37.450 --> 01:38.620
The notes, Bob Johns.

01:38.620 --> 01:41.050
And there are no stones left, so he will lose the game.

01:41.530 --> 01:46.300
So basically the player is unable to make a move, loses and moves out at the peak of one, two or three

01:46.300 --> 01:50.230
stones from the but five will lose because there are zero stones left in the pile.

01:51.230 --> 01:51.500
Eight.

01:51.950 --> 01:53.160
I've understood the game.

01:53.180 --> 01:54.620
A very simple and easy game.

01:54.800 --> 01:59.420
And also I feel free to positively do anything about this.

02:00.510 --> 02:01.320
Him eight.

02:02.370 --> 02:04.830
EG some more numbers don't in the Bible and so on.

02:05.910 --> 02:11.620
So let's discuss this, Kim, and let's make it very interesting because it is actually very interesting.

02:13.040 --> 02:13.460
And.

02:15.550 --> 02:17.340
Academy programming is applied to this game.

02:17.850 --> 02:19.410
A lot a lot of that improvement.

02:19.860 --> 02:20.580
Just give me a second.

02:20.580 --> 02:21.420
Let me draw it.

02:22.530 --> 02:28.380
So I've just made this area and this just represents how many stones are there in the current part of

02:28.740 --> 02:29.630
an invite rate.

02:30.000 --> 02:35.580
So let's say initially there are 16 stone, for example, this to understand this problem and see how

02:35.580 --> 02:36.120
to solve this.

02:36.660 --> 02:41.040
What we'll do is we'll try to play this game in the backward manner.

02:41.040 --> 02:42.570
So it is called backward induction.

02:43.380 --> 02:45.780
So therefore the new programming is also right.

02:45.780 --> 02:47.490
So the term is backward induction.

02:49.200 --> 02:54.900
Just remember this term, because generally we use this term to solve many, many programming problems.

02:55.860 --> 02:56.160
Why?

02:56.190 --> 02:57.650
Because they start with the base case.

02:57.660 --> 03:02.250
We try to move up and then we realize what are the different possible options?

03:02.250 --> 03:06.060
I have to move to the base case and then we try to.

03:06.390 --> 03:08.010
I know the dynamic programming states.

03:08.880 --> 03:09.970
Let's start from backward.

03:09.990 --> 03:14.120
Let's not play the game from 16 card and play the game from zero eight.

03:14.460 --> 03:16.980
Let's say I'm Alice and it's my chance.

03:18.670 --> 03:21.430
And just tell me whether I'll win or lose.

03:22.270 --> 03:22.540
Well.

03:23.440 --> 03:24.310
I'm Alice, right?

03:24.400 --> 03:25.180
So just say it.

03:25.180 --> 03:26.740
Just think I'm playing the game first.

03:26.740 --> 03:28.500
And I'm Alice and it's my agent.

03:28.510 --> 03:31.540
So if I have zero stones in the pile.

03:32.730 --> 03:33.230
To let me know.

03:34.110 --> 03:35.130
And it's my chance.

03:35.220 --> 03:36.150
Will I win or lose?

03:36.450 --> 03:36.990
I lose.

03:37.410 --> 03:38.490
That's the base case.

03:39.090 --> 03:40.530
There's the final case of the game.

03:41.140 --> 03:42.570
But tell me if I have one.

03:44.230 --> 03:45.790
Stone in the pile.

03:46.660 --> 03:47.500
And I'm Alice.

03:47.500 --> 03:48.480
I'm going to play.

03:48.490 --> 03:49.820
It's my dance, basically.

03:49.900 --> 03:51.700
Let's say it is a laser ball.

03:51.910 --> 03:52.660
It doesn't matter.

03:52.660 --> 03:52.930
Just.

03:53.200 --> 03:56.020
Just assume that it's my johns and I'm going to play.

03:56.490 --> 03:57.900
It's my chance to make a move.

03:57.910 --> 04:02.020
If there is one stone in there by then, who then will win or lose?

04:03.260 --> 04:03.790
O'Sullivan.

04:04.010 --> 04:04.340
Right.

04:04.740 --> 04:05.020
Right.

04:05.480 --> 04:07.060
Because it's my chance.

04:07.070 --> 04:10.910
I'll pick up the spoon because I have to pick up one or two or three stones.

04:10.910 --> 04:11.990
I have just one choice.

04:11.990 --> 04:14.180
I'll pick up this stone and I will simply.

04:15.760 --> 04:18.610
Make the next clear move on to the losing position.

04:19.150 --> 04:25.030
So if I pick up this tone, the next player goes on to zero eight and he will simply lose.

04:25.900 --> 04:26.130
Cool.

04:26.480 --> 04:28.150
It's a it should be very.

04:29.150 --> 04:33.020
And the second is now we are on to eight.

04:33.410 --> 04:36.230
So just think whether we'll win or lose.

04:37.690 --> 04:41.650
I have two stones in the pile and I can pick up one, two or three stone.

04:43.090 --> 04:46.000
I'll win right away because I will pick up both distance.

04:46.240 --> 04:50.410
If I pick up both the stones from the pile now, there will be zero stones left.

04:50.440 --> 04:54.460
So basically this is this transition that means from two.

04:54.460 --> 04:56.030
I'm just giving the other play.

04:56.060 --> 05:03.450
I'm just saying that the player what is zero and losing it because whoever plays on zero will lose it

05:03.460 --> 05:06.730
because it's a losing position immediately to the winning version.

05:07.030 --> 05:09.030
What about three guys in three?

05:09.040 --> 05:09.880
We have two options.

05:10.150 --> 05:15.070
Basically, we have three options that I pick up one stone and make the player go to two, which is

05:15.070 --> 05:16.480
everything Boitano he didn't believe in.

05:16.960 --> 05:21.460
And then I pick up two stones and make the other player go to one stone eight.

05:21.670 --> 05:24.060
So one is the winning bush, and for him, then he will win.

05:24.400 --> 05:27.850
And the third option is I can pick up three stone, all three stones.

05:28.860 --> 05:30.630
They go from three.

05:30.630 --> 05:36.450
If I pick up all three students, I'll simply win again because I'm making the other player go to a

05:36.450 --> 05:37.230
losing position.

05:37.860 --> 05:43.470
If I'm able to make the other player go to a losing position, then it becomes a winning position for.

05:45.640 --> 05:46.770
I hope this is very clear.

05:47.200 --> 05:47.920
Crystal clear.

05:49.340 --> 05:54.650
So of course, this is the most simplest game that I have taken over here.

05:54.650 --> 06:02.110
And there's a whole course on game theory that is available and I have only created the course eight.

06:02.110 --> 06:05.140
But this is the most simple example because we are discussing one GDP.

06:05.150 --> 06:06.590
So I just wanted to discuss this.

06:06.950 --> 06:08.090
I would start backwards.

06:08.930 --> 06:10.130
Then we are starting backwards.

06:10.130 --> 06:11.480
We know what options we have.

06:11.780 --> 06:13.160
When we know what options we have.

06:13.160 --> 06:17.270
We can easily find out this trade in the negative relation that we want in anime programming solution.

06:17.930 --> 06:19.900
Right now, let's talk about four.

06:19.940 --> 06:20.930
This is the most important.

06:22.360 --> 06:23.590
So from Ford.

06:24.680 --> 06:27.950
Tell me I can go to three by picking up one stone.

06:28.730 --> 06:32.630
I can make the other person go to two by picking up two stones.

06:32.630 --> 06:39.050
Or I can make the other person go to one by picking up one stone by picking up three stones.

06:39.050 --> 06:39.280
Right?

06:39.290 --> 06:41.390
So I can maybe only dream of one, two or three.

06:41.750 --> 06:46.670
And all those three options are giving the other player a winning position.

06:47.180 --> 06:49.370
Let's say I pick up any of those options.

06:49.500 --> 06:55.460
And the next player, which is let's say you are the next player, you will simply win by, because

06:55.460 --> 06:58.520
we have seen that all these terrible decisions at winning positions.

06:58.790 --> 07:01.560
I'm not able to say that.

07:01.580 --> 07:04.160
Okay, go on the losing position.

07:04.310 --> 07:06.590
I'm not able to force you to the losing position.

07:06.950 --> 07:11.000
Whatever I play, you will go to the winning version and you will simply win a.

07:12.710 --> 07:15.860
So this position becomes a losing vision for me.

07:16.040 --> 07:17.300
I hope this is very clear.

07:17.990 --> 07:22.400
Because what I no matter what, I play the other place going on, I've been in opposition now similarly

07:22.400 --> 07:25.040
for five, six and seven, what will happen?

07:25.040 --> 07:30.680
It will be a winning position for me because from five I can force the player to go to four and it's

07:30.680 --> 07:31.670
a losing position for him.

07:31.970 --> 07:37.100
Similarly, four from six, I can force him to go to four, which is again a losing position.

07:38.280 --> 07:39.120
I'm seven again.

07:39.300 --> 07:41.460
I'll force him to vote, which is a losing push.

07:42.000 --> 07:42.230
Eight.

07:42.510 --> 07:48.090
Similarly, from eight, I can go to seven or six or five by picking up one, two or three stones respectively.

07:48.420 --> 07:50.010
This becomes a losing position for.

07:50.920 --> 07:55.090
And so on day to day, you can see that there's a pattern.

07:58.050 --> 07:58.350
It.

08:01.480 --> 08:01.630
Okay.

08:01.720 --> 08:03.190
So what is 16 for me?

08:03.460 --> 08:05.350
So let's say if you have been given adequate statistics.

08:05.500 --> 08:06.790
What will you see happening?

08:06.790 --> 08:07.960
Bush and Obama are losing Bush.

08:07.960 --> 08:13.000
And for me, just imagine this, that both the computers as both the players as supercomputers.

08:13.660 --> 08:14.760
They will not make a mistake.

08:14.770 --> 08:18.220
They will play optimally in every game to the problem.

08:18.230 --> 08:20.170
You have to imagine this that they will play optimally.

08:21.260 --> 08:21.480
Right.

08:21.950 --> 08:24.800
This is the 16 is a losing position for me.

08:24.800 --> 08:31.440
By the losing position for me, no matter what I play, I'll give the other player 13, 14 or 15 later

08:31.490 --> 08:36.260
the other player will give me back 12, eight, which is again a losing position for me.

08:36.680 --> 08:40.910
Then no matter what I play nine, ten or 11, you will again give me back it.

08:41.660 --> 08:46.130
Similarly four and similarly Aries 208 was the pattern over here.

08:46.430 --> 08:47.090
If end.

08:48.360 --> 08:49.650
Is divided by four.

08:49.980 --> 08:51.360
Then it's a losing position.

08:52.260 --> 08:53.810
Or the one who is playing first.

08:54.180 --> 08:56.100
And if and is not.

08:57.500 --> 08:58.760
Not equal to zero.

08:58.790 --> 09:04.040
That means it is not it is not a multiple of four than it is a winning version for me.

09:04.310 --> 09:10.190
Because then what I can do is, let's say if I was starting at 14, I will simply give the player 12,

09:10.880 --> 09:13.940
he will simply give me whatever and then I can give him it.

09:14.210 --> 09:14.510
Right?

09:15.290 --> 09:18.290
So I'll force him to use with.

09:19.450 --> 09:20.090
So yeah.

09:20.140 --> 09:24.270
So this is an example of a game, a game to the ground in which dynamic programming is involved.

09:24.280 --> 09:27.850
And now you might be wondering that why or how is running programming involved?

09:28.180 --> 09:31.630
As we can see, this is a very simple case, right?

09:32.200 --> 09:35.920
This is a simple case because we have seen one, two and three storms from Mobile.

09:35.920 --> 09:40.640
But in this course, we are just wondering about some major TV problems.

09:40.640 --> 09:43.090
So we are going into specialization or anime programming.

09:43.090 --> 09:45.220
So it will not always be one, two or three stone.

09:45.520 --> 09:49.060
It can be some any number of stones which can have different values in it.

09:49.060 --> 09:53.380
Like, like for seven, 12, eight.

09:53.440 --> 09:58.960
So later we have two, we have three moves only in which I can pick up four stones, seven, seven stones

09:58.960 --> 09:59.590
or Telstra.

10:00.100 --> 10:02.650
That can also be another game eight even.

10:02.920 --> 10:04.780
Let's say I can even add 15 to this.

10:05.170 --> 10:07.060
It's generic right now.

10:07.060 --> 10:07.780
We know how to.

10:08.750 --> 10:10.310
I know the answer, but.

10:10.730 --> 10:13.750
But in these cases, it won't always make a pattern.

10:14.480 --> 10:15.770
It won't always make up it.

10:15.780 --> 10:19.370
And so what you can do is you can develop a dynamic programming approach for this.

10:19.370 --> 10:19.940
And how is.

10:21.770 --> 10:25.170
This dining programming approach can reiterate what we can see.

10:25.170 --> 10:30.370
Six little losing means zero and winning means one.

10:30.470 --> 10:31.880
Let's take boolean values for them.

10:32.360 --> 10:32.660
Eight.

10:33.110 --> 10:34.400
What will be F fourth?

10:35.340 --> 10:37.590
X x is any number of ways here.

10:39.100 --> 10:44.680
What will be F of x if I want to find out data records of relation to where this bothered and think

10:44.680 --> 10:48.910
about it, try to formulate indicative relation yourself with it and then I'll.

10:50.060 --> 10:51.140
Of course, demonstrate.

10:52.180 --> 10:53.200
What are the cases here?

10:53.230 --> 10:58.330
The cases here are very simple, that if ethics is a winning position.

10:58.930 --> 10:59.590
Let me you.

11:02.080 --> 11:07.090
Basically I have three variables, which is x f of x minus one, x minus two and F of x minus three.

11:07.300 --> 11:11.350
I will find out how to delete them by only three because I have three moves at another.

11:11.350 --> 11:12.880
Minus one minus two a minus three.

11:14.020 --> 11:16.090
So F of x is a winning position.

11:17.280 --> 11:17.760
If.

11:19.300 --> 11:21.100
Any one of them is a losing position.

11:22.000 --> 11:27.460
But basically, this is a losing position or this is a losing position or this is a losing.

11:28.280 --> 11:33.490
But if any one of these positions is the losing position, F of X becomes the winning position and values,

11:33.490 --> 11:39.190
F of X, a losing position when it is always one, when all the other positions on which I can go to

11:39.190 --> 11:43.420
one, which I can see the next player to move are winning positions.

11:43.420 --> 11:46.960
So the current the current position becomes a losing position for it.

11:47.380 --> 11:50.380
Can you derive a relation between F6 and F x minus one?

11:50.380 --> 11:55.510
If it's minus two, an x minus three, it can be a very simple relation, which is.

11:56.500 --> 11:57.070
What if?

11:57.940 --> 11:58.810
Okay, let me think.

11:59.650 --> 12:01.090
If any one of them is zero.

12:01.980 --> 12:04.680
It's one at the rate it's okay.

12:04.890 --> 12:07.200
What I can do is I can simply say and fix it.

12:07.200 --> 12:08.520
It goes to f x minus one.

12:09.470 --> 12:11.570
And F x minus two.

12:12.540 --> 12:15.450
And effects minus three.

12:15.990 --> 12:18.780
Let's dig in and let's finally do a note.

12:20.920 --> 12:21.140
Well.

12:21.460 --> 12:22.880
So what does this mean?

12:22.900 --> 12:23.860
Let's understand this.

12:25.000 --> 12:30.460
What if all three of these, which is a fixed rate, is when it fixed minus two in a fixed minus three

12:30.460 --> 12:30.910
are one.

12:31.420 --> 12:33.010
What if all these have been invasions?

12:33.790 --> 12:37.270
This whole region will be fine, because after an end.

12:37.690 --> 12:38.950
Eight We know what?

12:38.950 --> 12:40.540
Eight What isn't it, Maya?

12:42.480 --> 12:43.200
It's the end.

12:45.370 --> 12:45.610
Well.

12:47.380 --> 12:47.650
Yeah.

12:47.770 --> 12:50.500
So the whole of the expression will give me one.

12:50.860 --> 12:52.940
The true value and not of it will be zero.

12:52.960 --> 12:55.440
So we are going with this case, I mean, all three of them.

12:56.350 --> 12:58.090
What if any one of them is zero?

12:58.090 --> 13:00.850
Or maybe two of them is zero and all three are zero.

13:00.860 --> 13:02.710
Then what will be the value of this expression?

13:03.190 --> 13:04.500
It will be zero.

13:04.840 --> 13:06.120
And what is not zero?

13:06.130 --> 13:06.840
It will be one.

13:07.840 --> 13:15.270
Well, this particular recursive relation satisfies my above conditions and will give me a final answer.

13:16.630 --> 13:19.930
I hope you understood this and feel free to quote this.

13:20.440 --> 13:22.810
I use memorization and memorization.

13:22.810 --> 13:23.770
Use a boolean area.

13:24.930 --> 13:25.180
Eight.

13:26.370 --> 13:31.650
But of course, some of you might be wondering why to call it because we can simply derived it from

13:31.650 --> 13:33.960
this religion, which is and more foreign mutual aid.

13:34.290 --> 13:36.960
If it is due to life, all it is losing at the way it's raining.

13:37.350 --> 13:38.430
But just think about this.

13:38.430 --> 13:41.850
That it will not always be any meaning.

13:41.850 --> 13:47.610
It will not always be one, two or three can be any of the values in which you have to derive the relation.

13:48.150 --> 13:48.540
And.

13:49.480 --> 13:54.010
Right to hold every solution and finally tell me whether it's a losing position or winning.

13:55.720 --> 13:55.990
Well.

13:57.350 --> 14:00.320
So yeah, so this was very close in relation for this particular problem.

14:00.530 --> 14:05.780
And you can also do a bottom up tip which is start filling from zero 1 to 3 and so on.

14:05.830 --> 14:08.900
Dylan Or you can also call I the solution for this.

14:09.440 --> 14:11.570
Both of them will be very easy.

14:12.170 --> 14:12.430
They.

14:13.330 --> 14:14.130
So thank you.

14:14.140 --> 14:19.150
Here we have completed one more problem form from this one to anime programming.

14:19.930 --> 14:21.380
It's in the next part.

14:21.400 --> 14:21.760
Thanks.
