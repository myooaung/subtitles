WEBVTT

00:00.840 --> 00:03.960
Hello everyone, let's see this famous problem.

00:04.590 --> 00:12.500
And it's a slightly tricky problem, but it can be solved if you spend some time on it, like 15, 20 minutes

00:12.510 --> 00:14.580
now, you can easily solve it.

00:14.910 --> 00:19.170
You just have to see what happens with the last person.

00:19.710 --> 00:24.180
If you are able to see what happens with the last person, you will be able to figure out did the recurrence

00:24.180 --> 00:25.450
in it.

00:26.160 --> 00:28.500
So what we have is we have given n friends.

00:29.010 --> 00:33.120
Each one can be paired or stay single or can stay single.

00:33.360 --> 00:34.850
Each friend can be paired once.

00:35.730 --> 00:41.250
They cannot be paired multiple number of times, find out Total number of ways in which friends can remain single or

00:41.250 --> 00:41.760
be paired up.

00:42.500 --> 00:43.990
So it's a very, very famous problem.

00:44.010 --> 00:46.500
So for example, start with an example.

00:46.530 --> 00:50.280
If you have 3 friends one, two or three, what can happen?

00:52.360 --> 00:53.740
So the first case is simple.

00:54.250 --> 00:54.940
All of them.

00:54.940 --> 00:55.420
are single.

00:57.010 --> 01:00.340
The second case's let's say one two pairs up and three remain single.

01:02.060 --> 01:04.400
lets say one remain single.

01:04.430 --> 01:05.630
Two and three pairs up.

01:06.080 --> 01:08.210
Or 2 remain single.

01:08.210 --> 01:08.990
And one.

01:08.990 --> 01:11.360
Three pairs up right.

01:11.820 --> 01:13.100
These are the.

01:14.010 --> 01:18.360
Different number of ways in which this pairing and single thing can happen.

01:18.360 --> 01:18.660
Right.

01:18.750 --> 01:24.140
So basically what we are doing is either we are pairing them or they can remain single right.

01:26.700 --> 01:27.350
Tell me, guys.

01:27.370 --> 01:27.990
Let's say.

01:28.020 --> 01:28.500
Let's say.

01:29.980 --> 01:33.230
Let's see for every dynamic programming problem.

01:33.250 --> 01:34.510
There will be some options.

01:35.080 --> 01:36.460
You will be given some options.

01:36.850 --> 01:41.390
You have to weigh all the options, and you have to choose the best one, in combitorial problems.

01:41.410 --> 01:44.980
You have to weigh all the options and either add, multiply or subtract them.

01:45.310 --> 01:46.300
Depends on the problem.

01:47.020 --> 01:49.180
Therefore, there is always an option.

01:49.960 --> 01:50.850
Just remember this.

01:50.860 --> 01:54.760
You just have to go over all the options and look what's happening.

01:55.830 --> 01:57.580
So let's have these three things.

01:58.570 --> 02:02.410
So let's talk about the first or the last one of them.

02:02.650 --> 02:03.430
It doesn't matter.

02:03.490 --> 02:03.810
Right.

02:04.310 --> 02:06.640
So let's talk about the third, third friend.

02:07.480 --> 02:10.470
And let's say there were some other friends instead of third.

02:10.480 --> 02:11.160
Let me say.

02:11.170 --> 02:11.790
nth friend

02:12.280 --> 02:14.680
cool, let me generalize it.

02:15.610 --> 02:17.030
What about the nth friend

02:18.330 --> 02:20.250
He can remain single so.

02:20.250 --> 02:21.850
in How many ways can he remain single?

02:22.840 --> 02:23.240
Simple.

02:24.190 --> 02:30.760
If I have 1,2.. n-1 friends, I can ask the number of ways they want to be paired up

02:30.760 --> 02:31.600
or remain single.

02:31.600 --> 02:32.890
It doesn't matter to the nth.

02:33.340 --> 02:36.240
One right, he can remain single if he wants to right?

02:36.430 --> 02:38.080
So if he wants to remain single.

02:39.110 --> 02:46.880
That means can I say that f(n) is equal to simple f(n-1) first case why, when nth friend is

02:46.880 --> 02:55.100
single, nth friend is single, if he's single then pair or do whatever you want to do with the

02:55.100 --> 02:56.030
n minus one friends

02:56.780 --> 02:57.890
But he will stay single.

02:58.950 --> 03:02.990
So where is the the answer kept of doing whatever to the n minus one friends?

03:03.200 --> 03:03.710
It is it.

03:03.770 --> 03:05.990
It is f(n-1) right?

03:06.240 --> 03:10.340
So of course, the DP state is very simply here that n is the number of ways.

03:11.420 --> 03:12.970
Number of ways of.

03:14.230 --> 03:14.740
pairing or.

03:18.200 --> 03:20.090
Not pairing means being single.

03:22.540 --> 03:23.170
n friends

03:23.950 --> 03:25.540
n friends right.

03:25.700 --> 03:27.850
So I'm just writing it very quickly.

03:28.330 --> 03:35.240
My writing is not that good and so f(n) is f(n-1), which is when nth friend is single plus let's say

03:35.380 --> 03:37.750
nth friend does not want to stay single.

03:39.900 --> 03:47.580
Not single, he wants to pair up right, so let's say nth friend anything wants to pair up with someone right

03:47.580 --> 03:49.620
out of one, two and n minus one people.

03:49.620 --> 03:50.040
Anyone.

03:50.090 --> 03:53.330
right So let's say he pairs with with the n minus one.

03:54.150 --> 03:54.400
guy.

03:54.990 --> 03:56.340
right then where is the answer here?    

03:56.640 --> 03:57.870
So we have one pair, right?

03:57.870 --> 03:59.370
Which is n and n-1.

03:59.580 --> 04:00.480
now we don't know.

04:00.480 --> 04:05.220
We don't have to think what happens with the rest right because whatever happens with the rest that many times

04:05.610 --> 04:12.000
that pair can come in a series, right that can, that manytimes that pair can come in the combinations that we are

04:12.000 --> 04:12.390
making.

04:13.370 --> 04:13.610
Right.

04:13.760 --> 04:16.790
So if they both pair up, how many of them are left?

04:17.710 --> 04:18.910
We have n minus two left.

04:18.910 --> 04:19.210
Right.

04:19.390 --> 04:21.820
So we'll simply say f(n-2)

04:23.470 --> 04:25.390
right because nth one.

04:25.390 --> 04:27.770
is pairing with n-1

04:28.180 --> 04:29.770
How many are left n-2

04:30.070 --> 04:31.360
Now think about this case.

04:31.720 --> 04:36.730
Let's say he wants to pair up with not just n minus one, but there can be a pair of n minus two.

04:36.730 --> 04:37.040
Right.

04:37.070 --> 04:38.470
Which is n and n minus two.

04:39.130 --> 04:41.230
There can be a pair of n, n minus three.

04:41.500 --> 04:43.270
there can be a pair of n, n minus four.

04:43.840 --> 04:47.940
How many such pairs are possible for the last guy?

04:47.950 --> 04:48.550
nth guy.

04:49.450 --> 04:50.710
he is pairing with n-1

04:50.710 --> 04:53.770
And he can pair with any of them from one to n minus one.

04:54.220 --> 04:54.970
How many options?

04:55.940 --> 04:59.390
n-1 options, right so for all those n minus one pairs.

04:59.930 --> 05:05.180
What are the number of ways of assembling other guys, other people, they are f(n-2) right?

05:06.840 --> 05:07.530
Basically now.

05:07.530 --> 05:07.980
Let's say

05:08.700 --> 05:12.000
nth friend wants to pair up with the.

05:12.990 --> 05:16.890
n minus second guy, again will have n minus two only, right?

05:16.890 --> 05:19.760
Because he's pairing with n minus second guy.

05:19.770 --> 05:23.830
But still there are one, two, .. n minus three left and n minus one left.

05:23.830 --> 05:25.530
so, Total n minus two will be left right.

05:25.770 --> 05:28.560
We want to we want to assemble them similarly.

05:28.950 --> 05:29.220
Okay.

05:29.220 --> 05:33.350
So this was for if n pairs with n minus one.

05:33.390 --> 05:35.550
This was fourth and bears within minus two.

05:36.390 --> 05:40.980
And then there will be another, which is if n pairs with n minus three, which will be same, which

05:40.980 --> 05:44.430
is f(n-2) only because these two are a pair.

05:44.430 --> 05:44.760
Right?

05:44.760 --> 05:48.510
All the other can assemble themselves in the way they want to cool.

05:48.660 --> 05:50.760
So this will go until n minus one.

05:50.970 --> 05:55.710
So instead of writing f(n-2) again and again, what we can say, we can simply say that it is

05:55.710 --> 05:56.820
equals to nothing but.

05:58.360 --> 06:04.210
f(n-2) X n-1, because they can pair with

06:04.210 --> 06:04.810
anyone of them.

06:06.090 --> 06:12.000
cool, I hope you understood this recursive relation always guys there will be the solution in the

06:12.000 --> 06:12.840
problem itself.

06:13.980 --> 06:16.230
So what was the solution to the problem here?

06:16.920 --> 06:18.580
Can either remain single or be paired.

06:19.380 --> 06:21.470
Just have to consider two options for any one guy.

06:21.780 --> 06:24.870
If you're considering it for the first guy or the nth, it doesn't matter.

06:25.260 --> 06:27.180
You can think of it both the way it is.

06:27.360 --> 06:28.890
The difference between bottom up and top down.

06:28.900 --> 06:31.140
right think of it in any way.

06:31.320 --> 06:35.880
Just think about any one of them and derive the recursive relation.

06:37.790 --> 06:40.070
Which will apply on the others as well.

06:41.070 --> 06:41.290
cool.

06:41.970 --> 06:45.140
So, yeah, this was very easy, very simple, very classical problem.

06:45.150 --> 06:51.810
In the next part we discussed some more, very easy and classical combitorial problem and then we'll

06:51.810 --> 06:54.380
move on to some advanced problems

06:55.400 --> 06:56.120
cool, thanks.