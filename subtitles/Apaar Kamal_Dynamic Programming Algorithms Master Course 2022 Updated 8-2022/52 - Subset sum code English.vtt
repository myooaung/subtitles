WEBVTT

00:00.690 --> 00:01.590
Welcome everyone.

00:01.650 --> 00:07.290
So we have already figured out the recursive relation that we are forming by taking an element or not

00:07.290 --> 00:08.070
taking an element.

00:08.580 --> 00:10.890
And it's quickly ordered.

00:11.640 --> 00:15.360
But by using recursion, you're going to move forward or you can backwards.

00:15.510 --> 00:18.450
It does that your base case is will change it.

00:18.820 --> 00:22.530
So it's coded by using some backward approach maybe.

00:22.710 --> 00:23.040
Or.

00:24.210 --> 00:25.260
Let's call it what it is.

00:25.680 --> 00:28.020
Well I just want to know whether.

00:28.200 --> 00:28.750
Mhm.

00:28.990 --> 00:29.270
Yeah.

00:29.280 --> 00:35.310
In Italy I have some valley called some I think this has been put to the some Israel and what.

00:35.310 --> 00:35.670
See.

00:35.670 --> 00:36.750
Any, any.

00:36.750 --> 00:37.270
Uh.

00:37.350 --> 00:37.650
Yeah.

00:38.160 --> 00:40.740
The ETA is 274.

00:43.880 --> 00:44.480
By evening.

00:46.040 --> 00:55.760
If the at 8274 519 let's take this area globally because we will be using this at a in the OR you can

00:55.760 --> 00:57.200
also pass it in the function.

00:57.200 --> 00:57.790
It doesn't matter.

00:58.970 --> 00:59.630
It's a.

01:00.820 --> 01:03.190
Housing, food and.

01:07.590 --> 01:07.840
Oh.

01:08.700 --> 01:09.720
That's okay.

01:09.960 --> 01:12.750
So before this, let's think the size of the ad.

01:14.030 --> 01:14.960
Like two things, though.

01:15.560 --> 01:16.400
First is.

01:19.370 --> 01:19.510
Uh.

01:19.640 --> 01:20.030
Let's do.

01:20.390 --> 01:20.720
Okay.

01:22.270 --> 01:27.500
And the difficulties and size of the added that I've got after that lipstick.

01:28.640 --> 01:29.140
Areas.

01:31.110 --> 01:31.360
Well.

01:31.620 --> 01:33.480
So this is just some input stuff.

01:33.660 --> 01:34.320
It's happening.

01:34.860 --> 01:35.250
And.

01:38.260 --> 01:41.640
What I simply say is the out better subject some.

01:41.650 --> 01:42.670
It's possible or not.

01:42.850 --> 01:43.870
It's absurd.

01:44.740 --> 01:44.980
Some.

01:46.270 --> 01:50.890
And in Italy, what we'll do is we'll start with this absurd sum with a whichever approach you want.

01:50.890 --> 01:52.930
Do you want to go forward?

01:53.260 --> 01:55.030
It's also fine if you want to go backwards.

01:55.150 --> 01:59.800
Well, I just go backwards because then we'll be doing it with the tablet approach.

01:59.800 --> 02:02.020
Then we will equip it.

02:03.150 --> 02:03.540
So.

02:05.850 --> 02:06.240
Opposites.

02:06.630 --> 02:06.930
Yeah.

02:07.020 --> 02:07.590
X and Y.

02:07.590 --> 02:08.970
Have you had to give initially?

02:08.970 --> 02:09.120
What?

02:09.120 --> 02:09.540
I'll give.

02:09.750 --> 02:12.360
Tell me if this optimism is possible from the.

02:13.420 --> 02:18.700
Eddie and currently I'm on the last two nicks basically right now I'm talking about the second thing

02:18.700 --> 02:20.470
that we discuss is the prefix state.

02:20.830 --> 02:23.050
So you should not get confused with states anymore.

02:23.980 --> 02:31.210
You should know of what is a state and how we are propagating for the state and what is the same here

02:31.250 --> 02:32.620
and all the same value.

02:33.230 --> 02:40.120
We have both of them here, which is absurd sum and this is index.

02:40.630 --> 02:43.810
And instead of index you want me to read X and Y?

02:44.880 --> 02:46.080
Maybe index can also do.

02:46.740 --> 02:50.790
And the second is I'm that I'm trying to make from the prefix of this.

02:53.290 --> 02:59.770
This just tells whether some is possible from a subset of.

03:01.040 --> 03:04.030
I'm a I'm prefixed in.

03:04.980 --> 03:05.380
Index.

03:07.720 --> 03:08.290
Prefix of.

03:09.040 --> 03:11.280
Well, so what I have is I have just two options.

03:11.290 --> 03:12.760
What are the two options that I have?

03:14.410 --> 03:18.700
The first option is include AOE for NICS in the MSM.

03:20.770 --> 03:21.640
Exclude it.

03:21.700 --> 03:26.080
So you can just realize one thing the majority of the problems will be solved.

03:26.950 --> 03:32.350
Concluding or excluding the problems which involve subject and we'll be solving lots of problems.

03:34.210 --> 03:36.820
The second is exclude indexing, do some aid.

03:37.240 --> 03:42.490
So let's make a boolean value called answer.

03:42.490 --> 03:42.970
Let's call.

03:42.970 --> 03:46.690
It follows initially that initially let's say it's not possible.

03:46.690 --> 03:51.970
And then what I'll simply say is I say answer or equals to.

03:53.000 --> 03:56.210
What is the value there that I will have to pass it?

03:56.240 --> 03:57.770
This absurd sum is possible.

03:59.040 --> 04:00.540
And I'm including index.

04:00.840 --> 04:04.020
If I'm including the index, there can be one condition.

04:04.530 --> 04:05.070
That means.

04:06.220 --> 04:10.240
It sum should be greater than equal to the index.

04:10.630 --> 04:16.150
That means if I'm including some value, I can have this degree a simple check.

04:16.600 --> 04:21.340
If this sum is greater than or equal to this, then only call this function, then only check whether

04:21.340 --> 04:22.510
the substratum is possible.

04:23.300 --> 04:23.500
Okay.

04:23.650 --> 04:27.820
So tell me if this absurdism is possible from the remaining year and what's the new sum that I'm taking?

04:27.820 --> 04:29.890
It is sum minus index.

04:30.490 --> 04:30.720
Right.

04:30.940 --> 04:35.050
So as we have seen, we already have this check with this sum is greater than or equal to index or not.

04:36.070 --> 04:39.250
If it will be anything other than this value will be greater than equal to zero.

04:39.520 --> 04:41.440
It will never go negative full.

04:41.630 --> 04:43.360
And what was the second part here?

04:43.390 --> 04:44.500
The second part is simple.

04:44.890 --> 04:47.410
If answer, answer already goes to.

04:48.420 --> 04:49.480
If I'm excluding it.

04:49.500 --> 04:51.920
So if I'm excluding, I simply say, okay, fine.

04:51.920 --> 04:53.360
Disappeared from the remaining area.

04:53.480 --> 04:55.040
And what's the thumbnail for me?

04:55.040 --> 04:56.900
Some only because I'm excluding the answer.

04:57.650 --> 04:57.850
Right.

04:58.160 --> 05:01.610
And finally, what I'll do is I'll return the answer.

05:03.260 --> 05:03.560
Well.

05:04.910 --> 05:07.040
So let me build this quickly.

05:07.250 --> 05:09.040
It's seeds look hard.

05:09.890 --> 05:10.220
Okay.

05:10.760 --> 05:11.750
There's one thing that's left.

05:12.140 --> 05:13.820
Right now I've got a staggered floor here.

05:14.540 --> 05:17.590
Segmentation four, eight borders of order, Stack Overflow.

05:18.210 --> 05:20.990
Because it is going on in like infinity.

05:21.170 --> 05:22.400
Because there's going to be this case.

05:23.050 --> 05:28.370
There's nothing that can stop this irrigation before next is equal to.

05:30.790 --> 05:33.460
It'll go from zero.

05:35.200 --> 05:35.560
Okay.

05:36.040 --> 05:39.130
Let's make index equals to zero.

05:39.610 --> 05:43.020
So if I make indexing go through zero, I want the first value of the element.

05:43.030 --> 05:44.380
Then I will have just to get it.

05:45.370 --> 05:46.150
It will need it.

05:46.150 --> 05:52.090
And we have this amazing question index zero or it will run through if somebody goes and there's other

05:52.090 --> 05:56.290
cases I can also make the base case as indexes equals three minus.

05:56.830 --> 05:58.990
That means I'm starting from a management.

05:59.320 --> 06:00.030
It's zero based.

06:00.520 --> 06:02.320
So I'm on the leaf note.

06:02.350 --> 06:07.570
That means I don't have any error left, and if I don't have any array left, I would simply return.

06:08.850 --> 06:12.210
I simply didn't bother somebody close to zero or not.

06:12.930 --> 06:17.040
If some will be called zero, it will return to the way it will end because index is minus one.

06:17.040 --> 06:18.300
That means I'm out of error.

06:18.300 --> 06:19.650
That means I don't have any left.

06:20.810 --> 06:24.900
It means no elements left for some.

06:26.220 --> 06:26.580
And it.

06:28.960 --> 06:29.200
Yeah.

06:29.260 --> 06:30.460
Let me build this.

06:31.730 --> 06:35.030
And that is one thing that we need to realize.

06:35.510 --> 06:38.840
Some will never go negative because we are having this check whenever I'm subtracting.

06:40.280 --> 06:41.420
And the second thing is.

06:41.690 --> 06:43.640
Index can go negative after zero.

06:44.180 --> 06:47.420
If index goes negative, I just simply remove it from.

06:48.380 --> 06:49.310
What does this mean?

06:49.340 --> 06:51.260
It means that, yes, this is possible.

06:52.520 --> 06:56.580
And what I'll do is I'll I'll do a very deep analysis on this problem.

06:56.610 --> 06:59.180
It's all from bottom up.

06:59.180 --> 07:00.440
Don't end up.

07:01.370 --> 07:08.330
You can also try to trace back the answer, which is very important because in every dynamic programming

07:08.330 --> 07:11.810
problem you can always trace back the solution.

07:12.200 --> 07:18.260
So in this, all we do will try to trace back the solution, basically will try to make that subset,

07:18.260 --> 07:19.760
which is giving me this particular sum.

07:20.030 --> 07:25.040
Of course, there can be many answers if there are many answers, but we'll just figure out one.

07:25.580 --> 07:28.160
Well, I hope this part is very clean.

07:28.160 --> 07:32.350
The next we will try to trace it back and then we'll try to optimize the memory.

07:32.870 --> 07:33.820
So a lot of things in this.

07:35.620 --> 07:38.030
And some of you might be wondering that study.

07:38.030 --> 07:40.450
Sorry, I'm spending a lot of time on this problem.

07:40.450 --> 07:43.300
I want to because I want these things to be very clear.

07:44.380 --> 07:50.290
And because it's just starting to be so there might be many problems in which you have to optimize the

07:50.310 --> 07:52.310
space, optimize some time.

07:53.470 --> 07:59.020
And maybe there are many problems which are not solvable by writing a equation.

07:59.140 --> 08:02.260
It is solvable by using a tabular approach.

08:02.260 --> 08:02.590
And eight.

08:04.090 --> 08:06.130
So all of that will come in handy for you.

08:07.050 --> 08:07.910
Well, and.

08:08.170 --> 08:08.400
Yeah.

08:08.800 --> 08:10.000
Now just one thing.

08:10.480 --> 08:12.910
What are the different unique combinations of index?

08:12.910 --> 08:20.290
And some it is it will be equal to and into some way so that we have here and into some it so.

08:22.860 --> 08:23.330
Okay.

08:23.340 --> 08:25.860
So I think it's not taken over here.

08:26.550 --> 08:27.660
And is that.

08:29.800 --> 08:33.670
And let me just let me just write some value, which is not possible.

08:33.700 --> 08:34.840
It's 8000.

08:35.820 --> 08:40.920
Housing will not be possible from these small values until and unless these values are repaid.

08:41.310 --> 08:42.450
But that's a different question.

08:42.480 --> 08:42.680
Okay.

08:42.720 --> 08:44.850
I'll just take that also united.

08:46.310 --> 08:47.640
So it's a follow up problem.

08:47.660 --> 08:49.340
What if the values are repeating?

08:50.270 --> 08:51.950
So it's a very interesting problem.

08:51.980 --> 08:52.610
Values that.

08:53.610 --> 08:54.900
Repeating it means.

08:57.410 --> 08:57.730
Okay.

08:57.740 --> 08:58.430
I'll take it.

08:59.210 --> 09:02.550
Well, so before moving to the problem, we just simply memorize it.

09:02.570 --> 09:07.310
So let's memorize it and we'll send in a memo, and it's like some big value.

09:07.700 --> 09:08.030
So.

09:08.600 --> 09:09.140
Well.

09:10.210 --> 09:11.170
Here's the memo.

09:11.170 --> 09:14.390
Value should depend on indexing to some aid.

09:14.710 --> 09:17.560
And right now, we don't have any specific constraints.

09:17.620 --> 09:20.680
So what we can do is we can have a dynamic.

09:22.430 --> 09:23.100
Mammary vision.

09:23.300 --> 09:23.870
It means.

09:25.370 --> 09:30.710
The memo added, This is true reality we are having.

09:31.070 --> 09:35.640
This will simply depend on the value of and in some we get to it.

09:35.660 --> 09:37.280
So what I'll do is nothing.

09:37.280 --> 09:39.080
But I'll just say is this memo.

09:40.720 --> 09:48.700
And I will simply say this is that memo and this way, and that is the first to nix the first variable

09:48.700 --> 09:49.410
which is index.

09:49.420 --> 09:50.680
So it is the number of rules.

09:51.100 --> 09:55.780
And then simply, I mean, I have some columns in this and then I just.

09:57.270 --> 09:59.970
Lisa is that columns by.

10:02.170 --> 10:02.450
Yeah.

10:02.530 --> 10:03.680
M okay.

10:03.760 --> 10:04.300
M is not.

10:04.300 --> 10:08.320
Yeah, it is some, but I'll say some plus one because you need one.

10:09.340 --> 10:10.420
I'm plus one.

10:10.660 --> 10:10.870
Yeah.

10:11.710 --> 10:12.270
So, uh.

10:14.230 --> 10:17.200
I'm plus one comma in Italy will fill it with minus one.

10:17.620 --> 10:18.070
Will it?

10:20.060 --> 10:22.190
So don't get confused.

10:22.210 --> 10:24.120
It's very simple thing.

10:24.130 --> 10:30.180
Instead of picking some fixed memory for memory, something like an Indian or an entertainer.

10:30.820 --> 10:31.080
Both.

10:31.350 --> 10:32.440
The values can change.

10:33.250 --> 10:37.770
What I've done is I've just have a dynamic instantiation, both when we know this value of something

10:37.780 --> 10:44.160
and we can simply this either to the vector that we have it and resizing the 2D vector.

10:44.410 --> 10:46.150
Initially, I'll fill it with minus one.

10:47.190 --> 10:47.550
And.

10:50.410 --> 10:51.580
Every living minus one.

10:51.580 --> 10:52.960
We all know how dumb and wasting.

10:54.430 --> 10:55.840
Agreement with Emwazi.

10:56.320 --> 11:02.920
It's a memo it makes and some it's not equal to minus one written memo.

11:04.790 --> 11:05.420
We've done this.

11:08.070 --> 11:10.420
Written memo and exam it and.

11:12.010 --> 11:12.460
Ms..

11:17.630 --> 11:17.890
Yeah.

11:18.350 --> 11:19.210
This extra record.

11:19.450 --> 11:20.590
You didn't mention Nixon.

11:21.000 --> 11:22.610
Otherwise, this memo.

11:22.910 --> 11:29.810
Index sum equals to ones I just saved by going back to normal memory in invalid.

11:31.500 --> 11:33.960
Well, not possible is possible.

11:34.050 --> 11:34.590
It's sick.

11:36.010 --> 11:36.310
Yes.

11:36.310 --> 11:38.790
Two is possible is nine possible.

11:38.830 --> 11:40.600
Nine is possible in multiple ways.

11:40.600 --> 11:42.850
That is, let's say, within 45.

11:43.830 --> 11:47.820
Eight and is friendly to possible.

11:49.230 --> 11:51.080
I think so.

11:51.090 --> 11:51.810
Not possible.

11:52.900 --> 11:54.970
I hope the subsequent problem is very clear.

11:55.630 --> 11:58.480
We saw all the follow problems offered as well.

12:01.120 --> 12:03.970
I'm optimizing memory and.

12:04.870 --> 12:05.610
And complexity.

12:05.650 --> 12:07.430
What is the complexity of the solution?

12:07.930 --> 12:08.920
It is indexing to.

12:09.980 --> 12:11.770
But those many states we are calculating.

12:12.980 --> 12:17.300
And they will be overlapping the problems in one repeatedly calculating.

12:18.130 --> 12:20.320
But it is a nix into.

12:22.460 --> 12:24.860
Well, and this index is nothing but an.

12:26.570 --> 12:27.410
Oh, thank you all.

12:27.710 --> 12:28.160
In the next.
