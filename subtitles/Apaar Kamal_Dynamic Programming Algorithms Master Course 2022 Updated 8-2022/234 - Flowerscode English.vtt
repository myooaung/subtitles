WEBVTT

00:00.850 --> 00:01.740
Welcome back, guys.

00:02.710 --> 00:04.500
So let's discuss this thing then.

00:04.510 --> 00:09.700
How can we find the maximum of some particular range?

00:10.270 --> 00:18.070
And what we want is we want to find the maximum of only those values whose edge that is.

00:18.070 --> 00:20.110
The heights are less than the current rate.

00:20.530 --> 00:26.020
So for then what we do is we go in and order and we solve the problem in an order.

00:26.320 --> 00:26.830
Let's see.

00:26.830 --> 00:28.110
How do we solve this problem in.

00:28.120 --> 00:30.460
In order, let me quickly copy.

00:31.730 --> 00:32.120
This?

00:32.630 --> 00:36.050
Well, I cannot copy their input, so let me try that input again.

00:40.090 --> 00:40.430
Got it.

00:40.450 --> 00:43.390
So let's take this input, which is, again, nine.

00:47.230 --> 00:48.610
It's about going in in order.

00:48.610 --> 00:48.970
Right.

00:49.450 --> 00:50.790
The order matters, basically.

00:52.620 --> 00:53.700
It's very important to you.

00:53.740 --> 00:55.380
It will help you in many places.

00:56.290 --> 01:00.270
So we have this nine and then Ford to.

01:01.230 --> 01:02.310
536.

01:05.430 --> 01:06.150
179.

01:08.940 --> 01:13.300
The next is the really values fix it.

01:14.550 --> 01:15.840
We have four, six, three.

01:18.460 --> 01:19.130
574.

01:20.960 --> 01:27.320
So before moving on, I just want you to go over the big mentoring section in this course where you

01:27.320 --> 01:29.230
can understand how this segment will work.

01:29.240 --> 01:30.050
What does it do?

01:30.620 --> 01:32.720
It just go over it once and.

01:34.960 --> 01:37.990
I'm back, if not already gone over.

01:38.290 --> 01:43.600
If you knew how to segment debug, how does it calculate maximum for a particular range in log of anything

01:44.020 --> 01:45.220
it's been submitted in.

01:46.610 --> 01:50.390
But here we what we're doing is we will be filling GDP venues.

01:50.390 --> 01:50.570
Right.

01:50.600 --> 01:51.770
So, first of all, let us.

01:53.210 --> 01:53.600
Just.

01:54.800 --> 01:58.040
Move to the smallest element, which is one here.

01:58.490 --> 02:00.350
So I'm moving to the smallest element.

02:00.350 --> 02:01.370
Let me index it to.

02:05.180 --> 02:08.930
They are the smallest element in the edge.

02:09.440 --> 02:10.090
That is the height.

02:10.130 --> 02:12.560
Smallest height is how much?

02:13.610 --> 02:14.410
One for now.

02:14.520 --> 02:14.710
Right.

02:14.900 --> 02:19.550
Well, of course, we know that all eyes will be from one to end because they have to be a permutation

02:19.550 --> 02:21.530
because they are all distinct and listening.

02:21.980 --> 02:25.020
I hope you didn't mistake that.

02:25.020 --> 02:29.140
All these are distinct and aldehydes are between one twin.

02:29.150 --> 02:34.070
So if they're distinct and they are between one, two and only, then all of them have to be a permutation

02:34.070 --> 02:34.370
from one.

02:34.370 --> 02:36.070
To make this more or less.

02:36.080 --> 02:36.860
How did we have it?

02:36.890 --> 02:39.290
We have one, the less common one.

02:39.290 --> 02:40.940
And then?

02:40.940 --> 02:42.680
Now what are the deep values, Mary?

02:42.710 --> 02:43.940
Let's call the zero.

02:45.200 --> 02:49.740
At least initially already we were losing marriages filled with zero knowledge.

02:49.790 --> 02:51.320
I'm just coming on this smallest.

02:52.770 --> 02:59.070
Height, which is fun though, for one guy, is what is the maximum for all the other values in the

02:59.070 --> 02:59.670
left of it?

03:01.580 --> 03:02.660
This is the left of it.

03:03.820 --> 03:09.700
This particular range from 1 to 6 eight was the maximum of the deep values is what we considered.

03:09.700 --> 03:11.530
All the deep values have been filled with zero.

03:12.070 --> 03:12.370
Why?

03:12.390 --> 03:13.980
Why have they been filled with zero?

03:13.990 --> 03:16.240
Because there is none which is smaller than one.

03:17.290 --> 03:19.060
So the maximum here is zero.

03:19.480 --> 03:27.000
And now what I'll do is I'll simply update the maximum plus E to the particular position of one eight.

03:27.040 --> 03:29.620
So let's fill it with zero plus.

03:31.450 --> 03:32.530
Fight, but just fight.

03:33.100 --> 03:33.310
Hate.

03:33.640 --> 03:35.800
The one gives me the best ending of fight.

03:35.950 --> 03:40.570
This is the deep value of one that we have already calculated using.

03:42.350 --> 03:45.080
The double volume approach to brute force eight.

03:45.590 --> 03:46.190
It was one.

03:46.490 --> 03:48.500
We can also see it was five only.

03:49.010 --> 03:55.550
Now let's go on to the second index aid because just wait for 2 minutes and then you will be realizing

03:55.890 --> 03:56.720
what's happening here.

03:57.050 --> 03:59.120
Let's come to the second biggest element.

03:59.930 --> 04:01.550
The second biggest element is to.

04:02.180 --> 04:04.650
Okay, so we are talking about this deep value right now.

04:04.670 --> 04:06.780
So what is what is the maximum on the left of it?

04:06.800 --> 04:07.430
It's zero.

04:07.880 --> 04:12.590
So the maximum plus is a value, which is eight zero plus eight is.

04:13.630 --> 04:13.930
It.

04:14.320 --> 04:17.140
Lets update this particular deep value with it.

04:18.100 --> 04:18.400
Cool.

04:18.940 --> 04:21.890
Now let's come to the third maximum value, which is three, of course.

04:21.910 --> 04:23.200
So we have three over here.

04:24.320 --> 04:25.430
Now you realize that.

04:25.670 --> 04:26.510
Why is this?

04:26.840 --> 04:29.390
Why updation in an order matters.

04:29.390 --> 04:30.500
And how does it work?

04:30.950 --> 04:32.870
Well, we have three over here now.

04:33.040 --> 04:33.460
For three.

04:33.470 --> 04:35.990
What we want is we want all the elements on the left of it.

04:36.650 --> 04:39.050
I mean, to fill the DB by values.

04:39.050 --> 04:46.910
We want all GDP values from zero or from deep one before such that at Jove this lesson at Joe five eight.

04:47.090 --> 04:51.380
So what the max is the max is it the goal is why is the max eight.

04:51.380 --> 04:51.680
Why?

04:51.900 --> 04:58.760
Why am I not getting why am I not getting 16 or 20 or six is right?

04:58.940 --> 05:01.550
Why am I not getting 16 or 20 which are greater than it?

05:02.550 --> 05:03.150
In this case.

05:03.150 --> 05:05.460
Why are those values filled with zeros?

05:05.850 --> 05:06.300
Because.

05:08.330 --> 05:11.670
Five and eight are greater than three rates.

05:11.780 --> 05:15.590
If they are greater than three and I am going in an order, they would be updated later.

05:16.500 --> 05:16.830
Eight.

05:18.240 --> 05:21.870
How many elements are updated to allow all those elements, which are less than three.

05:22.630 --> 05:26.550
So for all those elements, which are less than three out of date, they can be on the left or side

05:26.550 --> 05:26.900
of three.

05:26.910 --> 05:28.560
They can be on the right hand side of three.

05:29.190 --> 05:32.520
But I only want the maximum answer for the left hand side.

05:32.520 --> 05:39.570
So I'll just have a query from 0 to 8 minus one, and I just say, okay, this is the maximum location,

05:39.870 --> 05:42.300
just this is the maximum value.

05:42.300 --> 05:43.560
Just take it and use it.

05:44.310 --> 05:44.550
Eight.

05:44.550 --> 05:46.290
So why are these values filled with zeros?

05:46.290 --> 05:49.490
Because they have not been updated because they are greater than C.

05:49.530 --> 05:53.270
So I'm going in an order, I'm updating it in in an order towards the maximum.

05:53.320 --> 05:54.120
Have you got eight.

05:54.540 --> 06:00.780
So eight plus the current value of the current beauty of the is six.

06:00.780 --> 06:02.280
So it does exist 14.

06:02.280 --> 06:03.840
So let's updated 14 over here.

06:04.410 --> 06:05.970
I hope you're getting this eight.

06:07.740 --> 06:13.140
Well, now let's move on to the next part, which is or right after he comes forward.

06:13.770 --> 06:16.190
So on the left of it, there is none maximum value.

06:16.200 --> 06:17.040
So why do we want.

06:18.150 --> 06:18.750
We want.

06:20.150 --> 06:20.930
Zero, of course.

06:21.060 --> 06:22.880
So zero plus six will be six.

06:23.450 --> 06:26.030
Well, now this is a dip below four.

06:26.450 --> 06:28.120
Now, the next part is after four.

06:28.120 --> 06:28.910
We will have five.

06:30.460 --> 06:31.180
This is five.

06:31.810 --> 06:34.810
And what are the.

06:35.800 --> 06:37.870
Maximum values on the left of five.

06:40.600 --> 06:43.030
The maximum left of five is six in it.

06:43.390 --> 06:44.020
Do you guys buy?

06:44.020 --> 06:45.030
Am I getting six in it?

06:45.050 --> 06:45.550
No way.

06:45.550 --> 06:46.450
Is none of them zero?

06:46.450 --> 06:51.340
Because both to win for without less than five if to win for the less than five, that means they were

06:51.340 --> 06:55.810
updated earlier than five and if they were upgraded, that means they will have some non-zero values

06:56.710 --> 06:56.980
full.

06:57.160 --> 07:01.990
That means their DB was already calculated and updated now.

07:03.010 --> 07:03.590
Four five.

07:03.610 --> 07:04.710
What is the maximum amount?

07:04.750 --> 07:07.990
We have maximum to be it and it plus it is 16.

07:08.440 --> 07:10.270
Let me updated with 16.

07:11.090 --> 07:13.270
Well, now what's the next one?

07:13.270 --> 07:15.160
636.

07:15.760 --> 07:16.030
Yeah.

07:17.380 --> 07:19.780
Once again, let's find the maxim on the left of it.

07:20.080 --> 07:21.400
Levi, is this zero?

07:21.400 --> 07:22.900
And why are these not zeros?

07:23.740 --> 07:24.280
Because.

07:29.440 --> 07:32.380
Because this is greater than six.

07:32.380 --> 07:37.510
This has not been updated to come later by three, five, two in food and less than six.

07:37.510 --> 07:38.710
There have been already updated.

07:38.710 --> 07:40.420
Their DPI values are already calculated.

07:40.780 --> 07:45.490
So at any moment of time for a particular index, if I'm trying to have a maximum going on the left

07:45.490 --> 07:48.880
of it, we have only those values set.

07:49.120 --> 07:52.030
What is said means only those values are non-zero.

07:52.690 --> 07:53.050
They.

07:54.040 --> 07:58.640
Who's at, say, values, whose values are less than the current.

07:58.640 --> 07:59.320
That's a value.

07:59.560 --> 08:00.970
Because they were updated earlier.

08:01.780 --> 08:02.040
Well.

08:02.500 --> 08:02.860
And.

08:04.590 --> 08:04.920
Yeah.

08:05.170 --> 08:07.110
So what is the maximum on the left of it, guys?

08:07.620 --> 08:08.460
It's 16.

08:08.640 --> 08:08.920
Right.

08:08.940 --> 08:10.080
So 16 trees.

08:10.320 --> 08:10.880
19.

08:10.890 --> 08:12.450
So this will be updated by 19.

08:13.020 --> 08:14.190
Similarly, 48.

08:14.400 --> 08:17.400
Next updated the 16 plus forward is 20.

08:19.930 --> 08:22.570
So as you can see, we get we are getting correct value still now.

08:23.080 --> 08:25.030
And now what we have is we have seven.

08:25.390 --> 08:25.660
Okay.

08:27.600 --> 08:27.930
Sorry.

08:27.930 --> 08:28.470
Not seven.

08:28.650 --> 08:29.790
That that's one eight.

08:30.210 --> 08:31.870
No, not indexes the heights.

08:31.890 --> 08:32.820
So now the seven.

08:33.240 --> 08:33.800
Now Beyonce.

08:34.020 --> 08:34.200
Eight.

08:34.260 --> 08:34.680
Seven.

08:35.280 --> 08:38.250
The maximum the left is 2027 is 27.

08:40.210 --> 08:40.510
Cool.

08:40.840 --> 08:42.250
And now what we have, we have nine.

08:42.340 --> 08:44.020
So what is the maximum on the left of it?

08:45.120 --> 08:48.450
The marks on the left of your restaurant is 727 plus five is 30.

08:50.570 --> 08:51.370
Too late.

08:51.380 --> 08:52.370
So what's the answer?

08:53.030 --> 08:54.340
Okay, it's 31.

08:54.350 --> 08:55.400
I think I missed something.

09:06.120 --> 09:11.490
But in my world I did one thing wrong that I updated it before I did it.

09:11.490 --> 09:11.850
Seven.

09:13.160 --> 09:14.300
So let's update it again.

09:14.540 --> 09:15.770
Let's update 7/1.

09:16.310 --> 09:18.410
The maximum on the left is 19.

09:18.410 --> 09:19.520
The seven is 26.

09:19.550 --> 09:25.430
Now, I have to update it because if I update it first and after seven, that means I filled it with

09:25.430 --> 09:25.790
20.

09:25.790 --> 09:27.410
Now this drug is being used in seven.

09:27.410 --> 09:28.250
But that's not true.

09:28.250 --> 09:29.100
That should not happen.

09:29.150 --> 09:29.350
Eight.

09:30.840 --> 09:31.260
So.

09:31.470 --> 09:31.760
Yeah.

09:32.430 --> 09:33.120
But my bad.

09:34.810 --> 09:36.760
Just it will just take a minute more.

09:38.060 --> 09:43.760
We have eight, the maximum is 16, blissfully strong and the maximum here is 26 and five is 31.

09:44.000 --> 09:47.000
So the maximum among all of them is 31.

09:47.890 --> 09:50.400
Well, guys, I hope this has been very clear.

09:50.420 --> 09:52.570
Let's call it out now, eight.

09:52.760 --> 09:56.360
And I'm just erasing this code because we don't need it.

09:58.620 --> 09:59.360
Let's do one thing.

09:59.370 --> 10:00.570
It's it is only this part.

10:01.660 --> 10:02.800
And this deep part.

10:08.500 --> 10:08.870
Would it be?

10:09.050 --> 10:09.550
No problem.

10:13.530 --> 10:15.180
Well, now, what do we need?

10:15.210 --> 10:17.250
We need you moving in order.

10:17.250 --> 10:17.530
Right.

10:17.550 --> 10:18.390
So how do we move in?

10:18.390 --> 10:19.800
In order, I should.

10:20.280 --> 10:20.770
To move in.

10:20.770 --> 10:21.150
In order?

10:21.150 --> 10:25.470
What we have to do is we have to move in the sending order of these height weight.

10:25.680 --> 10:31.680
So what I can do is let's begin at and let's call it indicate Eddie, which will tell me that, okay,

10:31.920 --> 10:32.850
if I have one.

10:33.600 --> 10:35.820
If I have this one, then it is on which index?

10:36.390 --> 10:39.060
The index of one will be equal to seven.

10:39.060 --> 10:40.770
Index of two will be equal to two.

10:40.770 --> 10:42.840
Index of three will be equal to five.

10:43.680 --> 10:45.480
What a particular height.

10:46.110 --> 10:48.390
Hey, where is that height located?

10:48.400 --> 10:50.580
Where is the index of that look in the original area.

10:52.240 --> 10:52.430
Well.

10:52.570 --> 10:57.250
So let's take it equal to and plus one because all of them is one base indexed.

10:57.520 --> 10:58.300
So I think.

11:00.460 --> 11:01.450
Do not get confused.

11:01.450 --> 11:02.200
Let's take.

11:03.710 --> 11:05.330
Again, it's not everything went missing.

11:05.330 --> 11:06.500
Next, let's take everything.

11:06.500 --> 11:08.170
Zero vision mix, fool.

11:08.690 --> 11:11.810
So what I do is whenever I get a hit, I just simply subject it.

11:13.330 --> 11:17.140
I simply subtract the height by when I'm just doing your homework.

11:17.140 --> 11:18.490
Everything's aggravation index now.

11:18.490 --> 11:21.320
All the heights up from zero to n minus one, not from one to in.

11:21.760 --> 11:23.020
Well, that should not be an issue.

11:23.020 --> 11:26.410
It's a small thing to do, just a minor correction.

11:27.710 --> 11:27.950
I.

11:30.540 --> 11:31.650
So what next?

11:31.800 --> 11:35.610
Now let's start iterating over all the values from zero to n minus one, right?

11:35.880 --> 11:37.320
Where is the in next?

11:37.320 --> 11:38.910
Where this particular i.e..

11:39.470 --> 11:42.780
Okay, let's not call it a let's call it edge.

11:43.530 --> 11:45.690
Well, we are going for all the heights.

11:45.720 --> 11:47.520
So we'll start from height number.

11:48.870 --> 11:51.720
But we'll start from high number one initially.

11:51.940 --> 11:55.800
So right now, everything is, you know, based on how you do it.

11:56.100 --> 12:02.970
What I do here is I simply say that index of AGI is equal to it, that this particular height is located

12:02.970 --> 12:06.210
in this particular index, which I am kicking back here.

12:06.690 --> 12:06.960
Right.

12:09.090 --> 12:09.480
Okay.

12:09.480 --> 12:11.130
So here, we'll get the problem.

12:11.130 --> 12:12.390
Let's call it exit.

12:14.760 --> 12:16.020
Eight, let's call it.

12:16.020 --> 12:22.200
Edit Well, so this is the index and this is right now what we have to do is we have to find the maximum

12:22.680 --> 12:25.710
value of DB on the left over it on the left of the index.

12:25.710 --> 12:25.970
Right.

12:25.980 --> 12:31.800
So how do we do that to find a maximum in one query for a particular range will be within segment is

12:32.400 --> 12:34.380
eight lets you segment these case.

12:36.360 --> 12:38.720
And yeah, let me copy this story.

12:42.740 --> 12:45.110
So I have to structure here segmented.

12:45.110 --> 12:50.270
This part is already being explained to everyone how to update, how to query, how to build a segment.

12:51.050 --> 12:54.260
And of course, we won't be needing to build this for you, right?

12:54.290 --> 13:02.450
We will simply inventory directly by building it because it's decided by zero, because we don't have

13:02.450 --> 13:03.320
to do any calculation.

13:03.320 --> 13:05.030
Initially, everything is filled with zeros.

13:05.390 --> 13:08.480
We just have to update and query nothing else.

13:08.990 --> 13:11.930
So we don't need to build it in it, but.

13:13.410 --> 13:14.550
I won't also use it.

13:14.690 --> 13:14.950
They.

13:15.920 --> 13:18.010
So here we have our segment.

13:18.200 --> 13:19.370
So let's say you don't.

13:21.360 --> 13:22.650
It's initialize it by.

13:23.010 --> 13:28.290
And so it will handle the rest of the part which is initializing the driven.

13:28.800 --> 13:38.640
And now what I have to do is I'll simply say that okay API equals to nothing but 3.3 02i minus one eight.

13:39.240 --> 13:42.870
So this is the query part which okay.

13:43.320 --> 13:44.820
Yeah, this is the way I report.

13:45.150 --> 13:47.610
Otherwise I live zero not in the menu.

13:48.300 --> 13:49.860
And anything is.

13:51.120 --> 13:51.420
Yeah.

13:51.780 --> 13:52.650
No new places.

13:53.950 --> 13:59.440
So this is giving me the query, which is giving me the maximum value on the deep values on the left

13:59.440 --> 14:00.370
of oak.

14:00.370 --> 14:01.540
So it's not a value minus one.

14:01.540 --> 14:06.310
This is index minus one because the index is the index where it is being stored and.

14:07.560 --> 14:11.400
Similarly, it will be equal to the ADP index, not the API method.

14:12.450 --> 14:16.020
Now what we have done is we have done DP of that index for that particular index.

14:16.300 --> 14:19.890
Let's start let's say let's say I'm on six for this index.

14:20.100 --> 14:23.580
I'm taking the maximum from zero to index minus one in the tree.

14:24.060 --> 14:29.400
And whatever is the maximum, the DP index will be equal to the maximum plus if I.

14:30.380 --> 14:33.440
And again, the index of index.

14:34.310 --> 14:34.610
Cool.

14:35.990 --> 14:36.410
After this.

14:36.410 --> 14:41.150
What we need to do is so after they've found the deep value for the current.

14:42.500 --> 14:43.070
Index.

14:43.370 --> 14:49.490
I need to updated inventory so that it can be used for further indexes so it can be useful for further

14:49.490 --> 14:51.680
right before all the further right.

14:52.370 --> 14:55.730
I have to update the deep value industry they later updated.

14:56.980 --> 14:58.990
So how do I updated in?

14:59.170 --> 15:02.410
Just pass on the index in the value added index.

15:04.120 --> 15:06.580
Update DDP indicated.

15:06.580 --> 15:07.660
We have already calculated.

15:08.630 --> 15:10.430
Well, this bill, this.

15:12.980 --> 15:13.460
Okay.

15:13.470 --> 15:15.680
I don't see any errors as of now.

15:17.130 --> 15:22.470
Let's put into the appendix as of now and let's see whether we are getting correct answers or not.

15:23.790 --> 15:24.060
Full.

15:25.530 --> 15:25.760
Well.

15:28.340 --> 15:30.260
There is something that's not correct.

15:30.290 --> 15:30.980
That means.

15:38.290 --> 15:39.150
Um.

15:39.460 --> 15:44.320
Okay, so I'm getting forward here right on the, the first place.

15:44.320 --> 15:45.370
It should not be forward.

15:45.370 --> 15:47.290
It should be six.

15:48.520 --> 15:49.210
That means.

15:55.080 --> 15:55.350
Okay.

15:55.350 --> 15:55.800
Just as a.

15:57.140 --> 15:58.040
For all the indexes.

15:58.040 --> 16:00.260
Let's bring it up with you.

16:01.780 --> 16:02.590
If I.

16:04.540 --> 16:06.910
Because here we are again going in and order eight.

16:07.750 --> 16:07.990
Yeah.

16:07.990 --> 16:08.800
So we have six.

16:08.800 --> 16:09.640
It's 16.

16:10.920 --> 16:12.840
Six, eight, 16.

16:13.530 --> 16:14.820
Here we had four.

16:14.830 --> 16:17.430
But what we want is we want one.

16:17.580 --> 16:18.120
Be right.

16:18.120 --> 16:21.150
So there can be a little issue here.

16:22.530 --> 16:25.860
So I think it's working and this is what we need to do.

16:25.870 --> 16:27.630
Get away from the radio and explain this one.

16:28.560 --> 16:28.980
Yes.

16:29.580 --> 16:31.050
We stored it in the index.

16:32.930 --> 16:33.440
Yes.

16:34.010 --> 16:35.300
We should not get food aid.

16:35.330 --> 16:35.750
We should.

16:39.960 --> 16:40.350
Okay.

16:40.500 --> 16:42.890
Just give me a second and let me figure it out.

16:42.930 --> 16:43.800
The problem here.

16:49.880 --> 16:50.180
Okay.

16:50.180 --> 16:52.070
So initially we went on the third index.

16:53.400 --> 16:54.790
It is zero one, two, three.

16:54.810 --> 16:56.340
So this is not correct, right?

16:57.430 --> 16:58.150
Because.

16:59.200 --> 16:59.400
ET.

16:59.490 --> 17:00.730
It starts from zero.

17:01.950 --> 17:02.340
Buddy.

17:02.340 --> 17:02.760
Sorry.

17:02.760 --> 17:03.150
My word.

17:03.180 --> 17:05.580
So here, this index is not edge of edge, is it?

17:05.580 --> 17:06.890
Just index.

17:06.960 --> 17:09.060
Index of double edge.

17:11.130 --> 17:13.260
I didn't notice that.

17:13.380 --> 17:13.640
Yeah.

17:13.650 --> 17:14.820
Now we're getting correct answers.

17:15.830 --> 17:21.860
Eight elaborated I used at Dover just so it was giving us some value, but not the great value it which

17:21.860 --> 17:25.400
was stored at the particular index at ADX 88.

17:26.030 --> 17:26.270
Yeah.

17:26.300 --> 17:26.860
No, it's correct.

17:27.940 --> 17:28.240
Now.

17:28.240 --> 17:29.620
What's the final answer?

17:29.630 --> 17:36.520
This final answer is maximum of this maybe at it or what we can also do is we can simply say it is equal

17:36.520 --> 17:41.680
to 3.30 to 1 minus one the maximum value.

17:43.230 --> 17:44.900
Well with just 31 in this case.

17:44.940 --> 17:49.380
So where does the complexity of this you've been doing nothing but hashing the indexes.

17:49.860 --> 17:52.800
So this is of an operation, again, of an operation.

17:53.580 --> 17:55.530
So we initializing it of an operation.

17:55.890 --> 17:58.080
And in this loop, what we're doing is we are going to learn.

17:58.080 --> 18:04.530
And for all the end times, we are having one query which is of log in and updating the tree, which

18:04.530 --> 18:05.790
is again of log in.

18:06.180 --> 18:06.500
Right.

18:07.470 --> 18:09.860
What is the total complexity?

18:10.010 --> 18:13.370
And log in because we are doing log in to log and operation and things.

18:13.700 --> 18:15.840
There it is in log in and log in is fine.

18:15.860 --> 18:18.560
It works because and is 285.

18:19.100 --> 18:19.860
It's not a big deal.

18:20.840 --> 18:26.000
I hope you got this case, but how am I using segmenting and see it has become a really very small solution

18:26.630 --> 18:27.170
to it.

18:27.190 --> 18:29.390
Just not not big, right.

18:29.750 --> 18:35.990
And this is nothing with the input variables and we just we are just doing one thing, grading and updating.

18:35.990 --> 18:41.960
And because we are going in in order to avoid this order, help us do order helps us to.

18:43.120 --> 18:45.220
So I have this part, which is.

18:46.990 --> 18:54.520
Despite it, only those people whose Arab it is, whose it's Jesus, doesn't it say, and how do I handle

18:54.520 --> 18:54.730
this?

18:54.730 --> 19:01.930
Father took one maximal for all those values by simply equating indiscriminately with six the of offending

19:02.440 --> 19:02.790
nature.

19:02.800 --> 19:04.960
Here you understand how can they be be used?

19:05.200 --> 19:07.780
How can you advantage your district is be you isn't any programming.

19:08.200 --> 19:14.020
And now what we're doing is we are of course going one level above it is Q right now arrested you rid

19:14.020 --> 19:20.710
of lose their not only left so be ready for something new to be coming on your way right as it came

19:20.710 --> 19:21.370
in this problem.

19:23.450 --> 19:28.160
Let's admit this and not get it wrong answer.

19:30.600 --> 19:32.730
We have a streak right from here.

19:32.730 --> 19:34.080
We are getting correct answers.

19:35.670 --> 19:36.030
And.

19:37.970 --> 19:38.420
Okay.

19:40.570 --> 19:40.790
Right.

19:40.870 --> 19:45.790
So again, we see that, okay, in 173 milliseconds, we have gotten anything police.

19:46.730 --> 19:50.660
So thank you, everyone, and see you in the next tutorial.
