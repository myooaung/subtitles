WEBVTT

00:00.300 --> 00:00.590
Yup.

00:00.840 --> 00:03.570
Now let's solve it using one only.

00:03.570 --> 00:04.050
So you know.

00:04.050 --> 00:04.440
Right.

00:04.500 --> 00:04.830
That.

00:06.010 --> 00:08.590
If I'm calculating a particular row, I need the previous row.

00:09.700 --> 00:10.900
But what if that?

00:11.980 --> 00:14.090
We will throw itself as equals to the current.

00:16.440 --> 00:18.300
That means I can always override the data.

00:19.230 --> 00:19.830
Very simple.

00:20.310 --> 00:23.160
If I am feeling ExxonMobil, I want X minus one.

00:23.160 --> 00:23.670
Come away.

00:24.750 --> 00:29.220
And if I if I'm saying that, okay, I have only one rule and I'm just keep on updating the date on

00:29.670 --> 00:30.240
that means.

00:31.310 --> 00:36.410
I'd simply say that deep buy is nothing but articles to deep.

00:37.420 --> 00:38.410
Ex Goma.

00:40.720 --> 00:41.530
Five minus.

00:43.240 --> 00:43.640
Um.

00:44.630 --> 00:44.990
E.

00:45.330 --> 00:45.680
S.

00:46.730 --> 00:52.020
And what I'll do is if it is only one road and bike ubiquitous with this will just say this it is you

00:52.070 --> 00:54.320
b y or it goes to sleep y minus.

00:55.660 --> 00:58.120
And it will again and again will do the same thing.

00:58.120 --> 00:58.690
And it will keep.

00:59.660 --> 01:02.990
If you want me to give an example, I can that also.

01:03.020 --> 01:04.490
Okay, let's discuss an example.

01:04.550 --> 01:04.790
Yeah.

01:06.210 --> 01:07.420
But what is the first rule, guys?

01:07.630 --> 01:09.070
The first rule is.

01:10.350 --> 01:12.030
Now let's discuss the example here.

01:13.970 --> 01:15.410
Make things more clear.

01:17.700 --> 01:20.640
Where you can see the first row is nothing but zero.

01:21.810 --> 01:27.240
The base case is nothing but 12000.

01:31.490 --> 01:33.200
So this is the first of any list.

01:33.890 --> 01:34.250
Well, it's.

01:34.250 --> 01:35.940
I want to build the.

01:37.870 --> 01:40.570
Secondly, which is index as one.

01:41.020 --> 01:46.420
What I can do is on top of it, I can what I did, I can always see that any element is equal to.

01:46.900 --> 01:48.310
If it is true, it's true.

01:48.700 --> 01:49.330
Or.

01:50.720 --> 01:53.340
Back, which is a -88.

01:53.540 --> 01:54.590
That means minus two.

01:54.710 --> 01:57.470
That means this minus two without a bond.

01:57.800 --> 01:59.570
This minus two is this one.

01:59.780 --> 02:00.650
That means it can.

02:00.650 --> 02:01.700
It can be true.

02:02.210 --> 02:03.170
It's true.

02:03.740 --> 02:08.030
Again, this is equal to this or minus two, which is not true.

02:09.530 --> 02:11.540
Is this equal to this minus two?

02:12.440 --> 02:14.000
It's giving me true eight.

02:14.300 --> 02:15.350
But guys, tell me.

02:16.740 --> 02:18.750
Is the value true in this engine room?

02:19.500 --> 02:20.040
It's not.

02:20.940 --> 02:21.900
So what's the problem there?

02:21.930 --> 02:22.620
We are doing it.

02:23.070 --> 02:23.640
If I'm.

02:24.360 --> 02:24.900
It was zero.

02:25.230 --> 02:30.630
If I'm checking the previous value, this should be the value we just kept somewhere above its rate.

02:30.900 --> 02:32.370
It should not be manipulated.

02:32.370 --> 02:34.230
But I have recently manipulated it.

02:34.560 --> 02:38.700
What I can do instead of moving forward, what I can do is I can move.

02:39.600 --> 02:40.090
Backwards.

02:40.680 --> 02:41.820
Just by moving backwards.

02:42.070 --> 02:44.920
I'll be taking some value, which is on the left of it.

02:44.940 --> 02:49.560
If it is on the left of it, it will not have been changed because I'm updating backwards.

02:50.740 --> 02:51.130
Correct.

02:52.280 --> 02:53.990
So let me update it backwards.

02:55.970 --> 02:56.720
This is the first row.

02:56.740 --> 02:58.480
Now, let me fill in for the second.

02:59.000 --> 03:00.230
And let's move backwards.

03:00.470 --> 03:06.170
We'll also always say that BP is articles to BP.

03:07.470 --> 03:08.080
A-minus.

03:08.610 --> 03:08.940
E.

03:09.030 --> 03:17.340
I later A's in our case so always will check humanity which is the current goal of minus two is the

03:17.340 --> 03:18.470
current government is to true.

03:18.570 --> 03:19.950
No, it is not true.

03:19.950 --> 03:20.400
Not true.

03:20.400 --> 03:20.840
Not true.

03:20.850 --> 03:21.230
Will come.

03:21.250 --> 03:23.580
It will reach here and it will stay.

03:24.330 --> 03:26.220
And it will simply market as true.

03:27.260 --> 03:33.020
Eight and will read here, will read here in Lubec where you can easily see the event is equal to the

03:33.020 --> 03:35.600
second one, zero one and all zeros.

03:37.680 --> 03:39.240
Now, let's make the third rule.

03:39.870 --> 03:40.890
So what about the third row?

03:41.100 --> 03:42.450
Let's again, iterate backwards.

03:42.750 --> 03:43.770
And this is seven.

03:44.010 --> 03:44.310
Eight.

03:44.580 --> 03:46.500
We will be looking at J minus seven.

03:46.500 --> 03:48.390
That means previous seven value here.

03:49.610 --> 03:55.000
But tell me this minus seven will be minus one, two, three, four, five, six, seven.

03:56.590 --> 03:57.310
Is this true?

03:57.700 --> 04:00.130
Not true or this is this true?

04:00.160 --> 04:00.820
Not true.

04:00.850 --> 04:01.930
But this is this true?

04:01.930 --> 04:02.470
Not true.

04:02.800 --> 04:03.730
But for this.

04:04.990 --> 04:06.670
We can see that this is true.

04:08.250 --> 04:11.730
So if that's true, that, then let me be clear.

04:12.270 --> 04:13.110
Market is true.

04:14.780 --> 04:15.550
I hope it is.

04:15.560 --> 04:17.150
One, two, three, four, five, six.

04:19.740 --> 04:22.380
Well, now tell me what this is.

04:22.380 --> 04:22.980
Minus seven.

04:22.980 --> 04:23.280
True.

04:24.340 --> 04:25.280
No, it's not true.

04:25.300 --> 04:28.000
That means in bulk it will be zero only.

04:28.450 --> 04:29.110
And this?

04:29.110 --> 04:29.470
For this.

04:29.470 --> 04:30.070
It's not true.

04:30.070 --> 04:30.610
It's not true.

04:30.610 --> 04:30.910
Not.

04:33.680 --> 04:38.750
You can see in the third row, it's 1010000101.

04:39.020 --> 04:39.380
Okay.

04:40.430 --> 04:41.850
I mean, I miss this one.

04:41.870 --> 04:43.760
I miss the zero or the zero.

04:43.760 --> 04:46.490
Again, we can see minus seven issues while market is one.

04:46.940 --> 04:49.460
And now you can see that it's the same rate.

04:50.150 --> 04:51.230
Now, what are the four true?

04:52.070 --> 04:52.700
Minus four.

04:53.510 --> 04:55.180
This minus four is not true.

04:55.190 --> 04:56.150
It will not be true.

04:56.180 --> 04:57.320
This minus foot is true.

04:57.320 --> 04:58.700
So it will convert to.

05:02.220 --> 05:04.140
I hope you are able to understand it.

05:04.140 --> 05:10.530
How am I moving backwards and trying to update the values depending on these same values because it

05:10.530 --> 05:11.950
was calculated previously?

05:11.970 --> 05:17.220
Basically all the values on the left of it are actually the values which were gathered in the previous

05:17.220 --> 05:17.430
row.

05:17.850 --> 05:20.850
I can use them in this way.

05:20.850 --> 05:23.970
I can only use, you know, one rule and update my answers.

05:24.540 --> 05:25.620
Let me quickly code this.

05:26.070 --> 05:27.570
I don't think much more explanation is.

05:29.130 --> 05:32.460
In this case, we don't want this, which is a.

05:33.690 --> 05:33.880
Eight.

05:33.960 --> 05:36.240
So will have it be zero issue true because.

05:38.030 --> 05:39.120
I just remember one thing.

05:40.700 --> 05:41.720
There's only one rule.

05:43.400 --> 05:43.670
Andrew.

05:44.620 --> 05:44.950
Cool.

05:44.950 --> 05:50.950
So deep zero is true and it is false initially for all the same values.

05:51.730 --> 05:54.170
And what I'll do is let me removed.

05:57.440 --> 05:57.650
Now.

05:57.650 --> 05:58.910
We don't want to copy those.

05:59.870 --> 06:04.280
What I would simply say is I'll start there from some and we'll go backwards.

06:04.670 --> 06:07.670
But we don't want any disturbed values EP to.

06:08.950 --> 06:10.450
It would be.

06:12.530 --> 06:12.780
E.

06:13.850 --> 06:18.560
Or equals to a, b, j minus a.

06:19.610 --> 06:19.790
But.

06:21.750 --> 06:26.480
And one thing to check if a minus a I didn't.

06:27.720 --> 06:28.060
Zero.

06:28.590 --> 06:30.060
A district is must.

06:31.710 --> 06:37.440
So as you can see, what I'm doing is nothing, but I'm just seeing whether I did or requested the produce.

06:37.450 --> 06:39.740
And if it was true, it will remain true.

06:39.750 --> 06:41.220
I'm just taking orders for it.

06:41.910 --> 06:43.920
And finally, what will happen?

06:43.920 --> 06:45.240
I'll just simply print dubizzle.

06:47.640 --> 06:49.560
So for eternity, it's not possible.

06:49.680 --> 06:50.670
Let me check for my.

06:50.670 --> 06:52.350
Who are doing the cooking.

06:53.080 --> 06:53.310
Yeah.

06:56.130 --> 07:00.950
So what we did is we just took one rule and we keep monitoring for all the rows, but we're reversing

07:00.950 --> 07:02.820
in all the columns because we don't want any.

07:03.790 --> 07:06.400
Disturbed values, any updated values of the current rules?

07:06.420 --> 07:09.750
We are moving backwards and taking backwards values to the current.

07:11.040 --> 07:11.310
Eight.

07:12.300 --> 07:13.920
So this was another optimization.

07:13.930 --> 07:16.320
Now, what's the complexity and the memory complexity here?

07:16.410 --> 07:17.790
It is off.

07:18.570 --> 07:21.210
But what is the time complexity of.

07:22.890 --> 07:24.540
Off and into.

07:27.090 --> 07:31.110
And what's the memory complexity it of some.

07:32.230 --> 07:32.740
Always.

07:32.770 --> 07:37.640
So don't get confused because I might be using it later in problems as well.

07:37.640 --> 07:41.320
But at that time I want you to relate it to particular.

07:43.500 --> 07:43.860
Thank you.

07:44.160 --> 07:45.210
In the art.

07:47.430 --> 07:48.230
Also one more thing.

07:48.240 --> 07:48.570
Yeah.

07:49.020 --> 07:50.270
Before going forward.

07:50.340 --> 07:53.970
Feel free to optimize this code also for the values that.

07:56.230 --> 07:57.460
And then you realize one.

07:59.400 --> 08:03.870
You realize that now the what the would will be.

08:06.620 --> 08:07.670
It minus eight.

08:07.910 --> 08:12.530
But in that case, Ben went on to optimize the code when the values are repeating.

08:13.370 --> 08:18.540
You actually want the values of Y minus X, but for the same rule eight.

08:19.070 --> 08:24.650
In that case, what you can do is instead of moving backwards, this day loop will move forward.

08:24.950 --> 08:26.540
Start from zero and go to some.

08:27.840 --> 08:28.350
I hope you.

08:29.280 --> 08:30.000
Realize this.

08:31.400 --> 08:32.930
If not, spend some time.

08:33.380 --> 08:34.060
Think about it.

08:34.070 --> 08:37.310
When when the values were rebuilding, we actually did not need to do X minus.

08:37.310 --> 08:41.730
When we don't need to produce, at least we wanted value to be computed for this same role.

08:42.350 --> 08:46.700
We'll move forward in that case because we want that same rules, values to be updated.

08:47.000 --> 08:47.630
Not X minus.

08:47.630 --> 08:48.410
And it's excellent.

08:49.730 --> 08:51.010
In this case, we can move up.

08:52.890 --> 08:53.400
Oh, yeah.

08:53.820 --> 08:54.300
Thank you.

08:54.330 --> 08:55.230
See, in the next part.

08:55.830 --> 08:59.100
I hope you like this memory optimization of this problem.

09:00.600 --> 09:06.840
I went deeper into this problem because I wanted to give you an example, but from the next problem

09:06.840 --> 09:08.790
on which we want to go this deeper.

09:11.280 --> 09:11.670
Thank you.
