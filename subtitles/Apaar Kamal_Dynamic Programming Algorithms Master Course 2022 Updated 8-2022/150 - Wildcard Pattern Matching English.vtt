WEBVTT

00:00.890 --> 00:01.550
Hello, everyone.

00:01.960 --> 00:06.080
So let's call this problem wild card matching.

00:06.090 --> 00:11.420
So I've just taken these two problems of matching, which is regular expression matching, wild card

00:11.730 --> 00:12.500
adding matching it.

00:13.870 --> 00:20.240
But in this, what we're going to do is we have a Burton P and a stringers and we.

00:21.400 --> 00:23.740
There was special things in the pattern.

00:23.770 --> 00:27.430
The first is a question mark, and the second is a.

00:29.250 --> 00:29.530
Right.

00:30.090 --> 00:35.340
So it is that you would own borders in a burden, implement vital card burden matching with support.

00:35.520 --> 00:41.160
Question mark and start where the question mark can match any single character.

00:41.700 --> 00:42.240
It's important.

00:42.240 --> 00:45.030
It's not taking multiple characters or, you know, characters.

00:45.090 --> 00:48.960
It's exactly one character description marking match.

00:49.470 --> 00:49.770
Right.

00:49.770 --> 00:55.440
And the second is start can match any sequence of characters, including the empty sequence.

00:57.270 --> 01:05.130
So first of all, let me preface this problem because you can see the likes of 4307 and 191 are only

01:05.130 --> 01:05.970
the dislikes.

01:06.150 --> 01:09.480
I mean, the ratio between likes and dislikes is too huge.

01:10.860 --> 01:17.760
And then if I personally see that, then there should not be any dislike in this problem because it's

01:17.760 --> 01:19.890
a very nice dating programming problem.

01:21.300 --> 01:26.100
And it also says that the meeting should cover the entire input string, not partial.

01:27.150 --> 01:28.860
But let's see the examples here.

01:28.860 --> 01:29.760
It says the belly.

01:30.100 --> 01:35.460
And anyway, there's nothing to match because there is no question mark or star.

01:35.990 --> 01:39.630
Therefore, s will not match e.

01:39.720 --> 01:40.530
So it will be a.

01:41.630 --> 01:43.190
And Mitch, it will not be a match.

01:44.390 --> 01:45.710
Let me quickly if I did.

01:45.890 --> 01:47.120
It is wild card.

01:48.030 --> 01:49.710
Pattern matching.

01:50.370 --> 01:51.660
And yeah.

01:52.630 --> 01:55.560
And so this will not matter because there's no nothing to match.

01:55.560 --> 01:56.210
But what if.

01:56.220 --> 01:58.020
Let's say it was like this.

01:59.030 --> 01:59.900
Then this.

01:59.900 --> 02:04.580
ABRAMS to this and this gushing mug would have meshed with this, particularly because question mark

02:04.580 --> 02:06.320
and match any single character.

02:07.140 --> 02:07.450
Right.

02:07.800 --> 02:10.620
That means I can convert the question mark to a single character.

02:12.510 --> 02:16.740
What if it was a be a question mark?

02:17.340 --> 02:18.750
Then it would not have been a match.

02:18.750 --> 02:22.560
Because Bush and Marquez two options that it can take be or it can take.

02:22.680 --> 02:24.930
If it takes be, it becomes a baby.

02:25.560 --> 02:26.580
So it's not a match.

02:26.910 --> 02:29.130
Or if it becomes a, then it's again not a match.

02:29.130 --> 02:29.430
Eight.

02:30.120 --> 02:30.980
So, yeah.

02:31.850 --> 02:35.150
Second is it is Double-A and B stuff.

02:35.390 --> 02:36.740
So of course this is true.

02:37.280 --> 02:42.230
So it is anything, let's say B, C, D, E, F, and in blue I have only star.

02:42.890 --> 02:44.000
It will always return me.

02:44.000 --> 02:44.350
True.

02:44.360 --> 02:45.440
It will always match.

02:45.440 --> 02:46.730
Because Star can match.

02:48.390 --> 02:51.870
DOD can match any sequence of characters, including the empty sequence.

02:51.990 --> 02:53.010
This is important, right?

02:54.060 --> 02:55.200
Let me take some cases.

02:55.770 --> 02:56.400
What if?

02:56.700 --> 02:57.130
What if?

02:57.150 --> 02:59.400
Let's say it was start in Z here.

03:00.240 --> 03:05.810
Then it would have been a false statement because that can match any number of characters in this.

03:05.820 --> 03:07.860
But then where will this Z match?

03:07.890 --> 03:11.130
It will not be able to make it, let's say if it was.

03:12.370 --> 03:15.070
Da and here an effort.

03:15.790 --> 03:23.250
Also it would have returned true by because images of matches if and this dot images b c d.

03:24.450 --> 03:25.290
I can see this.

03:25.980 --> 03:26.410
Let's say.

03:26.440 --> 03:27.270
What was this?

03:27.270 --> 03:33.690
A b c d e f e a e f ocean.

03:33.690 --> 03:34.800
Mark, ocean.

03:34.800 --> 03:37.540
Mark, give me it.

03:37.630 --> 03:40.600
This good is ocean, mark.

03:40.600 --> 03:41.460
Question mark.

03:45.040 --> 03:47.770
We know, of course, in Margaret match exactly one character.

03:47.800 --> 03:49.530
So he's all matched here.

03:49.540 --> 03:51.640
And this match did this image to you.

03:52.270 --> 03:53.470
Now, what about the start?

03:53.510 --> 03:55.170
It didn't match anything, right?

03:55.180 --> 03:56.220
But still, it really didn't.

03:56.830 --> 03:58.180
Why should it return to movies?

03:58.690 --> 03:59.170
Because.

04:00.330 --> 04:04.170
It can match any sequence of characters, including the empty sequence.

04:04.320 --> 04:05.680
This is important, right?

04:05.730 --> 04:09.330
So right now, my start is not matching to any of the characters.

04:10.530 --> 04:14.040
What can start to not match or match with the continuous set of characters?

04:15.030 --> 04:17.610
And if I have some characters, they have to match.

04:18.630 --> 04:21.570
If I have a question mark, they have to match with only one character.

04:22.410 --> 04:23.850
So basically we have three options.

04:24.930 --> 04:25.710
The first is.

04:29.630 --> 04:30.080
Options.

04:32.010 --> 04:32.910
The first to start.

04:32.910 --> 04:36.180
The second is Ocean Mark and the third is character.

04:37.360 --> 04:39.760
Buddy Burton right now.

04:39.760 --> 04:41.740
Let's see how to solve it.

04:41.740 --> 04:43.430
And you all know how to solve it.

04:43.450 --> 04:44.620
I would just suggest you.

04:45.940 --> 04:46.570
Go ahead.

04:47.380 --> 04:50.230
Protecting the string is by making this pattern.

04:50.230 --> 04:50.770
And then.

04:51.820 --> 04:52.780
These are your pointers.

04:53.050 --> 04:58.270
And then think of the options in option one if I have starred as the downswing.

04:59.270 --> 05:02.270
And simply think about what all deep states.

05:02.330 --> 05:03.230
Am I pointing to?

05:04.610 --> 05:06.800
And just give me a second.

05:07.190 --> 05:09.800
I'm sorry I started the recording without getting laid.

05:10.370 --> 05:10.760
And.

05:11.030 --> 05:12.890
Yeah, so let me continue.

05:14.060 --> 05:14.230
Yeah.

05:14.270 --> 05:15.400
So this is the first option.

05:15.620 --> 05:16.970
The second option is the third option.

05:17.810 --> 05:19.730
But let's think about all the options.

05:20.810 --> 05:23.480
Let's take the easiest option, which is character.

05:23.660 --> 05:25.640
And this is the most easiest option.

05:25.670 --> 05:29.240
So let's say a string is us and B or what?

05:29.900 --> 05:30.140
Yeah.

05:30.320 --> 05:33.230
S and B, let's take S&amp;P.

05:34.640 --> 05:39.070
It's I was doing this and this thing and it's this thing.

05:39.080 --> 05:43.360
BS anecdote right now is nothing but our deep.

05:44.440 --> 05:44.710
Well.

05:45.160 --> 05:51.220
And the thing is, character right now is also at the end, it is like p e d that.

05:52.750 --> 05:53.110
Cool.

05:53.500 --> 05:54.700
And let's say that.

05:55.900 --> 05:56.180
Listen.

05:56.200 --> 05:56.920
This is a string.

05:57.820 --> 06:04.690
But I know is over here, Jaisal, where and what we will do, we will simply.

06:08.640 --> 06:11.910
Will simply try to match due with the rate I know my characters are.

06:11.910 --> 06:16.590
Assume that means as of I is equal to be off day.

06:16.650 --> 06:22.350
So in this case what I have to do is if both of them are equal, then go match the string and distinct

06:22.770 --> 06:23.570
input rate.

06:23.730 --> 06:26.240
So in this case, what will happen will be ideas?

06:26.250 --> 06:26.580
Nothing.

06:26.600 --> 06:33.180
But it will just ask your go and match and CPI plus one and a plus one.

06:33.780 --> 06:34.650
I hope this is clear.

06:35.340 --> 06:43.770
They're just going and going match I plus one and two plus one means margin strings will let me face

06:43.770 --> 06:44.010
this.

06:44.010 --> 06:46.290
Vala this is very easy than the normal case.

06:46.920 --> 06:49.220
Now, the second case is when I have.

06:50.760 --> 06:52.230
Let's take our kids for.

06:53.100 --> 06:54.450
Let's take a case for question mark.

06:54.450 --> 06:54.690
Right.

06:55.020 --> 06:58.950
Let's say they know we have question mark here and here.

06:58.950 --> 07:01.890
We have some characters, ABC or.

07:02.900 --> 07:03.710
What is this thing?

07:03.890 --> 07:06.320
I know we just worried about what is in the first place.

07:06.650 --> 07:08.660
Which character is in the first place?

07:08.660 --> 07:09.370
About the strings?

07:10.470 --> 07:16.370
Of course, in the setting too, there will be characters only, and there's also a case when there

07:16.370 --> 07:17.930
is an empty string in the script.

07:18.590 --> 07:20.060
For example, it's this no character.

07:20.060 --> 07:21.050
And I yes, this.

07:21.050 --> 07:26.030
And if it does these, then Bush and that means there are no characters will handle that case also.

07:26.630 --> 07:35.120
And yeah, so right now he has this question mark and this question mark, as we know, it can just

07:35.120 --> 07:36.500
match any single character.

07:37.220 --> 07:38.180
So it's very easy, right?

07:38.450 --> 07:39.920
So what it is, is.

07:41.280 --> 07:47.670
If there is an element over here, that means if I is not equal to the last, it means if it is not

07:47.670 --> 07:50.700
equal to the end, that means I is not over here.

07:51.840 --> 07:58.650
So if there is a character so I can simply write, it is like this that if I is less then as start nice.

08:00.210 --> 08:00.460
Eight.

08:00.660 --> 08:04.770
That means I is in the somewhere in the character zone.

08:05.370 --> 08:06.420
And I can simply say.

08:07.570 --> 08:11.380
If this is there, then I can simply say that BPI is equal to.

08:12.310 --> 08:13.450
What will this question mark?

08:13.570 --> 08:13.840
It will.

08:14.530 --> 08:16.720
It will just take one character into account.

08:17.250 --> 08:19.090
So it will take this it will match with the.

08:19.360 --> 08:24.790
And then what I have left to match I have left these two strings to match, which will be I plus one

08:24.790 --> 08:26.290
comma replacing.

08:27.350 --> 08:31.430
Well, this, but this is the normal iteration.

08:31.460 --> 08:36.770
If I have a question so you can see both of these situations I've seen if the character is named and

08:36.770 --> 08:38.360
also there's a match, match forward.

08:38.570 --> 08:42.680
If a question mark is there and a character is there, match it, move forward.

08:43.730 --> 08:46.820
And now we're on the next case, which is.

08:47.830 --> 08:52.030
The final case and it is pushing mark so decided they started.

08:52.720 --> 08:53.800
Let me let me started.

08:56.020 --> 08:58.120
Well, here we are on this task force.

08:58.780 --> 09:02.820
And this task force is very important because it can measure one character.

09:02.830 --> 09:03.970
It can match two characters.

09:03.970 --> 09:04.630
It can match.

09:04.870 --> 09:06.370
You know, character chemistry.

09:06.370 --> 09:09.040
Characters of so.

09:09.940 --> 09:10.610
I'll go slow.

09:10.630 --> 09:13.210
Just try to understand this.

09:13.760 --> 09:18.850
But let me make a first case that if Starr is if there.

09:19.730 --> 09:24.070
I mean, the character is a star and the elite character is an empty setting.

09:24.080 --> 09:25.850
That means there's no character on the end.

09:26.450 --> 09:27.860
Then what can what going to happen here?

09:28.160 --> 09:29.870
If I is on the Yankees.

09:31.220 --> 09:35.450
Don't worry about what is, you know, beyond the start letter.

09:35.450 --> 09:36.500
The subject can.

09:37.010 --> 09:40.550
You don't have to worry about what is beyond that will automatically be solved.

09:40.550 --> 09:43.450
Right, because we are digging all the cases of challenges.

09:44.300 --> 09:49.580
You just have to worry about started the G8 position and I when Isaac was to start.

09:49.980 --> 09:52.670
Okay so let me just give some easier.

09:59.560 --> 10:02.150
This first and here we have a start date.

10:02.350 --> 10:06.760
So first case, first date is when I is equal to head start size.

10:07.750 --> 10:10.450
When it is on the end and the second cases.

10:10.450 --> 10:11.890
Otherwise it's.

10:13.090 --> 10:17.440
Well, if I don't as Jordan Bill will start still magic.

10:17.920 --> 10:18.290
Yes.

10:18.340 --> 10:22.210
Because we know that Star can match some unknown numbers as well.

10:22.780 --> 10:23.710
Let me give you an example.

10:23.710 --> 10:24.970
Let's see if it is ABCDE.

10:25.420 --> 10:28.240
And Bee Sting is also A, B, C, D and I start.

10:28.960 --> 10:29.710
Then it should return.

10:29.710 --> 10:30.220
True, right?

10:30.220 --> 10:32.380
Because Star will imagine empty string.

10:33.790 --> 10:34.060
Well.

10:34.610 --> 10:38.110
So I hope this is very fine because I can imagine them destroying.

10:38.590 --> 10:42.770
So in this case, guys, what will be your example means?

10:43.390 --> 10:43.930
Let's see.

10:44.880 --> 10:47.940
S is an empty string and is on the.

10:48.960 --> 10:52.250
Final push means it's an empty string and it starts here.

10:52.710 --> 10:59.130
What should be the dynamic programming relation here that eyes on the end and does over here?

10:59.850 --> 11:02.450
That an employment relation can be a deep idea?

11:02.820 --> 11:06.150
I command you and be equal to BP.

11:07.710 --> 11:10.020
I as a disclaimer.

11:10.230 --> 11:10.980
Duplass one.

11:11.950 --> 11:13.330
State that means.

11:14.290 --> 11:17.740
Go check for the next thing and match it with the empty string.

11:17.740 --> 11:24.250
Only because this time what I'm trying to do, I'm trying not to match state aid, for example.

11:24.250 --> 11:26.350
Let me give you another example, which is.

11:27.610 --> 11:27.720
This.

11:27.830 --> 11:29.060
This can be a good example.

11:29.060 --> 11:30.200
Let's say this girl.

11:31.690 --> 11:31.950
Right.

11:32.200 --> 11:35.890
And I know my eyes over here and my jeans over here.

11:36.340 --> 11:40.930
Right now I'm trying to match this string with this string.

11:41.350 --> 11:45.170
So if I'm trying to match these two strings, simply, what can the star do?

11:45.190 --> 11:45.970
It can match with.

11:46.180 --> 11:46.870
It can match with.

11:46.870 --> 11:47.620
Kate can match it.

11:47.620 --> 11:50.240
Then it can also not match with any of the characters.

11:50.260 --> 11:51.280
It can just vanish.

11:52.180 --> 11:54.850
So when the star vanishes, what happens?

11:56.010 --> 12:00.660
Of course, this is the elsewhere like estate when I have the Iot.

12:01.740 --> 12:07.740
RESIDENT eight But both the cases are kind of seen when this dog actually vanishes.

12:07.740 --> 12:10.350
It doesn't match with the Iot character.

12:11.250 --> 12:15.360
So if a star just vanishes, it doesn't match with the character, then what will happen?

12:17.150 --> 12:22.780
I still left whole asking to be meshed with the giblets, wanting to be mashed.

12:24.050 --> 12:24.860
I hope this is clear.

12:25.810 --> 12:26.240
Now.

12:26.950 --> 12:32.950
Okay, let me instead of seeing I go straight to George says let me see if we make cases in this way

12:33.490 --> 12:33.880
that.

12:35.950 --> 12:39.760
Matching zero candidates, matching one candidate's matching two character and so on.

12:41.820 --> 12:43.890
So the first case is when it matches.

12:45.630 --> 12:47.550
Zero characters, zero characters.

12:48.480 --> 12:52.050
But if it manages zero characters, then it is nothing more than the pages.

12:52.050 --> 12:56.670
And I think we are depending on Idbi, comma, d plus one because it didn't match anything.

12:56.880 --> 13:03.300
I will not increase that Candice when this title matches one character played by character.

13:04.620 --> 13:05.780
It matches fast character.

13:05.780 --> 13:11.600
That means one character instead of foster, one character, one character match of star.

13:12.560 --> 13:17.240
Then what will happen if you're just matching one character of the above string?

13:17.360 --> 13:20.520
That means a plus one, and the plus one needs to be matched.

13:21.250 --> 13:24.490
It would be a comedy will depend on AP.

13:24.890 --> 13:25.280
I.

13:26.340 --> 13:28.170
Plus one comma j plus one.

13:29.340 --> 13:33.960
And the other is the third case can be when it matches two characters.

13:34.590 --> 13:40.260
If it matches two characters, then you can easily see that in this case what will happen is star will

13:40.260 --> 13:41.580
match giant keyboard.

13:42.600 --> 13:47.400
So basically DPI icon magic will be let me get some space again.

13:50.880 --> 13:55.500
Divided will be called nothing where they pay less and less.

13:55.950 --> 14:02.160
But I hope you're getting this right by deep blows to NJ plus one because.

14:03.450 --> 14:04.020
Very simple.

14:04.170 --> 14:06.300
It's trying to match with two characters.

14:07.110 --> 14:07.290
Eight.

14:07.830 --> 14:10.680
And this was the case of zero characters.

14:10.680 --> 14:12.540
One character who character.

14:12.540 --> 14:18.280
And it will go on into how many characters it can match till the end of this thing is eight.

14:18.570 --> 14:20.690
But we just need to not think about this.

14:20.700 --> 14:20.930
That.

14:22.620 --> 14:23.530
Just give me a second.

14:24.080 --> 14:25.590
Thank you for that.

14:26.220 --> 14:33.240
Now you can see that all these characters, they're matching the zero character here, but the character

14:33.240 --> 14:34.800
here, two characters.

14:34.800 --> 14:39.210
It means this start and it can match to the end also.

14:39.960 --> 14:42.810
But of course, we will not be able to code so much.

14:43.080 --> 14:44.820
I'd like a plus one.

14:44.820 --> 14:46.170
I plus two I plus read will.

14:46.410 --> 14:50.100
It will take a four loop and then we learn about loop and coded rate.

14:50.430 --> 14:55.160
But then there is a better approach to actually minimize the code rate.

14:55.190 --> 15:00.240
And this approach is directly based on the approach that I've already discussed with you.

15:01.200 --> 15:01.590
Okay.

15:02.950 --> 15:09.880
And that isn't nothing but off, you know, using indirect contributions instead of saying that we are

15:09.910 --> 15:11.050
directly dependent on you.

15:11.380 --> 15:12.370
For example, this is.

15:13.380 --> 15:14.080
This is zero eight.

15:14.580 --> 15:16.640
This is first and this is second rate.

15:16.960 --> 15:19.050
So this one is again, let's see.

15:19.860 --> 15:21.240
Let me give some space.

15:22.470 --> 15:25.680
But as you all know, this is a recursive solution.

15:26.190 --> 15:33.090
And if I write it, it goes recursion in such a way that all these cases are handled by a normal recursion,

15:33.330 --> 15:34.470
then it would be very great.

15:34.680 --> 15:34.950
Right?

15:35.250 --> 15:35.970
For example.

15:37.630 --> 15:40.300
Let's see, these are zero character matching.

15:42.180 --> 15:49.410
So Azeroth character emerged and I wrote it like this, which is the API is equal to the API comma replace.

15:50.320 --> 15:51.480
One eight.

15:51.730 --> 15:53.530
And then I see that.

15:54.800 --> 16:01.940
Just match one character aid and kind of recursively now match all the characters, for example, one

16:01.940 --> 16:02.720
character match.

16:03.200 --> 16:06.740
And I see that it is equal to the by comedy.

16:09.060 --> 16:13.260
EPI I plus one because one character matched announcing.

16:13.500 --> 16:18.600
Yeah I'm not increasing the git point is just think about this I.

16:21.000 --> 16:25.290
For example, let's say I was doing A, B, C, D, and I had this.

16:27.130 --> 16:27.380
It.

16:28.090 --> 16:29.320
So if the zero.

16:29.440 --> 16:30.280
If it doesn't.

16:30.670 --> 16:31.630
If this da.

16:31.660 --> 16:33.250
Let's start evicting.

16:34.440 --> 16:38.580
If it doesn't match any character than what we have, then what I have.

16:39.750 --> 16:40.240
I have.

16:40.680 --> 16:41.520
I yes, it is.

16:41.520 --> 16:43.590
And Duplass way normal.

16:44.670 --> 16:47.070
But if knowledge it matches.

16:48.180 --> 16:48.840
This is a.

16:49.740 --> 16:51.780
This is, you know, let's measure this.

16:51.810 --> 16:58.470
It matches with the and I'm still still not increasing my eight it's I'm already increasing my G.

16:58.800 --> 17:00.090
What does it represent?

17:00.510 --> 17:05.010
It would represent to match this with this.

17:05.610 --> 17:09.930
Now, again, this is indeed the same thing that match this target B also.

17:11.040 --> 17:13.480
Think what I'm doing is whenever I have.

17:14.360 --> 17:15.140
I start.

17:15.170 --> 17:17.720
Whenever I start, I just do two types of matching.

17:18.020 --> 17:26.000
One is match with zero characters that we just ignored or match with one character's and still keep

17:26.000 --> 17:26.570
it in place.

17:26.960 --> 17:29.750
And that means still keep it automatic.

17:30.090 --> 17:31.190
They know what will happen.

17:31.200 --> 17:33.620
Let me show you if I use this approach.

17:35.430 --> 17:42.000
Because you all must remember in one of the previous lectures, I told you that this is going to come

17:42.480 --> 17:44.220
because it's an indirect state.

17:44.870 --> 17:46.020
I think we.

17:47.180 --> 17:48.200
From space.

17:49.470 --> 17:49.700
Well.

17:50.800 --> 17:53.000
Let's say I'm on zero zero.

17:53.020 --> 17:58.090
And what happens is I'm doing a one character match and this second zeroth character is a star.

17:59.080 --> 18:04.120
If I'm doing a one character match, then it will call it zero, comma, one and.

18:05.470 --> 18:09.100
If I'm doing one great damage, it will call one comma zero.

18:09.400 --> 18:09.660
Right.

18:10.730 --> 18:13.010
Now these are the zero comma one also.

18:13.640 --> 18:16.490
We know that on the first place we also we again.

18:18.110 --> 18:19.040
You know, in the first place.

18:19.040 --> 18:20.450
We don't have a star now.

18:20.630 --> 18:23.830
Okay, let me make example, ABCD and a star.

18:24.930 --> 18:26.520
Eight initially.

18:26.520 --> 18:27.060
What's happening?

18:27.060 --> 18:28.770
This is zero and this is zero.

18:30.240 --> 18:32.700
And I'm doing as you were correct no match.

18:32.730 --> 18:36.000
So what did seasons is zero one and 108.

18:36.330 --> 18:38.610
I'm just talking about this case, which is one zero.

18:40.150 --> 18:41.350
108.

18:41.470 --> 18:43.510
So I is over here and JS over here.

18:43.990 --> 18:45.190
Now again, what will happen?

18:45.550 --> 18:47.200
It will again divided into two parts.

18:47.590 --> 18:51.040
The first part is a comedy plus one, which is one comma one.

18:51.430 --> 18:55.030
And the second part is a plus one comedy with just two comma zero.

18:55.880 --> 18:56.150
Wait.

18:56.540 --> 18:57.530
So let me show this.

18:58.160 --> 18:58.730
Now this.

18:58.760 --> 19:00.830
What does this two zero represent?

19:01.310 --> 19:05.900
Doesn't it represent the this star is trying to match these two characters as well, and it's starting

19:05.900 --> 19:06.650
to move forward.

19:07.250 --> 19:10.440
Also, this means they are this.

19:10.450 --> 19:13.340
This is what took them a zero means that two characters matched.

19:14.570 --> 19:15.290
Who characters.

19:16.290 --> 19:16.830
Matched.

19:17.700 --> 19:20.220
And what is what does this one common one means?

19:20.670 --> 19:25.470
This means that this DA matched exactly one character.

19:26.070 --> 19:26.490
Correct?

19:27.690 --> 19:32.310
Just think about this ice over here and JS over here on the end.

19:32.520 --> 19:35.250
That means it's tarnished exactly one character.

19:36.650 --> 19:36.890
Right.

19:37.320 --> 19:37.880
So I.

19:38.180 --> 19:41.800
So am I not handling the case when it comes to characters?

19:41.810 --> 19:44.210
I'm also handling the case when it match one character.

19:45.170 --> 19:49.150
And I'm also handling the case when it matched zero characters.

19:49.730 --> 19:51.410
If I try to.

19:52.900 --> 19:53.850
Father, right?

19:53.890 --> 19:55.690
You don't like me, Father.

19:55.690 --> 19:56.630
I don't I?

19:57.130 --> 20:00.050
So of course it will end the way.

20:00.070 --> 20:03.900
Because nowadays on the first index, if Jay's on the first index, there's no star.

20:04.300 --> 20:06.260
I cannot match zero one character now.

20:06.880 --> 20:09.520
Now, I will simply have two more lines over here.

20:09.770 --> 20:10.870
So what are these two lines?

20:11.290 --> 20:11.770
It is.

20:12.790 --> 20:18.280
West is a comedy prison, which is Tacoma one, and the second is three going on when you go to zero

20:18.490 --> 20:19.990
eight, which is a plus one comedy.

20:20.680 --> 20:21.790
What does this mean now?

20:22.210 --> 20:24.040
They are liquidated.

20:24.400 --> 20:27.340
ABC, E, ABC and Mr..

20:28.260 --> 20:32.280
And so this Tacoma one means eyes over here and Jay's on the end.

20:32.460 --> 20:38.690
So this means that two characters that merged and this time I just two characters and have ended it

20:39.210 --> 20:41.880
now I mean it is totally merging two characters.

20:42.750 --> 20:44.850
Now what about the next case, which is.

20:48.020 --> 20:51.560
I'm in this case three comma 08430.

20:51.570 --> 20:52.160
What happens?

20:55.230 --> 20:55.910
These are very.

20:55.920 --> 21:02.040
Oh, so the eyes over here and jays over here, which means the three characters were already mashed

21:02.040 --> 21:05.430
from the start and I decided to match the old character.

21:06.390 --> 21:12.600
So basically these two operations mean only one thing that will start to match the current character.

21:14.210 --> 21:17.060
I didn't get it to match or it will not match.

21:17.090 --> 21:21.200
Do not match means stop matching the characters.

21:22.220 --> 21:27.200
But when I make both the combinations that match the cartoon character do not match the cartoon character,

21:27.500 --> 21:31.730
then I can make all possible combinations of matching.

21:31.730 --> 21:34.400
One, two, three, four, five, six and seven, eight electors.

21:35.180 --> 21:35.510
Eight.

21:35.540 --> 21:37.280
Because it's a it's a recursive thing.

21:37.280 --> 21:38.840
It's an I said recursive approach.

21:39.760 --> 21:41.170
I hope you got this point.

21:42.070 --> 21:47.980
Of course, guys, this will also work by starting from 012 and going on to land eight.

21:48.100 --> 21:54.760
But this will require a far loop for you to handle rate, and that volume will take an extra complexity.

21:55.060 --> 21:58.840
Whenever there's a story, you'll have to do much better than a four loop.

21:59.800 --> 22:00.280
Right.

22:02.240 --> 22:04.310
Making all cases recursively only.

22:04.310 --> 22:08.720
And that is by using these two of these two methods instead of.

22:09.290 --> 22:14.990
So we are not having a plus one we are having only deal with here, which will help me handle all my

22:14.990 --> 22:15.350
cases.

22:15.830 --> 22:17.270
Match it, don't match it.

22:18.020 --> 22:21.080
This this means match current character.

22:21.560 --> 22:23.240
Match current character.

22:25.400 --> 22:27.290
But this means magical in character.

22:27.530 --> 22:29.720
And this means the above means do not match.

22:29.760 --> 22:30.950
Be good in character.

22:31.700 --> 22:33.620
I hope this has been clear.

22:33.980 --> 22:37.400
But there was only one tricky case which was of this star.

22:38.550 --> 22:38.820
Right.

22:39.240 --> 22:42.390
And that's that's the most important case as well.

22:43.200 --> 22:46.020
And it is matching 012 in how many characters it can.

22:46.920 --> 22:47.160
Eight.

22:47.430 --> 22:52.680
You can go, you can corded in whatever way you want, but this will give you a time limit for a loop

22:52.680 --> 22:53.090
approach.

22:53.400 --> 22:54.650
And this is the other approach.

22:54.660 --> 22:56.060
It's a it's a special trick.

22:56.500 --> 22:56.700
Eight.

22:57.360 --> 22:59.640
This dog can formulate all my different.

23:00.730 --> 23:01.240
Approaches.

23:02.130 --> 23:02.390
Well.

23:03.210 --> 23:05.160
So in the next, we'll call it out.

23:06.000 --> 23:06.420
Thank you.
