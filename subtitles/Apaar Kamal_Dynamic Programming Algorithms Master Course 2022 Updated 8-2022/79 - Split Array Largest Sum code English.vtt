WEBVTT

00:00.670 --> 00:00.850
Yeah.

00:00.970 --> 00:04.110
So let's go to this problem and it's applied this recursive relation.

00:04.120 --> 00:10.960
So I've formed this solution edge and it's passing this by to the split array, which is calling the

00:10.960 --> 00:16.540
P zero, forcing the numbers at it and the partitions in which Apple Pay is starting from the zero to

00:16.540 --> 00:16.870
next.

00:17.470 --> 00:17.770
So.

00:18.770 --> 00:20.150
Let's say the answer is zero.

00:20.390 --> 00:27.770
And because of I can answer right to consider zero initially because the numbers are positive eight

00:27.980 --> 00:28.970
non-negative integers.

00:29.180 --> 00:37.460
I'm just taking the erroneously and yeah, let's do a j loop de will start from my ending and go to

00:37.460 --> 00:45.620
lesson and it's nothing but numbers not size eight so I'm so it means there's a partition from I do

00:46.820 --> 00:49.850
eight to how to and in this partition I want minimum of.

00:50.920 --> 00:57.140
This and what is a maximum of the sum that is currently being formed from the partition of i to g write

00:57.490 --> 00:58.990
the how can I handle that sum?

00:58.990 --> 01:03.760
Let's just quickly echo variable sum and it is some plus equals to number.

01:05.470 --> 01:06.720
Less equals to numbers.

01:07.730 --> 01:07.960
Yeah.

01:08.860 --> 01:11.200
And so this this building stood a very.

01:11.590 --> 01:14.440
It was a store to some or the current partition.

01:14.890 --> 01:19.690
And what is the maximum of the current partition and the minimum sum that I'm getting from the next

01:20.260 --> 01:22.780
of states, which is the plus one.

01:22.840 --> 01:23.110
Right.

01:23.410 --> 01:28.120
So let's find the plus one nums and m minus one, because I've just made this one partition for my duty.

01:28.340 --> 01:30.880
And this is reduce the partition on by one.

01:31.360 --> 01:37.040
Just remember one thing that this problem actually ask you to break the arrangement.

01:37.090 --> 01:41.110
Exactly an on going to go somewhere is exactly m this is important.

01:42.310 --> 01:42.610
So.

01:43.990 --> 01:44.380
We can.

01:44.620 --> 01:47.900
We can only make a partition when m is possible.

01:47.920 --> 01:53.230
That means if and means less than equal to zero, we will simply run something that we don't want.

01:53.230 --> 01:53.530
Right?

01:53.790 --> 01:58.240
So Indians, what I'm doing is I'm taking a minimum of things, right?

01:58.570 --> 02:02.320
So I'll just pass by name or I can alter by 27.

02:02.650 --> 02:07.600
Despite some very big value, I can also pass into max it by my passing.

02:07.600 --> 02:12.010
Big value because I don't want this to get next to affect my solution.

02:12.610 --> 02:13.900
So there's the same thing.

02:14.320 --> 02:21.730
If I if I want some, then I will and I want I look, I'm on a different path and I don't want those

02:21.730 --> 02:22.180
states.

02:22.630 --> 02:25.420
I just written zero so that zero doesn't affect myself.

02:25.450 --> 02:30.190
Similarly, things that won't affect my minimum is one you name because.

02:31.830 --> 02:32.220
Okay.

02:32.310 --> 02:32.790
So.

02:34.260 --> 02:35.700
I'm taking minimum age.

02:35.700 --> 02:38.220
So answers should be initialized with vanilla as well.

02:38.550 --> 02:40.980
But let's let's in it's late answer with something very weak.

02:40.980 --> 02:42.330
Then we can simply reduce it.

02:43.300 --> 02:43.530
They.

02:44.230 --> 02:45.520
And, uh.

02:46.700 --> 02:47.000
Yeah.

02:47.660 --> 02:50.000
And finally, let's write the base case.

02:50.030 --> 02:50.270
Okay.

02:50.270 --> 02:50.560
Let me.

02:50.690 --> 02:51.530
And the answer also.

02:54.240 --> 02:54.610
Okay.

02:54.630 --> 02:59.170
Because when we when we whenever we are forming something small, we take just something big.

02:59.200 --> 02:59.460
Right.

02:59.460 --> 03:00.720
So the base is a symbol.

03:00.720 --> 03:02.490
If Isaac was to last.

03:02.850 --> 03:07.260
That means nowadays, like if nowadays lived and is m is equals to zero.

03:07.530 --> 03:10.560
So the case there can be two cases and then M is something.

03:10.920 --> 03:16.950
But when there is an empty area, then I cannot divide it into somebody club until somebody say if I

03:16.950 --> 03:19.590
am in zero assembly at N0, that means.

03:21.270 --> 03:27.870
The sum obtained by dividing MDR into zero partitions is zero otherwise.

03:28.320 --> 03:29.760
Again, a very big value.

03:29.760 --> 03:30.180
Which is why.

03:30.180 --> 03:30.600
Any name.

03:31.350 --> 03:32.670
So let me build it and check.

03:33.840 --> 03:34.110
Okay.

03:34.140 --> 03:35.340
So here we go.

03:35.430 --> 03:35.970
18.

03:35.970 --> 03:37.230
Yeah, 18 is the right answer.

03:38.220 --> 03:42.120
So I just have these two conditions, which is if I am, is less than equal to zero return by name.

03:42.180 --> 03:43.920
So this can also be applied over here.

03:44.830 --> 03:50.370
Well, it cannot be applied over here because let's say I am is equal to zero and ice equals two or

03:50.380 --> 03:50.560
three.

03:50.590 --> 03:56.290
Then it written zero and not one, you name it, because that's a valid spot that I went to.

03:56.410 --> 03:59.170
I would do what is the meaning of this case?

03:59.170 --> 04:04.510
When I go through numbers that means there have been some partitions and m is equal to zero means there

04:04.510 --> 04:05.260
have been exactly.

04:05.260 --> 04:05.920
And partition.

04:05.920 --> 04:11.260
I don't want to make more partitions, so that's a valid basis basically.

04:12.140 --> 04:13.420
Otherwise, Ellen vanish nine.

04:14.520 --> 04:18.500
And finally, what we can do is we can simply memorize it.

04:20.160 --> 04:22.530
Vector and memo.

04:23.510 --> 04:24.540
Interdependent.

04:24.590 --> 04:24.870
Yeah.

04:24.890 --> 04:30.670
So it's actually at eight I you go to changing an M is also changing the vector vector into memories

04:30.680 --> 04:31.640
and it's just.

04:32.930 --> 04:34.850
It means like this memo.

04:36.940 --> 04:38.350
Daughtry says.

04:39.540 --> 04:40.610
Um.

04:40.650 --> 04:41.010
Okay.

04:41.400 --> 04:48.480
The first is now start size less one and the number of columns will be in plus one later.

04:48.990 --> 04:50.400
It will be a vector inside it.

04:51.320 --> 04:52.620
Actor and.

04:52.720 --> 04:53.960
And plus one.

04:53.960 --> 04:54.410
Come on.

04:54.620 --> 04:55.130
That's fun.

04:56.160 --> 04:58.130
Finally legislated.

04:59.010 --> 05:02.450
I'll simply say if I move, I am.

05:02.970 --> 05:06.510
It's not equal to minus one written memo.

05:06.630 --> 05:13.470
I am if I am writing it after the biscuits, because let's do them as equals to -1 to 8.

05:13.650 --> 05:20.190
Then it will go here in the index of minus one in my true you are learning they matter later.

05:20.200 --> 05:25.860
That's so we have to write it down after the biscuits because in here what will happen?

05:25.860 --> 05:33.540
I will be less than number versus that's what I want and M will be greater than zero.

05:34.140 --> 05:34.490
Correct.

05:35.660 --> 05:36.040
Oh.

05:36.170 --> 05:36.560
So.

05:37.130 --> 05:44.210
And also, if I miss greater than equal to zero eliminated, I is greater than equal to zero and I use

05:44.210 --> 05:47.720
less then num start base or instead let me it in.

05:49.040 --> 05:51.710
Eight and M is greater than zero.

05:52.070 --> 05:52.910
M is greater than zero.

05:52.910 --> 05:56.330
Then only I can make partitions.

05:57.080 --> 05:57.920
Partitions?

05:59.340 --> 06:02.970
And finally let me memories that savor Disraeli.

06:06.040 --> 06:10.480
So we have got it in here and we can take the next input, which is this.

06:12.480 --> 06:13.050
Yep.

06:13.260 --> 06:16.560
So that's why I prefer recording in Sublime over directly there.

06:16.560 --> 06:20.160
Because we can easily take the inputs and music, but only.

06:21.550 --> 06:23.000
We have nine books.

06:23.180 --> 06:24.470
So here goes.

06:24.650 --> 06:26.330
In the third case, we have an English two three.

06:26.330 --> 06:28.190
That means there's only one partition.

06:28.860 --> 06:32.600
There's only one way in which I can divide this out into three parties, and that is one, four, four

06:32.600 --> 06:33.410
single partitions.

06:34.140 --> 06:35.330
What is the maximum sum?

06:36.270 --> 06:37.680
The maximum sum is food and water.

06:37.680 --> 06:38.850
That's minimum is foot.

06:39.340 --> 06:42.910
It's a minimum of the maximum, not just the minimum rate.

06:43.020 --> 06:45.660
So that's why we are taking minimum of the maximum.

06:46.880 --> 06:50.150
So I hope some of you were able to solve it yourself.

06:51.230 --> 06:53.030
If not, just learn and move ahead.

06:53.480 --> 06:57.110
And let's move to the next problem after this.

06:57.560 --> 06:57.950
Thank you.
