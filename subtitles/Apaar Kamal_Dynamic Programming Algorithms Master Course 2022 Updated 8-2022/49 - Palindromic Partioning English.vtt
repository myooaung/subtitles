WEBVTT

00:00.740 --> 00:02.960
I all let's file this problem.

00:03.320 --> 00:09.020
And this is not exactly dynamic programming, but kind of dynamic programming.

00:09.560 --> 00:14.330
This is The Guardian through much of The Guardian and a little bit of memorization here.

00:14.840 --> 00:22.700
Let's read this and what I would strongly suggest, if this problem will actually make you understand,

00:22.700 --> 00:28.340
if you try to solve it yourself, you'll realize that how much your recursion is strong.

00:29.660 --> 00:31.700
This is a problem that makes you realize it.

00:33.170 --> 00:36.950
So let me quickly reread Sigourney Stringer's part in it.

00:37.190 --> 00:42.890
I said that every string, every substring of the partition is included in all possible sub domain partitioning

00:42.890 --> 00:43.280
office.

00:43.760 --> 00:47.030
But in Rumi, string is a string that reads in backward.

00:47.030 --> 00:49.460
And we know this will be.

00:49.730 --> 00:51.830
You can see this is one partitioning.

00:52.010 --> 00:52.760
It is a.

00:58.500 --> 00:59.250
Palindromic.

01:00.260 --> 01:02.900
Well, we have Abe first.

01:04.000 --> 01:11.830
But partitioning can be this new partitions that means to get paid and it is is a palindrome is a palindrome

01:11.830 --> 01:12.670
and B's a palindrome.

01:13.090 --> 01:17.740
The single this can be applicable for all possible things that we can get into.

01:18.430 --> 01:23.830
Again, partitioning is normally isolating, mutated it or it's very easy.

01:23.830 --> 01:25.510
It will be only the answer.

01:25.960 --> 01:29.000
And this takes some other random string.

01:29.560 --> 01:30.400
It's a.

01:30.400 --> 01:30.640
B.

01:30.640 --> 01:31.080
B.

01:31.100 --> 01:31.390
E.

01:32.440 --> 01:34.450
Well, in this case, what will happen?

01:34.930 --> 01:39.220
Of course, we know the first partitioning and maybe that means this.

01:40.170 --> 01:41.130
The second can be.

01:43.580 --> 01:48.290
Bebe Right, because this is also but in Rome, this is also a bedroom and this is also a bedroom.

01:49.110 --> 01:49.390
Right.

01:49.950 --> 01:54.570
And that can be this may be a this.

01:55.590 --> 01:56.370
This is about in Rome.

01:56.370 --> 02:00.360
This is about basically we have to retain all possible palindromic parties.

02:01.500 --> 02:02.760
So we all know.

02:02.760 --> 02:03.030
Right.

02:03.330 --> 02:04.560
So what is this function?

02:04.860 --> 02:09.360
This function is in a string is and it didn't factor of backtesting.

02:09.390 --> 02:14.100
Basically, it's an array of error which has strings in them.

02:14.550 --> 02:15.270
Something like this.

02:15.540 --> 02:17.610
This whole is an area inside it.

02:17.610 --> 02:19.830
It is an eddy and it has strings in them.

02:21.690 --> 02:24.600
I hope this is good way to.

02:25.740 --> 02:26.340
Was it?

02:27.210 --> 02:27.960
Already yourself.

02:28.380 --> 02:29.960
I would highly recommend it.

02:30.360 --> 02:33.120
Eight and then figure out the complexity.

02:33.150 --> 02:34.980
Try to memorize it as much as possible.

02:34.980 --> 02:36.600
And then I will.

02:37.660 --> 02:37.850
For.

02:38.080 --> 02:40.720
I go and I start coding.

02:41.680 --> 02:42.000
Yeah.

02:42.010 --> 02:44.200
So firstly what I've done is I've taken this thing as.

02:46.300 --> 02:50.060
My Michael and I have initiated this solution, which is nothing.

02:50.060 --> 02:50.210
What?

02:50.210 --> 02:51.720
I just graduated from it.

02:52.460 --> 02:53.600
So this is the best way.

02:53.870 --> 02:59.850
So what happened is copy the class into your here bus pass an input aid.

02:59.930 --> 03:04.970
So in this, what I'm doing is I'm passing this in breath that I'm taking as the input and I'm getting

03:04.970 --> 03:08.240
the resultant I can then put into the resultant.

03:08.240 --> 03:14.270
Let's print it auto x and and now I get to actually be a vector of string.

03:14.270 --> 03:19.610
So all the auto y in x ray coat.

03:22.900 --> 03:28.940
So I'm just printing whatever I get as a result, just to check whether it's correct or not.

03:29.150 --> 03:32.600
And let's just fill this pollution, the glass solution here.

03:33.200 --> 03:34.400
So here I was doing it.

03:34.880 --> 03:37.190
But firstly, I don't want to pasturing again and again.

03:37.490 --> 03:44.830
What I'll do is I'll simply say I just in this latest thing, in the solution to this as equals to s

03:44.840 --> 03:50.000
it's just it is just copying this string is into the above string.

03:51.170 --> 03:57.560
And so this is my way of calling it you all may be different, but this is what I always prefer.

03:57.710 --> 04:02.960
And then what I do is in the end, I'll just copy this glass solution wherever I fill it with and place

04:02.960 --> 04:04.670
it on the record and submitted it.

04:04.670 --> 04:08.790
Of course, I can directly quote it on record as well, but I prefer this eight.

04:09.760 --> 04:15.280
And finally, what I'll do is I let a function called DP and I say, okay, start partitioning from

04:15.610 --> 04:17.020
the zeroth index.

04:17.750 --> 04:19.750
Let's start the partitioning from the other NICS.

04:19.900 --> 04:22.900
But what we'll what we'll do is we'll have normal regression.

04:23.020 --> 04:24.010
This is normal regression.

04:24.400 --> 04:27.040
I'm on some index, i.e. what I did see.

04:28.240 --> 04:30.300
I will move in pointedly.

04:30.670 --> 04:36.600
And whenever I do the palindrome, see if I enjoy I read a function called is palindrome, right?

04:37.120 --> 04:42.670
If I indeed is a palindrome, then I will just say, well, this is a palindrome.

04:42.730 --> 04:50.530
Take this into my vector and give me whatever you have got from the next that is deep plasma.

04:51.340 --> 04:53.140
So it is kind of partitioning only.

04:53.140 --> 04:55.390
For example, I was talking about this example.

04:56.840 --> 04:57.800
Let's take this example.

04:58.560 --> 05:01.830
E Bebe the.

05:02.890 --> 05:03.340
Let's see.

05:03.340 --> 05:04.810
I'm making first grade over here.

05:04.870 --> 05:10.370
That means this is a 68 and this is the first year that I do this.

05:10.870 --> 05:15.700
So if I do do the palindrome, then from G plus one, I will see it could give me whatever palindromes

05:16.300 --> 05:21.460
in from whatever partitioning you can do of the next thing.

05:22.030 --> 05:23.460
I mean from the 11 to end.

05:23.650 --> 05:26.350
And I'll simply upend all of them in 80.

05:28.080 --> 05:30.090
I hope you're getting this point.

05:30.780 --> 05:33.390
Well, so that's what we will do.

05:33.480 --> 05:36.360
And the jihad as it goes.

05:37.410 --> 05:37.610
Yeah.

05:37.740 --> 05:38.820
So deep zero.

05:39.840 --> 05:41.820
So deep zero should than this thing only.

05:44.170 --> 05:50.980
AP literary let's call it I hate this is I'm on the current index from this index to end.

05:51.490 --> 05:55.830
I'll just move a pointer culturally to Diego from my Diego.

05:56.020 --> 05:56.560
Let's start.

05:58.060 --> 05:59.320
And what does this.

06:00.500 --> 06:00.890
Nothing.

06:00.890 --> 06:08.300
But I will ask if this thing is a palindrome for my 2G and let me ask it if is.

06:09.400 --> 06:11.780
Palindrome from Aida to.

06:13.050 --> 06:16.590
And how will this how will I take this?

06:16.590 --> 06:17.190
Let's say I don't.

06:17.190 --> 06:23.580
The function called boolean is palindrome will take i.e. and this will take somebody it.

06:26.520 --> 06:28.920
Let's see whether it is apparent over my NGO or not.

06:29.430 --> 06:31.320
Again, this this is palindrome.

06:31.560 --> 06:34.410
And we optimize this one normal.

06:34.630 --> 06:38.310
Let me quickly quote it normally and then we will optimize it later.

06:40.170 --> 06:41.490
So the normal way is very simple.

06:42.390 --> 06:43.140
You have an index.

06:43.260 --> 06:43.920
You have an index.

06:44.550 --> 06:47.640
So what you can do is you can move i indu towards each other.

06:48.120 --> 06:49.740
So what this palindrome has.

06:50.730 --> 06:55.620
I said, as if I should be able to as a subject means first in the last they should be seen.

06:56.670 --> 06:58.950
So what I will do is I simply move.

06:58.950 --> 07:00.980
I enter towards each other, right?

07:00.990 --> 07:04.680
So I will simply say very nicely, as inequality, what you do.

07:05.870 --> 07:12.080
If essay's not equal to essay, it involves simple if forced in the last year did not seem.

07:12.260 --> 07:13.800
Of course I learned the false rate.

07:13.820 --> 07:18.410
Otherwise if they are same then check whether inside being is a palindrome or not.

07:19.940 --> 07:21.500
Let me explain this very quickly.

07:21.560 --> 07:25.280
So let's say I was doing A, B, B, and I want to check from here to here.

07:25.280 --> 07:28.550
But it is a palindrome for palindrome to exist.

07:28.970 --> 07:30.230
These two characters should be seen.

07:30.290 --> 07:31.610
These two characters should be same.

07:32.030 --> 07:37.070
It should be, you know, it is like I think they are moving towards each other and all those characters

07:37.070 --> 07:38.140
should be same.

07:38.930 --> 07:48.300
So if I were if I have a palindrome of length outline, does this 001234567.

07:48.320 --> 07:54.230
So it's a it's of urgent as as zero should be equal to a seven as when should we go to a six as to who

07:54.230 --> 07:56.480
should we go last 5 minutes three should be equal to for.

07:57.410 --> 07:58.370
So I just have to point.

07:58.370 --> 08:00.350
Let's move towards each other and check.

08:01.370 --> 08:06.800
Then article written false are the race A-plus plus and minus minus more.

08:06.800 --> 08:09.830
Are you one step ahead and one step ahead and repeat the same process?

08:10.550 --> 08:14.750
If it doesn't return false anywhere and this loop breaks, that means.

08:16.190 --> 08:23.930
These islands were at Ingram so I just returned to the site and we we have already initialized as over

08:23.930 --> 08:32.900
here you can see already initialized as a video and that will use it correctly so I hope this is very.

08:35.120 --> 08:39.050
Now, what I've checked is that whether I do the palindrome or not.

08:40.620 --> 08:40.870
Yup.

08:40.990 --> 08:41.370
So.

08:42.350 --> 08:45.020
I know you have checked whether it is a palindrome, one not.

08:45.590 --> 08:48.950
And now what we will do is we will simply ask for the answer.

08:49.370 --> 08:51.340
It is after it.

08:51.440 --> 08:52.670
So let me.

08:54.910 --> 08:56.590
I have this thing called a.

08:57.540 --> 09:02.150
E b e a and I see this is I enjoy it.

09:02.190 --> 09:06.870
I think it is I equals to g right now and is equal to one.

09:07.500 --> 09:12.570
I will ask from G plus one because I've seen that I to do the palindrome raid.

09:12.780 --> 09:16.110
It can be one partition or tell me how many.

09:17.580 --> 09:21.720
Palindromic partisans are possible for distinct starting from displacement.

09:22.530 --> 09:25.050
And which function would give me that answer?

09:25.560 --> 09:26.130
This function.

09:26.970 --> 09:28.980
But what I simply do is.

09:30.790 --> 09:37.090
Vector vector string and I'd say it be the plus one to this function would give me the non centered

09:37.090 --> 09:40.740
missed ordered in resultant.

09:40.810 --> 09:41.410
It's a result.

09:42.670 --> 09:43.150
Now what?

09:43.150 --> 09:44.740
What does this result in contain?

09:45.250 --> 09:51.310
It contains all the palindromic partitions of the string from g plus one, doing basically the suffix

09:51.310 --> 09:52.480
starting a g plus one.

09:52.930 --> 10:00.370
Right now if I have all the following partitioning starting from g1 one plus one, what should I do

10:01.180 --> 10:05.950
for all those palindromic partitioning if I want them to start from my I have this partition called

10:05.950 --> 10:11.590
I to G and I have all the palindromic partitions from J plus one, two and eight.

10:12.040 --> 10:14.050
In all those partitions.

10:14.050 --> 10:16.000
In all those partitions I just push.

10:17.000 --> 10:22.490
The current partition right in front of all those partition, I just simply push the button partition,

10:22.490 --> 10:25.130
which is I told you to let me make a string.

10:25.730 --> 10:31.340
It's a string of string sub thing and let's call it.

10:32.370 --> 10:35.220
It's called a function which is start substring.

10:35.970 --> 10:40.380
And this function will give me the current substring, which is I to do eight.

10:40.380 --> 10:41.690
So it will start from me.

10:41.700 --> 10:43.400
And what is the length of this thing?

10:43.470 --> 10:44.580
I minus zipless replacement.

10:45.700 --> 10:48.760
Well, both of you have simply found this office.

10:48.910 --> 10:53.020
And what we have to do now, we have to just insert this obscene, which is a palindrome, which is

10:53.020 --> 10:57.880
a partition in front of all the partitions that are starting from J plus one.

11:00.060 --> 11:01.410
So how we answered that?

11:01.890 --> 11:02.130
Yeah.

11:02.460 --> 11:03.360
So for that, what?

11:03.420 --> 11:04.290
Let's do one thing.

11:04.290 --> 11:06.300
Let's quickly take the.

11:09.790 --> 11:10.090
On.

11:10.090 --> 11:10.930
Sort of active.

11:10.960 --> 11:11.440
Kind of?

11:11.800 --> 11:12.100
Yeah.

11:12.510 --> 11:13.990
And in design.

11:13.990 --> 11:17.140
So what we do is we keep on pushing.

11:18.010 --> 11:18.320
The.

11:19.810 --> 11:20.350
Interesting.

11:20.590 --> 11:26.050
And the other partitions that we have got from the next index replacement.

11:26.770 --> 11:33.850
Let's go over all of them before auto x and resulting that I know this x will be equal to a vector of

11:33.850 --> 11:34.270
strength.

11:35.320 --> 11:42.910
Now what I need to do is I need to push this vector strings that I have got in.

11:43.420 --> 11:47.110
Yeah, I have to push the current substring in the vector of things that I have got.

11:47.920 --> 11:48.880
So how do I push it?

11:50.150 --> 11:51.640
It becomes very simple.

11:52.090 --> 11:55.120
And what I can do is I can simply ask for insertion.

11:55.900 --> 12:02.110
I can say, okay, okay, insert index we're doing starting next insert at the beginning of X and what

12:02.110 --> 12:03.760
to insert substring.

12:04.880 --> 12:05.150
Right.

12:05.330 --> 12:09.050
And when I have got this insertion, when I've got the.

12:10.140 --> 12:10.650
Addition.

12:10.650 --> 12:15.480
What I can do is I can ask them to inserted into the resultant vector template.

12:15.500 --> 12:21.240
So this isn't a thing where I'm just putting the rest of it and it is inserting in the address of the

12:21.270 --> 12:22.130
x ray.

12:22.200 --> 12:25.700
So the wizard, when we a copy into it, I hope you'll know this part.

12:26.430 --> 12:27.660
So here we are, inserting.

12:28.810 --> 12:34.270
At the beginning of X, I'm inserting the dosing rate inserted in the beginning of x eight.

12:34.480 --> 12:38.470
So in all the partitions I have inserted this.

12:39.670 --> 12:40.160
Now sink.

12:40.450 --> 12:45.040
And after this, what will happen after, say, this lubricant and event?

12:45.070 --> 12:52.610
When I have inserted all the partitions, I will simply say that, yeah, for this island road, for

12:52.630 --> 12:56.770
this particular island, I've inserted all the partitions into the resultant here.

12:57.610 --> 13:04.360
So what I will do is I would simply say that in answer what is the answer is all the partition starting

13:04.360 --> 13:04.850
from here?

13:04.930 --> 13:06.700
I would only simply say that.

13:06.700 --> 13:07.090
Okay.

13:08.950 --> 13:14.590
Upend whatever there is in desert upended after the answers were late.

13:14.590 --> 13:16.720
So let's just iterate only quickly.

13:17.230 --> 13:21.560
I'll simply say four four outbreaks in Israel didn't simply answer that.

13:21.790 --> 13:22.270
Bush.

13:23.590 --> 13:24.090
Back.

13:24.240 --> 13:26.380
It's what I did.

13:26.470 --> 13:31.140
As for the children in front of all of them, I've inserted into something that I want to do in such

13:31.450 --> 13:32.410
a current upswing.

13:32.830 --> 13:35.530
And when I've inserted the currents of thinking all those partitions.

13:36.440 --> 13:41.480
I would simply push the total part that is the current substring, plus all those partitions.

13:41.750 --> 13:45.110
I'll insert all of it into the answer there.

13:45.110 --> 13:47.030
I need to return it and simply.

13:47.030 --> 13:47.840
Now let me.

13:48.260 --> 13:49.190
Yeah, let's.

13:50.350 --> 13:59.920
Pretend the answer to what I have got is if I equals to and the basis, then I will simply return empty

14:00.180 --> 14:00.540
to this.

14:00.850 --> 14:01.810
This should be empty.

14:01.810 --> 14:03.670
So let me put it this way.

14:05.300 --> 14:08.090
Well, I think they should work.

14:12.280 --> 14:13.690
They otherwise will initiate it.

14:13.690 --> 14:14.590
Let's build it once.

14:16.190 --> 14:16.550
Okay.

14:16.790 --> 14:18.580
So we are not provided any input string.

14:18.860 --> 14:22.890
Let me provide this input thing, which is a b, a.

14:28.640 --> 14:28.890
Cool.

14:29.000 --> 14:31.160
So let's see what's happening.

14:32.640 --> 14:34.230
I know we have started.

14:35.070 --> 14:39.090
At partition, this partition we're passing stringers.

14:39.690 --> 14:44.520
Getting stringers here and starting from DP zero eight and.

14:46.240 --> 14:46.640
Cool.

14:47.200 --> 14:48.820
I think this is simple.

14:49.180 --> 14:50.230
If it's a palindrome.

14:51.850 --> 14:54.020
Inserted and returned.

15:04.860 --> 15:05.050
Yep.

15:05.160 --> 15:07.380
So one thing that is.

15:08.580 --> 15:10.770
Not worthy of an IED.

15:10.920 --> 15:13.260
Then we added an empty victor.

15:13.680 --> 15:15.180
So if buried in an empty victor.

15:16.220 --> 15:18.080
Will this Ford Loop ever run?

15:18.380 --> 15:22.490
Because let's see, j plus one equals two as George size eight.

15:23.090 --> 15:24.650
What will this result in contain?

15:24.650 --> 15:26.030
It will contain an empty return.

15:26.510 --> 15:33.520
If it contains an empty vector, that means the current partition that is the suffix of this string.

15:33.530 --> 15:39.530
Eight This substring should be the subject of that string and this will not get appended in front of

15:39.530 --> 15:42.080
any of the vectors because it is empty.

15:42.500 --> 15:43.880
That means this for loop.

15:44.990 --> 15:46.850
This particular fall will actually.

15:47.900 --> 15:50.180
Not run because this land is empty.

15:51.170 --> 16:01.100
In that case, what we can do is if it just add an extra case that if the plus one is equal to either

16:01.460 --> 16:08.330
phase or instead of this, we can see that if resultant that we have got is.

16:09.220 --> 16:09.700
Empty.

16:12.400 --> 16:17.800
What the cases are saying because these are taken can never be empty if it is not pleasant, because

16:18.070 --> 16:23.290
you know that individual characters can always be violent roaming partition.

16:23.290 --> 16:28.600
All the individual characters, if they want to go straight or chase after, they're going to the empty.

16:28.930 --> 16:34.890
What we'll do is we will simply push a vector of the substring behind.

16:36.070 --> 16:37.150
Oh, yeah.

16:37.450 --> 16:38.890
We simply push this vector.

16:40.400 --> 16:45.260
It simply push this vector of string, which is the substring here after the resultant.

16:45.710 --> 16:51.920
And this is important because we are getting an empty vector over here.

16:51.950 --> 16:52.280
Right?

16:52.460 --> 16:54.890
So there may be various different ways to call.

16:54.940 --> 16:55.310
Right.

16:55.550 --> 16:57.020
And of course, I have named the DP.

16:57.020 --> 16:57.320
Right?

16:57.320 --> 17:03.140
So invariably we were going to emit anything I generally name in DP and I know it is not a DV solution,

17:03.140 --> 17:06.260
it is just normal recursive backtracking solution.

17:06.710 --> 17:06.990
Right?

17:07.250 --> 17:08.750
Just pure implementation.

17:08.750 --> 17:11.270
And nothing is just brute force solution.

17:11.510 --> 17:11.960
Which will.

17:11.960 --> 17:12.530
Of course.

17:14.710 --> 17:15.010
Yeah.

17:15.280 --> 17:15.730
Which will.

17:16.130 --> 17:17.730
So vigilant office.

17:17.740 --> 17:18.010
Yeah.

17:18.280 --> 17:20.380
In this case, the Land Office's 16.

17:21.520 --> 17:24.100
So for 16, this solution will always work.

17:24.100 --> 17:26.470
We'll figure out what is the complexity of the solution.

17:27.090 --> 17:28.450
Otherwise, we'll see.

17:28.720 --> 17:29.620
And then let me build it.

17:29.620 --> 17:36.370
And you can easily see that we have this output, which is a b, e e a b.

17:36.520 --> 17:37.840
So this is again a barren room.

17:37.840 --> 17:39.510
And these are all the elements.

17:39.880 --> 17:42.370
So let's save all defamatory.

17:43.330 --> 17:44.350
In this type of thing.

17:44.350 --> 17:44.920
What happens?

17:44.920 --> 17:46.090
Is that all?

17:47.300 --> 17:50.270
The individual elements are also present.

17:50.300 --> 17:57.010
Roaming partitions or all form of ones are also worth noting by addition to that also three the for

17:57.040 --> 17:57.600
folder also.

17:58.370 --> 18:00.760
So basically this will always desert me.

18:00.770 --> 18:07.730
So here you can see it is it made but when I need for I were to 16 so you might be able to see the relation

18:07.730 --> 18:14.780
that the total number of but it only partitions for I think was all this of things are this.

18:15.910 --> 18:22.990
But with all these other things are palindrome is to race to the ballot in minus one eight, and then

18:22.990 --> 18:28.390
this also equals to dividing, literally dividing five as a sum of some positive integers.

18:28.870 --> 18:30.990
So this can be one plus one plus one plus one.

18:31.000 --> 18:33.910
This can be one plus one plus one plus two.

18:34.060 --> 18:39.590
This can be one plus one plus two plus one, one plus one plus three and so on eight.

18:40.030 --> 18:46.790
So in that it is that question really, but it's just that we are basically checking whether whether

18:46.810 --> 18:48.310
something is a palindrome partition or.

18:49.990 --> 18:53.170
I hope you're able to understand this resolution.

18:53.170 --> 18:55.630
And of course, there can be different ways to record it.

18:55.660 --> 18:58.390
You can try your own ways that you want to.

18:59.170 --> 19:07.180
And yet one important thing that I want you to mention and is a reason why this is a particular recursive

19:07.180 --> 19:08.110
back tracking solution.

19:08.110 --> 19:13.090
I began it in the deep section because this can further be optimized.

19:13.580 --> 19:17.800
So let's optimize this because this is pure Drupal solution eight.

19:18.250 --> 19:21.280
And the complexity of this solution is also huge.

19:21.850 --> 19:27.270
And it is and in the duration of our and because you can see to this to the power and minus one, do

19:27.280 --> 19:34.060
we have these strings on the array and then we have to store all those string eight So the complexity

19:34.060 --> 19:37.110
of the solution is huge and let's optimize it a little bit.

19:37.660 --> 19:44.530
So here you can see for any I that is for any index, I'm trying to find all the palindromic parties

19:44.530 --> 19:51.970
and so I delete suffix idle the end of the string basically the starting your date and we know whenever

19:51.970 --> 19:59.500
this I is bingo always these partitions from Edwin will be same like we've been doing partitions from

19:59.500 --> 20:03.670
I doing will always be same they won't change invite only memories it.

20:04.730 --> 20:04.930
Eight.

20:05.420 --> 20:06.530
How can I memorize it?

20:06.890 --> 20:09.920
Because here you can see we have vectors and vectors of strings.

20:10.160 --> 20:10.450
Eight.

20:11.030 --> 20:11.780
So how can I.

20:12.800 --> 20:16.160
What is the best way to memorize this solution?

20:18.770 --> 20:20.270
Kennedy an area or something.

20:20.660 --> 20:23.660
Maybe array of vectors or vectors of strength.

20:24.080 --> 20:25.070
Is it possible?

20:25.070 --> 20:27.740
Or kinetic vector of vector of vector offspring?

20:28.250 --> 20:31.270
Basically what I want is what index I want, based or whatever.

20:31.280 --> 20:32.210
It's on citizen.

20:32.510 --> 20:35.750
And the answer will be of type vector of vector things.

20:36.510 --> 20:36.770
ET.

20:37.760 --> 20:37.950
Yeah.

20:38.090 --> 20:39.140
So let's win with it.

20:39.140 --> 20:40.410
And the best we could be.

20:40.440 --> 20:40.810
I've.

20:41.240 --> 20:49.250
I've already shared it that it's not always necessary to take arrays or, you know, vectors.

20:49.280 --> 20:50.520
You can always ah.

20:50.570 --> 20:52.620
Take some day to day map.

20:52.650 --> 20:52.950
Right.

20:53.430 --> 21:00.750
Let's say you take map of in from this vector of testing and call it MP eight.

21:01.160 --> 21:02.360
What will this map have.

21:02.360 --> 21:07.760
It will have it had the key value pair of integer and this vector of vector strings.

21:08.570 --> 21:15.560
What I can do simple if MP count discount function I think returns whether the you has a value or not

21:16.370 --> 21:21.620
MP not count I then I simply write an MBA which is normal memorization and in the end.

21:23.750 --> 21:24.530
I will simply.

21:25.560 --> 21:28.340
David, that embassy got to answer it.

21:28.920 --> 21:31.770
And we all know that map takes log in of everything.

21:32.690 --> 21:35.720
The word is inserting or we are deriving anything from it.

21:36.170 --> 21:41.690
If we are checking, it will take exactly log and and complexity, which is not much because this will

21:41.690 --> 21:43.610
help us optimize the solution a lot.

21:44.060 --> 21:50.630
It as we are trying to memorize it all the in all the indexes, I will be calculated exactly once you're

21:50.780 --> 21:55.940
going to you're going to eventually imagine that how much time we are saving optimization.

21:56.540 --> 22:01.370
Now there can be another optimization which is about this function called is palindrome.

22:02.810 --> 22:04.640
Whenever something is being called.

22:06.030 --> 22:07.350
I imagine it's been called.

22:07.770 --> 22:11.800
We are checking completely for a comedian whether it's happening to him or not.

22:11.800 --> 22:12.080
Right.

22:12.540 --> 22:14.820
But again, this can be done recursively.

22:16.110 --> 22:22.080
I want it explained in the later part of this course that how you can check palindromes recursively.

22:23.040 --> 22:24.000
So I'm recording it.

22:24.000 --> 22:30.150
But let me hint you, if you want to, you can whenever I want to check whether it will be the palindrome

22:30.150 --> 22:30.630
or not.

22:30.630 --> 22:34.770
What I can simply say if I do this up and into one not.

22:35.070 --> 22:38.010
I can simply say that I should be equal to see.

22:40.510 --> 22:45.040
That means first in Alaska, that should be same and the middle part of it.

22:46.280 --> 22:50.030
Which is from A-plus one to J minus one.

22:50.030 --> 22:53.560
That means masked characters and the middle string should be a blender.

22:54.410 --> 22:56.330
It took this is a normal recursive relation.

22:56.630 --> 23:01.250
You're going to also apply this recursive relation here and memorize it.

23:02.810 --> 23:05.330
Which can further reduce the complexity of your solution.

23:05.330 --> 23:09.890
But none of the memorization and of the none of these.

23:11.160 --> 23:14.400
Optimizations are needed because the constraints are very less here.

23:14.520 --> 23:21.360
It is so foolish to devour any kind of solution will work in this case and buy.

23:21.750 --> 23:27.660
And also, just remember one thing by memorizing we are only trying to save the time complexity.

23:27.660 --> 23:28.550
Just remember this, right?

23:28.560 --> 23:35.230
Because even if we don't memories, we will always have this answer, which is of which will have 16

23:35.250 --> 23:37.920
rows and it will contain all the vectors offspring.

23:38.760 --> 23:42.990
Even if I don't memorize it, even if I am memorizing it, the answer remains same.

23:43.000 --> 23:45.810
That means the space complexity of the answer is same rate.

23:46.080 --> 23:49.140
It just then I'm trying to save some time over there.

23:49.740 --> 23:51.350
Nothing at all.

23:51.810 --> 23:55.080
So that's all that I want to share in this.

23:55.410 --> 24:00.960
I did this problem because we have this next problem called palindromic partitioning too, which is

24:00.960 --> 24:04.320
again a very nice problem and it's already in the next part.

24:05.240 --> 24:05.600
Thanks.
