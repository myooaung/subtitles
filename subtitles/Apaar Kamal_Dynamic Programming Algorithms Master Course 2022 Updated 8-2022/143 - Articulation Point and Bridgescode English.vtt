WEBVTT

00:00.810 --> 00:01.130
Yeah.

00:01.140 --> 00:08.070
So when we're going into the code, when we are, when will be doing the DFC record and finding out

00:08.070 --> 00:13.770
the visited Louis Times we visited discovered and lowest times of note.

00:14.280 --> 00:21.330
So there is just a normal record of relation that I want you to understand that we're getting from something

00:21.330 --> 00:21.750
to help.

00:22.290 --> 00:27.930
It will help us speed up our time basically goal so that I'll go down vaccine over time.

00:29.410 --> 00:31.120
So what's the thing that I want to discuss?

00:31.120 --> 00:32.980
Is this there?

00:34.090 --> 00:35.080
Lowest of.

00:36.540 --> 00:36.960
But in.

00:38.270 --> 00:40.610
That lowest of current norm is minimum of.

00:42.340 --> 00:43.060
Lowest of.

00:44.430 --> 00:44.790
It's.

00:46.340 --> 00:46.980
There is x.

00:48.380 --> 00:49.910
Well, just one thing.

00:52.290 --> 00:54.430
So what is Louis O'Connor?

00:54.540 --> 00:56.760
It is a minimum of lowest of its time notes.

00:57.120 --> 01:01.590
And also it is like we can also say it is minimum of discovered of current old.

01:03.700 --> 01:03.970
Well.

01:06.010 --> 01:10.780
As it ended, the lowest, lowest of the current note will be equal to the discovered time of the current.

01:10.990 --> 01:14.050
If there is no wreckage, that means the current will be the lowest.

01:14.440 --> 01:19.390
Otherwise, if I am going to go back as that means, it will be the lowest of its download.

01:19.390 --> 01:22.750
So here you begin to categorize it, releasing that low of current.

01:24.250 --> 01:25.160
It's a minimum of.

01:26.330 --> 01:26.570
Of.

01:27.680 --> 01:27.960
Okay.

01:28.400 --> 01:30.980
It's a regressive deletion rate low end low.

01:32.380 --> 01:34.780
So we will be decoding this recursive relational.

01:36.050 --> 01:36.320
Guys.

01:36.560 --> 01:39.110
And when we get up, I guess we will update the name.

01:40.070 --> 01:42.140
Well, I don't think there should be a problem in this.

01:42.150 --> 01:48.850
So this is a debate that I am becoming part that we have to code disregards religion and memories.

01:49.580 --> 01:50.000
Nothing.

01:50.010 --> 01:50.900
Nothing big, guys.

01:51.730 --> 01:53.120
Well, so let's start.

01:53.300 --> 01:57.710
It's like quarter to maybe better just once would.

01:59.390 --> 02:03.440
It's it is working or not because I made some changes yesterday to surgeons working.

02:05.620 --> 02:06.600
So yeah.

02:06.610 --> 02:11.410
So we will be, we have a graph, so let's take a graph hidden in populated tree.

02:11.800 --> 02:14.980
The edges are not territory.

02:14.980 --> 02:16.150
Let's take a good graph.

02:16.900 --> 02:17.770
Let's take this one.

02:17.770 --> 02:18.640
The third graph here.

02:18.940 --> 02:19.120
Eight.

02:19.150 --> 02:19.870
So how many note?

02:19.870 --> 02:20.560
Seven nodes.

02:21.460 --> 02:22.120
How many edges?

02:22.120 --> 02:24.490
One, two, three, four, five, six, seven, eight it is.

02:25.440 --> 02:25.710
Okay.

02:26.100 --> 02:28.980
So now we can easily say that there were two packages in this.

02:29.610 --> 02:37.500
One, two, two, three, one, three, two, four, four, five, five, six, six, seven and four,

02:37.500 --> 02:37.890
seven.

02:38.760 --> 02:39.820
This is my graph, right?

02:40.400 --> 02:45.750
So generally what we do is let's take some posture and intend to make it really big.

02:48.150 --> 02:52.750
And it's steak and it doesn't exist for this stuff.

02:53.570 --> 02:53.820
Right.

02:54.500 --> 02:54.920
And.

02:56.080 --> 02:57.940
Take the two notes and.

02:58.780 --> 02:59.200
And.

03:01.500 --> 03:01.980
Ladies.

03:02.640 --> 03:03.840
So we are over here.

03:03.930 --> 03:04.980
We are going to end in them.

03:05.400 --> 03:07.710
Now, what we'll do is we will take the input.

03:08.130 --> 03:09.030
Let's take the input.

03:09.890 --> 03:10.160
Okay.

03:10.160 --> 03:11.450
So we have images.

03:12.930 --> 03:13.770
We'll see in.

03:15.650 --> 03:19.760
It's X and Y, you'll see an X and Y.

03:20.030 --> 03:23.600
And finally, what we'll do is we'll see a graph of accident.

03:25.800 --> 03:27.690
Push back by.

03:28.080 --> 03:29.580
And it's a addicted graph.

03:29.580 --> 03:30.090
So we'll.

03:30.960 --> 03:36.760
Simply take this back to a graph of why don't push back x is normal input.

03:36.780 --> 03:40.830
I think I should make this in a bit over where I don't have to go do it again and again.

03:41.250 --> 03:41.550
Pull.

03:44.840 --> 03:49.110
As we know, we have to performative history and its performative history.

03:49.130 --> 03:55.010
Right now I'm assuming that the graph is connected, so I just perform DFS from one by zero as it's

03:55.250 --> 03:56.030
fitting, right?

03:57.060 --> 03:58.380
But what are the things that we need?

03:58.590 --> 03:59.100
We need.

04:00.200 --> 04:01.070
Visitor data.

04:01.730 --> 04:03.710
We need discovery.

04:05.150 --> 04:06.560
We administrator discovery time.

04:07.100 --> 04:08.210
We need the third record.

04:08.210 --> 04:08.690
Lowest.

04:09.880 --> 04:12.320
We just saw the lowest time and we need a fourth time.

04:12.340 --> 04:13.240
We just equal time.

04:13.750 --> 04:14.930
Of course, I.

04:16.050 --> 04:16.380
Cool.

04:16.410 --> 04:17.960
So let's start this DFS.

04:17.970 --> 04:19.080
Let's perform this DFS.

04:21.680 --> 04:24.410
Here we are on the Korean continent and.

04:26.860 --> 04:29.140
This parent will be a parent, of course.

04:30.250 --> 04:30.700
Rachel.

04:30.730 --> 04:32.410
Initially, the painting did zero for one.

04:32.420 --> 04:34.050
So this is all normal stuff, guys.

04:34.120 --> 04:35.850
Give us normal height.

04:36.250 --> 04:38.260
Whenever we reach a note, what we say is we.

04:38.260 --> 04:39.610
Margaret, is visitor.

04:39.930 --> 04:41.650
A visitor, let's market us.

04:42.010 --> 04:43.810
But it has been visited.

04:43.810 --> 04:45.040
You can also dig in bullion.

04:45.040 --> 04:45.790
It doesn't matter.

04:46.480 --> 04:52.600
Well, and whenever we return or whatever it is that the discovered time of the current node is equal

04:52.600 --> 04:54.160
to the lowest time of the current note.

04:56.470 --> 04:58.780
Is equal to the time that I have.

04:59.350 --> 05:03.640
And then what we'll do is we'll simply increment their name up to this time plus plus.

05:04.180 --> 05:09.400
So that whenever we go to a new note, time is already being reminded we'll save their time and increment.

05:10.450 --> 05:13.040
What's better right to do this?

05:14.020 --> 05:16.360
Like Boost Incremented would.

05:17.990 --> 05:19.100
So what is this lane doing?

05:19.340 --> 05:24.530
It is initializing their discover time and the lowest time equal to the current time they're going to

05:24.710 --> 05:25.520
discover time.

05:25.910 --> 05:30.230
Whenever I'm moving to a new node, I'm incrementing this time by one eight.

05:30.230 --> 05:31.430
I just increment this way.

05:32.230 --> 05:32.390
But.

05:34.250 --> 05:36.890
So I hope this much is clear.

05:36.920 --> 05:40.880
Q Why am I making it equal to the current time for no listing?

05:41.210 --> 05:45.530
Because it has already been discovered that it is already being discussed.

05:46.410 --> 05:52.920
They're the lowest of current will be equal to minimum of all it's sold and their discovery of current.

05:53.280 --> 05:57.200
I'm already making it equal to their discovery of current will.

05:57.780 --> 05:59.070
Now let's perform their DFS.

06:00.110 --> 06:03.650
But Alteryx in a graph of current.

06:03.650 --> 06:06.050
So I'm moving on all the change of eggs.

06:06.680 --> 06:09.680
What will say what we do is if not visited eggs.

06:10.810 --> 06:11.860
It's an almost stuff, right?

06:12.400 --> 06:15.610
As if X is not visited.

06:15.610 --> 06:22.780
That means it is a we have to visit it or we have to go to it for the office x and current rules.

06:23.410 --> 06:25.600
Normal stuff, not big stuff they know.

06:26.500 --> 06:31.090
And the second is, as more does this adds to it is a package that means right.

06:31.090 --> 06:32.380
So we have one more condition.

06:32.380 --> 06:34.270
We've already discussed enough of this.

06:34.630 --> 06:36.190
It should not be going to parent.

06:37.470 --> 06:39.330
The X is not equal to parent.

06:39.330 --> 06:40.110
It is a package.

06:40.690 --> 06:45.870
Well, normally do office right now really just like applying other things to it.

06:46.350 --> 06:50.430
The first thing that we applied to it was discovered in listing of the current note.

06:51.620 --> 06:56.390
Right after I founded the Office of X, we have like.

06:58.320 --> 06:58.680
Here.

06:58.680 --> 06:59.730
We have come to know.

07:00.570 --> 07:01.290
Here we know.

07:02.260 --> 07:02.740
No.

07:02.740 --> 07:03.160
And.

07:04.380 --> 07:05.820
Discovered of X.

07:06.240 --> 07:11.140
We know that Luhan discovered times of x and we have already, but we have already gone to X calculated

07:11.140 --> 07:11.260
it.

07:11.790 --> 07:14.160
That's how that new programming on graph works.

07:14.820 --> 07:19.000
We go to an order, calculate all of its stuff when we come back to the above node.

07:19.020 --> 07:24.380
When we come back to the billion, then we calculated stuff using the stuff which was already calculated.

07:25.590 --> 07:29.580
The lowest of current is equal to lowest minimum of lowest of all the tables.

07:29.970 --> 07:30.540
So let me.

07:32.970 --> 07:39.120
Market here that lowest of current is equal to minimum outflow of current common law of.

07:40.260 --> 07:46.770
X Some of you might face some problems in this because it is an advanced topic, but I hope the logic

07:46.770 --> 07:47.550
part is clear.

07:48.330 --> 07:53.040
Some of you might be facing year y advisory done over here where it is hidden away.

07:53.220 --> 07:54.090
And why not here?

07:54.780 --> 07:59.460
For this I would recommend you are running a programming course where we have discussed a lot about

08:00.480 --> 08:03.990
dynamic programming on trees, graphs with masking a lot of things.

08:03.990 --> 08:04.250
Right?

08:04.890 --> 08:08.490
If you're not able to get there, if you're planning on going, it's not that clear to you.

08:08.500 --> 08:14.400
So it would be better if you created for us right there so we could debut on gaps.

08:15.580 --> 08:16.330
So yeah.

08:16.480 --> 08:22.180
So we performed the DFS, we went to X and Current and we say now at lowest of guarantee goes to minimum

08:22.180 --> 08:27.450
of lowest of current government of x, lowest of current will have the minimum value among all of x

08:27.460 --> 08:28.750
is will.

08:29.000 --> 08:30.220
So the lowest part is done.

08:30.540 --> 08:34.090
We have we are now we have not calculated the lowest value.

08:37.510 --> 08:39.370
Who goes after this.

08:39.850 --> 08:40.150
Okay.

08:40.330 --> 08:44.770
So whenever we get a package, what we do is whenever we get a package, let's take an example.

08:44.770 --> 08:45.610
We get a package.

08:46.630 --> 08:51.850
What we do is whenever we get a package out of all the discovery times of those nodes, we take the

08:51.850 --> 08:53.380
minimum eight.

08:53.780 --> 08:57.730
What we say is low of current is equal to minimum off low of current.

09:00.740 --> 09:02.330
Bomber discovered off.

09:04.810 --> 09:11.040
Always while discovered over here because it's in baggage, which I wonder this morning, do we need

09:11.290 --> 09:12.190
discovery time?

09:13.280 --> 09:13.570
Okay.

09:14.210 --> 09:18.170
So the lowest the low bar is done of calculating low.

09:18.200 --> 09:19.430
The discovered is also done.

09:19.910 --> 09:22.860
I hope you can easily understand it because it's not a big deal.

09:22.860 --> 09:24.500
You know, only two lanes.

09:25.070 --> 09:25.820
Only two lanes.

09:26.240 --> 09:29.720
This and this right now is the time to calculate.

09:30.020 --> 09:32.030
It's time to find out.

09:32.030 --> 09:34.760
Bridges and our relation points.

09:35.690 --> 09:36.830
Let's find out bridges.

09:37.940 --> 09:40.100
But what we discovered in the bridges, it flew off.

09:41.330 --> 09:44.240
X is greater than discovered of current.

09:44.270 --> 09:45.170
Then it's a bridge.

09:46.460 --> 09:48.300
We have a bridge between Xin.

09:48.350 --> 09:48.730
Got it.

09:48.740 --> 09:48.880
Right.

09:48.950 --> 09:51.650
So let me, like, make a vector.

09:53.590 --> 09:55.630
Feel right because this is a bridge.

09:57.030 --> 09:58.810
So let's call it Bridges.

10:02.740 --> 10:06.580
So it becomes bridges don't push back and let's push back.

10:06.580 --> 10:12.280
Current antics at this edge between current and accuser Bridget Place.

10:12.610 --> 10:14.410
And now let's talk about articulation points.

10:16.980 --> 10:18.300
Because it will be very small.

10:19.290 --> 10:20.280
It isn't that big.

10:20.850 --> 10:23.790
Normally affairs with rulings about law.

10:23.820 --> 10:29.820
Lois Lewis one notable one about discovered and finally making our conditions look.

10:30.450 --> 10:31.580
So how do we figure it out?

10:31.590 --> 10:35.880
Articulation boundaries should not be ruled, not how can we figured it out?

10:35.880 --> 10:38.160
That it should not be ruled is one thought.

10:38.160 --> 10:41.510
It has a unique bearing, which is zero.

10:41.520 --> 10:41.910
Right?

10:41.940 --> 10:42.420
So if.

10:42.990 --> 10:43.350
If.

10:44.960 --> 10:46.200
The rent is equal to zero.

10:46.220 --> 10:47.480
That means it's a it not.

10:48.590 --> 10:48.880
Right.

10:49.460 --> 10:51.800
So what we want is it should not be equal to zero.

10:52.190 --> 10:53.720
We didn't turn out to be equal to zero.

10:53.720 --> 10:58.580
And Novak's it regretted any value discovered of current.

11:00.300 --> 11:03.520
Hey, we're internally called zero and low effects.

11:03.540 --> 11:07.530
You're not be greater than equal to current discovered of caring that means.

11:08.490 --> 11:12.180
This continued can be a articulation point to let me.

11:14.080 --> 11:15.790
This vector and.

11:18.210 --> 11:19.440
It's better to take it.

11:19.530 --> 11:19.980
Why?

11:20.310 --> 11:21.510
Why do we need to take it?

11:21.600 --> 11:24.170
Because of it.

11:25.520 --> 11:30.310
I can have a node which can become articulating point multiple times, like five times during games.

11:30.320 --> 11:30.650
How?

11:30.800 --> 11:32.990
Let me explain you the letter.

11:33.000 --> 11:38.600
I have a node which is one, two, three, four, five.

11:39.610 --> 11:43.000
Look, this one is an articulation point because this surgery can come out.

11:43.030 --> 11:44.610
This one is an articulation point we got.

11:44.620 --> 11:46.930
This can also come out and so on.

11:47.800 --> 11:55.060
So a note can be articulation point multiple times because it's many somebodies can be connect themselves

11:55.840 --> 11:56.100
with.

11:57.630 --> 12:05.430
Instead of pushing them back in a vector, let's push them in a set so that I just get distinct, identical,

12:05.640 --> 12:06.900
unique nodes.

12:07.110 --> 12:08.820
Well, so let's say articulation.

12:10.580 --> 12:11.030
Points.

12:12.140 --> 12:14.630
What we have here is we have articulation points.

12:14.630 --> 12:15.380
Start, push.

12:18.430 --> 12:20.610
It is an automation, but very simple.

12:20.630 --> 12:21.440
It's not a big deal.

12:21.650 --> 12:24.290
I discovered then we are failing law.

12:24.410 --> 12:28.460
Then we are making our conditions and conditions that are also very related.

12:29.210 --> 12:32.400
Here we have this greater than here we are greater than equal to a.

12:33.300 --> 12:35.250
And so we have figured out articulation points.

12:35.260 --> 12:36.430
We have figured out bridges.

12:36.450 --> 12:37.710
We have figured out Lois Lane.

12:38.340 --> 12:40.290
Now only one thing is left.

12:40.320 --> 12:40.830
That is.

12:42.450 --> 12:44.670
He got out, whether it is an articulation point or not.

12:45.270 --> 12:48.780
Food is an articulation point or not.

12:49.590 --> 12:52.860
So if period is equal to zero, that means it's a root node.

12:53.690 --> 12:57.380
And it's down there means the number of giant.

12:58.450 --> 13:00.280
Is greater than one.

13:01.060 --> 13:03.250
That means it will be a articulation point.

13:04.250 --> 13:04.970
So.

13:07.290 --> 13:07.610
Not.

13:07.860 --> 13:10.300
Bush couldn't wait.

13:10.320 --> 13:12.660
So let's figure out how to get a little piece.

13:13.020 --> 13:15.000
Let's take a variable called Child.

13:15.690 --> 13:21.520
It's initially zero, but the number of times we are performing a dive is the number of times we going

13:21.520 --> 13:22.890
to do an order which is not visited.

13:22.890 --> 13:27.600
We will simply say child rest plus high number of times we are going to a new node.

13:27.600 --> 13:34.000
We are traversing that such child of the current note eight and simply we have got the child after this

13:34.000 --> 13:35.700
do this loop and.

13:36.690 --> 13:36.940
Right.

13:37.460 --> 13:39.280
We have experiences equal to zero.

13:39.290 --> 13:43.520
It is a road node and trying to get to them and we're doing an articulation point.

13:43.940 --> 13:45.320
The current will be an articulation point.

13:46.040 --> 13:49.940
I knew written back good for this graph.

13:49.940 --> 13:50.960
Let's build this once.

13:50.960 --> 13:52.250
Let's say for all the mistakes.

13:52.250 --> 13:53.450
So there are mistakes.

13:53.990 --> 13:56.030
Well, instead, we don't push.

13:56.030 --> 13:59.000
We insert buddy my bag on the.

14:00.120 --> 14:00.410
Again.

14:00.540 --> 14:01.050
Same thing.

14:05.010 --> 14:06.110
So the algorithm.

14:06.120 --> 14:07.230
So the code is running.

14:07.230 --> 14:07.530
Let's.

14:07.770 --> 14:10.320
Let's bring all the articulation points.

14:11.530 --> 14:13.010
Pull this out.

14:13.470 --> 14:13.840
X.

14:17.320 --> 14:19.480
But to win for are the articulation point to.

14:22.010 --> 14:26.810
So as you can see in this video, we can easily see that with an articulation point and for is an integration

14:26.810 --> 14:28.240
.8..

14:29.430 --> 14:29.820
And.

14:31.740 --> 14:33.750
See this code will be provided to you.

14:33.750 --> 14:39.210
But first of all, I would strongly suggest you that you try it yourself, because it's not a big deal,

14:39.210 --> 14:39.540
guys.

14:40.260 --> 14:43.800
Figuring out law is the easiest thing in this pool.

14:44.730 --> 14:48.000
Now the second is let's bring the villages or two.

14:49.970 --> 14:54.830
Ex in bridges it's been in the bridges code sort first.

14:55.860 --> 14:56.970
You go to bed, right?

14:57.660 --> 14:58.500
It starts taking.

15:02.060 --> 15:05.390
So we have this edge which is between two win four, which is a great edge.

15:05.390 --> 15:06.940
So only these edges averages.

15:07.790 --> 15:08.110
Right.

15:08.250 --> 15:10.080
Let's let's take this last example.

15:10.160 --> 15:11.240
One, two, three, four, five.

15:11.930 --> 15:12.530
And let's.

15:14.020 --> 15:15.330
One, two, three, four, five.

15:15.340 --> 15:16.390
So there are five edges.

15:17.080 --> 15:18.040
One, two edge.

15:18.490 --> 15:19.030
Three edge.

15:20.480 --> 15:22.220
To forage three forage.

15:23.780 --> 15:24.470
And for you.

15:25.800 --> 15:26.060
Right.

15:26.250 --> 15:26.940
It's it.

15:28.550 --> 15:28.820
Yeah.

15:28.820 --> 15:35.300
So to win for that articulation points made because if I do disconnect within one disconnect from the

15:35.510 --> 15:41.180
graph and if I remove four and five disconnects from the rest graph, a tree will not be in our regression

15:41.180 --> 15:43.400
point because when doing four or five are connected.

15:44.030 --> 15:45.310
And what are the bridges case?

15:45.380 --> 15:49.700
The bridges are between four and five and went into exactly where getting the correct answers.

15:50.840 --> 15:52.540
Well, he's very easy to obey.

15:52.580 --> 15:53.420
Not a big deal.

15:54.110 --> 16:00.320
And if you have a little problem and an input on the code and of course you can go over to the course,

16:01.070 --> 16:01.300
we'll.

16:02.490 --> 16:04.270
So thank you, guys.

16:04.290 --> 16:06.240
I hope all of this is clear.

16:06.330 --> 16:09.060
Like, it was a challenge to me that I have to.

16:10.180 --> 16:16.330
It was so much of stuff in this out leg start from the AFSC, then packages generated worldwide programming,

16:16.330 --> 16:17.200
then discovery time.

16:17.200 --> 16:18.100
Lewis came late.

16:18.520 --> 16:21.490
Although the desert is very small, the cord is very small.

16:21.490 --> 16:21.720
Right.

16:21.730 --> 16:22.000
But.

16:22.910 --> 16:25.390
A lot of things are happening in this age.

16:25.480 --> 16:28.210
So finally, let's discuss the tango laxity of the algorithm.

16:28.660 --> 16:31.720
As I said, guys, this is these are the No.

16:31.730 --> 16:32.500
One operations.

16:32.950 --> 16:33.760
Not a big deal.

16:34.540 --> 16:39.440
If I remove all of this, what we get is we are just performing a day of history or the complexity of

16:39.440 --> 16:39.980
a day of history.

16:39.980 --> 16:40.330
You guys.

16:41.890 --> 16:43.780
Complexity over the industry is of.

16:44.720 --> 16:51.260
And I hate the complexity of this DFS finding or relation point in bridges is often.

16:52.290 --> 16:55.860
For now, I'm just ignoring the insurgent insertion into the state.

16:56.250 --> 16:58.140
Well, that shouldn't be a problem.

16:59.710 --> 17:01.810
So the complexity of the above code is often so.

17:01.910 --> 17:08.260
And oftentimes we are finding out all the revision points in bridges in my graph of inverters is.

17:09.510 --> 17:09.680
Good.

17:09.880 --> 17:11.770
So thank you guys in the.

17:12.880 --> 17:13.990
Next five.

17:15.150 --> 17:15.480
Cool.
