WEBVTT

00:00.480 --> 00:05.560
And everyone will come back to this tutorial for magic tricks for an intuition coding part.

00:06.070 --> 00:10.510
So in the last reel we went through magic tricks for intuition, and now we want to call it out.

00:11.170 --> 00:17.320
So basically we just have to the main part of it is to have you the power in it and.

00:21.020 --> 00:21.260
Yeah.

00:21.260 --> 00:23.630
So before that, let me tell you some good problems.

00:24.080 --> 00:26.090
I think so it is CQ.

00:26.840 --> 00:28.760
This is a problem called on spot.

00:28.850 --> 00:34.070
You can try this problem after this particular tutorial and there's another SBP.

00:34.550 --> 00:42.740
You can also go one spot to solve these two problems after this and get your hands on magic differentiation.

00:43.520 --> 00:43.790
Cool.

00:44.480 --> 00:45.920
So firstly, yeah.

00:46.040 --> 00:46.730
So here we had.

00:47.950 --> 00:51.940
Normal code I've just taken in this wrong room because we'll be using my card again and again.

00:51.940 --> 00:53.500
Because, guys, very easy thing.

00:53.770 --> 01:01.930
You'll notice that if I want to find out Fibonacci number of that bigger heights of that some F of 20

01:01.930 --> 01:05.860
divided by eight so its value will be huge.

01:06.780 --> 01:08.010
I can't even imagine that.

01:08.010 --> 01:08.310
Huge.

01:10.110 --> 01:12.750
So what I'll do is I'll just take some more data.

01:13.320 --> 01:20.720
Let's take a 29 by seven rule and let's find out if you've been taking them with so.

01:22.310 --> 01:26.510
What in the end, I mean, let's say I have and and let's call it in Italy.

01:27.110 --> 01:27.350
Right.

01:27.770 --> 01:28.850
It's I want to find out why.

01:29.030 --> 01:30.510
What is the fifth Fibonacci number?

01:30.830 --> 01:36.590
So I'll just pick out and highlight a function or method which will give me that.

01:36.590 --> 01:38.350
And it's free when I get it.

01:38.660 --> 01:40.370
So int fib.

01:41.670 --> 01:45.600
And and will come away, then it's proven that you never will.

01:46.350 --> 01:48.360
So how do I call this?

01:48.360 --> 01:49.440
How do I make a matrix?

01:49.660 --> 01:55.350
So as I said, I'll be using a very special method, which is a structure in structure as we don't have

01:55.350 --> 01:55.560
to.

01:55.560 --> 01:58.260
We won't be worried about passing on.

01:59.500 --> 02:03.240
Different to the ads and other stuff you hate.

02:03.520 --> 02:04.270
What I do is.

02:05.680 --> 02:06.490
A very simple.

02:06.850 --> 02:08.380
Firstly, I just dig a matrix.

02:08.920 --> 02:16.570
So instead of all matrix, let's take em and let's give it let's give it a constant size pool.

02:16.720 --> 02:19.660
So constant size is to initially rate.

02:19.660 --> 02:23.050
Because for according this fight that is.

02:24.540 --> 02:25.500
We're going to keep our trade.

02:25.500 --> 02:27.420
We we need to grow mattresses.

02:27.600 --> 02:29.280
And this is our two crosswind metrics.

02:29.670 --> 02:32.600
So here you realize one thing that we don't need metrics.

02:32.940 --> 02:34.650
We don't need F and plus one metrics.

02:34.950 --> 02:39.060
We just need to use metrics and we'll find you to the power and minus two.

02:39.390 --> 02:44.790
And when I have to do it in minus two after this, I just need to multiply that by one one.

02:45.820 --> 02:51.820
But does this mean that if I take this first two terms and add them of D, that will be equal to if

02:51.820 --> 02:56.260
I multiply the first two with one one and get an eight.

02:56.890 --> 03:01.570
So I'm not like coding F in metrics and F and growth because we don't need it.

03:01.570 --> 03:04.030
We just want the matrix and it's about eight.

03:04.420 --> 03:08.470
So here I just take a structure matrix, so you will easily see that.

03:08.470 --> 03:11.890
Why is it being so useful to us by taking this?

03:14.370 --> 03:17.310
But she's being very useful to us right after this.

03:17.550 --> 03:19.710
Let's write the constructor metrics.

03:19.710 --> 03:23.700
And what it will do is it will just simply said this to zero.

03:23.970 --> 03:26.460
It will set all the times to zero.

03:27.710 --> 03:34.250
Well, after this, let's write a matter which will return, which will convert the matrix to an identity

03:34.250 --> 03:34.500
form.

03:34.810 --> 03:36.560
Where what is an identity matrix?

03:36.560 --> 03:38.100
It is 111 under diagonals.

03:38.750 --> 03:41.950
So let's write a function called identity.

03:44.120 --> 03:45.270
We need this identity.

03:45.390 --> 03:46.860
I've already explained this to you.

03:47.100 --> 03:48.260
Why do we need identity?

03:48.270 --> 03:52.440
Because instead of resulting in multiplication was one in.

03:52.980 --> 03:54.150
In addition is zero.

03:54.420 --> 03:56.850
So it is an identity element in metrics.

03:56.850 --> 03:58.320
It should be an identity matrix.

03:58.520 --> 04:01.320
Data are from I will go from zero to size.

04:01.320 --> 04:03.870
And what I do here is I move these.

04:05.530 --> 04:07.030
Face is equal to one.

04:07.480 --> 04:10.180
I just in there diagonally I will put all.

04:10.570 --> 04:13.060
Once this is an identity matrix eight.

04:13.450 --> 04:16.840
And now let's go to the last part of this structure matrix.

04:16.960 --> 04:23.370
And the most important part that is I want to multiply two matrices eight.

04:23.560 --> 04:25.620
So how do I multiply two matrices if.

04:27.970 --> 04:31.080
If you if not if you have not heard about what we going to.

04:32.880 --> 04:33.870
Operate overloading.

04:33.870 --> 04:35.950
Just go and check it out.

04:35.970 --> 04:41.880
It's a it's a very, very nice tone way, like how to overload an operator.

04:42.180 --> 04:48.150
But I redefining this that if I use a multiplication anywhere, then this particular function will be

04:48.150 --> 04:48.540
called.

04:48.990 --> 04:51.050
This is called an operator overloading eight.

04:51.390 --> 04:59.400
I simply pass a matrix to it eight and what I'll do is I'll simply now nothing if I see matrix.

04:59.970 --> 05:01.230
Okay, let me give you an example.

05:01.440 --> 05:08.190
If I say Matrix are just going to matricide and I save R is equals to are into let's thinking of the

05:08.190 --> 05:08.520
matrix.

05:08.520 --> 05:09.990
Q I didn't do.

05:09.990 --> 05:15.600
Q That means or this matrix odd this operator is defined that is a multiplication operator.

05:15.600 --> 05:20.610
After this this Q metrics will be parsed as an argument to the function of.

05:22.910 --> 05:26.780
That means our method will be called where it will be.

05:26.780 --> 05:29.690
Partisan metrics are different metrics as an argument.

05:29.720 --> 05:32.570
Now what I need to do is I need to multiply.

05:33.830 --> 05:35.540
These two get these two mattresses.

05:35.810 --> 05:38.120
That means A has been passed to the.

05:39.410 --> 05:43.220
Argument two The method is an argument and I have to just multiply them.

05:43.790 --> 05:46.130
I don't have to do much part here now.

05:46.740 --> 05:47.060
So what?

05:47.060 --> 05:49.880
I simply say I just take a matrix.

05:50.990 --> 05:53.150
Let's call it resilient.

05:54.070 --> 05:54.370
Cool.

05:54.910 --> 05:57.810
So how do I multiply two mattresses into a third mattress?

06:00.670 --> 06:07.480
If this is a matrix E This is a matrix B I get to see matrix because both this matrix out of two grows

06:07.480 --> 06:09.880
to who grows to two grows two will give me two.

06:09.880 --> 06:10.870
Grows to eight.

06:12.200 --> 06:12.520
If I.

06:12.520 --> 06:12.770
A b.

06:12.770 --> 06:12.980
C.

06:12.980 --> 06:13.820
D d e.

06:14.870 --> 06:15.950
F d.

06:17.020 --> 06:17.570
What is this?

06:17.950 --> 06:18.250
It is.

06:18.250 --> 06:22.030
He goes to the first row multiplied by first column.

06:22.480 --> 06:22.690
Right.

06:22.990 --> 06:29.100
So matrix multiplication is actually and this will be actually size cube algorithm, right.

06:29.170 --> 06:35.440
Because we will be using triple for loops here by triple follows because you fill one location of this

06:35.440 --> 06:42.160
matrix to fill one location of this matrix, I need to go for the rows and for all the columns of both

06:42.160 --> 06:44.410
the matrices, it's in the three eight.

06:44.590 --> 06:45.730
So let's do this then.

06:47.500 --> 06:49.780
So let's go from I0 to.

06:51.210 --> 06:51.720
Sighs.

06:52.050 --> 06:57.420
And then let's go from 0 to 40.

07:00.480 --> 07:01.210
So I'm not.

07:01.220 --> 07:02.280
I'm just not doing anything.

07:02.450 --> 07:02.680
Not.

07:02.690 --> 07:03.470
Not a big deal.

07:03.590 --> 07:05.030
No, I'm not doing a big deal over there.

07:05.030 --> 07:05.330
Right.

07:06.170 --> 07:07.180
It's a very simple thing.

07:07.180 --> 07:08.450
I'm just multiplying two matrices.

07:08.450 --> 07:10.490
The first matrix is this.

07:10.820 --> 07:17.210
That is my all matrix that this I've already been taking matrix of is and passing to it as an argument.

07:17.420 --> 07:20.000
And the third matrices inserted in which I'm storing.

07:20.420 --> 07:20.680
Okay.

07:20.810 --> 07:23.180
So this is a metric that I've written.

07:24.430 --> 07:26.260
Before all these locations of IED.

07:26.260 --> 07:28.750
That means for all this resultant IED.

07:28.780 --> 07:31.120
What I need to do is I need to simply.

07:32.400 --> 07:34.800
Have one more variable key.

07:37.120 --> 07:37.450
Eight.

07:37.780 --> 07:39.610
And what will Discovery will do?

07:39.910 --> 07:40.330
Simple.

07:42.040 --> 07:43.290
Before returning to E.J..

07:43.360 --> 07:45.100
It will be plus equals to.

07:47.470 --> 07:47.810
M.

07:49.260 --> 07:52.060
I hear that means chaos going.

07:52.690 --> 07:59.380
That means ice constant for the first metrics for this metric, the ice constant and Kia's going one

07:59.380 --> 07:59.740
by one.

07:59.740 --> 08:03.490
I had for all the columns and for the second metrics, what I'll do is simple.

08:04.030 --> 08:06.550
It will be equal to eight dot m.

08:06.550 --> 08:10.120
That means is metrics 88. m it.

08:11.120 --> 08:11.330
Right.

08:11.760 --> 08:16.130
Well, the second matrix, the column is constant and we are simply moving down the row.

08:16.580 --> 08:18.650
They're just a normal multiplication.

08:18.660 --> 08:21.200
In addition, and after this word, what we need to do is in.

08:21.280 --> 08:27.140
But these are they're now using what we just ignored by to do by name but seven so that the values doesn't

08:27.140 --> 08:34.580
exceed that limit and finally return the result in Maddox which will be stored in R well this is a normal

08:35.030 --> 08:38.720
matrix, multiplication gates, normal medical reactions.

08:38.720 --> 08:41.390
You can easily see that it has become so easy right now.

08:41.750 --> 08:48.110
If you would be writing different methods and providing 2D arguments to it.

08:48.260 --> 08:51.440
It won't take those arguments because they cannot be passed.

08:52.650 --> 08:54.660
So it's really a very easy method.

08:54.930 --> 09:02.040
Now you will easily see the similarity between the binary exponential cinematic exponential rate.

09:02.070 --> 09:02.850
Now you will see it.

09:03.390 --> 09:05.820
So initially what I'll do is I'll just take the resultant.

09:07.420 --> 09:09.880
Metrics and what should be resurgent metrics?

09:09.920 --> 09:10.900
Be It should be.

09:12.830 --> 09:13.760
Identity metrics.

09:13.760 --> 09:18.440
Case metrics would be identity because I have to multiply other metrics to it.

09:19.130 --> 09:23.870
Now guys, let's take the metrics quality that we have defined over here.

09:24.500 --> 09:25.880
Eight very steep metrics.

09:25.880 --> 09:26.090
Yeah.

09:26.660 --> 09:33.210
So I just have to initially hold all our zeros for t dart m00.

09:33.260 --> 09:38.750
I have one e dart m at zero one, I have one.

09:38.750 --> 09:41.150
And the dart m10.

09:43.060 --> 09:46.600
I have one aim to add these three locations.

09:46.600 --> 09:48.520
I have one in this matrix you can easily see.

09:48.840 --> 09:50.830
Well, I just feel that the matrix.

09:50.830 --> 09:52.210
And now what is the need?

09:52.720 --> 09:53.830
The need is very simple.

09:55.720 --> 09:56.590
If I want to find out.

09:56.590 --> 09:59.910
And it's people taking them, but I have to find out due to the power and minus to it.

10:00.070 --> 10:02.890
We have already discussed this part why in ministry is needed?

10:02.890 --> 10:04.450
Because I have to multiply it by f of two.

10:05.320 --> 10:08.290
Let's find out due to the power and minus eight.

10:08.350 --> 10:09.850
So it's a breakdown.

10:10.180 --> 10:10.630
And.

10:11.600 --> 10:11.820
Okay.

10:11.960 --> 10:13.640
So before these guys, let's make a case.

10:13.640 --> 10:20.810
If an is less than equal to two, then what we'll do is we'll simply run one pool and the race will

10:20.810 --> 10:26.540
simply separate then by two and do the normal exponential in you by land.

10:26.840 --> 10:29.600
If and in one it means it's an odd number.

10:30.080 --> 10:32.300
The return is equal to resulting in two.

10:34.500 --> 10:35.940
88.

10:36.210 --> 10:39.570
And easy goes to be in duty.

10:40.320 --> 10:44.690
That is to you square the normal thing that we did and instead she goes to you guys.

10:44.790 --> 10:50.940
You can easily see it has become so easy if I use the normal operator overloading, if I define a structure

10:50.940 --> 10:56.250
matrix, isn't it very easy, guys, if you have recorded this or if you have tried this?

10:56.250 --> 11:00.120
Gordon Just just compare your code with Michael Right?

11:00.120 --> 11:04.830
And you will realize the differences after performing this value.

11:05.010 --> 11:08.310
What I'll have is I'll have a property that I want.

11:09.030 --> 11:13.920
I'll get you to the power in minus two in resultant will result in this progress to rate.

11:14.550 --> 11:17.220
So I just have to add the first two times under tandem.

11:17.640 --> 11:25.610
So what is I simply return resulting dot m00 plus are not m018.

11:25.680 --> 11:27.180
And also I have to take mode.

11:27.780 --> 11:28.120
Okay.

11:28.290 --> 11:29.280
Never forget what?

11:31.750 --> 11:33.160
Oh, yeah.

11:33.430 --> 11:33.850
Okay.

11:37.170 --> 11:38.700
But if not I, it will be.

11:38.770 --> 11:39.990
I notices.

11:42.580 --> 11:44.710
You just let me check for some.

11:45.780 --> 11:51.840
So it is not that the ladies that are not m my word is there is a structured and in the letter.

11:53.430 --> 11:53.570
Right.

11:53.670 --> 11:54.210
So no errors.

11:54.210 --> 11:56.190
So what is we going to give?

11:56.190 --> 11:56.570
Five.

11:56.580 --> 11:57.570
It is five.

11:57.570 --> 11:58.500
As in the output.

11:58.970 --> 11:59.160
It's.

12:00.740 --> 12:01.050
Yeah.

12:01.070 --> 12:02.120
The fifth dumbest fight.

12:02.150 --> 12:03.680
So let's take for the system.

12:05.230 --> 12:06.530
Then we'll excuse the complexity.

12:06.530 --> 12:09.420
88 Great Bentham.

12:10.240 --> 12:13.690
One, two, three, four, five, six, seven eight 1955.

12:14.090 --> 12:14.340
Great.

12:14.350 --> 12:15.520
It's working perfectly.

12:16.380 --> 12:16.600
Eight.

12:17.040 --> 12:20.040
This is the normal exponential part we have discussed.

12:20.840 --> 12:21.740
This is a matrix.

12:23.930 --> 12:24.260
Right.

12:25.860 --> 12:26.430
And.

12:28.180 --> 12:28.500
Yeah.

12:28.540 --> 12:30.660
So now it's their time to discuss the complexities.

12:31.340 --> 12:33.080
So what is the complexity of this loop?

12:33.100 --> 12:34.240
It is not often.

12:35.440 --> 12:36.010
This is.

12:36.950 --> 12:40.040
Log off and overall girlfriend.

12:40.550 --> 12:41.900
And in this war it is happening.

12:41.900 --> 12:44.740
Data matrix, multiplication functions being called place.

12:45.200 --> 12:48.380
What is a time that a matrix is taking to be multiplied?

12:48.610 --> 12:52.100
It is size into size into this ice cube.

12:52.460 --> 12:53.180
What do you say there?

12:54.110 --> 12:58.550
So it is basically Tokyo, which is eight in do log off and eight.

12:58.910 --> 12:59.240
So.

13:00.950 --> 13:02.180
Isn't it so?

13:03.460 --> 13:05.200
Bonnie Raitt so that it is.

13:06.090 --> 13:07.170
Yeah, it is.

13:07.210 --> 13:10.330
IceCube in the off log and.

13:12.160 --> 13:16.210
If any, later in the debate it becomes 64 into it.

13:17.360 --> 13:18.980
It's not the complexity.

13:19.100 --> 13:19.700
It's nothing.

13:20.360 --> 13:21.530
Not even in three digits.

13:22.490 --> 13:22.770
Right.

13:23.450 --> 13:24.260
So, yeah.

13:24.260 --> 13:25.730
So it's not even in four digits.

13:25.730 --> 13:27.100
It's just less than a thousand.

13:28.180 --> 13:30.670
So that's the beauty of metric six one intuition gates.

13:33.280 --> 13:38.710
They've given you various examples of excellent intuition and by explaining how they can be done, how

13:38.710 --> 13:39.610
they can be coded out.

13:40.420 --> 13:41.920
So this is a complexity.

13:42.430 --> 13:50.230
So here we cannot ignore size because for this example the size values for so it will be four cube in

13:50.230 --> 13:50.890
the law of an.

13:51.970 --> 13:55.650
It is a this size cannot be ignored and of course, goes after this.

13:55.660 --> 14:02.800
I just want to broaden it go to these problems as you SVP and and the problem said it's called SBP too

14:03.550 --> 14:10.570
because SBP records in sequence something and then is another thing it is we put some on spot to try

14:10.780 --> 14:12.580
to if you wish to.

14:13.930 --> 14:19.990
Well, I hope this record is very clear to you guys and the complexity of it is also very clear to you

14:19.990 --> 14:20.290
guys.

14:20.770 --> 14:22.720
So that's it in the next part.

14:22.870 --> 14:23.230
Thank you.
