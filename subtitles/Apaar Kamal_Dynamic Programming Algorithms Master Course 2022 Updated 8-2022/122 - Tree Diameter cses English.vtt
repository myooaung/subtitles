WEBVTT

0
00:00.730 --> 00:01.330
Hello, everyone.

1
00:02.170 --> 00:04.270
Let's move with a very interesting problem.

2
00:04.270 --> 00:07.120
And it's about finding the diameter of a tree.

3
00:07.600 --> 00:13.840
I've picked up this problem from CSES , and you can easily search it and try your code over here.

4
00:14.350 --> 00:15.970
So let's understand this problem.

5
00:15.970 --> 00:18.460
This is nothing but you are a tree with n nodes.

6
00:19.780 --> 00:25.030
And the diameter of the tree is a maximum distance between two not.

7
00:25.420 --> 00:28.000
Your task is to determine the diameter of the tree.

8
00:28.810 --> 00:29.460
simple

9
00:30.390 --> 00:33.030
For example, we have this tree.

10
00:33.030 --> 00:34.800
One, two, one, three, three, four, three, five.

11
00:35.090 --> 00:35.840
So let me.

12
00:35.850 --> 00:36.150
Okay.

13
00:41.150 --> 00:41.410
Yup.

14
00:42.020 --> 00:43.400
So here we have this tree very simple.

15
00:43.400 --> 00:46.040
One, two, one, three, three, four and three, five

16
00:46.310 --> 00:49.880
So here we can easily see that what will be the diameter of the tree?

17
00:50.360 --> 00:54.260
The longest part in the tree will be this, this and this.

18
00:55.370 --> 00:57.050
So the length of this part will be.

19
01:00.590 --> 01:04.610
Basically we just count the edges in the path and not the vertexes in the path.

20
01:04.910 --> 01:06.560
So the edges in the paths are three.

21
01:07.250 --> 01:10.220
This is a problem which can be solved using a greedy approach.

22
01:11.150 --> 01:12.290
And DP.

23
01:13.260 --> 01:14.310
ahmm

24
01:15.790 --> 01:20.710
I will let you guess the greedy approach and try different greedy approaches and submit them over here.

25
01:22.300 --> 01:26.980
While we can discuss the DP approach.

26
01:27.640 --> 01:32.770
One of the greedy approaches that I want to share is a very simple approach, which is.

27
01:33.730 --> 01:36.550
What we can do is we can start from any node.

28
01:36.550 --> 01:41.350
What we'll do is we'll perform a BFS and find the maximum distance from that particular node.

29
01:41.620 --> 01:44.200
It's very easy, right, that since I'm starting from zero.

30
01:44.200 --> 01:48.340
So this will be the maximum distance, it'll be one, one, two, two.

31
01:48.370 --> 01:53.050
So basically the distance from the road node and then after performing this, what I will do is I'll

32
01:53.050 --> 01:59.410
pick up the node which has the maximum distance out of all these nodes ,here we can see that we have

33
01:59.410 --> 02:06.220
two distances, two nodes, all vertex, which have the maximum distance right now, which is two.

34
02:07.210 --> 02:08.410
So I can pick up any one of them.

35
02:08.410 --> 02:11.860
So let's I'm picking up four, so let me remove these distances

36
02:14.300 --> 02:18.050
So I picked this up ,so basically what we did till now. Pick any node

37
02:18.380 --> 02:21.260
Find the distance of every other node from that node.

38
02:21.950 --> 02:23.540
Pick source

39
02:25.580 --> 02:26.510
Find distance.

40
02:27.450 --> 02:29.700
I'm just discussing one simple greedy approach.

41
02:29.700 --> 02:35.100
There can be multiple greedy approaches in this, so I'll just leave it to you and you can find the distance

42
02:35.100 --> 02:37.590
using BFS or DFS, whatever you feel like.

43
02:38.900 --> 02:46.610
Third is pick max distance node, so I'll just pick the maximum distance Node.

44
02:46.700 --> 02:54.740
If there are multiple pick any, then again now taking this max distance node as the source Nord.

45
02:56.460 --> 02:58.470
As the source node.

46
03:01.240 --> 03:06.430
Find the other distances so basically now starting from fourth this is distance one.

47
03:06.440 --> 03:09.400
This is a other distance two.

48
03:09.400 --> 03:12.090
And this is with a distance, the eight.

49
03:12.520 --> 03:18.490
So from the max distance node as the source node find distance ,right

50
03:18.910 --> 03:23.410
And now pick up the maximum distance 

51
03:24.930 --> 03:31.800
So this is one of the greedy approaches , this is applied to since pick a node so, the node 

52
03:31.800 --> 03:36.120
with a maximum distance initially should be a leaf node will be a leaf node , will pick that node.

53
03:36.120 --> 03:41.880
And now from that node, I'll just apply one more BFS or DFS and then calculate the distances of other nodes

54
03:41.910 --> 03:42.060
now.

55
03:43.080 --> 03:45.390
And the other node that I'll get will be the.

56
03:48.230 --> 03:52.600
Now the maximum distance that I'll get will be the diameter of the tree.

57
03:52.790 --> 03:58.870
So I'll just leave this greedy approach to you and you can feel free to code it and submit it on to cses

58
03:59.000 --> 03:59.210
yes.

59
03:59.870 --> 04:04.250
And let's  continue with the DP approach.

60
04:04.940 --> 04:05.180
Cool.

61
04:06.720 --> 04:08.370
Well, yeah, let me erase this quickly.

62
04:08.570 --> 04:08.800
Mm hmm.

63
04:11.880 --> 04:12.780
Greedy was very easy.

64
04:13.380 --> 04:16.530
Well, let's try to find the same thing using DP.

65
04:16.710 --> 04:18.570
And let me quickly erase these values.

66
04:19.140 --> 04:22.860
So in dynamic programming, what we can say is that whether.

67
04:24.300 --> 04:26.700
The diameter will pass through that node.

68
04:28.730 --> 04:29.930
Will pass through the node.

69
04:31.020 --> 04:38.670
pass through vertex or it will not pass through vertex

70
04:41.320 --> 04:41.650
vertex

71
04:42.190 --> 04:45.210
So what we say is we generally take vertex to be current node

72
04:46.060 --> 04:51.800
So what I'm saying right now is that these are simple theory that for every node

73
04:51.820 --> 04:57.550
What I can do is I can see that whether Diameter passes through this node or the diameter do not pass through

74
04:57.550 --> 04:58.950
that node

75
04:59.290 --> 05:05.140
So what I will do is I will say let's make a quick function and let's call it F (current)

76
05:06.040 --> 05:09.610
f(cur) will represent the diameter.

77
05:13.460 --> 05:13.910
of the.

78
05:15.200 --> 05:15.680
tree.

79
05:16.760 --> 05:20.240
Or, let's say, the diameter of the

80
05:21.660 --> 05:22.190
Subtree.

81
05:23.480 --> 05:24.590
Of Current.

82
05:25.740 --> 05:26.950
right and.

83
05:29.130 --> 05:31.110
So what does this mean?

84
05:31.140 --> 05:38.010
That the diameter may pass through this current or it can go in one of the children or basically

85
05:38.010 --> 05:39.690
any of the nodes in the subtree of x.

86
05:40.020 --> 05:45.000
For example, if I see f(1), what will be f(1)?

87
05:45.000 --> 05:47.100
In this it is right now.

88
05:47.100 --> 05:50.070
We can easily see that it is this particular part, the diameter.

89
05:50.340 --> 05:52.920
But let me quickly change this a little bit.

90
05:52.920 --> 05:55.620
And lets say this is six seven.

91
05:56.650 --> 05:57.250
8

92
05:58.510 --> 06:00.310
And let's make one more.

93
06:00.540 --> 06:00.820
Yep.

94
06:01.650 --> 06:02.560
And this is nine.

95
06:03.130 --> 06:03.730
so right now

96
06:04.640 --> 06:08.150
If I say, what is the F(1) in this?

97
06:08.960 --> 06:09.940
What is that f(1) here?

98
06:10.190 --> 06:13.220
So f(1), need not necessarily pass through one.

99
06:13.880 --> 06:14.660
That's why I have written

100
06:14.660 --> 06:19.500
Or in this case, whether diameter will pass through the vertex or it will not pass through the

101
06:19.520 --> 06:20.170
vertex

102
06:20.360 --> 06:25.400
So we have a state which says ,tell me what's the diameter of the subtree.

103
06:26.240 --> 06:27.980
It starts from the current node.

104
06:27.980 --> 06:31.160
So basically subtree of one is the whole tree.

105
06:31.400 --> 06:34.810
Although the diameter which is which can be this.

106
06:34.820 --> 06:35.270
path

107
06:36.630 --> 06:39.090
Also it can be this path, right?

108
06:39.300 --> 06:41.520
So it may or may not pass through 1.

109
06:41.520 --> 06:44.830
And it can pass through three.

110
06:44.850 --> 06:46.670
It can pass through five.

111
06:46.680 --> 06:48.410
It can pass through 4.

112
06:48.630 --> 06:51.590
So what I say is that I have a subtree.

113
06:51.720 --> 06:52.740
Just imagine it this way.

114
06:52.890 --> 06:54.210
You're hanging this tree.

115
06:55.680 --> 06:59.200
Of course we are hanging this tree from the root node ,for three

116
06:59.220 --> 07:01.170
If I want to find out what is f(3)?

117
07:01.500 --> 07:07.050
f(3) means nothing but the maximum length of the path which passes through three.

118
07:07.470 --> 07:10.710
Or is it in one of these subtrees of tree

119
07:11.870 --> 07:12.110
cool

120
07:13.140 --> 07:14.580
So  just.

121
07:15.110 --> 07:15.460
Yeah.

122
07:15.540 --> 07:16.620
So do not get confused.

123
07:16.890 --> 07:21.170
We'll never talk about anything beyond subtree of.

124
07:21.360 --> 07:21.630
3 Right.

125
07:21.780 --> 07:23.280
So some of you might be thinking that.

126
07:24.950 --> 07:30.860
When we talk about subtree of three, why can't this be a  part because this is also passing through 3,

127
07:30.920 --> 07:31.220
right.

128
07:31.490 --> 07:37.220
But this is a path that we will not consider in a recursive state in our dynamic programming state.

129
07:37.520 --> 07:37.810
Why?

130
07:37.910 --> 07:42.830
Because if you talk about f(3), although this part is passing through three.

131
07:43.010 --> 07:45.510
But this part is not totally in the subtree of three.

132
07:46.130 --> 07:49.400
I just have to figure out the path, which is in this subtree of three.

133
07:49.850 --> 07:50.270
So just.

134
07:50.540 --> 07:50.810
Yeah.

135
07:51.140 --> 07:53.210
So here there might be some doubts.

136
07:53.210 --> 07:55.520
And the doubt can be very simple that.

137
07:56.450 --> 07:59.540
What if the path is like this

138
07:59.540 --> 08:00.230
Only that means.

139
08:00.230 --> 08:01.940
Let me quickly add one more note here.

140
08:01.940 --> 08:03.340
And it's called ten eight.

141
08:03.500 --> 08:08.600
So we can easily see that this will be the diameter which will be passing through three.

142
08:08.600 --> 08:11.360
Also five, also seven or ten, nine, eight.

143
08:13.240 --> 08:20.530
When all this bad passes through three we will not see that it will be included in F of three because

144
08:20.530 --> 08:26.440
above three only means this arbitrary of a trait, but f of one will actually contain this pardon because

145
08:26.440 --> 08:27.790
now we can see that.

146
08:28.690 --> 08:31.060
This part is passing through F of one.

147
08:31.600 --> 08:33.220
This body is passing through one artery.

148
08:33.370 --> 08:39.460
But in this case, one is actually the node which is on which is with this subtree.

149
08:40.010 --> 08:40.380
Correct.

150
08:40.990 --> 08:48.430
So I just want to know the diameter, the maximum length of the part which passes through the current

151
08:48.430 --> 08:51.010
node and goes only in the subtree of the note.

152
08:51.050 --> 08:51.310
Right.

153
08:52.580 --> 08:54.170
So I hope it's very easy.

154
08:54.500 --> 09:00.140
It's very clear because if three, let's do the positives passing through three and going through it,

155
09:00.140 --> 09:06.500
and sisters and sisters will give me the maximum time, maximum length of the but not three.

156
09:07.940 --> 09:12.740
So now let's try to formulate direct relation here.

157
09:13.430 --> 09:20.300
So how we left formulate the maximum length of the part that touches three and goes back eight.

158
09:20.300 --> 09:22.310
So of course we have to get right.

159
09:22.310 --> 09:23.930
The first cases is this one.

160
09:24.560 --> 09:30.410
Whether time passes through the vertex, second cases, it does not pass through the vertex, the maximum

161
09:30.410 --> 09:31.010
length of the pass.

162
09:31.010 --> 09:31.270
Right.

163
09:31.760 --> 09:36.950
If it passes through the verdicts, what I can see is what any non what I can do is I can try to find

164
09:37.190 --> 09:45.520
the maximum land of two parts which goes in this subtree of the current node or in injured.

165
09:45.590 --> 09:46.460
Can I say that?

166
09:47.450 --> 09:51.980
Can I say that what is the maximum height of its two children?

167
09:52.400 --> 09:52.640
Eight.

168
09:52.730 --> 09:56.300
So for example, let me quickly write their height.

169
09:56.510 --> 10:03.110
So this is on a level zero, this is on level one, this is on level two, this is on level three and

170
10:03.110 --> 10:04.650
this is on level four eight.

171
10:05.030 --> 10:06.530
Basically, what is this?

172
10:06.530 --> 10:13.580
Zero one, two, three, four means that if I pick up this knowledge if four and yeah, so it is on

173
10:13.580 --> 10:14.040
level four.

174
10:14.040 --> 10:14.300
Right.

175
10:14.630 --> 10:18.770
But what is its height from the subtree eight.

176
10:18.770 --> 10:21.290
What is it, what is the maximum height of this node.

177
10:22.330 --> 10:23.400
From the leave note.

178
10:23.830 --> 10:31.630
Basically, I simply mean that if I have this note for I just want to know what is the deepest lent.

179
10:31.630 --> 10:35.080
It has to reach a leaf node in subtree.

180
10:35.500 --> 10:38.530
So let me quickly write another function.

181
10:38.530 --> 10:39.790
Let's call it g i.

182
10:40.690 --> 10:41.600
Eight couldn't.

183
10:42.760 --> 10:50.590
So we'll just simply find nothing but the maximum length of any node in the you don't which are direct

184
10:51.010 --> 10:57.310
children of the current node and the maximum language it has to do that leave node eight G current is

185
10:57.310 --> 10:57.850
nothing but.

186
10:58.830 --> 11:00.330
Max Lent.

187
11:03.090 --> 11:03.780
Current.

188
11:04.740 --> 11:05.310
Who?

189
11:06.170 --> 11:11.690
Any leaf node in its subtree, which is important.

190
11:12.530 --> 11:14.090
And it's statutory right.

191
11:14.930 --> 11:20.660
So how we you this maximum length of and you know why are we finding this first of what do you call

192
11:20.660 --> 11:20.750
it?

193
11:21.200 --> 11:26.150
Because of what we can do is to find out the first part of the problem.

194
11:26.150 --> 11:32.950
We can simply say, why don't I just find out D of X, which are the child of child of the current eight?

195
11:33.170 --> 11:39.170
That means the maximum lander, whatever these downloads have to, is to leave, not to the sense zero.

196
11:39.170 --> 11:47.540
This has to and this is one overall pick up top two, because we know that their diameter will pass

197
11:47.540 --> 11:50.600
through the current and then go again to the lymph node eight.

198
11:51.020 --> 11:55.070
So if I pick the maximum but then it will be very zero.

199
11:55.190 --> 11:56.780
The first father time we do is coming up.

200
11:57.080 --> 11:59.990
It will go to three, go to the second part.

201
12:00.020 --> 12:01.100
We do the second maximum.

202
12:01.280 --> 12:08.450
And finally these don't it will be nothing but one plus two plus two by this rule, because we are traversing

203
12:08.450 --> 12:11.930
these two edges also which which is trying to reach the current node.

204
12:12.770 --> 12:12.940
Very.

205
12:13.400 --> 12:15.110
So let me quickly write this.

206
12:16.400 --> 12:18.890
I will just say that if current can be.

207
12:20.020 --> 12:20.710
Duplass.

208
12:21.970 --> 12:23.230
Max two values.

209
12:23.230 --> 12:26.110
So let me let say Max do values.

210
12:29.340 --> 12:35.220
D x where x are nothing but guide of the current state.

211
12:35.640 --> 12:37.950
So some of you might be wondering why.

212
12:38.370 --> 12:39.590
What if you don't have to say?

213
12:39.780 --> 12:40.600
Then it's very easy.

214
12:40.600 --> 12:44.050
If you don't have to tell, then we just take the one.

215
12:44.310 --> 12:46.650
If you don't have you on one tail, then it will be zero.

216
12:47.640 --> 12:47.940
So.

217
12:49.180 --> 12:50.890
Otherwise, we'll take the next two values.

218
12:51.460 --> 12:51.700
Well.

219
12:52.680 --> 12:52.860
So.

220
12:53.190 --> 12:53.710
Yeah, so.

221
12:53.970 --> 12:56.730
And now how do we figure it out?

222
12:56.910 --> 12:58.710
Okay, so this is one part of cutting.

223
12:59.370 --> 13:01.380
What is the second part of the current?

224
13:01.620 --> 13:02.220
That means.

225
13:03.160 --> 13:09.850
This father does not pass through the butter, nor if the maximum part in this ability of some particular

226
13:09.850 --> 13:12.450
note does not pass us through the current note.

227
13:12.850 --> 13:14.050
That means it's very simple.

228
13:15.610 --> 13:21.550
What I can see is nothing but f current is nothing but max of F2 effects.

229
13:22.800 --> 13:26.920
But we will take max of ethics also and two plus max of this also.

230
13:27.490 --> 13:31.180
So whichever gives me the best answer, I can simply give it.

231
13:32.080 --> 13:37.960
So basically, if I combine both of these equations that is sticking maximum of these two values, that

232
13:37.960 --> 13:40.660
will give me the F of current eight.

233
13:41.290 --> 13:45.200
Finally, let's find a reconciliation which will tell me what is G?

234
13:45.910 --> 13:53.830
What was the maximum length of a bad form of a node to its leaf node in the subtree of its liberal right?

235
13:54.580 --> 14:00.670
Basically, what is the length of the part of any leaf node in its approach, which is the maximum distance?

236
14:01.990 --> 14:05.260
So what can be in this case can mean nothing.

237
14:05.260 --> 14:09.640
But okay, let me instead of writing D X, let's write the current.

238
14:10.150 --> 14:15.370
So for any current node, if I want to find out the maximum lot, but then it is nothing but whatever

239
14:15.370 --> 14:20.110
is the maximum part and it's what it style note which is d of x less.

240
14:22.040 --> 14:22.280
Well.

241
14:23.030 --> 14:24.230
So this is very simple.

242
14:24.230 --> 14:30.470
We can figure out the current and then finally using decoding we can figure out if correct.

243
14:31.880 --> 14:38.150
So this is a very simple diameter for a tree to our solution.

244
14:38.390 --> 14:43.400
You can try the grid your browser told you and you can also try different 3D approaches and this DPA

245
14:43.400 --> 14:44.340
put it.

246
14:44.900 --> 14:50.290
So in the next part I will quickly code this and either it's great thank.