WEBVTT

00:00.740 --> 00:02.630
And everyone, welcome to the lecture.

00:02.780 --> 00:05.090
And here we'll start with GDP.

00:05.870 --> 00:13.610
So before moving on to Digital P, we'll just quickly formulate a recursion, which is very easy and

00:13.880 --> 00:15.920
I love to see you all do it first.

00:16.520 --> 00:19.860
After that, will, of course I will do it right.

00:20.330 --> 00:20.630
So.

00:22.210 --> 00:23.200
What is digital TV?

00:23.230 --> 00:27.190
It's a short form of dynamic programming involving digit to all.

00:27.230 --> 00:34.810
The GDP problems will be based on some numbers like from for example, from L2 are tell me how many

00:34.810 --> 00:36.750
numbers have this particular property.

00:36.760 --> 00:37.050
Right.

00:37.360 --> 00:41.410
But there will be some properties and there will be some changes.

00:41.920 --> 00:46.090
You have to tell between those range how many numbers satisfy this property.

00:46.180 --> 00:53.390
For example, if I see how many numbers between ten and 20 are divisible by seven.

00:54.160 --> 00:54.450
Right.

00:54.910 --> 01:01.680
So of course, in this problem you want in this simple problem, you will most probably not apply to

01:01.690 --> 01:02.980
GDP because it is simple.

01:02.980 --> 01:05.860
It is currently by seven minus ten by 7 to 8.

01:06.490 --> 01:13.060
But let's say if I change the property or update the property to the properties, tell me how many numbers

01:13.510 --> 01:14.290
between some.

01:15.160 --> 01:19.990
And what else do I order?

01:20.020 --> 01:20.950
Diesel by seven.

01:20.950 --> 01:21.400
Let's see.

01:21.690 --> 01:21.970
Ah.

01:22.750 --> 01:26.830
But it will be also according this problem by seven and.

01:28.440 --> 01:29.610
They are some of digit.

01:30.540 --> 01:31.350
What does this mean?

01:31.670 --> 01:36.720
All those numbers, the numbers between the two, which are divided by seven and the sum of digits.

01:37.050 --> 01:38.640
Let me try to do some digits.

01:39.540 --> 01:40.800
I'd also do the opposite.

01:42.920 --> 01:44.000
I'd also dubizzle by.

01:47.250 --> 01:48.660
So is this a turkey problem?

01:49.790 --> 01:50.050
Eight.

01:50.300 --> 01:55.580
We know for three it satisfies this because for any number of three, it's some of the judge.

01:55.910 --> 01:57.560
It also believes elementary eight.

01:57.920 --> 02:00.410
But how can we find out for.

02:01.550 --> 02:03.180
Our numbers are just seven eight.

02:03.290 --> 02:05.090
Of course, we will have to code it and figure it out.

02:05.960 --> 02:08.210
We'll see how you do all these types of problems.

02:08.510 --> 02:14.780
I'll be taking ten plus different problems from the GDP, and we'll go from easy to hard and we'll see

02:14.930 --> 02:18.320
how easy it is to solve the GDP problems.

02:18.350 --> 02:20.440
It just sounds tricky.

02:20.510 --> 02:22.190
It's actually not that tricky.

02:22.880 --> 02:24.620
All of the GDP lies here.

02:25.130 --> 02:27.760
We're in this in this question, right.

02:27.860 --> 02:28.600
In this print.

02:29.090 --> 02:30.030
Somebody tried using.

02:31.900 --> 02:34.150
But what I'll do is I'll go ahead.

02:34.150 --> 02:36.760
I've said I'll be using Regulation eight and indication.

02:36.760 --> 02:39.910
What I'll do is I'll make the number digit by digit.

02:40.210 --> 02:41.110
This is important.

02:41.590 --> 02:46.750
I have to make the number digit birdie because when I make some numbers digit per digit, we are moving

02:46.750 --> 02:48.370
on to each digit of those number.

02:48.640 --> 02:56.260
And by moving on to each digit of those numbers, we can, of course keep information about the properties

02:56.260 --> 02:57.340
that we want to satisfy.

02:57.460 --> 03:03.700
For example, some eight and there will be many more because I'll be taking such examples in each of

03:03.700 --> 03:04.180
the problem.

03:04.180 --> 03:10.450
You'll see that there's a new property coming in and we have to satisfy the property will be storing

03:10.450 --> 03:14.230
something, will be memorizing it and figuring out the problems.

03:15.100 --> 03:16.540
Let me quickly raise this.

03:17.510 --> 03:20.810
This is the most important part is this recursion, this simple recursion.

03:22.100 --> 03:25.100
I will also go I would suggest to you to call it first.

03:25.520 --> 03:34.040
Let's say I want to print all the numbers till two four, three, nine, eight the how we like it because

03:34.940 --> 03:36.350
I will start from a zero.

03:36.770 --> 03:39.590
I mean, on the first digit I will say put in zero.

03:39.860 --> 03:41.120
It's I'm formulating a string.

03:41.120 --> 03:43.300
I just say I'm just taking normal discussion late.

03:43.760 --> 03:44.390
We have come.

03:44.540 --> 03:50.150
If you read this point of the code of the course, you must have understood that.

03:51.270 --> 03:54.030
The things are easy now, right?

03:54.480 --> 03:56.370
You must be understanding a lot of things now.

03:58.650 --> 04:02.370
And usually what I'll do is let them starting a regression digit where they do right.

04:02.370 --> 04:04.200
I'm placing something on the first digit.

04:04.590 --> 04:07.140
I have to make four digit numbers right on the first.

04:07.140 --> 04:07.950
Real examples.

04:08.100 --> 04:09.540
0/1 because I have to.

04:10.430 --> 04:15.920
Family numbers from 0 to 8 in his late term, placing zero with how regression will work.

04:16.370 --> 04:17.240
It will pay zero.

04:17.930 --> 04:19.670
It will also try to place one.

04:21.160 --> 04:21.460
Eight.

04:21.820 --> 04:24.460
It will also try to place two on the first digit.

04:24.460 --> 04:31.480
So on the four digit it will be zero one and two, but it will not place any number which is greater

04:31.480 --> 04:32.830
than two on the first eight.

04:33.190 --> 04:38.180
We just need to be very precise on what to put there.

04:39.370 --> 04:42.760
Just I'll go slow, but please try to understand this part.

04:43.750 --> 04:45.310
Initially, what will you do?

04:45.460 --> 04:47.590
It will get me started this way.

04:48.830 --> 04:49.040
Yeah.

04:49.460 --> 04:50.210
This is empty.

04:50.990 --> 04:53.710
It's a regression called zero regression called for integration.

04:54.740 --> 04:58.970
Who knows if zero was pleased on the first part?

04:59.750 --> 05:02.640
What else would be placed on this second wizard?

05:02.650 --> 05:04.520
No, I'm just talking about this.

05:04.810 --> 05:06.860
But that means zero is already placed.

05:06.860 --> 05:08.240
Now, on the first part.

05:08.630 --> 05:10.460
On the first place.

05:11.030 --> 05:11.420
Now.

05:12.700 --> 05:13.550
What are the numbers?

05:13.570 --> 05:14.260
Can come here.

05:15.500 --> 05:18.500
Zero can come here boots and one.

05:18.500 --> 05:18.920
Come here.

05:19.460 --> 05:20.870
Boots and two, come here.

05:21.380 --> 05:21.770
Yes.

05:22.340 --> 05:23.240
And three, come here.

05:23.420 --> 05:23.900
Yes.

05:23.920 --> 05:24.830
Can four come here?

05:25.250 --> 05:25.640
Yes.

05:26.090 --> 05:28.880
In five communities or about five.

05:29.660 --> 05:32.030
What does it mean there on this second place?

05:32.060 --> 05:33.200
Can I place five?

05:33.620 --> 05:35.450
If I placed zero in the first place.

05:36.900 --> 05:42.330
Of course they did because any number of it starts from zero five and anything after it will be less

05:42.330 --> 05:43.350
than 2439.

05:44.440 --> 05:45.550
I will getting this point.

05:46.600 --> 05:52.090
That means it completely depends that if you are placed a zero before then you can place any number

05:52.090 --> 05:53.980
from 0 to 9 here.

05:55.100 --> 06:00.250
0 to 9, and you can place any number from 0 to 9 here and you can place any number from zero 20.

06:01.200 --> 06:02.850
I hope this is making sense.

06:03.270 --> 06:03.500
Right.

06:04.380 --> 06:04.710
So.

06:05.840 --> 06:08.330
Let me quickly what we do, please.

06:09.110 --> 06:10.160
These are the four digits.

06:10.940 --> 06:16.400
They were place zero and any number from 0 to 9 029029 can comment all the other places.

06:16.760 --> 06:17.050
Eight.

06:17.510 --> 06:17.810
So.

06:18.910 --> 06:21.160
Quickly we conclude this.

06:22.810 --> 06:24.040
8029.

06:24.040 --> 06:24.700
Any numbers?

06:26.370 --> 06:28.230
Nowadays at about one.

06:28.230 --> 06:30.270
What if one was placed at this facility?

06:31.900 --> 06:37.870
If one was pleased on this first place, that means, again, any number from 0 to 9 can come in the

06:37.870 --> 06:38.470
second place.

06:38.890 --> 06:42.190
Eight, any number from 0 to 9 can come on the back in place.

06:42.670 --> 06:46.150
And I know let's just worry about the second place and not the other places.

06:46.870 --> 06:50.500
What if to what if towards place now in the first place?

06:50.530 --> 06:57.100
So if two of please only first place I can keep zero on the second place I can keep one on the second

06:57.100 --> 07:00.880
place I can keep you on the second place I can keep three on the second place.

07:01.480 --> 07:05.110
But I cannot place food or can.

07:05.620 --> 07:07.900
Yes, I can also place four on the second place.

07:08.260 --> 07:11.390
Right but I cannot place five on the second place.

07:11.830 --> 07:12.850
I we are getting this.

07:13.150 --> 07:20.170
That means I can place zero one, two, three, four because any number of it starts from two and goes

07:20.170 --> 07:23.260
still any zero one, two, three, four is finite.

07:23.290 --> 07:30.490
But now I cannot place any number that is beyond or here I cannot place to five because now it will

07:30.490 --> 07:33.160
be greater than two, four, eight.

07:33.280 --> 07:38.980
I want to print only the numbers which are less than two for three as an equal two weakens it.

07:39.340 --> 07:45.470
So as you can see here, we are trying to limit things, right.

07:45.670 --> 07:49.000
And how do we limit things this limit is only based on?

07:50.890 --> 07:52.210
Full body.

07:54.410 --> 08:03.620
Now we know that I hope we are getting this right, that if it is any branch of the left subtree, that

08:03.620 --> 08:06.530
means this is the lives of tree, but this is the rights of trees.

08:06.980 --> 08:09.830
And now we know that this is the rightmost.

08:11.130 --> 08:11.460
Okay.

08:11.550 --> 08:12.480
Let me reset.

08:13.470 --> 08:17.730
We can see that this is the rightmost part of it, which is to inflate.

08:18.730 --> 08:18.970
Right.

08:19.300 --> 08:21.990
But we have to limit artery.

08:22.000 --> 08:26.940
We don't we can't you know say artery to go on forever from the right.

08:26.950 --> 08:29.770
Most part we have to limit it now for example.

08:31.230 --> 08:32.910
And discontinuing it further.

08:33.120 --> 08:37.980
What any number from 0 to 9 here we can place all 0298.

08:39.240 --> 08:45.780
We can place all 029029 similarly, all 029 will work all 0 to 9 here as well.

08:46.440 --> 08:52.050
For this also we will place every 029029029.

08:53.460 --> 08:54.900
And so on for three, four also.

08:55.170 --> 08:57.240
But just think about this.

08:57.240 --> 08:58.860
Five every one eight.

08:59.640 --> 09:00.540
Sorry, not just five.

09:00.540 --> 09:02.560
Because it is for me.

09:02.560 --> 09:03.090
It is it.

09:04.150 --> 09:04.390
Yeah.

09:04.570 --> 09:05.650
This photo is the last one.

09:05.690 --> 09:06.010
They.

09:07.670 --> 09:07.850
Yeah.

09:08.030 --> 09:09.290
Just think about this for.

09:11.930 --> 09:12.460
Can I please.

09:12.470 --> 09:13.790
And in a move from 0 to 9.

09:14.330 --> 09:16.910
Because what about this particular part?

09:17.300 --> 09:19.790
Initially we placed two, then we placed four.

09:20.090 --> 09:21.680
And I cannot place any number from zero.

09:21.680 --> 09:25.560
Tonight, I have to only place numbers between zero in the.

09:25.580 --> 09:29.360
Because then only it will be less than two for three in the first three digits.

09:30.020 --> 09:32.270
I we getting this right now.

09:32.270 --> 09:33.920
Again, we have to limit it.

09:34.220 --> 09:35.980
We cannot place numbers from zero tonight.

09:35.990 --> 09:39.260
So this is again my last column.

09:39.530 --> 09:43.940
I basically the rightmost branch of this tree always has to be limited.

09:43.970 --> 09:47.810
That's the only point of the GDP we have to formulate all the numbers from.

09:49.620 --> 09:50.310
Zero two.

09:50.880 --> 09:54.390
I'm particular number eight and that can be any number.

09:54.810 --> 09:56.580
We have to formulate all these numbers.

09:56.580 --> 09:59.820
And for all these numbers, we are we need to have some properties.

10:00.060 --> 10:05.490
And how will you formulate all the numbers from zero to let's say, ah, by limiting this tree, by

10:05.490 --> 10:07.720
not asking this tree to go on forever.

10:07.720 --> 10:08.070
Right.

10:08.640 --> 10:10.230
So what will happen it.

10:11.300 --> 10:11.490
Then.

10:11.600 --> 10:12.010
Uh.

10:12.680 --> 10:13.010
Okay.

10:13.010 --> 10:14.570
So I placed four in the second place.

10:14.840 --> 10:15.890
Now I can add the place.

10:17.120 --> 10:17.360
Yeah.

10:17.750 --> 10:20.000
Let me make that blue color.

10:20.120 --> 10:20.990
I can play zero.

10:21.020 --> 10:21.920
I can place fun.

10:22.250 --> 10:23.150
I can play, too.

10:24.110 --> 10:27.210
But when I plays for, it has to be a limited.

10:28.010 --> 10:28.920
Or is it three?

10:28.940 --> 10:29.240
Yeah.

10:29.780 --> 10:33.620
If I place three on the right mouse, then it has to be limited again.

10:33.920 --> 10:34.340
Now, again.

10:34.340 --> 10:34.940
What will happen?

10:37.060 --> 10:46.210
Whatever was formed after this, all of them will again use 0 to 9 all combinations of 8029029029 team.

10:46.240 --> 10:46.860
What is this?

10:46.920 --> 10:49.870
This all of them will use zero to name they were.

10:49.870 --> 10:57.760
Now for these three we have the last number is nine the now this three can use zero and use one and

10:57.760 --> 11:01.360
use two and so on till nine as we can see.

11:03.380 --> 11:05.840
It is not only Indian, but let's see.

11:06.080 --> 11:07.100
Let me take on the number.

11:07.100 --> 11:10.730
Let's it is seven eight in the last digit.

11:10.730 --> 11:18.530
So what will happen now that this will be limited to seven, that this particular call should not exceed

11:18.530 --> 11:19.190
beyond seven?

11:19.630 --> 11:24.650
What we need to do is while handling the GDP, right, handling this this particular problem that is

11:24.860 --> 11:30.560
printing some numbers from zero two are the only thing that we need to handle is that whether it is

11:30.560 --> 11:36.950
the last branch or not, if it is the last branch, then limit it to only the current digit.

11:37.340 --> 11:37.630
Right?

11:37.970 --> 11:45.230
And if it is not the last branch, then simply move from 0 to 9 and try all possible combinations,

11:45.380 --> 11:48.230
then move from 0 to 9 to all possible combinations and so on.

11:49.100 --> 11:57.410
So in the next we will cover this by keeping one extra variable, which is, let's call it last, which

11:57.410 --> 12:02.660
will just tell me whether it is the rightmost branch of this tree or not, whether it is the last number

12:02.990 --> 12:03.500
or not.

12:03.860 --> 12:09.050
If it is the last number, that means the next, because of call should only go till the last number.

12:09.560 --> 12:11.150
Otherwise it can go to zero two.

12:11.150 --> 12:12.380
And I hope you understand this.

12:12.890 --> 12:21.200
And in the next call this out after they will start actually dynamic digit Daniel programming this recursion

12:21.200 --> 12:24.680
is very important to understand it will series.
