WEBVTT

0
00:00.660 --> 00:01.040
Okay.

1
00:01.050 --> 00:07.830
So guys, generally what happens is when you submit a code on an online judge, then it will also check

2
00:07.830 --> 00:10.050
for this freopen and all those things.

3
00:10.320 --> 00:15.510
So if you do not know what is an online judge, I hope you have heard about the website called Spots

4
00:15.930 --> 00:20.430
where we have some very classical problems for competitive programming and algorithms too.

5
00:21.330 --> 00:26.490
And what is SPOJ, it is S P O J, O J means online judge similarly A2OJ

6
00:27.240 --> 00:30.000
So there are various online judges out there.

7
00:30.000 --> 00:34.080
You can like stick to one and try out all of it.

8
00:34.800 --> 00:35.910
What is an online judge?

9
00:36.420 --> 00:41.370
When we submit the code, we see that the code goes through an online judge.

10
00:41.700 --> 00:44.010
What does that judge do?

11
00:44.040 --> 00:52.410
It runs our code on input.txt file and it runs the code on the sample input test cases and

12
00:52.410 --> 00:53.160
outputs the.

13
00:54.680 --> 00:59.880
Like judges the output from the output.txt file right, it basically judges input and output that

14
00:59.960 --> 01:05.380
whether the cout is printing, right thing or not, for that what we use, what we do is we use if

15
01:05.420 --> 01:10.100
and def so that my these two files these two lines only work in my.

16
01:11.030 --> 01:13.400
Local compiler and it does not 

17
01:13.400 --> 01:15.290
It does not work in the online judge

18
01:15.410 --> 01:15.710
Right.

19
01:16.130 --> 01:18.350
Here I have some new terms called if and def.

20
01:19.400 --> 01:20.990
Let me explain you this.

21
01:20.990 --> 01:21.790
It's very easy.

22
01:21.800 --> 01:22.850
Not a big deal.

23
01:23.850 --> 01:24.240
So.

24
01:25.180 --> 01:27.370
I hope we all know about what is a define.

25
01:27.430 --> 01:35.260
So whenever like we want to define something we, we write it over here , let's say define apaar

26
01:35.680 --> 01:35.980
Right.

27
01:36.490 --> 01:41.760
And what we can say is we can define apaar as something let's say apaar is this right?

28
01:42.190 --> 01:42.490
So.

29
01:43.930 --> 01:44.230
Okay.

30
01:44.240 --> 01:47.530
So yeah, so we can define apaar as something.

31
01:47.530 --> 01:50.290
But what I'm doing is I'm not defining apaar as something right now.

32
01:50.290 --> 01:52.510
I'm just giving an example of if and def, right?

33
01:52.780 --> 01:58.630
So as we saw let me build this as we saw we give input, 10 it gives me an output.

34
01:58.630 --> 02:07.030
10 let's say I'm printing output n + 1 right, now what I want to do is I say if Apaar is not defined

35
02:07.510 --> 02:08.170
let me write it.

36
02:09.510 --> 02:11.150
If n def

37
02:12.030 --> 02:14.400
Ifndef, ndef means not defined.

38
02:14.400 --> 02:21.600
So similarly, we have another term called if, which is ifdef that means if defined cool, so ifndef

39
02:21.600 --> 02:23.160
that means if not defined.

40
02:23.730 --> 02:24.840
And let me write apaar

41
02:25.900 --> 02:26.110
Right.

42
02:26.470 --> 02:27.790
Then simply go to this.

43
02:27.790 --> 02:28.710
int n

44
02:28.720 --> 02:30.640
input n cout n and.

45
02:32.970 --> 02:33.660
Here we'll write

46
02:33.660 --> 02:37.700
endif that means if has ended like we used to do in python

47
02:38.730 --> 02:42.330
So what happens is let me build this now.

48
02:43.610 --> 02:45.980
What I see is I do not get any output over here.

49
02:46.040 --> 02:46.640
Why, guys?

50
02:46.670 --> 02:51.410
Because it says if apaar is not defined, then only run this piece of code.

51
02:51.890 --> 02:53.930
What does, what we learn ifndef do is

52
02:54.140 --> 02:56.870
It will not even compile this code.

53
02:56.900 --> 03:00.440
If apaar is not defined, it will directly check for apaar.

54
03:00.590 --> 03:03.140
If it is defined above somewhere in the code.

55
03:03.140 --> 03:08.390
If it if it is defined, if it is if this term, the second term is defined, then only this particular

56
03:08.870 --> 03:11.390
piece of code will be compiled.

57
03:11.630 --> 03:13.340
Otherwise it will not be compiled.

58
03:13.800 --> 03:15.500
So if I do not write n over here?

59
03:15.500 --> 03:16.130
What happens?

60
03:17.030 --> 03:17.810
Let me build this.

61
03:17.870 --> 03:18.890
So I get an output.

62
03:19.750 --> 03:22.640
cool, so similarly, what I can do is this way.

63
03:22.850 --> 03:24.920
Let's let me just change it a little.

64
03:26.210 --> 03:31.880
There are some sublime shortcuts, like as I did just now, it is command + control.

65
03:31.880 --> 03:33.260
And we go up and down.

66
03:33.260 --> 03:35.290
We can like drag some things, right?

67
03:35.300 --> 03:37.160
We can duplicate lines.

68
03:37.760 --> 03:39.140
There are some small, small shortcuts.

69
03:39.140 --> 03:43.220
I want you to learn them all because I'll be using them all and they are really handy.

70
03:43.820 --> 03:47.560
They they like save your time for copy pasting and editing right.

71
03:48.820 --> 03:49.090
So.

72
03:49.270 --> 03:54.400
Okay, so let's say I want to print only if print is defined.

73
03:55.370 --> 03:55.610
Cool.

74
03:56.950 --> 04:00.820
If define print then only cout n + 1, right?

75
04:00.970 --> 04:02.170
So print is defined guys.

76
04:02.380 --> 04:03.010
But let's say

77
04:03.010 --> 04:03.940
print is not define.

78
04:06.280 --> 04:06.790
Let's say.

79
04:07.270 --> 04:13.660
Apaar right, now the print is not defined, so it will not print anything because this part of code is

80
04:13.660 --> 04:14.620
not even compiled.

81
04:14.620 --> 04:18.040
So if it is not compiled, compiler will not go and execute this part of code.

82
04:19.030 --> 04:21.320
Cool, guys, I hope you understood what is ifndef .

83
04:21.340 --> 04:25.510
and Ifdef means, so now let us move this over here.

84
04:26.290 --> 04:26.530
Cool.

85
04:27.580 --> 04:34.030
And endif what happens is whenever code runs in an online judge it is in ONLINE_JUDGE.

86
04:35.110 --> 04:40.060
What happens we don't have to define online judge in our particular code, so we won't be defining anything.

87
04:40.540 --> 04:44.070
Now guys, what happens if online judge is not defined?

88
04:44.080 --> 04:46.210
See if you can easily see the ifndef

89
04:46.210 --> 04:52.270
Just that means if online judge is not defined, then simply open this and open this, read input.

90
04:52.270 --> 04:54.090
write output from here to here.

91
04:54.100 --> 04:54.370
Right.

92
04:54.640 --> 04:58.120
This works really well or at my local level.

93
04:58.490 --> 04:58.720
Okay.

94
04:58.870 --> 05:02.140
So this is working really well in local level.

95
05:02.260 --> 05:05.920
So what happens if I submit the code, when I submit the code to any Online Judge?

96
05:05.980 --> 05:11.800
So guys, like codechef, codeforces all these websites have an online judge behind them, which is

97
05:11.800 --> 05:12.970
actually judging their code.

98
05:13.420 --> 05:13.720
Right.

99
05:14.380 --> 05:20.180
So what happens in those online judge, online judge is defined whenever online judge runs the code

100
05:20.230 --> 05:20.980
the online judges.

101
05:21.380 --> 05:23.230
So I'm not talking about all those.

102
05:24.510 --> 05:25.290
Judges out there.

103
05:25.740 --> 05:28.070
But yes, mostly in codechef, codeforces.

104
05:28.080 --> 05:28.670
It will work.

105
05:28.680 --> 05:28.920
Right.

106
05:28.950 --> 05:32.730
But if you want to submit on hackerEarth or HackerRank then you need to comment 

107
05:32.730 --> 05:33.480
these lines out.

108
05:34.470 --> 05:36.600
So I'm just giving you a simple hack to.

109
05:38.530 --> 05:43.150
Use input.txt and output.txt in and the code in the same window.

110
05:43.630 --> 05:45.790
So if online judge is not defined simply.

111
05:46.970 --> 05:48.650
Open this and write this.

112
05:48.830 --> 05:51.380
And also, we won't be ever defining online judge in our code.

113
05:51.950 --> 05:52.670
So this works.

114
05:53.210 --> 05:53.510
Right now.

115
05:53.510 --> 05:54.860
What I'll do is I'll simply.

116
05:55.790 --> 06:01.790
run this and I simply remove this right because this is a part.

117
06:02.940 --> 06:05.400
where, you don't have to do anything now.

118
06:05.430 --> 06:10.060
What I'll do is I'll simply make a snippet of this right?

119
06:10.140 --> 06:14.160
So before making a snippet of this part, let me.

120
06:16.820 --> 06:17.180
Okay.

121
06:19.220 --> 06:23.360
Cool, So before making snippet of this part, what I want you to understand is that.

122
06:24.830 --> 06:25.970
In competitive programming.

123
06:25.970 --> 06:29.810
We what we do is we actually use.

124
06:30.820 --> 06:32.620
cool, let's let's do that in the next.

125
06:32.880 --> 06:33.430
No problem.

126
06:33.440 --> 06:35.080
Let's let's make a snippet of this.

127
06:35.470 --> 06:35.650
Right.

128
06:35.710 --> 06:38.070
So in the next video, we will see snippet.

129
06:38.080 --> 06:44.860
And after that, we'll see how to define some really handy shortcuts that we'll be using later.

130
06:44.980 --> 06:47.110
So thank you guys, see you in the next part.