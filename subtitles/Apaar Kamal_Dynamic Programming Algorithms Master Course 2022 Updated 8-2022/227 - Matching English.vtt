WEBVTT

00:00.670 --> 00:02.920
And everyone, welcome back.

00:03.310 --> 00:08.080
Let's start with the next problem, which is matching in this problem.

00:08.080 --> 00:08.590
Matching.

00:09.700 --> 00:11.350
It's a very, very nice problem.

00:11.350 --> 00:15.340
And this is the problem that will make you understand it.

00:15.370 --> 00:18.820
What does optimizing a records recursion mean?

00:19.660 --> 00:23.680
There is an improvement rate in the first leg that I told you that learning programming is nothing but

00:23.680 --> 00:24.940
optimizing recursion.

00:25.390 --> 00:27.310
That's what this problem will help you understand.

00:29.010 --> 00:36.090
So the men and women board numbered from 1 to 10 for each accommodate the complete compatibility of

00:36.090 --> 00:40.110
men and women is given as an integer a comma.

00:41.160 --> 00:44.580
So if age is one, men and women, they are compatible.

00:44.910 --> 00:49.350
If it is equal to zero, then Tara is trying to make an birth.

00:49.350 --> 00:52.030
Each consisting of a man and a woman were compatible.

00:52.050 --> 00:55.020
So he's trying to make end pairs he has to make.

00:55.020 --> 01:00.120
And because each man and woman must belong to exactly one pair.

01:00.150 --> 01:03.390
So that means a man cannot belong to two women.

01:03.390 --> 01:03.610
Right.

01:03.690 --> 01:04.850
And vice versa.

01:04.890 --> 01:05.480
That's not true.

01:06.030 --> 01:11.250
So each man and woman can must belong to exactly one pair that every man should be paired up with one

01:11.250 --> 01:15.900
woman, and they must belong to exactly one particular fit.

01:16.030 --> 01:16.400
Right.

01:16.410 --> 01:19.700
So it's kind of like one one mapping, right?

01:19.710 --> 01:24.450
1 to 1 mapping to find the number of ways in which tarot can make and boost models.

01:24.570 --> 01:31.950
And by nine plus seven, they and see the constant constants as soon as they even it looks like a brute

01:31.950 --> 01:32.700
force might work.

01:33.300 --> 01:35.730
So that's what we are going to do in this whole tutorial.

01:35.730 --> 01:38.040
We'll just go to brute force, nothing else.

01:38.490 --> 01:41.550
Okay, so here age is zero or one.

01:41.550 --> 01:47.730
So firstly, I just pause the video, try yourself, think about it and let's see the example input.

01:48.810 --> 01:52.170
He began to see the first man incompatible with the second woman and third woman.

01:52.620 --> 01:58.610
A man is compatible with first and third woman and a third man is compatible with all three women's

01:58.860 --> 01:59.130
eight.

01:59.580 --> 01:59.910
So.

02:01.030 --> 02:03.760
Here we have three magic's possibilities.

02:04.000 --> 02:08.200
These are the three magics that first man with second woman, second man with first woman.

02:08.200 --> 02:11.830
And so it's kind of like a marriage problem if you've heard about it.

02:12.130 --> 02:12.420
They.

02:12.910 --> 02:16.690
So what you can say is you're going to call it a bipartisan meeting.

02:16.690 --> 02:19.780
But in this, what we have to do is we have to find out all possible ways.

02:19.780 --> 02:21.370
We have to find a total number of ways.

02:22.210 --> 02:27.460
Otherwise, those kind of problems like Mexican by border inventing problems that can be solved using

02:27.610 --> 02:29.850
maximum flows algorithm which I have already discussed.

02:30.270 --> 02:31.720
Get off to the algorithms.

02:32.110 --> 02:32.390
Eight.

02:33.960 --> 02:34.940
So that's a different thing, right?

02:34.950 --> 02:40.770
But this is in which we have to find out all possible ways, not the maximum edging or something here.

02:40.770 --> 02:43.440
We know that maximum hedging has to be golden.

02:43.740 --> 02:45.780
It means all of them should be matched to.

02:46.740 --> 02:47.020
Right.

02:47.940 --> 02:50.350
So here we have a second set and here we have a third set.

02:50.520 --> 02:51.120
These three.

02:52.230 --> 02:54.780
Types of meetings are possible.

02:55.080 --> 02:58.530
A bit of support here in the second output.

02:58.860 --> 03:02.930
It looks like an and green problem and green problem solution.

03:02.940 --> 03:04.740
If I'm not wrong, see this.

03:06.020 --> 03:07.610
But what happens in in green problem?

03:08.270 --> 03:13.430
If I placed the queen, that means I cannot place a queen on the same row or on the same column or not

03:13.430 --> 03:14.180
even on the diagonal.

03:14.190 --> 03:17.420
So here we can see no two queens intersect with each other.

03:17.620 --> 03:22.250
Rachel The example of an and queen problem where we can see the first one matches with the second once

03:22.250 --> 03:25.370
again matches with the fourth, third matches with the first and fourth matches with the third.

03:25.370 --> 03:28.850
That means there are four ones and there's only this one possibility.

03:29.750 --> 03:37.100
It's a kind of and green only goes if if if I'm not wrong it's kind of and green problem only here.

03:37.100 --> 03:38.600
What we have to do is we have to.

03:39.760 --> 03:40.090
Yeah.

03:41.130 --> 03:41.370
Yeah.

03:42.000 --> 03:45.900
So but in this, what happens is it's like rookie matching, not going matching.

03:45.900 --> 03:50.580
And so in Queen matching, what we can do is there shouldn't be any other event on the same diagonal.

03:51.390 --> 03:56.820
But in matching, what happens if you've heard about the rook placing a problem in duplicate placing

03:56.820 --> 04:01.890
problem, what happens is that you have a chessboard and crossing and you get you have to you can place

04:02.040 --> 04:04.200
rooks, you have to place and rooks on it.

04:04.620 --> 04:06.070
It's a similar problem.

04:06.210 --> 04:07.620
So let me discuss that also.

04:09.180 --> 04:10.160
Then we come back to this.

04:10.170 --> 04:11.070
Not a big deal.

04:12.870 --> 04:13.200
Buddy.

04:15.470 --> 04:16.430
Rook matching.

04:16.430 --> 04:19.370
So Rook is also going 40 inches rate.

04:22.360 --> 04:26.980
So what happens is arrogantly moves at the light left up or down.

04:27.010 --> 04:28.720
That means in the same row, in the same column.

04:29.470 --> 04:29.980
Let's see.

04:31.340 --> 04:33.080
All men and all women are compatible.

04:36.590 --> 04:37.080
But what.

04:37.160 --> 04:38.790
What I have to do is in.

04:39.030 --> 04:41.430
So let me one index them by one.

04:42.390 --> 04:47.910
So it means that I have to place rugs such that no two rugs intersect with each other.

04:48.300 --> 04:50.940
This is one possibility or the second possibility.

04:54.230 --> 04:55.450
This is a strong possibility.

04:56.000 --> 04:59.870
It means every row is paired with every column.

05:00.420 --> 05:01.190
One way or the.

05:02.300 --> 05:02.630
It.

05:04.090 --> 05:10.690
But this is what this problem demands, that you have to select one such kind of be able to tell us

05:10.690 --> 05:15.880
how much that how many these kind of possibilities are possible because that.

05:17.830 --> 05:18.160
No.

05:18.160 --> 05:19.120
Two looks intersect.

05:19.550 --> 05:19.780
Eight.

05:20.560 --> 05:22.990
That means every day is going into every column.

05:23.230 --> 05:24.220
They all have beards.

05:24.640 --> 05:25.850
If you can relate, that's good.

05:25.870 --> 05:27.940
Otherwise, let's not worry about it.

05:28.390 --> 05:33.820
Move over to the dining programming approach and then you can come back and check this out again.

05:34.630 --> 05:34.870
Well.

05:35.770 --> 05:36.730
So I'm not raising it.

05:38.810 --> 05:42.650
So it's kind of that only here we have zero, of course, no compatibility.

05:43.190 --> 05:47.300
And here it's a big solution just to check whether we are getting correct answers or not.

05:47.660 --> 05:47.850
Right.

05:48.590 --> 05:54.080
So how can it start with a brute force rate so brute force won't be tough?

05:54.650 --> 06:00.650
What is a brute force solution for this if I try if I use backtracking in all of these things.

06:02.650 --> 06:04.450
Simple rate trial possible ways.

06:05.350 --> 06:07.690
So what we'll do is we will simply see that.

06:09.460 --> 06:11.050
I'm writing a book for solution.

06:11.320 --> 06:12.090
Let me name it deep.

06:13.120 --> 06:14.200
Let's call it state.

06:14.200 --> 06:15.140
Deep State.

06:15.760 --> 06:17.470
It's like DB, i.e. Goma.

06:17.470 --> 06:21.420
And here I never said it, so I never said it.

06:21.520 --> 06:22.210
And it's called it.

06:22.210 --> 06:24.430
Said W h so.

06:25.970 --> 06:34.010
Or let's say Mama w m women and w for women where m let's take M to be an integer, which will start

06:34.010 --> 06:38.270
from one and go Dylan and it will start merging all then all the elements.

06:39.510 --> 06:40.080
All the men.

06:40.380 --> 06:45.920
And here we have a set of women that is there to get these many women available right now.

06:46.560 --> 06:50.550
What happens is, if I'm dating a brute force audition, I'm just talking about the brute force of the

06:50.550 --> 06:51.420
guys and nothing else.

06:51.880 --> 06:53.610
And I'm trying to match a men.

06:54.700 --> 06:54.920
Here.

06:54.920 --> 06:55.210
I'm trying.

06:55.420 --> 06:56.560
Let's start from one goal.

06:56.710 --> 06:59.680
So I'm trying to match men one with the woman.

07:00.760 --> 07:03.280
Who is like, what do we call it?

07:04.500 --> 07:05.910
Who is compatible with me.

07:06.510 --> 07:06.990
I'm trying to.

07:06.990 --> 07:08.610
MAN Match.

07:08.610 --> 07:12.090
Man one with a woman who is compatible with him.

07:12.510 --> 07:15.330
First of all, that means eof one comma.

07:15.420 --> 07:17.550
Let's say a matching with x woman is true.

07:18.030 --> 07:21.630
This is one in the given to be in the given table.

07:21.990 --> 07:24.180
Rachel, to hear what we have is bb1.

07:25.850 --> 07:28.640
And initially goes, how many women are available?

07:29.420 --> 07:31.050
All women are there in the street.

07:31.070 --> 07:31.910
No woman is taken.

07:31.910 --> 07:33.650
That means no woman is buried up till now.

07:33.650 --> 07:35.930
So men win at all possibilities.

07:35.960 --> 07:39.350
So yeah, I'm just writing a brute force and we'll backtrack and do the stuff.

07:40.310 --> 07:43.010
So here I have a set, which is all the ultimate bait.

07:43.040 --> 07:46.750
Let me take this first example, which is the only.

07:47.240 --> 07:53.050
So how many women are available for him to be compatible with and matched all three women?

07:53.210 --> 07:53.480
Eight.

07:56.600 --> 08:03.320
But I can only imagine man with a woman if she's available in the city, and secondly, she's compatible

08:03.320 --> 08:03.620
with him.

08:04.310 --> 08:07.910
So one can measure two in three, as we can easily see.

08:08.930 --> 08:09.620
Sorry for this.
