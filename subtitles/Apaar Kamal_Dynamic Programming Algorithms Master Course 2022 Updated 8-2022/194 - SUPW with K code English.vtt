WEBVTT

00:00.660 --> 00:03.210
I also explore this problem very quickly.

00:03.740 --> 00:06.630
So, okay, let me first read the input.

00:07.480 --> 00:09.470
And the input is this.

00:09.470 --> 00:15.910
1040 4dd211, two, three.

00:17.870 --> 00:21.770
And one, three, two, one, one, three, two, one, eight.

00:22.460 --> 00:22.760
Yep.

00:22.940 --> 00:25.550
And also, there's one more value that scale.

00:25.550 --> 00:27.960
It's a case equals 2 to 8.

00:28.400 --> 00:34.280
So for every previous two value I want, there can be seven also can be five also.

00:34.280 --> 00:34.550
Right.

00:34.820 --> 00:37.730
You can be equal to in logistic what you're doing.

00:37.730 --> 00:38.480
Let's see what's done.

00:38.480 --> 00:39.020
So we get.

00:39.470 --> 00:41.360
So let me quickly take the input.

00:46.440 --> 00:46.920
Okay.

00:50.400 --> 00:51.580
And let me.

00:51.680 --> 00:53.400
Yeah, after this.

00:53.400 --> 00:57.020
What we can do is we can have this segment three eight.

00:57.120 --> 00:59.040
So let me initialize it.

00:59.640 --> 01:02.970
You can see segment three.

01:04.120 --> 01:04.560
Okay.

01:04.570 --> 01:05.680
I can copy paste.

01:07.830 --> 01:08.180
Yep.

01:08.790 --> 01:08.980
Cool.

01:09.120 --> 01:12.000
And then I have this end function, which is really just.

01:12.990 --> 01:14.490
Let's just build it, right.

01:14.550 --> 01:16.050
Why did we lose it, Will Collins?

01:16.540 --> 01:20.820
I mean, there can be different ways of implementing, say, 28.

01:20.820 --> 01:26.190
So this is a normal segment that I generally use, which is I just figured out this structure I have

01:26.190 --> 01:29.820
this init function, this brain function, so that I can use them directly.

01:30.150 --> 01:30.300
Right?

01:30.400 --> 01:38.340
And I have made a snippet out of it and this update, the query and then the short forms will go.

01:39.240 --> 01:39.870
Let me.

01:40.170 --> 01:40.350
Yeah.

01:40.500 --> 01:41.220
So let's see.

01:41.250 --> 01:46.050
I have the segment three edge and what I'll simply do is I'll end it first.

01:46.500 --> 01:52.340
So how will I, instead of initializing, legitimately build it because in it is called inside build

01:52.350 --> 01:55.620
as well to let me just really directly and.

01:56.990 --> 01:59.480
I built it for Lent, and.

01:59.810 --> 02:01.550
And I have to pause in how to do it.

02:02.350 --> 02:02.590
Right.

02:02.600 --> 02:06.620
So right now, what I can do is I can I don't have to needed.

02:06.620 --> 02:07.250
I know why.

02:07.270 --> 02:12.860
Because because we want to calculate the minimum of GDP values.

02:12.860 --> 02:14.960
Eight And that deep value is not calculated.

02:15.200 --> 02:16.310
Basically, it's not offline.

02:16.310 --> 02:19.370
It's only when we're calculating the value will pass it.

02:19.640 --> 02:22.580
We'll pass it to the object so that it can obtain the values.

02:23.360 --> 02:23.650
Correct.

02:24.970 --> 02:30.670
But the second thing is, I have to find something empty.

02:30.670 --> 02:31.900
I can borrow an empty area.

02:32.470 --> 02:38.980
So let me just quickly take somebody eight and in this B, I'll let me just make it zero.

02:39.020 --> 02:42.820
Like, so the minimum is okay, not zero.

02:43.060 --> 02:44.290
Let me make it something big.

02:45.200 --> 02:51.620
Well, initially I've said that the minimum value is something very big and I just posited to.

02:52.530 --> 02:55.020
This segment rate.

02:55.020 --> 02:57.870
And it will just build it will after this.

02:58.200 --> 03:00.540
What we'll do is we'll simply trade for key.

03:01.860 --> 03:02.110
Right.

03:02.250 --> 03:03.570
And what officer gave you an order?

03:03.570 --> 03:06.600
DPA It will be equal to AA only for this key.

03:07.200 --> 03:08.040
And after this.

03:09.060 --> 03:09.930
I'm kidding.

03:09.960 --> 03:10.210
What?

03:10.450 --> 03:16.680
What we have to do is we have to apply this recognition that it is nothing but a minimum of the previous

03:16.680 --> 03:18.570
KDP values rate.

03:19.080 --> 03:20.180
Let's find the minimum.

03:20.200 --> 03:21.570
So what is the minimum?

03:21.780 --> 03:23.040
That segment you will give me?

03:23.070 --> 03:29.790
I would simply say, okay, so whenever I'm saying the goes to AA for the first row, I have to obtain

03:29.790 --> 03:31.230
it in the three as well.

03:31.890 --> 03:37.560
So what I do is I simply say, do you not update and what things are to be passing the update index

03:37.560 --> 03:38.340
and the value rate.

03:38.700 --> 03:40.230
Let me just pass I.

03:41.350 --> 03:42.680
On the value is DPA.

03:43.810 --> 03:48.140
I simply update the tree as it so that it gives me the right minimum when I needed it.

03:48.580 --> 03:53.650
And now what I'll do is I'll query and in the area I just have to pass Eleanor like the range from L

03:53.670 --> 03:55.480
to ah give me the minimum rate.

03:55.960 --> 03:57.640
So what is the range.

03:58.120 --> 03:58.660
The range.

03:59.170 --> 04:05.080
The range ends on i.e. minus one because I minus one is the bigger one and I minus eight.

04:06.170 --> 04:08.960
So the rain starts on my miniskirt and into an A-minus.

04:11.960 --> 04:12.350
Right.

04:13.040 --> 04:14.780
I think both of them are inclusive.

04:15.320 --> 04:20.830
So what we can do now, we have got the minimum for the previous key values and we know the Square D

04:20.840 --> 04:22.860
function will work in this one.

04:23.510 --> 04:27.560
This it works in law often because it uses divide and conquer approach.

04:28.730 --> 04:29.420
Integrity.

04:29.960 --> 04:32.330
And when I've got the minimum, what is the DBA?

04:32.360 --> 04:35.930
DBA is nothing but whatever the minimum, the previous values, blessing.

04:37.160 --> 04:42.520
And after this, when I have found this deep value, I simply updated in the tree so that when I read

04:42.530 --> 04:49.100
it plus one, this guy values updated so that I get the right minimum for whenever I want or didn't

04:49.760 --> 04:55.130
index i.e. all the previous values are updated in the tree as it to let me just updated.

04:55.130 --> 04:56.060
I simply say that.

04:58.420 --> 04:59.250
I'm doing this.

04:59.260 --> 05:02.970
That means I start update on I disagree with DPA.

05:03.790 --> 05:04.190
Correct.

05:04.780 --> 05:10.630
And so let's let me just bring things out here.

05:13.150 --> 05:14.650
Just give me one sec and.

05:26.450 --> 05:26.810
Okay.

05:27.800 --> 05:28.580
I didn't care.

05:28.580 --> 05:29.660
Daycare center.

05:33.420 --> 05:33.840
Okay.

05:34.290 --> 05:36.110
I had an intense depression.

05:36.130 --> 05:36.400
Okay?

05:36.420 --> 05:40.060
Einstein's to be, but not to be any of the others.

05:40.830 --> 05:42.570
So here you can see that.

05:43.460 --> 05:45.800
These are the values that we wanted.

05:46.550 --> 05:48.950
And what should be the final answer according to the problem?

05:50.240 --> 05:55.670
So according to the problem, the final answer is nothing where the value of the lot, the minimum value

05:55.670 --> 05:57.760
of the last element.

05:58.010 --> 05:59.840
So in this case it was three.

06:00.050 --> 06:04.280
But for my case, what I want to do is I want minimum of the last elements.

06:04.490 --> 06:11.480
But I simply says I simply say that see out at start query and for the last element it will end on end

06:11.480 --> 06:12.020
minus one.

06:12.680 --> 06:14.660
And it will start on and minus.

06:17.170 --> 06:17.530
Correct.

06:17.860 --> 06:19.870
Before this ring, just give me what is a minimum.

06:21.230 --> 06:22.250
And the medium is it.

06:22.640 --> 06:24.890
Let me amend this to be.

06:27.030 --> 06:27.290
Good.

06:27.540 --> 06:35.670
So the the answer for this means from every to renewable topic of at least one element is it and let

06:35.670 --> 06:37.050
me say see if it is five.

06:37.080 --> 06:39.720
What if it is it is only two.

06:39.720 --> 06:43.260
That means I think this one and this one can do everything.

06:43.710 --> 06:43.860
It.

06:43.950 --> 06:44.440
What if.

06:44.910 --> 06:45.240
Or.

06:48.060 --> 06:48.600
Again too.

06:48.660 --> 06:51.360
I think the same reason this one and this one can do everything.

06:51.990 --> 06:53.280
So I hope you understood this.

06:53.280 --> 06:57.840
And the complexity of this is let's see who we are running this loop.

06:57.840 --> 06:58.090
Okay.

06:58.110 --> 07:02.490
So before this, we are initializing a segment and we are asking you to build and.

07:03.990 --> 07:04.230
In.

07:04.230 --> 07:12.540
Well, I'm just passing some, uh, random values to buildings and logging time rate, and it will be

07:12.540 --> 07:13.650
linear and log in daimyo.

07:13.980 --> 07:17.490
After this, I'm just running a loop for games and updating it.

07:17.490 --> 07:18.240
So this is okay.

07:18.240 --> 07:22.710
Log in because update will take log in complexity and log in plus key log in.

07:24.380 --> 07:24.620
Yeah.

07:26.410 --> 07:27.000
And Logan.

07:27.840 --> 07:28.870
Large scale Logan.

07:30.660 --> 07:37.950
And then finally this this and minus gear two times log incredible to log in update also log in they

07:38.250 --> 07:40.350
know plus and minus gear into.

07:41.300 --> 07:42.620
Two in the in.

07:43.560 --> 07:43.830
Very.

07:43.950 --> 07:45.300
So this Kellogg Entertainment's.

07:45.300 --> 07:47.460
Kellogg is, uh, logging on.

07:47.610 --> 07:53.160
So this is in log in plus, uh, two plus one, three log in the end logging.

07:54.190 --> 07:54.580
Correct.

07:54.940 --> 07:57.690
And this is for foreign law and order.

07:58.450 --> 07:59.380
Basically the conflict.

07:59.380 --> 08:00.130
It is nothing but.

08:00.340 --> 08:00.970
And Logan.

08:02.190 --> 08:02.360
But.

08:03.680 --> 08:04.720
I hope you understood this.

08:04.730 --> 08:10.940
In the next section we will find out longest increasing sequence that is a very famous problem will

08:10.940 --> 08:14.830
find it out by using in and logging time only.

08:14.840 --> 08:21.400
We have seen the end squared approach but will optimize it using this segment and we can also okay,

08:21.410 --> 08:28.280
let's use family tree in the next part and let's find out the best answer for the allergies will.
