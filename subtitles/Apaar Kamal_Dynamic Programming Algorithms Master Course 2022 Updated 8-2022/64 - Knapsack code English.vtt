WEBVTT

00:00.390 --> 00:00.630
Yep.

00:00.720 --> 00:04.110
So let's go over this quickly and let me copy this.

00:05.130 --> 00:05.640
Input.

00:09.610 --> 00:12.910
I cannot support it in our tabular form if you want to.

00:13.120 --> 00:14.710
But I leave it to you.

00:14.710 --> 00:15.010
Right.

00:15.580 --> 00:17.920
I'm just writing a pure recursive solution here.

00:18.490 --> 00:22.440
You can order it in the table format if you want to, because it's very easy.

00:22.450 --> 00:24.940
It's very similar to the substitution problem.

00:25.300 --> 00:31.830
You only need the previous row X minus one Y or x minus one y minus a them.

00:32.050 --> 00:33.610
It always does upset some problem.

00:34.330 --> 00:40.720
It does that idea we well we were returning boolean values eight but here we'll be returning some maximum

00:40.720 --> 00:42.100
values and we'll simply add them.

00:43.240 --> 00:44.410
I hope this is clear.

00:44.840 --> 00:45.010
Eight.

00:46.120 --> 00:46.480
So.

00:48.190 --> 00:50.710
I'm leaving the tabular approach to you.

00:50.710 --> 00:50.980
But.

00:51.100 --> 00:52.810
But I would strongly suggest you to do it.

00:53.410 --> 00:57.610
And of course, I've already told you how to optimise the memory and other things.

00:58.870 --> 01:04.990
So when you when you go to the tablet update, you can also optimise the memory of the solution by a

01:04.990 --> 01:05.290
lot.

01:06.220 --> 01:09.640
Basically right now, we'll be taking 2000 to 2000, which is into it.

01:10.030 --> 01:13.090
But when you call it in a tablet manner, you can.

01:14.040 --> 01:17.970
Ordered an off on lease basically by using only one rule.

01:18.360 --> 01:18.990
We all know that.

01:19.020 --> 01:19.590
How to do it.

01:20.550 --> 01:20.830
Eight.

01:21.240 --> 01:23.280
Or if you want me, I can also do it.

01:24.800 --> 01:25.520
But it's fine.

01:25.970 --> 01:31.340
I will leave it to you and I'll provide you the record I brought to the court.

01:31.340 --> 01:33.020
I looked at it in the resources.

01:33.260 --> 01:35.390
But I want you to do it.

01:35.960 --> 01:38.000
Well, so into knapsack index.

01:38.000 --> 01:41.200
And what is the second thing?

01:41.210 --> 01:41.960
Let's call it?

01:44.930 --> 01:47.560
It's a win win, Dixon says of the knapsack.

01:48.200 --> 01:48.470
They.

01:49.380 --> 01:52.230
And lastly, let me quickly take this.

01:54.360 --> 01:56.360
And Eskom and.

02:00.650 --> 02:06.530
So this is the first value is decided, the item next to the value of the item.

02:07.740 --> 02:10.380
So let me take a big at a call size.

02:12.440 --> 02:18.920
Concerned and and and let's to 2001 and because we are doing everything one based on the.

02:20.580 --> 02:26.360
So and this is site size and this is value you a well.

02:27.420 --> 02:28.230
And as you know.

02:29.090 --> 02:31.030
I'll be calling it as a one BS index.

02:31.040 --> 02:33.110
You can do it zero, but also it doesn't matter.

02:33.830 --> 02:36.020
The logic should be clear.

02:37.580 --> 02:38.510
So as I.

02:40.050 --> 02:40.320
Okay.

02:42.890 --> 02:44.510
And we're doing.

02:45.300 --> 02:46.730
Assad and VA.

02:46.860 --> 02:51.060
So we I have taken the value and the paid what I need.

02:51.060 --> 02:59.490
Ultimately, I want to print the out knapsack and direct it as zero an uptick or.

03:00.550 --> 03:01.400
You can do it yourself.

03:01.840 --> 03:06.070
So now I'm sick and I'll start from the last two nicks end.

03:06.430 --> 03:08.020
And initially, as is my.

03:09.440 --> 03:10.430
That's a capacity.

03:11.260 --> 03:11.560
Right.

03:12.370 --> 03:12.750
So.

03:12.880 --> 03:13.120
Yeah.

03:13.180 --> 03:13.860
Just give me a sec.

03:15.780 --> 03:19.890
So let's start with the two things that we heard.

03:19.890 --> 03:25.860
One is include, include, and the second is X load.

03:26.890 --> 03:31.780
So the answer is it's initially the answer is zero.

03:32.290 --> 03:36.040
And if I included, then there's only one condition to include it.

03:36.110 --> 03:44.050
That means, as of index, it would be less than equal to the size of the knapsack that I have included

03:44.050 --> 03:45.040
in this knapsack.

03:46.060 --> 03:48.310
So what else is answer equals to?

03:49.570 --> 03:51.430
I'm now sick.

03:52.570 --> 03:58.540
And what I can say is index minus one because I'm including you're not telling me the answer for the

03:58.990 --> 04:01.100
previous index minus one items.

04:01.480 --> 04:02.830
And what is the size of the knapsack?

04:02.830 --> 04:08.230
It will get reduced to size minus as of index, the current size of the item.

04:08.620 --> 04:12.310
If I'm including the item from a knapsack, then my what will mine to me.

04:13.590 --> 04:18.600
Now tell me the best answer from an X minus one to a soft index.

04:18.630 --> 04:19.210
Oh, sorry.

04:19.230 --> 04:22.710
Not as a phoenix space, because the size won't change.

04:22.710 --> 04:24.090
And I simply didn't answer.

04:25.310 --> 04:25.700
Correct.

04:26.030 --> 04:28.850
And finally, what's the basis of.

04:30.020 --> 04:36.390
We know one thing that babies will never go below zero because we have this check rate and here we are

04:36.390 --> 04:37.000
putting size.

04:37.000 --> 04:39.590
The size on the size will never go below zero.

04:39.600 --> 04:45.780
So we don't have we should not have a case for size, but we can have a base case for index over the

04:45.780 --> 04:47.040
next 3 to 0.

04:47.100 --> 04:51.510
That means I don't have any elements to put in my knapsack.

04:51.720 --> 04:53.310
Then what I will do is simply return the.

04:54.380 --> 04:56.180
Ain't no guy still me.

04:56.810 --> 05:02.420
If I'm including an element into my knapsack, then I'm asking the enemy the best answer for them.

05:02.420 --> 05:07.430
But I'm including the current elementary school or include inclusion of the current element.

05:07.430 --> 05:11.120
I have to take its value in place.

05:11.120 --> 05:11.420
Right.

05:11.420 --> 05:12.650
So let me write it.

05:13.560 --> 05:19.710
So I will take the value of the element that I have and I ask that, okay, now go on, tell me the

05:19.710 --> 05:22.020
answer for the rest of the other numbers.

05:22.920 --> 05:24.120
So this this is important.

05:24.130 --> 05:25.890
We have to take the value here.

05:25.890 --> 05:28.410
We don't have to take the value because we include excluding it.

05:28.890 --> 05:29.430
Remember it.

05:31.900 --> 05:34.070
So pointed out that.

05:34.180 --> 05:34.630
Okay.

05:34.810 --> 05:35.140
Okay.

05:35.140 --> 05:36.520
So it is confusing.

05:36.520 --> 05:38.320
This s with this s.

05:39.250 --> 05:41.470
So let me write this case.

05:43.160 --> 05:44.570
I at me, boss.

05:45.510 --> 05:46.060
Visit.

05:49.420 --> 05:49.660
Hmm.

05:49.750 --> 05:52.300
So here you can see we have easily got 13.

05:52.330 --> 05:54.850
But this is, again, a to this report and solution.

05:55.180 --> 05:56.860
What we'll do is we'll simply memorize it.

05:57.300 --> 05:58.620
But let me add more.

05:58.630 --> 06:00.880
Is it quickly and cross in.

06:02.050 --> 06:04.600
And the best way to.

06:06.060 --> 06:07.380
It's let memory.

06:09.810 --> 06:10.500
Memo.

06:10.950 --> 06:14.400
Uh, index from us size.

06:15.400 --> 06:17.760
So Avon said it's not equal to minus one.

06:17.770 --> 06:18.910
I don't answer.

06:20.700 --> 06:22.310
el-Sisi's answer is zero.

06:23.430 --> 06:24.660
And yeah.

06:25.020 --> 06:26.040
Nothing to change.

06:26.610 --> 06:28.290
And we'll initialize the.

06:29.730 --> 06:31.470
Memo by minus one.

06:38.220 --> 06:38.560
Correct.

06:39.470 --> 06:42.320
So now this is a very nice working solution.

06:42.320 --> 06:45.290
And what's the complexity of this and in the face?

06:46.410 --> 06:49.440
Eight because those are the number of states that we have.

06:50.470 --> 06:53.620
The pure recursion is pure recursion, right?

06:53.710 --> 06:55.690
And in memorization, it is dynamic.

06:57.080 --> 06:57.320
Well.

06:58.190 --> 07:02.030
So I hope you enjoyed the world's most famous problem, which was very easy.

07:02.300 --> 07:07.580
And I want you to code it in the bottom of manner, which is using tabulation.

07:08.870 --> 07:09.950
In the tablet format.

07:09.950 --> 07:12.590
I already had the code on it, but Australia's said.

07:13.490 --> 07:13.940
Thank you.
