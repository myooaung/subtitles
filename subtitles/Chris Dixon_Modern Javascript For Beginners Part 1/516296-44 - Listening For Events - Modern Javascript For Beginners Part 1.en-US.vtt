WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:02.610 --> 00:00:04.090
Welcome back.

00:00:04.090 --> 00:00:06.400
Now we have a basic understanding of events.

00:00:06.400 --> 00:00:07.600
We're now going to take a look at

00:00:07.600 --> 00:00:08.995
how we can listen out for them,

00:00:08.995 --> 00:00:11.270
and then react to these events.

00:00:11.270 --> 00:00:14.860
We jump into this file which is listening for events,

00:00:14.860 --> 00:00:16.555
and open this up in the browser.

00:00:16.555 --> 00:00:20.290
Since we are continuing with our No Meat Burgers project,

00:00:20.290 --> 00:00:21.940
this file is starting to get a little

00:00:21.940 --> 00:00:23.960
bit larger than we want to,

00:00:23.960 --> 00:00:26.080
so we're going to go ahead and create

00:00:26.080 --> 00:00:27.940
a few new JavaScript files,

00:00:27.940 --> 00:00:31.565
which will help us organize all of this JavaScript.

00:00:31.565 --> 00:00:34.480
First of all, since we've created quite a lot of

00:00:34.480 --> 00:00:36.630
elements inside of our Script section,

00:00:36.630 --> 00:00:37.870
what we're going to do is create

00:00:37.870 --> 00:00:41.020
a new file inside of these lessons folder.

00:00:41.020 --> 00:00:47.030
This one is going to be called the elements.js.

00:00:47.030 --> 00:00:49.520
For this, all we need to do is to grab

00:00:49.520 --> 00:00:52.800
all of the contents of our scripts.

00:00:52.910 --> 00:00:55.710
All of the elements that we've created

00:00:55.710 --> 00:00:58.235
in previous videos, put this out,

00:00:58.235 --> 00:01:00.245
leaving an empty script section,

00:01:00.245 --> 00:01:03.360
paste into our new file, and save this.

00:01:03.360 --> 00:01:05.540
Then we'll create a new file

00:01:05.540 --> 00:01:07.895
which is going to be follow upcoming section,

00:01:07.895 --> 00:01:11.740
which is the events.js.

00:01:11.740 --> 00:01:15.110
Having multiple files like this is completely fine.

00:01:15.110 --> 00:01:16.880
All we need to do is to make sure these are

00:01:16.880 --> 00:01:19.180
linked inside of our index page,

00:01:19.180 --> 00:01:21.100
so we keep the script,

00:01:21.100 --> 00:01:22.930
but we need to add the source to point

00:01:22.930 --> 00:01:24.985
to both of these files.

00:01:24.985 --> 00:01:29.330
The first one is the elements.js,

00:01:29.330 --> 00:01:33.980
duplicate this, and the second one was for our events.

00:01:33.980 --> 00:01:36.230
We can check this also works by

00:01:36.230 --> 00:01:38.360
saving and refreshing the browser,

00:01:38.360 --> 00:01:39.440
and we still see all of

00:01:39.440 --> 00:01:42.760
the elements which we created in this file.

00:01:42.760 --> 00:01:45.815
We're now going to move on to how we can work with

00:01:45.815 --> 00:01:48.550
events until it's now for an event.

00:01:48.550 --> 00:01:52.055
We first need a way to attach it to one of our elements,

00:01:52.055 --> 00:01:54.775
and there's different ways we can do this.

00:01:54.775 --> 00:01:58.530
If we go over to the Mozilla documentation.

00:01:59.080 --> 00:02:01.655
On the Mozilla documentation,

00:02:01.655 --> 00:02:04.570
in a section called GlobalEventHandlers,

00:02:04.570 --> 00:02:06.120
so you don't need to go off this

00:02:06.120 --> 00:02:07.200
page if you don't want to,

00:02:07.200 --> 00:02:09.770
but this is going to give us a list of lots

00:02:09.770 --> 00:02:12.390
of the common event handlers which we can use,

00:02:12.390 --> 00:02:15.670
and we can place these on our HTML elements.

00:02:15.670 --> 00:02:17.895
For example, we can listen out for

00:02:17.895 --> 00:02:20.165
lots of events such as onfocus,

00:02:20.165 --> 00:02:21.770
onblur, onclick,

00:02:21.770 --> 00:02:23.680
which is a really common one.

00:02:23.680 --> 00:02:26.720
We can listen out for an element to be drugged and so

00:02:26.720 --> 00:02:27.830
many more which has us cover it

00:02:27.830 --> 00:02:29.720
for lots of different events.

00:02:29.720 --> 00:02:31.940
We can wait for the page to finish loading

00:02:31.940 --> 00:02:33.980
before starting off a function,

00:02:33.980 --> 00:02:36.785
we can listen off for a mouse to pass over an element,

00:02:36.785 --> 00:02:38.140
to leave an element,

00:02:38.140 --> 00:02:40.640
and also things like on play and on pause which are

00:02:40.640 --> 00:02:44.000
related to playing audio and also video.

00:02:44.000 --> 00:02:47.570
As you can see, these event handlers have the on prefix.

00:02:47.570 --> 00:02:49.220
What we're going to do is to go over

00:02:49.220 --> 00:02:50.960
to our project and begin

00:02:50.960 --> 00:02:54.805
by listening for a click with the onclick event handler.

00:02:54.805 --> 00:02:56.700
Into the Index page,

00:02:56.700 --> 00:02:58.770
we're going to look for our image,

00:02:58.770 --> 00:03:01.065
the burger image just inside here,

00:03:01.065 --> 00:03:02.850
and then inside as an attribute,

00:03:02.850 --> 00:03:04.710
we can add onclick.

00:03:04.710 --> 00:03:06.540
Onclick is then going to run

00:03:06.540 --> 00:03:08.120
any piece of JavaScript code,

00:03:08.120 --> 00:03:09.795
so we can run a function

00:03:09.795 --> 00:03:12.050
or we can run something very simple

00:03:12.050 --> 00:03:16.725
like an alert with the text of clicks.

00:03:16.725 --> 00:03:18.660
Save this, and now this is

00:03:18.660 --> 00:03:20.745
attached to our image elements.

00:03:20.745 --> 00:03:23.540
Refresh the page, and then scroll down to

00:03:23.540 --> 00:03:25.250
the correct image which was

00:03:25.250 --> 00:03:28.355
just next to the ultimate vegan title.

00:03:28.355 --> 00:03:31.750
Click on this, and then this is our alert up at the top.

00:03:31.750 --> 00:03:33.860
If we try to click on different images,

00:03:33.860 --> 00:03:35.615
this doesn't work because this is

00:03:35.615 --> 00:03:38.375
only applied to one single element.

00:03:38.375 --> 00:03:40.290
If we go a little bit further than this,

00:03:40.290 --> 00:03:43.675
we can also go over to our events.js file,

00:03:43.675 --> 00:03:45.170
and add a function which is going to

00:03:45.170 --> 00:03:47.500
run when this element has been clicked.

00:03:47.500 --> 00:03:50.565
We just as before create a function,

00:03:50.565 --> 00:03:53.410
and we'll say, "changeImage."

00:03:54.230 --> 00:03:58.020
Now and I will check this works with an alert.

00:03:58.020 --> 00:04:01.830
We'll say "Clicked." Save this file and back to

00:04:01.830 --> 00:04:03.170
our Index page rather than

00:04:03.170 --> 00:04:05.340
running this alert inside of here.

00:04:05.340 --> 00:04:07.220
We can remove this and pass in

00:04:07.220 --> 00:04:10.680
our function name which was "ChangeImage."

00:04:11.780 --> 00:04:14.820
Let's save this back to the browser.

00:04:14.820 --> 00:04:17.630
We can try all of these images and then the final

00:04:17.630 --> 00:04:21.430
one figures our function inside of the separate file.

00:04:21.430 --> 00:04:24.560
This way of adding an event handler as

00:04:24.560 --> 00:04:28.025
an attribute is referred to as an inline event handler.

00:04:28.025 --> 00:04:29.450
This works completely fine,

00:04:29.450 --> 00:04:32.195
but it can be considered a bad practice.

00:04:32.195 --> 00:04:33.950
This is because it mixes up

00:04:33.950 --> 00:04:36.185
our HTML and our JavaScript code.

00:04:36.185 --> 00:04:39.125
What we can do instead is to remove this,

00:04:39.125 --> 00:04:41.045
and leave our HTML intact,

00:04:41.045 --> 00:04:42.605
and then we can listen out for this

00:04:42.605 --> 00:04:44.830
inside of our events file.

00:04:44.830 --> 00:04:46.610
What I'm going to do is to create

00:04:46.610 --> 00:04:48.185
a reference to this element,

00:04:48.185 --> 00:04:51.930
where document.querySelector,

00:04:52.160 --> 00:04:55.490
and then we can select any one of our elements.

00:04:55.490 --> 00:04:58.490
For this, I'm going to grab our header image,

00:04:58.490 --> 00:05:00.325
which is up at the top.

00:05:00.325 --> 00:05:02.150
Since we have multiple images,

00:05:02.150 --> 00:05:04.250
we also need a unique identifier,

00:05:04.250 --> 00:05:07.505
so we'll place in an ID of headerImage,

00:05:07.505 --> 00:05:10.565
and then we can select this inside of our events.

00:05:10.565 --> 00:05:12.890
With this being an ID, we also need to place in

00:05:12.890 --> 00:05:16.640
the hush plus in our headerImage,

00:05:16.640 --> 00:05:20.100
and then store this inside of a variable.

00:05:22.670 --> 00:05:25.120
We're grabbing our images here,

00:05:25.120 --> 00:05:26.825
we have a function to run,

00:05:26.825 --> 00:05:29.650
so now we need a way of linking these together.

00:05:29.650 --> 00:05:33.380
Well, the way we can do this is to access our element,

00:05:33.380 --> 00:05:35.090
which is the headerImage,

00:05:35.090 --> 00:05:36.965
and then we can directly access

00:05:36.965 --> 00:05:40.670
onclick and set this equal to our both function.

00:05:40.670 --> 00:05:46.015
This is changeImage. Let's get a strike,

00:05:46.015 --> 00:05:49.115
reload the browser, click on our main image,

00:05:49.115 --> 00:05:51.385
and this runs our function.

00:05:51.385 --> 00:05:53.520
We don't just want to do an alert,

00:05:53.520 --> 00:05:54.800
though in this case, we want to be able

00:05:54.800 --> 00:05:56.480
to do something to the image.

00:05:56.480 --> 00:05:59.465
We can use any of the techniques learned so far,

00:05:59.465 --> 00:06:02.800
such as adding classes or even CSS.

00:06:02.800 --> 00:06:04.590
Instead of the alert,

00:06:04.590 --> 00:06:06.960
we'll grab our headerImage,

00:06:06.960 --> 00:06:10.400
set the style, and then set

00:06:10.400 --> 00:06:11.990
the width property which is equal

00:06:11.990 --> 00:06:14.585
to a string of 50 percent.

00:06:14.585 --> 00:06:20.180
We'll try this again. This exact same technique

00:06:20.180 --> 00:06:22.310
works exactly the same with all of

00:06:22.310 --> 00:06:23.480
the different event handlers

00:06:23.480 --> 00:06:25.150
which we just looked up before.

00:06:25.150 --> 00:06:27.110
For example, if we wanted to run

00:06:27.110 --> 00:06:28.640
this particular function when

00:06:28.640 --> 00:06:30.950
the mouse passes over this image,

00:06:30.950 --> 00:06:32.480
all we need to do is to change

00:06:32.480 --> 00:06:34.610
onclicked to be any different value,

00:06:34.610 --> 00:06:37.550
such as onmouseover,

00:06:37.550 --> 00:06:41.290
refresh, and as

00:06:41.290 --> 00:06:43.190
soon as this mouse passes over the image,

00:06:43.190 --> 00:06:45.235
this code will now run.

00:06:45.235 --> 00:06:47.750
This setup is a little bit better

00:06:47.750 --> 00:06:49.610
because all of our JavaScript is

00:06:49.610 --> 00:06:52.055
now contained in its own separate file

00:06:52.055 --> 00:06:53.960
outside of the HTML.

00:06:53.960 --> 00:06:57.200
But one of the disadvantage to this approach is,

00:06:57.200 --> 00:06:59.995
if we wanted to trigger multiple functions.

00:06:59.995 --> 00:07:01.800
Let's say we quickly copy

00:07:01.800 --> 00:07:06.710
this function and pasted a new one called hi,

00:07:06.710 --> 00:07:10.430
we can add a quick alert inside of here.

00:07:10.430 --> 00:07:14.585
Then if we also duplicate this line of code here,

00:07:14.585 --> 00:07:17.480
we'll also run our second function which is hi.

00:07:17.480 --> 00:07:20.210
Let's give this a save and see what happens.

00:07:20.210 --> 00:07:23.570
Refresh, move the mouseover,

00:07:23.570 --> 00:07:25.160
we see our alert,

00:07:25.160 --> 00:07:28.150
but we don't see the image size changing.

00:07:28.150 --> 00:07:30.530
When we set up multiple functions

00:07:30.530 --> 00:07:32.390
which respond to the same event,

00:07:32.390 --> 00:07:34.700
it will override the previous one,

00:07:34.700 --> 00:07:37.715
meaning only the last function will be run.

00:07:37.715 --> 00:07:39.650
We're seeing this in action because all we're

00:07:39.650 --> 00:07:42.715
seeing inside the browser was our alert.

00:07:42.715 --> 00:07:45.560
Another way of approaching this is to use

00:07:45.560 --> 00:07:48.590
a method called add event listener.

00:07:48.590 --> 00:07:50.690
This approach will replace both

00:07:50.690 --> 00:07:52.795
of these lines of code just here.

00:07:52.795 --> 00:07:54.650
We still need to access our elements,

00:07:54.650 --> 00:07:56.090
which is the header image,

00:07:56.090 --> 00:07:57.590
but this time we pass it in

00:07:57.590 --> 00:08:00.110
a method called addEventListener.

00:08:00.110 --> 00:08:02.810
Inside of here, the first thing we pass in is

00:08:02.810 --> 00:08:06.005
a name of the event which you want to listen out for.

00:08:06.005 --> 00:08:08.390
Let's go for a click event.

00:08:08.390 --> 00:08:11.210
All of these events are exactly the same as before,

00:08:11.210 --> 00:08:13.765
but we just don't use the on prefix.

00:08:13.765 --> 00:08:16.100
Separated by comma, we can even write

00:08:16.100 --> 00:08:17.990
in a function just like this,

00:08:17.990 --> 00:08:19.850
or instead, we can pass a reference

00:08:19.850 --> 00:08:22.900
to one of the functions which we already have.

00:08:22.900 --> 00:08:26.160
Let's go for a changeImage,

00:08:26.160 --> 00:08:29.675
and we could try this one out in the browser.

00:08:29.675 --> 00:08:33.335
Click the image, and this one now works.

00:08:33.335 --> 00:08:35.330
One of the advantages of

00:08:35.330 --> 00:08:37.220
using this addEventListener method,

00:08:37.220 --> 00:08:40.475
is it also allows multiple functions too.

00:08:40.475 --> 00:08:42.710
If we were to duplicate this line,

00:08:42.710 --> 00:08:44.210
unlike when we added

00:08:44.210 --> 00:08:47.720
the onclick event handler before or the onmouseover,

00:08:47.720 --> 00:08:50.030
we can pass in a second function and both of

00:08:50.030 --> 00:08:52.990
these functions will now run in the browser,

00:08:52.990 --> 00:08:55.670
like this, there's our alert,

00:08:55.670 --> 00:08:58.790
and then the image will be shrunk to 50 percent.

00:08:58.790 --> 00:09:00.560
This is really useful if we have

00:09:00.560 --> 00:09:02.740
multiple functions which we want to run,

00:09:02.740 --> 00:09:04.420
but I'm just going to remove

00:09:04.420 --> 00:09:08.120
this hi example and leave a neat change image.

00:09:08.120 --> 00:09:12.080
AddEventListener also has some other benefits too.

00:09:12.080 --> 00:09:14.255
Another one is, we can also remove

00:09:14.255 --> 00:09:17.350
event listener code when it's no longer needed.

00:09:17.350 --> 00:09:18.920
It also has a setting,

00:09:18.920 --> 00:09:22.265
which means we can adjust when the event is fired too.

00:09:22.265 --> 00:09:23.840
But both of these will be covered in

00:09:23.840 --> 00:09:26.320
more detail during this section.

00:09:26.320 --> 00:09:29.645
We have lots of different events also in our program,

00:09:29.645 --> 00:09:32.900
the developer tools can really help us with this too.

00:09:32.900 --> 00:09:36.500
If we right-click and "Inspect" inside of Chrome,

00:09:36.500 --> 00:09:38.300
we can use the Inspector to point to

00:09:38.300 --> 00:09:40.765
any one of these elements we want to check.

00:09:40.765 --> 00:09:42.660
In our case, if we click on

00:09:42.660 --> 00:09:44.280
this headerImage and then

00:09:44.280 --> 00:09:46.375
go down to the Event Listeners tab,

00:09:46.375 --> 00:09:48.790
we can see we have a click listener on this,

00:09:48.790 --> 00:09:50.820
and if we open this up, we can see,

00:09:50.820 --> 00:09:52.780
attached to this is a Click Listener,

00:09:52.780 --> 00:09:56.090
which then runs our function called changeImage.

00:09:56.090 --> 00:09:58.340
This is really useful for figuring out

00:09:58.340 --> 00:09:59.480
which event listeners are

00:09:59.480 --> 00:10:02.045
attached to which one of our elements.

00:10:02.045 --> 00:10:04.820
Just to recap, we have covered three ways

00:10:04.820 --> 00:10:07.250
to attach an Event Listener to an element.

00:10:07.250 --> 00:10:10.760
First, we added an inline HTML attributes.

00:10:10.760 --> 00:10:12.050
Although this is probably

00:10:12.050 --> 00:10:13.725
something you should avoid to keep

00:10:13.725 --> 00:10:17.299
our HTML clean and separate from our JavaScript.

00:10:17.299 --> 00:10:21.060
We then called the Event Listener directly on elements,

00:10:21.060 --> 00:10:22.850
and this kept all of our JavaScript code

00:10:22.850 --> 00:10:25.040
together in one single file.

00:10:25.040 --> 00:10:27.020
One of the limitations was we could

00:10:27.020 --> 00:10:28.850
only run one single function,

00:10:28.850 --> 00:10:32.590
one piece of code from this example, and finally,

00:10:32.590 --> 00:10:34.670
we looked at the addEventListener method,

00:10:34.670 --> 00:10:36.500
which not only solved this problem,

00:10:36.500 --> 00:10:39.170
but it also has more features available too,

00:10:39.170 --> 00:10:42.210
which we'll discover in the upcoming videos.
