WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.880 --> 00:00:04.800
We know how to select an element.

00:00:04.800 --> 00:00:07.635
How do we actually go about changing them?

00:00:07.635 --> 00:00:09.270
Well, that's we're going to take a look

00:00:09.270 --> 00:00:10.490
at in this video.

00:00:10.490 --> 00:00:12.150
We're going to show you how we can change

00:00:12.150 --> 00:00:13.890
the values of elements and

00:00:13.890 --> 00:00:15.090
also how we can add and

00:00:15.090 --> 00:00:17.925
remove attributes using JavaScript.

00:00:17.925 --> 00:00:21.090
For this lesson, this is changing values and attributes,

00:00:21.090 --> 00:00:24.765
so open this up, and also inside of the browser.

00:00:24.765 --> 00:00:27.720
To begin, we've got this heading at the top,

00:00:27.720 --> 00:00:29.250
the title on the links,

00:00:29.250 --> 00:00:32.175
and also the image placed just below.

00:00:32.175 --> 00:00:34.710
What we're going to do for this is first of all,

00:00:34.710 --> 00:00:37.055
look at how we can change the text contents,

00:00:37.055 --> 00:00:39.270
and we've already looked at this early on in the course,

00:00:39.270 --> 00:00:41.280
so they should throw up no surprises.

00:00:41.280 --> 00:00:43.580
What we're going to do is to change the title from

00:00:43.580 --> 00:00:47.050
meaty burgers to be no meat burgers,

00:00:47.050 --> 00:00:50.190
and we could do this down at the bottom.

00:00:50.190 --> 00:00:52.370
First of all, the word which you want to

00:00:52.370 --> 00:00:54.710
change or replace is going to be meaty.

00:00:54.710 --> 00:00:57.160
Therefore, we'll cut this out,

00:00:57.160 --> 00:01:00.210
and then place it inside of a span element,

00:01:00.210 --> 00:01:02.525
we could add an ID or any way

00:01:02.525 --> 00:01:04.900
of grabbing this elements which you want to.

00:01:04.900 --> 00:01:06.530
For this example I'm going to go for

00:01:06.530 --> 00:01:09.515
the class called change title,

00:01:09.515 --> 00:01:12.320
and then we can change the text content

00:01:12.320 --> 00:01:14.080
inside of the span.

00:01:14.080 --> 00:01:15.980
To do this, we're going to

00:01:15.980 --> 00:01:18.050
need to make use of JavaScript.

00:01:18.050 --> 00:01:20.885
Create a script section down at the bottom,

00:01:20.885 --> 00:01:23.300
and we can select just this section,

00:01:23.300 --> 00:01:25.985
install this inside of a constant called el.

00:01:25.985 --> 00:01:28.075
This is usually for elements,

00:01:28.075 --> 00:01:30.380
and then what we need to do is to grab

00:01:30.380 --> 00:01:34.475
the element by the class name using the querySelector.

00:01:34.475 --> 00:01:36.410
Since is easy class, we use

00:01:36.410 --> 00:01:40.140
the dot and the class name was changed title.

00:01:40.400 --> 00:01:45.005
As we know, this is our way of grabbing this element.

00:01:45.005 --> 00:01:47.690
To begin making changes to these elements,

00:01:47.690 --> 00:01:49.535
like with most things in JavaScript,

00:01:49.535 --> 00:01:51.965
it all begins with a parent object

00:01:51.965 --> 00:01:54.535
where we're going to inherit certain things from.

00:01:54.535 --> 00:01:56.220
If we do a console.log,

00:01:56.220 --> 00:01:59.090
just below and log the value of our elements.

00:01:59.090 --> 00:02:02.790
Let's save this and open this up inside the console.

00:02:03.680 --> 00:02:06.395
Refresh, now we can see we have

00:02:06.395 --> 00:02:09.110
access to the span which you just selected.

00:02:09.110 --> 00:02:11.630
But even though we know this is a span elements,

00:02:11.630 --> 00:02:13.400
if we do the typeof and

00:02:13.400 --> 00:02:15.350
then it refreshed this once again,

00:02:15.350 --> 00:02:18.100
we can see this is actually an object.

00:02:18.100 --> 00:02:21.440
It returns back an object which is an element object,

00:02:21.440 --> 00:02:24.875
and like any other object which we looked up previously,

00:02:24.875 --> 00:02:26.825
this means we can also access

00:02:26.825 --> 00:02:30.835
certain methods and properties available on this object.

00:02:30.835 --> 00:02:32.870
There are many ways to choose from,

00:02:32.870 --> 00:02:36.080
but this video is going to uncover some common ones.

00:02:36.080 --> 00:02:38.390
To begin, we can get the text content of

00:02:38.390 --> 00:02:42.230
an element by using a method called innerText.

00:02:42.230 --> 00:02:45.090
If we do a console.log for

00:02:45.090 --> 00:02:49.440
the value of our elements.innerText.

00:02:49.440 --> 00:02:51.680
Make sure this is camelCase with the capital

00:02:51.680 --> 00:02:54.935
T. Now into the console,

00:02:54.935 --> 00:02:57.250
this is the value of meaty.

00:02:57.250 --> 00:02:58.860
This is the innerText

00:02:58.860 --> 00:03:00.990
content from between the span tags,

00:03:00.990 --> 00:03:03.465
and it is this text which we see here.

00:03:03.465 --> 00:03:07.055
InnerText not only grabs the current x content,

00:03:07.055 --> 00:03:09.685
but we can also replace it too,

00:03:09.685 --> 00:03:11.315
and the way to do this is to

00:03:11.315 --> 00:03:14.675
access our elements by using el.

00:03:14.675 --> 00:03:16.760
Set the inner text,

00:03:16.760 --> 00:03:19.340
and we can assign this to be a new value such as

00:03:19.340 --> 00:03:24.590
no meat and closed on the console and reload the page.

00:03:24.590 --> 00:03:26.960
Our changes now take effect.

00:03:26.960 --> 00:03:29.120
But what about if we also wanted to add

00:03:29.120 --> 00:03:30.830
some markup to this text?

00:03:30.830 --> 00:03:32.510
For example, if we wanted to

00:03:32.510 --> 00:03:34.835
add the mark elements around this text,

00:03:34.835 --> 00:03:37.655
we could add the opening and the closing tag.

00:03:37.655 --> 00:03:40.430
Now if we save this and refresh,

00:03:40.430 --> 00:03:42.470
it probably no surprise that we

00:03:42.470 --> 00:03:44.845
see these outputs as a string.

00:03:44.845 --> 00:03:47.120
Rather than otputting this as a string,

00:03:47.120 --> 00:03:48.290
the way we can format these

00:03:48.290 --> 00:03:51.185
properly is to instead of inserting innertText,

00:03:51.185 --> 00:03:54.510
we can change this to be innerHTML

00:03:54.530 --> 00:03:57.560
and now the mark elements will take effect

00:03:57.560 --> 00:04:00.385
rather than outputting this as a string.

00:04:00.385 --> 00:04:02.470
One thing to watch out for though when

00:04:02.470 --> 00:04:04.580
inserting HTML like this,

00:04:04.580 --> 00:04:06.785
there is always a small chance that a user could

00:04:06.785 --> 00:04:09.565
input some dangerous code onto your site.

00:04:09.565 --> 00:04:12.050
It's really important to not set

00:04:12.050 --> 00:04:15.665
the innerHTML for any content which the user can provide,

00:04:15.665 --> 00:04:18.365
such as on a form or text input.

00:04:18.365 --> 00:04:21.610
Hello HTML does have some defenses against this.

00:04:21.610 --> 00:04:22.790
To be on the safe side,

00:04:22.790 --> 00:04:25.790
it is recommended to avoid inner HTML if you

00:04:25.790 --> 00:04:27.695
were just inserting a plain text

00:04:27.695 --> 00:04:29.345
just like we were before.

00:04:29.345 --> 00:04:31.850
We'll revert it back to be in a text

00:04:31.850 --> 00:04:34.640
and along with the actual textContent,

00:04:34.640 --> 00:04:37.355
we can also get attributes such as the ID,

00:04:37.355 --> 00:04:38.645
such as the class,

00:04:38.645 --> 00:04:41.230
the href, and also the source.

00:04:41.230 --> 00:04:44.430
We could also set new ones too.

00:04:44.430 --> 00:04:47.830
To see this jump into the console,

00:04:48.370 --> 00:04:50.780
and then we can select our elements

00:04:50.780 --> 00:04:52.955
, which is lower case.

00:04:52.955 --> 00:04:55.100
We know for these elements we have

00:04:55.100 --> 00:04:56.705
the class of change title,

00:04:56.705 --> 00:04:59.614
and if we wanted to select this using JavaScript,

00:04:59.614 --> 00:05:02.430
we can use getAttributes.

00:05:02.680 --> 00:05:04.940
Inside of the brackets.

00:05:04.940 --> 00:05:06.860
We can pass in a string with the name of

00:05:06.860 --> 00:05:09.160
the attributes which you want to select.

00:05:09.160 --> 00:05:10.910
If we go for the class, we can see this

00:05:10.910 --> 00:05:12.575
returned back just below,

00:05:12.575 --> 00:05:14.840
and also if we search for some fan,

00:05:14.840 --> 00:05:16.550
such as the ID, we

00:05:16.550 --> 00:05:18.560
don't currently have an ID on this element.

00:05:18.560 --> 00:05:22.030
This therefore, would return the value of null.

00:05:22.030 --> 00:05:25.310
We could also use this over in our code editor,

00:05:25.310 --> 00:05:28.205
and we could store the values inside of variables.

00:05:28.205 --> 00:05:31.915
We could also set a new ID if we wanted to.

00:05:31.915 --> 00:05:35.210
Crop the elements and then we can directly set

00:05:35.210 --> 00:05:37.235
the ID for this property

00:05:37.235 --> 00:05:40.085
and set this to be a new string such as new,

00:05:40.085 --> 00:05:43.470
say this, and open up the console.

00:05:43.790 --> 00:05:48.500
Refresh, and now if we go into the Elements tab,

00:05:48.500 --> 00:05:50.195
into the body section,

00:05:50.195 --> 00:05:52.010
the header, open up

00:05:52.010 --> 00:05:54.290
the site title and we can see alongside of a class,

00:05:54.290 --> 00:05:56.665
we also have this new ID.

00:05:56.665 --> 00:05:58.770
If we did already have an ID in

00:05:58.770 --> 00:06:00.515
place for these particular elements,

00:06:00.515 --> 00:06:03.275
it would override the original value.

00:06:03.275 --> 00:06:05.840
We also have available various methods

00:06:05.840 --> 00:06:08.015
which will work with attributes too.

00:06:08.015 --> 00:06:09.650
We have getAttributes,

00:06:09.650 --> 00:06:14.165
we have setAttributes and also removeAttribute too.

00:06:14.165 --> 00:06:18.030
Inside the console, let's take a look at these.

00:06:18.030 --> 00:06:20.040
I go over to the console, we can also use

00:06:20.040 --> 00:06:22.290
the getAttribute method which we looked at

00:06:22.290 --> 00:06:24.500
before and we can pass in the ID

00:06:24.500 --> 00:06:27.185
to get the new value which we just added.

00:06:27.185 --> 00:06:29.140
This is the return value of new,

00:06:29.140 --> 00:06:30.395
and we can also store this

00:06:30.395 --> 00:06:32.675
inside of variables in our code,

00:06:32.675 --> 00:06:34.940
as well as getting these values as just mentioned,

00:06:34.940 --> 00:06:37.720
we can also set new attributes too.

00:06:37.720 --> 00:06:40.220
Open the editor, let's add a new class which is

00:06:40.220 --> 00:06:42.955
going to change the color of our title.

00:06:42.955 --> 00:06:45.425
If we scroll up to the CSS,

00:06:45.425 --> 00:06:47.120
we can see just here we already have

00:06:47.120 --> 00:06:48.695
in place a green class,

00:06:48.695 --> 00:06:51.230
which is going to set this text color just here.

00:06:51.230 --> 00:06:54.130
We can add the green class to our elements.

00:06:54.130 --> 00:06:56.925
Let's do this just below our ID.

00:06:56.925 --> 00:07:00.900
We do this with el.setAttributes.

00:07:00.900 --> 00:07:03.895
But we need to pass it two separate values.

00:07:03.895 --> 00:07:06.545
The first one is the name of the attributes.

00:07:06.545 --> 00:07:08.275
We're going to add a class,

00:07:08.275 --> 00:07:09.835
separated by a comma.

00:07:09.835 --> 00:07:13.715
The second value is the className which is green.

00:07:13.715 --> 00:07:16.880
Now if we save this and head over to the browser,

00:07:16.880 --> 00:07:19.790
refresh the green class has now applied.

00:07:19.790 --> 00:07:22.070
Also if you go into the elements

00:07:22.070 --> 00:07:23.740
and then into our section,

00:07:23.740 --> 00:07:27.095
so this is the body, the header and the title.

00:07:27.095 --> 00:07:29.900
The span element now has this class of green.

00:07:29.900 --> 00:07:32.080
If you look closely, we can see that this is

00:07:32.080 --> 00:07:34.585
the only class which span now has.

00:07:34.585 --> 00:07:37.900
Even though early we added this class of change-title,

00:07:37.900 --> 00:07:40.585
this happens because when we use set attributes,

00:07:40.585 --> 00:07:42.810
not only do we add a new class but we

00:07:42.810 --> 00:07:45.430
also replace the existing one too.

00:07:45.430 --> 00:07:47.680
If we did want to include this as

00:07:47.680 --> 00:07:49.885
an additional class rather than replace,

00:07:49.885 --> 00:07:51.460
there's another way to do this and we'll

00:07:51.460 --> 00:07:53.615
take a look at this in just a moment.

00:07:53.615 --> 00:07:55.870
But first, let's take a look at how we can remove

00:07:55.870 --> 00:07:59.185
an attribute with the remove attribute method.

00:07:59.185 --> 00:08:01.840
All we need to do inside of here is to pass in

00:08:01.840 --> 00:08:04.375
the attribute name which we want to remove.

00:08:04.375 --> 00:08:06.685
Let's go for the ID.

00:08:06.685 --> 00:08:09.340
Refresh the browser and this ID has

00:08:09.340 --> 00:08:11.620
now been removed from our span.

00:08:11.620 --> 00:08:14.110
Working with dynamic attributes like this is

00:08:14.110 --> 00:08:17.065
really useful for updating things like our image.

00:08:17.065 --> 00:08:19.360
We could select this image element

00:08:19.360 --> 00:08:21.245
just here and if we wanted to,

00:08:21.245 --> 00:08:24.455
we could dynamically change the image source.

00:08:24.455 --> 00:08:26.320
First of all, if we remove

00:08:26.320 --> 00:08:27.545
the image source and then we can

00:08:27.545 --> 00:08:31.000
dynamically add this back in into our script.

00:08:31.000 --> 00:08:35.225
Select the image, install this inside of a variable.

00:08:35.225 --> 00:08:38.230
We'll use the querySelector,

00:08:38.230 --> 00:08:43.390
pass in the image elements then on the image element,

00:08:43.390 --> 00:08:46.380
we can use the set attribute method.

00:08:46.380 --> 00:08:49.355
This is going to set the image source.

00:08:49.355 --> 00:08:53.065
Just like above here, we are passing it two values.

00:08:53.065 --> 00:08:55.355
The first one is the attribute name of

00:08:55.355 --> 00:08:57.815
source and then separated by a comma,

00:08:57.815 --> 00:08:59.590
we'll pass in the value which is

00:08:59.590 --> 00:09:02.885
our image name of burger.jpeg.

00:09:02.885 --> 00:09:07.745
We can duplicate this and place in the old text which is

00:09:07.745 --> 00:09:11.335
burger image over to the browser and now

00:09:11.335 --> 00:09:13.260
our image is back in place but

00:09:13.260 --> 00:09:15.745
this time we've started using JavaScript.

00:09:15.745 --> 00:09:17.830
Personally, I've used things like this in

00:09:17.830 --> 00:09:19.925
the past to create games which will then

00:09:19.925 --> 00:09:22.990
show up with random images and also to add

00:09:22.990 --> 00:09:24.250
or remove classes to change

00:09:24.250 --> 00:09:26.585
the look of certain things too,

00:09:26.585 --> 00:09:28.090
such as the end of a game,

00:09:28.090 --> 00:09:29.500
we may want to add a new class

00:09:29.500 --> 00:09:31.085
to show or hide some elements,

00:09:31.085 --> 00:09:32.810
such as a score section.

00:09:32.810 --> 00:09:34.900
We could also set the text of green for

00:09:34.900 --> 00:09:37.930
the win or use red text for a defeat.

00:09:37.930 --> 00:09:39.970
Go back to the problem of multiple

00:09:39.970 --> 00:09:41.830
classes which we had before.

00:09:41.830 --> 00:09:43.555
First, what we're going to do is to add

00:09:43.555 --> 00:09:45.830
multiple classes to our title.

00:09:45.830 --> 00:09:48.590
We'll do this inside of the span section,

00:09:48.590 --> 00:09:50.685
just have to change title

00:09:50.685 --> 00:09:53.765
at the class of blue and also red.

00:09:53.765 --> 00:09:56.780
Then we can also comment out this line just here,

00:09:56.780 --> 00:09:59.540
so it doesn't override these three classes.

00:09:59.540 --> 00:10:01.295
These three classes can now be

00:10:01.295 --> 00:10:03.160
retrieved in multiple ways.

00:10:03.160 --> 00:10:05.865
First, we have something called className.

00:10:05.865 --> 00:10:07.325
If we go into the console,

00:10:07.325 --> 00:10:09.245
we can see this by accessing

00:10:09.245 --> 00:10:13.460
our elements and then selecting className.

00:10:13.460 --> 00:10:16.630
It's enter, you'll see the return value of green,

00:10:16.630 --> 00:10:18.100
so this just needs to be refreshed.

00:10:18.100 --> 00:10:19.715
We'll try this once more.

00:10:19.715 --> 00:10:21.750
Now we get back the three classes of

00:10:21.750 --> 00:10:24.035
change-title, blue and red.

00:10:24.035 --> 00:10:26.770
If you take a closer look at the return value here,

00:10:26.770 --> 00:10:29.350
this is contained inside of the quotations.

00:10:29.350 --> 00:10:32.575
We know that the className will return back a string.

00:10:32.575 --> 00:10:34.020
As well as a string will also

00:10:34.020 --> 00:10:36.305
have something called classList.

00:10:36.305 --> 00:10:39.335
The classList will return back if we open

00:10:39.335 --> 00:10:42.560
this up an array-like collection of values.

00:10:42.560 --> 00:10:45.310
We have index Number 0, 1, and 2.

00:10:45.310 --> 00:10:46.480
We can also select these

00:10:46.480 --> 00:10:49.410
individually inside of these square brackets.

00:10:49.410 --> 00:10:52.925
If we wanted to select blue which is Number 1,

00:10:52.925 --> 00:10:54.730
we can select Number 2 which is

00:10:54.730 --> 00:10:57.955
red and 0 for change-title.

00:10:57.955 --> 00:11:01.195
This is how we can retrieve our classList but what about

00:11:01.195 --> 00:11:02.870
the problem which we had before

00:11:02.870 --> 00:11:05.180
which was to add multiple classes.

00:11:05.180 --> 00:11:07.660
Well, the way we can do this is also to access

00:11:07.660 --> 00:11:09.880
the classList which will give us access

00:11:09.880 --> 00:11:12.725
to an add and also a remove method.

00:11:12.725 --> 00:11:14.625
To do this just below our comments,

00:11:14.625 --> 00:11:15.700
so rather than setting

00:11:15.700 --> 00:11:18.130
the attribute just like this which will only

00:11:18.130 --> 00:11:19.885
override the existing value

00:11:19.885 --> 00:11:22.555
instead we can access our elements,

00:11:22.555 --> 00:11:24.815
use a classList which then

00:11:24.815 --> 00:11:27.590
gives us access to a method called add.

00:11:27.590 --> 00:11:31.810
We can add multiple classes separated by a comma.

00:11:32.280 --> 00:11:34.210
Save this and refresh.

00:11:34.210 --> 00:11:36.470
Now, the green class has now been applied.

00:11:36.470 --> 00:11:39.130
Once again, if we check our classList,

00:11:39.130 --> 00:11:41.210
we can see the value of green and cyan

00:11:41.210 --> 00:11:43.985
has been added to the end of these classes.

00:11:43.985 --> 00:11:46.645
The remove method works just the same as well.

00:11:46.645 --> 00:11:50.555
We access the classList or remove.

00:11:50.555 --> 00:11:52.480
This time as a string, we can pass in any

00:11:52.480 --> 00:11:54.635
one of our classes which we want to remove.

00:11:54.635 --> 00:11:57.700
Let's go for blue, Save and Refresh.

00:11:57.700 --> 00:12:01.430
Now if we access our element or classList once again,

00:12:01.860 --> 00:12:06.515
the value of blue has now been removed from this element.

00:12:06.515 --> 00:12:09.095
If we wanted to go even further and

00:12:09.095 --> 00:12:11.620
rather than adding individual values like this,

00:12:11.620 --> 00:12:15.285
we could also set a variable containing our classNames.

00:12:15.285 --> 00:12:17.110
Let's remove the value of green

00:12:17.110 --> 00:12:19.450
and cyan and then just above,

00:12:19.450 --> 00:12:22.135
create a constant called classes

00:12:22.135 --> 00:12:24.550
and set these up as an array.

00:12:24.550 --> 00:12:27.430
First of all, green. We'll keep this

00:12:27.430 --> 00:12:30.160
the same as before by adding cyan and then we

00:12:30.160 --> 00:12:31.900
can use the spread operator which is

00:12:31.900 --> 00:12:33.805
the three dots to pull out

00:12:33.805 --> 00:12:36.215
all the values from the classes array and

00:12:36.215 --> 00:12:39.195
place this directly inside of the add method.

00:12:39.195 --> 00:12:44.300
Save, Refresh, access our classList.

00:12:44.300 --> 00:12:48.325
This still also works just like before.

00:12:48.325 --> 00:12:51.365
The recap, we can select any elements and set

00:12:51.365 --> 00:12:54.595
the inner text value with the inner text method.

00:12:54.595 --> 00:12:56.950
We also have inner HTML to add

00:12:56.950 --> 00:13:00.310
the HTML content inside of an element.

00:13:00.310 --> 00:13:03.120
We also have the id property which can be used

00:13:03.120 --> 00:13:06.300
to update or to set a new ID.

00:13:06.300 --> 00:13:09.520
Also, we have full control of our attributes.

00:13:09.520 --> 00:13:11.350
We can get any existing attribute

00:13:11.350 --> 00:13:13.585
such as a class or the source.

00:13:13.585 --> 00:13:15.460
We can set new ones and we can

00:13:15.460 --> 00:13:17.980
also remove any attributes too.

00:13:17.980 --> 00:13:20.045
Last, of all, we looked at classes and

00:13:20.045 --> 00:13:22.045
the different ways we can use to add,

00:13:22.045 --> 00:13:24.665
update and also to remove them.

00:13:24.665 --> 00:13:27.370
We have the className which we can use to retrieve

00:13:27.370 --> 00:13:30.245
back the values of our classes as a string.

00:13:30.245 --> 00:13:33.290
We can also use this to add a new class too.

00:13:33.290 --> 00:13:35.230
We also have classList which is

00:13:35.230 --> 00:13:38.165
an array-like collection of all of our classNames.

00:13:38.165 --> 00:13:40.835
This also exposes some methods which we can use

00:13:40.835 --> 00:13:44.165
to add and also remove some classes.

00:13:44.165 --> 00:13:46.630
Finally, we also looked at a different way of

00:13:46.630 --> 00:13:49.365
including classes which was to create an array.

00:13:49.365 --> 00:13:51.250
Then we can make use of these classes

00:13:51.250 --> 00:13:53.060
by using the spread operator.

00:13:53.060 --> 00:13:55.450
Next, we'll also look at how we can directly

00:13:55.450 --> 00:13:59.540
modify CSS properties using JavaScript.
