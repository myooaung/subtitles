WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:03.290 --> 00:00:07.590
We now understand what a string is in JavaScript and we

00:00:07.590 --> 00:00:08.805
also know how to store them

00:00:08.805 --> 00:00:11.235
into containers called variables.

00:00:11.235 --> 00:00:13.740
But what if we wanted to combine these two things

00:00:13.740 --> 00:00:16.575
by adding a variable into a string?

00:00:16.575 --> 00:00:18.540
This is completely possible using

00:00:18.540 --> 00:00:21.905
JavaScript and there's different ways to do this.

00:00:21.905 --> 00:00:24.165
Let's go over to our files,

00:00:24.165 --> 00:00:25.785
which is number 5,

00:00:25.785 --> 00:00:28.560
mixing strings with variables.

00:00:28.560 --> 00:00:32.040
I'm going to open this up inside of the browser.

00:00:32.040 --> 00:00:33.990
Inside of this index page,

00:00:33.990 --> 00:00:35.790
we have our level 1 heading up at

00:00:35.790 --> 00:00:37.965
the top with the ID of title.

00:00:37.965 --> 00:00:40.020
We then have two constants below,

00:00:40.020 --> 00:00:43.830
we have this name and also a likes constant too.

00:00:43.830 --> 00:00:47.720
Finally, we select our title and update the inner text.

00:00:47.720 --> 00:00:49.580
What if we wanted to update

00:00:49.580 --> 00:00:53.290
this title and also mixing these two variables?

00:00:53.290 --> 00:00:55.590
The way to do this, we may want

00:00:55.590 --> 00:00:58.680
the string of text to say my name is.

00:00:58.680 --> 00:01:00.890
Then after this, let's say we wanted to

00:01:00.890 --> 00:01:03.780
also insert this name variable.

00:01:03.950 --> 00:01:07.010
If we save this and refresh,

00:01:07.010 --> 00:01:08.930
we see my name is name,

00:01:08.930 --> 00:01:10.970
so we see the text of name rather than

00:01:10.970 --> 00:01:13.415
the inner contents of this variable.

00:01:13.415 --> 00:01:15.800
The reason this happens is because since all of

00:01:15.800 --> 00:01:17.920
this is inside of the quotations,

00:01:17.920 --> 00:01:19.805
it's all considered to be part

00:01:19.805 --> 00:01:22.025
of the same string of text,

00:01:22.025 --> 00:01:24.355
not read as a variable.

00:01:24.355 --> 00:01:27.665
We need to break out of this string and add

00:01:27.665 --> 00:01:30.785
or append the variable name to the string.

00:01:30.785 --> 00:01:32.780
We do this just like we looked at in

00:01:32.780 --> 00:01:35.345
an earlier video with the plus symbol.

00:01:35.345 --> 00:01:36.950
What we need to do is to

00:01:36.950 --> 00:01:40.475
remove the variable name from the end,

00:01:40.475 --> 00:01:44.000
use the plus symbol and then outside of the string,

00:01:44.000 --> 00:01:46.615
we can add this variable name.

00:01:46.615 --> 00:01:49.550
We could also leave a space at the end of the string,

00:01:49.550 --> 00:01:51.005
so we have a space between

00:01:51.005 --> 00:01:53.060
the string and also the variable,

00:01:53.060 --> 00:01:55.595
then over to the browser and refresh.

00:01:55.595 --> 00:01:57.275
We can see our name is now been

00:01:57.275 --> 00:02:00.625
updated with the value of the variable.

00:02:00.625 --> 00:02:03.700
We can also add the second variable onto this string

00:02:03.700 --> 00:02:06.775
too, just like we did here.

00:02:06.775 --> 00:02:08.485
But then use the plus symbol,

00:02:08.485 --> 00:02:11.230
open up the string at a space,

00:02:11.230 --> 00:02:14.150
and we'll say and I like,

00:02:14.150 --> 00:02:16.425
I then have a space at the very end,

00:02:16.425 --> 00:02:20.345
and then the plus symbol to add the variable of likes.

00:02:20.345 --> 00:02:24.820
Let's check this out. My name is Chris and I like pizza.

00:02:24.820 --> 00:02:26.560
That's all working perfectly fine,

00:02:26.560 --> 00:02:29.695
we've got our variables mixed into a string.

00:02:29.695 --> 00:02:31.900
There is also another way to do this too,

00:02:31.900 --> 00:02:34.835
which was introduced in ES 2015.

00:02:34.835 --> 00:02:37.510
This is to use the template strings.

00:02:37.510 --> 00:02:40.570
Template strings are just like what we used in

00:02:40.570 --> 00:02:42.190
a previous video when we combined

00:02:42.190 --> 00:02:44.695
the text over multiple lines.

00:02:44.695 --> 00:02:46.670
What I need to do is to replace

00:02:46.670 --> 00:02:49.735
these quotations with the backticks.

00:02:49.735 --> 00:02:51.330
Let's remove all of

00:02:51.330 --> 00:02:56.395
these quotations and we can also remove the plus symbols,

00:02:56.395 --> 00:02:59.775
leaving only the text inside.

00:02:59.775 --> 00:03:02.090
Then what we need to do is to place all of

00:03:02.090 --> 00:03:04.340
this inside of the backticks.

00:03:04.340 --> 00:03:06.215
The second step is to mark

00:03:06.215 --> 00:03:08.920
which part of the string is variable.

00:03:08.920 --> 00:03:12.620
We know from earlier, if we just save this and refresh,

00:03:12.620 --> 00:03:14.030
we don't see the contents of

00:03:14.030 --> 00:03:17.390
these two variables but what we need to do is to

00:03:17.390 --> 00:03:19.910
place in front of this a $ symbol and

00:03:19.910 --> 00:03:23.065
then the variable name inside of the curly braces,

00:03:23.065 --> 00:03:26.590
the same for our likes, $ symbol,

00:03:26.590 --> 00:03:29.060
and wrap this inside of the curly braces.

00:03:29.060 --> 00:03:30.560
Now this should be read as

00:03:30.560 --> 00:03:33.520
the contents of our two variables.

00:03:33.520 --> 00:03:36.305
These template strings in between the quotes can

00:03:36.305 --> 00:03:39.170
also be stored into their own variable too.

00:03:39.170 --> 00:03:42.155
If we were to cut this out of place,

00:03:42.155 --> 00:03:44.450
create a new variable,

00:03:44.450 --> 00:03:46.890
let's say string is

00:03:46.890 --> 00:03:49.290
equal to this value we've just cut out.

00:03:49.290 --> 00:03:52.890
We could then pass in the variable name of string.

00:03:52.890 --> 00:03:55.755
This all works just as before but this time,

00:03:55.755 --> 00:03:59.620
all combined into a single string variable.
