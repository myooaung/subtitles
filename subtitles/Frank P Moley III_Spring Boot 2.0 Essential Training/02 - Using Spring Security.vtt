WEBVTT
1
00:00:00.006 --> 00:00:02.000
- [Instructor] Okay, back to the code we go

2
00:00:02.000 --> 00:00:06.000
through a basic implementation, of spring security.

3
00:00:06.000 --> 00:00:06.008
I do want to warn you

4
00:00:06.008 --> 00:00:08.009
there's a lot of little typing that's going on here.

5
00:00:08.009 --> 00:00:11.002
So this one you're really going to need to pay attention

6
00:00:11.002 --> 00:00:14.001
to what you're typing and use that pause button

7
00:00:14.001 --> 00:00:17.006
to catch up with me as you're doing it.

8
00:00:17.006 --> 00:00:19.005
So let's go back to our room web app

9
00:00:19.005 --> 00:00:21.007
and let's open up the POM file.

10
00:00:21.007 --> 00:00:26.006
And once again, we're going to add another dependency.

11
00:00:26.006 --> 00:00:28.000
And this time the dependency

12
00:00:28.000 --> 00:00:34.008
is Spring Boot Starter Security

13
00:00:34.008 --> 00:00:36.007
from org.Spring framework boots.

14
00:00:36.007 --> 00:00:39.003
let's get rid of that version

15
00:00:39.003 --> 00:00:43.009
and let Maven bring it in.

16
00:00:43.009 --> 00:00:45.003
Alright, now that that's done,

17
00:00:45.003 --> 00:00:49.006
I want to open up our base package and source main Java

18
00:00:49.006 --> 00:00:51.005
and we're going to create another new package

19
00:00:51.005 --> 00:00:54.002
this time called Config

20
00:00:54.002 --> 00:00:56.002
and this is really good practice

21
00:00:56.002 --> 00:00:58.009
to separate your construct as much as you can

22
00:00:58.009 --> 00:01:01.002
within your application.

23
00:01:01.002 --> 00:01:10.001
So let's create a new Config called SecurityConfig

24
00:01:10.001 --> 00:01:11.009
and we will annotate this class

25
00:01:11.009 --> 00:01:17.001
with at configuration

26
00:01:17.001 --> 00:01:18.002
and

27
00:01:18.002 --> 00:01:24.002
at enable web security.

28
00:01:24.002 --> 00:01:26.005
Now when you come down here to our class definition

29
00:01:26.005 --> 00:01:29.004
we need to extends

30
00:01:29.004 --> 00:01:32.007
the web security

31
00:01:32.007 --> 00:01:35.008
configure adapter

32
00:01:35.008 --> 00:01:38.001
and we need to implement a method.

33
00:01:38.001 --> 00:01:39.009
So we're going to override a method.

34
00:01:39.009 --> 00:01:43.003
And again, I'm using my generate pop-up with Control Enter.

35
00:01:43.003 --> 00:01:45.009
You get something very similar.

36
00:01:45.009 --> 00:01:48.004
And the one that we want to use is the configure

37
00:01:48.004 --> 00:01:53.008
that takes the HTTP security attribute.

38
00:01:53.008 --> 00:01:57.002
Now let's delete the super in there

39
00:01:57.002 --> 00:01:59.001
and let's get ready to start doing some typing.

40
00:01:59.001 --> 00:02:01.000
So HTTP

41
00:02:01.000 --> 00:02:04.000
dot authorized requests

42
00:02:04.000 --> 00:02:06.000
dot ant matchers.

43
00:02:06.000 --> 00:02:08.007
This is going to allow us to define which routes

44
00:02:08.007 --> 00:02:10.000
we're actually going to to control.

45
00:02:10.000 --> 00:02:13.003
So we're going to control everything at slash

46
00:02:13.003 --> 00:02:17.009
And specifically everything at API.

47
00:02:17.009 --> 00:02:21.009
And we want to call, permit all on those

48
00:02:21.009 --> 00:02:25.007
and we're going to do any request

49
00:02:25.007 --> 00:02:26.007
authenticated.

50
00:02:26.007 --> 00:02:29.001
So we're going to permit them all

51
00:02:29.001 --> 00:02:33.001
but only allow them if they are authenticated.

52
00:02:33.001 --> 00:02:36.009
Now we're going to put an and in here

53
00:02:36.009 --> 00:02:40.008
and we're going to provide a form login

54
00:02:40.008 --> 00:02:43.000
and a login page.

55
00:02:43.000 --> 00:02:48.001
And that login page is going to respond at slash login.

56
00:02:48.001 --> 00:02:51.002
And we were going to permit all to that page.

57
00:02:51.002 --> 00:02:53.006
Obviously, if you can't get to the page, you can't log in.

58
00:02:53.006 --> 00:02:56.004
So we've got to permit everybody there

59
00:02:56.004 --> 00:02:58.002
and

60
00:02:58.002 --> 00:03:01.009
we will also create a log out routine

61
00:03:01.009 --> 00:03:03.002
permit all.

62
00:03:03.002 --> 00:03:04.006
But this is just good practice.

63
00:03:04.006 --> 00:03:06.008
We're actually not going to implement log out

64
00:03:06.008 --> 00:03:11.000
but this gives you the idea of what you need to do.

65
00:03:11.000 --> 00:03:19.005
Now, in addition, we're going to auto wire a config,

66
00:03:19.005 --> 00:03:26.000
Configured global

67
00:03:26.000 --> 00:03:28.007
with the authentication manager builder

68
00:03:28.007 --> 00:03:29.009
off.

69
00:03:29.009 --> 00:03:33.009
We'll allow this to throw an exception.

70
00:03:33.009 --> 00:03:37.000
Let's go ahead and import that in

71
00:03:37.000 --> 00:03:40.003
Now in here is where we're going to build our auth,

72
00:03:40.003 --> 00:03:43.006
in memory authentication.

73
00:03:43.006 --> 00:03:46.002
Now we're going to use the No Op

74
00:03:46.002 --> 00:03:47.007
password encoder

75
00:03:47.007 --> 00:03:48.005
and you will notice

76
00:03:48.005 --> 00:03:50.005
that this is deprecated

77
00:03:50.005 --> 00:03:52.005
and it's deprecated always.

78
00:03:52.005 --> 00:03:54.007
It always has been because this is not

79
00:03:54.007 --> 00:03:56.002
something you should ever use

80
00:03:56.002 --> 00:03:57.006
in a real system

81
00:03:57.006 --> 00:03:59.009
in the demo environment,it's fine.

82
00:03:59.009 --> 00:04:01.007
But for right now, just know

83
00:04:01.007 --> 00:04:06.006
that you should never use this outside of this purpose.

84
00:04:06.006 --> 00:04:10.002
So now we will specify a user

85
00:04:10.002 --> 00:04:12.006
that we can use with this.

86
00:04:12.006 --> 00:04:15.006
And the user is going to have a username

87
00:04:15.006 --> 00:04:17.008
of user

88
00:04:17.008 --> 00:04:19.009
and a password

89
00:04:19.009 --> 00:04:22.009
of password super secret here,

90
00:04:22.009 --> 00:04:24.003
and roles

91
00:04:24.003 --> 00:04:27.004
a user role.

92
00:04:27.004 --> 00:04:29.002
Now, a couple more things that we need to do,

93
00:04:29.002 --> 00:04:33.000
Let's go to source main resources and our templates

94
00:04:33.000 --> 00:04:37.000
and we are going to create a new HTML file.

95
00:04:37.000 --> 00:04:40.008
We will call this one login.

96
00:04:40.008 --> 00:04:45.004
We will set our XMLs namespace

97
00:04:45.004 --> 00:04:46.007
TH equal

98
00:04:46.007 --> 00:04:51.004
to

99
00:04:51.004 --> 00:04:57.001
www dot Time-Lift dot org.

100
00:04:57.001 --> 00:05:02.005
We'll set a title

101
00:05:02.005 --> 00:05:05.004
and we are going to create

102
00:05:05.004 --> 00:05:06.003
a form

103
00:05:06.003 --> 00:05:09.007
and the form will have a TH action

104
00:05:09.007 --> 00:05:10.006
equal to

105
00:05:10.006 --> 00:05:12.002
at

106
00:05:12.002 --> 00:05:14.007
slash login.

107
00:05:14.007 --> 00:05:16.009
So this is telling you to go to the login.

108
00:05:16.009 --> 00:05:20.008
That's defined based on the template

109
00:05:20.008 --> 00:05:22.001
and the method

110
00:05:22.001 --> 00:05:22.009
will be

111
00:05:22.009 --> 00:05:24.006
post.

112
00:05:24.006 --> 00:05:27.006
Of course, we've got to post that data.

113
00:05:27.006 --> 00:05:30.004
Now we'll build a div in here

114
00:05:30.004 --> 00:05:33.006
and we'll do a label

115
00:05:33.006 --> 00:05:35.006
of username

116
00:05:35.006 --> 00:05:37.001
colon.

117
00:05:37.001 --> 00:05:40.008
And then within here, we'll put an input

118
00:05:40.008 --> 00:05:44.006
type is text.

119
00:05:44.006 --> 00:05:45.004
Name

120
00:05:45.004 --> 00:05:46.003
is

121
00:05:46.003 --> 00:05:49.006
username.

122
00:05:49.006 --> 00:05:52.008
We'll close that out.

123
00:05:52.008 --> 00:05:54.007
And I'm just going to copy this element

124
00:05:54.007 --> 00:05:57.002
and we'll change a few values.

125
00:05:57.002 --> 00:05:59.009
So it is passwords

126
00:05:59.009 --> 00:06:04.001
The type is passwords so that it masks set

127
00:06:04.001 --> 00:06:06.005
and the value is password

128
00:06:06.005 --> 00:06:09.000
or the name.

129
00:06:09.000 --> 00:06:11.002
And now we're going to create another div.

130
00:06:11.002 --> 00:06:13.006
And in that div,

131
00:06:13.006 --> 00:06:17.005
we will create an input;

132
00:06:17.005 --> 00:06:20.005
type is submit.

133
00:06:20.005 --> 00:06:23.003
So we can just use the Enter key

134
00:06:23.003 --> 00:06:26.002
and the value will be

135
00:06:26.002 --> 00:06:28.003
Login.

136
00:06:28.003 --> 00:06:29.008
And now we have our template.

137
00:06:29.008 --> 00:06:32.000
So one more thing, and that is

138
00:06:32.000 --> 00:06:35.005
that we need to actually be able to serve this templates.

139
00:06:35.005 --> 00:06:38.001
So let's go to our controllers

140
00:06:38.001 --> 00:06:40.003
and we will create a new Java class.

141
00:06:40.003 --> 00:06:45.004
And we are going to name this Authentication Controller

142
00:06:45.004 --> 00:06:48.001
we'll annotate this with at

143
00:06:48.001 --> 00:06:50.000
controller.

144
00:06:50.000 --> 00:06:52.000
Now we're not going to put a request mapping

145
00:06:52.000 --> 00:06:53.003
on the actual class

146
00:06:53.003 --> 00:06:56.001
because this can be used for other things like log out.

147
00:06:56.001 --> 00:07:00.001
So we're going to put it on the gate mapping

148
00:07:00.001 --> 00:07:03.002
And we're going to respond at login,

149
00:07:03.002 --> 00:07:06.002
public string,

150
00:07:06.002 --> 00:07:08.007
get login,

151
00:07:08.007 --> 00:07:12.003
and we will simply return login

152
00:07:12.003 --> 00:07:15.004
go ahead and optimize those imports real quick

153
00:07:15.004 --> 00:07:19.004
put in the missing semi-colon

154
00:07:19.004 --> 00:07:24.000
and now we can start our application.

155
00:07:24.000 --> 00:07:25.005
Once your application has started, let's go

156
00:07:25.005 --> 00:07:28.006
to a web browser and in the web browser.

157
00:07:28.006 --> 00:07:30.009
We will go to local host

158
00:07:30.009 --> 00:07:33.005
80, 80 slash rooms.

159
00:07:33.005 --> 00:07:37.004
You'll notice we're redirected to a login page.

160
00:07:37.004 --> 00:07:40.004
So now here, if I put in user and password

161
00:07:40.004 --> 00:07:42.005
as my values and hit login,

162
00:07:42.005 --> 00:07:45.009
now I'm taken to the rooms page.

163
00:07:45.009 --> 00:07:47.006
Now, if I go to staff

164
00:07:47.006 --> 00:07:49.007
you'll see that my session is maintained.

165
00:07:49.007 --> 00:07:51.008
I don't have to re-authenticate

166
00:07:51.008 --> 00:07:53.006
which is what we would expect.

167
00:07:53.006 --> 00:08:00.004
And I can also go to

168
00:08:00.004 --> 00:08:02.000
and call the data itself

169
00:08:02.000 --> 00:08:04.004
through the web browser, to the API

170
00:08:04.004 --> 00:08:07.000
because I'm still authenticated within that session.

