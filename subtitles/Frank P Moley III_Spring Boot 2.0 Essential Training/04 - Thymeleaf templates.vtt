WEBVTT
1
00:00:00.005 --> 00:00:01.004
- [Instructor] In this course,

2
00:00:01.004 --> 00:00:04.005
we're going to use Thymeleaf templates for our view.

3
00:00:04.005 --> 00:00:08.001
Thymeleaf has a big benefit of being valid HTML

4
00:00:08.001 --> 00:00:10.006
as well as a template itself,

5
00:00:10.006 --> 00:00:12.004
and this allows you to build a template

6
00:00:12.004 --> 00:00:15.007
and style it outside of the web application,

7
00:00:15.007 --> 00:00:17.007
and then just populate it with data.

8
00:00:17.007 --> 00:00:20.002
So let's get started with a new web application

9
00:00:20.002 --> 00:00:23.007
and build our Thymeleaf template.

10
00:00:23.007 --> 00:00:26.005
Now, I'm going to use a plugin built into my IDE

11
00:00:26.005 --> 00:00:28.009
to build the rest of the modules for this course.

12
00:00:28.009 --> 00:00:31.008
Of course, if you don't have a plugin in your IDE,

13
00:00:31.008 --> 00:00:33.007
go to start.spring.io,

14
00:00:33.007 --> 00:00:36.006
create the project, bring it into your IDE,

15
00:00:36.006 --> 00:00:38.001
and then start using it.

16
00:00:38.001 --> 00:00:40.007
You're going to see the exact same options on the web

17
00:00:40.007 --> 00:00:44.001
as I am in my plugin, because of course it's all based

18
00:00:44.001 --> 00:00:46.001
on the same web service.

19
00:00:46.001 --> 00:00:49.009
So let me go add a new module,

20
00:00:49.009 --> 00:00:54.000
and I'm going to use Spring Initializer.

21
00:00:54.000 --> 00:00:56.008
Now, for this one, we're going to create a group name

22
00:00:56.008 --> 00:01:03.000
of com.frankmoley.lil.sbet.landon,

23
00:01:03.000 --> 00:01:07.000
and this is going to be called room-web-app.

24
00:01:07.000 --> 00:01:12.004
Maven, Java, Jar, 11, version is fine.

25
00:01:12.004 --> 00:01:15.004
Select next, now there's a couple things

26
00:01:15.004 --> 00:01:16.003
we're going to pick here,

27
00:01:16.003 --> 00:01:19.000
from Web, we're going to pick Spring Web,

28
00:01:19.000 --> 00:01:22.006
from Template Engines, we'll pick Thymeleaf.

29
00:01:22.006 --> 00:01:25.008
And now I'll hit next, check that the location

30
00:01:25.008 --> 00:01:29.002
is where I'm working from, where my exercise files are,

31
00:01:29.002 --> 00:01:33.007
and go ahead and hit Finish.

32
00:01:33.007 --> 00:01:38.009
Now I need to go ahead and make sure that Maven is enabled.

33
00:01:38.009 --> 00:01:41.009
You may not have to do that depending on your IDE,

34
00:01:41.009 --> 00:01:44.003
but we'll allow Maven to do all of its dependency management

35
00:01:44.003 --> 00:01:48.004
before we get going too further.

36
00:01:48.004 --> 00:01:49.002
All right, so let's go ahead

37
00:01:49.002 --> 00:01:51.000
and open up the room-web-app

38
00:01:51.000 --> 00:01:54.001
and go to Source, Main, Resources,

39
00:01:54.001 --> 00:01:57.001
and we're going to create a new template

40
00:01:57.001 --> 00:01:59.006
in the form of an HTML file.

41
00:01:59.006 --> 00:02:02.001
We'll call it Rooms.

42
00:02:02.001 --> 00:02:04.005
Now, before we get too deep, up here on line two,

43
00:02:04.005 --> 00:02:06.006
we need to add a namespace.

44
00:02:06.006 --> 00:02:12.007
So xml namespace, th equals

45
00:02:12.007 --> 00:02:21.004
http://www.thymeleaf.org,

46
00:02:21.004 --> 00:02:24.004
now let's put a title in here.

47
00:02:24.004 --> 00:02:31.004
We will call it Landon Hotel, Rooms.

48
00:02:31.004 --> 00:02:32.008
Now we're going to use a table,

49
00:02:32.008 --> 00:02:35.001
and I know that tables have gone out of style,

50
00:02:35.001 --> 00:02:36.009
but for the purposes of this demo,

51
00:02:36.009 --> 00:02:40.002
it will work just fine for what we're doing.

52
00:02:40.002 --> 00:02:42.006
So the first thing we want to do is we want to do a row,

53
00:02:42.006 --> 00:02:45.002
and we're going to do our header elements here real quick.

54
00:02:45.002 --> 00:02:50.007
So let's do a Room Number,

55
00:02:50.007 --> 00:02:53.006
and a Room Name,

56
00:02:53.006 --> 00:02:56.007
and we will add in Bed Info.

57
00:02:56.007 --> 00:02:57.009
Now we're going to do another row,

58
00:02:57.009 --> 00:03:00.002
now this time, however, we're going to iterate,

59
00:03:00.002 --> 00:03:01.000
and we're going to iterate

60
00:03:01.000 --> 00:03:04.000
off of a value that we're going to expect in the model.

61
00:03:04.000 --> 00:03:06.007
So we're going to do an each element here,

62
00:03:06.007 --> 00:03:09.002
and our each is a room,

63
00:03:09.002 --> 00:03:12.001
so we are going to get a single room

64
00:03:12.001 --> 00:03:16.007
from the model and an element called rooms.

65
00:03:16.007 --> 00:03:19.009
Now, right here, we know that we need to pass an array

66
00:03:19.009 --> 00:03:23.005
of elements of type room into our model.

67
00:03:23.005 --> 00:03:27.004
Now, what room is, we actually define below.

68
00:03:27.004 --> 00:03:34.003
We will do a td element with th:text equals,

69
00:03:34.003 --> 00:03:36.003
and again, we're going to pull this from the model,

70
00:03:36.003 --> 00:03:42.008
so dollar sign, curly brace, room.number,

71
00:03:42.008 --> 00:03:45.004
so from the room item in our iteration,

72
00:03:45.004 --> 00:03:47.002
we want to get the number.

73
00:03:47.002 --> 00:03:51.006
And because this is valid HTML, we can actually put a value

74
00:03:51.006 --> 00:03:56.002
in here that will be replaced by Thymeleaf as it operates.

75
00:03:56.002 --> 00:04:01.005
So let's go ahead and copy this line,

76
00:04:01.005 --> 00:04:03.008
and then we'll go ahead and change these.

77
00:04:03.008 --> 00:04:07.003
So we're going to do room.name,

78
00:04:07.003 --> 00:04:09.007
and we'll swap this out with name,

79
00:04:09.007 --> 00:04:11.008
and we're going to do room.info,

80
00:04:11.008 --> 00:04:15.001
and we will swap this out with info.

81
00:04:15.001 --> 00:04:18.003
And that's all there is to building a template.

82
00:04:18.003 --> 00:04:19.008
That's literally it,

83
00:04:19.008 --> 00:04:21.009
and if we had wired in a controller,

84
00:04:21.009 --> 00:04:23.000
we could observe this,

85
00:04:23.000 --> 00:04:24.009
but one of the beauties of Thymeleaf

86
00:04:24.009 --> 00:04:27.008
is because this is valid HTML,

87
00:04:27.008 --> 00:04:31.002
I can open this file up in a web browser,

88
00:04:31.002 --> 00:04:33.000
and you'll see that indeed it does render,

89
00:04:33.000 --> 00:04:34.000
and it renders data.

90
00:04:34.000 --> 00:04:36.009
Now, of course we have no model, so there's no iteration.

91
00:04:36.009 --> 00:04:39.008
So it just gives us this raw data that we put in,

92
00:04:39.008 --> 00:04:42.000
but this gives us something to go from.

