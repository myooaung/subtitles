WEBVTT
1
00:00:00.003 --> 00:00:07.001
(upbeat music)

2
00:00:07.001 --> 00:00:09.004
- [Instructor] Now it's time for me to show you my solution

3
00:00:09.004 --> 00:00:11.009
to this repository.

4
00:00:11.009 --> 00:00:14.009
I made modifications to the three files.

5
00:00:14.009 --> 00:00:17.008
The first one is our staff member class.

6
00:00:17.008 --> 00:00:19.006
You'll see that I annotated this

7
00:00:19.006 --> 00:00:23.004
with at entity and table for the class, and then at ID

8
00:00:23.004 --> 00:00:26.002
and column for all of our attributes.

9
00:00:26.002 --> 00:00:29.009
On line 23, you'll see the enumerated annotation

10
00:00:29.009 --> 00:00:31.005
that I was telling you about

11
00:00:31.005 --> 00:00:33.008
so that it can store the enum in the database

12
00:00:33.008 --> 00:00:38.006
and retrieve it and cast it into an enum in the application.

13
00:00:38.006 --> 00:00:41.003
You'll also notice on line 27 that I went ahead

14
00:00:41.003 --> 00:00:45.009
and set a new staff member to have a random UUID.

15
00:00:45.009 --> 00:00:47.005
And this is specifically so

16
00:00:47.005 --> 00:00:50.009
that I have a way to set the UUID

17
00:00:50.009 --> 00:00:52.004
because I don't have a way of doing it

18
00:00:52.004 --> 00:00:56.003
in the database in the way I've got it configured.

19
00:00:56.003 --> 00:00:58.006
The next element that I did was I created

20
00:00:58.006 --> 00:01:00.008
a staff repository.

21
00:01:00.008 --> 00:01:03.007
And this once again is an empty file.

22
00:01:03.007 --> 00:01:07.003
That is an interface that extends JPA repository.

23
00:01:07.003 --> 00:01:11.005
It has a staff member and a string as the ID type.

24
00:01:11.005 --> 00:01:13.005
And then I went into my staff service

25
00:01:13.005 --> 00:01:16.005
and I deleted all of the static mock data.

26
00:01:16.005 --> 00:01:18.008
I brought in a staff repository

27
00:01:18.008 --> 00:01:21.000
injected it via the constructor.

28
00:01:21.000 --> 00:01:24.002
And then when I returned on the get all staff

29
00:01:24.002 --> 00:01:27.002
I simply call find all in the repository.

30
00:01:27.002 --> 00:01:29.007
So with that, we can get our application up

31
00:01:29.007 --> 00:01:33.004
and running.

32
00:01:33.004 --> 00:01:35.000
Allow our application to come up

33
00:01:35.000 --> 00:01:36.006
and we can do a couple tests.

34
00:01:36.006 --> 00:01:40.000
So the first thing we'll do is we'll go to the terminal

35
00:01:40.000 --> 00:01:46.006
and we'll do an HTTP, pull an 8080 slash API slash staff.

36
00:01:46.006 --> 00:01:49.008
It returns data from the database.

37
00:01:49.008 --> 00:01:52.003
Go ahead and make sure we didn't break rooms.

38
00:01:52.003 --> 00:01:54.001
That also returns data.

39
00:01:54.001 --> 00:01:59.009
Now let's go to a browser

40
00:01:59.009 --> 00:02:01.006
and we will go to staff

41
00:02:01.006 --> 00:02:05.002
and you'll see that we still return our staff itself.

42
00:02:05.002 --> 00:02:06.009
And as we would expect,

43
00:02:06.009 --> 00:02:09.009
our rooms should also work

44
00:02:09.009 --> 00:02:10.009
and they do.

45
00:02:10.009 --> 00:02:13.000
And that's all there is to my solution

46
00:02:13.000 --> 00:02:17.000
on how to build a repository, to expose the staff.

