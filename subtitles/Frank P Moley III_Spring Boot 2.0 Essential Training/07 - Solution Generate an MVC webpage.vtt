WEBVTT
1
00:00:00.001 --> 00:00:07.001
(bright music)

2
00:00:07.001 --> 00:00:08.008
- [Instructor] I will now offer my solution

3
00:00:08.008 --> 00:00:12.002
to this challenge exercise.

4
00:00:12.002 --> 00:00:14.004
So the first thing I did was I actually mixed it up

5
00:00:14.004 --> 00:00:15.009
just a little bit.

6
00:00:15.009 --> 00:00:20.005
So I created a class called room service.

7
00:00:20.005 --> 00:00:24.002
Room service actually handled that iteration and data

8
00:00:24.002 --> 00:00:25.007
and it returns a method.

9
00:00:25.007 --> 00:00:28.008
Now I did this because I wanted to future proof

10
00:00:28.008 --> 00:00:32.002
this application for what's coming up next.

11
00:00:32.002 --> 00:00:35.004
In a similar fashion, I created a staff service,

12
00:00:35.004 --> 00:00:37.005
and this staff service does the same thing.

13
00:00:37.005 --> 00:00:39.004
It's got an array of elements,

14
00:00:39.004 --> 00:00:41.002
and then it has a get all method

15
00:00:41.002 --> 00:00:43.007
that returns that static data.

16
00:00:43.007 --> 00:00:48.000
Again, later on, that will be tied to a web service.

17
00:00:48.000 --> 00:00:51.006
Now, of course, I added a staff member model

18
00:00:51.006 --> 00:00:54.002
and I enumerated the position

19
00:00:54.002 --> 00:00:56.007
and I did that to match the database

20
00:00:56.007 --> 00:00:59.001
and we'll show you how to do that later on,

21
00:00:59.001 --> 00:01:04.005
but you'll see, I have it in enumeration on position.

22
00:01:04.005 --> 00:01:07.004
After I did that, I created a controller

23
00:01:07.004 --> 00:01:11.004
and the controller gets an instance of that service

24
00:01:11.004 --> 00:01:14.001
and returns this part of the model

25
00:01:14.001 --> 00:01:15.008
to a template called staff,

26
00:01:15.008 --> 00:01:17.006
and I'll show you that in a minute.

27
00:01:17.006 --> 00:01:21.003
I also modified the room controller to do the same thing.

28
00:01:21.003 --> 00:01:24.003
So it's using the room service instead of the static data.

29
00:01:24.003 --> 00:01:26.002
And again, I did some refactoring.

30
00:01:26.002 --> 00:01:28.001
I did this for the next video,

31
00:01:28.001 --> 00:01:31.006
not necessarily for this one.

32
00:01:31.006 --> 00:01:33.000
So the last element that I did

33
00:01:33.000 --> 00:01:35.007
was I created a template called staff.

34
00:01:35.007 --> 00:01:37.002
And basically, I did the same thing

35
00:01:37.002 --> 00:01:38.003
that we had done for room.

36
00:01:38.003 --> 00:01:41.000
I created a table, and within that table,

37
00:01:41.000 --> 00:01:44.004
I put our elements and I iterated over the model

38
00:01:44.004 --> 00:01:46.003
in order to populate the fields.

39
00:01:46.003 --> 00:01:50.002
Let's go ahead and run the web application.

40
00:01:50.002 --> 00:01:52.007
You will navigate over to our browser

41
00:01:52.007 --> 00:01:57.008
and go to local host 8080 slash rooms.

42
00:01:57.008 --> 00:02:00.009
And you'll see that the room still works as we would expect

43
00:02:00.009 --> 00:02:02.009
even though we refactored it.

44
00:02:02.009 --> 00:02:05.001
And then, if we go to slash staff,

45
00:02:05.001 --> 00:02:06.008
you'll see that we get the data.

46
00:02:06.008 --> 00:02:09.008
And I took that enumeration and made it more user-friendly

47
00:02:09.008 --> 00:02:12.007
to view by turning it into standard case

48
00:02:12.007 --> 00:02:15.003
as opposed to all upper case.

49
00:02:15.003 --> 00:02:16.005
And that's how I solved this.

50
00:02:16.005 --> 00:02:20.000
And you can get detailed data in the example files.

