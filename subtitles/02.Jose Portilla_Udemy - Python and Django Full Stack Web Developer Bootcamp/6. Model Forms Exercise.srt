1
00:00:05,040 --> 00:00:10,810
Hello everyone and welcome to the model forums exercise lecture and this lecture we will work with the

2
00:00:10,810 --> 00:00:14,010
pro to project folder from Gengel level 2.

3
00:00:14,050 --> 00:00:18,980
So if you still have that around you can just download the notes and grab that pro to project folder.

4
00:00:19,040 --> 00:00:25,690
Remember from Gengel level to that final project was to have that user that HTL file use template tagging.

5
00:00:25,720 --> 00:00:30,090
This playlist of all the users and their first thing is their last name and the e-mail information.

6
00:00:30,090 --> 00:00:34,360
So we had that for loop inside that template tagging and then we displayed all that information directly

7
00:00:34,360 --> 00:00:35,920
from the model.

8
00:00:36,220 --> 00:00:40,930
We're going to change this to be a sign up page and it's going to be connected to a model form that

9
00:00:40,930 --> 00:00:46,810
we previously discussed so that the user goes to slash users signs up on the user page and once they

10
00:00:46,810 --> 00:00:51,710
hit submit that information goes the model and the user gets taken back to the home page.

11
00:00:51,760 --> 00:00:56,070
A great exercise would be to try this on your own first.

12
00:00:56,260 --> 00:01:01,780
So operationally you can attempt these exercise steps before viewing the rest of the lecture as an attempt

13
00:01:01,780 --> 00:01:02,790
to try this on your own.

14
00:01:02,830 --> 00:01:04,660
And these are the steps you're going to have to follow.

15
00:01:04,720 --> 00:01:10,360
You'll need to create a model form and forms that pi will have to connect the form in the template then

16
00:01:10,360 --> 00:01:15,510
you'll need to edit views that pie to show the form and work with the form in case there's a post and

17
00:01:15,520 --> 00:01:17,510
you'll figure out how to save that data.

18
00:01:17,530 --> 00:01:20,130
That's something we didn't talk about in the previous lecture.

19
00:01:20,200 --> 00:01:24,490
So as an exercise you have to look up in the documentation how to save the data and the way I wrote

20
00:01:24,490 --> 00:01:28,270
SAVE here is a really big hints on how to do it off the form.

21
00:01:28,270 --> 00:01:32,080
Once you figured that out then just verify that the model is Adam unregistered registered.

22
00:01:32,080 --> 00:01:36,800
So once you hit submit you can log in as an administrator and see that the data is actually there.

23
00:01:36,810 --> 00:01:38,930
Inside the model OK.

24
00:01:38,970 --> 00:01:43,590
So again I highly encourage you to try it out on your own and you're going to need to look at the documentation

25
00:01:43,620 --> 00:01:45,160
or to do that successfully.

26
00:01:45,200 --> 00:01:49,470
If that's not really your speed and you don't feel that comfortable doing it yet feel free to just continue

27
00:01:49,470 --> 00:01:51,390
watching this and code along with me.

28
00:01:51,390 --> 00:01:53,490
All right let's get started.

29
00:01:53,490 --> 00:01:53,730
All right.

30
00:01:53,730 --> 00:01:59,970
Here I am at the editor and right now I have my Pro two project inside a folder called Gengel level

31
00:01:59,970 --> 00:02:02,430
3 and it has the app too.

32
00:02:02,430 --> 00:02:04,220
That was the second application we made.

33
00:02:04,380 --> 00:02:09,490
We take a look at the templates we have this index page HTML page and then we have the users.

34
00:02:09,510 --> 00:02:14,280
Remember this was the template tagging we used earlier to actually display all these information directly

35
00:02:14,280 --> 00:02:15,180
from the models.

36
00:02:15,270 --> 00:02:20,570
And we're going to be replacing all of this with an actual form that connects directly to the models.

37
00:02:20,610 --> 00:02:27,150
So as a quick note the Pentagon when you actually downloaded this you may not have the models registered

38
00:02:27,150 --> 00:02:28,570
on your abdomen up file.

39
00:02:28,680 --> 00:02:34,080
So make sure other app to added up pie for this Pro-Tools that you have these two lines here app to

40
00:02:34,080 --> 00:02:39,660
that model import user and Adam that site register user member we need to register our models in order

41
00:02:39,660 --> 00:02:42,690
to see them when we log in as an administrator.

42
00:02:42,690 --> 00:02:45,620
All right let's start off with the front end actually.

43
00:02:45,990 --> 00:02:48,080
And then we'll come back to it later on as well.

44
00:02:48,460 --> 00:02:56,940
But here on the index page we'll say Welcome go to users too and we'll say sign up and I'm actually

45
00:02:56,940 --> 00:02:59,370
going to add in Bootstrap.

46
00:02:59,370 --> 00:03:00,820
So this looks a little nicer.

47
00:03:02,200 --> 00:03:08,070
And I copied and pasted the link from Bootstrap dot com or get bootstrapped dot com.

48
00:03:08,070 --> 00:03:08,870
You can do the same.

49
00:03:08,870 --> 00:03:15,080
So I'll put that on the index page and also put it on the user's page in the next section of the course

50
00:03:15,080 --> 00:03:21,410
we'll actually learn how we can use one single basic template and then keep inheriting from the same

51
00:03:21,410 --> 00:03:21,950
template.

52
00:03:22,130 --> 00:03:26,540
So you don't have to keep writing so much H-2 him but for right now we'll have the same link in both

53
00:03:26,540 --> 00:03:29,270
of these files in this user's page.

54
00:03:29,270 --> 00:03:35,340
This one is going to say please sign up here.

55
00:03:36,750 --> 00:03:40,640
And I'm going to clear the rest of this since we won't be using it for now.

56
00:03:40,930 --> 00:03:42,630
Everything else that's in the body.

57
00:03:42,760 --> 00:03:47,470
And just to make this look a little nicer we'll put it inside of a container class and then we'll grab

58
00:03:47,470 --> 00:03:54,280
this and put that in here and then on the index page that home page will put all of this into a container

59
00:03:54,280 --> 00:03:55,290
class as well.

60
00:03:55,360 --> 00:03:59,900
And in fact let's put it all into a Jumbotron just so it looks a little more home page.

61
00:04:00,450 --> 00:04:03,660
And grab this stuff and we'll put it in here.

62
00:04:05,410 --> 00:04:05,620
All right.

63
00:04:05,620 --> 00:04:06,690
Looking good.

64
00:04:06,880 --> 00:04:11,050
And we'll come back to users that each time and do some additional stuff in here of the actual forum

65
00:04:11,050 --> 00:04:11,970
later on.

66
00:04:12,040 --> 00:04:18,470
But let's come to the forums excuse me app to folder where we need to make a Forms up high file.

67
00:04:18,640 --> 00:04:26,180
So say you file forms that PI enter and we should have the forms that PI file to here.

68
00:04:27,070 --> 00:04:30,490
Now what we need to do is import forms as we did last time.

69
00:04:30,820 --> 00:04:38,320
So I'll say from Gengel import forms and then we also need to import our actual models so we can say

70
00:04:38,350 --> 00:04:41,660
from Daut but I prefer actually naming it.

71
00:04:41,680 --> 00:04:46,130
So I'll say from app 2 even though we're in the directory don't need to actually say that.

72
00:04:46,210 --> 00:04:50,720
I just say from DOT will say from app to that model's import and then the actual name of the models

73
00:04:50,740 --> 00:04:51,770
we intend to use.

74
00:04:51,940 --> 00:04:57,250
This case is just user and now it's time to create that class.

75
00:04:57,380 --> 00:05:09,050
And in this case we will call this something like new user it will say forms dots and then we call model

76
00:05:09,080 --> 00:05:15,760
form instead of just normal form so typically before we were just using form but if I actually want

77
00:05:15,760 --> 00:05:20,960
this to connect to a model and edit that data off the top model form and then we also have that in-line

78
00:05:20,960 --> 00:05:23,970
class which is going to be this Medich class.

79
00:05:24,140 --> 00:05:28,790
And if you want to do your own custom validations then you would define a field tier something like

80
00:05:29,390 --> 00:05:32,900
whatever they're actually called first name equals blah blah.

81
00:05:32,900 --> 00:05:37,270
The forms the character field and then eventually you would add in your validator.

82
00:05:37,280 --> 00:05:40,220
But right now we're not going to do any of that.

83
00:05:40,430 --> 00:05:42,850
We already covered head to custom validations if you want to do that.

84
00:05:42,860 --> 00:05:44,940
That's fine if you don't that's also fine.

85
00:05:45,120 --> 00:05:50,870
Alycia class Metta L.M. create the model attribute this should always be called Model and then you assign

86
00:05:50,870 --> 00:05:55,160
it to whatever model this form happens to linked to this case is just one form here.

87
00:05:55,160 --> 00:06:02,310
User if we had another model to import that would have its own class with its own form model or own

88
00:06:02,310 --> 00:06:07,200
model form I should say and then we have the fields attribute and we talked about the fields attribute

89
00:06:07,200 --> 00:06:10,170
in the previous lecture and the various ways to handle it.

90
00:06:10,290 --> 00:06:14,700
Since we're going to be using all the fields we'll just use that special keyword underscore underscore

91
00:06:14,910 --> 00:06:17,740
all underscore underscore as a string.

92
00:06:18,180 --> 00:06:23,530
And as a quick note for this meta you can either just do meddle like this or have the open closed princes

93
00:06:23,580 --> 00:06:24,670
for Python 3.

94
00:06:24,750 --> 00:06:25,460
That doesn't matter.

95
00:06:25,470 --> 00:06:26,630
It's basically the same thing.

96
00:06:28,530 --> 00:06:33,540
And now that we have that ready to go let's go to our views that pi file and make sure that it's connected

97
00:06:33,540 --> 00:06:37,550
to the form properly and that it's going to do something if the user actually hit submit.

98
00:06:38,010 --> 00:06:44,370
So we'll come to views that pie and right now we just have our previous users that was returning information

99
00:06:44,370 --> 00:06:45,480
from the model.

100
00:06:45,510 --> 00:06:49,160
But instead we're going to be returning information directly from that form.

101
00:06:49,380 --> 00:06:50,440
So we'll delete that.

102
00:06:50,520 --> 00:06:55,150
Right now the index view that's totally fine will keep the same home page return the index or C.M. but

103
00:06:55,200 --> 00:06:57,780
for users we're going to do something a little different.

104
00:06:57,780 --> 00:07:03,700
First thing you have to do is actually make sure the form is working which means we need to import it.

105
00:07:03,700 --> 00:07:07,050
So previously we were importing the model direct directly.

106
00:07:07,240 --> 00:07:11,380
We won't be using that since we're not actually grabbing information from the model to post we're just

107
00:07:11,380 --> 00:07:13,750
going to grab stuff from the form.

108
00:07:13,900 --> 00:07:21,690
So I'll say from in his case app to dot and it's the forms import.

109
00:07:21,780 --> 00:07:24,920
And we're going to import the new user in just to make it really clear.

110
00:07:24,920 --> 00:07:30,650
Let's actually call it muties or form that we we don't get confused so we'll come back to forms up PI

111
00:07:30,710 --> 00:07:34,020
and let's call this new user form.

112
00:07:34,140 --> 00:07:37,810
Save that and then interviews we'll call this new user form.

113
00:07:37,860 --> 00:07:39,210
That's a little clearer to me.

114
00:07:39,210 --> 00:07:43,310
Just so I don't get anything messed up and then we're also not using HTP response anymore.

115
00:07:43,320 --> 00:07:45,970
That was one of the most basic things we learned about.

116
00:07:45,990 --> 00:07:47,560
So we'll comment that out.

117
00:07:47,580 --> 00:07:52,440
So we just have the render and user form that we're going to be working on this.

118
00:07:52,490 --> 00:07:57,120
And let me grab some space here by collapsing the directory tree and also collapsing the terminal will

119
00:07:57,120 --> 00:07:58,680
bring them back in a little bit.

120
00:07:59,010 --> 00:08:04,350
But the first thing I want to do is create a object or a variable here called form and assign it to

121
00:08:04,380 --> 00:08:10,190
an instance of that new user form so create an instance of that needs reform inside the user's view

122
00:08:10,190 --> 00:08:24,380
here and then we'll say this if the input request method is equal to a post then we're going to reassign

123
00:08:24,380 --> 00:08:31,990
form to equal to an instance of new user form except passen request form or actually request that post

124
00:08:33,980 --> 00:08:38,130
and then we'll scroll down get a little more focus on this one function here.

125
00:08:38,170 --> 00:08:43,060
So OK so basically saying is right now our form is an instance of that form class we just made it the

126
00:08:43,070 --> 00:08:47,190
request method is equal to post meaning someone hit submit on that form is sending information back.

127
00:08:47,300 --> 00:08:51,650
We pasand the request up post and then we check if it's valid or not.

128
00:08:51,920 --> 00:08:56,540
And as we discussed before you can have your own custom validation checks but we'll just do the automatic

129
00:08:56,540 --> 00:08:57,380
ones.

130
00:08:57,830 --> 00:08:59,180
So the form is valid.

131
00:08:59,630 --> 00:09:02,360
Meaning essentially they didn't mess anything up when hitting the summit.

132
00:09:02,360 --> 00:09:04,700
And so an email was an e-mail etc..

133
00:09:04,910 --> 00:09:08,180
Then here's the thing we didn't cover in order to save the form.

134
00:09:08,180 --> 00:09:11,660
You can say form that save as the method.

135
00:09:11,660 --> 00:09:13,790
Now we can also do it or it's committed to the database.

136
00:09:13,800 --> 00:09:17,110
Is it commit is equal to true.

137
00:09:17,150 --> 00:09:18,620
So we'll save that.

138
00:09:18,730 --> 00:09:22,110
So we have if form is valid form that save it's true.

139
00:09:22,300 --> 00:09:25,030
And then after this what we're going to end up doing is returning

140
00:09:28,440 --> 00:09:36,450
and we'll return the index page so we'll return the index view and then pasand the request.

141
00:09:36,470 --> 00:09:42,080
So this basically means if someone says Post mean they give back information and it's valid we will

142
00:09:42,080 --> 00:09:46,730
save that form using the Save method off of it and then we're going to return the index view of the

143
00:09:46,730 --> 00:09:51,230
request which it will just return the render request of the home page.

144
00:09:51,230 --> 00:09:53,490
This will basically take you back to the home page.

145
00:09:53,510 --> 00:09:56,450
Now what if they actually don't do anything.

146
00:09:56,450 --> 00:10:02,140
So we can say have an else statement here let's say the form isn't valid.

147
00:10:02,410 --> 00:10:02,970
We can just say.

148
00:10:02,970 --> 00:10:04,050
Else.

149
00:10:04,360 --> 00:10:05,610
And there's a lot of things you could do.

150
00:10:05,610 --> 00:10:11,430
Like Rayson Eric cetera right now we'll just prints error form invalid.

151
00:10:11,470 --> 00:10:16,550
We will actually end up experiencing this because we're not going to have an invalid form anywhere and

152
00:10:16,560 --> 00:10:21,010
then outside of all this we need to actually return something so that it matches the actual page.

153
00:10:21,010 --> 00:10:26,710
So say the users and on the very first level of indentation inside of this view function are going to

154
00:10:26,710 --> 00:10:37,760
return and we'll say render request and then pass in wherever our users pages it's under app to and

155
00:10:37,770 --> 00:10:43,050
let's make sure that the folders matches so under templates we see app too.

156
00:10:43,050 --> 00:10:48,720
So that's actually capitalized although as a string passing it I don't believe it makes a difference

157
00:10:49,400 --> 00:10:51,750
but we can always just check on that.

158
00:10:51,750 --> 00:10:58,740
So two member templates app to index I smelled the ghost templates app too and we send back whatever

159
00:10:58,770 --> 00:11:00,860
pages and it was called users.

160
00:11:01,050 --> 00:11:02,890
Each team L.M..

161
00:11:03,340 --> 00:11:07,930
Then finally we want to send back that context dictionary that actually contains the form and it's very

162
00:11:07,930 --> 00:11:08,260
common.

163
00:11:08,260 --> 00:11:13,950
Just to give it the key form and then pass in that form object which is this guy.

164
00:11:14,010 --> 00:11:14,350
All right.

165
00:11:14,350 --> 00:11:15,740
So we will save that.

166
00:11:15,760 --> 00:11:21,710
Now let's go back to users that it's T.M. and fix this up so it contains the form.

167
00:11:21,740 --> 00:11:25,670
So the first thing we need to do is actually create that form tag.

168
00:11:25,670 --> 00:11:29,080
We don't need to really worry about action right now because we're kind of handling that ourselves.

169
00:11:29,090 --> 00:11:33,590
Now the age T.M. and we don't need to assign it a class if you want to add more styling to it you can

170
00:11:33,590 --> 00:11:34,230
do that.

171
00:11:34,250 --> 00:11:38,710
We definitely say methods Posto and either lowercase or uppercase works.

172
00:11:38,710 --> 00:11:41,560
I like putting in uppercase just so it's very clear to me what's happening.

173
00:11:42,470 --> 00:11:46,440
And then we're going to do is use that template tagging and we'll pass form.

174
00:11:46,490 --> 00:11:51,790
Technically that's all you need to do but in order to get those nice line breaks we can say as underscore

175
00:11:51,790 --> 00:11:52,330
P..

176
00:11:52,550 --> 00:11:58,100
So that way each actual thing each actual widget form is a paragraph tag.

177
00:11:58,550 --> 00:12:05,480
And then remember this is something beginners often forget is that C S are f tag or token I should say.

178
00:12:05,610 --> 00:12:11,980
So we have C S R F underscore tokin and we need that in order to make sure the form is secure.

179
00:12:12,020 --> 00:12:13,970
And just so it runs period.

180
00:12:13,970 --> 00:12:19,940
And then finally we need the input so the input style is going to be or the type will be submit.

181
00:12:20,360 --> 00:12:25,990
We don't need to give it a name but we can't do is give it a class just since we have bootstrap here.

182
00:12:26,100 --> 00:12:27,520
Make it look a little nicer.

183
00:12:27,660 --> 00:12:33,780
So we'll give it to class between and then between primary and then finally the value whatever the buttons

184
00:12:33,790 --> 00:12:36,980
actually going to show can be submit.

185
00:12:36,980 --> 00:12:37,510
All right.

186
00:12:37,790 --> 00:12:40,430
So hopefully we've taken care of everything.

187
00:12:40,430 --> 00:12:42,890
We have our users ASTM all ready to go.

188
00:12:43,070 --> 00:12:44,450
Index looks good as well.

189
00:12:44,450 --> 00:12:51,560
Jumbotron or else already matched up from the previous iteration of this projects we have users calling

190
00:12:51,560 --> 00:12:54,770
app to that your Els and your Elle's up high here.

191
00:12:54,800 --> 00:12:55,410
Looking good.

192
00:12:55,400 --> 00:12:56,750
Users not users.

193
00:12:56,960 --> 00:12:58,890
And then we have our actual views.

194
00:12:58,910 --> 00:13:03,080
This is probably the hardest part of all this and it's returning back that dictionary which we're calling

195
00:13:03,200 --> 00:13:06,680
in the users of HTL over here with form.

196
00:13:06,710 --> 00:13:09,300
So let's actually test this out and see if it all worked.

197
00:13:10,200 --> 00:13:20,430
We're going to see the end to go to and then when I'm going to do a same Python managed up high and

198
00:13:20,430 --> 00:13:27,430
then will say run server if depending on how far you got in the previous Gengel level to Pro 2 folder

199
00:13:27,520 --> 00:13:32,980
you need to actually run the migrations if you went along with me throughout the entire course and we're

200
00:13:32,980 --> 00:13:36,640
coding along correctly then you shouldn't need to make those migrations but keep that in mind.

201
00:13:36,640 --> 00:13:40,460
You may need to make the migrations north to have everything be connected.

202
00:13:40,540 --> 00:13:42,290
I should already have everything connected.

203
00:13:42,460 --> 00:13:45,450
So it's actually run the server.

204
00:13:45,590 --> 00:13:47,270
Let's make sure we don't get an error out.

205
00:13:47,300 --> 00:13:49,260
So that's a good sign no error.

206
00:13:49,320 --> 00:13:51,410
Let's copy this.

207
00:13:51,430 --> 00:13:54,700
Actually we don't need to copy x and have it here or else I'll just refresh.

208
00:13:54,980 --> 00:13:55,870
OK so far so good.

209
00:13:55,870 --> 00:13:57,640
It says Welcome to users to sign up.

210
00:13:57,670 --> 00:13:58,350
So let's do that.

211
00:13:58,360 --> 00:14:01,630
We'll go to slash users enter.

212
00:14:01,660 --> 00:14:03,200
And now we get this please sign up here.

213
00:14:03,220 --> 00:14:04,460
Also looking pretty good.

214
00:14:04,690 --> 00:14:11,530
Let's make a really obvious first name so I'll say I'm new first or the first name that we when I look

215
00:14:11,740 --> 00:14:17,380
into this page as an administrator I can easily know that actually worked correctly.

216
00:14:17,680 --> 00:14:28,220
Last name I can say my last name and then email will say it works at whatever yahoo dot com we'll hit

217
00:14:28,220 --> 00:14:28,820
submit.

218
00:14:30,010 --> 00:14:30,620
And perfect.

219
00:14:30,620 --> 00:14:34,160
It took us back to the home page just like we thought it would.

220
00:14:34,190 --> 00:14:35,800
Now we can see that it also sent a post.

221
00:14:35,810 --> 00:14:38,210
So that's looking pretty good right now.

222
00:14:38,210 --> 00:14:41,680
Now let's go to the Admin site and make sure it all works.

223
00:14:41,720 --> 00:14:43,130
So go slash admin.

224
00:14:43,190 --> 00:14:46,500
And if you don't remember your username or password from Django level.

225
00:14:46,730 --> 00:14:51,130
Feel free to just use Python managed up high create super user number that command all you have does

226
00:14:51,170 --> 00:14:55,880
provide your username and email and type in your password twice.

227
00:14:55,940 --> 00:15:01,400
So hopefully I remember my password it was just test passwords something very simple and I use it and

228
00:15:01,400 --> 00:15:03,310
was able log in see if that works.

229
00:15:03,350 --> 00:15:06,980
Ok looks like I did not remember my password so I don't remember this.

230
00:15:06,980 --> 00:15:09,620
So let's actually create a new one.

231
00:15:09,770 --> 00:15:11,340
You probably are in the same boat as me.

232
00:15:11,420 --> 00:15:20,230
So we'll say Python managed up high create super user and then lets it Jose.

233
00:15:20,630 --> 00:15:24,810
Email address hello at gmail dot com doesn't really matter.

234
00:15:24,860 --> 00:15:26,380
And then the password just doesn't matter.

235
00:15:27,190 --> 00:15:32,120
We'll say test password test password and now is try this again.

236
00:15:32,120 --> 00:15:40,270
It will say Python managed the high run server we're going to refresh actual admin page and let's try

237
00:15:40,270 --> 00:15:40,660
this again.

238
00:15:40,660 --> 00:15:46,460
So Jose and then as password log in perfect.

239
00:15:46,500 --> 00:15:50,320
And now if I expand this I can see here I have two users.

240
00:15:50,320 --> 00:15:55,480
And as I mentioned a few times users may not be the best name because under authentication authorization

241
00:15:55,750 --> 00:15:58,420
you already have users but it's up to you.

242
00:15:58,430 --> 00:15:59,350
He doesn't mind.

243
00:15:59,350 --> 00:16:01,230
Right now everything is so simple and small.

244
00:16:01,300 --> 00:16:02,800
Shouldn't be much of a difference.

245
00:16:02,830 --> 00:16:06,730
So we'll click on users over here and we see we have a bunch of user objects.

246
00:16:06,730 --> 00:16:10,270
So if you ran the population script you'll also have a much easier objects.

247
00:16:10,300 --> 00:16:13,660
The most recent one should be the one at the top which is the one we just entered so as click on it

248
00:16:14,320 --> 00:16:16,830
and here it is I'm new first my last name.

249
00:16:16,840 --> 00:16:18,300
It worked at Yahoo dot com.

250
00:16:18,310 --> 00:16:19,260
Perfect.

251
00:16:19,270 --> 00:16:24,580
So now we can do whatever we want with this as a super user but basically we just showed that the user

252
00:16:24,610 --> 00:16:30,160
can input information and then we can access it in our models which connects to a database and that's

253
00:16:30,160 --> 00:16:33,010
the basic premise of using a model form.

254
00:16:33,010 --> 00:16:39,400
All right I hope you now really see the power in your mind the gears are working here and you can essentially

255
00:16:39,400 --> 00:16:43,670
realize that you now have the power to start making almost any website you want to make.

256
00:16:43,720 --> 00:16:49,270
You have the ability to gather information from the user save it and you also know how to return it

257
00:16:49,270 --> 00:16:50,410
back to the user.

258
00:16:50,410 --> 00:16:54,210
I'll be you know in very simple fashions but eventually the rest is just styling.

259
00:16:54,490 --> 00:16:55,150
OK.

260
00:16:55,240 --> 00:16:58,060
Hope you enjoyed the lecture and we'll see you at the next section of the course.

261
00:16:58,060 --> 00:16:58,850
Thanks everybody.
