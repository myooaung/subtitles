1
00:00:05,320 --> 00:00:10,290
Hello everyone and welcome to part five of the blog clone project.

2
00:00:10,370 --> 00:00:15,740
So we finished the blog post views and you or else that is the class based views that work of the actual

3
00:00:15,740 --> 00:00:16,480
blog post.

4
00:00:16,490 --> 00:00:20,820
But we still need to actually create the templates for the blog post class based views.

5
00:00:20,870 --> 00:00:26,000
That is the actual h team l files that link up to those views and after that we can create the function

6
00:00:26,020 --> 00:00:28,410
trees that are going to handle the comments.

7
00:00:28,430 --> 00:00:29,420
So let's get started.

8
00:00:29,420 --> 00:00:32,410
Hop over to the editor right here I am at the.

9
00:00:32,430 --> 00:00:37,370
Editor and what we're going to do is first create all the templates that will match up with the views

10
00:00:37,370 --> 00:00:42,830
that we created here in our classes and we'll create one extra template for the actual comments we already

11
00:00:42,830 --> 00:00:45,110
have are about page template that was actually quite easy.

12
00:00:45,110 --> 00:00:50,150
Remember those the very first thing we did and it's just linking to the actual base studies timeo which

13
00:00:50,240 --> 00:00:51,760
doesn't have much of anything right now.

14
00:00:51,980 --> 00:00:57,890
Let's create a couple of more templates going to right click on blog and create a new file and we're

15
00:00:57,890 --> 00:01:02,120
going to have this one be the post underscore detail.

16
00:01:02,270 --> 00:01:07,820
H T.M. and I do recommend that you follow along and named these html files.

17
00:01:07,990 --> 00:01:09,900
Exactly the same name that I'm doing here.

18
00:01:09,910 --> 00:01:14,410
Otherwise when you actually run the server you may see some errors that we saw and discussed where we

19
00:01:14,410 --> 00:01:18,880
talked about class based views that there's actually different names that jingle looks for.

20
00:01:19,000 --> 00:01:20,760
So there's a detail.

21
00:01:20,920 --> 00:01:29,620
Let's also create our post underscore form that each T.M. page and create another one and this one is

22
00:01:29,620 --> 00:01:31,930
going to be or post underscore list.

23
00:01:31,960 --> 00:01:32,750
That is Tim L..

24
00:01:32,760 --> 00:01:39,700
It's going to be our home page with all the lists of all the posts and create a draft list so same post

25
00:01:39,770 --> 00:01:49,540
underscore draft underscore list that each team will and then finally I want the delete for the post.

26
00:01:49,630 --> 00:01:54,060
So say new file and this one goes.

27
00:01:54,060 --> 00:01:58,520
Post underscore confirm underscore deletes.

28
00:01:58,650 --> 00:02:02,460
So usually when you click on the buttons you need some sort of confirmation page.

29
00:02:02,460 --> 00:02:03,770
So there it is.

30
00:02:03,760 --> 00:02:08,600
And what we're also going to add in here is a comment form that age HTML.

31
00:02:08,640 --> 00:02:12,020
So we haven't done any comment views but we will in just a second.

32
00:02:12,040 --> 00:02:19,920
Let's create a new file and say this is the comments underscore form that H T.M..

33
00:02:20,000 --> 00:02:27,870
OK so we have the about the base the comment form post confirmed delete post detail post-draft list

34
00:02:27,990 --> 00:02:30,870
post form and post list and then under registration.

35
00:02:30,930 --> 00:02:36,320
I'm going to do is create a new file called log in H T.M..

36
00:02:36,540 --> 00:02:41,340
And note that this is going underneath the registration subdirectory under templates and will discuss

37
00:02:41,340 --> 00:02:46,440
registration authorization all that later on we're going to do it a little differently because basically

38
00:02:46,440 --> 00:02:51,630
we're kind of piggy backing off the super users who can create at the command line since those super

39
00:02:51,630 --> 00:02:54,990
users are going to be people that are actually able to log in.

40
00:02:55,590 --> 00:03:00,930
OK I'm going to close all these HTL files and templates that I just made later on we're going to be

41
00:03:00,960 --> 00:03:02,430
working off those a lot more.

42
00:03:02,490 --> 00:03:04,560
But here you are Elle's.

43
00:03:04,740 --> 00:03:07,640
This is the sites your URLs will come back to that later.

44
00:03:07,680 --> 00:03:10,170
That's my about that a HTML page and here are my views.

45
00:03:10,170 --> 00:03:12,830
So since we're going to do what we did in the previous lecture.

46
00:03:12,930 --> 00:03:16,010
A bunch of views and then only a bunch of your ELSE to them.

47
00:03:16,140 --> 00:03:20,070
But in this case we'll do it for the comments to you already that everything that's due at the blog

48
00:03:20,070 --> 00:03:20,600
post.

49
00:03:20,760 --> 00:03:23,770
Let's continue on with the comments so scroll all the way down.

50
00:03:24,000 --> 00:03:25,920
And if you want to match up kind of the notes.

51
00:03:26,150 --> 00:03:32,400
I did some sort of comment or some hash tags here so there's a bunch of hash tags just so we can kind

52
00:03:32,400 --> 00:03:36,810
of get an idea of what's going on and separate everything else out.

53
00:03:38,250 --> 00:03:45,540
OK so first thing you need to do is have some sort of publication for the comment itself so we'll call

54
00:03:45,540 --> 00:03:55,750
this the IF and let's have this be something like add a comment to post add underscore comments underscore

55
00:03:56,200 --> 00:03:58,510
to underscore post.

56
00:03:58,510 --> 00:04:04,930
So this will allow us to add a comment to a post and I'm going to have this big request and take in

57
00:04:04,930 --> 00:04:06,110
a primary key.

58
00:04:07,710 --> 00:04:11,880
And what we do is actually import a couple of more things in order to make this all work.

59
00:04:11,880 --> 00:04:16,970
So what I want to do is get the object or four or four and then redirect and render.

60
00:04:17,190 --> 00:04:24,400
So coming all the way back up I will collapse a tree right now so we get a little more room is up here

61
00:04:24,400 --> 00:04:33,530
where it says Jingo that shortcuts not only will import render but it will also import object or 4 0

62
00:04:33,540 --> 00:04:36,470
4 and we'll talk about that later on.

63
00:04:36,840 --> 00:04:43,880
And then I also want the read direct and then I also want to make sure I have logging required since

64
00:04:43,880 --> 00:04:50,900
we'll be using that later on and then something else I probably want is time zone so will say from jingo

65
00:04:50,990 --> 00:04:59,330
da tills in poor time zone and that it looks kind of crazy if all these from import statements the very

66
00:04:59,330 --> 00:05:03,370
top so feel free to separate these comments or kind of chunks.

67
00:05:03,380 --> 00:05:06,450
However makes most sense to you.

68
00:05:06,690 --> 00:05:08,600
But let's continue on.

69
00:05:08,610 --> 00:05:13,550
Scroll all the way back down here and come back to add comment to post.

70
00:05:13,680 --> 00:05:20,700
So we're going to do is have the post object instead of this function equal to get object or four or

71
00:05:20,700 --> 00:05:30,120
four and it will take in a post model logic and have Piquet's will to the primary key provided with

72
00:05:30,390 --> 00:05:35,130
the request call and I want this to require being logged in.

73
00:05:35,430 --> 00:05:41,900
We don't have to have it require a log in just have anyone make a comment but we want to have the log

74
00:05:41,900 --> 00:05:46,860
in required just kind of get some practice with that decorator.

75
00:05:47,440 --> 00:05:56,770
So say if the request pop method is equal to equals equals to post then hopefully it's kind of jogging

76
00:05:56,770 --> 00:05:57,460
your memory.

77
00:05:58,280 --> 00:06:13,060
Will say form is equal to comment form and then we'll take request post and we'll see if that form is

78
00:06:13,270 --> 00:06:14,650
valid.

79
00:06:15,490 --> 00:06:22,300
Well we're going to end up doing is grabbing the comment saying form that save and I don't want to commit

80
00:06:22,330 --> 00:06:25,540
this quite yet so I'll say it is equal to false.

81
00:06:25,540 --> 00:06:34,650
What I want to do is connect that particular comment post to the post object and then I want to save

82
00:06:34,660 --> 00:06:34,910
it.

83
00:06:36,910 --> 00:06:42,440
And then once that's all done we're going to just return a read direct.

84
00:06:42,560 --> 00:06:54,980
So say redirect to the post detail page with primary key being equal to that post primary key and else.

85
00:06:54,980 --> 00:06:57,860
So let's say the request method it wasn't a post.

86
00:06:57,860 --> 00:07:07,850
Meaning someone hasn't actually filled out the comment form will say form physical to comment form and

87
00:07:08,150 --> 00:07:11,360
after all that will return loops.

88
00:07:11,580 --> 00:07:20,040
We need to render the actual pace we'll a request and I'm going to have a blog slash comments underscore

89
00:07:20,040 --> 00:07:26,070
form the H to him l and if I expand my the rectory I can confirm here it was called comment form that

90
00:07:26,070 --> 00:07:26,800
each team L.

91
00:07:26,910 --> 00:07:29,030
So that's what I'm putting in here.

92
00:07:29,370 --> 00:07:36,360
And then we're going to say Pessin a context dictionary for the form is for him.

93
00:07:36,400 --> 00:07:40,810
Hopefully this is more or less a little familiar to you given what we covered back we're talking about

94
00:07:40,810 --> 00:07:42,650
forms.

95
00:07:42,740 --> 00:07:46,430
OK so in case you're feeling a little fuzzy on this let's quickly go over the thing.

96
00:07:46,570 --> 00:07:52,110
We have this dick reader which is a convenience decorator to make this interview require being logged

97
00:07:52,110 --> 00:07:52,620
then.

98
00:07:52,860 --> 00:07:58,510
So in order to add a comment to a post we take in a request and the primary key that links the actual

99
00:07:58,600 --> 00:07:59,910
comment to the post.

100
00:07:59,910 --> 00:08:03,520
So if you're in a post the tail page and click OK I want to comment on this.

101
00:08:03,520 --> 00:08:05,950
There's a primary key that goes along with that post.

102
00:08:05,950 --> 00:08:11,410
And they were going to say all right either get that object the post object or the four or four page

103
00:08:11,440 --> 00:08:18,070
meaning you can find it in passen the post model and then Piquet's to Piquet.

104
00:08:18,100 --> 00:08:23,610
So if the request the method is to post meaning someone's actually filled in the form and enter something

105
00:08:24,370 --> 00:08:29,180
the form is equal to the comment form passing that request if the form is valid.

106
00:08:29,200 --> 00:08:31,560
Meaning they didn't miss anything up.

107
00:08:31,630 --> 00:08:34,110
We have the save of the form.

108
00:08:34,150 --> 00:08:39,090
However we said it false that we would have at least some sort of form in memory and we say comment

109
00:08:39,090 --> 00:08:41,620
that post is equal to the post object.

110
00:08:41,680 --> 00:08:48,370
And basically what this does is if we take a look back at our models remember that the actual comment

111
00:08:48,460 --> 00:08:55,690
has an attribute called Post which is connected by a foreign key which is the actual post over here

112
00:08:56,000 --> 00:09:00,790
and that's basically what's happening here we're saying OK that comment that post make it equal to the

113
00:09:00,790 --> 00:09:06,400
post itself and then save it once you're all done with that redirect to the post e-tail page with the

114
00:09:06,400 --> 00:09:14,350
primary key being equal to the post-up peaky which again is just the peak or primary key for that actual

115
00:09:14,350 --> 00:09:16,510
blog post otherwise.

116
00:09:16,540 --> 00:09:22,050
So if this whole thing has to happen else where the form is a sequel to the comment form and we'll just

117
00:09:22,060 --> 00:09:28,240
return the comment form that it's T.M. passing in the form for the context dictionary.

118
00:09:28,240 --> 00:09:32,850
So I want to actually come to this comment underscore form that HVM out page over here.

119
00:09:32,890 --> 00:09:36,790
This is where I'm going to inject that form contact's dictionary.

120
00:09:36,790 --> 00:09:37,330
All right.

121
00:09:37,330 --> 00:09:38,100
So that's it.

122
00:09:38,110 --> 00:09:39,960
Hopefully it feels pretty OK to you.

123
00:09:40,090 --> 00:09:42,700
But we still need to add that to our Urals that pi file.

124
00:09:42,880 --> 00:09:43,970
So let's do that now.

125
00:09:44,790 --> 00:09:49,430
Overhearing your calls that pi is going to have everything kind of has a bunch of long lines but that's

126
00:09:49,430 --> 00:09:51,080
OK for us.

127
00:09:51,560 --> 00:09:58,430
We'll say your L and I just created the add comment to post so we're going to do here is a regular expression

128
00:09:58,520 --> 00:10:06,290
I'm going to say the following carot post slash and then copy and paste this primary key regular expression

129
00:10:09,150 --> 00:10:16,270
and then when I'm going to do is say slash comments slash dollar sign for you.

130
00:10:16,280 --> 00:10:17,420
There it is.

131
00:10:17,420 --> 00:10:21,100
And then we'll say fuse dot add comments.

132
00:10:21,110 --> 00:10:29,810
Post and let's give it a name that just says give the same name at comment to post as a function.

133
00:10:29,830 --> 00:10:30,430
There it is.

134
00:10:30,460 --> 00:10:34,420
And then what I'm also going to do is add a comma there the very variant.

135
00:10:34,460 --> 00:10:40,580
So saving that let's come back to views that pi and we have one of them but not too many more.

136
00:10:40,600 --> 00:10:47,260
We just need to add any approval of the comment a removal of the common view and then we'll also use

137
00:10:47,260 --> 00:10:50,770
function based to be used to the actual publication.

138
00:10:50,770 --> 00:10:55,450
So let's finish off the comments and it's up to you whether you want to do a below or above this but

139
00:10:55,640 --> 00:11:02,440
we're going to do it below CTF and we're going to make one about comment approval.

140
00:11:02,440 --> 00:11:05,330
So you should have to be log in to approve a comment.

141
00:11:05,330 --> 00:11:07,000
So we'll just put that in now.

142
00:11:07,500 --> 00:11:09,380
Decorator log in.

143
00:11:09,520 --> 00:11:14,220
So we'll say log in required and we'll see comments.

144
00:11:15,740 --> 00:11:24,860
Approve and again it takes or question a P K primary key and then we'll say comments is equal to get

145
00:11:25,500 --> 00:11:27,270
object or four or four.

146
00:11:28,030 --> 00:11:30,380
And we're actually going to be grabbing the comma in this case

147
00:11:33,470 --> 00:11:36,640
and then we'll just say comment the proof.

148
00:11:36,890 --> 00:11:39,570
So if you come back to the models I should probably just open this.

149
00:11:39,570 --> 00:11:41,450
We're going to be referencing it.

150
00:11:41,810 --> 00:11:46,610
So if we come back to the models we have this approved comment method and if you have the comment you

151
00:11:46,610 --> 00:11:48,550
have this approved comment method here.

152
00:11:48,560 --> 00:11:52,790
So what happens is if you call that method you just say it's an approved comment.

153
00:11:52,790 --> 00:11:55,980
So you set this field equal to true when it's default was false.

154
00:11:57,300 --> 00:12:01,560
So we just called the approved method on that actual model object and that's all you have to do for

155
00:12:01,560 --> 00:12:02,550
the common approval.

156
00:12:02,640 --> 00:12:11,710
Which makes sense we'll see a return redirect and send it back to the post detail page with the primary

157
00:12:11,710 --> 00:12:15,530
key being the comment that post-up piqué.

158
00:12:15,820 --> 00:12:17,270
So what's actually happening here.

159
00:12:17,440 --> 00:12:20,140
Again come back to your model and it's all explained.

160
00:12:20,260 --> 00:12:23,010
The comment is connected to a particular post.

161
00:12:23,110 --> 00:12:29,230
And if I want to after approving that comment go to the post of that comment then I need the post.

162
00:12:29,280 --> 00:12:29,710
OK.

163
00:12:29,800 --> 00:12:34,690
So it's actually coming back up here and asking OK what's the primary key of the post that this comment

164
00:12:34,750 --> 00:12:36,240
was linked to.

165
00:12:36,680 --> 00:12:38,330
Well that's all there is there.

166
00:12:38,380 --> 00:12:39,230
So we'll save that.

167
00:12:39,310 --> 00:12:45,130
And let's add it to you or else again kind of a tedious process but it's not so bad considering that

168
00:12:45,130 --> 00:12:49,710
you're really building a website if not that much code.

169
00:12:50,420 --> 00:12:50,720
All right.

170
00:12:50,740 --> 00:13:02,120
So we have to do here is we just created the comment approval I'll say curat comments slash and copy

171
00:13:02,120 --> 00:13:11,290
this so that it links and they will say slash approve slash dollar sign we'll call views.

172
00:13:11,550 --> 00:13:12,840
And I think it's called common approve.

173
00:13:12,850 --> 00:13:13,320
Yeah.

174
00:13:13,630 --> 00:13:17,120
And let's give it the same name name as equal to comments.

175
00:13:17,120 --> 00:13:20,950
Approve the recall and note that I'm passing it in as a string.

176
00:13:20,950 --> 00:13:25,540
So kind of taking advantage of Adam's autocomplete for functions and then just using it for a string

177
00:13:25,540 --> 00:13:26,440
there.

178
00:13:26,500 --> 00:13:32,750
So we have to use our comment to post the come Proview will come to use that page again.

179
00:13:32,950 --> 00:13:39,420
And then what we're gonna do is create another function view and we'll have this one also be log in

180
00:13:39,420 --> 00:13:40,250
required.

181
00:13:40,680 --> 00:13:45,780
So I will say log in required and let me make a few more lines here just so you have more space to see

182
00:13:45,780 --> 00:13:46,390
this.

183
00:13:46,680 --> 00:13:50,140
Will say this is for removing a comment or say comments.

184
00:13:50,160 --> 00:13:57,600
Remove this takes in request and the piquet it's going to feel really similar to what we just did and

185
00:13:57,660 --> 00:14:00,690
we'll say the comments lips.

186
00:14:01,240 --> 00:14:07,300
The comment is equal to the object to four or four of that particular comments where the Piquet's the

187
00:14:07,420 --> 00:14:15,940
piquet and then we're gonna say is the post underscore Piquet is equal to comment.

188
00:14:16,580 --> 00:14:19,580
Post-up OK so linking that up.

189
00:14:19,610 --> 00:14:25,580
Basically what we did over here is setting a new variable and the reason for that is because I want

190
00:14:25,580 --> 00:14:35,680
to say comment that delete so I'm deleting that comment from my database and then I want to return redirect

191
00:14:37,610 --> 00:14:39,300
and go back to the post the tail

192
00:14:42,610 --> 00:14:46,040
and then say Piquet's equal to post-peak K..

193
00:14:46,180 --> 00:14:50,330
So you might be wondering well why didn't you just do the same thing you did here where he said common

194
00:14:50,330 --> 00:14:51,380
thought post-up.

195
00:14:51,720 --> 00:14:57,460
Well remember if I said delete by the time you get to return it's not going to remember what that post-up

196
00:14:57,460 --> 00:14:58,420
Piquet was.

197
00:14:58,540 --> 00:15:02,270
Which is why I need to save it as an extra variable before I delete this.

198
00:15:02,300 --> 00:15:09,010
So this approval and this remove are almost the exact same thing except I have to actually save that

199
00:15:09,010 --> 00:15:11,710
post primary key as a separate variable.

200
00:15:11,710 --> 00:15:15,640
So about the time I delete it I still remember over here.

201
00:15:15,760 --> 00:15:16,010
OK.

202
00:15:16,060 --> 00:15:18,650
So pretty simple logic as far as or doing.

203
00:15:18,850 --> 00:15:22,010
And as you get more experience these things will kind of come naturally to you.

204
00:15:22,120 --> 00:15:26,920
So as we move onto this purely class based views or for comments using some sort of outside library

205
00:15:26,920 --> 00:15:31,930
like discus But now we're kind of just grinding out the hard way to get review on everything we've ever

206
00:15:31,930 --> 00:15:37,500
covered in this course at least most of what we covered in this course and then what we're going to

207
00:15:37,500 --> 00:15:41,440
do here is wups set up that your link to it.

208
00:15:41,680 --> 00:15:46,960
So we'll have this be comment as well and I'm going to copy and paste this.

209
00:15:46,960 --> 00:15:52,060
It's almost going to be the exact same URL except instead of approving it we are going to remove it

210
00:15:53,170 --> 00:16:01,840
slash dollar sign and then we'll say comma views the comments remove and then we'll say name is equal

211
00:16:01,840 --> 00:16:08,580
to comments underscore remove.

212
00:16:08,580 --> 00:16:13,980
OK so coming back to views we have three functional views are related to the comments.

213
00:16:14,050 --> 00:16:17,170
I need one more function view in order to publish things.

214
00:16:18,420 --> 00:16:19,810
And that is the published post.

215
00:16:20,230 --> 00:16:25,810
So I'll make this also log in required and this will be our last view.

216
00:16:25,840 --> 00:16:28,330
I know you're probably tired of writing these views by now so we'll see.

217
00:16:28,330 --> 00:16:35,530
Post Polish request takes in a primary key and this one can look pretty similar to the ones you just

218
00:16:35,530 --> 00:16:37,830
made except now it's related to the post.

219
00:16:38,020 --> 00:16:45,910
So we say the post is equal to object or 4 or four of the post teacake with a K and then we're going

220
00:16:45,910 --> 00:16:54,730
to say postop publish and after that I'm going to return a redirect to the post detail page.

221
00:16:54,730 --> 00:16:59,260
So when you actually hit publish you go straight to the post detail page where the primary key is the

222
00:16:59,260 --> 00:17:04,240
primary key of the post you just made and once we finished this functional view we need to just come

223
00:17:04,240 --> 00:17:07,070
over to your Olsdorf pie and add it in.

224
00:17:07,300 --> 00:17:13,020
So again we'll say your L and we'll do regular expressions here.

225
00:17:13,820 --> 00:17:20,120
And we'll say this is post and we're kind of going to add this to whatever this is so essentially is.

226
00:17:20,150 --> 00:17:21,120
Same thing here.

227
00:17:22,010 --> 00:17:27,390
Except instead of remove let's copy this and just paste it and say results in typing.

228
00:17:27,500 --> 00:17:29,680
But we're not removing something for a post.

229
00:17:29,690 --> 00:17:34,570
We are going to be publishing that post so we'll say that publish or slash publish.

230
00:17:34,580 --> 00:17:39,020
Excuse me views and this should be called Post underscore.

231
00:17:39,050 --> 00:17:49,910
Publish in the name of this will just give it the same name post underscore publish save that and now

232
00:17:50,030 --> 00:17:52,610
all your real patterns are ready to go.

233
00:17:52,730 --> 00:17:58,940
So how about 10 year old patterns they believe 5 through 15 and we have our views ready to go.

234
00:17:59,180 --> 00:18:01,130
So you did a lot of work here.

235
00:18:01,180 --> 00:18:06,200
Eighty five lines of code if you count the white blank spaces or blank lines.

236
00:18:06,200 --> 00:18:06,980
Not bad.

237
00:18:07,310 --> 00:18:12,290
So we have a lot of use or euros ready to go and if we look at our templates we have all the blank templates

238
00:18:12,320 --> 00:18:14,270
that are ready to be filled out.

239
00:18:14,300 --> 00:18:18,350
Next thing you have to do is just fill out these templates to make sure everything works together.

240
00:18:18,380 --> 00:18:22,550
Set up the actual bootstrap and see SS and Javascript for everything.

241
00:18:22,550 --> 00:18:27,520
For those kind of special features and we should be pretty darn close to getting a full functional websites.

242
00:18:27,680 --> 00:18:29,350
Now just the simple templates.

243
00:18:29,510 --> 00:18:32,380
OK we'll set that up all in the next couple of ideas.

244
00:18:32,390 --> 00:18:33,680
Thanks and I'll see you there.
