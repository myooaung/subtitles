1
00:00:04,930 --> 00:00:08,890
Hello everyone and welcome to the populating models lecture.

2
00:00:09,050 --> 00:00:13,160
It's usually a good idea to create some sort of script that will populate your models with some dummy

3
00:00:13,160 --> 00:00:15,010
data that is fake data.

4
00:00:15,290 --> 00:00:19,910
Let's show you how you can use the faker library to create this sort of script going to hop over to

5
00:00:19,910 --> 00:00:21,200
the editor now.

6
00:00:21,210 --> 00:00:21,460
OK.

7
00:00:21,470 --> 00:00:27,230
So here I am open at the editor and the first thing we need to do is to actually install the faker library

8
00:00:27,710 --> 00:00:31,520
and you can do that with a simple Pip install and make sure you're in the correct virtual environment

9
00:00:32,090 --> 00:00:32,950
before you do this.

10
00:00:32,960 --> 00:00:38,620
But you'll say Pipp install them for capital F A K E R enter.

11
00:00:38,660 --> 00:00:42,300
And this should be installed the figure Python library for you.

12
00:00:45,410 --> 00:00:48,150
And it's a pretty quick download so it shouldn't take that much time.

13
00:00:50,390 --> 00:00:50,930
All right.

14
00:00:50,960 --> 00:00:52,850
Looks like it's finished installing for me.

15
00:00:52,850 --> 00:00:54,470
So that's all we need to do for that.

16
00:00:54,680 --> 00:00:58,580
OK let me quickly show you what the documentation for faker looks like.

17
00:00:58,610 --> 00:01:05,210
You can just come to Baker read the docs the IO and then check out the master link here.

18
00:01:05,270 --> 00:01:07,640
It just shows you the basic usage of faker.

19
00:01:07,660 --> 00:01:09,360
I can kind of zoom in here.

20
00:01:09,710 --> 00:01:15,560
Basically what you're doing is after you Pip install F.A. you say from faker import factory or from

21
00:01:15,600 --> 00:01:16,860
fake or import faker.

22
00:01:16,880 --> 00:01:18,240
That's what we were going to do it.

23
00:01:18,410 --> 00:01:23,870
And then you just say fake is an instance of fake or class and you can call different methods off of

24
00:01:23,870 --> 00:01:28,140
it create a fake name create a fake address create some fake text et cetera.

25
00:01:28,340 --> 00:01:29,620
And they have tons of methods here.

26
00:01:29,630 --> 00:01:34,580
So you can check out the documentation for all the various methods you click down here on providers.

27
00:01:34,700 --> 00:01:40,090
It shows you things like fake credit card fake date time fake Internet address person python files et

28
00:01:40,090 --> 00:01:40,920
cetera.

29
00:01:41,360 --> 00:01:46,790
So let's show you how you can use this library faker to actually create some fake data to populate our

30
00:01:46,790 --> 00:01:54,320
models with so inside of my top level first project folder I'm going to right click and create a new

31
00:01:54,320 --> 00:01:55,210
file.

32
00:01:55,520 --> 00:01:58,290
And it's kind of up to you where you want to save the population script.

33
00:01:58,310 --> 00:02:01,370
I usually save it on the top level file.

34
00:02:01,400 --> 00:02:02,390
So again it's up to you.

35
00:02:02,390 --> 00:02:11,360
But we'll call it populates underscore first underscore at that pie and we'll have it open here.

36
00:02:11,370 --> 00:02:17,430
Let's minimize some of this stuff so we get a little more room to read this and then I'm going to say

37
00:02:17,790 --> 00:02:23,770
import O S and then I'm going to need to configure the settings for the project.

38
00:02:23,770 --> 00:02:31,980
Now I actually need to run this before I call any code so I need to say OS environed for the environment.

39
00:02:32,110 --> 00:02:36,910
And I'm going to set the default and then I'm going to pass in all caps.

40
00:02:36,950 --> 00:02:49,210
Jingo settings underscore module and then set it equal to or passen as a second parameter first underscore

41
00:02:49,450 --> 00:02:52,330
project settings.

42
00:02:52,630 --> 00:02:56,500
And basically what this is doing is just configuring the settings for the project they need to do this

43
00:02:56,500 --> 00:03:05,210
before you start manipulating the actual models that are from here we can import Django and then set

44
00:03:05,210 --> 00:03:13,620
it up so I can say jingoes set up and this is set up and configured the project settings from here on.

45
00:03:13,640 --> 00:03:21,540
Next is our sake pop scripts are fake population scripts so they import a couple of things or import

46
00:03:21,540 --> 00:03:35,890
random and then I also say from me from first app the models import will do access record web page and

47
00:03:35,980 --> 00:03:37,490
copeck.

48
00:03:37,700 --> 00:03:44,540
And then finally the library we just downloaded will say from thicker import with a capital F. Saker

49
00:03:45,080 --> 00:03:48,300
the naming convention isn't so great there but that's the way to do it.

50
00:03:49,500 --> 00:03:56,370
Then we create an instance of that faker object or call it fake Jennifer fake generation and then we'll

51
00:03:56,370 --> 00:04:02,930
call Flaker close parentheses and then I'm going to just make a list of topics or remember the topics

52
00:04:02,940 --> 00:04:04,920
that was a very simple model.

53
00:04:04,950 --> 00:04:07,350
So I'll just create those manually.

54
00:04:07,350 --> 00:04:12,000
I'll have one topic of Web sites search on topic of Web sites.

55
00:04:12,000 --> 00:04:14,280
Be social in other one.

56
00:04:14,280 --> 00:04:17,580
Be a market place type site.

57
00:04:17,970 --> 00:04:26,130
And then finally we'll have news in games so various topics for different Web sites then we'll create

58
00:04:26,130 --> 00:04:33,060
a function that can actually add topics so say add topic and this is going to look really similar to

59
00:04:33,060 --> 00:04:34,420
using those shell commands.

60
00:04:34,420 --> 00:04:40,090
I'll say T is equal to topic objects.

61
00:04:40,310 --> 00:04:48,440
And in this case I'm going to call the Getz underscore or creates and what this does is it's either

62
00:04:48,440 --> 00:04:55,290
going to retrieve the topic if it already exists in the model or create it and I'm going to pass on

63
00:04:55,620 --> 00:05:07,180
top name is equal to and I'll say random choice the random choice method from the top X list and then

64
00:05:07,180 --> 00:05:13,610
I grab here a zero because of the way this is formatted back and to discuss this sort of formatting

65
00:05:13,610 --> 00:05:16,760
from get recreate a little more is the general format.

66
00:05:16,940 --> 00:05:22,940
It's essentially a tuple that returns object and then something that's created and the first element

67
00:05:22,940 --> 00:05:29,570
in the tuple object is a reference to the model instance that this get or create method creates the

68
00:05:29,570 --> 00:05:35,360
data it base century wasn't found and then the entry is created using the parameters that you pass here.

69
00:05:35,450 --> 00:05:42,320
In this case I'm just saying pick one of these topics as a random choice and you can check out the official

70
00:05:42,320 --> 00:05:46,200
jingle documentation if you want more information about this or create method.

71
00:05:46,310 --> 00:05:51,380
But the basic idea here it's going to return a tuple and I just want to grab the first object in that

72
00:05:51,380 --> 00:05:54,620
tuple which is that reference to the model instance.

73
00:05:54,620 --> 00:05:58,020
So that's why I have to add an additional index of 0 here.

74
00:06:00,400 --> 00:06:09,440
Then once I've done that I'm going to say teeth that save as we've done before and I will then return

75
00:06:09,440 --> 00:06:11,900
to the.

76
00:06:12,050 --> 00:06:14,000
So that's my simple add topic.

77
00:06:14,030 --> 00:06:19,620
Now let's show you kind of the more complicated ways for populating access record and web page which

78
00:06:19,660 --> 00:06:23,080
aren't just a simple one word.

79
00:06:23,270 --> 00:06:33,060
So I will say the and we'll just call this populate and we'll have a default and to populate with.

80
00:06:33,070 --> 00:06:36,520
So the user can then later change that or provide it.

81
00:06:36,530 --> 00:06:39,390
We could also make it some sort of command line parameter.

82
00:06:39,390 --> 00:06:48,590
You can pasan right now we'll keep it as let's say Nickols 5 and we're going to do say four entry in

83
00:06:48,590 --> 00:07:03,430
range and Herse we need to do is get the topic for the entry so say top is equal to add topic

84
00:07:06,290 --> 00:07:13,050
and then I want to create the fake data for that entry.

85
00:07:13,160 --> 00:07:21,610
So I create a fake your L objects like call fake Jeon which is the instance of faker and the method

86
00:07:21,610 --> 00:07:28,600
for your L is just u r l then any that creates fake dates for that.

87
00:07:28,600 --> 00:07:35,280
And that's just again fake Jan and we call date offer that the date method.

88
00:07:35,290 --> 00:07:43,120
And then I need to get a fake name for this Web site like a fake company name so I can call fake.

89
00:07:43,190 --> 00:07:46,780
Jen dots and then call a company office.

90
00:07:46,780 --> 00:07:51,700
There are a ton of different more or a lot more methods you can call off of this like fake first name

91
00:07:51,700 --> 00:07:54,570
fake last name fake credit card etc..

92
00:07:54,580 --> 00:07:57,180
Again you can explore the documentation if you're interested in those.

93
00:07:57,340 --> 00:07:59,450
Right now that's really all we need.

94
00:07:59,470 --> 00:08:08,530
So then I'll create the new web page entry and I'll create a variable w e.

95
00:08:08,610 --> 00:08:15,980
The PGE for short for Web page and only web page the objects.

96
00:08:16,060 --> 00:08:18,420
And then I'm going to use that get or create again.

97
00:08:19,260 --> 00:08:27,880
And then I will specify that for this web page the topic is equal to top your L is equal to that fake

98
00:08:27,880 --> 00:08:36,670
your all generated and the name of it is equal to that fake name I generated.

99
00:08:36,770 --> 00:08:40,190
Again I need to grab the first object in that tuple that's.

100
00:08:41,220 --> 00:08:47,280
So keep that and then I want to create a fake access record.

101
00:08:49,480 --> 00:08:52,490
Or that web page.

102
00:08:52,610 --> 00:09:00,460
So I will say A.S.C. underscore R-S.C. is equal to access record.

103
00:09:00,830 --> 00:09:14,840
Again objects get create and also apply that the name was the web page and then date is equal to sake

104
00:09:14,860 --> 00:09:17,270
underscore dates.

105
00:09:17,350 --> 00:09:23,320
And again I just want that first object so no this is going to be a little different on this first parameter

106
00:09:23,410 --> 00:09:28,240
because if you remember back to the actual models look like they click here for Web page.

107
00:09:28,240 --> 00:09:31,150
The topic was the foreign key topic.

108
00:09:31,210 --> 00:09:33,860
So when I'm actually generating that fake data.

109
00:09:33,910 --> 00:09:40,950
Notice that instead of passing just some fake topic name I'm actually grabbing a topic object so if

110
00:09:41,020 --> 00:09:47,650
we go back here I'm returning see from AD topics I'm actually returning a topic object which is why

111
00:09:47,650 --> 00:09:52,620
I'm passing it here when I'm saying get or create and it's the same thing for access records.

112
00:09:52,690 --> 00:09:58,510
Come back here for access record it's foreign key for the name is web page so actually belongs here.

113
00:09:58,730 --> 00:10:04,960
The web page means I'm going to pass an entire Web page here so that web page that I just created and

114
00:10:04,960 --> 00:10:08,390
passing it in to the access record because it was a foreign key.

115
00:10:08,440 --> 00:10:09,310
So keep that in mind.

116
00:10:09,310 --> 00:10:13,690
You can't just pass on a string here if you have it as a foreign key in the models

117
00:10:16,800 --> 00:10:17,380
OK.

118
00:10:17,530 --> 00:10:26,170
Next finally at the end of all this thing I'm going to say if main name is equal to Main here I'm going

119
00:10:26,170 --> 00:10:30,170
to print some command like Papilio scripts

120
00:10:34,340 --> 00:10:39,800
and then we can say populate and here you can actually pass in whatever number you want number the default

121
00:10:39,800 --> 00:10:40,970
was 5.

122
00:10:41,160 --> 00:10:43,190
We could change it to be 20 if we wanted to.

123
00:10:43,250 --> 00:10:44,620
That should be no problem.

124
00:10:44,690 --> 00:10:54,380
And then once that's done we'll say something like population or we'll say populating complete save

125
00:10:54,380 --> 00:10:54,880
that.

126
00:10:54,970 --> 00:10:58,990
And now it's time to actually test to see if we got this all right.

127
00:10:58,990 --> 00:11:06,980
So I come back up here and then I'm going to clear my Consul and let's make sure I'm in the right place

128
00:11:06,990 --> 00:11:18,090
they should be under first project and I will call Python wups we'll call him right Python.

129
00:11:19,540 --> 00:11:27,380
Populate underscore first underscore at that pi enter populating the script you see kind of a bunch

130
00:11:27,390 --> 00:11:30,550
stuff here happening with D-B sequel like that.

131
00:11:30,630 --> 00:11:35,340
The higher end value you provide the more time it will take to generate all that fake data.

132
00:11:35,370 --> 00:11:36,410
So keep that in mind.

133
00:11:36,630 --> 00:11:37,850
It looks like it all works.

134
00:11:37,860 --> 00:11:40,340
So now its actually tested.

135
00:11:40,590 --> 00:11:42,050
Let's run our Web site.

136
00:11:42,120 --> 00:11:53,760
I will say now Python managed up-I run server is going to run the server and let me grab the URL and

137
00:11:53,760 --> 00:11:56,730
put it in my browser and bring that browser up.

138
00:11:56,760 --> 00:12:02,490
So here's the browser and then let's say slash admin.

139
00:12:02,680 --> 00:12:06,730
And if we take a look at this let's check out the web pages we have.

140
00:12:06,730 --> 00:12:10,930
And now here I can see I have a bunch of fake web pages that I just generated and populated.

141
00:12:10,930 --> 00:12:11,950
Pretty cool.

142
00:12:11,990 --> 00:12:14,110
Come back to access records.

143
00:12:14,180 --> 00:12:18,130
You have a bunch of fake access records and you could have limited the access record dates.

144
00:12:18,130 --> 00:12:22,050
It doesn't really matter for our use case but we see that we're able to click on one.

145
00:12:22,050 --> 00:12:23,590
Check it out has a name.

146
00:12:23,590 --> 00:12:29,470
We can also reassign the name but now you have a better idea of what a fuller database actually looks

147
00:12:29,470 --> 00:12:29,920
like.

148
00:12:30,130 --> 00:12:35,470
So here web pages again here are the topics from the topics or just a few topics but I could click on

149
00:12:35,470 --> 00:12:36,550
social change.

150
00:12:36,550 --> 00:12:37,370
Cetera.

151
00:12:37,740 --> 00:12:38,380
OK.

152
00:12:38,530 --> 00:12:41,200
That's all we need to know now for population scripts.

153
00:12:41,200 --> 00:12:44,350
Hopefully you'll find them useful when you're working if your own web sites.

154
00:12:44,350 --> 00:12:46,590
We won't touch on them too often in the future.

155
00:12:46,600 --> 00:12:51,560
But keep in mind that we can use them and that faker libraries hopefully really useful to you.

156
00:12:51,850 --> 00:12:52,290
Thanks.

157
00:12:52,330 --> 00:12:53,440
And I'll see you at the next lecture.
