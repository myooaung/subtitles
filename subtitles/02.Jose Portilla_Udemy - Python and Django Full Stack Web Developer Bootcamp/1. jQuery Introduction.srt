1
00:00:05,140 --> 00:00:09,410
Hello everyone and welcome to the Jay queery section of the course.

2
00:00:09,440 --> 00:00:13,240
Let's briefly break down what Shakeri is and why you would want to use it.

3
00:00:13,250 --> 00:00:17,250
Keep in mind this course is not meant to be a full course on Javascript in any way.

4
00:00:17,270 --> 00:00:21,320
There is a lot more Javascript can do than what we've covered in this course and there are many other

5
00:00:21,320 --> 00:00:24,950
libraries for it such as angular re-act no jazz.

6
00:00:25,010 --> 00:00:29,000
Really this course is not going to cover any of those topics because they are outside the scope of this

7
00:00:29,000 --> 00:00:32,570
course and we won't really need them to build a full web application.

8
00:00:32,570 --> 00:00:38,210
What we do is we learn javascript and Jay query in order to use of Django later on.

9
00:00:38,220 --> 00:00:39,250
So what is Shakeri.

10
00:00:39,270 --> 00:00:44,630
Well Jay queery essentially just the javascript library and its a large single thought just file that

11
00:00:44,640 --> 00:00:48,270
has many pre-built methods and objects that really simplify your workflow.

12
00:00:48,390 --> 00:00:53,520
Specifically when you're interacting with the document object model and making HTP requests through

13
00:00:53,520 --> 00:00:56,860
the use of AJAX which we're going to talk about when we talk about Jing.

14
00:00:56,880 --> 00:01:02,930
Later on previously we've learned how to interact with a Dom using what's known as vanilla javascript

15
00:01:03,110 --> 00:01:07,910
which is another way of saying just plain javascript and we were able to use methods such as document

16
00:01:07,910 --> 00:01:14,610
Dockett element by id and later on we learned about methods such as document query selector when Jacqui

17
00:01:14,710 --> 00:01:15,880
was first created.

18
00:01:15,910 --> 00:01:20,980
The more robust and convenient method such as the query selector inquiry selector all actually didn't

19
00:01:20,980 --> 00:01:27,280
exist in vanilla javascript so J.Crew was created as a way to help simplify interactions with the Dom

20
00:01:27,430 --> 00:01:31,400
in one of its main features is the use of the dollar sign.

21
00:01:31,490 --> 00:01:32,960
So how do we actually get Jey query.

22
00:01:32,960 --> 00:01:34,140
Well you have two options.

23
00:01:34,160 --> 00:01:39,920
One is to link a CD and host that file like we did for we we're using bootstrap and then the other one

24
00:01:39,920 --> 00:01:44,450
is to actually download the database file from Jay cories official Web site and just link to it locally

25
00:01:44,450 --> 00:01:46,230
using a script tag.

26
00:01:46,250 --> 00:01:49,680
So again once you connect to the queries in the script tag and reached him L..

27
00:01:49,790 --> 00:01:54,730
Then you can call the specialized J.A.G. recalls that allow you to interact that Dom and eventually

28
00:01:54,740 --> 00:02:01,460
a few examples of how J.A.G. differs from a village javascript so on top of what a J.Crew call acts

29
00:02:01,460 --> 00:02:05,430
like and on the bottom we have what a vanilla javascript looks like.

30
00:02:05,570 --> 00:02:11,640
Here you can see that we basically replaced the document thok query selector all call in normal javascript.

31
00:02:11,640 --> 00:02:13,740
If a single dollar sign in here.

32
00:02:13,760 --> 00:02:19,970
Both of these Shakeri and vanilla javascript calls are grabbing all the elements that are under a div

33
00:02:19,970 --> 00:02:22,390
tag and hopefully just from this clear example.

34
00:02:22,400 --> 00:02:26,840
You can see they are going to save a lot of typing and a lot of work with the simple dollar sign command

35
00:02:26,840 --> 00:02:29,160
that Shakeri has.

36
00:02:29,240 --> 00:02:34,930
Let's imagine another situation where you actually want to edit the styling of a certain variable.

37
00:02:35,030 --> 00:02:43,050
So here with Jake Query we have some variable called E-L in here we've grabbed E-L and we said that

38
00:02:43,070 --> 00:02:48,180
C Ss border with and then set it to 20 pixels in vanilla javascript.

39
00:02:48,180 --> 00:02:53,250
You would have to call E-L dot style that border with is equal to 20 pixels.

40
00:02:53,250 --> 00:02:54,310
So hopefully I can see now that.

41
00:02:54,330 --> 00:03:01,150
Query basically allows you to just input any property of CSSA any style property directly using that

42
00:03:01,240 --> 00:03:05,820
CSSA method and then as a second argument what you want the change result to be.

43
00:03:05,820 --> 00:03:09,810
And that's a better workflow as far as being more robust.

44
00:03:11,470 --> 00:03:12,100
And then file it.

45
00:03:12,100 --> 00:03:17,150
Show you something that would be a function call with Cheikh query versus vanilla.

46
00:03:17,210 --> 00:03:22,190
So on the bottom here you have vanilla where you are saying is a document in a ready state loading.

47
00:03:22,460 --> 00:03:28,810
If not adding an event listener Dom content loading here Jay query can do this all in one simple line

48
00:03:28,850 --> 00:03:29,510
code.

49
00:03:31,530 --> 00:03:35,130
OK as you can see some situations are helped tremendously by a query.

50
00:03:35,220 --> 00:03:40,230
While others may not really necessitate it due to its massive popularity it's still very important to

51
00:03:40,230 --> 00:03:44,150
understand it because you're going to be running into it a lot in the real world.

52
00:03:44,150 --> 00:03:48,860
And if you didn't know J.A.G. you would end up reading someone else's code and just be flabbergasted

53
00:03:48,870 --> 00:03:51,830
why these dollar sign calls were everywhere.

54
00:03:51,840 --> 00:03:55,580
OK so let's start learning how to interact with the DOM with a query.

55
00:03:55,590 --> 00:03:56,720
I'll see at the next lecture.
