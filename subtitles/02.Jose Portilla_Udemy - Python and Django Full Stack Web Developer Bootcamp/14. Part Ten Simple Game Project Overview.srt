1
00:00:04,890 --> 00:00:06,900
Hello everyone and welcome back to Part 10.

2
00:00:06,900 --> 00:00:09,010
Simple game project.

3
00:00:09,090 --> 00:00:13,980
So we've learned enough python for actually create a simple command line game to finish off Python level

4
00:00:13,980 --> 00:00:14,800
1.

5
00:00:14,880 --> 00:00:19,830
Let's discuss the rules of the game and then show you an example run through of a finished game.

6
00:00:19,980 --> 00:00:25,650
The computer will think of a three digit number that has no repeating digits like three four six or

7
00:00:25,830 --> 00:00:26,900
seven to one.

8
00:00:26,940 --> 00:00:30,180
So again no repeating digits and it's just a three digit number.

9
00:00:30,480 --> 00:00:36,160
Then you're going to enter at the command line in input of your own guess of what three digit number

10
00:00:36,180 --> 00:00:37,910
the computer's thinking of.

11
00:00:38,040 --> 00:00:43,290
Then the computer will give you back some clues which will Taqwa a little bit based off these clues

12
00:00:43,470 --> 00:00:48,000
you're going to guess again and you'll keep doing it until you actually break the code with a full match

13
00:00:48,210 --> 00:00:53,970
three digits up your guess to the three digits that the computer originally guessed.

14
00:00:53,980 --> 00:00:57,800
So the possible clues are this based off your guess.

15
00:00:57,880 --> 00:01:03,250
The computer will say close if you've guessed the correct number but in the wrong position it will then

16
00:01:03,280 --> 00:01:05,530
also add a clue of match.

17
00:01:05,530 --> 00:01:09,230
If you've guessed the correct number in the correct position and then it will return.

18
00:01:09,250 --> 00:01:09,780
No.

19
00:01:09,880 --> 00:01:12,110
If you haven't guessed any of the numbers correctly.

20
00:01:12,310 --> 00:01:15,730
So we can get multiple clues back and that's possible.

21
00:01:15,730 --> 00:01:16,230
We'll show you.

22
00:01:16,230 --> 00:01:20,850
Now a quick run through of the game but you're going to need to look up a few things on your own to

23
00:01:20,860 --> 00:01:22,150
complete the project.

24
00:01:22,150 --> 00:01:25,040
There are hints for you left in this particular file.

25
00:01:25,090 --> 00:01:27,090
Part 10 simple games up PI.

26
00:01:27,100 --> 00:01:33,400
We haven't actually told you how to get input from a user but the hint is in part 10 simple game.

27
00:01:33,460 --> 00:01:35,270
Why do you get stuck on anything though.

28
00:01:35,290 --> 00:01:36,880
Feel free to post the Q&amp;A forums.

29
00:01:36,880 --> 00:01:39,760
I'm always happy to help out or to check out these solutions.

30
00:01:39,860 --> 00:01:41,910
Pi or the solutions lecture.

31
00:01:42,010 --> 00:01:45,210
OK so let's see what this actually looks like.

32
00:01:45,220 --> 00:01:50,390
So here I've copied and pasted the solutions to the notes the PI file have opened.

33
00:01:50,440 --> 00:01:55,450
So when I say Python most up-I they'll say something like welcome Codebreaker Let's see if you can guess

34
00:01:55,450 --> 00:01:56,620
my three digit number.

35
00:01:56,620 --> 00:01:57,700
The code has been generated.

36
00:01:57,700 --> 00:01:59,690
Please get a three digit number.

37
00:01:59,710 --> 00:02:00,580
What is your guess.

38
00:02:00,580 --> 00:02:06,380
I'll get something simple like four five six enter it and it says there is a match somewhere.

39
00:02:06,410 --> 00:02:12,020
So I know either 4 is in the correct position 5 is in the correct position or 6 is in the correct position.

40
00:02:12,020 --> 00:02:15,360
So I can swap some of them out to double check this.

41
00:02:15,380 --> 00:02:18,580
So let's say four to three and I get a match.

42
00:02:18,580 --> 00:02:26,120
So I'm going to guess that four is the first number let's confirm that by saying for instance 4 7 8

43
00:02:26,580 --> 00:02:30,020
and now I get a match again meaning 4 is definitely the first number.

44
00:02:30,110 --> 00:02:34,370
And then you just keep guessing the number over and over again until you've actually broken the code

45
00:02:34,810 --> 00:02:35,430
again.

46
00:02:35,500 --> 00:02:41,210
The three possible clues are no close match and you can get multiple clues based off your numbers position.

47
00:02:41,210 --> 00:02:42,010
Thanks everyone.

48
00:02:42,050 --> 00:02:46,250
If you have any questions of this feel free to post the Kewney forums and I'll see at the next lecture

49
00:02:46,370 --> 00:02:48,530
relict through an example solution.
