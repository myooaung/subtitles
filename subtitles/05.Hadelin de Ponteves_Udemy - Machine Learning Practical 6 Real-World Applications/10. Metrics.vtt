WEBVTT

00:06.330 --> 00:11.090
Use the Confucian metrics to see our model is performing.

00:11.290 --> 00:17.410
Suppose that we kept three labels that were trying to predict where and to see if in our picture we've

00:17.410 --> 00:25.210
come a dog a cat or a bear the Confucian metrics would tell us how many dogs we actually predict at

00:25.210 --> 00:30.720
work dogs how many dogs we predict at work outs and so on.

00:31.030 --> 00:36.160
In this example we can see that we didn't got any bears labeled correctly.

00:36.460 --> 00:44.710
We predict all of them ascots if we only measure the percentage of predictions we got correctly we would

00:44.710 --> 00:49.540
never be able to see this in our case.

00:49.590 --> 00:57.120
We want to know how many fraudulent transactions we did that correctly if we only measure the percentage

00:57.450 --> 01:06.370
of their correct labels will get a really high value as most of our transactions are known for Otherland.

01:06.630 --> 01:13.960
And if our model always predicts non fraudulent we will just get the majority of them right.

01:14.010 --> 01:17.740
We're going to try to see how many positives we show up.

01:17.940 --> 01:19.030
That is how many.

01:19.030 --> 01:22.900
For Underland transactions with birthdate as fraudulent.

01:22.980 --> 01:25.800
Also we will measure how many Tournay or tips come.

01:26.220 --> 01:28.750
That's how many none fraudulent on suctions.

01:28.760 --> 01:31.370
We predict that US non fraudulent.

01:31.620 --> 01:34.080
How many false positives that is.

01:34.080 --> 01:39.300
How many fraudulent transactions with the fact that none fraudulent.

01:39.330 --> 01:43.060
These are the users that will be able to steal from us.

01:43.080 --> 01:46.270
Those are the ones that we won't be able to detect.

01:46.470 --> 01:51.740
And that's the number that we will want to be as low as possible on full blast.

01:51.750 --> 01:58.740
Also how many false positives will cup that's how many we predicted as fraudulence although there were

01:58.860 --> 02:05.620
good users those will for sure be unsatisfied users as they were willing to pay.

02:05.640 --> 02:10.640
But we didn't allow them in any given problem.

02:10.650 --> 02:19.550
Our objective we tried to get as many true negatives and prostitutes as possible and also to judge use

02:19.620 --> 02:26.820
as much as possible the number of false negatives and false positives that we up in this application.

02:26.820 --> 02:33.510
We will prefer to increase the number of false positives as long as we decrease the number of false

02:33.540 --> 02:34.540
negatives.

02:34.740 --> 02:37.920
This might be different in other applications.

02:39.040 --> 02:46.200
Besides the Confucian metrics we can use other metrics to try to measure the behavior of our model.

02:46.270 --> 02:48.190
We just see a few of them.

02:49.300 --> 02:52.630
The most frequent metric is their accuracy.

02:52.630 --> 02:54.430
That's why need to be positive.

02:54.420 --> 03:02.010
Plus two negatives over the total of transactions you Cup another metric is that precision.

03:02.170 --> 03:08.610
That's how many Chavasse dips over the total of two positives plus false negatives you have.

03:08.980 --> 03:13.870
You could also measure the specificity of your model.

03:13.930 --> 03:19.580
That's how many true negatives over the total of false positives plus true negatives.

03:19.720 --> 03:24.700
You have in your model for less you could also measure the recall.

03:24.730 --> 03:31.660
That's how many true positives or where the total of true positives plus false negatives that you have.

03:32.170 --> 03:38.890
That would mean the amount of fraudulent transactions that we could go that that as fraudulent and we'll

03:38.980 --> 03:42.190
try to increase that number as much as possible.

03:42.460 --> 03:48.070
So one training we will try to increase our vehicle as much as our US.

03:48.130 --> 03:51.100
That would mean that our model is performing well.
