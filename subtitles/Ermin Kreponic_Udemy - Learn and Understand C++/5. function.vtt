WEBVTT

00:00.180 --> 00:06.540
Bienvenido de nuevo o hoy vamos a echarle un vistazo a un tipo de función bastante nuevo.

00:06.540 --> 00:15.540
Así que este es el tipo relativamente complejo y sirve como un contenedor para funciones como un marcador de posición.

00:16.170 --> 00:20.360
Puede almacenar una función dentro de ella y luego puede llamarla más tarde.

00:20.400 --> 00:25.060
También es muy nuevo en C ++ 11.

00:25.380 --> 00:29.730
Así que estas dos funciones pueden probarse debajo de prueba.

00:29.740 --> 00:31.980
Diversión uno simplemente divertido también.

00:32.040 --> 00:38.950
No son tan importantes ahora debido al hecho de que los hemos visto antes.

00:38.950 --> 00:40.510
No hacen nada extraño.

00:40.510 --> 00:41.940
No hacen nada nuevo.

00:42.100 --> 00:46.540
Ya los he explicado y son bastante simples, pero echen un vistazo a

00:46.540 --> 00:49.450
esta primera función aquí que he creado llamada calcular.

00:49.570 --> 00:59.840
Ahora toma una función de tipo de tipo de SDD y tiene el valor de retorno especificado aquí que es doble.

00:59.980 --> 01:04.000
Y luego tiene un parámetro que recibe que también es doble.

01:04.270 --> 01:12.940
Y, básicamente, eso es f, la f es la F es la variable de tipo función con un pájaro así.

01:13.390 --> 01:20.830
Entonces, esta función calcula que en realidad recibe una función como parámetro y recibe un

01:20.830 --> 01:22.040
doble como parámetro.

01:22.060 --> 01:27.520
Sé que debe parecer muy extraño y bastante nuevo, debo decir, pero déjame seguir adelante y

01:27.520 --> 01:30.260
darte la sintaxis general tal vez te ayude.

01:30.430 --> 01:35.420
Entonces, lo primero que debe hacer es, por supuesto, declarar un tipo.

01:35.560 --> 01:42.400
Este es el tipo y luego debe especificar el tipo de devolución.

01:42.400 --> 01:49.380
Entonces, ¿qué tipo de tipo devuelve la función return type?

01:50.200 --> 01:52.920
Y el siguiente paso tenemos podemos enumerar los parámetros aquí.

01:52.930 --> 02:01.180
Entonces tipo de columna y puede tener más de un parámetro.

02:01.190 --> 02:05.740
Es decir, puede tener casi tantas como quiera que no es realmente importante.

02:06.290 --> 02:08.590
Y luego tienes y luego va así.

02:08.720 --> 02:11.280
Muy divertido aquí.

02:13.000 --> 02:18.190
Erica esta diversión podría tener esto podría haber sido como aquí.

02:18.190 --> 02:20.680
Esto es completamente arbitrario.

02:20.680 --> 02:26.390
Depende de usted, pero esta es la sintaxis general de cómo se ve en realidad.

02:26.510 --> 02:32.290
Déjame mostrarte la sintaxis general de una función que se almacenaría en la variable

02:32.350 --> 02:33.530
de este tipo.

02:33.550 --> 02:40.420
Así que sigamos y digamos que tenemos algún tipo de función en mi diversión, esto es todo el pseudo código que

02:40.420 --> 02:46.350
estoy escribiendo ahora en comparación con el código que usted vio en la pantalla cuando comenzó el tutorial.

02:46.360 --> 02:57.040
Entonces, si escribo si creo alguna función en mi diversión y digamos que es opps el doble, recibe un

02:57.040 --> 03:03.160
tipo de parámetro doble y hace algo aquí, no es importante.

03:03.160 --> 03:04.010
Vuelve.

03:04.030 --> 03:06.620
En general, devuelve un tipo de.

03:06.970 --> 03:08.320
Devuelve un entero.

03:08.410 --> 03:14.980
Entonces, esta función devolverá algún tipo de entero después de recibir un doble como parámetro.

03:14.980 --> 03:18.500
Ahora podemos colocar esta función de

03:21.190 --> 03:25.050
esta manera nuevamente declarando un tipo y.

03:25.380 --> 03:31.490
Ahora, ¿qué tenemos que especificar aquí si queremos colocar esta función en un titular?

03:31.600 --> 03:32.910
Dice el tipo de devolución.

03:32.990 --> 03:37.790
OK, ¿cuál es el tipo de retorno de esta función y todo tipo de fin?

03:39.460 --> 03:43.350
Y cuáles son los parámetros que tomará la función.

03:43.360 --> 03:53.340
Bueno, es solo que es uno, así que solo podemos escribir el doble, así que solo recibe un parámetro del tipo double.

03:54.520 --> 03:59.980
Y vamos a cerrar esto y vamos a nombrarlo si pudiéramos, es arbitrario, ya que dije que depende

03:59.980 --> 04:01.480
de usted cómo quiera nombrarlo.

04:01.570 --> 04:04.840
Y luego decimos igual, así que le estamos asignando un valor.

04:04.840 --> 04:05.780
Por asi decirlo.

04:06.070 --> 04:09.130
Y luego tomamos el nombre de esta función.

04:09.130 --> 04:13.390
Entonces mi diversión o mi de mi diversión.

04:13.580 --> 04:15.550
Pero, de nuevo, puedes ponerle el nombre como quieras.

04:15.570 --> 04:20.670
Aquí está mi diversión, todo lo que sea, bla, bla, bla, excepto que realmente no importa.

04:20.670 --> 04:21.980
Y eso es.

04:22.000 --> 04:31.960
Y ahora esta f contiene la función de mi diversión que se puede llamar más tarde a nuestra conveniencia.

04:31.960 --> 04:41.520
Ahora, si tuviera más de uno, puede tener más de uno, puede tener el

04:42.530 --> 04:43.040
doble

04:46.520 --> 04:50.620
de doble, etc. pero tendría que ser así.

04:50.660 --> 04:52.220
X por ejemplo.

04:52.220 --> 04:57.920
Entonces, si esta función recibe dos parámetros, entonces usted simplemente listará los dos parámetros aquí.

04:57.980 --> 04:59.350
No.

04:59.360 --> 05:00.390
No es gran cosa.

05:00.410 --> 05:07.220
Realmente es bastante simple que solo enumeres los parámetros allí y va a funcionar.

05:07.220 --> 05:10.270
Así que sigamos y eliminemos este pseudo código de aquí.

05:10.280 --> 05:11.420
Espero que entiendas ahora.

05:11.420 --> 05:17.420
Entonces declaras un tipo al que le das un tipo de retorno de la función que vas a almacenar

05:17.420 --> 05:23.240
en esta variable y especificas los parámetros que se deben pasar a una función que se almacenará de nuevo

05:23.300 --> 05:24.110
en esta variable.

05:24.110 --> 05:29.030
Y luego solo declaras igual y el nombre de la función.

05:29.030 --> 05:32.060
Entonces esta función acepta un doble y ese entero.

05:32.060 --> 05:39.050
Entonces ves que es un doble y un entero y luego devuelve un número entero.

05:39.320 --> 05:41.370
OK, así que con suerte eso está claro.

05:41.380 --> 05:47.260
Avancemos y eliminemos esto y bajemos al código.

05:47.680 --> 05:53.630
Entonces, estos son estos son prototipos de las tres funciones.

05:53.860 --> 05:58.580
Y abajo, hemos creado cuerpos para las funciones.

05:58.720 --> 06:04.930
Así que calcule lo que calcula bien calcule simplemente devuelve el cubo de lo que sea

06:05.350 --> 06:07.110
que se le pase.

06:07.120 --> 06:11.520
Así que mira tu persona puede funcionar aquí.

06:11.740 --> 06:15.170
Toma un parámetro ya que su parámetro es una función.

06:15.370 --> 06:21.660
Entonces recibe una función y esa función tiene algún tipo de valor de retorno de tarifa.

06:22.090 --> 06:25.140
Pero el valor de retorno es doble.

06:25.160 --> 06:27.300
Pero también recibe un parámetro.

06:27.350 --> 06:33.650
Entonces también pasa otro parámetro a esta función calcular que a su vez se usa como parámetro

06:33.650 --> 06:35.350
en esta función aquí.

06:35.840 --> 06:36.530
DE ACUERDO.

06:36.530 --> 06:40.730
Así que hagámoslo una vez más.

06:40.940 --> 06:43.620
Hay un poco de vueltas en círculos aquí.

06:43.670 --> 06:48.940
Entonces es por eso que puede parecer un poco complicado.

06:48.970 --> 06:53.130
De todos modos, tienes una función calcular que toma dos parámetros.

06:53.180 --> 06:55.580
Entonces el primer parámetro es una función.

06:55.790 --> 06:59.130
Y el segundo parámetro es un doble.

06:59.150 --> 07:02.710
Hay alguna variable x.

07:03.290 --> 07:12.410
Ahora esta función que se recibe aquí como un parámetro también recibe a también recibe un parámetro y estableceremos

07:12.590 --> 07:18.470
que ese parámetro es realmente X que hemos pasado a la primera función.

07:18.470 --> 07:26.240
Calcule aquí que X se tomará y se evaluará en esta función en la función que está contenida

07:26.240 --> 07:34.130
dentro de esta variable, que la función hará algo con ella y luego tendrá un valor de retorno

07:34.130 --> 07:37.720
y luego ese valor de retorno será Q. De acuerdo, espero que lo hayas entendido si no lo hiciste.

07:38.550 --> 07:42.550
Entiendo completamente.

07:42.560 --> 07:44.070
No te preocupes por eso

07:44.080 --> 07:45.100
Solo haz una pregunta en la sección de preguntas y respuestas.

07:45.100 --> 07:48.640
Estaremos encantados de ayudarte de la forma que podamos.

07:48.770 --> 07:51.700
Eso es realmente lo mejor que puedo hacer porque

07:52.700 --> 07:57.590
estas cosas no están allí, no diría que son extremadamente complejas o difíciles de entender.

07:57.590 --> 07:59.540
Simplemente te lleva un tiempo

07:59.630 --> 08:04.460
entender realmente qué es lo que está sucediendo porque tienes muchos giros en círculos.

08:04.460 --> 08:06.130
DE ACUERDO.

08:07.810 --> 08:08.140
Entonces ese valor se pone en cubos y luego ese cubo se devuelve como un valor.

08:08.150 --> 08:14.010
Entonces es doble y abajo.

08:14.030 --> 08:16.460
Tengo otras dos funciones que simplemente vuelven al cuadrado.

08:16.460 --> 08:19.570
Y aquí tienes una expresión compleja donde sucede algo.

08:19.610 --> 08:24.920
Ahora estas dos funciones que he necesitado porque voy a pasar estas

08:24.920 --> 08:31.700
dos funciones a esta primera función para calcular y los valores de retorno estarán en cubos.

08:31.950 --> 08:36.300
Bien, echemos un vistazo a lo principal. Dice aquí.

08:37.160 --> 08:41.480
Una suma doble muy variable del tipo

08:41.520 --> 08:50.360
double es igual a devout al valor de retorno de la función calcular.

08:50.370 --> 08:51.410
Ahora mira lo que hice aquí.

08:51.420 --> 08:52.510
Aprobé una prueba funcional de prueba funcional y pasé un valor y luego nuevamente pasé la prueba.

08:52.530 --> 09:01.080
Diversión para como.

09:01.080 --> 09:02.290
Como un parámetro.

09:02.390 --> 09:03.600
Y luego volví a pasar el valor.

09:03.630 --> 09:05.390
Es bastante simple, incluso puede compilarlo rápidamente para que sepas que se ejecuta.

09:05.430 --> 09:09.900
No creé ninguna impresión aquí que sea realmente inútil porque

09:09.930 --> 09:16.260
solo obtendrás valores en cubos y algunos cálculos que no son tan relevantes.

09:16.260 --> 09:19.350
Solo quería mostrarte cómo se ve el código en este momento.

09:19.350 --> 09:23.940
También hay otra cosa que puedes hacer con estas funciones.

09:23.940 --> 09:29.230
Y solo quería tirarlo para ti.

09:29.280 --> 09:31.470
Solo quería mostrártelo.

09:31.470 --> 09:34.420
Aparte de eso, no es tan relevante para ti en este momento.

09:34.530 --> 09:39.770
Realmente no es realmente.

09:39.780 --> 09:42.540
Créame.

09:42.540 --> 09:43.320
Así que solo quiero arrojarlo allí para que veas que es posible.

09:43.650 --> 09:48.000
Nada más.

09:48.030 --> 09:49.860
Esta línea aquí si parece algo que no entiendes.

09:49.860 --> 09:53.660
Bueno, está en lo cierto, también puede

09:53.730 --> 10:05.450
pasar una función lambda que es nueva en C ++ 11 a la función escribir una variable de tipo función.

10:05.710 --> 10:08.260
Entonces F también puede contener una función lambda dentro de ella.

10:08.450 --> 10:15.040
Sé que suena extraño, pero así son las cosas.

10:15.140 --> 10:18.590
Mira, tienes una función de tierra.

10:18.650 --> 10:20.660
Así es como se declaran y leen.

10:20.660 --> 10:23.630
Te he explicado que en los tutoriales anteriores tú.

10:23.630 --> 10:26.610
Recibe dos parámetros.

10:26.630 --> 10:28.700
Uno es a y el otro es de

10:28.700 --> 10:38.390
tipo int también así que a y b recibe dos enteros y luego esta es solo la sintaxis de esta flecha y el resto de las cosas y un final es un valor de retorno especificado.

10:38.390 --> 10:45.920
Por lo tanto, devuelve un número entero.

10:45.920 --> 10:48.130
Y aquí tienes básicamente el cuerpo en términos de lo que hace, devuelve un tiempo b.

10:48.410 --> 10:54.970
Simplemente multiplica los dos números eso es todo.

10:55.190 --> 10:57.130
Devuelve el producto de los dos números.

10:57.170 --> 10:59.330
Eso es todo al respecto.

10:59.450 --> 11:01.270
Entonces esta parte es una función.

11:03.930 --> 11:05.590
Esta es la función lambda y esta parte es solo algo de lo que hemos hablado.

11:05.610 --> 11:10.650
Ahora el tipo de la variable de tipo funciona cómo se declara.

11:10.650 --> 11:16.750
Pero eche un vistazo a esto.

11:16.800 --> 11:17.890
Echa un vistazo a las cosas que coinciden.

11:17.940 --> 11:20.970
Así que hemos especificado el valor de

11:20.970 --> 11:27.390
retorno aquí que es y el valor de retorno aquí se especifica, así como un final.

11:27.390 --> 11:28.820
Toma dos parámetros tan int int y esta función toma dos parámetros.

11:28.890 --> 11:34.910
Int y por lo tanto, estas cosas sí tienen que coincidir.

11:34.920 --> 11:40.070
Y luego la variable f puede ser.

11:40.520 --> 11:44.450
Puede contener esta función para que pueda ser llamada más adelante y mirar hacia abajo.

11:44.480 --> 11:49.780
Lo hemos usado, dice, y cualquiera que sea el nombre

11:49.790 --> 11:58.310
de la variable arbitraria es igual a F y luego he pasado dos o dos números.

11:58.310 --> 12:02.000
Básicamente son 10 y 20.

12:02.000 --> 12:03.630
Y esto va a funcionar debería ser 10 y 20 y va a ser 10 por 20, que será 200.

12:03.650 --> 12:10.430
De hecho, permítanme seguir adelante y hacer una única impresión para que realmente me crean

12:10.430 --> 12:16.250
que es así, para que no solo me acepten por mi palabra.

12:16.970 --> 12:21.950
Bueno, así como las tasas serán suficientes,

12:23.540 --> 12:26.460
su ego dice 200.

12:30.900 --> 12:33.660
Así que de hecho se multiplicó

12:33.680 --> 12:38.460
10 y 20 y obtuvimos este valor de todos modos.

12:41.170 --> 12:41.870
Voy y te digo adiós aquí.

12:43.540 --> 12:46.420
Para este capítulo vamos a seguir adelante

12:46.810 --> 12:53.590
y pasar a las clases y C ++ y las clases es básicamente un concepto general

12:53.590 --> 13:01.690
que está ligado a casi todo el camino a una buena cantidad de lenguajes de programación, diría yo.

13:01.690 --> 13:03.270
Por lo tanto, es

13:03.400 --> 13:09.250
un conocimiento general que podrá reutilizar más tarde con otros lenguajes de programación también.

13:09.730 --> 13:11.260
Espero que hayas entendido esto si no lo hiciste.

13:11.260 --> 13:14.430
Nuevamente te pregunto.

13:14.440 --> 13:15.630
Continúa e ingresa a la sección de preguntas.

13:15.640 --> 13:17.620
Hay personas en la sección de preguntas.

13:17.620 --> 13:19.770
¿Por qué pagar quién está ahí para ayudarte?

13:19.780 --> 13:22.860
Y sí monitorean la sección Q y A y tratan de ayudarlo de la mejor manera posible.

13:22.870 --> 13:29.310
De todos modos, te despido y mucha suerte.

13:29.390 --> 13:32.070
&nbsp;
