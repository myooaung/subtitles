WEBVTT

00:00.190 --> 00:07.590
Te damos la bienvenida de vuelta y comenzaremos el Capítulo 15 que tratará sobre las ampollas.

00:07.770 --> 00:14.900
Ahora, este capítulo trata principalmente de almacenar datos en el disco duro.

00:15.000 --> 00:22.710
Entonces, solo hablaremos de escribir los datos en el disco para poder manipular los archivos, es necesario incluir

00:22.710 --> 00:26.720
la biblioteca de flujo F en lo que sea posible.

00:26.760 --> 00:30.730
Es el que realmente puedes ver en mi pantalla aquí.

00:31.030 --> 00:38.990
La secuencia de F dice incluir y luego transmitir la biblioteca tiene dos clases.

00:39.010 --> 00:47.860
Tiene una secuencia para leer datos de un archivo y en sentido ascendente para escribir datos en un archivo si stream significa flujo de archivos de

00:47.920 --> 00:55.670
entrada y upstream significa flujo de archivos de salida y Mr. Tauriel hablaremos de lo de

00:55.670 --> 00:57.440
más tarde.

00:57.830 --> 01:01.730
Porque estamos tratando principalmente con el almacenamiento de datos en un disco duro.

01:01.980 --> 01:07.400
De todos modos, la sintaxis general general sería así, así lo habría hecho.

01:07.400 --> 01:08.440
Por supuesto que lo necesitamos.

01:08.450 --> 01:24.640
Necesitamos sacarlo del CD y O. F. transmitir y luego va a ser archivo y luego nosotros al archivo.

01:24.650 --> 01:28.260
Ahora este año es arbitrario.

01:28.510 --> 01:37.470
El descriptor de archivo por lo que básicamente puede 10 b f estar a la la la excepción, excepto por la ruta del

01:37.470 --> 01:37.900
archivo.

01:37.910 --> 01:43.640
Debe especificar dónde está donde realmente estará el archivo.

01:43.710 --> 01:50.180
Al igual que con C out, realizaremos operaciones similares con archivos, por ejemplo, para escribir en un archivo.

01:50.190 --> 01:53.050
Simplemente harías lo siguiente.

01:53.100 --> 01:58.650
Cambiemos el nombre de Thrall a F por algo más sensato.

01:58.980 --> 02:00.870
Y luego para enviar a un archivo, lo haría.

02:00.870 --> 02:09.720
Básicamente, esto no es algo que básicamente es algo que se colocará en un archivo.

02:10.060 --> 02:12.450
OK, continuemos y eliminemos esto.

02:12.450 --> 02:15.450
Esta es solo la sintaxis general de las cosas, el pseudo código.

02:15.450 --> 02:17.060
Si te gusta.

02:17.610 --> 02:22.410
Si sigues adelante, haz un poco más bonito con la entrada que con.

02:22.410 --> 02:27.020
Al eliminar las líneas vacías y saltar al código.

02:27.260 --> 02:29.160
Así que tengo el código escrito aquí.

02:29.190 --> 02:30.560
No es terriblemente solo.

02:30.630 --> 02:36.480
Aquí hay mucho trabajo repetitivo, así que pensé que no te arrastraría a reescribir el código dos veces

02:36.820 --> 02:38.780
o algo si ya lo hicimos.

02:38.790 --> 02:45.650
Recuerde cadena de antes que solo estamos declarando una variable variable de cadena de tipo String y estamos

02:45.650 --> 02:51.600
pidiendo al usuario que ingrese texto y luego vamos a seleccionar ese texto para obtener

02:51.600 --> 02:53.980
línea y colocarlo en la cadena.

02:54.000 --> 02:55.130
S está abierto.

02:55.170 --> 02:56.280
Esto es viejo.

02:56.310 --> 03:00.560
Esto es una noticia muy antigua de mucho antes.

03:00.600 --> 03:09.530
Ahora vamos a ingresar un número y tenemos un final y voy a ingresar aquí y aparte al

03:09.780 --> 03:11.220
hacer todo eso.

03:11.470 --> 03:17.460
Básicamente vamos a crear un archivo para que llame a un árbol de archivos de salida de salida ascendente y

03:17.460 --> 03:21.990
llame a SDD y va a ser F y, si lo hace, simplemente haga esto.

03:21.990 --> 03:28.650
Si solo ingresa la prueba Datti XTi, el archivo se creará en la carpeta del proyecto

03:28.890 --> 03:34.780
actual en la carpeta actual del proyecto, de modo que solo indique dos archivos.

03:36.050 --> 03:37.990
OK, entonces mi corriente sí.

03:38.000 --> 03:39.740
Lamento que diga capítulo por un ciclo.

03:39.740 --> 03:46.070
No cambié el nombre pero, como pueden ver aquí, tengo los archivos básicos de clases de clases cuando API.

03:46.280 --> 03:52.820
Así que este es el archivo del proyecto actual y si ingresas a la carpeta verás exactamente lo

03:52.820 --> 03:53.900
mismo que yo.

03:53.900 --> 03:56.770
Depende si lo has compilado antes o no.

03:56.960 --> 04:04.000
Realmente no importa lo que importa es que la prueba de que DXi no existe aquí en absoluto.

04:04.100 --> 04:09.260
También es posible que se cree, pero también es posible especificar una ruta diferente.

04:09.950 --> 04:15.160
Entonces no sé que puedes hacer esto.

04:15.160 --> 04:29.210
Básicamente, vea la barra diagonal inversa y alguna barra diagonal inversa y luego especificará la ruta absoluta en la que desea que

04:29.310 --> 04:34.520
se cree este archivo en el sistema dado.

04:36.380 --> 04:40.540
De acuerdo, continuemos y eliminemos eso porque realmente no necesitamos absoluto absoluto o simplemente

04:40.600 --> 04:42.200
nos crean en la carpeta actual.

04:42.880 --> 04:46.650
Y esto es algo que se ha usado ampliamente en el Clogher.

04:46.690 --> 04:52.030
La salida al archivo porque las llaves estaban siendo agarradas del teclado y luego estaban.

04:52.150 --> 04:58.420
Y luego sus valores se enviaban a un archivo y luego se almacenaba en una ubicación

04:58.420 --> 05:00.190
particular del disco duro.

05:00.190 --> 05:03.630
Por lo tanto, la ruta absoluta fue realmente proporcionada.

05:03.640 --> 05:05.100
Pero esto es realmente arbitrario.

05:05.110 --> 05:08.230
Depende de usted dónde desea guardar el archivo.

05:08.230 --> 05:14.730
Ahora esto va a esta acción aquí va a abrir el archivo y puede abrir el archivo para escribir.

05:14.740 --> 05:16.930
No importa si el archivo existe o no.

05:16.930 --> 05:22.610
Si el archivo no existe, se creará el archivo y, por lo tanto, podrá escribir en

05:22.630 --> 05:23.170
él.

05:23.350 --> 05:34.190
Ahora acabo de crear un bucle for que arrojará la cadena y las horas en el archivo de prueba

05:34.200 --> 05:35.040
Dotty XTi.

05:35.080 --> 05:37.380
Este es el número entero para escribir el tiempo.

05:37.380 --> 05:45.060
Primero escribo una cadena y luego esa cadena se va a insertar en esta finalización del archivo, así que puedo decir insertar la misma

05:45.070 --> 05:51.670
cadena 10 veces, insertar la misma cadena 5 veces, etc. y luego debajo de F

05:51.770 --> 05:53.030
tan cerca.

05:53.050 --> 05:57.860
Una vez que haya terminado con el uso del archivo, siempre debe cerrarlo.

05:57.880 --> 06:02.680
No necesariamente tiene que significar que no va a obtener un error ni nada de eso, pero confíe en mí

06:02.680 --> 06:03.450
en este caso.

06:03.460 --> 06:04.890
Solo ciérralo.

06:04.930 --> 06:06.210
No es tan difícil.

06:06.250 --> 06:13.270
Solo tiene que escribir f close o cualquier otro nombre que haya usado aquí y

06:13.270 --> 06:13.960
se acercará.

06:13.990 --> 06:16.680
Esto es muy importante para ti

06:16.910 --> 06:18.150
Confía en mí en eso.

06:18.500 --> 06:21.310
OK, sigamos adelante y ejecutemos este programa.

06:21.420 --> 06:22.880
Ok solo una cosa más que no mencioné.

06:22.880 --> 06:27.920
Quiero decir que he incluido cadena, pero eso también se explicó anteriormente.

06:27.920 --> 06:29.170
En caso de que te lo hayas perdido

06:29.420 --> 06:32.490
Así que sigamos construyendo y corriendo.

06:32.740 --> 06:33.220
Y ahí tienes.

06:33.220 --> 06:35.910
Ingrese un texto, algunos

06:39.520 --> 06:43.530
son bla, bla, bla, bla,

06:46.100 --> 06:46.940
entrar.

06:47.130 --> 06:51.320
Y me gustaría que esta cadena se inserte en el archivo.

06:51.420 --> 06:58.090
Setecientos setenta y ocho veces completamente al azar.

06:58.260 --> 06:59.520
Y eso es.

06:59.520 --> 07:01.090
No ha pasado mucho en la pantalla.

07:01.190 --> 07:02.750
Presionamos enter y salimos.

07:02.790 --> 07:03.530
Vas a.

07:03.540 --> 07:06.720
Puede abrir su carpeta de proyectos y listo.

07:06.720 --> 07:13.800
Efectivamente hay un documento de texto si lo abre, verá que en realidad se insertó

07:14.250 --> 07:16.440
778 veces hasta el final.

07:16.440 --> 07:20.020
Mira cuántos de ellos podría haber insertado tres veces.

07:20.150 --> 07:23.030
O algo así, pero en realidad no importa.

07:23.050 --> 07:23.820
Entiendes la idea.

07:23.820 --> 07:29.300
El archivo fue creado a pesar de que en realidad no estaba allí.

07:31.620 --> 07:39.080
De acuerdo, creo que tenemos tiempo para seguir con Tauriel porque tengo un gran cronómetro a mi

07:39.230 --> 07:46.510
derecha que estoy mirando frenéticamente con la esperanza de no romper la marca de los 20 minutos.

07:47.300 --> 07:53.390
Lo que básicamente significa que no puedo subir el video porque hay una limitación de tiempo limitada.

07:53.400 --> 07:58.090
De todos modos, sigamos y veamos algunas otras cosas también.

07:58.130 --> 08:09.230
Entonces objetos de tipo O. F. fluye aquí como objetos de tipo O. F. stream tiene un operador de

08:09.230 --> 08:12.640
conversión en bool que indica si es correcto.

08:12.680 --> 08:20.360
Si está en un estado correcto, entonces lo que podemos hacer aquí, sé que suena un poco complicado, pero no lo

08:20.360 --> 08:20.660
es.

08:20.660 --> 08:27.740
Créeme, es básicamente para verificar algo, así que básicamente podemos escribir una declaración IF con esto para

08:28.220 --> 08:30.510
verificar el estado del objeto.

08:30.530 --> 08:37.010
Por ejemplo, déjame seguir adelante y eliminar esta parte aquí por completo.

08:38.570 --> 08:45.580
Bueno, voy a eliminar esta parte y borraré esta parte.

08:47.540 --> 08:50.930
Y simplemente no lo haces, pero te ves mejor.

08:53.570 --> 08:58.730
De todos modos, así que tienes este este archivo existe.

08:58.740 --> 08:59.830
DE ACUERDO.

09:00.000 --> 09:03.840
Existe ahora pero no existía antes de que realmente lo creáramos.

09:03.840 --> 09:15.490
Sin embargo, si escribo este archivo, no sé el archivo aleatorio.

09:15.720 --> 09:17.260
Entonces este archivo no existe en realidad.

09:17.310 --> 09:22.300
El archivo aleatorio no existe realmente en esta carpeta, ya que puede ver que existe la prueba.

09:22.320 --> 09:26.020
La prueba fue creada por palabra aleatoria archivo no existe.

09:26.430 --> 09:30.740
Y si lo dejamos como está, será creado por.

09:30.810 --> 09:34.860
Quiero decir que si le das salida a algo o haces algo con él, no importa si existe o no.

09:34.860 --> 09:36.510
Será creado.

09:36.600 --> 09:42.180
Pero si desea verificar el estado, ya sea que realmente exista o no, simplemente escriba

09:43.140 --> 09:45.590
"si" y luego escriba "F" aquí.

09:47.950 --> 09:52.290
Y B como un C D C.

09:56.600 --> 09:58.340
Por eso no lo sé.

09:58.380 --> 10:04.030
Veamos que el archivo no.

10:04.090 --> 10:07.840
Es solo un archivo no existe.

10:07.870 --> 10:21.280
O bien, no tiene permiso para escribir, por lo que no existe o no tiene permiso para

10:21.280 --> 10:24.030
escribir en él.

10:24.040 --> 10:25.600
Esto es un poco

10:29.110 --> 10:29.760
extraño Komisarek.

10:29.770 --> 10:35.500
También puede hacer esto para que pueda poner varias líneas como esta.

10:35.500 --> 10:40.980
Entonces el archivo no existe o no tiene permiso para escribir en él.

10:41.250 --> 10:48.900
Ahora bien, si esto devuelve falso, no necesariamente significa que el archivo no existe, significa que el programa no puede acceder a

10:48.920 --> 10:54.320
él y, por cualquier razón, no puede acceder a él para que no exista o

10:54.320 --> 10:57.280
no tenga permiso para realmente acceder a ella.

10:57.530 --> 11:04.490
Y podemos seguir adelante y construir y ejecutar, por supuesto.

11:08.370 --> 11:12.140
Construir y correr

11:12.330 --> 11:14.570
No me imprimí en la pantalla.

11:15.620 --> 11:17.160
Eso es realmente creado.

11:17.330 --> 11:19.300
Lo creó.

11:20.180 --> 11:26.200
Bueno, esta parte en realidad lo creó, así que no hay manera de comprobarlo aquí.

11:26.240 --> 11:30.350
Pero existe un modo al abrir un archivo.

11:30.350 --> 11:37.070
El valor predeterminado es crear o sobrescribir, lo que significa que si el archivo no existe, intente crearlo

11:37.070 --> 11:39.680
y, por lo tanto, realmente se crea.

11:39.920 --> 11:42.340
Y si existe, sobrescríbalo.

11:42.350 --> 11:45.330
Lo que significa que esto siempre regresará.

11:45.330 --> 11:54.580
Esto significará que este caso nunca sucederá a menos que revoque los modos de permisos en básicamente el espacio de nombres

11:54.670 --> 12:04.510
I O S, que es un espacio de nombres secundario del espacio de nombres SDD y, por lo tanto, están ubicados en S.

12:04.780 --> 12:06.030
Está escrito así.

12:06.040 --> 12:10.620
C A C el colon colon IO s.

12:10.900 --> 12:16.690
Y luego tú y luego comienzas a acceder a ellos.

12:16.880 --> 12:19.050
Otra es otros dos puntos y comas aquí.

12:19.090 --> 12:26.500
Entonces, si queremos agregar al final del archivo y no sobreescribir el archivo existente, abrimos el archivo

12:26.590 --> 12:29.010
en el modo de agregar.

12:29.320 --> 12:31.300
Entonces hay un archivo aleatorio aquí.

12:31.320 --> 12:32.530
Está bien.

12:32.590 --> 12:42.610
Y si pongo un coma y peleo SDD abierto, dos puntos colon I O S dos puntos KPP significa abierto para agregar

12:42.730 --> 12:48.520
solo agrega al contenido actual del archivo, no sobrescribe el contenido existente.

12:48.520 --> 12:51.360
Hay varios otros modos que no usaremos.

12:51.370 --> 12:53.200
Pero sigamos y solo les menciono.

12:53.350 --> 13:01.070
Tiene un binario de tronco de salida de entrada de lápiz, etc. Puedes buscar esto en la red.

13:01.080 --> 13:02.410
Existe una documentación completa para el espacio de nombres secundario Iowa s of s d.

13:02.410 --> 13:09.420
De todos modos, sigamos adelante y esto es justo.

13:09.550 --> 13:12.910
Esto solo quiere agregar un archivo para escribir, así que demos una oportunidad como esta.

13:12.910 --> 13:19.250
Y crea y ejecuta OK.

13:21.900 --> 13:25.220
Así que hemos creado con éxito un tercer archivo.

13:25.540 --> 13:29.430
Entonces ves uno dos tres.

13:29.920 --> 13:31.570
OK me permite ver si puedo cambiar los permisos aquí.

13:31.630 --> 13:34.830
La seguridad de propiedades clave

13:36.870 --> 13:39.760
podría cambiarse a permisos.

13:42.380 --> 13:48.250
Edición rapida.

13:48.260 --> 13:49.210
OK, este chico

13:49.240 --> 13:49.650
niega todo.

13:52.770 --> 13:57.710
OK veamos si esto va a funcionar.

13:58.250 --> 14:00.970
Aplicar permisos de denegación de sesión y

14:01.330 --> 14:08.490
denegar la precedencia sin restricciones sobre la entrada de permitir esto significa que para los usuarios y miembros.

14:08.500 --> 14:10.050
Sí.

14:10.160 --> 14:11.040
DE ACUERDO.

14:11.340 --> 14:12.030
Gay SPRETA Goddess es mucho más simple en la construcción de Linux y ejecuta el programa.

14:13.160 --> 14:17.990
Y ahí tienes.

14:18.010 --> 14:18.760
Es como un archivo no existe o no lo tienes escrito mal.

14:18.840 --> 14:22.710
Hay un espacio donde no tienes permiso para escribirlo básicamente.

14:22.780 --> 14:27.110
Ahora no tenemos permiso para escribir y eso es un problema.

14:27.130 --> 14:32.770
Entonces necesitas hacerlo.

14:32.770 --> 14:33.650
No puedes hacerlo

14:33.650 --> 14:34.720
No puedes simplemente escribir en un archivo.

14:34.780 --> 14:37.130
Dele un comando para escribir en un archivo y espere lo mejor de lo que va a suceder.

14:37.150 --> 14:44.260
Debe verificar realmente que puede escribir en el archivo antes de escribir en el archivo.

14:44.260 --> 14:52.510
De lo contrario, habrá problemas, tendrá errores de lógica y será una

14:52.660 --> 15:00.130
experiencia muy dolorosa para depurar y ver qué está pasando.

15:00.340 --> 15:03.420
Entonces, la moraleja de la historia es que,

15:03.830 --> 15:10.540
como dije, no se puede concluir ni deducir ni asumir que realmente se puede escribir en un archivo.

15:10.570 --> 15:11.670
Debe verificar que puede hacerlo antes del proceso de escritura real.

15:11.710 --> 15:17.520
Entonces, si esto está

15:17.530 --> 15:20.980
bien, si no,

15:25.580 --> 15:30.670
no sé si oigan.

15:33.710 --> 15:39.150
Así que adelante y estos

15:39.200 --> 15:40.760
dos Axel.

15:44.780 --> 15:48.450
Por lo tanto, ha pasado sin ningún

15:48.460 --> 15:54.390
problema y un archivo disparado al azar solo hace bloc de notas.

15:57.240 --> 15:59.490
Ahí vamos, dice "oye", pero ¿por qué hacer esto de nuevo?

15:59.580 --> 16:03.390
Y oye, uno encuentra la compilación

16:04.050 --> 16:09.740
y corre otra vez y el archivo está bien.

16:13.770 --> 16:19.790
Ahí tienes.

16:19.910 --> 16:20.360
De hecho,

16:20.360 --> 16:25.460
ha agregado que no lo ha sobrescrito realmente y dice "¡oye!" Y "¡oye!", Así que añades lo que está en el archivo.

16:25.460 --> 16:30.200
Si realmente elimino esto y lo vuelvo

16:30.200 --> 16:41.780
a establecer en el modo predeterminado, solo encuentra el tipo de manera incorrecta que está hecho.

16:45.470 --> 16:48.530
Archivo OK

16:50.600 --> 16:51.230
&nbsp;

16:54.070 --> 16:54.540
Aquí vamos.

16:54.550 --> 16:55.020
Anula todo dentro de esto.

16:55.030 --> 16:58.070
Entonces, todo lo anterior se

16:58.210 --> 17:07.180
ha ido pero siempre verifique si realmente puede acceder al archivo antes de acceder a él.

17:07.180 --> 17:09.020
En conclusión, los archivos son

17:09.040 --> 17:16.420
útiles porque podemos usarlos para almacenar el estado del programa o incluso después de que se haya ejecutado.

17:16.420 --> 17:18.040
También tenemos algunas operaciones

17:18.040 --> 17:24.970
que tenemos que realizar ciertas operaciones usando archivos, por ejemplo, almacenar archivos binarios y enviarlos por correo.

17:24.970 --> 17:29.090
Entonces, sin almacenamiento permanente, sus programas se limitan

17:29.350 --> 17:35.560
a la memoria RAM y no podrán dejar nada en el disco duro.

17:35.560 --> 17:39.860
Es por eso que necesitamos un archivo para el almacenamiento permanente y

17:39.880 --> 17:45.010
para acceder a los discos duros para acceder al almacenamiento de los discos duros Realmente.

17:45.010 --> 17:45.990
DE ACUERDO.

17:46.330 --> 17:46.850
Así que te despido aquí y espero verte en el capítulo de seguimiento.

17:46.960 --> 17:52.470
&nbsp;
