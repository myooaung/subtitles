WEBVTT

00:00.120 --> 00:01.200
Dar una buena acogida.

00:01.200 --> 00:03.800
A continuación, aprenderemos la Q.

00:03.900 --> 00:11.400
Por lo tanto, es muy similar al vector, excepto que los elementos no son continuos en la memoria, por lo que

00:11.600 --> 00:19.560
en la memoria RAM no hay uno tras otro y debido a la representación interna dequeue los organiza, ya que básicamente el

00:19.560 --> 00:22.390
profesor se organizó como una lista de listas.

00:22.410 --> 00:32.200
Así que para decir y difiere del vector en con los métodos frontales y de frente pop de Bush que agregan y quitan elementos de

00:32.200 --> 00:36.720
la parte superior y desde la parte superior de los pads.

00:36.760 --> 00:38.910
Así que vamos a echar un vistazo.

00:38.920 --> 00:43.720
De hecho, he escrito con ellos el código aquí la totalidad del código aquí y he estado

00:43.720 --> 00:48.090
cometiendo errores muy estúpidos en mis grabaciones y no pude entender de qué se trataba.

00:48.130 --> 00:54.190
Así que, básicamente, tenía un dequeue vacío explicaré cómo funcionan, excepto que se cayó.

00:54.520 --> 01:02.220
Pero he estado usando el método de retroceso y quería agregar un número entero 100 al final de la línea

01:02.340 --> 01:08.110
al final de la entrada y luego gano y luego quería imprimir en la pantalla.

01:08.400 --> 01:13.530
Pero básicamente estaba imprimiéndolo en la pantalla antes de agregarlo al final de la línea.

01:14.840 --> 01:18.990
Y continuamente seguí obteniendo cosas al azar.

01:19.190 --> 01:27.110
Creo que perdí una hora con esta Q en el estado que me gustaba cuando vi cuál era el problema para subir.

01:27.410 --> 01:28.980
Me estás tomando el pelo.

01:29.500 --> 01:36.560
Ah, pero de todos modos la razón por la que realmente he dicho esto no es para hacer una broma o

01:36.560 --> 01:44.150
para humillarme más de lo que necesito, sino que quiero expresar esto porque me digo a mí mismo que algo así probablemente te

01:44.150 --> 01:48.450
suceda a ti y Sé que muchos de mis amigos también son desarrolladores.

01:50.210 --> 01:56.870
Algunas veces, usted crea un fragmento de código y continúa y sigue ejecutándolo y algo que

01:56.870 --> 01:58.260
simplemente no funciona.

01:58.280 --> 02:04.160
Miraste el código cientos de veces y puedes descubrir cuál es el problema.

02:04.430 --> 02:09.380
El compilador no te dice que es un error de lógica, pero simplemente no puedes.

02:09.380 --> 02:10.220
No tiene que ser así.

02:10.220 --> 02:11.270
Puede ser.

02:11.270 --> 02:16.990
Puede ser algo que un compilador también puede detectar, pero en general puede solucionar el problema que está viendo

02:17.000 --> 02:19.160
en el código si realmente no comprende.

02:19.160 --> 02:24.140
Pasas horas y vas a foros y lo miras mirándolo todo.

02:24.140 --> 02:28.740
La mejor solución es solo obtener un par de ojos frescos para echarle un vistazo.

02:28.760 --> 02:32.690
Por ejemplo, la estupidez que estaba haciendo aquí porque estoy muy cansado.

02:32.690 --> 02:36.020
Llegó un amigo y ella era como qué tipo qué estás haciendo.

02:36.020 --> 02:37.970
Estás loco.

02:38.000 --> 02:44.000
Y en los primeros tres segundos, básicamente, de mirar al entrenador, ella descubrió que lo estás llamando

02:44.000 --> 02:48.680
una D y lo estás llamando antes de que estés antes del método pushback.

02:48.680 --> 02:51.980
Lo está imprimiendo en la pantalla antes del método pushback.

02:52.010 --> 02:55.820
De todos modos, la moraleja de la historia es si estás atrapado.

02:55.820 --> 02:58.070
Consigue un par de ojos frescos para echarle un vistazo.

02:58.070 --> 03:00.680
Créeme, te beneficiarás de eso.

03:00.710 --> 03:02.500
Mucho.

03:02.520 --> 03:03.730
De todos modos, repasemos esto.

03:03.950 --> 03:06.910
Entonces esto es muy similar al vector.

03:06.950 --> 03:09.290
Solo incluye la secuencia aquí.

03:09.440 --> 03:16.380
Y la sintaxis es más o menos la misma si no es la misma excepto por el nombre real.

03:16.400 --> 03:19.190
Así que hemos limpiado 1 de 10 1 a 5.

03:19.220 --> 03:25.640
Uno no tiene elementos, uno tiene tres elementos y los tres elementos se inicializan al número siete.

03:25.640 --> 03:29.380
Entonces lo mismo que en los vectores no hay diferencia allí.

03:29.390 --> 03:34.070
Esto es básicamente una impresión de los contenidos de un dequeue para.

03:34.130 --> 03:37.400
Entonces imprimirá tres sietes en la pantalla.

03:37.700 --> 03:44.150
Y este es el método preferido para referirse a los elementos de dequeue igual que para los vectores.

03:44.150 --> 03:45.630
Ya he explicado que los vectores.

03:45.640 --> 03:47.810
Es exactamente lo mismo aquí sin diferencia.

03:47.810 --> 03:53.720
Una vez más, el cheque de la bola ENP uno en ENP dos bolas.

03:54.080 --> 03:59.510
Básicamente, solo verificando si están vacíos o no uno estará vacío, el otro no estará

03:59.570 --> 04:01.530
vacío, los tres estarán vacíos.

04:01.580 --> 04:08.050
La Q2 no lo hará porque puedes ver que la Q3 está vacía, pero no tiene sierra.

04:08.050 --> 04:11.020
No definimos como un tamaño o los elementos ni nada de eso.

04:11.030 --> 04:13.550
No hemos inicializado ninguno de los elementos tampoco.

04:14.050 --> 04:19.310
Y Double-O he estado haciendo una demostración del método pushback.

04:19.310 --> 04:24.590
Entonces tienes SDD Y esto solo para formatearlo porque vas a tener tres sietes que

04:24.590 --> 04:29.620
se imprimen en la pantalla desde aquí y luego vamos a imprimir el tamaño de

04:29.660 --> 04:36.540
la secuencia de tres, luego vamos a use el método push back para agregar uno 100 en la última posición.

04:37.730 --> 04:42.710
Y luego lo haremos o lo solicitaremos por el tamaño.

04:42.710 --> 04:43.750
Una vez más.

04:43.760 --> 04:51.950
Además, imprimiremos el último y último elemento de la matriz, que también es

04:51.950 --> 04:56.110
el primero porque hemos agregado solo uno.

04:56.330 --> 04:59.290
Entonces sigamos y corro esos.

04:59.890 --> 05:00.380
Y ahí tienes.

05:00.380 --> 05:10.540
Entonces básicamente dice 7 7 7 como lo hemos inicializado, así que abajo dice 0.

05:10.820 --> 05:15.410
Creo que tengo demasiadas líneas nuevas, pero está bien.

05:16.040 --> 05:20.820
Esta línea que ves aquí dice el cubo 3. tamaño dice 0 el tamaño es cero.

05:20.840 --> 05:23.380
De hecho, hacemos para hacer retroceder.

05:23.660 --> 05:28.020
Y nosotros los enteros 100 eso es lo que estamos agregando al final de la línea, por así decirlo.

05:28.280 --> 05:33.900
Y a continuación queremos imprimir nuevamente el tamaño como puede ver en el código.

05:34.010 --> 05:39.790
Y luego imprimiremos el entero que hemos agregado al final de la línea también.

05:39.830 --> 05:46.290
Entonces, cuál es el que también es el primero y el último elemento porque el tamaño es uno.

05:46.320 --> 05:51.090
Así que vamos a cerrar esto y seguir.

05:53.620 --> 05:54.130
Lo siento por eso.

05:54.130 --> 05:57.200
Mi garganta me está atormentando hoy.

05:57.240 --> 06:00.200
Pero, por supuesto, Dios sabe cuántos videos.

06:00.610 --> 06:03.660
No sé, simplemente me sentí de humor o algo así.

06:04.860 --> 06:08.280
De todos modos, eso es todo.

06:08.280 --> 06:17.880
Pero también podemos crear un inicializado básicamente esto, esto lo que tienes aquí sería

06:18.390 --> 06:21.500
lo mismo para esto.

06:21.510 --> 06:26.530
Básicamente es si tienes un tipo interno si tienes talento entonces elementos de tipo int.

06:26.690 --> 06:31.860
Y si no lo ha inicializado usted mismo, los ceros de Roby para Doubleday serán

06:31.860 --> 06:36.060
como punto cero, cero, cero, cero, punto cero, excepto si desea inicializarlos.

06:36.060 --> 06:38.610
Puedes seguir y hacer eso también.

06:38.640 --> 06:51.730
Así que puede escribir en una llamada SDD y llamarlo y seguir haciéndolo, y vamos a decir que va a ser

06:51.730 --> 06:57.580
un número entero que parece ser la dequeue más conveniente.

06:58.170 --> 07:01.310
Y esto va a ser 51 de ellos que puedan.

07:01.390 --> 07:03.600
Sí, esa será la primera.

07:03.790 --> 07:09.370
Una vez más, los nombres son arbitrarios, pero así es como he elegido nombrar las q por el bien de Dema

07:09.370 --> 07:10.870
por el bien de la demostración.

07:10.940 --> 07:21.870
Puedo agregar cinco cuatro tres dos uno porque no lo hago y no creo que sea necesario agregar nada

07:21.870 --> 07:22.510
más.

07:22.750 --> 07:29.200
Y ahora no usemos el bucle for, que es una versión más larga de la

07:29.200 --> 07:38.190
impresión, sino que continuemos e intentemos imprimir esto de una manera que para cada bucle nuevo en C ++ 11 y

07:38.190 --> 07:42.830
verá cómo el nuevo verá cómo se simplificará el código.

07:42.860 --> 07:50.860
Así que solo escribe cuatro en el Heugh five.

07:50.920 --> 07:51.910
Ahí tienes.

07:51.970 --> 07:53.090
Simple como eso.

07:53.120 --> 07:57.090
Ver el.

07:57.910 --> 07:58.240
&nbsp;

08:01.360 --> 08:05.490
Yo y Rick solo hacemos esto.

08:05.520 --> 08:06.460
Hurra.

08:07.990 --> 08:11.590
Entonces rotarán y se imprimirán en la pantalla.

08:12.880 --> 08:13.260
Ahí tienes.

08:13.260 --> 08:15.790
Cinco, cuatro, tres, dos, uno.

08:15.790 --> 08:16.810
Simple como eso.

08:17.050 --> 08:21.650
Entonces otra forma de imprimirlo y una forma de inicializarlo.

08:23.320 --> 08:24.040
No es gran cosa.

08:24.050 --> 08:31.100
Y también podríamos usar el método push front y pop front.

08:31.090 --> 08:32.320
Así que echemos un vistazo a esos.

08:32.340 --> 08:40.210
Solo dos el mes pasado que quería atropellar y repasar lo que ha atropezado solo para ir con

08:40.210 --> 08:40.630
usted.

08:40.690 --> 08:43.000
Y luego vamos a pasar al siguiente tutorial.

08:43.180 --> 08:52.330
Entonces, si escribo la señal que aparece, esto será esto.

08:52.370 --> 08:58.070
Básicamente esto básicamente eliminará el último elemento y después de eliminar el último elemento,

08:58.250 --> 09:00.530
la perspectiva de esto cambiará.

09:00.530 --> 09:06.410
Así que básicamente tenemos que imprimirlo una vez más en la

09:06.470 --> 09:13.600
pantalla porque necesitaríamos ver lo que realmente parece que vamos a escribir en SDD.

09:16.410 --> 09:17.860
Sí.

09:18.100 --> 09:22.410
Todo esto es que en realidad tienes que hacerlo aquí.

09:22.570 --> 09:27.230
Quizás haya otras formas, pero realmente no me siento creativo esa noche.

09:30.780 --> 09:35.150
Y ahí vamos.

09:36.480 --> 09:45.220
Compararemos los dos productos y ahora lo compararemos con lo que es correcto.

09:45.220 --> 09:51.240
P ¿Tienes cinco?

09:51.400 --> 09:51.910
Ahí tienes.

09:51.940 --> 09:58.120
Básicamente cinco cuatro tres dos uno y hemos eliminado el último elemento son cinco cuatro tres

09:58.120 --> 10:01.450
dos como puedes ver a diferencia de los vectores.

10:01.480 --> 10:04.260
Dequeue también ha impulsado el método frontal.

10:05.320 --> 10:09.120
Entonces podemos empujar algo hacia adelante.

10:09.210 --> 10:10.690
Simple como eso.

10:10.740 --> 10:17.390
Quiero decir que no es nada nada pincharte la cabeza contra la pared.

10:17.730 --> 10:24.090
Así que es muy simple abrir para el frente de subrayado solo tienes que tener una cierta cantidad de estos métodos

10:24.090 --> 10:29.370
y puedes pensar todo lo bien que recuerdo todas estas cosas, excepto por créanme que no tendrás

10:29.370 --> 10:34.470
problemas para recordar nada, siempre y cuando es que usted sabe qué es lo que quiere hacer

10:34.470 --> 10:37.130
y qué es lo que necesita para hacerlo.

10:37.170 --> 10:42.290
Los nombres de estas cosas y las formas de la función están integrados en las ideas, de modo que

10:42.300 --> 10:46.650
si simplemente comienza a escribir en la identificación, el entorno de desarrollo integral lo ayudará con

10:46.650 --> 10:51.630
sugerencias que si realmente no puede recordar, ni siquiera lo primero sobre la función siempre puedes buscarlo en la

10:51.630 --> 10:51.970
red.

10:51.990 --> 10:53.610
Es bastante fácil.

10:53.640 --> 10:58.950
Hay una buena cantidad de formularios donde puede encontrar mucha información útil.

10:58.950 --> 11:04.560
Así que mientras lo estés usando mientras estés codificando desarrollando algún tipo de

11:04.560 --> 11:13.650
aplicación o haciendo algo útil, siempre serás capaz de leer casi no en un punto para decir "recordar", pero siempre serás

11:13.680 --> 11:16.490
capaz de encuentra lo que estás buscando.

11:16.500 --> 11:21.050
Y mientras más código escriba, mayor será su fluidez con él, lo será.

11:21.350 --> 11:26.250
Cuanto más escriba, más rápido podrá escribir, porque ahorrará mucho tiempo al no

11:26.250 --> 11:27.220
tener que buscarlo.

11:27.240 --> 11:28.840
Busque los nombres de todos modos.

11:28.900 --> 11:35.680
Dequeue push up front 100 puede seguir adelante y crear la impresión de nuevo.

11:36.620 --> 11:40.520
Y nos gustaría otro y ligero.

11:40.670 --> 11:44.400
Así que quiero ir a la siguiente línea también.

11:45.020 --> 11:46.140
Vamos a ejecutarlo.

11:47.390 --> 11:53.990
OK, entonces son cinco cuatro tres dos uno cinco cuatro tres dos y luego empuja 100 al comienzo y

11:53.990 --> 11:54.710
debajo uno.

11:54.710 --> 11:58.180
Cinco cuatro tres dos.

11:58.470 --> 12:01.300
Pero pon algo, pon algo en la parte posterior, pon algo al frente.

12:01.300 --> 12:04.120
Retire algo de la parte posterior, etc. No es gran cosa.

12:04.150 --> 12:05.090
Puede utilizar todos estos métodos básicamente para manipular el contenido de sus pistas.

12:05.110 --> 12:10.080
De todos modos, voy a seguir adelante y deciros

12:11.360 --> 12:17.720
adiós aquí y seguiremos adelante y continuaremos haciendo el tutorial de seguimiento.

12:17.720 --> 12:18.350
Vamos a hablar sobre la primavera, que es algo que le presta mucha atención al próximo tutorial.

12:18.350 --> 12:26.110
String es un tipo que usará con bastante frecuencia y debería comprenderlo al máximo.

12:26.240 --> 12:32.900
En mi opinión de todos modos.

12:32.930 --> 12:34.690
Ahora te deseo la despedida de Ken y espero verte para seguir.

12:34.850 --> 12:37.720
&nbsp;
