WEBVTT

00:00.210 --> 00:01.610
Dar una buena acogida.

00:01.620 --> 00:06.110
Así que echemos un vistazo a los principios de la programación orientada a objetos.

00:06.880 --> 00:09.220
Así que tenemos esta fecha de clase correcta.

00:09.240 --> 00:10.400
Está sentado aquí.

00:10.410 --> 00:17.780
Solo tiene variables y todas estas variables están en público.

00:17.910 --> 00:24.150
Así que ahora vamos adelante y agreguemos una función a la clase a esta clase.

00:24.150 --> 00:31.200
La función será establecer atributos para ciertos valores. Las funciones en las clases se llaman

00:31.290 --> 00:32.040
básicamente métodos.

00:32.040 --> 00:35.970
Eso es todo, las funciones y las clases se llaman métodos.

00:35.970 --> 00:40.120
Entonces, si digo un método, me refiero solo a una función dentro de una clase o.

00:40.170 --> 00:44.350
Sí, de hecho, no hay nada más que decir al respecto.

00:44.610 --> 00:48.340
Esta función establecerá los atributos a ciertos valores.

00:48.390 --> 00:50.820
Entonces esta función es un setter.

00:50.820 --> 00:59.400
Establece que establece los valores de los atributos a cualquier valor especificado que deseemos de todos modos.

01:00.650 --> 01:10.280
Este realmente necesita estar en público y podemos ingresar la fecha de configuración del FOID

01:11.480 --> 01:18.810
y será como el día en M por mes y UPS.

01:20.900 --> 01:25.340
Va a estar en Y por un año.

01:26.030 --> 01:28.510
Y sigamos y creemos la función aquí.

01:28.580 --> 01:39.140
Entonces las clases que tienen están a punto de usar el atributo Voy a usar estas clases de día de clases.

01:39.170 --> 01:42.820
La clase tiene un atributo especial llamado esto.

01:42.850 --> 01:50.890
Entonces, aquí puede verlo en la pantalla que se refiere a la instancia actual de la clase.

01:50.960 --> 02:02.930
Entonces, la sintaxis de este atributo y, a continuación, un atributo básicamente es un acceso al atributo del

02:02.930 --> 02:05.780
objeto al que apunta.

02:06.610 --> 02:12.710
Y 0 8, por lo que es un concepto un tanto extraño que comprenda en este momento, pero verá cómo funciona.

02:12.710 --> 02:14.110
Entonces esto es un puntero.

02:14.120 --> 02:19.170
Así que esto sobrepasando lo que ves en la pantalla, lo que estoy resaltando ahora.

02:19.220 --> 02:21.140
Entonces esto es un puntero.

02:21.230 --> 02:30.230
Por ahora aprendamos que, independientemente de lo que tengamos un puntero a una estructura o clase, accedemos a sus

02:30.230 --> 02:38.000
atributos con este signo menos mayor que el atributo en el que procesaremos los punteros en un

02:38.000 --> 02:39.090
momento posterior.

02:39.260 --> 02:41.480
Y los explicaré en gran detalle.

02:41.510 --> 02:45.260
Pero, por el momento, simplemente

02:48.040 --> 03:00.010
tómenlo por lo que está en la pantalla para que sean iguales al final y este mes

03:05.340 --> 03:11.580
será igual a an y esto será igual al año.

03:12.480 --> 03:15.180
Entonces, iniciaremos el.

03:15.180 --> 03:18.960
Estableceremos estos atributos de esta manera.

03:18.960 --> 03:26.490
Así que esto básicamente va a decir que cualquiera que sean los parámetros que pasen

03:26.490 --> 03:30.500
aquí, estas variables de aquí se inicializarán a.

03:30.830 --> 03:36.930
De acuerdo, ahora regresemos a nuestra función principal y echemos un vistazo por allí.

03:37.340 --> 03:45.940
Podemos usar un conjunto de puntos BT y una fecha.

03:45.950 --> 03:48.480
Va a ser como 12.

03:48.650 --> 03:56.760
5 1 9 9 3.

03:56.900 --> 03:59.220
Hola, si alguien se pregunta por qué esta fecha.

03:59.250 --> 04:02.330
Honestamente, no recuerdo ahora.

04:02.820 --> 04:09.690
Sí, tal vez puedo ir en línea y buscar para ver si sucedió algo.

04:09.990 --> 04:12.180
Pero lo olvidé por completo.

04:12.290 --> 04:18.780
De todos modos, establecer la fecha por lo que es mucho más fácil establecer la fecha de esta manera

04:18.780 --> 04:23.720
en lugar de hacer este día dot dot y luego es igual a 12.

04:23.730 --> 04:27.160
Entonces, de nuevo, el T Dot.

04:27.420 --> 04:29.630
Mes e igual

04:34.380 --> 04:35.590
a nueve.

04:35.880 --> 04:42.720
Y tendría que tener tres tres líneas de código para cada inserción para cada inicialización para cada instancia

04:42.720 --> 04:43.690
del objeto.

04:43.740 --> 04:50.670
Para cada inicialización me refiero a si tuviste la fecha 0 o 1 y si tomas el 0

04:50.670 --> 04:54.160
2 necesitarías hacer tres veces la inicialización para ambos.

04:54.180 --> 05:02.270
Es mucho más fácil simplemente usar el uso del método y tener éxito en términos de inicialización.

05:02.820 --> 05:08.970
Disminuya la cantidad de código que realmente necesita para escribir porque puede ser bastante molesto.

05:08.970 --> 05:16.080
Ahora continuemos y expandamos esta clase y escribamos métodos para imprimir la fecha y también

05:16.200 --> 05:18.120
para leer ciertos atributos.

05:18.270 --> 05:25.230
Así que no vamos a eliminar mucho, pero vamos a agregar una buena cantidad y vamos a agregar una buena cantidad dentro de

05:25.230 --> 05:26.910
la fecha de la clase.

05:26.910 --> 05:37.470
Verá que esta clase debería expandirse significativamente, de acuerdo, hasta ahora lo dejaremos en público y

05:37.470 --> 05:39.780
continuaremos escribiendo en público.

05:39.780 --> 05:47.310
Así que ahora crearemos un método para imprimir la fecha en un dado en cualquier formato dado si queremos y

05:47.310 --> 05:49.380
este método no aceptará nada.

05:49.380 --> 05:55.740
Esto solo tomará la corriente del Picot actual sobre los valores de las variables

05:55.740 --> 05:58.980
dentro de una clase y los imprimirá.

05:59.250 --> 06:07.500
Así que impresión vacía esto va a ser como Konst.

06:07.730 --> 06:15.310
El concepto aquí significa que este método no cambiará el estado de la clase y no lo cambia.

06:15.310 --> 06:15.480
&nbsp;

06:15.490 --> 06:21.580
Estamos simplemente imprimiendo en la pantalla el método de fecha de configuración que cambia el estado en el

06:21.580 --> 06:26.120
que cambia las variables y, por lo tanto, no puede ser una constante.

06:26.600 --> 06:31.560
De acuerdo, ahora que eso se ha dicho, sigamos adelante y hagamos esto.

06:31.850 --> 06:35.250
Estey el C fuera.

06:37.820 --> 06:41.150
Este mes, así que

06:43.610 --> 06:53.890
va a ser como wow slash kid solo por el bien de la simplicidad.

06:54.830 --> 06:57.450
Adelante, haz esto.

06:59.970 --> 07:01.880
Me gusta este niño

07:02.060 --> 07:02.760
Ellos

07:07.130 --> 07:10.760
tienen otra barra allí.

07:10.790 --> 07:23.580
Una vez más, como va a ser este año y en realidad lo sabes.

07:24.650 --> 07:28.590
Y bien y el terminador de línea.

07:28.590 --> 07:35.340
Entonces, esta disputa se usará para imprimir los valores del día, mes y año.

07:35.350 --> 07:36.540
Si echas un

07:39.330 --> 07:44.350
vistazo abajo, esta es una forma un poco extraña de escribirlo con el puntero.

07:44.360 --> 07:52.020
Entonces cuando lo escribe abajo cuando realmente llama a una llamada para los atributos y llama

07:52.050 --> 07:55.970
a los métodos, etc. los estás llamando con el.

07:56.040 --> 07:58.880
Pero podemos, esta es solo una fecha.

07:58.950 --> 08:17.090
Pero si tuviéramos, por ejemplo, tendrían D. T. uno y si escribimos esto así que D. T. una fecha establecida de un

08:18.730 --> 08:24.650
punto y podemos establecer como 10 10 de 2010.

08:26.050 --> 08:33.190
Mi garganta se está yendo a los miters, está empezando a matarme lentamente, pero está bien si inicializamos las variables

08:33.250 --> 08:33.920
dos veces.

08:33.970 --> 08:38.670
Y si escribimos C en at.

08:38.830 --> 08:42.400
Bueno, en realidad no es necesario.

08:43.480 --> 08:44.810
No necesito hacerlo.

08:44.890 --> 08:47.660
No necesito hacerlo de esta manera, solo puedo escribirlo.

08:47.680 --> 08:51.780
Ahora que he creado el método, puedo escribir el punto.

08:51.920 --> 08:55.430
Hola, tengo una copia. Puedo hacer esto.

08:55.450 --> 09:01.470
Y luego otra vez el T un punto y tengo una impresión de nuevo.

09:01.660 --> 09:04.290
Así que sigamos y ejecutemos esto y veamos qué sucede.

09:04.720 --> 09:06.710
No, eso no es lo que quiero.

09:08.910 --> 09:14.550
De acuerdo, parece que hay un problema en alguna parte.

09:14.560 --> 09:17.090
Estoy perdiendo un punto y coma en alguna parte.

09:19.850 --> 09:20.710
DE ACUERDO.

09:20.760 --> 09:22.320
Eso debería estar bien.

09:22.320 --> 09:24.050
Eso debería estar bien.

09:25.100 --> 09:27.290
Función para significar OK.

09:27.320 --> 09:28.420
Derecha.

09:31.860 --> 09:33.630
Oh, vamos, no me hagas esto.

09:33.630 --> 09:37.360
Demasiados decimales en cualquier número.

09:37.890 --> 09:40.350
Es un colon jenius es un colon.

09:40.500 --> 09:45.130
Es una coma, no un punto, está bien.

09:45.130 --> 09:45.680
Aquí vamos.

09:45.790 --> 09:56.280
Entonces dice 5:12 9 1 9 9 3 y abajo dice 10 veces el 2000 y luego dice See even evenough aquí.

09:56.380 --> 09:58.720
Este método de impresión no lo tenemos.

09:58.750 --> 10:05.890
Quiero decir que no somos tan básicos como ése lo llamamos debajo de la computadora necesita saber

10:06.080 --> 10:08.830
si imprimir estos valores o estos valores.

10:11.450 --> 10:17.270
Y cada vez que llamaste cada vez que llamas al método con No sé si es la T,

10:17.270 --> 10:22.100
imprimirá los valores de deber si es el T-1, imprimirá los valores para el deber

10:22.100 --> 10:24.500
uno, y así sucesivamente. etcétera para cada instancia.

10:24.830 --> 10:31.220
Deben ser diferentes y, dependiendo de la forma en que los inicialices,

10:31.220 --> 10:43.100
solo querían hacer una pequeña demostración de este método y de cuando creas dos instancias de todos modos, básicamente también podemos crear

10:43.100 --> 10:44.870
una función getter.

10:46.270 --> 10:52.970
Y eso debería ayudarnos a mover las variables a la sección privada o básicamente a las privadas.

10:52.970 --> 10:54.430
No necesitamos protección.

10:54.560 --> 10:55.610
No todavía, de todos modos.

10:55.970 --> 10:58.440
Entonces este será un método para obtener días.

10:58.460 --> 11:04.140
Bueno, tendremos un método para obtener los días un método para obtener los meses y un método para obtener los años.

11:04.230 --> 11:08.030
Debería ser usted capaz de escribir estos por su cuenta a estas alturas.

11:08.480 --> 11:13.700
Así que esta es solo la convención de nombres, los nombres son completamente arbitrarios.

11:13.700 --> 11:15.410
Puedes cambiarlos

11:15.440 --> 11:21.230
No necesita ser obtenido, pueden ser como si no supiera que puede nombrar un papel higiénico si lo desea.

11:21.230 --> 11:22.590
Realmente no importa.

11:22.880 --> 11:28.580
Pero la convención estándar para getters es que sus nombres comienzan con get y luego el nombre de la

11:28.580 --> 11:35.300
variable real que hay, no tiene nada que ver con un compilador que va a compilar independientemente del nombre, siempre que esté

11:35.300 --> 11:37.370
dentro de los estándares de nomenclatura. .

11:37.370 --> 11:39.280
Pero es la convención.

11:40.010 --> 11:44.950
De acuerdo, entonces en este caso,

11:48.550 --> 11:53.620
déjame revisar algo en mis notas.

11:53.670 --> 11:59.970
De todos modos, el atributo de esto ahora se puede relacionar mejor de qué se trata.

11:59.980 --> 12:03.270
¿Por qué es por lo tanto este es un atributo especial.

12:03.280 --> 12:04.810
Entonces se refiere.

12:04.810 --> 12:09.610
Se refiere a la instancia actual de la clase.

12:09.610 --> 12:11.860
Entonces, si usa el d y d t uno.

12:11.860 --> 12:14.250
Esos son dos diferentes.

12:14.440 --> 12:23.020
Pero al usar esto aquí cuando se llaman se refiere a la actual.

12:23.050 --> 12:25.260
Espero haber hecho algún progreso allí.

12:25.270 --> 12:30.920
Pero no te preocupes, entraremos en los indicadores muy pronto y luego estarás bien.

12:30.970 --> 12:35.550
Bueno, vamos a divertirnos dependiendo y dependiendo de la forma en que lo mires.

12:35.570 --> 12:43.650
Así que adelante y escriba aquí y consiga los inconvenientes del mes aquí.

12:46.210 --> 12:50.880
En realidad, escribamos esto de una manera diferente.

12:51.930 --> 12:56.580
Quiero decir que no voy a cambiar nada en términos de código solo en términos de estética, supongo.

12:57.710 --> 12:58.310
Lo que es correcto.

12:58.350 --> 12:59.360
Vamos a escribirlos así

12:59.360 --> 13:01.160
Quiero decir que son muy cortos.

13:01.160 --> 13:06.580
De todas formas, no es necesario ocupar el espacio innecesario.

13:06.610 --> 13:10.090
Este será el mes

13:13.810 --> 13:19.190
de Double-O que tendremos en profundidad aquí.

13:22.790 --> 13:24.500
El regreso.

13:24.750 --> 13:30.670
Este va a ser el año OK.

13:30.740 --> 13:34.040
Oh, el refrigerante se olvidó de olvidar el fiador de semi colon.

13:34.120 --> 13:34.660
Excelente.

13:34.660 --> 13:35.780
Ahí van.

13:36.280 --> 13:39.210
Entonces tenemos tres letras.

13:39.340 --> 13:42.710
Lo único que hacen es simplemente fingirlo.

13:42.730 --> 13:48.670
Tome la toma las variables aquí y devuélvalas en eso.

13:48.730 --> 13:50.550
Ellos no cambian nada.

13:50.560 --> 13:54.020
Simplemente obtienen los valores y luego los devuelven.

13:54.070 --> 13:56.700
Obtienen los valores de las variables y luego regresaron.

13:56.710 --> 13:59.650
Esa es la totalidad de su propósito.

13:59.650 --> 14:02.290
Ellos no hacen nada más.

14:04.900 --> 14:09.210
De acuerdo, ahora tenemos un testigo de que tenemos una clase sólida.

14:09.220 --> 14:17.020
Ahora tiene casi todos los elementos que figuran en la lista tienen las variables que tiene métodos

14:17.020 --> 14:20.810
y tiene getters y tiene setters excepto por.

14:20.870 --> 14:25.000
Así que sigamos adelante y juguemos en el dominio un poco.

14:25.040 --> 14:35.150
Podemos continuar y eliminarlos de manera segura y diremos en AM THE Y.

14:35.270 --> 14:35.870
DE ACUERDO.

14:35.940 --> 14:41.910
Así que mes el año un mes del año elijo usar este formato del día.

14:41.940 --> 14:48.620
Puede cambiarlos si le parece más conveniente puede escribir la llamada SITD y dos puntos.

14:49.360 --> 14:49.800
DE ACUERDO.

14:49.800 --> 14:55.790
Simplemente le pediremos al usuario que ingrese que adivinó y feche un

14:59.290 --> 15:00.410
caso, así

15:03.130 --> 15:08.970
que permítame proporcionar una manera para que el usuario ingrese realmente.

15:09.130 --> 15:11.830
Va a ser como un mes.

15:12.010 --> 15:14.920
Es un día feliz.

15:14.960 --> 15:17.440
Y vamos a necesitar un año también.

15:17.490 --> 15:19.210
Y sigamos y terminemos.

15:19.590 --> 15:25.160
Así es como el usuario ingresará al separarlo con espacios.

15:25.300 --> 15:33.310
Y ahora necesitamos crear una fecha de suministro de objetos de datos y mar profundo y

15:33.310 --> 15:44.410
abajo indicaremos que la fecha establecida en el Punto T se usará para inicializar con las variables que el usuario realmente ingresó.

15:44.410 --> 15:46.390
Así que está en un formato un poco diferente aquí.

15:46.390 --> 15:52.830
Entonces, cuando escupe, cámbialos para que sea el día

15:55.560 --> 16:02.120
del mes y el año, como puede ser un CD.

16:02.590 --> 16:07.220
Fuera mostramos hacer esto.

16:14.000 --> 16:15.260
Y luego usaremos el método.

16:15.260 --> 16:22.190
Así que la impresión T Dot no nos permite crear una impresión en nuestro programa, así que no tenemos que

16:22.190 --> 16:25.290
crear una impresión formateada cada vez que necesitamos imprimirla.

16:26.950 --> 16:31.870
Y también podemos hacer esto o simplemente seguir adelante y mostrar que también puede tomar solo una

16:37.450 --> 16:38.430
parte de la

16:41.040 --> 16:41.850
fecha, solo veamos.

16:41.870 --> 16:50.510
Este va a ser el mes que va a dejarlo así y agregar aquí D. T. doc.

16:50.780 --> 16:53.680
Obtener mes.

16:54.050 --> 17:00.950
Así que esto nos va a devolver un mes para que podamos ver que obviamente no hay

17:00.950 --> 17:03.580
necesidad de usar directamente los atributos.

17:03.600 --> 17:11.170
Quiero decir que simplemente no es necesario escribir en el mes de ditty d'arte en lugar de escribir el punto

17:11.200 --> 17:17.870
de ditty obtener mes mismo es para establecer los atributos que hemos establecido el método de fecha.

17:17.910 --> 17:22.820
El único problema es que tenemos que establecer todos los atributos a la vez y no por separado.

17:22.820 --> 17:29.680
Es por eso que implementaremos setters para la configuración de atributos.

17:30.000 --> 17:31.280
Entonces estos son todos jets.

17:31.290 --> 17:33.850
Ahora necesitamos ahora que necesitamos configurar el.

17:33.870 --> 17:39.030
Ahora necesitamos escribir los ajustadores para cada atributo individual para que podamos configurarlos individualmente,

17:39.030 --> 17:44.940
de modo que no necesitemos configurarlos todos a la vez con el conjunto general general actual

17:45.030 --> 17:48.460
o que tengamos, que es una fecha configurada de función.

17:48.720 --> 17:50.100
Como ve, establece que

17:52.600 --> 18:01.180
los tres odian esta parte, pero el código bloquea cuando mueve esto de todos modos, lo ve como un conjunto general o establece

18:01.180 --> 18:04.870
los tres y configura el día en toda su extensión.

18:04.920 --> 18:09.930
Pero al igual que tenemos getters para cada individuo para cada atributo individual, entonces

18:09.930 --> 18:12.530
tendremos los setters para cada atributo individual.

18:15.210 --> 18:21.300
Una vez que hacemos eso una vez que lo hacemos una vez que tenemos los setters y getters para todos los

18:21.300 --> 18:24.270
atributos, no hay necesidad de que se vean nuestros atributos.

18:24.270 --> 18:28.910
Así que nos esconderemos en el escondite de la clandestinidad.

18:28.920 --> 18:37.800
Por lo tanto, tomar esto con un grano de sal es uno de los principios fundamentales de la programación orientada a objetos.

18:38.970 --> 18:43.590
Así que vamos a seguir adelante y cortar el video aquí y no borrar nada.

18:43.590 --> 18:48.800
Volveremos en la parte 2 simplemente porque me estoy quedando sin tiempo.

18:48.870 --> 18:52.780
Y la duración de los videos está limitada a 20 minutos.

18:53.040 --> 18:56.140
De todos modos, me despido de ustedes y nos veremos en un momento.
