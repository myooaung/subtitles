1
00:00:00,330 --> 00:00:01,260
All right.

2
00:00:01,260 --> 00:00:06,300
So in this lesson, I'd like to add one quality of life improvement for our user.

3
00:00:06,510 --> 00:00:12,000
You'll notice that when we navigate to a page, for example, if I scroll down here and click next,

4
00:00:12,600 --> 00:00:15,900
we sort of end up at the very bottom of the page, right?

5
00:00:16,110 --> 00:00:21,810
And I think it'd be a really nice user experience if we scored automatically to the very top of the

6
00:00:21,810 --> 00:00:23,070
next page of job results.

7
00:00:23,250 --> 00:00:26,490
So the user could start with the top job on that page, right?

8
00:00:26,730 --> 00:00:30,990
Because that way they can go through this batch of ten jobs and if they don't like what they see and

9
00:00:30,990 --> 00:00:36,240
they go to the next page, we can immediately take them to the very top of their search results instead

10
00:00:36,240 --> 00:00:37,920
of keeping them at the very bottom.

11
00:00:38,220 --> 00:00:42,810
And as it turns out, this functionality is actually baked into view router.

12
00:00:42,840 --> 00:00:43,950
Super simple to do.

13
00:00:44,280 --> 00:00:52,170
So I'm going to head back to this code and I'm actually going to go into my router index dot gas file.

14
00:00:52,170 --> 00:00:56,400
So my index not just file in my router folder.

15
00:00:56,700 --> 00:01:00,360
Here is where we set up all of our routes and our lazy loading and things like that.

16
00:01:00,600 --> 00:01:05,220
But you'll notice at the very bottom we are setting up our actual view router with this create router

17
00:01:05,220 --> 00:01:08,460
function and we are exporting the router that it creates for us.

18
00:01:08,790 --> 00:01:15,840
So what I can do in this setup object we only have to do it once is define a method called scroll behavior

19
00:01:16,050 --> 00:01:17,580
and that is exactly as it sounds.

20
00:01:17,700 --> 00:01:24,690
It specifies how the router is going to behave in regards to scrolling whenever there is a change in

21
00:01:24,690 --> 00:01:25,170
route.

22
00:01:25,440 --> 00:01:29,820
And the way this method works is we can actually return an object and that object is sort of like a

23
00:01:29,820 --> 00:01:32,820
configuration object for these scrolling behavior.

24
00:01:33,150 --> 00:01:39,480
So the way it works is we provide properties here that specify where we want to scroll to whenever we

25
00:01:39,480 --> 00:01:44,970
have a change in route and whenever we change our query params, by the way, that counts as a change

26
00:01:44,970 --> 00:01:45,390
in route.

27
00:01:45,540 --> 00:01:51,630
We're still at the same slash jobs slash results page, but we are changing something about the route

28
00:01:51,630 --> 00:01:55,470
and that is still considered to be a route change by view router.

29
00:01:55,560 --> 00:01:56,940
So this logic will still run.

30
00:01:57,240 --> 00:02:03,630
So if I wanted to go to the very top of my view, what I can do is provide two properties here, top

31
00:02:03,630 --> 00:02:06,150
and left, and I can set them both to zero.

32
00:02:06,450 --> 00:02:10,770
So this specifies where I want to scroll relative to the top and left of my screen.

33
00:02:10,980 --> 00:02:14,610
So what I'm saying is zero pixels from the top and zero pixels from the left.

34
00:02:14,790 --> 00:02:19,920
So basically I'm telling a view router to scroll automatically to the very top and to the very left,

35
00:02:20,100 --> 00:02:20,310
right.

36
00:02:20,310 --> 00:02:23,130
So basically to the top of the page as far as we're concerned.

37
00:02:23,260 --> 00:02:23,560
All right.

38
00:02:23,700 --> 00:02:26,910
And I found this, by the way, on the official view router documentation.

39
00:02:26,910 --> 00:02:30,480
That's where we can find the documentation and some examples for how this works.

40
00:02:30,780 --> 00:02:33,150
There's one more property I'd like to define here.

41
00:02:33,160 --> 00:02:37,710
It's just going to be a customization property called Behavior, and I'm going to provide it with a

42
00:02:37,710 --> 00:02:43,740
string of smooth that just ensures that it kind of almost has this animation effect where it gradually

43
00:02:43,740 --> 00:02:48,660
and gracefully scrolls up instead of immediately taking the user within like a split second to the top,

44
00:02:48,840 --> 00:02:51,780
which just gives the user a little less of a jarring experience.

45
00:02:51,900 --> 00:02:57,540
It just looks like a more smooth, gentle scroll to the top instead of immediately taking them there.

46
00:02:57,540 --> 00:02:59,820
That's what we're customizing with this behavior property.

47
00:03:00,180 --> 00:03:04,050
So I'm going to go to the browser and test this out, and if it doesn't work, that's totally fine.

48
00:03:04,050 --> 00:03:08,370
I recommend that you restart your view app, your view service in case it doesn't work.

49
00:03:08,550 --> 00:03:10,950
But let's try it out and see if it automatically registers.

50
00:03:11,160 --> 00:03:16,440
So as I scroll to the bottom, I'm on page three and I'm going to navigate to the next page by clicking

51
00:03:16,440 --> 00:03:18,240
next and beautiful.

52
00:03:18,240 --> 00:03:21,300
You just saw that it automatically scroll to the very top.

53
00:03:21,570 --> 00:03:22,740
Let's try that in reverse.

54
00:03:22,740 --> 00:03:27,000
So if I go to the previous page, you'll see it's going to scroll me all the way back to the top.

55
00:03:27,000 --> 00:03:27,630
That's great.

56
00:03:27,840 --> 00:03:29,250
One more time with previous.

57
00:03:29,490 --> 00:03:30,240
That's great.

58
00:03:30,240 --> 00:03:33,870
Gracefully scroll to the top one more time with next perfect.

59
00:03:33,870 --> 00:03:38,460
In fact, as we navigate to any page in our app, we're going to have this scroll behavior because we

60
00:03:38,460 --> 00:03:42,630
set it up specifically for the entire view, rather, not just for any specific page, right?

61
00:03:42,840 --> 00:03:47,580
So I think this definitely improves the experience and the you actually the UI for the user and we can

62
00:03:47,580 --> 00:03:52,200
continue again chipping away at more functionality in the very next lesson.
