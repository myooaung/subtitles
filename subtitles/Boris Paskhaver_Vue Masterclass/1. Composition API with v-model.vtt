WEBVTT
1
00:00:00.480 --> 00:00:01.440
All right.

2
00:00:01.440 --> 00:00:03.690
So welcome to the next section of the course.

3
00:00:03.930 --> 00:00:10.230
This section is also focused on the composition API, the new way that we can build Vue components in

4
00:00:10.230 --> 00:00:11.280
Vue 3.0.

5
00:00:11.580 --> 00:00:16.920
And as always, I think the best way to learn is by refactoring the components that we have that are

6
00:00:16.920 --> 00:00:22.400
using the Options API to now utilize the composition API.

7
00:00:22.410 --> 00:00:27.450
And we're going to get exposure to a lot of different things that we still need to learn how to do in

8
00:00:27.480 --> 00:00:28.650
the composition API.

9
00:00:29.010 --> 00:00:32.430
So let's start with an old component called job search form.

10
00:00:32.610 --> 00:00:34.860
So right here, I'm going to open up job search form.

11
00:00:35.220 --> 00:00:40.200
And as a reminder, this component is rendered on the main page, and this is actually where the user

12
00:00:40.200 --> 00:00:44.550
provides the job role and the job location that they're interested in.

13
00:00:44.700 --> 00:00:47.850
We haven't actually connected this to the job results page yet.

14
00:00:47.860 --> 00:00:48.690
We will eventually.

15
00:00:48.780 --> 00:00:50.730
But as a reminder, this is that form.

16
00:00:51.030 --> 00:00:55.500
And so what we're doing here is we're actually using one of our own components called text input, and

17
00:00:55.500 --> 00:00:59.640
we're using the V model directive to connect a piece of data on this component.

18
00:00:59.850 --> 00:01:04.050
With this text input here we're using role and here we're using location.

19
00:01:04.260 --> 00:01:10.710
And as a reminder of our old implementation role and location are simply a pieces of data and pieces

20
00:01:10.710 --> 00:01:17.640
of data are a great way to store text inputs because they are by definition, values that are going

21
00:01:17.640 --> 00:01:18.780
to change over time.

22
00:01:18.930 --> 00:01:21.390
Role and location start out as empty strings.

23
00:01:21.510 --> 00:01:26.940
And every time the user types a character, the V model captures that and updates the corresponding

24
00:01:26.940 --> 00:01:27.690
data property.

25
00:01:27.990 --> 00:01:32.530
So now let's go ahead and replace our old implementation using the new composition API.

26
00:01:32.850 --> 00:01:37.650
So as always, I'm going to comment out the former code, which is not just going to include data but

27
00:01:37.650 --> 00:01:41.550
also methods below because remember methods is also the options API.

28
00:01:41.970 --> 00:01:42.990
So let's commit this out.

29
00:01:43.800 --> 00:01:49.290
And right here I'm going to start with my setup method and in this lesson I just want to tackle the

30
00:01:49.290 --> 00:01:52.770
data properties in the next lesson will take care of the method right here.

31
00:01:53.130 --> 00:01:56.910
So how do we create a piece of data that is going to change over time?

32
00:01:57.150 --> 00:02:01.020
In the composition API, we use our familiar ref function.

33
00:02:01.020 --> 00:02:06.060
That is a perfect way to create a reactive piece of data and thus when it changes, that reactivity

34
00:02:06.060 --> 00:02:09.450
can update something like the V model directive in our template.

35
00:02:09.780 --> 00:02:17.790
So right here I'm going to import the ref function import ref from the view library and here we're going

36
00:02:17.790 --> 00:02:20.370
to use ref once for every piece of data that we want.

37
00:02:20.610 --> 00:02:25.950
So for a role, we're going to invoke the ref function and provide the initial starting value which

38
00:02:25.950 --> 00:02:28.260
just like below is going to be an empty string.

39
00:02:28.560 --> 00:02:31.230
We're going to repeat the exact same logic for location.

40
00:02:31.440 --> 00:02:37.770
So Can's location, we're going to invoke Ref to get a reactive object and its initial value property

41
00:02:37.770 --> 00:02:38.730
will be an empty string.

42
00:02:39.000 --> 00:02:43.800
And we're going to want to utilize role and location right here in our templates.

43
00:02:43.800 --> 00:02:45.120
Here is where we're using role.

44
00:02:45.330 --> 00:02:46.800
Here is where we're using location.

45
00:02:47.010 --> 00:02:51.450
Remember, simply because we declare these constants in setup does not mean they're available to our

46
00:02:51.450 --> 00:02:51.870
template.

47
00:02:52.050 --> 00:02:55.020
In order to make that happen, we need to return an object.

48
00:02:55.290 --> 00:02:58.980
And here's where we define the properties that are going to be available in the HTML.

49
00:02:59.190 --> 00:03:01.830
So we need to provide role and we need to provide location.

50
00:03:02.250 --> 00:03:10.080
And with that, we have successfully replaced our old data object right here with new individual calls

51
00:03:10.080 --> 00:03:10.950
to the ref function.

52
00:03:11.370 --> 00:03:13.680
All right, so we've taken care of half of our old code.

53
00:03:13.680 --> 00:03:18.120
In the very next lesson, it will take care of replacing our former search for jobs method.

54
00:03:18.330 --> 00:03:19.110
So I'll see you there.
