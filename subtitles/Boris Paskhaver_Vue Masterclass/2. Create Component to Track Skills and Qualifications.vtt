WEBVTT
1
00:00:00.860 --> 00:00:01.370
Okay.

2
00:00:01.370 --> 00:00:07.460
So let's start building out our new component and I'm going to call it job filter, sidebar skills.

3
00:00:07.730 --> 00:00:14.480
The goal or responsibility of this component will be to render an input where the user can enter a skill

4
00:00:14.480 --> 00:00:16.610
or a qualification to search for.

5
00:00:16.970 --> 00:00:21.470
So it is related to the idea of job filtering on our job filter sidebar.

6
00:00:21.620 --> 00:00:26.960
So I am going to store it in source components, job results, job filter, sidebar.

7
00:00:27.110 --> 00:00:29.030
And then here I'll create another component.

8
00:00:29.060 --> 00:00:32.210
Again with the common prefix name of job filters.

9
00:00:32.210 --> 00:00:32.780
Sidebar.

10
00:00:33.140 --> 00:00:35.870
So right here, I'll create my new file.

11
00:00:35.900 --> 00:00:37.100
Job filters.

12
00:00:37.100 --> 00:00:37.850
Sidebar.

13
00:00:39.190 --> 00:00:41.830
And then I'm going to call this skills dot view.

14
00:00:42.840 --> 00:00:44.340
All right, so we know the drill by now.

15
00:00:44.340 --> 00:00:45.510
We have to have a template.

16
00:00:46.830 --> 00:00:48.790
And we also need to have a script section.

17
00:00:49.320 --> 00:00:53.580
And of course, right here we can provide a lang attributes that it's all right.

18
00:00:53.580 --> 00:00:58.500
And before we forget, let's also import define component.

19
00:00:59.280 --> 00:01:00.930
And that is going to come from view.

20
00:01:01.230 --> 00:01:07.770
And right here I will export default the invocation of define component passing an object and for now

21
00:01:07.770 --> 00:01:13.740
the only property I care about is the name and I will call this job filters sidebar skills.

22
00:01:14.720 --> 00:01:15.050
All right.

23
00:01:15.060 --> 00:01:17.780
And then I do actually want to write some time on here.

24
00:01:17.810 --> 00:01:20.660
It's actually been quite a while since we've dived into tailwind.

25
00:01:20.900 --> 00:01:23.870
So I'm just going to quickly run through what we need to write here.

26
00:01:24.170 --> 00:01:25.460
So we'll begin with a div.

27
00:01:26.570 --> 00:01:32.060
And our they will have a class of 95 that applies some margin to the top of this dev.

28
00:01:32.570 --> 00:01:34.660
Then I'll provide my input.

29
00:01:34.670 --> 00:01:40.040
This is where the user will actually enter their text for the scale they're searching for and we'll

30
00:01:40.040 --> 00:01:44.780
apply a bunch of classes here will apply p three for padding.

31
00:01:45.110 --> 00:01:48.290
We're going to do H 12 for height that has 48 pixels of height.

32
00:01:48.620 --> 00:01:50.690
I want to make sure this input has a border.

33
00:01:50.690 --> 00:01:51.890
So I'll do the border class.

34
00:01:52.250 --> 00:01:55.190
I'll apply border dash solid to make the border solid.

35
00:01:55.460 --> 00:02:00.410
And then as far as the border color, I will do border brand gray one.

36
00:02:00.650 --> 00:02:04.520
And as a reminder, we set up that color within our tailwind configuration file.

37
00:02:04.940 --> 00:02:10.010
Then I also want to provide a little bit of box shadow, which I can do with Shadow Gray, a little

38
00:02:10.010 --> 00:02:11.420
bit of box shadow below the box.

39
00:02:11.660 --> 00:02:17.090
I want to make sure the box or the input box is rounded so I will apply the tailwind rounded class.

40
00:02:17.960 --> 00:02:23.720
I want to give it w full or with full to make sure it occupies 100% of the width of its parent the div.

41
00:02:23.990 --> 00:02:29.510
And then for my text size, I'm going to text base that's going to apply a font size of one ram or 16

42
00:02:29.510 --> 00:02:29.840
pixels.

43
00:02:30.650 --> 00:02:30.860
All right.

44
00:02:30.860 --> 00:02:31.640
Let me save that.

45
00:02:32.030 --> 00:02:37.940
And then I also want to add a placeholder attribute here just so I have some sample text appear in there

46
00:02:37.940 --> 00:02:40.010
to indicate to the user what they should type in here.

47
00:02:40.310 --> 00:02:43.580
So what they have on the actual Google site is some sample skills.

48
00:02:43.850 --> 00:02:50.330
So I'm going to start here with computer programming and then comma finance degree and that will hopefully

49
00:02:50.330 --> 00:02:55.160
incentivize or communicate to the user what they should be entering into this actual input.

50
00:02:55.670 --> 00:02:55.940
All right.

51
00:02:55.940 --> 00:03:00.350
So here is the base layout for our new job builder cyber skills component.

52
00:03:00.350 --> 00:03:03.860
Now we want to actually render it in jobs filters, sidebar.

53
00:03:04.250 --> 00:03:06.890
So I'm going to open up my job filter, cyber component.

54
00:03:06.890 --> 00:03:08.630
This is where everything kicks off right here.

55
00:03:08.960 --> 00:03:11.960
So I'm going to begin by importing my new component right here.

56
00:03:13.200 --> 00:03:15.750
We're going to important job filter sidebar.

57
00:03:16.710 --> 00:03:22.110
And our new one is called Skills, and that's going to come from the source directory components, job

58
00:03:22.110 --> 00:03:27.090
results, job filter, sidebar, and then job filters sidebar.

59
00:03:28.990 --> 00:03:29.800
Skills.

60
00:03:30.130 --> 00:03:30.760
That view.

61
00:03:30.970 --> 00:03:31.510
There we go.

62
00:03:31.870 --> 00:03:33.130
And we have to import it.

63
00:03:33.130 --> 00:03:34.720
We also have to register it right here.

64
00:03:34.720 --> 00:03:35.810
And our components object.

65
00:03:35.830 --> 00:03:38.230
So right here, jobs with the sidebar skills.

66
00:03:39.010 --> 00:03:39.340
All right.

67
00:03:39.340 --> 00:03:41.530
And then we have to actually utilize it in our template.

68
00:03:41.800 --> 00:03:46.510
And where it's going to go is going to be below our prompt, but above our degrees.

69
00:03:46.510 --> 00:03:50.440
And this is just a matter of preference, but this is also how it appears on the Google site.

70
00:03:50.740 --> 00:03:52.720
So this is going to be right here.

71
00:03:52.990 --> 00:03:56.170
And in addition to that, we are going to wrap it in its own accordion.

72
00:03:56.170 --> 00:03:58.030
The content is going to be collapsible.

73
00:03:58.240 --> 00:04:00.730
So I will begin by rendering my accordion component.

74
00:04:01.990 --> 00:04:08.050
And for the header prop for this accordion, I'm going to give it a header of skills and qualifications.

75
00:04:08.680 --> 00:04:13.270
And then inside my accordion, this is going to be the content it reveals when we expand it.

76
00:04:13.570 --> 00:04:20.140
What I want to show is my new job filters, sidebar skills component, which can be self-closing.

77
00:04:20.710 --> 00:04:24.100
All right, so I'm going to save that and let's navigate to the browser to see the result.

78
00:04:25.370 --> 00:04:26.000
There we go.

79
00:04:26.210 --> 00:04:27.070
And there we have it.

80
00:04:27.080 --> 00:04:28.730
So here are skills and qualifications.

81
00:04:28.730 --> 00:04:34.550
And if I expand it, you can see here is our input and we are welcome to write whatever text we want.

82
00:04:34.910 --> 00:04:35.210
All right.

83
00:04:35.210 --> 00:04:36.280
So this is a good start.

84
00:04:36.290 --> 00:04:41.330
Again, kind of similar to these components in the sense that it is an accordion that hides some bit

85
00:04:41.330 --> 00:04:42.290
of filter functionality.

86
00:04:42.590 --> 00:04:47.120
But it is also different because we're going to be utilizing text here instead of checkboxes.

87
00:04:47.480 --> 00:04:47.750
All right.

88
00:04:47.750 --> 00:04:50.420
So we'll continue tackling this user story in the very next lesson.
