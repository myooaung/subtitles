1
00:00:00,360 --> 00:00:01,140
Okay.

2
00:00:01,140 --> 00:00:06,090
So in the previous lesson we broke up our view logic across multiple files.

3
00:00:06,330 --> 00:00:10,980
And now I want to do the exact same thing with our view x tests in our index.

4
00:00:10,980 --> 00:00:11,530
That test?

5
00:00:11,820 --> 00:00:12,050
Yes.

6
00:00:12,090 --> 00:00:15,000
File in our tests unit store directory.

7
00:00:15,300 --> 00:00:20,640
So now I want to create a separate test file for our state, for our mutations, for our getters and

8
00:00:20,640 --> 00:00:21,780
for our actions.

9
00:00:22,110 --> 00:00:23,970
So let's get right to it right here.

10
00:00:23,970 --> 00:00:27,620
I'm going to create a new file called State That Test.

11
00:00:28,020 --> 00:00:31,410
Yes, I'm going to drag it over here to the right.

12
00:00:32,410 --> 00:00:37,450
And then what I'm going to do is cut and paste this very first describe block, which has all of our

13
00:00:37,450 --> 00:00:38,230
state tests.

14
00:00:38,800 --> 00:00:43,270
So once again, the goal here is to just make each file a little bit smaller, a little bit more focused.

15
00:00:43,690 --> 00:00:48,430
So in here on the right, we are importing our state function that's no longer going to come from these

16
00:00:48,430 --> 00:00:51,070
stored directory or more specifically, the index file.

17
00:00:51,220 --> 00:00:53,350
It's not going to come from a separate state file.

18
00:00:53,590 --> 00:00:55,500
So right here, I want to import state.

19
00:00:55,540 --> 00:00:58,390
That is our function that produces the initial view store state.

20
00:00:58,720 --> 00:01:03,190
And that's going to come from the source directory store and the State Daas file.

21
00:01:03,700 --> 00:01:04,480
And that's it.

22
00:01:04,870 --> 00:01:11,800
So now here we can create our follow up test suite, which is going to be mutations that test that yes,

23
00:01:13,120 --> 00:01:13,910
create that file.

24
00:01:14,080 --> 00:01:18,350
And I'm going to, of course, copy over our described block for mutations.

25
00:01:18,370 --> 00:01:20,980
So simply cut and paste that over here.

26
00:01:21,310 --> 00:01:25,300
And once again, we're going to need to import mutations, which is now coming from a different file.

27
00:01:25,780 --> 00:01:33,250
So we're going to import mutations from the source directory store, mutations that yes, it's no longer

28
00:01:33,250 --> 00:01:34,120
coming from index.

29
00:01:34,360 --> 00:01:37,000
And I think that's all we need to do in this file.

30
00:01:37,300 --> 00:01:40,600
The next one in line is we can see on the left here is going to be our getters.

31
00:01:40,810 --> 00:01:46,390
So right here in our tests, in it's store directory, I'm going to create getters that test that.

32
00:01:46,420 --> 00:01:46,780
Yes.

33
00:01:48,100 --> 00:01:50,620
And I'm going to cut and paste my entire getter section.

34
00:01:50,800 --> 00:01:55,900
This is one additional benefit of using all these describes as it makes it really easy to see how the

35
00:01:55,900 --> 00:01:59,800
organization works and just really easy to cut and paste all of this to another file.

36
00:02:00,370 --> 00:02:00,700
All right.

37
00:02:00,700 --> 00:02:06,790
So as always, we need to import our getters to right here import getters from our source directory.

38
00:02:06,790 --> 00:02:08,170
Store getters.

39
00:02:09,070 --> 00:02:09,760
Save that.

40
00:02:10,030 --> 00:02:12,890
And only one more left to do here, which is our actions.

41
00:02:12,890 --> 00:02:15,520
So right here, let's create our actions.

42
00:02:15,850 --> 00:02:17,260
Test, digest, file.

43
00:02:17,770 --> 00:02:18,310
There we go.

44
00:02:18,520 --> 00:02:21,310
I'm going to cut this section right here.

45
00:02:22,710 --> 00:02:23,340
Paste it here.

46
00:02:23,700 --> 00:02:29,610
We're going to need to import our actions and that's going to be import actions from our source directory

47
00:02:29,610 --> 00:02:30,540
store actions.

48
00:02:30,540 --> 00:02:32,550
That's the new file we created in the previous lesson.

49
00:02:32,820 --> 00:02:35,220
And you'll notice we're still getting some issues down below.

50
00:02:35,400 --> 00:02:40,650
That's because remember our actions are making or single action in this case fetched jobs is making

51
00:02:40,650 --> 00:02:43,110
that asynchronous call to the API to get jobs.

52
00:02:43,320 --> 00:02:48,720
So when we were writing the test for it, we marked out the get jobs function that does the API call.

53
00:02:48,960 --> 00:02:52,880
So you can see we have some of that marking code right here in index that test that.

54
00:02:52,890 --> 00:02:53,220
Yes.

55
00:02:53,460 --> 00:02:56,880
So I want to cut and paste this code as well, both of these lines.

56
00:02:57,240 --> 00:03:01,200
So the first line is going to import get jobs, which is the actual API function call.

57
00:03:01,350 --> 00:03:06,390
And the just mark is going to replace that with a just implementation which we then modify right here

58
00:03:06,390 --> 00:03:11,820
in the before each to pretend as if it's resolving to a promise that gives us an object of a sample

59
00:03:11,820 --> 00:03:12,120
job.

60
00:03:12,600 --> 00:03:12,930
Okay.

61
00:03:13,110 --> 00:03:17,940
So with that we have copied everything over to brand new files and we are actually good to delete our

62
00:03:17,940 --> 00:03:21,960
original index, that test such as file because right now it doesn't have anything left in it.

63
00:03:22,280 --> 00:03:24,780
Let's go ahead and right click here and choose Delete.

64
00:03:25,890 --> 00:03:26,790
Move to trash.

65
00:03:26,790 --> 00:03:27,620
And there we go.

66
00:03:27,630 --> 00:03:30,750
We've now moved our former tests across four different files.

67
00:03:30,960 --> 00:03:34,770
So somebody wants to see the tests for just the getters or just the mutations.

68
00:03:34,770 --> 00:03:37,770
It's a lot easier to come here and understand what they are doing.

69
00:03:38,070 --> 00:03:42,030
And of course, this brings up a larger discussion, which is, you know, what do we do when we have

70
00:03:42,060 --> 00:03:43,080
too many mutations?

71
00:03:43,080 --> 00:03:43,260
Right.

72
00:03:43,500 --> 00:03:44,790
Well, you follow the same principle.

73
00:03:44,790 --> 00:03:46,620
You keep breaking it down into smaller files.

74
00:03:46,800 --> 00:03:52,200
Maybe you have a feature folders, you'll have like a users folder, and there you'll have the mutations

75
00:03:52,200 --> 00:03:57,780
file for just the users and then you'll have a jobs folder where you'll have the jobs mutations, right?

76
00:03:58,020 --> 00:04:03,060
So at this juncture with the amount of actions, getters, mutations, etc. that we have, I think storing

77
00:04:03,060 --> 00:04:07,080
them across multiple files is a better step than storing them all in one file.

78
00:04:07,290 --> 00:04:12,030
But similarly, you basically will adjust your code base when you feel that it becomes necessary or

79
00:04:12,030 --> 00:04:14,340
when you feel that makes the code more readable.

80
00:04:14,610 --> 00:04:16,470
So I think this was a step that was good.

81
00:04:16,590 --> 00:04:21,450
I don't think it's now worth it to move these mutations to even smaller files.

82
00:04:21,690 --> 00:04:27,240
But as your code code base grows in size, as your view project expands, it may be absolutely reasonable

83
00:04:27,240 --> 00:04:27,750
to do so.

84
00:04:27,900 --> 00:04:32,250
So you can consult with your team, think about what works and what doesn't work, and continue refactoring

85
00:04:32,250 --> 00:04:32,820
like that.

86
00:04:33,210 --> 00:04:33,540
All right.

87
00:04:33,690 --> 00:04:37,680
So with that, we have completed our View X refactor, we have completed our test refactor.

88
00:04:37,830 --> 00:04:41,670
The last thing that we're going to do in the next lesson is fix up all of our components.

89
00:04:41,820 --> 00:04:42,630
So I will see you there.
