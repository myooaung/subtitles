1
00:00:00,800 --> 00:00:01,640
Okay.

2
00:00:01,640 --> 00:00:08,240
So now that we have a better understanding of how slots work, we can provide as much dynamic content

3
00:00:08,240 --> 00:00:12,590
here as we want to populate the internals of our accordion.

4
00:00:12,920 --> 00:00:19,940
So let's begin by building out some of the template that we're going to need for our check boxes for

5
00:00:19,940 --> 00:00:25,430
our collection of organizations at the user will be able to select in order to eventually filter the

6
00:00:25,430 --> 00:00:26,900
jobs on the right hand side.

7
00:00:27,290 --> 00:00:30,950
So in here as a slot, I'm going to provide a div.

8
00:00:32,110 --> 00:00:34,510
And I'm going to immediately assign it a tailwind in class.

9
00:00:34,810 --> 00:00:36,970
I'm going to give it some margin on the top.

10
00:00:36,970 --> 00:00:44,980
So I'll add an empty five Tailwind class and then in here I'll use the field set element to specify

11
00:00:44,980 --> 00:00:47,770
that I'm creating a field of possible choices.

12
00:00:48,160 --> 00:00:50,740
And here I'm going to define an unordered list.

13
00:00:50,740 --> 00:00:54,100
So a u, l and this is also going to have some classes.

14
00:00:54,100 --> 00:01:00,130
I'm going to make this a Flexbox and I want the children to span in a row direction.

15
00:01:00,280 --> 00:01:03,220
So I want to apply the flex row tail in class.

16
00:01:03,430 --> 00:01:07,540
And finally, if there's not enough room, I want to make sure the flex children wrap.

17
00:01:07,780 --> 00:01:10,030
So I'm going to add the flex wrap class.

18
00:01:11,610 --> 00:01:12,090
All right.

19
00:01:12,470 --> 00:01:19,170
And here we're going to define list items and each list item will represent one organization and equivalently,

20
00:01:19,170 --> 00:01:25,530
one checks checkbox at the user can check to select an organization by which they would like to filter

21
00:01:25,530 --> 00:01:26,040
the jobs.

22
00:01:26,340 --> 00:01:33,660
Now, if I open up the debate JSON file as a reminder, every single job here is going to have an organization

23
00:01:33,660 --> 00:01:37,980
key and that is going to have the name of the organization, in this case of you and me.

24
00:01:38,310 --> 00:01:43,500
And ultimately what we want to do is iterate over all of these organizations, come up with a unique

25
00:01:43,500 --> 00:01:46,230
list of them and create a checkbox for each one.

26
00:01:46,590 --> 00:01:50,100
But before we get there, I'd like to come up with a simpler implementation.

27
00:01:50,250 --> 00:01:55,290
So I'm simply going to hard code a bunch of organizations in my job that are sidebar and give each one

28
00:01:55,290 --> 00:01:59,250
a checkbox, and later on we'll refactor to make that content more dynamic.

29
00:01:59,610 --> 00:02:00,240
So for now.

30
00:02:01,320 --> 00:02:03,500
I'm just going to create a list item.

31
00:02:03,510 --> 00:02:04,770
I'm going to give it some classes.

32
00:02:05,370 --> 00:02:07,820
Let's make it occupy half the width of the parent.

33
00:02:07,830 --> 00:02:12,690
So I'm going to do the w-1 divided by two a class.

34
00:02:12,700 --> 00:02:15,840
This is actually a class name and it's totally valid to have a C.

35
00:02:15,840 --> 00:02:19,020
S class with a dash and a slash totally valid characters.

36
00:02:19,230 --> 00:02:23,040
You can see that this is a tailwind class that applies a with a 50%.

37
00:02:23,250 --> 00:02:28,800
So we're going to have two checkboxes on every line essentially or every row in our Flexbox.

38
00:02:29,040 --> 00:02:31,620
And I also want to assign a height to this list item.

39
00:02:31,800 --> 00:02:38,070
So I'm going to use the H eight class that is going to apply a height of 32 pixels inside the list item.

40
00:02:39,120 --> 00:02:44,670
I'm going to have an input, a self-closing input as well as a label where I'm going to have the text

41
00:02:44,670 --> 00:02:46,530
for that checkbox.

42
00:02:46,740 --> 00:02:47,100
All right.

43
00:02:47,370 --> 00:02:51,870
So for my input, I'm going to give it an ID of a organization.

44
00:02:51,870 --> 00:02:54,300
So let's start with a sample one like view two.

45
00:02:54,690 --> 00:02:58,680
And by the way, all of my organizations are terrible view puns.

46
00:02:58,950 --> 00:03:03,810
So I apologize if that is offensive, but that's how I came up with the various organizations in our

47
00:03:03,810 --> 00:03:05,910
DB that Jason found Soviet you.

48
00:03:06,210 --> 00:03:10,650
We have to make sure that we specify that this input is of type checkbox.

49
00:03:10,650 --> 00:03:12,930
It's not a regular text input, it's a checkbox.

50
00:03:13,230 --> 00:03:17,790
And then I'm going to apply a Tailwind class and it's going to be am r three.

51
00:03:17,790 --> 00:03:19,980
M.r, of course stands for margin, right?

52
00:03:20,150 --> 00:03:23,130
So it's going to create a little bit of spacing between the input and the label.

53
00:03:23,460 --> 00:03:28,560
And in the label we're going to provide the four attribute and this should match the ID above.

54
00:03:28,830 --> 00:03:30,960
This is just common HTML practice.

55
00:03:31,170 --> 00:03:37,200
So here I'm going to write YouTube and for the text, for the actual label text, I'm similarly going

56
00:03:37,200 --> 00:03:38,370
to have YouTube.

57
00:03:39,210 --> 00:03:39,570
All right.

58
00:03:39,960 --> 00:03:44,550
So what I'm going to do here is I'm going to copy this list item and I'm going to paste it three times

59
00:03:44,550 --> 00:03:49,710
below because I want four checkboxes for four organizations and they're all basically going to have

60
00:03:49,710 --> 00:03:51,390
the same set up, the same style.

61
00:03:51,750 --> 00:03:54,000
So right here I'm going to select YouTube.

62
00:03:54,360 --> 00:04:01,740
And in this code on a mac, I can do command D to select the subsequent occurrences of that same sequence

63
00:04:01,740 --> 00:04:02,220
of text.

64
00:04:02,220 --> 00:04:07,110
I believe on a windows it would be controlled D but I'm not certain and I'm just going to select these

65
00:04:07,110 --> 00:04:09,150
three and replace them with between.

66
00:04:10,550 --> 00:04:16,080
View and meet, which is my next organization, in fact, because this will not fit on the line.

67
00:04:16,100 --> 00:04:19,900
I'm actually going to cut this down a little bit to just be between view.

68
00:04:20,660 --> 00:04:22,130
This is just for the sake of example.

69
00:04:22,130 --> 00:04:23,540
So this is totally fine for now.

70
00:04:24,020 --> 00:04:24,290
All right.

71
00:04:24,290 --> 00:04:29,840
For the next one below, I'm going to replace YouTube here, here and here with ET View.

72
00:04:30,200 --> 00:04:30,590
Brutal.

73
00:04:32,420 --> 00:04:32,990
All right.

74
00:04:33,290 --> 00:04:38,030
And finally, for the last one, I'm going to select this occurrence of YouTube as well as this one

75
00:04:38,030 --> 00:04:38,570
and this one.

76
00:04:38,720 --> 00:04:42,820
And our final organization is View and a Half Man.

77
00:04:43,670 --> 00:04:47,680
So basically what I've done here is create an unordered list of four list items.

78
00:04:47,690 --> 00:04:53,180
Each one is a checkbox with a corresponding text label all within this field set and within his div.

79
00:04:53,360 --> 00:05:00,860
And again, because we provided this complete bundle of HTML within our opening and closing accordion

80
00:05:01,460 --> 00:05:06,920
component tags, what that means is that view is going to copy all of this content and inject it right

81
00:05:06,920 --> 00:05:11,150
here where we have our slot component within our accordion.

82
00:05:11,300 --> 00:05:11,510
All right.

83
00:05:11,510 --> 00:05:13,670
So we're basically doing this behind the scenes.

84
00:05:13,910 --> 00:05:14,180
All right.

85
00:05:14,480 --> 00:05:15,710
Let me bring this back to slot.

86
00:05:15,740 --> 00:05:17,390
Let me save this and go to our browser.

87
00:05:18,770 --> 00:05:23,120
And we should start to see the beginnings of our user story take shape.

88
00:05:23,390 --> 00:05:26,390
So right here we have our organizations, we have accordion.

89
00:05:26,510 --> 00:05:28,390
When I click this, there we go.

90
00:05:28,400 --> 00:05:31,070
We're starting to see we have four checkboxes here.

91
00:05:31,280 --> 00:05:32,720
We can click on and off.

92
00:05:32,900 --> 00:05:34,550
We have four organizations.

93
00:05:34,670 --> 00:05:40,090
And obviously the goal is whenever we select one of these, we want the jobs on the right to be filtered.

94
00:05:40,310 --> 00:05:44,810
And the good news about that, of course, is that we have the organization name right here in line

95
00:05:44,960 --> 00:05:47,000
here is view and me, here is YouTube.

96
00:05:47,000 --> 00:05:47,930
Here is you can do it.

97
00:05:48,140 --> 00:05:51,350
So the idea is when we select these, we obviously want these to be.

98
00:05:52,450 --> 00:05:54,250
Filter down, that is the user feature.

99
00:05:54,520 --> 00:05:58,630
And again, we are not actually accounting for the real world organizations.

100
00:05:58,630 --> 00:06:03,340
We have, for example, we don't have you can do it yet, but that is because we are hard coding these

101
00:06:03,340 --> 00:06:04,390
checkboxes right now.

102
00:06:04,540 --> 00:06:09,880
Later on, we're going to dynamically render as many checkboxes as we need, depending on the number

103
00:06:09,880 --> 00:06:12,820
of unique organizations we get in our API response.

104
00:06:12,820 --> 00:06:14,620
But we'll take care of that a little bit later.

105
00:06:14,920 --> 00:06:15,250
All right.

106
00:06:15,430 --> 00:06:17,470
So with that, I will see you in the next lesson.
