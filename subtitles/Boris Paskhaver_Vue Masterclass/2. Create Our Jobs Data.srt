1
00:00:00,540 --> 00:00:01,140
Okay.

2
00:00:01,140 --> 00:00:09,420
So attached to this lesson as a resource, you'll find a DB that JSON file and DB is short for database.

3
00:00:09,660 --> 00:00:15,630
So what I'd like for you to do is to download that DB JSON file and place it at the top level of your

4
00:00:15,630 --> 00:00:16,800
job search project.

5
00:00:17,100 --> 00:00:20,670
So you can see right here, I have my file explorer open in this code.

6
00:00:20,790 --> 00:00:25,920
And here is where I have my DB, that JSON file alongside all of the other configuration files.

7
00:00:26,100 --> 00:00:26,400
All right.

8
00:00:26,670 --> 00:00:30,660
So go ahead and download that, put that into your project and then it will take a quick minute to talk

9
00:00:30,660 --> 00:00:32,730
about exactly what this file is doing for us.

10
00:00:33,030 --> 00:00:39,030
So this is going to serve as our data for our mock back, and this is what JSON server makes it super

11
00:00:39,030 --> 00:00:45,270
easy to do, and that is to define a fictional endpoint on a server and then have our app hit that endpoint

12
00:00:45,270 --> 00:00:48,030
and just get back data in the form of JSON.

13
00:00:48,330 --> 00:00:51,120
So let me collapse this file so you can see exactly what's going on.

14
00:00:51,840 --> 00:00:57,210
You'll notice that in this file, which is more than 2500 lines, there is just one top level key,

15
00:00:57,210 --> 00:00:59,310
which is jobs set to an array.

16
00:00:59,550 --> 00:01:04,560
And what this key is, is the endpoint that we want to establish on our Jason server.

17
00:01:04,830 --> 00:01:08,610
So our JSON server is going to be running in our terminal on a separate port.

18
00:01:08,760 --> 00:01:14,580
Our view app is running an 8080 while JSON server is going to run on our port 3000.

19
00:01:14,760 --> 00:01:18,900
So you can almost think of it like two different apps running on our computer at the same time.

20
00:01:19,050 --> 00:01:23,010
And our goal is for The View app to hit the JSON server app, right.

21
00:01:23,370 --> 00:01:28,590
And so the key that is here that defines the endpoint that we want to have on that server.

22
00:01:28,710 --> 00:01:34,380
So because our JSON server is running on localhost 3000, we're going to be able to go to local host

23
00:01:34,380 --> 00:01:36,420
3000 slash jobs.

24
00:01:36,540 --> 00:01:42,210
And when we do that, we're going to get this response back, this array of tons of data representing

25
00:01:42,210 --> 00:01:42,810
our jobs.

26
00:01:43,110 --> 00:01:44,640
So this name is totally up to us.

27
00:01:44,650 --> 00:01:48,540
For example, if we had users here, that would make our end point slash users.

28
00:01:48,540 --> 00:01:52,200
And if we had, you know, nonsense here, that would make our End Point slash nonsense.

29
00:01:52,380 --> 00:01:56,280
And you can have as many endpoints as you want on your fake server.

30
00:01:57,000 --> 00:01:58,710
So I'm going to change this back to jobs.

31
00:01:59,160 --> 00:02:04,050
And then of course, what this will return is an array of 100 objects and each one represents a simple

32
00:02:04,050 --> 00:02:04,380
job.

33
00:02:04,530 --> 00:02:08,280
And we're going to be using these objects to render job listings in our app.

34
00:02:08,670 --> 00:02:12,900
Just to quickly walk you through what all of these attributes are, properties are on a job.

35
00:02:12,990 --> 00:02:14,970
We have a unique ID for the job.

36
00:02:14,970 --> 00:02:15,780
It's identifier.

37
00:02:16,020 --> 00:02:16,920
We have its title.

38
00:02:17,250 --> 00:02:19,720
We have the organization and organization assault.

39
00:02:19,740 --> 00:02:23,130
So sort of like a small sub company within the larger company.

40
00:02:23,280 --> 00:02:29,010
So Google has something like six or seven smaller companies within it that you can filter when you look

41
00:02:29,010 --> 00:02:29,970
for jobs in their site.

42
00:02:29,980 --> 00:02:33,120
Similar idea here you have the degree requirement.

43
00:02:33,300 --> 00:02:38,160
For example, master's or bachelors, you have the job type, for example, intern full time, part

44
00:02:38,160 --> 00:02:43,680
time, etc. You have locations which is actually going to be an array of one or more strings, and each

45
00:02:43,680 --> 00:02:45,390
string represents a city.

46
00:02:45,570 --> 00:02:49,200
So these are the possible cities where you can have this job or applied to this job.

47
00:02:49,560 --> 00:02:54,420
And then we have two arrays, one for a minimum qualifications and the other for preferred qualifications.

48
00:02:54,720 --> 00:02:59,790
Now the preferred qualifications array is really only going to be used on an individual job page.

49
00:03:00,060 --> 00:03:05,010
So on the Google career site, if you click into a job, you'll see both the minimum qualifications

50
00:03:05,010 --> 00:03:06,060
and the preferred ones.

51
00:03:06,180 --> 00:03:11,550
We're not going to be showing these preferred qualifications on the page where we see all the jobs,

52
00:03:11,550 --> 00:03:14,610
but they're here in case you want to display information for a single job.

53
00:03:15,620 --> 00:03:19,790
Then similarly we have description and this is just going to be a couple of sentences about the job

54
00:03:19,940 --> 00:03:21,980
and we're going to add this together to the job listing.

55
00:03:22,190 --> 00:03:27,050
And then finally they added it, which reflects the fictional date that this job was added to our job

56
00:03:27,200 --> 00:03:27,620
service.

57
00:03:27,920 --> 00:03:31,390
And we basically have 100 objects like this in our jobs array.

58
00:03:31,400 --> 00:03:38,600
So there we can see A2, 83, 84, 85 all the way to 100, and they each have all this random data.

59
00:03:38,600 --> 00:03:42,950
So I make it make it really easy for you to kind of have the sample data to work with.

60
00:03:42,950 --> 00:03:44,630
We don't have to generate any data.

61
00:03:44,630 --> 00:03:46,580
We don't have to create 100 job listings on our page.

62
00:03:46,730 --> 00:03:51,050
We're going to be hitting this fictional back and we're going to have it return this array of jobs,

63
00:03:51,140 --> 00:03:54,560
and then we're going to render 100 job listings on the screen from it.

64
00:03:54,740 --> 00:03:55,580
That's all there is to it.

65
00:03:55,580 --> 00:03:57,770
Jason Stavros is going to make that super easy for us.

66
00:03:58,070 --> 00:04:00,710
So the next thing we have to do is to set up a Jason server.

67
00:04:00,860 --> 00:04:03,890
And in order to do that, we want to go to our package JSON file.

68
00:04:04,610 --> 00:04:07,760
And what we're going to need to add is a script to launch Jason Server.

69
00:04:07,910 --> 00:04:11,990
Remember, it is a separate library, it is a totally different ecosystem from Vue.

70
00:04:12,200 --> 00:04:16,310
And so we need this thing running in the background so that the View app can hit this server.

71
00:04:16,640 --> 00:04:21,110
So what we're going to do is add a new key called backend and this name is up to us.

72
00:04:21,110 --> 00:04:22,220
I'm just going to call it backend.

73
00:04:22,220 --> 00:04:27,560
So this means we're going to run NPM, run back in from a terminal and the command we want to run is

74
00:04:27,560 --> 00:04:27,920
this.

75
00:04:28,100 --> 00:04:32,810
First we're going to use JSON dash server that is now available within our project because we installed

76
00:04:32,810 --> 00:04:33,710
it in the previous lesson.

77
00:04:34,010 --> 00:04:40,040
And then I want to add a special flag here, which is Dash, Dash watch very much like the just watch

78
00:04:40,040 --> 00:04:40,310
flag.

79
00:04:40,310 --> 00:04:45,920
What this will do is it's going to monitor our DB that Jason filed for changes so that if we update

80
00:04:45,920 --> 00:04:52,880
that file this will automatically update as well so that the server relaunches and we get the most up

81
00:04:52,880 --> 00:04:56,990
to date data so we don't have to go back and relaunch Jason's server from the terminal every time we

82
00:04:56,990 --> 00:04:57,530
make a change.

83
00:04:57,530 --> 00:04:59,720
DB Jason, it will be done automatically.

84
00:04:59,960 --> 00:05:03,830
And then the final thing we need to add here is just the name of the file that is going to provide the

85
00:05:03,830 --> 00:05:04,910
data to Jason Server.

86
00:05:05,000 --> 00:05:07,340
And that of course is simply DB that JSON.

87
00:05:07,520 --> 00:05:11,810
And since it is in the same directory, we can type it out like so and that will work out of the box.

88
00:05:12,140 --> 00:05:12,410
All right.

89
00:05:12,410 --> 00:05:15,920
So that says that everything we need in the very next lesson, we're going to get the server up and

90
00:05:15,920 --> 00:05:19,820
running and we're going to actually make this request in the browser so you can see exactly how it works.

91
00:05:20,000 --> 00:05:22,970
So lots of fun to look forward to and I will see you in the next lesson.
