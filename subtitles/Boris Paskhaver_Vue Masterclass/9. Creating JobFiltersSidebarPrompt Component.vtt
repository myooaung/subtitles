WEBVTT
1
00:00:00.430 --> 00:00:01.150
Okay.

2
00:00:01.160 --> 00:00:06.280
So after our refactor, the job filter sidebar component is looking pretty good.

3
00:00:06.610 --> 00:00:08.950
You can see this section especially is pretty simple.

4
00:00:09.310 --> 00:00:14.920
And if I scroll down to the set of method, you'll see that all we're setting up here is the connection

5
00:00:14.920 --> 00:00:19.000
to the View Store, as well as this function which runs on click.

6
00:00:19.210 --> 00:00:20.560
Which commits this mutation.

7
00:00:20.800 --> 00:00:25.540
And of course, this logic all lives up here in this section right here.

8
00:00:25.990 --> 00:00:32.110
Well, I think we can refactor this component even further by moving this logic and its corresponding

9
00:00:32.110 --> 00:00:35.170
setup logic as well into its own add new component.

10
00:00:35.440 --> 00:00:40.600
Once again, following the exact same principles as we had here, this will allow us to test just this

11
00:00:40.600 --> 00:00:46.090
logic and the click handler, for example, in isolation while allowing a job filter sidebar almost

12
00:00:46.090 --> 00:00:51.430
to be like this top level aggregator component or composite component that simply gets together all

13
00:00:51.430 --> 00:00:56.560
of these other smaller components and simply puts them all rendered on the screen, you know, above

14
00:00:56.560 --> 00:00:57.310
and below each other.

15
00:00:58.030 --> 00:01:03.790
So I proposed that we extract this chunk of logic out, and I'm going to call that new component job

16
00:01:03.790 --> 00:01:08.680
filters sidebar prompt, because of course it prompts the user to clear the filters.

17
00:01:09.010 --> 00:01:15.280
So right here I'm going to open my file explorer and in my source components, job results, job filter,

18
00:01:15.280 --> 00:01:16.210
sidebar directory.

19
00:01:16.420 --> 00:01:18.310
I'm going to create a new view component.

20
00:01:18.580 --> 00:01:20.620
I'm going to call it job filters.

21
00:01:20.620 --> 00:01:23.440
Sidebar Prompt Dot View.

22
00:01:24.820 --> 00:01:26.590
And I'm going to drag it over here on the right.

23
00:01:27.530 --> 00:01:30.200
And of course, I'm going to begin with my template right here.

24
00:01:31.260 --> 00:01:33.720
And inside the template I'm going to cut and paste.

25
00:01:33.990 --> 00:01:37.950
Actually, for now let's copy and paste because I always want to keep my original work before I replace

26
00:01:37.950 --> 00:01:38.100
it.

27
00:01:38.490 --> 00:01:40.710
Let me copy and paste this section right here.

28
00:01:40.920 --> 00:01:46.170
So within our section tag the starter div all the way to this div above the first first accordion.

29
00:01:46.440 --> 00:01:49.170
I'm going to take that and I'm going to paste it right here in this template.

30
00:01:50.210 --> 00:01:50.510
All right.

31
00:01:50.810 --> 00:01:56.420
And for the logic down below, we can, of course, copy and paste a lot of the code from here because

32
00:01:56.420 --> 00:01:58.100
it's eventually going to go away from here.

33
00:01:58.430 --> 00:02:02.300
So right here, I'm going to begin with our script tag set to a lang of TSA.

34
00:02:03.050 --> 00:02:03.410
All right.

35
00:02:03.620 --> 00:02:05.210
And then what are we going to actually need?

36
00:02:05.660 --> 00:02:08.750
We're going to have the click handler right here.

37
00:02:08.780 --> 00:02:10.790
The clear user job for their selections.

38
00:02:10.970 --> 00:02:14.270
So that function is going to remain and that function is going to commit a mutation.

39
00:02:14.540 --> 00:02:16.850
So we are going to need the store and the key.

40
00:02:17.000 --> 00:02:19.070
And we're also, of course, going to need defined component.

41
00:02:19.340 --> 00:02:22.550
So let me copy these three imports right here.

42
00:02:24.270 --> 00:02:26.680
We're also going to need the actual action button component.

43
00:02:26.700 --> 00:02:28.380
We're using it right here in line number five.

44
00:02:28.590 --> 00:02:30.570
So I'm going to copy the action by import.

45
00:02:31.230 --> 00:02:37.140
We do not need the accordion and we do not need any of these individual filter components.

46
00:02:37.380 --> 00:02:39.300
We are going to need this mutation right here.

47
00:02:39.360 --> 00:02:40.110
So let's take that.

48
00:02:41.460 --> 00:02:42.480
And put it right here.

49
00:02:42.840 --> 00:02:48.960
And then, of course, we'll start with our export default here and we will invoke the defined component

50
00:02:48.960 --> 00:02:55.320
function passing and object will provide our component with a name and that of course will be job filters.

51
00:02:55.320 --> 00:02:56.580
Sidebar prompt.

52
00:02:57.650 --> 00:03:02.360
Then for our components, we need to, of course register our action button component.

53
00:03:02.360 --> 00:03:04.580
That is the one child component that we are rendering.

54
00:03:04.940 --> 00:03:09.320
And then of course following the composition API, we're going to define a setup method.

55
00:03:10.870 --> 00:03:14.200
And the heart of this setup method is basically going to be everything we have here.

56
00:03:14.440 --> 00:03:19.540
So I think we're going to be able to get away with simply cutting and pasting all of this code into

57
00:03:19.540 --> 00:03:20.410
this setup method.

58
00:03:21.460 --> 00:03:26.710
Right, because we're going to use the use store composable to get access to the view store.

59
00:03:27.100 --> 00:03:27.350
Right.

60
00:03:27.370 --> 00:03:30.070
Then we're going to define this click handler to commit a mutation.

61
00:03:30.070 --> 00:03:35.050
We're going to provide the name of the mutation right here through the import constant.

62
00:03:35.260 --> 00:03:39.940
And then we're going to make sure the returned object has that click handler, which is attached right

63
00:03:39.940 --> 00:03:40.210
here.

64
00:03:40.480 --> 00:03:41.200
That's all we need.

65
00:03:41.560 --> 00:03:44.770
So with that, we are good to save this component and then incorporate it.

66
00:03:45.160 --> 00:03:47.920
So right here, what I'm going to do is get rid of the set of method.

67
00:03:48.970 --> 00:03:52.540
I also no longer need this mutation name, this constant.

68
00:03:52.870 --> 00:03:56.230
I also no longer need you store and key, right?

69
00:03:56.590 --> 00:04:01.270
And so now what I need to do is import my brand new component, which I just created.

70
00:04:01.630 --> 00:04:06.550
So how about right here in between all my other ones, I will import my new.

71
00:04:07.770 --> 00:04:10.890
Job filters, sidebar, prompt component.

72
00:04:11.160 --> 00:04:17.280
And that is going to come from source components, job results, job filter, sidebar, jobs, other

73
00:04:17.280 --> 00:04:20.340
sidebar prompt to view and remember as well.

74
00:04:20.340 --> 00:04:24.630
We need to register it right here, so I'm going to add it to my components object.

75
00:04:25.830 --> 00:04:27.120
And what does that allow me to do?

76
00:04:27.390 --> 00:04:28.950
It allows me to use it in my template.

77
00:04:29.190 --> 00:04:32.010
And where are we going to use this in our template right here.

78
00:04:32.220 --> 00:04:36.810
So instead of this whole big div, we're now going to replace it because we've captured that exact logic

79
00:04:36.810 --> 00:04:40.470
and that exact piece of template right here in a much smaller component.

80
00:04:40.770 --> 00:04:43.290
So I'm going to simply render with a self-closing tag.

81
00:04:43.620 --> 00:04:48.630
Job filters, sidebar prompt provide that closing tag and the closing bracket.

82
00:04:48.810 --> 00:04:49.770
And there we go.

83
00:04:50.040 --> 00:04:50.760
So save that.

84
00:04:52.360 --> 00:04:53.410
And that should do it.

85
00:04:53.590 --> 00:04:56.170
So I think now is a good time to check in on a browser.

86
00:04:56.200 --> 00:04:59.560
You can also see our tests for jobs on the sidebar are still passing.

87
00:04:59.560 --> 00:05:01.840
That's the test that simply checks that everything exists.

88
00:05:02.290 --> 00:05:06.190
So everything should work the exact same way in the browser if I transition to Chrome.

89
00:05:06.820 --> 00:05:08.200
Let me refresh this page.

90
00:05:08.740 --> 00:05:12.820
The action button component has been registered but not used in job filter sidebar.

91
00:05:13.390 --> 00:05:14.470
Let's see here.

92
00:05:15.130 --> 00:05:15.610
That's right.

93
00:05:15.610 --> 00:05:20.470
We no longer need an action button in jobs with the sidebar because it's now here so we can actually

94
00:05:20.470 --> 00:05:23.500
move this import and remove line 42 as well.

95
00:05:24.980 --> 00:05:27.170
That action button now lives in our prompt component.

96
00:05:27.380 --> 00:05:29.420
So with that, I can transition back to my browser.

97
00:05:29.750 --> 00:05:32.720
All right, so everything should be working.

98
00:05:32.720 --> 00:05:33.830
Here is our degrees.

99
00:05:33.830 --> 00:05:35.900
Here's our job types, here's our organizations.

100
00:05:35.900 --> 00:05:41.840
If I click them and select a couple here as well and here as well, and in clear filters, everything

101
00:05:41.840 --> 00:05:42.500
is still working.

102
00:05:42.800 --> 00:05:49.970
And you'll notice if I open up my view devtools and go to view and I look actually within my job results

103
00:05:49.970 --> 00:05:54.680
view the job filters sidebar here is the prompt, right and then here is the accordion.

104
00:05:54.680 --> 00:05:57.140
And within each accordion we have the respective components.

105
00:05:57.140 --> 00:06:03.140
So here is job filter sidebar degrees, here is job filter, sidebar, job types and organizations as

106
00:06:03.140 --> 00:06:04.670
well as well as our prompt, right.

107
00:06:04.670 --> 00:06:09.920
So the kind of beautiful part as we've isolated a lot of that set up logic such as these helper functions

108
00:06:09.920 --> 00:06:15.950
instead up into much smaller components here you can see for example in degrees we have that logic for

109
00:06:15.950 --> 00:06:20.120
the composable that we're using in there and and the mutation that we want there.

110
00:06:20.270 --> 00:06:25.070
And it's totally isolated from this filtering component and this filtering component as well.

111
00:06:25.520 --> 00:06:25.760
All right.

112
00:06:25.760 --> 00:06:27.500
So that moves things into a much better direction.

113
00:06:27.500 --> 00:06:31.310
And job filter sidebar can be a very, very simple, elegant component.

114
00:06:31.610 --> 00:06:32.630
As you can see right here.

115
00:06:32.630 --> 00:06:34.160
It doesn't even have a setup method.

116
00:06:34.340 --> 00:06:38.110
It just imports five other components and utilizes them in the correct order.

117
00:06:38.120 --> 00:06:40.220
And that keeps the logic not too complex.

118
00:06:40.220 --> 00:06:40.490
Right.

119
00:06:40.700 --> 00:06:45.230
If we think about all of these styles as basically being just like one line of scissors and all this

120
00:06:45.230 --> 00:06:48.440
component is is really about like 15, 20 lines of code.

121
00:06:48.620 --> 00:06:50.270
All it's pretty easy to reason about.

122
00:06:50.270 --> 00:06:52.220
We just have a section that adds a little bit of padding.

123
00:06:52.400 --> 00:06:56.830
We're rendering all of these smaller components that are communicating to a future developer what this

124
00:06:56.840 --> 00:06:57.290
is, right?

125
00:06:57.470 --> 00:06:59.090
This is the prompt to do something.

126
00:06:59.240 --> 00:07:02.450
This is the filtering for degrees, for job types, for organizations.

127
00:07:02.630 --> 00:07:07.700
Each one is nested within a collapsible accordion with a different header, etc. So it reads very cleanly

128
00:07:08.330 --> 00:07:12.440
and the setup method is also nonexistent, which is the easiest thing to understand.

129
00:07:12.890 --> 00:07:13.190
All right.

130
00:07:13.190 --> 00:07:15.470
So with that, that's all there is to cover in this lesson.

131
00:07:15.470 --> 00:07:17.000
And I will see you in the next one.
