1
00:00:00,550 --> 00:00:01,450
All right.

2
00:00:01,450 --> 00:00:07,450
So let's continue on with our original goal of replacing the main native components local state.

3
00:00:07,480 --> 00:00:15,010
This is logged in data property with a full reference to the IS logged in property of our View X Store.

4
00:00:15,340 --> 00:00:16,490
So here's how that's going to work.

5
00:00:16,510 --> 00:00:21,730
First up, for this example computed property, we can remove the former reference we have right here.

6
00:00:21,730 --> 00:00:22,630
We no longer need it.

7
00:00:23,320 --> 00:00:27,910
And then the next thing I'm going to do is change this property.

8
00:00:27,910 --> 00:00:32,230
Instead of calling an example I'm going to call it is logged in.

9
00:00:33,370 --> 00:00:35,740
So by default this is going to create a conflict.

10
00:00:35,740 --> 00:00:40,870
We can see a a red squiggly appear here, but you probably can anticipate what it is is going to tell

11
00:00:40,870 --> 00:00:46,690
us hey you have a duplicated key of is logged in because we have it is logged in computed property and

12
00:00:46,690 --> 00:00:48,550
we also have an is logged in data property.

13
00:00:48,670 --> 00:00:53,360
Of course our goal is to remove this so we can go ahead and remove that slice of data.

14
00:00:53,410 --> 00:00:56,020
As soon as you do that, you'll see that the warning will go away.

15
00:00:56,440 --> 00:01:02,260
And if we scroll up, this syntax is actually going to take us 50% of the way there because we have

16
00:01:02,260 --> 00:01:04,330
a computed property called is logged in.

17
00:01:04,600 --> 00:01:10,060
So anywhere where we are using that former data property right here, for example for our profile image

18
00:01:10,300 --> 00:01:15,520
and right here for our subnet, that's still going to be valid syntax because we can provide a computed

19
00:01:15,520 --> 00:01:21,880
property to the VFR directive and is logged in is going to be a computed property that references our

20
00:01:21,880 --> 00:01:27,400
view next door and the is logged in property which is going to give a boolean of true or false.

21
00:01:27,610 --> 00:01:31,690
So at the end of the day, View is still going to substitute a boolean right here.

22
00:01:31,870 --> 00:01:38,350
The big difference of course is that is logged in is now coming from the view store and not from a local

23
00:01:38,350 --> 00:01:40,030
is logged in data property.

24
00:01:40,180 --> 00:01:43,540
So the good news is we don't actually have to change anything in our template.

25
00:01:43,540 --> 00:01:44,560
This is great.

26
00:01:44,770 --> 00:01:49,060
We are now correctly reading from the store, we're getting a boolean and we're providing it to our

27
00:01:49,090 --> 00:01:53,380
template in the way the VRF directive is meant to be used and that takes us halfway there.

28
00:01:53,680 --> 00:01:58,360
The only other factor we have to deal with, of course, is that when the user presses the action button

29
00:01:58,360 --> 00:02:04,630
right here, we, we run the log in user method and here we can see the method defined below in methods

30
00:02:04,870 --> 00:02:05,830
and in log in user.

31
00:02:05,830 --> 00:02:11,650
We're still referencing our former data property called is logged in and this is not what we want.

32
00:02:11,800 --> 00:02:16,180
So in the very next lesson, we're going to swap our code here to complete the other half of the equation

33
00:02:16,450 --> 00:02:22,600
that when the user presses the action button we want to issue a mutation to our store that is going

34
00:02:22,600 --> 00:02:24,580
to update is logged in.

35
00:02:24,640 --> 00:02:26,590
We're going to see how to do that in the very next lesson.
