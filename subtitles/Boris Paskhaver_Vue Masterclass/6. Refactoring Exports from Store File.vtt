WEBVTT
1
00:00:00.180 --> 00:00:01.050
All right.

2
00:00:01.050 --> 00:00:04.010
So in this lesson, I'd like to do a quick refactor.

3
00:00:04.020 --> 00:00:09.600
As you might anticipate, the configuration object that we passed to create a store can get pretty large

4
00:00:09.600 --> 00:00:10.980
and pretty hairy pretty quick.

5
00:00:11.250 --> 00:00:16.290
So what I like to do is to separate its elements out into separate constants throughout this file.

6
00:00:16.620 --> 00:00:21.720
So what I'm going to do is I'm going to begin by defining a constant here that I'm also going to export

7
00:00:22.050 --> 00:00:23.520
and it's going to be called a state.

8
00:00:24.390 --> 00:00:28.410
And state, of course, is just going to be this function right here, and I'm going to make it an arrow

9
00:00:28.410 --> 00:00:28.800
function.

10
00:00:29.010 --> 00:00:31.020
So I'm going to copy this right here.

11
00:00:31.410 --> 00:00:36.450
I'm going to put it right here, and I'm going to make it an arrow function in line just by adding that

12
00:00:36.450 --> 00:00:37.320
symbol right here.

13
00:00:37.560 --> 00:00:41.790
So now state is a arrow function that returns my next store.

14
00:00:41.790 --> 00:00:46.200
State Okay, so let me go ahead and remove this comma that should get prettier to work.

15
00:00:46.380 --> 00:00:50.700
And of course here we no longer need to use this entire function.

16
00:00:50.700 --> 00:00:56.190
We can just reference state and use that helpful feature of F6 where it's going to reference this arrow

17
00:00:56.190 --> 00:00:56.910
function right here.

18
00:00:57.240 --> 00:01:01.620
Similarly for mutations, I'm going to say export constant mutations.

19
00:01:01.620 --> 00:01:04.500
I'm going to extract that object to its own separate, constant.

20
00:01:04.710 --> 00:01:09.920
And this is going to be a JavaScript object and I can copy everything I have right here and I'm going

21
00:01:09.920 --> 00:01:12.540
to paste it like so, and that is totally valid.

22
00:01:12.540 --> 00:01:14.970
We're still going to have one mutation called log in user.

23
00:01:15.180 --> 00:01:20.190
Every single mutation we write is still going to accept a single argument of the store state.

24
00:01:20.200 --> 00:01:25.220
Totally fine, even if we define it in a separate object, which of course allows me here to use elastic

25
00:01:25.270 --> 00:01:27.570
syntax and just make this mutations.

26
00:01:27.570 --> 00:01:27.840
All right.

27
00:01:28.110 --> 00:01:33.030
Just a little bit of a quick refactor so we can separate these different elements that go into our configuration

28
00:01:33.030 --> 00:01:34.740
object for the create store function.

29
00:01:35.070 --> 00:01:36.390
I will see you in the next lesson.
