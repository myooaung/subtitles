WEBVTT
1
00:00:00.530 --> 00:00:01.520
Okay.

2
00:00:01.520 --> 00:00:08.450
So our next feature is going to be allowing the user to filter jobs by both organizations and job types.

3
00:00:08.840 --> 00:00:13.490
So what I'm going to do is follow a very similar protocol to what we did in the previous section.

4
00:00:13.670 --> 00:00:18.740
We can almost assume that we are a new employee and this is a brand new codebase to us, and we're just

5
00:00:18.740 --> 00:00:22.130
going to follow the existing practice that we see in here.

6
00:00:22.310 --> 00:00:24.020
Until we see a reason to change it.

7
00:00:24.200 --> 00:00:25.940
We're just going to stick with what we already have.

8
00:00:26.270 --> 00:00:31.520
So taking a look at our current store state, we have our jobs array where we're eventually going to

9
00:00:31.520 --> 00:00:36.230
get our API jobs and then we have a selected organizations array as well.

10
00:00:36.440 --> 00:00:42.290
I think it makes sense to add a new piece of state called Selected Job Types and that will reflect the

11
00:00:42.320 --> 00:00:45.980
job types that the user has selected from an essential component.

12
00:00:46.280 --> 00:00:50.750
We don't need anything else because remember we are probably going to use a getter in order to filter

13
00:00:50.750 --> 00:00:52.730
our jobs data right here.

14
00:00:52.970 --> 00:00:58.190
And we don't need any new state besides the user's selected job types.

15
00:00:58.190 --> 00:00:58.430
Right.

16
00:00:58.520 --> 00:01:01.430
It's still going to be fundamentally this array of 100 jobs.

17
00:01:01.580 --> 00:01:07.430
We're now just going to need to apply filter logic from both this array and our brand new selected job

18
00:01:07.430 --> 00:01:07.760
types.

19
00:01:07.760 --> 00:01:08.030
Right.

20
00:01:08.450 --> 00:01:12.950
So let's use TDD to allow us to add this new property to our view store state.

21
00:01:13.250 --> 00:01:18.110
So right here I have my state that test, that just file where we have our state tests and I'm going

22
00:01:18.110 --> 00:01:19.370
to add a new description here.

23
00:01:20.910 --> 00:01:22.380
It stores.

24
00:01:23.620 --> 00:01:29.590
Job types that the user would like to filter jobs by.

25
00:01:30.010 --> 00:01:31.690
So we don't even have the component yet.

26
00:01:31.690 --> 00:01:33.700
We're just going to wire up our UCS store first.

27
00:01:34.680 --> 00:01:34.900
Right?

28
00:01:34.930 --> 00:01:37.300
And once again, we can follow the protocol that we have above.

29
00:01:37.300 --> 00:01:40.990
We're going to invoke our state function, which you see on the left, and we're going to get back to

30
00:01:40.990 --> 00:01:44.920
the starting state of our view store later on.

31
00:01:44.920 --> 00:01:46.480
We're going to update it through mutations.

32
00:01:46.780 --> 00:01:51.880
And then I'm going to check the starting state for a property here where I get a chance to define whatever

33
00:01:51.880 --> 00:01:52.630
property I want.

34
00:01:52.990 --> 00:01:56.110
Well, let's keep a similar naming scheme.

35
00:01:56.110 --> 00:02:01.540
So if we have selected organizations, I think here we can do selected job types.

36
00:02:01.840 --> 00:02:07.660
That is going to be my expected property and I'm going to expect that to equal an array, basically

37
00:02:07.660 --> 00:02:10.660
the exact same thing as above for organizations, but now for job types.

38
00:02:10.990 --> 00:02:11.320
All right.

39
00:02:11.320 --> 00:02:13.420
So we're going to get our failure as expected.

40
00:02:13.840 --> 00:02:18.010
It's going to tell us, hey, I'm not able to get that property, which is why it's getting undefined

41
00:02:18.010 --> 00:02:19.000
instead of an empty array.

42
00:02:19.390 --> 00:02:26.290
So right here we can define selected job types, set that to an empty array, let predator do its work

43
00:02:26.530 --> 00:02:27.520
with a test run.

44
00:02:27.520 --> 00:02:28.390
And there we go.

45
00:02:28.390 --> 00:02:33.190
We now have a new slice of your store state to store the user's selected job types.

46
00:02:33.560 --> 00:02:37.210
The next lesson, we're going to add a mutation to receive those job types.
