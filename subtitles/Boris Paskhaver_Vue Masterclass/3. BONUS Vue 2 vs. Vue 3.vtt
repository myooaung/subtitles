WEBVTT
1
00:00:01.390 --> 00:00:02.230
All right.

2
00:00:02.240 --> 00:00:07.750
So in this quick lesson, we'll talk about the history of you, as well as some new features that were

3
00:00:07.750 --> 00:00:10.450
introduced in its latest version, 3.0.

4
00:00:10.810 --> 00:00:16.840
So the first major version of U 1.0 was released on October 26, 2015.

5
00:00:17.080 --> 00:00:21.730
So the framework itself is over half a decade old, and that is good news.

6
00:00:22.000 --> 00:00:25.450
That means to me that it's relatively stable and reliable.

7
00:00:25.600 --> 00:00:32.490
It's held up in popularity over time, and the developers have had lots of time to fix bugs, to optimize

8
00:00:32.490 --> 00:00:37.330
that view for speed and efficiency, to add new features, to listen to the community and get their

9
00:00:37.330 --> 00:00:39.040
feedback and apply it, etc..

10
00:00:39.580 --> 00:00:47.410
So Vue 2.0 was released about a year later in September 2016, and when I say 1.0 or 2.0, what I'm

11
00:00:47.410 --> 00:00:50.440
referring to is what we call the major version numbers.

12
00:00:50.650 --> 00:00:55.240
The major version number refers to the number before the decimal point.

13
00:00:55.240 --> 00:00:57.520
So one or two or three in this case.

14
00:00:57.970 --> 00:01:03.970
In comparison, the number after the decimal point is called the minor version number and typically

15
00:01:03.970 --> 00:01:09.550
the assumption we make in software, it's not always correct, but it's generally true is that whenever

16
00:01:09.550 --> 00:01:16.120
there is a new major version, a new greater number before the decimal point, that version typically

17
00:01:16.120 --> 00:01:23.860
introduces new features or breaking changes or removes features, etc. It represents a more major change

18
00:01:23.980 --> 00:01:26.650
to the core library or the core framework, right?

19
00:01:26.950 --> 00:01:28.810
In comparison, a minor version number.

20
00:01:28.810 --> 00:01:32.590
For example, there were a few versions like 2.1 and 2.2.

21
00:01:32.860 --> 00:01:38.830
Those typically add some smaller improvements that don't necessarily break any existing code right there

22
00:01:38.920 --> 00:01:41.200
minor because they're not as significant.

23
00:01:41.380 --> 00:01:47.590
While major version changes may introduce breaking changes into your entire app.

24
00:01:47.740 --> 00:01:52.060
And the only reason I mention this is as you're working through this course and as you're building your

25
00:01:52.060 --> 00:01:57.640
own view apps, just keep in mind that upgrading, for example, from Vue three to View for whenever

26
00:01:57.640 --> 00:02:03.370
it's released is probably going to be more significant than upgrading from Vue 3.0 to view 3.1.

27
00:02:03.400 --> 00:02:03.640
Right.

28
00:02:03.640 --> 00:02:05.350
That's just the way it typically works in software.

29
00:02:05.500 --> 00:02:09.130
That's why those version numbers exist to communicate those details to you.

30
00:02:09.640 --> 00:02:14.620
So Vue 3.0 was released in September 2020, so it took them four more years to release it.

31
00:02:14.980 --> 00:02:19.180
And for the most part, it really offered a bunch of quality of life improvements.

32
00:02:19.180 --> 00:02:24.360
But it also introduced a new way to build about to build your view components, your view code.

33
00:02:24.670 --> 00:02:27.460
So let's talk about that a little bit more in this next slide.

34
00:02:27.460 --> 00:02:32.590
So Vue three was built in TypeScript, which is a superset of JavaScript that includes types.

35
00:02:32.770 --> 00:02:37.180
We're going to talk more extensively about TypeScript later in the course.

36
00:02:37.840 --> 00:02:42.910
And as I mentioned, Vue three really added a lot of quality of life improvements under the hood.

37
00:02:43.120 --> 00:02:47.830
So it had a decreased bundle size, which means the size of the NPM package is smaller.

38
00:02:48.040 --> 00:02:53.170
It rendered things faster to your browser to review and it used up less memory on your computer.

39
00:02:53.170 --> 00:02:55.490
So they basically made the library fast, right?

40
00:02:55.780 --> 00:03:01.090
But the primary feature that Vue three added from a developer's perspective was something called the

41
00:03:01.090 --> 00:03:05.770
Composition API, and it represents a new way to build Vue components.

42
00:03:05.980 --> 00:03:10.570
Now I know we haven't talked about Vue components yet, but you can think of this as just your view

43
00:03:10.570 --> 00:03:13.060
code and the syntax that it utilizes.

44
00:03:13.330 --> 00:03:19.390
So Vue three allows you to write Vue code that is completely different from the way that Vue code used

45
00:03:19.390 --> 00:03:20.860
to be written in V2.

46
00:03:21.490 --> 00:03:26.110
Now the way we used to write code in V2 was called the Options API.

47
00:03:26.410 --> 00:03:31.300
Now here's the way it works, and this may be a little bit confusing, but is actually kind of a good

48
00:03:31.300 --> 00:03:31.990
for this course.

49
00:03:32.290 --> 00:03:38.590
The composition API, the new one in Vue 3.0 does not replace the options API.

50
00:03:38.770 --> 00:03:41.590
Rather it lives alongside it.

51
00:03:41.920 --> 00:03:45.970
So just because we're going to be learning Vue three, because we're going to be learning the latest

52
00:03:45.970 --> 00:03:51.730
version, does not mean we're going to skip learning about the older Vue two features the options API

53
00:03:51.850 --> 00:03:54.730
that is still in the new version.

54
00:03:54.730 --> 00:04:00.790
Vue three We're going to learn about both ways, both syntactical options to work with the View Library.

55
00:04:00.910 --> 00:04:04.660
And of course we're going to be learning from the latest version because it's the one that has all the

56
00:04:04.660 --> 00:04:05.110
features.

57
00:04:05.110 --> 00:04:09.670
I want to make sure I introduce you to the way things can be done now, the way things used to be done.

58
00:04:09.820 --> 00:04:16.090
And really there are advantages to using the options API at some times and there is advantages to using

59
00:04:16.090 --> 00:04:18.160
the composition API at other times.

60
00:04:18.160 --> 00:04:19.780
We're going to talk about those later in the course.

61
00:04:19.960 --> 00:04:22.810
But the idea is there's now two ways to write Vue code.

62
00:04:23.410 --> 00:04:25.360
Options API Composition API.

63
00:04:25.510 --> 00:04:29.590
The View three version supports both of them and we're going to be learning about both them throughout

64
00:04:29.590 --> 00:04:29.950
the course.

65
00:04:30.130 --> 00:04:34.720
That's all there really is to cover in this lesson and the very next lesson, which is an optional one.

66
00:04:34.840 --> 00:04:40.300
I want to quickly talk about the differences between Vue and other front end libraries like React and

67
00:04:40.300 --> 00:04:40.890
Angular.

68
00:04:40.900 --> 00:04:43.150
If you're curious about that, you can check the lesson out.

69
00:04:43.270 --> 00:04:46.180
Otherwise, feel free to continue to the next lesson after that.

70
00:04:46.600 --> 00:04:46.990
See you there.
