1
00:00:00,240 --> 00:00:01,110
All right.

2
00:00:01,110 --> 00:00:06,450
So the first thing I want to do in this section is to create a new component called hero.

3
00:00:06,600 --> 00:00:08,640
Hero spelled her0.

4
00:00:08,850 --> 00:00:12,060
But I'm not talking about a hero like Spider-Man or Superman.

5
00:00:12,330 --> 00:00:15,360
I'm talking about a hero in terms of web development.

6
00:00:15,570 --> 00:00:20,970
And when we're talking about a hero, we're typically talking about a banner image or really just a

7
00:00:20,970 --> 00:00:27,840
big section of the page that's sort of the first focal point that the user is going to pay attention

8
00:00:27,840 --> 00:00:28,140
to.

9
00:00:28,350 --> 00:00:34,440
So in this case, right below our main navigator sub, now this big chunk of white background, I want

10
00:00:34,440 --> 00:00:39,780
to take this entire section and represent that as a component and I'm going to call that a hero.

11
00:00:40,110 --> 00:00:44,370
And I just want to show you, if I go to my Google Careers websites, you have a better sense of what's

12
00:00:44,370 --> 00:00:44,940
going on here.

13
00:00:45,210 --> 00:00:48,660
When I'm talking about the hero, I'm talking about this section right here.

14
00:00:48,960 --> 00:00:53,370
So it's not just the the headline right here and the prompt and the form.

15
00:00:53,490 --> 00:00:58,990
It's the entire kind of encapsulating container around that idea.

16
00:00:59,010 --> 00:01:01,890
It's sort of the first thing you want your user to focus on.

17
00:01:01,890 --> 00:01:03,060
It's big, it's bold.

18
00:01:03,210 --> 00:01:10,200
It kind of declares a statement and it's kind of the primary point where they want you to focus your

19
00:01:10,200 --> 00:01:10,500
eyes.

20
00:01:10,650 --> 00:01:14,970
And this is a common web design idea across different websites.

21
00:01:15,180 --> 00:01:19,920
As another example, I can take you to the official Apple home page and you'll see we have a similar

22
00:01:19,920 --> 00:01:22,710
idea of a hero that advertises the iPhone 13.

23
00:01:22,710 --> 00:01:26,760
So it's this big glaring image with an obvious headline, iPhone 13 pro.

24
00:01:26,910 --> 00:01:27,660
Same idea.

25
00:01:27,660 --> 00:01:31,740
Here they have the the main nav, maybe a sub nav with some additional directions.

26
00:01:31,860 --> 00:01:33,660
And then they have this big container.

27
00:01:33,660 --> 00:01:33,870
Right.

28
00:01:33,870 --> 00:01:38,730
And the whole page as you scroll down is kind of split up into these sections, if you will.

29
00:01:38,880 --> 00:01:41,160
And those are all almost like mini heroes, right?

30
00:01:41,850 --> 00:01:42,720
The same idea here.

31
00:01:42,870 --> 00:01:46,470
When I create a hero, I want to represent this big chunk right here.

32
00:01:46,480 --> 00:01:46,770
All right.

33
00:01:46,770 --> 00:01:50,940
And then inside there, we're going to start building out the individual elements like our headline,

34
00:01:51,090 --> 00:01:53,370
this prompt and our form and things like that.

35
00:01:53,880 --> 00:01:54,240
All right.

36
00:01:54,240 --> 00:02:01,230
So let me go to my Visual Studio code text editor and let's go ahead and create a new component in our

37
00:02:01,230 --> 00:02:03,270
SLC Components folder.

38
00:02:03,280 --> 00:02:07,260
Right now, I'm just stuffing all of my components in here, but we might organize them in a better

39
00:02:07,260 --> 00:02:07,860
way later.

40
00:02:08,130 --> 00:02:11,130
And I'm going to call this component hero view.

41
00:02:12,360 --> 00:02:12,750
All right.

42
00:02:13,350 --> 00:02:15,310
By this point, this should hopefully be familiar.

43
00:02:15,330 --> 00:02:17,430
Let's go ahead and wire up a view component.

44
00:02:17,700 --> 00:02:20,730
I'm going to create a template tag before I forget.

45
00:02:20,730 --> 00:02:22,740
I'm going to wire up a script tag below it.

46
00:02:23,190 --> 00:02:25,800
And in our template tag, we have to place some content.

47
00:02:25,950 --> 00:02:31,410
What I'm actually going to use here is an element called Main that is basically like a div, but it's

48
00:02:31,410 --> 00:02:36,300
used to identify, especially for things like search engines and search engine optimization.

49
00:02:36,480 --> 00:02:40,530
It's used to identify the main section or the main focus of the page.

50
00:02:40,710 --> 00:02:44,410
So our content really begins with our hero, right?

51
00:02:44,460 --> 00:02:46,320
Not really the nav or the sub.

52
00:02:46,320 --> 00:02:48,980
Now that's the primary focus point of our page.

53
00:02:48,990 --> 00:02:55,020
Our main content is here where the user can actually see the prompt, where we're inspiring them to

54
00:02:55,020 --> 00:02:59,250
apply to our company and then provide us with their role and their location.

55
00:02:59,250 --> 00:02:59,430
Right?

56
00:02:59,430 --> 00:03:00,870
That's the core functionality.

57
00:03:00,870 --> 00:03:02,760
That's the beating heart of this website.

58
00:03:02,880 --> 00:03:04,260
So that is the main content.

59
00:03:04,380 --> 00:03:07,590
So I'm going to wrap that in a main tag instead of a regular do.

60
00:03:07,890 --> 00:03:12,390
And in here, I'm also going to apply a section tag because there may be multiple sections in here.

61
00:03:12,990 --> 00:03:18,300
And again, a section is again very similar to a div identical basically when it comes to the technical

62
00:03:18,300 --> 00:03:23,850
implementation, it's just a box on the screen, but it's a little bit more semantically correct because

63
00:03:23,850 --> 00:03:28,800
it identifies that we are breaking something up, not just into a box, but into a section that may

64
00:03:28,800 --> 00:03:34,290
potentially be one of many different sections, distinct pieces of organization or logic.

65
00:03:34,380 --> 00:03:36,210
Within this higher level container.

66
00:03:36,690 --> 00:03:41,280
You can basically think of it as a dead within divs, but just with a little bit more semantically better

67
00:03:41,280 --> 00:03:41,670
names.

68
00:03:41,940 --> 00:03:45,810
And in here, I'm just going to put some arbitrary text that we can double check that this is appearing

69
00:03:45,810 --> 00:03:46,410
on our screen.

70
00:03:46,620 --> 00:03:50,280
And I'm just going to write I Can Be Your Hero, Baby.

71
00:03:51,060 --> 00:03:53,700
It's a throwback to an early 2000s pop hit.

72
00:03:54,210 --> 00:03:54,600
Okay.

73
00:03:54,750 --> 00:04:00,930
So the other thing I want to do in my script section is export default, a JavaScript object.

74
00:04:01,140 --> 00:04:05,250
And here I'm just going to provide a named property and I'm going to call this component hero.

75
00:04:05,970 --> 00:04:09,120
Let's add a line break at the very end, and that looks good to me.

76
00:04:09,330 --> 00:04:14,340
So now, of course, I want to render this component somewhere and we're not going to render it in May

77
00:04:14,350 --> 00:04:17,250
now because this is not actually part of the main NAV.

78
00:04:17,490 --> 00:04:20,070
This is right below the main now.

79
00:04:20,370 --> 00:04:25,920
So if I actually go to my app component, we have not been here in a while, but as a reminder, this

80
00:04:25,920 --> 00:04:28,640
is the launching point for our entire view app.

81
00:04:28,650 --> 00:04:33,840
This is where everything kicks off and all this component is doing right now is just rendering the main

82
00:04:33,840 --> 00:04:34,560
nav component.

83
00:04:34,860 --> 00:04:39,900
So what I can do is simply render the main nav and then try to render my hero directly below it.

84
00:04:39,900 --> 00:04:41,250
And let's see if that works out.

85
00:04:41,550 --> 00:04:48,120
So right here I'm going to import my hero component from at components hero dot view.

86
00:04:49,270 --> 00:04:54,940
And then of course I had to register as a local component in my app component so that my app component

87
00:04:54,940 --> 00:04:55,530
can render it.

88
00:04:55,540 --> 00:04:58,750
So now we can render the here a component anywhere in my template.

89
00:04:59,080 --> 00:05:05,020
Generally, it's considered best practice to not have multiple what they call root elements, which

90
00:05:05,020 --> 00:05:11,380
means we don't just want to put hero side by side here with May NAV because there's multiple top level

91
00:05:11,620 --> 00:05:14,650
elements, so to speak, or multiple top level components.

92
00:05:14,860 --> 00:05:21,010
The general best practice is to only have one most top level element in any given template.

93
00:05:21,250 --> 00:05:26,050
So in other words, what I'm trying to say here is we can wrap these two components inside a larger

94
00:05:26,050 --> 00:05:31,840
div, just so that we have one top level parent element that is kicking everything off.

95
00:05:32,140 --> 00:05:34,630
And so we have one root of the pyramid, if you will.

96
00:05:35,020 --> 00:05:40,090
So right here, I'm just going to wrap these two in a div and that ensures that we will have only one

97
00:05:40,090 --> 00:05:45,250
root in this component that may not be even technically required in view anymore, but it's generally

98
00:05:45,250 --> 00:05:46,030
best practice.

99
00:05:46,240 --> 00:05:49,690
So you can easily focus your eyes as well and say, okay, I know what this component is.

100
00:05:49,690 --> 00:05:53,440
It's just a container, a div, and it must contain some additional components within it.

101
00:05:53,950 --> 00:05:59,020
Okay, so now we have our main nav component being rendered and we're rendering the hero component below

102
00:05:59,020 --> 00:05:59,140
it.

103
00:05:59,170 --> 00:06:00,730
So in theory, it should appear below it.

104
00:06:00,940 --> 00:06:03,850
But let's see what happens when I navigate to my browser.

105
00:06:04,930 --> 00:06:09,060
Well, as it turns out, unfortunately, we do not see our hero.

106
00:06:09,070 --> 00:06:09,360
Right?

107
00:06:09,370 --> 00:06:10,640
That's nowhere to be found.

108
00:06:10,660 --> 00:06:13,900
Even if I tried to expose my sub, now it's nowhere to be found.

109
00:06:14,140 --> 00:06:16,090
So is it not rendering on the page?

110
00:06:16,300 --> 00:06:21,850
Well, let's dive into our chrome console and let's go into my elements, Inspector.

111
00:06:23,120 --> 00:06:27,530
And if I go here, here is my top level div with the idea of apps.

112
00:06:27,530 --> 00:06:29,630
So this is where my view app launches itself.

113
00:06:29,900 --> 00:06:37,400
And there we have a div that is our top level div that is rendering the main NAV as well as the hero

114
00:06:37,400 --> 00:06:38,090
that we just created.

115
00:06:38,300 --> 00:06:41,990
And then we get into the HTML for our main NAV.

116
00:06:42,170 --> 00:06:46,250
So here we actually do see our main element that we just added.

117
00:06:46,260 --> 00:06:50,120
And if I open this up, here is our section with I can be your hero baby.

118
00:06:50,390 --> 00:06:54,770
So it looks like everything is actually correctly being rendering, being rendered on the screen.

119
00:06:55,010 --> 00:07:03,440
But unfortunately, our content is being hidden behind the fixed nav that our main nav is rendering.

120
00:07:03,440 --> 00:07:06,290
So we're going to see how we can fix this problem in the very next lesson.
