1
00:00:00,620 --> 00:00:01,610
All right.

2
00:00:01,610 --> 00:00:07,160
So the good news is that the code changes that we implemented in the previous lesson do work in the

3
00:00:07,160 --> 00:00:07,700
browser.

4
00:00:07,940 --> 00:00:11,870
The bad news is, unfortunately, this change will break our test suite.

5
00:00:12,170 --> 00:00:16,670
So let's run all of our tests using NPM Run Test, Colon Unit.

6
00:00:18,530 --> 00:00:23,720
And we're going to see right here that we are going to get a failing test for the component that we

7
00:00:23,720 --> 00:00:25,970
just modified it, which is job search form.

8
00:00:26,210 --> 00:00:28,010
Right here we can see one failing test.

9
00:00:28,280 --> 00:00:33,920
And if I scroll up right here past all this crazy output, we're going to see it's coming from job search

10
00:00:33,920 --> 00:00:34,610
form that test.

11
00:00:35,000 --> 00:00:37,070
So let's open up that test file.

12
00:00:38,740 --> 00:00:41,460
And this is going to be a relatively easy problem to fix.

13
00:00:41,470 --> 00:00:45,400
But first, I want to talk about why we're seeing it and it kind of makes sense.

14
00:00:45,400 --> 00:00:52,270
So in our previous Options API implementation, we were dependent on a dollar sign router property.

15
00:00:52,600 --> 00:00:55,060
So what we did in our test is we marked it out.

16
00:00:55,180 --> 00:01:01,240
We had a dollar sign router object right here with a push method that was a basic just function and

17
00:01:01,240 --> 00:01:07,090
we provided it to the box property of our configuration object for the amount function so that we have

18
00:01:07,090 --> 00:01:11,260
a dollar sign root or property on our available component.

19
00:01:11,530 --> 00:01:17,500
Well, now we're no longer relying on this, that dollar sign router where we're relying instead on

20
00:01:17,500 --> 00:01:20,290
the router that is returned by the use router function.

21
00:01:20,530 --> 00:01:26,260
And so when our test suite runs, it doesn't know to use a real router, it's still going to run through

22
00:01:26,260 --> 00:01:29,110
the setup method and, and use this function right here.

23
00:01:29,110 --> 00:01:34,000
But it's not going to get a real router in the context of the test suite and so the entire thing is

24
00:01:34,000 --> 00:01:34,870
going to fall apart.

25
00:01:35,230 --> 00:01:36,640
So how do we fix this problem?

26
00:01:36,940 --> 00:01:41,440
Well, we're going to use the exact same principles that we've used throughout the remainder of the

27
00:01:41,440 --> 00:01:41,830
course.

28
00:01:42,010 --> 00:01:46,630
We're still going to mark out the router, but how we do so is going to be a little bit different.

29
00:01:46,870 --> 00:01:52,840
Instead of marking out the marks, probably right here with dollar sign router, all we need to do is

30
00:01:52,840 --> 00:01:59,500
import use router in our test suite, mock it out and have this function when it's marked out and when

31
00:01:59,500 --> 00:02:01,660
we can control what it does, we'll have it.

32
00:02:01,660 --> 00:02:05,290
Mark return a value such as an object with a push method.

33
00:02:05,650 --> 00:02:08,170
So we're going to keep the exact same ideas.

34
00:02:08,260 --> 00:02:14,350
We're still not going to use a real router object because we want to decouple the tests for job search

35
00:02:14,350 --> 00:02:17,800
form from not having to worry about the real view of our implementation.

36
00:02:17,980 --> 00:02:21,910
So we're still going to intercept something and replace it with something else.

37
00:02:22,060 --> 00:02:24,220
We're still going to mark things out in spirit.

38
00:02:24,460 --> 00:02:28,750
However, instead of marking out here, we're going to mark out the use router function.

39
00:02:28,900 --> 00:02:34,090
So when it runs, it's going to rely on our mark, on our substitution, on our replacement.

40
00:02:34,270 --> 00:02:38,710
And right here, we're going to get the mock object that we want so that the rest of the set of method

41
00:02:38,710 --> 00:02:39,850
works as expected.

42
00:02:40,000 --> 00:02:40,390
All right.

43
00:02:40,690 --> 00:02:42,940
So here's what that code is going to look like right here.

44
00:02:43,880 --> 00:02:44,930
I'm going to import.

45
00:02:46,510 --> 00:02:50,000
Use a router and that is going to come from view router.

46
00:02:50,020 --> 00:02:52,600
This is the exact same code that we have in our component.

47
00:02:52,870 --> 00:02:57,400
The one thing that I'm going to add that you may recall from earlier in the course when we were mocking

48
00:02:57,400 --> 00:03:02,980
out things like Axios is we can do just that mark here and provide the name of the library that we want

49
00:03:02,980 --> 00:03:03,640
to mock out.

50
00:03:03,910 --> 00:03:07,420
So here what I want to make out is everything in view router.

51
00:03:08,140 --> 00:03:12,760
So what just is going to do is it's going to run through view router and that's going to include the

52
00:03:12,760 --> 00:03:17,260
use router export and now it's going to replace that with a just mock function.

53
00:03:17,530 --> 00:03:23,020
So now we're going to intercept any call to use router either in this test file or in the components

54
00:03:23,020 --> 00:03:23,680
when they mount.

55
00:03:23,920 --> 00:03:28,840
And it's just going to be a regular just mock function that when invoked, returns undefined.

56
00:03:29,200 --> 00:03:33,940
Now that unfortunately is not good enough because we don't want a mock function that returns undefined.

57
00:03:34,120 --> 00:03:39,250
We need a mock function that returns an object with a push method, because we're going to rely on that

58
00:03:39,250 --> 00:03:43,000
push method right here when the search for jobs function is invoked.

59
00:03:43,300 --> 00:03:45,430
We have the exact same principle right here.

60
00:03:45,430 --> 00:03:49,210
We had our push mock just function and we provided it on the router here.

61
00:03:49,390 --> 00:03:54,760
We're going to follow the exact same principles, except we're going to now intercept our use router

62
00:03:54,760 --> 00:03:55,150
call.

63
00:03:55,390 --> 00:04:00,310
So what I'm going to do here first is I'm going to remove this mock section right here, and we only

64
00:04:00,310 --> 00:04:02,290
have one test in this test file, by the way.

65
00:04:02,530 --> 00:04:07,630
We no longer need to use Mock because we're not marking out dollar sign router so we can remove this.

66
00:04:08,080 --> 00:04:12,400
And here what I'm going to do is we imported use router above.

67
00:04:13,360 --> 00:04:19,540
So I'm going to take that function that is already adjust function so I can invoke the mock return value

68
00:04:19,540 --> 00:04:20,170
method on it.

69
00:04:20,350 --> 00:04:25,600
And that is going to set the return value that that mock function returns when it's invoked.

70
00:04:25,840 --> 00:04:30,100
When is it going to be invoked when we manage our component and run the setup method?

71
00:04:30,160 --> 00:04:32,920
It's going to actually be invoked right here on line 71.

72
00:04:33,190 --> 00:04:36,370
So what we're basically declaring is what we want this to return.

73
00:04:36,760 --> 00:04:38,770
So that router is a sign that object.

74
00:04:38,980 --> 00:04:45,250
So when use router is invoked, I want it to return an object that's going to have a push method.

75
00:04:45,400 --> 00:04:50,020
And of course for push here, I'm referencing the push method on line number ten.

76
00:04:50,350 --> 00:04:51,790
So I'm using S six syntax.

77
00:04:51,790 --> 00:04:56,290
So this push is referring to this just function right here represented by the push constant.

78
00:04:56,620 --> 00:04:58,930
Then we're going to repeat the test as we usually do.

79
00:04:58,960 --> 00:05:00,790
We're going to mount our job search form.

80
00:05:01,090 --> 00:05:03,220
We're going to provide a value right here in the row.

81
00:05:03,220 --> 00:05:04,420
Input a view developer.

82
00:05:04,660 --> 00:05:07,780
We're going to provide a location in the location, text input of Dallas.

83
00:05:08,050 --> 00:05:10,510
We're going to find the submit button and we're going to click it.

84
00:05:10,720 --> 00:05:15,550
And then we're validating the interaction between the component and the push method of the router.

85
00:05:15,730 --> 00:05:20,350
And this test is still going to test for the exact same thing, except push is now just going to be

86
00:05:20,350 --> 00:05:26,260
coming from our use router router instead of our this dollar sign router router.

87
00:05:26,560 --> 00:05:28,120
So we're still testing the interaction.

88
00:05:28,120 --> 00:05:29,950
It's just where we're getting the router from.

89
00:05:29,950 --> 00:05:30,580
That's changed.

90
00:05:30,760 --> 00:05:36,130
And that's also a good piece of news in that most of our components logic or apologies for that.

91
00:05:36,280 --> 00:05:39,830
Most of our test suite's logic has remained the same, right?

92
00:05:39,880 --> 00:05:42,190
Even our assertion here is going to remain the same.

93
00:05:42,370 --> 00:05:47,020
The only thing that's changing is this logic right here, which makes sense because we're using a brand

94
00:05:47,020 --> 00:05:52,780
new implementation in our actual component so we're no longer dependent on this a dollar sign that router.

95
00:05:52,930 --> 00:05:55,960
So this is a normal and expected thing that is breaking.

96
00:05:55,960 --> 00:06:01,180
Our test suite is breaking because of a technical change in how the composition API works, not because

97
00:06:01,180 --> 00:06:03,880
we wrote the wrong assertion or wrote the wrong logic.

98
00:06:04,150 --> 00:06:09,040
So simply by making this change, I'm going to rerun every single test with NPM run test colon unit.

99
00:06:10,660 --> 00:06:15,220
And we're going to see that everything should once again be back to green and indeed it is.

100
00:06:15,430 --> 00:06:15,790
All right.

101
00:06:16,120 --> 00:06:18,120
So that's all there is to cover in this lesson.

102
00:06:18,130 --> 00:06:23,200
We basically learned that if we want to mock out something such as the router, we're no longer going

103
00:06:23,200 --> 00:06:26,470
to get it as a global property under this keyword in a component.

104
00:06:26,620 --> 00:06:28,660
So thus we can't replace it that way.

105
00:06:28,660 --> 00:06:33,190
We can't mock it out that way using our configuration object like we used to.

106
00:06:33,340 --> 00:06:39,160
Instead, all we'll need to do is intercept calls to helper functions like use, use, router and have

107
00:06:39,160 --> 00:06:41,500
those mock functions that are the substitutes.

108
00:06:41,650 --> 00:06:47,320
Return whatever value we need a value that is good enough to play the role of the router and the setup

109
00:06:47,320 --> 00:06:48,430
method needs right here.

110
00:06:48,700 --> 00:06:53,590
So in this example, the only thing we need on the router is a basic push method and we also want to

111
00:06:53,590 --> 00:06:55,990
be able to track invocations to that push method.

112
00:06:56,140 --> 00:06:58,240
That's why we used a just the function here.

113
00:06:58,330 --> 00:07:02,470
But push could be anything in theory can be even something like a basic JavaScript function.

114
00:07:02,620 --> 00:07:06,880
As long as it's something invoke able, then that will work because that will be good enough for this

115
00:07:06,880 --> 00:07:07,990
logic we have right here.

116
00:07:08,380 --> 00:07:08,650
All right.

117
00:07:08,650 --> 00:07:12,760
Same exact principles we've talked about throughout the course, just with a little bit of a different

118
00:07:12,760 --> 00:07:13,840
look and feel right now.

119
00:07:14,200 --> 00:07:14,530
All right.

120
00:07:14,530 --> 00:07:16,240
So that's all there is to cover in this lesson.

121
00:07:16,240 --> 00:07:17,860
So I will see in the next one.
