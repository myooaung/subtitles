1
00:00:00,470 --> 00:00:01,320
Okay.

2
00:00:01,320 --> 00:00:05,910
So the next thing that I'd like to do is to show the user the page that they are on.

3
00:00:06,090 --> 00:00:12,870
So page one, page two, page three, etc., I want to display that number at the very bottom of all

4
00:00:12,870 --> 00:00:14,010
their job results.

5
00:00:14,310 --> 00:00:19,170
Later on, I also want to add the buttons to take them to the next page or the previous page.

6
00:00:19,530 --> 00:00:26,040
So if I look in my job listings component and I look at my displayed jobs property, we actually have

7
00:00:26,040 --> 00:00:27,870
the page number right here.

8
00:00:27,900 --> 00:00:30,350
These first two lines get what we need.

9
00:00:30,360 --> 00:00:36,210
They talk to the root object to get the query object to get the page property and a reasonable default.

10
00:00:36,360 --> 00:00:38,670
And then they convert that string to a number.

11
00:00:38,670 --> 00:00:40,090
And that is the page we want.

12
00:00:40,110 --> 00:00:41,640
Page one, page two, etc..

13
00:00:42,000 --> 00:00:45,990
So we could of course, copy and paste this logic into a different property.

14
00:00:46,170 --> 00:00:53,850
But I propose that we move this logic entirely to a new computed property and then reuse that property

15
00:00:53,850 --> 00:00:54,570
right here.

16
00:00:54,720 --> 00:01:00,420
And that way we can have a lot of smaller computed properties, each one with this single responsibility.

17
00:01:00,780 --> 00:01:06,630
So what I'm going to do is I'm going to cut this code and right here above displayed jobs are create

18
00:01:06,630 --> 00:01:09,180
another computed property called the current page.

19
00:01:10,190 --> 00:01:11,210
Since that is what we want.

20
00:01:11,510 --> 00:01:13,310
And I'm going to paste this code right here.

21
00:01:13,550 --> 00:01:18,440
And of course, instead of saving this final result to a page number constant, I'm just going return

22
00:01:19,190 --> 00:01:22,370
number, send paging, passing in the page string.

23
00:01:22,580 --> 00:01:27,500
It's still a computed property because it's some kind of number that is based on another piece of data

24
00:01:27,500 --> 00:01:30,610
in our application, which is our root object.

25
00:01:30,620 --> 00:01:35,060
So as our root object changes, the query object and its page property will change.

26
00:01:35,180 --> 00:01:40,250
The current page computed property will reevaluate every time that changes and give us back a number.

27
00:01:40,640 --> 00:01:46,460
So right here in displayed jobs, I want to reference my page number because I need it right here for

28
00:01:46,460 --> 00:01:48,980
these calculations of my job in the indexes.

29
00:01:49,340 --> 00:01:54,620
So in order to get my page number, what I can do, of course, is reference the computed property above,

30
00:01:54,770 --> 00:01:58,160
which I can simply do by referencing it on my this object.

31
00:01:58,160 --> 00:02:05,270
So right here, this that current page, even though it is a method above in view, we do not need to

32
00:02:05,270 --> 00:02:06,170
provide parentheses.

33
00:02:06,170 --> 00:02:07,880
We can just reference that property like.

34
00:02:07,880 --> 00:02:11,240
So this that current page will give me this full evaluation.

35
00:02:11,510 --> 00:02:16,160
The reason I'm seeing an error here is of course I need a comma right here, but that should do it.

36
00:02:16,310 --> 00:02:20,510
So now we're going to reference whatever page number we get from the computed property above.

37
00:02:20,510 --> 00:02:21,590
That's some kind of number.

38
00:02:21,800 --> 00:02:26,240
We're going to use that number to generate our first and last job indexes, and then we're going to

39
00:02:26,240 --> 00:02:28,340
use that to slice a subset of the array.

40
00:02:28,700 --> 00:02:34,220
So now that I have a computed property that just gives me the page number, I can use this computed

41
00:02:34,220 --> 00:02:35,540
property in my template.

42
00:02:35,540 --> 00:02:39,230
I can interpolate this value to show the user the actual page number.

43
00:02:39,560 --> 00:02:45,860
So I'm going to scroll up a little bit here and here is where we have our ordered list with our job

44
00:02:45,860 --> 00:02:46,610
listing components.

45
00:02:46,970 --> 00:02:52,460
Below my ordered list, I'm going to create a new div and here I'm just going to add a couple tailwind

46
00:02:52,460 --> 00:02:53,000
classes.

47
00:02:53,390 --> 00:02:58,040
I want to create some separation between this and the end of my job list, so I'm going to add some

48
00:02:58,040 --> 00:02:58,970
margin on the top.

49
00:02:59,360 --> 00:03:04,700
I'm going to do empty eight margin top eight to give 32 pixels of margin above this divide.

50
00:03:05,030 --> 00:03:11,300
And then I'm going to provide Amex Auto to provide equal margin on the left and right side to center

51
00:03:11,300 --> 00:03:13,790
this box within this div.

52
00:03:14,420 --> 00:03:18,590
I'm going to add another div and I'm going to add some more classes to here.

53
00:03:18,710 --> 00:03:20,300
I'm going to make this a Flexbox.

54
00:03:20,300 --> 00:03:26,990
This Flexbox will eventually hold not just my page number, but also my buttons for the previous page

55
00:03:26,990 --> 00:03:27,710
and the next page.

56
00:03:27,710 --> 00:03:31,970
We're going to add that in upcoming lessons, but we're going to create the Flexbox container for that

57
00:03:31,970 --> 00:03:32,450
right now.

58
00:03:32,750 --> 00:03:36,770
So this is going to be a Flexbox that's going to arrange its elements in a row direction.

59
00:03:36,770 --> 00:03:40,340
So I'll add flex row and I don't want them to wrap to a new line.

60
00:03:40,340 --> 00:03:41,900
I want this all on a single line.

61
00:03:42,110 --> 00:03:44,120
So I'm going to do flex no wrap.

62
00:03:44,120 --> 00:03:45,800
That is my final class right here.

63
00:03:45,980 --> 00:03:47,840
So three total classes on this div.

64
00:03:48,170 --> 00:03:52,640
And finally within this div, I can provide a paragraph tag where I'm going to actually interpolate

65
00:03:52,850 --> 00:03:54,980
the value of my current page in just a second.

66
00:03:55,490 --> 00:03:59,150
So paragraph tag, let's add a couple classes here on this paragraph.

67
00:03:59,540 --> 00:04:01,430
The first one is going to be text some.

68
00:04:01,610 --> 00:04:05,570
That's just going to give my font here a slightly smaller size of 14 pixels.

69
00:04:05,840 --> 00:04:10,580
And then I'm going to add a class here, a flex grow that's just going to allow this paragraph to grow

70
00:04:10,580 --> 00:04:16,310
in size as needed depending on what's available in the flex box with within which it is located.

71
00:04:16,670 --> 00:04:20,270
And so here I want to actually display the word page no matter what.

72
00:04:20,570 --> 00:04:23,060
And then after page I want the number itself.

73
00:04:23,180 --> 00:04:27,470
We get that from our current page computed property so we know how to interpolate.

74
00:04:27,470 --> 00:04:32,300
We have to use the double curly braces and I want to display the value of the current page, which we're

75
00:04:32,300 --> 00:04:33,950
going to get from our query params.

76
00:04:34,100 --> 00:04:38,390
And if we don't have any query params, not a problem, we're going to fall back to page one.

77
00:04:38,780 --> 00:04:39,170
All right.

78
00:04:39,440 --> 00:04:42,110
So with that, we can go to our browser and take a look at this.

79
00:04:43,070 --> 00:04:43,430
All right.

80
00:04:43,430 --> 00:04:45,620
So here we are on page one with no create params.

81
00:04:45,860 --> 00:04:48,440
If I scroll down, we're going to get page one.

82
00:04:48,440 --> 00:04:49,160
That looks great.

83
00:04:49,280 --> 00:04:54,470
If I apply the manual query params of page equals one, we get the exact same result.

84
00:04:54,680 --> 00:05:00,920
However, if I navigate to something different like page four perfect, we get our different set of

85
00:05:00,920 --> 00:05:03,560
ten jobs and now we see page four right here.

86
00:05:03,770 --> 00:05:08,300
Similarly, if I go to page six, totally different set of jobs and we see page six right here.

87
00:05:08,660 --> 00:05:10,040
So that looks really great.

88
00:05:10,040 --> 00:05:14,780
And of course the next thing we can start wiring up is our next and previous buttons right here on the

89
00:05:14,780 --> 00:05:15,050
right.
