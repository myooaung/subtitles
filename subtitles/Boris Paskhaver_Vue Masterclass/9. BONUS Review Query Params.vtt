WEBVTT
1
00:00:00.420 --> 00:00:05.730
In this lesson, I'd like to do a quick introduction or review of query params.

2
00:00:06.000 --> 00:00:13.080
What query params allow us to do is to attach additional information at the end of a URL through the

3
00:00:13.080 --> 00:00:14.880
use of key value pairs.

4
00:00:15.090 --> 00:00:21.330
And that is what's going to allow us to pass information from this form, like the role and the location

5
00:00:21.330 --> 00:00:25.200
of the user would want to search for to the actual job results page.

6
00:00:25.740 --> 00:00:30.750
That's how we're going to preserve this information as we navigate the user to another page in our app.

7
00:00:31.140 --> 00:00:36.150
And so here I am on the actual Google Careers website, and I want to show you how this works in action.

8
00:00:36.150 --> 00:00:42.510
So I'm going to search for a role of view developer and I'm going to search for it in let's do Ohio

9
00:00:42.870 --> 00:00:43.860
in the United States.

10
00:00:43.860 --> 00:00:44.970
I'm going to search right here.

11
00:00:45.540 --> 00:00:53.160
And you'll notice here that we are taken to the expected path, which is slash jobs, slash results.

12
00:00:53.370 --> 00:00:57.660
But at the very end of that final slash, there is this whole bunch of additional text.

13
00:00:57.900 --> 00:01:00.030
These are the query params.

14
00:01:00.450 --> 00:01:02.820
They work like a bunch of key value pairs.

15
00:01:02.820 --> 00:01:08.010
And to give you an example of key value pairs in JavaScript, just think about a JavaScript object.

16
00:01:08.130 --> 00:01:10.390
There is the property which is the key.

17
00:01:10.410 --> 00:01:17.910
It's sort of like a unique identifier or name and connected to that key or property is an associated

18
00:01:17.910 --> 00:01:18.600
value.

19
00:01:18.840 --> 00:01:20.880
So it's almost like a question in an answer, right?

20
00:01:21.120 --> 00:01:22.050
So let me show you here.

21
00:01:22.320 --> 00:01:29.490
After our path here we have this question mark and that is just a required symbol to indicate the start

22
00:01:29.490 --> 00:01:30.390
of a query string.

23
00:01:30.600 --> 00:01:34.590
And then we have a collection of these key value pairs.

24
00:01:34.890 --> 00:01:37.680
So for example, our very first one here is distance.

25
00:01:37.680 --> 00:01:38.670
That is our key.

26
00:01:39.090 --> 00:01:42.540
And then in order to associate it with a value, we use the equals sign.

27
00:01:42.750 --> 00:01:46.530
So distance equals 5050 is the value.

28
00:01:46.770 --> 00:01:54.960
So I'm guessing what this query pram is indicating is the location distance from Ohio that we want to

29
00:01:54.960 --> 00:01:56.430
return the job results for.

30
00:01:56.430 --> 00:01:59.070
So probably this means 50 miles from Ohio.

31
00:01:59.220 --> 00:02:03.540
Now, I don't exactly know the details of what it means for Google because maybe it means 50 kilometers.

32
00:02:03.540 --> 00:02:04.080
I don't know.

33
00:02:04.260 --> 00:02:10.650
The point is that they found a way to attach additional information to the URL so that this page and

34
00:02:10.650 --> 00:02:15.000
this view component can pass that information and use it however it would like.

35
00:02:15.180 --> 00:02:16.890
Maybe it's going to filter the job results.

36
00:02:16.890 --> 00:02:19.140
Maybe it's going to do a different branch of logic.

37
00:02:19.320 --> 00:02:20.390
It doesn't really matter.

38
00:02:20.400 --> 00:02:26.580
The point is that we're sending over information or data in the URL for this component to be able to

39
00:02:26.580 --> 00:02:31.710
pass and process and do something with the way that we separate subsequent query.

40
00:02:31.710 --> 00:02:33.870
Params is with the ampersand sign.

41
00:02:33.870 --> 00:02:39.540
So it's this symbol right here which is shift plus seven on most keyboards that just creates a separation

42
00:02:39.540 --> 00:02:45.390
so that the browser in view can understand where one query pair ends and where the next one begins.

43
00:02:45.850 --> 00:02:47.190
The next one is right here.

44
00:02:47.190 --> 00:02:52.950
It's HL that is some kind of key then the equals sign and then the value which is NYC.

45
00:02:53.190 --> 00:02:58.350
So I don't know what h al is exactly, but I'm guessing NYC means English United States.

46
00:02:58.350 --> 00:03:03.300
So that's again some kind of criteria or additional information that is helping the page do what it

47
00:03:03.300 --> 00:03:03.840
needs to do.

48
00:03:04.500 --> 00:03:09.420
And then you'll notice if I keep navigating here, here is the ampersand that separates the key value

49
00:03:09.420 --> 00:03:09.750
pairs.

50
00:03:09.930 --> 00:03:13.980
Here is where we're actually preserving the information from the previous page.

51
00:03:13.980 --> 00:03:18.720
Here is the location that we entered into that input field in the form.

52
00:03:18.870 --> 00:03:21.690
So notice that the key here is location.

53
00:03:21.930 --> 00:03:24.510
Then we provide an equal sign right here.

54
00:03:24.690 --> 00:03:30.000
And then the value that we entered was Ohio U.S. So you might be curious, what is this symbol right

55
00:03:30.000 --> 00:03:36.750
here, this percentage 20 that is a special symbol that you use in this query param to indicate a space

56
00:03:36.960 --> 00:03:39.900
because you can't actually have a space anywhere in a URL.

57
00:03:40.050 --> 00:03:44.340
So we need some kind of symbol to play the role of a space or to indicate that that is a space.

58
00:03:44.610 --> 00:03:50.370
So instead of a literal space, we do this character of percentage 20, and many times your browser

59
00:03:50.370 --> 00:03:52.650
will automatically inject it for you.

60
00:03:52.980 --> 00:03:55.830
So here is where we stored the location that we searched for.

61
00:03:56.040 --> 00:04:01.080
And then if we move to our final query param, which starts right here, you can see we have the final

62
00:04:01.080 --> 00:04:03.750
ampersand, we have our key or property, which is.

63
00:04:03.750 --> 00:04:06.270
Q And I'm guessing that means query.

64
00:04:06.270 --> 00:04:08.670
So what did the user search for then?

65
00:04:08.670 --> 00:04:09.480
The equal sign?

66
00:04:09.480 --> 00:04:11.730
And then finally our submission from the last page.

67
00:04:11.940 --> 00:04:18.090
View Developer Once again, the space between the end of view and the beginning of developer is marked

68
00:04:18.090 --> 00:04:20.040
by that percentage sign 20.

69
00:04:20.310 --> 00:04:25.800
But again, it's, it's just another key value pair, another combination of an identifier and a value

70
00:04:25.950 --> 00:04:28.470
that we've given to this page that it can now use.

71
00:04:28.680 --> 00:04:32.880
So we have something like four or five different key value pairs and they all make up what are called

72
00:04:32.880 --> 00:04:34.080
the query params.

73
00:04:34.200 --> 00:04:34.500
All right.

74
00:04:34.680 --> 00:04:40.950
And if and again, what we can do is use this component pass or read the query params from the URL and

75
00:04:40.950 --> 00:04:41.790
then do something with it.

76
00:04:42.030 --> 00:04:47.190
So in short, this is how we're going to start sending data over from our home page to our job results

77
00:04:47.190 --> 00:04:50.880
page, and we're going to start implementing that logic in our app in the next lesson.
