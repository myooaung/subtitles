1
00:00:00,210 --> 00:00:01,110
Alright.

2
00:00:01,110 --> 00:00:07,530
So in the previous lesson we introduced the V if directive which conditionally renders either a component

3
00:00:07,530 --> 00:00:11,190
or whatever HTML chunk you want conditionally on the screen.

4
00:00:11,400 --> 00:00:16,410
And in this lesson, we're going to introduce yet another directive, which is the V out directive.

5
00:00:16,590 --> 00:00:20,850
The way it's going to work is exactly like an if l statement in JavaScript.

6
00:00:21,180 --> 00:00:27,330
If something is true, then we're going to render one bit of time out else or otherwise we're going

7
00:00:27,330 --> 00:00:32,550
to render a totally different chunk of H2 now, or in this case it's going to be if something is true,

8
00:00:32,550 --> 00:00:34,320
we're going to render one component.

9
00:00:34,620 --> 00:00:37,710
Otherwise, if it's false, render another component.

10
00:00:37,770 --> 00:00:43,710
And of course, what we're going to render is either an action button if the user's logged out or our

11
00:00:43,710 --> 00:00:46,380
profile image component if the user is logged in.

12
00:00:46,680 --> 00:00:48,120
So here I am and Main NAV.

13
00:00:48,120 --> 00:00:51,060
And let's start by importing our new profile image component.

14
00:00:51,300 --> 00:00:55,620
So right here in our script section, I'm going to import profile image.

15
00:00:56,220 --> 00:01:00,000
It's going to be a very similar syntax to what we have above with Action Button.

16
00:01:00,240 --> 00:01:06,900
I'm going to import it from our top level Astro C Directory Components Profile Image View Provide the

17
00:01:06,900 --> 00:01:12,030
semicolon here and remember before we can use it we have to register it in our components object.

18
00:01:12,240 --> 00:01:16,530
So right here I'm going to add profile image as another property as a reminder.

19
00:01:16,530 --> 00:01:22,560
Now we can use the profile image component either with this syntax or using kabob case, which means

20
00:01:22,560 --> 00:01:25,200
all lowercase and with dashes, right?

21
00:01:25,500 --> 00:01:31,770
So we already have and is logged in property and that's really all we need because depending on what

22
00:01:31,770 --> 00:01:36,360
boolean this currently is, that's going to determine what I want to render.

23
00:01:36,360 --> 00:01:36,750
All right.

24
00:01:36,990 --> 00:01:41,970
So I'm going to move up here and I'm going to remove this view of temporarily from the action button.

25
00:01:41,970 --> 00:01:43,350
We'll come back to it in just a second.

26
00:01:43,710 --> 00:01:49,140
And given that, I don't really want to use negation, which means in the previous lesson we took our

27
00:01:49,140 --> 00:01:53,100
is logged in property and then we inverted it and it was kind of a little bit confusing because you

28
00:01:53,100 --> 00:01:53,850
had to flip it.

29
00:01:54,120 --> 00:01:57,000
I just prefer to think a lot more logically and positively.

30
00:01:57,150 --> 00:02:01,410
So if the user is logged in, what do we want to render?

31
00:02:01,410 --> 00:02:03,360
We want to render our profile image.

32
00:02:03,570 --> 00:02:06,570
So right here I'm going to write my profile image component.

33
00:02:06,810 --> 00:02:08,010
I'm going to instantiate it.

34
00:02:08,010 --> 00:02:12,660
And since it's not going to have anything between the opening and closing tags, I can have a single

35
00:02:12,660 --> 00:02:16,230
tag and provide my slash here and close my profile image like so.

36
00:02:16,620 --> 00:02:23,880
And I want to apply my v if directive to conditionally render this profile image if and only if the

37
00:02:23,880 --> 00:02:25,770
is logged in property is set to true.

38
00:02:26,610 --> 00:02:26,940
Right.

39
00:02:27,150 --> 00:02:30,480
So when the component starts up is logged in is set to false.

40
00:02:30,660 --> 00:02:33,150
So the profile image will not render.

41
00:02:33,450 --> 00:02:38,040
But of course the way it currently works now is action button will always render because there's no

42
00:02:38,040 --> 00:02:39,540
kind of directive attached to it.

43
00:02:39,840 --> 00:02:45,390
So here is where I want to apply the brand new directive I wanted to tell you about, which is V else.

44
00:02:45,750 --> 00:02:47,220
So we're going to write the else.

45
00:02:48,240 --> 00:02:48,910
Right here.

46
00:02:48,930 --> 00:02:53,760
Like all of you directives, it's going to start with that V prefix and that is actually all we need.

47
00:02:53,970 --> 00:03:00,600
We do not need to apply a separate condition here because it works just like an if l statement in JavaScript.

48
00:03:00,840 --> 00:03:05,640
In other words, this is first going to be evaluated by view and it's going to check if this condition

49
00:03:05,640 --> 00:03:06,180
is true.

50
00:03:06,480 --> 00:03:11,730
If this condition is true, if is logged in, returns true, it's going to render the profile image

51
00:03:11,880 --> 00:03:17,100
and it's not going to render the action button because the action button belongs to effectively the

52
00:03:17,100 --> 00:03:17,920
else clause.

53
00:03:17,940 --> 00:03:19,620
The other branch that we're never hitting.

54
00:03:19,980 --> 00:03:27,030
Conversely, if our if statement evaluates to false, so if is logged in is equal to false, this evaluates

55
00:03:27,030 --> 00:03:32,850
the false, which means Vue will not render the profile image component and since it automatically will

56
00:03:32,850 --> 00:03:38,130
go into the L statement just like it would in regular JavaScript, the statement evaluates the true

57
00:03:38,220 --> 00:03:40,950
and we're going to render an action button instead.

58
00:03:41,340 --> 00:03:46,890
So we're only ever going to render one of these two components, either profile image or action button,

59
00:03:47,010 --> 00:03:49,200
depending on the status of is logged in.

60
00:03:49,560 --> 00:03:49,890
All right.

61
00:03:50,130 --> 00:03:51,510
Let's take a look at this in the browser.

62
00:03:51,510 --> 00:03:54,060
So I'm going to go back to my browser.

63
00:03:54,600 --> 00:03:59,700
And of course, we don't have the functionality yet wired up to click the button and change the state

64
00:03:59,700 --> 00:04:00,360
of our data.

65
00:04:00,480 --> 00:04:03,400
But we can do that in view DevTools to see how this works.

66
00:04:03,400 --> 00:04:08,970
So I'm going to bring up my view devtools right here, bring it up and let's take a look at this state

67
00:04:08,970 --> 00:04:10,170
in our main nav component.

68
00:04:10,410 --> 00:04:12,240
So we have our is logged in property.

69
00:04:12,240 --> 00:04:14,850
It's set to false because it's set to false.

70
00:04:14,850 --> 00:04:19,560
We are hitting the V else part of our clause, which means we're rendering the action button.

71
00:04:19,950 --> 00:04:20,310
All right.

72
00:04:20,400 --> 00:04:23,790
And what do you think is going to happen when we check is logged in here?

73
00:04:23,970 --> 00:04:26,280
Well, is logged in is going to change to true.

74
00:04:26,430 --> 00:04:32,040
Which means Vue is going to run through our HTML code again read render it and because is logged in

75
00:04:32,040 --> 00:04:32,850
is now true.

76
00:04:32,880 --> 00:04:38,490
It knows instead that it should render the profile image because that property connected to our data

77
00:04:38,490 --> 00:04:39,810
now evaluates to true.

78
00:04:40,110 --> 00:04:45,930
And as it's going to render our profile image, the else is now no longer going to be executed, so

79
00:04:45,930 --> 00:04:48,660
our action button will no longer be rendered.

80
00:04:48,810 --> 00:04:51,120
So we're now going to swap these two components in and out.

81
00:04:51,300 --> 00:04:52,170
Let's see how this works.

82
00:04:52,170 --> 00:04:53,610
I'm going to click this and.

83
00:04:54,500 --> 00:04:55,010
Second.

84
00:04:55,160 --> 00:04:55,730
There we go.

85
00:04:55,760 --> 00:04:59,720
The reason it took a little bit to load is because we actually had to fetch that image from the URL.

86
00:04:59,720 --> 00:05:02,390
But there is our link profile image on the top, right?

87
00:05:02,630 --> 00:05:06,470
And if I simulate logging out, well, now we change our state.

88
00:05:06,830 --> 00:05:09,440
Once again, the if else reverses truthiness.

89
00:05:09,590 --> 00:05:10,850
And now we have a button.

90
00:05:10,850 --> 00:05:14,210
I'm just going to click it a couple more times so you can see how quickly it changes.

91
00:05:14,600 --> 00:05:19,930
And there we go with the changing of our component data, we are changing part of the view.

92
00:05:19,940 --> 00:05:24,440
That is the whole point of what Vue.js adds for us as a view library.

93
00:05:24,740 --> 00:05:25,070
All right.

94
00:05:25,280 --> 00:05:29,720
So lots of progress here in the very next couple of lessons, we're going to talk about how we can test

95
00:05:29,720 --> 00:05:33,260
this, the F and V logic within our test suite.

96
00:05:33,350 --> 00:05:34,010
I'll see you there.
