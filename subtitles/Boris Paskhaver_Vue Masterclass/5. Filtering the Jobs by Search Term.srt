1
00:00:00,390 --> 00:00:01,410
All right.

2
00:00:01,410 --> 00:00:08,730
So we now have a skills search term property on our View Store State and we also have a mutation to

3
00:00:08,730 --> 00:00:09,960
update that string.

4
00:00:10,170 --> 00:00:15,270
And later on, of course, we want to commit that mutation as the user types in our new input.

5
00:00:15,600 --> 00:00:21,180
Of course, the reason we're storing that skills search term string in state is so that we can use it

6
00:00:21,180 --> 00:00:24,330
to filter our jobs array, which is also in state.

7
00:00:24,630 --> 00:00:28,980
And the previous way that we've done that, of course when it came to, for example, our organization,

8
00:00:28,980 --> 00:00:34,980
our job type in our degree is we defined these smaller getter methods right here as an example, include

9
00:00:34,980 --> 00:00:36,060
job by organization.

10
00:00:36,360 --> 00:00:43,290
And these getter methods accepted a single job and using a specific criteria such as selected organizations.

11
00:00:43,290 --> 00:00:48,180
In this case, these getters determined whether one job fit the criteria or not.

12
00:00:48,450 --> 00:00:54,120
And then our filter job's getter, of course, aggregates all of these getters together to arrive at

13
00:00:54,120 --> 00:00:57,480
the final array of jobs that fit all of the criteria.

14
00:00:58,230 --> 00:01:00,540
And we're going to utilize the exact same logic here.

15
00:01:00,840 --> 00:01:02,280
We're going to create a new getter.

16
00:01:02,430 --> 00:01:04,680
It's going to be called include job by skill.

17
00:01:04,890 --> 00:01:11,520
And its responsibility will be to accept a single job and verify whether or not it belongs based on

18
00:01:11,520 --> 00:01:12,600
the user's skills.

19
00:01:12,600 --> 00:01:16,260
Search term property being in that jobs title.

20
00:01:16,620 --> 00:01:20,280
Remember from a few lessons ago, we're not going to check the description, we're just going to check

21
00:01:20,280 --> 00:01:20,910
the title.

22
00:01:21,180 --> 00:01:26,310
And the test should give you a better clue or a better understanding of what is going on here.

23
00:01:26,610 --> 00:01:29,220
So here I have my getters that test that's valid.

24
00:01:29,280 --> 00:01:30,960
Here is the tests for all of our getters.

25
00:01:31,320 --> 00:01:32,910
And I'm going to scroll down a little bit here.

26
00:01:34,080 --> 00:01:38,820
All of my included getter tests are kind of lumped close by right next to each other.

27
00:01:39,090 --> 00:01:42,330
So how about right below this one where we have include job by degree?

28
00:01:42,660 --> 00:01:44,190
I'll create a new describe.

29
00:01:44,910 --> 00:01:50,610
And what we're going to be testing is our new getter, which I will call include job by skill.

30
00:01:51,030 --> 00:01:56,460
The responsibility of this getter method will be to accept the state and a single job and confirm whether

31
00:01:56,460 --> 00:01:59,400
or not it should be included based on a skills match.

32
00:01:59,400 --> 00:01:59,670
Right.

33
00:02:00,030 --> 00:02:05,940
So right here it identifies if job matches users skill.

34
00:02:07,110 --> 00:02:09,300
Provide an arrow function as a second argument to it.

35
00:02:09,900 --> 00:02:14,460
And we're going to begin, of course, with our starting state so we can use an example like this for

36
00:02:14,460 --> 00:02:15,120
inspiration.

37
00:02:15,450 --> 00:02:19,860
So I'm going to have my state and I'm going to use the create state helper function, which is available.

38
00:02:20,700 --> 00:02:25,980
And of course in my state I now have a property called Skills Search Term and let's say that is set

39
00:02:25,980 --> 00:02:27,240
to a string like view.

40
00:02:27,660 --> 00:02:27,960
All right.

41
00:02:27,960 --> 00:02:30,150
So the user searches for view in my input.

42
00:02:30,150 --> 00:02:33,840
Eventually it'll make its way to my store state and that's what I have.

43
00:02:34,230 --> 00:02:35,820
Then I'm also going to have a job.

44
00:02:36,690 --> 00:02:41,460
And remember in this file, I'm going to have a create job helper function.

45
00:02:42,560 --> 00:02:45,010
And a job is going to have a bunch of properties.

46
00:02:45,020 --> 00:02:50,600
One of them is indeed a title, and let's say the title of this specific job is going to be view developer.

47
00:02:51,350 --> 00:02:56,540
So in this example, the search term, the user has a view is found within my title.

48
00:02:56,690 --> 00:03:02,510
So I do want to say that this job does indeed match it as a valid job to be included on the right hand

49
00:03:02,510 --> 00:03:06,410
side or in the filter jobs based on the criteria of skills match.

50
00:03:06,410 --> 00:03:06,710
Right.

51
00:03:07,070 --> 00:03:12,530
So what I'm going to say is here's a new concept called include job and I'm going to take my getters

52
00:03:12,530 --> 00:03:16,820
and I'm going to assume I'm going to have a new getter called include job by skill.

53
00:03:17,910 --> 00:03:22,840
And remember, the way this works, just as we have here, is we first invoke that generate and we provide

54
00:03:22,860 --> 00:03:23,430
the state.

55
00:03:23,460 --> 00:03:25,560
So in this case, our state is represented by state.

56
00:03:25,860 --> 00:03:28,170
And that guitar is going to return a new function.

57
00:03:28,320 --> 00:03:31,890
And it has that function that accepts the actual argument that we want to pass.

58
00:03:32,160 --> 00:03:36,180
So in this case, the argument we want to pass is our job, and that is going to be in the function

59
00:03:36,180 --> 00:03:37,260
that is returned by the getter.

60
00:03:37,530 --> 00:03:39,720
So I'm going to get that value, that function.

61
00:03:39,720 --> 00:03:42,690
I'm going to invoke it immediately and pass in my job.

62
00:03:43,140 --> 00:03:45,990
And what include job should give back to me should be a boolean.

63
00:03:46,380 --> 00:03:51,510
So right here I expect that include job should be equal to true.

64
00:03:52,590 --> 00:03:52,900
Why?

65
00:03:52,920 --> 00:03:53,310
True.

66
00:03:53,340 --> 00:03:55,440
Because this job should be included.

67
00:03:55,440 --> 00:03:59,910
Because the user's search term a view is found within the jobs title of view developer.

68
00:04:00,420 --> 00:04:00,660
All right.

69
00:04:00,660 --> 00:04:03,480
So with that, we can go ahead and add our implementation.

70
00:04:03,750 --> 00:04:07,200
So the first thing we need is to define a constant for this getter name.

71
00:04:07,530 --> 00:04:09,030
Let's open up our constants file.

72
00:04:10,500 --> 00:04:16,290
And right here in our Skills and Qualifications section, I can export a new concept which I will call

73
00:04:16,290 --> 00:04:18,690
include job by skill.

74
00:04:20,400 --> 00:04:23,730
And right here, I'm going to provide a string with the exact same content.

75
00:04:23,760 --> 00:04:24,420
There we go.

76
00:04:24,810 --> 00:04:25,620
There's our constant.

77
00:04:25,950 --> 00:04:28,800
Let me go ahead and import that up here.

78
00:04:29,130 --> 00:04:31,830
So right here, I'm going to add include job by skill.

79
00:04:32,250 --> 00:04:33,360
And down below here.

80
00:04:33,540 --> 00:04:33,900
Right.

81
00:04:33,900 --> 00:04:39,450
With all my other include functions I'm going to provide include job by skill.

82
00:04:40,570 --> 00:04:42,490
And I'm going to make that an arrow function in line.

83
00:04:42,700 --> 00:04:46,780
So remember, the first argument is going to be our state parameter, and that's going to be a type

84
00:04:46,780 --> 00:04:49,420
global state that is the current view store state.

85
00:04:49,690 --> 00:04:55,600
And then I'm going to have this method, this getter method return a function that accepts a single

86
00:04:55,600 --> 00:04:57,790
job of type job as a parameter.

87
00:04:58,150 --> 00:05:01,210
And here is where we actually do the logic that we want to do.

88
00:05:02,050 --> 00:05:04,120
So how are we going to write this logic?

89
00:05:04,150 --> 00:05:06,820
Well, of course, we need to reference the skills search term.

90
00:05:07,360 --> 00:05:12,910
So I know on my state I'm going to have access to skills search term, and I want to search for that

91
00:05:12,910 --> 00:05:15,310
string within my job title.

92
00:05:15,580 --> 00:05:22,600
So what I'm going to do here is my job object has a title property that is a string and on a string

93
00:05:22,600 --> 00:05:24,790
in JavaScript or in tightlipped as well.

94
00:05:24,910 --> 00:05:30,790
We have an includes method and the includes method returns a boolean based on whether it's argument

95
00:05:30,940 --> 00:05:33,340
or its input is found within that string.

96
00:05:33,640 --> 00:05:37,930
So what we're going to do here is invoke includes passing in the skills search term.

97
00:05:38,230 --> 00:05:44,800
So if this string includes this value, we're going to return a appropriate boolean, either true or

98
00:05:44,800 --> 00:05:45,160
false.

99
00:05:45,310 --> 00:05:48,610
And that's the exact boolean that I want to return out of this method.

100
00:05:48,850 --> 00:05:51,230
So I'm just going to return this evaluation right here.

101
00:05:51,310 --> 00:05:53,200
This will be a boolean, true or false?

102
00:05:53,470 --> 00:05:57,130
If the job title does include the skill search term, it will return.

103
00:05:57,130 --> 00:06:01,900
True, which is exactly what I want and exactly what I'm testing right here, because view should be

104
00:06:01,900 --> 00:06:03,340
included in view development.

105
00:06:03,820 --> 00:06:04,300
All right.

106
00:06:04,300 --> 00:06:09,040
So with that, we do see that we have a passing test and that is a good place to start.

107
00:06:09,250 --> 00:06:13,330
But in the very next lesson, we're going to see how it can improve this test a little bit to capture

108
00:06:13,360 --> 00:06:14,440
a couple edge cases.

109
00:06:14,740 --> 00:06:15,070
All right.

110
00:06:15,070 --> 00:06:16,690
So I will see you in the next lesson.
