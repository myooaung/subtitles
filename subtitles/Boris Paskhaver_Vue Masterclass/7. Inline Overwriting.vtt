WEBVTT
1
00:00:00.650 --> 00:00:01.430
All right.

2
00:00:01.430 --> 00:00:07.340
So in this quick lesson, I'd like to show you a shortcut that you can use to overwrite a data property

3
00:00:07.340 --> 00:00:08.300
within our template.

4
00:00:08.540 --> 00:00:15.020
We saw this earlier before with a view generated event object from an event like a click or an input.

5
00:00:15.320 --> 00:00:20.420
Well, we have the same syntax that we can utilize whenever we are reacting to our own custom events

6
00:00:20.570 --> 00:00:24.260
like handle input from the child text input component.

7
00:00:24.590 --> 00:00:29.600
So let's begin by deleting the methods object right here and all of those associated methods.

8
00:00:30.410 --> 00:00:36.860
So of course without those methods we need a way to overwrite the properties of Roland location in the

9
00:00:36.860 --> 00:00:38.720
respective places right here.

10
00:00:38.990 --> 00:00:44.150
So previously we were invoking the update roll method automatically, but what we can actually do in

11
00:00:44.150 --> 00:00:46.850
line here is overwrite it right here.

12
00:00:47.060 --> 00:00:52.340
Now, I generally prefer the method approach because it isolates the template which I think should be

13
00:00:52.340 --> 00:00:58.430
pure HTML or as simple and as dumb as it can be from the JavaScript section where I think most of the

14
00:00:58.430 --> 00:00:59.540
business logic should go.

15
00:00:59.750 --> 00:01:04.700
But this is a valid option in view, and I do want you to be exposed to it in case you see it in other

16
00:01:04.700 --> 00:01:05.270
code bases.

17
00:01:05.660 --> 00:01:09.980
So whenever we're referencing a data property, in our view, we do not need the this keyword.

18
00:01:09.980 --> 00:01:11.810
We can simply write it out by itself.

19
00:01:12.110 --> 00:01:16.310
So we have a role data property and we can overwrite it with the equal sign.

20
00:01:16.940 --> 00:01:20.360
And the question is what do we call this thing right here?

21
00:01:20.480 --> 00:01:25.430
How do we get access to the payload that the text input is going to provide to us right here?

22
00:01:26.120 --> 00:01:33.200
Well, the automatic name that view is going to give us is the exact same name that we saw earlier in

23
00:01:33.200 --> 00:01:36.890
the course when we were reacting to a view generated event in line.

24
00:01:37.070 --> 00:01:41.360
It's going to be the word event, but with a dollar sign in front of it.

25
00:01:41.690 --> 00:01:47.150
So event is going to represent this dot value from the text input component, which is the text that

26
00:01:47.150 --> 00:01:49.130
the user has entered up until that point.

27
00:01:49.460 --> 00:01:51.320
So dollar sign event.

28
00:01:51.980 --> 00:01:55.490
Now you may be curious, how does this work if we have multiple arguments here?

29
00:01:55.700 --> 00:01:57.230
To be honest, I'm not quite sure.

30
00:01:57.230 --> 00:02:02.150
But one thing you could do in case you don't know is to provide a second argument right here.

31
00:02:02.150 --> 00:02:06.620
That's going to be an object with properties, and that way you'll have all of those properties on this

32
00:02:06.620 --> 00:02:08.870
single event, which will be your entire object.

33
00:02:09.170 --> 00:02:13.640
In this case, our event is a simple string with the text, so we can assume that it's just going to

34
00:02:13.640 --> 00:02:18.980
be a string and automatically overwrite our row property with whatever that string payload happens to

35
00:02:18.980 --> 00:02:19.220
be.

36
00:02:20.030 --> 00:02:25.340
All right, so similarly down below here, instead of invoking the update location method that no longer

37
00:02:25.340 --> 00:02:28.520
exists, we want to update the location, data, property.

38
00:02:28.700 --> 00:02:35.030
And on the right side, we need access to whatever payload or data the child component has emitted with

39
00:02:35.030 --> 00:02:35.750
its message.

40
00:02:35.750 --> 00:02:36.950
That's called handle input.

41
00:02:36.950 --> 00:02:41.840
That's the name of the event, but we want the actual data from that event and that is going to be available

42
00:02:41.840 --> 00:02:43.670
via the dollar sign event.

43
00:02:45.580 --> 00:02:46.030
Name.

44
00:02:46.030 --> 00:02:50.650
So again, dollar sign event is any argument that we pass in here to the dollar sign admit method.

45
00:02:50.650 --> 00:02:54.250
In our child component we pass up the string with the currently entered text.

46
00:02:54.580 --> 00:03:00.310
We get that as dollar sign event in the parent and that allows us to write it in line like.

47
00:03:00.310 --> 00:03:05.140
So that's I think another advantage of methods by the way, is we can give that parameter, whatever

48
00:03:05.140 --> 00:03:10.090
name we want, we can call it payload, we can call it data compared to sticking with views way we can

49
00:03:10.090 --> 00:03:13.630
kind of customize it and again move more of the logic away from the template.

50
00:03:13.960 --> 00:03:18.640
So I generally prefer the methods approach, but this is also an alternate syntax and I do want you

51
00:03:18.640 --> 00:03:23.830
to be introduced to it in this lesson and of course it just to make sure everything is still functional.

52
00:03:23.830 --> 00:03:25.300
Let me transition to my browser.

53
00:03:25.540 --> 00:03:28.990
I mean, refresh, let me type a couple of characters here.

54
00:03:28.990 --> 00:03:35.650
So roll hello, wear goodbye me refresh here and then go into my job search form and we can see we are

55
00:03:35.650 --> 00:03:40.870
still getting those properties, the data properties that is updated from our child's palette.

56
00:03:41.170 --> 00:03:42.730
That's all there is to cover in this lesson.

57
00:03:42.730 --> 00:03:44.260
So I will see you in the next one.
