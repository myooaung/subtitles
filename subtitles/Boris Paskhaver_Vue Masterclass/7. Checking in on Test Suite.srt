1
00:00:00,730 --> 00:00:01,460
Okay.

2
00:00:01,460 --> 00:00:07,580
So this should be a quick and fun lesson on the left hand side here I have my accordion component and

3
00:00:07,580 --> 00:00:10,610
on the right hand side I have the test suite for the accordion.

4
00:00:11,000 --> 00:00:14,000
Now the accordion test suite doesn't have that many tests.

5
00:00:14,000 --> 00:00:15,590
It only has, I believe, two.

6
00:00:15,860 --> 00:00:21,260
The first one is just testing for the rendering of the slotted content and the second one is testing

7
00:00:21,260 --> 00:00:25,340
for the rendering of the slot and content when the parent does not provide anything.

8
00:00:25,700 --> 00:00:30,980
But there are still other tests in our test suite that are also utilizing the accordion.

9
00:00:31,190 --> 00:00:37,520
So for example, as a reminder, we have our job filter, sidebar, job types, component, and here

10
00:00:37,520 --> 00:00:43,280
we are rendering all of our content in this component inside an accordion component because this becomes

11
00:00:43,280 --> 00:00:44,150
the slot content.

12
00:00:44,390 --> 00:00:49,040
And in our actual tests for this component, we're using a full mount.

13
00:00:49,040 --> 00:00:51,290
So we are rendering an accordion there as well.

14
00:00:51,620 --> 00:00:55,940
So there are multiple test suites throughout our code base where we are using an accordion component

15
00:00:56,150 --> 00:01:01,760
and now we've completely refactored our accordion to use the new composition API implementation.

16
00:01:02,030 --> 00:01:03,350
But here is the good news.

17
00:01:03,530 --> 00:01:11,540
I think both because of our good test suite as well as because of the relative similarity between how

18
00:01:11,540 --> 00:01:17,360
composition API works relative to Options API and all of the analogous things that it gives us to work

19
00:01:17,360 --> 00:01:17,570
with.

20
00:01:17,900 --> 00:01:24,950
We'll be happy to find out that when we run our whole test suite using NPM Run Test Colon Unit, we're

21
00:01:24,950 --> 00:01:27,710
going to discover a most wonderful surprise.

22
00:01:28,190 --> 00:01:32,330
And I'll tell you what it is in exactly a couple seconds and you guessed it, it is that everything

23
00:01:32,330 --> 00:01:33,170
is still passing.

24
00:01:33,410 --> 00:01:39,110
So in other words, nothing we did over the course of the last couple lessons now no part of our refactor

25
00:01:39,110 --> 00:01:40,090
broke our tests.

26
00:01:40,100 --> 00:01:42,500
All of our tests are working exactly as expected.

27
00:01:42,740 --> 00:01:47,750
So the good news is, is even with the composition API, our core test logic remains the same.

28
00:01:47,960 --> 00:01:50,870
We're still mounting the component here or there.

29
00:01:50,870 --> 00:01:53,810
We're testing some pieces of it, some interaction with it.

30
00:01:53,960 --> 00:01:58,250
And by focusing less on the specific implementation and more about what the component is supposed to

31
00:01:58,250 --> 00:02:02,240
do, we could get into really good situations like this where nothing breaks.

32
00:02:02,360 --> 00:02:06,920
If we test what the components should do instead of how it does it, we're going to have a lot more

33
00:02:06,920 --> 00:02:12,140
of these flexible tests that are not brittle, that do not break whenever we make what I consider to

34
00:02:12,140 --> 00:02:13,670
be pretty drastic changes, right?

35
00:02:13,670 --> 00:02:19,130
We implemented a whole new way of doing things here, a brand new API, and yet everything stayed stable,

36
00:02:19,280 --> 00:02:19,760
stable.

37
00:02:19,880 --> 00:02:24,440
And so that is a really good sign and a really good, you know, vote of confidence for the test suites

38
00:02:24,950 --> 00:02:26,270
that we have, in my opinion.

39
00:02:26,660 --> 00:02:26,930
All right.

40
00:02:26,930 --> 00:02:32,000
So kind of a nice pick me up lesson to celebrate with and I will see you in the next lesson.
