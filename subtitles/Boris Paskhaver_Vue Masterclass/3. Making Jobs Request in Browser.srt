1
00:00:00,700 --> 00:00:01,390
Okay.

2
00:00:01,390 --> 00:00:06,940
So let's take a look at how JSON the server is going to return data to us at a given endpoint.

3
00:00:07,150 --> 00:00:11,740
Before we get there, though, there is one extension that I recommend you install in Google Chrome

4
00:00:11,740 --> 00:00:14,860
that makes it easier to read and decipher JSON.

5
00:00:15,160 --> 00:00:23,200
So if you go to Google and you search for JSON view Chrome and you had to this first link JSON view

6
00:00:23,200 --> 00:00:29,380
is a Chrome extension that's going to format your JSON response so that it looks like an actual JavaScript

7
00:00:29,380 --> 00:00:35,230
object and you get features like collapse, ability, expandability, etc. Otherwise if you don't have

8
00:00:35,230 --> 00:00:40,090
this extension, you're just going to receive the JSON as one big string blob and it becomes hard to

9
00:00:40,090 --> 00:00:41,830
figure out what the actual properties are.

10
00:00:42,010 --> 00:00:44,560
So I do strongly recommend installing this extension.

11
00:00:44,950 --> 00:00:49,390
You're going to see an install button right here I already have installed, but you can see that install

12
00:00:49,390 --> 00:00:49,660
button.

13
00:00:49,870 --> 00:00:50,500
You can press it.

14
00:00:50,500 --> 00:00:54,460
And then Jason, we should automatically launch into action.

15
00:00:54,460 --> 00:01:00,400
And any time you access an endpoint that returns JSON, you're going to then see that JSON response

16
00:01:00,430 --> 00:01:01,450
nicely formatted.

17
00:01:01,720 --> 00:01:06,550
So let's hit a sample endpoint that returns JSON, let's launch our Jason server.

18
00:01:06,910 --> 00:01:11,710
So I'm going to go to my terminal and I'm going to run the command we set up in the package.

19
00:01:11,710 --> 00:01:17,470
JSON found the previous lesson, so NPM run followed by our command, which we called backend.

20
00:01:17,560 --> 00:01:22,300
Let me run that and you're going to see that it's going to launch JSON server, it's going to watch

21
00:01:22,300 --> 00:01:23,620
Idbi JSON file.

22
00:01:23,620 --> 00:01:27,970
This little guy is really happy and says hi and you'll notice here it says resources.

23
00:01:28,180 --> 00:01:30,820
It's available at local host 3000 jobs.

24
00:01:30,820 --> 00:01:32,410
That is the endpoint that we defined.

25
00:01:32,620 --> 00:01:34,300
So let us go into our browser.

26
00:01:35,300 --> 00:01:41,960
And let us now go to local host 3000 so local host colon 3000 slash jobs.

27
00:01:42,200 --> 00:01:47,090
The 3000 refers to the port on your computer where this app or this server is running.

28
00:01:47,300 --> 00:01:48,650
So localhost is your computer.

29
00:01:48,650 --> 00:01:49,910
3000 is the port.

30
00:01:50,150 --> 00:01:54,290
And then remember, we actually set up our endpoint to be specifically slash jobs.

31
00:01:54,290 --> 00:01:57,230
So we have to go to that endpoint to get our jobs results.

32
00:01:57,470 --> 00:02:01,760
So I'm going to access this page and you'll see it popped into place very quickly.

33
00:02:01,790 --> 00:02:06,050
Just it was text originally and then JSON view formatted it into a nice response.

34
00:02:06,320 --> 00:02:12,890
So here is the exact same data that we had in our DB, that JSON file and we're now able to access it

35
00:02:12,890 --> 00:02:14,240
at this endpoint.

36
00:02:14,330 --> 00:02:19,340
So this is just like a URL on the web, except it is a URL that is running on our computer, but it's

37
00:02:19,340 --> 00:02:20,510
no different in the real world.

38
00:02:20,630 --> 00:02:24,530
Somebody would give you some kind of API, URL that you can hit in your app to get data.

39
00:02:24,710 --> 00:02:28,550
And here is the data that we're going to be receiving when we hit that endpoint.

40
00:02:28,730 --> 00:02:34,640
And this is 100 sample jobs that we can play around with and render a job listing for in our view app.

41
00:02:34,940 --> 00:02:39,440
So hopefully the benefits of JSON server are pretty clear in a parent's very cool NPM package.

42
00:02:39,680 --> 00:02:45,320
And with that, we have effectively our back end and we can go back to view and start making a request

43
00:02:45,320 --> 00:02:48,440
for this data and then reacting to that data when we receive it.
