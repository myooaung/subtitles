1
00:00:00,470 --> 00:00:01,280
Okay.

2
00:00:01,280 --> 00:00:05,100
So we spent a lot of time wiring up our spotlight component.

3
00:00:05,120 --> 00:00:10,400
Let's now render it within a parent component and provide some custom slot content.

4
00:00:10,760 --> 00:00:16,040
So I'm going to render my spotlight component in my hero component, which I have open on the left hand

5
00:00:16,040 --> 00:00:16,400
side.

6
00:00:16,670 --> 00:00:19,640
And there are going to be a lot of tailwind classes involved.

7
00:00:19,850 --> 00:00:24,410
And in order to just make this and move a little bit quicker, I'm not going to talk about each individual

8
00:00:24,410 --> 00:00:24,680
one.

9
00:00:24,830 --> 00:00:29,120
I'm just going to add them in sequence, because the goal here, of course, is to learn about the slots

10
00:00:29,120 --> 00:00:31,010
feature, not so much about talent.

11
00:00:31,400 --> 00:00:35,720
So I'm going to begin by adding a few classes here to my main element.

12
00:00:36,260 --> 00:00:44,840
So I'm going to add Flex, Flex Call and H screen and I'm also going to remove edge screen right here.

13
00:00:46,470 --> 00:00:51,300
And obviously the next step is to import our spotlight component and render it somewhere within our

14
00:00:51,300 --> 00:00:52,110
hero template.

15
00:00:52,410 --> 00:00:59,100
So below in the script section, I'm going to import spotlight that is going to come from the source

16
00:00:59,100 --> 00:01:04,260
directory components, job search and spotlight.

17
00:01:04,800 --> 00:01:08,160
And then I'm going to register it within my components object right here.

18
00:01:08,160 --> 00:01:14,400
So spotlight that enables us to use Spotlight anywhere in the body of my hero template.

19
00:01:14,820 --> 00:01:16,320
And let's go ahead and do that.

20
00:01:16,650 --> 00:01:23,190
So below our section right here in our main element right after this closing section tag is where I'm

21
00:01:23,190 --> 00:01:24,510
going to render my spotlight.

22
00:01:25,580 --> 00:01:27,770
I'm going to make it an opening and closing tag.

23
00:01:28,040 --> 00:01:33,650
And we know now that here is where we're going to render our slot content that's going to go right here

24
00:01:34,100 --> 00:01:35,090
on the right hand side.

25
00:01:35,390 --> 00:01:37,460
Whenever we do this v four right here.

26
00:01:37,490 --> 00:01:42,800
So whatever we provide in between the opening and closing tags is going to be repeated right here for

27
00:01:42,800 --> 00:01:45,350
every spotlight that we are iterating over.

28
00:01:45,680 --> 00:01:46,010
All right.

29
00:01:46,220 --> 00:01:50,030
Before we get there, though, I do want to add some top level classes to my spotlight.

30
00:01:50,030 --> 00:01:54,800
And as we know, this will simply cascade down and applied to my element right here.

31
00:01:55,130 --> 00:01:59,410
And those classes will be flex flex row.

32
00:02:01,050 --> 00:02:04,140
Justify centre and PB 16.

33
00:02:05,470 --> 00:02:05,890
All right.

34
00:02:06,280 --> 00:02:11,290
So as we talked about in the previous lesson, we're going to pass a piece of information up to my parent

35
00:02:11,290 --> 00:02:12,760
component in this case, hero.

36
00:02:12,910 --> 00:02:14,470
And it's going to be called Spotlight.

37
00:02:14,650 --> 00:02:17,950
How do I get access to this piece of information from my parent?

38
00:02:18,400 --> 00:02:23,350
So what we have to use is that vice slot directive that we introduced in the previous section.

39
00:02:23,560 --> 00:02:29,020
Right now we only have one slot component, so we could technically just provide HTML here and it would

40
00:02:29,020 --> 00:02:29,350
work.

41
00:02:29,500 --> 00:02:35,010
But if we want data like this piece of data that we passed up via slot props, we have to use the V

42
00:02:35,020 --> 00:02:35,890
slot syntax.

43
00:02:36,190 --> 00:02:37,990
So I'm going to create a template.

44
00:02:39,400 --> 00:02:42,760
And as we know, we can use the V slot directive on it.

45
00:02:43,360 --> 00:02:48,130
And as a reminder, the way this works is we provide a colon and the name of the slot.

46
00:02:48,280 --> 00:02:52,510
And in this case, I'm going to provide the name of default, which is the name that view is going to

47
00:02:52,510 --> 00:02:55,390
give the slot on the right hand side because we did not give it a name.

48
00:02:56,140 --> 00:03:00,460
And the reason we need the syntax is because at the very end, we're going to introduce something new.

49
00:03:00,820 --> 00:03:04,510
We're going to put an equal sign and then a pair of double quotes.

50
00:03:04,930 --> 00:03:10,810
And in this pair of double quotes, we're going to define the name that we want to assign to the object

51
00:03:10,810 --> 00:03:12,040
of slot props.

52
00:03:12,280 --> 00:03:15,850
That view is going to make available for us to use within this template.

53
00:03:16,510 --> 00:03:19,180
So let me write out the code and then we're going to talk about what I did.

54
00:03:19,420 --> 00:03:22,180
I'm going to call this object slot.

55
00:03:22,360 --> 00:03:22,910
Props.

56
00:03:23,590 --> 00:03:26,830
The name of this object is entirely up to you.

57
00:03:27,040 --> 00:03:33,190
But what this object represents, if I can just do a little bit of a common right here, is this is

58
00:03:33,190 --> 00:03:37,990
an object with all of the props that we provided right here in my child.

59
00:03:38,260 --> 00:03:44,710
So right now, this object will have a spotlight property set to the object that we have from our backend.

60
00:03:45,100 --> 00:03:51,400
And similarly right here, if I created an additional prop here like a equals two and then B equals

61
00:03:51,400 --> 00:03:56,980
three, what that would do is that would make it available right here, as in a property set to two

62
00:03:57,250 --> 00:03:58,780
and a, B property set to three.

63
00:03:59,080 --> 00:04:05,050
So whatever we define as slot props right here in line are bundled up in a JavaScript object.

64
00:04:05,470 --> 00:04:10,870
And what we do here is we give that JavaScript object a name in this case slot props, and we need to

65
00:04:10,870 --> 00:04:15,580
give it a name because we're going to reference that object in the HTML that we're about to write so

66
00:04:15,580 --> 00:04:21,520
that we can take these properties and use them and use their data in the template in the custom HTML

67
00:04:21,530 --> 00:04:25,750
that we provide in our parent component to inject into this slot right here.

68
00:04:26,170 --> 00:04:32,020
We have passed this data up and it's going to be made available on this object that we provide after

69
00:04:32,020 --> 00:04:36,460
an equal sign and the name of this slot and the name of the actual slot.

70
00:04:37,210 --> 00:04:37,540
Okay.

71
00:04:37,720 --> 00:04:40,390
So I'm going to remove A and B because we don't care about them.

72
00:04:41,290 --> 00:04:46,330
And so basically what we're left with is an object with a single spotlight property and now we can utilize

73
00:04:46,330 --> 00:04:47,200
it throughout our template.

74
00:04:47,500 --> 00:04:51,760
So let me start with a couple elements, components, and then we're going to talk about the specific

75
00:04:51,760 --> 00:04:53,320
use of slot props when we get to it.

76
00:04:53,650 --> 00:04:58,480
So I'm going to begin with a root or link because I want to make this entire thing a clickable link

77
00:04:58,510 --> 00:05:01,510
and router link is the view router component that allows us to do that.

78
00:05:02,740 --> 00:05:05,230
And immediately, I'm going to provide that to prop to this.

79
00:05:05,230 --> 00:05:11,620
And I'm going to navigate to the user to slash jobs, slash results whenever they click on anything

80
00:05:11,620 --> 00:05:12,490
inside my router link.

81
00:05:12,790 --> 00:05:14,920
And then I'm going to provide some classes here as well.

82
00:05:15,700 --> 00:05:21,070
So let's do Flex, Flex Call Annex five border.

83
00:05:21,100 --> 00:05:21,970
Let me save this.

84
00:05:22,690 --> 00:05:30,940
And then after that, we're going to do Rounded Dash LG, we're going to do W Dash 72, then big brand

85
00:05:30,940 --> 00:05:34,360
gray to then H 96.

86
00:05:34,600 --> 00:05:37,270
When you save that, hopefully that pushes it onto a new line.

87
00:05:37,270 --> 00:05:37,900
And it does.

88
00:05:38,140 --> 00:05:38,950
And there we go.

89
00:05:39,370 --> 00:05:39,790
Okay.

90
00:05:40,030 --> 00:05:42,970
The first thing I want to do in this router link is render an image.

91
00:05:43,270 --> 00:05:47,650
So what we're trying to do here is we're trying to render the first variant of the card that we saw

92
00:05:47,680 --> 00:05:49,210
on the Google Careers website.

93
00:05:49,420 --> 00:05:54,040
So this is going to be the version where we have the image on the very top and then the title below

94
00:05:54,040 --> 00:05:56,800
it, the description, and finally the link to the jobs page.

95
00:05:57,130 --> 00:06:02,650
So I want to render an image here and immediately I'm going to give it a class here of object contain.

96
00:06:03,280 --> 00:06:07,900
And in order to provide the source attribute of the image or in other words, the URL where this image

97
00:06:07,900 --> 00:06:13,090
is going to come from, we need to get this piece of information from our spotlight object.

98
00:06:13,090 --> 00:06:13,390
Right.

99
00:06:13,600 --> 00:06:19,660
As a reminder in our DB, that JSON file that we're fetching from in spotlight here is the image property

100
00:06:19,660 --> 00:06:23,530
on a spotlight object that gives us the URL of the image we want to fetch.

101
00:06:23,770 --> 00:06:28,540
So this spotlight object is what we're passing up to hero right here.

102
00:06:29,050 --> 00:06:32,590
And it's available via the slot props object.

103
00:06:32,890 --> 00:06:38,850
So right here, I'm going to get my slot props object right on that object.

104
00:06:38,860 --> 00:06:42,070
I have multiple props because I can define multiple props right here.

105
00:06:42,250 --> 00:06:45,490
So I want to specifically get my spotlight object.

106
00:06:45,730 --> 00:06:51,220
And on that spotlight object, we're going to have my IMG property to get that URL.

107
00:06:51,730 --> 00:06:54,880
Now, as always, this syntax will not work because view will think it's a string.

108
00:06:55,000 --> 00:07:00,580
So we have to v bind to dynamically bind to our source attribute and provide a reference to this property

109
00:07:00,580 --> 00:07:07,930
on this on this object, on this object which we defined right here and now we can reference that value

110
00:07:07,930 --> 00:07:13,450
that string from our DB, that JSON that we have fetched in spotlight and patch passed up to our hero

111
00:07:13,450 --> 00:07:13,810
parent.

112
00:07:14,770 --> 00:07:14,980
Right.

113
00:07:15,160 --> 00:07:19,840
And the beautiful part about this design is if another component wants to reuse the spotlight component

114
00:07:19,990 --> 00:07:23,380
and do something totally different in the template, it totally can.

115
00:07:23,500 --> 00:07:28,780
But now it has access to the data that the child wants to pass up to it so it can render it right here

116
00:07:28,780 --> 00:07:29,230
in line.

117
00:07:29,620 --> 00:07:30,010
All right.

118
00:07:30,250 --> 00:07:34,750
So as another example, let's render our title what's under the actual title of the spotlight?

119
00:07:35,050 --> 00:07:40,180
So right here below my image, I'm going to create a div and I'm going to provide it with a couple classes

120
00:07:40,180 --> 00:07:40,660
right here.

121
00:07:41,170 --> 00:07:42,910
Let's do h 48.

122
00:07:43,180 --> 00:07:47,500
Let's do 6p4 and empty three.

123
00:07:48,400 --> 00:07:53,030
And here I want to render an H3 and that H3 will have a couple of classes as well.

124
00:07:53,050 --> 00:07:56,200
Let's do text LG and font medium.

125
00:07:56,740 --> 00:08:00,490
So here in this age three element is where I want to render this spotlight title.

126
00:08:00,760 --> 00:08:02,430
Where where am I getting that from?

127
00:08:02,440 --> 00:08:07,210
I'm getting that from the spotlight object that my spotlight child is passing up to me that is available

128
00:08:07,210 --> 00:08:09,070
to me via the slot props object.

129
00:08:09,400 --> 00:08:13,000
So how do we interpolate or render some kind of text content to the screen?

130
00:08:13,240 --> 00:08:17,950
We use the view syntax of the double curly braces and then we simply have to reference the property

131
00:08:17,950 --> 00:08:18,310
we want.

132
00:08:18,700 --> 00:08:22,180
So we have our slot props object, which we define on line 24.

133
00:08:22,300 --> 00:08:25,390
That is the complete collection of props on that object.

134
00:08:25,390 --> 00:08:30,610
I have a spotlight property as defined right here, which is the reference to the Spotlight object that

135
00:08:30,610 --> 00:08:32,620
we are currently iterating over in our V4.

136
00:08:32,770 --> 00:08:37,870
And on that object I have a title property and that's the string that I actually want to render within

137
00:08:37,870 --> 00:08:38,530
my H3.

138
00:08:39,700 --> 00:08:40,630
Same idea below.

139
00:08:40,630 --> 00:08:45,910
I'm going to render a paragraph tagged because I want to render a paragraph for the description of my

140
00:08:45,910 --> 00:08:46,410
spotlight.

141
00:08:46,780 --> 00:08:50,620
So this is going to have a class of empty three and text.

142
00:08:50,740 --> 00:08:55,180
So how do I get that description property off of my spotlight object?

143
00:08:55,390 --> 00:08:56,440
Same exact syntax.

144
00:08:56,440 --> 00:08:59,140
I'm going to interpolate that text on the screen.

145
00:08:59,410 --> 00:09:01,570
I want to talk to my slot props object.

146
00:09:01,570 --> 00:09:03,550
I gave it the name slot props up here.

147
00:09:03,700 --> 00:09:05,190
So I have to use that name right here.

148
00:09:05,200 --> 00:09:09,430
This name is up to me on that collection of props given to me from the child.

149
00:09:09,430 --> 00:09:12,490
I have a spotlight property representing my spotlight object.

150
00:09:12,700 --> 00:09:14,740
That object has a description property.

151
00:09:16,430 --> 00:09:17,060
And there we go.

152
00:09:17,630 --> 00:09:17,930
All right.

153
00:09:17,940 --> 00:09:22,190
Now we're going to be able to render that piece of information finally after this dive right here,

154
00:09:22,190 --> 00:09:23,900
I'm just going to create another router link.

155
00:09:25,400 --> 00:09:28,460
And this is also going to go to my.

156
00:09:30,780 --> 00:09:32,730
Slash Jobs slash results page.

157
00:09:33,720 --> 00:09:41,340
It's going to have the text of C jobs and then it's also going to have a bunch of tailwind classes on

158
00:09:41,340 --> 00:09:41,970
it as well.

159
00:09:43,060 --> 00:09:43,240
P.

160
00:09:43,320 --> 00:09:44,130
X six.

161
00:09:44,940 --> 00:09:45,270
P.

162
00:09:45,270 --> 00:09:46,920
B for text.

163
00:09:46,920 --> 00:09:47,880
Dash Esim.

164
00:09:48,180 --> 00:09:50,500
Text dash brand blue one.

165
00:09:51,210 --> 00:09:51,840
Save that.

166
00:09:52,110 --> 00:09:52,940
And there we have it.

167
00:09:52,950 --> 00:09:55,050
We have our first variation of a card.

168
00:09:55,470 --> 00:10:01,080
It is providing custom HTML for the slot from the parent hero component.

169
00:10:01,290 --> 00:10:08,100
So this thing right here, this entire template is what we're going to inject into every slot right

170
00:10:08,100 --> 00:10:09,900
here for every iteration.

171
00:10:09,910 --> 00:10:10,200
Right?

172
00:10:10,380 --> 00:10:14,790
So if we're iterating over an array of two spotlights in spotlight, we're going to inject us twice.

173
00:10:15,090 --> 00:10:17,940
And for each iteration, we're going to provide our spotlight object.

174
00:10:17,940 --> 00:10:22,770
We're going to pass it up to the parent via a spotlight property on our object called slot props right

175
00:10:22,770 --> 00:10:23,040
here.

176
00:10:23,280 --> 00:10:28,740
We can access that right here and use that object's distinct title and description and image properties

177
00:10:28,950 --> 00:10:30,240
to render what we want right here.

178
00:10:30,900 --> 00:10:35,340
The only reason that we're seeing a little bit of an aesthetic violation here is once again, yes,

179
00:10:35,340 --> 00:10:38,400
lint wants us to use the shorthand, which we totally can.

180
00:10:38,520 --> 00:10:40,870
We can use the hashtag here instead of slot.

181
00:10:41,130 --> 00:10:45,570
Same syntax, the hashtag followed by the name of the slot and equal sign.

182
00:10:45,570 --> 00:10:50,760
And then the name we want to assign to the object that's going to store all of these props right here

183
00:10:50,760 --> 00:10:53,580
that we assigned it to the slot in the child component.

184
00:10:53,940 --> 00:10:54,330
All right.

185
00:10:54,630 --> 00:10:58,620
So with that, we can save this and head to our browser and we should get what we expect.

186
00:11:00,010 --> 00:11:02,080
So right here, I'm going to navigate to Chrome.

187
00:11:02,410 --> 00:11:03,530
Give me just a moment.

188
00:11:03,550 --> 00:11:04,870
Technical issues on my end.

189
00:11:05,830 --> 00:11:06,990
Heading back to job search.

190
00:11:07,000 --> 00:11:08,350
And there we go.

191
00:11:08,560 --> 00:11:10,120
Here are our two cards.

192
00:11:10,360 --> 00:11:15,010
And notice we have the image on top that is dynamically coming from the IMG property.

193
00:11:15,160 --> 00:11:16,720
Here is our dynamic title.

194
00:11:16,930 --> 00:11:18,400
Here is our dynamic paragraph.

195
00:11:18,430 --> 00:11:19,690
Here is our routing link.

196
00:11:19,870 --> 00:11:27,100
These attributes, these properties are coming from this spotlight prop that we passed up from our child.

197
00:11:27,220 --> 00:11:28,810
From our spotlight component.

198
00:11:28,930 --> 00:11:31,030
Up to the hero component.

199
00:11:31,300 --> 00:11:37,510
We found a way to get data from our child up to the parent component that is providing that custom dynamic

200
00:11:37,510 --> 00:11:38,290
slot content.

201
00:11:38,530 --> 00:11:43,900
And that way we can customize that slot content to have some piece of text or information that we need,

202
00:11:44,080 --> 00:11:48,310
such as a custom value for an H2 or a custom value for a paragraph.

203
00:11:49,120 --> 00:11:49,390
Right?

204
00:11:49,510 --> 00:11:55,090
So the parent still exerts some degree of control over how things look, but now it can mix how things

205
00:11:55,090 --> 00:11:58,960
look with some content that the child will pass up to it.

206
00:11:59,620 --> 00:11:59,860
All right.

207
00:11:59,860 --> 00:12:04,900
And that is the beauty of slot slot props as well as what we call scoped slots in view.

208
00:12:05,200 --> 00:12:10,360
So I'm going to show you how this design allows us to very easily customize the look and feel of these

209
00:12:10,360 --> 00:12:11,680
cards in the very next lesson.
