1
00:00:00,440 --> 00:00:01,280
Okay.

2
00:00:01,280 --> 00:00:07,430
So before we explore Vue router in our browser, there's one more file that I'd like to clean up and

3
00:00:07,430 --> 00:00:09,230
that is app that view.

4
00:00:09,680 --> 00:00:11,840
So I'm going to open it up here in this code.

5
00:00:11,840 --> 00:00:17,030
And as a reminder, app dot view is the complete starting point of our app.

6
00:00:17,510 --> 00:00:19,610
So just to remind you, if I open up Main.

7
00:00:19,940 --> 00:00:26,960
Yes, in here we import our app component as our most top level component and that's where we kick things

8
00:00:26,960 --> 00:00:28,790
off on the view app side of things.

9
00:00:29,150 --> 00:00:37,340
So when Vue mounts itself to the div with an ideas app in our HTML, it fundamentally mounts or launches

10
00:00:37,340 --> 00:00:38,570
the app component.

11
00:00:39,380 --> 00:00:42,590
So how does that play a role in regards to view router?

12
00:00:42,860 --> 00:00:49,820
Well, remember, that view is a single page app, so the page never reloads when it load to the first

13
00:00:49,820 --> 00:00:50,120
time.

14
00:00:50,120 --> 00:00:52,850
The user doesn't actually really navigate to a new route.

15
00:00:53,060 --> 00:00:59,030
They just have the illusion of doing that and view takes care of this swapping of the components when

16
00:00:59,030 --> 00:01:01,160
the user navigates to a new route.

17
00:01:01,490 --> 00:01:06,710
And there's a special component that we have to use somewhere in our app that is going to enable us

18
00:01:06,920 --> 00:01:13,880
to have that swap ability to have that dynamic aspect, a view, swapping our components in a given

19
00:01:13,880 --> 00:01:17,900
location on the page whenever we change to a different URL.

20
00:01:18,260 --> 00:01:20,330
So we're going to get there just a minute for now.

21
00:01:20,330 --> 00:01:25,790
Let's clean up a bunch of extra stuff in this file that they've usually added for us.

22
00:01:26,030 --> 00:01:31,610
So first up it out of this whole style section, we do not need this at all so we can remove this entirely.

23
00:01:31,880 --> 00:01:39,160
And then as always, let's add our script tag and let's export default a plain JavaScript object and

24
00:01:39,170 --> 00:01:42,650
we'll provide a single name property set to app.

25
00:01:43,250 --> 00:01:43,670
All right.

26
00:01:43,820 --> 00:01:51,680
And then here, let's delete all of this code for now and let's put a single component in here and that

27
00:01:51,680 --> 00:01:54,230
component is going to be router view.

28
00:01:54,500 --> 00:01:56,600
So let me write it out and then we'll talk about it.

29
00:01:56,600 --> 00:01:58,880
It's going to be a self-closing component.

30
00:01:58,880 --> 00:02:01,400
So router dash view.

31
00:02:02,080 --> 00:02:03,860
So I'm going to close that off right here.

32
00:02:04,190 --> 00:02:06,710
You might be curious, where is this component coming from?

33
00:02:06,860 --> 00:02:09,050
This is a global component.

34
00:02:09,140 --> 00:02:15,200
As a reminder, global components are available to be used in any of our view components.

35
00:02:15,320 --> 00:02:16,850
We do not need to import it.

36
00:02:16,880 --> 00:02:19,520
We do not need to register it as a local component.

37
00:02:20,240 --> 00:02:24,650
It is available to be used globally, which means any, any file, any component.

38
00:02:24,890 --> 00:02:26,960
So where are we getting this component from?

39
00:02:26,960 --> 00:02:33,470
Actually, whenever we use this code right here, this use method and pass in the router object, the

40
00:02:33,470 --> 00:02:40,460
view router library gives us some components out of the box and an example one is router view and it

41
00:02:40,460 --> 00:02:46,820
registers them globally the exact same way that we manually registered the font awesome icon component

42
00:02:47,240 --> 00:02:48,230
earlier in the course.

43
00:02:48,410 --> 00:02:53,690
The view router does that for us automatically and the reason it does that for us automatically is because

44
00:02:53,690 --> 00:02:59,630
the router view component as an example is a component that we can expect to use in any component throughout

45
00:02:59,630 --> 00:03:04,370
the app, along with some other complementary components like Router Link, which we'll talk about in

46
00:03:04,370 --> 00:03:04,970
a few lessons.

47
00:03:05,330 --> 00:03:07,190
So what does Router View do?

48
00:03:07,190 --> 00:03:12,320
Fundamentally, what router view does is it doesn't actually render anything visually on the screen,

49
00:03:12,500 --> 00:03:19,280
but this is the component that is responsible for watching the URL and then swapping the dynamic content

50
00:03:19,280 --> 00:03:24,020
on the screen based on what is in the roots file.

51
00:03:24,170 --> 00:03:26,480
So this is the component that is tracking.

52
00:03:27,990 --> 00:03:28,830
This file.

53
00:03:29,490 --> 00:03:33,780
It's the component that's watching the URL and saying, okay, is the URL slash?

54
00:03:33,780 --> 00:03:34,320
Is that the root?

55
00:03:34,320 --> 00:03:34,590
Root?

56
00:03:34,770 --> 00:03:35,240
Okay.

57
00:03:35,250 --> 00:03:38,280
Then I'm going to render the home view right here.

58
00:03:38,820 --> 00:03:44,370
Alternatively, this component says, okay, if the root is jobs slash results, what do I render?

59
00:03:44,380 --> 00:03:47,550
I'm going to render the job results view right here.

60
00:03:47,820 --> 00:03:53,820
So this component specifies the part of the page where we actually want to render that dynamic piece

61
00:03:53,820 --> 00:03:56,280
of content that is based on the root.

62
00:03:57,090 --> 00:03:57,480
Okay.

63
00:03:57,750 --> 00:03:59,650
So let's first see this in the browser.

64
00:03:59,670 --> 00:04:04,110
So if I navigate to the browser, here I am on my slash root.

65
00:04:04,590 --> 00:04:04,890
Right.

66
00:04:04,890 --> 00:04:06,990
And so if I look in my view devtools.

67
00:04:08,750 --> 00:04:10,370
We'll see, in my view, dev tools.

68
00:04:10,400 --> 00:04:11,600
Let's see if I can refresh.

69
00:04:11,600 --> 00:04:13,160
This might be a little bit slow here.

70
00:04:13,910 --> 00:04:15,890
Something might be a little bit funky.

71
00:04:16,460 --> 00:04:17,570
Where are my components?

72
00:04:18,410 --> 00:04:19,280
Where do they go off to?

73
00:04:19,290 --> 00:04:20,090
We have our roots.

74
00:04:20,090 --> 00:04:21,580
Where are actual components here?

75
00:04:22,990 --> 00:04:23,170
Me.

76
00:04:23,170 --> 00:04:25,120
See if I can select this thing right here.

77
00:04:25,660 --> 00:04:26,210
There we go.

78
00:04:26,230 --> 00:04:28,420
Took a little bit of a troubleshooting.

79
00:04:28,630 --> 00:04:31,580
So here we have a top level router view component.

80
00:04:31,600 --> 00:04:33,100
This is the one that we just rendered.

81
00:04:33,310 --> 00:04:36,250
And this is the one that keeps track of the route.

82
00:04:36,250 --> 00:04:39,160
So it notices that it is a slash route.

83
00:04:39,370 --> 00:04:45,700
And so it knows to render which component the one we told it to render in the routes file, which is

84
00:04:45,700 --> 00:04:46,780
home view.

85
00:04:47,900 --> 00:04:48,230
Right.

86
00:04:48,470 --> 00:04:53,550
So you might guess what is going to happen when we navigate to jobs slash results.

87
00:04:53,570 --> 00:04:54,950
This is the alternate route.

88
00:04:55,280 --> 00:05:00,590
So when we navigate here, we're still going to have a router view component because that is the one

89
00:05:00,590 --> 00:05:07,010
that is keeping track of those changes, except it knows in the routes file that we said when the earlier

90
00:05:07,020 --> 00:05:13,280
slash job slash results, it should render a totally different view, which is the job results view.

91
00:05:14,360 --> 00:05:18,410
And so we see the different H1 from that different view component file.

92
00:05:18,680 --> 00:05:19,040
All right.

93
00:05:19,250 --> 00:05:21,320
Now, let me show you where the dynamism lies.

94
00:05:21,530 --> 00:05:27,320
Let me, for example, go here and I'm going to add an H one above right of you.

95
00:05:27,320 --> 00:05:33,170
And I'm just going to say, let's say above router view and then below I'll add, let's say an H2 and

96
00:05:33,170 --> 00:05:37,940
I'll just say below router view and the estimate elements themselves are irrelevant.

97
00:05:38,120 --> 00:05:44,120
All that is important here is that I'm putting a different output above the router view component and

98
00:05:44,120 --> 00:05:47,240
a different output below the router view component.

99
00:05:47,660 --> 00:05:53,780
So let me go into my browser now and you'll notice here that we have that content appear above router

100
00:05:53,780 --> 00:05:56,120
view and below router view as expected.

101
00:05:56,330 --> 00:06:03,170
And in the middle is where it injects that dynamic view, where it injects that dynamic component.

102
00:06:03,440 --> 00:06:08,960
So you'll notice if I navigate to my home view at my root route, we're still going to keep the constant

103
00:06:08,960 --> 00:06:14,780
H1 and H2 here because we hardcoded that in our apt view file it will always render.

104
00:06:15,080 --> 00:06:19,430
But what the router view component does is it swaps the dynamic element.

105
00:06:19,700 --> 00:06:24,650
So the advantage of this is that we can put this wherever in the page we actually want that dynamic

106
00:06:24,650 --> 00:06:25,640
content to render.

107
00:06:25,850 --> 00:06:32,540
And what and what syntax like this allows us to do is it allows each page to have a common aspect to

108
00:06:32,540 --> 00:06:33,590
it that is shared.

109
00:06:33,920 --> 00:06:37,340
So a perfect use case for something like this is our main nav.

110
00:06:37,550 --> 00:06:41,330
If you think about our main nav, it does not vary from view to view.

111
00:06:41,480 --> 00:06:47,690
Every single view in our app is going to have the same primary main nav, the same navigation menu at

112
00:06:47,690 --> 00:06:48,170
the top.

113
00:06:48,440 --> 00:06:54,080
So what we can do, for example, is in app, we can always render a may nav component that will exist

114
00:06:54,080 --> 00:06:58,400
in every single route because it's not dynamic, it is part of the core app component.

115
00:06:58,670 --> 00:07:05,600
And then we can use the router view component to specify to render the dynamic view immediately below

116
00:07:05,600 --> 00:07:06,320
the main NAV.

117
00:07:06,530 --> 00:07:14,660
So view will watch the URL and swap the proper view component in but only below the constant static

118
00:07:14,660 --> 00:07:17,000
main nav which is unchanging.

119
00:07:17,840 --> 00:07:20,480
All right, that's all there is to cover in this lesson.

120
00:07:20,480 --> 00:07:23,180
Let's head back here and remove this H1 and H2.

121
00:07:23,330 --> 00:07:26,690
That's just to demonstrate the way that router view works.

122
00:07:26,690 --> 00:07:27,710
It's a component.

123
00:07:27,920 --> 00:07:33,080
It doesn't render anything visually on the screen, but it's responsibilities to keep track of the path,

124
00:07:33,470 --> 00:07:38,750
match it with a given route, and then render the correct component that we've specified in our collection

125
00:07:38,750 --> 00:07:39,160
of routes.

126
00:07:39,170 --> 00:07:44,540
That's all that the router view component does, and that allows us to inject dynamism wherever we want

127
00:07:44,540 --> 00:07:45,410
into the app.

128
00:07:45,650 --> 00:07:46,010
All right.

129
00:07:46,190 --> 00:07:47,810
That's all there is to cover in this lesson.

130
00:07:47,930 --> 00:07:52,280
In the very next one, we're going to take a look at another global component that Vue router gives

131
00:07:52,280 --> 00:07:53,990
us, and that is router link.
