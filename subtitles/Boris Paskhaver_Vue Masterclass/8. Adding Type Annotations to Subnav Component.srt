1
00:00:00,390 --> 00:00:01,290
All right.

2
00:00:01,290 --> 00:00:06,780
So another day, another component, as the old saying goes in this lesson, let's go ahead and move

3
00:00:06,780 --> 00:00:09,270
our sub nav component to be in TypeScript.

4
00:00:09,660 --> 00:00:15,060
So I'm going to open up sub nav that view and apply the exact same principles right here.

5
00:00:15,090 --> 00:00:17,950
Lang equals tts right here.

6
00:00:17,970 --> 00:00:21,930
Import define component from view.

7
00:00:21,960 --> 00:00:25,800
I think I'm getting a little bit quicker typing it out just because of how many times I've done so.

8
00:00:26,280 --> 00:00:27,110
All right, right here.

9
00:00:27,150 --> 00:00:28,310
Define component.

10
00:00:28,320 --> 00:00:29,100
Invoke it.

11
00:00:30,060 --> 00:00:31,440
Pass in my object save.

12
00:00:31,440 --> 00:00:34,080
That doesn't look like there are any violations, which is great.

13
00:00:34,500 --> 00:00:36,060
Let's open up the test file.

14
00:00:36,060 --> 00:00:37,320
Sub nav that test that.

15
00:00:37,320 --> 00:00:37,710
Yes.

16
00:00:38,100 --> 00:00:42,030
And I'm probably going to be moving a lot quicker through my explanations because we've basically tackled

17
00:00:42,030 --> 00:00:43,230
a lot of these issues before.

18
00:00:43,680 --> 00:00:45,000
So, you know the drill by now.

19
00:00:45,010 --> 00:00:47,610
Let's convert this to have a test extension.

20
00:00:49,050 --> 00:00:51,620
And the only issue we're going to see here, there are a couple.

21
00:00:51,630 --> 00:00:54,810
The first one is we need to add a dot view extension to the end of this.

22
00:00:55,260 --> 00:00:56,580
That's not a problem here.

23
00:00:56,580 --> 00:01:02,310
You can see we're having the familiar issue of TypeScript not recognizing that just that Mark has replaced

24
00:01:02,310 --> 00:01:04,860
these original implementations with mock objects.

25
00:01:05,100 --> 00:01:07,470
We know the solution for that is to use the as keyword.

26
00:01:07,680 --> 00:01:11,580
So right here I'm going to do it for my two imports.

27
00:01:11,820 --> 00:01:17,640
So right here for my use, confirm root import on line six, I'm going to say convert use, confirm

28
00:01:17,640 --> 00:01:18,600
root mark.

29
00:01:18,900 --> 00:01:23,250
And that is going to be referencing my use confirm root import, but telling TypeScript to treat it

30
00:01:23,250 --> 00:01:25,230
as a different type, which is just mark.

31
00:01:25,830 --> 00:01:29,220
And then we also need the one above it which is filter jobs.

32
00:01:29,310 --> 00:01:31,650
So convert use filter jobs.

33
00:01:31,980 --> 00:01:38,280
Mark is going to be my original use filter jobs function, but I'm going to tell TypeScript to now treat

34
00:01:38,280 --> 00:01:43,020
it as a just mock instead, which is what it is, because that's what just Mark does for us.

35
00:01:43,380 --> 00:01:47,370
And that means that whenever I use mock return value, I need to make sure I use my new constants.

36
00:01:47,700 --> 00:01:54,120
So right here this is now going to be used confirm root mark use filter jobs mark scrolling down same

37
00:01:54,120 --> 00:01:54,720
thing here.

38
00:01:55,080 --> 00:02:01,920
Mark use filter jobs mark save that are issues go away that allows us to run our test suite with NPM

39
00:02:01,920 --> 00:02:03,300
run test colon watch.

40
00:02:05,240 --> 00:02:08,930
And that will take care of our sub nav, which appears directly below the main nav.

41
00:02:09,230 --> 00:02:14,180
As a reminder is where we show the number of filter jobs by talking to the filter jobs getter.

42
00:02:14,660 --> 00:02:15,010
All right.

43
00:02:15,020 --> 00:02:16,160
Everything is passing.

44
00:02:16,160 --> 00:02:16,820
Looking good.

45
00:02:16,820 --> 00:02:18,590
And I will see you in the next lesson.
