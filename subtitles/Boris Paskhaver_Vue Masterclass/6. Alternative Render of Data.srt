1
00:00:00,570 --> 00:00:01,400
Okay.

2
00:00:01,410 --> 00:00:07,530
So in this lesson, I want to show you how we can create a totally different looking card object by

3
00:00:07,530 --> 00:00:13,980
switching up the HTML next that we have here while still relying on these slot props that we receive

4
00:00:14,130 --> 00:00:15,480
from our spotlight component.

5
00:00:15,840 --> 00:00:19,560
So for this lesson, you actually do not need to copy what I'm about to paste.

6
00:00:19,710 --> 00:00:23,460
In fact, I don't even want to write it out because it's going to take a little bit of time.

7
00:00:23,700 --> 00:00:28,290
So I'm simply going to copy and paste a collection of code I have on my other screen, and I'm going

8
00:00:28,290 --> 00:00:31,860
to replace this render of spotlight with an alternative render.

9
00:00:32,070 --> 00:00:33,810
Again, you do not need to copy this.

10
00:00:33,810 --> 00:00:37,800
We're going to return back to our original implementation at the end of the lesson.

11
00:00:38,000 --> 00:00:40,140
This this is purely for the sake of example.

12
00:00:40,470 --> 00:00:42,510
So I'm going to paste my new code right here.

13
00:00:42,780 --> 00:00:44,640
It is an alternate form of spotlight.

14
00:00:44,640 --> 00:00:46,890
So we're still using our spotlight component.

15
00:00:47,220 --> 00:00:51,420
We are still providing our slot content between the opening and closing tags.

16
00:00:51,630 --> 00:00:57,330
We are still using this syntax to access the props of this slot right here and make them available via

17
00:00:57,330 --> 00:00:58,530
a slot props object.

18
00:00:58,740 --> 00:01:02,070
We're still using that object and its spotlight properties throughout.

19
00:01:02,280 --> 00:01:04,410
For example, here we are rendering and H3.

20
00:01:04,560 --> 00:01:05,850
Here we are rendering a peep.

21
00:01:06,030 --> 00:01:10,800
Here we are using it to generate some dynamic styles for this div and we're giving it a background image

22
00:01:10,980 --> 00:01:16,650
set to that spotlight objects, image, property, etc. So I'm going to save this and head to the browser

23
00:01:17,400 --> 00:01:20,310
and we're going to see a totally different look and feel on a web page.

24
00:01:20,580 --> 00:01:23,460
You can even see it change dynamically or immediately in front of us.

25
00:01:23,670 --> 00:01:25,950
Here is the alternate representation of the card.

26
00:01:26,130 --> 00:01:27,750
It has a totally different look and feel.

27
00:01:27,750 --> 00:01:30,780
We have the long, really wide card.

28
00:01:30,900 --> 00:01:34,710
We have the title right here, the description, the link down below.

29
00:01:34,830 --> 00:01:40,020
So it looks completely different from what we used to have, but it's still reusing our original spotlight

30
00:01:40,020 --> 00:01:40,560
component.

31
00:01:40,560 --> 00:01:46,230
It allows the spotlight component to handle some of the re-usable logic, such as fetching the actual

32
00:01:46,230 --> 00:01:50,160
data, such as rendering an unordered list full of list items.

33
00:01:50,400 --> 00:01:57,180
So we've isolated that reusable chunk of content to its own component while allowing the parent to customize

34
00:01:57,180 --> 00:02:02,970
the actual look and feel of the data data that we were able to receive from the spotlight component

35
00:02:03,150 --> 00:02:05,580
through the use of slot props.

36
00:02:05,580 --> 00:02:05,910
Right.

37
00:02:05,910 --> 00:02:07,590
That is the key takeaway from this section.

38
00:02:07,590 --> 00:02:14,790
How can we pass data from the child to the parent so the parent can use that data in the dynamic template

39
00:02:14,790 --> 00:02:15,960
that it generates?

40
00:02:16,170 --> 00:02:17,280
And this is the advantages.

41
00:02:17,280 --> 00:02:22,320
We can have totally different designs of cards while still reusing the spotlight component for the fetching

42
00:02:22,320 --> 00:02:25,290
and the semantic elements in the optimal right.

43
00:02:25,470 --> 00:02:29,820
And as you might expect, we're not going to cover this in the course, but we can later on extract

44
00:02:29,820 --> 00:02:36,540
this logic right here to its own separate component so that we can render one type of card for one type

45
00:02:36,540 --> 00:02:39,090
of spotlight, then the other card for another.

46
00:02:39,090 --> 00:02:39,360
Right?

47
00:02:39,540 --> 00:02:44,760
And we can still reuse these concepts along with regular view concepts like passing props down to components

48
00:02:45,360 --> 00:02:49,170
to simply give whatever component the data that it needs.

49
00:02:49,260 --> 00:02:49,590
Right.

50
00:02:49,590 --> 00:02:50,910
That's basically the whole idea here.

51
00:02:51,150 --> 00:02:55,260
So with that, in the very next lesson, I'm going to return back to our original implementation and

52
00:02:55,260 --> 00:03:00,900
we'll pick right back up by showing you some small optimizations we can do when working with slot props.
