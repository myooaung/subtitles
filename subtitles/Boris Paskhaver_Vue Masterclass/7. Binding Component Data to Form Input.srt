1
00:00:00,700 --> 00:00:06,500
In this lesson, I'll show you how to bind our components data to our form input fields.

2
00:00:06,820 --> 00:00:09,610
So let's open up our job search form component.

3
00:00:09,610 --> 00:00:15,520
And here I'm going to scroll down all the way to the bottom where we have our configuration object for

4
00:00:15,520 --> 00:00:16,150
the component.

5
00:00:16,510 --> 00:00:19,810
And I'm going to use the familiar data method right here.

6
00:00:20,470 --> 00:00:26,470
And as a reminder, the way this works is we return a plane JavaScript object and the object's properties

7
00:00:26,470 --> 00:00:31,510
are available for us to use in the template and we can render them visually using interpolation.

8
00:00:31,660 --> 00:00:34,720
We can use them in conditionals such as the VRF directive.

9
00:00:34,870 --> 00:00:38,320
We can iterate over them with V for whatever we want to do.

10
00:00:38,320 --> 00:00:44,440
The point is these data properties are available to be used in our template and I'd like to define two

11
00:00:44,440 --> 00:00:51,640
properties, each of which is going to keep track of the user's entry for their desired role and their

12
00:00:51,640 --> 00:00:52,900
desired location.

13
00:00:53,110 --> 00:00:59,290
So for each input field, I'm going to create a corresponding data property to keep track of that user

14
00:00:59,290 --> 00:00:59,710
input.

15
00:01:00,040 --> 00:01:05,110
So I'll begin with role because the user will enter a role and I'm going to start this data property

16
00:01:05,110 --> 00:01:07,330
off with an initial value of an empty string.

17
00:01:08,170 --> 00:01:13,840
Then similarly, I'm going to have another data property called location, and that will also start

18
00:01:13,840 --> 00:01:14,950
off as an empty string.

19
00:01:15,640 --> 00:01:16,000
All right.

20
00:01:16,330 --> 00:01:21,070
Now, what I'd like to do is to bind these properties to their respective inputs.

21
00:01:21,370 --> 00:01:26,110
Now, whenever you hear the word bind or connect, the first directive that should come to mind is,

22
00:01:26,110 --> 00:01:31,720
of course, the V bind directive, because the whole purpose of the V bind directive is to connect data

23
00:01:31,720 --> 00:01:37,930
to our template so that when this changes, something else in our our template will update as well.

24
00:01:38,230 --> 00:01:42,130
So I'm going to scroll up all the way to this input field right here.

25
00:01:42,700 --> 00:01:49,750
This is our very first one for this role and the attribute that we can set on an input element that

26
00:01:49,750 --> 00:01:55,360
will affect what is actually rendered within that input box is actually called the value attribute,

27
00:01:55,510 --> 00:01:57,610
and that is not specifically tied to view.

28
00:01:57,790 --> 00:02:03,070
That is just a general browser thing, that is something that exists on every input element.

29
00:02:03,160 --> 00:02:08,650
We can provide it with a value attribute and give it a value that will render within the input.

30
00:02:09,010 --> 00:02:13,900
So I of course want to attach myself to that value attribute.

31
00:02:14,110 --> 00:02:16,810
Well, how can we bind or attach ourselves to this guy?

32
00:02:16,810 --> 00:02:23,470
Attribute We have to use V bind so we can either use this syntax, which is the long form or the shortcut,

33
00:02:23,470 --> 00:02:25,870
which is just placing a colon in front of value.

34
00:02:26,230 --> 00:02:31,450
Then I provide my equals sign and the data property that I want to bind this value attribute to.

35
00:02:31,690 --> 00:02:35,890
And I of course want to bind it to my role data property.

36
00:02:36,190 --> 00:02:41,620
So to quickly remind us what is going to happen, this means that any time that role is going to change,

37
00:02:41,860 --> 00:02:48,520
whenever that data property changes view is going to detect that change re render the template which

38
00:02:48,520 --> 00:02:54,580
in turn will repopulate the value attribute to whatever is the current value in role, which will force

39
00:02:54,580 --> 00:02:57,460
the input to display a different entered text.

40
00:02:58,450 --> 00:02:58,750
Right.

41
00:02:58,930 --> 00:03:01,690
And of course we're going to start off with our role equal to an empty string.

42
00:03:01,690 --> 00:03:05,050
So there is going to be nothing in the input when the page first loads.

43
00:03:05,500 --> 00:03:10,030
So if I scroll down we'll find our second input for the location, right.

44
00:03:10,240 --> 00:03:11,980
And I want to do the exact same thing.

45
00:03:11,980 --> 00:03:14,470
I still want to use the V bind directive.

46
00:03:14,680 --> 00:03:20,380
I still want to attach myself to the same HTML attribute, which is the value attribute.

47
00:03:20,770 --> 00:03:27,580
But the only difference is, is I want to bind this input to my other data property, which is location.

48
00:03:28,610 --> 00:03:35,660
So as location changes, this input will render and will repopulate its value property with whatever

49
00:03:35,660 --> 00:03:37,970
locations happens to be at that moment.

50
00:03:38,240 --> 00:03:43,640
Okay, so with that, we can transition to our browser and see what is going on.

51
00:03:43,670 --> 00:03:49,730
So let me transition to our browser and here I have my view dev tools open and you'll notice here is

52
00:03:49,730 --> 00:03:51,160
our job search form component.

53
00:03:51,260 --> 00:03:52,250
I'm going to click into it.

54
00:03:52,430 --> 00:03:56,120
And of course we start out with these data properties being empty streets.

55
00:03:56,450 --> 00:04:01,520
Well, let me try right here in my view, dev tools to edit one of these properties.

56
00:04:01,520 --> 00:04:04,910
So I'm going to begin with role, which is our first input field right here.

57
00:04:05,300 --> 00:04:08,210
And let's say I'm looking for a role of view developer.

58
00:04:08,510 --> 00:04:11,120
So right here, I'm going to provide a string of view developer.

59
00:04:11,630 --> 00:04:14,960
And as I save this change by clicking this diskette icon.

60
00:04:15,080 --> 00:04:19,540
Notice how we're going to automatically populate that into our left input field.

61
00:04:19,550 --> 00:04:21,920
So I'm going to save right now and there we go.

62
00:04:21,950 --> 00:04:23,210
Our role has changed.

63
00:04:23,480 --> 00:04:29,900
The role property that is view has we re rendered and now we're going to see that role entered automatically

64
00:04:29,900 --> 00:04:31,850
within my input field.

65
00:04:32,180 --> 00:04:38,030
Note that if we go to our element's inspector in Chrome, we're not going to see that value property

66
00:04:38,150 --> 00:04:40,730
directly in line here in the element inspector.

67
00:04:40,970 --> 00:04:42,980
So we only have type, placeholder and class.

68
00:04:42,980 --> 00:04:46,580
We do not have value written, but the way we're going to see that it works is by seeing it written

69
00:04:46,580 --> 00:04:48,380
right here in our template.

70
00:04:48,710 --> 00:04:50,020
So let's try it one more time.

71
00:04:50,030 --> 00:04:56,420
If I go to my view dev tools and I find my location property once again when I change this, we're going

72
00:04:56,420 --> 00:04:58,460
to see the change reflected in our template.

73
00:04:58,460 --> 00:05:04,760
So we have bound or connected our data property, our component data to our template.

74
00:05:05,030 --> 00:05:08,360
So for example, let's say I'm looking for a job in Alaska.

75
00:05:08,630 --> 00:05:10,310
I'm going to provide that string and save.

76
00:05:11,490 --> 00:05:12,120
And there we go.

77
00:05:12,120 --> 00:05:15,210
We have populated those changes in our template.

78
00:05:15,540 --> 00:05:20,190
Now what we have right here is an example of one way data binding.

79
00:05:20,190 --> 00:05:23,070
And I'd like to take a second to talk about why it's one way.

80
00:05:23,400 --> 00:05:27,120
It's one way because it only goes in one direction.

81
00:05:27,390 --> 00:05:33,030
What I mean by that is when our data changes, our template changes in response, right?

82
00:05:33,030 --> 00:05:34,050
We just saw that.

83
00:05:34,320 --> 00:05:36,600
However, it is not bidirectional.

84
00:05:36,780 --> 00:05:39,540
It does not go in the other direction.

85
00:05:39,750 --> 00:05:44,280
So what I mean by that is if I click into this template and I write something in here, like I'm going

86
00:05:44,280 --> 00:05:49,190
to add a couple Z's right here, notice that changes with the template.

87
00:05:49,200 --> 00:05:55,290
When I interact with a template as a user, those do not affect the original data property.

88
00:05:55,290 --> 00:05:58,410
The data property is still equal to Alaska here.

89
00:05:58,890 --> 00:06:04,880
So we have connected our data and our template are HTML, but only in one direction.

90
00:06:04,890 --> 00:06:09,000
We can only change our data right now and see that change in our template.

91
00:06:09,060 --> 00:06:13,390
We cannot change our template and see that change reflected in our data.

92
00:06:13,410 --> 00:06:15,210
So going in the other direction.

93
00:06:15,390 --> 00:06:20,070
And of course, when we're going in both directions, it's called bi directional because the word bi

94
00:06:20,070 --> 00:06:21,810
means to like bicycle, right?

95
00:06:22,080 --> 00:06:23,700
So we're only going in one direction.

96
00:06:23,880 --> 00:06:28,230
And in the next lesson, we're going to show you how to establish a bi directional data flow where a

97
00:06:28,230 --> 00:06:34,410
change in either location, either the template or our components data will reflect in the other half

98
00:06:34,410 --> 00:06:35,130
of the equation.

99
00:06:35,190 --> 00:06:35,520
All right.

100
00:06:35,760 --> 00:06:37,770
So I'll show you how to do that in the very next lesson.
