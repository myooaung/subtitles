WEBVTT
1
00:00:00.390 --> 00:00:01.410
All right.

2
00:00:01.410 --> 00:00:07.080
In this lesson, I'd like to do a quick review of dynamic object properties in JavaScript.

3
00:00:07.350 --> 00:00:12.870
This is a supplementary bonus lesson where we're going to cover iOS six and JavaScript concepts.

4
00:00:13.140 --> 00:00:17.310
So if you are familiar with dynamic object properties, you can feel free to skip this lesson.

5
00:00:17.490 --> 00:00:21.720
We're going to talk more about this idea in the next lesson as it applies to view.

6
00:00:22.080 --> 00:00:23.580
Otherwise, feel free to join us.

7
00:00:23.580 --> 00:00:27.420
I am in the playground at JS file in my source directory.

8
00:00:27.420 --> 00:00:33.630
As a reminder, this is our little playground for experimenting with JavaScript and new ideas that don't

9
00:00:33.630 --> 00:00:34.980
pertain to our project.

10
00:00:35.220 --> 00:00:40.110
If you have any content in this file from a previous lesson, feel free to delete it.

11
00:00:40.530 --> 00:00:42.360
Okay, let's get to the heart of the content.

12
00:00:42.360 --> 00:00:48.780
Let's say I have a constant in my program called Favorite Food, and my favorite food happens to be

13
00:00:48.780 --> 00:00:49.260
sushi.

14
00:00:49.500 --> 00:00:51.660
So I'm going to assign that string right here.

15
00:00:52.170 --> 00:00:52.470
All right.

16
00:00:52.470 --> 00:00:55.050
And then let's say I'm defining an object.

17
00:00:55.230 --> 00:00:56.940
I'm going to call that object good foods.

18
00:00:58.340 --> 00:01:00.020
And I'm going to provide the curly braces here.

19
00:01:00.290 --> 00:01:08.870
And what I'd like to do is to use the value from my favorite food constant as an object key or an object

20
00:01:08.870 --> 00:01:11.510
property in my good foods object.

21
00:01:11.810 --> 00:01:17.240
So if I was beginning or starting out with JavaScript, I might think that something like this would

22
00:01:17.240 --> 00:01:17.550
work.

23
00:01:17.570 --> 00:01:24.980
I might write favorite food, colon trip, and I would expect, for example, that JavaScript would

24
00:01:24.980 --> 00:01:28.640
be able to substitute favorite food with the word sushi.

25
00:01:28.910 --> 00:01:33.410
Now, of course, this is not how JavaScript works, so let's take a look at what good foods is actually

26
00:01:33.410 --> 00:01:34.040
going to look like.

27
00:01:34.050 --> 00:01:39.650
I'm going to console.log the value of my good foods object right here, and then I'm going to run this

28
00:01:39.650 --> 00:01:40.640
file using Node.

29
00:01:40.670 --> 00:01:47.410
So at the top level of my job search project, I'm going to run Node and my file is in source playground.

30
00:01:47.590 --> 00:01:52.130
Yes, we are going to actually get the literal key of favorite food.

31
00:01:52.520 --> 00:01:56.330
JavaScript interprets that key literally, so it's going to use those exact characters.

32
00:01:56.570 --> 00:02:02.660
And for the most part, this is a good language decision or language design decision because it prevents

33
00:02:02.660 --> 00:02:09.980
us from accidentally replacing a key in our in our object with some kind of other name in our program,

34
00:02:09.980 --> 00:02:11.690
like a variable or a constant.

35
00:02:11.870 --> 00:02:13.610
So usually this is what we want.

36
00:02:13.820 --> 00:02:20.060
However, in our scenario, we actually want the favorite food key not to literally be favorite food,

37
00:02:20.180 --> 00:02:24.530
but to be replaced by whatever the value of the constant is, which is sushi.

38
00:02:24.650 --> 00:02:26.240
I want the key of sushi here.

39
00:02:26.570 --> 00:02:33.530
So my question to you is how can I force JavaScript to replace this favorite food reference here with

40
00:02:33.530 --> 00:02:35.660
my actual favorite food constant?

41
00:02:35.930 --> 00:02:40.850
Well, the special syntax in JavaScript is to wrap the key in square brackets.

42
00:02:41.060 --> 00:02:44.480
So right here I'm going to put an opening square bracket right here.

43
00:02:44.660 --> 00:02:48.920
And at the very end, but before the colon, I'm going to close the bracket off.

44
00:02:49.220 --> 00:02:55.910
This syntax tells JavaScript Look for a name in your program called Favorite Food and then find its

45
00:02:55.910 --> 00:02:58.610
corresponding value and write it in here.

46
00:02:58.940 --> 00:03:04.760
So the difference with this syntax is when I write, when I run my file, right now JavaScript is going

47
00:03:04.760 --> 00:03:09.020
to substitute sushi in place of the favorite food, constant reference.

48
00:03:09.200 --> 00:03:11.840
And my object of good foods is going to look like this.

49
00:03:11.840 --> 00:03:14.450
A key of sushi with a value of true.

50
00:03:14.660 --> 00:03:17.400
All right, so we are setting a dynamic object property.

51
00:03:17.430 --> 00:03:21.230
The reason it's dynamic is because it is not sex.

52
00:03:21.230 --> 00:03:23.450
Initially, it is based on a reference.

53
00:03:23.450 --> 00:03:27.470
It's dynamically the result of some other thing in our program.

54
00:03:27.470 --> 00:03:33.260
For example, we could get data from the user and then assign it to a variable and then set that as

55
00:03:33.260 --> 00:03:35.090
the object property.

56
00:03:35.090 --> 00:03:35.300
Right.

57
00:03:35.300 --> 00:03:36.770
It's it's not set in stone.

58
00:03:36.770 --> 00:03:39.050
It's something that can vary, that can be dynamic.

59
00:03:39.050 --> 00:03:41.390
And that's why it's called a dynamic object property.

60
00:03:41.690 --> 00:03:44.680
It can vary and it can be set from another source.

61
00:03:44.700 --> 00:03:44.960
Right.

62
00:03:45.260 --> 00:03:51.260
So once again, if we use plain JavaScript, object syntax, JavaScript will take our key literally.

63
00:03:51.710 --> 00:03:57.560
If we want to substitute some kind of variable or constant value as a key, we need to provide those

64
00:03:57.560 --> 00:04:02.900
square brackets around that reference to that name in our program and then JavaScript will plug it in

65
00:04:02.900 --> 00:04:03.590
in its place.

66
00:04:03.710 --> 00:04:04.010
All right.

67
00:04:04.220 --> 00:04:08.240
This concept that's going to prove helpful to us in the very next lesson, and I will see you there.
