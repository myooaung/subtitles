WEBVTT
1
00:00:00.360 --> 00:00:01.350
All right.

2
00:00:01.350 --> 00:00:08.040
So the next component that I want to move to, the composition API is going to be the job filter sidebar

3
00:00:08.070 --> 00:00:11.160
organization's component, which I've opened up in this code.

4
00:00:11.490 --> 00:00:17.280
And the good news is this component is very, very, very similar to the one we just worked on, the

5
00:00:17.280 --> 00:00:19.770
job filter, sidebar, job type's component.

6
00:00:20.190 --> 00:00:26.070
This component similarly renders a whole bunch of checkboxes for the user to click, and whenever the

7
00:00:26.070 --> 00:00:31.680
user clicks on a checkbox, the component commits a mutation called ADD selected organizations and provides

8
00:00:31.680 --> 00:00:34.410
that array of strings for organizations.

9
00:00:34.680 --> 00:00:40.260
So the only thing that varies is the mutation as well as the former getter that it's using to get this

10
00:00:40.260 --> 00:00:41.850
set that it is iterating over.

11
00:00:42.180 --> 00:00:47.520
So because we basically refactored our previous component in a very similar fashion, I'm going to move

12
00:00:47.520 --> 00:00:52.200
through this refactor a little bit more quickly because the idea is we're going to use here are, for

13
00:00:52.200 --> 00:00:53.970
the most part, basically identical.

14
00:00:54.330 --> 00:00:57.480
So let's comment out everything we're going to replace in this component.

15
00:00:58.230 --> 00:00:59.760
So data through methods.

16
00:01:00.090 --> 00:01:03.330
And up top, I'm going to start by importing everything I'm going to need.

17
00:01:03.720 --> 00:01:08.790
So just stored data, I'm going to import ref and that's going to come from view.

18
00:01:09.360 --> 00:01:13.620
I know later on in order to commit a mutation, I'm going to need my store.

19
00:01:13.860 --> 00:01:17.450
So import use store from view.

20
00:01:18.120 --> 00:01:23.790
I know that I'll need to navigate the user using the router so I will import use router and that's going

21
00:01:23.790 --> 00:01:24.990
to come from the router.

22
00:01:26.470 --> 00:01:32.350
Then in order to get the actual set of values that I will iterate over to render the checkboxes, I'm

23
00:01:32.350 --> 00:01:33.850
going to use a composable.

24
00:01:34.090 --> 00:01:37.060
We already wrote this composable a couple lessons ago.

25
00:01:37.060 --> 00:01:38.380
We kind of glossed over it.

26
00:01:38.740 --> 00:01:44.590
But if I go to my composable file, we already have a user unique organizations composable that gets

27
00:01:44.590 --> 00:01:46.060
the right piece of the getters.

28
00:01:46.210 --> 00:01:49.390
So this is already wired and set up and ready for us to work with.

29
00:01:49.870 --> 00:01:57.310
So right here I'm going to import that composable function, import use, unique organizations and that's

30
00:01:57.310 --> 00:02:01.090
going to come from the source folder store composable.

31
00:02:02.230 --> 00:02:02.680
All right.

32
00:02:02.680 --> 00:02:07.660
We're probably not going to need map getters and map mutations so we can remove this line entirely and

33
00:02:07.660 --> 00:02:10.870
we can start implementing our new approach in a set up method.

34
00:02:11.230 --> 00:02:12.070
So right here, setup.

35
00:02:13.660 --> 00:02:15.700
All right, so let's replace everything that we had.

36
00:02:15.710 --> 00:02:18.280
We have a selected organization, slice of data.

37
00:02:18.280 --> 00:02:21.490
We can replicate that in the composition API using ref.

38
00:02:21.790 --> 00:02:23.530
So let's do selected organizations.

39
00:02:25.270 --> 00:02:26.920
And that is going to be rough.

40
00:02:28.510 --> 00:02:31.180
And we're going to provide the initial starting value of an empty array.

41
00:02:31.630 --> 00:02:38.040
The next thing I need to provide is and the set of organizations that I'm going to iterate over.

42
00:02:38.050 --> 00:02:43.450
We were previously getting this from the unique organizations getter in our book store.

43
00:02:43.690 --> 00:02:47.920
As a reminder, we have that logic now with our use unique organizations composable.

44
00:02:48.250 --> 00:02:56.080
So right here I'm going to say unique organizations is going to be the reactive object I get from invoking

45
00:02:56.080 --> 00:02:57.430
use unique organizations.

46
00:02:58.180 --> 00:03:02.650
And before I forget, let's quickly return both of these things since our template does use them.

47
00:03:02.860 --> 00:03:04.150
Selected organizations.

48
00:03:04.150 --> 00:03:06.670
That's for the V model and unique organizations.

49
00:03:07.270 --> 00:03:10.330
Now, as a reminder, we were previously iterating over.

50
00:03:11.370 --> 00:03:17.340
Unique organizations right here, which was the name of the computed property, because that's what

51
00:03:17.340 --> 00:03:23.700
map getters created for us as a as a direct method or on this component, because that was what the

52
00:03:23.700 --> 00:03:24.390
getter was called.

53
00:03:24.630 --> 00:03:27.360
We just renamed it down below to use camel case.

54
00:03:27.600 --> 00:03:31.350
So I have to make sure to change this to unique organizations like so.

55
00:03:31.700 --> 00:03:35.790
So the reason we have to use this name is because that's when I coincidentally called it right here

56
00:03:35.790 --> 00:03:40.980
on line 51 and what I provided as my property name in the returned object.

57
00:03:41.130 --> 00:03:43.290
So again, this now exists as a property.

58
00:03:43.470 --> 00:03:46.530
Unique organizations does not like in the former implementation.

59
00:03:46.740 --> 00:03:49.350
So I have to make sure I use this syntax right here.

60
00:03:50.130 --> 00:03:50.460
All right.

61
00:03:50.760 --> 00:03:54.840
The only thing that's left to replace now is this select organization method.

62
00:03:54.850 --> 00:03:56.100
It's now going to be a function.

63
00:03:56.340 --> 00:04:00.330
So right here, I'm going to declare my function called select organization.

64
00:04:00.720 --> 00:04:04.260
It's going to be an arrow function before I even write its body.

65
00:04:04.290 --> 00:04:07.020
Let's make sure we provide select organization right here.

66
00:04:09.120 --> 00:04:09.480
All right.

67
00:04:09.480 --> 00:04:15.750
So this function is going to come in a mutation and then it's going to navigate using Vue router.

68
00:04:15.930 --> 00:04:17.640
So we need access to those objects.

69
00:04:17.880 --> 00:04:21.730
So right at the top of the setup method, I'll get my store.

70
00:04:21.810 --> 00:04:24.660
So con store we're going to get by invoking your store.

71
00:04:24.900 --> 00:04:30.750
And then my router Konst router I'm going to get from invoking the use router helper function.

72
00:04:31.050 --> 00:04:34.350
So we have what we need in order to wire up this function.

73
00:04:34.560 --> 00:04:38.430
The first thing we want to do is commit a mutation and we can do that by invoking the commit method

74
00:04:38.430 --> 00:04:41.490
of the store, the the mutation we want to run right now.

75
00:04:41.490 --> 00:04:42.600
Is this one right here?

76
00:04:42.810 --> 00:04:44.340
Add selected organizations.

77
00:04:44.520 --> 00:04:48.030
We already have that mutation name imported right here.

78
00:04:48.390 --> 00:04:51.420
As a reminder, here is what that mutation looks like.

79
00:04:52.380 --> 00:04:52.940
Here it is.

80
00:04:52.950 --> 00:04:54.270
Add selected organizations.

81
00:04:54.510 --> 00:04:58.560
We can see it accepts the array of organizations as the argument right here.

82
00:04:58.740 --> 00:05:01.830
So that's the next thing we need to provide to the commit method.

83
00:05:02.100 --> 00:05:04.260
The first is always the name of the mutation.

84
00:05:04.260 --> 00:05:06.720
The second is the arguments to the mutation method.

85
00:05:07.050 --> 00:05:11.940
So now of course we want the array of values which we have available via selected organizations.

86
00:05:12.240 --> 00:05:17.070
But remember, that is the whole reactive object to get the array that it is storing inside of it.

87
00:05:17.220 --> 00:05:22.470
We can do that value and that's going to pass the array of organizations that the user has selected

88
00:05:22.470 --> 00:05:23.340
from the checkboxes.

89
00:05:23.700 --> 00:05:26.850
So that will send the data to view X to update.

90
00:05:26.850 --> 00:05:32.040
The next thing I want to do is navigate the user to my job results view by calling the push method on

91
00:05:32.040 --> 00:05:32.640
my router.

92
00:05:32.730 --> 00:05:35.730
I have my router available so I can use it within my function.

93
00:05:36.000 --> 00:05:37.230
So router or not push.

94
00:05:38.680 --> 00:05:40.510
Provide my object here.

95
00:05:40.540 --> 00:05:45.670
Same implementation as as below name property set to a string of job results.

96
00:05:46.330 --> 00:05:49.030
Save that and this looks good enough for me.

97
00:05:49.030 --> 00:05:52.090
So I'm going to delete all this code that we previously had.

98
00:05:53.050 --> 00:06:00.040
We have three names or three properties within our object here selected organisations, unique organisations,

99
00:06:00.040 --> 00:06:06.820
select organisations and if I scroll up we can see here a select organisation here is selected organisations,

100
00:06:06.820 --> 00:06:10.300
that's the RAF for the V model and here is unique organisations.

101
00:06:10.390 --> 00:06:14.680
And that set that we're iterating over is coming from our composable.

102
00:06:15.010 --> 00:06:20.050
So we have everything we need as far as the names that the template is dependent on, we are providing

103
00:06:20.050 --> 00:06:23.840
all of those names as properties in the returned object from the setup method.

104
00:06:24.160 --> 00:06:28.840
As I scroll down below, it looks like we are no longer using the unique organisation's name right here.

105
00:06:29.050 --> 00:06:34.390
That was our former getter that we no longer need it because that logic is locked away within our composable

106
00:06:34.390 --> 00:06:35.860
of unique organisations.

107
00:06:36.280 --> 00:06:39.820
So I can remove this former import, save that and there we go.

108
00:06:39.970 --> 00:06:44.350
Very similar refactor to what we did in job filter sidebar job types.

109
00:06:44.530 --> 00:06:46.570
So hope is hopefully this wasn't too crazy.

110
00:06:46.570 --> 00:06:51.220
And in the very next lesson, we're going to similarly refactor the test suite for this component.

111
00:06:51.490 --> 00:06:52.090
I'll see you there.
