WEBVTT
1
00:00:00.300 --> 00:00:06.390
All right, so let's begin our refactor of the job filter, sidebar, job types component.

2
00:00:06.630 --> 00:00:13.350
We know that we can replace data with function calls, and we also can replace our former unique job

3
00:00:13.350 --> 00:00:18.600
types getter right here with our new composable function called use unique job types.

4
00:00:18.930 --> 00:00:24.900
So let's import both of those dependencies at the very top of my script section, I'll import ref from

5
00:00:24.900 --> 00:00:29.190
the View Library and below all of my NPM imports.

6
00:00:29.190 --> 00:00:30.660
I have my project imports.

7
00:00:30.900 --> 00:00:36.870
So right here let's import my new composable which is called use unique job types and that is going

8
00:00:36.870 --> 00:00:42.980
to come from the source directory and then store and then composable it is related to view.

9
00:00:43.170 --> 00:00:45.030
So I put it in this store directory.

10
00:00:45.390 --> 00:00:45.750
All right.

11
00:00:45.750 --> 00:00:48.780
So as always, let's comment out data and computed.

12
00:00:50.020 --> 00:00:52.930
And we'll talk about how it can replace mat mutations with a little bit later.

13
00:00:53.140 --> 00:00:55.420
But for now, we'll begin with our usual set of method.

14
00:00:57.100 --> 00:01:01.270
And let's start with the data section where we're going to need something called selected job types.

15
00:01:01.510 --> 00:01:03.760
So I'm going to create selected job types right here.

16
00:01:04.960 --> 00:01:09.100
And how do we create a piece of reactive data while we use our ref function right here?

17
00:01:09.490 --> 00:01:11.320
And we provide it starting state here.

18
00:01:11.320 --> 00:01:12.460
We start with an empty array.

19
00:01:12.490 --> 00:01:14.320
So here we're going to start with an empty array.

20
00:01:14.590 --> 00:01:19.540
Before we forget, let's make sure we return an object right here and provide selected job types as

21
00:01:19.540 --> 00:01:20.770
one of its available properties.

22
00:01:21.010 --> 00:01:24.070
So simply by doing that, let me just remember data comma here.

23
00:01:24.340 --> 00:01:29.020
Simply by doing that, we now can use selected job types in the template, which is going to take care

24
00:01:29.020 --> 00:01:31.150
of this V model connection to the array.

25
00:01:31.390 --> 00:01:32.860
Everything is still going to work perfectly.

26
00:01:33.220 --> 00:01:33.610
Awesome.

27
00:01:33.820 --> 00:01:35.420
So that takes care of our former data.

28
00:01:35.440 --> 00:01:41.470
Now we need to use our new use unique job types composable function.

29
00:01:41.680 --> 00:01:43.480
So I'm going to invoke unique job types.

30
00:01:43.870 --> 00:01:49.330
And we could we could, of course, assign it to a constant called unique job types in all capital letters.

31
00:01:49.480 --> 00:01:51.940
And if we provided that as our property, that would work.

32
00:01:52.120 --> 00:01:56.380
But this time around, let's just give it a different name, because I don't feel confident is the best

33
00:01:56.380 --> 00:01:57.160
use case here.

34
00:01:57.490 --> 00:02:01.900
So for now, just to show it can be done, we can totally create a different name in every component.

35
00:02:02.140 --> 00:02:04.390
So I'm just going to call this unique job types.

36
00:02:06.680 --> 00:02:12.500
Sign that to the return value of my computed function were my composable function which returns a computed

37
00:02:12.500 --> 00:02:12.890
function.

38
00:02:12.890 --> 00:02:16.040
I know there are several layers here, so that's why I'm tripping over my words.

39
00:02:16.340 --> 00:02:21.200
But we're going to get this reactive object back and I can make sure to include it as a property right

40
00:02:21.200 --> 00:02:21.560
here.

41
00:02:22.190 --> 00:02:28.040
And remember, in our former iteration of this component, we were iterating over unique job types as

42
00:02:28.040 --> 00:02:28.640
a constant.

43
00:02:28.640 --> 00:02:33.500
So because we're now changing the name that we're making available as a property to use camel case,

44
00:02:33.500 --> 00:02:35.780
we need to make sure we update it above as well.

45
00:02:36.110 --> 00:02:39.860
So right here, I'm going to change this to unique job types.

46
00:02:40.070 --> 00:02:41.870
Nothing is changing in the implementation.

47
00:02:41.870 --> 00:02:44.300
I'm just changing a little bit of the name right here.

48
00:02:44.300 --> 00:02:47.750
Since they change the below, I have to change it up here as well.

49
00:02:47.900 --> 00:02:51.800
I don't think there's any other place where we were using that getter constant here.

50
00:02:52.070 --> 00:02:52.970
So there we go.

51
00:02:53.150 --> 00:02:55.250
And with that we are good to remove map getters.

52
00:02:55.250 --> 00:02:59.900
We no longer need it, and we're also good to remove unique job types because we no longer need that.

53
00:03:00.740 --> 00:03:01.130
All right.

54
00:03:01.460 --> 00:03:03.800
So that takes care of our very first refactor.

55
00:03:03.800 --> 00:03:08.030
We can then remove data and computed since we took care of all of these responsibilities in our set

56
00:03:08.030 --> 00:03:08.450
up method.

57
00:03:08.750 --> 00:03:13.430
And of course, in the very next lesson, we'll talk about how we can replace this former functionality

58
00:03:13.550 --> 00:03:15.740
using our new composition API as well.

59
00:03:15.890 --> 00:03:16.580
So I'll see you there.
