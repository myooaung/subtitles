1
00:00:00,610 --> 00:00:01,200
Okay.

2
00:00:01,200 --> 00:00:07,650
So we now have a unique organizations getter that is going to talk to the U.S. store and give us back

3
00:00:07,650 --> 00:00:11,880
a set of the unique organizations based on the jobs that we have.

4
00:00:12,210 --> 00:00:19,650
So what I want to do is take that set of organizations and iterate over it in order to create the checkboxes

5
00:00:19,650 --> 00:00:22,860
that the user will be able to select on the left hand side.

6
00:00:23,280 --> 00:00:29,880
So as a reminder, we have a component in our app called Job Filters, Sidebar Organizations.

7
00:00:30,210 --> 00:00:36,660
And what we did a couple sections ago is we created some manual list items right here with fake organizations

8
00:00:36,660 --> 00:00:38,880
like YouTube between view, etc..

9
00:00:39,180 --> 00:00:45,960
So what I ultimately want to do is replace these list items with one list item for every unique organization

10
00:00:45,960 --> 00:00:46,410
we have.

11
00:00:46,710 --> 00:00:52,230
So we're going to need to get this component to talk to our getter to get that data right.

12
00:00:52,440 --> 00:00:53,370
So how do we do that?

13
00:00:53,580 --> 00:00:57,050
Well, first up, let's wire up this component to talk to a getter.

14
00:00:57,180 --> 00:01:02,340
And then in the very next lesson, we'll see how we can use a V4 directive to iterate over that set

15
00:01:02,340 --> 00:01:04,670
and render a dynamic piece of each time up.

16
00:01:05,010 --> 00:01:07,740
So right here, it's going to be super simple.

17
00:01:07,950 --> 00:01:13,950
I'm going to create a new section for my computed properties, and that seems like the most logical

18
00:01:13,950 --> 00:01:17,910
place to put this, because this is not really part of the components data per se.

19
00:01:18,180 --> 00:01:23,700
This is just a property that the component is going to have that is based off a getter in the View X

20
00:01:23,700 --> 00:01:27,780
Store, which is itself a computed piece of data based on the View X Store state.

21
00:01:27,810 --> 00:01:28,050
Right.

22
00:01:28,050 --> 00:01:30,960
So there's a couple levels or layers here, but hopefully it makes sense.

23
00:01:31,170 --> 00:01:36,210
There's nothing new or original about this data, which is why we're making it a computed property for

24
00:01:36,210 --> 00:01:36,840
this component.

25
00:01:37,140 --> 00:01:40,500
So we can give this a computed property, whatever name we want.

26
00:01:40,680 --> 00:01:43,810
For now, I'm going to give it the exact same name as my getter.

27
00:01:43,830 --> 00:01:46,140
So I'm just going to call it unique organizations.

28
00:01:47,750 --> 00:01:49,880
And this, as a reminder, is going to be a method.

29
00:01:49,880 --> 00:01:54,950
Every computed property has its own method, and whatever we return here, of course we are welcome

30
00:01:54,950 --> 00:01:56,460
to use within our template.

31
00:01:56,810 --> 00:02:01,790
So what I want to do here is I just want to show you the syntax for accessing the getter and using it.

32
00:02:01,790 --> 00:02:05,870
And I'm actually going to show you the data in The View X DevTools in Chrome and then we're actually

33
00:02:05,870 --> 00:02:07,070
going to use in the next lesson.

34
00:02:07,400 --> 00:02:13,100
So we know that every component in our view app has access to a this thought dollar sign store property

35
00:02:13,100 --> 00:02:15,050
that gives us the view store.

36
00:02:15,260 --> 00:02:17,540
And so we have a whole bunch of things on this object.

37
00:02:17,540 --> 00:02:20,060
We have our state which we can talk to, right?

38
00:02:20,060 --> 00:02:26,750
We have our commit method, we have our dispatch method, etc. Well, we have a property on this store

39
00:02:26,780 --> 00:02:30,080
object called Getters exactly as you might expect.

40
00:02:30,410 --> 00:02:35,090
And on that Getters object, we have a bunch of properties representing the getters that we defined.

41
00:02:35,360 --> 00:02:39,980
So we defined a getter called unique organizations, and that's exactly what we're going to have.

42
00:02:40,340 --> 00:02:45,170
Now, here's an interesting part, a little bit confusing, but hopefully this makes this easier, even

43
00:02:45,170 --> 00:02:50,660
though unique organizations is a method when we defined it in the index that just follow less than go,

44
00:02:50,810 --> 00:02:52,880
we don't actually need to invoke it here.

45
00:02:53,030 --> 00:02:59,030
View will automatically invoke it for us and of course pass in this state object that that method needs

46
00:02:59,180 --> 00:03:01,520
in order to calculate its unique organizations.

47
00:03:01,760 --> 00:03:04,460
So I'm just going to conclude it like so.

48
00:03:04,730 --> 00:03:07,520
So what this is going to do is it's going to run that getter method.

49
00:03:07,520 --> 00:03:11,450
It's going to pass in the state automatically, and we're going to get back that set.

50
00:03:11,660 --> 00:03:14,660
It's we're going to get back that set consisting of the unique organizations.

51
00:03:14,780 --> 00:03:19,700
And then that set object we're going to make available via the unique organization's computed property,

52
00:03:19,850 --> 00:03:21,920
which we can use in this component's template.

53
00:03:22,370 --> 00:03:27,230
So I'm going to save this for now, and then where I'm going to head is back to my browser, just to

54
00:03:27,230 --> 00:03:28,700
show you this in view of tools.

55
00:03:29,600 --> 00:03:32,630
So as a reminder, it's this component that we're targeting right here.

56
00:03:32,780 --> 00:03:36,410
Here's where we have our for list items that are manually hardcoded.

57
00:03:36,410 --> 00:03:41,360
We're going to replace this in the next lesson with names that are coming from our unique organization

58
00:03:41,360 --> 00:03:41,750
set.

59
00:03:42,110 --> 00:03:45,830
So for now though, I can show you that if I go to my view dev tools.

60
00:03:46,960 --> 00:03:51,020
And I find that components are right here in job results view.

61
00:03:51,040 --> 00:03:53,260
We have our job filter sidebar here.

62
00:03:53,260 --> 00:03:55,930
We have our job filter, sidebar organizations component.

63
00:03:56,200 --> 00:04:01,390
And if I go into here, you can see under computed properties we have a new computed property called

64
00:04:01,390 --> 00:04:02,260
Unique Organizations.

65
00:04:02,440 --> 00:04:03,550
And what does it have?

66
00:04:03,700 --> 00:04:05,580
It has exactly what we wanted it had.

67
00:04:05,620 --> 00:04:08,080
It has a set of six unique elements.

68
00:04:08,320 --> 00:04:09,230
So what does that tell us?

69
00:04:09,250 --> 00:04:16,180
That tells us in our 100 arrays from DB that JSON, there's only six unique organizations among those

70
00:04:16,180 --> 00:04:16,930
100 jobs.

71
00:04:17,110 --> 00:04:24,160
We have captured them right here in the set and we have connected our component called job filter sidebar

72
00:04:24,170 --> 00:04:25,780
organizations to a getter.

73
00:04:26,320 --> 00:04:30,370
So no need to get the view store state and perform this logic in the component.

74
00:04:30,550 --> 00:04:34,330
We simply say, Hey, I know there's a getter available called unique organizations.

75
00:04:34,510 --> 00:04:39,130
Use it, run it and then give it back to me and store it as a computed property in this component.

76
00:04:39,310 --> 00:04:42,070
And this proves to us that all of that logic has happened.

77
00:04:42,340 --> 00:04:47,770
So now in the very next lesson, knowing that we have the set of six elements, six unique organizations,

78
00:04:47,770 --> 00:04:51,700
we can iterate over this and create the checkboxes we see here on the left hand side.

79
00:04:52,030 --> 00:04:53,470
So we'll do that in the very next lesson.
