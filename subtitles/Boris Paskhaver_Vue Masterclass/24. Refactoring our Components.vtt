WEBVTT
1
00:00:00.510 --> 00:00:01.430
Okay.

2
00:00:01.430 --> 00:00:07.910
So the final step of our refactor is replacing some old outdated imports across various components in

3
00:00:07.910 --> 00:00:08.300
our app.

4
00:00:08.570 --> 00:00:13.160
They were previously referring to the store directory, which means the index tax file.

5
00:00:13.400 --> 00:00:18.050
But we've now moved that logic to separate files, and we need to make sure that the imports are correct.

6
00:00:18.410 --> 00:00:23.660
So one way that you can quickly find out what's incorrect is by looking at your view dev server in the

7
00:00:23.660 --> 00:00:27.770
terminal that will tell you whenever a view is unable to find a given import.

8
00:00:28.010 --> 00:00:32.330
So that's one way that I was able to find a list of all the components I needed to go through.

9
00:00:32.600 --> 00:00:38.480
Another way that we can do this is by going to the search feature in V code and we know that we previously

10
00:00:38.480 --> 00:00:43.940
were importing from ACT Store in any components where we were relying on view logic.

11
00:00:43.940 --> 00:00:48.080
We later on split this store logic into multiple files.

12
00:00:48.260 --> 00:00:54.710
But if I simply search for this, we're going to find any files that are currently importing from that

13
00:00:54.710 --> 00:00:55.160
index.

14
00:00:55.160 --> 00:01:00.230
Just file in the store folder and we can make sure that their imports are correct or update them if

15
00:01:00.230 --> 00:01:01.010
they're incorrect.

16
00:01:01.400 --> 00:01:06.540
So for example, we get five files here, so let's go through them one by one in our main DHS file.

17
00:01:06.560 --> 00:01:09.440
Here is where we are mounting and launching our View app.

18
00:01:09.620 --> 00:01:13.460
Here we're importing the actual view store object and connecting it to our app.

19
00:01:13.670 --> 00:01:15.330
So this import is just fine.

20
00:01:15.350 --> 00:01:21.110
This is referring to our index that just file where we are still creating our store by importing all

21
00:01:21.110 --> 00:01:24.380
of the requisite parts like the actions, getters, mutations.

22
00:01:24.560 --> 00:01:26.390
This store right here is totally fine.

23
00:01:26.750 --> 00:01:28.310
If we move on to job listings.

24
00:01:28.550 --> 00:01:32.060
Here is where we run into our first problem in the job listings component.

25
00:01:32.060 --> 00:01:33.980
We are importing a whole bunch of constants.

26
00:01:34.160 --> 00:01:36.800
They no longer exist in this store index just file.

27
00:01:36.800 --> 00:01:37.970
They exist in constants.

28
00:01:38.210 --> 00:01:41.750
So right here we need to update this to be store constants.

29
00:01:41.780 --> 00:01:42.380
Save that.

30
00:01:43.100 --> 00:01:47.180
Moving on to the next one is going to be job filter sidebar organizations.

31
00:01:47.390 --> 00:01:49.280
Once again, we're importing these constants.

32
00:01:49.280 --> 00:01:52.370
And these constants, of course, may refer to mutations or getters.

33
00:01:52.550 --> 00:01:53.370
We don't really care.

34
00:01:53.390 --> 00:01:55.880
We just care that the names are coming from the right folder.

35
00:01:56.060 --> 00:01:58.610
So once again, this is coming from store constants.

36
00:01:58.910 --> 00:01:59.870
Save that file.

37
00:02:00.350 --> 00:02:02.000
Then we're going to move to Main NAV.

38
00:02:02.030 --> 00:02:06.320
Once again, this is a log user constant that's going to come from add store constants.

39
00:02:06.590 --> 00:02:07.280
Save that.

40
00:02:08.270 --> 00:02:12.170
And finally, in our sub nav component, we're importing filter jobs by organizations.

41
00:02:12.470 --> 00:02:14.240
That's coming from Constance as well.

42
00:02:14.570 --> 00:02:19.550
And that kind of speaks to the good elements of our design is that we're basically importing everything

43
00:02:19.550 --> 00:02:24.830
from a constant directory and all of those names are referencing existing getters and mutations and

44
00:02:24.830 --> 00:02:26.420
actions that are guaranteed to be real.

45
00:02:26.630 --> 00:02:30.200
So we kind of keep that logic isolated in some folder and then a component.

46
00:02:30.200 --> 00:02:35.420
We only import the name of the thing we want to use and then use the complimentary view function, whether

47
00:02:35.420 --> 00:02:40.370
it be map getters, map mutations, map actions, etc. and it does all the work for us connecting that

48
00:02:40.370 --> 00:02:43.850
name to our component, either as a computed property or as a method.

49
00:02:44.210 --> 00:02:49.610
So in case anything is not working right now, I recommend you start up your view or view rather def

50
00:02:49.610 --> 00:02:53.690
server or just shut it down with control c then rerun it again with npm run serve.

51
00:02:53.900 --> 00:02:57.710
I'm just going to go check in my browser to make sure everything is running and it looks like everything

52
00:02:57.710 --> 00:02:58.640
is working just fine.

53
00:02:58.640 --> 00:03:02.060
I'm going to refresh the page, take a look at our sub nav.

54
00:03:02.270 --> 00:03:02.810
Looks good.

55
00:03:02.810 --> 00:03:05.570
100 jobs match to view tube point of view.

56
00:03:05.600 --> 00:03:06.530
The numbers are changing.

57
00:03:06.530 --> 00:03:07.700
The jobs in the right are changing.

58
00:03:07.880 --> 00:03:08.900
So everything looks good.

59
00:03:09.260 --> 00:03:09.590
All right.

60
00:03:09.590 --> 00:03:13.340
So with that, we are good to wrap up this section in the very next lesson.
