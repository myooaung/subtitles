WEBVTT
1
00:00:00.360 --> 00:00:01.230
All right.

2
00:00:01.230 --> 00:00:07.050
So in this lesson, I want to introduce another input modifier and it is called trim.

3
00:00:07.380 --> 00:00:12.870
So if you're familiar with JavaScript string methods, trim is actually an available string method.

4
00:00:13.140 --> 00:00:18.360
And what it does is the exact same thing as the trim input modifier does right here.

5
00:00:18.720 --> 00:00:25.470
What trim does is it removes the whitespace from both the beginning and end of a string.

6
00:00:25.740 --> 00:00:29.880
And when I use the term whitespace, what I'm referring to is basically spaces.

7
00:00:30.120 --> 00:00:36.690
So if the user, for example, enters three spaces and then the text view, what trim will do is remove

8
00:00:36.750 --> 00:00:38.640
those leading three spaces.

9
00:00:38.940 --> 00:00:39.240
All right.

10
00:00:39.240 --> 00:00:42.810
So it's going to eliminate all the spaces at the beginning and end of a string.

11
00:00:43.170 --> 00:00:48.540
So if you ever want to apply more than one input modifier in view, it's pretty simple.

12
00:00:48.660 --> 00:00:50.850
It's going to be the exact same syntax.

13
00:00:51.060 --> 00:00:55.170
You're simply going to add a dot and then the name of that input modifier.

14
00:00:55.440 --> 00:00:56.940
So we already used Lazy.

15
00:00:56.940 --> 00:00:59.430
And of course the one we want here is going to be trim.

16
00:00:59.760 --> 00:01:01.570
And you can totally apply them together.

17
00:01:01.590 --> 00:01:02.550
That's totally fine.

18
00:01:02.700 --> 00:01:09.120
In this case, we're applying both lazy and trim, which means Vue will wait to run the commit logic

19
00:01:09.120 --> 00:01:11.010
right here until we're done typing.

20
00:01:11.190 --> 00:01:16.920
But as it does that, it's going to modify the value that flows in right here to be trimmed to not have

21
00:01:16.920 --> 00:01:18.150
any whitespace.

22
00:01:18.390 --> 00:01:22.620
So let's save that and then let's transition to Chrome to see this in action.

23
00:01:23.220 --> 00:01:28.620
So I'm going to refresh the page just to be safe, and I'm going to expand skills and qualifications.

24
00:01:28.860 --> 00:01:33.770
Notice here that skill search term is empty, and I'm going to start by typing a couple characters,

25
00:01:33.780 --> 00:01:38.970
some empty spaces like so, and then I'm going to enter the word view and then I'm also going to enter

26
00:01:38.970 --> 00:01:41.610
some extra whitespace at the end.

27
00:01:41.620 --> 00:01:42.920
In fact, let me remove that dot.

28
00:01:42.930 --> 00:01:43.890
That was unintentional.

29
00:01:44.100 --> 00:01:45.600
Let me add a couple of white spaces here.

30
00:01:45.900 --> 00:01:51.840
So because we're using a lazy input modifier, we're still not seeing that change reflect in the bookstore.

31
00:01:52.200 --> 00:01:55.800
And because we haven't triggered that change, we're not applying trim yet.

32
00:01:56.130 --> 00:01:58.500
So keep an eye on what's going to happen when I press enter.

33
00:01:58.500 --> 00:02:01.020
I'm going to do that in 3 to 1.

34
00:02:01.560 --> 00:02:02.160
There we go.

35
00:02:02.430 --> 00:02:07.940
So as soon as we indicated that we're done typing, then Vue finally commits that mutation to the View

36
00:02:08.040 --> 00:02:11.880
Store and the trim input modifier removes all the whitespace.

37
00:02:12.120 --> 00:02:16.230
So notice what we have here and skill search term is just the final term review.

38
00:02:16.440 --> 00:02:19.710
So trim, remove that space at the beginning and at the end.

39
00:02:19.950 --> 00:02:24.450
And because this is what is connected to our computed functions get method.

40
00:02:24.690 --> 00:02:28.530
This is what view and the template automatically update.

41
00:02:28.710 --> 00:02:34.290
So right here these spaces are removed as well because this is reading from this value right here in

42
00:02:34.290 --> 00:02:34.980
the bookstore.

43
00:02:35.880 --> 00:02:36.300
All right.

44
00:02:36.450 --> 00:02:37.500
So that's how trim works.

45
00:02:37.500 --> 00:02:42.690
It allows us to very easily simply remove whitespace from the beginning and end of the user's input,

46
00:02:42.870 --> 00:02:47.280
which, of course, is very important, because if we want to do filtering and we accidentally provide

47
00:02:47.280 --> 00:02:53.820
extra spaces here, then that method of includes that we're using to double check whether this is existing

48
00:02:53.820 --> 00:02:54.630
in the job's title.

49
00:02:54.780 --> 00:02:58.260
That logic may no longer work if we have some additional spaces.

50
00:02:58.440 --> 00:03:01.470
Now we're getting rid of all that junk and just sticking to the characters.

51
00:03:01.470 --> 00:03:05.580
The user's typed, which of course increases the likelihood they were going to we're going to find a

52
00:03:05.580 --> 00:03:06.810
match in jobs for them.

53
00:03:07.110 --> 00:03:07.440
All right.

54
00:03:07.440 --> 00:03:09.140
That's all there is to cover in this lesson.

55
00:03:09.150 --> 00:03:10.680
So I will see you in the next one.
