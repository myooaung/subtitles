WEBVTT
1
00:00:00.930 --> 00:00:02.010
All right.

2
00:00:02.020 --> 00:00:05.820
So in this lesson, we'll learn about the VON Directive.

3
00:00:06.000 --> 00:00:10.290
As a reminder, a directive is a special command available to view.

4
00:00:10.380 --> 00:00:13.680
That view will understand as it's building your HTML.

5
00:00:13.980 --> 00:00:17.670
So earlier we talked about v f the else v four.

6
00:00:17.700 --> 00:00:22.710
Those are all examples of directives that we can give to view and view will interpret those almost like

7
00:00:22.710 --> 00:00:26.640
magic commands or magic functions that it knows how to deal with.

8
00:00:26.640 --> 00:00:26.970
Right?

9
00:00:26.970 --> 00:00:31.170
For example, v four to iterate or v if to conditionally render.

10
00:00:31.530 --> 00:00:38.130
Well, this directive is called v on and what we can use it for is to specify an action to take on some

11
00:00:38.130 --> 00:00:39.810
kind of an event.

12
00:00:40.080 --> 00:00:45.630
And an event simply means something that happens such as a user interaction, like the user clicking

13
00:00:45.630 --> 00:00:47.520
something or typing into something.

14
00:00:47.700 --> 00:00:54.140
Any kind of interactive thing that occurs is called an event, just like an event in real life, right?

15
00:00:54.180 --> 00:00:57.360
Like the event on Saturday or the event on Friday, right?

16
00:00:57.360 --> 00:00:59.700
It's some kind of occurrence at some point in time.

17
00:00:59.910 --> 00:01:05.310
At some point in time, the user will interact with our application, and that is an example of an event

18
00:01:05.310 --> 00:01:06.540
that will occur at some point.

19
00:01:06.540 --> 00:01:06.810
Right.

20
00:01:07.050 --> 00:01:11.880
And so what we can use the VON Directive to do is to react to an event.

21
00:01:12.240 --> 00:01:15.990
So what I want to do here is just write it out and it should hopefully make sense.

22
00:01:15.990 --> 00:01:19.800
It's probably easier if I don't explain it and just show you the vision directive in action.

23
00:01:20.040 --> 00:01:24.900
So right here on our button element, in our action button component, I'm going to write the directive.

24
00:01:24.900 --> 00:01:30.030
Von all of you directives start with, of course the V prefix.

25
00:01:30.330 --> 00:01:35.640
Then we have to actually specify on what event we want this action to occur on.

26
00:01:35.640 --> 00:01:35.850
Right?

27
00:01:35.850 --> 00:01:37.560
Because there's many different types of events.

28
00:01:37.560 --> 00:01:40.980
The user can click, the user can type, these are can mouse over, etc..

29
00:01:41.280 --> 00:01:45.870
So in order to specify the type of event, we're going to add a colon here and then write the type of

30
00:01:45.870 --> 00:01:49.890
event and the type of event here with a button, of course, is going to be a click.

31
00:01:50.720 --> 00:01:57.110
All right, then I'm going to provide an equal sign and some double quotes for my string.

32
00:01:57.380 --> 00:02:00.860
So what we're specifying, here's when the user clicks on this button.

33
00:02:01.040 --> 00:02:02.900
What do we want to execute?

34
00:02:02.910 --> 00:02:04.250
What do we want to run?

35
00:02:04.460 --> 00:02:08.660
And hopefully that gives you a hint, because when we talk about the idea of executing something, we're

36
00:02:08.660 --> 00:02:10.970
talking about a function or a method.

37
00:02:11.300 --> 00:02:18.860
So here we are able to put any one of our defined methods that we have defined in the view configuration

38
00:02:18.860 --> 00:02:20.090
object down below.

39
00:02:20.360 --> 00:02:23.900
So right now we have a single method defined and that is handle click.

40
00:02:24.140 --> 00:02:25.610
So I'm going to write it out here.

41
00:02:27.000 --> 00:02:30.840
So once again, just to reiterate, Von Click is not up to us.

42
00:02:30.840 --> 00:02:32.310
That is views, specific syntax.

43
00:02:32.550 --> 00:02:38.100
But what we put here in the double quotes is a name of a method that is up to us based on what we define

44
00:02:38.100 --> 00:02:40.530
here in the methods object in the view configuration.

45
00:02:40.770 --> 00:02:45.750
So just like we're able to use elements of the data object in our template, we showed earlier how we

46
00:02:45.750 --> 00:02:51.150
can do that with the double curly braces, we're similarly able to use methods that we defined within

47
00:02:51.150 --> 00:02:52.740
our HTML template, right?

48
00:02:52.890 --> 00:02:58.830
In this case, we're attaching it to our VON Directive and specifying that the method will run when

49
00:02:58.830 --> 00:02:59.880
the user clicks.

50
00:03:00.030 --> 00:03:02.100
This element the button.

51
00:03:02.280 --> 00:03:07.530
All right, so I'm going to save this and let's go to our browser and check up on it.

52
00:03:07.530 --> 00:03:14.040
So I'm going to go back to my browser and now let's try clicking the sign in button and there we can

53
00:03:14.040 --> 00:03:20.640
see I've been clicked has appeared and that method will run every single time we execute a click of

54
00:03:20.640 --> 00:03:20.820
that.

55
00:03:20.820 --> 00:03:26.190
So if I click this button a couple more times, you'll see from the console that I've been clicked is

56
00:03:26.190 --> 00:03:28.020
going to render multiple times.

57
00:03:28.020 --> 00:03:30.990
It's actually going to have this number to the left hand side of it.

58
00:03:30.990 --> 00:03:34.350
In Chrome that indicates how many times Chrome is output the message.

59
00:03:34.350 --> 00:03:39.990
Chrome doesn't want to output it multiple times because it's duplicated and the same one, but it is

60
00:03:39.990 --> 00:03:41.430
actually console.log.

61
00:03:41.430 --> 00:03:43.470
Yet each time we click on the button.

62
00:03:43.770 --> 00:03:46.170
All right, that's all there is to cover in this lesson.

63
00:03:46.170 --> 00:03:48.780
Let me go back to this code and review what we learned.

64
00:03:48.960 --> 00:03:50.910
This is an example of a directive.

65
00:03:50.940 --> 00:03:52.200
It's called the Vision Directive.

66
00:03:52.350 --> 00:03:55.650
We specify what to do or what action to take.

67
00:03:55.650 --> 00:04:00.780
Whenever the user does some kind of event, we specify which event we want to react to, in this case,

68
00:04:00.780 --> 00:04:01.290
the click.

69
00:04:01.560 --> 00:04:07.110
And then in order to specify what logic or piece of kind of business logic should run, when the click

70
00:04:07.110 --> 00:04:12.900
happens, we provide the name of a method in our view configuration object.

71
00:04:13.110 --> 00:04:15.960
Notice here that we are not invoking handle click.

72
00:04:15.970 --> 00:04:18.000
So you do not want to do this.

73
00:04:18.000 --> 00:04:18.360
All right.

74
00:04:18.510 --> 00:04:23.040
You just specify the name of the method that you want view to run for you.

75
00:04:23.100 --> 00:04:27.090
Whenever the user whenever the user clicks on this button.

76
00:04:27.240 --> 00:04:32.760
And keep in mind we've put this logic right now in our action button component, which means anywhere

77
00:04:32.760 --> 00:04:36.360
we render an action button component throughout the app, this logic will hold.

78
00:04:36.570 --> 00:04:42.090
So if we were to render an action button in another component, this logic lives in here in the method

79
00:04:42.090 --> 00:04:43.290
defined in action button.

80
00:04:43.440 --> 00:04:48.360
So any click on any one of those buttons belonging to an action button component would trigger this

81
00:04:48.360 --> 00:04:49.260
method to run, right?

82
00:04:49.260 --> 00:04:50.880
It's not limited to one action button.

83
00:04:51.060 --> 00:04:53.970
It is in every single action button that we render.

84
00:04:53.970 --> 00:04:57.960
We have encoded this logic because we've made it a component method.

85
00:04:58.140 --> 00:04:58.470
All right.

86
00:04:58.710 --> 00:05:00.120
So we're seeing this little bit of.

87
00:05:00.300 --> 00:05:00.630
Yes.

88
00:05:00.630 --> 00:05:02.280
Lint warnings right here.

89
00:05:02.400 --> 00:05:04.800
And we're going to show you how to fix that in the very next lesson.
