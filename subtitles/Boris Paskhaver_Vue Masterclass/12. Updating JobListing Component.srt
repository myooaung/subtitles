1
00:00:00,480 --> 00:00:00,900
Okay.

2
00:00:00,900 --> 00:00:04,920
So our job listings component is now utilizing the composition API.

3
00:00:05,070 --> 00:00:11,010
We've moved a lot of logic into smaller, more lightweight, more easily tested composable functions,

4
00:00:11,010 --> 00:00:14,430
and you can see the setup method has diminished in size significantly.

5
00:00:14,820 --> 00:00:19,190
Now as a reminder, the way job listings works is it gets to filter jobs from you.

6
00:00:19,680 --> 00:00:25,950
And then it uses the displayed jobs computed function here to slice the correct array of ten jobs from

7
00:00:25,950 --> 00:00:27,660
the original array of filter jobs.

8
00:00:27,930 --> 00:00:33,510
And once it has that array of ten job objects, it iterates over them using the V4 directive and it

9
00:00:33,510 --> 00:00:36,630
renders a job listing component for each one of them.

10
00:00:36,900 --> 00:00:41,820
And if I go to the job listing component right here in job listing, that view and I scroll to the bottom,

11
00:00:41,970 --> 00:00:45,360
will see that this component is still utilizing the Options API.

12
00:00:45,540 --> 00:00:47,040
But luckily it's super simple.

13
00:00:47,040 --> 00:00:48,960
It just has a single computed property.

14
00:00:49,140 --> 00:00:52,800
So it's going to be really quick for us to quickly move this to the composition API.

15
00:00:53,130 --> 00:00:53,430
All right.

16
00:00:53,430 --> 00:00:56,690
So once again, I'm going to comment this out right here.

17
00:00:56,700 --> 00:00:58,500
I'm going to provide a setup method.

18
00:00:58,710 --> 00:01:03,390
We are going to need to utilize props right here because this one is relying on the job prop.

19
00:01:03,570 --> 00:01:07,560
You can see job is an object that flows in and it has an idea property that we care about.

20
00:01:07,890 --> 00:01:12,360
So right here, I'm going to provide my props as the first argument and I'm going to need to define

21
00:01:12,360 --> 00:01:17,310
a computed evaluation right here since this one is using something called job page link.

22
00:01:17,310 --> 00:01:19,380
That's what I'll call my constant here as well.

23
00:01:19,710 --> 00:01:21,120
So constant job page link.

24
00:01:22,320 --> 00:01:26,400
And in order to have something that reevaluates whenever the props update, I'll need to use a computed

25
00:01:26,400 --> 00:01:26,850
function.

26
00:01:27,090 --> 00:01:29,070
So right here I will import computed.

27
00:01:30,460 --> 00:01:31,450
From view.

28
00:01:31,960 --> 00:01:36,700
And right here, I'm going to say that it's going to be a computed function that we're going to reevaluate

29
00:01:36,700 --> 00:01:38,560
whenever we get a new prop value.

30
00:01:38,740 --> 00:01:43,120
And right here, I'm simply going to return and interpolate string the exact same thing I have right

31
00:01:43,120 --> 00:01:43,470
here.

32
00:01:43,480 --> 00:01:48,070
So I want slash jobs, slash results, and then I'm going to interpolate something.

33
00:01:48,580 --> 00:01:54,580
We no longer have access to this that job, but we do have access to props dot job and that is a reactive

34
00:01:54,580 --> 00:01:54,940
object.

35
00:01:54,940 --> 00:01:58,540
So we can simply reference it or any properties on it like so.

36
00:01:58,540 --> 00:02:03,550
And because we're not de structuring and the object is reactive, whenever the job object changes or

37
00:02:03,550 --> 00:02:10,480
even when the props object changes, this thing will re-evaluate and give us a new computed URL, which

38
00:02:10,480 --> 00:02:11,470
is the job page link.

39
00:02:11,650 --> 00:02:16,180
And then all we have to do is return it right here as an available property in the object right here.

40
00:02:16,720 --> 00:02:20,950
Return that which allows us to get rid of computed properties.

41
00:02:21,310 --> 00:02:24,490
Save that and now we have a new composition API implementation.

42
00:02:24,760 --> 00:02:28,990
The only reason I really wanted to do that is just because this is so critical to how job listings works.

43
00:02:29,170 --> 00:02:34,150
And since we are using Composition API here, I also wanted to make sure we were using Composition API

44
00:02:34,300 --> 00:02:35,230
in the child component.

45
00:02:35,590 --> 00:02:37,480
And with that, all of our tests are passing.

46
00:02:37,480 --> 00:02:42,160
And if I navigate back to my browser because it's been a while since we've been in here, everything

47
00:02:42,160 --> 00:02:43,570
is still working on this page.

48
00:02:43,570 --> 00:02:44,440
So I'm going to refresh it.

49
00:02:45,340 --> 00:02:49,930
We're going to start out with 100 jobs in the page here on my job types.

50
00:02:49,930 --> 00:02:53,950
You can see as I select them, the jobs in the right are going to update accordingly.

51
00:02:54,280 --> 00:03:01,060
Everything is still working as far as the next page is working or the next page link, the previous

52
00:03:01,060 --> 00:03:03,490
page link as well, it's going to scroll in to the top.

53
00:03:03,700 --> 00:03:07,450
The key takeaway, of course, is that all of our transition to composable functions and everything

54
00:03:07,450 --> 00:03:10,600
we've been working on in this section, everything is still functioning.

55
00:03:10,600 --> 00:03:15,160
Everything, everything is still working for our job listings component and still providing value to

56
00:03:15,160 --> 00:03:15,550
the user.

57
00:03:15,940 --> 00:03:16,210
All right.

58
00:03:16,210 --> 00:03:19,720
So with that, we have wrapped up our third section on the composition API.

59
00:03:19,720 --> 00:03:25,060
And hopefully this has been a lot of practice and a lot of reaped a lot of benefits as far as getting

60
00:03:25,060 --> 00:03:29,680
a chance to write a lot of these composable functions is a lot of the helper functions that Vue gives

61
00:03:29,680 --> 00:03:37,030
us, like I use route, use, store, use router, etc. and with that we are good to wrap up the section

62
00:03:37,030 --> 00:03:38,200
in the very next lesson.

63
00:03:38,200 --> 00:03:39,010
I will see you there.
