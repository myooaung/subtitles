WEBVTT
1
00:00:00.330 --> 00:00:01.140
Okay.

2
00:00:01.140 --> 00:00:05.880
So we have added a bunch of code to our code base and modified some existing code as well.

3
00:00:06.150 --> 00:00:09.660
So I think now is a good time to run our complete test suite.

4
00:00:09.900 --> 00:00:11.010
Let's check in on that.

5
00:00:11.250 --> 00:00:16.100
So right here in my terminal, I'm going to run NPM, run test, colon unit.

6
00:00:16.110 --> 00:00:19.230
I want to run every possible test file that just confined.

7
00:00:19.980 --> 00:00:21.420
So I'm going to wait for it to boot up.

8
00:00:21.420 --> 00:00:25.560
May take a couple of seconds to get running, but once it does, it's going to run pretty quick.

9
00:00:25.800 --> 00:00:30.330
And we can see that we do have one test suite that is failing and eight failing tests within it.

10
00:00:30.510 --> 00:00:36.230
And as I scroll up, I go all the way to the very top of all these big failure outputs.

11
00:00:36.240 --> 00:00:42.300
We're going to see that it's going to be coming from a single test, which is our job listings, that

12
00:00:42.300 --> 00:00:43.260
test, that just file.

13
00:00:43.560 --> 00:00:47.550
And here we can see a sample issue unknown getter filter jobs.

14
00:00:47.790 --> 00:00:53.490
So let me open up my job listings component on the left and let me open up the corresponding test suite

15
00:00:53.490 --> 00:00:54.210
on the right.

16
00:00:55.440 --> 00:00:56.550
So here is job listings.

17
00:00:56.550 --> 00:00:57.510
That test that.

18
00:00:57.510 --> 00:00:57.870
Yes.

19
00:00:58.890 --> 00:01:04.740
So as a reminder, we were previously using one of our previous getters.

20
00:01:04.740 --> 00:01:11.970
We were using filter jobs by organizations or filter jobs by job types, and we replaced that individual

21
00:01:11.970 --> 00:01:16.080
getter filter with our composite filter, which is called the filter jobs.

22
00:01:16.320 --> 00:01:21.240
But you'll notice back in our test suite, we still have the tests for the previous implementation.

23
00:01:21.540 --> 00:01:26.280
So our test here, you'll notice, is still using filter jobs by organizations in the create store,

24
00:01:26.580 --> 00:01:29.190
a factory function as well as elsewhere throughout the file.

25
00:01:29.490 --> 00:01:32.030
Luckily, it's going to be pretty simple to fix this issue.

26
00:01:32.040 --> 00:01:38.280
We just need this getter to exist on the component or more specifically on the store so that the map

27
00:01:38.280 --> 00:01:41.550
getters function can extract it to a component computer property.

28
00:01:41.880 --> 00:01:47.100
So all I'm going to do in my test file is wherever I see filter jobs by organizations, I'm going to

29
00:01:47.100 --> 00:01:51.390
change it to the appropriate getter, which is just going to be filter jobs and that is going to allow

30
00:01:51.390 --> 00:01:52.350
map getters to work.

31
00:01:52.470 --> 00:01:57.450
That's going to allow next page to work because it's also relying on filter jobs and it's also going

32
00:01:57.450 --> 00:02:03.000
to allow display jobs to work because that is also relying on the filter jobs.

33
00:02:03.240 --> 00:02:08.670
So once again, a simple mismatch because the component is dependent on a getter that is not existing

34
00:02:08.670 --> 00:02:09.390
in our test setup.

35
00:02:09.600 --> 00:02:11.220
Now, it's going to exist in this setup.

36
00:02:11.460 --> 00:02:15.360
And as I scroll down, I'm going to look for any other occurrences of that getter throughout.

37
00:02:16.110 --> 00:02:19.650
So here is an example where we're passing in an array with 15 jobs.

38
00:02:19.860 --> 00:02:24.660
So now we can pretend that this is filter jobs instead of filter jobs by organization.

39
00:02:24.840 --> 00:02:30.090
So now the component is going to have this array of 15 jobs scrolling down, nothing here, nothing

40
00:02:30.090 --> 00:02:30.510
here.

41
00:02:30.720 --> 00:02:33.960
Scrolling down here, there's another use case of that getter.

42
00:02:33.960 --> 00:02:38.250
So let's change this from filter jobs by organizations to just filter jobs.

43
00:02:38.490 --> 00:02:39.150
Save that.

44
00:02:39.150 --> 00:02:41.490
Scroll down one more time right here.

45
00:02:41.490 --> 00:02:42.540
Filter jobs.

46
00:02:43.930 --> 00:02:47.290
Scroll down one more time here, and this appears to be the final test.

47
00:02:47.680 --> 00:02:51.760
So I'm simply going to change the getter name to match the real world implementation.

48
00:02:51.760 --> 00:02:53.620
Let's run our complete test suite again.

49
00:02:55.180 --> 00:02:56.200
And let's see where we're at.

50
00:02:57.430 --> 00:02:58.600
Simply by switching that.

51
00:02:58.600 --> 00:02:59.490
And there you go.

52
00:02:59.500 --> 00:03:00.860
Everything is passing.

53
00:03:00.880 --> 00:03:03.640
It looks like we do have some code coverage missing in our getters file.

54
00:03:03.640 --> 00:03:05.020
We'll talk a little bit about that later.

55
00:03:05.230 --> 00:03:09.070
But all of our test routes are passing, so it really was as simple as that.

56
00:03:09.310 --> 00:03:12.460
So again, that's a good sign that our tests are testing the right thing.

57
00:03:12.610 --> 00:03:17.020
Our tests were dependent on a former implementation that relied on a former getter.

58
00:03:17.020 --> 00:03:18.010
There's no longer relevant.

59
00:03:18.250 --> 00:03:23.500
All we had to do is change the getter name throughout our test file and our tests still work.

60
00:03:24.040 --> 00:03:26.410
Our tests resolved back to passing again.

61
00:03:26.620 --> 00:03:28.840
That's a good sign that we're testing the core functionality.

62
00:03:28.930 --> 00:03:31.390
It literally was just a name mismatch at this point.

63
00:03:31.720 --> 00:03:32.020
All right.

64
00:03:32.020 --> 00:03:33.440
So our test suite is looking good.

65
00:03:33.490 --> 00:03:35.080
So I will see you in the next lesson.
