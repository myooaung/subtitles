WEBVTT
1
00:00:00.340 --> 00:00:01.160
Okay.

2
00:00:01.170 --> 00:00:06.150
So in the previous lesson we declared our add selected organizations mutation.

3
00:00:06.450 --> 00:00:13.170
So the only thing that is left to do is to commit this mutation in our job filters, sidebar organizations

4
00:00:13.170 --> 00:00:15.720
component, which I have opened here on the left.

5
00:00:15.960 --> 00:00:22.080
As a reminder, what we want to do is whenever the user selects a checkbox in addition to storing the

6
00:00:22.080 --> 00:00:28.950
data locally in this component, we want to send that array of selected organizations to our view store.

7
00:00:29.070 --> 00:00:33.030
And the way we're going to do that is using this ADD selected organizations mutation.

8
00:00:33.390 --> 00:00:38.400
So right here in this component, I'm going to begin by importing a special helper function and it's

9
00:00:38.400 --> 00:00:39.900
going to be map mutations.

10
00:00:40.200 --> 00:00:46.080
Remember, map mutations is a helper that allows us to define component methods that will automatically

11
00:00:46.080 --> 00:00:48.240
commit certain mutations for us.

12
00:00:48.540 --> 00:00:53.340
Speaking of the mutations that we want to eventually commit, we're going to want this add selected

13
00:00:53.340 --> 00:00:54.630
organizations mutation.

14
00:00:54.930 --> 00:00:59.610
And so what I'm going to do is on this line below where we're importing the constants from our index,

15
00:00:59.610 --> 00:01:01.140
just file in the store folder.

16
00:01:01.350 --> 00:01:08.670
Here is where I can also import my ADD selected organizations constant, which of course I have exported

17
00:01:08.970 --> 00:01:09.600
right here.

18
00:01:10.290 --> 00:01:10.620
Okay.

19
00:01:10.920 --> 00:01:15.840
So using map mutations, we need to create a method on this component that we can invoke.

20
00:01:16.050 --> 00:01:18.900
So right here, I'm going to scroll down to my methods section right here.

21
00:01:19.200 --> 00:01:24.660
And the way this works is we invoke map mutations, which is going to return an object with properties

22
00:01:24.840 --> 00:01:31.080
and we want to make sure we destructor those properties which are methods so that they become top level

23
00:01:31.080 --> 00:01:37.290
methods of this methods object and thus become the top level methods on my job filter sidebar organization's

24
00:01:37.290 --> 00:01:37.680
component.

25
00:01:38.100 --> 00:01:44.520
So what I can do here as a reminder is provide map mutations with an array, and in that array I write

26
00:01:44.520 --> 00:01:46.410
my mutations.

27
00:01:46.470 --> 00:01:52.110
So in this case I want to provide my ADD selected organizations mutation and that's just a string.

28
00:01:52.470 --> 00:01:57.600
So what view x and this function is going to do for us is it's going to find this mutation, this one

29
00:01:57.600 --> 00:02:03.510
right here on the right hand side, and it's going to create a method called add selected organizations

30
00:02:03.720 --> 00:02:04.770
on my component.

31
00:02:04.950 --> 00:02:09.390
And that method will automatically commit this very mutation for us.

32
00:02:09.840 --> 00:02:14.670
All right, so now we have this functionality on a component, but we still need to run this mutation.

33
00:02:14.670 --> 00:02:18.750
We still need to tell the component when we actually want to make this change to the View Store.

34
00:02:19.050 --> 00:02:23.220
And of course, the place we want to do that is right here in our select organization method.

35
00:02:23.460 --> 00:02:29.490
As a reminder, this is the method that we're hardwired to run right here.

36
00:02:30.720 --> 00:02:35.910
Whenever the user selects a checkbox, whenever the user changes an input, we're going to trigger this

37
00:02:35.910 --> 00:02:40.470
change event and have it react by invoking the select organization component method.

38
00:02:40.830 --> 00:02:45.540
So previously we were simply console logging out the local data of selected organizations.

39
00:02:45.540 --> 00:02:51.570
Right here to show you that this array has the strings of the organizations that the user has selected.

40
00:02:51.720 --> 00:02:58.380
I want to take this array as it is and I want to run my mutation passing in that array because I want

41
00:02:58.380 --> 00:03:04.020
those organizations to flow in right here so that I can overwrite my selected organization's state in

42
00:03:04.020 --> 00:03:04.920
my view store.

43
00:03:05.580 --> 00:03:09.540
I know it's a little bit confusing because we have selected organizations as part of our local component

44
00:03:09.540 --> 00:03:09.870
state.

45
00:03:10.050 --> 00:03:14.220
I want to take that local component state and I want to ship it up to the U.S., where we're going to

46
00:03:14.220 --> 00:03:18.780
also make it a part of the global view state right here on the right hand side on line 16.

47
00:03:19.230 --> 00:03:20.250
So what I'm going to do here.

48
00:03:21.440 --> 00:03:26.180
Isn't going to invoke my ADD selected organizations mutation right here.

49
00:03:26.180 --> 00:03:31.850
That's going to run the mutation behind the scenes view and view X are automatically going to provide

50
00:03:31.850 --> 00:03:37.100
the current store state as the very first argument to this mutation and then any secondary arguments

51
00:03:37.100 --> 00:03:39.560
I provide directly in this invocation.

52
00:03:39.800 --> 00:03:43.430
So my second argument here is the expected organization's array.

53
00:03:43.550 --> 00:03:45.050
So I have to provide that right here.

54
00:03:45.170 --> 00:03:50.900
Where am I going to get that organization's right directly on my local component data by getting this

55
00:03:51.110 --> 00:03:52.970
dot selected of organizations?

56
00:03:53.270 --> 00:03:57.770
And we're going to we know at this point that this array is going to have the strings that we want at

57
00:03:57.770 --> 00:03:58.250
this point.

58
00:03:58.760 --> 00:04:02.750
So run the mutation and ship off the array of strings to the View X Store.

59
00:04:03.110 --> 00:04:06.410
So let me save this and show you how it's going to work in the browser.

60
00:04:07.570 --> 00:04:08.020
So.

61
00:04:08.960 --> 00:04:10.450
I'm going to go to my app.

62
00:04:10.460 --> 00:04:13.790
I'm going to expand this and I'm going to show my view dev tools.

63
00:04:14.490 --> 00:04:16.880
So let's first start out on the component side.

64
00:04:16.880 --> 00:04:22.610
So if I go to my job results, view my job filter sidebar, here's my job filter, sidebar organization's

65
00:04:22.610 --> 00:04:25.790
component we see here that are selected organizations.

66
00:04:25.790 --> 00:04:30.260
Slice of data doesn't have any items in it as soon as I select view YouTube.

67
00:04:32.310 --> 00:04:33.990
Let me see if I can refresh this here.

68
00:04:34.770 --> 00:04:35.280
There we go.

69
00:04:35.460 --> 00:04:38.100
As soon as I say, like YouTube, we're going to see this change up here.

70
00:04:38.100 --> 00:04:38.590
Right here.

71
00:04:38.610 --> 00:04:42.330
If I select another one and refresh, sometimes it does get a little bit out of sync.

72
00:04:42.600 --> 00:04:45.870
We can see that the data has updated to show point of view.

73
00:04:46.110 --> 00:04:49.110
So this is just updating local component state.

74
00:04:49.290 --> 00:04:54.360
However, the important thing is that we are also sending this data to view X and I can prove this to

75
00:04:54.360 --> 00:04:57.230
you by going to this panel and going to view X.

76
00:04:57.630 --> 00:05:01.830
And now if I click on Root here, we're going to see the current state of our view store and you could

77
00:05:01.830 --> 00:05:06.690
see selected organizations right here has the exact same array of two strings.

78
00:05:07.110 --> 00:05:10.530
And as soon as I select a third one, we're going to issue another mutation.

79
00:05:10.710 --> 00:05:12.810
And that change is going to be in the array.

80
00:05:12.810 --> 00:05:17.460
And we're going to send that array once again to our vehicle store, the mutation more specifically,

81
00:05:17.580 --> 00:05:19.850
and that mutation is going to override the view store.

82
00:05:20.160 --> 00:05:22.410
So we're now storing this data in view X.

83
00:05:22.410 --> 00:05:26.430
We have it available in that global view store and the same rules apply.

84
00:05:26.430 --> 00:05:32.100
If I select an organization, what's going to happen then is my components local view model will update

85
00:05:32.100 --> 00:05:37.800
the local component data to have an array of two strings, and then it's going to rerun the mutation

86
00:05:37.800 --> 00:05:43.050
automatically because we wired it up to the change event and the new array of two strings is going to

87
00:05:43.050 --> 00:05:47.640
be sent to the View Store and then the View X is going to update its own selected organization's slice

88
00:05:47.640 --> 00:05:48.000
of state.

89
00:05:48.240 --> 00:05:52.200
So right here I'm going to select point of view and you can see it disappears from here as well.

90
00:05:52.200 --> 00:05:53.490
Let me d select YouTube.

91
00:05:53.700 --> 00:05:56.910
You can see it disappears from the view store as well.

92
00:05:57.090 --> 00:06:00.060
Then I select view can do it and it appears here as well.

93
00:06:00.810 --> 00:06:01.110
All right.

94
00:06:01.110 --> 00:06:06.030
So we have completed our original goal, which is to find a way to take this local component data and

95
00:06:06.030 --> 00:06:07.500
bring it to the View X Store.

96
00:06:07.680 --> 00:06:08.010
All right.

97
00:06:08.190 --> 00:06:13.950
And now that we have in our view store, our jobs array, as well as all of these selected organizations,

98
00:06:14.100 --> 00:06:20.310
we can use these two pieces of data to filter our jobs to only the ones that fit the user selections

99
00:06:20.460 --> 00:06:23.550
so that we can display them right here on the right hand side.

100
00:06:23.730 --> 00:06:27.270
That's where we're going to start working on over the course of the next couple of lessons, and I'll

101
00:06:27.270 --> 00:06:27.690
see you there.
