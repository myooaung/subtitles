1
00:00:00,670 --> 00:00:01,690
Alright.

2
00:00:01,690 --> 00:00:07,720
So in the previous lesson we learned about the data method, we can add the data method to any of our

3
00:00:07,720 --> 00:00:14,620
view configuration objects in a view component file and the data method returns a plain JavaScript object

4
00:00:14,830 --> 00:00:18,310
whose properties we can use throughout our HTML template.

5
00:00:18,580 --> 00:00:24,700
For example, if we want to directly inject the value of a property into our template as text, we can

6
00:00:24,700 --> 00:00:28,780
use the curly brace syntax which we see right here with company.

7
00:00:28,970 --> 00:00:29,710
Right now.

8
00:00:29,710 --> 00:00:34,240
Of course, this object, our data object, is not just limited to one property.

9
00:00:34,300 --> 00:00:37,060
We can add as many different properties to it as we want.

10
00:00:37,330 --> 00:00:42,970
So let's practice this idea in this lesson and add a couple more properties and then see some edge cases

11
00:00:42,970 --> 00:00:44,590
as we render them onto the screen.

12
00:00:45,010 --> 00:00:50,110
So let's say I want to put my developer name onto the screen, I want to have my company, and then

13
00:00:50,110 --> 00:00:54,490
let's say I want to have a little bit of text that says developed by followed by our name.

14
00:00:54,490 --> 00:00:54,790
Right?

15
00:00:55,120 --> 00:01:00,490
So I'm going to define another data property called author and I'm going to set it equal to my name,

16
00:01:00,670 --> 00:01:01,800
Boris Pass Cavour.

17
00:01:01,840 --> 00:01:04,870
And you, of course, are welcome to put your name here instead.

18
00:01:04,990 --> 00:01:05,350
All right.

19
00:01:05,590 --> 00:01:09,610
And I want to put this text right after our anchor tag with the company name.

20
00:01:09,730 --> 00:01:12,070
So right below here, I'll add an H2.

21
00:01:12,940 --> 00:01:17,410
And before I add my name, I want to apply some Tailwind classes to my H2.

22
00:01:17,740 --> 00:01:19,420
So I'll just add my class right here.

23
00:01:20,200 --> 00:01:22,990
We're going to make this a Flexbox with the flex class.

24
00:01:23,410 --> 00:01:30,010
We're going to vertically center the content of the Flexbox by using the tailwind items center class.

25
00:01:31,140 --> 00:01:36,370
I also want to make sure that the height of this H2 is the full height of its parent container.

26
00:01:36,600 --> 00:01:41,130
So I'm going to apply the H4 class, which applies a height property set to 100%.

27
00:01:41,460 --> 00:01:47,220
And then I want to add some margin to the left of this H2 element to create some spacing between it

28
00:01:47,220 --> 00:01:48,300
and my company name.

29
00:01:48,570 --> 00:01:53,910
So all of tailwinds margin classes are going to begin with the letter M and then you're going to have

30
00:01:53,910 --> 00:02:00,810
some additional subsets of classes if you want to add margin on only a specific side of the container.

31
00:02:00,810 --> 00:02:06,690
So for example, you're going to have an L for margin left and M are for margin right.

32
00:02:06,960 --> 00:02:11,310
So for example, in this case, I want to add some margin to the left of my age to element.

33
00:02:11,520 --> 00:02:15,720
So if I start with an L dash, these are my margin left utility classes.

34
00:02:15,990 --> 00:02:20,370
You can see there's a whole bunch of them available here in Tailwind as I scroll through them.

35
00:02:20,520 --> 00:02:25,770
You can see the differing values that it adds to the margin left property on the right hand side.

36
00:02:25,980 --> 00:02:32,040
And if I settle on something like MLA eight, that is equal to two RAM or 32 pixels of margin on the

37
00:02:32,040 --> 00:02:33,330
left side of my H2.

38
00:02:33,330 --> 00:02:34,470
So that sounds good to me.

39
00:02:34,800 --> 00:02:41,490
So I'm going to click this into place and then right here I want to combine some text that I have written

40
00:02:41,490 --> 00:02:47,580
in line here in my HTML coupled with my dynamic property, which is author and whatever that happens

41
00:02:47,580 --> 00:02:48,330
to be at the moment.

42
00:02:48,540 --> 00:02:53,580
So I'm just going to write out, developed by and now I want to inject my author name.

43
00:02:53,590 --> 00:02:54,660
So how do we do that?

44
00:02:54,660 --> 00:03:00,210
Just like in the previous lesson, we need to write our curly braces, then write a valid data property.

45
00:03:00,210 --> 00:03:06,480
In this case, author is available so developed by author close off the curly braces, save the file

46
00:03:06,660 --> 00:03:09,000
and let's head to the browser to see the results.

47
00:03:09,390 --> 00:03:10,500
And there you have it.

48
00:03:10,500 --> 00:03:17,850
We have developed by Boris Pass Killer directly in our browser again to our HTML to visit to our browser.

49
00:03:17,850 --> 00:03:24,060
It's just a plain piece of text, but to view it knows that it's combining or concatenating the developed

50
00:03:24,060 --> 00:03:29,130
by text, static text with the dynamic value of the author property.

51
00:03:29,490 --> 00:03:31,830
So here's an interesting question to ask you.

52
00:03:32,160 --> 00:03:36,360
What do you think is going to happen if the author property is not actually defined?

53
00:03:36,360 --> 00:03:43,440
So for example, if I comment out this line and save the file while our data object no longer has an

54
00:03:43,440 --> 00:03:49,470
author property, well, whenever you try to access a property on an object in JavaScript and it's not

55
00:03:49,470 --> 00:03:55,200
available, it doesn't exist, JavaScript returns undefined and the way that Vue interprets undefined

56
00:03:55,200 --> 00:03:56,490
is blank space.

57
00:03:56,700 --> 00:04:00,330
So what's going to happen now is we're not going to get an error on the screen, we're just going to

58
00:04:00,330 --> 00:04:00,990
get nothing.

59
00:04:00,990 --> 00:04:06,690
We're going to get developed by blank because the author property doesn't exist, it evaluates to undefined.

60
00:04:06,930 --> 00:04:12,030
So if I head back to my browser to observe the changes here, you can see it's going to be developed

61
00:04:12,030 --> 00:04:13,020
by blank.

62
00:04:14,810 --> 00:04:15,350
Okay.

63
00:04:15,350 --> 00:04:22,520
So let's go ahead and comment back in the author property and let's say I wanted to represent my name

64
00:04:22,520 --> 00:04:23,780
a little bit differently.

65
00:04:23,930 --> 00:04:25,880
Instead of having a plain string.

66
00:04:26,030 --> 00:04:33,560
Let's say I wanted a extra JavaScript object, a JavaScript object with first name and last name properties.

67
00:04:33,800 --> 00:04:40,400
Well, within this object that we return from our data method, we can provide any kind of value to

68
00:04:40,400 --> 00:04:41,330
any of our properties.

69
00:04:41,410 --> 00:04:47,450
As we mentioned in the previous lesson, we can have strings or numbers or arrays or other objects.

70
00:04:47,690 --> 00:04:54,080
So for example, imagine that author was a nested object in here and we assigned first name and last

71
00:04:54,080 --> 00:04:54,770
name properties.

72
00:04:54,770 --> 00:04:57,440
So I'm once again going to write out my name to first name.

73
00:04:57,440 --> 00:05:02,100
I'm going to assign the string Boris and to last name I'm going to assign my last name of past Cavour.

74
00:05:02,240 --> 00:05:05,870
Although you are more than welcome to provide your own first name and last name here.

75
00:05:06,200 --> 00:05:09,500
So now how do we reference something like this in our template?

76
00:05:09,770 --> 00:05:12,380
Well, we can't just write first name here.

77
00:05:12,380 --> 00:05:17,240
That's not going to work because first name is not available as a top level data property.

78
00:05:17,450 --> 00:05:22,820
Rather, first name is available as a nested property under the author object.

79
00:05:22,970 --> 00:05:26,510
So it's going to work the exact same way it does in vanilla JavaScript.

80
00:05:26,720 --> 00:05:32,090
We first have to reference the author object or the author property, which is available at the top

81
00:05:32,090 --> 00:05:33,380
level of our data object.

82
00:05:33,560 --> 00:05:41,000
And then we can use the dot syntax to access a property on the author object called First Name.

83
00:05:42,150 --> 00:05:46,530
Of course, that's just going to give me developed by Boris and I want to have my full name.

84
00:05:46,740 --> 00:05:51,840
So in order to add another interpellation afterwards, I'm going to add another pair of curly braces

85
00:05:51,840 --> 00:05:52,410
afterwards.

86
00:05:52,650 --> 00:05:56,040
And then here, once again, we want to reference our author property.

87
00:05:56,370 --> 00:06:00,330
We can only reference top level properties on data, and author is one of them.

88
00:06:00,510 --> 00:06:05,730
And then on the author object that the property gives me, I'm going to have a last name property,

89
00:06:06,360 --> 00:06:07,710
and that's what I want to interpolate.

90
00:06:07,710 --> 00:06:11,580
I'm going to save this file and you can see once again, prettier is going to bring the contents onto

91
00:06:11,580 --> 00:06:12,210
a new line.

92
00:06:12,360 --> 00:06:16,470
So it's helping us with both the HTML formatting and the JavaScript formatting, which is great.

93
00:06:16,770 --> 00:06:18,240
But if I head back to my browser.

94
00:06:19,720 --> 00:06:21,910
We're going to see the exact same result.

95
00:06:22,090 --> 00:06:27,640
We have the name of the company coming from the company property on data and my full name coming from

96
00:06:27,640 --> 00:06:30,770
two nested properties on the author object.

97
00:06:30,790 --> 00:06:31,120
All right.

98
00:06:31,330 --> 00:06:35,920
And once again, just so that we are used to this process, this is something that you do a lot when

99
00:06:35,920 --> 00:06:42,070
you're developing a you get used to going to your tools, to your inspector, to going to the view tools.

100
00:06:42,160 --> 00:06:47,430
And it never hurts to check in on any component to make sure the state is what you expect it to be.

101
00:06:47,440 --> 00:06:53,590
So if I click into me now, we can now see we have our company, we have our author, we have the properties

102
00:06:53,770 --> 00:06:55,030
that are available on the object.

103
00:06:55,030 --> 00:07:00,310
And of course we are more than welcome to edit them directly within our view dev tools by clicking this

104
00:07:00,310 --> 00:07:02,080
little pencil icon added value.

105
00:07:02,260 --> 00:07:07,630
And if I change this to something like Mr. Burrus, you can see immediately, even though the property

106
00:07:07,630 --> 00:07:10,480
is nested view is able to understand that reactivity.

107
00:07:10,480 --> 00:07:17,080
So we change the property and immediately view changes the resulting data as it's being rendered onto

108
00:07:17,080 --> 00:07:17,620
our screen.

109
00:07:17,730 --> 00:07:18,040
Right.

110
00:07:18,250 --> 00:07:19,900
That's all there is to cover in this lesson.

111
00:07:19,900 --> 00:07:21,430
So I will see you in the next one.
