1
00:00:00,520 --> 00:00:01,390
Okay.

2
00:00:01,400 --> 00:00:08,090
So in the previous lesson, we built our new job filter, sidebar, job types component, but we still

3
00:00:08,090 --> 00:00:09,770
need to render it in our app.

4
00:00:10,130 --> 00:00:16,490
So as a reminder, we are rendering all of these smaller subcomponents in a component called job filters

5
00:00:16,490 --> 00:00:17,090
sidebar.

6
00:00:17,450 --> 00:00:19,310
So let me open that up in verse code.

7
00:00:19,850 --> 00:00:20,480
Here it is.

8
00:00:20,630 --> 00:00:25,760
And as a reminder, here is where we're currently rendering the component that renders the organizational

9
00:00:25,760 --> 00:00:30,170
checkboxes and we previously had the smaller accordion here with a placeholder.

10
00:00:30,380 --> 00:00:36,350
And the intent here was to kind of make a placeholder for where we we would eventually place our job

11
00:00:36,350 --> 00:00:36,590
types.

12
00:00:36,860 --> 00:00:40,460
Well, now we have that component ready to go so we can place it right here.

13
00:00:40,790 --> 00:00:49,850
So in our script section, I'm going to import our new component import job filters, sidebar job types,

14
00:00:50,330 --> 00:00:56,330
and that is going to come from the same directory as below the source directory components, job results,

15
00:00:56,600 --> 00:00:58,340
job filter, side bar.

16
00:00:58,340 --> 00:01:02,060
And then in there we're going to go for job filter, sidebar, job types.

17
00:01:02,060 --> 00:01:04,640
That view again, importing in is not enough.

18
00:01:04,640 --> 00:01:07,460
We also have to register it with the local components property.

19
00:01:07,700 --> 00:01:12,230
So right here, job filter, sidebar, job types, there we go.

20
00:01:12,440 --> 00:01:15,080
And of course Eastland is complaining because we're not using it.

21
00:01:15,290 --> 00:01:20,540
Not a problem up here in the template section, I'm going to remove the second accordion and I'm going

22
00:01:20,540 --> 00:01:22,820
to render the component using a self-closing tag.

23
00:01:23,120 --> 00:01:30,590
So job filters, dash, sidebar, dash job types, then make it a self-closing component like so save

24
00:01:30,590 --> 00:01:32,570
that and the air slide warning should go away.

25
00:01:32,780 --> 00:01:38,030
And with that we can transition to our browser and here we have it job types.

26
00:01:38,030 --> 00:01:39,680
If I expand it, there we go.

27
00:01:39,680 --> 00:01:44,840
We have the four unique job types from our jobs intern full time, part time temporary.

28
00:01:45,080 --> 00:01:47,750
If I expand organizations that is working as well.

29
00:01:47,990 --> 00:01:53,450
Both of these components are talking to individual getters from the beauty store that are talking to

30
00:01:53,450 --> 00:02:00,980
the jobs slice of the view store state to get these unique jobs or job types or organizations in a set

31
00:02:01,160 --> 00:02:03,380
that each respective component is iterating over.

32
00:02:03,590 --> 00:02:08,270
So while these components are very similar, the kind of underlying plumbing and what they're relying

33
00:02:08,270 --> 00:02:09,530
on is slightly different.

34
00:02:09,890 --> 00:02:10,280
All right.

35
00:02:10,550 --> 00:02:15,770
So our logic is still wired up to filter jobs from the organization selection.

36
00:02:15,770 --> 00:02:19,550
Nothing is actually going to happen when we select any of these options.

37
00:02:19,730 --> 00:02:26,090
However, we are going to be updating the View Store and I can prove that to you by opening up our UCS

38
00:02:26,480 --> 00:02:31,220
dev tools to right here are going to go to view and then I'm going to wait until this loads right here

39
00:02:31,220 --> 00:02:36,410
I'm in view X and here's root so we can see we have our new selected job types, right.

40
00:02:36,410 --> 00:02:41,960
And when I select a job type like part time, remember the component is going to handle the local data

41
00:02:42,080 --> 00:02:47,660
using a V model, but it's also going to invoke that select job type, I believe it's called method,

42
00:02:47,840 --> 00:02:51,890
which is going to commit the mutation that's going to send that array of strings to view X.

43
00:02:52,130 --> 00:02:53,690
So here you can see it's being saved.

44
00:02:53,690 --> 00:02:54,560
Here's part time.

45
00:02:54,710 --> 00:02:59,900
If I add temporary, you can see the array is overwritten again, then we'll add full time, then we'll

46
00:02:59,900 --> 00:03:00,740
remove part time.

47
00:03:00,890 --> 00:03:05,150
You can see each time I do that we are modifying the array.

48
00:03:05,330 --> 00:03:11,450
So we basically have everything we need in our view store in order to be able to filter our jobs using

49
00:03:11,450 --> 00:03:13,760
both criteria, organizations and job types.

50
00:03:14,000 --> 00:03:16,130
That's what we eventually are going to get to.

51
00:03:16,550 --> 00:03:21,440
And then very next lesson though, I do want to test just this functionality by itself by having this

52
00:03:21,440 --> 00:03:23,270
filter the jobs on the right hand side.

53
00:03:23,450 --> 00:03:25,880
So that's what we're going to wire up in the very next lesson.
