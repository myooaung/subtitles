WEBVTT
1
00:00:00.180 --> 00:00:01.080
All right.

2
00:00:01.080 --> 00:00:06.150
So the next thing I'd like to do is to start styling our input elements that we're going to place within

3
00:00:06.150 --> 00:00:06.660
our form.

4
00:00:06.900 --> 00:00:10.260
So this is going to be a purely CSR based lesson.

5
00:00:10.410 --> 00:00:14.070
And I am going to introduce some new Tailwind classes along the way.

6
00:00:14.340 --> 00:00:20.400
As a reminder, I am unfortunately not access expert, so I apologize if we fly through some of these

7
00:00:20.400 --> 00:00:20.880
classes.

8
00:00:21.150 --> 00:00:26.670
As a reminder, what I did is look at the existing Google Careers website, find the styles through

9
00:00:26.670 --> 00:00:30.150
the elements inspector and translate them to Tailwind.

10
00:00:30.150 --> 00:00:32.820
So this is by no means a perfect CSR implementation.

11
00:00:33.000 --> 00:00:34.650
It's as good as I can do.

12
00:00:34.890 --> 00:00:39.540
And if you're curious about any of these details, I encourage you to look at the Tailwind documentation

13
00:00:39.690 --> 00:00:43.830
to find what these classes add and then do research on the equivalence.

14
00:00:43.830 --> 00:00:44.610
Yes, that's properties.

15
00:00:44.610 --> 00:00:48.450
I continue to grow in a similar direction every day of my coding career.

16
00:00:48.810 --> 00:00:54.780
So with that right below our awesome icon, we're going to create a DIV and this data is going to be

17
00:00:54.780 --> 00:00:58.530
a container that will store our three elements that I'm going to place in here.

18
00:00:58.770 --> 00:01:04.050
And we're going to have a input field for the role and input field for the location.

19
00:01:04.050 --> 00:01:09.240
And in between those two, I'm going to actually place a span element and that span is going to have

20
00:01:09.240 --> 00:01:11.520
the word N written inside it.

21
00:01:11.760 --> 00:01:18.120
The idea on the official website is that you have a role in a location and that inbox separates those

22
00:01:18.120 --> 00:01:18.870
two input fields.

23
00:01:19.260 --> 00:01:25.680
So on this top level div, I'll assign a couple of classes, I'll make it a Flexbox, and then I will

24
00:01:25.680 --> 00:01:28.170
assign a new class called Flex No Wrap.

25
00:01:28.170 --> 00:01:32.730
That's going to ensure that the flex children of this Flexbox do not wrap on onto new lines.

26
00:01:32.880 --> 00:01:34.260
So they're all going to stay on one line.

27
00:01:34.620 --> 00:01:36.690
Then I'll add the flex one class.

28
00:01:36.690 --> 00:01:39.570
This allows this dev to grow or shrink as needed.

29
00:01:39.810 --> 00:01:45.360
So I believe this is for the flex of the parent, which is the form and this div class as or this dev

30
00:01:45.420 --> 00:01:48.840
element as a child of the upper level form element.

31
00:01:49.230 --> 00:01:54.750
Then I want to assign this div a height of 100% of its parent with the h full class.

32
00:01:55.200 --> 00:02:00.510
Then what I'm going to do is add a class called text base that is going to make the font size 16 pixels,

33
00:02:00.720 --> 00:02:04.800
so sort of the standard average font for anything throughout the app.

34
00:02:05.610 --> 00:02:09.090
And then finally, I'm going to make the font a little bit lighter.

35
00:02:09.270 --> 00:02:13.890
So I'll apply the font like class, which will apply a font weight of 300.

36
00:02:13.890 --> 00:02:16.740
So a little bit lighter, less bold, if you will.

37
00:02:16.920 --> 00:02:22.770
And we do have this font weight available because when we imported our Google fonts earlier in the course,

38
00:02:22.920 --> 00:02:27.120
we included several variants of them, including a bold variant and a light variant.

39
00:02:27.540 --> 00:02:27.900
Okay.

40
00:02:28.140 --> 00:02:33.000
So in here, as I mentioned, we're going to have our two input elements and I will create two divs

41
00:02:33.000 --> 00:02:33.690
to store them.

42
00:02:33.690 --> 00:02:36.510
So here's my first div, here is my second div.

43
00:02:36.720 --> 00:02:39.810
And then as I mentioned in between those two Divs, we're going to have a span.

44
00:02:40.780 --> 00:02:40.990
All right.

45
00:02:40.990 --> 00:02:43.510
And that span is going to have the keyword in inside it.

46
00:02:43.930 --> 00:02:44.230
Okay.

47
00:02:44.260 --> 00:02:46.510
So let's start with our first day right here at the very top.

48
00:02:46.510 --> 00:02:47.890
We're going to add some classes here as well.

49
00:02:48.370 --> 00:02:54.070
We're going to apply a position of relative to this div by giving it the class name relative from Tailwind.

50
00:02:54.310 --> 00:02:59.470
And the reason we need this div to be positioned relatively is because inside it we're eventually going

51
00:02:59.470 --> 00:03:05.650
to have a label element and that label element needs to be positioned absolutely relative to this div,

52
00:03:05.680 --> 00:03:11.110
we're going to actually maneuver that label to escape the confines of this div of this box.

53
00:03:11.350 --> 00:03:13.090
I'll show you that in just a few minutes.

54
00:03:13.480 --> 00:03:13.810
All right.

55
00:03:13.810 --> 00:03:15.730
This div will also be a Flexbox.

56
00:03:15.730 --> 00:03:20.260
And we're going to vertically center its flex children using the items center class.

57
00:03:21.580 --> 00:03:26.860
I'm also going to add flex one here so this component can grow or shrink as needed relative to its flex

58
00:03:26.860 --> 00:03:27.250
parent.

59
00:03:27.760 --> 00:03:31.960
And then I also want to apply the H4 class here to give it a height of 100%.

60
00:03:32.260 --> 00:03:35.380
And I want to add a little bit of padding, but only on the right side.

61
00:03:35.530 --> 00:03:40.030
So there is some separation between the div and the span.

62
00:03:40.600 --> 00:03:44.830
As far as the text that's going to be inside the div, I want some distance so it doesn't start getting

63
00:03:44.860 --> 00:03:46.690
too close to the span with the end keyword.

64
00:03:46.960 --> 00:03:52.000
So I'll add padding on the right and I'm going to have the class of PR three, which is 12 pixels of

65
00:03:52.000 --> 00:03:53.110
padding on the right hand side.

66
00:03:53.590 --> 00:03:53.890
All right.

67
00:03:54.730 --> 00:03:57.100
Inside this div, we're going to have two elements.

68
00:03:57.100 --> 00:04:02.410
The first is going to be a label for our input, and that label is going to have the text that describes

69
00:04:02.410 --> 00:04:04.120
what the user should enter and the input.

70
00:04:04.330 --> 00:04:06.790
And that text is going to be role.

71
00:04:07.210 --> 00:04:12.160
So in other words, the role that the user is searching for and let's go ahead and apply our classes

72
00:04:12.160 --> 00:04:13.210
to the label right here.

73
00:04:13.420 --> 00:04:17.020
This label is going to be positioned absolutely relative to its parent.

74
00:04:17.020 --> 00:04:22.000
So I'm going to apply a class of absolute and then I need to provide some clarifications on where exactly

75
00:04:22.000 --> 00:04:24.850
I want to place this label compared to its parent div.

76
00:04:25.210 --> 00:04:31.360
So I want to start by adding a class of left zero that applies the left attribute or left property with

77
00:04:31.360 --> 00:04:32.560
a value of zero pixels.

78
00:04:32.710 --> 00:04:35.740
So this means the top left corner of the parent div.

79
00:04:36.040 --> 00:04:41.590
So we're going to start the top left corner and then I actually want to make it go above the top border

80
00:04:41.590 --> 00:04:46.390
or the top boundary of the data that I have that is enclosing this label.

81
00:04:46.720 --> 00:04:53.410
So there's a class called minus or negative top ten, and you can see what that is going to do is apply

82
00:04:53.410 --> 00:04:56.770
the top property with a value of -40 pixels.

83
00:04:57.040 --> 00:05:02.110
So what I'm going to do here is make this label escape the div that it is within and be rendered 40

84
00:05:02.110 --> 00:05:04.450
pixels above where that div is.

85
00:05:04.450 --> 00:05:09.250
Even though we're placing it inside the div from a semantic HTML perspective, it's going to be rendered

86
00:05:09.250 --> 00:05:12.130
40 pixels above the div that it is in.

87
00:05:12.520 --> 00:05:12.880
All right.

88
00:05:13.210 --> 00:05:16.090
So below the label, we can have our input field.

89
00:05:16.990 --> 00:05:18.820
It's going to be a soft closing input field.

90
00:05:19.240 --> 00:05:23.320
We're going to give it a type of text and we do need some placeholder text in here as well.

91
00:05:23.320 --> 00:05:24.550
So the user knows what to enter.

92
00:05:24.820 --> 00:05:30.400
And I'm going to give a placeholder of software engineer and then we're going to add some classes here

93
00:05:30.400 --> 00:05:30.820
as well.

94
00:05:31.360 --> 00:05:39.070
Will make this input occupy 100% of its parents with by adding the W for class making the width 100%.

95
00:05:39.340 --> 00:05:44.650
I do want the text here to be a little bit larger than the regular text base that we applied on the

96
00:05:44.650 --> 00:05:46.180
div two levels above.

97
00:05:46.540 --> 00:05:48.700
So I will add the text algae class.

98
00:05:49.860 --> 00:05:55.350
That is going to make the font size 18 pixels so a little bit larger compared to the other text nearby.

99
00:05:55.710 --> 00:05:58.230
Then I do not want my light font here.

100
00:05:58.230 --> 00:06:00.960
I want my regular font, so I'll do font normal here.

101
00:06:01.290 --> 00:06:05.490
So not bolded, not light, just a regular font weight of 400.

102
00:06:05.880 --> 00:06:07.800
And then one more thing I'd like to add here.

103
00:06:08.100 --> 00:06:13.800
Whenever we click into the input by default, what the browser does is it creates this outline around

104
00:06:13.800 --> 00:06:14.260
the box.

105
00:06:14.260 --> 00:06:17.880
That's this blue indicator box that tells the user where they should type.

106
00:06:17.880 --> 00:06:20.760
And it can actually be pretty jarring because it does.

107
00:06:20.780 --> 00:06:22.920
It kind of just looks awkward on the screen.

108
00:06:23.160 --> 00:06:28.740
But I only want to remove that outline when the user is actually focused in on the input when they click

109
00:06:28.740 --> 00:06:31.650
into the input box because that is the only time that it renders.

110
00:06:32.400 --> 00:06:37.560
So you may recall earlier in the course when we were building the action button, we were able to apply

111
00:06:37.560 --> 00:06:40.230
styles to the action button, but only on hover.

112
00:06:40.410 --> 00:06:45.910
And the way we did that is by pre fixing our class with hover colon and that indicated to to view and

113
00:06:45.910 --> 00:06:51.600
to tailwind to only apply the follow up class when we were in that hover state of the button.

114
00:06:51.960 --> 00:06:58.290
Well, similarly here, what I can do is apply the focus prefix, so focus colon and that will indicate

115
00:06:58.290 --> 00:07:03.120
to apply a given tailwind utility class, but only when the input is in a focus state.

116
00:07:03.570 --> 00:07:06.540
In other words, when the user has clicked into the actual input.

117
00:07:06.780 --> 00:07:09.120
And so the class I want here is outline none.

118
00:07:10.020 --> 00:07:15.480
And what that is going to do is remove that blue box that appears in Chrome and other browsers around

119
00:07:15.480 --> 00:07:15.900
the input.

120
00:07:15.900 --> 00:07:20.840
So the user is not going to be feeling awkward by this random box that pops up around or input.

121
00:07:21.330 --> 00:07:21.660
Okay.

122
00:07:21.930 --> 00:07:23.940
The next thing I'd like to do is to style our span.

123
00:07:24.980 --> 00:07:27.800
So right here, we're just going to write out a whole bunch of classes for this box.

124
00:07:28.070 --> 00:07:29.810
We're going to make it a flex box with flex.

125
00:07:30.080 --> 00:07:32.690
We're going to vertically center the content with Item Center.

126
00:07:33.200 --> 00:07:36.080
We're going to give it the full class to give it a 100% height.

127
00:07:36.410 --> 00:07:39.560
We're going to apply padding, but only on the left and right side.

128
00:07:39.560 --> 00:07:41.150
So the x axis.

129
00:07:41.420 --> 00:07:47.210
So I can do that with my classes p for padding x four axis here I want to do x three.

130
00:07:47.510 --> 00:07:51.710
That's going to apply 12 pixels of padding on the left, 12 pixels of padding on the right.

131
00:07:51.710 --> 00:07:54.440
That's just going to give some space for my n keyword.

132
00:07:54.890 --> 00:08:00.320
Then I'd like to apply a border, but only on the left side and the right side of this box, because

133
00:08:00.320 --> 00:08:03.350
the top is just going to blend in naturally with the form container.

134
00:08:03.710 --> 00:08:09.590
So in order to apply a border on only the left side, I can do a class called Border L that applies

135
00:08:09.590 --> 00:08:14.540
one pixel of a border or a one pixel border on the left hand side of the span.

136
00:08:14.900 --> 00:08:18.840
And then for the right border, I'll do a similar class of border dash.

137
00:08:18.860 --> 00:08:21.890
Ah, that is short for border right now.

138
00:08:21.890 --> 00:08:27.680
As far as the actual border color, we're going to use one of our new colors, which is brand gray three.

139
00:08:28.070 --> 00:08:28.430
Okay.

140
00:08:28.730 --> 00:08:33.800
So now we've taken care of the border and the text and the final class that I'd like to do here is going

141
00:08:33.800 --> 00:08:35.570
to specify the background color.

142
00:08:35.900 --> 00:08:39.350
So for background, we can do the big family of classes.

143
00:08:39.350 --> 00:08:43.820
And here I want to use another new color that we added, which is brand gray, too.

144
00:08:44.240 --> 00:08:49.880
So if I search for brand gray, too, it's going to be big brand gray, too, for our background.

145
00:08:49.880 --> 00:08:50.660
Let's save that.

146
00:08:51.500 --> 00:08:53.420
And we're going to have Predator do its magic.

147
00:08:53.630 --> 00:08:56.090
And so here is our first input.

148
00:08:56.090 --> 00:08:59.120
Here is our span, which is a little box that says the word in.

149
00:08:59.270 --> 00:09:04.310
And then here's where we can put our second box for our location.

150
00:09:04.610 --> 00:09:08.210
So right here, as always, we're going to apply some classes and they're going to be very similar to

151
00:09:08.210 --> 00:09:09.170
our div above.

152
00:09:09.530 --> 00:09:14.930
So we're going to make the position of this div relative with the relative class, then a flex class

153
00:09:14.930 --> 00:09:21.230
to make it a flexbox vertically align the content with item center apply flex one to make it grow and

154
00:09:21.230 --> 00:09:22.580
shrink relative to its parent.

155
00:09:22.580 --> 00:09:25.010
So as its parent expands or shrinks, this one will shrink as well.

156
00:09:25.520 --> 00:09:30.740
Then we want to apply a 100% height using the full class and then a little bit of padding.

157
00:09:30.890 --> 00:09:36.320
But unlike the previous div, I want to make this padding on the left hand side to again create some

158
00:09:36.320 --> 00:09:38.210
separation for the text inside this div.

159
00:09:38.390 --> 00:09:39.740
But relative to this span.

160
00:09:39.950 --> 00:09:45.620
So because this dev is to the right of the span, I want to create some padding on the left in comparison

161
00:09:45.620 --> 00:09:51.110
in this div right here, we created some padding on the right again to create the respective separation

162
00:09:51.290 --> 00:09:55.250
for the text within our div relative to the span that is in between them.

163
00:09:56.090 --> 00:09:56.450
Okay.

164
00:09:56.810 --> 00:10:01.310
So then we can actually copy the label and the input from above because we're going to have a very similar

165
00:10:01.310 --> 00:10:02.210
setup down below.

166
00:10:02.480 --> 00:10:05.810
So let's copy our label an input and paste it inside this div right here.

167
00:10:07.350 --> 00:10:07.800
All right.

168
00:10:08.190 --> 00:10:13.650
So we are still going to keep this absolute class in order to move this label a little bit outside the

169
00:10:13.650 --> 00:10:15.060
confines of our div.

170
00:10:15.240 --> 00:10:15.690
And this.

171
00:10:16.080 --> 00:10:16.920
Minus ten.

172
00:10:17.280 --> 00:10:22.080
Minus top ten class is going to make it 40 pixels above the confines of the div.

173
00:10:22.350 --> 00:10:25.560
Except here, of course, we're not going to ask the user for their role.

174
00:10:25.770 --> 00:10:27.450
We're going to ask them for their location.

175
00:10:27.720 --> 00:10:32.560
And what they actually have on the Google site is the question where perfect.

176
00:10:33.060 --> 00:10:35.090
So here we're going to have another input field.

177
00:10:35.100 --> 00:10:39.630
It's type will still be text, but for the placeholder, we actually have to put some sample city.

178
00:10:39.960 --> 00:10:41.400
So let's put Los Angeles.

179
00:10:42.980 --> 00:10:44.950
And we're going to keep the remainder of the classes here.

180
00:10:44.960 --> 00:10:49.460
So 100% with a 16 point font that is regular font weight.

181
00:10:49.670 --> 00:10:54.740
And we're going to get rid of that blue outline that appears when the user focuses in on the element.

182
00:10:55.130 --> 00:10:55.400
Okay.

183
00:10:55.400 --> 00:11:00.030
So that is going to create our beginner inputs.

184
00:11:00.050 --> 00:11:02.360
Let's take a look at what that looks like right now in the browser.

185
00:11:03.020 --> 00:11:03.410
All right.

186
00:11:03.410 --> 00:11:04.210
So looking good.

187
00:11:04.220 --> 00:11:08.180
So we have this text appearing outside the confines of the div.

188
00:11:08.390 --> 00:11:12.020
We have our icon, we have this form input element where we can type.

189
00:11:12.350 --> 00:11:17.810
We have this span with the text in and then we have the city ID.

190
00:11:17.810 --> 00:11:23.510
But the one thing that's missing from this, of course, is a button right here on the right hand side

191
00:11:23.510 --> 00:11:26.900
that's going to have the words search inside it.

192
00:11:27.140 --> 00:11:31.550
And if we push this button in here, it's also going to push this content a little bit to the left and

193
00:11:31.550 --> 00:11:32.810
make it look a little bit cleaner.

194
00:11:33.200 --> 00:11:39.770
So let's head back to our component and we're going to use our familiar reusable action button component.

195
00:11:40.190 --> 00:11:43.380
So let's go ahead and import it down below here in the script section.

196
00:11:43.400 --> 00:11:50.690
I'm going to import my action button component from our top level source directory components action

197
00:11:50.690 --> 00:11:51.410
button that view.

198
00:11:51.710 --> 00:11:54.400
And then of course, I simply cannot use it by itself.

199
00:11:54.410 --> 00:11:58.130
I need to register it as a local component in job search form.

200
00:11:58.520 --> 00:12:02.780
So right here I'll add my components key and I'll add my jobs or not.

201
00:12:02.780 --> 00:12:03.500
My job search form.

202
00:12:03.620 --> 00:12:04.970
My action button component.

203
00:12:06.130 --> 00:12:06.520
Perfect.

204
00:12:06.910 --> 00:12:12.550
That allows me to use my action button component anywhere in my template and where I want to render

205
00:12:12.550 --> 00:12:16.180
it is right before the conclusion of the form.

206
00:12:16.480 --> 00:12:21.430
So the way it's going to work is if I go up here and I collapse this div, we're going to have our font

207
00:12:21.430 --> 00:12:22.240
awesome icon.

208
00:12:22.420 --> 00:12:25.540
We're going to have this div that's going to store our actual input fields.

209
00:12:25.660 --> 00:12:29.170
And then after that div, we're going to render our action button component.

210
00:12:29.560 --> 00:12:31.600
So here I can do action dash button.

211
00:12:31.870 --> 00:12:33.820
It's going to be a self-closing component.

212
00:12:34.570 --> 00:12:40.660
Now, as a reminder, the action button that we designed takes two props and they are text and type.

213
00:12:41.020 --> 00:12:44.770
Our text prop specifies the text that's going to appear on this button.

214
00:12:45.190 --> 00:12:51.400
So right here I can write text equals and let's produce the string here of search.

215
00:12:51.490 --> 00:12:53.530
So our button will have the text search.

216
00:12:53.800 --> 00:12:59.650
As a reminder, if we are providing a prop, a basic string, we do not need to bind to it using the

217
00:12:59.650 --> 00:13:00.640
v bind syntax.

218
00:13:00.850 --> 00:13:06.610
So we do not need the colon here, just the prop name and an equal sign and the value is sufficient,

219
00:13:06.790 --> 00:13:08.590
just like any HTML attribute.

220
00:13:08.860 --> 00:13:11.830
And the same rules are going to apply for the type prop.

221
00:13:12.700 --> 00:13:18.340
So as a reminder, the type prop accepts one of two strings, either primary or secondary, depending

222
00:13:18.340 --> 00:13:22.450
on the style that we want, and we want the secondary button style.

223
00:13:22.960 --> 00:13:27.850
Finally, I'd like to apply one class here, and this is just to ensure that our button is going to

224
00:13:27.850 --> 00:13:31.660
be rounded because our outer form is rounded as well.

225
00:13:31.870 --> 00:13:40.060
So I do not want to have the button be a rectangle within our form because because that will prove a

226
00:13:40.060 --> 00:13:41.230
little bit jarring for the user.

227
00:13:41.590 --> 00:13:46.330
So what I'm going to do here is provide a class very similar to the one we have here.

228
00:13:46.600 --> 00:13:52.360
But instead of rounded three Excel, which applies a rounded border around the entire element.

229
00:13:52.570 --> 00:13:57.490
What I'd like to do is just create this rounded effect on the right side of my action band, because

230
00:13:57.490 --> 00:14:01.630
that is where the action button is going to flow into my form, which is rounded.

231
00:14:01.870 --> 00:14:07.120
So I'm going to make the right side of my action button rounded by doing, rounded are or rounded.

232
00:14:07.120 --> 00:14:07.570
Right.

233
00:14:07.930 --> 00:14:10.870
And I'm going to set it similarly equal to three Excel.

234
00:14:12.000 --> 00:14:12.360
All right.

235
00:14:12.750 --> 00:14:16.080
So if I go back into my browser, let's see what we have here.

236
00:14:17.040 --> 00:14:19.110
So this is looking pretty decent.

237
00:14:19.110 --> 00:14:23.160
We now have our role, we have our location, we have our two input fields.

238
00:14:23.310 --> 00:14:26.820
And if I hover my mouse over search, let's see what happens here.

239
00:14:27.240 --> 00:14:29.040
Okay, so this is not perfect.

240
00:14:29.040 --> 00:14:33.120
Notice that we have a little bit of the kind of square effect around it.

241
00:14:33.120 --> 00:14:37.710
We're not actually getting it to blend in with the curved corner of our form.

242
00:14:38.010 --> 00:14:41.280
So in order to fix this, let's go back to our action button component.

243
00:14:41.610 --> 00:14:43.470
So here I'm going to open up that action button.

244
00:14:44.850 --> 00:14:49.620
And what I'm actually going to do here is you'll notice we're always applying the tailwind rounded class

245
00:14:49.620 --> 00:14:51.570
right here, no matter which button we have.

246
00:14:51.870 --> 00:14:57.210
What I'm actually going to do is I'm going to move this rounded class from our general button styles

247
00:14:57.210 --> 00:15:00.780
to just our primary class for now.

248
00:15:00.780 --> 00:15:03.960
So only when the button is a primary button will we have it rounded.

249
00:15:04.170 --> 00:15:07.530
Otherwise the secondary class will not apply a rounded by default.

250
00:15:07.740 --> 00:15:11.220
So we're not going to have that rounded style when we start out.

251
00:15:11.220 --> 00:15:16.740
So in other words, when we transition back to the browser, our secondary button will not start off

252
00:15:16.740 --> 00:15:17.280
as rounded.

253
00:15:17.490 --> 00:15:21.330
So if I click in here, that gets us somewhere closer to where we want.

254
00:15:21.510 --> 00:15:27.540
I notice it's still not perfect because there is a little bit of kind of white spacing between the edges

255
00:15:27.540 --> 00:15:29.520
of the form and the start of the search button.

256
00:15:29.700 --> 00:15:30.990
But this is good enough for me.

257
00:15:31.000 --> 00:15:35.670
That's close enough and it kind of looks presentable enough to me for me to continue.

258
00:15:36.000 --> 00:15:36.300
All right.

259
00:15:36.300 --> 00:15:38.130
So that's all there is to cover in this lesson.

260
00:15:38.130 --> 00:15:42.690
We created these two input elements right here where we can enter the role and the location.

261
00:15:42.840 --> 00:15:47.040
And we created the search button that is going to trigger the submission of the form and eventually

262
00:15:47.040 --> 00:15:51.420
our navigation to the jobs page where the user will see the results.

263
00:15:51.720 --> 00:15:53.280
So I will see you in the next lesson.
