WEBVTT
1
00:00:00.270 --> 00:00:01.230
All right.

2
00:00:01.230 --> 00:00:06.750
So now let's go ahead and use our helper utility function in our headline component.

3
00:00:07.050 --> 00:00:11.070
So right here below my script tag, I'm going to import that helper function.

4
00:00:11.880 --> 00:00:16.410
It is called Next Element in list because it finds the next element in a list.

5
00:00:16.740 --> 00:00:22.590
And of course, I can find it from my top level source directory, which is my add sign by going into

6
00:00:22.590 --> 00:00:26.970
the utils directory and then finding the next element in list jass file.

7
00:00:27.120 --> 00:00:27.480
All right.

8
00:00:27.480 --> 00:00:27.930
Perfect.

9
00:00:28.200 --> 00:00:32.130
And while we're here, we no longer need this comment that I added, so I'm going to remove that right

10
00:00:32.130 --> 00:00:32.400
here.

11
00:00:32.760 --> 00:00:33.120
Okay.

12
00:00:33.120 --> 00:00:37.350
So it's currently being unused, but if I scroll down, here is where I want to use it.

13
00:00:37.590 --> 00:00:44.130
Now, of course, I want to keep my actions list or my actions array because that is the actual foundation

14
00:00:44.130 --> 00:00:45.750
of the four strings that I want to provide.

15
00:00:46.080 --> 00:00:49.860
But here is where I can say I can invoke my function.

16
00:00:49.860 --> 00:00:56.040
In fact, I can do that all on a single line because I know that the return value of my function is

17
00:00:56.040 --> 00:00:59.630
what I want to assign back to my action data property.

18
00:00:59.640 --> 00:01:04.890
Remember the return value of my next element in list function is going to be in the next value in the

19
00:01:04.890 --> 00:01:08.310
array, which is the string that I want to assign to the action property.

20
00:01:08.640 --> 00:01:08.900
Okay.

21
00:01:08.920 --> 00:01:14.070
So the two parameters that next element to the list expects, of course, is the list and the current

22
00:01:14.070 --> 00:01:14.430
value.

23
00:01:14.730 --> 00:01:20.670
My list is represented by my actions array on the line above, and my current value is represented by

24
00:01:20.700 --> 00:01:25.910
the current value of the action data property which we can access using the this keyword.

25
00:01:25.920 --> 00:01:28.800
So this dot action perfect.

26
00:01:29.070 --> 00:01:30.150
So I'm going to save this.

27
00:01:30.150 --> 00:01:35.250
And you can see the implementation has gotten a lot simpler, which in turn makes the headline component

28
00:01:35.250 --> 00:01:36.270
easier to test.

29
00:01:36.300 --> 00:01:41.250
We're going to get there in a few lessons, but obviously a lot cleaner and we delegate the responsibility

30
00:01:41.250 --> 00:01:46.410
of the array logic of figuring out the next element in the list to a separate function somewhere in

31
00:01:46.410 --> 00:01:50.200
our code base that we can now also reuse across different components.

32
00:01:50.220 --> 00:01:52.020
So that is the advantage of this design.

33
00:01:52.350 --> 00:01:55.560
Let me just head back to my browser to ensure everything is still functional.

34
00:01:55.560 --> 00:01:59.190
In fact, I'm going to refresh the page just to make sure nothing is broken.

35
00:01:59.640 --> 00:02:02.550
All right, so there we have our header text.

36
00:02:02.550 --> 00:02:10.340
And just like we had originally, we see the action verb switching up every 3 seconds.

37
00:02:10.350 --> 00:02:17.130
And if I go back to my view devtools right here, we should see the action being changed every couple

38
00:02:17.130 --> 00:02:17.550
of seconds.

39
00:02:17.550 --> 00:02:18.060
There it is.

40
00:02:18.390 --> 00:02:24.000
And you can see as well, I didn't show you this earlier, but in our computed properties, the new

41
00:02:24.000 --> 00:02:27.330
property is being generated every 3 seconds with a value of true.

42
00:02:27.420 --> 00:02:29.400
And that of course sets the extras.

43
00:02:29.610 --> 00:02:34.110
So as always, I know I've mentioned this lots of times before, but The View Dev Tools is a great place

44
00:02:34.110 --> 00:02:39.000
to double check your work and confirm what a component state looks like at any given moment in time

45
00:02:39.150 --> 00:02:44.170
the data, the computed, the props, etc. So everything here is working exactly as we want it to.

46
00:02:44.370 --> 00:02:46.890
And we've made the component easier to understand.

47
00:02:46.920 --> 00:02:49.220
So all in all, a great victory.

48
00:02:49.230 --> 00:02:52.650
And of course, we will continue building more features in the very next lesson.
