WEBVTT
1
00:00:00.530 --> 00:00:01.520
All right.

2
00:00:01.520 --> 00:00:07.580
So in this lesson, we're going to finally explore the index that J.S. filed in our router folder,

3
00:00:07.580 --> 00:00:10.700
and we're going to configure our view router from scratch.

4
00:00:11.030 --> 00:00:13.850
Before we get there, though, there's one more thing I'd like to do.

5
00:00:14.090 --> 00:00:20.300
As you know by now, we have a views directory and it holds our top level views, which are just components

6
00:00:20.300 --> 00:00:22.460
that represent the pages in our website.

7
00:00:22.760 --> 00:00:24.740
And we are going to have a home view.

8
00:00:24.950 --> 00:00:28.490
But this about view that was generated for us is unnecessary.

9
00:00:28.490 --> 00:00:29.420
We don't need this.

10
00:00:29.660 --> 00:00:36.110
So what I propose we do is rename it to be job results view and this will represent the job results

11
00:00:36.110 --> 00:00:37.160
page eventually.

12
00:00:37.430 --> 00:00:44.270
So right here I'm just going to click here and select rename and I'm going to change this to job results

13
00:00:44.270 --> 00:00:50.150
view and I can press okay for Vidor to make the correct changes if I can find them.

14
00:00:50.390 --> 00:00:56.720
And right here, of course, since we changed our file name, let's change the name property to be job

15
00:00:56.720 --> 00:00:58.010
results view as well.

16
00:00:58.460 --> 00:01:04.400
And then finally right here where we're outputting a header, let's just put job results view so we

17
00:01:04.400 --> 00:01:05.210
don't get confused.

18
00:01:05.630 --> 00:01:06.080
Okay.

19
00:01:06.290 --> 00:01:12.950
So with that, we are good to edit our router index file, so go ahead and open it up and you will have

20
00:01:12.950 --> 00:01:17.120
some content here that was automatically placed in here by view.

21
00:01:17.120 --> 00:01:23.570
Seeley But what I would like to do is to remove this content entirely so we can write this file from

22
00:01:23.570 --> 00:01:26.360
scratch and understand the pieces of it individually.

23
00:01:26.660 --> 00:01:27.650
Let's do that right now.

24
00:01:27.650 --> 00:01:31.820
I'm just going to select everything and delete it and we have an empty file.

25
00:01:32.150 --> 00:01:34.370
So let's configure our view router.

26
00:01:34.370 --> 00:01:40.730
Let's configure the logic that's going to allow view to render a different view component right here,

27
00:01:40.820 --> 00:01:46.700
a different view on a given route on a given u URL or path on the website.

28
00:01:47.120 --> 00:01:52.640
So the first thing we need to do is to import two functions from the view router, NPM library.

29
00:01:52.880 --> 00:01:58.310
The first one is going to be create router and that actually mirrors the name of Create App, which

30
00:01:58.310 --> 00:02:02.270
we imported from view in our main JS file when we bootstrap the app up.

31
00:02:02.570 --> 00:02:04.730
So we're going to use this function to create a view router.

32
00:02:05.090 --> 00:02:12.350
And then a second function that we need here is create web hash history like so.

33
00:02:12.560 --> 00:02:14.870
And that is going to come from view router.

34
00:02:16.280 --> 00:02:19.600
The next thing that I want to do is to create the router.

35
00:02:19.640 --> 00:02:27.020
So right here I'll create a constant called router and I will assign it to the return value of the invocation

36
00:02:27.020 --> 00:02:29.080
of the create router function.

37
00:02:29.090 --> 00:02:29.870
Pretty logical.

38
00:02:30.260 --> 00:02:32.230
So we're going to invoke that function.

39
00:02:32.240 --> 00:02:38.060
And that function takes an options argument, which is just a plain JavaScript object that configures

40
00:02:38.060 --> 00:02:40.340
the settings for how the router works.

41
00:02:40.550 --> 00:02:43.340
And there's only two properties that we're going to need to add here.

42
00:02:43.460 --> 00:02:45.910
As always, these properties are not up to us.

43
00:02:45.920 --> 00:02:49.910
These are required configuration settings for the router to know how to work.

44
00:02:50.180 --> 00:02:56.000
The first property is called history and that is going to determine how the browser keeps track of user

45
00:02:56.000 --> 00:02:56.570
history.

46
00:02:56.810 --> 00:03:01.580
And when I use the word history, what I'm referring to is keeping track of what routes the user has

47
00:03:01.580 --> 00:03:02.150
been on.

48
00:03:02.360 --> 00:03:07.640
And the reason that's important is when the user presses the back button in the browser or their forward

49
00:03:07.640 --> 00:03:12.410
button, we need something that keeps track of where they've been so that we can navigate them backwards

50
00:03:12.410 --> 00:03:13.160
or forwards.

51
00:03:13.340 --> 00:03:18.800
And luckily, this is a very simple value to assign here and something we only have to do once here.

52
00:03:18.830 --> 00:03:24.410
What we can do is invoke the create web hash history function, which I imported as well.

53
00:03:24.710 --> 00:03:25.970
Just invoke it right here.

54
00:03:26.060 --> 00:03:31.040
And this will set up the history functionality for the router to keep track of the user's navigation

55
00:03:31.040 --> 00:03:31.940
and where they've been.

56
00:03:32.630 --> 00:03:33.530
It's as simple as that.

57
00:03:33.540 --> 00:03:34.940
We never have to worry about it again.

58
00:03:35.390 --> 00:03:41.990
The next property that I'd like to assign is called Routes, and this is going to be an array of routes.

59
00:03:42.740 --> 00:03:43.610
What is a route?

60
00:03:43.880 --> 00:03:50.090
A route is a JavaScript object that's going to specify the path, meaning the URL, and then the component

61
00:03:50.090 --> 00:03:53.540
to render when the user has navigated to that path.

62
00:03:54.050 --> 00:03:58.640
So because this is going to be an array, we can totally do it in line like so.

63
00:03:58.790 --> 00:04:03.650
But to keep things a little bit simpler, what I propose we do is to create a concept called routes

64
00:04:03.650 --> 00:04:10.940
right here, set an equal to an array and then just use S6 in order to populate the value here.

65
00:04:10.970 --> 00:04:12.910
So as a reminder, this is valid.

66
00:04:12.920 --> 00:04:13.940
Yes, syntax.

67
00:04:13.940 --> 00:04:17.480
This is a shortcut for manually writing routes, colon routes.

68
00:04:17.660 --> 00:04:22.100
But whenever you have the same property name and value, you can consolidate it like so.

69
00:04:22.280 --> 00:04:25.970
So the routes property will reference a value of a routes array.

70
00:04:26.630 --> 00:04:33.030
So as I mentioned, the array is going to consist of objects and each object represents one single route.

71
00:04:33.050 --> 00:04:38.870
So one mapping between a URL or a path and the corresponding view component to render.

72
00:04:39.020 --> 00:04:43.640
And that component, of course, is going to be one of these views, because these views represent the

73
00:04:43.640 --> 00:04:45.590
top level page components.

74
00:04:45.920 --> 00:04:51.230
So let's import both of our views, the home view and the job results view into this file.

75
00:04:51.500 --> 00:04:56.740
So right here, I'll begin with our home view and that is going to come from the source directory.

76
00:04:56.750 --> 00:05:00.350
And now we do not want to go into components, we want to go into views.

77
00:05:00.650 --> 00:05:04.190
And in here we're going to have our home view dot view component.

78
00:05:04.760 --> 00:05:07.610
And then we also want to import our job results view.

79
00:05:07.940 --> 00:05:09.920
This is going to be our second page of the app.

80
00:05:10.400 --> 00:05:15.170
And so it's going to come from the source directory views and job results view.

81
00:05:16.760 --> 00:05:17.150
All right.

82
00:05:17.540 --> 00:05:19.520
And the extension at the end is optional.

83
00:05:19.520 --> 00:05:20.540
I'm just including it here.

84
00:05:20.930 --> 00:05:21.260
Just.

85
00:05:21.280 --> 00:05:21.920
Just because.

86
00:05:21.920 --> 00:05:22.670
Personal brands.

87
00:05:23.030 --> 00:05:28.610
Okay, so we have two views, which means we're going to need two routes, right, to two different

88
00:05:28.970 --> 00:05:32.870
URLs and one is going to render home view and one is going to render job results field.

89
00:05:33.170 --> 00:05:37.490
So in here, let's break up this array and let's set up my first configuration object.

90
00:05:37.700 --> 00:05:44.090
And for each object, I'm going to provide three properties and they are path, name and component.

91
00:05:44.360 --> 00:05:45.470
Let's begin with Path.

92
00:05:45.920 --> 00:05:50.870
So this is the URL path at which the component should render.

93
00:05:51.140 --> 00:05:54.860
So for my home view, I want that to render at the root root.

94
00:05:55.040 --> 00:05:59.720
And when I mean or when I say the root root, what I mean is the home page, the slash root.

95
00:05:59.840 --> 00:06:05.990
When you go to your browser, when you go to localhost, 80, 80, in our case, or in any typical website,

96
00:06:05.990 --> 00:06:12.290
when you go to that website dot com, the home page, the root page is the kind of standard starting

97
00:06:12.290 --> 00:06:12.620
root.

98
00:06:12.830 --> 00:06:15.860
And the way we indicate a root root is with a slash.

99
00:06:16.130 --> 00:06:20.630
So what this basically means from you's perspective is take the websites such as localhost, 80, 80,

100
00:06:20.810 --> 00:06:23.210
and then add slash, which is the home root.

101
00:06:23.210 --> 00:06:24.740
This is the component that we're going to render.

102
00:06:25.250 --> 00:06:25.580
All right.

103
00:06:25.580 --> 00:06:29.210
So at that path of the root, root, what component do we want to render?

104
00:06:29.540 --> 00:06:34.730
Well, we provide a component property, and then we simply give it the component that we want to render.

105
00:06:34.940 --> 00:06:39.830
Of course, at the root root we want to render our home page, which is represented by the home view

106
00:06:39.830 --> 00:06:40.430
component.

107
00:06:41.000 --> 00:06:41.390
Okay.

108
00:06:41.690 --> 00:06:43.820
There's one more property that I'd like to add here.

109
00:06:43.820 --> 00:06:45.050
I'm going to do it here in the middle.

110
00:06:45.320 --> 00:06:52.340
And it is name and all that name is is a unique identifier for this root.

111
00:06:52.580 --> 00:06:57.170
So it's an arbitrary name that you can give this root and it's going to be beneficial because we'll

112
00:06:57.170 --> 00:07:00.890
be able to use this name throughout the app in order to navigate.

113
00:07:00.920 --> 00:07:06.020
So for example, when we wanted to take the user to the home view, instead of having to remember the

114
00:07:06.020 --> 00:07:11.300
path of the home view the slash, we can just remember the name that we assign here, which is up to

115
00:07:11.300 --> 00:07:14.870
us and just tell the router, Hey, go to this name, right?

116
00:07:15.080 --> 00:07:20.510
So for example, if I give this root a name of home later on, we'll explore how we can tell the router

117
00:07:20.510 --> 00:07:22.130
to go to the home root.

118
00:07:22.250 --> 00:07:25.910
And that way we don't have to remember the technical details of the actual path.

119
00:07:26.300 --> 00:07:26.600
Right.

120
00:07:26.840 --> 00:07:32.450
And it's also a little bit more adaptable to change, because if this path changes, for example, like,

121
00:07:32.540 --> 00:07:38.420
you know, become something like slash home, as long as we're referencing the home root name, anywhere

122
00:07:38.420 --> 00:07:44.300
in our code view will know that home now represents slash home and it will automatically navigate there

123
00:07:44.300 --> 00:07:44.780
instead.

124
00:07:44.960 --> 00:07:50.180
Not breaking our code compared to if we manually refer to slash pat the slash path.

125
00:07:50.330 --> 00:07:54.830
And if this changes, then all of a sudden everything will break because that path will no longer exist.

126
00:07:55.220 --> 00:07:59.750
So that's the advantage of using a name property to give a unique name to this root.

127
00:07:59.990 --> 00:08:01.760
So we have a root called home.

128
00:08:01.850 --> 00:08:07.160
It is at the slash or root root of a web page or website, and that will render the home the a component.

129
00:08:07.550 --> 00:08:12.890
So you can probably guess what we do next will set up another JavaScript object and we'll follow the

130
00:08:12.890 --> 00:08:13.930
exact same protocol.

131
00:08:13.940 --> 00:08:20.780
So we'll have a path property and for our job results page, let's make that available at slash jobs

132
00:08:20.870 --> 00:08:22.130
slash results.

133
00:08:22.310 --> 00:08:24.470
So slash jobs, slash results.

134
00:08:24.650 --> 00:08:26.750
This is totally a arbitrary preference.

135
00:08:26.750 --> 00:08:31.430
This is my pick because I think it's pretty logical, but you can make this whatever you want technically.

136
00:08:31.760 --> 00:08:34.700
So this is just the URL that the user will visit in the browser.

137
00:08:34.970 --> 00:08:41.270
So when the user visits localhost 80 slash jobs, slash results, what component do we want to render

138
00:08:41.270 --> 00:08:42.920
and what name do we want to give it?

139
00:08:43.250 --> 00:08:49.550
Let's give our component or rather the root, the name of job results and the component that we want

140
00:08:49.550 --> 00:08:53.310
to render at that root is going to be these job results view.

141
00:08:53.870 --> 00:08:59.300
So now we've used both of our imported views and as we add more views to the app, you guessed it,

142
00:08:59.300 --> 00:09:05.180
you just come back to this router index that GSC file and you add another object for that root.

143
00:09:05.450 --> 00:09:05.870
All right.

144
00:09:06.230 --> 00:09:10.160
And then, of course, we set up the actual router itself and we give it an array of roots.

145
00:09:10.400 --> 00:09:14.990
And then the only thing that's left to do in this file is, of course, to export default that router,

146
00:09:15.470 --> 00:09:22.040
because as a reminder, we are importing this router in main jobs and that's where everything should

147
00:09:22.040 --> 00:09:23.420
hopefully come full circle.

148
00:09:23.720 --> 00:09:28.190
So here we are importing that created view router from that index file.

149
00:09:28.250 --> 00:09:33.410
So we just wrote all of that configuration and then what we're doing is adding it to our view app by

150
00:09:33.410 --> 00:09:39.260
using the use method and providing that whole router object that we're exporting out of here.

151
00:09:39.530 --> 00:09:45.230
And that router object in its internals keeps track of the individual routes that the user can visit

152
00:09:45.230 --> 00:09:46.550
on our Web page.

153
00:09:47.330 --> 00:09:47.720
All right.

154
00:09:47.870 --> 00:09:49.640
So that's all there is to cover in this lesson.

155
00:09:49.640 --> 00:09:51.260
So I will see you in the next one.
