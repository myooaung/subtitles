1
00:00:00,330 --> 00:00:03,070
Welcome to the next section of the course.

2
00:00:03,090 --> 00:00:07,070
In this section, we're going to learn all about views, directives.

3
00:00:07,080 --> 00:00:09,210
We're going to define that term in just a moment.

4
00:00:09,510 --> 00:00:13,950
Before we get there, though, I want to do a quick reminder of what our user story is.

5
00:00:13,950 --> 00:00:15,630
What is it that we are working on?

6
00:00:15,840 --> 00:00:20,670
It's always important to tie back to what value we are delivering for the user.

7
00:00:20,970 --> 00:00:26,640
So our current user story is as a user, I'd like to navigate between the pages of the career site.

8
00:00:26,910 --> 00:00:32,010
So the next thing we're going to be building out on our main NAV is going to be the various links that

9
00:00:32,010 --> 00:00:35,520
allow the user to go to different pages on our website.

10
00:00:35,910 --> 00:00:36,240
All right.

11
00:00:36,600 --> 00:00:43,200
So let's begin let's imagine that I had a slice of data on my data object called u, r l.

12
00:00:43,260 --> 00:00:48,360
So I'm going to define a URL right here and I'm going to set it to the website that inspired this entire

13
00:00:48,360 --> 00:00:50,370
project, our Google Careers website.

14
00:00:50,640 --> 00:00:53,820
So I'm just going to type here a full URL https.

15
00:00:54,750 --> 00:00:58,830
Collins slash slash careers, Google dotcom.

16
00:00:59,340 --> 00:01:01,410
And here's the question that I have for you.

17
00:01:01,830 --> 00:01:04,290
You'll notice that we have this hyperlink right here.

18
00:01:04,290 --> 00:01:09,210
That's a tag with an RF attribute, which sets where this hyperlink goes.

19
00:01:09,570 --> 00:01:13,920
And my question is, how can we get this URL right here?

20
00:01:13,950 --> 00:01:22,080
How can we inject this value of careers down Google.com into this position or assign it to this attribute

21
00:01:22,080 --> 00:01:22,660
of ATRA?

22
00:01:23,040 --> 00:01:27,360
So let me show you a couple approaches that you might be tempted to do, which are not going to prove

23
00:01:27,390 --> 00:01:28,050
successful.

24
00:01:28,200 --> 00:01:31,110
And then we're going to introduce the actual view solution to the problem.

25
00:01:31,440 --> 00:01:36,120
So the first thing you might say is, well, maybe Vue is smart enough to recognize that if I put the

26
00:01:36,120 --> 00:01:42,390
word URL here, it might be smart enough to recognize that we have a URL property on data and assign

27
00:01:42,390 --> 00:01:43,530
it automatically there.

28
00:01:43,860 --> 00:01:48,960
Well, if I head back to my browser, you'll notice when I open up my devtools and this is not going

29
00:01:48,960 --> 00:01:49,380
to work.

30
00:01:49,380 --> 00:01:54,390
Let me just refresh the page and select this element and you'll see that we are unfortunately going

31
00:01:54,390 --> 00:01:55,200
to hard code.

32
00:01:55,200 --> 00:01:58,350
The literal text you are URL that is not what we want.

33
00:01:58,650 --> 00:02:00,510
So this first strategy does not work.

34
00:02:00,840 --> 00:02:06,930
At which point you might say something like, well, we use this curly brace syntax in order to interpolate

35
00:02:06,930 --> 00:02:10,830
the value of a data property like company with the same approach.

36
00:02:10,830 --> 00:02:12,150
Work in a ref.

37
00:02:12,150 --> 00:02:14,040
Well, let's try it out right here.

38
00:02:14,790 --> 00:02:18,540
I'm going to use the curly brace syntax and I'm going to provide a URL.

39
00:02:18,630 --> 00:02:22,560
Again, this is another property on our data object right here.

40
00:02:22,890 --> 00:02:27,710
If I go back to my browser and take a look here, the browser is automatically refreshed.

41
00:02:27,750 --> 00:02:28,680
I'm going to take a look here.

42
00:02:28,860 --> 00:02:34,670
Unfortunately, the exact same result view is currently interpreting the value literally.

43
00:02:34,680 --> 00:02:36,210
It literally thinks we want to.

44
00:02:36,240 --> 00:02:39,720
Curly braces and the new URL and then to closing curly braces.

45
00:02:39,720 --> 00:02:41,520
So no luck so far.

46
00:02:41,730 --> 00:02:43,650
So how do we solve this problem?

47
00:02:43,890 --> 00:02:48,270
In order to solve this problem, we're going to need to use something called a directive.

48
00:02:48,600 --> 00:02:51,450
A directive is a special view command.

49
00:02:51,690 --> 00:02:58,860
You can almost think of it like a command or a function in line in our HTML template that you can recognize

50
00:02:59,010 --> 00:03:02,070
and that view knows is supposed to do something special.

51
00:03:02,160 --> 00:03:02,460
All right.

52
00:03:02,670 --> 00:03:04,260
So I'm going to remove this right here.

53
00:03:05,790 --> 00:03:09,210
And what we want to use here is a directive called the bind.

54
00:03:09,540 --> 00:03:13,600
All of you directives are going to start with the V letter with the v prefix.

55
00:03:13,620 --> 00:03:14,970
So in this case the V bind.

56
00:03:15,240 --> 00:03:22,380
And what the V bind directive allows us to do is to bind or in other words, connect a data value from

57
00:03:22,380 --> 00:03:26,290
our view configuration object to an HTML attribute.

58
00:03:26,310 --> 00:03:26,640
Right.

59
00:03:26,820 --> 00:03:31,590
So this is a slightly different concept from what we did with our company property, because company

60
00:03:31,590 --> 00:03:37,380
was just text that we interpolated directly onto the screen at the user could see this is different.

61
00:03:37,380 --> 00:03:41,070
This is nothing that the user is going to necessarily see visually on the screen.

62
00:03:41,250 --> 00:03:46,650
But we're still connecting some piece of our configuration object to some part of our template.

63
00:03:46,800 --> 00:03:50,040
But in this case, it's an attribute on an HTML element.

64
00:03:50,190 --> 00:03:56,760
We want to dynamically set the value of that attribute, the H of attribute honor anchor tag using a

65
00:03:56,760 --> 00:03:58,500
value on our data object.

66
00:03:58,590 --> 00:04:02,450
All right, so here's what the syntax is going to look like before a ref.

67
00:04:02,460 --> 00:04:08,470
We're going to write V Bind Colon, and we're going to see this little Iceland violation.

68
00:04:08,490 --> 00:04:09,780
Don't worry about this for now.

69
00:04:10,140 --> 00:04:16,260
So the reason why we need to provide it before the attribute is because we can bind to any valid HTML

70
00:04:16,260 --> 00:04:16,770
attribute.

71
00:04:17,010 --> 00:04:22,680
So for example and a hyperlink may have attributes like h rough but it can also have class like we see

72
00:04:22,770 --> 00:04:23,100
here.

73
00:04:23,310 --> 00:04:24,930
It can have target whatever.

74
00:04:25,020 --> 00:04:29,550
We can actually bind to whatever HTML attribute we want on any element.

75
00:04:29,820 --> 00:04:34,190
But before the attribute, we're going to put the syntax, the dash behind colon.

76
00:04:34,200 --> 00:04:34,500
Right?

77
00:04:34,710 --> 00:04:40,350
And by itself, that is not enough because we have to tell you what we actually want to bind this value

78
00:04:40,350 --> 00:04:40,680
to.

79
00:04:40,800 --> 00:04:43,800
In other words, what should a view populate for the ref?

80
00:04:44,040 --> 00:04:50,220
Well, now that we've provided the V bind syntax, we can in fact write our data property by itself.

81
00:04:50,400 --> 00:04:52,590
So right here, I'm going to write a URL.

82
00:04:53,700 --> 00:04:53,960
All right.

83
00:04:53,970 --> 00:04:56,340
Once again, feel free to ignore the Iceland violation.

84
00:04:56,340 --> 00:04:57,660
I think it's actually two different ones.

85
00:04:57,870 --> 00:05:01,410
And the first one was telling us that we had no value within our double quotes.

86
00:05:01,680 --> 00:05:02,400
Now we do.

87
00:05:02,640 --> 00:05:09,180
So what we've now told you to do once I save this file, is to connect this new URL property to the

88
00:05:09,510 --> 00:05:10,370
ref attribute.

89
00:05:10,470 --> 00:05:13,770
Bind it, connect it, tie it to the age of attribute.

90
00:05:13,950 --> 00:05:17,880
And the same rules apply as this, as the rules do for company.

91
00:05:18,030 --> 00:05:24,850
If the value of this URL property changes, we will dynamically substitute the new value into the h

92
00:05:24,960 --> 00:05:26,670
ref attribute value.

93
00:05:26,700 --> 00:05:26,970
All right.

94
00:05:27,210 --> 00:05:29,160
So now if I go back to my website.

95
00:05:30,710 --> 00:05:31,820
And I click on this.

96
00:05:32,300 --> 00:05:32,810
There we go.

97
00:05:32,820 --> 00:05:35,300
We've successfully gone to careers that Google.com.

98
00:05:35,300 --> 00:05:42,680
And if I head back to my original page and I click into this element and we observe it, let me refresh.

99
00:05:44,340 --> 00:05:49,950
We're going to see here that now we have the age of actually populated with the URL value in our data

100
00:05:49,950 --> 00:05:50,370
objects.

101
00:05:50,370 --> 00:05:54,780
So behind the scenes, viewers substituted this value from Chrome's perspective.

102
00:05:54,780 --> 00:05:59,880
When it looks into the HTML, all it sees is just the regular string of careers.

103
00:05:59,880 --> 00:06:00,870
Got Google.com.

104
00:06:01,140 --> 00:06:02,380
But here's the beautiful part.

105
00:06:02,400 --> 00:06:04,680
Let me once again demonstrate using view devtools.

106
00:06:04,680 --> 00:06:06,240
I'm going to head into my view devtools.

107
00:06:06,510 --> 00:06:08,640
I'm going to identify the main nav component.

108
00:06:08,910 --> 00:06:14,670
We have all of its properties right here and earlier on you may recall that we modified company and

109
00:06:14,670 --> 00:06:16,620
observed how that affected the text right here.

110
00:06:16,890 --> 00:06:19,410
Well, let's now go ahead and change the property here.

111
00:06:19,620 --> 00:06:25,650
So instead of going to careers that Google.com, let's say I go somewhere else like WW dot yahoo.com

112
00:06:26,460 --> 00:06:28,410
and save this right here with a little diskette.

113
00:06:28,710 --> 00:06:33,630
Well now if I go back to my elements, you'll see that view has automatically changed the value.

114
00:06:33,640 --> 00:06:39,150
So we have bound data to our view, but in a different way than we did with bubble careers.

115
00:06:39,270 --> 00:06:40,710
This was binding text.

116
00:06:40,890 --> 00:06:43,320
Now we are binding HTML attributes.

117
00:06:43,320 --> 00:06:48,270
So now if I click on this, we're going to predictably go to Yahoo.com and it looks like we're running

118
00:06:48,270 --> 00:06:51,120
into some kind of JavaScript error on Yahoo.com.

119
00:06:51,120 --> 00:06:53,340
So those developers who definitely take care of it.

120
00:06:53,670 --> 00:06:57,150
But the key takeaway here is that we have these directives in view.

121
00:06:57,420 --> 00:07:02,730
These are commands, these are special things that we can add into our templates that are essentially

122
00:07:02,730 --> 00:07:04,290
functions that tells you to do something.

123
00:07:04,530 --> 00:07:10,320
So whenever we need to bind or connect an attribute to a piece of data, we use the V bind, attribute,

124
00:07:10,470 --> 00:07:11,730
v dash bind.

125
00:07:11,910 --> 00:07:17,910
All of our attributes will start with the v syntax, then a colon, and then the actual real world HTML

126
00:07:17,910 --> 00:07:19,290
attribute that we want to connect to.

127
00:07:19,410 --> 00:07:24,630
And then inside the double quotes, we can provide the value of the property.

128
00:07:24,810 --> 00:07:27,270
That view should substitute right there.

129
00:07:27,420 --> 00:07:27,720
All right.

130
00:07:27,930 --> 00:07:29,850
That's really all there is to cover in this lesson.

131
00:07:29,850 --> 00:07:33,630
In the next one, we're going to address the S lint violation that we see onscreen.

132
00:07:33,900 --> 00:07:34,710
I will see you there.
