WEBVTT
1
00:00:00.150 --> 00:00:04.230
All right, so let's continue styling our main nav in this lesson.

2
00:00:04.230 --> 00:00:07.230
I promise we're going to get to the view content very soon.

3
00:00:07.530 --> 00:00:12.810
So right inside my dev right here, I want to add another div and we're going to add some more tailwind

4
00:00:12.810 --> 00:00:13.590
styles to it.

5
00:00:13.590 --> 00:00:15.120
So right here I'm going to add the class.

6
00:00:15.660 --> 00:00:21.480
The first thing I want to do is to make this a Flexbox and it's as simple as adding the style flex.

7
00:00:22.080 --> 00:00:27.390
I want to make sure in my main nav that the content inside doesn't overflow onto a new line.

8
00:00:27.390 --> 00:00:33.540
So I just want to use the Flexbox to orient my menu items eventually across, but I don't actually want

9
00:00:33.540 --> 00:00:35.070
them to break onto a new line.

10
00:00:35.310 --> 00:00:40.650
So I'm going to add a class here called Flex No Wrap, which is going to ensure that our content doesn't

11
00:00:40.650 --> 00:00:42.390
wrap onto a new line.

12
00:00:42.870 --> 00:00:46.320
Then I want to make sure this div has the full height of its parent.

13
00:00:46.440 --> 00:00:48.720
So I'm going to do the H full class.

14
00:00:48.720 --> 00:00:51.000
We use the W full class before.

15
00:00:51.150 --> 00:00:54.000
Now we have the full class which applies a 100% height.

16
00:00:54.420 --> 00:00:54.780
All right.

17
00:00:54.960 --> 00:01:00.120
The next thing I want to do is to add some padding to the left and right side of the container, but

18
00:01:00.120 --> 00:01:01.800
not to the top and bottom.

19
00:01:02.010 --> 00:01:06.000
And there is, of course, a bunch of PE classes for padding in tailwind.

20
00:01:06.000 --> 00:01:12.450
But as you can see, the PE classes by themselves apply padding across all four sides of the container.

21
00:01:12.660 --> 00:01:18.300
Luckily we have classes called P, x and P and they relate to axes.

22
00:01:18.450 --> 00:01:21.180
So the x axis of course, means left and right.

23
00:01:21.390 --> 00:01:28.020
So the utility classes from Tailwind apply padding only on the left and on the right side of the box.

24
00:01:28.230 --> 00:01:33.840
So here I'm going to do x eight, which as you can see here, is going to apply 32 pixels of padding

25
00:01:33.840 --> 00:01:37.770
on the left side of the box and 32 pixels of padding on the right side of the box.

26
00:01:37.980 --> 00:01:41.010
That's just going to ensure that our text content doesn't start immediately.

27
00:01:41.010 --> 00:01:41.820
On the left hand side.

28
00:01:41.940 --> 00:01:43.530
We're going to push it in a little bit.

29
00:01:44.160 --> 00:01:47.790
Then what I want to do is apply the Amex auto class.

30
00:01:47.970 --> 00:01:51.300
This functions very similarly to what we just saw with x.

31
00:01:51.450 --> 00:01:53.250
The x means the x axis.

32
00:01:53.430 --> 00:01:56.970
So when we say x axis, we mean preceding either left or right.

33
00:01:57.210 --> 00:02:02.040
So what an x auto is going to do is provide a margin left auto and a margin write auto.

34
00:02:02.160 --> 00:02:08.490
And what this does in CCS terms is centers this container within the parent container is going to center

35
00:02:08.490 --> 00:02:09.600
this container.

36
00:02:09.720 --> 00:02:09.990
All right.

37
00:02:10.290 --> 00:02:16.110
The next thing I want to do is add a border, but only on the bottom of our main NAV.

38
00:02:16.110 --> 00:02:21.120
And the reason is because on the actual Google Careers website, we only have a small gray line that

39
00:02:21.120 --> 00:02:22.460
represents the border of the NAV.

40
00:02:22.470 --> 00:02:28.470
There's no other border on the rest of the container because it's the very top of the page.

41
00:02:28.470 --> 00:02:32.970
So it kind of blends into the start of the page and both the top, the left and the right.

42
00:02:33.120 --> 00:02:39.000
But we do want a small border on the bottom to separate the main NAV from the main content of the page.

43
00:02:39.240 --> 00:02:42.240
So how do we create a bottom border only in talent?

44
00:02:42.390 --> 00:02:43.440
Well, it's pretty simple.

45
00:02:43.440 --> 00:02:49.620
We have a border class for border, and if we add a dash B, there is a border B class that creates

46
00:02:49.620 --> 00:02:51.780
a border bottom width of one pixels.

47
00:02:51.870 --> 00:02:52.290
All right.

48
00:02:52.440 --> 00:02:57.120
And we can specify that we want the border to be solid with the border solid class.

49
00:02:57.120 --> 00:03:00.060
So we have a one pixel solid bottom border.

50
00:03:00.240 --> 00:03:04.260
And then the last thing we have to specify with a border, of course, is the color that we want.

51
00:03:04.290 --> 00:03:04.650
All right.

52
00:03:04.950 --> 00:03:12.360
So I can start typing border dash and we have a whole bunch of utility classes for color that are built

53
00:03:12.360 --> 00:03:13.280
into town.

54
00:03:13.320 --> 00:03:13.590
Once you.

55
00:03:13.590 --> 00:03:16.680
Yes, for example, we have Border Blue as an example.

56
00:03:16.680 --> 00:03:21.480
And you can see there's a wide variety of different blues that we can use if we wanted any of these

57
00:03:21.480 --> 00:03:23.040
blues to be our border color.

58
00:03:23.280 --> 00:03:26.820
But in this case, we don't want one of the preconfigured tailwind styles.

59
00:03:26.970 --> 00:03:33.300
We want our brand gray, one color that we configured in the Tailwind config file a few lessons ago.

60
00:03:33.600 --> 00:03:38.970
But as I mentioned back then, tailwind is going to be super helpful and it's automatically created

61
00:03:38.970 --> 00:03:47.280
a class for us called Border Brand Gray at one as well as the other two access colors that we specified.

62
00:03:47.280 --> 00:03:53.130
So notice here that our IntelliSense is reading our tail in config and can realize that we have these

63
00:03:53.130 --> 00:03:56.580
available colors now to use for our border in our project as well.

64
00:03:56.790 --> 00:04:03.990
So these custom created CCS classes function exactly the same as tailwinds built in classes.

65
00:04:04.140 --> 00:04:10.980
By customizing the tailwind config file, it automatically generated those classes for us and the syntax

66
00:04:10.980 --> 00:04:12.180
remains the exact same.

67
00:04:12.330 --> 00:04:15.120
When I was first discovering this, I thought this was a very cool feature.

68
00:04:15.420 --> 00:04:17.640
So here I'm just going to add border brand gray one.

69
00:04:17.640 --> 00:04:19.920
So we're going to have a bottom border with this color.

70
00:04:20.100 --> 00:04:22.200
You'll notice we're going to have a little bit of a violation here.

71
00:04:22.200 --> 00:04:27.330
And when I save the file, we're going to see prettier fix it because there's a lot of content on one

72
00:04:27.330 --> 00:04:27.660
line.

73
00:04:27.810 --> 00:04:32.910
What Prettier wants to do is just break it up across a couple lines and that's what it does right here.

74
00:04:33.060 --> 00:04:34.020
Breaks up those styles.

75
00:04:34.200 --> 00:04:39.240
CAC classes are whitespace and sensitive, so it doesn't matter how many spaces we put between them.

76
00:04:39.810 --> 00:04:42.240
So these kinds of line breaks are totally fine.

77
00:04:42.360 --> 00:04:42.630
All right.

78
00:04:42.930 --> 00:04:48.990
So the next thing I want to do is within my div, I want to put a hyperlink that's going to be our company

79
00:04:49.110 --> 00:04:49.620
name.

80
00:04:49.620 --> 00:04:53.820
The idea being is that we can click on our company name on the top left corner of the page.

81
00:04:53.940 --> 00:04:57.360
And usually that way that works on websites is you're taken back to the home page.

82
00:04:57.600 --> 00:04:59.850
So for now, since we don't know about view now.

83
00:04:59.900 --> 00:05:00.470
Navigation.

84
00:05:00.470 --> 00:05:02.360
We're just going to make this a regular hyperlink.

85
00:05:02.360 --> 00:05:04.880
So I'm going to do an A tag here.

86
00:05:05.120 --> 00:05:10.460
I'm just going to make the attribute set to slash, which is kind of the route route or the current

87
00:05:10.460 --> 00:05:10.730
route.

88
00:05:10.940 --> 00:05:13.580
And we're not going to worry about this for now because we're going to come back to it later.

89
00:05:13.880 --> 00:05:18.050
And then I'm going to just write my text here, and that's going to be my company name.

90
00:05:18.260 --> 00:05:20.660
You can actually put whatever you want in here.

91
00:05:20.810 --> 00:05:26.330
I'm going to call my career site Bobo Careers just to have a little bit of fun here.

92
00:05:26.330 --> 00:05:27.500
But this text is up to you.

93
00:05:27.860 --> 00:05:28.190
All right?

94
00:05:28.190 --> 00:05:30.830
And then we still need to style this actual hyperlink.

95
00:05:31.010 --> 00:05:35.870
So right here, I'm going to do the class and I'm going to apply some more tailwind classes.

96
00:05:35.870 --> 00:05:38.420
So I'm going to do a Flexbox again with the flex class.

97
00:05:38.750 --> 00:05:45.680
I want to center the content of my Flexbox vertically in the center and I can do that with the items

98
00:05:45.680 --> 00:05:49.010
center class which applies a line items center.

99
00:05:49.220 --> 00:05:55.910
So typically a Flexbox is going to distribute its items in a row format and you can customize how those

100
00:05:55.910 --> 00:06:01.610
elements are distributed in that row direction as well as how they're distributed in the column direction,

101
00:06:01.610 --> 00:06:06.500
which is the other direction which we can do with align items and setting it to center.

102
00:06:06.740 --> 00:06:12.400
So this is going to center my text of the of the bubble careers within the diff.

103
00:06:12.530 --> 00:06:17.060
All right then I want to add h fold to make sure we have the full height here as well.

104
00:06:17.210 --> 00:06:21.560
And then I want to make this text really large just to announce to everybody that this is my site.

105
00:06:21.860 --> 00:06:24.020
So I'm going to add text excel.

106
00:06:24.050 --> 00:06:29.870
There are, as you can see, a whole bunch of different text classes available for the size of our text.

107
00:06:30.050 --> 00:06:34.170
I'm just going to do text Excel, which as we can see here, is 20 pixels.

108
00:06:34.170 --> 00:06:36.560
So I'm going to do this, save this content.

109
00:06:36.560 --> 00:06:41.930
And now as I navigate back to my browser, we can see that now we're starting to get somewhere.

110
00:06:41.930 --> 00:06:44.480
We have our nice little box on the page.

111
00:06:44.630 --> 00:06:50.780
You can see that we have the bottom border that's been created from our custom color that we configured

112
00:06:50.780 --> 00:06:52.100
in the tail in config found.

113
00:06:52.310 --> 00:06:55.670
We have Talon providing the styles of this hyperlink right here.

114
00:06:55.820 --> 00:07:01.220
We have it nicely distributed in the center and we're going to align all of our menu items right here

115
00:07:01.220 --> 00:07:02.210
as well in the center.

116
00:07:02.390 --> 00:07:05.300
And of course if I click this red is going to be taken back to the same page.

117
00:07:05.420 --> 00:07:10.340
The page is going to refresh, which we do not want to do generally because the View app is supposed

118
00:07:10.340 --> 00:07:11.660
to be a single page app.

119
00:07:11.660 --> 00:07:18.470
We in theory should never refresh because the page should dynamically remove and add HTML elements as

120
00:07:18.470 --> 00:07:19.010
they're needed.

121
00:07:19.190 --> 00:07:21.200
We're going to fix this hyperlink problem later.

122
00:07:21.200 --> 00:07:26.060
And of course for now it's a good way to start and it's a good reminder to us that we do have some kind

123
00:07:26.060 --> 00:07:28.550
of link that should be navigating us somewhere.

124
00:07:28.580 --> 00:07:28.880
Right?

125
00:07:29.600 --> 00:07:32.180
And that really is all there is to cover in this lesson.

126
00:07:32.180 --> 00:07:35.450
We finally have our brand name on our page.

127
00:07:35.450 --> 00:07:40.280
And of course, the next thing is going to be rendering our menu items and playing around with some

128
00:07:40.280 --> 00:07:41.570
core view features.

129
00:07:41.570 --> 00:07:43.340
So I will see you in the next lesson.
