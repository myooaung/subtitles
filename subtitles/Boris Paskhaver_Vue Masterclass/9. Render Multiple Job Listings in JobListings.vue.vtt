WEBVTT
1
00:00:00.210 --> 00:00:00.870
Okay.

2
00:00:00.870 --> 00:00:06.990
So now that we have our reusable job ballistic component, let's use it a couple of times in my job

3
00:00:06.990 --> 00:00:08.640
listings, parent component.

4
00:00:08.940 --> 00:00:10.680
So I'm going to head back to job listings.

5
00:00:10.980 --> 00:00:15.930
And we're no longer of course going to need this ally because all of that logic is now stored in our

6
00:00:15.930 --> 00:00:17.070
job listing component.

7
00:00:17.070 --> 00:00:19.590
So I'm going to get rid of that ally entirely.

8
00:00:20.010 --> 00:00:24.210
So this whole component is now just going to be our main tag with an ordered list, and we'll come back

9
00:00:24.210 --> 00:00:25.170
to this in just a second.

10
00:00:25.470 --> 00:00:30.120
The first thing we need to do, of course, is import and register our job listing component locally.

11
00:00:30.420 --> 00:00:35.430
So right here in the script section, I'm going to import job listing that is going to come from the

12
00:00:35.430 --> 00:00:40.620
source directory components, job results and the component is called job listing.

13
00:00:40.620 --> 00:00:44.460
Make sure you import the singular job listing component right here.

14
00:00:44.460 --> 00:00:49.290
I'm going to create a components key and I'm going to register job listing as a local component.

15
00:00:49.290 --> 00:00:50.760
So now I can use it in my template.

16
00:00:51.060 --> 00:00:57.120
And you guessed it, since this is a list item element at its root, what I can simply do, you can

17
00:00:57.120 --> 00:00:58.410
see here it's a list item here.

18
00:00:58.650 --> 00:01:03.840
What I can simply do is render a whole bunch of job listing components right here inside my ordered

19
00:01:03.840 --> 00:01:09.180
list, and each one will represent that singular list item and they will form a complete list.

20
00:01:09.540 --> 00:01:12.900
So let's render three job listing components.

21
00:01:12.900 --> 00:01:14.250
Each one will be self-closing.

22
00:01:14.250 --> 00:01:17.700
So I'll add that slash at the end and copy and paste this down.

23
00:01:18.120 --> 00:01:23.040
Granted, all of our text is hardcoded, so these three job listings will be exactly the same.

24
00:01:23.220 --> 00:01:23.970
But that's fine.

25
00:01:23.970 --> 00:01:24.330
For now.

26
00:01:24.330 --> 00:01:28.950
We're just practicing this view concept and we're building out how those job listings look.

27
00:01:28.950 --> 00:01:31.320
So this will allow us to see how they look side by side.

28
00:01:31.500 --> 00:01:35.010
Later on, we will render a whole bunch more based on dynamic data.

29
00:01:35.010 --> 00:01:36.210
So just stick with me for now.

30
00:01:36.510 --> 00:01:39.810
And with that we are good to navigate to our browser and see how this looks.

31
00:01:40.620 --> 00:01:41.640
And there we go.

32
00:01:41.910 --> 00:01:42.750
Looking good.

33
00:01:42.750 --> 00:01:44.970
Here are our three job listing components.

34
00:01:44.970 --> 00:01:47.310
If I scroll down, we can see there they are.

35
00:01:47.700 --> 00:01:52.590
They are laying out pretty nicely here in this section of the page with the gray background and things

36
00:01:52.590 --> 00:01:53.730
are looking pretty good.

37
00:01:54.000 --> 00:01:59.430
So I'm pretty happy with what we have here with the initial build out of our job results page.

38
00:01:59.430 --> 00:02:02.400
So I think we're going to wrap up this section in the very next lesson.
