1
00:00:00,270 --> 00:00:01,140
Okay.

2
00:00:01,140 --> 00:00:07,860
So I think our VEX Code is in a really good shape right now, but I've noticed that our index tags file

3
00:00:07,860 --> 00:00:12,120
where we're storing all of that code is starting to get a little large, a little bloated.

4
00:00:12,360 --> 00:00:13,650
As a scroll down here.

5
00:00:13,650 --> 00:00:17,670
You can see there's a lot of responsibilities, a lot of methods, a lot of setup.

6
00:00:18,060 --> 00:00:24,660
So what I'd like to do as one more refactor in this section is to create separate JavaScript files for

7
00:00:24,660 --> 00:00:26,340
all of the concepts in this file.

8
00:00:26,550 --> 00:00:33,570
First for my constants up here, then for my state, then a file for my mutations, a file for my getters,

9
00:00:33,570 --> 00:00:34,950
and a file for my actions.

10
00:00:35,100 --> 00:00:37,260
And then in my index, such yes file.

11
00:00:37,380 --> 00:00:39,690
I'm just going to keep the initial store set up.

12
00:00:39,930 --> 00:00:45,240
The goal here is to have a bunch of smaller files that better communicate all of these ideas separately.

13
00:00:45,570 --> 00:00:49,950
Now, this refactor is going to actually take three lessons because we don't just need to move these

14
00:00:49,950 --> 00:00:51,060
concepts to new files.

15
00:00:51,180 --> 00:00:53,250
We also need to split up our test suite.

16
00:00:53,400 --> 00:00:57,300
We have all of our tests in a single index that test that s file.

17
00:00:57,510 --> 00:00:59,910
So we're going to need to work on that in the next lesson.

18
00:01:00,060 --> 00:01:04,740
And then finally, we're going to need to go to any components that are relying on any of these methods

19
00:01:04,740 --> 00:01:09,330
are constants, and we might need to fix a couple of imports given that we now are going to have new

20
00:01:09,330 --> 00:01:09,720
files.

21
00:01:09,870 --> 00:01:14,100
So in the third lesson here, we're going to focus on the component updates.

22
00:01:14,420 --> 00:01:16,740
Let's begin by creating all of our new files.

23
00:01:16,740 --> 00:01:22,560
So here in my file Explorer on the left, in my source directory in store, I'm going to create five

24
00:01:22,560 --> 00:01:23,250
new files.

25
00:01:23,400 --> 00:01:27,990
So I'm still going to keep all my view logic in store, but not in a single indexed just file.

26
00:01:28,260 --> 00:01:33,150
So right here in store, I want to create a new file called Constants.

27
00:01:34,640 --> 00:01:41,460
J.S. Then after that, I wanted to create a new file in the same directory called Select Store.

28
00:01:41,480 --> 00:01:48,710
Here, my next file is going to be state that J.S. then also in store, I want to create a new file

29
00:01:48,710 --> 00:01:52,460
called Mutations that's finally in store.

30
00:01:52,460 --> 00:01:54,010
I want to create getters that.

31
00:01:54,020 --> 00:01:58,910
Yes, and last file after that is going to be actions that.

32
00:01:58,910 --> 00:01:59,240
Yes.

33
00:02:00,230 --> 00:02:01,790
So we're going to have five new files here.

34
00:02:02,090 --> 00:02:03,950
So let's begin with our constants file.

35
00:02:03,950 --> 00:02:09,200
And I'm basically just going to drag all of these in the right hand side and copy everything from the

36
00:02:09,200 --> 00:02:11,780
original file to my new ones.

37
00:02:11,780 --> 00:02:13,190
In fact, let me do it one file at a time.

38
00:02:13,520 --> 00:02:14,660
So let's begin with constants.

39
00:02:14,660 --> 00:02:19,790
So right here from the index that just file, I'm just going to copy lines five through 11.

40
00:02:19,790 --> 00:02:22,640
We have six constants right now when to cut them.

41
00:02:22,640 --> 00:02:23,870
I'm going to paste them right here.

42
00:02:23,870 --> 00:02:26,450
We are going to have some failures on the left hand side, but that's okay.

43
00:02:26,960 --> 00:02:31,370
And another thing I'm going to do just to provide a little bit of context and clarity is I'm going to

44
00:02:31,370 --> 00:02:34,040
separate my constants based on the responsibilities.

45
00:02:34,250 --> 00:02:37,460
And when I say responsibilities, I'm really talking about features.

46
00:02:37,910 --> 00:02:40,610
So in this case, I think there's three ideas here.

47
00:02:40,610 --> 00:02:45,290
There is the idea of a user, there's the idea of jobs and there's the idea of organizations.

48
00:02:45,500 --> 00:02:49,640
So I'm just going to create a line break between those three sets of constants.

49
00:02:49,640 --> 00:02:53,210
And I think I'm also just going to add a small comment above each one to communicate that.

50
00:02:53,510 --> 00:02:55,460
So right here, I'm just going to say user.

51
00:02:56,820 --> 00:02:57,420
Down below.

52
00:02:57,420 --> 00:03:02,520
I'm going down a comment that says jobs and whatever format you follow is up to you.

53
00:03:02,670 --> 00:03:05,640
Some people might even say, Well, six constants, isn't that confusing?

54
00:03:05,820 --> 00:03:09,780
But I can imagine that this will get pretty large over time if I continue to add new features to my

55
00:03:09,780 --> 00:03:09,990
app.

56
00:03:10,230 --> 00:03:12,930
So it's going to separate my constants by what they focus on.

57
00:03:13,230 --> 00:03:17,070
So right here, I'm going to add a comment for my organization's constants.

58
00:03:17,490 --> 00:03:17,790
All right.

59
00:03:17,790 --> 00:03:19,810
So that's going to take care of my constants file.

60
00:03:19,830 --> 00:03:22,260
Let's now move on to my state tags file.

61
00:03:22,620 --> 00:03:27,810
So right here on the right hand side, I'm going to open up my new state DHS file and here I'm going

62
00:03:27,810 --> 00:03:32,310
to copy over my function that is creating states and it's going to cut it pasted over here.

63
00:03:32,700 --> 00:03:37,200
The one thing that I'm going to do a little bit differently here is rather than export it as a named

64
00:03:37,200 --> 00:03:41,000
export, which I was doing previously, I'm going to make this a default export.

65
00:03:41,010 --> 00:03:45,300
So I'm going to remove the export keyword here, make it a plain arrow function called state.

66
00:03:45,510 --> 00:03:48,480
And right here I'm going to export default state.

67
00:03:50,630 --> 00:03:50,900
All right.

68
00:03:50,900 --> 00:03:52,880
So that would be the default export of that file.

69
00:03:53,150 --> 00:03:55,330
The next thing I want to do is my mutations.

70
00:03:55,330 --> 00:03:59,420
So right here, I'm going to open up my mutations that just file recently created.

71
00:03:59,780 --> 00:04:04,430
And I'm going to drag over this object right here once again, cut and paste.

72
00:04:05,090 --> 00:04:07,670
Once again, what I'm going to do is make it a default export.

73
00:04:07,670 --> 00:04:12,320
So I'm going to remove the export keyword right here, which makes it a regular named export.

74
00:04:12,560 --> 00:04:14,300
I want this to be a default export.

75
00:04:14,540 --> 00:04:16,700
So right here I'm going to export default.

76
00:04:17,150 --> 00:04:22,550
The mutations object so people can direct directly import to this object from whatever file they choose.

77
00:04:22,820 --> 00:04:26,900
Now notice this is the first file in which we need some of our constants.

78
00:04:27,050 --> 00:04:30,860
So I'm going to import those constants above so that this file no longer breaks.

79
00:04:31,220 --> 00:04:34,250
So right here, I'm going to import the three that we need.

80
00:04:34,640 --> 00:04:36,470
I'm going to need log in user.

81
00:04:37,690 --> 00:04:43,300
I'm going to need receive jobs and I'm going to need add selected organizations.

82
00:04:43,480 --> 00:04:48,550
And now this is going to come from our source directory, our store directory, but we can no longer

83
00:04:48,550 --> 00:04:49,660
import from index that.

84
00:04:49,660 --> 00:04:50,050
Yes.

85
00:04:50,320 --> 00:04:55,090
And so now we have to specify the exact file where we're getting from them from which is now our new

86
00:04:55,090 --> 00:04:56,320
constants that just file.

87
00:04:56,620 --> 00:04:58,480
So save that and that should work.

88
00:04:59,200 --> 00:05:02,680
We're going to follow the exact same process for our getters and our actions.

89
00:05:03,040 --> 00:05:06,100
So let's open up our getters docs file here.

90
00:05:06,100 --> 00:05:08,740
I'm going to cut and paste this logic right here.

91
00:05:09,960 --> 00:05:11,760
If my mouse complies with me.

92
00:05:11,760 --> 00:05:12,390
There we go.

93
00:05:13,400 --> 00:05:14,650
Paste that logic here.

94
00:05:14,660 --> 00:05:17,440
Let's make it a default export or move the export keyword.

95
00:05:17,450 --> 00:05:20,720
Let's make it export default getters down below.

96
00:05:22,330 --> 00:05:24,390
And let's import the contents we need above.

97
00:05:24,400 --> 00:05:31,360
So I need the unique organisations constant and these filtered jobs by organizations constant.

98
00:05:31,600 --> 00:05:36,250
Once again, that's going to come from the source directory, the store directory and my constant jazz

99
00:05:36,250 --> 00:05:37,630
file saved up.

100
00:05:37,870 --> 00:05:41,260
And finally, I want to update my actions file.

101
00:05:42,500 --> 00:05:43,550
So actions that yes.

102
00:05:43,550 --> 00:05:44,450
Is currently empty.

103
00:05:44,690 --> 00:05:47,720
Let's go ahead and cut and paste this blob of logic into that.

104
00:05:48,850 --> 00:05:54,700
And notice this is also the asynchronous action that is calling the Get Jobs API function.

105
00:05:54,940 --> 00:05:59,620
So I need to make sure I cut and paste this important get jobs from my index, just file as well.

106
00:05:59,950 --> 00:06:01,420
So let me cut and paste that right here.

107
00:06:02,790 --> 00:06:04,380
Let me make this a default.

108
00:06:04,620 --> 00:06:08,100
Exports to remove export right here, export default actions.

109
00:06:09,660 --> 00:06:12,400
And of course, I'm going to need to import a constant as well.

110
00:06:12,420 --> 00:06:16,830
Two of them, in fact, it's going to be fetch jobs as well as receive jobs.

111
00:06:17,340 --> 00:06:23,160
So right here, let me import fetch jobs and receive jobs.

112
00:06:23,460 --> 00:06:27,000
It looks like this code is automatically completed this for me, but I want it to be absolute.

113
00:06:27,270 --> 00:06:31,860
So it's going to be from the app directory or source store constants.

114
00:06:31,860 --> 00:06:32,550
Save that.

115
00:06:32,790 --> 00:06:36,310
And now we can see our previous named ESX.

116
00:06:36,330 --> 00:06:39,780
Names here are no longer working because they no longer exist in this file.

117
00:06:40,020 --> 00:06:43,860
So we're going to need to import them and then perform the regular setup process.

118
00:06:44,160 --> 00:06:44,820
So right here.

119
00:06:45,060 --> 00:06:48,210
What I'm going to do is import all of the four things that we need below.

120
00:06:48,450 --> 00:06:49,620
So the first one is state.

121
00:06:49,860 --> 00:06:54,840
So I'm going to import the default export of state from our newly created state DHS file.

122
00:06:55,080 --> 00:06:57,730
So that is the source directory store state.

123
00:06:58,890 --> 00:07:01,560
Same idea on the line below for our mutations.

124
00:07:01,560 --> 00:07:02,880
So import mutations.

125
00:07:03,180 --> 00:07:04,800
They're now a default export.

126
00:07:04,800 --> 00:07:06,630
So I don't need to wrap that in curly braces.

127
00:07:06,990 --> 00:07:15,510
So from the source directory store mutations, then import getters from the source directory store getters.

128
00:07:16,110 --> 00:07:20,970
Then import actions from these source directory store actions.

129
00:07:21,270 --> 00:07:23,370
Save that, let prettier do all of its work.

130
00:07:23,670 --> 00:07:28,140
And then what I recommend you do at this point is also restart your view def server.

131
00:07:28,290 --> 00:07:33,570
It may still create some problems because we still have some broken component imports and things like

132
00:07:33,570 --> 00:07:36,390
that, but it never hurts to restart just to see those errors up to date.

133
00:07:36,600 --> 00:07:39,570
Sometimes when you're creating new files, that's when the view seal.

134
00:07:39,570 --> 00:07:40,620
I can get a little finicky.

135
00:07:40,950 --> 00:07:44,550
So what I'm going to do is do that behind the scenes and then I'll join you in the very next lesson

136
00:07:44,550 --> 00:07:50,850
where we're going to continue this refactor by splitting up our test for the view X functionality into

137
00:07:50,850 --> 00:07:52,080
multiple files as well.

138
00:07:52,230 --> 00:07:52,920
So I'll see you there.
