WEBVTT
1
00:00:00.590 --> 00:00:06.770
In this lesson will introduce a small refactor that is very similar to a refactor we did earlier in

2
00:00:06.770 --> 00:00:07.280
the course.

3
00:00:07.670 --> 00:00:14.030
So if we focus on this action class method and the JavaScript object that it produces will notice here

4
00:00:14.030 --> 00:00:21.380
that we are always comparing the action property with some kind of string, and that string happens

5
00:00:21.380 --> 00:00:27.740
to be the exact same name as our property and also the exact same name as the Csa's class that we want

6
00:00:27.740 --> 00:00:28.460
to apply.

7
00:00:28.790 --> 00:00:32.180
So we can actually consolidate this code into a single line.

8
00:00:32.450 --> 00:00:37.280
And what we can actually do is say, take whatever is the value of action at the current time.

9
00:00:37.310 --> 00:00:41.360
Let's say it's going to be this string called build and if we lowercase it.

10
00:00:41.660 --> 00:00:47.570
So if we take build, for example, and we lowercase it to build with a lowercase B, then that will

11
00:00:47.570 --> 00:00:50.600
represent the CSA class that we want to apply.

12
00:00:50.780 --> 00:00:57.470
And we can return a simple object that just says, take this build class and give it a value of true

13
00:00:57.500 --> 00:00:59.210
with no additional classes needed.

14
00:00:59.510 --> 00:01:04.250
And then when the action changes from build to create, for example, well then will simply lowercase,

15
00:01:04.250 --> 00:01:05.330
create to get create.

16
00:01:05.480 --> 00:01:08.990
And that will be our new object property and we'll always set it to true.

17
00:01:09.260 --> 00:01:14.960
So no matter what, we're going to have this value, value to true and for our property will dynamically

18
00:01:14.960 --> 00:01:19.130
generated using whatever is the current value of action but lowercase.

19
00:01:19.130 --> 00:01:19.460
All right.

20
00:01:19.670 --> 00:01:23.840
So this will require us to use dynamic object properties that we talked about this idea earlier in the

21
00:01:23.840 --> 00:01:24.170
course.

22
00:01:24.440 --> 00:01:27.170
So let me write it out directly below this code, then we'll remove it.

23
00:01:27.500 --> 00:01:33.260
So remember, I need to dynamically provide a value for my property, so I need to square brackets in

24
00:01:33.260 --> 00:01:33.830
JavaScript.

25
00:01:34.100 --> 00:01:39.050
Then I need to reference whatever is the current string value of my action data property.

26
00:01:39.290 --> 00:01:44.900
Once I have that string, I need to lowercase it, which I can do in JavaScript using the two lowercase

27
00:01:44.900 --> 00:01:45.380
method.

28
00:01:45.860 --> 00:01:50.210
Make sure you invoke it because we need the return value which is going to be the string in lowercase

29
00:01:50.450 --> 00:01:54.380
and that's going to give me either build or create or design or code in lowercase.

30
00:01:54.650 --> 00:01:56.150
Whichever one is currently relevant.

31
00:01:56.420 --> 00:02:01.520
And I know that that should be true at that moment because that is what the action is currently.

32
00:02:01.550 --> 00:02:05.720
So that is the complementary lowercase CSS class that I want to apply.

33
00:02:05.930 --> 00:02:10.520
So this will accomplish the exact same thing as what these four lines will accomplish.

34
00:02:10.610 --> 00:02:15.200
Granted, there is some inherent risk because we are making the assumption that a another developer

35
00:02:15.200 --> 00:02:19.970
will understand the connection between our action and our sees as classes having to match.

36
00:02:19.970 --> 00:02:20.630
Exactly.

37
00:02:20.840 --> 00:02:26.450
But for now, since we have simple classes with exactly one word and simple actions with exactly one

38
00:02:26.450 --> 00:02:27.770
word, this fits for now.

39
00:02:28.010 --> 00:02:33.480
So I'm going to remove this code right here, and this should accomplish the exact same implementation.

40
00:02:33.500 --> 00:02:37.880
So if I go back into my browser, we should see nothing new, but everything should continue working

41
00:02:38.090 --> 00:02:40.370
and it looks like it still is perfect.

42
00:02:40.550 --> 00:02:42.530
So I will see in the very next lesson.
