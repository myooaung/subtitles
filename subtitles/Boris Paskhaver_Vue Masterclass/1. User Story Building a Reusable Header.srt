1
00:00:00,780 --> 00:00:01,690
Okay.

2
00:00:01,700 --> 00:00:04,210
Welcome to the next section of the course.

3
00:00:04,220 --> 00:00:07,580
In this section we're going to talk about named slots.

4
00:00:07,850 --> 00:00:15,800
And just like their name suggests, a named slot is simply a view slot to which we assign a name, a

5
00:00:15,800 --> 00:00:17,090
unique identifier.

6
00:00:17,390 --> 00:00:19,310
What is the advantage of name slots?

7
00:00:19,550 --> 00:00:25,070
Well, they allow us to have multiple slots within a single child component.

8
00:00:25,520 --> 00:00:31,040
In other words, we can define multiple sections within the component where we would like the parent

9
00:00:31,070 --> 00:00:33,230
to inject dynamic content.

10
00:00:33,620 --> 00:00:37,520
So let me give you a use case for this from the official Google Careers website.

11
00:00:37,520 --> 00:00:39,590
This is what we're going to be building out in this section.

12
00:00:39,950 --> 00:00:45,050
So I'm going to head to the teams page right here on my main menu, and I want you to focus your eyes

13
00:00:45,050 --> 00:00:46,490
on this section right here.

14
00:00:47,060 --> 00:00:50,000
Consider this as a imaginary component.

15
00:00:50,000 --> 00:00:56,030
Right here we have this box, and in the box we are centering a collection of text, right?

16
00:00:56,360 --> 00:00:58,520
And that text consists of two sections.

17
00:00:58,700 --> 00:01:04,100
We have this part right here, which we can call the title or the header, and then we have some text

18
00:01:04,100 --> 00:01:08,180
below which we could consider the subtitle or the sub header.

19
00:01:08,510 --> 00:01:14,300
Now, if every component looked exactly like this, then the way we can customize this text is by simply

20
00:01:14,300 --> 00:01:18,110
providing two props one for the title and one for the subtitle.

21
00:01:18,380 --> 00:01:23,570
Unfortunately, the situation on this website is a little bit more complex, so compare what you see

22
00:01:23,570 --> 00:01:26,540
here to what you see on the allocations page.

23
00:01:27,650 --> 00:01:28,100
All right.

24
00:01:28,340 --> 00:01:32,930
We have a very similar design in some ways and a different design in others.

25
00:01:33,140 --> 00:01:37,430
So we still have this idea of a centerpiece of text.

26
00:01:37,550 --> 00:01:42,950
If we were to imagine this white box as a component, this component is very similar to the one on the

27
00:01:42,950 --> 00:01:43,550
teams page.

28
00:01:43,670 --> 00:01:47,960
It has a bunch of centered text consisting of a title and a subtitle.

29
00:01:48,200 --> 00:01:55,340
However, the styles that we apply right here and right here are totally different compared to what

30
00:01:55,340 --> 00:01:56,600
we see on the team's page.

31
00:01:56,780 --> 00:02:01,130
So let me show you, if I flip back and forth, you can see they're totally different as far as the

32
00:02:01,130 --> 00:02:06,320
font size, the bolding, maybe even the font, they're totally different, but they're kind of the

33
00:02:06,320 --> 00:02:10,220
same in the sense of the components centering a title and a subtitle.

34
00:02:10,610 --> 00:02:11,840
It gets even more interesting.

35
00:02:11,840 --> 00:02:13,550
Let's say I head to my students page.

36
00:02:14,000 --> 00:02:16,130
In my students page, I have a similar idea.

37
00:02:16,130 --> 00:02:22,100
I have a component that centers text, but here it's almost like we have just the title without a subtitle.

38
00:02:22,550 --> 00:02:28,160
So of course we can try to solve this problem with things like props, where we enable primary styles

39
00:02:28,160 --> 00:02:31,910
and secondary styles like we did with our action button, for example.

40
00:02:32,120 --> 00:02:37,040
But in this kind of scenario, I think that we would really benefit from an approach where we simply

41
00:02:37,040 --> 00:02:39,080
allow a component to have multiple slots.

42
00:02:39,350 --> 00:02:46,190
Imagine we defined a component where we had one slot right here and another slot down below, right?

43
00:02:46,190 --> 00:02:52,250
And each parent component can specify not just the HTML, of course, but the HTML with the corresponding

44
00:02:52,250 --> 00:02:57,620
access styles that they would like to apply for the header and the sub header and all that the child

45
00:02:57,620 --> 00:03:03,020
component would be responsible for would be creating a reusable box that centers that content in the

46
00:03:03,020 --> 00:03:03,860
middle, right?

47
00:03:04,010 --> 00:03:06,950
That way we can have a single component to represent this box.

48
00:03:07,210 --> 00:03:12,950
We can have this design right here where we have a slot and a slot and we can reuse that same component

49
00:03:12,950 --> 00:03:17,300
right here, but simply provide a different chunk of HTML right here and right here.

50
00:03:17,480 --> 00:03:22,130
And then on something like the student's page, we could simply provide one slot without providing anything

51
00:03:22,130 --> 00:03:25,400
else to the other one and thus eliminate it entirely from the component.

52
00:03:25,760 --> 00:03:31,010
So hopefully this gives you a sense of how slots can enable a lot of reusability interview components.

53
00:03:31,220 --> 00:03:35,780
But of course, in order to enable this design, we need to be able to have two slots.

54
00:03:35,990 --> 00:03:39,770
And in order to have two slots, we need to be able to uniquely identify each one.

55
00:03:39,920 --> 00:03:43,040
And the way we do that is by assigning each one a name.

56
00:03:43,130 --> 00:03:43,460
All right.

57
00:03:43,700 --> 00:03:47,360
So we're going to build a component very similar to this starting in the very next lesson.
