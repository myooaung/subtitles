1
00:00:00,610 --> 00:00:01,300
Okay.

2
00:00:01,300 --> 00:00:04,780
So let's continue building out an individual job listing.

3
00:00:04,900 --> 00:00:11,530
So within my router link as a direct sibling of my first div, I'm going to create another div.

4
00:00:11,920 --> 00:00:16,960
So right here I'll add my second div and I'll give it a couple of classes to start.

5
00:00:17,560 --> 00:00:19,480
Let me scroll down in fact, so you can see it.

6
00:00:19,900 --> 00:00:22,630
Let's add a couple classes for padding.

7
00:00:22,630 --> 00:00:26,620
So I will do P eight add padding on the x axis.

8
00:00:26,620 --> 00:00:31,300
That's going to be 32 pixels of padding on the left and 32 pixels of padding on the right.

9
00:00:31,630 --> 00:00:37,190
I'm going to add a padding on the top and bottom as well, but a little bit less so I will use the p

10
00:00:37,190 --> 00:00:44,380
y or padding y axis classes and will do p four to add 16 pixels of padding on the top and 16 pixels

11
00:00:44,380 --> 00:00:45,310
of padding on the bottom.

12
00:00:45,880 --> 00:00:46,240
Okay.

13
00:00:46,450 --> 00:00:50,620
Inside this div, we're going to have two more divs to let me write them out right here.

14
00:00:52,580 --> 00:00:59,900
And my first div is going to store information about the qualifications of the job so the requirements

15
00:00:59,910 --> 00:01:02,420
the user has to have in order to apply.

16
00:01:02,720 --> 00:01:08,780
So in this div, I'll create an H3 and, and here we can put the static text qualifications.

17
00:01:10,140 --> 00:01:13,050
And let's apply a couple of styles to this age three as well.

18
00:01:14,040 --> 00:01:18,390
I'm going to add a little bit of margin on the top with the empty or margin top class, we're going

19
00:01:18,390 --> 00:01:22,710
to do empty one four, four pixels of margin on the top and on the bottom.

20
00:01:22,710 --> 00:01:27,840
We'll do a little bit more margin margin, bottom two to add eight pixels of margin on the bottom there.

21
00:01:28,320 --> 00:01:28,680
All right.

22
00:01:28,920 --> 00:01:35,130
Directly below the H3, create a new div and then here I'll create another unordered list.

23
00:01:35,340 --> 00:01:40,820
This unordered list will store a bunch of allies for the actual job requirements and these will be basic

24
00:01:40,830 --> 00:01:41,520
bullet points.

25
00:01:41,880 --> 00:01:44,430
So on this well, I can add a couple of classes.

26
00:01:45,060 --> 00:01:47,940
Let's add a little bit of padding on the left with plate.

27
00:01:48,390 --> 00:01:54,330
And then what I also want is for my list items to actually have those bullet point icons to the left,

28
00:01:54,330 --> 00:01:59,820
those black circles, and we can do that using the list desc class from Tailwind.

29
00:01:59,820 --> 00:02:05,280
You can see what it does is it adds that class attribute list style type and set that the disk and that

30
00:02:05,280 --> 00:02:10,320
is what is going to give us that those black circles or bullet points to the left of each list item.

31
00:02:10,710 --> 00:02:13,230
So let's add three sample list items here.

32
00:02:14,040 --> 00:02:15,140
Let's start with our first one.

33
00:02:15,150 --> 00:02:18,330
This is just going to be arbitrary text that I took from the official website.

34
00:02:18,540 --> 00:02:23,790
You can feel free to substitute whatever you'd like in here, but let's begin with bachelor's degree

35
00:02:24,390 --> 00:02:27,870
or equivalent practical experience.

36
00:02:28,830 --> 00:02:32,460
Let me copy this list item twice down and then we'll replace the content.

37
00:02:32,790 --> 00:02:39,360
So for my second list item, let's write five years of experience in program management.

38
00:02:40,770 --> 00:02:43,290
And for our third bullet, it's going to be a little lengthier.

39
00:02:43,320 --> 00:02:46,770
Let's do this experience analyzing data.

40
00:02:48,000 --> 00:02:50,100
Through querying IT database.

41
00:02:51,540 --> 00:02:59,400
And then there is a little section here e.g. which means including sequel using spreadsheet software

42
00:03:00,570 --> 00:03:02,520
and creating statistical models.

43
00:03:02,550 --> 00:03:04,400
Again, you don't have to copy this word for word.

44
00:03:04,410 --> 00:03:07,740
We just need some placeholder text for a sample jobless thing.

45
00:03:07,920 --> 00:03:11,400
But this is a good amount of text and resembles the real world.

46
00:03:11,790 --> 00:03:18,180
Okay, so for our second div here, what this is going to store is a link that says expand and that

47
00:03:18,180 --> 00:03:22,260
link is going to lead to the job page for this job.

48
00:03:22,560 --> 00:03:28,560
It's actually a very curious design because we already have a router link that is wrapping the entire

49
00:03:28,560 --> 00:03:28,920
box.

50
00:03:28,920 --> 00:03:33,000
So any, any place that you click in the box will take you to the same job page.

51
00:03:33,300 --> 00:03:38,430
But for some reason, they set up a separate link for the box at the very bottom, and that has the

52
00:03:38,430 --> 00:03:39,360
word expand.

53
00:03:39,390 --> 00:03:40,740
So that's what we're going to emulate here.

54
00:03:41,100 --> 00:03:48,030
So right here, I will add a class here, I will add a class of M2 to add some margin on the top, and

55
00:03:48,030 --> 00:03:51,930
I will center the text in this div by doing text center.

56
00:03:53,590 --> 00:03:59,020
Right after that inside the div, I want to put another router link component because we are making

57
00:03:59,020 --> 00:04:01,270
a link to navigate to another route.

58
00:04:01,510 --> 00:04:07,630
And for the two prop of this router link, we can copy exactly what we have right here since it is leading

59
00:04:07,630 --> 00:04:08,920
to the exact page.

60
00:04:09,100 --> 00:04:13,390
Again, it's a router link nested within a router link, but that's exactly how they built it out in

61
00:04:13,390 --> 00:04:14,290
the real world as well.

62
00:04:14,830 --> 00:04:18,610
So we're going to have a two prop here.

63
00:04:18,850 --> 00:04:22,570
Our text in between is going to be the word expand.

64
00:04:22,780 --> 00:04:27,580
The idea, I guess, being that you can expand this job listing to see all of its full details.

65
00:04:27,580 --> 00:04:33,010
But what that really entails is navigating the user to the individual individual job page, and that

66
00:04:33,010 --> 00:04:36,370
text is going to be in our brand blue color.

67
00:04:36,670 --> 00:04:38,980
So I can add a single tailwind class right here.

68
00:04:39,760 --> 00:04:42,550
And that is going to be text brand blue one.

69
00:04:42,790 --> 00:04:46,690
Again, that color is coming from our tailwind config file.

70
00:04:47,020 --> 00:04:47,350
Okay.

71
00:04:47,350 --> 00:04:50,680
So we added this top div that is storing these two elements.

72
00:04:50,680 --> 00:04:55,060
One is going to be the qualifications, one is going to be a router link with the text expand.

73
00:04:55,390 --> 00:04:59,860
And let's take a look at what this looks like right now in our browser.

74
00:04:59,860 --> 00:05:03,160
So I will navigate here and that is looking pretty good.

75
00:05:03,160 --> 00:05:05,500
This is a sample job listing.

76
00:05:05,710 --> 00:05:10,600
You can see the box shadow, you can see the qualifications bullet points, you can see the expand text.

77
00:05:10,840 --> 00:05:16,240
You'll notice that if I click on either the entire job listing, it's going to take us to slash jobs,

78
00:05:16,480 --> 00:05:17,770
slash result, slash one.

79
00:05:17,950 --> 00:05:22,420
And also, if I click on the actual expand button, that's also going to take us to the exact same job

80
00:05:22,420 --> 00:05:22,690
page.

81
00:05:22,690 --> 00:05:25,810
So this is an example of a single job listing.

82
00:05:25,810 --> 00:05:26,890
It's looking pretty good to me.

83
00:05:27,130 --> 00:05:31,330
And obviously what we're going to move towards in the future is having a whole bunch of these that we're

84
00:05:31,330 --> 00:05:34,510
actually going to dynamically populate using data from an API.

85
00:05:34,510 --> 00:05:39,400
But this is a good place to start to just start building out the look and feel and the aesthetics of

86
00:05:39,400 --> 00:05:41,980
a single job listing on our job results page.

87
00:05:42,160 --> 00:05:43,750
So more on this in the next lesson.
