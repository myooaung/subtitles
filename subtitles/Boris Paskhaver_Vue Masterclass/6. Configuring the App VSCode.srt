1
00:00:00,860 --> 00:00:01,460
Okay.

2
00:00:01,460 --> 00:00:06,680
So over the course of the next couple of lessons, we're going to configure a lot of project settings.

3
00:00:06,980 --> 00:00:10,730
In this lesson, we're going to start out by configuring our voice code settings.

4
00:00:11,030 --> 00:00:16,690
Then in the next lesson, we'll configure a little bit of just just as a reminder is our test run.

5
00:00:16,970 --> 00:00:22,910
And finally we'll configure a little bit of S lint and S lint as a reminder is our enter which checks

6
00:00:22,910 --> 00:00:24,650
for violations in our code.

7
00:00:24,980 --> 00:00:29,930
So before we begin with this lesson, I just want to confirm with you that you have installed the three

8
00:00:29,930 --> 00:00:33,680
required code extensions that you'll need to work in this course.

9
00:00:33,890 --> 00:00:39,020
So if you haven't, make sure you go to this extensions panel right here and install the following three

10
00:00:39,020 --> 00:00:39,590
extensions.

11
00:00:39,800 --> 00:00:45,620
Veeder is the first 1vetur then s lint is going to be the second one.

12
00:00:45,620 --> 00:00:47,330
That's this one right here for Microsoft.

13
00:00:47,570 --> 00:00:49,640
And finally, prettier is going to be the third.

14
00:00:50,480 --> 00:00:54,890
And we need to make sure that those extensions are installed because otherwise the settings that we're

15
00:00:54,890 --> 00:00:56,330
going to enable are not going to work.

16
00:00:56,930 --> 00:00:57,260
Okay.

17
00:00:57,260 --> 00:00:59,450
So let's now create some settings for our project.

18
00:00:59,450 --> 00:01:03,110
And these settings are mostly going to configure how V code is going to work.

19
00:01:03,470 --> 00:01:06,380
So India's code, you can use the following shortcut on a mac.

20
00:01:06,380 --> 00:01:12,260
It's going to be command shift P and on a windows it's going to be control shift P and that's going

21
00:01:12,260 --> 00:01:13,820
to bring up the command palette.

22
00:01:13,820 --> 00:01:18,710
It's this little box right here where we can issue instructions to the code and I want you to search

23
00:01:18,710 --> 00:01:22,970
for settings and you should be able to find a setting like this.

24
00:01:22,970 --> 00:01:28,400
It says preferences, open workspace settings, the first one that's highlighted and if you press enter,

25
00:01:28,400 --> 00:01:32,510
it should launch you into the screen where you can set a bunch of options for obvious code.

26
00:01:32,870 --> 00:01:39,500
Now you'll notice at the top that there are two tabs user and workspace user refers to global user settings.

27
00:01:39,740 --> 00:01:44,930
That means if you set the settings in here, they will apply to any project or in other words, any

28
00:01:44,930 --> 00:01:50,930
directory that you open in V's code in comparison, workspace settings right here apply only to this

29
00:01:50,930 --> 00:01:53,630
project, in this case our job search project.

30
00:01:53,900 --> 00:01:58,490
So to make sure that I don't accidentally override any of your global user settings, make sure that

31
00:01:58,490 --> 00:02:03,020
you click on workspace, and that will ensure that the changes we make here are only going to apply

32
00:02:03,020 --> 00:02:03,950
in this project.

33
00:02:04,370 --> 00:02:04,670
All right.

34
00:02:04,850 --> 00:02:09,200
So here are some of the things we're going to add to help enhance how this code helps us write our code.

35
00:02:09,860 --> 00:02:12,980
The first thing I want to search for here is format on save.

36
00:02:13,670 --> 00:02:17,240
And you're going to see right here there's an option on there editor for formatting and save.

37
00:02:17,450 --> 00:02:22,010
And what this is going to allow us to do is to automatically run prettier AR formatter whenever we save

38
00:02:22,010 --> 00:02:22,460
a file.

39
00:02:22,610 --> 00:02:26,390
And that of course makes it super easy to automatically format our code.

40
00:02:26,780 --> 00:02:31,430
Now you'll notice as soon as I put a checkmark here, we're going to get a brand new folder created

41
00:02:31,430 --> 00:02:32,750
here called Da Vinci Code.

42
00:02:32,990 --> 00:02:36,080
And in here we're going to have a single settings that JSON file.

43
00:02:36,350 --> 00:02:42,290
If I were to open that file, you'll see we have this one key editor format and save such a true and

44
00:02:42,290 --> 00:02:47,930
as you can probably guess, this is simply the JSON setting representation of the visual setting we

45
00:02:47,930 --> 00:02:48,650
enabled here.

46
00:02:48,890 --> 00:02:54,020
So every single setting that we choose right here is being saved inside the settings that Jason filed.

47
00:02:54,290 --> 00:02:59,330
So you can always edit your settings right here if you want to, but if they're also able to be edited

48
00:02:59,330 --> 00:03:03,590
from the user interface, that's obviously a lot easier because you don't have to remember the name

49
00:03:03,590 --> 00:03:04,190
of the settings.

50
00:03:04,910 --> 00:03:09,980
Keep in mind, as we adjust every setting that we're about to adjust, each one will add a new line

51
00:03:10,040 --> 00:03:11,450
to the settings that JSON file.

52
00:03:11,570 --> 00:03:12,560
That's totally fine.

53
00:03:13,400 --> 00:03:13,760
All right.

54
00:03:14,030 --> 00:03:16,640
So we know we're going to format each file when we save it.

55
00:03:16,640 --> 00:03:19,550
The next question, of course, is what are we going to format it with?

56
00:03:19,730 --> 00:03:22,670
Because there are a variety of programs that can format our code.

57
00:03:22,970 --> 00:03:24,830
So right here, if you search for formatter.

58
00:03:26,320 --> 00:03:29,380
You're going to see this first option pop up called default for matter.

59
00:03:29,530 --> 00:03:33,160
And here is where we can tell this code what we would like to format the code with.

60
00:03:33,490 --> 00:03:37,420
And if I select this dropdown, you're going to see a whole bunch of options.

61
00:03:37,660 --> 00:03:40,300
And of course, we want to select Prettier right here.

62
00:03:40,570 --> 00:03:45,160
Now, keep in mind, if this option is not appearing for you, it's probably because you do not have

63
00:03:45,160 --> 00:03:46,870
the prettier extension installed.

64
00:03:47,110 --> 00:03:49,450
So make sure you do have that installed and this should pop up.

65
00:03:49,720 --> 00:03:52,540
So click prettier right here and that will take care of that.

66
00:03:52,960 --> 00:03:55,480
The next thing I want to search for is going to be tab size.

67
00:03:57,360 --> 00:04:01,710
Typically in JavaScript projects, a common tab size is going to be two, so I'm going to replace this

68
00:04:01,710 --> 00:04:07,560
four with a two and press enter and then I can go back to settings that JSON to verify that everything

69
00:04:07,560 --> 00:04:08,550
is working as expected.

70
00:04:08,550 --> 00:04:10,070
So I have three rules right here.

71
00:04:10,440 --> 00:04:15,240
The next two rules I'm going to add, we're going to write in line because there is no visual interface

72
00:04:15,240 --> 00:04:17,580
where we can accomplish this, but they should be pretty simple.

73
00:04:17,820 --> 00:04:22,650
So right here, after your last key value pair, you can place a comma and the logic for the next rule

74
00:04:22,650 --> 00:04:23,520
is going to be the same.

75
00:04:23,520 --> 00:04:28,140
So we're going to have a key here, which is going to be a string and our key is going to be s lint

76
00:04:28,320 --> 00:04:29,790
dot valid date.

77
00:04:30,210 --> 00:04:35,760
And what this is is going to be an array where we tell s lint are lint or what types of files we want

78
00:04:35,760 --> 00:04:36,330
it to lint.

79
00:04:36,660 --> 00:04:41,760
And again, the word lint means look over for errors and violations and things like that.

80
00:04:42,090 --> 00:04:44,030
So we're going to put two strings in this array.

81
00:04:44,040 --> 00:04:47,280
The first one is going to be a string of JavaScript, all lowercase.

82
00:04:47,760 --> 00:04:49,920
So we're telling it to lint all JavaScript files.

83
00:04:50,190 --> 00:04:55,320
And finally, we will also say Vue, because we want s lint to also apply to our view files, which

84
00:04:55,320 --> 00:04:56,340
we'll talk more about later.

85
00:04:57,150 --> 00:05:02,340
Finally, the last setting I want to add is to address a bug that I have seen while working with the

86
00:05:02,340 --> 00:05:03,990
vehicle I and its configurations.

87
00:05:04,320 --> 00:05:08,670
I've noticed that sometimes prettier doesn't work perfectly on JavaScript files.

88
00:05:08,670 --> 00:05:11,010
It kind of skips the beautification of them.

89
00:05:11,010 --> 00:05:12,120
When we say so.

90
00:05:12,120 --> 00:05:15,480
What we can do here is add a little bit more of a custom precise setting.

91
00:05:15,690 --> 00:05:18,090
It's going to be very similar to what we have in line three.

92
00:05:18,270 --> 00:05:24,060
But I'm going to also explicitly tell this code that for all JavaScript files, I also want the default

93
00:05:24,060 --> 00:05:25,350
formatter to be prettier.

94
00:05:25,590 --> 00:05:31,140
My hope, of course, is that the slide number three applies to all types of files in my code base because

95
00:05:31,140 --> 00:05:34,740
prettier can work on JavaScript files and view files in HTML.

96
00:05:34,890 --> 00:05:38,430
But for some reason on my end I found that it sometimes skips JavaScript files.

97
00:05:38,580 --> 00:05:41,520
So I want to add a second rule that's going to be very similar to this one.

98
00:05:41,820 --> 00:05:44,790
Basically, the way it's going to work is like this I'm going to create a new rule.

99
00:05:45,600 --> 00:05:50,820
And so in here, in double quotes, I'm going to say JavaScript and make sure you wrap JavaScript in

100
00:05:51,000 --> 00:05:51,690
square brackets.

101
00:05:51,810 --> 00:05:57,000
And basically this is saying, I'm going to make a rule here for just files that have JavaScript inside

102
00:05:57,000 --> 00:06:00,300
them or JavaScript files too, that I'm going to attach an object.

103
00:06:00,480 --> 00:06:05,340
And here inside that object, I'm going to copy the exact same line I have on line three.

104
00:06:05,340 --> 00:06:07,830
So I'm just going to literally copy and paste this thing right here.

105
00:06:08,460 --> 00:06:13,260
So basically what I'm saying is make prettier my default formatter and also make prettier my default

106
00:06:13,260 --> 00:06:15,150
formatter for all JavaScript files.

107
00:06:15,360 --> 00:06:20,730
So this category, again on line three, should in theory encompass this category, but for some reason

108
00:06:20,730 --> 00:06:21,390
it didn't for me.

109
00:06:21,390 --> 00:06:24,060
And this was a solution that helped solve the problem for me.

110
00:06:24,510 --> 00:06:24,750
All right.

111
00:06:24,750 --> 00:06:25,770
So go ahead and save that.

112
00:06:25,770 --> 00:06:29,280
And the good news is you don't have to ever touch this file again in this project.

113
00:06:29,400 --> 00:06:34,350
We have enabled a bunch of these settings to help us write our code automatically format it on save,

114
00:06:34,500 --> 00:06:37,770
set the default tab size so we never have to worry about it again.

115
00:06:37,890 --> 00:06:41,580
Make sure that yes, that validates our JavaScript and view files.

116
00:06:41,580 --> 00:06:45,480
And so with these settings we're now going to get all these benefits and we never have to worry about

117
00:06:45,480 --> 00:06:45,840
it again.

118
00:06:46,170 --> 00:06:50,940
If for some reason you see any issues with the JSON in here, for example, your editor is complaining.

119
00:06:51,120 --> 00:06:56,010
Keep in mind, in the previous lesson, I've provided a bunch of sample code that you can copy and paste.

120
00:06:56,010 --> 00:06:57,660
It's going to be this object right here.

121
00:06:57,870 --> 00:07:01,410
So you can simply copy and paste that content directly into your settings.

122
00:07:01,410 --> 00:07:07,050
That JSON file and that JSON blob that I provided should work just in case you've created a typo here

123
00:07:07,050 --> 00:07:07,770
or something like that.

124
00:07:07,950 --> 00:07:10,260
It's a way that you can always return back to a working state.

125
00:07:10,620 --> 00:07:10,890
All right.

126
00:07:10,890 --> 00:07:14,130
So that is our settings for the voice code editor.

127
00:07:14,130 --> 00:07:18,270
In the next lesson, we'll take a look at modifying our settings for the just test runner.

128
00:07:18,450 --> 00:07:19,140
I'll see you there.
