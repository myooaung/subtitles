1
00:00:00,330 --> 00:00:01,320
All right.

2
00:00:01,320 --> 00:00:05,910
In this lesson, we will add some custom colors to our tailwind config.

3
00:00:06,210 --> 00:00:13,110
As we know, the Tailwind Utility Library provides us with many small CC classes that we can use throughout

4
00:00:13,110 --> 00:00:17,310
our HTML to provide immediate styles to our elements.

5
00:00:17,520 --> 00:00:24,660
We saw earlier how Tailwind has classes for things like margin and padding and font size, etc. Well,

6
00:00:24,690 --> 00:00:30,960
Tailwind also ships with several classes for setting the color of things, whether it be the font color

7
00:00:30,960 --> 00:00:32,490
or the background color.

8
00:00:32,670 --> 00:00:35,580
But of course there's millions of possible colors that we can use.

9
00:00:35,790 --> 00:00:39,810
So the Tailwind Library starts with your basic default set of colors.

10
00:00:39,810 --> 00:00:42,270
It kind of gives you a very small color palette to work with.

11
00:00:42,600 --> 00:00:47,280
So for example, we have a available class in tailwind called Text Black.

12
00:00:47,520 --> 00:00:52,650
And as you might have guessed, if you apply that CSS class to an element, it will make the text black.

13
00:00:52,980 --> 00:00:59,040
The issue with our project is that we are looking for specific styles and specific colors that are inspired

14
00:00:59,040 --> 00:01:00,810
by the actual Google career site.

15
00:01:01,080 --> 00:01:06,570
So in a real world example, you might imagine that our designer at our company might give us the color

16
00:01:06,570 --> 00:01:13,470
scheme and the colors that they provide are simply not going to be available by default in the classes

17
00:01:13,470 --> 00:01:15,000
that tailwind provides for us.

18
00:01:15,210 --> 00:01:19,020
However, the beautiful thing about Tailwind is that it is really customizable.

19
00:01:19,260 --> 00:01:23,970
So in this lesson we're going to add those custom colors to our tailwind config file.

20
00:01:24,150 --> 00:01:31,350
And what's super cool is tailwind will actually generate automatic CAC classes for us and we'll be able

21
00:01:31,350 --> 00:01:35,040
to use them just like any other tailwind classes throughout our components.

22
00:01:35,370 --> 00:01:36,480
So here's how it works.

23
00:01:36,600 --> 00:01:39,990
Let's open up our tailwind dot config that JS file.

24
00:01:39,990 --> 00:01:45,330
So here in this code, I'm going to use command P on a mac, but you can use control P on a Windows

25
00:01:45,330 --> 00:01:47,580
computer to bring up the fuzzy file search.

26
00:01:47,760 --> 00:01:50,490
And I want to search for tailwind dot config.

27
00:01:50,940 --> 00:01:54,570
Yes, this is our tailwind configuration file.

28
00:01:54,810 --> 00:01:59,310
Earlier on we saw how we could extend some of the options available in tailwind.

29
00:01:59,520 --> 00:02:05,160
For example, we added the open sans font and merged it in with the available fonts in Tailwind.

30
00:02:05,370 --> 00:02:07,500
Well, we want to do something very similar here.

31
00:02:07,560 --> 00:02:11,610
We want to extend the colors that are available to use in tailwind.

32
00:02:11,910 --> 00:02:17,940
So right here after this font family object, I'm going to create a new property called Colors and I'm

33
00:02:17,940 --> 00:02:19,830
going to set colors equal to an object.

34
00:02:20,460 --> 00:02:25,920
And the way it works here is the key or property is going to be some kind of name that we'd like to

35
00:02:25,920 --> 00:02:29,730
assign to a color that we're going to be using in our project.

36
00:02:29,940 --> 00:02:33,480
So for example, here I'll provide my key in double quotes.

37
00:02:33,480 --> 00:02:40,320
Just because it has dashes, I'm going to create a named color called brand dash gray dash one.

38
00:02:40,470 --> 00:02:44,220
We can imagine that the company is our brand and this is our brand's grey color.

39
00:02:44,340 --> 00:02:49,020
And the reason I'm going to put one at the end is because in many projects you may have multiple variations

40
00:02:49,020 --> 00:02:54,690
of a color, you may have multiple grays or multiple blues, etc. So this is our first brand gray color.

41
00:02:54,810 --> 00:02:55,920
I'm just going to call it one.

42
00:02:56,310 --> 00:02:56,670
All right.

43
00:02:56,790 --> 00:03:03,450
And the value that I'm going to provide is going to be the hexadecimal code of the actual color that

44
00:03:03,450 --> 00:03:04,290
I want to represent here.

45
00:03:04,560 --> 00:03:10,500
So the one I want to do here is going to be hashtag daddy ce0.

46
00:03:10,740 --> 00:03:12,960
And you can see it's this kind of light gray color.

47
00:03:12,960 --> 00:03:17,550
This is an automatic feature in my editor that you may not have available, but it shows me the actual

48
00:03:17,550 --> 00:03:18,810
color that this represents.

49
00:03:19,170 --> 00:03:24,870
So what this means is Talman is going to look through all of its available possible cases, utility

50
00:03:24,870 --> 00:03:29,550
classes, for example, we talked about text black earlier, applying a black text.

51
00:03:29,760 --> 00:03:36,210
Well, now it's going to create a access class called text brand gray one automatically for us.

52
00:03:36,450 --> 00:03:40,830
So whatever we put here, it's going to append to its built in styles.

53
00:03:40,830 --> 00:03:45,030
So for example, text for text, I believe another option is BG for background.

54
00:03:45,150 --> 00:03:50,910
So now we're going to have an available CSS class called BG Brand Gray one, the idea being that it

55
00:03:50,910 --> 00:03:55,080
mimics the exact way the classes are named in tailwind.

56
00:03:55,200 --> 00:04:03,750
However, it's actually our own custom names that we specify with our own custom classes and corresponding

57
00:04:03,750 --> 00:04:04,260
colors.

58
00:04:04,410 --> 00:04:08,580
We're going to see how this actually works when we apply it to a HTML element in an upcoming lesson.

59
00:04:08,820 --> 00:04:12,300
But for now, I want to add two more colors that we're going to need throughout the project.

60
00:04:12,540 --> 00:04:15,300
So I'm just going to add another key value pair to this object.

61
00:04:15,510 --> 00:04:17,580
The next one is going to be brand blue one.

62
00:04:17,730 --> 00:04:19,860
We're going to have a common blue color throughout the app.

63
00:04:20,220 --> 00:04:25,350
And this is going to be hashtag 1967d2.

64
00:04:26,070 --> 00:04:27,420
You can see it's that blue color.

65
00:04:27,420 --> 00:04:31,680
Again, these styles are taken and inspired by the Google Careers website.

66
00:04:31,680 --> 00:04:34,320
So I am not a designer and I did not come up with these myself.

67
00:04:34,500 --> 00:04:37,770
I just took the corresponding styles and we're copying them over here.

68
00:04:38,010 --> 00:04:38,340
All right.

69
00:04:38,520 --> 00:04:41,220
Next one is going to be brand green one.

70
00:04:41,340 --> 00:04:43,470
We're going to have a green color in our project as well.

71
00:04:43,710 --> 00:04:48,210
And the code for this is hashtag 137333.

72
00:04:48,270 --> 00:04:49,500
You're going to see it's going to be this green.

73
00:04:49,680 --> 00:04:54,300
And of course, when I say this file prettier will do its work and add some extra commas and that is

74
00:04:54,300 --> 00:04:54,530
it.

75
00:04:54,540 --> 00:04:55,410
That is all we need.

76
00:04:55,590 --> 00:04:59,010
And now Tailwind will have a bunch of utility classes.

77
00:04:59,010 --> 00:04:59,640
Such as?

78
00:05:00,010 --> 00:05:06,460
Text brand gray, one text, brand blue, one text, brand green, one that we can use like any other

79
00:05:06,460 --> 00:05:08,110
tail in class in our project.

80
00:05:08,320 --> 00:05:14,080
Now, what I recommend you do, even though this is technically not required, is restart your project

81
00:05:14,140 --> 00:05:18,460
because sometimes it takes a little while for Tailwind to register and sometimes it misses the fact

82
00:05:18,640 --> 00:05:20,710
that we've made changes to our tailwind config file.

83
00:05:20,830 --> 00:05:22,060
Not always, but sometimes.

84
00:05:22,240 --> 00:05:26,020
So I just recommend turning off your project on my mac.

85
00:05:26,020 --> 00:05:27,970
I just said control C on windows.

86
00:05:27,970 --> 00:05:32,440
I imagine it's going to be control C or control D, press it a couple of times or even close the terminal

87
00:05:32,440 --> 00:05:33,490
window if it doesn't work.

88
00:05:33,730 --> 00:05:38,080
But afterwards you can go ahead and restart the project with NPM, run, serve and of course that will

89
00:05:38,080 --> 00:05:43,150
bundle and transpire all of your view assets, which is going to include our tail and config file.

90
00:05:43,300 --> 00:05:45,500
And that's going to allow us to register these new styles.

91
00:05:45,520 --> 00:05:45,790
All right.

92
00:05:46,030 --> 00:05:50,530
So now that we have these styles available in our project, we can start applying them in the next couple

93
00:05:50,530 --> 00:05:51,010
of lessons.

94
00:05:51,160 --> 00:05:51,820
I'll see you there.
