1
00:00:00,530 --> 00:00:01,340
Okay.

2
00:00:01,340 --> 00:00:05,690
So our job listings component is now utilizing the composition API.

3
00:00:05,900 --> 00:00:10,010
But as we can see, our setup method is getting pretty long and complex.

4
00:00:10,340 --> 00:00:15,680
So of course one way that we can simplify it is by moving some of this logic into composable functions

5
00:00:15,860 --> 00:00:17,810
that exist elsewhere in the code base.

6
00:00:18,050 --> 00:00:22,850
And I would argue even if these functions aren't reusable yet, in other words, if we're only going

7
00:00:22,850 --> 00:00:27,800
to use their logic in one component, I still don't think that's a problem because we still get the

8
00:00:27,800 --> 00:00:33,260
benefit of having a smaller, leaner component that is relying on a bunch of separate, independent,

9
00:00:33,260 --> 00:00:36,920
testable functions compared to cramming all this logic in here.

10
00:00:37,220 --> 00:00:43,850
For example, this Logic Online's 59 through 62, which talks to the reactive root object and gets the

11
00:00:43,850 --> 00:00:44,450
current page.

12
00:00:44,690 --> 00:00:50,030
This is logic that only exists on this component, but I can easily see it being used elsewhere.

13
00:00:50,180 --> 00:00:55,460
And even now it will help us to move this logic to a separate composable function that is then tested

14
00:00:55,460 --> 00:00:57,530
and ready to be reused whenever it's needed.

15
00:00:57,830 --> 00:01:01,070
So let's extract just this logic to a new composable function.

16
00:01:01,340 --> 00:01:07,640
I'm going to open up my file explorer and in the source directory you'll remember we have our composable

17
00:01:07,670 --> 00:01:08,990
folder and I'm here.

18
00:01:08,990 --> 00:01:15,020
I'll create my new one, my new file, that is, and I'll call it use current page that J.S. and the

19
00:01:15,020 --> 00:01:21,020
responsibility of this composable function will be to give me a reactive object representing the current

20
00:01:21,020 --> 00:01:26,840
page the user is on based on the page query param that we're going to be able to get from our root object.

21
00:01:27,230 --> 00:01:29,570
So right here I'm going to declare my arrow function.

22
00:01:29,570 --> 00:01:31,460
I'm going to call it use current page.

23
00:01:33,330 --> 00:01:38,250
And what I'm going to do for now is leave it blank because I want to remember to export default that

24
00:01:38,250 --> 00:01:44,280
arrow function up above and the body of my use current page function is basically going to be the exact

25
00:01:44,280 --> 00:01:45,570
same thing I have right here.

26
00:01:45,870 --> 00:01:49,080
So let me copy and paste the code I have in my job listings component.

27
00:01:49,380 --> 00:01:50,850
I'm going to put it right here in the body.

28
00:01:51,510 --> 00:01:53,720
We are going to need to modify it slight, slightly.

29
00:01:54,030 --> 00:01:59,490
So the first thing is here, we're using a current page constant to get the return value of the computed

30
00:01:59,490 --> 00:01:59,940
function.

31
00:02:00,150 --> 00:02:03,540
We don't want that reactive object saved to a constant.

32
00:02:03,630 --> 00:02:09,240
We simply want to return that reactive object as the final computation or return value of this composable.

33
00:02:09,540 --> 00:02:11,520
So right here, I'm just going to swap this with return.

34
00:02:12,570 --> 00:02:17,280
And obviously in order to use these two functions, use root and computed, we'll have to import them.

35
00:02:17,580 --> 00:02:23,430
So right here, I'm going to import use root and that is going to come from the router.

36
00:02:24,510 --> 00:02:28,590
And then above that, our computed function is going to come from view.

37
00:02:30,230 --> 00:02:34,730
It's important computed and that is going to come from view and now we're going to use computed to return

38
00:02:35,240 --> 00:02:39,980
a reactive object storing a number representing the current page.

39
00:02:39,980 --> 00:02:45,920
The users on remember the logic of this as well is if we don't have the page property on our queer params,

40
00:02:45,920 --> 00:02:51,890
we're going to default to a string of one which this number that pass in logic will convert to a integer

41
00:02:51,890 --> 00:02:52,310
of one.

42
00:02:52,310 --> 00:02:57,050
And then again, it's not just the return value of a number, it's a return value of a number that is

43
00:02:57,050 --> 00:03:00,470
being stored in a reactive object as returned by the computed function.

44
00:03:00,800 --> 00:03:04,970
So before we utilize this in our job listings component, the next thing I want to do is quickly add

45
00:03:04,970 --> 00:03:05,720
a test sweep.

46
00:03:06,020 --> 00:03:14,480
So right here in my tests unit composable folder, I'll create a new file called Use Current Page.

47
00:03:14,820 --> 00:03:15,480
That test.

48
00:03:15,740 --> 00:03:16,040
Yes.

49
00:03:16,700 --> 00:03:23,420
And let me drag my implementation to the left and then I'm going to get my terminal window open and

50
00:03:23,420 --> 00:03:25,190
run npm run test to watch.

51
00:03:26,470 --> 00:03:26,920
All right.

52
00:03:27,130 --> 00:03:32,890
So I'll begin by importing my newly created composable, which is called use current page, and that

53
00:03:32,890 --> 00:03:35,290
is going to come from source composable to use current page.

54
00:03:35,530 --> 00:03:40,480
I know in here that I'm going to be using use route and then using it to get this evaluation.

55
00:03:40,690 --> 00:03:43,490
So immediately I'm going to import and mark out use route.

56
00:03:43,780 --> 00:03:48,130
So right here, import use route and that is going to come from Vue router.

57
00:03:48,130 --> 00:03:51,730
And on the line below, we're going to do just mark providing view router.

58
00:03:51,910 --> 00:03:54,640
So now use route for the purposes of this file.

59
00:03:54,640 --> 00:03:56,740
And the test suite is now a just mock function.

60
00:03:57,220 --> 00:04:01,810
So right here, I'm going to describe that what I'm testing is my use current page composable function.

61
00:04:02,920 --> 00:04:06,100
And there's actually two scenarios where this function could run, right?

62
00:04:06,120 --> 00:04:07,570
There's two pathways it can take.

63
00:04:07,780 --> 00:04:11,500
Number one, our route object or more specifically, the query object.

64
00:04:11,500 --> 00:04:14,800
Inside, it may have a page property or it may not.

65
00:04:14,800 --> 00:04:19,390
And it's very important to test both of those scenarios because that's the both of the ways that the

66
00:04:19,390 --> 00:04:20,170
function could run.

67
00:04:20,500 --> 00:04:27,160
So right here, I'll begin with another describe and that's going to be when query params include page.

68
00:04:29,150 --> 00:04:31,190
And down below I'll do something very similar.

69
00:04:31,580 --> 00:04:32,930
I'm just going to copy and paste this.

70
00:04:32,930 --> 00:04:33,860
Describe below.

71
00:04:34,340 --> 00:04:38,090
And my second describe will be when query params exclude page.

72
00:04:38,100 --> 00:04:39,890
So in other words, when it's not present.

73
00:04:40,640 --> 00:04:42,770
All right, so let's write our first test right here.

74
00:04:42,770 --> 00:04:46,370
When the queer params include the page, it returns the page.

75
00:04:46,400 --> 00:04:49,310
In other words, it extracts it from the root object.

76
00:04:49,910 --> 00:04:54,210
All right, so we need to have a root object here that is going to mimic the design we have here.

77
00:04:54,260 --> 00:04:57,860
So it has to have a query property, which is its own object with a page property.

78
00:04:58,160 --> 00:05:01,370
So right here, use root, I want to mock return value.

79
00:05:01,730 --> 00:05:02,860
It's going to be an object.

80
00:05:02,870 --> 00:05:04,430
It needs to have a query property.

81
00:05:04,880 --> 00:05:09,080
And to fulfill this implementation and this test, it also needs a page property.

82
00:05:09,410 --> 00:05:12,430
Let's set that to an arbitrary string representing any number we want.

83
00:05:12,440 --> 00:05:13,310
How about five?

84
00:05:13,880 --> 00:05:21,800
And then what I expect is I'm going to be able to invoke my use current page composable function and

85
00:05:21,800 --> 00:05:23,450
that's going to give me a reactive object.

86
00:05:23,450 --> 00:05:28,580
So result is the reactive object I need to reach inside it to get its value property.

87
00:05:28,910 --> 00:05:34,010
So right here, if I go into that reactive object and gets current value, if everything's correct in

88
00:05:34,010 --> 00:05:37,280
my implementation, then my logic should have gotten this string of five.

89
00:05:37,460 --> 00:05:39,710
It should have passed it into number that pass it.

90
00:05:39,890 --> 00:05:42,980
And I should expect this to be the value five.

91
00:05:43,760 --> 00:05:44,480
Let's save that.

92
00:05:44,480 --> 00:05:47,000
And we could see it passes and down below.

93
00:05:47,000 --> 00:05:48,390
We can take care of the other one.

94
00:05:48,410 --> 00:05:49,160
So right here.

95
00:05:50,420 --> 00:05:56,410
If the career params do not include page, we're going to default to page one.

96
00:05:57,080 --> 00:06:02,990
So right here we once again need to set up our use root function to return something to fit this test.

97
00:06:03,440 --> 00:06:08,840
So I'm use route, I'm going to mark return value and I'm still going to have a query object because

98
00:06:08,840 --> 00:06:10,190
that is always going to exist.

99
00:06:10,190 --> 00:06:14,540
That is part of the use route object or more specifically the route object.

100
00:06:14,750 --> 00:06:15,860
And that function gives to me.

101
00:06:16,010 --> 00:06:20,690
However, I'm going to leave my query object empty because this is the case I want to simulate when

102
00:06:20,690 --> 00:06:22,910
we do not have the page query param.

103
00:06:23,180 --> 00:06:27,950
So this is the case where this logic is going to evaluate to undefined, which means we need to fall

104
00:06:27,950 --> 00:06:32,690
back to the string of one and then get one as our final reactive value here.

105
00:06:33,080 --> 00:06:35,120
So right here, same logic I'm going to do cons.

106
00:06:35,120 --> 00:06:38,480
The result is going to be invoking use current page.

107
00:06:38,780 --> 00:06:40,640
That's going to give me a reactive object.

108
00:06:40,850 --> 00:06:45,320
Then I can say what is a result value going to be in the case that there is no query param, it should

109
00:06:45,320 --> 00:06:46,280
be the number one.

110
00:06:47,180 --> 00:06:47,420
All right.

111
00:06:47,420 --> 00:06:47,960
So there we go.

112
00:06:47,960 --> 00:06:49,580
We're going to get both of those tests passing.

113
00:06:49,580 --> 00:06:52,820
And with that, we are good to move this logic into our component.

114
00:06:53,180 --> 00:06:59,630
So I'm going to close our test file, move this to the right hand side, and let's start by importing

115
00:06:59,630 --> 00:06:59,750
it.

116
00:06:59,750 --> 00:07:05,030
So right here, I'm going to import my new composable import use current page.

117
00:07:05,030 --> 00:07:07,850
It is a default export, so we do not need curly braces.

118
00:07:08,210 --> 00:07:11,300
That's going to come from the source directory composable.

119
00:07:11,300 --> 00:07:13,940
And then finally our file is called Use Current Page.

120
00:07:14,780 --> 00:07:19,790
And all I'm going to do is replace this former logic with my new composable function.

121
00:07:19,970 --> 00:07:24,620
Remember, at the end of the day, what I'm returning here is current page, and current page is also

122
00:07:24,620 --> 00:07:28,880
a constant that needs to exist here because it's being used right here and right here.

123
00:07:29,240 --> 00:07:32,870
So all I'm going to do to show you the before and after is comment this out.

124
00:07:33,050 --> 00:07:38,300
And here I'm going to say contact's current page is simply going to be the reactive object returned

125
00:07:38,600 --> 00:07:41,150
by my use current page composable function.

126
00:07:41,360 --> 00:07:41,690
All right.

127
00:07:41,870 --> 00:07:45,380
And this will still work with everything because we are getting a reactive object here.

128
00:07:45,590 --> 00:07:51,110
So all of our old implementation, which is referencing current page value here, current page value

129
00:07:51,140 --> 00:07:56,480
here and current page that value here, all of that will still work because this composable function

130
00:07:56,570 --> 00:07:59,480
is still returning a reactive object with a value property.

131
00:07:59,780 --> 00:08:03,890
That's why I make sure to return the actual computed function indication because we're getting the kind

132
00:08:03,890 --> 00:08:08,420
of object we need for all of these other computed functions in this component to work.

133
00:08:08,690 --> 00:08:13,430
All that's changed is that we moved this logic to this separate function that's tested right here.

134
00:08:13,700 --> 00:08:18,200
And again, the advantage of this approach is when we test job listings, we're going to be able to

135
00:08:18,200 --> 00:08:20,570
test it without having to worry about this logic anymore.

136
00:08:20,720 --> 00:08:24,560
We can simply mark out the use current page composable to do whatever it needs to do.

137
00:08:24,860 --> 00:08:29,090
And the other benefit, of course, is now we can reuse this logic in whatever components we want.

138
00:08:29,450 --> 00:08:35,060
So with that said, we can go ahead and remove this collection of comments it outlines, save that,

139
00:08:35,060 --> 00:08:38,480
and if I scroll up you'll see that that also removes the need for user out.

140
00:08:38,780 --> 00:08:40,220
I'm going to remove that line as well.

141
00:08:40,460 --> 00:08:43,190
We might be getting some failures here and that is totally fine.

142
00:08:43,190 --> 00:08:48,810
Those failures are coming from the job listings component, which is now using the new composable that

143
00:08:48,860 --> 00:08:49,730
we just implemented.

144
00:08:49,910 --> 00:08:50,720
Totally fine.

145
00:08:50,720 --> 00:08:54,890
We'll come back to those areas in a later lesson, but this definitely moves us in a much better step.

146
00:08:55,070 --> 00:08:59,210
And we'll talk more about how we can continue cleaning up the job listings component in the follow up

147
00:08:59,210 --> 00:08:59,570
lessons.

148
00:08:59,780 --> 00:09:00,530
So I'll see you there.
