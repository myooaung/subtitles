WEBVTT
1
00:00:00.770 --> 00:00:01.760
All right.

2
00:00:01.760 --> 00:00:05.930
So the next component that I want to build out is a profile image component.

3
00:00:06.080 --> 00:00:11.540
And it will be that profile image that appears in the top right corner of our website when the user

4
00:00:11.540 --> 00:00:12.290
signs in.

5
00:00:12.620 --> 00:00:16.910
So as I mentioned, we're not going to have an actual authentication system and we're not even going

6
00:00:16.910 --> 00:00:22.280
to have a custom user image because that would require us saving some kind of data on the backend in

7
00:00:22.280 --> 00:00:23.120
some kind of database.

8
00:00:23.270 --> 00:00:24.920
And we want to keep this app pretty simple.

9
00:00:25.190 --> 00:00:28.370
So what I'm going to do instead is just use a hardcoded image.

10
00:00:28.640 --> 00:00:34.220
So right here, my second tab, I have a nice PNG image of link from the Legend of Zelda franchise.

11
00:00:34.370 --> 00:00:40.280
And I have provided this link as a resource to this lesson or perhaps as a text article before this

12
00:00:40.280 --> 00:00:43.040
lesson, so that you can copy this link for yourself.

13
00:00:43.040 --> 00:00:45.960
I'm just going to be using this image within my project.

14
00:00:45.980 --> 00:00:46.310
All right.

15
00:00:46.700 --> 00:00:47.000
All right.

16
00:00:47.000 --> 00:00:47.860
So let's go ahead here.

17
00:00:47.870 --> 00:00:54.170
What I'm going to do is transition back to Visual Studio code and in my components directory, I'm going

18
00:00:54.170 --> 00:00:55.970
to create a brand new component.

19
00:00:56.150 --> 00:00:58.730
I'm going to call it profile image, port view.

20
00:01:00.850 --> 00:01:02.880
All right, so what do we need in a view component?

21
00:01:02.890 --> 00:01:04.150
We need a template tag.

22
00:01:04.960 --> 00:01:07.300
And in here, I'm going to insert an image tag.

23
00:01:07.300 --> 00:01:08.110
So IMG.

24
00:01:08.380 --> 00:01:12.670
And of course, to provide the source of the image, we have to use our S or C attribute.

25
00:01:13.000 --> 00:01:16.540
And so right here, I'm going to paste that link that I just had in my browser.

26
00:01:16.780 --> 00:01:18.550
That is my PNG G link.

27
00:01:18.550 --> 00:01:23.170
I'm going to close off my image tag right here and below.

28
00:01:23.170 --> 00:01:26.800
I also want to add a couple Tailwind classes, so I'm going to add class here.

29
00:01:27.220 --> 00:01:31.840
I want to make this image 32 pixels by 32 pixels in terms of height and width.

30
00:01:32.140 --> 00:01:36.220
So I can apply aw8 class to make the width 32 pixels.

31
00:01:36.400 --> 00:01:42.790
Remember, all w classes deal with width and tailwind and we have a complementary set of utility access

32
00:01:42.790 --> 00:01:45.100
classes that start with H ages for height.

33
00:01:45.370 --> 00:01:47.800
And so I want to apply H eight here as well.

34
00:01:47.920 --> 00:01:49.870
That is a height of 32 pixels.

35
00:01:50.680 --> 00:01:54.370
And then I also want to apply a class called Object Contain.

36
00:01:54.910 --> 00:02:01.180
What this is going to do is force the image to resize itself to fit the 32 by 32 dimensions that I've

37
00:02:01.180 --> 00:02:02.080
specified for it.

38
00:02:02.350 --> 00:02:05.320
And finally, I want to make our profile image rounded.

39
00:02:05.320 --> 00:02:10.810
I want to make it circular so I can do that by providing the rounded three Excel class here.

40
00:02:11.740 --> 00:02:15.100
Now, in case you're curious about as hard coding, this asserts the attribute.

41
00:02:15.310 --> 00:02:21.280
It's definitely not ideal because this image is not reusable in the sense that we can't make the image

42
00:02:21.460 --> 00:02:22.300
dynamic right.

43
00:02:22.300 --> 00:02:26.320
It's always going to be this picture of link that we get directly from this URL.

44
00:02:26.470 --> 00:02:30.430
And of course we do want to eventually add customization to our components.

45
00:02:30.430 --> 00:02:33.370
We're going to talk about how to do that in just a little bit.

46
00:02:33.370 --> 00:02:33.670
All right.

47
00:02:33.670 --> 00:02:35.320
But just for now, we're going to hard code this.

48
00:02:35.470 --> 00:02:40.930
And in fact, we might move this component to a little bit more of a flexible approach in just a minute.

49
00:02:41.200 --> 00:02:43.960
But for now, this is good enough for me for our template.

50
00:02:44.170 --> 00:02:46.210
So let's also define our script tags.

51
00:02:47.050 --> 00:02:52.000
And here as always, we're going to export default a JavaScript object and we'll provide our profile

52
00:02:52.000 --> 00:02:58.270
image with a name property and we'll call it profile image and add a line break here and save the file.

53
00:02:59.220 --> 00:03:00.050
Okay.

54
00:03:00.050 --> 00:03:05.930
So now we have an opportunity to review some of the concepts introduced earlier in the course in an

55
00:03:05.930 --> 00:03:08.630
attempt to make this component a little bit more flexible.

56
00:03:08.780 --> 00:03:14.930
I do want to move this piece of data away from our template so that it's not hardcoded directly to my

57
00:03:15.260 --> 00:03:19.880
RC attribute, because otherwise, as we talked about, it will always be this image.

58
00:03:20.210 --> 00:03:26.630
So let's imagine I have some data attached to our profile image and I'm going to provide my data method

59
00:03:26.630 --> 00:03:29.840
right here, and I'm going to return a JavaScript object.

60
00:03:29.870 --> 00:03:32.570
This will be the data available, in my view, component.

61
00:03:32.840 --> 00:03:39.850
And let's say I have an image link property and I'm going to set it equal to this URL right here.

62
00:03:39.860 --> 00:03:43.070
So I'm going to copy this string directly and I'm going to paste it right here.

63
00:03:43.280 --> 00:03:49.730
And my question for you is, how can we connect the data that we have right here in image link to our

64
00:03:49.730 --> 00:03:51.400
answers to attribute dynamically?

65
00:03:51.410 --> 00:03:57.620
In other words, and here's a hint how can we bind a piece of data on our component to an attribute

66
00:03:58.040 --> 00:03:59.420
in our HTML template?

67
00:03:59.660 --> 00:04:03.410
Well, you may recall that we have our v bind view directive.

68
00:04:03.410 --> 00:04:03.710
Right?

69
00:04:03.830 --> 00:04:04.670
And how does that work?

70
00:04:04.880 --> 00:04:10.400
Well, we start with the V bind syntax before the attribute that we want to connect to or bind to.

71
00:04:10.640 --> 00:04:14.450
So right here I'm going to do V bind and then it's a colon syntax.

72
00:04:14.570 --> 00:04:20.780
We did this earlier with an anchor tag where we bound to the h ref attribute, but we can bind to any

73
00:04:20.780 --> 00:04:23.720
H to my attribute that we want on any single element.

74
00:04:23.960 --> 00:04:30.530
So in this case, I'm going to bind myself to the associate attribute on my image element and what value

75
00:04:30.530 --> 00:04:32.270
do I want to provide to SLC?

76
00:04:32.450 --> 00:04:36.320
It's whatever value I have on my image linked property in data.

77
00:04:36.500 --> 00:04:38.060
So I'm going to provide image link.

78
00:04:39.090 --> 00:04:39.570
All right.

79
00:04:39.840 --> 00:04:44.880
So even though this isn't necessarily going to make it any more dynamic because our data is still going

80
00:04:44.880 --> 00:04:46.290
to be bound and hard coded.

81
00:04:46.500 --> 00:04:51.940
Well, it still moves us a little bit more in a flexible direction, because although we haven't discussed

82
00:04:51.940 --> 00:04:54.960
that yet, there are ways to change this image link.

83
00:04:55.110 --> 00:05:00.990
And if we're able to change the value of our image like URL to another image, well then we will automatically

84
00:05:00.990 --> 00:05:07.320
provide that image and we can swap out the CRC of our image and thus dynamically render a brand new

85
00:05:07.320 --> 00:05:09.190
image in the same component.

86
00:05:09.210 --> 00:05:09.510
Right.

87
00:05:09.690 --> 00:05:12.270
So it moves a little bit more in a flexible direction.

88
00:05:12.270 --> 00:05:18.210
We don't know how to change this value yet, but it is a little bit of a better design and thinking

89
00:05:18.210 --> 00:05:21.020
forward to having a more flexible component.

90
00:05:21.030 --> 00:05:23.700
This is a slightly better design than what we started with.

91
00:05:23.730 --> 00:05:24.090
All right.

92
00:05:24.330 --> 00:05:26.730
So of course, Iceland gives us a warning here.

93
00:05:26.730 --> 00:05:31.830
And the reason is because it wants us to use the shortcut syntax for V bind and that is just the colon.

94
00:05:32.640 --> 00:05:38.630
So once again, a colon to bind the accuracy attribute to the image like property on our data object.

95
00:05:38.670 --> 00:05:38.970
All right.

96
00:05:39.210 --> 00:05:40.980
That's all there really is to cover here.

97
00:05:41.190 --> 00:05:44.700
You might have a question, which is, do we really need tests for this component right now?

98
00:05:44.910 --> 00:05:46.740
And I'd argue right now, not really.

99
00:05:46.890 --> 00:05:48.980
At the end of the day, it's a basic image tag.

100
00:05:48.990 --> 00:05:50.220
There's not much behavior.

101
00:05:50.400 --> 00:05:55.140
Maybe later on we would add a test once we start to figure out what exactly this component is doing

102
00:05:55.140 --> 00:05:55.470
for us.

103
00:05:55.680 --> 00:06:01.230
But right now, it's kind of a basic static piece of HTML that doesn't really change or vary or have

104
00:06:01.230 --> 00:06:02.190
much user interaction.

105
00:06:02.400 --> 00:06:07.620
So for now, I'm going to be okay with not writing a test, but maybe later will come back and add some

106
00:06:07.800 --> 00:06:08.820
tests to this as well.

107
00:06:09.120 --> 00:06:09.480
All right.

108
00:06:09.660 --> 00:06:14.430
So now that we have our profile image rendered, we can go ahead and start trying to render it in our

109
00:06:14.430 --> 00:06:15.060
main NAV.
