1
00:00:00,560 --> 00:00:01,310
Okay.

2
00:00:01,310 --> 00:00:04,910
So in the previous lesson we updated our actions file.

3
00:00:05,060 --> 00:00:10,160
Let's now update our test file for our actions to be in TypeScript as well.

4
00:00:10,550 --> 00:00:15,980
So right here in my tests unit, store directory, I'm going to change actions that test that yes.

5
00:00:16,430 --> 00:00:18,350
To actions that test that T.

6
00:00:18,350 --> 00:00:21,170
S and we'll see what kind of problems we have to solve.

7
00:00:21,560 --> 00:00:21,860
Okay.

8
00:00:21,860 --> 00:00:23,840
So it looks like we only have one issue.

9
00:00:23,840 --> 00:00:28,070
And you can see here that TypeScript does not understand Microsoft value.

10
00:00:28,250 --> 00:00:31,130
And if I hover my mouse over this, you can see property.

11
00:00:31,130 --> 00:00:33,740
Microsoft value does not exist on type.

12
00:00:33,740 --> 00:00:37,910
And then it's giving us the actual function definition, a function that returns a promise.

13
00:00:38,690 --> 00:00:39,650
So what's going on here?

14
00:00:40,100 --> 00:00:45,890
So what's going on here is we imported get jobs, which is our API function call in line number three.

15
00:00:45,890 --> 00:00:48,350
As a reminder, here is what that function looks like.

16
00:00:48,710 --> 00:00:50,300
So this is what TypeScript sees.

17
00:00:50,540 --> 00:00:56,690
And the problem is TypeScript does not understand that when we use this syntax of just mock online number

18
00:00:56,690 --> 00:01:02,360
four, we are replacing our original get jobs implementation with a just mock function.

19
00:01:02,810 --> 00:01:04,850
TypeScript doesn't understand that we're doing that.

20
00:01:04,970 --> 00:01:10,820
It still thinks it has the original get jobs function and the original get jobs function does not have

21
00:01:10,820 --> 00:01:12,830
a microsoft value method on it.

22
00:01:13,160 --> 00:01:14,900
So that's why TypeScript is complaining.

23
00:01:15,230 --> 00:01:21,260
TypeScript doesn't understand that the mock function that we now have after line four does have mock

24
00:01:21,260 --> 00:01:21,960
resolved value.

25
00:01:21,980 --> 00:01:24,830
And that's what Get Jobs is at this moment of execution.

26
00:01:25,130 --> 00:01:30,590
Just or rather, TypeScript still thinks it has this get jobs function right here, which is our own

27
00:01:30,590 --> 00:01:32,840
regular function that does not have this method.

28
00:01:32,990 --> 00:01:34,730
And that's why TypeScript is complaining.

29
00:01:35,030 --> 00:01:40,670
So what we basically have to do is communicate to TypeScript that line number four effectively changed

30
00:01:41,000 --> 00:01:44,630
the type of the get jobs function to be a just mock function.

31
00:01:44,870 --> 00:01:47,930
And here's what we're going to do on the line below here.

32
00:01:47,930 --> 00:01:51,920
I'm going to declare another constant and I'm going to call it get jobs mock.

33
00:01:53,090 --> 00:01:57,980
And on the right hand side of an equal sign, I'm going to reference my get jobs function and then I'm

34
00:01:57,980 --> 00:02:01,790
going to use the as syntax that I introduced a little bit earlier in the section.

35
00:02:02,120 --> 00:02:08,150
Remember, as is a keyword that we can use to tell TypeScript to treat something as something else.

36
00:02:08,480 --> 00:02:12,860
Remember, this isn't always perfect because we are kind of telling TypeScript to trust us.

37
00:02:12,860 --> 00:02:15,860
We're telling TypeScript that we know something that it does not.

38
00:02:16,010 --> 00:02:20,450
And thus TypeScript should treat one thing as another thing, even though it naturally doesn't want

39
00:02:20,450 --> 00:02:20,690
to.

40
00:02:20,990 --> 00:02:26,270
But in this scenario, I think it's okay because this is indeed a scenario where TypeScript doesn't

41
00:02:26,270 --> 00:02:27,890
know something that we indeed do know.

42
00:02:28,040 --> 00:02:29,900
We know that I'm line number four.

43
00:02:29,990 --> 00:02:32,690
We're going to replace get jobs with a different type of object.

44
00:02:32,900 --> 00:02:37,490
So now we can tell TypeScript we've done something that we know is going to convert a type of get jobs.

45
00:02:37,670 --> 00:02:41,510
Let me explicitly communicate that to you so you can understand that as well.

46
00:02:41,870 --> 00:02:46,130
So right here, what I'm going to say is get jobs, treat that as a just mock function.

47
00:02:46,310 --> 00:02:52,280
And the way I do that is I have just automatically available in all my test files and on my just object.

48
00:02:52,280 --> 00:02:54,740
There is a type called mock.

49
00:02:55,520 --> 00:02:58,400
So what I'm going to say is get jobs as just mock.

50
00:02:58,400 --> 00:03:02,840
And if I click into this, you're going to see I'm going to go into the actual type definition file

51
00:03:02,840 --> 00:03:03,680
in the just library.

52
00:03:03,830 --> 00:03:05,320
And you can see it is an interface.

53
00:03:05,330 --> 00:03:07,940
It is a type that describes a specific function.

54
00:03:08,240 --> 00:03:14,480
So all I'm saying to TypeScript here is I know you get jobs as a regular function, please treat it

55
00:03:14,480 --> 00:03:16,400
as just mock instead.

56
00:03:16,520 --> 00:03:21,710
Please treat it as this interface rather than the interface you can infer from the function that's important.

57
00:03:22,130 --> 00:03:22,400
All right.

58
00:03:22,550 --> 00:03:28,400
Now, to be clear, get jobs, mock and get jobs are both references to the exact same function.

59
00:03:28,640 --> 00:03:31,580
We have not changed anything as far as implementation here.

60
00:03:31,760 --> 00:03:35,960
What we have changed is how TypeScript receives that type of get jobs.

61
00:03:36,290 --> 00:03:36,560
Right.

62
00:03:36,560 --> 00:03:41,450
So if we got rid of this second half and you think about what this core line is doing, all we're doing

63
00:03:41,450 --> 00:03:46,640
is creating another name of get jobs mark for an existing entity, it will just get jobs.

64
00:03:46,820 --> 00:03:51,590
So we're not creating any new function, we're not creating any new value, we're not creating any copy

65
00:03:51,590 --> 00:03:52,340
or anything like that.

66
00:03:52,550 --> 00:03:55,640
What we're changing is the type recognition for TypeScript.

67
00:03:55,790 --> 00:03:57,840
We're saying this thing called get jobs.

68
00:03:57,860 --> 00:04:01,280
TypeScript view its type as something else than what you think it is.

69
00:04:01,460 --> 00:04:03,260
Please view it as a just mock.

70
00:04:03,680 --> 00:04:04,010
All right.

71
00:04:04,220 --> 00:04:10,580
So now right here where we are referencing get jobs, we can reference get jobs mock because TypeScript

72
00:04:10,580 --> 00:04:16,790
knows that this it's going to treat as a just mock function which indeed does have a microsoft value

73
00:04:17,630 --> 00:04:18,470
method on it.

74
00:04:18,470 --> 00:04:22,400
And thus it's not going to complain because it knows that that object does have the method that we're

75
00:04:22,400 --> 00:04:23,090
invoking here.

76
00:04:23,480 --> 00:04:29,600
Now, here on line 22, we can use either get jobs or get jobs mock because remember, they're still

77
00:04:29,600 --> 00:04:35,540
referencing the exact same function in terms of practical JavaScript technicality.

78
00:04:35,540 --> 00:04:35,810
Right.

79
00:04:35,990 --> 00:04:40,760
All this is is a different name for the same object with a different type interpretation.

80
00:04:40,760 --> 00:04:41,030
Right.

81
00:04:41,300 --> 00:04:47,300
So right here, we don't actually have to update get jobs to be get jobs mock because from the perspective

82
00:04:47,300 --> 00:04:52,280
of the test suite, when it runs because of just mock, this is already going to be a mock function

83
00:04:52,520 --> 00:04:55,730
and thus it's still going to be able to track whether it's been called.

84
00:04:56,060 --> 00:05:00,050
So in other words, when I do this logic right here, I'm still targeting the exact.

85
00:05:00,270 --> 00:05:03,180
Same function that I have referenced by the get jobs name.

86
00:05:03,510 --> 00:05:09,570
This line of syntax exists solely for the purpose of TypeScript, and because TypeScript only views

87
00:05:09,570 --> 00:05:15,180
get jobs mark as being of the right type, even though it's the same function underneath the HUD because

88
00:05:15,180 --> 00:05:17,820
TypeScript only views this thing as having the right type.

89
00:05:18,000 --> 00:05:20,010
That's why I have to reference get jobs, mark.

90
00:05:20,130 --> 00:05:25,380
Whenever I call a method on that object, but not whenever I actually test that it has been invoked

91
00:05:25,380 --> 00:05:25,890
properly.

92
00:05:26,370 --> 00:05:26,730
All right.

93
00:05:26,730 --> 00:05:27,750
So hopefully that makes sense.

94
00:05:27,750 --> 00:05:29,910
And with that, we can see there are no more violations.

95
00:05:30,120 --> 00:05:35,400
And I can head to my terminal and run our entire test suite and everything should hopefully pass the

96
00:05:35,400 --> 00:05:35,850
right here.

97
00:05:35,850 --> 00:05:37,650
NPM Run Test Colon Unit.

98
00:05:38,550 --> 00:05:39,960
Let's run everything to be safe.

99
00:05:40,820 --> 00:05:47,450
And that should complete our modification of our actions file and the corresponding test file to Typekit.

100
00:05:47,900 --> 00:05:53,060
So here we are running all of our components as well as all of our typescript and view related logic.

101
00:05:53,450 --> 00:05:56,390
Give it a few seconds here and we can see everything passes.

102
00:05:56,600 --> 00:05:56,930
All right.

103
00:05:57,230 --> 00:06:03,710
So once again, this syntax, the syntax tells TypeScript to treat something or more specifically,

104
00:06:03,710 --> 00:06:06,740
its type as something different that we explicitly specified.

105
00:06:06,980 --> 00:06:12,170
So TypeScript wants to treat, get jobs type as the type, an inverse from the original function, which

106
00:06:12,170 --> 00:06:17,210
is just a function that accepts no parameters and returns a promise where instead telling TypeScript,

107
00:06:17,330 --> 00:06:18,860
please don't treat it as that.

108
00:06:18,920 --> 00:06:20,670
Trust us, we know what we're doing.

109
00:06:20,690 --> 00:06:25,010
Please treat it as a just mock function instead of a just mock function.

110
00:06:25,160 --> 00:06:30,560
And that interface has its own separate interface with its own separate defined methods such as mock

111
00:06:30,560 --> 00:06:35,060
resolve value, which allows TypeScript to say, okay, I know that get jobs.

112
00:06:35,060 --> 00:06:40,640
Mock has a mock resolve value method because I'm treating its type as a mock object rather than the

113
00:06:40,640 --> 00:06:43,940
original type, and thus it's going to permit this operation right here.

114
00:06:44,390 --> 00:06:44,780
All right.

115
00:06:44,780 --> 00:06:46,370
That's all there is to cover in this lesson.

116
00:06:46,370 --> 00:06:47,930
So I will see you in the next one.
