1
00:00:00,460 --> 00:00:06,970
In the previous lesson, we started adding our menu items to our main nav component and our main NAV

2
00:00:06,970 --> 00:00:13,390
now consists of a unordered list with six different list items, and we saw the redundancy of having

3
00:00:13,390 --> 00:00:19,270
to copy and paste each different list item and then modify a small detail about it, which was the actual

4
00:00:19,270 --> 00:00:20,920
text inside the hyperlink.

5
00:00:21,190 --> 00:00:26,440
So if we once again observe the six list items that we have right here, we'll notice that they're actually

6
00:00:26,440 --> 00:00:28,600
very similar to each other.

7
00:00:28,900 --> 00:00:31,540
There's only two actual differences between all of them.

8
00:00:31,720 --> 00:00:34,660
Number one is the text that we display right here.

9
00:00:34,960 --> 00:00:39,430
And number two is the very first one does not have that EML nine class.

10
00:00:39,670 --> 00:00:45,160
So that first list element does not add any additional left margin on its left side.

11
00:00:45,790 --> 00:00:50,800
But other than that, these are basically all pretty close, in fact, even identical when it comes

12
00:00:50,800 --> 00:00:53,740
to the classes and the two elements that they contain.

13
00:00:54,070 --> 00:00:59,740
So for now, we can ignore the first one since it's slightly different and focus just on the last five.

14
00:00:59,860 --> 00:01:05,380
These are all pretty much identical with the exception of the text that they displayed to the user.

15
00:01:05,770 --> 00:01:12,040
Well, wouldn't it be great if we could automate this render using view instead of having to copy and

16
00:01:12,040 --> 00:01:13,300
paste this five times?

17
00:01:13,480 --> 00:01:19,330
Wouldn't it be great if we can just say, Hey, I want a list item, but I want it five times for these

18
00:01:19,330 --> 00:01:26,200
five different values of locations, life, how we hire, etc. will view allows us to do that with something

19
00:01:26,200 --> 00:01:28,300
called the V4 Directive.

20
00:01:28,480 --> 00:01:34,720
It's another directive, meaning it's another special view command that we can use to help us optimize

21
00:01:34,720 --> 00:01:36,430
our code and our template.

22
00:01:36,730 --> 00:01:38,310
Let's take a look at how it works.

23
00:01:38,320 --> 00:01:42,040
The first thing I'm going to do is navigate to the very bottom of my component.

24
00:01:42,280 --> 00:01:48,100
Here we have our data object and again, all of these properties are available to use within my HTML

25
00:01:48,100 --> 00:01:48,490
template.

26
00:01:48,760 --> 00:01:55,930
And what I want to do here is add a new property called menu items, and I'm going to set it equal to

27
00:01:55,930 --> 00:01:57,040
an array.

28
00:01:57,100 --> 00:01:57,430
All right.

29
00:01:57,430 --> 00:02:02,020
So this is our first value that's going to be not a string, but that's totally fine.

30
00:02:02,020 --> 00:02:05,410
We can have our data object store, whatever kind of values we want.

31
00:02:05,830 --> 00:02:10,720
In this array, I'm going to populate all of our unique menu item text values.

32
00:02:10,960 --> 00:02:12,630
So we're going to start again with teams.

33
00:02:13,540 --> 00:02:22,510
We're going to start with locations, then life at Fogo, then how we hire and students and jobs.

34
00:02:22,780 --> 00:02:23,110
All right.

35
00:02:23,350 --> 00:02:26,410
And when I save this prettier is going to break this up across multiple lines.

36
00:02:26,410 --> 00:02:27,700
And that's totally fine.

37
00:02:27,820 --> 00:02:28,150
All right.

38
00:02:28,510 --> 00:02:33,670
So now what I'm going to do is scroll all the way to back where we wrote all these list items.

39
00:02:33,880 --> 00:02:37,690
And for now, I'm going to keep this one since it is a little bit different.

40
00:02:37,690 --> 00:02:40,720
And so we are going to duplicate the value of teams in just a second.

41
00:02:40,900 --> 00:02:43,690
But I promise you, we're going to fix this issue in an upcoming lesson.

42
00:02:43,990 --> 00:02:52,030
What I ultimately want to do is get rid of this and then render one single fly and tell you to replicate

43
00:02:52,030 --> 00:02:57,790
or duplicate that ally for all of the elements in my array.

44
00:02:57,850 --> 00:02:59,260
All right, so here's how it's going to work.

45
00:02:59,260 --> 00:03:01,630
I'm going to get rid of these last four.

46
00:03:02,980 --> 00:03:08,050
And for this one, I'm going to keep this and I'm going to add my directive right here in line.

47
00:03:08,140 --> 00:03:15,670
My DirecTV is called V for the V for DirecTV allows us to iterate over some kind of iterable, meaning

48
00:03:15,670 --> 00:03:18,880
an array or an object or anything that has multiple elements.

49
00:03:19,120 --> 00:03:24,340
And for each one of those elements, we're telling Vue to create this HTML element.

50
00:03:24,700 --> 00:03:29,440
So in this case, when we iterate over our menu items array, we're going to have six elements in it.

51
00:03:29,590 --> 00:03:35,140
So we're going to create six allies, and they're all going to have the same classes as we see here,

52
00:03:35,140 --> 00:03:38,500
and they're all going to have a nested a hyperlink inside them.

53
00:03:38,530 --> 00:03:38,830
Right.

54
00:03:39,190 --> 00:03:43,420
So we know we want to iterate over each thing in our menu items array.

55
00:03:43,540 --> 00:03:49,690
And the syntax here is going to specify an individual element in our full collection.

56
00:03:49,700 --> 00:03:51,870
Let me write it out and then we'll talk about what it means.

57
00:03:51,880 --> 00:03:56,860
So what I'm going to write here is menu item in menu items.

58
00:03:57,580 --> 00:04:02,950
So you'll notice the second thing here, menu items is the same as our property name here, and that

59
00:04:02,950 --> 00:04:03,610
is intentional.

60
00:04:03,820 --> 00:04:08,710
Here we are specifying what we are iterating over, what is our collection, what is our array.

61
00:04:08,860 --> 00:04:12,190
And this is coming directly from our data method.

62
00:04:12,550 --> 00:04:20,020
Then before the end keyword, we provide a temporary variable name almost for each individual element

63
00:04:20,020 --> 00:04:21,250
that we're iterating over.

64
00:04:21,580 --> 00:04:27,820
So we're going to be iterating over one menu item at a time, or in other words, one string at a time

65
00:04:27,820 --> 00:04:28,630
over this array.

66
00:04:29,020 --> 00:04:31,550
And for each one, we're going to create a ally.

67
00:04:31,810 --> 00:04:37,060
And the reason why it's important to use the syntax is menu item just like in a regular for loop is

68
00:04:37,060 --> 00:04:43,390
going to represent each one of those strings one at a time and we are free to use it when we want to

69
00:04:43,990 --> 00:04:46,210
render its contents somewhere to the screen.

70
00:04:46,510 --> 00:04:51,190
So if we take a look at what we have now, the reason this is problematic is we're going to create six

71
00:04:51,190 --> 00:04:51,820
allies.

72
00:04:51,940 --> 00:04:55,600
But of course each one of them is going to have the same text of locations.

73
00:04:55,600 --> 00:04:56,800
And that's not what we want.

74
00:04:56,980 --> 00:05:01,870
We want to dynamically inject whatever is the current string that we are iterating over.

75
00:05:02,140 --> 00:05:06,760
Well, that string is going to be available via this menu item, temporary variable.

76
00:05:06,910 --> 00:05:12,430
And how can we interpolate a variable value inside our template with the exact same syntax we used to

77
00:05:12,430 --> 00:05:14,770
interpolate a data property earlier on.

78
00:05:14,830 --> 00:05:20,800
Here we have an example of a company, so I'm going to use the curly brace syntax and now I'm going

79
00:05:20,800 --> 00:05:27,310
to use a menu item that's that dynamic variable that's going to represent each menu item one at a time

80
00:05:27,340 --> 00:05:30,760
as we iterate over the menu items in this array.

81
00:05:30,850 --> 00:05:31,180
All right.

82
00:05:31,450 --> 00:05:35,110
So at this point, I'm going to take a pause because this code is not going to work just yet.

83
00:05:35,110 --> 00:05:38,350
If I go to my browser, we're going to see it failed to compile.

84
00:05:38,530 --> 00:05:43,660
Our syntax is completely correct, but there's one more thing we need to add to get this to work.

85
00:05:43,780 --> 00:05:46,030
And I'll show you what that is in the very next lesson.
