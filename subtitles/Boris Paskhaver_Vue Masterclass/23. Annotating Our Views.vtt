WEBVTT
1
00:00:00.630 --> 00:00:01.190
Okay.

2
00:00:01.200 --> 00:00:06.930
So in this lesson it will add TypeScript to the four remaining view components in our app that do not

3
00:00:06.930 --> 00:00:07.620
support it yet.

4
00:00:07.620 --> 00:00:11.160
And it is all the components in our source views directory.

5
00:00:11.340 --> 00:00:16.290
I have them all displayed right here by simply searching for the script tag without the presence of

6
00:00:16.290 --> 00:00:17.070
the lagging attribute.

7
00:00:17.370 --> 00:00:19.980
So let's quickly go through these components and update them all.

8
00:00:19.980 --> 00:00:24.600
I'm going to begin with home view that view and I'm simply going to do the usual.

9
00:00:24.600 --> 00:00:32.970
So let's add lang equals test, let's import define component and that is going to come from view and

10
00:00:32.970 --> 00:00:35.010
then invoke define component below.

11
00:00:36.280 --> 00:00:36.670
Like.

12
00:00:36.670 --> 00:00:41.810
So I'm also going to copy these two lines because I can sense that these are going to be pretty reused.

13
00:00:41.830 --> 00:00:45.580
So let's just copy these two lines so we can just paste them wherever they're needed.

14
00:00:45.940 --> 00:00:48.580
So I'm going to move on to job results view right here.

15
00:00:48.580 --> 00:00:50.260
I'm going to do the exact same thing.

16
00:00:50.570 --> 00:00:54.640
There's my import, there's my invocation, and there's my closing parentheses.

17
00:00:54.670 --> 00:00:55.210
There we go.

18
00:00:55.570 --> 00:00:57.400
Moving on to job view.

19
00:00:57.790 --> 00:01:05.440
So right here, I'm going to replace this with that provide defined component and close it off right

20
00:01:05.440 --> 00:01:05.710
here.

21
00:01:06.040 --> 00:01:10.110
You'll also notice that this component is actually still using the options API.

22
00:01:10.120 --> 00:01:14.530
You can see here we have a computed property that is relying on this the dollar sign root.

23
00:01:14.800 --> 00:01:18.160
Since we're here, why don't we replace this with the composition API?

24
00:01:18.490 --> 00:01:23.390
So what I'll do here is import the used root function from view router.

25
00:01:23.650 --> 00:01:26.320
That's how we're going to get access to our root object.

26
00:01:26.830 --> 00:01:27.400
There we go.

27
00:01:27.580 --> 00:01:31.510
And of course, instead of computed, what I'm going to do is create a setup method.

28
00:01:32.080 --> 00:01:36.310
And what I'm going to do in here is invoke use root to get access to my root.

29
00:01:36.790 --> 00:01:37.540
So there we go.

30
00:01:38.980 --> 00:01:44.890
And to get the exact same properties as below, what I'm going to do is define a concept called the

31
00:01:44.890 --> 00:01:49.090
current job ID and that is going to be root dot params dot ID.

32
00:01:49.630 --> 00:01:55.510
And then of course, I'm going to return my object here with current job ID and as soon as I do that,

33
00:01:55.510 --> 00:01:59.170
you can see that, yes, there's going to have a little bit of a problem because it's going to say,

34
00:01:59.350 --> 00:02:03.640
hey, you're using both the options API and the composition API and you're referencing this current

35
00:02:03.640 --> 00:02:05.890
job ID key, which already exists.

36
00:02:06.100 --> 00:02:10.600
But now that we have this logic all in our setup method, we can, of course, remove our computed property.

37
00:02:11.200 --> 00:02:12.280
And there we go.

38
00:02:12.730 --> 00:02:13.090
All right.

39
00:02:13.090 --> 00:02:18.250
So I'm just going to copy this in case it was lost and finally move on to our teams view page right

40
00:02:18.250 --> 00:02:18.640
here.

41
00:02:19.450 --> 00:02:20.350
Replace that.

42
00:02:20.800 --> 00:02:22.990
Add the defined component invocation here.

43
00:02:23.320 --> 00:02:28.510
And I think with that, we now have moved every single component in our app to TypeScript.

44
00:02:28.870 --> 00:02:30.010
So big progress.

45
00:02:30.610 --> 00:02:33.460
Glad that we made it here and I will see you in the next lesson.
