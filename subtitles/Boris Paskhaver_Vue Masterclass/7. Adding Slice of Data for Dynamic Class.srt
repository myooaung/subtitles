1
00:00:00,330 --> 00:00:01,200
All right.

2
00:00:01,200 --> 00:00:07,560
So as I mentioned in the previous lesson, the advantage of the V bind directive is that we can bind

3
00:00:07,560 --> 00:00:11,970
our optimal attributes to some slice of data on our component.

4
00:00:12,180 --> 00:00:17,850
And so when that slice of data updates, those changes will be reflected in our template.

5
00:00:18,120 --> 00:00:21,870
So let's start wiring up that logic right now so we can see it in action.

6
00:00:22,080 --> 00:00:25,530
So I'm going to define a data method right here in my action button.

7
00:00:25,860 --> 00:00:29,400
And as a reminder, it is an S6 method, so I'm going to define it like so.

8
00:00:29,670 --> 00:00:33,480
And from this methods body, we're going to return a JavaScript object.

9
00:00:34,140 --> 00:00:39,240
And again, as a reminder of the properties that we defined here are going to be available to be used

10
00:00:39,360 --> 00:00:44,400
throughout the template and we're not just obligated to interpolate them, we can also use them in other

11
00:00:44,400 --> 00:00:48,210
situations as we saw with V Bind earlier in the class.

12
00:00:48,540 --> 00:00:53,460
So I'm going to create a property here called Primary and I'm going to set it equal to true.

13
00:00:54,670 --> 00:00:55,780
All right, I'm going to save this.

14
00:00:56,020 --> 00:01:01,030
And now we have the property primary available to be used anywhere in this template.

15
00:01:01,360 --> 00:01:03,820
Where I'm actually going to attach it is right here.

16
00:01:03,820 --> 00:01:07,240
Instead of the false, I'm going to write primary.

17
00:01:07,750 --> 00:01:12,400
So this syntax can be a little bit confusing because we have a key of primary and that is just a string

18
00:01:12,400 --> 00:01:13,170
in JavaScript.

19
00:01:13,180 --> 00:01:17,710
This is just a static in line, a string that's literally the word primary.

20
00:01:17,980 --> 00:01:23,320
But this primary right here on the right side of the colon is a reference to this data property.

21
00:01:23,650 --> 00:01:28,750
So right now, what Vue is going to do when it renders this component is it's effectively going to look

22
00:01:28,750 --> 00:01:29,820
at what primary is.

23
00:01:29,830 --> 00:01:34,750
It's going to see that it's equal to true and it's going to substitute it like so, right?

24
00:01:34,930 --> 00:01:37,810
So when the component renders, it's going to look like this.

25
00:01:38,050 --> 00:01:42,550
But what is the advantage of connecting this primary key to a data property?

26
00:01:42,730 --> 00:01:47,620
Well, it's the dynamism and it's the ability for Vue to react to changes.

27
00:01:47,890 --> 00:01:53,710
So, for example, if we change this primary in our data to something like false, which we can do with

28
00:01:53,710 --> 00:01:59,890
something like methods which we've explored previously view will detect that a slice of data has changed

29
00:02:00,160 --> 00:02:03,280
and because it has changed, view will re render our template.

30
00:02:03,580 --> 00:02:09,460
And as such, whatever the current value of primary will be, it will substitute right here in its place.

31
00:02:09,640 --> 00:02:15,490
And that allows us to dynamically inject either a true or a false value right here on the right hand

32
00:02:15,490 --> 00:02:21,310
side, which will dynamically determine whether the primary season class is applied and thus whether

33
00:02:21,310 --> 00:02:23,890
these town styles appear on the component or not.

34
00:02:24,190 --> 00:02:30,340
So now we can dynamically customize the CSS honor component based on the current value of data which

35
00:02:30,340 --> 00:02:33,430
allows it to change and dynamically react.

36
00:02:33,430 --> 00:02:33,600
Right.

37
00:02:33,610 --> 00:02:40,330
That is the the beauty of a view is that we can connect data to UI so that when the data changes, so

38
00:02:40,330 --> 00:02:44,320
does the UI and view takes care of that connection and that binding.

39
00:02:44,620 --> 00:02:49,750
That's why it's called the V bind, because it connects data to UI and we're welcome to use it again,

40
00:02:49,750 --> 00:02:54,430
either literally in a way like interpolation where we actually get the value to appear on the screen

41
00:02:54,730 --> 00:03:00,490
or in a more symbolic sense where we connect it to our actual attributes like class or earlier in the

42
00:03:00,490 --> 00:03:05,800
class we saw, for example, of the point is that we can dynamically bind to any vowed to attribute

43
00:03:05,980 --> 00:03:10,450
so that its value is dynamically configured by whatever we specify in data.

44
00:03:11,080 --> 00:03:11,470
All right.

45
00:03:11,650 --> 00:03:15,910
So if I go back to my browser now, we're going to see that we're going to still have all of our styles.

46
00:03:16,120 --> 00:03:21,100
The button styles are always going to be applied, and the primary class styles right here are going

47
00:03:21,100 --> 00:03:26,440
to be applied because the primary data value is set to true, which means this class should be applied

48
00:03:26,440 --> 00:03:30,220
by view, and we're going to see the exact same result as we've previously seen.

49
00:03:30,670 --> 00:03:30,970
All right.

50
00:03:30,970 --> 00:03:38,020
So that moves us one step closer to connecting our season class values to our data up data method and

51
00:03:38,020 --> 00:03:39,700
our data object in our view component.

52
00:03:39,850 --> 00:03:42,790
We're going to continue chipping away at this idea in the very next lesson.
