WEBVTT
1
00:00:00.570 --> 00:00:02.550
Welcome to The View Masterclass.

2
00:00:02.670 --> 00:00:08.880
My name is Boris Pass Cavour, and I'm a software engineer, consultant, educator and author based

3
00:00:08.880 --> 00:00:09.660
in New York City.

4
00:00:10.020 --> 00:00:13.770
In this course, I'll introduce you to the popular Vue.js Library.

5
00:00:13.920 --> 00:00:17.490
For building dynamic and reactive front end interfaces.

6
00:00:17.760 --> 00:00:23.460
The entire course consists of one complete project that we're going to be building out together from

7
00:00:23.460 --> 00:00:23.970
scratch.

8
00:00:24.180 --> 00:00:29.700
Along the way, we're going to see how view helps us solve all kinds of real world problems.

9
00:00:29.910 --> 00:00:33.870
In this course, we're covering not just theory, but application.

10
00:00:35.130 --> 00:00:37.500
So first up, what is Vue.js?

11
00:00:37.770 --> 00:00:42.810
Vue.js is a JavaScript framework for building reactive front end interfaces.

12
00:00:43.020 --> 00:00:46.950
It's pronounced Vue like Mountain View or Ocean View.

13
00:00:47.250 --> 00:00:52.450
Of course, the view that its name alludes to refers to your browsers web page.

14
00:00:52.470 --> 00:00:58.260
What you see when you visit a web page in your browser, such as the one that you're watching this video

15
00:00:58.260 --> 00:00:59.370
on right now.

16
00:00:59.760 --> 00:01:01.650
And what does the word reactive mean?

17
00:01:01.860 --> 00:01:06.540
It means that Vue enables our web page to react to change.

18
00:01:06.810 --> 00:01:08.990
And change comes in many forms.

19
00:01:09.330 --> 00:01:14.610
It may come from user events like button clicks or typing values into an input field.

20
00:01:15.000 --> 00:01:20.670
It may come from data that we get from some API that we need to render to the screen when it arrives.

21
00:01:20.940 --> 00:01:22.710
It may even come automatically.

22
00:01:22.890 --> 00:01:28.050
For example, we may want a message on the screen to change color every 5 seconds.

23
00:01:28.350 --> 00:01:32.400
These are all examples of change that happen after a web page.

24
00:01:32.400 --> 00:01:33.360
Initially loads.

25
00:01:33.750 --> 00:01:40.860
Vue makes it easy for our web page to seamlessly re render itself when these changes happen without

26
00:01:40.860 --> 00:01:42.780
forcing a page refresh.

27
00:01:43.020 --> 00:01:47.130
And in the very next lesson, we'll show you the project that we're going to be building during this

28
00:01:47.130 --> 00:01:51.270
course, and it's going to highlight some of these changes in greater detail.

29
00:01:51.720 --> 00:01:56.940
Now, as far as the history of you view was initially created by software developer Evan, you and it's

30
00:01:56.940 --> 00:02:02.940
since become an open source project with a global team of volunteer contributors and its popularity

31
00:02:02.940 --> 00:02:05.070
continues to grow year over year.

32
00:02:05.310 --> 00:02:07.500
Here are two statistics I can provide you with.

33
00:02:07.710 --> 00:02:13.620
Number one view is now used by more than 1.3 million active monthly users worldwide.

34
00:02:13.950 --> 00:02:22.140
And number two, from 2019 to 2020, downloads of UGC on NPM, which is the global JavaScript repository

35
00:02:22.140 --> 00:02:26.370
that stores all JavaScript packages from 2019 to 2020.

36
00:02:26.400 --> 00:02:28.180
Downloads of you doubled.

37
00:02:28.530 --> 00:02:34.080
So the popularity of the framework has doubled in size over one year, and it continues to grow at an

38
00:02:34.080 --> 00:02:35.040
exponential rate.

39
00:02:35.970 --> 00:02:36.690
Okay.

40
00:02:36.690 --> 00:02:38.860
So here's a little bit of fun history.

41
00:02:38.880 --> 00:02:42.390
You might be curious, why is the library called View Jazz?

42
00:02:42.630 --> 00:02:49.110
Well, as it turns out, the creator, Evan, you originally wanted to call the Library View Jazz v

43
00:02:49.140 --> 00:02:54.600
i e w but unfortunately that name was already taken on NPM.

44
00:02:54.900 --> 00:03:01.710
So Evan plugged the word view into Google Translate, and the word view in French is view v u e.

45
00:03:02.010 --> 00:03:06.600
He liked the sound of that name, and that package name was not taken on NPM.

46
00:03:06.840 --> 00:03:08.430
So that's where the name comes from.

47
00:03:08.430 --> 00:03:11.760
It's basically a translation of the literal word view.

48
00:03:12.180 --> 00:03:12.540
All right.

49
00:03:13.140 --> 00:03:15.900
Next step, let's talk a little bit about the history of you.

50
00:03:15.930 --> 00:03:20.310
We're going to talk more about the differences of this library slash framework in a lesson or two.

51
00:03:20.490 --> 00:03:25.590
But here's just a quick history to give you a sense of how this framework has matured over the last

52
00:03:25.590 --> 00:03:26.190
half decade.

53
00:03:26.460 --> 00:03:27.600
The first version of U.

54
00:03:27.600 --> 00:03:34.470
1.0 was first published in October 2015, and the latest version, 3.0 was released in late 2020.

55
00:03:34.620 --> 00:03:40.800
And as I mentioned earlier, NPM downloads doubled that year over a year from 2019 to 2020.

56
00:03:40.800 --> 00:03:45.060
So it continues to grow with the release of the latest and greatest version 3.0, which we're going

57
00:03:45.060 --> 00:03:46.680
to be using in this course.

58
00:03:47.310 --> 00:03:47.640
All right.

59
00:03:47.640 --> 00:03:50.400
Speaking of this course, what are the course prerequisites?

60
00:03:50.400 --> 00:03:54.990
What are the skills and technologies that you need to know in order to be successful in this course?

61
00:03:55.320 --> 00:04:01.170
Well, you'll need a basic knowledge of HTML and access to startup, and you do not need to be a frontend

62
00:04:01.170 --> 00:04:01.620
master.

63
00:04:01.620 --> 00:04:04.350
You do not need to be an expert in either of these two technologies.

64
00:04:04.530 --> 00:04:06.000
You just need to know the basics.

65
00:04:06.000 --> 00:04:10.800
You need to understand how HTML elements work, how he needs them, and how they form the structure

66
00:04:10.800 --> 00:04:11.760
of a web page.

67
00:04:12.060 --> 00:04:17.550
You also need to know the basics of success, how we use it to style our elements, how we can use things

68
00:04:17.550 --> 00:04:24.360
like selectors, how we can target HTML elements by IDs or classes as well as your basic CSS styles.

69
00:04:24.360 --> 00:04:29.940
Right now, you don't need to be an expert and I'll be the first one to tell you that CC is not my strong

70
00:04:29.940 --> 00:04:30.180
suit.

71
00:04:30.360 --> 00:04:35.310
We're going to do our best to make the work that we create in this course look pretty and presentable.

72
00:04:35.460 --> 00:04:41.070
But I'm not obsessed with CSS and we're not going to be focused on, you know, using the most advanced

73
00:04:41.070 --> 00:04:42.510
modern day features of CC.

74
00:04:42.750 --> 00:04:48.120
So that should hopefully be good news to tell you that you do not need to be an expert in this either.

75
00:04:48.540 --> 00:04:49.650
You just need to know the basics.

76
00:04:50.010 --> 00:04:56.850
And the same rules apply to a knowledge of JavaScript, specifically ESX, which is the sort of modern

77
00:04:56.850 --> 00:04:59.670
version of JavaScript released in 2015.

78
00:04:59.910 --> 00:05:03.030
Now if you're a little bit rusty on JavaScript, don't worry.

79
00:05:03.150 --> 00:05:03.930
Throughout the course.

80
00:05:03.930 --> 00:05:09.480
I have some helper videos to help remind you of the critical JavaScript concepts that you need to know

81
00:05:09.480 --> 00:05:11.670
to understand what we're going to be covering in the videos.

82
00:05:11.940 --> 00:05:17.970
But with that said, those videos are reminded, are intended as refreshers, as reminders.

83
00:05:18.120 --> 00:05:23.280
So if you are completely unfamiliar with JavaScript, I strongly recommend that you take a JavaScript

84
00:05:23.280 --> 00:05:28.740
class first before you dive into learning Vue or any other front end library for that matter.

85
00:05:28.980 --> 00:05:33.930
And finally, you'll need experience with your operating system and its terminal, and that will be

86
00:05:33.930 --> 00:05:39.210
the terminal on the MAC, the command prompt or the PowerShell on the Windows or the equivalent command

87
00:05:39.210 --> 00:05:42.930
line interface on your Linux machine, whatever it is that you're using.

88
00:05:43.710 --> 00:05:44.010
All right.

89
00:05:44.220 --> 00:05:48.210
And finally, to close this lesson off, I want to talk a little bit about the features of this course,

90
00:05:48.360 --> 00:05:53.250
what makes this course special for me and why I think it's going to be an enjoyable experience for you.

91
00:05:53.520 --> 00:05:58.910
So first up, we are going to be completing a single project that covers many features of you, both

92
00:05:58.910 --> 00:06:04.830
the new and old, one of my greatest frustrations with online education and even a piece of critical

93
00:06:04.830 --> 00:06:10.380
feedback that I can give myself upon reflecting on some of my previous courses is that a lot of them

94
00:06:10.500 --> 00:06:17.550
feel sort of not capturing what it is like to actually work with the technology in the real world.

95
00:06:17.850 --> 00:06:22.830
And the only real way that you'll learn how to work with view is to build things with it, build features

96
00:06:22.830 --> 00:06:23.130
with it.

97
00:06:23.340 --> 00:06:27.930
So the entire course from start to finish is going to be one project and we're going to be producing

98
00:06:27.930 --> 00:06:29.600
real world user features.

99
00:06:29.610 --> 00:06:32.670
We're going to treat this just like we're a developer on the job.

100
00:06:32.820 --> 00:06:34.350
We're going to have user stories.

101
00:06:34.500 --> 00:06:37.470
They're going to describe the user value that we're trying to add to the app.

102
00:06:37.680 --> 00:06:42.150
We're going to see how we can solve these problems with view and how view helps us.

103
00:06:42.150 --> 00:06:42.480
All right.

104
00:06:42.750 --> 00:06:47.400
In addition to the Core View framework, we're also going to offer extensive coverage of the entire

105
00:06:47.550 --> 00:06:48.780
view ecosystem.

106
00:06:49.020 --> 00:06:54.120
So View actually has a bunch of supplementary tools that come available with it.

107
00:06:54.150 --> 00:06:58.920
You do not have to use these tools, but they're often used in tandem with view and they're built by

108
00:06:58.920 --> 00:07:00.330
the same development team.

109
00:07:00.480 --> 00:07:00.750
Right.

110
00:07:00.840 --> 00:07:05.910
And those tools include things like view router for navigating from page to page in your app as well

111
00:07:05.910 --> 00:07:09.660
as View Ex, which is for managing global state in your app.

112
00:07:09.840 --> 00:07:14.220
Now, if you're completely unfamiliar with these concepts, if this is your first time learning any

113
00:07:14.220 --> 00:07:15.960
front end library, don't worry.

114
00:07:15.960 --> 00:07:19.800
We're going to talk about the benefits of these tools in later lessons, and we're going to introduce

115
00:07:19.800 --> 00:07:21.600
all of these concepts step by step.

116
00:07:21.750 --> 00:07:25.770
But just know you're not just getting an introduction to view, you're also getting an introduction

117
00:07:25.770 --> 00:07:28.590
to the larger ecosystem of tools that work with it.

118
00:07:29.310 --> 00:07:34.710
One other thing that makes this course really special is we have an extensive focus on testing.

119
00:07:34.710 --> 00:07:35.130
All right.

120
00:07:35.450 --> 00:07:41.390
This is a distinct difference, and I would estimate that probably at least 40% of the videos in this

121
00:07:41.390 --> 00:07:45.350
course are going to be us writing tests for the view code that we write.

122
00:07:45.590 --> 00:07:49.800
We're going to be writing tests both before we write our actual view code and after.

123
00:07:49.800 --> 00:07:50.960
And we're going to talk to benefits.

124
00:07:51.050 --> 00:07:54.440
We're going to talk about the benefits of both of those approaches as we proceed.

125
00:07:54.800 --> 00:07:59.150
Testing is incredibly important, not just in the front end, but universally when you're writing code.

126
00:07:59.330 --> 00:08:02.060
It gives you a sense of security that your code does what it does.

127
00:08:02.300 --> 00:08:06.980
It allows you to quickly perform this kind of gut check that everything is working out as expected,

128
00:08:07.100 --> 00:08:08.420
that you haven't broken anything.

129
00:08:08.570 --> 00:08:10.990
It gives you comfort when you refactor, etc..

130
00:08:11.000 --> 00:08:11.210
Right.

131
00:08:11.420 --> 00:08:14.750
I'm going to sell you more on the benefits of testing a little bit later in the course.

132
00:08:14.930 --> 00:08:17.330
But this is something that really is uncovered by a lot of courses.

133
00:08:17.330 --> 00:08:18.320
And this course will.

134
00:08:18.320 --> 00:08:21.770
We're going to obsess over testing and making sure that we have a great test suite.

135
00:08:22.490 --> 00:08:22.820
All right.

136
00:08:23.000 --> 00:08:27.770
And finally, the fourth benefit is some of my favorite courses that I've ever taken.

137
00:08:28.070 --> 00:08:32.990
I started out intending to learn a single technology, but the course was able to introduce me to an

138
00:08:32.990 --> 00:08:35.750
entire ecosystem of tools.

139
00:08:35.900 --> 00:08:41.420
And in regards to this, the ecosystem that I talk about is not just the view ecosystem of tools, but

140
00:08:41.420 --> 00:08:46.220
also the modern front end web development landscape, what our front end developers using today.

141
00:08:46.460 --> 00:08:50.780
So one of my favorite features of this course is we're going to be learning additional tools, additional

142
00:08:50.780 --> 00:08:57.590
technologies, additional packages like Tailwind CC, which is a popular library for styling CC and

143
00:08:57.590 --> 00:09:03.470
TypeScript, which is a superset of JavaScript that allows us to effectively write JavaScript, but

144
00:09:03.470 --> 00:09:06.410
with declaring the types that we use throughout the program.

145
00:09:06.590 --> 00:09:11.640
Now, if you're completely unfamiliar with Tailwind or TypeScript, that's totally fine.

146
00:09:11.660 --> 00:09:14.180
We talked about the prerequisites in the previous lesson.

147
00:09:14.360 --> 00:09:18.710
These are the technologies in this slide that you do not need to know, but that we're going to be covering.

148
00:09:18.830 --> 00:09:23.480
And I hope it gives you a more comprehensive, more fun experience because we're not just going to be

149
00:09:23.480 --> 00:09:28.070
focused on view, we're going to be focused on a lot of other things and how they work well together.

150
00:09:28.070 --> 00:09:31.790
With Vue, that's really all there is to cover in this lesson.

151
00:09:31.790 --> 00:09:35.480
In the very next lesson, we're going to take a look at the app we're going to be building.

152
00:09:35.630 --> 00:09:37.520
I hope you're excited and I will see you there.
