1
00:00:00,210 --> 00:00:01,170
All right.

2
00:00:01,170 --> 00:00:06,840
So we learned in the previous lesson that every component has access to a router property, and that

3
00:00:06,840 --> 00:00:12,870
gives us the view router itself, which is the exact same object that we configured and exported out

4
00:00:12,870 --> 00:00:13,650
of our index.

5
00:00:13,650 --> 00:00:15,780
Just file in the router directory.

6
00:00:16,020 --> 00:00:21,330
What I'd like to do in this lesson is actually invoke a method on this object and it's going to be the

7
00:00:21,330 --> 00:00:22,050
push method.

8
00:00:22,350 --> 00:00:28,710
What the push method does is it navigates the user to a new route, and usually we want to do this based

9
00:00:28,710 --> 00:00:30,390
on some kind of user action.

10
00:00:30,690 --> 00:00:36,210
So what I propose we do is add a button in this component, and whenever the user clicks, the button

11
00:00:36,210 --> 00:00:42,000
will invoke a method, and that method will actually navigate the user from the job results view to

12
00:00:42,000 --> 00:00:42,780
the home view.

13
00:00:43,050 --> 00:00:46,050
So let's begin by removing our computed property.

14
00:00:46,050 --> 00:00:47,130
We no longer need it.

15
00:00:48,290 --> 00:00:52,250
And we can also remove this former H2 with that experiment property.

16
00:00:52,520 --> 00:00:58,070
And here what I'll add is a button and let's give it some text like go to your home page.

17
00:00:58,850 --> 00:01:01,890
And then of course what we want to configure is a click handler.

18
00:01:01,910 --> 00:01:07,430
We want to configure a method that is going to execute on the click event whenever the user presses

19
00:01:07,430 --> 00:01:07,790
the button.

20
00:01:08,120 --> 00:01:10,100
So of course we are familiar with this by now.

21
00:01:10,100 --> 00:01:16,340
It is the VON Directive which we can use a shortcut for, and that is the assign followed by the name

22
00:01:16,340 --> 00:01:17,060
of the event.

23
00:01:17,060 --> 00:01:22,280
We want to react to the browser's native click event and then we provide the method that we want to

24
00:01:22,280 --> 00:01:23,570
invoke in double quotes.

25
00:01:23,840 --> 00:01:27,290
So I want to invoke a method called Go to Home.

26
00:01:27,800 --> 00:01:32,810
And of course I now need to define that method as part of the components methods property.

27
00:01:33,080 --> 00:01:35,020
So right here I'll define my methods.

28
00:01:35,030 --> 00:01:40,550
I'll provide a JavaScript object and I will provide a method with the expected name of Go to home.

29
00:01:42,040 --> 00:01:42,370
All right.

30
00:01:42,370 --> 00:01:45,490
So in my method body, I will have access to the this key word.

31
00:01:45,670 --> 00:01:51,220
And we know from the previous lesson that we can access this dot dollar sign router that gives us a

32
00:01:51,220 --> 00:01:53,920
whole object and that object has a whole bunch of methods.

33
00:01:54,100 --> 00:01:56,380
The one I'm looking for here is push.

34
00:01:56,950 --> 00:01:59,890
All right, now, push actually takes a variety of different arguments.

35
00:01:59,890 --> 00:02:04,240
And the first and the simplest one is a string that specifies where to go to.

36
00:02:04,480 --> 00:02:10,720
So our home route or our home view is available at the root root, which is just a forward slash.

37
00:02:10,930 --> 00:02:16,720
So I can simply provide a string of a forward slash, save the file, and this should be good to go.

38
00:02:16,990 --> 00:02:18,880
So I'm going to navigate to my browser.

39
00:02:20,070 --> 00:02:24,780
And here I am on the job results page at slash jobs, slash results.

40
00:02:24,990 --> 00:02:26,500
And here is my new button.

41
00:02:26,520 --> 00:02:27,540
It's not very fancy.

42
00:02:27,540 --> 00:02:28,260
It's Unstyled.

43
00:02:28,470 --> 00:02:33,090
But you can see when I hover my mouse over, I do have that ability to click on it.

44
00:02:33,300 --> 00:02:39,570
This will trigger the method which will use the router to navigate the user to my home route.

45
00:02:39,870 --> 00:02:45,420
So this is very similar to a router link which we saw a little bit ago, except this is us manually

46
00:02:45,420 --> 00:02:50,190
configuring the navigation by manually invoking the push method on the router.

47
00:02:50,310 --> 00:02:54,690
We could also use, for example, a router link component instead of that button, and that would take

48
00:02:54,690 --> 00:02:56,520
care of that magic for us.

49
00:02:56,700 --> 00:03:00,990
So this is a little bit more of a verbose way and probably not even in the best ways since it's more

50
00:03:00,990 --> 00:03:01,470
explicit.

51
00:03:01,800 --> 00:03:04,410
But just want to show you how everything works behind the scenes.

52
00:03:04,770 --> 00:03:11,460
So I also want to show you a couple alternate arguments that we can provide to the push method.

53
00:03:11,460 --> 00:03:12,360
And they're all going to work.

54
00:03:12,360 --> 00:03:13,620
They all work very similarly.

55
00:03:13,890 --> 00:03:20,430
We can also provide a configuration object, so a JavaScript object and the property that we can provide

56
00:03:20,430 --> 00:03:21,690
here is path.

57
00:03:22,170 --> 00:03:26,430
So if we want to be a little bit more explicit about what this slash represents, it represents our

58
00:03:26,430 --> 00:03:26,850
path.

59
00:03:27,030 --> 00:03:32,010
We can provide a configuration object like this, and this will work the exact same way we will route

60
00:03:32,010 --> 00:03:33,630
the user to a path of slash.

61
00:03:33,900 --> 00:03:38,580
So if I go back to my job results page, let me just refresh and click this.

62
00:03:38,820 --> 00:03:39,330
There we go.

63
00:03:39,330 --> 00:03:42,030
We've been routed back to the home page at the root root.

64
00:03:42,330 --> 00:03:45,910
And finally, the last option, which is probably my favorite here.

65
00:03:46,920 --> 00:03:52,800
As I mentioned earlier, paths are pretty likely to change by our names, for our paths are probably

66
00:03:52,800 --> 00:03:54,570
less likely to change.

67
00:03:54,780 --> 00:04:01,560
As a reminder, if I go into my router index that yes file we gave every root a name so our root route

68
00:04:01,560 --> 00:04:07,560
we call that the name of that route, the home route, and that connects to the slash path.

69
00:04:07,890 --> 00:04:13,380
So what we can do here in our configuration object is provide a property called name, and instead of

70
00:04:13,380 --> 00:04:17,280
providing the actual path itself, we can provide the name of that route.

71
00:04:17,520 --> 00:04:21,060
So we called our route home right here.

72
00:04:21,420 --> 00:04:24,630
So if I simply put home right here, this will work.

73
00:04:24,870 --> 00:04:31,170
And if later on I go into my router index file and I change the path to something else like slash home,

74
00:04:31,440 --> 00:04:32,820
this will continue to work.

75
00:04:32,820 --> 00:04:35,610
It won't break because we're not hard coding the path.

76
00:04:35,610 --> 00:04:38,640
We're hard coding a name that references that path.

77
00:04:38,850 --> 00:04:43,590
And I like this approach because it describes more of where we want to head instead of how we want to

78
00:04:43,590 --> 00:04:43,980
head there.

79
00:04:44,130 --> 00:04:48,600
So it is a little bit more declarative than imperative in my from my perspective.

80
00:04:48,840 --> 00:04:53,010
But regardless, the implementation will lead to the exact same result in the browser.

81
00:04:53,190 --> 00:04:57,900
So if I go back to slash job slash results, click on this button we're able to navigate.

82
00:04:57,990 --> 00:05:03,710
All right, so the push method is what allows us to navigate to the next route to the next path.

83
00:05:03,720 --> 00:05:04,580
We simply provide it.

84
00:05:04,590 --> 00:05:10,110
Any one of those arguments, either a string or a configuration object where we can provide prop properties

85
00:05:10,110 --> 00:05:11,280
like name or path.

86
00:05:11,520 --> 00:05:13,380
You can see it's all kind of logical.

87
00:05:13,380 --> 00:05:17,820
It's all just a matter of memorizing those different ways that we can customize where we send the user

88
00:05:17,820 --> 00:05:18,240
off to.

89
00:05:18,540 --> 00:05:18,840
All right.

90
00:05:18,990 --> 00:05:20,610
That's all there is to cover in this lesson.

91
00:05:20,610 --> 00:05:22,050
So I will see you in the next one.
