1
00:00:00,360 --> 00:00:01,170
All right.

2
00:00:01,170 --> 00:00:06,450
So the next thing we're going to be doing is arranging the elements of our hero within this big yellow

3
00:00:06,450 --> 00:00:06,900
box.

4
00:00:07,080 --> 00:00:12,120
So if I transition to the official Google Careers website, we can see here how all of this content

5
00:00:12,120 --> 00:00:14,250
is primarily centered in the middle of the screen.

6
00:00:14,400 --> 00:00:19,020
We have, of course, our headline with the changing text, but we also have this prompt and this form

7
00:00:19,020 --> 00:00:21,030
and this image and then all kind of centered.

8
00:00:21,240 --> 00:00:25,680
And we're going to be using a different type of technique in order to arrange these elements.

9
00:00:25,860 --> 00:00:27,810
We're going to be using access grid.

10
00:00:28,110 --> 00:00:32,730
And the reason we're doing this is because that's actually the way that Google built out this page.

11
00:00:33,030 --> 00:00:37,890
So if you're new to Caesar's grid, much like I was when I discovered this feature, there's two helpful

12
00:00:37,890 --> 00:00:41,370
resources that I'd like to introduce you to in this lesson that you can utilize.

13
00:00:41,550 --> 00:00:45,210
If you'd like to take a little bit of a breather from the project and just brush up on your thesis.

14
00:00:45,570 --> 00:00:47,250
So the first one is this website.

15
00:00:47,260 --> 00:00:48,680
CC Trip.com.

16
00:00:48,690 --> 00:00:53,160
If you simply search CC Grid in Google, it should be one of the first results that pops up.

17
00:00:53,520 --> 00:00:57,030
It'll give you a quick introduction to what CC Great is effectively.

18
00:00:57,030 --> 00:01:00,660
CC Great is a two dimensional grid based layout system.

19
00:01:00,900 --> 00:01:03,480
So if you think of a grid almost like a table, right?

20
00:01:03,480 --> 00:01:07,230
A table that consists of rows and columns, that's essentially what a grid is.

21
00:01:07,230 --> 00:01:12,450
And that's how this new CC format allows us to arrange elements, almost like we're putting elements

22
00:01:12,450 --> 00:01:13,650
within a grid.

23
00:01:14,820 --> 00:01:18,960
You'll see more examples as I scroll down, but that is the basic introduction to the system and it

24
00:01:18,960 --> 00:01:23,640
says below here something that I think all of us who have worked with the SS have known before.

25
00:01:23,910 --> 00:01:28,400
CC has always been used to land our web pages, but it's never done a very good job of it.

26
00:01:28,410 --> 00:01:32,940
First we use tables, then floats positioning in inline block, but all of those methods were essentially

27
00:01:32,940 --> 00:01:36,960
hacks and left out a lot of important functionality, such as vertical centering.

28
00:01:37,140 --> 00:01:42,510
Flexbox, which came out before Grid, is a very great layout tool, but it has a one directional flow

29
00:01:42,630 --> 00:01:43,880
which has different use cases.

30
00:01:43,890 --> 00:01:50,400
So grid is kind of the next evolution or a new tool that's available in all modern browsers that is

31
00:01:50,400 --> 00:01:52,370
going to allow you to build a grid based layout.

32
00:01:52,380 --> 00:01:58,140
If I scroll down here just to give you a few examples, you can see kind of a artist's drawing of how

33
00:01:58,140 --> 00:02:03,060
we might define a box on the page and then later on how we might distribute elements within its.

34
00:02:03,060 --> 00:02:07,500
If I scroll down a little bit more here, you can see here we can have a grid, right, just rows and

35
00:02:07,500 --> 00:02:10,470
columns and they don't have to be necessarily equal width or equal height.

36
00:02:10,590 --> 00:02:16,410
We can designate all of that and then specify our inner elements or our inner containers and specify

37
00:02:16,410 --> 00:02:18,990
how they should fit in within that grid.

38
00:02:19,260 --> 00:02:23,130
Here you can see, for example, that we can specify the width of every column.

39
00:02:23,130 --> 00:02:28,680
We can make a column automatically size itself based on the total size we've put for the container.

40
00:02:28,680 --> 00:02:30,510
All of those details you can learn on this page.

41
00:02:30,720 --> 00:02:35,340
But again, you don't need to be a grid expert because this is not a size class, but just know that

42
00:02:35,340 --> 00:02:39,720
in the very next lesson, we're going to be using a bunch of tailwind classes that apply these grid

43
00:02:39,720 --> 00:02:41,130
styles behind the scenes.

44
00:02:41,130 --> 00:02:41,340
Right.

45
00:02:41,550 --> 00:02:45,180
And what I basically did, as always, is, is I went to the Google Careers website.

46
00:02:45,300 --> 00:02:51,150
I looked at their styles and I found a way to emulate those in a tailwind CSR and its utility classes.

47
00:02:51,150 --> 00:02:56,040
So I am by no means a grid expert, but I got a working version that looked good enough for me and that's

48
00:02:56,040 --> 00:02:57,060
basically what I did.

49
00:02:57,270 --> 00:03:01,740
And hopefully that's going to be good enough for us because of course our focus is Vue rather than CSR.

50
00:03:02,130 --> 00:03:08,310
If you also want a really great website to practice the basics of grid, what I recommend is CC Grid

51
00:03:08,310 --> 00:03:09,420
Garden dot com.

52
00:03:09,810 --> 00:03:14,250
This website is really cool because you get to actually play a game where you align this little stream

53
00:03:14,250 --> 00:03:19,350
of water in this grid with the growing plants and you can follow the instructions here and type out

54
00:03:19,350 --> 00:03:24,480
the correct yes in the prompt below and allows you to have this kind of visual game to play with.

55
00:03:25,020 --> 00:03:27,840
There's actually 28 different levels here and I recommend this site.

56
00:03:27,840 --> 00:03:30,930
I went through this tutorial when I was learning the basics of grid.

57
00:03:31,290 --> 00:03:34,650
I saw the earliest cover in this lesson and the very next lesson we're going to start applying.

58
00:03:34,650 --> 00:03:39,210
A bunch of grid styles are using tailwind to our existing component.
