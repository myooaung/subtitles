1
00:00:00,370 --> 00:00:01,160
Okay.

2
00:00:01,170 --> 00:00:07,650
So we have everything we need to use the named slots that we defined in our header container component.

3
00:00:08,010 --> 00:00:13,110
So on the right hand side, I have my header container view component and on the left side I have my

4
00:00:13,110 --> 00:00:14,700
team's view component.

5
00:00:15,030 --> 00:00:19,140
Right now we are rendering a self-closing tag for our header container.

6
00:00:19,350 --> 00:00:23,670
Let's now expand it to have an opening tag and a closing tag.

7
00:00:24,000 --> 00:00:25,650
So right here, header container.

8
00:00:25,860 --> 00:00:30,960
And afterwards, immediately I'm going to have my closing tag right here and then I'm going to do a

9
00:00:30,960 --> 00:00:31,590
line break.

10
00:00:32,040 --> 00:00:38,160
So we know that if we have a single slot component in my child right here in header container, then

11
00:00:38,160 --> 00:00:44,610
here in the parent is where I can customize the dynamic content to inject in that default slot.

12
00:00:45,030 --> 00:00:50,820
Well, now our situation is a little bit more complex because we have two slots, one that is called

13
00:00:50,820 --> 00:00:53,070
title one that is called subtitle.

14
00:00:53,340 --> 00:01:00,420
So in my parent component, I have to actually specify which slot I want to inject custom content to.

15
00:01:00,630 --> 00:01:03,000
Because otherwise view will not know.

16
00:01:03,390 --> 00:01:06,780
So the way we do that is by adding another template tag.

17
00:01:06,930 --> 00:01:08,970
So right here, I'm going to add a template tag.

18
00:01:10,310 --> 00:01:11,330
Opening and closing.

19
00:01:11,570 --> 00:01:16,370
And then on that template tag, I'm going to add a new view directive.

20
00:01:16,610 --> 00:01:17,030
All right.

21
00:01:17,210 --> 00:01:22,520
And that directive is called V slot and there is a hyphen between V and slot.

22
00:01:22,850 --> 00:01:23,300
Okay.

23
00:01:23,570 --> 00:01:29,150
That is a directive that allows us to specify which named slot we want to target.

24
00:01:29,660 --> 00:01:33,470
So in this scenario, I want to target my title slot right here.

25
00:01:33,740 --> 00:01:39,950
So the way I specify title is by putting a colon and then the name of the slot, which is title.

26
00:01:41,370 --> 00:01:41,820
Okay.

27
00:01:42,030 --> 00:01:49,020
So let me reiterate the word we put here after the colon has to be the exact same value we give to this

28
00:01:49,020 --> 00:01:49,380
name.

29
00:01:49,380 --> 00:01:52,710
Prop right here in my actual head or container component.

30
00:01:53,040 --> 00:01:57,510
So if I call this nonsense right here, this would be v slot colon.

31
00:01:57,660 --> 00:01:58,440
Nonsense.

32
00:01:58,530 --> 00:01:58,940
Okay.

33
00:01:59,190 --> 00:02:04,080
The reason we're seeing an S lint violation, by the way, is because there is a shorthand syntax for

34
00:02:04,080 --> 00:02:05,640
this, which I will show you later.

35
00:02:05,760 --> 00:02:07,890
But this is valid as well.

36
00:02:08,100 --> 00:02:08,580
Okay.

37
00:02:08,700 --> 00:02:13,560
V dash slot followed by a colon and the name of the slot we want to target.

38
00:02:13,710 --> 00:02:15,450
I want to target my title slot.

39
00:02:15,750 --> 00:02:22,050
Then within my opening and closing template tags, I actually put the content that I want injected in

40
00:02:22,050 --> 00:02:22,560
that slot.

41
00:02:22,890 --> 00:02:27,990
So for example, here I can put an H1 and let's give it a couple of tailwind classes.

42
00:02:28,380 --> 00:02:34,500
Let's do w fall for 100% with let's do text dash for Excel.

43
00:02:34,890 --> 00:02:37,680
That's going to give it a really large font size of 36 pixels.

44
00:02:37,890 --> 00:02:43,230
And then just to make sure the font is a normal size, I'm going to do font normal or a normal weight

45
00:02:43,230 --> 00:02:43,980
to be more specific.

46
00:02:43,990 --> 00:02:46,620
So it's not going to be super bold, just font normal.

47
00:02:46,950 --> 00:02:49,740
And here I can add some text like teams.

48
00:02:51,250 --> 00:02:51,670
Okay.

49
00:02:51,940 --> 00:02:56,740
So how can we target the other slot, the subtitle slot using the exact same syntax.

50
00:02:56,770 --> 00:03:04,810
I create another opening and closing template tag and on the opening one I provide my v slot directive,

51
00:03:04,990 --> 00:03:07,990
a colon and the name of the slot I want to target.

52
00:03:08,170 --> 00:03:12,400
In this case it has to be subtitle because that is the name we gave it right here.

53
00:03:12,730 --> 00:03:15,430
Here is where I provide the content for that slot.

54
00:03:15,760 --> 00:03:20,980
So in this case, we may want to provide, let's say, an H2 and it will provide some classes on that

55
00:03:20,980 --> 00:03:21,550
H2.

56
00:03:21,970 --> 00:03:24,970
Let's say we're going to do a full again for 100% width.

57
00:03:25,270 --> 00:03:28,030
I want to add a little bit of margin on the top and bottom.

58
00:03:28,030 --> 00:03:30,940
So I will do m.y or margin the Y axis.

59
00:03:31,240 --> 00:03:35,250
Let's do Y for let's make this a normal text size.

60
00:03:35,260 --> 00:03:39,610
So I'll do a text based and then let's also do a little bit of a lighter font.

61
00:03:39,820 --> 00:03:43,630
So I will do font light to decrease the font weight to 300.

62
00:03:44,020 --> 00:03:44,380
All right.

63
00:03:44,620 --> 00:03:49,150
And here we can put some sample text like, it's awesome working here.

64
00:03:49,870 --> 00:03:51,970
Why don't you come join us?

65
00:03:54,360 --> 00:04:00,300
So the advantage of this slots approach and this tailwind approach is in each paired component, we

66
00:04:00,300 --> 00:04:08,310
can customize two independent slots to independent injectable chunks of HTML with their own custom styling.

67
00:04:08,580 --> 00:04:13,200
And if we want to reuse the header container on any other component, we certainly can.

68
00:04:13,410 --> 00:04:19,350
And we can give two completely different pieces of slot content with totally different styling, but

69
00:04:19,350 --> 00:04:24,990
still keep the benefits of the header container component, which is this logic right here, the border

70
00:04:25,140 --> 00:04:26,610
and the centering of the text.

71
00:04:26,610 --> 00:04:29,190
Right, and the margin on top and bottom.

72
00:04:29,340 --> 00:04:35,820
So we can keep the reusability of these divs while customizing the content in the middle using these

73
00:04:35,820 --> 00:04:37,110
two named slots.

74
00:04:37,440 --> 00:04:37,890
All right.

75
00:04:38,100 --> 00:04:43,890
And that's exactly what we've done here by providing a custom H1 and a custom H2 with custom text content

76
00:04:44,010 --> 00:04:45,690
and custom tailwind styles.

77
00:04:46,090 --> 00:04:46,410
Right.

78
00:04:46,470 --> 00:04:50,340
We have not hardcoded this into our header container.

79
00:04:50,430 --> 00:04:55,680
Rather, we have allowed the parent to specify it, which allows another parent to customize it.

80
00:04:56,040 --> 00:04:57,420
So now if I go to my browser.

81
00:04:58,760 --> 00:05:00,490
We're going to see exactly what we expect.

82
00:05:00,500 --> 00:05:03,110
We have our custom H1, we have our custom H2.

83
00:05:03,290 --> 00:05:06,740
This is our title slot that we are providing content for.

84
00:05:06,920 --> 00:05:10,340
This is our subtitle slot that we are providing content for.

85
00:05:10,940 --> 00:05:11,360
All right.

86
00:05:11,600 --> 00:05:13,130
That's all there is to cover in this lesson.

87
00:05:13,130 --> 00:05:14,720
So I will see you in the next one.
