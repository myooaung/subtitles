WEBVTT
1
00:00:00.500 --> 00:00:01.490
All right.

2
00:00:01.490 --> 00:00:06.860
So there's one thing I'd still like to do in our main NAF component that we started in the previous

3
00:00:06.860 --> 00:00:12.590
section but did not finish, and that is the replacement of our hyperlinks with our router links.

4
00:00:12.830 --> 00:00:19.610
We did that for our primary company name right here, but we still have a bunch of hyperlinks for the

5
00:00:19.610 --> 00:00:21.180
main nav navigation.

6
00:00:21.200 --> 00:00:24.850
I am of course referring to these items right here.

7
00:00:24.860 --> 00:00:30.110
These are still regular hyperlinks with the anchor tag and we need to replace these with rulings.

8
00:00:30.440 --> 00:00:36.800
Now, granted, we don't actually have any pages or views yet built out except for this jobs one.

9
00:00:37.010 --> 00:00:40.760
So for these other ones, we're simply going to make them link back to our home page.

10
00:00:41.000 --> 00:00:46.040
Obviously, the intent here is as you build these pages out, you can add new routes and then route

11
00:00:46.040 --> 00:00:49.070
these respective ones to the correct pages.

12
00:00:49.070 --> 00:00:53.600
For now, we don't have those pages built out, so we're just going to link them to the homepage so

13
00:00:53.600 --> 00:00:58.250
that every link here or every a or link to be more specific, still works.

14
00:00:58.610 --> 00:01:04.580
So if I go back to this code, you'll notice the way that we are generating that list of hyperlinks

15
00:01:04.580 --> 00:01:06.770
is using the V4 directive.

16
00:01:06.920 --> 00:01:08.840
We talked about this earlier in the course.

17
00:01:08.840 --> 00:01:15.920
This is what allows us to iterate over an iterable such as an array and create an HTML element for every

18
00:01:15.920 --> 00:01:17.030
item in that array.

19
00:01:17.300 --> 00:01:25.280
So if I scroll down, we'll find the menu items, data, property, and that is an array of six strings.

20
00:01:25.460 --> 00:01:30.950
So we are iterating over that array of six strings and creating an ally for each one.

21
00:01:31.100 --> 00:01:36.350
And within each of those ally each list item we are rendering our anchor time.

22
00:01:36.680 --> 00:01:41.960
So in order to replace this anchor tag with a router link, we're actually going to need to details.

23
00:01:42.200 --> 00:01:47.630
We're going to need the text that we're going to display so we can keep the original string that we

24
00:01:47.630 --> 00:01:50.090
have from our array.

25
00:01:50.330 --> 00:01:55.010
But we also need to specify the destination, the path or the route.

26
00:01:55.250 --> 00:02:00.650
So we're going to need to store that in a more complex data structure because a single string is not

27
00:02:00.650 --> 00:02:01.670
going to be enough.

28
00:02:02.000 --> 00:02:08.150
So what I propose we do is change menu items to an array of objects and every object.

29
00:02:08.150 --> 00:02:12.920
We're going to specify the text as well as the URL that that text should link to.

30
00:02:12.950 --> 00:02:14.870
So let me show you an example right here.

31
00:02:14.870 --> 00:02:21.350
I'll create my first object and I'll create a text property and I will have my old text of teams and

32
00:02:21.350 --> 00:02:26.690
then I'll add a URL property and that will specify the path that I want that text to link to.

33
00:02:26.990 --> 00:02:32.150
So again, we're just creating a bunch of data here that we can use in our template, in our HTML,

34
00:02:32.150 --> 00:02:34.040
and we're still going to use the V for directive.

35
00:02:34.190 --> 00:02:37.850
We're just going to customize it to use the router link component.

36
00:02:38.120 --> 00:02:44.210
So as I mentioned, all of our menu items with the exception of jobs at the end is going to link to

37
00:02:44.480 --> 00:02:46.370
the root root, the slash root.

38
00:02:46.370 --> 00:02:48.560
So here's what the first example is going to look like.

39
00:02:48.740 --> 00:02:52.340
And I'm going to do something very similar for the next couple of strings.

40
00:02:52.580 --> 00:02:55.070
So I'm going to create another object in this array.

41
00:02:55.070 --> 00:03:01.430
It's going to have a text property set to locations and a URL property set to the slash, which is the

42
00:03:01.460 --> 00:03:03.650
route that I want that link to take us to.

43
00:03:04.040 --> 00:03:08.510
Then similar thing on the next line our text will be Life at Bobo.

44
00:03:08.780 --> 00:03:11.540
Our URL will be the root route at Slash.

45
00:03:12.740 --> 00:03:15.920
Then I'm going to have an object with a text of how we hire.

46
00:03:16.220 --> 00:03:17.690
The URL is going to be the root.

47
00:03:17.690 --> 00:03:18.050
Root.

48
00:03:19.940 --> 00:03:24.890
Then I'm going to have my final object here with a text of students and a URL of.

49
00:03:25.890 --> 00:03:26.850
A forward slash.

50
00:03:27.030 --> 00:03:31.110
And then finally, for the last one, we can actually do it the proper way or the better way.

51
00:03:31.230 --> 00:03:36.210
We're still going to have a tax property set to jobs, but our URL here is going to be the one that

52
00:03:36.210 --> 00:03:40.350
links to the results page, which is slash jobs, slash results.

53
00:03:40.650 --> 00:03:44.340
As a reminder, we configured that in our router index file.

54
00:03:44.670 --> 00:03:47.650
So now we have a menu items, array of objects.

55
00:03:47.670 --> 00:03:50.010
Each of those objects has two properties.

56
00:03:50.310 --> 00:03:53.430
So I'm going to scroll back up to where we are iterating over that array.

57
00:03:54.620 --> 00:03:55.220
Here it is.

58
00:03:55.520 --> 00:03:59.400
And here we are, iterating over each menu item in menu items.

59
00:03:59.420 --> 00:04:04.960
This is still a valid syntax, but now we have to remember that menu item is no longer a string.

60
00:04:04.970 --> 00:04:06.860
It is now a JavaScript object.

61
00:04:07.310 --> 00:04:12.920
You may recall as well that earlier in the course we used this v bind syntax with the key attribute

62
00:04:13.130 --> 00:04:16.970
and this is a requirement whenever we are using the V for directive in view.

63
00:04:17.210 --> 00:04:22.970
And what Vue needs from us is a unique identifier for that iteration, so it can tell the different

64
00:04:22.970 --> 00:04:24.410
iterator elements apart.

65
00:04:24.740 --> 00:04:28.970
So to put it more simply, we need some kind of unique identifier here.

66
00:04:29.150 --> 00:04:33.050
And an object is kind of a complex thing to use as a unique identifier.

67
00:04:33.050 --> 00:04:39.290
It's much better to use a string or a number, etc. So within our menu item object, we have a text

68
00:04:39.290 --> 00:04:41.540
property and we have a URL property.

69
00:04:41.690 --> 00:04:49.040
The URL is not unique because multiple links will go to the root route, but our text property is unique

70
00:04:49.160 --> 00:04:53.150
because the text property always has a unique string right here.

71
00:04:53.450 --> 00:04:59.240
So what I'm going to provide for my key is going to be the text property on my menu item object that

72
00:04:59.240 --> 00:05:00.080
I'm iterating over.

73
00:05:00.920 --> 00:05:01.160
All right.

74
00:05:01.160 --> 00:05:02.660
So menu item dot text.

75
00:05:03.080 --> 00:05:06.350
Similarly, right here we are rendering our hyperlink.

76
00:05:06.350 --> 00:05:07.820
Well, we no longer have that.

77
00:05:07.820 --> 00:05:13.040
We're now going to have our router link right here and make sure to change the closing tag here as well.

78
00:05:13.040 --> 00:05:14.360
So slash router link.

79
00:05:14.900 --> 00:05:15.320
All right.

80
00:05:15.500 --> 00:05:20.390
Our text that we're going to display can no longer be a menu item because menu item is not a string

81
00:05:20.390 --> 00:05:20.780
anymore.

82
00:05:20.780 --> 00:05:21.560
It is an object.

83
00:05:21.710 --> 00:05:27.650
We want to once again access the text property on that object because that is what we want to display

84
00:05:27.650 --> 00:05:28.850
as the clickable text.

85
00:05:29.180 --> 00:05:35.280
And then as a reminder, our router link component from the View Router Library does not have an address

86
00:05:35.360 --> 00:05:35.990
attribute.

87
00:05:36.260 --> 00:05:39.260
It has instead a two prop.

88
00:05:39.470 --> 00:05:39.800
Right.

89
00:05:40.040 --> 00:05:45.290
And we want to provide that to prop the URL property of our menu item object.

90
00:05:45.290 --> 00:05:47.990
So menu item is our object that we are iterating over.

91
00:05:48.140 --> 00:05:51.260
It has a URL property and that's where we want to link to.

92
00:05:51.650 --> 00:05:57.950
Keep in mind, however, this is a dynamic reference to a data property and if it's not a string, we

93
00:05:57.950 --> 00:05:58.940
know the drill by now.

94
00:05:58.940 --> 00:06:01.670
We have to make sure that we use the v bind syntax.

95
00:06:01.910 --> 00:06:07.730
Otherwise view will think that we are providing a literal string of menu item dot URL when this is a

96
00:06:07.730 --> 00:06:10.490
dynamic reference to a property on an object.

97
00:06:10.760 --> 00:06:16.430
So to use the vine syntax, we put the colon right here, save that and this should get us to where

98
00:06:16.430 --> 00:06:17.120
we want to go.

99
00:06:17.120 --> 00:06:18.710
Dynamic reference to the URL.

100
00:06:18.950 --> 00:06:24.770
Dynamic reference to the text that is the text property of the current object that we are iterating

101
00:06:24.770 --> 00:06:25.190
over.

102
00:06:25.400 --> 00:06:31.610
We're going to iterate over all six objects in our menu items data array using the V for loop and generate

103
00:06:31.610 --> 00:06:33.680
six router links on the main menu.

104
00:06:33.950 --> 00:06:39.350
So if I head back to my browser now, we should be able to click jobs and that will take us to the job

105
00:06:39.350 --> 00:06:43.730
results view and then we should be able to click Bubble Careers and that is our icon that will take

106
00:06:43.730 --> 00:06:44.510
us to the home page.

107
00:06:44.720 --> 00:06:51.740
And similarly, any of these router links should also take us back to the home page because we all gave

108
00:06:51.740 --> 00:06:52.970
them that slash root root.

109
00:06:53.300 --> 00:06:55.280
So it looks like things are working just fine.

110
00:06:55.460 --> 00:07:00.230
Again, I apologize that we don't have the teams and locations and life and bubble pages built out.

111
00:07:00.230 --> 00:07:05.390
But of course in the real world, in a typical app like this, Google has probably dozens of view developers

112
00:07:05.390 --> 00:07:08.000
working on this so they can get a lot more pages done quickly.

113
00:07:08.300 --> 00:07:12.470
So for us, we're just going to link back to the home page and Jobs is working as it should.

114
00:07:12.800 --> 00:07:13.100
Okay.

115
00:07:13.100 --> 00:07:16.310
So that cleans up our main menu and we can proceed from there.
