WEBVTT
1
00:00:00.005 --> 00:00:03.000
- [Instructor] At the heart of JDBC operations

2
00:00:03.000 --> 00:00:04.009
is that JDBC driver.

3
00:00:04.009 --> 00:00:06.005
And we're going to take a look at how to actually use

4
00:00:06.005 --> 00:00:08.002
the JDBC driver

5
00:00:08.002 --> 00:00:10.007
in association with the connection manager

6
00:00:10.007 --> 00:00:12.005
to make a connection to our database

7
00:00:12.005 --> 00:00:17.002
so that we can start doing work within that database itself.

8
00:00:17.002 --> 00:00:19.004
So let's jump into our IDE

9
00:00:19.004 --> 00:00:21.001
and we're going to open up our project

10
00:00:21.001 --> 00:00:25.007
and source main Java and then our package.

11
00:00:25.007 --> 00:00:30.001
And we're going to create a new class

12
00:00:30.001 --> 00:00:31.008
and that class is going to be called

13
00:00:31.008 --> 00:00:36.008
DatabaseConnectionManager.

14
00:00:36.008 --> 00:00:40.000
Now this is a pattern that I often use with databases

15
00:00:40.000 --> 00:00:42.000
to have a central place of handling

16
00:00:42.000 --> 00:00:45.005
all of our connection needs within the system.

17
00:00:45.005 --> 00:00:46.006
Now the first thing that we're going to do

18
00:00:46.006 --> 00:00:51.009
is we're going to put a private final string called URL

19
00:00:51.009 --> 00:00:57.004
and we're also going to do a private final properties

20
00:00:57.004 --> 00:01:00.006
called Properties.

21
00:01:00.006 --> 00:01:05.002
Now we're going to create a constructor for our class

22
00:01:05.002 --> 00:01:07.009
and we're going to pass in a few values to our constructor.

23
00:01:07.009 --> 00:01:10.006
The first is the host

24
00:01:10.006 --> 00:01:15.000
and then a database name

25
00:01:15.000 --> 00:01:18.007
and then a username

26
00:01:18.007 --> 00:01:22.000
and then a password.

27
00:01:22.000 --> 00:01:23.005
Now often you would brings this in

28
00:01:23.005 --> 00:01:26.003
through some sort of configuration mechanism,

29
00:01:26.003 --> 00:01:29.004
specifically something like a properties file.

30
00:01:29.004 --> 00:01:31.002
But in this case, we're just going to pass them

31
00:01:31.002 --> 00:01:34.001
into our constructor from our main method.

32
00:01:34.001 --> 00:01:38.001
Let me go ahead and make this a little bit easier to read.

33
00:01:38.001 --> 00:01:40.000
All right, so now in this method,

34
00:01:40.000 --> 00:01:52.001
we're going to set our URL equal to JDBC postgresql://

35
00:01:52.001 --> 00:01:57.006
Then I'm going to add in the host value that comes in

36
00:01:57.006 --> 00:02:00.008
then I'm going to put another slash

37
00:02:00.008 --> 00:02:05.000
and then I'm going to pass in the database name.

38
00:02:05.000 --> 00:02:07.007
Now again, this is not really the best form

39
00:02:07.007 --> 00:02:09.002
when you're dealing with production system.

40
00:02:09.002 --> 00:02:11.000
But for the purposes of our demo,

41
00:02:11.000 --> 00:02:12.006
this at least gets the point across

42
00:02:12.006 --> 00:02:15.000
and that's really the important part.

43
00:02:15.000 --> 00:02:18.003
Now we're going to set some properties here,

44
00:02:18.003 --> 00:02:23.001
but to do that we need to instantiate it.

45
00:02:23.001 --> 00:02:31.004
And now we will set our username

46
00:02:31.004 --> 00:02:35.007
to the property of user

47
00:02:35.007 --> 00:02:38.009
and we will set our password

48
00:02:38.009 --> 00:02:43.007
to the property of password.

49
00:02:43.007 --> 00:02:46.003
And that's all we need in our constructor.

50
00:02:46.003 --> 00:02:49.003
Now we're going to create a simple method

51
00:02:49.003 --> 00:02:50.005
that returns a connection

52
00:02:50.005 --> 00:02:53.003
and this is from Java.sql

53
00:02:53.003 --> 00:02:56.008
and we will call this getConnection.

54
00:02:56.008 --> 00:02:59.000
Now our connection,

55
00:02:59.000 --> 00:03:02.003
we'll throw an SQL exception

56
00:03:02.003 --> 00:03:04.001
and we're going to talk about SQL exceptions

57
00:03:04.001 --> 00:03:05.000
later on in the course.

58
00:03:05.000 --> 00:03:06.002
But for right now,

59
00:03:06.002 --> 00:03:08.008
we'll just go ahead and throw it.

60
00:03:08.008 --> 00:03:09.006
And what I'm going to do

61
00:03:09.006 --> 00:03:15.006
is I'm going to return a DriverManager.getConnection

62
00:03:15.006 --> 00:03:21.004
and I'm going to pass it, this.url and this.properties.

63
00:03:21.004 --> 00:03:24.000
And that's all we need to do to create a connection

64
00:03:24.000 --> 00:03:25.006
to our database.

65
00:03:25.006 --> 00:03:30.002
So let's jump back over here to our JDBC Executor.

66
00:03:30.002 --> 00:03:33.006
Okay, so we're going to replace the text here

67
00:03:33.006 --> 00:03:39.000
and create an instance of our DatabaseConnectionManager,

68
00:03:39.000 --> 00:03:42.002
create a new instance of our DatabaseConnectionManager

69
00:03:42.002 --> 00:03:43.005
and we're going to pass in localhost

70
00:03:43.005 --> 00:03:47.002
since we're running our database locally.

71
00:03:47.002 --> 00:03:54.006
And we are going to pass in the name which is hplussport.

72
00:03:54.006 --> 00:03:56.005
And then we will pass in our user

73
00:03:56.005 --> 00:04:00.000
which in this case is postgres.

74
00:04:00.000 --> 00:04:02.007
And we will pass in our password

75
00:04:02.007 --> 00:04:06.002
which has that uber secure password of password.

76
00:04:06.002 --> 00:04:09.002
So now we're going to build a try block

77
00:04:09.002 --> 00:04:13.001
and we're going to create a connection

78
00:04:13.001 --> 00:04:17.006
from our DatabaseConnectionManager.

79
00:04:17.006 --> 00:04:19.001
And we will create a simple statement

80
00:04:19.001 --> 00:04:20.007
and we're going to talk a lot more

81
00:04:20.007 --> 00:04:22.004
about what we're doing later

82
00:04:22.004 --> 00:04:25.004
but this is just to show you that it's working.

83
00:04:25.004 --> 00:04:30.006
So we'll get a statement from our connection.

84
00:04:30.006 --> 00:04:32.007
So now we're going to create an instance of resultSet

85
00:04:32.007 --> 00:04:36.000
and this is from java.sql

86
00:04:36.000 --> 00:04:38.007
and we're going to do that equal to statement,

87
00:04:38.007 --> 00:04:41.002
that execute query

88
00:04:41.002 --> 00:04:44.007
and the query that we are going to pass it is

89
00:04:44.007 --> 00:04:55.005
select count parentheses star from customer.

90
00:04:55.005 --> 00:05:01.005
And then we're going to iterate over our resultSet

91
00:05:01.005 --> 00:05:07.000
and we will simply do a system.out.printline

92
00:05:07.000 --> 00:05:11.006
on resultSet.getInt because it's a count

93
00:05:11.006 --> 00:05:15.001
and it will be the first value that comes across.

94
00:05:15.001 --> 00:05:23.004
And now all we need to do is catch our SQLException.

95
00:05:23.004 --> 00:05:24.004
And if we get one,

96
00:05:24.004 --> 00:05:27.003
we will simply do an e.printStackTrace on that.

97
00:05:27.003 --> 00:05:29.009
So now we're ready to run our method.

98
00:05:29.009 --> 00:05:30.009
Now before we do that,

99
00:05:30.009 --> 00:05:33.008
we want to make sure that our database is running.

100
00:05:33.008 --> 00:05:40.004
So we'll do that by just doing PSQL -h of localhost

101
00:05:40.004 --> 00:05:45.000
dash uppercase U of postgres.

102
00:05:45.000 --> 00:05:47.007
Type in our password of password

103
00:05:47.007 --> 00:05:49.000
and we've connected to our database

104
00:05:49.000 --> 00:05:51.006
which means it is actually running.

105
00:05:51.006 --> 00:05:54.009
So now we can jump back to our code

106
00:05:54.009 --> 00:05:57.007
and run our main method.

107
00:05:57.007 --> 00:05:58.007
And as the terminal runs,

108
00:05:58.007 --> 00:06:02.003
you'll see that we have 1000 records on our customer table

109
00:06:02.003 --> 00:06:04.001
which corresponds to the SQL script

110
00:06:04.001 --> 00:06:06.000
that we've already imported.

