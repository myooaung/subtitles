WEBVTT
1
00:00:00.002 --> 00:00:05.005
(upbeat music)

2
00:00:05.005 --> 00:00:08.000
- [Instructor] Now it's time for your code challenge.

3
00:00:08.000 --> 00:00:13.005
I'm going to have you implement a much more complex DAO.

4
00:00:13.005 --> 00:00:17.004
You'll create the DAO for the order domain.

5
00:00:17.004 --> 00:00:19.004
In order to keep this time down a little bit,

6
00:00:19.004 --> 00:00:22.003
I only want you to operate on the read action,

7
00:00:22.003 --> 00:00:25.000
so the find by ID.

8
00:00:25.000 --> 00:00:28.002
Create will require other domains to be completed,

9
00:00:28.002 --> 00:00:30.006
and update and delete just don't add a lot of value

10
00:00:30.006 --> 00:00:32.006
to what we're trying to learn here

11
00:00:32.006 --> 00:00:35.000
when we're dealing with this complex domain.

12
00:00:35.000 --> 00:00:37.005
Again, only the read operation.

13
00:00:37.005 --> 00:00:38.006
Let me show you a little bit about

14
00:00:38.006 --> 00:00:41.009
what the database itself looks like.

15
00:00:41.009 --> 00:00:45.002
At the center of this is the orders record.

16
00:00:45.002 --> 00:00:47.002
On the orders record, there are two values

17
00:00:47.002 --> 00:00:48.007
that must be populated.

18
00:00:48.007 --> 00:00:51.007
There's a customer ID and a salesperson ID.

19
00:00:51.007 --> 00:00:56.004
We have a one-to-one join between those two.

20
00:00:56.004 --> 00:01:00.006
For every order, there's an associated order item table.

21
00:01:00.006 --> 00:01:04.000
That order item can have one or more

22
00:01:04.000 --> 00:01:06.009
order items per order record.

23
00:01:06.009 --> 00:01:09.000
But each order item will have one

24
00:01:09.000 --> 00:01:11.003
and only one product record.

25
00:01:11.003 --> 00:01:13.003
This is really the entity relationship

26
00:01:13.003 --> 00:01:16.002
that we're going to build from.

27
00:01:16.002 --> 00:01:19.004
To make your life just a little bit easier,

28
00:01:19.004 --> 00:01:21.004
and because I want to make sure that you're not

29
00:01:21.004 --> 00:01:24.008
focused on the SQL, instead, you're focused on the JDBC,

30
00:01:24.008 --> 00:01:27.005
I've given you a query that you can use

31
00:01:27.005 --> 00:01:29.000
to get the data out.

32
00:01:29.000 --> 00:01:31.003
This makes some assumptions about what your object

33
00:01:31.003 --> 00:01:33.009
is going to look like, but we'll go with that assumption

34
00:01:33.009 --> 00:01:37.007
and you can adjust it as you see fit.

35
00:01:37.007 --> 00:01:39.000
This query is such;

36
00:01:39.000 --> 00:01:43.007
select from customer first name, last name, email.

37
00:01:43.007 --> 00:01:46.007
From orders, the order ID creation date,

38
00:01:46.007 --> 00:01:48.007
total due, and status.

39
00:01:48.007 --> 00:01:53.001
From salesperson, first name, last name, email.

40
00:01:53.001 --> 00:01:56.007
From order item, I do OL because that's how I name

41
00:01:56.007 --> 00:02:01.002
my object, but order item dot quantity.

42
00:02:01.002 --> 00:02:03.007
Then from product, I want the code, the name,

43
00:02:03.007 --> 00:02:06.008
the size, the variety, and the price.

44
00:02:06.008 --> 00:02:10.001
Then we're going to start all of this from orders.

45
00:02:10.001 --> 00:02:13.001
We're going to join customer where the order dot customer ID

46
00:02:13.001 --> 00:02:15.009
equals the customer dot customer ID.

47
00:02:15.009 --> 00:02:19.009
We'll join salesperson where the order dot salesperson ID

48
00:02:19.009 --> 00:02:24.001
equals the salesperson dot salesperson ID.

49
00:02:24.001 --> 00:02:26.006
We're going to join order item

50
00:02:26.006 --> 00:02:29.005
where the order item order ID

51
00:02:29.005 --> 00:02:32.003
equals order dot order ID.

52
00:02:32.003 --> 00:02:35.002
Then finally, we will join product

53
00:02:35.002 --> 00:02:37.009
where the order item dot product ID

54
00:02:37.009 --> 00:02:40.009
equals the product dot product ID.

55
00:02:40.009 --> 00:02:43.009
All of this is going to be done where the order

56
00:02:43.009 --> 00:02:47.006
dot order ID equals some value passed in.

57
00:02:47.006 --> 00:02:50.002
That's a mouthful, but you can see the query here

58
00:02:50.002 --> 00:02:52.005
and just copy it into your code

59
00:02:52.005 --> 00:02:54.008
or modify it as you see fit.

60
00:02:54.008 --> 00:02:57.004
I haven't focused on index or ordering of this.

61
00:02:57.004 --> 00:03:00.000
This is really just a simple query to get you

62
00:03:00.000 --> 00:03:04.004
past the SQL so you can get the concepts of JDBC.

63
00:03:04.004 --> 00:03:06.003
Let's just wrap up real quick and review.

64
00:03:06.003 --> 00:03:10.002
You're going to create a find by ID on an order DAO.

65
00:03:10.002 --> 00:03:12.008
You're going to need to create the order object,

66
00:03:12.008 --> 00:03:15.008
the order line or order item object,

67
00:03:15.008 --> 00:03:17.003
so that you can iterate over those.

68
00:03:17.003 --> 00:03:19.007
You're going to create the find by ID method

69
00:03:19.007 --> 00:03:21.009
and you're going to unpack your result set

70
00:03:21.009 --> 00:03:26.004
to create an order with one or more order items.

71
00:03:26.004 --> 00:03:28.002
That's the challenge.

72
00:03:28.002 --> 00:03:29.008
Get ready for my solution.

73
00:03:29.008 --> 00:03:31.000
I'll give you a little time.

