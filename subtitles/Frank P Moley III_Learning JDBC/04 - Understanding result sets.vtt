WEBVTT
1
00:00:00.005 --> 00:00:01.008
- [Instructor] So now that we've created some data

2
00:00:01.008 --> 00:00:02.007
in our database,

3
00:00:02.007 --> 00:00:05.006
we now need to look at how to actually read the data out.

4
00:00:05.006 --> 00:00:06.006
But before we do that,

5
00:00:06.006 --> 00:00:08.006
I want to talk a little bit about the construct

6
00:00:08.006 --> 00:00:11.001
that you use to read data out of the database,

7
00:00:11.001 --> 00:00:14.005
specifically the ResultSet.

8
00:00:14.005 --> 00:00:16.005
Now we've seen this briefly earlier,

9
00:00:16.005 --> 00:00:17.009
but we're going to talk a little bit more

10
00:00:17.009 --> 00:00:19.008
about what it actually means.

11
00:00:19.008 --> 00:00:23.008
Essentially, a ResultSet is a multi-dimensional array

12
00:00:23.008 --> 00:00:28.005
or a table that returned from a database statement.

13
00:00:28.005 --> 00:00:32.003
It also includes some metadata associated with the query

14
00:00:32.003 --> 00:00:33.007
and where the cursor is,

15
00:00:33.007 --> 00:00:37.000
as far as reading that table that comes out.

16
00:00:37.000 --> 00:00:40.002
Now, there's very limited functionality on seeing the size

17
00:00:40.002 --> 00:00:41.009
and scope of results.

18
00:00:41.009 --> 00:00:45.002
You basically can go forward, and in some cases back,

19
00:00:45.002 --> 00:00:47.000
or to a certain spot.

20
00:00:47.000 --> 00:00:49.002
But you don't really have the full grasp of everything

21
00:00:49.002 --> 00:00:54.000
that's in a ResultSet in most implementations.

22
00:00:54.000 --> 00:00:57.002
For all intents and purposes and most use cases,

23
00:00:57.002 --> 00:01:00.006
the ResultSet operates simply like an iterator

24
00:01:00.006 --> 00:01:02.007
and you're just going to loop through the ResultSet

25
00:01:02.007 --> 00:01:05.004
to get the data that you need.

26
00:01:05.004 --> 00:01:06.009
Iterating over that ResultSet

27
00:01:06.009 --> 00:01:09.008
is a very simple, repetitive operation,

28
00:01:09.008 --> 00:01:10.008
which makes sense,

29
00:01:10.008 --> 00:01:13.005
because each tuple in the table

30
00:01:13.005 --> 00:01:16.004
looks the exact same as every other tuple,

31
00:01:16.004 --> 00:01:18.002
other than the data present.

32
00:01:18.002 --> 00:01:20.001
This isn't a no-sequel option

33
00:01:20.001 --> 00:01:22.006
where you can have varied results.

34
00:01:22.006 --> 00:01:25.001
Each result will always be the same.

35
00:01:25.001 --> 00:01:28.006
Now, yes, you can have nulls in those columns,

36
00:01:28.006 --> 00:01:31.001
but those nulls are still a data point

37
00:01:31.001 --> 00:01:33.004
and it's a data point of nothing.

38
00:01:33.004 --> 00:01:37.005
So the iteration is very simply a while command

39
00:01:37.005 --> 00:01:40.003
on the resultset.next.

40
00:01:40.003 --> 00:01:41.004
And then within that loop,

41
00:01:41.004 --> 00:01:43.008
you unpack the structure and that's what we're going to do

42
00:01:43.008 --> 00:01:46.009
when we get into the next video.

43
00:01:46.009 --> 00:01:49.009
Now there's a couple ways to access values

44
00:01:49.009 --> 00:01:51.005
from the ResultSet.

45
00:01:51.005 --> 00:01:56.000
You can do it by column name and you can do it by index.

46
00:01:56.000 --> 00:01:57.004
Now, one thing to mention here

47
00:01:57.004 --> 00:02:00.000
is that when you do it by column name,

48
00:02:00.000 --> 00:02:03.004
it's not necessarily the same as the table def.

49
00:02:03.004 --> 00:02:08.005
It's the query definition of the column name that matters.

50
00:02:08.005 --> 00:02:10.009
Now, there are several advanced operations and settings

51
00:02:10.009 --> 00:02:13.003
that you can work on, on a ResultSet,

52
00:02:13.003 --> 00:02:15.008
and they're outside the scope of this course.

53
00:02:15.008 --> 00:02:18.007
But if you're really interested, you can read up on them.

54
00:02:18.007 --> 00:02:21.004
So there's navigation based on type.

55
00:02:21.004 --> 00:02:25.000
There's concurrency in whether that ResultSet is updatable.

56
00:02:25.000 --> 00:02:27.005
And then there's the concept of holdability,

57
00:02:27.005 --> 00:02:29.005
which means that that ResultSet will live

58
00:02:29.005 --> 00:02:32.004
past commit or closing of the connection.

59
00:02:32.004 --> 00:02:35.002
Again, these are advanced topics we're not going to get into,

60
00:02:35.002 --> 00:02:38.008
but there's tons of information out on Oracle's website

61
00:02:38.008 --> 00:02:41.000
and other Java-focused websites

62
00:02:41.000 --> 00:02:43.000
where you can get the information as needed.

