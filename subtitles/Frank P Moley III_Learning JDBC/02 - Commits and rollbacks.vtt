WEBVTT
1
00:00:00.009 --> 00:00:03.004
- So now that we've talked about transactions themselves.

2
00:00:03.004 --> 00:00:04.005
I want to jump in and show you

3
00:00:04.005 --> 00:00:07.000
how to set up a commit and rollback block

4
00:00:07.000 --> 00:00:10.006
on one of the methods that we've previously created.

5
00:00:10.006 --> 00:00:12.009
So let's jump into our ID,

6
00:00:12.009 --> 00:00:16.005
open up her project and go to source main Java,

7
00:00:16.005 --> 00:00:20.005
our base package. And let's open up our customer DAO,

8
00:00:20.005 --> 00:00:23.004
go ahead and shrink this one to down.

9
00:00:23.004 --> 00:00:25.003
And then we're going to go to our update method.

10
00:00:25.003 --> 00:00:27.005
And we're going to do our update method because this is

11
00:00:27.005 --> 00:00:31.003
where you would actually set a transaction boundary

12
00:00:31.003 --> 00:00:34.006
on an update or an ad, for instance.

13
00:00:34.006 --> 00:00:36.007
It's relatively simple to do this

14
00:00:36.007 --> 00:00:39.008
so after we create our customer

15
00:00:39.008 --> 00:00:47.001
and before we create our statement, I want to do a try block

16
00:00:47.001 --> 00:00:48.008
and in our try block were you're going to do

17
00:00:48.008 --> 00:00:52.005
this.connection that set auto commit,

18
00:00:52.005 --> 00:00:55.008
and we will set it equal to false.

19
00:00:55.008 --> 00:00:57.005
Now you'll notice we need to, once again,

20
00:00:57.005 --> 00:01:02.001
as we've done so many times catch a sequel exception

21
00:01:02.001 --> 00:01:05.009
and we will do a print stack trace

22
00:01:05.009 --> 00:01:12.000
and I throw new runtime exception.

23
00:01:12.000 --> 00:01:13.003
And now that starts our

24
00:01:13.003 --> 00:01:15.008
actual auto commit section to be false.

25
00:01:15.008 --> 00:01:19.002
So now we are in a transaction boundary.

26
00:01:19.002 --> 00:01:20.008
So we're going to go down here to the bottom

27
00:01:20.008 --> 00:01:23.006
after we execute but before we read,

28
00:01:23.006 --> 00:01:24.007
because the read really

29
00:01:24.007 --> 00:01:27.000
should not be part of the transaction,

30
00:01:27.000 --> 00:01:29.008
we want to make sure that we write it to disk.

31
00:01:29.008 --> 00:01:35.008
So we're going to use this.connection.commit.

32
00:01:35.008 --> 00:01:38.009
And now in our exception block,

33
00:01:38.009 --> 00:01:40.002
we would do something like this.

34
00:01:40.002 --> 00:01:43.002
Once again, a try to catch block,

35
00:01:43.002 --> 00:01:48.001
this.connection.rollback.

36
00:01:48.001 --> 00:01:51.000
Now, unfortunately we have to catch

37
00:01:51.000 --> 00:01:57.002
the SQL exception once again,

38
00:01:57.002 --> 00:02:00.006
and we will print it

39
00:02:00.006 --> 00:02:06.002
and we will throw a new runtime exception,

40
00:02:06.002 --> 00:02:09.005
sending it our SQL exception.

41
00:02:09.005 --> 00:02:10.005
Now at its core,

42
00:02:10.005 --> 00:02:13.007
that's all there is to doing a rollback segment.

43
00:02:13.007 --> 00:02:15.000
You'll see that I had to deal

44
00:02:15.000 --> 00:02:17.002
with a bunch of runtime exceptions

45
00:02:17.002 --> 00:02:18.007
because of the way the JDBC works.

46
00:02:18.007 --> 00:02:22.000
And we're going to talk about exception handling next,

47
00:02:22.000 --> 00:02:23.003
but this is all there is to it.

48
00:02:23.003 --> 00:02:26.003
You can run this code and it will run just fine,

49
00:02:26.003 --> 00:02:27.009
and it will do what we would expect it to.

50
00:02:27.009 --> 00:02:29.004
If there was a failure,

51
00:02:29.004 --> 00:02:31.009
it would not commit the data to the database.

52
00:02:31.009 --> 00:02:33.006
That's all there is to roll back segment.

53
00:02:33.006 --> 00:02:37.002
Now I've made this very, very simple, and in the real world,

54
00:02:37.002 --> 00:02:39.008
you're going to have very complex tasks.

55
00:02:39.008 --> 00:02:42.003
And you're going to have to determine where in your code

56
00:02:42.003 --> 00:02:44.007
is the transactional boundary.

57
00:02:44.007 --> 00:02:47.008
And that is actually the really hard part is figuring out

58
00:02:47.008 --> 00:02:50.002
how many things do I put in the transaction

59
00:02:50.002 --> 00:02:51.007
without number one, overwhelming it.

60
00:02:51.007 --> 00:02:54.008
And number two, getting the commit blocks that I want

61
00:02:54.008 --> 00:02:57.007
so that I don't ruin the database for someone else

62
00:02:57.007 --> 00:03:01.005
or ruin the database for the session that I'm in.

63
00:03:01.005 --> 00:03:03.003
So transaction management is hard.

64
00:03:03.003 --> 00:03:05.003
It's beyond the scope of this course,

65
00:03:05.003 --> 00:03:06.009
but you've now at least been introduced

66
00:03:06.009 --> 00:03:08.005
to what it looks like

67
00:03:08.005 --> 00:03:11.006
from a very simple method perspective.

68
00:03:11.006 --> 00:03:12.006
Most of the time,

69
00:03:12.006 --> 00:03:15.007
it won't be in your DAO it's going to be much higher up,

70
00:03:15.007 --> 00:03:17.000
but this gets you to the point.

