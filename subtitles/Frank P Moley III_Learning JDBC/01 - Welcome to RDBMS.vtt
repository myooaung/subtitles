WEBVTT
1
00:00:00.005 --> 00:00:01.008
- [Instructor] Before we get too deep

2
00:00:01.008 --> 00:00:03.009
into working with JDBC,

3
00:00:03.009 --> 00:00:05.000
I want to spend a little bit of time

4
00:00:05.000 --> 00:00:08.008
and talk about relational database management systems

5
00:00:08.008 --> 00:00:10.004
and why they are so important

6
00:00:10.004 --> 00:00:13.003
to application developers today.

7
00:00:13.003 --> 00:00:16.002
A little bit of brief history about relational databases

8
00:00:16.002 --> 00:00:18.003
that I want to talk about.

9
00:00:18.003 --> 00:00:20.007
The term relational database was actually coined

10
00:00:20.007 --> 00:00:24.002
by Edgar Codd in a 1970 paper

11
00:00:24.002 --> 00:00:26.007
titled "A Relational Model of Data

12
00:00:26.007 --> 00:00:29.001
for Large Shared Data Banks".

13
00:00:29.001 --> 00:00:32.004
And he created this while he worked for IBM.

14
00:00:32.004 --> 00:00:34.006
Now this was developed originally

15
00:00:34.006 --> 00:00:38.008
by IBM at San Jose's research facility.

16
00:00:38.008 --> 00:00:43.004
And this was really the beginning of what became databases.

17
00:00:43.004 --> 00:00:45.007
IBM would eventually begin developing

18
00:00:45.007 --> 00:00:49.006
System R at that same facility.

19
00:00:49.006 --> 00:00:53.002
Now Larry Ellison of Software Development Laboratories,

20
00:00:53.002 --> 00:00:55.005
soon to be Relational Software, Inc.,

21
00:00:55.005 --> 00:00:58.006
mimicked most of the RDBMS,

22
00:00:58.006 --> 00:01:01.008
except for the error codes from System R

23
00:01:01.008 --> 00:01:05.001
and created a product called Oracle Database.

24
00:01:05.001 --> 00:01:07.002
They were the first to market.

25
00:01:07.002 --> 00:01:08.005
Now IBM didn't release

26
00:01:08.005 --> 00:01:12.005
its commercial version, DB2, for several years.

27
00:01:12.005 --> 00:01:15.001
And if you've ever followed anything in the software world,

28
00:01:15.001 --> 00:01:18.009
especially around databases, you know where Oracle is.

29
00:01:18.009 --> 00:01:21.001
IBM is still there, but Oracle definitely

30
00:01:21.001 --> 00:01:23.003
has a lion's share of the market

31
00:01:23.003 --> 00:01:26.007
with large database deployments.

32
00:01:26.007 --> 00:01:29.003
Now Codd's paper that he wrote at IBM,

33
00:01:29.003 --> 00:01:33.002
"A Relational Model of Data for Large Shared Data Banks"

34
00:01:33.002 --> 00:01:34.008
was developed at IBM.

35
00:01:34.008 --> 00:01:36.009
And out of this paper came

36
00:01:36.009 --> 00:01:39.006
the so-called 12 rules, Codd's 12 rules.

37
00:01:39.006 --> 00:01:43.006
Now really there's 13, but we call them Codd's 12 rules.

38
00:01:43.006 --> 00:01:49.003
Now today, no single RDBMS implements all of his rules.

39
00:01:49.003 --> 00:01:52.004
But part of his paper yielded the concept

40
00:01:52.004 --> 00:01:56.005
of normalized databases and normal form.

41
00:01:56.005 --> 00:01:59.001
BCNF, or Boyce-Codd normal form,

42
00:01:59.001 --> 00:02:02.000
was a result of the work after the paper

43
00:02:02.000 --> 00:02:04.006
on a stricter version of third normal form.

44
00:02:04.006 --> 00:02:08.006
And that's kind of where his name continues to grow today.

45
00:02:08.006 --> 00:02:11.001
And Codd's theorem dealing with the equality

46
00:02:11.001 --> 00:02:14.002
of relational algebra and relational calculus

47
00:02:14.002 --> 00:02:16.000
is named after him as well.

48
00:02:16.000 --> 00:02:19.005
So he definitely has a name in the database community

49
00:02:19.005 --> 00:02:22.005
that continues to grow.

50
00:02:22.005 --> 00:02:23.007
Now I do think it's only fair

51
00:02:23.007 --> 00:02:27.002
to briefly talk about NoSQL databases.

52
00:02:27.002 --> 00:02:29.008
And I would be remiss if I didn't at least mention them,

53
00:02:29.008 --> 00:02:32.003
especially in today's market.

54
00:02:32.003 --> 00:02:35.001
Especially with cloud computing.

55
00:02:35.001 --> 00:02:37.003
Relational models in this set

56
00:02:37.003 --> 00:02:41.009
have significant issues that NoSQL has risen,

57
00:02:41.009 --> 00:02:45.007
especially in dealing with globally distributed data

58
00:02:45.007 --> 00:02:47.002
and where atomic operations

59
00:02:47.002 --> 00:02:50.004
become difficult, if not impossible.

60
00:02:50.004 --> 00:02:54.004
Now I would argue that both relational and NoSQL databases

61
00:02:54.004 --> 00:02:56.007
have their place in the market,

62
00:02:56.007 --> 00:02:59.007
and ultimately the market would still agree.

63
00:02:59.007 --> 00:03:01.006
Now I want to give you a little bit of a disclaimer here.

64
00:03:01.006 --> 00:03:04.006
I work for a company that is the premier vendor

65
00:03:04.006 --> 00:03:09.001
for an open source top 10 NoSQL database.

66
00:03:09.001 --> 00:03:11.004
But the fact is that, however,

67
00:03:11.004 --> 00:03:16.000
there are more RDBMS systems in the top 10 every month,

68
00:03:16.000 --> 00:03:18.008
at least up to the time of this recording,

69
00:03:18.008 --> 00:03:21.008
then there are NoSQL versions.

70
00:03:21.008 --> 00:03:23.006
There are, however, many signs

71
00:03:23.006 --> 00:03:26.003
of some changes to that top 10 list,

72
00:03:26.003 --> 00:03:30.001
but I don't think RDBMS is going away anytime soon.

73
00:03:30.001 --> 00:03:33.006
Now this course will focus on RDBMS only.

74
00:03:33.006 --> 00:03:36.004
But know that both are valid, useful,

75
00:03:36.004 --> 00:03:39.001
and important to today's developers.

76
00:03:39.001 --> 00:03:42.004
And really it comes down to knowing your use cases.

77
00:03:42.004 --> 00:03:46.001
RDBMS excel at data that has relations

78
00:03:46.001 --> 00:03:48.006
inherent to its storage.

79
00:03:48.006 --> 00:03:51.000
And if you need atomic transactions,

80
00:03:51.000 --> 00:03:53.004
you really need an RDBMS.

81
00:03:53.004 --> 00:03:57.004
Now, NoSQL databases excel in distributed systems,

82
00:03:57.004 --> 00:04:00.001
especially where the distance between clusters

83
00:04:00.001 --> 00:04:03.002
becomes part of the problem, because we no longer worry

84
00:04:03.002 --> 00:04:06.001
about ACID transactions or atomic operations.

85
00:04:06.001 --> 00:04:09.000
We start looking at eventual consistency.

86
00:04:09.000 --> 00:04:10.005
Again, both have their place,

87
00:04:10.005 --> 00:04:13.000
and really it comes down to the use cases.

88
00:04:13.000 --> 00:04:16.000
But for this course, we're going to focus on RDBMS.

