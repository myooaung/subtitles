WEBVTT
1
00:00:00.005 --> 00:00:01.006
- [Instructor] So now that we've gone over all

2
00:00:01.006 --> 00:00:03.004
of our high-level information,

3
00:00:03.004 --> 00:00:06.002
it's time to actually jump into Postgres

4
00:00:06.002 --> 00:00:07.006
and configure it for use

5
00:00:07.006 --> 00:00:09.008
throughout the rest of this course.

6
00:00:09.008 --> 00:00:12.008
Windows users, now's a great time to use PowerShell

7
00:00:12.008 --> 00:00:15.006
in Windows to do this work.

8
00:00:15.006 --> 00:00:16.006
I'd like for you to go ahead

9
00:00:16.006 --> 00:00:19.004
and open up the SQL-Scripts directory

10
00:00:19.004 --> 00:00:21.004
from the exercise files,

11
00:00:21.004 --> 00:00:24.002
and actually look at the README.md,

12
00:00:24.002 --> 00:00:27.000
and I'm doing so in my text editor.

13
00:00:27.000 --> 00:00:29.004
And what you'll see is that for a Linux or Mac,

14
00:00:29.004 --> 00:00:33.000
I've provided all of the commands that you will need to use

15
00:00:33.000 --> 00:00:35.006
in order to actually get this up and running,

16
00:00:35.006 --> 00:00:36.008
and we've got several steps here

17
00:00:36.008 --> 00:00:39.005
that we need to do in order to get our database prepared.

18
00:00:39.005 --> 00:00:41.005
The first thing that I do want you to note, however,

19
00:00:41.005 --> 00:00:45.002
is that when I put this commands in the README.md,

20
00:00:45.002 --> 00:00:47.008
I'm putting single tick marks around them.

21
00:00:47.008 --> 00:00:50.007
I'm doing that in order so that it formats correctly.

22
00:00:50.007 --> 00:00:52.004
However, when you copy these commands,

23
00:00:52.004 --> 00:00:56.006
please make sure that you don't also copy the tick marks.

24
00:00:56.006 --> 00:00:57.008
So the first thing that we're going to do

25
00:00:57.008 --> 00:01:01.007
is we're going to pull Postgres from the Docker Hub repo.

26
00:01:01.007 --> 00:01:04.000
So let's jump to our terminal.

27
00:01:04.000 --> 00:01:06.002
And you'll notice that I'm in the exercise files

28
00:01:06.002 --> 00:01:09.008
on my desktop in the SQL-Scripts directory.

29
00:01:09.008 --> 00:01:13.000
We'll go ahead and paste that command to pull postgres

30
00:01:13.000 --> 00:01:14.009
and it's going to download the latest

31
00:01:14.009 --> 00:01:18.009
from Docker Hub for Postgres itself.

32
00:01:18.009 --> 00:01:21.002
Okay, now that we've downloaded Postgres,

33
00:01:21.002 --> 00:01:23.005
let's go ahead and clear our view,

34
00:01:23.005 --> 00:01:25.009
and jump back over into our README.

35
00:01:25.009 --> 00:01:28.003
Okay, so now going over to step two.

36
00:01:28.003 --> 00:01:29.004
In step two, you'll notice

37
00:01:29.004 --> 00:01:31.007
that we're actually going to make a directory.

38
00:01:31.007 --> 00:01:34.006
Now, this directory is where we're going to store the data

39
00:01:34.006 --> 00:01:37.002
for our Postgres database itself.

40
00:01:37.002 --> 00:01:40.002
This way we can shut down the Docker container

41
00:01:40.002 --> 00:01:41.008
without impacting the data

42
00:01:41.008 --> 00:01:43.007
so that you don't have to sit here

43
00:01:43.007 --> 00:01:45.003
and leave the database running

44
00:01:45.003 --> 00:01:47.001
until you get this course completed

45
00:01:47.001 --> 00:01:49.005
or you don't have to worry about losing data.

46
00:01:49.005 --> 00:01:51.002
It's actually going to save it to disk

47
00:01:51.002 --> 00:01:53.000
and then every time you bring up the Docker Image,

48
00:01:53.000 --> 00:01:54.005
it'll remount it.

49
00:01:54.005 --> 00:01:56.008
So let's copy that command.

50
00:01:56.008 --> 00:01:58.006
And jump back to our terminal.

51
00:01:58.006 --> 00:02:01.003
And we'll execute it.

52
00:02:01.003 --> 00:02:02.008
And we'll clear our view once again

53
00:02:02.008 --> 00:02:06.005
and jump back over to our text editor.

54
00:02:06.005 --> 00:02:09.004
Step three is actually running our database.

55
00:02:09.004 --> 00:02:11.008
Now, there's a lot going on here with Docker,

56
00:02:11.008 --> 00:02:14.000
and you don't need to actually know everything.

57
00:02:14.000 --> 00:02:16.008
But there are a couple things that I do want you to know.

58
00:02:16.008 --> 00:02:19.004
First of all, we're going to background task this.

59
00:02:19.004 --> 00:02:22.002
So you're not actually going to see the Docker image running

60
00:02:22.002 --> 00:02:23.009
as it starts up, and that's okay

61
00:02:23.009 --> 00:02:25.007
because we don't need to see it.

62
00:02:25.007 --> 00:02:29.002
This saves us from having multiple terminal windows open.

63
00:02:29.002 --> 00:02:31.005
We're also setting the default password

64
00:02:31.005 --> 00:02:34.002
to the uber secure value of password.

65
00:02:34.002 --> 00:02:35.008
Please don't do this in the real world.

66
00:02:35.008 --> 00:02:38.002
We're doing it only for the purposes of testing,

67
00:02:38.002 --> 00:02:39.009
and that's where it should end.

68
00:02:39.009 --> 00:02:41.007
You'll then see that I have a -d

69
00:02:41.007 --> 00:02:43.004
where I'm mounting that directory

70
00:02:43.004 --> 00:02:45.008
that we just created to a location

71
00:02:45.008 --> 00:02:47.002
on the Docker image

72
00:02:47.002 --> 00:02:49.001
so that it's the same location

73
00:02:49.001 --> 00:02:50.004
and we're sharing it.

74
00:02:50.004 --> 00:02:53.003
This gives us the data locally on our machine

75
00:02:53.003 --> 00:02:55.008
that the Docker image itself is using.

76
00:02:55.008 --> 00:02:58.001
And finally, we're going to tell it which ports we want this

77
00:02:58.001 --> 00:02:59.002
to run on.

78
00:02:59.002 --> 00:03:01.004
So go ahead and copy all those commands

79
00:03:01.004 --> 00:03:04.008
and jump over to your terminal.

80
00:03:04.008 --> 00:03:05.009
Once you've pasted all that,

81
00:03:05.009 --> 00:03:08.002
go ahead and let it run.

82
00:03:08.002 --> 00:03:10.000
And you'll get very little interaction

83
00:03:10.000 --> 00:03:12.008
to let you know that this started or not.

84
00:03:12.008 --> 00:03:15.005
So jump back over to our README.

85
00:03:15.005 --> 00:03:17.000
And if you scroll down a little bit,

86
00:03:17.000 --> 00:03:19.004
you'll notice that I have a couple commands here.

87
00:03:19.004 --> 00:03:21.001
One is how to stop Postgres

88
00:03:21.001 --> 00:03:22.008
so that when we're done working,

89
00:03:22.008 --> 00:03:24.007
we can stop that container.

90
00:03:24.007 --> 00:03:26.004
That's going to be very valuable to you

91
00:03:26.004 --> 00:03:28.005
as you're going throughout this course.

92
00:03:28.005 --> 00:03:30.002
But what I want you to look at is the logging

93
00:03:30.002 --> 00:03:31.008
into the database.

94
00:03:31.008 --> 00:03:35.000
Now, we haven't actually executed any commands yet.

95
00:03:35.000 --> 00:03:37.007
So we're going to copy up until the user

96
00:03:37.007 --> 00:03:39.005
without actually mounting the database

97
00:03:39.005 --> 00:03:42.005
because we haven't created that database yet.

98
00:03:42.005 --> 00:03:44.009
Jump back over into terminal.

99
00:03:44.009 --> 00:03:47.006
And in terminal, we'll just paste that.

100
00:03:47.006 --> 00:03:50.005
And it should now prompt us for a password.

101
00:03:50.005 --> 00:03:52.006
We'll type in password,

102
00:03:52.006 --> 00:03:54.004
and we've now logged in to our database,

103
00:03:54.004 --> 00:03:56.004
and that's exactly what I wanted to do

104
00:03:56.004 --> 00:03:58.007
to make sure the database was running.

105
00:03:58.007 --> 00:04:04.000
So we can exit psql by doing a \q.

106
00:04:04.000 --> 00:04:06.004
And we're back into our terminal.

107
00:04:06.004 --> 00:04:10.005
So now we're ready to actually execute all of our commands.

108
00:04:10.005 --> 00:04:11.005
Jump back to the README

109
00:04:11.005 --> 00:04:13.001
and you'll notice that there's five commands

110
00:04:13.001 --> 00:04:15.000
that I want you to execute.

111
00:04:15.000 --> 00:04:18.000
We're going to copy them one by one,

112
00:04:18.000 --> 00:04:22.006
and jump to our terminal, paste them and go.

113
00:04:22.006 --> 00:04:26.002
You're going to have to log in each time,

114
00:04:26.002 --> 00:04:27.008
and the reason that I broke this up

115
00:04:27.008 --> 00:04:29.005
so that if there's a failure,

116
00:04:29.005 --> 00:04:31.002
you have less to retry

117
00:04:31.002 --> 00:04:32.009
but we're going to start getting responses,

118
00:04:32.009 --> 00:04:35.003
such as the database was created

119
00:04:35.003 --> 00:04:37.007
and the user access was granted.

120
00:04:37.007 --> 00:04:40.005
Jump back to the README.

121
00:04:40.005 --> 00:04:45.008
And now we'll do the customer section.

122
00:04:45.008 --> 00:04:48.002
Again, log in.

123
00:04:48.002 --> 00:04:52.002
And it tells us that it inserted 1,000 rows.

124
00:04:52.002 --> 00:04:59.001
We will continue to do that for the rest of these.

125
00:04:59.001 --> 00:05:01.006
So now that we've executed all of our statements,

126
00:05:01.006 --> 00:05:03.004
I want to do one more sanity check

127
00:05:03.004 --> 00:05:06.002
just to make sure that our data is ready.

128
00:05:06.002 --> 00:05:08.009
So jump back up into logging into the database,

129
00:05:08.009 --> 00:05:12.001
and this time, we're going to copy it with the database command

130
00:05:12.001 --> 00:05:15.001
so that we're directly connected to our database.

131
00:05:15.001 --> 00:05:17.001
Type that in the terminal,

132
00:05:17.001 --> 00:05:19.002
log in one more time,

133
00:05:19.002 --> 00:05:23.004
and now we can do a select star from customer

134
00:05:23.004 --> 00:05:26.005
with a semicolon, and we've got customer data.

135
00:05:26.005 --> 00:05:28.001
That's exactly what we wanted to see,

136
00:05:28.001 --> 00:05:32.002
and now we're ready to actually start using our database.

137
00:05:32.002 --> 00:05:33.008
But it's now set up and ready to do.

138
00:05:33.008 --> 00:05:37.001
So we won't have to actually interact with psql anymore,

139
00:05:37.001 --> 00:05:40.000
unless you want to check on the data that we create.

