1
00:00:01,140 --> 00:00:02,560
[Autogenerated] welcome to the designing,

2
00:00:02,560 --> 00:00:07,540
scalable and fault tolerant systems within a W S course.

3
00:00:07,540 --> 00:00:12,880
My name is Andrew Estes and I'm an enterprise cloud architect for CSG

4
00:00:12,880 --> 00:00:17,700
International and founder of Quick to Cloud This first module.

5
00:00:17,700 --> 00:00:23,320
We're going to discuss designing stateless architectures four resilience

6
00:00:23,320 --> 00:00:28,170
within our AWS accounts before we dive into this module.

7
00:00:28,170 --> 00:00:31,950
Let's just do a quick course overview so we can learn what to

8
00:00:31,950 --> 00:00:35,440
expect as we progress through this course.

9
00:00:35,440 --> 00:00:39,340
Firstly, we want to learn about designing resilient,

10
00:00:39,340 --> 00:00:43,210
stateless architectures within a W s,

11
00:00:43,210 --> 00:00:46,610
which is what we're going to do in this module here.

12
00:00:46,610 --> 00:00:47,200
Next,

13
00:00:47,200 --> 00:00:51,450
we wanna learn how we can implement auto scaling solutions

14
00:00:51,450 --> 00:00:55,040
within our accounts in an optimal fashion.

15
00:00:55,040 --> 00:00:56,100
And then finally,

16
00:00:56,100 --> 00:01:01,990
we're going to use cloudfront in Route 53 for advanced scenarios.

17
00:01:01,990 --> 00:01:03,060
So will demo.

18
00:01:03,060 --> 00:01:07,680
How we could Kim figure a CD en as well as advanced Route

19
00:01:07,680 --> 00:01:11,830
53 routing policies based on our needs.

20
00:01:11,830 --> 00:01:15,540
Now that we have a good overview of the course itself,

21
00:01:15,540 --> 00:01:19,290
let's dive into our first module in this module.

22
00:01:19,290 --> 00:01:23,840
We're going to design stateless architectures within a W s.

23
00:01:23,840 --> 00:01:28,030
And we're going to identify optimal times when we should

24
00:01:28,030 --> 00:01:33,210
use spot reserved or on demand instances.

25
00:01:33,210 --> 00:01:37,440
So with that, let's wrap up this intro and overview clip,

26
00:01:37,440 --> 00:01:45,000
and we'll pick up in the next one where we're going to dive into stateless versus state ful architectures.

