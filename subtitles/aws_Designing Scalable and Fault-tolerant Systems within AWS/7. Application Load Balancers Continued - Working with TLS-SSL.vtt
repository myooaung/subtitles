WEBVTT
1
00:00:00.940 --> 00:00:04.600
[Autogenerated] so we just got done, creating a non secured listener.

2
00:00:04.600 --> 00:00:08.090
Now let's move on and pick up where we left off and we'll work on

3
00:00:08.090 --> 00:00:11.790
creating and attaching a secure listener to r A l B.

4
00:00:11.790 --> 00:00:16.520
Now that's great and all, but we want to serve up SSL traffic, secured traffic.

5
00:00:16.520 --> 00:00:17.950
How do we do that?

6
00:00:17.950 --> 00:00:19.840
Well, I'll goto listeners.

7
00:00:19.840 --> 00:00:26.090
I'll add a new listener and I'll choose H T T P s as opposed to default.

8
00:00:26.090 --> 00:00:31.340
Http, Now it's on 443 and we choose our default action.

9
00:00:31.340 --> 00:00:37.550
And these actions are subject to being on an exam from AWS so you can

10
00:00:37.550 --> 00:00:41.560
forward traffic to a specific place you can redirect,

11
00:00:41.560 --> 00:00:43.530
which is its own status code.

12
00:00:43.530 --> 00:00:45.420
So you need to be aware of that.

13
00:00:45.420 --> 00:00:47.460
You can return a fixed response.

14
00:00:47.460 --> 00:00:49.220
So maybe for a health check,

15
00:00:49.220 --> 00:00:53.020
you return a fixed response and then you can authenticate.

16
00:00:53.020 --> 00:00:54.450
Now, this is pretty neat.

17
00:00:54.450 --> 00:00:55.900
So the load balancer,

18
00:00:55.900 --> 00:01:00.330
the application load balancer can verify that users are offended,

19
00:01:00.330 --> 00:01:02.640
skated before making requests.

20
00:01:02.640 --> 00:01:06.280
So this is really powerful for mobile applications where maybe

21
00:01:06.280 --> 00:01:10.040
you're tying incognito user pools for authentication.

22
00:01:10.040 --> 00:01:14.190
Now I'll select forward to, and we select our target group.

23
00:01:14.190 --> 00:01:18.340
And for the sake of this demo, I'll just select the same target group.

24
00:01:18.340 --> 00:01:23.260
So it's going to route to the same set of servers in our auto Skilling group.

25
00:01:23.260 --> 00:01:23.440
Now.

26
00:01:23.440 --> 00:01:26.360
The next thing we can do is group level stickiness,

27
00:01:26.360 --> 00:01:29.330
so we can add a sticky session.

28
00:01:29.330 --> 00:01:34.320
Four target groups based on this configuration and you can see the

29
00:01:34.320 --> 00:01:38.640
duration goes from one second up to seven days.

30
00:01:38.640 --> 00:01:38.890
Now.

31
00:01:38.890 --> 00:01:40.650
I won't enable this for this.

32
00:01:40.650 --> 00:01:44.910
I'll keep it off and then we specify our security policy.

33
00:01:44.910 --> 00:01:48.790
Now there are several security policies here and you'll want to be sure

34
00:01:48.790 --> 00:01:53.200
you're compliant with your requirements when you receive them.

35
00:01:53.200 --> 00:01:57.330
I'll use the default here and then we can specify a default.

36
00:01:57.330 --> 00:02:03.150
SSL certain the recommended way is to use Amazon Certificate Manager,

37
00:02:03.150 --> 00:02:07.340
which is a free service you can import from I am,

38
00:02:07.340 --> 00:02:11.570
or you can import the CERT directly to upload to the listener.

39
00:02:11.570 --> 00:02:13.480
So I'm gonna use from a C m.

40
00:02:13.480 --> 00:02:17.180
And I actually have a w w w dot Andrew s.

41
00:02:17.180 --> 00:02:18.050
Is that me?

42
00:02:18.050 --> 00:02:18.780
Cert?

43
00:02:18.780 --> 00:02:20.130
So we'll use that.

44
00:02:20.130 --> 00:02:24.700
I'll click on Save and then we have successfully created or

45
00:02:24.700 --> 00:02:29.200
listener on port for for three so I'll go back here.

46
00:02:29.200 --> 00:02:33.690
We see our two listeners now in one with the security policy in

47
00:02:33.690 --> 00:02:36.450
there both fording traffic to our Web server,

48
00:02:36.450 --> 00:02:38.700
a target groups.

49
00:02:38.700 --> 00:02:38.940
Now.

50
00:02:38.940 --> 00:02:42.620
One last thing is I want to open up Route 53 and I want

51
00:02:42.620 --> 00:02:44.590
to go in and add a record for that.

52
00:02:44.590 --> 00:02:47.810
W w w dot Andrew us to stop me.

53
00:02:47.810 --> 00:02:55.230
So let me do that now, and what I'm doing here is I'm creating www record.

54
00:02:55.230 --> 00:02:59.970
It's a C name and I'm pointing to the load balancer that we just created.

55
00:02:59.970 --> 00:03:01.510
So I'll click on create,

56
00:03:01.510 --> 00:03:04.820
and I'm going to give us a few minutes to replicate

57
00:03:04.820 --> 00:03:07.640
across the Internet for resolution.

58
00:03:07.640 --> 00:03:14.390
What I'll do is I'll open up www dot Andrew s is dot me

59
00:03:14.390 --> 00:03:15.980
Now what I'll do is I'll open up.

60
00:03:15.980 --> 00:03:17.260
W W W.

61
00:03:17.260 --> 00:03:22.200
Andrew s is dot me in a new tab and you'll see this is the

62
00:03:22.200 --> 00:03:25.840
original non secured site that we used,

63
00:03:25.840 --> 00:03:29.330
so it's already resolving to our load balancer.

64
00:03:29.330 --> 00:03:34.240
Now if I go ahead and force https traffic, there we go.

65
00:03:34.240 --> 00:03:39.270
We now have a secure connection with a certain validated by Amazon,

66
00:03:39.270 --> 00:03:41.140
and that's our a C M certain.

67
00:03:41.140 --> 00:03:45.550
So now if I go to a PHP info page,

68
00:03:45.550 --> 00:03:49.120
we get it and let me refresh and we should see a different I p.

69
00:03:49.120 --> 00:03:50.060
And we do.

70
00:03:50.060 --> 00:03:54.620
So now we're accepting and forwarding secured traffic via T.

71
00:03:54.620 --> 00:04:01.440
L s on an application low balancer to a back end of E C two instances Now,

72
00:04:01.440 --> 00:04:06.250
one last thing before we wrap this all up is that for target groups,

73
00:04:06.250 --> 00:04:09.290
instances can belong to multiple target groups.

74
00:04:09.290 --> 00:04:12.720
So if I create a new one here and call it B, I'll leave it.

75
00:04:12.720 --> 00:04:15.680
It instance we'll leave it at 80 will leave the default

76
00:04:15.680 --> 00:04:17.530
and I'll change the health check.

77
00:04:17.530 --> 00:04:22.500
I'll click on create and then I'm gonna manually register a target.

78
00:04:22.500 --> 00:04:25.710
I'll edit here toe add registered instances,

79
00:04:25.710 --> 00:04:30.130
all select one from Auto Skilling Group and add it to registered a

80
00:04:30.130 --> 00:04:34.600
click on safe and you'll see that it's set toe unused.

81
00:04:34.600 --> 00:04:37.310
And that's because we don't have a listener listening

82
00:04:37.310 --> 00:04:39.880
for traffic toe forward to this group.

83
00:04:39.880 --> 00:04:43.490
So if I go to my load balancer, I create a listener.

84
00:04:43.490 --> 00:04:49.940
If I add a new one and we'll do basic, http, but I'll do 80 80 instead of 80.

85
00:04:49.940 --> 00:04:56.190
I'll go ahead and forward to Web server be I'll accept it and then I'll save it.

86
00:04:56.190 --> 00:05:01.840
So now we have our additional 80 80 listener on our same load balancer.

87
00:05:01.840 --> 00:05:08.040
So if I go to my Web server, be Target group again and I look at targets,

88
00:05:08.040 --> 00:05:09.310
we'll see that it's healthy.

89
00:05:09.310 --> 00:05:13.010
And this is the same instance from our other target group.

90
00:05:13.010 --> 00:05:17.770
So now if I go up here and I go to Port 80 80 instead,

91
00:05:17.770 --> 00:05:22.090
we get the same page so you can see that we're using a

92
00:05:22.090 --> 00:05:24.610
different pour in a different listener.

93
00:05:24.610 --> 00:05:28.440
But we're hitting a shared instance in a target group,

94
00:05:28.440 --> 00:05:31.880
and this target group is our Web server be sent off.

95
00:05:31.880 --> 00:05:33.890
I refresh several times.

96
00:05:33.890 --> 00:05:36.340
You'll see we always get the same instance.

97
00:05:36.340 --> 00:05:40.740
It doesn't scale in load balance like APP Server A does.

98
00:05:40.740 --> 00:05:45.390
So that's how you can configure load balancers and application

99
00:05:45.390 --> 00:05:49.540
load balancers specifically with listeners,

100
00:05:49.540 --> 00:05:53.130
target groups and then different computer on the back end to

101
00:05:53.130 --> 00:05:58.350
span multiple availability zones for a highly available in

102
00:05:58.350 --> 00:06:00.800
resilient architecture design.

103
00:06:00.800 --> 00:06:00.950
Well,

104
00:06:00.950 --> 00:06:08.000
go ahead and in here and then in the next clip will pick up with a demo on network load balancing

