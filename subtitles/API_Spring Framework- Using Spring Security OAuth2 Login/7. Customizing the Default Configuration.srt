1
00:00:01,840 --> 00:00:06,300
Spring Boot conveniently configured some of the key OAuth2 providers

2
00:00:06,300 --> 00:00:10,460
for us in the CommonOAuth2Provider enum; however,

3
00:00:10,460 --> 00:00:15,940
it used some basic scopes, and these will probably not suffice.

4
00:00:15,940 --> 00:00:21,310
Say you need the user's friend list from Facebook or their gender, then you can

5
00:00:21,310 --> 00:00:25,040
override any of these settings in your application.yml file.

6
00:00:25,040 --> 00:00:29,660
Let's try to get the user's friends, which according to Facebook documentation,

7
00:00:29,660 --> 00:00:32,240
is the scope user_friends.

8
00:00:32,240 --> 00:00:36,060
We just override the scope in our application.yml file.

9
00:00:36,060 --> 00:00:37,980
If we try to log in with Facebook again,

10
00:00:37,980 --> 00:00:43,740
Facebook now prompts the user that cryptoportfolio wants this new scope,

11
00:00:43,740 --> 00:00:49,070
and if we approve the app getting our friends list. Notice

12
00:00:49,070 --> 00:00:51,140
that we did not have to reauthenticate.

13
00:00:51,140 --> 00:00:55,340
This is because we still have an active session with Facebook; however,

14
00:00:55,340 --> 00:00:58,590
the user has not yet consented for cryptoportfolio to

15
00:00:58,590 --> 00:01:03,230
have access to user_friends scope, so Facebook asks the user.

16
00:01:03,230 --> 00:01:07,020
Most providers will keep track of previously approved scopes; however,

17
00:01:07,020 --> 00:01:08,700
there is one alert,

18
00:01:08,700 --> 00:01:11,570
which says that some of the permissions below have not

19
00:01:11,570 --> 00:01:14,340
been approved for use by Facebook.

20
00:01:14,340 --> 00:01:15,410
Basically,

21
00:01:15,410 --> 00:01:19,540
the client, cryptoportfolio, is not approved to request user's friends

22
00:01:19,540 --> 00:01:24,240
list even though the user has approved the access.

23
00:01:24,240 --> 00:01:28,030
This is why OAuth2 is not exactly an authorization protocol.

24
00:01:28,030 --> 00:01:31,120
It's a delegated authorization protocol.

25
00:01:31,120 --> 00:01:35,600
The fact that the user consented to allow cryptoportfolio

26
00:01:35,600 --> 00:01:38,540
access to their friends doesn't matter.

27
00:01:38,540 --> 00:01:42,490
The client is still not authorized to access this data as Facebook has a

28
00:01:42,490 --> 00:01:47,180
policy that new clients can only have access to limited scopes,

29
00:01:47,180 --> 00:01:49,740
such as the user's public profile and email.

30
00:01:49,740 --> 00:01:51,840
If they want more access,

31
00:01:51,840 --> 00:01:54,130
then they will have to go through a vetting process with

32
00:01:54,130 --> 00:01:57,650
Facebook and agree to certain terms and conditions on how

33
00:01:57,650 --> 00:01:58,920
they're going to use that data.

34
00:01:58,920 --> 00:02:03,270
So again, even though the user delegated authorization to the client,

35
00:02:03,270 --> 00:02:07,640
the client still was not authorized to access the protected resource.

36
00:02:07,640 --> 00:02:16,000
That's the difference between delegated authorization and authorization. Let's wrap this module up, next.

