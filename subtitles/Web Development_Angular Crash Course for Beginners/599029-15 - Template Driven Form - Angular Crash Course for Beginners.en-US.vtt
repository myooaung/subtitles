WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.440 --> 00:00:05.095
Now that you have mastered
model-driven forms,

00:00:05.095 --> 00:00:08.830
it is super easy to create
template driven forms

00:00:08.830 --> 00:00:10.195
because template driven forms

00:00:10.195 --> 00:00:13.135
are internally
model-driven forms,

00:00:13.135 --> 00:00:16.270
but they are driven
by the directives in

00:00:16.270 --> 00:00:19.960
the HTML instead of
the code in the model.

00:00:19.960 --> 00:00:22.750
In case of model-driven
forms, we created form,

00:00:22.750 --> 00:00:25.480
group, form, control,
etc, in the model.

00:00:25.480 --> 00:00:27.970
Then we draw the
forms in the HTML.

00:00:27.970 --> 00:00:30.700
Here we are going to do
the other way around.

00:00:30.700 --> 00:00:32.650
That is we are going to
use some direct cues

00:00:32.650 --> 00:00:35.020
given by angular in the HTML.

00:00:35.020 --> 00:00:37.990
And we will drive the
model from there.

00:00:37.990 --> 00:00:41.005
Just by adding the forms module

00:00:41.005 --> 00:00:43.260
to the NG Module configuration,

00:00:43.260 --> 00:00:46.490
we will get a N G form object

00:00:46.490 --> 00:00:49.835
that we can use in
our HTML template.

00:00:49.835 --> 00:00:54.665
Internally, this energy form
creates a form group object.

00:00:54.665 --> 00:00:57.380
And to associate
a form control to

00:00:57.380 --> 00:01:00.230
this form group on
the input types

00:01:00.230 --> 00:01:02.225
which would use to directly use

00:01:02.225 --> 00:01:06.365
the NG model and
that name directive.

00:01:06.365 --> 00:01:08.135
The NG model creates

00:01:08.135 --> 00:01:10.805
a form control object
for this input type,

00:01:10.805 --> 00:01:13.280
and the name will map

00:01:13.280 --> 00:01:17.150
it to a key or a
property on the model.

00:01:17.150 --> 00:01:21.020
So this name here tells
to which property on

00:01:21.020 --> 00:01:26.070
the model this particular input
type should be binded to.

00:01:27.310 --> 00:01:30.065
In this lecture,
we'll start working

00:01:30.065 --> 00:01:32.180
on our template driven form.

00:01:32.180 --> 00:01:35.509
To do that, go to app
dot component dot HTML,

00:01:35.509 --> 00:01:38.585
control a, delete everything.

00:01:38.585 --> 00:01:41.180
First element is the element

00:01:41.180 --> 00:01:42.635
which will act as a container.

00:01:42.635 --> 00:01:44.405
So class is equal to

00:01:44.405 --> 00:01:47.480
container is the
style from Bootstrap.

00:01:47.480 --> 00:01:50.690
Within this do we are
going to define our farm.

00:01:50.690 --> 00:01:53.435
And to define a
template driven form,

00:01:53.435 --> 00:01:55.775
we use pound symbol,

00:01:55.775 --> 00:01:58.635
whatever name or alias
we want to give it.

00:01:58.635 --> 00:02:04.830
Person form is equal to within
double-quotes and G form.

00:02:05.740 --> 00:02:10.145
This line here is equivalent
to the following.

00:02:10.145 --> 00:02:12.515
When we developed
the reactive forms,

00:02:12.515 --> 00:02:14.150
our model-driven forms,

00:02:14.150 --> 00:02:18.260
this dot person formed is
equal to new form group.

00:02:18.260 --> 00:02:22.715
So angular internally we'll
create a form instance,

00:02:22.715 --> 00:02:24.335
a form-group
instance, and it will

00:02:24.335 --> 00:02:26.510
associate it with this alias.

00:02:26.510 --> 00:02:29.360
Or you can think of it
as an object reference.

00:02:29.360 --> 00:02:32.570
You say person dot
form dot value

00:02:32.570 --> 00:02:34.205
anywhere on this
page if you use it

00:02:34.205 --> 00:02:36.305
in string interpolation syntax,

00:02:36.305 --> 00:02:39.410
Wilson form dot value,

00:02:39.410 --> 00:02:42.484
that will give us
the entire object

00:02:42.484 --> 00:02:44.165
and the values within this form,

00:02:44.165 --> 00:02:46.070
right now it is empty
because it does not

00:02:46.070 --> 00:02:48.860
have any input types
associated with it.

00:02:48.860 --> 00:02:50.720
But usually it will contain

00:02:50.720 --> 00:02:52.640
the entire form object with

00:02:52.640 --> 00:02:55.894
all the input types
as name and values.

00:02:55.894 --> 00:02:59.180
So that's the first
line or the first step.

00:02:59.180 --> 00:03:01.910
The next step is to
go ahead and define

00:03:01.910 --> 00:03:06.110
the input types or the
form controls within you.

00:03:06.110 --> 00:03:08.540
Give it a label,

00:03:08.540 --> 00:03:09.650
will use some styling,

00:03:09.650 --> 00:03:10.985
we'll come back to it later.

00:03:10.985 --> 00:03:14.550
Label is first name.

00:03:14.830 --> 00:03:23.045
Input, type is equal to text,

00:03:23.045 --> 00:03:26.975
name is equal to firstname.

00:03:26.975 --> 00:03:31.055
And NG model.

00:03:31.055 --> 00:03:33.455
This is going to do
a two-way binding

00:03:33.455 --> 00:03:35.045
as well as this tells

00:03:35.045 --> 00:03:41.165
Angular that it should
create a form control.

00:03:41.165 --> 00:03:44.195
So once we add NG model
and give it a name,

00:03:44.195 --> 00:03:45.470
it is equivalent to the

00:03:45.470 --> 00:03:48.735
following when we
did react to forms.

00:03:48.735 --> 00:03:50.980
So right here when
we define email

00:03:50.980 --> 00:03:52.885
is equal to new form control.

00:03:52.885 --> 00:03:54.490
That is exactly what is

00:03:54.490 --> 00:03:56.080
happening here when
you give it a name,

00:03:56.080 --> 00:03:59.410
angular knows that it should
create a form control with

00:03:59.410 --> 00:04:02.740
the following name and it
should bind it to the model.

00:04:02.740 --> 00:04:04.270
That's what we are telling using

00:04:04.270 --> 00:04:08.350
NG model it does
two-way data binding

00:04:08.350 --> 00:04:10.210
will define our model later on

00:04:10.210 --> 00:04:11.830
and we'll see how the values

00:04:11.830 --> 00:04:13.420
from this input will be binded

00:04:13.420 --> 00:04:16.045
to the model and vice versa.

00:04:16.045 --> 00:04:17.875
So that's the key.

00:04:17.875 --> 00:04:19.480
Once we have that,

00:04:19.480 --> 00:04:21.520
we can copy that.

00:04:21.520 --> 00:04:26.470
Paste it four times.

00:04:26.470 --> 00:04:32.880
The second field is
LastName, third is male.

00:04:33.370 --> 00:04:37.355
Next we have gender.

00:04:37.355 --> 00:04:39.800
So go ahead and use gender.

00:04:39.800 --> 00:04:43.505
Gender is of type a
radio input type.

00:04:43.505 --> 00:04:45.110
Radio.

00:04:45.110 --> 00:04:47.180
Name is equal to gender,

00:04:47.180 --> 00:04:49.370
will change the names
for the others as well.

00:04:49.370 --> 00:04:51.335
And the value is male.

00:04:51.335 --> 00:04:54.060
That's the first one. Copy that.

00:04:54.700 --> 00:04:57.140
Paste it.

00:04:57.140 --> 00:05:00.965
Female is the second one.

00:05:00.965 --> 00:05:02.900
We can remove this extra one

00:05:02.900 --> 00:05:04.760
we'll come back to
address in the next one

00:05:04.760 --> 00:05:09.050
because that says
subgroup. Crawl up.

00:05:09.050 --> 00:05:11.610
Got lastName.

00:05:11.890 --> 00:05:15.350
Looks like I have accidentally
used off the first name.

00:05:15.350 --> 00:05:16.745
So let's paste that.

00:05:16.745 --> 00:05:20.135
This is first name
and this here,

00:05:20.135 --> 00:05:22.415
the name should be lastName.

00:05:22.415 --> 00:05:24.485
The next guy should be email.

00:05:24.485 --> 00:05:26.435
And we got the gender.

00:05:26.435 --> 00:05:28.745
So FirstName, lastname, email

00:05:28.745 --> 00:05:31.565
and gender for fields
so far, save it.

00:05:31.565 --> 00:05:33.500
So in this lecture
we have created

00:05:33.500 --> 00:05:36.560
a template driven form to that.

00:05:36.560 --> 00:05:39.170
To do that, within
the form element,

00:05:39.170 --> 00:05:41.345
we have used pound
symbol, person form.

00:05:41.345 --> 00:05:42.710
This is like an alias to

00:05:42.710 --> 00:05:45.485
the form object that
Angular creates.

00:05:45.485 --> 00:05:47.315
Within that, you have defined

00:05:47.315 --> 00:05:51.350
various input types on which
you have given a name.

00:05:51.350 --> 00:05:53.810
And then NG model,

00:05:53.810 --> 00:05:57.020
this step here is
equivalent to creating

00:05:57.020 --> 00:06:01.865
a form control and
associating property to it.

00:06:01.865 --> 00:06:03.425
So it's like binding

00:06:03.425 --> 00:06:05.300
the particular input type text

00:06:05.300 --> 00:06:08.250
to form control or a model.

00:06:09.670 --> 00:06:14.675
In this lecture, we will add
address to our template.

00:06:14.675 --> 00:06:16.670
Address is a sub-component,

00:06:16.670 --> 00:06:18.080
so you can either
add it at the end

00:06:18.080 --> 00:06:19.879
or just before the gender.

00:06:19.879 --> 00:06:24.560
Define that do.
Let's call it up.

00:06:24.560 --> 00:06:28.940
And within the deal
will have us subgroup.

00:06:28.940 --> 00:06:31.445
So we will define
a subgroup right,

00:06:31.445 --> 00:06:36.649
on this do here using
NG model group.

00:06:36.649 --> 00:06:40.265
And GEE, model group
is equal to address

00:06:40.265 --> 00:06:42.110
skew that name so that it

00:06:42.110 --> 00:06:44.240
can be binded with
our model later on.

00:06:44.240 --> 00:06:46.744
So this here is equivalent

00:06:46.744 --> 00:06:50.180
to the following in our
model-driven approach,

00:06:50.180 --> 00:06:52.700
wherever we are defining
address right here,

00:06:52.700 --> 00:06:55.115
address colon, new form group.

00:06:55.115 --> 00:06:57.620
So that is exactly what
we are doing here using

00:06:57.620 --> 00:07:00.050
the NG model group directly,

00:07:00.050 --> 00:07:01.790
we are telling that
this is a subgroup

00:07:01.790 --> 00:07:04.640
of the main form group.

00:07:04.640 --> 00:07:08.030
And we'll define,
do the first deal.

00:07:08.030 --> 00:07:09.910
We'll have the city.

00:07:09.910 --> 00:07:13.790
You can grab one of
the earlier fields,

00:07:13.790 --> 00:07:21.290
say email that up that
paste it right there.

00:07:21.290 --> 00:07:25.490
How CT Then street address

00:07:25.490 --> 00:07:27.635
to start with street,
city and country.

00:07:27.635 --> 00:07:29.375
So paste this three times.

00:07:29.375 --> 00:07:31.550
The first one is treat,

00:07:31.550 --> 00:07:33.860
change that to street address.

00:07:33.860 --> 00:07:39.245
Second one is the city to city.

00:07:39.245 --> 00:07:41.270
And the last one is country,

00:07:41.270 --> 00:07:43.055
which should be a select box.

00:07:43.055 --> 00:07:46.280
So get rid of the
input type text. Use.

00:07:46.280 --> 00:07:52.850
Select on the Select name

00:07:52.850 --> 00:07:59.239
is equal to country.

00:07:59.239 --> 00:08:01.460
And NG model.

00:08:01.460 --> 00:08:03.170
Don't forget to add that.

00:08:03.170 --> 00:08:04.640
That is the one.

00:08:04.640 --> 00:08:06.125
The combination of these two

00:08:06.125 --> 00:08:07.760
is what is telling
Angular to create

00:08:07.760 --> 00:08:09.589
a form control and associated

00:08:09.589 --> 00:08:12.440
with this particular
property name.

00:08:12.440 --> 00:08:16.115
Within select use, option.

00:08:16.115 --> 00:08:25.865
Value is equal to USA
and display USA as well.

00:08:25.865 --> 00:08:31.110
Copy that and paste
it a couple of times.

00:08:31.690 --> 00:08:34.290
India.

00:08:34.630 --> 00:08:37.535
And the third one change it to

00:08:37.535 --> 00:08:40.980
Brazil this time
instead of Canada,

00:08:41.530 --> 00:08:46.380
we have completed our
template driven form.

00:08:48.130 --> 00:08:51.500
The next step is to
add a submit button.

00:08:51.500 --> 00:08:53.840
So right inside the
form at the end of it,

00:08:53.840 --> 00:09:01.459
added do inside it defined
input type is equal to submit.

00:09:01.459 --> 00:09:03.380
Close it right there,

00:09:03.380 --> 00:09:06.170
and we need to handle
the submit event.

00:09:06.170 --> 00:09:10.935
When that happens. On the form.

00:09:10.935 --> 00:09:14.560
Use NG, submit within brackets.

00:09:14.560 --> 00:09:16.180
And G, submit is

00:09:16.180 --> 00:09:20.560
the angular event or the
DOM event that is fired.

00:09:20.560 --> 00:09:24.040
And we can call it on submit
within double-quotes.

00:09:24.040 --> 00:09:26.050
On submit is the method

00:09:26.050 --> 00:09:28.345
that we're going to
define in the model.

00:09:28.345 --> 00:09:30.700
And we'll pass the
form information per

00:09:30.700 --> 00:09:35.575
cell form dot value.

00:09:35.575 --> 00:09:37.945
Since we haven't
defined any model,

00:09:37.945 --> 00:09:41.050
these fields will not
be binded to the model.

00:09:41.050 --> 00:09:44.710
So we are defining or we are
using person form dot value,

00:09:44.710 --> 00:09:46.900
which will return
this entire object,

00:09:46.900 --> 00:09:49.795
the entire form
object's value as json.

00:09:49.795 --> 00:09:53.520
So go back to app component ts,

00:09:53.520 --> 00:09:57.785
get rid of the title app
and define on submit,

00:09:57.785 --> 00:10:01.310
which is a public method,
public on Submit.

00:10:01.310 --> 00:10:04.205
It gets all the data.

00:10:04.205 --> 00:10:09.005
And inside this we can use
the console dot log data.

00:10:09.005 --> 00:10:11.420
Save it, and we will run and see

00:10:11.420 --> 00:10:13.340
our application in action
in the next lecture.

00:10:13.340 --> 00:10:14.645
In this one, you have simply

00:10:14.645 --> 00:10:16.550
added a submit button handle.

00:10:16.550 --> 00:10:17.885
The NG Submit.

00:10:17.885 --> 00:10:19.820
On submit is the function

00:10:19.820 --> 00:10:21.665
that we have defined
in our model.

00:10:21.665 --> 00:10:26.220
We are passing in the entire
form object's value to it.

00:10:27.010 --> 00:10:29.315
We are all set to see.

00:10:29.315 --> 00:10:30.965
Template form in action.

00:10:30.965 --> 00:10:33.665
Before we go ahead and
do that in this gender,

00:10:33.665 --> 00:10:36.290
when we defined it here,
add a couple of values.

00:10:36.290 --> 00:10:39.485
Value is equal to male,

00:10:39.485 --> 00:10:40.850
and the value for

00:10:40.850 --> 00:10:44.580
the second one value
is equal to female.

00:10:44.830 --> 00:10:47.315
Within double-quotes, save it.

00:10:47.315 --> 00:10:50.480
And the last step is
to open up the app dot

00:10:50.480 --> 00:10:54.980
module.js and import
the forms module,

00:10:54.980 --> 00:11:04.760
import forms module from
Angular slash forms.

00:11:04.760 --> 00:11:05.960
Earlier you how important

00:11:05.960 --> 00:11:07.640
reactive forms module when you

00:11:07.640 --> 00:11:09.755
worked with model-driven
or reactive forms.

00:11:09.755 --> 00:11:12.730
Here it is the forms
module and add it

00:11:12.730 --> 00:11:16.390
to imports forms module,

00:11:16.390 --> 00:11:18.850
save it, start the
application go

00:11:18.850 --> 00:11:21.700
to view or to
integrated terminal.

00:11:21.700 --> 00:11:23.380
And G.

00:11:23.380 --> 00:11:26.990
So hyphen 0.

00:11:27.180 --> 00:11:30.490
And that will start up our
application in the meantime,

00:11:30.490 --> 00:11:32.530
let's summarize what
we have done so far.

00:11:32.530 --> 00:11:35.785
We have started by including
the bootstrap.css,

00:11:35.785 --> 00:11:37.255
although we haven't applied,

00:11:37.255 --> 00:11:39.520
it's an assignment for
you to go ahead and

00:11:39.520 --> 00:11:42.220
apply the styles
in our template.

00:11:42.220 --> 00:11:45.430
Within the template, they
all started by defining

00:11:45.430 --> 00:11:48.970
a form using this pound
person Form Syntax

00:11:48.970 --> 00:11:50.350
is equal to energy form.

00:11:50.350 --> 00:11:54.415
This is asking angular
to create f. form group.

00:11:54.415 --> 00:11:55.870
And within the form group,

00:11:55.870 --> 00:11:58.705
we have defined
several input types.

00:11:58.705 --> 00:12:00.655
We have asked angular to create

00:12:00.655 --> 00:12:03.610
a form control the
combination of name and

00:12:03.610 --> 00:12:06.580
this NG model here tells
Angular that it should

00:12:06.580 --> 00:12:10.315
create a form control and
associated with the model.

00:12:10.315 --> 00:12:12.580
Let's see it on our web browser.

00:12:12.580 --> 00:12:14.095
So there is our form.

00:12:14.095 --> 00:12:16.435
You can enter whatever
details you want.

00:12:16.435 --> 00:12:23.005
John Bailey, j.b@gmail.com.

00:12:23.005 --> 00:12:26.065
Gender is male, street address.

00:12:26.065 --> 00:12:28.315
Use any street address test,

00:12:28.315 --> 00:12:31.315
test. Country is India.

00:12:31.315 --> 00:12:33.535
Submit and we hit Submit,

00:12:33.535 --> 00:12:35.185
we should see something
on the console.

00:12:35.185 --> 00:12:37.165
So go to the console,

00:12:37.165 --> 00:12:41.200
go to View Developer
JavaScript console

00:12:41.200 --> 00:12:42.385
or use the shortcut.

00:12:42.385 --> 00:12:47.720
And there is our object with
all the information for us.

00:12:47.970 --> 00:12:51.055
So it has email first address,

00:12:51.055 --> 00:12:54.745
FirstName, Gender, LastName
address, and so on.

00:12:54.745 --> 00:13:02.020
That dresses up top
here. Driven form.

00:13:02.020 --> 00:13:03.220
We have focused on

00:13:03.220 --> 00:13:07.315
the view and we haven't
done anything on the model,

00:13:07.315 --> 00:13:10.270
or we did not do any
two-way data binding.

00:13:10.270 --> 00:13:11.710
In this lecture,
we're going to do

00:13:11.710 --> 00:13:14.230
both and see how easy
it is to do that.

00:13:14.230 --> 00:13:17.500
Go to the model which
is app component ts.

00:13:17.500 --> 00:13:20.960
And to define the model

00:13:20.960 --> 00:13:23.660
for our application or the
domain for our application,

00:13:23.660 --> 00:13:25.655
we have all the
following fields.

00:13:25.655 --> 00:13:27.650
Firstname, lastname,
email, street,

00:13:27.650 --> 00:13:29.135
city, country, and gender.

00:13:29.135 --> 00:13:31.700
So start with first name,

00:13:31.700 --> 00:13:34.625
colon of type string.

00:13:34.625 --> 00:13:36.650
You can make these public if you

00:13:36.650 --> 00:13:38.840
want to or leave them as it is.

00:13:38.840 --> 00:13:42.425
Copy that lastname, email,

00:13:42.425 --> 00:13:46.970
street, city, country,
finally, gender.

00:13:46.970 --> 00:13:50.045
So change them. Lastname
is the second field.

00:13:50.045 --> 00:13:52.145
Third one is e-mail.

00:13:52.145 --> 00:13:59.645
The next one is treat for
the address, city, country.

00:13:59.645 --> 00:14:03.200
And finally, the gender.

00:14:03.200 --> 00:14:05.810
So each of these
fields represent

00:14:05.810 --> 00:14:07.400
an input control on

00:14:07.400 --> 00:14:09.230
the UI and when the
values are submitted,

00:14:09.230 --> 00:14:11.195
they should be binded to this.

00:14:11.195 --> 00:14:12.890
And we're going to
do two-way binding.

00:14:12.890 --> 00:14:15.110
That is, if you assign
any value here,

00:14:15.110 --> 00:14:18.485
say John, that should
go on to the UI.

00:14:18.485 --> 00:14:20.495
And if we type something here,

00:14:20.495 --> 00:14:23.360
that should come back into
this model here so that we can

00:14:23.360 --> 00:14:24.590
make a backend call or do

00:14:24.590 --> 00:14:26.600
whatever we want to
do with that data.

00:14:26.600 --> 00:14:28.415
So go back to HTML,

00:14:28.415 --> 00:14:30.560
app component HTML, scroll

00:14:30.560 --> 00:14:34.040
up to the first
field, firstName.

00:14:34.040 --> 00:14:38.420
This NG model will slightly
change to do two-way binding.

00:14:38.420 --> 00:14:42.005
The syntax is within
square brackets,

00:14:42.005 --> 00:14:44.000
within parenthesis
or regular brackets,

00:14:44.000 --> 00:14:47.150
we use NG model, close
the parenthesis,

00:14:47.150 --> 00:14:49.070
close the square brackets is

00:14:49.070 --> 00:14:51.635
equal to within double-quotes.

00:14:51.635 --> 00:14:55.250
We tell which field on
the model the value of

00:14:55.250 --> 00:14:58.685
this input control
should be binded to,

00:14:58.685 --> 00:15:00.949
and it is 2-way binding syntax.

00:15:00.949 --> 00:15:04.490
And GEE model within square
brackets and parentheses.

00:15:04.490 --> 00:15:05.930
And then the right-hand side,

00:15:05.930 --> 00:15:10.205
we provide them model
name, which is firstName.

00:15:10.205 --> 00:15:12.260
So inside the model
this is firstName.

00:15:12.260 --> 00:15:14.510
So we're binding
that input control

00:15:14.510 --> 00:15:16.565
to our model right here.

00:15:16.565 --> 00:15:22.100
You can copy this and paste
it wherever you see NG model.

00:15:22.100 --> 00:15:24.365
This is LastName.

00:15:24.365 --> 00:15:25.730
Next.

00:15:25.730 --> 00:15:32.465
For the email to the same
changes to email. Gender.

00:15:32.465 --> 00:15:34.475
The same.

00:15:34.475 --> 00:15:35.945
Twice.

00:15:35.945 --> 00:15:37.880
Changes to gender.

00:15:37.880 --> 00:15:39.755
Gender.

00:15:39.755 --> 00:15:42.425
Go to address the
first one is street.

00:15:42.425 --> 00:15:45.690
Change that street.

00:15:46.180 --> 00:15:51.830
Scroll down city to

00:15:51.830 --> 00:15:55.940
city than we have country,
which is right here.

00:15:55.940 --> 00:15:57.990
Country.

00:15:59.220 --> 00:16:04.465
So we have successfully done
two-way data binding here.

00:16:04.465 --> 00:16:07.435
So if you go back to your
UI, once it refreshes,

00:16:07.435 --> 00:16:09.850
you see John already
there because in

00:16:09.850 --> 00:16:11.110
the component we have

00:16:11.110 --> 00:16:13.525
initialized with
the value two John.

00:16:13.525 --> 00:16:16.375
From the backend, we can
retrieve the values and prepare,

00:16:16.375 --> 00:16:18.730
pre-populate the form
with those values.

00:16:18.730 --> 00:16:20.560
If the user wants
to change them,

00:16:20.560 --> 00:16:23.440
you can change them
to whatever he wants.

00:16:23.440 --> 00:16:28.375
Say Bob. Lastname is
the period d like me.

00:16:28.375 --> 00:16:32.635
E-mail is b.t@gmail.com.

00:16:32.635 --> 00:16:37.465
Mail is the gender and
the address is say,

00:16:37.465 --> 00:16:42.100
spice would Springs, Austin.

00:16:42.100 --> 00:16:45.100
And the country is USA.

00:16:45.100 --> 00:16:47.125
Now when he clicked Submit,

00:16:47.125 --> 00:16:51.100
we haven't made or we're
not printing any data here.

00:16:51.100 --> 00:16:52.675
But we can do that.

00:16:52.675 --> 00:16:58.610
Firstname, this dot first name.

00:16:59.490 --> 00:17:01.945
That's good enough.
Once I print that,

00:17:01.945 --> 00:17:03.070
you know that we're getting

00:17:03.070 --> 00:17:04.870
all the details in
a similar fashion.

00:17:04.870 --> 00:17:06.355
The form has refreshed again.

00:17:06.355 --> 00:17:12.130
So john.dj dot t@gmail.com.

00:17:12.130 --> 00:17:13.600
Gender is male.

00:17:13.600 --> 00:17:16.645
Street test, test.

00:17:16.645 --> 00:17:19.510
And the country is India submit.

00:17:19.510 --> 00:17:21.324
You have to go to the console,

00:17:21.324 --> 00:17:25.215
go to View Developer Console
or use the shortcut.

00:17:25.215 --> 00:17:28.025
And you see John right there.

00:17:28.025 --> 00:17:29.615
So we have successfully binded

00:17:29.615 --> 00:17:31.235
the information and
it is 2-way binding.

00:17:31.235 --> 00:17:32.510
As you can see initially,

00:17:32.510 --> 00:17:34.745
the view has John already.

00:17:34.745 --> 00:17:37.130
So that's one way coming
from the model to the view.

00:17:37.130 --> 00:17:42.950
And whenever you change it
to test, hit Submit, now,

00:17:42.950 --> 00:17:46.190
that value is already
in the model for us,

00:17:46.190 --> 00:17:48.890
so Angular takes care of
us because we have used

00:17:48.890 --> 00:17:51.830
NG model using the
following syntax

00:17:51.830 --> 00:17:54.450
to do two-way binding.
