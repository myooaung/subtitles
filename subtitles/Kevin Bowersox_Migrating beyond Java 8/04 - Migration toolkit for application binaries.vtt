WEBVTT
1
00:00:00.005 --> 00:00:01.008
- [Instructor] The Migration Toolkit

2
00:00:01.008 --> 00:00:05.000
for Application Binaries provided by IBM

3
00:00:05.000 --> 00:00:06.005
is another useful tool

4
00:00:06.005 --> 00:00:09.000
for identifying potential migration issues

5
00:00:09.000 --> 00:00:10.008
in an application.

6
00:00:10.008 --> 00:00:13.002
The tool is meant to help with migrations

7
00:00:13.002 --> 00:00:15.005
between application servers.

8
00:00:15.005 --> 00:00:18.006
However, it also provides a helpful report

9
00:00:18.006 --> 00:00:22.004
that details potential Java migration problems.

10
00:00:22.004 --> 00:00:26.003
We can use this report to identify any issues

11
00:00:26.003 --> 00:00:31.002
migrating from Java 8 to Java 11 within our application.

12
00:00:31.002 --> 00:00:32.006
To get started doing that,

13
00:00:32.006 --> 00:00:35.007
we're going to click on the Download button

14
00:00:35.007 --> 00:00:38.005
on the website for the toolkit.

15
00:00:38.005 --> 00:00:40.003
This is going to prompt us

16
00:00:40.003 --> 00:00:42.006
to accept the terms of the license.

17
00:00:42.006 --> 00:00:45.000
So I'll click on Accept and Download.

18
00:00:45.000 --> 00:00:47.000
And then I have my browser set up

19
00:00:47.000 --> 00:00:51.004
to automatically place the downloaded file on my desktop.

20
00:00:51.004 --> 00:00:53.001
We will receive a warning

21
00:00:53.001 --> 00:00:55.006
because it's a jar file from the browser

22
00:00:55.006 --> 00:00:59.001
that prompts us regarding a security alert.

23
00:00:59.001 --> 00:01:01.007
Now, you can go ahead and keep the file.

24
00:01:01.007 --> 00:01:04.005
And from here, I'm just going to navigate

25
00:01:04.005 --> 00:01:06.005
to a PowerShell terminal.

26
00:01:06.005 --> 00:01:08.005
And if we take a look at my desktop,

27
00:01:08.005 --> 00:01:12.005
you'll notice the binary app scanner installer.jar file.

28
00:01:12.005 --> 00:01:17.004
Now, this is just the installer for the binary app scanner.

29
00:01:17.004 --> 00:01:19.009
In order to kick off the installation,

30
00:01:19.009 --> 00:01:21.007
we're going to use Java,

31
00:01:21.007 --> 00:01:24.005
and we'll specify the -jar command,

32
00:01:24.005 --> 00:01:27.000
and then we're going to point to the jar file

33
00:01:27.000 --> 00:01:28.004
we'd like to run.

34
00:01:28.004 --> 00:01:32.005
In this case, that's the binary app scanner installer.jar.

35
00:01:32.005 --> 00:01:34.003
And once we kick that off,

36
00:01:34.003 --> 00:01:37.004
it's going to begin the installation process

37
00:01:37.004 --> 00:01:39.001
and ask us if we would like

38
00:01:39.001 --> 00:01:41.003
to read the terms of the license.

39
00:01:41.003 --> 00:01:44.001
Now, I'm just going to hit X and hit Enter

40
00:01:44.001 --> 00:01:46.000
to skip reading the license.

41
00:01:46.000 --> 00:01:48.003
I'll have to do that one more time.

42
00:01:48.003 --> 00:01:51.006
It's then going to ask us if we accept the license.

43
00:01:51.006 --> 00:01:56.003
I'll specify one to indicate I accept and then hit Enter.

44
00:01:56.003 --> 00:01:58.006
The next thing it's going to do is prompt us

45
00:01:58.006 --> 00:02:02.002
for where we would like to install the toolkit.

46
00:02:02.002 --> 00:02:04.008
Now, because we launched the command from the desktop,

47
00:02:04.008 --> 00:02:07.005
it's going to recommend that directory,

48
00:02:07.005 --> 00:02:10.001
and I'm okay with that, so I'll just hit enter.

49
00:02:10.001 --> 00:02:12.001
You'll notice that the toolkit

50
00:02:12.001 --> 00:02:17.004
is then installed within WAMT directory.

51
00:02:17.004 --> 00:02:19.002
So if we clear the terminal

52
00:02:19.002 --> 00:02:22.008
and navigate into the WAMT directory,

53
00:02:22.008 --> 00:02:27.007
here we're going to find the binary app scanner.jar file.

54
00:02:27.007 --> 00:02:30.000
And this is the actual scanner

55
00:02:30.000 --> 00:02:34.005
that we'll use to scan our application binaries

56
00:02:34.005 --> 00:02:39.005
to determine migration issues between Java 8 and Java 11.

57
00:02:39.005 --> 00:02:41.006
Now, to do that, we're once again,

58
00:02:41.006 --> 00:02:44.008
going to use the Java-jar command.

59
00:02:44.008 --> 00:02:47.006
We'll point to the binary app scanner

60
00:02:47.006 --> 00:02:50.000
because it's what we'd like to execute.

61
00:02:50.000 --> 00:02:53.003
And now we need to tell the app scanner

62
00:02:53.003 --> 00:02:56.006
what jar file we would like it to scan.

63
00:02:56.006 --> 00:03:01.002
So I'm within the WAMT directory on my desktop.

64
00:03:01.002 --> 00:03:04.003
What I'm going to do is traverse back a directory

65
00:03:04.003 --> 00:03:07.001
into the exercise files directory.

66
00:03:07.001 --> 00:03:12.007
And then here, we can navigate into the files

67
00:03:12.007 --> 00:03:13.009
for this lesson,

68
00:03:13.009 --> 00:03:20.001
which will be in the O4_04_begin directory.

69
00:03:20.001 --> 00:03:25.005
And now we need to access the binaries for our application.

70
00:03:25.005 --> 00:03:29.006
So Maven places the binaries within the target directory,

71
00:03:29.006 --> 00:03:32.003
and then the name of our jar file

72
00:03:32.003 --> 00:03:37.003
was hplus-spor-api.jar.

73
00:03:37.003 --> 00:03:40.005
Okay. So we told it what to scan.

74
00:03:40.005 --> 00:03:43.002
Now we have to tell it a few more things.

75
00:03:43.002 --> 00:03:45.001
The next thing we'll need to do

76
00:03:45.001 --> 00:03:51.008
is specify the --analyzeJavaSE flag.

77
00:03:51.008 --> 00:03:55.008
And this indicates that we would like the binary scanner

78
00:03:55.008 --> 00:03:58.003
to scan for Java standard edition.

79
00:03:58.003 --> 00:04:02.007
And now we need to tell it the version we're coming from

80
00:04:02.007 --> 00:04:04.008
and the version we're going to.

81
00:04:04.008 --> 00:04:06.004
So to do that,

82
00:04:06.004 --> 00:04:10.004
we first use the source Java flag

83
00:04:10.004 --> 00:04:13.005
to indicate the version we're starting at,

84
00:04:13.005 --> 00:04:16.007
and that's going to be Oracle 8.

85
00:04:16.007 --> 00:04:19.000
And then we need to specify

86
00:04:19.000 --> 00:04:21.003
what version we would like to end up on.

87
00:04:21.003 --> 00:04:25.007
To do that, we use the --targetJava flag,

88
00:04:25.007 --> 00:04:30.003
and we're going to then set that to Java 11.

89
00:04:30.003 --> 00:04:33.002
Okay. So we're set up to perform the scan.

90
00:04:33.002 --> 00:04:34.009
I'll hit enter to kick it off,

91
00:04:34.009 --> 00:04:38.006
and you'll see that the scan begins.

92
00:04:38.006 --> 00:04:40.009
Once the scan is completed,

93
00:04:40.009 --> 00:04:43.009
the browser will open with a report

94
00:04:43.009 --> 00:04:47.000
where we can see the findings from the scanner.

95
00:04:47.000 --> 00:04:49.004
You'll notice that the findings

96
00:04:49.004 --> 00:04:52.003
are placed into three severity categories,

97
00:04:52.003 --> 00:04:54.009
severe, warning, and information.

98
00:04:54.009 --> 00:04:57.003
If you scroll down the report,

99
00:04:57.003 --> 00:05:01.009
you can find the items that the scanner has identified.

100
00:05:01.009 --> 00:05:03.008
So if we take a look at the first item,

101
00:05:03.008 --> 00:05:06.008
do not use APIs from the sun packages.

102
00:05:06.008 --> 00:05:09.007
This is access to the JDK internals

103
00:05:09.007 --> 00:05:11.002
that we've already talked about

104
00:05:11.002 --> 00:05:14.004
and we have identified with jdeps.

105
00:05:14.004 --> 00:05:19.009
So you'll notice the report does point to the exact class

106
00:05:19.009 --> 00:05:23.004
and the lines where these issues were found.

107
00:05:23.004 --> 00:05:25.007
Now, since we've already found these with jdeps,

108
00:05:25.007 --> 00:05:28.001
we'll continue on within the report.

109
00:05:28.001 --> 00:05:31.002
And you'll notice within the warning section,

110
00:05:31.002 --> 00:05:36.000
it indicates that Java.XML.bind and Java.activation modules

111
00:05:36.000 --> 00:05:38.002
were removed from JDK 11.

112
00:05:38.002 --> 00:05:42.005
So we talked about the modules being removed from Java.

113
00:05:42.005 --> 00:05:45.003
We didn't specifically identify any issues

114
00:05:45.003 --> 00:05:47.008
within our application using jdeps.

115
00:05:47.008 --> 00:05:51.004
But here, using the migration toolkit,

116
00:05:51.004 --> 00:05:55.006
we were able to identify areas within our application

117
00:05:55.006 --> 00:05:58.009
where we were using JAXB

118
00:05:58.009 --> 00:06:01.009
as well as the Java.activation modules.

119
00:06:01.009 --> 00:06:05.004
So we're going to have to take a look at how we remedy that

120
00:06:05.004 --> 00:06:08.007
in order to migrate our application to Java 11.

121
00:06:08.007 --> 00:06:11.003
And then the final information item

122
00:06:11.003 --> 00:06:13.002
that was identified by the scanner

123
00:06:13.002 --> 00:06:17.008
was to run jdeps on our code, and we've already done that.

124
00:06:17.008 --> 00:06:20.005
Using the migration toolkit is a quick way

125
00:06:20.005 --> 00:06:22.005
to better understand the issues

126
00:06:22.005 --> 00:06:26.002
that must be addressed prior to migrating to Java 11.

127
00:06:26.002 --> 00:06:28.009
Using the tool, you can get valuable insights

128
00:06:28.009 --> 00:06:29.009
into the code base

129
00:06:29.009 --> 00:06:33.005
that allow you to prepare transition strategies.

130
00:06:33.005 --> 00:06:34.008
This can be incredibly

131
00:06:34.008 --> 00:06:37.003
valuable if you're not the original developer

132
00:06:37.003 --> 00:06:38.007
of the application

133
00:06:38.007 --> 00:06:42.000
or if you're not that familiar with the source code.

