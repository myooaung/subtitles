WEBVTT
1
00:00:00.005 --> 00:00:02.006
- [Instructor] In this lesson, we'll begin updating

2
00:00:02.006 --> 00:00:05.008
our project's configuration to compile and package

3
00:00:05.008 --> 00:00:09.007
our application using multiple versions of Java.

4
00:00:09.007 --> 00:00:13.001
Being able to compile using multiple versions

5
00:00:13.001 --> 00:00:14.008
during the migration period

6
00:00:14.008 --> 00:00:17.003
is very helpful because it allows us

7
00:00:17.003 --> 00:00:20.007
to continue to maintain the existing application

8
00:00:20.007 --> 00:00:24.009
as well as migrate to the new version of Java.

9
00:00:24.009 --> 00:00:27.009
Now our application is being built with Maven.

10
00:00:27.009 --> 00:00:30.004
So that means we're going to be performing this work

11
00:00:30.004 --> 00:00:33.000
within the pom.xml file.

12
00:00:33.000 --> 00:00:37.002
Inside of this file, you'll notice a java.version property

13
00:00:37.002 --> 00:00:39.002
which has been set to eight.

14
00:00:39.002 --> 00:00:41.004
This is a spring boot property

15
00:00:41.004 --> 00:00:43.009
that works behind the scenes with Maven

16
00:00:43.009 --> 00:00:46.009
in order to build our project using

17
00:00:46.009 --> 00:00:49.001
the specified Java version.

18
00:00:49.001 --> 00:00:53.002
So in this case, it's going to compile the application

19
00:00:53.002 --> 00:00:54.009
using Java 8.

20
00:00:54.009 --> 00:00:57.007
Now, in order to be able to

21
00:00:57.007 --> 00:01:01.009
compile in both our current and target version,

22
00:01:01.009 --> 00:01:06.000
we're going to use a feature of Maven called a profile.

23
00:01:06.000 --> 00:01:09.000
So within our pom.xml file,

24
00:01:09.000 --> 00:01:13.003
I'm going to go ahead and add the profiles tag,

25
00:01:13.003 --> 00:01:19.001
and within this tag, we can configure individual profiles

26
00:01:19.001 --> 00:01:22.004
that we would like to use to build our project.

27
00:01:22.004 --> 00:01:25.004
Each profile must have an ID.

28
00:01:25.004 --> 00:01:29.000
So we're first going to create our Java 8 profile,

29
00:01:29.000 --> 00:01:31.002
and then inside of the profile,

30
00:01:31.002 --> 00:01:34.002
we're going to use the activation tag

31
00:01:34.002 --> 00:01:37.006
in order to specify that we would like this

32
00:01:37.006 --> 00:01:39.006
to be our default profile.

33
00:01:39.006 --> 00:01:42.008
So here you see the activeByDefault tag

34
00:01:42.008 --> 00:01:45.004
and we just set that to true.

35
00:01:45.004 --> 00:01:47.003
Now inside of the profile,

36
00:01:47.003 --> 00:01:49.005
we are able to add

37
00:01:49.005 --> 00:01:53.009
the properties that are specific to that profile

38
00:01:53.009 --> 00:01:56.006
so I'm going to go ahead and copy

39
00:01:56.006 --> 00:02:00.009
the property that sets the Java version to eight,

40
00:02:00.009 --> 00:02:04.002
and then I'll move that within the profile

41
00:02:04.002 --> 00:02:05.007
and we can format it.

42
00:02:05.007 --> 00:02:08.002
All right, so, that's our first profile,

43
00:02:08.002 --> 00:02:10.005
and then it's pretty easy to make another one.

44
00:02:10.005 --> 00:02:17.000
We're just going to copy the existing profile,

45
00:02:17.000 --> 00:02:21.000
and then we can change its name to java11.

46
00:02:21.000 --> 00:02:24.008
So now, we have a profile for our target version.

47
00:02:24.008 --> 00:02:27.008
We do not want it to be the default profile,

48
00:02:27.008 --> 00:02:30.003
so I'm going to remove the activation tag

49
00:02:30.003 --> 00:02:33.004
and then we simply need to change the Java version

50
00:02:33.004 --> 00:02:34.007
over to 11.

51
00:02:34.007 --> 00:02:39.001
Okay, let's save that, and now we're going to build

52
00:02:39.001 --> 00:02:40.008
a run configuration.

53
00:02:40.008 --> 00:02:42.009
So if we right click on our project

54
00:02:42.009 --> 00:02:48.002
and go to run as and then we can select Maven build,

55
00:02:48.002 --> 00:02:51.002
it's going to open this dialogue that allows us

56
00:02:51.002 --> 00:02:54.005
to build a run configuration for Maven.

57
00:02:54.005 --> 00:02:57.008
I'm going to name the run configuration Java 8

58
00:02:57.008 --> 00:03:02.000
and then for the goals, we're going to instruct Maven

59
00:03:02.000 --> 00:03:05.003
to clean our project and to package it.

60
00:03:05.003 --> 00:03:08.003
And then here you can see we can specify a profile,

61
00:03:08.003 --> 00:03:11.002
which I'm going to set as Java 8.

62
00:03:11.002 --> 00:03:13.001
The final thing we need to do is navigate

63
00:03:13.001 --> 00:03:16.000
over to the JRE tab, and here you can see

64
00:03:16.000 --> 00:03:18.003
we're set to run with Java 11.

65
00:03:18.003 --> 00:03:20.006
We're going to switch that in order to run

66
00:03:20.006 --> 00:03:22.007
the application with Java 8.

67
00:03:22.007 --> 00:03:25.003
So I can just click on the alternative JRE

68
00:03:25.003 --> 00:03:27.005
and select jdk.8.

69
00:03:27.005 --> 00:03:29.008
At this point, I'll apply the changes

70
00:03:29.008 --> 00:03:32.004
to this run configuration, and then go ahead

71
00:03:32.004 --> 00:03:34.009
and kick off our Maven build.

72
00:03:34.009 --> 00:03:37.003
Here we can see in the console the application begins

73
00:03:37.003 --> 00:03:42.000
to build, and it's successfully built using Java 8.

74
00:03:42.000 --> 00:03:45.007
Now let's build our run configuration for Java 11.

75
00:03:45.007 --> 00:03:49.009
To do that, we'll head back into the run configurations,

76
00:03:49.009 --> 00:03:51.007
and this time we have a head start.

77
00:03:51.007 --> 00:03:55.001
We can just duplicate our Java 8 profile

78
00:03:55.001 --> 00:03:58.001
and here, we're able to change the name.

79
00:03:58.001 --> 00:04:00.002
I'll switch it over to Java 11.

80
00:04:00.002 --> 00:04:04.003
And then I'm going to specify that this run configuration

81
00:04:04.003 --> 00:04:08.006
will run Maven using the Java 11 profile,

82
00:04:08.006 --> 00:04:11.008
and then I can click on the JRE tab and set

83
00:04:11.008 --> 00:04:16.000
the runtime JRE back to Java 11.

84
00:04:16.000 --> 00:04:18.007
Okay, with that in place, I'll hit apply,

85
00:04:18.007 --> 00:04:21.006
and then I can go ahead and hit run.

86
00:04:21.006 --> 00:04:24.001
And here you'll see the build will kick off.

87
00:04:24.001 --> 00:04:26.006
Now, we did have some issues.

88
00:04:26.006 --> 00:04:31.002
It looks like our application is currently not building

89
00:04:31.002 --> 00:04:33.000
in Java 11.

90
00:04:33.000 --> 00:04:35.004
So that's a sign of some trouble to come

91
00:04:35.004 --> 00:04:39.008
that we'll have to fix during our migration project.

92
00:04:39.008 --> 00:04:41.009
For now, our project's Maven build

93
00:04:41.009 --> 00:04:45.004
is configured to support multiple versions of the JDK.

94
00:04:45.004 --> 00:04:47.006
And this is going to be very beneficial

95
00:04:47.006 --> 00:04:51.008
as we maintain the project while it's being migrated.

96
00:04:51.008 --> 00:04:54.009
Additionally, this strategy can be useful

97
00:04:54.009 --> 00:04:57.005
for building against newer versions of Java

98
00:04:57.005 --> 00:05:02.000
to discover potential build issues in advance.

