1
00:00:02,360 --> 00:00:08,390
The last element of observability that we need to implement into our system is Matrix.

2
00:00:09,440 --> 00:00:15,950
Now we have already centralised logging so we can analyze the system logs pretty easily and can make

3
00:00:15,950 --> 00:00:16,880
sense out of that.

4
00:00:17,360 --> 00:00:25,130
We have also centralized our base so we can find out which workflows are running slow and which are

5
00:00:25,130 --> 00:00:27,080
the components which are making it slow.

6
00:00:27,950 --> 00:00:31,820
Now the thing which is remaining is we do not know the health of our system.

7
00:00:32,300 --> 00:00:38,930
As in if oil companies are open or if something is up, then was it consistently up or not?

8
00:00:39,470 --> 00:00:42,680
Did it go down at any instant in the past?

9
00:00:42,980 --> 00:00:44,660
So things like that, we would like to know.

10
00:00:45,170 --> 00:00:51,080
We would like to know the request rate that that is coming to our system, what our system is handling.

11
00:00:51,560 --> 00:00:59,900
We would like to know the resource utilization like CPU memory and possibly network, how much data

12
00:00:59,900 --> 00:01:05,780
is coming in and how much data is going out, things like that, which will help us in predicting the

13
00:01:05,780 --> 00:01:06,860
health of our system.

14
00:01:07,730 --> 00:01:09,670
So this is our objective right now.

15
00:01:09,710 --> 00:01:14,300
We will see how we can support reviewing of metrics of our system.

16
00:01:16,010 --> 00:01:20,050
So for that, we have chosen a product called Prometheus.

17
00:01:20,060 --> 00:01:27,980
It's an open source product and there are not many alternatives to this in terms of open source.

18
00:01:28,010 --> 00:01:33,740
There are, of course, lot of monitoring tools that are available, but among their open source tools,

19
00:01:33,740 --> 00:01:35,240
this is the most popular one.

20
00:01:35,900 --> 00:01:43,670
This has been adopted by a C and CEF, which is an open source foundation which is responsible for maintaining

21
00:01:43,670 --> 00:01:48,920
Kubernetes flew in the yaga, some of the open products that we have already used.

22
00:01:49,580 --> 00:01:55,220
So this is something that we are going to use, and the way it works is pretty simple.

23
00:01:55,250 --> 00:02:02,570
We will need to bring up Prometheus over it, then if we want, we can have a storage attached along

24
00:02:02,570 --> 00:02:03,350
with this also.

25
00:02:03,350 --> 00:02:06,500
But right now we are just going ahead with the simple installation.

26
00:02:06,950 --> 00:02:14,150
What this Prometheus will do is it will reach out to different components that it needs to monitor,

27
00:02:14,870 --> 00:02:21,200
and these components need to expose these metrics that Prometheus is interested in.

28
00:02:21,560 --> 00:02:29,390
And these metrics should be exposed by our application components in a format in which Prometheus understand

29
00:02:29,390 --> 00:02:30,290
those metrics.

30
00:02:30,980 --> 00:02:36,080
So we'll have to do some modifications in our services to expose those metrics.

31
00:02:36,560 --> 00:02:41,510
Similarly, we'll have to do some modification in our web application to expose those metrics.

32
00:02:42,380 --> 00:02:46,460
There are certain components let's like load balancer or our database.

33
00:02:47,090 --> 00:02:48,560
We cannot modify them.

34
00:02:48,950 --> 00:02:52,640
So what we are going to do is we are going to start an exporter.

35
00:02:52,640 --> 00:02:53,890
So let's have a postgres.

36
00:02:53,900 --> 00:03:02,570
We will start an exporter, which will monitor progress and it will provide those metrics to Prometheus.
