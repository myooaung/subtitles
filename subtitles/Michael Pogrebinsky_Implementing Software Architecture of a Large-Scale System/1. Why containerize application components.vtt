WEBVTT
1
00:00:01.790 --> 00:00:08.330
We have buried we are run and we have tested our system and we have understood the different components

2
00:00:08.330 --> 00:00:11.840
that are there in our system now while doing this.

3
00:00:12.050 --> 00:00:17.730
We are to follow a lot of steps and those were all manual steps.

4
00:00:17.750 --> 00:00:23.310
Now, if we have to repeatedly do that, so let's say we are creating a development environment or we're

5
00:00:23.330 --> 00:00:29.870
creating a test environment or for that matter, if we're creating production environment, we will

6
00:00:29.870 --> 00:00:31.640
have to repeat all these steps.

7
00:00:31.640 --> 00:00:38.270
And if we could do that manually, this is not going to result into a consistent design.

8
00:00:38.750 --> 00:00:44.810
So the results that we may get the day may not be consistent, as in sometimes we may be able to do

9
00:00:44.810 --> 00:00:45.830
the right installation.

10
00:00:45.830 --> 00:00:55.040
Sometimes some environment variable setting may be missing, so this is going to impede the way we develop

11
00:00:55.040 --> 00:00:56.570
and test any system.

12
00:00:57.680 --> 00:01:02.840
So that's the first thing that we are going to fix by using Docker containers.

13
00:01:03.140 --> 00:01:09.440
So let's first take a look at the different problems to be fixed and then we will look at this solution.

14
00:01:10.670 --> 00:01:17.420
So the first thing that we have to make sure when we are creating an environment is that we have the

15
00:01:17.540 --> 00:01:23.210
right operating system and it does the right version and the all the patches that are needed in that

16
00:01:23.210 --> 00:01:24.080
operating system.

17
00:01:24.560 --> 00:01:26.240
They are all consistent.

18
00:01:27.170 --> 00:01:33.440
Then we have to install a lot of software before we can build and run our systems.

19
00:01:33.440 --> 00:01:33.850
And that's it.

20
00:01:34.060 --> 00:01:39.260
If we are running out of application or running our application, we will need to install by A10.

21
00:01:39.260 --> 00:01:45.500
You will need to install gÃ©nique on for services, will have to install Java and if you are building,

22
00:01:45.500 --> 00:01:52.670
it will have to install MAVEN for database will have to install Postgres or a single page application.

23
00:01:52.670 --> 00:01:55.340
If you are hosting, it will have to host it on Engine X.

24
00:01:56.720 --> 00:02:04.490
For all these all this software on different machines, we will have to make sure that we are installing

25
00:02:04.490 --> 00:02:08.540
the right software and we are installing the correct version.

26
00:02:09.290 --> 00:02:14.780
Once we are done with that installation, then we may need to configure the environment variable, so

27
00:02:14.780 --> 00:02:16.700
we need to do that consistently.

28
00:02:18.260 --> 00:02:24.230
So these are the things that we have to do in development, test and production environments whenever

29
00:02:24.230 --> 00:02:30.470
we're creating these environments now in production environments, basically we have to do certain other

30
00:02:30.470 --> 00:02:34.280
things also like starting monitoring and restarting applications.

31
00:02:34.790 --> 00:02:40.090
It is not that we don't have to do that in different test environment, but a production environment.

32
00:02:40.100 --> 00:02:44.840
We need automation so that we can do these things consistently and efficiently.

33
00:02:45.560 --> 00:02:51.680
So we need some automation to start out instances where component instances when we are starting them,

34
00:02:52.070 --> 00:02:57.770
we need some commands to start them and it should be all automated so that there is a consistent way

35
00:02:57.770 --> 00:02:59.990
of starting and stopping a system.

36
00:03:00.590 --> 00:03:04.670
We should be able to monitor our components and our record number of components.

37
00:03:05.300 --> 00:03:08.960
We should be able to monitor them so that if service, some service goes down.

38
00:03:09.680 --> 00:03:16.010
So we should be able to find that out in no time through an automation and that automation should be

39
00:03:16.010 --> 00:03:18.590
able to restart our components.

40
00:03:19.010 --> 00:03:26.780
So these are certain drawbacks that are dead in our system, which we can immediately fix by continue

41
00:03:26.780 --> 00:03:30.080
raising the different components that are dead in our system.

42
00:03:30.800 --> 00:03:37.100
So now what we're going to do is you're going to look into how we can containerised our entire system

43
00:03:37.400 --> 00:03:40.220
so that we can operate more reliably.
