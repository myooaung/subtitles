WEBVTT
1
00:00:01.070 --> 00:00:07.400
In order to run our system, we will go to Google Cloud and open our virtual machine.

2
00:00:07.410 --> 00:00:11.390
So for that, we will go to console our cloud or Google Dot com.

3
00:00:16.510 --> 00:00:18.100
Then we go to compute engine.

4
00:00:21.930 --> 00:00:24.060
Here we have our virtual machine running.

5
00:00:24.330 --> 00:00:30.060
It's running on this IP address when we are not using the machine, we can actually stop it.

6
00:00:30.720 --> 00:00:32.520
That will help us in saving money.

7
00:00:33.030 --> 00:00:37.650
And whenever we want to resume our work, we can always come back and start the machine.

8
00:00:38.460 --> 00:00:40.140
So let's connect to this machine.

9
00:00:47.490 --> 00:00:47.840
OK.

10
00:00:48.100 --> 00:00:48.900
We are connected.

11
00:00:51.380 --> 00:00:58.070
So let's first start our services for that people go to project crew directly and inside that services

12
00:00:59.000 --> 00:01:00.860
in order to start services.

13
00:01:01.460 --> 00:01:07.790
We can either run each service using Java Command or we can use this script.

14
00:01:07.910 --> 00:01:12.430
We just provided services directly and that script does start service.

15
00:01:12.510 --> 00:01:15.740
If we have to stop a service, then we can stop service.

16
00:01:16.250 --> 00:01:18.890
I'll quickly show you what is there and start service.

17
00:01:21.260 --> 00:01:28.490
So the main command that is dead end start service is this command java, and it takes some debug options,

18
00:01:28.490 --> 00:01:33.020
then the port number and the verify, which we have.

19
00:01:33.410 --> 00:01:36.500
So for each service, we have certain versions.

20
00:01:38.930 --> 00:01:41.540
So we see this, we have certain services over here.

21
00:01:42.030 --> 00:01:46.910
Order, product inventory, gateway discovery or admin.

22
00:01:47.330 --> 00:01:54.230
So all of them, when we do a boot, they produce waterfronts and that is what is then targeted directly.

23
00:01:54.590 --> 00:01:59.960
So these raw files are there, so we will run them individually one by one using the script.

24
00:01:59.960 --> 00:02:01.620
But it will make it easy for us.

25
00:02:01.620 --> 00:02:02.810
So let's go ahead and do that.

26
00:02:03.710 --> 00:02:07.100
So start service toward that and we want to run all services.

27
00:02:09.500 --> 00:02:12.590
So this will start each service one by one.

28
00:02:13.250 --> 00:02:17.280
It waits for each service to start when it when the service has started.

29
00:02:17.300 --> 00:02:20.300
Then it moves to the next service, so it runs them in a loop.

30
00:02:20.840 --> 00:02:24.160
So our services are starting.

31
00:02:24.170 --> 00:02:30.980
So what we will do is we will make another connection for starting our web application.

32
00:02:36.030 --> 00:02:39.630
OK, so we are connected now.

33
00:02:40.170 --> 00:02:46.590
Let's go to prosecute directly and then web application directly, which is web here, we will issue

34
00:02:46.590 --> 00:02:47.180
this command.

35
00:02:47.850 --> 00:02:49.320
It's a patent application.

36
00:02:49.780 --> 00:02:51.570
So we are using Python was in three.

37
00:02:54.280 --> 00:03:00.130
This is the standard command that you'll have to use to bring up Biton application in debug mode because

38
00:03:00.130 --> 00:03:02.250
in production it is done little differently.

39
00:03:02.260 --> 00:03:04.060
We will discuss about that later.

40
00:03:04.780 --> 00:03:10.960
But one more thing we have to do if we are going to connect to this application remotely is we have

41
00:03:10.960 --> 00:03:17.250
to let this application know which claims are permitted to connect.

42
00:03:17.260 --> 00:03:25.690
So here we are saying any claims of this 0.0.0.0 means any client from any IP address should be able

43
00:03:25.690 --> 00:03:26.770
to connect to this.

44
00:03:27.280 --> 00:03:28.480
So let's just run this.

45
00:03:29.800 --> 00:03:32.290
So our web application is also running.

46
00:03:33.540 --> 00:03:36.870
That is one thing that I show you just show you in a bit.

47
00:03:37.260 --> 00:03:41.280
Let's first make a different connection for single page application.

48
00:03:45.330 --> 00:03:46.590
OK, so we have connected.

49
00:03:46.950 --> 00:03:50.430
Let's go to Project Blue directly and then single page application.

50
00:03:51.630 --> 00:03:58.050
In fact, before going over there, I was telling you about a web application, how we are routing our

51
00:03:58.050 --> 00:03:58.650
services.

52
00:03:58.650 --> 00:04:04.800
So this is our web application, how we are routing our web application requests to different services

53
00:04:05.190 --> 00:04:06.090
that just see that.

54
00:04:07.170 --> 00:04:13.830
So for that, we will go into BYU way directly and say this, and there is a file called settings.

55
00:04:14.490 --> 00:04:20.910
All the configuration related stuff is there in this particular file.

56
00:04:20.940 --> 00:04:27.510
So we will go down in this file where we have routing information.

57
00:04:27.540 --> 00:04:29.370
OK, so here we have.

58
00:04:30.150 --> 00:04:33.540
So we have configured these endpoints.

59
00:04:33.540 --> 00:04:35.470
Actually, they should be named as origin.

60
00:04:35.490 --> 00:04:37.690
So this is something that I should rename to.

61
00:04:37.950 --> 00:04:38.460
What is it?

62
00:04:38.970 --> 00:04:41.150
So here this is inventory origin.

63
00:04:41.160 --> 00:04:49.410
This is order, origin, product, origin and we have they all are pointing to localhost and the boards

64
00:04:49.890 --> 00:04:56.580
that we have set over here that we are using different, different boards for all our services because

65
00:04:56.580 --> 00:04:59.250
we are running them on this same virtual machine.

66
00:04:59.880 --> 00:05:02.010
So this is the kind of configuration we have, Guru.

67
00:05:02.010 --> 00:05:07.860
So this configuration will be applicable in case debug environment variable is sent and then there is

68
00:05:07.860 --> 00:05:10.320
another configuration that we will talk about later.

69
00:05:10.950 --> 00:05:14.460
So this the default DBA and we are going to go ahead with that.

70
00:05:14.460 --> 00:05:19.260
So that is how we are doing routing in our web application.

71
00:05:20.310 --> 00:05:22.680
Now let's go back to single page application

72
00:05:26.940 --> 00:05:28.800
in single page application.

73
00:05:29.310 --> 00:05:37.170
We will have to do this configuration, which is then in Dortmund, we find this this routing configuration

74
00:05:37.170 --> 00:05:37.890
will have to do.

75
00:05:38.400 --> 00:05:43.320
So here we can see where it is are on service or region.

76
00:05:43.320 --> 00:05:45.000
Where is our product service origin?

77
00:05:45.000 --> 00:05:46.170
Where is card service?

78
00:05:46.170 --> 00:05:54.210
Origin right now are single page application does not have functionality to create orders, so we have

79
00:05:54.210 --> 00:05:57.600
not listed order origin or inventory origin over here.

80
00:05:57.900 --> 00:06:01.920
We will just work with product and guard service.

81
00:06:02.970 --> 00:06:05.610
So card service actually is listed along with the service.

82
00:06:06.240 --> 00:06:07.320
We'll discuss that later.

83
00:06:07.320 --> 00:06:12.770
But the point over here is that here we have these origins.

84
00:06:12.790 --> 00:06:16.050
They are pointing to localhost and these different port numbers.

85
00:06:16.560 --> 00:06:18.510
So these different port numbers are correct.

86
00:06:20.410 --> 00:06:27.970
If we see over here these port numbers are correct, but these IP address, this localhost IP address

87
00:06:27.970 --> 00:06:30.520
will not work in case of single page application.

88
00:06:31.030 --> 00:06:39.340
Because if you see on the right side of this line, everything is running on a virtual machine so they

89
00:06:39.340 --> 00:06:43.070
can communicate with all our all other components using local laws.

90
00:06:43.840 --> 00:06:45.910
But the single page application is different.

91
00:06:46.180 --> 00:06:51.910
This will be running in a browser either on a mobile or on a regular desktop.

92
00:06:52.660 --> 00:06:57.850
This is a JavaScript based application that will be directly communicating with our services.

93
00:06:58.240 --> 00:07:05.650
So it needs to no host, no also host IP also along with these different port numbers.

94
00:07:05.860 --> 00:07:12.610
So that is the configuration that we will have to do over here now in order to do that configuration.

95
00:07:13.000 --> 00:07:16.750
We will need the IP address, so let's get the IP address.

96
00:07:17.440 --> 00:07:20.610
So IP addresses dead on this compute engine console.

97
00:07:20.890 --> 00:07:27.220
This virtual machine has got this IP IP address, which people can figure out over here.

98
00:07:32.780 --> 00:07:38.660
OK, so we have configured the routing of a single page application.

99
00:07:38.990 --> 00:07:43.490
Now we are going to go, we can start this with this we will do and VM start.

100
00:07:44.300 --> 00:07:47.270
It will again start this in debug.

101
00:07:50.220 --> 00:07:54.090
So a development mode is a much better name over here.

102
00:07:54.510 --> 00:07:58.740
We are talking about development more and production more so in production mode, it will be slightly

103
00:07:58.740 --> 00:07:59.050
different.

104
00:07:59.070 --> 00:08:00.210
We will discuss that later.

105
00:08:00.900 --> 00:08:04.990
But our single page application has also started.

106
00:08:05.010 --> 00:08:09.810
So now let's go back to our services if our services are running.

107
00:08:11.490 --> 00:08:17.280
OK, so seems like services are up and running all the services they have come up.

108
00:08:18.290 --> 00:08:19.850
They have come up perfectly fine.

109
00:08:21.200 --> 00:08:27.710
OK, so now that services has have come up, it's time to connect to our system.

110
00:08:28.310 --> 00:08:34.280
So all components of a system of application, single page application, server and services, all of

111
00:08:34.280 --> 00:08:38.010
them are running and our database is running as a service.

112
00:08:38.010 --> 00:08:39.200
So that's also running.

113
00:08:40.730 --> 00:08:47.390
We have a neat way of verifying if our database is running, we can do that to our application and.

114
00:08:47.710 --> 00:08:53.620
So let's go ahead and run the Connect to our application using a browser.

115
00:08:53.630 --> 00:08:56.000
So for that, I'll open a browser tab.

116
00:08:56.810 --> 00:09:03.500
Now what we can do is I have the IP address on 8000 port web application is running.

117
00:09:04.730 --> 00:09:08.390
Like, we can see that this is not connecting to our application.

118
00:09:08.570 --> 00:09:16.700
The reason is that our application is running on a virtual machine, which is behind a firewall, and

119
00:09:16.700 --> 00:09:20.840
so we'll have to go and open some ports on this firewall.

120
00:09:22.320 --> 00:09:27.150
For that, you will go to Google Cloud Console, the PC network.

121
00:09:27.990 --> 00:09:31.170
Inside BBC Network, that is firewall configuration.

122
00:09:36.120 --> 00:09:38.360
So there are different rules over here.

123
00:09:38.370 --> 00:09:45.660
Firewall rules, they all apply to default network and are virtual machine also belongs to default network

124
00:09:45.660 --> 00:09:51.710
because we did not select any any particular network when we created a virtual machine.

125
00:09:51.720 --> 00:09:54.870
So it is associated with default network.

126
00:09:54.870 --> 00:10:01.950
When you say, let's go ahead and create a firewall rule which will allow access to port eight thousand

127
00:10:02.400 --> 00:10:06.280
and three thousand one, which not a single page application is running.

128
00:10:06.300 --> 00:10:10.460
So let's give it some name, and let's call it allow ministers.

129
00:10:11.940 --> 00:10:13.030
Then we can go ahead.

130
00:10:13.050 --> 00:10:16.260
The default network for ingress traffic is allowed.

131
00:10:18.080 --> 00:10:24.980
We want this rule to apply on all the machines that are there right now, there is only one virtual

132
00:10:24.980 --> 00:10:28.730
machine, so this all instances in the network will apply to that.

133
00:10:29.720 --> 00:10:39.620
Then the source basically outlined a browser that we are running should be can be on any IP address.

134
00:10:39.620 --> 00:10:41.030
So that is what we are going to see.

135
00:10:41.660 --> 00:10:47.570
So here we can choose based on IP addresses, which clients can connect to our system.

136
00:10:48.530 --> 00:10:55.550
So over here right now, we are not too much concerned with security, so we will allow every of any

137
00:10:55.550 --> 00:11:00.500
client from any machine to be able to connect to our system.

138
00:11:01.820 --> 00:11:04.040
So here now we will open some ports.

139
00:11:04.040 --> 00:11:10.120
DCP ports are the application is an St-Pierre's application, which runs on DBS DCP.

140
00:11:10.460 --> 00:11:12.350
So let's open some ports over here.

141
00:11:12.350 --> 00:11:16.970
So let's hit the eight thousand and 3000 is what we want to open.

142
00:11:17.630 --> 00:11:24.620
But apart from that, for our single page application, we will also need to open these services forward

143
00:11:24.620 --> 00:11:27.380
because that is going to directly access these ports.

144
00:11:27.830 --> 00:11:29.840
So we'll have to open in 2004.

145
00:11:30.410 --> 00:11:34.910
We will open 3000 port with a single page application score basis.

146
00:11:35.180 --> 00:11:41.300
And then this single page application, once it is running on a browser, then it will have to connect

147
00:11:41.300 --> 00:11:41.660
to this.

148
00:11:41.660 --> 00:11:43.760
So let's enable all these ports.

149
00:11:43.760 --> 00:11:47.960
We will look at these architectural digest if they are a little confusing.

150
00:11:48.440 --> 00:11:50.540
We will get to them in a bit.

151
00:11:50.960 --> 00:11:55.360
But for now, let's just open all the ports that we need.

152
00:11:55.370 --> 00:12:00.560
So let's say we need all these ports in one short by open.

153
00:12:06.690 --> 00:12:09.390
OK, so we have listed all the ports over here.

154
00:12:09.960 --> 00:12:11.980
Let's create this fire one.

155
00:12:15.540 --> 00:12:22.050
Once this firewall rule is created, we should be able to access our application if we are not able

156
00:12:22.050 --> 00:12:26.370
to access, then we'll have to come and review this firewall in case we have made any mistake.

157
00:12:28.350 --> 00:12:30.060
OK, so let's refresh this.

158
00:12:31.180 --> 00:12:35.800
OK, so now we are able to connect the first thing that we need to do.

159
00:12:35.830 --> 00:12:43.090
Maybe I have connected through this browser before also, so I already have the required tokens.

160
00:12:43.390 --> 00:12:44.740
So I was already signed it.

161
00:12:45.040 --> 00:12:52.120
But generally this is where you will end up, that you will have to see Google sign in bids.

162
00:12:52.510 --> 00:12:58.930
So once you go to sign in page, then we have already created one user admin with password as password.

163
00:12:58.930 --> 00:13:02.350
We will use that to log in into our system.

164
00:13:09.300 --> 00:13:09.690
OK.

165
00:13:10.050 --> 00:13:18.150
So in our system, we can view products, we can view card, we can view orders and create orders,

166
00:13:18.150 --> 00:13:20.960
and we can see the user profile.

167
00:13:20.970 --> 00:13:22.260
So these are the things that we can do.

168
00:13:22.260 --> 00:13:23.670
So let's quickly check all that.

169
00:13:24.120 --> 00:13:27.600
But right now, we do not have data in our system.

170
00:13:27.930 --> 00:13:32.220
And the other thing is that we want to make sure that everything is running in our system.

171
00:13:32.220 --> 00:13:33.660
So first, we will go to monitoring.

172
00:13:34.670 --> 00:13:41.630
In monitoring we can bring to our Web application, this tells us their Web application.

173
00:13:42.650 --> 00:13:43.610
What is the name?

174
00:13:43.970 --> 00:13:49.130
So it's giving us the name of the virtual machine where our web application is goes date and time.

175
00:13:49.430 --> 00:13:52.010
Likewise, we can ping now databases.

176
00:13:53.780 --> 00:14:00.020
So here it is telling us that our database is both grass and this is where it is located, is the connection

177
00:14:00.020 --> 00:14:02.450
information and is it time of beeping?

178
00:14:03.710 --> 00:14:08.690
It says that Cassandra, our database is not configured, so this is something that we will configure

179
00:14:08.690 --> 00:14:09.020
later.

180
00:14:09.050 --> 00:14:10.400
Right now, we do not need it.

181
00:14:11.440 --> 00:14:12.910
Now, let's bring our services.

182
00:14:15.700 --> 00:14:21.040
So we can similarly bring all our services, this authorization service, product service or the service,

183
00:14:21.550 --> 00:14:26.290
so all these services that we need, we can bring them from here and find out if they are up and running.

184
00:14:26.740 --> 00:14:29.020
So looks like our system is up and running.

185
00:14:29.470 --> 00:14:35.950
So the first thing that we will do is we will go to data cancer because we have no business admin user,

186
00:14:36.310 --> 00:14:39.670
so we will be able to create and delete data.

187
00:14:40.180 --> 00:14:42.610
We can, in fact, view some of the table data.

188
00:14:42.850 --> 00:14:44.650
So let's say user data.

189
00:14:45.310 --> 00:14:46.740
There is one report of it.

190
00:14:47.470 --> 00:14:52.030
And if you go to product data, there are no records over there.

191
00:14:52.630 --> 00:14:55.810
For that, we will have to create data.

192
00:14:56.290 --> 00:14:57.690
So I've had this create data.

193
00:14:58.450 --> 00:15:01.270
If, let's say, I go to services.

194
00:15:03.330 --> 00:15:06.150
Then it shows that it has created some data.

195
00:15:07.780 --> 00:15:13.900
OK, so here we have got this massive success created this year, so that means our data sort of got

196
00:15:13.900 --> 00:15:14.410
created.

197
00:15:15.460 --> 00:15:21.060
If now I, let's say, go to product data, I should be able to see records.

198
00:15:21.070 --> 00:15:22.870
So we have created 10 products.

199
00:15:23.440 --> 00:15:29.470
Similarly, if I go to inventory data, we have created some inventory records for each product.

200
00:15:29.500 --> 00:15:33.010
So right now, for each product, we have 10000 units.

201
00:15:35.560 --> 00:15:40.720
And in order, data will be empty because we do not have any orders in our system.

202
00:15:41.170 --> 00:15:45.490
At any point you want to clean all the data, you can go to delete all data and do that.

203
00:15:46.210 --> 00:15:48.970
First, let's view our products.

204
00:15:50.720 --> 00:15:58.700
So these are the products that's click on any of these products and choose a quantity added to the cart.

205
00:15:59.810 --> 00:16:04.310
And let's let's go to one more product and then we will create an order.

206
00:16:06.710 --> 00:16:08.660
So let's choose this product.

207
00:16:09.500 --> 00:16:12.770
Choose three units of this, add to the cart.

208
00:16:14.990 --> 00:16:16.580
Then let's go to the car.

209
00:16:18.410 --> 00:16:22.940
So here we have these two books with respective quantities in the cart.

210
00:16:23.360 --> 00:16:25.010
Now we can create the order.

211
00:16:27.660 --> 00:16:32.880
So this order is created, we can view these orders from.

212
00:16:34.500 --> 00:16:39.210
Either we could we could use that button or we can go to bed and we can go to orders.

213
00:16:40.260 --> 00:16:42.510
So this is all we can see the artists right now.

214
00:16:42.510 --> 00:16:44.310
There is only one model in our system.

215
00:16:45.150 --> 00:16:50.460
So this application, what we were able to do is we were able to log in into a system.

216
00:16:50.460 --> 00:16:51.720
Each user has a rule.

217
00:16:51.780 --> 00:16:52.530
You will see that.

218
00:16:53.460 --> 00:16:59.300
So we were able to do roll based log in using authorization service.

219
00:17:00.270 --> 00:17:03.720
Then we were able to view products.

220
00:17:04.590 --> 00:17:07.500
This was using product service.

221
00:17:08.040 --> 00:17:16.290
Then we were able to add these products in to cart and we were able to create orders.

222
00:17:16.650 --> 00:17:24.240
So that was by the virtue of card service and order service, which which are both hosted in one single

223
00:17:24.330 --> 00:17:25.950
service or the service.

224
00:17:26.700 --> 00:17:32.070
So there are two service in it so we can refactor them into two separate services also.

225
00:17:32.070 --> 00:17:39.420
But for convenience so that we don't have too many services to run, I'll put them into one Springwood

226
00:17:39.420 --> 00:17:41.560
service, which is order service.

227
00:17:43.440 --> 00:17:47.010
Then we were able to create the order.

228
00:17:47.790 --> 00:17:51.780
If we look at our data, so inventory data.

229
00:17:52.770 --> 00:18:01.260
So here, if you see that all of the products have been 10000 units, but for product I.D. number three

230
00:18:01.710 --> 00:18:08.820
and four product I.D. number seven for which we created orders, their inventory quantities have gone

231
00:18:08.820 --> 00:18:09.180
down.

232
00:18:09.810 --> 00:18:14.280
So this we were able to do with the help of inventory service.

233
00:18:14.880 --> 00:18:21.030
So there are quite a few use cases that we were able to achieve through our application.

234
00:18:21.450 --> 00:18:25.860
This is a mini system that we have, which have some services.

235
00:18:25.860 --> 00:18:30.300
It has got a web application and which has got a single page application.

236
00:18:30.990 --> 00:18:34.980
Next thing that we need to do is it is still a small scale system.

237
00:18:35.400 --> 00:18:41.130
It has some issues in terms of routing configuration and we will see we will discuss there are some

238
00:18:41.130 --> 00:18:48.000
other issues as well which will prevent us from scaling the system, but nevertheless we have a system

239
00:18:48.330 --> 00:18:49.800
which we can start with.

240
00:18:50.280 --> 00:18:53.820
So we are now ready to move to the next section.
