1
00:00:02,140 --> 00:00:07,510
Now that our system is completely ready, let's check some of the operational properties of our system.

2
00:00:07,540 --> 00:00:09,490
So let's start with high availability.

3
00:00:10,030 --> 00:00:14,620
Let's make sure that our system is highly available for that.

4
00:00:15,100 --> 00:00:20,740
We will go to our workloads and these are our workloads right now already open.

5
00:00:21,610 --> 00:00:27,280
So here this is our database that we are using right now, and that is Cassandra.

6
00:00:27,940 --> 00:00:35,140
And what I'm going to do over here is that I'm going to remove one of the notes of this Cassandra database

7
00:00:35,650 --> 00:00:39,130
and see if we are able to still work with our system.

8
00:00:39,790 --> 00:00:42,710
So that would be the high availability test of our Cassandra.

9
00:00:42,730 --> 00:00:48,410
Later on, we will pick up any service and see if they are also highly available or not.

10
00:00:48,430 --> 00:00:54,670
But first, let's check out the database in order to do our test, what we will do is we will first

11
00:00:54,670 --> 00:00:56,470
connect to our system.

12
00:00:58,680 --> 00:01:00,270
Let's use our Web application.

13
00:01:02,210 --> 00:01:06,290
This we will use for testing if the system is working fine or not.

14
00:01:06,890 --> 00:01:12,080
So let's go ahead and delete one of the Cassandra notes.

15
00:01:12,160 --> 00:01:16,460
No, this is actually the service, so I'll go back to work good.

16
00:01:17,660 --> 00:01:18,950
You don't have to delete service.

17
00:01:18,950 --> 00:01:23,930
We have to delete because one of the Cassandra board, so we are going to Cassandra boards.

18
00:01:25,240 --> 00:01:31,150
And over here, do not make the mistake of deleting these stateful set or deployment.

19
00:01:31,840 --> 00:01:32,920
I have done that once.

20
00:01:33,730 --> 00:01:36,940
If you're not careful, then we may end up deleting that word.

21
00:01:36,940 --> 00:01:42,640
We need to hear, delete or we hear this, that delete the one of the parts over here.

22
00:01:42,640 --> 00:01:45,250
So we will randomly choose one of the parts.

23
00:01:45,250 --> 00:01:47,590
So let's choose Cassandra one.

24
00:01:47,590 --> 00:01:49,060
Let's hear Cassandra Parts one.

25
00:01:51,870 --> 00:01:52,710
That's deleted.

26
00:01:58,430 --> 00:02:01,910
Now, let's go back and check the status of workloads.

27
00:02:04,260 --> 00:02:06,900
So Cassandra boards, they warning.

28
00:02:07,500 --> 00:02:12,660
The reason is that one of the boards is down and it will be coming up.

29
00:02:13,260 --> 00:02:17,580
So let's just check in the absence of one of the boards, be able to work.

30
00:02:17,580 --> 00:02:18,870
Let's add this to part.

31
00:02:22,180 --> 00:02:27,790
So our order got created, so there is no effect of.

32
00:02:29,700 --> 00:02:33,670
The Cassandra for not being over there.

33
00:02:34,290 --> 00:02:40,530
And the other thing that is going to happen now is that this cardinal is eventually going to come up.

34
00:02:41,550 --> 00:02:49,020
So if he could work in the absence of one of the database nodes and the other is actually come up if

35
00:02:49,020 --> 00:02:55,260
you want to see what exactly it is doing, we can go to Cassandra Boards one definition either we can

36
00:02:55,260 --> 00:02:57,030
go to logs over here.

37
00:02:57,660 --> 00:03:06,210
The other thing that we can do is we can take this forward name and we can get to the logs using command

38
00:03:06,210 --> 00:03:07,850
line console using CubeSat.

39
00:03:08,730 --> 00:03:12,600
So very much like Docker color, I can do logs.

40
00:03:12,600 --> 00:03:18,780
Miners have the board name and namespace as data.

41
00:03:20,700 --> 00:03:25,020
So this is going to give me what exactly this node is doing right now.

42
00:03:26,730 --> 00:03:31,710
So maybe it has finished his execution and it would have joined the cluster.

43
00:03:32,310 --> 00:03:36,750
So let me just check what is the current status of this part?

44
00:03:38,110 --> 00:03:41,430
Look, it looks like all these parts are up and running.

45
00:03:41,850 --> 00:03:45,780
If you want to delete any other part, it's a Cassandra Part zero two.

46
00:03:46,050 --> 00:03:46,860
We can do that.

47
00:03:47,280 --> 00:03:47,940
No problem.

48
00:03:48,510 --> 00:03:53,310
As long as the other two parts which form quorum, they are dead.

49
00:03:53,970 --> 00:04:00,450
Our database will remain available both for that read transaction and write transactions.

50
00:04:00,450 --> 00:04:04,620
As we saw that we were able to view products and we were able to create order.

51
00:04:04,630 --> 00:04:09,410
So one is read kind of transaction and the other one is right kind of conviction.

52
00:04:09,950 --> 00:04:16,710
OK, so we saw that database unavailability of one node doesn't make our database available.

53
00:04:16,710 --> 00:04:18,600
Our system remains highly available.

54
00:04:19,320 --> 00:04:23,910
Now let's let's check out if our services are highly available or not.

55
00:04:24,490 --> 00:04:28,080
Now, if I look at let me filter on the services.

56
00:04:31,410 --> 00:04:33,510
I can put a filter on the space.

57
00:04:36,620 --> 00:04:41,900
So right now we see this online services, they have got only one instance.

58
00:04:43,040 --> 00:04:48,590
If you want to check their hiring ability, let's create more number of instances and then we will delete

59
00:04:49,100 --> 00:04:49,760
some of them.

60
00:04:50,210 --> 00:04:52,430
Let's do it manually right now.

61
00:04:52,580 --> 00:04:53,390
We will scale.

62
00:04:53,630 --> 00:04:56,330
Get this service to, let's say, three instances.

63
00:04:57,380 --> 00:05:03,320
Later on, we will add auto scaling capability to all these services parts so that depending upon the

64
00:05:03,330 --> 00:05:05,510
load, they will auto skip.

65
00:05:05,780 --> 00:05:07,610
But we have not done autos.

66
00:05:08,540 --> 00:05:14,360
We will manually scale just to get service because if the service is not available, nothing will work.

67
00:05:14,360 --> 00:05:19,970
So we are going to scale this and we are going to remove some of the parts for gateway service after

68
00:05:19,970 --> 00:05:25,010
scaling and then see if the address service is demonstrating high availability or not.

69
00:05:25,490 --> 00:05:26,810
So let's go ahead and do that.

70
00:05:28,100 --> 00:05:30,380
So let me give you this not OK.

71
00:05:34,830 --> 00:05:43,560
In case you want to know the deployment, then you can say, OK, you couldn't get deployment and you'll

72
00:05:43,560 --> 00:05:46,980
have to provide namespace or a namespace here as service.

73
00:05:48,780 --> 00:05:51,220
So these are the deployment needs.

74
00:05:51,220 --> 00:05:55,740
So the deployment name that we are interested in right now is geared to service boards.

75
00:05:56,940 --> 00:05:57,930
So let's copy that.

76
00:06:05,070 --> 00:06:09,380
So we are not going to create three replicates, it is dead in namespace.

77
00:06:10,890 --> 00:06:11,520
So this.

78
00:06:12,670 --> 00:06:15,340
Well, let's execute this command for scaling deployment.

79
00:06:16,480 --> 00:06:23,410
This should scale up our geared resource nodes form one, which is right now showing as one or two of

80
00:06:23,410 --> 00:06:23,890
the three.

81
00:06:26,710 --> 00:06:29,050
Because we have selected three replicas of Wicket.

82
00:06:30,960 --> 00:06:35,290
So this will take a few more seconds to actually come up.

83
00:06:35,310 --> 00:06:36,000
We can check.

84
00:06:38,730 --> 00:06:39,990
Get this over sports.

85
00:06:42,000 --> 00:06:49,440
In case you want to see what these boards are doing right now, you can actually go into one of these

86
00:06:49,440 --> 00:06:57,210
boards and over here, if you click logs, you'll be able to see what this is doing right now.

87
00:06:57,990 --> 00:07:04,350
The other is, like I explained earlier, we can take the party and to command line.

88
00:07:04,740 --> 00:07:06,990
We can check if we get to.

89
00:07:09,080 --> 00:07:11,810
We all come online and let's make use of this.

90
00:07:14,390 --> 00:07:17,450
And this one is in the service, so I'll change that.

91
00:07:19,690 --> 00:07:25,000
So this is that our Web application has come up in 32 seconds, so let's kill this log.

92
00:07:26,020 --> 00:07:28,180
Let's check the status of our workloads.

93
00:07:30,700 --> 00:07:39,130
OK, so we're here if I see Gateway, so this deployment has got three nodes and all of them are ready.

94
00:07:39,460 --> 00:07:43,750
So what we are going to do now is that we are going to going to get with of boards.

95
00:07:44,380 --> 00:07:46,390
There are three parts running right now.

96
00:07:47,170 --> 00:07:52,700
Let's randomly pick out two of them, so we will be left with only one part.

97
00:07:52,720 --> 00:07:54,430
So let's remove this one first.

98
00:07:55,060 --> 00:07:56,200
It's delete this.

99
00:07:58,950 --> 00:08:00,420
That's deleted over here.

100
00:08:03,440 --> 00:08:07,640
OK, then let's go to give us a response once again.

101
00:08:08,210 --> 00:08:14,070
And let's choose one of them, see, one of them is terminating and one of them is coming up.

102
00:08:14,090 --> 00:08:17,310
Let's remove some more ports this one.

103
00:08:18,500 --> 00:08:19,670
Let's remove this.

104
00:08:19,940 --> 00:08:22,550
Right now, we have removed two ports out of three.

105
00:08:22,820 --> 00:08:25,460
Let's see if our application is working fine or not.

106
00:08:26,840 --> 00:08:36,620
So I can access my daughter so I can have them card, go to card, create order and let's see, we were

107
00:08:36,620 --> 00:08:37,970
able to order this book or not.

108
00:08:38,150 --> 00:08:38,480
Yeah.

109
00:08:38,930 --> 00:08:45,140
So this order got created and while this was happening, these kids of sports, what?

110
00:08:45,170 --> 00:08:46,730
Some of them went down.

111
00:08:47,510 --> 00:08:49,370
New ones were started.

112
00:08:49,670 --> 00:08:57,080
So right now, if you see only one of the part is running and it hasn't released it, there are two

113
00:08:57,080 --> 00:09:05,240
boards which are actually coming up right now, so they are not ready when it is will not send requests

114
00:09:05,240 --> 00:09:10,130
to these parts which are coming up in their readiness.

115
00:09:10,130 --> 00:09:15,410
Group says that it is ready then only so this will start to be directing requests to these boards.

116
00:09:15,890 --> 00:09:21,740
So right now, we were working with just one part over here and we can see this.

117
00:09:21,980 --> 00:09:29,030
That system I gave with service sports are auto healing, so we remove some of the parts.

118
00:09:29,030 --> 00:09:35,510
We can think of that as a simulation for some crash and all those boards have come back again.

119
00:09:36,110 --> 00:09:43,910
So even if our application components some of the instances, if they go down, it does not matter.

120
00:09:44,300 --> 00:09:46,700
Our system remains operational.

121
00:09:46,700 --> 00:09:53,860
So that's the higher ED ability property that we were able to achieve through deployment.
