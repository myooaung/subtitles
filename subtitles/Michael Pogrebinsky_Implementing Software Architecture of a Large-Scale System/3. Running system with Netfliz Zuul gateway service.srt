1
00:00:01,410 --> 00:00:08,100
So here I have connected to the machine, and I'll just make sure that there are no Docker containers,

2
00:00:09,000 --> 00:00:13,320
their bodies will ever delete them, so there are none.

3
00:00:13,920 --> 00:00:18,540
And also make sure that the service Chris.

4
00:00:20,450 --> 00:00:26,750
Askew, it is actually down so that it doesn't conflict with PostgreSQL container.

5
00:00:27,110 --> 00:00:30,830
OK, so that seems to be OK.

6
00:00:30,860 --> 00:00:31,730
We are good to go.

7
00:00:32,030 --> 00:00:38,180
So what we will do is we will go to project who directly and there we will go to Docker and then demos.

8
00:00:38,960 --> 00:00:42,650
And here are demo is dead in gateway service.

9
00:00:43,670 --> 00:00:44,510
So let's go there.

10
00:00:49,040 --> 00:00:50,880
OK, so what do we have over here?

11
00:00:50,900 --> 00:00:55,880
We have Docker compose, talk by email file, and that is not the end we find.

12
00:00:56,630 --> 00:00:59,390
Let's look into Docker compose first.

13
00:01:02,800 --> 00:01:07,300
Look over here, everything is seem pretty much what we heard earlier.

14
00:01:07,780 --> 00:01:15,040
Apart from other services, we have also implemented gateway service over here, so we have provided

15
00:01:15,040 --> 00:01:16,760
configuration for gate results.

16
00:01:17,410 --> 00:01:23,150
So the image will remain as indeed services or live in all of the services are there.

17
00:01:23,680 --> 00:01:31,270
And the barometer that we will provide to this image to letting it know that we want to actually start

18
00:01:31,360 --> 00:01:32,260
gateway service.

19
00:01:33,790 --> 00:01:35,590
Everything else remains the same.

20
00:01:36,610 --> 00:01:38,650
So that's the configuration over here.

21
00:01:38,680 --> 00:01:42,460
Now let's look at the environment variables.

22
00:01:44,260 --> 00:01:48,430
So now you can see over here there's the benefit of this gateway service.

23
00:01:48,460 --> 00:01:53,920
This is our web application configuration, and it is much, much simpler.

24
00:01:53,920 --> 00:02:00,820
Now we just need to point to where our gateway services and it will know that through this environment,

25
00:02:00,820 --> 00:02:03,960
variable cloud services, host and services board.

26
00:02:04,210 --> 00:02:10,090
So we have put some logic over there that when services, hosting services sport are defined, then

27
00:02:10,090 --> 00:02:13,360
no need to look for individual services hosted in port.

28
00:02:13,990 --> 00:02:17,230
So this has simplified our web application configuration.

29
00:02:17,650 --> 00:02:23,140
If you want to start out a single page application, we'll have to make this change in a single page

30
00:02:23,140 --> 00:02:24,010
application as well.

31
00:02:24,400 --> 00:02:30,580
And to this simple configuration, a single page application can also connect to our system using gateway

32
00:02:30,580 --> 00:02:31,060
service.

33
00:02:31,450 --> 00:02:34,990
In this demo, we will look at how we can do it through our web application.

34
00:02:36,040 --> 00:02:38,410
Then all other things remain the same.

35
00:02:39,370 --> 00:02:47,860
There is one configuration that is added over here in this configuration will be required by our gateway

36
00:02:47,860 --> 00:02:52,360
service who know where the actual service is running.

37
00:02:52,360 --> 00:02:57,490
So let's say we want to send a gateway service needs to routing requests to a transition service so

38
00:02:57,490 --> 00:03:03,820
it will look at this environment variable why it can't use the configuration that we discussed earlier.

39
00:03:04,780 --> 00:03:10,590
So this configuration is just a template we can override it without.

40
00:03:10,600 --> 00:03:17,350
This template says that the authorization service or any other service is there on local course, but

41
00:03:17,350 --> 00:03:21,940
this is something which will change depending upon which environment we are in.

42
00:03:22,180 --> 00:03:24,100
Right now, we are in Docker environment.

43
00:03:24,400 --> 00:03:29,500
So here we will like to have a different configuration when we go into production environment.

44
00:03:29,860 --> 00:03:35,140
There are environment variable, as in there are people are located.

45
00:03:35,410 --> 00:03:36,790
That information may change.

46
00:03:37,330 --> 00:03:41,170
So we have provided a capability in all the services.

47
00:03:41,170 --> 00:03:49,720
We have written some code to let the external environment override these variables so we can override

48
00:03:49,720 --> 00:03:53,020
this configuration through environment variables.

49
00:03:53,020 --> 00:03:55,960
And that is precisely what we are doing over here.

50
00:03:56,350 --> 00:04:00,850
So there's those environment variables we are overriding over here.

51
00:04:01,270 --> 00:04:08,080
So this is our gateway service knows where other services are located, and this can also be used by

52
00:04:08,080 --> 00:04:11,530
our admin service to know where other services are located.

53
00:04:11,980 --> 00:04:14,980
So now it's time to start our system.

54
00:04:15,370 --> 00:04:19,790
So for that, all we need to do is we need to do this up minus D.

55
00:04:19,840 --> 00:04:22,390
If a build is required, it will do that as well.

56
00:04:22,420 --> 00:04:24,130
So let's go ahead and do this.

57
00:04:30,130 --> 00:04:30,970
So this time.

58
00:04:32,940 --> 00:04:34,440
It has started on these services.

59
00:04:34,890 --> 00:04:37,560
It will take some time for these services to come up.

60
00:04:37,800 --> 00:04:40,290
We can take a look at these logs.

61
00:04:40,740 --> 00:04:44,040
So let's say we are interested in gateway service right now.

62
00:04:44,910 --> 00:04:47,190
So this is how we can see what's happening over there.

63
00:04:49,080 --> 00:04:54,060
So this gateway service is starting right now, there are a lot of services that it needs to start,

64
00:04:54,390 --> 00:04:56,980
and it's not a big, powerful machine.

65
00:04:57,000 --> 00:04:58,290
We have taken a small machine.

66
00:04:58,620 --> 00:05:01,740
Later on, we will upgrade it, so it's going to take some time.

67
00:05:01,740 --> 00:05:03,440
So we are going to wait for this.

68
00:05:03,450 --> 00:05:07,500
I'm going to pause this video and come back once the service is fully up.

69
00:05:09,060 --> 00:05:10,560
Now I get the services up.

70
00:05:12,090 --> 00:05:20,670
What we will do is just first check all these services, so these are the services that are running

71
00:05:20,670 --> 00:05:21,840
on our system right now.

72
00:05:22,200 --> 00:05:30,810
If we look at gateway service, here, it is running on four eight zero eight zero and that is mapped

73
00:05:30,810 --> 00:05:33,480
to this host port of eight zero eight zero.

74
00:05:34,380 --> 00:05:38,220
If you look at any of the service, let's say this authorization service.

75
00:05:40,300 --> 00:05:48,700
This is also running on eight zero eight zero port, but it is mapped to eight zero to host port, so

76
00:05:48,700 --> 00:05:54,280
it is more clear over here for authorization service eight zero eight two four.

77
00:05:54,300 --> 00:05:59,080
This allocated on host and it maps two eight zero eight zero port on the container.

78
00:05:59,470 --> 00:06:08,200
So similarly for all other services, these ports on this coast are different and internally within

79
00:06:08,200 --> 00:06:10,690
the container they are all eight zero zero.

80
00:06:12,550 --> 00:06:17,080
So what that means is on this particular host are if we.

81
00:06:18,240 --> 00:06:20,910
Try to send any request on board.

82
00:06:20,940 --> 00:06:22,080
Eight, zero eight zero.

83
00:06:22,560 --> 00:06:26,340
It will to get resolved so we can do a quick test.

84
00:06:26,340 --> 00:06:29,850
What we can do is first we can send a request.

85
00:06:32,280 --> 00:06:37,560
Two eight zero eight zero port and status request.

86
00:06:38,040 --> 00:06:43,290
This ship should be handled by the local handler that we saw.

87
00:06:44,070 --> 00:06:46,890
So this will be a local request for our gateway.

88
00:06:46,890 --> 00:06:48,600
So this it won't be eroded anywhere.

89
00:06:48,960 --> 00:06:55,080
So this has given us some time when it has wandered back so this can be used for doing health check

90
00:06:55,080 --> 00:06:56,460
of gateway service itself.

91
00:06:57,090 --> 00:07:01,160
Now let's say we want to send a request to some other service later.

92
00:07:01,260 --> 00:07:06,780
We want to send a request to admin service and we are choosing admin service over here because that

93
00:07:06,780 --> 00:07:08,610
does not require authentication.

94
00:07:09,420 --> 00:07:10,740
I have disable that.

95
00:07:11,040 --> 00:07:16,920
So the way it has been coded for certain APIs, it does not require any authentication and that is for

96
00:07:17,250 --> 00:07:19,900
service APIs, monitoring APIs.

97
00:07:19,920 --> 00:07:21,450
So you are going to make use of that.

98
00:07:21,840 --> 00:07:22,380
So let's.

99
00:07:24,550 --> 00:07:29,410
First, check out Edmund Service or our admin services.

100
00:07:30,710 --> 00:07:36,170
Working on Port eight, zero eight one, so right now, I'm directly going to bring admin service.

101
00:07:36,770 --> 00:07:42,170
So we got a response back from our admin service or admin services running on border to England.

102
00:07:42,830 --> 00:07:50,690
Now let's try to go to this admin service to our database of this so that we can achieve by changing

103
00:07:50,690 --> 00:07:52,250
the port to eight zero zero.

104
00:07:52,790 --> 00:07:57,680
And then this is where you are, and so does his status.

105
00:07:57,980 --> 00:07:58,820
Let's say we need.

106
00:07:59,980 --> 00:08:02,230
Status of all our services.

107
00:08:03,700 --> 00:08:08,950
So this should go to the admin service, so we get a response back, that means we are getting it back

108
00:08:08,950 --> 00:08:16,450
from admin service because that is where all this code for bringing all these services, collecting

109
00:08:16,450 --> 00:08:18,310
their responses and returning it back.

110
00:08:18,580 --> 00:08:20,700
That is all located within admin service.

111
00:08:20,710 --> 00:08:22,210
There is no such Gordon.

112
00:08:22,570 --> 00:08:24,580
The address of this will be able to respond.

113
00:08:25,030 --> 00:08:30,730
So that means we are able to root out requests to our services to get with service.

114
00:08:31,900 --> 00:08:32,560
So that's good.

115
00:08:32,770 --> 00:08:37,890
Now what we can do is we can do a final check to UI.

116
00:08:37,900 --> 00:08:44,680
So for that, what we will do is we will connect to our system through a browser.

117
00:08:45,550 --> 00:08:52,750
So let's connect to the Sport 8000, which is of our web application here.

118
00:08:53,320 --> 00:09:02,530
If I go to monitoring and if I do Bing services, this time this is being routed through gateway service.

119
00:09:03,010 --> 00:09:08,500
Because our web application only knows about gateway service, it doesn't know about the individual

120
00:09:08,500 --> 00:09:09,130
services.

121
00:09:09,490 --> 00:09:13,960
And in this case, it has sponsors also coming from Gateway service.

122
00:09:13,960 --> 00:09:18,490
So this admin service is also validating if the Gateway service is alive.

123
00:09:19,180 --> 00:09:24,940
So this is not useful if we are routing this request through Gateway Service, but litigator service

124
00:09:24,940 --> 00:09:30,040
is down and we want to find out what we can directly send a request to admin service and find out of

125
00:09:30,040 --> 00:09:31,450
gateway services available or not.

126
00:09:32,590 --> 00:09:39,220
OK, so that simplifies our architecture and this is what we have right now.

127
00:09:39,730 --> 00:09:46,830
All our client requests are being routed through the Gateway servers through.
