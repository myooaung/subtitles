WEBVTT
1
00:00:01.510 --> 00:00:06.280
OK, so let's resume our production system deployment demonstration using Google Trends.

2
00:00:07.180 --> 00:00:12.370
We did the complete setup for the deployment and we actually did the deployment.

3
00:00:13.180 --> 00:00:20.080
The only thing that we haven't done from the deployment perspective is that we haven't added load balancers

4
00:00:20.290 --> 00:00:22.810
to our system and what I mean by that.

5
00:00:23.950 --> 00:00:35.620
Let's go back to our demonstration where we have all these workloads running and we have these services

6
00:00:35.620 --> 00:00:35.980
running.

7
00:00:37.190 --> 00:00:43.910
If you look at some of these services, which are external facing services, they are using a service

8
00:00:43.910 --> 00:00:45.490
type called Northport.

9
00:00:45.500 --> 00:00:53.390
So let's say this single page application web application that every time you Prometheus Cubana, Yegor

10
00:00:53.390 --> 00:01:01.430
Kwadee, so all these application components that Alexis from my browser, so I'll have to.

11
00:01:01.520 --> 00:01:09.740
What I mean by using browser is that I live to access them using the internet, so these services should

12
00:01:09.740 --> 00:01:11.870
expose themselves to the internet.

13
00:01:12.980 --> 00:01:17.660
So that part is being achieved right now to Northport.

14
00:01:17.690 --> 00:01:23.320
Now, if I have to actually connect to the application, let's hit our web application to Northport.

15
00:01:23.810 --> 00:01:28.340
What I have to do is that I have to go to compute engine.

16
00:01:30.180 --> 00:01:37.350
Get to the law definitions and pick up any of the Nord, which is part of our Kubernetes cluster, or

17
00:01:38.100 --> 00:01:50.610
take the public IP address of that and use that along with or eight zero not eight zero three two one

18
00:01:50.940 --> 00:01:56.910
zero zero in case of error, we are using three two one zero zero.

19
00:01:56.940 --> 00:02:00.930
Like I told you earlier, if I'll show you the config.

20
00:02:05.440 --> 00:02:10.150
The service off their application running on Port Zero.

21
00:02:11.510 --> 00:02:15.830
If you try to connect it on board, eight zero will not be able to connect to it, so we have exposed

22
00:02:15.830 --> 00:02:18.260
it to Northport three two one zero zero.

23
00:02:19.100 --> 00:02:21.920
And like you said, by age zero, I was not able to connect it.

24
00:02:22.340 --> 00:02:27.710
I was able to connect that using Port three to one zero zero, which is the North Port, and this is

25
00:02:27.710 --> 00:02:30.590
the port which is open on all of these nodes.

26
00:02:31.430 --> 00:02:39.410
So this is something which will work for if we are doing test or if we are accessing development related

27
00:02:39.860 --> 00:02:40.580
instances.

28
00:02:40.850 --> 00:02:41.330
So that's it.

29
00:02:41.870 --> 00:02:44.570
I would be OK with this.

30
00:02:45.170 --> 00:02:49.970
If we are to use Northport for that, we go to services.

31
00:02:53.750 --> 00:03:03.320
So if I have to use Northport for Cabana or Yegor, gritty night or every time you are Prometheus,

32
00:03:03.320 --> 00:03:11.210
I'm okay with that because these are not the only applications exposed to and users, these are exposed

33
00:03:11.210 --> 00:03:13.040
to the administrators.

34
00:03:13.670 --> 00:03:21.460
So Northport is perfectly fine over there, but for their application, single page application, we

35
00:03:21.470 --> 00:03:28.660
are not fine because these are the applications that are being used by customers or end users, so will

36
00:03:28.670 --> 00:03:31.340
have to provide them an IP address.

37
00:03:31.700 --> 00:03:35.630
And that IP address ideally should be mapped to a domain name.

38
00:03:35.870 --> 00:03:40.610
But we haven't we don't have any domain name over here, so we are not going to use domain name.

39
00:03:41.000 --> 00:03:44.690
We are directly going to use the IP address.

40
00:03:45.500 --> 00:03:51.440
So this single page application also needs to directly connect to gateway service.

41
00:03:53.410 --> 00:03:59.200
So get the services over here, and right now, if you see this, this is not even Northport this cluster,

42
00:03:59.530 --> 00:04:07.000
which means it is not accessible by any plane which is outside of this particular at network.

43
00:04:07.840 --> 00:04:13.180
So because single page application needs to access gateway service, so we need to change this cluster

44
00:04:13.180 --> 00:04:14.950
IP to load balancer.

45
00:04:14.950 --> 00:04:21.250
So similarly, for a single page app and web application that we need to change this Northport to load

46
00:04:21.250 --> 00:04:21.820
balancer.

47
00:04:22.090 --> 00:04:27.220
So that is something that we are going to do in this demonstration and see if we are able to access

48
00:04:27.220 --> 00:04:31.060
our application using Load Balancer, which will use up public IP.

49
00:04:31.060 --> 00:04:33.070
So let's go ahead and make that change.

50
00:04:34.750 --> 00:04:42.550
So for that, we will go to let's first go to get service.

51
00:04:42.550 --> 00:04:43.540
Let's start from there.

52
00:04:48.930 --> 00:04:58.770
We're here, we will come in this type load balancer and we will come in this type cluster, I, I think

53
00:04:58.770 --> 00:04:59.490
that should be enough.

54
00:05:03.030 --> 00:05:06.690
Then let's go to our Web application here.

55
00:05:08.830 --> 00:05:12.900
Oncoming load balancer and coming down port.

56
00:05:13.600 --> 00:05:15.220
Similarly, we welcome any doubt.

57
00:05:17.840 --> 00:05:25.070
This Northport actual port that we have specified over here, so we are done with this last thing that

58
00:05:25.070 --> 00:05:27.350
we need to take care of this single page application.

59
00:05:30.210 --> 00:05:32.040
Let's do a similar thing over here as well.

60
00:05:40.000 --> 00:05:46.390
OK, so let's hit this point, we are done with all these configurations, and what we should do now

61
00:05:46.390 --> 00:05:49.660
is that let's delete the service configuration.

62
00:05:49.660 --> 00:05:55.870
So vehicle delivery service configuration, let's go to our services that these are services that select

63
00:05:56.350 --> 00:06:01.290
Gateway Service, also select single page app web app.

64
00:06:02.050 --> 00:06:03.790
And now let's delete them.

65
00:06:06.990 --> 00:06:07.830
So they are delighted.

66
00:06:12.340 --> 00:06:16.440
Now it's time to recreate these services as law balances.

67
00:06:16.460 --> 00:06:17.680
So let's go ahead and do that.

68
00:06:18.280 --> 00:06:21.010
For that, we will use cube deployed script.

69
00:06:22.920 --> 00:06:24.690
Let's select the configuration.

70
00:06:31.540 --> 00:06:39.280
So here we have a blade gate with this configuration, and this is so this gate, this service is created,

71
00:06:39.520 --> 00:06:40.270
so that's good.

72
00:06:41.080 --> 00:06:45.790
Now let's go ahead with our single page app and our web.

73
00:06:50.860 --> 00:06:52.030
Single page of time.

74
00:06:52.480 --> 00:06:53.380
Let's go to where that.

75
00:06:57.380 --> 00:07:00.470
So that's also done, servicemember creative, let's verify that.

76
00:07:06.490 --> 00:07:12.940
So get this obvious external balances, and now this has changed from cluster IP to load balancer.

77
00:07:13.330 --> 00:07:15.010
It is still under creation.

78
00:07:16.870 --> 00:07:23.380
Similarly, single page app and web application, they have changed to external load balancing, and

79
00:07:23.380 --> 00:07:32.530
they are also getting created right now, so it will take some time for this load balancer to that configuration

80
00:07:32.530 --> 00:07:36.970
to get applied and an actual external load balancer to be allocated.

81
00:07:37.390 --> 00:07:38.470
So we will wait for that.

82
00:07:38.800 --> 00:07:40.810
So I'm going to post this video.

83
00:07:43.090 --> 00:07:44.260
OK, let's resume again.

84
00:07:44.380 --> 00:07:47.440
So are external or balancers, they have come up.

85
00:07:48.250 --> 00:07:49.600
If you see it vis a vis.

86
00:07:50.840 --> 00:07:58.250
This external load balancer is ready and similarly single page application and web application load

87
00:07:58.250 --> 00:08:00.050
balancers are also ready.

88
00:08:01.070 --> 00:08:04.100
So let's verify that let's click this link.

89
00:08:10.150 --> 00:08:13.520
So let's say this is great service.

90
00:08:13.540 --> 00:08:18.880
There is a part call status that should they're done back, so it is returning back.

91
00:08:19.510 --> 00:08:20.920
It is right now.

92
00:08:23.610 --> 00:08:30.950
The response is coming from a particular port, and because we have only one instance of good results,

93
00:08:30.970 --> 00:08:35.630
so we see that the response is actually coming from one part only.

94
00:08:36.660 --> 00:08:36.970
OK.

95
00:08:37.260 --> 00:08:41.730
But it is the way we are accessing argued.

96
00:08:41.730 --> 00:08:45.780
This, obviously right now is to an external load balancing so we can see this now.

97
00:08:45.780 --> 00:08:53.340
We can access this to internet without knowing the IP addresses of our nodes and without using the North

98
00:08:53.340 --> 00:08:53.730
Pole.

99
00:08:54.300 --> 00:09:01.680
So these are the IP addresses that we can publish to our plane's external clients, and they can make

100
00:09:01.680 --> 00:09:05.040
use of that to connect to our application.

101
00:09:06.160 --> 00:09:10.990
The other ways that we can still use, we won't be able to use Northport.

102
00:09:11.800 --> 00:09:18.550
But if I want to use Northport for, let's say, ElasticSearch, I should be able to use that because

103
00:09:18.550 --> 00:09:20.080
that is still on the Northport.

104
00:09:20.080 --> 00:09:21.430
So these IP addresses?

105
00:09:21.790 --> 00:09:23.440
34, 93 241.

106
00:09:24.040 --> 00:09:24.880
This is different.

107
00:09:25.810 --> 00:09:29.110
And these external load balancer IP addresses are different.

108
00:09:30.010 --> 00:09:31.750
So when we have to access.

109
00:09:33.740 --> 00:09:41.420
Developing systems like ElasticSearch, which we do through Kebano, and if you have to access arteries

110
00:09:41.420 --> 00:09:47.540
through Yegor Query or Brummett years or every time you feel that we will have to use Northport and

111
00:09:47.990 --> 00:09:53.540
for our end user application, you can now access them through external load balancer, a similar thing

112
00:09:53.540 --> 00:09:56.230
we can do for our single page application also.

113
00:09:56.250 --> 00:10:00.980
So that's also accessible through this external load balancer.

114
00:10:02.660 --> 00:10:08.600
So that we have added external load balancers to our configuration, and with that are set up, is production

115
00:10:08.600 --> 00:10:08.930
ready?

116
00:10:09.410 --> 00:10:19.550
Now we need to check if this system will really be able to withstand the load of production will operate

117
00:10:19.670 --> 00:10:20.840
reliably or not.

118
00:10:21.230 --> 00:10:24.020
And if we can upgrade this system or not.

119
00:10:24.620 --> 00:10:31.400
So some of these things, we still need to be checked for high availability or to scaling and rolling

120
00:10:31.400 --> 00:10:31.860
upgrades.

121
00:10:32.000 --> 00:10:34.850
That is something that we are going to do in the next session.
