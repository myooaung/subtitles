1
00:00:02,450 --> 00:00:08,000
Before we end this topic, let's quickly understand the gains of containerisation, so we containerized

2
00:00:08,450 --> 00:00:11,630
all the components of our system as Docker containers.

3
00:00:12,110 --> 00:00:18,920
The reason we did that is that by doing this, we were able to package our application components into

4
00:00:18,920 --> 00:00:19,850
Docker containers.

5
00:00:19,850 --> 00:00:26,090
In this package, they contained the operating system environment in which they are running, and it

6
00:00:26,090 --> 00:00:28,640
has all the required software that they need.

7
00:00:28,940 --> 00:00:32,180
It has the correct version and the correct software.

8
00:00:32,990 --> 00:00:40,250
So whatever we have specified in Docker file that only goes into these Docker containers so that we

9
00:00:40,250 --> 00:00:45,530
have a very consistent environment, we can replicate it very easily because it's dead and they don't

10
00:00:45,530 --> 00:00:45,980
provide.

11
00:00:46,610 --> 00:00:54,200
Similarly, we have documented our environment variables in Docker compose configuration and we can

12
00:00:54,200 --> 00:00:57,140
use them whenever we are launching our containers.

13
00:00:57,530 --> 00:01:03,800
If there are any environment variables that are needed for building images, we can supply them in the

14
00:01:03,800 --> 00:01:04,940
Docker file itself.

15
00:01:05,450 --> 00:01:14,240
So by using the Docker files, we could produce our components packaged within an environment in which

16
00:01:14,240 --> 00:01:15,140
they are going to run.

17
00:01:15,620 --> 00:01:21,290
Now we can consistently replicate them, we can take these containers from our dev environment.

18
00:01:21,290 --> 00:01:24,710
We can put them into our test environment, test them over there.

19
00:01:25,040 --> 00:01:29,360
And the same thing that we are tested in our development, environment and test environment.

20
00:01:29,720 --> 00:01:35,420
We can even use them in production environment so that there is never any discrepancy.

21
00:01:35,780 --> 00:01:42,560
That there is something which is working in dev environment but not working in a test environment or

22
00:01:42,590 --> 00:01:43,520
vice versa.

23
00:01:44,480 --> 00:01:52,070
So this gives us consistency in moving forward with the development of our system, which we will need

24
00:01:52,310 --> 00:01:57,860
because right now we are going to deal with a large scan system, which is going to have lots of components.

25
00:01:58,070 --> 00:02:00,590
So we do not have this consistency.

26
00:02:00,950 --> 00:02:03,890
We can not replicate our environment consistently.

27
00:02:04,250 --> 00:02:07,820
We will make mistakes and that is going to slow us down.

28
00:02:08,180 --> 00:02:13,100
So this is a big step forward in moving towards a large scale system.

29
00:02:13,490 --> 00:02:19,490
The other thing that we achieved is that in production environment, we can even control the lifecycle

30
00:02:19,490 --> 00:02:20,190
of our containers.

31
00:02:20,210 --> 00:02:28,520
We can start and stop them like we saw, and we can even ask Docker to monitor its liveliness and restart

32
00:02:28,520 --> 00:02:30,290
them in case a container goes down.

33
00:02:30,710 --> 00:02:32,180
There's a slight catch over here.

34
00:02:32,600 --> 00:02:38,690
This is something that we would not like to do in production environment, although for smaller systems,

35
00:02:39,140 --> 00:02:40,470
we can use this.

36
00:02:40,850 --> 00:02:44,120
But we are talking about a large scale system here.

37
00:02:44,150 --> 00:02:47,060
The Docker functionality is not adequate for this.

38
00:02:47,060 --> 00:02:52,730
We will actually use Kubernetes and Kubernetes will provide us these capabilities.

39
00:02:53,180 --> 00:02:58,130
So there is something, although Docker provides, but we are not going to use in production environment

40
00:02:58,400 --> 00:03:00,530
that we will use Kubernetes capabilities.

41
00:03:01,430 --> 00:03:05,610
So with this, we are done with the containerization of our system.

42
00:03:05,660 --> 00:03:08,930
Now we will add more architectural elements to our system.
