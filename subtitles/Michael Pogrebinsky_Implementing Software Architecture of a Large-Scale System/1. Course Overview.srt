1
00:00:01,810 --> 00:00:09,220
Discourse implementing software architecture of a large-scale system is part of developer to architect

2
00:00:09,220 --> 00:00:16,480
series, where the first course software, architecture and technology of large scale systems dealt

3
00:00:16,480 --> 00:00:22,510
with concepts and principles of software architecture that govern large scale systems.

4
00:00:23,170 --> 00:00:31,120
In the second part, which is totally independent of the first part and can be taken in any order deals

5
00:00:31,120 --> 00:00:32,830
with the implementation part.

6
00:00:33,460 --> 00:00:40,300
So if you have a software system and you have to evolve it into a large scale system, then what does

7
00:00:40,300 --> 00:00:43,450
it mean in terms of continuous configuration?

8
00:00:43,900 --> 00:00:46,270
Additional new components and technology?

9
00:00:46,840 --> 00:00:52,510
So these are those kind of practical aspects that are covered as part of this course.

10
00:00:54,520 --> 00:00:59,500
This course comes with a downloadable Corbis, which can be downloaded from Bitbucket.

11
00:01:00,370 --> 00:01:04,600
We will use this course to build and run an end to end system.

12
00:01:06,200 --> 00:01:11,720
We will take this code base or download this code base on a Linux virtual machine that we are going

13
00:01:11,720 --> 00:01:12,320
to create.

14
00:01:12,860 --> 00:01:18,530
We will create this virtual machine on Google Cloud using Google Compute Engine.

15
00:01:19,190 --> 00:01:22,820
For those who do not feel home with Linux, need not worry at all.

16
00:01:23,300 --> 00:01:26,900
In this course, we are not doing anything that is platform specific.

17
00:01:27,500 --> 00:01:31,910
Most of the work that we need to do is already automated to save time.

18
00:01:32,390 --> 00:01:39,350
You will need to know only very basic commands to understand the most of the code so that if you know

19
00:01:39,350 --> 00:01:45,350
how to change the directory, how to list directly, how to view a file and how to execute a script,

20
00:01:46,100 --> 00:01:49,490
then this should be good enough for you to follow this course.

21
00:01:50,090 --> 00:01:52,970
It's only when you want to dig deeper yourself.

22
00:01:53,420 --> 00:01:55,910
You may need to understand a bit of shell scripting.

23
00:01:56,120 --> 00:02:02,630
But if you are an experienced developer and you have done a bit of scripting in any language on any

24
00:02:02,630 --> 00:02:07,670
platform, then that too should also be a very easy task for you.

25
00:02:08,630 --> 00:02:16,340
We will use this virtual machine as a workstation to build the code, add new features and run our system.

26
00:02:17,240 --> 00:02:24,290
When we first ran our system on this machine, we will go over its components and get an overview of

27
00:02:24,290 --> 00:02:27,050
its core and the technology that is used.

28
00:02:28,520 --> 00:02:33,920
Once we have understood the different components of our system and the technology and the code that

29
00:02:33,920 --> 00:02:34,490
it uses.

30
00:02:35,360 --> 00:02:39,320
We will package all our components using Docker containers.

31
00:02:39,710 --> 00:02:46,160
This will be needed so that we can deploy our system consistently every time as we are extending our

32
00:02:46,160 --> 00:02:46,670
system.

33
00:02:47,650 --> 00:02:52,510
As part of our system extension, the first thing that we are going to do is we're going to split our

34
00:02:52,510 --> 00:03:00,760
services into multiple different specialized services so that later on they can be extended into microservices.

35
00:03:02,530 --> 00:03:09,310
As our system is evolving into a distributed system, we will have to do routing related changes, so

36
00:03:09,310 --> 00:03:14,740
the first thing that we will do is we will introduce a gateway service for which we will use.

37
00:03:14,950 --> 00:03:16,750
Netflix also is.

38
00:03:18,560 --> 00:03:22,400
Next, we will add Netflix, Yurek, our discovery service into our system.

39
00:03:23,970 --> 00:03:29,820
Next, we will introduce in the next global insight into our system for load balancing, so this high

40
00:03:29,830 --> 00:03:32,100
load balancing and for client side load balancing.

41
00:03:32,580 --> 00:03:34,650
We will use ribbon load balancer.

42
00:03:35,770 --> 00:03:41,440
Once we have taken care of routing related changes, then we can scale up our system, we can manually

43
00:03:41,440 --> 00:03:43,810
scale up some of the components of our system.

44
00:03:45,210 --> 00:03:51,090
As our system is growing, we will need better observability, better ways to observe our system.

45
00:03:51,120 --> 00:03:57,860
As part of that, we will do centralized loading using ElasticSearch fluently and cabana.

46
00:03:59,170 --> 00:04:03,360
Next, we will introduce centralised tracing using Wahlberg.

47
00:04:05,090 --> 00:04:12,260
The last thing that we will do as part of observability is we will introduce Prometheus for checking

48
00:04:12,440 --> 00:04:13,550
system Matrix.

49
00:04:14,900 --> 00:04:22,220
Our next set of extensions will be to manage the high scale of data for that in order to manage raedler.

50
00:04:22,940 --> 00:04:29,960
We will introduce caching and we will use risk for that in order to manage right load better.

51
00:04:30,320 --> 00:04:34,520
We will use asynchronous processing using it every time you.

52
00:04:35,800 --> 00:04:43,510
In order to further scale our system, we will replace our IDB IMS database with our distributed database

53
00:04:43,900 --> 00:04:49,300
so that we can do data partitioning, and for that we will use Cassandra database.

54
00:04:50,470 --> 00:04:57,820
Once we fully extended our system in order to deploy our system, which has become very complex, and

55
00:04:57,820 --> 00:05:03,010
to operate this system, we will use Kubernetes for Kubernetes.

56
00:05:03,010 --> 00:05:05,860
We will again use Google Cloud Kubernetes.

57
00:05:06,010 --> 00:05:11,860
And there we will deploy our system as if we're running it for production.

58
00:05:15,170 --> 00:05:18,290
As we evolve our system through different stages.

59
00:05:19,010 --> 00:05:21,650
This is the process that we will follow at every stage.

60
00:05:22,760 --> 00:05:29,000
We will look at the current solution limitation and then we will see how by using a new component,

61
00:05:29,540 --> 00:05:33,180
we can overcome those limitations with those new components.

62
00:05:33,200 --> 00:05:35,570
We will look at what different technology options do.

63
00:05:35,570 --> 00:05:38,480
We have work or changes we will have to do?

64
00:05:39,020 --> 00:05:40,970
What system configuration will be needed?

65
00:05:41,300 --> 00:05:45,260
And then we will finally, Randi complete system.

66
00:05:45,770 --> 00:05:51,830
We will repeat this process over and over again to achieve the final state of our system.

67
00:05:52,830 --> 00:05:59,520
So this way, we will take a very hands on approach towards understanding software and solution architecture

68
00:05:59,970 --> 00:06:02,760
of a large scale and distributed system.

69
00:06:03,450 --> 00:06:09,690
We will learn about different architectural challenges, different technology options that are available

70
00:06:09,690 --> 00:06:10,950
to solve those challenges.

71
00:06:11,460 --> 00:06:17,670
We will get first hand experience and insight into some of those modern tools and technologies.

72
00:06:18,000 --> 00:06:24,690
And most importantly, we will get hands-on with a system that has so many features of a truly large-scale

73
00:06:24,690 --> 00:06:25,200
system.

74
00:06:25,860 --> 00:06:28,650
So that's the overview of what we are going to learn.

75
00:06:29,220 --> 00:06:30,300
Now, let's get started.
