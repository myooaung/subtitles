1
00:00:01,400 --> 00:00:05,790
Now, let's take a look at our Web application code for that.

2
00:00:05,810 --> 00:00:13,190
Even go to court repository and in the code repository, there is web directly when web application

3
00:00:13,190 --> 00:00:20,090
code is located inside that there are two directories ABPS directly and BYU, a territory bulk of the

4
00:00:20,090 --> 00:00:22,820
court, is located in ABPS directly itself.

5
00:00:23,210 --> 00:00:26,910
Let's open this in page up, which is an ID for Python.

6
00:00:28,070 --> 00:00:35,570
So if I open this code base in Punjab, there are various directories that are there in app directly.

7
00:00:35,660 --> 00:00:38,170
Let's take a look at those directories.

8
00:00:38,180 --> 00:00:41,180
So first one is static directly that we are interested in.

9
00:00:41,690 --> 00:00:49,430
So on the static content that we were supposed to host on a reverse proxy server is located in this

10
00:00:49,430 --> 00:00:50,450
particular directory.

11
00:00:51,320 --> 00:00:58,100
When we are developing our web application at that time, we will need this data in our web server.

12
00:00:58,100 --> 00:01:01,280
So that's the reason it is located in static directory.

13
00:01:01,850 --> 00:01:07,610
When we host this application in production mode, we will take this static data and we will actually

14
00:01:07,610 --> 00:01:10,430
host it on a separate reverse proxy server.

15
00:01:10,880 --> 00:01:13,880
But the location is this particular directly.

16
00:01:15,080 --> 00:01:23,420
Then the next thing that we are interested is in templates and the views stored be verified.

17
00:01:24,530 --> 00:01:28,820
So only views are there and will start be file.

18
00:01:29,420 --> 00:01:33,410
Let's just go back to our architecture of our replication.

19
00:01:33,410 --> 00:01:40,550
So we said that any user that comes to our web application goes to a URL map and that decides a view,

20
00:01:41,060 --> 00:01:45,290
and we will decide how to fetch the data and which template to show.

21
00:01:46,130 --> 00:01:47,090
So let's go back.

22
00:01:47,420 --> 00:01:50,770
So any request that will come will first come to this.

23
00:01:50,780 --> 00:01:55,260
You already start by map you are in map this, you are.

24
00:01:55,260 --> 00:02:00,590
A map uses regular expressions to map a you are in to a view.

25
00:02:01,190 --> 00:02:11,390
So here if we get, let's say, orders in our you order that will get map to the order's view and those

26
00:02:11,390 --> 00:02:14,750
views are there in views stored by file.

27
00:02:15,320 --> 00:02:19,290
So this is the filing and this is the function name in that file.

28
00:02:20,030 --> 00:02:25,220
So for orders, we will have to go to orders, function, interviews, views toward the light.

29
00:02:25,250 --> 00:02:28,190
So this is used to be verified within that.

30
00:02:28,610 --> 00:02:30,500
We have this order's function.

31
00:02:32,050 --> 00:02:37,020
So this order's function does two things it will make a request to the backend.

32
00:02:37,870 --> 00:02:38,130
All right.

33
00:02:38,140 --> 00:02:42,550
So it will fetch the model by making a call to the services.

34
00:02:42,910 --> 00:02:44,530
So that's what it is doing over here.

35
00:02:44,920 --> 00:02:50,500
Once it gets that data, it puts their data into a template.

36
00:02:50,500 --> 00:02:53,740
So here the template is app orders attachment.

37
00:02:54,160 --> 00:02:59,050
So these templates are located in templates that are within their templates.

38
00:02:59,050 --> 00:03:05,380
There is a directory app and within that app we have this artist or attachment.

39
00:03:05,770 --> 00:03:09,160
So these are holiday templates are structured.

40
00:03:09,160 --> 00:03:12,100
So let's say we are looking at ordered or natural.

41
00:03:12,610 --> 00:03:18,730
So this will tell us how the HTML four order view will be created.

42
00:03:19,540 --> 00:03:24,220
So this is the basic structure of our web application.

43
00:03:24,610 --> 00:03:32,110
So if you are analyzing the Replication Corp, it has a very simple structure and a very limited number

44
00:03:32,110 --> 00:03:35,650
of files and directories that you have to navigate to.

45
00:03:36,220 --> 00:03:43,450
That is one more file that we often need to worry about, and that is this setting start by file all

46
00:03:43,450 --> 00:03:49,460
the variables, global variables for all our debug or logging settings.

47
00:03:49,930 --> 00:03:53,770
They are there in this particular setting start to be verified.

48
00:03:54,010 --> 00:03:59,860
So let's say various these services and bind located that kind of setting will be dead in this setting

49
00:03:59,860 --> 00:04:01,030
start by file.

50
00:04:01,810 --> 00:04:06,580
So that's very briefly the structure of our code for that application.

51
00:04:07,000 --> 00:04:09,280
Now let's move to the next component.
