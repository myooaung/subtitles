1
00:00:01,610 --> 00:00:07,440
So in order to deploy this large scale system, we are going to take help of two things.

2
00:00:07,460 --> 00:00:12,800
One, we are going to use public cloud and the other thing that we are going to use is Kubernetes.

3
00:00:12,890 --> 00:00:15,530
Now let's talk about why do we need them?

4
00:00:15,950 --> 00:00:21,050
First thing, we need a public cloud because in order to deploy this system, we will need a lot of

5
00:00:21,050 --> 00:00:21,590
hardware.

6
00:00:22,550 --> 00:00:27,230
So cloud is something which is going to provide us that hardware.

7
00:00:27,590 --> 00:00:36,410
It will provide us network so that this system can communicate with each other and from internet users

8
00:00:36,410 --> 00:00:38,540
can communicate with this system.

9
00:00:39,350 --> 00:00:45,920
Then the third thing that cloud will provide us is a Kubernetes cluster, which we will need for using

10
00:00:46,220 --> 00:00:46,940
Kubernetes.

11
00:00:47,660 --> 00:00:50,600
So these are the things which are easily available on cloud.

12
00:00:50,630 --> 00:00:53,900
Of course, cloud provides us compute resources, the network.

13
00:00:53,900 --> 00:01:00,350
But one big thing we are using cloud for is school when it is cluster, because if you are to create

14
00:01:00,350 --> 00:01:04,700
a Kubernetes cluster on our own, then it's not a trivial thing to do.

15
00:01:05,150 --> 00:01:08,630
So that part will be solved by using cloud.

16
00:01:09,960 --> 00:01:16,830
So then let's talk about Kubernetes now, why do we need to when it is, we need Kubernetes because

17
00:01:16,830 --> 00:01:24,390
it will provide us automated deployment to a configuration so we can create configuration for all of

18
00:01:24,390 --> 00:01:27,390
these components and we are actually going to do that.

19
00:01:27,960 --> 00:01:35,280
And that configuration can be used for deploying our system on a when it is cluster on a public cloud

20
00:01:35,610 --> 00:01:38,670
every time, and we can do it very reliably.

21
00:01:38,670 --> 00:01:42,680
If it works for one time, then it works every time.

22
00:01:42,690 --> 00:01:45,810
So that's the philosophy behind automating anything.

23
00:01:46,440 --> 00:01:51,030
So Kubernetes is going to provide us that automation for deployment.

24
00:01:52,150 --> 00:01:59,960
While it provides us the automation for deployment, it also provides us the life cycle services for

25
00:02:00,100 --> 00:02:04,150
different components like we have to start, stop and restart them.

26
00:02:04,510 --> 00:02:07,960
It will provide us command and user interface to do that.

27
00:02:08,530 --> 00:02:10,750
We will be able to monitor our application.

28
00:02:10,750 --> 00:02:17,350
We will be able to upgrade them and will be able to do health checks within our system is running fine

29
00:02:17,350 --> 00:02:17,680
or not.

30
00:02:18,160 --> 00:02:25,330
If there is any component which is going down or there are some instances of a component which is going

31
00:02:25,340 --> 00:02:31,450
down, so all those problems can be detected through health checks and Kubernetes is going to provide

32
00:02:31,450 --> 00:02:31,960
us that.

33
00:02:32,970 --> 00:02:40,410
It will also provide us the networking capabilities, it will provide us DNS for all of all our components

34
00:02:40,770 --> 00:02:43,240
so we can address them through these names.

35
00:02:43,290 --> 00:02:47,830
And we will see that we don't need to use any IP addresses anywhere.

36
00:02:47,850 --> 00:02:55,500
So the way we saw in Docker compose, we were addressing our components with names because Docker also

37
00:02:55,500 --> 00:02:59,190
provides us a network which has got DNS in it.

38
00:02:59,670 --> 00:03:01,970
So similar capability will be provided by Google.

39
00:03:01,980 --> 00:03:08,340
And it is also it just that he had this DNS will extend to multiple machines with Docker.

40
00:03:08,340 --> 00:03:12,180
We work with Docker network, we were restricted to only one machine.

41
00:03:12,600 --> 00:03:19,470
Now there is a Docker swarm, which is used for deploying Docker applications on multiple machines,

42
00:03:19,950 --> 00:03:23,010
but it is not as popular as Kuban.

43
00:03:23,010 --> 00:03:28,530
It is so cool when it is was first such product and it is immensely popular.

44
00:03:28,890 --> 00:03:32,790
So we are not considering Docker using Docker Swarm over here.

45
00:03:33,270 --> 00:03:38,070
We will only use Kubernetes, so we were talking about networking.

46
00:03:38,070 --> 00:03:47,160
So this networking will provide us how we can rotate applications of how a request to different application

47
00:03:47,160 --> 00:03:49,050
components, how they can be load balance.

48
00:03:49,650 --> 00:03:54,210
All those things are also something that Kubernetes will help us with.

49
00:03:54,630 --> 00:03:56,310
It will provide us high availability.

50
00:03:56,310 --> 00:04:01,890
So if any component goes down, Kubernetes is actually going to restart it.

51
00:04:02,130 --> 00:04:05,970
If it is not healthy, it is going to kill it and it will restart it.

52
00:04:07,050 --> 00:04:12,960
So these are certain capabilities that are a must for a large scale system.

53
00:04:13,800 --> 00:04:19,950
If we do not use Kubernetes, then we will have to develop these capabilities on our own, which is

54
00:04:19,950 --> 00:04:25,590
something which is useless now because we have something like we went at this and it's open source as

55
00:04:25,590 --> 00:04:25,860
well.

56
00:04:26,850 --> 00:04:33,630
Now, talking about clout, we have many good public cloud options like Microsoft Azure, Google Cloud

57
00:04:33,630 --> 00:04:37,380
and Amazon IWC, all of them are fantastic options.

58
00:04:38,370 --> 00:04:45,960
I like Google Cloud for the reason it's most economical and the way it provides automation.

59
00:04:46,470 --> 00:04:49,620
I like that, so it's a matter of personal choice as well.

60
00:04:50,370 --> 00:04:55,830
If you wish, you can use any other cloud also, but I will not be able to provide you instructions

61
00:04:55,830 --> 00:04:56,250
for that.

62
00:04:56,640 --> 00:05:03,240
So if you want instructions, you can stick to Google Cloud and see how we can use Google Cloud along

63
00:05:03,240 --> 00:05:10,650
with Kubernetes to deploy this entire system through a configuration and in a very reliable manner.
