1
00:00:01,463 --> 00:00:06,232
Let's introduce our story and the task that we need to complete.

2
00:00:06,232 --> 00:00:09,404
Movie Rank is the one-stop site that allows people to ran movies,

3
00:00:09,404 --> 00:00:14,009
and it exposes information on what the rankings are for each movie.

4
00:00:14,009 --> 00:00:19,202
We are tasked with creating a .NET Core Web API that will allow either a

5
00:00:19,202 --> 00:00:23,235
mobile app or website to consume this information.

6
00:00:23,235 --> 00:00:26,929
We'll be using DynamoDB as our database to store and

7
00:00:26,929 --> 00:00:30,562
retrieve information from our users.

8
00:00:30,562 --> 00:00:34,066
We want to make sure we understand the use cases before we start

9
00:00:34,066 --> 00:00:38,318
building our DynamoDB data model and creating our table,

10
00:00:38,318 --> 00:00:40,937
so let's go through this now.

11
00:00:40,937 --> 00:00:45,934
For our first use case, we want to allow users to rank movies.

12
00:00:45,934 --> 00:00:51,544
We want to be able to get a full list of movies a user has ranked.

13
00:00:51,544 --> 00:00:57,404
We also want to list all movies a user has ranked for a specific movie name.

14
00:00:57,404 --> 00:01:00,024
And we want to list all movies a user has ranked where

15
00:01:00,024 --> 00:01:02,924
the user isn't sure of the movie name.

16
00:01:02,924 --> 00:01:07,179
We want to provide an overall rank for a specific movie

17
00:01:07,179 --> 00:01:10,418
that combines all user's rankings.

18
00:01:10,418 --> 00:01:12,131
For administrative purposes,

19
00:01:12,131 --> 00:01:17,368
we also want to list all movies and all users stored in our database.

20
00:01:17,368 --> 00:01:26,537
And finally, we want to also allow a user to update an already-ranked movie.

21
00:01:26,537 --> 00:01:31,199
With all that information, we are now able to create our DynamoDB data model.

22
00:01:31,199 --> 00:01:35,020
On screen shows what our data model will look like.

23
00:01:35,020 --> 00:01:38,169
We will set the partition key as the UserId,

24
00:01:38,169 --> 00:01:41,461
and we'll set the MovieName as the sort key.

25
00:01:41,461 --> 00:01:46,437
Both of these combined create a composite primary key.

26
00:01:46,437 --> 00:01:48,498
We will also create a global secondary index,

27
00:01:48,498 --> 00:01:52,433
setting the partition key of this index to MovieName.

28
00:01:52,433 --> 00:02:02,000
As we go through the course and create our application, I'll show you when each of these keys that we have set matter.

