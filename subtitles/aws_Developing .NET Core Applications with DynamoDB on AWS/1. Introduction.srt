1
00:00:00,000 --> 00:00:00,666
Hi,

2
00:00:00,666 --> 00:00:07,116
and welcome to the Working with Items in DynamoDB Using the

3
00:00:07,116 --> 00:00:10,337
Object Persistence Model from the Developing .NET Core

4
00:00:10,337 --> 00:00:14,616
Applications with DynamoDB on AWS.

5
00:00:14,616 --> 00:00:20,271
My name is Daniel, and I'll be taking you through this module.

6
00:00:20,271 --> 00:00:25,391
The DynamoDB SDK for .NET offers three models that can be used,

7
00:00:25,391 --> 00:00:29,655
the Object Persistence, document, and low-level model.

8
00:00:29,655 --> 00:00:34,303
In this module, we'll be focusing on the Object Persistence model.

9
00:00:34,303 --> 00:00:36,911
We will discuss why this model exists,

10
00:00:36,911 --> 00:00:41,462
what DynamoDB operations we have access to from within this model,

11
00:00:41,462 --> 00:00:44,329
and what operations are missing from it.

12
00:00:44,329 --> 00:00:49,077
We then jump into our demo where we will continue to add to our .NET

13
00:00:49,077 --> 00:00:53,346
Core template that we created in the previous module.

14
00:00:53,346 --> 00:00:55,873
We'll be adding the endpoints in the DynamoDB calls

15
00:00:55,873 --> 00:00:59,678
using the Object Persistence model.

16
00:00:59,678 --> 00:01:05,880
The Object Persistence model is a wrapper around the low-level DynamoDB model.

17
00:01:05,880 --> 00:01:11,814
We are able to store, load, and query DynamoDB using this model.

18
00:01:11,814 --> 00:01:12,969
Out of the three models,

19
00:01:12,969 --> 00:01:16,727
the Object Persistence model is the easiest to code against.

20
00:01:16,727 --> 00:01:23,602
This model enables us to map our client-side classes to our DynamoDB table.

21
00:01:23,602 --> 00:01:29,175
Each object instance then maps to an item in the corresponding table.

22
00:01:29,175 --> 00:01:31,249
While we're able to do most things with this model,

23
00:01:31,249 --> 00:01:40,000
one of the big missing features is the ability to create, update, and delete DynamoDB tables.

