WEBVTT
1
00:00:00.940 --> 00:00:04.240
Let's set a test for our GetMovie endpoint.

2
00:00:04.240 --> 00:00:11.540
We will create a method name, GetMovieReturnsExpectedMovieName.

3
00:00:11.540 --> 00:00:16.240
We add a userId constant and set this to 3.

4
00:00:16.240 --> 00:00:20.440
We will also add another constant to store a movieName.

5
00:00:20.440 --> 00:00:22.840
We don't currently accept the movieName parameter

6
00:00:22.840 --> 00:00:27.840
into our AddMovieRankData method, so let's add that now.

7
00:00:27.840 --> 00:00:32.540
We will also add an optional parameter of testâ€‘MovieName.

8
00:00:32.540 --> 00:00:36.590
This is so we don't have to pass in a movieName for the tests that

9
00:00:36.590 --> 00:00:39.940
don't need to specify a specific movie name.

10
00:00:39.940 --> 00:00:43.210
We will call off to our AddMovieRankData method and

11
00:00:43.210 --> 00:00:46.840
pass in the userId and movieName.

12
00:00:46.840 --> 00:00:50.720
We will use the GetAsync method and pass in the route to our

13
00:00:50.720 --> 00:00:56.840
GetMovie endpoint, movies/{userId}, and our movieName.

14
00:00:56.840 --> 00:01:00.840
We add a local variable to store our movie response,

15
00:01:00.840 --> 00:01:05.150
and we'll use the same code that we have in our other test to read the

16
00:01:05.150 --> 00:01:10.950
content, then deserialize the response into a MovieResponse contract. We will

17
00:01:10.950 --> 00:01:16.290
assert that the movieName we are passing into the AddMovieRankData method is

18
00:01:16.290 --> 00:01:25.000
the name we get back when calling our GetMovie endpoint. And let's run all of our tests to make sure they pass.

