1
00:00:00,940 --> 00:00:04,950
Before creating our tests, we need to do a bit of work to spin up our

2
00:00:04,950 --> 00:00:11,360
application and memory to pull down and run the local instance of DynamoDB and

3
00:00:11,360 --> 00:00:15,740
to set up the DynamoDB table ready to run our tests against.

4
00:00:15,740 --> 00:00:18,600
We want to group our setup classes together so

5
00:00:18,600 --> 00:00:21,640
we'll create a folder named Setup.

6
00:00:21,640 --> 00:00:26,760
Then we'll add a class named CollectionFixture, and

7
00:00:26,760 --> 00:00:28,840
we'll set our class to public.

8
00:00:28,840 --> 00:00:32,310
When running our tests, we want to do some setup the first time the

9
00:00:32,310 --> 00:00:36,440
tests are run and share the setup among other tests.

10
00:00:36,440 --> 00:00:41,140
This saves us having to do the tested up each time a test is run.

11
00:00:41,140 --> 00:00:45,330
Actioner gives us the ability to create a class as our entry point when

12
00:00:45,330 --> 00:00:50,290
we first run our tests. We can then add classes to this entry point that

13
00:00:50,290 --> 00:00:54,370
will be executed the first time our tests are run. Inside the

14
00:00:54,370 --> 00:00:58,660
CollectionFixture class, I'll add the collection definition attribute to

15
00:00:58,660 --> 00:01:00,400
the top of our class.

16
00:01:00,400 --> 00:01:03,740
Inside this attribute, we'll add the name API.

17
00:01:03,740 --> 00:01:07,340
We need to add the XUnit using statement.

18
00:01:07,340 --> 00:01:11,450
We will implement the ICollectionFixture interface and add the class

19
00:01:11,450 --> 00:01:16,730
TestContext. We'll create the TestContext class shortly, but what we're

20
00:01:16,730 --> 00:01:19,490
saying here is that when we run our tests,

21
00:01:19,490 --> 00:01:23,410
we want the TestContext class to be run before we run our

22
00:01:23,410 --> 00:01:27,750
tests. The CollectionDefinition and ICollectionFixture

23
00:01:27,750 --> 00:01:31,340
interfaces are all part of the XUnit library.

24
00:01:31,340 --> 00:01:37,000
If you want to know more about the collection fixtures, then you can read more about it on the XUnit page.

