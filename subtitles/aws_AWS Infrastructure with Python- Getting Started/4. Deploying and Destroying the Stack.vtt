WEBVTT
1
00:00:01.240 --> 00:00:05.240
Now that we viewed the CloudFormation template,

2
00:00:05.240 --> 00:00:10.060
normally we actually deploy using the cdk deploy command,

3
00:00:10.060 --> 00:00:13.060
and we just specify the stack that we want to deploy.

4
00:00:13.060 --> 00:00:18.820
We don't actually need to generate a CloudFormation template and upload it.

5
00:00:18.820 --> 00:00:20.930
If we run cdk deploy,

6
00:00:20.930 --> 00:00:26.070
you can actually see all of the resources that this

7
00:00:26.070 --> 00:00:29.410
CDK stack is going to deploy.

8
00:00:29.410 --> 00:00:32.860
So you can see we have the lambda function,

9
00:00:32.860 --> 00:00:36.550
the permissions for that lambda function, and so on.

10
00:00:36.550 --> 00:00:40.140
All of them are viewable from the console.

11
00:00:40.140 --> 00:00:41.320
Afterwards,

12
00:00:41.320 --> 00:00:46.140
just confirm that you want to deploy these changes, and CDK

13
00:00:46.140 --> 00:00:50.190
will take care of creating this LambdaStack.

14
00:00:50.190 --> 00:00:53.440
If we go view the CloudFormation console,

15
00:00:53.440 --> 00:00:58.840
you'll actually see the LambdaStack in the CloudFormation console.

16
00:00:58.840 --> 00:01:01.420
Now you can see the create is in progress,

17
00:01:01.420 --> 00:01:04.140
it will take some time to create,

18
00:01:04.140 --> 00:01:08.540
but it's a fully working CloudFormation environment.

19
00:01:08.540 --> 00:01:10.460
So all of the things that are true for

20
00:01:10.460 --> 00:01:13.940
CloudFormation are also true for this stack.

21
00:01:13.940 --> 00:01:15.380
If I delete this stack,

22
00:01:15.380 --> 00:01:21.340
all of the resources associated with this stack are also deleted.

23
00:01:21.340 --> 00:01:26.420
Now let's just wait for this stack to finish creating.

24
00:01:26.420 --> 00:01:30.720
And you can see that the stack has now finished creating.

25
00:01:30.720 --> 00:01:36.740
We can actually visit the endpoint seen in the Outputs file.

26
00:01:36.740 --> 00:01:41.340
So if we visit that endpoint and we pass in the proper GET

27
00:01:41.340 --> 00:01:46.160
parameter we can actually view the result of the app.

28
00:01:46.160 --> 00:01:50.920
So you can see here that we specified Hello, Marc!

29
00:01:50.920 --> 00:01:51.780
You have a hit.

30
00:01:51.780 --> 00:01:57.340
We can change the name to whatever name we want as well.

31
00:01:57.340 --> 00:02:04.940
So this is a very simple lambda function fronted by an API gateway.

32
00:02:04.940 --> 00:02:06.650
Now to delete this stack,

33
00:02:06.650 --> 00:02:11.870
we can delete it from the CloudFormation console. We can also use the

34
00:02:11.870 --> 00:02:16.040
cdk destroy command to destroy the LambdaStack.

35
00:02:16.040 --> 00:02:19.970
It will ask for confirmation, and then you just need to say yes.

36
00:02:19.970 --> 00:02:26.740
It will destroy all of the resources associated with this LambdaStack.

37
00:02:26.740 --> 00:02:28.980
If we go back to CloudFormation,

38
00:02:28.980 --> 00:02:33.840
you'll actually see that the stack is in the process of deleting.

39
00:02:33.840 --> 00:02:42.000
So the CDK handles everything from provisioning to destroying your CloudFormation stack.

