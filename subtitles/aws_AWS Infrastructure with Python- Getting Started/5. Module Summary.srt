1
00:00:01,040 --> 00:00:02,430
Now, in this module,

2
00:00:02,430 --> 00:00:06,790
we first demonstrated how to automate the provisioning

3
00:00:06,790 --> 00:00:10,540
of subnets using the VPC construct.

4
00:00:10,540 --> 00:00:15,530
Take note that the VPC construct only supports FSLM,

5
00:00:15,530 --> 00:00:18,940
or fixed‑length subnet masking.

6
00:00:18,940 --> 00:00:19,870
Secondly,

7
00:00:19,870 --> 00:00:24,100
we use the default child attribute to access the

8
00:00:24,100 --> 00:00:27,300
low‑level CloudFormation resource construct,

9
00:00:27,300 --> 00:00:34,310
or CfnResource construct, to look at more specific and lower‑level

10
00:00:34,310 --> 00:00:40,040
attributes that are not available to the higher‑level construct.

11
00:00:40,040 --> 00:00:45,530
Third, we used Python loops to simplify the adding of network ACL rules.

12
00:00:45,530 --> 00:00:51,190
So instead of writing and manually specifying each rule one by one,

13
00:00:51,190 --> 00:00:57,140
we actually used Python code to simplify adding these rules.

14
00:00:57,140 --> 00:00:57,920
And lastly,

15
00:00:57,920 --> 00:01:03,500
we added custom arguments to construct constructors so that we can

16
00:01:03,500 --> 00:01:08,530
actually add some input logic to our resources.

17
00:01:08,530 --> 00:01:13,740
So you saw we specified what subnet we wanted, how many NAT gateways

18
00:01:13,740 --> 00:01:24,000
we're going to use, and even the database port that our DB is actually going to possibly use in the future.

