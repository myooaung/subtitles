1

00:00:00,450  -->  00:00:05,850
Hello everyone and welcome to lecture on coordinates and fasting learning how to deal coordinates will

2

00:00:05,850  -->  00:00:11,580
allow us to resize or plots correctly and fasting will allow us to place several plots next to each

3

00:00:11,580  -->  00:00:12,380
other.

4

00:00:12,390  -->  00:00:15,400
Let's go ahead and jump to our studio to see how this all works.

5

00:00:15,570  -->  00:00:17,570
OK so here we are our studio.

6

00:00:17,600  -->  00:00:22,950
And before we begin adding the coordinates layer and the fastening layers to our grammar graphics model

7

00:00:23,400  -->  00:00:27,160
let's go and just start off by building a very simple plot.

8

00:00:27,330  -->  00:00:30,010
So we're going to say library Gigia plot 2.

9

00:00:30,210  -->  00:00:37,630
And then we'll say gee plot function pass in the MPG dataset which comes with Jiyu plot.

10

00:00:38,280  -->  00:00:47,190
And then for the aesthetics we'll go ahead and say X is displacement in y as highway then we'll go ahead

11

00:00:47,190  -->  00:00:58,230
and add G underscore point to create a very basic scatterplot will assign that's the variable P.L. or

12

00:00:58,230  -->  00:01:04,040
we'll go ahead and print P.L. and run that source and see what we get.

13

00:01:05,100  -->  00:01:10,020
So we get this scatterplot if we go ahead and just zoom on it we can check out that we have a highway

14

00:01:10,410  -->  00:01:12,140
which essentially mpg.

15

00:01:12,270  -->  00:01:17,960
And then the displacement of whatever the engine is.

16

00:01:17,970  -->  00:01:24,480
So let's go ahead now and play around with coordinates in order to set x and y limits.

17

00:01:24,550  -->  00:01:33,930
One nice way to do this is by we go out and say people we can add the argument Kord underscore Cartesian

18

00:01:34,500  -->  00:01:42,120
and then inside of that function we can pass x slim and whilom these both accept vectors as arguments

19

00:01:42,410  -->  00:01:47,310
where the first number in the vector is your lower limit and your higher and your next number is your

20

00:01:47,310  -->  00:01:48,410
higher limit.

21

00:01:48,420  -->  00:01:54,220
So for example we want the X limit to go from let's say 1 to 4.

22

00:01:54,760  -->  00:02:03,450
We can pass in X Lim and then with the combined function pasan a vector 1 come 4 and we can do the same

23

00:02:03,450  -->  00:02:04,580
thing for whilom.

24

00:02:04,590  -->  00:02:14,430
Let's go ahead and limit this one to with a vector let's say 15 to 30 15 Khama 30 will assign that P.L.

25

00:02:14,430  -->  00:02:21,530
to and then we'll just go ahead imprints heal too.

26

00:02:21,640  -->  00:02:22,560
So it's from the source.

27

00:02:22,560  -->  00:02:24,550
Now make sure this all worked.

28

00:02:24,960  -->  00:02:27,780
And now we can see the difference between the first two plots.

29

00:02:27,780  -->  00:02:36,300
So our first plot looks like this but with the ability to use chord Cartesian we were able to set the

30

00:02:36,300  -->  00:02:37,160
x and y element.

31

00:02:37,160  -->  00:02:42,180
So if you take a look at the actual plot that we just output it it looks like this.

32

00:02:42,480  -->  00:02:46,320
Then you can resize this window you want to resize the plot.

33

00:02:46,950  -->  00:02:52,980
But here we can see that we go from one to four just as we indicated in the chord underscore Cartesian

34

00:02:53,790  -->  00:02:56,650
function and then it goes from 15 to 30.

35

00:02:56,670  -->  00:02:59,160
Again as we said with why limit.

36

00:02:59,160  -->  00:03:01,070
All right let's go to continue.

37

00:03:01,150  -->  00:03:09,220
Notice as I was zoomed in on that plot I could automatically resize this to set aspect ratios.

38

00:03:09,390  -->  00:03:14,580
We can actually see the aspect ratio is from the very beginning before we even play around with this

39

00:03:14,580  -->  00:03:16,370
plot zoom.

40

00:03:16,370  -->  00:03:20,360
We can do that by adding an argument Kord underscore fixed.

41

00:03:20,430  -->  00:03:23,180
Let's go in and show how we can do that.

42

00:03:23,190  -->  00:03:33,210
So the undelete the CT underscore Cartesian argument and instead add corde underscore fixed and we can

43

00:03:33,210  -->  00:03:37,310
use this argument to change the aspect ratio of the plot by default.

44

00:03:37,320  -->  00:03:45,000
It's one one sort appears in the square but in this court underscore fixed function we can pasan a ratio

45

00:03:45,000  -->  00:03:50,730
parameter and the ratio premiÃ¨re is expressed as y to x.

46

00:03:50,730  -->  00:03:55,540
So for example we can have a ratio of 1 to 3.

47

00:03:56,010  -->  00:04:07,170
Run the source and you can see a ratio of white X is 1 to 3 meaning if we zoom in here let's go in and

48

00:04:07,230  -->  00:04:08,250
zoom a little further.

49

00:04:08,250  -->  00:04:11,380
Notice how the aspect ratio no longer actually changes.

50

00:04:11,550  -->  00:04:14,420
When I zoom in and out it stays the same.

51

00:04:14,520  -->  00:04:21,360
So it takes 3 x units to create the length of the bin of one white units.

52

00:04:21,480  -->  00:04:28,140
As far as the grid lines go and we can do that by again saying CT underscore fixed and setting the ratio

53

00:04:28,680  -->  00:04:31,500
by default it's 1 1.

54

00:04:31,530  -->  00:04:31,970
All right.

55

00:04:32,130  -->  00:04:34,740
That's the basics for dealing with coordinates.

56

00:04:34,740  -->  00:04:41,110
The most important one was that Kord underscore Cartesian to fixture x and y limits.

57

00:04:41,130  -->  00:04:43,430
Let's go ahead and discuss facets.

58

00:04:43,530  -->  00:04:48,540
So the best way to set up a Fassett grid which is essentially just multiple plots is to use the Fassett

59

00:04:48,600  -->  00:04:54,250
underscore grid function there's a lot to Fassett grid.

60

00:04:54,450  -->  00:05:01,140
So I would definitely recommend calling Help facets underscore grid and checking out the documentation

61

00:05:01,140  -->  00:05:01,970
page.

62

00:05:02,120  -->  00:05:07,140
This documentation page is great and instruction on how to lay out panels in a grid using the Fassett

63

00:05:07,140  -->  00:05:08,540
underscore grid argument.

64

00:05:08,540  -->  00:05:13,500
It has tons of examples to follow and input into year either our script or con..

65

00:05:13,530  -->  00:05:15,050
So definitely check that out.

66

00:05:15,270  -->  00:05:21,570
The syntax for using Fassett grid may appear strange at first so will show several examples to hopefully

67

00:05:21,600  -->  00:05:25,420
try to clarify what the syntax is actually trying to say.

68

00:05:25,440  -->  00:05:28,900
First let's go ahead and see what our normal plot looks like.

69

00:05:28,980  -->  00:05:31,990
So going to go out and say Prince P.L.

70

00:05:34,800  -->  00:05:37,700
run that source chicken plot.

71

00:05:37,800  -->  00:05:40,400
So we have our normal plot here.

72

00:05:40,590  -->  00:05:47,040
Let's go ahead and try to separate this into four facets based off of number of cylinders.

73

00:05:47,040  -->  00:05:49,790
Each of these cars have has.

74

00:05:50,130  -->  00:05:56,060
So I can do that by saying plus Fassett underscore grid.

75

00:05:56,760  -->  00:06:01,850
And then the Fassett I want to do is cylinder.

76

00:06:02,220  -->  00:06:09,630
I'm going to go ahead and continue by saying dots till the see why else cylinders.

77

00:06:09,630  -->  00:06:19,110
So if we take a quick look at the head of NPG notice we have a cylinder column similar to our empty

78

00:06:19,110  -->  00:06:26,010
cars column where just four six one of these cars has five cylinders and one of them a few of them have

79

00:06:26,070  -->  00:06:28,020
eight cylinders.

80

00:06:28,020  -->  00:06:34,740
So we're going to try to create four separate plots for each number of cylinder types.

81

00:06:34,740  -->  00:06:38,760
So what this actually shows is the following.

82

00:06:38,760  -->  00:06:41,020
We say Fassett grid.

83

00:06:41,580  -->  00:06:50,160
And then we use a dot till the symbol and then the actual column we want to separate by for Fassett

84

00:06:50,160  -->  00:06:51,380
grids.

85

00:06:52,020  -->  00:06:53,520
Let me go in and show you this.

86

00:06:53,730  -->  00:06:58,940
So hopefully try to explain this maybe strange syntax.

87

00:06:58,970  -->  00:07:07,780
All right so if you notice what we get back out is the cylinders separated along the x x.

88

00:07:07,890  -->  00:07:16,480
So the syntax for a Fassett grid will be what you want to Fassett by on the y axis till the symbol.

89

00:07:16,500  -->  00:07:21,260
And then what you want to Fassett by on the x axis.

90

00:07:21,390  -->  00:07:30,120
So let's go ahead and show another example of this by saying for instance we have to drive the drive

91

00:07:30,120  -->  00:07:31,480
type column.

92

00:07:31,620  -->  00:07:36,340
So we're going to Fassett our scatterplot by Dr cild symbol.

93

00:07:36,350  -->  00:07:40,650
And then what the dot represents is just everything else.

94

00:07:40,650  -->  00:07:46,650
So essentially you're not trying to Fassett by two variables you're just fascinated by one says the

95

00:07:46,650  -->  00:07:48,200
most common approach.

96

00:07:48,480  -->  00:07:54,860
Either X or Y on the pending side of till the stand on and then a period or dot on the other side.

97

00:07:54,900  -->  00:07:58,470
Let's go ahead and run so you can see what this looks like.

98

00:07:58,930  -->  00:08:00,660
Checkout zoom here.

99

00:08:00,690  -->  00:08:04,920
Now you notice I'm on the y axis as far as the drive type.

100

00:08:04,920  -->  00:08:09,250
So I have four wheel drive front wheel drive and a rear wheel drive.

101

00:08:09,480  -->  00:08:13,960
And that's because the column name came first before that Tilda sign.

102

00:08:14,070  -->  00:08:17,030
And then I have my period.

103

00:08:17,160  -->  00:08:19,020
So what happens if I don't have a period here.

104

00:08:19,070  -->  00:08:21,500
I go ahead and put in another column.

105

00:08:21,570  -->  00:08:26,890
So let's say Fassett by Dr type and number of cylinders.

106

00:08:27,030  -->  00:08:36,500
Well then I'll get basically two dimensional facets so we get basically blocks that look like this.

107

00:08:36,720  -->  00:08:43,440
Where along my x axis I've separated things but a type of cylinder and a long y y axis I've separated

108

00:08:43,920  -->  00:08:50,110
the scatter plots by type of drive for four wheel drive front wheel drive real rear wheel drive etc.

109

00:08:50,120  -->  00:08:50,380
.

110

00:08:50,730  -->  00:08:52,910
And that's the way you can use Fassett grid.

111

00:08:52,950  -->  00:08:59,370
The syntax is a little strange to get used to but essentially you can remember it as just call Fassett

112

00:08:59,370  -->  00:09:00,420
grid.

113

00:09:00,420  -->  00:09:07,610
The column you want to Fassett by this till the symbol and then a dot.

114

00:09:08,100  -->  00:09:13,000
So that's the most basic way to fasten it in or give something that looks like this.

115

00:09:13,140  -->  00:09:18,600
If you wanted it to be faceted along the another dimension then just reverse this.

116

00:09:18,630  -->  00:09:24,960
So you'll say then that's still the and then the name you want to Fassett Biles go to say drive type

117

00:09:24,960  -->  00:09:30,000
again and then you'll notice it's Fassett along the other dimension.

118

00:09:30,090  -->  00:09:35,370
So as long as you remember this basic pattern of a dots that till the symbol and then the column you

119

00:09:35,370  -->  00:09:41,640
want you should be good to go because you can just reverse these to the period and the column name in

120

00:09:41,640  -->  00:09:45,340
case you accidently switch the actual dimensions or axes.

121

00:09:45,510  -->  00:09:52,050
You watch your fastening to occur in if you want to Fassett by two columns then you just add in the

122

00:09:52,050  -->  00:09:55,050
other column and you can switch these columns around.

123

00:09:55,080  -->  00:10:01,470
In case you want to switch which axis belongs to which column and that's the basics of using Fassett

124

00:10:01,470  -->  00:10:09,630
grid this sort of expression syntax wise may look a little strange will appear to look a lot more common

125

00:10:10,020  -->  00:10:15,840
when you do things like machine learning in are way you'll end up using this sort of tilde symbol with

126

00:10:15,930  -->  00:10:17,160
a daughter period.

127

00:10:17,250  -->  00:10:18,350
A lot more.

128

00:10:18,600  -->  00:10:24,090
But as far as using Fassett grin hopefully now you understand the basics of just passing a column name

129

00:10:24,390  -->  00:10:27,100
till the symbol and then either a period or dot.

130

00:10:27,120  -->  00:10:30,700
If you're only doing one dimensional fastening.

131

00:10:31,170  -->  00:10:33,990
OK hopefully that was useful to you.

132

00:10:34,020  -->  00:10:39,840
You can go check the documentation for more information by just checking help and then looking up Fassett

133

00:10:39,840  -->  00:10:42,390
grid here.

134

00:10:42,390  -->  00:10:44,520
All right that's it for this lecture.

135

00:10:44,520  -->  00:10:45,550
Hope you found that useful.

136

00:10:45,550  -->  00:10:46,690
I'll see you at the next one.
