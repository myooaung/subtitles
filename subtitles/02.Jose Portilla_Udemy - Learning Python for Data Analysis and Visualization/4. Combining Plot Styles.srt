1
1

00:00:01,200  -->  00:00:06,190
Hey everybody welcome to lecture 50,
Combining Plot Styles.
2

2

00:00:06,190  -->  00:00:10,530
So in this lecture, we're gonna be
learning how to combine plot styles.
3

3

00:00:10,530  -->  00:00:14,450
I've already copied and pasted
the imports we're gonna be using for
4

4

00:00:14,450  -->  00:00:15,910
the data visualization section.
5

5

00:00:15,910  -->  00:00:17,610
So you've got your normal inputs.
6

6

00:00:17,610  -->  00:00:19,340
The stats library, and
7

7

00:00:19,340  -->  00:00:23,380
then the plotting modules as well
as mat plot in line command.
8

8

00:00:23,380  -->  00:00:26,990
So, this lecture will be quite a bit
shorter than the last lecture, and
9

9

00:00:26,990  -->  00:00:27,740
we're gonna learn a lot.
10

10

00:00:28,900  -->  00:00:31,690
So, we're gonna learn how to
combine different plot styles.
11

11

00:00:31,690  -->  00:00:33,710
So, let's get something to plot.
12

12

00:00:33,710  -->  00:00:34,920
Let's go ahead and make a data set.
13

13

00:00:36,170  -->  00:00:41,890
We'll set that equal to this random 100.
14

14

00:00:41,890  -->  00:00:42,890
So set's get 100 points.
15

15

00:00:43,910  -->  00:00:49,170
And then to make a combined plot,
Seaborn has
16

16

00:00:49,170  -->  00:00:56,440
a built in D-I-S-T, so distplot.
17

17

00:00:56,440  -->  00:00:59,010
And this allows us to combine plots.
18

18

00:00:59,010  -->  00:01:06,210
So if I pass my data set through this,
and I set my bins equal to 25.
19

19

00:01:06,210  -->  00:01:08,120
By default bins are set to 10.
20

20

00:01:08,120  -->  00:01:12,360
And seaborn, and hit Alt+Enter.
21

21

00:01:12,360  -->  00:01:18,110
So by default, this distplot combines
a kernel density estimation plot,
22

22

00:01:18,110  -->  00:01:21,760
this line that we discussed in
the previous lecture, with a histogram,
23

23

00:01:21,760  -->  00:01:23,990
which we also discussed
in previous lectures.
24

24

00:01:25,300  -->  00:01:26,320
Great.
25

25

00:01:26,320  -->  00:01:31,640
So, we can also choose
whether it's a rug plot,
26

26

00:01:31,640  -->  00:01:34,490
a kernel density estimation plot or
a histogram.
27

27

00:01:34,490  -->  00:01:37,670
Those are all input
arguments to this plot.
28

28

00:01:37,670  -->  00:01:40,750
And we can either turn those plots on or
off.
29

29

00:01:40,750  -->  00:01:45,910
To show you what I'm talking about,
let's go ahead and call the distplot.
30

30

00:01:48,250  -->  00:01:49,790
Call it on the data set.
31

31

00:01:49,790  -->  00:01:50,890
Again, set your bins equal 25.
32

32

00:01:50,890  -->  00:01:57,110
And now what I'm gonna do is,
33

33

00:01:57,110  -->  00:02:00,910
I'm gonna set rug equal true,
so I can see a rug plot.
34

34

00:02:02,460  -->  00:02:08,110
And I'm gonna set hist equal to false,
so I don't see the histogram anymore.
35

35

00:02:08,110  -->  00:02:11,420
Let's go ahead and hit Alt+Enter.
36

36

00:02:11,420  -->  00:02:14,240
And so now, by default, it showed the kde,
37

37

00:02:14,240  -->  00:02:17,260
but I showed rug to true, so
it's showing my rug plot,
38

38

00:02:17,260  -->  00:02:21,580
and it's not showing the histogram
anymore because I set hist to false.
39

39

00:02:21,580  -->  00:02:22,890
Excellent.
40

40

00:02:22,890  -->  00:02:27,770
So let's say, I want to control specific
plots within the combined plots.
41

41

00:02:28,810  -->  00:02:33,450
So if I wanted to do,
maybe set a certain color to the rug plot,
42

42

00:02:33,450  -->  00:02:37,750
or set certain parameters on the KDE plot.
43

43

00:02:37,750  -->  00:02:41,128
I can do that by passing
dictionaries into distplot.
44

44

00:02:41,128  -->  00:02:42,710
So I'll show you how to do that now.
45

45

00:02:43,720  -->  00:02:49,810
So we can call S and S distplot,
46

46

00:02:49,810  -->  00:02:54,630
call my dataset, set the number of bins,
let's call it 25.
47

47

00:02:54,630  -->  00:02:58,660
And what I can do is I
can pass dictionaries.
48

48

00:02:58,660  -->  00:03:03,480
So the way we can do is by having
49

49

00:03:03,480  -->  00:03:08,290
a plot_ kws argument equal a dictionary.
50

50

00:03:08,290  -->  00:03:13,100
So, what I mean by that is,
if I want to edit my KDE plot, and
51

51

00:03:13,100  -->  00:03:15,960
hold on a second, I forgot the s there.
52

52

00:03:15,960  -->  00:03:20,250
Like I was saying, if I want to
edit my KDE plot, I'll set KDE,
53

53

00:03:21,270  -->  00:03:25,690
and then underscore kws for
those arguments, and
54

54

00:03:25,690  -->  00:03:28,910
I'll set those arguments
equal to a dictionary.
55

55

00:03:30,830  -->  00:03:34,220
So I have my color key, and
56

56

00:03:34,220  -->  00:03:38,890
I can set that equal to a color,
so I'll select indianred, and
57

57

00:03:38,890  -->  00:03:43,940
then I could also make a label
specifically for the KDE plot.
58

58

00:03:43,940  -->  00:03:47,610
And set that key equal to KDE plot.
59

59

00:03:50,690  -->  00:03:51,810
And then let's say,
60

60

00:03:51,810  -->  00:03:56,190
I wanted also to edit my histogram
that came along with the distplot.
61

61

00:03:56,190  -->  00:04:00,290
I can do that just by saying hist,
again underscore kws.
62

62

00:04:01,320  -->  00:04:06,420
Equal, and then I can pass a dictionary
again with certain controls.
63

63

00:04:06,420  -->  00:04:10,780
So let's set the histogram color to blue,
64

64

00:04:13,580  -->  00:04:18,560
and let's label it, so set the label key.
65

65

00:04:18,560  -->  00:04:19,560
And its value will be HIST.
66

66

00:04:19,560  -->  00:04:22,480
Capitalize it.
67

67

00:04:26,100  -->  00:04:28,030
Okay.
Let's go ahead and see if that worked.
68

68

00:04:29,330  -->  00:04:30,310
Great.
69

69

00:04:30,310  -->  00:04:33,750
So now you can individually control
70

70

00:04:35,080  -->  00:04:40,500
the not quite sub plots, but
each individual plot in the combined plot.
71

71

00:04:41,930  -->  00:04:48,216
Just by passing dictionary and
then the plot subname_kws.
72

72

00:04:48,216  -->  00:04:49,572
Great.
73

73

00:04:49,572  -->  00:04:51,744
All Right.
74

74

00:04:51,744  -->  00:04:54,570
So again we've learned so
much about pandas.
75

75

00:04:54,570  -->  00:04:57,030
And works really well with pandas.
76

76

00:04:57,030  -->  00:04:58,990
We can use panda state objects for this.
77

77

00:04:58,990  -->  00:05:05,650
So I can say from pandas let's
go ahead and import Series.
78

78

00:05:07,900  -->  00:05:10,040
And let's create a series.
79

79

00:05:10,040  -->  00:05:18,583
From my dataset, so I'm gonna say
ser1 equals Series from the dataset.
80

80

00:05:18,583  -->  00:05:23,542
And I'll set that series name to
81

81

00:05:23,542  -->  00:05:27,404
be the string my_data.
82

82

00:05:27,404  -->  00:05:30,497
And then let's go ahead and
see what that series looks like.
83

83

00:05:30,497  -->  00:05:36,086
[SOUND] So there's my series
made from those 100 points.
84

84

00:05:36,086  -->  00:05:37,206
Great.
85

85

00:05:37,206  -->  00:05:39,755
And now, we can use seaborn.
86

86

00:05:39,755  -->  00:05:44,661
Sns.distplot.
87

87

00:05:44,661  -->  00:05:47,627
You can pass a panda series.
88

88

00:05:47,627  -->  00:05:51,284
And again, let's say bins 25.
89

89

00:05:52,500  -->  00:05:55,010
And it will plot the pandas series.
90

90

00:05:55,010  -->  00:05:59,330
So seaborn works fantastically
well with pandas.
91

91

00:05:59,330  -->  00:06:00,040
It's a great,
92

92

00:06:00,040  -->  00:06:04,110
great data visualization library
that works really well with pandas.
93

93

00:06:05,110  -->  00:06:06,380
Okay.
94

94

00:06:06,380  -->  00:06:08,460
So let's go ahead and
95

95

00:06:08,460  -->  00:06:12,440
go to the next lecture where we're
gonna learn about box and violent box.
96

96

00:06:12,440  -->  00:06:13,050
I'll see you there.
