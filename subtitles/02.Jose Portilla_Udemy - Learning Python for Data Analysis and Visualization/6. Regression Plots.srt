1
1

00:00:01,050  -->  00:00:04,830
All right guys, let's go ahead and
start lecture 52.
2

2

00:00:07,160  -->  00:00:12,120
And this will be on regression plots or
multiple regression plots.
3

3

00:00:13,905  -->  00:00:19,355
Okay, so I've already filled out
my cell with the normal inputs and
4

4

00:00:19,355  -->  00:00:22,435
imports for
the data visualization section.
5

5

00:00:23,535  -->  00:00:29,819
And we're gonna have to learn
how to use visual with lmplot.
6

6

00:00:29,819  -->  00:00:33,770
So, Seaborn comes with
some example data sets.
7

7

00:00:33,770  -->  00:00:37,950
And we can use those in conjunction
with a panda's data frame.
8

8

00:00:37,950  -->  00:00:42,940
So let's go ahead and
upload one of those data sets.
9

9

00:00:42,940  -->  00:00:49,081
I'm gonna make a data frame
called tips and from Seaborn,
10

10

00:00:49,081  -->  00:00:54,150
sns.load_dataset, and
11

11

00:00:54,150  -->  00:00:56,780
then the name of this data set is tips.
12

12

00:01:01,640  -->  00:01:02,620
Wait for it to load.
13

13

00:01:02,620  -->  00:01:03,410
All right.
14

14

00:01:03,410  -->  00:01:06,416
Once it's loaded, let's just go ahead and
check out the first five rows.
15

15

00:01:06,416  -->  00:01:09,954
Calling tips.
16

16

00:01:09,954  -->  00:01:12,370
Okay, so what's in this data set?
17

17

00:01:12,370  -->  00:01:17,690
We got a total bill,
the tip left on that bill,
18

18

00:01:17,690  -->  00:01:22,460
the sex, whether the person was
a female or male, were they a smoker?
19

19

00:01:22,460  -->  00:01:23,125
The day.
20

20

00:01:23,125  -->  00:01:27,925
They pay their bill, the time of their
meal, and the size of their party.
21

21

00:01:27,925  -->  00:01:29,365
All right.
22

22

00:01:29,365  -->  00:01:30,525
Great.
23

23

00:01:30,525  -->  00:01:35,185
So now that we have that information,
let's go ahead and plot it.
24

24

00:01:35,185  -->  00:01:39,339
So let's plot the tips
versus the total bill.
25

25

00:01:40,400  -->  00:01:43,250
So we can do that using sns.
26

26

00:01:43,250  -->  00:01:49,640
And we're going to use lmplot
to to a regression plot here.
27

27

00:01:49,640  -->  00:01:54,491
So let's put in total_bill and
28

28

00:01:54,491  -->  00:02:00,062
we'll plot then tip and then the data
29

29

00:02:00,062  -->  00:02:06,360
frame it's gonna come from is tips.
30

30

00:02:06,360  -->  00:02:08,340
So let's go ahead and plot that.
31

31

00:02:08,340  -->  00:02:09,680
All right, awesome.
32

32

00:02:09,680  -->  00:02:14,530
So first off, we can see a scatter plot of
all the points on tip versus total bill.
33

33

00:02:14,530  -->  00:02:16,800
And then we see the linear
regression line.
34

34

00:02:16,800  -->  00:02:20,930
And, that's just an estimated
linear fit model for all the data.
35

35

00:02:20,930  -->  00:02:23,500
So, this is the linear regression fit for
36

36

00:02:23,500  -->  00:02:26,230
all this data that's been
scattered on this plot.
37

37

00:02:28,050  -->  00:02:28,870
All right.
38

38

00:02:28,870  -->  00:02:32,140
So, just like before, we can use
dictionaries to edit in the visual
39

39

00:02:32,140  -->  00:02:36,870
parts of that plot so
to show you an example of this.
40

40

00:02:36,870  -->  00:02:39,920
Let's go ahead and say sns.lmplot.
41

41

00:02:39,920  -->  00:02:41,512
Again, we're gonna do the total bill.
42

42

00:02:44,813  -->  00:02:46,773
And then the tip left.
43

43

00:02:46,773  -->  00:02:49,780
And we're gonna grab it
from the tips data frame.
44

44

00:02:51,270  -->  00:02:55,599
And now,
if you remember from previous lectures,
45

45

00:02:56,860  -->  00:03:01,040
we can say the name of the plot type,
_kws.
46

46

00:03:01,040  -->  00:03:05,310
And now I can set a dictionary for
47

47

00:03:05,310  -->  00:03:09,170
some additional arguments,
for each individual plot.
48

48

00:03:09,170  -->  00:03:13,490
So, let's say I want my scatter plot
to use a particular marker type.
49

49

00:03:13,490  -->  00:03:16,910
I can say marker as argument, and
50

50

00:03:16,910  -->  00:03:22,700
have that key have the value of O and
you can look at the documentation.
51

51

00:03:22,700  -->  00:03:28,430
You can also put in stars and
other different markers for scatter plots.
52

52

00:03:28,430  -->  00:03:31,060
And then I'm gonna set
the color of the scatter plot.
53

53

00:03:32,290  -->  00:03:35,990
Have the key color be Indiana red.
54

54

00:03:38,290  -->  00:03:38,940
All right.
55

55

00:03:38,940  -->  00:03:43,350
And then for the line, for
that linear regression plot.
56

56

00:03:43,350  -->  00:03:43,970
Let's see.
57

57

00:03:43,970  -->  00:03:49,009
I'm gonna set some of those,
I'm gonna set the line width
58

58

00:03:53,020  -->  00:03:57,912
and I'll set that equal to one,
and then I'll set the color
59

59

00:03:57,912  -->  00:04:02,651
key equal to blue, well not equal,
60

60

00:04:02,651  -->  00:04:08,520
sorry I keep saying that, but
actually it's your dictionary so
61

61

00:04:08,520  -->  00:04:11,240
it's a key and
then your values associated with it.
62

62

00:04:11,240  -->  00:04:12,640
You're not actually typing in equals.
63

63

00:04:13,750  -->  00:04:14,930
All right.
So let's go ahead and
64

64

00:04:14,930  -->  00:04:16,040
see how that plot works out.
65

65

00:04:17,340  -->  00:04:22,380
And there you go so now on this multiple
regression plot you've been able to
66

66

00:04:22,380  -->  00:04:27,340
individually pass arguments
on the scatter plot and
67

67

00:04:27,340  -->  00:04:31,024
the linear plot separately.
68

68

00:04:31,024  -->  00:04:31,930
Okay.
69

69

00:04:31,930  -->  00:04:38,750
So this is just a first order treadline,
we can also do multiple higher orders.
70

70

00:04:38,750  -->  00:04:43,070
If we want to do some quadratic
fits to this data set.
71

71

00:04:43,070  -->  00:04:48,930
So, for instance,
the way I can do that is by passing order.
72

72

00:04:48,930  -->  00:04:52,210
So, I'm actually going to
do it on the previous cell,
73

73

00:04:52,210  -->  00:04:54,700
since we'll keep all of
the information the same.
74

74

00:04:54,700  -->  00:04:58,840
I can indicate what order
Polynomial fit I want.
75

75

00:04:58,840  -->  00:05:00,730
So if I wanted a fourth order,
76

76

00:05:00,730  -->  00:05:05,680
I just passed the argument order four,
so let's see how that changes our fit.
77

77

00:05:08,930  -->  00:05:10,640
And so
now we have a different fit on the data.
78

78

00:05:11,700  -->  00:05:14,340
So you can use that in case
you don't want a linear fit,
79

79

00:05:14,340  -->  00:05:17,160
you can just specify
what order fit you want.
80

80

00:05:18,610  -->  00:05:19,760
Okay.
81

81

00:05:19,760  -->  00:05:22,630
So we can also just not
fit a regression at all,
82

82

00:05:22,630  -->  00:05:25,380
we can just have it be
a pure scatter plot.
83

83

00:05:25,380  -->  00:05:30,826
So we can say sns.lmplot,
again the total bill,
84

84

00:05:33,246  -->  00:05:38,233
The tip, and then the data frame we're
85

85

00:05:38,233  -->  00:05:43,220
gonna get it from is Tips, and then if we
86

86

00:05:43,220  -->  00:05:48,509
wanna just get rid of the regression fit,
87

87

00:05:48,509  -->  00:05:52,309
I can pass fit_reg=False.
88

88

00:05:52,309  -->  00:05:55,350
And if we do that,
let's go ahead and see the plot.
89

89

00:05:55,350  -->  00:05:57,850
And so now we basically just have
a scatter plot of all the data.
90

90

00:05:59,692  -->  00:06:05,330
So lmplot also works on discrete variables
such as the percentage of the tip.
91

91

00:06:05,330  -->  00:06:06,810
So let's go ahead and
see what that looks like.
92

92

00:06:08,320  -->  00:06:10,310
So to get the percentage of the tip,
93

93

00:06:10,310  -->  00:06:15,160
let's just go ahead and remind ourselves
what the data frame looks like again.
94

94

00:06:15,160  -->  00:06:16,700
All right.
So we got the total bill at the tip.
95

95

00:06:17,970  -->  00:06:20,060
And then the other columns.
96

96

00:06:20,060  -->  00:06:21,820
So let's go ahead and make a new column.
97

97

00:06:22,880  -->  00:06:24,900
So we'll say tips.
98

98

00:06:24,900  -->  00:06:26,890
And I wanna say tip_pect.
99

99

00:06:26,890  -->  00:06:29,320
So it's a tip percentage.
100

100

00:06:29,320  -->  00:06:34,084
And I'm gonna see that
101

101

00:06:34,084  -->  00:06:39,601
equal to 100 times tips
102

102

00:06:39,601  -->  00:06:44,366
the tip column divided
103

103

00:06:44,366  -->  00:06:49,400
by the tips total bill.
104

104

00:06:49,400  -->  00:06:52,440
So now I am just making
a new column onto this
105

105

00:06:52,440  -->  00:06:54,880
tips data frame called the tip percentage.
106

106

00:06:54,880  -->  00:06:59,640
So what percentage of
the tip was the total bill.
107

107

00:07:02,510  -->  00:07:04,840
I'm sorry what percent of
the total bill was the tip.
108

108

00:07:04,840  -->  00:07:06,700
And so I am going to say a hundred times.
109

109

00:07:06,700  -->  00:07:09,210
Tip divided by the total
bill to get that number.
110

110

00:07:10,220  -->  00:07:11,170
So, let's go and do that.
111

111

00:07:11,170  -->  00:07:13,960
And now let's take a quick
look at that column.
112

112

00:07:15,500  -->  00:07:16,080
Here we go.
113

113

00:07:16,080  -->  00:07:23,006
So, for instance in row zero
the total bill is almost $17.00.
114

114

00:07:23,006  -->  00:07:28,987
You add a $1 tip and
that's about 6% of the bill.
115

115

00:07:28,987  -->  00:07:30,460
Great.
116

116

00:07:30,460  -->  00:07:32,410
So let's go ahead and plot that then.
117

117

00:07:32,410  -->  00:07:38,110
Since we're gonna check how it works with
discrete variables we can do sns lmplot.
118

118

00:07:40,900  -->  00:07:43,470
And now I'm gonna plot the size.
119

119

00:07:43,470  -->  00:07:45,320
So I'm gonna plot tip
percentage versus the size.
120

120

00:07:45,320  -->  00:07:48,259
So I'll have my x be size.
121

121

00:07:50,569  -->  00:07:53,596
And then my y be tip percentage.
122

122

00:07:53,596  -->  00:07:55,181
Tip p e c t.
123

123

00:07:55,181  -->  00:07:58,730
And then again the data frame we're
grabbing this information from
124

124

00:07:58,730  -->  00:07:59,530
is called Tips.
125

125

00:07:59,530  -->  00:08:01,090
So let's go ahead and see that.
126

126

00:08:03,680  -->  00:08:04,520
And so there you go.
127

127

00:08:04,520  -->  00:08:07,310
So now you have discreet variables.
128

128

00:08:07,310  -->  00:08:10,550
And they then plot it using lmplot.
129

129

00:08:10,550  -->  00:08:11,950
So here's the size of the party.
130

130

00:08:13,130  -->  00:08:15,980
And then the tip percentage
they left behind.
131

131

00:08:17,370  -->  00:08:21,570
If we want to make this a little easier
to read we can add a Jitter to it.
132

132

00:08:22,620  -->  00:08:27,542
If you're unfamiliar Jitter, you can go
ahead and check out the Wikipedia link for
133

133

00:08:27,542  -->  00:08:28,113
Jitter.
134

134

00:08:31,493  -->  00:08:34,230
So, I'll leave it there for you guys.
135

135

00:08:34,230  -->  00:08:37,920
If you're already familiar with Jitter, or
after you've read that link and come back.
136

136

00:08:40,990  -->  00:08:45,200
And, the way to add Jitter
is to again we'll run size,
137

137

00:08:48,330  -->  00:08:53,760
tip Tips and then we can set the x jitter
138

138

00:08:54,910  -->  00:08:59,580
for jitter related to the x axis, will
just equal to .1, just get a light jitter.
139

139

00:08:59,580  -->  00:09:02,370
So it should spread out our
data a little bit more.
140

140

00:09:02,370  -->  00:09:03,170
There you go.
141

141

00:09:03,170  -->  00:09:05,120
Just makes it a little easier to read.
142

142

00:09:05,120  -->  00:09:07,890
So not as many points
overlap with each other.
143

143

00:09:07,890  -->  00:09:08,390
All right great.
144

144

00:09:09,810  -->  00:09:13,270
So we can also estimate
tendency of each bin.
145

145

00:09:13,270  -->  00:09:19,340
So each bin is the size of the party
in this case, so if I want to do that,
146

146

00:09:19,340  -->  00:09:24,260
I could say sns lmplot, again size for
147

147

00:09:24,260  -->  00:09:29,410
the x axis, tip underscore p ect for the y
148

148

00:09:29,410  -->  00:09:34,716
axis data frame I'm gonna use is tips and
149

149

00:09:34,716  -->  00:09:39,398
now I'm gonna say x
150

150

00:09:39,398  -->  00:09:45,441
estimator equal to np or numpie.
151

151

00:09:45,441  -->  00:09:47,122
.mean.
152

152

00:09:51,864  -->  00:09:57,155
All right, and so now this shows
the estimate for the tendency of each bin.
153

153

00:09:58,695  -->  00:10:00,950
Depending on what tip percentage.
154

154

00:10:00,950  -->  00:10:03,770
For the size of the party to leave behind.
155

155

00:10:03,770  -->  00:10:05,450
So it looks like there's
a little more variance for
156

156

00:10:05,450  -->  00:10:10,200
party sizes of one than of two through
four, which is a bit interesting.
157

157

00:10:12,200  -->  00:10:16,390
Another thing we can do with
lmplot is we can use the hue facet
158

158

00:10:16,390  -->  00:10:20,810
to automatically define
subsets along the column, so
159

159

00:10:20,810  -->  00:10:23,850
I'll show you of an example
of what I mean by that.
160

160

00:10:23,850  -->  00:10:28,850
I'm gonna say sns.lmplot and in this
161

161

00:10:28,850  -->  00:10:33,640
case I'll have the total
bill be the X axis.
162

162

00:10:34,990  -->  00:10:37,930
The tip percentage can be the Y axis.
163

163

00:10:39,020  -->  00:10:40,950
Again, I'm grabbing it
from the tips data frame.
164

164

00:10:43,360  -->  00:10:45,220
And now, I'm gonna pass the hue argument.
165

165

00:10:45,220  -->  00:10:46,310
H, u, e.
166

166

00:10:46,310  -->  00:10:51,770
And I'm gonna set the hue
equal to the sex column.
167

167

00:10:51,770  -->  00:10:53,430
So, whether they were male or female.
168

168

00:10:53,430  -->  00:10:58,070
And then I'm gonna add a markers.
169

169

00:10:58,070  -->  00:10:59,590
Argumental, as well.
170

170

00:10:59,590  -->  00:11:02,270
And I'm gonna pass a list for markers.
171

171

00:11:02,270  -->  00:11:05,740
So in this case,
I'm gonna use x markers, for the female.
172

172

00:11:07,310  -->  00:11:08,770
And o markers for the male.
173

173

00:11:10,270  -->  00:11:13,310
And using the hue argument...
174

174

00:11:13,310  -->  00:11:15,950
We're going to automatically
create hues for the sex column.
175

175

00:11:17,430  -->  00:11:19,320
So, let's go ahead and
see what happens when I do that.
176

176

00:11:21,410  -->  00:11:22,320
Okay.
177

177

00:11:22,320  -->  00:11:27,680
So, now I basically have two regression
plots right on top of each other.
178

178

00:11:27,680  -->  00:11:31,090
The green is the male, and
the blue x's are the female.
179

179

00:11:31,090  -->  00:11:35,390
So, I got both scatter plots and
then both linear regression plots.
180

180

00:11:35,390  -->  00:11:40,020
So this could be a really interesting
case study in who tips more,
181

181

00:11:40,020  -->  00:11:44,040
females or males and what's
the tendency for the tipping amount.
182

182

00:11:44,040  -->  00:11:46,200
All right.
183

183

00:11:46,200  -->  00:11:51,130
So what if we wanted to know does the day
makes a difference in how much the tip is.
184

184

00:11:53,960  -->  00:11:54,970
So we can do that as well.
185

185

00:11:56,680  -->  00:12:01,410
I can ask for the regression plot.
186

186

00:12:01,410  -->  00:12:06,490
Let's go ahead and
set X to the total bill.
187

187

00:12:09,590  -->  00:12:11,530
Set y equal to the tip percentage.
188

188

00:12:14,130  -->  00:12:16,300
Take it from the tips data frame.
189

189

00:12:16,300  -->  00:12:19,200
And in this case I'll use hue again.
190

190

00:12:19,200  -->  00:12:23,400
H, u, e, and
now I'm gonna set it to the day and
191

191

00:12:23,400  -->  00:12:25,160
I'm not gonna pass the markers argument.
192

192

00:12:25,160  -->  00:12:27,290
I'll have them all be the default.
193

193

00:12:27,290  -->  00:12:29,770
Same scatter and marker.
194

194

00:12:29,770  -->  00:12:31,900
Right.
So let's go ahead and pass hue for day,
195

195

00:12:33,530  -->  00:12:39,760
and now we can see whether
the tip percentage changed
196

196

00:12:39,760  -->  00:12:45,830
on the total bill versus
the subsets of the column for day.
197

197

00:12:45,830  -->  00:12:49,590
So how much did people pay
percentage tips on Friday?
198

198

00:12:49,590  -->  00:12:54,270
What was the relationship between
Saturday and Sunday versus just Thursday?
199

199

00:12:54,270  -->  00:12:56,950
So you can get a lot of
interesting information off
200

200

00:12:56,950  -->  00:12:58,830
these multiple linear regression plots.
201

201

00:13:00,040  -->  00:13:01,230
All right.
202

202

00:13:01,230  -->  00:13:03,510
And then finally, it should be noted.
203

203

00:13:03,510  -->  00:13:11,160
that seaborn also supports what you can
call local regression model fitting.
204

204

00:13:11,160  -->  00:13:20,875
So this is definitely a more specific
statistical analysis technique.
205

205

00:13:20,875  -->  00:13:25,385
We won't be using it in
any of the projects but
206

206

00:13:25,385  -->  00:13:30,160
in case you're familiar with statistics
you should now that seaborn can do this.
207

207

00:13:31,880  -->  00:13:38,630
Sometimes it's called loess or l, o,
e, s, s, so you can look that up too.
208

208

00:13:42,330  -->  00:13:46,505
So let's go ahead and
see what local regression can do for us.
209

209

00:13:46,505  -->  00:13:54,035
So we can say total_bill tip
percentage as the Y axis.
210

210

00:13:55,575  -->  00:13:59,215
Tips as a data frame we
are going to graph from.
211

211

00:13:59,215  -->  00:14:02,210
And so we'll set lowest.
212

212

00:14:02,210  -->  00:14:05,980
The local regression, =true.
213

213

00:14:05,980  -->  00:14:08,540
And now, I'm gonna edit my line.
214

214

00:14:08,540  -->  00:14:12,440
And if I wanna edit my line I
can do that by saying line_kws,
215

215

00:14:12,440  -->  00:14:15,400
as we done in the past.
216

216

00:14:15,400  -->  00:14:21,060
And like we done in the past as well,
set a dictionary, so I'll set the color.
217

217

00:14:21,060  -->  00:14:21,560
Key.
218

218

00:14:23,250  -->  00:14:27,510
Set that to have a value of black, so
it shows up against the scatter plot.
219

219

00:14:30,680  -->  00:14:34,620
Okay, and
that's what your lowest line looks like.
220

220

00:14:34,620  -->  00:14:37,630
Again, this is a pretty
specific statistical thing,
221

221

00:14:37,630  -->  00:14:41,850
so don't worry too much if you don't
quite understand what just happened.
222

222

00:14:43,180  -->  00:14:47,570
It's really more of a specific task
that you may want to do in the future.
223

223

00:14:47,570  -->  00:14:48,070
Okay.
224

224

00:14:50,990  -->  00:14:53,765
Now, let's zoom out a bit.
225

225

00:14:53,765  -->  00:14:58,397
lmplot is actually using
a lower level Function
226

226

00:14:58,397  -->  00:15:02,220
called regplot depending
on how you want to say it.
227

227

00:15:02,220  -->  00:15:05,500
R, e, g plots is just for
regression plots.
228

228

00:15:05,500  -->  00:15:08,410
So let's go look at that
lower level function.
229

229

00:15:08,410  -->  00:15:12,060
So sns.regplot, for regression plot.
230

230

00:15:13,380  -->  00:15:21,380
And then I can insert total bill,
the tip percentage, and tips.
231

231

00:15:25,210  -->  00:15:32,390
And so r, e, g plot is the lower level
function that lmplot was built on top of.
232

232

00:15:32,390  -->  00:15:39,080
So this is the moral bust,
if you will, plotting function.
233

233

00:15:39,080  -->  00:15:41,540
So here we have tip percentage
versus the total bill.
234

234

00:15:43,060  -->  00:15:47,870
And regression plots,
they can be added to existing access
235

235

00:15:47,870  -->  00:15:51,440
of a subplots without modifying
anything else in the figure.
236

236

00:15:51,440  -->  00:15:55,600
So, if you had a figure of two subplots,
you could use this r, e, g plot.
237

237

00:15:55,600  -->  00:16:01,380
The regression plot along with
other plots so like a violin plot.
238

238

00:16:01,380  -->  00:16:03,220
So to show you what I'm talking
about let's go ahead and
239

239

00:16:03,220  -->  00:16:04,700
create a figure of two sub plots.
240

240

00:16:07,610  -->  00:16:15,730
So I'll say Fig and
then two axises we'll say axis1 and axis2.
241

241

00:16:15,730  -->  00:16:21,160
So I'll set these equal to plt.
242

242

00:16:21,160  -->  00:16:23,930
Sub plots,
that's how we can create sub plots, oops.
243

243

00:16:25,240  -->  00:16:26,190
That should be a dot, okay.
244

244

00:16:27,600  -->  00:16:32,600
Call the subplots method on a plot,
and then say
245

245

00:16:32,600  -->  00:16:37,330
what you want the plots to look like, so
the number of rows, the number of columns.
246

246

00:16:37,330  -->  00:16:43,620
So I'm gonna say one row,
two columns, so one by two plots.
247

247

00:16:43,620  -->  00:16:52,270
And then I'll say sharey=True so
they align better.
248

248

00:16:52,270  -->  00:16:56,500
And then I will call
the regression plot function
249

249

00:16:58,380  -->  00:17:04,570
with the total bill on the x,
the tip, _pect.
250

250

00:17:04,570  -->  00:17:10,280
On the y, we're gonna grab
that information from tips and
251

251

00:17:10,280  -->  00:17:16,330
I will set axis equal to axis1 for
the sub plot.
252

252

00:17:18,080  -->  00:17:23,650
And then I can also make a violin plot for
one of the sub plots.
253

253

00:17:24,880  -->  00:17:26,880
And I will have the violin plot be.
254

254

00:17:28,620  -->  00:17:30,920
Let's have it be the tips.
255

255

00:17:30,920  -->  00:17:31,998
The tip percentage column.
256

256

00:17:36,040  -->  00:17:39,050
And we'll have it be
the size of the party.
257

257

00:17:39,050  -->  00:17:41,710
Tips, size.
258

258

00:17:45,142  -->  00:17:47,500
All right, and then let's choose
the color scheme for this.
259

259

00:17:47,500  -->  00:17:50,340
Let's say color equals and
260

260

00:17:50,340  -->  00:17:55,215
for color schemes if we want it
to be reds we can pass this,
261

261

00:17:55,215  -->  00:18:00,300
reds_r since there's going to
be multiple violins, and in this
262

262

00:18:00,300  -->  00:18:04,100
case we'll set the axis equal to axis two
cuz it's gonna be the second plot over.
263

263

00:18:04,100  -->  00:18:04,910
Right.
264

264

00:18:04,910  -->  00:18:07,260
So let's go ahead and
see what these subplots look like.
265

265

00:18:08,690  -->  00:18:09,330
Oops.
And
266

266

00:18:09,330  -->  00:18:13,560
looks like I,
there should be no underscore there.
267

267

00:18:13,560  -->  00:18:14,340
My apologies.
268

268

00:18:17,540  -->  00:18:18,632
There we go.
269

269

00:18:18,632  -->  00:18:25,850
All right so using REG plot you're
able to use it in a subplot figure.
270

270

00:18:25,850  -->  00:18:27,540
So here's a figure of 2 subplots.
271

271

00:18:28,590  -->  00:18:31,970
One regression plot and one violin plot.
272

272

00:18:31,970  -->  00:18:32,790
All right.
273

273

00:18:32,790  -->  00:18:33,770
And that's it.
274

274

00:18:33,770  -->  00:18:37,700
Next up, we're gonna learn about
heat maps and clustered matrices.
275

275

00:18:37,700  -->  00:18:38,260
I'll see you there.
