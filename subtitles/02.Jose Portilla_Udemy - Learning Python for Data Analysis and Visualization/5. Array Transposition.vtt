WEBVTT
1
1

00:00:02.180  -->  00:00:06.490
Hey, guys this is Lecture 10,
Array Transposition.
2

2

00:00:06.490  -->  00:00:09.860
So, in this lecture, we'll be learning
how to transpose arrays in NumPy.
3

3

00:00:12.060  -->  00:00:16.834
So, let's go ahead and start off,
importing numpy as np.
4

4

00:00:16.834  -->  00:00:19.150
Alt-Enter to get a new cell.
5

5

00:00:21.520  -->  00:00:26.220
Let's create an array, and
we'll use arrange to do this.
6

6

00:00:26.220  -->  00:00:33.640
So that's gonna give us 50
points from zero to 49.
7

7

00:00:33.640  -->  00:00:41.430
And then let's reshape it into a 10 by
5 matrix and then we'll just show it.
8

8

00:00:43.660  -->  00:00:47.180
Cool, so I have 0 to 49, in a 10 by 5.
9

9

00:00:47.180  -->  00:00:51.040
Since the index starts at zero, that's
why it doesn't go all the way to 50.
10

10

00:00:51.040  -->  00:00:52.865
But we have 50 points, 10 times 5.
11

11

00:00:54.080  -->  00:00:56.590
So to transpose this matrix,
it's actually pretty easy in numpy.
12

12

00:00:56.590  -->  00:01:00.710
All we gotta do is select our matrix and
call .t onto it,
13

13

00:01:00.710  -->  00:01:04.360
and then you see it's been transposed.
14

14

00:01:04.360  -->  00:01:10.918
So the first row of our previous array has
never been transposed as our first column.
15

15

00:01:10.918  -->  00:01:11.726
Cool.
16

16

00:01:11.726  -->  00:01:18.000
And, numpy also allows you to
take dot products of arrays.
17

17

00:01:19.350  -->  00:01:23.060
So, you can do that by calling np.dot.
18

18

00:01:23.060  -->  00:01:29.820
And so we can do the dot product of the
transposed array with our original array.
19

19

00:01:31.330  -->  00:01:33.419
And here we have the dot
product of those two arrays.
20

20

00:01:35.980  -->  00:01:38.030
And we can also make 3D matrices.
21

21

00:01:38.030  -->  00:01:42.530
Even though we won't be using
it that much in this course,
22

22

00:01:42.530  -->  00:01:45.040
we can go ahead and just see how it works.
23

23

00:01:45.040  -->  00:01:47.810
So we'll make a 3D matrix.
24

24

00:01:47.810  -->  00:01:53.902
Again, let's call our range 50 points,
25

25

00:01:53.902  -->  00:02:02.640
and we'll reshape it as a five
deep matrix with 5 by 2 arrays.
26

26

00:02:02.640  -->  00:02:06.200
So, let's see what that
actually looks like.
27

27

00:02:08.580  -->  00:02:14.040
So here we have basically the five
slices of that 3D matrix,
28

28

00:02:14.040  -->  00:02:17.650
and each slice consists
of a five by two array.
29

29

00:02:19.100  -->  00:02:23.600
And if you want,
you can also transpose a 3D matrix.
30

30

00:02:23.600  -->  00:02:27.830
In order to do that we can
call transpose on that matrix.
31

31

00:02:29.510  -->  00:02:33.170
And we'll have to specify
which axis to use.
32

32

00:02:34.630  -->  00:02:41.279
So for instance, if we transpose this way,
we'll get on that first slice
33

33

00:02:42.920  -->  00:02:47.350
the first column will be all the zero,
zero of every individual slice.
34

34

00:02:47.350  -->  00:02:52.500
So if we look back at the original 3D
array matrix, we had a zero, a ten,
35

35

00:02:52.500  -->  00:02:59.380
a 20, a 30, a 40 as the first row,
and first column indexed value.
36

36

00:02:59.380  -->  00:03:02.690
And now that's become the first
column of that first slice.
37

37

00:03:02.690  -->  00:03:06.750
And you can see how that
same transposition carries
38

38

00:03:06.750  -->  00:03:12.180
out to the rest of the array.
39

39

00:03:12.180  -->  00:03:17.438
And last but not least if we want
to get really specific on swapping
40

40

00:03:17.438  -->  00:03:22.790
axis in an array,
we can actually call swap axis onto it.
41

41

00:03:22.790  -->  00:03:27.280
To show you what I'm talking about lets go
ahead and make another array real quick.
42

42

00:03:28.670  -->  00:03:31.160
We'll just call this one let's see.
43

43

00:03:31.160  -->  00:03:34.265
We'll have it be one, two, and three.
44

44

00:03:36.347  -->  00:03:37.302
And we'll show it.
45

45

00:03:39.476  -->  00:03:40.756
All right, so we have our array there.
46

46

00:03:42.920  -->  00:03:46.920
And let's say you wanted to be
specific on how to swap axes,
47

47

00:03:46.920  -->  00:03:49.560
you can actually call swapaxes.
48

48

00:03:49.560  -->  00:03:53.689
So we can swap the zero axis with the one
axis, and let's see what happens.
49

49

00:03:55.050  -->  00:03:58.808
Now you have a vertical array.
50

50

00:03:58.808  -->  00:04:01.588
Cool.
51

51

00:04:01.588  -->  00:04:04.980
And that's about it as far
as a array transposition.
52

52

00:04:04.980  -->  00:04:06.140
I'll see you in the next lesson.
