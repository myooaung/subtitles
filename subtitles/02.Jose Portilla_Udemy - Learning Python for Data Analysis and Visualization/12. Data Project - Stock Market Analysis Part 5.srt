1
1

00:00:02,620  -->  00:00:03,990
Okay, hello everyone, and
2

2

00:00:03,990  -->  00:00:08,770
welcome to part five of the stock
market data analysis project.
3

3

00:00:08,770  -->  00:00:11,020
So in the last video,
we went over quickly,
4

4

00:00:11,020  -->  00:00:16,320
just a basic way of analyzing risk
by comparing your standard deviation
5

5

00:00:16,320  -->  00:00:21,040
of daily returns versus your expected
return or your average daily return.
6

6

00:00:21,040  -->  00:00:23,820
And we created a little scatter
plot to show that visually.
7

7

00:00:25,230  -->  00:00:27,750
And now we're gonna take
a look at value at risk.
8

8

00:00:27,750  -->  00:00:29,850
So right now I'm just using NV viewer,
9

9

00:00:29,850  -->  00:00:32,940
to take a look at the iPython notebook
that I already made for you guys.
10

10

00:00:35,210  -->  00:00:38,810
So we're gonna look at a couple of
definitions and different methods, and
11

11

00:00:38,810  -->  00:00:42,750
then analyze the risk of
our technology stocks.
12

12

00:00:42,750  -->  00:00:48,600
So value at risk, we can basically treat
this parameter as the amount of money
13

13

00:00:48,600  -->  00:00:54,600
we would expect to lose, or we're putting
at risk, for a given confidence interval.
14

14

00:00:54,600  -->  00:00:59,570
There are several methods we can use for
estimating a value at risk.
15

15

00:00:59,570  -->  00:01:03,350
And we're gonna go ahead and
see two of them in action.
16

16

00:01:03,350  -->  00:01:09,440
So we're gonna use the bootstrap
method to calculate value at risk.
17

17

00:01:09,440  -->  00:01:10,340
And for this method,
18

18

00:01:10,340  -->  00:01:14,100
we calculate the empirical quantiles
from a histogram of daily returns.
19

19

00:01:15,490  -->  00:01:18,040
So for more information on quantiles,
you can go ahead and
20

20

00:01:18,040  -->  00:01:20,940
check out the Wikipedia link I left for
you here.
21

21

00:01:20,940  -->  00:01:26,648
It'll take you here and you can learn
about quantiles, and percentiles.
22

22

00:01:26,648  -->  00:01:27,867
Cool.
23

23

00:01:27,867  -->  00:01:32,670
So and there's a couple of these examples
for you to go ahead and check out.
24

24

00:01:32,670  -->  00:01:36,640
Basically it's going to help us
find our confidence interval.
25

25

00:01:36,640  -->  00:01:41,470
So let's go ahead and repeat the daily
returns histogram for Apple stock.
26

26

00:01:41,470  -->  00:01:44,220
So I'm gonna go ahead and
jump back to our live coding.
27

27

00:01:45,380  -->  00:01:48,096
And you can go ahead and
follow along here.
28

28

00:01:48,096  -->  00:01:52,458
So sns.distplot.
29

29

00:01:52,458  -->  00:01:56,240
And we actually already did
this in an earlier video.
30

30

00:01:57,770  -->  00:02:01,820
Remember we just plotted out,
the daily returns.
31

31

00:02:03,190  -->  00:02:06,350
Remember to drop any null values
that could possibly be there.
32

32

00:02:07,510  -->  00:02:10,610
I set the bins=100, that's a whole
year's worth of information.
33

33

00:02:11,720  -->  00:02:14,240
And I set the color to purple.
34

34

00:02:14,240  -->  00:02:16,073
So we've already done this,
we're just repeating it.
35

35

00:02:17,919  -->  00:02:20,920
And I have a large amount
of empty space in the cell.
36

36

00:02:20,920  -->  00:02:23,450
We're gonna get rid of it.
37

37

00:02:23,450  -->  00:02:25,390
Okay, so we've seen this before.
38

38

00:02:25,390  -->  00:02:28,010
There's our histogram
with the daily returns.
39

39

00:02:28,010  -->  00:02:30,070
And now we can use Quantrill,
40

40

00:02:30,070  -->  00:02:33,310
which is actually built into Panda's
to get the risk value of the stock.
41

41

00:02:34,640  -->  00:02:37,860
So I can just say, rets.
42

42

00:02:37,860  -->  00:02:40,590
Remember that was the returns
data frame we made.
43

43

00:02:41,710  -->  00:02:44,210
I'll show you a preview of it.
44

44

00:02:44,210  -->  00:02:48,570
So remember this is the daily returns for
your stocks, every day.
45

45

00:02:49,780  -->  00:02:51,513
So if I say.
46

46

00:02:53,579  -->  00:02:58,386
APL, or the Apple stock, and
47

47

00:02:58,386  -->  00:03:04,934
call quantile 0.05, and run this.
48

48

00:03:04,934  -->  00:03:08,730
That means,
well you get this number showing up.
49

49

00:03:08,730  -->  00:03:14,420
So what this actually means is that
the 0.05 empirical quantile of
50

50

00:03:14,420  -->  00:03:20,078
daily returns is at negative 0.019.
51

51

00:03:20,078  -->  00:03:23,828
And so this means with 95% confidence.
52

52

00:03:23,828  -->  00:03:28,870
So 95% of the times for
simulations you would do this your
53

53

00:03:28,870  -->  00:03:34,810
worst daily loss would not exceed 1.9% or
100 times this.
54

54

00:03:35,870  -->  00:03:40,815
So if you have a $1 million
investment your one day
55

55

00:03:40,815  -->  00:03:44,490
5% variance at worst would be 19,000.
56

56

00:03:44,490  -->  00:03:47,650
So to show you what I mean by that,
let's hop over here.
57

57

00:03:47,650  -->  00:03:48,695
Actually, I have this written out.
58

58

00:03:48,695  -->  00:03:54,980
So, you have your 0.05 empirical quantile
that we just got for the Apple stock.
59

59

00:03:56,120  -->  00:03:59,610
And what this means is that
within 95% confidence,
60

60

00:03:59,610  -->  00:04:04,490
you're only gonna lose 1.9% of
your money on any given day.
61

61

00:04:04,490  -->  00:04:06,960
So that's your value at risk.
62

62

00:04:06,960  -->  00:04:12,675
So your value at risk is
1.9% of your investment.
63

63

00:04:12,675  -->  00:04:18,545
So everyday at worst you'll
lose 1.9% 95% of the times.
64

64

00:04:18,545  -->  00:04:19,903
Okay.
65

65

00:04:19,903  -->  00:04:21,910
So hopefully that made sense.
66

66

00:04:21,910  -->  00:04:25,300
If you need a little more review go
ahead and check out Investopedia,
67

67

00:04:26,850  -->  00:04:30,620
the bootstrap method for risk analysis,
and you can go ahead and
68

68

00:04:30,620  -->  00:04:32,880
check out that Wikipedia link for
quantiles.
69

69

00:04:33,920  -->  00:04:39,060
But all we're saying here is that 95%
of the time, your worst daily loss
70

70

00:04:39,060  -->  00:04:44,307
will not exceed 1.9% for Apple stock.
71

71

00:04:44,307  -->  00:04:45,160
Okay.
72

72

00:04:45,160  -->  00:04:50,450
So now I'm scrolling down the NB
viewer portfolio iPython notebook.
73

73

00:04:50,450  -->  00:04:53,500
We're gonna look at value at risk
using the Monte Carlo method.
74

74

00:04:55,080  -->  00:04:57,860
So let me go ahead and
walk you through this.
75

75

00:04:59,190  -->  00:05:01,910
What the Monte Carlo method
is gonna allow us to do is
76

76

00:05:01,910  -->  00:05:05,310
we're gonna run many trials
with random marked conditions.
77

77

00:05:05,310  -->  00:05:07,670
Then we'll calculate portfolio losses for
each trial.
78

78

00:05:08,910  -->  00:05:12,260
So, after a lot of these trials or
simulations we're gonna use
79

79

00:05:12,260  -->  00:05:15,670
an aggregation of all these simulations
to establish how risky the stock is.
80

80

00:05:17,820  -->  00:05:22,620
So a brief explanation of what we're gonna
do, and there's actually a link down here
81

81

00:05:22,620  -->  00:05:26,370
at the bottom for
more information on Monte Carlo methods.
82

82

00:05:26,370  -->  00:05:30,690
We can click it, and
it'll take you to this page right here.
83

83

00:05:30,690  -->  00:05:32,090
So I'll explain it and
84

84

00:05:32,090  -->  00:05:35,050
then if you want some even more in depth
information you can check out the link.
85

85

00:05:36,420  -->  00:05:40,930
But basically what we're gonna do is,
whoops, use
86

86

00:05:40,930  -->  00:05:46,940
Geometric Brownian Motion or GBM and this
is technically known as a Markov Process.
87

87

00:05:46,940  -->  00:05:51,868
And this means that the stock price Is
gonna follow what's known as a random wok.
88

88

00:05:51,868  -->  00:05:55,587
And a little bit of jargony terms,
but it's consistent with,
89

89

00:05:55,587  -->  00:05:59,742
at the very least, the weak form of
the Efficient Market Hypothesis.
90

90

00:05:59,742  -->  00:06:01,684
Which is also known as EMH, and
91

91

00:06:01,684  -->  00:06:05,948
it says that the past price information
is already incorporated and
92

92

00:06:05,948  -->  00:06:11,280
the next price movement is conditionally
independent of the past price movements.
93

93

00:06:12,550  -->  00:06:16,350
So what this means is that the past
information of the price of a stock
94

94

00:06:16,350  -->  00:06:19,140
is independent of where the stock's
gonna be in the future.
95

95

00:06:19,140  -->  00:06:22,640
So, this basically means you can't
perfectly predict the future
96

96

00:06:22,640  -->  00:06:26,760
price of a stock solely based on
the previous price of the stock.
97

97

00:06:30,660  -->  00:06:33,480
So looking back, the equation for
98

98

00:06:33,480  -->  00:06:38,400
the geometric brownian motion is
given by this equation right here.
99

99

00:06:38,400  -->  00:06:41,770
Delta s over s equals mu times delta t,
100

100

00:06:41,770  -->  00:06:46,840
plus sigma times epsilon
times square root of delta t.
101

101

00:06:46,840  -->  00:06:52,095
So s stands for your current stock price,
mu is the expected return,
102

102

00:06:52,095  -->  00:06:53,375
which we calculated earlier.
103

103

00:06:53,375  -->  00:06:59,824
Remember, if we scroll up here, we had
our daily returns for the Apple stock.
104

104

00:07:02,320  -->  00:07:04,500
So the expected return,
that's just your mean.
105

105

00:07:04,500  -->  00:07:05,310
Expect a return.
106

106

00:07:05,310  -->  00:07:07,870
Sigma is the standard
deviation of those returns
107

107

00:07:07,870  -->  00:07:09,890
which we can get from that histogram.
108

108

00:07:09,890  -->  00:07:13,290
T is the time and
epsilon is a random variable.
109

109

00:07:13,290  -->  00:07:15,330
And we'll tackle that
subject a little later on.
110

110

00:07:16,570  -->  00:07:20,500
So, if you multiply both sides by
that stock price of the equation,
111

111

00:07:20,500  -->  00:07:24,449
you get a formula here and that will
solve for the change in the stock price.
112

112

00:07:26,490  -->  00:07:30,300
So you can see that the change in
the stock price is equal to the current
113

113

00:07:30,300  -->  00:07:33,820
stock price, s,
multiplied by these two terms.
114

114

00:07:33,820  -->  00:07:36,400
The first term, which is mu times delta t,
115

115

00:07:36,400  -->  00:07:39,740
the average daily return
multiplied by the change in time.
116

116

00:07:39,740  -->  00:07:40,700
That's known as drift.
117

117

00:07:41,710  -->  00:07:43,700
And then the second
term is known as shock,
118

118

00:07:43,700  -->  00:07:48,700
which is sigma times epsilon
times the square root of delta t.
119

119

00:07:48,700  -->  00:07:53,220
So for each time period,
the stock's gonna drift either up or down.
120

120

00:07:53,220  -->  00:07:58,297
And you have that information based
on previous daily return values.
121

121

00:07:58,297  -->  00:08:00,061
And then it's gonna experience a shock,
and
122

122

00:08:00,061  -->  00:08:02,162
this is where the Monte Carlo
method comes into play.
123

123

00:08:02,162  -->  00:08:03,718
The shock is going to be random.
124

124

00:08:03,718  -->  00:08:07,538
And it's gonna either push
the stock price up or down.
125

125

00:08:07,538  -->  00:08:12,210
So, you're gonna do this series of steps,
drift, and then shock up or down, drift,
126

126

00:08:12,210  -->  00:08:14,910
shock up or down, thousands of times.
127

127

00:08:14,910  -->  00:08:17,720
And then you're gonna do a simulation
of where you might expect the stock
128

128

00:08:17,720  -->  00:08:18,220
price to be.
129

129

00:08:19,550  -->  00:08:23,480
So I'm gonna hop over to
the Investopedia page just to show you
130

130

00:08:23,480  -->  00:08:24,740
some nice figures they have here.
131

131

00:08:25,760  -->  00:08:28,040
So here's, again,
the equation explained for
132

132

00:08:28,040  -->  00:08:30,240
you using the geometric Brownian motion.
133

133

00:08:32,560  -->  00:08:35,580
And to show you this,
they have a nice figure here.
134

134

00:08:35,580  -->  00:08:38,790
Like I said before,
we're gonna drift our stock price
135

135

00:08:38,790  -->  00:08:41,650
with mu times delta t based
on the daily return values.
136

136

00:08:41,650  -->  00:08:45,310
And then it's going to experience a shock,
either up or down.
137

137

00:08:45,310  -->  00:08:49,760
And then again, it's gonna drift and
it's gonna experience another shock up or
138

138

00:08:49,760  -->  00:08:53,630
down and that's gonna be your
random walk or random trial.
139

139

00:08:53,630  -->  00:08:58,600
And then here, they generated a series
of random trials over ten days, and
140

140

00:08:58,600  -->  00:09:02,800
you can see here's where
the stocks ended up, all over.
141

141

00:09:02,800  -->  00:09:04,150
So, now if you do a histogram,
142

142

00:09:04,150  -->  00:09:10,800
you can get some sort of risk
analysis based on your end trials.
143

143

00:09:10,800  -->  00:09:12,730
And here they did a histogram at the end.
144

144

00:09:12,730  -->  00:09:14,890
So, we're gonna do all
this in Python right now.
145

145

00:09:14,890  -->  00:09:16,320
So let's go ahead and hop over.
146

146

00:09:18,780  -->  00:09:25,490
Okay, so
what we're gonna do to demonstrate this
147

147

00:09:25,490  -->  00:09:30,080
Monte Carlo method we'll start with just
a few simulations, and then we'll define
148

148

00:09:30,080  -->  00:09:35,420
the variables we'll be using in the Google
data frame, using the Google data frame.
149

149

00:09:35,420  -->  00:09:37,670
So let's go ahead and
set up our time horizon.
150

150

00:09:37,670  -->  00:09:41,934
So I'm gonna set an object
days = 365 days, so a year.
151

151

00:09:41,934  -->  00:09:50,090
I'll set my dt = 1/days, I'll set my Mu,
152

152

00:09:50,090  -->  00:09:59,210
or my average, Mu = rets.mean() [Goog,
of the Google column.
153

153

00:10:00,230  -->  00:10:06,330
GOOG, so that's the average of this
column right here, of that Google column.
154

154

00:10:08,350  -->  00:10:14,800
So mu is gonna be associated for
our drift and let's go ahead
155

155

00:10:17,020  -->  00:10:21,439
and then grab our sigma,
basically the volatility of the stock.
156

156

00:10:24,480  -->  00:10:29,250
And that's gonna be equal to the standard
deviation of the daily returns
157

157

00:10:30,760  -->  00:10:33,360
that we can get using Pandas as well.
158

158

00:10:34,960  -->  00:10:35,930
Whoops.
159

159

00:10:35,930  -->  00:10:36,860
Sorry about that.
160

160

00:10:36,860  -->  00:10:41,360
Okay, so, now we have our days,
our DT, our mu, and
161

161

00:10:41,360  -->  00:10:44,710
our sigma, and let's go ahead and
make a function.
162

162

00:10:44,710  -->  00:10:48,700
That takes in the starting price and
number of days.
163

163

00:10:48,700  -->  00:10:54,580
And uses the sigma and mu we already
calculated from our daily returns.
164

164

00:10:54,580  -->  00:10:57,970
Okay, so
I'm gonna create a function def and
165

165

00:10:57,970  -->  00:11:02,275
I wanna call this function
stock_monte_carlo.
166

166

00:11:02,275  -->  00:11:06,575
And it's gonna take in a start price,
167

167

00:11:08,955  -->  00:11:13,840
the number of days you want to run it,
your average return and
168

168

00:11:13,840  -->  00:11:16,050
then your standard deviation
on your daily return.
169

169

00:11:18,790  -->  00:11:20,060
Okay.
170

170

00:11:20,060  -->  00:11:25,190
So to start off here, let's go ahead and
define a price array.
171

171

00:11:25,190  -->  00:11:33,630
So on create price is
equal to mp.zeros and
172

172

00:11:33,630  -->  00:11:38,770
we're going to have it be an array of
zeros with the same length as dates.
173

173

00:11:41,880  -->  00:11:48,274
And then that first term is
going to be the starting price.
174

174

00:11:54,049  -->  00:12:01,835
And then I'm gonna have the shock
be equal to again another array.
175

175

00:12:01,835  -->  00:12:07,964
And if remember you can always go back
to the NumPy tutorials in the beginning
176

176

00:12:07,964  -->  00:12:13,353
lectures if you're a little hazy
on this or just want a refresher.
177

177

00:12:16,534  -->  00:12:19,310
And, don't worry, I'll break down
the whole function at the end.
178

178

00:12:20,990  -->  00:12:24,938
So we have our shock and drift arrays now
so we're gonna run the price array for
179

179

00:12:24,938  -->  00:12:25,857
a number of days.
180

180

00:12:25,857  -->  00:12:28,480
So I'm gonna say for x in x range.
181

181

00:12:28,480  -->  00:12:31,050
Remember if you're using
182

182

00:12:31,050  -->  00:12:33,930
python three you don't need to write
x range you can just write range.
183

183

00:12:35,660  -->  00:12:39,540
And I'll say one days.
184

184

00:12:39,540  -->  00:12:42,240
So from one to days in that range.
185

185

00:12:42,240  -->  00:12:47,302
We're gonna calculate the shock first,
186

186

00:12:47,302  -->  00:12:51,791
so my shock of x at that point in time.
187

187

00:12:51,791  -->  00:12:56,393
I'm going to grab it from
a normal distribution,
188

188

00:12:56,393  -->  00:12:59,708
with its censor around mu times dt.
189

189

00:12:59,708  -->  00:13:08,170
And its scale is going
to be equal to sigma
190

190

00:13:09,380  -->  00:13:16,290
times np dot the square root dt,
which we got from our equation.
191

191

00:13:18,200  -->  00:13:23,010
If you are a little confused about
the np.random.normal, you can go ahead and
192

192

00:13:23,010  -->  00:13:25,940
check out in appendix B,
D, Normal Distribution.
193

193

00:13:25,940  -->  00:13:30,210
Statistics videos, and
that will clear up any confusion there.
194

194

00:13:30,210  -->  00:13:32,210
But again I'm going to break down
this whole function a little bit.
195

195

00:13:33,270  -->  00:13:36,090
Our drift term is just
equal to mu times dt, and
196

196

00:13:39,590  -->  00:13:45,350
then finally our price at that
particular moment in time at x
197

197

00:13:45,350  -->  00:13:49,620
is going to be equal to price x minus 1 so
198

198

00:13:49,620  -->  00:13:55,170
the previous price plus
that delta s value.
199

199

00:13:55,170  -->  00:14:01,983
So we can say price [x
minus 1] times the drift,
200

200

00:14:01,983  -->  00:14:09,461
the current drift value plus
the current shock value.
201

201

00:14:14,430  -->  00:14:16,770
And, close parenthesis here.
202

202

00:14:16,770  -->  00:14:21,090
And then,
we'll just return that price array.
203

203

00:14:21,090  -->  00:14:24,610
So, let me go ahead and
break down what we just did here.
204

204

00:14:26,730  -->  00:14:30,990
Okay, so
we have our stock Monte Carlo function.
205

205

00:14:30,990  -->  00:14:35,480
It takes in a start price, the number of
days you wanna run it for, your mu, or
206

206

00:14:35,480  -->  00:14:39,950
your average daily returns, and
your standard deviation on those returns.
207

207

00:14:39,950  -->  00:14:45,280
We created three arrays, price,
shock and drift that were
208

208

00:14:45,280  -->  00:14:48,900
arrays full of zeros of with the length
for the number of days you wanna run it.
209

209

00:14:48,900  -->  00:14:53,090
And then we set the first term of
that price to the starting price,
210

210

00:14:53,090  -->  00:14:54,750
so we have somewhere to start.
211

211

00:14:55,840  -->  00:15:02,590
And then for every day we go
along we calculate a shock term.
212

212

00:15:02,590  -->  00:15:07,200
Which is just grabbed from a random
distribution with yours scale
213

213

00:15:07,200  -->  00:15:12,020
being equal to sigma times
np do square root of dt.
214

214

00:15:12,020  -->  00:15:14,310
Which is this term right here.
215

215

00:15:15,390  -->  00:15:19,770
That's sigma times epsilon
times square root of delta t.
216

216

00:15:19,770  -->  00:15:25,130
So instead of just inputting an epsilon,
I'm kind of setting epsilon equal to
217

217

00:15:25,130  -->  00:15:28,550
a normal distribution defined by sigma
times the square root of delta t.
218

218

00:15:30,400  -->  00:15:34,550
There's various ways to choose your random
epsilon value, but in this case I'm just
219

219

00:15:34,550  -->  00:15:40,860
using a random normal distribution based
off the information for that stock.
220

220

00:15:42,030  -->  00:15:45,350
Then our drift term,
if we hop back over here.
221

221

00:15:45,350  -->  00:15:48,652
Remember our drift term
was just mu times delta t.
222

222

00:15:48,652  -->  00:15:53,927
And there's our mu times delta t, and
so then your current price It's gonna
223

223

00:15:53,927  -->  00:15:59,617
be equal to your previous price plus your
previous price times that drift plus that
224

224

00:15:59,617  -->  00:16:05,076
shock value and then at the end of the
function, just return your price array.
225

225

00:16:05,076  -->  00:16:05,611
Great.
226

226

00:16:05,611  -->  00:16:11,379
Just go ahead and click shift enter,
so we create that function and
227

227

00:16:11,379  -->  00:16:15,200
now we're gonna put that function to work.
228

228

00:16:15,200  -->  00:16:22,566
So let's go ahead and
look at the starting price, so GOOG.head.
229

229

00:16:22,566  -->  00:16:26,985
Remember, we created this
at the very beginning.
230

230

00:16:26,985  -->  00:16:33,313
So now,
I see that my opening price was $540.74.
231

231

00:16:33,313  -->  00:16:40,484
So I'll say, start_price
232

232

00:16:40,484  -->  00:16:45,270
= 540.74.
233

233

00:16:45,270  -->  00:16:49,699
And now, I'm gonna run this
Monte Carlo simulation 100 times.
234

234

00:16:49,699  -->  00:16:57,440
I'll say, four run in xrange (100),
so 100 times.
235

235

00:16:57,440  -->  00:17:01,709
Remember, if you're using Python three,
you don't need to type in xrange,
236

236

00:17:01,709  -->  00:17:04,180
just type in range and
I'm gonna plot it out.
237

237

00:17:05,510  -->  00:17:10,470
I'm gonna plot out the array
given back from my
238

238

00:17:10,470  -->  00:17:17,593
stock_monte_carlo function and
then we pass in the arguments,
239

239

00:17:17,593  -->  00:17:21,933
(start_price, days mu and sigma).
240

240

00:17:21,933  -->  00:17:25,367
Remember, if we scroll back up, we
already defined those here in this cell.
241

241

00:17:25,367  -->  00:17:30,192
365 days, our dt, that mu and
that sigma for that Google stock.
242

242

00:17:33,107  -->  00:17:40,283
And so we're going to run our stock Monte
Carlo function with those variables and
243

243

00:17:40,283  -->  00:17:46,314
then we're gonna plot it out and
we're gonna do that 100 times.
244

244

00:17:46,314  -->  00:17:50,357
And then before we see it, I'm just
gonna put some labels on that plot.
245

245

00:17:50,357  -->  00:17:53,762
So xlabel,
246

246

00:17:53,762  -->  00:17:58,189
x will be days.
247

247

00:17:58,189  -->  00:18:03,689
The ylabel, plt.ylabel
248

248

00:18:03,689  -->  00:18:07,939
will be the price and
249

249

00:18:07,939  -->  00:18:14,189
then plt.title is going to be
250

250

00:18:14,189  -->  00:18:22,194
the Monte Carlo Analysis for Google.
251

251

00:18:22,194  -->  00:18:25,140
So let's go ahead and
run that and there you have it.
252

252

00:18:25,140  -->  00:18:29,887
So we just simulated a years
worth of random trials using
253

253

00:18:29,887  -->  00:18:33,624
Monte Carlo method for
that Google style and
254

254

00:18:33,624  -->  00:18:39,078
you can see now we have,
it's kind of crazy distribution here,
255

255

00:18:39,078  -->  00:18:43,436
but let's go ahead and
try to make some sense of it.
256

256

00:18:43,436  -->  00:18:48,648
So what we're gonna do is create
a histogram of these end results.
257

257

00:18:48,648  -->  00:18:53,626
Now I'm gonna do a much larger run, so
258

258

00:18:53,626  -->  00:18:58,613
I'm gonna set runs = 10,000.
259

259

00:18:58,613  -->  00:19:03,805
Now if you're thinking, hey, now I can
compete with the big guys on Wall Street,
260

260

00:19:03,805  -->  00:19:07,642
they do this for hundreds of
thousands to millions of runs and
261

261

00:19:07,642  -->  00:19:12,104
they do much more complicated
analysis than this simple simulation.
262

262

00:19:14,106  -->  00:19:15,853
But who knows, you might get lucky.
263

263

00:19:15,853  -->  00:19:19,866
Anyways, so then I'll create
a new array called simulations.
264

264

00:19:23,187  -->  00:19:29,387
And I'll have it be zeros
of the number of runs,
265

265

00:19:29,387  -->  00:19:34,348
so at 10,000 length of array and
266

266

00:19:34,348  -->  00:19:40,549
then I'm gonna say, for
run in xrange(runs)
267

267

00:19:40,549  -->  00:19:45,527
simulations of that particular run.
268

268

00:19:45,527  -->  00:19:50,718
So at that point = stock_monte_carlo,
269

269

00:19:50,718  -->  00:19:53,897
again with our start price
270

270

00:19:57,321  -->  00:20:01,984
The number of days, the mu and the sigma.
271

271

00:20:06,474  -->  00:20:11,198
And it's gonna be the previous days,
so days-1.
272

272

00:20:11,198  -->  00:20:12,740
So just a quick note,
273

273

00:20:12,740  -->  00:20:17,902
depending on how strong your computer
is this might take a while to run.
274

274

00:20:17,902  -->  00:20:20,854
If it's taking way too long,
you can go ahead and
275

275

00:20:20,854  -->  00:20:23,236
lower the amount of runs you have here.
276

276

00:20:23,236  -->  00:20:27,096
Let's go ahead and run it.
277

277

00:20:27,096  -->  00:20:28,864
So we'll see how long it takes.
278

278

00:20:28,864  -->  00:20:31,735
If it takes too long, I'll shut it down.
279

279

00:20:31,735  -->  00:20:33,300
But hopefully, it can handle it.
280

280

00:20:34,530  -->  00:20:36,660
I'm just gonna break down
real quick what we did here.
281

281

00:20:36,660  -->  00:20:42,190
So I'm saying for 10,000 runs,
every run that point
282

282

00:20:42,190  -->  00:20:47,389
in that simulation is gonna
be defined as the end price,
283

283

00:20:47,389  -->  00:20:52,382
which I why I say, days-1,
so that's gonna take.
284

284

00:20:52,382  -->  00:20:58,283
If we look here at our plot, it's gonna
take this very last price point and
285

285

00:20:58,283  -->  00:21:00,864
set it as the term in that array.
286

286

00:21:00,864  -->  00:21:05,123
So we're basically, gathering an array
of all these ending price points for
287

287

00:21:05,123  -->  00:21:06,310
10,000 runs.
288

288

00:21:06,310  -->  00:21:07,894
Great.
289

289

00:21:07,894  -->  00:21:12,958
So now that we have an array simulations,
we can go ahead and plot a histogram and
290

290

00:21:12,958  -->  00:21:16,905
we can again, use quantile to
define our risk for this stock.
291

291

00:21:16,905  -->  00:21:23,514
So what I'm going to do is say,
292

292

00:21:23,514  -->  00:21:28,354
q = np.percentile.
293

293

00:21:30,975  -->  00:21:35,435
(Simulations,1).
294

294

00:21:35,435  -->  00:21:41,733
So what this does is it uses NumPy to
define q as the 1% empirical quantile.
295

295

00:21:41,733  -->  00:21:48,853
And what this basically means is
that when we're doing our analysis,
296

296

00:21:48,853  -->  00:21:54,533
that 99% of the values should
fit within our output.
297

297

00:21:54,533  -->  00:21:58,663
And now we're gonna plot a histogram,
298

298

00:21:58,663  -->  00:22:05,931
plt.hist(simulations.bins, I'm
gonna set it = 200 bins.
299

299

00:22:05,931  -->  00:22:07,475
Remember, we did 10,000 runs.
300

300

00:22:07,475  -->  00:22:13,007
So we're gonna have to
have a lot of bins and
301

301

00:22:13,007  -->  00:22:18,234
then I'm gonna use plt.figtext to fill
302

302

00:22:18,234  -->  00:22:25,781
in some additional information
onto the plot, figtext.
303

303

00:22:25,781  -->  00:22:28,688
So I'm gonna go ahead and
304

304

00:22:28,688  -->  00:22:34,650
input the starting price, (0.6, 0.8).
305

305

00:22:34,650  -->  00:22:40,160
And instead of actually
typing all this out,
306

306

00:22:40,160  -->  00:22:45,380
what I'm going to do is
go nbviewer here and
307

307

00:22:45,380  -->  00:22:49,441
just grab it from this notebook.
308

308

00:22:49,441  -->  00:22:53,311
Now I definitely suggest,
you type it all out, but
309

309

00:22:53,311  -->  00:22:58,899
what really all this is just the text
that's gonna go on top of the figure.
310

310

00:22:58,899  -->  00:23:05,939
So I'm gonna put my starting price,
string, define the starting price.
311

311

00:23:05,939  -->  00:23:10,359
I'm gonna put my mean final price
as the mean of all those final
312

312

00:23:10,359  -->  00:23:12,318
prices of the simulation.
313

313

00:23:12,318  -->  00:23:18,483
And then I'm gonna put my 99% confidence
interval as the (start_price- q) and
314

314

00:23:18,483  -->  00:23:21,393
then I'll display the 1% quantile and
315

315

00:23:21,393  -->  00:23:27,059
I'll plot a line at that 1% quantile and
then I've put a title for that plot.
316

316

00:23:27,059  -->  00:23:32,189
So let me go ahead and
run it and there you go.
317

317

00:23:32,189  -->  00:23:34,688
So let me go ahead and
break this down real quick.
318

318

00:23:34,688  -->  00:23:41,139
So this is a histogram
of all the final prices.
319

319

00:23:41,139  -->  00:23:45,844
So our starting price was $540.74 and
320

320

00:23:45,844  -->  00:23:50,682
our average final price was $540.79.
321

321

00:23:50,682  -->  00:23:54,065
So what this means is this is actually
kind of a pretty stable stock.
322

322

00:23:54,065  -->  00:24:00,068
And if we scroll backup, you remember when
we did our scatter plot Looks like Google
323

323

00:24:00,068  -->  00:24:05,408
and it's probably more clear in this
NV viewer, so I'll scroll up here.
324

324

00:24:05,408  -->  00:24:08,762
If you look at the average
daily return for Google,
325

325

00:24:08,762  -->  00:24:11,264
it's actually really close to zero.
326

326

00:24:11,264  -->  00:24:13,144
So, it's not changing that much.
327

327

00:24:13,144  -->  00:24:17,926
Looks like it is pretty stable,
which explains why in our
328

328

00:24:17,926  -->  00:24:23,422
analysis the mean final price is so
close to that starting price.
329

329

00:24:23,422  -->  00:24:26,358
Now what about risk?
330

330

00:24:26,358  -->  00:24:31,288
99% of the time and
I drew a red line here, so
331

331

00:24:31,288  -->  00:24:36,346
I plotted a line at that
1% quantile result and
332

332

00:24:36,346  -->  00:24:39,899
that line is at $524.40.
333

333

00:24:39,899  -->  00:24:41,556
So what does that actually mean?
334

334

00:24:43,170  -->  00:24:49,971
So if we look at that that,
means that the value at risk for
335

335

00:24:49,971  -->  00:24:55,358
each Google stock is gonna be $16.34,
336

336

00:24:55,358  -->  00:25:03,737
so $524.40 is our starting
price minus that 99% variance.
337

337

00:25:03,737  -->  00:25:05,873
So this means that's our value at risk.
338

338

00:25:05,873  -->  00:25:12,159
So 99% of the time that you run
this Monte Carlo simulation,
339

339

00:25:12,159  -->  00:25:16,428
the amount of money you
would lose at most,
340

340

00:25:16,428  -->  00:25:23,210
99% of the time is $16.34, so
that's your value at risk.
341

341

00:25:24,760  -->  00:25:28,849
Which isn't so
bad considering that your initial
342

342

00:25:28,849  -->  00:25:33,142
investment was $540, so
it's not a huge risk.
343

343

00:25:33,142  -->  00:25:36,427
It depends on your financial
situations and other factors of course.
344

344

00:25:36,427  -->  00:25:40,476
But $16.34, 99% of the time over a year,
345

345

00:25:40,476  -->  00:25:46,513
it's not a whole lot of money to risk for
an initial investment of $540.
346

346

00:25:46,513  -->  00:25:51,401
So that's the most amount of money
you could expect to lose 99% of
347

347

00:25:51,401  -->  00:25:53,387
the time is $16.34.
348

348

00:25:53,387  -->  00:25:58,115
And that's it for
the stock market data analysis project.
349

349

00:25:58,115  -->  00:26:00,634
I'm going to hop over to the MB Viewer.
350

350

00:26:00,634  -->  00:26:04,014
Here's a couple more questions
I want you guys to answer and
351

351

00:26:04,014  -->  00:26:08,205
feel free to post on the discussion board,
if you have any questions, but
352

352

00:26:08,205  -->  00:26:11,880
I want you to do a couple of
additional questions and exercises.
353

353

00:26:11,880  -->  00:26:16,544
So go ahead and estimate the values
at risk using both methods we
354

354

00:26:16,544  -->  00:26:21,384
just learned for a stock not related
to technology and go ahead and
355

355

00:26:21,384  -->  00:26:26,318
build a practice portfolio and
see how well you do for real stocks.
356

356

00:26:26,318  -->  00:26:30,222
There's a bunch of different websites,
where you can make a little practice
357

357

00:26:30,222  -->  00:26:32,633
portfolios and
not actually invest any money.
358

358

00:26:32,633  -->  00:26:37,201
And see if you can start to build
algorithms or different analysis
359

359

00:26:37,201  -->  00:26:42,432
techniques to see how you can predict or
trade well the stock market and then
360

360

00:26:42,432  -->  00:26:47,935
another thing I want you to do is look
into further correlations of two stocks.
361

361

00:26:47,935  -->  00:26:50,375
So remember, if I scroll up here,
362

362

00:26:50,375  -->  00:26:56,013
we looked at the correlations between two
stocks or a bunch of stocks actually,
363

363

00:26:56,013  -->  00:27:01,630
but go ahead and repeat this for
two stocks not really into technology.
364

364

00:27:01,630  -->  00:27:08,941
So do you think, for instance is there
a relationship between let's say,
365

365

00:27:08,941  -->  00:27:12,886
Tesla stocks that make electric cars and
366

366

00:27:12,886  -->  00:27:17,312
gasoline stocks, such as like ExxonMobil?
367

367

00:27:17,312  -->  00:27:19,390
If one goes up does one go down?
368

368

00:27:19,390  -->  00:27:22,132
It might be interesting to see if
there's a correlation there or
369

369

00:27:22,132  -->  00:27:25,351
just use your imagination, see what
other stocks you're interested in.
370

370

00:27:25,351  -->  00:27:27,536
So great job.
371

371

00:27:27,536  -->  00:27:31,606
This is a pretty epic projects and
I'm really proud of you guys for
372

372

00:27:31,606  -->  00:27:33,457
going all the way through it.
373

373

00:27:33,457  -->  00:27:36,126
And if you have any questions,
feel free to post a discussion.
374

374

00:27:36,126  -->  00:27:37,809
Thanks, guys.
