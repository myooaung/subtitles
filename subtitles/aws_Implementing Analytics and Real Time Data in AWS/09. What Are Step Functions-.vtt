WEBVTT
1
00:00:00.840 --> 00:00:05.210
[Autogenerated] alright, so all of that builds up to step functions now.

2
00:00:05.210 --> 00:00:10.610
Step functions are a service in a W s that allow us to coordinate are

3
00:00:10.610 --> 00:00:15.140
distributed applications using visual work flows.

4
00:00:15.140 --> 00:00:20.460
So each component within our step function workflow performs its

5
00:00:20.460 --> 00:00:25.040
own discreet function or task before moving on.

6
00:00:25.040 --> 00:00:28.990
Now this allows us to have reliable coordination and a

7
00:00:28.990 --> 00:00:32.190
reliable step through of our applications.

8
00:00:32.190 --> 00:00:36.330
So we can guarantee a specific order is followed now.

9
00:00:36.330 --> 00:00:39.440
It also allows for automatic triggering.

10
00:00:39.440 --> 00:00:41.790
There's automatic step tracking,

11
00:00:41.790 --> 00:00:46.650
and it also allows for automatic re tries after errors occur.

12
00:00:46.650 --> 00:00:49.140
So it's a very resilient service.

13
00:00:49.140 --> 00:00:53.420
And one last neat feature is that all steps are logged

14
00:00:53.420 --> 00:00:56.640
for a quick diagnosis of any problems.

15
00:00:56.640 --> 00:01:01.200
So diving into the console allows us to quickly analyze what's

16
00:01:01.200 --> 00:01:04.340
going on in our step functions when they break.

17
00:01:04.340 --> 00:01:05.060
Now, let's go ahead.

18
00:01:05.060 --> 00:01:09.340
Let's move into the AWS step functions console,

19
00:01:09.340 --> 00:01:12.460
and we'll start playing around with step functions and

20
00:01:12.460 --> 00:01:18.000
looking at the different triggers, as well as the different endpoints that it can connect to

