WEBVTT
1
00:00:00.000 --> 00:00:03.636
So What's this Agile Stuff?

2
00:00:03.636 --> 00:00:07.273
Let's try something called 'agile'.

3
00:00:07.273 --> 00:00:08.000
Great!

4
00:00:08.000 --> 00:00:11.375
So no more documentation and planning?

5
00:00:11.375 --> 00:00:13.625
Oh, help us all!

6
00:00:13.625 --> 00:00:17.000
Agile does not mean cutting corners.

7
00:00:17.000 --> 00:00:21.000
It is simply a new process and a new way of thinking.

8
00:00:21.000 --> 00:00:22.176
Agile Myths.

9
00:00:22.176 --> 00:00:27.471
You may have heard that Agile has no Process,

10
00:00:27.471 --> 00:00:32.143
doesn't have Documentation, doesn't believe in requirements gathering,

11
00:00:32.143 --> 00:00:36.143
or that Agile doesn't follow a plan.

12
00:00:36.143 --> 00:00:39.000
All of these are false.

13
00:00:39.000 --> 00:00:43.200
Agile has processes, documentation, requirements gathering,

14
00:00:43.200 --> 00:00:46.000
plans, and much more.

15
00:00:46.000 --> 00:00:51.538
The difference is that Agile values individuals and

16
00:00:51.538 --> 00:00:55.000
interactions over processes and tools.

17
00:00:55.000 --> 00:01:01.000
You'll still need quality processes and tools, but focus on individuals.

18
00:01:01.000 --> 00:01:04.818
Working software over comprehensive documentation; you

19
00:01:04.818 --> 00:01:11.846
still need forms of documentation, working software is more important.

20
00:01:11.846 --> 00:01:18.000
Also, Agile values customer collaboration over contract negotiation.

21
00:01:18.000 --> 00:01:21.556
Also, responding to change over following a plan.

22
00:01:21.556 --> 00:01:26.571
Plans are important, but plans need to be responsive to change,

23
00:01:26.571 --> 00:01:30.000
rather than the other way around.

24
00:01:30.000 --> 00:01:31.231
Agile vs.

25
00:01:31.231 --> 00:01:31.846
Waterfall.

26
00:01:31.846 --> 00:01:38.000
Requirements gathering and the development of software are tightly coupled.

27
00:01:38.000 --> 00:01:41.000
You need to certainly know some amount of the

28
00:01:41.000 --> 00:01:43.000
requirements before you write any code.

29
00:01:43.000 --> 00:01:47.667
Traditionally, the Waterfall development process begins with Requirements,

30
00:01:47.667 --> 00:01:51.750
then Design, Development, Testing, and finally Deployment.

31
00:01:51.750 --> 00:01:57.000
In fact, most organizations still develop software this way.

32
00:01:57.000 --> 00:02:02.000
The Waterfall approach is a rigid process and not resilient to change.

33
00:02:02.000 --> 00:02:04.632
This can be more risky in meeting our customer's needs,

34
00:02:04.632 --> 00:02:07.462
especially if the requirements process was a year or two,

35
00:02:07.462 --> 00:02:11.154
and the development of the software was two,

36
00:02:11.154 --> 00:02:13.000
maybe even four years.

37
00:02:13.000 --> 00:02:15.188
A better approach would be to interweave,

38
00:02:15.188 --> 00:02:16.125
if you will,

39
00:02:16.125 --> 00:02:20.100
the requirements and the software development processes into smaller,

40
00:02:20.100 --> 00:02:25.000
iterative 'chunks' also commonly known as sprints.

41
00:02:25.000 --> 00:02:27.625
Therefore, in your role of gathering requirements,

42
00:02:27.625 --> 00:02:32.714
you will need to adapt from developing your requirements all 'up front' to

43
00:02:32.714 --> 00:02:37.000
a model where you develop them in an iterative fashion.

44
00:02:37.000 --> 00:02:38.929
The Adaptive Process.

45
00:02:38.929 --> 00:02:46.000
The term 'adaptive' is a common descriptor of the Agile process.

46
00:02:46.000 --> 00:02:49.667
As we discussed and made very clear in the last module,

47
00:02:49.667 --> 00:02:53.500
requirements are guaranteed to be uncertain and unpredictable.

48
00:02:53.500 --> 00:03:01.000
Therefore, you need to constantly adapt and re-plan your work and activities.

49
00:03:01.000 --> 00:03:04.000
Well, in a nutshell, that is Agile.

50
00:03:04.000 --> 00:03:06.143
To take this even further,

51
00:03:06.143 --> 00:03:12.722
wouldn't it be great if â€¦"we could figure out a way to deliver software so fast

52
00:03:12.722 --> 00:03:16.611
that our customers don't have time to change their minds.

53
00:03:16.611 --> 00:03:20.294
" This is a great quote from Tom Poppendieck,

54
00:03:20.294 --> 00:03:24.000
author of several books on Agile and Lean principles.

55
00:03:24.000 --> 00:03:30.750
Users are not necessarily indecisive, but dynamic business demands,

56
00:03:30.750 --> 00:03:33.000
drive unpredictable changes.

57
00:03:33.000 --> 00:03:37.118
This is a very key element to understand and appreciate,

58
00:03:37.118 --> 00:03:40.500
and this is why Agile requirements techniques are

59
00:03:40.500 --> 00:03:43.000
important to learn and understand.

60
00:03:43.000 --> 00:03:44.909
The Agile Philosophy.

61
00:03:44.909 --> 00:03:48.091
Fundamentally different than traditional development,

62
00:03:48.091 --> 00:03:53.500
usually waiting months and months, even years for software.

63
00:03:53.500 --> 00:03:57.000
Highest priority to satisfy the customer.

64
00:03:57.000 --> 00:04:02.250
Accomplished by early and continuous delivery of

65
00:04:02.250 --> 00:04:06.000
immediately usable requirements and software.

66
00:04:06.000 --> 00:04:11.091
An environment where changing requirements are welcomed,

67
00:04:11.091 --> 00:04:14.000
even late in development.

68
00:04:14.000 --> 00:04:17.429
Provides a more flexible approach to requirements management.

69
00:04:17.429 --> 00:04:20.000
This is where you come in.

70
00:04:20.000 --> 00:04:21.313
In Module 2,

71
00:04:21.313 --> 00:04:25.688
we went from user stories to some pretty robust and

72
00:04:25.688 --> 00:04:27.000
detailed requirement specifications.

73
00:04:27.000 --> 00:04:29.864
We will see in the coming slides,

74
00:04:29.864 --> 00:04:36.000
how we will break up that into shorter durations and a just in time approach.

75
00:04:36.000 --> 00:04:45.000
Early delivery, value added requirements. Customers realize and appreciate a much greater return on investment.

