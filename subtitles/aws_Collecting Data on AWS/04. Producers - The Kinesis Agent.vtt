WEBVTT
1
00:00:01.040 --> 00:00:04.080
Let's look at Kinesis Data Stream producers and how they're

2
00:00:04.080 --> 00:00:07.660
used to get data into a Kinesis Data Stream.

3
00:00:07.660 --> 00:00:08.400
To recap,

4
00:00:08.400 --> 00:00:10.550
there are a few commonly used tools to send

5
00:00:10.550 --> 00:00:12.940
information into a Kinesis Data Stream.

6
00:00:12.940 --> 00:00:16.390
We'll start by looking at the Kinesis Agent.

7
00:00:16.390 --> 00:00:18.530
So what is the Kinesis Agent?

8
00:00:18.530 --> 00:00:22.960
It's not an AWS service designed to collect elicit government intelligence.

9
00:00:22.960 --> 00:00:23.920
Instead,

10
00:00:23.920 --> 00:00:27.430
it's a Java application that's commonly installed on servers that

11
00:00:27.430 --> 00:00:30.580
you would like to stream data into Amazon Kinesis.

12
00:00:30.580 --> 00:00:33.440
The Kinesis Agent can be installed onto one machine,

13
00:00:33.440 --> 00:00:35.790
or onto entire fleets of machines,

14
00:00:35.790 --> 00:00:39.960
to stream logs directly from the machines into Amazon Kinesis.

15
00:00:39.960 --> 00:00:43.680
The Agent has a variety of features to help make streaming log files into

16
00:00:43.680 --> 00:00:47.670
Kinesis easy and avoid common pitfalls of doing it yourself.

17
00:00:47.670 --> 00:00:50.440
Let's look at this in an example.

18
00:00:50.440 --> 00:00:55.390
Let's imagine we have an application inside of a virtual machine on AWS.

19
00:00:55.390 --> 00:00:55.950
In this case,

20
00:00:55.950 --> 00:00:59.650
maybe it's an EC2 instance with our application installed inside of it.

21
00:00:59.650 --> 00:01:02.980
We might have our application output log files.

22
00:01:02.980 --> 00:01:05.730
Now, these log files would sit on our EC2 instance,

23
00:01:05.730 --> 00:01:08.360
and we might otherwise have to send them in with some custom

24
00:01:08.360 --> 00:01:10.810
script to a place we can monitor them.

25
00:01:10.810 --> 00:01:13.140
Now, when we're using the Kinesis Agent,

26
00:01:13.140 --> 00:01:17.640
we can actually send these log files to a file or to a file folder,

27
00:01:17.640 --> 00:01:22.030
and we could use the Kinesis Agent to then pick up changes in those files and

28
00:01:22.030 --> 00:01:26.440
file folders that we could send over to Amazon Kinesis.

29
00:01:26.440 --> 00:01:31.650
Now, the Kinesis Agent can also take whatever the outputs of these files are,

30
00:01:31.650 --> 00:01:33.650
for example, an Apache log format,

31
00:01:33.650 --> 00:01:36.700
and if we wanted to transform it to another format,

32
00:01:36.700 --> 00:01:37.710
we could do that.

33
00:01:37.710 --> 00:01:40.290
Maybe if we wanted to move it over to JSON.

34
00:01:40.290 --> 00:01:43.530
After the Kinesis Agent takes the output logs and potentially

35
00:01:43.530 --> 00:01:46.070
transforms them into the format that we'd like,

36
00:01:46.070 --> 00:01:50.860
it can send the data over to Kinesis as a Kinesis data record.

37
00:01:50.860 --> 00:01:52.010
Now when doing so,

38
00:01:52.010 --> 00:01:54.820
it can help us with our built‑in logic to help prevent

39
00:01:54.820 --> 00:01:57.790
duplicates or data loss when we're using it.

40
00:01:57.790 --> 00:02:00.020
This means we don't have to write all this code ourself

41
00:02:00.020 --> 00:02:02.440
inside of a custom application in EC2.

42
00:02:02.440 --> 00:02:07.890
So what are some of the log formats that the Kinesis Agent can handle?

43
00:02:07.890 --> 00:02:11.980
It can change multi‑line files to single‑line files by removing new

44
00:02:11.980 --> 00:02:14.990
line characters and leading and trailing spaces.

45
00:02:14.990 --> 00:02:16.600
It can also transform formats,

46
00:02:16.600 --> 00:02:20.220
like comma‑separated values or pipe‑separated values,

47
00:02:20.220 --> 00:02:21.540
into JSON.

48
00:02:21.540 --> 00:02:21.910
Really,

49
00:02:21.910 --> 00:02:25.300
though, it can be used to transform a variety of delimiter‑separated

50
00:02:25.300 --> 00:02:28.650
value formats by specifying the specific delimiter.

51
00:02:28.650 --> 00:02:31.250
For in this case, we'd have commas, pipes,

52
00:02:31.250 --> 00:02:34.740
or potentially things like tabs and other separators.

53
00:02:34.740 --> 00:02:37.310
It also has the option to transform several different kinds of

54
00:02:37.310 --> 00:02:41.210
Apache log formats or syslog formats to JSON.

55
00:02:41.210 --> 00:02:43.480
So why would we use the Kinesis Agent?

56
00:02:43.480 --> 00:02:44.010
To start,

57
00:02:44.010 --> 00:02:46.360
you'll get built‑in performance benefits that might

58
00:02:46.360 --> 00:02:48.450
be harder to optimize on your own.

59
00:02:48.450 --> 00:02:50.820
You'll also get lots of built‑in functionality,

60
00:02:50.820 --> 00:02:54.550
ranging from pre‑transforming the data file to watching and tailing

61
00:02:54.550 --> 00:02:57.190
the file that you're using to store your logs.

62
00:02:57.190 --> 00:03:00.100
And you'd have to build out all this functionality yourself if

63
00:03:00.100 --> 00:03:02.440
you were using a more customized solution.

64
00:03:02.440 --> 00:03:05.360
Another good reason to consider the Agent is that it will easily

65
00:03:05.360 --> 00:03:08.870
integrate with Amazon CloudWatch to allow you to review all of

66
00:03:08.870 --> 00:03:12.290
your different logs inside of AWS.

67
00:03:12.290 --> 00:03:14.960
This can also help you set up metrics, alarms,

68
00:03:14.960 --> 00:03:19.090
and a variety of other functionality that CloudWatch offers.

69
00:03:19.090 --> 00:03:25.000
So now that we're a bit more familiar with the Kinesis Agent, let's look at another of the producers that we could use.

