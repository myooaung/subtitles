WEBVTT
1
00:00:01.440 --> 00:00:05.580
So what is the AWS Database Migration Service?

2
00:00:05.580 --> 00:00:10.780
AWS DMS lets you quickly and securely migrate the most widely used databases

3
00:00:10.780 --> 00:00:14.690
to AWS while keeping the source database fully operational.

4
00:00:14.690 --> 00:00:14.930
So,

5
00:00:14.930 --> 00:00:17.830
why would you want to use DMS in order to get your data

6
00:00:17.830 --> 00:00:20.500
from your source database into AWS?

7
00:00:20.500 --> 00:00:24.700
First, it'll work with many of the popular databases that you might be using,

8
00:00:24.700 --> 00:00:27.610
and we'll talk more about the individual ones later,

9
00:00:27.610 --> 00:00:30.270
but it's likely if you're using one of the top open

10
00:00:30.270 --> 00:00:31.840
source or commercial databases,

11
00:00:31.840 --> 00:00:35.540
DMS will have support to help you move that into AWS.

12
00:00:35.540 --> 00:00:39.480
It's also lower cost than many traditional migration services.

13
00:00:39.480 --> 00:00:42.650
And if you compare some of the costs between DMS and other options,

14
00:00:42.650 --> 00:00:45.100
you might be surprised by how much you could save.

15
00:00:45.100 --> 00:00:45.540
Next,

16
00:00:45.540 --> 00:00:50.020
with DMS, you're going to get minimal downtime between your own database that

17
00:00:50.020 --> 00:00:53.350
you might still be relying on in your applications and an on‑premises

18
00:00:53.350 --> 00:00:57.910
environment or another cloud and moving that over into DMS.

19
00:00:57.910 --> 00:01:00.760
And it'll accomplish this in a few different ways by

20
00:01:00.760 --> 00:01:03.590
allowing you to keep your database up and running while you

21
00:01:03.590 --> 00:01:05.540
continue to move all the data over.

22
00:01:05.540 --> 00:01:07.710
It's also relatively easy to use.

23
00:01:07.710 --> 00:01:11.780
You'll set up some configuration with DMS and then be able to have it

24
00:01:11.780 --> 00:01:15.590
migrate your data from your own databases over into AWS without having to

25
00:01:15.590 --> 00:01:19.060
do too many of your own queries or your own analysis onto what needs to

26
00:01:19.060 --> 00:01:21.740
move over and how to accomplish that.

27
00:01:21.740 --> 00:01:24.850
So let's visualize a migration using DMS.

28
00:01:24.850 --> 00:01:27.190
You might start with an on‑premises database,

29
00:01:27.190 --> 00:01:29.580
or this could be a database inside of another cloud,

30
00:01:29.580 --> 00:01:33.680
and then, you'd connect that to the Database Management Service,

31
00:01:33.680 --> 00:01:36.280
providing it credentials for that database,

32
00:01:36.280 --> 00:01:41.140
such as the usernames and passwords or the URL to connect to that database.

33
00:01:41.140 --> 00:01:41.750
From there,

34
00:01:41.750 --> 00:01:45.050
it would then run a series of tasks to move the data

35
00:01:45.050 --> 00:01:47.250
over from the on‑premises environment,

36
00:01:47.250 --> 00:01:49.650
or the first cloud that you have your data in,

37
00:01:49.650 --> 00:01:53.390
and then take that data through those tasks that it's going to be

38
00:01:53.390 --> 00:01:58.260
assigning to move pieces of data over into the target database and put

39
00:01:58.260 --> 00:02:01.840
it inside of that database one piece at a time.

40
00:02:01.840 --> 00:02:04.080
This is how everything works at a high level,

41
00:02:04.080 --> 00:02:07.210
but we'll take a closer look in future sections.

42
00:02:07.210 --> 00:02:07.810
Next,

43
00:02:07.810 --> 00:02:15.000
let's look at some of the sources and targets that we can use when we want to move data from one database to the cloud.

