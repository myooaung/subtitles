1
00:00:01,090 --> 00:00:03,800
Let's look at some of the producers we can use to send

2
00:00:03,800 --> 00:00:07,460
data into Kinesis Data Firehose.

3
00:00:07,460 --> 00:00:10,360
There's some overlap between the Kinesis Data Streams

4
00:00:10,360 --> 00:00:12,640
and Kinesis Data Firehose producers,

5
00:00:12,640 --> 00:00:16,230
and I'm not going to waste your time by going over all the same ones over again,

6
00:00:16,230 --> 00:00:18,890
but let's briefly recap what those are.

7
00:00:18,890 --> 00:00:22,880
First, there's the Kinesis Agent, the AWS SDKs,

8
00:00:22,880 --> 00:00:25,940
and Kinesis Data Streams themselves.

9
00:00:25,940 --> 00:00:27,540
Now, with the Kinesis Agent,

10
00:00:27,540 --> 00:00:31,390
we already learned about how we can use that to put it on an EC2 instance,

11
00:00:31,390 --> 00:00:32,350
for example,

12
00:00:32,350 --> 00:00:35,740
to send log data and pre‑process that before it gets

13
00:00:35,740 --> 00:00:38,450
over to a Kinesis Data Stream or, in this case,

14
00:00:38,450 --> 00:00:39,900
Kinesis Firehose.

15
00:00:39,900 --> 00:00:44,520
The AWS SDKs give us a lot of customization about how we send data in,

16
00:00:44,520 --> 00:00:48,310
directly by putting information to the Kinesis Firehose

17
00:00:48,310 --> 00:00:51,400
with a PutRecord or PutRecords operation.

18
00:00:51,400 --> 00:00:52,010
And,

19
00:00:52,010 --> 00:00:55,170
we learned about Kinesis Data Streams themselves in previous

20
00:00:55,170 --> 00:00:58,760
videos and how they can be used to collect information and

21
00:00:58,760 --> 00:01:00,820
then send it over to a consumer.

22
00:01:00,820 --> 00:01:01,410
Now, in this case,

23
00:01:01,410 --> 00:01:04,100
we can use Kinesis Data Streams themselves to feed

24
00:01:04,100 --> 00:01:06,540
data into Kinesis Data Firehose.

25
00:01:06,540 --> 00:01:11,530
But now, let's also look at some producers that are specific to Kinesis Firehose.

26
00:01:11,530 --> 00:01:15,150
First, there's the CloudWatch Logs subscriptions option.

27
00:01:15,150 --> 00:01:18,260
Now, this allows you to send data that's going into CloudWatch Logs,

28
00:01:18,260 --> 00:01:19,070
for example,

29
00:01:19,070 --> 00:01:23,500
metrics coming from an EC2 instance that's being sent to CloudWatch Logs,

30
00:01:23,500 --> 00:01:27,070
or custom metrics, or records and logs that are being sent there,

31
00:01:27,070 --> 00:01:30,890
and then take that data and process it with Kinesis Data

32
00:01:30,890 --> 00:01:33,620
Firehose and move it to a destination.

33
00:01:33,620 --> 00:01:37,600
There's also the option to use CloudWatch Logs Events rules in

34
00:01:37,600 --> 00:01:39,900
a similar way that you could use the CloudWatch Logs

35
00:01:39,900 --> 00:01:43,740
subscriptions to send data directly into Kinesis Firehose and

36
00:01:43,740 --> 00:01:45,580
then process that in the same way.

37
00:01:45,580 --> 00:01:48,630
Additionally, there is the option to use AWS IoT,

38
00:01:48,630 --> 00:01:51,290
or the Internet of Things, platform rules,

39
00:01:51,290 --> 00:01:56,260
to send data from IoT devices coming into AWS' IoT suite and IoT

40
00:01:56,260 --> 00:02:00,590
home of products to go then to Kinesis Firehose for processing

41
00:02:00,590 --> 00:02:03,270
and to send to a destination like S3,

42
00:02:03,270 --> 00:02:07,600
or other destinations to be stored for long‑term availability.

43
00:02:07,600 --> 00:02:10,190
Now, if you want to learn more about AWS IoT,

44
00:02:10,190 --> 00:02:12,490
you could check out one of the courses that I have here on

45
00:02:12,490 --> 00:02:16,340
Pluralsight that goes over AWS IoT in more detail.

46
00:02:16,340 --> 00:02:17,300
But for right now,

47
00:02:17,300 --> 00:02:21,430
let's look at each of these cases and see how they work in practice.

48
00:02:21,430 --> 00:02:24,020
Let's start with CloudWatch Logs subscriptions.

49
00:02:24,020 --> 00:02:27,200
With CloudWatch Log subscriptions, we have our Kinesis Firehose,

50
00:02:27,200 --> 00:02:29,790
and then we also have CloudWatch Logs.

51
00:02:29,790 --> 00:02:34,140
Then, we create a subscription between CloudWatch Logs and Kinesis Firehose.

52
00:02:34,140 --> 00:02:38,390
And then, when we have an EC2 instance that sends data into CloudWatch Logs,

53
00:02:38,390 --> 00:02:39,750
it'll be recorded there.

54
00:02:39,750 --> 00:02:42,800
We might also have other services like AWS Lambda sending

55
00:02:42,800 --> 00:02:45,070
information over to CloudWatch Logs.

56
00:02:45,070 --> 00:02:45,940
After that,

57
00:02:45,940 --> 00:02:50,170
this data will go through the subscription over to Kinesis Firehose where

58
00:02:50,170 --> 00:02:53,680
it can then be taken and sent over to a destination.

59
00:02:53,680 --> 00:02:57,010
Now again, this destination could be a variety of different,

60
00:02:57,010 --> 00:03:00,640
specifically configured destinations that we'll cover in just a bit.

61
00:03:00,640 --> 00:03:05,330
We could also use AWS IoT rules using the AWS IoT

62
00:03:05,330 --> 00:03:07,180
Rules Engine to send this data over.

63
00:03:07,180 --> 00:03:10,750
We do something pretty similar where we create a rule that

64
00:03:10,750 --> 00:03:13,560
associates the Rules Engine and the Firehose.

65
00:03:13,560 --> 00:03:16,670
And then we have a bunch of different IoT devices that might be

66
00:03:16,670 --> 00:03:20,740
sending data into our IoT home inside of AWS,

67
00:03:20,740 --> 00:03:23,240
and then this data is then picked up by the Rules Engine

68
00:03:23,240 --> 00:03:25,730
and sent over to Kinesis Firehose.

69
00:03:25,730 --> 00:03:30,640
From there, we do the exact same thing and send the data over to our destination.

70
00:03:30,640 --> 00:03:33,230
Keep both these newer producers of data in mind when

71
00:03:33,230 --> 00:03:34,840
you're working with Amazon Kinesis,

72
00:03:34,840 --> 00:03:37,740
as well as the existing producers that we covered in

73
00:03:37,740 --> 00:03:39,490
the Kinesis Data Stream section,

74
00:03:39,490 --> 00:03:48,000
as they can both be used with Amazon Kinesis Data Firehose. Next up, we'll look at Kinesis Data Firehose destinations.

