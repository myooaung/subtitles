1
00:00:00,040 --> 00:00:05,340
And Spring is continuing to make life even easier for you as a developer.

2
00:00:05,340 --> 00:00:07,210
In the previous version of this course,

3
00:00:07,210 --> 00:00:10,840
we needed to create an EntityManagerFactory.

4
00:00:10,840 --> 00:00:13,900
It would have looked very similar to this code above.

5
00:00:13,900 --> 00:00:18,990
But now Spring defaults to Hibernate as its EntityManagerFactory so you

6
00:00:18,990 --> 00:00:24,010
can omit creating one. Like the persistence.xml, I want to mention it in

7
00:00:24,010 --> 00:00:26,090
case you're looking at legacy examples,

8
00:00:26,090 --> 00:00:31,110
as well as to point out the declarative nature of this older code where Spring

9
00:00:31,110 --> 00:00:35,240
simply now just encourages convention over configuration.

10
00:00:35,240 --> 00:00:38,940
If you need to create an EntityManagerFactory, you can.

11
00:00:38,940 --> 00:00:43,540
But if the common defaults work for you, you can just simply begin coding.

12
00:00:43,540 --> 00:00:48,790
I also want to point out look at how we had to create the EntityManagerFactory

13
00:00:48,790 --> 00:00:53,140
and then begin our transactions, actually persist our code,

14
00:00:53,140 --> 00:00:58,850
then remember to commit it, close it, and close the factory. Very

15
00:00:58,850 --> 00:01:02,500
errorâ€‘prone things that are more indicative of a library rather than

16
00:01:02,500 --> 00:01:09,000
a framework where Spring, as a framework, it takes care of all of this for us behind the scenes.

