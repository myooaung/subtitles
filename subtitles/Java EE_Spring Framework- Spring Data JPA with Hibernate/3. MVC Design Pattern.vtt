WEBVTT
1
00:00:00.040 --> 00:00:03.270
There is a standard MVC, or model‑view‑controller, design

2
00:00:03.270 --> 00:00:06.140
pattern that you may or may not have seen before.

3
00:00:06.140 --> 00:00:07.630
It's a pretty common pattern now,

4
00:00:07.630 --> 00:00:10.840
and most developers have at least seen it or heard of it.

5
00:00:10.840 --> 00:00:14.880
A request comes in through the view based off of some user event

6
00:00:14.880 --> 00:00:17.700
and then is interpreted by our controller.

7
00:00:17.700 --> 00:00:20.770
The controller can change the model, or not,

8
00:00:20.770 --> 00:00:24.640
and then it will select the view based off of our action.

9
00:00:24.640 --> 00:00:25.280
From here,

10
00:00:25.280 --> 00:00:29.080
the model can update the view with the database off of the user's

11
00:00:29.080 --> 00:00:32.540
actions. Now this graphic is sometimes confusing,

12
00:00:32.540 --> 00:00:32.760
though,

13
00:00:32.760 --> 00:00:37.530
because it's stemmed from rich client applications that were more event‑based or

14
00:00:37.530 --> 00:00:42.320
using a design pattern called the observer observable or subscribe listener type

15
00:00:42.320 --> 00:00:48.120
design patterns, not really applicable to a lot of web software development. The

16
00:00:48.120 --> 00:00:50.420
pattern and concept is still sound,

17
00:00:50.420 --> 00:00:53.860
but we usually don't have our model updating our view because

18
00:00:53.860 --> 00:00:59.240
we've gone back to a page at that point.

19
00:00:59.240 --> 00:01:02.640
This is a more accurate description of that kind of lifecycle

20
00:01:02.640 --> 00:01:05.340
that we maybe faced with in web development.

21
00:01:05.340 --> 00:01:07.940
This graphic is realistically more like the lifecycle

22
00:01:07.940 --> 00:01:10.160
that we will see in our web application.

23
00:01:10.160 --> 00:01:16.040
Our view can access our model, but it's usually done so through the controller.

24
00:01:16.040 --> 00:01:18.360
We'll look more at the lightweight approaches in the

25
00:01:18.360 --> 00:01:20.410
AJAX module later in this course,

26
00:01:20.410 --> 00:01:24.270
but the summary is we usually still make a request, even if it's

27
00:01:24.270 --> 00:01:27.060
a lightweight request, through our controller to access our

28
00:01:27.060 --> 00:01:34.000
model. We don't have our view typically going directly against our database or our model.

