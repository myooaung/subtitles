1
00:00:00,040 --> 00:00:02,900
So we have all these pieces we've started putting together,

2
00:00:02,900 --> 00:00:06,430
but how do we use them all in one application?

3
00:00:06,430 --> 00:00:09,590
We've gone through and overridden IDs and column names,

4
00:00:09,590 --> 00:00:12,000
tables, got all these things set up.

5
00:00:12,000 --> 00:00:15,460
How do we actually start combining them all with Spring?

6
00:00:15,460 --> 00:00:18,940
We've looked at both halves, Spring and JPA.

7
00:00:18,940 --> 00:00:21,430
Well, let's put them all together in our application now.

8
00:00:21,430 --> 00:00:25,340
I'm going to start with the PersistenceContext.

9
00:00:25,340 --> 00:00:28,900
And this annotation is used to inject our EntityManager,

10
00:00:28,900 --> 00:00:33,070
which is how we persist things through Hibernate to our database.

11
00:00:33,070 --> 00:00:36,540
It gets our EntityManager for us.

12
00:00:36,540 --> 00:00:39,950
The next thing we need is our service tier.

13
00:00:39,950 --> 00:00:41,350
Now I'll be honest.

14
00:00:41,350 --> 00:00:44,690
You can do all of this without creating your service tier.

15
00:00:44,690 --> 00:00:47,790
But architecturally, this is how it's intended to be used.

16
00:00:47,790 --> 00:00:51,340
And this is where we put our business logic at.

17
00:00:51,340 --> 00:00:55,240
It also happens to be where we start our transactions from as well.

18
00:00:55,240 --> 00:01:01,160
And then next we have our Repository annotation or our repository tier.

19
00:01:01,160 --> 00:01:05,470
This is a one‑to‑one mapping of our model objects to our database.

20
00:01:05,470 --> 00:01:06,160
Trust me,

21
00:01:06,160 --> 00:01:09,880
this is a lot to learn or bite off all at once, but it will

22
00:01:09,880 --> 00:01:12,520
all make sense as we start cobbling the pieces together in

23
00:01:12,520 --> 00:01:14,640
this next couple of demos.

24
00:01:14,640 --> 00:01:16,460
Lastly, we need transactional,

25
00:01:16,460 --> 00:01:18,790
and that is the beginning of our transaction. And that

26
00:01:18,790 --> 00:01:20,510
should start at our service tier.

27
00:01:20,510 --> 00:01:24,620
Although if we're just doing an update against one table,

28
00:01:24,620 --> 00:01:28,260
it is implied that it's in a transaction because it's just one commit.

29
00:01:28,260 --> 00:01:30,880
It's when it spans multiple tables that you need to

30
00:01:30,880 --> 00:01:37,000
start and stop a transaction. Let's begin by creating our service tier now.

