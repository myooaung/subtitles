WEBVTT
1
00:00:00.040 --> 00:00:04.710
The service tier is annotated with the @Service annotation,

2
00:00:04.710 --> 00:00:09.140
and it describes the verbs or actions of our system.

3
00:00:09.140 --> 00:00:11.960
It is where our business logic should reside.

4
00:00:11.960 --> 00:00:14.370
In fact, it should all be contained here.

5
00:00:14.370 --> 00:00:18.740
It shouldn't bleed over into our repository tier.

6
00:00:18.740 --> 00:00:21.480
Another role of the service tier is to ensure that

7
00:00:21.480 --> 00:00:24.440
business logic is in a valid state.

8
00:00:24.440 --> 00:00:27.580
This is where all of our state management should be handled, confirming

9
00:00:27.580 --> 00:00:31.040
that we've got a valid object passed from a request.

10
00:00:31.040 --> 00:00:36.440
It meets the standards of our business objects or of our business requirements.

11
00:00:36.440 --> 00:00:39.840
Also, this is where our transactions should begin.

12
00:00:39.840 --> 00:00:42.630
If you are doing twoâ€‘phase commits or there's a chance we might

13
00:00:42.630 --> 00:00:45.030
have to roll back or access web services,

14
00:00:45.030 --> 00:00:50.040
those types of things, this is where we want all of our transactions to begin.

15
00:00:50.040 --> 00:00:56.130
It often has the same methods as the repository, but a different focus.

16
00:00:56.130 --> 00:00:59.910
We may have a method in here that says find user by last name,

17
00:00:59.910 --> 00:01:04.150
and we may have that same method in our repository, but what we do if we

18
00:01:04.150 --> 00:01:08.400
don't find a user or how many people will be returned or what state we might

19
00:01:08.400 --> 00:01:17.000
return these objects in is controlled by the service tier where the repository tier is just going to get that data.

