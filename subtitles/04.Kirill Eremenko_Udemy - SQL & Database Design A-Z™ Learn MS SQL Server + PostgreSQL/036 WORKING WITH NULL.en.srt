1
00:00:00,590 --> 00:00:02,300
Hello and welcome back.

2
00:00:02,390 --> 00:00:04,430
And today we'll have a very important Tauriel.

3
00:00:04,490 --> 00:00:12,070
We will be working with nuns so nulls are classified as cells that have no data in them and they're

4
00:00:12,080 --> 00:00:14,470
automatically filled with no value.

5
00:00:14,540 --> 00:00:22,460
So I ask you all has a way to deal with them and you can operate with these cells with different functions

6
00:00:22,460 --> 00:00:23,540
and statements.

7
00:00:23,540 --> 00:00:32,400
So in this lecture today we will discuss how to find nulls in tables and how to deal with knowledge

8
00:00:32,420 --> 00:00:34,980
from a data management point of view.

9
00:00:35,240 --> 00:00:40,420
So first thing first let's go ahead and run our inquiry.

10
00:00:40,460 --> 00:00:43,830
We're going to be working with console games table so all these years go ahead.

11
00:00:43,850 --> 00:00:47,690
Select all from console games.

12
00:00:48,850 --> 00:00:56,980
And now when we run this we will get our 12 columns all filled with data but some rows some tipples

13
00:00:57,070 --> 00:01:04,180
will be missing some information in them and that's exactly what we'll be dealing with today.

14
00:01:04,180 --> 00:01:10,090
Let's quickly go ahead and as you can see it will be quite hard to scan for all of these rows to find

15
00:01:10,380 --> 00:01:11,160
empty.

16
00:01:12,500 --> 00:01:13,230
Data.

17
00:01:13,430 --> 00:01:17,730
So let's put a WHERE condition in order to narrow our results.

18
00:01:17,730 --> 00:01:21,830
Now we want to say that the game name has to be

19
00:01:24,860 --> 00:01:33,580
and if we're either Now as you can say or 10 results to us and these rows have all other data except

20
00:01:33,590 --> 00:01:35,970
gamelike maybe the data get corrupted.

21
00:01:36,010 --> 00:01:42,380
Maybe people who put them in put to them incorrectly or maybe they just forgot to do it altogether.

22
00:01:42,670 --> 00:01:49,290
Things like this happen and it's very important to manage your database efficiently correctly so that

23
00:01:49,300 --> 00:01:54,830
when you find those defined them as soon as possible and to correct them as soon as possible.

24
00:01:54,870 --> 00:02:02,970
So you're probably wondering why we're not using equal sign because now is not equal to anything.

25
00:02:02,980 --> 00:02:06,690
So now is not even equal to another now.

26
00:02:06,730 --> 00:02:10,090
So we have to say that it is all rather equal.

27
00:02:10,150 --> 00:02:12,570
So it's like now but not now.

28
00:02:12,850 --> 00:02:18,930
And so the first thing the first method of dealing with now is when you find them in your database is

29
00:02:18,940 --> 00:02:24,450
to completely delete distros and you might say well that's what's the point of that.

30
00:02:24,520 --> 00:02:31,660
Well the point of that is if you have an extremely big database and it's not valuable what's inside

31
00:02:31,660 --> 00:02:32,300
the Tarot.

32
00:02:32,350 --> 00:02:39,220
So basically you have this database to manage averages maximum minimums so more you work more with aggregate

33
00:02:39,220 --> 00:02:45,130
functions and predicting data and you have so much data that deleting a couple of rows will not affect

34
00:02:45,130 --> 00:02:45,630
it.

35
00:02:45,700 --> 00:02:52,130
That's a good way to deal with it to avoid mistakes and actual miscalculations inside the algorithms.

36
00:02:52,210 --> 00:02:57,360
But of course this is like your last go to method.

37
00:02:57,550 --> 00:03:03,520
The second one is to try and figure out what game it is.

38
00:03:03,670 --> 00:03:09,480
So as you can see here we have the platform we have the game year and we have the younger.

39
00:03:09,670 --> 00:03:11,170
And we also have the publisher

40
00:03:14,190 --> 00:03:18,840
wait to check if you can find these games or not in our table.

41
00:03:18,910 --> 00:03:20,740
We have all the games released.

42
00:03:20,740 --> 00:03:28,000
So it's a very easy way to check how many games were released this year and how many games were released

43
00:03:28,000 --> 00:03:30,320
by this publisher on this platform.

44
00:03:30,370 --> 00:03:34,450
So we quickly go around this and say that and platform

45
00:03:37,250 --> 00:03:48,360
sorry Game year and platform has to be equal G-B and genre.

46
00:03:49,700 --> 00:03:52,700
Has to be equal roleplaying

47
00:03:59,900 --> 00:04:02,540
we will find out that there is only

48
00:04:06,860 --> 00:04:08,980
Sergius made a mistake here.

49
00:04:08,980 --> 00:04:15,270
So if we're on this now we'll find that there is only two games that were released this year in this

50
00:04:15,270 --> 00:04:21,610
genre or one just by far if we include publisher we can finish the search even down and get only one

51
00:04:21,610 --> 00:04:22,260
is all back.

52
00:04:22,420 --> 00:04:28,210
So all we need to do now is go to our initial research into the topic where we got the initial data

53
00:04:28,210 --> 00:04:32,950
from and just pinpointed from there or we can ask our colleagues to do that.

54
00:04:33,160 --> 00:04:34,620
And it's not a big deal.

55
00:04:34,630 --> 00:04:42,790
So if you have sufficient data to find your missing data it's all good just You'll have to waste a bit

56
00:04:42,790 --> 00:04:44,460
of time but it's all worth it in then.

57
00:04:44,670 --> 00:04:46,930
So in all this take a look at another example.

58
00:04:46,930 --> 00:04:55,080
So what we want to do is warn us like it all again from console games and then we want to say where

59
00:04:55,590 --> 00:05:01,120
and this time we will say Japanese sales is no.

60
00:05:01,150 --> 00:05:05,140
So let's see for me this will return.

61
00:05:05,140 --> 00:05:07,020
As you can see it only returns 1.

62
00:05:07,030 --> 00:05:08,030
So that's good.

63
00:05:08,140 --> 00:05:17,350
But this one does not have Japanese sales and global sales and sales percentage because it just can't

64
00:05:17,530 --> 00:05:21,480
calculate it as well as it cannot calculate global sales.

65
00:05:21,970 --> 00:05:23,540
So how do we deal with this.

66
00:05:23,590 --> 00:05:26,070
We can go online and try to find this information.

67
00:05:26,080 --> 00:05:31,760
But let's say this information was lost or deleted or archived and it's not accessible anymore.

68
00:05:32,020 --> 00:05:38,230
So and under way you can work with missing data especially when you're working with numeric values.

69
00:05:38,290 --> 00:05:40,990
You can take an average.

70
00:05:40,990 --> 00:05:46,810
So we know that a lot of games were released in 2005 but even less games were released for platform

71
00:05:46,900 --> 00:05:53,020
D.S. and less games were released for publisher of Nintendo and even less games were released with specific

72
00:05:53,370 --> 00:05:53,980
genres.

73
00:05:54,220 --> 00:05:59,710
So we can go ahead search for that and then take the average of Japanese sales for those games and put

74
00:05:59,710 --> 00:06:00,440
it in.

75
00:06:00,460 --> 00:06:05,650
But the problem here is that the amount of games that were released for all of these parameters might

76
00:06:05,650 --> 00:06:09,310
be so small that it will give us wrong average.

77
00:06:09,340 --> 00:06:16,750
So in this scenario we have two choices when it comes to working with either rose from this table is

78
00:06:16,750 --> 00:06:24,130
either we go by Game year 2005 and we get hundreds of different rolls of data and we get a very generic

79
00:06:24,130 --> 00:06:32,340
result that actually might not be true at all for this particular row or we can narrow the data down

80
00:06:32,700 --> 00:06:39,480
to a very small number of rows and that will not work either because just the data will be insufficient.

81
00:06:39,480 --> 00:06:45,030
So what we can do here in this particular database in this particular example is because we have and

82
00:06:45,030 --> 00:06:49,510
they sales use sales and other sales and all of them seem to be responding with chatter.

83
00:06:49,530 --> 00:06:55,890
So 5 million for NH sales 2 million for the sales and 9 million for you sales.

84
00:06:56,010 --> 00:07:00,120
It makes sense that Japanee sales will be somewhere on their level.

85
00:07:00,300 --> 00:07:08,370
So what we want to do here is we want to take the average of these free and put it in Japanese sales.

86
00:07:08,430 --> 00:07:14,850
I know it sounds crazy but in this particular example it actually will work because the numbers for

87
00:07:14,910 --> 00:07:19,090
these free columns and numeric columns are so similar to each other.

88
00:07:19,110 --> 00:07:24,810
So in order to get us what we want to do is again we want to work with update because we want this change

89
00:07:24,840 --> 00:07:25,950
to be consistent.

90
00:07:25,970 --> 00:07:29,790
We want this to remain in the table after we are done with it.

91
00:07:29,910 --> 00:07:37,140
So we want to update console games and then I want to say we setting Japanese sales to be and then were

92
00:07:37,140 --> 00:07:39,060
going rounding it up.

93
00:07:39,240 --> 00:07:44,790
We're rounding the number up in case because adding this all up and dividing by tree might give us a

94
00:07:44,790 --> 00:07:46,730
better long number.

95
00:07:46,740 --> 00:07:49,390
So we want to just drugged up so it looks nice and neat.

96
00:07:49,680 --> 00:08:01,430
And then when I say that we are adding sales with EU sales we have sales.

97
00:08:01,650 --> 00:08:04,720
And then we divide by free.

98
00:08:04,860 --> 00:08:11,820
And now if we do this we can actually mess up our whole database because it will basically replace Japanese

99
00:08:11,820 --> 00:08:17,070
cells in all of the games with an average of these free columns.

100
00:08:17,070 --> 00:08:19,500
And that is absolutely incorrect.

101
00:08:19,680 --> 00:08:28,780
So what we want to do is we want to say where and then we put game name and then we put equals and then

102
00:08:28,780 --> 00:08:30,670
we write the name of this game.

103
00:08:30,700 --> 00:08:32,440
So it makes no mistake

104
00:08:36,770 --> 00:08:50,080
so we just putting in the name of this game to make sure that we update only this row and outer.

105
00:08:50,100 --> 00:08:53,790
So now if we run this it should actually work.

106
00:08:53,790 --> 00:08:57,140
So always go ahead and run it as you can see it updated one.

107
00:08:57,240 --> 00:08:59,460
And that's exactly what we were looking for.

108
00:08:59,460 --> 00:09:01,120
So now let's go.

109
00:09:01,260 --> 00:09:09,260
Let's actually leave the WHERE condition and we just want to say that we select all from console games.

110
00:09:12,160 --> 00:09:13,230
And always run it.

111
00:09:15,070 --> 00:09:18,400
Sorry about that console games.

112
00:09:18,400 --> 00:09:21,530
And now we should have Japanese sales.

113
00:09:21,830 --> 00:09:27,010
And as you can see it drawn it up to even integer hole number and that's good.

114
00:09:27,010 --> 00:09:35,610
So now if you take a look at this row it makes sense because for 75 9:26 and to 0 5 it makes some of

115
00:09:35,620 --> 00:09:38,790
the Japanese cells will be somewhere between four and six.

116
00:09:39,130 --> 00:09:41,800
And that's how we work with Nelse.

117
00:09:41,800 --> 00:09:46,940
Again there's three ways of working with them to delete the row delete the data.

118
00:09:46,990 --> 00:09:48,180
Get rid of it.

119
00:09:48,190 --> 00:09:51,490
Second way is to identify exactly what you're missing.

120
00:09:51,490 --> 00:09:58,000
Narrowed down the search results so you can do extensive research and find that correct data and put

121
00:09:58,000 --> 00:10:05,860
it in or you can take an average you can combine data in the table or in that specific row or in that

122
00:10:05,860 --> 00:10:08,560
specific column and put it in.

123
00:10:08,920 --> 00:10:11,470
And this concludes our whole section of working with data.

124
00:10:11,530 --> 00:10:13,920
We work with the data types.

125
00:10:13,930 --> 00:10:16,560
Words are integers floats.

126
00:10:16,570 --> 00:10:17,860
We work with nulls.

127
00:10:17,860 --> 00:10:25,930
We updated databases we work with sorting tools order by and we've done a lot in the section and I hope

128
00:10:25,930 --> 00:10:28,380
you're very excited about what we did.

129
00:10:28,390 --> 00:10:32,560
And Propp and proud of the fact that we actually managed to do it.

130
00:10:32,860 --> 00:10:38,380
And third section in the chords become a bit more complicated step by step but they teach you more and

131
00:10:38,380 --> 00:10:46,000
more useful skills that you will be able to apply in your real world work or life to sort real world

132
00:10:46,030 --> 00:10:46,860
problems.

133
00:10:46,900 --> 00:10:49,380
And that's the best thing about it.

134
00:10:49,390 --> 00:10:54,420
I'm very excited to see in the next section and I hope I see you there.
