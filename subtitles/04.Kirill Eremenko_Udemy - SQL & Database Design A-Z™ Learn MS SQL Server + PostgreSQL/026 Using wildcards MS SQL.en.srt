1
00:00:00,640 --> 00:00:02,920
Hello and welcome back.

2
00:00:02,980 --> 00:00:09,400
Today we'll be talking about wildcards in school as you can see I have the skill set of management studio

3
00:00:09,400 --> 00:00:14,800
open up of my favorite consumer complaints database consumer complaints table ready to go.

4
00:00:14,800 --> 00:00:21,370
Let's open up an inquiry in which we'll say select all from consumer complaints who actually run it

5
00:00:21,430 --> 00:00:22,880
and see what happens.

6
00:00:22,990 --> 00:00:31,420
Now from the 65000 rows of data you already know that we can use the word function as well as and or

7
00:00:32,440 --> 00:00:34,800
to narrow the search results down.

8
00:00:34,870 --> 00:00:41,200
Now what I wanted to today is I want to use the word function and I want to use it in a bit of a different

9
00:00:41,220 --> 00:00:47,380
fashion as we saw previously used equals and only equals pretty much.

10
00:00:47,380 --> 00:00:55,830
Today we'll be working with like what like as it allows us to find results to display results to Altro

11
00:00:55,840 --> 00:01:07,360
results or any data that does not necessarily equals to certain rule does not specifically answer to

12
00:01:08,110 --> 00:01:11,560
the rectally or rather in singular fashion.

13
00:01:11,800 --> 00:01:14,470
But it has multiple possible answers.

14
00:01:14,560 --> 00:01:20,220
For example just looking for this we can already see that you have credit reporting and credit card.

15
00:01:20,380 --> 00:01:24,010
Two different products that both have the word credit in them.

16
00:01:24,100 --> 00:01:32,460
If we wanted to run this query in which will say where product name equals and then put in credit in

17
00:01:32,470 --> 00:01:40,340
apostrophe's we will get nothing and we will get nothing because no products just have the word credit

18
00:01:40,660 --> 00:01:43,120
and only the word credit in.

19
00:01:43,360 --> 00:01:50,320
Now if we say we're a product name like credit and run it well again you get nothing.

20
00:01:50,530 --> 00:01:52,210
And this is nothing to be afraid of.

21
00:01:52,210 --> 00:02:00,820
We get nothing because again there is just no words credit by themselves in this table that we're working

22
00:02:00,820 --> 00:02:01,560
with.

23
00:02:01,600 --> 00:02:12,460
This is where the percentage comes in per se sign basically says any number of characters zero to infinity

24
00:02:12,520 --> 00:02:13,970
number of characters.

25
00:02:14,050 --> 00:02:23,740
In our case we're looking for everything where product name is credit or one credit or one two three

26
00:02:23,740 --> 00:02:33,100
four or five APC DPF credit or any feeling any number of characters credit followed by any number of

27
00:02:33,100 --> 00:02:40,490
characters less executed and now we get a lot more results almost 20000 results to be exact.

28
00:02:40,510 --> 00:02:45,340
And as you can see we have credit card credit reporting and that's about it.

29
00:02:45,340 --> 00:02:48,500
So only two products that share the same work.

30
00:02:48,580 --> 00:02:54,970
But still that's two products that will never be found unless were used like in our case.

31
00:02:54,970 --> 00:03:00,690
As you can see we can go ahead and delete delete this percentage sign as we get it again.

32
00:03:00,760 --> 00:03:02,060
Nothing has changed.

33
00:03:02,260 --> 00:03:07,970
However if we leave this percentage sign and deal with this one and run it.

34
00:03:07,990 --> 00:03:10,300
Sorry about that and run it.

35
00:03:10,300 --> 00:03:11,450
Nothing will happen.

36
00:03:11,500 --> 00:03:17,430
And this is because it doesn't matter how many characters we will be looking for prior to the word credit.

37
00:03:17,500 --> 00:03:23,370
We in this particular case are more interested in what follows the word credit.

38
00:03:23,470 --> 00:03:27,950
So percentage signs are very interesting and very intriguing.

39
00:03:28,300 --> 00:03:32,980
But what can we do else where.

40
00:03:33,180 --> 00:03:35,120
Well cartes What's the other one.

41
00:03:35,220 --> 00:03:37,840
Neither one is underskirt plain and simple.

42
00:03:37,840 --> 00:03:43,660
Again if we're going to be looking for credit for example and we're just going to put it in underscores

43
00:03:43,720 --> 00:03:44,780
nothing will happen.

44
00:03:44,830 --> 00:03:46,250
Why nothing will happen.

45
00:03:46,390 --> 00:03:53,780
Well because underscore stands for one character and one character exactly remembered the results we

46
00:03:53,780 --> 00:03:54,190
got.

47
00:03:54,190 --> 00:03:58,640
One was credit reporting and one was credit card.

48
00:03:58,690 --> 00:04:06,550
So if we count the number of characters that the word credit is followed by in a credit card it will

49
00:04:06,550 --> 00:04:07,260
be five.

50
00:04:07,300 --> 00:04:16,060
Meaning that if we only put five underscores here and just come in the south for a second no worry about

51
00:04:16,060 --> 00:04:16,680
comments.

52
00:04:16,690 --> 00:04:21,820
Everything in green basically means secure will not be executed.

53
00:04:21,840 --> 00:04:27,080
It will not of income you read we will learn about the commons in a short while.

54
00:04:27,100 --> 00:04:30,150
So for now just remember that green means nothing will happen to it.

55
00:04:30,250 --> 00:04:32,950
So we're just running this inquiry right now.

56
00:04:32,950 --> 00:04:41,240
If we execute it now we're exactly five underscores it will return to us only six thousand five hundred

57
00:04:41,240 --> 00:04:42,380
dollars of data.

58
00:04:42,490 --> 00:04:45,970
All that have the product name credit card.

59
00:04:46,030 --> 00:04:52,730
None of them will have the word credit reporting because this just has more characters after it.

60
00:04:52,870 --> 00:05:02,380
As you can see it will not return to its credit report because credit report is followed by 10.

61
00:05:02,410 --> 00:05:07,300
Meaning that that they these and finished for example would have five characters.

62
00:05:07,300 --> 00:05:12,880
And then we put it percentage sign it will return to us everything again.

63
00:05:13,010 --> 00:05:17,540
But that just defeats the purpose of putting underscores.

64
00:05:17,540 --> 00:05:22,780
Now if you want to return everything that has created reporting we have to put in one.

65
00:05:23,000 --> 00:05:29,980
We have to put in one two three four five six seven eight nine 10 underscores So there are five if we

66
00:05:29,980 --> 00:05:37,370
get additional five we should only now get the results we have credit reporting and that is 1000 rows

67
00:05:37,370 --> 00:05:37,870
of data.

68
00:05:37,940 --> 00:05:40,020
Everything seems to be adding up.

69
00:05:40,130 --> 00:05:46,960
Of course what you could have done instead of just having a product name like credit and and underscores

70
00:05:47,330 --> 00:05:56,270
just said word product name like credit reporting or in our case even equals and it'll return to us

71
00:05:56,300 --> 00:05:59,280
the same amount of data at the same exact data.

72
00:05:59,460 --> 00:06:04,240
But it's good to practice because underscores become very useful.

73
00:06:04,610 --> 00:06:09,010
Before we go down though let's quickly address this question what will happen.

74
00:06:09,050 --> 00:06:12,270
We can finally delete this.

75
00:06:12,330 --> 00:06:16,070
We can finally delete this comment.

76
00:06:16,190 --> 00:06:25,520
What will happen if we just say credit from a lower AC and put a percentage say here will it return

77
00:06:25,530 --> 00:06:27,420
to those 18000 rows of data.

78
00:06:27,700 --> 00:06:28,320
It will.

79
00:06:28,420 --> 00:06:35,670
And this is due to the fact that by definition Microsoft Asgill server is case insensitive.

80
00:06:35,890 --> 00:06:43,870
So unlike postgresql Well it doesn't care in which case the word is written it will return toss all

81
00:06:43,870 --> 00:06:45,130
the results.

82
00:06:45,130 --> 00:06:49,700
Another important thing to remember is that Microsoft kills are Management Studio.

83
00:06:49,690 --> 00:06:56,920
Is case insensitive meaning that if you run credit credit percentage signed written from lower case

84
00:06:57,010 --> 00:07:00,800
c it will still return to us all the 18000.

85
00:07:00,800 --> 00:07:03,120
500 results.

86
00:07:03,150 --> 00:07:09,340
So just a very good idea to keep in mind that now coming back to underscores where they might come useful

87
00:07:09,400 --> 00:07:15,930
in this stable for example will be the zip code as we can see right now if we just display zip code

88
00:07:17,880 --> 00:07:26,290
and we just delete this and go ahead and run it I just get up by pressing a five minute here if you

89
00:07:26,330 --> 00:07:31,650
that will get 65000 rows of data just fill in with zip code.

90
00:07:31,680 --> 00:07:38,650
What is it we can see most of them have six letters or or six numbers in them.

91
00:07:38,650 --> 00:07:42,630
But some of them tend to have five numbers or even four.

92
00:07:42,690 --> 00:07:51,820
So the obvious usage of underscores here is where is it code like.

93
00:07:51,850 --> 00:07:56,140
And then we just put an underscore underscore on this underscore.

94
00:07:56,170 --> 00:08:01,040
This will give us all the zip codes that have only four numbers in them.

95
00:08:01,060 --> 00:08:04,920
As you can see only 5300 0 8 rolls of data.

96
00:08:05,080 --> 00:08:10,670
Now if you put five underscores this will give us fifty nine thousand rows of data.

97
00:08:10,900 --> 00:08:14,680
And now if we put six underscores in it will give us nothing.

98
00:08:14,680 --> 00:08:19,500
So there are only zip codes but five or four numbers but and atrophying we can do.

99
00:08:19,660 --> 00:08:21,700
And it typically works with numbers.

100
00:08:21,700 --> 00:08:28,330
The best is we can say I want to find all zip codes that begin with 75 and then are followed by free

101
00:08:28,390 --> 00:08:29,740
random numbers.

102
00:08:29,740 --> 00:08:34,600
In this case we can see that we only have one thousand three hundred twenty six rows of data and all

103
00:08:34,600 --> 00:08:36,770
of it starts with the zip code seventy five.

104
00:08:36,820 --> 00:08:38,430
And how does it go there.

105
00:08:38,470 --> 00:08:39,530
Arrogant eyes.

106
00:08:39,640 --> 00:08:45,970
Most of the time is that they follow a certain pattern where if you know the first four numbers for

107
00:08:45,970 --> 00:08:55,510
example say 7 5 1 free that difference in the last number will be on the city scale or maybe even on

108
00:08:55,510 --> 00:09:03,000
a specific district of that city the two numbers will be a bit bigger like the whole city.

109
00:09:03,060 --> 00:09:08,740
The freelance numbers will be the suburbs of the city and the numbers will be the state wide and then

110
00:09:10,150 --> 00:09:15,730
the first number you can identify the general area of the United States for America.

111
00:09:15,730 --> 00:09:22,150
So as you can see underscores may be just as valuable as percentage signs because there is just a lot

112
00:09:22,150 --> 00:09:23,650
of things going on.

113
00:09:23,650 --> 00:09:29,890
Interesting that you can apply them in a lot of different ways but they have a lot of similarity in

114
00:09:29,890 --> 00:09:34,400
the sense that they let you to narrow your search results even further now.

115
00:09:34,730 --> 00:09:40,650
So of course with this you can use and or or operators.

116
00:09:40,660 --> 00:09:42,950
There's nothing to be worried about here.

117
00:09:43,080 --> 00:09:44,560
All of it still on the table.

118
00:09:44,560 --> 00:09:47,610
Everything here is still works perfectly.

119
00:09:48,040 --> 00:09:55,840
I hope you understood the wildcards the percentage signs that underscore just like OPERATOR They all

120
00:09:56,050 --> 00:09:59,050
do a lot of good things in school.

121
00:09:59,070 --> 00:10:05,480
They all help you a lot with finding data and just specifying it and narrowing it even further down.

122
00:10:05,770 --> 00:10:10,200
And as always I hope you enjoy this lecture and I'll see you in the next one.
