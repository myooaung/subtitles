1
00:00:00,920 --> 00:00:03,710
Hello and welcome back to the course on databases.

2
00:00:03,800 --> 00:00:10,720
So we've talked about all sorts of Joines we've talked about Left-Right inner outer full outer joins

3
00:00:10,720 --> 00:00:16,730
So we've talked about cleaning up U-joint we're talking about complex Georgetown joins multiple field

4
00:00:16,730 --> 00:00:23,220
so very well you're probably very well-versed by now in the topic of choice.

5
00:00:23,270 --> 00:00:26,650
And today I have one bonus tutorial for you.

6
00:00:26,960 --> 00:00:35,950
It's about a specific type of Joines that is not always covered in educational material.

7
00:00:36,070 --> 00:00:45,320
And if you will it's a team typical secrets type of information that you get to find out eventually

8
00:00:45,330 --> 00:00:46,810
with the course of your career.

9
00:00:46,850 --> 00:00:54,040
But I do need to warn you that this is kind of an advanced topic and feel free to skip this tutorial

10
00:00:54,110 --> 00:00:58,600
and get come back to it some time later when you do come across this type of join.

11
00:00:58,760 --> 00:01:02,540
But at the same time if you feel prepared then let's go ahead and check it out.

12
00:01:02,540 --> 00:01:08,700
So today we're talking about something very interesting it's called a cross join.

13
00:01:09,170 --> 00:01:16,620
And I personally didn't find out about cross join for at least a year or more of you more.

14
00:01:16,700 --> 00:01:18,220
While I was working with.

15
00:01:18,300 --> 00:01:27,380
Well until I actually needed it in my work and then I had to you know I thought maybe it's an inner

16
00:01:27,400 --> 00:01:28,890
Joyner's an outer join.

17
00:01:28,910 --> 00:01:33,320
I was trying to figure out what exactly I need and wasn't any of those it was actually specifically

18
00:01:33,320 --> 00:01:34,840
a cross join that I needed.

19
00:01:35,180 --> 00:01:38,490
And luckily Asgill actually has this facility.

20
00:01:38,540 --> 00:01:40,220
So what is a cross join.

21
00:01:40,400 --> 00:01:47,810
Well a cross join is a is an implementation of a Cartesian product in a scale.

22
00:01:47,810 --> 00:01:53,260
I know it sounds a bit complex but at the same time it actually isn't that bad.

23
00:01:53,260 --> 00:02:00,020
So I went across a Cartesian product is at the Wikipedia page here is in mathematics a Cartesian product

24
00:02:00,020 --> 00:02:06,860
some mathematical operation that returns a set or Porlock set or simply product from multiple sets.

25
00:02:06,980 --> 00:02:12,980
That is for sets and be a container and product is a set of all ordered pairs A AB were A's from ABC

26
00:02:12,980 --> 00:02:13,420
from B.

27
00:02:13,600 --> 00:02:18,230
And the best way to illustrate this is to look at this example so if you have just think of it in terms

28
00:02:18,230 --> 00:02:25,070
of tables so if you have an ASCII table A and table B and these are the rows so x y and z are the rows

29
00:02:25,070 --> 00:02:27,400
and B These don't call them these are also rows.

30
00:02:27,410 --> 00:02:30,010
You could call a rose a one two and three.

31
00:02:30,020 --> 00:02:38,330
So the cartesian product is all possible combinations of these two sets or these two tables all possible

32
00:02:38,330 --> 00:02:39,620
combinations of the rows.

33
00:02:39,620 --> 00:02:42,660
So you've got X-1 matches up of one.

34
00:02:42,710 --> 00:02:47,770
So the first rule match up for show first of much second row first row my third row second row much

35
00:02:47,780 --> 00:02:53,030
of first second second second third third match up with first third of second third third.

36
00:02:53,030 --> 00:03:02,150
So basically you know how in a joint left right inner outer join we usually match them up so X would

37
00:03:02,150 --> 00:03:06,880
match up to maybe row two and whites row three and this one wouldn't have a match to saloon have a match

38
00:03:06,890 --> 00:03:10,370
and that's what the result would have in a Cartesian product.

39
00:03:10,400 --> 00:03:16,640
There is no on there's no parks there's no criteria for the match.

40
00:03:16,640 --> 00:03:18,300
It just matches everything.

41
00:03:18,440 --> 00:03:24,950
And that is why that's why the story is a bit advanced is that because now after so many editorials

42
00:03:24,950 --> 00:03:32,450
on joins in a row we are in the mindset of having this on part of the statement that we are specifying

43
00:03:32,450 --> 00:03:34,820
how to match the two tables.

44
00:03:34,820 --> 00:03:40,160
We want this to be equal to that and the cartesian product or in the cross join you're not actually

45
00:03:40,160 --> 00:03:46,610
going to have this part you just going to grow cross join two tables full stop and you'll do everything

46
00:03:46,610 --> 00:03:46,940
for you.

47
00:03:46,940 --> 00:03:49,470
So let's have a look at that.

48
00:03:49,680 --> 00:03:52,700
We'll start by selecting will actually let's talk through this a bit.

49
00:03:52,700 --> 00:03:59,120
We're going to take two of the we're not going to take the product prove procedure history table that's

50
00:03:59,120 --> 00:04:04,450
for sure which is going to take the owners and pets tables and was that because we want smaller tables

51
00:04:04,460 --> 00:04:10,430
this table has several thousand rows and when you look at the all all possible combinations of two tables

52
00:04:10,430 --> 00:04:16,850
were one to at least one of them is big or large you will you'll get a huge resulting table and we don't

53
00:04:16,850 --> 00:04:17,240
want that.

54
00:04:17,240 --> 00:04:19,030
We don't want to break out computer.

55
00:04:19,040 --> 00:04:28,100
So we're going to we're going to just cross join pets and owners so we're going to say select select

56
00:04:29,180 --> 00:04:31,480
star from pets.

57
00:04:31,790 --> 00:04:36,110
And here is sort of inner left outer or right or full outer join.

58
00:04:36,110 --> 00:04:41,220
We're going to say cross join two owners comma colon.

59
00:04:41,240 --> 00:04:46,760
So as you can see there's no on statement that comes afterwards as when you run this.

60
00:04:47,060 --> 00:04:50,420
Remember we have 100 pets and about eighty nine owners.

61
00:04:50,540 --> 00:04:54,460
So if you run this is going to take a while to run.

62
00:04:54,710 --> 00:04:59,330
So here we have eight thousand nine hundred so a hundred times 89 right.

63
00:04:59,360 --> 00:05:02,990
Eight thousand nine hundred different combinations.

64
00:05:02,990 --> 00:05:05,570
And what does this results show us.

65
00:05:05,570 --> 00:05:08,360
Well this was all just shows us here.

66
00:05:08,390 --> 00:05:17,460
There's Blackey the dog and he was matched to every single owner in our database right.

67
00:05:17,480 --> 00:05:18,890
No data and no table.

68
00:05:18,890 --> 00:05:28,520
So for is likely the dog matched to 89 different owners that and then read about rhumba the cat much

69
00:05:28,520 --> 00:05:36,650
too same old same again 89 owners all of them done that matched match matched then we got Simba the

70
00:05:36,650 --> 00:05:39,560
cat matched to all 89 owners and so on.

71
00:05:39,560 --> 00:05:44,210
So basically we've crossed joined two tables together.

72
00:05:44,330 --> 00:05:47,660
Now what is the purpose of a cross-trained like this makes no sense right.

73
00:05:47,660 --> 00:05:53,750
Why would you match a black dog to all these owners when a black dog actually has just one owner.

74
00:05:53,750 --> 00:05:56,990
What's the point of matching a black.

75
00:05:56,990 --> 00:05:59,100
You have all these other owners.

76
00:05:59,150 --> 00:06:09,890
Well the reason for a cross join is there are actually situations sometimes when you might need to see

77
00:06:10,040 --> 00:06:14,810
see all of the possible combinations of two of the rows of two tables.

78
00:06:14,810 --> 00:06:27,560
Right so like for example you have a set of colors like seven colors and you have a set of let's say

79
00:06:27,560 --> 00:06:35,550
a set of tiles that are used in you know a Buffle bathroom floor and you need a resulting table right.

80
00:06:35,600 --> 00:06:40,730
And for example all those columns have certain attributes and all those tiles have certain attributes

81
00:06:40,730 --> 00:06:42,110
or prices attached to them.

82
00:06:42,260 --> 00:06:48,990
So you have seven different types of tiles like made out of different materials and you want to get

83
00:06:48,990 --> 00:06:54,370
a resulting table which will combine which will have a combination of all of those colors and tiles

84
00:06:54,370 --> 00:06:54,550
right.

85
00:06:54,590 --> 00:06:57,050
So then you would do a cross join.

86
00:06:57,100 --> 00:07:08,810
And another example would be when you have for example a you know five people and or a certain number

87
00:07:08,810 --> 00:07:14,280
of people and they have each one of them has three choices right yeah.

88
00:07:14,330 --> 00:07:18,710
Each one of them has three choices that they can be like three doors that they can go through and you

89
00:07:18,710 --> 00:07:26,480
want to see the results of all possible combinations of like for each person what's if they go through

90
00:07:26,480 --> 00:07:29,690
which door how those parameters will add up.

91
00:07:29,690 --> 00:07:34,260
So you want a table with all of those and then you'll make some analysis based on that.

92
00:07:34,280 --> 00:07:40,010
The example when I needed crutches during my career was when I was analyzing some socioeconomic patterns

93
00:07:40,070 --> 00:07:42,890
in Queensland in Australia.

94
00:07:42,890 --> 00:07:49,040
So that's the north eastern part of Australia and there the whole of this region in my database was

95
00:07:49,040 --> 00:07:59,360
broken down into these little Parus which are called S-A ones and they basically each of those statistical

96
00:07:59,360 --> 00:08:08,390
authorities contains about 200 people's 200 people and in each one of them and then in each other in

97
00:08:08,390 --> 00:08:17,480
each of those statistical regions I knew that there were several levels or civil economic social economic

98
00:08:18,410 --> 00:08:26,090
levels and with different incomes basically several social classes of different incomes and so forth.

99
00:08:26,270 --> 00:08:33,980
I knew that I have like for example like five different social classes and I have 20000 or less let's

100
00:08:33,980 --> 00:08:41,180
say for argument's sake 10 different social economic classes and I have 20000 like 200000 of these little

101
00:08:41,960 --> 00:08:43,370
blocks of

102
00:08:47,000 --> 00:08:51,240
geographical blocks and that means that I need a cross join.

103
00:08:51,240 --> 00:08:57,140
So in my resulting table I need all possible combinations for each of those geographical little segments.

104
00:08:57,140 --> 00:08:59,610
I need a social economic one.

105
00:08:59,780 --> 00:09:02,470
Each of those sectors socio economic classes assigned to it.

106
00:09:02,630 --> 00:09:07,570
That means I need 10 times 200000 I mean I need two million rows in my resulting database.

107
00:09:07,580 --> 00:09:13,730
In fact it was much more so than just some numbers of my head was a long time ago but I remember that

108
00:09:13,730 --> 00:09:19,670
the resulting table had close to 900 million rolls.

109
00:09:19,670 --> 00:09:24,050
So as you can imagine like when because it had an I think maybe it had even a couple of Crossroads or

110
00:09:24,050 --> 00:09:24,390
something.

111
00:09:24,390 --> 00:09:26,180
It definitely was multiple joins.

112
00:09:26,180 --> 00:09:32,210
I don't remember how many Cross joins it had but the size of that table was immense.

113
00:09:32,420 --> 00:09:35,610
And that was you know a legitimate analysis that I had to do.

114
00:09:35,810 --> 00:09:43,700
And that's my other warning or caution recommendation to you here is that cross-bones are also complex

115
00:09:43,700 --> 00:09:49,520
or advanced not just because the way they're structured and the way they're used but also because of

116
00:09:50,000 --> 00:09:52,000
the amount of resources that they take up.

117
00:09:52,000 --> 00:09:59,180
So if you were to run across join for example of the procedure history table of itself that's 2000 times

118
00:09:59,180 --> 00:10:06,290
2000 all of a sudden you have a four median row table right from a not such a big table of 2000 rows.

119
00:10:06,290 --> 00:10:11,060
You are jumping into a four median row table and you cross join that one more time of the procedure

120
00:10:11,060 --> 00:10:18,290
history table and all of a sudden you have a billion rolls and if used incorrectly your joint can really

121
00:10:18,290 --> 00:10:24,440
hang your computer not on your computer probably your whole organization's database and hopefully you

122
00:10:24,440 --> 00:10:30,590
know your organization has protection mechanisms against it so they'll they'll just cut your session

123
00:10:30,590 --> 00:10:36,800
and then you'll get a call from the database administrator saying hey you shouldn't do that but just

124
00:10:36,800 --> 00:10:38,100
be careful of it.

125
00:10:38,510 --> 00:10:47,570
And be warned that a cross join does grow very very quickly once you start working with larger tables.

126
00:10:47,570 --> 00:10:48,070
So we go.

127
00:10:48,110 --> 00:10:49,650
That's what a cross join is.

128
00:10:49,670 --> 00:10:57,680
And hopefully now even if you don't go running into your work and using it right away maybe one day

129
00:10:57,680 --> 00:11:03,350
when you do come across this situation when you need it you'll remember this tutorial and you will know

130
00:11:03,410 --> 00:11:09,290
that what you need might be a Christian and I hope you to this Tauriel I look for you next time.

131
00:11:09,290 --> 00:11:10,960
Until then happy analyzing.
