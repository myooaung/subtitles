WEBVTT
1
00:00:00.360 --> 00:00:05.670
Hello and welcome back to the course on databases in today's tutorial we're going to define and learn

2
00:00:05.670 --> 00:00:08.420
about two new terms which we haven't come across before.

3
00:00:08.430 --> 00:00:15.810
These are the prime and non-prime attributes now will need these terms to understand better and actually

4
00:00:15.810 --> 00:00:17.700
operate in the space of normalization.

5
00:00:17.700 --> 00:00:24.180
So before we proceed with the tutorials on that subject we're going to take some time to really understand

6
00:00:24.180 --> 00:00:28.260
these two new terms and let that knowledge sink in.

7
00:00:28.260 --> 00:00:30.310
So let's dive straight into it.

8
00:00:30.660 --> 00:00:36.540
But before we proceed there's one thing that you need to make sure of and that is that you're entirely

9
00:00:36.540 --> 00:00:42.260
comfortable with the terms candidate key and functional dependency.

10
00:00:42.330 --> 00:00:47.820
So those terms were previously in the course and if you're not entirely comfortable with either of those

11
00:00:47.820 --> 00:00:55.910
terms and I highly recommend jumping back to that tutorial and reviewing it and understanding a candidate

12
00:00:55.910 --> 00:01:01.080
what a candidate key is and what a functional dependency is and then coming back to this tutorial to

13
00:01:01.080 --> 00:01:02.460
proceed further.

14
00:01:02.460 --> 00:01:07.560
So here we've got an example of a table that's going to help us illustrate the terms prime and non-prime

15
00:01:07.620 --> 00:01:08.710
attributes.

16
00:01:08.850 --> 00:01:14.520
First thing that we're going to do is let's identify all of the candidate keys in this table and this

17
00:01:14.520 --> 00:01:17.620
table is actually only one candidate key which is a Platy.

18
00:01:17.640 --> 00:01:27.990
So basically what that means is that employee I.D. this can this attribute this column a uniquely identifies

19
00:01:28.570 --> 00:01:29.820
any any of the rules.

20
00:01:29.820 --> 00:01:39.450
So basically knowing the employee ID or all of these roles in here they have a unique employee ID and

21
00:01:40.400 --> 00:01:42.900
the employee I.D. identifies these.

22
00:01:42.900 --> 00:01:48.130
And so if you think of it in human terms as if you have an employee I.D. If you're working at this company

23
00:01:48.130 --> 00:01:55.080
you have an employee I.D. or you're in H.R. and you're you are given as an employee I.D. and you need

24
00:01:55.080 --> 00:01:58.980
to look up information that's exactly how you're going to address this table you're going to go in and

25
00:01:58.980 --> 00:02:03.190
search for that employee idea and then you'll find out the name the department I.D. and department name.

26
00:02:03.480 --> 00:02:10.140
And a quick caveat here is that we're going off the premises that an employee can only work in one department

27
00:02:10.150 --> 00:02:17.010
so basically in this table we don't have you know we don't have duplicate employees were the same employee

28
00:02:17.010 --> 00:02:22.860
twice working for different departments so it's a given that an employee can only work for one department

29
00:02:23.220 --> 00:02:27.120
and that makes employee ID the only candidate key in this table.

30
00:02:27.150 --> 00:02:33.570
So now no know another we know the candidate keys which there is only one of it's very easy to understand

31
00:02:33.570 --> 00:02:39.030
what prime and non-prime attributes are basically prime attributes are all those attributes or columns.

32
00:02:39.050 --> 00:02:46.250
That's as a synonym for columns a prime attributes are all those columns that are parts of candidates.

33
00:02:46.290 --> 00:02:51.840
So in this case we only have one prime attribute and that simply ID and non-prime attributes are all

34
00:02:51.840 --> 00:02:56.890
of the columns or attributes that are not part of any candidate.

35
00:02:56.940 --> 00:03:00.710
In this case we have three employee name department ID and department name.

36
00:03:00.990 --> 00:03:01.730
So that was easy.

37
00:03:01.780 --> 00:03:09.280
It's very simple it's a very simple concept once you are comfortable with the term of a candidate.

38
00:03:10.180 --> 00:03:12.030
OK next let's try another example.

39
00:03:12.030 --> 00:03:18.490
So here we've got another table which is a bit more tricky here.

40
00:03:18.560 --> 00:03:20.750
We know we need to find the candidate.

41
00:03:20.880 --> 00:03:21.110
Right.

42
00:03:21.110 --> 00:03:22.320
So what is a candidate.

43
00:03:22.680 --> 00:03:23.480
Let's have a look.

44
00:03:23.700 --> 00:03:31.600
Well a candidate keeps a column or a group of columns that uniquely identifies the rows in the data

45
00:03:31.660 --> 00:03:31.950
set.

46
00:03:31.960 --> 00:03:34.260
Right so let's say tournament right.

47
00:03:34.260 --> 00:03:37.990
Can we say that the tournament by itself is a candidate.

48
00:03:38.280 --> 00:03:42.230
Well not really because tournaments repeat right.

49
00:03:42.390 --> 00:03:48.900
As the years pass tournaments repeat and here we've got Indiana Invitational Indiana notational and

50
00:03:48.900 --> 00:03:54.750
therefore if you were to say that this is your this is a candidate key meaning that it's a uniquely

51
00:03:54.750 --> 00:04:00.690
identify as a rose you would be wrong because if you just look at this table look up a role in this

52
00:04:00.690 --> 00:04:08.880
table based on the tournament versus Indiana notational you will get two rows and rows corresponding

53
00:04:08.880 --> 00:04:10.950
to that value.

54
00:04:11.160 --> 00:04:13.730
Also it doesn't stop there.

55
00:04:13.740 --> 00:04:19.200
We don't just look at the rows that we have in the table we look at the whole logic of the table so

56
00:04:19.200 --> 00:04:23.910
even if we didn't have this row we would still be able to extrapolate.

57
00:04:23.910 --> 00:04:32.430
And you know just through logic say that we have to be honest here that in the future as we add more

58
00:04:32.430 --> 00:04:38.610
records in the future years you know Cleveland open will repeat again and therefore the tournament is

59
00:04:38.610 --> 00:04:44.340
not a tournament column is not a candy cane or any of these tournaments can repeat again of the year

60
00:04:44.350 --> 00:04:46.830
so by itself it's not a candidate.

61
00:04:47.160 --> 00:04:47.430
All right.

62
00:04:47.430 --> 00:04:49.400
So is the your column a candidate.

63
00:04:49.440 --> 00:04:55.080
Again it's not because in one year you can have several tournaments for example 1999 here there were

64
00:04:55.080 --> 00:04:58.870
three tournaments and probably they could it could be more maybe more will be added.

65
00:04:59.310 --> 00:05:00.490
So that's not a candidate.

66
00:05:00.690 --> 00:05:04.600
And this table's tournament winners so maybe the winner is a candidate key.

67
00:05:04.620 --> 00:05:11.080
Nope it's not because a person can be a winner in multiple tournaments in multiple different years.

68
00:05:11.090 --> 00:05:13.150
So definitely not that winner.

69
00:05:13.170 --> 00:05:14.360
A date of birth.

70
00:05:14.460 --> 00:05:17.430
Also not a how can a kid it make sense.

71
00:05:17.430 --> 00:05:17.740
Right.

72
00:05:17.850 --> 00:05:19.580
So if you.

73
00:05:19.570 --> 00:05:24.630
The way to think about it is kind of the best way to approach these problems because now we have to

74
00:05:24.630 --> 00:05:29.070
look at combinations we could look at year plus winner or when a plus when and date of birth year plus

75
00:05:29.070 --> 00:05:32.090
tournament and then maybe look at Commission of three and so on.

76
00:05:32.100 --> 00:05:42.930
But the safest way to look at it is to look at all look for the reason or the purpose of this table

77
00:05:42.930 --> 00:05:47.190
the purpose of this table to show us tournament winners and tournament winners for what.

78
00:05:47.190 --> 00:05:53.100
For tournaments and tournaments if you think about it or happen only once per year.

79
00:05:53.100 --> 00:06:01.290
So the Indiana intensional happens once every year Cleveland open also happens once a year and one masters

80
00:06:01.830 --> 00:06:03.540
also happens once a year and so on.

81
00:06:03.540 --> 00:06:08.560
So basically if you take the combination of these two that will be a candidate Keino.

82
00:06:08.670 --> 00:06:09.080
Right.

83
00:06:09.210 --> 00:06:16.060
And then any other combinations of columns for a year and winner that's not a candidate.

84
00:06:16.230 --> 00:06:19.120
And you could just check this on your own tournament and winner.

85
00:06:19.130 --> 00:06:19.860
That's not a candidate.

86
00:06:19.890 --> 00:06:23.970
And also just stems from Again the purpose of this table.

87
00:06:24.230 --> 00:06:29.000
It's send that you are an winner cannot be the candidate key just by looking at the purpose of the table

88
00:06:29.240 --> 00:06:35.660
because this table talks about tournaments and then there winners rather than the winners in the years.

89
00:06:35.660 --> 00:06:39.680
So you can further investigate that and look a different combination of columns.

90
00:06:39.680 --> 00:06:46.070
But basically the only candidate here key here is the combination of these two cards tournament and

91
00:06:46.280 --> 00:06:47.420
year.

92
00:06:47.420 --> 00:06:54.980
And this means that our prime attributes are tournament and year and our non-prime attributes our winner

93
00:06:55.040 --> 00:06:56.490
and winner date of birth.

94
00:06:56.510 --> 00:07:02.040
Because these two columns are not in any candidate key.

95
00:07:02.270 --> 00:07:02.590
All right.

96
00:07:02.590 --> 00:07:10.350
So hopefully that's all pretty straightforward stuff so far and let's have a look at another example.

97
00:07:10.480 --> 00:07:18.020
We've got an example a table for electric trees brush models and we've got calls manufacture a model

98
00:07:18.320 --> 00:07:21.210
model full name and manufacturer country.

99
00:07:21.380 --> 00:07:27.980
So I'm going to challenge you to pose this video and think about this table in the terms that we were

100
00:07:27.980 --> 00:07:34.220
thinking about the previous of the previous table and try to identify what the prime attributes are

101
00:07:34.490 --> 00:07:36.410
and what's the non-prime attributes.

102
00:07:36.430 --> 00:07:41.670
And I'll give you a hint that there is actually a bit of a catch in this table.

103
00:07:41.740 --> 00:07:44.320
It's a bit even more trickier than the previous one.

104
00:07:44.540 --> 00:07:47.770
So if you'd like to take the challenge and a video now.

105
00:07:48.080 --> 00:07:56.600
Otherwise I'm going to go ahead and explain the way I would think about this challenge and how I would

106
00:07:56.600 --> 00:07:57.550
go about solving.

107
00:07:57.560 --> 00:07:58.900
So let's have a look.

108
00:08:00.200 --> 00:08:01.190
Electric toothbrush.

109
00:08:01.220 --> 00:08:07.370
So obviously you can see that for say ex-prime and forcer ultra clean.

110
00:08:07.370 --> 00:08:14.010
So basically model full name is a combination of manufacturer and model and probably the person who

111
00:08:14.010 --> 00:08:19.240
designed this database or designed this table was actually going for that exact goal for exactly that

112
00:08:19.250 --> 00:08:25.130
they wanted to create a column that's going to be the primary key of the table.

113
00:08:25.130 --> 00:08:30.710
So this is going to identify every single role and maybe they even specified that as a primary key in

114
00:08:31.220 --> 00:08:32.530
the table itself.

115
00:08:32.840 --> 00:08:36.350
But that doesn't prevent these two.

116
00:08:36.350 --> 00:08:41.360
The combination of these two from being a candidate key as well.

117
00:08:41.360 --> 00:08:46.950
So in reality in this table we actually have a candidate key manufacturer and model.

118
00:08:47.090 --> 00:08:49.790
And we have the candidate key model full name.

119
00:08:49.790 --> 00:08:51.980
So both of these are valid.

120
00:08:51.980 --> 00:08:53.230
So this is a valid candidate.

121
00:08:53.270 --> 00:08:55.360
And the combination of these two is about.

122
00:08:55.360 --> 00:09:00.470
Q So if you think about it every so this column uniquely identify every role but also the combination

123
00:09:00.470 --> 00:09:03.510
of these two columns unique identifies every row.

124
00:09:03.830 --> 00:09:11.070
And this last column manufacturer country is not a candidate key or it's not part of any candidate.

125
00:09:11.390 --> 00:09:14.540
And you can check that by looking a few combinations.

126
00:09:14.540 --> 00:09:22.580
And basically what that means is that we've got three prime attributes and one non prime attribute.

127
00:09:22.760 --> 00:09:31.000
So basically to sum up prime attributes are attributes or columns which belong to any candidate key

128
00:09:31.190 --> 00:09:37.760
and non-parametric beauts are columns which don't belong or so primarily as our columns which belong

129
00:09:37.760 --> 00:09:43.460
to at least one candidate key and could be any candidate key non-prime attributes are columns which

130
00:09:43.730 --> 00:09:46.600
don't belong to any candidate.

131
00:09:47.000 --> 00:09:53.780
All right so hopefully that's enough practice to let that knowledge sink in and from here we are ready

132
00:09:53.780 --> 00:09:58.580
to proceed with the theory of normalization which is going to be very exciting.

133
00:09:58.580 --> 00:10:00.520
Can't wait to get started.

134
00:10:00.830 --> 00:10:02.860
And I look forward to seeing you then.

135
00:10:02.870 --> 00:10:04.550
Until next time happy analyzing.
