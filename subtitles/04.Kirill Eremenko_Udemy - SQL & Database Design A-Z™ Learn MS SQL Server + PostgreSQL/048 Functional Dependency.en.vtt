WEBVTT
1
00:00:00.330 --> 00:00:05.820
Hello and welcome back to there we're going to be talking about functional dependency functional dependencies

2
00:00:05.880 --> 00:00:13.080
are very important and ask you well because the main reason for using Eskew and structured databases

3
00:00:13.530 --> 00:00:20.440
is to sign dependencies between different relations and just general data.

4
00:00:20.760 --> 00:00:27.690
If you can connect several tables together them on of information you can get from analyzing it.

5
00:00:27.720 --> 00:00:33.050
Ken grew up rapidly compared to just analyzing these free tables on their own.

6
00:00:33.450 --> 00:00:40.560
So dependencies Akure when an attribute or set of attributes identifies particular value of and under

7
00:00:40.560 --> 00:00:49.650
it read the most common example of dependencies is foreign key because you have one table that depends

8
00:00:49.650 --> 00:00:53.100
on another table to get all the information from the table.

9
00:00:53.130 --> 00:00:59.280
And if your foreign key is compromised or another table is corrupted then you run into problems.

10
00:00:59.340 --> 00:01:04.950
But as long as it keeps great database maintenance you will never run into that problem and you will

11
00:01:04.980 --> 00:01:07.020
always get the results you want.

12
00:01:07.020 --> 00:01:12.990
So when designing an efficient database that the word redundancy identifying the Benghazi's help us

13
00:01:12.990 --> 00:01:19.510
to ensure every column in a table is dependent on the primary key and have the primary key as simple

14
00:01:19.510 --> 00:01:20.300
as possible.

15
00:01:20.550 --> 00:01:26.610
So when you're developing databases don't forget that two tables not only depend on the chapter tables

16
00:01:26.610 --> 00:01:29.720
depend on themselves to maintain data integrity.

17
00:01:29.880 --> 00:01:31.660
So let's go ahead and take a look at this table.

18
00:01:31.710 --> 00:01:37.710
Here we have a relation consisting of four attributes and five to you both as you can see here we have

19
00:01:37.710 --> 00:01:40.650
some duplicate values in several rows.

20
00:01:40.860 --> 00:01:45.060
But overall this database looks pretty good.

21
00:01:45.060 --> 00:01:49.200
Now here's the task we need to identify dependencies inside of this table.

22
00:01:49.410 --> 00:01:52.260
So what column is depending on what column.

23
00:01:52.440 --> 00:02:00.210
If we go from right to left and we take a look at subject result column doesn't depend on anything else.

24
00:02:00.230 --> 00:02:06.720
Doesn't Martin that studen got depend on his name or the subject he took or his student ID.

25
00:02:06.780 --> 00:02:07.450
Of course not.

26
00:02:07.500 --> 00:02:11.400
So subject resolved is not related to anything in this relation.

27
00:02:11.430 --> 00:02:17.730
It will probably relate to the Assignment table if we have one now subject ID.

28
00:02:17.820 --> 00:02:22.950
Again it does not depend on student name or student ID or subject result.

29
00:02:22.950 --> 00:02:31.770
It will most probably depend on a table called faculty or university even where we have all the subject

30
00:02:31.770 --> 00:02:36.640
names and older subject curriculum and all the subject purposes.

31
00:02:36.900 --> 00:02:44.280
And then we'll see dependencies subject he will most probably be connected to a database named faculty

32
00:02:44.550 --> 00:02:51.790
or even university in which will have subject names subject purposes and subject curriculums.

33
00:02:52.110 --> 00:02:57.390
Now if we take a look at the name here we see something interesting because the name does not depend

34
00:02:57.450 --> 00:03:00.910
on which subject to send fix or the result he gets.

35
00:03:01.080 --> 00:03:09.750
But student name depends on student Adey because university assign us this unique identifying number

36
00:03:10.190 --> 00:03:17.630
to easier to manipulate the database and track our records our name directly corresponds to student

37
00:03:17.630 --> 00:03:18.720
ID.

38
00:03:18.750 --> 00:03:19.740
So now what.

39
00:03:19.740 --> 00:03:26.120
Depends on what is student ID dependent on you to name or is student name dependent on the name.

40
00:03:26.250 --> 00:03:30.160
Well here's a very simple exercise that will answer a question.

41
00:03:30.510 --> 00:03:32.850
Let's pretend that we're going to change her name.

42
00:03:32.880 --> 00:03:38.180
I can always change my name legally and get it printed on my new student card.

43
00:03:38.310 --> 00:03:40.110
Will that change my student ID.

44
00:03:40.110 --> 00:03:41.470
No of course not.

45
00:03:41.550 --> 00:03:45.060
Because I have not changed for the database.

46
00:03:45.060 --> 00:03:48.700
I might have a different name but I'm still enrolled in the same subject.

47
00:03:48.800 --> 00:03:51.630
I was still enrolled with this university.

48
00:03:51.630 --> 00:03:54.500
Now when can a changed student ID.

49
00:03:54.540 --> 00:04:00.390
Well if I want to change student ID I will have to either drop out or finish the university and then

50
00:04:00.390 --> 00:04:06.660
when I am going to apply again for this university or master's program I might be assigned a new student

51
00:04:06.670 --> 00:04:13.350
ID but the only reason for that happening is because my old record would have been deleted meaning that

52
00:04:13.350 --> 00:04:18.680
student ID does not depend on anything and we just found our dependency in this table.

53
00:04:18.780 --> 00:04:22.140
That student ID dictate the student name.

54
00:04:22.440 --> 00:04:28.980
So as he can see it wasn't that hard but it would have been much much harder if we already created the

55
00:04:28.980 --> 00:04:35.160
database and we never bothered to assign a primary key or even to think about data integrity inside

56
00:04:35.160 --> 00:04:36.060
the table.

57
00:04:36.060 --> 00:04:39.640
So this is again and I cannot stress it enough.

58
00:04:39.900 --> 00:04:47.790
It's very important in as well in structured database to define all of your dependencies to define all

59
00:04:47.790 --> 00:04:54.990
of your rules and all types of data you are going to be using before you started creating it in a database

60
00:04:55.050 --> 00:05:03.080
design process because otherwise you will just have a very part time fixing it all up and you'll probably

61
00:05:03.080 --> 00:05:05.270
end up just creating a whole new table.

62
00:05:05.630 --> 00:05:07.070
I hope you enjoyed this lecture.

63
00:05:07.070 --> 00:05:11.230
It was a very fun lecture and this whole section is a lot of fun.

64
00:05:11.240 --> 00:05:19.070
It's nice to learn a bit of Fiori why we do all the practice and just get your mind straight on what

65
00:05:19.070 --> 00:05:23.010
you want to do when you're creating another base and what you want in a wide.

66
00:05:23.060 --> 00:05:29.680
So again make sure you have a plan before designing another base and everything else will fall in place.

67
00:05:29.690 --> 00:05:33.220
I hope you enjoyed this lecture and I'll see you in the next one.
