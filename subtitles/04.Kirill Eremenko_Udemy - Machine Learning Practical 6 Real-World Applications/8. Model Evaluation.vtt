WEBVTT

00:00.510 --> 00:02.780
Hello everyone and welcome to the section.

00:02.790 --> 00:05.260
All right let's go and evaluate our model.

00:05.310 --> 00:14.130
So the first step is that we are going to simply run our model which is our teen model and run a method

00:14.160 --> 00:16.600
evaluate using our testing data.

00:16.630 --> 00:19.290
So we're going to use our test and why test data.

00:19.440 --> 00:20.110
OK.

00:20.130 --> 00:26.420
And that would simply return our evaluation and then we're going to use many evaluation that is maybe

00:26.500 --> 00:30.740
going to return the loss and we can return our accuracy too.

00:30.750 --> 00:35.640
So when we just want to print the accuracy which is simply the second element within our evaluation

00:35.640 --> 00:36.120
turn.

00:36.420 --> 00:41.010
So here which is going to print test accuracy and let's take a look let's see how can our our model

00:41.040 --> 00:41.930
actually perform.

00:42.210 --> 00:47.510
So if we don't it's that would tell me OK my test accuracy is around 91 percent.

00:47.510 --> 00:48.060
All right.

00:48.060 --> 00:49.500
That's actually not bad.

00:49.500 --> 00:56.070
The key point or key element here to differentiate is that we for the during training we reach 95 percent

00:56.070 --> 00:57.030
accuracy.

00:57.060 --> 01:01.770
However in testing reach our 91 percent accuracy which makes sense why.

01:01.770 --> 01:05.200
Because just imagine trate testing data.

01:05.220 --> 01:09.960
This kind of data set are images that the model hasn't seen before ever before.

01:10.010 --> 01:10.480
OK.

01:10.650 --> 01:16.320
Which is pretty good given that you know we we just you know like develop the entire code and literally

01:16.320 --> 01:18.780
look around 50 50 lines of codes pretty much.

01:18.930 --> 01:21.490
And it's very very very simple format.

01:21.490 --> 01:22.250
All right.

01:22.380 --> 01:25.680
The next step is we're going to do the prediction.

01:25.710 --> 01:26.590
So let's play.

01:26.590 --> 01:28.340
For example our confusion matrix.

01:28.350 --> 01:33.150
Let's see how can we how can we actually do evaluation to our model at the moment.

01:33.150 --> 01:37.260
So the next step is that we're going to use our product classes.

01:37.500 --> 01:44.330
So what we're going to do that we're going to again use our models and that model and model that we're

01:44.330 --> 01:47.400
going to use method could predict classes.

01:47.420 --> 01:48.030
Okay.

01:48.090 --> 01:52.550
And then in the past hour our tests which are testing that we return our predictive classes.

01:52.570 --> 01:54.280
OK let's run it.

01:54.570 --> 01:55.230
All right.

01:55.260 --> 01:58.520
And let's actually view our product cluster to see what's happening there.

01:58.800 --> 02:04.730
So tell me OK these are actual Classen and they predicted for the testing dataset 1 2 8 8 whatever.

02:04.740 --> 02:06.420
You know these are the different samples.

02:06.420 --> 02:14.070
The key element is now we wanted to print kind of a grid that can tell us OK this is my image this is

02:14.070 --> 02:17.180
my true label and this is my predicted label.

02:17.330 --> 02:18.200
OK.

02:18.320 --> 02:18.690
All right.

02:18.690 --> 02:21.030
I'm not going to go through I'm not going to write the entire code.

02:21.030 --> 02:26.140
Or just going to simply walk you through each of the lines of code step by step.

02:26.220 --> 02:29.350
So we're going to do that we're going to pick 25 images.

02:29.400 --> 02:29.660
OK.

02:29.670 --> 02:31.350
So we're going to take five.

02:31.470 --> 02:34.080
Create a great again five by five.

02:34.080 --> 02:39.420
We're going to use the subplots comment using the L and W and we're going to create let's say a figure

02:39.420 --> 02:44.540
size 12 by 12 and here afterwards we're going to do a Raval afterwards.

02:44.550 --> 02:51.840
We're going to flatten our axes array and then next step that we're going to do for a loop simply from

02:51.840 --> 02:57.520
0 up till up till the twenty five which is the overall number of samples of images.

02:57.720 --> 03:03.720
Every time we're going to show our image reshaped in a 28 by 28 format.

03:03.850 --> 03:12.190
OK you said a title to be prediction class and to class in which our predictive class cannot predict

03:12.220 --> 03:21.240
be class with index I and the Y test as well which is kind of our our true value or to label for outracing

03:21.320 --> 03:21.850
data.

03:21.910 --> 03:24.810
So simply put this is our true value.

03:24.810 --> 03:26.030
This is our prediction.

03:26.050 --> 03:26.580
All right.

03:26.580 --> 03:31.980
Hopefully hopefully that you know both of them will to be pretty the same and that means we are doing

03:31.980 --> 03:32.550
pretty well.

03:32.570 --> 03:38.970
All right and then we're going to get access to all of this just to disable all the the number of like

03:38.970 --> 03:43.440
you know pixels or the dimensions simply because we are planning a lot of images and then we're going

03:43.440 --> 03:47.140
to adjust the basic the width here to become point five.

03:47.400 --> 03:48.940
It's really straightforward really simple.

03:48.960 --> 03:50.870
Let's run it.

03:51.240 --> 03:54.720
All right looks very interesting.

03:54.720 --> 03:58.540
So here for example we saw a shirt the prediction class was 0.

03:58.710 --> 03:59.640
TRUE class was zero.

03:59.640 --> 04:00.420
That's fine.

04:00.720 --> 04:01.200
OK.

04:01.220 --> 04:05.110
So like a trouser OK prediction class one to class one.

04:05.310 --> 04:06.380
OK all of them look great.

04:06.390 --> 04:08.550
Actually this one looks a little a little off.

04:08.550 --> 04:13.040
So here our prediction class was for However we're too close with three.

04:13.050 --> 04:13.780
All right.

04:13.800 --> 04:16.830
Pretty much most of them look look fine.

04:16.860 --> 04:17.250
All right.

04:17.250 --> 04:18.840
I'm just getting really quick here here.

04:18.840 --> 04:19.990
This one is wrong.

04:20.190 --> 04:20.790
OK.

04:20.940 --> 04:27.760
So here we have our prediction class was for our class was six and that's pretty much it.

04:28.080 --> 04:28.370
All right.

04:28.380 --> 04:34.350
That's just you know we kind of went inside just got like you know bunch of samples twenty five images

04:34.620 --> 04:39.120
and we plot them here just to get a sense of OK that even like know the answer make sense or not.

04:39.270 --> 04:39.840
OK.

04:40.170 --> 04:43.170
Let's go and check out our confusion matrix.

04:43.170 --> 04:43.680
OK.

04:44.040 --> 04:50.970
So the next step is we're going to again from as killer and pull our confusion matrix and then we're

04:50.970 --> 04:56.130
going to run again confusion matrix why test with a predictor class.

04:56.130 --> 04:56.780
OK.

04:57.120 --> 05:03.080
And that was our confusion matrix S.M. and then we're going to create a figure with certain dimensions

05:03.500 --> 05:10.610
and we create a heat map using the seaborne library to simply show us the number of samples that has

05:10.610 --> 05:14.070
been correctly classified a number of samples that have been misclassified.

05:14.210 --> 05:14.780
All right.

05:15.080 --> 05:16.230
Let's run this.

05:16.300 --> 05:16.980
All right.

05:17.000 --> 05:18.110
Looks interesting.

05:18.410 --> 05:20.690
So that's basically our confusion matrix.

05:20.690 --> 05:25.310
For those of you guys not familiar with the confusion matrix that's kind of a visual representation

05:25.610 --> 05:30.780
that gives us like you know one stop shop to assess our performance.

05:30.800 --> 05:37.440
So here this is basically like you know on the other rows showing the predictive class that's our predictions.

05:37.640 --> 05:39.520
Okay that's our true value.

05:39.620 --> 05:44.300
If our predictions matches our true value we're just going to mention here the number of samples that

05:44.300 --> 05:46.970
have been classified correctly.

05:46.970 --> 05:53.620
So here we have apelin six you know like iPad 2 which is you know what I don't like it.

05:53.630 --> 05:57.420
Eight hundred and sixty samples that sex class classify correctly.

05:57.500 --> 06:01.140
And we keep going these are like you know like there are a lot of samples and classify correctly.

06:01.460 --> 06:06.900
However there is actually a lot of samples have been classified miscalled I collect 12 or 12 which is

06:06.900 --> 06:08.030
a very high number.

06:08.080 --> 06:12.090
Right here we have like you know a bunch of samples.

06:12.110 --> 06:17.060
We have 90 samples there's classified misclassified 94 misclassified and so on.

06:17.060 --> 06:18.250
All right.

06:18.480 --> 06:23.000
Just to give you an overview of you know like how many classes have been classified correctly and all

06:23.000 --> 06:24.870
my class have been classified correctly.

06:24.880 --> 06:25.450
OK.

06:25.680 --> 06:29.580
The next step is if one or two to plot our reports.

06:29.870 --> 06:30.590
OK.

06:30.950 --> 06:32.950
Again we'll get home as Killer metrics.

06:32.960 --> 06:35.050
We're going to import classification report.

06:35.050 --> 06:39.420
So to plot the confusion in the matrix when we import the confusion matrix.

06:39.740 --> 06:44.360
However from the classification report from Esky learned of metrics we going to import ossification

06:44.370 --> 06:47.670
report number of classes 10 and hidden.

06:47.690 --> 06:53.900
And then here we're going to simply get all the target names and afterwards we're going to print or

06:53.900 --> 07:00.290
our classification report using our weightiest predictive class and all the target names.

07:00.290 --> 07:01.370
Let's take a look.

07:01.700 --> 07:02.250
All right.

07:02.270 --> 07:03.430
That's pretty interesting.

07:03.680 --> 07:06.920
So here we have all our classes so simply here.

07:07.130 --> 07:14.720
We just wrote no law class 0 class 1 class 2 and so on simply we just did a for loop that goes from

07:14.870 --> 07:21.420
one OK or from 0 up till the overall number of classes which is you know like 10.

07:21.520 --> 07:22.300
All right.

07:22.470 --> 07:26.880
So that's pretty much just to plot you know the class which class we are we're in.

07:26.910 --> 07:32.220
And he has shown the precision which is simply showing showing how many of these class have been classified

07:32.220 --> 07:34.810
correctly see with the class 8.

07:34.830 --> 07:37.120
It's actually been classified pretty well.

07:37.320 --> 07:41.580
Just to give you an overview of what these classes classes are going to go up.

07:41.940 --> 07:44.750
Let's copy that just you know kind of reminded for us.

07:44.970 --> 07:48.350
Let's go down to copy that here.

07:48.630 --> 07:55.530
And if you guys recalled so here you'll find that class 5 which is sandal has been classified correctly

07:55.530 --> 07:57.660
which makes sense because it's very easy.

07:57.660 --> 08:03.450
You know even for like you know laka like a kid's toy simply like you know classify it case was very

08:03.450 --> 08:03.970
easy.

08:03.990 --> 08:08.070
The images were very clear to me at least for class 5.

08:08.100 --> 08:10.210
It was again sandals.

08:10.230 --> 08:12.990
OK that's fine for a class 7.

08:13.110 --> 08:15.660
That was the sneakers actually pretty clear as well.

08:15.660 --> 08:19.030
Class 8 the bag was very clear and cold boot was very clean.

08:19.040 --> 08:24.400
However if you go to class for example 6 it was 77 percent.

08:24.450 --> 08:25.740
That was really bad.

08:25.860 --> 08:29.220
That was messing up pretty much on the performance which is the shirt.

08:29.490 --> 08:30.210
OK.

08:30.630 --> 08:36.240
Which kind of you know like make sense because it was little bit like difficult to use or you can easily

08:36.240 --> 08:37.130
mess up the shirt.

08:37.130 --> 08:42.600
Let's say with a pullover for example it wasn't very very clear at least you know like in the images

08:43.300 --> 08:43.720
right.

08:43.740 --> 08:47.200
The trouser was actually very easy to classify just like 99 percent.

08:47.480 --> 08:47.780
OK.

08:47.790 --> 08:49.090
Which makes sense.

08:49.090 --> 08:49.740
All right.

08:49.740 --> 08:51.180
That's pretty much all what I have.

08:51.180 --> 08:55.310
I hope you guys enjoyed this case study and see you in future studies.
