WEBVTT

00:06.110 --> 00:09.540
We're going to go over the problem using machine learning.

00:09.550 --> 00:18.330
Look at the that said that we're going to be using cursive real anonymize credit card transactions that

00:18.330 --> 00:25.240
data set contains over three hundred thousand transactions all with the overspending labels.

00:25.430 --> 00:30.850
You can see that we have only numbers in the Goans see Kespin anonymize.

00:30.950 --> 00:33.840
That means that we don't know which other than section.

00:33.840 --> 00:37.120
So I would suggest they use those bilocation.

00:37.160 --> 00:40.580
How long has he been one of your users.

00:40.580 --> 00:47.170
Instead we keep values now make all BALLIs that try to represent that same information.

00:47.510 --> 00:53.330
We need to protect their users privacy when we're building systems such justice.

00:53.840 --> 00:59.960
If you expect that that set you will be able to see other columns which include that on such an amount

01:00.010 --> 01:01.310
on the glass.

01:01.310 --> 01:04.260
We'll do that in a few minutes.

01:04.280 --> 01:11.090
Remember each one of the rows represents a certain section with although Karthick guard a newsroom formation

01:11.090 --> 01:19.250
available Our objective is to with the classifier that given a new zone section can tell if it's for

01:19.250 --> 01:24.320
Otherland or not with a corresponding confidence.

01:24.320 --> 01:31.810
We're not going to build an expert system or rules based system that could for example say if they is

01:31.850 --> 01:38.830
from China but that credit card was issued in the U.S. then that section must be for Otherland.

01:39.050 --> 01:45.680
We're going to build both a deep learning network to try to do so and we're going to apply more traditional

01:45.720 --> 01:47.600
machine learning algorithms.

01:47.690 --> 01:50.460
So I just run them for us.

01:50.600 --> 01:54.260
What kind of deep neural network are we going to be.

01:54.590 --> 02:00.580
We could use an alt and go there but we're going to use our stack of dense layers instead.

02:00.810 --> 02:04.550
We're not going to go out and golders in this tutorial.

02:04.550 --> 02:10.460
She'll see that we will get good results without using a more complex network.

02:10.460 --> 02:15.230
If you don't know any of the terms we help us so far don't worry.

02:15.230 --> 02:16.890
We're just getting started.

02:16.970 --> 02:20.090
We'll explain everything later.

02:20.180 --> 02:26.470
The first question we need to answer we're building a classifier is which our classes.

02:26.730 --> 02:30.170
This will determine our network's output.

02:30.440 --> 02:36.910
Given our problem we could identify different sort of classes depending on the fraud risk.

02:36.920 --> 02:44.480
For example we could cover fraudulent transactions risky transactions that leader manwell probation

02:44.750 --> 02:48.410
or just plain simple fraudulent transactions.

02:48.470 --> 02:56.810
In our case we'll just work with two possible labels or classifier will Cowsill label if the transaction

02:56.840 --> 03:04.800
is non fraudulent and on one label if the transaction is fraudulent that's pretty much it for this section.

03:04.800 --> 03:06.370
See you in the Expedia.

03:06.500 --> 03:10.340
We will get familiar with the tools that we're going to be using.
