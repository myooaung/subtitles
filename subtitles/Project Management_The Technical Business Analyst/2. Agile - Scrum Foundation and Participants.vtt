WEBVTT
1
00:00:01.026 --> 00:00:04.091
Before we talk about how the technical BA fits into the agile world,

2
00:00:04.091 --> 00:00:10.076
let's quickly go over the agile foundation and their participants.

3
00:00:10.076 --> 00:00:13.400
Here are the basic attributes and qualities of agile and

4
00:00:13.400 --> 00:00:16.076
Scrum to set the foundation for this module.

5
00:00:16.076 --> 00:00:21.056
First, agile delivers software incrementally and iteratively.

6
00:00:21.056 --> 00:00:24.026
Incrementally means we have a process in which software

7
00:00:24.026 --> 00:00:26.076
is developed and delivered in parts.

8
00:00:26.076 --> 00:00:31.076
Each part or increment represents a completely working piece of functionality.

9
00:00:31.076 --> 00:00:34.046
The size of the increment is not really important,

10
00:00:34.046 --> 00:00:37.036
but is in fact fully coded and tested.

11
00:00:37.036 --> 00:00:41.116
Now, iterative process is one that makes progress through successive refinement.

12
00:00:41.116 --> 00:00:41.658
For example,

13
00:00:41.658 --> 00:00:45.403
in the first iteration we have a web page that you can search

14
00:00:45.403 --> 00:00:49.036
for courses at a university with maybe only three search filters

15
00:00:49.036 --> 00:00:51.056
and four columns of returned data.

16
00:00:51.056 --> 00:00:53.675
And maybe in the next iteration we have a few more

17
00:00:53.675 --> 00:00:57.026
complex filters and more course attributes.

18
00:00:57.026 --> 00:00:59.116
As you can see, we are developing the page in parts,

19
00:00:59.116 --> 00:01:02.076
and its function grows with each iteration.

20
00:01:02.076 --> 00:01:05.046
Value-driven versus plan-driven.

21
00:01:05.046 --> 00:01:09.426
Agile is often referred to as a value-driven approach as opposed to the

22
00:01:09.426 --> 00:01:12.086
traditional waterfall approach that is plan-driven.

23
00:01:12.086 --> 00:01:16.106
Hence, iterations need to provide value versus an arbitrary planning date,

24
00:01:16.106 --> 00:01:19.096
forcing the features that may not provide needed value.

25
00:01:19.096 --> 00:01:22.036
These are very different models indeed.

26
00:01:22.036 --> 00:01:23.245
Also with agile,

27
00:01:23.245 --> 00:01:26.835
the value of features drives the order of the work

28
00:01:26.835 --> 00:01:28.116
to be developed and delivered.

29
00:01:28.116 --> 00:01:32.329
Items with the most value, as determined by the business,

30
00:01:32.329 --> 00:01:34.026
are prioritized the highest.

31
00:01:34.026 --> 00:01:36.803
And for each iteration or sprint the items are reprioritized

32
00:01:36.803 --> 00:01:39.106
since business can always be changing.

33
00:01:39.106 --> 00:01:43.441
And the agile principles based on the Agile Manifesto drive

34
00:01:43.441 --> 00:01:46.066
the way the work itself is performed.

35
00:01:46.066 --> 00:01:51.116
Most importantly to me is for you to be flexible and adaptable at all times.

36
00:01:51.116 --> 00:01:55.406
Nothing that I will be discussing in this module is cast in concrete,

37
00:01:55.406 --> 00:01:57.106
life is not that simple.

38
00:01:57.106 --> 00:01:58.956
With these foundations in mind,

39
00:01:58.956 --> 00:02:02.106
they will act as the underpinnings of an agile project.

40
00:02:02.106 --> 00:02:05.116
And as with all projects, they have a lifecycle.

41
00:02:05.116 --> 00:02:08.116
Now, let's explore that.

42
00:02:08.116 --> 00:02:10.116
Agile/Scrum process groups.

43
00:02:10.116 --> 00:02:14.850
A process group simply denotes a collection of one or more

44
00:02:14.850 --> 00:02:19.036
processes that accomplish something, in our case an agile project.

45
00:02:19.036 --> 00:02:19.538
Now,

46
00:02:19.538 --> 00:02:23.195
with traditional project manager methodologies we had

47
00:02:23.195 --> 00:02:26.066
five process groups: initiation, planning,

48
00:02:26.066 --> 00:02:29.383
execution, performance, monitoring, and lastly,

49
00:02:29.383 --> 00:02:30.046
closure.

50
00:02:30.046 --> 00:02:31.591
So with agile we have four.

51
00:02:31.591 --> 00:02:33.298
The first is projects.

52
00:02:33.298 --> 00:02:35.086
Projects have releases.

53
00:02:35.086 --> 00:02:39.096
That is, a project will be made up of a series of product releases.

54
00:02:39.096 --> 00:02:42.086
There are multiple iterations per release,

55
00:02:42.086 --> 00:02:45.066
just as there are multiple releases per project.

56
00:02:45.066 --> 00:02:49.056
Also in Scrum terminology, an iteration is known as a sprint.

57
00:02:49.056 --> 00:02:50.420
And, of course, daily work,

58
00:02:50.420 --> 00:02:54.096
which is what the team does every day within and iteration or sprint.

59
00:02:54.096 --> 00:02:59.046
Several days of work make up an iteration or sprint, usually two weeks.

60
00:02:59.046 --> 00:02:59.378
Now,

61
00:02:59.378 --> 00:03:02.711
let's check out the participants and their roles and

62
00:03:02.711 --> 00:03:06.086
expectations in the agile process.

63
00:03:06.086 --> 00:03:10.046
Here are the typical roles of an agile/Scrum team.

64
00:03:10.046 --> 00:03:14.061
An agile or Scrum team has a slightly different composition than a

65
00:03:14.061 --> 00:03:17.046
traditional project with three specific roles.

66
00:03:17.046 --> 00:03:19.056
The first, the product owner.

67
00:03:19.056 --> 00:03:22.109
Now, they represent a line of business, steering committee,

68
00:03:22.109 --> 00:03:26.116
department or other segments of the user or customer communities.

69
00:03:26.116 --> 00:03:27.234
The product owner,

70
00:03:27.234 --> 00:03:31.096
who is the personal responsible for managing the business requirements,

71
00:03:31.096 --> 00:03:34.086
and those requirements are also known as the product backlog.

72
00:03:34.086 --> 00:03:38.046
The product owner has a very key and critical role

73
00:03:38.046 --> 00:03:40.116
of gathering the requirements, ordering,

74
00:03:40.116 --> 00:03:43.036
and prioritizing the requirements,

75
00:03:43.036 --> 00:03:46.056
and ascertain the value of each to the business.

76
00:03:46.056 --> 00:03:46.283
Also,

77
00:03:46.283 --> 00:03:50.056
the product owner needs to express the items clearly so that they

78
00:03:50.056 --> 00:03:52.046
are understandable by the development team,

79
00:03:52.046 --> 00:03:54.066
so they know what to work on next.

80
00:03:54.066 --> 00:03:57.096
Development teams are cross-functional, but working concurrently.

81
00:03:57.096 --> 00:03:59.927
I want to emphasize this since in the traditional

82
00:03:59.927 --> 00:04:01.956
project model typically code is developed,

83
00:04:01.956 --> 00:04:02.796
then tested,

84
00:04:02.796 --> 00:04:05.700
and then moved into preproduction environments as

85
00:04:05.700 --> 00:04:08.036
separate teams under processes.

86
00:04:08.036 --> 00:04:12.056
This team is working together concurrently throughout the development process.

87
00:04:12.056 --> 00:04:14.734
Hence, the development team can include testers,

88
00:04:14.734 --> 00:04:16.233
designers, operations engineers,

89
00:04:16.233 --> 00:04:20.745
business analysts or other skills or capabilities required,

90
00:04:20.745 --> 00:04:23.036
in addition to developers.

91
00:04:23.036 --> 00:04:23.396
And lastly,

92
00:04:23.396 --> 00:04:26.252
in the Scrum world the Scrum Master is facilitating

93
00:04:26.252 --> 00:04:30.096
the adherence to the Scrum process, and the team is self-directed,

94
00:04:30.096 --> 00:04:33.036
that is without a team leader.

95
00:04:33.036 --> 00:04:37.377
What I have seen so often in the absence of a Scrum Master is a dev

96
00:04:37.377 --> 00:04:41.056
team leader or a tech leader that still provides the agile/Scrum

97
00:04:41.056 --> 00:04:44.056
process guidance along with team leadership.

98
00:04:44.056 --> 00:04:46.076
I actually like this model quite a bit.

99
00:04:46.076 --> 00:04:52.076
Now let's add a little more detail to the development team on the next slide.

100
00:04:52.076 --> 00:04:56.036
Here are the typical roles I have seen as part of the dev team.

101
00:04:56.036 --> 00:04:59.116
Software developers, certainly the most typical members of the team.

102
00:04:59.116 --> 00:05:03.036
This includes front-end developers, back-end developers,

103
00:05:03.036 --> 00:05:06.116
database experts, and many other developer-like skills.

104
00:05:06.116 --> 00:05:06.556
Creatives.

105
00:05:06.556 --> 00:05:12.116
These team members design the look and feel, artwork, and the user experience.

106
00:05:12.116 --> 00:05:15.416
Usually the creatives hand off their output to the software

107
00:05:15.416 --> 00:05:18.036
developers to actually implement in HTML,

108
00:05:18.036 --> 00:05:20.026
style sheets, things like that.

109
00:05:20.026 --> 00:05:23.036
QA engineers, who will be doing the testing of the product,

110
00:05:23.036 --> 00:05:26.046
whereas the software engineers will do the unit testing.

111
00:05:26.046 --> 00:05:30.056
The QA engineer will do end-to-end full integration testing.

112
00:05:30.056 --> 00:05:31.556
Data or database engineers.

113
00:05:31.556 --> 00:05:35.056
They will obviously work with data, designing databases,

114
00:05:35.056 --> 00:05:38.086
moving data, transforming data, and things like that.

115
00:05:38.086 --> 00:05:41.036
Dev lead and/or project manager.

116
00:05:41.036 --> 00:05:41.295
Typically,

117
00:05:41.295 --> 00:05:46.076
I have seen that one software developer is acting as the dev or technical lead,

118
00:05:46.076 --> 00:05:49.548
and he or she is more senior in experience and the

119
00:05:49.548 --> 00:05:51.086
team likes and appreciates that role.

120
00:05:51.086 --> 00:05:53.106
I threw in project manager also.

121
00:05:53.106 --> 00:05:56.106
They are not part of the agile/Scrum team per se,

122
00:05:56.106 --> 00:06:01.046
but act as a liaison between the team and IT management,

123
00:06:01.046 --> 00:06:03.116
whereas the Scrum team works with the product owner

124
00:06:03.116 --> 00:06:06.036
in the business for requirements.

125
00:06:06.036 --> 00:06:08.478
This then provides a communication channel to IT in

126
00:06:08.478 --> 00:06:11.086
terms of how the project's doing, budgets,

127
00:06:11.086 --> 00:06:12.212
schedules, milestones,

128
00:06:12.212 --> 00:06:18.046
and other more pure management artifacts that are required by IT management.

129
00:06:18.046 --> 00:06:19.264
Next, system architects.

130
00:06:19.264 --> 00:06:24.026
Many times on complex projects system architects are required as well.

131
00:06:24.026 --> 00:06:27.026
This list I've just presented is from my own experiences.

132
00:06:27.026 --> 00:06:30.046
But I have typically not seen technical BAs,

133
00:06:30.046 --> 00:06:32.086
or in fact business analysts in general,

134
00:06:32.086 --> 00:06:34.106
as regular mediums of agile teams.

135
00:06:34.106 --> 00:06:37.503
That role seemed to be played by the developer or to

136
00:06:37.503 --> 00:06:39.066
a greater extent by the dev lead.

137
00:06:39.066 --> 00:06:40.596
This to me is an error,

138
00:06:40.596 --> 00:06:49.000
we definitely need BAs and/or technical BAs as an integral part of the dev team for agile/Scrum development.

