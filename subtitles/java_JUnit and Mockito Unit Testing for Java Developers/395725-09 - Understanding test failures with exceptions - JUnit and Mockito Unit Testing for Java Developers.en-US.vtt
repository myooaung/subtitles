WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.240
So in this video,

00:00:03.240 --> 00:00:05.660
we're going to explore what test failure looks like in the i D.

00:00:05.660 --> 00:00:07.190
And that's when a test fails.

00:00:07.190 --> 00:00:08.810
So as you saw in the previous video,

00:00:08.810 --> 00:00:10.510
when a test passes any successful,

00:00:10.510 --> 00:00:11.200
we get green.

00:00:11.200 --> 00:00:13.050
But we can also have read as well.

00:00:13.050 --> 00:00:13.710
So,

00:00:13.710 --> 00:00:14.280
for example,

00:00:14.280 --> 00:00:14.650
here,

00:00:14.650 --> 00:00:26.270
if I simulate an exception being thrown and then rerun,

00:00:26.270 --> 00:00:33.340
you can see here we now have read on the test failed.

00:00:33.340 --> 00:00:34.580
It says the test failed.

00:00:34.580 --> 00:00:36.840
One of one test failed on.

00:00:36.840 --> 00:00:41.600
The reason being is that we have this runtime exception here on this would be a full stack

00:00:41.600 --> 00:00:42.070
trace,

00:00:42.070 --> 00:00:46.270
which will enable you to pinpoint the exact point where the unit says failure occurred on

00:00:46.270 --> 00:00:48.950
the sequence of method calls which led up to that test failure.

00:00:48.950 --> 00:00:54.270
Now the reason for this is because we didn't set this test up to expect a runtime exception

00:00:54.270 --> 00:00:54.270
.

00:00:54.270 --> 00:00:58.500
So Jay Unit takes the reasonably fair approach are viewing An exception,

00:00:58.500 --> 00:01:00.160
which occurs during its execution,

00:01:00.160 --> 00:01:00.950
is a test failure.

00:01:00.950 --> 00:01:01.900
However,

00:01:01.900 --> 00:01:05.980
if you had a test in which you specifically wanted to ensure that that an exception,

00:01:05.980 --> 00:01:07.460
most run for example,

00:01:07.460 --> 00:01:12.110
supposing you testing some validation on your testing the validation routine with bad input

00:01:12.110 --> 00:01:12.110
.

00:01:12.110 --> 00:01:12.600
Then,

00:01:12.600 --> 00:01:14.760
because you're testing the validation routine with bad input,

00:01:14.760 --> 00:01:18.440
you would expect that the classy attesting would throw some kind of validation exception

00:01:18.440 --> 00:01:19.510
back out to the user.

00:01:19.510 --> 00:01:20.660
And so in that case,

00:01:20.660 --> 00:01:25.150
you'd want to tell J Unit they're actually expecting an exception on You can do this by

00:01:25.150 --> 00:01:27.090
using an adult into a test,

00:01:27.090 --> 00:01:27.460
or rather,

00:01:27.460 --> 00:01:29.240
Electra parameter for the test annotation,

00:01:29.240 --> 00:01:30.160
which is expected.

00:01:30.160 --> 00:01:33.470
So if you put expected equals on that a class,

00:01:33.470 --> 00:01:40.340
then this signifies to jail unit that joining that test,

00:01:40.340 --> 00:01:42.560
it's expected that it's gonna get a runtime exception,

00:01:42.560 --> 00:01:43.530
and that's a good thing,

00:01:43.530 --> 00:01:45.050
and therefore it will pass the test.

00:01:45.050 --> 00:01:46.780
So if I ruin this now,

00:01:46.780 --> 00:01:52.650
you can see here the test pass.

00:01:52.650 --> 00:01:53.420
It's once again.

00:01:53.420 --> 00:01:54.070
Of course,

00:01:54.070 --> 00:01:56.690
this throw new runtime exception is just contrived,

00:01:56.690 --> 00:01:59.500
and we will never put this snippet of card inside a unit test.

00:01:59.500 --> 00:01:59.950
Rather,

00:01:59.950 --> 00:02:02.750
this exception will be thrown out from the clash of testing,

00:02:02.750 --> 00:02:03.700
but nevertheless,

00:02:03.700 --> 00:02:07.720
I wanted to show you that just to say about the expected annotation parameter to test,

00:02:07.720 --> 00:02:09.710
since that's the way that we can actually validate that we're getting back.

00:02:09.710 --> 00:02:14.000
The exceptions that we expect if the FBI were testing is designed to throw them back under

00:02:14.000 --> 00:02:15.050
that particular test case.

00:02:15.050 --> 00:02:16.100
But anyway,

00:02:16.100 --> 00:02:18.660
now you know about test failure on exceptions in jail unit,

00:02:18.660 --> 00:02:20.980
which should be in a good position now to move forwards.

