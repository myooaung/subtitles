WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.030
in this section we're going to the hands on.

00:00:02.030 --> 00:00:05.790
I walked to the creation of some production code and use the jamon AARP going to test it.

00:00:05.790 --> 00:00:07.150
As we do this,

00:00:07.150 --> 00:00:09.890
we're going to explain J unit features in a just in time way.

00:00:09.890 --> 00:00:10.270
So,

00:00:10.270 --> 00:00:10.710
in other words,

00:00:10.710 --> 00:00:14.520
explain the features as we go along the need to use them in this way there explained in

00:00:14.520 --> 00:00:15.250
context.

00:00:15.250 --> 00:00:16.720
Now the cut.

00:00:16.720 --> 00:00:19.080
We're going to look at its simple and this is by design.

00:00:19.080 --> 00:00:21.930
We're not looking to white tons of complex unit tests,

00:00:21.930 --> 00:00:24.990
which tests usually complex pieces of functionality in this section.

00:00:24.990 --> 00:00:25.710
No,

00:00:25.710 --> 00:00:29.310
we just want to take easy to walk steps where we can understand what's happening with your

00:00:29.310 --> 00:00:33.830
unit as we go along and focus on Julian itself instead of devoting our brain cells to

00:00:33.830 --> 00:00:34.920
understanding some tricky,

00:00:34.920 --> 00:00:35.460
complex,

00:00:35.460 --> 00:00:38.360
contrived code by learning about jamon in this way,

00:00:38.360 --> 00:00:40.140
by taking those easy to walk steps,

00:00:40.140 --> 00:00:42.200
you'll get good master of the core concepts,

00:00:42.200 --> 00:00:43.310
which you can then apply.

00:00:43.310 --> 00:00:46.770
So those complex pieces of code you want to test in your projects as a later date,

00:00:46.770 --> 00:00:48.420
but we have to understand the basics.

00:00:48.420 --> 00:00:48.850
First,

00:00:48.850 --> 00:00:52.380
let's jump in now and start writing some unit tests with J in it

