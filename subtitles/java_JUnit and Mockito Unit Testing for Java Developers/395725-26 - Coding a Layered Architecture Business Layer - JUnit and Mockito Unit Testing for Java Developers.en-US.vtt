WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.970
in the last video,

00:00:02.970 --> 00:00:04.990
we started to think about how to cut up the controller,

00:00:04.990 --> 00:00:08.220
and that was responsible for sending the user to our home page.

00:00:08.220 --> 00:00:09.270
If passable is correct.

00:00:09.270 --> 00:00:13.020
Auto log in page If the password wasn't CORRECT So that's what Controller did.

00:00:13.020 --> 00:00:13.620
However,

00:00:13.620 --> 00:00:17.790
it doesn't know itself has no knowledge about anything to do with actually authenticating

00:00:17.790 --> 00:00:18.240
the user.

00:00:18.240 --> 00:00:18.690
In other words,

00:00:18.690 --> 00:00:20.320
the business of checking the password,

00:00:20.320 --> 00:00:23.600
checking if the user exists looking the user up in a database.

00:00:23.600 --> 00:00:26.330
That kind of thing is not the responsibility of the logging controller.

00:00:26.330 --> 00:00:30.430
So what's gonna happen is what normally happens is that a controllable delegate to a

00:00:30.430 --> 00:00:32.050
service in a different layer.

00:00:32.050 --> 00:00:44.750
So let's suppose we have on authentication service which looking controllers gonna use.

00:00:44.750 --> 00:00:52.090
It's just great this quickly in the same package.

00:00:52.090 --> 00:00:52.650
It's point.

00:00:52.650 --> 00:00:53.640
Typically,

00:00:53.640 --> 00:00:54.680
these are being different packages,

00:00:54.680 --> 00:00:55.740
but we don't worry about that for now.

00:00:55.740 --> 00:00:56.670
This that's all fine.

00:00:56.670 --> 00:00:58.450
I go back to our longing controller,

00:00:58.450 --> 00:01:03.190
So now we have an authentication service which logging controller can use,

00:01:03.190 --> 00:01:04.250
So let's use it them.

00:01:04.250 --> 00:01:12.270
So we said before the if se authentication service,

00:01:12.270 --> 00:01:15.180
which is self indicate,

00:01:15.180 --> 00:01:18.010
use name password.

00:01:18.010 --> 00:01:21.390
So supposing we have a method of authentication service called authentic.

00:01:21.390 --> 00:01:21.730
It.

00:01:21.730 --> 00:01:23.530
It's excuse name takes a password,

00:01:23.530 --> 00:01:27.050
and if the password matches for that user after its looked it up in some database,

00:01:27.050 --> 00:01:28.200
presumably then it returns.

00:01:28.200 --> 00:01:28.560
True.

00:01:28.560 --> 00:01:29.120
Otherwise,

00:01:29.120 --> 00:01:33.490
it returns false return force in the case that the password is not the correct one or the

00:01:33.490 --> 00:01:34.230
user doesn't exist,

00:01:34.230 --> 00:01:34.810
for example,

00:01:34.810 --> 00:01:36.120
that we can do this.

00:01:36.120 --> 00:01:41.400
Turn the homepage otherwise,

00:01:41.400 --> 00:01:43.470
never in the else block.

00:01:43.470 --> 00:01:45.660
Then the culture authenticate returned false.

00:01:45.660 --> 00:01:51.450
So we kicked the user out and said the use of back to the log in page.

00:01:51.450 --> 00:02:02.310
It's just quickly create this method for the sake of demonstration.

00:02:02.310 --> 00:02:15.360
Let's just hard code a password fabricate APRA for now so it won't bother about the use An

00:02:15.360 --> 00:02:17.460
infidel which is basically checking passports.

00:02:17.460 --> 00:02:19.910
If the password is equal to the hard coded password,

00:02:19.910 --> 00:02:22.110
African abre thank you can get him.

00:02:22.110 --> 00:02:25.460
Obviously,

00:02:25.460 --> 00:02:26.460
this is not secure,

00:02:26.460 --> 00:02:28.190
and you wouldn't do this in an application.

00:02:28.190 --> 00:02:29.930
But it just for the purpose of a demonstration,

00:02:29.930 --> 00:02:30.350
of course.

00:02:30.350 --> 00:02:34.740
So the authentication service now often to get any user as long as they type in the

00:02:34.740 --> 00:02:37.210
password ab rocket APRA also weaken compact.

00:02:37.210 --> 00:02:41.150
This as well So if we just get rid of those comments day,

00:02:41.150 --> 00:02:44.860
we can basically turn this into a turn real operate,

00:02:44.860 --> 00:02:47.750
which would be nicer so we can just return.

00:02:47.750 --> 00:02:53.750
If that's true,

00:02:53.750 --> 00:02:56.650
it's on home.

00:02:56.650 --> 00:02:58.150
Otherwise,

00:02:58.150 --> 00:03:01.440
return log in.

00:03:01.440 --> 00:03:10.050
Just get rid of those that's a little bit neater.

00:03:10.050 --> 00:03:12.550
So the Logging Controller 1000 Authentication Service,

00:03:12.550 --> 00:03:13.490
which is passed into it,

00:03:13.490 --> 00:03:17.810
and it delegates to this authentication service to check the credentials past him in this

00:03:17.810 --> 00:03:18.810
getting just the password.

00:03:18.810 --> 00:03:23.040
So now we should start to see this layering that we've got in place and the fact that

00:03:23.040 --> 00:03:26.480
different responsibilities belong to the different classes in the different layers.

00:03:26.480 --> 00:03:28.570
So we'll explore this further in the next video.

00:03:28.570 --> 00:03:30.200
When we look at cutting up the data,

00:03:30.200 --> 00:03:31.800
let's see that now.

