WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.960
in this video,

00:00:02.960 --> 00:00:05.510
we're going to create a brand new project which uses J on it.

00:00:05.510 --> 00:00:06.430
Mosquito on.

00:00:06.430 --> 00:00:08.030
We can use this in the next few videos,

00:00:08.030 --> 00:00:10.110
then to demonstrate how to use monkey to itself.

00:00:10.110 --> 00:00:10.950
It's less jumping.

00:00:10.950 --> 00:00:17.480
It's the first off quick new project We've seen this before,

00:00:17.480 --> 00:00:17.870
but I just did.

00:00:17.870 --> 00:00:18.500
Ultra fest.

00:00:18.500 --> 00:00:37.990
Let's give it a simple group I d artifact I d go to next Click Finish.

00:00:37.990 --> 00:00:54.780
Just sent this to be able to import leap appear at in the jail it dependency and underneath

00:00:54.780 --> 00:00:56.760
we're gonna add the mosquito dependency.

00:00:56.760 --> 00:01:03.300
So 330 spying for now,

00:01:03.300 --> 00:01:05.650
just 20 that up.

00:01:05.650 --> 00:01:12.450
I know if I go across into external libraries,

00:01:12.450 --> 00:01:14.730
we'll see here that we've got Jane.

00:01:14.730 --> 00:01:15.780
It would just included,

00:01:15.780 --> 00:01:18.430
which is brought in hem crest on.

00:01:18.430 --> 00:01:22.710
We also have more Kizer call 330 and some of the dependencies it's brought in as well.

00:01:22.710 --> 00:01:25.700
Which of these bite buddy ones here and ob gyn icis.

00:01:25.700 --> 00:01:29.280
Those are basically responsible for doing a little bit of buying corn magic behind the

00:01:29.280 --> 00:01:29.820
scenes,

00:01:29.820 --> 00:01:33.290
which allows mosquito to do its thing and to be able to create these mock objects

00:01:33.290 --> 00:01:35.850
programmatically in Carter's We'll see sort of it.

00:01:35.850 --> 00:01:40.180
So lucky to call is the men library that you want to bring in when you're writing Mark

00:01:40.180 --> 00:01:42.550
Object burst unit tests where Makita.

00:01:42.550 --> 00:01:43.870
And once you've done that,

00:01:43.870 --> 00:01:45.160
you'll be able to access its FBI.

00:01:45.160 --> 00:01:45.930
So let's do that.

00:01:45.930 --> 00:01:46.100
Now.

00:01:46.100 --> 00:01:50.450
Let's just go into the project structure into source test Java,

00:01:50.450 --> 00:01:57.690
which is put a package in here home the job easily.

00:01:57.690 --> 00:02:02.170
10 Most mosquito My up.

00:02:02.170 --> 00:02:02.660
That'll do.

00:02:02.660 --> 00:02:12.320
You just copy that into the could board corresponding package in the production sauce

00:02:12.320 --> 00:02:13.140
folder as well,

00:02:13.140 --> 00:02:19.040
which will use later when we write the production classes we're gonna test on now.

00:02:19.040 --> 00:02:21.630
I'll just put a quick test class in here now,

00:02:21.630 --> 00:02:23.810
just so we can see mosquito to check it set up.

00:02:23.810 --> 00:02:24.150
Okay,

00:02:24.150 --> 00:02:27.820
I'll just call it up test for now.

00:02:27.820 --> 00:02:28.550
That's fine.

00:02:28.550 --> 00:02:29.910
So this point now,

00:02:29.910 --> 00:02:32.450
we should be able to use mosquito in at least in buckets therapy.

00:02:32.450 --> 00:02:36.670
I Now let's just create a test method and just try to create a mark object using mosquito

00:02:36.670 --> 00:02:40.510
just to make sure that we've got the mosquito FBI set up correctly and accessible to us.

00:02:40.510 --> 00:02:42.350
So if we jump into here,

00:02:42.350 --> 00:02:46.450
what a test method in.

00:02:46.450 --> 00:02:49.210
I wouldn't call it.

00:02:49.210 --> 00:02:49.720
Test it.

00:02:49.720 --> 00:02:50.480
Like I said,

00:02:50.480 --> 00:02:52.530
the test method is the relevant.

00:02:52.530 --> 00:02:53.570
Now we're gonna delete this.

00:02:53.570 --> 00:02:53.930
Anyway,

00:02:53.930 --> 00:02:55.760
we just want to make sure that we've got mosquito set up.

00:02:55.760 --> 00:02:56.100
OK,

00:02:56.100 --> 00:02:57.400
now we can access the FBI,

00:02:57.400 --> 00:02:59.410
so let's just call into mosquito.

00:02:59.410 --> 00:03:03.680
You can see here when we type mosquito intelligent ideas given a suggestion which is the

00:03:03.680 --> 00:03:06.310
class in the organ mosquito package Target mosquitoes.

00:03:06.310 --> 00:03:10.250
The men package for mosquito on the mosquito class itself is the man entry point into the

00:03:10.250 --> 00:03:10.850
framework.

00:03:10.850 --> 00:03:17.660
If we just go monkey to adopt mock and we can basically now pass it a class to mock said

00:03:17.660 --> 00:03:26.690
Calenda from Java Util And we have to give a class reference for that and we get back

00:03:26.690 --> 00:03:27.350
something that,

00:03:27.350 --> 00:03:28.870
as far as the compiler is aware,

00:03:28.870 --> 00:03:31.250
is an instance of the class time we passed him.

00:03:31.250 --> 00:03:34.450
So I just put my calendar.

00:03:34.450 --> 00:03:36.010
He holds mosquito.

00:03:36.010 --> 00:03:39.550
Don't mark that has put the test annotation in here as well.

00:03:39.550 --> 00:03:41.750
And now if we run that,

00:03:41.750 --> 00:03:47.300
that's fine.

00:03:47.300 --> 00:03:49.770
And we just put a break point here and we'll just see what we've actually got.

00:03:49.770 --> 00:03:51.410
So if we debunk this,

00:03:51.410 --> 00:03:54.920
them can see here more calendar.

00:03:54.920 --> 00:03:55.990
It's a counter type,

00:03:55.990 --> 00:03:58.520
but it's actually Mark Eaton mark.

00:03:58.520 --> 00:04:02.880
And at this stage we know that we've set up mosquito correctly and we start creating those

00:04:02.880 --> 00:04:04.250
mark objects like we've been here.

00:04:04.250 --> 00:04:06.860
I will explain that further in the next videos.

