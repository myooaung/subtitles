WEBVTT
1
00:00:00.005 --> 00:00:01.003
- [Instructor] For this video,

2
00:00:01.003 --> 00:00:04.000
we're going to continue using our custom GitHub accounts

3
00:00:04.000 --> 00:00:07.000
that everyone has hopefully created.

4
00:00:07.000 --> 00:00:08.009
If you need to validate your code

5
00:00:08.009 --> 00:00:11.004
against the lab files for this video,

6
00:00:11.004 --> 00:00:16.009
we're using 0404 begin and 0404 end.

7
00:00:16.009 --> 00:00:19.006
Let's go ahead and open, IntelliJ,

8
00:00:19.006 --> 00:00:22.005
continuing to use project that we've loaded

9
00:00:22.005 --> 00:00:25.004
from our last video,

10
00:00:25.004 --> 00:00:27.009
we have the project loaded from the home directory

11
00:00:27.009 --> 00:00:31.008
as you can see here, and let's go down to our terminal,

12
00:00:31.008 --> 00:00:36.003
we're going to type Git switch main

13
00:00:36.003 --> 00:00:38.004
go back to the main directory.

14
00:00:38.004 --> 00:00:44.004
We'll type, Git fetch origin,

15
00:00:44.004 --> 00:00:47.000
to update our local repository

16
00:00:47.000 --> 00:00:49.002
with the changes that we've pushed

17
00:00:49.002 --> 00:00:53.005
and then we'll type Git pull origin.

18
00:00:53.005 --> 00:00:54.009
This will sync our local copy

19
00:00:54.009 --> 00:00:57.009
with all of the changes merged from GitHub.

20
00:00:57.009 --> 00:01:00.009
Now to keep all of our code features separate

21
00:01:00.009 --> 00:01:02.001
and our branches separate,

22
00:01:02.001 --> 00:01:05.000
we're going to create another branch for this video

23
00:01:05.000 --> 00:01:08.008
called war workflow, AWS.

24
00:01:08.008 --> 00:01:16.000
Inside of our terminal we'll type, Git checkout dash B war

25
00:01:16.000 --> 00:01:22.000
underscore workflow underscore AWS, hit enter.

26
00:01:22.000 --> 00:01:29.003
Git push dash U origin war

27
00:01:29.003 --> 00:01:35.001
underscore workflow underscore AWS and hit enter.

28
00:01:35.001 --> 00:01:41.006
This will create the branch war workflow, AWS in GitHub.

29
00:01:41.006 --> 00:01:44.005
Okay, let's go ahead and open,

30
00:01:44.005 --> 00:01:46.003
now our browser's back up again,

31
00:01:46.003 --> 00:01:50.001
we'll go to the AWS console

32
00:01:50.001 --> 00:01:54.004
and we're going to create a new application and environment.

33
00:01:54.004 --> 00:02:01.007
So look on elastic beanstalk, look on create application,

34
00:02:01.007 --> 00:02:03.002
for the application name,

35
00:02:03.002 --> 00:02:12.005
we'll call this spring boot broad web app,

36
00:02:12.005 --> 00:02:17.000
for the platform we'll select Tomcat.

37
00:02:17.000 --> 00:02:21.002
We'll leave it on Tomcat eight five with Corretto 11.

38
00:02:21.002 --> 00:02:23.003
At the bottom, we'll leave the defaults as they are

39
00:02:23.003 --> 00:02:26.000
and click create application.

40
00:02:26.000 --> 00:02:28.005
After this is done, feel free to go eat a cup of coffee,

41
00:02:28.005 --> 00:02:31.009
walk the dog, take a shower, whatever you want,

42
00:02:31.009 --> 00:02:35.006
you will be waiting.

43
00:02:35.006 --> 00:02:40.000
Well, that was quick, at least for me, magic of editing.

44
00:02:40.000 --> 00:02:41.009
Okay, the last thing we want to do here

45
00:02:41.009 --> 00:02:46.006
is we want to set up the JVM options for our spring profile.

46
00:02:46.006 --> 00:02:50.002
So click on configurations on the left

47
00:02:50.002 --> 00:02:54.006
and then when this loads we'll click on software

48
00:02:54.006 --> 00:02:56.002
and in the JVM options,

49
00:02:56.002 --> 00:03:03.007
we're going to type dash D spring profiles dot active

50
00:03:03.007 --> 00:03:09.009
and we'll set this to dev, go ahead and apply.

51
00:03:09.009 --> 00:03:13.003
We're going to go back to IntelliJ

52
00:03:13.003 --> 00:03:17.001
and we've already created the new branch.

53
00:03:17.001 --> 00:03:19.004
We're going to modify the source code

54
00:03:19.004 --> 00:03:21.005
for a war build

55
00:03:21.005 --> 00:03:22.004
and let let's start,

56
00:03:22.004 --> 00:03:26.002
with our spring boot prod application dot java.

57
00:03:26.002 --> 00:03:32.002
So we'll open main Java and go down to spring boot.

58
00:03:32.002 --> 00:03:35.000
We'll open this up.

59
00:03:35.000 --> 00:03:44.000
We'll tell this to extends from spring boot,

60
00:03:44.000 --> 00:03:49.002
servletinitializer, underneath the public static void main,

61
00:03:49.002 --> 00:03:57.001
we're going to have an override and this will be protected.

62
00:03:57.001 --> 00:04:01.007
Spring application builder

63
00:04:01.007 --> 00:04:03.008
method will be configure,

64
00:04:03.008 --> 00:04:09.008
will take a spring application builder,

65
00:04:09.008 --> 00:04:13.000
use builder for the object name

66
00:04:13.000 --> 00:04:18.002
and we're going to say builder dot sources,

67
00:04:18.002 --> 00:04:21.001
will be the name of our class,

68
00:04:21.001 --> 00:04:26.007
spring boot prod application dot class.

69
00:04:26.007 --> 00:04:29.003
We're got to add a return,

70
00:04:29.003 --> 00:04:31.003
save that again.

71
00:04:31.003 --> 00:04:37.004
Now we're going to go to our build gradle file,

72
00:04:37.004 --> 00:04:45.009
will go to the top, and to add the ID war,

73
00:04:45.009 --> 00:04:51.001
will have a boot war curly brackets.

74
00:04:51.001 --> 00:04:56.001
Inside of this, we'll give it the archive file name

75
00:04:56.001 --> 00:04:56.009
which is going to be,

76
00:04:56.009 --> 00:05:03.008
our spring boot prod application dot war.

77
00:05:03.008 --> 00:05:05.003
This should all sound familiar

78
00:05:05.003 --> 00:05:10.002
because we've done this before back in video 0202.

79
00:05:10.002 --> 00:05:11.004
Next we're going to tell gradle

80
00:05:11.004 --> 00:05:14.005
to make the implicit Tomcat dependency

81
00:05:14.005 --> 00:05:16.004
as provided run time.

82
00:05:16.004 --> 00:05:22.002
So we'll type provided run time

83
00:05:22.002 --> 00:05:30.000
and we're going to type org dot spring framework

84
00:05:30.000 --> 00:05:40.001
dot boot colon spring boot dash starter Tomcat.

85
00:05:40.001 --> 00:05:42.003
And if you remember, we did this

86
00:05:42.003 --> 00:05:47.004
because spring boot starter web includes Tomcat.

87
00:05:47.004 --> 00:05:48.008
So we, now we need to,

88
00:05:48.008 --> 00:05:51.007
know this that it's provided time.

89
00:05:51.007 --> 00:05:55.006
Save that and the last thing we need to do

90
00:05:55.006 --> 00:05:58.008
is update our application dot properties.

91
00:05:58.008 --> 00:06:03.002
So we'll go to resources, application dot properties

92
00:06:03.002 --> 00:06:06.003
and we're going to go right here

93
00:06:06.003 --> 00:06:09.000
underneath management endpoints.

94
00:06:09.000 --> 00:06:14.002
We're going to type server dot servlet,

95
00:06:14.002 --> 00:06:17.000
context path equals

96
00:06:17.000 --> 00:06:23.003
slash spring boot prod application.

97
00:06:23.003 --> 00:06:24.009
We'll save that

98
00:06:24.009 --> 00:06:26.000
and then we'll come down here,

99
00:06:26.000 --> 00:06:36.000
let's clear the screen and we'll type, gradle clean build.

100
00:06:36.000 --> 00:06:39.001
Okay, so we're almost done

101
00:06:39.001 --> 00:06:40.003
and now the next thing we need to do,

102
00:06:40.003 --> 00:06:43.003
is alter our GitHub workflow file.

103
00:06:43.003 --> 00:06:46.001
Still here in the terminal,

104
00:06:46.001 --> 00:06:53.001
we're going to type LS dash LA build libs hit enter

105
00:06:53.001 --> 00:06:55.000
and this shows us two war files

106
00:06:55.000 --> 00:06:57.009
and what we want to pay attention to is the one on the bottom

107
00:06:57.009 --> 00:07:00.007
without the version number.

108
00:07:00.007 --> 00:07:04.009
But we're going to copy that

109
00:07:04.009 --> 00:07:06.009
and we're going to use that later.

110
00:07:06.009 --> 00:07:10.007
Next let's open our GitHub workflow action.

111
00:07:10.007 --> 00:07:11.007
This is up here at the top,

112
00:07:11.007 --> 00:07:13.005
we'll click on that.

113
00:07:13.005 --> 00:07:16.007
With that open, we're going to scroll down to the bottom

114
00:07:16.007 --> 00:07:20.000
and we're going to change the deployment package

115
00:07:20.000 --> 00:07:23.007
to spring boot prod application war.

116
00:07:23.007 --> 00:07:28.009
So I'm going to select this, base that in

117
00:07:28.009 --> 00:07:32.002
and we're also going to change the application name

118
00:07:32.002 --> 00:07:37.009
spring boot prod web app

119
00:07:37.009 --> 00:07:40.003
and change the environment name,

120
00:07:40.003 --> 00:07:45.000
spring boot prod web app ENV.

121
00:07:45.000 --> 00:07:48.005
In the terminal we'll type clear

122
00:07:48.005 --> 00:07:55.006
and then we'll type get add, get commit dash M

123
00:07:55.006 --> 00:08:00.000
and this is going to be changes to the project

124
00:08:00.000 --> 00:08:08.008
to make this a war deployment to AWS.

125
00:08:08.008 --> 00:08:11.006
Commit that and we'll finish this by typing

126
00:08:11.006 --> 00:08:19.001
Git push dash U origin war

127
00:08:19.001 --> 00:08:25.002
workflow underscore AWS.

128
00:08:25.002 --> 00:08:31.006
Now, at this point, let's go back to GitHub

129
00:08:31.006 --> 00:08:36.001
and we already see that the war workflow AWS

130
00:08:36.001 --> 00:08:37.009
has recent changes.

131
00:08:37.009 --> 00:08:40.004
So we'll click on this to compare

132
00:08:40.004 --> 00:08:43.004
to pull those requests.

133
00:08:43.004 --> 00:08:44.009
Right now, it's checking to see

134
00:08:44.009 --> 00:08:46.009
if it can be merged and it says it can,

135
00:08:46.009 --> 00:08:51.005
so we'll create the pull request

136
00:08:51.005 --> 00:08:56.002
and this will fire off the first action.

137
00:08:56.002 --> 00:08:58.000
We'll go ahead and allow that to happen

138
00:08:58.000 --> 00:09:02.008
and I'm going to click merge pull request,

139
00:09:02.008 --> 00:09:06.004
and click confirm.

140
00:09:06.004 --> 00:09:09.009
If we go to our actions

141
00:09:09.009 --> 00:09:12.003
we can see that both of these are fired off,

142
00:09:12.003 --> 00:09:18.003
I'm going to click on the top one, click on build

143
00:09:18.003 --> 00:09:22.009
and we should see something like this.

144
00:09:22.009 --> 00:09:29.003
We'll expand end it,

145
00:09:29.003 --> 00:09:31.000
we do have an error,

146
00:09:31.000 --> 00:09:35.009
let's take a look at the error and see what happened.

147
00:09:35.009 --> 00:09:39.006
I believe this is because it's doing a double deploy,

148
00:09:39.006 --> 00:09:44.002
so let's go ahead and check the previous action

149
00:09:44.002 --> 00:09:48.003
and the previous action is still working.

150
00:09:48.003 --> 00:09:52.006
Click on it.

151
00:09:52.006 --> 00:09:56.004
Yep, this is because the previous action was running.

152
00:09:56.004 --> 00:09:59.006
So it is deploying now, the war file,

153
00:09:59.006 --> 00:10:03.005
our comment says jar, but it is a war

154
00:10:03.005 --> 00:10:05.008
and the status from spring boot is,

155
00:10:05.008 --> 00:10:07.008
it's ready, healthy, and green

156
00:10:07.008 --> 00:10:11.000
and so if we go back to our spring boot prod web app

157
00:10:11.000 --> 00:10:14.000
we can see that everything has been deployed,

158
00:10:14.000 --> 00:10:17.007
this is our spring boot prod web app environment.

159
00:10:17.007 --> 00:10:21.002
We'll click on this

160
00:10:21.002 --> 00:10:24.000
and our application is loaded in Dev.

