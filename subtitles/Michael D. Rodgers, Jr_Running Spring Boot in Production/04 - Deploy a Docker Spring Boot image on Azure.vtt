WEBVTT
1
00:00:00.005 --> 00:00:02.002
- [Instructor] So far everything that we've done

2
00:00:02.002 --> 00:00:03.008
for deploying our Spring Boot apps

3
00:00:03.008 --> 00:00:05.006
have been through the Azure CLI

4
00:00:05.006 --> 00:00:07.005
and the Azure Gradle plugin,

5
00:00:07.005 --> 00:00:09.003
and honestly, this is a great way

6
00:00:09.003 --> 00:00:12.001
to deploy Spring Boot apps to production.

7
00:00:12.001 --> 00:00:14.000
I'm betting you're seeing the opportunities here

8
00:00:14.000 --> 00:00:16.005
with scripting out your deployments.

9
00:00:16.005 --> 00:00:18.002
Deploying our Spring Boot app packaged

10
00:00:18.002 --> 00:00:21.001
in a Docker container is very similar,

11
00:00:21.001 --> 00:00:22.007
except we're not going to use

12
00:00:22.007 --> 00:00:25.004
the Azure Web App deploy plugin

13
00:00:25.004 --> 00:00:29.005
but instead we'll be using the Azure CLI commands.

14
00:00:29.005 --> 00:00:31.007
Again, this will allow us to script up

15
00:00:31.007 --> 00:00:34.008
a great deal of these processes.

16
00:00:34.008 --> 00:00:37.000
With that said, we'll be using IntelliJ

17
00:00:37.000 --> 00:00:39.007
and Vagrant again for this deployment.

18
00:00:39.007 --> 00:00:41.003
The project code is still the same one

19
00:00:41.003 --> 00:00:43.008
we've been using and pulling from GitHub

20
00:00:43.008 --> 00:00:46.000
found in our home directories.

21
00:00:46.000 --> 00:00:47.006
From the last video we created

22
00:00:47.006 --> 00:00:49.006
an Azure WARP branch,

23
00:00:49.006 --> 00:00:52.006
we'll switch back to that main branch in a moment.

24
00:00:52.006 --> 00:00:55.002
Our source code from our personal repositories

25
00:00:55.002 --> 00:00:57.009
will map to the project code we are using

26
00:00:57.009 --> 00:01:00.001
in the lab exercise files

27
00:01:00.001 --> 00:01:04.000
with 0504 begin in and in.

28
00:01:04.000 --> 00:01:05.005
With IntelliJ open

29
00:01:05.005 --> 00:01:07.009
and using the project source code

30
00:01:07.009 --> 00:01:09.007
from our previous video,

31
00:01:09.007 --> 00:01:10.007
which is found again

32
00:01:10.007 --> 00:01:13.007
in our home directories SpringBootProduction,

33
00:01:13.007 --> 00:01:16.007
locate the terminal in IntelliJ

34
00:01:16.007 --> 00:01:20.008
and type git switch main.

35
00:01:20.008 --> 00:01:23.004
Next we're going to create another branch

36
00:01:23.004 --> 00:01:25.000
from the Azure branch

37
00:01:25.000 --> 00:01:30.004
by typing git checkout -b

38
00:01:30.004 --> 00:01:33.009
azure_docker

39
00:01:33.009 --> 00:01:38.005
space azure_jar

40
00:01:38.005 --> 00:01:40.002
hit enter.

41
00:01:40.002 --> 00:01:42.006
Again, this will create the Azure Docker branch

42
00:01:42.006 --> 00:01:44.001
from the Azure JAR branch

43
00:01:44.001 --> 00:01:47.000
and simultaneously switch to that branch.

44
00:01:47.000 --> 00:01:48.008
In the meantime, let's go ahead

45
00:01:48.008 --> 00:01:53.001
and ensure that Vagrant is up and running.

46
00:01:53.001 --> 00:01:54.008
I have Vagrant running here.

47
00:01:54.008 --> 00:01:58.002
If you have not started Vagrant yet, please do so

48
00:01:58.002 --> 00:02:03.001
and once it's up then type vagrant ssh,

49
00:02:03.001 --> 00:02:05.002
please pause the video if you need to

50
00:02:05.002 --> 00:02:08.002
to get these things going again.

51
00:02:08.002 --> 00:02:10.008
Okay, back in IntelliJ

52
00:02:10.008 --> 00:02:13.006
we have a few minor code changes here

53
00:02:13.006 --> 00:02:17.002
that will be important for our build Gradle files.

54
00:02:17.002 --> 00:02:20.007
First let's open up the build.gradle file,

55
00:02:20.007 --> 00:02:23.003
and once there scroll to the top

56
00:02:23.003 --> 00:02:27.004
just after the Id java hit enter

57
00:02:27.004 --> 00:02:31.009
and we're going to type Id space org

58
00:02:31.009 --> 00:02:36.008
springframework.experimental

59
00:02:36.008 --> 00:02:39.002
.aot

60
00:02:39.002 --> 00:02:41.004
version single quotes

61
00:02:41.004 --> 00:02:45.004
0.10

62
00:02:45.004 --> 00:02:47.006
.3,

63
00:02:47.006 --> 00:02:49.001
after that hit enter again,

64
00:02:49.001 --> 00:02:50.002
and we're going to type

65
00:02:50.002 --> 00:02:55.001
Id org graalvm

66
00:02:55.001 --> 00:02:59.003
buildtools native

67
00:02:59.003 --> 00:03:02.002
and then version,

68
00:03:02.002 --> 00:03:04.001
after that single quotes

69
00:03:04.001 --> 00:03:07.009
0.9.3,

70
00:03:07.009 --> 00:03:08.008
pause for a moment,

71
00:03:08.008 --> 00:03:11.008
make sure you have everything typed in correctly

72
00:03:11.008 --> 00:03:13.007
as I've said,

73
00:03:13.007 --> 00:03:16.001
okay, next, go to the bottom,

74
00:03:16.001 --> 00:03:22.004
and just below the Azure Web App task

75
00:03:22.004 --> 00:03:24.007
and underneath the test task,

76
00:03:24.007 --> 00:03:27.002
we'll hit enter a couple times

77
00:03:27.002 --> 00:03:32.004
and we're going to type nativeBuild

78
00:03:32.004 --> 00:03:34.006
with a capital B,

79
00:03:34.006 --> 00:03:36.004
curly brackets,

80
00:03:36.004 --> 00:03:39.006
classpath space

81
00:03:39.006 --> 00:03:44.001
processAot

82
00:03:44.001 --> 00:03:49.002
Resources.outputs comma

83
00:03:49.002 --> 00:03:55.002
compileAotJava.outputs,

84
00:03:55.002 --> 00:03:57.006
underneath this task hit enter again

85
00:03:57.006 --> 00:04:04.001
and we're going to type nativeTest curly brackets.

86
00:04:04.001 --> 00:04:06.007
And next we're going to type again

87
00:04:06.007 --> 00:04:10.007
classpath space

88
00:04:10.007 --> 00:04:13.008
processAot

89
00:04:13.008 --> 00:04:20.000
TestResources.outputs

90
00:04:20.000 --> 00:04:24.002
comma compileAot

91
00:04:24.002 --> 00:04:29.002
TestJava.outputs,

92
00:04:29.002 --> 00:04:30.003
we're going to save that

93
00:04:30.003 --> 00:04:33.000
and then scroll back up to the top,

94
00:04:33.000 --> 00:04:37.001
we'll change the source compatibility to 11

95
00:04:37.001 --> 00:04:39.005
and that's all we need to change.

96
00:04:39.005 --> 00:04:41.002
In the terminal window at the bottom

97
00:04:41.002 --> 00:04:44.008
we'll type git add colon,

98
00:04:44.008 --> 00:04:48.001
git commit -m

99
00:04:48.001 --> 00:04:50.000
making changes

100
00:04:50.000 --> 00:04:53.008
for docker deployment

101
00:04:53.008 --> 00:04:56.001
to azure,

102
00:04:56.001 --> 00:04:58.009
hit enter and then we'll push this

103
00:04:58.009 --> 00:05:01.009
to our remote repository,

104
00:05:01.009 --> 00:05:07.001
git push -u origin

105
00:05:07.001 --> 00:05:10.004
azure_docker,

106
00:05:10.004 --> 00:05:13.002
and hit enter.

107
00:05:13.002 --> 00:05:15.001
Now let's go ahead and switch back

108
00:05:15.001 --> 00:05:16.009
to our terminal window.

109
00:05:16.009 --> 00:05:20.007
Hopefully everything is started and running,

110
00:05:20.007 --> 00:05:23.006
and let's go ahead and clear the screen.

111
00:05:23.006 --> 00:05:28.006
Next let's type sdk list java

112
00:05:28.006 --> 00:05:30.002
and what we're looking for here

113
00:05:30.002 --> 00:05:32.004
is the GraalVM,

114
00:05:32.004 --> 00:05:35.008
I've already pre-installed GraalVM.

115
00:05:35.008 --> 00:05:39.005
I'm going to copy the GraalVM identifier,

116
00:05:39.005 --> 00:05:41.005
type Q to quit,

117
00:05:41.005 --> 00:05:42.008
and then what you're going to do

118
00:05:42.008 --> 00:05:46.004
is type sdk install java

119
00:05:46.004 --> 00:05:50.009
paste in the identifier for GraalVM and hit enter.

120
00:05:50.009 --> 00:05:52.005
For me, this is going to respond

121
00:05:52.005 --> 00:05:54.007
that it's already installed,

122
00:05:54.007 --> 00:05:56.006
For you, this will take a moment,

123
00:05:56.006 --> 00:05:59.007
so again, please feel free to pause the video.

124
00:05:59.007 --> 00:06:01.001
If you already have it installed,

125
00:06:01.001 --> 00:06:03.005
you're going to type sdk

126
00:06:03.005 --> 00:06:06.004
use java

127
00:06:06.004 --> 00:06:08.004
and paste the identifier.

128
00:06:08.004 --> 00:06:09.009
Once all of this is done

129
00:06:09.009 --> 00:06:15.002
type java --version to verify.

130
00:06:15.002 --> 00:06:16.000
As you can see,

131
00:06:16.000 --> 00:06:19.003
we have OpenJDK 11 installed

132
00:06:19.003 --> 00:06:21.009
and we have OpenJDK Runtime Environment

133
00:06:21.009 --> 00:06:25.008
GraalVM 21.3

134
00:06:25.008 --> 00:06:28.001
with a build of 11.

135
00:06:28.001 --> 00:06:30.002
Let's clear the screen.

136
00:06:30.002 --> 00:06:32.000
We've installed Docker

137
00:06:32.000 --> 00:06:35.005
on our Vagrant instances back in 0501

138
00:06:35.005 --> 00:06:37.007
and if you've not installed Docker

139
00:06:37.007 --> 00:06:39.003
as of this tutorial,

140
00:06:39.003 --> 00:06:41.001
please go back to that video

141
00:06:41.001 --> 00:06:43.002
and follow the instructions.

142
00:06:43.002 --> 00:06:44.004
If you're unsure,

143
00:06:44.004 --> 00:06:49.003
you can type docker version,

144
00:06:49.003 --> 00:06:52.007
and this will give you the version that's installed.

145
00:06:52.007 --> 00:06:55.000
Okay, let's clear the screen.

146
00:06:55.000 --> 00:06:57.005
Because I have restarted Vagrant

147
00:06:57.005 --> 00:06:59.004
I have to rerun

148
00:06:59.004 --> 00:07:04.009
a sudo dockerd & again.

149
00:07:04.009 --> 00:07:07.004
This will be needed each time

150
00:07:07.004 --> 00:07:09.002
that we have restarted,

151
00:07:09.002 --> 00:07:10.009
and of course, this is also needed

152
00:07:10.009 --> 00:07:15.007
when we run our Gradle boot build image plugin.

153
00:07:15.007 --> 00:07:17.000
If it's already running,

154
00:07:17.000 --> 00:07:19.007
then you shouldn't need to do this.

155
00:07:19.007 --> 00:07:21.007
Now here's the thing,

156
00:07:21.007 --> 00:07:23.002
the intent of this video

157
00:07:23.002 --> 00:07:26.002
is not to teach Linux administration,

158
00:07:26.002 --> 00:07:27.007
but if you want to set up

159
00:07:27.007 --> 00:07:29.008
a dedicated build machine,

160
00:07:29.008 --> 00:07:31.004
then you're going to have to set up

161
00:07:31.004 --> 00:07:33.003
a systemd service.

162
00:07:33.003 --> 00:07:36.001
Let me show you over here in the browser

163
00:07:36.001 --> 00:07:40.001
the documentation that Docker has on doing this.

164
00:07:40.001 --> 00:07:41.003
I highly recommend,

165
00:07:41.003 --> 00:07:42.009
if you're setting up a build machine

166
00:07:42.009 --> 00:07:45.008
that you follow the documentation.

167
00:07:45.008 --> 00:07:49.008
Again for us, we're not following this.

168
00:07:49.008 --> 00:07:51.007
With all of that said,

169
00:07:51.007 --> 00:07:53.009
what I'm about to do will be unsavory

170
00:07:53.009 --> 00:07:56.009
for some Linux admins out there,

171
00:07:56.009 --> 00:08:00.000
but keep in mind the purpose of this video

172
00:08:00.000 --> 00:08:03.006
it's not about installing a Linux service

173
00:08:03.006 --> 00:08:05.002
but teaching recipes

174
00:08:05.002 --> 00:08:09.009
for deploying our Spring Boot apps to Azure.

175
00:08:09.009 --> 00:08:11.009
So I'm going to type

176
00:08:11.009 --> 00:08:17.008
sudo change mod 777

177
00:08:17.008 --> 00:08:23.006
var/run/docker.sock,

178
00:08:23.006 --> 00:08:25.000
this command will need to be run

179
00:08:25.000 --> 00:08:26.007
each time you start and stop

180
00:08:26.007 --> 00:08:28.005
the Vagrant instance

181
00:08:28.005 --> 00:08:31.006
and the docker.sock will only exist

182
00:08:31.006 --> 00:08:35.008
after the sudo dockerd has been executed

183
00:08:35.008 --> 00:08:38.000
looks like I've typed this wrong,

184
00:08:38.000 --> 00:08:44.000
so I'll type sudo change mod 777

185
00:08:44.000 --> 00:08:49.006
/var/run/docker.sock,

186
00:08:49.006 --> 00:08:52.001
okay, with all of that done,

187
00:08:52.001 --> 00:08:54.004
we need to build our Docker image

188
00:08:54.004 --> 00:08:56.004
with the Gradle boot plugin.

189
00:08:56.004 --> 00:08:58.000
So let's ensure we have

190
00:08:58.000 --> 00:09:00.005
the proper project directory.

191
00:09:00.005 --> 00:09:03.003
First of all, let's clear the screen,

192
00:09:03.003 --> 00:09:06.001
let's ensure that we're in the proper directory

193
00:09:06.001 --> 00:09:09.000
type cd build

194
00:09:09.000 --> 00:09:13.009
/azure_deployments/SpringBootProduction/

195
00:09:13.009 --> 00:09:15.003
and hit enter.

196
00:09:15.003 --> 00:09:17.005
Next, we're going to fetch from a origin

197
00:09:17.005 --> 00:09:21.009
we'll type git fetch origin

198
00:09:21.009 --> 00:09:23.001
and then we're going to type

199
00:09:23.001 --> 00:09:25.005
git switch

200
00:09:25.005 --> 00:09:29.005
azure_docker hit enter,

201
00:09:29.005 --> 00:09:34.000
and then we'll type git pull origin.

202
00:09:34.000 --> 00:09:36.003
Let's clear up the screen again

203
00:09:36.003 --> 00:09:39.003
and now it's time to build our Docker image.

204
00:09:39.003 --> 00:09:40.009
Go ahead and type

205
00:09:40.009 --> 00:09:43.003
./gradlew

206
00:09:43.003 --> 00:09:46.007
bootBuildImage

207
00:09:46.007 --> 00:09:50.006
space --imageName

208
00:09:50.006 --> 00:09:55.001
equals cwm-coding

209
00:09:55.001 --> 00:09:59.000
/springboot

210
00:09:59.000 --> 00:10:03.007
- azure-image.

211
00:10:03.007 --> 00:10:05.004
Now, before you hit enter,

212
00:10:05.004 --> 00:10:07.007
I'm prefixing with cwm-coding

213
00:10:07.007 --> 00:10:08.009
feel free to change this

214
00:10:08.009 --> 00:10:11.000
to whatever name you would like.

215
00:10:11.000 --> 00:10:13.001
Okay, let's hit enter

216
00:10:13.001 --> 00:10:15.004
and this will take quite a few minutes.

217
00:10:15.004 --> 00:10:17.004
The VM has limited memory,

218
00:10:17.004 --> 00:10:20.004
so if it does crash due to memory

219
00:10:20.004 --> 00:10:21.007
please pause the video,

220
00:10:21.007 --> 00:10:24.001
restart your Vagrant instance,

221
00:10:24.001 --> 00:10:25.004
and once it's reloaded,

222
00:10:25.004 --> 00:10:29.000
rerun the command again.

223
00:10:29.000 --> 00:10:31.009
All right, we have an error

224
00:10:31.009 --> 00:10:35.003
and I just realized what we forgot to change.

225
00:10:35.003 --> 00:10:38.006
So let's go back to IntelliJ.

226
00:10:38.006 --> 00:10:42.009
In IntelliJ we're going to open

227
00:10:42.009 --> 00:10:47.006
the settings.gradle, hit enter,

228
00:10:47.006 --> 00:10:49.004
we're going to type

229
00:10:49.004 --> 00:10:50.003
pluginManagement,

230
00:10:50.003 --> 00:10:54.002
curly brackets,

231
00:10:54.002 --> 00:10:57.008
repositories,

232
00:10:57.008 --> 00:10:59.005
curly brackets,

233
00:10:59.005 --> 00:11:03.006
maven, curly bracket url,

234
00:11:03.006 --> 00:11:07.009
https://

235
00:11:07.009 --> 00:11:12.009
repo.spring.io

236
00:11:12.009 --> 00:11:16.003
space release.

237
00:11:16.003 --> 00:11:17.009
Go to the end of the line hit enter

238
00:11:17.009 --> 00:11:22.002
we'll type mavenCentral,

239
00:11:22.002 --> 00:11:24.004
go to the line again, hit enter,

240
00:11:24.004 --> 00:11:29.002
type gradlePluginPortal.

241
00:11:29.002 --> 00:11:30.005
Down at the bottom,

242
00:11:30.005 --> 00:11:32.009
We'll go ahead and use our previous

243
00:11:32.009 --> 00:11:35.003
git add,

244
00:11:35.003 --> 00:11:37.009
git commit,

245
00:11:37.009 --> 00:11:41.006
and git push origin azure_docker.

246
00:11:41.006 --> 00:11:42.004
As you can see here,

247
00:11:42.004 --> 00:11:44.005
I'm just using the up arrows or down arrows

248
00:11:44.005 --> 00:11:47.001
to go to previous commands.

249
00:11:47.001 --> 00:11:47.009
With that done,

250
00:11:47.009 --> 00:11:51.007
let's go back to our terminal,

251
00:11:51.007 --> 00:11:55.006
we'll type git pull origin

252
00:11:55.006 --> 00:11:56.008
and we've pulled the changes,

253
00:11:56.008 --> 00:11:58.001
we'll type clear

254
00:11:58.001 --> 00:12:00.006
and then up arrow again

255
00:12:00.006 --> 00:12:04.003
to our command and hit enter.

256
00:12:04.003 --> 00:12:05.004
In a previous video,

257
00:12:05.004 --> 00:12:08.008
we talked about how the AOT compiler

258
00:12:08.008 --> 00:12:09.009
will generate a number

259
00:12:09.009 --> 00:12:12.002
of failed verification messages.

260
00:12:12.002 --> 00:12:13.004
Remember that this is okay

261
00:12:13.004 --> 00:12:20.002
because it's a part of the native build process.

262
00:12:20.002 --> 00:12:22.007
Okay, so the build is complete

263
00:12:22.007 --> 00:12:24.004
and we need to test this.

264
00:12:24.004 --> 00:12:25.005
So what we'll type,

265
00:12:25.005 --> 00:12:31.004
first of all, let's copy the image tag

266
00:12:31.004 --> 00:12:32.009
and then we're going to type

267
00:12:32.009 --> 00:12:36.000
docker run

268
00:12:36.000 --> 00:12:39.008
- P80:

269
00:12:39.008 --> 00:12:43.008
9000 -e,

270
00:12:43.008 --> 00:12:48.005
we'll type our Spring Profile

271
00:12:48.005 --> 00:12:50.002
equals dev,

272
00:12:50.002 --> 00:12:52.008
and I'm also going to type docker,

273
00:12:52.008 --> 00:12:54.008
paste in the rest,

274
00:12:54.008 --> 00:12:55.009
take out the colon

275
00:12:55.009 --> 00:13:00.005
and the image and hit enter.

276
00:13:00.005 --> 00:13:01.003
As you can see,

277
00:13:01.003 --> 00:13:03.009
the logs are generating the starting details

278
00:13:03.009 --> 00:13:06.008
showing that the profile that we're using

279
00:13:06.008 --> 00:13:09.009
and that the application has started.

280
00:13:09.009 --> 00:13:12.008
Okay, validating that it is running,

281
00:13:12.008 --> 00:13:16.001
let's type Control + C to exit.

282
00:13:16.001 --> 00:13:18.002
I'm going to clear the screen.

283
00:13:18.002 --> 00:13:19.008
Now we can officially move on

284
00:13:19.008 --> 00:13:21.009
to deploying this image to Azure,

285
00:13:21.009 --> 00:13:22.008
and we'll do this

286
00:13:22.008 --> 00:13:24.009
through the command line interface.

287
00:13:24.009 --> 00:13:26.008
A moment ago I asked you to copy

288
00:13:26.008 --> 00:13:27.008
the image tag,

289
00:13:27.008 --> 00:13:31.008
but let's validate this a different way.

290
00:13:31.008 --> 00:13:33.000
From the terminal window

291
00:13:33.000 --> 00:13:38.004
type docker image list,

292
00:13:38.004 --> 00:13:42.007
and you can see a number of different images here.

293
00:13:42.007 --> 00:13:44.009
We'll copy the image name

294
00:13:44.009 --> 00:13:48.003
and we'll use this going forward.

295
00:13:48.003 --> 00:13:50.004
Now, the first thing we're going to do here

296
00:13:50.004 --> 00:13:52.009
is create a resource group.

297
00:13:52.009 --> 00:13:54.001
We'll do this by typing

298
00:13:54.001 --> 00:13:59.003
az group create

299
00:13:59.003 --> 00:14:02.002
- -name

300
00:14:02.002 --> 00:14:07.008
springboot-azure

301
00:14:07.008 --> 00:14:12.009
- docker-group

302
00:14:12.009 --> 00:14:17.002
space --location

303
00:14:17.002 --> 00:14:21.001
and we'll use the default westus,

304
00:14:21.001 --> 00:14:23.006
hit enter,

305
00:14:23.006 --> 00:14:24.004
and as you can tell

306
00:14:24.004 --> 00:14:28.005
this has now created our resource group.

307
00:14:28.005 --> 00:14:31.001
Let's clear the screen.

308
00:14:31.001 --> 00:14:32.006
Next, we'll go ahead

309
00:14:32.006 --> 00:14:36.003
and create a container registry for our application.

310
00:14:36.003 --> 00:14:41.009
We'll do this by typing az acr create

311
00:14:41.009 --> 00:14:47.002
- -resource-group space

312
00:14:47.002 --> 00:14:48.001
and we'll type the name

313
00:14:48.001 --> 00:14:50.001
of our resource group

314
00:14:50.001 --> 00:14:53.008
springboot-azure

315
00:14:53.008 --> 00:14:57.009
- docker-group

316
00:14:57.009 --> 00:15:01.006
space -- the name of the ACR

317
00:15:01.006 --> 00:15:03.004
that we're going to give it.

318
00:15:03.004 --> 00:15:05.002
So I'm going to call mine

319
00:15:05.002 --> 00:15:07.008
springboot

320
00:15:07.008 --> 00:15:10.009
A-Z-U-R-E-C-R

321
00:15:10.009 --> 00:15:15.006
01 space --skew

322
00:15:15.006 --> 00:15:19.002
and we'll type Basic.

323
00:15:19.002 --> 00:15:21.009
You can see here in what's returned,

324
00:15:21.009 --> 00:15:25.005
that we are inside of our resource group

325
00:15:25.005 --> 00:15:27.002
and we have created

326
00:15:27.002 --> 00:15:31.008
the springbootazurecr01

327
00:15:31.008 --> 00:15:33.007
container registry,

328
00:15:33.007 --> 00:15:36.007
and this is the login server for that.

329
00:15:36.007 --> 00:15:39.003
Again, let's type clear.

330
00:15:39.003 --> 00:15:42.001
To ensure the next steps are successful

331
00:15:42.001 --> 00:15:44.005
and that we can push our Docker images.

332
00:15:44.005 --> 00:15:47.004
We need to log into the container registry.

333
00:15:47.004 --> 00:15:51.007
We can do this by typing az acr

334
00:15:51.007 --> 00:15:54.008
login --name

335
00:15:54.008 --> 00:15:57.002
and we'll specify the name

336
00:15:57.002 --> 00:15:58.006
of our container registry

337
00:15:58.006 --> 00:16:03.004
that we just created.

338
00:16:03.004 --> 00:16:04.003
As you can see,

339
00:16:04.003 --> 00:16:06.005
this was successful.

340
00:16:06.005 --> 00:16:07.007
Now with that done,

341
00:16:07.007 --> 00:16:09.009
we need to tag our Docker image

342
00:16:09.009 --> 00:16:11.009
we created a moment ago,

343
00:16:11.009 --> 00:16:14.005
with the Gradle command boot build image.

344
00:16:14.005 --> 00:16:16.000
We'll do this by typing

345
00:16:16.000 --> 00:16:18.001
docker tag

346
00:16:18.001 --> 00:16:22.003
cwm-coding

347
00:16:22.003 --> 00:16:26.009
springboot-azure

348
00:16:26.009 --> 00:16:28.005
- image,

349
00:16:28.005 --> 00:16:31.003
we will specify the latest,

350
00:16:31.003 --> 00:16:34.003
space and we're going to use

351
00:16:34.003 --> 00:16:36.001
our container registry name

352
00:16:36.001 --> 00:16:38.004
in how we tag our new image.

353
00:16:38.004 --> 00:16:43.000
So let's type springboot

354
00:16:43.000 --> 00:16:46.007
azurecr01

355
00:16:46.007 --> 00:16:52.002
.azurecr.io

356
00:16:52.002 --> 00:16:56.002
/springboot

357
00:16:56.002 --> 00:17:00.009
- prod-image

358
00:17:00.009 --> 00:17:04.009
colon latest, hit enter.

359
00:17:04.009 --> 00:17:05.009
With that done,

360
00:17:05.009 --> 00:17:09.003
let's push our tag Docker image to Azure.

361
00:17:09.003 --> 00:17:10.004
We're going to type

362
00:17:10.004 --> 00:17:13.007
docker push

363
00:17:13.007 --> 00:17:18.006
springbootazurecr01

364
00:17:18.006 --> 00:17:24.001
.azure.cr.io

365
00:17:24.001 --> 00:17:27.008
/springboot

366
00:17:27.008 --> 00:17:31.008
- prod-image,

367
00:17:31.008 --> 00:17:35.002
colon latest.

368
00:17:35.002 --> 00:17:36.008
This may take a few minutes

369
00:17:36.008 --> 00:17:40.002
as it pushes the image.

370
00:17:40.002 --> 00:17:42.006
Now to ensure that everything went well.

371
00:17:42.006 --> 00:17:46.003
Let's list our Azure Container repository,

372
00:17:46.003 --> 00:17:47.009
and we'll do this by typing

373
00:17:47.009 --> 00:17:54.001
az acr repository

374
00:17:54.001 --> 00:17:57.007
list --name

375
00:17:57.007 --> 00:18:02.000
and we'll specify our Azure Container repository.

376
00:18:02.000 --> 00:18:06.004
This will be springboot

377
00:18:06.004 --> 00:18:10.008
azurecr01

378
00:18:10.008 --> 00:18:16.009
and let's output us to a table.

379
00:18:16.009 --> 00:18:19.002
Okay, in a moment,

380
00:18:19.002 --> 00:18:20.002
we're going to create

381
00:18:20.002 --> 00:18:22.006
a container image with the DNS

382
00:18:22.006 --> 00:18:24.002
but to do that,

383
00:18:24.002 --> 00:18:25.006
we need some credentials

384
00:18:25.006 --> 00:18:27.004
and let our ACR,

385
00:18:27.004 --> 00:18:29.000
the Azure Container Registry,

386
00:18:29.000 --> 00:18:30.008
know that the name

387
00:18:30.008 --> 00:18:33.008
springbootazurecr01,

388
00:18:33.008 --> 00:18:36.004
has admin privilege.

389
00:18:36.004 --> 00:18:39.001
To do this we're going to type

390
00:18:39.001 --> 00:18:44.003
az acr update,

391
00:18:44.003 --> 00:18:47.002
specify the name tag

392
00:18:47.002 --> 00:18:53.002
springbootazurecr01

393
00:18:53.002 --> 00:18:58.008
space --admin-enabled

394
00:18:58.008 --> 00:18:59.007
as true.

395
00:18:59.007 --> 00:19:03.002
Hit enter, and it looks like I typoed,

396
00:19:03.002 --> 00:19:05.001
so let me fix that,

397
00:19:05.001 --> 00:19:09.004
admin enabled,

398
00:19:09.004 --> 00:19:11.009
There we go.

399
00:19:11.009 --> 00:19:15.002
Okay, we're also going to need the password

400
00:19:15.002 --> 00:19:16.002
and we can get this

401
00:19:16.002 --> 00:19:21.005
by typing az acr credential

402
00:19:21.005 --> 00:19:23.009
show dash dash,

403
00:19:23.009 --> 00:19:27.006
again, our name of our container registry,

404
00:19:27.006 --> 00:19:34.002
springbootazurecr01,

405
00:19:34.002 --> 00:19:36.009
hit enter.

406
00:19:36.009 --> 00:19:42.003
Okay, let's copy the password

407
00:19:42.003 --> 00:19:45.002
and now we're ready to create the container.

408
00:19:45.002 --> 00:19:50.008
Let's type clear az

409
00:19:50.008 --> 00:19:54.002
container create

410
00:19:54.002 --> 00:19:57.008
- -resource

411
00:19:57.008 --> 00:20:01.001
- group

412
00:20:01.001 --> 00:20:05.002
springboot-azure

413
00:20:05.002 --> 00:20:09.007
- docker-group

414
00:20:09.007 --> 00:20:12.009
space --name,

415
00:20:12.009 --> 00:20:15.007
and this is the container we're going to create,

416
00:20:15.007 --> 00:20:19.009
this will be springboot

417
00:20:19.009 --> 00:20:21.005
azure

418
00:20:21.005 --> 00:20:26.000
- container01

419
00:20:26.000 --> 00:20:30.001
space --dns

420
00:20:30.001 --> 00:20:34.007
- name-label

421
00:20:34.007 --> 00:20:37.004
and this is going to be our DNS address,

422
00:20:37.004 --> 00:20:42.007
springboot-azure

423
00:20:42.007 --> 00:20:47.001
- docker-app.

424
00:20:47.001 --> 00:20:49.000
Then we need to specify the image,

425
00:20:49.000 --> 00:20:53.009
so we'll type --image space

426
00:20:53.009 --> 00:20:58.009
springbootazure

427
00:20:58.009 --> 00:21:01.003
cr01

428
00:21:01.003 --> 00:21:06.000
.azurecr.io

429
00:21:06.000 --> 00:21:11.005
/springboot-prod

430
00:21:11.005 --> 00:21:14.009
- image colon

431
00:21:14.009 --> 00:21:17.002
latest space

432
00:21:17.002 --> 00:21:21.000
- -environment

433
00:21:21.000 --> 00:21:24.003
- variables

434
00:21:24.003 --> 00:21:29.000
SPRING_PROFILES _ACTIVE

435
00:21:29.000 --> 00:21:32.001
equals dev,

436
00:21:32.001 --> 00:21:35.006
azure, docker.

437
00:21:35.006 --> 00:21:37.001
Although my code is only going

438
00:21:37.001 --> 00:21:39.001
to recognize dev,

439
00:21:39.001 --> 00:21:41.000
I'm demonstrating that you can pass in

440
00:21:41.000 --> 00:21:44.006
multiple Spring profiles here.

441
00:21:44.006 --> 00:21:45.008
next type

442
00:21:45.008 --> 00:21:50.003
- -port 8080.

443
00:21:50.003 --> 00:21:53.005
Now this is going to request the username

444
00:21:53.005 --> 00:21:54.006
and then the password,

445
00:21:54.006 --> 00:21:57.006
which we copied.

446
00:21:57.006 --> 00:21:59.004
The username again is

447
00:21:59.004 --> 00:22:02.002
springboot

448
00:22:02.002 --> 00:22:06.004
azurecr01

449
00:22:06.004 --> 00:22:12.008
and the password we'll just paste that in.

450
00:22:12.008 --> 00:22:15.002
Okay, it's complete,

451
00:22:15.002 --> 00:22:16.004
and as you can see here,

452
00:22:16.004 --> 00:22:22.003
we have a fqdn, let's copy that.

453
00:22:22.003 --> 00:22:27.001
Notice the port will open up a browser window

454
00:22:27.001 --> 00:22:32.001
and will append to the end 8080,

455
00:22:32.001 --> 00:22:34.000
and there's our application.

