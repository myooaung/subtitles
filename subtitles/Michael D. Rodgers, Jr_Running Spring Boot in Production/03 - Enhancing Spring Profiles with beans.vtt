WEBVTT
1
00:00:00.005 --> 00:00:01.008
- [Trainer] Having our property files

2
00:00:01.008 --> 00:00:03.008
enhanced with profile suffixes

3
00:00:03.008 --> 00:00:08.009
like application-dev.properties, application-qa.properties,

4
00:00:08.009 --> 00:00:10.009
application-prod.properties

5
00:00:10.009 --> 00:00:15.001
and the default, application.properties is the first step

6
00:00:15.001 --> 00:00:17.003
to keeping our application configurations

7
00:00:17.003 --> 00:00:19.006
externalized and configurable.

8
00:00:19.006 --> 00:00:22.006
But there are also other situations where resources

9
00:00:22.006 --> 00:00:24.009
and servers we need to access

10
00:00:24.009 --> 00:00:28.004
might need to be configured through beans.

11
00:00:28.004 --> 00:00:30.009
These might include database servers,

12
00:00:30.009 --> 00:00:36.000
message queues servers or microservices.

13
00:00:36.000 --> 00:00:40.005
Spring Boot also offers the app profile that can be used

14
00:00:40.005 --> 00:00:45.004
and applied to different beans to support this use case.

15
00:00:45.004 --> 00:00:49.001
For this demo, we'll be using code base 01_03_begin

16
00:00:49.001 --> 00:00:51.007
inside of IntelliJ Community Edition.

17
00:00:51.007 --> 00:00:55.004
Once your project is loaded, we'll get started.

18
00:00:55.004 --> 00:01:01.002
Let's first go ahead and create a package

19
00:01:01.002 --> 00:01:04.005
called configuration.

20
00:01:04.005 --> 00:01:08.004
Inside that configuration, we'll create a New Java Class

21
00:01:08.004 --> 00:01:13.007
called DBConfiguration.

22
00:01:13.007 --> 00:01:20.006
We'll annotate this with @ConfigurationProperties

23
00:01:20.006 --> 00:01:30.000
and inside the parentheses, we'll put spring.datasource.

24
00:01:30.000 --> 00:01:32.001
Next, we'll add four string variables

25
00:01:32.001 --> 00:01:34.009
that will match the name that is found

26
00:01:34.009 --> 00:01:37.008
in our spring data source properties.

27
00:01:37.008 --> 00:01:48.008
We'll type private String_driverClassName,

28
00:01:48.008 --> 00:02:00.002
private String_url, private String_userName

29
00:02:00.002 --> 00:02:05.004
and private String_password.

30
00:02:05.004 --> 00:02:07.008
We'll allow IntelliJ to build this

31
00:02:07.008 --> 00:02:12.007
by using the Command + N, we'll select Getter and Setter

32
00:02:12.007 --> 00:02:16.000
and all of the values and click OK.

33
00:02:16.000 --> 00:02:18.000
Next, let's open up our properties

34
00:02:18.000 --> 00:02:20.000
and make a few modifications.

35
00:02:20.000 --> 00:02:23.009
Inside of the application-dev.properties,

36
00:02:23.009 --> 00:02:25.009
we're going to add the following.

37
00:02:25.009 --> 00:02:29.004
I'm going to paste these in to make it a little faster.

38
00:02:29.004 --> 00:02:34.009
Please feel free to pause the video and enter these as well.

39
00:02:34.009 --> 00:02:36.005
We'll save that.

40
00:02:36.005 --> 00:02:42.002
Then we'll go to our application-qa.properties,

41
00:02:42.002 --> 00:02:46.004
we'll paste in the following,

42
00:02:46.004 --> 00:02:50.000
and then we'll open our prod.properties

43
00:02:50.000 --> 00:02:54.007
and we'll paste in the following.

44
00:02:54.007 --> 00:02:57.005
You'll notice that we have matched the property names

45
00:02:57.005 --> 00:03:01.003
after the spring.datasource

46
00:03:01.003 --> 00:03:04.004
at each line to the DBConfiguration

47
00:03:04.004 --> 00:03:08.004
as well as to the private member variables.

48
00:03:08.004 --> 00:03:11.008
The next step is to register the configuration by profile.

49
00:03:11.008 --> 00:03:13.002
Let's do that now.

50
00:03:13.002 --> 00:03:15.003
We'll right click on our configuration.

51
00:03:15.003 --> 00:03:17.009
Go to New select Java Class,

52
00:03:17.009 --> 00:03:26.001
we'll type in DBConnectionConfiguration and hit Enter.

53
00:03:26.001 --> 00:03:31.004
We'll assign this annotation of Configuration

54
00:03:31.004 --> 00:03:38.000
as well as EnableConfigurationProperties

55
00:03:38.000 --> 00:03:41.008
and inside the parentheses here, we'll give this our class

56
00:03:41.008 --> 00:03:47.008
we created a moment ago, .class.

57
00:03:47.008 --> 00:03:51.003
The @EnableConfigurationProperties tell spring

58
00:03:51.003 --> 00:03:53.007
to load the DBConfiguration.class

59
00:03:53.007 --> 00:03:56.007
with the associated configuration properties

60
00:03:56.007 --> 00:03:59.000
set in the annotation.

61
00:03:59.000 --> 00:04:03.006
Okay, we need to add a private member variable here

62
00:04:03.006 --> 00:04:08.005
for our class, and this will be private_DBConfiguration

63
00:04:08.005 --> 00:04:13.003
and will allow IntelliJ to give that its name.

64
00:04:13.003 --> 00:04:16.003
Then we're going to create a Constructor,

65
00:04:16.003 --> 00:04:21.006
we'll use Command + N and select the Constructor, click OK.

66
00:04:21.006 --> 00:04:26.002
And with that complete, let's add our profile annotations

67
00:04:26.002 --> 00:04:28.000
with the associated members.

68
00:04:28.000 --> 00:04:31.006
Now we're going to fill these out with very simple system out

69
00:04:31.006 --> 00:04:35.003
print lines to show the DBConnectionProperties

70
00:04:35.003 --> 00:04:38.008
when they're matching the environment profile.

71
00:04:38.008 --> 00:04:40.003
Let's create the first one.

72
00:04:40.003 --> 00:04:49.004
We call this one public String_devDBConnection.

73
00:04:49.004 --> 00:04:53.005
Inside this, we'll use a system out print line

74
00:04:53.005 --> 00:04:59.007
of DB Connection for DEV

75
00:04:59.007 --> 00:05:04.005
followed by another system out print line, DBConfiguration,

76
00:05:04.005 --> 00:05:08.006
and we'll get the Url.

77
00:05:08.006 --> 00:05:10.001
We'll do this again,

78
00:05:10.001 --> 00:05:15.002
dbconfiguration to get the DriverClassName,

79
00:05:15.002 --> 00:05:22.004
again, dbConfiguration to get the UserName.

80
00:05:22.004 --> 00:05:30.006
And one more time, dbConfiguration to get the Password.

81
00:05:30.006 --> 00:05:40.004
We return this with a string, DB Connection for DEV.

82
00:05:40.004 --> 00:05:44.009
We'll follow this by annotating it with @Profile

83
00:05:44.009 --> 00:05:48.006
and we'll specify dev.

84
00:05:48.006 --> 00:05:52.003
We'll also annotate this with an @Bean.

85
00:05:52.003 --> 00:05:58.007
Now to make quicker, I'm going to copy this, paste it again.

86
00:05:58.007 --> 00:06:02.009
This time, changing the dev to qa,

87
00:06:02.009 --> 00:06:07.005
changing the name of the class to qa,

88
00:06:07.005 --> 00:06:13.007
changing the information here to QA and the return to QA.

89
00:06:13.007 --> 00:06:18.003
We'll paste this one more time for our prod instance.

90
00:06:18.003 --> 00:06:21.003
Change the profile to prod,

91
00:06:21.003 --> 00:06:25.000
change the method signature to prod

92
00:06:25.000 --> 00:06:29.007
and a few items here to PROD as well as the return.

93
00:06:29.007 --> 00:06:34.008
Okay, so next we need to clean and build.

94
00:06:34.008 --> 00:06:37.006
And once this is done,

95
00:06:37.006 --> 00:06:50.000
we'll type java-jar-Dspring.profiles.active=dev build/libs

96
00:06:50.000 --> 00:06:54.004
tab over to get the application name and hit Enter.

97
00:06:54.004 --> 00:06:57.005
And as we can see, we scroll up,

98
00:06:57.005 --> 00:07:00.006
we see the environment dev that was chosen

99
00:07:00.006 --> 00:07:03.001
and the properties associated with it.

100
00:07:03.001 --> 00:07:04.006
Let's change it one more time.

101
00:07:04.006 --> 00:07:12.007
This time we'll change it to qa, hit Enter.

102
00:07:12.007 --> 00:07:14.000
We scroll up again.

103
00:07:14.000 --> 00:07:19.000
We can see that it's pulling the properties listed for QA.

