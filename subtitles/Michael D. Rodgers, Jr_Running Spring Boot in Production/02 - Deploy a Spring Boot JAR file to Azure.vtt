WEBVTT
1
00:00:00.007 --> 00:00:02.004
- [Instructor] With Azure CLI installed

2
00:00:02.004 --> 00:00:04.007
we're going to configure our spring boot app

3
00:00:04.007 --> 00:00:09.000
to be deployed with the Azure CLI and Gradle plugin.

4
00:00:09.000 --> 00:00:12.008
We will need both of these to deploy our application.

5
00:00:12.008 --> 00:00:15.000
The Gradle plugin is actually pretty new.

6
00:00:15.000 --> 00:00:17.007
Most spring boot apps in the past

7
00:00:17.007 --> 00:00:19.001
have had to deploy strictly

8
00:00:19.001 --> 00:00:22.000
with only using the Maven plugins.

9
00:00:22.000 --> 00:00:23.009
Okay, so let's first start

10
00:00:23.009 --> 00:00:26.004
with opening our vagrant terminal instance,

11
00:00:26.004 --> 00:00:30.000
and ensure you type vagrant up and vagrant ssh

12
00:00:30.000 --> 00:00:32.004
after the instance is up.

13
00:00:32.004 --> 00:00:34.008
As you can see here, I've already typed these

14
00:00:34.008 --> 00:00:38.004
and I'm logged into the vagrant instance.

15
00:00:38.004 --> 00:00:40.005
We'll be doing the majority of our builds

16
00:00:40.005 --> 00:00:43.004
and deployments through Azure CLI for these videos.

17
00:00:43.004 --> 00:00:46.003
So let's start off by creating a directory

18
00:00:46.003 --> 00:00:47.007
to hold these builds.

19
00:00:47.007 --> 00:00:53.006
We'll type, make directory azure_deployments

20
00:00:53.006 --> 00:00:55.001
hit enter.

21
00:00:55.001 --> 00:00:58.008
We'll cd into the Azure deployment,

22
00:00:58.008 --> 00:01:00.004
clear the screen.

23
00:01:00.004 --> 00:01:03.007
Next we're going to need a token for our build and deploy.

24
00:01:03.007 --> 00:01:07.004
So let's get one from the Azure CLI.

25
00:01:07.004 --> 00:01:13.002
We'll do this by typing az login and hit enter.

26
00:01:13.002 --> 00:01:16.009
This is going to generate for us a message in the browser

27
00:01:16.009 --> 00:01:19.007
and we'll need to enter the key code it provides.

28
00:01:19.007 --> 00:01:21.007
First copy the URL,

29
00:01:21.007 --> 00:01:25.005
open up our browser window, paste this in, hit enter.

30
00:01:25.005 --> 00:01:31.001
We're going to go back now and copy the code.

31
00:01:31.001 --> 00:01:32.004
Go back to our browser window.

32
00:01:32.004 --> 00:01:35.008
We'll paste this in, hit enter.

33
00:01:35.008 --> 00:01:38.000
This will of course prompt us for our credentials

34
00:01:38.000 --> 00:01:40.008
and our password.

35
00:01:40.008 --> 00:01:42.007
And when you're done,

36
00:01:42.007 --> 00:01:47.001
it's going to tell you that you can close this window.

37
00:01:47.001 --> 00:01:50.000
We'll go back to the terminal.

38
00:01:50.000 --> 00:01:51.003
You'll notice after a moment,

39
00:01:51.003 --> 00:01:54.001
the command line interface has been released

40
00:01:54.001 --> 00:01:55.008
from the login command

41
00:01:55.008 --> 00:01:59.003
and now it's ready to accept new commands.

42
00:01:59.003 --> 00:02:02.006
Before we use the Azure CLI we need to prep our code

43
00:02:02.006 --> 00:02:05.005
in IntelliJ and create a new branch.

44
00:02:05.005 --> 00:02:07.004
Update the build.gradle file

45
00:02:07.004 --> 00:02:09.004
and then pull this code down inside

46
00:02:09.004 --> 00:02:11.002
of our vagrant instance.

47
00:02:11.002 --> 00:02:13.006
Let's open up IntelliJ.

48
00:02:13.006 --> 00:02:17.000
With IntelliJ open we're using the project build

49
00:02:17.000 --> 00:02:19.004
that we've been using from previous videos.

50
00:02:19.004 --> 00:02:22.000
This is located in our home directories

51
00:02:22.000 --> 00:02:25.004
at tilde spring boot production.

52
00:02:25.004 --> 00:02:27.007
Now we'll be making updates here.

53
00:02:27.007 --> 00:02:29.008
Before we do this, if you run into issues

54
00:02:29.008 --> 00:02:32.005
with doing git pushes to our remote repository,

55
00:02:32.005 --> 00:02:34.008
and it asks you for a username,

56
00:02:34.008 --> 00:02:36.009
I recommend running the following.

57
00:02:36.009 --> 00:02:45.001
We'll type git remote set-url origin.

58
00:02:45.001 --> 00:02:52.002
Then it's going to be HTTPS://your username for GitHub.

59
00:02:52.002 --> 00:02:59.002
My line is cwm-coding at github.com/

60
00:02:59.002 --> 00:03:04.002
again your username, cwm-coding is mine,

61
00:03:04.002 --> 00:03:06.001
and then the name of the project,

62
00:03:06.001 --> 00:03:13.004
spring boot production.git, and hit enter.

63
00:03:13.004 --> 00:03:16.006
Again, note that CWM coding is used twice here

64
00:03:16.006 --> 00:03:20.000
in this url and this is the username.

65
00:03:20.000 --> 00:03:22.006
Next from the terminal window,

66
00:03:22.006 --> 00:03:26.009
we're going to type git switch main

67
00:03:26.009 --> 00:03:29.002
and I'm already on the main directory.

68
00:03:29.002 --> 00:03:36.006
This is going to be followed by git checkout -b azure_jar,

69
00:03:36.006 --> 00:03:38.002
hit enter.

70
00:03:38.002 --> 00:03:39.003
Next, we're going to push

71
00:03:39.003 --> 00:03:41.003
this new branch back to production.

72
00:03:41.003 --> 00:03:49.001
We'll type, git push -u origin azure_jar,

73
00:03:49.001 --> 00:03:50.008
hit enter.

74
00:03:50.008 --> 00:03:52.003
After running the push command

75
00:03:52.003 --> 00:03:55.003
it may ask you for your password.

76
00:03:55.003 --> 00:03:59.002
If it does, please copy and paste the user token

77
00:03:59.002 --> 00:04:01.000
for this action.

78
00:04:01.000 --> 00:04:03.009
Okay, let's clear the window.

79
00:04:03.009 --> 00:04:09.005
We're going to open our build.gradle,

80
00:04:09.005 --> 00:04:11.003
scroll to the top.

81
00:04:11.003 --> 00:04:14.000
Inside the plugin sections at the top,

82
00:04:14.000 --> 00:04:17.002
go down to just underneath the spring management,

83
00:04:17.002 --> 00:04:21.008
hit enter and right above the ID, 'java',

84
00:04:21.008 --> 00:04:34.000
we're going to type ID 'com.microsoft.azure.azureweb'

85
00:04:34.000 --> 00:04:36.003
and then outside of this we're going to type

86
00:04:36.003 --> 00:04:42.001
version 1.1.0.

87
00:04:42.001 --> 00:04:43.004
We'll save that.

88
00:04:43.004 --> 00:04:46.000
Let's check and make sure we've type everything okay,

89
00:04:46.000 --> 00:04:51.002
com.microsoft.azure.azureweb.

90
00:04:51.002 --> 00:04:53.009
There we go, azure web app.

91
00:04:53.009 --> 00:04:55.006
We'll save that.

92
00:04:55.006 --> 00:04:58.005
And I want to briefly show you the GitHub repository

93
00:04:58.005 --> 00:05:01.008
that this plugin is related to.

94
00:05:01.008 --> 00:05:03.007
If we go to the GitHub repository,

95
00:05:03.007 --> 00:05:07.008
Microsoft Azure-Gradle-plugins

96
00:05:07.008 --> 00:05:12.003
tree master Azure-web app-Gradle plugin.

97
00:05:12.003 --> 00:05:17.004
This is the plugin that we are using for this build.

98
00:05:17.004 --> 00:05:20.003
Now I recommend you take time, review the plugin

99
00:05:20.003 --> 00:05:23.009
the information here as well as the documentation.

100
00:05:23.009 --> 00:05:26.004
Microsoft also has a Wiki that runs through

101
00:05:26.004 --> 00:05:30.003
the various plugin properties that you could use.

102
00:05:30.003 --> 00:05:33.008
And of course how you would authenticate,

103
00:05:33.008 --> 00:05:35.004
along with examples.

104
00:05:35.004 --> 00:05:37.008
Let's go back to the other page.

105
00:05:37.008 --> 00:05:39.007
We'll scroll down,

106
00:05:39.007 --> 00:05:43.005
and we're going to be using this section of code here.

107
00:05:43.005 --> 00:05:46.006
I recommend you go ahead and copy.

108
00:05:46.006 --> 00:05:49.007
Now let's go back to IntelliJ.

109
00:05:49.007 --> 00:05:52.005
Let's go down to the bottom,

110
00:05:52.005 --> 00:05:54.000
going to hit enter a couple times

111
00:05:54.000 --> 00:05:55.007
and we're going to paste in

112
00:05:55.007 --> 00:05:58.007
what we just copied from the website.

113
00:05:58.007 --> 00:06:00.003
We'll save it.

114
00:06:00.003 --> 00:06:04.002
We're going to go up and begin modifying the configuration.

115
00:06:04.002 --> 00:06:06.009
First, let's start with resource group.

116
00:06:06.009 --> 00:06:14.005
We're going to type spring boot-azure-group,

117
00:06:14.005 --> 00:06:27.006
for our app name we'll type spring boot- Azure-app.

118
00:06:27.006 --> 00:06:32.006
For pricing tier will use B1.

119
00:06:32.006 --> 00:06:36.005
And for the region,

120
00:06:36.005 --> 00:06:41.006
we'll go ahead and just use westus.

121
00:06:41.006 --> 00:06:42.007
In the runtime section,

122
00:06:42.007 --> 00:06:48.009
you can tell that we can choose either Tomcat 9.0 or Java SE

123
00:06:48.009 --> 00:06:56.000
since we're doing a jar install, we'll type Java SE.

124
00:06:56.000 --> 00:06:59.005
And we'll leave the Java version as is.

125
00:06:59.005 --> 00:07:01.000
For the app settings,

126
00:07:01.000 --> 00:07:04.004
we can apply any number of different app settings here.

127
00:07:04.004 --> 00:07:11.004
So we're going to type our spring profiles=

128
00:07:11.004 --> 00:07:13.008
and I'm going to type two profiles,

129
00:07:13.008 --> 00:07:16.007
dev,azure

130
00:07:16.007 --> 00:07:18.002
we'll save that,

131
00:07:18.002 --> 00:07:20.006
scroll down and then for the auth,

132
00:07:20.006 --> 00:07:23.002
we'll leave it as Azure CLI.

133
00:07:23.002 --> 00:07:26.001
There's one final property we need to git

134
00:07:26.001 --> 00:07:28.000
and this is the subscription.

135
00:07:28.000 --> 00:07:30.000
I'm going to pause and give a security warning

136
00:07:30.000 --> 00:07:31.007
before we move forward.

137
00:07:31.007 --> 00:07:34.004
I highly discourage you from committing this code

138
00:07:34.004 --> 00:07:37.003
with your Azure subscription ID

139
00:07:37.003 --> 00:07:40.008
because we're using the Azure CLI the subscription ID

140
00:07:40.008 --> 00:07:44.004
is not required for this to work.

141
00:07:44.004 --> 00:07:46.008
Let's go back to the terminal window.

142
00:07:46.008 --> 00:07:50.005
And since we've already ran az space login

143
00:07:50.005 --> 00:07:54.002
we're going to now retrieve our Azure subscription ID.

144
00:07:54.002 --> 00:07:59.004
We can get this by I typing az account list

145
00:07:59.004 --> 00:08:02.004
and we'll use the output table

146
00:08:02.004 --> 00:08:06.009
for a more friendly readable view.

147
00:08:06.009 --> 00:08:10.000
We'll copy the subscription ID.

148
00:08:10.000 --> 00:08:14.008
Let's go back now to our build Gradle file in IntelliJ,

149
00:08:14.008 --> 00:08:18.000
and we'll paste it in here.

150
00:08:18.000 --> 00:08:20.003
With all these changes complete,

151
00:08:20.003 --> 00:08:22.003
now in inside of the IntelliJ terminal,

152
00:08:22.003 --> 00:08:25.006
let's type git add,

153
00:08:25.006 --> 00:08:38.002
then git commit -m, changes added for azure deployment,

154
00:08:38.002 --> 00:08:47.007
and then git push -u origin azure_jar, hit enter.

155
00:08:47.007 --> 00:08:51.004
Now let's switch over to our terminal window,

156
00:08:51.004 --> 00:08:56.003
and let's go to the Azure deployments directory.

157
00:08:56.003 --> 00:08:58.000
Let's clear the screen.

158
00:08:58.000 --> 00:09:00.003
And so next we need to actually clone

159
00:09:00.003 --> 00:09:03.000
what we've actually committed to the remote repository.

160
00:09:03.000 --> 00:09:07.007
I'm going to type git clone -b

161
00:09:07.007 --> 00:09:12.007
for the branch that I want to clone, azure_jar

162
00:09:12.007 --> 00:09:14.008
and then the URL for GitHub,

163
00:09:14.008 --> 00:09:25.004
https://github.com, our username cwm-coding.

164
00:09:25.004 --> 00:09:27.009
Please make sure you put in your username,

165
00:09:27.009 --> 00:09:30.000
and then the repository name,

166
00:09:30.000 --> 00:09:36.004
spring boot production.git, hit enter.

167
00:09:36.004 --> 00:09:39.003
As you can see, this will clone the repository

168
00:09:39.003 --> 00:09:44.008
and put it in our Azure deployments directory.

169
00:09:44.008 --> 00:09:47.003
With this done, let's type clear.

170
00:09:47.003 --> 00:09:50.009
Next, we need to cd into the directory

171
00:09:50.009 --> 00:09:54.009
and we'll type git status to verify the branch.

172
00:09:54.009 --> 00:09:57.002
As you can see, our branch is up to date

173
00:09:57.002 --> 00:09:59.009
with origin azure jar.

174
00:09:59.009 --> 00:10:04.007
We're going to type git fetch origin

175
00:10:04.007 --> 00:10:09.002
and then git full origin.

176
00:10:09.002 --> 00:10:10.007
Next let's clear the window.

177
00:10:10.007 --> 00:10:15.005
And we first need to start by building our application.

178
00:10:15.005 --> 00:10:20.008
We'll type .gradlew clean build.

179
00:10:20.008 --> 00:10:23.008
I want to forewarn you the first time you run a gradle build

180
00:10:23.008 --> 00:10:26.008
in this environment it may take a while.

181
00:10:26.008 --> 00:10:28.006
Gradle has a number of dependencies

182
00:10:28.006 --> 00:10:30.009
that it needs to download.

183
00:10:30.009 --> 00:10:34.009
This step is crucial because the jar has to be built

184
00:10:34.009 --> 00:10:37.000
before we can run the next plugin,

185
00:10:37.000 --> 00:10:42.003
which is the Gradle Azure web App Deployed plugin.

186
00:10:42.003 --> 00:10:44.009
Okay, so it looks like we have an error.

187
00:10:44.009 --> 00:10:47.007
Can you see where the error was made?

188
00:10:47.007 --> 00:10:51.000
If not notice that I mistyped web app

189
00:10:51.000 --> 00:10:53.007
there's only one B in web app.

190
00:10:53.007 --> 00:10:57.005
Let's go back to IntelliJ and fix this real quick.

191
00:10:57.005 --> 00:11:02.003
Go to the top of our plugin section,

192
00:11:02.003 --> 00:11:04.006
click that out, save it.

193
00:11:04.006 --> 00:11:07.001
We'll run our git add,

194
00:11:07.001 --> 00:11:12.006
git commit, and we'll push this back.

195
00:11:12.006 --> 00:11:15.003
Once that's done, go back to our terminal.

196
00:11:15.003 --> 00:11:19.009
We'll write git full origin.

197
00:11:19.009 --> 00:11:22.000
That'll pull down our correction.

198
00:11:22.000 --> 00:11:25.009
Now we'll rerun our clean and build.

199
00:11:25.009 --> 00:11:28.002
It always pays to pay attention to when you type

200
00:11:28.002 --> 00:11:32.005
sometimes even the best of us can accidentally fat finger,

201
00:11:32.005 --> 00:11:34.004
an extra key.

202
00:11:34.004 --> 00:11:37.003
But that's okay, hopefully this encourages you that

203
00:11:37.003 --> 00:11:41.004
all of us make mistakes.

204
00:11:41.004 --> 00:11:42.009
With the initial build done,

205
00:11:42.009 --> 00:11:45.008
now it's time to run our Azure web deploy.

206
00:11:45.008 --> 00:11:47.008
Let's clear the screen.

207
00:11:47.008 --> 00:11:55.004
And we'll type gradlew azurewebAppDeploy,

208
00:11:55.004 --> 00:11:57.000
and hit enter.

209
00:11:57.000 --> 00:11:59.001
This command will build the app

210
00:11:59.001 --> 00:12:01.004
and of course prepare it to be pushed

211
00:12:01.004 --> 00:12:04.005
to Azure for deployment.

212
00:12:04.005 --> 00:12:06.002
The first time you run this command here

213
00:12:06.002 --> 00:12:07.009
it will take a moment

214
00:12:07.009 --> 00:12:13.005
but feel free to pause the video while you wait.

215
00:12:13.005 --> 00:12:16.006
As you can tell the resource been created

216
00:12:16.006 --> 00:12:18.008
within the region west us,

217
00:12:18.008 --> 00:12:22.004
it's creating the web app for spring boot Azure app,

218
00:12:22.004 --> 00:12:25.005
and it's creating the Azure app service plan

219
00:12:25.005 --> 00:12:31.009
called ASP spring boot-Azure-app.

220
00:12:31.009 --> 00:12:33.006
Okay, so it's done.

221
00:12:33.006 --> 00:12:37.001
Now deployment times vary based on your broadband service

222
00:12:37.001 --> 00:12:39.007
and which region you decide to use.

223
00:12:39.007 --> 00:12:42.007
For me, this deployment took six minutes.

224
00:12:42.007 --> 00:12:45.000
As you can see, it's giving us a URL

225
00:12:45.000 --> 00:12:47.000
that it's successfully deployed to.

226
00:12:47.000 --> 00:12:49.004
Let's copy this URL,

227
00:12:49.004 --> 00:12:53.003
open up a browser window and test the deployment.

228
00:12:53.003 --> 00:12:56.007
The first time you load it it will take a moment,

229
00:12:56.007 --> 00:12:59.005
if we can refresh it.

230
00:12:59.005 --> 00:13:01.003
And there we go.

231
00:13:01.003 --> 00:13:03.002
Through the Azure and Gradle plugin

232
00:13:03.002 --> 00:13:06.009
we've successfully built and deployed our application.

233
00:13:06.009 --> 00:13:10.004
Now, if we go over to the Azure portal

234
00:13:10.004 --> 00:13:12.004
and click on resource groups,

235
00:13:12.004 --> 00:13:16.005
we should see our resource group that's been created,

236
00:13:16.005 --> 00:13:18.008
SpringBoot Azure Group.

237
00:13:18.008 --> 00:13:20.000
With all of this done,

238
00:13:20.000 --> 00:13:21.005
we need to tear down the app.

239
00:13:21.005 --> 00:13:25.009
Let's go back to of the web app, in our terminal

240
00:13:25.009 --> 00:13:27.006
and go through the commands necessary

241
00:13:27.006 --> 00:13:29.002
for taking down the app.

242
00:13:29.002 --> 00:13:38.000
We'll type az webapp, delete -- our name

243
00:13:38.000 --> 00:13:50.007
Spring Boot Azure -app, space resource-group

244
00:13:50.007 --> 00:13:57.008
SpringBoot Azure-group, hit enter.

245
00:13:57.008 --> 00:14:00.006
This will take a few moments.

246
00:14:00.006 --> 00:14:03.007
Next, let's go ahead and delete the app service plan.

247
00:14:03.007 --> 00:14:18.004
We'll type az appservice space plan-elite- name space asp

248
00:14:18.004 --> 00:14:26.001
- spring boot- azure-app space,

249
00:14:26.001 --> 00:14:38.003
again, our resource group spring boot-azure- group

250
00:14:38.003 --> 00:14:42.007
space space-yes, hit enter.

251
00:14:42.007 --> 00:14:44.003
And this is going to generate an error

252
00:14:44.003 --> 00:14:46.005
because we need to delete the resource group.

253
00:14:46.005 --> 00:15:02.001
So we'll type az group delete --name SpringBoot-Azure-group

254
00:15:02.001 --> 00:15:05.000
- -yes and hit enter.

