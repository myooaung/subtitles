WEBVTT
1
00:00:00.005 --> 00:00:02.007
- [Instructor] For this video open IntelliJ

2
00:00:02.007 --> 00:00:05.003
and we'll be using the source code from the previous video

3
00:00:05.003 --> 00:00:08.004
located in our home directories,

4
00:00:08.004 --> 00:00:12.001
@tilda/SpringBootProduction.

5
00:00:12.001 --> 00:00:15.000
This tutorial will map to our lab exercise files

6
00:00:15.000 --> 00:00:18.006
of zero five_zero three begin and end,

7
00:00:18.006 --> 00:00:21.001
if you need to review the state of your code.

8
00:00:21.001 --> 00:00:24.002
So leaving off from the last video,

9
00:00:24.002 --> 00:00:27.002
we will go back to the terminal in IntelliJ

10
00:00:27.002 --> 00:00:31.000
and we're going to type git checkout

11
00:00:31.000 --> 00:00:39.005
- b azure_war from azure_jar.

12
00:00:39.005 --> 00:00:41.007
This will create a new branch

13
00:00:41.007 --> 00:00:44.002
from the azure jar called azure war

14
00:00:44.002 --> 00:00:47.009
and it will check it out for us.

15
00:00:47.009 --> 00:00:50.008
Next we're going to open

16
00:00:50.008 --> 00:00:52.006
the build.gradle

17
00:00:52.006 --> 00:00:56.000
we'll scroll to the top and just underneath the id,

18
00:00:56.000 --> 00:01:01.000
'java' we'll type id 'war.'

19
00:01:01.000 --> 00:01:02.003
Underneath the { here

20
00:01:02.003 --> 00:01:04.009
we'll hit enter a couple of times

21
00:01:04.009 --> 00:01:09.006
and we'll type bootWar {

22
00:01:09.006 --> 00:01:12.008
then the archiveFileName,

23
00:01:12.008 --> 00:01:21.004
this will be 'SpringBootProadApplication.war'

24
00:01:21.004 --> 00:01:23.003
we'll save that.

25
00:01:23.003 --> 00:01:26.009
We'll scroll down to our dependency section

26
00:01:26.009 --> 00:01:33.001
and we're going to add a dependency providedRuntime.

27
00:01:33.001 --> 00:01:37.006
And I'm going to copy the majority of this for time sake,

28
00:01:37.006 --> 00:01:42.003
'org.springframeworkboot:springframeworkboot.starter

29
00:01:42.003 --> 00:01:44.009
and then we'll finish this with tomcat.

30
00:01:44.009 --> 00:01:47.001
And finally, the last thing we need to do here

31
00:01:47.001 --> 00:01:51.001
is locate our Azure Web App in fig section.

32
00:01:51.001 --> 00:01:54.004
And we're going to change the Azure resource group.

33
00:01:54.004 --> 00:01:58.007
We'll call this -war.

34
00:01:58.007 --> 00:02:01.009
We'll call the app -war,

35
00:02:01.009 --> 00:02:07.000
as you can see I'm inserting war inside up here.

36
00:02:07.000 --> 00:02:10.008
And we're going to change the web container from Java SE

37
00:02:10.008 --> 00:02:17.007
we're going to change it instead to Tomcat eight.five.

38
00:02:17.007 --> 00:02:21.003
Next we'll go to our application.properties

39
00:02:21.003 --> 00:02:22.001
we'll type

40
00:02:22.001 --> 00:02:36.007
server.servlet.contextPath=/SpringBootProdApplication.

41
00:02:36.007 --> 00:02:38.001
This will match

42
00:02:38.001 --> 00:02:43.001
our archive file name, of course minus the .war.

43
00:02:43.001 --> 00:02:44.003
And the final change we'll make

44
00:02:44.003 --> 00:02:48.002
is to our SpringBootProdApplication class,

45
00:02:48.002 --> 00:02:49.008
in here we're going to say

46
00:02:49.008 --> 00:02:56.009
extends SpringBootServletInitializers.

47
00:02:56.009 --> 00:02:59.003
Underneath the public static void main method

48
00:02:59.003 --> 00:03:03.001
hit enter a couple of times we'll type override

49
00:03:03.001 --> 00:03:05.008
this will be a protected method.

50
00:03:05.008 --> 00:03:09.000
Return SpringApplicationBuilder

51
00:03:09.000 --> 00:03:12.000
the method name will be configure

52
00:03:12.000 --> 00:03:16.004
and this will accept a spring application builder

53
00:03:16.004 --> 00:03:20.002
and we'll call the parameter builder.

54
00:03:20.002 --> 00:03:23.004
On the next line we're going to return builder

55
00:03:23.004 --> 00:03:26.007
using the sources, we'll pass in the name of the class

56
00:03:26.007 --> 00:03:28.005
we're in which is,

57
00:03:28.005 --> 00:03:33.006
SpringBootProdApplication.class.

58
00:03:33.006 --> 00:03:35.007
We'll save those changes.

59
00:03:35.007 --> 00:03:36.009
We'll go down to the terminal

60
00:03:36.009 --> 00:03:41.001
we'll type git add.

61
00:03:41.001 --> 00:03:45.000
git commit-m

62
00:03:45.000 --> 00:03:52.001
changes for azure war deployment hit enter

63
00:03:52.001 --> 00:04:01.002
and then git push-U origin azure_war.

64
00:04:01.002 --> 00:04:04.001
Once those changes are pushed to the remote branch

65
00:04:04.001 --> 00:04:06.009
we'll open back up our terminal window

66
00:04:06.009 --> 00:04:09.003
and ensure that you have Vagrant started up

67
00:04:09.003 --> 00:04:12.002
by typing Vagrant app.

68
00:04:12.002 --> 00:04:15.000
And once Vagrant has finished initializing,

69
00:04:15.000 --> 00:04:20.008
you're going to type Vagrant ssh to enter the Linux VM

70
00:04:20.008 --> 00:04:23.009
as you can see here, I've already done this.

71
00:04:23.009 --> 00:04:28.008
Next you need to CD to the azure_deployments

72
00:04:28.008 --> 00:04:31.007
SpringBootProduction directory,

73
00:04:31.007 --> 00:04:33.006
and I'm there right now.

74
00:04:33.006 --> 00:04:38.007
Once you're in this directory type git fetch origin

75
00:04:38.007 --> 00:04:44.000
and then we're going to type git switch azure_war

76
00:04:44.000 --> 00:04:45.003
hit enter.

77
00:04:45.003 --> 00:04:49.007
And finally we'll type git pull origin.

78
00:04:49.007 --> 00:04:53.004
With everything up to date, we'll clear the screen.

79
00:04:53.004 --> 00:04:56.006
And at this point we need to first clean and build

80
00:04:56.006 --> 00:04:58.005
and then later we'll deploy.

81
00:04:58.005 --> 00:04:59.006
Let's clean and build

82
00:04:59.006 --> 00:05:07.004
we'll type .gradle w clean build and hit enter.

83
00:05:07.004 --> 00:05:09.005
When that finishes and there are no errors

84
00:05:09.005 --> 00:05:12.007
then it's time to deploy with the Azure Web App deploy

85
00:05:12.007 --> 00:05:22.007
gradle plugin, we'll type .gradle w azureWebAppDeploy

86
00:05:22.007 --> 00:05:29.005
and hit enter.

87
00:05:29.005 --> 00:05:30.008
Awesome.

88
00:05:30.008 --> 00:05:34.000
Our build has successfully deployed.

89
00:05:34.000 --> 00:05:42.001
And again, if we open the URL, we'll copy this

90
00:05:42.001 --> 00:05:46.004
open a browser and paste.

91
00:05:46.004 --> 00:05:50.000
Initially, it's going to come up to the default

92
00:05:50.000 --> 00:05:51.005
deployment page.

93
00:05:51.005 --> 00:05:55.002
This is because the war file is actually still deploying.

94
00:05:55.002 --> 00:05:58.001
We'll wait a couple of seconds and then we'll refresh

95
00:05:58.001 --> 00:06:02.001
and our web app should show.

96
00:06:02.001 --> 00:06:03.009
And there we go.

97
00:06:03.009 --> 00:06:05.008
Again, it does take a little bit longer

98
00:06:05.008 --> 00:06:10.004
for the deployment of a war file to a Tomcat instance

99
00:06:10.004 --> 00:06:12.008
but as you can see, after pausing a moment

100
00:06:12.008 --> 00:06:15.000
and refreshing the application will load.

