WEBVTT
1
00:00:00.005 --> 00:00:01.005
- [Instructor] Okay, the next part

2
00:00:01.005 --> 00:00:03.003
is going to be a little bit more complicated.

3
00:00:03.003 --> 00:00:06.000
Let's go over to the AWS console.

4
00:00:06.000 --> 00:00:09.001
I've already opened the AWS management console

5
00:00:09.001 --> 00:00:10.006
and logged in.

6
00:00:10.006 --> 00:00:14.005
When you get to this point, we're going to click

7
00:00:14.005 --> 00:00:20.006
on the username, go down to security credentials,

8
00:00:20.006 --> 00:00:24.004
and you're going to need your AWS access key,

9
00:00:24.004 --> 00:00:28.003
ID and AWS secret key.

10
00:00:28.003 --> 00:00:34.009
If you go to access keys, we have a previous access key

11
00:00:34.009 --> 00:00:41.003
that was created last time when we did the AWS tutorial.

12
00:00:41.003 --> 00:00:44.002
If you do not remember, or did not save that,

13
00:00:44.002 --> 00:00:48.008
this of time to go ahead and click create new access key.

14
00:00:48.008 --> 00:00:52.005
I have mine already in a file, so I'm good.

15
00:00:52.005 --> 00:00:57.009
Next, I want you to click on the AWS icon in the top left.

16
00:00:57.009 --> 00:01:01.006
This will take you back to the home screen.

17
00:01:01.006 --> 00:01:05.000
Then inside of the AWS services,

18
00:01:05.000 --> 00:01:08.000
if Elastic Beanstalk is available, click on on that.

19
00:01:08.000 --> 00:01:13.000
Otherwise go to the search and type Elastic Beanstalk.

20
00:01:13.000 --> 00:01:16.000
The GitHub action we're going to use requires

21
00:01:16.000 --> 00:01:17.002
that the app name

22
00:01:17.002 --> 00:01:20.004
and the app environment are set in advance.

23
00:01:20.004 --> 00:01:26.002
Mine already has one and I assume that you might as well.

24
00:01:26.002 --> 00:01:30.003
So for this demo, we really want to clean slate going forward.

25
00:01:30.003 --> 00:01:33.006
To delete these, select the radio button,

26
00:01:33.006 --> 00:01:39.002
go up to actions and click terminate environment.

27
00:01:39.002 --> 00:01:41.000
Then in the window,

28
00:01:41.000 --> 00:01:45.009
you're going to type SpringBootProduction-dev.

29
00:01:45.009 --> 00:01:51.002
I'm going to copy it and paste it in and click terminate.

30
00:01:51.002 --> 00:01:54.004
This will probably take a few minutes.

31
00:01:54.004 --> 00:01:55.005
When this is complete,

32
00:01:55.005 --> 00:01:58.004
we're going to go and do some more configurations

33
00:01:58.004 --> 00:02:03.000
for deploying our application.

34
00:02:03.000 --> 00:02:11.005
We'll click on events to see how this is going.

35
00:02:11.005 --> 00:02:14.003
As you can tell, there are a number of things happening here

36
00:02:14.003 --> 00:02:17.003
between the leading auto scaling groups,

37
00:02:17.003 --> 00:02:25.007
the leading load balancers, and environments, instances.

38
00:02:25.007 --> 00:02:30.000
Next, we need to click on the applications link on the left

39
00:02:30.000 --> 00:02:33.008
and then click the radio button of the application.

40
00:02:33.008 --> 00:02:37.004
My page is already open so click the radio button,

41
00:02:37.004 --> 00:02:41.009
click actions, and delete application.

42
00:02:41.009 --> 00:02:45.007
I'm going to copy the Spring Boot production,

43
00:02:45.007 --> 00:02:48.003
type it in and click delete.

44
00:02:48.003 --> 00:02:51.008
Again, unfortunately this may take a few minutes.

45
00:02:51.008 --> 00:02:56.007
Okay, with all of that done, let's create the application.

46
00:02:56.007 --> 00:02:59.001
Click the button create application

47
00:02:59.001 --> 00:03:06.005
and we're going to call this SpringBootProdApp.

48
00:03:06.005 --> 00:03:10.003
We're going to scroll down to the platform.

49
00:03:10.003 --> 00:03:16.004
We'll choose Java and Corretto 11 is fine for this.

50
00:03:16.004 --> 00:03:21.004
At the bottom, we're going to click create application

51
00:03:21.004 --> 00:03:28.007
allowing the sample app be selected.

52
00:03:28.007 --> 00:03:30.000
This will take a few moments

53
00:03:30.000 --> 00:03:33.002
but if we click on environments,

54
00:03:33.002 --> 00:03:39.000
we should see our SpringBootProdApp environment created.

55
00:03:39.000 --> 00:03:42.009
So the last step here is to make some configuration changes

56
00:03:42.009 --> 00:03:45.002
and then we're going to go back to GitHub

57
00:03:45.002 --> 00:03:48.005
and set our actions for auto deploying our code.

58
00:03:48.005 --> 00:03:50.005
Inside of this environment,

59
00:03:50.005 --> 00:03:54.002
we're going to click configuration

60
00:03:54.002 --> 00:03:57.001
and then we'll click on software.

61
00:03:57.001 --> 00:03:58.005
We're going to scroll down

62
00:03:58.005 --> 00:04:01.007
'til we see the environment properties.

63
00:04:01.007 --> 00:04:09.002
We're going to type server_port and we'll add 5000

64
00:04:09.002 --> 00:04:11.008
which is what the Elastic Beanstalk configures

65
00:04:11.008 --> 00:04:14.007
for Spring Boot JARs.

66
00:04:14.007 --> 00:04:24.002
And then lastly, we're going to add SPRING_PROFILES_ACTIVE

67
00:04:24.002 --> 00:04:26.006
with a value of prod.

68
00:04:26.006 --> 00:04:29.004
With all of that done, we'll click apply

69
00:04:29.004 --> 00:04:32.008
and we're ready to finish our GitHub action.

70
00:04:32.008 --> 00:04:36.006
We're going to go back to our GitHub page

71
00:04:36.006 --> 00:04:38.003
and we're going to use a workflow

72
00:04:38.003 --> 00:04:43.003
called DylanBDev/beanstalk-deploy.

73
00:04:43.003 --> 00:04:45.002
This workflow takes two GitHub secrets

74
00:04:45.002 --> 00:04:47.000
which we need to configure.

75
00:04:47.000 --> 00:04:49.006
Now to do this, we need to click on the settings gear

76
00:04:49.006 --> 00:04:51.004
in the top right.

77
00:04:51.004 --> 00:04:53.009
We'll click settings.

78
00:04:53.009 --> 00:04:58.004
We'll go down to secrets

79
00:04:58.004 --> 00:05:01.001
and we're going to add two repository secrets.

80
00:05:01.001 --> 00:05:04.004
We'll click new repository secret.

81
00:05:04.004 --> 00:05:14.007
The first repository secret will be our AWS access key ID.

82
00:05:14.007 --> 00:05:17.007
The value for this is what you should have saved

83
00:05:17.007 --> 00:05:19.000
in your file.

84
00:05:19.000 --> 00:05:24.002
Paste the access key ID in.

85
00:05:24.002 --> 00:05:27.000
We'll click add secret.

86
00:05:27.000 --> 00:05:28.008
We'll add another secret.

87
00:05:28.008 --> 00:05:35.001
And this one will be the AWS secret access key.

88
00:05:35.001 --> 00:05:37.001
Paste that in.

89
00:05:37.001 --> 00:05:39.000
We'll go to our file.

90
00:05:39.000 --> 00:05:40.008
We'll copy that.

91
00:05:40.008 --> 00:05:43.001
And we'll paste the secret key in

92
00:05:43.001 --> 00:05:46.004
and we'll click add secret.

93
00:05:46.004 --> 00:05:51.009
Next we need to go to IntelliJ and load our workflow

94
00:05:51.009 --> 00:05:55.001
in the GitHub workflows folder.

95
00:05:55.001 --> 00:05:56.008
Mine is already open.

96
00:05:56.008 --> 00:06:00.002
And at the bottom just after retention days,

97
00:06:00.002 --> 00:06:04.009
going to hit enter, roll over to the dash line,

98
00:06:04.009 --> 00:06:14.005
type -name: Beanstalk Deploy for JAR.

99
00:06:14.005 --> 00:06:16.001
Hit Enter.

100
00:06:16.001 --> 00:06:27.005
We'll type uses and we'll type DylanBDev/Beanstalk-deploy.

101
00:06:27.005 --> 00:06:31.002
And the version is @initial.

102
00:06:31.002 --> 00:06:32.003
We'll hit Enter.

103
00:06:32.003 --> 00:06:35.008
Here we'll type with:, hit enter.

104
00:06:35.008 --> 00:06:38.009
Ensure you've tabbed the appropriate spaces.

105
00:06:38.009 --> 00:06:48.001
And then next we're going to tie a AWS_access_key:.

106
00:06:48.001 --> 00:06:54.007
We'll type ${{}}.

107
00:06:54.007 --> 00:07:08.006
Inside of this we'll type secrets.aws_access_key_ID.

108
00:07:08.006 --> 00:07:09.009
Hit Enter.

109
00:07:09.009 --> 00:07:18.001
We'll type AWS_secret_key:.

110
00:07:18.001 --> 00:07:22.004
And for time like I'm going to copy this.

111
00:07:22.004 --> 00:07:25.002
Paste it back down below.

112
00:07:25.002 --> 00:07:27.005
Backspace a little bit.

113
00:07:27.005 --> 00:07:32.009
Secret_access_key.

114
00:07:32.009 --> 00:07:35.004
Go to the end and hit Enter.

115
00:07:35.004 --> 00:07:38.001
We prefix these with secrets

116
00:07:38.001 --> 00:07:41.002
to point at the secrets that we just created.

117
00:07:41.002 --> 00:07:45.000
And GitHub knows to access the secret file

118
00:07:45.000 --> 00:07:47.008
to look for these repository keys.

119
00:07:47.008 --> 00:07:49.006
So the next line that we're going to type

120
00:07:49.006 --> 00:07:57.004
is application_name: and this will be the name

121
00:07:57.004 --> 00:08:03.001
of the Spring Boot app we created in AWS.

122
00:08:03.001 --> 00:08:08.008
So we'll call SpringBootProdApp.

123
00:08:08.008 --> 00:08:11.006
Let's go over back to our Chrome window

124
00:08:11.006 --> 00:08:14.002
and validate this.

125
00:08:14.002 --> 00:08:17.009
We'll click on applications.

126
00:08:17.009 --> 00:08:20.000
SpringBootProdApp.

127
00:08:20.000 --> 00:08:22.004
We'll go back to IntelliJ.

128
00:08:22.004 --> 00:08:24.000
We'll hit new line

129
00:08:24.000 --> 00:08:28.000
and now we're going to type the environment name.

130
00:08:28.000 --> 00:08:31.005
Go back to AWS.

131
00:08:31.005 --> 00:08:35.006
You can see the environment name listed here.

132
00:08:35.006 --> 00:08:40.006
We'll click on the application, click on the environment.

133
00:08:40.006 --> 00:08:42.007
I'm just going to copy this.

134
00:08:42.007 --> 00:08:46.008
Go back to IntelliJ and paste this in.

135
00:08:46.008 --> 00:08:48.005
We'll hit Enter again.

136
00:08:48.005 --> 00:08:52.004
Now keep in mind that what we have typed so far

137
00:08:52.004 --> 00:08:56.000
must match what's in the a AWS console.

138
00:08:56.000 --> 00:08:59.008
The next thing that we're going to identify

139
00:08:59.008 --> 00:09:02.002
is the version label.

140
00:09:02.002 --> 00:09:07.004
Then we'll type version_label:

141
00:09:07.004 --> 00:09:08.007
and I'm going to type

142
00:09:08.007 --> 00:09:22.005
SpringBootProdApp-${{steps.time.outputs.time.

143
00:09:22.005 --> 00:09:26.001
You probably remember this from the previous video.

144
00:09:26.001 --> 00:09:28.008
This appends a timestamp attribute

145
00:09:28.008 --> 00:09:31.007
that we set earlier to the app label.

146
00:09:31.007 --> 00:09:37.001
This is important because Elastic Beanstalk uses S3 buckets

147
00:09:37.001 --> 00:09:42.002
to stage the timestamp and the label keeps things unique.

148
00:09:42.002 --> 00:09:43.004
If they're not unique,

149
00:09:43.004 --> 00:09:48.002
the next time you go to deploy a change, AWS gets confused

150
00:09:48.002 --> 00:09:53.000
with which S3 bucket to use and the JAR to deploy.

151
00:09:53.000 --> 00:09:56.001
So at the end of this line, click next.

152
00:09:56.001 --> 00:09:59.005
Now we're going to identify our region, colon,

153
00:09:59.005 --> 00:10:04.002
if you don't know your region, go back to AWS again.

154
00:10:04.002 --> 00:10:08.002
We'll click on the region, Ohio for me,

155
00:10:08.002 --> 00:10:13.004
us-east-2, go back to IntelliJ.

156
00:10:13.004 --> 00:10:19.007
I'll type us-east-2 and hit Enter.

157
00:10:19.007 --> 00:10:26.009
Next we're going to type deployment_package:.

158
00:10:26.009 --> 00:10:30.007
And this is going to be the name

159
00:10:30.007 --> 00:10:34.009
and the directory of our built Spring Boot application.

160
00:10:34.009 --> 00:10:35.008
So this will be

161
00:10:35.008 --> 00:10:52.005
builds/libs/SpringBootProdApplication-0.0.1-SNAPSHOT.jar.

162
00:10:52.005 --> 00:10:56.000
Okay. Control + S to save this.

163
00:10:56.000 --> 00:11:00.000
Now the build package must match the location

164
00:11:00.000 --> 00:11:02.007
and the directory for this file.

165
00:11:02.007 --> 00:11:06.001
The last thing to do here is to change the action

166
00:11:06.001 --> 00:11:07.002
that it's fired upon.

167
00:11:07.002 --> 00:11:09.004
If you remember in the last video,

168
00:11:09.004 --> 00:11:14.003
we changed it from main to jar workflows.

169
00:11:14.003 --> 00:11:17.002
We're going to change this back to the main branch.

170
00:11:17.002 --> 00:11:18.008
Click save.

171
00:11:18.008 --> 00:11:20.007
Go back down to the bottom.

172
00:11:20.007 --> 00:11:22.005
We'll go to the terminal window,

173
00:11:22.005 --> 00:11:29.000
type git add . git commit -m.

174
00:11:29.000 --> 00:11:35.005
I'm going to type committing changes back to repo.

175
00:11:35.005 --> 00:11:37.007
Close quotes, hit Enter.

176
00:11:37.007 --> 00:11:42.008
We're going to push this to our repo.

177
00:11:42.008 --> 00:11:52.003
Git push -u origin jar_workflow_aws.

178
00:11:52.003 --> 00:11:54.003
Hit Enter.

179
00:11:54.003 --> 00:11:58.001
And at this point, let's switch back in our browsers.

180
00:11:58.001 --> 00:12:01.003
We'll open up the GitHub repository again.

181
00:12:01.003 --> 00:12:06.000
Scroll back up, click on SpringBootProdApplication.

182
00:12:06.000 --> 00:12:09.001
Let's click on actions.

183
00:12:09.001 --> 00:12:15.001
No actions if fired because we have not pushed to the main.

184
00:12:15.001 --> 00:12:18.009
We've only pushed it to the branch.

185
00:12:18.009 --> 00:12:22.002
So we're going to click back on our code base again.

186
00:12:22.002 --> 00:12:26.002
And we should see a message here as we do

187
00:12:26.002 --> 00:12:29.005
that says compare and pull request.

188
00:12:29.005 --> 00:12:31.007
We'll click on that.

189
00:12:31.007 --> 00:12:33.005
Tells us that it's able to merge.

190
00:12:33.005 --> 00:12:37.005
And so we'll leave a quick comment.

191
00:12:37.005 --> 00:12:45.001
Things look good and getting excited.

192
00:12:45.001 --> 00:12:49.005
We'll create the pull request.

193
00:12:49.005 --> 00:12:53.007
We have a request to merge the pull request.

194
00:12:53.007 --> 00:12:57.002
We're waiting for the checks to finish.

195
00:12:57.002 --> 00:13:01.002
We'll go back to our actions to review what happened.

196
00:13:01.002 --> 00:13:05.008
We'll click on the jar workflow AWS

197
00:13:05.008 --> 00:13:10.009
and it's complaining because we have mistyped builds.

198
00:13:10.009 --> 00:13:12.004
As you see there.

199
00:13:12.004 --> 00:13:16.004
Let's go back to IntelliJ.

200
00:13:16.004 --> 00:13:18.004
We'll correct the misspelling.

201
00:13:18.004 --> 00:13:19.009
Save.

202
00:13:19.009 --> 00:13:26.006
We will add it again, submit it, using the same message

203
00:13:26.006 --> 00:13:33.000
and push it back to our jar workflows branch.

204
00:13:33.000 --> 00:13:39.005
Going back to code, back to our pull request.

205
00:13:39.005 --> 00:13:42.004
We're going to click new pull request.

206
00:13:42.004 --> 00:13:44.001
We'll click compare.

207
00:13:44.001 --> 00:13:49.004
We'll go to jar workflows AWS.

208
00:13:49.004 --> 00:13:55.008
We can see now that there are files for us to compare.

209
00:13:55.008 --> 00:14:00.006
We'll click view, pull request.

210
00:14:00.006 --> 00:14:02.009
And at this point we know

211
00:14:02.009 --> 00:14:07.004
that the pull request is actually fired off the action.

212
00:14:07.004 --> 00:14:10.006
I'm going to go ahead and click merge pull request.

213
00:14:10.006 --> 00:14:12.003
Confirm merge.

214
00:14:12.003 --> 00:14:15.006
Pull request successfully merged and closed.

215
00:14:15.006 --> 00:14:16.006
We'll go back up.

216
00:14:16.006 --> 00:14:19.002
We'll click on our actions.

217
00:14:19.002 --> 00:14:22.008
We can see that two workflows are running at this point.

218
00:14:22.008 --> 00:14:28.000
One was for the initial test and the other is for the merge.

219
00:14:28.000 --> 00:14:30.009
We'll go ahead and click on the merge pull request,

220
00:14:30.009 --> 00:14:33.004
number one.

221
00:14:33.004 --> 00:14:36.004
We'll click on build.

222
00:14:36.004 --> 00:14:40.009
As we can see, click on the Beanstalk deploy,

223
00:14:40.009 --> 00:14:44.009
shows that our code has been pushed,

224
00:14:44.009 --> 00:14:47.002
environment updates successful.

225
00:14:47.002 --> 00:14:49.008
I'm going to go ahead and click back on

226
00:14:49.008 --> 00:14:53.003
our SpringBootProdApp environment now

227
00:14:53.003 --> 00:14:57.000
and we'll click the link to see our application.

