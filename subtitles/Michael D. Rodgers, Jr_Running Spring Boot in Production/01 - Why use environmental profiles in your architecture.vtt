WEBVTT
1
00:00:00.000 --> 00:00:01.003
- [Instructor] When I first started

2
00:00:01.003 --> 00:00:02.009
my software development career,

3
00:00:02.009 --> 00:00:04.004
I thought that applications,

4
00:00:04.004 --> 00:00:06.000
and use involve nothing more

5
00:00:06.000 --> 00:00:10.002
than writing code and pushing them to production.

6
00:00:10.002 --> 00:00:12.002
I had no clue about all the steps,

7
00:00:12.002 --> 00:00:13.008
and checks involved in producing

8
00:00:13.008 --> 00:00:17.000
high-quality production-ready applications.

9
00:00:17.000 --> 00:00:18.001
Since then, I've learned

10
00:00:18.001 --> 00:00:20.002
that deploying code production environment

11
00:00:20.002 --> 00:00:22.001
should require a thorough period

12
00:00:22.001 --> 00:00:23.008
of capturing requirements.

13
00:00:23.008 --> 00:00:26.001
Writing code with appropriate unit,

14
00:00:26.001 --> 00:00:27.005
and integration test,

15
00:00:27.005 --> 00:00:29.003
and conducting code reviews,

16
00:00:29.003 --> 00:00:30.007
conducting user testing,

17
00:00:30.007 --> 00:00:33.004
and then deploying the code

18
00:00:33.004 --> 00:00:35.008
of the product to production.

19
00:00:35.008 --> 00:00:37.001
Most of these stages

20
00:00:37.001 --> 00:00:39.000
require an environmental sandbox

21
00:00:39.000 --> 00:00:41.008
for those lifecycle processes to occur.

22
00:00:41.008 --> 00:00:43.009
This should be nothing new for most of us.

23
00:00:43.009 --> 00:00:46.003
With usually three or more staging environments

24
00:00:46.003 --> 00:00:48.004
for the different lifecycle processes

25
00:00:48.004 --> 00:00:53.003
of development, testing, and production.

26
00:00:53.003 --> 00:00:55.004
This is why environmental profiles,

27
00:00:55.004 --> 00:00:57.005
and our applications are so important.

28
00:00:57.005 --> 00:01:01.004
And Spring solves this with Spring Profiles.

29
00:01:01.004 --> 00:01:03.005
The data used in development,

30
00:01:03.005 --> 00:01:07.003
client testing and production are similar

31
00:01:07.003 --> 00:01:09.000
but we also know that the data

32
00:01:09.000 --> 00:01:10.009
should be distinctly sandbox

33
00:01:10.009 --> 00:01:13.003
because they differ.

34
00:01:13.003 --> 00:01:15.006
Obvious stuff, right?

35
00:01:15.006 --> 00:01:17.001
What we're all thinking about here

36
00:01:17.001 --> 00:01:18.009
is how to provide a clean,

37
00:01:18.009 --> 00:01:21.008
and maintainable way to store our property files

38
00:01:21.008 --> 00:01:23.002
that are externalized,

39
00:01:23.002 --> 00:01:26.002
and environment-specific.

40
00:01:26.002 --> 00:01:27.002
According to Spring,

41
00:01:27.002 --> 00:01:28.009
Spring Profiles provides a way

42
00:01:28.009 --> 00:01:30.001
to segregate parts

43
00:01:30.001 --> 00:01:32.002
of our application configuration,

44
00:01:32.002 --> 00:01:33.008
and make it available only

45
00:01:33.008 --> 00:01:36.001
in certain environments.

46
00:01:36.001 --> 00:01:39.000
Any at component, at configuration

47
00:01:39.000 --> 00:01:40.009
or at configuration properties

48
00:01:40.009 --> 00:01:43.005
can be marked with that profile to limit

49
00:01:43.005 --> 00:01:45.006
when it is loaded.

50
00:01:45.006 --> 00:01:47.005
This checks to the boxes

51
00:01:47.005 --> 00:01:50.000
of making our property files externalized,

52
00:01:50.000 --> 00:01:52.007
and environment-specific.

53
00:01:52.007 --> 00:01:53.009
We'll be talking later

54
00:01:53.009 --> 00:01:55.002
about how to make our property

55
00:01:55.002 --> 00:01:59.003
files clean and maintainable in a moment.

56
00:01:59.003 --> 00:02:00.007
With Spring, you can use

57
00:02:00.007 --> 00:02:02.008
either application.properties

58
00:02:02.008 --> 00:02:05.009
or application.yml

59
00:02:05.009 --> 00:02:07.009
Identifying the environment

60
00:02:07.009 --> 00:02:10.003
for property files is as simple as suffix

61
00:02:10.003 --> 00:02:13.002
in your property files with format,

62
00:02:13.002 --> 00:02:17.003
application-profile.properties.

63
00:02:17.003 --> 00:02:20.006
For example, application-dev.properties

64
00:02:20.006 --> 00:02:22.000
is for development.

65
00:02:22.000 --> 00:02:25.005
application-test.properties would be for test

66
00:02:25.005 --> 00:02:29.001
and application-prod would be for product.

67
00:02:29.001 --> 00:02:30.005
Now, similarly,

68
00:02:30.005 --> 00:02:32.005
you can have one or more property files

69
00:02:32.005 --> 00:02:34.000
with all of the environments

70
00:02:34.000 --> 00:02:36.001
separated with headings that say

71
00:02:36.001 --> 00:02:43.002
spring.config.activate.on-profile=dev.

72
00:02:43.002 --> 00:02:45.003
The section underneath would contain

73
00:02:45.003 --> 00:02:46.003
the properties.

74
00:02:46.003 --> 00:02:48.008
And this is closed with a hashtag

75
00:02:48.008 --> 00:02:51.000
with three dashes.

76
00:02:51.000 --> 00:02:53.001
With yml file-based configuration,

77
00:02:53.001 --> 00:02:55.001
you'll find a very similar story

78
00:02:55.001 --> 00:02:57.006
with all the properties in one yml file,

79
00:02:57.006 --> 00:02:59.005
separated by triple dashes,

80
00:02:59.005 --> 00:03:00.005
a line break,

81
00:03:00.005 --> 00:03:01.006
and then spring

82
00:03:01.006 --> 00:03:06.008
with profile values identifying the environment.

83
00:03:06.008 --> 00:03:08.009
Now, there's much more to be said,

84
00:03:08.009 --> 00:03:11.002
and much more we're going to get into with these

85
00:03:11.002 --> 00:03:13.001
but as you can see,

86
00:03:13.001 --> 00:03:15.004
profiles using Spring property files

87
00:03:15.004 --> 00:03:18.001
or yml file-based configuration gives us

88
00:03:18.001 --> 00:03:21.009
externalized environment-specific and clean,

89
00:03:21.009 --> 00:03:24.003
and maintainable configurations

90
00:03:24.003 --> 00:03:26.000
for our applications.

