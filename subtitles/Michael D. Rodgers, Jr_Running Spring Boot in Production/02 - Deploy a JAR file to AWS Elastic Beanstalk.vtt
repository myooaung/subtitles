WEBVTT
1
00:00:00.005 --> 00:00:02.001
- [Instructor] Please open the source code to

2
00:00:02.001 --> 00:00:04.009
zero three, underscore zero two, underscore begin,

3
00:00:04.009 --> 00:00:09.006
slash SpringBootProduction directory in IntelliJ.

4
00:00:09.006 --> 00:00:11.007
We are going to back out the changes

5
00:00:11.007 --> 00:00:14.003
from the previous lesson with GraalVM.

6
00:00:14.003 --> 00:00:19.005
Let's remove the plugins in our build.gradle file

7
00:00:19.005 --> 00:00:24.002
or spring Experimental AOT and GraalVM.

8
00:00:24.002 --> 00:00:30.002
Let's change the source compatibility from 11 to 1.8.

9
00:00:30.002 --> 00:00:32.007
And at the bottom we'll take out the native

10
00:00:32.007 --> 00:00:36.003
and native test directives.

11
00:00:36.003 --> 00:00:40.001
Then we're going to load the settings.gradle

12
00:00:40.001 --> 00:00:43.008
and we're going to remove the plugin management.

13
00:00:43.008 --> 00:00:44.009
With that complete,

14
00:00:44.009 --> 00:00:46.009
we're going to go to down to our terminal.

15
00:00:46.009 --> 00:00:54.002
We're going to type sdk list java.

16
00:00:54.002 --> 00:00:57.001
And as you can see here,

17
00:00:57.001 --> 00:00:59.001
we still have our GraalVM installed.

18
00:00:59.001 --> 00:01:02.000
So, we're going to switch back,

19
00:01:02.000 --> 00:01:08.008
to coretto 8.312.07.1 amazon.

20
00:01:08.008 --> 00:01:12.000
We'll copy that at q to quit.

21
00:01:12.000 --> 00:01:17.001
We'll type sdk use java

22
00:01:17.001 --> 00:01:20.003
and paste that in, hit enter.

23
00:01:20.003 --> 00:01:23.004
Type java dash version.

24
00:01:23.004 --> 00:01:26.002
And we can see that we're now back to 1.8

25
00:01:26.002 --> 00:01:27.009
for our Java version.

26
00:01:27.009 --> 00:01:30.004
Let's clear the window.

27
00:01:30.004 --> 00:01:39.007
Next, let's go ahead and clean and build our project.

28
00:01:39.007 --> 00:01:40.005
Okay.

29
00:01:40.005 --> 00:01:43.004
Let's go ahead and run the project to validate it.

30
00:01:43.004 --> 00:01:51.008
Type java dash jar dash Dspring profiles.active

31
00:01:51.008 --> 00:01:58.005
equals dev build slash libs slash,

32
00:01:58.005 --> 00:02:03.003
hit the tab key, dot jar and hit enter.

33
00:02:03.003 --> 00:02:07.008
We're going to expand our properties window here,

34
00:02:07.008 --> 00:02:13.006
so we can get a better picture of what's happening.

35
00:02:13.006 --> 00:02:14.004
Okay.

36
00:02:14.004 --> 00:02:17.009
From the looks of the logs, everything looks copacetic.

37
00:02:17.009 --> 00:02:20.008
So, we're going to control + C to kill this

38
00:02:20.008 --> 00:02:24.002
and now we're going to go to our AWS console

39
00:02:24.002 --> 00:02:27.003
and if you have not logged into the AWS console

40
00:02:27.003 --> 00:02:29.005
you need to do that now.

41
00:02:29.005 --> 00:02:31.008
I'm on the Elastic Beanstalk page.

42
00:02:31.008 --> 00:02:37.007
To get there, type Elastic Beanstalk in the search window

43
00:02:37.007 --> 00:02:42.004
and click the link for Elastic Beanstalk.

44
00:02:42.004 --> 00:02:43.006
Once this loads,

45
00:02:43.006 --> 00:02:47.007
you're going to click the Create Application button

46
00:02:47.007 --> 00:02:49.004
and for the application name,

47
00:02:49.004 --> 00:02:53.008
we're going to type, springboot prod app.

48
00:02:53.008 --> 00:02:57.001
We'll leave the Application tags blank.

49
00:02:57.001 --> 00:03:00.004
For the platform, we'll choose Java.

50
00:03:00.004 --> 00:03:04.000
For the coretto branch, we'll say version eight

51
00:03:04.000 --> 00:03:08.000
to match what our application is built for.

52
00:03:08.000 --> 00:03:09.006
And for Application code,

53
00:03:09.006 --> 00:03:17.004
we're going to click, upload your code.

54
00:03:17.004 --> 00:03:20.006
We'll choose, local file.

55
00:03:20.006 --> 00:03:24.006
We'll choose chapter zero three.

56
00:03:24.006 --> 00:03:28.004
Chapter zero three zero two begin.

57
00:03:28.004 --> 00:03:35.006
Springbootproduction, build, libs and the snapshot dot jar.

58
00:03:35.006 --> 00:03:37.008
Click open.

59
00:03:37.008 --> 00:03:42.005
When this is done, you should see a green check mark.

60
00:03:42.005 --> 00:03:46.003
Let's click, create application.

61
00:03:46.003 --> 00:03:49.009
At this point, AWS Elastic Beanstalk

62
00:03:49.009 --> 00:03:53.000
is creating a number of things in the background

63
00:03:53.000 --> 00:03:55.002
for your application.

64
00:03:55.002 --> 00:03:58.008
It's taking care of security, security groups,

65
00:03:58.008 --> 00:04:03.008
target groups, revisioning of S3 storage buckets

66
00:04:03.008 --> 00:04:05.007
or environmental data.

67
00:04:05.007 --> 00:04:09.004
It's provisioning load balancers and scaling groups.

68
00:04:09.004 --> 00:04:12.008
And really, it's doing a lot.

69
00:04:12.008 --> 00:04:17.007
And besides that, this process will take a few minutes.

70
00:04:17.007 --> 00:04:21.006
Okay. We're almost there.

71
00:04:21.006 --> 00:04:22.004
Okay.

72
00:04:22.004 --> 00:04:23.004
When this is done,

73
00:04:23.004 --> 00:04:26.009
our app may start to show some health problems

74
00:04:26.009 --> 00:04:30.009
because we've not set our spring profile as of yet

75
00:04:30.009 --> 00:04:34.005
nor have we set the appropriate port.

76
00:04:34.005 --> 00:04:40.006
To do this, we'll click on, configuration.

77
00:04:40.006 --> 00:04:48.004
Next, you'll click on the software row and click edit.

78
00:04:48.004 --> 00:04:53.006
We'll scroll down until we see gradle home, Java home,

79
00:04:53.006 --> 00:04:57.002
M2, M2 home.

80
00:04:57.002 --> 00:05:00.006
We'll click in the open properties field,

81
00:05:00.006 --> 00:05:07.007
we'll type, in all caps, SPRING PROFILES ACTIVE

82
00:05:07.007 --> 00:05:10.002
and we'll set the value to dev.

83
00:05:10.002 --> 00:05:16.005
In the next line, we'll type server underscore port.

84
00:05:16.005 --> 00:05:19.004
We'll set this to 5000

85
00:05:19.004 --> 00:05:22.009
even though we've configured it to run on 9000.

86
00:05:22.009 --> 00:05:27.007
This is because AWS uses the 5000 server port by default

87
00:05:27.007 --> 00:05:30.001
for spring boot applications.

88
00:05:30.001 --> 00:05:39.000
When you're done, scroll down and click Apply.

89
00:05:39.000 --> 00:05:42.003
This will cause the server Health to refresh.

90
00:05:42.003 --> 00:05:46.001
And this too will take a minute.

91
00:05:46.001 --> 00:05:49.006
Okay. So the server Health is refreshed and now it's green.

92
00:05:49.006 --> 00:05:53.008
Let's go ahead and click the link here

93
00:05:53.008 --> 00:05:56.004
and this will load our page.

94
00:05:56.004 --> 00:05:57.007
All right.

95
00:05:57.007 --> 00:06:00.001
As promised, we're now going to go back

96
00:06:00.001 --> 00:06:02.007
and undeploy this application.

97
00:06:02.007 --> 00:06:09.001
We'll do this by first clicking on, Environments.

98
00:06:09.001 --> 00:06:12.004
We'll select our environment.

99
00:06:12.004 --> 00:06:17.008
We'll go to Actions and we'll terminate.

100
00:06:17.008 --> 00:06:25.002
we'll type in, springbootprodapp dash env dash one.

101
00:06:25.002 --> 00:06:32.002
You can copy that, paste it here and click Terminate.

102
00:06:32.002 --> 00:06:33.008
In the final step,

103
00:06:33.008 --> 00:06:37.000
you click the radio button for the application,

104
00:06:37.000 --> 00:06:42.007
go to Actions and delete application.

105
00:06:42.007 --> 00:06:47.005
Here, we'll copy the name of the app

106
00:06:47.005 --> 00:06:51.008
and paste and click Delete.

107
00:06:51.008 --> 00:06:53.002
And that's it.

108
00:06:53.002 --> 00:06:55.007
We have successfully deployed the application

109
00:06:55.007 --> 00:06:57.007
using AWS Beanstalk,

110
00:06:57.007 --> 00:07:01.000
as well as walk through the undeployment steps.

