WEBVTT
1
00:00:00.008 --> 00:00:02.007
- [Instructor] For this video, please have project

2
00:00:02.007 --> 00:00:07.005
source code 02_02_begin opened in IntelliJ.

3
00:00:07.005 --> 00:00:09.007
Switching over to our browser

4
00:00:09.007 --> 00:00:11.009
we'll also be downloading the latest version

5
00:00:11.009 --> 00:00:14.002
of Apache Tomcat version nine

6
00:00:14.002 --> 00:00:23.004
from tomcat.apache.org download-90.cgi as you can see here.

7
00:00:23.004 --> 00:00:27.006
9.0.55 is the latest as of this video.

8
00:00:27.006 --> 00:00:31.005
Scrolling down slightly and under the binary distribution,

9
00:00:31.005 --> 00:00:34.004
then Core and zip.

10
00:00:34.004 --> 00:00:39.005
We're going to click on this file to begin download.

11
00:00:39.005 --> 00:00:41.001
Once the zip file is downloaded

12
00:00:41.001 --> 00:00:44.004
you can copy the zip file over to your home directory.

13
00:00:44.004 --> 00:00:48.003
I'm going to do this through the terminal window on my Mac.

14
00:00:48.003 --> 00:00:50.003
If you're using windows, you could do this

15
00:00:50.003 --> 00:00:52.003
with File Explorer as well.

16
00:00:52.003 --> 00:00:55.006
From the terminal, first I'm going to create a new directory

17
00:00:55.006 --> 00:01:00.006
called tomcat, and this will be in my home directory.

18
00:01:00.006 --> 00:01:06.006
From there I'm going to copy from my downloads folder

19
00:01:06.006 --> 00:01:12.003
the Apache Tomcat to my Tomcat directory I just created.

20
00:01:12.003 --> 00:01:17.003
And from there, I'm going to cd into that Tomcat folder.

21
00:01:17.003 --> 00:01:19.008
Now, the next step is to unzip

22
00:01:19.008 --> 00:01:25.004
the Apache Tomcat 9.0.55 zip file.

23
00:01:25.004 --> 00:01:27.003
And when that's done, we're going to cd

24
00:01:27.003 --> 00:01:32.003
into the Apache Tomcat 9055 folder.

25
00:01:32.003 --> 00:01:35.003
And for the sake of time, we're going to type

26
00:01:35.003 --> 00:01:42.007
change mod plus X, bin/*.*

27
00:01:42.007 --> 00:01:48.000
which will make all of the .sh files executable.

28
00:01:48.000 --> 00:01:52.003
To ensure spring boot environment profile is picked up

29
00:01:52.003 --> 00:01:55.000
when the application is started,

30
00:01:55.000 --> 00:01:58.008
we're going to modify the catalina properties.

31
00:01:58.008 --> 00:02:01.004
To do this we'll type vi conf

32
00:02:01.004 --> 00:02:05.002
for the folder, catalina properties.

33
00:02:05.002 --> 00:02:07.007
We're going to scroll all the way to the end.

34
00:02:07.007 --> 00:02:10.009
I'm going to type i for insert.

35
00:02:10.009 --> 00:02:14.001
Go to the end of this line.

36
00:02:14.001 --> 00:02:17.002
Hit enter a couple times, enter a hashtag

37
00:02:17.002 --> 00:02:23.006
for a comment and call this spring boot profile.

38
00:02:23.006 --> 00:02:32.004
Then we're going to type spring.profiles.active=prod.

39
00:02:32.004 --> 00:02:35.001
This probably looks familiar to you by now.

40
00:02:35.001 --> 00:02:40.001
We'll type escape, colon W quit.

41
00:02:40.001 --> 00:02:41.005
With that done, let's go ahead

42
00:02:41.005 --> 00:02:48.007
and start up our Tomcat server by typing bin startup.sh.

43
00:02:48.007 --> 00:02:50.008
Now for this tutorial, we're not going to do

44
00:02:50.008 --> 00:02:52.009
any advanced Tomcat configurations

45
00:02:52.009 --> 00:02:55.008
other than starting it up so that we can demonstrate

46
00:02:55.008 --> 00:02:59.000
how to deploy our spring boot application.

47
00:02:59.000 --> 00:03:04.005
Okay, with it started, let's go back to our Chrome tab.

48
00:03:04.005 --> 00:03:09.009
Open a new tab, and we're going to type localhost 8080.

49
00:03:09.009 --> 00:03:13.005
We've packaged our application repeatedly as a JAR file,

50
00:03:13.005 --> 00:03:16.003
which is spring boot's default methodology.

51
00:03:16.003 --> 00:03:18.008
Remember, as Josh Long points out,

52
00:03:18.008 --> 00:03:22.008
the uber JAR methodology is really the better solution

53
00:03:22.008 --> 00:03:25.008
than deploying a WAR to a Tomcat web server.

54
00:03:25.008 --> 00:03:28.009
However, if you still need to do so, it's quite simple.

55
00:03:28.009 --> 00:03:33.002
Let's go back to our IntelliJ IDE.

56
00:03:33.002 --> 00:03:36.000
We're going to open the build.gradle.

57
00:03:36.000 --> 00:03:39.007
Go to the top, locate the id single quotes java.

58
00:03:39.007 --> 00:03:43.004
We're going to type id single quote war,

59
00:03:43.004 --> 00:03:45.005
go below the curly bracket, hit enter.

60
00:03:45.005 --> 00:03:51.009
Then we're going to type bootWar camel case curly brackets.

61
00:03:51.009 --> 00:03:53.003
Inside of this camel brackets

62
00:03:53.003 --> 00:03:56.002
we're going to specify the archive file name.

63
00:03:56.002 --> 00:04:00.003
So we'll type archiveFileName,

64
00:04:00.003 --> 00:04:02.004
notice again the camel case,

65
00:04:02.004 --> 00:04:10.000
single quotes, springBootProdApplication.war.

66
00:04:10.000 --> 00:04:12.001
We also need to tell gradle

67
00:04:12.001 --> 00:04:15.000
to make the implicit Tomcat dependency

68
00:04:15.000 --> 00:04:18.006
to be that of provided instead of implemented.

69
00:04:18.006 --> 00:04:22.006
So we're going to go down below our implementations.

70
00:04:22.006 --> 00:04:30.000
We're going to type providedRuntime, single quote,

71
00:04:30.000 --> 00:04:43.008
org springframework.boot:spring-boot-starter-tomcat.

72
00:04:43.008 --> 00:04:47.000
This will tell the application to use

73
00:04:47.000 --> 00:04:51.000
the Tomcat instance instead of the one provided.

74
00:04:51.000 --> 00:04:52.009
Now lastly, we need to go

75
00:04:52.009 --> 00:04:55.009
to our spring boot prod application,

76
00:04:55.009 --> 00:04:59.008
and we need to have it extend

77
00:04:59.008 --> 00:05:04.001
the spring boot servlet initializer.

78
00:05:04.001 --> 00:05:07.007
This is necessary for creating WAR files.

79
00:05:07.007 --> 00:05:10.008
Adding this will automatically add our import.

80
00:05:10.008 --> 00:05:13.002
Below the public static void main method

81
00:05:13.002 --> 00:05:16.000
we're going to add an overrides method.

82
00:05:16.000 --> 00:05:20.007
And this will be protected

83
00:05:20.007 --> 00:05:25.006
a spring application builder.

84
00:05:25.006 --> 00:05:28.000
The name of the method is configure

85
00:05:28.000 --> 00:05:32.004
and this will accept a spring application builder.

86
00:05:32.004 --> 00:05:34.001
We'll call it builder for short,

87
00:05:34.001 --> 00:05:36.003
curly brackets, there we go.

88
00:05:36.003 --> 00:05:41.002
Now we need to type return builder.sources

89
00:05:41.002 --> 00:05:44.008
and we're going to give it the name of the class we're in,

90
00:05:44.008 --> 00:05:51.009
which is the SpringBootProdApplication.class.

91
00:05:51.009 --> 00:05:55.008
Don't forget your semicolon. Click save.

92
00:05:55.008 --> 00:05:58.001
And finally, we need to make a few modifications

93
00:05:58.001 --> 00:06:00.005
to our application properties.

94
00:06:00.005 --> 00:06:02.003
We'll go to the top.

95
00:06:02.003 --> 00:06:11.005
We're going to add a server.servlet.contextPath

96
00:06:11.005 --> 00:06:18.003
equals SpringBootProdApplication.

97
00:06:18.003 --> 00:06:22.009
This will be the context we type in after the colon 8080.

98
00:06:22.009 --> 00:06:26.002
Now we also need to add one other attribute

99
00:06:26.002 --> 00:06:29.007
and this is for our actuator endpoints.

100
00:06:29.007 --> 00:06:41.006
We'll type management.endpoints.web.base/path.

101
00:06:41.006 --> 00:06:48.002
And here we're going to change the actuator context to manage.

102
00:06:48.002 --> 00:06:50.003
And the last things we need to do are ensure

103
00:06:50.003 --> 00:06:53.000
that our server.port is commented out

104
00:06:53.000 --> 00:06:56.007
and our management server port is commented out.

105
00:06:56.007 --> 00:06:59.008
And I've already done these here.

106
00:06:59.008 --> 00:07:04.004
Okay, with all of this done let's go ahead.

107
00:07:04.004 --> 00:07:07.003
Check my spelling again.

108
00:07:07.003 --> 00:07:09.008
Here we go, manage.

109
00:07:09.008 --> 00:07:17.003
Go ahead and clean and build the application.

110
00:07:17.003 --> 00:07:19.004
Once this is complete, we're going to copy

111
00:07:19.004 --> 00:07:22.003
from the build libs directory

112
00:07:22.003 --> 00:07:25.000
and send it to our Tomcat web apps directory.

113
00:07:25.000 --> 00:07:26.003
And I'm going to do this right here

114
00:07:26.003 --> 00:07:28.000
inside this terminal window, so I'll type

115
00:07:28.000 --> 00:07:32.002
copy build/libs, I'll tab over

116
00:07:32.002 --> 00:07:35.006
for the spring boot prod application name and then type war.

117
00:07:35.006 --> 00:07:41.002
And now we're going to specify our Tomcat installation.

118
00:07:41.002 --> 00:07:44.001
And using tab is our friend.

119
00:07:44.001 --> 00:07:46.000
Webapps, hit enter.

120
00:07:46.000 --> 00:07:47.005
That will copy it over.

121
00:07:47.005 --> 00:07:51.005
Tomcat is already running, so let's go ahead and tail logs.

122
00:07:51.005 --> 00:07:57.007
We'll use tail -f, tilde, tomcat, apache-tomcat.

123
00:07:57.007 --> 00:08:02.000
Go to the logs and we'll type catalina.out.

124
00:08:02.000 --> 00:08:06.000
I'm going to span this terminal window just a little bit

125
00:08:06.000 --> 00:08:10.005
so we can see what's going on.

126
00:08:10.005 --> 00:08:12.007
Okay, everything is started up.

127
00:08:12.007 --> 00:08:15.000
Let's go back to our browser.

128
00:08:15.000 --> 00:08:17.005
Going to append to the end of this

129
00:08:17.005 --> 00:08:22.006
Spring Boot Prod Application.

130
00:08:22.006 --> 00:08:24.008
And to test our actuator endpoints

131
00:08:24.008 --> 00:08:28.002
we'll type in manage, which is the new context

132
00:08:28.002 --> 00:08:31.000
for the actuators, hit enter.

133
00:08:31.000 --> 00:08:35.001
And we have our actuator endpoints.

134
00:08:35.001 --> 00:08:37.002
Let's go ahead and shut down the instance.

135
00:08:37.002 --> 00:08:40.008
We'll go back to Tomcat in our terminal window.

136
00:08:40.008 --> 00:08:46.002
I'm going to type bin, shutdown.sh.

137
00:08:46.002 --> 00:08:48.000
And with that shutdown we're going to go back

138
00:08:48.000 --> 00:08:51.004
to our IntelliJ terminal,

139
00:08:51.004 --> 00:08:54.003
do Ctrl C to stop the tailing of logs.

140
00:08:54.003 --> 00:08:56.006
And what I want to show you is that alternatively you can

141
00:08:56.006 --> 00:09:01.000
also run the spring boot WAR just like a JAR.

142
00:09:01.000 --> 00:09:10.000
So we'll type java -jar -Dspring profiles

143
00:09:10.000 --> 00:09:15.009
active equals prod build libs,

144
00:09:15.009 --> 00:09:21.006
tab over and type dot war, hit enter.

145
00:09:21.006 --> 00:09:24.004
We can see we're exposing the four endpoints.

146
00:09:24.004 --> 00:09:27.000
We can see it started on 8080, and if we go back

147
00:09:27.000 --> 00:09:31.001
to our browser, click refresh,

148
00:09:31.001 --> 00:09:33.007
we're still seeing our endpoints.

149
00:09:33.007 --> 00:09:36.005
We take that off

150
00:09:36.005 --> 00:09:38.000
and there's our webpage.

