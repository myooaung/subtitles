WEBVTT
1
00:00:00.050 --> 00:00:01.090
- [Instructor] Now, in this chapter, we're gonna talk about

2
00:00:01.090 --> 00:00:04.090
encryption, which is by far the most common thing

3
00:00:04.090 --> 00:00:08.010
that people think of when they think about crypto.

4
00:00:08.010 --> 00:00:09.050
But in order to level-set a little bit

5
00:00:09.050 --> 00:00:11.020
for the purposes of this course,

6
00:00:11.020 --> 00:00:13.040
I wanna talk a little bit about encryption and decryption

7
00:00:13.040 --> 00:00:15.060
and make sure that we understand

8
00:00:15.060 --> 00:00:18.070
everything that goes into this conversation.

9
00:00:18.070 --> 00:00:19.090
So the first thing we should talk about is

10
00:00:19.090 --> 00:00:22.030
what actually is encryption.

11
00:00:22.030 --> 00:00:25.070
And encryption is a process by which we take plain data

12
00:00:25.070 --> 00:00:29.050
or plain text data and we make it hidden,

13
00:00:29.050 --> 00:00:31.090
often in plain sight.

14
00:00:31.090 --> 00:00:36.000
The hidden text or ciphered data becomes difficult

15
00:00:36.000 --> 00:00:40.050
and actually, hopefully, impossible to read without the key

16
00:00:40.050 --> 00:00:43.080
that was used to generate that ciphered text.

17
00:00:43.080 --> 00:00:46.090
And essentially, we are saying that only authorized parties,

18
00:00:46.090 --> 00:00:49.060
therefore, can read the text in its original

19
00:00:49.060 --> 00:00:54.090
plain text format, assuming that the cipher isn't cracked.

20
00:00:54.090 --> 00:00:59.020
Now, in reality, cryptography and ciphering have been around

21
00:00:59.020 --> 00:01:00.090
for a very long time.

22
00:01:00.090 --> 00:01:04.040
In fact, it dates back as far as ancient Egypt.

23
00:01:04.040 --> 00:01:07.090
One of the most common use cases of ciphered text

24
00:01:07.090 --> 00:01:10.070
is actually the so-called Caesar's cipher,

25
00:01:10.070 --> 00:01:12.070
in which in the modern English alphabet,

26
00:01:12.070 --> 00:01:15.090
an A would become a D, and a B would become E,

27
00:01:15.090 --> 00:01:20.020
and so on throughout in order to hide the message.

28
00:01:20.020 --> 00:01:23.090
Now, we saw a big spike in cryptography in the Middle Ages

29
00:01:23.090 --> 00:01:27.020
and Renaissance from both European and even more so

30
00:01:27.020 --> 00:01:30.040
from Arabian mathematicians.

31
00:01:30.040 --> 00:01:34.070
Now, probably the most popular, at least in modern culture,

32
00:01:34.070 --> 00:01:37.050
type of encryption actually occurred during World War II

33
00:01:37.050 --> 00:01:40.060
in the so-called Enigma machine.

34
00:01:40.060 --> 00:01:43.030
This machine allowed the Germans to communicate

35
00:01:43.030 --> 00:01:46.090
over radio waves, which were easy to intercept.

36
00:01:46.090 --> 00:01:49.080
And in all honesty, had the U.K. not cracked

37
00:01:49.080 --> 00:01:52.050
the Enigma machine, who knows what the outcome

38
00:01:52.050 --> 00:01:54.080
of World War II would've been?

39
00:01:54.080 --> 00:01:57.090
Now, obviously, in modern times, we are seeing a huge spike

40
00:01:57.090 --> 00:02:01.000
in both the algorithms used to do encryption

41
00:02:01.000 --> 00:02:04.070
and also the attack vectors against those algorithms.

42
00:02:04.070 --> 00:02:08.030
And it's a never-ending game of who can be stronger

43
00:02:08.030 --> 00:02:11.040
at the current time.

44
00:02:11.040 --> 00:02:15.020
Now, in order to communicate effectively about encryption,

45
00:02:15.020 --> 00:02:17.010
we need to talk about the goals of encryption

46
00:02:17.010 --> 00:02:19.000
and really, there's four of them.

47
00:02:19.000 --> 00:02:20.050
The first is confidentiality

48
00:02:20.050 --> 00:02:22.090
and it's the one that we think of most often.

49
00:02:22.090 --> 00:02:25.060
And it's also known as privacy.

50
00:02:25.060 --> 00:02:27.090
That says that the message that I send you

51
00:02:27.090 --> 00:02:31.060
is only readable by you, assuming that the two of us

52
00:02:31.060 --> 00:02:37.010
share an algorithm and some sort of key parlance between us.

53
00:02:37.010 --> 00:02:38.070
Now, the next is integrity.

54
00:02:38.070 --> 00:02:41.060
And that is saying that what you send me

55
00:02:41.060 --> 00:02:44.090
has not been modified by a bad actor.

56
00:02:44.090 --> 00:02:47.010
And we'll find out that some stream ciphers

57
00:02:47.010 --> 00:02:50.020
actually are susceptible to integrity attacks.

58
00:02:50.020 --> 00:02:52.040
More on that in a little bit.

59
00:02:52.040 --> 00:02:54.040
The third goal is authentication.

60
00:02:54.040 --> 00:02:55.090
And essentially, that is saying that

61
00:02:55.090 --> 00:03:02.000
you are who you say you are, using cryptography to do so.

62
00:03:02.000 --> 00:03:05.030
And the final goal is non-repudiation.

63
00:03:05.030 --> 00:03:09.010
Now, this is a way of proving that a message came from you

64
00:03:09.010 --> 00:03:12.010
and I believe that you actually sent it

65
00:03:12.010 --> 00:03:14.020
and I can prove that you sent it.

66
00:03:14.020 --> 00:03:18.020
And that's really the goal of digital signatures.

67
00:03:18.020 --> 00:03:20.040
Now, we've talked briefly about stream ciphers

68
00:03:20.040 --> 00:03:21.070
and really, there's two pieces.

69
00:03:21.070 --> 00:03:23.060
There's stream and block.

70
00:03:23.060 --> 00:03:26.080
Stream ciphers take an individual bit at a time

71
00:03:26.080 --> 00:03:29.090
and either encrypt or decrypt it.

72
00:03:29.090 --> 00:03:32.050
Now, this can actually lead to manipulation

73
00:03:32.050 --> 00:03:35.020
without cracking the algorithm itself,

74
00:03:35.020 --> 00:03:38.070
because the original format is maintained.

75
00:03:38.070 --> 00:03:41.050
So I can change bits and pieces of data

76
00:03:41.050 --> 00:03:45.040
without actually cracking it, because I know the format.

77
00:03:45.040 --> 00:03:48.030
Block ciphers are much more used today.

78
00:03:48.030 --> 00:03:50.090
And block ciphers, as you might imagine,

79
00:03:50.090 --> 00:03:54.020
work on blocks of bits instead of individuals,

80
00:03:54.020 --> 00:03:57.090
which no longer allows that data to be manipulated

81
00:03:57.090 --> 00:04:01.000
without completing messing up the entire block.

82
00:04:01.000 --> 00:04:03.050
So I can't change an individual value

83
00:04:03.050 --> 00:04:07.000
and still have the functions work.

84
00:04:07.000 --> 00:04:09.030
Now, when we're talking about block ciphers,

85
00:04:09.030 --> 00:04:10.080
there's a few modes.

86
00:04:10.080 --> 00:04:13.060
The most common is cipher block chaining

87
00:04:13.060 --> 00:04:17.040
and it is a mechanism by which the previous block cipher

88
00:04:17.040 --> 00:04:20.030
is combined with the current block plain text

89
00:04:20.030 --> 00:04:23.000
in order to increase the entropy.

90
00:04:23.000 --> 00:04:25.050
Now, this requires an initialization vector,

91
00:04:25.050 --> 00:04:29.010
because the first block does not have a previous block

92
00:04:29.010 --> 00:04:31.040
in order to combine with it.

93
00:04:31.040 --> 00:04:34.090
Now, there's a couple other modes that can be used,

94
00:04:34.090 --> 00:04:38.070
such as the cipher feedback or output feedback mode,

95
00:04:38.070 --> 00:04:42.000
both of which were similar to cipher block chaining,

96
00:04:42.000 --> 00:04:44.080
but they have a little bit different output.

97
00:04:44.080 --> 00:04:47.040
The final mode is electronic code book,

98
00:04:47.040 --> 00:04:50.000
which does not have manipulation of the block.

99
00:04:50.000 --> 00:04:54.060
And it is very uncommon in my experiences.

100
00:04:54.060 --> 00:04:56.040
I wanna talk a little bit about key size,

101
00:04:56.040 --> 00:04:59.000
because all too often, when we talk about encryption,

102
00:04:59.000 --> 00:05:02.070
key size becomes the major point of contention.

103
00:05:02.070 --> 00:05:06.090
Now, a key size increase within an algorithm,

104
00:05:06.090 --> 00:05:09.070
by its very nature, increases the security

105
00:05:09.070 --> 00:05:11.050
of that algorithm.

106
00:05:11.050 --> 00:05:15.010
However, key size varies by algorithm

107
00:05:15.010 --> 00:05:19.010
and this is especially true in asymmetric encryption.

108
00:05:19.010 --> 00:05:23.020
For instance, an RSA key size of 2048

109
00:05:23.020 --> 00:05:25.070
may actually be less secure

110
00:05:25.070 --> 00:05:30.060
than an elliptical curve algorithm using only a 256-bit

111
00:05:30.060 --> 00:05:31.090
key size.

112
00:05:31.090 --> 00:05:35.010
So really, in the asymmetric space especially,

113
00:05:35.010 --> 00:05:37.010
that key size really doesn't matter.

114
00:05:37.010 --> 00:05:38.070
It's the algorithm that matters.

115
00:05:38.070 --> 00:05:42.000
And then within that algorithm, the key size matters.

116
00:05:42.000 --> 00:05:44.000
What is really critical though,

117
00:05:44.000 --> 00:05:46.080
is based on the current data we have,

118
00:05:46.080 --> 00:05:49.070
we should be using a sufficient key size

119
00:05:49.070 --> 00:05:53.030
in order to protect our ciphers.

120
00:05:53.030 --> 00:05:55.080
Now, I do wanna give one more bit of information here

121
00:05:55.080 --> 00:05:58.090
and that's the concept of codes versus cipher

122
00:05:58.090 --> 00:06:01.040
and there are a couple differences.

123
00:06:01.040 --> 00:06:05.090
Codes are really a way of replacing or substituting data.

124
00:06:05.090 --> 00:06:08.060
I like to think of these as a database type thing.

125
00:06:08.060 --> 00:06:11.030
We're really used to use codified values

126
00:06:11.030 --> 00:06:13.040
in order to remove the duplication of data

127
00:06:13.040 --> 00:06:15.010
across our database.

128
00:06:15.010 --> 00:06:18.090
And really, codes in this realm are very much the same.

129
00:06:18.090 --> 00:06:21.090
We replace a bit of data with another piece of data,

130
00:06:21.090 --> 00:06:24.050
but really, it's a one-to-one match.

131
00:06:24.050 --> 00:06:27.000
Ciphers are mathematical encryptions

132
00:06:27.000 --> 00:06:30.000
or mathematical transformations of the data,

133
00:06:30.000 --> 00:06:33.020
such that often, it's no longer a one-to-one match

134
00:06:33.020 --> 00:06:35.060
between the two, because of various things

135
00:06:35.060 --> 00:06:39.070
like initialization vectors that can change the behavior.

136
00:06:39.070 --> 00:06:41.090
Now, we've got one more concept to talk about

137
00:06:41.090 --> 00:06:44.080
and that is symmetric versus asymmetric encryption.

138
00:06:44.080 --> 00:06:47.000
But we're gonna talk about that in the next video.

