WEBVTT
1
00:00:00.050 --> 00:00:02.070
- [Instructor] In order to most effectively communicate

2
00:00:02.070 --> 00:00:05.060
throughout this course, we need to start our journey

3
00:00:05.060 --> 00:00:10.040
by level setting on some basic information and definitions.

4
00:00:10.040 --> 00:00:12.090
As such, let's start with understanding

5
00:00:12.090 --> 00:00:15.060
what cryptography is.

6
00:00:15.060 --> 00:00:18.020
Cryptography, as previously mentioned,

7
00:00:18.020 --> 00:00:20.050
is the study of secrets.

8
00:00:20.050 --> 00:00:22.040
Most of cryptography entails

9
00:00:22.040 --> 00:00:25.010
very advanced mathematical functions

10
00:00:25.010 --> 00:00:27.050
that are used to secure data.

11
00:00:27.050 --> 00:00:30.030
As such, it is important to discuss

12
00:00:30.030 --> 00:00:33.030
the first rule of cryptography for developers,

13
00:00:33.030 --> 00:00:37.000
and that is to never roll your own crypto.

14
00:00:37.000 --> 00:00:39.020
Now I don't say this as an insult.

15
00:00:39.020 --> 00:00:41.060
You may be brilliant mathematician

16
00:00:41.060 --> 00:00:43.090
and cryptography specialist,

17
00:00:43.090 --> 00:00:46.020
but as a general rule of thumb,

18
00:00:46.020 --> 00:00:48.060
you should rely on libraries that have been vetted

19
00:00:48.060 --> 00:00:51.080
and adequately tested and maintained.

20
00:00:51.080 --> 00:00:55.040
The sole purpose of these algorithms is to hide data,

21
00:00:55.040 --> 00:00:59.030
sometimes in plain sight, from a would-be attacker.

22
00:00:59.030 --> 00:01:04.000
As such, the two most common algorithm classes used

23
00:01:04.000 --> 00:01:06.070
are encryption and hashing.

24
00:01:06.070 --> 00:01:11.000
We will go into these functions in much more depth later.

25
00:01:11.000 --> 00:01:13.010
Let's talk about a few key terms

26
00:01:13.010 --> 00:01:15.070
you will need to know for this course.

27
00:01:15.070 --> 00:01:18.040
The first is cipher text.

28
00:01:18.040 --> 00:01:21.060
This is the output of an encryption operation

29
00:01:21.060 --> 00:01:24.060
given a key and plain text.

30
00:01:24.060 --> 00:01:29.080
It is also the data that is fed to a decryption function.

31
00:01:29.080 --> 00:01:33.020
The key is either a single piece of data

32
00:01:33.020 --> 00:01:35.080
or a correlated pair of data that,

33
00:01:35.080 --> 00:01:40.050
when input into an encryption function with plain text,

34
00:01:40.050 --> 00:01:43.050
will yield the cipher text output.

35
00:01:43.050 --> 00:01:47.020
The key is the piece of data that must be secured,

36
00:01:47.020 --> 00:01:51.060
as often the actual algorithm is publicly available.

37
00:01:51.060 --> 00:01:55.070
The plain text is the data that must be hidden from view

38
00:01:55.070 --> 00:01:59.040
through the use of a cryptographic encryption operation.

39
00:01:59.040 --> 00:02:03.030
This is often considered sensitive data in the real world

40
00:02:03.030 --> 00:02:07.000
that we don't want unauthorized people from viewing.

41
00:02:07.000 --> 00:02:10.030
The final term we will discuss is salt.

42
00:02:10.030 --> 00:02:13.000
A salt is a random piece of data that,

43
00:02:13.000 --> 00:02:15.030
when added to a hashing function,

44
00:02:15.030 --> 00:02:18.090
provides even more entropy in the output,

45
00:02:18.090 --> 00:02:21.070
making certain attacks less likely.

46
00:02:21.070 --> 00:02:26.000
A good cryptographic hash should always use a salt.

47
00:02:26.000 --> 00:02:28.060
There are similar values for encryption

48
00:02:28.060 --> 00:02:31.040
that we will discuss when we get there.

49
00:02:31.040 --> 00:02:33.080
Now let's discuss the definitions of a few

50
00:02:33.080 --> 00:02:37.050
of the main operations you will encounter in this course.

51
00:02:37.050 --> 00:02:40.020
The first is digital signature.

52
00:02:40.020 --> 00:02:43.080
A digital signature is an asymmetric key function

53
00:02:43.080 --> 00:02:46.090
that verifies the authenticity of a message

54
00:02:46.090 --> 00:02:49.020
coming from a remote party.

55
00:02:49.020 --> 00:02:52.020
By signing the message with the private key,

56
00:02:52.020 --> 00:02:54.060
using the public key to decrypt the message

57
00:02:54.060 --> 00:02:58.050
confirms that the sender is who they say they are.

58
00:02:58.050 --> 00:03:00.070
The next is encryption.

59
00:03:00.070 --> 00:03:04.080
Encryption in any form is a way of taking plain text

60
00:03:04.080 --> 00:03:07.070
and converting it to a cipher text,

61
00:03:07.070 --> 00:03:11.080
which, with the correct pieces of data, can be converted

62
00:03:11.080 --> 00:03:15.010
back into plain text at a later point.

63
00:03:15.010 --> 00:03:17.010
Encryption can be accomplished

64
00:03:17.010 --> 00:03:21.080
using a single shared key or an asymmetric key pair.

65
00:03:21.080 --> 00:03:24.070
The final function we will discuss is hashing,

66
00:03:24.070 --> 00:03:27.010
and by hashing we are specifically referring

67
00:03:27.010 --> 00:03:29.070
to cryptographic hashing.

68
00:03:29.070 --> 00:03:33.080
Hashing allows you to map an arbitrary-sized set of bytes

69
00:03:33.080 --> 00:03:39.060
into a finite-size of relatively unique set of bytes.

70
00:03:39.060 --> 00:03:42.080
These three classes for mathematical algorithms

71
00:03:42.080 --> 00:03:47.000
are where we will focus most of our time in this course.

