WEBVTT
1

00:00:05.390 --> 00:00:10.280

Hello everyone and welcome to the solution for the third coding a trivia question says quick review



2

00:00:10.280 --> 00:00:14.780

you're given an array of historical stock prices per day and you need to write an algorithm that figures



3

00:00:14.780 --> 00:00:17.060

out what days that is the index of the array.



4

00:00:17.200 --> 00:00:20.870

You could buy and sell the stock for maximum profit.



5

00:00:20.880 --> 00:00:25.550

Now you're only allowed to buy the stock once and sell at once and you also not short the stock.



6

00:00:25.560 --> 00:00:31.020

So if you're given this example you would buy on day three for a price of two so day for her price at



7

00:00:31.020 --> 00:00:34.230

10 getting you an $8 gain.



8

00:00:34.230 --> 00:00:39.000

We're going to start off by coating a base solution and then move on to fix some possible edge cases.



9

00:00:39.000 --> 00:00:41.880

Let's first off discuss strategy.



10

00:00:41.950 --> 00:00:46.300

So something to think about right off the bat that's really tempting to do is just find the maximum



11

00:00:46.300 --> 00:00:48.650

price in theory and the minimum price in the array.



12

00:00:48.670 --> 00:00:50.790

Subtract the two and you get your profit.



13

00:00:50.800 --> 00:00:57.000

However this won't work always because the max price could come before the minimum price.



14

00:00:57.150 --> 00:01:02.040

The brute force method would be to try every single possible pair of price combinations but that would



15

00:01:02.040 --> 00:01:06.300

also be bad because you're algorithmically very inefficient.



16

00:01:06.300 --> 00:01:08.290

It's called the Order of squared.



17

00:01:08.310 --> 00:01:13.330

Because if you have an items in the array you're going to have to do squared comparisons.



18

00:01:13.440 --> 00:01:18.690

In an interview setting you should try to already know that's not going to be the good solution.



19

00:01:18.690 --> 00:01:20.100

There's a smarter way of doing it.



20

00:01:21.200 --> 00:01:25.130

So in this case we're going to use what's called a greedy algorithm approach because we're going to



21

00:01:25.190 --> 00:01:29.890

iterate through the list of stock prices while keeping track of our maximum profit.



22

00:01:29.920 --> 00:01:34.300

That means for every price we're going to keep track of the lowest price so far and then check if we



23

00:01:34.300 --> 00:01:36.820

can get a better profit than our current max profit.



24

00:01:37.060 --> 00:01:38.850

Let's get started and coat this out.



25

00:01:39.160 --> 00:01:41.640

All right let's start off by creating our profit function.



26

00:01:41.680 --> 00:01:44.620

It's going to take in the stock prices.



27

00:01:44.810 --> 00:01:46.960

Will say so make sure you spell this right.



28

00:01:46.960 --> 00:01:49.480

Stock underscore prices.



29

00:01:50.230 --> 00:01:55.630

And then what we're going to do here is say our minimum stock price is the smallest price we've seen



30

00:01:55.630 --> 00:01:57.100

so far in the array.



31

00:01:57.400 --> 00:02:04.380

Well we can start off is going to be the first price so say stock prices of 0 is our minimum stock price



32

00:02:04.620 --> 00:02:09.660

and then our maximum profit in the very beginning is also just going to be actually zero.



33

00:02:09.660 --> 00:02:10.280

So we start off.



34

00:02:10.280 --> 00:02:11.610

Profit is zero.



35

00:02:11.670 --> 00:02:19.680

We're going to iterate through the array so we can say for price in stock prices we'll check the set



36

00:02:20.580 --> 00:02:28.980

and we'll do minimum stock prices and then we'll check to set the lowest stock price so far.



37

00:02:29.880 --> 00:02:38.220

So say minimum between the minimum stock price and the price and let's make sure that says minimum stock



38

00:02:38.220 --> 00:02:39.890

price we don't get an error later.



39

00:02:40.200 --> 00:02:46.230

So what we're doing here is we're going along everything in the price array and saying what's the minimum



40

00:02:46.230 --> 00:02:46.960

stock price.



41

00:02:46.980 --> 00:02:50.670

Is it the current minimum price I have or the price I'm currently on.



42

00:02:50.670 --> 00:02:53.540

So that's going to allow us to check the lowest stock price.



43

00:02:53.760 --> 00:02:57.150

Then we're going to do is say a comparison profit here.



44

00:02:59.480 --> 00:03:11.910

So say a comparison profit is equal to the price minus the minimum stock price.



45

00:03:11.950 --> 00:03:16.840

So that's going to check the current price minus the minimum stock price that we've seen so far and



46

00:03:16.840 --> 00:03:21.160

that's going to be our comparison profit and we're going to compare that to our current max profit which



47

00:03:21.160 --> 00:03:27.320

starts off as 0 but eventually becomes some other number as we get more and more comparison profits.



48

00:03:27.400 --> 00:03:33.150

So say a max profit versus the comparison profit.



49

00:03:33.400 --> 00:03:38.050

And then if after all that we're going to return max profit.



50

00:03:38.120 --> 00:03:39.700

So let's walk through what we're doing here.



51

00:03:39.950 --> 00:03:44.000

We're setting the minimum stock price that we've seen so far as the very first stock price.



52

00:03:44.060 --> 00:03:45.440

So far we have zero profit.



53

00:03:45.650 --> 00:03:52.190

But as we go along with every price the stock prices array we grab the minimum stock price and say OK



54

00:03:52.220 --> 00:03:53.670

what's my minimum stock price so far.



55

00:03:53.690 --> 00:03:57.620

Is it the minimum stock price that is in the very beginning the first element or the price I'm currently



56

00:03:57.620 --> 00:03:58.050

on.



57

00:03:58.220 --> 00:04:02.680

So we constantly keep track of them and the stock price has seen that we do a comparison profit.



58

00:04:02.720 --> 00:04:07.490

So we do the price that we're currently on minus the minimum stock price and then we compare if that



59

00:04:07.490 --> 00:04:12.290

profit is better than the max profit that we've seen so far using the max function.



60

00:04:12.290 --> 00:04:16.420

And after you go through the entire array you'll have the max profit to return out.



61

00:04:16.430 --> 00:04:16.690

All right.



62

00:04:16.690 --> 00:04:18.110

So let's go ahead and test this out.



63

00:04:18.140 --> 00:04:22.770

Will say profit of say to 10 and 12.



64

00:04:22.970 --> 00:04:26.290

We run that and it says the max profit possible was 10.



65

00:04:26.300 --> 00:04:29.540

Which makes sense because you would buy on the first day at $2.



66

00:04:29.590 --> 00:04:32.830

So on the last day at $12 giving you a profit of 10.



67

00:04:33.050 --> 00:04:36.420

So it actually doesn't matter what this price here in the middle is.



68

00:04:36.650 --> 00:04:42.920

So let's go ahead in well as long as it is less than $10 so we can say profits still 10.



69

00:04:42.950 --> 00:04:47.360

Let's go ahead and do another quick example make sure if things is working we'll do something like 1



70

00:04:47.630 --> 00:04:51.290

jump up to 20 and then crashed back down to let's say 5.



71

00:04:51.290 --> 00:04:56.830

So when you run that your max profit is between going to one to 20 for $9000 profit.



72

00:04:57.140 --> 00:05:02.150

So some of the edge cases we may want to consider that your interviewer may ask you to consider is what



73

00:05:02.240 --> 00:05:06.890

if your stock prices only has less than two prices.



74

00:05:06.890 --> 00:05:10.180

So we are going to get an error if we run this on that.



75

00:05:10.220 --> 00:05:14.290

So let's see what happens if we just say one in five here actually if we just say one.



76

00:05:14.320 --> 00:05:18.440

So if it's less than 2 if we just say one year end up getting zero which kind of doesn't really make



77

00:05:18.440 --> 00:05:21.360

sense but it also doesn't really make sense to pass that here.



78

00:05:21.500 --> 00:05:32.850

So instead all we can do is just say hey if the length of stock prices is Leston to go ahead and prints



79

00:05:33.020 --> 00:05:39.880

go ahead or just return something and say return hey I need more prices or whatever you want.



80

00:05:40.090 --> 00:05:42.330

So this is the sort of thinking that interview was really like.



81

00:05:42.370 --> 00:05:48.280

So when you consider edge cases it makes it aware that you're thinking of other possibilities that the



82

00:05:48.280 --> 00:05:49.920

problem may encounter.



83

00:05:49.930 --> 00:05:50.250

OK.



84

00:05:50.270 --> 00:05:52.650

Hope that was hope for you and I'll see at the next lecture.



