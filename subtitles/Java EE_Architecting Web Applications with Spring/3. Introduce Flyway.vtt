WEBVTT
1
00:00:03.240 --> 00:00:05.440
[Autogenerated] our code is written in Java,

2
00:00:05.440 --> 00:00:09.040
so we'd like a migration tool that supports Java.

3
00:00:09.040 --> 00:00:11.840
We're going to use something called Flyway.

4
00:00:11.840 --> 00:00:14.010
So Flyway is an open source project.

5
00:00:14.010 --> 00:00:19.540
Is that flyway DB or GUI and a Flyway offers cross database support.

6
00:00:19.540 --> 00:00:23.190
He does support from any database is so Oracle SQL Server my SQL

7
00:00:23.190 --> 00:00:26.980
post squares H two SQL in memory databases as well.

8
00:00:26.980 --> 00:00:32.740
A standard database is it also has maven and greater support So we can

9
00:00:32.740 --> 00:00:35.920
add tasks to grade URL for example to execute away.

10
00:00:35.920 --> 00:00:38.440
And that's exactly what we're going to do.

11
00:00:38.440 --> 00:00:39.670
Flyway letters,

12
00:00:39.670 --> 00:00:42.910
right Migrations using SQL It also lets us right migrations

13
00:00:42.910 --> 00:00:47.250
Using java in this code will just use SQL for the job for

14
00:00:47.250 --> 00:00:50.740
migrations are equally is valid for us.

15
00:00:50.740 --> 00:00:53.960
So to use fly away we need to ad flyway to griddle.

16
00:00:53.960 --> 00:00:54.990
To do that,

17
00:00:54.990 --> 00:00:58.820
we need to add a dependency So we tell griddle what the name and the

18
00:00:58.820 --> 00:01:02.780
version of the plug in is once we've added fly away to griddle Then we

19
00:01:02.780 --> 00:01:06.350
set fly way up So we use the flyway closure when we pass it Some

20
00:01:06.350 --> 00:01:11.580
information we can see here we're telling it which database tubes So

21
00:01:11.580 --> 00:01:13.440
we say we're using my SQL.

22
00:01:13.440 --> 00:01:15.840
We tell it the username on the password.

23
00:01:15.840 --> 00:01:17.080
It is a very strong password.

24
00:01:17.080 --> 00:01:18.740
In this case.

25
00:01:18.740 --> 00:01:21.110
We tell it this scheme of we'd like to update and then we

26
00:01:21.110 --> 00:01:23.950
tell you where to find the SQL migrations in this case to

27
00:01:23.950 --> 00:01:25.590
execute against the database.

28
00:01:25.590 --> 00:01:29.320
And here we're saying to look in two places we look in a

29
00:01:29.320 --> 00:01:33.040
common folder on we look in a my SQL folder.

30
00:01:33.040 --> 00:01:37.310
The idea here is that we hold migrations that can apply to any database.

31
00:01:37.310 --> 00:01:38.940
In the common folder,

32
00:01:38.940 --> 00:01:43.640
we add migrations that are my SQL specific in the my SQL folder

33
00:01:43.640 --> 00:01:45.690
on This is just one way of setting this up.

34
00:01:45.690 --> 00:01:48.750
We're splitting up our migrations into database general

35
00:01:48.750 --> 00:01:51.530
migrations on database specific migrations.

36
00:01:51.530 --> 00:01:54.870
So given the plug in on this flyway migration flyway

37
00:01:54.870 --> 00:01:57.940
then AD DS a set of tasks to grade URL.

38
00:01:57.940 --> 00:02:02.040
So we see we have a clean task and we have a my great task,

39
00:02:02.040 --> 00:02:04.540
my greatest, the one we really care about here.

40
00:02:04.540 --> 00:02:08.690
So the flyway migrate task will run the migrations for us Now,

41
00:02:08.690 --> 00:02:09.750
at the moment,

42
00:02:09.750 --> 00:02:13.340
we're only going to run migrations against the production database.

43
00:02:13.340 --> 00:02:14.770
But we also have a test database.

44
00:02:14.770 --> 00:02:19.520
At some point when we do that, we need to make this slightly more complex on.

45
00:02:19.520 --> 00:02:24.740
We'll cover that when we talk about how we set up testing for this application.

46
00:02:24.740 --> 00:02:26.370
So now that we've seen how to configure,

47
00:02:26.370 --> 00:02:34.000
fly away, let's go and write some migrations. Let's go and run those migrations on, see how they affect the database.

