WEBVTT
1
1

00:00:00.000  -->  00:00:01.930
Hey guys, welcome back to the course.
2

2

00:00:01.930  -->  00:00:05.880
So let's cover a new tech trend called responsive design.
3

3

00:00:05.880  -->  00:00:10.140
Responsive design is something that is a very, very big deal for
4

4

00:00:10.140  -->  00:00:15.250
front-end developers and designers, and it's also a huge headache.
5

5

00:00:15.250  -->  00:00:20.200
Remember back in the good old days when there was just one iPhone size,
6

6

00:00:20.200  -->  00:00:24.700
and laptops really only came in one, two, or three different sizes?
7

7

00:00:24.700  -->  00:00:29.400
Yes, indeed, those were the days for many reasons, including it was a lot easier
8

8

00:00:29.400  -->  00:00:32.500
for designers to make websites because they only had
9

9

00:00:32.500  -->  00:00:37.810
to make them look good on a handful of different resolution sizes.
10

10

00:00:37.810  -->  00:00:39.820
But nowadays, what's the actual reality?
11

11

00:00:39.820  -->  00:00:44.000
Well, today, there has been an explosion in different screen sizes.
12

12

00:00:44.000  -->  00:00:49.270
The iPhone, as opposed to being one, I think it's four or five different sizes now.
13

13

00:00:49.270  -->  00:00:53.290
iPads, for instance, come in three different sizes, not just one.
14

14

00:00:53.290  -->  00:00:56.650
Laptop and desktop computers also are being made in different ways,
15

15

00:00:56.650  -->  00:01:00.570
and Android has always been pretty fragmented.
16

16

00:01:00.570  -->  00:01:05.740
They used to have something like 50 different 
resolutions, but now they have well over 100.
17

17

00:01:05.740  -->  00:01:11.700
Ok, so how do you as a developer and a designer make a site that looks good
18

18

00:01:11.700  -->  00:01:16.650
no matter what screen it's on, if it's on a screen this big, or just huge?
19

19

00:01:16.650  -->  00:01:18.910
Now, it used to be the case that if you wanted your website to look good
20

20

00:01:18.910  -->  00:01:23.180
on all resolutions, what you did is you just gave your browser
21

21

00:01:23.180  -->  00:01:26.990
separate instructions depending on what screen was loading it.
22

22

00:01:26.990  -->  00:01:29.990
Now, that still often is what some people do,
23

23

00:01:29.990  -->  00:01:35.600
but the better way of tackling that is a new technique called responsive design.
24

24

00:01:35.600  -->  00:01:41.740
The reason why this is called responsive design is that you are making designs and code
25

25

00:01:41.740  -->  00:01:46.580
that detects the size of the screen that's viewing it,
26

26

00:01:46.580  -->  00:01:51.950
and it automatically stretches or contracts to fit the screen.
27

27

00:01:51.950  -->  00:01:56.070
So instead of making hundreds of set in stone,
28

28

00:01:56.070  -->  00:01:58.890
absolute different variations for different screens,
29

29

00:01:58.890  -->  00:02:03.700
you make one responsive one that can kind of work on its own.
30

30

00:02:03.700  -->  00:02:08.200
Now, that is a key distinction about responsive design that a lot of people miss.
31

31

00:02:08.200  -->  00:02:11.000
A lot of people think when you design something responsively,
32

32

00:02:11.000  -->  00:02:15.650
it just means that internally it has a lot of different versions of itself
33

33

00:02:15.650  -->  00:02:21.550
and it can just fit the top 20 use cases, but in reality it means it's designed
34

34

00:02:21.550  -->  00:02:26.890
from the very beginning of the process to be able to expand or contract.
35

35

00:02:26.890  -->  00:02:30.420
Now, doing this is not easy, and you have make a lot of hard choices.
36

36

00:02:30.420  -->  00:02:34.590
You have to decide what gets displayed on smaller resolutions,
37

37

00:02:34.590  -->  00:02:39.250
you have to decide whether or not you're going to lower the quality of your images
38

38

00:02:39.250  -->  00:02:44.540
so that mobile apps that have slower connections can download them more easily.
39

39

00:02:44.540  -->  00:02:49.200
It means often dropping entire pieces of functionality from your site
40

40

00:02:49.200  -->  00:02:52.340
because smaller resolutions just can't handle it,
41

41

00:02:52.340  -->  00:02:54.500
and therefore the user experience suffers.
42

42

00:02:54.500  -->  00:02:57.690
Generally you can tell whether or not a site has been responsively designed
43

43

00:02:57.690  -->  00:03:01.350
based off of how it uses white space.
44

44

00:03:01.350  -->  00:03:04.900
Typically, responsive design, you're going to see a website that has
45

45

00:03:04.900  -->  00:03:10.460
a lot of padding on the sides, and a lot of space in between the individual elements.
46

46

00:03:10.460  -->  00:03:14.860
The reason they do that is just because, for their own sanity, it makes it a lot easier
47

47

00:03:14.860  -->  00:03:20.200
if it has to contract or expand, it's a lot easier than if you have lots of different things
48

48

00:03:20.200  -->  00:03:23.510
in one tiny little area, they'd have to grow into each other,
49

49

00:03:23.510  -->  00:03:26.150
they'd bump into each other, you'd have a lot of issues.
50

50

00:03:26.150  -->  00:03:30.650
People who are doing responsive designs have to use the concept of floating a lot.
51

51

00:03:30.650  -->  00:03:33.350
Floating just means that when you make the CSS, which, remember,
52

52

00:03:33.350  -->  00:03:37.660
CSS is what determines where on the page an element,
53

53

00:03:37.660  -->  00:03:42.350
image, text is located, you have kind of two options.
54

54

00:03:42.350  -->  00:03:47.120
One is you can tell the browser all of the time it's right here, I can give you
55

55

00:03:47.120  -->  00:03:50.770
almost like GPS coordinates, saying on the X it's here, on the Y it's here.
56

56

00:03:50.770  -->  00:03:52.930
The problem obviously with that is that when
57

57

00:03:52.930  -->  00:03:57.130
smaller resolutions pick that up, where does it display?
58

58

00:03:57.130  -->  00:03:59.850
Often times it gets displayed in a very inconvenient place,
59

59

00:03:59.850  -->  00:04:02.910
so instead, we have to do things like floating, which means that an element,
60

60

00:04:02.910  -->  00:04:09.290
its location is not absolute, it's based on where the other elements on the page are.
61

61

00:04:09.290  -->  00:04:12.420
Responsive design in general is kind of the de facto,
62

62

00:04:12.420  -->  00:04:15.100
I mean, you have to do it now, and it's a huge headache,
63

63

00:04:15.100  -->  00:04:17.700
because it's an enormous amount of bug testing.
64

64

00:04:17.700  -->  00:04:23.610
Every time you make a site, it's like, "Oh great, it looks good on iPad 1 and iPhone 5,
65

65

00:04:23.610  -->  00:04:29.310
but iPhone 6 Plus, oh, it's terrible, you can't even read the header, it makes no sense."
66

66

00:04:29.310  -->  00:04:32.570
Also, take into consideration that there's five major browsers,
67

67

00:04:32.570  -->  00:04:35.200
and they all interpret these things differently,
68

68

00:04:35.200  -->  00:04:37.950
so you have to deal with that on top of the fact
69

69

00:04:37.950  -->  00:04:39.920
that they're going to be in different resolutions.
70

70

00:04:39.920  -->  00:04:41.820
Now, if you're going to learn front-end design, unfortunately
71

71

00:04:41.820  -->  00:04:44.520
you're just going to have to learn responsive design.
72

72

00:04:44.520  -->  00:04:47.430
It's pretty imperative, we've even gotten to the point where
73

73

00:04:47.430  -->  00:04:54.830
Google will de-rank your site if it's not optimized for different and common resolutions.
74

74

00:04:54.830  -->  00:04:57.830
In other words, if you have a website, and it doesn't have a mobile version,
75

75

00:04:57.830  -->  00:05:02.740
as in like a small version design for itself, and it doesn't respond in a responsive way,
76

76

00:05:02.740  -->  00:05:06.700
you actually get dinged for that and get less traffic,
77

77

00:05:06.700  -->  00:05:08.700
because Google doesn't want to send people to websites
78

78

00:05:08.700  -->  00:05:10.680
that just don't work on mobile phones.
79

79

00:05:10.680  -->  00:05:14.320
All right guys, that's responsive design - kind of a big deal,
80

80

00:05:14.320  -->  00:05:18.990
you're going to run into it, so now you have a decent idea of what it is.
81

81

00:05:18.990  -->  00:05:20.230
See you in the next lecture!
