WEBVTT
1
1

00:00:00.000  -->  00:00:02.570
Hey guys, welcome back to the course.
2

2

00:00:02.570  -->  00:00:06.280
Ok, so at this point, what do we know? 
We know that computers are,
3

3

00:00:06.280  -->  00:00:11.950
in their essence, basically just these machines 
that are designed to solve problems,
4

4

00:00:11.950  -->  00:00:15.080
but we often forget that without humans to operate them,
5

5

00:00:15.080  -->  00:00:20.800
they're actually just dumb boxes of metal. 
I know they call it a smartphone,
6

6

00:00:20.800  -->  00:00:26.650
or a smart watch, or even a smart fridge, 
but without someone actually driving them,
7

7

00:00:26.650  -->  00:00:31.140
giving them input information, they don't 
actually do anything but sit there and rust.
8

8

00:00:31.140  -->  00:00:35.040
They need your information and they 
need instructions in order to compute
9

9

00:00:35.040  -->  00:00:40.240
and to give you something of value, and that's 
at least, of course, until computers
10

10

00:00:40.240  -->  00:00:45.140
get smart enough to learn how to compute 
themselves, in which case... God save us.
11

11

00:00:45.140  -->  00:00:47.380
I think that's actually the plot to Terminator.
12

12

00:00:47.380  -->  00:00:49.580
So that's something to keep in mind 
as you dive deeper into
13

13

00:00:49.580  -->  00:00:52.450
computer technology and into computer programming.
14

14

00:00:52.450  -->  00:00:56.280
Through whatever program or application 
you're using, you're literally
15

15

00:00:56.280  -->  00:01:03.130
giving a computer X information and 
telling it to do Y with that information.
16

16

00:01:03.130  -->  00:01:06.500
Your information trickles down to the 
core components of a computer
17

17

00:01:06.500  -->  00:01:11.500
and says, "Do this," and the computer 
says, "All right, I'll do it, lay off."
18

18

00:01:11.500  -->  00:01:16.140
It's just a thing essentially waiting for you 
to give commands to it to do something,
19

19

00:01:16.140  -->  00:01:19.580
which brings us to the next question which is worth asking.
20

20

00:01:19.580  -->  00:01:24.830
How does a computer actually do 
what you just bossed it to do?
21

21

00:01:24.830  -->  00:01:28.130
What is going on inside of that stupid box on your desk?
22

22

00:01:28.130  -->  00:01:30.590
Well, the first thing we need to understand 
is that every time you
23

23

00:01:30.590  -->  00:01:36.930
ask your computer to process some instruction, 
let's say I was typing "Evan Kimbrell"
24

24

00:01:36.930  -->  00:01:40.430
into Google, which is something I often do laying in bed at night,
25

25

00:01:40.430  -->  00:01:46.140
or let's say you're double-clicking the 
Minesweeper icon to play that game with mines,
26

26

00:01:46.140  -->  00:01:51.400
you are communicating indirectly with what's called 
the "central processing unit"
27

27

00:01:51.400  -->  00:01:54.050
of your computer, also known as the CPU.
28

28

00:01:54.050  -->  00:02:00.420
The CPU is the core of the computer that 
executes instructions at the absolute lowest level.
29

29

00:02:00.420  -->  00:02:05.060
A computer processor is where the problems actually get solved.
30

30

00:02:05.060  -->  00:02:07.330
How does a CPU actually work?
31

31

00:02:07.330  -->  00:02:11.700
No one knows. 
Not even Bill Gates, who once said, and I quote,
32

32

00:02:11.700  -->  00:02:14.730
"The CPU is that thing that makes your computer do stuff."
33

33

00:02:14.730  -->  00:02:15.860
Well said, Bill.
34

34

00:02:15.860  -->  00:02:18.730
We're not really going to get deep into how a CPU works, because
35

35

00:02:18.730  -->  00:02:23.770
it's actually an immensely complicated process 
and knowing that process
36

36

00:02:23.770  -->  00:02:28.020
is not really going to benefit you in any way 
to become a computer programmer
37

37

00:02:28.020  -->  00:02:30.200
or just to better understand programming.
38

38

00:02:30.200  -->  00:02:35.320
If you insisted, I'll give you a somewhat helpful explanation, 
just don't quote me on it later.
39

39

00:02:35.320  -->  00:02:39.920
CPUs, if you haven't seen them before, 
if you ever opened up your computer,
40

40

00:02:39.920  -->  00:02:44.930
it's those tiny little silicon boxes, little squares, 
and they're usually attached to
41

41

00:02:44.930  -->  00:02:50.800
what's called the motherboard - it's that big green board 
with a bunch of wires and little nodes.
42

42

00:02:50.800  -->  00:02:54.870
These little squares are so complex that there are actually only
43

43

00:02:54.870  -->  00:02:58.710
two major companies in the world that can 
make them for personal computers.
44

44

00:02:58.710  -->  00:03:01.910
The first one is known as Intel 
and the second one is known as AMD.
45

45

00:03:01.910  -->  00:03:08.120
Within this tiny little square of silicon, 
there are thousands and thousands
46

46

00:03:08.120  -->  00:03:13.060
of what are called transistors that are "microns" in diameter.
47

47

00:03:13.060  -->  00:03:18.030
Yes, I know your face just glazed over when I said 
micro-gadgets and transisto-whatevers,
48

48

00:03:18.030  -->  00:03:21.100
but a transistor is actually a lot easier to think of.
49

49

00:03:21.100  -->  00:03:27.880
A transistor is actually just a wire 
that can transfer electricity, that is it.
50

50

00:03:27.880  -->  00:03:32.110
And a micron is an extremely small unit of measurement.
51

51

00:03:32.110  -->  00:03:40.650
How small? Well, a piece of human hair 
is about 100 microns in diameter,
52

52

00:03:40.650  -->  00:03:44.490
and the world's smallest CPU transistor is about 6 microns.
53

53

00:03:44.490  -->  00:03:48.090
Actually, I'm joking, it was 6 microns back in 1974.
54

54

00:03:48.090  -->  00:03:52.460
Now they're about 0.05 of 1 micron.
55

55

00:03:52.460  -->  00:03:55.860
I know, it's insanity, and it's really hard to comprehend.
56

56

00:03:55.860  -->  00:03:58.300
Just know that they're extremely complex.
57

57

00:03:58.300  -->  00:04:01.880
What CPUs essentially do is they take 
electricity and commands,
58

58

00:04:01.880  -->  00:04:06.400
and then through a very strange process of alternating transistors,
59

59

00:04:06.400  -->  00:04:11.210
those tiny little things that transfer information, 
it can actually process information.
60

60

00:04:11.210  -->  00:04:15.490
I know, this is all jibberish I'm telling you, 
but think of it kind of like this.
61

61

00:04:15.490  -->  00:04:22.260
You have a calculator. A processor is like a calculator 
in its own way, except just smaller.
62

62

00:04:22.260  -->  00:04:27.500
It transfers electricity in circles, which we actually call a "clock,"
63

63

00:04:27.500  -->  00:04:33.770
and it's measured in what we call MIPS, 
or millions of instructions per second.
64

64

00:04:33.770  -->  00:04:36.200
If you guys have ever, if you know anything 
about computers, ever heard
65

65

00:04:36.200  -->  00:04:38.310
the term "overclocked" or "underclocked"?
66

66

00:04:38.310  -->  00:04:42.420
That is a way of speeding up your processor or slowing it down.
67

67

00:04:42.420  -->  00:04:46.250
Now, a processor can add, it can subtract, it can multiply,
68

68

00:04:46.250  -->  00:04:50.220
it can do really whatever needs to be done 
depending on whatever you send it.
69

69

00:04:50.220  -->  00:04:54.110
If a processor were Sesame Street, 
it'd probably be the Cookie Monster,
70

70

00:04:54.110  -->  00:04:56.750
and this is the part where he gobbles up 
all the cookies and then
71

71

00:04:56.750  -->  00:04:58.370
screams out the alphabet or something.
72

72

00:04:58.370  -->  00:05:02.230
So that is roughly how calculations and information get processed.
73

73

00:05:02.230  -->  00:05:06.430
Now, of course, most times when 
you're working with a computer,
74

74

00:05:06.430  -->  00:05:11.050
you'll want to save whatever you're doing, 
so it doesn't disappear forever.
75

75

00:05:11.050  -->  00:05:16.910
Now, that is why computers come with another crucial component we call memory.
76

76

00:05:16.910  -->  00:05:22.180
Memory is essentially the way that computers keep 
information on file without it disappearing.
77

77

00:05:22.180  -->  00:05:27.730
Computers have permanent memory built right into it 
as the form of what's called a hard drive,
78

78

00:05:27.730  -->  00:05:32.290
which means you can save something, 
turn the computer off, and that information
79

79

00:05:32.290  -->  00:05:36.560
will actually stay there, and when you turn it back on, 
it will come back.
80

80

00:05:36.560  -->  00:05:41.600
Hard drivers work very similar to the way 
that cassettes or CDs work.
81

81

00:05:41.600  -->  00:05:46.480
Again, do you need to know how that works, 
even in one deeper level? No.
82

82

00:05:46.480  -->  00:05:51.480
Computer hard drives most often consist 
of a circular magnetic plate,
83

83

00:05:51.480  -->  00:05:58.160
hilariously called a platter, and it spins like a CD, 
and has information written on it,
84

84

00:05:58.160  -->  00:06:03.570
and removed by that read-write head, 
which is actually called an actuator arm,
85

85

00:06:03.570  -->  00:06:07.520
so it hits it constantly when it needs to read 
the information or change the information.
86

86

00:06:07.520  -->  00:06:12.720
Yeah, I know, it's not super useful, but just 
think of it like an old Sony Walkman.
87

87

00:06:12.720  -->  00:06:17.280
You can store information on CDs, 
and when you put them in your walkman they spin,
88

88

00:06:17.280  -->  00:06:19.580
and then the information gets read off of them.
89

89

00:06:19.580  -->  00:06:24.150
They're just like that, but full of a lot more information.
90

90

00:06:24.150  -->  00:06:29.370
Think of it as the new and improved Cookie Monster 
who is able to control himself and,
91

91

00:06:29.370  -->  00:06:33.640
instead of immediately devouring all the cookies 
you give him, he stows some
92

92

00:06:33.640  -->  00:06:35.830
away in the pantry in case you ask for them back.
93

93

00:06:35.830  -->  00:06:37.960
But what about information that you need to store
94

94

00:06:37.960  -->  00:06:40.930
but you don't necessarily need to store forever?
95

95

00:06:40.930  -->  00:06:45.070
Well, the computer handles that too 
and it's through a process called RAM,
96

96

00:06:45.070  -->  00:06:47.950
which stands for Random Access Memory.
97

97

00:06:47.950  -->  00:06:52.640
RAM, Random Access Memory, is used to 
quickly store and access information
98

98

00:06:52.640  -->  00:06:55.350
that doesn't necessarily have to be remembered forever,
99

99

00:06:55.350  -->  00:06:58.980
just for the duration of whatever program you're running.
100

100

00:06:58.980  -->  00:07:03.620
Let's say, for example, you open up your web browser, 
you go to a website, as you often do.
101

101

00:07:03.620  -->  00:07:07.600
The images, the text, the animations, 
and whatever else is in the browser,
102

102

00:07:07.600  -->  00:07:12.330
it needs to be displayed at this moment, and in order to do that,
103

103

00:07:12.330  -->  00:07:15.430
it has to be stored somewhere temporarily.
104

104

00:07:15.430  -->  00:07:18.340
Where does it gets stored? 
It gets stored in your RAM.
105

105

00:07:18.340  -->  00:07:20.940
So as soon as you exit out of that program, your computer says,
106

106

00:07:20.940  -->  00:07:23.410
"We don't need these images and this text anymore,"
107

107

00:07:23.410  -->  00:07:26.950
and it leaves your RAM, and frees it up 
so you can use other applications.
108

108

00:07:26.950  -->  00:07:30.840
So have you ever had one of your computers 
get really, really slow when
109

109

00:07:30.840  -->  00:07:33.780
you have too many tabs open on your Google Chrome?
110

110

00:07:33.780  -->  00:07:36.890
Well, that's obviously because you're running out of RAM,
111

111

00:07:36.890  -->  00:07:42.100
and the system has to wait for RAM to free up 
before processing or loading the next thing.
112

112

00:07:42.100  -->  00:07:45.830
That's why your computer freezes and then comes undone later.
113

113

00:07:45.830  -->  00:07:50.800
So when someone says, 
"Oh wow, Firefox is such a light browser,"
114

114

00:07:50.800  -->  00:07:55.500
whether it's true or not, what they mean 
is that it doesn't have a lot of
115

115

00:07:55.500  -->  00:08:01.350
unnecessary processes, and because of that, 
when you run it, it this takes up less RAM.
116

116

00:08:01.350  -->  00:08:05.480
What that means at the end of the day is that 
you can have more browsers open,
117

117

00:08:05.480  -->  00:08:08.450
and if you have commitment issues, you can decide to
118

118

00:08:08.450  -->  00:08:11.660
just keep and hoard all of your tabs, like I do.
119

119

00:08:11.660  -->  00:08:14.590
As a programmer, your basic function is that you're going to be
120

120

00:08:14.590  -->  00:08:18.020
giving the computer instructions, and you know how to do it
121

121

00:08:18.020  -->  00:08:20.700
in a way that the computer can understand.
122

122

00:08:20.700  -->  00:08:24.870
Back in the day, the way that programmers 
actually sent instructions to a computer,
123

123

00:08:24.870  -->  00:08:27.350
it happened the "hands-on" way.
124

124

00:08:27.350  -->  00:08:32.650
So programmers would literally shove these 
giant stacks of cards into giant machines
125

125

00:08:32.650  -->  00:08:36.580
that were actually the size of rooms, 
and the patterns of the holes
126

126

00:08:36.580  -->  00:08:39.580
punched onto the card would tell the machine what to do.
127

127

00:08:39.580  -->  00:08:43.150
So punch cards were actually the original programs.
128

128

00:08:43.150  -->  00:08:47.690
Later on, when the British mathematician Benedict Cumberbatch
129

129

00:08:47.690  -->  00:08:51.630
made his breakthrough discovery of the "stored program" concept,
130

130

00:08:51.630  -->  00:08:56.040
programmers could suddenly design machines 
that remembered programs.
131

131

00:08:56.040  -->  00:08:59.800
No more need to shove punch cards into them all the time.
132

132

00:08:59.800  -->  00:09:02.500
Now, 80 years later, humans still can't remember anything,
133

133

00:09:02.500  -->  00:09:06.980
and computers can remember everything, 
while being small enough to fit in your pocket.
134

134

00:09:06.980  -->  00:09:07.910
So, there you go.
135

135

00:09:07.910  -->  00:09:13.480
You put a CPU (a central processing unit) 
and two different types of memory together,
136

136

00:09:13.480  -->  00:09:17.350
and you have the building blocks for 
a good problem-solving machine,
137

137

00:09:17.350  -->  00:09:19.820
a machine that needs a human to give it instructions,
138

138

00:09:19.820  -->  00:09:22.960
or else it's just an expensive paperweight.
139

139

00:09:22.960  -->  00:09:25.790
The next lecture, we're going to talk about how computers get
140

140

00:09:25.790  -->  00:09:29.730
the information they need, and how they 
shoot it out, so we can use it.
141

141

00:09:29.730  -->  00:09:31.130
All right, see you in the next lecture!
