1
1

00:00:00,000  -->  00:00:01,830
Hey guys, welcome back to the course.
2

2

00:00:01,830  -->  00:00:05,800
All right, we are on to the next concept to dip our toes into.
3

3

00:00:05,800  -->  00:00:09,400
The concept we're going to talk about this lecture are called strings.
4

4

00:00:09,400  -->  00:00:13,490
So, remember the last lecture, we learned about commenting,
5

5

00:00:13,490  -->  00:00:16,340
we know what printing is, we know what variables are.
6

6

00:00:16,340  -->  00:00:20,800
Variables are a way you store information 
so that you can use it later in the application,
7

7

00:00:20,800  -->  00:00:24,260
or even in the other pages, it saves you a lot of time.
8

8

00:00:24,260  -->  00:00:28,900
Printing is how you tell an application, 
"Hey, this needs to display on the screen."
9

9

00:00:28,900  -->  00:00:33,740
Commenting is how people leave notes to the people that follow them,
10

10

00:00:33,740  -->  00:00:40,270
to tell them how does this work, what does 
this do, what should I be doing right now.
11

11

00:00:40,270  -->  00:00:43,250
The next concept just relates to text.
12

12

00:00:43,250  -->  00:00:46,630
So, remember when we talked about commenting,
13

13

00:00:46,630  -->  00:00:50,990
and how commenting, the reason why we have a special code for it,
14

14

00:00:50,990  -->  00:00:54,660
like in Python and in Ruby, it's that compound sign,
15

15

00:00:54,660  -->  00:00:59,130
is because the computer, if you didn't have that compound sign,
16

16

00:00:59,130  -->  00:01:02,870
it would look at the sentence and think that that was code,
17

17

00:01:02,870  -->  00:01:06,000
and then return an error, and screw everything up.
18

18

00:01:06,000  -->  00:01:08,650
So the computer is dumb, it doesn't know what is
19

19

00:01:08,650  -->  00:01:10,740
you talking to someone else reading the document,
20

20

00:01:10,740  -->  00:01:14,710
and what is actual code it should execute.
21

21

00:01:14,710  -->  00:01:18,000
Strings are kind of in a similar vein.
22

22

00:01:18,000  -->  00:01:24,780
So, in this example up here, we were just saving stuff as numbers.
23

23

00:01:24,780  -->  00:01:28,860
Well, what if I wanted to save a variable as text,
24

24

00:01:28,860  -->  00:01:32,520
so, if you want to write something on the screen that's going to be text?
25

25

00:01:34,200  -->  00:01:36,400
You inherently are going to run into a problem, where
26

26

00:01:36,400  -->  00:01:40,340
text often will get confused as code, especially in things like Python,
27

27

00:01:40,340  -->  00:01:46,510
where text is how you do things, so me verbally saying something in text
28

28

00:01:46,510  -->  00:01:48,610
could very easily be confused as commands.
29

29

00:01:48,610  -->  00:01:52,720
So the way that you would do strings and they typically,
30

30

00:01:52,720  -->  00:01:56,470
thankfully look very similar in most languages,
31

31

00:01:56,470  -->  00:02:00,740
is you first of all have to store it in a variable,
32

32

00:02:00,740  -->  00:02:03,400
otherwise the computer won't know what to do with it,
33

33

00:02:03,400  -->  00:02:05,650
and it's not something you can use later.
34

34

00:02:05,650  -->  00:02:08,800
So what we would do is we define a variable, so we would,
35

35

00:02:08,800  -->  00:02:11,950
let's call it a variable "string", why not?
36

36

00:02:11,950  -->  00:02:14,630
And then, by saying equals, we can say that this is,
37

37

00:02:14,630  -->  00:02:20,300
whatever comes after this is going to be what "string" stands for.
38

38

00:02:20,300  -->  00:02:24,650
And then, in order to tell the computer that "Hey, this is text coming up,"
39

39

00:02:24,650  -->  00:02:29,400
what I would have to do is just put single quotations,
40

40

00:02:29,400  -->  00:02:33,800
and then I could say, "I can type whatever I want here."
41

41

00:02:33,800  -->  00:02:41,850
Now, in Python, it's single quotations, 
in PHP it's going to be double quotations,
42

42

00:02:41,850  -->  00:02:44,400
in Python actually I think you can use double quotations,
43

43

00:02:44,400  -->  00:02:47,450
it just has slightly different rules associated with it,
44

44

00:02:47,450  -->  00:02:54,250
same thing with PHP. If you have double quotes, 
it changes some detail down the road,
45

45

00:02:54,250  -->  00:02:56,300
but for the most part, this is just how you do it.
46

46

00:02:56,300  -->  00:02:58,810
So, now that we have that stored, if I wanted to put this on the screen,
47

47

00:02:58,810  -->  00:03:04,670
I could say "print equals string", and then I could post it on the screen,
48

48

00:03:04,670  -->  00:03:06,320
and it would say "I can type whatever I want here."
49

49

00:03:06,320  -->  00:03:13,310
Now, what would happen if I wanted to give a quotation in my string?
50

50

00:03:13,310  -->  00:03:19,300
Say I had a quote about Gandhi on my homepage, I wanted to display that,
51

51

00:03:19,300  -->  00:03:23,500
how would I do that? Because if I do a quotation it's going to look like,
52

52

00:03:23,500  -->  00:03:30,550
"Here's the quote from Gandhi."
53

53

00:03:30,550  -->  00:03:33,930
You see how even the color coding here just got destroyed?
54

54

00:03:33,930  -->  00:03:38,850
What this actually thinks now is, because these double quotation marks
55

55

00:03:38,850  -->  00:03:41,900
are only surrounding the "I" and the "from Gandhi",
56

56

00:03:41,900  -->  00:03:45,330
it actually mistakes those as the strings, and this is not a string.
57

57

00:03:45,330  -->  00:03:48,300
There's a lot of different ways that languages can handle this,
58

58

00:03:48,300  -->  00:03:52,240
but it's through a concept known as an escape command.
59

59

00:03:52,240  -->  00:03:54,610
Now the best way of thinking about escape commands is
60

60

00:03:54,610  -->  00:04:00,310
we have written something right here, and 
because it's wrapped in those quotation marks,
61

61

00:04:00,310  -->  00:04:04,450
the computer knows that "Hey, this is text, 
I shouldn't try to do anything fancy with it,"
62

62

00:04:04,450  -->  00:04:11,020
it is essentially enclosed. But how exactly would I escape out of that
63

63

00:04:11,020  -->  00:04:18,060
and change the rules, essentially say 
"Yes, I know that you think this is a string,
64

64

00:04:18,060  -->  00:04:23,730
but here is a super-secret command to let you 
know that no, actually we need to change this."
65

65

00:04:23,730  -->  00:04:29,780
So with an escape variable, I can essentially tell the computer that
66

66

00:04:29,780  -->  00:04:34,080
"Hey, this is a string, but this one thing I'm typing to you is actually code
67

67

00:04:34,080  -->  00:04:36,730
and you should run that." So, an example would be,
68

68

00:04:36,730  -->  00:04:43,230
let's say I wanted to write a sentence, but I wanted to put it on two different lines.
69

69

00:04:43,230  -->  00:04:47,380
I couldn't do it like this, because this would actually confuse the computer.
70

70

00:04:47,380  -->  00:04:52,000
"Here is a quote," I can say it like that, and then like that.
71

71

00:04:52,000  -->  00:04:54,900
So that confuses it, because the computer reads one line at a time,
72

72

00:04:54,900  -->  00:04:58,600
it would see this string, and it doesn't see the ending point,
73

73

00:04:58,600  -->  00:05:03,000
so it has no idea what this is, and then it would run into an error.
74

74

00:05:03,000  -->  00:05:08,350
What I could do instead is I could give it this super-secret code,
75

75

00:05:08,350  -->  00:05:15,100
which in Python is back N, and then I can just say the rest of it.
76

76

00:05:15,100  -->  00:05:19,360
"This quote." And what'll end up happening is, it'll read this,
77

77

00:05:19,360  -->  00:05:24,260
and it's just preconditioned to know that backspace N is an escape command
78

78

00:05:24,260  -->  00:05:28,670
for how to skip lines. There's a lot of examples of that.
79

79

00:05:28,670  -->  00:05:32,130
Anytime that you type something that is relatively complicated
80

80

00:05:32,130  -->  00:05:35,470
or it looks like code, you're going to run into this problem.
81

81

00:05:35,470  -->  00:05:39,410
So how would I describe where I saved something on my C: drive
82

82

00:05:39,410  -->  00:05:43,100
on a Windows computer, especially because the C: drive would look like
83

83

00:05:43,100  -->  00:05:49,680
C:/bunch of words/bunch of words, 
it's going to get very confused by the slashes,
84

84

00:05:49,680  -->  00:05:54,750
so you have to memorize the set of escape variables so that
85

85

00:05:54,750  -->  00:05:57,710
you can make a string without essentially screwing it up.
86

86

00:05:57,710  -->  00:06:00,130
One thing worth noting, another thing.
87

87

00:06:00,130  -->  00:06:04,940
How exactly, for instance, would I make a string, 
but also insert a variable?
88

88

00:06:04,940  -->  00:06:13,550
So, these are the variables, so it's burrito, but if I said burrito in this string,
89

89

00:06:13,550  -->  00:06:19,560
"I want a burrito," would it come up as 9?
90

90

00:06:19,560  -->  00:06:27,800
Or, I guess it'd be "What is the food price?" and then I'd put burrito.
91

91

00:06:27,800  -->  00:06:29,690
Would burrito come up as 9?
92

92

00:06:29,690  -->  00:06:32,950
No, because it has these quotation marks, so it's going to think that
93

93

00:06:32,950  -->  00:06:36,970
burrito is just plain text, like humans talking to humans.
94

94

00:06:36,970  -->  00:06:40,180
If I wanted to do that, well, there's multiple ways of doing this,
95

95

00:06:40,180  -->  00:06:42,250
and again, every language has a different way of handling it,
96

96

00:06:42,250  -->  00:06:44,940
just know that there are ways that we handle this.
97

97

00:06:44,940  -->  00:06:50,150
In Python, for instance, you could do it several ways.
98

98

00:06:50,150  -->  00:06:52,750
One would be actually to just do it like this,
99

99

00:06:52,750  -->  00:06:58,650
so string equals this plus, so that you concatenate, which means
100

100

00:06:58,650  -->  00:07:02,500
attach two things together, and then I just say "burrito."
101

101

00:07:02,500  -->  00:07:09,700
So what would happen there is, it would save string as what is the food price, nine.
102

102

00:07:09,700  -->  00:07:13,500
Because I essentially put this outside of the string,
103

103

00:07:13,500  -->  00:07:17,470
it now knows this is programmatic, oh wait, this is what it means,
104

104

00:07:17,470  -->  00:07:18,650
I already know what burrito means.
105

105

00:07:18,650  -->  00:07:22,250
Alternatively, you can do it like this,
106

106

00:07:22,250  -->  00:07:26,070
where you'd use an escape variable, which is this,
107

107

00:07:26,070  -->  00:07:31,300
and then you can put any letter you want, so I put like B,
108

108

00:07:31,300  -->  00:07:34,150
notice how it even lit it up differently.
109

109

00:07:34,150  -->  00:07:37,300
So then what I'd have to do is, then I'd put it outside of the string,
110

110

00:07:37,300  -->  00:07:46,250
B followed by what the value of B is, so I could say this variable is 9,
111

111

00:07:46,250  -->  00:07:49,010
or I can even say this variable is burrito.
112

112

00:07:49,010  -->  00:07:53,580
So it's a little bit redundant, but that's kind of how you have to do it,
113

113

00:07:53,580  -->  00:07:56,570
because if I wanted to type in burrito, I just couldn't do it,
114

114

00:07:56,570  -->  00:08:00,620
so I'd have to use this special escape command to do that,
115

115

00:08:00,620  -->  00:08:03,850
and then the computer just knows how to then read the next variable.
116

116

00:08:03,850  -->  00:08:06,250
Ok, so that's the basics of strings.
117

117

00:08:06,250  -->  00:08:11,390
A string is human text, it's text that 
you want to tell the computer not to read.
118

118

00:08:11,390  -->  00:08:13,580
Anytime you print something on the screen, anytime you
119

119

00:08:13,580  -->  00:08:18,100
go to a website that shows text, headline on a newspaper article,
120

120

00:08:18,100  -->  00:08:23,240
or an online newspaper article, it's going to be from a string.
121

121

00:08:23,240  -->  00:08:28,620
It's somewhere in that code, if you pull it, you look at it, and say print headline,
122

122

00:08:28,620  -->  00:08:33,750
or something like that, and that headline would 
be parentheses whatever the actual headline is.
123

123

00:08:33,750  -->  00:08:37,020
If we didn't have those, then the computer would get confused,
124

124

00:08:37,020  -->  00:08:39,300
think it's code, and just return an error.
125

125

00:08:39,300  -->  00:08:43,770
Ok, so that is strings, next lecture we're moving on to the next concept.
