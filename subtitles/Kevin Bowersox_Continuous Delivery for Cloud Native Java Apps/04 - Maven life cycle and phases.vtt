WEBVTT
1
00:00:00.005 --> 00:00:02.000
- [Tutor] When Maven runs a build,

2
00:00:02.000 --> 00:00:06.004
it executes a sequence of phases known as a lifecycle.

3
00:00:06.004 --> 00:00:09.000
Maven has three built-in life cycles:

4
00:00:09.000 --> 00:00:12.005
clean, site, and the default life cycle.

5
00:00:12.005 --> 00:00:15.001
The default life cycle has the most phases.

6
00:00:15.001 --> 00:00:18.006
And it's normally what we use to build a project.

7
00:00:18.006 --> 00:00:22.000
If we want to see the phases in the default life cycle,

8
00:00:22.000 --> 00:00:25.007
we can describe them using the Help plugin.

9
00:00:25.007 --> 00:00:28.005
All we need to do is pass the name

10
00:00:28.005 --> 00:00:32.005
of the command to the plugin as an argument.

11
00:00:32.005 --> 00:00:35.000
So I'm going to use the deploy phase here.

12
00:00:35.000 --> 00:00:38.000
It's the last phase in the default lifecycle.

13
00:00:38.000 --> 00:00:40.000
And that's going to allow us to see

14
00:00:40.000 --> 00:00:43.009
all the phases that proceed it, there they are.

15
00:00:43.009 --> 00:00:48.002
In total, there are 23 phases in the default life cycle

16
00:00:48.002 --> 00:00:53.001
that we can execute using Maven or the Maven Wrapper.

17
00:00:53.001 --> 00:00:55.007
You'll notice that some of these phases

18
00:00:55.007 --> 00:01:00.000
like compile have a plugin goal next to them.

19
00:01:00.000 --> 00:01:02.003
This is known as a binding.

20
00:01:02.003 --> 00:01:03.001
Basically,

21
00:01:03.001 --> 00:01:07.003
it's a mapping between a phase and a goal on a plugin.

22
00:01:07.003 --> 00:01:09.004
If a goal is bound to a phase,

23
00:01:09.004 --> 00:01:12.000
it will be executed when we reach that phase

24
00:01:12.000 --> 00:01:13.009
in the life cycle.

25
00:01:13.009 --> 00:01:15.003
Here's how it works.

26
00:01:15.003 --> 00:01:19.000
Let's imagine that we executed the package phase.

27
00:01:19.000 --> 00:01:21.001
That's not where Maven starts.

28
00:01:21.001 --> 00:01:24.002
First, it's going to begin with the validate phase

29
00:01:24.002 --> 00:01:27.003
and look to see if it has a plugin binding.

30
00:01:27.003 --> 00:01:28.002
It doesn't.

31
00:01:28.002 --> 00:01:30.007
So it's going to proceed then to the next phase

32
00:01:30.007 --> 00:01:32.009
and look for a binding as well.

33
00:01:32.009 --> 00:01:35.001
It's going to continue this until it finds

34
00:01:35.001 --> 00:01:37.002
a face that does have a binding.

35
00:01:37.002 --> 00:01:39.009
So here we see that the resources goal

36
00:01:39.009 --> 00:01:43.008
is bound to the process-resources phase.

37
00:01:43.008 --> 00:01:47.000
That will cause the resources goal to execute.

38
00:01:47.000 --> 00:01:50.002
And then the same thing will happen for the compile phase.

39
00:01:50.002 --> 00:01:52.005
It will execute the compile goal

40
00:01:52.005 --> 00:01:55.004
on the Maven Compiler plugin.

41
00:01:55.004 --> 00:01:58.004
This process is going to continue until we reach

42
00:01:58.004 --> 00:02:02.000
and execute our package phase within the life cycle,

43
00:02:02.000 --> 00:02:06.001
then Maven will stop.

44
00:02:06.001 --> 00:02:07.003
Let's just go ahead

45
00:02:07.003 --> 00:02:10.000
and see this in action by executing

46
00:02:10.000 --> 00:02:14.008
the package phase with the Maven Wrapper.

47
00:02:14.008 --> 00:02:16.009
There we can see a bit of output.

48
00:02:16.009 --> 00:02:18.003
And just like we talked about,

49
00:02:18.003 --> 00:02:20.008
you can see the different goals that were bound

50
00:02:20.008 --> 00:02:23.003
to the different phases being executed.

51
00:02:23.003 --> 00:02:25.009
There's resources, there's compile.

52
00:02:25.009 --> 00:02:27.001
And then ultimately,

53
00:02:27.001 --> 00:02:28.009
we wound up running the jar goal

54
00:02:28.009 --> 00:02:33.006
to package our application into an archive.

55
00:02:33.006 --> 00:02:37.005
Now, we're not limited to running one phase at a time.

56
00:02:37.005 --> 00:02:38.004
If we would like,

57
00:02:38.004 --> 00:02:41.007
we can go ahead and run a phase from another life cycle.

58
00:02:41.007 --> 00:02:45.008
So here I'm using the clean phase from the clean life cycle.

59
00:02:45.008 --> 00:02:47.006
And then I'll go ahead once again

60
00:02:47.006 --> 00:02:51.004
and execute the package phase from the default life cycle.

61
00:02:51.004 --> 00:02:54.001
Now, watch what happens as both phases

62
00:02:54.001 --> 00:02:58.005
execute from both life cycles.

63
00:02:58.005 --> 00:03:02.003
Now, you'll notice that another goal was executed.

64
00:03:02.003 --> 00:03:05.005
So there we see the clean goal being executed.

65
00:03:05.005 --> 00:03:09.002
And that's because there was a plugin binding for that goal

66
00:03:09.002 --> 00:03:13.000
within the clean phase of the clean life cycle.

67
00:03:13.000 --> 00:03:16.007
Then we continued to execute all of the plugin goals

68
00:03:16.007 --> 00:03:18.007
that were bound to different phases

69
00:03:18.007 --> 00:03:21.008
within the default life cycle.

70
00:03:21.008 --> 00:03:24.008
There is a really helpful plugin that we can use to see

71
00:03:24.008 --> 00:03:29.001
what goals are bound to what phases within the lifecycle.

72
00:03:29.001 --> 00:03:33.000
The buildplan-maven-plugin shows us exactly that.

73
00:03:33.000 --> 00:03:37.003
So let's go ahead, we'll execute the plugins list goal.

74
00:03:37.003 --> 00:03:41.004
And then we can take a look at the output for our build.

75
00:03:41.004 --> 00:03:45.003
So this makes it much easier to understand the life cycle.

76
00:03:45.003 --> 00:03:49.003
Here you can see the different phases within the lifecycle.

77
00:03:49.003 --> 00:03:52.008
Then it shows you the plugin goal that's bound to it.

78
00:03:52.008 --> 00:03:56.000
And it gives you the name of the plugin.

79
00:03:56.000 --> 00:03:58.003
I highly recommend using this plugin

80
00:03:58.003 --> 00:04:02.005
to help better understand Maven's life cycles.

81
00:04:02.005 --> 00:04:03.009
The life cycle phases

82
00:04:03.009 --> 00:04:06.002
and plugin bindings are very important

83
00:04:06.002 --> 00:04:08.008
because they determine the actions our build

84
00:04:08.008 --> 00:04:12.000
takes to produce an artifact for our project.

