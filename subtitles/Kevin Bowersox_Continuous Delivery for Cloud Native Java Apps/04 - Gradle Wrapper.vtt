WEBVTT
1
00:00:00.005 --> 00:00:02.005
- When executing builds with Gradle,

2
00:00:02.005 --> 00:00:05.002
there are two options to choose from.

3
00:00:05.002 --> 00:00:08.003
One option is to use the Gradle build command,

4
00:00:08.003 --> 00:00:10.002
like we've already seen.

5
00:00:10.002 --> 00:00:12.005
This uses the Gradle distribution

6
00:00:12.005 --> 00:00:17.000
that we installed manually on our workstation.

7
00:00:17.000 --> 00:00:20.006
The other option is to use the Gradle Wrapper.

8
00:00:20.006 --> 00:00:22.003
The Gradle Wrapper is a script

9
00:00:22.003 --> 00:00:25.000
that downloads a specific version of Gradle

10
00:00:25.000 --> 00:00:29.001
which is then used to execute builds and other tasks.

11
00:00:29.001 --> 00:00:31.003
It's a way to package the Gradle software,

12
00:00:31.003 --> 00:00:34.003
right alongside your source code.

13
00:00:34.003 --> 00:00:36.008
You can see the script for the Gradle Wrapper here,

14
00:00:36.008 --> 00:00:39.005
right within the root of our project.

15
00:00:39.005 --> 00:00:41.000
There's also a batch script,

16
00:00:41.000 --> 00:00:43.003
if you're working with windows.

17
00:00:43.003 --> 00:00:46.006
These scripts were placed inside the project by default,

18
00:00:46.006 --> 00:00:50.002
when we created it with the Gradle in it task.

19
00:00:50.002 --> 00:00:54.001
The task also creates the Gradle Wrapper directory

20
00:00:54.001 --> 00:00:56.005
and inside of it we find two files.

21
00:00:56.005 --> 00:00:58.000
One is a properties file,

22
00:00:58.000 --> 00:01:00.002
which specifies the version of Gradle

23
00:01:00.002 --> 00:01:01.006
that we would like to download

24
00:01:01.006 --> 00:01:03.008
and install with the Wrapper.

25
00:01:03.008 --> 00:01:05.003
And the other's a jar file

26
00:01:05.003 --> 00:01:08.006
that actually does the download for us.

27
00:01:08.006 --> 00:01:11.007
It's recommended to include the Wrapper in your projects

28
00:01:11.007 --> 00:01:13.002
because it allows developers

29
00:01:13.002 --> 00:01:17.002
to skip the manual Gradle installation that we performed.

30
00:01:17.002 --> 00:01:20.002
It also ensures the same version of Gradle is used

31
00:01:20.002 --> 00:01:25.003
every time the build is executed for the project.

32
00:01:25.003 --> 00:01:29.001
Let's go ahead and kick off a build with the Gradle Wrapper.

33
00:01:29.001 --> 00:01:29.009
To do that,

34
00:01:29.009 --> 00:01:32.000
we just use the Wrapper script,

35
00:01:32.000 --> 00:01:35.002
and then we pass it a task to execute.

36
00:01:35.002 --> 00:01:38.008
Now, in this case, it's going to be the build task,

37
00:01:38.008 --> 00:01:42.007
but we can pass the Wrapper any tasks that we would perform

38
00:01:42.007 --> 00:01:45.007
using a normal Gradle installation.

39
00:01:45.007 --> 00:01:47.000
So I'm just going to go ahead

40
00:01:47.000 --> 00:01:48.006
and kick off that task

41
00:01:48.006 --> 00:01:50.009
and we can see our build start to execute

42
00:01:50.009 --> 00:01:52.005
and there it's finished.

43
00:01:52.005 --> 00:01:55.007
Now you might be wondering what actually happened.

44
00:01:55.007 --> 00:02:01.004
Well let's take a closer look.

45
00:02:01.004 --> 00:02:04.001
Inside of our sub-project app.

46
00:02:04.001 --> 00:02:07.006
You'll notice a new directory named build.

47
00:02:07.006 --> 00:02:10.007
This directory contains all of the artifacts

48
00:02:10.007 --> 00:02:16.007
that were produced when we executed our Gradle build.

49
00:02:16.007 --> 00:02:19.002
Let's take a look inside this directory

50
00:02:19.002 --> 00:02:21.002
to see what was produced.

51
00:02:21.002 --> 00:02:22.000
Now here,

52
00:02:22.000 --> 00:02:25.005
I'm just going to spotlight a few important things.

53
00:02:25.005 --> 00:02:27.009
First, you'll notice that the classes

54
00:02:27.009 --> 00:02:29.008
for our Application source code

55
00:02:29.008 --> 00:02:33.008
were placed within the app build classes directory.

56
00:02:33.008 --> 00:02:36.003
So here's the main class for the app.

57
00:02:36.003 --> 00:02:39.006
And then you'll also notice that the tests were compiled

58
00:02:39.006 --> 00:02:43.001
that's because they were ran as part of the build.

59
00:02:43.001 --> 00:02:46.005
And if we navigate down within the directory,

60
00:02:46.005 --> 00:02:49.007
you'll actually see that a report was generated

61
00:02:49.007 --> 00:02:52.007
about our testing from the build.

62
00:02:52.007 --> 00:02:54.009
So here you can see that report.

63
00:02:54.009 --> 00:02:57.008
It's within the index study HTML file.

64
00:02:57.008 --> 00:03:01.002
I'm going to go ahead and that up on Firefox.

65
00:03:01.002 --> 00:03:03.004
So here you see the test report

66
00:03:03.004 --> 00:03:05.008
that was generated by Gradle.

67
00:03:05.008 --> 00:03:07.009
Now, right now we only have one test,

68
00:03:07.009 --> 00:03:09.008
but hey, at least it passed.

69
00:03:09.008 --> 00:03:11.008
We'd like to see more of those.

70
00:03:11.008 --> 00:03:13.002
But the main point here

71
00:03:13.002 --> 00:03:15.005
is that Gradle is giving us feedback

72
00:03:15.005 --> 00:03:18.008
about the quality of our software.

73
00:03:18.008 --> 00:03:21.002
Okay, let's return to our build directory.

74
00:03:21.002 --> 00:03:24.005
And I want to highlight one more very important thing.

75
00:03:24.005 --> 00:03:29.004
You'll notice the app.jar file within the libs directory.

76
00:03:29.004 --> 00:03:33.002
This is the main artifact produced from our build.

77
00:03:33.002 --> 00:03:37.000
It contains our packaged application.

78
00:03:37.000 --> 00:03:41.008
So this is really the whole point of conducting the build.

79
00:03:41.008 --> 00:03:44.006
By default, the jar file is not executable.

80
00:03:44.006 --> 00:03:46.005
We'll handle that part later.

81
00:03:46.005 --> 00:03:48.009
But for now we can launch the application

82
00:03:48.009 --> 00:03:50.005
using the Gradle Wrapper.

83
00:03:50.005 --> 00:03:53.002
Let me show you how,

84
00:03:53.002 --> 00:03:56.000
once again we'll use the Gradle Wrapper script

85
00:03:56.000 --> 00:03:58.008
and we're just going to pass it another test this time

86
00:03:58.008 --> 00:04:00.005
named run.

87
00:04:00.005 --> 00:04:03.001
I'll go ahead and execute that task.

88
00:04:03.001 --> 00:04:06.001
And there you can see our application was launched

89
00:04:06.001 --> 00:04:09.008
and it printed a bit of console output to our terminal.

90
00:04:09.008 --> 00:04:11.007
Okay, so that wraps things up.

91
00:04:11.007 --> 00:04:15.000
We saw another way to execute Gradle builds and tasks.

92
00:04:15.000 --> 00:04:17.001
And that was the Gradle Wrapper.

93
00:04:17.001 --> 00:04:18.008
Because it's the preferred approach,

94
00:04:18.008 --> 00:04:22.000
We're going to be using it going forward in the course.

