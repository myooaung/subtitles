WEBVTT
1
00:00:00.005 --> 00:00:02.009
- [Instructor] After the continuous integration pipeline

2
00:00:02.009 --> 00:00:04.006
creates a new container image,

3
00:00:04.006 --> 00:00:06.009
we'll need to trigger our CD pipeline

4
00:00:06.009 --> 00:00:09.006
so that it can update our Kubernetes manifest

5
00:00:09.006 --> 00:00:11.009
with the new container image.

6
00:00:11.009 --> 00:00:14.000
To do this, we'll add another stage

7
00:00:14.000 --> 00:00:16.002
at the end of our CI pipeline.

8
00:00:16.002 --> 00:00:18.008
So I'm going to go ahead and open the Jenkinsfile

9
00:00:18.008 --> 00:00:21.007
for our room service.

10
00:00:21.007 --> 00:00:23.003
At the end of this pipeline,

11
00:00:23.003 --> 00:00:25.004
we're going to add another stage

12
00:00:25.004 --> 00:00:27.004
that will perform the trigger.

13
00:00:27.004 --> 00:00:31.000
So I'll add the stage and then I'll update its name

14
00:00:31.000 --> 00:00:34.004
to trigger CD pipeline.

15
00:00:34.004 --> 00:00:35.007
Inside of the stage,

16
00:00:35.007 --> 00:00:39.000
we'll go ahead and add a steps block.

17
00:00:39.000 --> 00:00:40.003
Inside of this block,

18
00:00:40.003 --> 00:00:42.005
we'll use the build step plugin

19
00:00:42.005 --> 00:00:46.000
to execute our deployment pipeline.

20
00:00:46.000 --> 00:00:48.002
The plugin takes two parameters;

21
00:00:48.002 --> 00:00:50.004
first is the name of the job,

22
00:00:50.004 --> 00:00:52.003
and then second are the parameters

23
00:00:52.003 --> 00:00:54.003
that we'd like to pass to it.

24
00:00:54.003 --> 00:00:59.007
You'll notice the parameters are passed as an array.

25
00:00:59.007 --> 00:01:02.001
The easiest way to find the name of the job

26
00:01:02.001 --> 00:01:06.001
you'd like to execute is to just go into Jenkins itself.

27
00:01:06.001 --> 00:01:10.001
So here on the page for our deployment pipeline,

28
00:01:10.001 --> 00:01:13.003
you can find the name of the job right here.

29
00:01:13.003 --> 00:01:15.005
So I'm going to go ahead and copy that,

30
00:01:15.005 --> 00:01:17.008
and then I'll return back to Eclipse,

31
00:01:17.008 --> 00:01:19.008
here I'll add a forward slash

32
00:01:19.008 --> 00:01:22.008
and then paste the name of our job.

33
00:01:22.008 --> 00:01:26.000
Now let's work on adding the parameters.

34
00:01:26.000 --> 00:01:28.008
There's a trick we can use to add those too.

35
00:01:28.008 --> 00:01:31.008
If we navigate over to our deployment pipeline,

36
00:01:31.008 --> 00:01:35.006
let's copy the parameters that it accepts.

37
00:01:35.006 --> 00:01:39.009
Then we can go back to the Jenkinsfile for our room service

38
00:01:39.009 --> 00:01:41.008
and paste in those parameters.

39
00:01:41.008 --> 00:01:43.007
The syntax is very similar

40
00:01:43.007 --> 00:01:47.005
for how you pass and accept a parameter.

41
00:01:47.005 --> 00:01:50.000
I just need to do a little bit of formatting

42
00:01:50.000 --> 00:01:57.003
now that we've pasted those.

43
00:01:57.003 --> 00:02:01.001
Okay, so now we have the parameters we're going to provide,

44
00:02:01.001 --> 00:02:03.009
but we need to add a value property.

45
00:02:03.009 --> 00:02:06.008
So here I'll go ahead and add that property,

46
00:02:06.008 --> 00:02:08.003
and then for the first property

47
00:02:08.003 --> 00:02:09.009
we'll add a placeholder

48
00:02:09.009 --> 00:02:13.003
to our GitHub org environment variable.

49
00:02:13.003 --> 00:02:16.006
Now let's go ahead and we'll copy this syntax

50
00:02:16.006 --> 00:02:19.008
and we'll paste it in for each of the other parameters.

51
00:02:19.008 --> 00:02:23.000
And then I'm going to go ahead and adjust the placeholders.

52
00:02:23.000 --> 00:02:24.002
For the image name,

53
00:02:24.002 --> 00:02:27.005
we can use the image name environment variable,

54
00:02:27.005 --> 00:02:28.009
and then for the version

55
00:02:28.009 --> 00:02:31.007
we're going to use the build number.

56
00:02:31.007 --> 00:02:35.004
So that's everything we need within our CI pipeline

57
00:02:35.004 --> 00:02:38.000
to trigger our deployment pipeline.

58
00:02:38.000 --> 00:02:41.001
Now we have this and the Dockerfile in place

59
00:02:41.001 --> 00:02:42.007
for our room service,

60
00:02:42.007 --> 00:02:45.006
but we need to add that to the other services

61
00:02:45.006 --> 00:02:47.009
because we haven't already.

62
00:02:47.009 --> 00:02:51.001
Now, because we've made these pipelines in Dockerfiles

63
00:02:51.001 --> 00:02:53.004
so generic and parameterized,

64
00:02:53.004 --> 00:02:56.009
we can just copy and paste them into the other projects.

65
00:02:56.009 --> 00:02:58.008
So let's go ahead and we can do that

66
00:02:58.008 --> 00:03:01.003
right inside of Eclipse.

67
00:03:01.003 --> 00:03:04.009
I'll just select the Dockerfile and the Jenkinsfile,

68
00:03:04.009 --> 00:03:06.006
and then we'll copy those,

69
00:03:06.006 --> 00:03:09.000
and then I can go into the other projects

70
00:03:09.000 --> 00:03:11.003
and just paste them.

71
00:03:11.003 --> 00:03:14.003
Okay, there we have them for the web app,

72
00:03:14.003 --> 00:03:18.001
let's now add them to the guest service,

73
00:03:18.001 --> 00:03:21.009
and then finally we'll add them into the booking service.

74
00:03:21.009 --> 00:03:26.002
Okay, so now these files are in the projects locally.

75
00:03:26.002 --> 00:03:30.004
We need to push these over to the repositories in GitHub.

76
00:03:30.004 --> 00:03:32.008
So let's head over to the terminal

77
00:03:32.008 --> 00:03:35.007
and here I'm going to cheat just a little bit.

78
00:03:35.007 --> 00:03:38.003
You'll notice that within the exercise files,

79
00:03:38.003 --> 00:03:41.001
there's the update repost script.

80
00:03:41.001 --> 00:03:45.001
This script is going to navigate into each project,

81
00:03:45.001 --> 00:03:46.009
stage the changes, commit them

82
00:03:46.009 --> 00:03:48.008
and then push them over to GitHub.

83
00:03:48.008 --> 00:03:52.005
It's a quick way to commit all the changes to our projects.

84
00:03:52.005 --> 00:03:53.009
Now you can use this,

85
00:03:53.009 --> 00:03:56.001
but make sure you have a little bit of horsepower

86
00:03:56.001 --> 00:03:57.001
on your machine

87
00:03:57.001 --> 00:04:02.000
because it's going to trigger a lot of builds very rapidly.

88
00:04:02.000 --> 00:04:02.008
Let's go ahead,

89
00:04:02.008 --> 00:04:05.008
we'll run the script and that's going to start pushing

90
00:04:05.008 --> 00:04:07.008
our changes over to GitHub.

91
00:04:07.008 --> 00:04:10.005
I'm going to head over to Jenkins at this point,

92
00:04:10.005 --> 00:04:15.003
and we can watch for the new pipelines to get picked up.

93
00:04:15.003 --> 00:04:17.006
Okay, there, we can see some coming in.

94
00:04:17.006 --> 00:04:18.004
Let's go ahead

95
00:04:18.004 --> 00:04:22.000
and we'll refresh our GitHub organization project,

96
00:04:22.000 --> 00:04:26.000
and there we can see the pipelines have been picked up.

97
00:04:26.000 --> 00:04:28.007
And if we navigate to the deploy pipeline,

98
00:04:28.007 --> 00:04:32.003
we can watch as they trigger it.

99
00:04:32.003 --> 00:04:35.000
There you can see the continuous integration pipelines

100
00:04:35.000 --> 00:04:38.000
running for several of the microservices.

101
00:04:38.000 --> 00:04:43.000
Let's head into our main folder and here we'll start to see

102
00:04:43.000 --> 00:04:46.001
the CD pipeline get triggered.

103
00:04:46.001 --> 00:04:53.001
All right, there was the first successful execution.

104
00:04:53.001 --> 00:04:53.009
Excellent.

105
00:04:53.009 --> 00:04:55.006
It looks like each of our microservices

106
00:04:55.006 --> 00:04:58.005
was built into a container image,

107
00:04:58.005 --> 00:05:01.007
and then we were able to execute the deployment pipeline

108
00:05:01.007 --> 00:05:03.002
for them.

109
00:05:03.002 --> 00:05:07.000
To verify that, let's head over to our GitHub organization.

110
00:05:07.000 --> 00:05:09.000
Inside of the packages tab,

111
00:05:09.000 --> 00:05:10.009
we can see the different containers

112
00:05:10.009 --> 00:05:13.006
that were placed in the registry.

113
00:05:13.006 --> 00:05:18.001
Now let's go back and we can take a look at the deploy repo.

114
00:05:18.001 --> 00:05:19.006
Inside of the deploy repo

115
00:05:19.006 --> 00:05:22.005
we'll navigate into the base directory,

116
00:05:22.005 --> 00:05:26.001
and here we can take a look at the customization.

117
00:05:26.001 --> 00:05:28.004
You'll notice that the customization

118
00:05:28.004 --> 00:05:31.007
includes the updated images.

119
00:05:31.007 --> 00:05:34.001
Now that our CD pipeline is stood up

120
00:05:34.001 --> 00:05:36.006
and our resource configurations are updated,

121
00:05:36.006 --> 00:05:41.000
we're now ready to automate deployment of the application.

