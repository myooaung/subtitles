WEBVTT
1
00:00:00.005 --> 00:00:02.004
- [Instructor] One of the most popular build tools

2
00:00:02.004 --> 00:00:04.006
used with Java is Gradle.

3
00:00:04.006 --> 00:00:06.008
I find the best way to get started with Gradle

4
00:00:06.008 --> 00:00:08.004
is to just dive right in.

5
00:00:08.004 --> 00:00:10.008
So let's start by installing the software

6
00:00:10.008 --> 00:00:13.007
and setting up a simple project.

7
00:00:13.007 --> 00:00:15.000
To begin our installation,

8
00:00:15.000 --> 00:00:17.007
we'll start on the Gradle homepage and just click on

9
00:00:17.007 --> 00:00:20.000
the install Gradle button.

10
00:00:20.000 --> 00:00:22.009
Here we'll find the instructions to install Gradle

11
00:00:22.009 --> 00:00:25.004
on several different operating systems.

12
00:00:25.004 --> 00:00:27.008
If you are installing Gradle on Windows,

13
00:00:27.008 --> 00:00:30.002
you would select the link to install manually

14
00:00:30.002 --> 00:00:32.006
and then follow those instructions.

15
00:00:32.006 --> 00:00:36.002
But since our lab is using Linux, we can click on the option

16
00:00:36.002 --> 00:00:39.006
to install with a package manager.

17
00:00:39.006 --> 00:00:41.009
You'll notice that within the instructions,

18
00:00:41.009 --> 00:00:46.000
it recommends installing Gradle using SDKMAN!.

19
00:00:46.000 --> 00:00:50.000
So let's navigate over to the SDKMAN! homepage,

20
00:00:50.000 --> 00:00:53.000
and we can click on the install button in the menu

21
00:00:53.000 --> 00:00:55.006
in order to get started.

22
00:00:55.006 --> 00:00:58.008
Here we'll find a script that will install SDKMAN!

23
00:00:58.008 --> 00:01:00.008
on our Linux workstation.

24
00:01:00.008 --> 00:01:02.009
Let's just go ahead and copy that,

25
00:01:02.009 --> 00:01:05.004
and then we'll navigate over to a terminal where

26
00:01:05.004 --> 00:01:09.002
I'll paste the script and then just hit enter to execute it.

27
00:01:09.002 --> 00:01:12.007
Okay, it looks like SDKMAN! has installed.

28
00:01:12.007 --> 00:01:15.003
In order to use it in our current terminal,

29
00:01:15.003 --> 00:01:17.009
we'll need to execute this command.

30
00:01:17.009 --> 00:01:20.004
So let's go ahead and copy that,

31
00:01:20.004 --> 00:01:23.002
then I'll clear my terminal, paste the script,

32
00:01:23.002 --> 00:01:24.005
and execute it.

33
00:01:24.005 --> 00:01:27.005
Okay, now we should have SDKMAN! available

34
00:01:27.005 --> 00:01:30.006
within this terminal.

35
00:01:30.006 --> 00:01:34.000
If we return to the Gradle installation documentation,

36
00:01:34.000 --> 00:01:37.003
you'll see our next step is to use SDKMAN!

37
00:01:37.003 --> 00:01:39.009
to install Gradle 7.2.

38
00:01:39.009 --> 00:01:42.009
So I'm going to copy this command, and then I'll return

39
00:01:42.009 --> 00:01:47.006
to the terminal and paste it where I can execute it.

40
00:01:47.006 --> 00:01:52.003
It looks like Gradle is starting to install.

41
00:01:52.003 --> 00:01:55.001
Okay, it looks like the Gradle installation finished.

42
00:01:55.001 --> 00:01:57.004
Let's just go ahead and we can verify that

43
00:01:57.004 --> 00:02:01.008
by running the gradle dash dash version command.

44
00:02:01.008 --> 00:02:04.004
Okay, we can see that Gradle 7.2

45
00:02:04.004 --> 00:02:06.006
is installed on our workstation.

46
00:02:06.006 --> 00:02:10.002
Now let's move on to creating a simple project.

47
00:02:10.002 --> 00:02:12.003
To do that, we're going to work within

48
00:02:12.003 --> 00:02:14.005
our exercise files directory.

49
00:02:14.005 --> 00:02:18.000
That's where we'll create our new project.

50
00:02:18.000 --> 00:02:21.006
The project is going to be named Sandbox, so I'm going to

51
00:02:21.006 --> 00:02:24.005
go ahead and create a directory named Sandbox

52
00:02:24.005 --> 00:02:27.008
inside the exercise files directory.

53
00:02:27.008 --> 00:02:31.003
Then we can just navigate into the Sandbox directory,

54
00:02:31.003 --> 00:02:33.004
and here's where we'll start to use Gradle

55
00:02:33.004 --> 00:02:35.006
to build the new project.

56
00:02:35.006 --> 00:02:39.003
To help with that, we can use the gradle init command.

57
00:02:39.003 --> 00:02:42.002
It's going to walk us through an interactive menu

58
00:02:42.002 --> 00:02:44.007
where we can set up the different configuration

59
00:02:44.007 --> 00:02:46.001
for our project.

60
00:02:46.001 --> 00:02:48.003
Let's get started with that.

61
00:02:48.003 --> 00:02:50.008
The first thing we'll need to specify is the type

62
00:02:50.008 --> 00:02:53.005
of Gradle project that we want to create.

63
00:02:53.005 --> 00:02:56.009
And this is going to determine the directory structure

64
00:02:56.009 --> 00:03:00.009
that Gradle uses when it initializes our project.

65
00:03:00.009 --> 00:03:03.006
Now we're only interested in an application,

66
00:03:03.006 --> 00:03:06.004
so I'm going to select the second option.

67
00:03:06.004 --> 00:03:08.008
Then we'll need to specify what language

68
00:03:08.008 --> 00:03:10.008
our project is going to be using.

69
00:03:10.008 --> 00:03:12.004
Since this is a Java course,

70
00:03:12.004 --> 00:03:15.006
I'm going to select option three for Java.

71
00:03:15.006 --> 00:03:18.008
Then we'll need to determine whether or not we would like

72
00:03:18.008 --> 00:03:22.004
sub projects within our Gradle build.

73
00:03:22.004 --> 00:03:24.009
We're only going to have one application

74
00:03:24.009 --> 00:03:29.001
within this Gradle build, so I'll select the first option.

75
00:03:29.001 --> 00:03:32.006
Then it's going to ask us the DSL that we'd like to use

76
00:03:32.006 --> 00:03:34.004
for our build scripts.

77
00:03:34.004 --> 00:03:38.000
A DSL is a domain specific language which, in this case,

78
00:03:38.000 --> 00:03:42.003
is a small language built specifically for using Gradle.

79
00:03:42.003 --> 00:03:46.001
Gradle has a DSL for both Groovy and Kotlin.

80
00:03:46.001 --> 00:03:49.006
Let's go ahead and we'll use the Groovy DSL for our project,

81
00:03:49.006 --> 00:03:52.009
so I'll select option one.

82
00:03:52.009 --> 00:03:55.001
Next, it's going to ask us to identify

83
00:03:55.001 --> 00:03:56.008
our testing framework.

84
00:03:56.008 --> 00:04:00.007
I'm going to use JUnit Jupiter, which is option four.

85
00:04:00.007 --> 00:04:03.009
Then it will need the name of our project.

86
00:04:03.009 --> 00:04:05.007
We're just going to call this Sandbox,

87
00:04:05.007 --> 00:04:09.007
so I'm going to go with the default option by hitting enter.

88
00:04:09.007 --> 00:04:12.005
Finally, it's going to ask us the package name

89
00:04:12.005 --> 00:04:15.000
where our source code will be placed.

90
00:04:15.000 --> 00:04:20.003
For that, I'm going to use com.linkedin.javacd.

91
00:04:20.003 --> 00:04:22.007
Once I've entered that value, I'll hit enter,

92
00:04:22.007 --> 00:04:25.004
and Gradle builds out our new project.

93
00:04:25.004 --> 00:04:27.007
Let's take a look.

94
00:04:27.007 --> 00:04:31.006
So if we look inside the Sandbox directory,

95
00:04:31.006 --> 00:04:34.007
we see some files related to our Gradle build.

96
00:04:34.007 --> 00:04:36.005
We'll get into those later.

97
00:04:36.005 --> 00:04:39.007
For now, let's run our first Gradle build.

98
00:04:39.007 --> 00:04:43.005
Just type Gradle, and then build, and hit enter,

99
00:04:43.005 --> 00:04:45.009
and you'll see that Gradle will begin to compile

100
00:04:45.009 --> 00:04:48.009
our source code and build our project.

101
00:04:48.009 --> 00:04:52.001
There it looks like it completed successfully.

102
00:04:52.001 --> 00:04:54.000
So now we're up and running with Gradle,

103
00:04:54.000 --> 00:04:56.004
and we just completed our first build.

104
00:04:56.004 --> 00:04:59.007
Let's dive into the details of how that build works

105
00:04:59.007 --> 00:05:02.000
over the upcoming lessons.

