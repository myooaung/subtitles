WEBVTT
1
00:00:00.005 --> 00:00:02.005
- [Instructor] Now that we've explored the structure

2
00:00:02.005 --> 00:00:05.004
of a Gradle project and the Gradle wrapper,

3
00:00:05.004 --> 00:00:08.001
let's focus on the build script.

4
00:00:08.001 --> 00:00:09.002
To help us with that,

5
00:00:09.002 --> 00:00:12.002
I'm going to import our project into Eclipse.

6
00:00:12.002 --> 00:00:15.002
So I'll go to file, then import.

7
00:00:15.002 --> 00:00:16.009
And then within the Gradle folder,

8
00:00:16.009 --> 00:00:21.001
I'll select Existing Gradle Project and hit next.

9
00:00:21.001 --> 00:00:24.003
Then I'll need to navigate to our app sub project,

10
00:00:24.003 --> 00:00:27.004
which is located within the sandbox project

11
00:00:27.004 --> 00:00:29.005
inside of the exercise files.

12
00:00:29.005 --> 00:00:32.003
So once you're there, go ahead and hit open,

13
00:00:32.003 --> 00:00:38.000
and then click on finish to import the project into Eclipse.

14
00:00:38.000 --> 00:00:40.005
Inside the structure of our sub project,

15
00:00:40.005 --> 00:00:43.001
we'll find the build.gradle file.

16
00:00:43.001 --> 00:00:45.009
Let's go ahead and open that so we can see how

17
00:00:45.009 --> 00:00:50.005
the Gradle DSL helps us establish our build.

18
00:00:50.005 --> 00:00:53.001
A Gradle build script defines a set of tasks

19
00:00:53.001 --> 00:00:56.008
that need to be run as part of our build for a project.

20
00:00:56.008 --> 00:00:59.007
Most tasks come from plugins that we include within the

21
00:00:59.007 --> 00:01:04.004
build script, like the application plugin that you see here.

22
00:01:04.004 --> 00:01:08.006
By default, this plugin adds the Java plugin into the build,

23
00:01:08.006 --> 00:01:10.008
which provides tasks that help with things

24
00:01:10.008 --> 00:01:13.006
like compilation, testing, and packaging

25
00:01:13.006 --> 00:01:15.008
of our Java application.

26
00:01:15.008 --> 00:01:18.001
This functionality comes right out of the box

27
00:01:18.001 --> 00:01:20.008
with the plugin, so it's kind of hard to see

28
00:01:20.008 --> 00:01:24.006
all of the tasks just by looking at our build script.

29
00:01:24.006 --> 00:01:27.005
Let's head over to the terminal to help us with that.

30
00:01:27.005 --> 00:01:31.008
Here, I'll use the Gradle wrapper and the task task

31
00:01:31.008 --> 00:01:37.003
to see all of the tasks that are available within our build.

32
00:01:37.003 --> 00:01:39.007
Okay, so you can see it's quite the list.

33
00:01:39.007 --> 00:01:42.008
Let's scroll up and check out a few of these.

34
00:01:42.008 --> 00:01:45.008
There's the run task, which we're familiar with.

35
00:01:45.008 --> 00:01:48.007
We've also used the build task some as well.

36
00:01:48.007 --> 00:01:51.008
Now if we scroll down, we'll start to see the tasks

37
00:01:51.008 --> 00:01:54.005
that are provided by the Java plugin.

38
00:01:54.005 --> 00:01:57.005
Here's two that compile our Java source code

39
00:01:57.005 --> 00:02:01.001
and the test for the project.

40
00:02:01.001 --> 00:02:03.006
If we'd like to see every plugin in our build,

41
00:02:03.006 --> 00:02:06.005
we can use a bit of Groovy to access them.

42
00:02:06.005 --> 00:02:09.003
So I'm going to use the project object.

43
00:02:09.003 --> 00:02:12.000
And on it, we'll find the plugins property.

44
00:02:12.000 --> 00:02:14.009
Here, I can iterate through each of them.

45
00:02:14.009 --> 00:02:16.009
And then inside of a closure,

46
00:02:16.009 --> 00:02:20.005
I'll print out each plugin to the console.

47
00:02:20.005 --> 00:02:23.001
Okay, let's go ahead and we'll save that,

48
00:02:23.001 --> 00:02:27.002
and then we'll head back to the terminal where I'll use

49
00:02:27.002 --> 00:02:31.009
the Gradle wrapper in order to kick off our build.

50
00:02:31.009 --> 00:02:34.007
And there you can see it prints all the plugins

51
00:02:34.007 --> 00:02:37.004
that are available to our build.

52
00:02:37.004 --> 00:02:39.003
Let's talk about a few of these.

53
00:02:39.003 --> 00:02:43.007
The base plugin is extended by every other plugin.

54
00:02:43.007 --> 00:02:46.007
There you see the Java plugin we talked about

55
00:02:46.007 --> 00:02:49.006
and the application plugin as well.

56
00:02:49.006 --> 00:02:51.007
These plugins are the core plugins

57
00:02:51.007 --> 00:02:53.008
that are provided by Gradle.

58
00:02:53.008 --> 00:02:57.001
That allows us to access them using a short name.

59
00:02:57.001 --> 00:03:00.002
So instead of using the fully qualified name for the

60
00:03:00.002 --> 00:03:05.000
application plugin, if we look in our Gradle build script,

61
00:03:05.000 --> 00:03:09.006
you'll notice we can use the short name, application.

62
00:03:09.006 --> 00:03:13.001
We can include third-party plugins in our build as well.

63
00:03:13.001 --> 00:03:16.007
To find those, we use the Gradle plugin portal.

64
00:03:16.007 --> 00:03:19.001
All you need to do is type the name of the plugin

65
00:03:19.001 --> 00:03:20.004
that you'd like to find.

66
00:03:20.004 --> 00:03:24.002
In this case, I'm going to look for the taskinfo plugin.

67
00:03:24.002 --> 00:03:26.005
It provides us some additional information

68
00:03:26.005 --> 00:03:29.006
about the tasks within our Gradle project.

69
00:03:29.006 --> 00:03:31.009
So I'll go ahead and search for it,

70
00:03:31.009 --> 00:03:33.009
and there you can see it.

71
00:03:33.009 --> 00:03:37.005
Let's navigate into the information for the plugin,

72
00:03:37.005 --> 00:03:42.006
and here you can see we get the fully qualified plugin ID.

73
00:03:42.006 --> 00:03:45.009
All we need to do is copy this and then take it over

74
00:03:45.009 --> 00:03:47.005
to our build script.

75
00:03:47.005 --> 00:03:48.008
Within the build script,

76
00:03:48.008 --> 00:03:51.008
we'll place it within the plugins closure,

77
00:03:51.008 --> 00:03:54.004
then we'll save our build.gradle file.

78
00:03:54.004 --> 00:03:58.007
And now if we navigate back to the terminal,

79
00:03:58.007 --> 00:04:03.008
we can execute the task task again.

80
00:04:03.008 --> 00:04:06.003
Now you'll notice that three additional tasks

81
00:04:06.003 --> 00:04:08.004
from the plugin have been included

82
00:04:08.004 --> 00:04:11.001
and made available for our build.

83
00:04:11.001 --> 00:04:13.009
When setting up a Gradle build, it's common to add

84
00:04:13.009 --> 00:04:16.006
third-party plugins into our build script.

85
00:04:16.006 --> 00:04:20.000
That way, we can access additional tasks within our build.

