WEBVTT
1
00:00:00.005 --> 00:00:01.007
- [Instructor] Within our pipeline.

2
00:00:01.007 --> 00:00:04.005
We can use environment variables to make our scripts

3
00:00:04.005 --> 00:00:07.005
more flexible and reusable.

4
00:00:07.005 --> 00:00:09.004
Environment variables are declared

5
00:00:09.004 --> 00:00:13.000
inside of an environment block within our pipeline.

6
00:00:13.000 --> 00:00:16.007
Here we can define and assign variables that are accessible

7
00:00:16.007 --> 00:00:19.001
by all the pipeline stages.

8
00:00:19.001 --> 00:00:21.007
So let's start out by creating a variable

9
00:00:21.007 --> 00:00:25.000
that will store our GitHub organization name.

10
00:00:25.000 --> 00:00:26.009
We first declare the variable name,

11
00:00:26.009 --> 00:00:29.003
and then we assign it a value.

12
00:00:29.003 --> 00:00:32.006
I'm going to use single quotes for our first variable.

13
00:00:32.006 --> 00:00:35.009
This is like creating a string literal in Java.

14
00:00:35.009 --> 00:00:38.002
So inside of the single quotes,

15
00:00:38.002 --> 00:00:42.005
I'm just going to type the name of my GitHub organization.

16
00:00:42.005 --> 00:00:44.008
Here you'll want to be careful to use

17
00:00:44.008 --> 00:00:48.004
your GitHub organization name and not mine.

18
00:00:48.004 --> 00:00:52.002
Now let's create another variable that will store the name

19
00:00:52.002 --> 00:00:54.003
of our container registry.

20
00:00:54.003 --> 00:00:56.005
Here I'm going to use double quotes

21
00:00:56.005 --> 00:01:00.000
because that allows us to use string interpolation.

22
00:01:00.000 --> 00:01:02.008
That means we can reference another variable

23
00:01:02.008 --> 00:01:04.009
inside of this string.

24
00:01:04.009 --> 00:01:07.006
To do that we need to create a placeholder.

25
00:01:07.006 --> 00:01:09.007
That's done by typing a dollar sign,

26
00:01:09.007 --> 00:01:10.009
an opening curly brace,

27
00:01:10.009 --> 00:01:13.000
and then a closing curly brace,

28
00:01:13.000 --> 00:01:15.008
and then inside of the curly braces,

29
00:01:15.008 --> 00:01:18.008
we just place the name of another variable

30
00:01:18.008 --> 00:01:22.007
that we would like to include within this string.

31
00:01:22.007 --> 00:01:26.000
This will get evaluated as an expression

32
00:01:26.000 --> 00:01:27.008
and the value for this variable

33
00:01:27.008 --> 00:01:30.007
will be placed inside the string.

34
00:01:30.007 --> 00:01:34.002
Now here we'll also need to include the domain

35
00:01:34.002 --> 00:01:35.009
for our container registry,

36
00:01:35.009 --> 00:01:39.000
which is the GitHub container registry.

37
00:01:39.000 --> 00:01:44.002
It's found at ghcr.io, then we'll place a forward slash,

38
00:01:44.002 --> 00:01:45.006
and then we'll end the string

39
00:01:45.006 --> 00:01:48.009
with a forward slash as well.

40
00:01:48.009 --> 00:01:50.009
Now let's create another variable

41
00:01:50.009 --> 00:01:56.000
that will store the artifactId from our POM.xml file.

42
00:01:56.000 --> 00:01:59.004
Within Jenkins we can use a pipeline utility step

43
00:01:59.004 --> 00:02:02.004
to retrieve that information from the POM.

44
00:02:02.004 --> 00:02:05.007
So here we'll just say, "read Maven POM",

45
00:02:05.007 --> 00:02:10.002
and then we'll invoke the getArtifactId method

46
00:02:10.002 --> 00:02:12.006
on that utility method.

47
00:02:12.006 --> 00:02:16.000
This will retrieve the artifactId from our POM

48
00:02:16.000 --> 00:02:20.001
and store it inside of our artifactId variable.

49
00:02:20.001 --> 00:02:23.005
Now let's go ahead and we can use that in another variable,

50
00:02:23.005 --> 00:02:24.005
the JAR name.

51
00:02:24.005 --> 00:02:26.007
So here we'll store the name of the JAR

52
00:02:26.007 --> 00:02:30.004
that we'd like to create through our Maven build.

53
00:02:30.004 --> 00:02:34.007
First, I'm going to reference the artifactId variable,

54
00:02:34.007 --> 00:02:36.005
using a placeholder.

55
00:02:36.005 --> 00:02:39.005
Then I'm going to specify a dash and then I'm going to use

56
00:02:39.005 --> 00:02:43.007
another placeholder to obtain the build number.

57
00:02:43.007 --> 00:02:46.005
Now the build number is another environment variable

58
00:02:46.005 --> 00:02:51.003
that Jenkins makes available by default for our pipeline.

59
00:02:51.003 --> 00:02:54.004
There's a number of these variables that Jenkins

60
00:02:54.004 --> 00:02:56.004
will make available to us.

61
00:02:56.004 --> 00:02:59.008
You can consult the documentation to see them all.

62
00:02:59.008 --> 00:03:03.002
Here we're using the build number as sort of a version ID

63
00:03:03.002 --> 00:03:05.004
for our JAR.

64
00:03:05.004 --> 00:03:08.000
All right, let's create one final variable,

65
00:03:08.000 --> 00:03:10.001
which will be the image name.

66
00:03:10.001 --> 00:03:13.000
So here I'll use double quotes once again,

67
00:03:13.000 --> 00:03:16.002
then I'm going to include the container registry variable

68
00:03:16.002 --> 00:03:18.002
through interpolation,

69
00:03:18.002 --> 00:03:22.003
and following that will include the artifactId.

70
00:03:22.003 --> 00:03:26.006
And this will help build the name of our container image.

71
00:03:26.006 --> 00:03:29.004
Okay, now that we've declared these variables,

72
00:03:29.004 --> 00:03:31.009
let's go ahead and we can use them

73
00:03:31.009 --> 00:03:34.004
inside of our pipeline stages.

74
00:03:34.004 --> 00:03:37.005
So here where we're building the application,

75
00:03:37.005 --> 00:03:40.002
I'm going to say "Performing Maven Build"

76
00:03:40.002 --> 00:03:44.002
and then I'll include the name of the artifactId.

77
00:03:44.002 --> 00:03:45.006
Now you might be wondering

78
00:03:45.006 --> 00:03:47.008
why we can use single quotes here,

79
00:03:47.008 --> 00:03:51.001
and that's because this is actually part of

80
00:03:51.001 --> 00:03:53.009
the Shell Command that we're executing.

81
00:03:53.009 --> 00:03:57.002
So it will be referenced through that command

82
00:03:57.002 --> 00:04:00.006
as opposed to interpolation.

83
00:04:00.006 --> 00:04:03.004
All right, let's move on to our next stage

84
00:04:03.004 --> 00:04:06.000
where we're building the container image.

85
00:04:06.000 --> 00:04:09.004
And here I'm just going to add the image name

86
00:04:09.004 --> 00:04:11.001
into this step.

87
00:04:11.001 --> 00:04:12.003
And then we'll come down here

88
00:04:12.003 --> 00:04:15.000
to where we're publishing the container image.

89
00:04:15.000 --> 00:04:16.006
And I'm going to switch this up a little bit.

90
00:04:16.006 --> 00:04:20.007
I'll say where we're publishing the container image to,

91
00:04:20.007 --> 00:04:26.005
and here we can use our container registry variable.

92
00:04:26.005 --> 00:04:29.003
Okay, so now we're making use of these variables

93
00:04:29.003 --> 00:04:31.002
inside our pipeline stages,

94
00:04:31.002 --> 00:04:34.000
and this helps us avoid hard coding values

95
00:04:34.000 --> 00:04:37.007
that we might need for each specific microservice.

96
00:04:37.007 --> 00:04:40.004
And that's going to make our pipeline generic enough

97
00:04:40.004 --> 00:04:44.000
that we can reuse it across multiple microservices

98
00:04:44.000 --> 00:04:46.000
in our application.

