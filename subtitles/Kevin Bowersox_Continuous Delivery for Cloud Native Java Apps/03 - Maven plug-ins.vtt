WEBVTT
1
00:00:00.005 --> 00:00:02.005
- [Narrator] In Maven, there are core plugins

2
00:00:02.005 --> 00:00:04.001
like the Compiler plugin,

3
00:00:04.001 --> 00:00:08.000
but there's also a large ecosystem of third party plugins

4
00:00:08.000 --> 00:00:11.001
that we can use in our projects build.

5
00:00:11.001 --> 00:00:13.007
Let's add one more plugin to our build,

6
00:00:13.007 --> 00:00:16.002
this time from a third party.

7
00:00:16.002 --> 00:00:19.006
The plugin we'll add is named Dependency Check.

8
00:00:19.006 --> 00:00:23.002
It scans our application for known security vulnerabilities

9
00:00:23.002 --> 00:00:25.006
when we execute a build.

10
00:00:25.006 --> 00:00:28.004
Here on Maven central, which is the repository

11
00:00:28.004 --> 00:00:30.008
where Maven will fetch the plugin from,

12
00:00:30.008 --> 00:00:34.001
you can see information about the plugin.

13
00:00:34.001 --> 00:00:36.006
Now, when we use a third party plugin,

14
00:00:36.006 --> 00:00:38.009
typically we'll need to do a little bit of research

15
00:00:38.009 --> 00:00:40.006
about how to use it.

16
00:00:40.006 --> 00:00:42.007
So let's navigate to the source code

17
00:00:42.007 --> 00:00:45.004
for the plugin on GitHub.

18
00:00:45.004 --> 00:00:48.008
Inside of the source code, we'll find the read me file.

19
00:00:48.008 --> 00:00:52.002
It links to the documentation for the plugin.

20
00:00:52.002 --> 00:00:55.002
Let's head over to this GitHub page.

21
00:00:55.002 --> 00:00:57.004
On the page, we see some examples

22
00:00:57.004 --> 00:01:01.001
of how we can use the plugin within our project.

23
00:01:01.001 --> 00:01:04.002
This first example performs a security analysis

24
00:01:04.002 --> 00:01:06.003
as part of our build.

25
00:01:06.003 --> 00:01:07.006
If we scroll down,

26
00:01:07.006 --> 00:01:11.004
you'll notice that the plugin can also fail our build

27
00:01:11.004 --> 00:01:14.009
if it finds a vulnerability that's severe enough.

28
00:01:14.009 --> 00:01:17.009
Let's go ahead and we'll copy this configuration

29
00:01:17.009 --> 00:01:21.005
so that we can include it within our Maven project.

30
00:01:21.005 --> 00:01:23.003
Once I've copied the XML,

31
00:01:23.003 --> 00:01:24.009
I'm going to return to Eclipse

32
00:01:24.009 --> 00:01:27.002
and then inside of the plugins tag,

33
00:01:27.002 --> 00:01:31.000
I'm going to go ahead and paste it.

34
00:01:31.000 --> 00:01:35.001
Okay, so now the plugin is part of our Maven project.

35
00:01:35.001 --> 00:01:36.008
Let's head over to the terminal

36
00:01:36.008 --> 00:01:40.001
where we can learn more about the plugin.

37
00:01:40.001 --> 00:01:43.004
To do that, we're going to use another Maven plugin,

38
00:01:43.004 --> 00:01:45.001
the Help plugin.

39
00:01:45.001 --> 00:01:48.003
On the Help plugin is the describe goal.

40
00:01:48.003 --> 00:01:50.007
It can tell us more about the different plugins

41
00:01:50.007 --> 00:01:53.009
that are included within our Maven project.

42
00:01:53.009 --> 00:01:57.001
All we need to do is pass it the plugin flag

43
00:01:57.001 --> 00:01:59.009
and then provide the name of our plugin.

44
00:01:59.009 --> 00:02:04.001
So first I'll write the group ID or .owasp

45
00:02:04.001 --> 00:02:07.006
and then I'll need to provide the name of the plugin,

46
00:02:07.006 --> 00:02:11.007
dependency-check-maven.

47
00:02:11.007 --> 00:02:15.008
All right, let's go ahead and we'll execute this command

48
00:02:15.008 --> 00:02:17.007
and there we can see that information

49
00:02:17.007 --> 00:02:21.004
about the Dependency Check plugin has been provided.

50
00:02:21.004 --> 00:02:22.002
You'll notice,

51
00:02:22.002 --> 00:02:25.005
information about the plugins goals has been provided.

52
00:02:25.005 --> 00:02:28.006
A goal is like an action the plugin can perform.

53
00:02:28.006 --> 00:02:31.006
It's very similar to a task in Gradle.

54
00:02:31.006 --> 00:02:35.007
In my mind, I think of it like a method on a class.

55
00:02:35.007 --> 00:02:39.000
When we run a Maven build, it's executing a set of goals

56
00:02:39.000 --> 00:02:42.006
that are found on the plugins in our project.

57
00:02:42.006 --> 00:02:44.009
On our Dependency Check plugin,

58
00:02:44.009 --> 00:02:46.009
the check goal is what will perform

59
00:02:46.009 --> 00:02:51.001
the actual security analysis of our project.

60
00:02:51.001 --> 00:02:54.008
Let's go ahead and we can execute this goal.

61
00:02:54.008 --> 00:02:56.007
In Maven, there are several ways

62
00:02:56.007 --> 00:02:59.004
the goals on a plugin can be executed.

63
00:02:59.004 --> 00:03:01.007
We're going to execute a single goal

64
00:03:01.007 --> 00:03:05.002
directly on the plugin using the command line.

65
00:03:05.002 --> 00:03:07.005
So we'll use the Maven wrapper,

66
00:03:07.005 --> 00:03:13.005
then we'll provide the name of our plugin

67
00:03:13.005 --> 00:03:15.007
and then we just need to specify the goal

68
00:03:15.007 --> 00:03:17.002
that we want to execute.

69
00:03:17.002 --> 00:03:19.005
All right, let's go ahead and we'll kick off the goal

70
00:03:19.005 --> 00:03:24.001
to start the security scan.

71
00:03:24.001 --> 00:03:26.009
There we can see that the scan has completed.

72
00:03:26.009 --> 00:03:30.002
You'll notice it created a report that we can access.

73
00:03:30.002 --> 00:03:34.000
So I'm going to go ahead and copy the path to the report.

74
00:03:34.000 --> 00:03:36.003
Then I'll open another tab

75
00:03:36.003 --> 00:03:40.001
and here I'll use Firefox to open the report.

76
00:03:40.001 --> 00:03:42.004
If we take a look at the report, you'll see that

77
00:03:42.004 --> 00:03:45.001
no vulnerabilities were found in our project.

78
00:03:45.001 --> 00:03:46.006
That's good.

79
00:03:46.006 --> 00:03:48.005
The goals provided by plugins

80
00:03:48.005 --> 00:03:50.006
are important when working with Maven

81
00:03:50.006 --> 00:03:54.005
because they allow us to add other steps into our build.

82
00:03:54.005 --> 00:03:58.003
We saw how to directly execute a goal on a plugin,

83
00:03:58.003 --> 00:04:01.001
but goals can also be bound to different phases

84
00:04:01.001 --> 00:04:02.008
in our build life cycle.

85
00:04:02.008 --> 00:04:06.000
We'll learn more about this in our next lesson.

