WEBVTT
1
00:00:00.005 --> 00:00:01.005
- [Instructor] The final step

2
00:00:01.005 --> 00:00:03.007
in our continuous integration pipeline,

3
00:00:03.007 --> 00:00:05.005
we'll publish the container image

4
00:00:05.005 --> 00:00:10.000
to the organization's container registry on GitHub.

5
00:00:10.000 --> 00:00:10.009
To get started,

6
00:00:10.009 --> 00:00:13.006
we'll need to add another environment variable

7
00:00:13.006 --> 00:00:15.004
into our pipeline.

8
00:00:15.004 --> 00:00:18.002
This variable is going to store the URL

9
00:00:18.002 --> 00:00:19.009
of our container registry.

10
00:00:19.009 --> 00:00:22.006
So here I'll start with the protocol,

11
00:00:22.006 --> 00:00:25.003
and then I'm going to use a placeholder

12
00:00:25.003 --> 00:00:28.000
to refer to the container registry variable

13
00:00:28.000 --> 00:00:30.009
that we created earlier in the course.

14
00:00:30.009 --> 00:00:33.006
Now I'm going to go ahead and copy this variable

15
00:00:33.006 --> 00:00:38.000
because we'll use it within the final stage of our pipeline

16
00:00:38.000 --> 00:00:42.003
that publishes the container image.

17
00:00:42.003 --> 00:00:45.001
Inside of the steps block for this stage,

18
00:00:45.001 --> 00:00:47.007
I'm going to add a script block.

19
00:00:47.007 --> 00:00:50.007
This will allow us to include some groovy code

20
00:00:50.007 --> 00:00:53.008
that works with the Docker pipeline plugin.

21
00:00:53.008 --> 00:00:56.007
The Docker pipeline plugin allows us to configure

22
00:00:56.007 --> 00:01:00.005
our pipeline to use a custom container registry.

23
00:01:00.005 --> 00:01:02.009
That way, if we have steps in the pipeline

24
00:01:02.009 --> 00:01:04.004
that work with Docker,

25
00:01:04.004 --> 00:01:08.004
they don't use the default registry, which is Docker hub.

26
00:01:08.004 --> 00:01:11.005
To use a custom registry with the plugin,

27
00:01:11.005 --> 00:01:16.002
we wrap our pipeline steps within the withRegistry method.

28
00:01:16.002 --> 00:01:19.003
This method requires two parameters.

29
00:01:19.003 --> 00:01:22.001
The first parameter that we'll need to provide

30
00:01:22.001 --> 00:01:24.009
is the URL of our container registry.

31
00:01:24.009 --> 00:01:28.001
So here, I'm just going to add a placeholder

32
00:01:28.001 --> 00:01:31.005
for our container registry URL variable

33
00:01:31.005 --> 00:01:34.004
that we just created.

34
00:01:34.004 --> 00:01:36.005
The second parameter that's required

35
00:01:36.005 --> 00:01:39.005
are the credentials that we'll use to authenticate

36
00:01:39.005 --> 00:01:41.005
with the container registry.

37
00:01:41.005 --> 00:01:44.002
Now you'll recall that earlier in the course,

38
00:01:44.002 --> 00:01:49.003
we created a Jenkins credential named github-pat,

39
00:01:49.003 --> 00:01:52.001
that stored our personal access token.

40
00:01:52.001 --> 00:01:53.005
We're going to provide that here.

41
00:01:53.005 --> 00:01:56.006
So Docker can authenticate with GitHub.

42
00:01:56.006 --> 00:01:59.002
Then we're going to go ahead and add a block

43
00:01:59.002 --> 00:02:00.009
for this method.

44
00:02:00.009 --> 00:02:04.002
Inside of the block, we're going to add a shell step

45
00:02:04.002 --> 00:02:07.001
that will execute the Docker push command,

46
00:02:07.001 --> 00:02:11.002
which will push our container image to the registry.

47
00:02:11.002 --> 00:02:14.007
Now, here we need to provide an image tag.

48
00:02:14.007 --> 00:02:17.001
So I'm going to add a placeholder

49
00:02:17.001 --> 00:02:20.000
that refers to the image tag variable we created

50
00:02:20.000 --> 00:02:23.007
within the environment block of our pipeline.

51
00:02:23.007 --> 00:02:26.002
Okay, now our pipelines all set up

52
00:02:26.002 --> 00:02:28.003
to publish our container image.

53
00:02:28.003 --> 00:02:30.005
Let's head over to the terminal

54
00:02:30.005 --> 00:02:33.005
and within the room service directory,

55
00:02:33.005 --> 00:02:36.005
I'm going to go ahead and stage these changes,

56
00:02:36.005 --> 00:02:38.005
and then I'm going to commit them.

57
00:02:38.005 --> 00:02:43.008
We'll say that we're publishing our container image.

58
00:02:43.008 --> 00:02:45.006
And then once we've created the commit,

59
00:02:45.006 --> 00:02:47.006
we can push it over to GitHub.

60
00:02:47.006 --> 00:02:51.007
This will trigger Jenkins to start initiating the build.

61
00:02:51.007 --> 00:02:53.008
So let's do that.

62
00:02:53.008 --> 00:02:56.002
And then we'll head over to Jenkins

63
00:02:56.002 --> 00:03:00.003
where we can wait for our build to start executing.

64
00:03:00.003 --> 00:03:02.005
There we see the build, enter the queue,

65
00:03:02.005 --> 00:03:08.007
let's step into the pipeline and watch it execute.

66
00:03:08.007 --> 00:03:11.000
There it's starting to enter the final stage

67
00:03:11.000 --> 00:03:14.000
that pushes the container image.

68
00:03:14.000 --> 00:03:17.003
And it appears that our Jenkins build was successful.

69
00:03:17.003 --> 00:03:19.002
Let's head over to GitHub,

70
00:03:19.002 --> 00:03:21.003
and we can verify that the package

71
00:03:21.003 --> 00:03:23.008
was pushed to our organization.

72
00:03:23.008 --> 00:03:26.006
All we need to do is click on the packages tab

73
00:03:26.006 --> 00:03:28.002
within our organization,

74
00:03:28.002 --> 00:03:31.002
and there we can see the new container image.

75
00:03:31.002 --> 00:03:33.005
Let's go ahead and click on it.

76
00:03:33.005 --> 00:03:35.004
Excellent, there's our container image,

77
00:03:35.004 --> 00:03:39.000
and you can see the image tag that was assigned to it.

78
00:03:39.000 --> 00:03:42.005
So that wraps things up for the continuous integration phase

79
00:03:42.005 --> 00:03:44.005
of our delivery process.

80
00:03:44.005 --> 00:03:46.009
We're going to move on now to the next chapter

81
00:03:46.009 --> 00:03:49.003
where we'll take a look at continuous delivery

82
00:03:49.003 --> 00:03:51.000
and continuous deployment.

