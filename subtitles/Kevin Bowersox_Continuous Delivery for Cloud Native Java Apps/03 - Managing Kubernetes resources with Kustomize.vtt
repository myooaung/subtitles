WEBVTT
1
00:00:00.005 --> 00:00:01.009
- We'll be using Kustomize

2
00:00:01.009 --> 00:00:04.004
to manage the YAML configuration files

3
00:00:04.004 --> 00:00:08.003
for the Kubernetes resources in our application.

4
00:00:08.003 --> 00:00:11.009
Those manifests are located inside the deploy project

5
00:00:11.009 --> 00:00:14.003
within our exercise files.

6
00:00:14.003 --> 00:00:17.006
These files are also stored in the deploy repository

7
00:00:17.006 --> 00:00:19.007
over on GitHub.

8
00:00:19.007 --> 00:00:22.005
Let's open up this directory inside a terminal

9
00:00:22.005 --> 00:00:26.001
to explore Kustomize.

10
00:00:26.001 --> 00:00:27.005
When working with Kubernetes,

11
00:00:27.005 --> 00:00:30.007
there's often slight variations between the resources

12
00:00:30.007 --> 00:00:33.002
we need to deploy on the different clusters

13
00:00:33.002 --> 00:00:35.008
for each environment.

14
00:00:35.008 --> 00:00:39.006
For example, in this manifest, which defines Ingress routes

15
00:00:39.006 --> 00:00:42.004
that direct traffic coming into the cluster,

16
00:00:42.004 --> 00:00:45.008
we need to use different values for the host property

17
00:00:45.008 --> 00:00:48.004
for staging and production.

18
00:00:48.004 --> 00:00:53.002
The staging cluster we'll use staging.landon.linkedin.io,

19
00:00:53.002 --> 00:00:54.006
and the production cluster,

20
00:00:54.006 --> 00:00:56.005
we'll use the value that we see here,

21
00:00:56.005 --> 00:00:59.006
landon.linkedin.io.

22
00:00:59.006 --> 00:01:03.005
Kustomize allows us to use the same YAML configuration files

23
00:01:03.005 --> 00:01:05.000
for these environments.

24
00:01:05.000 --> 00:01:07.007
However we can apply small kustomizations

25
00:01:07.007 --> 00:01:09.008
where they differ.

26
00:01:09.008 --> 00:01:11.009
Let's take a look at the structure

27
00:01:11.009 --> 00:01:15.006
of our Kustomize directory to see how this works.

28
00:01:15.006 --> 00:01:19.002
Inside of the directory we have the base folder.

29
00:01:19.002 --> 00:01:22.008
It defines all of the resources that we need to include

30
00:01:22.008 --> 00:01:24.007
in both environments.

31
00:01:24.007 --> 00:01:28.007
So here we'll find things like deployments or services.

32
00:01:28.007 --> 00:01:32.006
You'll also notice this kustomization.yaml file.

33
00:01:32.006 --> 00:01:37.005
Let's go ahead and we'll take a look at that.

34
00:01:37.005 --> 00:01:40.005
Inside of the kustomization.yaml file,

35
00:01:40.005 --> 00:01:43.002
we define all of the resources that we'll need

36
00:01:43.002 --> 00:01:44.006
to run our application.

37
00:01:44.006 --> 00:01:46.008
So here you see all those YAML files

38
00:01:46.008 --> 00:01:49.003
that we defined in the base.

39
00:01:49.003 --> 00:01:51.008
Now if we go back and take another look

40
00:01:51.008 --> 00:01:55.007
at our Kustomize directory, you'll see these overlays,

41
00:01:55.007 --> 00:01:58.006
one for production and one for staging.

42
00:01:58.006 --> 00:02:03.001
And then each overlay has its own kustomization.yaml file

43
00:02:03.001 --> 00:02:08.001
that it uses to apply small variations for the environment.

44
00:02:08.001 --> 00:02:10.008
Let's take a look at the kustomization

45
00:02:10.008 --> 00:02:15.003
for our staging overlay.

46
00:02:15.003 --> 00:02:17.009
Within it you'll notice that it indicates

47
00:02:17.009 --> 00:02:21.008
it uses all of the resources that we saw in the base,

48
00:02:21.008 --> 00:02:25.002
but it does provide its own kustomization

49
00:02:25.002 --> 00:02:28.003
for the app-ingress.yaml file.

50
00:02:28.003 --> 00:02:32.002
Let's take a look at that.

51
00:02:32.002 --> 00:02:34.004
If we scroll up within the file,

52
00:02:34.004 --> 00:02:36.007
you'll notice that the staging overlay

53
00:02:36.007 --> 00:02:40.005
provides its own value for the host property.

54
00:02:40.005 --> 00:02:42.009
So here's the kustomization we'll make

55
00:02:42.009 --> 00:02:45.004
for the staging overlay.

56
00:02:45.004 --> 00:02:47.002
When we build this overlay,

57
00:02:47.002 --> 00:02:50.005
it's going to lay this configuration on top of what we saw

58
00:02:50.005 --> 00:02:51.006
in the base.

59
00:02:51.006 --> 00:02:53.006
Here, let me show you how it works.

60
00:02:53.006 --> 00:02:55.007
We'll go ahead and use Kustomize

61
00:02:55.007 --> 00:02:58.003
to build our staging overlay,

62
00:02:58.003 --> 00:03:00.008
and let's watch what happens here.

63
00:03:00.008 --> 00:03:04.004
First you'll notice that a configuration was generated

64
00:03:04.004 --> 00:03:06.005
that contained all of the manifests

65
00:03:06.005 --> 00:03:09.002
we found within the base.

66
00:03:09.002 --> 00:03:13.005
Now if we scroll down here to take a look at the Ingress,

67
00:03:13.005 --> 00:03:17.000
you'll see that the kustomization for the staging overlay

68
00:03:17.000 --> 00:03:22.009
was applied, there we see staging.landon.linkedin.io.

69
00:03:22.009 --> 00:03:26.007
So you can use Kustomize to apply these kustomizations

70
00:03:26.007 --> 00:03:28.006
for each environment,

71
00:03:28.006 --> 00:03:30.009
but Kustomize can also be used

72
00:03:30.009 --> 00:03:33.006
to update the versions of container images

73
00:03:33.006 --> 00:03:36.004
that are set within our resources.

74
00:03:36.004 --> 00:03:38.003
Let me show you how this works.

75
00:03:38.003 --> 00:03:39.008
If we scroll up a little bit,

76
00:03:39.008 --> 00:03:43.008
here we're going to find a deployment for a room service.

77
00:03:43.008 --> 00:03:47.001
Within this deployment, we specify a container image

78
00:03:47.001 --> 00:03:49.006
that's going to run inside of a pod,

79
00:03:49.006 --> 00:03:53.008
and you'll notice we set the version of that image to one.

80
00:03:53.008 --> 00:03:58.005
Using Kustomize, we can update this container image version.

81
00:03:58.005 --> 00:04:00.008
Let's go ahead and I'll copy the name

82
00:04:00.008 --> 00:04:03.001
of our fully qualified container image

83
00:04:03.001 --> 00:04:05.007
and then I'll show you how this works.

84
00:04:05.007 --> 00:04:09.005
So I'm going to first navigate into the base directory,

85
00:04:09.005 --> 00:04:11.007
and then here we can use Kustomize

86
00:04:11.007 --> 00:04:14.002
to update the container image version.

87
00:04:14.002 --> 00:04:17.006
To do that we use the edit set image command,

88
00:04:17.006 --> 00:04:20.005
then we provide the name of our image

89
00:04:20.005 --> 00:04:22.003
followed by an equal sign,

90
00:04:22.003 --> 00:04:24.007
then the name of the image we would like,

91
00:04:24.007 --> 00:04:27.000
followed by the version we would like.

92
00:04:27.000 --> 00:04:30.007
Now here I'm going to use 22 to make it obvious.

93
00:04:30.007 --> 00:04:34.002
Now let's go ahead and we'll update the container image,

94
00:04:34.002 --> 00:04:36.007
and now let's take a look at what happened.

95
00:04:36.007 --> 00:04:40.008
If we look at the kustomization.yaml file in our base,

96
00:04:40.008 --> 00:04:44.003
you'll notice it now includes a kustomization

97
00:04:44.003 --> 00:04:47.003
we applied to update the container image,

98
00:04:47.003 --> 00:04:50.001
there it sets it to 22.

99
00:04:50.001 --> 00:04:53.002
Now let's go ahead and we'll use Kustomize

100
00:04:53.002 --> 00:04:55.004
to build our base.

101
00:04:55.004 --> 00:04:58.001
If we take a look at the generated YAML,

102
00:04:58.001 --> 00:05:00.007
you'll notice that our container image

103
00:05:00.007 --> 00:05:05.009
has been updated to 22 for our room service deployment.

104
00:05:05.009 --> 00:05:07.008
It's much easier to manage

105
00:05:07.008 --> 00:05:09.009
all these resource configuration files

106
00:05:09.009 --> 00:05:13.000
for our different environments using Kustomize.

107
00:05:13.000 --> 00:05:14.008
And as an added bonus,

108
00:05:14.008 --> 00:05:18.002
Argo CD works with it right out of the box.

109
00:05:18.002 --> 00:05:20.009
We'll be using it as part of our CD pipeline

110
00:05:20.009 --> 00:05:23.003
to help manage the container images

111
00:05:23.003 --> 00:05:26.004
that are defined within our YAML configuration files

112
00:05:26.004 --> 00:05:28.000
for each cluster.

