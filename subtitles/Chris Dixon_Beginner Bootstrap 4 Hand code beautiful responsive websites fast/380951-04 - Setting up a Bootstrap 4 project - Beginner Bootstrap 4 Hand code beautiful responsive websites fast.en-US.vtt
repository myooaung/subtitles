WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:02.120 --> 00:00:04.890
As with any website projects,

00:00:04.890 --> 00:00:07.800
you will need a text editor to get started.

00:00:07.800 --> 00:00:10.425
I'm going to be using Visual Studio Code,

00:00:10.425 --> 00:00:14.070
which is a great editor and the one which I use daily.

00:00:14.070 --> 00:00:17.205
It's available to download for Mac, Windows,

00:00:17.205 --> 00:00:21.030
and Linux, and also is free to use too.

00:00:21.030 --> 00:00:24.240
You can download it from this link here if you need

00:00:24.240 --> 00:00:28.740
to or you can use any of the alternative if you prefer.

00:00:28.740 --> 00:00:32.895
To get started including Bootstrap into our project,

00:00:32.895 --> 00:00:36.135
there is various option we can fuse.

00:00:36.135 --> 00:00:38.460
We have a CDN,

00:00:38.460 --> 00:00:42.205
we can self-host files inside of our projects,

00:00:42.205 --> 00:00:46.735
or we can use a package manager such as yarn or mpm.

00:00:46.735 --> 00:00:52.370
This is probably the way to go if using a node projects or Ruby on Rails,

00:00:52.370 --> 00:00:56.165
or something which takes advantage of a package manager.

00:00:56.165 --> 00:01:01.645
However, this is not going to be something which we'll be covering in this begin course.

00:01:01.645 --> 00:01:05.899
Instead, we're going to focus on the CDN option,

00:01:05.899 --> 00:01:09.310
which stands for Content Delivery Network.

00:01:09.310 --> 00:01:13.510
Bootstrap has us covered for using this really easily.

00:01:13.510 --> 00:01:20.000
It providers on the Bootstrap website with a link for the JavaScript and the CSS files,

00:01:20.000 --> 00:01:23.505
which we can easily drop into our project.

00:01:23.505 --> 00:01:27.515
It has various benefits for our end-user,

00:01:27.515 --> 00:01:30.020
mostly relating to speed.

00:01:30.020 --> 00:01:36.395
Since the Bootstrap CDN is located in various datacenters across the world.

00:01:36.395 --> 00:01:40.580
This means that our files and folders will be served up faster to

00:01:40.580 --> 00:01:47.590
the end-user because more than likely will be a datacenter somewhere nearby.

00:01:47.590 --> 00:01:52.700
This also has the benefit that the datacenter may also have

00:01:52.700 --> 00:01:58.835
a cached version of the files to resulting in an even faster and performance.

00:01:58.835 --> 00:02:02.810
Multiple datacenters also mean that our files will

00:02:02.810 --> 00:02:07.025
generally be more available since if a datacenter is down,

00:02:07.025 --> 00:02:10.925
there will be multiple locations to fall back onto.

00:02:10.925 --> 00:02:15.920
Content Delivery Providers will also often add some security measures,

00:02:15.920 --> 00:02:21.585
along with possibly adding some load balancing for high-performance websites too.

00:02:21.585 --> 00:02:24.890
Another option is to go self hosted.

00:02:24.890 --> 00:02:27.860
This basically means we download a copy of all of

00:02:27.860 --> 00:02:31.835
the required Bootstrap JavaScript and CSS files.

00:02:31.835 --> 00:02:35.155
Then we can host them inside of our own project.

00:02:35.155 --> 00:02:40.130
We do this just as we would do with any other JavaScript or CSS files,

00:02:40.130 --> 00:02:44.780
we'll download them, include them inside of our project directory,

00:02:44.780 --> 00:02:48.550
and then link them inside of our HTML files.

00:02:48.550 --> 00:02:52.580
This has the benefit of giving us the full control

00:02:52.580 --> 00:02:56.570
of our files and folders and how we'd like to structure them,

00:02:56.570 --> 00:03:02.725
where we would like to save them from and save them into our own datacenters or service.

00:03:02.725 --> 00:03:06.545
This is a really quick and easy way to get started to.

00:03:06.545 --> 00:03:12.575
Bootstrap also provides this as a simple download use to drop inside of our projects.

00:03:12.575 --> 00:03:17.750
Another benefit too, is if our application is intended to be used offline,

00:03:17.750 --> 00:03:21.930
we will still have access to these files when we need them.

00:03:22.100 --> 00:03:24.840
Back on the Bootstrap homepage,

00:03:24.840 --> 00:03:27.205
which is get Bootstrapped.com.

00:03:27.205 --> 00:03:32.000
I'm now going to get started with Bootstrap by clicking on the "Documentation" link,

00:03:32.000 --> 00:03:36.740
and into navigation and then down to the "Introduction" section.

00:03:36.740 --> 00:03:40.280
This quickstart involves the CDN links for

00:03:40.280 --> 00:03:44.995
both the CSS and also the JavaScript files which are required.

00:03:44.995 --> 00:03:47.990
As an alternative we can also download Bootstrap

00:03:47.990 --> 00:03:51.290
ourselves and place it into our project too,

00:03:51.290 --> 00:03:53.290
just like we looked up before.

00:03:53.290 --> 00:03:56.990
This involves taking the CSS and JavaScript files,

00:03:56.990 --> 00:04:02.030
placing them into our project folder and then link them using nice style and script

00:04:02.030 --> 00:04:08.780
tags just as we would do if we would link in it to our own CSS and JavaScript files.

00:04:08.780 --> 00:04:13.505
There is only one CSS file needed but as you can see,

00:04:13.505 --> 00:04:16.025
there is three different JavaScript files,

00:04:16.025 --> 00:04:17.585
which we need to include.

00:04:17.585 --> 00:04:23.015
Bootstrap uses JavaScript for certain components and if you click on this drop-down,

00:04:23.015 --> 00:04:28.865
which is just here, we can see exactly which components require these JavaScript files.

00:04:28.865 --> 00:04:30.860
So this will allow us to leave out

00:04:30.860 --> 00:04:35.130
certain JavaScript files if we're not using any of these components here,

00:04:35.130 --> 00:04:38.140
we can now go to include all of the files.

00:04:38.140 --> 00:04:40.970
Somehow full use of all of the components.

00:04:40.970 --> 00:04:46.580
We can create our own index page and copy over all of these links or if we scroll down,

00:04:46.580 --> 00:04:49.550
we can copy the started template from below.

00:04:49.550 --> 00:04:51.440
So click on this.

00:04:51.440 --> 00:04:55.430
This is just a basic index page where we have our links to

00:04:55.430 --> 00:05:01.595
our CSS and also our free final astounded bottom to include our JavaScript.

00:05:01.595 --> 00:05:06.395
So we'll just copied. I'm now going to go over to the desktop and create a new folder

00:05:06.395 --> 00:05:10.895
for all projects and of course you can store this anywhere on your system.

00:05:10.895 --> 00:05:14.750
I'm going to call my project "Bootstrap productivity".

00:05:16.160 --> 00:05:21.660
Then open it up in Visual Studio Code by dragging over the folder.

00:05:22.060 --> 00:05:26.495
The first file we need is going to be our index.html.

00:05:26.495 --> 00:05:29.920
Let's create a new file name this

00:05:29.920 --> 00:05:34.820
index.html and then we can paste in this data from before.

00:05:34.940 --> 00:05:39.670
The first thing we want to do is to change the title to be

00:05:39.670 --> 00:05:44.590
Bootstrap productivity or the title

00:05:44.590 --> 00:05:48.475
of your choice and then we can open this up inside of the browser.

00:05:48.475 --> 00:05:52.585
The way we can do this is to either go into our project folder

00:05:52.585 --> 00:05:56.830
and double click on the index page or in Visual Studio Code,

00:05:56.830 --> 00:06:00.100
we can right-click on the title and then go to "Copy

00:06:00.100 --> 00:06:05.150
path" and then paste it as a new tab in the browser.

00:06:05.150 --> 00:06:12.070
All we have here is a regular HTML heading put our project is now setup and ready to go.

00:06:12.070 --> 00:06:18.380
In the next video, where we will discover how Bootstrap uses containers and rows.
