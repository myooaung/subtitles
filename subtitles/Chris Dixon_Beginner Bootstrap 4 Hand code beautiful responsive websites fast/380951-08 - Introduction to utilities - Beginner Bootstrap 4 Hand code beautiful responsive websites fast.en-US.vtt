WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.370 --> 00:00:05.220
We now move on to Bootstrap utilities which

00:00:05.220 --> 00:00:09.540
basically helps us to quickly add CSS to our elements.

00:00:09.540 --> 00:00:12.330
Here if we click on the Documentation on

00:00:12.330 --> 00:00:18.220
Bootstrap Homepage and then go down to the utilities inside the sidebar.

00:00:18.440 --> 00:00:24.900
This is the section where we'll find all of the utility classes Bootstrap has to offer.

00:00:24.900 --> 00:00:29.130
These are used to easily add common CSS styling.

00:00:29.130 --> 00:00:31.105
If we look at the sidebar,

00:00:31.105 --> 00:00:33.770
we can use them to add things such as borders,

00:00:33.770 --> 00:00:36.890
flex box, positioning, shadows,

00:00:36.890 --> 00:00:39.490
spacing, and so much more.

00:00:39.490 --> 00:00:44.585
Most of these are self-explanatory if you already know some CSS.

00:00:44.585 --> 00:00:47.675
For example, if we go to the borders,

00:00:47.675 --> 00:00:51.410
all we need to do is to add some of the Bootstrap classes,

00:00:51.410 --> 00:00:52.805
such as the border,

00:00:52.805 --> 00:00:55.265
put a border all round of our elements.

00:00:55.265 --> 00:00:59.285
We can add borders to a particular side such as the top or bottom.

00:00:59.285 --> 00:01:02.180
We can remove borders from certain sides

00:01:02.180 --> 00:01:06.185
and also play around with the colors and the radius too.

00:01:06.185 --> 00:01:10.370
As you can see, Bootstrap generally provides us with some images.

00:01:10.370 --> 00:01:13.330
See exactly what these classes are doing.

00:01:13.330 --> 00:01:15.470
We can also click on the colors,

00:01:15.470 --> 00:01:18.355
and this is exactly what we looked at in the last video.

00:01:18.355 --> 00:01:20.230
We used the primary color,

00:01:20.230 --> 00:01:23.270
and this is also available to use with text too.

00:01:23.270 --> 00:01:26.290
We also have the light and the dark color which we

00:01:26.290 --> 00:01:29.425
looked at earlier on for our containers backgrounds.

00:01:29.425 --> 00:01:33.355
Many of these utilities can be used on different elements too.

00:01:33.355 --> 00:01:37.700
So we're not restricted to learning different things or different elements.

00:01:37.700 --> 00:01:42.100
We can also make use of the CSS flexbox in Bootstrap.

00:01:42.100 --> 00:01:47.215
We can easily add flexbox to our elements with the class name of the flex,

00:01:47.215 --> 00:01:50.380
which stands for display type of flexbox.

00:01:50.380 --> 00:01:53.305
Scrolling down, we can set the directions.

00:01:53.305 --> 00:01:57.575
We have the usual columns and rows as well as the reverse.

00:01:57.575 --> 00:02:00.000
We can also justify our content.

00:02:00.000 --> 00:02:02.630
Align our items, and access any of

00:02:02.630 --> 00:02:06.515
the flex box properties which we have with regular CSS,

00:02:06.515 --> 00:02:09.670
or by adding a class name to all elements.

00:02:09.670 --> 00:02:12.380
We also have sizing if we click on this,

00:02:12.380 --> 00:02:15.560
where we can set the height and the width of our elements.

00:02:15.560 --> 00:02:19.505
So for example, if we wanted our element to be 50 percent wide,

00:02:19.505 --> 00:02:22.060
would use the class of W-50.

00:02:22.060 --> 00:02:25.650
We can replace the W with a H for height,

00:02:25.650 --> 00:02:29.995
and this will set the height of the element to be 50 percent too.

00:02:29.995 --> 00:02:36.184
We also have other options such as also 100 percent and 25 percent,

00:02:36.184 --> 00:02:39.935
and we'll make use of more of these throughout this course.

00:02:39.935 --> 00:02:42.770
As you can see, most of these names relate to

00:02:42.770 --> 00:02:46.910
the CSS they apply and are pretty self-explanatory,

00:02:46.910 --> 00:02:49.805
such as text left and border top.

00:02:49.805 --> 00:02:53.100
But there is one which I want to show you in more detail,

00:02:53.100 --> 00:02:55.900
and this is the space and utility.

00:02:55.900 --> 00:02:59.360
Space and utilities are margin and padding,

00:02:59.360 --> 00:03:02.945
and we need to build a class name in three or four parts.

00:03:02.945 --> 00:03:05.980
So let's take a look at how we can do this now.

00:03:05.980 --> 00:03:12.275
We can apply spacing utilities using Bootstrap by building opaque class name.

00:03:12.275 --> 00:03:16.040
We do this with up to four different properties which we can

00:03:16.040 --> 00:03:20.470
combine to make opaque class names added to our elements.

00:03:20.470 --> 00:03:23.660
So the first thing we need to do is decide if we want to

00:03:23.660 --> 00:03:27.275
add spacing by a margin or padding.

00:03:27.275 --> 00:03:33.485
We do this by adding a M for margin or P at the start of our class name.

00:03:33.485 --> 00:03:37.385
The next thing we need to do is to decide which side

00:03:37.385 --> 00:03:41.090
of the element we want to apply the space into.

00:03:41.090 --> 00:03:43.700
We can apply it to the top of the element,

00:03:43.700 --> 00:03:45.515
the bottom, the left,

00:03:45.515 --> 00:03:47.995
the right, as we can see here.

00:03:47.995 --> 00:03:51.255
Or we also have the x on the y-axis.

00:03:51.255 --> 00:03:53.110
If we apply it to the x,

00:03:53.110 --> 00:03:57.190
this will apply the spacing on both the left on the right-hand side.

00:03:57.190 --> 00:03:59.520
The y-axis is vertical,

00:03:59.520 --> 00:04:03.510
so we will apply this space in it to the top and bottom.

00:04:03.640 --> 00:04:08.660
Remember, Bootstrap is built and designed to be mobile first.

00:04:08.660 --> 00:04:13.205
So any margin or padding which we add by default,

00:04:13.205 --> 00:04:18.320
will automatically be applied to the extra small devices under both.

00:04:18.320 --> 00:04:24.080
We can then add in a optional break point such as small, medium, large,

00:04:24.080 --> 00:04:30.325
or extra large, where we want to change the setting for the margin or padding.

00:04:30.325 --> 00:04:34.410
Default part is to the add a size of 0, 1,

00:04:34.410 --> 00:04:38.265
2, 3, 4 or 5 or auto.

00:04:38.265 --> 00:04:44.845
Zero will reset any margin and padding and remove this from our elements.

00:04:44.845 --> 00:04:47.820
We have the number 3, which is in the middle.

00:04:47.820 --> 00:04:51.140
This will apply a spacing of one RAM.

00:04:51.140 --> 00:04:53.180
If we go lower than this,

00:04:53.180 --> 00:04:54.595
this is half a RAM,

00:04:54.595 --> 00:04:58.680
and then number 1 applies a quarter of our RAM.

00:04:58.680 --> 00:05:02.960
The value of four is equal to 1.5 RAMs,

00:05:02.960 --> 00:05:06.335
and then the value of five is equal to three RAM.

00:05:06.335 --> 00:05:09.530
We also have the option of auto 2.

00:05:09.530 --> 00:05:11.795
Just like regular CSS,

00:05:11.795 --> 00:05:15.859
this is way where we can apply a margin zero auto for example,

00:05:15.859 --> 00:05:18.005
and we can make use of this.

00:05:18.005 --> 00:05:21.095
So for the first example up at the top here we have

00:05:21.095 --> 00:05:24.995
a pretty standard section with a div nested inside.

00:05:24.995 --> 00:05:28.699
The orange part of the top represents some margin.

00:05:28.699 --> 00:05:30.050
So as we see here,

00:05:30.050 --> 00:05:33.530
if we wanted to add some margin to the top row div,

00:05:33.530 --> 00:05:36.550
we could do this by building opaque class.

00:05:36.550 --> 00:05:42.130
We can start by selecting M because we want the margin to apply.

00:05:42.130 --> 00:05:44.160
After this, we select outside.

00:05:44.160 --> 00:05:47.600
So one is to apply it to the top of our elements,

00:05:47.600 --> 00:05:50.660
and then we can choose the optional breakpoints,

00:05:50.660 --> 00:05:55.175
or we can leave this blank if you want this to apply to all screen sizes.

00:05:55.175 --> 00:05:59.270
After this, we then select the spacing we want at the end.

00:05:59.270 --> 00:06:01.115
If we want one RAM,

00:06:01.115 --> 00:06:04.200
we will go for a value of three.

00:06:04.370 --> 00:06:06.620
For the next example,

00:06:06.620 --> 00:06:08.510
we have a same div,

00:06:08.510 --> 00:06:12.940
I'm going to apply some margin to the top and the bottom too.

00:06:12.940 --> 00:06:16.020
Just like before, this is margin,

00:06:16.020 --> 00:06:22.070
so we apply the value of M. We want this to apply to both the top and the bottom.

00:06:22.070 --> 00:06:26.785
So I can make use of the y-axis inside here.

00:06:26.785 --> 00:06:30.320
Again, we're not going to use any specific breakpoints.

00:06:30.320 --> 00:06:33.800
So instead we can add a value, you stuff to this.

00:06:33.800 --> 00:06:38.780
For the further example, we have some padding which is represented by the green.

00:06:38.780 --> 00:06:42.500
Now since padding is added to the inside of the elements,

00:06:42.500 --> 00:06:46.070
we would add this to the main wrapper rather than the div,

00:06:46.070 --> 00:06:49.990
because this would then apply the inside of our div elements.

00:06:49.990 --> 00:06:55.965
So for this example, we will choose P. Since we're now dealing with padding.

00:06:55.965 --> 00:07:00.675
We will then add this one the right-hand side to cover us here.

00:07:00.675 --> 00:07:03.620
Then any value which you want to choose.

00:07:03.620 --> 00:07:05.940
Let's go for five in this case.

00:07:05.940 --> 00:07:07.790
Just below this, we have some padding,

00:07:07.790 --> 00:07:11.660
but we also want to apply this to the left and right-hand side.

00:07:11.660 --> 00:07:14.465
So rather than writing out two separate rules,

00:07:14.465 --> 00:07:18.185
we can make use of the padding on the x-axis.

00:07:18.185 --> 00:07:22.160
So this example would be padding on the x.

00:07:22.160 --> 00:07:26.150
Again, we can add any value inside here.

00:07:26.150 --> 00:07:30.215
We could also change this to include a breakpoints.

00:07:30.215 --> 00:07:36.080
So if we wanted the padding to only apply on medium-sized devices and above,

00:07:36.080 --> 00:07:39.545
we could do it by adding a optional third argument.

00:07:39.545 --> 00:07:47.480
So it can add padding on the x-axis and then dash at a break point of MD,

00:07:47.480 --> 00:07:50.285
and then the value of four.

00:07:50.285 --> 00:07:53.270
Down at the bottom we have our fourth example,

00:07:53.270 --> 00:07:57.545
which is to center and elements in the middle of our div.

00:07:57.545 --> 00:08:01.820
The way we can do this is by taking advantage of the auto property,

00:08:01.820 --> 00:08:05.255
just like we would for example, in regular CSS.

00:08:05.255 --> 00:08:08.440
If we apply margin zero auto.

00:08:08.440 --> 00:08:10.185
Way we can do this,

00:08:10.185 --> 00:08:17.825
we can center this in the middle of the x-axis with the value of M and then x.

00:08:17.825 --> 00:08:21.700
Then set the value to be auto.

00:08:21.700 --> 00:08:26.060
Just like with regular CSS when using the auto property,

00:08:26.060 --> 00:08:29.900
we do need to be aware that the display type must be set to block,

00:08:29.900 --> 00:08:32.870
and we must have a width already set,

00:08:32.870 --> 00:08:35.605
otherwise this will not apply.

00:08:35.605 --> 00:08:40.235
So this is the theory behind using name-space and utilities.

00:08:40.235 --> 00:08:44.670
Next, let's go over to our project and put this into practice.
