WEBVTT
1
1

00:00:00.000  -->  00:00:04.180
[MUSIC]
2

2

00:00:04.180  -->  00:00:06.470
In this video I'm gonna be
covering a few new concepts.
3

3

00:00:06.470  -->  00:00:08.010
One is the singleton pattern,
4

4

00:00:08.010  -->  00:00:10.880
and that will help us when we
load from one scene to the next,
5

5

00:00:10.880  -->  00:00:15.270
help us keep our score to remember
the score from one scene to the next.
6

6

00:00:15.270  -->  00:00:20.077
Also I'll be talking about destroy and
load, which we'll be using as part of
7

7

00:00:20.077  -->  00:00:24.930
the singleton pattern as well as looking
at the script execution order in Unity.
8

8

00:00:24.930  -->  00:00:26.630
So let's start this process.
9

9

00:00:26.630  -->  00:00:30.090
First of all what I want to do is just
give myself a few less blocks here so
10

10

00:00:30.090  -->  00:00:32.690
it's very easy to load from
one level to the next.
11

11

00:00:32.690  -->  00:00:34.430
And I will delete most of these.
12

12

00:00:34.430  -->  00:00:37.570
Just leave one remaining and save.
13

13

00:00:37.570  -->  00:00:39.470
Go over to my other level.
14

14

00:00:39.470  -->  00:00:45.180
My other level I am going to,
what did I forget to do last time?
15

15

00:00:45.180  -->  00:00:47.300
Okay, I needed to click on Game Status and
16

16

00:00:47.300  -->  00:00:52.660
we haven't given our game status a score
text, so we need to grab on Game Canvas,
17

17

00:00:52.660  -->  00:00:56.590
grab our score text and
drag that into our score text.
18

18

00:00:56.590  -->  00:01:00.050
Now when we click play on this level,
our score will update.
19

19

00:01:00.050  -->  00:01:04.560
That's something we didn't check last
time around, okay, now it does update.
20

20

00:01:04.560  -->  00:01:06.080
Okay cool.
21

21

00:01:06.080  -->  00:01:08.150
Now, next up what we wanna do is say,
22

22

00:01:08.150  -->  00:01:11.770
how can we make our score load
from one level to the next?
23

23

00:01:11.770  -->  00:01:12.970
Let's see what happens at the moment.
24

24

00:01:12.970  -->  00:01:16.790
Back over to saving this level, back over
to Level 2, so there's only one block.
25

25

00:01:16.790  -->  00:01:21.950
When I click on Play and
Shoot the ball at the block.
26

26

00:01:21.950  -->  00:01:24.390
Score goes up but
then it goes back down to 0 again.
27

27

00:01:24.390  -->  00:01:25.320
And what's going on here?
28

28

00:01:25.320  -->  00:01:26.290
Why is this happening?
29

29

00:01:26.290  -->  00:01:29.070
Let me do a little bit of diagramming for
you here.
30

30

00:01:29.070  -->  00:01:31.690
Let me grab my fancy pen.
31

31

00:01:31.690  -->  00:01:33.580
If I can grab it, cool.
32

32

00:01:33.580  -->  00:01:36.477
Now what's going on here at
the moment is we have level,
33

33

00:01:36.477  -->  00:01:39.016
we'll call it our first level and
second level.
34

34

00:01:39.016  -->  00:01:43.916
I know my order is a little bit messed
up with my naming and my order, and
35

35

00:01:43.916  -->  00:01:46.501
we'll say we've got 1, 2 and 3.
36

36

00:01:46.501  -->  00:01:52.468
Now, what's going on at the moment
is we have our games status script,
37

37

00:01:52.468  -->  00:01:55.680
which is starting off our score at 0.
38

38

00:01:55.680  -->  00:01:59.096
And that's very useful for us,
because if we start testing at level 3,
39

39

00:01:59.096  -->  00:02:02.133
we want everything to start from fresh,
we wanna start from 0.
40

40

00:02:02.133  -->  00:02:03.996
If we start testing at level 28,
41

41

00:02:03.996  -->  00:02:07.157
then we want everything to
start from fresh at level 28.
42

42

00:02:07.157  -->  00:02:10.958
When we're in level 1,
that makes great sense, we start off at 0,
43

43

00:02:10.958  -->  00:02:14.045
we play the game for a little bit,
we get a score of 83.
44

44

00:02:14.045  -->  00:02:19.720
But then when we jump over to level 2,
we expect the 83 to persist.
45

45

00:02:19.720  -->  00:02:22.810
You don't want as a [LAUGH] player for
your score to go back to 0 at every level,
46

46

00:02:22.810  -->  00:02:24.170
that's not so fun.
47

47

00:02:24.170  -->  00:02:29.050
What's happening is when we start level 2,
it's saying, okay load
48

48

00:02:29.050  -->  00:02:34.450
GameStatus script all over again, at which
point it says score should start at 0.
49

49

00:02:34.450  -->  00:02:38.620
Everything from level 1, or
our first level, gets unloaded and
50

50

00:02:38.620  -->  00:02:41.290
destroyed and no longer exists.
51

51

00:02:41.290  -->  00:02:43.680
And all the new stuff
in this level appears.
52

52

00:02:43.680  -->  00:02:46.640
Same thing when we go
from level 2 to level 3.
53

53

00:02:46.640  -->  00:02:50.490
Everything in previous levels gets just,
in previous scenes,
54

54

00:02:50.490  -->  00:02:52.742
we'll call it scenes levels,
I'm using interchangeably.
55

55

00:02:52.742  -->  00:02:57.520
But from a unity point of view from
the previous scene is gone, and
56

56

00:02:57.520  -->  00:03:00.470
all the new things appear
in the next scene.
57

57

00:03:00.470  -->  00:03:03.570
Okay, let's make sure that we don't
have a whole bunch of junk that
58

58

00:03:03.570  -->  00:03:04.360
follows us around.
59

59

00:03:04.360  -->  00:03:06.900
We got a whole bunch of things, we go
to the next one those things continue.
60

60

00:03:06.900  -->  00:03:09.270
We get all these game objects and
elements and things.
61

61

00:03:09.270  -->  00:03:14.250
And by the time we get to level 28,
we've got 1,000 game objects and and
62

62

00:03:14.250  -->  00:03:15.780
our game is grinding to a halt.
63

63

00:03:15.780  -->  00:03:19.215
So, this is a great mechanism within
Unity to make sure that we just have what
64

64

00:03:19.215  -->  00:03:20.567
we want in particular scene.
65

65

00:03:20.567  -->  00:03:23.232
But what do we do about this problem?
66

66

00:03:23.232  -->  00:03:27.712
That we want some things to persist
from one scene to the next,
67

67

00:03:27.712  -->  00:03:32.720
well what we do is we implement what
is called the Singleton pattern.
68

68

00:03:34.310  -->  00:03:37.260
Okay, it's an approach.
69

69

00:03:37.260  -->  00:03:40.400
It's not a specific set of code,
there's many ways to do this,
70

70

00:03:40.400  -->  00:03:45.500
many ways to write it, but
it's an approach, and what that means is,
71

71

00:03:45.500  -->  00:03:49.937
just resetting my screen,
if we have our first scene loaded.
72

72

00:03:51.220  -->  00:03:52.665
Number 1.
And we'll say we're using
73

73

00:03:52.665  -->  00:03:54.130
GameStatus.cs again.
74

74

00:03:54.130  -->  00:03:55.570
This is our class.
75

75

00:03:55.570  -->  00:03:59.700
I'll just abbreviate as GS, GameStatus.
76

76

00:03:59.700  -->  00:04:04.370
When we load from scene 1 to scene 2,
77

77

00:04:04.370  -->  00:04:10.750
what we can say is that when scene
2 tries to load its GameStatus,
78

78

00:04:10.750  -->  00:04:16.840
it says if there already exists
a game status then don't load me.
79

79

00:04:16.840  -->  00:04:19.550
Just allow this one to continue and
80

80

00:04:19.550  -->  00:04:25.690
what we need to do is implement some
special code called Don't Destroy On Load.
81

81

00:04:25.690  -->  00:04:29.890
So that it knows to stick around and
82

82

00:04:29.890  -->  00:04:33.540
not to destroy itself when
we load the next scene.
83

83

00:04:33.540  -->  00:04:37.330
And anything in the next
scene we need to say destroy.
84

84

00:04:37.330  -->  00:04:40.120
If there's already one that exists.
85

85

00:04:40.120  -->  00:04:42.970
And how I normally view
this is like Highlander.
86

86

00:04:42.970  -->  00:04:46.210
I don't know if you know the old,
old movie or if you've seen the memes, but
87

87

00:04:46.210  -->  00:04:47.750
there can be only one.
88

88

00:04:47.750  -->  00:04:49.350
That's basically the Singleton pattern or
89

89

00:04:49.350  -->  00:04:52.190
there can be only one if you
look at that one [INAUDIBLE].
90

90

00:04:52.190  -->  00:04:55.430
So there can be only one, that's what
the Singleton pattern is all about.
91

91

00:04:55.430  -->  00:05:00.960
Okay so what we're going to do in
our gamestatus.cs is to say in here
92

92

00:05:00.960  -->  00:05:05.880
if there already exists a game
status then don't load yourself.
93

93

00:05:05.880  -->  00:05:08.490
Or more specifically destroy yourself.
94

94

00:05:08.490  -->  00:05:12.450
And if there's not then
keep yourself around.
95

95

00:05:12.450  -->  00:05:13.460
And where do we do that?
96

96

00:05:13.460  -->  00:05:16.200
Where with the now script
we need to write that code?
97

97

00:05:16.200  -->  00:05:18.840
Well this is a chance for
us to have another conversation
98

98

00:05:18.840  -->  00:05:22.090
about a new concept which
is Unity's execution order.
99

99

00:05:22.090  -->  00:05:26.700
I've got a link I've given you in
the resources to the documentation of
100

100

00:05:26.700  -->  00:05:28.630
the Unity execution order.
101

101

00:05:28.630  -->  00:05:30.390
I'm gonna zoom all the way out so
you can see.
102

102

00:05:30.390  -->  00:05:33.720
We're looking at this particular diagram
just here, that's the context of it.
103

103

00:05:33.720  -->  00:05:36.900
Zoom back in so you can see what
the font and the text actually says.
104

104

00:05:36.900  -->  00:05:41.150
And what's going on here is
when we are executing a script.
105

105

00:05:41.150  -->  00:05:42.240
This is the flow chart here.
106

106

00:05:42.240  -->  00:05:44.620
The script lifecycle.
107

107

00:05:44.620  -->  00:05:47.680
At the very start we have
the initialization phase.
108

108

00:05:47.680  -->  00:05:50.110
That just happens at the very
start of the script.
109

109

00:05:50.110  -->  00:05:51.130
It doesn't happen over and over.
110

110

00:05:51.130  -->  00:05:54.460
It just happens once at the start and
we have some timing we can use.
111

111

00:05:54.460  -->  00:05:58.660
The very, very first thing
that gets called is awake.
112

112

00:05:58.660  -->  00:06:00.950
And we use Start a lot,
that's a good place for
113

113

00:06:00.950  -->  00:06:02.470
us to do all of our initialization.
114

114

00:06:02.470  -->  00:06:04.860
If we wanna do something before Start,
we can put it in Awake.
115

115

00:06:04.860  -->  00:06:08.210
And then what happens over
the execution is that
116

116

00:06:08.210  -->  00:06:12.460
then we start to get into the things that
happens once per frame, zoom out again.
117

117

00:06:12.460  -->  00:06:16.240
You can see that this thicker black
line that runs along here is showing all
118

118

00:06:16.240  -->  00:06:21.230
the things that happen per frame, every
single frame these things are happening.
119

119

00:06:21.230  -->  00:06:23.740
And if you're not familiar with
what that means, per frame,
120

120

00:06:23.740  -->  00:06:25.455
let me just very quickly explain that.
121

121

00:06:25.455  -->  00:06:30.090
Because a couple of people out there
asked questions about this is,
122

122

00:06:30.090  -->  00:06:35.670
if you've heard of the terminology FPS
which could refer to first person shooter.
123

123

00:06:35.670  -->  00:06:40.820
In this case,
it's referring to Frames Per Second.
124

124

00:06:40.820  -->  00:06:45.440
And if you've got a really fast, amazing
computer you might get a lot of frames per
125

125

00:06:45.440  -->  00:06:49.040
second because a lot of things can be
calculated with your amazing computer.
126

126

00:06:49.040  -->  00:06:51.220
You might get 100 frames per second.
127

127

00:06:51.220  -->  00:06:54.250
If you've got an old piece of junk
computer that's not very good,
128

128

00:06:54.250  -->  00:06:57.430
really terrible,
maybe you get one frame per second.
129

129

00:06:57.430  -->  00:06:58.965
Which is gonna make
a pretty bad experience,
130

130

00:06:58.965  -->  00:07:02.720
because if you've got a character running
across the screen you'll see a frame this
131

131

00:07:02.720  -->  00:07:07.400
second and then you'll see another frame
after 2 seconds and then you'll see
132

132

00:07:07.400  -->  00:07:12.790
another frame after 3 seconds, and
it will be a little bit of a nightmare.
133

133

00:07:12.790  -->  00:07:15.760
If you've got a faster computer,
then this 1 second
134

134

00:07:15.760  -->  00:07:20.730
you'll have 100 of these frames
that are doing particular things.
135

135

00:07:20.730  -->  00:07:23.050
Okay, that's what frames per
second is all about, and
136

136

00:07:23.050  -->  00:07:25.010
that's what frames we're talking about.
137

137

00:07:25.010  -->  00:07:28.180
Within Unity it's trying to calculate
over and over every frame it does things.
138

138

00:07:28.180  -->  00:07:29.020
Every frame it does things.
139

139

00:07:29.020  -->  00:07:30.250
Every frame it does things.
140

140

00:07:30.250  -->  00:07:34.170
And also the physics loop happens
multiple times per frame.
141

141

00:07:34.170  -->  00:07:35.870
It's looping over and over and over.
142

142

00:07:35.870  -->  00:07:37.560
It's like on collision.
143

143

00:07:37.560  -->  00:07:40.324
It's calling, it's checking [SOUND] many,
144

144

00:07:40.324  -->  00:07:43.531
many times because process
is nowadays super fast.
145

145

00:07:43.531  -->  00:07:45.043
We could be getting thousands,
146

146

00:07:45.043  -->  00:07:48.910
hundreds of thousands of operations I'm
guessing in the hundreds of thousands.
147

147

00:07:48.910  -->  00:07:51.430
But we can get a lot of
operations in a second.
148

148

00:07:51.430  -->  00:07:56.220
So where then out of all these
steps in our script execution order
149

149

00:07:56.220  -->  00:07:58.160
do we need to put our Singleton.
150

150

00:07:58.160  -->  00:08:01.810
We're gonna put it at the very,
very, very start which is on awake.
151

151

00:08:01.810  -->  00:08:05.292
And the reason we put it there is just
in case we want something else to happen
152

152

00:08:05.292  -->  00:08:06.580
at the start of our script.
153

153

00:08:06.580  -->  00:08:11.261
For example we're using the Start
method here to do some things,
154

154

00:08:11.261  -->  00:08:17.220
we wanna use awake so it happens before
anything else can kick into place.
155

155

00:08:17.220  -->  00:08:19.200
Right okay so that's a lot of talking,
156

156

00:08:19.200  -->  00:08:20.700
hopefully you've stuck
with me through that.
157

157

00:08:20.700  -->  00:08:21.303
Now we'll do some typing.
158

158

00:08:21.303  -->  00:08:24.267
At the above start,
above our Start method,
159

159

00:08:24.267  -->  00:08:28.640
we'll give ourselves a couple of lines and
we'll say void Awake.
160

160

00:08:28.640  -->  00:08:31.740
And I'm gonna hit tab
to autocomplete that.
161

161

00:08:31.740  -->  00:08:36.740
So as a very starting point, we need a way
to store in a variable the number of game
162

162

00:08:36.740  -->  00:08:41.380
status objects that there currently
are in our scene, in our game.
163

163

00:08:41.380  -->  00:08:45.135
So we'll start by saying int,
we'll call this an integer,
164

164

00:08:45.135  -->  00:08:50.188
gameStatusCount, in other
words how many can you find.
165

165

00:08:50.188  -->  00:08:55.190
Now we'll = FindObjects,
with an s, OfType.
166

166

00:08:55.190  -->  00:08:57.500
I'm just gonna double,
triple highlight that.
167

167

00:08:57.500  -->  00:09:02.680
In this case we're using ObjectsOfType,
looking to see how many objects are there.
168

168

00:09:02.680  -->  00:09:08.890
We've been using FindObject Of type in
some of our other code more recently.
169

169

00:09:08.890  -->  00:09:10.390
But this one requires an s.
170

170

00:09:10.390  -->  00:09:13.750
I'm just saying this five times because
I know people often miss that s.
171

171

00:09:13.750  -->  00:09:16.810
I've missed it many times and not been
able to figure out why because they're
172

172

00:09:16.810  -->  00:09:19.680
very, very similar object and
objects of type.
173

173

00:09:19.680  -->  00:09:23.350
And then we're looking for GameStatus.
174

174

00:09:23.350  -->  00:09:24.930
And open, close parenthesis.
175

175

00:09:24.930  -->  00:09:26.249
And how do we know how many there are?
176

176

00:09:26.249  -->  00:09:31.941
Well, we can type .length and then ;.
177

177

00:09:31.941  -->  00:09:36.390
That's gonna say this will be storing
how many games status objects
178

178

00:09:36.390  -->  00:09:37.880
there currently are.
179

179

00:09:37.880  -->  00:09:42.497
Now we wanna write ourselves
an if statement, so
180

180

00:09:42.497  -->  00:09:48.135
we say if Game not tame
gameStatusCount is greater than 1.
181

181

00:09:48.135  -->  00:09:54.910
And the reason it's greater than 1
is we're saying if 1 already exists.
182

182

00:09:54.910  -->  00:09:58.910
And when I'm trying to create myself in
this script when I'm trying to execute
183

183

00:09:58.910  -->  00:10:00.770
myself I'm going to be number 2.
184

184

00:10:00.770  -->  00:10:04.450
If I'm number 2 then we're
saying it's greater than 1.
185

185

00:10:04.450  -->  00:10:08.460
But if I'm the first one to come along,
then currently gameStatusCount isn't
186

186

00:10:08.460  -->  00:10:12.790
greater than 1, because it would be
just 1, because I'm the first one.
187

187

00:10:12.790  -->  00:10:15.610
Okay, and then open and
close curly brackets.
188

188

00:10:15.610  -->  00:10:17.480
And in here what do you
think we wanna say?
189

189

00:10:17.480  -->  00:10:20.540
If there's already more than 1,
what do we do?
190

190

00:10:20.540  -->  00:10:22.780
Remember there can be only one.
191

191

00:10:22.780  -->  00:10:25.820
We say Destroy, we destroy what?
192

192

00:10:25.820  -->  00:10:27.770
Well we destroy the object,
the gameObject.
193

193

00:10:27.770  -->  00:10:32.200
In other words this particular gameObject
that is trying to create itself.
194

194

00:10:32.200  -->  00:10:36.830
So if there's more than one, destroy
yourself, jump on your sword so to speak.
195

195

00:10:36.830  -->  00:10:40.760
Otherwise, or else,
in a programming terminology,
196

196

00:10:40.760  -->  00:10:45.980
else we use our nifty
DontDestroyOnLoad method.
197

197

00:10:45.980  -->  00:10:51.190
And within there we put, again,
gameObject, and this is our way of saying,
198

198

00:10:51.190  -->  00:10:55.860
if there's already more than one, destroy
yourself, if there's not already more than
199

199

00:10:55.860  -->  00:11:01.230
one, then don't destroy when
the level loads in the future.
200

200

00:11:01.230  -->  00:11:04.380
I'm gonna save that and
show you exactly what's going on here
201

201

00:11:04.380  -->  00:11:07.480
when we I'm gonna go over to the other
level again because it's a little bit.
202

202

00:11:09.200  -->  00:11:10.610
I have to click on the proper spots.
203

203

00:11:10.610  -->  00:11:12.900
Scenes it's a little bit cleaner.
204

204

00:11:12.900  -->  00:11:14.790
My level that's only got one block in it.
205

205

00:11:14.790  -->  00:11:19.850
When I click on play you'll see over on
the left here game status disappears.
206

206

00:11:19.850  -->  00:11:22.650
But we have this DontDestroyOnLoad,
which appears, and
207

207

00:11:22.650  -->  00:11:26.050
Game Status is now
childed underneath that.
208

208

00:11:26.050  -->  00:11:29.306
So it now belongs to DontDestroyOnLoad,
which is saying,
209

209

00:11:29.306  -->  00:11:32.833
you're gonna stick around even
when the very next scene loads.
210

210

00:11:32.833  -->  00:11:35.513
And let's test that out
by plunking the scene,
211

211

00:11:35.513  -->  00:11:39.473
you can see DontDestroyOnLoad has
still stuck around which is great.
212

212

00:11:39.473  -->  00:11:41.840
Okay, with our game status in there.
213

213

00:11:41.840  -->  00:11:45.930
This is the game status
from our other scene
214

214

00:11:45.930  -->  00:11:49.220
is now in this level because we told
it not to be destroyed on load.
215

215

00:11:50.640  -->  00:11:55.140
And you can see if we go looking for
game status, the game status that
216

216

00:11:55.140  -->  00:11:59.590
would have loaded on this particular scene
is not there because it was destroyed.
217

217

00:11:59.590  -->  00:12:01.700
It was told not to load.
218

218

00:12:01.700  -->  00:12:05.110
Okay, now you probably also saw, I clicked
off play a little bit quickly there, but
219

219

00:12:05.110  -->  00:12:08.090
you saw that our score
wasn't updating properly.
220

220

00:12:08.090  -->  00:12:08.870
That's a good one.
221

221

00:12:08.870  -->  00:12:12.570
That's one of those ones that if you want
to challenge then pause the video now and
222

222

00:12:12.570  -->  00:12:16.800
have a think about why is it, see if
you can hunt down what's going on here.
223

223

00:12:16.800  -->  00:12:22.670
Why currently is our score not updating
properly when we finish this level and
224

224

00:12:22.670  -->  00:12:23.570
go to the other level?
225

225

00:12:23.570  -->  00:12:26.630
This is a little bit of an advanced one so
let me do it one more time for you.
226

226

00:12:26.630  -->  00:12:30.680
See how it's not updating back to zero,
which was what it was doing before, and
227

227

00:12:30.680  -->  00:12:32.230
it's not updating with the previous score.
228

228

00:12:32.230  -->  00:12:35.530
So jump in and see if you can figure that
out if you want a more advanced challenge.
229

229

00:12:36.720  -->  00:12:39.290
If you don't want a more advanced
challenge then let's do this together.
230

230

00:12:39.290  -->  00:12:44.450
So,what going on is when we're
playing from this scene,
231

231

00:12:44.450  -->  00:12:50.350
we're saying the game canvas with
the Score Text is linked to Game Status.
232

232

00:12:50.350  -->  00:12:54.090
So Game Status over here we can see
what is my Score Text we're saying these
233

233

00:12:54.090  -->  00:12:58.880
very specific GameObject just here,
we've dragged that in to say,
234

234

00:12:58.880  -->  00:13:00.970
you are connected to that one there.
235

235

00:13:00.970  -->  00:13:05.426
When we go into the other scene, then the
don't destroy on load is still remembering
236

236

00:13:05.426  -->  00:13:07.392
the score text from the other scene.
237

237

00:13:07.392  -->  00:13:12.215
But this score text that we've
currently created in this scene
238

238

00:13:12.215  -->  00:13:14.399
belongs to this hierarchy.
239

239

00:13:14.399  -->  00:13:19.245
Okay so this score text here belongs to
the level one hierarchy whereas the other
240

240

00:13:19.245  -->  00:13:22.450
score text belongs to
the level two hierarchy.
241

241

00:13:22.450  -->  00:13:25.200
Now the way we're gonna get
around this is pretty cool.
242

242

00:13:25.200  -->  00:13:27.840
The way we are gonna get
around this is by saying
243

243

00:13:27.840  -->  00:13:31.060
our Singleton pattern
is now on game status.
244

244

00:13:31.060  -->  00:13:34.000
Remember we just put that in our
game status script that says
245

245

00:13:34.000  -->  00:13:37.580
anything to do with game
status don't destroy on load.
246

246

00:13:37.580  -->  00:13:40.700
This also applies,
the Singleton pattern also applies
247

247

00:13:40.700  -->  00:13:44.580
to any children that sit
underneath don't destroy on load.
248

248

00:13:44.580  -->  00:13:50.460
So if I grab our game canvas,
drag it down underneath game status.
249

249

00:13:50.460  -->  00:13:52.510
It is now sitting down there.
250

250

00:13:52.510  -->  00:13:55.680
Anything under game status
with it's Singleton pattern
251

251

00:13:55.680  -->  00:13:59.750
is also going to apply to
these elements down here.
252

252

00:13:59.750  -->  00:14:00.820
These game objects down here.
253

253

00:14:00.820  -->  00:14:03.890
So our game canvas won't destroy,
our score text won't destroy and
254

254

00:14:03.890  -->  00:14:08.455
where we're saying that game status is
looking for a particular score text,
255

255

00:14:08.455  -->  00:14:11.930
well this whole bunch is going
to continue into the next scene.
256

256

00:14:11.930  -->  00:14:15.150
I'm gonna apply the prefab game
status because we made a change, so
257

257

00:14:15.150  -->  00:14:19.880
I'll apply the prefab and you'll see that
our score text is no longer bold, so
258

258

00:14:19.880  -->  00:14:23.020
we know that this connection
is all being made here.
259

259

00:14:23.020  -->  00:14:27.720
I need to save this, go over into my
other scene and in my other scene,
260

260

00:14:27.720  -->  00:14:33.360
I'm going to find the game canvas and
delete that.
261

261

00:14:33.360  -->  00:14:38.870
Because if I open up game status you'll
see that our game status prefab,
262

262

00:14:38.870  -->  00:14:40.640
clever prefabs that they are,
263

263

00:14:40.640  -->  00:14:44.130
it knows that game canvas should
now be underneath game status.
264

264

00:14:44.130  -->  00:14:47.320
And the game canvas here was the same
as the game canvas up there.
265

265

00:14:47.320  -->  00:14:48.800
So we don't need two of them.
266

266

00:14:48.800  -->  00:14:51.950
And to make sure that I am
using the prefab as we want to,
267

267

00:14:51.950  -->  00:14:56.960
I'm just gonna delete this current
game status and drag in my prefab.
268

268

00:14:56.960  -->  00:15:01.140
Have a look on that, when we click there,
it does have a score text.
269

269

00:15:01.140  -->  00:15:02.400
What score text is it looking for?
270

270

00:15:02.400  -->  00:15:04.660
It's looking for
the score text that sits underneath it.
271

271

00:15:04.660  -->  00:15:08.505
When we click play then it
should update itself nicely.
272

272

00:15:08.505  -->  00:15:11.033
[SOUND] It does,
the blocks are being destroyed.
273

273

00:15:11.033  -->  00:15:13.844
Let me do just a very quick test
to make sure that we can go from
274

274

00:15:13.844  -->  00:15:18.100
this level to the other level by getting
rid of all the blocks except for one.
275

275

00:15:18.100  -->  00:15:19.365
And I'll click on play.
276

276

00:15:19.365  -->  00:15:22.569
And then if we go to
the next level with 83.
277

277

00:15:22.569  -->  00:15:26.050
What I need to do is change
the level execution order.
278

278

00:15:26.050  -->  00:15:28.040
This is a little bit of
forcing it into shape but
279

279

00:15:28.040  -->  00:15:31.960
I wanna double triple check that
this flow all works as it should.
280

280

00:15:31.960  -->  00:15:35.342
So I've just switched my two scenes around
so now it's gonna start at level one and
281

281

00:15:35.342  -->  00:15:36.038
go to level two.
282

282

00:15:36.038  -->  00:15:39.012
When I complete this level,
we should be loading level two.
283

283

00:15:39.012  -->  00:15:43.568
If the score continues to 83
then we know that all is good.
284

284

00:15:43.568  -->  00:15:48.340
Excellente, so the final step
that we needed to do was just to
285

285

00:15:48.340  -->  00:15:51.711
get rid of all of our
existing the canvas and
286

286

00:15:51.711  -->  00:15:56.121
the game status that was in our,
for me it was level one.
287

287

00:15:56.121  -->  00:16:00.342
And to re-dragging up prefabs so
Game Status with the proper
288

288

00:16:00.342  -->  00:16:04.316
connection between Game Status and
Score Text exists and
289

289

00:16:04.316  -->  00:16:08.980
that's the connection that
we have down on our prefab.
290

290

00:16:08.980  -->  00:16:09.590
A new one.
291

291

00:16:09.590  -->  00:16:11.530
Hopefully I can undo all
my blocks I just deleted.
292

292

00:16:11.530  -->  00:16:12.439
Let me do a few undoes.
293

293

00:16:12.439  -->  00:16:13.237
There we go.
294

294

00:16:13.237  -->  00:16:15.049
I have all the blocks back in.
295

295

00:16:15.049  -->  00:16:16.967
Okay cool.
So I know this is a little bit heavy and
296

296

00:16:16.967  -->  00:16:18.242
I've gone really slow.
297

297

00:16:18.242  -->  00:16:21.206
This is probably a huge lecture
in terms of length of time but
298

298

00:16:21.206  -->  00:16:24.280
I wanted to go very slow and
careful and deliberate on it.
299

299

00:16:24.280  -->  00:16:27.530
We've created ourselves a Singleton
pattern which is basically just a way
300

300

00:16:27.530  -->  00:16:29.530
of saying there can be only one.
301

301

00:16:29.530  -->  00:16:31.950
If anything else comes
along then destroy it.
302

302

00:16:31.950  -->  00:16:35.500
And at the same time,
keep the only one, keep the only one so
303

303

00:16:35.500  -->  00:16:38.110
that when we load a new
level it continues to exist.
304

304

00:16:38.110  -->  00:16:41.070
And we also had a little bit of
reconnecting up of our text to
305

305

00:16:41.070  -->  00:16:45.720
make sure it works, as well as looking at
the fact that singletons apply to children
306

306

00:16:45.720  -->  00:16:46.630
that sit underneath it.
307

307

00:16:46.630  -->  00:16:49.550
Anything that sits underneath
the place that we've got our Singleton
308

308

00:16:49.550  -->  00:16:52.090
will be protected when
we load our new scene.
309

309

00:16:52.090  -->  00:16:52.710
So great work.
310

310

00:16:52.710  -->  00:16:55.730
If you have any questions at all
please throw them in the Q&amp;A.
311

311

00:16:55.730  -->  00:16:57.100
I'd love to hear from you.
312

312

00:16:57.100  -->  00:17:02.190
If this made sense to you then I also love
to hear from you to see that you've got it
313

313

00:17:02.190  -->  00:17:03.150
and you know what's going on.
314

314

00:17:03.150  -->  00:17:04.930
So great stuff and
I'll see you in the next lecture.
