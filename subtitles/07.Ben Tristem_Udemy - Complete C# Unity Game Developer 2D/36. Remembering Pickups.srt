1
1

00:00:00,025  -->  00:00:04,001
[MUSIC]
2

2

00:00:04,001  -->  00:00:06,774
In this video,
we're gonna close our game loop by saying,
3

3

00:00:06,774  -->  00:00:09,500
when the player runs over these coins,
the score goes up.
4

4

00:00:09,500  -->  00:00:13,360
But if the player accidentally dies,
then those coins don't respond again.
5

5

00:00:13,360  -->  00:00:16,420
They're gone,
until the point where we die enough times,
6

6

00:00:16,420  -->  00:00:17,480
go all the way back to the start.
7

7

00:00:17,480  -->  00:00:20,172
Hit the start button, and
then those coins come back again.
8

8

00:00:20,172  -->  00:00:23,560
We're gonna do that by creating
a scene persist game object and
9

9

00:00:23,560  -->  00:00:25,950
a scene persist script.
10

10

00:00:25,950  -->  00:00:27,950
So let's jump in and get started.
11

11

00:00:27,950  -->  00:00:29,320
I think with our current feature set,
12

12

00:00:29,320  -->  00:00:35,080
this is the last real step to getting
our game having a complete game flow.
13

13

00:00:35,080  -->  00:00:37,582
So what we'll do, starting off, is to,
14

14

00:00:37,582  -->  00:00:42,280
in our hierarchy we're gonna right-click
and create an empty game object.
15

15

00:00:42,280  -->  00:00:49,710
We'll call this scene persist,
ScenePersist.
16

16

00:00:49,710  -->  00:00:54,670
So basically this is saying anything that
we want to have persist within the scene
17

17

00:00:54,670  -->  00:00:58,090
will be fitting underneath
this game object.
18

18

00:00:58,090  -->  00:01:00,950
I'm going to reset that transform.
19

19

00:01:00,950  -->  00:01:05,020
And then drag that down into our Prefabs
folder down here to prefab that.
20

20

00:01:05,020  -->  00:01:05,690
While I'm at it,
21

21

00:01:05,690  -->  00:01:09,200
we haven't prefabed Level Exit nor
let's prefab that while we're here.
22

22

00:01:09,200  -->  00:01:10,860
Anything you can prefab you should,
23

23

00:01:10,860  -->  00:01:13,070
particularly when we're
got tons of levels.
24

24

00:01:13,070  -->  00:01:15,120
We need to just be
dragging them into place.
25

25

00:01:15,120  -->  00:01:18,990
We can't prefab our tilemap grid,
because it's different in every scene.
26

26

00:01:18,990  -->  00:01:23,230
We can't do the same for
pick-ups for the same reason.
27

27

00:01:23,230  -->  00:01:25,010
Okay, but we've got now ScenePersist.
28

28

00:01:25,010  -->  00:01:29,923
What we're gonna do is add a component
to this which will be a script
29

29

00:01:29,923  -->  00:01:32,045
we'll call ScenePersist.
30

30

00:01:32,045  -->  00:01:37,072
You've got it, and we'll create that,
open up that script.
31

31

00:01:37,072  -->  00:01:38,934
Okay, blank canvas here, actually first,
32

32

00:01:38,934  -->  00:01:40,750
what I'm gonna do is
just explain my logic.
33

33

00:01:40,750  -->  00:01:43,469
So, in ScenePersist,
we're gonna do the same as
34

34

00:01:43,469  -->  00:01:47,891
same as GameSession where we have our
GameSession has a Singleton Pattern on it.
35

35

00:01:47,891  -->  00:01:51,320
Destroy if there's already one existing,
don't destroy unload.
36

36

00:01:51,320  -->  00:01:53,060
We need to do the same
with our ScenePersist.
37

37

00:01:53,060  -->  00:01:57,262
And then underneath our ScenePersist,
we put anything that we want to have
38

38

00:01:57,262  -->  00:02:01,338
survive when the player dies,
to remember that, when the player dies.
39

39

00:02:01,338  -->  00:02:03,927
But when the player goes
on to the next level,
40

40

00:02:03,927  -->  00:02:06,529
that's when we want to
reset that progress.
41

41

00:02:06,529  -->  00:02:09,892
And we have a big bucket at
the moment which is Pick-ups,
42

42

00:02:09,892  -->  00:02:14,307
which I'm gonna drag underneath there,
similar to within GameSession,
43

43

00:02:14,307  -->  00:02:18,440
we dragged under our UI our hard
canvas under there our UI canvas.
44

44

00:02:18,440  -->  00:02:19,860
We can do the same with Pick-ups.
45

45

00:02:19,860  -->  00:02:22,990
We'll have a slightly different
set of rules for ScenePersist.
46

46

00:02:22,990  -->  00:02:24,540
So my challenge to you is a big one.
47

47

00:02:24,540  -->  00:02:27,700
But I think it's one that you've got
all the tools to accommodate, and
48

48

00:02:27,700  -->  00:02:30,410
that is to create scene persistence.
49

49

00:02:30,410  -->  00:02:34,430
So here are the steps, use a Singleton
Pattern for the class, very similar to
50

50

00:02:34,430  -->  00:02:38,420
what we did for the GameSession.cs,
in fact, identical to what we did.
51

51

00:02:38,420  -->  00:02:43,160
But changing out GameSession for
ScenePersist.
52

52

00:02:43,160  -->  00:02:48,130
And then next step is to determine
the scene's build index at the start.
53

53

00:02:48,130  -->  00:02:52,953
So if the index is 2, it's Level 2, for
example, then we want to know that.
54

54

00:02:52,953  -->  00:02:57,750
Because in our last step,
we destroy the game object
55

55

00:02:57,750  -->  00:03:02,160
if the scene's build index is not
the same as the starting index.
56

56

00:03:02,160  -->  00:03:03,260
So we've got that code,
57

57

00:03:03,260  -->  00:03:06,370
all these pieces of code we've created
already throughout the project.
58

58

00:03:06,370  -->  00:03:08,960
So might be a little bit of grabbing
from here and grabbing from there.
59

59

00:03:08,960  -->  00:03:10,660
But you should have everything you need.
60

60

00:03:10,660  -->  00:03:13,510
Those are the steps to put
inside the script here,
61

61

00:03:13,510  -->  00:03:16,320
inside our ScenePersist script.
62

62

00:03:16,320  -->  00:03:22,170
So that we can have that attached to our
game object, our ScenePersist game object.
63

63

00:03:22,170  -->  00:03:26,570
So that anything underneath that doesn't
get destroyed when the scene reloads.
64

64

00:03:26,570  -->  00:03:27,872
Okay, so there's your challenge.
65

65

00:03:27,872  -->  00:03:28,880
Give that your best shot, and
66

66

00:03:28,880  -->  00:03:31,890
I'll see you back here when you
have given it that best shot.
67

67

00:03:33,320  -->  00:03:35,310
Okay welcome back,
I hope you went well with that.
68

68

00:03:35,310  -->  00:03:38,650
I hope you gave it a really big shot and
I hope you had some success.
69

69

00:03:38,650  -->  00:03:41,920
Let's go through it together, so you can
see my working through this process.
70

70

00:03:41,920  -->  00:03:45,420
In our ScenePersist script,
we need to do something on awake.
71

71

00:03:45,420  -->  00:03:50,480
The very first thing that's gonna
be happening void Awake when our
72

72

00:03:50,480  -->  00:03:57,050
script fires up is we need to type it in
correctly for a starting point, okay?
73

73

00:03:57,050  -->  00:04:02,005
Is to start with an integer,
which is the number of the ScenePersist.
74

74

00:04:02,005  -->  00:04:06,402
Now our ScenePersist = FindObjects,
remember we need that s in there.
75

75

00:04:06,402  -->  00:04:11,074
That's one that can be one that can
be a little bit tricky ObjectsOfType.
76

76

00:04:11,074  -->  00:04:14,594
And we need to find ScenePersist
is the object of type.
77

77

00:04:14,594  -->  00:04:18,941
And then we need to get the length,
cuz we're looking for objects,
78

78

00:04:18,941  -->  00:04:21,750
so it knows how many there are.
79

79

00:04:21,750  -->  00:04:28,725
Length, and
then a simple if num of (numScenePersist
80

80

00:04:28,725  -->  00:04:33,280
&gt; 1), then we need to do a thing.
81

81

00:04:33,280  -->  00:04:34,360
What is the thing we need to do?
82

82

00:04:34,360  -->  00:04:39,062
Well, we need to Destroy this
gameObject with a small g,
83

83

00:04:39,062  -->  00:04:46,650
Destroy(gameObject); else.
84

84

00:04:46,650  -->  00:04:48,050
What is the case if it's else?
85

85

00:04:48,050  -->  00:04:51,720
Else we do our DontDestroyOnLoad, and
86

86

00:04:51,720  -->  00:04:56,080
again we'll just tell it it's for
this gameObject, DontDestroyOnLoad.
87

87

00:04:56,080  -->  00:04:58,300
Okay, the next thing we do,
part of our challenge,
88

88

00:04:58,300  -->  00:05:00,440
determine the scenes
build index at the start.
89

89

00:05:00,440  -->  00:05:05,701
Well, let's create ourselves
an integer which is startingSceneIndex.
90

90

00:05:05,701  -->  00:05:07,945
So that we know what that is.
91

91

00:05:07,945  -->  00:05:12,272
And then in our start method, we need
to say what's startingSceneIndex =.
92

92

00:05:12,272  -->  00:05:13,517
What's this gonna be?
93

93

00:05:13,517  -->  00:05:18,423
Well, we need to make sure,
first of all we're using the namespace,
94

94

00:05:18,423  -->  00:05:23,183
so I'm back up at the start using
UnityEngine.SceneManagement.
95

95

00:05:23,183  -->  00:05:26,020
So that we know about our SceneManagement.
96

96

00:05:26,020  -->  00:05:30,686
Then back down here, startingSceneIndex =
97

97

00:05:30,686  -->  00:05:36,360
SceneManager.GetActiveScene().buildIndex.
98

98

00:05:36,360  -->  00:05:40,160
Okay, I think that looks good.
99

99

00:05:40,160  -->  00:05:42,010
So now we have our startingSceneIndex.
100

100

00:05:42,010  -->  00:05:45,990
Index is basically whatever
the buildIndex is for this scene.
101

101

00:05:45,990  -->  00:05:46,540
And then now,
102

102

00:05:46,540  -->  00:05:50,890
in our update, we can be checking to make
sure that we're still on that index.
103

103

00:05:50,890  -->  00:05:53,408
So that was the last
step in this challenge.
104

104

00:05:53,408  -->  00:05:57,010
Destroy if the scene's build index
is not the same as starting index.
105

105

00:05:57,010  -->  00:06:02,038
So we need to know what
the current scene index is,
106

106

00:06:02,038  -->  00:06:05,767
so we've got something to compare.
107

107

00:06:05,767  -->  00:06:11,378
So we'll define that as a variable,
say currentSceneIndex
108

108

00:06:11,378  -->  00:06:16,670
=
SceneManager.GetActiveScene().buildIndex.
109

109

00:06:16,670  -->  00:06:19,110
Okay, so
now we know here's the startingSceneIndex,
110

110

00:06:19,110  -->  00:06:20,670
here's the currentSceneIndex.
111

111

00:06:20,670  -->  00:06:26,530
Let's do an if statement, if
(currentSceneIndex does not equal, so !=.
112

112

00:06:26,530  -->  00:06:30,760
Does not equal startingSceneIndex.
113

113

00:06:30,760  -->  00:06:33,225
So if they're not in alignment,
114

114

00:06:33,225  -->  00:06:38,250
if the moons aren't in alignment,
then Destroy(gameObject).
115

115

00:06:40,000  -->  00:06:45,095
Okay, so just very quickly on that,
we've created a singleton at the top here,
116

116

00:06:45,095  -->  00:06:48,600
DontDestoryOnLoad, which said
what's the startingSceneIndex.
117

117

00:06:48,600  -->  00:06:51,309
And then we've compared
the currentSceneIndex to
118

118

00:06:51,309  -->  00:06:52,770
the startingSceneIndex.
119

119

00:06:52,770  -->  00:06:55,160
And then, if they're not the same,
then we destroy.
120

120

00:06:55,160  -->  00:06:59,480
Save that, back over into here,
back over into our scene.
121

121

00:06:59,480  -->  00:07:02,260
Make sure that SceneIndex does have the
script underneath that will make sure all
122

122

00:07:02,260  -->  00:07:05,980
the Pick-ups are sitting underneath
ScenePersist, click on Play.
123

123

00:07:07,330  -->  00:07:10,014
Hopefully our score is accurate,
yes, 0 and 3.
124

124

00:07:10,014  -->  00:07:11,000
Pick-up, and
125

125

00:07:11,000  -->  00:07:16,160
when we pick things up, now if we die,
ah-ha, our coins are no longer there.
126

126

00:07:16,160  -->  00:07:18,290
We've picked them up,
we can only pick them up once.
127

127

00:07:18,290  -->  00:07:21,300
And then, when we get new coins,
it should be the same thing.
128

128

00:07:21,300  -->  00:07:24,210
It remembers those coins,
this one is still left on the same blump.
129

129

00:07:24,210  -->  00:07:26,750
And then the other thing to
make sure we do is when we die,
130

130

00:07:26,750  -->  00:07:30,030
we start the game and they're all
back again where they should be.
131

131

00:07:30,030  -->  00:07:32,400
So that's a really lovely
part of our core game loop.
132

132

00:07:32,400  -->  00:07:34,950
The fact that we can play
the game properly as a player.
133

133

00:07:34,950  -->  00:07:38,002
We feel good that the game remembers
the things that we've done.
134

134

00:07:38,002  -->  00:07:40,080
We feel smart that it
knows what we've done.
135

135

00:07:40,080  -->  00:07:43,950
We can go into the next level,
we can die, we keep our score,
136

136

00:07:43,950  -->  00:07:46,440
we decrement our number of lives.
137

137

00:07:46,440  -->  00:07:49,610
And then, when we start the whole thing
all over again, we start from scratch.
138

138

00:07:49,610  -->  00:07:51,200
So it's a really great step here.
139

139

00:07:51,200  -->  00:07:53,710
This is, I think,
a really natural point in our game loop,
140

140

00:07:53,710  -->  00:07:56,860
though we've got all the core
functionality in, so really great work.
141

141

00:07:56,860  -->  00:07:59,000
Give yourself a huge high five.
142

142

00:07:59,000  -->  00:08:03,090
There's tons of customization and
variation and changing the way things look
143

143

00:08:03,090  -->  00:08:07,710
on the screen, adding different aspects,
and bling, and bounces and particles.
144

144

00:08:07,710  -->  00:08:10,964
There's lots more that we can do, but I
wanna really celebrate the fact that we've
145

145

00:08:10,964  -->  00:08:14,499
got our core game loop in a way that's
allowed us to have some really clever
146

146

00:08:14,499  -->  00:08:18,154
persistence in at the game level and
also in at the scene level.
147

147

00:08:18,154  -->  00:08:20,594
So, great work, and
I'll see you in an upcoming video!
