WEBVTT
1
1

00:00:00.025  -->  00:00:03.770
[MUSIC]
2

2

00:00:03.770  -->  00:00:07.971
In this video, we'll start the process
of allowing the player to win on
3

3

00:00:07.971  -->  00:00:11.541
a level by adding up the number
of blocks that are now seen, so
4

4

00:00:11.541  -->  00:00:13.870
we know how many blocks are remaining.
5

5

00:00:13.870  -->  00:00:15.970
And if it gets to zero,
the player has won.
6

6

00:00:15.970  -->  00:00:20.820
So, let's jump in and start the process
of giving a player a chance to win.
7

7

00:00:20.820  -->  00:00:21.840
Let's look at our flow here.
8

8

00:00:21.840  -->  00:00:23.320
Here's Our Workflow To Win A Level.
9

9

00:00:23.320  -->  00:00:25.490
I'll break this over
the next two lectures.
10

10

00:00:25.490  -->  00:00:27.740
So I'll show you the process for
two lectures and
11

11

00:00:27.740  -->  00:00:29.140
then we'll just do half of it now.
12

12

00:00:29.140  -->  00:00:31.030
We need to create a level GameObject and
13

13

00:00:31.030  -->  00:00:34.950
a script so we have a way of keeping
track of where we are in the level.
14

14

00:00:34.950  -->  00:00:37.950
We need a variable to keep
track specifically of
15

15

00:00:37.950  -->  00:00:40.540
how many breakable blocks
there are at the start and
16

16

00:00:40.540  -->  00:00:43.150
how many breakable blocks there
currently are in the game.
17

17

00:00:43.150  -->  00:00:45.390
We need a method to add
up all of the blocks.
18

18

00:00:45.390  -->  00:00:47.980
We need a method to signal
that a block was broken.
19

19

00:00:47.980  -->  00:00:52.061
And we need an if statement to load
the next level if the blocks reach 0.
20

20

00:00:52.061  -->  00:00:56.076
And then to tell each block to add
itself to the total at start, and
21

21

00:00:56.076  -->  00:00:59.590
then to tell each block to
remove itself when destroyed.
22

22

00:00:59.590  -->  00:01:03.855
So that might seem like a big old list of,
I don't know how to do it.
23

23

00:01:03.855  -->  00:01:06.605
If that's the case, no problems,
we're about to go through it together.
24

24

00:01:06.605  -->  00:01:07.785
And if you're new to programming,
25

25

00:01:07.785  -->  00:01:11.035
you shouldn't necessarily know
exactly how to do this just yet.
26

26

00:01:11.035  -->  00:01:14.956
But if you wanna take on a big challenge,
a big whopper of a challenge,
27

27

00:01:14.956  -->  00:01:19.210
have a look at this list here should be
all you need to create the process where
28

28

00:01:19.210  -->  00:01:22.487
destroying the last block in
a scene loads the next scene.
29

29

00:01:22.487  -->  00:01:26.777
So there's a bit of a mega challenge for
you if you're ready to take that on.
30

30

00:01:26.777  -->  00:01:29.000
If not no problem.
31

31

00:01:29.000  -->  00:01:30.490
So what we need to do, first of all,
32

32

00:01:30.490  -->  00:01:34.130
is create ourselves an empty game object,
we'll call this Level.
33

33

00:01:35.420  -->  00:01:39.160
And as we do, we'll reset, so
right-click reset transform.
34

34

00:01:39.160  -->  00:01:41.090
Reset transform, I should say.
35

35

00:01:41.090  -->  00:01:45.980
And this very early stage,
I am going to create this as a Prefab.
36

36

00:01:45.980  -->  00:01:49.570
Drag down into our Prefabs folder So
it's a Prefab straight away.
37

37

00:01:49.570  -->  00:01:51.130
So any changes we do,
38

38

00:01:51.130  -->  00:01:54.280
we need to remember to click apply
to apply it back to the prefab.
39

39

00:01:54.280  -->  00:01:58.470
This is something important that will
allow us to use this level prefab
40

40

00:01:58.470  -->  00:01:59.330
in multiple levels.
41

41

00:01:59.330  -->  00:02:04.280
Okay, next up we need to add a component
and this will be a script called level.
42

42

00:02:04.280  -->  00:02:07.020
So level, new script, create and add.
43

43

00:02:08.390  -->  00:02:10.395
Excellent, let's open
up that Level script.
44

44

00:02:10.395  -->  00:02:13.900
Double-click on that and
while it's loading up,
45

45

00:02:13.900  -->  00:02:18.880
I will be a good individual and
find where we just created that.
46

46

00:02:18.880  -->  00:02:20.360
It's in our Assets folder.
47

47

00:02:20.360  -->  00:02:24.380
Drag it into Scripts, so
it's sitting in there nice and neatly.
48

48

00:02:24.380  -->  00:02:25.572
And I don't think it did load.
49

49

00:02:25.572  -->  00:02:26.922
So we'll triple-click on it,
that should load that time.
50

50

00:02:26.922  -->  00:02:31.360
There we go, just needed that extra
clicks, three clicks is a winner.
51

51

00:02:32.690  -->  00:02:34.860
Okay, so
within level what do we need to do?
52

52

00:02:34.860  -->  00:02:35.930
First of all,
53

53

00:02:35.930  -->  00:02:41.250
we need to give ourselves a way of keeping
track of how many blocks are remaining.
54

54

00:02:41.250  -->  00:02:46.760
So as I int breakable,
breakable blocks as a variable.
55

55

00:02:46.760  -->  00:02:49.930
And you know what I'm gonna do,
is I will serialize this.
56

56

00:02:49.930  -->  00:02:53.570
So, serialize field, so
that we can see it in the inspector so
57

57

00:02:53.570  -->  00:02:54.830
we know how many are remaining.
58

58

00:02:54.830  -->  00:02:56.770
This allows to do some debugging.
59

59

00:02:56.770  -->  00:02:57.816
Let's make a note here.
60

60

00:02:57.816  -->  00:03:03.361
Serialized for debugging purposes.
61

61

00:03:04.640  -->  00:03:07.892
Just in case we wondering,
serialize, serialized, serialized,
62

62

00:03:07.892  -->  00:03:09.670
I think that's how we spell it.
63

63

00:03:09.670  -->  00:03:12.720
Just in case we we're wondering in
the further why on earth do we make that
64

64

00:03:12.720  -->  00:03:19.100
available because we don't want ourselves
or a designer to come in and say you
65

65

00:03:19.100  -->  00:03:22.900
know what instead of 50 breakableBlocks
at that start, I think maybe there's 80.
66

66

00:03:22.900  -->  00:03:24.670
So, we're not doing this so
we can change it,
67

67

00:03:24.670  -->  00:03:27.220
we're just doing it so that we can see it.
68

68

00:03:27.220  -->  00:03:31.540
Okay, save that and continue on next,
you know, what I'll just remove this and
69

69

00:03:31.540  -->  00:03:32.380
start an update methods.
70

70

00:03:32.380  -->  00:03:33.970
We're not gonna need those at the moment,
71

71

00:03:33.970  -->  00:03:37.690
I like to remove them until we need
them to keep everything nice and clean.
72

72

00:03:37.690  -->  00:03:42.610
What we'll need to do is make
a public method, so public void.
73

73

00:03:42.610  -->  00:03:43.440
What should we call this?
74

74

00:03:43.440  -->  00:03:47.807
We'll call this count breakable blocks,
75

75

00:03:47.807  -->  00:03:51.050
which sounds like a Sesame Street
character, but it's not.
76

76

00:03:51.050  -->  00:03:56.300
Count breakable blocks, no semicolon
Rick and open and close parenthesis.
77

77

00:03:56.300  -->  00:03:59.260
And open and close curly brackets.
78

78

00:03:59.260  -->  00:04:00.310
What do we need to do in here?
79

79

00:04:00.310  -->  00:04:04.790
Well, basically what we're saying
is each time this method is called,
80

80

00:04:04.790  -->  00:04:09.350
we want to add one more breakable block
to the total number of breakable blocks.
81

81

00:04:09.350  -->  00:04:14.030
So we'll say breakableBlocks,
what do you think we do next?
82

82

00:04:14.030  -->  00:04:15.590
We say plus, plus.
83

83

00:04:15.590  -->  00:04:20.390
That just means take whatever your value
is now and add one more to yourself.
84

84

00:04:20.390  -->  00:04:25.550
Okay, so we should now have
a way of saying yes, we do.
85

85

00:04:25.550  -->  00:04:28.310
How many breakable blocks
are there in our scene and
86

86

00:04:28.310  -->  00:04:31.610
a way of increasing the number
of breakable blocks.
87

87

00:04:31.610  -->  00:04:34.690
Now, I'm gonna show you something new
that we haven't gone through before.
88

88

00:04:34.690  -->  00:04:37.270
If we go over two block over here.
89

89

00:04:37.270  -->  00:04:41.630
We need a way for us to access our public
method that we've just created and
90

90

00:04:41.630  -->  00:04:46.480
we've done this before but we've done it
before in more of direct way of creating
91

91

00:04:46.480  -->  00:04:50.500
a field in the inspector and
then pointing something to that.
92

92

00:04:50.500  -->  00:04:53.030
So, for
example we could this is an example.
93

93

00:04:53.030  -->  00:04:55.128
I'm going to delete this in an moment,
so no need to follow along.
94

94

00:04:55.128  -->  00:04:57.280
We can [INAUDIBLE] serialized field.
95

95

00:04:57.280  -->  00:04:59.670
Something that is of type level.
96

96

00:04:59.670  -->  00:05:02.370
And we'll call it level as a variable.
97

97

00:05:02.370  -->  00:05:05.470
So we need something type
level that is called level.
98

98

00:05:05.470  -->  00:05:06.850
If we were to save this.
99

99

00:05:06.850  -->  00:05:12.510
Jump over to our inspector now while
clicking on, what were we in just before?
100

100

00:05:12.510  -->  00:05:14.000
We were on block.
101

101

00:05:14.000  -->  00:05:15.500
While clicking on block.
102

102

00:05:15.500  -->  00:05:19.912
We can find one of our blocks, and
we can see down here there's a level, and
103

103

00:05:19.912  -->  00:05:23.640
we go and drag our level, [SOUND],
and drag that over into here.
104

104

00:05:23.640  -->  00:05:27.490
So that's the linking
up way of doing things.
105

105

00:05:27.490  -->  00:05:32.370
Totally cool, gives you a lot of control,
and it certainly is idiot proof because
106

106

00:05:32.370  -->  00:05:36.320
If we,
the only way that we can access level and
107

107

00:05:36.320  -->  00:05:38.620
call the methods that we've
just created on level,
108

108

00:05:38.620  -->  00:05:42.570
we've created them in our level script
which is on our level game object the only
109

109

00:05:42.570  -->  00:05:47.087
way to access those is if we've gone and
dragged our level over into here.
110

110

00:05:47.087  -->  00:05:48.476
So that's one way of doing it.
111

111

00:05:48.476  -->  00:05:52.433
I'm going to remove this because
that's not how we'll do it,
112

112

00:05:52.433  -->  00:05:57.250
we'll do a new thing, which is gonna
be cool, which is find object of type.
113

113

00:05:57.250  -->  00:06:01.660
So we still need to have a variable so
we can cached our reference, and
114

114

00:06:01.660  -->  00:06:03.070
we have done that in previous videos.
115

115

00:06:03.070  -->  00:06:05.470
So level, level.
116

116

00:06:05.470  -->  00:06:08.839
It's a of type level and this will be our,
117

117

00:06:08.839  -->  00:06:15.080
I'll just make a note in here,
cached reference that we are caching.
118

118

00:06:15.080  -->  00:06:17.460
We need to put back in our start method.
119

119

00:06:17.460  -->  00:06:20.660
So if you type in Start and
then Tab or Enter,
120

120

00:06:20.660  -->  00:06:22.500
that should autocomplete the rest of it.
121

121

00:06:22.500  -->  00:06:25.290
And we need to find the object of type.
122

122

00:06:25.290  -->  00:06:29.950
We haven't seen that before, so let me
type this in, FindObjectOfType, open and
123

123

00:06:29.950  -->  00:06:32.160
close the angle bracket.
124

124

00:06:32.160  -->  00:06:35.200
And what do you think the type
is that we're looking for?
125

125

00:06:36.330  -->  00:06:37.632
Well, the type is level.
126

126

00:06:37.632  -->  00:06:40.340
As straightforward as that.
127

127

00:06:40.340  -->  00:06:45.030
Now we're saying find an object of type
level but what do we want to do with this?
128

128

00:06:45.030  -->  00:06:47.770
Now, let's put my open and
close brackets in here while I remember.
129

129

00:06:47.770  -->  00:06:51.601
Well, we need to assign Level to be that,
so
130

130

00:06:51.601  -->  00:06:57.210
we'll say level equals
FindObjectOfType and then semicolon.
131

131

00:06:57.210  -->  00:07:01.796
So just to repeat that we're looking for
a particular type of thing that is level,
132

132

00:07:01.796  -->  00:07:02.930
that's our class.
133

133

00:07:02.930  -->  00:07:07.770
And our class level has all of our public
methods that we're creating that we
134

134

00:07:07.770  -->  00:07:10.037
want our blocked to be able to call,
135

135

00:07:10.037  -->  00:07:14.650
for our blocked to be able to call it
we need access to level as a class.
136

136

00:07:14.650  -->  00:07:19.450
We're doing that by saying find object of
type level we're assigning that to our
137

137

00:07:19.450  -->  00:07:21.140
variable of level and
138

138

00:07:21.140  -->  00:07:24.380
then our variable level where
caching is a reference up here.
139

139

00:07:24.380  -->  00:07:29.850
So from this point on it knows whenever
we say level throughout our block script,
140

140

00:07:29.850  -->  00:07:33.200
it knows that it's talking about
finding this object of type, okay.
141

141

00:07:33.200  -->  00:07:35.450
Hopefully that's nice and super clear.
142

142

00:07:35.450  -->  00:07:40.890
And then the last step in this process is
the challenge that I have for you which is
143

143

00:07:40.890  -->  00:07:47.560
to update our Block.cs to call the method
for counting blocks in the Start method.
144

144

00:07:47.560  -->  00:07:51.420
Remember we need to find the Level
class using FindObjectOfType,
145

145

00:07:51.420  -->  00:07:53.000
which we have just done.
146

146

00:07:53.000  -->  00:07:58.370
So we now have access to Level, but
we need to include Level in what we do.
147

147

00:07:58.370  -->  00:07:59.830
Okay, so there's your challenge.
148

148

00:07:59.830  -->  00:08:04.810
Jump in and see if you can increment the
number of blocks we have in our scene and
149

149

00:08:04.810  -->  00:08:06.310
then test that it works.
150

150

00:08:06.310  -->  00:08:06.890
See you in a moment.
151

151

00:08:09.520  -->  00:08:12.740
Right, so we just need the one line
in here pretty straightforward.
152

152

00:08:12.740  -->  00:08:17.830
We're saying level dot and
then what is the name of our method?
153

153

00:08:17.830  -->  00:08:20.930
Well it was CountBreakableBlocks.
154

154

00:08:20.930  -->  00:08:23.390
Open and close parenthesis,
we're not passing anything in.
155

155

00:08:23.390  -->  00:08:24.650
Semicolon.
156

156

00:08:24.650  -->  00:08:26.890
So now from within block.
157

157

00:08:26.890  -->  00:08:30.160
It is saying, call this method
158

158

00:08:30.160  -->  00:08:34.610
that method is saying add one
to the total number of blocks.
159

159

00:08:34.610  -->  00:08:37.430
The total number of blocks is
stored in breakableBlocks.
160

160

00:08:37.430  -->  00:08:38.870
So, let's jump over into our scene.
161

161

00:08:38.870  -->  00:08:41.370
Now, we saved those,
jump into our scene and
162

162

00:08:41.370  -->  00:08:43.970
nothing will happen until we click play.
163

163

00:08:43.970  -->  00:08:45.440
But I'm just gonna click on Level here.
164

164

00:08:45.440  -->  00:08:48.450
You know what I'll do, is I don't
like Level sitting down outside.
165

165

00:08:48.450  -->  00:08:52.430
I'm just gonna drag Level up to near the
top, pulling underneath the Play Space.
166

166

00:08:52.430  -->  00:08:54.780
Just mentally for
me that makes more sense.
167

167

00:08:54.780  -->  00:08:56.230
Rather having it sitting all
the way down the bottom.
168

168

00:08:56.230  -->  00:08:58.350
So Level currently it says
Breakable Blocks zero.
169

169

00:08:58.350  -->  00:09:01.893
While we have to click Play
to call our start method and
170

170

00:09:01.893  -->  00:09:04.273
then you see breakable blocks ten.
171

171

00:09:04.273  -->  00:09:07.230
One, two, three, four, five,
six, seven, eight, nine, ten.
172

172

00:09:07.230  -->  00:09:08.670
Excellent.
173

173

00:09:08.670  -->  00:09:09.420
Fantastic.
174

174

00:09:09.420  -->  00:09:13.662
So we now have the total number of
breakable blocks being counted up at
175

175

00:09:13.662  -->  00:09:18.490
the start, which is going to give us
a mechanism to say when this reaches zero,
176

176

00:09:18.490  -->  00:09:20.410
we need to load our next level.
177

177

00:09:20.410  -->  00:09:22.030
And that's what we'll
do in the next video.
178

178

00:09:22.030  -->  00:09:23.650
So, great work and see you again soon.
