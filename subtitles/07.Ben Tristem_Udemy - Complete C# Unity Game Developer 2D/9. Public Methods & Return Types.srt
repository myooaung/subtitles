1
00:00:04,170 --> 00:00:09,050
Hallo nochmal, ich bin super begeistert von diesem Video, da wir zeigen werden, dass einige echte Fortschritte

2
00:00:09,060 --> 00:00:10,730
darin bestehen, die Informationen anzuzeigen.

3
00:00:10,740 --> 00:00:15,510
Die Geschichte aus unserem Skript wird sich in unserem Spiel widerspiegeln. Wir werden über öffentliche

4
00:00:15,510 --> 00:00:17,340
Methoden und über Rückgabetypen sprechen.

5
00:00:17,340 --> 00:00:22,770
Und obwohl wir nicht viel programmieren, wird es eine gewisse Komplexität und konzeptionelle Komplexität

6
00:00:22,770 --> 00:00:23,530
geben.

7
00:00:23,580 --> 00:00:29,100
Also, denken Sie nach und machen Sie Ihre Konzentrationsbrille fertig, denn dies wird der wahre Deal

8
00:00:29,100 --> 00:00:29,790
sein.

9
00:00:29,790 --> 00:00:32,010
Okay, lass uns einsteigen und loslegen.

10
00:00:32,010 --> 00:00:37,230
Lassen Sie uns kurz unsere Herausforderung zusammenfassen, unser Problem, das wir

11
00:00:37,230 --> 00:00:45,990
im Moment lösen, und die Information, dass der Text in unseren Skriptobjekten und Asset-Dateien enthalten ist, in unseren Textbereich auf

12
00:00:46,350 --> 00:00:49,280
unserer Leinwand, unseren Story-Textbereich, zu platzieren.

13
00:00:49,410 --> 00:00:51,620
Wir verwenden Abenteuerspielpunkte.

14
00:00:51,640 --> 00:00:56,610
Ja, werfen wir einen Blick auf dieses Abenteuerspiel, das zu sagen scheint, was in den Textbestandteiltext aufgenommen werden

15
00:00:56,880 --> 00:00:57,430
soll.

16
00:00:57,540 --> 00:01:03,090
Wir haben jedoch eine separate Datei oder ein separates Skript, in dem die Informationen enthalten sind.

17
00:01:03,090 --> 00:01:07,930
Es gibt also unsere Herausforderung, und das erfordert, dass wir uns mit ein paar neuen Konzepten auseinandersetzen.

18
00:01:07,950 --> 00:01:12,250
Eine davon sind öffentliche Methoden und die andere sind Rückgabetypen.

19
00:01:12,270 --> 00:01:13,270
Schauen wir uns das an.

20
00:01:13,350 --> 00:01:18,390
Wir haben vor der Definition einer Methode nachgesehen, oder wir könnten sie als eine Funktion aufrufen, in der wir den Rückgabetyp

21
00:01:18,390 --> 00:01:18,690
haben.

22
00:01:18,690 --> 00:01:20,240
Wir haben den Namen, wir haben Parameter.

23
00:01:20,280 --> 00:01:25,880
Wir können zu Beginn auch den Zugriffsmodifikator hinzufügen, der den Umfang der Verwendung bestimmt.

24
00:01:25,890 --> 00:01:31,380
Alles über Methoden, wenn wir sie erstellen, wenn kein Schlüsselwort darin ist, gibt es kein Schlüsselwort zum Ändern des Zugriffs,

25
00:01:31,650 --> 00:01:33,650
das sie standardmäßig als privat hinzufügen.

26
00:01:33,660 --> 00:01:34,780
Also, was ist privat gemeint?

27
00:01:34,780 --> 00:01:36,390
Wie ist das mit der Öffentlichkeit zu vergleichen.

28
00:01:36,390 --> 00:01:39,330
Betrachten wir zwei Klassen oder zwei Skripte.

29
00:01:39,330 --> 00:01:39,830
Wir haben hier.

30
00:01:39,840 --> 00:01:43,510
Dies ist Klasse A und dies ist Klasse B, da ein Skript ein Skript B ist.

31
00:01:43,620 --> 00:01:45,970
Und darin haben wir eine private Methode.

32
00:01:45,990 --> 00:01:47,380
Es ist also Methode eins.

33
00:01:47,400 --> 00:01:51,590
Wir haben eine öffentliche Methode und verwenden das Schlüsselwort, das gerade hier hochgesprungen ist. Wir verwenden das

34
00:01:51,630 --> 00:01:52,170
Schlüsselwort davor.

35
00:01:52,170 --> 00:01:53,130
Öffentlich oder privat.

36
00:01:53,430 --> 00:02:00,570
Wenn es also privat ist, kann auf diese Methode nur innerhalb von Klasse A zugegriffen werden. Wenn es öffentlich ist,

37
00:02:00,810 --> 00:02:03,560
kann auf sie nirgendwo anders zugegriffen werden.

38
00:02:03,570 --> 00:02:10,620
Klasse B konnte Methode 1 nicht aufrufen, weil sie privat ist, aber Methode 2 könnte aufgerufen werden, weil es öffentlich und

39
00:02:10,620 --> 00:02:15,420
privat ist. Wenn Sie etwas öffentlich machen, wird es global, auf das Sie in

40
00:02:15,420 --> 00:02:17,280
Ihrem Code trotzdem zugreifen können.

41
00:02:17,280 --> 00:02:21,030
Lassen Sie uns nun über Rückgabetypen sprechen, die das andere Konzept in dieser Vorlesung sind.

42
00:02:21,030 --> 00:02:27,420
Wenn wir void haben, was das ist, was wir bisher für so private void Start gain verwendet haben, bedeutet dies, dass es

43
00:02:27,420 --> 00:02:30,640
keinen Rückgabetyp gibt, der nichts zurückgibt, wenn wir diese Methode aufrufen.

44
00:02:30,660 --> 00:02:31,650
Was meinen wir damit?

45
00:02:31,650 --> 00:02:37,230
Nun, wenn wir eine Methode aufrufen, zum Beispiel im vorherigen Abschnitt, werden wir das Spiel kalt starten und das heißt, OK, machen Sie alle

46
00:02:37,230 --> 00:02:40,710
Dinge, die mit Aktienspielen verbunden sind, also führen Sie bitte alle Ihre Schritte aus.

47
00:02:40,710 --> 00:02:47,100
Jetzt mache ich bei der Ausführung eines Zyklus alles in meinen geschweiften Klammern.

48
00:02:47,100 --> 00:02:48,080
Genau wie du mich gebeten hast.

49
00:02:48,090 --> 00:02:49,680
Das führt die Methode aus.

50
00:02:49,800 --> 00:02:56,160
Wenn es keinen Rückgabetyp gibt oder ungültige Rückgaben, würde ich nicht bedeuten, dass hier keine Rückgabetypen vorhanden sind, dann heißt es nur, dass

51
00:02:56,160 --> 00:02:59,150
die Arbeit erledigt ist. Ich wünsche Ihnen einen schönen Tag.

52
00:02:59,160 --> 00:03:00,330
Sonst gibt es hier nichts zu sehen.

53
00:03:00,330 --> 00:03:01,450
Nichts weiter zu tun.

54
00:03:01,470 --> 00:03:04,910
Ich habe meine Sachen gemacht und dann ist es soweit.

55
00:03:04,920 --> 00:03:12,570
Wenn es jedoch einen Rückgabetyp gibt, führt die Methode alle in geschweiften Klammern gesetzten Dinge aus

56
00:03:12,570 --> 00:03:17,790
und sagt dann, dass er ein Datenelement für Sie ist.

57
00:03:17,790 --> 00:03:23,890
Zurück zu dem Ort, wo es kalt war und wie kalt es sein wird Hey, danke, ich brauchte diese Information.

58
00:03:23,930 --> 00:03:24,200
OKAY.

59
00:03:24,210 --> 00:03:28,380
Ein wenig vereinfacht, aber wir werden das jetzt ausführen, damit Sie

60
00:03:28,380 --> 00:03:34,380
es sehen können. Ich wollte nur ein wirklich klares Muster erstellen, dass Sie eine Methode aufrufen, wenn es

61
00:03:34,380 --> 00:03:40,140
einen Rückgabetyp gibt, dann gibt es Daten, die zusätzlich zurückgegeben werden Welche Schritte die Methode gerade ausführt.

62
00:03:40,140 --> 00:03:46,050
Der Ort, an dem wir unsere öffentliche Methode einrichten werden, befindet sich in unserem Status

63
00:03:46,050 --> 00:03:54,690
DOT. Ja, hier möchten wir eine neue öffentliche Methode erstellen, die eine Zeichenfolge vom Typ return enthält, und wir geben unsere Steuervariable

64
00:03:54,690 --> 00:03:58,880
story und zurück All dieser Kontext führt zu Ihrer Herausforderung.

65
00:03:58,900 --> 00:04:04,730
Eine nette saftige Herausforderung für Sie. Erstellen Sie eine öffentliche Methode. Erstellen Sie also eine öffentliche

66
00:04:04,740 --> 00:04:12,810
Methode. Wir bezeichnen sie als "Status-Story". Der Name unserer Methode lautet "String-Rückgabetyp". Wir werden eine Anweisung enthalten, und diese Anweisung wird es

67
00:04:12,810 --> 00:04:20,310
sein Wenn wir es nur zurückgeben, verwenden wir das Schlüsselwort return, um unsere Textvariable für Storys zurückzugeben. Wir haben also

68
00:04:20,490 --> 00:04:25,520
bereits unsere Variable story takes hier erstellt. Deshalb möchten wir diese zurückgeben.

69
00:04:25,620 --> 00:04:32,520
Also mach weiter und erstelle, dass diese Methode ein öffentlicher String-Rückgabetyp ist und in geschweiften Klammern steht, dass der Text der Story zurückgegeben wird.

70
00:04:32,850 --> 00:04:38,130
Geben Sie also das Beste, was wir in diesem Vortrag besprochen haben, und ich zeige Ihnen meine Lösung,

71
00:04:38,160 --> 00:04:40,550
wenn wir es tun bin wieder in

72
00:04:43,400 --> 00:04:43,760
ordnung

73
00:04:43,770 --> 00:04:44,400
Willkommen zurück.

74
00:04:44,400 --> 00:04:46,680
Geben Sie mir hier ein paar Zeilen in Zeile 10.

75
00:04:46,680 --> 00:04:53,520
Ich werde damit beginnen, unseren Zugriffsmodifikator zu deklarieren, der öffentlich sein wird und vom Typ

76
00:04:54,120 --> 00:04:57,780
String ist. Unser Name ist get state story.

77
00:04:57,780 --> 00:05:01,890
Wir müssen unsere Klammern am Ende setzen, um zu zeigen, dass wir keine Parameter haben,

78
00:05:01,890 --> 00:05:06,460
die in Zukunft kommen werden, aber im Moment haben wir keine Parameter in diesem Abschnitt des Kurses.

79
00:05:06,660 --> 00:05:12,330
Und dann drücken geschweifte Klammern die Eingabetaste und Sie können sehen, dass Visual Studio automatisch alles zuerst in einer

80
00:05:12,330 --> 00:05:13,130
Linie anordnet.

81
00:05:13,140 --> 00:05:19,300
Aber jetzt sind wir um eine Ebene eingerückt, um zu zeigen, dass dies unter get state

82
00:05:19,300 --> 00:05:24,380
story liegt, und ich sage einfach ein Semikolon für den Text der Rückgeschichte.

83
00:05:24,420 --> 00:05:27,060
Das ist unsere öffentliche Methode, die wir hier erstellt haben.

84
00:05:27,060 --> 00:05:28,400
Das ist die Struktur davon.

85
00:05:28,410 --> 00:05:31,690
Hoffentlich hast du diese Herausforderung in deinen Matches, die ich hier gemacht habe, gut gemeistert.

86
00:05:31,930 --> 00:05:34,790
Und der nächste Schritt für uns ist, was zu tun.

87
00:05:34,800 --> 00:05:36,290
Nun, es ist zu kalt.

88
00:05:36,290 --> 00:05:40,810
Holen Sie sich staatliche Geschichte so irgendwo müssen wir sagen, ich möchte.

89
00:05:40,920 --> 00:05:48,030
Ich möchte, dass Sie angeben, dass wir diese bestimmte Methode nicht ausführen sollen, wenn Sie dies tun. Ich möchte, dass Sie zu

90
00:05:48,030 --> 00:05:52,080
mir zurückkehren, was auch immer sich aktuell im Text der Story befindet.

91
00:05:52,080 --> 00:05:58,470
Erinnern wir uns einfach daran, was im Story-Text drüben steht. Sie können sehen, ob wir einen Story-Text haben und

92
00:05:58,470 --> 00:06:00,810
wir haben den ganzen Story-Text hier.

93
00:06:00,810 --> 00:06:08,280
Unser Endziel ist es also, diese Informationen in unser Textfeld zurückzugeben.

94
00:06:08,280 --> 00:06:14,340
Um dies zu tun, gehen wir zum Abenteuerspiel, also wollen wir zuerst sagen, was wir wissen müssen,

95
00:06:14,340 --> 00:06:18,780
was unser Ausgangszustand ist, damit wir unser Spiel an einigen Punkten beginnen

96
00:06:19,190 --> 00:06:24,960
können dass unsere Zeit ein Zustand sein muss, können wir nichts anderes in diese Variable setzen,

97
00:06:24,960 --> 00:06:28,920
außer einen Zustand, und ich werde es Anfangszustand nennen.

98
00:06:28,920 --> 00:06:34,560
Es ist also sehr klar, bis auf den Moment, in dem wir wieder in die Engine springen, und Sie

99
00:06:34,560 --> 00:06:37,950
können sehen, ob Sie dem Spiel einen Moment Zeit geben.

100
00:06:37,950 --> 00:06:43,390
Game Object hier haben wir gerade in den Startzustand des View geklickt und wir haben keinen. Nehmen wir

101
00:06:43,410 --> 00:06:48,870
also den Startzustand aller Objekte per Skript und ziehen Sie das Objekt in den Startzustand. Natürlich können Sie

102
00:06:48,870 --> 00:06:52,920
hier auf den Selektor klicken und es wird nur ein Asset abgelegt hinein.

103
00:06:52,920 --> 00:06:57,780
Jetzt wissen wir, wie der Ausgangszustand ist, er ist bereits signiert. Okay, cool. Ich weiß, dass ich mir das ansehen soll, aber

104
00:06:57,780 --> 00:06:58,960
was soll ich damit machen?

105
00:06:59,240 --> 00:07:05,340
Okay, zurück zum Abenteuerspiel, wir müssen jetzt nicht mehr wissen, in welchem Zustand wir sind, und um dies zu tun, erstellen

106
00:07:05,340 --> 00:07:10,710
wir hier eine Variable, die ein Typ-Zustand sein wird, und ich weiß, dass dies ein sein wird ein bisschen

107
00:07:10,710 --> 00:07:16,080
verwirrend, aber ertrage es mit mir und es wird den Namen state tragen, so dass der erste Teil

108
00:07:16,080 --> 00:07:19,400
davon der Typ ist, der von unserer Klasse hier drüben abstammt.

109
00:07:19,410 --> 00:07:24,840
Also haben wir diese Klasse, die heißt Zustand und innerhalb dieser Klasse werden wir alle unsere Zustandsinformationen haben, was die

110
00:07:24,840 --> 00:07:27,570
Geschichte sagt und wohin können Sie als nächstes gehen.

111
00:07:27,570 --> 00:07:30,530
Das ist der Begriff unserer Staatsklasse.

112
00:07:30,570 --> 00:07:32,690
Und so muss dies vom Typ Staat sein.

113
00:07:32,910 --> 00:07:35,190
Und wir werden es Zustand als Variable nennen.

114
00:07:35,190 --> 00:07:37,620
In diesem Zustand befinden wir uns derzeit.

115
00:07:37,650 --> 00:07:42,450
Wir haben einen Ausgangszustand erstellt und jetzt haben wir den aktuellen Zustand, den wir

116
00:07:42,450 --> 00:07:48,210
als aktuellen Zustand oder als laufenden Zustand bezeichnen könnten, aber wir nennen ihn nur, um nett zu

117
00:07:48,240 --> 00:07:55,220
sein und genau zu sagen, was wir jetzt zu Beginn tun Methode hier wollen wir definieren, welcher Zustand gerade so ist.

118
00:07:55,290 --> 00:07:57,310
Was denkst du, ist der Zustand im Moment.

119
00:07:57,540 --> 00:08:05,650
Zustand wird als Anfangszustand beim Start zugewiesen, in welchem Zustand wir uns gegenwärtig befinden.

120
00:08:05,690 --> 00:08:06,920
Nun, wir sind im Anfangszustand.

121
00:08:06,920 --> 00:08:08,360
Was ist der Ausgangszustand?

122
00:08:08,360 --> 00:08:14,920
Wir haben bereits den Startstatus überprüft, indem wir unser Startstatus-Skript-Bill-Objekt mit all unseren darin enthaltenen Story-Informationen hineingezogen haben.

123
00:08:14,950 --> 00:08:20,100
Dies können wir ergänzen und entfernen, ohne uns Gedanken darüber machen zu müssen,

124
00:08:20,100 --> 00:08:23,330
ob wir uns damit beschäftigen oder herumspielen Hier.

125
00:08:23,360 --> 00:08:25,540
Das ist also ein schöner Fluss, den wir dort haben.

126
00:08:25,550 --> 00:08:25,760
OKAY.

127
00:08:25,790 --> 00:08:32,180
Wir kennen also unseren Ausgangszustand und das ist der Zustand, der derzeit zugewiesen ist, da unser letzter Schritt das Aufrufen unserer

128
00:08:32,210 --> 00:08:34,100
von uns erstellten öffentlichen Methode ist.

129
00:08:34,100 --> 00:08:44,180
Also tun wir das, indem wir sagen, dass state DOT state story und dann eckige Klammern am Ende bekommt, so dass Sie hier sehen können, dass dies unser

130
00:08:44,180 --> 00:08:50,840
öffentlicher Methodenname ist und wir hier unsere Variable haben und dies eine Variable vom Typ state ist.

131
00:08:50,840 --> 00:08:55,700
So können wir hier auf unsere staatliche Klasse zugreifen.

132
00:08:56,060 --> 00:09:01,210
Und weil wir Zugang zu unserer staatlichen Klasse haben, haben wir Zugang zu unserer öffentlichen Methode, State Story zu erhalten.

133
00:09:01,250 --> 00:09:03,980
Stellen wir also sicher, dass alles funktioniert, bevor wir uns auf den Rücken klopfen.

134
00:09:03,980 --> 00:09:13,040
Speichern Sie Scooby Doo doo und kehren Sie in unser Spiel zurück. Klicken Sie auf Play. Klicken Sie auf Play.

135
00:09:13,100 --> 00:09:17,660
Es sollte uns keine Ära bescheren, wenn wir erneut auf Play klicken, und wir denken, wir wären gespannt.

136
00:09:17,660 --> 00:09:18,160
Okay.

137
00:09:18,170 --> 00:09:19,140
Und da sehen wir.

138
00:09:19,220 --> 00:09:19,960
Wunderbar

139
00:09:19,970 --> 00:09:25,230
Wir haben unseren Text in unserem Spiel aktualisiert und er wird aus unserem Skriptobjekt gezogen.

140
00:09:25,370 --> 00:09:25,780
Und weisst du was.

141
00:09:25,780 --> 00:09:30,740
Ich weiß, dass dies ein bisschen verwirrend sein kann, für den Moment musst du nicht genau verstehen, wie

142
00:09:30,740 --> 00:09:32,190
du das alleine machen würdest.

143
00:09:32,210 --> 00:09:33,260
Im Moment folgen wir ihm.

144
00:09:33,260 --> 00:09:34,760
Du kommst in den Rhythmus.

145
00:09:34,790 --> 00:09:41,120
Sie üben, wenn Sie zum ersten Mal öffentliche Methoden kennen und über verschiedene Skripte auf verschiedene

146
00:09:41,120 --> 00:09:43,070
Teile unseres Codes zugreifen.

147
00:09:43,080 --> 00:09:44,160
Dann mach dir keine Sorgen.

148
00:09:44,210 --> 00:09:45,560
Es wird klarer, als wir weitermachen.

149
00:09:45,560 --> 00:09:46,890
Dies ist der Ausgangspunkt.

150
00:09:46,910 --> 00:09:49,210
Auf diesem Fundament werden wir aufbauen.

151
00:09:49,220 --> 00:09:55,250
Also nur als Rückblick In diesem Vortrag haben wir unsere öffentliche Methode erstellt.

152
00:09:55,250 --> 00:10:00,880
Wir haben einen Rückgabetyp für Story-Text. Tut mir leid, dass es sich um einen String handelt und der Story-Text zurückgegeben wird.

153
00:10:00,890 --> 00:10:01,940
Was ist Storytext?

154
00:10:02,000 --> 00:10:05,400
Das ist die Information, die wir in allen Objekten haben.

155
00:10:05,510 --> 00:10:11,150
Und dann verwenden wir diese Informationen in unserem Abenteuerspiel und sehen kein Skript, indem wir

156
00:10:11,150 --> 00:10:17,360
sagen, in welchem Zustand wir uns gerade befinden. Wir beginnen mit dem Zustand, in dem wir uns

157
00:10:17,360 --> 00:10:24,680
gerade befinden. Dann wissen wir, dass wir die Textkomponente anzeigen müssen Textanzeige, was unser Zustand PUNKT ist, Zustandgeschichte zu erhalten

158
00:10:24,680 --> 00:10:27,470
und Zustandgeschichte zu erhalten ist unsere Geschichte.

159
00:10:27,470 --> 00:10:29,180
Text von drüben hier.

160
00:10:29,410 --> 00:10:31,150
Okay, so großartige Arbeit in dieser Vorlesung.

161
00:10:31,160 --> 00:10:33,370
Ich freue mich darauf, Sie im nächsten Video zu sehen.
