1
1

00:00:00,000  -->  00:00:04,325
[MUSIC]
2

2

00:00:04,325  -->  00:00:07,995
In this video we're gonna trigger a sound
effect when a block is destroyed and
3

3

00:00:07,995  -->  00:00:12,007
we'll look at the problem with that when
you're destroying something the fact that
4

4

00:00:12,007  -->  00:00:13,550
the audio also gets destroyed.
5

5

00:00:13,550  -->  00:00:16,190
So we'll figure out a solution so
that we can destroy our block and
6

6

00:00:16,190  -->  00:00:19,160
still play our audio,
let's jump in and get started.
7

7

00:00:19,160  -->  00:00:21,720
First thing I'll do is figure
out which audio effect
8

8

00:00:21,720  -->  00:00:23,750
I want to play when we break a block,
9

9

00:00:23,750  -->  00:00:27,340
I think I'm gonna use the bounce sound
cuz it's very different to the others.
10

10

00:00:27,340  -->  00:00:31,420
That means I need to remove it from
the repertoire of sounds that we currently
11

11

00:00:31,420  -->  00:00:33,240
have as part of the ball.
12

12

00:00:33,240  -->  00:00:38,260
So to do that I'm going to make
my ball array, ball sound size,
13

13

00:00:38,260  -->  00:00:43,470
ball sound array size zero,
got there eventually, and
14

14

00:00:43,470  -->  00:00:47,199
then lock the inspector,
it's locked at the moment and
15

15

00:00:47,199  -->  00:00:49,750
so that's just the top right up here,
the little lock symbol.
16

16

00:00:49,750  -->  00:00:53,290
And then grab the four
that I do want to have,
17

17

00:00:53,290  -->  00:00:58,844
drag them over into Audio Ball Size
until the ball sounds just here and
18

18

00:00:58,844  -->  00:01:03,651
drop them onto Ball Sounds [SOUND]
there we go got these four.
19

19

00:01:03,651  -->  00:01:06,701
Now important,
I didn't do this in the last lecture, but
20

20

00:01:06,701  -->  00:01:10,720
importantly we want to click on Apply,
and watch what happens here.
21

21

00:01:10,720  -->  00:01:12,760
Apply and
22

22

00:01:12,760  -->  00:01:18,170
we apply our changes to the ball prefab
and all of our sounds here that were
23

23

00:01:18,170  -->  00:01:22,660
ball before are no longer ball to say that
the prefab now has these details on it.
24

24

00:01:22,660  -->  00:01:28,430
Cool, so now in our other scenes the ball
will be as the ball is just here.
25

25

00:01:28,430  -->  00:01:31,230
Cool, okay, so
what's the problem we have at the moment?
26

26

00:01:31,230  -->  00:01:34,533
Well, when the ball flies up and
hits a block,
27

27

00:01:34,533  -->  00:01:39,023
we know that we in our block.cs,
we know that it says destroy,
28

28

00:01:39,023  -->  00:01:44,654
the very moment the very frame that the
ball comes into contact with the block.
29

29

00:01:44,654  -->  00:01:48,811
So ball hitting the block on collision
enter, it means that it will be destroyed
30

30

00:01:48,811  -->  00:01:52,346
but the problem is if we have on our
block which is where we want to have
31

31

00:01:52,346  -->  00:01:56,033
our destroy sound if we have an audio
source that also gets destroyed.
32

32

00:01:56,033  -->  00:02:00,390
So the very moment the sound starts
to be triggered its mechanism for
33

33

00:02:00,390  -->  00:02:03,860
playing the sound is destroyed so
we need a solution.
34

34

00:02:03,860  -->  00:02:05,300
Let's have a look at the problem here.
35

35

00:02:05,300  -->  00:02:09,760
So the problem is, destroying a GameObject
will destroy it's AudioSource,
36

36

00:02:09,760  -->  00:02:16,300
which means also killing our SFX, the very
second it started it is also stopped.
37

37

00:02:16,300  -->  00:02:17,060
Couple of solutions,
38

38

00:02:17,060  -->  00:02:22,090
one solution, we could delay destroying
the GameObject until the SFX has played.
39

39

00:02:22,090  -->  00:02:25,900
So what I mean by that is when the ball
hits the block, gonna have a look at our
40

40

00:02:25,900  -->  00:02:30,060
block script, we could say,
Destroy(gameObject,), and we could put in
41

41

00:02:30,060  -->  00:02:35,430
there say, 1f, and that will be one
second delay until it gets destroyed.
42

42

00:02:35,430  -->  00:02:39,529
But that's gonna be a little bit crummy
because the block will still be sticking
43

43

00:02:39,529  -->  00:02:43,504
around and then it will blink out of
existence after a second little bit clumsy
44

44

00:02:43,504  -->  00:02:46,709
we want the block to be gone
the moment the ball hits it, okay.
45

45

00:02:46,709  -->  00:02:50,739
So that solution is no good anyway,
this is problem solution part of becoming
46

46

00:02:50,739  -->  00:02:54,540
a better game designer and a better
programmer listing out our problem.
47

47

00:02:54,540  -->  00:02:56,850
So, what's another
solution to our problem?
48

48

00:02:56,850  -->  00:03:01,830
Another solution is to find a way to play
to play the SFX even if the GameObject
49

49

00:03:01,830  -->  00:03:03,785
is destroyed and
that's what we are going to do.
50

50

00:03:03,785  -->  00:03:08,870
There's a really neat method that we
can use, I say ours, I'm looking for
51

51

00:03:08,870  -->  00:03:12,355
my documentation, here it is, I've
shared this with you in the resources,
52

52

00:03:12,355  -->  00:03:15,282
AudioSource.PlayClipAtPoint.
53

53

00:03:15,282  -->  00:03:19,880
Now, PlayClipAtPoint has a couple of
things that it can do which is cool.
54

54

00:03:19,880  -->  00:03:23,408
One thing that it does is if we
scroll down here to description,
55

55

00:03:23,408  -->  00:03:25,739
this function creates an audio source but
56

56

00:03:25,739  -->  00:03:29,480
automatically disposes of it once
the clip has finished playing.
57

57

00:03:29,480  -->  00:03:33,764
So It creates a new audio source
that's not gonna be attached
58

58

00:03:33,764  -->  00:03:38,170
to that game object It just
instantiates it in our scene.
59

59

00:03:38,170  -->  00:03:40,950
And it will take in a clip,
so whatever we wanna play,
60

60

00:03:40,950  -->  00:03:43,680
and also it needs to know the position.
61

61

00:03:43,680  -->  00:03:44,550
This is important,
62

62

00:03:44,550  -->  00:03:48,940
because it's a 3D sound it needs to know
where in the world am I being played.
63

63

00:03:48,940  -->  00:03:51,200
We can't play it in the 2D way
it has to be a 3D sound and
64

64

00:03:51,200  -->  00:03:53,880
we can also adjust the volume.
65

65

00:03:53,880  -->  00:03:57,630
Okay, so that's not where I wanna go,
I wanna go over to here, cool, so
66

66

00:03:57,630  -->  00:04:03,270
now we have our setup,
we know we need to use PlayClipAtPoint.
67

67

00:04:03,270  -->  00:04:06,290
First thing we need to do, and I'm gonna
do a couple of mini challenges in this
68

68

00:04:06,290  -->  00:04:08,540
lecture rather than having a slide on it.
69

69

00:04:08,540  -->  00:04:10,470
The first mini challenge I'd like for
70

70

00:04:10,470  -->  00:04:15,510
you to serialized a field that we can add,
in the inspector,
71

71

00:04:15,510  -->  00:04:20,860
we can add our audio clip that will be
used for the breaking sound effects.
72

72

00:04:20,860  -->  00:04:24,731
So find one of the clips, for
me I'm going to use bounce and
73

73

00:04:24,731  -->  00:04:28,919
we need to in our scriptures here
have a way to access bounce, so
74

74

00:04:28,919  -->  00:04:31,072
pause the video and do that now.
75

75

00:04:31,072  -->  00:04:35,788
Okay, hopefully that made sense
it's pretty straight forward,
76

76

00:04:35,788  -->  00:04:40,755
we're gonna say SerializeField and
we're looking for AudioClip and
77

77

00:04:40,755  -->  00:04:45,661
we'll call this probably call
it breakSound, breakSound, okay.
78

78

00:04:45,661  -->  00:04:49,164
And we're placing this breakSound on the
block cuz the block is gonna be the thing
79

79

00:04:49,164  -->  00:04:51,341
that breaks,
that's why we have our sound here.
80

80

00:04:51,341  -->  00:04:57,049
Now next step is for us to add our
PlayClipAtPoint, so what I want you to do
81

81

00:04:57,049  -->  00:05:02,963
is have a look at the document that I've
shared with you it is this one here.
82

82

00:05:02,963  -->  00:05:07,464
And based upon the description, the
example that we have in here just write in
83

83

00:05:07,464  -->  00:05:11,520
the script, write in the code for
AudioSource.PlayClipAtPoint.
84

84

00:05:11,520  -->  00:05:16,899
So using what you see here, add the next
line which will go before Destroy and add
85

85

00:05:16,899  -->  00:05:22,295
that line in so we're playing ClipAtPoint,
so pause the video and do that now.
86

86

00:05:25,800  -->  00:05:29,049
Okay, so if we have a look,
we're using AudioSource., and
87

87

00:05:29,049  -->  00:05:33,548
what that means here is that because it's
creating an audio source we're not getting
88

88

00:05:33,548  -->  00:05:36,379
the component as we did in
the other previous videos.
89

89

00:05:36,379  -->  00:05:41,643
We're not getting the component
on the game object we're creating
90

90

00:05:41,643  -->  00:05:47,103
an audio source, so
we say AudioSource.PlayClipAtPoint, great.
91

91

00:05:47,103  -->  00:05:49,899
And then what are we passing in,
well first of all, we're passing in,
92

92

00:05:49,899  -->  00:05:53,520
here's another spot to pause if you
haven't already completed this statement.
93

93

00:05:53,520  -->  00:05:55,750
What are we pausing first?
94

94

00:05:55,750  -->  00:06:01,860
We pass in breakSound, now here's a tricky
bit if you've gone through this exercise
95

95

00:06:01,860  -->  00:06:06,160
and given it your best shot you may have
got this but if not have a think about it.
96

96

00:06:06,160  -->  00:06:12,110
I want you to just pause and have
a think about where do we want to play?
97

97

00:06:12,110  -->  00:06:14,570
So we see vector3position,
it's looking for
98

98

00:06:14,570  -->  00:06:18,440
a position in the world where we
want our sound effect to play.
99

99

00:06:18,440  -->  00:06:21,850
So where do you think we
should play our sound effect?
100

100

00:06:21,850  -->  00:06:24,870
First step is what do you thing
conceptually it should go?
101

101

00:06:26,750  -->  00:06:31,831
Okay, well, conceptually, where
are we listening to the sound effect?
102

102

00:06:31,831  -->  00:06:36,749
We're listening to the sound effect
on our camera, so our camera which I
103

103

00:06:36,749  -->  00:06:41,353
have turned off in my gizmos I need
to put my 3D icon on,there it is.
104

104

00:06:41,353  -->  00:06:45,363
So here's our camera this is where our
audio listener is so we want to play
105

105

00:06:45,363  -->  00:06:49,855
the sound effect right next to where
we're listening to the sound effect.
106

106

00:06:49,855  -->  00:06:54,466
Otherwise, if we play it on the block,
it is not gonna be as loud as all
107

107

00:06:54,466  -->  00:06:59,595
of our other sounds which are just
playing generally in 2D space.
108

108

00:06:59,595  -->  00:07:05,945
Okay, click on 2D again, so that means
in here ever think about, so that was
109

109

00:07:05,945  -->  00:07:10,050
the first part of that great work if you
figured out it needs to be on the camera.
110

110

00:07:10,050  -->  00:07:13,040
How do we reference the camera's position?
111

111

00:07:13,040  -->  00:07:15,900
This is a little bit trickier if
you haven't seen this before you
112

112

00:07:15,900  -->  00:07:18,550
might not know but if you
113

113

00:07:18,550  -->  00:07:24,050
want take a guess how do you think we
reference the camera's positioning here.
114

114

00:07:24,050  -->  00:07:28,040
Well I'll give you the first part
of this which is to say camera,
115

115

00:07:28,040  -->  00:07:30,050
which will access the camera class.
116

116

00:07:30,050  -->  00:07:33,700
Then we say main cuz we need to
know that it's the main camera,
117

117

00:07:33,700  -->  00:07:35,530
at the moment we've really
got only one camera but
118

118

00:07:35,530  -->  00:07:37,810
you can look at our description
if you hover over main.
119

119

00:07:37,810  -->  00:07:41,270
It says the first enabled
camera toggled main camera,
120

120

00:07:41,270  -->  00:07:46,440
so basically whichever camera
it thinks is main camera, dot,
121

121

00:07:46,440  -->  00:07:50,110
now what do we put in here to play
this at the cameras position.
122

122

00:07:51,790  -->  00:07:57,020
Okay we will say transform.position,
123

123

00:07:57,020  -->  00:08:01,550
so we're saying create
an AudioSource.PlayClipAtPoint,
124

124

00:08:01,550  -->  00:08:03,800
it's gonna be breakSound
that we're applying and
125

125

00:08:03,800  -->  00:08:07,040
then play it at these position
which is camera.main.
126

126

00:08:07,040  -->  00:08:09,210
That's the way that we
access the main camera and
127

127

00:08:09,210  -->  00:08:12,560
it's the main camera's
transform dot position.
128

128

00:08:12,560  -->  00:08:15,810
Okay, save this back over into Unity.
129

129

00:08:15,810  -->  00:08:17,580
There's one step we haven't done yet.
130

130

00:08:17,580  -->  00:08:18,600
What is that step?
131

131

00:08:20,370  -->  00:08:25,390
Okay that step is for us to find a block,
just a little bit of slow movement there,
132

132

00:08:25,390  -->  00:08:29,670
find our block and
you should see audio clip break sound.
133

133

00:08:29,670  -->  00:08:32,870
Okay break sound,
we drag in bounce, you could
134

134

00:08:32,870  -->  00:08:35,950
drag in whatever you like you can use
whatever sound effect you want in there.
135

135

00:08:35,950  -->  00:08:40,030
Okay, and one final, final step,
just gonna turn off my gizmos again.
136

136

00:08:40,030  -->  00:08:44,320
One final, final step is to do what?
137

137

00:08:44,320  -->  00:08:49,270
Our final step is to apply back to
the prefab, okay, and then when
138

138

00:08:49,270  -->  00:08:53,010
we click on play let me just check
that I'm recording my audio yes I am.
139

139

00:08:53,010  -->  00:08:58,080
Click on play, here we go it should,
140

140

00:08:58,080  -->  00:09:00,726
let me put my headphones on so
I can hear what you are hearing.
141

141

00:09:00,726  -->  00:09:05,754
[SOUND] Yep you click on click on then
we can if I can actually [SOUND] okay,
142

142

00:09:05,754  -->  00:09:10,956
good, so when we're destroying
something we're getting the boing and
143

143

00:09:10,956  -->  00:09:13,703
it's playing the whole way through.
144

144

00:09:13,703  -->  00:09:18,971
Excellente, success, okay so in this video
we've implemented our sound effect so
145

145

00:09:18,971  -->  00:09:22,920
that when the block is destroyed
the sound effect still plays.
146

146

00:09:22,920  -->  00:09:27,567
I'm gonna show you exactly what is
happening over here in our hierarchy if I
147

147

00:09:27,567  -->  00:09:29,116
can pause soon enough and
148

148

00:09:29,116  -->  00:09:33,418
pause I think is going to be [SOUND]
should be pretty easy there we go.
149

149

00:09:33,418  -->  00:09:38,350
But you can see here, it has created one
shot audio and then when the audio is
150

150

00:09:38,350  -->  00:09:43,532
finished playing, I might [SOUND] yeah,
we jumped out of the scene a bit early.
151

151

00:09:43,532  -->  00:09:47,851
But anyway it will create this new one
shot audio and when it's done playing then
152

152

00:09:47,851  -->  00:09:52,710
it is destroyed, disposed of was the
correct terminology just to appease them.
153

153

00:09:52,710  -->  00:09:54,970
Okay, so
hopefully this format's worked with me,
154

154

00:09:54,970  -->  00:09:58,330
giving you a few little mini challenges
and you've had a chance to jump in and
155

155

00:09:58,330  -->  00:10:01,300
implement that and
I will see you in the next video.
