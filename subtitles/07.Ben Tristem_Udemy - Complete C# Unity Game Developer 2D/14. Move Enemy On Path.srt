1
1

00:00:00,000  -->  00:00:03,971
[MUSIC]
2

2

00:00:03,971  -->  00:00:07,535
In this video we are gonna be making
our enemy move on our waypoints and
3

3

00:00:07,535  -->  00:00:10,190
then destroying when it
gets to the last waypoint.
4

4

00:00:10,190  -->  00:00:11,510
Let's jump in and get started.
5

5

00:00:11,510  -->  00:00:15,321
Okay, so the code we're going to write
will start off by saying go to the first
6

6

00:00:15,321  -->  00:00:18,798
waypoint so we need the position of
the enemy to be the first waypoint.
7

7

00:00:18,798  -->  00:00:20,863
And then each frame it's going to say,
8

8

00:00:20,863  -->  00:00:23,248
head towards wherever
the next waypoint is.
9

9

00:00:23,248  -->  00:00:24,625
So move, move, move, move.
10

10

00:00:24,625  -->  00:00:27,437
And when you get there or
check to see if you've got there yet.
11

11

00:00:27,437  -->  00:00:32,623
And when you've got there then go
to the next waypoint in our list.
12

12

00:00:32,623  -->  00:00:35,249
[COUGH] So that's the foundations of it.
13

13

00:00:35,249  -->  00:00:39,358
We're gonna use a really cool
method called MoveTowards.
14

14

00:00:39,358  -->  00:00:42,642
And MoveTowards takes in three parameters.
15

15

00:00:42,642  -->  00:00:45,814
It needs to know the current position,
so in other words,
16

16

00:00:45,814  -->  00:00:49,009
this is the current position
where the enemy is right now.
17

17

00:00:49,009  -->  00:00:53,890
It also needs to know the target, and it
needs to know the maximum distance delta,
18

18

00:00:53,890  -->  00:00:55,817
in other words, how fast to go.
19

19

00:00:55,817  -->  00:01:00,248
And if we're right out our flow as some
pseudocode, then it would look like this.
20

20

00:01:00,248  -->  00:01:02,931
And I encourage you to write out
pseudocode when you're trying to work
21

21

00:01:02,931  -->  00:01:05,400
through a problem to say, okay,
well, what are the elements?
22

22

00:01:05,400  -->  00:01:07,344
What's the process?
23

23

00:01:07,344  -->  00:01:10,462
How does it flow in terms
of what I'm trying to do?
24

24

00:01:10,462  -->  00:01:14,239
For our particular challenge at
the moment, we start off by saying,
25

25

00:01:14,239  -->  00:01:17,775
if I haven't yet reached my last
waypoint then do these things.
26

26

00:01:17,775  -->  00:01:21,193
And we're gonna say, otherwise,
this'll be the end of our code block.
27

27

00:01:21,193  -->  00:01:24,749
At our pseudocode here,
we'll say otherwise destroy yourself.
28

28

00:01:24,749  -->  00:01:29,440
So we wanna know if you've not
got there yet, then go move.
29

29

00:01:29,440  -->  00:01:34,067
And we're gonna use MoveTowards
the target waypoint when we're moving.
30

30

00:01:34,067  -->  00:01:36,969
And then we need to check if
we've reached the target, so
31

31

00:01:36,969  -->  00:01:39,211
this particular waypoint we're going to.
32

32

00:01:39,211  -->  00:01:43,405
If we have reached that waypoint, then we
want to increment our target waypoint.
33

33

00:01:43,405  -->  00:01:47,167
So to go from waypoint one to two,
waypoint two to three, and so on.
34

34

00:01:47,167  -->  00:01:53,564
And then, if we have reached our last
waypoint, we destroy the enemy gameObject.
35

35

00:01:53,564  -->  00:01:56,465
I wanted to show you that rather
than just diving straight in, and
36

36

00:01:56,465  -->  00:01:57,799
typing stuff into my script.
37

37

00:01:57,799  -->  00:02:01,636
But we will dive in now and
start typing stuff into our script.
38

38

00:02:01,636  -->  00:02:04,636
And the script is the EnemyPathing.cs.
39

39

00:02:04,636  -->  00:02:07,213
So what we need to do at the top
is give ourselves a couple
40

40

00:02:07,213  -->  00:02:08,397
a variables to be using.
41

41

00:02:08,397  -->  00:02:16,008
First of all, we need to have an integer,
which will be for our waypoint index.
42

42

00:02:16,008  -->  00:02:18,506
And we need to initialize this at 0.
43

43

00:02:18,506  -->  00:02:21,995
Basically, the waypoint index
will be what index am I or
44

44

00:02:21,995  -->  00:02:24,977
which waypoint am I
currently working toward.
45

45

00:02:24,977  -->  00:02:28,116
And we started at 0 to say
that's the starting point.
46

46

00:02:28,116  -->  00:02:29,362
Why is it 0 and not 1?
47

47

00:02:29,362  -->  00:02:34,003
Well, a list,
just like an array, starts at 0.
48

48

00:02:34,003  -->  00:02:36,118
[COUGH] Okay, we also need and
I'll put this,
49

49

00:02:36,118  -->  00:02:38,408
I'll keep my serialized
fields together here.
50

50

00:02:38,408  -->  00:02:43,010
I'll serialize another field for
a variable which we typed float and
51

51

00:02:43,010  -->  00:02:48,162
this is gonna be our move speed to say how
fast do we want our enemy to be going and
52

52

00:02:48,162  -->  00:02:50,080
I'll start this at say 2f.
53

53

00:02:50,080  -->  00:02:52,055
Okay, so we've got our three variable.
54

54

00:02:52,055  -->  00:02:54,202
Now, let's have a look at our pseudocode,
55

55

00:02:54,202  -->  00:02:58,334
where you need to do an if statement that
says, if we've reached our last waypoint.
56

56

00:02:58,334  -->  00:03:02,977
Actually, not before that in our start,
we actually need to say where to start,
57

57

00:03:02,977  -->  00:03:05,518
we wanna do our starting
point first of all.
58

58

00:03:05,518  -->  00:03:07,634
So where will the starting point be?
59

59

00:03:07,634  -->  00:03:11,338
Well, the starting point is
gonna be transform.position.
60

60

00:03:11,338  -->  00:03:16,041
So the transform.position of this
particular thing that the script is on,
61

61

00:03:16,041  -->  00:03:18,622
our enemy pathing script is on our enemy.
62

62

00:03:18,622  -->  00:03:22,308
So we're saying, the transform
position of the enemy, in other words,
63

63

00:03:22,308  -->  00:03:24,160
the instance that this script is on.
64

64

00:03:24,160  -->  00:03:28,053
Equals, [COUGH] well, here we want to
get some information from our list.
65

65

00:03:28,053  -->  00:03:33,508
Basically we wanna say,
the transform position of the first entry,
66

66

00:03:33,508  -->  00:03:35,683
or the 0 index in our list.
67

67

00:03:35,683  -->  00:03:40,663
So we'll say waypoints and
we access, not waypointIndex,
68

68

00:03:40,663  -->  00:03:46,727
we wanna say waypoints, if I can
type it properly, yes, that's right.
69

69

00:03:46,727  -->  00:03:50,485
And then we use the same open and
close square brackets we used for
70

70

00:03:50,485  -->  00:03:52,791
an array, this is a list we're using.
71

71

00:03:52,791  -->  00:03:57,511
And we want to say for waypointIndex,
72

72

00:03:57,511  -->  00:04:02,082
no, having a bit of a mess with this,
73

73

00:04:02,082  -->  00:04:07,705
waypointIndex.transform.position;.
74

74

00:04:07,705  -->  00:04:13,583
So our position should be the transform
position of whichever the current
75

75

00:04:13,583  -->  00:04:19,198
waypointIndex is, and
we know we're starting waypointIndex at 0.
76

76

00:04:19,198  -->  00:04:21,685
Okay, so basically go to position 0.
77

77

00:04:21,685  -->  00:04:23,475
Now, in the update is
where we want to move.
78

78

00:04:23,475  -->  00:04:25,480
And this is why I was looking
at my pseudocode in here.
79

79

00:04:25,480  -->  00:04:27,831
If we haven't yet
reached our last waypoint,
80

80

00:04:27,831  -->  00:04:29,709
how do write that as an if statement?
81

81

00:04:29,709  -->  00:04:33,334
So type if(waypointIndex &lt;=,
82

82

00:04:33,334  -->  00:04:37,709
what's it gonna be less than or equal to?
83

83

00:04:37,709  -->  00:04:40,519
It's gonna be waypoints.count.
84

84

00:04:40,519  -->  00:04:42,895
The reason it's count is
because we're using a list.
85

85

00:04:42,895  -->  00:04:45,549
If we were using an array,
we would say .length.
86

86

00:04:45,549  -->  00:04:48,252
Because an array is fixed,
we know the length,
87

87

00:04:48,252  -->  00:04:50,965
whereas we actively have to count for
our list.
88

88

00:04:50,965  -->  00:04:55,745
Then, we need to say -1 to make sure
that this will continue unless we
89

89

00:04:55,745  -->  00:04:58,105
are definitely above and beyond.
90

90

00:04:58,105  -->  00:05:02,190
So if we've gone higher than
the number of items in our list.
91

91

00:05:02,190  -->  00:05:03,899
So that's why we do the -1.
92

92

00:05:03,899  -->  00:05:09,737
Open up our curly braces and then we need
to create two things in here first of all.
93

93

00:05:09,737  -->  00:05:13,804
If we go, jump back over into,
sorry, I'll just have a look.
94

94

00:05:13,804  -->  00:05:18,604
Yep, into our MoveTowards, we need to
establish a current position, we need to
95

95

00:05:18,604  -->  00:05:23,209
establish a target position, and
we need to establish a maxDistanceDelta.
96

96

00:05:23,209  -->  00:05:25,846
So two of those,
we need to construct a variable for.
97

97

00:05:25,846  -->  00:05:31,078
So we'll say, var targetPosition =,
while we're looking for
98

98

00:05:31,078  -->  00:05:34,896
the position in the waypoint
we're moving to.
99

99

00:05:34,896  -->  00:05:37,997
So waypoints,
what's the current active index?
100

100

00:05:37,997  -->  00:05:41,746
That will be waypointsIndex,
101

101

00:05:41,746  -->  00:05:46,076
and with .transform.position.
102

102

00:05:46,076  -->  00:05:50,428
So what is the position
of the current way point?
103

103

00:05:50,428  -->  00:05:52,419
We're heading towards would
be the target position.
104

104

00:05:52,419  -->  00:05:56,653
And then we need another variable
which would be var movement.
105

105

00:05:56,653  -->  00:06:01,015
We'll say, movementThisFrame,
that will be the speed we're moving at.
106

106

00:06:01,015  -->  00:06:05,401
We're going to times this by time of delta
time, so this will be based upon a frame.
107

107

00:06:05,401  -->  00:06:08,540
And when we frame right independent,
as we've talked about just recently.
108

108

00:06:08,540  -->  00:06:14,387
We'll say this equals our
recently created moveSpeed,
109

109

00:06:14,387  -->  00:06:21,585
everything is recently created,
moveSpeed * Time.deltaTime;.
110

110

00:06:21,585  -->  00:06:25,014
Okay, so we're establishing,
this is where we want to go to, and
111

111

00:06:25,014  -->  00:06:26,687
this is how fast we want to move.
112

112

00:06:26,687  -->  00:06:31,536
And in the next line, we'll need
to say the transform.position of
113

113

00:06:31,536  -->  00:06:36,145
the thing that we're on,
in other words, the enemy, equals.
114

114

00:06:36,145  -->  00:06:38,866
And to finish this with
our Vector2.MoveTowards,
115

115

00:06:38,866  -->  00:06:41,046
I'm gonna give this to you as a challenge.
116

116

00:06:41,046  -->  00:06:42,633
And the challenge is to write or
117

117

00:06:42,633  -->  00:06:46,490
finish this one line that will move
our enemy towards its target waypoint.
118

118

00:06:46,490  -->  00:06:47,687
So that's the challenge.
119

119

00:06:47,687  -->  00:06:52,028
Let me just leave on the screen for
you the URL, here it is,
120

120

00:06:52,028  -->  00:06:54,076
that has the MoveTowards.
121

121

00:06:54,076  -->  00:06:56,726
So you can see that, again,
here is the construction of it.
122

122

00:06:56,726  -->  00:06:58,255
This is the signature.
123

123

00:06:58,255  -->  00:07:00,089
And we have everything that we need.
124

124

00:07:00,089  -->  00:07:01,594
So far we've created all of the elements.
125

125

00:07:01,594  -->  00:07:05,359
So finish off that statement and
I'll see you back here in a moment.
126

126

00:07:07,206  -->  00:07:10,143
Okie-dokie, so what do we need?
127

127

00:07:10,143  -->  00:07:17,369
transform.position = Vector2.MoveTowards,
that's our method.
128

128

00:07:17,369  -->  00:07:20,429
And we're taking in three things in here,
and for our signature,
129

129

00:07:20,429  -->  00:07:21,421
we need the current.
130

130

00:07:21,421  -->  00:07:26,359
Well, the current we know is
transform.position, that's where we
131

131

00:07:26,359  -->  00:07:32,314
currently are, transform.position,
we've already created targetPosition.
132

132

00:07:32,314  -->  00:07:38,488
And then we've also already
created MovementThisFrame;.
133

133

00:07:38,488  -->  00:07:42,968
Okay, and this is big line, so
I'm just going to put an indent, or
134

134

00:07:42,968  -->  00:07:46,739
a return after MoveTowards and
before our parameters.
135

135

00:07:46,739  -->  00:07:50,712
Okay, just to tidy things up a little bit,
we having our MovingTowards.
136

136

00:07:50,712  -->  00:07:51,776
Now, what do we need to do?
137

137

00:07:51,776  -->  00:07:53,876
Back over to our pseudocode here.
138

138

00:07:53,876  -->  00:07:56,962
We need to check to see if
we've reached the target, and
139

139

00:07:56,962  -->  00:07:59,340
if so, to increment the target waypoint.
140

140

00:07:59,340  -->  00:08:05,097
So the way we do that is, we need another
if statement, and it'll be if, what?
141

141

00:08:05,097  -->  00:08:11,574
Transform.position is the same as or
equals, but
142

142

00:08:11,574  -->  00:08:17,154
it's equals-equals, targetPosition.
143

143

00:08:18,289  -->  00:08:20,124
Then, what do we want to do?
144

144

00:08:20,124  -->  00:08:26,580
Open our curly braces, we say,
waypointIndex needs to increment by 1.
145

145

00:08:26,580  -->  00:08:31,286
So that's waypointIndex++;,
I'm gonna put a little line in here
146

146

00:08:31,286  -->  00:08:34,729
just to keep it nice and
clean in terms of our space.
147

147

00:08:34,729  -->  00:08:37,136
You don't have to, but
that just helps me see what's going on.
148

148

00:08:37,136  -->  00:08:41,329
And then as the very last step in this
whole process we need to align ourselves
149

149

00:08:41,329  -->  00:08:43,768
where our if is need to
be putting in an else.
150

150

00:08:43,768  -->  00:08:46,248
What we're saying in here is so,
151

151

00:08:46,248  -->  00:08:50,600
if we still have a valid waypoint,
then do all the moving.
152

152

00:08:50,600  -->  00:08:56,016
Otherwise, or else, we will say Destroy,
what are we destroying?
153

153

00:08:56,016  -->  00:09:00,837
We're destroying the gameObject;.
154

154

00:09:00,837  -->  00:09:05,622
Okay, and as a very final step
I will highlight all of my
155

155

00:09:05,622  -->  00:09:08,234
code within update to there.
156

156

00:09:08,234  -->  00:09:10,364
I'll right-click and just factor this out,
157

157

00:09:10,364  -->  00:09:13,377
so it's not sitting there in our
update method looking all busy.
158

158

00:09:13,377  -->  00:09:16,205
And we'll call this Move as our method.
159

159

00:09:16,205  -->  00:09:19,025
Okay, so now when we look at update,
we're saying, move, and
160

160

00:09:19,025  -->  00:09:21,848
if we wanna do other things in update
it would be nice and clean and
161

161

00:09:21,848  -->  00:09:23,751
our whole Move code is sitting just below.
162

162

00:09:23,751  -->  00:09:28,478
Okay, let's save that, jump over into
Unity, check that this is all worked.
163

163

00:09:28,478  -->  00:09:31,371
It doesn't really matter where
our enemy is on our screen.
164

164

00:09:31,371  -->  00:09:34,797
When we tidy all of this up, we won't
actually have this enemy on the screen.
165

165

00:09:34,797  -->  00:09:38,541
We'll be instantiating an enemy
from our prefab asset, but for now,
166

166

00:09:38,541  -->  00:09:42,613
we're going to use this one that's on
the screen that we've dragged into.
167

167

00:09:42,613  -->  00:09:44,927
We've instantiated ourselves
by dragging it in.
168

168

00:09:44,927  -->  00:09:48,625
We have the way point on there, we have
the three way points in our script.
169

169

00:09:48,625  -->  00:09:50,438
So let's click on Play and
see what happens.
170

170

00:09:50,438  -->  00:09:54,724
It jumps to the first point, moves to the
second, and then goes off to the third and
171

171

00:09:54,724  -->  00:09:57,414
then it should [SOUND] destroy itself,
fantastic.
172

172

00:09:57,414  -->  00:10:00,553
If you wanted to make your
enemy move more quickly,
173

173

00:10:00,553  -->  00:10:03,473
then we could change
the move speed to say, 5,
174

174

00:10:03,473  -->  00:10:08,296
not 56, to 5, click Play and then it
should move faster through that flow.
175

175

00:10:08,296  -->  00:10:10,452
There we go, boink, boink, excellent.
176

176

00:10:10,452  -->  00:10:14,337
So there it is,
there's the foundation of our pathing.
177

177

00:10:14,337  -->  00:10:17,695
And our waypoint system, you can lay
down as many waypoints as you want.
178

178

00:10:17,695  -->  00:10:20,769
You can have a nice elaborate path
that zigzags through the screen.
179

179

00:10:20,769  -->  00:10:23,671
We're gonna do it coming off screen,
do some action and
180

180

00:10:23,671  -->  00:10:26,213
then off screen again
after the enemy goes away.
181

181

00:10:26,213  -->  00:10:29,058
So this is really cool,
this is a great foundational piece.
182

182

00:10:29,058  -->  00:10:31,511
Foundational piece that we can
build the rest of our game on.
183

183

00:10:31,511  -->  00:10:33,320
Great work and
I'll see you in the next lecture.
