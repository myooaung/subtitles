1
1

00:00:01,409  -->  00:00:04,054
[MUSIC]
2

2

00:00:04,054  -->  00:00:07,476
Really exciting video this one,
we're linking things all together now.
3

3

00:00:07,476  -->  00:00:10,700
We've got our stars going up, and
in this video when we click and
4

4

00:00:10,700  -->  00:00:14,655
place a defender, boom our stars will
go down, we'll be spending our stars.
5

5

00:00:14,655  -->  00:00:16,430
So let's jump in and get started.
6

6

00:00:16,430  -->  00:00:19,034
Let's by reminding ourselves what it
is we're trying to do with our various
7

7

00:00:19,034  -->  00:00:19,571
scripts here.
8

8

00:00:19,571  -->  00:00:22,687
The Defender Spawner is storing
the defender, finding the cost,
9

9

00:00:22,687  -->  00:00:25,701
finding if we have enough stars,
telling the stars to be spent.
10

10

00:00:25,701  -->  00:00:28,918
The Star Display is keeping
track of our current resources,
11

11

00:00:28,918  -->  00:00:33,030
it's letting us know if we have enough
stars, and it's spending the stars.
12

12

00:00:33,030  -->  00:00:34,634
The Defender is providing the cost.
13

13

00:00:34,634  -->  00:00:38,647
And the Defender Button is selecting
the particular defender prefab.
14

14

00:00:38,647  -->  00:00:41,939
And in this video, we're gonna be
working in the defender spawner,
15

15

00:00:41,939  -->  00:00:43,189
star display defender and
16

16

00:00:43,189  -->  00:00:47,017
defender button scripts that correspond
with my nifty slide I just showed you.
17

17

00:00:47,017  -->  00:00:50,064
And we'll start off in
defender dot CS file.
18

18

00:00:50,064  -->  00:00:54,332
We need a way of being able to access this
cost, of how much a defender costs, and
19

19

00:00:54,332  -->  00:00:55,498
to make that public.
20

20

00:00:55,498  -->  00:00:59,380
So I'm gonna give you a challenge right
from the get-go to get you active and
21

21

00:00:59,380  -->  00:01:01,817
nimble here,
make cost publicly accessible.
22

22

00:01:01,817  -->  00:01:04,439
So in the Defender.cs create,
23

23

00:01:04,439  -->  00:01:09,785
a public method called GetStarCost
which returns the starCost.
24

24

00:01:09,785  -->  00:01:11,851
It should be pretty straightforward,
we've done this a bunch of times.
25

25

00:01:11,851  -->  00:01:15,663
But good to get the old brain
fluid flowing, so jump in and
26

26

00:01:15,663  -->  00:01:18,745
take on that challenge now, if you will.
27

27

00:01:18,745  -->  00:01:22,367
Okay, so public method, we'll give
ourselves a couple of lines here.
28

28

00:01:22,367  -->  00:01:24,745
Public, it's going to return an integer,
29

29

00:01:24,745  -->  00:01:27,648
this might have been something
that you stumbled on.
30

30

00:01:27,648  -->  00:01:32,600
GetStarCost or you didn't stumble
on it because you're amazing, and
31

31

00:01:32,600  -->  00:01:35,245
public integer GetStarCost return.
32

32

00:01:35,245  -->  00:01:37,596
What are we going to return here
if you didn't do the challenge and
33

33

00:01:37,596  -->  00:01:38,850
you've just be following along?
34

34

00:01:38,850  -->  00:01:41,554
What do we would need to return?
35

35

00:01:41,554  -->  00:01:44,241
We will need to return starCost.
36

36

00:01:44,241  -->  00:01:47,319
So that will say,
when something calls this, it will say,
37

37

00:01:47,319  -->  00:01:51,214
whatever it is in here- 100, or
what we've change it to an inspector.
38

38

00:01:51,214  -->  00:01:53,259
Okay, that's a great starting point.
39

39

00:01:53,259  -->  00:01:54,602
Next, what do we need to do?
40

40

00:01:54,602  -->  00:01:58,653
Well, we need to update
our defender spawner so
41

41

00:01:58,653  -->  00:02:04,241
that we are being a little bit
clever in how we place our defender.
42

42

00:02:04,241  -->  00:02:06,667
And we'll do that by creating
ourselves a new method in here.
43

43

00:02:06,667  -->  00:02:10,605
So underneath SetSelectedDefender and
above GetSquareClicked,
44

44

00:02:10,605  -->  00:02:14,065
I'm gonna create a new method
which will be a private void.
45

45

00:02:14,065  -->  00:02:19,395
And I'll call this
AttemptToPlaceDefenderAt.
46

46

00:02:19,395  -->  00:02:22,644
I know it's super specific there, but
we're trying to say attempt to place
47

47

00:02:22,644  -->  00:02:26,020
because we have an if statement in there
that says that you might not be able to.
48

48

00:02:26,020  -->  00:02:30,309
And we need to be passing in a position,
so we'll say Vector2.
49

49

00:02:30,309  -->  00:02:33,476
And we'll call it gridPos, okay.
50

50

00:02:33,476  -->  00:02:36,277
And what do we do within our method
here when we're attempting to place
51

51

00:02:36,277  -->  00:02:36,948
this defender?
52

52

00:02:36,948  -->  00:02:40,015
Well, I'm going to start off by creating
a couple of variables that I'll be using.
53

53

00:02:40,015  -->  00:02:44,031
First of all, var StarDisplay.
54

54

00:02:44,031  -->  00:02:46,254
We're just accessing,
we're finding a handle for that.
55

55

00:02:46,254  -->  00:02:49,005
How do we find the object of type?
56

56

00:02:49,005  -->  00:02:53,139
We type in FindObjectOfType, that was
the worse challenge ever, wasn't it?
57

57

00:02:53,139  -->  00:02:58,424
StarDisplay(); next we'll create
a variable of type integer,
58

58

00:02:58,424  -->  00:03:04,743
which we'll defenderCost cuz we need to
know how much the defender's costing.
59

59

00:03:04,743  -->  00:03:06,951
And we are, where are we?
60

60

00:03:06,951  -->  00:03:09,191
We've got DefenderToSelect,
that's defender.
61

61

00:03:09,191  -->  00:03:17,071
So we will say defender.GetStarCost().
62

62

00:03:17,071  -->  00:03:21,832
Okay, so the defender is a reference that
is coming in from our defender to select.
63

63

00:03:21,832  -->  00:03:26,658
Our defenderToSelect is being parsed in
when this SetSelectDefender is called
64

64

00:03:26,658  -->  00:03:30,480
from our DefenderButton I
believe we're calling that, yep.
65

65

00:03:30,480  -->  00:03:34,869
So from the button into
our defender's spawner.
66

66

00:03:34,869  -->  00:03:38,995
Great, next up we need to run our little
if statement that allows us to say,
67

67

00:03:38,995  -->  00:03:41,632
only go and
spend the money if you got the money.
68

68

00:03:41,632  -->  00:03:43,422
So write a little comment in here so
we know what we're doing.
69

69

00:03:43,422  -->  00:03:47,990
If we have enough Stars or
moolah or cash or schmeckles.
70

70

00:03:47,990  -->  00:03:49,867
Then what do we want to do?
71

71

00:03:49,867  -->  00:03:55,289
We wanna spawn the defender,
and we also want to do what?
72

72

00:03:55,289  -->  00:03:58,472
Spend the money, or spend the stars.
73

73

00:03:58,472  -->  00:04:04,065
Okay, first of all, we need a way
of knowing, do we have enough?
74

74

00:04:04,065  -->  00:04:08,091
So let's jump over into star display
which keeps track of whether we do or
75

75

00:04:08,091  -->  00:04:10,402
do not have enough and create ourselves.
76

76

00:04:10,402  -->  00:04:13,807
Let's see I'll do it
underneath update display.
77

77

00:04:13,807  -->  00:04:18,636
We'll create a public
bool cuz we wanna return.
78

78

00:04:18,636  -->  00:04:22,201
Do we or do we not have enough stars?
79

79

00:04:22,201  -->  00:04:24,090
So that's why it's a bool.
80

80

00:04:24,090  -->  00:04:28,173
We'll call it HaveEnoughStars.
81

81

00:04:28,173  -->  00:04:30,710
Can't really put a question mark in there,
but we can say stars,
82

82

00:04:30,710  -->  00:04:31,921
which implies question mark.
83

83

00:04:31,921  -->  00:04:35,922
And we'll pass in each amount, and
I'd like you to finish this off.
84

84

00:04:35,922  -->  00:04:40,015
What is our simple statement
in here to assess whether or
85

85

00:04:40,015  -->  00:04:45,429
not we have enough stars and whether
we should be returning true or false.
86

86

00:04:45,429  -->  00:04:52,701
It is return stars &gt;= amount;.
87

87

00:04:52,701  -->  00:04:55,216
Which is saying,
when we parse in a certain amount,
88

88

00:04:55,216  -->  00:04:57,227
do we have more stars than we have amount?
89

89

00:04:57,227  -->  00:04:59,851
If so, return as true.
90

90

00:04:59,851  -->  00:05:02,471
So yes, you can go ahead and do this.
91

91

00:05:02,471  -->  00:05:05,178
Save that up,
back over into defender spawner.
92

92

00:05:05,178  -->  00:05:09,346
So the first part about if statement is
gonna be using our two variables here.
93

93

00:05:09,346  -->  00:05:11,560
So why don't you give that go and
94

94

00:05:11,560  -->  00:05:15,334
see if you can write the first
line of the if statement.
95

95

00:05:15,334  -->  00:05:20,454
It's gonna be if, and in parenthesis,
96

96

00:05:20,454  -->  00:05:27,684
StarDisplay.HaveEnoughStars that
we just created and
97

97

00:05:27,684  -->  00:05:32,514
we need to pass in what defenderCost?
98

98

00:05:32,514  -->  00:05:34,547
Then, within our code block,
what are we going to do?
99

99

00:05:34,547  -->  00:05:36,833
Well, we need to spawn the defender, so
100

100

00:05:36,833  -->  00:05:40,414
what do we currently have at
the moment for spawning defender?
101

101

00:05:40,414  -->  00:05:43,157
We've got down here, spawn defender,
so we'll just do that.
102

102

00:05:43,157  -->  00:05:49,276
SpawnDefender and we need to pass in what,
vector2 for roundedPosition.
103

103

00:05:49,276  -->  00:05:53,781
So we'll say the gridPosition that we've
just received when the attempt to place
104

104

00:05:53,781  -->  00:05:55,422
defender at has been called.
105

105

00:05:55,422  -->  00:06:01,305
Sorry that will be gridPos; and then our
next line we need to spend the stars.
106

106

00:06:01,305  -->  00:06:03,677
So now the chance is for
you a little mini challenge.
107

107

00:06:03,677  -->  00:06:07,403
Go ahead and spend the stars in this line.
108

108

00:06:07,403  -->  00:06:13,769
Okay, once again,
it's StarDisplay.SpendStars.
109

109

00:06:13,769  -->  00:06:17,093
If you weren't sure what it was there,
then you could've jumped over into
110

110

00:06:17,093  -->  00:06:20,285
our StarDisplay and said,
hang on a minute, what do we need to do?
111

111

00:06:20,285  -->  00:06:23,688
There it is there, SpendStars,
we're passing in the amount.
112

112

00:06:23,688  -->  00:06:25,286
What is the amount we're passing in?
113

113

00:06:25,286  -->  00:06:28,521
That's going to be the defenderCost.
114

114

00:06:28,521  -->  00:06:31,315
Okay; Save that up,
115

115

00:06:31,315  -->  00:06:36,292
delete my comments, tidy up my code.
116

116

00:06:36,292  -->  00:06:37,876
We're looking pretty good.
117

117

00:06:37,876  -->  00:06:41,802
Now we need to go up to the top on our
MouseDown event, instead of SpawnDefender,
118

118

00:06:41,802  -->  00:06:44,516
that now is a method that we've
got wrapped up within our
119

119

00:06:44,516  -->  00:06:46,049
AttemptToPlaceDefenderAt.
120

120

00:06:46,049  -->  00:06:47,665
So we'll change to
121

121

00:06:47,665  -->  00:06:52,320
AttemptToPlaceDefenderAt(GetSquareClick-
ed).
122

122

00:06:52,320  -->  00:06:53,289
And then we'll save that.
123

123

00:06:53,289  -->  00:06:54,987
You know what?
This might work.
124

124

00:06:54,987  -->  00:06:57,898
We'll jump back over into Unity,
click on Play.
125

125

00:06:57,898  -->  00:07:01,412
Once it's finished compiling and
doing what it needs to do.
126

126

00:07:02,540  -->  00:07:04,337
Okay, we've got 100.
127

127

00:07:04,337  -->  00:07:05,853
We're slowly producing stars.
128

128

00:07:05,853  -->  00:07:08,194
If I click on cactus it's worth 100.
129

129

00:07:08,194  -->  00:07:10,453
It goes down to 15, excellent.
130

130

00:07:10,453  -->  00:07:13,673
Then you're gonna wait a little while
until it goes all the way back up.
131

131

00:07:13,673  -->  00:07:14,710
I'm gonna pause and
132

132

00:07:14,710  -->  00:07:18,248
start again just to make sure it works
if we drop down a trophy as well.
133

133

00:07:18,248  -->  00:07:20,582
Click on the trophy, drop the trophy.
134

134

00:07:20,582  -->  00:07:23,164
Great, so now it's working for trophy and
135

135

00:07:23,164  -->  00:07:27,911
the trophies, two of them together
are ticking up the resources even faster.
136

136

00:07:27,911  -->  00:07:29,542
This is starting to feel like a cool game,
isn't it?
137

137

00:07:29,542  -->  00:07:33,131
Well, except for the millions [LAUGH] of
attackers that are coming on the screen.
138

138

00:07:33,131  -->  00:07:35,783
Let's just wait until it goes all
the way back up to 100 again, and
139

139

00:07:35,783  -->  00:07:37,635
we'll click on the cactus so
we've done both.
140

140

00:07:37,635  -->  00:07:39,682
Okay, good,
I'm pretty satisfied with that.
141

141

00:07:39,682  -->  00:07:43,831
We've now got a resource system
where our stars are increasing,
142

142

00:07:43,831  -->  00:07:46,482
as well as decreasing when we spend them.
143

143

00:07:46,482  -->  00:07:49,771
And a quick recap of what we've
done in our code over in Defender.
144

144

00:07:49,771  -->  00:07:54,775
We gave ourselves a mechanism for getting
the StarCost within the Defender Spawner.
145

145

00:07:54,775  -->  00:07:59,061
We've updated and created
AttemptToPlaceDefenderAt and within that,
146

146

00:07:59,061  -->  00:08:03,966
we're basically saying, if you've got
enough Stars, then spawn the defender and
147

147

00:08:03,966  -->  00:08:05,015
spent the stars.
148

148

00:08:05,015  -->  00:08:08,951
We also made sure that within the on
mouse down event we updated our
149

149

00:08:08,951  -->  00:08:10,821
AttemptToPlaceDefenderAt.
150

150

00:08:10,821  -->  00:08:13,939
So instead of just doing
a straight up yep, spawn the guy!
151

151

00:08:13,939  -->  00:08:17,277
We've now wrapped it into
the AttemptToPlaceDefenderAt.
152

152

00:08:17,277  -->  00:08:21,231
So that we're doing a few things in
there including checking if we've got
153

153

00:08:21,231  -->  00:08:22,075
enough stars.
154

154

00:08:22,075  -->  00:08:23,657
Okay so great work in this video.
155

155

00:08:23,657  -->  00:08:26,458
I know it's a little bit deeper there's
a bit convoluted bouncing between
156

156

00:08:26,458  -->  00:08:27,223
script and script.
157

157

00:08:27,223  -->  00:08:30,257
If you're not quite getting it, or
if you've got any questions at all,
158

158

00:08:30,257  -->  00:08:31,567
please throw them in the Q&amp;A.
159

159

00:08:31,567  -->  00:08:35,028
We'd love to hear from you, and love to
help you out if you've got any questions.
160

160

00:08:35,028  -->  00:08:37,090
So, great work and
I'll see you in the next video.
