1
1

00:00:00,265  -->  00:00:04,168
[MUSIC]
2

2

00:00:04,168  -->  00:00:05,555
In this video, it's another big one.
3

3

00:00:05,555  -->  00:00:07,797
We'll gonna be jumping through
a few different scripts.
4

4

00:00:07,797  -->  00:00:12,194
We'll get to the point where when
our level timer is complete and
5

5

00:00:12,194  -->  00:00:14,565
we've killed all of the enemies.
6

6

00:00:14,565  -->  00:00:17,697
We know our functionality
says end the level now.
7

7

00:00:17,697  -->  00:00:21,172
So we're not ending the level just yet,
but we creating all of the functionality
8

8

00:00:21,172  -->  00:00:23,368
so that we know when we should
be ending the level and
9

9

00:00:23,368  -->  00:00:25,179
taking that the player to the next scene.
10

10

00:00:25,179  -->  00:00:27,565
So let's jump in and get started.
11

11

00:00:27,565  -->  00:00:31,225
Let's start by having a look at a diagram
of controlling our victory moment or
12

12

00:00:31,225  -->  00:00:32,531
our level finish moments.
13

13

00:00:32,531  -->  00:00:33,887
So here we go.
14

14

00:00:33,887  -->  00:00:36,515
We've got these classes
Spawner is responsible for
15

15

00:00:36,515  -->  00:00:38,374
obviously spawning our attackers.
16

16

00:00:38,374  -->  00:00:40,629
But when we're looking at
our victory moment for
17

17

00:00:40,629  -->  00:00:42,285
stopping spawning the attackers.
18

18

00:00:42,285  -->  00:00:45,778
The Attacker script is to announce
when the attacker is spawned.
19

19

00:00:45,778  -->  00:00:49,593
Say, I've spawned and also when
the attacker is destroyed or killed.
20

20

00:00:49,593  -->  00:00:52,382
The Level Controller is what
we're focusing on in this video.
21

21

00:00:52,382  -->  00:00:56,004
We need to listen for when the timer
has finished so that we know, a-ha.
22

22

00:00:56,004  -->  00:00:56,727
The timer's finished.
23

23

00:00:56,727  -->  00:00:58,120
The level should be complete.
24

24

00:00:58,120  -->  00:01:00,168
We wanna track the number of attackers and
25

25

00:01:00,168  -->  00:01:03,690
if the number of attackers has
reached zero, you've killed them all.
26

26

00:01:03,690  -->  00:01:05,866
Then we know it's time to end the level.
27

27

00:01:05,866  -->  00:01:09,954
We wanna tell the spawners to stop
spawning when the time is right, and
28

28

00:01:09,954  -->  00:01:13,972
then we wanna enable a Win overlay,
in order to feedback to the user so
29

29

00:01:13,972  -->  00:01:15,590
they know what is going on.
30

30

00:01:15,590  -->  00:01:18,390
And then ultimately to say
let's load the next scene.
31

31

00:01:18,390  -->  00:01:21,126
And the level loader does all
of our loading of levels.
32

32

00:01:21,126  -->  00:01:26,346
So we're gonna be dealing in the level
controller a lot in this lecture,
33

33

00:01:26,346  -->  00:01:30,295
why don't you go a head and
open up your Visual studio.
34

34

00:01:30,295  -->  00:01:34,723
And just so we've some context, we'll
be working in the AttackSpawner script,
35

35

00:01:34,723  -->  00:01:39,342
the Attacker script, the GameTimer script,
maybe we'll touch the LevelLoad, and
36

36

00:01:39,342  -->  00:01:41,674
maybe I'll touch the DefendersSpawner.
37

37

00:01:41,674  -->  00:01:43,576
Just so you've got those scripts open and
38

38

00:01:43,576  -->  00:01:45,814
you're not wondering why
I am bouncing around.
39

39

00:01:45,814  -->  00:01:49,027
The very first thing we're gonna do is
create ourselves a level controller.
40

40

00:01:49,027  -->  00:01:56,389
So start by creating a GameObject,
we'll call this Level Controller.
41

41

00:01:56,389  -->  00:01:58,658
Within that now Level Controller,
42

42

00:01:58,658  -->  00:02:03,584
we're gonna add ourselves a script
which we will call the LevelController.
43

43

00:02:03,584  -->  00:02:05,399
Okay, create and add that script.
44

44

00:02:05,399  -->  00:02:08,905
I'm open that up we'll be
working in this video obviously.
45

45

00:02:12,482  -->  00:02:13,919
There we have the LevelController.
46

46

00:02:13,919  -->  00:02:16,094
You're now gonna do something
a little bit different,
47

47

00:02:16,094  -->  00:02:19,380
I'm gonna give a challenge that's a big
challenge a very open-ended challenge for
48

48

00:02:19,380  -->  00:02:21,474
those of you who are looking for
something advanced.
49

49

00:02:21,474  -->  00:02:25,006
So here's an advanced challenge,
if you're not ready for this, no problem.
50

50

00:02:25,006  -->  00:02:28,316
Follow along with me, I'll give you
some micro challenges as we go.
51

51

00:02:28,316  -->  00:02:31,681
Here it is if you're up for
big challenge, is to create a system
52

52

00:02:31,681  -->  00:02:35,124
that keeps track of how many
attackers we currently have alive.
53

53

00:02:35,124  -->  00:02:38,460
And to listen for
when the timer reaches zero.
54

54

00:02:38,460  -->  00:02:42,849
And when there are no attackers left and
the timer has reached zero,
55

55

00:02:42,849  -->  00:02:45,160
print End Level Now to the console.
56

56

00:02:45,160  -->  00:02:48,435
So we'll be doing more detailed
loading the next level.
57

57

00:02:48,435  -->  00:02:52,271
Giving ourselves a time delay, all that
kind of stuff in an upcoming video or two.
58

58

00:02:52,271  -->  00:02:55,937
But for now, let's just get to the point
where we can print out End Level Now when
59

59

00:02:55,937  -->  00:02:57,160
our criteria is correct.
60

60

00:02:57,160  -->  00:03:00,902
So if you're ready for a bigger challenge,
jump in and take that one on now.
61

61

00:03:00,902  -->  00:03:03,795
And if you're not, no problem,
we can follow through together.
62

62

00:03:05,726  -->  00:03:08,700
Okay, so let's go through this,
we've got our LevelController.
63

63

00:03:08,700  -->  00:03:12,216
You know what I'm gonna do is have
a look at what I've got prefabbed.
64

64

00:03:12,216  -->  00:03:14,865
It's always good to remind yourself
of what you've got prefabbed
65

65

00:03:14,865  -->  00:03:15,771
in our core game here.
66

66

00:03:15,771  -->  00:03:18,298
I'm just gonna drag in
the Damage Collider.
67

67

00:03:18,298  -->  00:03:22,035
Cuz that wasn't prefabbed and dragging
the Level Controller, so it's ready.
68

68

00:03:22,035  -->  00:03:25,394
We can just start applying things back or
probably cuz we're working on the script,
69

69

00:03:25,394  -->  00:03:26,779
it will be applied straightaway.
70

70

00:03:26,779  -->  00:03:28,924
Everything else is looking good.
71

71

00:03:28,924  -->  00:03:32,433
Okay, so
over into our LevelController script.
72

72

00:03:32,433  -->  00:03:35,347
First thing we want is create
ourselves a notion of,
73

73

00:03:35,347  -->  00:03:37,678
how many attackers do we have remaining?
74

74

00:03:37,678  -->  00:03:43,387
So create an integer which
we'll call numberOfAttackers.
75

75

00:03:43,387  -->  00:03:46,179
And we will start that at 0.
76

76

00:03:46,179  -->  00:03:50,819
Also, we want to create ourself
a notion of whether the level timer has
77

77

00:03:50,819  -->  00:03:52,010
finished or not.
78

78

00:03:52,010  -->  00:03:57,121
So I'll create a bool,
I'll call levelTimerFinished.
79

79

00:03:57,121  -->  00:03:59,329
And we will initialize that as false,
80

80

00:03:59,329  -->  00:04:02,297
cuz the level timer has not
finished when we start.
81

81

00:04:02,297  -->  00:04:04,302
Just gonna clean up,
get rid of Start and Update.
82

82

00:04:04,302  -->  00:04:05,991
I'll probably going to bring back Start.
83

83

00:04:05,991  -->  00:04:08,270
I think but for now we'll do this so
it's nice and clean.
84

84

00:04:08,270  -->  00:04:09,198
It's clear what's going on.
85

85

00:04:09,198  -->  00:04:11,106
I'm gonna create two public methods.
86

86

00:04:11,106  -->  00:04:14,327
One that says attacker has spawned and
one that says attacker has killed.
87

87

00:04:14,327  -->  00:04:19,020
So public void AttackerSpawned.
88

88

00:04:19,020  -->  00:04:22,966
Spawned like this, and
then what do we need to do in here,
89

89

00:04:22,966  -->  00:04:27,926
to increase the number of attackers
that we're currently measuring?
90

90

00:04:27,926  -->  00:04:31,498
Remember this is LevelControler,
I'm making this public so
91

91

00:04:31,498  -->  00:04:34,460
we can call it when our
attacker script is created.
92

92

00:04:34,460  -->  00:04:40,657
So we're gonna say in here,
numberOfAttackers++.
93

93

00:04:40,657  -->  00:04:45,160
Okay, let's copy all that cuz we're
gonna replicate it pretty similarly.
94

94

00:04:45,160  -->  00:04:46,917
Paste, public void,
95

95

00:04:46,917  -->  00:04:52,194
instead of AttackerSpawned we
want AttackerKilled or destroyed.
96

96

00:04:52,194  -->  00:04:55,481
No we'll say killed,
that's more sort of game terminology,
97

97

00:04:55,481  -->  00:04:58,221
technically it's when
the attacker is destroyed.
98

98

00:04:58,221  -->  00:05:02,642
But and it's numberOfAttackers--.
99

99

00:05:02,642  -->  00:05:05,927
Okay, so,
let's create our logic in here for
100

100

00:05:05,927  -->  00:05:10,149
what we wanna do when the number
of attackers reaches zero.
101

101

00:05:10,149  -->  00:05:13,752
And I think we can do it in here
each time we call AttackerKilled,
102

102

00:05:13,752  -->  00:05:16,708
that's the moment where we say,
are we at zero yet?
103

103

00:05:16,708  -->  00:05:18,061
Are we at zero yet?
104

104

00:05:18,061  -->  00:05:20,945
And has the level timer finished?
105

105

00:05:20,945  -->  00:05:24,726
So, there's a simple if statement that we
can write in here, and if you didn't take
106

106

00:05:24,726  -->  00:05:28,261
on the challenge and you wanna take
this on now, here's a micro-challenge.
107

107

00:05:28,261  -->  00:05:33,775
Start our if statement to check that
the numberOfAttackers has reached 0,
108

108

00:05:33,775  -->  00:05:36,284
and the level timer has finished.
109

109

00:05:36,284  -->  00:05:42,884
So on our new line,
if (numberOfAttackers &lt;= 0 and
110

110

00:05:42,884  -->  00:05:48,193
double &amp;&amp; there, levelTimerFinished,
111

111

00:05:48,193  -->  00:05:51,212
then what do we wanna do?
112

112

00:05:51,212  -->  00:05:56,108
Well, for now, we're just gonna say
113

113

00:05:56,108  -->  00:06:00,399
Debug.Log, and End Level Now!
114

114

00:06:00,399  -->  00:06:02,456
Yo, okay, cool.
115

115

00:06:02,456  -->  00:06:07,682
So we've created our general structure for
knowing when we should end the level.
116

116

00:06:07,682  -->  00:06:11,164
Let's go and call attacker,
spawn and kill.
117

117

00:06:11,164  -->  00:06:14,255
So we'll jump over into
our Attacker script,
118

118

00:06:14,255  -->  00:06:16,797
this is when our Attacker is created.
119

119

00:06:16,797  -->  00:06:21,305
So right at the very moment that
an instance is created of this class, when
120

120

00:06:21,305  -->  00:06:26,413
an Attacker is born, it will create this
class as well, in instance of this class.
121

121

00:06:26,413  -->  00:06:31,963
We want to increase the numberOfAttackers,
I'm gonna use Awake for this.
122

122

00:06:31,963  -->  00:06:34,901
So, let me write it properly,
so void Awake and
123

123

00:06:34,901  -->  00:06:37,623
it'll auto-complete a little bit there.
124

124

00:06:37,623  -->  00:06:38,477
Why Awake?
125

125

00:06:38,477  -->  00:06:40,415
Well we're gonna use Awake and Destroy.
126

126

00:06:40,415  -->  00:06:44,767
If we have a look at the execution order
here, this is Unity's execution order,
127

127

00:06:44,767  -->  00:06:47,651
the very, very,
first thing that happens is Awake.
128

128

00:06:47,651  -->  00:06:52,015
When a class is created or a script is
called, so we want Awake to make sure
129

129

00:06:52,015  -->  00:06:56,111
that this is happening before
anything else happens on that frame.
130

130

00:06:56,111  -->  00:06:59,408
And at the very end, we're gonna use
OnDestroy, that's the very last thing.
131

131

00:06:59,408  -->  00:07:03,187
And make sure that everything else that
needs to have happened has happened.
132

132

00:07:03,187  -->  00:07:07,124
So void, sorry, private void Awake,
this is where we will look for
133

133

00:07:07,124  -->  00:07:10,595
the Level Controller and
call the methods we just created.
134

134

00:07:10,595  -->  00:07:16,304
So FindObjectOfType, it's
the LevelController we're looking for.
135

135

00:07:16,304  -->  00:07:23,713
And then .AttackerSpawned on
the very moment of waking up.
136

136

00:07:23,713  -->  00:07:31,014
Also, let's put in here,
void OnDestroy, private void OnDestroy.
137

137

00:07:31,014  -->  00:07:40,744
FindObjectOfType this is also
LevelController&gt;().AttackerKilled().
138

138

00:07:40,744  -->  00:07:45,141
Okay, so when the Attacker is born,
we wanna call AttackerSpawned and
139

139

00:07:45,141  -->  00:07:48,822
when the Attacker is destroyed,
we call AttackerKilled.
140

140

00:07:48,822  -->  00:07:51,976
Save that up, back over into our Level
Controller, that all looks pretty good.
141

141

00:07:51,976  -->  00:07:55,314
That should have our numberOfAttackers
going up and down for
142

142

00:07:55,314  -->  00:07:58,592
all of the attackers that
are being created into our scene.
143

143

00:07:58,592  -->  00:08:01,314
Now, how do we know that
our timer has finished?
144

144

00:08:01,314  -->  00:08:04,464
Well let's go over to our GameTimer and
have a look at what's going on here.
145

145

00:08:04,464  -->  00:08:09,196
We need a mechanism to say within our
GameTimer when we reach the point that
146

146

00:08:09,196  -->  00:08:13,945
the timer has finished to say, hey,
timer has finished and to call that.
147

147

00:08:13,945  -->  00:08:18,027
So in LevelController, I'm bouncing
around a bit, sorry about that.
148

148

00:08:18,027  -->  00:08:22,003
So in LevelController let's
create ourselves another method,
149

149

00:08:22,003  -->  00:08:24,397
also a public method, so public void.
150

150

00:08:24,397  -->  00:08:30,013
And we'll call this LevelTimerFinished().
151

151

00:08:30,013  -->  00:08:33,287
Within here, what we want to do is,
we'll scroll up to the top,
152

152

00:08:33,287  -->  00:08:35,544
we made out notion of levelTimerFinished.
153

153

00:08:35,544  -->  00:08:37,898
That's where we need to
turn that into false.
154

154

00:08:37,898  -->  00:08:42,463
So, we'll do that first,
levelTimerFinished = true,
155

155

00:08:42,463  -->  00:08:44,707
sorry, what did I just say?
156

156

00:08:44,707  -->  00:08:48,044
Okay, [LAUGH] it's false at the start,
we need to turn it into true,
157

157

00:08:48,044  -->  00:08:49,053
from false to true.
158

158

00:08:49,053  -->  00:08:53,004
Now something has to call
LevelTimerFinished, what will call that?
159

159

00:08:53,004  -->  00:08:54,143
I gave you a hint just a moment ago.
160

160

00:08:54,143  -->  00:08:59,139
Over to GameTimer, somewhere in here,
we need to call level timer has finished.
161

161

00:08:59,139  -->  00:09:02,230
What do you think that will be?
162

162

00:09:02,230  -->  00:09:05,937
Okay down here where we've got
our debug level timer expired.
163

163

00:09:05,937  -->  00:09:09,423
Instead we're gonna look for
164

164

00:09:09,423  -->  00:09:17,381
ObjectOfType&lt;LevelController&gt;().LevelTime-
rFinished.
165

165

00:09:17,381  -->  00:09:21,758
And at the same time that we do that,
we wanna make sure that this is not
166

166

00:09:21,758  -->  00:09:25,313
continuing to loop through
any sort of functionality.
167

167

00:09:25,313  -->  00:09:28,684
So we wanna stop this from doing what
it's doing when it reaches that point.
168

168

00:09:28,684  -->  00:09:32,968
So I'm gonna create myself
a bool in here as well,
169

169

00:09:32,968  -->  00:09:36,750
that I will call triggeredLevelFinished.
170

170

00:09:36,750  -->  00:09:41,461
Just so we know we have triggered it,
cuz there's gonna be a little bit of time
171

171

00:09:41,461  -->  00:09:45,457
between the time of being done and
us loading into the next scene.
172

172

00:09:45,457  -->  00:09:48,336
In my Update method here,
right at the very top,
173

173

00:09:48,336  -->  00:09:51,438
I'm going to add I'm just
gonna clean up my Update.
174

174

00:09:51,438  -->  00:09:56,485
Hanging curly brace,
if (triggeredLevelFinished),
175

175

00:09:56,485  -->  00:10:00,298
and leaving it like
that means equals true.
176

176

00:10:00,298  -->  00:10:03,392
So if it's true, if this bool is true,
what do we wanna do?
177

177

00:10:03,392  -->  00:10:07,535
We return, because that would
mean we've finished our level and
178

178

00:10:07,535  -->  00:10:12,294
we don't need to consider this anymore,
just leave it as it is basically.
179

179

00:10:12,294  -->  00:10:17,581
And at some point when it very first
changes so down here, bur bur bur.
180

180

00:10:17,581  -->  00:10:21,939
If the timer has finished then we
just want to change our bool down
181

181

00:10:21,939  -->  00:10:25,421
the bottom here
triggeredLevelFinished = true.
182

182

00:10:25,421  -->  00:10:27,323
Okay, hopefully that all makes sense.
183

183

00:10:27,323  -->  00:10:28,629
Okay Save that.
184

184

00:10:28,629  -->  00:10:29,898
Now what are we looking for here?
185

185

00:10:29,898  -->  00:10:31,795
We're looking for our AttackersSpawner.
186

186

00:10:31,795  -->  00:10:34,084
Open that up if you haven't already.
187

187

00:10:34,084  -->  00:10:35,928
He's our AttackerSpawner.
188

188

00:10:35,928  -->  00:10:41,406
And in between our start method and
our Spawner attacker method, line 21 for
189

189

00:10:41,406  -->  00:10:46,801
me, I'm gonna create a public void method,
what I'll call StopSpawning.
190

190

00:10:46,801  -->  00:10:51,341
And, in here, we've already created
ourselves a mechanism way long-ago,
191

191

00:10:51,341  -->  00:10:53,142
where we said, Spawn = true.
192

192

00:10:53,142  -->  00:10:55,750
Now, it's all ready for us to say, oops.
193

193

00:10:55,750  -->  00:11:00,757
To say, if we can type correctly,
spawn = false.
194

194

00:11:00,757  -->  00:11:03,712
Okay as soon as something says or
calls StopSpawning,
195

195

00:11:03,712  -->  00:11:05,389
then we want to stop spawning.
196

196

00:11:05,389  -->  00:11:08,501
And that's for an individual spawner,
remember we have five spawners.
197

197

00:11:08,501  -->  00:11:11,154
So we're gonna have to take
care of that in a moment.
198

198

00:11:11,154  -->  00:11:12,993
But where are we gonna say StopSpawning?
199

199

00:11:12,993  -->  00:11:14,845
In our LevelController.
200

200

00:11:14,845  -->  00:11:18,772
So where we have, LevelTimerFinished
in our LevelController script.
201

201

00:11:18,772  -->  00:11:21,907
Underneath LevelTimerFinished = true,
I'm gonna call a method,
202

202

00:11:21,907  -->  00:11:23,155
I haven't created it yet.
203

203

00:11:23,155  -->  00:11:28,784
But we'll call StopSpawners,
we'll call it StopSpawners(); let's go and
204

204

00:11:28,784  -->  00:11:31,111
create that down below just now.
205

205

00:11:31,111  -->  00:11:36,182
So private void StopSpawners(),
206

206

00:11:36,182  -->  00:11:41,093
and then, put in our curly braces.
207

207

00:11:41,093  -->  00:11:41,941
Now, what are we gonna do here?
208

208

00:11:41,941  -->  00:11:45,077
We wanna find all of the spawners
in our assignment remember,
209

209

00:11:45,077  -->  00:11:46,475
we've got five spawners.
210

210

00:11:46,475  -->  00:11:48,241
Eat one per lane, one,
two, three, four, five.
211

211

00:11:48,241  -->  00:11:50,945
So we need to find each of those,
and to tell them to stop.
212

212

00:11:50,945  -->  00:11:56,890
So we need to create an array
of type AttackerSpawner.
213

213

00:11:56,890  -->  00:12:01,219
And then our square braces for
an array and
214

214

00:12:01,219  -->  00:12:07,661
we'll call this spawnerArray and
that will be FindObjects.
215

215

00:12:07,661  -->  00:12:08,788
Remember this?
216

216

00:12:08,788  -->  00:12:10,458
Objects of type,
what are we looking for here?
217

217

00:12:10,458  -->  00:12:12,326
We're looking for attacker spawner.
218

218

00:12:12,326  -->  00:12:16,540
Find all the attacker spawners,
and then for each of these, for
219

219

00:12:16,540  -->  00:12:18,189
each AttackerSpawner.
220

220

00:12:18,189  -->  00:12:23,045
So foreach (AttackerSpawner spawner), so
221

221

00:12:23,045  -->  00:12:28,025
of each type AttackerSpawner
called spawner,
222

222

00:12:28,025  -->  00:12:33,261
in spawnerArray that
we've just created above.
223

223

00:12:33,261  -->  00:12:34,639
What do we wanna do?
224

224

00:12:34,639  -->  00:12:36,848
Well, we say spawner.
225

225

00:12:36,848  -->  00:12:40,062
So for each of this individual
226

226

00:12:40,062  -->  00:12:45,340
spawners.StopSpawning that
we just created.
227

227

00:12:45,340  -->  00:12:52,918
Okay, so, When we see that the level timer
is finished, we stop spawning attackers.
228

228

00:12:52,918  -->  00:12:56,994
We stop spawning attackers
by creating an array and
229

229

00:12:56,994  -->  00:13:02,597
finding each spawner within our array,
we say please StopSpawning.
230

230

00:13:02,597  -->  00:13:04,284
How do we know what StopSpawning is?
231

231

00:13:04,284  -->  00:13:08,575
Well, we're gonna save, we just created
that over in our AttackerSpawner,
232

232

00:13:08,575  -->  00:13:11,773
that's the public method
that's called StopSpawning.
233

233

00:13:11,773  -->  00:13:15,307
I feel this is all feeling pretty good,
we've got our game timer in here,
234

234

00:13:15,307  -->  00:13:19,242
we know when that is all done, that looks
good, we've got our AttackerSpawner,
235

235

00:13:19,242  -->  00:13:20,743
that's looking pretty good.
236

236

00:13:20,743  -->  00:13:23,939
Level controller is looking pretty good,
let's go and
237

237

00:13:23,939  -->  00:13:27,348
see what if any errors we're
getting when we try to do this.
238

238

00:13:27,348  -->  00:13:31,295
Actually, you know what, I'm going
to go to my Canvas, not my Cactus,
239

239

00:13:31,295  -->  00:13:35,143
the Canvas find the Slider within
the Slider I will find my GameTimer.
240

240

00:13:35,143  -->  00:13:37,542
And just put this down to three, just so
241

241

00:13:37,542  -->  00:13:40,756
we can stop our spawning
happening pretty quickly.
242

242

00:13:40,756  -->  00:13:42,531
We'll have a look and
see what happens here.
243

243

00:13:42,531  -->  00:13:46,075
I wanna make sure that I
throw in some defenders so
244

244

00:13:46,075  -->  00:13:48,936
that I'm not [SOUND], I'm not killed.
245

245

00:13:48,936  -->  00:13:50,703
The timer's reached the end.
246

246

00:13:50,703  -->  00:13:52,966
We've got a couple more attackers
that we're still spawning in.
247

247

00:13:52,966  -->  00:13:56,875
That last guy is killed, and then End
Level Now has flashed up on the screen.
248

248

00:13:56,875  -->  00:14:00,819
Okay, great, we've got our functionality
where when the timer reaches the end,
249

249

00:14:00,819  -->  00:14:02,240
we then say, stop spawning.
250

250

00:14:02,240  -->  00:14:05,078
There's a little bit of a delay
cuz they're still spawning in for
251

251

00:14:05,078  -->  00:14:06,016
a moment after that.
252

252

00:14:06,016  -->  00:14:09,777
And then once we kill the final of those
attackers, that's the best experience.
253

253

00:14:09,777  -->  00:14:13,291
We don't wanna have the level and suddenly
and you've still got attackers coming in.
254

254

00:14:13,291  -->  00:14:16,247
It's all about killing the last guy and
celebrating.
255

255

00:14:16,247  -->  00:14:18,949
Then, we get to the point where
we can load the next level.
256

256

00:14:18,949  -->  00:14:22,100
Now while I'm here I just noticed there's
some debug information that we just don't
257

257

00:14:22,100  -->  00:14:22,677
need anymore.
258

258

00:14:22,677  -->  00:14:24,573
So I'm going to go on and resolve that.
259

259

00:14:24,573  -->  00:14:25,885
See how we've got this 3, 4,
260

260

00:14:25,885  -->  00:14:28,128
the coordinates where we
were placing our defenders.
261

261

00:14:28,128  -->  00:14:30,692
So just double click on that,
262

262

00:14:30,692  -->  00:14:36,550
it will take me to Debug.Log(roundedPos)
in DefenderSpawner.
263

263

00:14:36,550  -->  00:14:38,378
Delete that, save it up, and
264

264

00:14:38,378  -->  00:14:42,997
now we shouldn't have any of those
messages onto the screen which is cool.
265

265

00:14:42,997  -->  00:14:45,221
Just tidying things up
a little bit as we go.
266

266

00:14:45,221  -->  00:14:47,497
And I think that's pretty awesome for
this video.
267

267

00:14:47,497  -->  00:14:50,465
So well done, in the next video we'll
do a little bit more of the loading
268

268

00:14:50,465  -->  00:14:53,694
functionality and giving the player
a little bit of a better win experience.
269

269

00:14:53,694  -->  00:14:55,240
So great work, and
I'll see you in the next video.
