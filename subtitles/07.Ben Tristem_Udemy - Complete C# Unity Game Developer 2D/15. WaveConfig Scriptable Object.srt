1
1

00:00:00,000  -->  00:00:01,432
[MUSIC]
2

2

00:00:01,432  -->  00:00:06,220
In this video, we're gonna create
our first wave ScriptableObject,
3

3

00:00:06,220  -->  00:00:11,086
our WaveConfig file, which will have
the enemy prefab, path prefab and
4

4

00:00:11,086  -->  00:00:14,230
some information about
the spawning itself.
5

5

00:00:14,230  -->  00:00:17,580
So let's jump in, talk about
the structure of what we're doing and
6

6

00:00:17,580  -->  00:00:20,540
create our first wave configuration.
7

7

00:00:20,540  -->  00:00:21,940
Yeah, let's talk about enemy waves.
8

8

00:00:21,940  -->  00:00:24,790
First of all,
we will be spawning enemy waves.
9

9

00:00:24,790  -->  00:00:28,810
Spawn X enemies, for example,
11 as I have here going along a path.
10

10

00:00:28,810  -->  00:00:31,620
We've already created our path or
at least a framework for it.
11

11

00:00:31,620  -->  00:00:34,560
And there's a whole bunch of information
that we need our wave to have.
12

12

00:00:34,560  -->  00:00:36,680
So we want our wave to have
a particular enemy type.
13

13

00:00:36,680  -->  00:00:41,300
For example, this guy, we'll call him
Roger the Orange Thai Fighter and
14

14

00:00:41,300  -->  00:00:43,910
we need to have a certain speed
that Roger will be flying.
15

15

00:00:43,910  -->  00:00:47,610
We need to know how many Rogers we'll be
spawning, and also the spawn rate, so
16

16

00:00:47,610  -->  00:00:50,378
how fast the various Rogers can
add [LAUGH] onto the screen.
17

17

00:00:50,378  -->  00:00:52,754
Is that working, calling him Roger?
18

18

00:00:52,754  -->  00:00:53,554
I'm not sure if it is.
19

19

00:00:53,554  -->  00:00:55,233
Anyway, you get the point.
20

20

00:00:55,233  -->  00:00:59,142
We need to have things spawning, and
as much data as possible we want to have
21

21

00:00:59,142  -->  00:01:01,625
sitting in our ScriptableObject
asset file and
22

22

00:01:01,625  -->  00:01:04,934
not scattered around on the various
places within the script.
23

23

00:01:04,934  -->  00:01:08,600
We wanna shove as much data as
we can In that ScriptableObject.
24

24

00:01:08,600  -->  00:01:11,301
Okay, so let´s have a look
at which script owns what,
25

25

00:01:11,301  -->  00:01:13,957
cuz it´s gonna be getting
a little bit complicated.
26

26

00:01:13,957  -->  00:01:18,132
And we´ll be having a few scripts that are
accessing information from other scripts
27

27

00:01:18,132  -->  00:01:19,620
in this particular project.
28

28

00:01:19,620  -->  00:01:21,348
So we need our Enemy Spawner,
29

29

00:01:21,348  -->  00:01:25,231
as a script to say pushing
things into the world under the.
30

30

00:01:25,231  -->  00:01:27,701
We need the enemy itself
with its behavior.
31

31

00:01:27,701  -->  00:01:30,738
We need the Wave Config and
we need the enemy pathing,
32

32

00:01:30,738  -->  00:01:34,050
which we've already created
in previous lectures.
33

33

00:01:34,050  -->  00:01:35,960
So what is in each of these,
the enemy spawner,
34

34

00:01:35,960  -->  00:01:37,930
I'll be putting in the order of the wave.
35

35

00:01:37,930  -->  00:01:41,740
So wave one, and then wave two, and then
wave three, and then maybe wave one again,
36

36

00:01:41,740  -->  00:01:43,330
and then wave two and so on.
37

37

00:01:43,330  -->  00:01:47,600
We need to spawn each wave, so the Enemy
Spawner needs to say radio wave one,
38

38

00:01:47,600  -->  00:01:52,060
spawn yourself and
then spawn each enemy within the wave.
39

39

00:01:52,060  -->  00:01:55,650
Okay, wave one, enemy one, go,
enemy two, go, enemy three, go.
40

40

00:01:55,650  -->  00:01:58,900
Okay, there was only three,
now we need to go into wave number two.
41

41

00:01:58,900  -->  00:02:01,470
So that's all in the enemy spawner.
42

42

00:02:01,470  -->  00:02:04,640
The enemy.cs needs to
hold the enemy sprite.
43

43

00:02:04,640  -->  00:02:07,430
So Roger is gonna be
this orange Thai fighter.
44

44

00:02:07,430  -->  00:02:11,800
We need to know what this sprite looks
like, how many hit points this enemy has,
45

45

00:02:11,800  -->  00:02:16,250
the shooting behavior, how fast it shoots,
what sort of damage it does, and so on.
46

46

00:02:16,250  -->  00:02:20,281
And the score, if you kill this enemy,
needs to be sitting on the enemy itself.
47

47

00:02:20,281  -->  00:02:24,380
So it's nice and clean, and the enemy
death sound effects and visual effects.
48

48

00:02:24,380  -->  00:02:28,220
Okay, our wave config,
this will be our ScriptableObject file.
49

49

00:02:28,220  -->  00:02:31,400
In here we need the path's
waypoint data and
50

50

00:02:31,400  -->  00:02:33,910
then also we need to know
which enemy prefab to use.
51

51

00:02:33,910  -->  00:02:37,130
And the enemy prefab is gonna have
all of this information over here.
52

52

00:02:37,130  -->  00:02:39,290
We need to know the, I don't have
my laser pointer on, there we go.
53

53

00:02:39,290  -->  00:02:41,840
We need to have the spawn speed for
the wave.
54

54

00:02:41,840  -->  00:02:43,180
We need to know how many enemies.
55

55

00:02:43,180  -->  00:02:45,640
And we need to know
the movement speed of the wave.
56

56

00:02:45,640  -->  00:02:50,820
So the spawn speed is say,
spawning one every one second.
57

57

00:02:50,820  -->  00:02:53,050
Whereas the movement speed is
when you get onto the screen,
58

58

00:02:53,050  -->  00:02:55,070
you move it five units per second.
59

59

00:02:55,070  -->  00:02:57,730
So that information I think we
should have on the wave config.
60

60

00:02:57,730  -->  00:02:59,940
Then the enemy pathing, well,
we've already created a bunch of that.
61

61

00:02:59,940  -->  00:03:03,060
That's just saying,
move the enemy along the current path.
62

62

00:03:03,060  -->  00:03:04,390
Where do we get the current path from?
63

63

00:03:04,390  -->  00:03:07,060
Well, we need to be getting
that from the enemy spawner.
64

64

00:03:07,060  -->  00:03:09,380
The enemy spawner is saying things like,
okay,
65

65

00:03:09,380  -->  00:03:11,960
how many enemies are in
my particular wave?
66

66

00:03:11,960  -->  00:03:15,600
So the enemy spawner is grabbing
information from the wave config.
67

67

00:03:15,600  -->  00:03:19,530
The enemy spawner is pushing
information to the wave pathing or
68

68

00:03:19,530  -->  00:03:22,590
the enemy pathing is grabbing
from the enemy spawner.
69

69

00:03:22,590  -->  00:03:24,960
So there's a lot of
interconnected relationships.
70

70

00:03:24,960  -->  00:03:29,355
But the first step is to say where are we
putting the various pieces of information?
71

71

00:03:29,355  -->  00:03:31,740
So I've spent a bunch
of time on this just so
72

72

00:03:31,740  -->  00:03:33,750
you're clear when we're
typing up our scripts.
73

73

00:03:33,750  -->  00:03:34,760
You're not saying where are we?
74

74

00:03:34,760  -->  00:03:35,765
What are we doing this for?
75

75

00:03:35,765  -->  00:03:36,750
How does it all make sense?
76

76

00:03:36,750  -->  00:03:37,960
I wanna make it super clear.
77

77

00:03:37,960  -->  00:03:40,340
This is the game plan.
78

78

00:03:40,340  -->  00:03:44,710
So let's jump in and create ourselves
our ScriptableObject script.
79

79

00:03:44,710  -->  00:03:49,560
First of all, we'll go in our Scripts
folder, right-click, and Create.
80

80

00:03:49,560  -->  00:03:54,510
We will create a C# script,
and I will call this
81

81

00:03:54,510  -->  00:03:58,280
our WaveConfig and then hit Enter.
82

82

00:03:59,690  -->  00:04:01,750
Okiedokie, open up WaveConfig.
83

83

00:04:01,750  -->  00:04:06,400
This is where we will change
it from a MonoBehaviour
84

84

00:04:06,400  -->  00:04:09,810
file to being a ScriptableObject file.
85

85

00:04:09,810  -->  00:04:12,882
And as soon as it opens up, okay,
so instead of MonoBehaviour,
86

86

00:04:12,882  -->  00:04:17,075
we are having this as a ScriptableObject.
87

87

00:04:17,075  -->  00:04:21,115
Excellent, and as we've done
previously with scriptable objects,
88

88

00:04:21,115  -->  00:04:24,415
the one other time that we've worked
on scriptable objects in this course,
89

89

00:04:24,415  -->  00:04:28,125
we want to create ourselves a menu so
that we can add this into our scene.
90

90

00:04:28,125  -->  00:04:31,405
So open up our square bracket say,
CreateAssetMenu.
91

91

00:04:31,405  -->  00:04:39,490
And then, we need a name for this, so
menuName =, what's it going to equal?
92

92

00:04:39,490  -->  00:04:42,960
We'll call this Enemy Wave Config.
93

93

00:04:42,960  -->  00:04:46,730
So if English is not your first language,
or if video games is not your first
94

94

00:04:46,730  -->  00:04:50,450
language, then Config is just
a short way of saying configuration.
95

95

00:04:50,450  -->  00:04:53,475
Configuration is the way
that things are arranged.
96

96

00:04:53,475  -->  00:04:57,264
So config is kind of a word that
we use for data files like this.
97

97

00:04:57,264  -->  00:04:58,316
Okay, we'll save that.
98

98

00:04:58,316  -->  00:05:01,520
We'll just check this work, okay,
I'm going to just put it anywhere near.
99

99

00:05:01,520  -->  00:05:02,240
I'm just testing it.
100

100

00:05:02,240  -->  00:05:03,500
I'm not actually creating at the moment.
101

101

00:05:03,500  -->  00:05:06,754
Right click anywhere in our assets area,
Create, and
102

102

00:05:06,754  -->  00:05:09,380
enemy wave config is there already, cool.
103

103

00:05:09,380  -->  00:05:10,160
You know what I will do.
104

104

00:05:10,160  -->  00:05:11,720
I will create one of these.
105

105

00:05:11,720  -->  00:05:12,928
We'll call it wave 1.
106

106

00:05:12,928  -->  00:05:17,510
Now we're gonna have a little bit of
fun figuring out how to name our waves,
107

107

00:05:17,510  -->  00:05:22,480
because in my particular game I'm gonna
have Wave 1 and then 2, and then 1 and
108

108

00:05:22,480  -->  00:05:23,570
then 3 and then 2.
109

109

00:05:23,570  -->  00:05:27,710
So the wave here is
the identification of it.
110

110

00:05:27,710  -->  00:05:29,960
It's not necessarily the order
that it comes out in.
111

111

00:05:29,960  -->  00:05:32,410
So you could call it wave A or
112

112

00:05:32,410  -->  00:05:37,120
wave B or wave 72 or Jeremy the froggie
wave, whatever you wanna do.
113

113

00:05:37,120  -->  00:05:39,860
For now I'm just gonna say wave
1 until I get to the point where
114

114

00:05:39,860  -->  00:05:42,770
I think I need a different waving
convention, waving convention?
115

115

00:05:42,770  -->  00:05:44,810
Maybe it's a naming convention, Rick.
116

116

00:05:44,810  -->  00:05:47,450
Okay, so I'll give myself a new folder,
just to tidy all of this up.
117

117

00:05:47,450  -->  00:05:52,430
Create Folder, Waves, and
then where did we stuff that a moment ago?
118

118

00:05:52,430  -->  00:05:56,690
We had it in Scripts,
drag Wave1 into Waves.
119

119

00:05:56,690  -->  00:05:58,390
There we go, we've got our first wave.
120

120

00:05:58,390  -->  00:06:03,155
Nothing in there as of yet, let's rectify
that back over into our WaveConfig.cs.
121

121

00:06:03,155  -->  00:06:06,010
I'm gonna eliminate my Start and Update,
122

122

00:06:06,010  -->  00:06:11,220
we won't be needing those and
creating ourselves some variables.
123

123

00:06:11,220  -->  00:06:13,290
So we'll do some SerializedField.
124

124

00:06:15,020  -->  00:06:17,690
First one I'll say GameObject,
what should we create?
125

125

00:06:17,690  -->  00:06:23,700
We'll start off by saying what our
enemy prefab is, so enemyPrefab;.
126

126

00:06:23,700  -->  00:06:25,120
I'll just put all of these in here for
now,
127

127

00:06:25,120  -->  00:06:26,850
all the things that I think we'll need.
128

128

00:06:26,850  -->  00:06:29,110
Next up I will do SerializedField again.
129

129

00:06:30,320  -->  00:06:34,420
SerializedField, this will
also be a GameObject cuz
130

130

00:06:34,420  -->  00:06:39,030
I would like to put in the pathPrefab.
131

131

00:06:39,030  -->  00:06:42,750
So we've already created both of these,
enemyPrefab and pathPrefab.
132

132

00:06:42,750  -->  00:06:45,760
Now I will create another SerializedField.
133

133

00:06:45,760  -->  00:06:46,847
I'll serialize a float.
134

134

00:06:46,847  -->  00:06:49,543
And this float will be
time between spawns.
135

135

00:06:49,543  -->  00:06:53,214
That's how quickly we want
our enemies to spawn.
136

136

00:06:53,214  -->  00:06:56,759
I'll initialize this at 0.5f,
f, okay, cuz it's a float.
137

137

00:06:56,759  -->  00:06:59,163
And I'll create another one.
138

138

00:06:59,163  -->  00:07:03,308
And this is where I'd like to give
myself a little bit of randomness so
139

139

00:07:03,308  -->  00:07:07,096
they're not coming out exactly at 0.5,
0.5, 0.5,
140

140

00:07:07,096  -->  00:07:10,399
which can be a little bit dull and
a little bit obvious.
141

141

00:07:10,399  -->  00:07:13,220
So I'll create a spawnRandomFactor.
142

142

00:07:13,220  -->  00:07:18,000
And I'll initialize this at 0.3.
143

143

00:07:18,000  -->  00:07:21,550
And this randomness just makes our game
feel a little bit more organic and
144

144

00:07:21,550  -->  00:07:23,210
not quite so rigid.
145

145

00:07:23,210  -->  00:07:26,670
You want to get that organic-ness
into your game wherever you can and
146

146

00:07:26,670  -->  00:07:29,420
not have things look really
super predictable and
147

147

00:07:29,420  -->  00:07:31,918
robotic, unless you're making
a robotic game, of course.
148

148

00:07:31,918  -->  00:07:36,440
Okay, SerializeField,
[LAUGH] robotic game, this will be an int.
149

149

00:07:36,440  -->  00:07:39,890
The next one we'll have numberOfEnemies,
Enemies, and
150

150

00:07:39,890  -->  00:07:42,290
I know this is a lot of you
following me at the moment.
151

151

00:07:42,290  -->  00:07:45,120
I'll give you a chance to write
your own stuff in just a moment.
152

152

00:07:45,120  -->  00:07:46,610
But we'll crack these out.
153

153

00:07:46,610  -->  00:07:50,440
I'm gonna initialized 10,
no, I'll say 5 in a wave.
154

154

00:07:50,440  -->  00:07:52,110
Doesn't matter, it's very easy, it's fine.
155

155

00:07:52,110  -->  00:07:53,427
Not an f cuz it's an int.
156

156

00:07:53,427  -->  00:07:56,920
Very easy for us to change this
in our ScriptableObject but
157

157

00:07:56,920  -->  00:08:00,994
we just want something to start with,
so 5 I think's pretty good.
158

158

00:08:00,994  -->  00:08:04,836
And then the last one we'll do for
now, SerializeField float,
159

159

00:08:04,836  -->  00:08:06,341
this will be moveSpeed.
160

160

00:08:06,341  -->  00:08:11,979
So tthe moveSpeed of the enemies
that are in this particular wave.
161

161

00:08:11,979  -->  00:08:14,943
And we'll start with 2,
2f, and we'll save there.
162

162

00:08:14,943  -->  00:08:15,651
Okay, so
163

163

00:08:15,651  -->  00:08:21,360
this is the data that we want to have in
each of our Wave Configuration files.
164

164

00:08:21,360  -->  00:08:25,050
At this point you're welcome to put more
in as we go along, that's totally cool.
165

165

00:08:25,050  -->  00:08:28,000
And the next step is for
us to give a way for
166

166

00:08:28,000  -->  00:08:31,570
our other scripts to
access this information.
167

167

00:08:31,570  -->  00:08:34,330
And so
we'll create our first public method.
168

168

00:08:34,330  -->  00:08:38,450
Let's say public, and this will be
whatever our first one up here,
169

169

00:08:38,450  -->  00:08:40,780
GameObject, so GameObject.
170

170

00:08:42,160  -->  00:08:44,040
And basically I'm gonna say get and
171

171

00:08:44,040  -->  00:08:46,660
then the particular information
that we've got there.
172

172

00:08:46,660  -->  00:08:51,840
So I'll say GetEnemyPrefab
will be my method.
173

173

00:08:53,300  -->  00:08:55,250
And typically,
this is the way that we create.
174

174

00:08:55,250  -->  00:09:00,660
We give ourselves a new line and
then we have our curly braces.
175

175

00:09:00,660  -->  00:09:05,110
And within here I would
say return enemyPrefab.
176

176

00:09:06,360  -->  00:09:08,560
Okay, and we've been through this
before in previous sections.
177

177

00:09:08,560  -->  00:09:12,230
So I'm just trying to reinforce this
aspect of scriptable objects that we have
178

178

00:09:12,230  -->  00:09:16,150
the data is sitting within here and
then other scripts are welcome to come and
179

179

00:09:16,150  -->  00:09:18,460
pull from that and get that information.
180

180

00:09:18,460  -->  00:09:22,160
Now, to conserve space a little bit,
cuz we're gonna have one of these, so
181

181

00:09:22,160  -->  00:09:26,590
one of these public methods for
each of our pieces of data in here.
182

182

00:09:26,590  -->  00:09:31,780
I'm going to pull my return
up onto the same line.
183

183

00:09:31,780  -->  00:09:33,070
It's totally cool to do this.
184

184

00:09:34,930  -->  00:09:36,167
And like that, so there it is.
185

185

00:09:36,167  -->  00:09:37,179
We need to do this for
186

186

00:09:37,179  -->  00:09:41,122
the remainder of our variables, which
is where I've got a challenge for you.
187

187

00:09:41,122  -->  00:09:43,275
And that is to complete
the public methods for each.
188

188

00:09:43,275  -->  00:09:46,023
And take note of the fact
that I'm saying for
189

189

00:09:46,023  -->  00:09:51,021
each because in an upcoming video we're
gonna be talking about for each loops.
190

190

00:09:51,021  -->  00:09:55,696
So conceptually I'm saying, for each of
our WaveConfig variables, so for this one,
191

191

00:09:55,696  -->  00:09:59,871
and this one, and this one, and this one,
which is what a for each is saying.
192

192

00:09:59,871  -->  00:10:04,766
So for each of those, create a public
Get method which returns the variable,
193

193

00:10:04,766  -->  00:10:07,090
just as I did for the first one.
194

194

00:10:07,090  -->  00:10:08,300
Okay, should be pretty straightforward.
195

195

00:10:08,300  -->  00:10:11,220
Just follow what I have done and
I'll see you back here in a moment.
196

196

00:10:13,601  -->  00:10:16,690
Okay, now shall I cheat and
do some copy pasting?
197

197

00:10:16,690  -->  00:10:18,600
I think I will.
198

198

00:10:18,600  -->  00:10:21,850
And paste will say public,
it's a GameObject, yes.
199

199

00:10:21,850  -->  00:10:23,100
Get, what are we getting?
200

200

00:10:24,490  -->  00:10:30,460
GetPathPrefab will be the name of this
method and return the pathPrefab.
201

201

00:10:30,460  -->  00:10:33,100
So just using that information from there.
202

202

00:10:33,100  -->  00:10:36,300
Okay, so the next one is going
to be time between spawns.
203

203

00:10:37,560  -->  00:10:41,765
So again, public, and we need to
204

204

00:10:41,765  -->  00:10:46,731
return the type that this variable is.
205

205

00:10:46,731  -->  00:10:53,212
So we need to say public float,
GetTimeBetweenSpawns,
206

206

00:10:53,212  -->  00:11:00,098
and we need our parentheses and
return timeBetweenSpawns,
207

207

00:11:00,098  -->  00:11:04,800
okay, and semicolon after that.
208

208

00:11:04,800  -->  00:11:08,230
Right, now I will copy this one,
cuz it's a float.
209

209

00:11:08,230  -->  00:11:13,863
Copy that, GetSpawn, sorry,
GetSpawnRandomFactor, okay.
210

210

00:11:13,863  -->  00:11:19,626
Hopefully, you did this well and
you had no worries with it so
211

211

00:11:19,626  -->  00:11:25,615
I'm just validating what you've
got on your screen already so
212

212

00:11:25,615  -->  00:11:27,994
be SpawnRandomFactor.
213

213

00:11:27,994  -->  00:11:33,220
And then we need an int,
and I'll paste here.
214

214

00:11:33,220  -->  00:11:35,840
Even though if it's not an int,
I can just change that float to an int,
215

215

00:11:35,840  -->  00:11:37,280
how easy was that?
216

216

00:11:37,280  -->  00:11:41,498
Okay, GetNumberOfEnemies and
217

217

00:11:41,498  -->  00:11:46,560
then return numberOfEnemies.
218

218

00:11:46,560  -->  00:11:52,290
And we shall have one more, which will
be public, it is a float, it's gonna
219

219

00:11:54,160  -->  00:11:59,400
be GetMoveSpeed return moveSpeed.
220

220

00:11:59,400  -->  00:12:02,020
Everything looks pretty honky dory.
221

221

00:12:02,020  -->  00:12:05,090
Back over into Unity,
we'll have a look at Wave 1.
222

222

00:12:05,090  -->  00:12:08,420
Give Unity a moment to recompile and
think about things, and
223

223

00:12:08,420  -->  00:12:11,920
you can see that we've got all of this
data sitting here ready to be populated.
224

224

00:12:11,920  -->  00:12:17,490
The enemy prefab, so clicking our prefabs
folder, drag over the enemy prefab.
225

225

00:12:17,490  -->  00:12:19,580
There we go, the path prefab,
226

226

00:12:19,580  -->  00:12:24,060
we need to click in the paths and
drag over the parent.
227

227

00:12:24,060  -->  00:12:26,470
And at the moment that's
not gonna mean much but
228

228

00:12:26,470  -->  00:12:30,050
we will update that in the next video
in terms of what that will mean.
229

229

00:12:30,050  -->  00:12:31,150
Okay, so that's it for now.
230

230

00:12:31,150  -->  00:12:34,730
We've given ourselves our
first ScriptableObject wave.
231

231

00:12:34,730  -->  00:12:36,340
Excellent work,
nothing's gonna be changed.
232

232

00:12:36,340  -->  00:12:39,330
Just at the moment we need to hook it up,
but we are well on our way.
233

233

00:12:39,330  -->  00:12:40,850
Great work and
we'll see you in the next video.
