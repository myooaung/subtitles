WEBVTT
1
00:00:00.000 --> 00:00:02.020
- [Instructor] Previously we added mapping

2
00:00:02.020 --> 00:00:04.000
jackson two message converter,

3
00:00:04.000 --> 00:00:07.010
which serializes and deserializes messages

4
00:00:07.010 --> 00:00:09.090
to and from our json format.

5
00:00:09.090 --> 00:00:13.060
Sometimes you may need to send messages in xml format.

6
00:00:13.060 --> 00:00:15.040
I'll quickly demonstrate how that is done

7
00:00:15.040 --> 00:00:17.080
with springs other messaging converter strategy,

8
00:00:17.080 --> 00:00:19.090
the marshaling message converter

9
00:00:19.090 --> 00:00:21.070
utilizing the simplicity and power

10
00:00:21.070 --> 00:00:26.020
of extreme xml framework with an extreme marshaller.

11
00:00:26.020 --> 00:00:29.050
Now opening up our build gradle file,

12
00:00:29.050 --> 00:00:31.060
you'll notice that I have already added

13
00:00:31.060 --> 00:00:34.070
the necessary dependencies for both our extreme

14
00:00:34.070 --> 00:00:37.060
and our spring oxm dependency.

15
00:00:37.060 --> 00:00:39.080
We'll need these as we begin to add our

16
00:00:39.080 --> 00:00:43.080
xml marshallers and converters.

17
00:00:43.080 --> 00:00:45.090
With that done, we need to go back and open up

18
00:00:45.090 --> 00:00:49.080
our jms config class and we'll add a new bean.

19
00:00:49.080 --> 00:00:53.050
We'll add this bean immediately below our jackson

20
00:00:53.050 --> 00:01:02.000
jms converter, we'll type at bean

21
00:01:02.000 --> 00:01:05.040
public message converter.

22
00:01:05.040 --> 00:01:07.040
Again we're gonna make sure that we select

23
00:01:07.040 --> 00:01:10.060
the jms message converter type.

24
00:01:10.060 --> 00:01:19.060
We'll type in xml marshaling message converter.

25
00:01:19.060 --> 00:01:25.060
And I'm going to instantiate marshaling

26
00:01:25.060 --> 00:01:28.030
message converter, and again we need to use

27
00:01:28.030 --> 00:01:31.040
the jms message converter.

28
00:01:31.040 --> 00:01:37.060
Call this converter equals new marshaling converter.

29
00:01:37.060 --> 00:01:39.070
Now the marshaling message converter constructor

30
00:01:39.070 --> 00:01:42.040
requires some parameters.

31
00:01:42.040 --> 00:01:44.040
We'll add those in a moment.

32
00:01:44.040 --> 00:01:47.090
Next we're going to add our converter again,

33
00:01:47.090 --> 00:01:50.040
we're gonna set the target type

34
00:01:50.040 --> 00:01:53.020
and we'll say message type is text

35
00:01:53.020 --> 00:01:58.020
as well as previously you could make this a bytes message,

36
00:01:58.020 --> 00:02:02.000
and then we're going to return our converter.

37
00:02:02.000 --> 00:02:04.040
You'll notice that we didn't have to provide

38
00:02:04.040 --> 00:02:08.010
a set type ID property name like we did with

39
00:02:08.010 --> 00:02:12.080
the jackson jms converter.

40
00:02:12.080 --> 00:02:17.020
The marshaler doesn't require that.

41
00:02:17.020 --> 00:02:20.010
The marshaler does though, the messaging converter does

42
00:02:20.010 --> 00:02:23.000
require a marshaler and unmarshaler.

43
00:02:23.000 --> 00:02:25.070
So the marshaling message converter constructor

44
00:02:25.070 --> 00:02:27.060
will require some parameters.

45
00:02:27.060 --> 00:02:32.030
To populate these we're going to need to create another bean

46
00:02:32.030 --> 00:02:41.090
and we'll create a bean and we'll call this the public

47
00:02:41.090 --> 00:02:58.040
extreme marshaler, and we'll call that the xml marshaler.

48
00:02:58.040 --> 00:03:03.030
We'll instantiate an extreme marshaler,

49
00:03:03.030 --> 00:03:05.040
we'll just call that our marshaler equals

50
00:03:05.040 --> 00:03:11.030
new extreme marshaler.

51
00:03:11.030 --> 00:03:15.020
And the marshaler we're going to have to set

52
00:03:15.020 --> 00:03:19.060
the supported classes, this will ensure that it knows what

53
00:03:19.060 --> 00:03:24.040
classes need to be serialized and deserialized,

54
00:03:24.040 --> 00:03:28.080
so we're gonna use our book class.

55
00:03:28.080 --> 00:03:36.030
We're going to use our customer class

56
00:03:36.030 --> 00:03:46.010
and our book order class.

57
00:03:46.010 --> 00:03:49.050
And as you can see here I didn't provide the right method,

58
00:03:49.050 --> 00:03:50.090
let's just correct that real quick,

59
00:03:50.090 --> 00:03:55.030
set supported classes, there we go.

60
00:03:55.030 --> 00:04:01.000
And finally we're going to return marshaler.

61
00:04:01.000 --> 00:04:03.020
Now let's modify our spring bean again

62
00:04:03.020 --> 00:04:05.080
for the xml marshaling message converter.

63
00:04:05.080 --> 00:04:09.090
And we're going to supply it with our parameter

64
00:04:09.090 --> 00:04:12.090
for the xml marshaler.

65
00:04:12.090 --> 00:04:15.080
Internally when you use this format,

66
00:04:15.080 --> 00:04:18.090
spring applies a marshaling instance parameter

67
00:04:18.090 --> 00:04:22.070
to both the marshaler and unmarshaler properties

68
00:04:22.070 --> 00:04:28.080
internal to this class.

69
00:04:28.080 --> 00:04:31.010
Now there are many varieties of marshalers

70
00:04:31.010 --> 00:04:32.070
that we could have used.

71
00:04:32.070 --> 00:04:35.020
I like the use of the extreme marshaler

72
00:04:35.020 --> 00:04:39.090
because the extreme marshaler requires no extra mapping

73
00:04:39.090 --> 00:04:42.060
files like for example castor.

74
00:04:42.060 --> 00:04:46.080
Castor requires additional annotations on your pojos,

75
00:04:46.080 --> 00:04:48.070
which makes it nice in our case.

76
00:04:48.070 --> 00:04:51.020
I really don't wanna have to spend any more time

77
00:04:51.020 --> 00:04:54.050
swapping out annotations like json creator

78
00:04:54.050 --> 00:04:57.000
and json property with other annotations.

79
00:04:57.000 --> 00:05:00.050
Extreme simply ignores them which is nice,

80
00:05:00.050 --> 00:05:02.020
and extreme knows how to handle them

81
00:05:02.020 --> 00:05:06.040
because we've identified the supported classes.

82
00:05:06.040 --> 00:05:09.070
Now we need to ensure that our default jms listener

83
00:05:09.070 --> 00:05:15.030
container factory is set to use the new message converter.

84
00:05:15.030 --> 00:05:17.030
So we're gonna comment out the previous for

85
00:05:17.030 --> 00:05:22.020
the jackson message converter, we'll say factory set

86
00:05:22.020 --> 00:05:29.070
message converter and select our xml marshaling converter.

87
00:05:29.070 --> 00:05:31.040
The last thing we need to do is go ahead

88
00:05:31.040 --> 00:05:34.080
and comment out the bean annotation,

89
00:05:34.080 --> 00:05:36.030
our spring bean annotation for

90
00:05:36.030 --> 00:05:38.080
the jackson jms message converter.

91
00:05:38.080 --> 00:05:41.080
We don't want that being populated as spring

92
00:05:41.080 --> 00:05:43.040
starts up the app.

93
00:05:43.040 --> 00:05:46.080
Now before we can compile and run and see the message

94
00:05:46.080 --> 00:05:50.090
is in active mq, we're gonna go back and open up

95
00:05:50.090 --> 00:05:55.040
the warehouse receiver class and we're gonna comment out

96
00:05:55.040 --> 00:05:58.070
our jms listener for right now.

97
00:05:58.070 --> 00:06:03.080
And we'll add that back in a moment.

98
00:06:03.080 --> 00:06:16.010
Let's go ahead and compile our app.

99
00:06:16.010 --> 00:06:29.040
We'll build it now.

100
00:06:29.040 --> 00:06:31.080
The active mq instance should still be running

101
00:06:31.080 --> 00:06:37.040
so we need to navigate back to our browser,

102
00:06:37.040 --> 00:06:42.030
let's just refresh this, select record,

103
00:06:42.030 --> 00:06:44.040
click add to order.

104
00:06:44.040 --> 00:06:47.000
Message has been sent, I'll go to our queues,

105
00:06:47.000 --> 00:06:48.040
we'll refresh our queues.

106
00:06:48.040 --> 00:06:50.020
We have one message in the queue.

107
00:06:50.020 --> 00:06:53.070
We click on this, we'll notice down below

108
00:06:53.070 --> 00:07:00.060
that we now have xml format for our message.

109
00:07:00.060 --> 00:07:02.080
Now going back to our application code,

110
00:07:02.080 --> 00:07:06.010
I'm just gonna set this like that for right now,

111
00:07:06.010 --> 00:07:10.040
we're going to remove the comment

112
00:07:10.040 --> 00:07:31.090
and we're going to compile and build again.

113
00:07:31.090 --> 00:07:37.000
Okay, reload our page in the browser.

114
00:07:37.000 --> 00:07:39.060
We'll add a message and we should see the messages

115
00:07:39.060 --> 00:07:41.030
appear in the logs.

116
00:07:41.030 --> 00:07:46.000
There they are in the logs, we'll do another one.

117
00:07:46.000 --> 00:07:47.050
There it is again,

118
00:07:47.050 --> 00:07:52.030
go to our active mq instance, refresh our queues,

119
00:07:52.030 --> 00:07:55.050
all of the messages are gone

120
00:07:55.050 --> 00:07:58.000
and everything is working correctly.

