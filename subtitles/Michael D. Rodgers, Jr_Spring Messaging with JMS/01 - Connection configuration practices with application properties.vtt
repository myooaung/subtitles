WEBVTT
1
00:00:00.000 --> 00:00:02.070
- [Narrator] Configuring connections in our application

2
00:00:02.070 --> 00:00:04.020
currently has been done, pretty much,

3
00:00:04.020 --> 00:00:06.060
through a configuration class.

4
00:00:06.060 --> 00:00:10.050
With Spring Boot we can provide configurations several ways.

5
00:00:10.050 --> 00:00:15.000
We can do this through the application yml properties file.

6
00:00:15.000 --> 00:00:18.010
We can do this through a JMS spec provider.

7
00:00:18.010 --> 00:00:22.050
Implementations like using the ActiveMQ connection factory

8
00:00:22.050 --> 00:00:24.020
or we can do this through

9
00:00:24.020 --> 00:00:27.000
Spring's single connection factory.

10
00:00:27.000 --> 00:00:31.000
We can also use Spring's Caching Connection Factory.

11
00:00:31.000 --> 00:00:35.080
In ActiveMQ, API also provides a pooled connection factory,

12
00:00:35.080 --> 00:00:38.010
but we won't be using it here,

13
00:00:38.010 --> 00:00:41.010
because we want to focus on Spring's API's.

14
00:00:41.010 --> 00:00:45.040
Spring provides sample application yml

15
00:00:45.040 --> 00:00:48.040
and application properties that you can use

16
00:00:48.040 --> 00:00:52.030
throughout the Spring boot for connection configurations.

17
00:00:52.030 --> 00:00:55.040
I've provided a few links for further reference,

18
00:00:55.040 --> 00:00:57.080
especially for configuration, because there are a lot,

19
00:00:57.080 --> 00:00:59.090
and there really isn't any way

20
00:00:59.090 --> 00:01:04.020
I could sit and list them all.

21
00:01:04.020 --> 00:01:06.040
To configure a project to use configuration

22
00:01:06.040 --> 00:01:08.070
though the application yml, we will

23
00:01:08.070 --> 00:01:12.050
open our application yml file

24
00:01:12.050 --> 00:01:13.090
and I'm going to copy and paste

25
00:01:13.090 --> 00:01:22.000
several entries here for you.

26
00:01:22.000 --> 00:01:25.020
Specifically, under the Spring entry level,

27
00:01:25.020 --> 00:01:30.050
you'll need to add a new node for ActiveMQ.

28
00:01:30.050 --> 00:01:34.030
Please feel free to pause the video and type them in.

29
00:01:34.030 --> 00:01:39.000
For the ActiveMQ, you'll need to add a broker URL,

30
00:01:39.000 --> 00:01:44.000
and we're going to specify the URL for our broker

31
00:01:44.000 --> 00:01:52.070
using TCP://localhost:61616.

32
00:01:52.070 --> 00:01:57.080
This is the TCP port open on ActiveMQ.

33
00:01:57.080 --> 00:01:59.070
Below this, you'll have the user,

34
00:01:59.070 --> 00:02:03.080
which you'll type admin and the password is admin.

35
00:02:03.080 --> 00:02:08.070
Now, open up the JMS config class

36
00:02:08.070 --> 00:02:12.020
and in the JMS config class, because our connection factory

37
00:02:12.020 --> 00:02:18.060
will be derived from the application yml by Spring Boot,

38
00:02:18.060 --> 00:02:20.030
we'll need to comment out the beam

39
00:02:20.030 --> 00:02:23.070
responsible for the connection factory.

40
00:02:23.070 --> 00:02:33.070
We'll do this here by...

41
00:02:33.070 --> 00:02:36.000
Additionally, we'll comment out

42
00:02:36.000 --> 00:02:47.090
the book order processing message listener,

43
00:02:47.090 --> 00:02:56.030
as well as the JMS listener that we've overridden.

44
00:02:56.030 --> 00:02:58.040
We'll not use these in this example.

45
00:02:58.040 --> 00:03:11.000
Now, we also need to remove at the top the implements.

46
00:03:11.000 --> 00:03:12.080
These were really only for demonstrating

47
00:03:12.080 --> 00:03:16.040
how to programmatically create custom message listeners.

48
00:03:16.040 --> 00:03:19.010
We won't be using these for the remainder of the project.

49
00:03:19.010 --> 00:03:21.010
The last thing we need to do for this demonstration

50
00:03:21.010 --> 00:03:28.020
is add an auto-wired connection factory.

51
00:03:28.020 --> 00:03:32.020
I'll type auto-wired, private,

52
00:03:32.020 --> 00:03:37.000
connection factory, connection factory.

53
00:03:37.000 --> 00:03:39.000
Okay, by adding the properties to

54
00:03:39.000 --> 00:03:42.000
the application.yml for ActiveMQ,

55
00:03:42.000 --> 00:03:44.000
Spring Boot will automatically configure

56
00:03:44.000 --> 00:03:48.030
both the connection factory, as well as JMS template.

57
00:03:48.030 --> 00:03:50.020
The last thing I want to discuss here

58
00:03:50.020 --> 00:03:52.050
is when we're setting the following properties

59
00:03:52.050 --> 00:03:55.020
in the application yml.

60
00:03:55.020 --> 00:03:57.040
The pooled node in our application yml

61
00:03:57.040 --> 00:03:59.070
tells Spring what details should be used

62
00:03:59.070 --> 00:04:03.040
for setting up and using a pooled connection factory.

63
00:04:03.040 --> 00:04:07.040
Specifically setting the enabled flag to true

64
00:04:07.040 --> 00:04:10.080
will cause Spring to automatically to configure

65
00:04:10.080 --> 00:04:14.040
ActiveMQ's pooled connection factory.

66
00:04:14.040 --> 00:04:16.060
There's one other setting I'd like to discuss

67
00:04:16.060 --> 00:04:19.020
and that's in the JMS section.

68
00:04:19.020 --> 00:04:22.070
And the JMS flag of pubsub domain

69
00:04:22.070 --> 00:04:25.010
is automatically set to false.

70
00:04:25.010 --> 00:04:28.040
If we set this to true, we'll be available

71
00:04:28.040 --> 00:04:32.050
to send messages to topics as well.

72
00:04:32.050 --> 00:04:35.090
If you decide to use a different mom other than ActiveMQ,

73
00:04:35.090 --> 00:04:38.060
it's important to understand the alternatives

74
00:04:38.060 --> 00:04:41.000
and I'll discuss that next.

