WEBVTT
1
00:00:00.010 --> 00:00:02.050
- [Instructor] Let's now add configuration information

2
00:00:02.050 --> 00:00:07.000
to connect to and send a message to our ActiveMQ server.

3
00:00:07.000 --> 00:00:10.030
Look again at the application.java class file.

4
00:00:10.030 --> 00:00:12.060
We're going to be adding some more

5
00:00:12.060 --> 00:00:16.090
Spring configuration beans here as well as removing some.

6
00:00:16.090 --> 00:00:20.010
First, because we are going to be connecting directly to

7
00:00:20.010 --> 00:00:22.090
and external ActiveMQ instance,

8
00:00:22.090 --> 00:00:25.040
we need to configure our connection factory

9
00:00:25.040 --> 00:00:30.040
by adding an ActiveMQ connection factory method,

10
00:00:30.040 --> 00:00:42.030
so we'll type public ActiveMQ connection factory

11
00:00:42.030 --> 00:00:49.020
and we'll call it a connection factory,

12
00:00:49.020 --> 00:01:07.030
and we'll instantiate an ActiveMQ connection factory object,

13
00:01:07.030 --> 00:01:19.070
supplying it with the connection details

14
00:01:19.070 --> 00:01:40.000
and the password with the broker information,

15
00:01:40.000 --> 00:01:47.010
and then we'll return the factory.

16
00:01:47.010 --> 00:01:49.040
The next Spring configuration bean we'll add

17
00:01:49.040 --> 00:01:53.020
is a JMS template bean.

18
00:01:53.020 --> 00:01:56.050
Previously, we used the one provided by Spring Boot.

19
00:01:56.050 --> 00:01:59.060
It used an internal ActiveMQ instance

20
00:01:59.060 --> 00:02:01.070
that was stood up by Spring Boot.

21
00:02:01.070 --> 00:02:04.050
Now, we are configuring our JMS template bean

22
00:02:04.050 --> 00:02:34.050
to use the connection factory we have just specified,

23
00:02:34.050 --> 00:02:52.020
supplying it now the connection factory.

24
00:02:52.020 --> 00:02:53.080
With those created, let's switch gears

25
00:02:53.080 --> 00:02:56.070
and create a center class.

26
00:02:56.070 --> 00:03:01.090
We'll open this window and on the package name here,

27
00:03:01.090 --> 00:03:06.060
we'll right click, go to new, click java class,

28
00:03:06.060 --> 00:03:10.000
type in sender, click okay.

29
00:03:10.000 --> 00:03:15.040
We'll annotate this class with that component

30
00:03:15.040 --> 00:03:28.030
and create a private instance of JMS template.

31
00:03:28.030 --> 00:03:34.030
We'll also add the annotation add auto-wired,

32
00:03:34.030 --> 00:03:36.050
because if you remember, we made this

33
00:03:36.050 --> 00:03:40.080
Spring configuration bean under application.javaclass.

34
00:03:40.080 --> 00:03:43.060
Next, we'll create a public void method here

35
00:03:43.060 --> 00:03:52.070
called send message.

36
00:03:52.070 --> 00:04:03.080
Method will take a Spring parameters for destination

37
00:04:03.080 --> 00:04:12.010
and the other for the message.

38
00:04:12.010 --> 00:04:15.070
Inside of the method, we'll call our JMS template,

39
00:04:15.070 --> 00:04:24.060
convert and send with the destination and the message.

40
00:04:24.060 --> 00:04:31.000
From here, let's open up our receiver class

41
00:04:31.000 --> 00:04:33.030
and comment out some code.

42
00:04:33.030 --> 00:04:35.090
Because we're only interested in sending messages

43
00:04:35.090 --> 00:04:39.010
at this point, we'll make sure that this JMS listener

44
00:04:39.010 --> 00:04:42.050
does not get invoked at startup.

45
00:04:42.050 --> 00:04:51.020
So we'll type in some basic commenting marks.

46
00:04:51.020 --> 00:04:53.000
The last thing we need to do

47
00:04:53.000 --> 00:04:58.060
is go back to the application.javaclass

48
00:04:58.060 --> 00:05:00.050
and change how our messages are sent

49
00:05:00.050 --> 00:05:02.050
by using the sender class.

50
00:05:02.050 --> 00:05:06.010
So we're going to replace the context.getbean method

51
00:05:06.010 --> 00:05:22.030
at line 25 with an instance of getting our sender class.

52
00:05:22.030 --> 00:05:24.060
We're going to replace the JMS template,

53
00:05:24.060 --> 00:05:39.040
convert and send with sender.sendmessage at line 26.

54
00:05:39.040 --> 00:05:41.030
Okay, let's build the application

55
00:05:41.030 --> 00:05:57.080
and assure that no build failures occur.

56
00:05:57.080 --> 00:06:00.090
Okay, we're done for now.

57
00:06:00.090 --> 00:06:03.060
The next video, we'll start back up our ActiveMQ instance

58
00:06:03.060 --> 00:06:05.080
and then run our application to see the message

59
00:06:05.080 --> 00:06:09.000
in the ActiveMQ web console.

