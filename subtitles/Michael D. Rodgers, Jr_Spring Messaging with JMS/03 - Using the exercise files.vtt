WEBVTT
1
00:00:00.050 --> 00:00:02.030
- [Instructor] I've provided exercise files

2
00:00:02.030 --> 00:00:04.010
for you to work along with me.

3
00:00:04.010 --> 00:00:06.070
The files are available to you as a download

4
00:00:06.070 --> 00:00:10.040
with this course or they're located in GitHub.

5
00:00:10.040 --> 00:00:13.060
If you download the files from the course page

6
00:00:13.060 --> 00:00:16.090
save them to a directory that works for you.

7
00:00:16.090 --> 00:00:20.010
Here, I've placed them on my desktop

8
00:00:20.010 --> 00:00:23.060
then you'll be able to import them into your IDE.

9
00:00:23.060 --> 00:00:27.030
I'll show you how to import them into IntelliJ in a bit.

10
00:00:27.030 --> 00:00:31.030
Before I show you how to import you also have several ways

11
00:00:31.030 --> 00:00:33.080
of downloading from GitHub.

12
00:00:33.080 --> 00:00:37.080
You can use IntelliJ's checkout from version control option

13
00:00:37.080 --> 00:00:40.070
or you can download the files from the command line

14
00:00:40.070 --> 00:00:43.030
using Git if you're comfortable with that

15
00:00:43.030 --> 00:00:48.010
or you can download them in a browser by clicking the clone

16
00:00:48.010 --> 00:00:52.030
and then download ZIP button.

17
00:00:52.030 --> 00:00:55.090
Next, let's look at the course files we've downloaded.

18
00:00:55.090 --> 00:00:58.010
Inside you'll find that the exercise files

19
00:00:58.010 --> 00:01:04.080
are subdivided by chapter and inside that by video number.

20
00:01:04.080 --> 00:01:09.010
Each video has a begin and an end.

21
00:01:09.010 --> 00:01:23.050
Next, let's import the project file into IntelliJ.

22
00:01:23.050 --> 00:01:29.050
On the IntelliJ dashboard screen, click the import project.

23
00:01:29.050 --> 00:01:32.000
This will open a new dialogue where we will choose

24
00:01:32.000 --> 00:01:43.060
the location we have downloaded the files.

25
00:01:43.060 --> 00:01:45.090
On a side note, when drilling down to the folders

26
00:01:45.090 --> 00:01:48.080
be careful not to double click on the directory

27
00:01:48.080 --> 00:01:50.090
until let the project folder level

28
00:01:50.090 --> 00:01:53.040
because IntelliJ will think that this is the project

29
00:01:53.040 --> 00:01:56.000
home directory and attempt to open.

30
00:01:56.000 --> 00:01:59.000
From there we'll drill down to

31
00:01:59.000 --> 00:02:03.080
Chapter One 01 03 begin

32
00:02:03.080 --> 00:02:07.040
and then click open.

33
00:02:07.040 --> 00:02:11.050
The next screen to appear will display three project types,

34
00:02:11.050 --> 00:02:14.080
Eclipse, Gradle and Maven.

35
00:02:14.080 --> 00:02:16.080
All of the project files use Gradle

36
00:02:16.080 --> 00:02:20.050
so we'll be selecting Gradle and then next.

37
00:02:20.050 --> 00:02:21.080
On the following screen

38
00:02:21.080 --> 00:02:26.000
we want to ensure that use auto-import is checked.

39
00:02:26.000 --> 00:02:31.040
The first radio button for group modules is selected.

40
00:02:31.040 --> 00:02:34.020
Next, we need to ensure that create modules

41
00:02:34.020 --> 00:02:36.070
per source set is checked

42
00:02:36.070 --> 00:02:41.060
and that use default gradle wrapper is selected.

43
00:02:41.060 --> 00:02:48.040
The final piece is that JDK1.8 is selected.

44
00:02:48.040 --> 00:02:50.000
You might want to use other versions

45
00:02:50.000 --> 00:02:53.080
but the current version of gradle we're using 4.6

46
00:02:53.080 --> 00:02:56.090
seems the only work with JDK1.8.

47
00:02:56.090 --> 00:03:04.000
The last thing to do to import the project is click finish.

48
00:03:04.000 --> 00:03:07.030
After clicking finish, the IDE will load a project

49
00:03:07.030 --> 00:03:12.080
and you'll see at the bottom of the screen a build sync tab

50
00:03:12.080 --> 00:03:16.010
with hopefully several green OK circles

51
00:03:16.010 --> 00:03:18.030
that demonstrate that the gradle dependencies

52
00:03:18.030 --> 00:03:23.000
have all been downloaded and resolved.

53
00:03:23.000 --> 00:03:24.070
Now you're ready to begin working

54
00:03:24.070 --> 00:03:28.000
in Spring messaging with JMS.

