WEBVTT
1
00:00:00.050 --> 00:00:02.030
- [Instructor] What is a message queue?

2
00:00:02.030 --> 00:00:04.000
A message queue is a collection of messages

3
00:00:04.000 --> 00:00:06.050
that are grouped on a server or a MOM.

4
00:00:06.050 --> 00:00:09.020
We generally call these MQ servers.

5
00:00:09.020 --> 00:00:12.000
The message queues retain the message

6
00:00:12.000 --> 00:00:15.000
until a consumer is available to retrieve them.

7
00:00:15.000 --> 00:00:16.090
Message queues retrieved are pulled

8
00:00:16.090 --> 00:00:18.030
in the order they are received.

9
00:00:18.030 --> 00:00:23.020
We call this FIFO, or first-in-first-out order.

10
00:00:23.020 --> 00:00:26.000
Message queues can have multiple consumers

11
00:00:26.000 --> 00:00:28.060
but, and this is important to remember,

12
00:00:28.060 --> 00:00:33.000
for a message on a queue, it can only have one consumer.

13
00:00:33.000 --> 00:00:37.070
This guarantees that the message is processed only one time.

14
00:00:37.070 --> 00:00:40.060
This is why we call queues a point-to-point

15
00:00:40.060 --> 00:00:43.090
model domain design.

16
00:00:43.090 --> 00:00:47.020
Topics on the other hand, can have multiple consumers,

17
00:00:47.020 --> 00:00:50.020
who have all subscribed to the same topic.

18
00:00:50.020 --> 00:00:52.030
Order delivery is not the same as queues

19
00:00:52.030 --> 00:00:55.050
and so there is no guarantee of order delivery.

20
00:00:55.050 --> 00:00:58.010
Similarly, a message on a topic could,

21
00:00:58.010 --> 00:01:01.000
and most likely will be processed multiple times

22
00:01:01.000 --> 00:01:05.000
and since multiple consumers are subscribed to the topic.

23
00:01:05.000 --> 00:01:06.030
It's important to remember

24
00:01:06.030 --> 00:01:08.090
that consumers subscribed to a topic

25
00:01:08.090 --> 00:01:11.070
on an MQ server must be active

26
00:01:11.070 --> 00:01:13.060
when the message is published to the topic,

27
00:01:13.060 --> 00:01:15.070
in order to access it,

28
00:01:15.070 --> 00:01:19.080
unless the subscription is a durable subscription.

29
00:01:19.080 --> 00:01:24.060
This is why we call this domain design pub/sub.

30
00:01:24.060 --> 00:01:25.050
With all that said,

31
00:01:25.050 --> 00:01:29.040
let's define our course project a bit more.

32
00:01:29.040 --> 00:01:32.000
What we'll be creating is an online bookstore.

33
00:01:32.000 --> 00:01:33.090
Our books are stored in a warehouse

34
00:01:33.090 --> 00:01:36.040
and the bookstore will place the orders to the warehouse

35
00:01:36.040 --> 00:01:39.010
for one or more books.

36
00:01:39.010 --> 00:01:43.040
The MOM for this project will be an Apache ActiveMQ.

37
00:01:43.040 --> 00:01:46.040
An ActiveMQ instance will sit between our bookstore app

38
00:01:46.040 --> 00:01:48.010
and the warehouse app.

39
00:01:48.010 --> 00:01:50.030
Both apps will act as consumers

40
00:01:50.030 --> 00:01:54.010
and publishers to either a queue or a topic.

41
00:01:54.010 --> 00:01:57.010
Our message queue on the ActiveMQ instance

42
00:01:57.010 --> 00:01:59.090
will be used for strictly publishing book order requests

43
00:01:59.090 --> 00:02:02.040
for a particular book.

44
00:02:02.040 --> 00:02:06.060
The warehouse app will be our consumer reading messages

45
00:02:06.060 --> 00:02:11.030
off the message queue in FIFO order processing.

46
00:02:11.030 --> 00:02:13.050
Once a book order request is processed,

47
00:02:13.050 --> 00:02:17.050
the warehouse app will publish to a book order process queue

48
00:02:17.050 --> 00:02:20.010
of those book orders as to whether they are completed,

49
00:02:20.010 --> 00:02:21.010
as well as published

50
00:02:21.010 --> 00:02:24.020
to a topic alerting changes to inventory.

51
00:02:24.020 --> 00:02:27.050
This topic will be called book inventory topic

52
00:02:27.050 --> 00:02:30.070
and will have a durable subscription to this topic,

53
00:02:30.070 --> 00:02:33.060
where after consuming will update possibly

54
00:02:33.060 --> 00:02:36.000
a local database inventory table.

