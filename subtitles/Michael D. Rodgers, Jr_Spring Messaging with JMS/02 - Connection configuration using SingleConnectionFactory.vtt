WEBVTT
1
00:00:00.050 --> 00:00:01.040
- [Instructor] Now let's look

2
00:00:01.040 --> 00:00:03.090
at configuring Spring's JMS Connections

3
00:00:03.090 --> 00:00:07.040
using Spring's SingleConnectionFactory

4
00:00:07.040 --> 00:00:10.040
and talk briefly about the reasons for use

5
00:00:10.040 --> 00:00:13.040
and what this offers.

6
00:00:13.040 --> 00:00:16.060
So the Javadoc on Spring's SingleConnectionFactory

7
00:00:16.060 --> 00:00:20.030
says a JMS ConnectionFactory adapter

8
00:00:20.030 --> 00:00:22.000
that returns the same connection

9
00:00:22.000 --> 00:00:24.030
from all create connection calls

10
00:00:24.030 --> 00:00:29.090
and it ignores calls to the close Connection.close

11
00:00:29.090 --> 00:00:32.040
according to the JMS connection model.

12
00:00:32.040 --> 00:00:34.040
This is perfectly thread-safe

13
00:00:34.040 --> 00:00:38.050
in contrast to example JDBC connections.

14
00:00:38.050 --> 00:00:42.020
The shared connection can be automatically recovered

15
00:00:42.020 --> 00:00:44.040
in case of an exception.

16
00:00:44.040 --> 00:00:47.070
So this can be done by setting

17
00:00:47.070 --> 00:00:51.010
the ReconnectedOnException to true.

18
00:00:51.010 --> 00:00:53.060
This is useful when needing to connect

19
00:00:53.060 --> 00:00:56.040
to multiple different MOMs

20
00:00:56.040 --> 00:00:59.040
which means supplying multiple connection factories

21
00:00:59.040 --> 00:01:03.020
and in turn would require multiple JmsTemplates

22
00:01:03.020 --> 00:01:05.050
to be configured.

23
00:01:05.050 --> 00:01:07.070
SingleConnectionFactory in combination

24
00:01:07.070 --> 00:01:11.060
only really makes sense for sharing a single JMS connection

25
00:01:11.060 --> 00:01:15.050
across multiple JMS listeners.

26
00:01:15.050 --> 00:01:19.050
This is not useful when messaging load increases,

27
00:01:19.050 --> 00:01:22.000
we would want to switch to a caching

28
00:01:22.000 --> 00:01:26.010
connection factory at this point.

29
00:01:26.010 --> 00:01:28.090
To use a SingleConnectionFactory,

30
00:01:28.090 --> 00:01:33.050
let's open our JMS config and add a few properties

31
00:01:33.050 --> 00:01:35.090
to the screen.

32
00:01:35.090 --> 00:01:42.010
First, we'll remove the Autowired ConnectionFactory

33
00:01:42.010 --> 00:01:48.000
and we'll add an @Value

34
00:01:48.000 --> 00:01:51.050
with some strange syntax here.

35
00:01:51.050 --> 00:01:57.000
This is a Spring's l syntax expression language.

36
00:01:57.000 --> 00:01:59.050
And we've got the dollar sign, curly bracket,

37
00:01:59.050 --> 00:02:02.070
we're gonna type spring

38
00:02:02.070 --> 00:02:05.010
activemq

39
00:02:05.010 --> 00:02:08.000
.broker

40
00:02:08.000 --> 00:02:10.000
- url

41
00:02:10.000 --> 00:02:12.000
and if you're wondering what this connects to,

42
00:02:12.000 --> 00:02:15.020
if you look at the application.yml again,

43
00:02:15.020 --> 00:02:18.000
you'll notice spring, activemq,

44
00:02:18.000 --> 00:02:20.050
broker-ulr.

45
00:02:20.050 --> 00:02:22.060
And then we're going to assign this to a property.

46
00:02:22.060 --> 00:02:25.050
So we'll say private

47
00:02:25.050 --> 00:02:27.090
String

48
00:02:27.090 --> 00:02:30.090
brokerUrl.

49
00:02:30.090 --> 00:02:33.000
That will read from the application.yml

50
00:02:33.000 --> 00:02:36.010
and assign that value to that property.

51
00:02:36.010 --> 00:02:38.070
We'll also add another one.

52
00:02:38.070 --> 00:02:42.080
Value, we'll use again the curly brackets,

53
00:02:42.080 --> 00:02:49.030
the dollar sign, say spring activemq,

54
00:02:49.030 --> 00:02:51.030
this time we'll specify user

55
00:02:51.030 --> 00:02:56.090
and we'll create a private String user object.

56
00:02:56.090 --> 00:02:59.070
And the last one we'll do

57
00:02:59.070 --> 00:03:02.020
is Value,

58
00:03:02.020 --> 00:03:05.040
curly brackets again, spring,

59
00:03:05.040 --> 00:03:11.000
activemq.password

60
00:03:11.000 --> 00:03:19.070
and we'll supply this a password property.

61
00:03:19.070 --> 00:03:22.020
These properties, as I just mentioned,

62
00:03:22.020 --> 00:03:25.070
are reused from the application yml

63
00:03:25.070 --> 00:03:27.010
in our ConnectionFactory.

64
00:03:27.010 --> 00:03:31.010
So let's uncomment

65
00:03:31.010 --> 00:03:35.090
our ConnectionFactory here.

66
00:03:35.090 --> 00:03:42.030
And inside the method, we're going to have this return

67
00:03:42.030 --> 00:03:51.040
a SingleConnectionFactory.

68
00:03:51.040 --> 00:03:56.050
Make sure you use the jms ConenctionFactory here.

69
00:03:56.050 --> 00:04:00.090
And inside this method, we're going to instantiate

70
00:04:00.090 --> 00:04:04.010
a SingleConnectionFactory.

71
00:04:04.010 --> 00:04:06.090
We'll call this SingleConnectionFactory

72
00:04:06.090 --> 00:04:16.090
and we'll say equals new SingleConnectionFactory.

73
00:04:16.090 --> 00:04:20.030
For our ActiveMQ factory that we already have specified,

74
00:04:20.030 --> 00:04:23.050
we're actually gonna swap out these properties

75
00:04:23.050 --> 00:04:26.000
and we're gonna use the ones we just mapped above

76
00:04:26.000 --> 00:04:28.060
with our add value statements.

77
00:04:28.060 --> 00:04:31.050
So the first one, we're gonna supply is

78
00:04:31.050 --> 00:04:35.020
the user value.

79
00:04:35.020 --> 00:04:38.080
Next one's going to be the password value

80
00:04:38.080 --> 00:04:46.020
and the last one will be our brokerUrl value.

81
00:04:46.020 --> 00:04:48.030
Now, I just instantiated this object,

82
00:04:48.030 --> 00:04:50.060
let's copy this,

83
00:04:50.060 --> 00:04:53.010
cut it, move it down a line.

84
00:04:53.010 --> 00:04:56.090
And inside the constructor, we're going to apply it

85
00:04:56.090 --> 00:05:00.020
the factory from our ActiveMQConnectionFactory.

86
00:05:00.020 --> 00:05:01.070
Then we're gonna change the return type

87
00:05:01.070 --> 00:05:04.080
to our SingleConnectionFactory.

88
00:05:04.080 --> 00:05:10.070
Additionally, we need to set the SingleConnectionFactory

89
00:05:10.070 --> 00:05:15.040
and set the ReconnectOnException

90
00:05:15.040 --> 00:05:17.030
to true.

91
00:05:17.030 --> 00:05:20.070
Now, optionally, we can set the client ID setter

92
00:05:20.070 --> 00:05:26.030
which will be more identifiable if doing troubleshooting.

93
00:05:26.030 --> 00:05:30.010
We could do that by saying SingleConnectionFactory

94
00:05:30.010 --> 00:05:32.010
setClientId.

95
00:05:32.010 --> 00:05:36.000
And the client ID will be expressly seen

96
00:05:36.000 --> 00:05:37.090
in ActiveMQ when we're troubleshooting,

97
00:05:37.090 --> 00:05:44.050
so we could type myclientId.

98
00:05:44.050 --> 00:05:46.030
As you have more and more of these systems

99
00:05:46.030 --> 00:05:47.060
connecting to ActiveMQ,

100
00:05:47.060 --> 00:05:49.080
the client ID will be easier to identify.

101
00:05:49.080 --> 00:05:50.060
And that's it.

102
00:05:50.060 --> 00:05:53.050
We don't have to add a bean for JmsTemplate

103
00:05:53.050 --> 00:05:57.000
because it will use the ConnectionFactory automatically.

104
00:05:57.000 --> 00:06:01.020
If we decided to connect two or more MOMs,

105
00:06:01.020 --> 00:06:05.020
then we'd add new beans specifically for JmsTemplates

106
00:06:05.020 --> 00:06:08.000
and different connection factories.

