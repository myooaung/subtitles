WEBVTT
1
00:00:00.050 --> 00:00:02.060
- [Instructor] Spring makes available some fun annotations

2
00:00:02.060 --> 00:00:05.050
that allow the default destination to be set

3
00:00:05.050 --> 00:00:07.090
along with the JmsListener.

4
00:00:07.090 --> 00:00:11.080
Going back to our WarehouseReceiver class,

5
00:00:11.080 --> 00:00:14.090
locate the receive method,

6
00:00:14.090 --> 00:00:16.090
and add SendTo annotation.

7
00:00:16.090 --> 00:00:19.020
We will supply it with a destination

8
00:00:19.020 --> 00:00:22.010
that we'll use in a WarehouseProcessing service.

9
00:00:22.010 --> 00:00:26.000
For now, right below the JmsListener,

10
00:00:26.000 --> 00:00:41.010
hit Enter, and type @SentTo("book.order.processed.queue")

11
00:00:41.010 --> 00:00:42.050
We'll make some changes in a moment

12
00:00:42.050 --> 00:00:44.010
to the warehouseProcesingService

13
00:00:44.010 --> 00:00:47.080
since we won't be sending a message from there anymore.

14
00:00:47.080 --> 00:00:51.020
But, for now, we need to address a couple of more issues.

15
00:00:51.020 --> 00:00:56.060
The @SendTo annotation, in order for this to work

16
00:00:56.060 --> 00:01:00.050
on a method, that method cannot return void.

17
00:01:00.050 --> 00:01:03.070
So, we'll need to rectify this by having the method

18
00:01:03.070 --> 00:01:06.060
return a ProcessedBookOrder.

19
00:01:06.060 --> 00:01:12.010
Change the void to ProcessedBookOrder.

20
00:01:12.010 --> 00:01:15.010
This object will be returned, as well,

21
00:01:15.010 --> 00:01:20.000
from the warehouseProcessingService method.

22
00:01:20.000 --> 00:01:23.060
So, while we're here, let's go ahead and change

23
00:01:23.060 --> 00:01:28.090
this runtime exception to an illegal argument exception

24
00:01:28.090 --> 00:01:35.020
since that's really what it's doing, is an illegal argument.

25
00:01:35.020 --> 00:01:39.030
You'll notice, this illegal argument exception is telling us

26
00:01:39.030 --> 00:01:44.040
that we need to add the exception to the method signature.

27
00:01:44.040 --> 00:01:46.020
We'll just click this little icon here,

28
00:01:46.020 --> 00:01:51.070
and add the method to the method signature.

29
00:01:51.070 --> 00:01:54.070
You might even consider creating your own custom exception

30
00:01:54.070 --> 00:01:58.090
that extends to better map the warehouse-receiver exception

31
00:01:58.090 --> 00:02:00.070
that we're throwing.

32
00:02:00.070 --> 00:02:07.050
Going over to the warehouseProcessingService now,

33
00:02:07.050 --> 00:02:11.020
let's first start by modifying our add,

34
00:02:11.020 --> 00:02:16.050
update, and delete methods to return a ProcessedBookOrder.

35
00:02:16.050 --> 00:02:21.000
So, go down to our add method.

36
00:02:21.000 --> 00:02:28.000
We'll change this to return a ProcessedBookOrder,

37
00:02:28.000 --> 00:02:31.070
as well as our update and our void.

38
00:02:31.070 --> 00:02:34.020
Now, we still need to make the return statement.

39
00:02:34.020 --> 00:02:36.070
So what we're gonna do is come back up here

40
00:02:36.070 --> 00:02:42.030
to this new ProcessedBookOrder, we're gonna copy this piece,

41
00:02:42.030 --> 00:02:47.060
and we'll delete out the rest.

42
00:02:47.060 --> 00:02:49.030
Come down to our BookOrder.

43
00:02:49.030 --> 00:02:55.040
We'll type return, paste that.

44
00:02:55.040 --> 00:03:02.070
Inside of our update, we'll type return, we'll paste that.

45
00:03:02.070 --> 00:03:06.040
And inside of our delete,

46
00:03:06.040 --> 00:03:11.040
we'll type in return, and paste that, as well.

47
00:03:11.040 --> 00:03:18.010
Just for our own benefit, we're going to change the delete.

48
00:03:18.010 --> 00:03:22.020
This method right here, the constructor ProcessedBookOrder,

49
00:03:22.020 --> 00:03:24.030
this is supposed to be the expected shipping date.

50
00:03:24.030 --> 00:03:27.010
So it doesn't really make sense to have a new date

51
00:03:27.010 --> 00:03:30.090
for an expected shipping date if we're deleting the record.

52
00:03:30.090 --> 00:03:35.070
So let's just make that null for right now.

53
00:03:35.070 --> 00:03:39.080
Additionally, we're gonna add a TODO comment.

54
00:03:39.080 --> 00:03:42.000
This is for your own benefit later on.

55
00:03:42.000 --> 00:03:46.080
If you decide to add in calls to the database,

56
00:03:46.080 --> 00:03:50.060
these TODOs are very easily searchable within IntelliJ.

57
00:03:50.060 --> 00:03:51.080
We'll say something like this.

58
00:03:51.080 --> 00:04:02.080
Do some type of db operation.

59
00:04:02.080 --> 00:04:07.010
There we go, I can spell.

60
00:04:07.010 --> 00:04:10.050
We'll paste that in here, as well.

61
00:04:10.050 --> 00:04:12.060
And there.

62
00:04:12.060 --> 00:04:14.050
OK, so now we've changed the return type

63
00:04:14.050 --> 00:04:18.020
in all of these to a ProcessedBookOrder.

64
00:04:18.020 --> 00:04:19.090
We've put the return type.

65
00:04:19.090 --> 00:04:23.040
And we have one more thing we're gonna do,

66
00:04:23.040 --> 00:04:25.090
and that is sending the ProcessedBookOrder

67
00:04:25.090 --> 00:04:28.070
to the process queue here.

68
00:04:28.070 --> 00:04:34.060
You'll notice that, at this point, we send this

69
00:04:34.060 --> 00:04:37.010
to the queue, and we don't need to do that anymore.

70
00:04:37.010 --> 00:04:39.060
So we will delete this.

71
00:04:39.060 --> 00:04:42.080
We're going to make that functionality

72
00:04:42.080 --> 00:04:46.030
use the @SentTo method in the warehouse receiver.

73
00:04:46.030 --> 00:04:50.080
We're gonna go and put return on each of these.

74
00:04:50.080 --> 00:04:53.000
Return.

75
00:04:53.000 --> 00:04:56.030
And then, the last thing we need to do here.

76
00:04:56.030 --> 00:04:58.070
You'll notice that this is an if.

77
00:04:58.070 --> 00:05:01.030
We're checking for a new order state,

78
00:05:01.030 --> 00:05:03.020
or an update order state,

79
00:05:03.020 --> 00:05:06.090
but we also need to have another else statement here.

80
00:05:06.090 --> 00:05:11.000
And we don't have any other conditions to check for,

81
00:05:11.000 --> 00:05:13.060
but, if for some reason it doesn't match,

82
00:05:13.060 --> 00:05:17.020
the order state doesn't match any of our preset

83
00:05:17.020 --> 00:05:20.040
order-state options, we're going to just throw

84
00:05:20.040 --> 00:05:27.080
a new IllegalArgumentException,

85
00:05:27.080 --> 00:05:31.070
and we're gonna pass in a message that says

86
00:05:31.070 --> 00:05:47.070
"WarehouseProcessingService.processOrder(...)",

87
00:05:47.070 --> 00:05:50.070
and then we're gonna say something like this:

88
00:05:50.070 --> 00:06:02.080
"orderState did not match expected values");"

89
00:06:02.080 --> 00:06:07.030
OK.

90
00:06:07.030 --> 00:06:13.080
We need also change this here, to ProcessedBookOrder.

91
00:06:13.080 --> 00:06:38.040
All right, let's compile, and run, and see what we have.

92
00:06:38.040 --> 00:06:39.070
And we have an error.

93
00:06:39.070 --> 00:06:43.000
See what our error is.

94
00:06:43.000 --> 00:06:44.090
We have a missing return statement

95
00:06:44.090 --> 00:06:47.030
in the WarehouseReceiver service.

96
00:06:47.030 --> 00:06:48.030
Let's go look at that.

97
00:06:48.030 --> 00:06:51.090
Line 45.

98
00:06:51.090 --> 00:06:54.080
There we go.

99
00:06:54.080 --> 00:07:05.000
Let's do this again.

100
00:07:05.000 --> 00:07:22.070
K, let's run the application.

101
00:07:22.070 --> 00:07:23.070
All right.

102
00:07:23.070 --> 00:07:30.010
Let's open up our app, and refresh this.

103
00:07:30.010 --> 00:07:31.090
We're really gonna need both of these

104
00:07:31.090 --> 00:07:35.010
to be seen at the same time, so let's do this.

105
00:07:35.010 --> 00:07:36.090
There we go.

106
00:07:36.090 --> 00:07:42.060
Going to select a record.

107
00:07:42.060 --> 00:07:44.090
OK, we've selected something that's Lord of the Flies.

108
00:07:44.090 --> 00:07:47.010
This is gonna throw

109
00:07:47.010 --> 00:07:49.070
an IllegalArgumentException that we've set.

110
00:07:49.070 --> 00:07:51.010
Let's check something else.

111
00:07:51.010 --> 00:07:56.040
We'll try Being and Nothingness.

112
00:07:56.040 --> 00:08:01.030
K.

113
00:08:01.030 --> 00:08:09.050
Let's go to our queues.

114
00:08:09.050 --> 00:08:14.040
Have a book.order.processed queue.

115
00:08:14.040 --> 00:08:17.030
There's our record, Being and Nothingness.

116
00:08:17.030 --> 00:08:21.040
What we've done, we've, by using the @SendTo method,

117
00:08:21.040 --> 00:08:26.000
we've automatically sent the record through to our queue.

