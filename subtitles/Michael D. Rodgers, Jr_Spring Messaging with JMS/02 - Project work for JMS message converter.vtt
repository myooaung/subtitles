WEBVTT
1
00:00:00.050 --> 00:00:01.050
- [Narrator] Before we begin coding

2
00:00:01.050 --> 00:00:03.020
our sample message converter,

3
00:00:03.020 --> 00:00:06.020
I would like to cover how the project will be laid out.

4
00:00:06.020 --> 00:00:09.050
Specifically, we'll include both storefront JMS API

5
00:00:09.050 --> 00:00:13.050
and warehouse API functionality in this one project.

6
00:00:13.050 --> 00:00:15.080
Keep in mind, it's recommended to separate

7
00:00:15.080 --> 00:00:19.090
functionality like this used in an enterprise setting.

8
00:00:19.090 --> 00:00:23.010
The storefront warehouse API changes

9
00:00:23.010 --> 00:00:24.070
will include specifically identified

10
00:00:24.070 --> 00:00:28.010
sender and receiver classes for each action.

11
00:00:28.010 --> 00:00:29.080
This means we'll have a sender class

12
00:00:29.080 --> 00:00:32.040
associated with pushing book order requests

13
00:00:32.040 --> 00:00:35.030
and a receiver specifically associated

14
00:00:35.030 --> 00:00:39.000
for retrieving book order request from the message queue.

15
00:00:39.000 --> 00:00:42.080
If a different type of object is required to be sent,

16
00:00:42.080 --> 00:00:45.020
then we'll make sure that a different

17
00:00:45.020 --> 00:00:48.060
sender and receiver class is specified.

18
00:00:48.060 --> 00:00:50.090
Our object types we'll begin coding

19
00:00:50.090 --> 00:00:56.070
will be a book object, which includes a bookId and a title,

20
00:00:56.070 --> 00:00:58.080
a customer object,

21
00:00:58.080 --> 00:01:02.060
which includes a customer ID and a full name,

22
00:01:02.060 --> 00:01:07.030
and a book order object, which includes an order ID,

23
00:01:07.030 --> 00:01:11.000
a book object, and a customer object.

24
00:01:11.000 --> 00:01:14.040
Let's start coding our objects necessary for converting.

25
00:01:14.040 --> 00:01:16.020
In the exercise files for this video,

26
00:01:16.020 --> 00:01:20.000
I've included configuration code for running

27
00:01:20.000 --> 00:01:24.050
a simple web app with the web config

28
00:01:24.050 --> 00:01:27.050
and the app controller,

29
00:01:27.050 --> 00:01:30.010
which will make it easier for you to visualize

30
00:01:30.010 --> 00:01:32.080
the book order message process.

31
00:01:32.080 --> 00:01:36.010
We'll start by creating a couple of plain, old java objects

32
00:01:36.010 --> 00:01:39.090
or POJOs, in a new package called POJOs.

33
00:01:39.090 --> 00:01:42.050
We'll right click on the package header here,

34
00:01:42.050 --> 00:01:49.020
go to new, select package, type POJOs.

35
00:01:49.020 --> 00:01:51.060
We'll create a book order class.

36
00:01:51.060 --> 00:01:56.080
Right click again, go to new class, type book,

37
00:01:56.080 --> 00:02:00.060
right click again on POJOs, click new, class,

38
00:02:00.060 --> 00:02:04.070
type customer and then right-click again,

39
00:02:04.070 --> 00:02:10.070
click new and type book order.

40
00:02:10.070 --> 00:02:15.030
Now let's populate the book class with a bookId.

41
00:02:15.030 --> 00:02:22.040
We'll type private_final string bookId

42
00:02:22.040 --> 00:02:24.020
and then we'll also add a title.

43
00:02:24.020 --> 00:02:32.050
Type private_final string title.

44
00:02:32.050 --> 00:02:35.010
For the sake of time, that's all we'll add for now.

45
00:02:35.010 --> 00:02:37.010
You might consider adding other useful properties

46
00:02:37.010 --> 00:02:39.050
like author, copyright, et cetera.

47
00:02:39.050 --> 00:02:41.020
Finally, however, in this class,

48
00:02:41.020 --> 00:02:43.030
we need to add getters and an constructor.

49
00:02:43.030 --> 00:02:48.010
So we'll right-click, select generate,

50
00:02:48.010 --> 00:02:49.040
select getter,

51
00:02:49.040 --> 00:02:52.000
and we need to make sure both properties are selected,

52
00:02:52.000 --> 00:02:55.080
click okay then we'll add our constructor.

53
00:02:55.080 --> 00:03:02.050
Right click, go to generate, constructor, click okay.

54
00:03:02.050 --> 00:03:04.000
Let's switch over to the customer class

55
00:03:04.000 --> 00:03:07.000
and we'll do something similar.

56
00:03:07.000 --> 00:03:09.000
We'll add a customerId.

57
00:03:09.000 --> 00:03:15.090
So type private_final string customerId

58
00:03:15.090 --> 00:03:17.060
and then we'll combine the first name

59
00:03:17.060 --> 00:03:20.080
and the last name together with a field called full name.

60
00:03:20.080 --> 00:03:28.030
Type private_final string fullName.

61
00:03:28.030 --> 00:03:30.050
Again, for the sake of time, that's all we'll add here

62
00:03:30.050 --> 00:03:33.050
but we will create our getters.

63
00:03:33.050 --> 00:03:36.040
Right click, click generate, select getter,

64
00:03:36.040 --> 00:03:40.010
make sure both properties are selected, click okay.

65
00:03:40.010 --> 00:03:41.080
And we'll add our constructor.

66
00:03:41.080 --> 00:03:46.080
Right click, generate, constructor, click okay.

67
00:03:46.080 --> 00:03:50.050
Finally, let's switch over to the book order class.

68
00:03:50.050 --> 00:03:54.090
In the book order class, we'll add a book order ID.

69
00:03:54.090 --> 00:04:03.070
Type private_final string bookOrderId.

70
00:04:03.070 --> 00:04:05.040
Then we'll add our customer reference

71
00:04:05.040 --> 00:04:07.010
and our book order reference.

72
00:04:07.010 --> 00:04:15.080
Type private_final book,

73
00:04:15.080 --> 00:04:25.070
private_final customer.

74
00:04:25.070 --> 00:04:28.030
Again, we'll add our getters.

75
00:04:28.030 --> 00:04:31.090
Right click, go to generate, select getter,

76
00:04:31.090 --> 00:04:34.010
make sure all the properties are selected,

77
00:04:34.010 --> 00:04:37.030
click okay and we'll add our constructor.

78
00:04:37.030 --> 00:04:43.020
Right click, generate, constructor, click okay.

79
00:04:43.020 --> 00:04:46.010
Everything we've done so far is important for our next step,

80
00:04:46.010 --> 00:04:49.000
which is adding our JMS convertors.

