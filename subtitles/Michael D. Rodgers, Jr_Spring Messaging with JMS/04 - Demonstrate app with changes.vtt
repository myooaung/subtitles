WEBVTT
1
00:00:00.050 --> 00:00:02.020
- [Instructor] With our Spring Boot application

2
00:00:02.020 --> 00:00:03.080
and active MQ running,

3
00:00:03.080 --> 00:00:06.080
let's look at the webpage I've set up for you.

4
00:00:06.080 --> 00:00:11.060
On http

5
00:00:11.060 --> 00:00:16.010
localhost9000.

6
00:00:16.010 --> 00:00:18.080
What I've done for you is create a simple JSP webpage,

7
00:00:18.080 --> 00:00:20.030
styled it using bootstrap,

8
00:00:20.030 --> 00:00:26.020
and prepopulated some select dropdowns for you.

9
00:00:26.020 --> 00:00:28.080
Let's quickly make a selection, hit enter,

10
00:00:28.080 --> 00:00:38.050
and do this a couple of times.

11
00:00:38.050 --> 00:00:42.010
So, we've sent messages but did it appear converted

12
00:00:42.010 --> 00:00:43.020
in our new queue?

13
00:00:43.020 --> 00:00:46.020
Well, let's open up a new browser window

14
00:00:46.020 --> 00:00:47.020
and go to

15
00:00:47.020 --> 00:00:48.050
our active MQ server.

16
00:00:48.050 --> 00:00:52.070
Type in localhost8161,

17
00:00:52.070 --> 00:00:54.090
click on manage MQ,

18
00:00:54.090 --> 00:00:56.020
click on queues,

19
00:00:56.020 --> 00:00:58.080
and there you see a new queue created

20
00:00:58.080 --> 00:01:01.050
called book order queue.

21
00:01:01.050 --> 00:01:03.060
Let's click on it,

22
00:01:03.060 --> 00:01:06.010
from there you'll see a couple of messages

23
00:01:06.010 --> 00:01:07.060
depending on how many you sent.

24
00:01:07.060 --> 00:01:10.000
We'll click on a message.

25
00:01:10.000 --> 00:01:12.040
The message details should show

26
00:01:12.040 --> 00:01:15.030
a successfully converted message.

27
00:01:15.030 --> 00:01:17.070
You'll notice some properties here.

28
00:01:17.070 --> 00:01:19.070
And there's our message at the bottom

29
00:01:19.070 --> 00:01:23.020
converted into json.

30
00:01:23.020 --> 00:01:25.030
Looking back up at the properties,

31
00:01:25.030 --> 00:01:30.010
notice the property here named at Type.

32
00:01:30.010 --> 00:01:31.070
Does that look familiar?

33
00:01:31.070 --> 00:01:35.000
This is a key value pair indicating a property name

34
00:01:35.000 --> 00:01:38.070
for the types of messages received in the queue

35
00:01:38.070 --> 00:01:42.010
and the value of the type is the fully qualified

36
00:01:42.010 --> 00:01:46.060
package name of our book order class.

37
00:01:46.060 --> 00:01:49.050
If you decide later to break this app into two parts

38
00:01:49.050 --> 00:01:51.040
for a microservice architecture,

39
00:01:51.040 --> 00:01:55.020
or even just two locationally separate applications

40
00:01:55.020 --> 00:01:56.060
you'll begin to understand the need

41
00:01:56.060 --> 00:02:00.050
of keeping that set type ID property name the same.

42
00:02:00.050 --> 00:02:03.050
Let's go back to our app now and add a receiver class

43
00:02:03.050 --> 00:02:06.030
that represents our warehouse portion

44
00:02:06.030 --> 00:02:08.080
of the processing of the messages.

45
00:02:08.080 --> 00:02:12.030
Our idea was that a warehouse would receive these messages

46
00:02:12.030 --> 00:02:14.070
and process order requests.

47
00:02:14.070 --> 00:02:19.090
From our service JMS package,

48
00:02:19.090 --> 00:02:22.060
let's create a class called the warehouse receiver class.

49
00:02:22.060 --> 00:02:25.000
Right click, go to new,

50
00:02:25.000 --> 00:02:26.050
java class,

51
00:02:26.050 --> 00:02:29.090
we'll call this the warehouse

52
00:02:29.090 --> 00:02:31.020
receiver

53
00:02:31.020 --> 00:02:35.070
service.

54
00:02:35.070 --> 00:02:38.090
We'll annotate this class with

55
00:02:38.090 --> 00:02:42.020
at service

56
00:02:42.020 --> 00:02:45.040
and inside we will create a new method

57
00:02:45.040 --> 00:02:52.060
called public void

58
00:02:52.060 --> 00:02:54.080
receive,

59
00:02:54.080 --> 00:03:06.090
which takes a parameter of book order type.

60
00:03:06.090 --> 00:03:09.030
So that we can see these in the logs

61
00:03:09.030 --> 00:03:11.080
we'll put some log info statements in.

62
00:03:11.080 --> 00:03:19.020
We'll create a private static final

63
00:03:19.020 --> 00:03:27.090
logger of a cell four J type.

64
00:03:27.090 --> 00:03:31.040
We'll use logger factory, cell four J.

65
00:03:31.040 --> 00:03:32.070
Get logger

66
00:03:32.070 --> 00:03:35.040
and we'll use the name of our class

67
00:03:35.040 --> 00:03:41.090
in the parameter.

68
00:03:41.090 --> 00:03:44.070
Inside our receive method,

69
00:03:44.070 --> 00:03:47.020
we'll type logger

70
00:03:47.020 --> 00:03:49.040
info

71
00:03:49.040 --> 00:03:51.080
and we'll say

72
00:03:51.080 --> 00:03:54.010
received

73
00:03:54.010 --> 00:03:57.030
a message.

74
00:03:57.030 --> 00:04:00.020
Enter again, type logger,

75
00:04:00.020 --> 00:04:03.080
info,

76
00:04:03.080 --> 00:04:07.080
and we'll say message is

77
00:04:07.080 --> 00:04:13.070
and we'll just depend the name of the book order onto that.

78
00:04:13.070 --> 00:04:16.040
The last thing we need to do here is annotate the class

79
00:04:16.040 --> 00:04:18.070
with an at JMS listener.

80
00:04:18.070 --> 00:04:24.070
We'll do this on the method.

81
00:04:24.070 --> 00:04:29.090
And we'll specify the destination to be our book

82
00:04:29.090 --> 00:04:31.040
order

83
00:04:31.040 --> 00:04:35.060
queue.

84
00:04:35.060 --> 00:04:37.030
We need to do a few more things

85
00:04:37.030 --> 00:04:39.040
before we test the changes in the app,

86
00:04:39.040 --> 00:04:44.040
so first let's navigate back to the JMS config.

87
00:04:44.040 --> 00:04:49.040
And in the default JMS listener container factory method

88
00:04:49.040 --> 00:04:53.020
we need to explicitly tell it to use the message converter

89
00:04:53.020 --> 00:04:54.070
so we'll do this by coming down to

90
00:04:54.070 --> 00:04:58.030
factory.setmessageconverter

91
00:04:58.030 --> 00:05:03.080
and we'll use our jackson JMS message converter.

92
00:05:03.080 --> 00:05:05.070
The next thing we need to do is go back

93
00:05:05.070 --> 00:05:09.030
and update our pojos with some at json creator

94
00:05:09.030 --> 00:05:12.000
at an at json properties.

95
00:05:12.000 --> 00:05:15.050
We will apply the at Jason creator to the outside

96
00:05:15.050 --> 00:05:16.090
of the constructor,

97
00:05:16.090 --> 00:05:20.030
an at json property name to each property

98
00:05:20.030 --> 00:05:24.040
in the constructor.

99
00:05:24.040 --> 00:05:25.040
As you can see,

100
00:05:25.040 --> 00:05:27.060
I've already prepopulated these for you,

101
00:05:27.060 --> 00:05:30.000
if you need to pause the video and do that,

102
00:05:30.000 --> 00:05:33.030
you can do that now.

103
00:05:33.030 --> 00:05:37.050
The reason for this is as these pojos become more complex,

104
00:05:37.050 --> 00:05:39.060
as in the book order class,

105
00:05:39.060 --> 00:05:42.060
Jackson has to know in what order

106
00:05:42.060 --> 00:05:45.050
to pass fields into the constructor,

107
00:05:45.050 --> 00:05:48.030
and these properties help identify that.

108
00:05:48.030 --> 00:05:50.090
This would not be the case if it was a simple pojo

109
00:05:50.090 --> 00:05:53.030
with no nested types.

110
00:05:53.030 --> 00:05:57.060
Let's compile and build like we did before.

111
00:05:57.060 --> 00:06:00.020
We'll type gradle clean build,

112
00:06:00.020 --> 00:06:02.080
ampersand ampersand,

113
00:06:02.080 --> 00:06:07.000
java dash jar build slash libs

114
00:06:07.000 --> 00:06:09.090
and then the name of the jar inside the file.

115
00:06:09.090 --> 00:06:13.020
Hit enter.

116
00:06:13.020 --> 00:06:15.050
While this is building we should not have stopped

117
00:06:15.050 --> 00:06:16.070
our acted MQ instance

118
00:06:16.070 --> 00:06:19.030
so without doing anything else here,

119
00:06:19.030 --> 00:06:23.060
now that our springboot app is being restarted,

120
00:06:23.060 --> 00:06:25.090
we're gonna go back to our active MQ url

121
00:06:25.090 --> 00:06:32.030
and inspect what messages are left in the queue.

122
00:06:32.030 --> 00:06:33.070
And as you can tell,

123
00:06:33.070 --> 00:06:36.010
all the messages are gone.

124
00:06:36.010 --> 00:06:41.000
Now, let's go back to the front end web app,

125
00:06:41.000 --> 00:06:44.010
select a message,

126
00:06:44.010 --> 00:06:48.020
click add to order,

127
00:06:48.020 --> 00:06:50.050
and if you're watching in here in the logs

128
00:06:50.050 --> 00:06:54.070
you'll notice that there is a message received

129
00:06:54.070 --> 00:06:57.000
and the message that was appended.

