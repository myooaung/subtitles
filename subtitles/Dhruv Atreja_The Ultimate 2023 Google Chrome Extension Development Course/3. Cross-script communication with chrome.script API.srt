1
00:00:01,140 --> 00:00:01,370
Yeah.

2
00:00:01,470 --> 00:00:04,890
So now we have our script file.

3
00:00:09,780 --> 00:00:11,880
So let's get the button first.

4
00:00:14,070 --> 00:00:16,890
So that we can decide what happens when it is clicked.

5
00:00:23,440 --> 00:00:25,330
So change that obedient.

6
00:00:30,710 --> 00:00:32,930
So let's put an interest on this.

7
00:00:35,320 --> 00:00:38,410
So when it is clicked, we want it to do something.

8
00:00:38,740 --> 00:00:40,990
So let's define what you wanted to do.

9
00:00:47,100 --> 00:00:56,580
So let's log it when it is clicked so that we can know that we can see where it is being clicked.

10
00:01:03,390 --> 00:01:05,520
So let's right click on this pop up.

11
00:01:05,640 --> 00:01:06,660
Click, inspect.

12
00:01:09,180 --> 00:01:11,910
And let's see.

13
00:01:16,140 --> 00:01:19,020
Okay, so let's click it.

14
00:01:20,200 --> 00:01:21,130
Or just a second.

15
00:01:21,150 --> 00:01:21,690
Yeah.

16
00:01:23,850 --> 00:01:25,200
Let's open the console.

17
00:01:29,710 --> 00:01:29,900
Yeah.

18
00:01:30,270 --> 00:01:35,370
So let's see if we are able to log the click.

19
00:01:35,880 --> 00:01:40,230
And as you can see, whenever I click this button, we can see clicked.

20
00:01:40,650 --> 00:01:42,540
So that means our list there is working.

21
00:01:51,420 --> 00:01:52,320
So let.

22
00:01:55,410 --> 00:02:04,080
So let's we want to receive an array and we have to get the first item in it.

23
00:02:06,620 --> 00:02:10,970
So since we're using it, we have to use async.

24
00:02:13,990 --> 00:02:15,940
So let's use the Chrome API.

25
00:02:18,250 --> 00:02:20,030
If it is globally scoped.

26
00:02:20,270 --> 00:02:22,850
So we use Chrome tabs.

27
00:02:28,070 --> 00:02:34,040
So we use the Chrome Tabs dot query API.

28
00:02:36,260 --> 00:02:41,270
So we get the active tab and the current window.

29
00:02:45,500 --> 00:02:50,750
So we are filtering all those taps which are active and they are in the current window.

30
00:02:58,950 --> 00:03:00,750
So let's see.

31
00:03:05,800 --> 00:03:05,970
Okay.

32
00:03:06,040 --> 00:03:14,230
So you can see whenever I click it, we get the first item in that array, which is the current tab.

33
00:03:16,770 --> 00:03:18,810
So we have a lot of information.

34
00:03:20,730 --> 00:03:28,890
So I did this 170 of this tab in which we have opened that extension.

35
00:03:31,060 --> 00:03:32,180
So let's go back to the code.

36
00:03:35,900 --> 00:03:41,330
Okay, so let's do chrome dart scripting.

37
00:03:44,000 --> 00:03:46,760
And execute script.

38
00:03:48,200 --> 00:03:49,970
So this is a method.

39
00:03:51,020 --> 00:03:54,440
And we pass an object inside this method.

40
00:03:56,080 --> 00:03:58,300
So we will define the target.

41
00:04:01,020 --> 00:04:05,570
Storage value will also be an object in which we will give David.

42
00:04:08,720 --> 00:04:17,570
So we are calling this method so that whenever we inject a script into the web page, we can do it using

43
00:04:17,570 --> 00:04:18,140
this.

44
00:04:22,960 --> 00:04:24,670
So we are telling it.

45
00:04:24,670 --> 00:04:26,890
In which staff do we want to inject this?

46
00:04:31,560 --> 00:04:40,380
So we have our tab ID from the tab that we took through the query.

47
00:04:43,570 --> 00:04:47,050
And the function of the script.

48
00:04:47,050 --> 00:04:47,610
Should we pick?

49
00:04:48,610 --> 00:04:55,030
We have encoded it yet, but we will coded our function pick color.

50
00:04:59,530 --> 00:05:01,840
So console log.

51
00:05:04,070 --> 00:05:05,900
The script working.

52
00:05:09,060 --> 00:05:12,900
So let's save it and go back to our browser.

53
00:05:19,660 --> 00:05:23,380
So let's open this console of the web page.

54
00:05:24,310 --> 00:05:28,360
Keep in mind, we have opened the console of the web page and not the popup.

55
00:05:28,780 --> 00:05:34,240
As you can see, we can see the errors because you are in the deaf mode.

56
00:05:34,570 --> 00:05:38,950
So when you click on it, you can see the problems we are encountering.

57
00:05:41,820 --> 00:05:45,060
So our script is not working.

58
00:05:45,060 --> 00:05:46,740
And that is because.

59
00:05:50,710 --> 00:05:54,460
And for security reasons, we have to pass permissions.

60
00:05:56,820 --> 00:05:59,100
So let's define permission.

61
00:06:04,130 --> 00:06:06,000
So let's define this area.

62
00:06:08,930 --> 00:06:10,070
Active tab.

63
00:06:13,650 --> 00:06:15,030
And we have scripting.

64
00:06:16,410 --> 00:06:21,450
If you're ever confused about what permissions you need, you can refer to the Google Docs API.

65
00:06:21,480 --> 00:06:25,170
The official documentation for Chrome Manifest version three.

66
00:06:26,400 --> 00:06:30,690
So let's go back to the browser and let's refresh it.

67
00:06:33,520 --> 00:06:37,210
Of my API and then you pick other.

68
00:06:38,830 --> 00:06:40,530
Now we have another.

69
00:06:43,310 --> 00:06:46,880
So this analyst cannot access a chrome URL.

70
00:06:48,230 --> 00:06:56,950
So we are getting this error because this is our this is not an actual website, right?

71
00:06:56,990 --> 00:06:58,710
It is a chrome extension switch.

72
00:06:58,730 --> 00:07:02,060
So let's go to an actual website.

73
00:07:02,240 --> 00:07:07,220
And now when I use this extension and let's open the console.

74
00:07:09,490 --> 00:07:11,560
So let's see.

75
00:07:12,130 --> 00:07:13,840
As you can see now, it is working.

76
00:07:15,860 --> 00:07:23,420
So this is because we are able to inject script into the web page.

77
00:07:32,130 --> 00:07:43,860
So this code is being run in the courtroom and this function is being run inside a different context.

78
00:07:43,890 --> 00:07:49,920
This is being in this web page, whereas the above code is not being run inside this Web page.

79
00:07:51,330 --> 00:07:57,210
So this very rules are defined above cannot be used in this function.

80
00:07:57,480 --> 00:08:04,050
If you want to use them, then we have to pass these arguments before injecting our function.

81
00:08:08,130 --> 00:08:11,730
So that's how we can pass variables to these functions.

82
00:08:18,290 --> 00:08:20,450
So let's give a dry catch here.

83
00:08:22,460 --> 00:08:26,090
So if we get an error, we can log it.

84
00:08:36,090 --> 00:08:39,840
So now we have to activate the picker.

85
00:08:43,660 --> 00:08:47,890
So we want the APIs for the color picker.

86
00:08:50,300 --> 00:08:52,290
Let eyedropper.

87
00:08:53,890 --> 00:09:01,330
And so they set new eye dropper, which is a built in API.

88
00:09:03,940 --> 00:09:06,040
Let's tell you something about Eyedropper.

89
00:09:06,160 --> 00:09:07,300
Let's Google it.

90
00:09:09,590 --> 00:09:14,420
So let's see, we have some information about this.

91
00:09:15,560 --> 00:09:20,660
So as you can see, it is an experimental technology or an experimental feature.

92
00:09:23,610 --> 00:09:27,180
And they are implementing it slowly into the browsers.

93
00:09:27,510 --> 00:09:33,720
As you can see, the supported browsers, so it is working fully in Chrome and since we are working

94
00:09:33,810 --> 00:09:36,270
on a Chrome extension, it is not an issue.

95
00:09:38,070 --> 00:09:43,170
So you can get a lot of information about it, about how it can be used.

96
00:09:51,640 --> 00:09:55,070
So avoid eyedropper.

97
00:09:56,240 --> 00:09:58,270
Don't open.

98
00:10:02,260 --> 00:10:09,610
So this is how we will activate our rubber and it will return the color we have selected.

99
00:10:12,690 --> 00:10:18,600
So selected color is a weight, not eyedropper.

100
00:10:19,590 --> 00:10:21,750
So console.log, select color.

101
00:10:25,180 --> 00:10:30,130
Let's go back to the browser, refresh it and go to the color picker.

102
00:10:30,310 --> 00:10:31,570
Let's click this button.

103
00:10:32,920 --> 00:10:35,620
But nothing is happening, so we must have some of that.

104
00:10:37,120 --> 00:10:39,330
So our weight is only valid.

105
00:10:39,940 --> 00:10:41,020
So.

106
00:10:43,960 --> 00:10:46,450
So we have to make it async.

107
00:10:47,020 --> 00:10:49,000
Then only we can use a weight.

108
00:10:51,300 --> 00:10:52,800
So let's try it again.

109
00:10:55,200 --> 00:10:56,040
Color picker.

110
00:10:56,400 --> 00:10:57,310
Let's click it.

111
00:10:57,530 --> 00:10:57,720
Okay.

112
00:10:58,020 --> 00:11:00,270
So now you can see it is working fine.

113
00:11:06,460 --> 00:11:09,940
So as you can see, we can pick any color we want.

114
00:11:20,060 --> 00:11:28,040
But as you could see, not just Chrome, we have access to the entire window, which is very impressive.

115
00:11:29,930 --> 00:11:33,110
So we have access to an entire computer to pick colors.

116
00:11:35,450 --> 00:11:37,940
So I will pick this color.

117
00:11:40,390 --> 00:11:44,980
So as you can see in the console, we have the hex value of the color.

118
00:11:52,880 --> 00:11:55,340
So now what we have to do is wherever we pick the color.

119
00:12:00,530 --> 00:12:04,160
So we want to show our color below this button.

120
00:12:06,730 --> 00:12:07,600
So.

121
00:12:10,550 --> 00:12:17,190
You will have to set this color into a different process, which will be done here.

122
00:12:17,210 --> 00:12:20,540
So how do we set this color?

123
00:12:22,160 --> 00:12:25,100
So instead of storing it here, I will return it.

124
00:12:29,400 --> 00:12:31,050
So I will return this function.

125
00:12:36,510 --> 00:12:44,400
And I will add a second parameter of async function.

126
00:12:49,890 --> 00:12:54,930
So we want a result here.

127
00:12:59,600 --> 00:13:04,160
So this pop up is a process which you can see.

128
00:13:04,580 --> 00:13:08,600
And the below function has been injected into the web page.

129
00:13:08,630 --> 00:13:15,470
So these are two different processes, and we want to send up value from the web page to the pop up.

130
00:13:15,680 --> 00:13:19,610
So we want to send it from the below function to the above function.

131
00:13:23,180 --> 00:13:29,900
So this is how we can get the color.

132
00:13:31,130 --> 00:13:33,200
Let's call it injection results.

133
00:13:35,750 --> 00:13:39,110
So let's log these results.

134
00:13:45,390 --> 00:13:47,520
So let's go to console.

135
00:13:54,280 --> 00:13:59,560
It's open the console of the pop up as well as the console after that.

136
00:14:00,190 --> 00:14:03,580
So we want to see a result in the console of the pop up.

137
00:14:05,810 --> 00:14:07,220
So let's pick this color.

138
00:14:09,200 --> 00:14:12,230
So now you can see we have an array.

139
00:14:14,030 --> 00:14:16,610
And in this array we have some objects.

140
00:14:16,940 --> 00:14:18,980
So including the frame ID.

141
00:14:25,250 --> 00:14:27,680
And then we have a result.

142
00:14:29,300 --> 00:14:31,610
And you can see we have received our color.

143
00:14:37,440 --> 00:14:38,400
So.

144
00:14:43,160 --> 00:14:49,070
Let's give a very cost data and we will restructure it.

145
00:15:02,900 --> 00:15:06,440
So if data dot desert.

146
00:15:09,820 --> 00:15:10,450
So.

147
00:15:12,210 --> 00:15:13,410
It can happen.

148
00:15:13,410 --> 00:15:15,600
The case that we don't get any color at all.

149
00:15:18,240 --> 00:15:21,420
So before picking a color, if I press escape.

150
00:15:21,840 --> 00:15:22,830
Escape key.

151
00:15:25,610 --> 00:15:33,320
So if I cancel this, as you can see now, we don't get any color at all, so that will return an error.

152
00:15:34,910 --> 00:15:39,710
So your new check if it is not null.

153
00:15:42,600 --> 00:15:46,980
Then color should be data dot result.

154
00:15:48,450 --> 00:15:53,370
Let's see what the sgv whatever this property is, we want that.

155
00:15:58,750 --> 00:16:01,060
So we want to display it below this button.

156
00:16:03,730 --> 00:16:06,160
So we have color gradient color value.

157
00:16:06,640 --> 00:16:08,680
So let's get these here.

158
00:16:11,090 --> 00:16:22,070
So we'll get this grid and the display document, dot selector and color grid.

159
00:16:23,720 --> 00:16:32,600
And similarly, we can get color value, document, dot query selector, color value.

160
00:16:37,890 --> 00:16:45,780
And now we have to come here and color grid dot HTML or let's rather

161
00:16:48,510 --> 00:16:50,520
we want to change the background.

162
00:16:51,090 --> 00:17:00,480
So let's access tile dot background colors and the color.

163
00:17:05,890 --> 00:17:10,270
So we can assess the style of element this way.

164
00:17:14,450 --> 00:17:18,800
But we haven't given any ccis to the grid, so let's change that.

165
00:17:23,070 --> 00:17:25,200
So now we have to give it width and height.

166
00:17:29,630 --> 00:17:32,390
How it should also be 20 pixels because you want a square.

167
00:17:35,620 --> 00:17:41,470
And they decide about a radius to make it slightly curved to pixel.

168
00:17:47,220 --> 00:17:48,480
So let's check it again.

169
00:17:49,470 --> 00:17:52,260
Refresh and then open it again.

170
00:17:53,700 --> 00:17:54,870
Let's pick a color.

171
00:17:57,970 --> 00:17:58,380
Okay.

172
00:17:58,390 --> 00:18:00,430
We cannot see anything here right now.

173
00:18:00,430 --> 00:18:06,130
So let's inspect and let's see what's happening inside the console.

174
00:18:06,970 --> 00:18:10,240
And we can see the result, but we cannot see it here.

175
00:18:10,240 --> 00:18:11,620
So there must be some issue.

176
00:18:12,070 --> 00:18:13,060
Let's check.

177
00:18:16,000 --> 00:18:17,380
Okay, so there is no edit here.

178
00:18:19,870 --> 00:18:20,320
The.

179
00:18:24,820 --> 00:18:26,710
Okay, so we have color coded.

180
00:18:28,860 --> 00:18:29,940
So the glasses.

181
00:18:29,940 --> 00:18:30,600
Correct.

182
00:18:31,110 --> 00:18:32,850
And the color of blue is correct as well.

183
00:18:35,970 --> 00:18:37,200
So let's.

184
00:18:39,280 --> 00:18:43,630
Give it a read, let's hardcoded so we see if anything is wrong.

185
00:18:46,020 --> 00:18:50,300
And let's log it so that you can see that this block of code is being done.

186
00:18:53,540 --> 00:18:54,700
So let's do it.

187
00:18:55,610 --> 00:18:58,130
And let's open it again and pick any color.

188
00:19:00,590 --> 00:19:02,320
And I've done it.

189
00:19:02,330 --> 00:19:03,080
So.

190
00:19:03,620 --> 00:19:03,970
Okay.

191
00:19:03,980 --> 00:19:07,910
So you can see we did not see the log desert.

192
00:19:09,830 --> 00:19:14,000
So this function did not run this if code did not run.

193
00:19:19,070 --> 00:19:20,570
So let's take a little grid.

194
00:19:25,420 --> 00:19:26,560
Let's take it again.

195
00:19:31,090 --> 00:19:31,590
Suspect.

196
00:19:32,320 --> 00:19:32,540
Okay.

197
00:19:32,560 --> 00:19:36,610
So it is being read and it is available.

198
00:19:40,180 --> 00:19:47,170
So the problem being is possibly that it is probably in line that is far as not taking width and height.

199
00:19:47,170 --> 00:19:50,650
So let's change it into inline block.

200
00:19:52,110 --> 00:19:53,710
Okay, let's try it again.

201
00:19:56,590 --> 00:19:59,790
So let's pick our color blue.

202
00:20:00,310 --> 00:20:00,510
Okay.

203
00:20:00,640 --> 00:20:03,820
So now we can see right here because we have hardcoded it.

204
00:20:03,910 --> 00:20:05,470
So let's change it.

205
00:20:08,590 --> 00:20:09,000
Color.

206
00:20:09,760 --> 00:20:11,350
Let's save and refresh.

207
00:20:14,690 --> 00:20:16,520
The color OC.

208
00:20:16,520 --> 00:20:18,350
So now we can see the color here.

209
00:20:21,740 --> 00:20:23,150
And we can see the background colors.

210
00:20:23,360 --> 00:20:24,470
So that's great.

211
00:20:27,590 --> 00:20:30,260
And now we want to show the hex value as well.

212
00:20:30,260 --> 00:20:38,870
So that's why we have color value and color value stored in our text.

213
00:20:40,130 --> 00:20:41,780
And let's give it the color.

214
00:20:44,050 --> 00:20:45,430
Let's test it again.

215
00:20:51,480 --> 00:20:55,350
So now you can see we can see the hex value as well.

216
00:20:57,590 --> 00:20:59,180
So let's style it a little.

217
00:21:01,800 --> 00:21:03,510
So let's go to the pop up.

218
00:21:04,890 --> 00:21:06,270
Go to the selected color.

219
00:21:08,440 --> 00:21:15,970
So this is the dapper display flex a line items center.

220
00:21:19,290 --> 00:21:20,670
And modern top.

221
00:21:23,890 --> 00:21:25,000
20 pixels.

222
00:21:30,930 --> 00:21:32,700
Let's set the color value.

223
00:21:34,990 --> 00:21:36,910
Merging left.

224
00:21:47,170 --> 00:21:51,370
Okay, so now we want space between the color box and the color text.

225
00:21:52,700 --> 00:21:59,390
Late model V five pixel and looks a different way to bold.

226
00:22:00,570 --> 00:22:01,790
Okay, let's test it again.

227
00:22:04,800 --> 00:22:05,580
Let's pick a color.

228
00:22:06,750 --> 00:22:06,990
Okay.

229
00:22:06,990 --> 00:22:12,030
So now you can see it is looking a bit better.

230
00:22:12,540 --> 00:22:15,990
But we want to add another feature.

231
00:22:17,070 --> 00:22:19,710
That is when we pick a color.

232
00:22:20,700 --> 00:22:23,220
It should be safe to the clipboard of a computer.

233
00:22:25,110 --> 00:22:25,890
So that.

234
00:22:26,460 --> 00:22:28,020
So that we can use it directly.

235
00:22:28,950 --> 00:22:31,320
So to do that, it's pretty simple.

236
00:22:32,790 --> 00:22:34,080
Let's await.

237
00:22:37,230 --> 00:22:39,750
So we have navigator APIs in the browser.

238
00:22:40,650 --> 00:22:44,070
So a weight navigator.

239
00:22:46,290 --> 00:22:48,900
Dart clipboard.

240
00:22:49,630 --> 00:22:54,600
Dart It's again an API which you can Google whenever you want it.

241
00:22:55,200 --> 00:22:56,010
So.

242
00:22:58,810 --> 00:22:59,920
Let's try.

243
00:23:02,280 --> 00:23:04,410
So it can give at a certain time.

244
00:23:04,410 --> 00:23:07,410
So we have to try and catch.

245
00:23:10,780 --> 00:23:12,790
So sort out other.

246
00:23:19,760 --> 00:23:22,670
Okay, so let's test it again.

247
00:23:24,860 --> 00:23:26,390
So selected.

248
00:23:27,580 --> 00:23:28,690
Pick a color.

249
00:23:31,460 --> 00:23:32,180
And blue.

250
00:23:35,400 --> 00:23:44,280
So now if I do a command V, you can see that we can see our color because it was copied to our clipboard.

251
00:23:46,120 --> 00:23:48,130
So Accenture is ready now.
