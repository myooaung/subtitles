1
00:00:01,712 --> 00:00:03,710
We've accomplished a lot in this module.

2
00:00:03,710 --> 00:00:06,079
We've touched and worked with a variety of Spring

3
00:00:06,079 --> 00:00:09,035
architectural concepts in the Spring Boot environment and

4
00:00:09,035 --> 00:00:10,916
have a working backend conference app.

5
00:00:10,916 --> 00:00:14,941
Just keep in mind that we went really fast through this.

6
00:00:14,941 --> 00:00:16,558
To get a deeper understanding,

7
00:00:16,558 --> 00:00:19,338
you will need to dive into each portion of Spring that we

8
00:00:19,338 --> 00:00:21,297
covered and worth through the details.

9
00:00:21,297 --> 00:00:23,472
So let's recap what we've built.

10
00:00:23,472 --> 00:00:25,926
Once we've determined what our conference app would do,

11
00:00:25,926 --> 00:00:28,330
we installed and got a Postgres relational database

12
00:00:28,330 --> 00:00:31,134
running as the foundation of our app.

13
00:00:31,134 --> 00:00:36,752
I provided the schema and data files from a Git repo to bootstrap the database.

14
00:00:36,752 --> 00:00:36,958
Next,

15
00:00:36,958 --> 00:00:41,705
we worked our way up and built out some JPA models and repositories that

16
00:00:41,705 --> 00:00:44,692
comprised the persistence tier of our architecture.

17
00:00:44,692 --> 00:00:49,048
This included connecting to the database and setting up model relationships.

18
00:00:49,048 --> 00:00:52,576
We then built out the API endpoints that would be needed for

19
00:00:52,576 --> 00:00:55,115
basic CRUD operations on sessions and speakers.

20
00:00:55,115 --> 00:00:57,160
This utilized the Spring MVC framework,

21
00:00:57,160 --> 00:01:03,260
which relied on REST controllers and the Jackson library for JSON serialization.

22
00:01:03,260 --> 00:01:05,252
We did deal with a few other nuances,

23
00:01:05,252 --> 00:01:08,876
like working binary data and serialization issues.

24
00:01:08,876 --> 00:01:11,830
You'll always find one-offs like that when building an application

25
00:01:11,830 --> 00:01:14,705
that you will have to work through eventually.

26
00:01:14,705 --> 00:01:19,205
App development tends to follow the 80/20 rule, like most things in life.

27
00:01:19,205 --> 00:01:24,476
Eighty percent will build out easily, and 20% will give you more headache.

28
00:01:24,476 --> 00:01:25,309
And that's it.

29
00:01:25,309 --> 00:01:26,698
Take a break and regroup.

30
00:01:26,698 --> 00:01:34,000
Because coming up in the next section of the course, we'll dive deep into all the ways Spring Boot can be configured and managed.

