WEBVTT
1
00:00:00.003 --> 00:00:01.009
- [Instructor] One of my favorite topics

2
00:00:01.009 --> 00:00:05.002
in asynchronous messaging in microservices architectures

3
00:00:05.002 --> 00:00:08.000
is the stream data platform.

4
00:00:08.000 --> 00:00:11.004
The need for real data of system utilization is critical

5
00:00:11.004 --> 00:00:13.005
to a well-oiled machine

6
00:00:13.005 --> 00:00:18.005
and the stream data platform can solve many of these cases.

7
00:00:18.005 --> 00:00:22.004
So what this stream data platform all about?

8
00:00:22.004 --> 00:00:25.000
At its core, it handles streams of data.

9
00:00:25.000 --> 00:00:29.003
Usually, that data comes from structured log messages

10
00:00:29.003 --> 00:00:34.005
that indicate every action, every event on the system.

11
00:00:34.005 --> 00:00:35.007
The beauty of this model

12
00:00:35.007 --> 00:00:38.006
is that while it does increase the need for disk space

13
00:00:38.006 --> 00:00:40.004
across the system,

14
00:00:40.004 --> 00:00:44.005
both on the compute boxes but also on the platform itself,

15
00:00:44.005 --> 00:00:48.005
its activity is all handled asynchronously.

16
00:00:48.005 --> 00:00:51.006
When you have hundreds of microservices at play

17
00:00:51.006 --> 00:00:54.000
in a significantly sized system,

18
00:00:54.000 --> 00:00:58.003
this ability to capture, aggregate, analyze

19
00:00:58.003 --> 00:01:01.005
and act on the data is critical.

20
00:01:01.005 --> 00:01:05.001
This, of course, increases complexity of the system

21
00:01:05.001 --> 00:01:10.005
but as you'll see, it's all done for very specific reasons.

22
00:01:10.005 --> 00:01:13.009
A common architecture for a stream data platform

23
00:01:13.009 --> 00:01:16.006
is actually quite straightforward.

24
00:01:16.006 --> 00:01:19.009
Once again, you start with our message broker.

25
00:01:19.009 --> 00:01:22.008
Often, you will choose a persistent message broker

26
00:01:22.008 --> 00:01:26.007
for this model, such as Apache Kafka.

27
00:01:26.007 --> 00:01:29.002
You have a set of producers

28
00:01:29.002 --> 00:01:31.004
and a set of consumers

29
00:01:31.004 --> 00:01:34.001
and they all know about the broker.

30
00:01:34.001 --> 00:01:36.005
The producers send messages.

31
00:01:36.005 --> 00:01:39.002
The consumers react to those messages

32
00:01:39.002 --> 00:01:41.000
as they pertain to them.

33
00:01:41.000 --> 00:01:43.002
This is really a pub/sub model

34
00:01:43.002 --> 00:01:47.007
with multiple publishers on the same set of topics.

35
00:01:47.007 --> 00:01:50.000
So in a stream data platform,

36
00:01:50.000 --> 00:01:52.006
who are the producers, you may ask.

37
00:01:52.006 --> 00:01:54.004
The first is applications

38
00:01:54.004 --> 00:01:56.007
because they, of course, produce logs,

39
00:01:56.007 --> 00:01:58.003
or at least they should.

40
00:01:58.003 --> 00:02:02.007
And they are ultimately producers of these messages.

41
00:02:02.007 --> 00:02:04.006
While usually the application itself

42
00:02:04.006 --> 00:02:07.004
doesn't transmit the message to the broker,

43
00:02:07.004 --> 00:02:08.007
they produce them

44
00:02:08.007 --> 00:02:13.004
and an intermediary like Filebeat shifts the log messages.

45
00:02:13.004 --> 00:02:17.008
Databases are also used to produce logs and events.

46
00:02:17.008 --> 00:02:21.009
This data is very critical to a good stream data platform,

47
00:02:21.009 --> 00:02:24.004
and as such, all logs and events

48
00:02:24.004 --> 00:02:27.002
from databases should be included.

49
00:02:27.002 --> 00:02:30.000
Of course, servers themselves produce logs,

50
00:02:30.000 --> 00:02:34.006
and often can help tell a complete story of what's going on.

51
00:02:34.006 --> 00:02:37.005
Consider an application being compromised.

52
00:02:37.005 --> 00:02:41.005
The server logs often have critical information.

53
00:02:41.005 --> 00:02:44.008
And really, everything can be a producer in this model.

54
00:02:44.008 --> 00:02:46.009
If it creates events or logs,

55
00:02:46.009 --> 00:02:49.007
those messages could be pertinent

56
00:02:49.007 --> 00:02:53.006
to some process, and if they can be included,

57
00:02:53.006 --> 00:02:56.001
they should be.

58
00:02:56.001 --> 00:02:59.008
So what systems are usually the consumers then, you may ask.

59
00:02:59.008 --> 00:03:01.006
There are definite use cases,

60
00:03:01.006 --> 00:03:05.004
and we will dive into consumers from those.

61
00:03:05.004 --> 00:03:08.002
Log aggregators are a key benefit.

62
00:03:08.002 --> 00:03:11.000
Log aggregators can help paint a real picture

63
00:03:11.000 --> 00:03:13.004
of what's going on in the system.

64
00:03:13.004 --> 00:03:16.009
Correlation or tracing IDs help the log aggregators

65
00:03:16.009 --> 00:03:19.008
assemble full pictures of events in the system

66
00:03:19.008 --> 00:03:22.001
by linking the logs together.

67
00:03:22.001 --> 00:03:25.008
In addition, these tools usually help produce

68
00:03:25.008 --> 00:03:27.008
a common logging format

69
00:03:27.008 --> 00:03:32.001
across different systems through transformations.

70
00:03:32.001 --> 00:03:34.003
Analytics engines are a great use case

71
00:03:34.003 --> 00:03:35.008
for streaming data.

72
00:03:35.008 --> 00:03:39.008
Since the logs can't have a full picture of what's going,

73
00:03:39.008 --> 00:03:42.009
data scientists can use this information

74
00:03:42.009 --> 00:03:45.002
to define the information needed

75
00:03:45.002 --> 00:03:48.009
for long-term and short-term actions.

76
00:03:48.009 --> 00:03:52.005
Long-term storage vehicles are another model.

77
00:03:52.005 --> 00:03:57.005
Many use cases in so-called big data drive their data flow

78
00:03:57.005 --> 00:04:00.004
from a stream data platform.

79
00:04:00.004 --> 00:04:02.005
Once this set of data has been identified

80
00:04:02.005 --> 00:04:05.007
through analytics or other learning mechanisms,

81
00:04:05.007 --> 00:04:08.008
the data can be collected and shipped to a lake

82
00:04:08.008 --> 00:04:12.009
for historical analysis and other uses.

83
00:04:12.009 --> 00:04:15.003
One of the coolest uses that I have seen stems

84
00:04:15.003 --> 00:04:19.001
from analytics, and that is eventing engines.

85
00:04:19.001 --> 00:04:22.005
These engines key off key analytical points

86
00:04:22.005 --> 00:04:27.004
and trigger downstream events usually through orchestration.

87
00:04:27.004 --> 00:04:30.002
Consider a rogue user on your system.

88
00:04:30.002 --> 00:04:32.008
If the analytic point of historical data

89
00:04:32.008 --> 00:04:36.005
can help yield standard usages of the system,

90
00:04:36.005 --> 00:04:40.001
the outlier that most rogue users behave in

91
00:04:40.001 --> 00:04:43.004
can trigger an event to trace the user

92
00:04:43.004 --> 00:04:46.001
or even lock him out.

93
00:04:46.001 --> 00:04:49.001
This power goes beyond intrusion detection

94
00:04:49.001 --> 00:04:52.000
but we'll talk more about that later.

95
00:04:52.000 --> 00:04:54.003
So why go through all this trouble

96
00:04:54.003 --> 00:04:56.009
if the consumer use cases are enough?

97
00:04:56.009 --> 00:04:59.007
Let's look at the big picture.

98
00:04:59.007 --> 00:05:02.009
First, you need to accept that data is king.

99
00:05:02.009 --> 00:05:04.009
Every business decision needs data

100
00:05:04.009 --> 00:05:06.004
to be made effectively,

101
00:05:06.004 --> 00:05:09.001
and your system's actual utilization

102
00:05:09.001 --> 00:05:11.005
is a big part of that flow of data

103
00:05:11.005 --> 00:05:15.001
for both user and internal purposes.

104
00:05:15.001 --> 00:05:19.002
Your business can and should drive off that data.

105
00:05:19.002 --> 00:05:21.004
Internal data can help in procurement

106
00:05:21.004 --> 00:05:23.003
and resource allocation.

107
00:05:23.003 --> 00:05:26.008
External or user data can help drive decisions

108
00:05:26.008 --> 00:05:29.007
that can make the company more profitable.

109
00:05:29.007 --> 00:05:33.005
In addition, not knowing something can be dangerous.

110
00:05:33.005 --> 00:05:34.007
If you make a decision

111
00:05:34.007 --> 00:05:36.006
in your company's website, for instance,

112
00:05:36.006 --> 00:05:39.000
and you don't know historical trends,

113
00:05:39.000 --> 00:05:42.000
you may cost yourself dollars and engagements

114
00:05:42.000 --> 00:05:43.009
by future changes.

115
00:05:43.009 --> 00:05:47.005
But if you know you can roll back

116
00:05:47.005 --> 00:05:50.005
or further enhance your offering based

117
00:05:50.005 --> 00:05:54.003
on a negative or positive trend respectively.

118
00:05:54.003 --> 00:05:59.000
Ultimately, it's all about enabling good decision making.

