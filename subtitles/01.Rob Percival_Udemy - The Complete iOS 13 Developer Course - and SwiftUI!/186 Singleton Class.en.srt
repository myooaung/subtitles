1
00:00:01,110 --> 00:00:07,800
Hi within this lecture we going to learn a new concept called singleton class.

2
00:00:07,950 --> 00:00:16,530
So we're going to see whether this but what we're doing so far is to create this ad plays view controller

3
00:00:16,530 --> 00:00:24,250
in which people will choose the name type an atmosphere and then they will click next.

4
00:00:24,270 --> 00:00:31,370
So why do we need that Singleton because when we click that's next we're going to go to these maps we've

5
00:00:31,410 --> 00:00:40,020
controller and we how to transfer is information the name the type the atmosphere and the image to the

6
00:00:40,020 --> 00:00:44,720
maps we have controllers so that we can upload them to the pass right.

7
00:00:44,850 --> 00:00:51,300
And you know how to transfer data between we have controllers as you can for example use prepare for

8
00:00:51,300 --> 00:00:54,240
Segway in order to achieve these results.

9
00:00:54,570 --> 00:00:59,170
But sometimes there are a lot of data to transfer between.

10
00:01:00,010 --> 00:01:07,100
We have controllers like in here we have four data but maybe in some cases you will have five.

11
00:01:07,110 --> 00:01:12,410
We have controllers and in which you will have like five different data points.

12
00:01:12,420 --> 00:01:19,960
So you're going to be dealing with 25 data points and it will be harder for you to transfer them.

13
00:01:20,010 --> 00:01:26,280
So we're going to come up with a way to transfer these data with more efficient structure.

14
00:01:26,520 --> 00:01:28,660
And there are a couple of ways to do that.

15
00:01:28,680 --> 00:01:35,340
I'm going to show you one way which is the easiest but it is not preferable due to its nature.

16
00:01:35,400 --> 00:01:43,110
Later on I'm going to show you a lot more clear a lot more structural way and we're going to use that

17
00:01:43,120 --> 00:01:45,630
and it's called singleton class.

18
00:01:45,720 --> 00:01:49,830
First of all I'm going to show you something called global variables.

19
00:01:50,280 --> 00:01:55,050
So far we have been defining our variables inside of our classes.

20
00:01:55,080 --> 00:01:59,830
Now I'm going to define a variable outside of our class.

21
00:02:00,000 --> 00:02:08,340
So this is above the class as you can see and trying to come up with a way to create global named global

22
00:02:08,340 --> 00:02:10,220
type and global atmosphere.

23
00:02:10,230 --> 00:02:14,410
And they are going to be initial initially empty strings.

24
00:02:14,610 --> 00:02:20,080
Okay of course we can do that for global image as well.

25
00:02:20,160 --> 00:02:22,950
And then next button is clicked.

26
00:02:22,950 --> 00:02:28,350
I can just come over here and say global name is name tags.

27
00:02:28,380 --> 00:02:30,870
So what was it called place name taxed.

28
00:02:30,870 --> 00:02:31,530
OK.

29
00:02:31,680 --> 00:02:32,820
That text.

30
00:02:33,090 --> 00:02:40,910
So it will assign whatever is written inside of our place name text to global name variable.

31
00:02:41,130 --> 00:02:49,530
And since I defined that global name outside of my Clyde's class now I can come to map B C and I can

32
00:02:49,530 --> 00:02:55,850
just call this global name from here and I can reach its current value.

33
00:02:55,950 --> 00:03:03,450
So let me try to let me try to print the global name inside of map B C even though I defined that variable

34
00:03:03,810 --> 00:03:13,060
inside the F place V.S. as you can see now I call that variable E side of my map C so let me try this.

35
00:03:13,060 --> 00:03:14,620
Let me come over here.

36
00:03:14,740 --> 00:03:18,250
Let me write something like James restaurant or James.

37
00:03:18,250 --> 00:03:19,230
OK.

38
00:03:19,390 --> 00:03:27,240
And here next and in map we see as you can see we managed to get that information and write it down.

39
00:03:27,370 --> 00:03:32,970
So this works so you can just do this operation with global variables.

40
00:03:33,400 --> 00:03:35,880
But this is not preferable.

41
00:03:35,890 --> 00:03:36,600
Why.

42
00:03:36,610 --> 00:03:43,950
Because maybe you're working with a big team like you have 10 developers in your project and you're

43
00:03:43,960 --> 00:03:45,900
creating some variables.

44
00:03:46,060 --> 00:03:53,800
And if you define all these variables as global variables someone may just take that global variable

45
00:03:53,800 --> 00:03:57,660
without knowing it and change its value somewhere.

46
00:03:57,790 --> 00:04:05,050
So it's not very safe to use that in this case we are all alone and we are developing our own project

47
00:04:05,080 --> 00:04:08,620
and we are capable of tracking what we have done so far.

48
00:04:08,650 --> 00:04:18,520
So I believe it's no harm to do that but I'm going to show you a better way to use that so I'm creating

49
00:04:18,790 --> 00:04:20,100
a swift file.

50
00:04:20,120 --> 00:04:28,110
OK and the Swiss file is going to be a class I'm going to call this place model.

51
00:04:28,300 --> 00:04:36,520
So we're creating a place modelling here and we're going to assign all the properties all the values

52
00:04:36,550 --> 00:04:46,300
that we want inside of a place to this model and this model will only have one object one instance so

53
00:04:46,300 --> 00:04:51,130
that we can reach it from anywhere and we can change it from anywhere.

54
00:04:51,130 --> 00:04:53,620
I'm going to show you how to do that.

55
00:04:53,620 --> 00:04:55,890
So this is going to be our place model.

56
00:04:55,900 --> 00:04:56,640
OK.

57
00:04:56,680 --> 00:04:59,110
And this is going to be a regular class.

58
00:04:59,620 --> 00:05:05,110
But before we go on and go on and do that I'm going to show you what a singleton is.

59
00:05:05,140 --> 00:05:09,760
So I search Google for a singleton class in swift and this came up.

60
00:05:10,330 --> 00:05:18,440
So this is a simple code for singleton class as you can see defines the class as a regular way.

61
00:05:18,580 --> 00:05:21,050
And it's create something called static left.

62
00:05:21,070 --> 00:05:25,820
So does a static variable and it's can be reached from anywhere.

63
00:05:25,840 --> 00:05:26,810
OK.

64
00:05:27,130 --> 00:05:33,730
So we're going to reach that shared distance but the key point here is that use is something called

65
00:05:33,730 --> 00:05:35,900
private initialized.

66
00:05:36,070 --> 00:05:44,460
Remember when we use initialize is we define what will happen then an instance of this class is created.

67
00:05:44,470 --> 00:05:50,160
So this is the same thing but V defined as initialize is as private.

68
00:05:50,260 --> 00:06:00,760
So that this instance of this class an instance of this class can only be created inside of this class.

69
00:06:00,790 --> 00:06:08,620
So this is kind of not very useful if you want to have a regular class where you want to create more

70
00:06:08,620 --> 00:06:16,000
than one object but if you want to have only one object if you want to have only one instance then this

71
00:06:16,000 --> 00:06:17,020
is great.

72
00:06:17,080 --> 00:06:23,890
You can create your own instance from here and people can access this instance and change its value

73
00:06:23,890 --> 00:06:26,140
from any class you want.

74
00:06:26,140 --> 00:06:27,720
Let me show you what I mean.

75
00:06:27,730 --> 00:06:35,920
I'm going to call this place model as I said before and I'm going to create a static variable so static

76
00:06:35,920 --> 00:06:39,750
lat and I'm going to call this shared instance.

77
00:06:39,910 --> 00:06:40,620
OK.

78
00:06:40,750 --> 00:06:49,450
So this is going to be a place model object and this will be the only instance of this class we cannot

79
00:06:49,450 --> 00:06:57,670
create any instance of this class because I'm going to add private initialized or out inside of this

80
00:06:57,670 --> 00:07:05,440
class of course I can choose whatever attributes that I want to assign to this object or assigned to

81
00:07:05,440 --> 00:07:07,700
this class in general.

82
00:07:08,080 --> 00:07:10,110
And people will get to choose.

83
00:07:10,110 --> 00:07:16,780
People will get to change these variables but only for this shared instance.

84
00:07:16,860 --> 00:07:17,280
Okay.

85
00:07:17,290 --> 00:07:26,730
Not for another instance is because there will be no in other instance for example these sample shows

86
00:07:26,760 --> 00:07:30,060
us it created some account information.

87
00:07:30,060 --> 00:07:31,100
I don't need that.

88
00:07:31,110 --> 00:07:33,400
I'm just gonna go for place name.

89
00:07:33,440 --> 00:07:43,020
Okay so my place name will be an empty string and place type again an empty string place atmosphere.

90
00:07:43,290 --> 00:07:47,790
Again an empty string and we're going to have some place image.

91
00:07:47,790 --> 00:07:56,010
So this will be a UI image and we cannot do that because we only imported Foundation in here.

92
00:07:56,010 --> 00:08:04,710
We have to go for UI kit so once we do that now we cannot initialize the UI image as well.

93
00:08:04,710 --> 00:08:07,460
Now let me call private in it.

94
00:08:07,620 --> 00:08:08,270
OK.

95
00:08:08,370 --> 00:08:14,550
So that no other instance will be created out of this class.

96
00:08:14,760 --> 00:08:18,820
So this is private in its as in here.

97
00:08:19,380 --> 00:08:22,190
And I believe I forgot to add this parentheses.

98
00:08:22,190 --> 00:08:22,470
Yep.

99
00:08:23,040 --> 00:08:26,940
OK now we are ready to test the singleton class.

100
00:08:26,940 --> 00:08:28,660
Let's go to our ad place.

101
00:08:28,660 --> 00:08:33,840
We have controller and let's go to next button clicked.

102
00:08:33,840 --> 00:08:34,770
I'm gonna delete this.

103
00:08:34,770 --> 00:08:37,740
We're not going to be using these global variables.

104
00:08:37,740 --> 00:08:39,300
I'm going to comment this out.

105
00:08:39,300 --> 00:08:45,000
I'm going to leave it here as a note so that you know there is something called global variables but

106
00:08:45,270 --> 00:08:50,220
it's kind of frowned upon to use it in big projects.

107
00:08:50,220 --> 00:08:55,020
So let's come here and call for place model.

108
00:08:55,020 --> 00:09:01,920
So generally we just do that place model dot shared instance and we get to reach the attributes when

109
00:09:01,920 --> 00:09:04,610
we hit dot or here.

110
00:09:04,650 --> 00:09:12,420
Right now we are getting some weird air and I cannot reach the variables so let me create a place model

111
00:09:12,420 --> 00:09:13,410
over here.

112
00:09:13,710 --> 00:09:16,960
So it would be much more clear what I'm doing.

113
00:09:17,100 --> 00:09:24,090
So I cannot do that for example I cannot say that place model place model because it will say that any

114
00:09:24,090 --> 00:09:29,680
Schweizer is inaccessible because we have this private protection level.

115
00:09:29,820 --> 00:09:33,580
So rather I have to say shared instance.

116
00:09:33,750 --> 00:09:40,890
And as you can see we we get an weird error when we say that let me do a command B to build this up.

117
00:09:41,250 --> 00:09:43,910
Oh yeah we really have an error.

118
00:09:44,580 --> 00:09:45,320
Oh yeah.

119
00:09:45,360 --> 00:09:48,000
In the map we see we still printing the global name.

120
00:09:48,000 --> 00:09:50,730
So that was the error that we are getting.

121
00:09:51,030 --> 00:09:57,540
So let's go back to that place we see and we have commented everything out.

122
00:09:57,540 --> 00:10:02,160
And let me do another commands B to see if we really have another error.

123
00:10:02,160 --> 00:10:02,500
No.

124
00:10:02,850 --> 00:10:03,200
Yep.

125
00:10:03,210 --> 00:10:04,790
Now we are good to go.

126
00:10:04,890 --> 00:10:06,870
Now if I say that shared instance.

127
00:10:06,870 --> 00:10:07,210
Yep.

128
00:10:07,220 --> 00:10:08,730
You're not getting in error.

129
00:10:08,820 --> 00:10:11,920
And if I say that I get to reach the attributes.

130
00:10:12,090 --> 00:10:19,500
Now in here if I say place model not this place model but the displaced model that we have created.

131
00:10:19,530 --> 00:10:19,820
Yep.

132
00:10:19,830 --> 00:10:25,040
This one if I say place model dot now I can change the place name.

133
00:10:25,140 --> 00:10:31,740
Now I can get it from place name tags dot text ok place name text.

134
00:10:31,770 --> 00:10:33,320
That text.

135
00:10:33,510 --> 00:10:39,180
So again in here in map we see we can call this OK.

136
00:10:39,360 --> 00:10:49,410
We can call this place model with capital p place model dot shared instance dot place name and a you

137
00:10:49,410 --> 00:10:55,970
will see that this will give me the same result that I have assigned in the previous week controller

138
00:10:56,010 --> 00:10:59,820
because we only have one instance.

139
00:10:59,820 --> 00:11:03,150
So let's go for test and it next.

140
00:11:03,150 --> 00:11:09,120
As you can see we managed to print out the tests so this works.

141
00:11:09,120 --> 00:11:13,310
So our singleton class actually doing its job.

142
00:11:13,440 --> 00:11:19,730
So let's go to Ed place we have controller and actually do the other things as well.

143
00:11:19,770 --> 00:11:23,050
Before we go on and first I'll wrap all of this.

144
00:11:23,130 --> 00:11:31,410
I want to check to see if place name text is empty is not empty actually place site tax that text is

145
00:11:31,410 --> 00:11:36,230
not an empty string and place atmosphere dot text.

146
00:11:36,330 --> 00:11:40,290
This one that text is not an empty string as well.

147
00:11:41,370 --> 00:11:51,790
So if these conditions hold then I can create my place model and I can assign all their related values.

148
00:11:52,140 --> 00:11:55,460
What do I need I need actually an image as well.

149
00:11:55,470 --> 00:11:56,100
Right.

150
00:11:56,100 --> 00:12:03,370
So I'm going to check to see if let's chosen image is going to be a place image.

151
00:12:03,390 --> 00:12:07,060
Let's see place Image view dot image.

152
00:12:07,200 --> 00:12:16,650
If I can get this OK then I can be certain that I can call place model dot place image.

153
00:12:16,800 --> 00:12:23,690
So let's do that place model that place that in place name text place model up place type place type

154
00:12:24,110 --> 00:12:26,490
text not text.

155
00:12:26,530 --> 00:12:29,030
Okay we have one more tag.

156
00:12:29,060 --> 00:12:36,560
So does this place Utmost Fear and place Utmost Fear text that text.

157
00:12:36,560 --> 00:12:37,640
Here you go.

158
00:12:37,640 --> 00:12:43,830
And finally we're going to have place model image so place model dog place image.

159
00:12:44,000 --> 00:12:48,020
And this will be equal to chosen image.

160
00:12:48,020 --> 00:12:49,280
Here you go.

161
00:12:49,280 --> 00:12:52,900
I believe now we assigned everything that we need.

162
00:12:53,060 --> 00:12:57,630
If this works out we can do the Segway right.

163
00:12:57,770 --> 00:13:02,220
So I believe we can do the Segway inside of the first.

164
00:13:02,240 --> 00:13:12,140
If so if they are not empty we can go over here and perform the Segway and else if they're empty we

165
00:13:12,140 --> 00:13:13,730
can just do.

166
00:13:13,850 --> 00:13:18,920
We can't just show an error message and I believe we don't have any left messages in here.

167
00:13:19,100 --> 00:13:21,450
So let me create one more fast.

168
00:13:21,500 --> 00:13:30,020
The title will be error the message will be the place name place type and place utmost fear missing.

169
00:13:30,320 --> 00:13:37,910
OK so that user will know they have to give some texts.

170
00:13:38,120 --> 00:13:40,610
And here I'm going to say OK.

171
00:13:40,610 --> 00:13:46,710
Bottom is going to be a UI alert action and this action will have the title of OK.

172
00:13:46,820 --> 00:13:54,390
The sale of alerts or not other default and handler will be nil.

173
00:13:54,440 --> 00:13:59,370
So here I'm going to add the action to my real effort.

174
00:13:59,390 --> 00:13:59,980
OK.

175
00:13:59,990 --> 00:14:06,620
And I'm going to present this by saying present and I'm going to present the Ellard with information

176
00:14:06,620 --> 00:14:09,170
without completion.

177
00:14:09,170 --> 00:14:10,120
Here you go.

178
00:14:10,130 --> 00:14:13,390
Now I believe we are ready to test this.

179
00:14:13,520 --> 00:14:20,610
In fact we're not going to see if this works or not because we will be transferring data to maps we

180
00:14:20,610 --> 00:14:25,690
have controller but we're not using that data right now.

181
00:14:25,760 --> 00:14:30,890
Just let me test this and see if we get an error or not.

182
00:14:30,890 --> 00:14:32,250
Let's click on Next.

183
00:14:32,590 --> 00:14:32,880
Yep.

184
00:14:32,900 --> 00:14:39,620
We don't get any error and actually we printed out the test while more time we going to see if this

185
00:14:39,620 --> 00:14:46,850
really works when we upload the data to past server right now let's stop here and do that within the

186
00:14:46,850 --> 00:14:47,690
next lecture.
