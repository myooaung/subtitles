1
00:00:00,550 --> 00:00:01,240
Hi.

2
00:00:01,350 --> 00:00:08,640
We didn't his lecture re to see how we can leverage this in its function in order to create these properties

3
00:00:08,640 --> 00:00:10,530
without initializing them.

4
00:00:10,530 --> 00:00:16,200
So I'm deleting these initial risers and I'm going to do this inside of my in its function.

5
00:00:16,280 --> 00:00:17,100
Okay.

6
00:00:17,340 --> 00:00:25,110
So rather than printing musician created I'm just going to ask for some input in the in its function.

7
00:00:25,110 --> 00:00:27,750
So I'm going to ask for a name in it.

8
00:00:27,750 --> 00:00:29,070
It will be a string.

9
00:00:29,270 --> 00:00:30,190
OK.

10
00:00:30,240 --> 00:00:32,400
And again an agent.

11
00:00:32,400 --> 00:00:36,720
This will be an integer and an instrument in it.

12
00:00:36,750 --> 00:00:39,850
This will be again a string.

13
00:00:39,930 --> 00:00:47,760
So what I'm going to do I'm going to take those values and I'm going to say name is now name in it.

14
00:00:47,760 --> 00:00:50,260
Age is now age in it.

15
00:00:50,280 --> 00:00:56,010
OK so you're going to have to say your name is equal to name in it.

16
00:00:56,010 --> 00:00:58,920
Age is now age in it.

17
00:00:59,160 --> 00:01:04,420
And of course the instrument is again instrument in it.

18
00:01:04,590 --> 00:01:08,280
You don't have to say in it you can just go for name.

19
00:01:08,310 --> 00:01:11,250
You can just go for why there were variable name you want.

20
00:01:11,250 --> 00:01:17,380
I'm just trying to differentiate them a little bit so you don't get confused.

21
00:01:17,720 --> 00:01:18,180
Okay.

22
00:01:18,210 --> 00:01:25,630
So whenever I create an instance of this class it will ask me for a name and age and instrument.

23
00:01:25,680 --> 00:01:30,890
So rather than defining those values of to recreate the object.

24
00:01:30,960 --> 00:01:34,830
Now we can do this in the same line.

25
00:01:34,920 --> 00:01:36,450
So let me do an example.

26
00:01:36,450 --> 00:01:43,650
So if I say let James and James is a musician it should have asked me there.

27
00:01:43,650 --> 00:01:45,770
So let me the comment be.

28
00:01:46,000 --> 00:01:48,640
Yep this is asking right now.

29
00:01:48,690 --> 00:01:51,480
So let me do this from the beginning.

30
00:01:51,570 --> 00:01:52,300
OK.

31
00:01:52,500 --> 00:01:56,950
So if I do command beat I WILL GET SYNCHRONIZED as I said before.

32
00:01:57,030 --> 00:02:02,520
Now it's giving me an error it says that you have a missing argument in here.

33
00:02:02,520 --> 00:02:10,520
Now if you open parentheses you will see that it asks you for a name init agent it's an instrument in

34
00:02:10,520 --> 00:02:12,720
its so far name.

35
00:02:12,840 --> 00:02:21,750
You can go for James OK for age you can go for 50 and for instrument you can call go for guitar.

36
00:02:21,750 --> 00:02:24,670
So now we fi print James starts.

37
00:02:24,780 --> 00:02:27,410
It will give me 50.

38
00:02:27,570 --> 00:02:32,100
So that's how you create objects with initialized is.

39
00:02:32,280 --> 00:02:33,890
OK.

40
00:02:34,050 --> 00:02:42,330
And the vial are added I believe we should learn about E numbers as well so E numbers make our life

41
00:02:42,360 --> 00:02:45,600
easier when we try to categorize things.

42
00:02:45,660 --> 00:02:47,300
What do I mean.

43
00:02:47,430 --> 00:02:56,430
For example if I want to add a type of musician in here as a property I can just go and do that with

44
00:02:56,430 --> 00:02:57,110
a string.

45
00:02:57,120 --> 00:02:58,050
Right.

46
00:02:58,260 --> 00:03:05,760
But rather than doing this drink I'm just going to go for e num and you will see what why why I'm doing

47
00:03:05,790 --> 00:03:06,490
that.

48
00:03:06,660 --> 00:03:08,340
In a clear way.

49
00:03:08,520 --> 00:03:17,110
So generally you C E numbers enumerated type declarations in the top of this project file.

50
00:03:17,190 --> 00:03:18,010
OK.

51
00:03:18,030 --> 00:03:24,660
So you have to give and name here and in some name like musician type.

52
00:03:24,660 --> 00:03:33,360
And in here you write some categories for example a rare musician can be a vocalist a guitarist or lead

53
00:03:33,360 --> 00:03:34,130
guitarist.

54
00:03:34,140 --> 00:03:34,940
Right.

55
00:03:34,980 --> 00:03:38,730
So write them all so lead guitar.

56
00:03:38,730 --> 00:03:40,360
It will be a vocalist.

57
00:03:40,380 --> 00:03:42,250
It will be a drummer.

58
00:03:42,300 --> 00:03:42,900
Right.

59
00:03:43,530 --> 00:03:47,010
And it would be a bassist as well.

60
00:03:47,010 --> 00:03:51,510
So maybe you can sing something like a while in the store or something.

61
00:03:51,600 --> 00:03:52,970
OK.

62
00:03:53,370 --> 00:03:56,530
So why are we creating these types.

63
00:03:56,730 --> 00:04:00,720
We can have done this with strings as well.

64
00:04:00,720 --> 00:04:02,610
I'm going to show you why.

65
00:04:02,910 --> 00:04:10,150
If I come around here to my attributes I can easily add a new type I can just say type.

66
00:04:10,400 --> 00:04:11,100
OK.

67
00:04:11,160 --> 00:04:19,230
And this would be a string but if I do that my other developed reverb can go on this project can write

68
00:04:19,230 --> 00:04:26,140
vocal OK and the other developer using this class can write vocalists.

69
00:04:26,640 --> 00:04:33,660
And even if you're the only one working on a project like this you can do the same mistake as well.

70
00:04:33,660 --> 00:04:33,960
Right.

71
00:04:33,960 --> 00:04:41,670
You can go for a vocal you can go for a vocalist in some other cases maybe you want to standardize those

72
00:04:41,670 --> 00:04:42,540
types.

73
00:04:42,570 --> 00:04:50,850
So this is our E names come to play you kind o standardize the category so that would leave no room

74
00:04:50,850 --> 00:04:53,630
for mistake at all.

75
00:04:53,640 --> 00:05:01,580
So rather than saying this is going to be a string I'm going to say this will be a busy Shin type OK

76
00:05:01,940 --> 00:05:05,690
as you can see musician type is a musician type type.

77
00:05:06,200 --> 00:05:07,580
So this is an in.

78
00:05:07,610 --> 00:05:13,360
This is not a class but we can actually use this to choose a category.

79
00:05:13,370 --> 00:05:20,500
And now we have an error inside of in it because we have to ask for it type in it.

80
00:05:20,510 --> 00:05:21,500
Right.

81
00:05:21,500 --> 00:05:29,010
So I'm going to go for type in it and this will be a musician type rather than string.

82
00:05:29,390 --> 00:05:39,780
Now I can come over here and I can easily say my type this type OK is going to be a type in it.

83
00:05:39,950 --> 00:05:48,230
So right now we have created a category for ourselves and we have a signed it to be a property in our

84
00:05:48,230 --> 00:05:48,590
class.

85
00:05:48,620 --> 00:05:55,670
So let me do a build so it will get synchronized and once it gets synchronized as you can see we got

86
00:05:55,910 --> 00:05:57,500
another error in here.

87
00:05:57,500 --> 00:06:04,280
So it seems that you have to add a new parameter here called type init if you hit fixed.

88
00:06:04,280 --> 00:06:07,160
This will be added automatically.

89
00:06:07,160 --> 00:06:13,580
So I can hit that here and I can choose one of the categories that we have created.

90
00:06:13,580 --> 00:06:15,720
So I can easily come here.

91
00:06:15,730 --> 00:06:22,760
I can say James is a vocalist for example and now I can't reach this value as well.

92
00:06:22,770 --> 00:06:23,060
Right.

93
00:06:23,060 --> 00:06:25,220
So let me try to print this.

94
00:06:25,220 --> 00:06:26,900
James that type.

95
00:06:26,900 --> 00:06:31,160
Now I will see the type in the logs as well.

96
00:06:31,220 --> 00:06:33,850
So this is how you use E numbers.

97
00:06:33,860 --> 00:06:37,450
This is how you leverage items in your classes.

98
00:06:37,460 --> 00:06:44,540
If you're looking for a way to create categories rather than doing this with a string you can do this

99
00:06:44,540 --> 00:06:52,880
with E numbers and this will be much more efficient much more save for then doing this with a string

100
00:06:54,380 --> 00:06:56,870
so that's all for right now.

101
00:06:56,870 --> 00:07:03,140
We're going to stop here actually and within the next lecture we're going to see how we can add some

102
00:07:03,140 --> 00:07:07,340
actions some functions to our class as well.
