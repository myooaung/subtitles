1
00:00:00,090 --> 00:00:08,040
Hi within this lecture we are going to learn about timer's so timer's are some structures that allow

2
00:00:08,040 --> 00:00:18,290
us to do some operation repetitively within a given period of time and it arouses operation in the background

3
00:00:18,900 --> 00:00:25,980
so you will see what I mean by telling background and you will see what I mean by telling within a given

4
00:00:26,250 --> 00:00:27,300
period of time.

5
00:00:27,720 --> 00:00:35,190
So in order to do that I'm going to create a single view app I'm going to call this timer project simply

6
00:00:35,550 --> 00:00:42,560
and I'm going to hit next to create this project and save it on my OS folder.

7
00:00:42,600 --> 00:00:52,570
After that let me make this project into a big full screen and then go to real controller dot Swift.

8
00:00:52,620 --> 00:01:00,690
So here we are going to define our timer object and suppose that I want to have a countdown timer I

9
00:01:00,690 --> 00:01:04,370
want to count from ten to zero.

10
00:01:04,380 --> 00:01:11,300
Okay so let's suppose that I'm making a game in which we're competing against time.

11
00:01:11,850 --> 00:01:20,820
So I will need a time label in which I will count from back to ten nine eight seven.

12
00:01:20,880 --> 00:01:23,510
And it goes all the way to zero.

13
00:01:23,530 --> 00:01:24,170
Okay.

14
00:01:24,240 --> 00:01:29,720
In order to do that we are going to create a timer and you do it like this.

15
00:01:29,720 --> 00:01:39,210
So with big timer with caps slice T and says that this is a timer that fires after a certain time interval

16
00:01:39,570 --> 00:01:40,440
has elapsed.

17
00:01:40,470 --> 00:01:41,390
Okay.

18
00:01:41,760 --> 00:01:50,880
So if I say one second for example it will send a specified message to a target object for example to

19
00:01:51,180 --> 00:01:52,330
we have controller.

20
00:01:52,560 --> 00:01:53,430
Okay.

21
00:01:53,520 --> 00:01:59,970
If you hit comment and click over here you can jump to definition or can go to quick help to see the

22
00:01:59,970 --> 00:02:07,680
documentation file and if you click over here to open in documentation developer documentation it displays

23
00:02:07,680 --> 00:02:09,540
a more detailed message to you.

24
00:02:10,260 --> 00:02:17,760
So if you read over here you will see that it runs something called the run the loops and this maintains

25
00:02:17,760 --> 00:02:21,330
strong references to your timer's.

26
00:02:21,330 --> 00:02:22,850
So what does it mean.

27
00:02:23,010 --> 00:02:27,160
And in the below you will see something called threading programming guide.

28
00:02:27,180 --> 00:02:29,910
So it uses some treads.

29
00:02:30,000 --> 00:02:32,260
So what is a threat.

30
00:02:32,280 --> 00:02:36,510
So this kind of a collection that you run your operation on.

31
00:02:37,140 --> 00:02:45,390
So if we are running everything on a single threat if we are doing something that can block the other

32
00:02:45,390 --> 00:02:54,750
operations then the current thread will only work on one operation and we cannot do something else during

33
00:02:54,750 --> 00:02:56,340
that period.

34
00:02:56,370 --> 00:03:06,360
For example if I tried to use some conventional methods other than timer's in order to run a timer that

35
00:03:06,360 --> 00:03:16,860
counts back from 10 to zero for that period of time I cannot do anything yet as I cannot interact with

36
00:03:16,860 --> 00:03:20,810
the user interface I cannot click on anything.

37
00:03:20,910 --> 00:03:29,520
I cannot see what's happening or my user interface in the background maybe it's running from 10 to zero

38
00:03:29,670 --> 00:03:32,160
but I cannot see it.

39
00:03:32,280 --> 00:03:36,330
So let me go and create this design first.

40
00:03:36,330 --> 00:03:44,570
So let me have a label in which I will have a time variable which counts back from 10.

41
00:03:45,090 --> 00:03:49,050
Okay so let me call this time okay.

42
00:03:49,200 --> 00:03:51,510
And this will be counting down from ten.

43
00:03:51,510 --> 00:04:00,460
But let me just for now make it like this and create a button and then make it a little bit bigger.

44
00:04:00,570 --> 00:04:03,480
And this will start our timer.

45
00:04:03,480 --> 00:04:09,580
I don't need anything else to complete this app so I'm going to leave it as it is.

46
00:04:09,690 --> 00:04:17,010
And before we actually find these views into our revealed controller let me reset to suggested constraints

47
00:04:17,400 --> 00:04:22,640
and then open an assistant editor in which I will call have controller that Swift.

48
00:04:22,830 --> 00:04:28,920
And here I will take this time label and define as a variable over here.

49
00:04:28,920 --> 00:04:30,680
I will call this time label.

50
00:04:31,040 --> 00:04:31,840
OK.

51
00:04:31,890 --> 00:04:38,460
And also I can just drag and drop this button and for actually I will say button clicked.

52
00:04:38,460 --> 00:04:39,260
So that's it.

53
00:04:39,270 --> 00:04:40,920
It's going to be very simple.

54
00:04:41,550 --> 00:04:49,710
So let me say a print button clicked under this button clicked function so that's it.

55
00:04:49,710 --> 00:04:51,270
Let me close this down.

56
00:04:51,300 --> 00:04:53,370
We're done designing this app.

57
00:04:53,370 --> 00:04:56,310
Let me go to have controller dot swerved.

58
00:04:56,370 --> 00:05:04,700
I'm I'm going to first count down in a way that you will think that will work.

59
00:05:04,900 --> 00:05:13,510
If you don't know about timer's so first of all let me run the simulator OK and you will see if I click

60
00:05:13,510 --> 00:05:16,630
on this button I see button clicked.

61
00:05:16,630 --> 00:05:24,310
Now if you didn't know about timer's maybe you would think that yeah I can do this in a for loop right.

62
00:05:24,310 --> 00:05:28,630
I can create a for loop that will around 10 times.

63
00:05:28,630 --> 00:05:38,770
So in this for loop if I can make a way to wait for one seconds then it means that I get to run this

64
00:05:38,770 --> 00:05:43,260
loop for 10 times and it will wait one second between each loop.

65
00:05:43,360 --> 00:05:47,920
So I will count back from 10 to 1 or 10 to zero.

66
00:05:48,280 --> 00:05:51,700
And that's a good idea but it's not gonna work.

67
00:05:51,730 --> 00:05:53,110
So let me do it for you.

68
00:05:53,710 --> 00:05:59,640
So I'm going to say 4 and I'm going to come up with a variable name in here.

69
00:05:59,650 --> 00:06:04,980
Like time and I will say in 1 3 that's 2 10.

70
00:06:05,260 --> 00:06:06,940
So we have seen this before right.

71
00:06:06,940 --> 00:06:16,390
So it's going to run this loop 10 times and we're not using time variable in this case but it doesn't

72
00:06:16,390 --> 00:06:17,090
matter.

73
00:06:17,230 --> 00:06:21,820
I'm just going to say time label is something.

74
00:06:22,020 --> 00:06:24,410
OK like ten nine.

75
00:06:24,430 --> 00:06:30,640
And in order to do that of course we we're going to have to come up with a variable because in this

76
00:06:30,640 --> 00:06:33,590
variable I'm going to deduct one.

77
00:06:33,640 --> 00:06:41,500
So if I create a counter variable here I can set it to be 0 or initially 10.

78
00:06:41,500 --> 00:06:46,200
I can deduct one each time this loop runs so in the we did load.

79
00:06:46,210 --> 00:06:55,420
I'm going to say counter is 10 and in the loop in the for loop I'm going to say counter is counter minus

80
00:06:55,420 --> 00:06:55,750
one.

81
00:06:56,380 --> 00:07:02,560
OK so this will deduct one from counter every time these for loop runs.

82
00:07:02,740 --> 00:07:07,910
And it will display this counter in my time labels.

83
00:07:08,170 --> 00:07:14,670
So this may be your initial target if you don't know about timers.

84
00:07:15,190 --> 00:07:22,140
And then later on we're going to have to come up with a way to wait for one seconds.

85
00:07:22,140 --> 00:07:22,930
Okay.

86
00:07:22,960 --> 00:07:31,960
Because if I run these right now I will just see zero because it will count back from 10 to 1 even before

87
00:07:32,410 --> 00:07:33,740
we see the view.

88
00:07:34,060 --> 00:07:36,950
And it will just happen instantaneously.

89
00:07:37,000 --> 00:07:38,500
We won't see it.

90
00:07:39,310 --> 00:07:47,920
So in order to make this work maybe we can come up with sleeping for one seconds and actually there

91
00:07:47,920 --> 00:07:49,300
is a way to do that.

92
00:07:49,320 --> 00:07:50,110
Okay.

93
00:07:50,230 --> 00:08:00,010
If I can come over here in my for loop I can say tread that sleep and again trade is where we run our

94
00:08:00,010 --> 00:08:00,790
operations.

95
00:08:00,820 --> 00:08:10,180
So if I slip for given time interval for example one second it will just block everything for one second

96
00:08:10,600 --> 00:08:14,030
and then continue running this loop past.

97
00:08:14,150 --> 00:08:16,230
But this won't work.

98
00:08:16,510 --> 00:08:23,610
So we're going to wait here for 10 seconds before we see the view and then we're going to see the zero

99
00:08:23,620 --> 00:08:33,060
as you can see because maybe you can think that because you run that in the we did load.

100
00:08:33,070 --> 00:08:36,810
So we did load actually gets called before we see the view.

101
00:08:36,850 --> 00:08:42,850
Maybe you have to run this in we will up here or we'll do that pier.

102
00:08:42,910 --> 00:08:51,910
So let's try to do that for 100 seconds for example and this will make things even worse because we

103
00:08:51,910 --> 00:09:00,550
will not be seeing this time label for like six under you know 1000 seconds so we're going to have to

104
00:09:00,550 --> 00:09:05,890
wait for Ron thousand seconds in order to see the view right now.

105
00:09:05,890 --> 00:09:07,670
So this doesn't work.

106
00:09:07,690 --> 00:09:08,580
OK.

107
00:09:08,890 --> 00:09:17,740
So the next thing is to try the view will appear or with the day pivoting so that we can be sure that

108
00:09:17,750 --> 00:09:25,990
view actually did load and we see the view now it's time to do this operation and in order to do that

109
00:09:26,020 --> 00:09:32,150
I'm going to call the function first in here if you say view you will see the view did they appear right.

110
00:09:32,560 --> 00:09:40,690
So I'm going to take everything in here and cut with command X and then paste under my weave did appear

111
00:09:41,560 --> 00:09:48,610
so I'm certain that this will get run after I see the view itself.

112
00:09:48,610 --> 00:09:50,410
So let's do it this way.

113
00:09:50,440 --> 00:09:52,260
So let's start.

114
00:09:52,420 --> 00:09:58,600
And as you can see we see the time label right now but we cannot see the time and I cannot click on

115
00:09:58,600 --> 00:10:06,520
the button so as I said before it blocks the entire operation so user can not interact with the user

116
00:10:06,520 --> 00:10:07,420
interface.

117
00:10:07,420 --> 00:10:09,950
Within that given period of time.

118
00:10:10,390 --> 00:10:13,510
So for 10 seconds I couldn't do anything.

119
00:10:13,510 --> 00:10:20,550
So we're going to go ahead and do this operation in another treads.

120
00:10:20,620 --> 00:10:27,700
And in order to do that we're going to use timer so timer's traumatically manage that for us.

121
00:10:27,700 --> 00:10:31,230
We can do this operation in the background.

122
00:10:31,480 --> 00:10:35,770
So users can interact with the user interface.

123
00:10:35,770 --> 00:10:45,490
The other operations will continue as it is but also we will do counter minus one in a given period

124
00:10:45,490 --> 00:10:50,100
of time repetitively and it will be perfect.

125
00:10:50,140 --> 00:10:53,170
It will be in a way that we want.

126
00:10:53,170 --> 00:10:56,110
So let me see how timers are created.

127
00:10:56,470 --> 00:11:03,310
So we have defined our timer but we have to make sure that it's fired as well.

128
00:11:03,640 --> 00:11:12,190
So far right now I'm going to say time label that tax is actually time counter and then later on I'm

129
00:11:12,190 --> 00:11:16,590
going to change my time or value in a way that I want.

130
00:11:16,690 --> 00:11:24,250
What do I mean if you come over here with small timer object that you have created you can't say timer

131
00:11:24,490 --> 00:11:26,560
that's scheduled timer.

132
00:11:26,560 --> 00:11:32,080
So this will ask you for a couple of parameters and we want this one.

133
00:11:32,270 --> 00:11:32,910
Okay.

134
00:11:33,010 --> 00:11:44,050
So we want that not this one but this one timing terrible and target and selector user info and repeats.

135
00:11:44,050 --> 00:11:46,540
So we have a lot of parameters here.

136
00:11:46,540 --> 00:11:48,480
Let me explain one by one.

137
00:11:48,520 --> 00:11:54,690
So timing terrible is the really interval that we want this operation to be carried on.

138
00:11:54,700 --> 00:11:56,870
So I want every second.

139
00:11:57,060 --> 00:11:57,870
Okay.

140
00:11:57,910 --> 00:12:00,070
And the target will be south.

141
00:12:00,070 --> 00:12:05,410
One more time because that's where we're going to write this selector function.

142
00:12:05,590 --> 00:12:12,300
So selector function will be called each second every second lowercase or let me write it down.

143
00:12:12,340 --> 00:12:15,110
Object to see func timer function.

144
00:12:15,400 --> 00:12:21,940
And whatever I write here will be executed for every seconds.

145
00:12:21,940 --> 00:12:22,890
OK.

146
00:12:23,140 --> 00:12:26,440
So this will be timer function or you can just write.

147
00:12:26,440 --> 00:12:29,500
We've controller timer function user info.

148
00:12:29,500 --> 00:12:35,260
We don't want to send any user info so I'm going to say nil and does this repeat.

149
00:12:35,320 --> 00:12:39,270
Yes this repeats and we can call it whenever we want.

150
00:12:39,270 --> 00:12:40,120
We can stop it.

151
00:12:40,120 --> 00:12:44,380
We can restart it and this repeats.

152
00:12:44,530 --> 00:12:45,860
So that's it.

153
00:12:45,880 --> 00:12:55,180
We actually finished our timer initialization so under timer function while I want to happen is to just

154
00:12:55,180 --> 00:13:03,090
go over here I say time label that tax is again time and the reverse slash counter.

155
00:13:03,160 --> 00:13:04,260
OK.

156
00:13:04,330 --> 00:13:09,970
And then I want to say counter is counter minus one.

157
00:13:10,180 --> 00:13:14,080
So you can say it this way counter minus equals one.

158
00:13:14,620 --> 00:13:18,280
And then later on do I want to do anything.

159
00:13:18,310 --> 00:13:26,050
Yes I want to check to see if counter is zero and if it's zero I want to stop this timer from going

160
00:13:26,050 --> 00:13:26,970
on right.

161
00:13:27,040 --> 00:13:32,680
So I can say timely will that tax is now time zero or times over.

162
00:13:33,070 --> 00:13:42,360
I can come over here I can say timer dot invalidate in order to stop this timer from going on.

163
00:13:43,900 --> 00:13:45,190
So that's good.

164
00:13:45,700 --> 00:13:52,730
Yeah we're checking to see if timer has reached zero and we're invalidating our timer.

165
00:13:52,960 --> 00:13:55,920
So let's start this and let's see if this works.

166
00:13:56,020 --> 00:14:04,000
As you can see it counts down and we're seeing this and we we can actually click on that button as well.

167
00:14:04,420 --> 00:14:07,540
So it's not blocking the user interface.

168
00:14:07,630 --> 00:14:12,220
It's doing its job in the background just like we want.

169
00:14:12,220 --> 00:14:20,590
So that's how you work with timers and you can do any operation with timers not only create countdown

170
00:14:20,590 --> 00:14:28,750
timers you can do whatever you want inside of this function if you wanted to repetitively for a given

171
00:14:29,020 --> 00:14:31,210
period of time.

172
00:14:31,210 --> 00:14:32,160
So that's it.

173
00:14:32,170 --> 00:14:38,650
We're going to stop here and within the next section we're going to write our first game.
