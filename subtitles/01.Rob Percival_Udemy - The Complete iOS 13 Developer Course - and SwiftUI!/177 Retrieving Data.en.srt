1
00:00:00,810 --> 00:00:01,660
Hi.

2
00:00:01,710 --> 00:00:09,510
Now that we know how to write data to pass server we have to figure out how to read data from the power

3
00:00:09,520 --> 00:00:10,940
server as well.

4
00:00:10,950 --> 00:00:16,260
Now we have only one row here with Apple and one hundred calories.

5
00:00:16,590 --> 00:00:20,470
So I'm going to change this to have two data that please.

6
00:00:20,580 --> 00:00:24,260
I'm going to go for banana and one hundred fifty.

7
00:00:24,750 --> 00:00:33,300
So if we run this one more time then it will upload this data to the PA server so that if we go back

8
00:00:33,300 --> 00:00:35,850
to here and say refresh.

9
00:00:35,850 --> 00:00:40,510
Now we see the banana and 150 calories as well.

10
00:00:40,520 --> 00:00:44,820
Now I have two rows here two data.

11
00:00:44,940 --> 00:00:47,790
Now how can we retrieve that data.

12
00:00:48,330 --> 00:00:55,560
Let me comment this out so that every time we run does it won't get uploaded to the database.

13
00:00:55,560 --> 00:00:56,320
OK.

14
00:00:56,400 --> 00:00:59,680
And we're going to do what we give to you in here.

15
00:00:59,700 --> 00:01:07,110
So first of all in order to retrieve past objects we use something called Pass query.

16
00:01:07,480 --> 00:01:10,860
OK so this is how it looks like.

17
00:01:10,920 --> 00:01:17,100
So we're going to create a Curie here and this will be a P F Curie.

18
00:01:17,100 --> 00:01:24,430
And as you can see this lets us retrieve data as P.F. objects from a class.

19
00:01:24,540 --> 00:01:28,260
If you open parentheses it will ask you for a class name.

20
00:01:28,260 --> 00:01:30,300
And in our case that's fruits.

21
00:01:31,200 --> 00:01:33,540
So this has to be exactly the same.

22
00:01:33,900 --> 00:01:38,670
So we that capitalized f we the uppercase at fruits.

23
00:01:38,790 --> 00:01:44,570
OK then we're going to specify if we want any filter right now.

24
00:01:44,940 --> 00:01:47,280
And I don't need any filter.

25
00:01:47,280 --> 00:01:49,750
I just want to get all data.

26
00:01:49,950 --> 00:01:51,840
In my case OK.

27
00:01:51,900 --> 00:01:58,680
We're going to see how to filter the results later on if we see if we say something like that find.

28
00:01:58,680 --> 00:02:06,180
We will see some kind of similar options that we have seen when we try to save objects.

29
00:02:06,180 --> 00:02:10,100
If we select find objects it will do it sync erroneously.

30
00:02:10,260 --> 00:02:16,720
If we do it in background we get one option with block and one option without block.

31
00:02:16,980 --> 00:02:24,780
And of course if we want something with block because we get to see the results in a P.F. object array

32
00:02:24,840 --> 00:02:29,400
if we do that or we get an error if there is any error.

33
00:02:29,420 --> 00:02:30,330
OK.

34
00:02:30,420 --> 00:02:33,750
And this is where objects in an array.

35
00:02:34,590 --> 00:02:42,060
So we're going to have more than one objects in most of the cases and they will be given to us in an

36
00:02:42,060 --> 00:02:42,840
array.

37
00:02:43,100 --> 00:02:50,970
OK so if we do something like a for loop or any other operation that you might think of we can get these

38
00:02:50,970 --> 00:02:53,190
objects by one by one.

39
00:02:53,280 --> 00:02:53,930
OK.

40
00:02:53,970 --> 00:03:00,270
So I'm going to call these objects and this one error of course I will check to see if error is not

41
00:03:00,270 --> 00:03:07,610
nil and if areas not nil I'm just going to print out the error OK so that we can keep track or else

42
00:03:08,010 --> 00:03:16,020
I will just print out the objects in most of the cases you may want to do a for loop here if you're

43
00:03:16,020 --> 00:03:18,570
going to get something out of that object.

44
00:03:18,570 --> 00:03:25,380
Individual objects but right now I just want to see if we can get these objects.

45
00:03:25,380 --> 00:03:32,370
So let me run this in our simulator and it will get the objects imprinted in my luck.

46
00:03:32,370 --> 00:03:34,100
So let me see.

47
00:03:34,110 --> 00:03:41,970
Here we go we have the first class we have the Epsilon 100 calories and we how the banana with one hundred

48
00:03:41,970 --> 00:03:48,360
and fifty calories off of course we have the additional columns as well like object I.D..

49
00:03:48,880 --> 00:03:49,800
OK.

50
00:03:50,230 --> 00:03:52,290
So that's good.

51
00:03:52,290 --> 00:03:59,460
Now I can use something like for loop to get individual objects but let me show you how to filter the

52
00:03:59,460 --> 00:04:00,110
results.

53
00:04:00,420 --> 00:04:02,010
If you say dots there.

54
00:04:02,580 --> 00:04:11,550
So this will ask you for a key and some condition something like If calories are actually equal to 100

55
00:04:11,580 --> 00:04:19,080
or if calories are less than one 100 or if calories are greater than one hundred or you can go for name

56
00:04:19,320 --> 00:04:25,040
of course like you can just say something like name being equal to Apple.

57
00:04:25,080 --> 00:04:34,670
Now if we run this from scratch now we will see we only get the apple as you can see we don't see banana

58
00:04:34,710 --> 00:04:40,910
because we filter the results so that we only get the name being equal to Apple.

59
00:04:41,010 --> 00:04:48,850
Of course we can do something else like we can do pureed dots of our key OK.

60
00:04:49,110 --> 00:04:58,830
And we can go for calories like calories less than two or calories greater than to something like calories

61
00:04:58,860 --> 00:05:05,280
greater than one hundred and twenty so our calories in Apple is actually one hundred.

62
00:05:05,280 --> 00:05:11,910
So we won't get that result but rather where going to get the banana and it's calories are actually

63
00:05:11,940 --> 00:05:15,150
greater than one hundred and twenty.

64
00:05:15,150 --> 00:05:21,180
So if you need something to filter to results you can actually use this very key.

65
00:05:21,180 --> 00:05:26,040
And it's very similar to what we have done in the fire base as well.

66
00:05:26,280 --> 00:05:33,780
Maybe you remember that we had this very key in the fire base but it's actually very easy to use in

67
00:05:33,780 --> 00:05:42,260
Paris so that you can do your retrieval operations very efficiently using these techniques.

68
00:05:42,270 --> 00:05:50,580
Right now we know how to write and we know how to read data using parts database that's actually all

69
00:05:50,580 --> 00:05:52,720
we need to work with pass.

70
00:05:52,800 --> 00:06:00,030
Of course we are going to learn how to create users how to work with files like images so that we can

71
00:06:00,030 --> 00:06:02,300
upload the images to this database.

72
00:06:02,640 --> 00:06:10,350
And when we deal with authentication we are going to be saving information in this user class and they

73
00:06:10,440 --> 00:06:12,440
all have their own methods.

74
00:06:13,050 --> 00:06:21,390
But before we dive into them I'm going to go over and create start creating my Foursquare clone because

75
00:06:21,570 --> 00:06:27,830
right now our current information is sufficient to learn this along the way.

76
00:06:28,260 --> 00:06:37,020
OK so I'm going to stop here and I will start working on my main story boards and sign in page in order

77
00:06:37,020 --> 00:06:41,910
to understand how to work with authentication in pass.

78
00:06:41,940 --> 00:06:44,630
That's what we're going to do in the next lecture.
