1
00:00:00,610 --> 00:00:10,300
Hi we didn't this lecture we going to see what is trucked is and why do we have to use them in our projects.

2
00:00:10,410 --> 00:00:13,670
And why do we choose them over classes sometime.

3
00:00:14,400 --> 00:00:21,530
So as you can see it's kind of a class it's similar to class but it's very different technically.

4
00:00:21,630 --> 00:00:29,010
So I'm going to tell you all about these differences and I'm going to tell you about the theory of the

5
00:00:29,010 --> 00:00:36,000
strikes first and then later on we're going to see them in practice so that we will have a complete

6
00:00:36,030 --> 00:00:40,020
understanding of strokes versus classes.

7
00:00:40,020 --> 00:00:51,000
OK so strikes and classes are kind of similar but they have dared these advantages and advantages.

8
00:00:51,090 --> 00:00:58,110
First of all the biggest this advantage of the struct is the inheritance.

9
00:00:58,110 --> 00:00:58,820
OK.

10
00:00:58,950 --> 00:01:03,450
So strikes do not have inheritance while classes have.

11
00:01:04,020 --> 00:01:07,170
So remember the intermediate swift section.

12
00:01:07,170 --> 00:01:10,090
We used classes to create models.

13
00:01:10,140 --> 00:01:18,930
We used classes to create a musician model for example and we created a super musician which inherited

14
00:01:19,290 --> 00:01:27,750
the methods and attributes of the musician class and we could have used all these methods and attributes

15
00:01:27,780 --> 00:01:30,190
inside of the super musician as well.

16
00:01:30,210 --> 00:01:33,420
We cannot do that instructs.

17
00:01:33,540 --> 00:01:41,990
So this is one of the biggest differences and I believe this is the only disadvantage of destruct.

18
00:01:42,420 --> 00:01:46,230
In fact Apple suggests to use struct.

19
00:01:46,410 --> 00:01:54,660
Most of the time and if you ever going to work with inheritance if you ever need inheritance then you

20
00:01:54,660 --> 00:01:56,960
just switch to the classes.

21
00:01:57,090 --> 00:02:01,430
So April suggests using strikes over classes.

22
00:02:01,440 --> 00:02:02,090
OK.

23
00:02:02,220 --> 00:02:03,450
Why is that.

24
00:02:03,450 --> 00:02:11,580
Because strikes are actually faster and simpler and the main technical reason for that is they they

25
00:02:11,580 --> 00:02:14,700
run on stacks rather than heap.

26
00:02:15,270 --> 00:02:23,910
So maybe you have heard these terms before their kind of memory management storage management objects

27
00:02:23,910 --> 00:02:27,330
or tools residing inside of RAM.

28
00:02:27,330 --> 00:02:34,350
So if you come over here and just search for heap versus tech GOOG in Google you will have like a millions

29
00:02:34,350 --> 00:02:41,910
of results so you can just go along with any of these results and see for yourself.

30
00:02:41,910 --> 00:02:51,450
So we use tech and heap for memory allocation for memory management and you will see a lot of explanations

31
00:02:51,540 --> 00:03:00,050
in C programming language because this is actually related to programming and computer size.

32
00:03:00,090 --> 00:03:07,800
So when the subject is that basic when the subject is that essential people tend to teach people tend

33
00:03:07,800 --> 00:03:11,640
to explain things in C programming language.

34
00:03:11,640 --> 00:03:19,670
Of course we don't have to understand C in order to understand stack and heap memory allocation.

35
00:03:19,680 --> 00:03:27,690
We have to understand how they work so they actually store some memory for us they actually store some

36
00:03:27,690 --> 00:03:36,240
data they actually store some values for us so that we can go and take that value from RAM and RAM is

37
00:03:36,240 --> 00:03:43,890
used for short term memory as you might know and in our iPhones and in our iPods of course we have RAM

38
00:03:44,190 --> 00:03:54,020
and we use that memory allocation tools so heap works on fearful first in first out principle.

39
00:03:54,030 --> 00:04:04,080
On the other hand stack works on a fellow first in last out principle so whatever first whatever value

40
00:04:04,260 --> 00:04:08,240
stored in stack first it gets out last.

41
00:04:08,250 --> 00:04:12,760
So this gives us faster and simpler operations.

42
00:04:12,770 --> 00:04:13,990
Okay.

43
00:04:14,400 --> 00:04:24,240
And then classes since we use heap we use reference types so when we create an object with our classes

44
00:04:24,630 --> 00:04:32,990
we actually create a reference to that object inside of the heap but instructs b don't create a reference

45
00:04:33,000 --> 00:04:40,800
as we create values we create another object for example when we copy an object inside of a class.

46
00:04:40,800 --> 00:04:47,100
It means that we create another reference when we copy an object inside of a struct.

47
00:04:47,100 --> 00:04:53,160
It means that we're actually copying and creating another object.

48
00:04:53,160 --> 00:04:58,350
So this gives us faster and simpler operations in struct.

49
00:04:58,350 --> 00:05:05,310
Of course you cannot stands right now because you had to see this in practice and you will see in the

50
00:05:05,310 --> 00:05:06,090
next lecture.

51
00:05:06,080 --> 00:05:10,590
Don't forget the last thing you may want to know about struck.

52
00:05:10,590 --> 00:05:17,880
They give us the opportunity to work with true immutability where as in classes we don't have that feature

53
00:05:18,480 --> 00:05:21,690
and we will see that in action as well.

54
00:05:21,690 --> 00:05:29,390
Everything I'm telling you right now will be put in action during this section so that you will understand

55
00:05:29,390 --> 00:05:31,270
it much better.

56
00:05:31,290 --> 00:05:37,470
I'm just trying to compare the class and strike right down so that you would understand.

57
00:05:37,520 --> 00:05:44,030
They're similar but they have some disadvantages and advantages over each other.

58
00:05:44,040 --> 00:05:48,650
The final advantage of the class is that they work with objective c.

59
00:05:48,660 --> 00:05:55,470
While we cannot work with objective c in the struggle but I believe that's not a very big disadvantage

60
00:05:55,470 --> 00:05:57,750
because we generally use Swift.

61
00:05:57,750 --> 00:06:00,010
Right now we know you development.

62
00:06:00,060 --> 00:06:05,060
However I believe only this advantage of district is the inheritance.

63
00:06:05,070 --> 00:06:10,480
Let's see all of this in action so you will understand that in a much better way.
