WEBVTT
1
00:00:00.080 --> 00:00:00.720
Hi.

2
00:00:00.820 --> 00:00:07.710
We didn't this lecture re going to get data from the car data and display them on our review controller

3
00:00:08.250 --> 00:00:09.330
in order to do that.

4
00:00:09.330 --> 00:00:13.050
We're going to take the title and title ideas from this.

5
00:00:13.050 --> 00:00:19.290
I like the title idea variables and actually we're going to use only the selected selected title I.D.

6
00:00:19.320 --> 00:00:23.700
in order to use this as a filter to our results.

7
00:00:24.180 --> 00:00:27.430
So let's quickly create our app delegates.

8
00:00:27.490 --> 00:00:33.630
Okay so this will be a UI application that shared that delegate and I'm going to first cast this as

9
00:00:33.630 --> 00:00:37.070
app delegate and then create the context as well.

10
00:00:37.080 --> 00:00:43.170
So this will be app delegate that to the container that we have contexts.

11
00:00:43.260 --> 00:00:46.790
So again we're going to create the fetch request.

12
00:00:46.800 --> 00:00:47.870
OK.

13
00:00:47.970 --> 00:00:50.920
And this will be in a fetch request.

14
00:00:51.090 --> 00:01:00.330
And if you open parentheses it will ask you for an entity name and our N entity name is places and we

15
00:01:00.330 --> 00:01:04.310
have to provide in this fashion request a result here.

16
00:01:04.320 --> 00:01:12.300
So after dat you can just come over here and say facial quest returns returned objects as false is false

17
00:01:12.780 --> 00:01:17.630
and then we going to provide and predicates here as well.

18
00:01:17.700 --> 00:01:23.330
Remember we can't say a federal class that predicate is an S predicate.

19
00:01:23.540 --> 00:01:31.790
OK and this will ask you for a format and arguments for format regarding to look for I.D..

20
00:01:32.030 --> 00:01:32.450
OK.

21
00:01:32.460 --> 00:01:35.410
I.D. is equal to percent at.

22
00:01:35.550 --> 00:01:42.810
So remember it means that I.D. equals to these arguments and the arguments that are that we're looking

23
00:01:42.810 --> 00:01:44.970
for is the I.D. string.

24
00:01:45.000 --> 00:01:47.550
So let me create this one more time.

25
00:01:47.550 --> 00:01:55.760
So this will gets its value from selected title I.D. that you you I.D. drink pay attention that I'm

26
00:01:56.020 --> 00:01:59.960
first wrapping this so it's not going to be optional.

27
00:01:59.970 --> 00:02:07.370
So I.D. drink and this will only display media results of these I.D..

28
00:02:07.460 --> 00:02:14.860
OK not every record on the card data but only the data that has this I.D..

29
00:02:15.030 --> 00:02:21.510
So this will be much more efficient efficient than getting all of this information and passing them

30
00:02:22.140 --> 00:02:29.970
to here just filtering out to one result rather I'm just getting the latitude longitude and name and

31
00:02:30.000 --> 00:02:33.900
subtitle of the selected item in here.

32
00:02:33.900 --> 00:02:36.230
So let's do your do try catch.

33
00:02:36.510 --> 00:02:39.050
And you know this I'm doing this kind of fast.

34
00:02:39.060 --> 00:02:45.200
So let's results try context about fetch and I'm going to print any error.

35
00:02:45.450 --> 00:02:52.000
So here I'm going to check to see if results that count is actually bigger than zero.

36
00:02:52.020 --> 00:03:00.000
If it is I'm going to go into a for loop and remember I'm going to cast this as an S managed object

37
00:03:00.060 --> 00:03:01.380
array.

38
00:03:01.650 --> 00:03:09.270
So after we do that it means the single result will be an index managed object.

39
00:03:09.270 --> 00:03:10.110
OK.

40
00:03:10.290 --> 00:03:16.800
And we can just call result that value to get what we want from the core data.

41
00:03:17.160 --> 00:03:18.960
So I'm going to start with the title.

42
00:03:18.960 --> 00:03:21.260
So result that value.

43
00:03:21.630 --> 00:03:23.970
And the key will be title as well.

44
00:03:23.970 --> 00:03:30.560
I'm going to try to cast as a string and if it happens I'm going to do something.

45
00:03:30.690 --> 00:03:35.130
I'm going to write it for everything and then we're going to decide how to proceed.

46
00:03:35.130 --> 00:03:40.590
So a subtitle key subtitle as string as usual.

47
00:03:40.590 --> 00:03:44.490
And the next what do we have we have latitude right.

48
00:03:44.520 --> 00:03:50.850
So let's go for latitude result that value key will be latitude as well.

49
00:03:50.850 --> 00:03:54.600
And this time this will be a double rather than a string.

50
00:03:55.530 --> 00:04:03.240
And finally we have the longitude as well if let longitude result that value for key longitude.

51
00:04:03.240 --> 00:04:04.240
Okay.

52
00:04:04.650 --> 00:04:07.590
And longitude as double.

53
00:04:07.590 --> 00:04:10.580
And that's it.

54
00:04:10.590 --> 00:04:12.750
So how do we proceed.

55
00:04:12.750 --> 00:04:16.470
We have a title subtitle latitude and longitude.

56
00:04:17.310 --> 00:04:22.150
And we have the same things in here as well be pay.

57
00:04:22.150 --> 00:04:24.450
Pay attention to the attribute names.

58
00:04:24.450 --> 00:04:27.990
They have to be exactly the same or else it won't work.

59
00:04:28.020 --> 00:04:32.280
So titles subtitle latitude and longitude.

60
00:04:32.370 --> 00:04:38.970
So next what I'm going to do with those I'm going to create a variable set.

61
00:04:38.970 --> 00:04:46.620
OK I'm going to create variables for chosen title subtitle latitude and longitude and assign those values

62
00:04:46.620 --> 00:04:49.020
to those variables because we can.

63
00:04:49.040 --> 00:04:54.810
We may want to reach that variables later on in another function.

64
00:04:54.810 --> 00:04:55.700
Right.

65
00:04:55.770 --> 00:05:00.750
So let's call this annotation title and notation subtitle.

66
00:05:00.750 --> 00:05:01.480
OK.

67
00:05:01.560 --> 00:05:03.520
This will be empty as well.

68
00:05:03.570 --> 00:05:06.760
So annotation latitude.

69
00:05:06.890 --> 00:05:12.530
Okay so this will be a double annotation longitude.

70
00:05:12.750 --> 00:05:15.850
So I notation longitude.

71
00:05:16.140 --> 00:05:24.480
So by doing this I can't come down right here and make this title equal to a title for example and then

72
00:05:24.690 --> 00:05:28.410
go on and use our notation title in another function.

73
00:05:28.560 --> 00:05:36.150
So you can say on notation title is now title so I can come over here and say notation subtitle is now

74
00:05:36.150 --> 00:05:37.260
subtitle.

75
00:05:37.260 --> 00:05:38.210
OK.

76
00:05:38.460 --> 00:05:45.120
And in here and notation latitude is now latitude.

77
00:05:45.130 --> 00:05:50.770
And again a notation longitude is the long etude.

78
00:05:52.500 --> 00:05:56.620
And if you think about this this will work OK.

79
00:05:56.670 --> 00:06:05.190
But I really want to control all of these things together and add my annotation afterwards.

80
00:06:05.250 --> 00:06:11.280
So I want to say if this title works out then do the subtitle.

81
00:06:11.790 --> 00:06:14.570
So this is kind of a nested if control.

82
00:06:14.620 --> 00:06:19.700
Okay I'm checking to see if title works out fine.

83
00:06:19.710 --> 00:06:25.090
Then I'm going to control for subtitle and if this works out mine too.

84
00:06:25.090 --> 00:06:33.970
I'm just going to go ahead and look for latitude so I'm going to pace this over and over so that I will

85
00:06:33.970 --> 00:06:37.160
have a nested if statements.

86
00:06:37.300 --> 00:06:46.480
So kind of this if this works out well I'm going to do the control for longitude so why I'm doing this.

87
00:06:46.720 --> 00:06:55.990
I'm doing this because I want to add my notation if if and only if the title subtitle and latitude and

88
00:06:55.990 --> 00:06:57.900
longitude works out.

89
00:06:57.910 --> 00:07:05.840
If any of this fails it means that there is something wrong and I don't want to add that on notation.

90
00:07:05.860 --> 00:07:10.810
Maybe I can display a message to user something wrong or error or something.

91
00:07:10.900 --> 00:07:19.990
Okay so I'm checking to see if title is okay and then if site's subtitle is okay and if done latitude

92
00:07:19.990 --> 00:07:20.780
is okay.

93
00:07:20.920 --> 00:07:26.150
And for the final one I'm checking to see if let's longitude is okay.

94
00:07:26.320 --> 00:07:35.050
If all of these conditions hold then I'm going to add my invitation to my map.

95
00:07:35.050 --> 00:07:40.990
So here on the last if lat section I can create my own notation.

96
00:07:40.990 --> 00:07:46.880
I can just go ahead and say that letter notation is a M.K. pointer notation.

97
00:07:46.920 --> 00:07:48.180
Okay.

98
00:07:48.400 --> 00:07:55.810
And here I can just give the coordinates of the annotation title of the annotation because I already

99
00:07:55.810 --> 00:07:58.730
have all of these variables defined in here.

100
00:07:58.750 --> 00:08:04.000
For example I can just come out where I say a notation that title notation title.

101
00:08:04.070 --> 00:08:05.860
Okay here you go.

102
00:08:05.860 --> 00:08:14.410
This one a notation that subtitle for example annotations subtitle because I have already defined this

103
00:08:15.190 --> 00:08:18.730
and of course we can give some credence as well.

104
00:08:18.730 --> 00:08:21.720
In order to do that let me create a coordinate first.

105
00:08:21.730 --> 00:08:28.420
I have my latitude and longitude but I don't have an easier location coordinate to the yet.

106
00:08:28.420 --> 00:08:33.550
So let's open this and say latitude will be annotation latitude.

107
00:08:33.580 --> 00:08:34.530
Right.

108
00:08:34.540 --> 00:08:43.140
This one annotation latitude not longitude and the long etude will be a notation longitude.

109
00:08:43.150 --> 00:08:48.800
After you do that you can easily come over here and just say a notation that card.

110
00:08:48.800 --> 00:08:54.110
That is the card that we have just defined.

111
00:08:54.310 --> 00:09:03.300
And finally I can call my map to add this notation on my map so let's call map view that add on notation.

112
00:09:03.370 --> 00:09:08.560
Okay add our notation and give the notation here.

113
00:09:08.950 --> 00:09:10.060
So here you go.

114
00:09:10.060 --> 00:09:16.330
Now we managed to get the information from core data and create an annotation out of it.

115
00:09:16.330 --> 00:09:21.780
So let me just make name tax that tax equal to annotation title.

116
00:09:22.030 --> 00:09:23.160
Okay.

117
00:09:23.200 --> 00:09:23.860
This one.

118
00:09:24.070 --> 00:09:26.430
So what are we looking for.

119
00:09:26.440 --> 00:09:28.290
We're looking for name tags.

120
00:09:28.320 --> 00:09:28.680
Yeah.

121
00:09:28.710 --> 00:09:36.800
Name texts so I'm doing the writing name tags that tax on notation title and the other one should be.

122
00:09:36.800 --> 00:09:43.810
Comment text that text OK comment text that taxes on notation subtitle.

123
00:09:43.840 --> 00:09:49.870
So I believe now we are ready to test this and we're getting some Veer there is here.

124
00:09:49.870 --> 00:09:53.510
If I do command B it will go away I believe.

125
00:09:53.510 --> 00:09:57.010
Yeah let's do it and let's see if we have any errors.

126
00:09:57.010 --> 00:09:57.710
No.

127
00:09:57.730 --> 00:09:58.300
Yeah.

128
00:09:58.690 --> 00:10:02.230
So we are ready to go ahead and test what we got here.

129
00:10:02.230 --> 00:10:08.930
So let me run this in our simulator and let's see when I choose one of the records from here like a

130
00:10:08.960 --> 00:10:10.360
full tower.

131
00:10:10.360 --> 00:10:11.140
Here you go.

132
00:10:11.140 --> 00:10:16.960
Here is the notation that we are looking for we see the title we see the subtitle.

133
00:10:16.960 --> 00:10:19.530
Let's go for Arch triumph.

134
00:10:19.540 --> 00:10:24.070
Here you go we have the other annotation as well.

135
00:10:24.120 --> 00:10:30.910
There is a problem here of course weird if we click on this I will zoom in the current location that

136
00:10:30.910 --> 00:10:39.550
we are and the reason that we're seeing the Eiffel Tower and arch the time it's in the scope of where

137
00:10:39.550 --> 00:10:40.820
we are right now wi fi.

138
00:10:40.830 --> 00:10:42.850
Change the current location right now.

139
00:10:42.850 --> 00:10:49.920
It won't work because I haven't done anything to focus on the Eiffel Tower yet.

140
00:10:50.080 --> 00:10:56.980
I have just added my own notation so we're going to take care of this problem in the next lecture.

141
00:10:56.980 --> 00:11:00.490
So we're going to stop here and continue building this map.

142
00:11:00.490 --> 00:11:02.620
We want the next lecture.
