WEBVTT
1
00:00:01.140 --> 00:00:10.200
Hi within this lecture we are going to create our request to get a hold on our machine learning model.

2
00:00:10.200 --> 00:00:12.780
Remember we have two steps.

3
00:00:12.780 --> 00:00:14.880
First we have to create the request.

4
00:00:14.880 --> 00:00:19.640
Second we have to create the handler to handle this request.

5
00:00:19.710 --> 00:00:23.840
So we're going to do the first step in this lecture.

6
00:00:24.030 --> 00:00:30.180
And remember we can get this from the documentation but I'm going to simplify the code so that you can

7
00:00:30.180 --> 00:00:32.160
understand it better.

8
00:00:32.220 --> 00:00:38.560
So we're going to work with something called we and core a mild model.

9
00:00:38.640 --> 00:00:39.090
Okay.

10
00:00:39.420 --> 00:00:44.550
So as you can see this is a core amount model used with region requests.

11
00:00:44.550 --> 00:00:47.760
So this is vision requests courier male model.

12
00:00:47.760 --> 00:00:55.710
And if you open parentheses it will ask you for a model and it throws some errors.

13
00:00:55.710 --> 00:01:02.190
So for model we already have our model integrated in our projects right.

14
00:01:02.190 --> 00:01:07.560
So if you say something like If let model try OK we're going to try.

15
00:01:07.560 --> 00:01:14.360
Because it throws an error and in here let me open and close parentheses.

16
00:01:14.670 --> 00:01:16.310
And rather than a male model.

17
00:01:16.320 --> 00:01:18.540
So this phone worked just delete this.

18
00:01:18.630 --> 00:01:19.410
OK.

19
00:01:19.440 --> 00:01:24.240
Rather than a male model we are going to give our mobile not v models.

20
00:01:24.930 --> 00:01:30.640
So we already have our model in here so you can just write mobile Net V2.

21
00:01:30.750 --> 00:01:31.560
OK.

22
00:01:31.590 --> 00:01:40.740
If it doesn't auto complete you can just write whatever you see in your model name and you have to convert

23
00:01:40.800 --> 00:01:50.270
this to a model object like you can just say mobile Net V to open parentheses and that model.

24
00:01:50.280 --> 00:01:57.730
So this is how you actually define your model as a variable inside your project.

25
00:01:58.170 --> 00:02:02.730
So if you make this optional I believe the error will go away.

26
00:02:02.880 --> 00:02:03.330
Yep.

27
00:02:03.330 --> 00:02:05.160
Now this is good.

28
00:02:05.160 --> 00:02:11.200
Now this means that we get to create our model inside of a variable.

29
00:02:11.220 --> 00:02:15.680
Now I can actually use this model in my coat.

30
00:02:16.260 --> 00:02:21.860
The next step would be for me to create the request variable itself.

31
00:02:22.650 --> 00:02:25.370
So if you say Let's request.

32
00:02:25.590 --> 00:02:26.430
OK.

33
00:02:26.700 --> 00:02:30.870
And this is going to be a V and Cora AML request.

34
00:02:30.960 --> 00:02:32.520
So this one.

35
00:02:32.640 --> 00:02:35.340
So that's what we have been looking for right.

36
00:02:35.370 --> 00:02:37.700
The first step creating the request.

37
00:02:37.710 --> 00:02:43.230
And this will give us the completion handler in return of old models.

38
00:02:43.260 --> 00:02:49.050
So we already have our models so that we can use in this request function.

39
00:02:49.530 --> 00:02:50.450
OK.

40
00:02:50.460 --> 00:02:53.850
And this will give us a completion handler.

41
00:02:53.850 --> 00:02:55.950
Remember this is a closure.

42
00:02:56.040 --> 00:03:04.080
And in this closure we get two outputs like Vienna requests and the air and the actual request that

43
00:03:04.080 --> 00:03:06.750
we have been looking for is this one.

44
00:03:06.750 --> 00:03:11.310
So we are going to use this Vienna request if there is no error.

45
00:03:11.790 --> 00:03:16.710
So I'm going to call this Vienna request and I'm going to call this error.

46
00:03:16.800 --> 00:03:27.090
Now I'm going to use this Vienna request as I said and I have to understand what it does.

47
00:03:27.090 --> 00:03:34.320
So if you come over your documentation you can try to see what you can do with this Vienna request.

48
00:03:34.410 --> 00:03:38.940
But again this is kind of complicated in this documentation.

49
00:03:38.940 --> 00:03:41.370
So let me see how this works.

50
00:03:41.490 --> 00:03:47.280
If you say Vienna request in here OK you can see the type.

51
00:03:47.280 --> 00:03:49.550
This is a Vienna request indeed.

52
00:03:49.610 --> 00:03:51.990
And if you say that results.

53
00:03:51.990 --> 00:03:52.350
OK.

54
00:03:52.350 --> 00:03:54.640
So we're looking for results.

55
00:03:54.870 --> 00:03:58.740
It will give you an any any area.

56
00:03:58.800 --> 00:03:59.520
OK.

57
00:03:59.670 --> 00:04:02.890
So not dictionary it's just gives you an array.

58
00:04:02.940 --> 00:04:09.720
So this is actually an array of the observations array of the assumptions that that you are going to

59
00:04:09.720 --> 00:04:12.410
get out of this model.

60
00:04:12.450 --> 00:04:22.200
So this is given as an any array and we are going to have to convert this any array into something that

61
00:04:22.200 --> 00:04:31.650
is compatible with the core core amount models so that we can get the observations we can get the confidence

62
00:04:31.650 --> 00:04:38.110
level for example and by confidence level I mean the probability like 60 percent.

63
00:04:38.220 --> 00:04:40.770
This is my key in 90 percent.

64
00:04:40.770 --> 00:04:43.560
This is another animal I don't know.

65
00:04:44.070 --> 00:04:50.460
So let me show you how this works you're going to have to create these results in a variable and you

66
00:04:50.460 --> 00:05:03.260
can just say Vienna requests that results and cast is optionally OK as a V and classification observation.

67
00:05:03.260 --> 00:05:11.840
So this is this is produced by the image analysis so regarding the result of the image analysis from

68
00:05:11.840 --> 00:05:14.660
the model at this point.

69
00:05:14.660 --> 00:05:15.650
So that's it.

70
00:05:15.650 --> 00:05:18.490
That's what we have been looking for.

71
00:05:18.530 --> 00:05:24.100
Now we're going to process this results so that we can show them to the user.

72
00:05:25.070 --> 00:05:28.780
So there will be more than one observations in this area.

73
00:05:29.510 --> 00:05:34.380
And I'm going to try to get the first result the top result.

74
00:05:34.430 --> 00:05:35.690
OK.

75
00:05:35.690 --> 00:05:40.760
And in order to do that I'm going to say something like let top results.

76
00:05:40.790 --> 00:05:45.500
And this is going to be derived from results that first.

77
00:05:46.340 --> 00:05:55.160
And the reason that I'm doing this actually is to get the most probable observation and in fact before

78
00:05:55.160 --> 00:06:01.850
we do that let me check to see if results that count is actually greater than zero.

79
00:06:02.210 --> 00:06:08.750
So if I have any observation that I want to get the first one because this is going to be the most probable

80
00:06:08.750 --> 00:06:09.200
one.

81
00:06:09.260 --> 00:06:17.210
For example if I show a monkey picture I can get the monkey as a first result but elephant as a second

82
00:06:17.210 --> 00:06:18.030
result.

83
00:06:18.050 --> 00:06:18.650
OK.

84
00:06:18.680 --> 00:06:22.800
And I want to get the most probable want to show them to the user.

85
00:06:22.820 --> 00:06:29.720
Of course you can try to find the other results by adding yet for looping here but it won't make sense.

86
00:06:29.750 --> 00:06:36.650
So I believe the best course of action here is to get the first result the most probable result out

87
00:06:36.650 --> 00:06:42.030
of that observations and show it to the user.

88
00:06:42.140 --> 00:06:51.720
And this is going to be the result that we want to process and then add to our result labeled in fact.

89
00:06:51.800 --> 00:06:57.730
So this is kind of the end of our request but not completely.

90
00:06:57.800 --> 00:07:04.340
After we complete our request of course are we going to go into the handler and in the Zoo Quest.

91
00:07:04.370 --> 00:07:10.960
I'm going to use dispatch Q that main that I think one more time as we did before because we're going

92
00:07:11.090 --> 00:07:19.160
to do this asynchronously every going to change the main user interface in here like we're going to

93
00:07:19.160 --> 00:07:27.310
change the labels and we're doing this all in background so that we won't be blocking the user interface.

94
00:07:27.380 --> 00:07:29.900
So we have done this before right.

95
00:07:29.930 --> 00:07:40.320
You can come over here and say something like SRK result labeled up text is top results dot identifier.

96
00:07:40.460 --> 00:07:47.840
So this will be worked in sync erroneously and it won't block the user interface and it will show the

97
00:07:47.840 --> 00:07:53.700
user the top result identify your meaning the top result text.

98
00:07:54.290 --> 00:08:01.220
But I don't want to show only the identifier but I'm going I'm going to get the confidence level or

99
00:08:01.220 --> 00:08:03.500
confidence index as well.

100
00:08:03.590 --> 00:08:06.500
So confidence level again the probability.

101
00:08:06.500 --> 00:08:10.430
So this is something like 60 percent 80 percent.

102
00:08:10.430 --> 00:08:15.590
And if you say the top result that confidence this gives you the confidence level.

103
00:08:15.620 --> 00:08:21.170
But unfortunately we get this in and number between 0 and 1.

104
00:08:21.500 --> 00:08:28.510
So we have to just convert this to be an integer and or another new teacher actually.

105
00:08:28.520 --> 00:08:38.060
But we can actually multiply this by 100 in order to have a meaningful value something like 21 percent

106
00:08:38.300 --> 00:08:41.180
rather than all point 0 to 1.

107
00:08:42.200 --> 00:08:50.060
So if you do it like this then you're going to get your confidence level and then I believe we have

108
00:08:50.060 --> 00:08:58.400
to provide this some default value because this is kind of optional and the app let me do that.

109
00:08:58.400 --> 00:09:00.620
Let me just put two questions Mark.

110
00:09:00.770 --> 00:09:09.920
And if this is nil or if this is empty I'm going to show at zero a confidence level to the user and

111
00:09:09.920 --> 00:09:11.910
there will be more than one decimal.

112
00:09:11.920 --> 00:09:14.810
So I believe we have to round this up.

113
00:09:15.060 --> 00:09:19.390
But yep you won't understand why I am doing this right now.

114
00:09:19.390 --> 00:09:26.720
So let me just use this confidence level so that you will understand it better later on when we do that.

115
00:09:27.260 --> 00:09:36.260
So rather than just showing the identifier I'm going to say something like this is 90 percent Mikey.

116
00:09:36.290 --> 00:09:40.340
So let's see the confidence level in here.

117
00:09:40.340 --> 00:09:40.740
OK.

118
00:09:40.740 --> 00:09:42.100
Percent.

119
00:09:42.470 --> 00:09:47.330
And it is something like monkey so 90 percent it is monkey.

120
00:09:47.350 --> 00:09:49.040
So all you have to say.

121
00:09:49.040 --> 00:09:50.990
Confidence level percent.

122
00:09:50.990 --> 00:09:54.690
It is top result that identifier.

123
00:09:54.710 --> 00:09:55.930
OK.

124
00:09:56.030 --> 00:09:57.780
And let's see.

125
00:09:57.790 --> 00:09:58.310
Yeah.

126
00:09:58.460 --> 00:10:05.280
I misspelled com level so this is not count but rather this is confidence level.

127
00:10:06.130 --> 00:10:07.160
So here you go.

128
00:10:07.180 --> 00:10:14.740
That's actually going to get these results and going to display the result to the user.

129
00:10:14.740 --> 00:10:20.670
And in order to make this work as you can see we get this error in here saying that you have you created

130
00:10:20.680 --> 00:10:27.750
these requests but you have never used that and it's correct because I don't have my handler yet.

131
00:10:27.850 --> 00:10:36.510
So the next step would be to go to the second step and create the handler to fire up these requests.

132
00:10:36.520 --> 00:10:39.880
That's what we going to do within the next lecture.
