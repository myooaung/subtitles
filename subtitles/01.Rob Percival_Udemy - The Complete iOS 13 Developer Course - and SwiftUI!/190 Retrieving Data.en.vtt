WEBVTT
1
00:00:00.600 --> 00:00:01.290
Hi.

2
00:00:01.470 --> 00:00:07.170
We didn't this lecture we going to download the data from the Passover show that we can show them to

3
00:00:07.170 --> 00:00:10.260
the user in other places we've controller.

4
00:00:10.470 --> 00:00:16.950
And remember in places we have controller we only have one table view so we don't have to get every

5
00:00:16.950 --> 00:00:19.950
data from PA server at this point.

6
00:00:20.010 --> 00:00:24.630
We don't have to get the image we don't have to get the latitude longitude.

7
00:00:24.630 --> 00:00:29.200
We just have to get the names so that we can display the names.

8
00:00:29.520 --> 00:00:33.840
And in addition to name I'm going to get the object idea as well.

9
00:00:33.840 --> 00:00:41.040
So when a user taps one off the table view items I'm going to pass this object I.D. information to the

10
00:00:41.040 --> 00:00:48.290
details view controller and in details we controller I'm gonna get everything related to one single

11
00:00:48.300 --> 00:00:52.380
object I.D. so that it will be efficient for me.

12
00:00:52.380 --> 00:00:57.120
I'm just going to download image for example for only one item at one time.

13
00:00:57.990 --> 00:01:03.530
So let's do the table we'll set up as you might remember we're going to have to add this table we've

14
00:01:03.540 --> 00:01:10.590
delegate and table wheel data source to our places we see and we have to say table we've got delegate

15
00:01:10.600 --> 00:01:15.280
itself and table we've got data source itself.

16
00:01:15.540 --> 00:01:22.570
So remember we have two more functions to call here and set our table you up.

17
00:01:22.590 --> 00:01:30.810
So let me just write our arrays first because we're going to have to use those areas in our functions

18
00:01:30.810 --> 00:01:31.550
as well.

19
00:01:31.560 --> 00:01:34.230
So first of which will be placed they.

20
00:01:34.260 --> 00:01:36.460
This will be a string Gary.

21
00:01:36.480 --> 00:01:39.000
And again the place idea array.

22
00:01:39.030 --> 00:01:47.490
This will be a string Gary as well as you can see this place I.D. our store their strings so later on

23
00:01:47.910 --> 00:01:56.310
I can come over here to call my table to functions and first of them is SRO at index path.

24
00:01:56.640 --> 00:02:02.610
So this one and we're gonna have to call number of rows in section as well.

25
00:02:03.600 --> 00:02:09.890
So we're going to see return the place name array that count in here.

26
00:02:09.900 --> 00:02:10.800
OK.

27
00:02:10.830 --> 00:02:13.640
And we're going to create a new cell.

28
00:02:13.650 --> 00:02:20.670
This is going to be a UI table we use so we don't need any fancy cell here because we going to just

29
00:02:20.670 --> 00:02:27.240
display the place name so you can just come over here as a place name array index path.

30
00:02:27.240 --> 00:02:28.500
That's row.

31
00:02:28.740 --> 00:02:30.810
And we're gonna have to return to cell.

32
00:02:31.500 --> 00:02:32.610
So that's good.

33
00:02:33.330 --> 00:02:38.850
I'm doing this very fast because we have done this like a million times by now.

34
00:02:38.850 --> 00:02:42.600
So let me do a command B and see if everything's OK.

35
00:02:42.810 --> 00:02:42.980
Yeah.

36
00:02:42.990 --> 00:02:45.240
Everything seems to be OK now.

37
00:02:45.360 --> 00:02:48.250
Let's get this data from our server.

38
00:02:48.360 --> 00:02:54.660
I'm going to do that under another function because it will be some kind of long function.

39
00:02:54.690 --> 00:02:55.580
OK.

40
00:02:55.680 --> 00:03:02.040
I don't want to write everything down there with that load but don't forget to call get data from parts

41
00:03:02.150 --> 00:03:03.660
under the load.

42
00:03:03.840 --> 00:03:05.820
So let's see if pass is important.

43
00:03:05.820 --> 00:03:06.180
Yeah.

44
00:03:06.600 --> 00:03:11.360
So we're creating the P.F. query and this will ask us for a class name.

45
00:03:12.030 --> 00:03:13.740
So what is our class name.

46
00:03:13.740 --> 00:03:16.610
It's places with all uppercase P.

47
00:03:17.340 --> 00:03:23.590
So later on I'm going to say Curry dots find objects in background.

48
00:03:24.060 --> 00:03:27.780
So this will give me some objects and errors.

49
00:03:27.780 --> 00:03:28.700
Right.

50
00:03:28.770 --> 00:03:31.200
So remember the objects and the errors.

51
00:03:31.200 --> 00:03:37.230
And I'm going to check to see if areas not nil if error is not till I'm going to display an alert message

52
00:03:37.500 --> 00:03:41.040
but if error is nil I'm going to do what I have to do.

53
00:03:41.070 --> 00:03:49.350
So let me cut this error message actually so that I can create my make Ellard function under here as

54
00:03:49.350 --> 00:03:50.260
well.

55
00:03:50.370 --> 00:03:56.070
So this will be make Elliot and E. we're going to ask for title input.

56
00:03:56.130 --> 00:03:56.500
OK.

57
00:03:56.520 --> 00:04:01.780
This will be strings and we're going to ask for message input as well.

58
00:04:01.800 --> 00:04:04.410
This will be again as strange.

59
00:04:04.560 --> 00:04:08.940
So rather than saying error I'm going to say title input rather than saying.

60
00:04:08.940 --> 00:04:12.450
Message I'm going to say message input.

61
00:04:12.450 --> 00:04:16.350
So let's call this function over here first.

62
00:04:16.890 --> 00:04:22.770
So if error is not nil I'm going to make Elliot and I'm going to call this error and the message will

63
00:04:22.770 --> 00:04:30.150
be aired that localized description and I will provide the default value if this if this is empty or

64
00:04:30.150 --> 00:04:31.130
something.

65
00:04:31.140 --> 00:04:37.260
And in here I'm going to call s stop make Elliot one more time and I'm going to get this from error

66
00:04:37.260 --> 00:04:43.080
localized description and I will provide a default option as well.

67
00:04:43.080 --> 00:04:50.840
And we have to say s dot make it under here as well and else if everything works out fine.

68
00:04:50.870 --> 00:04:52.170
What do we do.

69
00:04:52.260 --> 00:04:56.970
We have to get individual objects and get their values right.

70
00:04:56.970 --> 00:05:04.570
So we're going to do this under a for loop so if you say for object in objects it may give you an error

71
00:05:04.600 --> 00:05:08.620
because this objects is actually optional as you might remember.

72
00:05:08.620 --> 00:05:12.120
This gives us an optional P.F. object array.

73
00:05:12.820 --> 00:05:21.910
So we have to force cost is actually but before we do that I suggest we check to see if objects is nil

74
00:05:22.210 --> 00:05:23.290
or not.

75
00:05:23.440 --> 00:05:29.800
Even though we know that there is not any error at this point I believe it's safer to check if objects

76
00:05:29.800 --> 00:05:30.350
is nil.

77
00:05:31.030 --> 00:05:31.840
OK.

78
00:05:31.870 --> 00:05:42.250
So once we do that we can call for objecting objects and first cast this so for object in objects and

79
00:05:42.280 --> 00:05:43.840
puts exclamation point.

80
00:05:43.840 --> 00:05:45.460
And here you go.

81
00:05:45.500 --> 00:05:52.540
Now I can get every single object out of that objects array so if I say object.

82
00:05:52.600 --> 00:05:53.010
OK.

83
00:05:53.020 --> 00:06:03.790
This one P.F. object and if I say dot I can get devalued giving Keys at this point so I can't reach

84
00:06:03.790 --> 00:06:10.750
the P.F. object methods and functions because I have reached the individual object.

85
00:06:10.750 --> 00:06:19.090
For example if you say object for key if you give any key here like name latitude longitude you can

86
00:06:19.090 --> 00:06:25.270
get the name you can get the latitude you can get the longitude all they have to do is just give the

87
00:06:25.270 --> 00:06:28.150
key and our key in this case is name.

88
00:06:28.150 --> 00:06:32.050
So let me just write it one more time and you will see.

89
00:06:32.050 --> 00:06:37.920
This will give me and any type so I'm gonna have to cast is as string.

90
00:06:39.250 --> 00:06:44.050
And in order to make this work of course I'm going to use an if let's and I'm good I'm going to call

91
00:06:44.050 --> 00:06:52.240
does a flat place name and if this works I'm going to actually check for a place I.D. as well.

92
00:06:52.240 --> 00:07:00.370
And if you say object dot you will see that object I.D. actually comes with n and other methods.

93
00:07:00.700 --> 00:07:08.170
So you don't have to give the key naming here you can just write object that object I.D. to get unique

94
00:07:08.170 --> 00:07:10.590
idea of that object.

95
00:07:10.690 --> 00:07:15.340
So this will give us the same idea that we are seeing in here.

96
00:07:15.340 --> 00:07:18.990
So let's see objects that object I.D..

97
00:07:19.360 --> 00:07:22.480
Let's try to cast as a string as well.

98
00:07:22.480 --> 00:07:28.910
And if that's the case then I'm going to add this to place name array first place name Mary.

99
00:07:28.910 --> 00:07:32.560
That's a pencil and I'm going to add the place name right.

100
00:07:32.590 --> 00:07:41.320
And then later on I'm going to add this to my place idea array and this will be place I.D. so that I

101
00:07:41.320 --> 00:07:48.550
will have the place name and the place I.D. of created places and then later on we're going to have

102
00:07:48.550 --> 00:07:57.310
to call soft table table we've got three log data after the for loop and remember before the for loop

103
00:07:57.610 --> 00:08:06.670
we have to actually make sure that our arrays are cleared so we're going to say remove all keeping capacity

104
00:08:06.700 --> 00:08:12.780
falls place idea or a removal keeping capacity false.

105
00:08:13.000 --> 00:08:18.100
So yep we cleared out the arrays in order to prevent duplication of the values.

106
00:08:18.100 --> 00:08:21.370
Now we get the values we reload the data.

107
00:08:21.370 --> 00:08:24.640
Now we are doing everything so let's see.

108
00:08:24.640 --> 00:08:25.630
Here you go.

109
00:08:25.630 --> 00:08:31.480
We got our data in Table view so now we only have one data.

110
00:08:31.510 --> 00:08:35.590
But of course later on we're going to add another places and test this as well.

111
00:08:36.050 --> 00:08:41.960
But now we can get this data and show it to the user in places where you controller.

112
00:08:41.980 --> 00:08:48.610
Now all we have to do is just find a way and the user taps on this we can open the details we have controller

113
00:08:48.610 --> 00:08:55.720
and we're going to show the other details of that chosen place to the user getting the pass data from

114
00:08:55.720 --> 00:08:56.840
the power server.

115
00:08:57.040 --> 00:08:59.140
Let's do that in the following lecture.
