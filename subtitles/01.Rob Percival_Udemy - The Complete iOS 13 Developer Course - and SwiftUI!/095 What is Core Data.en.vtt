WEBVTT
1
00:00:00.550 --> 00:00:01.140
Hi.

2
00:00:01.260 --> 00:00:07.470
We didn't this lecture we going to go ahead and create our project in order to start building our art

3
00:00:07.470 --> 00:00:08.760
book.

4
00:00:08.760 --> 00:00:12.450
So within this project we are going to utilize car data.

5
00:00:12.780 --> 00:00:18.210
So this lets us save our information into a local database.

6
00:00:18.390 --> 00:00:20.490
And let me show you how it's done.

7
00:00:20.520 --> 00:00:26.570
So when you choose single view app make sure that you choose just use card data checkbox.

8
00:00:26.580 --> 00:00:33.810
So far we haven't been checking this up but in this lecture in this app we're going to need core data

9
00:00:33.810 --> 00:00:41.280
so make sure this is checked and for project name I'm going to go for art book project and you can choose

10
00:00:41.280 --> 00:00:43.920
whatever you want in this app.

11
00:00:43.980 --> 00:00:50.520
We're going to save the arts that our user has seen when she or he goes to a museum.

12
00:00:50.580 --> 00:00:57.600
But of course we can use this for any reason any purpose that we want.

13
00:00:57.600 --> 00:01:03.050
So make sure you create your app and save the folders and then we're good to go.

14
00:01:03.060 --> 00:01:06.750
So let me try to make this into a full screen.

15
00:01:06.960 --> 00:01:12.010
So when you first opened this app you will notice some differences.

16
00:01:12.090 --> 00:01:20.100
Her examples regarding to how a different name different kind of file that we haven't had before in

17
00:01:20.340 --> 00:01:29.210
our X code projects and this will let us configure the core data set up so that we can start saving

18
00:01:29.210 --> 00:01:33.410
data retrieving data in the way that we want.

19
00:01:33.470 --> 00:01:37.010
And remember this data is saved in the local database.

20
00:01:37.040 --> 00:01:43.210
So this I.D. information is actually saved into the iPhone storage.

21
00:01:43.400 --> 00:01:50.120
So whenever a user opens and closes the app or just opens and closes the phone it doesn't matter we

22
00:01:50.120 --> 00:01:54.020
can reach those information from the storage itself.

23
00:01:54.350 --> 00:01:59.690
OK so let me show you two different files in here.

24
00:01:59.680 --> 00:02:05.200
First we have this art book our data model in here.

25
00:02:05.210 --> 00:02:14.510
OK so if you click on those it will open a page like that and you will see some entities and attributes.

26
00:02:14.570 --> 00:02:17.020
And we're going to go to that later.

27
00:02:17.030 --> 00:02:19.090
So let me show you the app delegates.

28
00:02:19.100 --> 00:02:22.540
So this is again a little bit different than before.

29
00:02:22.550 --> 00:02:25.820
First of all it imported the core data framework.

30
00:02:25.820 --> 00:02:33.680
And in here we see two functions in which we can save the data to the core data database and we can

31
00:02:33.680 --> 00:02:37.190
retrieve the data from here as well.

32
00:02:37.460 --> 00:02:41.240
So we're going to work with app delegates in this project as well.

33
00:02:41.780 --> 00:02:45.670
So far we haven't been working on the app delegate at all.

34
00:02:46.460 --> 00:02:49.090
But right now we're going to need this.

35
00:02:49.100 --> 00:02:57.970
So let me go back to this art model art project data model so that we can configure our setup.

36
00:02:58.430 --> 00:03:07.310
So maybe you remember that we're saving the image the name the year and the painter the artist itself

37
00:03:07.640 --> 00:03:09.470
in our database.

38
00:03:09.470 --> 00:03:10.080
OK.

39
00:03:10.280 --> 00:03:18.590
So we're going to choose what they were we want to say in here we're going to create an entity an entity

40
00:03:18.590 --> 00:03:20.050
is like a class.

41
00:03:20.390 --> 00:03:23.690
So it defines the data model itself.

42
00:03:24.380 --> 00:03:29.840
So we're going to have one entity and in this entity we're going to have different attributes.

43
00:03:30.710 --> 00:03:35.680
So if you go down you will see some bobbin called the entity.

44
00:03:35.840 --> 00:03:41.950
And if you click on it it will create the entity for you whenever you want.

45
00:03:41.960 --> 00:03:46.220
You can just click on this twice and you can change the name.

46
00:03:46.220 --> 00:03:49.550
For example I'm going to call this paintings.

47
00:03:49.640 --> 00:03:53.350
You can call this art or whatever you want.

48
00:03:53.360 --> 00:04:00.500
So this is like a class as I said before in which we have attributes we have properties for example

49
00:04:01.190 --> 00:04:09.680
if you plus heat plus on here you can add an attribute called named for example and for Type Of course

50
00:04:09.680 --> 00:04:13.180
we are going to go with string because name will be a string.

51
00:04:13.280 --> 00:04:17.240
For example the artist will be string as well.

52
00:04:18.230 --> 00:04:22.010
So let's choose one that is not string.

53
00:04:22.010 --> 00:04:24.340
Let's go for a year for example.

54
00:04:24.410 --> 00:04:32.180
It's going to be an integer and as you can see we have three integers 16 34 and 64 bits.

55
00:04:32.180 --> 00:04:38.000
So the higher the bit is the higher the capacity to store the number.

56
00:04:38.000 --> 00:04:43.250
So we're going to just sort the years like nineteen one hundred eighteen hundred.

57
00:04:43.370 --> 00:04:50.960
So we don't need actually integer 64 I'm going to go for integer 32 if we're going to work with huge

58
00:04:50.960 --> 00:04:55.940
numbers you can go with integer 64 in a later project.

59
00:04:56.420 --> 00:04:59.660
Right now integer 32 is good for me.

60
00:04:59.660 --> 00:05:03.920
So let's add one more we had image as you might remember.

61
00:05:03.930 --> 00:05:05.090
OK.

62
00:05:05.180 --> 00:05:12.430
And the image will not be a UI image this time because we don't see that type in here.

63
00:05:12.500 --> 00:05:20.510
Rather we are going to go for data we going to convert our image to data and we're going to save it

64
00:05:20.810 --> 00:05:23.010
to the database as data.

65
00:05:23.030 --> 00:05:25.760
So choose binary data from here.

66
00:05:25.820 --> 00:05:32.720
So what what does it mean to convert an image to a data we can actually do that in computer size.

67
00:05:32.720 --> 00:05:41.210
So if you try to convert some image to data I think you just open that data with a text editor you will

68
00:05:41.210 --> 00:05:44.930
see some gibberish characters you cannot understand that.

69
00:05:45.590 --> 00:05:52.340
However Swift will be able to convert that data to an image an image to data so it won't be problem

70
00:05:52.340 --> 00:05:56.330
for you d to sum up this process.

71
00:05:56.330 --> 00:06:05.300
We will convert our image to our data and we will search the data in the database and then we have the

72
00:06:05.300 --> 00:06:12.110
artists the image the name and the year and the final thing that we are going to add is an I.D..

73
00:06:12.710 --> 00:06:18.150
So this is not mandatory but it's actually a very good practice to have one.

74
00:06:18.200 --> 00:06:24.500
So what's an idea is a unique identification number or unique identification string.

75
00:06:24.500 --> 00:06:24.980
OK.

76
00:06:25.640 --> 00:06:29.700
And it's not going to be a number it's not going to be a string at all.

77
00:06:29.720 --> 00:06:34.110
We're going to use a I.D. object in here you you I.D..

78
00:06:34.640 --> 00:06:42.720
So I need to have an idea I need something to differentiate my individual arts from each other.

79
00:06:42.740 --> 00:06:50.300
For example let me try to come up with a way to delete my art delete my saved paintings.

80
00:06:50.330 --> 00:06:51.910
How can I differentiate that type.

81
00:06:51.930 --> 00:06:54.360
Can I understand which one to delete.

82
00:06:54.530 --> 00:06:56.190
It should have an idea.

83
00:06:56.240 --> 00:07:03.770
Maybe I can do it from name but I can actually save two paintings with same name.

84
00:07:03.770 --> 00:07:04.480
Right.

85
00:07:04.530 --> 00:07:11.150
And I I can actually save two paintings which same year and it's a high probability that I can come

86
00:07:11.150 --> 00:07:17.220
up with those and one artist can actually have more than one paintings.

87
00:07:17.480 --> 00:07:26.150
So it's wise to have an idea in here a unique identification number or a unique identification value

88
00:07:26.180 --> 00:07:31.790
that differentiates our art from each other so that we can do this operation.

89
00:07:31.910 --> 00:07:39.710
And in here you will see something called you you I.D. this stance for universal unique I.D. and the

90
00:07:39.710 --> 00:07:47.750
good thing is that Swift will create and take care of this for us by itself because we're not going

91
00:07:47.750 --> 00:07:49.640
to be doing this manually.

92
00:07:49.640 --> 00:07:50.230
Right.

93
00:07:50.270 --> 00:07:59.390
If we're adding 1000 arts in our own app then we will not have to calculate the I.D. We will not have

94
00:07:59.390 --> 00:08:06.860
to give manual I.D. Swift will just generate a random string get random tags that it will assign it

95
00:08:06.860 --> 00:08:14.870
to be an I.D. and stop going to be a string it's going to be a you you I.D. type later on in the course

96
00:08:15.190 --> 00:08:23.060
when I implement delete functionality and when I implement you you I.D. I show you the representation

97
00:08:23.060 --> 00:08:29.540
of the you you I.D. you will much better understand what I mean but right now know that we're going

98
00:08:29.540 --> 00:08:36.590
to leverage this app delegates we're going to leverage the model that we have just created in order

99
00:08:36.590 --> 00:08:39.290
to save our data in the car later.

100
00:08:39.980 --> 00:08:45.860
So now I'm going to stop here and within the next lecture we're going to start by creating our user

101
00:08:45.860 --> 00:08:46.790
interface.
