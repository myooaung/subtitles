1
00:00:01,080 --> 00:00:09,150
Hi within this lecture Regan going to see how we can actually get the data to display to the user later

2
00:00:09,210 --> 00:00:17,220
on or we can just print IDs in our logs so that we can be sure that we are getting the data and in order

3
00:00:17,220 --> 00:00:24,780
to make this work we have to do two more things in order to ensure we are creating this request and

4
00:00:24,780 --> 00:00:32,370
getting the response as you can see we have a warning in here as saying that you have created this task

5
00:00:32,640 --> 00:00:35,150
but you have never used it.

6
00:00:35,160 --> 00:00:41,430
Remember in the previous lecture I've told you that I'm doing this task I may signing this to a variable

7
00:00:41,430 --> 00:00:43,730
for a reason and you're going to see why.

8
00:00:44,370 --> 00:00:51,770
Because we could have easily done this in the same line as well we can we could have just said your

9
00:00:51,780 --> 00:00:59,790
Alsatian that shared the data task but we want to resume this task of to recreate it.

10
00:01:00,210 --> 00:01:03,610
So we have to say task that to resume.

11
00:01:04,020 --> 00:01:09,660
So this doesn't make sense at least from a grammar perspective.

12
00:01:09,660 --> 00:01:13,980
We're not resuming does viewers starting this in fact.

13
00:01:13,980 --> 00:01:18,130
But we have to use this methods in order to start this.

14
00:01:18,150 --> 00:01:18,530
OK.

15
00:01:18,540 --> 00:01:25,710
So once you create the task you can just say task that resume in order to fire these up.

16
00:01:25,770 --> 00:01:34,320
So this will start our task up but we have to do one more thing because we're working with an H TTP

17
00:01:34,560 --> 00:01:37,410
rather than H TTP yes.

18
00:01:37,590 --> 00:01:42,270
So we're trying to reach an age TTP Web site.

19
00:01:42,390 --> 00:01:46,710
And if you come over here you can see it displays.

20
00:01:46,710 --> 00:01:52,420
This website is not secure because we're not using HDTV secure HDTV.

21
00:01:52,450 --> 00:01:53,340
Yes.

22
00:01:53,460 --> 00:01:58,610
For example let me go to my own Web site which is this Web site.

23
00:01:58,710 --> 00:02:07,600
Any here as you can see this displays a look icon indicating that this is encrypted with an SSL cert

24
00:02:07,600 --> 00:02:08,440
difficult.

25
00:02:08,670 --> 00:02:18,270
It means that everything that is coming or going out of those Web sites server is encrypted with an

26
00:02:18,270 --> 00:02:22,480
SSL certificate so it's safer to use HDTV.

27
00:02:22,480 --> 00:02:28,000
Yes because all data transfer will be actually encrypted.

28
00:02:28,170 --> 00:02:35,970
So if you have taken my complete ethical hacking course you will have remembered dad there is an attack

29
00:02:35,970 --> 00:02:44,430
called Man in the middle attack that are done by hackers in order to steal your data when you're on

30
00:02:44,430 --> 00:02:45,830
the same network.

31
00:02:45,840 --> 00:02:52,620
For example suppose that you're connected to a router and some hackers is actually connected to that

32
00:02:52,620 --> 00:02:53,870
router as well.

33
00:02:53,940 --> 00:02:57,510
That hacker can easily be a man in the middle.

34
00:02:57,520 --> 00:03:05,100
That means that they can actually monitor they can actually track the packets that you're getting and

35
00:03:05,100 --> 00:03:08,100
giving to the web servers.

36
00:03:08,100 --> 00:03:15,210
And if this packets are actually encrypted they cannot see the contents.

37
00:03:15,210 --> 00:03:23,760
So even though they know there you're going to that Web site they cannot see the contents of that packets

38
00:03:24,780 --> 00:03:30,260
but in this case you are using an HDTV.

39
00:03:30,270 --> 00:03:34,020
And this is not secure as a CTP yes.

40
00:03:34,080 --> 00:03:38,910
So if this was an HDTV has done it wouldn't have matter.

41
00:03:38,910 --> 00:03:42,970
But in this case we're going to have to go to info that piece lists.

42
00:03:43,110 --> 00:03:48,490
Are we going to have to find something cold at transport security.

43
00:03:48,510 --> 00:03:57,450
Yes it can be on the upside or the downside when you first open this drop down menu.

44
00:03:58,020 --> 00:04:04,890
So find this app transport security settings and then click somewhere outside of this info appeal list

45
00:04:05,280 --> 00:04:12,140
then you're going to have to click on this live their little arrow to make it face dumb Mertz.

46
00:04:12,180 --> 00:04:19,500
Once you do that you can't come over here and click on the plus side and it opens a new menu under the

47
00:04:19,500 --> 00:04:27,270
app transport security settings and in the settings you're going to have to find some menu called Ello

48
00:04:27,540 --> 00:04:29,310
arbitrary Lopes.

49
00:04:29,370 --> 00:04:33,210
And this has a default value of no make it.

50
00:04:33,270 --> 00:04:40,780
Yes once you do that then you can create a request to the HDTV Web site.

51
00:04:40,790 --> 00:04:42,270
So rather than HDTV.

52
00:04:42,300 --> 00:04:43,080
Yes.

53
00:04:43,110 --> 00:04:49,910
So in any case if you're working with an HDTV connection you're going to have to do this.

54
00:04:49,920 --> 00:04:50,300
OK.

55
00:04:50,310 --> 00:04:59,340
You're going to have to make your app transport security settings modified so once we do that now we

56
00:04:59,340 --> 00:05:08,090
are rated to get the data and try to printed out so that we can be certain that we are getting the data

57
00:05:09,610 --> 00:05:10,350
in here.

58
00:05:10,350 --> 00:05:16,800
If data is not nil it means that we actually have some data for right now.

59
00:05:16,800 --> 00:05:20,760
We're going to use something called adjacency realization.

60
00:05:20,760 --> 00:05:28,650
Remember it's called Jason serialization and this is a class that converts between Jason and the foundation

61
00:05:28,680 --> 00:05:29,640
objects.

62
00:05:29,670 --> 00:05:38,610
So we're going to be converting our Jason format into strings into boolean as into integers or doubles.

63
00:05:39,240 --> 00:05:45,530
So this is how it goes you you're going to have to say Doc Jason object and it will ask you for a data.

64
00:05:45,630 --> 00:05:49,870
And of course this is the data and it will ask you for some options.

65
00:05:49,910 --> 00:05:56,420
And as you can see this chose an error which means that we are going to have to do this with try he

66
00:05:56,530 --> 00:05:58,840
worked OK.

67
00:05:58,950 --> 00:06:02,670
So this is obviously the data that we are looking for.

68
00:06:02,730 --> 00:06:10,290
Then I believe we can just force our Raptors because we have already checked if this is Neil or not.

69
00:06:10,290 --> 00:06:17,620
And if you hit enter or is reading up shows and hits dot it will give you some options.

70
00:06:17,670 --> 00:06:28,140
And in here we're looking for the mutable containers so the containers actually allow us to work with

71
00:06:28,200 --> 00:06:36,540
arrays and dictionaries and remember the type that we are getting in our Jason data kind of looks like

72
00:06:36,540 --> 00:06:37,350
dictionary.

73
00:06:37,350 --> 00:06:43,300
So it has some key value pairings that we have seen before.

74
00:06:43,410 --> 00:06:51,960
So we don't have any immutable containers so mutable means it can be changed immutable means it cannot

75
00:06:51,960 --> 00:06:53,110
be changed.

76
00:06:53,120 --> 00:06:59,250
We're not interested in changing anything but we are interested in the container so that we can work

77
00:06:59,250 --> 00:07:00,900
with dictionaries.

78
00:07:00,900 --> 00:07:05,760
So we're going to choose the mutable containers after that of course.

79
00:07:05,760 --> 00:07:13,350
This gives it an error does gives an error because we are going to have to work with try and in fact

80
00:07:13,410 --> 00:07:18,240
I'm going to assign this to a variable and I'm going to try to make this happen.

81
00:07:18,240 --> 00:07:24,300
So let me say something like let Jason result or Jason response.

82
00:07:24,300 --> 00:07:25,420
OK.

83
00:07:25,590 --> 00:07:35,860
And I'm going to try this and assign this to my Jason response and let me do this overdue try.

84
00:07:35,880 --> 00:07:37,130
Catch.

85
00:07:37,170 --> 00:07:40,370
So do try catch.

86
00:07:40,590 --> 00:07:44,900
And if we catch any error we can just print out some error.

87
00:07:44,950 --> 00:07:46,060
Okay.

88
00:07:46,260 --> 00:07:55,290
And in here after trying to convert this to be at Jason objects let me print error over here before

89
00:07:55,290 --> 00:08:05,250
we forget we can just get the data and print it to the user in a Jason response format.

90
00:08:05,250 --> 00:08:12,240
So after dat what I'm going to do I'm going to print this out to see if we get the results or not.

91
00:08:12,240 --> 00:08:20,760
If we can get the data done we can go on and pass it process it to get the single value like us the

92
00:08:20,820 --> 00:08:23,810
Turkish lira and other stuff.

93
00:08:24,290 --> 00:08:30,540
And before we do that of course we have to be certain that this is working so far because we have created

94
00:08:30,540 --> 00:08:39,960
a lot of codes in here and the way that I'm going to do this to be as some kind of a synchronized operation

95
00:08:40,230 --> 00:08:43,920
like we did in the face recognition lecture.

96
00:08:43,920 --> 00:08:52,200
So we're doing all of this in background meaning that it won't affect the user interface it won't block

97
00:08:52,470 --> 00:08:56,850
the current process that is going on in my app.

98
00:08:56,970 --> 00:09:03,720
So that the user can actually interact with the user interface user can actually see what's going on

99
00:09:03,750 --> 00:09:11,010
in the app they can click on the buttons they can play with the app whatever they want and it won't

100
00:09:11,010 --> 00:09:20,190
block it want into interfere with the current processes on the other hand after this operation.

101
00:09:20,190 --> 00:09:26,350
I'm going to change the user interface as well I'm going to change the labels so as I have gone into

102
00:09:26,390 --> 00:09:34,470
face recognition lecture I'm going to use this as sync erroneously vets using this patch.

103
00:09:34,470 --> 00:09:43,890
Q OK so if you haven't watch the face recognition app I suggest you go back and see what's going on

104
00:09:44,010 --> 00:09:46,200
in that lecture.

105
00:09:46,200 --> 00:09:53,460
So synchro Niels means wait for every process to be finished and then move on to the next one is in

106
00:09:53,460 --> 00:10:01,290
Coroneos means it doesn't have to be synchronized so we can do two things at once and we're going to

107
00:10:01,290 --> 00:10:06,960
see what's going to happen after the other process is finished as well.

108
00:10:06,960 --> 00:10:13,350
And it won't affect the way that we're using the app so it won't block the user interface.

109
00:10:13,380 --> 00:10:20,560
Remember we did that in the candy section in the countdown timer section as well.

110
00:10:20,670 --> 00:10:21,430
Right.

111
00:10:21,450 --> 00:10:29,940
So I'm going to go for dispatch cue and I'm going to say this main OK so I'm going to be working with

112
00:10:29,940 --> 00:10:33,550
the main track but as sinker erroneously.

113
00:10:33,840 --> 00:10:39,460
So this will create me a coding block and I'm going to print out the data.

114
00:10:39,450 --> 00:10:48,420
Our Jason response that we have got from the Web site and we're going to use this response.

115
00:10:48,420 --> 00:10:51,050
And I believe now we're ready to test this.

116
00:10:51,060 --> 00:10:51,390
Right.

117
00:10:51,390 --> 00:10:58,290
We have been writing so much code and we got to see if this is working or not.

118
00:10:58,290 --> 00:11:06,810
So let me run this in our simulator and if this works out we going to be seeing the same result that

119
00:11:06,810 --> 00:11:08,690
we have seen in the browser.

120
00:11:08,730 --> 00:11:14,070
But this time we're going to see that result in our logs.

121
00:11:14,070 --> 00:11:23,040
So make sure you print this Jason response out and try to be ready for what's you going to see in your

122
00:11:23,040 --> 00:11:23,520
logs.

123
00:11:23,520 --> 00:11:30,240
Because this is the first time that you're interacting with the Internet in this U.S. development cars.

124
00:11:30,840 --> 00:11:38,040
So this is the moment of truth for us was the simulator opens click on the get right button.

125
00:11:38,040 --> 00:11:46,830
And here we go now we have the data in our logs and this is exactly the same thing that we have seen

126
00:11:46,830 --> 00:11:49,090
before in our browser.

127
00:11:49,110 --> 00:11:55,710
So if you come back to your browser you can just compare this data as you can see we have the rates

128
00:11:56,070 --> 00:12:04,860
we have every other data that we have seen like the USDA the Turkish the euro the Japanese yen and we

129
00:12:04,860 --> 00:12:07,990
have the timestamp the success and everything.

130
00:12:08,010 --> 00:12:13,110
Now let's stop Iran within the next lecture we're going to see how we can actually pass this data.
