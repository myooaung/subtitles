1
00:00:00,300 --> 00:00:06,130
High within those like Chip re going to see different kinds of Ray.

2
00:00:06,150 --> 00:00:09,710
So far we have been talking give us some types right.

3
00:00:09,720 --> 00:00:12,990
We have talked about strengths for example.

4
00:00:12,990 --> 00:00:20,940
So let me take note over here so that you can follow it better when you finish your apt finish your

5
00:00:21,150 --> 00:00:21,850
section.

6
00:00:21,930 --> 00:00:26,410
OK so this is a string section and this is a string.

7
00:00:26,610 --> 00:00:32,500
When you put a quotation mark between valleys it makes them a string.

8
00:00:32,500 --> 00:00:34,190
He makes them a text.

9
00:00:34,210 --> 00:00:34,740
Okay.

10
00:00:34,890 --> 00:00:37,430
So this is not anything fancy.

11
00:00:37,440 --> 00:00:39,600
This is just a text.

12
00:00:39,600 --> 00:00:42,380
We call texts strings.

13
00:00:42,510 --> 00:00:47,710
So let me delete all of this and I'm going to make this into a string section.

14
00:00:47,910 --> 00:00:57,180
So if I say user name dot it means that I'm going to reach the methods and the attributes the properties

15
00:00:57,420 --> 00:00:58,440
of the string.

16
00:00:58,440 --> 00:01:00,070
Use your name.

17
00:01:00,090 --> 00:01:03,910
So what do I mean by method or purpose your attributes.

18
00:01:03,960 --> 00:01:06,360
We didn't learn any of these terms.

19
00:01:06,360 --> 00:01:11,010
It basically means options that we can do with the user name.

20
00:01:11,370 --> 00:01:14,160
Ok so using name is a string.

21
00:01:14,520 --> 00:01:15,800
And then you hit dot.

22
00:01:15,810 --> 00:01:21,570
You can get some options regarding two String objects.

23
00:01:21,570 --> 00:01:27,500
So right now I can do whatever I want to do with my user name.

24
00:01:27,630 --> 00:01:32,080
For example in here you will see something called a patent.

25
00:01:32,220 --> 00:01:41,970
If you click one of this a patent and if you add a character between quotation marks of course like

26
00:01:42,090 --> 00:01:51,660
oh OK if you hit the play button or shift enter then you will see that this will add something.

27
00:01:51,690 --> 00:01:55,000
This will add the old letter to James.

28
00:01:55,260 --> 00:02:02,790
And if you look over here you will see that James is now James so because we have a pen that and 0 to

29
00:02:02,790 --> 00:02:04,350
James.

30
00:02:04,350 --> 00:02:12,540
So that's another feature of variables actually you can reach their methods you can reach their options

31
00:02:12,600 --> 00:02:16,170
or attributes and you can do whatever you want to do with that.

32
00:02:16,200 --> 00:02:20,950
For example you can see a lower cased option in here.

33
00:02:21,330 --> 00:02:26,190
We have J is capitalized in our string right.

34
00:02:26,190 --> 00:02:33,620
If I choose user name that lower cased it will make J lower case as well.

35
00:02:33,630 --> 00:02:41,640
So here you go we have a small James so I can do the same thing with upper case of course.

36
00:02:41,640 --> 00:02:48,540
So go down below you will see the upper case if you double click on this you will see on the right hand

37
00:02:48,540 --> 00:02:48,890
side.

38
00:02:48,900 --> 00:02:58,140
After of course hitting the play by them you will see James so upper case letters.

39
00:02:58,140 --> 00:03:02,110
So that's the idea of variables working with variables.

40
00:03:02,190 --> 00:03:06,360
And that's the beauty of working with strings.

41
00:03:06,390 --> 00:03:16,150
So we took one string like James and we appended something we made them lower case upper case then everything.

42
00:03:16,170 --> 00:03:23,280
And of course we can do much more with the strings and I'm not going to go into every metals every attribute

43
00:03:23,280 --> 00:03:30,780
every aspect of the strings in this lecture because we're going to learn a lot while we are on the route

44
00:03:30,780 --> 00:03:32,370
to the ends.

45
00:03:32,470 --> 00:03:38,940
We're going to work with strings and other variables in all projects that we're going to have.

46
00:03:38,940 --> 00:03:43,990
Anyway later on I'm going to go for numbers.

47
00:03:43,990 --> 00:03:52,490
OK so in teachers doubles and slots and doubles and floods are actually numbers with decimals while

48
00:03:52,560 --> 00:03:59,000
integers are whole numbers and they're completely different from each other.

49
00:03:59,090 --> 00:04:03,240
As long as the technicality of this 50 is considered.

50
00:04:03,440 --> 00:04:09,090
So if I do something like this it will think that user age is an the.

51
00:04:09,170 --> 00:04:09,550
Okay.

52
00:04:09,590 --> 00:04:13,810
This is an integer does a hold no it doesn't have any decimals.

53
00:04:13,940 --> 00:04:17,540
And this is a double because this has some decimals.

54
00:04:17,750 --> 00:04:24,710
And as you can see we cannot interact with each other we cannot multiply it in the integer with a double.

55
00:04:24,710 --> 00:04:30,320
Of course there are ways to overcome that problem and we will see them later on.

56
00:04:30,320 --> 00:04:31,850
Don't worry.

57
00:04:31,850 --> 00:04:35,410
For example let me create a number like for.

58
00:04:35,470 --> 00:04:36,600
OK.

59
00:04:37,130 --> 00:04:39,470
And this will be again my number.

60
00:04:39,470 --> 00:04:40,740
Now I can see.

61
00:04:41,210 --> 00:04:48,500
I can just say that user age divided by my number and what will it give me.

62
00:04:48,710 --> 00:04:57,650
It gives me twelve and twelve multiplied by four actually close to 48 not 50 right.

63
00:04:57,650 --> 00:05:04,330
But since these are integers again the result will be an integer as well.

64
00:05:04,340 --> 00:05:06,810
So I cannot see the decimal.

65
00:05:07,100 --> 00:05:10,410
And this might give me something wrong like this.

66
00:05:10,410 --> 00:05:13,210
So this is not very correct.

67
00:05:13,220 --> 00:05:13,540
Right.

68
00:05:13,550 --> 00:05:22,250
This is this has to be twelve point five not twelve but since I am doing this with integers I'm getting

69
00:05:22,250 --> 00:05:25,690
this resolved as expected.

70
00:05:25,700 --> 00:05:27,620
So what can I do.

71
00:05:27,650 --> 00:05:33,930
How can I just calculate this in the right way right.

72
00:05:33,980 --> 00:05:42,830
So let me do it with doubles for example let me say that user HD for double OK and I'm going to set

73
00:05:42,830 --> 00:05:47,980
this to fifty point 0 and I'm going to set this to 4.0.

74
00:05:48,260 --> 00:05:53,750
Now there doubles altogether and not if I just do something like this.

75
00:05:53,810 --> 00:05:58,510
User age D divided by my number D.

76
00:05:58,730 --> 00:06:01,720
So let's see what will be our number results.

77
00:06:01,730 --> 00:06:10,160
So let me click on the play here and on the right hand side we're going to see twelve point five.

78
00:06:10,760 --> 00:06:13,120
So this is what I want to write.

79
00:06:13,130 --> 00:06:21,350
So if I want the exact results like this then I'm going to go for doubles decibels instead of whole

80
00:06:21,620 --> 00:06:31,580
numbers and there is actually a method to convert an integer into a double or a doubling to integer

81
00:06:31,940 --> 00:06:38,850
and actually there is a method to convert everything to everything as long as it makes sense.

82
00:06:38,850 --> 00:06:41,710
How are we going to see that later on.

83
00:06:41,720 --> 00:06:46,050
Now let me tell you about something called a boolean.

84
00:06:46,160 --> 00:06:50,020
So this is one of the most basic things in programming.

85
00:06:50,030 --> 00:06:53,590
So this is either true or false.

86
00:06:53,600 --> 00:06:59,260
For example if I create my boolean variable I can set it to false.

87
00:06:59,300 --> 00:07:07,940
As you can see this say that this is a bull boolean OK and this only has the value of false or true.

88
00:07:08,270 --> 00:07:09,730
So I cannot do.

89
00:07:09,890 --> 00:07:13,060
I can't just go and say My boolean is five anymore.

90
00:07:13,150 --> 00:07:13,770
OK.

91
00:07:13,880 --> 00:07:19,780
Because this is a boolean but I can say my boolean is true.

92
00:07:20,270 --> 00:07:22,160
And why do I need this.

93
00:07:22,160 --> 00:07:23,620
This is too basic.

94
00:07:23,660 --> 00:07:25,090
Maybe I'm doing gay gay.

95
00:07:25,100 --> 00:07:34,070
Maybe I'm just controlling something like if my character is alive or dead so I can just do my character

96
00:07:34,070 --> 00:07:43,030
is alive and I can just go and say my character is that and I can do something like If controls we're

97
00:07:43,030 --> 00:07:44,710
going to learn what they are.

98
00:07:44,810 --> 00:07:51,950
Something like if my character is still alive do this or if my character is that do that.

99
00:07:51,950 --> 00:07:57,320
So these are actually a basis for logical expressions.

100
00:07:57,320 --> 00:07:58,260
OK.

101
00:07:58,670 --> 00:08:06,510
And it's going to be much more clearer to you once we use those variables in real examples.

102
00:08:06,590 --> 00:08:13,770
But for right now just try to understand what they do a stand alone values.

103
00:08:13,920 --> 00:08:18,180
We're going to see how to use them in real apps.

104
00:08:18,200 --> 00:08:18,590
OK.

105
00:08:18,620 --> 00:08:26,510
So far we have been learning a lot and we have learned about the teachers levels and maybe you realize

106
00:08:26,510 --> 00:08:35,420
that when I say let the user age is 50 the Swift is actually understanding that this is an integer because

107
00:08:35,720 --> 00:08:38,870
I have initialized this to be an integer.

108
00:08:38,870 --> 00:08:43,460
Right so what if I want to change this type.

109
00:08:43,830 --> 00:08:53,250
If I say something like My number is not for anymore but it's rather James will it work.

110
00:08:53,250 --> 00:08:55,650
Actually it's not going to work.

111
00:08:55,680 --> 00:08:58,810
So let me change these two were for example.

112
00:08:58,890 --> 00:09:03,430
OK so this is a Vrabel rather than a constant.

113
00:09:03,510 --> 00:09:11,310
And let me run this one more time so it will be stated as were so I can come over here I can just say

114
00:09:11,610 --> 00:09:15,400
where my number is three pointer All right.

115
00:09:15,450 --> 00:09:16,660
And this will work.

116
00:09:16,740 --> 00:09:22,310
But what if I say my number is Kirk rather than 3.0.

117
00:09:22,410 --> 00:09:29,580
And as you can see it says that you cannot is signed as value of type String because this has the type

118
00:09:29,580 --> 00:09:30,700
of double.

119
00:09:30,720 --> 00:09:36,740
So it means that once you assign it Type 2 available it just takes.

120
00:09:36,780 --> 00:09:44,650
So in some of the programming languages this is a lot like in Python but since fifth this is not allowed.

121
00:09:44,670 --> 00:09:52,960
Once you define the variable you shouldn't try to change the type of the variable anymore.

122
00:09:53,040 --> 00:09:59,220
So let me say it doesn't stop here within the next lecture I'm going to try and deep dive into this

123
00:09:59,220 --> 00:10:00,930
type taenia a little bit more.
