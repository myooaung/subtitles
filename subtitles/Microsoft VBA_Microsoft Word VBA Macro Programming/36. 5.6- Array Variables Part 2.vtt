WEBVTT
ï»¿1
00:00:00.000 --> 00:00:20.150
Before we leave this example,

2
00:00:20.150 --> 00:00:25.150
I just like to show you a trick that I sometimes use in Microsoft Excel.

3
00:00:25.150 --> 00:00:27.110
In this example,

4
00:00:27.110 --> 00:00:30.850
we only had five elements to place inside our rate.

5
00:00:30.850 --> 00:00:34.040
Occasionally you'll need a lot more.

6
00:00:34.040 --> 00:00:34.920
For example,

7
00:00:34.920 --> 00:00:35.970
if you want all the U.

8
00:00:35.970 --> 00:00:36.150
S.

9
00:00:36.150 --> 00:00:40.350
States in an array or if you want every county in the U.

10
00:00:40.350 --> 00:00:40.910
K.

11
00:00:40.910 --> 00:00:44.470
For every country in the world when you're doing that,

12
00:00:44.470 --> 00:00:50.450
Excel becomes very useful because you can use Excel formulas to generate your VB a code.

13
00:00:50.450 --> 00:00:56.010
We've got an example in the exercises Folders Let's just meaning lies word and go back to

14
00:00:56.010 --> 00:00:56.350
that.

15
00:00:56.350 --> 00:01:01.550
So in the Section five folder,

16
00:01:01.550 --> 00:01:05.650
it's the second example array variable formulas.

17
00:01:05.650 --> 00:01:15.250
So here we're going to do then str months when we're going to use the 1 to 12 lowest in

18
00:01:15.250 --> 00:01:17.090
next one highest in blocks.

19
00:01:17.090 --> 00:01:22.750
12 on then all we've done is we've placed the index in Colon A.

20
00:01:22.750 --> 00:01:30.580
We place the actual text values that we want in each element in column B and then here

21
00:01:30.580 --> 00:01:37.750
we've got a formula which uses column and column B to generate the necessary VB code.

22
00:01:37.750 --> 00:01:42.700
So we start with an open in string use an percent.

23
00:01:42.700 --> 00:01:44.270
As we've seen in VB,

24
00:01:44.270 --> 00:01:45.330
it's exactly the same.

25
00:01:45.330 --> 00:01:45.650
You next.

26
00:01:45.650 --> 00:01:50.850
So and then we tag on the entry in colon a.

27
00:01:50.850 --> 00:01:56.710
Then we put the clothes in parenthesis equals and then we need quotes.

28
00:01:56.710 --> 00:02:00.580
So the same rule applies in excel as in V B.

29
00:02:00.580 --> 00:02:00.780
A.

30
00:02:00.780 --> 00:02:02.850
If you want quotes inside quotes,

31
00:02:02.850 --> 00:02:04.350
you simply double them up.

32
00:02:04.350 --> 00:02:08.750
So you've got to double quotes to generate sequence that we need.

33
00:02:08.750 --> 00:02:13.690
Then we've got the closing quotation to actually close that string.

34
00:02:13.690 --> 00:02:16.350
Can we tag on the month name?

35
00:02:16.350 --> 00:02:18.970
And then we put the closing quotations.

36
00:02:18.970 --> 00:02:25.500
So we've got four of these in total double quotations inside the regular opening and

37
00:02:25.500 --> 00:02:25.950
closing.

38
00:02:25.950 --> 00:02:28.150
So not too difficult.

39
00:02:28.150 --> 00:02:29.240
And obviously,

40
00:02:29.240 --> 00:02:35.670
you just then copy that Down and Excel uses relative references to give you the necessary

41
00:02:35.670 --> 00:02:38.550
code so we could copy all of this.

42
00:02:38.550 --> 00:02:47.690
Use it in our next backward returns the full Monty,

43
00:02:47.690 --> 00:02:48.550
your view.

44
00:02:48.550 --> 00:02:50.750
Make sure I'm a bottom,

45
00:02:50.750 --> 00:03:00.010
and then do our second macro our just cool it Excel formulas.

46
00:03:00.010 --> 00:03:05.250
I'll begin by this paste in that in.

47
00:03:05.250 --> 00:03:19.390
Then let's declare a document on the counter.

48
00:03:19.390 --> 00:03:25.550
So,

49
00:03:25.550 --> 00:03:28.850
having populated our ray variables,

50
00:03:28.850 --> 00:03:38.980
let's create a new document And then let's look through our array and for each element

51
00:03:38.980 --> 00:03:41.950
inside it will put the month heading.

52
00:03:41.950 --> 00:03:47.250
And then we'll create a table using the code that we used in the last section.

53
00:03:47.250 --> 00:03:53.550
So let's put the skeleton of our loop or I p equals So as always,

54
00:03:53.550 --> 00:04:01.470
we need to say L bound array str months two New bound,

55
00:04:01.470 --> 00:04:15.250
right Next I So let's go back to section for and just find some of this code to generate

56
00:04:15.250 --> 00:04:19.620
our head IDs so this could be our month headed.

57
00:04:19.620 --> 00:04:34.550
So here we want to insert the month.

58
00:04:34.550 --> 00:04:36.750
And as we saw in the last example,

59
00:04:36.750 --> 00:04:45.350
we want to say each and we do that by use in I in parentheses after the name about a rape,

60
00:04:45.350 --> 00:04:54.750
there's gonna be a str months brackets I then that goes in his head in one.

61
00:04:54.750 --> 00:04:57.650
Now we want to create a table.

62
00:04:57.650 --> 00:05:19.650
So let's scrabble of this just happen across.

63
00:05:19.650 --> 00:05:21.160
And finally,

64
00:05:21.160 --> 00:05:39.680
let's in certain headings said,

65
00:05:39.680 --> 00:05:43.650
By placing all of that code into our loop,

66
00:05:43.650 --> 00:05:46.750
it's gonna execute 12 times,

67
00:05:46.750 --> 00:05:52.850
but each time will have a different month as the head in that precedes the table.

68
00:05:52.850 --> 00:05:57.950
Before we contest our code we've just got to make a couple of changes.

69
00:05:57.950 --> 00:05:59.730
The first thing is,

70
00:05:59.730 --> 00:06:01.550
perhaps you should put some comments in.

71
00:06:01.550 --> 00:06:10.120
So here we insert and in para How a girl?

72
00:06:10.120 --> 00:06:12.770
Yeah.

73
00:06:12.770 --> 00:06:16.450
You create and formats table.

74
00:06:16.450 --> 00:06:22.650
Yeah,

75
00:06:22.650 --> 00:06:29.410
Inside table Heavens from one.

76
00:06:29.410 --> 00:06:37.090
So that code was fine when we were only created one table.

77
00:06:37.090 --> 00:06:40.560
But what we now want to do is to create 12 tables,

78
00:06:40.560 --> 00:06:42.050
one for each month.

79
00:06:42.050 --> 00:06:45.250
So if we left our code as it is,

80
00:06:45.250 --> 00:06:51.720
each time we start balloon will still be inside the table that we created on the previous

81
00:06:51.720 --> 00:06:52.050
loop.

82
00:06:52.050 --> 00:06:58.330
So clearly what we need to do after we've entered our table headings is to move to the end

83
00:06:58.330 --> 00:06:58.950
of the document.

84
00:06:58.950 --> 00:07:03.500
We need the equivalent of press and control and the end t.

85
00:07:03.500 --> 00:07:08.650
And you'll not be surprised to learn that VB A has a command that does exactly that.

86
00:07:08.650 --> 00:07:10.530
Yeah,

87
00:07:10.530 --> 00:07:15.250
it's obviously going to be very similar to this one.

88
00:07:15.250 --> 00:07:22.850
But instead of Moon writes,

89
00:07:22.850 --> 00:07:32.660
we use dot end key and then you'll see it's asking for the unit to get to the end of the

90
00:07:32.660 --> 00:07:33.360
documents,

91
00:07:33.360 --> 00:07:35.500
use WD story,

92
00:07:35.500 --> 00:07:40.130
and then let's just insert a blank line.

93
00:07:40.130 --> 00:07:41.750
So we've got this code here,

94
00:07:41.750 --> 00:07:44.450
which inserts to blank lines.

95
00:07:44.450 --> 00:07:45.980
We'll just copy it,

96
00:07:45.980 --> 00:07:46.950
not at the bottom.

97
00:07:46.950 --> 00:07:51.050
So now we should be good to go.

98
00:07:51.050 --> 00:07:56.050
We've adapted the code so it could be executed repeatedly without messing up.

99
00:07:56.050 --> 00:08:01.250
So let's save and test.

100
00:08:01.250 --> 00:08:16.550
And there we've got each of our month headings with a table under each month headed.

101
00:08:16.550 --> 00:08:28.680
So that's a look at how you work with a raise with a fixed number of elements in the next

102
00:08:28.680 --> 00:08:29.200
video,

103
00:08:29.200 --> 00:08:34.260
we'll move on to look at how you can use a raise to cater for an unknown number of elements

104
00:08:34.260 --> 00:08:34.260
.

105
00:08:34.260 --> 00:08:50.290
And these air called dynamic a race variables they used to store a series of related values

106
00:08:50.290 --> 00:08:50.290
.

107
00:08:50.290 --> 00:08:52.220
In contrast to scaler,

108
00:08:52.220 --> 00:08:59.830
variables were designed to store a single value to declare an array,

109
00:08:59.830 --> 00:09:09.080
use this in tax the ray name X two y As data time where X represents the lowest index and

110
00:09:09.080 --> 00:09:14.770
why the upper two loops through an array.

111
00:09:14.770 --> 00:09:24.000
Use this in tax for counter equals L bound array Name to you bound the rain name statements

112
00:09:24.000 --> 00:09:24.000
.

113
00:09:24.000 --> 00:09:25.760
Next counter

