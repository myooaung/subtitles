WEBVTT
ï»¿1
00:00:00.000 --> 00:00:13.670
Like all of the Microsoft Office programs,

2
00:00:13.670 --> 00:00:18.850
Microsoft Word contains an application called a Visual Basic Editor,

3
00:00:18.850 --> 00:00:21.160
which is used for editing VB.

4
00:00:21.160 --> 00:00:28.720
A code in this section will cover all the basics of working in the visual basic editor

5
00:00:28.720 --> 00:00:31.550
environment within the Phoebe.

6
00:00:31.550 --> 00:00:36.550
The first window that you need to get used to is the Project Explorer,

7
00:00:36.550 --> 00:00:41.450
and this is the launch pad for all your VB a code in activities.

8
00:00:41.450 --> 00:00:44.550
And that's what we'll be talking about in this video.

9
00:00:44.550 --> 00:00:49.070
To access the visual basic editor,

10
00:00:49.070 --> 00:00:57.390
click on the developer tab and then either click on the visual Basic button or press old 11

11
00:00:57.390 --> 00:00:57.390
.

12
00:00:57.390 --> 00:01:05.320
The keyboard shortcut Visual Basic Editor is an old style Microsoft application.

13
00:01:05.320 --> 00:01:07.270
It has menus,

14
00:01:07.270 --> 00:01:11.620
two bars and floating windows and,

15
00:01:11.620 --> 00:01:16.470
as was traditional with this style of application to make the various windows in tool bars

16
00:01:16.470 --> 00:01:17.070
visible,

17
00:01:17.070 --> 00:01:18.450
you go to the view menu.

18
00:01:18.450 --> 00:01:21.390
So here we can see the various windows,

19
00:01:21.390 --> 00:01:23.950
and here we can see the different tool bars,

20
00:01:23.950 --> 00:01:31.700
and you can also right click on any toolbar and choose the name of the toolbar to hide or

21
00:01:31.700 --> 00:01:32.350
show it.

22
00:01:32.350 --> 00:01:39.320
The Project Explorer is probably the first port of call when you go into the visual basic

23
00:01:39.320 --> 00:01:44.900
editor because it's from here that you can launch all of the containers for your VB,

24
00:01:44.900 --> 00:01:47.750
a code it is not visible.

25
00:01:47.750 --> 00:01:55.960
You simply go to view and shoes Project Explorer or use the shortcut control are within the

26
00:01:55.960 --> 00:01:57.390
Project Explorer window.

27
00:01:57.390 --> 00:02:00.610
You'll see a project correspondent,

28
00:02:00.610 --> 00:02:04.250
every document or template that's currently opening word,

29
00:02:04.250 --> 00:02:09.050
and you'll probably see an extra project related to the normal template,

30
00:02:09.050 --> 00:02:11.650
which is associated with the application.

31
00:02:11.650 --> 00:02:15.590
A project is simply a container,

32
00:02:15.590 --> 00:02:16.250
a code.

33
00:02:16.250 --> 00:02:19.020
So when you think of projects,

34
00:02:19.020 --> 00:02:21.450
just think of the term code project.

35
00:02:21.450 --> 00:02:26.750
It's also worth pointing out that the project is always there.

36
00:02:26.750 --> 00:02:33.720
It doesn't imply that the rest code associated with that particular document every single

37
00:02:33.720 --> 00:02:40.290
word documents when you enter the visual basic editor will have a project already associate

38
00:02:40.290 --> 00:02:40.750
it with it.

39
00:02:40.750 --> 00:02:44.680
So it's both the way of access inexistent code,

40
00:02:44.680 --> 00:02:50.910
which has been associated with a particular document or template and also creating the code

41
00:02:50.910 --> 00:02:51.950
in the first place.

42
00:02:51.950 --> 00:02:59.220
Although most of the code that will be creating in this course will relate to Mac Rose,

43
00:02:59.220 --> 00:03:00.200
there are,

44
00:03:00.200 --> 00:03:00.780
in fact,

45
00:03:00.780 --> 00:03:03.630
four different ways of adding VB,

46
00:03:03.630 --> 00:03:08.730
a code to a document or template to help us explore these.

47
00:03:08.730 --> 00:03:11.050
Let's just open a document that's been prepared.

48
00:03:11.050 --> 00:03:15.550
So I'm just going to close the VD for the moment and minimize word,

49
00:03:15.550 --> 00:03:18.950
and that's going to the Exercises folder.

50
00:03:18.950 --> 00:03:22.050
We're now in Section two,

51
00:03:22.050 --> 00:03:28.570
and inside this you'll find a file called 0 to 01 project.

52
00:03:28.570 --> 00:03:29.350
Examples.

53
00:03:29.350 --> 00:03:39.170
You'll notice that it has a d o T m file extension on this is a macro enabled template to

54
00:03:39.170 --> 00:03:41.340
open a template so you can edit it.

55
00:03:41.340 --> 00:03:47.640
You can't simply double click because that action will create a blank document based on the

56
00:03:47.640 --> 00:03:48.250
template.

57
00:03:48.250 --> 00:03:49.550
Instead,

58
00:03:49.550 --> 00:03:50.300
simply right,

59
00:03:50.300 --> 00:03:55.640
click and choose open inside this document.

60
00:03:55.640 --> 00:03:56.950
Let's just zoom out.

61
00:03:56.950 --> 00:04:00.950
You'll see we've got a diagram,

62
00:04:00.950 --> 00:04:05.380
which shows you the different types of container inside,

63
00:04:05.380 --> 00:04:07.450
which you can place your maybe a code.

64
00:04:07.450 --> 00:04:10.750
So we'll be focusing mainly on modules,

65
00:04:10.750 --> 00:04:15.550
which is where you can actually create Mac rose.

66
00:04:15.550 --> 00:04:18.590
But in addition to this is,

67
00:04:18.590 --> 00:04:21.190
you'll see we have word objects,

68
00:04:21.190 --> 00:04:25.550
which basically just contains this document,

69
00:04:25.550 --> 00:04:30.550
and this is an object referring to the document itself.

70
00:04:30.550 --> 00:04:33.850
Then we have user forms,

71
00:04:33.850 --> 00:04:35.850
class modules.

72
00:04:35.850 --> 00:04:41.270
Let's now go back into the visual basic editor on here,

73
00:04:41.270 --> 00:04:47.340
we can see examples off those four different types of container and we'll just go through

74
00:04:47.340 --> 00:04:48.450
them in order.

75
00:04:48.450 --> 00:04:54.850
So I'm going to close down all the various code window so we can start from scratch.

76
00:04:54.850 --> 00:05:00.090
Okay,

77
00:05:00.090 --> 00:05:01.100
So in this project,

78
00:05:01.100 --> 00:05:06.650
with prepared examples of each of the four different code containers,

79
00:05:06.650 --> 00:05:15.740
the 1st 1 in a folder labeled Microsoft Word Objects contains this document and this

80
00:05:15.740 --> 00:05:22.150
basically is the programmatic representation off the document in question the document to

81
00:05:22.150 --> 00:05:23.650
which this project relates.

82
00:05:23.650 --> 00:05:24.960
So obviously,

83
00:05:24.960 --> 00:05:25.600
in this case,

84
00:05:25.600 --> 00:05:30.590
there is a visual representation which you access by simply going back to word.

85
00:05:30.590 --> 00:05:33.150
And now you're working with the object itself.

86
00:05:33.150 --> 00:05:36.250
But from a programmatic point of view,

87
00:05:36.250 --> 00:05:42.350
this object basically can contain code which relates to the document.

88
00:05:42.350 --> 00:05:44.550
To access this code,

89
00:05:44.550 --> 00:05:46.870
you double click on the icon.

90
00:05:46.870 --> 00:05:51.450
You can also right click and choose view code.

91
00:05:51.450 --> 00:05:55.750
The code that you place inside this object is not a macro.

92
00:05:55.750 --> 00:05:58.750
It's basically an event handler.

93
00:05:58.750 --> 00:06:08.160
This is a subroutine which will execute when a given event occurs on the events which

94
00:06:08.160 --> 00:06:10.250
relate specifically to documents.

95
00:06:10.250 --> 00:06:11.250
Ah,

96
00:06:11.250 --> 00:06:14.350
opening and closing.

97
00:06:14.350 --> 00:06:21.500
This particular sub procedure called document new relates only to templates,

98
00:06:21.500 --> 00:06:26.250
and it's triggered every time a new document is created,

99
00:06:26.250 --> 00:06:28.550
which is based on that template.

100
00:06:28.550 --> 00:06:30.630
So here,

101
00:06:30.630 --> 00:06:31.270
basically,

102
00:06:31.270 --> 00:06:34.510
we can see chemistry books,

103
00:06:34.510 --> 00:06:38.550
which is a function that's used to display a message for the user,

104
00:06:38.550 --> 00:06:40.550
and it's simply a reminder.

105
00:06:40.550 --> 00:06:43.310
Please remember to save your work frequently,

106
00:06:43.310 --> 00:06:49.750
and then this parameter specifies that it's a dialog box that has an exclamation mark.

107
00:06:49.750 --> 00:06:50.670
Ah,

108
00:06:50.670 --> 00:06:51.400
in other words,

109
00:06:51.400 --> 00:06:55.740
we kind of shout into the user so not recommended.

110
00:06:55.740 --> 00:06:57.150
If you are doing this at work,

111
00:06:57.150 --> 00:06:59.950
let's just test it.

112
00:06:59.950 --> 00:07:07.550
Simple clothes and instead of right clicking and choosing open well now double click.

113
00:07:07.550 --> 00:07:12.890
This gives us a blank document based on the template,

114
00:07:12.890 --> 00:07:17.350
which in turn triggers our code on outcomes are MSG Box.

115
00:07:17.350 --> 00:07:20.100
There's the exclamation mark inventions,

116
00:07:20.100 --> 00:07:20.680
so we click.

117
00:07:20.680 --> 00:07:21.250
OK,

118
00:07:21.250 --> 00:07:23.220
we'll get rid of this,

119
00:07:23.220 --> 00:07:26.950
and then we'll go back in by right clicking and choosing open.

120
00:07:26.950 --> 00:07:30.050
So we once again editing the template itself.

121
00:07:30.050 --> 00:07:33.870
Now let's go back to develop a visual basic.

122
00:07:33.870 --> 00:07:35.370
I'm just going Teoh,

123
00:07:35.370 --> 00:07:38.950
go back to this document by double clicking on the icon.

124
00:07:38.950 --> 00:07:43.750
That then is an example off an event handler,

125
00:07:43.750 --> 00:07:49.050
which basically will take place when a new document is created based on that template.

126
00:07:49.050 --> 00:07:52.220
Next,

127
00:07:52.220 --> 00:07:53.750
we have user forms.

128
00:07:53.750 --> 00:07:59.870
So again I can just double click to show you they use a form,

129
00:07:59.870 --> 00:08:00.640
basically,

130
00:08:00.640 --> 00:08:04.090
is a customised dialogue inside it.

131
00:08:04.090 --> 00:08:07.050
You can place all of these different types of control.

132
00:08:07.050 --> 00:08:14.370
So it's quite a nice way of getting your code your macro to be a lot more flexible by

133
00:08:14.370 --> 00:08:16.110
creating a user interface,

134
00:08:16.110 --> 00:08:22.970
which allows the user to make choices and to tweak the way in which your code runs to enter

135
00:08:22.970 --> 00:08:27.550
parameters which your macro can then used to make decisions.

136
00:08:27.550 --> 00:08:29.720
So it's quite a powerful feature,

137
00:08:29.720 --> 00:08:33.790
and we will be covering user forms in detail to add kowtow,

138
00:08:33.790 --> 00:08:39.860
use of form you simply double thick on the control to which you want to add that

139
00:08:39.860 --> 00:08:40.850
functionality.

140
00:08:40.850 --> 00:08:42.280
So here,

141
00:08:42.280 --> 00:08:42.970
clearly,

142
00:08:42.970 --> 00:08:45.990
we want things to happen when the user has finished,

143
00:08:45.990 --> 00:08:49.350
enter in their name and then clicks on the continuum.

144
00:08:49.350 --> 00:08:51.130
So for our code,

145
00:08:51.130 --> 00:08:52.800
it would double click on continue.

146
00:08:52.800 --> 00:09:01.140
We would then automatically be given a sub procedure which uses the name of the control in

147
00:09:01.140 --> 00:09:03.550
this case has been named BT and continued,

148
00:09:03.550 --> 00:09:07.050
and the action in this case it's a click.

149
00:09:07.050 --> 00:09:09.690
Okay,

150
00:09:09.690 --> 00:09:10.390
moving on.

151
00:09:10.390 --> 00:09:12.750
We have modules,

152
00:09:12.750 --> 00:09:17.420
and this is where we'll put most of the code that we do in this course,

153
00:09:17.420 --> 00:09:20.770
because this is where you actually create Mac Rose.

154
00:09:20.770 --> 00:09:23.350
Or as we saw when we used in the recorder.

155
00:09:23.350 --> 00:09:28.350
This is where macro code is automatically generated by the recorder.

156
00:09:28.350 --> 00:09:32.160
So if we couple click on Model one,

157
00:09:32.160 --> 00:09:34.450
which is the only model we have here,

158
00:09:34.450 --> 00:09:37.250
you'll see it contains a single macron.

159
00:09:37.250 --> 00:09:40.950
We can tell it's a macro by the use of the word suburb,

160
00:09:40.950 --> 00:09:43.450
and the macro is called show form.

161
00:09:43.450 --> 00:09:45.440
Inside it.

162
00:09:45.440 --> 00:09:47.150
That's just to sing the line,

163
00:09:47.150 --> 00:09:49.040
and this name,

164
00:09:49.040 --> 00:09:52.190
you'll probably noticed marries up with the name of our form.

165
00:09:52.190 --> 00:09:59.390
So we have to prefix FRM for full and then the form is called Sign in and essentially

166
00:09:59.390 --> 00:10:07.690
you'll realize DOT show is used to display the form so we can run it from here and up comes

167
00:10:07.690 --> 00:10:08.300
on full.

168
00:10:08.300 --> 00:10:12.250
I understand to my name and click continue,

169
00:10:12.250 --> 00:10:18.650
So I don't think we need to say anything mawr on models,

170
00:10:18.650 --> 00:10:24.350
because this is where we'll be spending most of our time creating various sub procedures

171
00:10:24.350 --> 00:10:25.750
within modules,

172
00:10:25.750 --> 00:10:29.250
so that just leaves then class modules.

173
00:10:29.250 --> 00:10:32.350
This is basically an advanced feature,

174
00:10:32.350 --> 00:10:37.750
and it's slightly beyond the scope of this introductory VB a title.

175
00:10:37.750 --> 00:10:41.350
But I will explain what class modules are.

176
00:10:41.350 --> 00:10:46.950
They're basically containers for object oriented code.

177
00:10:46.950 --> 00:10:51.400
Object oriented code refers to a style of programming,

178
00:10:51.400 --> 00:10:55.450
which is suitable for large scale applications,

179
00:10:55.450 --> 00:10:58.200
whether it's a significant amount of code,

180
00:10:58.200 --> 00:11:02.350
usually collaboration between different programmers.

181
00:11:02.350 --> 00:11:04.290
Given the size of the project,

182
00:11:04.290 --> 00:11:10.780
there is a lot of scope for errors creeping in and due to code that belongs to one area of

183
00:11:10.780 --> 00:11:11.750
an application,

184
00:11:11.750 --> 00:11:18.050
interfering with the functionality of code related to a completely different area.

185
00:11:18.050 --> 00:11:27.020
Object oriented programming provides a mechanism for divide in code into isolated

186
00:11:27.020 --> 00:11:28.050
compartments.

187
00:11:28.050 --> 00:11:32.770
Andi basically structure in your code in the form of black boxes,

188
00:11:32.770 --> 00:11:33.550
if you like,

189
00:11:33.550 --> 00:11:36.820
and this is done by defining classes.

190
00:11:36.820 --> 00:11:44.180
Each class relates to a specific area of the application and is effectively a blueprint

191
00:11:44.180 --> 00:11:48.450
containing all the code related to that particular area.

192
00:11:48.450 --> 00:11:50.850
So we double click to look inside it.

193
00:11:50.850 --> 00:11:59.020
You'll see we have a bare bones class relating to the user on it contains basically three

194
00:11:59.020 --> 00:12:03.350
properties or attributes of the user relating to the user name,

195
00:12:03.350 --> 00:12:08.400
and there are three types of user name one is you could simply ask the user,

196
00:12:08.400 --> 00:12:09.450
Enter your name.

197
00:12:09.450 --> 00:12:11.550
So here we've got name entered.

198
00:12:11.550 --> 00:12:15.250
Then there's the word name,

199
00:12:15.250 --> 00:12:28.480
and the system is your windows log on name.

200
00:12:28.480 --> 00:12:30.230
So basically,

201
00:12:30.230 --> 00:12:36.380
this class shows a fragment of code that you might use if you were creating a class which

202
00:12:36.380 --> 00:12:38.850
kept track off user activity.

203
00:12:38.850 --> 00:12:40.550
Okay,

204
00:12:40.550 --> 00:12:41.450
so there we have it.

205
00:12:41.450 --> 00:12:46.950
Those are the four types of object into which you can place your VB a code.

206
00:12:46.950 --> 00:12:53.750
There is one other folder that you may see Inside Project called Reference.

207
00:12:53.750 --> 00:12:56.900
And although it's not a container for code,

208
00:12:56.900 --> 00:13:02.770
I should just explain what the reference folder is full from the code.

209
00:13:02.770 --> 00:13:03.550
In points of view,

210
00:13:03.550 --> 00:13:10.260
it basically provides a mechanism right in references two documents or templates that

211
00:13:10.260 --> 00:13:11.250
contain code.

212
00:13:11.250 --> 00:13:12.380
Say,

213
00:13:12.380 --> 00:13:13.150
for example,

214
00:13:13.150 --> 00:13:23.300
let's just close this down and safe and then just go back into the Exercises folder.

215
00:13:23.300 --> 00:13:26.650
If you're not still where and in zero to,

216
00:13:26.650 --> 00:13:32.640
you'll see that we have here a back row enabled documents.

217
00:13:32.640 --> 00:13:35.750
It's not a template this time called Ref.

218
00:13:35.750 --> 00:13:37.450
Let's just go into this.

219
00:13:37.450 --> 00:13:41.400
So is currently a blank document.

220
00:13:41.400 --> 00:13:44.050
When we go to developer visual Basic,

221
00:13:44.050 --> 00:13:50.910
you'll see it contains a reference to normal because it was based on that template.

222
00:13:50.910 --> 00:13:55.320
Let's say that we want to create a reference to the template that we've just been working

223
00:13:55.320 --> 00:13:55.550
in.

224
00:13:55.550 --> 00:14:02.600
We go back to developer and on the right hand side,

225
00:14:02.600 --> 00:14:04.150
click on document Template.

226
00:14:04.150 --> 00:14:07.550
Here we can click on Attach,

227
00:14:07.550 --> 00:14:20.030
work our way into the Exercises folder Minds on the Destiny Section zero to and here's our

228
00:14:20.030 --> 00:14:23.150
project Example Macro enable template.

229
00:14:23.150 --> 00:14:26.180
So we double click to open this click.

230
00:14:26.180 --> 00:14:26.850
OK,

231
00:14:26.850 --> 00:14:33.410
so now when we get back to the visual basic editor you'll see in our reference folder,

232
00:14:33.410 --> 00:14:37.950
we have a reference to that file.

233
00:14:37.950 --> 00:14:40.710
As a consequence of that reference,

234
00:14:40.710 --> 00:14:45.450
we now have the project off that file available.

235
00:14:45.450 --> 00:14:49.620
So here are the four containers that we've just been discussing,

236
00:14:49.620 --> 00:14:51.540
and as it stands,

237
00:14:51.540 --> 00:14:57.040
we can actually modify all of those from within the current document.

238
00:14:57.040 --> 00:14:59.340
So by creating that reference,

239
00:14:59.340 --> 00:15:04.850
we actually now have access to all the code in objects within that file.

240
00:15:04.850 --> 00:15:06.770
So I could come in here,

241
00:15:06.770 --> 00:15:07.550
for example,

242
00:15:07.550 --> 00:15:10.450
and perhaps adding a button.

243
00:15:10.450 --> 00:15:13.250
So as you can probably guess,

244
00:15:13.250 --> 00:15:16.850
we can duplicate a button by copying and paste in,

245
00:15:16.850 --> 00:15:23.250
and you can also duplicate by holding down the control key and just dragging.

246
00:15:23.250 --> 00:15:26.410
So I'm just gonna tidy that up,

247
00:15:26.410 --> 00:15:27.450
making it smaller,

248
00:15:27.450 --> 00:15:29.990
maintaining a caption on it,

249
00:15:29.990 --> 00:15:32.230
too canceled.

250
00:15:32.230 --> 00:15:35.230
Then I'm going to rename it.

251
00:15:35.230 --> 00:15:37.150
So here's my properties window.

252
00:15:37.150 --> 00:15:38.700
It's not visible.

253
00:15:38.700 --> 00:15:41.550
It's just view properties window,

254
00:15:41.550 --> 00:15:44.350
and the name is the very first parameter.

255
00:15:44.350 --> 00:15:51.260
We're going to use the prefix b TN cancel answer.

256
00:15:51.260 --> 00:15:54.260
And then I want to put some code on it,

257
00:15:54.260 --> 00:15:56.850
which will simply close the window.

258
00:15:56.850 --> 00:16:06.850
So I double click on a sub procedures automatically generated using the name of my control

259
00:16:06.850 --> 00:16:06.850
,

260
00:16:06.850 --> 00:16:09.900
PT and cancel and the Event click,

261
00:16:09.900 --> 00:16:11.750
which is exactly the event that I want.

262
00:16:11.750 --> 00:16:14.970
So here I can simply say,

263
00:16:14.970 --> 00:16:15.850
unload,

264
00:16:15.850 --> 00:16:24.500
followed by the name of our form and to test it.

265
00:16:24.500 --> 00:16:26.290
I'm just going to go back to a word,

266
00:16:26.290 --> 00:16:33.980
Mac Rose and run the show for Macron that brings up with full and then I can cancel.

267
00:16:33.980 --> 00:16:40.760
So those changes of automatically been made to the document itself.

268
00:16:40.760 --> 00:16:43.310
And if I were now too quick word,

269
00:16:43.310 --> 00:16:47.350
it's gonna ask me two things.

270
00:16:47.350 --> 00:16:50.280
Do I want to save the changes to ref,

271
00:16:50.280 --> 00:16:53.230
which is the documents I've currently got open so I'll say yes.

272
00:16:53.230 --> 00:16:55.350
But it's also going to ask me,

273
00:16:55.350 --> 00:16:59.460
Do I want to save my changes to project examples?

274
00:16:59.460 --> 00:17:01.760
And again I will say yes.

275
00:17:01.760 --> 00:17:16.370
A project is simply the container for all code associated with a document or template.

276
00:17:16.370 --> 00:17:19.900
Within each project.

277
00:17:19.900 --> 00:17:26.930
VB a code may be implemented in four ways by creating macros within a module.

278
00:17:26.930 --> 00:17:35.890
My writing event handlers in the this document object my writing event handlers for user

279
00:17:35.890 --> 00:17:41.550
form controls and by creating class modules.

280
00:17:41.550 --> 00:17:52.210
And remember any document which contains VB a code must be saved is a macro naval documents

281
00:17:52.210 --> 00:17:52.210
.

