WEBVTT
ï»¿1
00:00:00.000 --> 00:00:14.060
as well as using a counter to control Lupin.

2
00:00:14.060 --> 00:00:17.720
It's also possible to use a condition in V B.

3
00:00:17.720 --> 00:00:17.860
A.

4
00:00:17.860 --> 00:00:20.770
There are two structures which allow this conditional looping.

5
00:00:20.770 --> 00:00:22.500
In this video.

6
00:00:22.500 --> 00:00:25.980
We'll look at the first of these doom loop structure.

7
00:00:25.980 --> 00:00:49.750
The Do Loop statement has a couple of different formats,

8
00:00:49.750 --> 00:00:53.450
and this means that it's quite a flexible statement.

9
00:00:53.450 --> 00:00:57.110
It could be used in place of the four Next Leap,

10
00:00:57.110 --> 00:00:58.750
which we saw in the last video,

11
00:00:58.750 --> 00:01:01.090
and also the Wild Wend Loop,

12
00:01:01.090 --> 00:01:02.650
which will see in the next video.

13
00:01:02.650 --> 00:01:04.430
However,

14
00:01:04.430 --> 00:01:06.280
there is one trick that it has,

15
00:01:06.280 --> 00:01:08.250
which the other forms of Luke don't.

16
00:01:08.250 --> 00:01:14.540
And that is it has the ability to ensure that the statements inside the loop will be

17
00:01:14.540 --> 00:01:16.350
executed at least once.

18
00:01:16.350 --> 00:01:23.280
And it's this unique feature which the other forms of Luke and can't do that will focus on

19
00:01:23.280 --> 00:01:24.150
in this video.

20
00:01:24.150 --> 00:01:27.010
So let's write a macro.

21
00:01:27.010 --> 00:01:28.050
What,

22
00:01:28.050 --> 00:01:34.790
and we'll just cool it do loop statement and then I'll start across the procedure of you.

23
00:01:34.790 --> 00:01:41.060
Now we've seen several times how you can display an input box and get the user to Anderson

24
00:01:41.060 --> 00:01:41.560
data,

25
00:01:41.560 --> 00:01:47.940
which you then process one of the things you could do with a loop is to repeatedly display

26
00:01:47.940 --> 00:01:55.150
and input box until the user either click the cancel button or enters an appropriate value

27
00:01:55.150 --> 00:01:55.150
.

28
00:01:55.150 --> 00:01:56.560
So,

29
00:01:56.560 --> 00:01:57.590
in this example,

30
00:01:57.590 --> 00:02:03.850
will say that we want the user to end a company email or click the cancel button.

31
00:02:03.850 --> 00:02:13.190
So let's declare of a string variable str email in which will capture the user's email

32
00:02:13.190 --> 00:02:13.750
address,

33
00:02:13.750 --> 00:02:22.050
has string and let's then define a constant indicated how we want the email address toe end

34
00:02:22.050 --> 00:02:30.900
so we'll have to call me str end as string and then we've got a set it because it's a

35
00:02:30.900 --> 00:02:31.790
constant.

36
00:02:31.790 --> 00:02:37.550
Let's say it has to end with at our company dot com.

37
00:02:37.550 --> 00:02:39.800
So that's first of all,

38
00:02:39.800 --> 00:02:41.550
cater for the cancel button.

39
00:02:41.550 --> 00:02:45.050
So here's the basic structure that we'll be looking at.

40
00:02:45.050 --> 00:02:56.460
So it's do then the statements that you want performed then Luke and you can either use

41
00:02:56.460 --> 00:03:03.110
while or until so you can say Luke until a conditional testes,

42
00:03:03.110 --> 00:03:04.740
true or loop,

43
00:03:04.740 --> 00:03:07.050
while a conditional test is true.

44
00:03:07.050 --> 00:03:11.950
So let's leave it as while it makes very little difference for our purposes.

45
00:03:11.950 --> 00:03:21.350
So the test that will need is that str email is not equal to null string,

46
00:03:21.350 --> 00:03:25.940
so we can either put two double quotation marks with nothing between them.

47
00:03:25.940 --> 00:03:38.830
Or we could use VB null string and then inside the Luke will populate our str email using

48
00:03:38.830 --> 00:03:39.750
input books.

49
00:03:39.750 --> 00:03:45.050
No.

50
00:03:45.050 --> 00:03:48.950
So let's test it.

51
00:03:48.950 --> 00:03:55.650
The scientists and nonsense click OK,

52
00:03:55.650 --> 00:03:56.910
you'll see.

53
00:03:56.910 --> 00:04:07.050
Back comes the input box and when I can So then this statement ceases to be true.

54
00:04:07.050 --> 00:04:10.750
Str email does equaled a null string.

55
00:04:10.750 --> 00:04:12.650
Hence the loop will end.

56
00:04:12.650 --> 00:04:19.040
So now we need to change our test into a compound test because we want to test for two

57
00:04:19.040 --> 00:04:19.650
things.

58
00:04:19.650 --> 00:04:26.850
We want to test that str email does not equal the null string and also that str email

59
00:04:26.850 --> 00:04:29.650
There's no end with this strength.

60
00:04:29.650 --> 00:04:36.180
A simple way of testing that one string ends with another stream is to use the right

61
00:04:36.180 --> 00:04:36.790
function.

62
00:04:36.790 --> 00:04:39.270
If you've used Microsoft Excel,

63
00:04:39.270 --> 00:04:42.750
you may well have come across the functions left and right,

64
00:04:42.750 --> 00:04:48.050
so they will read a number of characters starting from the left or starting from the right

65
00:04:48.050 --> 00:04:48.050
.

66
00:04:48.050 --> 00:04:53.050
The number of characters to be read is obviously the number of characters in this string.

67
00:04:53.050 --> 00:04:55.050
We could heart code it.

68
00:04:55.050 --> 00:04:57.350
There are 15 characters in the string,

69
00:04:57.350 --> 00:04:59.450
so we could just put 15.

70
00:04:59.450 --> 00:05:04.590
But it would be better to use a function to do this so that if this string ever gets

71
00:05:04.590 --> 00:05:05.280
changed,

72
00:05:05.280 --> 00:05:08.450
the function will still extract the correct length.

73
00:05:08.450 --> 00:05:15.150
So we'll need and here because we want both conditions to be true and then it's right.

74
00:05:15.150 --> 00:05:24.120
The string that we're looking inside is str email length The number of characters that you

75
00:05:24.120 --> 00:05:27.710
want starting from the right instead of 15.

76
00:05:27.710 --> 00:05:36.400
We use the land function and again you may remember this from using excel functions and the

77
00:05:36.400 --> 00:05:36.910
thing we want.

78
00:05:36.910 --> 00:05:48.150
The length off is str and this statement will return the last 15 characters of the email

79
00:05:48.150 --> 00:05:49.660
that they've entered.

80
00:05:49.660 --> 00:05:59.050
We now want to compare those characters with str end so we put not equal to str end.

81
00:05:59.050 --> 00:06:01.700
So in other words,

82
00:06:01.700 --> 00:06:09.150
as soon as the last 15 characters of str email are equal to str and then will end,

83
00:06:09.150 --> 00:06:10.520
I'll do so.

84
00:06:10.520 --> 00:06:12.550
The user now has two ways of ending the loop.

85
00:06:12.550 --> 00:06:16.650
They can either click the cancel button and generate the null string,

86
00:06:16.650 --> 00:06:21.100
or they can enter a string which ends with at our company.

87
00:06:21.100 --> 00:06:24.300
Don't come on either of those two locals,

88
00:06:24.300 --> 00:06:25.150
the loot end.

89
00:06:25.150 --> 00:06:29.470
So let's test it so again,

90
00:06:29.470 --> 00:06:32.850
I'll just put some nonsense and it's no happy.

91
00:06:32.850 --> 00:06:36.020
We know that the cancel button works.

92
00:06:36.020 --> 00:06:40.380
So if I just put grants at our company,

93
00:06:40.380 --> 00:06:43.150
don't come then it's happy.

94
00:06:43.150 --> 00:06:46.510
So having received that email from them,

95
00:06:46.510 --> 00:06:54.900
let's just do something with it So we can test whether they actually entered an email or

96
00:06:54.900 --> 00:06:57.150
whether they simply click on cancel.

97
00:06:57.150 --> 00:06:58.960
So here we can say,

98
00:06:58.960 --> 00:07:01.450
if just paste that in.

99
00:07:01.450 --> 00:07:09.260
So now that's going to deat equal to rather than not equal to So in other words,

100
00:07:09.260 --> 00:07:19.090
Now we want to say If str email does end with str End Ben and history books unless this

101
00:07:19.090 --> 00:07:35.150
that's gonna be the report will be he mailed to the address ampersand str even and if

102
00:07:35.150 --> 00:07:39.650
that's just company that again and then tested.

103
00:07:39.650 --> 00:07:46.760
So we saved grams at our company.

104
00:07:46.760 --> 00:07:47.450
Don't come.

105
00:07:47.450 --> 00:07:52.360
Report will be emailed to the address Grant and our company.

106
00:07:52.360 --> 00:07:52.950
You don't calm.

107
00:07:52.950 --> 00:07:59.070
So just to point out then the thing that makes this structure unique is the fact that

108
00:07:59.070 --> 00:08:00.050
whatever happens,

109
00:08:00.050 --> 00:08:03.410
they will see the input box at least once.

110
00:08:03.410 --> 00:08:15.000
It's also illegal to put the while at the top so we could say do while And of course,

111
00:08:15.000 --> 00:08:15.850
if we do,

112
00:08:15.850 --> 00:08:24.550
absolutely nothing happens because the test proves to be false from the start,

113
00:08:24.550 --> 00:08:27.600
so this line doesn't actually get executed.

114
00:08:27.600 --> 00:08:31.050
So this is the style of Do Loop,

115
00:08:31.050 --> 00:08:34.850
which is unique among the three different Vehbi,

116
00:08:34.850 --> 00:08:35.000
eh?

117
00:08:35.000 --> 00:08:36.270
Lupin formats.

118
00:08:36.270 --> 00:08:42.350
The fact that if you put the test with the loop statements rather than the do statement,

119
00:08:42.350 --> 00:08:44.670
whatever statements are inside,

120
00:08:44.670 --> 00:08:48.900
the loop will always be guaranteed to execute at least once.

121
00:08:48.900 --> 00:08:59.110
Do Loop statement has a variety of formats.

122
00:08:59.110 --> 00:09:00.550
However,

123
00:09:00.550 --> 00:09:06.590
the structure that makes it unique is that it can ensure that the actions inside the loop

124
00:09:06.590 --> 00:09:15.250
have performed at least once to obtain this functionality with the do loop,

125
00:09:15.250 --> 00:09:30.800
use the syntax do statements while test condition oh do statements until test condition.

