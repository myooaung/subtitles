1
00:00:00,000 --> 00:00:13,050
before we take a closer look at use of forms,

2
00:00:13,050 --> 00:00:16,100
Let's look at words built in dialogues.

3
00:00:16,100 --> 00:00:17,500
Very often.

4
00:00:17,500 --> 00:00:21,470
The functionality that you're looking for already exists in Microsoft Word,

5
00:00:21,470 --> 00:00:27,630
so you can simply avail yourself of these built in dialogues from than having to reinvent

6
00:00:27,630 --> 00:00:28,140
the wheel,

7
00:00:28,140 --> 00:00:29,880
create your own user form.

8
00:00:29,880 --> 00:00:37,580
Let's go back to the word VB,

9
00:00:37,580 --> 00:00:42,250
a train in template and for our first example,

10
00:00:42,250 --> 00:00:51,640
we're going to use the insert date time dialogue to allow the user to optionally insert the

11
00:00:51,640 --> 00:00:55,850
date and time in their chosen format is part of our macron.

12
00:00:55,850 --> 00:01:11,750
So let's open up the Section seven module and create our first macro.

13
00:01:11,750 --> 00:01:18,450
So we're in tutorial three Macro A.

14
00:01:18,450 --> 00:01:19,660
That's cool.

15
00:01:19,660 --> 00:01:22,550
It built in dialogues.

16
00:01:22,550 --> 00:01:27,740
So in this simple macro will create a document,

17
00:01:27,740 --> 00:01:34,060
asked the user for a title but also display the insert date time dialogue.

18
00:01:34,060 --> 00:01:35,330
So if they want to,

19
00:01:35,330 --> 00:01:38,350
they can insert the date using their preferred format.

20
00:01:38,350 --> 00:01:53,550
So we'll digressive variables and finally,

21
00:01:53,550 --> 00:01:54,320
ah,

22
00:01:54,320 --> 00:01:59,040
dialogue Tlg dates as dialogue.

23
00:01:59,040 --> 00:02:04,050
Then let's create a new documents,

24
00:02:04,050 --> 00:02:16,250
and then we can set our Engy new to the range of that document.

25
00:02:16,250 --> 00:02:32,450
Let's then ask the user for a title and let's insert the title into the document,

26
00:02:32,450 --> 00:02:41,520
followed by a carriage return.

27
00:02:41,520 --> 00:02:43,250
And finally,

28
00:02:43,250 --> 00:02:45,550
let's deploy the head in one style.

29
00:02:45,550 --> 00:02:55,310
So now we want to give the use of the option of insert in the date,

30
00:02:55,310 --> 00:02:58,650
and obviously we wanted to go after the head in.

31
00:02:58,650 --> 00:03:04,320
So this time we do need to use the selection object to position the cursor at the end of

32
00:03:04,320 --> 00:03:05,010
the document.

33
00:03:05,010 --> 00:03:06,380
To do that,

34
00:03:06,380 --> 00:03:10,050
we can use the programmatic equivalent of control end,

35
00:03:10,050 --> 00:03:12,300
which is selection,

36
00:03:12,300 --> 00:03:16,520
not end key on.

37
00:03:16,520 --> 00:03:20,600
Then the unit would be W D story.

38
00:03:20,600 --> 00:03:22,530
And finally,

39
00:03:22,530 --> 00:03:26,550
let's set the style to normal.

40
00:03:26,550 --> 00:03:31,040
Now we're ready to display the dialogue.

41
00:03:31,040 --> 00:03:36,750
It's a property of the application object,

42
00:03:36,750 --> 00:03:42,560
and when you type the oven in brackets,

43
00:03:42,560 --> 00:03:46,250
water completion displays all of the constant names for you.

44
00:03:46,250 --> 00:03:56,250
The Dialogues collection is also member of Global's.

45
00:03:56,250 --> 00:04:00,250
This means that application dot is optional,

46
00:04:00,250 --> 00:04:03,250
so you'll probably find its most often admitted.

47
00:04:03,250 --> 00:04:09,250
Having placed the customer in the correct position.

48
00:04:09,250 --> 00:04:09,940
Well,

49
00:04:09,940 --> 00:04:14,300
we then have to do is to display the dialogue and make it available to the user.

50
00:04:14,300 --> 00:04:15,820
To do this,

51
00:04:15,820 --> 00:04:19,750
we simply say the LG dates not show,

52
00:04:19,750 --> 00:04:24,410
and from there the dialogue is displayed and behaves normally.

53
00:04:24,410 --> 00:04:26,290
If they use a cancels,

54
00:04:26,290 --> 00:04:27,200
nothing happens.

55
00:04:27,200 --> 00:04:28,850
If they click OK,

56
00:04:28,850 --> 00:04:32,850
then whatever date style they've chosen will be inserted.

57
00:04:32,850 --> 00:04:37,950
So let's save and let's test it.

58
00:04:37,950 --> 00:04:54,050
Let's choose that goes out of style and let's look at the results.

59
00:04:54,050 --> 00:04:58,450
Stairs are headed and there's our chosen date.

60
00:04:58,450 --> 00:05:04,370
V B.

61
00:05:04,370 --> 00:05:11,000
A also offers an alternative method of displaying a dialogue whereby when the user clicks

62
00:05:11,000 --> 00:05:11,650
okay,

63
00:05:11,650 --> 00:05:15,450
the options they've chosen aren't actually executed.

64
00:05:15,450 --> 00:05:16,880
However,

65
00:05:16,880 --> 00:05:19,150
those options are available to you,

66
00:05:19,150 --> 00:05:19,950
the programmer,

67
00:05:19,950 --> 00:05:24,150
so you can actually read them and make use of them as you see fit.

68
00:05:24,150 --> 00:05:29,150
So let's write a second macro and look at this type of functionality.

69
00:05:29,150 --> 00:05:33,050
The example we're going to take is the user name.

70
00:05:33,050 --> 00:05:39,370
Let's say that our macro will check the word user name and then insist that the user has to

71
00:05:39,370 --> 00:05:42,550
enter their first name and last name as the user name.

72
00:05:42,550 --> 00:05:45,600
So if it looks as though it's got the wrong format,

73
00:05:45,600 --> 00:05:50,990
will automatically display the options for them to actually enter the correctly formatted

74
00:05:50,990 --> 00:05:51,550
using name.

75
00:05:51,550 --> 00:05:59,710
So basically,

76
00:05:59,710 --> 00:06:04,750
we want this dialogue to appear for them to actually make the necessary choices.

77
00:06:04,750 --> 00:06:18,740
Let's call this one dialogue without executes.

78
00:06:18,740 --> 00:06:22,340
So let's dim our dialogue.

79
00:06:22,340 --> 00:06:24,610
Tlg in vote,

80
00:06:24,610 --> 00:06:26,940
Let's say as dialogue.

81
00:06:26,940 --> 00:06:33,350
So the first thing we need to do let's just switch to procedure view here.

82
00:06:33,350 --> 00:06:40,150
The first thing we need to do is to test whether the user name has the correct format.

83
00:06:40,150 --> 00:06:41,690
And to do that,

84
00:06:41,690 --> 00:06:44,450
we'll write a separate function to do the testing.

85
00:06:44,450 --> 00:06:46,360
So let's say,

86
00:06:46,360 --> 00:06:50,940
if our function on let's call our function validate named,

87
00:06:50,940 --> 00:06:59,350
this function will return a Boolean value so we can say if validate name and then in

88
00:06:59,350 --> 00:07:00,180
brackets,

89
00:07:00,180 --> 00:07:04,630
as the argument for our function will pass Application.

90
00:07:04,630 --> 00:07:08,900
Don't use the name if this equals false,

91
00:07:08,900 --> 00:07:12,750
then will display a message box.

92
00:07:12,750 --> 00:07:14,950
Here's in the prompt,

93
00:07:14,950 --> 00:07:17,420
please,

94
00:07:17,420 --> 00:07:24,350
and first and last names as word your name.

95
00:07:24,350 --> 00:07:33,450
And let's use the buttons for an ITER with BB information.

96
00:07:33,450 --> 00:07:38,770
Let's also change application.

97
00:07:38,770 --> 00:07:43,050
Don't use the name as a sort of secondary prompt,

98
00:07:43,050 --> 00:07:52,130
so application don't use the name equals so as a prompt.

99
00:07:52,130 --> 00:07:53,640
When we display the dialogue,

100
00:07:53,640 --> 00:07:57,170
we'll just have it saying first name,

101
00:07:57,170 --> 00:07:58,060
space,

102
00:07:58,060 --> 00:07:59,550
last name,

103
00:07:59,550 --> 00:08:06,070
and each time we display the dialogue that prompt will stay there to tell the user what we

104
00:08:06,070 --> 00:08:06,750
waiting for?

105
00:08:06,750 --> 00:08:10,600
So now we're ready to actually display the dialogue.

106
00:08:10,600 --> 00:08:11,710
So he said,

107
00:08:11,710 --> 00:08:18,030
the LG Info Equal Teoh dialogues.

108
00:08:18,030 --> 00:08:19,410
And the trick is,

109
00:08:19,410 --> 00:08:20,100
of course,

110
00:08:20,100 --> 00:08:22,070
remember in these or finding them.

111
00:08:22,070 --> 00:08:26,150
I'll show you in a moment where you could look into help coming along.

112
00:08:26,150 --> 00:08:36,950
So in tools options User in for and what we do This time,

113
00:08:36,950 --> 00:08:40,750
instead of saying theology info dot show,

114
00:08:40,750 --> 00:08:43,050
as we did last time,

115
00:08:43,050 --> 00:08:47,150
we will now say D LG info dot display.

116
00:08:47,150 --> 00:08:54,500
And the difference is that the display method will not cause any execution of the options

117
00:08:54,500 --> 00:08:55,350
within the dialogue.

118
00:08:55,350 --> 00:08:57,150
When the user clicks okay,

119
00:08:57,150 --> 00:09:00,450
nothing will actually happen in the word interface,

120
00:09:00,450 --> 00:09:01,720
however,

121
00:09:01,720 --> 00:09:06,250
whatever options they've chosen are actually available for us to use,

122
00:09:06,250 --> 00:09:11,750
said STI L g in for don't display.

123
00:09:11,750 --> 00:09:14,350
So let's say what we've gone so far,

124
00:09:14,350 --> 00:09:15,740
and at this point,

125
00:09:15,740 --> 00:09:20,550
I'll just show you how you can actually check all of this rather cryptic syntax.

126
00:09:20,550 --> 00:09:24,850
So when you go into the BB a help,

127
00:09:24,850 --> 00:09:34,050
you need the word develop a reference and then concepts,

128
00:09:34,050 --> 00:09:51,030
and then here just to get the sentence you can use built in dialogue box argument lists and

129
00:09:51,030 --> 00:09:52,570
here you've got two columns.

130
00:09:52,570 --> 00:09:57,850
So these Airil the constant names each constant,

131
00:09:57,850 --> 00:10:00,350
represents one of words built in dialogues.

132
00:10:00,350 --> 00:10:05,730
And then the argument lists relate to the options,

133
00:10:05,730 --> 00:10:08,950
the names off the options within the document.

134
00:10:08,950 --> 00:10:13,340
So if we scroll down to the one that we've just been working with,

135
00:10:13,340 --> 00:10:17,100
so here it is,

136
00:10:17,100 --> 00:10:22,420
you'll see that we have name,

137
00:10:22,420 --> 00:10:24,150
initials address.

138
00:10:24,150 --> 00:10:24,740
And,

139
00:10:24,740 --> 00:10:25,400
of course,

140
00:10:25,400 --> 00:10:27,550
the one that we're after is going to be named.

141
00:10:27,550 --> 00:10:33,730
Okay,

142
00:10:33,730 --> 00:10:39,650
so we now want to persistently display the dialogue until the user enters a valid user name

143
00:10:39,650 --> 00:10:39,650
.

144
00:10:39,650 --> 00:10:44,150
We could do this by put in this line inside a loop.

145
00:10:44,150 --> 00:10:50,950
I do and just tap the line in and then close it with loop.

146
00:10:50,950 --> 00:10:55,050
We then need a while or on until test.

147
00:10:55,050 --> 00:10:56,660
Let's use until,

148
00:10:56,660 --> 00:11:03,350
for argument's sake and the test is going to be controlled by our validate name function,

149
00:11:03,350 --> 00:11:05,850
the function which will write in just a moment.

150
00:11:05,850 --> 00:11:13,050
So until validates name on the parameter that we evaluated is gonna be d.

151
00:11:13,050 --> 00:11:20,940
L g info dot name just to remind you why we're inside this dialogue.

152
00:11:20,940 --> 00:11:25,200
And there are three parameters which the user can change.

153
00:11:25,200 --> 00:11:26,220
And of course,

154
00:11:26,220 --> 00:11:29,550
the name parameter will represent the user name.

155
00:11:29,550 --> 00:11:34,150
So until the validate function returns true,

156
00:11:34,150 --> 00:11:40,810
we'll keep Loop ID after the loot.

157
00:11:40,810 --> 00:11:43,590
Completes with their need to use the execute,

158
00:11:43,590 --> 00:11:46,150
function off the dialogue object.

159
00:11:46,150 --> 00:11:51,850
And this is because we've used display to display it rather than show.

160
00:11:51,850 --> 00:11:54,050
So when we use display,

161
00:11:54,050 --> 00:11:57,850
basically there's no execute functionality.

162
00:11:57,850 --> 00:12:03,900
So here we now need to say D LG info don't execute.

163
00:12:03,900 --> 00:12:07,650
So now all we need to do is to write the function.

164
00:12:07,650 --> 00:12:10,000
So I'm going to switch back to full body,

165
00:12:10,000 --> 00:12:12,830
all of you and a scroll to the bottom half.

166
00:12:12,830 --> 00:12:19,950
So this is gonna be private function validates name,

167
00:12:19,950 --> 00:12:23,460
which requires a single string parameter.

168
00:12:23,460 --> 00:12:31,210
Let's call it str name and which returns a Boolean value to do the validation.

169
00:12:31,210 --> 00:12:34,050
I'm going to use the split function,

170
00:12:34,050 --> 00:12:40,350
which takes a string and converts it to an array using the D limiter you specify.

171
00:12:40,350 --> 00:12:46,660
So our deal emitter will be a space because we're looking for two words separated by a

172
00:12:46,660 --> 00:12:47,250
space.

173
00:12:47,250 --> 00:12:50,830
Let's declare the array that we're going to use.

174
00:12:50,830 --> 00:12:57,750
Let's call it a str names and then open and close parentheses to indicate it's an array.

175
00:12:57,750 --> 00:13:04,510
This will be a dynamic array because We're not sure how many elements were going to end up

176
00:13:04,510 --> 00:13:07,750
with and that will be string.

177
00:13:07,750 --> 00:13:10,250
Then we populated.

178
00:13:10,250 --> 00:13:14,450
Str names equal split.

179
00:13:14,450 --> 00:13:18,250
The thing was split in is str name.

180
00:13:18,250 --> 00:13:27,030
That's the parameter that's been populated when the function is called and the D limiter is

181
00:13:27,030 --> 00:13:27,950
a space.

182
00:13:27,950 --> 00:13:35,040
We can then use the you bound function to test whether we've got the two items that were

183
00:13:35,040 --> 00:13:36,050
actually looking for.

184
00:13:36,050 --> 00:13:44,290
So we could say if you bound str names equals one.

185
00:13:44,290 --> 00:13:45,070
Because,

186
00:13:45,070 --> 00:13:45,850
of course,

187
00:13:45,850 --> 00:13:47,090
if it does,

188
00:13:47,090 --> 00:13:53,950
that means it's got two items Item zero on item one because the default lower index for an

189
00:13:53,950 --> 00:14:00,720
array is zero because we ourselves haven't overridden that that default behavior will kick

190
00:14:00,720 --> 00:14:04,550
it as well as the array having the right number of items.

191
00:14:04,550 --> 00:14:13,000
We also need to test that we haven't got this string past is the parameter because that

192
00:14:13,000 --> 00:14:19,080
would indicate that the user has simply got confused and left the prompt first name last

193
00:14:19,080 --> 00:14:21,350
name in the user name books.

194
00:14:21,350 --> 00:14:26,250
So let's copy that and just use a compound statement.

195
00:14:26,250 --> 00:14:35,650
So and STL name are parameter is not equal to control V to paste bed.

196
00:14:35,650 --> 00:14:38,790
So if those two things are true,

197
00:14:38,790 --> 00:14:39,850
it looks good.

198
00:14:39,850 --> 00:14:43,950
But before we go back and return a true value,

199
00:14:43,950 --> 00:14:48,850
we just need to test the length so we can do a one line if statement to that.

200
00:14:48,850 --> 00:14:52,570
If Len a.

201
00:14:52,570 --> 00:14:56,950
Str names brackets zero that's the first item.

202
00:14:56,950 --> 00:15:01,390
Closed brackets for lend is greater than one,

203
00:15:01,390 --> 00:15:08,180
and Len str names one.

204
00:15:08,180 --> 00:15:12,840
The second item also have has a length greater than one.

205
00:15:12,840 --> 00:15:18,340
Then it's safe to return true and to return a value,

206
00:15:18,340 --> 00:15:21,530
you simply put the name of the function badly.

207
00:15:21,530 --> 00:15:25,190
They name equal to the value in question,

208
00:15:25,190 --> 00:15:28,570
which will be true else.

209
00:15:28,570 --> 00:15:36,750
Validate name equals falls and if so,

210
00:15:36,750 --> 00:15:38,850
we're now ready to test our macro,

211
00:15:38,850 --> 00:15:41,150
let's just save our changes.

212
00:15:41,150 --> 00:15:46,050
Let's make sure we've got an invalid name in there to start with,

213
00:15:46,050 --> 00:15:52,450
so I'll just copy my initials.

214
00:15:52,450 --> 00:15:54,620
So you know,

215
00:15:54,620 --> 00:15:56,550
I got an invalid user name in there.

216
00:15:56,550 --> 00:16:07,150
Cause out macro to enter the prompt and go into the loop for us.

217
00:16:07,150 --> 00:16:12,650
I'm comes our MSG box,

218
00:16:12,650 --> 00:16:15,350
and when we click OK,

219
00:16:15,350 --> 00:16:18,950
in goes out prompt.

220
00:16:18,950 --> 00:16:27,200
So let's put an invalid name in there and back comes the dialogue until eventually were

221
00:16:27,200 --> 00:16:30,350
forced to put in a valid name.

222
00:16:30,350 --> 00:16:33,780
And when we click OK,

223
00:16:33,780 --> 00:16:36,350
the execute then kicks in.

224
00:16:36,350 --> 00:16:38,790
So if I checked the user name again,

225
00:16:38,790 --> 00:16:43,350
you'll see it has actually been changed.

226
00:16:43,350 --> 00:17:01,710
The application dot Dialogues collection contains Microsoft words built in dialogues,

227
00:17:01,710 --> 00:17:06,510
each identified by a W D Word dialogue Constant index,

228
00:17:06,510 --> 00:17:07,950
for example,

229
00:17:07,950 --> 00:17:12,550
Dialogues WD dialogue Insert date time.

230
00:17:12,550 --> 00:17:18,840
If the dialogue dot show method is used to display a dialogue,

231
00:17:18,840 --> 00:17:23,850
it behaves normally and executes the relevant commands when the user clicks.

232
00:17:23,850 --> 00:17:24,430
Okay.

233
00:17:24,430 --> 00:17:29,300
If the dialogue dot display method is used,

234
00:17:29,300 --> 00:17:32,260
no commands are executed when the user clicks.

235
00:17:32,260 --> 00:17:32,780
Okay,

236
00:17:32,780 --> 00:17:34,330
however,

237
00:17:34,330 --> 00:17:37,160
values entered in the dialogue can be retrieved,

238
00:17:37,160 --> 00:17:45,290
using the constant names from the argument list to verify the constant names in the

239
00:17:45,290 --> 00:17:46,200
argument list.

240
00:17:46,200 --> 00:17:47,870
For each of words dialogues,

241
00:17:47,870 --> 00:17:52,240
see the help topic Word 2013.

242
00:17:52,240 --> 00:17:58,110
Developer Reference Concepts built in dialogue box argument lists

