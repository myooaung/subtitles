1
00:00:00,000 --> 00:00:11,350
In the last video,

2
00:00:11,350 --> 00:00:16,570
we learned that each object within the word object model as members,

3
00:00:16,570 --> 00:00:22,840
which consists of the methods and properties off that object methods are essentially

4
00:00:22,840 --> 00:00:23,670
functions.

5
00:00:23,670 --> 00:00:28,170
They're the actions which can be performed on that particular object.

6
00:00:28,170 --> 00:00:30,240
In this video,

7
00:00:30,240 --> 00:00:35,430
we'll look at it more closely at the syntax involved When working with object methods.

8
00:00:35,430 --> 00:00:42,110
Let's go into the Section six model.

9
00:00:42,110 --> 00:00:44,570
Let's just create a macro,

10
00:00:44,570 --> 00:00:48,590
which will enable us to discuss some of the syntax features involved.

11
00:00:48,590 --> 00:00:51,250
When you're working with object methods,

12
00:00:51,250 --> 00:00:58,050
let's just call it object methods.

13
00:00:58,050 --> 00:01:02,460
So in the macro will create.

14
00:01:02,460 --> 00:01:08,850
A new document will display a message telling the user that this macro may take a long time

15
00:01:08,850 --> 00:01:08,850
.

16
00:01:08,850 --> 00:01:10,080
Well,

17
00:01:10,080 --> 00:01:10,250
then,

18
00:01:10,250 --> 00:01:15,940
ask the user whether they want to save the document that al mackerel will create as a PdF

19
00:01:15,940 --> 00:01:16,450
file.

20
00:01:16,450 --> 00:01:18,230
If they aren't,

21
00:01:18,230 --> 00:01:25,640
say yes will then display a message confirming that the macro will be saved as a PdF so

22
00:01:25,640 --> 00:01:27,750
will begin by declaring its and variables.

23
00:01:27,750 --> 00:01:34,450
This variable will hold a reference to the document will create.

24
00:01:34,450 --> 00:01:37,060
And then we need to declare a variable,

25
00:01:37,060 --> 00:01:38,850
which will hold an answer to the question.

26
00:01:38,850 --> 00:01:41,450
Would you like to create a Pdf file.

27
00:01:41,450 --> 00:01:47,220
We've already looked at using the input box function to get the user toe arms for a

28
00:01:47,220 --> 00:01:47,850
question.

29
00:01:47,850 --> 00:01:49,250
However,

30
00:01:49,250 --> 00:01:51,690
if the question is simply a yes,

31
00:01:51,690 --> 00:01:52,150
no,

32
00:01:52,150 --> 00:01:56,250
you can actually use the MSG box function to ask the question.

33
00:01:56,250 --> 00:01:57,660
However,

34
00:01:57,660 --> 00:02:03,840
the answer that's generated is actually stored as a long integer rather than as a piece of

35
00:02:03,840 --> 00:02:04,450
text.

36
00:02:04,450 --> 00:02:06,490
So for that reason,

37
00:02:06,490 --> 00:02:17,270
will dim l N g answer as long I long integer So we've seen how you can create a new

38
00:02:17,270 --> 00:02:17,950
documents.

39
00:02:17,950 --> 00:02:23,590
We've also discussed briefly the usefulness have put in a reference of the new document

40
00:02:23,590 --> 00:02:25,450
that you create into a variable.

41
00:02:25,450 --> 00:02:30,510
This then provides you with a mechanism for manipulating the document further with your

42
00:02:30,510 --> 00:02:30,950
code.

43
00:02:30,950 --> 00:02:37,250
So we used the keyword set variable name equal to,

44
00:02:37,250 --> 00:02:41,780
and then we simply put a reference to any object off the appropriate site.

45
00:02:41,780 --> 00:02:50,450
So the statement documents Stop Ad is obviously used in the ad method,

46
00:02:50,450 --> 00:02:56,690
and the reason that we're able to use this method to assign a reference to a document into

47
00:02:56,690 --> 00:03:02,250
our document variable is because the ad method returns a value.

48
00:03:02,250 --> 00:03:03,440
In other words,

49
00:03:03,440 --> 00:03:05,430
it returns a document object,

50
00:03:05,430 --> 00:03:06,370
namely,

51
00:03:06,370 --> 00:03:09,650
the document that has just been created by the ad method.

52
00:03:09,650 --> 00:03:16,150
We can verify this by looking in the Object Browser view Object browser.

53
00:03:16,150 --> 00:03:22,800
George Cut F two and then because the documents object is obviously part of the Microsoft

54
00:03:22,800 --> 00:03:24,150
Word object model,

55
00:03:24,150 --> 00:03:27,600
which is word from the libraries drop down menu.

56
00:03:27,600 --> 00:03:35,250
Then let's just scroll down to find documents and the ad method.

57
00:03:35,250 --> 00:03:38,050
So when we look at this in tax,

58
00:03:38,050 --> 00:03:46,900
we can see after the various optional parameters that the ad method returns a document so

59
00:03:46,900 --> 00:03:47,190
that,

60
00:03:47,190 --> 00:03:52,750
as statements after the closing parenthesis tells us that there is a value being returned

61
00:03:52,750 --> 00:03:55,250
on its off the document type.

62
00:03:55,250 --> 00:04:02,450
So now we want to tell the user this macro may take a while,

63
00:04:02,450 --> 00:04:05,880
and we do that with M s tree box,

64
00:04:05,880 --> 00:04:09,510
which we've seen several times and what we've been doing so far.

65
00:04:09,510 --> 00:04:12,470
It's simply place in the first parameter,

66
00:04:12,470 --> 00:04:15,710
which is the only one that's obligatory senses.

67
00:04:15,710 --> 00:04:21,090
You can see all of the others here are enclosed in square brackets that tells us that

68
00:04:21,090 --> 00:04:22,000
they're all optional.

69
00:04:22,000 --> 00:04:26,620
So we've been simply put in a value for that first parameter,

70
00:04:26,620 --> 00:04:27,160
which,

71
00:04:27,160 --> 00:04:27,550
of course,

72
00:04:27,550 --> 00:04:28,450
is a string,

73
00:04:28,450 --> 00:04:31,950
and that's the type of data required by the prompt.

74
00:04:31,950 --> 00:04:33,950
Although this works fine,

75
00:04:33,950 --> 00:04:40,350
the best practice when supplying parameter values for a method is to actually put the name

76
00:04:40,350 --> 00:04:41,350
of each parameter.

77
00:04:41,350 --> 00:04:44,880
The benefit of this is greater clarity.

78
00:04:44,880 --> 00:04:49,590
Anyone look into the code could immediately see the value that each parameter relates to,

79
00:04:49,590 --> 00:04:54,150
and it also means that you can place the parameters in any order.

80
00:04:54,150 --> 00:04:58,810
If you simply supplying values without name in the parameters,

81
00:04:58,810 --> 00:05:03,250
then you must put them in the order stipulated by the function or method.

82
00:05:03,250 --> 00:05:05,530
And if you admit any,

83
00:05:05,530 --> 00:05:11,520
you still need to put the comma to separate the values so it becomes a bit more cryptic,

84
00:05:11,520 --> 00:05:14,650
especially where the method has a lot of parameters.

85
00:05:14,650 --> 00:05:20,830
So for the rest of this course will be main in allowed parameters on some occasions and

86
00:05:20,830 --> 00:05:26,030
slightly overkill because there's very little room for errors to creep in,

87
00:05:26,030 --> 00:05:28,200
and there's very little room for ambiguity.

88
00:05:28,200 --> 00:05:29,330
However,

89
00:05:29,330 --> 00:05:31,120
it is definitely best practice,

90
00:05:31,120 --> 00:05:36,350
and very few people in programming will ever accuse you of trying to be too clear.

91
00:05:36,350 --> 00:05:39,350
So instead of going straight into this string,

92
00:05:39,350 --> 00:05:41,790
we put the keyword prompts,

93
00:05:41,790 --> 00:05:43,970
as in the name of the promise,

94
00:05:43,970 --> 00:05:44,170
sir,

95
00:05:44,170 --> 00:05:50,660
and then we put Coulombe equals immediately followed by the value you want to assigns about

96
00:05:50,660 --> 00:05:51,280
parameter.

97
00:05:51,280 --> 00:06:04,850
So let's say this macro may take a while to complete and let's use the title parameter,

98
00:06:04,850 --> 00:06:10,450
so I'll put the continuation sign space underscore.

99
00:06:10,450 --> 00:06:24,420
I just have across a little bit title and let's just say use Ah in the Let's have 1/3

100
00:06:24,420 --> 00:06:25,050
parameter.

101
00:06:25,050 --> 00:06:30,550
So now I'm gonna use buttons and you'll see that I don't have to think about the order.

102
00:06:30,550 --> 00:06:34,550
I just do them in the order That's convenient for me as I'm type in them.

103
00:06:34,550 --> 00:06:42,510
The entry that you choose here will determine the style of dialogue that you end up with on

104
00:06:42,510 --> 00:06:44,120
the buttons that it contains,

105
00:06:44,120 --> 00:06:47,600
so we want really information.

106
00:06:47,600 --> 00:06:54,710
So here we use in the MSG box function purely to send information to the user,

107
00:06:54,710 --> 00:06:57,800
But it could also be used to capture information.

108
00:06:57,800 --> 00:07:00,350
Let's just have a look at this in tax.

109
00:07:00,350 --> 00:07:05,220
So this time we need to go to the V B,

110
00:07:05,220 --> 00:07:08,050
a library and the MSG Books,

111
00:07:08,050 --> 00:07:14,680
and you'll find them as G Boc's in the interaction objects on the reason we've never

112
00:07:14,680 --> 00:07:17,550
actually used interaction in our code.

113
00:07:17,550 --> 00:07:20,310
It's because it's also in the global's,

114
00:07:20,310 --> 00:07:33,330
so any element that in the global's doesn't need to be qualified.

115
00:07:33,330 --> 00:07:36,750
You don't have to say parent DOT member,

116
00:07:36,750 --> 00:07:42,920
you simply go straight to the member in question so the MSG box function doesn't need to

117
00:07:42,920 --> 00:07:44,050
have any prefix.

118
00:07:44,050 --> 00:07:45,740
Okay,

119
00:07:45,740 --> 00:07:50,710
so what we're looking at is the fact that it returns the value on the thing that tells us

120
00:07:50,710 --> 00:07:54,450
that is the as keyword following the close in parenthesis.

121
00:07:54,450 --> 00:07:57,300
So when we looked at documents don't add,

122
00:07:57,300 --> 00:07:59,850
that method was returned in a document object.

123
00:07:59,850 --> 00:08:06,050
Other methods might return a string or an integer or a long integer etcetera.

124
00:08:06,050 --> 00:08:10,300
The MSG box function returns a constant,

125
00:08:10,300 --> 00:08:15,150
and you could recognize these constants by the 1st 2 letters.

126
00:08:15,150 --> 00:08:17,760
So in the case of a visual,

127
00:08:17,760 --> 00:08:19,450
basic method will function.

128
00:08:19,450 --> 00:08:22,450
The constant will be prefixed with VB.

129
00:08:22,450 --> 00:08:25,150
In the case of Microsoft Word,

130
00:08:25,150 --> 00:08:27,750
the constant will be prefixed with W.

131
00:08:27,750 --> 00:08:28,250
D.

132
00:08:28,250 --> 00:08:30,750
In the case of Microsoft Excel,

133
00:08:30,750 --> 00:08:36,250
it will be prefixed by the letters X l and so forth.

134
00:08:36,250 --> 00:08:41,850
You'll also notice that the Barton's parameter also takes a constant.

135
00:08:41,850 --> 00:08:44,420
If we want to look at either of these,

136
00:08:44,420 --> 00:08:46,010
we can just click on these links,

137
00:08:46,010 --> 00:08:54,790
so these are the various parameters which are permissible for the VB msde Reebok style

138
00:08:54,790 --> 00:08:55,650
constant.

139
00:08:55,650 --> 00:09:00,950
Let's just hit the back button and then for the results,

140
00:09:00,950 --> 00:09:08,090
we have basically all of the various possible buttons that the use that may click on and

141
00:09:08,090 --> 00:09:15,160
which one is available will depend on the buttons parameter specified when we actually use

142
00:09:15,160 --> 00:09:15,750
the function.

143
00:09:15,750 --> 00:09:17,950
So we've used VB.

144
00:09:17,950 --> 00:09:18,290
Yes.

145
00:09:18,290 --> 00:09:18,650
No.

146
00:09:18,650 --> 00:09:26,020
So no prizes for guessing that d be no and baby yes will be the two parameters which our

147
00:09:26,020 --> 00:09:30,870
function will return When you click on them at the bottom Here,

148
00:09:30,870 --> 00:09:33,230
you'll see that baby Yes,

149
00:09:33,230 --> 00:09:38,450
actually equates to a six baby no equates to a seven.

150
00:09:38,450 --> 00:09:41,630
So which one would you are there trying to remember?

151
00:09:41,630 --> 00:09:44,900
It's definitely gonna be the constant name,

152
00:09:44,900 --> 00:09:45,410
isn't it?

153
00:09:45,410 --> 00:09:46,750
So we tight baby?

154
00:09:46,750 --> 00:09:47,310
Yes,

155
00:09:47,310 --> 00:09:49,950
depending on which one we want to test.

156
00:09:49,950 --> 00:09:56,950
So this time we're going to use this pattern set my variable equals M s tree box.

157
00:09:56,950 --> 00:09:58,970
And of course,

158
00:09:58,970 --> 00:10:01,560
the variable in question is LNG answer,

159
00:10:01,560 --> 00:10:06,120
which requires let rather than set on a course,

160
00:10:06,120 --> 00:10:07,450
Let is optional.

161
00:10:07,450 --> 00:10:13,090
Ellen Jones equals MSG books.

162
00:10:13,090 --> 00:10:20,710
This time we need parentheses and I'll explain in a moment when you do need parentheses and

163
00:10:20,710 --> 00:10:22,750
when you don't will move on to that shortly.

164
00:10:22,750 --> 00:10:27,620
So again we'll put our named parameters Prompt.

165
00:10:27,620 --> 00:10:32,860
Colon equals create PdF file.

166
00:10:32,860 --> 00:10:38,950
I will split out parameters onto several lines.

167
00:10:38,950 --> 00:10:51,440
So this time we need Phoebe.

168
00:10:51,440 --> 00:10:51,950
Yes,

169
00:10:51,950 --> 00:10:52,350
no,

170
00:10:52,350 --> 00:10:54,750
and we close out parentheses.

171
00:10:54,750 --> 00:10:56,470
Okay,

172
00:10:56,470 --> 00:11:02,320
so let's address the question of when you do need parentheses after a method on when you

173
00:11:02,320 --> 00:11:02,950
don't.

174
00:11:02,950 --> 00:11:09,230
The basic answer is you never need parentheses after the name of a function.

175
00:11:09,230 --> 00:11:16,580
So most programming languages every functional method will require parentheses after the

176
00:11:16,580 --> 00:11:19,410
name of the method in B B.

177
00:11:19,410 --> 00:11:19,710
A.

178
00:11:19,710 --> 00:11:20,450
You don't.

179
00:11:20,450 --> 00:11:22,120
However,

180
00:11:22,120 --> 00:11:26,170
that's only true if the method is the only thing on that line.

181
00:11:26,170 --> 00:11:31,050
The only piece of code on that line is the method with its parameters.

182
00:11:31,050 --> 00:11:35,120
As soon as you introduce another statement on the same line,

183
00:11:35,120 --> 00:11:40,650
you do need to have parentheses around the arguments off the method.

184
00:11:40,650 --> 00:11:41,840
So here,

185
00:11:41,840 --> 00:11:44,450
because we using message box on its own,

186
00:11:44,450 --> 00:11:45,850
there's nothing else on that line.

187
00:11:45,850 --> 00:11:51,250
We don't need parentheses to enclose the three arguments,

188
00:11:51,250 --> 00:11:53,450
but in this example,

189
00:11:53,450 --> 00:11:55,820
we've introduced another statement,

190
00:11:55,820 --> 00:11:57,390
the assignment statement,

191
00:11:57,390 --> 00:12:03,610
which assigns the result of the message box function to LNG answer and by introducing that

192
00:12:03,610 --> 00:12:11,180
extra statement is now obligatory that we have parentheses around the three arguments.

193
00:12:11,180 --> 00:12:14,740
And that's the simple rule in B B A.

194
00:12:14,740 --> 00:12:20,390
As to when you need parentheses after a method name and when you don't Okay,

195
00:12:20,390 --> 00:12:20,860
so now,

196
00:12:20,860 --> 00:12:22,410
Long variable,

197
00:12:22,410 --> 00:12:24,420
we now have an answer,

198
00:12:24,420 --> 00:12:31,550
which we can test so we can say if LNG owns equals.

199
00:12:31,550 --> 00:12:33,950
And although it's a long integer,

200
00:12:33,950 --> 00:12:38,850
we don't have to look up the actual number and use that in our test.

201
00:12:38,850 --> 00:12:41,950
We can use the constant name that we saw,

202
00:12:41,950 --> 00:12:42,500
which,

203
00:12:42,500 --> 00:12:42,770
if you,

204
00:12:42,770 --> 00:12:44,790
Landau was simply baby.

205
00:12:44,790 --> 00:12:45,350
Yes,

206
00:12:45,350 --> 00:12:51,230
if you are type in the names of these constants or E numbs in Yuma rations is there also

207
00:12:51,230 --> 00:12:51,650
called.

208
00:12:51,650 --> 00:12:54,470
It's always useful to type them in lower case,

209
00:12:54,470 --> 00:12:56,200
because when you leave the line,

210
00:12:56,200 --> 00:12:57,250
if they're correct,

211
00:12:57,250 --> 00:12:59,910
then the case will change automatically.

212
00:12:59,910 --> 00:13:02,060
So if you see the case remains lower,

213
00:13:02,060 --> 00:13:03,550
you know you've got it slightly wrong.

214
00:13:03,550 --> 00:13:06,750
So if VB yes equals baby yes,

215
00:13:06,750 --> 00:13:14,650
Van a mystery box and I'm just in a copy of this one,

216
00:13:14,650 --> 00:13:30,550
and let's say pdf will be saved insane.

217
00:13:30,550 --> 00:13:32,380
Bolder,

218
00:13:32,380 --> 00:13:45,240
as as we're document title can be pdf buttons,

219
00:13:45,240 --> 00:13:46,070
TV information.

220
00:13:46,070 --> 00:13:46,690
That's fine.

221
00:13:46,690 --> 00:13:52,150
And if and then let's test.

222
00:13:52,150 --> 00:13:58,500
So we'll save comes our first message books.

223
00:13:58,500 --> 00:14:01,170
Let's say yes,

224
00:14:01,170 --> 00:14:04,350
create PdF oil and up comes out second.

225
00:14:04,350 --> 00:14:06,420
Okay,

226
00:14:06,420 --> 00:14:11,420
so there's some of the main things to bear in mind when working with methods and obviously

227
00:14:11,420 --> 00:14:12,630
from this point onwards,

228
00:14:12,630 --> 00:14:18,180
But in the course you'll see lots of examples off working with different methods.

229
00:14:18,180 --> 00:14:24,210
So hopefully you will have plenty of opportunities to actually revisit these topics.

230
00:14:24,210 --> 00:14:37,690
As we continue to work with methods throughout the course when specifying values for the

231
00:14:37,690 --> 00:14:38,880
arguments of a method,

232
00:14:38,880 --> 00:14:44,290
it is best to name each argument using this syntax method.

233
00:14:44,290 --> 00:14:45,550
Argument.

234
00:14:45,550 --> 00:14:45,980
One.

235
00:14:45,980 --> 00:14:47,450
Colon equals value.

236
00:14:47,450 --> 00:14:57,900
One coma argument to colon equals value to etcetera in V b.

237
00:14:57,900 --> 00:14:58,190
A.

238
00:14:58,190 --> 00:15:04,590
The arguments of a method are not placed inside parentheses unless the method is not the

239
00:15:04,590 --> 00:15:06,050
only statements on that line.

240
00:15:06,050 --> 00:15:11,860
If a method has a return value,

241
00:15:11,860 --> 00:15:16,200
it can be captured using the same tax set.

242
00:15:16,200 --> 00:15:19,150
Variable name equals method

