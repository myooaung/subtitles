WEBVTT
ï»¿1
00:00:00.000 --> 00:00:14.770
in this section will be discussing the word object model.

2
00:00:14.770 --> 00:00:21.570
The programmatic representation of Microsoft Word itself will begin in this video.

3
00:00:21.570 --> 00:00:27.880
I get in an overview of how the word object model functions its key aspect and key

4
00:00:27.880 --> 00:00:28.840
components.

5
00:00:28.840 --> 00:00:38.550
Let's go into the Exercises folder and then into the Section six folder Word Object model,

6
00:00:38.550 --> 00:00:42.910
and here you'll find a diagram in pdf format,

7
00:00:42.910 --> 00:00:46.350
which I'll be referring to during this video.

8
00:00:46.350 --> 00:00:52.100
Let's open up the word file.

9
00:00:52.100 --> 00:00:59.360
06 Syria one tables and you'll recognize this document as being generated by the code that

10
00:00:59.360 --> 00:01:06.430
we created when we were discussing a ray variables to explore the word object model that's

11
00:01:06.430 --> 00:01:13.580
going to develop visual basic to enter the visual basic editor One of the principal tools

12
00:01:13.580 --> 00:01:14.580
that we have available.

13
00:01:14.580 --> 00:01:16.400
It's one of the view menu,

14
00:01:16.400 --> 00:01:18.090
the Object Browser.

15
00:01:18.090 --> 00:01:24.130
This is a reference in which you can check the basic syntax that you should use when

16
00:01:24.130 --> 00:01:27.750
working with all the different objects within Microsoft Word.

17
00:01:27.750 --> 00:01:31.450
At the top of the object browser window,

18
00:01:31.450 --> 00:01:35.050
you can choose which of the code libraries you want to examine.

19
00:01:35.050 --> 00:01:37.750
So let's choose Microsoft Word.

20
00:01:37.750 --> 00:01:44.490
We then have an alphabetical listing of all the objects within the Microsoft word object

21
00:01:44.490 --> 00:01:44.910
model.

22
00:01:44.910 --> 00:01:50.850
The classes are the blueprints on which each of the object is based,

23
00:01:50.850 --> 00:01:54.650
as they are in the Microsoft word interface,

24
00:01:54.650 --> 00:01:57.750
objects are arranged in a hierarchical fashion.

25
00:01:57.750 --> 00:02:02.850
At the top of his hierarchy is Microsoft Word itself,

26
00:02:02.850 --> 00:02:06.350
and this is referred to is the application object.

27
00:02:06.350 --> 00:02:13.480
So anything that refers to the way that Microsoft itself operates will be inside the

28
00:02:13.480 --> 00:02:14.750
application object.

29
00:02:14.750 --> 00:02:15.980
And indeed,

30
00:02:15.980 --> 00:02:20.470
all of the other objects in the Microsoft word object model our Children,

31
00:02:20.470 --> 00:02:21.140
our child,

32
00:02:21.140 --> 00:02:25.450
object or descendant objects off the application object.

33
00:02:25.450 --> 00:02:36.110
When you click on one of the objects listed in the Object browser on the right hand side,

34
00:02:36.110 --> 00:02:39.550
you'll see what's termed the members of that particular object.

35
00:02:39.550 --> 00:02:44.350
The term member simply refers to the contents of the object,

36
00:02:44.350 --> 00:02:47.050
the elements which are inside it.

37
00:02:47.050 --> 00:02:52.650
There are two main types of member when we look at them in detail in the upcoming videos.

38
00:02:52.650 --> 00:02:54.510
First of all,

39
00:02:54.510 --> 00:02:59.030
we have methods that icon the green icon,

40
00:02:59.030 --> 00:02:59.670
he notes,

41
00:02:59.670 --> 00:03:00.350
methods,

42
00:03:00.350 --> 00:03:08.050
methods of the actions which can be performed on that particular object so you can activate

43
00:03:08.050 --> 00:03:10.380
Microsoft Word or,

44
00:03:10.380 --> 00:03:14.650
if you want to exit Microsoft Word you had used a quick method.

45
00:03:14.650 --> 00:03:20.150
The other main type of member is a property,

46
00:03:20.150 --> 00:03:22.850
and there are two types of property.

47
00:03:22.850 --> 00:03:24.260
First of all,

48
00:03:24.260 --> 00:03:28.650
you have data properties which are basically attributes of the object.

49
00:03:28.650 --> 00:03:29.660
Say,

50
00:03:29.660 --> 00:03:30.550
for example,

51
00:03:30.550 --> 00:03:37.950
we have the name property,

52
00:03:37.950 --> 00:03:40.460
which is the name of the application.

53
00:03:40.460 --> 00:03:40.830
Which,

54
00:03:40.830 --> 00:03:41.210
of course,

55
00:03:41.210 --> 00:03:42.350
is Microsoft Word.

56
00:03:42.350 --> 00:03:45.130
But as you can see,

57
00:03:45.130 --> 00:03:46.720
this is a read only property,

58
00:03:46.720 --> 00:03:49.550
which means that your code can't modify it.

59
00:03:49.550 --> 00:03:51.740
Similarly,

60
00:03:51.740 --> 00:03:58.650
we have the version application DOT version,

61
00:03:58.650 --> 00:04:01.350
which again is a read only property,

62
00:04:01.350 --> 00:04:04.750
and the data type is a string.

63
00:04:04.750 --> 00:04:10.310
The second type of property is an object property.

64
00:04:10.310 --> 00:04:11.880
In other words,

65
00:04:11.880 --> 00:04:14.340
an object which is a child off.

66
00:04:14.340 --> 00:04:15.250
Another object,

67
00:04:15.250 --> 00:04:19.000
the object properties of the application object.

68
00:04:19.000 --> 00:04:20.240
Others objects,

69
00:04:20.240 --> 00:04:23.250
which are Children off the application objects.

70
00:04:23.250 --> 00:04:24.950
One example.

71
00:04:24.950 --> 00:04:26.450
His options.

72
00:04:26.450 --> 00:04:31.620
Options,

73
00:04:31.620 --> 00:04:33.450
As you can see from the description here,

74
00:04:33.450 --> 00:04:35.750
is not a data property.

75
00:04:35.750 --> 00:04:38.350
So it's not a string or an inter Jetseta.

76
00:04:38.350 --> 00:04:41.250
It is actually an object in its own right.

77
00:04:41.250 --> 00:04:43.030
Hence,

78
00:04:43.030 --> 00:04:45.250
when we scroll down the list of objects,

79
00:04:45.250 --> 00:04:51.650
we find options listed and it too,

80
00:04:51.650 --> 00:04:52.740
has its members.

81
00:04:52.740 --> 00:04:53.450
You'll notice,

82
00:04:53.450 --> 00:04:54.000
however,

83
00:04:54.000 --> 00:05:00.810
that all of its members are properties and you'll also recognize a lot of them as being

84
00:05:00.810 --> 00:05:03.150
equivalent to word options.

85
00:05:03.150 --> 00:05:05.950
So back in the word interface,

86
00:05:05.950 --> 00:05:09.050
if we go to file options,

87
00:05:09.050 --> 00:05:14.750
properties that we were looking at are the programmatic equivalents to these options.

88
00:05:14.750 --> 00:05:15.380
So,

89
00:05:15.380 --> 00:05:15.910
for example,

90
00:05:15.910 --> 00:05:20.950
if we're going to proof in auto correct options water format,

91
00:05:20.950 --> 00:05:24.800
we have all these options for replacing.

92
00:05:24.800 --> 00:05:32.150
Back in the Object browser,

93
00:05:32.150 --> 00:05:37.600
we scroll down the list of properties here.

94
00:05:37.600 --> 00:05:46.220
We confined the programmatic equivalent all those replace options as well as being a child

95
00:05:46.220 --> 00:05:47.950
object of the application object.

96
00:05:47.950 --> 00:05:54.050
The options object is also a member of the global's collection,

97
00:05:54.050 --> 00:05:58.810
and this is a special collection of very frequently used objects.

98
00:05:58.810 --> 00:06:00.290
In other words,

99
00:06:00.290 --> 00:06:02.380
which can be referred to without first,

100
00:06:02.380 --> 00:06:04.150
specify an apparent object.

101
00:06:04.150 --> 00:06:10.750
This means that there are two ways of referring to the options Object in your code.

102
00:06:10.750 --> 00:06:16.690
You can either say application but options or simply options.

103
00:06:16.690 --> 00:06:19.380
Another child object of the application object,

104
00:06:19.380 --> 00:06:21.750
which is also a member of the global's collection,

105
00:06:21.750 --> 00:06:23.550
is the documents object.

106
00:06:23.550 --> 00:06:27.690
The documents object represents all of the documents,

107
00:06:27.690 --> 00:06:29.750
which are currently open in Microsoft Word.

108
00:06:29.750 --> 00:06:35.650
It's what's known as a collection object in that it refers to a group of objects rather

109
00:06:35.650 --> 00:06:36.830
than a single element.

110
00:06:36.830 --> 00:06:40.400
And because it is a member of the global's collection again,

111
00:06:40.400 --> 00:06:42.210
you have two ways of referring to it.

112
00:06:42.210 --> 00:06:50.830
You can either say application dot documents or simply documents the members of collection

113
00:06:50.830 --> 00:06:57.380
objects which used most frequently of those members involved in adding and removing items

114
00:06:57.380 --> 00:06:58.250
from the collection.

115
00:06:58.250 --> 00:07:04.220
And you also use the collection object to home in on a particular item within the

116
00:07:04.220 --> 00:07:04.850
collection.

117
00:07:04.850 --> 00:07:08.150
In the case of the documents collection object,

118
00:07:08.150 --> 00:07:10.850
you use ad or open,

119
00:07:10.850 --> 00:07:11.780
which are,

120
00:07:11.780 --> 00:07:12.200
of course,

121
00:07:12.200 --> 00:07:13.200
both methods.

122
00:07:13.200 --> 00:07:18.760
These actions that can be performed on the documents collection and to remove items from

123
00:07:18.760 --> 00:07:21.550
the collection you simply use close.

124
00:07:21.550 --> 00:07:27.550
Another very frequently used member of collection objects is the Count property,

125
00:07:27.550 --> 00:07:31.750
and this returns the number of elements in the collection.

126
00:07:31.750 --> 00:07:37.550
So if we use the immediate window to enter a line of code,

127
00:07:37.550 --> 00:07:45.250
we can query the number of documents by using question mark documents,

128
00:07:45.250 --> 00:07:48.150
not counts.

129
00:07:48.150 --> 00:07:52.270
Can we present We get the answer?

130
00:07:52.270 --> 00:07:52.660
One.

131
00:07:52.660 --> 00:07:54.780
There is one document currently open,

132
00:07:54.780 --> 00:07:59.620
so when you want to start working with a particular documents,

133
00:07:59.620 --> 00:08:05.290
your first quarter of call is normally the documents collection to specify a particular

134
00:08:05.290 --> 00:08:05.960
item,

135
00:08:05.960 --> 00:08:08.350
a particular document Within the collection.

136
00:08:08.350 --> 00:08:12.250
You use the syntax application dot documents.

137
00:08:12.250 --> 00:08:12.970
Or,

138
00:08:12.970 --> 00:08:13.480
of course,

139
00:08:13.480 --> 00:08:19.680
you can simply say documents and then in parentheses you identify which document you're

140
00:08:19.680 --> 00:08:20.350
interested in,

141
00:08:20.350 --> 00:08:25.450
and you can either do this numerically or texturally.

142
00:08:25.450 --> 00:08:27.210
In other words,

143
00:08:27.210 --> 00:08:33.330
you can either say which number which position that particular document occupies within the

144
00:08:33.330 --> 00:08:33.950
collection.

145
00:08:33.950 --> 00:08:37.250
All you can refer to it by name.

146
00:08:37.250 --> 00:08:42.850
So if we wanted to refer to this particular document,

147
00:08:42.850 --> 00:08:46.850
its name is 0601 tables.

148
00:08:46.850 --> 00:08:48.950
We could either use that name.

149
00:08:48.950 --> 00:08:52.350
All we could simply say documents one.

150
00:08:52.350 --> 00:08:56.360
So if we look at the syntax,

151
00:08:56.360 --> 00:08:58.750
the members off the document object.

152
00:08:58.750 --> 00:09:02.280
There are three properties,

153
00:09:02.280 --> 00:09:08.050
but refer to the name of an object or which relate to the name of an object.

154
00:09:08.050 --> 00:09:08.970
First of all,

155
00:09:08.970 --> 00:09:11.310
we have full name on this,

156
00:09:11.310 --> 00:09:15.750
basically is theme the name of the document preceded by the path.

157
00:09:15.750 --> 00:09:19.350
Then we have the pope,

158
00:09:19.350 --> 00:09:21.210
just the folder,

159
00:09:21.210 --> 00:09:23.810
the path to the folder that contains the documents,

160
00:09:23.810 --> 00:09:27.150
and we also simply have name.

161
00:09:27.150 --> 00:09:29.580
And that's simply the name of the document.

162
00:09:29.580 --> 00:09:31.550
I not preceded by the path.

163
00:09:31.550 --> 00:09:37.750
So if I want to say documents one,

164
00:09:37.750 --> 00:09:39.650
not the full name.

165
00:09:39.650 --> 00:09:41.550
When I press enter,

166
00:09:41.550 --> 00:09:46.850
I get the path and the name of the document,

167
00:09:46.850 --> 00:09:56.810
the way in which VB Avery first to the members of an object is often referred to as dot

168
00:09:56.810 --> 00:09:57.650
syntax.

169
00:09:57.650 --> 00:10:00.920
You start with an expression that refers to the object.

170
00:10:00.920 --> 00:10:05.750
We then put a dot and then you refer to one of the members off that object.

171
00:10:05.750 --> 00:10:09.850
Let's take a closer look at how dots in tax actually works.

172
00:10:09.850 --> 00:10:16.750
Let's say that we want to target that particular cell within the document.

173
00:10:16.750 --> 00:10:21.950
Our starting point would be the application objects.

174
00:10:21.950 --> 00:10:23.370
Or additionally,

175
00:10:23.370 --> 00:10:26.650
because the documents collection is a member of the global's,

176
00:10:26.650 --> 00:10:29.190
we could simply start with documents.

177
00:10:29.190 --> 00:10:35.350
But in terms of the hierarchy documents is a child off the application object.

178
00:10:35.350 --> 00:10:47.060
So we have application dot documents or simply documents meant to refer to the specific

179
00:10:47.060 --> 00:10:48.550
document that we're interested in.

180
00:10:48.550 --> 00:10:52.250
We have application dot documents,

181
00:10:52.250 --> 00:10:56.320
and we can either use the name 0601 tables Doc,

182
00:10:56.320 --> 00:10:56.550
Doc,

183
00:10:56.550 --> 00:10:57.050
ex.

184
00:10:57.050 --> 00:11:03.880
All we can say application dot documents one because it's the one and only document in the

185
00:11:03.880 --> 00:11:04.950
documents collection.

186
00:11:04.950 --> 00:11:10.950
Then we need to home in on the tables within the document.

187
00:11:10.950 --> 00:11:14.050
So we use the tables collection object.

188
00:11:14.050 --> 00:11:19.650
And since we're interested in the first element within the tables collection,

189
00:11:19.650 --> 00:11:23.250
we can use the syntax cables one.

190
00:11:23.250 --> 00:11:27.250
Then we're interested in the second row.

191
00:11:27.250 --> 00:11:35.610
So we refer to the Rose Collection object and to specify that we want road to in

192
00:11:35.610 --> 00:11:38.450
parentheses we use to.

193
00:11:38.450 --> 00:11:42.550
We then need to look at all the cells within that road.

194
00:11:42.550 --> 00:11:49.750
So we refer to the cells object and to specify the first in parentheses,

195
00:11:49.750 --> 00:11:52.150
we say sells one.

196
00:11:52.150 --> 00:11:55.650
In order to modify the contents of that cell,

197
00:11:55.650 --> 00:11:57.750
we use the range object.

198
00:11:57.750 --> 00:12:03.820
The range object refers to anything that's inside the cell and,

199
00:12:03.820 --> 00:12:04.490
of course,

200
00:12:04.490 --> 00:12:04.790
word.

201
00:12:04.790 --> 00:12:06.160
Being as versatile as it is,

202
00:12:06.160 --> 00:12:08.760
we could have lots of different types of content.

203
00:12:08.760 --> 00:12:11.950
We could even have another table or a picture.

204
00:12:11.950 --> 00:12:17.290
Since we're specifically interested in modifying the textual contents of the cell,

205
00:12:17.290 --> 00:12:20.690
we use the text property don't range,

206
00:12:20.690 --> 00:12:21.550
don't text.

207
00:12:21.550 --> 00:12:27.050
So this gives an example of how dot syntax works.

208
00:12:27.050 --> 00:12:34.580
We go right from the application object and we used the collection object to home in on a

209
00:12:34.580 --> 00:12:37.250
specific item within each collection.

210
00:12:37.250 --> 00:12:39.390
And of course,

211
00:12:39.390 --> 00:12:42.550
because the text property is a read write property.

212
00:12:42.550 --> 00:12:47.650
We can actually use it to modify text in that cell,

213
00:12:47.650 --> 00:12:53.750
said the immediate window.

214
00:12:53.750 --> 00:12:55.550
I like the same thing.

215
00:12:55.550 --> 00:13:03.810
Application dot documents one tables,

216
00:13:03.810 --> 00:13:09.650
one rose to don't sells.

217
00:13:09.650 --> 00:13:11.970
One still range,

218
00:13:11.970 --> 00:13:15.150
text equals,

219
00:13:15.150 --> 00:13:16.630
and this being text,

220
00:13:16.630 --> 00:13:17.950
it has to go in quotes.

221
00:13:17.950 --> 00:13:18.850
Look at me,

222
00:13:18.850 --> 00:13:22.770
let's say monthly reports.

223
00:13:22.770 --> 00:13:24.250
My press enter.

224
00:13:24.250 --> 00:13:26.750
We now go back to the word.

225
00:13:26.750 --> 00:13:31.150
You'll see that that bit of text has gone into the cell.

226
00:13:31.150 --> 00:13:38.550
That's the basic introduction to how the word object model is structured.

227
00:13:38.550 --> 00:13:42.350
How you access elements within the word object model.

228
00:13:42.350 --> 00:13:49.320
Use in dot syntax in the remaining videos of this section will look more closely at working

229
00:13:49.320 --> 00:13:50.210
with methods,

230
00:13:50.210 --> 00:13:56.050
properties and some of the subtleties involved in manipulating the word object model.

231
00:13:56.050 --> 00:14:10.840
The word object model is the programmatic representation of the many elements which form

232
00:14:10.840 --> 00:14:13.050
part of the Microsoft word interface.

233
00:14:13.050 --> 00:14:19.680
The object model contains both individual objects and collection objects,

234
00:14:19.680 --> 00:14:22.770
which are essentially a raise of objects,

235
00:14:22.770 --> 00:14:31.870
the methods of an object of the accents or operations which can be performed on the object

236
00:14:31.870 --> 00:14:32.530
in question.

237
00:14:32.530 --> 00:14:37.200
The properties of an object can be either.

238
00:14:37.200 --> 00:14:39.900
It's attributes or any other objects,

239
00:14:39.900 --> 00:14:49.300
which it contains to reference elements within the object Model V B A uses dot syntax to

240
00:14:49.300 --> 00:14:53.350
systematically drill down within the object model hierarchy.

