WEBVTT
ï»¿1
00:00:00.000 --> 00:00:13.110
in order to remove items from the collection.

2
00:00:13.110 --> 00:00:19.480
The logical thing to do is to loop through the collection and selectively deletes earn

3
00:00:19.480 --> 00:00:20.170
items.

4
00:00:20.170 --> 00:00:21.830
However,

5
00:00:21.830 --> 00:00:24.890
if you're using a four Next Live to control the looping,

6
00:00:24.890 --> 00:00:30.390
the fact that it uses a numerical index poses certain problems,

7
00:00:30.390 --> 00:00:32.960
and that's what we'll be discussing in this video.

8
00:00:32.960 --> 00:00:41.550
Let's go into the Exercises folder and for this example,

9
00:00:41.550 --> 00:00:54.560
let's take a copy of this file that we've used a couple of times and let's rename it so

10
00:00:54.560 --> 00:01:01.150
we'll call it 0607 the Elite tables,

11
00:01:01.150 --> 00:01:04.450
and then it's open it.

12
00:01:04.450 --> 00:01:08.510
So if you remember,

13
00:01:08.510 --> 00:01:11.620
we've already got this attached to our word VB,

14
00:01:11.620 --> 00:01:16.250
a training template and that gives us access to all our code.

15
00:01:16.250 --> 00:01:23.420
So what we'll say in this example is that we want to target the last table in every quarter

16
00:01:23.420 --> 00:01:23.420
,

17
00:01:23.420 --> 00:01:25.550
so we've got one table for each month.

18
00:01:25.550 --> 00:01:27.620
So you want to do March,

19
00:01:27.620 --> 00:01:28.070
June,

20
00:01:28.070 --> 00:01:30.150
September on December,

21
00:01:30.150 --> 00:01:34.650
and we simply want to delete those specific tables.

22
00:01:34.650 --> 00:01:38.850
So let's get into visual basic,

23
00:01:38.850 --> 00:01:42.550
And if you don't have it open,

24
00:01:42.550 --> 00:01:44.260
just open up your section.

25
00:01:44.260 --> 00:01:45.250
Six more duel.

26
00:01:45.250 --> 00:01:52.250
Then we can just scroll to the bottom here and add a new macro.

27
00:01:52.250 --> 00:02:06.850
And then I'll go into my preferred procedure view several dim a counter I as enter joke

28
00:02:06.850 --> 00:02:10.450
trammeled them a document.

29
00:02:10.450 --> 00:02:19.280
Then we'll set a document variable equal to,

30
00:02:19.280 --> 00:02:29.750
and I'm just gonna copy that name and paste it.

31
00:02:29.750 --> 00:02:39.850
Then we can go straight into our four next loop for I equals 3 to 12.

32
00:02:39.850 --> 00:02:49.040
Step three next by and then inside the loop or we want to do is to delete the table whose

33
00:02:49.040 --> 00:02:54.050
index number matters the current value off I our counter.

34
00:02:54.050 --> 00:02:56.420
So we simply say,

35
00:02:56.420 --> 00:03:00.310
Don't cables dot tables brackets.

36
00:03:00.310 --> 00:03:02.820
I I don't delete.

37
00:03:02.820 --> 00:03:04.050
A simple is that.

38
00:03:04.050 --> 00:03:06.750
Then let's save our changes.

39
00:03:06.750 --> 00:03:10.950
And since we're gonna mess up the document before we do that,

40
00:03:10.950 --> 00:03:13.250
I'm just going to select everything.

41
00:03:13.250 --> 00:03:19.150
So control a selectable and copy it.

42
00:03:19.150 --> 00:03:23.640
So once we've messed it up,

43
00:03:23.640 --> 00:03:25.050
we can just paste it back.

44
00:03:25.050 --> 00:03:27.550
Let's then run.

45
00:03:27.550 --> 00:03:30.080
I'll macro and we get an error.

46
00:03:30.080 --> 00:03:33.550
The requested member of the collection does not exist,

47
00:03:33.550 --> 00:03:35.260
and,

48
00:03:35.260 --> 00:03:35.670
of course,

49
00:03:35.670 --> 00:03:36.940
if we click on debug,

50
00:03:36.940 --> 00:03:41.950
the line that it highlights is the line where it's deleted the tables.

51
00:03:41.950 --> 00:03:47.020
Let's hit the reset button to continue on.

52
00:03:47.020 --> 00:03:48.950
Just investigate to see what's going on.

53
00:03:48.950 --> 00:03:54.950
So it's faithfully deleted that march table.

54
00:03:54.950 --> 00:03:58.990
But we can see that June is still there.

55
00:03:58.990 --> 00:04:05.470
July is gone and November is gone.

56
00:04:05.470 --> 00:04:17.920
So basically we're not getting the results that we anticipated.

57
00:04:17.920 --> 00:04:25.250
Let's just select all and paste what we compute out here.

58
00:04:25.250 --> 00:04:28.280
The reason is very simple.

59
00:04:28.280 --> 00:04:38.570
This line is being evaluated each time we loop and each time we delete one of the tables,

60
00:04:38.570 --> 00:04:41.750
we reduce in the size of the collection by one.

61
00:04:41.750 --> 00:04:47.350
So eventually we're going to come up against an index which no longer exists.

62
00:04:47.350 --> 00:04:48.570
So we're saying Doc,

63
00:04:48.570 --> 00:04:54.950
tables dot tables I and the value of I is greater than the total number of tables.

64
00:04:54.950 --> 00:04:58.050
So the solution is very simple.

65
00:04:58.050 --> 00:04:59.990
You loop in reverse,

66
00:04:59.990 --> 00:05:04.850
you start with the highest index and work your way down towards the lowest.

67
00:05:04.850 --> 00:05:14.450
So we moved 12 as the start in value and then three as the end in value.

68
00:05:14.450 --> 00:05:16.060
And of course,

69
00:05:16.060 --> 00:05:21.400
Step three will no longer work because we're adding three to get from 12 to 3,

70
00:05:21.400 --> 00:05:22.580
which is not gonna work.

71
00:05:22.580 --> 00:05:25.950
So we have to say step minus three.

72
00:05:25.950 --> 00:05:28.100
So let's try it again.

73
00:05:28.100 --> 00:05:36.350
I'm going to say and run no errors on Let's go back to word.

74
00:05:36.350 --> 00:05:48.340
So here we can see September June mulch all gun and ah,

75
00:05:48.340 --> 00:05:55.070
November Sorry on three and December is Thea the full.

76
00:05:55.070 --> 00:05:59.220
On this occasion,

77
00:05:59.220 --> 00:06:04.150
it was useful to use the for next loop because we weren't deleting all the items in the

78
00:06:04.150 --> 00:06:04.750
collection.

79
00:06:04.750 --> 00:06:06.560
If you are dilated,

80
00:06:06.560 --> 00:06:13.250
all the items in a collection the simple rule is instead of using the four next loop use

81
00:06:13.250 --> 00:06:14.350
for each.

82
00:06:14.350 --> 00:06:18.050
That way there's no numerical index to consider.

83
00:06:18.050 --> 00:06:23.650
You're simply saying process All of the objects in the collection on removed them.

84
00:06:23.650 --> 00:06:35.380
So let me just paste back all of these so selectable and paste and let's return to full

85
00:06:35.380 --> 00:06:39.850
module You on right another some routine.

86
00:06:39.850 --> 00:06:47.390
So unless one answering live all objects.

87
00:06:47.390 --> 00:06:50.950
So this time,

88
00:06:50.950 --> 00:06:53.500
instead of a counter we didn't an object.

89
00:06:53.500 --> 00:06:56.150
So tvl delete,

90
00:06:56.150 --> 00:07:05.770
Let's say and then I'm just gonna nip back to the release of objects and caught me these

91
00:07:05.770 --> 00:07:06.550
two lines.

92
00:07:06.550 --> 00:07:32.420
So here we can use for each tvl elite in dog tables got tables and that's closed with next

93
00:07:32.420 --> 00:07:37.920
tvl delete on to delete each table.

94
00:07:37.920 --> 00:07:48.260
We simply say tbl deletes not dilate so as you can see using for each completely gets rid

95
00:07:48.260 --> 00:07:51.050
of the problem or potential problem of index in.

96
00:07:51.050 --> 00:07:55.050
So any time you're simply removing all objects in a collection,

97
00:07:55.050 --> 00:07:58.250
this is by far the easiest way to approach it.

98
00:07:58.250 --> 00:08:03.250
Let's just save on test.

99
00:08:03.250 --> 00:08:10.350
No errors and no tables left.

100
00:08:10.350 --> 00:08:12.510
And again,

101
00:08:12.510 --> 00:08:17.930
I'm just going to select all and paste just in case we need Teoh.

102
00:08:17.930 --> 00:08:18.850
Test this again.

103
00:08:18.850 --> 00:08:21.050
One final safe,

104
00:08:21.050 --> 00:08:35.350
and we don't to remove objects from a collection.

105
00:08:35.350 --> 00:08:39.970
Look through the collection and use the appropriate method e g.

106
00:08:39.970 --> 00:08:40.740
Delete.

107
00:08:40.740 --> 00:08:48.380
If you use a four next loop to remove only certain items,

108
00:08:48.380 --> 00:08:52.500
you must live from the highest index down to the lowest.

109
00:08:52.500 --> 00:08:53.590
To avoid errors.

110
00:08:53.590 --> 00:08:58.230
To remove all items from a collection,

111
00:08:58.230 --> 00:09:03.600
simply use a four each next loop in preference to fall next.

