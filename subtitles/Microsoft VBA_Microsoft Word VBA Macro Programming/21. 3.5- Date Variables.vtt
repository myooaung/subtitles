WEBVTT
ï»¿1
00:00:00.000 --> 00:00:11.870
in this video tutorial,

2
00:00:11.870 --> 00:00:16.150
we look at how VB a allows you to work with date variables.

3
00:00:16.150 --> 00:00:20.780
We'll also have a quick look at working with Boolean variables.

4
00:00:20.780 --> 00:00:37.150
So here we are once again the Section three model,

5
00:00:37.150 --> 00:00:45.190
and what we'll do in this tutorial is to create a macro which calculates the difference

6
00:00:45.190 --> 00:00:48.450
between the current date and a target date,

7
00:00:48.450 --> 00:00:52.050
as we did with the number variables.

8
00:00:52.050 --> 00:00:57.750
We'll also look at how you conform at dates to display exactly as you want them to,

9
00:00:57.750 --> 00:01:02.560
and we'll also be used in a 1,000,000,000 variable to keep track of whether or not our

10
00:01:02.560 --> 00:01:05.350
countdown has reached a critical stage.

11
00:01:05.350 --> 00:01:15.350
So 0305 k and we'll call it a date countdown.

12
00:01:15.350 --> 00:01:31.860
Let's just switch across to procedure view So we'll dem de a t target as dates and also str

13
00:01:31.860 --> 00:01:34.250
Target has string.

14
00:01:34.250 --> 00:01:38.650
This will store the formatted version of our date.

15
00:01:38.650 --> 00:01:45.050
We won't bother creating a variable for the current date itself because the function now,

16
00:01:45.050 --> 00:01:46.350
three letters,

17
00:01:46.350 --> 00:01:47.950
um does the job,

18
00:01:47.950 --> 00:01:49.850
so we don't really need a variable for that,

19
00:01:49.850 --> 00:01:54.350
but we will create one for the formatted current date,

20
00:01:54.350 --> 00:01:55.500
said S.

21
00:01:55.500 --> 00:02:03.710
T ah today as strange then we'll create an inter variable to store the number of days

22
00:02:03.710 --> 00:02:04.650
remaining.

23
00:02:04.650 --> 00:02:18.300
And finally our 1,000,000,000 bln critical ask trillion.

24
00:02:18.300 --> 00:02:25.380
We've looked at how you use literal strings and you enclose them in quotation marks.

25
00:02:25.380 --> 00:02:28.550
The equivalent for dates is the half symbol,

26
00:02:28.550 --> 00:02:38.270
so it's going to be let the 80 target equal and then the assemble and the date goes in in

27
00:02:38.270 --> 00:02:39.450
US format.

28
00:02:39.450 --> 00:02:43.450
So let's say the date is gonna be the first of April 2014.

29
00:02:43.450 --> 00:02:43.950
Well,

30
00:02:43.950 --> 00:02:47.870
them in the UK I would still put four stroke,

31
00:02:47.870 --> 00:02:50.550
one stroke Teoh one full.

32
00:02:50.550 --> 00:02:55.450
Now let's get a formatted version of this.

33
00:02:55.450 --> 00:03:02.840
So let str targets equal and this time we can use the function,

34
00:03:02.840 --> 00:03:03.560
format,

35
00:03:03.560 --> 00:03:09.450
date time and this is a string function.

36
00:03:09.450 --> 00:03:17.610
So the expression it's looking for is gonna be de a T targets and then the format is a VB

37
00:03:17.610 --> 00:03:18.430
constant.

38
00:03:18.430 --> 00:03:27.860
So let's go with the long date and then we go straight on to do the same for today's date.

39
00:03:27.860 --> 00:03:38.650
So str today equals format state time now is the function that we use and again is gonna be

40
00:03:38.650 --> 00:03:40.300
baby Long date.

41
00:03:40.300 --> 00:03:45.260
Now we want to calculate the difference between the two dates.

42
00:03:45.260 --> 00:03:51.750
So let's I n t diss on the function that actually does this calculation.

43
00:03:51.750 --> 00:03:53.650
His date def.

44
00:03:53.650 --> 00:03:55.400
First of all,

45
00:03:55.400 --> 00:03:57.430
you specify the interval as a strength.

46
00:03:57.430 --> 00:04:05.900
So we're interested in the days and then you put the two days so date one will be now and

47
00:04:05.900 --> 00:04:06.660
date too.

48
00:04:06.660 --> 00:04:12.600
DHC targets based on i n t d.

49
00:04:12.600 --> 00:04:22.950
If we can now calculate our 1,000,000,000 so let be a land critical equal.

50
00:04:22.950 --> 00:04:29.810
And then we put a test into this less than or equal to and let's say,

51
00:04:29.810 --> 00:04:35.450
14 so that logical test will return either true or false.

52
00:04:35.450 --> 00:04:39.310
So now we have everything we need.

53
00:04:39.310 --> 00:04:41.200
We can compose a message.

54
00:04:41.200 --> 00:04:46.620
So let's say a mystery box and we'll start with the target date.

55
00:04:46.620 --> 00:04:57.360
So carnet dates ampersand str target the formatted version and then we'll put a carriage

56
00:04:57.360 --> 00:05:04.880
return which we can do by using the constant BBC are then ampersand on will then split the

57
00:05:04.880 --> 00:05:07.080
line and then just having a little.

58
00:05:07.080 --> 00:05:21.040
Then we got today's date ampersand str today undersigned BBC are can percents placed under

59
00:05:21.040 --> 00:05:29.150
school Then we won't days remaining ampersand.

60
00:05:29.150 --> 00:05:37.820
Certainly these we are to discern space underscore and finally,

61
00:05:37.820 --> 00:05:46.560
let's say status critical Empress owned Bln.

62
00:05:46.560 --> 00:05:47.870
Critical.

63
00:05:47.870 --> 00:05:50.150
That's a message.

64
00:05:50.150 --> 00:05:54.350
Let's not save out changes and test a macro.

65
00:05:54.350 --> 00:05:57.490
So we got the first of April is the target.

66
00:05:57.490 --> 00:05:59.150
Today is the 19th of March.

67
00:05:59.150 --> 00:06:01.050
13 days remain in.

68
00:06:01.050 --> 00:06:03.480
Hence our Boolean value returns.

69
00:06:03.480 --> 00:06:08.550
True as well as using format date time,

70
00:06:08.550 --> 00:06:12.850
you can also use the format function that we saw in the previous video.

71
00:06:12.850 --> 00:06:15.420
This actually gives you more flexibility.

72
00:06:15.420 --> 00:06:16.030
So,

73
00:06:16.030 --> 00:06:16.590
for example,

74
00:06:16.590 --> 00:06:20.540
if we wanted to display the day of the week instead of full that day time,

75
00:06:20.540 --> 00:06:24.100
we could just use format and then here,

76
00:06:24.100 --> 00:06:26.350
instead of using the VB constant,

77
00:06:26.350 --> 00:06:30.270
we can now use this strength to get the day of the week.

78
00:06:30.270 --> 00:06:31.050
For example,

79
00:06:31.050 --> 00:06:32.950
we could use three or four days,

80
00:06:32.950 --> 00:06:37.790
so three ds will give you the abbreviated name of the day.

81
00:06:37.790 --> 00:06:40.250
Four days will give you the full name of the day.

82
00:06:40.250 --> 00:06:44.700
Then let's say we want a single D for the actual number,

83
00:06:44.700 --> 00:06:48.350
so no leading zero will be inserted for the first of April.

84
00:06:48.350 --> 00:06:51.490
Then we want April to be the full month.

85
00:06:51.490 --> 00:06:57.050
So that's four EMS and then we want to fold four digit year.

86
00:06:57.050 --> 00:07:01.650
So let's just copy that and do the same here,

87
00:07:01.650 --> 00:07:03.810
so we'll make it format instead of format,

88
00:07:03.810 --> 00:07:08.450
date time and just paste over our full meant.

89
00:07:08.450 --> 00:07:10.450
Let's compare the results.

90
00:07:10.450 --> 00:07:13.250
The first of April is going to be a Tuesday.

91
00:07:13.250 --> 00:07:19.360
Today's the Wednesday on again,

92
00:07:19.360 --> 00:07:20.650
Let's save our changes.

93
00:07:20.650 --> 00:07:31.120
Literal dates are normally enclosed in half symbols.

94
00:07:31.120 --> 00:07:32.950
In USA format,

95
00:07:32.950 --> 00:07:40.900
the day to day function is used to calculate the difference between two dates.

96
00:07:40.900 --> 00:07:43.050
In a given interval of time,

97
00:07:43.050 --> 00:07:50.970
the format date time function could be used to apply a preset format to a given date.

98
00:07:50.970 --> 00:07:57.880
The format function could be used to generate a custom formatted date.

