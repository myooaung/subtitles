1
00:00:00,000 --> 00:00:11,590
in this video,

2
00:00:11,590 --> 00:00:15,550
we'll take a closer look at working with strict variables.

3
00:00:15,550 --> 00:00:16,770
Well,

4
00:00:16,770 --> 00:00:21,450
look at declaring fixed length as well as variable than strings,

5
00:00:21,450 --> 00:00:26,030
and we'll also look at a couple of VB a string functions.

6
00:00:26,030 --> 00:00:35,360
Let's go back into the Exercises folder that let's open up our word.

7
00:00:35,360 --> 00:00:37,250
VB a train in template,

8
00:00:37,250 --> 00:00:39,950
right click and open,

9
00:00:39,950 --> 00:00:44,850
and then let's go into the developer tab on visual Basic.

10
00:00:44,850 --> 00:00:47,380
If you're Section three,

11
00:00:47,380 --> 00:00:48,960
model is not still open.

12
00:00:48,960 --> 00:00:51,250
Just double click to open it up.

13
00:00:51,250 --> 00:00:57,160
That's scroll to the bottom and create a new macro.

14
00:00:57,160 --> 00:01:04,150
So we're now in 03 03 mackerel A.

15
00:01:04,150 --> 00:01:07,050
Let's call it strings.

16
00:01:07,050 --> 00:01:13,450
Let's now switch across to procedure view.

17
00:01:13,450 --> 00:01:15,040
Just a the bottom here.

18
00:01:15,040 --> 00:01:19,550
If you click on the procedure view icon in procedure view,

19
00:01:19,550 --> 00:01:25,110
you only see one macro at a time to access other micro's.

20
00:01:25,110 --> 00:01:27,700
Just go to the top right to the procedure.

21
00:01:27,700 --> 00:01:32,750
Drop down menu and you can switch back to any of the other micro's.

22
00:01:32,750 --> 00:01:37,750
Let's start by declaring a couple of variables.

23
00:01:37,750 --> 00:01:41,220
We've already seen how you can declare a variable,

24
00:01:41,220 --> 00:01:44,350
which will hold a string of an indeterminate length.

25
00:01:44,350 --> 00:01:48,350
You can also limit the length of a string When you declare it,

26
00:01:48,350 --> 00:01:50,950
let's take an example of both.

27
00:01:50,950 --> 00:01:58,460
Let's first have a variable into which weaken store the users first name so dim.

28
00:01:58,460 --> 00:02:06,750
Str first name as string So here there's no upper limit on the length of the string.

29
00:02:06,750 --> 00:02:13,630
Now let's say we want to ask the user to choose a user name and that it's gonna have a

30
00:02:13,630 --> 00:02:19,950
limit off 10 characters with no spaces so dim.

31
00:02:19,950 --> 00:02:28,420
Str user name has string and to limit the length,

32
00:02:28,420 --> 00:02:33,170
we simply use an asterisk followed by the number of characters.

33
00:02:33,170 --> 00:02:35,150
So asterisk 10.

34
00:02:35,150 --> 00:02:40,750
Let's now use the input box function to populate these two variables.

35
00:02:40,750 --> 00:02:55,460
So we're dealing here with data variables so the key word would be let equals input box and

36
00:02:55,460 --> 00:03:06,140
then in brackets will put the prompt Please enter your first lane and then let again full

37
00:03:06,140 --> 00:03:07,570
str use the name.

38
00:03:07,570 --> 00:03:22,490
Please choose a user name that's now insert a break point on the end sub line so all our

39
00:03:22,490 --> 00:03:28,180
code will execute and just before the end sub will go into break mode so we can have a look

40
00:03:28,180 --> 00:03:29,050
at the variables.

41
00:03:29,050 --> 00:03:32,700
So we run well.

42
00:03:32,700 --> 00:03:33,620
Enter grants,

43
00:03:33,620 --> 00:03:37,650
click OK and then as a user name.

44
00:03:37,650 --> 00:03:43,750
Let's enter Red Hippo and let's go over the limit.

45
00:03:43,750 --> 00:03:45,990
So hippopotamus.

46
00:03:45,990 --> 00:03:48,420
So what?

47
00:03:48,420 --> 00:03:52,200
We click OK if we look at str first name.

48
00:03:52,200 --> 00:03:52,740
No problem.

49
00:03:52,740 --> 00:03:56,550
It's what was entered when we look at str user name,

50
00:03:56,550 --> 00:04:04,950
it's chopped off what was entered and we've only got effectively the 1st 10 characters.

51
00:04:04,950 --> 00:04:12,320
Let's exit break mode by clicking on the reset button and let's remove the break point B B

52
00:04:12,320 --> 00:04:15,450
A has a number of functions designed to be used with strings.

53
00:04:15,450 --> 00:04:21,080
Let's just take a look at a couple of them and I'm sure we'll encounter several war during

54
00:04:21,080 --> 00:04:22,120
the training course.

55
00:04:22,120 --> 00:04:30,520
Let's say that we actually need tohave str user name completely not the case and with no

56
00:04:30,520 --> 00:04:31,320
spaces.

57
00:04:31,320 --> 00:04:38,620
So the statement we have so far gives us whatever value is entered by the user to remove

58
00:04:38,620 --> 00:04:40,560
spaces from whatever they answer,

59
00:04:40,560 --> 00:04:42,550
we can use the replace function,

60
00:04:42,550 --> 00:04:49,030
so we start our statement with replace because it's a function within a parentheses on the

61
00:04:49,030 --> 00:04:56,030
tool tip tells us that we need three obligatory parameters and then we've got a Siri's off

62
00:04:56,030 --> 00:04:57,350
optional parameters.

63
00:04:57,350 --> 00:05:01,150
The first parameter is exactly what we already have.

64
00:05:01,150 --> 00:05:08,150
That's to say the string inside of which will be searching so we can put a comma and move

65
00:05:08,150 --> 00:05:10,050
on to the next parameter find,

66
00:05:10,050 --> 00:05:12,550
which is the string that were searching for.

67
00:05:12,550 --> 00:05:14,550
And this is a space,

68
00:05:14,550 --> 00:05:15,640
obviously,

69
00:05:15,640 --> 00:05:16,680
because it's a string,

70
00:05:16,680 --> 00:05:17,950
it goes in quotes.

71
00:05:17,950 --> 00:05:24,520
The third parameter is what we're replacing it with and because we're replacing it with

72
00:05:24,520 --> 00:05:27,050
nothing but still with a string,

73
00:05:27,050 --> 00:05:30,580
we simply put quotation marks open and close,

74
00:05:30,580 --> 00:05:34,350
but with nothing between them and that ends our function.

75
00:05:34,350 --> 00:05:37,920
So so far we have a statement,

76
00:05:37,920 --> 00:05:43,350
which gives us whatever the user enters minus any spaces that they put it.

77
00:05:43,350 --> 00:05:49,200
We could now wrap a second function around what we've got so far to give us an uppercase

78
00:05:49,200 --> 00:05:50,350
version of this string.

79
00:05:50,350 --> 00:05:52,360
Again,

80
00:05:52,360 --> 00:05:54,050
the function goes at the start,

81
00:05:54,050 --> 00:05:56,180
and it's you case.

82
00:05:56,180 --> 00:06:02,250
And then we put the statement that we have so far in parentheses.

83
00:06:02,250 --> 00:06:04,100
After the name of the function,

84
00:06:04,100 --> 00:06:06,300
let's test the macron,

85
00:06:06,300 --> 00:06:11,060
so I'm going to reinstate our break point and run.

86
00:06:11,060 --> 00:06:23,650
Now let's see what we've got.

87
00:06:23,650 --> 00:06:26,450
So the space science it is removed.

88
00:06:26,450 --> 00:06:28,350
Everything goes to upper case,

89
00:06:28,350 --> 00:06:35,620
and we've got do hip hop will be working with strings throughout the course,

90
00:06:35,620 --> 00:06:38,350
so you will get plenty of practice on doing all the best.

91
00:06:38,350 --> 00:06:39,420
Ah,

92
00:06:39,420 --> 00:06:44,340
so let's leave it there for the moment and we'll move on to look at working with number

93
00:06:44,340 --> 00:06:45,150
variables,

94
00:06:45,150 --> 00:06:49,150
So I'm gonna click resets to come out of brake mode,

95
00:06:49,150 --> 00:07:07,100
remove my break point and then save out changes to declare string variable of indeterminate

96
00:07:07,100 --> 00:07:07,650
length.

97
00:07:07,650 --> 00:07:17,850
Use this in tax dim str variable as string to declare string variable whose length is fixed

98
00:07:17,850 --> 00:07:17,850
.

99
00:07:17,850 --> 00:07:24,770
Use this in tax dim STL variable as string star ex,

100
00:07:24,770 --> 00:07:27,760
where X is the number of characters allowed.

101
00:07:27,760 --> 00:07:30,940
B B A.

102
00:07:30,940 --> 00:07:35,070
Contains a number of functions for manipulating the contents of strings.

