WEBVTT
ï»¿1
00:00:00.000 --> 00:00:17.450
having had a look at the visual basic editor and some of the tools it has available,

2
00:00:17.450 --> 00:00:24.460
let's now move on to actually write in a macro macron is essentially a subroutine,

3
00:00:24.460 --> 00:00:29.960
so we'll be discussing the different likes of subroutine that you can create within the

4
00:00:29.960 --> 00:00:30.530
module.

5
00:00:30.530 --> 00:00:35.800
When creating the macro solution.

6
00:00:35.800 --> 00:00:41.180
It's almost inevitable that you won't want to put all of your code in one single some

7
00:00:41.180 --> 00:00:41.800
procedure.

8
00:00:41.800 --> 00:00:50.670
A more typical approach is to put all the code relating to one stage of your operation into

9
00:00:50.670 --> 00:00:55.280
a separate some procedure and then toe have one main,

10
00:00:55.280 --> 00:00:58.700
some procedure which brings it all together.

11
00:00:58.700 --> 00:01:01.950
So let's say that we're about to create a macro,

12
00:01:01.950 --> 00:01:07.150
and we have sat down and designed this various steps that we want to perform,

13
00:01:07.150 --> 00:01:11.550
and we've broken them down into three main areas.

14
00:01:11.550 --> 00:01:15.750
Initialization processing and finalization.

15
00:01:15.750 --> 00:01:21.850
So let's create a diagram that shows the functionality that we want Town macro toe.

16
00:01:21.850 --> 00:01:24.600
I'm just going to use insert smart,

17
00:01:24.600 --> 00:01:26.450
aren't hierarchy.

18
00:01:26.450 --> 00:01:37.720
Let's just go with the plane organization chart so we can dilate this box so this would be

19
00:01:37.720 --> 00:01:38.590
our main,

20
00:01:38.590 --> 00:01:40.360
some procedure,

21
00:01:40.360 --> 00:01:41.950
which will be the macro itself.

22
00:01:41.950 --> 00:01:45.950
Then we'd have a sub procedure for initialization,

23
00:01:45.950 --> 00:01:57.850
another one for processing and another one to finalization.

24
00:01:57.850 --> 00:02:01.050
And then,

25
00:02:01.050 --> 00:02:01.570
as I said,

26
00:02:01.570 --> 00:02:03.940
this one would be the macro.

27
00:02:03.940 --> 00:02:09.550
So let's give it a an outline and making the outline thinker.

28
00:02:09.550 --> 00:02:17.000
Okay,

29
00:02:17.000 --> 00:02:19.550
so that's the structure that we're aiming for.

30
00:02:19.550 --> 00:02:30.950
Let's now look at how we will write code that reflects that structure that's going to the

31
00:02:30.950 --> 00:02:32.150
Exercises folder.

32
00:02:32.150 --> 00:02:36.350
And if you remember from Section one,

33
00:02:36.350 --> 00:02:44.760
we're going to put most of our Mac rose into this Adan called GCS word VB a training and

34
00:02:44.760 --> 00:02:48.150
open and adding just right click and choose open.

35
00:02:48.150 --> 00:02:56.250
Then let's go to develop out visual Basic and in the Models folder.

36
00:02:56.250 --> 00:03:01.550
Let's open up the second model right in Macron's in VB.

37
00:03:01.550 --> 00:03:08.400
So the first sub procedure that we want to create will be our main sub procedure,

38
00:03:08.400 --> 00:03:11.750
which will be the macro to define a macro,

39
00:03:11.750 --> 00:03:17.350
you use the optional keyword public bullet by sub,

40
00:03:17.350 --> 00:03:19.740
followed by the name of the macro,

41
00:03:19.740 --> 00:03:26.440
and we're going to use the prefix section zero to this is video tutorial.

42
00:03:26.440 --> 00:03:28.850
03 macro A.

43
00:03:28.850 --> 00:03:30.850
That's a prefix,

44
00:03:30.850 --> 00:03:34.850
and then we'll call it main with my press enter.

45
00:03:34.850 --> 00:03:41.790
The program completes the sub structure for me by putting in the answer the readability and

46
00:03:41.790 --> 00:03:45.690
then gonna press the tab key on on the editing toolbar,

47
00:03:45.690 --> 00:03:48.050
I'll just show you which one is edited.

48
00:03:48.050 --> 00:03:50.550
This one is the standard toolbar,

49
00:03:50.550 --> 00:03:54.350
and this is edited on the editing tool,

50
00:03:54.350 --> 00:03:57.250
but you have actually got an invent button.

51
00:03:57.250 --> 00:04:04.620
But as you can see in brackets that the shortcut tab is much more convenient on the other

52
00:04:04.620 --> 00:04:07.450
way out Dent his shift from time.

53
00:04:07.450 --> 00:04:12.890
I now want to call my subordinate.

54
00:04:12.890 --> 00:04:13.950
Some procedure is.

55
00:04:13.950 --> 00:04:20.350
And to do that I use the optional keyword call followed by the name of the sub procedure.

56
00:04:20.350 --> 00:04:23.050
So I'm gonna full of the same name in convention.

57
00:04:23.050 --> 00:04:27.570
020 p on initialization.

58
00:04:27.570 --> 00:04:31.650
That was our first step.

59
00:04:31.650 --> 00:04:44.050
Then we had processing on finalisation.

60
00:04:44.050 --> 00:04:55.850
So those are the three subordinate some procedures which my main macro will call.

61
00:04:55.850 --> 00:04:57.220
And now,

62
00:04:57.220 --> 00:04:57.820
of course,

63
00:04:57.820 --> 00:04:59.350
we need to define these.

64
00:04:59.350 --> 00:05:02.650
Let's be lazy and just copy this code.

65
00:05:02.650 --> 00:05:07.990
Paste it here we can then use out dent,

66
00:05:07.990 --> 00:05:12.500
which is shift tab to pop it back there.

67
00:05:12.500 --> 00:05:17.940
And we just replace the word cool with private sub.

68
00:05:17.940 --> 00:05:26.350
And if I then just paste that over the word cool.

69
00:05:26.350 --> 00:05:35.650
We don't have the skeleton off our three sub procedures.

70
00:05:35.650 --> 00:05:41.220
So that's the key difference between a macro on a sub procedure,

71
00:05:41.220 --> 00:05:43.350
which is called by a macron.

72
00:05:43.350 --> 00:05:48.550
The macro itself uses public sub and the some procedures,

73
00:05:48.550 --> 00:05:53.940
which is called use private sudden by default.

74
00:05:53.940 --> 00:05:55.250
Within a module.

75
00:05:55.250 --> 00:05:57.450
Some procedures are public,

76
00:05:57.450 --> 00:05:59.650
so if this is admitted,

77
00:05:59.650 --> 00:06:03.050
it becomes a public some procedure anyway.

78
00:06:03.050 --> 00:06:06.460
Let's just put some code in there,

79
00:06:06.460 --> 00:06:08.150
so we've actually got something happening.

80
00:06:08.150 --> 00:06:10.420
So again are tres tab on.

81
00:06:10.420 --> 00:06:20.480
Just use MSG Box and in quotes initialization complete.

82
00:06:20.480 --> 00:06:26.160
Okay,

83
00:06:26.160 --> 00:06:29.490
lets just copy that Kings of the other subs.

84
00:06:29.490 --> 00:06:42.550
This will then be processing and organization.

85
00:06:42.550 --> 00:06:49.210
So there's our basic structure.

86
00:06:49.210 --> 00:06:55.430
Let's save our changes and move back to Word,

87
00:06:55.430 --> 00:07:01.300
either by closing the Baby E or all 10 11 and on the developer toolbar.

88
00:07:01.300 --> 00:07:02.860
Let's get cold,

89
00:07:02.860 --> 00:07:03.690
Mac Rose.

90
00:07:03.690 --> 00:07:09.810
Here's the macro that we wrote as our project at the end of the last section.

91
00:07:09.810 --> 00:07:12.990
And here's the macro we've just written and,

92
00:07:12.990 --> 00:07:13.330
of course,

93
00:07:13.330 --> 00:07:14.050
maybe run.

94
00:07:14.050 --> 00:07:15.260
It just cools.

95
00:07:15.260 --> 00:07:15.890
There's three.

96
00:07:15.890 --> 00:07:19.750
Some prestige is and displays our chemistry books.

97
00:07:19.750 --> 00:07:37.700
Message Macro is a public sub procedure placed inside a model private sub prestigious

98
00:07:37.700 --> 00:07:45.540
placed in the module can only be accessed by other sub procedures in that same module to

99
00:07:45.540 --> 00:07:47.240
run one sub procedure from within.

100
00:07:47.240 --> 00:07:47.750
Another,

101
00:07:47.750 --> 00:07:50.440
use the optional keyword cool.

102
00:07:50.440 --> 00:07:53.270
Pull it by the name of the some procedure.

