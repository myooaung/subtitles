WEBVTT
ï»¿1
00:00:00.000 --> 00:00:14.690
in this video will talk about stepping through your code in break mode.

2
00:00:14.690 --> 00:00:21.270
Normal code execution involved running your macro from start to finish in break mode,

3
00:00:21.270 --> 00:00:21.750
However,

4
00:00:21.750 --> 00:00:24.450
you can run your macaroons slow motion,

5
00:00:24.450 --> 00:00:29.720
execute in one line at a time and monitoring values within your program.

6
00:00:29.720 --> 00:00:34.050
As you do so and the exercises fold up,

7
00:00:34.050 --> 00:00:37.250
we'll go back into 08 debugging and error handling,

8
00:00:37.250 --> 00:00:40.550
and we'll go back into debug in practice.

9
00:00:40.550 --> 00:00:51.350
And let's work with the macro that we used in the last video.

10
00:00:51.350 --> 00:00:58.000
The first way to end a break mode is when your macro actually contains an error when it

11
00:00:58.000 --> 00:01:01.750
generates a runtime era and as we know,

12
00:01:01.750 --> 00:01:04.550
this particular macro will do just that.

13
00:01:04.550 --> 00:01:11.450
So if I run when we get to the situation where we're trying to delete a table that no

14
00:01:11.450 --> 00:01:12.650
longer exists,

15
00:01:12.650 --> 00:01:15.950
were offered the chance of clicking on either end,

16
00:01:15.950 --> 00:01:18.380
which simply terminates the macro well,

17
00:01:18.380 --> 00:01:19.040
debug.

18
00:01:19.040 --> 00:01:21.010
When we click debug,

19
00:01:21.010 --> 00:01:24.510
we are now taken into what's called break mode,

20
00:01:24.510 --> 00:01:28.050
so code execution is currently frozen,

21
00:01:28.050 --> 00:01:31.350
but the macro is still technically running.

22
00:01:31.350 --> 00:01:36.170
Now we know that it can't run properly because it has broken.

23
00:01:36.170 --> 00:01:39.050
It's got to a stage where it can't do what it's being asked to do,

24
00:01:39.050 --> 00:01:42.450
so we can't actually continue to execute it.

25
00:01:42.450 --> 00:01:50.350
But what we can do in break mode is we can query all the various components within our code

26
00:01:50.350 --> 00:01:50.350
.

27
00:01:50.350 --> 00:01:51.180
So,

28
00:01:51.180 --> 00:01:51.950
for example,

29
00:01:51.950 --> 00:01:54.350
if I hover over the I,

30
00:01:54.350 --> 00:01:58.650
you'll see that the data tip tells me I equal seven.

31
00:01:58.650 --> 00:02:06.930
I can also introduce statements into the immediate window to do this.

32
00:02:06.930 --> 00:02:11.750
I put a question mark and then I put any valid and relevant statement.

33
00:02:11.750 --> 00:02:12.610
So,

34
00:02:12.610 --> 00:02:13.360
for example,

35
00:02:13.360 --> 00:02:16.050
let's have this document dot tables don't count.

36
00:02:16.050 --> 00:02:23.060
I'm gonna hold down control and to strike this code in and then tied thought count.

37
00:02:23.060 --> 00:02:25.750
When I hold her over this line,

38
00:02:25.750 --> 00:02:32.450
you'll see it tells me the number of tables currently in this document is six.

39
00:02:32.450 --> 00:02:38.950
So I know I seven and we've got six tables left.

40
00:02:38.950 --> 00:02:47.350
I could also do something like I is greater than this document dot tables not count.

41
00:02:47.350 --> 00:02:51.160
And I can't get the answer this time by harboring.

42
00:02:51.160 --> 00:02:51.630
But of course,

43
00:02:51.630 --> 00:02:52.610
he five percenter.

44
00:02:52.610 --> 00:02:56.450
Then it tells me that that statement is true.

45
00:02:56.450 --> 00:03:03.850
So that's the first way of getting into brake mode.

46
00:03:03.850 --> 00:03:05.850
Whenever an error occurs,

47
00:03:05.850 --> 00:03:08.550
you click on the debug button.

48
00:03:08.550 --> 00:03:19.220
Let's just close the file without saving the changes and then go back into the original

49
00:03:19.220 --> 00:03:25.760
version the second way of getting into brake mode.

50
00:03:25.760 --> 00:03:30.550
It's simply to click on any line in your macro and use this step into command.

51
00:03:30.550 --> 00:03:34.950
The most convenient way of doing that is to press F eight,

52
00:03:34.950 --> 00:03:38.050
but you'll also find it under the debug menu.

53
00:03:38.050 --> 00:03:42.850
Step into and also here on the deeper toolbar.

54
00:03:42.850 --> 00:03:43.730
And,

55
00:03:43.730 --> 00:03:44.140
of course,

56
00:03:44.140 --> 00:03:46.250
if the debug toolbar is not visible,

57
00:03:46.250 --> 00:03:49.290
you simply right click in the toolbar area.

58
00:03:49.290 --> 00:03:50.240
Choose debug.

59
00:03:50.240 --> 00:03:54.250
I'll use this method so you can see me doing it.

60
00:03:54.250 --> 00:03:55.820
Yes,

61
00:03:55.820 --> 00:03:56.070
it is.

62
00:03:56.070 --> 00:03:56.850
I click.

63
00:03:56.850 --> 00:04:03.340
I'm taking into brake mode on the line that will be executed when I pressed the step into

64
00:04:03.340 --> 00:04:05.770
but next or when I press f eight,

65
00:04:05.770 --> 00:04:07.580
Next is highlighted.

66
00:04:07.580 --> 00:04:10.650
So this is the line that's gonna be executed next.

67
00:04:10.650 --> 00:04:16.450
I simply keep pressing F eight to execute the program line by line.

68
00:04:16.450 --> 00:04:18.850
So now I've jumped into the loop.

69
00:04:18.850 --> 00:04:22.250
I has been initialized as one,

70
00:04:22.250 --> 00:04:25.050
and when I pry separates again,

71
00:04:25.050 --> 00:04:26.900
of course,

72
00:04:26.900 --> 00:04:29.250
the first table now gets deleted.

73
00:04:29.250 --> 00:04:31.350
If I get back to word,

74
00:04:31.350 --> 00:04:37.500
I can see that the January table has gone and so forth.

75
00:04:37.500 --> 00:04:40.240
And of course,

76
00:04:40.240 --> 00:04:45.330
I can keep monitoring my values in the same way as we were just discussing.

77
00:04:45.330 --> 00:04:52.550
So I can hover over different parts of the code to see what the current values are like in

78
00:04:52.550 --> 00:04:54.450
that type in code,

79
00:04:54.450 --> 00:04:56.150
in the immediate window.

80
00:04:56.150 --> 00:05:11.930
So you can see I've got a Latin left and I can even introduce new code as I'm stepping

81
00:05:11.930 --> 00:05:15.800
through like you just type in.

82
00:05:15.800 --> 00:05:26.520
Then,

83
00:05:26.520 --> 00:05:28.150
as I continued to press F eight,

84
00:05:28.150 --> 00:05:30.930
when that Linus executed,

85
00:05:30.930 --> 00:05:33.860
which is now And of course,

86
00:05:33.860 --> 00:05:38.100
the benefit of this is that I'm taken back to the word documents,

87
00:05:38.100 --> 00:05:39.840
so I might then be able to sort of,

88
00:05:39.840 --> 00:05:40.110
ah,

89
00:05:40.110 --> 00:05:42.260
monitor what's going on in the document,

90
00:05:42.260 --> 00:05:46.450
which might be useful at that particular point in the D 1,000,000,000 process.

91
00:05:46.450 --> 00:05:49.350
Once I finished with that,

92
00:05:49.350 --> 00:05:54.680
I can take that line out on carry on debugging.

93
00:05:54.680 --> 00:05:58.840
Okay,

94
00:05:58.840 --> 00:05:59.790
so that's the second take.

95
00:05:59.790 --> 00:06:05.480
Make you simply click on any line and you then start using this step into command to

96
00:06:05.480 --> 00:06:09.480
actually execute your code line by line again.

97
00:06:09.480 --> 00:06:15.910
Let's just close and reopen.

98
00:06:15.910 --> 00:06:24.300
The third technique is to use what are called break points.

99
00:06:24.300 --> 00:06:25.830
What this means,

100
00:06:25.830 --> 00:06:27.540
basically is you can then run the macro.

101
00:06:27.540 --> 00:06:28.050
Normally,

102
00:06:28.050 --> 00:06:31.450
whenever a line that has a break point is encountered,

103
00:06:31.450 --> 00:06:33.220
you're going to break mode.

104
00:06:33.220 --> 00:06:41.080
And then from there you can either examine various elements of your code and continue on

105
00:06:41.080 --> 00:06:42.420
run in the macro,

106
00:06:42.420 --> 00:06:45.550
or you can proceed step by step.

107
00:06:45.550 --> 00:06:47.470
As always,

108
00:06:47.470 --> 00:06:49.660
there are several ways of adding a break point.

109
00:06:49.660 --> 00:06:55.750
The easiest is simply to go into this bar on the left of your code and click,

110
00:06:55.750 --> 00:06:57.850
and this basically is a toggle,

111
00:06:57.850 --> 00:07:02.150
so you click to add the break point and you click to get rid of it.

112
00:07:02.150 --> 00:07:04.270
Similarly,

113
00:07:04.270 --> 00:07:06.250
you can right click on any line,

114
00:07:06.250 --> 00:07:10.220
go to the toggle sub menu and shoes,

115
00:07:10.220 --> 00:07:14.650
break points both ad and to remove.

116
00:07:14.650 --> 00:07:17.170
And as you can probably guess,

117
00:07:17.170 --> 00:07:19.120
if you look under the Deep Park menu,

118
00:07:19.120 --> 00:07:25.010
you'll find exactly the same that total drink points on the short cut F nine.

119
00:07:25.010 --> 00:07:26.230
And then,

120
00:07:26.230 --> 00:07:26.610
of course,

121
00:07:26.610 --> 00:07:27.870
on the debug toolbar.

122
00:07:27.870 --> 00:07:29.250
We've got the same thing there.

123
00:07:29.250 --> 00:07:31.450
Total break point F nine.

124
00:07:31.450 --> 00:07:34.450
When a break points in place,

125
00:07:34.450 --> 00:07:35.660
you simply run.

126
00:07:35.660 --> 00:07:37.450
Your macro has been normal,

127
00:07:37.450 --> 00:07:40.350
and when it encounters that line,

128
00:07:40.350 --> 00:07:44.400
it then goes into brake mode without line frozen.

129
00:07:44.400 --> 00:07:47.950
You can then carry out your usual investigations.

130
00:07:47.950 --> 00:07:55.460
And when you already you can continue either by clicking the run button or Michael again

131
00:07:55.460 --> 00:07:56.150
that continue.

132
00:07:56.150 --> 00:07:58.580
So in this particular macro,

133
00:07:58.580 --> 00:08:01.650
there's not much difference because we've just got the one line.

134
00:08:01.650 --> 00:08:02.790
And,

135
00:08:02.790 --> 00:08:03.160
of course,

136
00:08:03.160 --> 00:08:11.160
at any point you can toggle the break point to switch it off and then either step through

137
00:08:11.160 --> 00:08:15.960
normally from there or simply run to go to the end.

138
00:08:15.960 --> 00:08:16.080
And,

139
00:08:16.080 --> 00:08:17.720
of course we know what the end is.

140
00:08:17.720 --> 00:08:20.010
We get to our problem state.

141
00:08:20.010 --> 00:08:21.620
Okay,

142
00:08:21.620 --> 00:08:22.650
lets close again.

143
00:08:22.650 --> 00:08:31.200
And finally,

144
00:08:31.200 --> 00:08:36.200
let's have a look at a couple of options that apply to the situation where the macro you'll

145
00:08:36.200 --> 00:08:37.860
run in cools other,

146
00:08:37.860 --> 00:08:38.850
some procedures.

147
00:08:38.850 --> 00:08:44.750
So I'm just gonna create a second some procedure here.

148
00:08:44.750 --> 00:08:48.950
Let's just call it other stuff,

149
00:08:48.950 --> 00:08:53.050
and I'm gonna put another full loop in it.

150
00:08:53.050 --> 00:09:03.150
Let's just say MSG folks,

151
00:09:03.150 --> 00:09:12.720
and then in the main macro will put a call to that stubborn T.

152
00:09:12.720 --> 00:09:19.880
So we're going to break mode by using F eight.

153
00:09:19.880 --> 00:09:22.470
Step into now.

154
00:09:22.470 --> 00:09:24.050
Once we've executed that line,

155
00:09:24.050 --> 00:09:26.970
we're about to execute the call.

156
00:09:26.970 --> 00:09:27.780
Other stuff.

157
00:09:27.780 --> 00:09:28.350
Macro,

158
00:09:28.350 --> 00:09:33.400
let's just close this for a moment on the normal circumstances.

159
00:09:33.400 --> 00:09:35.250
If we keep pressing F eight,

160
00:09:35.250 --> 00:09:37.850
it will go into that subroutine,

161
00:09:37.850 --> 00:09:43.520
and it will allow you to step into it and execute loan byline in the same ways you're doing

162
00:09:43.520 --> 00:09:44.350
in the main backer.

163
00:09:44.350 --> 00:09:54.650
So let's just step through one to three.

164
00:09:54.650 --> 00:09:58.060
Cool now.

165
00:09:58.060 --> 00:09:59.950
Once it's completed that loop,

166
00:09:59.950 --> 00:10:01.030
of course,

167
00:10:01.030 --> 00:10:03.250
it returns back into the main macro.

168
00:10:03.250 --> 00:10:07.750
We delete the next table,

169
00:10:07.750 --> 00:10:11.050
and now we're about to do cool other stuff.

170
00:10:11.050 --> 00:10:13.540
But he begin purposes.

171
00:10:13.540 --> 00:10:17.470
If we happy that there's nothing going on in this sub procedure,

172
00:10:17.470 --> 00:10:18.300
the sub preceded.

173
00:10:18.300 --> 00:10:21.450
It's being called which we need to address.

174
00:10:21.450 --> 00:10:28.550
We can simply run this other sub procedure rather than stepping through it as we did before

175
00:10:28.550 --> 00:10:28.550
.

176
00:10:28.550 --> 00:10:31.400
On this is where this option comes in.

177
00:10:31.400 --> 00:10:33.550
Shift F eight step over.

178
00:10:33.550 --> 00:10:35.450
It doesn't mean a mitt.

179
00:10:35.450 --> 00:10:39.310
It means don't step through line by line.

180
00:10:39.310 --> 00:10:47.350
So to step over means to actually simply execute the called subroutine Asper normal rather

181
00:10:47.350 --> 00:10:49.010
than step through it line by line.

182
00:10:49.010 --> 00:10:50.950
So when I click stepped over,

183
00:10:50.950 --> 00:10:58.150
you'll see it goes through and there's my 1234 and then takes me back into the main macro.

184
00:10:58.150 --> 00:11:02.750
Let's continue to step into at this time.

185
00:11:02.750 --> 00:11:07.050
Let's use to step into to get into the macro.

186
00:11:07.050 --> 00:11:14.040
So let's say we've checked out the first task and that's the one that we were interested in

187
00:11:14.040 --> 00:11:14.700
checking out.

188
00:11:14.700 --> 00:11:21.610
So we don't need to do any more steppin within this sub procedure we've seen as much as we

189
00:11:21.610 --> 00:11:22.250
need to see.

190
00:11:22.250 --> 00:11:29.380
We now want to just basically execute the remainder Aspen normal and then go back into the

191
00:11:29.380 --> 00:11:32.510
original macro that we started from on.

192
00:11:32.510 --> 00:11:36.600
This is where control shift F eight step out comes in.

193
00:11:36.600 --> 00:11:41.420
So if you're in a macro that's being called in your stepping through it line by line,

194
00:11:41.420 --> 00:11:44.010
you no longer want to step through line by line.

195
00:11:44.010 --> 00:11:45.870
You just want to execute the rest of it.

196
00:11:45.870 --> 00:11:46.850
Aspen normal.

197
00:11:46.850 --> 00:11:51.050
Then you press control shift F eight will step out.

198
00:11:51.050 --> 00:11:54.850
So we've already seen Task one performed.

199
00:11:54.850 --> 00:11:56.350
Let me step out.

200
00:11:56.350 --> 00:12:06.150
We see task 234 and then we taken back into the normal macro where we continue executing

201
00:12:06.150 --> 00:12:13.230
line by line using step into or in any time we can simply say okay from here,

202
00:12:13.230 --> 00:12:14.850
I just want to run it to the end.

203
00:12:14.850 --> 00:12:18.140
My present the continue or run,

204
00:12:18.140 --> 00:12:30.040
but until eventually we get to a bug.

205
00:12:30.040 --> 00:12:35.770
So that's an overview of the main commands that we have at our disposal to step in

206
00:12:35.770 --> 00:12:37.350
throughout code line by line.

207
00:12:37.350 --> 00:12:39.940
In the final video in this section,

208
00:12:39.940 --> 00:12:43.850
revert to the topic off monitoring our code,

209
00:12:43.850 --> 00:12:46.050
and we'll look at working with watchers.

210
00:12:46.050 --> 00:13:00.150
Brake mode can be entered by clicking the debug button when in error occurs my press in F

211
00:13:00.150 --> 00:13:08.500
eight step into or by setting break points in break mode.

212
00:13:08.500 --> 00:13:14.040
Press in FH causes v b A to execute the currently highlighted line of code and stop on the

213
00:13:14.040 --> 00:13:17.970
next line president.

214
00:13:17.970 --> 00:13:24.080
Shift F eight Step over allows you to execute a cold sir procedure rather than stepping

215
00:13:24.080 --> 00:13:30.340
through it line by line while stepping through a cold.

216
00:13:30.340 --> 00:13:37.270
Some procedure President Control Shift F eight Step out allows you to execute the remainder

217
00:13:37.270 --> 00:13:40.180
of the sub procedure rather than sticking through it.

218
00:13:40.180 --> 00:13:40.980
Line by line

