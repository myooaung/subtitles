1
00:00:00,000 --> 00:00:11,920
when working with user forms.

2
00:00:11,920 --> 00:00:17,440
One of the things you have to bear in mind is that the user won't always enter data in the

3
00:00:17,440 --> 00:00:21,470
format with a range or when the attributes that you want them to.

4
00:00:21,470 --> 00:00:23,250
In this video,

5
00:00:23,250 --> 00:00:26,350
we'll look at ways of validating user input.

6
00:00:26,350 --> 00:00:44,050
Here's the form that we created and worked on in the last two videos,

7
00:00:44,050 --> 00:00:47,950
and although we haven't directly addressed the question of validation,

8
00:00:47,950 --> 00:00:51,050
the form does include some validation already.

9
00:00:51,050 --> 00:00:53,710
For example,

10
00:00:53,710 --> 00:01:01,070
here we've made it impossible for the user to enter non numeric values all values outside a

11
00:01:01,070 --> 00:01:02,150
given range.

12
00:01:02,150 --> 00:01:07,150
And we've done all this a design time purely by lock in the tax boxes.

13
00:01:07,150 --> 00:01:10,150
So we've set the locked property to true.

14
00:01:10,150 --> 00:01:13,510
And then here on the spin buttons,

15
00:01:13,510 --> 00:01:16,200
which control the value in the textbooks.

16
00:01:16,200 --> 00:01:18,850
We've actually got a max and the men,

17
00:01:18,850 --> 00:01:23,950
so it's impossible for the user to go outside the specified range.

18
00:01:23,950 --> 00:01:31,550
Another example of this type of design time validation can be found on combo boxes.

19
00:01:31,550 --> 00:01:34,750
Let's run the combo box,

20
00:01:34,750 --> 00:01:40,450
and the name combo box implies that it's a combination.

21
00:01:40,450 --> 00:01:45,610
It's a combination of a drop down list and the text box which means that weaken type,

22
00:01:45,610 --> 00:01:47,040
a non existent fund,

23
00:01:47,040 --> 00:01:53,550
which is clearly undesirable.

24
00:01:53,550 --> 00:01:56,950
So let's look at how we can stop that from happening.

25
00:01:56,950 --> 00:02:06,350
If we highlight both of these combo boxes using click on the Control click in the

26
00:02:06,350 --> 00:02:07,540
Properties window,

27
00:02:07,540 --> 00:02:09,740
we have the style attributes,

28
00:02:09,740 --> 00:02:20,150
and you'll see we can either have drop down combo or drop down list.

29
00:02:20,150 --> 00:02:22,450
And if we true's drop down list,

30
00:02:22,450 --> 00:02:29,010
then all we can do is to choose one of the options we can't actually type on option One

31
00:02:29,010 --> 00:02:33,380
undesirable consequence of what after stun is that I've managed to wipe the two values that

32
00:02:33,380 --> 00:02:34,280
we had in place,

33
00:02:34,280 --> 00:02:36,550
so I'll just reinstate those.

34
00:02:36,550 --> 00:02:38,750
This one was impact.

35
00:02:38,750 --> 00:02:50,250
This one was times New Roman and let's test it.

36
00:02:50,250 --> 00:02:56,720
So now when I type as soon as I saw happen,

37
00:02:56,720 --> 00:02:58,760
end it drums down to the first font,

38
00:02:58,760 --> 00:02:59,650
beginning with N.

39
00:02:59,650 --> 00:03:02,050
It doesn't let me actually type of value,

40
00:03:02,050 --> 00:03:08,730
so a lot of validation can be performed simply by the way you designed the form and what

41
00:03:08,730 --> 00:03:13,010
you end up with our maybe just a few text fields that need validation.

42
00:03:13,010 --> 00:03:17,660
So you've got a test that certain fields have numbers in them certain fields have dates in

43
00:03:17,660 --> 00:03:17,820
them,

44
00:03:17,820 --> 00:03:18,590
that sort of thing.

45
00:03:18,590 --> 00:03:20,860
So for our example,

46
00:03:20,860 --> 00:03:27,950
let's say we just want to test that the title and author aren't left blank and don't exceed

47
00:03:27,950 --> 00:03:28,870
a limit of,

48
00:03:28,870 --> 00:03:29,180
let's,

49
00:03:29,180 --> 00:03:29,630
say,

50
00:03:29,630 --> 00:03:31,050
50 characters.

51
00:03:31,050 --> 00:03:34,030
There is actually a max length property,

52
00:03:34,030 --> 00:03:38,150
so we could use that in exactly the same way as we have been designed time.

53
00:03:38,150 --> 00:03:39,840
But let's say that since we do,

54
00:03:39,840 --> 00:03:44,950
invalidation will do all the validation in code rather than it designed time.

55
00:03:44,950 --> 00:03:51,790
So let's go back to our create button code and at the top of this event handler,

56
00:03:51,790 --> 00:03:56,570
let's put some code which will call a validate function,

57
00:03:56,570 --> 00:04:02,760
and we can have the validate function return in a 1,000,000,000 value or another technique

58
00:04:02,760 --> 00:04:02,760
,

59
00:04:02,760 --> 00:04:05,200
which is the one I'm going to show you is tohave it,

60
00:04:05,200 --> 00:04:06,850
return a string.

61
00:04:06,850 --> 00:04:09,000
If the string is blank,

62
00:04:09,000 --> 00:04:10,570
that means there are no errors,

63
00:04:10,570 --> 00:04:12,440
and if the string isn't blank,

64
00:04:12,440 --> 00:04:14,680
it will actually contain the error messages,

65
00:04:14,680 --> 00:04:15,950
which we then display.

66
00:04:15,950 --> 00:04:24,250
So to hold the error messages will create a variable called STR Errors has strength,

67
00:04:24,250 --> 00:04:26,510
and then we'll call our function,

68
00:04:26,510 --> 00:04:27,850
which were right in a moment.

69
00:04:27,850 --> 00:04:34,090
Str errors equals Let's call it validate form.

70
00:04:34,090 --> 00:04:38,750
This is the function well right in the moment and that we could test the result.

71
00:04:38,750 --> 00:04:44,450
If STL errors is not blank,

72
00:04:44,450 --> 00:04:46,470
then the display.

73
00:04:46,470 --> 00:04:47,450
An error message.

74
00:04:47,450 --> 00:04:54,750
MSG box str errors which may contain one or more error messages,

75
00:04:54,750 --> 00:04:57,100
perhaps each on a separate line.

76
00:04:57,100 --> 00:05:02,350
And then we can exit the sub so nothing else happens.

77
00:05:02,350 --> 00:05:07,110
And if so now,

78
00:05:07,110 --> 00:05:14,950
I'm just gonna go down to the bottom of the code window and add in our function private

79
00:05:14,950 --> 00:05:20,090
validate form,

80
00:05:20,090 --> 00:05:26,550
and it won't need to accept any parameters because it's going directly to the form,

81
00:05:26,550 --> 00:05:29,650
but it will need to return a string value.

82
00:05:29,650 --> 00:05:33,650
So after the closing parentheses as string,

83
00:05:33,650 --> 00:05:37,870
I want to switch across to procedure view.

84
00:05:37,870 --> 00:05:44,620
Now we need to have a string variable in which we can build our error messages so I'll use

85
00:05:44,620 --> 00:05:45,350
the same name,

86
00:05:45,350 --> 00:05:45,980
which,

87
00:05:45,980 --> 00:05:46,320
of course,

88
00:05:46,320 --> 00:05:47,140
is not a problem,

89
00:05:47,140 --> 00:05:49,020
because we're now in a separate procedure.

90
00:05:49,020 --> 00:05:53,410
Them str errors as strange,

91
00:05:53,410 --> 00:05:57,550
and then we just test out two text boxes.

92
00:05:57,550 --> 00:05:59,310
So let's start with the title,

93
00:05:59,310 --> 00:06:04,350
and we could just use the Len property to test how many characters there are.

94
00:06:04,350 --> 00:06:12,150
So if len me dot txt title don't value.

95
00:06:12,150 --> 00:06:18,050
So let's say we've got a minimum for the title of five characters.

96
00:06:18,050 --> 00:06:25,200
So if it's less than five and we can just copy this,

97
00:06:25,200 --> 00:06:30,520
don't really think we need to go into a separate line.

98
00:06:30,520 --> 00:06:34,250
So lives Thea continuation character and just paste it in there.

99
00:06:34,250 --> 00:06:49,240
So the other limit we said waas 50 So or it's greater than 50 then str errors the calls

100
00:06:49,240 --> 00:07:05,170
please and a title between five and 50 characters and if and then we just do the same for

101
00:07:05,170 --> 00:07:08,850
the author copy paste paste,

102
00:07:08,850 --> 00:07:11,020
txt,

103
00:07:11,020 --> 00:07:27,440
Orthodox value So now we want to return.

104
00:07:27,440 --> 00:07:35,700
Str errors on what I will do as well is just to explicitly specify that str Errors at the

105
00:07:35,700 --> 00:07:44,650
start equals the null string and to return str errors We simply is the name of the function

106
00:07:44,650 --> 00:07:56,930
Validate form equals str errors One error I've made is that here I've potentially wiped the

107
00:07:56,930 --> 00:07:59,150
first error So if this is an error,

108
00:07:59,150 --> 00:08:01,650
I set str errors on this line.

109
00:08:01,650 --> 00:08:03,920
But if this is also an error,

110
00:08:03,920 --> 00:08:12,070
I simply overwrite str errors on this line so very simple This should be str eras equals

111
00:08:12,070 --> 00:08:16,050
str Errors lie the existent value and percent.

112
00:08:16,050 --> 00:08:22,550
The new value and what we can also do is just to spread these out on two separate lines.

113
00:08:22,550 --> 00:08:27,380
I put in ampersand B B C off at the end,

114
00:08:27,380 --> 00:08:30,250
maybe twice to leave a blank line.

115
00:08:30,250 --> 00:08:46,250
So that's a simple example off how you can set up validation so it starts when they click,

116
00:08:46,250 --> 00:08:49,190
we call the function,

117
00:08:49,190 --> 00:08:54,070
and the return value goes into our local str errors,

118
00:08:54,070 --> 00:08:55,950
the warm local to this some procedure.

119
00:08:55,950 --> 00:08:59,700
If it's not the null string,

120
00:08:59,700 --> 00:09:02,720
we display it and we exit the sub.

121
00:09:02,720 --> 00:09:03,230
In other words,

122
00:09:03,230 --> 00:09:04,750
we do none of this,

123
00:09:04,750 --> 00:09:10,450
so let's just save our changes and test form.

124
00:09:10,450 --> 00:09:18,520
So I'm gonna leave in both blank click on create and you'll see we've got out,

125
00:09:18,520 --> 00:09:19,250
too.

126
00:09:19,250 --> 00:09:21,850
Error message lines coming in there.

127
00:09:21,850 --> 00:09:25,610
If I complete one,

128
00:09:25,610 --> 00:09:32,450
then I left with just one.

129
00:09:32,450 --> 00:09:51,530
It is possible to implement validation of user form controls that design time by making it

130
00:09:51,530 --> 00:09:55,400
impossible for users to enter undesirable data in the first place.

131
00:09:55,400 --> 00:10:01,850
An efficient way of validating all of the fields in the use of form,

132
00:10:01,850 --> 00:10:04,230
which may contain erroneous values,

133
00:10:04,230 --> 00:10:10,220
is to create a function which returns either a Boolean value or a string containing error

134
00:10:10,220 --> 00:10:13,620
messages if there is a found or the null string.

135
00:10:13,620 --> 00:10:15,200
If no errors have found

