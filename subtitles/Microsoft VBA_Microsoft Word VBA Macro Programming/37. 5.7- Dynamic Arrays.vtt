WEBVTT
ï»¿1
00:00:00.000 --> 00:00:11.890
In the last video,

2
00:00:11.890 --> 00:00:17.550
we looked at how you can create an array variable and specify the number of elements it's

3
00:00:17.550 --> 00:00:18.650
designed to contain.

4
00:00:18.650 --> 00:00:22.600
But what if you're not sure how many elements you need to cater for?

5
00:00:22.600 --> 00:00:26.690
What if that number can vary as your code executes?

6
00:00:26.690 --> 00:00:29.950
This is where we use dynamic arrays,

7
00:00:29.950 --> 00:00:32.630
and that's what we'll be discussing in this video.

8
00:00:32.630 --> 00:00:45.760
Let's go back into the Exercises folder and into the Section five folder and let's revisit

9
00:00:45.760 --> 00:00:54.830
the Excel diagram on the right.

10
00:00:54.830 --> 00:00:57.850
Here we have a representation of a dynamic array.

11
00:00:57.850 --> 00:01:04.050
The first thing that distinguishes the dynamic array from the fixed one is the way in which

12
00:01:04.050 --> 00:01:05.050
you declare it,

13
00:01:05.050 --> 00:01:13.460
as we saw with the other examples in parentheses.

14
00:01:13.460 --> 00:01:14.810
After the name of the array,

15
00:01:14.810 --> 00:01:20.770
you normally specify the lowest and highest indexes with a dynamic array.

16
00:01:20.770 --> 00:01:23.550
You don't you still need the parentheses,

17
00:01:23.550 --> 00:01:27.200
but you put nothing between them so effectively.

18
00:01:27.200 --> 00:01:30.350
You always start with a completely empty array.

19
00:01:30.350 --> 00:01:35.610
As your code executes,

20
00:01:35.610 --> 00:01:36.150
however,

21
00:01:36.150 --> 00:01:39.910
you can then constantly re dimension.

22
00:01:39.910 --> 00:01:40.950
You array.

23
00:01:40.950 --> 00:01:44.450
You can say at this point I need four elements,

24
00:01:44.450 --> 00:01:51.550
and I'm going to use the index's one to fool later on United 12 elements,

25
00:01:51.550 --> 00:02:00.860
and you can man just re dimension your way and populate each element inside it later.

26
00:02:00.860 --> 00:02:04.270
Let's say you don't need the last six elements again.

27
00:02:04.270 --> 00:02:04.850
You can read.

28
00:02:04.850 --> 00:02:05.950
I mentioned the array.

29
00:02:05.950 --> 00:02:10.550
Lose the elements and you're in business.

30
00:02:10.550 --> 00:02:14.550
So let's look at how this works in coded.

31
00:02:14.550 --> 00:02:32.680
Let's say we're creating the macro,

32
00:02:32.680 --> 00:02:34.150
which creates a report.

33
00:02:34.150 --> 00:02:36.300
And at the start of the macro,

34
00:02:36.300 --> 00:02:41.950
we want to get a list of all the people who need a copy of this report email to them.

35
00:02:41.950 --> 00:02:46.950
We're going to leave it up to the user to enter unknown number of emails.

36
00:02:46.950 --> 00:02:52.450
We want to save these emails in an array because we don't know how many there going to be.

37
00:02:52.450 --> 00:02:54.750
We can't dimension the array,

38
00:02:54.750 --> 00:02:57.350
so instead will use the dynamic array.

39
00:02:57.350 --> 00:03:07.820
Let's simply call it dynamic a race that's mitt across to procedure.

40
00:03:07.820 --> 00:03:17.220
View civil start by dem in an ordinary string variable str email Singular as strength and

41
00:03:17.220 --> 00:03:20.860
will use this to capture each of the emails that's entered.

42
00:03:20.860 --> 00:03:30.250
They will declare the dynamic array A S T R e mails plural and then we need parentheses

43
00:03:30.250 --> 00:03:35.250
after the name because it's a dynamic array we don't put anything between them.

44
00:03:35.250 --> 00:03:39.950
We'll also need to keep track of how many emails and being entered.

45
00:03:39.950 --> 00:03:45.650
Let's do that with into e mails as Inter Gia.

46
00:03:45.650 --> 00:03:52.590
So as we saw before two repeatedly display an input box.

47
00:03:52.590 --> 00:04:04.250
We use a do loop so we start with do and we end with loop while str email is not equal to

48
00:04:04.250 --> 00:04:12.460
and we can either years two double quotes and just remind you vb a as a constant that you

49
00:04:12.460 --> 00:04:16.480
can also use which is VB No string.

50
00:04:16.480 --> 00:04:19.620
So as soon as they hit the cancel button,

51
00:04:19.620 --> 00:04:25.430
this will cease to be true and the loop will end Inside the loot.

52
00:04:25.430 --> 00:04:31.630
We display an input box and capture the value entered by the user inside.

53
00:04:31.630 --> 00:04:42.930
Str email So it's str email equals input box and let's just say add email.

54
00:04:42.930 --> 00:04:51.280
Recipients press cancel to finish now.

55
00:04:51.280 --> 00:04:51.890
Naturally,

56
00:04:51.890 --> 00:04:56.750
when they press council str email will contain the null strength.

57
00:04:56.750 --> 00:05:01.110
So before we add str email to our array,

58
00:05:01.110 --> 00:05:04.250
we need to test that it doesn't contain the null string.

59
00:05:04.250 --> 00:05:12.790
Hence we need an if statement if str female is not equal to baby.

60
00:05:12.790 --> 00:05:19.650
No strength then and here we want to do three things.

61
00:05:19.650 --> 00:05:21.470
First of all,

62
00:05:21.470 --> 00:05:26.960
we need to add 12 hour interview variable so we can keep track of the number of emails that

63
00:05:26.960 --> 00:05:27.650
have been added.

64
00:05:27.650 --> 00:05:29.240
Secondly,

65
00:05:29.240 --> 00:05:35.040
we need to increase the dimension of our dynamic array by one so that it can accommodate

66
00:05:35.040 --> 00:05:36.250
the new email address.

67
00:05:36.250 --> 00:05:37.620
And thirdly,

68
00:05:37.620 --> 00:05:41.350
we need to add the email address to the array.

69
00:05:41.350 --> 00:05:50.050
So first we say into e mails equals into e mails plus one,

70
00:05:50.050 --> 00:05:53.230
then to change the dimension of,

71
00:05:53.230 --> 00:05:54.350
ah dynamic array,

72
00:05:54.350 --> 00:05:59.050
you use reading because you have already used them.

73
00:05:59.050 --> 00:06:06.740
When you initially declared it so read him A S t ah,

74
00:06:06.740 --> 00:06:10.650
e mails and then parentheses.

75
00:06:10.650 --> 00:06:16.360
We were always going to start at one to in the emails.

76
00:06:16.360 --> 00:06:17.950
So in there,

77
00:06:17.950 --> 00:06:20.370
the first email it will be one toe one.

78
00:06:20.370 --> 00:06:20.930
Hence,

79
00:06:20.930 --> 00:06:22.690
the array will have a size of one.

80
00:06:22.690 --> 00:06:26.310
Then it goes to 1 to 2 and so forth.

81
00:06:26.310 --> 00:06:34.750
One other thing to bear in mind is that whenever you use the reading statement by default,

82
00:06:34.750 --> 00:06:39.550
any existent values within your range will simply disappear.

83
00:06:39.550 --> 00:06:41.650
You'll have the new dimension,

84
00:06:41.650 --> 00:06:45.350
but you'll lose whatever was in the array.

85
00:06:45.350 --> 00:06:47.480
If you don't want that to happen,

86
00:06:47.480 --> 00:06:54.650
which on this occasion we don't You don't have to use the keyword preserve after reading.

87
00:06:54.650 --> 00:07:03.080
So Reading Preserve will both change the size of the array on keep any existing values

88
00:07:03.080 --> 00:07:03.750
intact.

89
00:07:03.750 --> 00:07:09.950
So the final thing we need to do here is toe add str email to our array.

90
00:07:09.950 --> 00:07:11.200
And to do that,

91
00:07:11.200 --> 00:07:15.690
we simply use i N t e mails as the index because of course,

92
00:07:15.690 --> 00:07:19.840
this will always represent the final value within the array,

93
00:07:19.840 --> 00:07:21.850
the one that we've just made room for.

94
00:07:21.850 --> 00:07:35.450
So a str e mails brackets into the nails equals str email the one that's just been entered

95
00:07:35.450 --> 00:07:41.560
and then we close our if statement and if so,

96
00:07:41.560 --> 00:07:48.670
that's all we need to do inside the loop and we then want to list all the emails as a

97
00:07:48.670 --> 00:07:49.550
confirmation.

98
00:07:49.550 --> 00:07:55.060
I'd say that we want to format them so that they're on separate lines and they're also

99
00:07:55.060 --> 00:07:59.450
indented slightly from the first line within the dialog box.

100
00:07:59.450 --> 00:08:06.670
We could obviously achieve this by creating a string variable looping through the array and

101
00:08:06.670 --> 00:08:10.150
add in each item from the array into a string variable.

102
00:08:10.150 --> 00:08:11.560
However,

103
00:08:11.560 --> 00:08:17.310
BB A actually contains a function that does all that in one hit and it's called joyed.

104
00:08:17.310 --> 00:08:25.360
So the joint function will take an array and separate each element inside the array with a

105
00:08:25.360 --> 00:08:30.490
D limiter that you yourself can specify and you end up with a string which is ideal for our

106
00:08:30.490 --> 00:08:36.450
purposes because it could just be tagged on to the end of our MSG box.

107
00:08:36.450 --> 00:08:43.150
So let's begin by declaring a variable which will hold that string so dim.

108
00:08:43.150 --> 00:08:48.980
S t ah e mails joined bit long,

109
00:08:48.980 --> 00:08:53.350
but it makes it clear what the variables actually for a string.

110
00:08:53.350 --> 00:09:00.420
So now here we need an if statement because clearly if into emails equal zero,

111
00:09:00.420 --> 00:09:04.590
that means that the user simply click Cancel eso.

112
00:09:04.590 --> 00:09:08.250
We have no email addresses to display as confirmation.

113
00:09:08.250 --> 00:09:20.120
So we need an if statement if into emails is greater than zero then S T r e mails joined,

114
00:09:20.120 --> 00:09:32.760
he calls join Source array will be a str females and the the limiter will be a carriage

115
00:09:32.760 --> 00:09:33.250
return,

116
00:09:33.250 --> 00:09:35.750
said VB CEO,

117
00:09:35.750 --> 00:09:40.250
followed by a tab ampersand BB cab.

118
00:09:40.250 --> 00:09:44.610
So as you can see that the limiter can be a combination of characters,

119
00:09:44.610 --> 00:09:47.110
it doesn't have to be just a symbol character.

120
00:09:47.110 --> 00:09:49.090
So that sounds strength.

121
00:09:49.090 --> 00:09:53.250
Now we can display a message for the user using MSG box.

122
00:09:53.250 --> 00:10:05.970
Report will be emailed to follow in addresses after sand on Let's split the line at that

123
00:10:05.970 --> 00:10:06.420
point.

124
00:10:06.420 --> 00:10:09.570
So let's have a couple of carriage returns,

125
00:10:09.570 --> 00:10:16.950
maybe CR after sandy BBC are and a tab so that the first email is indented.

126
00:10:16.950 --> 00:10:27.840
Maybe tab and finally str Females joined and inside of that variable,

127
00:10:27.840 --> 00:10:31.750
each of the emails will be followed by a carriage return and a tab.

128
00:10:31.750 --> 00:10:34.460
Since when we populated the variable,

129
00:10:34.460 --> 00:10:37.450
we specified these characters as the D limiter.

130
00:10:37.450 --> 00:10:43.650
So here we just need to end our if statement and then we're good to go.

131
00:10:43.650 --> 00:10:47.850
So let's save and test.

132
00:10:47.850 --> 00:10:54.050
Let's have Helen at our company.

133
00:10:54.050 --> 00:10:55.650
L cone.

134
00:10:55.650 --> 00:11:00.450
Okay.

135
00:11:00.450 --> 00:11:04.090
And I think Bill needs a copy of this report as well.

136
00:11:04.090 --> 00:11:05.550
Paste.

137
00:11:05.550 --> 00:11:07.650
I missed the outside.

138
00:11:07.650 --> 00:11:09.580
So it's ah,

139
00:11:09.580 --> 00:11:10.750
copy at this time.

140
00:11:10.750 --> 00:11:14.250
And of course,

141
00:11:14.250 --> 00:11:16.810
Janet Paste.

142
00:11:16.810 --> 00:11:20.030
And finally,

143
00:11:20.030 --> 00:11:22.650
Melanie trim paste.

144
00:11:22.650 --> 00:11:25.640
Once we've done all that,

145
00:11:25.640 --> 00:11:30.580
we can then click on cancel and up comes our mystery box.

146
00:11:30.580 --> 00:11:32.820
So we've got our return on our tabs.

147
00:11:32.820 --> 00:11:33.350
Kickinit.

148
00:11:33.350 --> 00:11:48.910
A dynamic array is one whose dimensions can change as many times as necessary during code

149
00:11:48.910 --> 00:11:54.150
execution to declare a dynamic array,

150
00:11:54.150 --> 00:12:00.340
use this in tax the rain name as data type i e.

151
00:12:00.340 --> 00:12:08.790
Without specifying the lower and upper index to subsequently specify the dimensions of a

152
00:12:08.790 --> 00:12:09.750
dynamic array.

153
00:12:09.750 --> 00:12:16.110
Use this Intacs reading ray name X two y,

154
00:12:16.110 --> 00:12:25.960
where X represents the lowest index and why the highest each time the reading statement is

155
00:12:25.960 --> 00:12:26.540
used,

156
00:12:26.540 --> 00:12:33.250
any values in the array and normally lost to ensure that any existing values a retained

157
00:12:33.250 --> 00:12:36.860
used the alternative syntax reading,

158
00:12:36.860 --> 00:12:40.110
preserved array name extra Y.

