1
00:00:02,466 --> 00:00:03,112
In this module,

2
00:00:03,112 --> 00:00:05,563
I showed you the steps needed to customize the client

3
00:00:05,563 --> 00:00:08,641
side of a JHipster generated project.

4
00:00:08,641 --> 00:00:13,401
I went into some depth on how webpack scripts come pre-generated for you.

5
00:00:13,401 --> 00:00:16,613
You saw how Browsersync was also integrated out of the box to

6
00:00:16,613 --> 00:00:19,981
update the browser for client-side code updates.

7
00:00:19,981 --> 00:00:23,518
I gave you an overview of the client-side project structure.

8
00:00:23,518 --> 00:00:24,366
You saw the directories,

9
00:00:24,366 --> 00:00:27,672
and got a high-level overview of the content that they contain.

10
00:00:27,672 --> 00:00:28,127
Finally,

11
00:00:28,127 --> 00:00:32,830
we customized the client-side code by adding a new patient module to

12
00:00:32,830 --> 00:00:34,991
support creating and viewing patient appointments.

13
00:00:34,991 --> 00:00:38,737
The navigation bar was updated to include a new menu and submenu item,

14
00:00:38,737 --> 00:00:42,734
you saw how JHipster provided you out of the box support to show or hide

15
00:00:42,734 --> 00:00:46,742
navigation content based on the authenticated user and their role.

16
00:00:46,742 --> 00:00:49,271
You then saw how a custom module can be built,

17
00:00:49,271 --> 00:00:51,413
which leverages both generated features,

18
00:00:51,413 --> 00:00:54,178
and JHipster dependent libraries.

19
00:00:54,178 --> 00:00:59,672
Then, we added a server-side stub so that we could test out the new UI feature.

20
00:00:59,672 --> 00:01:01,463
With the client-side code in place,

21
00:01:01,463 --> 00:01:08,000
let's build out the server-side API to fully support this new patient appointment feature.

