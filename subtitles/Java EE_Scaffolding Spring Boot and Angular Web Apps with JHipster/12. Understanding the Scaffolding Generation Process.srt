1
00:00:02,390 --> 00:00:03,879
Once we made the last decision,

2
00:00:03,879 --> 00:00:07,044
JHipster ran the full generation of the scaffolding for our project.

3
00:00:07,044 --> 00:00:09,724
What I'm showing here is the end result.

4
00:00:09,724 --> 00:00:12,651
There are four key lines to focus on.

5
00:00:12,651 --> 00:00:13,107
First,

6
00:00:13,107 --> 00:00:18,126
you should see a message that the server application generated successfully.

7
00:00:18,126 --> 00:00:18,403
Next,

8
00:00:18,403 --> 00:00:21,175
you'll see a message that shows you the command to

9
00:00:21,175 --> 00:00:23,615
run the Spring Boot application.

10
00:00:23,615 --> 00:00:25,777
That command is gradlew.

11
00:00:25,777 --> 00:00:29,985
The next line tells you that the client application generated successfully.

12
00:00:29,985 --> 00:00:34,295
And the final line tells you how to start your Webpack development server.

13
00:00:34,295 --> 00:00:36,679
As we go through future modules in this course,

14
00:00:36,679 --> 00:00:38,923
we'll be using these commands, but for now,

15
00:00:38,923 --> 00:00:41,588
you just need to know that they are available.

16
00:00:41,588 --> 00:00:44,226
Since I skipped showing you the output of the generation,

17
00:00:44,226 --> 00:00:47,507
let's go over what actually happened.

18
00:00:47,507 --> 00:00:51,371
There are three parts to the process of JHipster project generation.

19
00:00:51,371 --> 00:00:55,583
First, JHipster creates all the necessary project files.

20
00:00:55,583 --> 00:00:58,755
This includes assets such as the Gradle build scripts

21
00:00:58,755 --> 00:01:02,687
client build script's Java source code, typescript source code,

22
00:01:02,687 --> 00:01:04,329
and configuration files.

23
00:01:04,329 --> 00:01:09,029
Next, JHipster will run Yarn install to resolve client-side dependencies.

24
00:01:09,029 --> 00:01:12,032
Note that as part of the Gradle build,

25
00:01:12,032 --> 00:01:16,427
a similar task will be run to resolve server-side dependencies.

26
00:01:16,427 --> 00:01:21,631
The final step for JHipster is to compile the client-side and server-side code.

27
00:01:21,631 --> 00:01:23,777
As we saw, once this step is complete,

28
00:01:23,777 --> 00:01:26,940
you should see a success message for both the

29
00:01:26,940 --> 00:01:34,000
client-side and the server-side build. That concludes the creation of the scaffolding for the project.

