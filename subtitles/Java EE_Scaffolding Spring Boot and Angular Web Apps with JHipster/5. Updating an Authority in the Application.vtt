WEBVTT
1
00:00:01.913 --> 00:00:06.232
There are a few direct references to the old user role that we just changed.

2
00:00:06.232 --> 00:00:08.608
Switching to this new authority requires a little bit of

3
00:00:08.608 --> 00:00:10.646
code refactory on the server side.

4
00:00:10.646 --> 00:00:13.747
We're going to start with the AuthoritiesConstants class.

5
00:00:13.747 --> 00:00:18.014
This class if found in the package com.

6
00:00:18.014 --> 00:00:18.985
Pluralsight.

7
00:00:18.985 --> 00:00:19.956
patientportal.

8
00:00:19.956 --> 00:00:20.927
security.

9
00:00:20.927 --> 00:00:22.685
Currently, there's a constant for user.

10
00:00:22.685 --> 00:00:26.186
We're going to change the value to ROLE_PATIENT to match

11
00:00:26.186 --> 00:00:29.036
the database change that we just made.

12
00:00:29.036 --> 00:00:31.236
And we're going to refactor the code to rename the

13
00:00:31.236 --> 00:00:33.566
constant from user to patient.

14
00:00:33.566 --> 00:00:36.086
Let's do that now.

15
00:00:36.086 --> 00:00:41.133
I've opened up Eclipse, and I have the AuthoritiesConstants class in the editor.

16
00:00:41.133 --> 00:00:45.261
We're going to refactor the user constant to be patient.

17
00:00:45.261 --> 00:00:49.580
Let's start by changing the value.

18
00:00:49.580 --> 00:00:53.899
I've changed ROLE_USER to be ROLE_PATIENT.

19
00:00:53.899 --> 00:00:56.086
I'm going to go ahead and save that.

20
00:00:56.086 --> 00:00:59.323
Next, I'm going to refactor the user constant.

21
00:00:59.323 --> 00:01:06.007
I'll double-click it, right-click, and select Refactor, Rename.

22
00:01:06.007 --> 00:01:09.388
I'm going to change USER to be PATIENT.

23
00:01:09.388 --> 00:01:13.576
Let's click Enter, that refactor is going to change about five classes total.

24
00:01:13.576 --> 00:01:15.478
A couple of them are in your main source code,

25
00:01:15.478 --> 00:01:17.386
and the rest of them are in tests.

26
00:01:17.386 --> 00:01:19.940
Now that we have this change in place,

27
00:01:19.940 --> 00:01:23.110
let's look at two of those changes that were made.

28
00:01:23.110 --> 00:01:26.263
I'm going to start with the UserService.

29
00:01:26.263 --> 00:01:29.549
You can find the UserService in the package com.

30
00:01:29.549 --> 00:01:30.557
Pluralsight.

31
00:01:30.557 --> 00:01:31.565
patientportal.

32
00:01:31.565 --> 00:01:32.573
service.

33
00:01:32.573 --> 00:01:34.572
This class was generated by JHipster,

34
00:01:34.572 --> 00:01:38.357
and backs many of the UI features around user management

35
00:01:38.357 --> 00:01:41.037
that are available to the administrator.

36
00:01:41.037 --> 00:01:44.413
Let's search for the patient role.

37
00:01:44.413 --> 00:01:47.789
Here we find the createUser method.

38
00:01:47.789 --> 00:01:48.731
This will, by default,

39
00:01:48.731 --> 00:01:52.573
now add the patient role any time a new user is created by this behavior.

40
00:01:52.573 --> 00:01:54.989
As you add more roles to your application,

41
00:01:54.989 --> 00:01:58.006
you'll likely need to revisit the user service to

42
00:01:58.006 --> 00:02:01.679
determine how roles get applied for new users.

43
00:02:01.679 --> 00:02:05.177
Along with the service, one of the tests has changed.

44
00:02:05.177 --> 00:02:08.090
Let's open that now.

45
00:02:08.090 --> 00:02:12.459
I'm going to open up UserResourceIntTest.

46
00:02:12.459 --> 00:02:16.061
This is found in the package com.

47
00:02:16.061 --> 00:02:16.575
Pluralsight.

48
00:02:16.575 --> 00:02:17.090
patientportal.

49
00:02:17.090 --> 00:02:17.604
web.

50
00:02:17.604 --> 00:02:18.119
rest.

51
00:02:18.119 --> 00:02:23.522
I'm going to go ahead here and I'm going to search for ROLE_USER.

52
00:02:23.522 --> 00:02:27.918
As you can see, JHipster didn't leverage constants here in the test.

53
00:02:27.918 --> 00:02:30.359
But we can easily fix that.

54
00:02:30.359 --> 00:02:38.039
Let's replace the string, ROLE_USER, with our new authority constant.

55
00:02:38.039 --> 00:02:43.099
So I'm going to replace ROLE_USER with AuthoritiesConstants.

56
00:02:43.099 --> 00:02:43.732
PATIENT.

57
00:02:43.732 --> 00:02:45.698
We'll do a Replace All.

58
00:02:45.698 --> 00:02:48.844
I'll go ahead and close my Find menu,

59
00:02:48.844 --> 00:02:52.160
and that'll have made about two or three changes in our class.

60
00:02:52.160 --> 00:02:55.989
Now with this test updated, and our backend code changes in place,

61
00:02:55.989 --> 00:02:59.992
it's a good opportunity to try to actually run these tests.

62
00:02:59.992 --> 00:03:03.484
Let's go ahead and open up a command line now.

63
00:03:03.484 --> 00:03:05.989
I've opened back up a PowerShell window,

64
00:03:05.989 --> 00:03:08.494
and I've navigated to the project directory.

65
00:03:08.494 --> 00:03:12.412
Let's run a Gradle command to execute a test task.

66
00:03:12.412 --> 00:03:14.137
I'll type in.

67
00:03:14.137 --> 00:03:15.287
\gradlew test.

68
00:03:15.287 --> 00:03:19.886
You should see that the build was successful.

69
00:03:19.886 --> 00:03:22.727
If you get an error with a test run related to the in memory database,

70
00:03:22.727 --> 00:03:24.810
you can safely ignore it.

71
00:03:24.810 --> 00:03:28.542
So as I can see here, all of my tests have passed successfully, which is good.

72
00:03:28.542 --> 00:03:32.375
We still need one more change to the client-side code for the role.

73
00:03:32.375 --> 00:03:35.167
Let's take a look at that now.

74
00:03:35.167 --> 00:03:36.683
I've opened back up Eclipse,

75
00:03:36.683 --> 00:03:40.669
and in the client-side code JHipster has added support for route guards.

76
00:03:40.669 --> 00:03:45.767
This supports showing and hiding routes based on the user authorities defined.

77
00:03:45.767 --> 00:03:48.511
There are three routes that we need to change.

78
00:03:48.511 --> 00:03:51.459
First, let's navigate to the webapp folder,

79
00:03:51.459 --> 00:03:58.061
then under account, password, we can open password.

80
00:03:58.061 --> 00:03:59.128
route.

81
00:03:59.128 --> 00:04:00.196
ts.

82
00:04:00.196 --> 00:04:03.125
In this file, we have the password route definition.

83
00:04:03.125 --> 00:04:06.442
You'll notice there's a data attribute on the route.

84
00:04:06.442 --> 00:04:08.584
You'll also notice that the role,

85
00:04:08.584 --> 00:04:11.862
ROLE_USER string is being passed as part of the

86
00:04:11.862 --> 00:04:13.729
authorities into this data attribute.

87
00:04:13.729 --> 00:04:16.676
By defining a role in this manner,

88
00:04:16.676 --> 00:04:19.149
the UserRouteAccessService will check these authorities and determine

89
00:04:19.149 --> 00:04:22.648
whether or not the current user can activate the route.

90
00:04:22.648 --> 00:04:25.999
Let's change this authority here to ROLE_PATIENT.

91
00:04:25.999 --> 00:04:33.662
Go ahead and save, now let's do the same thing for the sessions route.

92
00:04:33.662 --> 00:04:38.946
I'm going to expand sessions, and I'll select sessions.

93
00:04:38.946 --> 00:04:39.605
route.

94
00:04:39.605 --> 00:04:40.264
ts.

95
00:04:40.264 --> 00:04:45.254
I'll change ROLE_USER, and again I'll click save.

96
00:04:45.254 --> 00:04:49.497
Finally, we need to change the settings route.

97
00:04:49.497 --> 00:04:54.631
I'll expand the settings folder, and we'll select settings.

98
00:04:54.631 --> 00:04:55.202
route.

99
00:04:55.202 --> 00:04:55.772
ts.

100
00:04:55.772 --> 00:05:01.397
And I'll again change the authorities from ROLE_USER to ROLE_PATIENT.

101
00:05:01.397 --> 00:05:03.413
Save, and now that these routes are changed,

102
00:05:03.413 --> 00:05:06.480
they're only going to be visible to our patient user.

103
00:05:06.480 --> 00:05:15.000
With this code updated, let's start the application up again, and make sure that everything is working as expected.

