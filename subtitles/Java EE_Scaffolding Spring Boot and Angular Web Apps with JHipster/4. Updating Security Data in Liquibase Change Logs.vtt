WEBVTT
1
00:00:02.379 --> 00:00:05.930
JHipster leverages Liquibase for managing the

2
00:00:05.930 --> 00:00:08.297
generated application's database schema.

3
00:00:08.297 --> 00:00:12.973
If you're familiar with this tool, feel free to skip past this description.

4
00:00:12.973 --> 00:00:15.781
Liquibase acts as source code control for your database,

5
00:00:15.781 --> 00:00:19.059
supporting concepts such as incremental changes,

6
00:00:19.059 --> 00:00:20.151
and versioning.

7
00:00:20.151 --> 00:00:21.059
On my projects,

8
00:00:21.059 --> 00:00:25.349
I've leveraged this concept of database scheme management in both a local

9
00:00:25.349 --> 00:00:28.824
development environment and in a deployed server environment.

10
00:00:28.824 --> 00:00:29.011
Locally,

11
00:00:29.011 --> 00:00:31.252
I can use it to ensure that my database is the right

12
00:00:31.252 --> 00:00:32.824
version for my development task.

13
00:00:32.824 --> 00:00:36.661
I can also revert my schema to support previous code releases.

14
00:00:36.661 --> 00:00:41.110
I've also used it as part of running integration tests in

15
00:00:41.110 --> 00:00:43.243
a continuous integration environment.

16
00:00:43.243 --> 00:00:44.923
As you'll see shortly,

17
00:00:44.923 --> 00:00:47.420
Liquibase leverages incremental change logs to

18
00:00:47.420 --> 00:00:49.805
capture the evolution of your schema.

19
00:00:49.805 --> 00:00:51.429
These logs can be manually created,

20
00:00:51.429 --> 00:00:54.253
or reverse engineered from an existing database.

21
00:00:54.253 --> 00:00:56.575
When your application starts,

22
00:00:56.575 --> 00:01:00.232
Liquibase will run the logs in the order that you specify.

23
00:01:00.232 --> 00:01:03.257
You could also configure Liquibase to always drop and reload your

24
00:01:03.257 --> 00:01:06.634
entire database each time the server starts.

25
00:01:06.634 --> 00:01:08.293
Once the schema has been updated,

26
00:01:08.293 --> 00:01:12.948
you can tell Liquibase to initialize your tables with data from a source,

27
00:01:12.948 --> 00:01:14.994
such as a CSV file.

28
00:01:14.994 --> 00:01:17.133
Now that you have a high-level understanding of Liquibase,

29
00:01:17.133 --> 00:01:19.325
let's start to make changes to the code to switch from

30
00:01:19.325 --> 00:01:22.438
the user role to a patient role.

31
00:01:22.438 --> 00:01:24.450
When we started the application server up,

32
00:01:24.450 --> 00:01:27.014
Liquibase ran and generated a database schema.

33
00:01:27.014 --> 00:01:30.125
Since we're going to change the foundational schema,

34
00:01:30.125 --> 00:01:34.247
one consideration that we need to make is to have Liquibase drop the

35
00:01:34.247 --> 00:01:36.890
schema and recreate the database from scratch.

36
00:01:36.890 --> 00:01:42.539
We can do that by setting a property called drop-first to true.

37
00:01:42.539 --> 00:01:46.019
This property will be added to a configuration file that's used by Spring Boot.

38
00:01:46.019 --> 00:01:50.986
You can find the file in the main resources directory under the config folder.

39
00:01:50.986 --> 00:01:54.342
We're going to only change the file application-dev,

40
00:01:54.342 --> 00:01:58.872
as we just want to drop the schema first when we're running

41
00:01:58.872 --> 00:02:01.067
in a development spring profile mode.

42
00:02:01.067 --> 00:02:03.946
Let's make these changes now.

43
00:02:03.946 --> 00:02:08.006
I've opened up Eclipse, and I have the project loaded up in the work space.

44
00:02:08.006 --> 00:02:11.614
I've gone ahead and I've opened up the application-dev.

45
00:02:11.614 --> 00:02:15.583
yml file, which is being displayed right now in the editor.

46
00:02:15.583 --> 00:02:21.165
I'm going to scroll down to the property called liquibase.

47
00:02:21.165 --> 00:02:26.394
We can see here that JHipster has already generated a property for Liquibase.

48
00:02:26.394 --> 00:02:35.992
We're going to add drop-first: true, and that will allow us to drop our schema.

49
00:02:35.992 --> 00:02:37.073
I'll save this,

50
00:02:37.073 --> 00:02:39.916
and again using this configuration for development really

51
00:02:39.916 --> 00:02:42.483
depends on the type of project you're doing.

52
00:02:42.483 --> 00:02:44.887
Most commonly, you'll keep this value set to false,

53
00:02:44.887 --> 00:02:47.805
as you'll only want to switch it on and off when you

54
00:02:47.805 --> 00:02:49.216
need to start with fresh data.

55
00:02:49.216 --> 00:02:52.040
You may not use this configuration for applications with a lot of reads,

56
00:02:52.040 --> 00:02:55.815
as you'll have little need to recreate every time.

57
00:02:55.815 --> 00:02:58.877
Reloading the database each time you start a server

58
00:02:58.877 --> 00:03:00.578
can be really time consuming.

59
00:03:00.578 --> 00:03:02.444
If you do a lot of rights in the application,

60
00:03:02.444 --> 00:03:06.188
it might be helpful to start with a fresh database each time.

61
00:03:06.188 --> 00:03:08.908
Be careful to ensure that your data is loaded via scripts or

62
00:03:08.908 --> 00:03:11.802
server restarts are going to wipe your data.

63
00:03:11.802 --> 00:03:15.832
You can also consider this flag for integration tests where you need the

64
00:03:15.832 --> 00:03:19.119
data in a certain state each time you run the tests.

65
00:03:19.119 --> 00:03:20.611
Now that we have the configuration in place,

66
00:03:20.611 --> 00:03:24.518
let's discuss how we can change the role.

67
00:03:24.518 --> 00:03:28.527
I'm going to walk you through the structure for Liquibase files in the project.

68
00:03:28.527 --> 00:03:31.151
At the root is the master.

69
00:03:31.151 --> 00:03:32.026
xml file.

70
00:03:32.026 --> 00:03:37.755
Liquibase supports other file formats, but JHipster defaulted to generating XML.

71
00:03:37.755 --> 00:03:41.526
This file references and defines the order of change logs.

72
00:03:41.526 --> 00:03:42.254
Under master.

73
00:03:42.254 --> 00:03:44.803
xml, we see the first change log.

74
00:03:44.803 --> 00:03:47.041
The prefix to the file contains a number.

75
00:03:47.041 --> 00:03:48.924
Oftentimes I've used this number to represent the

76
00:03:48.924 --> 00:03:50.750
date and time of the schema change.

77
00:03:50.750 --> 00:03:54.631
The second part of the prefix is a description of the change.

78
00:03:54.631 --> 00:03:59.772
Again, this file is XML based, it contains the actual database scripts to run,

79
00:03:59.772 --> 00:04:02.761
including table creation, sequence creation,

80
00:04:02.761 --> 00:04:03.957
and indexes.

81
00:04:03.957 --> 00:04:04.823
Later in the course,

82
00:04:04.823 --> 00:04:07.438
we'll be creating another one of these change logs to

83
00:04:07.438 --> 00:04:09.207
store appointment request data.

84
00:04:09.207 --> 00:04:12.527
Under the change log are three CSV files.

85
00:04:12.527 --> 00:04:17.498
They contain actual data that will be loaded into the tables by Liquibase.

86
00:04:17.498 --> 00:04:20.773
This is how JHipster prepopulates the user accounts,

87
00:04:20.773 --> 00:04:23.882
and roles for the security implementation.

88
00:04:23.882 --> 00:04:27.588
We're going to change the authorities in users_authorities file.

89
00:04:27.588 --> 00:04:32.485
We just simply want to replace ROLE_USER with ROLE_PATIENT.

90
00:04:32.485 --> 00:04:34.119
So let's do that now.

91
00:04:34.119 --> 00:04:36.080
I've once again opened up Eclipse,

92
00:04:36.080 --> 00:04:39.840
and I have the authorities and users_authorties.

93
00:04:39.840 --> 00:04:41.925
csv files opened.

94
00:04:41.925 --> 00:04:43.543
First, let's look at authorities.

95
00:04:43.543 --> 00:04:47.245
We're just going to replace ROLE_USER here with ROLE_PATIENT.

96
00:04:47.245 --> 00:04:51.588
Again, we're doing this because we eventually want to have more roles,

97
00:04:51.588 --> 00:04:58.030
such as a physician or a scheduler, and don't want this generic user.

98
00:04:58.030 --> 00:05:02.228
I'll save that, and now let's look at the users_authorities file.

99
00:05:02.228 --> 00:05:06.757
This table is just going to join users to their authorities.

100
00:05:06.757 --> 00:05:12.003
We need to replace ROLE_USER again with ROLE_PATIENT.

101
00:05:12.003 --> 00:05:16.166
The three users that are listed here are system, admin, and user.

102
00:05:16.166 --> 00:05:21.412
So all three will now have the patient role going forward.

103
00:05:21.412 --> 00:05:25.612
Once again saved it, and that's it for the database change.

104
00:05:25.612 --> 00:05:27.081
Now when we restart the server,

105
00:05:27.081 --> 00:05:36.000
the database objects will be dropped and the role will be changed. The next step is to modify the server-side code to use this new role name.

