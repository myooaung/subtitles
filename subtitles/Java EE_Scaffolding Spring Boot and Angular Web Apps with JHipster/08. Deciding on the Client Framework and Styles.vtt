WEBVTT
1
00:00:02.421 --> 00:00:05.637
The next major decision that JHipster offers is the client

2
00:00:05.637 --> 00:00:08.168
framework to use in the scaffolding.

3
00:00:08.168 --> 00:00:10.277
Prior to starting this course,

4
00:00:10.277 --> 00:00:13.603
JHipster officially released support for Angular 4 as their

5
00:00:13.603 --> 00:00:16.142
primary version of the client framework.

6
00:00:16.142 --> 00:00:19.179
As a result of selecting Angular 4,

7
00:00:19.179 --> 00:00:22.281
you have default types of your code generated for you.

8
00:00:22.281 --> 00:00:24.875
With the introduction of Angular 4 support,

9
00:00:24.875 --> 00:00:29.592
AngularJS 1 has been marked for future deprecation by JHipster.

10
00:00:29.592 --> 00:00:32.723
Given this direction, as well as the direction from the Angular framework itself,

11
00:00:32.723 --> 00:00:36.668
I'd recommend selecting Angular 4 for your scaffolding.

12
00:00:36.668 --> 00:00:37.979
Let's do that now.

13
00:00:37.979 --> 00:00:38.962
At this time,

14
00:00:38.962 --> 00:00:43.510
JHipster does not support other client-side frameworks out of the box,

15
00:00:43.510 --> 00:00:44.480
specifically React.

16
00:00:44.480 --> 00:00:44.861
Note though,

17
00:00:44.861 --> 00:00:46.765
there is a command line option that will skip the

18
00:00:46.765 --> 00:00:48.484
generation of client-side code,

19
00:00:48.484 --> 00:00:52.782
in case you plan to introduce your own client-side approach.

20
00:00:52.782 --> 00:00:56.470
Check the JHipster documentation for more details on this approach.

21
00:00:56.470 --> 00:00:59.272
This is yet another feature that sets JHipster

22
00:00:59.272 --> 00:01:01.024
apart from other scaffolding tools.

23
00:01:01.024 --> 00:01:04.147
You get Angular integrated within your application right out of the box,

24
00:01:04.147 --> 00:01:06.951
rather than trying to manually merge code into your

25
00:01:06.951 --> 00:01:08.894
applications from the Angular CLI.

26
00:01:08.894 --> 00:01:12.499
The next decision has some relation to the client-side,

27
00:01:12.499 --> 00:01:16.851
as JHipster is offering the option to use the LibSass style

28
00:01:16.851 --> 00:01:21.357
sheet processor for your cascading style sheets.

29
00:01:21.357 --> 00:01:25.952
The intention of this option is to help you simplify the design of your CSS.

30
00:01:25.952 --> 00:01:29.185
It allows for native compilation of.

31
00:01:29.185 --> 00:01:30.668
scss files to.

32
00:01:30.668 --> 00:01:36.331
css files, but it will result in a gulp server being configured to support.

33
00:01:36.331 --> 00:01:38.899
Again, this may be a feature that's of use to you,

34
00:01:38.899 --> 00:01:40.988
however I considered it outside of the scope of this

35
00:01:40.988 --> 00:01:50.000
course and will not choose to use it. That leads us to the next decision around internationalization.

