WEBVTT
1
00:00:01.834 --> 00:00:03.462
To view the changes that we just made,

2
00:00:03.462 --> 00:00:06.720
we'll be running both the application server and the web server.

3
00:00:06.720 --> 00:00:10.395
Now you might be asking, didn't we do that earlier?

4
00:00:10.395 --> 00:00:14.664
When we ran the command gradlew, we started the application server only.

5
00:00:14.664 --> 00:00:18.132
It serves static content in our client application,

6
00:00:18.132 --> 00:00:19.866
but with certain limitations.

7
00:00:19.866 --> 00:00:21.529
By running the Webpack server in parallel,

8
00:00:21.529 --> 00:00:26.960
you get the benefits of hot code replacement and browser sync for code changes.

9
00:00:26.960 --> 00:00:29.235
I'll go into more details about Webpack as we build the client

10
00:00:29.235 --> 00:00:31.441
portion of the appointment request feature.

11
00:00:31.441 --> 00:00:34.949
But for now, let's open up two command prompts.

12
00:00:34.949 --> 00:00:36.741
If you already have the application server started,

13
00:00:36.741 --> 00:00:40.779
just make sure it's stopped before you proceed.

14
00:00:40.779 --> 00:00:44.993
I've opened up the command prompt, and I've navigated to our project directory.

15
00:00:44.993 --> 00:00:49.965
I'm going to run the server start command, which is.

16
00:00:49.965 --> 00:00:50.462
\gradlew.

17
00:00:50.462 --> 00:00:54.114
With the server started, let's take a quick look at the output.

18
00:00:54.114 --> 00:00:57.023
We see two lines related to Liquibase.

19
00:00:57.023 --> 00:01:00.323
The first mentions that Liquibase is starting asynchronously.

20
00:01:00.323 --> 00:01:03.038
This is an important feature that I'd like to point out.

21
00:01:03.038 --> 00:01:06.547
JHipster includes this is a configuration in your application.

22
00:01:06.547 --> 00:01:09.455
As I noted earlier, reloading a database can be time consuming,

23
00:01:09.455 --> 00:01:12.491
so JHipster separates it from application startup.

24
00:01:12.491 --> 00:01:13.601
However, as the warning notes,

25
00:01:13.601 --> 00:01:17.346
you may need to wait before you can do anything with the application.

26
00:01:17.346 --> 00:01:21.179
The second line notes that the database was updated successfully, which is good.

27
00:01:21.179 --> 00:01:23.739
If you see any errors here related to Liquibase,

28
00:01:23.739 --> 00:01:28.817
it's likely that you mistyped or incorrectly added data to the CSV files.

29
00:01:28.817 --> 00:01:32.286
Make sure to check for issues such as a missing delimiter.

30
00:01:32.286 --> 00:01:37.394
Next, let's go to the second command line window and start up Webpack.

31
00:01:37.394 --> 00:01:41.221
I have the second command window open, and again I'm in our project directory.

32
00:01:41.221 --> 00:01:45.831
I'm going to run the command, yarn start.

33
00:01:45.831 --> 00:01:49.344
Once the server is started, it's likely that a browser window is opened for you.

34
00:01:49.344 --> 00:01:51.378
We'll look at it in a minute.

35
00:01:51.378 --> 00:01:55.536
First, just verify in the logs that everything compiled correctly.

36
00:01:55.536 --> 00:01:59.205
You'll notice that the log mentions a different URL than we've been using.

37
00:01:59.205 --> 00:02:02.475
It has port 9000, instead of port 8080.

38
00:02:02.475 --> 00:02:04.946
Let's look at that browser now.

39
00:02:04.946 --> 00:02:11.829
Here I'm showing Chrome with the web application opened at localhost port 9000.

40
00:02:11.829 --> 00:02:14.200
Nothing really changed here on the anonymous page,

41
00:02:14.200 --> 00:02:17.501
so let's log in as the user account.

42
00:02:17.501 --> 00:02:26.268
I'll click Account, Sign in, and we'll do user user as the Login and Password.

43
00:02:26.268 --> 00:02:28.939
Let's click Sign in.

44
00:02:28.939 --> 00:02:31.137
Okay the login was successful, which is good,

45
00:02:31.137 --> 00:02:34.041
so let's check the menu items and routes that we changed to make

46
00:02:34.041 --> 00:02:37.774
sure that we still have access to the page.

47
00:02:37.774 --> 00:02:40.118
We'll start with Settings.

48
00:02:40.118 --> 00:02:44.921
Okay we can get there successfully, now let's try Password.

49
00:02:44.921 --> 00:02:50.165
Same success, and last let's try Sessions.

50
00:02:50.165 --> 00:02:53.495
Okay, so all three menu items worked successfully.

51
00:02:53.495 --> 00:02:56.606
But how do I know that the user has the right authority?

52
00:02:56.606 --> 00:03:00.959
Let's log in as an admin and find out.

53
00:03:00.959 --> 00:03:07.986
I've signed out, I'll go ahead and sign in again, and I'll use admin, admin.

54
00:03:07.986 --> 00:03:10.035
Let's just make sure that the route for settings is

55
00:03:10.035 --> 00:03:12.886
still working for the admin user.

56
00:03:12.886 --> 00:03:17.157
Click on Account, and I'll click Settings.

57
00:03:17.157 --> 00:03:18.701
Okay good, that was successful.

58
00:03:18.701 --> 00:03:23.798
Let's click on the Administration menu and select the user administration page.

59
00:03:23.798 --> 00:03:24.939
Select User management,

60
00:03:24.939 --> 00:03:29.831
and we can see here that all three users have the right role name.

61
00:03:29.831 --> 00:03:36.612
I can even try editing to ensure that the authority comes up in the list.

62
00:03:36.612 --> 00:03:38.543
And sure enough the role is present.

63
00:03:38.543 --> 00:03:47.000
So, this is a successful verification of the change that we made. Now let's summarize what we've learned.

