1
00:00:02,181 --> 00:00:04,434
For the remainder of this course,

2
00:00:04,434 --> 00:00:07,438
we will focus on the JHipster scaffolding platform.

3
00:00:07,438 --> 00:00:10,219
JHipster takes an opinionated approach to making most of the

4
00:00:10,219 --> 00:00:13,291
decisions required for modern applications.

5
00:00:13,291 --> 00:00:17,306
These opinions are based on accepted industry best practices.

6
00:00:17,306 --> 00:00:18,437
As a result,

7
00:00:18,437 --> 00:00:21,994
you can start with a production-ready application that include kick

8
00:00:21,994 --> 00:00:24,970
starters or features such as database schema management,

9
00:00:24,970 --> 00:00:28,320
application configuration, and security.

10
00:00:28,320 --> 00:00:32,916
In case you're familiar with it, JHipster is built using Yeoman.

11
00:00:32,916 --> 00:00:34,784
JHipster is highly customizable.

12
00:00:34,784 --> 00:00:39,731
As you'll see shortly, you can choose key features during project generation,

13
00:00:39,731 --> 00:00:42,196
such as creating a monolithic application,

14
00:00:42,196 --> 00:00:43,839
or a micro service.

15
00:00:43,839 --> 00:00:45,416
If you don't need certain features,

16
00:00:45,416 --> 00:00:48,664
you can even develop your own extension in the

17
00:00:48,664 --> 00:00:51,081
templates used for project generation.

18
00:00:51,081 --> 00:00:53,773
Finally, JHipster is a free open source project,

19
00:00:53,773 --> 00:00:56,411
with an active community supporting it.

20
00:00:56,411 --> 00:01:01,294
Let's take a more in-depth look at the platform.

21
00:01:01,294 --> 00:01:03,414
As part of its core dependencies,

22
00:01:03,414 --> 00:01:06,087
JHipster leverages the Angular framework on the client side,

23
00:01:06,087 --> 00:01:09,664
and the Spring Boot framework on the server side when

24
00:01:09,664 --> 00:01:11,478
generating monolithic applications.

25
00:01:11,478 --> 00:01:12,595
These two frameworks are leaders,

26
00:01:12,595 --> 00:01:15,582
and have reached a level of maturity that made them

27
00:01:15,582 --> 00:01:17,639
first class citizens for JHipster.

28
00:01:17,639 --> 00:01:18,586
In the field,

29
00:01:18,586 --> 00:01:20,795
the majority of applications let my clients

30
00:01:20,795 --> 00:01:22,287
leverage these frameworks exclusively.

31
00:01:22,287 --> 00:01:24,783
With these core dependencies in mind,

32
00:01:24,783 --> 00:01:30,149
let's look at some decisions that JHipster makes for you.

33
00:01:30,149 --> 00:01:35,127
This course focuses on using JHipster for developing a monolithic application.

34
00:01:35,127 --> 00:01:40,142
Please note, JHipster also supports creating scaffolding for micro services.

35
00:01:40,142 --> 00:01:43,817
Here are some key decisions that the platform makes for monoliths.

36
00:01:43,817 --> 00:01:46,386
Two of the most painful tasks I've faced with the

37
00:01:46,386 --> 00:01:47,670
Spring Boot and Angular paradigm,

38
00:01:47,670 --> 00:01:50,056
are getting all of the right dependencies in place,

39
00:01:50,056 --> 00:01:53,383
and then figuring out how the project should be structured.

40
00:01:53,383 --> 00:01:56,536
JHipster decides this all for you using out of the box code structure

41
00:01:56,536 --> 00:02:00,067
and scripts that should suffice for most applications.

42
00:02:00,067 --> 00:02:02,887
One of the biggest gaps I've seen with project development is

43
00:02:02,887 --> 00:02:06,176
handling environment-specific concerns.

44
00:02:06,176 --> 00:02:07,787
Why do these gaps exist?

45
00:02:07,787 --> 00:02:11,423
As I explained earlier, we often make just in time decisions,

46
00:02:11,423 --> 00:02:16,386
like deciding on our deployment strategy a few days before a production release.

47
00:02:16,386 --> 00:02:18,953
JHipster starts you off with a foundational

48
00:02:18,953 --> 00:02:20,876
development workflow that includes scripts,

49
00:02:20,876 --> 00:02:21,273
configurations,

50
00:02:21,273 --> 00:02:25,865
and Spring profiles to support the different environments for your application.

51
00:02:25,865 --> 00:02:30,036
In this context, JHipster gives you multiple runtime options.

52
00:02:30,036 --> 00:02:32,783
Want to do Hot Code Replace during local development?

53
00:02:32,783 --> 00:02:34,648
It's supported out of the box.

54
00:02:34,648 --> 00:02:36,823
Want to run in a Docker container?

55
00:02:36,823 --> 00:02:37,988
Again, it's supported.

56
00:02:37,988 --> 00:02:42,007
JHipster gives us support and gets us thinking about development,

57
00:02:42,007 --> 00:02:50,000
build, and deployment strategies right up front. Next, let's focus on what you will learn from this course.

