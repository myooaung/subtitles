WEBVTT
1

00:00:01.330  -->  00:00:05.400
The event object also has some other nice properties,

2

00:00:05.400  -->  00:00:13.340
for example I can log the event target. If I run this and now I click here,

3

00:00:14.130  -->  00:00:20.010
you see we get clicked inner at the very bottom and above that, a complex object. This object

4

00:00:20.010  -->  00:00:22.280
here actually is the div

5

00:00:22.410  -->  00:00:24.920
as you can see here, tag name div.

6

00:00:25.170  -->  00:00:29.380
So event target gives you the object on which the event happened,

7

00:00:29.430  -->  00:00:35.550
which is of course very useful because there are certainly times where you need this object because

8

00:00:35.550  -->  00:00:39.480
you might have some generic set up or you don't know at the time when you write the code

9

00:00:39.600  -->  00:00:41.400
what exactly will trigger the event

10

00:00:41.400  -->  00:00:47.850
but on runtime, you can precisely tell which element triggered this event

11

00:00:47.940  -->  00:00:49.960
and you can do something with this element.

12

00:00:50.040  -->  00:00:56.720
For example you could just use event target and since this is a normal HTML element, you could set

13

00:00:56.760  -->  00:01:03.180
its style background color equal to red.

14

00:01:03.180  -->  00:01:07.070
So now if I run this and click here, you'll see it change to red.

15

00:01:07.110  -->  00:01:12.720
So event target, very useful to get direct access to the HTML element which trigger the

16

00:01:12.720  -->  00:01:13.480
event.

17

00:01:14.100  -->  00:01:20.650
You might also extract the position of where the click or the event happened,

18

00:01:20.940  -->  00:01:29.660
by accessing client x, you get the x position and if I add another argument to also print out by client

19

00:01:29.670  -->  00:01:34.610
y, you get the y position of the click event

20

00:01:34.620  -->  00:01:36.120
in this case.

21

00:01:36.120  -->  00:01:42.210
So if I clear this and click here, you'll see that these coordinates change depending on where my cursor

22

00:01:42.210  -->  00:01:46.600
is and if I don't move my cursor, I of course get the same position.

23

00:01:46.770  -->  00:01:53.040
That of course is also very powerful as it allows you to use these coordinates to move something on

24

00:01:53.040  -->  00:01:56.500
the page or whatever you want to do.

25

00:01:57.480  -->  00:02:03.240
So getting the position of the cursor and the target of the event are two of the most important properties

26

00:02:03.240  -->  00:02:04.770
you have available

27

00:02:04.770  -->  00:02:12.210
but still if you're not sure or you want to learn more, visit this event page and here you will find

28

00:02:12.480  -->  00:02:16.540
all the properties you have by default on each event

29

00:02:16.710  -->  00:02:18.950
but then for the specific event,

30

00:02:18.950  -->  00:02:26.040
so for example a mouse click event like we're accessing it here, you can simply google for mouse click

31

00:02:26.040  -->  00:02:36.000
event and you should also find a page on the MDN, the Mozilla Developer Network which will

32

00:02:36.000  -->  00:02:43.140
give you an overview over all the properties you may there access, for example client X, client Y and

33

00:02:43.140  -->  00:02:44.240
so on

34

00:02:44.490  -->  00:02:51.020
and again if you need a list of all available events on a certain object, either log it to the console

35

00:02:51.030  -->  00:02:53.710
of the element or google for it.

36

00:02:54.240  -->  00:03:00.190
And this is how you can work with events and work with the data the event argument

37

00:03:00.210  -->  00:03:03.630
you get passed automatically contains for you.
