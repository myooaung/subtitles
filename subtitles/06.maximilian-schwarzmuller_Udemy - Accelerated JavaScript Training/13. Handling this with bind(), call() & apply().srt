1

00:00:01,200  -->  00:00:08,550
So that's why this can be tricky but it's not that tricky if you follow that key rule, it refers to whatever

2

00:00:08,550  -->  00:00:10,210
calls this function,

3

00:00:10,230  -->  00:00:13,900
so the part on the left of the dot.

4

00:00:14,100  -->  00:00:17,590
You know how to bind a different value to this

5

00:00:17,850  -->  00:00:27,570
but what you probably ask yourself, if I bind person here for example but imagine this function also

6

00:00:27,570  -->  00:00:34,620
takes an argument, like a message and it would log out message

7

00:00:34,620  -->  00:00:41,590
plus this for example, well how could we pass this message?

8

00:00:42,000  -->  00:00:44,730
Well bind takes multiple arguments,

9

00:00:44,760  -->  00:00:52,950
the first argument is always to what this should be bound but all the other arguments are the normal function

10

00:00:52,950  -->  00:00:53,770
arguments

11

00:00:53,850  -->  00:00:59,010
this function here, which in the end will refer to this one, expects to get.

12

00:00:59,020  -->  00:01:02,320
So I could just say Hello there and if I run this,

13

00:01:04,980  -->  00:01:09,410
and I should add parentheses here of course, if I run this, I get Hello

14

00:01:09,450  -->  00:01:13,350
object object here of course because this refers to this object

15

00:01:13,440  -->  00:01:23,250
but this is how I can pass arguments to a function to which I bound with this bind method here.

16

00:01:23,250  -->  00:01:27,060
Another way would be to use call here,

17

00:01:27,180  -->  00:01:30,420
still I would pass what this should refer to

18

00:01:30,690  -->  00:01:36,180
and then my message but here, I don't need the extra parentheses here,

19

00:01:36,180  -->  00:01:39,320
this instantly calls the method on its own.

20

00:01:39,360  -->  00:01:44,840
So if I now click on run, you'll still see hello object object, so the main difference is

21

00:01:45,180  -->  00:01:47,260
I don't have the extra parentheses,

22

00:01:47,640  -->  00:01:55,500
that of course is not just a stylistic thing. With bind, you can bind the this value and use it later because

23

00:01:55,500  -->  00:01:58,320
it's not called instantly, with call,

24

00:01:58,320  -->  00:02:00,270
it is called instantly

25

00:02:00,420  -->  00:02:03,580
and that might be the behavior you want.

26

00:02:03,660  -->  00:02:07,420
You also get another method, apply.

27

00:02:07,530  -->  00:02:14,350
It generally works exactly the same as call, it also calls the function immediately but you pass

28

00:02:14,350  -->  00:02:20,760
the arguments not as a comma separated list of arguments but instead, as an array,

29

00:02:24,210  -->  00:02:25,540
whatever you prefer,

30

00:02:25,890  -->  00:02:27,690
this still works.

31

00:02:27,690  -->  00:02:38,570
So bind, call and apply are the important helpers here which makes sure that your function you call uses

32

00:02:38,670  -->  00:02:42,580
this in the right context and you're not using a this

33

00:02:42,690  -->  00:02:43,770
you don't want to use.
