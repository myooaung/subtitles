1

00:00:01,380  -->  00:00:09,330
Once you set up an object like this, you can of course also go ahead and change a property, for example

2

00:00:09,330  -->  00:00:14,100
to Anna. If I now log this object to the console,

3

00:00:14,100  -->  00:00:14,560
you

4

00:00:17,640  -->  00:00:24,600
see that the name was now updated to Anna. So I can change properties after the object has been

5

00:00:24,600  -->  00:00:25,380
created

6

00:00:25,470  -->  00:00:31,470
and this of course is important because not all the time you have all the data you want to have in your

7

00:00:31,470  -->  00:00:36,480
object right at the point where you create it, you want to be able to edit it later on maybe

8

00:00:36,630  -->  00:00:39,730
and this is very well possible here.

9

00:00:40,800  -->  00:00:48,240
It's time to show another important feature of objects, the greeting function here currently isn't that

10

00:00:48,240  -->  00:00:52,570
interesting, we're just saying hello but we could introduce ourselves here, right?

11

00:00:52,800  -->  00:01:05,650
So we could say Hello, I am and then name and then let's try out if this works,

12

00:01:05,980  -->  00:01:12,110
not this greet. So I'm executing this function here,

13

00:01:12,150  -->  00:01:15,900
now what do you think will show up on the console?

14

00:01:17,370  -->  00:01:25,830
Hello, I'm JS Bin output. So JS Bin output here is basically the name of our global space here

15

00:01:25,830  -->  00:01:28,910
in JSBin, it's the name of our window.

16

00:01:29,910  -->  00:01:34,440
If I do this with age

17

00:01:36,150  -->  00:01:42,290
years old for example and I run this, you'll get an error that age is not defined,

18

00:01:42,290  -->  00:01:47,600
so with name it was just a coincidence that we have this global name variable by default

19

00:01:47,730  -->  00:01:51,750
but age would give us an error because age is not defined.

20

00:01:51,780  -->  00:01:53,850
Now you might say, it is defined, 

21

00:01:53,850  -->  00:01:55,350
we have it here, right?

22

00:01:55,650  -->  00:02:02,850
Yes but if we access age like this, it's referring to a variable in the global scope.

23

00:02:03,090  -->  00:02:04,660
Well this is no variable,

24

00:02:04,710  -->  00:02:08,370
it's a property of this object, of this person object.

25

00:02:08,370  -->  00:02:10,530
This is a different thing than a variable,

26

00:02:10,560  -->  00:02:13,080
it's not registered in a global scope,

27

00:02:13,080  -->  00:02:22,680
the object is but age here is only registered within this object, it's a property of that object, it's no variable,

28

00:02:22,770  -->  00:02:24,630
that's important to understand.

29

00:02:24,870  -->  00:02:33,150
If I set up an age here, 30 for example and I run this again, you will see Hello, I'm 30 years old

30

00:02:33,170  -->  00:02:33,230
,

31

00:02:33,270  -->  00:02:36,100
so it's not taking into account this age here.

32

00:02:36,810  -->  00:02:42,720
If you want to refer it this age and certainly oftentimes, we want when having functions inside an

33

00:02:42,720  -->  00:02:51,000
object, we have to tell Javascript that we're interested in a property of this object and not in a variable

34

00:02:51,000  -->  00:02:51,630
.

35

00:02:51,630  -->  00:03:01,350
We do this by adding the this keyword, dot and then age. This keyword is like a person outside of

36

00:03:01,350  -->  00:03:03,810
this object, just inside of it.

37

00:03:03,960  -->  00:03:05,890
So it's referring to the object

38

00:03:06,030  -->  00:03:09,370
and it's this because we're inside the object here.

39

00:03:09,600  -->  00:03:17,680
So like we can reference person.age outside of the object, inside it's simply this.age

40

00:03:17,970  -->  00:03:26,250
and if I now click run again, we now see 27 because now we're referring to this age, to this property

41

00:03:26,250  -->  00:03:27,180
of the object

42

00:03:27,300  -->  00:03:29,240
and that's important to understand

43

00:03:29,310  -->  00:03:36,660
and this allows you to use your functions or properties set up in this person or in this object in general

44

00:03:36,930  -->  00:03:39,260
inside of the object.

45

00:03:39,300  -->  00:03:46,470
Now the this keyword has some interesting things to say this way in Javascript, it has its

46

00:03:46,470  -->  00:03:48,110
problems sometimes

47

00:03:48,150  -->  00:03:52,400
and I'll come back to this in a separate lecture or in separate lectures

48

00:03:52,410  -->  00:03:56,960
but for now, use it like this and this is perfectly fine and this is how you should use it,

49

00:03:56,970  -->  00:03:58,770
don't get me wrong at any point here.

50

00:03:59,070  -->  00:04:06,390
So with that, that is how we can set up an object, how we can use the different properties here and refer

51

00:04:06,390  -->  00:04:07,980
to them internally.

52

00:04:08,280  -->  00:04:13,750
So let's have a look at some other object related topics.
