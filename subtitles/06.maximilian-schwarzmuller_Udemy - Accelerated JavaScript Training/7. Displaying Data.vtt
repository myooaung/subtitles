WEBVTT
1

00:00:02.280  -->  00:00:04.680
If we have a look at our index.html page,

2

00:00:04.710  -->  00:00:06.170
we got everything prepared.

3

00:00:06.230  -->  00:00:09.950
We've got a loading text which we could display whilst we're fetching the data

4

00:00:10.170  -->  00:00:12.860
and then we got the actual weatherData

5

00:00:12.870  -->  00:00:18.970
but of course we need to replace those dummy texts here, to display description, temperature and city

6

00:00:19.020  -->  00:00:24.120
name. Now to do all of that, we first need to get references to those elements

7

00:00:24.120  -->  00:00:27.300
and that of course is a job for the init.js file.

8

00:00:27.360  -->  00:00:30.850
So in here, I'll fetch a couple of new things,

9

00:00:30.940  -->  00:00:38.510
I'll fetch my loading text here and I can do this with a query selector of course, the question is just for

10

00:00:38.520  -->  00:00:40.040
what do I query?

11

00:00:40.290  -->  00:00:43.420
Well it has an ID of load,

12

00:00:43.560  -->  00:00:45.540
so I can simply use that,

13

00:00:45.600  -->  00:00:51.290
so I will just use #load to fetch it by ID.

14

00:00:51.660  -->  00:00:57.090
Notice that I always use query selector and not query selector all because I am always interested

15

00:00:57.090  -->  00:00:58.880
in the first element of this case,

16

00:00:59.040  -->  00:01:04.470
if I were interested in a second element, I needed query selector all and then access the right

17

00:01:04.500  -->  00:01:09.330
element in the array of elements I get back, just as a refresher.

18

00:01:09.330  -->  00:01:15.170
I also need to fetch my weatherBox,

19

00:01:15.330  -->  00:01:22.400
this is the overall weather item here.

20

00:01:22.650  -->  00:01:29.850
So I will fetch this, also with a query selector of course, query selector and maybe you already

21

00:01:29.850  -->  00:01:35.940
saw it but selector, this does also have an ID of weather,

22

00:01:36.000  -->  00:01:39.780
so I'll use this ID to get it

23

00:01:40.500  -->  00:01:45.200
and then I need to fetch the city description and temperature here.

24

00:01:45.510  -->  00:01:48.650
Now I can do this in a couple of ways,

25

00:01:48.690  -->  00:01:50.810
for example I can get the

26

00:01:51.090  -->  00:01:53.730
weatherCity, so let's start with that,

27

00:01:53.730  -->  00:01:56.680
so the very first element here,

28

00:01:56.820  -->  00:02:01.310
I could get this by using my weatherBox

29

00:02:01.530  -->  00:02:08.780
and then the first element child and this should get me my

30

00:02:09.480  -->  00:02:14.000
weatherCity here of course. That's one way,

31

00:02:14.230  -->  00:02:22.080
then I also need the weatherDescription and here again I'll use a query selector, just mixing some things up

32

00:02:22.080  -->  00:02:24.140
here to see them all.

33

00:02:24.150  -->  00:02:29.450
So the query selector with the ID weatherDescription here, just with the hashtag again

34

00:02:29.460  -->  00:02:31.970
and then weatherDescription

35

00:02:32.580  -->  00:02:36.700
and finally the temperature here of course too

36

00:02:36.930  -->  00:02:44.730
and here I can also use my weatherBox and then access the last element child, since it is the last

37

00:02:44.730  -->  00:02:51.540
element child here, right, the temperature is the last element in this weather div. So with that, I'm accessing

38

00:02:51.570  -->  00:02:57.870
all, I'm loading all those fields, I'm getting references to all those elements which I'll need and I then

39

00:02:57.900  -->  00:03:02.430
may use those elements in my app.js file of course.

40

00:03:02.430  -->  00:03:07.740
Now here, I could write all the code into this function but I think this function is already long enough,

41

00:03:07.740  -->  00:03:13.730
so I'll create a new one which I'll call updateWeather

42

00:03:14.430  -->  00:03:21.780
and this expects to get some weatherData with which it should update the screen here and I

43

00:03:21.780  -->  00:03:27.060
want to use my weatherCity here and set the text content,

44

00:03:27.070  -->  00:03:35.130
this is another property available on this HTML element which basically will replace the text

45

00:03:35.370  -->  00:03:37.350
between the opening and closing tag,

46

00:03:37.380  -->  00:03:40.770
so this city named dummy text as it is now.

47

00:03:41.310  -->  00:03:46.380
This will replace this text with whatever I enter now here on the right side of the equal sign,

48

00:03:46.380  -->  00:03:53.310
so to whatever I set it to. I will set it to weatherData.cityName and weatherData of

49

00:03:53.310  -->  00:03:58.430
course is just my weather object here, I'll pass that,

50

00:03:58.920  -->  00:04:08.250
so I want to replace it here. So I can actually call this right now, I will call updateWeather here and

51

00:04:08.250  -->  00:04:15.600
pass my weatherData object to it. Of course, I not only want to update the city name, I also want to update

52

00:04:15.660  -->  00:04:26.810
the description, so here I'll also replace the text content with weatherData.description and

53

00:04:26.860  -->  00:04:36.630
I'll do the very same for the temperature, so text content here should be equal to weatherData.temperature

54

00:04:38.550  -->  00:04:43.360
and I can't really tell you why this is green. So with that,

55

00:04:43.410  -->  00:04:45.460
I'm updating all of that

56

00:04:45.510  -->  00:04:49.630
but we still wouldn't see it because it's hidden,

57

00:04:49.680  -->  00:04:50.520
right?

58

00:04:50.940  -->  00:04:55.290
So we should probably access

59

00:04:55.290  -->  00:05:03.840
weather, this weatherBox here, weatherBox here indeed,

60

00:05:06.420  -->  00:05:15.310
so we should access the weatherBox, the style and set its display to block. So I'm just changing the CSS

61

00:05:15.320  -->  00:05:18.050
style of this weatherBox.

62

00:05:18.060  -->  00:05:22.790
Let's see this, if I now type London and click show weather, what will happen?

63

00:05:23.530  -->  00:05:26.340
I see the information for London here

64

00:05:26.670  -->  00:05:36.160
and if I now type Berlin, it updates to Berlin. So that's great but it can be improved a tiny bit.

65

00:05:36.720  -->  00:05:39.150
I also have that loading text, right?

66

00:05:39.210  -->  00:05:41.160
You can see it here

67

00:05:41.220  -->  00:05:44.360
and I want to display this while the data is being fetched.

68

00:05:44.430  -->  00:05:50.220
Now the data is fetched super fast here but nonetheless, it might be slower on other machines or depending

69

00:05:50.220  -->  00:05:52.610
on your internet connection and so on.

70

00:05:52.920  -->  00:05:54.810
So I want to display this

71

00:05:54.840  -->  00:06:00.860
and in order to display this, right here in this search weather function, when I start searching for

72

00:06:00.870  -->  00:06:09.230
the weather, I will use my loading text reference which I created in my init.js here,

73

00:06:09.420  -->  00:06:11.540
so this is just the loading text element

74

00:06:11.550  -->  00:06:20.790
and I will set a display style here to block, so to display it and I will also set the weatherBox

75

00:06:20.880  -->  00:06:25.670
style to none to hide it.

76

00:06:25.780  -->  00:06:31.350
Now of course it's hidden by default but if you already loaded a city, I went to hide it again

77

00:06:31.890  -->  00:06:34.040
until the new city has been loaded.

78

00:06:34.290  -->  00:06:41.530
Therefore of course here at the end, I also need to, when I display the weather info,

79

00:06:41.580  -->  00:06:46.550
I need to switch my loading text to be hidden,

80

00:06:46.590  -->  00:06:47.700
so here style 

81

00:06:47.700  -->  00:06:50.950
display should be none because I don't want to see the loading text

82

00:06:50.970  -->  00:06:52.450
if the data is there.

83

00:06:52.950  -->  00:07:00.630
So with all that, if I now search for London, you should see loading text for a fraction of a second, closely

84

00:07:00.630  -->  00:07:02.830
watch this part of the screen,

85

00:07:03.070  -->  00:07:04.410
do you see it?

86

00:07:04.440  -->  00:07:11.350
London, and if I search for Berlin, you should see loading flicker up for part of a second here too,

87

00:07:11.760  -->  00:07:12.360
yes.

88

00:07:12.570  -->  00:07:15.480
You can see it for 

89

00:07:15.550  -->  00:07:17.900
very short duration

90

00:07:18.540  -->  00:07:26.460
and that is all the code that you see in this little app. We are able to fetch data from a third-party service

91

00:07:26.790  -->  00:07:31.470
to live update our view without ever reloading the page.

92

00:07:31.590  -->  00:07:39.790
We're able to convert the Celsius degrees to Fahrenheit and use saw getters and setters,

93

00:07:39.800  -->  00:07:46.290
you saw how to define a property, you saw quite a lot of things covered throughout this course, condensed in this

94

00:07:46.290  -->  00:07:47.940
tiny little example

95

00:07:48.050  -->  00:07:54.210
and together with all the other examples in this course, I'm sure you're well prepared to use all that

96

00:07:54.210  -->  00:07:57.650
knowledge in whatever project you want to use it.

97

00:07:57.690  -->  00:08:04.080
I wish you best of luck for that and see you in all the other videos, whatever you might watch,

98

00:08:04.130  -->  00:08:06.450
I'm always happy to greet you. Bye.
