WEBVTT
1
00:00:00.520 --> 00:00:04.810
So let's think about this portion of a story map.

2
00:00:05.050 --> 00:00:10.660
Now that we've talked about the backbone of the user story map, we have to talk about the body and

3
00:00:10.660 --> 00:00:12.160
that's how what happens underneath.

4
00:00:12.890 --> 00:00:18.470
Now the body of the story map describes the details of how to make tasks happen.

5
00:00:18.830 --> 00:00:23.510
The body has two elements user stories and releases.

6
00:00:23.690 --> 00:00:24.760
Now user stories.

7
00:00:24.770 --> 00:00:28.580
These are the details of how the tasks are done to meet the goal.

8
00:00:28.610 --> 00:00:30.230
An example would be.

9
00:00:31.090 --> 00:00:32.250
Let's figure this out.

10
00:00:32.259 --> 00:00:36.010
Enter personal details I want.

11
00:00:36.580 --> 00:00:43.020
So typical user story would be as a user, I want to do something because of something.

12
00:00:43.030 --> 00:00:50.290
But if I were to write this in a more simple way, let's actually bring down the font size so we have

13
00:00:50.290 --> 00:00:51.040
more room.

14
00:00:51.040 --> 00:00:51.760
So.

15
00:00:53.360 --> 00:01:13.700
As a shopper, I want to be able to enter my name and email address so that the application.

16
00:01:14.790 --> 00:01:17.460
Knows who I am.

17
00:01:17.970 --> 00:01:23.910
So that's what a user story would be, gives us a good insight into the type of features that we need

18
00:01:23.910 --> 00:01:27.590
to build for this application, but also the reasoning behind those features.

19
00:01:27.600 --> 00:01:47.160
Another one could be, as a shopper, I want to be able to enter my address so that I can get relevant

20
00:01:47.280 --> 00:01:51.240
results based off of my location.

21
00:01:51.240 --> 00:01:56.640
I'm not sure if this is actually going to be possible, but it's another way to think about features

22
00:01:56.640 --> 00:02:00.870
in a different way instead of just saying We need to have a sign up form.

23
00:02:00.870 --> 00:02:02.460
Well, I mean, yeah, that makes sense.

24
00:02:02.460 --> 00:02:04.560
But like, why do we need to have a signup form?

25
00:02:04.560 --> 00:02:07.350
Should the sign up form have different aspects to it?

26
00:02:07.350 --> 00:02:13.260
Do we need to create an entire onboarding experience in order to facilitate larger experience for the

27
00:02:13.260 --> 00:02:16.800
users and both like finding products and etc.?

28
00:02:17.160 --> 00:02:24.330
So these user stories really help to make us understand like the different types of steps we need to

29
00:02:24.330 --> 00:02:29.580
do to complete these individual tasks and the reasoning and the user motivation behind it all.

30
00:02:30.270 --> 00:02:34.740
Now let's think about the second part of the body releases.

31
00:02:34.860 --> 00:02:36.030
Now releases.

32
00:02:36.030 --> 00:02:41.520
They help to describe usable and testable versions of the application that can be released.

33
00:02:41.640 --> 00:02:46.350
You know, it's helpful to make these as small as possible, but also as descriptive as possible.

34
00:02:46.350 --> 00:02:54.300
For instance, the first release of this like application that we're building habitual could be just

35
00:02:54.300 --> 00:03:02.430
a way for a user to see all the different products that are relevant to their interests, has no search.

36
00:03:02.460 --> 00:03:09.930
It has no profile necessarily just yet, but we're only thinking about the little pieces of information

37
00:03:09.930 --> 00:03:11.730
that we need to get started.

38
00:03:11.730 --> 00:03:16.500
So if we want to move this release line up over here.

39
00:03:18.110 --> 00:03:22.400
We can start breaking this into different releases.

40
00:03:22.400 --> 00:03:28.640
So we have our first release here, an example for user story for interest that we want in our first

41
00:03:28.640 --> 00:03:39.380
release, which I usually call our MVP release, could be I want to give a list of things I am interested

42
00:03:39.380 --> 00:03:39.830
in.

43
00:03:40.070 --> 00:03:44.090
I'm going to save you some time and not write out an entire user story.

44
00:03:44.240 --> 00:03:52.820
A second thing that may make it into the release, I want to tell you my hobbies because maybe we can

45
00:03:52.820 --> 00:03:55.010
pull from that type of information.

46
00:03:55.130 --> 00:03:57.110
So that may make it into the release.

47
00:03:57.110 --> 00:04:01.100
And so we're just going to give that some space.

48
00:04:01.100 --> 00:04:06.350
And as you can tell, we're starting to build out a release of features that we find to be the highest

49
00:04:06.350 --> 00:04:07.100
priority.

50
00:04:07.460 --> 00:04:15.740
So an example here would be I want to list products that I really like.

51
00:04:17.940 --> 00:04:30.210
But something that may be out of scope would be something like, I want to connect a previous shopping

52
00:04:30.900 --> 00:04:38.040
application to show you my purchase history.

53
00:04:43.320 --> 00:04:48.810
Like I said, I'm not sure what exactly is going to be possible from an engineering standpoint, but

54
00:04:48.810 --> 00:04:54.690
as you can tell, this isn't really a high priority in order for us to understand if we can serve up

55
00:04:54.690 --> 00:04:57.390
relevant products to our user just yet.

56
00:04:58.810 --> 00:05:07.420
You know, maybe one thing for education and on boarding, maybe there is I want to see an intro screen

57
00:05:09.670 --> 00:05:11.140
that's probably needed.

58
00:05:14.730 --> 00:05:20.700
I want to see how long I am in the process.

59
00:05:21.840 --> 00:05:23.670
For on boarding.

60
00:05:25.050 --> 00:05:27.120
That could be another that we definitely need.

61
00:05:28.940 --> 00:05:32.150
So this is how we start to create releases.

62
00:05:32.150 --> 00:05:35.300
And like I said, these enhancements will come at a later stage.

63
00:05:35.300 --> 00:05:40.540
It's not like we forget about them, but they just aren't as important to us right now.

64
00:05:40.550 --> 00:05:44.980
And in this moment now, people often say, What do you do from here?

65
00:05:44.990 --> 00:05:50.900
Well, I would start designing this release and then the goal would be to validate it.

66
00:05:50.900 --> 00:05:57.830
It's often difficult to know for sure that the activities and tasks listed match how the target user

67
00:05:57.830 --> 00:06:00.410
performs or thinks about these activities.

68
00:06:00.740 --> 00:06:05.600
The closer the similarities between the activities and the tasks in the story map are to the actual

69
00:06:05.600 --> 00:06:10.370
target users mental model, the more intuitive the application starts to seem.

70
00:06:10.820 --> 00:06:16.070
So that's when we start to bring in things like user testing to really understand user motivations and

71
00:06:16.070 --> 00:06:18.380
the reasons they want to do certain things.

72
00:06:18.380 --> 00:06:23.750
We can also take this prototypes that we build based off of these features that we're building and talk

73
00:06:23.750 --> 00:06:29.930
to our users about them and see if they can use them, see if they want to use them, get their feedback

74
00:06:29.930 --> 00:06:31.190
on those types of things.

75
00:06:31.960 --> 00:06:32.470
Now.

76
00:06:32.470 --> 00:06:35.350
This is what my process is like when I start a project.

77
00:06:35.350 --> 00:06:42.520
I also use story maps for whenever we build larger features, but I'm always, always thinking about

78
00:06:42.550 --> 00:06:46.960
ways we can implement the smallest release possible.

79
00:06:46.960 --> 00:06:50.080
Even on a smaller scale of enhancements.

80
00:06:50.200 --> 00:06:56.380
We want to make sure that we're not committing to too much because in and of itself, these stories

81
00:06:56.380 --> 00:06:57.340
are risks.

82
00:06:57.340 --> 00:06:59.620
They are assumptions that we're making about the user.

83
00:06:59.620 --> 00:07:04.900
And if we take on too much before we actually validate it may all be wasted work.

84
00:07:04.900 --> 00:07:06.670
And that's incredibly expensive.

85
00:07:07.610 --> 00:07:13.430
So I say, get out there, try to figure out who your users are and start mapping out the different

86
00:07:13.430 --> 00:07:17.210
types of features you want to build that you think you should build.

87
00:07:17.210 --> 00:07:23.780
Based off of the input from the subject matter experts that you have in your product alignment canvas

88
00:07:23.840 --> 00:07:25.300
from your product team.

89
00:07:25.310 --> 00:07:31.610
Go out there and don't just make assumptions, but make sure that your releases are really planned based

90
00:07:31.610 --> 00:07:37.970
off of different types of feedbacks and different types of understanding and validation of who your

91
00:07:37.970 --> 00:07:39.530
users are and what their goals are.

