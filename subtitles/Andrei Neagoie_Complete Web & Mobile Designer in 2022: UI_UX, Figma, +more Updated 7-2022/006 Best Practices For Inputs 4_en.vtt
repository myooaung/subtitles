WEBVTT
1
00:00:00.890 --> 00:00:01.970
Hey and welcome back.

2
00:00:02.000 --> 00:00:04.230
We're going to jump right into states.

3
00:00:04.250 --> 00:00:07.580
Now, there are a bunch of different states that we need to think about when designing inputs.

4
00:00:07.580 --> 00:00:12.230
Different states tell the user what is currently happening and what should happen next.

5
00:00:12.860 --> 00:00:19.850
These states can be differentiated with like text color borders, and these visual cues are integral

6
00:00:19.880 --> 00:00:20.870
to a good input.

7
00:00:20.900 --> 00:00:24.420
So let's jump into the different types of states we encounter.

8
00:00:24.440 --> 00:00:27.380
So the first one we have right here is your default state.

9
00:00:27.380 --> 00:00:31.070
And this just shows an empty field that hasn't been interacted with.

10
00:00:31.070 --> 00:00:33.500
So, I mean, there's just an empty field.

11
00:00:33.500 --> 00:00:34.640
There's your label.

12
00:00:34.640 --> 00:00:35.330
There's nothing.

13
00:00:35.330 --> 00:00:37.430
I mean, it's just standard, it's default.

14
00:00:37.430 --> 00:00:40.670
And user hasn't even clicked into it yet or entered anything.

15
00:00:41.520 --> 00:00:43.380
Next is your active field.

16
00:00:43.620 --> 00:00:45.450
So the user is active.

17
00:00:45.450 --> 00:00:47.430
They are in focus right here.

18
00:00:47.430 --> 00:00:54.180
And what happens is, is the user has clicked into this, it has a highlighted border or your outline

19
00:00:54.180 --> 00:01:00.510
you can call it and it carry it over here on the left to show the user that they should be typing something.

20
00:01:00.510 --> 00:01:03.600
So, mind you, this carrot's always flashing.

21
00:01:03.870 --> 00:01:07.890
So just to let the user know that an action needs to happen.

22
00:01:08.770 --> 00:01:10.540
Next is filled.

23
00:01:10.570 --> 00:01:12.370
So this is a filled input.

24
00:01:12.670 --> 00:01:20.260
So once a user has filled an input and entered all the information and clicked away from the field,

25
00:01:20.530 --> 00:01:25.630
it'll look similar to your default input, but the only difference is that there's text in there and

26
00:01:25.630 --> 00:01:28.240
it's been completed so the users know that they can move on.

27
00:01:28.870 --> 00:01:30.580
So a really straightforward.

28
00:01:31.820 --> 00:01:33.110
Next is disabled.

29
00:01:33.110 --> 00:01:38.270
So sometimes you run into a case where an input should be disabled due to a requirement restriction.

30
00:01:38.360 --> 00:01:44.300
Disabled inputs are generally shown as filled in, grayed out, or to indicate that you can't interact

31
00:01:44.300 --> 00:01:44.920
with it.

32
00:01:44.930 --> 00:01:50.450
Sometimes they could have some information in there that can't be edited, but it is grayed out until

33
00:01:50.450 --> 00:01:52.280
some action is taken.

34
00:01:52.310 --> 00:01:57.710
And just keep that in mind that when we are designing forms and stuff like that, we should be designing

35
00:01:57.710 --> 00:02:01.370
for disabled inputs as well because that scenario could happen.

36
00:02:02.690 --> 00:02:04.790
Success states.

37
00:02:04.820 --> 00:02:08.800
Okay, so when an answer is correct, you have the option to show a success message.

38
00:02:08.810 --> 00:02:10.430
So similar to the error input.

39
00:02:10.430 --> 00:02:12.470
We communicate that with color.

40
00:02:12.890 --> 00:02:13.880
We have green.

41
00:02:14.570 --> 00:02:16.160
We have icons.

42
00:02:17.420 --> 00:02:19.310
And appropriate text.

43
00:02:20.470 --> 00:02:26.360
So you don't necessarily need to show correct or success messages all the time.

44
00:02:26.380 --> 00:02:28.870
It may make sense in certain scenarios.

45
00:02:29.050 --> 00:02:36.460
If your form is designed really well, users will often like have multiple success states like this,

46
00:02:36.460 --> 00:02:38.270
and that may get way too redundant.

47
00:02:38.290 --> 00:02:41.410
It may make sense in some scenarios, so keep that in mind.

48
00:02:42.180 --> 00:02:43.840
Now this one is really important.

49
00:02:43.860 --> 00:02:50.940
We have an error when a user has entered something incorrect, or maybe the user may have missed an

50
00:02:50.940 --> 00:02:53.300
input, they should be shown an error message.

51
00:02:53.310 --> 00:02:57.000
Now the message generally should have the appropriate color red.

52
00:02:57.540 --> 00:02:59.910
We have icons and text.

53
00:03:00.300 --> 00:03:08.160
This error should always and I stress this, this should always be inline the form or inline to the

54
00:03:08.160 --> 00:03:10.530
input and not necessarily outside of the form.

55
00:03:10.710 --> 00:03:16.230
Underneath the actual corresponding input is totally fine and that's where I think you should be putting

56
00:03:16.230 --> 00:03:17.430
all your error messages.

57
00:03:17.430 --> 00:03:22.830
The worst thing is when you have a like a four or five field form and then you have the error message

58
00:03:22.830 --> 00:03:25.050
all the way at the top of the form, at the bottom of the form.

59
00:03:25.050 --> 00:03:28.230
And you're like, Well, well, what did I enter wrong or what went wrong?

60
00:03:28.500 --> 00:03:30.060
That is a pretty bad experience.

61
00:03:30.060 --> 00:03:36.900
So keep it confined to where the actual error is just so you just can quickly remedy that.

62
00:03:38.100 --> 00:03:44.400
Now, we kind of touched upon this in our lesson in typography in terms of like the appropriate text

63
00:03:44.400 --> 00:03:45.060
as well.

64
00:03:46.660 --> 00:03:49.990
So let's talk about assistance.

65
00:03:50.850 --> 00:03:51.480
Now.

66
00:03:51.480 --> 00:03:56.220
There will be times when a user comes to an input and needs a bit of assistance.

67
00:03:56.780 --> 00:03:58.470
You know, a tip or a hint.

68
00:03:58.470 --> 00:04:03.330
This will help the user fill out your input much quicker if you do it right.

69
00:04:03.750 --> 00:04:06.920
Here are certain ways we can provide assistance to our users.

70
00:04:06.930 --> 00:04:10.620
So one way is hint text.

71
00:04:10.710 --> 00:04:15.840
Now we touched upon this a little bit, so I have him text right here, right beside my label.

72
00:04:15.870 --> 00:04:16.260
Right.

73
00:04:16.260 --> 00:04:18.990
Aligned, not necessarily as a placeholder.

74
00:04:18.990 --> 00:04:22.440
I don't do placeholders often, but.

75
00:04:23.160 --> 00:04:29.700
Using hints above or below your input field gives users helpful information about the question you're

76
00:04:29.700 --> 00:04:30.180
asking them.

77
00:04:30.180 --> 00:04:32.010
So if you need to use it.

78
00:04:32.880 --> 00:04:34.530
Oh, that is incorrect, actually.

79
00:04:34.650 --> 00:04:41.940
If you need to use it, use it like that on top or below just to give users some helpful hints if they

80
00:04:41.940 --> 00:04:42.570
need it.

81
00:04:42.630 --> 00:04:45.020
This could be like a CV number.

82
00:04:45.030 --> 00:04:50.190
I mean, maybe not that, but you could use it for birth dates in terms of the format.

83
00:04:50.640 --> 00:04:55.170
I always know when I'm entering a date format that I don't know if I should put the date first or the

84
00:04:55.170 --> 00:04:56.760
month first or the year first.

85
00:04:56.760 --> 00:05:00.690
And, you know, I've been asked in all separate ways, it's just good to have some sort of line on

86
00:05:00.690 --> 00:05:01.590
how to do that.

87
00:05:02.770 --> 00:05:04.390
The next is auto format.

88
00:05:05.050 --> 00:05:08.590
So we have an auto format, credit card number over here.

89
00:05:08.590 --> 00:05:13.120
And essentially we have the power to automatically format a user's answer depending on the scenario.

90
00:05:13.120 --> 00:05:17.050
So this avoids any format errors and helps users read and review their answers.

91
00:05:17.050 --> 00:05:20.230
So think like things like credit card numbers, phone numbers, etc..

92
00:05:20.530 --> 00:05:24.670
So right now I have a credit card number here and it's just much more easier for me to break it up into

93
00:05:24.670 --> 00:05:27.820
chunks rather than to read it like this.

94
00:05:32.020 --> 00:05:34.830
So this is not as easy to read.

95
00:05:34.840 --> 00:05:36.190
I know it says one, two, three, four.

96
00:05:36.190 --> 00:05:36.730
One, two, three, four.

97
00:05:36.730 --> 00:05:37.300
One, two, three, four.

98
00:05:37.300 --> 00:05:38.480
One, two, three, four.

99
00:05:38.500 --> 00:05:39.340
But.

100
00:05:40.690 --> 00:05:42.940
It's harder to read when it's all combined.

101
00:05:42.940 --> 00:05:48.610
So breaking it into chunks or auto formatting, that is just a much easier experience on the user.

102
00:05:48.670 --> 00:05:52.570
So keep that in mind and have a good conversation with your developers about doing that.

103
00:05:54.370 --> 00:05:56.350
So we've seen this input before.

104
00:05:56.740 --> 00:06:02.380
Now, autocomplete sometimes users need to enter something long or they may not necessarily know what

105
00:06:02.380 --> 00:06:05.830
they're trying to search for and we should help them with autocomplete.

106
00:06:05.860 --> 00:06:11.100
This saves the user a bunch of time and also reduces the possibility of errors with formatting and spelling.

107
00:06:11.110 --> 00:06:16.990
So if we have an address like we have down here, it's just much more easier to get them to start typing

108
00:06:16.990 --> 00:06:22.060
in the the first letters or the first numbers of their address and then start auto filling.

109
00:06:22.090 --> 00:06:27.880
It could be even used for like answering a question, a specific question in relation to something and

110
00:06:27.880 --> 00:06:32.890
the user doesn't necessarily know the answer or there may be multiple answers or they may be searching

111
00:06:32.890 --> 00:06:33.910
for multiple things.

112
00:06:33.910 --> 00:06:40.510
So autocomplete has a wide variety of use cases and you should use it when a user may be confused on

113
00:06:40.510 --> 00:06:41.110
what to enter.

114
00:06:41.110 --> 00:06:47.080
Or it could cut down on the amount of time a user could enter information like a long address, which

115
00:06:47.230 --> 00:06:51.580
is pretty pedantic when you think about it in terms of answering one.

116
00:06:53.530 --> 00:06:55.120
Now default values.

117
00:06:55.480 --> 00:07:00.850
It's always smart to pre fill text fields with the most likely answer when the answer is expected by

118
00:07:00.850 --> 00:07:01.810
the majority of your users.

119
00:07:01.810 --> 00:07:09.520
So if I were to ask you a question about like your country and I knew 95% of my users are in Canada

120
00:07:09.520 --> 00:07:17.560
or the United States or whatever country I could pre fill that data with just Canada or the United States,

121
00:07:17.560 --> 00:07:20.350
and that would be a much easier experience for the majority of our users.

122
00:07:20.360 --> 00:07:24.250
So they don't have to go through the process of actually selecting that or finding that answer.

123
00:07:24.490 --> 00:07:29.230
Now, in this case, potato chips and the right answer is always salt and vinegar.

124
00:07:29.230 --> 00:07:34.630
So that's my favorite my favorite flavor for chips.

125
00:07:34.630 --> 00:07:40.540
But you should always think about how you can make the user's life a little bit more easier.

126
00:07:40.540 --> 00:07:42.220
And that's it for inputs.

