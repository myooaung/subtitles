WEBVTT
1
00:00:00.700 --> 00:00:01.569
Welcome back.

2
00:00:02.350 --> 00:00:04.660
Let's move on to the project grid.

3
00:00:05.570 --> 00:00:12.670
Something that we see a lot of in websites, whether it's an image gallery or a list of your portfolio

4
00:00:12.680 --> 00:00:13.490
projects.

5
00:00:14.000 --> 00:00:17.090
Grid systems are very important and very common.

6
00:00:17.390 --> 00:00:23.780
And as we know, we learned the perfect way to create a grid, CSS grid, right.

7
00:00:24.580 --> 00:00:28.240
So let's see how this would look like and my ideal implementation.

8
00:00:29.020 --> 00:00:31.330
First I want to go to the HTML page.

9
00:00:32.720 --> 00:00:35.330
And now let's make this a little bit bigger.

10
00:00:36.910 --> 00:00:39.610
In our project grid diff.

11
00:00:40.180 --> 00:00:45.580
I know I want to use CSS grid so I'm going to create a wrapper around this project grid.

12
00:00:46.640 --> 00:00:48.980
So I'm going to have a div.

13
00:00:52.260 --> 00:00:59.820
And this dev will have a class of some properties that will add CSS to and just to keep things blue

14
00:00:59.850 --> 00:01:05.190
the way they are, I'm going to give it the zone blue class that we have below, but we're going to

15
00:01:05.190 --> 00:01:06.600
make it a CSS grid.

16
00:01:06.600 --> 00:01:08.280
So I'm going to just say grid.

17
00:01:09.290 --> 00:01:09.950
Rapper.

18
00:01:11.040 --> 00:01:14.640
And we can just remove the project grid.

19
00:01:15.890 --> 00:01:21.030
And in here add a couple of sample little projects.

20
00:01:21.050 --> 00:01:27.050
If you remember in our solution file, I left for you a couple of images that you can just add.

21
00:01:28.150 --> 00:01:31.150
Like this so that we have some sort of a project grid.

22
00:01:32.870 --> 00:01:37.460
I'm not going to bore you with me typing all that out because that's something that we've done before.

23
00:01:37.560 --> 00:01:41.960
Just going to copy and paste a diff here with Box.

24
00:01:42.410 --> 00:01:46.730
Zone Box is a class that we haven't added yet, but we're going to create.

25
00:01:46.850 --> 00:01:49.130
These are going to be the grid items.

26
00:01:50.260 --> 00:01:56.410
We have zone, which again, something that we've already defined before and our images, that's it.

27
00:01:57.410 --> 00:01:59.690
So if I save this and refresh.

28
00:02:00.650 --> 00:02:01.880
Unless refresh again.

29
00:02:02.630 --> 00:02:03.200
All right.

30
00:02:03.200 --> 00:02:05.450
This is absolutely hideous.

31
00:02:06.400 --> 00:02:10.630
Does not look pretty at all, but at least we have the images provide it.

32
00:02:10.630 --> 00:02:13.090
But no employer is going to be impressed if they see this.

33
00:02:13.090 --> 00:02:13.540
Right.

34
00:02:13.750 --> 00:02:16.720
So let's actually make this into a grid system.

35
00:02:18.280 --> 00:02:21.790
If we go back to the style tab, let's add our.

36
00:02:23.100 --> 00:02:23.940
Grid here.

37
00:02:25.570 --> 00:02:31.420
And obviously, as the name suggests, when it comes to grids, CSS grids is the way to go.

38
00:02:31.810 --> 00:02:34.060
And there's many ways that we can lay things out.

39
00:02:34.060 --> 00:02:37.570
And it's something that we've already talked about in our CSS grid videos.

40
00:02:37.810 --> 00:02:39.700
So we're going to keep things simple.

41
00:02:40.330 --> 00:02:46.330
First is we want to actually say, hey, we're going to use this grid, so we're going to use the grid

42
00:02:46.330 --> 00:02:53.530
wrapper class that we created, which was this div that wraps all our projects.

43
00:02:55.570 --> 00:02:58.330
And we'll say display grid.

44
00:02:58.930 --> 00:03:01.420
We'll say that we want the grid gap.

45
00:03:02.070 --> 00:03:04.050
To be 20 pixels.

46
00:03:05.560 --> 00:03:13.660
And then finally the our favorite property that is grid template columns.

47
00:03:14.620 --> 00:03:16.690
And so everything is responsive.

48
00:03:16.690 --> 00:03:18.280
We'll say repeat.

49
00:03:19.390 --> 00:03:20.200
Auto.

50
00:03:20.840 --> 00:03:21.500
Phil?

51
00:03:22.710 --> 00:03:25.200
And we'll say that the min max.

52
00:03:26.620 --> 00:03:30.070
Will be, let's say, 350 pixels.

53
00:03:30.070 --> 00:03:37.390
So that is the minimum and the maximum will be one fr so that it fills the entire page when it's really,

54
00:03:37.390 --> 00:03:38.080
really small.

55
00:03:39.600 --> 00:03:42.660
So that if I save this and refresh.

56
00:03:44.780 --> 00:03:45.140
All right.

57
00:03:45.140 --> 00:03:48.020
That still looks pretty hideous, doesn't it?

58
00:03:48.020 --> 00:03:51.470
And that's because our images are well, they're pretty massive.

59
00:03:51.470 --> 00:03:56.000
And you see that they're also not all the same size or they have different padding.

60
00:03:56.540 --> 00:04:01.910
So the way to just fix that quickly and something that you'll see a lot with images.

61
00:04:02.980 --> 00:04:05.940
Is to give them a width of 100%.

62
00:04:06.810 --> 00:04:15.270
In our case, we can just say box because remember, each div has a box class that we haven't really

63
00:04:15.270 --> 00:04:17.670
said anything about and then an image.

64
00:04:17.820 --> 00:04:24.810
So using our CSS selector knowledge, I can just say all children of box that are images.

65
00:04:25.620 --> 00:04:26.910
I want the width.

66
00:04:28.600 --> 00:04:32.110
To be 100% if I save and refresh.

67
00:04:34.540 --> 00:04:35.700
All right, that's perfect.

68
00:04:35.710 --> 00:04:39.190
Now you see that each image has 100% width.

69
00:04:39.190 --> 00:04:42.880
That is, it fills in the entire piece of the card.

70
00:04:43.570 --> 00:04:48.130
And if I make this bigger and smaller, you see that it adjusts.

71
00:04:50.370 --> 00:04:52.980
Very, very cool, but still pretty ugly.

72
00:04:54.200 --> 00:05:00.890
But we have the CSS grid working, as you can see, as soon as it's less than 350 pixels.

73
00:05:02.270 --> 00:05:03.980
It changes the grid system.

74
00:05:06.710 --> 00:05:09.560
So next we want to work on the individual cards.

75
00:05:09.680 --> 00:05:12.350
That is, we want to have our box.

76
00:05:13.640 --> 00:05:18.080
And here we don't really need to add any extra grid properties.

77
00:05:18.080 --> 00:05:20.990
I mean, we could if we want, but I like the way things look.

78
00:05:20.990 --> 00:05:22.520
I like everything being symmetrical.

79
00:05:22.520 --> 00:05:25.580
I want all the items in the grid to be the same.

80
00:05:26.150 --> 00:05:34.070
So in here we can just add our simple CSS properties like, let's say background color.

81
00:05:35.800 --> 00:05:43.300
And we'll just give it a color of, let's say, four, four, four so that we have this dark color and

82
00:05:43.300 --> 00:05:46.420
we definitely don't want these images to be this big.

83
00:05:47.050 --> 00:05:55.330
So we'll give it a padding of 130 pixels and maybe some margin as well of 20 pixels.

84
00:05:55.810 --> 00:05:57.370
If I save and refresh.

85
00:05:58.190 --> 00:05:59.360
That's a lot better.

86
00:05:59.780 --> 00:06:06.560
And remember, because we said that the width of the image is 100%, it's going to try and fill the

87
00:06:06.560 --> 00:06:07.910
entire box.

88
00:06:07.910 --> 00:06:14.480
But because the box now has padding of 130, both of the top, the bottom and to the left and right,

89
00:06:14.990 --> 00:06:19.280
the width is now just this part, so that looks a lot better.

90
00:06:20.470 --> 00:06:24.790
And if we look over here, we now have a completely.

91
00:06:25.860 --> 00:06:27.000
Responsive.

92
00:06:29.350 --> 00:06:30.380
Grid system.

93
00:06:30.400 --> 00:06:34.750
How cool is that and how simple was that using CSS grid?

94
00:06:35.380 --> 00:06:40.030
Luckily for us, the last thing we need to do is this footer.

95
00:06:40.180 --> 00:06:44.590
And because the footer is at the very bottom, it's just going to stay at the very bottom.

96
00:06:44.740 --> 00:06:49.510
The only thing that we might want to do is to make sure that the text is centered.

97
00:06:49.840 --> 00:06:51.910
So in our case, we can just say footer.

98
00:06:53.090 --> 00:06:54.050
And as you guessed.

99
00:06:54.050 --> 00:06:56.060
Yes, it's text line.

100
00:06:56.120 --> 00:06:58.270
Our best friend center.

101
00:06:58.910 --> 00:07:05.090
If I refresh and make sure that I spell properly, if I save in refresh.

102
00:07:05.300 --> 00:07:10.040
Well, that's not going to work, because we should change our footer.

103
00:07:10.620 --> 00:07:15.450
Which is diff to more of a semantic html tag of footer.

104
00:07:17.050 --> 00:07:21.160
Now, if I save in refresh, this is in the center.

105
00:07:21.280 --> 00:07:22.320
It looks great.

106
00:07:22.330 --> 00:07:29.800
Let's say zero to mastery because our layout is looking really nice.

107
00:07:32.980 --> 00:07:34.060
And there you have it.

108
00:07:34.420 --> 00:07:36.820
That wasn't that bad, was it?

109
00:07:38.110 --> 00:07:42.550
I mean, sure, the first time around, that's kind of difficult.

110
00:07:42.820 --> 00:07:49.600
But the principles that I've showed you here can be transferred to a lot of websites.

111
00:07:49.720 --> 00:07:51.790
I mean, this looks pretty ugly.

112
00:07:51.970 --> 00:07:55.120
You're not going to want to visit a website that looks like this.

113
00:07:55.270 --> 00:08:00.370
But when it comes to layout, everything is responsive and nice.

114
00:08:00.520 --> 00:08:01.140
Right.

115
00:08:01.150 --> 00:08:05.950
And you can imagine yourself expanding on this and building a beautiful website.

116
00:08:07.340 --> 00:08:13.310
I wanted to show you this layout system because this is what I would use if I was building a website.

117
00:08:13.490 --> 00:08:19.100
I would start off with the HTML and create the layout that is responsive.

118
00:08:19.220 --> 00:08:26.210
Because after this, all I really need to do is add text images and colors, maybe some CSS styles to

119
00:08:26.210 --> 00:08:30.140
make it pretty so that you can turn something like this.

120
00:08:30.620 --> 00:08:37.309
That doesn't look good, but has the layout implemented into something like this, which I mean, doesn't

121
00:08:37.309 --> 00:08:39.289
look that great yet.

122
00:08:39.289 --> 00:08:46.730
But in the next video I want to show you how, because we have the layout set up, we can convert our

123
00:08:46.730 --> 00:08:51.140
base layout project into something like this in less than 5 minutes.

124
00:08:51.530 --> 00:08:53.360
So let's do that in the next video.

