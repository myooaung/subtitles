WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.490
So let's take a look now, Lord the project into

00:00:02.490 --> 00:00:05.865
intelligent idea and take a look around and see how it's structured.

00:00:05.865 --> 00:00:13.750
So if I close this and you stop this causes two and jump into idea.

00:00:16.130 --> 00:00:22.130
So we'll just open the project desktop,

00:00:22.130 --> 00:00:27.800
spring pet clinic and points in the pond XML file just to open.

00:00:27.800 --> 00:00:31.680
Open as a projects, not as a single file.

00:00:32.710 --> 00:00:35.660
And it's basically preparing the project,

00:00:35.660 --> 00:00:37.760
doing some indexing is done.

00:00:37.760 --> 00:00:39.260
So if we jump into here,

00:00:39.260 --> 00:00:41.540
you can see here's the project spring pick clinic.

00:00:41.540 --> 00:00:45.155
And we've got a source main Java folder.

00:00:45.155 --> 00:00:46.670
So with this being a Maven project,

00:00:46.670 --> 00:00:49.175
our production sources run the source main Java,

00:00:49.175 --> 00:00:51.380
which has signaled by this blue folder here.

00:00:51.380 --> 00:00:57.680
And similarly we have got a source test Java folder signified by the green folder there.

00:00:57.680 --> 00:00:59.165
So anything green is test,

00:00:59.165 --> 00:01:03.060
anything blue is production in idea.

00:01:03.760 --> 00:01:11.630
So you will see that the test sources mirror the production sources in the respect that,

00:01:11.630 --> 00:01:13.700
for example, if we look inside system and

00:01:13.700 --> 00:01:19.280
welcome controller in the production sources and then look inside the test sources.

00:01:19.280 --> 00:01:22.805
We can see we've got under System crushed controller tests,

00:01:22.805 --> 00:01:28.040
which corresponds to the system crash controller then protesting for everything.

00:01:28.040 --> 00:01:29.580
They've just put a few tests to,

00:01:29.580 --> 00:01:32.465
to give you a flavor of what testlet like in Spring Boot.

00:01:32.465 --> 00:01:34.670
Key point here is though that the tests exist in

00:01:34.670 --> 00:01:37.895
the same package as the production class that the testing lives in.

00:01:37.895 --> 00:01:40.140
And guess and that's testing.

00:01:43.350 --> 00:01:46.330
Here's the production sources live in here.

00:01:46.330 --> 00:01:48.325
We've got a pond XML file,

00:01:48.325 --> 00:01:49.795
which is that the root of the project,

00:01:49.795 --> 00:01:51.970
which describes the project object model.

00:01:51.970 --> 00:01:55.105
And inside here, we've got the dependencies.

00:01:55.105 --> 00:02:01.195
So these dependencies, you'll notice they all start with Spring Boot starter dash.

00:02:01.195 --> 00:02:04.540
So these role, so-called Spring Boot started dependencies.

00:02:04.540 --> 00:02:07.675
And what those are are basically dependency holders, if you like,

00:02:07.675 --> 00:02:10.390
which bring in different facets of

00:02:10.390 --> 00:02:13.480
a certain technology and allow them to be used in the application.

00:02:13.480 --> 00:02:17.950
So for example, here, this is bringing in springs caching abstraction.

00:02:17.950 --> 00:02:22.930
Here, this is bringing in the ability to use spring data and GPA.

00:02:22.930 --> 00:02:25.250
This is bringing in spring web,

00:02:25.250 --> 00:02:29.120
so we can use Spring Web NBC with the dispatcher cellular mechanism, that kind of stuff.

00:02:29.120 --> 00:02:30.710
And so they all follow this convention of

00:02:30.710 --> 00:02:34.070
Spring Boot starter and then the actual facet Nim.

00:02:34.070 --> 00:02:37.580
And these correspond as well to the same dependencies that you can introduce when

00:02:37.580 --> 00:02:41.285
you look at the spring initialize app on start dot spring to iron.

00:02:41.285 --> 00:02:46.324
Okay, so that's the main production dependencies.

00:02:46.324 --> 00:02:49.400
We'll see. We've got some standard dependencies here for testing.

00:02:49.400 --> 00:02:50.975
We're using JUnit Jupiter,

00:02:50.975 --> 00:02:55.055
which has unit five with Mockito to allow MOOC best testing.

00:02:55.055 --> 00:02:57.695
We're also including Spring Boot dev tools.

00:02:57.695 --> 00:03:00.410
So that's to enable a more rapid development workflow.

00:03:00.410 --> 00:03:02.270
So without having to like do code changes,

00:03:02.270 --> 00:03:03.665
stop the server restarted,

00:03:03.665 --> 00:03:07.250
are willing sprinkled application with this dependency installed will detect

00:03:07.250 --> 00:03:08.960
those changes on the class path and

00:03:08.960 --> 00:03:12.409
automatically restart the app by refreshing the context.

00:03:12.409 --> 00:03:17.330
So there's more stuff here in the file is not too much stuff that's not interesting.

00:03:17.330 --> 00:03:21.485
And mostly stuff you can just pretty much leave as it is really to be honest,

00:03:21.485 --> 00:03:23.120
when you developing springboard applications,

00:03:23.120 --> 00:03:25.325
you really just concerned about adding the dependencies.

00:03:25.325 --> 00:03:28.850
So the Spring Boot started dependencies and any extra third-party things you might need.

00:03:28.850 --> 00:03:32.520
So for example, JDBC drivers, that kind of thing.
