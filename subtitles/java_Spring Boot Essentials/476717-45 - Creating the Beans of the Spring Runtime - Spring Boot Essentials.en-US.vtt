WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.320
Okay, so let's continue on then,

00:00:01.320 --> 00:00:04.140
stepping through the code within this prepare contexts now.

00:00:04.140 --> 00:00:07.710
So I'll just let that prepare it and then we'll see what changes it's made.

00:00:07.710 --> 00:00:10.529
So now if we look inside the context,

00:00:10.529 --> 00:00:14.400
we can see we do have been factory pulse processes.

00:00:14.400 --> 00:00:16.650
And specifically we have these three here.

00:00:16.650 --> 00:00:20.700
And what these are going to do, they're basically post-process the bean factory.

00:00:20.700 --> 00:00:22.770
So there was the plain vanilla bean factory,

00:00:22.770 --> 00:00:25.005
which is produced from a spring code.

00:00:25.005 --> 00:00:30.520
What's going to happen now is each one of these is going to post-process it in some way.

00:00:33.320 --> 00:00:39.310
And we've also got application listeners as well, which we saw before.

00:00:41.140 --> 00:00:44.700
And if we go into our bean factory,

00:00:48.100 --> 00:00:50.780
because you've got the beans in there as well.

00:00:50.780 --> 00:00:53.115
So when we do refresh context,

00:00:53.115 --> 00:00:54.815
are we step into this,

00:00:54.815 --> 00:00:57.620
casting it to an application context and doing

00:00:57.620 --> 00:01:03.350
refresh application context to refresh during a stupid or refresh.

00:01:03.350 --> 00:01:05.060
So when we're in this class here,

00:01:05.060 --> 00:01:07.970
which is now abstract to application context.

00:01:07.970 --> 00:01:10.325
This method here, which is the refresh method,

00:01:10.325 --> 00:01:13.220
is basically the main sequence of steps which

00:01:13.220 --> 00:01:16.805
the Spring container goes through to get itself set up for use.

00:01:16.805 --> 00:01:19.430
So stepping through this,

00:01:19.430 --> 00:01:22.400
when we see post-process bean factory for example,

00:01:22.400 --> 00:01:25.355
if we step in here, step into this.

00:01:25.355 --> 00:01:29.270
We can see that this is a hook in the Spring framework which allows any subclasses

00:01:29.270 --> 00:01:33.650
of the application context to post-process the bean factory in any way they see fit.

00:01:33.650 --> 00:01:37.550
And so for example here we can see the beam factories adding a bean post processor,

00:01:37.550 --> 00:01:41.135
which is web application context serve that context aware processor.

00:01:41.135 --> 00:01:44.690
Which will, if you look inside, they're mostly it's providing extra functionality

00:01:44.690 --> 00:01:49.535
to set the web application context and get the cellular context and config.

00:01:49.535 --> 00:01:52.205
Jim poverty, we shift F8,

00:01:52.205 --> 00:01:55.355
then we're now into this invoke bean factory boss processes.

00:01:55.355 --> 00:01:59.180
So now we've done specific subclass application, context level stuff.

00:01:59.180 --> 00:02:02.960
We can go into this invoke bean factory post-process as method.

00:02:02.960 --> 00:02:05.820
Again, step into here.

00:02:06.390 --> 00:02:10.195
And we'll see that we have our registry,

00:02:10.195 --> 00:02:13.160
which is basically the bean factory itself.

00:02:15.300 --> 00:02:18.100
And when we step through here,

00:02:18.100 --> 00:02:21.310
we see that for each registry processor that we have,

00:02:21.310 --> 00:02:25.420
each post-process and that we have in our bean factory post processes.

00:02:25.420 --> 00:02:28.930
So we have those three which we saw earlier from here.

00:02:28.930 --> 00:02:33.490
Each one's getting a turn to post-process being definition registry.

00:02:33.490 --> 00:02:35.920
And so bean factory post processor basically

00:02:35.920 --> 00:02:38.380
gets passed is configurable, listable bean factory.

00:02:38.380 --> 00:02:41.600
So you can pause, process it in some way.

00:02:42.900 --> 00:02:45.505
So here for example, in this one,

00:02:45.505 --> 00:02:47.305
if we go into the shared metadata,

00:02:47.305 --> 00:02:50.060
read a factory context initializer,

00:02:50.350 --> 00:02:56.600
registering being definitions then configure configuration, cause post processor.

00:02:56.600 --> 00:02:59.210
And it's getting a specific bean adding some property values.

00:02:59.210 --> 00:03:00.380
So shifted out of here,

00:03:00.380 --> 00:03:02.660
that's not particularly interesting one.

00:03:02.660 --> 00:03:08.165
And shift a fade back out and do it now back to the top level.

00:03:08.165 --> 00:03:16.160
So this point now the bean factory here as being post-processed.

00:03:16.160 --> 00:03:20.120
And now it has the singleton objects which had been created.

00:03:20.120 --> 00:03:23.600
So the auto detection mechanisms going on and it's greater things like

00:03:23.600 --> 00:03:25.430
a transaction interceptor for

00:03:25.430 --> 00:03:30.390
intercepting transactions and doing all the transaction algae stuff on service methods.

00:03:34.270 --> 00:03:36.530
And those kinds of things.

00:03:36.530 --> 00:03:38.610
Just close it off.
