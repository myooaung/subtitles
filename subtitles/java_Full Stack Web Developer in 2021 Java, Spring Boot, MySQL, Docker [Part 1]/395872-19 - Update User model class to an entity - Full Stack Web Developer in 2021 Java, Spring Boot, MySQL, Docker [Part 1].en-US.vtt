WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.690
we should move forward and that date our user model,

00:00:04.690 --> 00:00:11.490
class torn entity so that it will be visible under our age toe in memory database.

00:00:11.490 --> 00:00:22.580
So I went toe user class and right here at the top is important toe.

00:00:22.580 --> 00:00:25.070
Add the entity annotation.

00:00:25.070 --> 00:00:30.410
This will tell spring and behind the scenes that J p.

00:00:30.410 --> 00:00:30.670
A.

00:00:30.670 --> 00:00:36.420
That this class will be marked as an entity for the i.

00:00:36.420 --> 00:00:36.900
D.

00:00:36.900 --> 00:00:46.570
Will set the idea notation in the jury that value we can go with the identity jury value

00:00:46.570 --> 00:00:53.760
such as idea will be the primary key for or our model class and will be automatically

00:00:53.760 --> 00:00:58.170
increment ID by our in memory h two database.

00:00:58.170 --> 00:01:02.560
So I created.

00:01:02.560 --> 00:01:04.460
I set up the entity,

00:01:04.460 --> 00:01:05.040
the idea,

00:01:05.040 --> 00:01:13.640
the generated value and it's also important toe ad the user depository.

00:01:13.640 --> 00:01:23.220
So I created the com that repository package and set up a new interface called as mentioned

00:01:23.220 --> 00:01:31.580
user Reports story that will be able to invoke corresponding methods using spring data J.

00:01:31.580 --> 00:01:31.850
P.

00:01:31.850 --> 00:01:32.130
A.

00:01:32.130 --> 00:01:34.550
To our database.

00:01:34.550 --> 00:01:39.150
I added the repository annotation,

00:01:39.150 --> 00:01:50.630
and this class will extend the crowd repository using user and long as the model and the

00:01:50.630 --> 00:01:52.850
primary key that we will use,

00:01:52.850 --> 00:02:04.190
so you can see that we can also add the additional annotation over here.

00:02:04.190 --> 00:02:11.310
Let's call it table and the table name will be set.

00:02:11.310 --> 00:02:13.810
US users.

00:02:13.810 --> 00:02:14.440
Yeah,

00:02:14.440 --> 00:02:15.850
let's go with users.

00:02:15.850 --> 00:02:19.100
Okay,

00:02:19.100 --> 00:02:23.210
so I think will we are ready to go.

00:02:23.210 --> 00:02:28.320
I will say the user depository.

00:02:28.320 --> 00:02:29.230
So once again,

00:02:29.230 --> 00:02:31.810
this user depository is an interference.

00:02:31.810 --> 00:02:37.950
But behind the scenes using spring that RGB we have access to a bunch of metals toe

00:02:37.950 --> 00:02:43.140
automatically call our in memory aged a database.

00:02:43.140 --> 00:02:52.580
Let's take a look a bit that the logs we can see now that a new table has been created

00:02:52.580 --> 00:03:03.050
called users the stable has been created automatically since now Spring knows that that ah

00:03:03.050 --> 00:03:03.050
,

00:03:03.050 --> 00:03:05.520
user table is annotated.

00:03:05.520 --> 00:03:09.350
With entity under age to counsel,

00:03:09.350 --> 00:03:12.500
we can see that the user stable is present.

