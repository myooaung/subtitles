WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.070
as part of this video,

00:00:02.070 --> 00:00:08.340
I would like to prepare the environment in orderto be able to receive requests from on you

00:00:08.340 --> 00:00:14.250
I project that will build us part off discourse at a later point.

00:00:14.250 --> 00:00:16.620
So first thing,

00:00:16.620 --> 00:00:23.810
let's be sure that we use the spring that assumes you are ill for the local host,

00:00:23.810 --> 00:00:26.150
instead off the doctor environment.

00:00:26.150 --> 00:00:33.390
Now,

00:00:33.390 --> 00:00:36.650
if we take a look on the load,

00:00:36.650 --> 00:00:46.630
usar Cindy be would have on issue over here if we are using the my school instance instead

00:00:46.630 --> 00:00:51.650
off the age toe in memory database that we use previously.

00:00:51.650 --> 00:00:59.230
And I will show you how to fix this parts of the started application.

00:00:59.230 --> 00:01:03.550
And you see several concerts being made under the user stable.

00:01:03.550 --> 00:01:13.380
Let's go to our my school instance.

00:01:13.380 --> 00:01:38.930
Let's connect to it and let's connect to our demo database and was selected from our usar

00:01:38.930 --> 00:01:39.550
stable,

00:01:39.550 --> 00:01:53.900
and you see here that we don't have then no records that should be inserted only ones.

00:01:53.900 --> 00:01:57.130
When the application starts up,

00:01:57.130 --> 00:01:57.610
we have,

00:01:57.610 --> 00:01:58.210
for example,

00:01:58.210 --> 00:02:04.370
28 and this is an issue that we need to fix.

00:02:04.370 --> 00:02:19.660
Let's first toe removed all the records from our user stable.

00:02:19.660 --> 00:02:23.450
You know,

00:02:23.450 --> 00:02:25.250
I have a clean environment.

00:02:25.250 --> 00:02:33.160
Does be sure that the truncate operation has drawn with success.

00:02:33.160 --> 00:02:35.880
We should have zero records.

00:02:35.880 --> 00:02:38.960
Okay.

00:02:38.960 --> 00:02:45.830
And now,

00:02:45.830 --> 00:02:51.150
in order to be sure that we have only 10 users set up or no,

00:02:51.150 --> 00:02:53.040
the application startup,

00:02:53.040 --> 00:02:59.510
we need to do a check such as the user reports story count operation.

00:02:59.510 --> 00:03:02.440
Sure,

00:03:02.440 --> 00:03:05.030
the return zero,

00:03:05.030 --> 00:03:05.770
if not,

00:03:05.770 --> 00:03:10.250
will skip this operation and we're not in certainly data.

00:03:10.250 --> 00:03:14.720
So let's test this.

00:03:14.720 --> 00:03:30.840
So be aware that we don't have any users at this moment and the 10 users were inserted week

00:03:30.840 --> 00:03:31.640
success.

00:03:31.640 --> 00:03:34.850
So it's good so far.

00:03:34.850 --> 00:03:39.570
Now let's stop the application and rest started.

00:03:39.570 --> 00:03:41.510
And at this moment,

00:03:41.510 --> 00:03:44.990
since we have 10 users already present it to the database,

00:03:44.990 --> 00:03:48.720
we should always keep that operation.

00:03:48.720 --> 00:03:52.170
And we will not concert any users anymore.

00:03:52.170 --> 00:04:14.610
So this has been fixed now,

00:04:14.610 --> 00:04:18.830
in order for our server applications.

00:04:18.830 --> 00:04:26.840
So this sprinkled application to be ableto received requests from on your application we

00:04:26.840 --> 00:04:29.170
need to set up being in place.

00:04:29.170 --> 00:04:33.760
So this is ah,

00:04:33.760 --> 00:04:37.650
method annotated with the beano stereotype,

00:04:37.650 --> 00:04:44.550
and we're eternal filter registration being off course filter.

00:04:44.550 --> 00:04:51.690
Be sure to import the spring for you,

00:04:51.690 --> 00:04:52.050
Mark.

00:04:52.050 --> 00:04:53.900
Corresponding.

00:04:53.900 --> 00:04:55.750
Go Beckett.

00:04:55.750 --> 00:05:04.060
Now we need to create on You Are are based course,

00:05:04.060 --> 00:05:05.350
configuration source.

00:05:05.350 --> 00:05:25.350
So I created this object and imported the corresponding package.

00:05:25.350 --> 00:05:26.960
Let's fix this.

00:05:26.960 --> 00:05:29.300
Okay,

00:05:29.300 --> 00:05:37.850
Now we need to set in place,

00:05:37.850 --> 00:05:38.300
of course,

00:05:38.300 --> 00:05:39.650
configuration object.

00:05:39.650 --> 00:05:53.450
And based on this course configuration object,

00:05:53.450 --> 00:05:56.650
we need to set some specific properties for it,

00:05:56.650 --> 00:05:59.320
such as?

00:05:59.320 --> 00:06:01.100
Well allow credentials.

00:06:01.100 --> 00:06:17.250
So we were also allow origins.

00:06:17.250 --> 00:06:18.740
And for this,

00:06:18.740 --> 00:06:22.760
we need to set in place of collections off single tonalist.

00:06:22.760 --> 00:06:24.030
And basically,

00:06:24.030 --> 00:06:28.950
this will allow origins for everything.

00:06:28.950 --> 00:06:31.210
That symbol means everything.

00:06:31.210 --> 00:06:40.950
And our courts configuration will allow methods similar to the previous line.

00:06:40.950 --> 00:06:51.450
Okay.

00:06:51.450 --> 00:06:59.810
And for the allows headers,

00:06:59.810 --> 00:07:06.770
we'll also need to set in place a single tonalist similar to the other previous two lines.

00:07:06.770 --> 00:07:20.410
Now we need to register the your outburst course configuration source with the course

00:07:20.410 --> 00:07:21.450
configuration,

00:07:21.450 --> 00:07:32.850
so that will accept everything and also the config object that we previously set up.

00:07:32.850 --> 00:07:52.850
Now,

00:07:52.850 --> 00:07:53.580
off course,

00:07:53.580 --> 00:08:02.300
we need to return a filter registration being that will be sitting place for our spring

00:08:02.300 --> 00:08:04.050
boot server project.

00:08:04.050 --> 00:08:12.160
And this filled a registration being the story.

00:08:12.160 --> 00:08:12.590
See,

00:08:12.590 --> 00:08:22.660
um course filter object off that source reference for the euro based cause configuration

00:08:22.660 --> 00:08:23.660
source.

00:08:23.660 --> 00:08:46.510
Unimportant step is to set the order for this filter registration being as highest

00:08:46.510 --> 00:08:47.290
presidents.

00:08:47.290 --> 00:08:48.200
And,

00:08:48.200 --> 00:08:48.680
of course,

00:08:48.680 --> 00:08:49.650
to return the bean.

00:08:49.650 --> 00:08:56.630
Now,

00:08:56.630 --> 00:08:59.400
let's stop the court on the running application.

00:08:59.400 --> 00:09:17.270
Let's go a bit under our security configuration and basically rewrite this configured

00:09:17.270 --> 00:09:17.750
method.

00:09:17.750 --> 00:09:22.580
So,

00:09:22.580 --> 00:09:35.090
http security that we receive us perimeter toe this metal when it to disable this and also

00:09:35.090 --> 00:09:36.610
set in place the form Logan,

00:09:36.610 --> 00:09:41.580
the looking process singer.

00:09:41.580 --> 00:09:43.580
Your girl will be set to Logan.

00:09:43.580 --> 00:09:45.090
So imagine that.

00:09:45.090 --> 00:09:48.650
Are your application that were right as part of the scores,

00:09:48.650 --> 00:09:51.340
Will you are now authentication.

00:09:51.340 --> 00:09:53.170
Toe this Logan page.

00:09:53.170 --> 00:10:20.170
We're also set the http basic authentication and for the and matters will permit all so all

00:10:20.170 --> 00:10:29.110
users will be able to access the logon page and for any other requests users need to be out

00:10:29.110 --> 00:10:37.100
indicated So at this moment,

00:10:37.100 --> 00:10:45.300
we prepare the infrastructure for setting up the your abortion off this course.

00:10:45.300 --> 00:10:57.750
So everything is in place for our springboard server project.

00:10:57.750 --> 00:11:10.980
So let's not get too local host 80 80 and you will see the default looking page in place

00:11:10.980 --> 00:11:12.710
place.

00:11:12.710 --> 00:11:21.830
I recall that we have the means apartment user impasse for let's navigate war prop for a p

00:11:21.830 --> 00:11:22.180
I.

00:11:22.180 --> 00:11:24.960
Who is he that this works

