WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.225
In the finished version for smaller devices,

00:00:03.225 --> 00:00:07.665
you can see some differences to what I have so far without CSS.

00:00:07.665 --> 00:00:09.720
The final version, as you can see here,

00:00:09.720 --> 00:00:11.535
has the centered text,

00:00:11.535 --> 00:00:13.755
it has a full width image,

00:00:13.755 --> 00:00:16.305
and generally better spacing.

00:00:16.305 --> 00:00:18.270
Stretching the browser wider,

00:00:18.270 --> 00:00:20.580
we can also see that the immediate query is

00:00:20.580 --> 00:00:25.860
used to switch the view from the post being stacked on top of each other,

00:00:25.860 --> 00:00:29.865
to having the blog posts and side bar side-by-side.

00:00:29.865 --> 00:00:33.705
To do this layout change in a blog.html page,

00:00:33.705 --> 00:00:38.980
we already have a surrounding div with the class of wrapper,

00:00:39.020 --> 00:00:43.955
which is just above the main section here.

00:00:43.955 --> 00:00:46.430
This will be our flex container.

00:00:46.430 --> 00:00:48.470
Then all we need to do is to change

00:00:48.470 --> 00:00:52.670
the flex direction from column to row, for larger screens.

00:00:52.670 --> 00:00:56.830
This is nothing new, we've already seen this for the header.

00:00:56.830 --> 00:01:01.950
Let's begin in the style dot CSS to make this work.

00:01:01.950 --> 00:01:04.960
Outside the media query,

00:01:06.050 --> 00:01:09.360
we can target the class of wrapper.

00:01:09.360 --> 00:01:12.345
Add these just above the media query,

00:01:12.345 --> 00:01:16.050
so dot wrapper, because it's a class.

00:01:16.050 --> 00:01:21.470
Then as we just mentioned when it's set the display type to be of flex,

00:01:21.470 --> 00:01:25.410
with a flex direction of column.

00:01:25.850 --> 00:01:29.300
Because this is outside of the media query,

00:01:29.300 --> 00:01:34.120
this means that the flex direction of column will apply on the smaller screens.

00:01:34.120 --> 00:01:39.710
In just a bit, we can change this flex direction back to row inside the media query.

00:01:39.710 --> 00:01:42.900
Let's save and see how this is looking.

00:01:44.030 --> 00:01:48.300
Scale the browser down so you can get a better idea.

00:01:48.300 --> 00:01:51.775
Now I'm going to add some padding and margin,

00:01:51.775 --> 00:01:54.875
just to give the article a little bit of spacing.

00:01:54.875 --> 00:02:01.055
Let's select the article and also the sidebar widget class.

00:02:01.055 --> 00:02:06.090
This is the class which you give to all the sidebar components.

00:02:06.590 --> 00:02:12.015
I'm going to add some padding inside, of 15 pixels,

00:02:12.015 --> 00:02:14.755
and then also some margin,

00:02:14.755 --> 00:02:17.750
of 15 pixels on the top and bottom,

00:02:17.750 --> 00:02:20.435
and then zero on the left and right.

00:02:20.435 --> 00:02:24.455
This will add some padding inside of the div and then some margin

00:02:24.455 --> 00:02:29.185
above and below to separate the blog posts and also the widgets.

00:02:29.185 --> 00:02:31.095
Let's give that refresh.

00:02:31.095 --> 00:02:36.690
Now you can see this margin has been applied in between each one of the posts.

00:02:37.420 --> 00:02:43.070
Remember, each one of these blog posts also has its own header section.

00:02:43.070 --> 00:02:46.520
We're going to add a background color for this blog header,

00:02:46.520 --> 00:02:49.610
but we don't want to use the header selector because

00:02:49.610 --> 00:02:53.290
this would also target the header at the top of the page.

00:02:53.290 --> 00:02:56.630
To do this, just below this article section,

00:02:56.630 --> 00:03:02.995
we're going to target the article header, just like that.

00:03:02.995 --> 00:03:04.850
Using this greater than symbol,

00:03:04.850 --> 00:03:07.220
select only direct children.

00:03:07.220 --> 00:03:10.190
In this case, this will only target the header elements,

00:03:10.190 --> 00:03:13.860
which is a direct child of a article.

00:03:13.880 --> 00:03:24.385
Then we'll set the background color to be the hex value of d8d8d8, save and refresh.

00:03:24.385 --> 00:03:29.535
Now you can see this header section has a slightly darker background.

00:03:29.535 --> 00:03:34.415
Then the image, if we stretch the browser a little bit wider,

00:03:34.415 --> 00:03:38.510
we can see the image doesn't quite fit the full width of the page.

00:03:38.510 --> 00:03:47.860
To fix this, we can select all images and set the width to be 100 percent.

00:03:49.520 --> 00:03:51.990
Then refresh and take a look at this,

00:03:51.990 --> 00:03:57.060
and now we can see the image flows to be 100 percent of the container.

00:04:01.460 --> 00:04:07.130
I'm also going to add a little bit of margin to the Font Awesome icons.

00:04:07.130 --> 00:04:12.085
If we make the browser just a little bit smaller and scroll down to the bottom,

00:04:12.085 --> 00:04:15.340
I'm just going to add some margin to the left and right,

00:04:15.340 --> 00:04:18.160
just to space out these icons a little bit more.

00:04:18.160 --> 00:04:20.995
Remember Font Awesome had the i elements,

00:04:20.995 --> 00:04:23.170
so we can select it with i,

00:04:23.170 --> 00:04:26.980
so margin zero on the top and bottom,

00:04:26.980 --> 00:04:32.615
and five pixels on the left and right, and then refresh.

00:04:32.615 --> 00:04:36.715
Now we can see we've got better spacing between the icons.

00:04:36.715 --> 00:04:40.330
Our mobile-first styling is almost complete,

00:04:40.330 --> 00:04:41.725
but before we move on,

00:04:41.725 --> 00:04:45.455
I want to introduce you to CSS pseudo classes.

00:04:45.455 --> 00:04:50.340
Pseudo classes are used to apply styling to a certain state.

00:04:50.340 --> 00:04:55.270
A common example is changing the color of a link when a user hovers over it.

00:04:55.270 --> 00:04:59.195
We can select the links with the a elements,

00:04:59.195 --> 00:05:03.350
and then we use a colon and then add to the name of the pseudo selector,

00:05:03.350 --> 00:05:06.025
which in this case is hover.

00:05:06.025 --> 00:05:09.065
Every time the user hovers over a link,

00:05:09.065 --> 00:05:12.245
we're going to change the color of the link.

00:05:12.245 --> 00:05:18.310
Then let's set this to a blue color and give us a go.

00:05:18.310 --> 00:05:21.270
Let's go back up to the top section,

00:05:21.270 --> 00:05:26.845
and now we can see when you hover over any of these links it now turn blue.

00:05:26.845 --> 00:05:31.805
Then finally, I'm going to look at the nth child pseudo-selector.

00:05:31.805 --> 00:05:36.425
If we scroll down to the table of the visiting countries,

00:05:36.425 --> 00:05:40.355
I want to add a little bit more padding to the left of these ticks.

00:05:40.355 --> 00:05:43.880
If we only target the td elements in the CSS,

00:05:43.880 --> 00:05:47.845
this will also apply to the td element for the country too.

00:05:47.845 --> 00:05:52.035
To add this padding to only the second one on each row,

00:05:52.035 --> 00:05:55.035
we use the nth child pseudo-class.

00:05:55.035 --> 00:05:58.145
This takes in a number as a parameter in the brackets.

00:05:58.145 --> 00:06:03.905
This number in our case will be number 2 to select the second td elements.

00:06:03.905 --> 00:06:07.140
Let's take a look at how we can do this.

00:06:08.060 --> 00:06:10.840
Let's target the td,

00:06:10.840 --> 00:06:12.800
and again separated by a colon,

00:06:12.800 --> 00:06:15.330
we can add nth child.

00:06:16.100 --> 00:06:21.845
As I mentioned before, we want to select the second child and then we want to add

00:06:21.845 --> 00:06:28.620
some padding only to the left of 30 pixels.

00:06:28.700 --> 00:06:31.890
Let's save and see how this is looking.

00:06:31.890 --> 00:06:35.705
Now we can see that the ticks will be moved slightly over to the right.

00:06:35.705 --> 00:06:39.260
This is only applied to the second td,

00:06:39.260 --> 00:06:41.795
we've got no additional padding on the first one;

00:06:41.795 --> 00:06:47.565
the countries, that are also hover which has first child and last child.

00:06:47.565 --> 00:06:51.175
You can find out more about these in the resources download.

00:06:51.175 --> 00:06:56.640
This now finishes the styles I want to add to the mobile-first view for my blog.

00:06:56.640 --> 00:07:00.660
Hopefully now I've a great looking blog too for small screens.

00:07:00.660 --> 00:07:05.760
Now it's time to move on and add the final styles for larger devices.
