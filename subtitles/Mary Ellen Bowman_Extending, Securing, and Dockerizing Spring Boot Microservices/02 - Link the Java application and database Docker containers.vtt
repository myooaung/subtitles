WEBVTT
1
00:00:00.050 --> 00:00:01.040
- [Instructor] So, now that we know

2
00:00:01.040 --> 00:00:03.050
how to Dockerize our application,

3
00:00:03.050 --> 00:00:05.010
let's configure it to connect

4
00:00:05.010 --> 00:00:07.050
with our explorecali database container.

5
00:00:07.050 --> 00:00:09.000
Before we start, we have to make sure

6
00:00:09.000 --> 00:00:10.090
there are no existing images

7
00:00:10.090 --> 00:00:13.010
or container of our application,

8
00:00:13.010 --> 00:00:14.070
so let's go to the command line

9
00:00:14.070 --> 00:00:18.030
and do docker ps -a.

10
00:00:18.030 --> 00:00:20.040
We don't have any containers running

11
00:00:20.040 --> 00:00:21.090
for the application,

12
00:00:21.090 --> 00:00:24.000
just the ec-mysql container which is good

13
00:00:24.000 --> 00:00:26.030
'cause we're gonna interact with it.

14
00:00:26.030 --> 00:00:29.040
Now we're going to see if there is any images

15
00:00:29.040 --> 00:00:36.010
of our application.

16
00:00:36.010 --> 00:00:40.090
And we do see we do have the explorecali image

17
00:00:40.090 --> 00:00:43.090
in Docker, we don't want that,

18
00:00:43.090 --> 00:00:44.070
so we're gonna remove it

19
00:00:44.070 --> 00:00:46.030
because we're gonna generate a new one

20
00:00:46.030 --> 00:00:50.080
that's database aware.

21
00:00:50.080 --> 00:00:55.040
Rmi means remove image.

22
00:00:55.040 --> 00:00:58.080
And we've removed that image.

23
00:00:58.080 --> 00:01:00.030
And it's gone, so the only thing we have

24
00:01:00.030 --> 00:01:02.080
is mysql and Java 8,

25
00:01:02.080 --> 00:01:05.040
clear the screen up a bit.

26
00:01:05.040 --> 00:01:09.000
And let's look at two changes that were made

27
00:01:09.000 --> 00:01:10.010
to the application.

28
00:01:10.010 --> 00:01:13.090
One is the Docker file,

29
00:01:13.090 --> 00:01:15.050
so now our Docker file

30
00:01:15.050 --> 00:01:19.060
has a profile setting.

31
00:01:19.060 --> 00:01:22.080
We've added the environment variable

32
00:01:22.080 --> 00:01:27.000
- Dspring.profiles.active=mysql,

33
00:01:27.000 --> 00:01:30.020
so that will be our last entry point command

34
00:01:30.020 --> 00:01:36.000
and we have modified

35
00:01:36.000 --> 00:01:39.070
the mysql.properties file,

36
00:01:39.070 --> 00:01:45.080
so before the URL was localhost:6604

37
00:01:45.080 --> 00:01:49.040
which was the exported port

38
00:01:49.040 --> 00:01:52.030
that the ec-mysql was using

39
00:01:52.030 --> 00:01:55.090
but we are actually going to link into that container,

40
00:01:55.090 --> 00:01:57.060
so we're going to put the container name

41
00:01:57.060 --> 00:02:00.050
and then the internal database port number

42
00:02:00.050 --> 00:02:02.070
which is 3306.

43
00:02:02.070 --> 00:02:04.050
Let's go back to the command line

44
00:02:04.050 --> 00:02:11.060
and let's make sure that our application is built

45
00:02:11.060 --> 00:02:23.090
with these new settings in our properties file.

46
00:02:23.090 --> 00:02:25.060
This will build our jar

47
00:02:25.060 --> 00:02:40.050
and now we're going to actually build the image.

48
00:02:40.050 --> 00:02:45.050
So, our Docker image is built.

49
00:02:45.050 --> 00:02:47.030
And there it is.

50
00:02:47.030 --> 00:02:49.070
And finally, let's create the container

51
00:02:49.070 --> 00:02:53.040
and have it linked to the ec-mysql container.

52
00:02:53.040 --> 00:02:55.010
This is the reason we had to change

53
00:02:55.010 --> 00:02:56.050
the database connection parameters

54
00:02:56.050 --> 00:02:59.010
because we're not accessing the database as localhost

55
00:02:59.010 --> 00:03:01.060
but as within that same container

56
00:03:01.060 --> 00:03:09.080
and we have the command in our README file.

57
00:03:09.080 --> 00:03:12.040
So, this will run

58
00:03:12.040 --> 00:03:17.090
a Docker container called ec-app

59
00:03:17.090 --> 00:03:21.080
and it's going to publish port 8080 as 8080

60
00:03:21.080 --> 00:03:27.060
and we're going to link into the ec-mysql container

61
00:03:27.060 --> 00:03:33.020
and the image what we're referencing is explorecali.

62
00:03:33.020 --> 00:03:39.070
So, let's see how that's going.

63
00:03:39.070 --> 00:03:41.080
And it seems to be starting okay

64
00:03:41.080 --> 00:03:48.010
and now let's actually hit the API.

65
00:03:48.010 --> 00:03:50.000
And there are tours.

