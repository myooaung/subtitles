WEBVTT
1
00:00:00.050 --> 00:00:01.040
- [Instructor] We now know

2
00:00:01.040 --> 00:00:03.070
how to connect our application container

3
00:00:03.070 --> 00:00:06.020
with our explorecali database container.

4
00:00:06.020 --> 00:00:09.060
However, the database connection parameters

5
00:00:09.060 --> 00:00:11.040
and migration scripts

6
00:00:11.040 --> 00:00:13.070
are bundled in the application.

7
00:00:13.070 --> 00:00:16.060
In this video, we will create a new Spring profile

8
00:00:16.060 --> 00:00:19.020
that leverages Spring expression language

9
00:00:19.020 --> 00:00:22.020
and the flyaway location settings.

10
00:00:22.020 --> 00:00:23.090
Before we start, let's make sure

11
00:00:23.090 --> 00:00:25.010
that the previous images

12
00:00:25.010 --> 00:00:27.010
and containers are cleaned out

13
00:00:27.010 --> 00:00:29.010
and we still have the container running

14
00:00:29.010 --> 00:00:40.070
from the previous video, so let's clean that out.

15
00:00:40.070 --> 00:00:43.030
Our database container is still running and that's good.

16
00:00:43.030 --> 00:00:57.060
Now let's remove the image.

17
00:00:57.060 --> 00:00:59.080
And the image is removed.

18
00:00:59.080 --> 00:01:03.040
Now let's look at a new properties file I've created,

19
00:01:03.040 --> 00:01:06.030
application-docker.properties.

20
00:01:06.030 --> 00:01:07.090
It's pretty much identical

21
00:01:07.090 --> 00:01:10.060
to the application.mysql.properties

22
00:01:10.060 --> 00:01:13.040
but we're using Spring expression language

23
00:01:13.040 --> 00:01:18.050
so we can substitute in command line environment variables

24
00:01:18.050 --> 00:01:20.070
into the profile,

25
00:01:20.070 --> 00:01:24.050
so we'll have a value server, a value port,

26
00:01:24.050 --> 00:01:27.020
a value dbuser and a value dbpassword

27
00:01:27.020 --> 00:01:29.070
that would have to exist on the command line

28
00:01:29.070 --> 00:01:31.030
when we run our container

29
00:01:31.030 --> 00:01:34.000
to connect to the database.

30
00:01:34.000 --> 00:01:37.000
And we're actually going to make a copy

31
00:01:37.000 --> 00:01:39.050
of our flyaway migration scripts

32
00:01:39.050 --> 00:01:41.050
into our local file system,

33
00:01:41.050 --> 00:01:43.010
so we need to tell flyaway

34
00:01:43.010 --> 00:01:44.000
where to look for those.

35
00:01:44.000 --> 00:01:46.000
By default it'll look under the class path

36
00:01:46.000 --> 00:01:48.020
and that's why we just put them in resources

37
00:01:48.020 --> 00:01:51.010
but we're going to actually have them copied

38
00:01:51.010 --> 00:01:53.040
into a different place in our local file system

39
00:01:53.040 --> 00:01:57.060
and so, this filesystem:/var/migration,

40
00:01:57.060 --> 00:02:04.010
that will be a folder within the container that's running

41
00:02:04.010 --> 00:02:06.010
and we're going to map that folder

42
00:02:06.010 --> 00:02:09.000
to our external file system on the server

43
00:02:09.000 --> 00:02:16.060
and then let's look at our change to our Dockerfile.

44
00:02:16.060 --> 00:02:18.070
And the only change to the Dockerfile here

45
00:02:18.070 --> 00:02:21.020
is that we are using Docker

46
00:02:21.020 --> 00:02:23.020
as the active profile.

47
00:02:23.020 --> 00:02:36.030
So, let's build the jar for this application.

48
00:02:36.030 --> 00:02:39.020
So, that built our jar

49
00:02:39.020 --> 00:02:50.040
and now let's create the image.

50
00:02:50.040 --> 00:02:56.040
I forgot the dot at the end there.

51
00:02:56.040 --> 00:03:00.030
So, now we have created the image

52
00:03:00.030 --> 00:03:03.050
and now I'm going to on my own file system

53
00:03:03.050 --> 00:03:07.060
this is in the exercise files,

54
00:03:07.060 --> 00:03:10.080
source, main, resources, db,

55
00:03:10.080 --> 00:03:16.040
I'm going to copy this folder

56
00:03:16.040 --> 00:03:20.080
and in my home folder

57
00:03:20.080 --> 00:03:23.040
I've made a copy of the migration scripts,

58
00:03:23.040 --> 00:03:26.080
so this is our very long command line

59
00:03:26.080 --> 00:03:31.040
that we're going to use to launch a container.

60
00:03:31.040 --> 00:03:33.060
So, let me grab that and then I'll speak over

61
00:03:33.060 --> 00:03:37.090
all the options.

62
00:03:37.090 --> 00:03:42.030
So, we will tell Docker to run a new container,

63
00:03:42.030 --> 00:03:45.020
we'll name the container ec-app like we've done before,

64
00:03:45.020 --> 00:03:47.080
we're exposing port 8080 again

65
00:03:47.080 --> 00:03:50.000
and now we have a new option called V

66
00:03:50.000 --> 00:03:52.040
which we're gonna expose a volume,

67
00:03:52.040 --> 00:03:55.050
so we're going to have a tilde

68
00:03:55.050 --> 00:03:56.090
which means on my machine

69
00:03:56.090 --> 00:04:01.010
that will give my home folder /db/migration,

70
00:04:01.010 --> 00:04:02.010
so on this command line,

71
00:04:02.010 --> 00:04:03.070
you have to have the full path,

72
00:04:03.070 --> 00:04:06.050
the tilde is a shortcut to get to my home folder,

73
00:04:06.050 --> 00:04:08.070
that setting might be different on your machine,

74
00:04:08.070 --> 00:04:12.030
you might have to say all the way back to /users/whatever

75
00:04:12.030 --> 00:04:14.010
to get to that folder

76
00:04:14.010 --> 00:04:15.080
or you can set up an environment variable

77
00:04:15.080 --> 00:04:19.030
but this is just a shortcut that I'm using there.

78
00:04:19.030 --> 00:04:24.000
Then we have the server we're going to interact with

79
00:04:24.000 --> 00:04:28.010
is ec-mysql and now we're gonna set up

80
00:04:28.010 --> 00:04:29.060
our environment variables

81
00:04:29.060 --> 00:04:35.030
that will be injected into our Docker properties,

82
00:04:35.030 --> 00:04:36.080
so here we say at the command line,

83
00:04:36.080 --> 00:04:39.010
the server is ec-mysql,

84
00:04:39.010 --> 00:04:42.060
the port is 3306,

85
00:04:42.060 --> 00:04:45.090
the dbuser is cali_user,

86
00:04:45.090 --> 00:04:49.020
the dbpassword is cali_pass

87
00:04:49.020 --> 00:04:55.020
and now we're going to link into the ec-mysql image

88
00:04:55.020 --> 00:04:57.020
and this is from our image

89
00:04:57.020 --> 00:05:01.010
that we created called explorecali.

90
00:05:01.010 --> 00:05:05.060
And let's look at the logs.

91
00:05:05.060 --> 00:05:07.020
And it's still running, it's taking a while,

92
00:05:07.020 --> 00:05:13.090
so we'll do it again and is it finished?

93
00:05:13.090 --> 00:05:16.040
It's finished running.

94
00:05:16.040 --> 00:05:19.030
So, let's send this request again

95
00:05:19.030 --> 00:05:22.060
to see if we get the tours back.

96
00:05:22.060 --> 00:05:24.000
And we do.

