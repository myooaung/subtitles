WEBVTT

1
00:00:00.540 --> 00:00:05.690
hi friends in this video that is discuss about file write operation. 

2
00:00:11.690 --> 00:00:13.240
Before we learn write operation 

3
00:00:13.250 --> 00:00:15.340
we need to know how to create a file 

4
00:00:15.530 --> 00:00:17.390
Then only we can write data to it 

5
00:00:17.400 --> 00:00:20.330
Or we can write data to an existing file also 

6
00:00:20.510 --> 00:00:23.640
So how can we creat a new file? We have already 

7
00:00:23.640 --> 00:00:25.350
learned how to open a file 

8
00:00:25.440 --> 00:00:28.300
We can use the fopen function and the syntax

9
00:00:28.300 --> 00:00:33.030
to open a file in write mode is fopen(file name,w)

10
00:00:33.030 --> 00:00:34.710
 which is a write mode 

11
00:00:35.240 --> 00:00:38.190
If the specified file exists, we can write the data 

12
00:00:38.190 --> 00:00:38.550
to it 

13
00:00:38.630 --> 00:00:41.800
But if the specified file name does not exist, 

14
00:00:41.800 --> 00:00:43.170
it will create a new file 

15
00:00:43.180 --> 00:00:46.610
So let us create a file named "new"  

16
00:00:46.610 --> 00:00:49.040
Here new.txt will be created and buffer is 

17
00:00:49.040 --> 00:00:52.640
attached to that file and the buffer address 1024 will 

18
00:00:52.640 --> 00:00:56.900
be placed here and fopen will assign the file 

19
00:00:56.900 --> 00:01:00.750
structure address 5024 to file pointer fp.

20
00:01:01.140 --> 00:01:04.060
If fopen is unable to create a file it 

21
00:01:04.060 --> 00:01:04.930
will return NULL. 

22
00:01:05.180 --> 00:01:08.280
So if fp not equal to NULL we can  

23
00:01:08.280 --> 00:01:10.860
understand that file creation was successful 

24
00:01:11.010 --> 00:01:14.070
Now let's write the data into the file character by 

25
00:01:14.070 --> 00:01:17.789
character. We can write a character into file using 

26
00:01:17.790 --> 00:01:21.880
the fputc function we have already learned about 

27
00:01:21.890 --> 00:01:25.979
fgetc which returns a character from a file. Here 

28
00:01:25.990 --> 00:01:29.160
fputc will write a character into the file 

29
00:01:29.360 --> 00:01:32.400
We have two arguments for the function fputc

30
00:01:32.410 --> 00:01:35.810
which are the character to be written and the file pointer 

31
00:01:35.810 --> 00:01:39.860
So let's write hello into the file new.txt

32
00:01:39.860 --> 00:01:42.610
Remember that the data will not be 

33
00:01:42.610 --> 00:01:45.210
written directly to the file but it will write the 

34
00:01:45.210 --> 00:01:47.150
data into the attached buffer

35
00:01:47.640 --> 00:01:50.360
And when we close the file the whole content will 

36
00:01:50.360 --> 00:01:52.610
be returned into the file here 

37
00:01:52.700 --> 00:01:55.610
fputc will write 'H' into the buffer and 

38
00:01:55.610 --> 00:01:58.820
moves the current position of pointer. Next 'e' will 

39
00:01:58.820 --> 00:02:03.050
be returned. Then l, l, o will be returned in that order 

40
00:02:03.740 --> 00:02:06.070
The data is not written to the file yet 

41
00:02:06.160 --> 00:02:08.040
it only resides in the buffer 

42
00:02:08.840 --> 00:02:12.380
Now we close the file using the fclose function 

43
00:02:12.500 --> 00:02:15.500
Now it will write the buffer data into the file 

44
00:02:15.550 --> 00:02:19.020
and then removes the buffer from the memory. 

45
00:02:19.020 --> 00:02:22.220
If we use fclose in reading mode it will simply 

46
00:02:22.220 --> 00:02:23.290
remove the buffer 

47
00:02:23.340 --> 00:02:26.160
And if we use fclose in writing mode,

48
00:02:26.160 --> 00:02:28.750
it will write the buffer data into the file and 

49
00:02:28.750 --> 00:02:31.380
then only it will remove the buffer from the memory 

50
00:02:31.550 --> 00:02:34.150
So we must close the file after the use 

51
00:02:34.310 --> 00:02:36.859
So that is how we write characters to a file 

52
00:02:37.000 --> 00:02:39.690
Now let us see how to write a string to 

53
00:02:39.690 --> 00:02:40.310
a file 

54
00:02:40.540 --> 00:02:42.820
For that we have the fputs function 

55
00:02:42.950 --> 00:02:45.700
It has two arguments : the string to be written and 

56
00:02:45.700 --> 00:02:46.760
the file pointer 

57
00:02:46.980 --> 00:02:48.680
Let us see an example programme 

58
00:02:48.690 --> 00:02:51.990
First we create and open a file file.txt

59
00:02:51.990 --> 00:02:52.570


60
00:02:52.680 --> 00:02:55.150
Now we create a string of size 10 

61
00:02:55.410 --> 00:02:58.820
Now we call the function fputs by passing the string 

62
00:02:58.820 --> 00:03:04.460
Hello and file pointer fw. So hello and space 

63
00:03:04.460 --> 00:03:05.800
is written to the buffer 

64
00:03:05.810 --> 00:03:08.600
And now we ask the user to enter the name 

65
00:03:08.790 --> 00:03:12.210
Suppose user enters the name Alan so it is scanned 

66
00:03:12.220 --> 00:03:13.650
and stored to str 

67
00:03:13.660 --> 00:03:16.920
And now we call the function fputs by passing string 

68
00:03:16.920 --> 00:03:20.970
name and file pointer. The current buffer pointer points 

69
00:03:20.970 --> 00:03:24.820
the next position after space so the string is written 

70
00:03:24.820 --> 00:03:25.650
to the buffer 

71
00:03:25.880 --> 00:03:27.150
So now "Hello Alan"

72
00:03:27.150 --> 00:03:30.020
 is in the buffer 

73
00:03:30.940 --> 00:03:35.020
So now Hello Alan is in the buffer and 

74
00:03:35.030 --> 00:03:37.350
is not written to the file yet 

75
00:03:37.540 --> 00:03:40.200
So we close the file and now the data is 

76
00:03:40.200 --> 00:03:43.400
written to file and buffer is removed. At the end 

77
00:03:43.480 --> 00:03:45.040
End of File or EoF 

78
00:03:45.050 --> 00:03:46.400
is added in the file 

79
00:03:46.660 --> 00:03:49.140
Finally the new file looks like this 

80
00:03:49.340 --> 00:03:51.549
So that is how we write data to a file. 

81
00:03:51.840 --> 00:03:55.269
to write characters, use the function fputc and 

82
00:03:55.270 --> 00:03:58.040
to write a string use the function fputs 

83
00:03:58.210 --> 00:03:59.320
In the coming videos 

84
00:03:59.320 --> 00:04:02.030
We will discuss more about file operations 

85
00:04:02.840 --> 00:04:05.120
So that's all and thank you for watching this video 

