WEBVTT

1
00:00:00.240 --> 00:00:03.260
the big Oh notation defines an upper bound of a function 

2
00:00:03.450 --> 00:00:06.090
Let us say our function is f(n) and 

3
00:00:06.090 --> 00:00:09.180
it grows like this when the size of input increases 

4
00:00:09.510 --> 00:00:11.910
then what will be the upper bound of f(n)

5
00:00:12.100 --> 00:00:14.190
We will find some other function 

6
00:00:14.200 --> 00:00:17.230
say g(n) in such a way that c*g(n)

7
00:00:17.230 --> 00:00:20.890
 is always greater than f(n) and for all 

8
00:00:20.890 --> 00:00:23.310
the values of n greater than or equal to 

9
00:00:23.320 --> 00:00:27.250
n0 if we find any such function we can 

10
00:00:27.250 --> 00:00:30.150
say f(n) is O(g(n))

11
00:00:30.590 --> 00:00:33.420
That brings us to the definition of big Oh notation 

12
00:00:33.680 --> 00:00:34.810
the function f(n)

13
00:00:34.820 --> 00:00:38.050
is O(g(n)) if and only 

14
00:00:38.060 --> 00:00:42.590
if their excess positive constancy and and n0 such that 

15
00:00:42.790 --> 00:00:46.050
f(n) is less than or equal to c*g(n)

16
00:00:46.050 --> 00:00:49.310
 for all n greater than or equal to 

17
00:00:49.320 --> 00:00:49.950
n0

18
00:00:50.440 --> 00:00:53.190
Let us take this example if f(n)= 5n+3

19
00:00:53.190 --> 00:00:56.060
 and find its upper bound 

20
00:00:56.060 --> 00:01:00.120
using this definition. let us write the definition here  

21
00:01:00.120 --> 00:01:02.700
f(n) less than or equal to c*g(n)

22
00:01:02.700 --> 00:01:06.500
Here, f(n)= 5n+3 so 

23
00:01:06.500 --> 00:01:10.000
substituted here and we will get f(n)= 5n+3 

24
00:01:10.010 --> 00:01:13.090
less than or equal to c*g(n)

25
00:01:13.090 --> 00:01:16.250
In this equation we have f(n) and we need to find 

26
00:01:16.250 --> 00:01:19.560
the remaining function g(n) and constant values of 

27
00:01:19.560 --> 00:01:20.480
c and

28
00:01:20.480 --> 00:01:20.950
n0

29
00:01:21.540 --> 00:01:24.470
First let us get some value for c*g(n)

30
00:01:24.470 --> 00:01:27.140
in such a way that it will satisfy 

31
00:01:27.140 --> 00:01:29.210
this condition. Can be right 

32
00:01:29.210 --> 00:01:29.650
6n 

33
00:01:29.650 --> 00:01:32.420
 instead of seeing to g(n). Yes we can 

34
00:01:32.420 --> 00:01:36.400
write anything like 10 and 100 but the only condition 

35
00:01:36.400 --> 00:01:39.370
is it should be greater than  5n+3 

36
00:01:39.380 --> 00:01:41.050
for larger values of n

37
00:01:41.600 --> 00:01:44.260
Let us right 6n here and check whether it 

38
00:01:44.260 --> 00:01:46.000
satisfies this condition 

39
00:01:46.290 --> 00:01:49.070
 5n+3 less than or equal 6n

40
00:01:49.330 --> 00:01:52.650
Here The value of C is six and g(n)

41
00:01:52.660 --> 00:01:53.040
is n

42
00:01:53.840 --> 00:01:57.130
Is this relation true for all the values of n. let's 

43
00:01:57.130 --> 00:02:00.260
check it out. If the value of n is one 

44
00:02:00.390 --> 00:02:03.430
it will become five into one plus three less than 

45
00:02:03.430 --> 00:02:06.410
or equal to six into one which is eight less 

46
00:02:06.410 --> 00:02:07.630
than or equal to six 

47
00:02:07.680 --> 00:02:10.640
It's not true. if the value of n is 2 

48
00:02:10.760 --> 00:02:13.990
it will become five into two plus three less than 

49
00:02:13.990 --> 00:02:16.760
or equal to six into two which is  

50
00:02:16.760 --> 00:02:18.170
13 less than or equal to 12 

51
00:02:18.400 --> 00:02:22.000
That is also not true. If the value of n is 3

52
00:02:22.070 --> 00:02:24.740
it will become five into three plus three less 

53
00:02:24.740 --> 00:02:28.220
than or equal to 6 into Three which is 18 less 

54
00:02:28.220 --> 00:02:30.050
than or equal to 18 

55
00:02:30.140 --> 00:02:33.370
And this is true. If the value of n is 4 

56
00:02:33.380 --> 00:02:36.560
it will become 23 less than or equal to 24 

57
00:02:36.570 --> 00:02:37.650
which is true again. 

58
00:02:38.040 --> 00:02:38.870
So till

59
00:02:38.870 --> 00:02:40.050
n is less than 3

60
00:02:40.100 --> 00:02:42.870
The condition is false but when the value of n 

61
00:02:42.870 --> 00:02:45.940
becomes greater than or equal to three the condition is 

62
00:02:45.950 --> 00:02:46.970
always true 

63
00:02:47.210 --> 00:02:50.800
From that what we can says five n plus three is 

64
00:02:50.800 --> 00:02:52.360
less than or equal to six n

65
00:02:52.370 --> 00:02:55.480
 is true for all n greater than or equal 

66
00:02:55.480 --> 00:02:56.050
to three 

67
00:02:56.340 --> 00:02:59.370
Here we have found a positive constant n0 which

68
00:02:59.370 --> 00:02:59.950
is three 

69
00:03:00.940 --> 00:03:03.690
So in the equation we have found the values of 

70
00:03:03.690 --> 00:03:07.690
c, g(n), n0 and it satisfies all 

71
00:03:07.690 --> 00:03:09.670
the conditions of big oh definition 

72
00:03:09.880 --> 00:03:12.990
So we can say that five n plus three is 

73
00:03:12.990 --> 00:03:15.110
big Oh of n here 

74
00:03:15.120 --> 00:03:18.570
The important thing to notice this expression will be true 

75
00:03:18.570 --> 00:03:22.410
for all time functions which are greater than n. For example, 

76
00:03:22.420 --> 00:03:24.450
the following Conditions are true 

77
00:03:24.560 --> 00:03:27.250
Five n plus three is less than or equal to 

78
00:03:27.250 --> 00:03:30.670
six n square; five n plus three is less than 

79
00:03:30.670 --> 00:03:33.760
or equal to 10 n cube; five n plus three 

80
00:03:33.770 --> 00:03:34.240
is less 

81
00:03:34.240 --> 00:03:36.730
than or equal to 2 raised to 2. So we can 

82
00:03:36.730 --> 00:03:40.170
say five n plus three is big Oh of n square 

83
00:03:40.180 --> 00:03:43.050
Big Oh of n cube; Big Oh of 2 raised to n

84
00:03:43.110 --> 00:03:45.840
Yes we can say all these are true if the 

85
00:03:45.840 --> 00:03:48.530
function of upper bounds to n it will be upper 

86
00:03:48.530 --> 00:03:51.470
bound to any time function which is greater than n

87
00:03:51.630 --> 00:03:56.780
saying square; n cube etc. But when writing asymptomatic notation 

88
00:03:56.870 --> 00:04:00.230
We should always take the closest upper bound among all 

89
00:04:00.230 --> 00:04:01.280
these. Here, 

90
00:04:01.280 --> 00:04:03.070
The closest upper bound is n

91
00:04:03.260 --> 00:04:06.570
So we have written as  five n plus tHree is 

92
00:04:06.570 --> 00:04:07.170
big Oh of n

93
00:04:07.180 --> 00:04:10.410
And thats it. That's all about big Oh notation 

94
00:04:10.420 --> 00:04:13.320
And in the next video we will discuss about omega notation

