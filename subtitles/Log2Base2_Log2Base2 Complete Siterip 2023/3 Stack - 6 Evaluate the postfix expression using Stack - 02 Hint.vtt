WEBVTT

1
00:00:00.040 --> 00:00:02.490
So what can we do to evaluate a post fix expression?

2
00:00:02.490 --> 00:00:07.110
 We can create a stack and scan the expression 

3
00:00:07.410 --> 00:00:11.610
and if the scanned element is an operand, push it into 

4
00:00:11.610 --> 00:00:12.150
stack.

5
00:00:12.640 --> 00:00:16.950
So 1 2 5 are pushed into the stack 

6
00:00:17.440 --> 00:00:22.290
And if the scanned element is an operator, pop last two 

7
00:00:22.290 --> 00:00:26.690
elements from the stack and evaluate the expression using the 

8
00:00:26.690 --> 00:00:30.950
operator scanned and then push the result back into the stack

9
00:00:30.950 --> 00:00:31.450


10
00:00:32.040 --> 00:00:36.670
So here the next character scanned is an operator 

11
00:00:36.880 --> 00:00:41.930
So pop two times. So pop five and two and calculate 

12
00:00:41.940 --> 00:00:45.860
5*2 and push the result 10 into the 

13
00:00:45.860 --> 00:00:47.950
stack and continue the process.

14
00:00:48.440 --> 00:00:52.050
So the next element scanned here is again an operator +

15
00:00:52.200 --> 00:00:56.030
 so pop two times from stack 

16
00:00:56.230 --> 00:00:58.450
So ten and one are popped.

17
00:00:58.940 --> 00:01:03.550
Then calculate 10+1 and push the result 11

18
00:01:03.560 --> 00:01:04.450
into the stack 

19
00:01:05.140 --> 00:01:08.510
And the next character in the expression is null character 

20
00:01:08.800 --> 00:01:10.160
so we can stop 

21
00:01:10.170 --> 00:01:12.720
And the value that is in this stack is our 

22
00:01:12.730 --> 00:01:13.750
final result. 

