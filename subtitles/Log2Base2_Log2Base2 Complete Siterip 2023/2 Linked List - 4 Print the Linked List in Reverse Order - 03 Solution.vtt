WEBVTT

1
00:00:00.040 --> 00:00:02.690
This is the implementation of printing reverse of a linked list 

2
00:00:02.690 --> 00:00:03.110
 

3
00:00:03.390 --> 00:00:05.750
We can use recursion to do this task 

4
00:00:06.140 --> 00:00:09.420
We will write this function which will move to next node

5
00:00:09.420 --> 00:00:11.650
till it reaches the last node. 

6
00:00:11.880 --> 00:00:14.830
And once it reaches the last node, it will print 

7
00:00:14.830 --> 00:00:18.230
the value and then go back and print second last node

8
00:00:18.230 --> 00:00:18.550


9
00:00:18.750 --> 00:00:23.560
And so on. So let us write the function print in reverse by passing 

10
00:00:23.560 --> 00:00:27.320
the head of the linked list. Now in the function 

11
00:00:27.330 --> 00:00:30.620
first we need to check if the passed node is null.

12
00:00:30.620 --> 00:00:32.060
So write

13
00:00:32.220 --> 00:00:35.050
if head equal to null, then just return

14
00:00:35.440 --> 00:00:38.180
Otherwise that is, there is one 

15
00:00:38.240 --> 00:00:39.790
or there are more nodes

16
00:00:39.800 --> 00:00:43.290
after this particular node, we need to call the function 

17
00:00:43.290 --> 00:00:47.730
by passing the next node. So write print in reverse of head-next

18
00:00:47.740 --> 00:00:48.400


19
00:00:48.630 --> 00:00:51.590
So the control reaches here and the same thing will 

20
00:00:51.590 --> 00:00:54.270
happen. check if it is null 

21
00:00:54.280 --> 00:00:57.240
And it is not here so call the function by passing 

22
00:00:57.240 --> 00:00:58.150
the next node.

23
00:00:58.740 --> 00:01:01.580
So control is here now and checks if it is 

24
00:01:01.580 --> 00:01:03.400
not it is not so 

25
00:01:03.400 --> 00:01:05.600
This is not the end of the linked list 

26
00:01:05.700 --> 00:01:09.100
So called the function by passing the next node

27
00:01:09.380 --> 00:01:13.090
print in reverse of head next and control reaches here 

28
00:01:13.230 --> 00:01:16.650
and check if it and it is. So we 

29
00:01:16.650 --> 00:01:20.310
have reached the end of the linked list So just return 

30
00:01:20.320 --> 00:01:21.490
to the calling function. 

31
00:01:21.710 --> 00:01:23.380
So we have reached the end. 

32
00:01:23.390 --> 00:01:25.980
Now we go back by printing each node. 

33
00:01:26.230 --> 00:01:30.550
So control reaches here and resumes the execution. The next 

34
00:01:30.550 --> 00:01:34.120
step is to execute is print head data 

35
00:01:34.300 --> 00:01:37.750
So 30 is printed on the screen and this function 

36
00:01:37.750 --> 00:01:38.530
is completed now.

37
00:01:38.530 --> 00:01:43.210
So control reaches here and resumes the execution and 

38
00:01:43.220 --> 00:01:46.850
here this instruction will be executed and 20 will be printed 

39
00:01:47.340 --> 00:01:49.490
Now this function is also completed 

40
00:01:49.500 --> 00:01:54.030
So control reaches back here and execute this last statement 

41
00:01:54.040 --> 00:01:55.210
and prints 10.

42
00:01:55.530 --> 00:01:58.610
And this function is also completed now and we got 

43
00:01:58.610 --> 00:02:01.750
the reverse of the linked list printed on the screen.

