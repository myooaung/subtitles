WEBVTT

1
00:00:00.840 --> 00:00:01.810
Hello friends 

2
00:00:01.820 --> 00:00:05.550
In this video let us have an introduction to algorithms 

3
00:00:06.240 --> 00:00:06.900
so what 

4
00:00:06.900 --> 00:00:12.410
is an algorithm ? an algorithm is a well defined computational procedure 

5
00:00:12.630 --> 00:00:16.800
that takes a set of values as inputs and transforms 

6
00:00:16.800 --> 00:00:18.750
them into the desired output 

7
00:00:19.240 --> 00:00:23.020
For example if we have some numbers as the input 

8
00:00:23.030 --> 00:00:27.010
and we are expecting these numbers in sorted order as 

9
00:00:27.010 --> 00:00:29.010
output so that is all cool 

10
00:00:29.390 --> 00:00:32.330
And to achieve this goal we need to follow some 

11
00:00:32.330 --> 00:00:37.150
set of procedures and this procedure is called an algorithm 

12
00:00:37.740 --> 00:00:41.050
and algorithm may be correct and it may also be 

13
00:00:41.060 --> 00:00:41.540
incorrect 

14
00:00:42.540 --> 00:00:45.710
And algorithm is said to be correct if it produces 

15
00:00:45.710 --> 00:00:50.120
the desired output on every input instance that is in this 

16
00:00:50.120 --> 00:00:50.610
case 

17
00:00:50.780 --> 00:00:53.590
If we give any set of numbers it will be 

18
00:00:53.590 --> 00:00:54.750
sorted correctly 

19
00:00:55.320 --> 00:00:58.960
And if it produces un desired output on any input 

20
00:00:58.960 --> 00:01:02.550
instance it is set to be an incorrect algorithm 

21
00:01:03.040 --> 00:01:07.010
so the algorithm should produce the desired output or every 

22
00:01:07.020 --> 00:01:07.510
input 

23
00:01:07.520 --> 00:01:08.290
Instance 

24
00:01:08.940 --> 00:01:12.590
We can write the algorithm in simple English as step 

25
00:01:12.590 --> 00:01:17.180
by step instructions for using a computer programme and also 

26
00:01:17.320 --> 00:01:20.690
they can be more than one algorithm to solve the 

27
00:01:20.690 --> 00:01:21.550
same problem 

28
00:01:22.040 --> 00:01:25.920
But what is important here is how efficiently it solves 

29
00:01:25.920 --> 00:01:26.650
the problem 

30
00:01:27.140 --> 00:01:31.090
For example here we have an algorithm which takes one 

31
00:01:31.090 --> 00:01:33.710
year time and utilises 100 GB 

32
00:01:33.710 --> 00:01:34.650
of memory 

33
00:01:35.040 --> 00:01:38.800
And there is another algorithm which takes one month time 

34
00:01:38.930 --> 00:01:41.280
and utilises one GB of memory 

35
00:01:41.690 --> 00:01:45.290
And there is another algorithm which takes one day time 

36
00:01:45.340 --> 00:01:49.380
and utilising one MB of memory and another one 

37
00:01:49.380 --> 00:01:53.410
takes one second time and utilises 100 kb of memory 

38
00:01:54.140 --> 00:01:58.910
Although all four algorithms here produced the desired output the 

39
00:01:58.910 --> 00:02:02.850
last one Gives and efficient solution in terms of time 

40
00:02:03.340 --> 00:02:05.050
and memory usage 

41
00:02:05.060 --> 00:02:07.870
So in this case the fourth one is set to 

42
00:02:07.870 --> 00:02:09.650
be an efficient algorithm 

43
00:02:10.440 --> 00:02:14.360
This example will give you a better understanding of why 

44
00:02:14.370 --> 00:02:17.250
efficiency in the algorithm is very important 

45
00:02:18.140 --> 00:02:21.270
So in a day today life we are used Google 

46
00:02:21.270 --> 00:02:25.540
search engine and it takes our query as input and 

47
00:02:25.550 --> 00:02:30.210
it's efficient algorithm producers useful links as an output in 

48
00:02:30.210 --> 00:02:31.550
just milliseconds 

49
00:02:32.140 --> 00:02:35.950
But imagine if the searching algorithm is inefficient 

50
00:02:36.340 --> 00:02:41.130
But what if the searching algorithm is inefficient here Then 

51
00:02:41.350 --> 00:02:44.480
it will utilise a lot of memory to eat search 

52
00:02:44.480 --> 00:02:47.520
query which caused a lot to Google and you will 

53
00:02:47.520 --> 00:02:50.560
also get the search result in a very very long 

54
00:02:50.560 --> 00:02:50.950
time 

55
00:02:51.440 --> 00:02:54.850
So will you used this kind of an application Definitely 

56
00:02:54.850 --> 00:02:55.510
not right 

57
00:02:55.730 --> 00:02:59.200
So it is important to write the correct algorithm but 

58
00:02:59.210 --> 00:03:02.850
it is even more important to write it more efficiently 

59
00:03:03.440 --> 00:03:07.020
So hope you understood the need for algorithms and why 

60
00:03:07.030 --> 00:03:08.670
it should be efficient 

61
00:03:09.090 --> 00:03:09.970
So thats all

62
00:03:09.980 --> 00:03:12.310
And in the next video we will learn how to 

63
00:03:12.310 --> 00:03:14.550
write and analysed algorithms 

