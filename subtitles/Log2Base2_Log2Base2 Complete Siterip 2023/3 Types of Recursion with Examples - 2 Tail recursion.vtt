WEBVTT

1
00:00:00.240 --> 00:00:03.550
in this video let us learn about tail Recursion 

2
00:00:04.040 --> 00:00:07.740
a recursive function is tail recursive then the recursive 

3
00:00:07.750 --> 00:00:11.050
Call is the last thing executed by the function 

4
00:00:11.540 --> 00:00:15.220
See here the recursive Call a fun is placed 

5
00:00:15.230 --> 00:00:18.180
at the tail of the function and this will be 

6
00:00:18.180 --> 00:00:19.870
executed at last 

7
00:00:20.540 --> 00:00:24.080
Let us take an example Programme and understand how tail 

8
00:00:24.080 --> 00:00:25.250
Recursion works 

9
00:00:26.340 --> 00:00:28.920
Let us take a string A B C D and 

10
00:00:28.920 --> 00:00:33.260
print it using tail recursion see here the recursive 

11
00:00:33.270 --> 00:00:36.150
call is placed at the end of the function 

12
00:00:36.740 --> 00:00:41.890
Initially str will point the character a so this code 

13
00:00:41.900 --> 00:00:45.660
will be pushed into the stack it first checks if 

14
00:00:45.660 --> 00:00:50.190
value at str is equal to null character it is not 

15
00:00:50.430 --> 00:00:55.510
so print that character so a is printed and then we have 

16
00:00:55.510 --> 00:01:00.120
the recursive call tail recur of str plus one now 

17
00:01:00.130 --> 00:01:04.000
here also if condition will be checked but it fails 

18
00:01:04.260 --> 00:01:08.160
so B is printed and next is the recursive call with 

19
00:01:08.170 --> 00:01:13.250
argument str plus one So str now points to C 

20
00:01:14.340 --> 00:01:18.400
here also if will fail and C is printed and 

21
00:01:18.400 --> 00:01:21.950
then the tail recursive call will be executed 

22
00:01:22.740 --> 00:01:27.450
So here str points to D Here also if will 

23
00:01:27.450 --> 00:01:31.250
fail and D is printed and next is the recursive call 

24
00:01:31.740 --> 00:01:34.650
And now str will point to the null 

25
00:01:34.650 --> 00:01:35.450
character 

26
00:01:36.240 --> 00:01:40.370
So here if condition will be satisfied and control will 

27
00:01:40.370 --> 00:01:40.950
return 

28
00:01:41.540 --> 00:01:44.750
So this function call is popped from Stack 

29
00:01:45.140 --> 00:01:48.740
And here the recursive call is the last thing executed 

30
00:01:48.750 --> 00:01:49.640
by the function 

31
00:01:49.780 --> 00:01:52.710
So there will be no statement below to execute 

32
00:01:52.780 --> 00:01:56.610
Hence all the recursive calls will be popped out from 

33
00:01:56.610 --> 00:01:58.750
the stack after its execution 

34
00:01:59.540 --> 00:02:01.580
So that's all about tail recursion 

35
00:02:01.800 --> 00:02:04.970
And in the next video we will learn about head 

36
00:02:04.970 --> 00:02:05.450
recursion.

