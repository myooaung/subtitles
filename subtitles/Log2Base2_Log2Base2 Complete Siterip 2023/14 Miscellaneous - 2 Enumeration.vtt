WEBVTT

1
00:00:01.040 --> 00:00:01.760
Hi friends 

1
00:00:01.760 --> 00:00:03.030
In this video we are going to learn about enum in C

2
00:00:10.030 --> 00:00:13.020
So enum stands for enumeration 

3
00:00:13.030 --> 00:00:15.770
And it is a user defined data type. Using 

4
00:00:15.770 --> 00:00:19.020
enum we can assign names to integral Constants and 

5
00:00:19.020 --> 00:00:22.169
we can make the programme easy to read and maintain 

6
00:00:22.180 --> 00:00:25.350
Now this is this syntax. keyword enum followed by 

7
00:00:25.350 --> 00:00:29.040
name or tag and specify the constants within curly braces 

8
00:00:29.050 --> 00:00:29.970
and a semi colon at last.

9
00:00:29.980 --> 00:00:33.980
see an example enum status {OFF,ON}

10
00:00:33.990 --> 00:00:38.440
here the compiler will automatically assign the value zero to OFF 

11
00:00:38.450 --> 00:00:42.280
and 1 to ON. Now let us see how to declare variables 

12
00:00:42.390 --> 00:00:44.440
So we have two methods for that 

13
00:00:44.450 --> 00:00:47.780
One method is that while declaring an enumeration before putting 

14
00:00:47.780 --> 00:00:50.230
a semicolon, just write the variable name.

15
00:00:50.240 --> 00:00:53.300
Another method is that write a separate code like this 

16
00:00:53.310 --> 00:00:56.950
enum name variable name semicolon. Now let us see 

17
00:00:56.950 --> 00:00:57.629
a programme 

18
00:00:57.680 --> 00:01:00.980
We have the main function and inside we are declaring 

19
00:01:00.980 --> 00:01:04.450
an enumeration status with Constants OFF and ON 

20
00:01:04.840 --> 00:01:07.789
Now we print the integral values of OFF and ON 

21
00:01:07.900 --> 00:01:10.550
so it will print OFF equal to zero and  

22
00:01:10.550 --> 00:01:11.350
ON equal to one 

23
00:01:11.840 --> 00:01:14.570
Now let's declare a variable var here 

24
00:01:14.640 --> 00:01:17.830
And assign On to var so 1 will be stored 

25
00:01:17.830 --> 00:01:21.060
in it. now if we print integral value of var 

26
00:01:21.070 --> 00:01:22.750
it will give the value 1 

27
00:01:23.340 --> 00:01:25.360
Now let us see another example 

28
00:01:25.450 --> 00:01:28.140
An enumeration day is declared with values 

29
00:01:28.240 --> 00:01:32.259
Sunday Monday Tuesday Wednesday Thursday Friday and Saturday 

30
00:01:32.550 --> 00:01:38.520
So compiler will automatically give values 0 1 2 3 4 5 6 to these 

31
00:01:38.520 --> 00:01:42.910
constants and in enum we can also explicitly assign 

32
00:01:42.910 --> 00:01:45.840
values example Wednesday equal to 25 

33
00:01:46.140 --> 00:01:49.360
And in that case all the unassigned names will get 

34
00:01:49.360 --> 00:01:52.460
the value as the value of previous name plus one 

35
00:01:52.550 --> 00:01:54.740
So here Thursday will get value 

36
00:01:54.740 --> 00:01:55.559
26 

37
00:01:55.570 --> 00:01:59.539
Friday will get 27 Saturday will get 28 

38
00:02:00.240 --> 00:02:01.310
Now see the code

39
00:02:01.320 --> 00:02:05.960
We have enumeration status with Sunday =1, Monday 

40
00:02:05.970 --> 00:02:09.840
Tuesday Wednesday =10 Thursday Friday and Saturday 

41
00:02:10.170 --> 00:02:13.209
Next we're finding the difference of Saturday and Sunday and 

42
00:02:13.210 --> 00:02:13.780
printing it 

43
00:02:14.640 --> 00:02:18.690
So what will be the value printed? see here Sunday is 

44
00:02:18.690 --> 00:02:22.180
explosively given value 1. so Monday will get the value 

45
00:02:22.190 --> 00:02:24.970
1+1 =2  and Tuesday 

46
00:02:24.970 --> 00:02:26.220
will get the value 3

47
00:02:26.640 --> 00:02:28.160
Now wednesday = 10 

48
00:02:28.170 --> 00:02:30.830
So thursday will be given 11 and Friday will 

49
00:02:30.830 --> 00:02:31.750
be given 12 

50
00:02:31.760 --> 00:02:33.950
And finally Saturday will have 13 

51
00:02:34.250 --> 00:02:37.530
Now we can calculate the difference 13 -1 which 

52
00:02:37.530 --> 00:02:39.690
is equal to 12 and it will be printed 

53
00:02:40.240 --> 00:02:40.720
Now 

54
00:02:40.730 --> 00:02:42.799
What is the difference between a macro and 

55
00:02:42.800 --> 00:02:44.230
an enum? in macro 

56
00:02:44.230 --> 00:02:47.160
We need to assign the values explicitly where as in enum

57
00:02:47.160 --> 00:02:50.350
 the values will be assigned automatically by the compiler 

58
00:02:50.740 --> 00:02:53.040
And in macro we have global scope 

59
00:02:53.050 --> 00:02:56.430
For example here you can see this code here all 

60
00:02:56.430 --> 00:02:59.280
the occurrence of OFF will be replaced with zero and 

61
00:02:59.290 --> 00:03:02.350
enum follow scoping rules and we can redefine the 

62
00:03:02.350 --> 00:03:04.430
enum values based on the situation. So that's all and thankyou for watching this video. 

