WEBVTT

1
00:00:00.940 --> 00:00:03.950
Hi friends in this video let us discuss about 

2
00:00:03.950 --> 00:00:05.690
One dimensional array and pointers

3
00:00:11.690 --> 00:00:13.560
So an array is 

4
00:00:13.560 --> 00:00:16.730
a data structure used to store and access values 

5
00:00:16.740 --> 00:00:21.160
of the same datatype. Arrays are closely associated with 

6
00:00:21.160 --> 00:00:21.850
pointers 

7
00:00:22.240 --> 00:00:26.710
Consider this integer array with five elements 10 20 30 40 

8
00:00:26.710 --> 00:00:29.650
and 50 with 1000 being the base address 

9
00:00:30.140 --> 00:00:33.450
Since this is an integer array, each element takes four 

10
00:00:33.450 --> 00:00:34.450
bytes of memory 

11
00:00:35.040 --> 00:00:37.910
arr will point to the first element of the array 

12
00:00:37.910 --> 00:00:38.700
which is 10. 

13
00:00:39.140 --> 00:00:41.600
Hence arr will have the address of

14
00:00:41.600 --> 00:00:45.960
First element of the array which is 1000. &arr will 

15
00:00:45.960 --> 00:00:47.670
point to the entire array.

16
00:00:47.910 --> 00:00:50.300
Hence &arr will have 

17
00:00:50.300 --> 00:00:53.150
The base address of the array which is again 1000 

18
00:00:54.040 --> 00:00:57.450
arr+1 points to the second element of the array 

19
00:00:58.140 --> 00:01:01.220
because arr points to the first element and 

20
00:01:01.230 --> 00:01:04.509
adding one to arr will move the address of arr 

21
00:01:04.510 --> 00:01:07.330
by four bytes which is the size of the integer 

22
00:01:07.330 --> 00:01:12.150
datatype. Hence arr+1 will have the address 

23
00:01:12.150 --> 00:01:16.410
1004. &arr+1 will point to 

24
00:01:16.410 --> 00:01:20.880
the next array series because &arr points 

25
00:01:20.880 --> 00:01:23.960
to the entire array block and adding one to it 

26
00:01:23.970 --> 00:01:24.920
moves the pointer 

27
00:01:24.920 --> 00:01:27.690
By the size of the entire array which is 

28
00:01:27.690 --> 00:01:29.820
5 * 4 equal to 20 bytes here 

29
00:01:29.910 --> 00:01:33.929
Hence it will have the Value 1020. Now 

30
00:01:33.930 --> 00:01:36.730
To understand this easily consider this example 

31
00:01:36.920 --> 00:01:40.220
So consider this building as an array. Each floor of 

32
00:01:40.220 --> 00:01:42.650
the building represents an element of the array. 

33
00:01:43.040 --> 00:01:46.150
arr will point to the first floor of the building 

34
00:01:46.640 --> 00:01:49.170
arr+1 points to the second floor of

35
00:01:49.170 --> 00:01:52.060
the same building. &arr points to 

36
00:01:52.060 --> 00:01:52.550
the entire 

37
00:01:52.550 --> 00:01:56.060
 building. &arr +1 points to the 

38
00:01:56.060 --> 00:01:57.170
very next building 

39
00:01:57.290 --> 00:02:01.620
Similarly &arr+2 points the next building in 

40
00:02:01.620 --> 00:02:02.350
the series 

41
00:02:03.540 --> 00:02:04.280
So that's all 

42
00:02:04.280 --> 00:02:05.900
And thank you for watching this video.

