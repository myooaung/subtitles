WEBVTT

1
00:00:00.040 --> 00:00:02.240
let us take the number 10 and count 

2
00:00:02.250 --> 00:00:04.750
It set bits first write 

3
00:00:04.750 --> 00:00:08.890
The binary representation of the number ten take number one 

4
00:00:08.900 --> 00:00:09.350
and write 

5
00:00:09.350 --> 00:00:10.950
It's binary representation 

6
00:00:11.440 --> 00:00:14.460
Now if we do bitwise and on the number 

7
00:00:14.460 --> 00:00:17.930
10 and one If the right most bit  is one 

8
00:00:18.120 --> 00:00:19.450
the result will be one 

9
00:00:19.840 --> 00:00:22.820
If the right most bit zero then the output will 

10
00:00:22.820 --> 00:00:23.450
be zero 

11
00:00:24.040 --> 00:00:26.680
If the result is one we need to increment the 

12
00:00:26.680 --> 00:00:29.730
set bit  count and do the same operation for the 

13
00:00:29.730 --> 00:00:33.220
next right Most bit and so on here 

14
00:00:33.230 --> 00:00:35.060
The right most bit is zero 

15
00:00:35.200 --> 00:00:38.290
So if we do bitwise and the output will 

16
00:00:38.290 --> 00:00:41.790
be zero so we don't need to increment this set 

17
00:00:41.800 --> 00:00:42.650
bit  count 

18
00:00:42.940 --> 00:00:45.800
Now we need to do the same operation for the 

19
00:00:45.800 --> 00:00:47.250
second right most bit 

20
00:00:47.540 --> 00:00:50.190
And how can we do that Either we can left 

21
00:00:50.190 --> 00:00:53.550
shift the number by one position and do the operation 

22
00:00:53.560 --> 00:00:56.630
Or we can right shift the number 10 by one 

23
00:00:56.630 --> 00:00:58.950
position and do the same operation 

24
00:00:59.340 --> 00:01:02.680
So here we can right shifted number 10 by one 

25
00:01:02.680 --> 00:01:03.350
position 

26
00:01:03.740 --> 00:01:06.660
Now we can see that the second right most bit  

27
00:01:06.660 --> 00:01:09.930
shifted one position to right and it becomes the right 

28
00:01:09.940 --> 00:01:10.650
Most bit 

29
00:01:11.040 --> 00:01:14.390
Now if we do bitwise and operation the result 

30
00:01:14.390 --> 00:01:17.160
will be one as both the bits are one 

31
00:01:17.420 --> 00:01:20.830
So increments set bit  count similarly right 

32
00:01:20.830 --> 00:01:23.850
Shift the given number and do the same operation until 

33
00:01:23.850 --> 00:01:27.800
the number become zero and finally returned the set bit  

34
00:01:27.800 --> 00:01:28.350
count.

