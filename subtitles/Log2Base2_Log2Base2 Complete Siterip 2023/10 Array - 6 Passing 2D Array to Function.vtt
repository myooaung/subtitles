WEBVTT

1
00:00:00.640 --> 00:00:01.290
Hi friends 

2
00:00:01.300 --> 00:00:04.010
In this video we're going to discuss about passing  

3
00:00:04.010 --> 00:00:05.460
2D array into a function. 

4
00:00:12.740 --> 00:00:16.050
So consider a programme which passes 2D array elements into 

5
00:00:16.050 --> 00:00:16.729
a function. 

6
00:00:16.920 --> 00:00:20.240
First we defined row as 2 and col as 2 

7
00:00:20.250 --> 00:00:22.900
now in the main function we are declaring an integer

8
00:00:22.900 --> 00:00:27.650
two dimensional array arr[row][col] with elements 10 20 30 

9
00:00:27.660 --> 00:00:28.290
and 40 

10
00:00:29.240 --> 00:00:32.660
Now we declare integer variables i and j now in 

11
00:00:32.660 --> 00:00:35.630
a nested for loop we are calling the function 

12
00:00:35.640 --> 00:00:37.480
fun(array[j])

13
00:00:37.490 --> 00:00:41.000
So in each iteration the arry element will be passed to 

14
00:00:41.000 --> 00:00:41.910
the function fun

15
00:00:41.910 --> 00:00:44.370
 so in the first iteration of outer for loop

16
00:00:45.740 --> 00:00:48.410
and first iteration of inner for loop we are calling 

17
00:00:48.410 --> 00:00:51.940
the function by passing arr[0][0] which is 10 

18
00:00:51.950 --> 00:00:53.640
and it will be printed in the function 

19
00:00:54.340 --> 00:00:56.910
In the second iteration of inner for loop we are 

20
00:00:56.910 --> 00:01:00.989
calling the function by passing arr[0][1] which is 20 

21
00:01:01.000 --> 00:01:03.000
and it will be printed in the function now  

22
00:01:03.000 --> 00:01:05.460
In the third iteration inner loop condition fails 

23
00:01:05.470 --> 00:01:08.410
So in the second iteration of outer for loop and 

24
00:01:08.410 --> 00:01:12.030
first iteration of inner for loop we are calling the 

25
00:01:12.030 --> 00:01:15.980
function by passing arr[1][0] which is 30 and it 

26
00:01:15.980 --> 00:01:18.700
will be printed in the function and in the second 

27
00:01:18.700 --> 00:01:21.800
iteration of inner for loop we are calling the function 

28
00:01:21.800 --> 00:01:25.270
by passing arr[1][1] which is 40 and it will 

29
00:01:25.270 --> 00:01:26.530
be printed in the function 

30
00:01:26.540 --> 00:01:30.490
Now both loop condition fails and control comes out and 

31
00:01:30.490 --> 00:01:31.260
programme return 

32
00:01:31.260 --> 00:01:31.780
Zero 

33
00:01:31.960 --> 00:01:34.869
Now let us see what happens if we pass entire 2D 

34
00:01:34.880 --> 00:01:37.720
array to a function so consider the programme with 

35
00:01:37.730 --> 00:01:40.350
main function and the user defined function fun

36
00:01:40.440 --> 00:01:44.539
First we create the array with elements 10 20 30 and 40 

37
00:01:44.810 --> 00:01:47.700
and we are calling the function fun now 

38
00:01:47.710 --> 00:01:49.760
here we are passing the name of the array 

39
00:01:49.760 --> 00:01:51.869
So the address of first Element is passed to the 

40
00:01:51.870 --> 00:01:52.390
function 

41
00:01:52.390 --> 00:01:54.940
Remember that the entire elements will not be passed to 

42
00:01:54.940 --> 00:01:55.410
the array

43
00:01:55.420 --> 00:01:59.180
So here 1024 is past to the function here 

44
00:01:59.190 --> 00:02:02.160
in the function parameter the first dimension of array is

45
00:02:02.160 --> 00:02:02.649
optional 

46
00:02:02.650 --> 00:02:05.850
But the second dimension must be specified now in a 

47
00:02:05.850 --> 00:02:06.520
for loop we are

48
00:02:06.520 --> 00:02:09.990
printing each element in the first iteration 10 is printed in 

49
00:02:09.990 --> 00:02:13.390
the next iteration 20 is printed in the next iteration 

50
00:02:13.390 --> 00:02:17.250
30 is printed and finally 40 will be printed now control 

51
00:02:17.250 --> 00:02:19.190
returns to Main and return zero 

52
00:02:19.450 --> 00:02:21.950
Now what if we had an assignment statement like this 

53
00:02:21.950 --> 00:02:26.090
here? Array[i][j] =100 inside the for loop

54
00:02:26.440 --> 00:02:29.680
Then in each iteration the element is set to hundred

55
00:02:29.680 --> 00:02:31.550
after control comes out of for

56
00:02:31.550 --> 00:02:33.380
Loop every element is set to 100.

57
00:02:33.390 --> 00:02:35.880
So it is important that since we are passing the 

58
00:02:35.880 --> 00:02:39.270
reference to the function if we modify the array elements 

59
00:02:39.270 --> 00:02:41.650
it will change the actual value of the array

60
00:02:43.440 --> 00:02:45.730
So that's all and thank you for watching this video 

