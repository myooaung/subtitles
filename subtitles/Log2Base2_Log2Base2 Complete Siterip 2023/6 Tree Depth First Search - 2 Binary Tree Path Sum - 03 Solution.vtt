WEBVTT

1
00:00:00.000 --> 00:00:03.490
So let us write a function has path which takes in 

2
00:00:03.490 --> 00:00:06.610
the root of the tree and the expected sum value 

3
00:00:06.620 --> 00:00:09.610
and returns an integer that is the result of checking 

4
00:00:09.900 --> 00:00:13.360
So first we need to subtract the current node value 

5
00:00:13.360 --> 00:00:17.300
from the given sum. So write int new sum equal 

6
00:00:17.300 --> 00:00:21.480
to sum-root->data. We need to recursively 

7
00:00:21.480 --> 00:00:24.650
do this process to left and right sub tree 

8
00:00:24.660 --> 00:00:25.440
with the new sum.

9
00:00:25.440 --> 00:00:29.530
If any path either in left sub tree or in right sub tree

10
00:00:29.530 --> 00:00:33.010
 has a path with given sum,

11
00:00:33.010 --> 00:00:37.420
we can return true. So write return hasPath(root-left) 

12
00:00:37.420 --> 00:00:41.810
or hasPath(root-right). And when 

13
00:00:41.810 --> 00:00:45.070
the traversal reaches null, which means we have come 

14
00:00:45.070 --> 00:00:47.910
to the end of a path, we need to check

15
00:00:48.040 --> 00:00:50.550
whether the sum value is equal to zero 

16
00:00:51.030 --> 00:00:54.430
If it is zero, we can return true otherwise we 

17
00:00:54.430 --> 00:00:57.360
can return false. So write the base case 

18
00:00:57.640 --> 00:01:01.290
If root equal to null, return sum equal to zero 

19
00:01:01.480 --> 00:01:04.620
If the sum value is zero it will return one otherwise it will return 0. And that's it.

