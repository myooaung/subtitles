WEBVTT

1
00:00:00.140 --> 00:00:04.480
So let us see the implementation. First in main, let

2
00:00:04.480 --> 00:00:06.650
us declare an integer array

3
00:00:06.650 --> 00:00:10.260
integer variable size, result and i. Now get the 

4
00:00:10.260 --> 00:00:12.920
size of the array from user and store it 

5
00:00:12.920 --> 00:00:13.650
in size. 

6
00:00:14.140 --> 00:00:15.900
Now read the elements of the array. 

7
00:00:16.230 --> 00:00:18.970
We can do that using a simple for loop.

8
00:00:18.970 --> 00:00:19.940
now the array is read.

9
00:00:20.390 --> 00:00:23.340
And the next step is to do bitwise XOR 

10
00:00:23.350 --> 00:00:26.890
on all the elements of the array one after the other 

11
00:00:27.170 --> 00:00:30.850
so first store the first element of array in variable result 

12
00:00:31.140 --> 00:00:34.400
Now we can use a for loop to continuously  

13
00:00:34.400 --> 00:00:37.250
XOR result and next element of the array 

14
00:00:37.640 --> 00:00:41.720
So write for i equal to one, i less than size 

15
00:00:41.730 --> 00:00:45.590
i plus plus and in each iteration, store the result 

16
00:00:45.590 --> 00:00:49.950
of XOR operation in variable result and then do  

17
00:00:49.950 --> 00:00:54.060
XOR on result and the next element. Do result equal 

18
00:00:54.060 --> 00:00:57.150
to result XOR array[i]

19
00:00:57.740 --> 00:01:01.330
So by the functionality of XOR, the elements that 

20
00:01:01.340 --> 00:01:04.640
occur even number of times will cancel out and the 

21
00:01:04.650 --> 00:01:08.890
odd occurring element will be left in variable result. So we can print that result. 

