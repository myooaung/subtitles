WEBVTT

1
00:00:00.840 --> 00:00:01.560
Hi friends 

2
00:00:01.570 --> 00:00:03.719
In this video we're going to learn about the C 

3
00:00:03.720 --> 00:00:04.630
pre processor 

4
00:00:10.340 --> 00:00:15.350
So the pre-processor is actually a text processing tool or we can call it 

5
00:00:15.360 --> 00:00:17.250
a text substitution tool. All

6
00:00:17.250 --> 00:00:21.000
Processing directives will begin with a # symbol. It has the 

7
00:00:21.000 --> 00:00:24.550
name because, it pre processes the programme before it is 

8
00:00:24.550 --> 00:00:25.790
actually compiled 

9
00:00:26.120 --> 00:00:29.150
The C pre-processor is used automatically by the C 

10
00:00:29.150 --> 00:00:32.640
compiler to transform the programme before compilation 

11
00:00:32.850 --> 00:00:36.400
So it performs a series of textual transformations on its 

12
00:00:36.400 --> 00:00:39.460
input and after that it will return the pure C code

13
00:00:39.460 --> 00:00:40.400
to the compiler 

14
00:00:40.840 --> 00:00:43.070
Then it is compiled by the compiler 

15
00:00:43.360 --> 00:00:45.470
Now let us see some common pre-processor 

16
00:00:45.470 --> 00:00:47.500
tasks. that is what are the things that are 

17
00:00:47.500 --> 00:00:49.769
actually done in this pre processing stage 

18
00:00:49.780 --> 00:00:51.780
One task is file inclusion 

19
00:00:51.840 --> 00:00:54.470
So if this programme is the input to the pre

20
00:00:54.470 --> 00:00:57.870
processor the first line is #include stdio.h 

21
00:00:57.870 --> 00:01:01.010
and we can have file inclusion in two 

22
00:01:01.010 --> 00:01:01.550
ways 

23
00:01:01.540 --> 00:01:05.180
If you have this variant #include file in angle 

24
00:01:05.180 --> 00:01:05.660
braces 

25
00:01:05.670 --> 00:01:07.970
It is used for system header files and it 

26
00:01:07.970 --> 00:01:11.179
searches for a file named "file" in a standard list 

27
00:01:11.180 --> 00:01:12.449
of system directories 

28
00:01:12.450 --> 00:01:15.390
And if you have this variant #include file  without 

29
00:01:15.400 --> 00:01:18.720
any angle braces it is used for own header files 

30
00:01:18.720 --> 00:01:19.310
Inclusion 

31
00:01:20.990 --> 00:01:23.710
This command would look for the file in the current 

32
00:01:23.710 --> 00:01:26.770
directory where the source file is stored as well as the 

33
00:01:26.770 --> 00:01:29.040
standard list of system directories 

34
00:01:30.540 --> 00:01:33.980
So if the file name is specified within angle braces

35
00:01:33.980 --> 00:01:36.280
it is pre-defined and if it is not 

36
00:01:36.290 --> 00:01:39.440
then it is user defined and the pre processor finds 

37
00:01:39.440 --> 00:01:42.400
the file and replaces the #include stdio.h

38
00:01:42.400 --> 00:01:47.330
statement with this actual file. now another task of 

39
00:01:47.330 --> 00:01:49.460
pre processor is macro expansion 

40
00:01:49.470 --> 00:01:53.060
Here we have #define SIZE 5 so the pre 

41
00:01:53.060 --> 00:01:56.800
processor will replace all occurrences of SIZE by 5.

42
00:01:56.810 --> 00:02:00.250
and another task is it will remove the comments from 

43
00:02:00.250 --> 00:02:00.940
the programme 

44
00:02:00.980 --> 00:02:04.550
All C comments are replaced with a single space and 

45
00:02:04.550 --> 00:02:08.010
finally the pre processed pure C code will be sent to 

46
00:02:08.010 --> 00:02:10.550
the compiler for the actual compilation 

47
00:02:10.640 --> 00:02:13.270
So these are some of the common pre processor tasks 

48
00:02:13.280 --> 00:02:15.790
and we will be discussing more about pre processor in the coming lessons. So that's all and thank you for watching this video.

