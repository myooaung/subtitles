WEBVTT

1
00:00:00.740 --> 00:00:01.400
Hi friends 

1
00:00:01.400 --> 00:00:03.210
In this video we are going to learn 

2
00:00:03.210 --> 00:00:05.080
the scanf function in C programming 

3
00:00:11.250 --> 00:00:14.190
So in many situations the program will need to take data 

4
00:00:14.200 --> 00:00:16.470
from the user as a very simple example 

5
00:00:16.470 --> 00:00:19.070
Let's say we have a calculator programme and if you 

6
00:00:19.070 --> 00:00:22.070
want to find the sum or difference or product etc.

8
00:00:22.070 --> 00:00:26.310
You must provide the data to the program. ie., if you 

9
00:00:26.310 --> 00:00:29.550
you want to find 10 + 20 then you must give 

10
00:00:29.560 --> 00:00:32.519
10 and 20 to the programme for the calculation and 

11
00:00:32.520 --> 00:00:34.970
when the C programme needs to get input from the 

12
00:00:34.970 --> 00:00:40.050
user we should use scanf function now 

13
00:00:40.060 --> 00:00:42.420
This is the syntax of scanf function and we 

14
00:00:42.420 --> 00:00:45.000
need to specify the format that is the data type 

15
00:00:45.000 --> 00:00:46.620
of the data to be received 

16
00:00:47.340 --> 00:00:50.069
We call it the format specifier and the format specifier

17
00:00:50.070 --> 00:00:53.280
must be enclosed in double quotes and after that put 

18
00:00:53.280 --> 00:00:56.419
a comma and specify the address of variable where we 

19
00:00:56.420 --> 00:00:59.040
want our data to be stored and at the end 

20
00:00:59.050 --> 00:01:02.510
add a Semi Colon and the Function scanf is 

21
00:01:02.510 --> 00:01:03.510
a part of the header file  

22
00:01:03.510 --> 00:01:04.429
stdio.h

23
00:01:04.440 --> 00:01:08.070
So whenever you want to use scanf function 

24
00:01:08.340 --> 00:01:10.090
You must include stdio.h

25
00:01:10.100 --> 00:01:10.950


26
00:01:10.950 --> 00:01:11.710
header file

27
00:01:13.340 --> 00:01:15.940
Now let us discuss about the address of a variable 

28
00:01:15.950 --> 00:01:18.730
So we want to specify the address in a scanf

29
00:01:18.730 --> 00:01:19.360
function 

30
00:01:19.420 --> 00:01:22.240
So how to get that address of the variable? 

31
00:01:22.240 --> 00:01:23.250
So see this example 

32
00:01:23.250 --> 00:01:25.789
So when we declare a variable like this we have 

33
00:01:25.800 --> 00:01:27.110
int var = 10

34
00:01:28.340 --> 00:01:31.210
So an integer variable var will be created at some 

35
00:01:31.220 --> 00:01:34.550
address and value here will be 10 since we have initialised 

36
00:01:34.550 --> 00:01:34.759
it 

37
00:01:35.140 --> 00:01:38.470
So this 22f34e is where this variable 

38
00:01:38.470 --> 00:01:40.780
is created so that will be its address 

39
00:01:40.780 --> 00:01:44.080
And we can always access the address using &

40
00:01:44.080 --> 00:01:44.850
operator 

41
00:01:44.930 --> 00:01:48.030
So when we write var it will return 10 and when you write

42
00:01:48.040 --> 00:01:51.590
&var It will return 22f34e which 

43
00:01:51.590 --> 00:01:57.320
is its address. Now let us see a programme to print values 

44
00:01:57.320 --> 00:02:00.230
of var and &var. So first 

45
00:02:00.230 --> 00:02:03.330
We're declaring var initialized to 10 and now we 

46
00:02:03.330 --> 00:02:07.460
print var using print function and it will be printing 10

47
00:02:07.460 --> 00:02:07.759


48
00:02:07.770 --> 00:02:10.270
And now we are printing the value of &var

49
00:02:10.280 --> 00:02:13.080
and %x used to print the address in 

50
00:02:13.080 --> 00:02:16.550
hexa decimal format and it will be printing the address 

51
00:02:16.550 --> 00:02:19.120
of var which is 22f34e

52
00:02:20.140 --> 00:02:22.900
So when you're using scanf you have to specify 

53
00:02:22.900 --> 00:02:25.769
the address of variable and not the name of variable 

54
00:02:27.040 --> 00:02:29.070
Now let us see an example program

55
00:02:29.070 --> 00:02:31.740
So we have the main function and we declare age 

56
00:02:31.750 --> 00:02:36.000
So an integer variable age is created at address 1024 and 

57
00:02:36.000 --> 00:02:39.239
next we have another declaration so a floating point variable 

58
00:02:39.240 --> 00:02:43.730
weight is created at address 2024 & now we asked the 

59
00:02:43.730 --> 00:02:46.730
user to provide the values for age and weight using 

60
00:02:46.730 --> 00:02:49.440
printf function and now we want to read the data 

61
00:02:49.630 --> 00:02:53.100
So remember the syntax of scanf function first is write

62
00:02:53.100 --> 00:02:57.100
scanf and inside parenthesis the format specifier enclosed in

63
00:02:57.100 --> 00:03:01.100
double quotes and a comma and the address of variable 

64
00:03:02.040 --> 00:03:04.859
We are going to read 2 data one is integer

65
00:03:04.860 --> 00:03:08.490
and next is floating point So %d and %f 

66
00:03:09.130 --> 00:03:11.510
And now we want to store the first value to 

67
00:03:11.510 --> 00:03:12.590
variable age 

68
00:03:12.600 --> 00:03:14.940
So it's address &age 

69
00:03:15.030 --> 00:03:17.869
And for the second &weight. Now it is read

70
00:03:17.870 --> 00:03:20.560
 by the programme and stored to these variables 

71
00:03:20.560 --> 00:03:24.250
Now let us print the age and weight and the 

72
00:03:24.250 --> 00:03:29.180
result will be 10 and 20.000 Now let us discuss 

73
00:03:29.180 --> 00:03:31.600
about the return value of scanf, it returns the 

74
00:03:31.600 --> 00:03:35.079
number of items which were successfully read and here the 

75
00:03:35.080 --> 00:03:39.410
program read two items so here the return value will 

76
00:03:39.410 --> 00:03:40.000
be 2

77
00:03:41.640 --> 00:03:43.930
So that's all and thank you for watching this video 

