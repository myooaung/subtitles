WEBVTT

1
00:00:00.340 --> 00:00:03.410
as we know we will be given with this sorted rotated 

2
00:00:03.420 --> 00:00:03.850
array 

3
00:00:04.240 --> 00:00:07.150
Thus it will have two sorted sub arrays 

4
00:00:07.740 --> 00:00:10.410
And the pivot element or the smallest element in 

5
00:00:10.410 --> 00:00:13.440
the array will be the first element of the second sub 

6
00:00:13.440 --> 00:00:17.200
array if you see here pivot element will have 

7
00:00:17.200 --> 00:00:18.770
a bigger number before it 

8
00:00:19.200 --> 00:00:21.980
With this fact we can figure out the pivot element 

9
00:00:21.990 --> 00:00:22.550
easily 

10
00:00:23.490 --> 00:00:27.420
Let's have two variable start and end in each iteration 

11
00:00:27.490 --> 00:00:30.860
First we shall find the mid element and check whether 

12
00:00:30.860 --> 00:00:32.950
we have a pivot element next to it 

13
00:00:33.340 --> 00:00:36.340
This we can do it by comparing Element at array 

14
00:00:36.340 --> 00:00:39.630
of mid an array of mid plus One here start is 

15
00:00:39.630 --> 00:00:43.520
zero and end is six thus mid will be zero plus six 

16
00:00:43.520 --> 00:00:44.630
Divided by two 

17
00:00:44.640 --> 00:00:48.220
that's three an array of mid is 20 and 20 

18
00:00:48.230 --> 00:00:50.300
is not greater than its next element 

19
00:00:50.300 --> 00:00:50.950
25 

20
00:00:51.640 --> 00:00:52.850
Thus 25 

21
00:00:52.850 --> 00:00:54.350
is not a peak element 

22
00:00:54.840 --> 00:00:57.050
Now we have to find out which of the two 

23
00:00:57.050 --> 00:00:59.250
sub arrays hold our pivot element 

24
00:00:59.940 --> 00:01:02.620
Let us take this sub array from start to mid 

25
00:01:02.850 --> 00:01:06.110
which holds the pivot element here 

26
00:01:06.160 --> 00:01:09.450
The first element 60 is greater than the last element 

27
00:01:09.450 --> 00:01:14.040
20 this half is not in sorted order whereas the 

28
00:01:14.050 --> 00:01:16.750
other sub array from mid to end is sorted 

29
00:01:17.340 --> 00:01:20.290
With this it is clear that the sub array which 

30
00:01:20.290 --> 00:01:23.050
holds the pivot element will not be in sorted order 

31
00:01:23.640 --> 00:01:26.880
Thus the larger case if array of start greater than 

32
00:01:26.890 --> 00:01:29.750
array of mid the first half it's not sorted 

33
00:01:30.240 --> 00:01:33.570
So adjust end to mid else check if array 

34
00:01:33.570 --> 00:01:37.300
of mid is greater than an array of end If this returns 

35
00:01:37.300 --> 00:01:41.000
true then the second half is not sorted and so 

36
00:01:41.160 --> 00:01:42.550
adjust start to mid 

37
00:01:43.040 --> 00:01:47.000
Coming back to example in this iteration array of start is 

38
00:01:47.000 --> 00:01:49.050
greater than an array of mid so let us 

39
00:01:49.050 --> 00:01:51.990
adjust end to mid and continue the search in 

40
00:01:51.990 --> 00:01:55.720
this sub array in the next iteration start is zero and 

41
00:01:55.730 --> 00:01:56.550
end is three 

42
00:01:56.940 --> 00:02:00.150
Thus mid will be one an array of mid is 70 

43
00:02:00.540 --> 00:02:02.300
check if array of mid is greater 

44
00:02:02.300 --> 00:02:05.480
An array of mid plus 1 70 is not greater than 

45
00:02:05.480 --> 00:02:06.250
 80 

46
00:02:06.640 --> 00:02:09.560
Next we will check if the first half of the 

47
00:02:09.570 --> 00:02:15.210
array is unsorted here array starts 60 is not greater than 

48
00:02:15.220 --> 00:02:16.560
array of mid 70 

49
00:02:16.680 --> 00:02:19.970
Whereas array of mid 70 is greater than array of 

50
00:02:19.980 --> 00:02:20.910
end 20 

51
00:02:20.920 --> 00:02:24.160
That's the second half is unsorted here Hence we can 

52
00:02:24.160 --> 00:02:27.740
point start to mid Now start is one and end is three 

53
00:02:28.040 --> 00:02:31.120
mid will be two an array of Mid is 80 compare 

54
00:02:31.130 --> 00:02:34.200
array of mid an array of mid plus one here 

55
00:02:34.210 --> 00:02:35.830
eighties greater than 20 

56
00:02:36.020 --> 00:02:38.630
Thus we have identified the pivot element which is 

57
00:02:38.630 --> 00:02:40.850
20 and is present index three. 

