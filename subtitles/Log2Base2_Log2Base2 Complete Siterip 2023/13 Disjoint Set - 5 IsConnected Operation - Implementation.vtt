WEBVTT

1
00:00:00.040 --> 00:00:03.080
in this video let us learn how to implement the 

2
00:00:03.090 --> 00:00:06.610
isconnected operation as we discussed earlier 

3
00:00:06.880 --> 00:00:10.290
The is connected function will tell whether two nodes are 

4
00:00:10.290 --> 00:00:11.550
connected or not 

5
00:00:12.040 --> 00:00:14.560
So how to check Whether two nodes are connected or 

6
00:00:14.560 --> 00:00:16.670
not it is very simple 

7
00:00:16.900 --> 00:00:19.710
If both the node has the same parent they are 

8
00:00:19.710 --> 00:00:21.080
connected to each other 

9
00:00:21.450 --> 00:00:24.290
If the parents are different they are not connected to 

10
00:00:24.290 --> 00:00:24.950
each other 

11
00:00:25.640 --> 00:00:28.740
Let us take the previously created disjoint set and 

12
00:00:28.740 --> 00:00:30.850
performed the isConnected operation 

13
00:00:31.540 --> 00:00:35.110
Now let us check whether the Element seven and nine 

14
00:00:35.120 --> 00:00:36.450
are connected or not 

15
00:00:36.940 --> 00:00:39.450
So is connected of seven comma nine 

16
00:00:40.040 --> 00:00:42.700
First let's find the parent of elements 

17
00:00:42.700 --> 00:00:43.150
Seven 

18
00:00:43.540 --> 00:00:45.560
So go to index seven and check 

19
00:00:45.560 --> 00:00:46.350
Its value 

20
00:00:46.740 --> 00:00:49.840
It has postive value four which means it is 

21
00:00:49.840 --> 00:00:52.680
not a parent node and it is connected with Element 

22
00:00:52.680 --> 00:00:56.160
four so go to index four and check its value 

23
00:00:56.490 --> 00:00:59.870
It has negative value minus six which means it is 

24
00:00:59.870 --> 00:01:00.750
a parent node 

25
00:01:01.140 --> 00:01:03.750
so parent of Elements seven is full 

26
00:01:04.440 --> 00:01:07.250
Now let's find the parent of Element nine 

27
00:01:07.840 --> 00:01:11.750
At index nine we have negative value minus one so 

28
00:01:11.750 --> 00:01:15.430
Element nine itself is a parent node so parent of 

29
00:01:15.440 --> 00:01:16.320
Element nine 

30
00:01:16.330 --> 00:01:18.220
is nine here 

31
00:01:18.330 --> 00:01:21.920
Parent node of Elements seven is four and parent node 

32
00:01:21.920 --> 00:01:22.500
of element 

33
00:01:22.500 --> 00:01:25.820
9 is nine and they are different so we can 

34
00:01:25.820 --> 00:01:29.240
say elements seven and nine are not connected to each 

35
00:01:29.240 --> 00:01:29.650
other 

36
00:01:30.040 --> 00:01:32.570
Now let us take one more example 

37
00:01:32.820 --> 00:01:35.820
Let us check whether the elements two and seven are 

38
00:01:35.820 --> 00:01:39.390
connected or not so we have is connected of two 

39
00:01:39.400 --> 00:01:40.080
and seven 

40
00:01:40.640 --> 00:01:44.750
First let's find the parent of Element two at index 

41
00:01:44.750 --> 00:01:46.680
two we have positive value 

42
00:01:46.690 --> 00:01:47.160
Eight 

43
00:01:47.430 --> 00:01:49.060
So it is not a parent node 

44
00:01:49.070 --> 00:01:52.230
So go to index eight and check its value at 

45
00:01:52.240 --> 00:01:53.110
index eight 

46
00:01:53.200 --> 00:01:55.010
We also have positive value 

47
00:01:55.010 --> 00:01:55.490
Three 

48
00:01:55.630 --> 00:01:57.710
So it is also not a parent node 

49
00:01:58.050 --> 00:02:01.020
So go to index three and check its value it 

50
00:02:01.020 --> 00:02:02.220
has valued four 

51
00:02:02.320 --> 00:02:04.340
So it is also not a parent node 

52
00:02:04.690 --> 00:02:07.310
goto index four and check its value 

53
00:02:07.560 --> 00:02:09.350
It has value minus six 

54
00:02:09.600 --> 00:02:11.470
Since it has a negative value 

55
00:02:11.480 --> 00:02:12.650
It is a parent node 

56
00:02:12.940 --> 00:02:15.750
So the parent node of Element two is four 

57
00:02:16.440 --> 00:02:19.450
Now let us find the parent node of elements seven 

58
00:02:19.840 --> 00:02:23.460
At index seven we have the positive number four so 

59
00:02:23.460 --> 00:02:25.690
go to index four and check its value 

60
00:02:25.920 --> 00:02:28.210
It has negative value minus six 

61
00:02:28.430 --> 00:02:29.850
So it is a parent node 

62
00:02:30.120 --> 00:02:33.860
So the parent node of elements seven is four here 

63
00:02:33.870 --> 00:02:36.930
Both the elements has the same parent so we can 

64
00:02:36.930 --> 00:02:39.320
say that they are connected to each other 

65
00:02:39.670 --> 00:02:42.480
That's it the larger case very simple 

66
00:02:42.550 --> 00:02:44.830
Find the parent node of each element 

67
00:02:45.070 --> 00:02:48.020
If they are equal return true if they are not 

68
00:02:48.020 --> 00:02:51.260
equal return false solid as quickly implement 

69
00:02:51.260 --> 00:02:55.590
the logic first let us write the function named isConnected 

70
00:02:55.600 --> 00:03:00.520
which takes three arguments The set array arr index of first 

71
00:03:00.520 --> 00:03:02.930
Element U index of second element 

72
00:03:02.930 --> 00:03:07.650
V so is connected of int arr int U and int V 

73
00:03:08.340 --> 00:03:11.650
This function will return the boolean result so write it's 

74
00:03:11.650 --> 00:03:12.870
written type as bool 

75
00:03:13.840 --> 00:03:16.440
Next we need to find the parent node of each 

76
00:03:16.450 --> 00:03:17.000
element 

77
00:03:17.150 --> 00:03:20.670
So write int parent of U equal to find of

78
00:03:20.680 --> 00:03:25.090
arr coma U and int parent of V equal to find 

79
00:03:25.090 --> 00:03:29.120
of arr comma V the find function will return the parent 

80
00:03:29.120 --> 00:03:30.850
node of both U and V 

81
00:03:31.210 --> 00:03:33.850
Now we need to check both indices are 

82
00:03:33.860 --> 00:03:35.980
equal or not so write 

83
00:03:36.210 --> 00:03:39.700
If parent of U equal to parent of V if 

84
00:03:39.700 --> 00:03:42.680
they are equal they're connected to each other so we 

85
00:03:42.680 --> 00:03:43.390
need to return 

86
00:03:43.400 --> 00:03:43.820
True 

87
00:03:43.840 --> 00:03:44.540
So write 

88
00:03:44.550 --> 00:03:45.450
Returned true 

89
00:03:46.240 --> 00:03:48.240
Otherwise we need to return false 

90
00:03:48.330 --> 00:03:50.530
So finally write Return false 

91
00:03:50.600 --> 00:03:51.290
That's it 

92
00:03:51.560 --> 00:03:54.750
So this is all about is connected function and 

93
00:03:54.750 --> 00:03:56.190
disjoint set data structure 

94
00:03:56.470 --> 00:03:59.280
In the coming videos we will learn how to detect 

95
00:03:59.280 --> 00:04:02.900
the cycle in an undirected graph using disjoint set. 

