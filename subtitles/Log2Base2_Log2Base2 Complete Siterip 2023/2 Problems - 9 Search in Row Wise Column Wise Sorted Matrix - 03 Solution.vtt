WEBVTT

1
00:00:00.040 --> 00:00:02.420
let us implement a solution for this problem 

2
00:00:02.430 --> 00:00:05.350
In this function search in sort 2D matrix 

3
00:00:05.740 --> 00:00:08.950
It takes the 2D array number of rows number 

4
00:00:08.950 --> 00:00:10.910
of columns and the search element 

5
00:00:10.920 --> 00:00:15.450
n as parameters let us declare two variables i and 

6
00:00:15.450 --> 00:00:15.850
j 

7
00:00:16.530 --> 00:00:19.170
We are going to start the search from last element 

8
00:00:19.180 --> 00:00:23.730
in the first row so let us Initialise I to 0 and J 

9
00:00:23.730 --> 00:00:25.000
to column minus one 

10
00:00:25.640 --> 00:00:29.570
Next let us have a while loop in each iteration 

11
00:00:29.830 --> 00:00:34.230
first that is compare n with array of IJ if 

12
00:00:34.240 --> 00:00:36.370
n equal to equal to array of IJ

13
00:00:37.300 --> 00:00:40.070
If this is true then we have found the search 

14
00:00:40.070 --> 00:00:41.280
element in matrix 

15
00:00:41.600 --> 00:00:46.890
Thus written true else check if n is greater than 

16
00:00:47.090 --> 00:00:48.250
array of IJ 

17
00:00:48.640 --> 00:00:52.270
If true it means that the search element cannot be 

18
00:00:52.270 --> 00:00:53.630
present Ith Row 

19
00:00:53.950 --> 00:00:57.150
And so we can continue to compare the next element 

20
00:00:57.160 --> 00:01:02.210
in Jth column So increment I Now if control comes 

21
00:01:02.220 --> 00:01:05.530
to else part it means n less than array of 

22
00:01:05.540 --> 00:01:09.330
IJ so we can eliminate Jth column and move to 

23
00:01:09.330 --> 00:01:10.580
the proceeding element in 

24
00:01:10.590 --> 00:01:15.400
Ith Row for that decrement J what condition can we 

25
00:01:15.400 --> 00:01:18.880
give for this while loop in each iteration we are 

26
00:01:18.890 --> 00:01:24.090
either incremental I or Decrement J Initially I's value 

27
00:01:24.090 --> 00:01:24.850
is zero 

28
00:01:25.640 --> 00:01:28.600
We can increment I till it reaches the last row 

29
00:01:28.600 --> 00:01:30.450
index that row minus one 

30
00:01:31.220 --> 00:01:34.520
So add this condition I less than or equal to 

31
00:01:34.520 --> 00:01:39.380
row minus one likewise J cannot be reduced below zero 

32
00:01:39.480 --> 00:01:43.450
So add and J greater than or equal to zero 

33
00:01:44.210 --> 00:01:48.310
If either of these conditions becomes false the control will 

34
00:01:48.310 --> 00:01:49.750
come out of the while loop 

35
00:01:50.240 --> 00:01:52.530
If n is present in the 2D matrix 

36
00:01:52.720 --> 00:01:56.090
this condition will pass in any one of the iteration 

37
00:01:56.190 --> 00:01:57.950
and that's true will be returned 

38
00:01:58.740 --> 00:02:01.230
And in case if control comes out of the while 

39
00:02:01.230 --> 00:02:04.980
loop we can conclude that n is not present in 

40
00:02:04.980 --> 00:02:07.880
this matrix and hence we can written false. 

