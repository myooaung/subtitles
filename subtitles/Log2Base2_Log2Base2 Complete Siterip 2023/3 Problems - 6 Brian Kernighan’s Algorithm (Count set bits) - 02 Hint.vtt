WEBVTT

1
00:00:00.140 --> 00:00:03.350
we can use the clear right most set bit logic to 

2
00:00:03.350 --> 00:00:04.550
solve this problem 

3
00:00:04.940 --> 00:00:08.830
The idea is that inside the loop continuously clear the 

4
00:00:08.830 --> 00:00:12.050
right most set that one by one until the number 

5
00:00:12.050 --> 00:00:13.050
becomes zero 

6
00:00:13.540 --> 00:00:16.770
The number of times the loop print is equal to 

7
00:00:16.770 --> 00:00:19.080
the number of set bits in the number 

8
00:00:19.400 --> 00:00:23.860
Let us see how first take the number 10 first do 

9
00:00:23.860 --> 00:00:27.050
bitwise and between the number 10 and its previous 

10
00:00:27.050 --> 00:00:30.640
number nine If we do that the right most set 

11
00:00:30.640 --> 00:00:34.890
bit will be cleared So increment count Next take the 

12
00:00:34.890 --> 00:00:38.780
resulted binary number which is number eight now again 

13
00:00:38.790 --> 00:00:41.710
do bitwise and between the number eight and its 

14
00:00:41.710 --> 00:00:45.610
previous number seven If we do that the next right 

15
00:00:45.610 --> 00:00:49.360
most set It will be cleared now one more set 

16
00:00:49.360 --> 00:00:53.990
bit is cleared so increment count value now count will 

17
00:00:53.990 --> 00:00:57.730
become two Now check the resulted binary number It 

18
00:00:57.730 --> 00:01:00.620
is zero so we can stop the process and returned 

19
00:01:00.620 --> 00:01:01.250
the count 

20
00:01:02.040 --> 00:01:04.790
The count value is two which is equal to the 

21
00:01:04.790 --> 00:01:07.250
number of set bits in number 10 

22
00:01:08.140 --> 00:01:10.790
Now let us see one more example let us take 

23
00:01:10.790 --> 00:01:12.990
the number eight now 

24
00:01:13.000 --> 00:01:13.230
Do bitwise

25
00:01:13.230 --> 00:01:16.280
on number eight and its previous number 

26
00:01:16.280 --> 00:01:16.750
seven 

27
00:01:17.340 --> 00:01:20.390
If we do that the right most set bit will 

28
00:01:20.390 --> 00:01:21.130
be cleared 

29
00:01:21.330 --> 00:01:24.730
So increment count now Check the resulted binary 

30
00:01:24.730 --> 00:01:25.960
number It is zero 

31
00:01:25.970 --> 00:01:27.740
So we can stop the process 

32
00:01:27.750 --> 00:01:31.340
And Return count The count value is one which is 

33
00:01:31.350 --> 00:01:34.650
equal to the number of set bits in number eight 

34
00:01:35.040 --> 00:01:37.350
So that's it the logic is very simple 

35
00:01:37.570 --> 00:01:41.240
Inside a loop continuously clear the right most set bit 

36
00:01:41.490 --> 00:01:45.780
and increment count until number becomes zero and finally return 

37
00:01:45.780 --> 00:01:46.650
count value.

