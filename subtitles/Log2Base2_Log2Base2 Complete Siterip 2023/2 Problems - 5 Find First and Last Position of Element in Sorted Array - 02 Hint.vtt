WEBVTT

1
00:00:00.240 --> 00:00:04.150
let us take this arr and integer eight and find 

2
00:00:04.150 --> 00:00:06.150
the first and last occurrence 

3
00:00:06.840 --> 00:00:10.380
We will split this problem into two parts finding the 

4
00:00:10.380 --> 00:00:13.440
first occurrence and finding the last occurrence 

5
00:00:13.610 --> 00:00:15.950
And then we can solve them one by one 

6
00:00:16.640 --> 00:00:19.900
First let us find the first occurrence of given number 

7
00:00:19.900 --> 00:00:20.290


8
00:00:20.490 --> 00:00:23.110
Let us to a binary search in this array for 

9
00:00:23.120 --> 00:00:26.690
integer eight here start is equal to zero and end

10
00:00:26.690 --> 00:00:30.000
is equal to eight and mid will be Start plus end 

11
00:00:30.010 --> 00:00:32.010
Divided by two which is four 

12
00:00:32.340 --> 00:00:34.650
An array four is equal to eight 

13
00:00:34.660 --> 00:00:37.330
So we have found eight in the given array 

14
00:00:37.340 --> 00:00:40.170
Let us store this index four in a variable we 

15
00:00:40.170 --> 00:00:41.530
know that our given 

16
00:00:41.540 --> 00:00:45.590
array contains duplicates so there may be 8's occurring before 

17
00:00:45.600 --> 00:00:48.990
or after this element to find the first occurrence 

18
00:00:49.110 --> 00:00:49.870
that is check 

19
00:00:49.880 --> 00:00:51.980
Whether there is any eight present 

20
00:00:51.980 --> 00:00:55.930
Before this element set end index to mid minus one 

21
00:00:55.940 --> 00:01:00.230
and continued the binary search now start equal to zero 

22
00:01:00.240 --> 00:01:00.720
and end 

23
00:01:00.720 --> 00:01:03.400
is equal to three and mid is equal to zero 

24
00:01:03.400 --> 00:01:06.080
plus three divided by two which is equal to one 

25
00:01:06.320 --> 00:01:09.210
An array of one is four which is less than 

26
00:01:09.220 --> 00:01:10.690
our search key eight 

27
00:01:10.700 --> 00:01:14.060
Hence we will adjust the start index to mid plus 

28
00:01:14.060 --> 00:01:14.450
one 

29
00:01:14.940 --> 00:01:16.930
Now start is two end is three 

30
00:01:16.940 --> 00:01:20.060
This mid is two array of two is four again 

31
00:01:20.260 --> 00:01:22.120
so let us point start to mid 

32
00:01:22.120 --> 00:01:25.430
plus one that is three now start and end both 

33
00:01:25.430 --> 00:01:27.530
point to 3 thus mid 

34
00:01:27.540 --> 00:01:31.000
Is also three array of mid has eight now so 

35
00:01:31.000 --> 00:01:34.640
we have to update the variable first pos to 3 and 

36
00:01:34.640 --> 00:01:35.110
point 

37
00:01:35.120 --> 00:01:38.430
end to mid minus one as start becomes greater than 

38
00:01:38.440 --> 00:01:40.250
n the iteration ends here 

39
00:01:40.600 --> 00:01:43.740
The variable first pos will hold the index of first 

40
00:01:43.750 --> 00:01:45.220
occurrence of the number 

41
00:01:45.410 --> 00:01:47.270
Let us add this to a vector 

42
00:01:47.280 --> 00:01:50.230
res the only changed that we did to 

43
00:01:50.230 --> 00:01:52.120
binary search algorithm here 

44
00:01:52.160 --> 00:01:55.580
It's whenever the integer is found we did not stop 

45
00:01:55.580 --> 00:01:56.650
the search there 

46
00:01:56.840 --> 00:02:00.810
Instead we stored the index in a temporary variable and 

47
00:02:00.810 --> 00:02:04.150
continued to search by pointing end to mid minus one 

48
00:02:04.540 --> 00:02:08.610
Now let's find the last occurrence of the number again 

49
00:02:08.680 --> 00:02:12.080
Let's get started with doing a binary search for eight 

50
00:02:12.090 --> 00:02:13.090
in this array 

51
00:02:13.100 --> 00:02:16.240
But we have found integer eight at index four 

52
00:02:16.250 --> 00:02:17.370
here again 

53
00:02:17.480 --> 00:02:20.540
Once we find the element we will not stop there 

54
00:02:20.800 --> 00:02:23.860
instead We will store the current index in a temporary 

55
00:02:23.860 --> 00:02:27.490
variable and continue the search by pointing start to mid 

56
00:02:27.490 --> 00:02:29.170
plus one and check 

57
00:02:29.180 --> 00:02:32.490
If there is any eight present after the current matched 

58
00:02:32.500 --> 00:02:37.030
index iterations will continue untill start becomes greater than end 

59
00:02:37.040 --> 00:02:40.210
and whenever we find eight we will be updating the 

60
00:02:40.210 --> 00:02:41.630
variable last pos 

61
00:02:42.140 --> 00:02:46.010
Once iteration ends variable last pos will hold the last 

62
00:02:46.010 --> 00:02:49.150
occurence of the Element eight so let us added to the 

63
00:02:49.150 --> 00:02:50.060
result in vector. 

