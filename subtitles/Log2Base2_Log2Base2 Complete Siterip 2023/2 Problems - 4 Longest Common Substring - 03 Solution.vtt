WEBVTT

1
00:00:00.140 --> 00:00:01.840
so let us write a function 

2
00:00:01.840 --> 00:00:05.460
LCST which takes the Strings X and Y with its 

3
00:00:05.460 --> 00:00:09.910
length m and N respectively as the parameters and returns 

4
00:00:09.920 --> 00:00:12.880
the length of longest comment sub string which will be 

5
00:00:12.880 --> 00:00:17.400
an integer as we learned and previous LCS problem for 

6
00:00:17.400 --> 00:00:20.600
the ease of Calculation we are adding an empty character 

7
00:00:20.610 --> 00:00:23.610
at the beginning so we need to create a table 

8
00:00:23.610 --> 00:00:24.180
for m 

9
00:00:24.180 --> 00:00:27.350
plus one and n plus one size to create a 

10
00:00:27.360 --> 00:00:30.850
2D array with one extra row and column So 

11
00:00:30.850 --> 00:00:34.750
write int DP of m plus one and n plus one 

12
00:00:35.740 --> 00:00:38.640
Now we need a variable to track the maximum sub 

13
00:00:38.640 --> 00:00:43.180
string length so declare result and initialised it to 0 so 

14
00:00:43.180 --> 00:00:48.010
write int result equal to zero now declare the 

15
00:00:48.010 --> 00:00:49.970
iterating variables i and j

16
00:00:49.980 --> 00:00:55.390
So write int ij to iterate row write outer 

17
00:00:55.390 --> 00:00:58.890
for loop from i equal to 0 i lessthan or equal 

18
00:00:58.890 --> 00:00:59.450
to m 

19
00:01:00.040 --> 00:01:03.200
And to iterate the column write inner for loop 

20
00:01:03.200 --> 00:01:05.490
from J equal to zero to J lessthan or 

21
00:01:05.490 --> 00:01:09.370
equal to n as we are considering first characters as 

22
00:01:09.380 --> 00:01:10.070
empty 

23
00:01:10.080 --> 00:01:12.700
We need to mark the first row and first column 

24
00:01:12.710 --> 00:01:16.760
element to zero so write If i equal to zero or 

25
00:01:16.760 --> 00:01:20.450
j equal to zero dp of ij equal to zero 

26
00:01:21.440 --> 00:01:24.350
Now if the characters are equal we need to add 

27
00:01:24.360 --> 00:01:28.020
one to the previous longest comments sub string length that 

28
00:01:28.020 --> 00:01:30.740
can be found at DP of i minus one J 

29
00:01:30.740 --> 00:01:31.450
minus one 

30
00:01:31.940 --> 00:01:35.490
So write else if x of I minus one equal 

31
00:01:35.490 --> 00:01:39.190
to y of J minus one then dp of i 

32
00:01:39.190 --> 00:01:42.470
j equal to DP of i minus one J minus 

33
00:01:42.470 --> 00:01:43.750
one plus one 

34
00:01:44.540 --> 00:01:47.250
And if it is a new maximum length we need 

35
00:01:47.260 --> 00:01:49.720
to update result so write 

36
00:01:49.940 --> 00:01:55.130
If dp of ij is greater than result then result 

37
00:01:55.130 --> 00:01:58.510
equal to DP of IJ And if the characters are 

38
00:01:58.520 --> 00:02:03.130
not equal we can simply add zero there write else 

39
00:02:03.260 --> 00:02:07.500
dp of IJ equal to zero Now the final result 

40
00:02:07.500 --> 00:02:10.310
will be stored in the variable result so we can finally return result. 

