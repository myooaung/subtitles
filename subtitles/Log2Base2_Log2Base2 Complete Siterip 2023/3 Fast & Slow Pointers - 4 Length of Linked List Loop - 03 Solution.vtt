WEBVTT

1
00:00:00.040 --> 00:00:03.290
We can take the detect loop logic and modify it 

2
00:00:03.300 --> 00:00:05.350
to find the length of the loop. 

3
00:00:05.740 --> 00:00:09.870
So change the function name to loop length and when 

4
00:00:10.040 --> 00:00:13.830
slow and fast pointers meet, we can pass the slow 

5
00:00:13.830 --> 00:00:16.660
pointer to calculate the length of the loop.

6
00:00:16.900 --> 00:00:21.920
So if slow equal to fast, write return calculate length 

7
00:00:21.930 --> 00:00:24.850
and pass the slow pointer as the argument 

8
00:00:25.530 --> 00:00:28.650
Now we can write the logic for calculating the length.

9
00:00:29.140 --> 00:00:32.990
so this function will take slow pointer as the input 

10
00:00:33.060 --> 00:00:33.870
and return an integer

11
00:00:33.880 --> 00:00:37.500
that is the length. We need to declare 

12
00:00:37.500 --> 00:00:40.230
one more pointer and make it a point to slow 

13
00:00:40.710 --> 00:00:45.140
write struct node * current equal to slow and 

14
00:00:45.140 --> 00:00:49.280
declare an integer variable to store the length and initialise it to zero.

15
00:00:49.290 --> 00:00:54.100
So till the current pointer reaches the slow pointer 

16
00:00:54.110 --> 00:00:58.200
again, we need to increment the current pointer and increment 

17
00:00:58.200 --> 00:00:59.150
length variable 

18
00:00:59.620 --> 00:01:03.800
So use a do while loop. So write do current 

19
00:01:03.800 --> 00:01:08.570
equal to current next length++ while current not 

20
00:01:08.580 --> 00:01:09.550
equal to slow. And finally we can return the length.

