WEBVTT

1
00:00:00.240 --> 00:00:02.810
so how to be converted decimal number into 

2
00:00:02.810 --> 00:00:03.780
binary number 

3
00:00:03.790 --> 00:00:06.910
We will continuously divide the given number by two till 

4
00:00:06.910 --> 00:00:08.360
the number becomes one 

5
00:00:08.440 --> 00:00:11.250
And in each step we will print the modulo 

6
00:00:11.250 --> 00:00:15.100
2 value Using the same approach we can write the logic 

7
00:00:15.100 --> 00:00:16.120
to solve The problem 

8
00:00:16.120 --> 00:00:19.460
Recursively first in the function divide the number 

9
00:00:19.460 --> 00:00:23.300
by two and invoked the next recursive call with numb 

10
00:00:23.300 --> 00:00:27.570
by two continued this process until the number becomes zero 

11
00:00:27.660 --> 00:00:30.660
and when it is zero just return and that is 

12
00:00:30.660 --> 00:00:34.570
our base case and print num mod two when the recursive 

13
00:00:34.570 --> 00:00:38.180
calls return because if we printed before the recursive call 

14
00:00:38.370 --> 00:00:41.250
we will get the binary sequence in reverse order 

15
00:00:41.740 --> 00:00:42.670
see this example 

16
00:00:42.670 --> 00:00:46.260
We have the input decimal value 10 So first call 

17
00:00:46.260 --> 00:00:49.630
function with 10 which is non zero value 

18
00:00:49.640 --> 00:00:52.430
So divide the number by two and call the function 

19
00:00:52.440 --> 00:00:55.740
again by passing that value that is 10 by two 

20
00:00:55.740 --> 00:00:56.620
which is five 

21
00:00:56.810 --> 00:00:59.280
And here we need to check if the number is 

22
00:00:59.280 --> 00:00:59.640
zero 

23
00:00:59.650 --> 00:01:00.760
But it is not so 

24
00:01:00.760 --> 00:01:03.240
Divide the number by two and we got two so 

25
00:01:03.240 --> 00:01:06.880
called the function by passing two here also check If the 

26
00:01:06.880 --> 00:01:09.270
number passed is zero but it is not 

27
00:01:09.380 --> 00:01:11.950
So Divide the number by two and we will get 

28
00:01:11.960 --> 00:01:14.920
two buy two which is one so called a function 

29
00:01:14.920 --> 00:01:16.210
by passing one 

30
00:01:16.330 --> 00:01:19.760
And here and here also the number passed is not 

31
00:01:19.760 --> 00:01:23.150
zero so called a function again by passing number by 

32
00:01:23.160 --> 00:01:24.970
two which is one by two 

33
00:01:24.980 --> 00:01:25.850
That is zero 

34
00:01:25.940 --> 00:01:29.210
And here when we check the number passed is zero 

35
00:01:29.270 --> 00:01:30.670
which is our base case 

36
00:01:30.710 --> 00:01:34.000
So we need to start returning and while returning 

37
00:01:34.010 --> 00:01:37.020
We need to print the number modulo two so 

38
00:01:37.020 --> 00:01:41.180
here one is printed next zero is printed and then 

39
00:01:41.280 --> 00:01:44.940
one is printed and finally zero is printed and we 

40
00:01:44.940 --> 00:01:46.750
got the binary value printed

41
00:01:46.840 --> 00:01:49.550
So try solving the problem using this approach. 

