WEBVTT

1
00:00:00.140 --> 00:00:03.680
So in the implementation, we can write a function 

2
00:00:03.680 --> 00:00:07.050
get middle node by passing the head of the linked list 

3
00:00:07.740 --> 00:00:11.150
And we need to declare a temporary variable pointing to head.

4
00:00:11.840 --> 00:00:14.310
And we need to check if the linked list is 

5
00:00:14.320 --> 00:00:15.000
empty.

6
00:00:15.240 --> 00:00:18.400
So write if temp not equal to null.

7
00:00:19.040 --> 00:00:22.400
And we should find the length by counting the number 

8
00:00:22.400 --> 00:00:26.220
of nodes. So we can simply traverse the linked list 

9
00:00:26.230 --> 00:00:28.450
by incrementing a count variable 

10
00:00:29.440 --> 00:00:31.190
This will be done by the function 

11
00:00:31.190 --> 00:00:33.720
getLength and length will be returned. 

12
00:00:34.240 --> 00:00:37.550
So now we have the length in variable length 

13
00:00:38.040 --> 00:00:41.580
So middle node will be the node at position length 

14
00:00:41.590 --> 00:00:45.500
divided by two. So we can traverse the list till 

15
00:00:45.510 --> 00:00:47.320
we reach length by two.

16
00:00:47.590 --> 00:00:51.890
And then we can print that node. So write  

17
00:00:51.900 --> 00:00:56.150
for i equal to zero, i less than length by two, i++

18
00:00:56.640 --> 00:00:59.920
and in each iteration, move to the next node 

19
00:01:00.140 --> 00:01:02.750
So write temp equal to temp next 

20
00:01:02.760 --> 00:01:07.300
After the loop exhuast, temp will be pointing 

21
00:01:07.300 --> 00:01:11.590
to the middle node. So print it and if temp is equal 

22
00:01:11.590 --> 00:01:15.290
to null, that is if linked list is empty then we should return -1.

