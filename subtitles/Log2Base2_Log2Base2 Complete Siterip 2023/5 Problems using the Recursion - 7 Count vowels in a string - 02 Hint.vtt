WEBVTT

1
00:00:00.040 --> 00:00:02.690
you will be given a string and you need to find 

2
00:00:02.700 --> 00:00:06.330
the count of vowels using recursion so we 

3
00:00:06.330 --> 00:00:09.330
can write recursive function by passing the string and 

4
00:00:09.330 --> 00:00:12.460
passed the nth index of the string check If the 

5
00:00:12.460 --> 00:00:16.810
character at that index is vowel if it is vowel we need 

6
00:00:16.810 --> 00:00:20.510
to count it so invoked the next recursive call by passing 

7
00:00:20.510 --> 00:00:23.680
the string and last index as second to last index 

8
00:00:23.690 --> 00:00:27.850
That is str and n minus one or we need 

9
00:00:27.850 --> 00:00:30.850
to add one to it as it was a vowel 

10
00:00:31.540 --> 00:00:34.550
If it is not a vowel invoke the next recursive 

11
00:00:34.550 --> 00:00:39.380
call by passing str and n minus one index and 

12
00:00:39.380 --> 00:00:42.630
the recursive calls will work from n to n minus 

13
00:00:42.630 --> 00:00:44.470
one n minus two etc 

14
00:00:45.140 --> 00:00:48.110
So when n is less than zero we will reach the 

15
00:00:48.110 --> 00:00:51.200
invalid index so we can return zero 

16
00:00:51.210 --> 00:00:52.850
And that is our base case 

17
00:00:53.640 --> 00:00:58.120
For example if the given string is ICE pass the string and 

18
00:00:58.120 --> 00:01:01.950
its end index two to the function check if it 

19
00:01:01.950 --> 00:01:05.300
is vowel and e is vowel also Add one and 

20
00:01:05.300 --> 00:01:08.580
called the function again with str and n minus one 

21
00:01:08.920 --> 00:01:12.450
that is two minus one 1 now check 

22
00:01:12.460 --> 00:01:13.490
If this is a vowel 

23
00:01:13.610 --> 00:01:17.020
But C is not a vowel so do not add 

24
00:01:17.020 --> 00:01:17.470
one 

25
00:01:17.480 --> 00:01:20.750
We can simply call the function again with str and 

26
00:01:20.760 --> 00:01:23.620
n minus one that is one minus one zero 

27
00:01:24.340 --> 00:01:25.550
Now here check 

28
00:01:25.560 --> 00:01:28.590
If the character at index zero is a vowel and 

29
00:01:28.600 --> 00:01:32.860
I is a vowel So add one and invoked the next recursive 

30
00:01:32.870 --> 00:01:36.300
call with Str and n minus one that is zero 

31
00:01:36.300 --> 00:01:37.950
minus one minus one 

32
00:01:38.640 --> 00:01:40.720
And here n is less than zero 

33
00:01:40.730 --> 00:01:43.500
So we have reached the base case so we can 

34
00:01:43.500 --> 00:01:44.450
return zero 

35
00:01:44.840 --> 00:01:47.000
And now the recursive calls will return 

36
00:01:47.260 --> 00:01:50.920
So here we will get one plus 0 1 and that 

37
00:01:50.920 --> 00:01:51.600
is returned 

38
00:01:51.880 --> 00:01:54.530
And here we will get zero plus one 

39
00:01:54.710 --> 00:01:55.640
That is one 

40
00:01:55.880 --> 00:01:58.600
And here we will get one plus one that is 

41
00:01:58.600 --> 00:02:00.750
two which is our expected result. 

