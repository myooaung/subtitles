WEBVTT

1
00:00:00.040 --> 00:00:01.040
Hello everyone 

2
00:00:01.330 --> 00:00:05.140
In this video let us learn how to implement the 

3
00:00:05.140 --> 00:00:08.550
bottom-up  approach of Nth Fibonacci problem 

4
00:00:08.940 --> 00:00:10.470
So we have two functions here

5
00:00:10.470 --> 00:00:14.360
 the main function and the user defined function 

6
00:00:14.370 --> 00:00:15.200
Fibonacci 

7
00:00:15.310 --> 00:00:19.240
So in main function first declared the integer variable  N

8
00:00:20.140 --> 00:00:23.750
Now read the number from user to variable N

9
00:00:24.340 --> 00:00:28.220
Supposed the number read from user is four and it 

10
00:00:28.220 --> 00:00:29.680
is stored in variable  N

11
00:00:29.690 --> 00:00:34.100
And now we have the base case Fibonacci of zero 

12
00:00:34.100 --> 00:00:37.850
equal to zero and Fibonacci of one equal to one 

13
00:00:38.340 --> 00:00:38.620
so check 

14
00:00:38.620 --> 00:00:42.250
 if n is less than or equal to one 

15
00:00:42.840 --> 00:00:45.950
If so print that number itself 

16
00:00:46.440 --> 00:00:50.210
Else we have to call Fibonacci of N here 

17
00:00:50.210 --> 00:00:50.680
Four 

18
00:00:50.690 --> 00:00:52.850
is not less than or equal to one 

19
00:00:53.340 --> 00:00:57.010
So if part will fail and go to else case 

20
00:00:57.130 --> 00:00:59.250
and call Fibonacci of four 

21
00:00:59.940 --> 00:01:03.930
So control reaches this function and here and is equal 

22
00:01:03.930 --> 00:01:08.530
to four so created integer array fib of size 

23
00:01:08.540 --> 00:01:09.410
N plus one 

24
00:01:09.780 --> 00:01:11.170
And integer variable 

25
00:01:12.540 --> 00:01:14.630
Now set fib(0)
26
00:01:14.630 --> 00:01:17.550
Equal to zero and fib(1) equal to one 

27
00:01:18.640 --> 00:01:21.560
Now we know that fib(n) is equal to 

28
00:01:21.560 --> 00:01:21.850
fib 

29
00:01:21.850 --> 00:01:23.540
of n minus one plaus

30
00:01:23.540 --> 00:01:26.960
fib of n minus two for every N greater than 

31
00:01:26.960 --> 00:01:30.300
 or equal to two so we can use a 

32
00:01:30.300 --> 00:01:33.840
for loop from I equal  to two to i less than 

33
00:01:33.840 --> 00:01:38.150
or equal to n at inclement i in each iteration 

34
00:01:39.040 --> 00:01:43.250
So in the first iteration, i is equal to two so 

35
00:01:43.260 --> 00:01:45.920
fib(2) will be computed and it will be 

36
00:01:45.920 --> 00:01:49.210
equal to fib(2) minus one plus fib(2)

37
00:01:49.220 --> 00:01:50.250
 minus two 

38
00:01:50.640 --> 00:01:53.960
That is fib(1) plus fib(0)  which 

39
00:01:53.960 --> 00:01:58.410
is equal to one plus zero equal to one so 

40
00:01:58.410 --> 00:02:00.250
fib(2) is computed 

41
00:02:00.940 --> 00:02:03.880
Now we have the values of fib(0) fib(1)

42
00:02:03.880 --> 00:02:05.550
 and fib(2) 

43
00:02:06.540 --> 00:02:09.540
Now in the second iteration i will be quite a 

44
00:02:09.540 --> 00:02:13.350
three so fib(3) equal to fib(3)

45
00:02:13.350 --> 00:02:16.350
minus one plus fib(3) minus two 

46
00:02:16.840 --> 00:02:20.810
That is fib(2) plus fib(1) that 

47
00:02:20.810 --> 00:02:23.850
is one plus one Which is equal to two

48
00:02:24.540 --> 00:02:27.350
So fib(3) is also computed Now 

49
00:02:27.940 --> 00:02:31.050
In the third iteration i will be equal to four 

50
00:02:31.540 --> 00:02:35.650
so fib(4) equal to fib(4) minus one plus 

51
00:02:35.650 --> 00:02:37.150
fib(4)r minus two 

52
00:02:37.840 --> 00:02:41.460
That is fib(3) plus fib(2) which 

53
00:02:41.460 --> 00:02:44.430
isequal to two plus one that will be equal to 

54
00:02:44.430 --> 00:02:44.950
 three 

55
00:02:45.640 --> 00:02:48.080
So fib(4) is also computed 

56
00:02:48.740 --> 00:02:51.290
Now I will be equal to five in the next 

57
00:02:51.290 --> 00:02:55.670
iteration and here condition i less than or equal to n

58
00:02:55.680 --> 00:02:56.440
will fail 

59
00:02:57.240 --> 00:03:00.490
So return fib(n) that it's fib(4) 

60
00:03:00.500 --> 00:03:04.250
to the main function and it will be printed here 

61
00:03:04.980 --> 00:03:08.590
That is fib(4) equal to three will be printed 

62
00:03:08.600 --> 00:03:09.450
on this screen 

63
00:03:10.240 --> 00:03:13.840
So that is how N Fibonacci problem can be implemented 

64
00:03:13.840 --> 00:03:15.750
using bottom up approach 

