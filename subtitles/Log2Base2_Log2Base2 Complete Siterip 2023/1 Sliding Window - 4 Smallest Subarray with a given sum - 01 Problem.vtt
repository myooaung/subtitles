WEBVTT

1
00:00:00.040 --> 00:00:03.550
Given an array of positive numbers and a positive number S

2
00:00:03.560 --> 00:00:07.040
 you need to find the length of the smallest 

3
00:00:07.040 --> 00:00:10.990
contiguous sub array whose sum is greater than or equal to S.

4
00:00:10.990 --> 00:00:11.650

5
00:00:12.140 --> 00:00:15.840
And if there is no such sub exist, just return zero.

6
00:00:15.850 --> 00:00:20.150
For example, let us take this array and S

7
00:00:20.150 --> 00:00:21.650
value as seven.

8
00:00:22.240 --> 00:00:25.510
Here we need to find the length of the smallest 

9
00:00:25.510 --> 00:00:29.230
contiguous sub array whose sum is greater than or equal 

10
00:00:29.230 --> 00:00:29.950
to seven. 

11
00:00:30.540 --> 00:00:34.380
First let us write all the contiguous sub arrays whose

12
00:00:34.380 --> 00:00:36.750
sum is greater than or equal to seven.

13
00:00:37.340 --> 00:00:40.730
From that we can pick the smallest one. The first 

14
00:00:40.730 --> 00:00:43.740
sub array whose sum is greater than or equal to seven 

15
00:00:43.750 --> 00:00:50.300
is 4 1 5. It's sum is 10 and length is 3 and 

16
00:00:50.300 --> 00:00:53.950
the next sub array is 1 5 2 

17
00:00:53.950 --> 00:00:58.250
It's sum is eight and length is three and the next sub array

18
00:00:58.290 --> 00:01:03.030
is 5 2. It's sum is seven and its length is 

19
00:01:03.030 --> 00:01:07.350
two and the next sub array is 5 2 4 

20
00:01:07.740 --> 00:01:12.280
It's sum is 11 and length is 3 and the last 

21
00:01:12.290 --> 00:01:15.880
sub array whose sum is greater than or equal to seven 

22
00:01:15.890 --> 00:01:20.750
is 2 4 1. It's sum is seven and its 

23
00:01:20.750 --> 00:01:23.350
length is 3.  

24
00:01:23.420 --> 00:01:27.630
Here the sub array 5 2 is the smallest contiguous sub array

25
00:01:27.640 --> 00:01:30.470
whose sum is greater than or equal to seven

26
00:01:30.730 --> 00:01:33.620
So the output will be two, which is the length 

27
00:01:33.620 --> 00:01:34.660
of this subarray. 

28
00:01:35.540 --> 00:01:38.330
So your task is to write the logic to solve 

29
00:01:38.330 --> 00:01:42.150
this problem. See some sample inputs and corresponding outputs.

30
00:01:42.540 --> 00:01:47.880
If the input array is  4 1 5 2 4 1 and 

31
00:01:47.880 --> 00:01:51.350
given S is equal to seven then the smaller is 

32
00:01:51.350 --> 00:01:55.400
contiguous sub array whose sum is greater than or equal to 

33
00:01:55.400 --> 00:02:00.650
seven is 5 2. So the expected output is two.

34
00:02:01.340 --> 00:02:07.400
Now if given is 1 5 4 2 1 8 and given s is

35
00:02:07.410 --> 00:02:11.530
equal to seven, then the smallest contiguous sub array whose

36
00:02:11.530 --> 00:02:15.250
sum is greater than or equal to seven is eight 

37
00:02:16.040 --> 00:02:20.150
It's length is one, so the expected output is one. 

