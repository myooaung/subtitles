WEBVTT

1
00:00:00.740 --> 00:00:01.420
Hi friends 

2
00:00:01.430 --> 00:00:05.530
In this video we are going to discuss about the increment and decrement operator in C.

3
00:00:10.540 --> 00:00:12.459
So First let us discuss 

4
00:00:13.460 --> 00:00:16.830
about the increment operator ++ and the operation performed 

5
00:00:16.830 --> 00:00:20.460
is that the value will be incremented by one 

6
00:00:20.460 --> 00:00:20.730
so let us see

7
00:00:20.730 --> 00:00:21.480
An example 

8
00:00:21.490 --> 00:00:23.160
We have a simple code here 

9
00:00:23.170 --> 00:00:26.630
First we're declaring an integer variable var and initialising 

10
00:00:26.630 --> 00:00:27.240
it to 5

11
00:00:27.250 --> 00:00:29.500
Now we are printing the value of var so it 

12
00:00:29.500 --> 00:00:30.380
will print five 

13
00:00:31.640 --> 00:00:34.540
Now we have var++ which will increment the value 

14
00:00:34.540 --> 00:00:36.350
of var and it will become six 

15
00:00:37.140 --> 00:00:39.770
And now we are printing the value of var again 

16
00:00:39.780 --> 00:00:42.610
This time it prints the incremented value six 

17
00:00:43.940 --> 00:00:46.060
So that was increment Operator 

18
00:00:46.060 --> 00:00:48.710
And now let us discuss about the decrement operator 

19
00:00:48.850 --> 00:00:51.230
So it works just the opposite of increment 

20
00:00:51.240 --> 00:00:53.120
It will decrement the value by one 

21
00:00:53.230 --> 00:00:56.030
And the decrement operator  is --

22
00:00:56.260 --> 00:00:59.240
Now let us see example c code to understand the 

23
00:00:59.240 --> 00:01:00.430
decrement operation 

24
00:01:00.440 --> 00:01:03.580
First we're declaring integer variable var and we are 

25
00:01:03.590 --> 00:01:05.040
initialising it to five 

26
00:01:05.540 --> 00:01:07.899
Now we are printing the value of var so it 

27
00:01:07.900 --> 00:01:08.910
will print five 

28
00:01:09.230 --> 00:01:11.240
Now we have var-- 

29
00:01:11.250 --> 00:01:13.310
Which will decrement  value of var and it 

30
00:01:13.310 --> 00:01:16.899
will become 4 and now we are printing the value 

31
00:01:16.900 --> 00:01:17.839
of var again 

32
00:01:18.050 --> 00:01:20.280
This time it prints the decremented value 4

33
00:01:20.290 --> 00:01:25.750
now we can use this increment/decrement operators 

34
00:01:25.750 --> 00:01:29.500
in two ways as var++ and ++var

35
00:01:29.760 --> 00:01:33.149
first let us see the post increment operation here the 

36
00:01:33.150 --> 00:01:36.060
value is returned first and then only incremented

37
00:01:36.350 --> 00:01:39.860
See this expression To understand this. we have  

38
00:01:39.860 --> 00:01:43.010
b=a++ Here First the value of a 

39
00:01:43.010 --> 00:01:46.210
will be returned and then only a is incremented 

40
00:01:46.540 --> 00:01:50.030
So see an example Let a equal to 10 initially and 

41
00:01:50.030 --> 00:01:52.030
we have b=a++

42
00:01:52.130 --> 00:01:54.810
So the value of a that is 10 will be 

43
00:01:54.810 --> 00:01:58.259
returned and stored in be first and then a is incremented 

44
00:01:58.260 --> 00:01:59.850
 and it will become 11.

45
00:02:00.190 --> 00:02:03.840
Now let us see the pre increment operation here The 

46
00:02:03.840 --> 00:02:06.250
order of operation is just the opposite 

47
00:02:06.340 --> 00:02:09.960
First value will be incremented and then only it is returned 

48
00:02:10.840 --> 00:02:14.019
So see this expression here b=++a

49
00:02:14.030 --> 00:02:17.560
so first this increment operation will take place and 

50
00:02:17.560 --> 00:02:19.179
then only value is returned 

51
00:02:19.440 --> 00:02:22.950
So see an example let a=10 and we have 

52
00:02:22.960 --> 00:02:26.430
b=++a so firstly a will 

53
00:02:26.430 --> 00:02:28.630
be incremented and it will become 11 

54
00:02:28.640 --> 00:02:31.340
And now it is assigned to b. so that is 

55
00:02:31.340 --> 00:02:34.950
the difference between post-increment and pre-increment operators 

56
00:02:35.140 --> 00:02:38.149
And the decrement operator can also be used in these 

57
00:02:38.150 --> 00:02:41.250
two ways as a-- and --a

58
00:02:41.640 --> 00:02:43.920
So that's all and thank you for watching this video 

