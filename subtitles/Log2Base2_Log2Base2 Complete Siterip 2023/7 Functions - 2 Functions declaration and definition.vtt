WEBVTT

1
00:00:00.840 --> 00:00:01.530
Hi friends 

2
00:00:01.540 --> 00:00:04.350
In this video we are going to learn function declaration 

3
00:00:04.360 --> 00:00:05.230
and function definition 

4
00:00:10.760 --> 00:00:14.840
First of all let us discuss about function declaration 

5
00:00:14.850 --> 00:00:17.330
Let us see the syntax for declaring a function 

6
00:00:17.740 --> 00:00:20.599
So to declare a function we should specify the function 

7
00:00:20.600 --> 00:00:25.140
return type, function name and function parameters within parenthesis and 

8
00:00:25.140 --> 00:00:26.390
at last a semi colon 

9
00:00:26.840 --> 00:00:29.240
So what is this return type It can be selected 

10
00:00:29.240 --> 00:00:32.110
according to what type of data the function is returning 

11
00:00:32.250 --> 00:00:35.769
It can be char int float double etcetera or it 

12
00:00:35.780 --> 00:00:36.940
can be even void 

13
00:00:36.950 --> 00:00:40.800
If the function does not return anything next we have 

14
00:00:40.800 --> 00:00:43.879
the function name. We should give a meaningful function name 

15
00:00:43.890 --> 00:00:46.190
For example If we want to write a programme to 

16
00:00:46.190 --> 00:00:49.480
Act two numbers we can declare function name as add 

17
00:00:49.490 --> 00:00:50.180
or sum 

18
00:00:51.140 --> 00:00:53.910
Then we have function parameters which refers to the 

19
00:00:53.920 --> 00:00:55.260
input which are passed

20
00:00:55.270 --> 00:00:58.730
While calling the function. we have to specify the parameters 

21
00:00:58.740 --> 00:01:00.270
inside the parenthesis 

22
00:01:00.280 --> 00:01:03.040
For example if we want to declare a function which 

23
00:01:03.040 --> 00:01:06.400
will have 2 integer input parameters num1 and num2 

24
00:01:06.410 --> 00:01:09.550
 then write int num1, int num2

25
00:01:09.560 --> 00:01:12.990
like this. Now let us see an example 

26
00:01:13.000 --> 00:01:15.770
Let's declare a function which will have 2 integer 

27
00:01:15.770 --> 00:01:18.570
input parameters and returns the sum of these two integers 

28
00:01:18.570 --> 00:01:19.190
 

29
00:01:19.200 --> 00:01:20.970
So sum will be an integer value 

30
00:01:20.980 --> 00:01:24.220
So declare return type as int.  we are going to calculate 

31
00:01:24.220 --> 00:01:26.510
the sum of two numbers so we can name it 

32
00:01:26.520 --> 00:01:29.290
add or sum. Parameters will be 2 integers so 

33
00:01:29.290 --> 00:01:34.250
specify it here and finally a semi colon and writing 

34
00:01:34.250 --> 00:01:37.440
The parameter name is actually optional here but 

35
00:01:37.440 --> 00:01:40.830
datatype of parameter is mandatory so we can also declare 

36
00:01:40.830 --> 00:01:44.420
the same function like this without writing the parameter names 

37
00:01:44.430 --> 00:01:48.070
We can also declare functions without any parameters and return 

38
00:01:48.070 --> 00:01:51.500
type just dont right anything in place of parameters and 

39
00:01:51.500 --> 00:01:54.029
give a name to the function and write void as 

40
00:01:54.030 --> 00:01:54.750
the return type 

41
00:01:55.140 --> 00:01:57.589
Now let's discuss about function definition 

42
00:01:57.750 --> 00:01:59.899
This is where we actually implement the task 

43
00:01:59.900 --> 00:02:02.070
For example we are going to write a function to 

44
00:02:02.080 --> 00:02:03.580
add two numbers and return 

45
00:02:03.580 --> 00:02:05.940
their sum. So we can write the code like this 

46
00:02:05.950 --> 00:02:07.190
A new variable to store 

47
00:02:07.190 --> 00:02:08.420
The result is created 

48
00:02:08.430 --> 00:02:11.090
A+B is calculated and stored in it and 

49
00:02:11.090 --> 00:02:11.520
return 

50
00:02:12.440 --> 00:02:15.340
So what is the difference between function declaration and function 

51
00:02:15.340 --> 00:02:18.810
definition? In the function declaration we are giving information about 

52
00:02:18.810 --> 00:02:20.350
the function to the compiler 

53
00:02:20.470 --> 00:02:23.130
Like this function will be returning an integer value 

54
00:02:23.240 --> 00:02:24.880
and it will take two parameters 

55
00:02:24.880 --> 00:02:28.130
Both of integer type etcetera But in function definition we're 

56
00:02:28.140 --> 00:02:31.420
actually implementing the function using a group of statements 

57
00:02:32.040 --> 00:02:34.329
And the objective here is to find the sum of 

58
00:02:34.340 --> 00:02:35.870
A and B and return it 

59
00:02:36.040 --> 00:02:37.490
It can be done in any way 

60
00:02:37.500 --> 00:02:40.350
Here we are creating a variable and storing sum to it 

61
00:02:40.360 --> 00:02:41.320
and then returning 

62
00:02:41.520 --> 00:02:44.100
It can also be directly returned like this 

63
00:02:45.840 --> 00:02:48.109
So that's all and thank you for watching this video 

