WEBVTT

1
00:00:00.060 --> 00:00:03.260
In this video let us see some of the observations 

2
00:00:03.260 --> 00:00:04.970
of asymptotic notations 

3
00:00:05.400 --> 00:00:08.480
If f(n) is O(g(n)) and 

4
00:00:08.480 --> 00:00:11.730
j(n) is O(k(n)) then what will be 

5
00:00:11.730 --> 00:00:14.490
the big oh notation for f(n) + j(n) 

6
00:00:14.490 --> 00:00:14.840


7
00:00:15.460 --> 00:00:18.860
Let us assume f(n) as n^2 and 

8
00:00:18.860 --> 00:00:20.390
g(n) as n^3

9
00:00:20.860 --> 00:00:23.670
Then what will be the upper bound of  

10
00:00:23.670 --> 00:00:27.550
n^2 + n^3. It's n cube that is the maximum 

11
00:00:27.550 --> 00:00:30.010
value of these two time functions 

12
00:00:30.180 --> 00:00:33.700
So if f(n) is O(g(n)) and 

13
00:00:33.720 --> 00:00:37.040
j(n) is O(k(n)) than f(n) 

14
00:00:37.040 --> 00:00:41.020
plus j(n) is O(max(g(n),k(n)))

15
00:00:41.020 --> 00:00:44.430
Now, what will be the time complexity 

16
00:00:44.440 --> 00:00:48.410
If we multiply f(n) and g(n). let us assume 

17
00:00:48.420 --> 00:00:51.920
f(n) as n and j(n) as n square 

18
00:00:52.560 --> 00:00:55.650
For f(n)*g(n) will be n*n^2

19
00:00:55.650 --> 00:00:58.380
 which is O(n^3) 

20
00:00:58.800 --> 00:01:02.610
So if we multiply two functions f(n)

21
00:01:02.610 --> 00:01:06.110
j(n) then the time complexity will be the product 

22
00:01:06.110 --> 00:01:11.060
of these two time functions that is  

23
00:01:11.070 --> 00:01:14.660
O(g(n))*k(n) So, if we add two time 

24
00:01:14.660 --> 00:01:17.340
functions say f(n) and J(n) 

25
00:01:17.580 --> 00:01:21.390
Then the total time complexity will be 

26
00:01:21.390 --> 00:01:23.870
O(max(g(n),k(n))) 

27
00:01:24.510 --> 00:01:28.110
And if we multiply two time functions say 

28
00:01:28.120 --> 00:01:31.560
f(n)*j(n) that the total time complexity will 

29
00:01:31.560 --> 00:01:35.290
be O(g(n)*k(n)). That's it.

