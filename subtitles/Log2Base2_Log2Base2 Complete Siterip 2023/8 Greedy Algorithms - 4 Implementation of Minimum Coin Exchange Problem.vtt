WEBVTT

1
00:00:00.040 --> 00:00:00.960
Hi friends 

2
00:00:01.190 --> 00:00:04.600
In this video let us see the implementation of the 

3
00:00:04.600 --> 00:00:08.550
minimum coin exchange problem using the greedy algorithm

4
00:00:09.320 --> 00:00:12.870
In the previous video we have learned about the minimum 

5
00:00:12.870 --> 00:00:19.200
coin exchange problem using the greedy algorithm this function find 

6
00:00:19.210 --> 00:00:20.190
min coins 

7
00:00:20.440 --> 00:00:22.150
Take three arguments 

8
00:00:22.540 --> 00:00:26.600
First one is the coins in descending order with four 

9
00:00:26.600 --> 00:00:30.750
coins 25 20 10 and five 

10
00:00:31.540 --> 00:00:35.530
If the coins array is not in sorted order we need 

11
00:00:35.530 --> 00:00:37.950
to sort it before finding the solution 

12
00:00:38.740 --> 00:00:43.200
Here we have four coins so the size is four 

13
00:00:43.320 --> 00:00:46.320
so let's assume we need to find the minimum number 

14
00:00:46.320 --> 00:00:49.150
of coins for the value 105 

15
00:00:49.540 --> 00:00:53.460
Next create a vector object ans to store the results 

16
00:00:53.780 --> 00:00:56.220
So write vector of type integer 

17
00:00:56.220 --> 00:00:58.850
ans equal to new vector 

18
00:00:59.440 --> 00:01:00.990
Now let us be Clear 

19
00:01:01.000 --> 00:01:05.520
integer Variables I and Count and initialise count 

20
00:01:05.530 --> 00:01:06.150
to 0 

21
00:01:06.840 --> 00:01:10.560
So the main logic here is that take coin of 

22
00:01:10.560 --> 00:01:14.570
zero which is the largest value which is 25 here 

23
00:01:14.790 --> 00:01:18.480
as much as we can each time we take the 

24
00:01:18.480 --> 00:01:23.050
coin we decrement the coin value from the actual value 

25
00:01:23.540 --> 00:01:27.480
and while taking the coin increment the count and store the 

26
00:01:27.490 --> 00:01:29.250
coin in the ancillary 

27
00:01:30.140 --> 00:01:34.420
So this can be achieved using this while loop here if 

28
00:01:34.420 --> 00:01:38.650
the actual value become zero which means we have found 

29
00:01:38.650 --> 00:01:41.050
the solution so returned account 

30
00:01:41.530 --> 00:01:45.770
Otherwise continue the same process with the next coin and 

31
00:01:45.770 --> 00:01:46.850
proceed further 

32
00:01:47.940 --> 00:01:50.250
So let us see how it works 

33
00:01:50.640 --> 00:01:53.760
So in the first iteration of the for loop we 

34
00:01:53.760 --> 00:01:55.550
have i equal to zero 

35
00:01:56.040 --> 00:01:58.840
So we will take coin of Zero as much as 

36
00:01:58.840 --> 00:01:59.450
we can 

37
00:01:59.940 --> 00:02:02.850
That is as long as the coin value is less 

38
00:02:02.850 --> 00:02:06.610
than or equal to our required value it can be 

39
00:02:06.610 --> 00:02:07.150
taken 

40
00:02:07.740 --> 00:02:09.690
So we have the while loop for that 

41
00:02:09.930 --> 00:02:12.180
And here the condition is true 

42
00:02:12.190 --> 00:02:15.650
Since 105 is greater than 25 

43
00:02:16.440 --> 00:02:18.350
So we can take coin of zero 

44
00:02:18.740 --> 00:02:22.410
So decrement coin of zero from 105 and we 

45
00:02:22.410 --> 00:02:27.250
will get the value 105 minus 25 which is 80 

46
00:02:28.140 --> 00:02:32.810
So add coin of zero to the ancillary and this is 

47
00:02:32.810 --> 00:02:36.560
where we will have our taken coins and we have 

48
00:02:36.570 --> 00:02:39.610
taken one coin of the value 25 

49
00:02:39.730 --> 00:02:43.740
So it is added here and since a coin is 

50
00:02:43.750 --> 00:02:49.320
added increments count now check the while condition again and 

51
00:02:49.330 --> 00:02:53.280
it is still true since 80 is greater than 25 

52
00:02:53.940 --> 00:02:58.140
So take coin of zero again and subtracted from value 

53
00:02:58.410 --> 00:03:02.700
So we will get value equal to 80 minus 25 

54
00:03:02.710 --> 00:03:04.150
which is 55 

55
00:03:04.840 --> 00:03:09.000
So at this coin to answer array and increment count 

56
00:03:09.430 --> 00:03:13.480
So count equal to two now and we got two coins 

57
00:03:13.480 --> 00:03:18.010
of value 25 now check the while condition again and 

58
00:03:18.020 --> 00:03:22.050
it is still true since 55 is greater than 25 

59
00:03:22.640 --> 00:03:26.530
So take coin of zero again and subtracted from value 

60
00:03:26.840 --> 00:03:31.390
So we will get value equal to 55 minus 25 

61
00:03:31.400 --> 00:03:32.550
That is 30 

62
00:03:32.940 --> 00:03:37.830
Now at this coin to Ans array and increment count So 

63
00:03:37.830 --> 00:03:39.350
count becomes three now 

64
00:03:39.740 --> 00:03:43.450
And we have three coins of value 25 each 

65
00:03:44.340 --> 00:03:47.560
Now check the while condition again And it is still 

66
00:03:47.570 --> 00:03:50.650
true since 30 is greater than 25 

67
00:03:51.040 --> 00:03:55.470
So take coin of zero again and subtracted from value 

68
00:03:55.710 --> 00:03:59.930
So we will get value equal to 30 minus 25 

69
00:03:59.940 --> 00:04:00.850
That is five 

70
00:04:01.640 --> 00:04:05.650
Now at this going to ancillary and increments count 

71
00:04:06.140 --> 00:04:08.450
So count becomes four now 

72
00:04:09.040 --> 00:04:12.650
So we have four coins of value 25 each 

73
00:04:13.240 --> 00:04:16.710
Now check the while condition again and it will fail 

74
00:04:16.710 --> 00:04:20.420
now since five is not greater than or equal to 

75
00:04:20.420 --> 00:04:21.150
25 

76
00:04:21.640 --> 00:04:25.250
So it means if we add this coin now it 

77
00:04:25.250 --> 00:04:27.180
will exceed the required value 

78
00:04:27.640 --> 00:04:28.910
So we cannot add this 

79
00:04:28.910 --> 00:04:29.250
Now 

80
00:04:29.640 --> 00:04:32.350
So we have to check if we have reached the 

81
00:04:32.350 --> 00:04:33.390
required value 

82
00:04:33.550 --> 00:04:34.370
So check 

83
00:04:34.420 --> 00:04:37.890
If value is equal to zero and it is not 

84
00:04:38.220 --> 00:04:40.850
so go for the next iteration of the for loop 

85
00:04:41.240 --> 00:04:43.650
now i is equal to one 

86
00:04:44.140 --> 00:04:47.770
So check if value five is greater than or equal 

87
00:04:47.770 --> 00:04:51.480
to coin of one and it is not so check 

88
00:04:51.490 --> 00:04:55.050
If value equal to zero again it will fail 

89
00:04:55.540 --> 00:04:59.390
So go for the next iteration and now i is equal 

90
00:04:59.390 --> 00:05:01.120
to two and check 

91
00:05:01.260 --> 00:05:04.210
If coin of two is less than or equal to 

92
00:05:04.210 --> 00:05:07.180
value five and it also fails 

93
00:05:07.560 --> 00:05:10.910
So check If value is equal to zero and it 

94
00:05:10.910 --> 00:05:15.470
is not so whenever the value becomes zero we can 

95
00:05:15.480 --> 00:05:19.680
infer that we have reached the required value but it 

96
00:05:19.680 --> 00:05:21.290
is not so 

97
00:05:21.300 --> 00:05:25.420
That is why we are continuing this operation now in 

98
00:05:25.420 --> 00:05:29.580
the next iteration i is equal to so check 

99
00:05:29.770 --> 00:05:32.640
If coin of three is less than or equal to 

100
00:05:32.650 --> 00:05:37.370
value five and it is coin of three equal to five 

101
00:05:37.380 --> 00:05:40.730
which is equal to the value five so it can 

102
00:05:40.730 --> 00:05:41.350
be added 

103
00:05:41.740 --> 00:05:46.170
So subtract coin of 3 5  from value five and we 

104
00:05:46.170 --> 00:05:49.550
will get zero and it will be stored in value 

105
00:05:50.340 --> 00:05:55.050
Now at this coin to Ans array and increment count 

106
00:05:55.540 --> 00:05:59.410
So count will become five now and next 

107
00:05:59.520 --> 00:06:02.350
When we checked the while condition it fails 

108
00:06:02.840 --> 00:06:03.810
So it checks 

109
00:06:03.920 --> 00:06:07.710
If we have reached the required value and here it 

110
00:06:07.710 --> 00:06:08.450
will be true 

111
00:06:08.840 --> 00:06:12.600
The value is equal to zero now So break out 

112
00:06:12.600 --> 00:06:15.370
of the for loop and return count which is the 

113
00:06:15.370 --> 00:06:18.450
minimum number of coins which is five here 

114
00:06:19.340 --> 00:06:24.770
So with the coins of value 25 20 10 and five 

115
00:06:25.090 --> 00:06:28.270
we need a minimum of five coins to make the 

116
00:06:28.270 --> 00:06:29.850
value 105 

117
00:06:30.440 --> 00:06:33.670
That is the minimum number of coins for the value 

118
00:06:33.670 --> 00:06:38.970
105 is five and the coins are four coins of 

119
00:06:38.970 --> 00:06:41.950
value 25 1 coin of value five.

