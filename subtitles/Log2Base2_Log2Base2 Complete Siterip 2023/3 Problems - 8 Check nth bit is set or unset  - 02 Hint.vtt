WEBVTT

1
00:00:00.430 --> 00:00:00.910
To check 

2
00:00:00.910 --> 00:00:04.500
whether the nth bit is set or not, which bitwise

3
00:00:04.500 --> 00:00:07.930
operator can we use? We can use bitwise AND 

4
00:00:07.930 --> 00:00:12.510
operator because if we do bitwise AND between 

5
00:00:12.510 --> 00:00:14.250
zero and one, we will get zero.

6
00:00:14.630 --> 00:00:17.650
And if we do bitwise AND between one and one,

7
00:00:17.650 --> 00:00:19.260
we will get one.

8
00:00:19.350 --> 00:00:22.060
Now let us see an example. Let us take the 

9
00:00:22.060 --> 00:00:24.350
number 64 here 

10
00:00:24.340 --> 00:00:27.130
We are going to check whether the fifth bit is 

11
00:00:27.130 --> 00:00:28.250
set or not. 

12
00:00:28.710 --> 00:00:31.780
So let us first create the bit mask with fifth bit

13
00:00:31.780 --> 00:00:33.350
bit alone set to one.

14
00:00:33.840 --> 00:00:37.030
Take the number one and perform n-1 left shifts.

15
00:00:37.030 --> 00:00:42.410
That is one left shift four and

16
00:00:42.410 --> 00:00:43.550
our bitmask is now ready. 

17
00:00:44.230 --> 00:00:47.080
Now let us do bitwise AND operation between the 

18
00:00:47.080 --> 00:00:50.930
number and the bit mask. Since zero AND one is 

19
00:00:50.940 --> 00:00:53.550
zero, the nth bit will become zero 

20
00:00:54.040 --> 00:00:56.190
The rest of the bits will also be set to zero

21
00:00:56.190 --> 00:01:00.050
 as we're performing bitwise AND operation with zero 

22
00:01:00.740 --> 00:01:04.250
And as the result is zero, we can say that the 

23
00:01:04.250 --> 00:01:08.270
fifth bit in this number is not set or fifth 

24
00:01:08.270 --> 00:01:12.990
bit in this number is OFF. Now let us see another example 

25
00:01:13.370 --> 00:01:16.970
We have the number 64 and we need to check if 

26
00:01:16.980 --> 00:01:19.450
seventh bit is set or not. 

27
00:01:20.040 --> 00:01:23.080
So first let us create the bit mask. That is, 

28
00:01:23.340 --> 00:01:27.500
Take number one and left shift seven minus one times 

29
00:01:27.540 --> 00:01:31.090
That is one  left shift six and the bit mask is ready. 

30
00:01:31.100 --> 00:01:35.830
 Now perform bitwise AND between the number 64 the 

31
00:01:35.830 --> 00:01:40.140
bit mask and since bitwise AND on one and one 

32
00:01:40.150 --> 00:01:44.190
is one, the result becomes non zero. So we can 

33
00:01:44.190 --> 00:01:48.550
say seventh bit is set or ON in this number. 

