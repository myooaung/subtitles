WEBVTT

1
00:00:00.140 --> 00:00:00.990
Hello friends 

2
00:00:01.130 --> 00:00:04.750
In this video let us have an introduction to dynamic 

3
00:00:04.760 --> 00:00:05.450
programming 

4
00:00:06.140 --> 00:00:11.030
So what is dynamic programming? Dynamic programming is one best 

5
00:00:11.030 --> 00:00:15.350
method to solve the optimization problems in linear time 

6
00:00:16.100 --> 00:00:19.290
Let us see how to solve a problem in dynamic 

7
00:00:19.290 --> 00:00:19.990
programming 

8
00:00:20.540 --> 00:00:25.000
First, the problem will be divided into multiple subproblems 

9
00:00:25.390 --> 00:00:29.990
Secondly, solve the subproblems and store the result and 

10
00:00:29.990 --> 00:00:35.060
finally using the result of subproblems solve another big 

11
00:00:35.060 --> 00:00:39.150
subproblem and continuously follow this approach to solve 

12
00:00:39.160 --> 00:00:40.370
The large problem 

13
00:00:40.590 --> 00:00:44.050
There are two kinds of approach in dynamic programming 

14
00:00:44.540 --> 00:00:48.020
First is bottom-up approach and the second one is 

15
00:00:48.030 --> 00:00:49.350
top down approach 

16
00:00:49.940 --> 00:00:53.900
Let us understand them one by one in the bottom  up

17
00:00:53.900 --> 00:00:58.110
approach the based solution will be taken first from 

18
00:00:58.110 --> 00:00:58.800
the bottom 

19
00:00:59.050 --> 00:01:02.950
The problem will be solved step by step like this 

20
00:01:03.340 --> 00:01:08.120
Finally, we will have the result of big problem in 

21
00:01:08.120 --> 00:01:09.560
the top down approach  

22
00:01:09.740 --> 00:01:12.960
The main problem is recursively broken down into 

23
00:01:12.960 --> 00:01:14.600
multiple sub problems 

24
00:01:14.930 --> 00:01:18.750
The breakdown will happen until the base case is reached 

25
00:01:19.720 --> 00:01:23.430
and then from there, the solution will be computed like 

26
00:01:23.430 --> 00:01:23.860
this 

27
00:01:24.540 --> 00:01:29.540
Let us understand it using the Nth Fibonacci example hear 

28
00:01:29.710 --> 00:01:33.690
the problem statement is given and we need to return 

29
00:01:33.690 --> 00:01:34.170
the 

30
00:01:34.170 --> 00:01:39.470
Nth Fibonacci number from the series the Fibonacci Series is  

31
00:01:39.470 --> 00:01:41.280
Fibonacci of 0 is 0 

32
00:01:41.280 --> 00:01:43.510
Fibonacci of 1 is 1 

33
00:01:43.510 --> 00:01:46.300
Fibonacci of 2 is sum of fib(0) 

34
00:01:46.310 --> 00:01:49.320
and fib(1) that is zero plus one equal 

35
00:01:49.320 --> 00:01:50.550
to 1  

36
00:01:50.550 --> 00:01:54.200
Fibonacci of 3 is sum of Fibonacci of one and 

37
00:01:54.200 --> 00:01:54.340


38
00:01:54.340 --> 00:01:57.250
Fibonacci of two which is one plus one equals 2 

39
00:01:57.700 --> 00:02:01.080
And like this in general 

40
00:02:01.280 --> 00:02:04.760
 Fibonacci of N is Fibonacci of N minus one plus 

41
00:02:04.760 --> 00:02:06.950
Fibonacci of N in minus two 

42
00:02:07.440 --> 00:02:10.120
Let us find the fourth Fibonacci number 

43
00:02:10.130 --> 00:02:13.650
using the bottom-up approach and top-down approach 

44
00:02:14.260 --> 00:02:16.650
Let us see the bottom-up approach first 

45
00:02:17.130 --> 00:02:20.590
As we have discussed in the bottom-up approach we 

46
00:02:20.590 --> 00:02:21.830
solved the problem 

47
00:02:21.840 --> 00:02:24.280
Step by step from the base case 

48
00:02:24.550 --> 00:02:25.100
Here 

49
00:02:25.100 --> 00:02:28.310
What is the base case Fibonacci of zero is zero 

50
00:02:28.310 --> 00:02:29.720
and Fibonacci of One is one

51
00:02:29.720 --> 00:02:31.050
 so right 

52
00:02:31.060 --> 00:02:35.150
Zero in fib(0)  and one in fib(1)

53
00:02:35.790 --> 00:02:37.700
Let us solve one by one 

54
00:02:37.890 --> 00:02:40.620
What will be fib(2) it is fib(0)

55
00:02:40.620 --> 00:02:42.490
plus fib(1) 

56
00:02:42.680 --> 00:02:47.170
That is the sum of previous 2  Fibonacci  numbers so 

57
00:02:47.170 --> 00:02:50.550
Fib of two equal to zero plus one that is 

58
00:02:50.550 --> 00:02:50.940
one 

59
00:02:51.640 --> 00:02:55.210
Now we have solved one subproblem that is fib(2)

60
00:02:55.210 --> 00:02:57.040
 using this 

61
00:02:57.230 --> 00:02:59.840
Let us solve the next subproblem 

62
00:02:59.960 --> 00:03:00.920
Fib(3)

63
00:03:01.330 --> 00:03:03.950
It will be the summer fib(1) and fib(2) 

64
00:03:03.950 --> 00:03:07.550
 that is one plus one which is to 

65
00:03:08.000 --> 00:03:11.980
now we have solved another subproblem that it's again 

66
00:03:11.980 --> 00:03:12.360
used 

67
00:03:12.370 --> 00:03:16.870
This result to compute the next problems result so fib(4) 

68
00:03:16.870 --> 00:03:19.660
 will be the sum fib(2) and 

69
00:03:19.660 --> 00:03:20.390
fib(3)

70
00:03:20.720 --> 00:03:23.250
So one plus two which is what three 

71
00:03:23.790 --> 00:03:26.850
Now we have found the 4th Fibonacci number which 

72
00:03:26.850 --> 00:03:27.450
is three 

73
00:03:27.940 --> 00:03:31.380
This is how in bottom up approach we solve a 

74
00:03:31.380 --> 00:03:34.640
big problem step by step from the base case 

75
00:03:35.300 --> 00:03:38.470
In eight step we solve one subproblem 

76
00:03:38.680 --> 00:03:42.110
And using that solution we will solve the next 

77
00:03:42.110 --> 00:03:44.760
subproblem in the next step 

78
00:03:44.770 --> 00:03:48.550
Let us understand how it is sold in the top-down approach 

79
00:03:49.090 --> 00:03:53.400
The general formula to find Nth Fibonacci Number is 

80
00:03:53.400 --> 00:03:56.720
Fib(n) equal to Fib(N-1) plus 
81
00:03:56.720 --> 00:03:58.250
Fib(N-2)

82
00:03:58.690 --> 00:04:02.200
So to find fib(4)  the top-down approach 

83
00:04:02.200 --> 00:04:03.180
will call fib(4)

84
00:04:03.180 --> 00:04:06.680
 minus one that is 3 and fib(4) minus 

85
00:04:06.680 --> 00:04:07.350
two that is 

86
00:04:07.350 --> 00:04:11.160
two Similarly fib(3) will call fib(3) 

87
00:04:11.160 --> 00:04:14.250
minus one that is fib(2) and fib(3)

88
00:04:14.260 --> 00:04:17.930
 minus two that is fib(1) and this 

89
00:04:17.930 --> 00:04:21.030
fib(2) again calls fib(1) and fib(0) 

90
00:04:21.030 --> 00:04:24.510
 since fib(0) and fib(1)

91
00:04:24.520 --> 00:04:28.630
a bass cases the reclusive calls will be stopped 

92
00:04:28.630 --> 00:04:32.340
here and the right side fib(2) will again 

93
00:04:32.340 --> 00:04:34.810
call fib(1) and fib(0) 

94
00:04:35.220 --> 00:04:37.610
All the reclusive calls are now made 

95
00:04:38.000 --> 00:04:41.070
Now the result will be calculated like this 

96
00:04:41.640 --> 00:04:44.890
As we know fib(0) is 0 and fib(1)

97
00:04:44.900 --> 00:04:45.550
is 1

98
00:04:45.940 --> 00:04:49.970
So fib(2) will be zero plus one is one so 

99
00:04:49.970 --> 00:04:51.640
one will be returned to fib(2)

100
00:04:51.640 --> 00:04:53.280
 here 

101
00:04:53.450 --> 00:04:54.260
Fib(1)  

102
00:04:54.260 --> 00:04:57.470
is one and we have already calculated fib(2)

103
00:04:57.540 --> 00:05:00.780
which is one so one plus one 2 will be returned 

104
00:05:00.790 --> 00:05:01.750
Fib(3)

105
00:05:02.340 --> 00:05:05.270
Here again fib(0) and fib(1) will 

106
00:05:05.270 --> 00:05:08.810
be calculated that is zero plus one which is one 

107
00:05:09.110 --> 00:05:11.350
and it will be returned to fib(2) 

108
00:05:11.920 --> 00:05:14.760
Now we have fib(3) which is two and 

109
00:05:14.760 --> 00:05:18.000
fib(2) which is one so two plus one  

110
00:05:18.010 --> 00:05:22.230
three will be returned to fib(4) so fib(4) is 

111
00:05:22.240 --> 00:05:22.650
three 

112
00:05:23.140 --> 00:05:26.110
So this is how in the top-down approach the 

113
00:05:26.110 --> 00:05:28.530
Nth Fibonacci number will be found 

114
00:05:28.540 --> 00:05:32.610
recursively This approach is completely different from the 

115
00:05:32.610 --> 00:05:37.110
bottom-up approach in bottom-up approach from base case 

116
00:05:37.180 --> 00:05:41.530
we solve the large problems step by step in 

117
00:05:41.530 --> 00:05:41.900
Top-down 

118
00:05:42.190 --> 00:05:45.590
The large problem is broken down to recursively till 

119
00:05:45.590 --> 00:05:49.430
the base case and from there the solution will be 

120
00:05:49.430 --> 00:05:50.180
completed 

121
00:05:51.110 --> 00:05:54.710
If we observe the top-down approach solution we can 

122
00:05:54.710 --> 00:05:57.940
see that we have solved the subproblem fib(2)

123
00:05:57.950 --> 00:05:59.090
twice 

124
00:05:59.720 --> 00:06:03.240
But in the bottom-up approach, we have sold each 

125
00:06:03.240 --> 00:06:07.650
subproblem exactly wants to avoid this kind of  

126
00:06:07.650 --> 00:06:11.710
recomputing the same subproblem in top-down approach 

127
00:06:11.720 --> 00:06:15.480
We should keep additional memory to store the results of 

128
00:06:15.490 --> 00:06:18.060
already solved sub problems 

129
00:06:18.540 --> 00:06:21.250
This is also called memorization 

130
00:06:21.840 --> 00:06:25.240
In the next video, we will understand how to use 

131
00:06:25.240 --> 00:06:29.560
memorization to Seoul the problems effectively in the top down 

