WEBVTT

1
00:00:00.240 --> 00:00:03.210
in this video let us learn about Head recursion 

2
00:00:03.210 --> 00:00:07.930
a recursive function is head recursive When the recursive 

3
00:00:07.940 --> 00:00:12.160
call is the first thing executed by the function See 

4
00:00:12.160 --> 00:00:15.700
here the Recursive call a fun is placed 

5
00:00:15.710 --> 00:00:18.310
at the beginning of the function and this will be 

6
00:00:18.310 --> 00:00:19.480
executed first 

7
00:00:19.940 --> 00:00:24.250
let us take an example Programme and understand how head recursion 

8
00:00:24.250 --> 00:00:25.050
works 

9
00:00:25.900 --> 00:00:28.660
Let us take a string a b c D and 

10
00:00:28.670 --> 00:00:33.660
print it using head Recursion see here the recursive call 

11
00:00:33.670 --> 00:00:37.260
is placed at the beginning of the function The printing 

12
00:00:37.270 --> 00:00:43.670
operation happens while returning only initially str will point the 

13
00:00:43.670 --> 00:00:47.310
character a so this code will be pushed into the 

14
00:00:47.310 --> 00:00:51.760
stack first it first checks If value at str is 

15
00:00:51.770 --> 00:00:56.270
equal to null character it is not so call head 

16
00:00:56.270 --> 00:01:00.630
recur of str plus one So str will 

17
00:01:00.630 --> 00:01:04.680
now point B so this code is now pushed into 

18
00:01:04.680 --> 00:01:08.450
stack and now check If value at str equal to null 

19
00:01:08.450 --> 00:01:13.040
character again it is not so The recursive call is 

20
00:01:13.040 --> 00:01:18.340
meet So str now points to C and check If 

21
00:01:18.350 --> 00:01:22.800
Star str equal to null character It is not so again 

22
00:01:22.800 --> 00:01:28.410
The recursive call happens here str points to D and this 

23
00:01:28.410 --> 00:01:30.450
code is pushed into the stack 

24
00:01:30.840 --> 00:01:34.450
So again check if conditions and it fails 

25
00:01:34.940 --> 00:01:38.810
So the next recursive call happens and here the if 

26
00:01:38.810 --> 00:01:43.980
condition is satisfied so control returns and this function code 

27
00:01:43.990 --> 00:01:46.210
is popped out from the stack 

28
00:01:46.310 --> 00:01:50.650
Now in this returning process the printing operation takes place 

29
00:01:51.140 --> 00:01:55.560
So here D is printed and this code is completed 

30
00:01:55.560 --> 00:01:58.350
now and it is popped out from the stack 

31
00:01:59.040 --> 00:02:03.190
Now C is printed and similarly B and A are 

32
00:02:03.190 --> 00:02:07.640
printed and these function calls are popped out of this 

33
00:02:07.640 --> 00:02:08.820
stack as well 

34
00:02:08.830 --> 00:02:12.130
So in Head recursion the recursive call will be 

35
00:02:12.130 --> 00:02:15.750
made first and then the logic of the function is 

36
00:02:15.760 --> 00:02:16.650
executed 

37
00:02:17.240 --> 00:02:20.130
But in tail recursion the logic of the function 

38
00:02:20.130 --> 00:02:23.480
will be executed first and then the recursive call will 

39
00:02:23.480 --> 00:02:24.950
be made at the end 

40
00:02:26.240 --> 00:02:27.260
So that's all

41
00:02:27.430 --> 00:02:30.470
And in the next video we will learn about nested recursion. 

