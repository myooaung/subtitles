WEBVTT

1
00:00:00.140 --> 00:00:01.620
to solve this problem 

2
00:00:01.630 --> 00:00:04.620
First we need to find the total number of common 

3
00:00:04.620 --> 00:00:06.850
characters present and relative order 

4
00:00:07.240 --> 00:00:10.350
Once we find that we can easily find the required 

5
00:00:10.350 --> 00:00:14.050
minimum number of insertions and deletion we can reuse 

6
00:00:14.050 --> 00:00:17.410
the longest common subsequent logic to find the total number 

7
00:00:17.410 --> 00:00:20.050
of common characters present in relative order 

8
00:00:21.140 --> 00:00:24.240
So first apply the LCS logic and find a length 

9
00:00:24.240 --> 00:00:26.140
of longest common subsequent 

10
00:00:26.640 --> 00:00:30.870
Here The longest common subsequent ar and its length 

11
00:00:30.870 --> 00:00:31.450
is two 

12
00:00:31.840 --> 00:00:35.740
This simply means to convert String one into String two 

13
00:00:35.980 --> 00:00:39.780
At Max we can reuse two characters so we need to 

14
00:00:39.780 --> 00:00:42.150
delete the remaining characters in string two 

15
00:00:42.590 --> 00:00:45.840
In this case it is the character W so we 

16
00:00:45.840 --> 00:00:49.190
can find the minimum number of deletions by subtracting the 

17
00:00:49.190 --> 00:00:52.400
longest common subsequent length from the length of the first 

18
00:00:52.400 --> 00:00:57.070
string here the length of first string war is three so subtract 

19
00:00:57.070 --> 00:00:59.630
LCS length two from Three and we will 

20
00:00:59.630 --> 00:01:03.370
get one so the required minimum number of deletions is 

21
00:01:03.370 --> 00:01:03.750
one 

22
00:01:04.240 --> 00:01:07.760
Now we need to insert the required characters into string 

23
00:01:07.760 --> 00:01:09.050
one from String two 

24
00:01:09.740 --> 00:01:12.350
So how many characters do we need to insert here 

25
00:01:12.740 --> 00:01:16.460
two new characters Because the characters A and R are 

26
00:01:16.470 --> 00:01:19.640
already present in string one and we can find a 

27
00:01:19.640 --> 00:01:23.890
minimum number of insertions by subtracting the longest common subsequent 

28
00:01:23.890 --> 00:01:26.250
length from the length of the second string 

29
00:01:26.740 --> 00:01:30.840
Here the length of second string gear is four so 

30
00:01:30.840 --> 00:01:34.620
subtract LCS length two from four and we will get 

31
00:01:34.630 --> 00:01:38.350
two so the required minimum number of insertions is two 

32
00:01:38.840 --> 00:01:41.700
Now let us apply the same logic in the second 

33
00:01:41.700 --> 00:01:42.350
example 

34
00:01:42.740 --> 00:01:46.550
First we need to find the LCS link here  

35
00:01:46.550 --> 00:01:49.950
LCS is M E R G E and its length is 

36
00:01:49.950 --> 00:01:54.660
five so to convert merge into mergesort at Max 

37
00:01:54.670 --> 00:01:58.260
we can reuse five characters and we need to delete 

38
00:01:58.260 --> 00:01:59.970
the remaining characters in string 

39
00:01:59.980 --> 00:02:03.860
Two that is we need to delete characters S O R T

40
00:02:03.870 --> 00:02:07.390
in merged sort so we can find the minimum 

41
00:02:07.390 --> 00:02:11.640
number of deletions by subtracting the longest common subsequent length 

42
00:02:11.870 --> 00:02:15.140
from the length of the first string that is five 

43
00:02:15.140 --> 00:02:17.050
minus five which is zero 

44
00:02:17.440 --> 00:02:21.390
So the required minimum number of deletions is zero and 

45
00:02:21.390 --> 00:02:24.730
we can find the minimum number of insertions by subtracting 

46
00:02:24.730 --> 00:02:28.330
the longest common subsequent length from the length of second 

47
00:02:28.330 --> 00:02:32.420
string that his nine minus five which is four so 

48
00:02:32.420 --> 00:02:36.160
the required minimum number of insertions is four so the 

49
00:02:36.160 --> 00:02:36.760
logic is 

50
00:02:36.760 --> 00:02:37.550
Very simple 

51
00:02:37.940 --> 00:02:41.220
Find the length of longest common subsequent and to 

52
00:02:41.220 --> 00:02:44.620
find the minimum number of deletions we need to subtract 

53
00:02:44.630 --> 00:02:48.350
LCS length from String one and to find the minimum 

54
00:02:48.350 --> 00:02:52.250
number of insertions we need to subtract LCS length from 

55
00:02:52.250 --> 00:02:55.630
string two so using this logic you can try to 

56
00:02:55.630 --> 00:02:56.550
solve the problem. 

