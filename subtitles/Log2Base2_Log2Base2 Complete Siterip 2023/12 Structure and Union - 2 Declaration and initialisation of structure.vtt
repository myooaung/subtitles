WEBVTT

1
00:00:00.640 --> 00:00:01.300
Hi friends

2
00:00:01.310 --> 00:00:04.370
In this video we are going to learn how to declare and initialise a structure.

3
00:00:10.370 --> 00:00:13.830
First let us see how to declare structure variables. 

4
00:00:14.080 --> 00:00:16.010
Now there are different ways to do that. 

5
00:00:16.330 --> 00:00:20.470
One method is declaring structure variables along with structure declaration 

6
00:00:20.480 --> 00:00:21.259
like this, 

7
00:00:21.940 --> 00:00:24.900
After closing the brackets before putting the semi colon; 

8
00:00:24.900 --> 00:00:27.930
we can declare the structure variables and it is not limited 

9
00:00:27.940 --> 00:00:29.090
to just one variable. 

10
00:00:29.090 --> 00:00:32.629
We can declare many variables, just separate it using commas, 

11
00:00:33.640 --> 00:00:36.880
Now the second method for declaring structure variable is using 

12
00:00:36.880 --> 00:00:37.950
the struct key word. 

13
00:00:38.340 --> 00:00:41.100
And the syntax for that is write struct followed by 

14
00:00:41.100 --> 00:00:44.529
the name of the structure followed by structure variables and a 

15
00:00:44.530 --> 00:00:45.199
semi colon; 

16
00:00:45.200 --> 00:00:47.330
At the end see an example. 

17
00:00:47.330 --> 00:00:50.199
We have a structure named car here and to declare 

18
00:00:50.200 --> 00:00:51.800
structure variable car1

19
00:00:51.930 --> 00:00:53.240
Just write like this 

20
00:00:53.250 --> 00:00:55.720
struct car car1 semi colon; 

21
00:00:56.010 --> 00:00:58.950
So car1 is created like this and again we 

22
00:00:58.950 --> 00:01:01.600
can declare more than one variables together here 

23
00:01:01.800 --> 00:01:05.120
So now car2 and car3 are also created 

24
00:01:05.640 --> 00:01:09.120
Generally this is how we declare variables of primitive data 

25
00:01:09.120 --> 00:01:09.570
types 

26
00:01:09.670 --> 00:01:11.850
Just write the data type and then the name of 

27
00:01:11.860 --> 00:01:14.900
the variable and a semi colon. Here for structure it 

28
00:01:14.900 --> 00:01:17.450
is a user defined datatype. So here the data 

29
00:01:17.450 --> 00:01:21.649
type is struct name and thus we can declare structure variables. 

30
00:01:22.040 --> 00:01:25.390
Now let's see how to initialise structure members.

31
00:01:25.390 --> 00:01:28.000
Structure members can be directly initialize like this, 

32
00:01:28.130 --> 00:01:31.270
so we initialise car1 with name as xyz 

33
00:01:31.270 --> 00:01:36.410
and price as 987432.50. So Car1

34
00:01:36.410 --> 00:01:39.340
will have those values, now let us see how to 

35
00:01:39.350 --> 00:01:43.250
access the structure members. So to access structure members we 

36
00:01:43.250 --> 00:01:45.500
have to use the dot(.) operator and it is 

37
00:01:45.500 --> 00:01:47.870
also called as the "Member access operator". 

38
00:01:48.740 --> 00:01:51.200
For example suppose we need to access the name of 

39
00:01:51.210 --> 00:01:51.910
car1.

40
00:01:52.200 --> 00:01:55.480
Then we can access it using car1.name

41
00:01:55.480 --> 00:01:57.110
and to access the price of car1, 

42
00:01:57.390 --> 00:02:00.520
then we can access car1.price. 

43
00:02:00.850 --> 00:02:02.670
Now let us see a sample programme, 

44
00:02:02.890 --> 00:02:05.390
We have the main function and a structure car is 

45
00:02:05.390 --> 00:02:09.870
declared with members name which is a character array and price 

46
00:02:09.880 --> 00:02:13.560
of float type and a structure variable car1 is declared 

47
00:02:13.570 --> 00:02:20.040
and initialised with values xyz and 987432.50. 

48
00:02:20.130 --> 00:02:22.590
Now we are printing the name of car1 as  

49
00:02:22.590 --> 00:02:25.190
car1.name which will print xyz 

50
00:02:26.440 --> 00:02:28.830
And now we are printing the price of car1 

51
00:02:28.840 --> 00:02:32.399
as car1.price which will print 987432.50 

52
00:02:32.400 --> 00:02:37.350
Now suppose we had this line of code here 

53
00:02:37.360 --> 00:02:42.360
car1.price equal to 1000000.50 

54
00:02:42.770 --> 00:02:46.519
then this price of car1 will be updated. 

55
00:02:46.520 --> 00:02:49.560
So we can also change the value of structure members using 

56
00:02:49.560 --> 00:02:51.150
the same dot operator. 

57
00:02:51.540 --> 00:02:54.350
Now when we print the name it will print the 

58
00:02:54.350 --> 00:02:55.170
same name 

59
00:02:55.180 --> 00:02:56.050
xyz 

60
00:02:56.060 --> 00:03:01.720
And when we print the price it will be 1000000.50 

61
00:03:02.540 --> 00:03:04.829
So that's all and thank you for watching this video. 

