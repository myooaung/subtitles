WEBVTT

1
00:00:00.140 --> 00:00:04.120
So to reverse the string, without affecting special characters 

2
00:00:04.120 --> 00:00:07.370
Let us write a function reverse by passing the string 

3
00:00:07.380 --> 00:00:08.750
str into it. 

4
00:00:09.340 --> 00:00:12.930
We need to declare and initialise start and end index 

5
00:00:12.930 --> 00:00:19.230
pointers. So write int start equal to zero and int end 

6
00:00:19.230 --> 00:00:22.250
equal to length(str)-1

7
00:00:23.040 --> 00:00:27.280
Now we should compare the characters at start and end indices.

8
00:00:27.290 --> 00:00:32.450
If both are alphabets swap them and increment

9
00:00:32.450 --> 00:00:34.250
start and decrement end. 

10
00:00:34.940 --> 00:00:39.120
And if start index has a special character, skip it 

11
00:00:39.130 --> 00:00:40.850
by incrementing start 

12
00:00:41.110 --> 00:00:45.020
And if end index has a special character, skip it 

13
00:00:45.030 --> 00:00:49.200
by decrementing end and continue this process and this 

14
00:00:49.200 --> 00:00:52.350
should be done till start is less than end. 

15
00:00:52.940 --> 00:00:57.360
So write while start less than end and check 

16
00:00:57.540 --> 00:01:02.160
if the characters pointed by start and end are alphabets 

17
00:01:02.540 --> 00:01:07.240
for that, write a function isAlphabet by passing the character 

18
00:01:07.550 --> 00:01:12.130
So the parameter here is character ch. So check

19
00:01:12.300 --> 00:01:15.980
if ch is any capital letter or if it is 

20
00:01:15.990 --> 00:01:21.430
any small letter. So write return ch greater than or 

21
00:01:21.430 --> 00:01:25.570
equal to capital A and ch less than or 

22
00:01:25.570 --> 00:01:30.200
equal to capital Z. Or ch greater than or equal to

23
00:01:30.200 --> 00:01:34.790
small a and ch is less than or equal to 

24
00:01:34.800 --> 00:01:35.950
small z

25
00:01:36.540 --> 00:01:39.590
So if first or second condition is true 

26
00:01:39.760 --> 00:01:42.250
True will be returned by this function 

27
00:01:43.040 --> 00:01:46.160
So here, as we said, we have to check if 

28
00:01:46.160 --> 00:01:49.810
start or end is pointing any special character 

29
00:01:50.120 --> 00:01:55.480
So write if not isalphabet of str[start] 

30
00:01:55.810 --> 00:02:01.330
then increment start that is start++ else 

31
00:02:01.500 --> 00:02:07.140
not isalphabet of str[end]. Then do end--

32
00:02:06.170 --> 00:02:07.140
 

33
00:02:07.640 --> 00:02:12.350
Otherwise if both are alphabets then swap them. So write 

34
00:02:12.740 --> 00:02:18.740
else swap (&str[start] and &str[end])

35
00:02:18.750 --> 00:02:23.420
 And after swapping increment start 

36
00:02:23.430 --> 00:02:27.380
and decrement end. So write start++ and 

37
00:02:27.390 --> 00:02:28.670
end--. 

38
00:02:29.240 --> 00:02:31.360
So that's all and the work is done 

39
00:02:31.500 --> 00:02:35.050
We will get our reversed string without changing the special 

40
00:02:35.050 --> 00:02:36.050
characters in it. 

