WEBVTT

1
00:00:00.240 --> 00:00:02.790
in this video let us learn what is deque 

2
00:00:02.880 --> 00:00:04.640
The deque stands for double ended 

3
00:00:04.640 --> 00:00:05.700
Queue it is a 

4
00:00:05.700 --> 00:00:09.210
Generalised version in Queue data structure the normal queue 

5
00:00:09.210 --> 00:00:12.700
will follow first in first out principle for the insertion 

6
00:00:12.700 --> 00:00:16.120
happens at one end and deletion happens on the other 

7
00:00:16.120 --> 00:00:18.250
end whereas in double ended Queue 

8
00:00:18.440 --> 00:00:22.150
We can perform insertion and deletion operations on both ends 

9
00:00:22.540 --> 00:00:25.130
so deque will not follow the first in first out 

10
00:00:25.130 --> 00:00:25.780
principle 

11
00:00:25.930 --> 00:00:29.190
It can be used both as stack and as Queue 

12
00:00:29.200 --> 00:00:32.970
For example if we insert the element at one end and

13
00:00:32.970 --> 00:00:36.060
deleted on the other end it will act as Queue 

14
00:00:36.060 --> 00:00:36.840
data structure 

15
00:00:37.070 --> 00:00:39.860
In this case it will follow the first in first 

16
00:00:39.860 --> 00:00:40.650
our principle 

17
00:00:41.340 --> 00:00:44.040
And if we insert and delete elements from the same 

18
00:00:44.040 --> 00:00:46.930
end it will act as stacked data structure 

19
00:00:47.090 --> 00:00:49.940
In this case it will follow the last in first 

20
00:00:49.940 --> 00:00:50.750
out principle 

21
00:00:51.540 --> 00:00:53.450
That's all about deque data structure 

22
00:00:53.840 --> 00:00:56.550
Now let us discuss various operations on deque 

23
00:00:56.940 --> 00:00:58.800
There are four major operations 

24
00:00:59.030 --> 00:01:02.440
The first one is insert front operation which is used 

25
00:01:02.440 --> 00:01:04.350
to insert the element at the front 

26
00:01:05.040 --> 00:01:08.110
The second one is insert rear operation which is used 

27
00:01:08.110 --> 00:01:09.220
to insert the element 

28
00:01:09.220 --> 00:01:09.800
at rear

29
00:01:09.950 --> 00:01:12.900
The third one is delete front operation which is used 

30
00:01:12.900 --> 00:01:14.750
to remove the element from front 

31
00:01:15.440 --> 00:01:19.080
Similarly the fourth one is delete rear operation which is 

32
00:01:19.080 --> 00:01:21.120
used to remove the element from the rear 

33
00:01:21.370 --> 00:01:24.630
Now let us discuss about which data structure is best 

34
00:01:24.630 --> 00:01:25.290
to implement 

35
00:01:25.290 --> 00:01:26.250
Double ended Queue 

36
00:01:26.640 --> 00:01:30.330
The deque can be implemented using two data structures using 

37
00:01:30.330 --> 00:01:34.040
a circular array and using a doubly linked list in 

38
00:01:34.050 --> 00:01:38.050
our implementation we will follow the doubly linked list version If 

39
00:01:38.050 --> 00:01:39.500
you're not familier with 

40
00:01:39.500 --> 00:01:42.990
doubly linked list concepts kindly go through the doubly linked list series 

41
00:01:43.000 --> 00:01:46.160
in our data structure course so that's all for this 

42
00:01:46.160 --> 00:01:48.760
video in the next video we will learn how to 

43
00:01:48.770 --> 00:01:51.850
implement deque data structure using at doubly linked list.

