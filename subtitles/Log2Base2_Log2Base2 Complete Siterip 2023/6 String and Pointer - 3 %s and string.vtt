WEBVTT

1
00:00:00.240 --> 00:00:00.970
Hi friends 

2
00:00:00.980 --> 00:00:03.610
In this video we are going to learn about %s 

3
00:00:03.620 --> 00:00:05.680
 format specifier and string. 

4
00:00:11.940 --> 00:00:15.360
So consider a sring hello. Now to print the string 

5
00:00:15.370 --> 00:00:18.119
We can use the %s format specifier

6
00:00:18.130 --> 00:00:19.250
in printf function 

7
00:00:19.570 --> 00:00:22.349
It will print the string from the given starting address

8
00:00:22.350 --> 00:00:25.380
to the null character. And we have learned that string 

9
00:00:25.380 --> 00:00:28.520
name itself holds the starting address of the string. So we 

10
00:00:28.520 --> 00:00:31.040
can simply give the string name and it will print

11
00:00:31.040 --> 00:00:31.490
the entire string

12
00:00:31.490 --> 00:00:34.760
So let us see a simple programme to understand 

13
00:00:34.760 --> 00:00:37.980
this. So we have string str equal to hello. Now 

14
00:00:37.980 --> 00:00:41.900
in printf function we print str using %s format 

15
00:00:41.900 --> 00:00:46.560
Specifier. So it will print h e l l o and stop 

16
00:00:46.570 --> 00:00:48.970
since the next character is the null character 

17
00:00:49.640 --> 00:00:52.840
Now what if we print str+1 using %s? 

18
00:00:52.840 --> 00:00:56.200
Then it will consider str +1 as 

19
00:00:56.200 --> 00:00:59.360
the starting of the string and will begin printing characters 

20
00:00:59.360 --> 00:01:01.930
from there until a null character is encountered 

21
00:01:02.070 --> 00:01:03.730
So here str + 1

22
00:01:03.730 --> 00:01:06.970
means the string address is moved by one byte which 

23
00:01:06.970 --> 00:01:08.929
is the address of this second character 

24
00:01:09.120 --> 00:01:12.520
So it will print e l l o.

25
00:01:12.520 --> 00:01:14.179
Now let us see an interesting programme 

26
00:01:14.240 --> 00:01:17.680
Here we have a string str equal to Hello. Now 

27
00:01:17.690 --> 00:01:20.550
we are declaring an integer variable i and we have 

28
00:01:20.550 --> 00:01:23.510
a for loop. for i equal to zero and condition is 

29
00:01:23.710 --> 00:01:26.470
str[i] that is it must not be null 

30
00:01:26.470 --> 00:01:30.370
character and i++ at the increment part 

31
00:01:30.370 --> 00:01:33.040
So in the first iteration we are printing string with base 

32
00:01:33.040 --> 00:01:36.110
address str + zero. So it will print the whole 

33
00:01:36.110 --> 00:01:41.130
string h e l l o. Now i is incremented and  

34
00:01:41.140 --> 00:01:44.370
str[i] = e so it will print the string from 

35
00:01:44.380 --> 00:01:48.450
str +1  So it will print e l l o

36
00:01:48.450 --> 00:01:51.520
Now i is incremented and str[2] equal to l  

37
00:01:51.520 --> 00:01:55.559
So again condition is true So print string from str+2

38
00:01:55.560 --> 00:01:59.380
and it will be printing l l o. Now i is incremented 

39
00:01:59.380 --> 00:02:03.280
again and becomes 3 and str[i] equal to l

40
00:02:03.280 --> 00:02:06.360
 So it will print string from str+3 

41
00:02:06.520 --> 00:02:10.730
that is l o. Now i is incremented and becomes 4

42
00:02:11.540 --> 00:02:14.750
in the fourth iteration it will print string from str+4 

43
00:02:14.750 --> 00:02:18.850
that is just 'o'. Now increment i and it 

44
00:02:18.850 --> 00:02:21.950
becomes 5. Now str[5] equal to null  

45
00:02:21.950 --> 00:02:24.950
character. So the condition fails and the control comes out 

46
00:02:24.950 --> 00:02:25.690
of the for loop.

47
00:02:26.340 --> 00:02:28.630
So that's all and thank you for watching this video 

