WEBVTT

1
00:00:00.040 --> 00:00:03.380
We have used the fast and slow pointer technique to 

2
00:00:03.380 --> 00:00:05.250
find the loop in a linked list 

3
00:00:05.640 --> 00:00:06.610
where in each iteration, 

4
00:00:06.610 --> 00:00:10.430
the slow pointer will move one position and 

5
00:00:10.430 --> 00:00:13.050
the fast pointer will move two positions

6
00:00:13.440 --> 00:00:16.220
If the linked list has a loop, the fast and 

7
00:00:16.220 --> 00:00:19.620
slow pointer will meet at some point in the 

8
00:00:19.620 --> 00:00:19.850
loop. 

9
00:00:20.440 --> 00:00:25.550
So after the execution of detect loop logic, both slow 

10
00:00:25.560 --> 00:00:29.150
and fast pointers will be present inside the loop 

11
00:00:29.640 --> 00:00:32.890
So to find the loop length, we can keep the 

12
00:00:32.890 --> 00:00:36.530
slow pointer where it is and we can traverse the whole 

13
00:00:36.530 --> 00:00:41.080
loop using another pointer until we find the slow pointer 

14
00:00:41.090 --> 00:00:45.240
again. So we can create another pointer, say current 

15
00:00:45.620 --> 00:00:47.150
and make it point to slow 

16
00:00:47.740 --> 00:00:51.880
And iterate the current pointer and increment the count until 

17
00:00:51.880 --> 00:00:55.110
the current pointer reaches the slow pointer again  and finally we can return the loop length.

