WEBVTT

1
00:00:00.000 --> 00:00:02.020
you will be given a string and you need to 

2
00:00:02.020 --> 00:00:05.080
reverse it Using recursion So we need to pass the 

3
00:00:05.080 --> 00:00:05.490
string 

4
00:00:05.500 --> 00:00:09.100
Str it's starting index I and the string length n 

5
00:00:09.110 --> 00:00:10.350
to the recursive function 

6
00:00:10.840 --> 00:00:13.780
And in every recursive call we need to swap the 

7
00:00:13.780 --> 00:00:18.230
starting index character and its corresponding last index character for 

8
00:00:18.230 --> 00:00:23.460
example here for index zero the corresponding last indexes five 

9
00:00:23.680 --> 00:00:26.670
So we need to swap str of zero and str 

10
00:00:26.670 --> 00:00:30.970
of five and for index one the corresponding last indexes 

11
00:00:30.970 --> 00:00:31.530
four 

12
00:00:31.690 --> 00:00:34.040
So we need to swap str of one and 

13
00:00:34.050 --> 00:00:35.950
str of four and so on 

14
00:00:36.740 --> 00:00:39.770
Once the swapping is over we need to invoke the 

15
00:00:39.770 --> 00:00:43.870
next recursive call with an incremented I value to swap 

16
00:00:43.880 --> 00:00:45.550
the next set of characters 

17
00:00:46.240 --> 00:00:49.510
We need to do this process till I reaches middle 

18
00:00:49.510 --> 00:00:52.670
index so we can stop the process when I equal 

19
00:00:52.670 --> 00:00:53.550
to n by two 

20
00:00:54.140 --> 00:00:55.730
And that is our base case 

21
00:00:55.790 --> 00:00:58.530
So let us see how this process will work 

22
00:00:58.580 --> 00:01:01.120
For example here the string is orange 

23
00:01:01.260 --> 00:01:02.540
So we passed the string 

24
00:01:02.550 --> 00:01:05.580
It's starting index zero and string length six to the 

25
00:01:05.580 --> 00:01:06.300
function 

26
00:01:06.360 --> 00:01:10.190
Now we need to perform the swap operation so swap 

27
00:01:10.190 --> 00:01:14.010
character said indices I and N minus i minus one 

28
00:01:14.180 --> 00:01:18.560
that is indices zero and five so O and 

29
00:01:18.570 --> 00:01:19.790
E are swapped 

30
00:01:19.860 --> 00:01:24.420
Next call the function again with incremental I value so 

31
00:01:24.420 --> 00:01:26.940
here starting index I is one 

32
00:01:27.060 --> 00:01:30.130
So its corresponding last index will be n minus i 

33
00:01:30.130 --> 00:01:33.600
minus one that is six minus one minus one which 

34
00:01:33.600 --> 00:01:34.250
is four 

35
00:01:34.840 --> 00:01:36.190
So swap the character 

36
00:01:36.190 --> 00:01:39.950
at indices one and four So R N G are 

37
00:01:39.950 --> 00:01:44.450
swapped Next call the function again with incremented I value 

38
00:01:45.240 --> 00:01:48.150
so here the starting index i is two 

39
00:01:48.250 --> 00:01:51.790
So its corresponding last index will be n minus i minus 

40
00:01:51.790 --> 00:01:52.070
one 

41
00:01:52.140 --> 00:01:55.890
That is six minus two minus one which is three So 

42
00:01:55.890 --> 00:01:59.490
we need to swap the characters that indices two and three 

43
00:01:59.560 --> 00:02:03.280
So a and n are swapped now called the function 

44
00:02:03.290 --> 00:02:05.650
again by passing incremented I value 

45
00:02:06.240 --> 00:02:09.480
And here I equal to three which is our length 

46
00:02:09.490 --> 00:02:10.890
n divided by two 

47
00:02:10.900 --> 00:02:13.920
So so I has become n by two which is 

48
00:02:13.920 --> 00:02:16.680
our base case so we can return and stop the 

49
00:02:16.680 --> 00:02:17.350
process 

50
00:02:17.730 --> 00:02:20.150
So using this logic you can try to solve the problem. 

