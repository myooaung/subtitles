WEBVTT

1
00:00:00.840 --> 00:00:01.540
Hi friends 

1
00:00:00.740 --> 00:00:05.140
In this video we are going to learn the relational operators in C

2
00:00:10.140 --> 00:00:13.110
So the relation operators are used 

3
00:00:13.110 --> 00:00:16.050
to compare two variables. and it will return one 

4
00:00:16.060 --> 00:00:18.939
If the comparison or relation is true otherwise it will 

5
00:00:18.940 --> 00:00:22.300
be returning zero. now let us see the major relational operators 

6
00:00:23.340 --> 00:00:26.320
first we have == which checks if 

7
00:00:26.330 --> 00:00:27.880
both left and right 

8
00:00:27.880 --> 00:00:31.150
operands are the same. So see an example we have 10==10 

9
00:00:31.160 --> 00:00:33.820
 So the comparison is true 

10
00:00:33.830 --> 00:00:36.700
So it will be returning one and next we have 

11
00:00:36.700 --> 00:00:38.410
10==7

12
00:00:38.690 --> 00:00:41.699
Now it is false since 10 is not equal to 7

13
00:00:41.710 --> 00:00:47.970
So the comparison return zero. next relational operator is 

14
00:00:47.970 --> 00:00:50.740
!= which is the not equal to 

15
00:00:50.740 --> 00:00:53.640
symbol and it checks If the left and right 

16
00:00:53.640 --> 00:00:55.599
operands are not equal to each other 

17
00:00:55.770 --> 00:00:59.010
So see this example we have 10 not equal to 20 

18
00:00:59.160 --> 00:01:01.960
and it will be returning true. And then we have 

19
00:01:01.960 --> 00:01:04.970
10 not equal to 20 which will return false Since 

20
00:01:04.970 --> 00:01:08.020
it is equal. Next is less than operator 

21
00:01:08.020 --> 00:01:10.429
So it checks If the left operand is less 

22
00:01:10.430 --> 00:01:13.990
than the right operand so the expression 5<10

23
00:01:14.000 --> 00:01:17.250
will return true and the expression 10 less than 10 

24
00:01:17.310 --> 00:01:21.220
will return false next is less than or equal to 

25
00:01:21.220 --> 00:01:22.850
operator and it checks

26
00:01:22.860 --> 00:01:25.590
If the left operand is less than or equal to 

27
00:01:25.590 --> 00:01:26.710
the right operand

28
00:01:26.780 --> 00:01:29.970
So 10 less than or equal to 10 will return 

29
00:01:29.980 --> 00:01:33.000
true since it is equal and 20 less than or 

30
00:01:33.000 --> 00:01:36.480
equal to 10 will return false since 20 is not less 

31
00:01:36.480 --> 00:01:39.050
than 10 and also it is not equal to 10

32
00:01:41.040 --> 00:01:44.279
Next is a greater than operator and it checks if 

33
00:01:44.280 --> 00:01:46.649
the left operand is greater than the right 

34
00:01:46.650 --> 00:01:47.149
operand 

35
00:01:47.290 --> 00:01:50.170
So 50 > 10 will return true and 

36
00:01:50.170 --> 00:01:52.250
5 > 10 will return 

37
00:01:52.260 --> 00:01:55.940
False. Next is the greater than or equal to operator 

38
00:01:56.010 --> 00:01:56.910
and it checks 

39
00:01:56.920 --> 00:01:59.770
If the left operand is greater than or equal to 

40
00:01:59.770 --> 00:02:02.410
the right operand so 10 greater than or equal 

41
00:02:02.410 --> 00:02:06.280
to 10 will return true since it is equal and 

42
00:02:06.290 --> 00:02:09.230
5 >= 10 will return false

43
00:02:09.240 --> 00:02:09.860
since five 

44
00:02:09.860 --> 00:02:12.600
is not greater than 10 and it is not equal 

45
00:02:12.600 --> 00:02:16.420
to 10 .now see a programme 

46
00:02:16.420 --> 00:02:19.460
Here. we have the main function and we're declaring two 

47
00:02:19.460 --> 00:02:22.660
integer variables a=5 and b=10 

48
00:02:22.660 --> 00:02:25.239
and we have some print functions here 

49
00:02:25.380 --> 00:02:28.910
The first print function will print return value of
 
50
00:02:28.910 --> 00:02:32.190
(%d == %d) is %d

51
00:02:32.770 --> 00:02:36.450
So we have the first %d corresponding to a 

52
00:02:36.440 --> 00:02:39.200
the second one corresponding to b and the third one

53
00:02:39.200 --> 00:02:42.270
corresponding to the expression a==b

54
00:02:42.280 --> 00:02:42.660
so 

55
00:02:42.660 --> 00:02:46.320
As we discussed this expression a==b

56
00:02:46.330 --> 00:02:47.829
it will be returning one 

57
00:02:47.840 --> 00:02:50.970
If the comparison is true otherwise it will be returning 

58
00:02:50.970 --> 00:02:51.570
zero 

59
00:02:51.580 --> 00:02:55.020
So here five is not equal to ten so third 

60
00:02:55.030 --> 00:02:58.809
integer printed here will be zero and the output of 

61
00:02:58.810 --> 00:03:01.610
the first print function will be the return value of 

62
00:03:01.620 --> 00:03:04.549
5 == 10 is zero 

63
00:03:05.640 --> 00:03:08.840
Similarly the next statement will print the return value 

64
00:03:08.840 --> 00:03:12.380
5!=10 is one and the next 

65
00:03:12.380 --> 00:03:14.140
function will print Return value 

66
00:03:14.140 --> 00:03:17.540
5<10 is one since 5<10 

67
00:03:18.060 --> 00:03:20.420
and the next function will print return value 

68
00:03:20.420 --> 00:03:23.790
5<=10 is one since 

69
00:03:23.790 --> 00:03:26.809
five is less than 10 and the next print function will 

70
00:03:26.810 --> 00:03:30.780
print return value of 5>10 is 0 since five 

71
00:03:30.780 --> 00:03:32.170
is not greater than 10 

72
00:03:32.250 --> 00:03:35.619
And finally this function will print the return value of  

73
00:03:35.630 --> 00:03:38.800
5>=10 is  0 since 5 is 

74
00:03:38.800 --> 00:03:41.380
not greater than 10 and it is not equal to 

75
00:03:41.380 --> 00:03:41.590
10 

76
00:03:42.640 --> 00:03:44.920
So that's all and thank you for watching this video 

