WEBVTT

1
00:00:00.140 --> 00:00:03.500
in this video let us learn the delete front operation 

2
00:00:03.500 --> 00:00:04.850
and its implementation 

3
00:00:05.240 --> 00:00:08.240
The delete front operation will remove the element from the 

4
00:00:08.240 --> 00:00:09.460
front of the deque 

5
00:00:09.470 --> 00:00:11.620
Here we have three cases 

6
00:00:11.850 --> 00:00:15.020
The first one is when the deque is empty and the 

7
00:00:15.020 --> 00:00:16.040
second one is when 

8
00:00:16.040 --> 00:00:17.970
deque has more than one element 

9
00:00:18.340 --> 00:00:20.930
That is a normal case and the third one is 

10
00:00:20.930 --> 00:00:23.430
when deque has only one element so 

11
00:00:23.430 --> 00:00:24.150
let us discuss 

12
00:00:24.160 --> 00:00:28.210
All three scenarios one by one first let us discuss the 

13
00:00:28.220 --> 00:00:28.670
empty

14
00:00:28.670 --> 00:00:29.420
deque case 

15
00:00:29.760 --> 00:00:33.560
In this case we cannot perform Delete operation as the 

16
00:00:33.560 --> 00:00:37.150
deque is empty so we can choose print deque empty 

17
00:00:37.540 --> 00:00:40.410
Next let us discuss the normal deque case 

18
00:00:40.710 --> 00:00:43.460
Let's take this sample deque here 

19
00:00:43.470 --> 00:00:46.900
We need to remove the front element to remove the 

20
00:00:46.900 --> 00:00:47.700
front node 

21
00:00:47.870 --> 00:00:50.480
First we need to back up the front node in 

22
00:00:50.480 --> 00:00:53.760
a temporary variable and then we can make the front 

23
00:00:53.760 --> 00:00:56.030
pointer point to its next node 

24
00:00:56.160 --> 00:00:57.320
That is front 

25
00:00:57.320 --> 00:00:58.570
equal to front next 

26
00:00:58.800 --> 00:01:03.010
Now the previous of front pointer will still point to 

27
00:01:03.010 --> 00:01:05.600
the old node so we need to make it null 

28
00:01:05.600 --> 00:01:06.250
as well 

29
00:01:06.340 --> 00:01:09.560
So after moving the front pointer we need to set 

30
00:01:09.570 --> 00:01:14.110
the front of previous to null so set Front prev 

31
00:01:14.110 --> 00:01:14.840
equal to null 

32
00:01:15.110 --> 00:01:17.630
And finally we can free the backed up front 

33
00:01:17.630 --> 00:01:22.520
node that's it Now let's discuss The last case for 

34
00:01:22.520 --> 00:01:24.610
the deque has only one element 

35
00:01:24.950 --> 00:01:27.810
If the deque has only one element after the removal 

36
00:01:27.820 --> 00:01:29.090
it will become empty 

37
00:01:29.250 --> 00:01:32.570
So in this case after the removal a front pointer

38
00:01:32.570 --> 00:01:33.510
 becomes null 

39
00:01:33.520 --> 00:01:36.580
We need to reset rear Pointer to null as well 

40
00:01:36.990 --> 00:01:40.350
That's it the logic of delete front operation is very 

41
00:01:40.350 --> 00:01:40.940
simple 

42
00:01:40.950 --> 00:01:44.060
First check If front is null if it's null the 

43
00:01:44.060 --> 00:01:48.300
deque is empty so we can just print deque is empty if 

44
00:01:48.300 --> 00:01:50.710
it is not empty we need to remove the front 

45
00:01:50.710 --> 00:01:51.070
node 

46
00:01:51.290 --> 00:01:54.380
So back up the front node in temporary pointer and 

47
00:01:54.380 --> 00:01:57.840
then make front node point to its next node that 

48
00:01:57.840 --> 00:02:00.050
is front equal to front next 

49
00:02:00.640 --> 00:02:03.490
After that we need to set previous of front 

50
00:02:03.840 --> 00:02:07.310
to null so write front prev equal to null 

51
00:02:07.680 --> 00:02:08.860
And finally free 

52
00:02:08.860 --> 00:02:10.000
The temporary pointer

53
00:02:10.000 --> 00:02:11.250
 and that's it 

54
00:02:11.740 --> 00:02:13.850
Here the logic is almost done 

55
00:02:14.240 --> 00:02:16.570
We just need to consider one more scenario 

56
00:02:16.680 --> 00:02:19.690
That is when the deque has only one element in 

57
00:02:19.690 --> 00:02:23.540
this case after removal that is after front equal to 

58
00:02:23.540 --> 00:02:26.830
front next statement The front pointer will point to 

59
00:02:26.830 --> 00:02:30.210
null So after removal we need to null check the 

60
00:02:30.210 --> 00:02:33.420
front pointer If it's null we need to reset 

61
00:02:33.420 --> 00:02:36.530
the rear pointer to null so write if front equal 

62
00:02:36.530 --> 00:02:40.220
to null rear equal to null otherwise we just need to 

63
00:02:40.220 --> 00:02:43.070
set the previous of front pointer to null so we 

64
00:02:43.070 --> 00:02:45.650
can move this line in the else part 

65
00:02:46.140 --> 00:02:49.220
That said this is the implementation of the delete front 

66
00:02:49.220 --> 00:02:52.990
operation and the next video we will implement delete

67
00:02:52.990 --> 00:02:54.080
rear operation.

