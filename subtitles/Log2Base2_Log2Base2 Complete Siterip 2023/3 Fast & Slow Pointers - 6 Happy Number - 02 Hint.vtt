WEBVTT

1
00:00:00.140 --> 00:00:02.150
Let us plot the number sequence 

2
00:00:02.190 --> 00:00:04.970
And from that we can get the logic to solve 

3
00:00:04.980 --> 00:00:05.950
this problem. 

4
00:00:06.440 --> 00:00:10.570
First let us plot the sequence for happy number 19 

5
00:00:10.830 --> 00:00:15.750
It is 82, 68, 100 and 1 

6
00:00:16.240 --> 00:00:20.480
So while we find sum of squares of digits, 

7
00:00:20.480 --> 00:00:24.350
for number one we will get one as result 

8
00:00:24.430 --> 00:00:26.850
And it will result in one forever 

9
00:00:27.240 --> 00:00:30.530
So for happy numbers, it will get into a loop 

10
00:00:30.540 --> 00:00:31.150
in one 

11
00:00:31.740 --> 00:00:35.020
Now say the sequence of non happy number 15 

12
00:00:35.210 --> 00:00:43.420
It will be 15 26 40 16 37 58 89 

13
00:00:43.430 --> 00:00:49.390
145 42 20 and 4. And 4's digit square sum

14
00:00:49.390 --> 00:00:52.850
 will be 16 and the loop will start 

15
00:00:53.040 --> 00:00:56.400
This sequence is similar to a linked list with loop

16
00:00:56.410 --> 00:00:57.620
for happy number 

17
00:00:57.630 --> 00:01:00.710
The loop starts at the number one and  

18
00:01:00.710 --> 00:01:01.600
for non happy number 

19
00:01:01.750 --> 00:01:05.140
The loop starts at some random number other than one 

20
00:01:05.530 --> 00:01:08.300
Like how we detect the loop in a linked list 

21
00:01:08.310 --> 00:01:12.780
We can use slow and fast pointers here. In slow 

22
00:01:12.780 --> 00:01:16.770
pointer find the sum of square of digits one step 

23
00:01:16.780 --> 00:01:20.450
at a time and in fast pointer find the sum of

24
00:01:20.450 --> 00:01:24.200
square of digits two steps at a time and do 

25
00:01:24.200 --> 00:01:26.550
the same process until they meet 

26
00:01:26.940 --> 00:01:29.930
If the meeting point is one, it is a happy number

27
00:01:29.930 --> 00:01:30.530


28
00:01:30.600 --> 00:01:32.790
And if it is not one, it is not a 

29
00:01:32.790 --> 00:01:33.650
happy number.

30
00:01:34.040 --> 00:01:36.760
For example, let us take this number 19. 

31
00:01:36.770 --> 00:01:42.380
Initially both slow and fast refers the number 19 

32
00:01:42.480 --> 00:01:45.850
In the next step, slow will find its next number 

33
00:01:45.860 --> 00:01:47.250
that is 82.

34
00:01:47.940 --> 00:01:50.990
At the same time, fast will find the second next 

35
00:01:50.990 --> 00:01:52.170
element in the sequence 68

36
00:01:52.240 --> 00:01:53.350


37
00:01:53.740 --> 00:01:57.460
And in the next step, slow will find number 68 

38
00:01:57.870 --> 00:02:01.270
fast will find number one and in the next step 

39
00:02:01.340 --> 00:02:05.420
Slow will find the number 100. Fast will self loop 

40
00:02:05.430 --> 00:02:06.450
at number one.

41
00:02:06.840 --> 00:02:10.470
And in the next step both slow and fast will 

42
00:02:10.470 --> 00:02:14.290
meet at number one. So we can conclude that 19 

43
00:02:14.300 --> 00:02:15.670
is a happy number. 

44
00:02:15.720 --> 00:02:20.600
Similarly if we find the sequence of number 15, 

45
00:02:20.600 --> 00:02:24.560
slow moves to next element ahead and fast moves to second 

46
00:02:24.560 --> 00:02:30.250
next element. So slow reaches 26 while fast reaches 40 

47
00:02:30.640 --> 00:02:34.330
In the next step, slow reaches 40 and fast reaches 37.

48
00:02:34.330 --> 00:02:38.940
In next step, slow moves to 16 and fast 

49
00:02:38.940 --> 00:02:43.750
moves to 89 and in next step slow reaches 37 

50
00:02:44.140 --> 00:02:45.750
Fast reaches 42 

51
00:02:46.140 --> 00:02:50.800
In the next step slow reaches 58 fast reaches 4 

52
00:02:51.230 --> 00:02:52.910
similarly in next step 

53
00:02:52.990 --> 00:02:57.820
Slow moves to 89 and fast moves to 37. In next 

54
00:02:57.820 --> 00:03:03.330
step, slow reaches 145 and fast reaches 89. 

55
00:03:03.330 --> 00:03:07.220
In next step, both slow and fast will meet at number 42

56
00:03:07.230 --> 00:03:11.500
So we can stop the process and conclude that 

57
00:03:11.630 --> 00:03:15.190
15 is not a happy number since the element at 

58
00:03:15.190 --> 00:03:17.250
meeting point is not one.

