WEBVTT

1
00:00:01.040 --> 00:00:03.390
hi friends In this video we are going to discuss 

2
00:00:03.390 --> 00:00:04.920
about String and Pointer 

3
00:00:11.240 --> 00:00:13.700
So as we have studied the string is a character 

4
00:00:13.710 --> 00:00:14.060
array 

5
00:00:14.060 --> 00:00:16.919
which is terminated by the null character and the string 

6
00:00:16.930 --> 00:00:18.430
itself act as a pointer 

7
00:00:18.790 --> 00:00:21.830
So for an example consider the character array or string of 

8
00:00:21.830 --> 00:00:22.590
size six hello.

9
00:00:22.600 --> 00:00:26.180
So the string name str itself is a pointer 

10
00:00:26.180 --> 00:00:28.450
to the base address of the string and so it will 

11
00:00:28.450 --> 00:00:30.250
hold 1024 

12
00:00:30.640 --> 00:00:33.150
So here str is a pointer to the first 

13
00:00:33.150 --> 00:00:34.150
character of the string 

14
00:00:34.640 --> 00:00:37.500
Or we can say str+0 points in the first 

15
00:00:37.500 --> 00:00:40.220
character of the string and str+1 points to 

16
00:00:40.220 --> 00:00:43.450
the second character of the string and str+2 points 

17
00:00:43.450 --> 00:00:46.800
to the third character of the string and str+3 points 

18
00:00:46.800 --> 00:00:50.110
the fourth character of the string and str+4 points 

19
00:00:50.110 --> 00:00:53.770
to the fifth character of the string and finally  

20
00:00:53.770 --> 00:00:56.990
str+5 points to the sixth character which is null character 

21
00:00:57.510 --> 00:00:59.770
Now let us see how to get address of each 

22
00:00:59.770 --> 00:01:03.700
character. So consider the C program, first we're creating the 

23
00:01:03.700 --> 00:01:04.020
string 

24
00:01:04.020 --> 00:01:07.420
Hello and now we're declaring integer variable i and 

25
00:01:07.420 --> 00:01:11.600
using for loop we're printing address of each character in the string 

26
00:01:12.540 --> 00:01:15.630
In the first iteration address of str[0]

27
00:01:15.630 --> 00:01:19.539
is printed which is str+0 equal to 1024 

28
00:01:19.850 --> 00:01:22.620
In the second iteration, address of str[1]

29
00:01:22.630 --> 00:01:26.310
is printed which is str+1 that is 1025 

30
00:01:27.140 --> 00:01:30.390
Similarly in third iteration address of str[2] 

31
00:01:30.390 --> 00:01:32.960
is printed which is str+2 that is equal to 1026 

32
00:01:32.960 --> 00:01:37.259
In forth iteration address of str[3]

33
00:01:37.270 --> 00:01:41.160
is printed which is str+3 that is equal to 1027

34
00:01:41.160 --> 00:01:44.690
In fifth iteration address of str[4]

35
00:01:44.690 --> 00:01:47.360
is printed which is str+4 that is equal to 1028

36
00:01:47.360 --> 00:01:52.250
and in sixth iteration str[5] equal to 

37
00:01:52.250 --> 00:01:52.890
null character 

38
00:01:53.030 --> 00:01:56.320
So control comes out of for loop. Now let us see 

39
00:01:56.320 --> 00:01:59.119
how to print each character. We have to use the 

40
00:01:59.120 --> 00:02:02.630
value at operator * to access the value stored at a 

41
00:02:02.630 --> 00:02:04.020
particular memory location 

42
00:02:04.740 --> 00:02:07.890
Here we can access the first character h using 

43
00:02:07.890 --> 00:02:11.720
*(str+0) second character e using 

44
00:02:11.730 --> 00:02:14.980
*(str+1) and we can access the third character 

45
00:02:14.990 --> 00:02:18.440
l using *(str+2) and forth character 

46
00:02:18.450 --> 00:02:21.770
l using *(str+3) and fifth character 

47
00:02:21.770 --> 00:02:25.240
using *(str+4) and finally the sixth 

48
00:02:25.240 --> 00:02:27.740
character using *(str+5)

49
00:02:28.070 --> 00:02:31.780
So consider the C program to print each character in 

50
00:02:31.780 --> 00:02:35.490
the string until we reach the null character first we are creating 

51
00:02:35.490 --> 00:02:38.810
the string Hello and declaring an integer variable i and 

52
00:02:38.810 --> 00:02:41.660
using this for loop we are printing each character in 

53
00:02:41.660 --> 00:02:43.680
string till we reach the null character

54
00:02:44.240 --> 00:02:47.320
In first iteration str[0] is printed which is 

55
00:02:47.320 --> 00:02:50.510
*(str+0) equal to H and in 

56
00:02:50.510 --> 00:02:53.670
second iteration str[1] is printed which is 

57
00:02:53.670 --> 00:02:56.890
*(str+1) equal to e and in third 

58
00:02:56.890 --> 00:02:59.740
iteration str[2] is printed which is 

59
00:02:59.750 --> 00:03:03.310
*(str+2) equal to l and in fourth iteration 

60
00:03:03.310 --> 00:03:05.930
as str[3] is printed which is *(str+3)

61
00:03:05.930 --> 00:03:09.709
equal to l and in fifth iteration str[4] 

62
00:03:09.710 --> 00:03:12.820
is printed which is *(str+4)

63
00:03:12.830 --> 00:03:17.040
equal to o. In sixth iterations str[5] equal 

64
00:03:17.040 --> 00:03:20.109
to null character. So control comes out of the for 

65
00:03:20.110 --> 00:03:26.600
loop since the condition became false and returns zero. So that's all and thank you for watching this video. 

