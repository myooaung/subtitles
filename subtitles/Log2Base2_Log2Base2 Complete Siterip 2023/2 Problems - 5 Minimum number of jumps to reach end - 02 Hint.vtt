WEBVTT

1
00:00:00.240 --> 00:00:03.370
let us take this array and calculate the minimum number 

2
00:00:03.370 --> 00:00:06.180
of jumps required to reach the end index 

3
00:00:07.040 --> 00:00:10.190
To solve this we need to create one more array 

4
00:00:10.330 --> 00:00:14.780
see jumps In this jump array we will find and stored 

5
00:00:14.780 --> 00:00:17.890
the minimum number of jumps to reach each index 

6
00:00:18.250 --> 00:00:22.100
For example in index zero we will find and store 

7
00:00:22.100 --> 00:00:25.750
the minimum number of jumps required to reach index zero 

8
00:00:26.240 --> 00:00:27.330
in index three 

9
00:00:27.420 --> 00:00:30.490
We will find and stored the minimum number of jumps 

10
00:00:30.500 --> 00:00:35.080
required to reach index three and so on simply 

11
00:00:35.100 --> 00:00:39.280
Each index will have one sub problem solution and using 

12
00:00:39.280 --> 00:00:43.750
that solution we will solve another sub problem and finally 

13
00:00:43.760 --> 00:00:46.750
we will arrive at the overall optimal solution 

14
00:00:47.440 --> 00:00:52.020
so let us Solve each sub problem one by one to reach 

15
00:00:52.030 --> 00:00:55.790
index zero we don't need any jumps so simply fill 

16
00:00:55.790 --> 00:00:57.450
jumps of zero as one 

17
00:00:58.110 --> 00:01:01.580
Next is index one to find a minimum number of 

18
00:01:01.580 --> 00:01:05.140
jumps for index one First we need to figure out 

19
00:01:05.150 --> 00:01:08.380
all the possible ways to reach Index one and there 

20
00:01:08.380 --> 00:01:11.050
is only one way that is from index zero 

21
00:01:11.440 --> 00:01:16.100
So keep another variable J at index zero here 

22
00:01:16.110 --> 00:01:19.480
What we need to check is can we reached Index I 

23
00:01:19.480 --> 00:01:23.360
from J with array of J steps that is can 

24
00:01:23.360 --> 00:01:23.850
we reached 

25
00:01:23.860 --> 00:01:27.310
Index one from index zero with array of J 

26
00:01:27.320 --> 00:01:31.870
That is two steps yes we can from index zero 

27
00:01:31.880 --> 00:01:35.440
We can take two steps that is we can reach 

28
00:01:35.440 --> 00:01:36.950
the index up to two 

29
00:01:37.940 --> 00:01:41.740
Our target index one is within this range so we 

30
00:01:41.740 --> 00:01:42.830
can move from index 

31
00:01:42.840 --> 00:01:47.650
0 to 1 with one jump so mark jumps of one as one 

32
00:01:48.140 --> 00:01:51.160
It simply means we can reach index one from the 

33
00:01:51.160 --> 00:01:53.950
beginning of the array with just one jump 

34
00:01:54.640 --> 00:01:58.050
Now let us calculate for index two what are all 

35
00:01:58.050 --> 00:02:01.250
the possible ways to reach index two We can reach 

36
00:02:01.260 --> 00:02:04.450
index to either from index zero or from index 

37
00:02:04.450 --> 00:02:08.560
one so we need to check both the Indices in general 

38
00:02:09.140 --> 00:02:12.470
to find results for index I we need to check 

39
00:02:12.480 --> 00:02:15.990
All previous indices that is index zero to i

40
00:02:15.990 --> 00:02:16.750
minus one 

41
00:02:17.340 --> 00:02:20.020
So J will we iterated from zero to i 

42
00:02:20.020 --> 00:02:20.440
minus 

43
00:02:20.440 --> 00:02:25.410
1th index Now keep J at index zero and from 

44
00:02:25.420 --> 00:02:28.900
index zero can we reached index two with two steps 

45
00:02:29.300 --> 00:02:32.300
Zero plus two is two which is greater than or 

46
00:02:32.310 --> 00:02:33.170
equal to two 

47
00:02:33.410 --> 00:02:35.870
So index two is reachable from Index

48
00:02:35.880 --> 00:02:39.050
Zero so mark jumps of two as one 

49
00:02:39.840 --> 00:02:44.260
Next move J to index one and check from index 

50
00:02:44.260 --> 00:02:47.060
one can we reached index to with three steps 

51
00:02:47.440 --> 00:02:50.270
One plus three is four which is greater than or 

52
00:02:50.270 --> 00:02:53.900
equal to two so index two is reachable from index 

53
00:02:53.900 --> 00:02:54.250
one 

54
00:02:55.040 --> 00:02:58.150
Here we are reaching index two from index one 

55
00:02:58.640 --> 00:03:01.890
Our problems statement is to find a minimum number of 

56
00:03:01.890 --> 00:03:04.910
jumps to reach the end of the array from the beginning 

57
00:03:04.920 --> 00:03:05.490
index 

58
00:03:06.710 --> 00:03:10.000
So here it takes one step to reach index two 

59
00:03:10.000 --> 00:03:12.270
from index one here 

60
00:03:12.280 --> 00:03:15.460
We also need to consider how many steps are required 

61
00:03:15.460 --> 00:03:16.650
to reach index one 

62
00:03:17.340 --> 00:03:20.860
We have already found that the minimum number of steps 

63
00:03:20.860 --> 00:03:24.160
to reach Index one is one so we need to 

64
00:03:24.170 --> 00:03:25.350
add that as well 

65
00:03:26.540 --> 00:03:29.380
So in this way it takes two jumps to reach 

66
00:03:29.390 --> 00:03:33.630
index two that is one jump for index 0 to 

67
00:03:33.630 --> 00:03:36.750
1 and another one jump for index 1 to 2 

68
00:03:37.540 --> 00:03:40.530
But we already found that from Index zero we can 

69
00:03:40.530 --> 00:03:43.680
reach index two with one jump which is lesser than 

70
00:03:43.690 --> 00:03:44.050
two 

71
00:03:44.540 --> 00:03:47.100
So this is not an optimal result so we can 

72
00:03:47.100 --> 00:03:47.650
leave it 

73
00:03:48.540 --> 00:03:51.320
So whenever we find a minimum jump we need to 

74
00:03:51.330 --> 00:03:52.120
update it 

75
00:03:52.350 --> 00:03:53.950
Otherwise we can skip it 

76
00:03:54.340 --> 00:03:56.250
So jumps of two remains one 

77
00:03:56.710 --> 00:04:00.040
That is the minimum number of jumps required to reach 

78
00:04:00.050 --> 00:04:01.350
index two is one 

79
00:04:02.150 --> 00:04:05.510
Now let us calculate for index three so move I 

80
00:04:05.520 --> 00:04:09.180
to index three and move J to index zero can 

81
00:04:09.180 --> 00:04:12.620
we reached Index three from Index zero two is not 

82
00:04:12.620 --> 00:04:15.180
greater than or equal to three so we cannot 

83
00:04:15.440 --> 00:04:18.910
move J to index one can we reach index three 

84
00:04:18.910 --> 00:04:22.430
from index one Yes since three is greater than or 

85
00:04:22.430 --> 00:04:23.250
equal to three 

86
00:04:23.740 --> 00:04:26.450
So we can make one jump to reach index three 

87
00:04:26.450 --> 00:04:30.110
from index one and minimum number of jumps to reach 

88
00:04:30.120 --> 00:04:31.750
index one is one 

89
00:04:32.210 --> 00:04:34.280
So one plus one is equal to two 

90
00:04:34.600 --> 00:04:36.260
So mark jumps of three 

91
00:04:36.270 --> 00:04:39.790
As two now from index two we can make one 

92
00:04:39.790 --> 00:04:43.660
jump to reach index three and to reach index two 

93
00:04:43.780 --> 00:04:45.570
we need minimum one jump 

94
00:04:45.830 --> 00:04:48.380
So one plus one equal to two which is not 

95
00:04:48.380 --> 00:04:49.980
less than the previous minimum 

96
00:04:49.990 --> 00:04:53.850
So no need to update now for index four start 

97
00:04:53.850 --> 00:04:57.030
from index zero we cannot reach index four from index 

98
00:04:57.030 --> 00:05:01.390
zero with two steps now from index one we can 

99
00:05:01.390 --> 00:05:05.010
make three steps maximum so we can reach index four 

100
00:05:05.020 --> 00:05:08.420
in one jump and to reach index one we need 

101
00:05:08.430 --> 00:05:12.530
one jump at least so total one plus one equal 

102
00:05:12.530 --> 00:05:13.520
to two so 

103
00:05:13.520 --> 00:05:16.910
jumps of four is equal to two now from index 

104
00:05:16.910 --> 00:05:20.710
two we cannot reach index four now Check Index three 

105
00:05:20.810 --> 00:05:24.050
And with one jump we can reach index four and 

106
00:05:24.050 --> 00:05:26.770
we need two jumps minimum to reach index three 

107
00:05:26.780 --> 00:05:30.230
So total jumps equal to one plus two that is three 

108
00:05:30.530 --> 00:05:32.840
which is not less than the previous minimum 

109
00:05:32.890 --> 00:05:35.530
So we do not need to update it and we 

110
00:05:35.530 --> 00:05:36.860
got a final result 

111
00:05:37.000 --> 00:05:40.090
The minimum number of jumps needed to reach the end is two.

