WEBVTT

1
00:00:00.140 --> 00:00:00.990
Hi friends 

2
00:00:01.000 --> 00:00:03.260
In this video we are going to learn how to 

3
00:00:03.260 --> 00:00:05.350
search a node in a singly linked list 

4
00:00:12.040 --> 00:00:13.870
So we have a singly linked list with four nodes 

5
00:00:13.870 --> 00:00:17.970
with values 10 20 30 and 40 

6
00:00:18.140 --> 00:00:21.470
And this is the code to implement the program the 

7
00:00:21.470 --> 00:00:25.000
function searchNode will be doing the search operation and 

8
00:00:25.000 --> 00:00:26.849
returns the result of the search 

9
00:00:27.240 --> 00:00:29.630
We are passing the head of the linked list and 

10
00:00:29.630 --> 00:00:33.430
the key to be searched into the function. First the 

11
00:00:33.430 --> 00:00:36.739
address of the head node which is 1024 here 

12
00:00:36.750 --> 00:00:38.290
is stored in temp 

13
00:00:38.710 --> 00:00:41.700
Now this while loop is used to traverse and check 

14
00:00:41.710 --> 00:00:45.020
if the node is the key If the key is found 

15
00:00:45.110 --> 00:00:48.150
then the function returns one and if the key is 

16
00:00:48.150 --> 00:00:50.750
not found then it returns minus one 

17
00:00:51.540 --> 00:00:55.199
Here we are searching for element 30 So key equal 

18
00:00:55.200 --> 00:00:58.489
to 30 here first we check If temp which is 

19
00:00:58.490 --> 00:01:01.790
pointing to head is null If it is null it 

20
00:01:01.790 --> 00:01:04.300
means we have reached the end of the linked lists 

21
00:01:04.350 --> 00:01:07.170
and it does not enter the while loop here 

22
00:01:07.180 --> 00:01:10.649
temp equal to 1024 which is not equal to null 

23
00:01:10.730 --> 00:01:14.530
So enter the loop now check If the data at address 

24
00:01:14.530 --> 00:01:19.080
1024 is the key so compare 10 with 30 

25
00:01:19.090 --> 00:01:21.140
But it is not the same so 

26
00:01:21.140 --> 00:01:24.860
If condition is failed so jump to the next statement 

27
00:01:25.050 --> 00:01:26.949
temp equal to temp Next 

28
00:01:27.540 --> 00:01:30.429
Now temp will be holding the next node address which 

29
00:01:30.430 --> 00:01:32.220
is 2024 

30
00:01:32.230 --> 00:01:35.750
So temp now points to the second node again 

31
00:01:35.750 --> 00:01:40.119
The while condition is checked temp equal to 2024 

32
00:01:40.120 --> 00:01:43.259
which is not equal to null So enter the loop

33
00:01:43.520 --> 00:01:47.340
now compare 20 with 30 But it's not 

34
00:01:47.340 --> 00:01:48.210
the same value 

35
00:01:48.210 --> 00:01:51.470
So if condition again failed so it jumps to the 

36
00:01:51.470 --> 00:01:54.940
next statement and temp will now point to the next 

37
00:01:54.940 --> 00:01:58.590
node at 3024 now again check if 

38
00:01:58.590 --> 00:02:02.650
temp has become null no So enter the while loop 

39
00:02:02.740 --> 00:02:03.179
check 

40
00:02:03.190 --> 00:02:06.860
If data at 3024 is equal to the key so 

41
00:02:06.860 --> 00:02:10.580
compare the data 30 with the key 30 both are 

42
00:02:10.580 --> 00:02:11.200
the same 

43
00:02:11.210 --> 00:02:14.800
So if condition is true here so it will return 

44
00:02:14.800 --> 00:02:17.140
one which means key is found 

45
00:02:17.230 --> 00:02:19.400
So this is how it is working 

46
00:02:19.550 --> 00:02:22.590
Now let us see Another case where search key is 

47
00:02:22.590 --> 00:02:25.500
not found so let the key to be searched be 

48
00:02:25.500 --> 00:02:29.650
100 first The head address which is 1024 here 

49
00:02:29.640 --> 00:02:33.480
is stored in temp and we have the while condition 

50
00:02:33.550 --> 00:02:37.670
temp not equal to null and temp is 1024 

51
00:02:37.670 --> 00:02:39.290
here which is not equal to null

52
00:02:39.300 --> 00:02:42.560
So enter the loop now check If the data at 

53
00:02:42.560 --> 00:02:48.180
address 1024 is the key so compare 10 with 100 

54
00:02:48.190 --> 00:02:52.500
But the comparison returns a false So if condition fails 

55
00:02:52.510 --> 00:02:56.020
so jump to the next statement temp equal to temp

56
00:02:56.020 --> 00:02:56.590
next 

57
00:02:56.710 --> 00:02:59.690
Now temp will be holding the next node address which 

58
00:02:59.690 --> 00:03:03.950
is 2024 So temp now points to the second node 

59
00:03:04.440 --> 00:03:08.320
Now again we have temp equal to 2024 which 

60
00:03:08.320 --> 00:03:11.350
is not equal to null So while condition is true 

61
00:03:11.350 --> 00:03:14.690
so enter the loop and check if node two is 

62
00:03:14.690 --> 00:03:19.270
holding 100 But the comparison is returning a false and 

63
00:03:19.270 --> 00:03:22.740
the if condition failed So temp will now point to 

64
00:03:22.740 --> 00:03:26.810
the next node at 3024 again check the while 

65
00:03:26.810 --> 00:03:30.239
condition 3024 is not equal to null so 

66
00:03:30.240 --> 00:03:33.850
enter the loop compare the data at 3024 with the 

67
00:03:33.860 --> 00:03:37.359
key But we have 30 and the key is 100 which 

68
00:03:37.360 --> 00:03:38.320
are not same 

69
00:03:38.500 --> 00:03:43.109
So if condition failed again and Temp will now point 

70
00:03:43.110 --> 00:03:46.290
to the next node at 4024 again check the 

71
00:03:46.290 --> 00:03:49.620
while condition 4024 is not equal to null so 

72
00:03:49.620 --> 00:03:52.970
enter the loop and compare 40 with 100 

73
00:03:53.100 --> 00:03:54.250
It is not the same 

74
00:03:54.250 --> 00:03:58.040
So if condition failed again and temp equal to temp

75
00:03:58.040 --> 00:04:00.970
next what is the next value of node 4 it 

76
00:04:00.970 --> 00:04:03.990
is null so null will be stored in the temp 

77
00:04:04.410 --> 00:04:07.850
Now we have the while condition again but we have 

78
00:04:07.860 --> 00:04:09.250
temp equal to null 

79
00:04:09.240 --> 00:04:12.640
So the while condition is failed and it will return 

80
00:04:12.640 --> 00:04:15.890
minus one which means the key is not found 

81
00:04:16.070 --> 00:04:17.060
So that's it 

82
00:04:17.270 --> 00:04:20.070
Now let us talk about the time complexity The 

83
00:04:20.070 --> 00:04:22.870
best case is when the search key is present in the 

84
00:04:22.870 --> 00:04:26.640
first node itself So while loop need to execute only 

85
00:04:26.640 --> 00:04:29.650
once So the best case time complexity will be 

86
00:04:29.650 --> 00:04:30.750
order of one 

87
00:04:31.840 --> 00:04:34.550
The worst case is when the search key is present 

88
00:04:34.560 --> 00:04:37.740
in the last node So while loop will work n 

89
00:04:37.740 --> 00:04:40.990
times if you have n nodes So the worst case time complexity will be O(n) 

