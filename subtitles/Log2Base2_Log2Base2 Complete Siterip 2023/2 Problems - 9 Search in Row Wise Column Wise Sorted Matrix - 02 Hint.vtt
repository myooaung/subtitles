WEBVTT

1
00:00:00.240 --> 00:00:01.540
in our input matrix 

2
00:00:01.550 --> 00:00:03.870
All the rows and columns are sorted 

3
00:00:03.990 --> 00:00:06.900
Thus this gives us a hint that we can use 

4
00:00:06.900 --> 00:00:11.250
binary search to solve this problem in arrays how 

5
00:00:11.250 --> 00:00:13.040
to be execute binary search 

6
00:00:13.360 --> 00:00:16.740
We will compare n with the middle element of the array

7
00:00:17.010 --> 00:00:21.000
eliminate one half and safely proceed searching in the other 

8
00:00:21.000 --> 00:00:21.450
half 

9
00:00:21.940 --> 00:00:24.790
We have a matrix here the Key part is 

10
00:00:24.940 --> 00:00:28.580
From which element are we going to start comparing We 

11
00:00:28.580 --> 00:00:31.020
have to choose an element in such a way that 

12
00:00:31.090 --> 00:00:35.260
we could eliminate a few elements and safely proceed searching 

13
00:00:35.270 --> 00:00:36.890
in one part of the matrix 

14
00:00:37.540 --> 00:00:40.430
Let us assume that we're going to start the search 

15
00:00:40.430 --> 00:00:43.090
with any element in the middle of the matrix 

16
00:00:43.510 --> 00:00:45.400
First let us take elements 

17
00:00:45.400 --> 00:00:50.350
16 in 11 31 is greater than 16 

18
00:00:51.220 --> 00:00:55.560
Thus 31 cannot be present before 16 in first row 

19
00:00:55.810 --> 00:01:00.960
and about 16 in first column whereas elements after 16 

20
00:01:00.960 --> 00:01:04.270
in first row and below 16 in the first column 

21
00:01:04.280 --> 00:01:06.550
are all greater than 16 

22
00:01:07.130 --> 00:01:10.740
Thus we cannot safely proceed with the search in one 

23
00:01:10.740 --> 00:01:16.650
direction and if we take Element 39 present at 2 3 

24
00:01:16.800 --> 00:01:21.110
31 is less than 39 all elements before it in 

25
00:01:21.110 --> 00:01:24.410
second row and above it in third column are less 

26
00:01:24.410 --> 00:01:28.470
than 39 again we cannot proceed with the search in 

27
00:01:28.470 --> 00:01:29.490
one direction 

28
00:01:29.940 --> 00:01:32.950
Thus let us ignore all the elements in middle 

29
00:01:34.440 --> 00:01:37.380
We're left with four corner elements as 

30
00:01:37.380 --> 00:01:38.840
This is sorted matrix 

31
00:01:39.040 --> 00:01:41.630
Element 00 will be the least element 

32
00:01:41.660 --> 00:01:44.510
And this last element will be the largest element in 

33
00:01:44.510 --> 00:01:45.230
the matrix 

34
00:01:45.740 --> 00:01:49.350
Ignoring these two we are left with these two elements 

35
00:01:49.840 --> 00:01:52.320
And what is so special about the elements at these 

36
00:01:52.320 --> 00:01:56.020
two positions Let us take this element at zero three 

37
00:01:56.210 --> 00:01:59.400
It is the largest in this room and also the 

38
00:01:59.400 --> 00:02:00.950
smallest in this column 

39
00:02:01.440 --> 00:02:04.980
Thus if our n less than this element we can 

40
00:02:04.990 --> 00:02:08.220
eliminate this column and proceed to next element in 

41
00:02:08.230 --> 00:02:11.740
this room and if n is greater than this element 

42
00:02:11.780 --> 00:02:14.850
we can eliminate this row and proceed to the next 

43
00:02:14.850 --> 00:02:16.150
element in this column 

44
00:02:17.040 --> 00:02:20.270
Thus by comparing the element at this index with n 

45
00:02:20.380 --> 00:02:23.650
we can safely ignore one part and proceed with 

46
00:02:23.650 --> 00:02:24.250
the other 

47
00:02:24.840 --> 00:02:29.080
Same applies to the eliminate 30 Also Now with this 

48
00:02:29.250 --> 00:02:30.720
let us search 31 

49
00:02:30.730 --> 00:02:34.640
In this matrix let's have two variables I and J to 

50
00:02:34.640 --> 00:02:36.730
keep track of the element that we are going to 

51
00:02:36.730 --> 00:02:39.210
compare with n in each iteration 

52
00:02:39.550 --> 00:02:42.440
We're going to get started with Element at Zero Three 

53
00:02:42.670 --> 00:02:44.420
so I will be zero and J 

54
00:02:44.420 --> 00:02:48.350
Will be three initially 31 is greater than 24 

55
00:02:48.740 --> 00:02:52.050
Thus it cannot be present anywhere in this room 

56
00:02:52.640 --> 00:02:55.290
This we can eliminate this row and proceed to the 

57
00:02:55.290 --> 00:02:57.050
next element in this column 

58
00:02:57.680 --> 00:03:00.020
The index of this element is 13 

59
00:03:00.310 --> 00:03:03.100
This we have to increment I at 13 

60
00:03:03.250 --> 00:03:04.450
We have 36 

61
00:03:04.840 --> 00:03:07.800
31 is less than 36 so it cannot be 

62
00:03:07.800 --> 00:03:11.410
Present in this column so let us go to the element before 

63
00:03:11.410 --> 00:03:12.760
36 in this room 

64
00:03:13.340 --> 00:03:15.780
The index of this element is 12 

65
00:03:15.990 --> 00:03:17.710
That's we have to decrement J 

66
00:03:17.940 --> 00:03:19.650
Let's continue the same way 

67
00:03:20.040 --> 00:03:22.350
11 at 12 is 27 

68
00:03:22.610 --> 00:03:24.480
31 is greater than 27 

69
00:03:24.550 --> 00:03:27.590
Hence let's go to the next element in this column 

70
00:03:27.590 --> 00:03:32.530
by increment I element at 22 is 29 again 

71
00:03:32.530 --> 00:03:37.950
31 is greater than 29 so increment i again in 32 

72
00:03:38.130 --> 00:03:41.880
we have 32 31 is less than 32 so decrement 

73
00:03:41.880 --> 00:03:46.510
J Now J becomes one at index 31 we have 

74
00:03:46.510 --> 00:03:48.240
31 which is our end 

75
00:03:48.560 --> 00:03:51.790
This we can return True if n is not present in 

76
00:03:51.790 --> 00:03:55.750
the array when can we stop searching the matrix This is 

77
00:03:55.750 --> 00:03:57.150
a four by four matrix 

78
00:03:57.560 --> 00:04:03.260
Thus I and J can have values between zero and three initially we are 

79
00:04:03.260 --> 00:04:05.850
setting I to 0 and J to 3 

80
00:04:06.390 --> 00:04:10.470
Thus I can get incremental till it reaches Three and 

81
00:04:10.470 --> 00:04:13.150
J can get decremented till it reaches zero 

82
00:04:14.340 --> 00:04:18.370
If we search for 25 this matrix at some point 

83
00:04:18.570 --> 00:04:22.050
either I becomes four or J will become minus one 

84
00:04:22.440 --> 00:04:25.300
So at this point we can stop our search and 

85
00:04:25.300 --> 00:04:26.210
return false. 

