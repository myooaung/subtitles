WEBVTT

1
00:00:00.740 --> 00:00:01.660
Hello everyone 

2
00:00:02.010 --> 00:00:04.660
So in this video we are going to learn why 

3
00:00:04.660 --> 00:00:06.420
should you learn data structures 

4
00:00:06.530 --> 00:00:08.950
We are going to learn something very interesting 

5
00:00:09.440 --> 00:00:12.660
So in our day to day life many applications such 

6
00:00:12.660 --> 00:00:16.430
as web browser Google map music player movie ticket 

7
00:00:16.430 --> 00:00:20.750
booking apps use some of the data structure concepts so 

8
00:00:20.750 --> 00:00:24.310
this video will give you a better understanding of why 

9
00:00:24.310 --> 00:00:25.980
should you learn data structures 

10
00:00:26.540 --> 00:00:27.180
So let us 

11
00:00:27.180 --> 00:00:30.400
Learn how data structures play a major role in our 

12
00:00:30.400 --> 00:00:31.450
day to day life 

13
00:00:32.240 --> 00:00:35.010
So we are must have used online ticket booking 

14
00:00:35.010 --> 00:00:36.570
systems at least once 

15
00:00:37.140 --> 00:00:40.300
It might be for booking tickets for train or maybe 

16
00:00:40.300 --> 00:00:43.950
bus or flights or movies or any other shows 

17
00:00:44.340 --> 00:00:46.750
If we want to book any seat it is just 

18
00:00:46.750 --> 00:00:48.730
a matter of clicking on a square and it will 

19
00:00:48.730 --> 00:00:49.250
be booked 

20
00:00:49.740 --> 00:00:52.440
But have you ever wondered that this is a two 

21
00:00:52.440 --> 00:00:56.040
dimensional array And this seat which is in row Three 

22
00:00:56.050 --> 00:01:00.610
and column four is seat of 34 so that is is a 

23
00:01:00.620 --> 00:01:02.550
real life application of array 

24
00:01:03.140 --> 00:01:07.120
now let us understand a browser's working so we are first 

25
00:01:07.120 --> 00:01:11.250
going to a webpage www dot google dot com and 

26
00:01:11.250 --> 00:01:14.140
now we are visiting the website log2base.com 

27
00:01:14.140 --> 00:01:14.950
 

28
00:01:14.960 --> 00:01:16.580
Now there is a YouTube link 

29
00:01:16.770 --> 00:01:19.850
Now we click there and we go to that address 

30
00:01:20.340 --> 00:01:23.450
So whenever we visit a webpage see that you 

31
00:01:23.450 --> 00:01:24.550
url is stored here 

32
00:01:25.240 --> 00:01:27.620
Now we can click on the back button and go 

33
00:01:27.620 --> 00:01:29.610
to last visited web page 

34
00:01:29.620 --> 00:01:32.100
See when we click here we are back to 

35
00:01:32.100 --> 00:01:34.980
log2base2.com and from there we can 

36
00:01:34.980 --> 00:01:38.320
go back to www dot google dot com as well 

37
00:01:38.710 --> 00:01:41.280
And we are familier with these operations of a 

38
00:01:41.280 --> 00:01:41.490
browser

39
00:01:41.490 --> 00:01:45.810
and this is actually an application of Stack which 

40
00:01:45.810 --> 00:01:47.590
follows the last in first 

41
00:01:47.590 --> 00:01:50.990
Out principal that is who came last will be gone 

42
00:01:50.990 --> 00:01:55.230
out first so simply by clicking a back button we 

43
00:01:55.230 --> 00:01:57.350
can go to last visited website 

44
00:01:57.740 --> 00:02:00.300
So that is how a stack is useful in our 

45
00:02:00.300 --> 00:02:03.610
daily life and we all have stood in a queue 

46
00:02:03.620 --> 00:02:06.580
at somewhere in our life may be at a bank 

47
00:02:06.590 --> 00:02:10.590
a restaurant or college etcetera and who comes first in 

48
00:02:10.590 --> 00:02:13.280
the queue will be served first and can go out 

49
00:02:13.290 --> 00:02:14.010
like this 

50
00:02:14.400 --> 00:02:17.810
That is first in first out principle which is exactly 

51
00:02:17.810 --> 00:02:21.040
what a queue data structure is who comes first will 

52
00:02:21.040 --> 00:02:22.090
be served first 

53
00:02:22.420 --> 00:02:24.340
But Stack was last in first 

54
00:02:24.340 --> 00:02:26.580
Out who Came last will be served 

55
00:02:26.580 --> 00:02:31.040
First Now can you think of any application for linked 

56
00:02:31.040 --> 00:02:34.830
list see we All have music player in our phones 

57
00:02:34.880 --> 00:02:36.350
and will have songs in it 

58
00:02:36.790 --> 00:02:40.180
Suppose You have four songs in your phone after playing 

59
00:02:40.180 --> 00:02:43.490
song one Song two will be played then song three 

60
00:02:43.490 --> 00:02:46.190
will be played and then Song four will be played 

61
00:02:46.200 --> 00:02:46.850
like that 

62
00:02:47.240 --> 00:02:49.510
It doesn't stop after playing one song 

63
00:02:49.710 --> 00:02:53.100
The next song will be played so the songs are 

64
00:02:53.110 --> 00:02:56.460
connected just the way nodes are connected in a linked 

65
00:02:56.460 --> 00:02:57.050
list 

66
00:02:57.440 --> 00:03:01.100
So this is an application of a singly linked list in 

67
00:03:01.100 --> 00:03:02.320
a singlely linked lists 

68
00:03:02.480 --> 00:03:05.400
The Nodes are connected in a single way so we 

69
00:03:05.400 --> 00:03:07.600
can go to Song Three from song two 

70
00:03:07.610 --> 00:03:11.390
But we cannot go in backwards at in doubly linked 

71
00:03:11.390 --> 00:03:11.750
list 

72
00:03:11.900 --> 00:03:15.080
The nodes are connected in both directions so we can 

73
00:03:15.080 --> 00:03:18.930
go either way so we can play song one then 

74
00:03:18.930 --> 00:03:19.790
song two 

75
00:03:19.800 --> 00:03:22.240
Then Song Three and from Song three 

76
00:03:22.240 --> 00:03:23.990
We can play song four as well 

77
00:03:23.990 --> 00:03:27.750
as song two that is we will have both previous 

78
00:03:27.750 --> 00:03:32.150
and next buttons so bi directional navigation is possible 

79
00:03:33.040 --> 00:03:36.180
And after all the songs are played the music player 

80
00:03:36.180 --> 00:03:37.190
will stop playing 

81
00:03:37.600 --> 00:03:41.060
But sometimes we play a playlist in a repeat mode 

82
00:03:41.360 --> 00:03:44.890
so that after the last song is completed the first 

83
00:03:44.890 --> 00:03:48.140
song will start playing again and it will play in 

84
00:03:48.140 --> 00:03:50.700
the cyclic mode and will never stop 

85
00:03:51.040 --> 00:03:53.240
So that is a circular linked list 

86
00:03:53.250 --> 00:03:56.800
The last node is connected to the first node again that 

87
00:03:56.800 --> 00:03:59.610
is The Last song is connected to the first song 

88
00:03:59.620 --> 00:04:03.940
again at it will repeat the playlist so that is 

89
00:04:03.940 --> 00:04:07.050
how linked lists are useful in our daily life 

90
00:04:07.640 --> 00:04:11.620
Now everybody uses Google map and can you guess which 

91
00:04:11.620 --> 00:04:16.020
data structure it uses Google map actually uses the graph 

92
00:04:16.020 --> 00:04:16.890
data structure 

93
00:04:17.020 --> 00:04:19.990
Where all the cities and states are connected as a 

94
00:04:19.990 --> 00:04:22.070
graph with distance information 

95
00:04:22.640 --> 00:04:24.880
If we want to go from Tamil Nadu to delhi 

96
00:04:24.880 --> 00:04:28.380
 there might be many ways but using some algorithms 

97
00:04:28.390 --> 00:04:31.590
we can select the shortest path which saves a lot 

98
00:04:31.590 --> 00:04:32.090
of time 

99
00:04:32.460 --> 00:04:36.670
For example this way it takes 1000 kilometres and this 

100
00:04:36.670 --> 00:04:41.280
one will take 1500 kilometres and this one will take 

101
00:04:41.290 --> 00:04:46.190
2000 kilometres and the shortest path is 1000 kilometres and we 

102
00:04:46.190 --> 00:04:47.620
can proceed with this one 

103
00:04:48.240 --> 00:04:51.240
So that is how data structures play a major role 

104
00:04:51.250 --> 00:04:52.450
in our day to day life 

105
00:04:52.840 --> 00:04:55.970
In the upcoming series we will learn how to implement 

106
00:04:55.980 --> 00:04:57.250
all the data structures.

