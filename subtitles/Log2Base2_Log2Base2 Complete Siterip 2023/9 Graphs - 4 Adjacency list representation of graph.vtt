WEBVTT

1
00:00:00.840 --> 00:00:01.670
hi friends 

2
00:00:01.680 --> 00:00:04.220
In this video we are going to learn the adjacency

3
00:00:04.220 --> 00:00:05.350
list of a graph 

4
00:00:06.140 --> 00:00:08.520
So an adjacency list is one method to 

5
00:00:08.520 --> 00:00:11.070
represent a graph and first will see the case 

6
00:00:11.070 --> 00:00:14.280
of an undirected Graph So we have an and undirected 

7
00:00:14.280 --> 00:00:17.230
graph here and an adjacency list is actually an 

8
00:00:17.230 --> 00:00:18.200
array of list 

9
00:00:18.360 --> 00:00:20.800
And the size of this list will be equal to 

10
00:00:20.800 --> 00:00:23.120
the number of vertices in the graph 

11
00:00:23.240 --> 00:00:25.850
Now see this graph here and we have five  

12
00:00:25.850 --> 00:00:28.410
vertices in it so will have five list 

13
00:00:28.460 --> 00:00:32.050
And these lists will contain the neighbours of each Vertex 

14
00:00:32.060 --> 00:00:32.850
in the graph 

15
00:00:33.440 --> 00:00:36.750
So we will start with vertex zero and see which 

16
00:00:36.750 --> 00:00:40.840
are vertices are the immediate neighbours of vertex zero there 

17
00:00:40.840 --> 00:00:45.410
vertex 1 2 and 3 So the list will contain 1 2 

18
00:00:45.420 --> 00:00:46.090
and 3 

19
00:00:46.100 --> 00:00:50.750
So that is the first list 0 1 2 and 3 now consider 

20
00:00:50.750 --> 00:00:55.180
Vertex one and the immediate neighbours are 0 3 and 4 

21
00:00:55.190 --> 00:00:59.230
So we get 1 0 3 4 as the second list 

22
00:00:59.420 --> 00:01:02.460
and next we have vertex two and the neighbours are 

23
00:01:02.470 --> 00:01:06.430
zero and three and the list be like 2 0 3 

24
00:01:06.730 --> 00:01:10.690
Now take vertex 3 and the neighbours are 0 1 2 and 

25
00:01:10.690 --> 00:01:14.750
four and the list will be 3 0 1 2 4 

26
00:01:14.910 --> 00:01:17.940
And finally we have Vertex 4 and the neighbours of 

27
00:01:17.940 --> 00:01:20.150
vertex 4 are one and three 

28
00:01:20.410 --> 00:01:24.420
So the last list is 4 1 3 and that 

29
00:01:24.420 --> 00:01:27.970
is how we represent and undirected graph using and adjacency 

30
00:01:27.970 --> 00:01:32.170
list now let us see the case of a directed 

31
00:01:32.170 --> 00:01:34.700
graph and the concept is the very same 

32
00:01:34.710 --> 00:01:37.670
But we need to look for outgoing edges from each 

33
00:01:37.670 --> 00:01:38.300
vertex 

34
00:01:38.420 --> 00:01:41.230
Now this is our directed graph here and let us 

35
00:01:41.230 --> 00:01:45.160
take vertex zero first and from zero the recent edge 

36
00:01:45.170 --> 00:01:47.670
going to 1 2 and 3 

37
00:01:47.680 --> 00:01:51.370
So the list will be 0 1 2 3 

38
00:01:51.380 --> 00:01:55.280
Now take vertex one and there are edges from 1 2 3 

39
00:01:55.290 --> 00:01:56.370
and 1 2 4 

40
00:01:56.380 --> 00:02:00.700
So the list will look like this 1 3 4 next 

41
00:02:00.700 --> 00:02:03.060
we have vertex 2 And if you see the 

42
00:02:03.060 --> 00:02:06.050
recent edge from 2 to 3 and there is so so 

43
00:02:06.050 --> 00:02:08.350
the list will be like 2 3 

44
00:02:08.360 --> 00:02:11.080
Then we have Vertex 3 and see there is just 

45
00:02:11.080 --> 00:02:13.570
one outgoing edge and it is 4 

46
00:02:13.580 --> 00:02:17.170
So the list will be like 3 4 and finally we 

47
00:02:17.170 --> 00:02:20.390
have Vertex 4 and there is no outgoing edge from 

48
00:02:20.390 --> 00:02:22.140
four so that would be all 

49
00:02:22.270 --> 00:02:25.010
So that is how we represent a directed graph using 

50
00:02:25.020 --> 00:02:26.150
adjacency list 

