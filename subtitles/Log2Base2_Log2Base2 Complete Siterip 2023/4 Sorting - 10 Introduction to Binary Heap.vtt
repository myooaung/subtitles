WEBVTT

1
00:00:00.540 --> 00:00:01.410
Hello friends 

2
00:00:01.470 --> 00:00:04.740
In this video let us discuss about the need for 

3
00:00:04.740 --> 00:00:09.020
binary heap let us assume some people are standing in the 

4
00:00:09.020 --> 00:00:10.450
hospital in a queue 

5
00:00:11.240 --> 00:00:14.740
Now what is the property of a Queue The person 

6
00:00:14.740 --> 00:00:17.950
who comes first will be sent to the doctor first 

7
00:00:18.340 --> 00:00:21.870
But what if a person comes in a serious condition 

8
00:00:21.960 --> 00:00:26.070
We need to give him some priority right And he 

9
00:00:26.070 --> 00:00:27.850
should visit the doctor first 

10
00:00:28.240 --> 00:00:30.420
They can call this as a priority 

11
00:00:30.420 --> 00:00:31.010
Queue

12
00:00:31.090 --> 00:00:31.730
That is 

13
00:00:31.880 --> 00:00:36.030
Each item in a queue is given some priority and 

14
00:00:36.030 --> 00:00:39.540
further dequeue operation will be done based on the 

15
00:00:39.540 --> 00:00:40.250
priority 

16
00:00:41.140 --> 00:00:43.600
This is also called as priority 

17
00:00:43.600 --> 00:00:44.050
Queue 

18
00:00:44.640 --> 00:00:47.090
We can efficiently implement a priority 

19
00:00:47.090 --> 00:00:47.470
Queue 

20
00:00:47.480 --> 00:00:51.680
Using binary heap Now let us learn what 

21
00:00:51.690 --> 00:00:55.500
is a binary Heap binary heap is a complete 

22
00:00:55.510 --> 00:01:00.970
binary tree which satisfies the heap ordering property Before discussing 

23
00:01:00.970 --> 00:01:01.720
with heap 

24
00:01:01.730 --> 00:01:05.160
Let us understand the difference between a full tree and 

25
00:01:05.160 --> 00:01:06.250
a complete tree 

26
00:01:06.940 --> 00:01:08.040
A full binary tree 

27
00:01:08.040 --> 00:01:11.400
is a tree in which every node other than 

28
00:01:11.400 --> 00:01:13.350
the leaves has two Children 

29
00:01:14.040 --> 00:01:18.390
See here every node has exactly two Children other than 

30
00:01:18.400 --> 00:01:21.850
the leaves this is called a full tree 

31
00:01:22.440 --> 00:01:25.860
where a complete binary tree is a full tree 

32
00:01:25.870 --> 00:01:29.530
in which the last level may contain lesser nodes but 

33
00:01:29.540 --> 00:01:31.950
it should be as left as possible 

34
00:01:33.340 --> 00:01:36.970
See here the last level is incomplete but the nodes 

35
00:01:37.080 --> 00:01:39.650
are as left as possible 

36
00:01:40.440 --> 00:01:44.060
So this is called a complete tree in the same 

37
00:01:44.060 --> 00:01:44.510
tree 

38
00:01:44.520 --> 00:01:47.590
If last level nodes are in the right side leaving 

39
00:01:47.590 --> 00:01:50.750
the left side vacant then it is not a complete 

40
00:01:50.750 --> 00:01:50.950
tree 

41
00:01:51.440 --> 00:01:54.850
The last level nodes should be as left as possible 

42
00:01:55.440 --> 00:01:58.550
So the binary heap is a complete tree that is 

43
00:01:58.560 --> 00:02:00.190
other than the last level 

44
00:02:00.420 --> 00:02:02.850
All levels should be filled completely 

45
00:02:03.540 --> 00:02:05.520
We have two kinds of heaps 

46
00:02:05.680 --> 00:02:07.140
min heap and max heap

47
00:02:07.140 --> 00:02:07.330
Here 

48
00:02:07.940 --> 00:02:12.310
first let us discuss about min heap in min heap every 

49
00:02:12.310 --> 00:02:15.850
parent node value will be lesser than the Children's value 

50
00:02:16.240 --> 00:02:19.740
that is the parent node will have the minimum value 

51
00:02:20.070 --> 00:02:21.180
see this example 

52
00:02:21.190 --> 00:02:23.190
This is  hip tree 

53
00:02:23.270 --> 00:02:24.970
We can take any sub tree 

54
00:02:24.980 --> 00:02:27.150
It's root will be the minimum value 

55
00:02:27.450 --> 00:02:30.300
Take the rights sub tree forties the root and it 

56
00:02:30.300 --> 00:02:32.550
is the minimum value in this sub tree 

57
00:02:33.140 --> 00:02:35.820
Now take the left sub tree 20 is the 

58
00:02:35.820 --> 00:02:39.030
root and it is the minimum value and the root 

59
00:02:39.030 --> 00:02:42.370
of any min heap tree will be the minimum value in 

60
00:02:42.370 --> 00:02:43.050
that tree 

61
00:02:43.540 --> 00:02:47.630
Here 10 is the minimum value in this tree and it is 

62
00:02:47.630 --> 00:02:48.750
the root of the tree 

63
00:02:49.240 --> 00:02:52.670
So in min heap the node with minimum priority will 

64
00:02:52.670 --> 00:02:55.760
be present at the root node so that we can 

65
00:02:55.770 --> 00:02:59.050
access the minimum priority node at constant time 

66
00:02:59.940 --> 00:03:03.550
Now let us discuss about max heap in Max heap

67
00:03:03.730 --> 00:03:07.190
Every parent nodes value will be greater than the Children's 

68
00:03:07.190 --> 00:03:07.650
value 

69
00:03:08.240 --> 00:03:12.130
That is the parent node will have the maximum value 

70
00:03:12.140 --> 00:03:13.310
see this example 

71
00:03:13.320 --> 00:03:14.950
This is a max heap tree 

72
00:03:15.540 --> 00:03:17.240
We can take any sub tree 

73
00:03:17.280 --> 00:03:19.550
It's root will be the maximum value 

74
00:03:20.040 --> 00:03:21.390
Take the right sub tree 

75
00:03:21.400 --> 00:03:24.400
70 is the root and it is the maximum value 

76
00:03:24.410 --> 00:03:25.450
in this sub tree 

77
00:03:26.140 --> 00:03:29.230
Take the left sub tree now for fifty is the root and 

78
00:03:29.240 --> 00:03:33.810
it is the maximum value and the root of any 

79
00:03:33.810 --> 00:03:36.990
max heap tree will be the maximum value in that 

80
00:03:36.990 --> 00:03:37.350
tree 

81
00:03:37.840 --> 00:03:41.800
Here 100 is a maximum value in this tree and it is 

82
00:03:41.800 --> 00:03:42.750
the root of the tree 

83
00:03:43.340 --> 00:03:47.240
So in Max heap the node with maximum priority will be 

84
00:03:47.240 --> 00:03:50.100
present at the root nodes so that we can access 

85
00:03:50.100 --> 00:03:54.610
the maximum priority node at constant time so today we 

86
00:03:54.610 --> 00:03:59.170
have discussed about the need of a binary heap and we 

87
00:03:59.170 --> 00:04:01.070
discussed about priority Queue 

88
00:04:01.260 --> 00:04:04.380
And we learn that we have two kinds of heaps 

89
00:04:04.460 --> 00:04:07.620
min heap and max heap in a min heap 

90
00:04:07.690 --> 00:04:11.040
The low priority node will be present at root and 

91
00:04:11.040 --> 00:04:11.950
in max heap 

92
00:04:11.950 --> 00:04:14.850
The maximum priority node will be present at the root 

93
00:04:15.440 --> 00:04:18.300
In the next video we will learn how to construct 

94
00:04:18.300 --> 00:04:19.550
a heap in detail. 

