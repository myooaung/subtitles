WEBVTT

1
00:00:00.130 --> 00:00:02.150
Now let us see the implementation. 

2
00:00:02.710 --> 00:00:06.770
So our logic is to keep two indexing variables 

3
00:00:06.770 --> 00:00:10.650
One for word start and one to traverse the string 

4
00:00:11.240 --> 00:00:16.850
So in the function, declare wstart initialised to 0 and i.

5
00:00:16.860 --> 00:00:21.330
now find the length of the string and store it in len.

6
00:00:21.330 --> 00:00:25.070
 So the length 20 will be stored in 

7
00:00:25.080 --> 00:00:26.160
variable len.

8
00:00:26.540 --> 00:00:29.990
Now we have to identify the end of first word. 

9
00:00:30.220 --> 00:00:33.820
For that, we can start i from zero and move 

10
00:00:33.820 --> 00:00:37.660
it to the next character continuously till we reach a 

11
00:00:37.660 --> 00:00:38.530
white space. 

12
00:00:39.100 --> 00:00:40.180
Then reverse it.

13
00:00:40.500 --> 00:00:44.360
Then find the next word in same manner and reverse it

14
00:00:44.360 --> 00:00:47.920
and do this till we reach the end or len

15
00:00:47.920 --> 00:00:48.350
 

16
00:00:49.040 --> 00:00:52.180
So use a for loop to traverse the string  

17
00:00:52.180 --> 00:00:55.870
So write for i equal to zero,  i less than len, i++.

18
00:00:56.060 --> 00:01:00.560
 Now in each iteration, check if we 

19
00:01:00.560 --> 00:01:02.490
have reached a white space. 

20
00:01:02.900 --> 00:01:06.160
If so, it means we have reached the end of 

21
00:01:06.160 --> 00:01:06.560
a word.

22
00:01:06.580 --> 00:01:10.710
So we have to reverse it. So write 

23
00:01:10.710 --> 00:01:15.430
If str[i] equal to white space, then reverse it. So we got

24
00:01:15.430 --> 00:01:21.200
reverse function by passing the string str, the start index 

25
00:01:21.420 --> 00:01:25.030
wstart and the end index of the word i-1 

26
00:01:25.030 --> 00:01:29.640
So it will be reversed. Now wstart 

27
00:01:29.640 --> 00:01:33.330
should point to the start of next word and see 

28
00:01:33.340 --> 00:01:36.320
i is now pointing to the white space 

29
00:01:36.690 --> 00:01:40.050
So next word starting will be i+1

30
00:01:40.440 --> 00:01:45.310
So in the next iteration, next word "is" is identified 

31
00:01:45.450 --> 00:01:50.820
and reversed. Similarly the third word "and" is identified and 

32
00:01:50.820 --> 00:01:55.930
reversed and in the next iteration wstart is pointing 

33
00:01:55.940 --> 00:02:00.450
to a. And then i is moved forward. And there is 

34
00:02:00.460 --> 00:02:04.550
no white space and also i will reach the end 

35
00:02:05.040 --> 00:02:09.500
So the condition i less than len, will fail and control 

36
00:02:09.500 --> 00:02:11.090
will come out of the for loop. 

37
00:02:11.090 --> 00:02:11.450


38
00:02:12.040 --> 00:02:14.790
So this is the case of the last word of 

39
00:02:14.790 --> 00:02:15.350
a string. 

40
00:02:15.810 --> 00:02:17.550
So we have to reverse it too 

41
00:02:18.040 --> 00:02:21.230
So after the for loop code, we have to call 

42
00:02:21.230 --> 00:02:27.220
reverse again with str, start index wstart and 

43
00:02:27.230 --> 00:02:29.450
end index len-1.

44
00:02:30.040 --> 00:02:32.950
Now all the words are reversed and we can print it.

