WEBVTT

1
00:00:00.140 --> 00:00:00.860
Hi friends 

2
00:00:00.870 --> 00:00:03.340
In this video let us discuss about the need of 

3
00:00:03.350 --> 00:00:06.200
dynamic memory and dynamic memory allocation 

4
00:00:12.440 --> 00:00:15.250
So we have learned that using pointers we can 

5
00:00:15.260 --> 00:00:19.279
allocate memory dynamically at run time. Before getting started with 

6
00:00:19.280 --> 00:00:23.360
dynamic memory allocation let us first discuss about static memory 

7
00:00:23.360 --> 00:00:24.130
allocation 

8
00:00:24.440 --> 00:00:28.190
First let us declare an integer array to store five 

9
00:00:28.190 --> 00:00:32.530
student's age. Since we are declaring an array, it will be stored 

10
00:00:32.530 --> 00:00:34.140
in the stack memory section 

11
00:00:34.180 --> 00:00:37.120
Here we are deciding the array size at the 

12
00:00:37.120 --> 00:00:38.350
compilation time 

13
00:00:38.940 --> 00:00:42.330
Hence it is also called "Compile time memory allocation" 

14
00:00:42.940 --> 00:00:46.140
But if we need to store more student's age then 

15
00:00:46.150 --> 00:00:48.699
this allocated memory is not enough 

16
00:00:48.730 --> 00:00:52.050
We can't grow or shrink the memory during run time in 

17
00:00:52.050 --> 00:00:53.370
static allocation 

18
00:00:53.940 --> 00:00:56.339
So what we can do is every time a new 

19
00:00:56.340 --> 00:00:59.370
student comes we can change the array size manually 

20
00:00:59.370 --> 00:01:02.100
and run it again. but it is not a good 

21
00:01:02.100 --> 00:01:03.410
solution at all 

22
00:01:03.600 --> 00:01:06.250
So what will be the optimal solution for this? It 

23
00:01:06.250 --> 00:01:08.950
is definitely dynamic memory allocation. 

24
00:01:09.010 --> 00:01:12.760
Using pointers we can create dynamic memory at runtime 

25
00:01:13.040 --> 00:01:16.350
Dynamic memory will be stored in the heap memory section 

26
00:01:16.640 --> 00:01:20.440
so whenever memory is needed it can be allocated. That is 

27
00:01:20.840 --> 00:01:24.940
we can create dynamic memory based on our need. Here 

28
00:01:24.950 --> 00:01:28.370
If two students come, we can create the memory only 

29
00:01:28.370 --> 00:01:29.729
for two students 

30
00:01:29.810 --> 00:01:32.929
If more students come we can also resize the memory 

31
00:01:33.200 --> 00:01:36.240
If another three students come we can resize the 

32
00:01:36.250 --> 00:01:40.280
already allocated memory area. If the computation is done and 

33
00:01:40.280 --> 00:01:43.200
if we need the data no more then we can 

34
00:01:43.210 --> 00:01:45.750
also delete the dynamically allocated memory 

35
00:01:46.440 --> 00:01:50.660
C language provides the following functions to handle dynamic memory 

36
00:01:50.970 --> 00:01:53.860
To create memory we have malloc and calloc

37
00:01:53.860 --> 00:01:55.730
To resize the memory 

38
00:01:55.730 --> 00:01:57.650
We have function realloc

39
00:01:58.040 --> 00:01:59.310
To deallocate the memory 

40
00:01:59.310 --> 00:02:00.660
We have the function free 

41
00:02:00.670 --> 00:02:03.509
We will be discussing each of them in detail in 

42
00:02:03.510 --> 00:02:04.589
the coming videos 

43
00:02:05.240 --> 00:02:07.530
So that's all and thank you for watching this video 

