WEBVTT

1
00:00:00.040 --> 00:00:02.520
in this video let us learn how get the 

2
00:00:02.520 --> 00:00:05.220
highest priority element from Priority Queue 

3
00:00:05.460 --> 00:00:09.740
As we already knew that after every insertion operation the 

4
00:00:09.740 --> 00:00:12.230
highest priority element will come to the top 

5
00:00:12.560 --> 00:00:16.020
That is the element with highest priority will be present 

6
00:00:16.030 --> 00:00:16.950
at index zero 

7
00:00:17.340 --> 00:00:20.450
So finding highest priority element is very simple 

8
00:00:20.940 --> 00:00:24.600
First check Whether heap is empty or not if it 

9
00:00:24.600 --> 00:00:27.650
is empty we can just return minus one 

10
00:00:28.140 --> 00:00:32.020
Otherwise the highest priority element will be present at index 

11
00:00:32.020 --> 00:00:32.520
Zero 

12
00:00:32.630 --> 00:00:34.650
So we can return heap of zero 

13
00:00:35.140 --> 00:00:39.130
That's it so let us quickly implement it let us create a 

14
00:00:39.130 --> 00:00:43.650
function named get highest priority which takes only one argument 

15
00:00:43.660 --> 00:00:45.360
That is a reference to vector 

16
00:00:45.780 --> 00:00:48.990
This function will return an integer value so write 

17
00:00:48.990 --> 00:00:52.770
it's written type as int first we need to find 

18
00:00:52.770 --> 00:00:56.760
the heap size so write int size equal to heap 

19
00:00:56.760 --> 00:00:57.650
dot size 

20
00:00:58.040 --> 00:01:00.550
If it is zero the heap is empty 

21
00:01:00.870 --> 00:01:03.430
In this case we need to return minus one 

22
00:01:03.780 --> 00:01:07.440
So write if size is equal to zero written minus 

23
00:01:07.440 --> 00:01:11.810
one otherwise the highest priority element will be present at 

24
00:01:11.820 --> 00:01:12.750
index zero 

25
00:01:13.140 --> 00:01:16.410
So in the end we can just return it so 

26
00:01:16.410 --> 00:01:18.450
write written heap of zero 

27
00:01:18.840 --> 00:01:21.530
That's it in the next video we will learn how 

28
00:01:21.530 --> 00:01:25.450
to implement the Delete highest priority operation in priority Queue. 

