WEBVTT

1
00:00:00.040 --> 00:00:03.830
Hello friends in this video let us have an introduction 

2
00:00:03.830 --> 00:00:06.250
to divide and conquer algorithms 

3
00:00:06.740 --> 00:00:09.200
So what do you think what kind of problem can 

4
00:00:09.200 --> 00:00:13.450
be solved using the divide and conquer algorithms See if 

5
00:00:13.450 --> 00:00:18.180
a particular problem can be divided into multiple subproblems 

6
00:00:18.190 --> 00:00:19.450
of the same type 

7
00:00:19.940 --> 00:00:23.640
We can solve that problem using the divide and conquer 

8
00:00:23.640 --> 00:00:24.300
strategy 

9
00:00:25.140 --> 00:00:29.380
The divide and conquer strategy follows this procedure to solve 

10
00:00:29.380 --> 00:00:30.050
the problem 

11
00:00:30.740 --> 00:00:34.520
So the first step is divide that is recursively 

12
00:00:34.520 --> 00:00:38.190
 break the problem into multiple subproblems of the 

13
00:00:38.190 --> 00:00:38.950
same type 

14
00:00:39.740 --> 00:00:42.250
Then the second step is conquer 

15
00:00:42.840 --> 00:00:44.870
That is solving the sub problems 

16
00:00:45.150 --> 00:00:48.690
So now we will have the results of these  

17
00:00:48.690 --> 00:00:53.220
subproblems and then the final step is combine 

18
00:00:53.630 --> 00:00:56.970
That is we will arrive at the main solution by 

19
00:00:56.970 --> 00:01:00.230
combining the results of all these subproblems 

20
00:01:00.930 --> 00:01:03.990
So let us take a problem and understand the divide 

21
00:01:03.990 --> 00:01:05.380
and conquer procedure 

22
00:01:05.390 --> 00:01:09.810
First, it will divide the problem into multiple subproblems 

23
00:01:09.820 --> 00:01:10.950
of the same type 

24
00:01:11.140 --> 00:01:15.400
So this problem is divided into four subproblems  

25
00:01:15.400 --> 00:01:18.630
Problem 123 and four 

26
00:01:18.960 --> 00:01:22.710
Secondly, it will conquer  subproblem which means

27
00:01:22.710 --> 00:01:26.150
 it will find the solution for the subproblems 

28
00:01:26.640 --> 00:01:30.850
So we have the solution of subproblem one 2,3 

29
00:01:30.860 --> 00:01:31.450
and four 

30
00:01:32.140 --> 00:01:36.400
And finally, it will combine all the subproblem solutions 

31
00:01:36.630 --> 00:01:39.150
and produce a solution to the main problem 

32
00:01:39.940 --> 00:01:43.290
So this is how divide and conquer algorithms solve the 

33
00:01:43.290 --> 00:01:43.850
problem 

34
00:01:44.540 --> 00:01:46.970
But there is a limitation to this approach 

35
00:01:47.330 --> 00:01:50.780
The main problem and all the subproblems should be 

36
00:01:50.780 --> 00:01:51.850
the same problem 

37
00:01:52.540 --> 00:01:56.500
For example, if the main problem is sorting all the 

38
00:01:56.500 --> 00:01:58.690
subproblems should be sorting 

39
00:01:59.010 --> 00:02:02.700
If the main problem is searching all the subproblems 

40
00:02:02.710 --> 00:02:03.750
should be searching 

41
00:02:04.140 --> 00:02:06.040
It cannot be different problems 

42
00:02:06.260 --> 00:02:09.870
For example, suppose we have this main problem which is 

43
00:02:09.870 --> 00:02:11.690
sorting and sub problem 

44
00:02:11.690 --> 00:02:12.710
One is searching 

45
00:02:12.890 --> 00:02:14.820
Sub problem too is sorting 

46
00:02:14.980 --> 00:02:19.120
 Problem tree is inserting and subproblem for is 

47
00:02:19.120 --> 00:02:19.850
deleting

48
00:02:20.240 --> 00:02:23.720
This kind of problem cannot be solved using the divide 

49
00:02:23.730 --> 00:02:24.950
and conquer approach 

50
00:02:25.440 --> 00:02:27.890
So that's all about the divide and conquer approach 

51
00:02:28.100 --> 00:02:31.130
And in the coming videos, we will solve some problems 

