WEBVTT

1
00:00:00.740 --> 00:00:01.400
Hi friends 

1
00:00:01.400 --> 00:00:03.280
In this video we are going to learn 

2
00:00:03.280 --> 00:00:05.810
about different built in string operations 

3
00:00:11.440 --> 00:00:15.729
Firstly let us discuss about string length to find the 

4
00:00:15.730 --> 00:00:19.220
length of string We have the function strlen

5
00:00:19.600 --> 00:00:22.890
and we passed the name of the string as the argument 

6
00:00:22.900 --> 00:00:23.690
to the function 

7
00:00:24.040 --> 00:00:27.369
So if the name of the string is str we 

8
00:00:27.370 --> 00:00:31.780
can write strlen(str); let us 

9
00:00:31.780 --> 00:00:35.910
understand this using a sample programme first we declare a 

10
00:00:35.910 --> 00:00:40.489
string of size 12 str = hello world Now 

11
00:00:40.500 --> 00:00:43.960
we declare an integer variable length and call the function 

12
00:00:43.960 --> 00:00:49.080
strlen bypassing the name of the string str so as 

13
00:00:49.080 --> 00:00:51.730
we know the name of the string holds the base 

14
00:00:51.730 --> 00:00:55.640
address of the string. So the function will start counting number 

15
00:00:55.640 --> 00:00:59.440
of characters till it encounters and null character so it 

16
00:00:59.440 --> 00:01:02.210
gets 11 and it will be returned and will 

17
00:01:02.210 --> 00:01:03.550
be stored in length 

18
00:01:04.040 --> 00:01:07.650
Now we are printing length so we will get 11 

19
00:01:07.650 --> 00:01:08.160
printed 

20
00:01:08.510 --> 00:01:11.149
So that is how we can find string length 

21
00:01:11.740 --> 00:01:14.440
Now let us discuss about string copy 

22
00:01:14.720 --> 00:01:17.850
If we need to copy a string to another string we 

23
00:01:17.850 --> 00:01:20.440
can use the function strcpy

24
00:01:20.940 --> 00:01:24.990
This function has two arguments The string to be copied 

25
00:01:25.000 --> 00:01:27.240
and the string where we need to paste it 

26
00:01:27.250 --> 00:01:31.660
Here we have str1 and str2 So Str2

27
00:01:31.670 --> 00:01:34.520
 will be copied  and pasted to str1 

28
00:01:35.000 --> 00:01:38.260
Now let us see a programme here also we have string 

29
00:01:38.270 --> 00:01:40.200
str = Hello world 

30
00:01:40.600 --> 00:01:44.850
Now we declare another string copy with the same size 

31
00:01:44.860 --> 00:01:45.350
12 

32
00:01:45.740 --> 00:01:50.190
Now we call the function by passing copy and str So 

33
00:01:50.190 --> 00:01:52.340
the content of str will be copied 

34
00:01:52.350 --> 00:01:57.059
to the string named copy So the same characters  

35
00:01:57.070 --> 00:02:03.460
h e l l o white space w o r l d will be stored 

36
00:02:03.460 --> 00:02:04.149
in copy 

37
00:02:04.640 --> 00:02:08.510
Now we print the string copy. So Hello World will be 

38
00:02:08.510 --> 00:02:11.370
printed So that was string copy function 

39
00:02:13.140 --> 00:02:16.820
Now let us discuss about string concatenation So 

40
00:02:16.820 --> 00:02:21.100
to join to strings we can use this function strcat

41
00:02:21.110 --> 00:02:24.910
and we have two arguments to this function which 

42
00:02:24.910 --> 00:02:28.120
are the names of the strings to be joined here 

43
00:02:28.130 --> 00:02:31.060
Str2 will be attached to str1 and 

44
00:02:31.060 --> 00:02:34.210
stored in str1. Let us understand this

45
00:02:34.210 --> 00:02:38.390
using a simple programme we have str1 with size 

46
00:02:38.400 --> 00:02:42.240
11 equal to hello and str2 with size six 

47
00:02:42.250 --> 00:02:43.350
equal to world 

48
00:02:43.740 --> 00:02:48.180
Now we call the function strcat by passing str1 

49
00:02:48.190 --> 00:02:49.300
and str2

50
00:02:49.550 --> 00:02:52.320
So the content of str2 will be attached 

51
00:02:52.320 --> 00:02:56.350
to str1 And now we print str1 So 

52
00:02:56.350 --> 00:03:00.140
we will get Hello world printed as the output. let us 

53
00:03:00.140 --> 00:03:03.329
discuss about finding the first of occurrence of a character 

54
00:03:03.340 --> 00:03:04.120
in a string

55
00:03:04.640 --> 00:03:07.130
For that we have a function strchr

56
00:03:07.130 --> 00:03:10.220
 with two arguments the name of the 

57
00:03:10.220 --> 00:03:13.679
string and the character So let us see a sample 

58
00:03:13.680 --> 00:03:14.280
programme 

59
00:03:14.450 --> 00:03:18.750
We have str equal to hello world and we declare 

60
00:03:18.750 --> 00:03:22.600
a character pointer Pos Now we have to find 

61
00:03:22.600 --> 00:03:26.720
the first occurrence of the character o in the string. so 

62
00:03:26.720 --> 00:03:30.880
we can call the function strchr by passing the name 

63
00:03:30.880 --> 00:03:34.970
of the string str and the character O in single quotes 

64
00:03:35.400 --> 00:03:38.670
and the function returns the address of the first occurrence 

65
00:03:38.670 --> 00:03:41.420
of 'o' and it will be stored in pos 

66
00:03:41.870 --> 00:03:45.730
Now if we print *pos or the value at 

67
00:03:45.740 --> 00:03:49.649
the pos,  the character will be printed and if the 

68
00:03:49.650 --> 00:03:53.320
character is not present in the string, then the function will be 

69
00:03:53.320 --> 00:03:54.600
returning null 

70
00:03:55.240 --> 00:03:58.800
Now let us discuss about finding the first occurrence

71
00:03:58.810 --> 00:04:03.060
of a sequence of characters in a string. For that we have 

72
00:04:03.060 --> 00:04:06.890
the function strstr which have two arguments the name 

73
00:04:06.890 --> 00:04:09.829
of the string where we need to search and the string 

74
00:04:09.840 --> 00:04:14.000
whose occurrence we need to find. So let us see 

75
00:04:14.000 --> 00:04:15.180
a sample programme 

76
00:04:15.190 --> 00:04:20.340
Here we have string str equal to hello world Now 

77
00:04:20.350 --> 00:04:23.940
let us declare a character pointer pos and suppose 

78
00:04:23.950 --> 00:04:27.970
We need to find the occurrence of the string world so 

79
00:04:27.970 --> 00:04:30.980
call the function strstr with the name of the 

80
00:04:30.980 --> 00:04:35.060
string str and world So it checks the character one 

81
00:04:35.060 --> 00:04:39.690
by one to find the characters W O R L D 

82
00:04:39.690 --> 00:04:43.620
Together and it is found so it returns the base 

83
00:04:43.620 --> 00:04:47.370
address which is 1030 is stored in Pos 

84
00:04:47.940 --> 00:04:50.950
Now when we print the string at Pos it will 

85
00:04:50.950 --> 00:04:55.260
print the characters from the address 1030 until it finds 

86
00:04:55.270 --> 00:04:59.320
and a null corrector So we will get world printed and 

87
00:04:59.330 --> 00:05:02.590
if they string we passed is not present then the 

88
00:05:02.590 --> 00:05:04.650
function will be returning null.

89
00:05:05.040 --> 00:05:07.920
Let us see how to compare to strings 

90
00:05:08.220 --> 00:05:11.610
For that we have the string comparison function 

91
00:05:11.610 --> 00:05:14.510
strcmp which have two arguments which are 

92
00:05:14.510 --> 00:05:16.840
the names of two strings to be compared 

93
00:05:17.440 --> 00:05:22.290
Considers two strings str1 and str2. Str1 

94
00:05:22.290 --> 00:05:25.700
equal to abc and str2 is also abc 

95
00:05:25.700 --> 00:05:26.150


96
00:05:26.640 --> 00:05:32.450
Then strcmp function is called by passing str1 and str2 

97
00:05:32.550 --> 00:05:36.950
It checks each character. here first character of str1 

98
00:05:36.950 --> 00:05:41.150
and str2 are the same. Second character is also 

99
00:05:41.150 --> 00:05:44.500
the same. Third character is also the same. So the 

100
00:05:44.500 --> 00:05:50.370
function strcmp returns zero So if the strings are 

101
00:05:50.370 --> 00:05:54.250
the same strcmp function will be returning zero 

102
00:05:54.740 --> 00:05:59.400
now see another example here Str1 equal to ABC 

103
00:05:59.410 --> 00:06:04.130
and str2 equal to def Then these two strings are 

104
00:06:04.130 --> 00:06:07.990
passed to strcmp function It checks Whether all the 

105
00:06:07.990 --> 00:06:10.050
characters are same or not 

106
00:06:10.540 --> 00:06:14.390
ascii value of a equal to 97 and of d

107
00:06:14.390 --> 00:06:18.410
equal to 100 We have a difference of 3. The difference 

108
00:06:18.410 --> 00:06:21.909
must be zero If the characters are the same here 

109
00:06:21.910 --> 00:06:25.460
we have -3 which is a negative value So 

110
00:06:25.470 --> 00:06:30.060
str1 is less than str2 so strcmp 

111
00:06:30.060 --> 00:06:33.050
function will be returning a negative value. 

112
00:06:33.440 --> 00:06:37.060
now see another example str1 equal to abd 

113
00:06:37.060 --> 00:06:41.219
and Str2 equal to abc When these two 

114
00:06:41.220 --> 00:06:44.930
strings are passed to strcmp function it checks whether 

115
00:06:44.930 --> 00:06:49.330
all the characters are same until a null character is encountered 

116
00:06:49.660 --> 00:06:53.410
First character in both strings are the same So it 

117
00:06:53.420 --> 00:06:54.970
checks the second character 

118
00:06:55.020 --> 00:06:57.660
It is also the same. So it checks the third 

119
00:06:57.660 --> 00:07:01.690
character. ascii the value of d is 100 and of C  

120
00:07:01.690 --> 00:07:05.620
is 99 So the difference is 1 here. we have a 

121
00:07:05.620 --> 00:07:11.120
positive value So Str1 is greater than str2. So 

122
00:07:11.290 --> 00:07:15.050
the function strcmp returns a positive value 

123
00:07:15.540 --> 00:07:17.410
Now let us see a sample programme 

124
00:07:17.460 --> 00:07:21.320
Here we have str1 equal to ABC and  

125
00:07:21.330 --> 00:07:26.120
str2 equal to ABC Then we have 

126
00:07:26.130 --> 00:07:29.840
if strcmp(str1,str2) =0 print 

127
00:07:29.850 --> 00:07:34.450
equal else print different So strcmp compares 

128
00:07:34.460 --> 00:07:38.140
str1 and str2. Each character is the same 

129
00:07:38.150 --> 00:07:40.050
in str1 and str2 

130
00:07:40.310 --> 00:07:42.419
So the function returns zero 

131
00:07:42.590 --> 00:07:46.100
So if condition is satisfied and it will be printing 

132
00:07:46.110 --> 00:07:49.659
equal. If it was not equal then we would get 

133
00:07:49.660 --> 00:07:51.250
the output different 

134
00:07:52.540 --> 00:07:54.820
So that's all and thank you for watching this video 

