WEBVTT

1
00:00:00.740 --> 00:00:01.530
Hi friends 

2
00:00:01.540 --> 00:00:03.830
In this video we are going to learn about while

3
00:00:03.830 --> 00:00:04.300
loop

4
00:00:12.540 --> 00:00:15.120
So while loop can be used in situations where we 

5
00:00:15.120 --> 00:00:18.870
don't know the exact number of iterations here the number 

6
00:00:18.870 --> 00:00:21.240
of iterations actually depend on the input 

7
00:00:21.400 --> 00:00:23.790
For an example let's say we get an input and we 

8
00:00:23.790 --> 00:00:26.200
have a block of code and we want to execute 

9
00:00:26.200 --> 00:00:29.130
this block of code until the input value divided by 

10
00:00:29.140 --> 00:00:30.150
two becomes one 

11
00:00:30.530 --> 00:00:33.589
So if the input is 2, the block will execute one 

12
00:00:33.590 --> 00:00:36.560
time since two by two equals to one Now if 

13
00:00:36.560 --> 00:00:39.750
the input is 8, then the block of code will execute 

14
00:00:39.760 --> 00:00:43.230
3 times since 8/2 gives 4 

15
00:00:43.230 --> 00:00:45.680
4/2 gives 2 and 2/2 gives 1 

16
00:00:45.980 --> 00:00:49.110
So here the number of iterations depend on the value 

17
00:00:49.110 --> 00:00:49.820
of input 

18
00:00:49.890 --> 00:00:53.620
So there is this undeterminism and in such cases 

19
00:00:53.630 --> 00:00:54.950
we cannot use for loop 

20
00:00:55.040 --> 00:00:58.780
Now see the syntax of while loop. while(condition) and 

21
00:00:58.780 --> 00:01:02.570
in braces write the statements and now about the working 

22
00:01:02.570 --> 00:01:04.910
of while loop The working is very simple 

23
00:01:04.990 --> 00:01:08.179
As long as the condition is true these statements inside 

24
00:01:08.180 --> 00:01:11.490
while will be executed and the moment the condition becomes 

25
00:01:11.490 --> 00:01:14.979
false the control comes out of while loop so see this

26
00:01:14.980 --> 00:01:15.830
Example 

27
00:01:15.840 --> 00:01:19.720
Here we have a variable initialisation and then we have 

28
00:01:19.730 --> 00:01:21.540
the while loop where we have 

29
00:01:21.540 --> 00:01:24.670
Some statements including increment/decrement the variable 

30
00:01:25.240 --> 00:01:28.130
So first this initialisation will be done and this 

31
00:01:28.130 --> 00:01:31.900
condition will be checked and suppose it is satisfied or true 

32
00:01:32.100 --> 00:01:35.570
the inner statements will be executed including the increment/ decrement 

33
00:01:35.570 --> 00:01:35.860


34
00:01:36.010 --> 00:01:36.940
So that is done 

35
00:01:36.950 --> 00:01:39.110
And now the first iteration is completed 

36
00:01:39.400 --> 00:01:42.320
Now it goes and check the while condition again and 

37
00:01:42.320 --> 00:01:43.820
let's say it is still returning 

38
00:01:43.820 --> 00:01:46.790
A true. It will go inside again and execute the 

39
00:01:46.790 --> 00:01:50.930
statements inside and the second iteration is also completed 

40
00:01:52.740 --> 00:01:55.960
So again while condition is checked and suppose now it 

41
00:01:55.960 --> 00:01:56.970
return false 

42
00:01:57.090 --> 00:01:59.830
Now the control comes out of the while loop and Execute 

43
00:01:59.830 --> 00:02:01.140
the remaining statements 

44
00:02:01.330 --> 00:02:04.729
So basically while loop will execute this block inside 

45
00:02:04.740 --> 00:02:06.450
as long as the condition is true 

46
00:02:07.040 --> 00:02:09.820
Now see the sample programme where we get an integer

47
00:02:09.820 --> 00:02:12.370
number from the user and display how many times 

48
00:02:12.370 --> 00:02:15.149
it can be divided by two until it becomes 1 

49
00:02:15.200 --> 00:02:17.960
We have the main function and we're declaring 2

50
00:02:17.960 --> 00:02:22.320
integer variables num and count and initialise  to 0 Now we ask

51
00:02:22.320 --> 00:02:25.070
the user to enter number and that is stored in variable 

52
00:02:25.070 --> 00:02:27.500
Num. Let's suppose it was 20 

53
00:02:27.510 --> 00:02:29.619
And now we have this while loop here 

54
00:02:30.240 --> 00:02:32.220
Remember the working of while loop 

55
00:02:32.230 --> 00:02:35.140
As long as the condition is true, the statements inside 

56
00:02:35.140 --> 00:02:36.540
while will be executed 

57
00:02:36.700 --> 00:02:39.350
So here the condition is num greater than 1

58
00:02:39.360 --> 00:02:42.410
And what is num? 20. And 20 greater than 1

59
00:02:42.420 --> 00:02:43.910
so condition is true 

60
00:02:43.980 --> 00:02:47.200
So we enter the while loop and there we increment

61
00:02:47.210 --> 00:02:49.299
count so it will become 1

62
00:02:49.310 --> 00:02:51.470
And then we have num equal to num 

63
00:02:51.470 --> 00:02:54.170
Right Shift one which is equivalent to num by two 

64
00:02:54.170 --> 00:02:58.519
In C. so num becomes 10 and first iteration is completed 

65
00:02:58.640 --> 00:03:01.750
and after each iteration we have to check the condition 

66
00:03:01.760 --> 00:03:04.360
here num equal to 10 which is greater than one 

67
00:03:04.460 --> 00:03:07.510
So condition is true and we go inside and increment 

68
00:03:07.510 --> 00:03:07.959
count 

69
00:03:07.970 --> 00:03:09.329
So count becomes 2

70
00:03:09.450 --> 00:03:12.450
And right shift num will give the value five and 

71
00:03:12.450 --> 00:03:15.250
it will be stored in num and second iteration is 

72
00:03:15.250 --> 00:03:16.530
also completed again 

73
00:03:16.530 --> 00:03:19.130
We go and check the condition. num equal to five 

74
00:03:19.140 --> 00:03:20.430
which is greater than one 

75
00:03:20.510 --> 00:03:21.850
So condition is true 

76
00:03:21.900 --> 00:03:24.540
So increment count and it becomes 3

77
00:03:24.890 --> 00:03:27.470
And now num = num/2 that is 2

78
00:03:27.630 --> 00:03:30.320
 and third iteration is also completed 

79
00:03:30.320 --> 00:03:33.040
Now we check the condition again and we have num 

80
00:03:33.050 --> 00:03:35.840
equal to 2 which is greater than one. Again the 

81
00:03:35.840 --> 00:03:36.799
condition is true.

82
00:03:36.800 --> 00:03:40.320
So we increment count and count becomes 4 now right 

83
00:03:40.320 --> 00:03:42.870
shift num 2/2 = 1 which will 

84
00:03:42.870 --> 00:03:46.310
be stored in num and fourth iteration is also completed 

85
00:03:46.400 --> 00:03:49.459
So check the condition again num equal to one which 

86
00:03:49.460 --> 00:03:50.840
is not greater than one 

87
00:03:50.920 --> 00:03:53.589
So the condition is failed and it comes out of 

88
00:03:53.590 --> 00:03:56.579
the while loop and execute the next statement which is 

89
00:03:56.580 --> 00:03:58.150
printing the value of count

90
00:03:58.140 --> 00:04:01.150
And here count = 4 which will be printed 

91
00:04:01.940 --> 00:04:04.230
So that's all and thank you for watching this video 

