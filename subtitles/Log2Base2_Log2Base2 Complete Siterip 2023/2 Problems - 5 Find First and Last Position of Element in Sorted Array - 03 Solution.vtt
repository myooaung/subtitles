WEBVTT

1
00:00:00.140 --> 00:00:01.980
let us implement this function 

2
00:00:01.990 --> 00:00:05.250
Find first and last of Occurrence which takes an array 

3
00:00:05.250 --> 00:00:08.560
arr its size and an integer n as 

4
00:00:08.560 --> 00:00:12.010
parameters it returns a vector that will contain the first 

5
00:00:12.010 --> 00:00:15.300
of occurrence and last occurrence of integer and in the array

6
00:00:15.630 --> 00:00:19.090
let us declare an integer vector to store the result then 

7
00:00:19.090 --> 00:00:20.000
declared variable 

8
00:00:20.000 --> 00:00:23.830
Start end mid first pos and last pos 

9
00:00:25.340 --> 00:00:28.150
First let us add the code for adding the first 

10
00:00:28.150 --> 00:00:30.690
occurrences of n we are going to make use of 

11
00:00:30.700 --> 00:00:34.010
the binary search code here and make the necessary changes 

12
00:00:34.010 --> 00:00:34.450
to it 

13
00:00:34.940 --> 00:00:37.970
When we find out integer n in the array that is 

14
00:00:37.970 --> 00:00:40.770
when array of mid is equal to n we should 

15
00:00:40.770 --> 00:00:43.820
not stop there we have to see if the same 

16
00:00:43.830 --> 00:00:46.650
integer n is present before the current index 

17
00:00:47.040 --> 00:00:50.380
So let a store mid to first pos point end 

18
00:00:50.380 --> 00:00:53.140
to mid minus one and continue the iteration 

19
00:00:53.220 --> 00:00:57.220
Thus when this condition start less than end breaks the 

20
00:00:57.220 --> 00:01:00.420
variable first pos will hold the index of First of 

21
00:01:00.420 --> 00:01:04.050
Occurrence of integer end in the array So let us added to 

22
00:01:04.050 --> 00:01:07.470
the vector res Now for fighting out the 

23
00:01:07.470 --> 00:01:11.490
last occurrence again take the binary search code Whenever we 

24
00:01:11.490 --> 00:01:15.020
find an integer and in the Array store the index in 

25
00:01:15.020 --> 00:01:18.570
last pos and continue the search by pointing start to 

26
00:01:18.570 --> 00:01:21.350
mid plus one to check if integer n is 

27
00:01:21.350 --> 00:01:23.840
present anywhere after the current index 

28
00:01:24.160 --> 00:01:26.780
In the end when the control comes out of the 

29
00:01:26.780 --> 00:01:30.080
while loop the variable last pos will hold the index 

30
00:01:30.080 --> 00:01:33.770
of last occurrence of integer end in the array so 

31
00:01:33.770 --> 00:01:35.070
added to the vector res

32
00:01:35.070 --> 00:01:38.550
and finally returned the vector from the function. 

