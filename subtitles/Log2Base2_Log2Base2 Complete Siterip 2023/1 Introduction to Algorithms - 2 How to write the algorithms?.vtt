WEBVTT

1
00:00:00.540 --> 00:00:01.350
Hello friends 

2
00:00:01.740 --> 00:00:04.720
In this video let us learn how to write 

3
00:00:04.730 --> 00:00:05.500
an algorithm 

4
00:00:06.940 --> 00:00:10.690
In the previous video we have discussed about algorithms we 

5
00:00:10.690 --> 00:00:14.260
learn that an algorithm is a finite set of steps 

6
00:00:14.480 --> 00:00:16.950
that must be followed to solve any problem 

7
00:00:17.740 --> 00:00:20.800
And in this video let us learn how to write 

8
00:00:20.810 --> 00:00:21.580
an algorithm 

9
00:00:22.340 --> 00:00:26.380
So the algorithm is generally developed before the actual coding 

10
00:00:26.380 --> 00:00:26.830
is done 

11
00:00:27.050 --> 00:00:30.520
We can drive the algorithm step by step using simple 

12
00:00:30.520 --> 00:00:31.140
English 

13
00:00:31.540 --> 00:00:34.880
For example If we want to swap two numbers we 

14
00:00:34.880 --> 00:00:37.580
can write it in simple English like this 

15
00:00:37.670 --> 00:00:41.180
First start read the first number as a and read 

16
00:00:41.180 --> 00:00:44.570
the second number as b then assign temp equal to 

17
00:00:44.580 --> 00:00:48.560
a and a equal to b and finally b equal 

18
00:00:48.560 --> 00:00:49.000
to temp 

19
00:00:49.390 --> 00:00:51.050
And that is the end of the algorithm 

20
00:00:51.740 --> 00:00:55.350
By following these steps we can swap two numbers 

21
00:00:55.740 --> 00:00:57.840
So this is in simple English 

22
00:00:58.240 --> 00:01:00.430
Now there is one more method in which we can 

23
00:01:00.430 --> 00:01:03.810
write an algorithm that is using Pseudocode 

24
00:01:04.030 --> 00:01:08.000
The pseudo code is an informal programme description that does 

25
00:01:08.000 --> 00:01:09.860
not contain code syntax 

26
00:01:10.440 --> 00:01:13.660
Pseudocode need not contain the data type or returned 

27
00:01:13.660 --> 00:01:14.550
type information 

28
00:01:14.940 --> 00:01:18.690
It is purely intended for human reading rather than machine 

29
00:01:18.690 --> 00:01:18.940
reading

30
00:01:19.210 --> 00:01:22.530
And because of that we can also write using any 

31
00:01:22.530 --> 00:01:25.550
understandable simple other than the equal to simple 

32
00:01:25.560 --> 00:01:27.160
So saying this pseudocode 

33
00:01:27.420 --> 00:01:30.520
We can understand that first we have to assign a 

34
00:01:30.530 --> 00:01:33.830
to temp then b to a and finally temp to 

35
00:01:33.830 --> 00:01:35.320
b so by this method 

36
00:01:35.330 --> 00:01:38.310
Also we can understand what we have to do to 

37
00:01:38.320 --> 00:01:41.740
achieve our goal which is to swap two numbers and 

38
00:01:41.740 --> 00:01:43.260
that is what an algorithm is 

39
00:01:43.270 --> 00:01:46.550
So there are no strict rules about writing and algorithm 

40
00:01:47.140 --> 00:01:50.610
The main purpose of writing and algorithm is to write 

41
00:01:50.620 --> 00:01:54.450
a human understandable version of code which can be used 

42
00:01:54.450 --> 00:01:57.360
as a reference for two members or a group of 

43
00:01:57.370 --> 00:02:00.150
team members to analyse and debug the programme 

44
00:02:01.040 --> 00:02:04.030
So that's all about writing an Algorithm and 

45
00:02:04.030 --> 00:02:07.350
in the coming videos we will discuss more on algorithms 

