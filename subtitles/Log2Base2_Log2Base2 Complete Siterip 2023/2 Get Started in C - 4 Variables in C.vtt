WEBVTT

1
00:00:01.240 --> 00:00:01.980
Hi friends 

2
00:00:01.990 --> 00:00:04.310
In this video we are going to learn about variables in C 

3
00:00:04.310 --> 00:00:04.850
 

4
00:00:10.850 --> 00:00:13.990
A variable is a real necessity in a programming language 

5
00:00:14.000 --> 00:00:17.640
because the data will be stored in computer memory locations 

6
00:00:17.650 --> 00:00:20.700
and these memory locations will have addresses which are 

7
00:00:20.700 --> 00:00:21.840
hexa decimal values 

8
00:00:22.840 --> 00:00:25.630
And we need to access the memory very often to 

9
00:00:25.630 --> 00:00:27.170
store and retrieve this data 

10
00:00:27.180 --> 00:00:32.120
For example here character h is stored in the Memory Address 22fe53

11
00:00:32.120 --> 00:00:35.480
character i is stored in the memory address 22fe54

12
00:00:35.480 --> 00:00:41.440
and character j is stored in the memory address 22fe55

13
00:00:41.440 --> 00:00:44.230
 And suppose we want to change the values into 

14
00:00:44.240 --> 00:00:47.460
a, b and c respectively and we would want to 

15
00:00:47.460 --> 00:00:49.280
use these addresses to do that 

16
00:00:49.470 --> 00:00:52.210
But it is very difficult to remember all these memory 

17
00:00:52.210 --> 00:00:55.260
addresses while programming. so we need a solution to this

18
00:00:55.260 --> 00:00:55.610
problem 

19
00:00:55.620 --> 00:00:57.510
So what we can do is we can map a 

20
00:00:57.510 --> 00:01:01.460
meaningful variable name to the memory address so that we 

21
00:01:01.460 --> 00:01:04.560
can access the memory address using the variable name instead 

22
00:01:04.560 --> 00:01:06.600
of some hexa decimal memory address 

23
00:01:07.440 --> 00:01:11.699
Here the memory address 22fe53 is mapped with the variable name letter1 

24
00:01:11.700 --> 00:01:16.750
 similarly 22fe54 mapped with the letter2 

25
00:01:16.750 --> 00:01:17.610
22fe55 with letter3 

26
00:01:17.620 --> 00:01:22.970
Now we can access the memory address 22fe53 using the 

27
00:01:22.970 --> 00:01:27.440
variable named Letter1 and the other addresses with letter2 

28
00:01:27.440 --> 00:01:29.450
and letter3 respectively 

29
00:01:29.640 --> 00:01:32.970
Now we can easily manage the data at different locations 

30
00:01:33.350 --> 00:01:37.080
Now let us discuss about valid variable names in C. so 

31
00:01:37.080 --> 00:01:39.259
there are some rules on how to give a name 

32
00:01:39.270 --> 00:01:40.090
to a variable 

33
00:01:40.300 --> 00:01:43.590
first rule is that variable name should start with any 

34
00:01:43.590 --> 00:01:45.080
letter in the alphabet set 

35
00:01:45.250 --> 00:01:47.850
It can be either capital letter or small letter 

36
00:01:47.840 --> 00:01:49.840
or it should start with an underscore 

37
00:01:50.640 --> 00:01:54.270
So these are some valid declarations and see some invalid 

38
00:01:54.270 --> 00:01:54.929
declarations also

39
00:01:54.930 --> 00:01:57.760
this is invalid because we cannot start a variable 

40
00:01:57.760 --> 00:01:59.840
name with a digit now 

41
00:01:59.850 --> 00:02:02.380
The second rule is that in the variable name no 

42
00:02:02.380 --> 00:02:03.840
special characters are allowed 

43
00:02:03.850 --> 00:02:06.780
Other than an underscore. it can be at any 

44
00:02:06.780 --> 00:02:09.430
position but no other special characters are allowed.

45
00:02:10.240 --> 00:02:14.799
See some valid and invalid variable names here and one more important 

46
00:02:14.800 --> 00:02:17.690
point about variable names is that they are case sensitive 

47
00:02:17.690 --> 00:02:21.660
so age is not equal to Age

48
00:02:21.670 --> 00:02:25.260
 and variable name can be constructed as a 

49
00:02:25.260 --> 00:02:27.170
combination of digits and letters 

50
00:02:27.280 --> 00:02:30.030
Some examples are age1, age2 etc 

51
00:02:31.040 --> 00:02:34.310
And another important thing is that variable name should not 

52
00:02:34.310 --> 00:02:35.370
be a C keyword 

53
00:02:35.600 --> 00:02:38.810
For example int main return char et cetera 

54
00:02:39.120 --> 00:02:41.560
We cannot use these words as a variables name 

55
00:02:41.810 --> 00:02:43.150
These are reserved words 

56
00:02:43.160 --> 00:02:44.560
They have a special meaning 

57
00:02:44.700 --> 00:02:47.160
So we should not declare keyword as a variable name

58
00:02:47.160 --> 00:02:47.650
 

59
00:02:48.640 --> 00:02:50.930
So that's all and thank you for watching this video 

