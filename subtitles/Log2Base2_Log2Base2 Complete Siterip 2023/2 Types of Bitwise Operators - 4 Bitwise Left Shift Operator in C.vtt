WEBVTT

1
00:00:00.740 --> 00:00:01.400
Hi friends 

2
00:00:01.410 --> 00:00:04.360
In this video we are going to learn the bit wise left shift operator

3
00:00:10.360 --> 00:00:13.250
So it is used to shift the binary 

4
00:00:13.250 --> 00:00:16.980
sequence to the left side by specified number of positions 

5
00:00:16.990 --> 00:00:19.880
So see an example, take the number 40 but it is a 

6
00:00:19.880 --> 00:00:22.770
decimal number so translate into a binary sequence 

7
00:00:22.770 --> 00:00:27.330
And we get 1110 and write it in eight bit 

8
00:00:27.330 --> 00:00:27.840
format 

9
00:00:27.840 --> 00:00:33.990
So we get 0001110 So we have 14 left shift 

10
00:00:33.990 --> 00:00:34.360
1

11
00:00:34.360 --> 00:00:36.699
So the binary sequence will be shifted to the left 

12
00:00:36.700 --> 00:00:39.630
side by one position like this and the cells 

13
00:00:39.630 --> 00:00:42.900
which are empty will be marked zero at last and 

14
00:00:42.900 --> 00:00:49.330
the result will be 00011100 decimal equivalent is 28 

15
00:00:51.440 --> 00:00:54.720
So the result of 14 left shift 1 is  28 

16
00:00:54.730 --> 00:00:57.690
Now we have 14 left shift 2. so we need to shift 

17
00:00:57.690 --> 00:01:00.370
the binary sequence 2 position to the right and we

18
00:01:00.370 --> 00:01:03.379
have already shifted one time and now we only need 

19
00:01:03.380 --> 00:01:04.670
to shift once again 

20
00:01:06.740 --> 00:01:13.710
So we will get 00111000 whose binary equivalent is 56 

21
00:01:13.720 --> 00:01:18.680
So 14 left shift 2 is equal to 56 now 

22
00:01:18.680 --> 00:01:21.500
There is one interesting thing here when we left shifted 

23
00:01:21.510 --> 00:01:22.929
14 to 1 position 

24
00:01:22.940 --> 00:01:25.940
The result was 28 which is equal to 14 x 2

25
00:01:25.940 --> 00:01:26.220


26
00:01:26.230 --> 00:01:29.589
And when we left shifted 14 to 2 positions then the result 

27
00:01:29.590 --> 00:01:32.420
was 56 which is equal to 14x4 

28
00:01:33.740 --> 00:01:37.070
So there is this general formula, that if we shift 

29
00:01:37.070 --> 00:01:40.120
a number by N times to the left, the output 

30
00:01:40.120 --> 00:01:43.440
will be the number x 2^N

31
00:01:43.440 --> 00:01:43.940
Example 

32
00:01:43.940 --> 00:01:46.610
Let the number be 12 and we need to left shift it by 3

33
00:01:46.610 --> 00:01:47.290
positions 

34
00:01:47.300 --> 00:01:50.250
So by our formula it will be equal to 12 x

35
00:01:50.260 --> 00:01:54.800
2^ 3 that is 12x8 and we 

36
00:01:54.800 --> 00:01:55.869
get 96 

37
00:01:56.740 --> 00:01:59.300
Now see a programme. In the main function first 

38
00:01:59.300 --> 00:02:02.750
we are declaring an integer var =2  and we are 

39
00:02:02.750 --> 00:02:05.820
printing var into two equal to var left shift one 

40
00:02:05.830 --> 00:02:07.180
and 4 will be printed

41
00:02:07.190 --> 00:02:10.080
Next we have var x 4 equal to var left 

42
00:02:10.080 --> 00:02:13.020
shift 2 and 8 will be printed and next print 

43
00:02:13.020 --> 00:02:17.430
function will be printing var x 8 equal to 

44
00:02:17.430 --> 00:02:20.520
var left shift 3 and 16 will be printed and that 

45
00:02:20.520 --> 00:02:21.730
is how it works 

46
00:02:22.340 --> 00:02:24.620
So that's all and thank you for watching this video 

