WEBVTT

1
00:00:00.140 --> 00:00:02.530
first let us take the alternate bit 

2
00:00:02.530 --> 00:00:03.870
Number 10 and write 

3
00:00:03.870 --> 00:00:05.450
It's binary representation 

4
00:00:06.040 --> 00:00:09.530
Here we can see that the number 10 has alternate 

5
00:00:09.530 --> 00:00:11.350
bits 1010 

6
00:00:12.140 --> 00:00:15.260
Now To solve this problem we need to create some 

7
00:00:15.260 --> 00:00:17.350
mask value or do some tricks 

8
00:00:18.040 --> 00:00:21.160
Now what will happen if we shift the alternate bit 

9
00:00:21.160 --> 00:00:25.220
Number one position to the right the resulted Number still 

10
00:00:25.220 --> 00:00:28.510
has the alternate bit pattern but the bit position will 

11
00:00:28.510 --> 00:00:29.750
change like this 

12
00:00:30.640 --> 00:00:33.910
Now if we do XOR on those two numbers 

13
00:00:34.050 --> 00:00:37.750
it will set different bits to 1 and the remaining bits  

14
00:00:37.750 --> 00:00:40.900
will remain as zero as XOR of equal bits 

15
00:00:40.910 --> 00:00:42.690
is zero now 

16
00:00:42.700 --> 00:00:45.720
In this result we can see that all the right 

17
00:00:45.720 --> 00:00:47.450
most bits are set to one 

18
00:00:47.940 --> 00:00:50.760
And from the power of two logic we can understand 

19
00:00:50.760 --> 00:00:54.530
that this resulted number is a previous number of power 

20
00:00:54.530 --> 00:00:57.830
of two number that is the resulted number is 

21
00:00:57.830 --> 00:01:01.070
two rise two n minus one number so it's next 

22
00:01:01.070 --> 00:01:03.510
number must be a power of two number 

23
00:01:03.730 --> 00:01:07.970
For example here resulted number is 15 and it's 

24
00:01:07.970 --> 00:01:09.650
next number is 16 

25
00:01:10.040 --> 00:01:13.550
Number 16 is a power of two number so after 

26
00:01:13.550 --> 00:01:17.130
performing XOR we need to check whether the next number 

27
00:01:17.130 --> 00:01:19.860
of XOR result is a power of two or 

28
00:01:19.860 --> 00:01:20.370
not 

29
00:01:20.810 --> 00:01:24.210
If the XOR result plus one is a power of two 

30
00:01:24.220 --> 00:01:27.760
we can say that the given number has an alternate bit 

31
00:01:27.760 --> 00:01:30.050
pattern on its binary representation 

32
00:01:30.440 --> 00:01:32.910
Otherwise it is not so 

33
00:01:32.910 --> 00:01:34.490
The logic is very simple 

34
00:01:34.690 --> 00:01:38.160
First right shift given number by one position to the 

35
00:01:38.160 --> 00:01:38.550
right 

36
00:01:38.940 --> 00:01:41.990
Next do XOR on the given number and the 

37
00:01:41.990 --> 00:01:46.650
right shifted number and finally check the resulted number that 

38
00:01:46.650 --> 00:01:50.020
is number plus one is a power of two and 

39
00:01:50.020 --> 00:01:51.010
finally check 

40
00:01:51.090 --> 00:01:54.050
The resulted number plus one is a power of two 

41
00:01:54.640 --> 00:01:57.980
If it is a power of two return one otherwise 

42
00:01:57.990 --> 00:01:58.850
return zero.

