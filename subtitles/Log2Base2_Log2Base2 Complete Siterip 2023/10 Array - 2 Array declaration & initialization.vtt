WEBVTT

1
00:00:00.240 --> 00:00:01.010
Hi friends 

2
00:00:01.020 --> 00:00:06.040
In this video we are going to discuss about initialization and declaration of array

3
00:00:10.530 --> 00:00:12.369
First let us see 

4
00:00:12.369 --> 00:00:14.430
how to declare an array. So this is this 

5
00:00:14.430 --> 00:00:17.780
syntax to declare a one dimensional array 

6
00:00:17.780 --> 00:00:20.180
 where data type is the data type of the array and

7
00:00:20.180 --> 00:00:23.390
It can be int, float, double, char etc and  

8
00:00:23.390 --> 00:00:25.689
array name is the name of the  array and it should be 

9
00:00:25.690 --> 00:00:26.500
a valid variable name 

10
00:00:26.500 --> 00:00:29.310
and size is the size of the array you

11
00:00:29.310 --> 00:00:31.610
want and it should be an integer value within 

12
00:00:31.610 --> 00:00:32.610
square brackets 

13
00:00:32.620 --> 00:00:34.710
And at last we need to put a semi colon. 

14
00:00:35.740 --> 00:00:38.940
Now these are some examples int age[10],

15
00:00:38.940 --> 00:00:41.660
char name[100], float weight[5] etc.

16
00:00:43.240 --> 00:00:46.239
Now let's see how to initialise an array. So we can 

17
00:00:46.250 --> 00:00:48.940
initialise an array while declaring it like this 

18
00:00:49.250 --> 00:00:53.280
Just specify the values separated by commas within curly brackets 

19
00:00:53.580 --> 00:00:56.070
Now if you see the size of the array is 10 

20
00:00:56.210 --> 00:01:00.540
and the number of elements in the array is five so 

21
00:01:00.540 --> 00:01:03.239
in such cases where size is greater than number of 

22
00:01:03.240 --> 00:01:06.590
elements Then the remaining elements will be initialised with zero 

23
00:01:07.140 --> 00:01:09.509
Now if the size of the array is less than number 

24
00:01:09.510 --> 00:01:11.149
of elements in the array like this 

25
00:01:11.160 --> 00:01:14.480
Then the compiler will throw this  and we should avoid 

26
00:01:14.480 --> 00:01:16.020
this kind of initialisation 

27
00:01:16.940 --> 00:01:20.360
Now let's see how to initialise an array without specifying 

28
00:01:20.360 --> 00:01:20.830
the size 

29
00:01:20.830 --> 00:01:23.250
Here we don't specify the size but it will be 

30
00:01:23.250 --> 00:01:24.660
determined by the compiler 

31
00:01:26.040 --> 00:01:28.360
Now let us see a programme which takes input from 

32
00:01:28.360 --> 00:01:30.950
the user and store it in an array using a loop

33
00:01:31.640 --> 00:01:33.830
and in case of arrays we know exact  

34
00:01:33.830 --> 00:01:37.190
array size while initialising it. so we can use for 

35
00:01:37.190 --> 00:01:37.610
loop

36
00:01:38.440 --> 00:01:41.210
So we have the main function and we are declaring 

37
00:01:41.210 --> 00:01:43.970
an integer array arr with size five 

38
00:01:44.210 --> 00:01:47.619
So this array will be created and another integer variable  i

39
00:01:47.630 --> 00:01:48.650
is created 

40
00:01:49.040 --> 00:01:51.720
And now we ask the user to enter the elements 

41
00:01:51.940 --> 00:01:55.100
and using a for loop with five iterations we read 

42
00:01:55.100 --> 00:01:56.920
these five elements to arr. 

43
00:01:57.940 --> 00:02:01.730
So in the first iteration, initialisation is done and 

44
00:02:01.740 --> 00:02:04.399
i =0 now and i is less than five 

45
00:02:04.410 --> 00:02:06.940
So we go inside and read the number entered by 

46
00:02:06.940 --> 00:02:10.190
the user into arr[i] which is arr[0] 

47
00:02:10.190 --> 00:02:10.520
 

48
00:02:10.530 --> 00:02:13.680
So 10 is stored into arr[0]. now i is

49
00:02:13.690 --> 00:02:18.859
incremented and it becomes 1. Now in the second iteration 

50
00:02:18.860 --> 00:02:21.770
condition is true since i is less than five 

51
00:02:21.940 --> 00:02:24.119
So suppose user enters the number 20 

52
00:02:24.120 --> 00:02:27.350
Now it is read into arr[1] and i is

53
00:02:27.350 --> 00:02:30.620
incremented.  Now in the third iteration condition 

54
00:02:30.620 --> 00:02:32.640
is 2less than 5 which is true 

55
00:02:32.770 --> 00:02:36.880
So now user enters the number 30. It is read 

56
00:02:36.880 --> 00:02:40.170
into arr[2] and i is incremented and becomes 

57
00:02:40.170 --> 00:02:40.549
3

58
00:02:41.040 --> 00:02:43.920
Now in the fourth iteration condition i less than five 

59
00:02:43.920 --> 00:02:44.760
is again true 

60
00:02:44.850 --> 00:02:47.970
So suppose user enters the number 40 now and it 

61
00:02:47.970 --> 00:02:51.960
is read into arr[3] and i is incremented. now 

62
00:02:51.960 --> 00:02:54.709
in the fifth iteration condition is 4less than 5 

63
00:02:54.710 --> 00:02:55.390
which is true 

64
00:02:55.520 --> 00:02:57.940
So now user enters the number 50 

65
00:02:57.950 --> 00:03:01.140
It is read into arr[4] and i is incremented

66
00:03:01.150 --> 00:03:04.240
and it becomes five. now again when it checks the 

67
00:03:04.240 --> 00:03:07.900
condition i less than  5 it fails and control comes out 

68
00:03:07.900 --> 00:03:10.710
of the for loop. Now in the array we have 10

69
00:03:10.720 --> 00:03:12.430
20 30 40 and 50 

70
00:03:13.140 --> 00:03:15.670
Now we have another for loop which prints the elements 

71
00:03:15.670 --> 00:03:19.100
in the array. so we have i=0 and iless than 5

72
00:03:19.100 --> 00:03:19.880


73
00:03:20.270 --> 00:03:23.580
So it goes inside and prints arr[0] which 

74
00:03:23.580 --> 00:03:25.960
is 10 and i will be incremented.

75
00:03:27.040 --> 00:03:29.549
Now i = 1 and i less than  5 

76
00:03:29.560 --> 00:03:30.710
So the condition is true 

77
00:03:30.710 --> 00:03:33.280
So it goes inside and prints arr[i] which 

78
00:03:33.280 --> 00:03:35.609
is arr[1] which is 20 and i will 

79
00:03:35.610 --> 00:03:36.330
be incremented.

80
00:03:38.340 --> 00:03:40.950
Now i has become 2 and i less than  5

81
00:03:40.960 --> 00:03:43.269
So it prints arr[2] which is 30 and 

82
00:03:43.280 --> 00:03:44.470
i will be incremented 

83
00:03:45.840 --> 00:03:48.160
Now i=3 and 3 less than  5

84
00:03:48.160 --> 00:03:48.549


85
00:03:48.550 --> 00:03:50.989
So it goes inside and prints arr[3] which 

86
00:03:50.990 --> 00:03:53.359
is 40 and i will be incremented

87
00:03:54.440 --> 00:03:57.160
Now i = 4 and 4 less than  5 

88
00:03:57.160 --> 00:03:58.260
so the condition is true 

89
00:03:58.260 --> 00:04:02.710
So it goes inside  and prints arr[4] which is 50 

90
00:04:02.720 --> 00:04:05.880
and i will be incremented Now I has become 

91
00:04:05.890 --> 00:04:08.700
5 and when it checks the condition i less than  5

92
00:04:08.710 --> 00:04:11.360
It fails and control comes out of the for loop

93
00:04:11.370 --> 00:04:13.720
and return zero .So that's all and thank you for watching this video.

