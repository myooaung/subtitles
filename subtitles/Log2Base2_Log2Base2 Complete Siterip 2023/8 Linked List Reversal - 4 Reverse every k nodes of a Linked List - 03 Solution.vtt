WEBVTT

1
00:00:00.140 --> 00:00:02.680
so we can re use the reverse sub list function 

2
00:00:02.680 --> 00:00:03.850
that we learnt before 

3
00:00:04.340 --> 00:00:07.160
Instead of passing the start and end of list we 

4
00:00:07.160 --> 00:00:09.850
can simply pass the value of K into the function 

5
00:00:10.150 --> 00:00:12.940
If K is less than or equal to one then the 

6
00:00:12.940 --> 00:00:15.770
reversed list will also be the same so we can 

7
00:00:15.770 --> 00:00:16.620
return the head 

8
00:00:16.820 --> 00:00:19.940
And also if the list is empty we can return 

9
00:00:19.940 --> 00:00:20.300
head 

10
00:00:20.640 --> 00:00:23.760
So write if K is less than or equal to 

11
00:00:23.760 --> 00:00:28.230
one or head equal to null return head now mark current 

12
00:00:28.240 --> 00:00:33.080
as head and prev as null So write struck nodes Star 

13
00:00:33.080 --> 00:00:36.630
current equal to head and start prev equal to null Now in 

14
00:00:36.630 --> 00:00:40.270
our infinite loop mark First part last node as prev 

15
00:00:40.660 --> 00:00:44.040
and second part Last node as current also declare the 

16
00:00:44.040 --> 00:00:44.930
next pointer

17
00:00:45.010 --> 00:00:47.960
Now we need to reverse the first K nodes 

18
00:00:48.130 --> 00:00:52.260
So changed the for loop condition to current not equal to null 

19
00:00:52.270 --> 00:00:55.340
and I less than or equal to K And write the 

20
00:00:55.340 --> 00:00:57.150
reverse linked List Logic inside 

21
00:00:58.140 --> 00:01:00.880
Now we need to connect the first part Last node 

22
00:01:00.880 --> 00:01:03.730
with the previous node and if previous is null we 

23
00:01:03.730 --> 00:01:06.760
need to make it the head so write If first 

24
00:01:06.760 --> 00:01:10.400
part last node not equal to null make first part 

25
00:01:10.400 --> 00:01:14.640
last node next equal to prev else make head equal 

26
00:01:14.640 --> 00:01:15.030
to prev 

27
00:01:15.250 --> 00:01:17.320
And now we need to connect their second part 

28
00:01:17.320 --> 00:01:18.830
Last node with current 

29
00:01:18.900 --> 00:01:22.880
So write second part last node next equal to current 

30
00:01:22.910 --> 00:01:26.070
Now the first K nodes are reversed In the next 

31
00:01:26.070 --> 00:01:26.790
iteration 

32
00:01:26.930 --> 00:01:28.970
Next K nodes must be reversed 

33
00:01:29.150 --> 00:01:32.150
So we need to change prev and current accordingly 

34
00:01:32.640 --> 00:01:34.720
Current is already at right position 

35
00:01:34.750 --> 00:01:38.190
We only need to change prev so write prev equal 

36
00:01:38.190 --> 00:01:39.280
to second part 

37
00:01:39.280 --> 00:01:40.050
Last node 

38
00:01:40.440 --> 00:01:43.450
So this way every K nodes will be reversed 

39
00:01:44.040 --> 00:01:47.070
So we need to add the Loop termination condition also 

40
00:01:47.080 --> 00:01:51.490
So write if current equal to null break and finally 

41
00:01:51.500 --> 00:01:52.890
we can return the head.

