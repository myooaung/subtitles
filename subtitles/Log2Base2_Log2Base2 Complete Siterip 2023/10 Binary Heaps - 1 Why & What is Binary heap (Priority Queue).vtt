WEBVTT

1
00:00:00.540 --> 00:00:04.010
Hello friends in this video let us discuss about the 

2
00:00:04.010 --> 00:00:05.210
need for binary heap

3
00:00:05.210 --> 00:00:09.440
let us assume some people are standing in the 

4
00:00:09.440 --> 00:00:10.850
hospital in a queue 

5
00:00:11.740 --> 00:00:15.160
Now what is the property of the queue The person 

6
00:00:15.160 --> 00:00:18.350
who comes first will be sent to the doctor first 

7
00:00:18.840 --> 00:00:22.050
But what if a person comes in a serious condition 

8
00:00:22.440 --> 00:00:26.490
We need to give him some priority right And he 

9
00:00:26.490 --> 00:00:28.250
should visit the doctor first 

10
00:00:28.740 --> 00:00:30.840
We can call this as a priority 

11
00:00:30.840 --> 00:00:31.440
Queue 

12
00:00:31.520 --> 00:00:32.160
That is 

13
00:00:32.280 --> 00:00:36.460
Each item in a queue is given some priority and 

14
00:00:36.460 --> 00:00:39.970
further dequeue operation will be done based on the 

15
00:00:39.970 --> 00:00:40.670
priority 

16
00:00:41.540 --> 00:00:44.450
This is also called as priority queues 

17
00:00:45.040 --> 00:00:47.520
We can efficiently implement a priority 

18
00:00:47.520 --> 00:00:47.900
Queue 

19
00:00:47.910 --> 00:00:52.110
Using binary heap Now let us learn what 

20
00:00:52.120 --> 00:00:55.930
is a binary Heap binary heap is a complete 

21
00:00:55.940 --> 00:01:01.400
binary tree which satisfies the heap ordering property Before discussing 

22
00:01:01.400 --> 00:01:02.140
with heap 

23
00:01:02.150 --> 00:01:05.580
Let us understand the difference between a full tree and 

24
00:01:05.580 --> 00:01:06.550
a complete tree 

25
00:01:07.340 --> 00:01:08.470
A full binary 

26
00:01:08.470 --> 00:01:11.820
is a tree in which every node other than 

27
00:01:11.820 --> 00:01:13.850
the leaves has two Children 

28
00:01:14.440 --> 00:01:18.090
See here every node has exactly two Children 

29
00:01:18.100 --> 00:01:22.250
Other than the leafs this is called a full tree 

30
00:01:22.840 --> 00:01:26.290
Where a complete binary tree is a full tree 

31
00:01:26.300 --> 00:01:29.960
in which the last level may contain lesser nodes but 

32
00:01:29.970 --> 00:01:32.350
it should be as left as possible 

33
00:01:33.740 --> 00:01:37.360
See here the last level is incomplete but the nodes 

34
00:01:37.560 --> 00:01:40.050
are as left as possible 

35
00:01:40.840 --> 00:01:44.490
So this is called a complete tree in the same 

36
00:01:44.490 --> 00:01:44.940
tree 

37
00:01:44.950 --> 00:01:48.020
If last level nodes are in the right side leaving 

38
00:01:48.020 --> 00:01:51.170
the left side vacant then it is not a complete 

39
00:01:51.170 --> 00:01:51.450
tree 

40
00:01:51.840 --> 00:01:55.250
The last level nodes should be as left as possible 

41
00:01:55.840 --> 00:01:58.980
So the binary heap is a complete tree that is 

42
00:01:58.990 --> 00:02:00.620
other than the last level 

43
00:02:00.850 --> 00:02:03.250
All levels should be felt completely 

44
00:02:03.940 --> 00:02:05.950
We have two kinds of heaps 

45
00:02:06.100 --> 00:02:07.530
Min heap and max heap

46
00:02:07.530 --> 00:02:07.760
Here 

47
00:02:08.440 --> 00:02:12.740
First letters discuss about Min heap in Min heap every 

48
00:02:12.740 --> 00:02:13.520
parent node 

49
00:02:13.520 --> 00:02:17.280
Value will be lesser than the Children's Value that is 

50
00:02:17.470 --> 00:02:20.150
the parent node will have the minimum value 

51
00:02:20.540 --> 00:02:21.600
See this example 

52
00:02:21.610 --> 00:02:23.350
This is a min heap tree 

53
00:02:23.740 --> 00:02:25.400
We can take any sub tree 

54
00:02:25.410 --> 00:02:27.510
It's root will be the minimum value 

55
00:02:27.870 --> 00:02:30.730
Take the right sub tree forty is the root and it 

56
00:02:30.730 --> 00:02:32.950
is the minimum value in this sub tree 

57
00:02:33.640 --> 00:02:35.270
Now take the left sub tree 

58
00:02:35.390 --> 00:02:37.790
Twenty is the root and it is the minimum 

59
00:02:37.790 --> 00:02:41.420
value and the root of a any min heap will be 

60
00:02:41.420 --> 00:02:43.450
the minimum value in that tree 

61
00:02:43.940 --> 00:02:44.560
Here 

62
00:02:44.750 --> 00:02:48.170
10 is the minimum value in this tree and it is the 

63
00:02:48.170 --> 00:02:49.250
root of the tree 

64
00:02:49.640 --> 00:02:53.100
So in min heap the node with minimum priority will 

65
00:02:53.100 --> 00:02:56.190
be present at the root node so that we can 

66
00:02:56.200 --> 00:02:59.550
access the minimum priority node at constant time 

67
00:03:00.340 --> 00:03:03.970
Now let us discuss about Max Heap in Max heap 

68
00:03:04.160 --> 00:03:07.610
Every parent nodes value will be greater than the Children's 

69
00:03:07.610 --> 00:03:08.150
value 

70
00:03:08.690 --> 00:03:12.050
That is the parent node will have the maximum value 

71
00:03:12.540 --> 00:03:13.730
see this example 

72
00:03:13.740 --> 00:03:15.350
This is a Max Heap tree 

73
00:03:15.940 --> 00:03:17.670
We can take any sub tree 

74
00:03:17.710 --> 00:03:19.950
It's root will be the maximum value 

75
00:03:20.540 --> 00:03:21.810
Take the right sub tree 

76
00:03:21.820 --> 00:03:24.820
70 is the root and it is the maximum value 

77
00:03:24.830 --> 00:03:25.870
in this sub tree 

78
00:03:26.540 --> 00:03:29.660
Take the left sub Tree fifty is the root and 

79
00:03:29.670 --> 00:03:34.230
it is the maximum value and the root of any 

80
00:03:34.230 --> 00:03:37.410
max heap tree will be the maximum value in that 

81
00:03:37.410 --> 00:03:37.750
tree 

82
00:03:38.240 --> 00:03:42.230
Here 100 is a maximum value in this tree and it is 

83
00:03:42.230 --> 00:03:43.250
the root of the tree 

84
00:03:43.840 --> 00:03:47.660
So in Max heap the node with maximum priority will be 

85
00:03:47.660 --> 00:03:50.520
present at the root nodes so that we can access 

86
00:03:50.520 --> 00:03:55.040
the maximum priority node at constant time so today we 

87
00:03:55.040 --> 00:03:59.490
have discussed about the need of binary Heap and 

88
00:03:59.490 --> 00:04:01.490
we discussed about priority Queue 

89
00:04:01.690 --> 00:04:04.810
And we learn that we have two kinds of heaps 

90
00:04:04.930 --> 00:04:08.050
min heap and max heap in a min heap 

91
00:04:08.110 --> 00:04:11.460
The low priority node will be present at root and 

92
00:04:11.460 --> 00:04:12.370
in max heap 

93
00:04:12.370 --> 00:04:15.250
The maximum priority node will be present at the root 

94
00:04:15.840 --> 00:04:18.730
In the next video we will learn how to construct 

95
00:04:18.730 --> 00:04:20.050
a heap in detail.

