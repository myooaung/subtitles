WEBVTT

1
00:00:00.000 --> 00:00:03.150
Now in the implementation, we have to do

2
00:00:03.160 --> 00:00:04.160
three steps. 

3
00:00:04.590 --> 00:00:07.910
The first step is to reverse the array from index 

4
00:00:07.910 --> 00:00:10.060
0 to n-k-1.

5
00:00:10.060 --> 00:00:14.350
Then reverse array from n-k to n-1

6
00:00:14.360 --> 00:00:15.350


7
00:00:15.740 --> 00:00:19.560
And finally reverse the array from 0 to n-1 

8
00:00:19.560 --> 00:00:19.860


9
00:00:20.440 --> 00:00:24.680
So let us first write a function reverse to do this reverse 

10
00:00:24.680 --> 00:00:30.330
operation and we pass the array arr, it's start and end into 

11
00:00:30.330 --> 00:00:31.150
this function.

12
00:00:31.940 --> 00:00:35.640
To do the reversal, we can swap first and last 

13
00:00:35.640 --> 00:00:39.810
elements, second and second to last elements, third and third 

14
00:00:39.810 --> 00:00:44.580
to last elements and so on. So write int temp equal to 

15
00:00:44.580 --> 00:00:48.470
array[start] array[start]++ equal to

16
00:00:48.470 --> 00:00:52.410
to array[end] array[end]-- equal 

17
00:00:52.410 --> 00:00:53.050
to temp 

18
00:00:53.740 --> 00:00:57.790
And do the swapping as long as start is less than end.

19
00:00:57.800 --> 00:00:58.250


20
00:00:58.640 --> 00:01:02.650
So put this code in a while loop 

21
00:01:02.650 --> 00:01:03.850
while start less than end 

22
00:01:04.440 --> 00:01:06.030
So this function is done. 

23
00:01:06.040 --> 00:01:08.700
Now let us write another function 

24
00:01:08.710 --> 00:01:12.880
Rotate array to rotate the given array by K positions 

25
00:01:13.440 --> 00:01:17.380
We pass the array, it's size n and the value 

26
00:01:17.390 --> 00:01:18.950
K into this function 

27
00:01:19.540 --> 00:01:22.450
And what we have to do here is, to reverse 

28
00:01:22.450 --> 00:01:26.010
the array from index 0 to n-k-1 first.

29
00:01:26.010 --> 00:01:31.990
So call reverse function by passing array, zero and n-k-1

30
00:01:31.990 --> 00:01:35.300
So it will be reversed 

31
00:01:35.640 --> 00:01:39.130
Next step is to reverse the array from index n-k to n-1

32
00:01:39.130 --> 00:01:43.190
So call reverse function 

33
00:01:43.200 --> 00:01:48.250
again by passing the array, n-k and n-1

34
00:01:48.640 --> 00:01:50.550
So it will also be reversed. 

35
00:01:51.040 --> 00:01:54.250
Now the final step is to reverse the whole array 

36
00:01:54.640 --> 00:01:57.550
That is from index zero to n-1

37
00:01:58.040 --> 00:02:03.620
So call reverse function by passing the array, index zero and n-1

38
00:02:03.620 --> 00:02:04.350


39
00:02:04.820 --> 00:02:05.860
And the work is done.

40
00:02:05.870 --> 00:02:09.050
We got the array rotated by k positions. 

