WEBVTT
1
00:00:00.005 --> 00:00:04.004
- [Instructor] Now we will build our first controller.

2
00:00:04.004 --> 00:00:05.006
So the first thing that we're going to do

3
00:00:05.006 --> 00:00:09.000
is we're going to open up source, main, java.

4
00:00:09.000 --> 00:00:12.001
We're going to create a new package,

5
00:00:12.001 --> 00:00:15.004
and that package is going to be called web.

6
00:00:15.004 --> 00:00:19.007
And within that package, let's create a new class

7
00:00:19.007 --> 00:00:26.003
called RoomReservationController.

8
00:00:26.003 --> 00:00:29.004
We will annotate this with @Controller,

9
00:00:29.004 --> 00:00:33.007
and we're also going to annotate this with RequestMapping.

10
00:00:33.007 --> 00:00:37.005
The RequestMapping that we are going to use

11
00:00:37.005 --> 00:00:41.004
is /reservations.

12
00:00:41.004 --> 00:00:43.006
Now, in order for this class to work properly,

13
00:00:43.006 --> 00:00:45.002
we're going to need a couple attributes,

14
00:00:45.002 --> 00:00:50.004
so private final DateUtils

15
00:00:50.004 --> 00:00:56.003
and private final ReservationService.

16
00:00:56.003 --> 00:00:59.006
Let's create a constructor.

17
00:00:59.006 --> 00:01:01.007
Now, we're going to create a method,

18
00:01:01.007 --> 00:01:03.008
and let's start with the signature of that method,

19
00:01:03.008 --> 00:01:09.007
so public String getReservations.

20
00:01:09.007 --> 00:01:14.005
We are going to take in a string, which is a dateString,

21
00:01:14.005 --> 00:01:18.004
and we are going to take in something called a model.

22
00:01:18.004 --> 00:01:19.005
And as you might imagine,

23
00:01:19.005 --> 00:01:25.001
that is the Spring framework's model as part of the MVC.

24
00:01:25.001 --> 00:01:26.007
Now, let's annotate this method.

25
00:01:26.007 --> 00:01:29.001
So we're going to do a RequestMapping.

26
00:01:29.001 --> 00:01:33.007
Now, usually, I write one class per URL endpoint,

27
00:01:33.007 --> 00:01:38.004
and then I write as many methods in there as is necessary

28
00:01:38.004 --> 00:01:40.003
in order to handle all of the verbs

29
00:01:40.003 --> 00:01:42.001
that I need to respond to.

30
00:01:42.001 --> 00:01:43.005
So we're going to do the same here.

31
00:01:43.005 --> 00:01:45.008
So we're going to do a RequestMapping,

32
00:01:45.008 --> 00:01:47.007
but instead of defining a URL,

33
00:01:47.007 --> 00:01:53.004
we're simply going to specify RequestMethod.GET.

34
00:01:53.004 --> 00:01:56.006
Now, this dateString needs to come from somewhere,

35
00:01:56.006 --> 00:02:02.001
and we're going to actually use a RequestParam.

36
00:02:02.001 --> 00:02:06.006
And the RequestParam will have the name

37
00:02:06.006 --> 00:02:09.008
or value of date.

38
00:02:09.008 --> 00:02:11.000
And we're going to also say

39
00:02:11.000 --> 00:02:14.006
that this is required=false.

40
00:02:14.006 --> 00:02:17.000
And there's a reason we're going to say that it's false,

41
00:02:17.000 --> 00:02:20.001
and I'll get to that in just a moment.

42
00:02:20.001 --> 00:02:21.004
So now that this is done,

43
00:02:21.004 --> 00:02:24.004
we will create an instance of a date.

44
00:02:24.004 --> 00:02:27.001
We will use the dateUtils,

45
00:02:27.001 --> 00:02:29.005
and we will create a date from string.

46
00:02:29.005 --> 00:02:33.007
And that's going to be the date string that's passed in.

47
00:02:33.007 --> 00:02:36.009
Now, you may be asking, what happens if it's optional?

48
00:02:36.009 --> 00:02:39.001
I just talked about that.

49
00:02:39.001 --> 00:02:42.005
If you go look at this actual method,

50
00:02:42.005 --> 00:02:46.008
if the date comes in as null, we will return a new date,

51
00:02:46.008 --> 00:02:49.003
which means it will be equal to today.

52
00:02:49.003 --> 00:02:52.002
So if no date is passed in, it's today,

53
00:02:52.002 --> 00:02:56.005
otherwise, use the date that's passed in.

54
00:02:56.005 --> 00:02:57.006
Now that we have a date,

55
00:02:57.006 --> 00:03:02.000
we can get a list of RoomReservation,

56
00:03:02.000 --> 00:03:06.004
and we will call this roomReservations,

57
00:03:06.004 --> 00:03:11.008
and it will equal this.reservationService

58
00:03:11.008 --> 00:03:14.008
.getRoomReservationsForDate.

59
00:03:14.008 --> 00:03:16.009
We will pass in the date.

60
00:03:16.009 --> 00:03:20.008
We will import java.util.List.

61
00:03:20.008 --> 00:03:23.002
And now we're going to take our model element,

62
00:03:23.002 --> 00:03:26.000
and we're going to add an attribute to it.

63
00:03:26.000 --> 00:03:29.009
So this model is live, and that's what we need to use.

64
00:03:29.009 --> 00:03:33.004
We're not going to actually create one to send the model.

65
00:03:33.004 --> 00:03:35.003
We're going to let the framework do it.

66
00:03:35.003 --> 00:03:36.004
This is a live model.

67
00:03:36.004 --> 00:03:39.008
We can put whatever data we need to on here.

68
00:03:39.008 --> 00:03:42.001
And in this case, we were going to put an attribute

69
00:03:42.001 --> 00:03:47.003
called roomReservations and pass it our list.

70
00:03:47.003 --> 00:03:51.001
Now, at this point, we need to return a string.

71
00:03:51.001 --> 00:03:54.000
That doesn't really make sense until you understand

72
00:03:54.000 --> 00:03:57.006
how this template engine works with Spring.

73
00:03:57.006 --> 00:04:00.008
The string is actually the name

74
00:04:00.008 --> 00:04:05.006
of the template that we want to return.

75
00:04:05.006 --> 00:04:09.007
But instead of saying the full name of the template,

76
00:04:09.007 --> 00:04:14.003
we actually just use the template's name

77
00:04:14.003 --> 00:04:16.005
without the file extension.

78
00:04:16.005 --> 00:04:20.007
And the reason for that is Spring Boot Starter Thymeleaf

79
00:04:20.007 --> 00:04:23.000
is configured in such a way

80
00:04:23.000 --> 00:04:27.006
that that HTML tag at the end doesn't matter.

81
00:04:27.006 --> 00:04:30.009
And we'll talk more about that in the next video.

82
00:04:30.009 --> 00:04:35.006
So we now are going to return something called roomres,

83
00:04:35.006 --> 00:04:38.009
and we will build that roomres template.

84
00:04:38.009 --> 00:04:41.002
There's one other thing that I want to do,

85
00:04:41.002 --> 00:04:43.003
and I want to go to our static index file

86
00:04:43.003 --> 00:04:46.000
that we built earlier,

87
00:04:46.000 --> 00:04:51.004
and I want to add an a link

88
00:04:51.004 --> 00:04:54.006
to /reservations,

89
00:04:54.006 --> 00:04:58.006
and we will call this Room Reservations.

90
00:04:58.006 --> 00:05:00.007
This way, if we forget to type in the URL,

91
00:05:00.007 --> 00:05:01.007
we've got a link to it.

92
00:05:01.007 --> 00:05:03.005
It'll save you some time.

93
00:05:03.005 --> 00:05:05.002
Don't ask me how I know that.

94
00:05:05.002 --> 00:05:07.005
I know it from experience.

95
00:05:07.005 --> 00:05:09.005
That's all we need to do for this video.

96
00:05:09.005 --> 00:05:12.000
Come in next, and we're going to write some Thymeleaf.

