WEBVTT
1
00:00:00.005 --> 00:00:02.003
- [Instructor] So we just got done creating a project,

2
00:00:02.003 --> 00:00:04.000
and we've downloaded it.

3
00:00:04.000 --> 00:00:05.002
Now it's time to take a look

4
00:00:05.002 --> 00:00:08.002
at what comes with a Spring Boot project

5
00:00:08.002 --> 00:00:11.000
from Spring Initializr.

6
00:00:11.000 --> 00:00:13.000
Now, I'd like you to open up your IDE

7
00:00:13.000 --> 00:00:15.008
and open up the code that you downloaded

8
00:00:15.008 --> 00:00:18.009
and move to wherever you move it on your directory.

9
00:00:18.009 --> 00:00:21.009
And I've done that just here.

10
00:00:21.009 --> 00:00:23.009
If we open up the learning-spring,

11
00:00:23.009 --> 00:00:26.008
you will see that we have a bin directory.

12
00:00:26.008 --> 00:00:30.002
Now, this bin directory came from the exercise files,

13
00:00:30.002 --> 00:00:32.001
so you need to grab that out

14
00:00:32.001 --> 00:00:33.009
and drop it in your learning-spring.

15
00:00:33.009 --> 00:00:36.003
This is not something that would've come

16
00:00:36.003 --> 00:00:39.007
from the download directory itself.

17
00:00:39.007 --> 00:00:40.008
Now, if we scroll down,

18
00:00:40.008 --> 00:00:42.009
you can open up the source directory.

19
00:00:42.009 --> 00:00:45.009
And we're going to start in source, main, java.

20
00:00:45.009 --> 00:00:48.003
You'll see that we have an application class

21
00:00:48.003 --> 00:00:51.002
called LearningSpringApplication.

22
00:00:51.002 --> 00:00:52.008
Now, Initializr named that

23
00:00:52.008 --> 00:00:54.009
based on our configuration for Spring,

24
00:00:54.009 --> 00:00:56.005
but you'll see that this is annotated

25
00:00:56.005 --> 00:00:59.003
with @SpringBootApplication,

26
00:00:59.003 --> 00:01:01.007
and it also has our main method.

27
00:01:01.007 --> 00:01:05.001
And this is what starts a Spring Boot application,

28
00:01:05.001 --> 00:01:08.002
just like any application, it's the main method.

29
00:01:08.002 --> 00:01:11.006
That annotation @SpringBootApplication,

30
00:01:11.006 --> 00:01:14.006
and we're going to talk a little bit about annotations later,

31
00:01:14.006 --> 00:01:17.003
tells the application context,

32
00:01:17.003 --> 00:01:20.006
when we run this as a Spring application,

33
00:01:20.006 --> 00:01:23.006
to use this as the base for component scanning

34
00:01:23.006 --> 00:01:25.004
as well as auto-configuration

35
00:01:25.004 --> 00:01:30.007
because it is @SpringBoot and not just @Configuration.

36
00:01:30.007 --> 00:01:32.008
Now, if we open up the resources directory,

37
00:01:32.008 --> 00:01:36.002
you'll notice we have a static folder, a templates folder,

38
00:01:36.002 --> 00:01:40.001
and those we got because we used the web package.

39
00:01:40.001 --> 00:01:42.007
We also have an application.properties file.

40
00:01:42.007 --> 00:01:45.000
Now, currently this is empty,

41
00:01:45.000 --> 00:01:47.005
but this is where we would put any of our properties files

42
00:01:47.005 --> 00:01:48.009
that we are going to use

43
00:01:48.009 --> 00:01:54.004
to control the configuration of the application context.

44
00:01:54.004 --> 00:01:56.007
You'll notice there's also a test directory,

45
00:01:56.007 --> 00:01:59.008
and we got a single test for free.

46
00:01:59.008 --> 00:02:01.009
Now, you may have noticed when you were

47
00:02:01.009 --> 00:02:04.009
running your application in the previous video

48
00:02:04.009 --> 00:02:08.002
that some ASCII art with the word Spring came up.

49
00:02:08.002 --> 00:02:09.007
And if you read around there,

50
00:02:09.007 --> 00:02:12.003
it says that it was testing your application.

51
00:02:12.003 --> 00:02:14.003
What gets tested by default

52
00:02:14.003 --> 00:02:17.008
is just that the application context loads

53
00:02:17.008 --> 00:02:20.008
by calling this SpringBootTest.

54
00:02:20.008 --> 00:02:24.000
We're going to leverage testing a lot later in the course,

55
00:02:24.000 --> 00:02:27.002
but just know for now that we're testing our application

56
00:02:27.002 --> 00:02:29.002
from the very beginning,

57
00:02:29.002 --> 00:02:34.003
whenever we run build or run on this application.

58
00:02:34.003 --> 00:02:36.007
Now, we also got a gitignore.

59
00:02:36.007 --> 00:02:40.008
We got a HELP.md that will help you with some of the details

60
00:02:40.008 --> 00:02:44.006
that you may need when using Spring.

61
00:02:44.006 --> 00:02:46.009
We got some Maven commands, and these are useful

62
00:02:46.009 --> 00:02:49.007
if you don't have Maven on your machine,

63
00:02:49.007 --> 00:02:52.001
you can use these to run Maven commands

64
00:02:52.001 --> 00:02:53.005
without downloading Maven.

65
00:02:53.005 --> 00:02:56.003
It will do the download for you.

66
00:02:56.003 --> 00:02:57.008
The real meat and potatoes, however,

67
00:02:57.008 --> 00:03:00.007
comes from our pom.xml file.

68
00:03:00.007 --> 00:03:03.004
Here, you'll see very standard POM definition

69
00:03:03.004 --> 00:03:06.007
that matched what we chose in Spring Initializr.

70
00:03:06.007 --> 00:03:08.007
You're also going to see some details

71
00:03:08.007 --> 00:03:10.009
about the artifact and the group

72
00:03:10.009 --> 00:03:13.008
and where this application lives.

73
00:03:13.008 --> 00:03:15.007
Now, if we keep scrolling down,

74
00:03:15.007 --> 00:03:18.000
you will see that we have a dependency added,

75
00:03:18.000 --> 00:03:20.009
and that is spring-boot-starter-web,

76
00:03:20.009 --> 00:03:23.009
which is what we selected in Initializr.

77
00:03:23.009 --> 00:03:26.006
You're also going to get spring-boot-starter-test.

78
00:03:26.006 --> 00:03:29.000
Again, testing comes for free with Spring Boot

79
00:03:29.000 --> 00:03:33.008
because it's expected that as a developer, you write tests.

80
00:03:33.008 --> 00:03:35.008
There's also a spring-boot-maven-plugin,

81
00:03:35.008 --> 00:03:38.009
and that allows us to do a lot of the things that we need

82
00:03:38.009 --> 00:03:41.003
to get an executable JAR file

83
00:03:41.003 --> 00:03:44.008
when we run a Maven package command.

84
00:03:44.008 --> 00:03:46.005
Now, the final thing that I want to show you

85
00:03:46.005 --> 00:03:49.003
is I want to go through the list of external dependencies

86
00:03:49.003 --> 00:03:54.004
that we got by simply creating a Spring Boot application.

87
00:03:54.004 --> 00:03:57.003
You'll see, we got some logging information.

88
00:03:57.003 --> 00:04:02.003
We got some JSON documentation through Jackson Core.

89
00:04:02.003 --> 00:04:06.005
We also got jsonpath, which came from testing.

90
00:04:06.005 --> 00:04:11.000
We've got some Jakarta information for J2EE.

91
00:04:11.000 --> 00:04:12.000
As we scroll down a little bit,

92
00:04:12.000 --> 00:04:14.006
you'll see that we also got different logging frameworks.

93
00:04:14.006 --> 00:04:17.007
So we've got log4j, we've got some Logback.

94
00:04:17.007 --> 00:04:20.006
Now we get into the embedded Tomcat.

95
00:04:20.006 --> 00:04:22.004
We have a configured embedded Tomcat.

96
00:04:22.004 --> 00:04:26.003
We saw that when we ran the application and got a 404.

97
00:04:26.003 --> 00:04:28.008
And then we've got JUnit 5

98
00:04:28.008 --> 00:04:32.000
and several other things brought in to help us test,

99
00:04:32.000 --> 00:04:34.001
and some AOP stuff.

100
00:04:34.001 --> 00:04:37.007
But let's take a look at that Tomcat once again

101
00:04:37.007 --> 00:04:40.007
by opening up source, main, resources,

102
00:04:40.007 --> 00:04:43.001
go to the static directory,

103
00:04:43.001 --> 00:04:47.009
and I want you to create a new file called index.html.

104
00:04:47.009 --> 00:04:51.005
Now, I'm going to build an HTML file using my IDE.

105
00:04:51.005 --> 00:04:52.008
You may not be able to do that.

106
00:04:52.008 --> 00:04:56.006
You may have to put the postfix on it of HTML

107
00:04:56.006 --> 00:04:59.005
and then code some of what I'm going to get for free.

108
00:04:59.005 --> 00:05:02.004
Nonetheless, you can get to the same spot.

109
00:05:02.004 --> 00:05:08.001
Now, all I want to do is put in a title here of Landon Hotel,

110
00:05:08.001 --> 00:05:11.008
and that will make a little bit more sense later.

111
00:05:11.008 --> 00:05:15.002
And we're going to simply put in an h1,

112
00:05:15.002 --> 00:05:19.001
Welcome to Landon Hotel.

113
00:05:19.001 --> 00:05:23.002
Now, if we run our application at this point in time,

114
00:05:23.002 --> 00:05:26.003
and I'm just going to use my IDE to run it,

115
00:05:26.003 --> 00:05:29.005
if your IDE isn't clear how to do the running,

116
00:05:29.005 --> 00:05:31.005
look at the documentation,

117
00:05:31.005 --> 00:05:34.005
or you can just simply run a Maven package

118
00:05:34.005 --> 00:05:38.001
like we did before with a java-jar.

119
00:05:38.001 --> 00:05:41.004
Now, I still have my web browser loading localhost:8080.

120
00:05:41.004 --> 00:05:43.008
This time, I'm just going to refresh that page,

121
00:05:43.008 --> 00:05:47.005
and you'll see now we've been served a static web page.

122
00:05:47.005 --> 00:05:49.000
Can't do a lot with static webpages,

123
00:05:49.000 --> 00:05:51.000
but we have an application server up.

124
00:05:51.000 --> 00:05:53.006
It's serving data to our browser,

125
00:05:53.006 --> 00:05:56.001
and we're running it all with Spring Boot

126
00:05:56.001 --> 00:05:58.000
by simply adding one file.

127
00:05:58.000 --> 00:06:01.001
And that really is where the power of Boot comes from

128
00:06:01.001 --> 00:06:03.000
when starting an application.

