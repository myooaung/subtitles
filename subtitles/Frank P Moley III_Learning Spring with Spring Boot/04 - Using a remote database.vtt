WEBVTT
1
00:00:00.005 --> 00:00:02.002
- [Instructor] Very seldom in the real world

2
00:00:02.002 --> 00:00:05.002
do we actually use embedded databases.

3
00:00:05.002 --> 00:00:06.001
In this video,

4
00:00:06.001 --> 00:00:09.000
I'm going to show you how to use a local database

5
00:00:09.000 --> 00:00:11.004
to connect to your data.

6
00:00:11.004 --> 00:00:14.002
Now, if you want to join along for this video,

7
00:00:14.002 --> 00:00:17.003
you will need a Postgres instance.

8
00:00:17.003 --> 00:00:20.005
I've included in the bin directory of the exercise files

9
00:00:20.005 --> 00:00:22.005
a script that I will be using

10
00:00:22.005 --> 00:00:26.001
to start a Docker image instance locally.

11
00:00:26.001 --> 00:00:27.009
You're free to use this on your own.

12
00:00:27.009 --> 00:00:31.003
However, we will continue with the rest of the course

13
00:00:31.003 --> 00:00:33.007
using the current embedded database.

14
00:00:33.007 --> 00:00:35.002
So this is totally up to you.

15
00:00:35.002 --> 00:00:38.000
I just want to show you how it's done.

16
00:00:38.000 --> 00:00:39.009
Now, you need to have Docker installed

17
00:00:39.009 --> 00:00:42.009
or you need to have a Postgres image.

18
00:00:42.009 --> 00:00:44.001
And if you're using Windows,

19
00:00:44.001 --> 00:00:46.003
you're going to have to modify the startup script

20
00:00:46.003 --> 00:00:48.002
to be Windows compatible.

21
00:00:48.002 --> 00:00:52.001
Again, it's not a requirement to continue with this database

22
00:00:52.001 --> 00:00:55.002
because we can use the embedded database going forward.

23
00:00:55.002 --> 00:00:57.004
But with all of that said,

24
00:00:57.004 --> 00:01:00.007
let's jump into our IDEs.

25
00:01:00.007 --> 00:01:01.009
All right, so the first thing we're going to do

26
00:01:01.009 --> 00:01:04.001
is we're going to go into our POM file.

27
00:01:04.001 --> 00:01:08.005
We're going to modify our H2 database

28
00:01:08.005 --> 00:01:13.004
to be a Postgres database.

29
00:01:13.004 --> 00:01:15.009
Now we will run Maven

30
00:01:15.009 --> 00:01:19.002
to allow it to bring in our dependencies.

31
00:01:19.002 --> 00:01:20.001
And while that's going on,

32
00:01:20.001 --> 00:01:21.009
we're going to go to src, main, resources,

33
00:01:21.009 --> 00:01:24.009
and open up our application.properties file.

34
00:01:24.009 --> 00:01:26.009
Now we're going to leave the ScriptUtils

35
00:01:26.009 --> 00:01:29.001
and the ddl-auto alone,

36
00:01:29.001 --> 00:01:30.005
but we are going to add a few.

37
00:01:30.005 --> 00:01:34.003
So spring.jpa.database

38
00:01:34.003 --> 00:01:39.005
In my case, it is postgresql.

39
00:01:39.005 --> 00:01:43.007
spring.datasource.url

40
00:01:43.007 --> 00:01:46.005
And in my case, it is jdbc

41
00:01:46.005 --> 00:01:49.002
:postgresql

42
00:01:49.002 --> 00:01:56.008
://localhost:5432

43
00:01:56.008 --> 00:01:58.004
/dev

44
00:01:58.004 --> 00:02:00.005
And dev is the name of my database

45
00:02:00.005 --> 00:02:03.000
that I have defined in this Docker file.

46
00:02:03.000 --> 00:02:05.001
So, we'll get to that in a moment,

47
00:02:05.001 --> 00:02:08.008
but for right now, just know that that is the URL I'm using.

48
00:02:08.008 --> 00:02:10.007
You are going to have to match that to yours

49
00:02:10.007 --> 00:02:13.002
if you are following along.

50
00:02:13.002 --> 00:02:17.001
So now we're going to give it a datasource username.

51
00:02:17.001 --> 00:02:21.003
And in this case, mine is postgres. Uber secret.

52
00:02:21.003 --> 00:02:22.008
Word of warning here.

53
00:02:22.008 --> 00:02:27.001
You do not want to commit ever to source control

54
00:02:27.001 --> 00:02:29.005
real usernames and passwords.

55
00:02:29.005 --> 00:02:32.005
These are things that should be injected by your runtime

56
00:02:32.005 --> 00:02:35.007
as secrets in a production system.

57
00:02:35.007 --> 00:02:38.005
But for this, it'll be just fine.

58
00:02:38.005 --> 00:02:40.004
So let me pop up a terminal window

59
00:02:40.004 --> 00:02:43.002
and I'm going to navigate to my bin directory.

60
00:02:43.002 --> 00:02:47.003
And I am going to do a start postgres command.

61
00:02:47.003 --> 00:02:50.009
Now, this is going to start up the Docker image,

62
00:02:50.009 --> 00:02:53.000
and then you'll see that it ran the schema.

63
00:02:53.000 --> 00:02:55.007
So there's a whole bunch of inserts that happened.

64
00:02:55.007 --> 00:02:57.007
So now that Postgres is running,

65
00:02:57.007 --> 00:03:03.003
if I run my application,

66
00:03:03.003 --> 00:03:06.005
so let's scroll up here a little bit.

67
00:03:06.005 --> 00:03:10.008
After Tomcat came online and the HikariPool started,

68
00:03:10.008 --> 00:03:13.005
you'll notice that we no longer are using

69
00:03:13.005 --> 00:03:16.006
the schema.sql and data.sql

70
00:03:16.006 --> 00:03:19.001
that are included in src, main, resources.

71
00:03:19.001 --> 00:03:21.006
And that's because it's not using an embedded database.

72
00:03:21.006 --> 00:03:24.004
So it no longer is going to look for those

73
00:03:24.004 --> 00:03:27.000
using the ScriptUtils.

74
00:03:27.000 --> 00:03:29.002
But if we scroll down,

75
00:03:29.002 --> 00:03:32.000
we have returned data from the database,

76
00:03:32.000 --> 00:03:34.007
because when I started up that Docker image,

77
00:03:34.007 --> 00:03:37.004
I used the schema.sql

78
00:03:37.004 --> 00:03:39.009
and the data.sql from the bin directory,

79
00:03:39.009 --> 00:03:42.004
where we originally copied them from,

80
00:03:42.004 --> 00:03:45.002
to populate this database.

81
00:03:45.002 --> 00:03:48.000
And that's really all you have to do

82
00:03:48.000 --> 00:03:50.004
to take a local embedded version

83
00:03:50.004 --> 00:03:53.005
and turn it into a real live remote version.

84
00:03:53.005 --> 00:03:55.003
And obviously, mine's running on my desktop,

85
00:03:55.003 --> 00:03:58.008
but in the real world, the URL wouldn't be localhost.

86
00:03:58.008 --> 00:04:01.007
But that's just a value in a properties file.

87
00:04:01.007 --> 00:04:05.003
For the most part, this is what we do in production

88
00:04:05.003 --> 00:04:08.009
when we move something that I am POCing on my desktop

89
00:04:08.009 --> 00:04:11.004
into a real full-fledged application

90
00:04:11.004 --> 00:04:13.006
as it goes to our environments.

91
00:04:13.006 --> 00:04:17.008
And that's the power of embedded databases with Spring.

92
00:04:17.008 --> 00:04:19.003
Now, for the rest of this course,

93
00:04:19.003 --> 00:04:22.007
you are free to use this Postgres database if you want

94
00:04:22.007 --> 00:04:24.004
and you followed along.

95
00:04:24.004 --> 00:04:26.009
Otherwise, just revert the code back

96
00:04:26.009 --> 00:04:29.007
to the way it looked when we started this video,

97
00:04:29.007 --> 00:04:32.000
or pull it back from the exercise files,

98
00:04:32.000 --> 00:04:35.000
and we'll go forward with the embedded database.

