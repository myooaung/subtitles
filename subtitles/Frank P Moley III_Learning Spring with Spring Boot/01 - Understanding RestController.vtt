WEBVTT
1
00:00:00.005 --> 00:00:02.000
- [Instructor] Now we'll extend what we've learned

2
00:00:02.000 --> 00:00:03.009
about webpages in Spring

3
00:00:03.009 --> 00:00:08.007
and reveal how similar writing ReSTful web services

4
00:00:08.007 --> 00:00:12.005
is with the Spring framework and especially Spring Boot.

5
00:00:12.005 --> 00:00:14.000
An important thing to note here

6
00:00:14.000 --> 00:00:18.003
is this may be the single most common use

7
00:00:18.003 --> 00:00:20.002
of Spring Boot today

8
00:00:20.002 --> 00:00:23.001
and that is used for writing microservices,

9
00:00:23.001 --> 00:00:26.008
especially those based on rests.

10
00:00:26.008 --> 00:00:29.005
With Spring, there's a specialized controller

11
00:00:29.005 --> 00:00:31.008
for ReSTful web services.

12
00:00:31.008 --> 00:00:32.009
In reality,

13
00:00:32.009 --> 00:00:35.001
it's a stereotype of controller

14
00:00:35.001 --> 00:00:37.007
that adds response body to each method

15
00:00:37.007 --> 00:00:41.002
that exposes a request mapping.

16
00:00:41.002 --> 00:00:43.002
Spring uses controllers in general,

17
00:00:43.002 --> 00:00:47.003
for all ReSTful web service endpoints.

18
00:00:47.003 --> 00:00:51.004
I really think of this as another incantation of MVC,

19
00:00:51.004 --> 00:00:57.000
but in this case, our view is the JSON payload by default,

20
00:00:57.000 --> 00:01:00.007
as opposed to an HTML document.

21
00:01:00.007 --> 00:01:02.005
I like to think of this from this perspective,

22
00:01:02.005 --> 00:01:05.003
because once you understand the paradigm,

23
00:01:05.003 --> 00:01:06.009
it becomes very straightforward.

24
00:01:06.009 --> 00:01:11.003
No matter if it's a webservice or a web page.

25
00:01:11.003 --> 00:01:14.002
One cool aspect of response body with Spring

26
00:01:14.002 --> 00:01:16.009
is that it does all of the marshaling,

27
00:01:16.009 --> 00:01:21.002
an unmarshaling for you into a JSON object

28
00:01:21.002 --> 00:01:25.003
or from JSON into a Java object.

29
00:01:25.003 --> 00:01:27.008
I mentioned JSON was the default,

30
00:01:27.008 --> 00:01:33.004
but you can convert this to XML or other content types

31
00:01:33.004 --> 00:01:37.005
with appropriate marshaling on the configuration

32
00:01:37.005 --> 00:01:39.007
of the application context.

33
00:01:39.007 --> 00:01:43.000
Spring can even respond to the accepts header

34
00:01:43.000 --> 00:01:46.001
if you need to support multiple content types

35
00:01:46.001 --> 00:01:48.000
within your application,

36
00:01:48.000 --> 00:01:51.008
as long as you have a marshal or an unmarshaler configured

37
00:01:51.008 --> 00:01:54.004
in the application context.

38
00:01:54.004 --> 00:01:56.007
So let's see how easy it is now

39
00:01:56.007 --> 00:01:59.003
to write a ReSTful based webservice

40
00:01:59.003 --> 00:02:01.000
using Spring and Spring Boot.

