WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.350
Hi,

00:00:00.350 --> 00:00:00.810
everybody,

00:00:00.810 --> 00:00:04.100
and welcome to this lesson on hyper leisure fabric.

00:00:04.100 --> 00:00:08.050
So let's go and look at what is hyper leisure fabric.

00:00:08.050 --> 00:00:14.820
It's basically an open source Blockchain framework that was built to mitigate many of the

00:00:14.820 --> 00:00:18.400
concerns and issues that people had raised around.

00:00:18.400 --> 00:00:20.000
Ethereum platform,

00:00:20.000 --> 00:00:24.690
which again is another platform that's used to build Blockchain networks,

00:00:24.690 --> 00:00:32.770
has defined as one that's used for enterprise grade permissions and in enterprise contexts

00:00:32.770 --> 00:00:33.720
So in other words,

00:00:32.770 --> 00:00:32.770
.

00:00:33.720 --> 00:00:37.980
it's used for large organizations and large network,

00:00:37.980 --> 00:00:44.180
primarily used to build private Blockchain networks where all of the nodes and the

00:00:44.180 --> 00:00:47.180
participating networks are known and verified.

00:00:47.180 --> 00:00:49.790
Now they might not necessarily trust each other,

00:00:49.790 --> 00:00:52.480
but the identity of every note is known.

00:00:52.480 --> 00:00:58.170
That is the main characteristic off a hyper larger fabric network now some characteristics

00:00:58.170 --> 00:00:59.140
of fabric network,

00:00:59.140 --> 00:01:01.850
which make them suitable for organizations.

00:01:01.850 --> 00:01:03.390
First of all,

00:01:03.390 --> 00:01:05.860
all networks are permission in nature,

00:01:05.860 --> 00:01:09.680
which means that unknown piers cannot participate in the network.

00:01:09.680 --> 00:01:15.030
But you are able to set private channels between participants if required,

00:01:15.030 --> 00:01:19.260
and will dig a little bit deeper into those private channels a little later on.

00:01:19.260 --> 00:01:19.780
Secondly,

00:01:19.780 --> 00:01:23.390
transactions are not arbitrarily mind by participants.

00:01:23.390 --> 00:01:29.180
They're committed with low latency and high throughput verification and commitment are

00:01:29.180 --> 00:01:32.530
performed by dedicated peers or dedicated notes.

00:01:32.530 --> 00:01:38.550
It all does a modular design in terms off the format of the leisure data they have.

00:01:38.550 --> 00:01:44.340
Something called membership service Providers was determined what nodes can participate as

00:01:44.340 --> 00:01:47.630
well as the consensus a lager of them that will be used.

00:01:47.630 --> 00:01:53.360
And all of this is plug herbal and configurable based on your business use case Now,

00:01:53.360 --> 00:01:57.390
just to give you a quick overview about what I mean by permission.

00:01:57.390 --> 00:01:57.610
Now,

00:01:57.610 --> 00:02:00.480
as you guys can see from this graphic,

00:02:00.480 --> 00:02:03.570
it gives you a good overview in terms of permission,

00:02:03.570 --> 00:02:07.880
less versus permission and private versus public.

00:02:07.880 --> 00:02:13.260
It gives good or view in terms of the pros and cons off each where one.

00:02:13.260 --> 00:02:21.250
You have high anonymity low validators as compared to low anonymity and high validators.

00:02:21.250 --> 00:02:24.040
So it just depends on your business use case,

00:02:24.040 --> 00:02:26.060
which one you're trying to work with.

00:02:26.060 --> 00:02:31.090
What is more important to you in terms of the applications that you'll be using and you

00:02:31.090 --> 00:02:36.070
live building upon will determine what type of Blockchain network you'll be using,

00:02:36.070 --> 00:02:37.450
whether it's permission door,

00:02:37.450 --> 00:02:43.690
UN permission and the hyper ledger fabric that this course is based upon Is Permission

00:02:43.690 --> 00:02:45.180
Network so hard?

00:02:45.180 --> 00:02:46.480
Do permissions work?

00:02:46.480 --> 00:02:50.870
Let's talk a little bit about this because they're critical for any Blockchain network

00:02:50.870 --> 00:02:52.640
that's used for enterprises.

00:02:52.640 --> 00:02:53.360
Like I mentioned,

00:02:53.360 --> 00:02:57.230
all participating nodes in this Blockchain network have to be verified.

00:02:57.230 --> 00:02:57.970
And no,

00:02:57.970 --> 00:03:02.290
this is done from using something called the Membership Service Provider,

00:03:02.290 --> 00:03:03.390
or MSP.

00:03:03.390 --> 00:03:08.430
Participating nose in the fabric network have to have a unique digital i d.

00:03:08.430 --> 00:03:13.150
Now that's created by using the public key infrastructure,

00:03:13.150 --> 00:03:16.110
which is something that MSP is use.

00:03:16.110 --> 00:03:19.770
Everybody has a public channel with a shared ledger,

00:03:19.770 --> 00:03:21.700
which all nodes have access to.

00:03:21.700 --> 00:03:22.540
In addition,

00:03:22.540 --> 00:03:24.150
like I mentioned in Approves Lied,

00:03:24.150 --> 00:03:28.880
you are able to set up a private channel between two or more notes for private

00:03:28.880 --> 00:03:29.760
communication.

00:03:29.760 --> 00:03:30.610
Essentially,

00:03:30.610 --> 00:03:36.900
each node can be responsible for and working with multiple ledgers at one time were there

00:03:36.900 --> 00:03:38.620
is one main shared ledger,

00:03:38.620 --> 00:03:43.820
but they can have multiple private channels and multiple private ledgers that they can be

00:03:43.820 --> 00:03:45.810
working on at one point in time.

00:03:45.810 --> 00:03:50.970
Not keep in mind that the piers and their identification are known and verified,

00:03:50.970 --> 00:03:53.150
but they need not trust one another.

00:03:53.150 --> 00:03:58.460
Fabric still allows the execution of transactions would trust less consensus.

00:03:58.460 --> 00:04:04.780
Piers want to become part off the hyper leisure fabric have to be verified by the MSP on

00:04:04.780 --> 00:04:05.550
this network.

00:04:05.550 --> 00:04:06.290
And again,

00:04:06.290 --> 00:04:09.440
that's done by using our public key infrastructure.

00:04:09.440 --> 00:04:12.840
So you have a public and private key pair in order,

00:04:12.840 --> 00:04:16.590
associate a unique digital identity with each pier.

00:04:16.590 --> 00:04:21.790
Private signature is used to sign transactions so that the transactions can be verified as

00:04:21.790 --> 00:04:25.480
having a resonated from a particular known peer.

00:04:25.480 --> 00:04:30.590
So let's look at how transaction flows in a fabric network.

00:04:30.590 --> 00:04:34.770
So going back to more of the main characteristics that I just described of pipe religion

00:04:34.770 --> 00:04:38.390
fabric is that transactions have little agency and high throughput,

00:04:38.390 --> 00:04:41.380
which is perfect for enterprise grade applications,

00:04:41.380 --> 00:04:44.710
not transactions or also known as smart.

00:04:44.710 --> 00:04:49.040
Contracts in Hye Plaza fabric are implemented using chain cold.

00:04:49.040 --> 00:04:54.490
A chain code is a self contained program that runs on fabric and satisfies.

00:04:54.490 --> 00:05:00.290
A standard interface is typically used to implement smart contracts or transactions.

00:05:00.290 --> 00:05:00.850
Essentially,

00:05:00.850 --> 00:05:05.140
gene code is a program written using a programming language.

00:05:05.140 --> 00:05:05.700
Now,

00:05:05.700 --> 00:05:08.870
fabric does not have its own domain specific language.

00:05:08.870 --> 00:05:09.560
Instead,

00:05:09.560 --> 00:05:14.490
Chan code can be implemented using no Js or Java can cause.

00:05:14.490 --> 00:05:18.700
Also executed on a fabric network and a self contained program,

00:05:18.700 --> 00:05:23.670
meaning it maintains its own private state that could be updated when the transactions are

00:05:23.670 --> 00:05:24.400
executed.

00:05:24.400 --> 00:05:25.210
Now,

00:05:25.210 --> 00:05:29.700
if you've worked with theory and before Chan Cord is equivalent to smart contracts,

00:05:29.700 --> 00:05:33.710
it contains the corner up logic off agreements between participants.

00:05:33.710 --> 00:05:39.820
Transactions on a fabric follow a slightly different life cycle as compared with other

00:05:39.820 --> 00:05:41.020
Blockchain frameworks.

00:05:41.020 --> 00:05:44.390
In order to achieve the high throughput and low latency.

00:05:44.390 --> 00:05:47.520
The first phase is the execute face.

00:05:47.520 --> 00:05:53.260
This is where the Chan code for the smart contract is executed and all of the transactions

00:05:53.260 --> 00:05:56.760
within the bloc can be executed in parallel as well.

00:05:56.760 --> 00:06:02.500
Execution is performed by something called endorsing Pierce once transactions have been

00:06:02.500 --> 00:06:04.390
executed and endorsed there,

00:06:04.390 --> 00:06:06.770
then passed on to an ordering service.

00:06:06.770 --> 00:06:13.960
The ordering service is responsible for arranging all of these transactions in some order,

00:06:13.960 --> 00:06:18.180
after which there passed onto validating piers.

00:06:18.180 --> 00:06:23.730
Each pier on the network validates the transaction before committing them to the leisure.

00:06:23.730 --> 00:06:29.360
The validating phases where transactions are verified ensured that they can be applied to

00:06:29.360 --> 00:06:30.860
the latest state off.

00:06:30.860 --> 00:06:36.010
The legend validating peers help check for issues such as double spending,

00:06:36.010 --> 00:06:39.560
ensuring the same asset is not sent to multiple participants.

00:06:39.560 --> 00:06:40.750
At the same time,

00:06:40.750 --> 00:06:46.760
we have the client at which can either be a command line interface or a software program

00:06:46.760 --> 00:06:50.490
that's responsible for interacting with peers on the Blockchain network,

00:06:50.490 --> 00:06:53.830
that executing chain coat the client apple,

00:06:53.830 --> 00:06:54.370
interact with,

00:06:54.370 --> 00:06:57.790
appear on the Blockchain network and submit a proposal.

00:06:57.790 --> 00:07:00.770
This proposal comprises of transactions,

00:07:00.770 --> 00:07:04.950
which are then executed by only a few peers on the network.

00:07:04.950 --> 00:07:06.000
These air,

00:07:06.000 --> 00:07:08.740
called endorsing Piers and endorsing peers,

00:07:08.740 --> 00:07:14.540
will execute the transactions most likely in parallel and send back endorsed transactions

00:07:14.540 --> 00:07:15.930
to the client app.

00:07:15.930 --> 00:07:20.440
Now here's where the fabric is a bit different from ethereum.

00:07:20.440 --> 00:07:28.400
Executing transactions is done only by a few endorsing peers in parallel piers who endorse

00:07:28.400 --> 00:07:30.600
are chosen by an endorsement policy.

00:07:30.600 --> 00:07:33.900
That is something that you can configure based on your use case.

00:07:33.900 --> 00:07:39.230
Endorsing peers who execute the transaction have access to chain code directly,

00:07:39.230 --> 00:07:44.470
which means you can pick and choose your endorsing piers with care and just keep in mind

00:07:44.470 --> 00:07:47.080
that execution does not update the state off.

00:07:47.080 --> 00:07:52.790
The ledger off your Blockchain network endorsement policy is something that you specify for

00:07:52.790 --> 00:07:55.500
your chain called Application for example,

00:07:55.500 --> 00:08:00.460
you might say that you have a specific list that must endorse,

00:08:00.460 --> 00:08:04.660
or there must be a majority of peers that must endorse.

00:08:04.660 --> 00:08:09.990
Or there must be at least end number that must indoors and the and number depend on your

00:08:09.990 --> 00:08:14.750
network and be 5 10 15 21,000 and again,

00:08:14.750 --> 00:08:16.670
that depends on the scale off her network.

00:08:16.670 --> 00:08:21.570
So this endorsement policy is something that you can configure based on your network and

00:08:21.570 --> 00:08:26.070
based on your business use case and the type of transaction that will be occurring.

00:08:26.070 --> 00:08:30.400
Once the endorsed transactions have been sent back to the client app,

00:08:30.400 --> 00:08:32.810
it will then pass thes endorsed transactions,

00:08:32.810 --> 00:08:33.220
torn,

00:08:33.220 --> 00:08:37.530
ordering service or order nodes on the real world.

00:08:37.530 --> 00:08:41.120
There isn't just one application intractable the Blockchain network.

00:08:41.120 --> 00:08:44.190
Most likely there'll be small tipple client APS,

00:08:44.190 --> 00:08:49.850
and all of these will be passing on their endorsed transactions to the order notes.

00:08:49.850 --> 00:08:54.220
The ordering service doesn't really care about the validity of the transaction.

00:08:54.220 --> 00:08:59.470
It's only job is to assemble all transactions in some sort of serial order.

00:08:59.470 --> 00:09:05.040
This is the order in which the transactions will be committed to the shared ledger off the

00:09:05.040 --> 00:09:07.360
Blockchain network on the fabric network.

00:09:07.360 --> 00:09:12.620
There'll be specific notes that are designated as ordered and these a responsible for

00:09:12.620 --> 00:09:14.210
ordering transactions.

00:09:14.210 --> 00:09:20.290
Now these nodes might follow a different methodology for ordering now if you fall.

00:09:20.290 --> 00:09:21.800
If you follow solo,

00:09:21.800 --> 00:09:23.210
there's just one order.

00:09:23.210 --> 00:09:24.260
Nord was determined.

00:09:24.260 --> 00:09:24.850
The order.

00:09:24.850 --> 00:09:30.410
If you use something like the CAFTA service or the practical Byzantine fault tolerant

00:09:30.410 --> 00:09:31.970
service to order transaction,

00:09:31.970 --> 00:09:33.270
it might be a bit different.

00:09:33.270 --> 00:09:39.010
And if you guys are not familiar with CAFTA or the practical Byzantine fault tolerance,

00:09:39.010 --> 00:09:42.410
I suggest I suggest you dig a little bit more deeper toe.

00:09:42.410 --> 00:09:44.320
Understand what these terms mean,

00:09:44.320 --> 00:09:45.920
what the's technologies mean.

00:09:45.920 --> 00:09:51.530
The description and to go into in depth of these technologies is a bit outside the scope of

00:09:51.530 --> 00:09:52.230
this course.

00:09:52.230 --> 00:09:58.640
But just keep in mind that all indoors transactions would use one of these technologies.

00:09:58.640 --> 00:10:03.510
The committed peers are those responsible for validating the transactions that have been

00:10:03.510 --> 00:10:09.070
ordered and endorsed committing piers Also update the state of the ledger.

00:10:09.070 --> 00:10:14.280
All peers which have access to the shared ledger are essentially committing peers,

00:10:14.280 --> 00:10:17.650
and they apply the transaction to the private ledger copy.

00:10:17.650 --> 00:10:20.630
But before they apply the transaction,

00:10:20.630 --> 00:10:24.870
they need to ensure that the that the transaction have been endorsed correctly based on the

00:10:24.870 --> 00:10:26.890
endorsement policy which you specified.

00:10:26.890 --> 00:10:33.190
Committing piers also need to verify that all of the transactions in the set of transaction

00:10:33.190 --> 00:10:34.720
received are valid,

00:10:34.720 --> 00:10:37.550
and on the latest version of the ledger,

00:10:37.550 --> 00:10:40.090
they need to access the latest version,

00:10:40.090 --> 00:10:44.070
apply the transaction and see whether they're valid and committing.

00:10:44.070 --> 00:10:50.640
Peers have the power to invalidate transactions if individual transactions are found

00:10:50.640 --> 00:10:51.360
invalid.

00:10:51.360 --> 00:10:54.930
Maybe they're trying to transfer an asset that the center doesn't own,

00:10:54.930 --> 00:10:58.670
or maybe those transactions have double spending.

00:10:58.670 --> 00:11:01.550
These transactions will then be marked as invalid,

00:11:01.550 --> 00:11:03.950
and the block will be written out to the ledger.

00:11:03.950 --> 00:11:09.150
Now the piers on the fabric network have a clear separation of duties and function.

00:11:09.150 --> 00:11:14.560
Endorsing peers are different from ordering peers who are different from committing piers.

00:11:14.560 --> 00:11:21.010
This is what allows fabric networks achieve the high throughput and low Layton See,

00:11:21.010 --> 00:11:26.370
and this is what makes fabric networks and fabric transactions more deterministic and more

00:11:26.370 --> 00:11:31.090
suitable for enterprise contexts and less suitable for crypto current.

00:11:31.090 --> 00:11:37.100
Let's quickly take a look at assets and ledgers as it pertains to the hyper leisure fabric

00:11:37.100 --> 00:11:37.750
network.

00:11:37.750 --> 00:11:44.490
No assets in the fabric and be anything off monetary value that can be exchanged something

00:11:44.490 --> 00:11:44.490
.

00:11:44.490 --> 00:11:50.310
The Sanderson's toe a recipient Ledgers are basically the Blockchain itself.

00:11:50.310 --> 00:11:56.340
Blockchain represents the current state of past sets and all the all the transactions that

00:11:56.340 --> 00:11:58.910
have been performing using those assets.

00:11:58.910 --> 00:12:03.330
Assets in a fabric network can be tangible or intangible.

00:12:03.330 --> 00:12:06.350
They're modeled in the form of key value pairs.

00:12:06.350 --> 00:12:09.920
These pairs represent the current state of the asset,

00:12:09.920 --> 00:12:15.810
and the assets are stored in the state database and you can update individual feels often

00:12:15.810 --> 00:12:19.190
asset by updating the corresponding key value pair.

00:12:19.190 --> 00:12:23.100
The distributed ledger is made up of two components.

00:12:23.100 --> 00:12:24.430
You have the world here,

00:12:24.430 --> 00:12:27.080
the World Database and the Transaction Ledger.

00:12:27.080 --> 00:12:32.190
The World database contains the current state of all assets that is represented using the

00:12:32.190 --> 00:12:33.150
fabric network,

00:12:33.150 --> 00:12:39.720
Whereas the transaction ledger contains all of the state changes which involved one or more

00:12:39.720 --> 00:12:40.980
of these assets.

00:12:40.980 --> 00:12:43.900
No one transactions are committed to the ledger.

00:12:43.900 --> 00:12:49.330
The Committing Piers update the world database representing the latest date of each asset

00:12:49.330 --> 00:12:54.290
as well as a record as well as record the changes in the transaction ledger.

00:12:54.290 --> 00:13:00.690
So thank you for joining me on this lesson on giving you a overview off hyper larger fabric

00:13:00.690 --> 00:13:01.350
does.

00:13:01.350 --> 00:13:03.730
I hope you guys got a good Oreo off Howard.

00:13:03.730 --> 00:13:09.170
Transactions flow within the hyper ledger network the difference and how permission

00:13:09.170 --> 00:13:14.580
networks work and how it's able to achieve the low late INSEE and high throughput in its

00:13:14.580 --> 00:13:15.540
transactions.

00:13:15.540 --> 00:13:17.320
And most importantly,

00:13:17.320 --> 00:13:20.820
it's best suited for enterprise grade applications.

