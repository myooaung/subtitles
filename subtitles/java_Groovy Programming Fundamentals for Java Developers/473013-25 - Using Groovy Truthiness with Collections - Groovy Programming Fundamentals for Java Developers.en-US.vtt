WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.765
We have the other standard methods would expect on released as well.

00:00:03.765 --> 00:00:08.790
So for example, l dot size gives us the number of elements.

00:00:08.790 --> 00:00:11.160
But notice, well that's where it stops. It doesn't.

00:00:11.160 --> 00:00:12.705
For example, suppose L dot length.

00:00:12.705 --> 00:00:14.040
So this wouldn't work.

00:00:14.040 --> 00:00:17.175
And we have do the usual suspects as well,

00:00:17.175 --> 00:00:21.150
which in this case returns false because we actually have elements there.

00:00:21.150 --> 00:00:24.800
Another way of finding out if you have any elements in a collection is to

00:00:24.800 --> 00:00:28.385
actually use a thing called groovy truth, and so-called truthiness.

00:00:28.385 --> 00:00:31.130
And so here if we have, for example,

00:00:31.130 --> 00:00:32.975
a variable has elements,

00:00:32.975 --> 00:00:35.345
we could assign this directly like this.

00:00:35.345 --> 00:00:38.255
And so what's happening here is Groovy is evaluating

00:00:38.255 --> 00:00:42.785
the so-called truthiness on this collection and that's coercing and back into a boolean.

00:00:42.785 --> 00:00:44.720
And because the collection has elements,

00:00:44.720 --> 00:00:47.015
then it returns true for the expression there.

00:00:47.015 --> 00:00:51.200
Now as well, this would work if we didn't have any elements.

00:00:51.200 --> 00:00:53.150
So now you can see it's false.

00:00:53.150 --> 00:00:57.290
And also, even if we evaluate a null,

00:00:57.290 --> 00:00:59.285
it would also equal false.

00:00:59.285 --> 00:01:01.010
So groovy gives you some really nice kind of

00:01:01.010 --> 00:01:04.950
shortcuts for being able to work with collections in this way.
