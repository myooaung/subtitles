WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.905
Of course, we're used to dealing with classes.

00:00:01.905 --> 00:00:03.675
So let's have a look at classes now.

00:00:03.675 --> 00:00:07.050
So if we have a class which we create like this,

00:00:07.050 --> 00:00:10.170
we create classes in the same way that we do in Java.

00:00:10.170 --> 00:00:13.350
We just have a lighter touch syntax as we'll see.

00:00:13.350 --> 00:00:16.950
But if we create an empty class and then run this, you'd imagine that,

00:00:16.950 --> 00:00:18.030
that, that should be okay,

00:00:18.030 --> 00:00:20.730
that's fine with screening and classrooms not don't happen to be using it.

00:00:20.730 --> 00:00:22.165
However it's not.

00:00:22.165 --> 00:00:25.775
And the reason is because you can see it hasn't had a main method generated.

00:00:25.775 --> 00:00:29.450
So if we go back into the AST and look in here,

00:00:29.450 --> 00:00:34.350
we can see that we don't have that men method which has been generated.

00:00:34.360 --> 00:00:36.770
So if we go back out,

00:00:36.770 --> 00:00:39.800
If we therefore put them in method in public,

00:00:39.800 --> 00:00:45.215
static, void, main, string, args.

00:00:45.215 --> 00:00:49.160
And this will be fine because at least we have a member for now,

00:00:49.160 --> 00:00:51.695
which is the starting point for our script.

00:00:51.695 --> 00:00:53.555
So that's just something to be aware of there.

00:00:53.555 --> 00:00:57.320
We just have a freestanding class definition and groovy than the compiler

00:00:57.320 --> 00:01:01.865
isn't going to generate you amend method because it's not sure about what you want to do.

00:01:01.865 --> 00:01:04.280
Whether you want to just basically have a class.

00:01:04.280 --> 00:01:06.620
He bundled into a library jar for example,

00:01:06.620 --> 00:01:08.720
which is which forms part of your application.

00:01:08.720 --> 00:01:12.770
Or whether you intended to have that class used by a main method.

00:01:12.770 --> 00:01:15.425
But it doesn't know that that was the intention that you had.

00:01:15.425 --> 00:01:16.775
So you always have to make explicit.

00:01:16.775 --> 00:01:18.785
So you can see public static, void, main,

00:01:18.785 --> 00:01:21.260
String args, string array args rather.

00:01:21.260 --> 00:01:24.110
And now that we've got this, we incur an instance of the class.

00:01:24.110 --> 00:01:29.010
So here we could do Person p equals new person.

00:01:29.560 --> 00:01:33.200
And now we can see the results of this,

00:01:33.200 --> 00:01:35.225
which is effectively the return statement

00:01:35.225 --> 00:01:37.760
of the one and only method which is in this script,

00:01:37.760 --> 00:01:40.250
which is the main method which returns the instance.

00:01:40.250 --> 00:01:42.920
And you can see here we've created an instance of person.

00:01:42.920 --> 00:01:47.010
So that's how you can create classes and instances in groovy.
