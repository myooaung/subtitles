WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.230
Right in this video, let's take a quick look at the Groovy installation itself.

00:00:04.230 --> 00:00:08.355
So if I create a terminal session up,

00:00:08.355 --> 00:00:10.725
let's make that a bit larger.

00:00:10.725 --> 00:00:16.425
And then go into the SDK man folder where I've installed versions of gravity,

00:00:16.425 --> 00:00:21.250
then go over to candidates, Groovy and dualist.

00:00:21.250 --> 00:00:24.320
You can see here that I have a version of Groovy which I've already installed,

00:00:24.320 --> 00:00:26.765
which is version two for 13.

00:00:26.765 --> 00:00:29.585
Now in the previous video, we install different versions.

00:00:29.585 --> 00:00:31.310
Groovy hasn't changed much to be honest,

00:00:31.310 --> 00:00:33.650
at least not significantly for Beginners Course.

00:00:33.650 --> 00:00:35.870
So we're happy to use version two for 13.

00:00:35.870 --> 00:00:37.880
It's a version that had been my system.

00:00:37.880 --> 00:00:39.290
And I'm happy to use that.

00:00:39.290 --> 00:00:42.815
That is as good as any version of greedy to get started with.

00:00:42.815 --> 00:00:47.540
So if we go inside this version two for 13 and we look,

00:00:47.540 --> 00:00:49.775
and what we have there, we see a few folders.

00:00:49.775 --> 00:00:54.035
So if I open that up in finder to kill a better luck than you'll see in the docs folder.

00:00:54.035 --> 00:00:56.495
We have the documentation which is useful.

00:00:56.495 --> 00:00:58.460
So if you go to HTML,

00:00:58.460 --> 00:01:01.070
you'll see the documentation split into different groups.

00:01:01.070 --> 00:01:08.095
But if you go into Index.html and just double-click them,

00:01:08.095 --> 00:01:10.570
then you'll see that you have a full and complete set up

00:01:10.570 --> 00:01:13.780
documentation for the specific version of Ruby that you are using,

00:01:13.780 --> 00:01:15.490
which is 2-4, 13 here.

00:01:15.490 --> 00:01:19.060
So that's definitely worth bookmarking even as a file-based link in the browser.

00:01:19.060 --> 00:01:20.650
Because that way, even if you're offline,

00:01:20.650 --> 00:01:21.910
you can always store, browse agree,

00:01:21.910 --> 00:01:23.155
the documentation if you need.

00:01:23.155 --> 00:01:26.455
And over here you can see we've got the table of contents.

00:01:26.455 --> 00:01:28.780
And you can see it's very, very,

00:01:28.780 --> 00:01:31.240
very in-depth. So it covers everything.

00:01:31.240 --> 00:01:37.075
So Operators, Program structure, the aspects,

00:01:37.075 --> 00:01:40.549
more advanced stuff as well to just traits,

00:01:40.950 --> 00:01:44.110
standards, the flight closures, that kind of thing.

00:01:44.110 --> 00:01:46.420
So it's well worth having a look at the documentation there.

00:01:46.420 --> 00:01:49.325
So just close that with command queue.

00:01:49.325 --> 00:01:56.630
That's the documentation will do Command and left square brace will just go up from here.

00:01:56.630 --> 00:01:58.160
Close that off.

00:01:58.160 --> 00:02:00.725
Now moving them from there, we're going to embeddable.

00:02:00.725 --> 00:02:02.480
You can see we've got groovy all 2-4,

00:02:02.480 --> 00:02:05.690
13, which is the actual groovy distribution itself.

00:02:05.690 --> 00:02:09.350
And underneath lib, you'll

00:02:09.350 --> 00:02:10.700
see all of the other jar files which

00:02:10.700 --> 00:02:13.310
the groove installation actually requires to be able to run,

00:02:13.310 --> 00:02:15.065
which is useful as well.

00:02:15.065 --> 00:02:16.730
Sums of about licenses.

00:02:16.730 --> 00:02:18.995
That's not too interesting from a technical viewpoint.

00:02:18.995 --> 00:02:20.540
What might be interesting,

00:02:20.540 --> 00:02:22.325
although proceed here with caution,

00:02:22.325 --> 00:02:24.515
is what's inside the source folder.

00:02:24.515 --> 00:02:27.650
So this is actually the source code of groovy itself.

00:02:27.650 --> 00:02:30.410
So the Ruby language itself is actually the source code of that.

00:02:30.410 --> 00:02:35.300
So for example, if we go into source main and

00:02:35.300 --> 00:02:40.535
then Groovy Lang closure,

00:02:40.535 --> 00:02:43.595
for example, if we right-clicked on here,

00:02:43.595 --> 00:02:48.710
open with just a move sublime text and make it a bit quicker.

00:02:48.710 --> 00:02:50.375
There was that per second.

00:02:50.375 --> 00:02:52.460
Then this is actually the code which

00:02:52.460 --> 00:02:55.895
corresponds to a closure in the Ruby language itself.

00:02:55.895 --> 00:02:58.355
So definitely for Beginners course,

00:02:58.355 --> 00:03:00.350
don't look at the source code because it'll just

00:03:00.350 --> 00:03:02.330
confuse you because there's some really, really,

00:03:02.330 --> 00:03:04.730
really heavy stuff going on in here with Java

00:03:04.730 --> 00:03:07.505
to be able to get gree with to do all the magic that it does.

00:03:07.505 --> 00:03:09.620
But as you become more advanced with Groovy,

00:03:09.620 --> 00:03:11.690
then it can be interesting to have a look through here and see

00:03:11.690 --> 00:03:14.225
exactly how it all mixed Ruby worked together.

00:03:14.225 --> 00:03:17.165
So let's just close that off.

00:03:17.165 --> 00:03:20.300
So that's in the source folder.

00:03:20.300 --> 00:03:22.700
Has a configuration file in here,

00:03:22.700 --> 00:03:25.535
which is basically a group BY class loading, which we don't need to know about.

00:03:25.535 --> 00:03:26.945
But when we do need to know about.

00:03:26.945 --> 00:03:29.210
And the most interesting things certainly for beginners,

00:03:29.210 --> 00:03:31.145
is what's inside the bin directory.

00:03:31.145 --> 00:03:32.855
So looking inside this folder,

00:03:32.855 --> 00:03:35.255
the most important things that you need to know about our

00:03:35.255 --> 00:03:37.820
Groovy C. This is the Groovy compiler,

00:03:37.820 --> 00:03:40.880
which basically knows how to understand the Groovy source code that's good.

00:03:40.880 --> 00:03:43.280
Programs may have degree be syntax stored in

00:03:43.280 --> 00:03:45.965
files which represent classes, just like Java does.

00:03:45.965 --> 00:03:47.270
But instead of those files ending,

00:03:47.270 --> 00:03:49.820
we've dot java, they end with dot groovy, Groovy C.

00:03:49.820 --> 00:03:52.190
The Ruby compiler can take those files and then it

00:03:52.190 --> 00:03:54.770
compiles them and it compiles them into Java bytecode,

00:03:54.770 --> 00:03:58.310
which is exactly the same bytecode syntax that Java compiles down to as well.

00:03:58.310 --> 00:04:01.040
And then once you have that, you can then run that on the JVM.

00:04:01.040 --> 00:04:02.195
So the java virtual machine,

00:04:02.195 --> 00:04:04.205
just like you do with regular Java programs.

00:04:04.205 --> 00:04:06.015
There's also agree B shell.

00:04:06.015 --> 00:04:08.780
This is a tool which enables you to kinda

00:04:08.780 --> 00:04:11.855
just examine van run little fragments of Groovy.

00:04:11.855 --> 00:04:13.250
To be honest, I don't use this,

00:04:13.250 --> 00:04:15.320
I don't find it so interesting to be honest,

00:04:15.320 --> 00:04:18.005
of more interest is Ruby console.

00:04:18.005 --> 00:04:19.925
And greedy console is very useful.

00:04:19.925 --> 00:04:24.395
What Ruby console allows you to do is to execute much larger snippets of Groovy.

00:04:24.395 --> 00:04:25.700
Actually Full Classes in fact,

00:04:25.700 --> 00:04:28.805
or for programs have Groovy and he has some extra stuff in there as well,

00:04:28.805 --> 00:04:31.910
which enable you to examine the transformations that

00:04:31.910 --> 00:04:33.440
your application goes through to has

00:04:33.440 --> 00:04:35.780
the greedy compiler stitches in all of the extra stuff,

00:04:35.780 --> 00:04:37.085
which gives Groovy it's magic.

00:04:37.085 --> 00:04:38.720
So we'll see that in later videos.

00:04:38.720 --> 00:04:41.405
But just know that Ruby console, very useful thing.

00:04:41.405 --> 00:04:44.060
And yeah, for testing our largest snippets of

00:04:44.060 --> 00:04:47.270
Ruby code without wanting to get a proper project set up in an ID.

00:04:47.270 --> 00:04:49.160
So just intelligent idea or Eclipse.

00:04:49.160 --> 00:04:51.650
You pretty much go to agree the console to do that.

00:04:51.650 --> 00:04:53.915
And finally, we've also got groovy doc as well,

00:04:53.915 --> 00:04:56.390
which is groupies Institute Java doc.

00:04:56.390 --> 00:04:59.270
So again, that's just like another process that would run like for example,

00:04:59.270 --> 00:05:02.060
the Java.command would run against Java programs to pull out

00:05:02.060 --> 00:05:05.255
Java.com and compile them into Java documentation.

00:05:05.255 --> 00:05:06.695
Similarly, groovy has gravy doc,

00:05:06.695 --> 00:05:07.895
which has exactly the same thing.

00:05:07.895 --> 00:05:09.785
You just as it for groovy source code instead.

00:05:09.785 --> 00:05:12.335
Grip is also another thing worth mentioning.

00:05:12.335 --> 00:05:14.495
Grape basically is the,

00:05:14.495 --> 00:05:17.855
what is a built-in dependency manager for groovy,

00:05:17.855 --> 00:05:21.980
which I believe since felt groovy advanced packaging engine or something like that.

00:05:21.980 --> 00:05:25.385
And what this is is quite nice actually inside Groovy files,

00:05:25.385 --> 00:05:27.350
if you don't have a full blown program which is built,

00:05:27.350 --> 00:05:29.000
for example, with something like Gradle or may

00:05:29.000 --> 00:05:31.400
even when normally when using those build technologies,

00:05:31.400 --> 00:05:32.720
you have a dependency section.

00:05:32.720 --> 00:05:36.215
We formally declare all of the dependencies that your application depends on.

00:05:36.215 --> 00:05:39.110
Grip gives you a much lighter touch way of being able to

00:05:39.110 --> 00:05:42.110
include libraries and Jar files into your group code.

00:05:42.110 --> 00:05:44.270
So for example, you can have one file,

00:05:44.270 --> 00:05:47.300
one physical file, which contains your entire group program.

00:05:47.300 --> 00:05:50.735
And you can just use some annotations which are from the grape package,

00:05:50.735 --> 00:05:53.600
which enable you to grab dependencies into your project.

00:05:53.600 --> 00:05:55.385
And then what happens is when the program is run,

00:05:55.385 --> 00:05:57.050
those annotations are evaluated.

00:05:57.050 --> 00:05:59.765
And if the library is solely exist in your local cache,

00:05:59.765 --> 00:06:01.115
which is backed by IV,

00:06:01.115 --> 00:06:02.585
which is another dependency manager,

00:06:02.585 --> 00:06:06.095
which could also uses behind the scenes that it will download that dependency

00:06:06.095 --> 00:06:10.220
into that cache and make it available on the class path of your running group program.

00:06:10.220 --> 00:06:13.160
Yeah, grapes and the grip framework within NHGRI,

00:06:13.160 --> 00:06:16.205
we pretty much his geared around making things much quicker,

00:06:16.205 --> 00:06:19.190
much more agile, and much more efficient to develop with.

00:06:19.190 --> 00:06:22.025
The last thing to point out are the if you're on a Windows system,

00:06:22.025 --> 00:06:27.350
you're going to be using the.bat files and running those from a DOS prompt.

00:06:27.350 --> 00:06:29.915
And if you're on a Linux or a Mac based system,

00:06:29.915 --> 00:06:32.525
you'll be using the ones without the bat suffix.

00:06:32.525 --> 00:06:34.610
These are the scripts are going to use there.

00:06:34.610 --> 00:06:37.535
So anyway, that's a nice introduction to what you'll find

00:06:37.535 --> 00:06:40.415
in your Ruby installation and appoints to the documentation as well,

00:06:40.415 --> 00:06:41.960
which will also want to have a look through as you

00:06:41.960 --> 00:06:44.910
progress through your journey into learning groovy.
