WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.460
In this video, we're going to have a look at another groupby operator,

00:00:02.460 --> 00:00:03.810
which is very useful to use.

00:00:03.810 --> 00:00:05.595
And that's known as the Elvis operator.

00:00:05.595 --> 00:00:07.860
And this is a way of being able to elegantly and

00:00:07.860 --> 00:00:11.115
concisely specify a default value for a particular variable.

00:00:11.115 --> 00:00:12.735
So let's jump in with an example,

00:00:12.735 --> 00:00:16.215
supposing I have a variable,

00:00:16.215 --> 00:00:18.630
which is in a user's session, for example,

00:00:18.630 --> 00:00:20.400
supposing this is a web application in

00:00:20.400 --> 00:00:22.965
the session somewhere we have a variable logged in user,

00:00:22.965 --> 00:00:24.810
which says the user's name.

00:00:24.810 --> 00:00:27.150
Let's say Adam for example.

00:00:27.150 --> 00:00:29.985
Now suppose we want to display a homepage.

00:00:29.985 --> 00:00:34.470
And the homepage we want to display either the user's logged in Nim if the user

00:00:34.470 --> 00:00:39.405
happens to be logged in or if not beyond to use a symbolic name like guest, for example.

00:00:39.405 --> 00:00:42.250
We can do this quite simply using the Elvis operator.

00:00:42.250 --> 00:00:47.179
So we can put displayed username equals

00:00:47.179 --> 00:00:50.960
and then we give the value of the one we prefer to use.

00:00:50.960 --> 00:00:53.855
So we prefer to use logged in user if it's set.

00:00:53.855 --> 00:00:55.370
However, if it's not set,

00:00:55.370 --> 00:00:56.780
we can use the Elvis operator,

00:00:56.780 --> 00:00:58.970
which is question mark and colon,

00:00:58.970 --> 00:01:01.235
and then pass back a default.

00:01:01.235 --> 00:01:02.465
So guest for example.

00:01:02.465 --> 00:01:04.265
So now if I run this,

00:01:04.265 --> 00:01:09.740
you can see here because we have logged in users set to Adam that uses that actual value.

00:01:09.740 --> 00:01:12.350
So the displayed username is actually Adam.

00:01:12.350 --> 00:01:15.270
However, if Adam wasn't setting,

00:01:16.270 --> 00:01:20.840
let's say it's null, then you can see now it's using guest.

00:01:20.840 --> 00:01:22.460
And this also works by the way as well.

00:01:22.460 --> 00:01:24.155
If this was an empty string.

00:01:24.155 --> 00:01:26.405
You can also see is guest as well.

00:01:26.405 --> 00:01:28.610
And of course if there is something in the string, so for example,

00:01:28.610 --> 00:01:30.065
even if you have a blank space,

00:01:30.065 --> 00:01:32.450
then it thinks you want, you want to use the value.

00:01:32.450 --> 00:01:33.755
So in that case,

00:01:33.755 --> 00:01:35.060
it would actually use that value.

00:01:35.060 --> 00:01:37.490
So just be aware of that. And also the Elvis operator,

00:01:37.490 --> 00:01:39.290
if you're wondering where it gets that name from,

00:01:39.290 --> 00:01:41.780
if you look at the question mark and then the colon,

00:01:41.780 --> 00:01:45.230
it's almost as if the question mark is equivalent of Elvis Presley.

00:01:45.230 --> 00:01:47.705
So it's hair and then the colon are the eyes.

00:01:47.705 --> 00:01:49.850
So that's why he be turned on its side,

00:01:49.850 --> 00:01:54.515
rotate 90 degrees around clockwise in kind of see as kind of like a mini Elvis Presley.

00:01:54.515 --> 00:01:56.870
Anyway, that's where the name comes from, the Elvis operator.

00:01:56.870 --> 00:01:58.640
You can remember this by the way, because it's pretty much

00:01:58.640 --> 00:02:01.730
a shorthand syntax of what you could do in Java.

00:02:01.730 --> 00:02:04.370
So this is kind of like a ternary operator,

00:02:04.370 --> 00:02:06.530
which is just compressed together.

00:02:06.530 --> 00:02:08.675
You could do this in Java, for example,

00:02:08.675 --> 00:02:13.070
by saying logged in user is not equal to null,

00:02:13.070 --> 00:02:18.050
then use Ogden user, otherwise use guest.

00:02:18.050 --> 00:02:21.350
And if you run this and actually had no input variable,

00:02:21.350 --> 00:02:24.605
and you can see here it will act in the same way, guest.

00:02:24.605 --> 00:02:27.860
Whereas if you put another name in there,

00:02:27.860 --> 00:02:31.535
and then when you can see I'm in the same way.

00:02:31.535 --> 00:02:33.290
But it just nicer because then you don't have to write

00:02:33.290 --> 00:02:35.030
this extra stuff that you do in Java.

00:02:35.030 --> 00:02:41.750
So you can just do logged in user Elvis and then guessed rerun.

00:02:41.750 --> 00:02:43.385
And there we have it.

00:02:43.385 --> 00:02:45.350
So yeah, that's the Elvis operator,

00:02:45.350 --> 00:02:49.170
which tells you default values in a very quick and effective way.
