WEBVTT
1
00:00:00.940 --> 00:00:04.180
With so many different options for persistence in AWS,

2
00:00:04.180 --> 00:00:07.410
hopefully this module has been enlightening and will help you

3
00:00:07.410 --> 00:00:10.240
to make the best choice for your use case.

4
00:00:10.240 --> 00:00:12.600
Let's recap what we covered in this module.

5
00:00:12.600 --> 00:00:16.890
We started out by going over some fundamental DynamoDB topics

6
00:00:16.890 --> 00:00:20.640
around provisioned throughput and secondary indexes.

7
00:00:20.640 --> 00:00:24.060
Then we created a DynamoDB table with the SDK and

8
00:00:24.060 --> 00:00:27.240
populated it with hamsters and races.

9
00:00:27.240 --> 00:00:32.240
Next, we learned how to retrieve data from the table with queries and scans.

10
00:00:32.240 --> 00:00:38.040
Then we moved on to RDS and created a MySQL database for our userâ€‘related data.

11
00:00:38.040 --> 00:00:38.510
Next,

12
00:00:38.510 --> 00:00:41.940
we created a Redis cluster in ElastiCache and used

13
00:00:41.940 --> 00:00:44.440
it for our user session state.

14
00:00:44.440 --> 00:00:48.090
And finally, we took a look at the limits and restrictions around

15
00:00:48.090 --> 00:00:51.050
each of these services. In the next module,

16
00:00:51.050 --> 00:01:01.000
we're going to look at how to configure different types of external routing using AWS services like Route 53 and API Gateway.

