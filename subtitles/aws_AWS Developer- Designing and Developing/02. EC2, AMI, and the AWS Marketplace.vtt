WEBVTT
1
00:00:02.095 --> 00:00:06.915
The EC2 service is one of the most fundamental services offered by AWS.

2
00:00:06.915 --> 00:00:10.790
It underpins many of the other services in AWS.

3
00:00:10.790 --> 00:00:13.392
We've already covered most of the basics of this

4
00:00:13.392 --> 00:00:15.112
service in the Getting Started course,

5
00:00:15.112 --> 00:00:20.345
so we're going to go into a bit more detail into EC2 in this course.

6
00:00:20.345 --> 00:00:23.236
The basic unit in EC2 is the instance.

7
00:00:23.236 --> 00:00:27.882
This is a virtual, not physical, self‑contained computing unit.

8
00:00:27.882 --> 00:00:30.666
Each instance needs software installed on it to run,

9
00:00:30.666 --> 00:00:35.959
and this is available in AWS as an Amazon Machine Image,

10
00:00:35.959 --> 00:00:37.050
or AMI.

11
00:00:37.050 --> 00:00:41.693
AMIs can be a basic Linux or Windows operating system

12
00:00:41.693 --> 00:00:45.744
installation or include other software like a vendor's

13
00:00:45.744 --> 00:00:48.867
application or some open source application.

14
00:00:48.867 --> 00:00:49.992
To give an example,

15
00:00:49.992 --> 00:00:54.574
later in this course we'll use an AMI that comes from the AWS

16
00:00:54.574 --> 00:00:58.707
Marketplace with Linux and Node.js pre‑installed.

17
00:00:58.707 --> 00:01:02.329
You can create your own AMIs with your custom software

18
00:01:02.329 --> 00:01:05.414
installed or launch one from the AWS Marketplace.

19
00:01:05.414 --> 00:01:09.257
You can also create AMIs iteratively by launching an

20
00:01:09.257 --> 00:01:12.070
instance with an Amazon Linux AMI,

21
00:01:12.070 --> 00:01:16.233
then adding your own software and creating an AMI from that.

22
00:01:16.233 --> 00:01:20.297
AMIs are very flexible and versatile in that respect.

23
00:01:20.297 --> 00:01:25.321
AWS provide a separation between the instance's execution environment,

24
00:01:25.321 --> 00:01:28.969
such as the CPUs and memory available to the instance,

25
00:01:28.969 --> 00:01:30.931
and the instance's file storage.

26
00:01:30.931 --> 00:01:33.285
We'll cover this in more detail,

27
00:01:33.285 --> 00:01:38.034
but basically EC2 gives you three options for how your EC2

28
00:01:38.034 --> 00:01:40.653
instance file system will be managed.

29
00:01:40.653 --> 00:01:43.400
The first is instance store volumes.

30
00:01:43.400 --> 00:01:47.357
These are physically connected to the EC2 instance and

31
00:01:47.357 --> 00:01:49.908
act similar to basic hard drives.

32
00:01:49.908 --> 00:01:53.627
They can't be reused for other EC2 instances.

33
00:01:53.627 --> 00:01:58.368
The second option is Elastic Block Storage, shortened to EBS.

34
00:01:58.368 --> 00:02:02.783
The main difference between EBS and instance store volumes is that

35
00:02:02.783 --> 00:02:05.933
EBS volumes can be connected to other instances,

36
00:02:05.933 --> 00:02:10.426
and also can live on even if the instance is terminated.

37
00:02:10.426 --> 00:02:15.213
The third option is Elastic File System, shorted to EFS.

38
00:02:15.213 --> 00:02:21.328
EFS differs from EBS in that it is scalable in size.

39
00:02:21.328 --> 00:02:25.453
Other details such as a separate life cycle from the EC2 instance and

40
00:02:25.453 --> 00:02:29.365
being able to connect to different instances is similar.

41
00:02:29.365 --> 00:02:30.750
When creating an AMI,

42
00:02:30.750 --> 00:02:33.520
you have the option to define an instance

43
00:02:33.520 --> 00:02:36.546
volume‑backed AMI or an EBS‑backed AMI.

44
00:02:36.546 --> 00:02:40.768
Choosing one or the other restricts what states are

45
00:02:40.768 --> 00:02:42.895
available to the created instance.

46
00:02:42.895 --> 00:02:48.303
An EBS‑backed instance can be stopped for an arbitrary period of time.

47
00:02:48.303 --> 00:02:52.319
The instance data will be persisted on the EBS volume.

48
00:02:52.319 --> 00:02:55.307
Contrast this to an instance volume‑backed instance,

49
00:02:55.307 --> 00:02:58.871
which can only be terminated or restarted.

50
00:02:58.871 --> 00:03:00.727
Can't be stopped.

51
00:03:00.727 --> 00:03:01.874
It's a small distinction,

52
00:03:01.874 --> 00:03:06.088
but it can afford quite a bit of flexibility with using EBS volumes.

53
00:03:06.088 --> 00:03:11.592
A larger distinction between the two types of instances is the boot‑up time.

54
00:03:11.592 --> 00:03:15.765
An EBS‑backed instance created from an AMI is significantly

55
00:03:15.765 --> 00:03:19.239
faster to boot than an instance‑backed volume.

56
00:03:19.239 --> 00:03:22.993
The main reason that EBS is faster is that the AMI data for an

57
00:03:22.993 --> 00:03:27.489
instance‑backed volume must be transferred from S3 on boot up,

58
00:03:27.489 --> 00:03:29.756
which is different from EBS.

59
00:03:29.756 --> 00:03:33.771
EBS was introduced by AWS after instance store volumes,

60
00:03:33.771 --> 00:03:37.559
so there are many good reasons to use EBS.

61
00:03:37.559 --> 00:03:41.777
One more important details of AMIs is the visibility of the image,

62
00:03:41.777 --> 00:03:44.580
basically who has permissions to use it.

63
00:03:44.580 --> 00:03:49.032
When creating the AMI, you will need to specify the launch permissions.

64
00:03:49.032 --> 00:03:54.437
Your options are public, which allows anyone to launch an instance from your AMI,

65
00:03:54.437 --> 00:03:54.874
explicit,

66
00:03:54.874 --> 00:03:58.820
which lets you give permission to certain AWS accounts

67
00:03:58.820 --> 00:04:02.408
to create instances from your AMI, and finally,

68
00:04:02.408 --> 00:04:07.016
implicit, which only allows you to create instances from the AMI.

69
00:04:07.016 --> 00:04:15.000
You can also publish AMIs to the AWS Marketplace, but we won't be covering that in this course.

