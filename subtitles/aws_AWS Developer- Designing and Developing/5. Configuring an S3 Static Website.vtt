WEBVTT
1
00:00:00.840 --> 00:00:04.550
In order for us to get to try out a static S3 site,

2
00:00:04.550 --> 00:00:08.680
I've made a simple splash page for Hamster Ball Fantasy League.

3
00:00:08.680 --> 00:00:12.780
The files are already in our S3 bucket with the index.html

4
00:00:12.780 --> 00:00:15.840
file and a style sheet in the static folder.

5
00:00:15.840 --> 00:00:20.270
We'll configure our existing S3 bucket to serve a static website,

6
00:00:20.270 --> 00:00:24.280
and that content will get served. In your code editor,

7
00:00:24.280 --> 00:00:29.350
open the file configure‑S3‑website.js. The first change

8
00:00:29.350 --> 00:00:32.240
is to update your region on line 4.

9
00:00:32.240 --> 00:00:37.840
I've already created an S3 SDK variable for you on line 7, but line

10
00:00:37.840 --> 00:00:40.970
9, where the configureS3Site function is called,

11
00:00:40.970 --> 00:00:45.040
you will need to pass in the name of your S3 bucket.

12
00:00:45.040 --> 00:00:48.700
Now let's implement the configureS3Site function by

13
00:00:48.700 --> 00:00:51.640
first creating a params const object.

14
00:00:51.640 --> 00:00:53.150
The first property is bucket,

15
00:00:53.150 --> 00:00:57.690
which we'll give the value of our bucketName function argument.

16
00:00:57.690 --> 00:01:03.340
The next property is WebsiteConfiguration which has the value of an object.

17
00:01:03.340 --> 00:01:06.640
Here's where we'll tell it how we want the site to operate.

18
00:01:06.640 --> 00:01:10.320
There are really only two options available, add the property

19
00:01:10.320 --> 00:01:14.340
IndexDocument, and give it an object as the value.

20
00:01:14.340 --> 00:01:19.650
This tells the site what file name to use as the index. In the object, add

21
00:01:19.650 --> 00:01:25.240
the property Suffix, and give it the value of index.html.

22
00:01:25.240 --> 00:01:28.180
You could put something else here if you wanted a file like

23
00:01:28.180 --> 00:01:32.240
static.html to load as the index of your site.

24
00:01:32.240 --> 00:01:37.060
Now index.html is actually the default, so we didn't technically have

25
00:01:37.060 --> 00:01:41.160
to add this property, I just wanted to make it explicit how this was

26
00:01:41.160 --> 00:01:46.680
working. As a peer to IndexDocument, you could add ErrorDocument and

27
00:01:46.680 --> 00:01:50.670
provide an error.html file name, but I don't have one,

28
00:01:50.670 --> 00:01:54.920
so we'll leave that out. Now we can call the SDK function to use

29
00:01:54.920 --> 00:02:01.030
these prams. In the Promise, call S3.putBucketWebsite, passing in the

30
00:02:01.030 --> 00:02:05.500
prams object as the first argument and a callback function with err

31
00:02:05.500 --> 00:02:07.940
and data arguments as the second.

32
00:02:07.940 --> 00:02:11.270
If there's an err object, call reject with it; otherwise,

33
00:02:11.270 --> 00:02:16.025
call resolve, passing in the data argument. And that's it,

34
00:02:16.025 --> 00:02:18.840
it's pretty simple to configure these things.

35
00:02:18.840 --> 00:02:25.420
Switch over to your commandline and execute node configure‑S3‑website.js.

36
00:02:25.420 --> 00:02:26.730
Once it's complete,

37
00:02:26.730 --> 00:02:31.620
it unfortunately doesn't give us the domain name to hit to see the site,

38
00:02:31.620 --> 00:02:37.240
so switch over to the AWS Console and go to the S3 dashboard.

39
00:02:37.240 --> 00:02:41.510
Click into your hamster‑bucket, and go to the Properties tab.

40
00:02:41.510 --> 00:02:44.540
One of the options will be Static website hosting,

41
00:02:44.540 --> 00:02:48.270
so click that, and then you'll have a link at the top.

42
00:02:48.270 --> 00:02:52.220
Now click on the link, and you'll be taken to our static site being

43
00:02:52.220 --> 00:02:56.600
hosted with S3 static website hosting. In the next clip,

44
00:02:56.600 --> 00:03:03.000
we're going to look at some limits and restrictions with CloudFront and S3 static website hosting.

