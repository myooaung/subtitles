WEBVTT
1
00:00:02.192 --> 00:00:05.515
The most fundamental construct in S3 is the bucket,

2
00:00:05.515 --> 00:00:08.917
and it's required before storing anything in the service.

3
00:00:08.917 --> 00:00:15.385
So let's create a bucket that we can store the assets for our demo project.

4
00:00:15.385 --> 00:00:20.739
In the scripts/module_04 folder, open the create‑s3‑bucket.js file.

5
00:00:20.739 --> 00:00:25.063
We'll start by replacing the comment on line 4 with

6
00:00:25.063 --> 00:00:27.229
the region that you're working in.

7
00:00:27.229 --> 00:00:33.371
Then on line 7, we'll need to create an s3 object to perform operations on.

8
00:00:33.371 --> 00:00:36.239
Create a new const named s3.

9
00:00:36.239 --> 00:00:41.020
Then assign to it a new AWS.S3 constructor call.

10
00:00:41.020 --> 00:00:43.918
The next few lines just create the bucket with a given

11
00:00:43.918 --> 00:00:45.823
bucket name and output the results.

12
00:00:45.823 --> 00:00:49.165
S3 bucket names do have to be globally unique,

13
00:00:49.165 --> 00:00:52.971
which means you'll need to add something to the bucket name to make

14
00:00:52.971 --> 00:00:56.074
yours different from mine and everyone else's.

15
00:00:56.074 --> 00:01:00.378
So replace the comment on line 9 with something.

16
00:01:00.378 --> 00:01:04.149
Also make sure your bucket name does not contain an underscore.

17
00:01:04.149 --> 00:01:06.792
We will be using the bucket name in a domain name later,

18
00:01:06.792 --> 00:01:10.195
and underscores aren't allowed in URLs.

19
00:01:10.195 --> 00:01:14.165
Now we can implement our createBucket function.

20
00:01:14.165 --> 00:01:18.929
On line 13, create a trusty old params const object.

21
00:01:18.929 --> 00:01:22.260
Creating a bucket doesn't require a lot of options.

22
00:01:22.260 --> 00:01:23.819
The first property is Bucket,

23
00:01:23.819 --> 00:01:27.998
and you can give it the value of the bucketName function argument.

24
00:01:27.998 --> 00:01:34.453
The next property is ACL in all caps and stands for access control list.

25
00:01:34.453 --> 00:01:39.470
This basically defines the permissions of the bucket and its objects.

26
00:01:39.470 --> 00:01:44.574
The value here is one of the several canned ACLs that AWS provides,

27
00:01:44.574 --> 00:01:47.835
which are just predefined sets of permissions.

28
00:01:47.835 --> 00:01:52.863
We can enter the string public‑read as the value here.

29
00:01:52.863 --> 00:01:56.303
With our params object complete, we can now create the bucket.

30
00:01:56.303 --> 00:01:59.033
On line 19, call s3.createBucket,

31
00:01:59.033 --> 00:02:04.512
passing in the params object as our first argument and a callback

32
00:02:04.512 --> 00:02:08.640
function with err and data arguments as the second.

33
00:02:08.640 --> 00:02:13.352
Inside, if there's and err object, call reject with it; otherwise,

34
00:02:13.352 --> 00:02:15.894
call resolve with the data argument.

35
00:02:15.894 --> 00:02:18.860
And with that, our script is done.

36
00:02:18.860 --> 00:02:24.025
Switch over to your command line and execute the

37
00:02:24.025 --> 00:02:26.320
command node create‑s3‑bucket.js.

38
00:02:26.320 --> 00:02:30.630
You'll see some output once it's complete, and your bucket will be created.

39
00:02:30.630 --> 00:02:33.692
You can double‑check in the console as well if you

40
00:02:33.692 --> 00:02:35.529
want to ensure it was successful.

41
00:02:35.529 --> 00:02:43.000
In the next clip, we're going to upload some of our demo project static assets to this bucket.

