1
00:00:02,380 --> 00:00:08,160
So it's time for the search logic then because adding movies works and I'll not work on making them deletable

2
00:00:08,200 --> 00:00:13,390
here, not really the focus of this module but instead let's make sure that we can enter some term

3
00:00:13,390 --> 00:00:19,440
here, something like that complete for example and then we can click search and we would find this

4
00:00:19,450 --> 00:00:24,690
but if I had another movie which doesn't include complete in the name, I wouldn't find this.

5
00:00:24,910 --> 00:00:34,620
So to achieve that, we need a new function here which I'll name search movie handler because it will

6
00:00:34,620 --> 00:00:40,080
be connected to an event listener and this function here in the end, I want to read whatever the user

7
00:00:40,080 --> 00:00:45,330
entered here and then also trigger the render movies function

8
00:00:45,510 --> 00:00:51,030
but then I want to tell that function here that it should not render all movies but only filtered

9
00:00:51,030 --> 00:00:51,900
movies,

10
00:00:51,900 --> 00:00:58,020
so step-by-step. Let's first of all read the user input and if we have a look at the index.html file,

11
00:00:58,260 --> 00:01:01,010
we can see that it's this input here with that ID

12
00:01:01,020 --> 00:01:02,030
that's interesting to us,

13
00:01:02,040 --> 00:01:05,250
that is where the user will enter the search term.

14
00:01:05,280 --> 00:01:12,090
So here I can get my my filter term or however you want to name it with document get element by ID

15
00:01:12,240 --> 00:01:19,850
with that ID and then .value here, just like that. Now that I know this, I want to call render

16
00:01:19,850 --> 00:01:25,220
movies and forward that filter term.

17
00:01:25,240 --> 00:01:29,950
Now of course render movies doesn't do anything with that yet but that will soon change, for the moment,

18
00:01:30,010 --> 00:01:37,640
let's connect the search button here with add event listener, a click listener and then point at the

19
00:01:37,640 --> 00:01:39,860
search movie handler here,

20
00:01:39,860 --> 00:01:46,790
so at this function we just added. Now render movies now needs to accept that filter term but not always

21
00:01:46,820 --> 00:01:49,320
because here, I don't forward it,

22
00:01:49,370 --> 00:01:54,320
only when the search button is clicked and thankfully we learned how we can enable this or how we can

23
00:01:54,320 --> 00:02:00,640
implement this, on render movies we can work with a default argument. So I can add an arguments here, maybe

24
00:02:00,650 --> 00:02:06,080
named filter, however you want to name it and assign a default value, maybe an empty string.

25
00:02:06,080 --> 00:02:11,900
That means that by default, this will be an empty string if we don't pass any more specific value,

26
00:02:13,350 --> 00:02:18,160
then we can go to that part where we clear the innerHTML

27
00:02:18,360 --> 00:02:21,970
and now I want to tweak the movies through which I go here.

28
00:02:22,050 --> 00:02:24,240
That shouldn't always be all movies,

29
00:02:24,240 --> 00:02:26,690
instead I want to have my filtered movies here.

30
00:02:26,910 --> 00:02:29,430
So I'll add a new constant, filtered movies

31
00:02:29,550 --> 00:02:34,770
and now that will either be all movies if filter is falsy,

32
00:02:34,770 --> 00:02:41,640
if it's an empty string or any other falsy value or it will be my filtered movies if filter is string

33
00:02:41,700 --> 00:02:43,340
other than an empty string.

34
00:02:43,680 --> 00:02:45,370
So we can check filter,

35
00:02:45,380 --> 00:02:49,260
so this parameter here, if it's not true-ish,

36
00:02:49,260 --> 00:02:55,800
so if it's not truthy, if it's falsy, then if it's falsy I want to use all movies because then we

37
00:02:55,800 --> 00:02:57,620
have an empty string or anything like that

38
00:02:57,630 --> 00:03:02,460
and I want to use all movies because no filter was set in that case basically,

39
00:03:02,720 --> 00:03:05,960
otherwise finishing this ternary expression here,

40
00:03:06,210 --> 00:03:12,270
otherwise I want to use movies.filter and you learned about the filter method in the arrays and

41
00:03:12,270 --> 00:03:20,340
iterables module. Filter takes a function which executes on every element in the array, so I can pass

42
00:03:20,340 --> 00:03:23,460
it in as an argument to this arrow function in

43
00:03:23,460 --> 00:03:28,740
this case, doesn't have to be an arrow function but it allows us to write a really short function here

44
00:03:29,920 --> 00:03:31,710
and I don't care about any other arguments

45
00:03:31,710 --> 00:03:36,740
this function would get, instead I just want to check if the movie I'm currently looking at,

46
00:03:36,880 --> 00:03:43,210
if that movie which will be a string, if that includes and there is an includes function on strings,

47
00:03:43,720 --> 00:03:46,810
if that includes a certain value

48
00:03:46,810 --> 00:03:50,850
and here I want to check if it includes my filter term here.

49
00:03:51,060 --> 00:03:58,750
Now let me reformat that and with that, we're filtering all movies for only movies where the movie includes

50
00:03:58,750 --> 00:03:59,530
the filter term,

51
00:03:59,530 --> 00:04:02,860
however of course looking at the entire movie does not make sense,

52
00:04:02,860 --> 00:04:12,010
I should look at movie.info.title and check if the title of the movie includes the filter term,

53
00:04:12,070 --> 00:04:13,480
that's what I want to check.

54
00:04:13,480 --> 00:04:14,550
So if my movie,

55
00:04:14,560 --> 00:04:21,240
if the title there in the info object, if that includes my filter, then I will add it to movies,

56
00:04:21,250 --> 00:04:22,110
otherwise I will not,

57
00:04:22,120 --> 00:04:25,610
if no filter is set, well then I always use all movies

58
00:04:25,810 --> 00:04:29,190
and now we can use that filtered movies constant here to go through it

59
00:04:29,230 --> 00:04:35,040
here with ForEach because that will now be the movies that respect my filter I might have set.

60
00:04:35,170 --> 00:04:36,070
Now let's give it a try,

61
00:04:36,070 --> 00:04:40,860
let's save it and reload and quickly add Javascript here,

62
00:04:40,870 --> 00:04:44,620
level 5 maybe and then something else,

63
00:04:44,630 --> 00:04:45,260
maybe

64
00:04:47,990 --> 00:04:50,170
new courses ahead,

65
00:04:50,510 --> 00:04:53,730
level 10 or any other key-value pair there

66
00:04:53,810 --> 00:04:54,970
and now let's search.

67
00:04:54,980 --> 00:04:57,220
if I search like that, nothing happens,

68
00:04:57,320 --> 00:05:03,920
if I now enter Java here, you see only Javascript is shown, if I enter new here you see only new courses

69
00:05:03,920 --> 00:05:05,200
ahead is shown,

70
00:05:05,270 --> 00:05:08,590
if I search for level nothing is shown because that's not part of the title

71
00:05:09,010 --> 00:05:11,560
and if I clear that, again everything is shown.

72
00:05:11,600 --> 00:05:17,900
If I just search for s, new courses is shown because it's a lowercase s and Javascript only has an uppercase

73
00:05:18,260 --> 00:05:19,260
s here,

74
00:05:19,430 --> 00:05:25,010
if I search for a, both is shown because we have a lowercase a in both.

75
00:05:25,010 --> 00:05:26,690
So that's how this,

76
00:05:26,690 --> 00:05:33,380
of course basic but nonetheless, how this search works and how we can enable it with our Javascript knowledge

77
00:05:33,390 --> 00:05:36,530
here and even bring some array magic to this example.
