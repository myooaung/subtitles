WEBVTT
1
00:00:02.210 --> 00:00:04.720
Now one last word about browser support.

2
00:00:04.770 --> 00:00:09.660
This is a Javascript course and therefore I talked a lot about Javascript code and how you can

3
00:00:09.660 --> 00:00:11.840
make it work and the different features you might be using,

4
00:00:11.850 --> 00:00:15.210
how you can make all these things work in different browsers.

5
00:00:15.210 --> 00:00:20.940
Now of course it doesn't stop at our Javascript file though, if we go to index.html, we also have our

6
00:00:20.940 --> 00:00:26.400
script import and there here I'm just importing app.js like this because webpack bundles it all

7
00:00:26.400 --> 00:00:28.550
together into one big file.

8
00:00:28.770 --> 00:00:35.040
If you would be using Javascript modules without webpack, then you might remember that you had to add

9
00:00:35.040 --> 00:00:36.210
type module,

10
00:00:36.210 --> 00:00:40.860
you can also leave it here when you use webpack but you technically don't need it because you don't

11
00:00:40.860 --> 00:00:42.410
really use modules anymore,

12
00:00:42.450 --> 00:00:45.480
webpack bundles it all into one file after all.

13
00:00:45.480 --> 00:00:51.240
Now if you do add it however because you're maybe not using webpack, you're working with multiple finds

14
00:00:51.240 --> 00:00:58.200
and modules, then older browsers will not support this type module script and then you can add a script

15
00:00:59.280 --> 00:01:05.790
where you add the no module tag just like this, which will be used by older browsers as a fallback. To

16
00:01:05.790 --> 00:01:06.590
be precise,

17
00:01:06.630 --> 00:01:11.700
older browsers will not understand this script tag and ignore it and they will not understand

18
00:01:11.730 --> 00:01:16.980
no module but they'll just ignore this attribute and instead execute the script.

19
00:01:16.980 --> 00:01:22.890
Modern browsers on the other hand do understand type module and execute this script and they also do

20
00:01:22.890 --> 00:01:26.940
understand the no module attribute and therefore they ignore this script.

21
00:01:26.940 --> 00:01:32.970
So this script can hold any fallback code that you want to use in older browsers which don't support

22
00:01:32.970 --> 00:01:33.900
modules,

23
00:01:33.900 --> 00:01:37.830
again if you're bundling all your code together, you don't need that however.

24
00:01:38.220 --> 00:01:43.320
Another thing that might be interesting is users who disabled Javascript.

25
00:01:43.320 --> 00:01:48.450
Now most users these days have it enabled but some might have it disabled.

26
00:01:48.450 --> 00:01:52.410
Now depending on your web site you're building, on the application you're building,

27
00:01:52.410 --> 00:01:55.550
that might mean that your entire app doesn't work properly,

28
00:01:55.560 --> 00:01:59.460
imagine rich web applications like Google Docs and so on,

29
00:01:59.490 --> 00:02:05.680
they really rely on Javascript and you can't make them work with fallbacks without Javascript.

30
00:02:05.850 --> 00:02:11.070
In that situations, you might want to show some message to your users though and that can be done with

31
00:02:11.170 --> 00:02:12.080
noscript

32
00:02:12.180 --> 00:02:17.480
HTML tag where you can say Please enable Javascript to use this page

33
00:02:17.610 --> 00:02:20.780
and now your users at least know why it's not working.

34
00:02:20.850 --> 00:02:26.490
So this is not really a fallback that magically makes your application work but at least it tells your

35
00:02:26.490 --> 00:02:32.520
browsers who have Javascript disabled why the page is not working properly. So this is also something you

36
00:02:32.520 --> 00:02:33.690
might want to keep in mind.
