1
00:00:02,480 --> 00:00:07,910
So as I said, I now want to focus on the more info button. For this, in connect more info button,

2
00:00:07,910 --> 00:00:13,280
we first of all have to get access to the button and we can use similar logic as here in connect switch

3
00:00:13,280 --> 00:00:14,330
button,

4
00:00:14,330 --> 00:00:21,200
copy that line to get the project item element itself with the help of its ID and then get the more info

5
00:00:21,200 --> 00:00:25,460
button here with project item element query selector

6
00:00:25,460 --> 00:00:31,910
and now in there, I want to get to the first button with button first of type because the first button

7
00:00:31,910 --> 00:00:37,370
we have in there is the more info button. Now for the moment,

8
00:00:37,580 --> 00:00:41,230
I don't know how to get any text which I want to display there

9
00:00:41,480 --> 00:00:45,740
and I also don't want to render any element, instead for now I just want to log something to the console

10
00:00:45,740 --> 00:00:52,160
which of course could do with console log but I will use a new class for that, the tooltip class which

11
00:00:52,160 --> 00:00:56,880
then does this logging in its constructor for the moment but we're not there yet.

12
00:00:56,900 --> 00:01:01,480
For now, we need to add an event listener to the button of course, a click event listener,

13
00:01:01,520 --> 00:01:03,460
this should trigger another method here,

14
00:01:03,590 --> 00:01:12,620
show more info handler could be a fitting name, so point at show, at this show more info handler here

15
00:01:12,650 --> 00:01:13,950
on this click listener

16
00:01:14,060 --> 00:01:15,950
and now here I want to create that tooltip.

17
00:01:15,950 --> 00:01:25,250
So I want to in the end build my tooltip here with new tooltip and then let's say call a show method to show

18
00:01:25,250 --> 00:01:25,640
it

19
00:01:25,640 --> 00:01:28,550
and for now again, this will just log something to the console.

20
00:01:28,550 --> 00:01:38,720
So in the tooltip class, we can simply add a show method here and there, console log the tooltip and

21
00:01:38,720 --> 00:01:40,760
for the moment, that will be it.

22
00:01:40,760 --> 00:01:48,650
If I now save that and I reload and I click on more info, we're outputting the tooltip over there on

23
00:01:48,650 --> 00:01:50,860
the right in the console.

24
00:01:50,870 --> 00:01:55,460
Now let's actually finish this up by getting a little bit more fancy than that,

25
00:01:55,760 --> 00:01:59,120
the tooltip is just showing something in the console at the moment,

26
00:01:59,120 --> 00:02:04,640
now why don't we make sure it renders some element, even if it's then in the wrong place but render

27
00:02:04,640 --> 00:02:08,900
some element let's say at the bottom of this page,

28
00:02:09,080 --> 00:02:10,200
something like that.

29
00:02:10,520 --> 00:02:17,190
For that, we can create a new element here in the show method, tooltip element, something like that with

30
00:02:17,190 --> 00:02:19,500
document create element

31
00:02:19,500 --> 00:02:30,130
and here we can just use a div, then assign a class here which I prepared in advance, which can be card

32
00:02:31,230 --> 00:02:33,260
so that it has a nicer look

33
00:02:35,280 --> 00:02:42,280
and then just append it with document body append tooltip element like this.

34
00:02:42,300 --> 00:02:43,190
If we now save that,

35
00:02:43,230 --> 00:02:49,170
give it a try, click on more info, if you scroll to the bottom of the page, you will see some boxes getting

36
00:02:49,170 --> 00:02:49,660
added there.

37
00:02:49,740 --> 00:02:55,500
Pretty hard to see but if you click often enough, there are enough boxes added. Now to see them a bit better,

38
00:02:55,500 --> 00:03:03,540
let's add some text there, text content dummy because for now I have no better text and with that if I

39
00:03:03,600 --> 00:03:09,810
reload, we see that's getting added and now I just want to make sure that we can also dispose of such

40
00:03:09,810 --> 00:03:11,750
a tooltip by clicking on it

41
00:03:11,960 --> 00:03:16,110
and for that we need to add an event listener here,

42
00:03:16,110 --> 00:03:18,650
so tooltip add event listener.

43
00:03:18,660 --> 00:03:22,290
It's not a button but we can also listen to clicks on any other element,

44
00:03:22,290 --> 00:03:31,440
so here to that div we add a click listener and then on the tooltip, we can add a remove method or maybe

45
00:03:31,440 --> 00:03:35,310
name that detach and name this one here attach

46
00:03:35,310 --> 00:03:37,800
so that's a bit more generic but that's up to you

47
00:03:37,890 --> 00:03:46,660
and then here, add event listener click, this.detach and here in detach, we now want to remove that

48
00:03:46,660 --> 00:03:53,200
tooltip element, to have access to it, I'll store it in an instance property. This element is equal to

49
00:03:53,200 --> 00:03:55,250
tooltip element,

50
00:03:55,430 --> 00:04:00,710
so now as long as we make sure that this refers to the correct thing in detach which we can do by using

51
00:04:00,710 --> 00:04:08,930
bind this or as an alternative to also show this, by using this other syntax here for creating a method,

52
00:04:09,390 --> 00:04:15,440
this field methods syntax where you learned in the last section that this then actually is added in

53
00:04:15,440 --> 00:04:20,680
a bit more of an inefficient way because this function is now recreated for every instance of tooltip

54
00:04:20,870 --> 00:04:24,560
but for this app, this should be fine and also to show this alternative.

55
00:04:24,560 --> 00:04:29,330
The advantage of this approach when using an arrow function is that this will always refer to the class

56
00:04:29,360 --> 00:04:30,620
automatically,

57
00:04:30,620 --> 00:04:37,820
so here we can then therefore call this element and refer to the element we're storing down there

58
00:04:39,100 --> 00:04:46,390
with this line here and called remove here or if we need to support older browsers, use this

59
00:04:46,480 --> 00:04:54,460
element, parent element remove child, this.element. This would work in older browsers as well but

60
00:04:54,460 --> 00:04:56,720
I'll go with a shorter modern syntax

61
00:04:56,920 --> 00:04:59,900
and now we should be able to click on a tooltip and get rid of it.

62
00:04:59,980 --> 00:05:06,340
Now since I rename this to attach and I don't name it show anymore, we have to change this here to attach

63
00:05:06,820 --> 00:05:11,770
and now if we go back and reload this one more time, click on more info here for example, scroll to the

64
00:05:11,770 --> 00:05:12,240
bottom,

65
00:05:12,240 --> 00:05:13,360
click on it,

66
00:05:13,360 --> 00:05:14,920
it's getting deleted,

67
00:05:14,980 --> 00:05:21,130
also of course if we added multiple tooltips. So this works and now we can interact with this a bit

68
00:05:21,130 --> 00:05:22,950
at least and we're outputting something.

69
00:05:23,080 --> 00:05:25,690
Now I'm still not fully done though,

70
00:05:25,900 --> 00:05:30,640
I want to improve this code a little bit more, though for this simple app of course you wouldn't need

71
00:05:30,640 --> 00:05:37,930
to do that but for one I want to make sure that if we click on this button, that should show the tooltip,

72
00:05:37,930 --> 00:05:43,680
so when show more info handler, when that function executes, I want to check whether we have an active

73
00:05:43,690 --> 00:05:50,170
tooltip so that I can't open more than one tooltip for a given project and to manage this, I'll add a

74
00:05:50,170 --> 00:05:59,910
new property to project item instances, has active tooltip, which initially is false because initially

75
00:05:59,910 --> 00:06:06,060
there is no active tooltip but here when we executed this code, I'll set this to true, so I'll set has

76
00:06:06,060 --> 00:06:08,110
active tooltip to true 

77
00:06:08,310 --> 00:06:14,400
and then here at the beginning, I'll check if this has active tooltip is true and if it is, I will return

78
00:06:14,430 --> 00:06:20,600
so that I don't execute this code in that case and we therefore don't open another new tooltip.

79
00:06:20,610 --> 00:06:23,450
Now I just need to make sure that when we close a tooltip,

80
00:06:23,460 --> 00:06:25,440
so when we detach here,

81
00:06:25,440 --> 00:06:31,500
so when this event listener triggers here, I let my project item class know about that so that I can

82
00:06:31,500 --> 00:06:38,740
set has active tooltip to false again so that we are able to open a new one thereafter. To make sure

83
00:06:38,740 --> 00:06:46,800
that this works, I'll add a new method here, close tooltip and of course we could do this in detach as

84
00:06:46,800 --> 00:06:51,910
well but soon, I want to remove these two from this class and move them into a base class,

85
00:06:51,930 --> 00:06:54,620
that's why I'm creating this in a more generic way.

86
00:06:54,810 --> 00:06:59,440
So here in close tooltip to which I'll now bind this here, close tooltip,

87
00:06:59,490 --> 00:07:05,610
therefore this will now use this trick with the arrow function assigned to the field here,

88
00:07:05,640 --> 00:07:11,850
this detach method can now be converted to a normal method because here I will now want to call this

89
00:07:11,850 --> 00:07:16,230
detach and therefore this inside of detach will now refer to the correct thing because I'm calling

90
00:07:16,230 --> 00:07:23,250
this now in an arrow function but here besides doing that, I also want to call a method which I also receive

91
00:07:23,250 --> 00:07:24,110
here

92
00:07:24,360 --> 00:07:34,640
through the constructor let's say, we could name it close notifier function and then set this close notifier

93
00:07:34,640 --> 00:07:41,900
handler equal to close notifier function or just name it close notifier here because I'm not

94
00:07:41,900 --> 00:07:46,700
binding this to an event so I'm fine with naming it like this and then here in close tooltip besides

95
00:07:46,700 --> 00:07:47,380
detaching it,

96
00:07:47,390 --> 00:07:53,600
I'll call this close notifier as a function and now I just need to make sure that this function is passed

97
00:07:53,600 --> 00:07:55,550
in to the tooltip constructor,

98
00:07:55,550 --> 00:08:02,990
so in project item where I create a tooltip, there I want to pass in a function that sets has active

99
00:08:02,990 --> 00:08:04,310
tooltip to false 

100
00:08:04,370 --> 00:08:10,910
and for this we can add a new method or use a quick anonymous function here where I just said this has

101
00:08:10,910 --> 00:08:17,750
active tooltip to false if this executes. So I'll just do this because it's such a simple function.

102
00:08:17,870 --> 00:08:21,620
So with that we shouldn't be able to open the tooltip more than once,

103
00:08:21,770 --> 00:08:22,460
let's give it a try,

104
00:08:22,460 --> 00:08:26,090
let's reload, click on more info, new tooltip was added.

105
00:08:26,240 --> 00:08:29,990
If I click this again for the same element, I don't add more tooltips,

106
00:08:30,050 --> 00:08:33,250
if I click another button for a different element, we can add it,

107
00:08:33,380 --> 00:08:38,960
if I close these tooltips, I can reopen them though. So that seems to work correctly,

108
00:08:39,830 --> 00:08:41,210
yes looks good

109
00:08:41,420 --> 00:08:47,150
and with all of that, the remaining thing which I want to do is I want to add a base class so that we

110
00:08:47,150 --> 00:08:53,480
have detach and attach and a base class and could reuse that for other elements which we want to add

111
00:08:53,480 --> 00:08:56,420
to the DOM or remove from there dynamically as well.
