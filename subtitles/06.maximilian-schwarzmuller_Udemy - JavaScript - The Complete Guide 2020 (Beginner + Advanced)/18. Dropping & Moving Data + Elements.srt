1
00:00:02,400 --> 00:00:08,880
Now to react to a drop, we can add another event listener, still on the list because that's the area where

2
00:00:08,880 --> 00:00:11,160
we drop and that's the drop event

3
00:00:11,160 --> 00:00:14,030
we're listening to. Now in the drop event,

4
00:00:14,040 --> 00:00:19,970
we can extract any data from the event object which we added here in drag start,

5
00:00:20,040 --> 00:00:25,650
so data we passed here can now be extracted in the drop event, that is available.

6
00:00:25,650 --> 00:00:34,380
So down here in drop, we can now get our project ID by going to event, data transfer, get data

7
00:00:34,380 --> 00:00:39,840
and now your data identifier which is text/plain, that will retrieve this data.

8
00:00:42,800 --> 00:00:43,400
Now here,

9
00:00:43,400 --> 00:00:49,670
remember we are in one of the two lists and I want to make sure that if we're in the other list,

10
00:00:49,670 --> 00:00:54,750
so if we really dragged the element into the other list, I do add it to that list.

11
00:00:54,770 --> 00:01:01,190
If I dragged the element but let loose of it in the list it already was in, I of course don't want to

12
00:01:01,190 --> 00:01:03,470
add it there because it already is in that list,

13
00:01:03,470 --> 00:01:04,580
right.

14
00:01:04,610 --> 00:01:11,060
So since this event listener here is added to list and runs inside of a method of project list, we have

15
00:01:11,060 --> 00:01:18,910
to check if in the projects of that list the event listener runs on,

16
00:01:19,030 --> 00:01:23,280
if there we find a project with this ID,

17
00:01:23,350 --> 00:01:27,890
so we go through all projects and compare IDs.

18
00:01:28,000 --> 00:01:35,170
Now if we find a project with that ID in the projects that are already assigned to that list, then

19
00:01:35,170 --> 00:01:39,070
we know we dropped it in the list it already was part of

20
00:01:39,240 --> 00:01:41,310
and then I don't want to do anything.

21
00:01:41,350 --> 00:01:46,780
So in this case, we can simply return here which means we don't continue with this function execution,

22
00:01:46,780 --> 00:01:49,630
which means the next line doesn't run and therefore we don't do anything.

23
00:01:50,080 --> 00:01:55,410
Alternatively, you check the opposite here and move all your code into this if statement.

24
00:01:55,420 --> 00:01:59,890
So now here I only continue if we're not having this project already,

25
00:01:59,890 --> 00:02:06,370
so if we really dropped it in the other list, then I want to add it to this list where we dropped it and

26
00:02:06,400 --> 00:02:10,250
I want to remove it from the list it came from.

27
00:02:10,250 --> 00:02:15,700
Now it's actually not that simple because the projects I can interact with are only the projects where

28
00:02:15,700 --> 00:02:18,040
the dragged project is not part of

29
00:02:18,130 --> 00:02:20,870
and I only have the ID of the dragged project.

30
00:02:21,070 --> 00:02:26,980
So we would have to find some solution, just as we did it earlier in the course already, with some function

31
00:02:26,980 --> 00:02:33,430
we pass around between the two lists instances so that we now can call a function in the other list

32
00:02:33,760 --> 00:02:38,170
and move our element or we do something else.

33
00:02:38,170 --> 00:02:43,720
What if we then simply trigger a click on the finished button or on the activate button? That would do

34
00:02:43,720 --> 00:02:44,420
the trick right

35
00:02:44,440 --> 00:02:49,630
because that will move the element. It will run all the other click listening logic we already did

36
00:02:49,630 --> 00:02:50,170
set up,

37
00:02:50,740 --> 00:02:52,050
so that's what I'll do here.

38
00:02:52,240 --> 00:02:59,850
I'll go to my document here and then get an element by ID and use that project ID because that is

39
00:02:59,850 --> 00:03:02,770
assigned as an ID to the HTML elements

40
00:03:03,060 --> 00:03:08,100
and now inside of that project which we selected, I want to get access to that button which I can

41
00:03:08,100 --> 00:03:12,500
get with query selector button last of type

42
00:03:12,900 --> 00:03:15,020
and then there, we can call click

43
00:03:15,240 --> 00:03:20,580
and now effectively what I do is I go to the element which was dropped which isn't really moved as I

44
00:03:20,580 --> 00:03:21,270
explained,

45
00:03:21,270 --> 00:03:23,040
just looks like we move it.

46
00:03:23,760 --> 00:03:27,750
So we go to that element which is getting dragged, in this case the finish the course element

47
00:03:27,750 --> 00:03:32,910
and once I drop it, this button here is clicked for us with the help of this code,

48
00:03:32,940 --> 00:03:34,270
this is what's happening here.

49
00:03:35,360 --> 00:03:43,330
Of course I also want to remove the droppable styling here, so I'll copy that line and what you can

50
00:03:43,330 --> 00:03:46,140
do here as well is you can call even prevent default,

51
00:03:46,180 --> 00:03:53,150
it's not required but you can do it if there were some default behavior for dropping something here,

52
00:03:53,200 --> 00:03:58,810
for example if you would be dropping some image somewhere else and the browser might then typically load

53
00:03:58,840 --> 00:04:03,130
that image full screen, you could omit it here or prevent that here,

54
00:04:03,130 --> 00:04:05,960
so you can add this, here we don't need it though

55
00:04:06,160 --> 00:04:08,800
and therefore here we're actually done.

56
00:04:08,800 --> 00:04:15,750
Now let's see if that works, if we save that and we reload, if I drag finish the course in finished projects,

57
00:04:15,760 --> 00:04:23,860
you see the same thing happens as when I click a button here and we can drag items around just as we

58
00:04:23,860 --> 00:04:28,040
should be able to do. So this is looking pretty good to me here,

59
00:04:28,050 --> 00:04:32,320
this is drag and drop implemented here and working like a charm

60
00:04:32,430 --> 00:04:34,520
as you can tell and therefore

61
00:04:34,530 --> 00:04:37,760
we get that finished. Now before we close this module though,

62
00:04:37,770 --> 00:04:43,200
let me also show you the drag end event which we don't need here but which you also can listen to.

63
00:04:44,100 --> 00:04:49,370
Now as I mentioned, you can also listen to a drag end effect and you do that on the item where you also

64
00:04:49,370 --> 00:04:50,910
listen to drag start,

65
00:04:50,910 --> 00:04:58,070
so in this case on the project item. There, you can basically copy that line and of course we could also

66
00:04:58,080 --> 00:05:07,840
therefore refactor that, item equals this here and then use item add event listener and then

67
00:05:07,840 --> 00:05:18,010
here, also item add event listener and listen to drag end here to then do something when a drag ends.

68
00:05:18,150 --> 00:05:23,810
Now we can console log the event here to see what's in there and save that

69
00:05:23,850 --> 00:05:31,660
and with that if we reload and we now drag and drop, you see this is the event which gets emitted and in

70
00:05:31,720 --> 00:05:33,850
there, we can get a couple of pieces of information,

71
00:05:33,850 --> 00:05:40,090
for example the target was the element itself. By the way for the drop and drag enter and so on events,

72
00:05:40,090 --> 00:05:45,730
so for all the events we added as listeners to the list itself, the target always would be the list, never

73
00:05:45,730 --> 00:05:50,620
the element which is getting dragged because it's the list which triggers the event in the end, right?

74
00:05:51,190 --> 00:05:51,430
Here

75
00:05:51,430 --> 00:05:55,570
however, drag end is on the item and therefore the target is the item itself

76
00:05:55,570 --> 00:06:01,140
and now here we can also pass around some data if we wanted to. In data transfer,

77
00:06:01,240 --> 00:06:05,040
we also have the drop effect here.

78
00:06:05,110 --> 00:06:09,780
We allowed that move effect and you see the drop effect now also is moved here.

79
00:06:09,880 --> 00:06:15,940
Now that shows you that the drop succeeded because if a drop does not succeed,

80
00:06:15,940 --> 00:06:23,060
for example if I let loose here, we still get the drag end event but there, you see data transfer drop

81
00:06:23,060 --> 00:06:24,290
effect is none.

82
00:06:24,370 --> 00:06:29,770
So you can always check the drop effect property in data transfer to find out whether a drop succeeded

83
00:06:29,770 --> 00:06:30,610
or not

84
00:06:30,700 --> 00:06:37,390
and now you could also run any logic you want in here to for example update the UI or move data around,

85
00:06:37,390 --> 00:06:40,920
that would also be possible. And that's it,

86
00:06:40,920 --> 00:06:44,050
this is drag and drop implemented with this example,

87
00:06:44,100 --> 00:06:50,010
as I mentioned in the last lecture of this module, you'll find a complete guide, also with some other examples

88
00:06:50,010 --> 00:06:51,910
and more details if you're interested

89
00:06:51,990 --> 00:06:56,580
and with that, you learned a lot about events and specifically, also about drag and drop.
