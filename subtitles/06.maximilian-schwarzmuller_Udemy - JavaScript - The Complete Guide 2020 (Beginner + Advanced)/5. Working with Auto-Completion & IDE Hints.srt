1
00:00:02,130 --> 00:00:05,860
Now all the shortcuts don't help you if you write bad or incorrect code

2
00:00:06,060 --> 00:00:11,060
but here again modern IDEs or editors like Visual Studio Code have you covered,

3
00:00:11,070 --> 00:00:13,360
you get a lot of autocomplete here.

4
00:00:13,470 --> 00:00:19,530
Let's say here, with our create and write output method, if I want to use this method, let's say I would

5
00:00:19,530 --> 00:00:20,890
want to call it here,

6
00:00:21,030 --> 00:00:29,310
I can type create and write or just create in my case and I get suggestions. I get suggestions of functions

7
00:00:29,340 --> 00:00:35,220
or variables that I could use here that basically includes the words create and they don't just have

8
00:00:35,220 --> 00:00:36,130
to start with it,

9
00:00:36,150 --> 00:00:37,710
they include it anywhere.

10
00:00:37,710 --> 00:00:43,350
It doesn't even have to be one word as you can see with the suggestions down there, all properties or

11
00:00:43,350 --> 00:00:50,190
functions that includes the characters I just typed in the right order will be shown here and then the

12
00:00:50,190 --> 00:00:53,980
suggestions are narrowed down the more I type.

13
00:00:54,030 --> 00:00:57,240
So that's really useful because that allows you to write code quicker,

14
00:00:57,240 --> 00:01:03,990
for example here, I can just type create, the IDE intelligently guesses that I probably mean create and

15
00:01:03,990 --> 00:01:04,860
write output,

16
00:01:04,890 --> 00:01:11,340
otherwise I could select a different option and then all you have to do is tap enter or tap to use that

17
00:01:11,610 --> 00:01:16,800
and to complete that word, which of course saves you the hassle of writing it all on your own,

18
00:01:16,860 --> 00:01:23,950
so that's much faster. Now in addition, you'll also find a short description of what you are going to

19
00:01:23,950 --> 00:01:29,380
use here on the right, here for example you'll see that this is a function, that this is the name and that

20
00:01:29,380 --> 00:01:34,300
this function will take a couple of arguments which of course allows you to find out if that is the

21
00:01:34,300 --> 00:01:36,420
function you really want to use here.

22
00:01:36,610 --> 00:01:42,190
Some functions and properties, especially the built-in ones even have short descriptions attached to

23
00:01:42,190 --> 00:01:46,900
them which you then also find here in the panel on the right to learn more about it and learn more about

24
00:01:47,530 --> 00:01:49,770
what this will do for you.

25
00:01:49,780 --> 00:01:53,950
So this is very important and really helpful.

26
00:01:53,980 --> 00:01:59,440
You'll also get something similar if you for example add a dot after an object or in this case here,

27
00:01:59,440 --> 00:02:06,010
after an array which turns out to be an object. If you add a dot here, you get this auto completion that

28
00:02:06,070 --> 00:02:12,700
offers you a list of all the properties or functions you can access on this object, like the push function

29
00:02:12,700 --> 00:02:18,060
here which allows us to add a new entry, then you get a short description of it here on the right, you

30
00:02:18,070 --> 00:02:23,050
see the arguments it takes, this syntax might not fully be clear at this point but that's not a problem,

31
00:02:23,050 --> 00:02:29,380
we'll dive more into arrays later and you'll see that an array for example has way more methods or way

32
00:02:29,380 --> 00:02:31,270
more functions attached to it

33
00:02:31,270 --> 00:02:36,680
and I'll dive into way more of them in a separate module focused on arrays.

34
00:02:36,820 --> 00:02:43,750
So this dot notation also comes with great auto completion and by the way, if this menu ever closes or

35
00:02:43,750 --> 00:02:49,710
you accidentally close it, if you want to bring it back, of course you can delete the dot and add another

36
00:02:49,780 --> 00:02:55,390
one but you can also just use a shortcut which by default should be control space and this will bring

37
00:02:55,390 --> 00:02:58,030
up this suggestions menu again.

38
00:02:58,030 --> 00:03:02,280
So this is another core feature which I would recommend that you use.

39
00:03:02,300 --> 00:03:07,760
You can also hover over the things and you'll get a short description of what this is and what this

40
00:03:07,760 --> 00:03:10,580
does for example that pushes a function,

41
00:03:10,640 --> 00:03:13,400
it's called method here and I'll come back to what the difference is

42
00:03:13,430 --> 00:03:16,340
but it's essentially a function and you see what it does.

43
00:03:16,370 --> 00:03:17,420
So this is also helpful,

44
00:03:17,430 --> 00:03:20,870
you can hover over the things to learn a bit more about it.

45
00:03:21,410 --> 00:03:29,330
And when you call a function, like let's say create and write output and you enter the parentheses, you

46
00:03:29,330 --> 00:03:35,930
by default get this parameter help here where you see all parameters and the value which you now need

47
00:03:35,930 --> 00:03:41,750
to provide for the first parameter is even highlighted here, so that you know that whatever you're going

48
00:03:41,750 --> 00:03:46,550
to type now will be received on this operator parameter

49
00:03:46,700 --> 00:03:52,580
and once you enter this and you add a comma, you see that now the next parameter is highlighted,

50
00:03:52,610 --> 00:03:57,950
now that's really convenient. If you ever close this menu for some reason, you also get a shortcut for

51
00:03:57,950 --> 00:03:58,610
this,

52
00:03:58,640 --> 00:04:02,660
so let's quickly check this and maybe just type parameter here.

53
00:04:02,670 --> 00:04:09,170
What we see is we got this trigger parameter hints shortcut which is this combination - shift command

54
00:04:09,170 --> 00:04:15,940
space in my case, so if I now type shift command space here, you see this menu reopens

55
00:04:15,980 --> 00:04:19,010
so that's all the really convenient.

56
00:04:19,040 --> 00:04:23,570
So these are the core features you should be aware of and you should experiment with and you should

57
00:04:23,570 --> 00:04:29,870
leverage because that helps you write correct code faster and without errors

58
00:04:29,990 --> 00:04:32,210
and that's always something you want to do of course.
