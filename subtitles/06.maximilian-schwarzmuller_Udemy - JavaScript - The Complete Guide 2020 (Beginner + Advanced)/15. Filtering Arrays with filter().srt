1
00:00:02,230 --> 00:00:08,200
Now slowly we're coming to an end of interesting array methods but we're not there yet. Another very

2
00:00:08,200 --> 00:00:08,700
useful

3
00:00:08,700 --> 00:00:14,740
array method is one that allows us to filter the elements in an array. Now we had a look at find and

4
00:00:14,740 --> 00:00:18,310
find index which was really nice for finding single elements

5
00:00:18,310 --> 00:00:23,710
but what if you want to basically reduce the amount of elements in your array based on some filter,

6
00:00:23,740 --> 00:00:31,360
let's say here we only want to have prices that are greater than 6, so that only 6.59 and 10.99

7
00:00:31,360 --> 00:00:33,650
are included.

8
00:00:33,700 --> 00:00:41,920
Well for that, we can create a new constant for example filtered array and then use the prices array and

9
00:00:41,920 --> 00:00:43,740
call the filter method on it.

10
00:00:43,780 --> 00:00:50,230
Now just like all these other array methods, filter will return a brand new array, so it will not touch

11
00:00:50,230 --> 00:00:55,360
the original array but instead return a new one which we then store here and which I therefore want to

12
00:00:56,020 --> 00:01:03,310
output down there and the filter method also takes a function and this function here works just like the

13
00:01:03,310 --> 00:01:10,470
function you pass to find and to map and so on. You get the value it's currently looking at because this

14
00:01:10,510 --> 00:01:16,690
function which you pass to filter is again executed for every item in the array on which you call filter,

15
00:01:16,690 --> 00:01:23,740
so on every price in this example. You get the index here and you get the original array if you're interested,

16
00:01:23,890 --> 00:01:28,540
though you will rarely use that last argument as you already saw here.

17
00:01:28,630 --> 00:01:31,130
Well and then here again you need to return something,

18
00:01:31,210 --> 00:01:37,420
so the filter method is a method that expects the function which you pass to it to return a value, to

19
00:01:37,420 --> 00:01:42,100
be precise it wants true or false. It wants true

20
00:01:42,100 --> 00:01:48,460
if the item on which this function is currently executed should be kept in the newly created array and

21
00:01:48,460 --> 00:01:50,410
false if it should be dropped.

22
00:01:51,630 --> 00:01:57,920
So here I want to keep everything where the price is greater than 6, so I will return price greater 6.

23
00:01:57,960 --> 00:02:03,540
This boolean comparison here will return true for any item where the price is greater than 6

24
00:02:03,580 --> 00:02:07,400
and therefore any item where the price is greater than 6 will be kept,

25
00:02:07,410 --> 00:02:13,420
other items will be dropped from that newly created array, the old array is not touched, so the prices

26
00:02:13,420 --> 00:02:14,760
array itself is not touched.

27
00:02:15,690 --> 00:02:22,320
So if we save that and reload, filtered prices here indeed only has two values which are my two values

28
00:02:22,350 --> 00:02:23,970
greater than six.

29
00:02:24,030 --> 00:02:29,220
So filter is also really useful for filtering an array as you can guess and therefore this

30
00:02:29,220 --> 00:02:30,500
also is an operation

31
00:02:30,600 --> 00:02:33,210
you'll find yourself do quite frequently.
