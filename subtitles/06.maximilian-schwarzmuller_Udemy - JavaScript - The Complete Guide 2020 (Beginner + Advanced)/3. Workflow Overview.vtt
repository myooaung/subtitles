WEBVTT
1
00:00:02.520 --> 00:00:07.500
Before we get started, let's see how we would combine these tools though. Well the idea would be that

2
00:00:07.530 --> 00:00:12.330
when we write our code, we want to have two different workflows which we can start.

3
00:00:12.330 --> 00:00:17.850
We either have our development workflow which should start whenever we save changes to our code or our

4
00:00:17.850 --> 00:00:23.130
production workflow which you typically want to start with a certain command because that should not

5
00:00:23.130 --> 00:00:23.570
run

6
00:00:23.580 --> 00:00:28.170
whenever you change your code but only once you're ready for it and you explicitly want to start it.

7
00:00:28.950 --> 00:00:33.960
Now no matter which workflow we're in, we'll always need npm and Node.js.

8
00:00:33.960 --> 00:00:40.050
You might remember we installed that earlier already because we needed it to install that development

9
00:00:40.050 --> 00:00:45.100
server globally and the development server in turn also requires Node.js to run.

10
00:00:45.450 --> 00:00:49.040
So this should already be installed globally, if not make sure you do it,

11
00:00:49.040 --> 00:00:55.560
we do it together in this module because Node.js will be used by many of these tools behind the scenes

12
00:00:55.560 --> 00:01:03.210
to execute code on your machine and do these various optimizations and npm is the Node Package Manager

13
00:01:03.450 --> 00:01:09.840
which typically is used to install these different tools and also to orchestrate them, to start the different

14
00:01:09.840 --> 00:01:12.100
workflows and so on.

15
00:01:12.180 --> 00:01:15.550
Now with that let's see what we have inside of these workflows.

16
00:01:15.570 --> 00:01:21.660
Well when we build for development, we want to have linting set up so that we basically can check our

17
00:01:21.660 --> 00:01:26.610
code and we always see if we have code quality issues in our code.

18
00:01:26.610 --> 00:01:32.850
We then of course also want to bundle our code so that we combine our different files into a couple

19
00:01:32.850 --> 00:01:39.810
of bigger files, so that we don't send all these unnecessary HttpRequests and we then want to have

20
00:01:39.810 --> 00:01:44.730
a development server which automatically reloads whenever our code did change

21
00:01:44.730 --> 00:01:50.780
and that in a nutshell would be what we want to do when we develop and when we changed our code.

22
00:01:50.850 --> 00:01:55.800
Now during production, we still might want to lint but we're doing this all the time during development

23
00:01:55.800 --> 00:02:00.720
so this kind of already should have been done by this point but of course we also want to bundle our

24
00:02:00.720 --> 00:02:02.290
code with the help of webpack,

25
00:02:02.340 --> 00:02:07.170
we still want to ship a couple of files instead of dozens of files.

26
00:02:07.170 --> 00:02:14.460
Now however, we also want to compile our code, to translate it from modern Javascript to Javascript that

27
00:02:14.460 --> 00:02:16.440
runs in older browsers as well

28
00:02:16.530 --> 00:02:22.860
but again we'll cover this in a separate module and once this is done, we want to optimize the code, something

29
00:02:22.860 --> 00:02:28.320
we don't do during development because it can make debugging harder but we definitely want to do it

30
00:02:28.320 --> 00:02:33.990
in production. Well and then we have our production ready code which we get as an output and which we can

31
00:02:33.990 --> 00:02:36.790
now upload to the server where we need it.

32
00:02:36.810 --> 00:02:40.380
These are the two workflows and we'll implement both in this module.
