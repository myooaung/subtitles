WEBVTT
1
00:00:02.270 --> 00:00:07.310
Now let's continue working on this mini application and let's make sure that clicking on this button

2
00:00:07.520 --> 00:00:09.680
here actually does something.

3
00:00:09.680 --> 00:00:15.380
Now there are various approaches to making sure we can reach out to that button, approach A would be

4
00:00:15.380 --> 00:00:23.590
to not add it here in innerHTML but instead added as an object you create with document create element,

5
00:00:23.720 --> 00:00:30.230
then you would just have to get access to some part of that rendered HTML code, to that div for example

6
00:00:30.260 --> 00:00:35.990
so that you can append that created object, therefore approach B is the one I'll use, is where I have

7
00:00:35.990 --> 00:00:44.330
the button in there but then I need to get access to it and for that, I can access to my add cart button

8
00:00:44.330 --> 00:00:51.670
or however you want to name that constant with the help of prod el which is that element we created

9
00:00:51.710 --> 00:00:57.190
and then in there we can of course use query selector for example to select the first button we find.

10
00:00:57.260 --> 00:01:01.090
We only have one button in there and therefore this is the button we get access to.

11
00:01:01.100 --> 00:01:07.580
Now please note, since I execute this inside of the render method of this class, this always applies

12
00:01:07.580 --> 00:01:14.160
to this snippet which is created for this concrete instance which is later created on that class.

13
00:01:14.210 --> 00:01:19.790
So the fact that we'll create multiple products and therefore have multiple buttons on the screen does

14
00:01:19.790 --> 00:01:25.880
not cause a problem here because when this code runs here, this entire code, we're only looking at a single

15
00:01:25.940 --> 00:01:31.380
product because we're in a single class which is responsible for creating a single product.

16
00:01:31.430 --> 00:01:36.350
So we will run this code on this snippet which only holds one button and therefore we get access to

17
00:01:36.350 --> 00:01:39.590
exactly that button for this product.

18
00:01:39.590 --> 00:01:42.180
Now here I then got access to this button,

19
00:01:42.200 --> 00:01:50.380
now we can add an event listener here, click listener and execute a function or to be precise,

20
00:01:50.390 --> 00:01:54.430
probably a method because adding a product to a cart,

21
00:01:54.530 --> 00:01:59.510
well for me that again makes sense to be a method of this product item class here.

22
00:01:59.510 --> 00:02:04.330
So we can add another method, position doesn't matter, doesn't have to be above or below render,

23
00:02:04.330 --> 00:02:10.250
you can add it anywhere because Javascript parses and kind of saves that entire definition before your

24
00:02:10.250 --> 00:02:11.900
code executes.

25
00:02:11.900 --> 00:02:15.120
So here I will add it above but that's not a must do

26
00:02:15.200 --> 00:02:17.720
and I will call this method add to cart,

27
00:02:17.720 --> 00:02:20.930
of course it's totally up to you how you call it

28
00:02:20.930 --> 00:02:27.950
and in there, I then want to later add logic to add it, for now I'll just connect this. So here on add event

29
00:02:27.950 --> 00:02:28.360
listener,

30
00:02:28.370 --> 00:02:30.320
I'll point at this

31
00:02:30.320 --> 00:02:34.890
add to cart and then here I will console log

32
00:02:38.700 --> 00:02:49.850
adding product to cart and I'll also console log this product so that we can see which product was added.

33
00:02:49.870 --> 00:02:52.050
So now we're adding the event listener down there,

34
00:02:52.960 --> 00:02:58.330
let's now have a look. Let's save that and reload and click add to cart and what you'll see is something strange,

35
00:02:58.360 --> 00:03:01.060
you see undefined here.

36
00:03:01.060 --> 00:03:05.560
So you don't see the product which we clicked on which should be the pillow but instead undefined,

37
00:03:05.560 --> 00:03:07.510
now why is that?

38
00:03:07.510 --> 00:03:14.320
Well it's related to the behavior of this which I talked about in the objects module. We execute

39
00:03:14.320 --> 00:03:20.410
add to cart whenever the button is clicked, we assign the add to cart method of this object, of this

40
00:03:20.410 --> 00:03:26.020
class to this button or to this event listener.

41
00:03:26.020 --> 00:03:33.820
Now as you learned in that object module, Javascript then binds this to the source of that event,

42
00:03:33.820 --> 00:03:40.780
so to that button and not to your your class or the object where this effectively runs on later.

43
00:03:41.700 --> 00:03:47.860
The solution or one possible solution is to use bind here and bind this,

44
00:03:47.860 --> 00:03:52.420
so that means that we bind this inside of add to cart,

45
00:03:52.420 --> 00:03:57.130
so what this refers to instead of this method to the same thing

46
00:03:57.130 --> 00:04:07.660
this refers to in this place here and this here in this code snippet refers to the entire object, so to

47
00:04:07.660 --> 00:04:15.310
this product item object assuming that we call render on an instance of this object, which is exactly what

48
00:04:15.310 --> 00:04:16.410
we're doing down there.

49
00:04:16.420 --> 00:04:19.800
Here we create the instance, here we call render on that instance.

50
00:04:19.840 --> 00:04:25.480
So therefore this now should refer to the correct thing and hence if we save that we reload and click

51
00:04:25.480 --> 00:04:26.160
here,

52
00:04:26.170 --> 00:04:28.380
indeed here I log this product object,

53
00:04:28.390 --> 00:04:29.160
so that works

54
00:04:29.170 --> 00:04:36.820
now. Of course that's not the final logic I want to execute if we add something to cart though,

55
00:04:37.040 --> 00:04:46.070
instead I want to have an object, a cart object, probably a cart class which also renders some output

56
00:04:46.100 --> 00:04:53.600
to the screen which in the end then holds a list of all the products and calculates a sum which then

57
00:04:53.600 --> 00:04:54.890
is output on the screen.
