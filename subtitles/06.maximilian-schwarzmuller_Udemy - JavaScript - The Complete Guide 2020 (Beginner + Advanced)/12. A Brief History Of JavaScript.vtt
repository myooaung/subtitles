WEBVTT
1
00:00:02.180 --> 00:00:05.000
So now that we know what Javascript is and where it runs,

2
00:00:05.030 --> 00:00:12.060
let's have a very brief overview of the Javascript history so that you know how it evolved over time.

3
00:00:12.110 --> 00:00:20.310
In 1995, Netscape introduces LiveScript which thereafter was renamed to Javascript.

4
00:00:20.360 --> 00:00:27.050
Now in 1996, Microsoft also released its own version of Javascript in Internet Explorer.

5
00:00:27.050 --> 00:00:32.280
So same idea, generally same syntax but also differences,

6
00:00:32.360 --> 00:00:33.780
so we already had an issue there.

7
00:00:33.830 --> 00:00:37.200
Back then Javascript also wasn't able to do a lot of things,

8
00:00:37.250 --> 00:00:43.130
it was mainly used for a spammy things, for annoying overlays and pop-ups

9
00:00:43.130 --> 00:00:49.550
but another problem was that you had to write very different scripts for different browsers.

10
00:00:49.550 --> 00:00:54.690
In late 1996, people saw that this fragmentation could be a problem

11
00:00:54.830 --> 00:01:01.940
and therefore, Javascript the language was submitted to the ECMA committee to start standardization.

12
00:01:01.940 --> 00:01:07.420
This simply is an organization which will stand responsible for standardizing Javascript

13
00:01:07.460 --> 00:01:12.890
so that you have one standard which then could be implemented by multiple browsers. So then we had ongoing

14
00:01:12.890 --> 00:01:16.390
standardization efforts until 2005 roughly

15
00:01:16.460 --> 00:01:24.050
and Microsoft did really join the party, well we know how Microsoft was in the late 90s, early 2000s, ultimately

16
00:01:24.050 --> 00:01:26.710
they supported the standardized Javascript version.

17
00:01:26.780 --> 00:01:33.290
Still there were differences but we had a more common way of using Javascript.

18
00:01:33.320 --> 00:01:39.740
Now the efforts of standardization continue and we had huge progress until 2011 I'd say

19
00:01:39.980 --> 00:01:46.340
and Microsoft eventually joined forces and became part of the standardization process and of contributing

20
00:01:46.340 --> 00:01:51.380
to building that standard and adding new features because that's important.

21
00:01:51.410 --> 00:01:53.400
My timeline ends here, the

22
00:01:53.500 --> 00:01:56.480
development of Javascript absolutely does not,

23
00:01:56.480 --> 00:02:04.070
I would say especially since 2010, 11, it really picked up and it is under active development.

24
00:02:04.130 --> 00:02:07.100
It's evolving, new features are getting added,

25
00:02:07.100 --> 00:02:14.480
it's getting a better and better programming language and whilst it was quite clunky around 2006 and 7

26
00:02:14.480 --> 00:02:21.480
and despite standardization, every browser still did its own thing in some regards.

27
00:02:21.770 --> 00:02:30.050
We nowadays really have a uniform language with some small differences but mainly one core language

28
00:02:30.350 --> 00:02:35.660
we can use in different browsers. Still different browsers have their own features you can then use

29
00:02:35.660 --> 00:02:37.990
but the core language is the same

30
00:02:38.060 --> 00:02:44.480
and in the browser support module later in the course, I'll explain how you find out which differences

31
00:02:44.510 --> 00:02:47.140
we still have and how you work around them.

32
00:02:47.240 --> 00:02:53.870
But in the end, we now have a standardized language which is really great to use and we have that thanks

33
00:02:53.870 --> 00:02:57.100
to this ECMA international organization.

34
00:02:57.110 --> 00:03:03.140
Now this organization in the end manages a language called ECMAScript but ECMAScript and Javascript

35
00:03:03.140 --> 00:03:12.020
actually have a strong relation. ECMAScript is the actual language which is evolved by the ECMA international

36
00:03:12.020 --> 00:03:17.700
organization but ECMAScript is then implemented as Javascript by browser vendors,

37
00:03:17.720 --> 00:03:23.840
so by the companies working on the browsers. So it is the most famous ECMAScript implementation, Javascript

38
00:03:23.900 --> 00:03:29.270
is that most famous ECMAScript implementation, others would be ActionScript or Jscript and you don't really

39
00:03:29.270 --> 00:03:31.790
need to know those. So Javascript in

40
00:03:31.800 --> 00:03:37.280
the end is ECMAScript we could say and we have that organization that evolves ECMAScript and with

41
00:03:37.280 --> 00:03:46.940
every new standard version you could say which is the end then created and finalized, browser vendors

42
00:03:46.940 --> 00:03:52.880
take that and implement it into browsers. So ECMAScript itself isn't directly used but browser vendors

43
00:03:52.990 --> 00:03:59.900
implement it into their Javascript engines. Each browser comes with its own Javascript engine though and therefore

44
00:04:00.020 --> 00:04:06.110
it's each browser and the engine used by the browser which defines which exact features are supported

45
00:04:06.770 --> 00:04:13.480
and actually browsers also sometimes implement certain features at an earlier point of time than they're

46
00:04:13.520 --> 00:04:16.250
really finalized in ECMAScript.

47
00:04:16.280 --> 00:04:22.790
So whilst discussions might still be going on over final implementation details, browser vendors could

48
00:04:22.820 --> 00:04:28.580
already go ahead and implement a certain feature in their engine already so that you can already use

49
00:04:28.790 --> 00:04:35.360
next generation Javascript code earlier in one browser than in the other and that's also something I'll

50
00:04:35.360 --> 00:04:41.450
come back to in the browser support module where you will learn how to use next-gen Javascript when

51
00:04:41.450 --> 00:04:49.780
writing your code and still ensuring that it runs in all browsers. So ECMAScript is under active development

52
00:04:49.810 --> 00:04:57.190
and browser vendors are contributing there as well, are shaping how Javascript looks like and which new

53
00:04:57.190 --> 00:05:03.220
features we want there and therefore Javascript is under active development and therefore it's an always

54
00:05:03.220 --> 00:05:04.610
evolving language.

55
00:05:04.630 --> 00:05:11.980
Now in this course, you will learn Javascript in the most modern way you can, using all the latest modern

56
00:05:11.980 --> 00:05:13.000
syntax

57
00:05:13.060 --> 00:05:23.080
and this is important because in 2015, 2016, Javascript saw a major overhaul, a brand new version you

58
00:05:23.080 --> 00:05:30.520
could almost say with a lot of important changes and many many tutorials and courses actually teach

59
00:05:30.520 --> 00:05:36.880
you the old Javascript syntax which still works but which is not the most recent one and which has certain

60
00:05:36.880 --> 00:05:37.810
downsides

61
00:05:38.020 --> 00:05:44.770
and then they later switch to the modern syntax. In this course, you will learn the most modern syntax

62
00:05:44.770 --> 00:05:46.310
right from the start.

63
00:05:46.330 --> 00:05:51.250
I will also show you the older one because you will still see it in other tutorials and code snippets

64
00:05:51.250 --> 00:05:57.160
and you should be able to understand those but we start with the modern one and we stick to the modern

65
00:05:57.160 --> 00:06:01.240
one, so you learn all the latest Javascript in this course.
