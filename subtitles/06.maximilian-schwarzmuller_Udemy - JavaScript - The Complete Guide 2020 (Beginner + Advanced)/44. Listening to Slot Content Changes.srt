1
00:00:02,290 --> 00:00:10,720
Now with named slots explored let's dig a bit deeper into slots and let's see how we could actually

2
00:00:11,050 --> 00:00:16,210
get access to the content we pass in our slot in our code in a component.

3
00:00:16,250 --> 00:00:20,950
And with that I don't mean get access in the sense of render it what we do here automatically by simply

4
00:00:20,950 --> 00:00:22,090
using the slot.

5
00:00:22,090 --> 00:00:30,700
But what if we would need to kind of read our list of data or list of H2 nodes that gets passed into

6
00:00:30,700 --> 00:00:32,110
our slots.

7
00:00:32,110 --> 00:00:39,670
Now for that let me first of all show you something else after setting up my inner aged email template

8
00:00:39,670 --> 00:00:48,140
here so the next line after this statement basically I want to get access to all my slots and I'll stored

9
00:00:48,140 --> 00:00:49,540
them in a constant.

10
00:00:49,540 --> 00:00:55,890
And we can easily query for them on our schedule route with the query selector all method and then querying

11
00:00:55,890 --> 00:01:01,470
for the slot element because this is a normal H2 Caltech by which we can query of course.

12
00:01:01,470 --> 00:01:04,690
Now here we can access our slots.

13
00:01:04,740 --> 00:01:11,750
This will basically be an array or a node list of H2 male elements and we have two slots.

14
00:01:11,760 --> 00:01:13,800
The first one will be at index 0.

15
00:01:13,800 --> 00:01:15,810
The second one at index 1.

16
00:01:15,810 --> 00:01:19,290
Now let's say we want to have a look at our second slot.

17
00:01:19,320 --> 00:01:25,590
So the one with index one and then we can add an event listener here and the event 2 which we can listen

18
00:01:25,860 --> 00:01:31,540
is to slot change event and dad will be triggered whenever new content arrives.

19
00:01:31,710 --> 00:01:38,910
Which will happen at least once when our shadow Dom basically is used to render our component into the

20
00:01:38,910 --> 00:01:44,320
real Dom and we project the content we pass into our component into our slot.

21
00:01:44,340 --> 00:01:49,890
This will be the first time this triggers but then also if we would updated programmatically from outside

22
00:01:50,250 --> 00:01:56,190
and the content we pass in would change then slot change for this given slot would also trigger again

23
00:01:56,940 --> 00:02:03,420
and then this function which then triggers we get an event object and in here most importantly we'll

24
00:02:03,420 --> 00:02:07,950
be able to analyze the content that's inside of our slot.

25
00:02:07,950 --> 00:02:14,820
So here I will actually console dir their presence and object in the console which we can inspect instead

26
00:02:14,820 --> 00:02:21,900
of the HD female element console log with print and there I will print that slot.

27
00:02:21,930 --> 00:02:23,760
We're listening to.

28
00:02:23,760 --> 00:02:27,560
So now if I save this and I reload.

29
00:02:27,560 --> 00:02:33,040
You see we now have a slot output here and that gets printed by this line.

30
00:02:33,050 --> 00:02:38,430
So that means that the slot change event did indeed fire which it as I mentioned does when you rendered

31
00:02:38,430 --> 00:02:43,670
this component to the screen because that is when the slot here will be replaced with the projected

32
00:02:43,670 --> 00:02:45,770
content for the first time.

33
00:02:45,950 --> 00:02:53,990
And if we now have a look in the slot here we can see a couple of interesting elements but some very

34
00:02:53,990 --> 00:02:55,690
interesting data can be seen.

35
00:02:55,790 --> 00:03:00,910
If we call the assigned nodes method on our slot.

36
00:03:00,980 --> 00:03:02,510
So this is not a prop..

37
00:03:02,510 --> 00:03:04,060
This is a method.

38
00:03:04,520 --> 00:03:12,290
If we do that and we go back for a reload then we see an array of all the content that was projected

39
00:03:12,410 --> 00:03:14,150
into our slot.

40
00:03:14,150 --> 00:03:20,390
Now you might be wondering why we have four elements instead of just one paragraph tag.

41
00:03:20,630 --> 00:03:25,370
Reason for Dad simply is that the whitespace in front of the paragraph tag and after the paragraph tag

42
00:03:25,690 --> 00:03:32,010
all those treated as text in the end we have this paragraph tag we're interested in and if we would

43
00:03:33,170 --> 00:03:39,020
optimize our code here and basically write this all in line which is harder to read but gets rid of

44
00:03:39,020 --> 00:03:45,130
all the X's whitespace if we would do that here for our component in the HDL file then you would see

45
00:03:45,140 --> 00:03:50,930
we only have the paragraph element in there and this is now the paragraph Dom node which gets projected

46
00:03:51,020 --> 00:03:52,180
into our slot.

47
00:03:52,220 --> 00:03:55,980
So this is also not part of the shadow Dom but still of the light Dom.

48
00:03:56,010 --> 00:04:04,240
Just the content at which our slot points so to say now I do now restructure does again to make it easier

49
00:04:04,240 --> 00:04:04,800
to read.

50
00:04:04,870 --> 00:04:10,090
But now if a reload I get these four elements again but again it is the paragraph tag which we get in

51
00:04:10,090 --> 00:04:10,980
the end here.

52
00:04:11,110 --> 00:04:17,260
And if you ever need to get access to the content that is projected into your slot then this is how

53
00:04:17,260 --> 00:04:18,130
you can do it.

54
00:04:18,250 --> 00:04:25,830
You can use assigned nodes and as a little side note on the protected element you also find this assigned

55
00:04:25,840 --> 00:04:33,340
slot property year which you can on the other end used to find out into which slot this was projected.

56
00:04:33,640 --> 00:04:40,420
So this all is a maybe an interesting information depending on which kind of application you are writing.

57
00:04:40,510 --> 00:04:47,560
So slot change combined with assigned notes can be very helpful if you for example also have an application

58
00:04:47,830 --> 00:04:51,010
where the content in your slot might change at runtime too.

59
00:04:51,130 --> 00:04:56,500
So not just this initial change which we have here but also a change on the later point of time maybe

60
00:04:56,500 --> 00:05:02,110
because you loaded some data from the web and you want to change something in your modal when that is

61
00:05:02,110 --> 00:05:02,440
done.

62
00:05:03,070 --> 00:05:08,500
So this is just another thing I wanted to show you which can be helpful when you're working with slots.
