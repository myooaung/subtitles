1
00:00:02,430 --> 00:00:06,980
So the return statement is useful for getting data out of the function,

2
00:00:06,990 --> 00:00:11,250
there are a couple of important things to know about the return statement. For one,

3
00:00:11,340 --> 00:00:19,380
any code that you have thereafter, like this alert won't execute. You see my IDE even kind of grays it

4
00:00:19,380 --> 00:00:20,220
out a bit

5
00:00:20,220 --> 00:00:27,030
and indeed if I reload the screen, you'll see everything works but I never see that alert. In the developer

6
00:00:27,030 --> 00:00:31,790
tools, you'll also not see an error though because the app didn't crash,

7
00:00:31,800 --> 00:00:33,180
we don't have an error,

8
00:00:33,360 --> 00:00:40,700
the return statement just ends the function execution, which means code thereafter isn't executed.

9
00:00:41,190 --> 00:00:44,440
You by the way also can return nothing,

10
00:00:44,460 --> 00:00:50,670
you might wonder why you might want to do that, for this function it makes absolutely no sense but you

11
00:00:50,670 --> 00:00:57,150
will later encounter scenarios where a function does something, let's say it does some calculation and

12
00:00:57,150 --> 00:01:04,800
then sends that with a HTTP request to some server to store it there and then you want to quit

13
00:01:04,800 --> 00:01:11,070
function execution, maybe conditionally with something we'll dive into later, with an if statement which

14
00:01:11,070 --> 00:01:17,730
allows us to check for some condition and then exit the function if that condition is true and only

15
00:01:17,730 --> 00:01:19,370
continue if it is not true,

16
00:01:19,380 --> 00:01:25,260
so in such cases you could return from a function and you would return nothing just to cancel function

17
00:01:25,260 --> 00:01:26,840
execution. Here

18
00:01:26,880 --> 00:01:31,590
again, that doesn't make any sense because the function would be over after this line anyways

19
00:01:31,590 --> 00:01:37,710
but it's important to understand that return finishes the function execution, in case you had more code

20
00:01:37,710 --> 00:01:43,890
after this, which as mentioned only makes sense if you have some kind of conditional logic in your code.

21
00:01:43,890 --> 00:01:44,970
Right now we don't have that,

22
00:01:45,150 --> 00:01:47,060
so it makes no sense.

23
00:01:47,100 --> 00:01:52,360
You also must only have one return statement here or actually you could have a second one

24
00:01:52,440 --> 00:02:00,000
but because the function execution stops after the first one it finds, having a second one makes no sense.

25
00:02:00,150 --> 00:02:07,920
So it's not a technical error to have more than one but you can't return more than one thing here. If

26
00:02:07,920 --> 00:02:10,670
you need to return more than one piece of data

27
00:02:10,680 --> 00:02:13,530
actually, we'll find a solution for that later,

28
00:02:13,530 --> 00:02:19,050
for now we'll just use it like this but we'll dive into other data constructs which allow us to return

29
00:02:19,050 --> 00:02:22,260
or contain more than one piece of data later in this module.
