1
00:00:02,270 --> 00:00:08,570
So let's add an event listener here and this method as you already learned works such that as a first

2
00:00:08,600 --> 00:00:11,870
argument, you have a string with the event name

3
00:00:11,870 --> 00:00:17,670
and that's now basically the same name as we had here on the property but without the on at the beginning.

4
00:00:17,690 --> 00:00:26,120
So here we do have click and we als do have dbl click for double click or context menu for a right

5
00:00:26,120 --> 00:00:31,730
click and you see I'm getting autocompletion here and you should be getting this as well if I open my

6
00:00:32,150 --> 00:00:35,640
quotes here and here, I'm interested in a click.

7
00:00:35,840 --> 00:00:43,310
Then the second argument is the function that should be executed when this click occurs and there I want

8
00:00:43,310 --> 00:00:46,990
to point at my and for this, I'll bring back these two functions,

9
00:00:47,180 --> 00:00:50,440
I'll point at my button click handler here.

10
00:00:50,600 --> 00:00:56,210
Now again, you just point at it like this, don't execute it, just point at it like this

11
00:00:56,210 --> 00:01:00,340
and with that, we set up an event listener.

12
00:01:00,360 --> 00:01:04,290
Now if we reload and I click the button, we again get this alert

13
00:01:04,290 --> 00:01:07,120
but now with the most elegant way of doing this

14
00:01:07,380 --> 00:01:11,130
and now as I said, we can also remove this if we wanted to.

15
00:01:11,130 --> 00:01:18,150
So here, let's say after with the set timeout, after two seconds,

16
00:01:18,240 --> 00:01:19,890
second argument defines the duration,

17
00:01:20,460 --> 00:01:24,360
I want to execute this function and in this function, I want to remove an event listener,

18
00:01:24,360 --> 00:01:28,260
so basically after two seconds, this event listener should be removed

19
00:01:28,260 --> 00:01:33,930
and now you do remove an event listener by specifying the event for what you want to remove an event

20
00:01:33,930 --> 00:01:35,150
listener, click

21
00:01:35,280 --> 00:01:41,220
and then as a second argument, the function which you registered as an event listen and here it's super

22
00:01:41,370 --> 00:01:45,580
important that it's the exact same function object.

23
00:01:45,780 --> 00:01:50,280
I'll dive into a couple of pitfalls you could face with remove event listener in a second.

24
00:01:50,280 --> 00:01:55,770
This however should work and therefore now if you save that, you will see that if you reload and I click

25
00:01:55,770 --> 00:01:57,110
this right away, it works

26
00:01:57,120 --> 00:02:02,760
but if we wait for two seconds, now nothing happens because we now removed the event listener and that's

27
00:02:02,760 --> 00:02:07,890
a super powerful feature of add event listener, that you can get rid of the event listeners,

28
00:02:07,890 --> 00:02:10,290
so not only could you register more than one,

29
00:02:10,290 --> 00:02:16,220
you can also remove them if you need to. Now as I mentioned, remove event listener also has a couple of

30
00:02:16,250 --> 00:02:23,000
pitfalls which you can easily overlook or which you could not be aware of, especially if you're new to

31
00:02:23,000 --> 00:02:28,970
Javascript because as I mentioned, you remove an event listener not with some ID which would be returned

32
00:02:28,970 --> 00:02:34,400
by add event listener which you then could pass to remove event listener but by basically specifying

33
00:02:34,400 --> 00:02:39,460
the exact same listening setup as you have here for add event listener,

34
00:02:39,590 --> 00:02:45,170
so the same event name, same function. The event name, that's of course simple but the same function, that

35
00:02:45,170 --> 00:02:46,200
can be tricky.

36
00:02:46,310 --> 00:02:51,410
It works here but you could think that it also works if you pass an anonymous function here,

37
00:02:51,440 --> 00:03:00,750
so here anonymous function console log clicked. Now we could grab this function here and also use it

38
00:03:00,750 --> 00:03:02,000
here right.

39
00:03:02,010 --> 00:03:05,100
It's the same function, it does the exact same thing, right?

40
00:03:05,100 --> 00:03:11,510
However if I save this and I reload here, you'll see I can click this and I can click it forever,

41
00:03:11,530 --> 00:03:13,290
so this never seems to be removed,

42
00:03:13,290 --> 00:03:13,650
right,

43
00:03:13,640 --> 00:03:17,270
the two seconds passed and it still is clickable.

44
00:03:17,310 --> 00:03:19,580
The reason for that simply is that

45
00:03:19,980 --> 00:03:25,550
this here looks similar to us humans but technically, it's not the same function object,

46
00:03:25,560 --> 00:03:29,220
this creates a new function object and so does this.

47
00:03:29,220 --> 00:03:31,570
So these are two totally different objects

48
00:03:31,590 --> 00:03:38,790
and as you learned in the reference value lectures, if we would compare these two functions here with

49
00:03:38,820 --> 00:03:46,410
let's say an equal sign, if this would be possible, then this simply would not work because these are

50
00:03:46,410 --> 00:03:48,350
two totally different objects,

51
00:03:48,450 --> 00:03:50,260
so this does not work.

52
00:03:50,260 --> 00:03:56,550
Instead we have to make sure we store that function in a constant which then holds the address of this

53
00:03:56,550 --> 00:04:02,910
function object and we can here, when we use this approach, only use that same address and therefore the

54
00:04:02,910 --> 00:04:03,720
same function,

55
00:04:03,720 --> 00:04:08,640
so now this works. A similar pitfall is if you bind this,

56
00:04:08,640 --> 00:04:14,070
so if you bind this to bind the this keyword in a function or to pass in some arguments when this executes,

57
00:04:14,310 --> 00:04:16,800
something we also did throughout this course,

58
00:04:16,800 --> 00:04:19,500
now you might again think well this is similar,

59
00:04:19,560 --> 00:04:20,730
no it isn't,

60
00:04:20,730 --> 00:04:27,180
this is not similar, bind creates a new function object and therefore here we create a new function object

61
00:04:27,180 --> 00:04:29,330
and here we create a new function object,

62
00:04:29,430 --> 00:04:31,370
so this also will not work.

63
00:04:31,620 --> 00:04:37,980
If you want to bind this or any arguments that should be passed in and then eventually remove this later,

64
00:04:38,340 --> 00:04:44,520
you will have to store the bound function in a new constant like this

65
00:04:44,760 --> 00:04:49,730
so that again we have the address of this function object stored in here and then use this here,

66
00:04:49,740 --> 00:04:53,910
so that again we use the same function object. So this would work,

67
00:04:53,910 --> 00:04:55,980
the other approach would not work.

68
00:04:55,980 --> 00:05:02,010
So if we now reload this, you see I can click this initially but if you wait for two seconds now, nothing

69
00:05:02,010 --> 00:05:03,420
happens.

70
00:05:03,420 --> 00:05:08,730
So that's add event listener and remove event listener and some pitfalls you can face there which you

71
00:05:08,730 --> 00:05:11,490
just have to be aware of so that you can work around them.
