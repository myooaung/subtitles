WEBVTT
1
00:00:02.280 --> 00:00:03.950
And that's it for now.

2
00:00:03.960 --> 00:00:10.690
Now we're using webpack to bundle our files, to optimize them, to have a dev server. We're using ESLint

3
00:00:10.710 --> 00:00:17.070
to lint to our files and of course there, you can configure this to your requirements, to your needs

4
00:00:17.160 --> 00:00:22.860
with the help of the official docs also as I mentioned and we now therefore have a setup where we're

5
00:00:22.860 --> 00:00:29.370
able to write our code in a way that works well for us developers, in a way where we can split our code

6
00:00:29.370 --> 00:00:36.150
across multiple files and where we then still produce output which is optimized and which also is bundled

7
00:00:36.150 --> 00:00:43.710
together to minimize the amount of HttpRequests and still, features like this dynamic request for

8
00:00:43.710 --> 00:00:49.610
more here, for this tooltip.js file which is only needed eventually still works, so that all

9
00:00:49.610 --> 00:00:55.640
is supported by webpack, a very powerful tool therefore with which you of course can do more.

10
00:00:55.800 --> 00:00:59.950
The docs are very long and there's a lot you can tweak and manipulate there,

11
00:00:59.970 --> 00:01:04.320
so definitely dive into this documentation if you want to learn more about webpack and what you can

12
00:01:04.320 --> 00:01:05.210
configure there,

13
00:01:05.310 --> 00:01:11.220
you can fine tune it in a lot of different ways. Also one thing which we haven't done at all right

14
00:01:11.250 --> 00:01:19.230
now is we haven't used loaders in webpack. Loaders allow us to transform files and that allows us for

15
00:01:19.230 --> 00:01:27.780
example to use next gen Javascript features when we write our code and still produce code that does

16
00:01:27.780 --> 00:01:31.330
not use these features and works on older browsers as well

17
00:01:31.380 --> 00:01:37.350
and this is a pretty exciting technology or thing we'll explore in the browser support module.
