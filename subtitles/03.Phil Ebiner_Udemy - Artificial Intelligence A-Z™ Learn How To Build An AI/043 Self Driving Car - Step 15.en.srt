1
00:00:00,420 --> 00:00:02,490
Hello and welcome to this tutorial.

2
00:00:02,490 --> 00:00:06,930
All right so today we're going to make a function that will save or model that is that will save the

3
00:00:06,930 --> 00:00:11,420
brain of the car so that we can we use it whenever we quit the application.

4
00:00:11,430 --> 00:00:14,350
Thanks to the Save function will be able to save the model.

5
00:00:14,400 --> 00:00:19,470
Then quit the application and then when we go back to the application things to another function that

6
00:00:19,470 --> 00:00:24,720
is the load function which will make after this one we will be loading the last version of our model

7
00:00:24,720 --> 00:00:30,210
that was trained so that will be very practical and therefore let's make these two functions the same

8
00:00:30,210 --> 00:00:32,190
function and the load function.

9
00:00:32,190 --> 00:00:35,490
So let's start with the same function in this tutorial.

10
00:00:35,520 --> 00:00:42,830
So here comes the new def then save and then it's going to take one argument that it's going to be self.

11
00:00:43,140 --> 00:00:49,830
And the reason is that the thing we are going to say is not the whole model here but our neural network

12
00:00:50,160 --> 00:00:57,510
Selldorf model and our optimizer cells that optimize it because what we want to save is just the last

13
00:00:57,510 --> 00:01:03,740
weights that were dated at the last iteration because whenever we want to reuse our saved more later

14
00:01:03,990 --> 00:01:08,900
we wanted to bring the action to play with the weights that were already trained.

15
00:01:09,150 --> 00:01:11,310
So we need to take this last version of the weights.

16
00:01:11,520 --> 00:01:16,510
And also we need to take the last version of the optimizer because it is connected to these weights.

17
00:01:16,860 --> 00:01:17,970
So let's do this.

18
00:01:17,970 --> 00:01:24,330
We have our cells so we'll be able to take our That model in ourselves the optimizer and we will be

19
00:01:24,330 --> 00:01:28,800
saving these two objects in a Python dictionary and to save these two objects.

20
00:01:28,850 --> 00:01:32,460
We're going to use the same function from the torch module.

21
00:01:32,460 --> 00:01:40,620
So I'm starting here with torche that save and in parenthesis we are going to put that dictionary brackets

22
00:01:40,880 --> 00:01:41,690
in a dictionary.

23
00:01:41,680 --> 00:01:45,550
Bison works like that you have a key which is your identifier.

24
00:01:45,660 --> 00:01:46,650
So that's unique.

25
00:01:46,810 --> 00:01:49,840
And for each you have the value you want to get to that key.

26
00:01:49,890 --> 00:01:56,840
So it's like a mapping function from unique identifiers to a value you want to get these identifiers.

27
00:01:56,910 --> 00:02:03,990
If you take a simple dictionary book well the keys will be the words and the values will be the definitions

28
00:02:03,990 --> 00:02:04,690
of the words.

29
00:02:04,830 --> 00:02:10,830
Well here that's to say we're going to make two keys one key for the first object we want to save which

30
00:02:10,830 --> 00:02:13,750
is subduct model and one second before.

31
00:02:13,760 --> 00:02:19,770
The second thing we want to say that is our self that optimizer and therefore let's start with the first

32
00:02:19,770 --> 00:02:20,250
key.

33
00:02:20,430 --> 00:02:26,370
So we had to give a name to that key and I'm going to call it state on the score dict because then you're

34
00:02:26,370 --> 00:02:31,550
going to see them going to use the function say dict to save our model in the dictionary.

35
00:02:31,740 --> 00:02:38,020
So that's our first key then to give the value we want to attribute for that first key.

36
00:02:38,190 --> 00:02:44,130
Well as you can see I added a little con here and here I'm going to add the object the object I want

37
00:02:44,130 --> 00:02:44,790
to say.

38
00:02:45,000 --> 00:02:53,340
So the first object I want to say is self model so we can just copy this self to morrow and paste it

39
00:02:53,640 --> 00:02:56,240
as the value of our first key cell.

40
00:02:56,250 --> 00:03:00,490
Now then we add that state underscore dict.

41
00:03:00,510 --> 00:03:00,930
Here we go.

42
00:03:00,960 --> 00:03:01,820
The first one.

43
00:03:02,190 --> 00:03:07,430
And then we add in parenthesis and that will save the parameters of your model.

44
00:03:07,470 --> 00:03:09,670
In this first key state dict.

45
00:03:09,950 --> 00:03:12,330
And now let's say our optimizer.

46
00:03:12,360 --> 00:03:17,640
So we're going to add a second key in the dictionary and to do this we have here a comma.

47
00:03:17,640 --> 00:03:21,010
Then press enter and then we go with our second key.

48
00:03:21,270 --> 00:03:22,970
So the second key We're going to call it.

49
00:03:23,190 --> 00:03:30,480
Well we can call it optimizer then call in and then we just need to add the name of the object you want

50
00:03:30,480 --> 00:03:31,070
to save.

51
00:03:31,260 --> 00:03:33,390
And that is self.

52
00:03:33,390 --> 00:03:34,650
That is our optimizer.

53
00:03:34,800 --> 00:03:38,700
So we add here self that optimizer.

54
00:03:39,180 --> 00:03:45,080
And then again to set the parameters of this optimizer we are here again that state.

55
00:03:45,210 --> 00:03:53,310
And then we go we have our model saved with all the weight saved and our optimizer saves perfect and

56
00:03:53,310 --> 00:03:59,550
then we will save all this into a file and to do this I'm going to add a second argument to the Save

57
00:03:59,550 --> 00:04:06,810
function which is going to be the name of this file where we want to have our model in our optimizer

58
00:04:06,810 --> 00:04:07,470
set.

59
00:04:07,680 --> 00:04:13,050
So remember I should do a quick demo in the first section of this first module self-driving car.

60
00:04:13,140 --> 00:04:16,530
You know that was a demo where we just had some random actions.

61
00:04:16,580 --> 00:04:21,690
So that was not yet the self-driving car but then remember I clicked on the save button to save the

62
00:04:21,690 --> 00:04:28,530
model and this created the last brain that PCH found which is the file that contains the same version

63
00:04:28,530 --> 00:04:29,330
of your email.

64
00:04:29,520 --> 00:04:39,270
So I'm going to add here last underscore brain that age so that your moral and your optimizer will be

65
00:04:39,270 --> 00:04:41,790
saved into this created file.

66
00:04:41,790 --> 00:04:44,750
Let's bring that page so you don't have it yet.

67
00:04:44,850 --> 00:04:50,450
But as soon as you said your model on the application this file will be created thanks to this code

68
00:04:50,460 --> 00:04:51,370
we just added.

69
00:04:51,690 --> 00:04:52,220
All right.

70
00:04:52,260 --> 00:04:53,780
And so now perfect.

71
00:04:53,850 --> 00:04:59,430
We have a safe function that will save your model save the brain of your car by saving the weights and

72
00:04:59,440 --> 00:05:06,240
the optimizer of the new network that is in fact the brain of the car so perfect we now have only one

73
00:05:06,240 --> 00:05:08,250
function to create left.

74
00:05:08,250 --> 00:05:13,310
That's the load function and that's because the same function never goes without a load function.

75
00:05:13,350 --> 00:05:15,440
No there is no purpose saving your model.

76
00:05:15,510 --> 00:05:17,820
If you cannot load what you say afterwards.

77
00:05:17,820 --> 00:05:23,060
So that's the last step in our journey before the exciting demo and we will make this Sloat function.

78
00:05:23,130 --> 00:05:26,870
In the last two Toyota section so I'll see you in this next tutorial.

79
00:05:26,900 --> 00:05:28,470
And until then enjoy AI.
