WEBVTT
1
00:00:00.390 --> 00:00:02.710
Hello and welcome to the spice Intertoto.

2
00:00:03.000 --> 00:00:07.800
All right so in this new code section we are going to implement experience with play.

3
00:00:07.920 --> 00:00:13.850
So we're going to make a new class which we will call replay memory and that will implement experience

4
00:00:13.850 --> 00:00:16.700
to play exactly as you saw in the intuition lectures.

5
00:00:16.890 --> 00:00:21.540
But first let's give a quick reminder about what is experience replay.

6
00:00:21.540 --> 00:00:27.750
So you know all this artificial intelligence is based on Markov decision processes and Markov decision

7
00:00:27.750 --> 00:00:31.840
processes consist of looking at a series of events.

8
00:00:32.010 --> 00:00:38.770
So events are you know for example going from one state to the next state and tipis one.

9
00:00:39.060 --> 00:00:44.410
But if events were like that well since the next day it is very correlated to the current state.

10
00:00:44.550 --> 00:00:46.820
Well the network would not be doing very well.

11
00:00:46.980 --> 00:00:52.710
So for those coming from the deep learning course that's exactly the same as where we learned our time

12
00:00:52.710 --> 00:00:54.860
series with only one timestep.

13
00:00:55.020 --> 00:01:00.300
It was not learning anything because one timestep was not sufficient enough for a model to learn to

14
00:01:00.300 --> 00:01:03.070
understand long term correlations.

15
00:01:03.090 --> 00:01:07.060
So that's the same here and that's why we have to implement the experience replay.

16
00:01:07.230 --> 00:01:08.230
So how does it work.

17
00:01:08.340 --> 00:01:13.960
Well that's very simple instead of only considering the current state that is only one state at time

18
00:01:13.960 --> 00:01:14.640
t.

19
00:01:14.680 --> 00:01:16.830
We're going to consider more in the past.

20
00:01:16.830 --> 00:01:22.560
So exactly like for lithiums and therefore our series of events will not be as.

21
00:01:22.560 --> 00:01:27.450
And I suppose one this will be for example the one hundred states in the past.

22
00:01:27.450 --> 00:01:33.770
So as T-minus one hundred eighty minus 99 up to as minus 1 and then S-T.

23
00:01:34.020 --> 00:01:40.830
So in other words we put 100 less transitions into what we call the memory and that's why we have a

24
00:01:40.830 --> 00:01:47.040
long term memory as opposed to a short term memory or even should I say an instant memory and that makes

25
00:01:47.040 --> 00:01:49.950
the whole process work much better.

26
00:01:50.310 --> 00:01:57.690
And then once we create this memory of the last 100 events we will simple that it will take some random

27
00:01:57.690 --> 00:02:02.300
batches of these transitions to make our next update.

28
00:02:02.310 --> 00:02:09.270
That is our next move by selecting the next section and therefore in this replay memory class that we're

29
00:02:09.270 --> 00:02:13.450
implementing for experience replay we will make three functions.

30
00:02:13.530 --> 00:02:17.490
First of all the function as usual that's the case for any class.

31
00:02:17.520 --> 00:02:23.400
And so in this function we will define the variables that will be attached to the future instances of

32
00:02:23.400 --> 00:02:27.210
the class that is the future objects that will be created from this class.

33
00:02:27.540 --> 00:02:32.790
And so very simply these variables will be the memory of the 100 transitions to 100 events.

34
00:02:32.970 --> 00:02:38.790
And the capacity that is the 100 number you will be welcome to try a longer memory by increasing the

35
00:02:38.790 --> 00:02:39.550
capacity.

36
00:02:39.780 --> 00:02:46.170
So that's the first function in it function and then we'll make two other functions one push function

37
00:02:46.500 --> 00:02:51.050
to make sure that the memory doesn't ever contain more than 100 transitions.

38
00:02:51.180 --> 00:02:57.150
And for this we'll use the capacity by just doing one simple condition and then eventually we will make

39
00:02:57.360 --> 00:03:03.300
the simple function and that will be of course to sample some transitions in this memory of the last

40
00:03:03.390 --> 00:03:05.060
100 transitions.

41
00:03:05.520 --> 00:03:08.440
All right so let's start by introducing the class.

42
00:03:08.520 --> 00:03:17.460
So as you know we start with class and then we give them to the class we call it replay memory and then

43
00:03:17.460 --> 00:03:25.500
in parenthesis we input object then Cullin and then we go we start with the first function.

44
00:03:25.560 --> 00:03:26.860
The end is function.

45
00:03:27.150 --> 00:03:30.730
So that's exactly the same as before we start with death.

46
00:03:30.870 --> 00:03:36.750
Then two underscores in it two underscores again and then the variables.

47
00:03:36.750 --> 00:03:42.750
So there is of course self which is the variable attached to the future instances of the class of future

48
00:03:42.750 --> 00:03:48.810
objects and then we're going to have another variable for you to be able to try some other experience

49
00:03:48.810 --> 00:03:52.950
with some of the memories and that's going to be the capacity.

50
00:03:52.950 --> 00:03:58.020
So this capacity will simply be the number one hundred because we're going to make experience to play

51
00:03:58.020 --> 00:04:00.960
with the one hundred less transitions.

52
00:04:00.960 --> 00:04:03.910
All right and then Collon And here we go.

53
00:04:03.930 --> 00:04:10.430
Let's go inside the function and let's define the variables of our replay memory object.

54
00:04:10.440 --> 00:04:19.400
So the first one will be self taught capacity and as you probably understood this will be the capacity

55
00:04:19.670 --> 00:04:24.690
that is the maximum number of transitions we want to have in our memory of events.

56
00:04:24.830 --> 00:04:30.980
And this will be equal to the arguments who will input when creating an object of the replay memory

57
00:04:31.000 --> 00:04:34.530
class and therefore that is capacity.

58
00:04:34.550 --> 00:04:36.480
That's the argument of the init function.

59
00:04:36.660 --> 00:04:38.180
So capacity.

60
00:04:38.180 --> 00:04:44.960
So again not to be confused self that capacity is the name of the variable that is attached to the object

61
00:04:45.470 --> 00:04:52.670
and capacity here is the argument who will input when creating an object of the replay memory class.

62
00:04:52.810 --> 00:04:53.620
All right.

63
00:04:53.830 --> 00:04:55.880
And then we have a second voivode.

64
00:04:56.170 --> 00:04:57.890
That's of course the memory.

65
00:04:58.000 --> 00:05:01.620
So self taught Nemec.

66
00:05:01.760 --> 00:05:02.650
All right.

67
00:05:02.800 --> 00:05:05.730
And so what will this memory Voivode be to.

68
00:05:05.990 --> 00:05:13.950
Well this memory is supposed to contain the last 100 events and therefore this should be a simple test.

69
00:05:14.100 --> 00:05:20.300
You know a list which will contain the last 100 events the last 100 transitions and to initialize the

70
00:05:20.300 --> 00:05:20.850
list.

71
00:05:20.870 --> 00:05:24.620
There is nothing more simple we just add some brackets like that.

72
00:05:24.740 --> 00:05:26.040
And here we go.

73
00:05:26.060 --> 00:05:31.490
Our memory is initialized so of course at the beginning of the experiment or more precisely the beginning

74
00:05:31.490 --> 00:05:36.430
of the exploration the memory will be an empty list and then we will put the transitions.

75
00:05:36.500 --> 00:05:38.350
Each time we reach a future state.

76
00:05:38.600 --> 00:05:43.370
And speaking of that that's exactly what we will do with the next function that we're going to call

77
00:05:43.520 --> 00:05:44.720
the push function.

78
00:05:44.790 --> 00:05:51.380
We will make this push function to plant the events in this memory list and then we'll use the capacity

79
00:05:51.620 --> 00:05:57.170
to make sure that this memory list always contains 100 events and never more.

80
00:05:57.500 --> 00:05:59.660
All right so let's do this in the next as well.

81
00:05:59.690 --> 00:06:01.250
And until then I.
