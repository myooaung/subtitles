WEBVTT
0
1
00:00:01.140 --> 00:00:01.850
Hi.
1

2
00:00:01.860 --> 00:00:02.970
So let's continue.
2

3
00:00:03.270 --> 00:00:06.210
So let me click on this view service.
3

4
00:00:07.770 --> 00:00:11.880
And this is the name of my cluster which is active.
4

5
00:00:12.090 --> 00:00:13.370
So this is the task.
5

6
00:00:13.380 --> 00:00:18.430
So task is to execute your Docker image as a container.
6

7
00:00:18.450 --> 00:00:25.560
Just keep in mind, suppose you have an application and for that application you have created the Docker
7

8
00:00:25.560 --> 00:00:26.080
image.
8

9
00:00:26.100 --> 00:00:28.310
Now you want to execute that image.
9

10
00:00:28.320 --> 00:00:31.230
So to execute the image, you need a container.
10

11
00:00:31.380 --> 00:00:36.270
So for defining the container or its attributes, you need the task definition.
11

12
00:00:36.660 --> 00:00:41.070
Service type it's a replica and launch type is Fargate.
12

13
00:00:41.110 --> 00:00:43.110
Fargate means it is going to manage.
13

14
00:00:43.110 --> 00:00:48.240
By the AWS, you can see that it has already created the service role by default.
14

15
00:00:48.270 --> 00:00:50.640
AWS service role for ECS.
15

16
00:00:51.030 --> 00:00:52.770
So this is the details.
16

17
00:00:52.770 --> 00:01:02.940
The next is task and this is my task which we have created, and this task is managing by this nginx
17

18
00:01:02.940 --> 00:01:06.870
Service, Okay and the next is events.
18

19
00:01:06.990 --> 00:01:12.210
So here it has provided each and everything how this cluster has been created.
19

20
00:01:12.210 --> 00:01:17.220
You can click on any of the events and you can check the details auto scaling.
20

21
00:01:17.250 --> 00:01:22.800
As of now, we have not defined anything about the auto scaling that we'll understand in the letter
21

22
00:01:22.800 --> 00:01:24.900
lectures, deployments.
22

23
00:01:24.900 --> 00:01:28.530
So once you will create the cluster, it will create one deployment.
23

24
00:01:28.530 --> 00:01:32.610
Let me show you this one deployment ID.
24

25
00:01:32.640 --> 00:01:36.630
This is the primary desired count and running count.
25

26
00:01:36.990 --> 00:01:42.210
So it means that you have one task which is running the state metrics.
26

27
00:01:42.750 --> 00:01:47.190
So here you can see the metrics, the CPU utilization, the memory utilization.
27

28
00:01:48.180 --> 00:01:51.090
Tags So we have not defined any tags.
28

29
00:01:51.120 --> 00:01:56.430
The next is logs, so you can check the logs as well for the troubleshooting point of view.
29

30
00:01:58.170 --> 00:02:06.300
So let me come back here on this cluster demo and this is my service task.
30

31
00:02:07.620 --> 00:02:10.820
So if will click on the task, it will provide you an IP.
31

32
00:02:10.830 --> 00:02:19.740
So here you can see this is my public IP and let me copy this one and let me put it here so you can see that
32

33
00:02:19.740 --> 00:02:23.790
my nginx application is running fine.
33

34
00:02:24.060 --> 00:02:31.050
So if will remember while we were creating the cluster at the very first step or we can say at the container
34

35
00:02:31.050 --> 00:02:38.130
definition, we have defined the nginx application and to execute that nginx application, we have
35

36
00:02:38.130 --> 00:02:39.330
created one task.
36

37
00:02:39.330 --> 00:02:48.780
So this is the task and this task has provided me the IP address or other attributes and I have just
37

38
00:02:48.780 --> 00:02:53.040
copied the IP and put it here and let me come back here.
38

39
00:02:54.330 --> 00:02:58.110
My task is active okay, so that's all for this lecture.
39

40
00:02:58.110 --> 00:03:02.220
In the next lecture, I will show you something more about the service.
