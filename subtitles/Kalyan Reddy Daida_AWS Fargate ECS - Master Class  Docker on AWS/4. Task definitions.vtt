WEBVTT
0
1
00:00:00.210 --> 00:00:04.440
In this lecture, I will discuss about the task definition.
1

2
00:00:04.650 --> 00:00:08.880
In the previous lecture also we had got an idea about the task.
2

3
00:00:09.120 --> 00:00:12.330
But in this lecture we'll understand task in detail.
3

4
00:00:13.170 --> 00:00:15.750
So let me click on task definitions.
4

5
00:00:16.380 --> 00:00:20.100
And this time I'm going to create a new task definition.
5

6
00:00:20.100 --> 00:00:27.780
So basically task definition specify the container information for your application, such as how many
6

7
00:00:27.780 --> 00:00:35.310
containers are the part of your task, what resources they will use, how they are linked together,
7

8
00:00:35.310 --> 00:00:38.010
and which host ports they will use.
8

9
00:00:38.280 --> 00:00:40.290
So let me create a new task.
9

10
00:00:42.230 --> 00:00:47.480
And once we'll have the task, I will add the task to my cluster.
10

11
00:00:47.480 --> 00:00:48.590
Fargate cluster.
11

12
00:00:49.040 --> 00:00:52.180
So here we have 3 options.
12

13
00:00:52.190 --> 00:00:58.310
So let me go with the Fargate only and click next.
13

14
00:01:04.200 --> 00:01:16.470
Task definition name I'm giving Fargate task demo new one.
14

15
00:01:18.860 --> 00:01:21.020
So the next is task role.
15

16
00:01:21.050 --> 00:01:26.360
So here you will see that one role is already created by your system.
16

17
00:01:26.480 --> 00:01:35.220
So you can choose this one and optional IAM role that task can use to make API request to authorized
17

18
00:01:35.270 --> 00:01:36.830
AWS services.
18

19
00:01:36.890 --> 00:01:45.380
Here the task is AWS service and this task wants to communicate with AWS ECR.
19

20
00:01:45.470 --> 00:01:50.660
So it needs some role, some policies, some privileges.
20

21
00:01:50.660 --> 00:01:52.940
So that's why we are creating this task.
21

22
00:01:52.970 --> 00:01:53.810
No worries.
22

23
00:01:53.810 --> 00:01:58.070
Once I will be completing this task, you can understand what is the meaning of this task role.
23

24
00:01:58.820 --> 00:02:01.380
And here we have chosen the Fargate.
24

25
00:02:01.400 --> 00:02:10.670
So that's why you will have only this AWS VPC network mode and that is going to be managed by the AWS and
25

26
00:02:10.820 --> 00:02:16.190
what operating system I will go with the Linux only and task execution IAM role.
26

27
00:02:16.310 --> 00:02:23.150
So here you can see the same role which I have mentioned above and the task size.
27

28
00:02:23.180 --> 00:02:25.520
So here you can choose the size.
28

29
00:02:25.520 --> 00:02:31.340
So I'm taking .5 GB and the CPU, I'm choosing this one.
29

30
00:02:31.340 --> 00:02:35.840
So basically you are going to create a container in the task.
30

31
00:02:35.840 --> 00:02:41.510
So how much size, how much resources you want to allocate to your container.
31

32
00:02:42.200 --> 00:02:48.710
So this is what you can define here and then you have an option for add container.
32

33
00:02:49.490 --> 00:02:53.930
So let me click on this container and here you have to define the container.
33

34
00:02:53.930 --> 00:02:59.150
So you container will be basically your Docker image where you have the Docker image.
34

35
00:02:59.150 --> 00:03:05.780
In simple words, we can say that your application team, they have developed some application and once
35

36
00:03:05.780 --> 00:03:10.610
they have developed the application, they have just created a Docker image of your application.
36

37
00:03:10.790 --> 00:03:15.560
Now you want to execute your Docker image as a container.
37

38
00:03:15.680 --> 00:03:17.750
So the next is container name.
38

39
00:03:17.750 --> 00:03:20.210
So in the container name you can give any name.
39

40
00:03:20.210 --> 00:03:23.030
Suppose I'm developing nginx.
40

41
00:03:25.110 --> 00:03:28.650
So you can give any name according to your requirement.
41

42
00:03:28.680 --> 00:03:30.300
Now the next is image.
42

43
00:03:30.570 --> 00:03:32.520
So where is your image?
43

44
00:03:32.530 --> 00:03:37.920
Suppose your image is in Docker Hub and you have to provide the link here.
44

45
00:03:38.280 --> 00:03:41.820
Suppose your image is in AWS ECR.
45

46
00:03:41.820 --> 00:03:45.870
So ECR is a repository where you can copy your image.
46

47
00:03:46.050 --> 00:03:53.310
So here you have to mention the image path and then you can add this container to this task.
47

48
00:03:53.610 --> 00:03:59.070
And then once the container has been added to the task, you can execute your task.
48

49
00:03:59.640 --> 00:04:02.730
So here we do not have any image for that.
49

50
00:04:02.730 --> 00:04:04.650
I have to create one image.
50

51
00:04:04.770 --> 00:04:06.810
So friends that's all for this lecture.
51

52
00:04:06.990 --> 00:04:14.580
In the next lecture, I will show you how we can upload your image to the AWS ECR.
52

53
00:04:14.610 --> 00:04:21.600
First, I'm going to create one application, and then I'm going to create a Docker image of that application.
53

54
00:04:21.600 --> 00:04:27.050
And then finally I'm going to push that Docker image to the AWS ECR.
54

55
00:04:27.330 --> 00:04:34.050
And once I will be uploading there, I will have the URL and the same URL I'm going to paste here.
55

56
00:04:34.080 --> 00:04:36.030
So that's all we'll see you in the next lecture.
