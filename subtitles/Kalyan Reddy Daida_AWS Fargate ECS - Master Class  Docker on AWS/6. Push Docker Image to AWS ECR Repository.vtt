WEBVTT
0
1
00:00:00.690 --> 00:00:01.920
So let's continue.
1

2
00:00:02.130 --> 00:00:07.440
So in the previous lecture, we had simply created a Docker image according to our application.
2

3
00:00:07.470 --> 00:00:11.310
Now, next step, we need to push this image to the repository.
3

4
00:00:11.490 --> 00:00:15.200
So here for testing purpose, I'm going to use ECR.
4

5
00:00:15.840 --> 00:00:21.930
So let me come back to my this AWS management console and search for ECR.
5

6
00:00:22.890 --> 00:00:24.810
So here we have this.
6

7
00:00:25.410 --> 00:00:26.970
Let me go to this ECS.
7

8
00:00:29.370 --> 00:00:31.050
Elastic Container service.
8

9
00:00:31.620 --> 00:00:36.250
And here we have an option for Amazon ECR repository.
9

10
00:00:36.270 --> 00:00:37.530
Just click on this one.
10

11
00:00:40.840 --> 00:00:43.990
And first, I'm going to create a repository.
11

12
00:00:45.590 --> 00:00:50.330
And this is my nginx App demo.
12

13
00:00:55.030 --> 00:00:57.070
I will go with all default options.
13

14
00:00:57.190 --> 00:00:58.540
Create repository.
14

15
00:00:59.710 --> 00:01:01.960
So this is my repository has been created.
15

16
00:01:02.140 --> 00:01:05.740
And inside this repository, as of now, there is no image.
16

17
00:01:05.890 --> 00:01:09.730
So just to push the image, just click on view push command.
17

18
00:01:10.090 --> 00:01:12.460
So it will provide you all the commands.
18

19
00:01:12.910 --> 00:01:15.350
So this is the copy.
19

20
00:01:15.370 --> 00:01:19.210
So just copy this command and paste on this machine.
20

21
00:01:19.810 --> 00:01:26.110
So here you can see I'm getting some authentication error because this machine or we can say this EC
21

22
00:01:26.110 --> 00:01:31.090
2 service, is trying to authenticate with AWS ECR.
22

23
00:01:31.120 --> 00:01:33.090
For that, we have to create a role.
23

24
00:01:33.100 --> 00:01:36.180
And in the role we have to define the policy.
24

25
00:01:36.190 --> 00:01:41.650
And once the role will be created, we have to align that role to this, EC2 instance.
25

26
00:01:41.680 --> 00:01:46.930
After that, your EC2 service will start communicating with the ECR.
26

27
00:01:47.860 --> 00:01:49.540
So how we can do that?
27

28
00:01:49.540 --> 00:01:52.360
So just go to this one.
28

29
00:01:52.780 --> 00:01:53.920
Let me close this one.
29

30
00:01:54.700 --> 00:01:55.690
AWS.
30

31
00:01:58.230 --> 00:01:59.040
Console.
31

32
00:02:07.170 --> 00:02:07.410
Here.
32

33
00:02:07.410 --> 00:02:08.880
I have to go to the IAM role.
33

34
00:02:12.970 --> 00:02:14.500
And then click on roles.
34

35
00:02:15.910 --> 00:02:21.530
And here you can see already having this ECR EC2 role.
35

36
00:02:21.550 --> 00:02:22.840
Just click on that.
36

37
00:02:23.680 --> 00:02:27.460
And here you have to add this policy.
37

38
00:02:27.460 --> 00:02:31.540
Amazon EC2 container registry, full access.
38

39
00:02:32.500 --> 00:02:39.970
And once you will create this role, just go to this is AWS EC2 instance.
39

40
00:02:43.950 --> 00:02:53.490
And such for this machine, the VM machine on which I have created this Docker image and click on this
40

41
00:02:53.760 --> 00:02:55.200
action before.
41

42
00:02:55.200 --> 00:03:06.270
Do that, just select your VM machine and go to this security and this modify IAM role and choose the
42

43
00:03:06.270 --> 00:03:06.630
role.
43

44
00:03:06.630 --> 00:03:13.920
So this role I want to assign to my this VM machine, now this VM machine would able to communicate
44

45
00:03:13.920 --> 00:03:17.430
to this Amazon ECR again, I'm going to fire the same command.
45

46
00:03:18.180 --> 00:03:20.760
You can see that login succeed okay.
46

47
00:03:21.390 --> 00:03:22.650
So this is the first step.
47

48
00:03:22.890 --> 00:03:26.520
Second step it is going to create an image.
48

49
00:03:26.640 --> 00:03:32.820
So we have already created image, but here it is saying that you need to create image.
49

50
00:03:32.820 --> 00:03:39.330
So basically it just required the Docker file, it will create the image.
50

51
00:03:39.330 --> 00:03:42.330
So let me copy this command.
51

52
00:03:46.170 --> 00:03:46.630
Okay.
52

53
00:03:47.880 --> 00:03:50.350
And you can see that the image has been created.
53

54
00:03:50.370 --> 00:03:53.130
Docker Image ls.
54

55
00:03:54.570 --> 00:03:54.920
Okay.
55

56
00:03:55.530 --> 00:03:56.190
Let me.
56

57
00:03:56.880 --> 00:03:58.410
So here, this is the image.
57

58
00:03:58.650 --> 00:04:03.060
So both the images are same either I can use this image or this image.
58

59
00:04:03.270 --> 00:04:10.230
So both the images have been created using the same Docker file and then after the build completes,
59

60
00:04:10.230 --> 00:04:13.780
tag your image so that you can push the image to this repository.
60

61
00:04:13.800 --> 00:04:15.150
So just copy this one.
61

62
00:04:18.450 --> 00:04:19.000
Paste.
62

63
00:04:19.620 --> 00:04:20.880
Now, let's see the tag.
63

64
00:04:24.530 --> 00:04:25.100
This one.
64

65
00:04:26.660 --> 00:04:28.490
And finally, you have to push.
65

66
00:04:30.110 --> 00:04:32.540
Just copy all the commands and paste one by one.
66

67
00:04:33.770 --> 00:04:39.260
Now it is just pushing the image from this VM to your AWS.
67

68
00:04:39.320 --> 00:04:40.370
ECR.
68

69
00:04:42.970 --> 00:04:43.650
That's done.
69

70
00:04:43.660 --> 00:04:47.770
Let me come back and refresh it.
70

71
00:04:49.000 --> 00:04:54.130
You can see we have this image and we have this URL as well.
71

72
00:04:54.130 --> 00:04:59.680
So you just need to copy this URL and come back here and here you have to paste this URL.
72

73
00:05:00.130 --> 00:05:01.450
So that's all for this lecture.
73

74
00:05:01.450 --> 00:05:04.540
In the next lecture, I will complete this task.
