WEBVTT
0
1
00:00:00.510 --> 00:00:06.570
In this section, I'm going to discuss a very important topic that is application load balancer and
1

2
00:00:06.570 --> 00:00:10.200
how we can configured it in our ECS cluster.
2

3
00:00:10.470 --> 00:00:16.590
So first of all, we need to understand what exactly I am going to perform in the coming lab sessions.
3

4
00:00:16.860 --> 00:00:23.340
So here you can see in this ppt I have configured each and every thing and same I am going to perform
4

5
00:00:23.340 --> 00:00:25.140
in my coming lab sessions.
5

6
00:00:25.320 --> 00:00:32.130
So here we have an application load balancer and this application load balancer is placed in the public
6

7
00:00:32.130 --> 00:00:32.940
subnet.
7

8
00:00:33.060 --> 00:00:40.230
So we have one VPC in that VPC we have configured 2 private subnet and 2 public subnet.
8

9
00:00:40.680 --> 00:00:47.790
And while creating the cluster, we have defined 2 instances and also we have defined the private
9

10
00:00:47.790 --> 00:00:48.600
subnets.
10

11
00:00:48.600 --> 00:00:53.820
So my both of the instances of the cluster is running in the private subnets.
11

12
00:00:53.820 --> 00:00:56.880
So this is something we already understood in the previous lecture.
12

13
00:00:57.060 --> 00:01:01.200
And here I'm going to create an application load balancer.
13

14
00:01:01.440 --> 00:01:05.400
And also we have to configure the listener and target group.
14

15
00:01:05.400 --> 00:01:08.610
So once I will be doing the lab session, then you can easily understand.
15

16
00:01:08.880 --> 00:01:11.250
So let me try to explain with an example.
16

17
00:01:11.280 --> 00:01:22.140
Suppose I have developed nginx web application and for that I have created one task and now I
17

18
00:01:22.140 --> 00:01:29.310
want my this nginx application should be running on the instances and it should be running equally
18

19
00:01:29.310 --> 00:01:30.840
on both the instances.
19

20
00:01:30.930 --> 00:01:37.620
For example, I have chosen 4 containers for my this nginx web application.
20

21
00:01:37.920 --> 00:01:41.810
So what will happen here 2 container of nginx.
21

22
00:01:41.820 --> 00:01:48.180
Web application would be running on first instance, which is running on private subnet and another
22

23
00:01:48.180 --> 00:01:52.590
2 container would be running on another instance of private subnet.
23

24
00:01:52.830 --> 00:01:59.940
There is a user who is sitting on this my laptop now they want to access my and nginx web application.
24

25
00:01:59.940 --> 00:02:01.320
So what will happen here?
25

26
00:02:01.320 --> 00:02:07.320
We have configured the application load balancer, so the request first will come to the application
26

27
00:02:07.320 --> 00:02:08.280
load balancer.
27

28
00:02:08.460 --> 00:02:14.880
And here the application load balancer is going to is going to distribute the traffic among all the
28

29
00:02:14.880 --> 00:02:17.400
containers of nginx web application.
29

30
00:02:17.670 --> 00:02:24.090
So here, so 2 containers are running in this private subnet and 2 containers are running in another
30

31
00:02:24.090 --> 00:02:24.990
private subnet.
31

32
00:02:25.790 --> 00:02:30.420
So it is going to distribute the traffic among both of the containers.
32

33
00:02:30.440 --> 00:02:36.410
I will show you practically, because when I'm going to access the web application, it would be giving
33

34
00:02:36.410 --> 00:02:37.850
the nginx web page.
34

35
00:02:37.850 --> 00:02:44.090
But for testing purpose, I will do some changes so that when I'm going to refresh the page each time,
35

36
00:02:44.090 --> 00:02:49.460
it is going to give the new page so that you can understand the request is coming to first container
36

37
00:02:49.460 --> 00:02:52.560
than it is coming to second container, third and fourth.
37

38
00:02:52.580 --> 00:02:55.920
So this is the purpose of your application load balancer.
38

39
00:02:55.940 --> 00:02:56.720
So that's all.
39

40
00:02:56.720 --> 00:03:00.080
In the next lecture I will show you each and everything practically.
