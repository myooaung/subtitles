WEBVTT
0
1
00:00:00.360 --> 00:00:06.660
So in this lecture, I'm going to discuss few important terminologies which is required to understand
1

2
00:00:06.660 --> 00:00:08.550
this entire course module.
2

3
00:00:08.970 --> 00:00:17.790
The first one is your Amazon ECR, which is an image registry, or in simple words, it is an container
3

4
00:00:17.790 --> 00:00:19.560
image repository.
4

5
00:00:19.830 --> 00:00:26.460
So with the name you can understand it is a location where the different teams like application team
5

6
00:00:26.460 --> 00:00:30.310
or dv team, they can put their application as an image.
6

7
00:00:30.330 --> 00:00:38.400
So like this way we have a location where we can deploy our application as a Docker image or other
7

8
00:00:38.400 --> 00:00:39.310
image we can say.
8

9
00:00:39.810 --> 00:00:47.040
Suppose there is an application team and they have developed one application as per the requirement of
9

10
00:00:47.040 --> 00:00:47.760
the customer.
10

11
00:00:48.480 --> 00:00:52.320
Now they want to run their application.
11

12
00:00:52.560 --> 00:00:54.960
So what does it require to run the application?
12

13
00:00:54.990 --> 00:01:00.660
It requires an infrastructure where they can deploy their application.
13

14
00:01:00.810 --> 00:01:08.700
Suppose if they are using the Amazon ECS for the deployment of their application, it requires few important
14

15
00:01:08.700 --> 00:01:10.710
things like very first step.
15

16
00:01:10.860 --> 00:01:12.330
With the help of Docker.
16

17
00:01:12.360 --> 00:01:15.760
You have to create the Docker image of your application.
17

18
00:01:15.780 --> 00:01:19.650
Your application team has already developed the application.
18

19
00:01:20.010 --> 00:01:28.890
Now they want to deploy their application with the help of Amazon ECS because Amazon ECS or Amazon EKS, these
19

20
00:01:28.890 --> 00:01:36.300
are the orchestration tools, but directly you are not supposed to run your application into these services.
20

21
00:01:36.600 --> 00:01:41.430
For that, you have to create the Docker image of your application.
21

22
00:01:41.610 --> 00:01:49.150
So with the help of Docker or Docker file, you are going to create the Docker image of your application.
22

23
00:01:49.170 --> 00:01:54.420
Now the application team is having the Docker image of their application.
23

24
00:01:54.810 --> 00:02:01.980
Next step, they need some repository where they can push their Docker file of their application.
24

25
00:02:01.980 --> 00:02:07.590
For that, they're going to use the Amazon ECR, which is an image registry.
25

26
00:02:07.950 --> 00:02:12.990
Now they have pushed their Docker image into the Amazon ECR.
26

27
00:02:13.170 --> 00:02:15.380
Now next is your orchestration tool.
27

28
00:02:15.390 --> 00:02:16.990
So here we have 2 models.
28

29
00:02:17.010 --> 00:02:22.670
The first one is your Amazon ECS and the second one is your Amazon EKS.
29

30
00:02:22.680 --> 00:02:25.710
So basically EKS is for the Kubernetes.
30

31
00:02:25.800 --> 00:02:30.510
For this entire course module, we are going to focus on the Amazon ECS.
31

32
00:02:30.510 --> 00:02:38.130
So basically it's an orchestration tool for deployment of your application scheduling, scaling and management.
32

33
00:02:38.370 --> 00:02:40.890
For that, we are going to use the ECS.
33

34
00:02:41.070 --> 00:02:49.110
Now you have the Docker image of your application which is available on the Amazon ECR.
34

35
00:02:49.140 --> 00:02:52.710
Next is you are going to use the Amazon ECS.
35

36
00:02:52.710 --> 00:02:59.510
So when you are going to use the Amazon ECS, at that time, you have 2 models to select the cluster.
36

37
00:02:59.520 --> 00:03:06.090
So basically there are 2 models that you can use to run your containers with the help of Amazon ECS.
37

38
00:03:06.270 --> 00:03:11.610
So very first step, you are going to create a cluster with the help of Amazon ECS.
38

39
00:03:11.790 --> 00:03:15.260
So while creating the cluster, you have 2 options.
39

40
00:03:15.270 --> 00:03:20.580
The first one is your AWS Fargate, and the second one is Amazon EC2.
40

41
00:03:20.730 --> 00:03:22.170
So what is AWS fargate.
41

42
00:03:22.320 --> 00:03:30.600
So basically this is a serverless pay as you go an option, you can run containers without needing to
42

43
00:03:30.600 --> 00:03:32.220
manage your infrastructure.
43

44
00:03:32.370 --> 00:03:38.460
So if you are going to use the AWS Fargate so your Amazon is going to create a cluster for you.
44

45
00:03:38.460 --> 00:03:44.130
In simple words, it will provide you one infrastructure where you can run your cluster.
45

46
00:03:44.370 --> 00:03:52.410
And the infrastructure is completely it's a serverless or it will be managed by the AWS as a
46

47
00:03:52.410 --> 00:03:53.280
customer.
47

48
00:03:53.280 --> 00:03:56.100
You need not to worry about the infrastructure.
48

49
00:03:56.370 --> 00:03:58.740
The second one is your Amazon EC2.
49

50
00:03:58.860 --> 00:04:06.540
So basically here configure and deploy EC2 instances in your cluster to run your containers.
50

51
00:04:06.540 --> 00:04:13.320
So if you are going to choose the Amazon EC2,  so as a customer you have all the options to go inside
51

52
00:04:13.320 --> 00:04:17.520
the EC2 instance and you can manage those instances.
52

53
00:04:17.790 --> 00:04:18.750
So no worries.
53

54
00:04:18.750 --> 00:04:22.500
Once I will be doing the lab session, you can understand more on that.
54

55
00:04:22.500 --> 00:04:29.220
So as of now, just keep in mind that while creating the Amazon ECS cluster at that time, you have 2.
55

56
00:04:29.220 --> 00:04:30.000
options.
56

57
00:04:30.090 --> 00:04:33.660
Either you can go with the AWS Fargate or Amazon EC2.
57

58
00:04:34.530 --> 00:04:43.920
So basically ECS is the easiest way to deploy and manage your containers and integration with entire platform.
58

59
00:04:43.920 --> 00:04:53.010
So if you are going to create the ECS infrastructure, you have integrated a lot of services like application
59

60
00:04:53.010 --> 00:04:54.090
load balancer.
60

61
00:04:54.090 --> 00:04:55.200
Auto scaling.
61

62
00:04:55.200 --> 00:04:56.760
Batch elastic.
62

63
00:04:56.760 --> 00:04:58.380
Beanstalk Cloud.
63

64
00:04:58.380 --> 00:04:59.640
Formation, CloudTrail.
64

65
00:05:00.710 --> 00:05:03.380
Cloud Watch events, So lot of things you can see that.
65

66
00:05:03.380 --> 00:05:04.610
So these are the benefits.
66

67
00:05:04.610 --> 00:05:11.510
If you're going to choose the infrastructure of the ECS to deploy your containers, you can also scale
67

68
00:05:11.510 --> 00:05:21.170
to support cluster of any size service integration like your ALB and NLB are at container labels.
68

69
00:05:21.440 --> 00:05:22.790
So that's all for this lecture.
69

70
00:05:22.790 --> 00:05:28.220
In the next lecture, we'll understand about the model of the cluster that we have and details.
