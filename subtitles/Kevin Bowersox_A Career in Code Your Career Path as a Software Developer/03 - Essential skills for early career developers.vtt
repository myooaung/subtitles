WEBVTT
1
00:00:00.005 --> 00:00:03.001
- After you've settled into your new position

2
00:00:03.001 --> 00:00:06.002
and are starting to feel more comfortable in the role,

3
00:00:06.002 --> 00:00:09.004
it's a good time to do an inventory of your skills

4
00:00:09.004 --> 00:00:12.006
to find areas you can further develop.

5
00:00:12.006 --> 00:00:16.002
Let's do a quick benchmark of where you should generally be

6
00:00:16.002 --> 00:00:18.007
at this point in your career.

7
00:00:18.007 --> 00:00:22.000
For this, I'm going to assume that in your new position

8
00:00:22.000 --> 00:00:24.008
you're working full stack or specialized

9
00:00:24.008 --> 00:00:27.000
on either the front-end or the back-end

10
00:00:27.000 --> 00:00:29.004
of a web application.

11
00:00:29.004 --> 00:00:32.002
Let's start first with the front-end.

12
00:00:32.002 --> 00:00:34.007
At this point, you should be fairly confident

13
00:00:34.007 --> 00:00:37.004
when using the basic web technologies

14
00:00:37.004 --> 00:00:39.008
and starting to deepen your understanding

15
00:00:39.008 --> 00:00:42.001
of single page application frameworks,

16
00:00:42.001 --> 00:00:45.005
like Angular or React.

17
00:00:45.005 --> 00:00:49.000
You're likely to have been exposed to CSS frameworks

18
00:00:49.000 --> 00:00:53.000
like Bootstrap, at this point, which can help you develop

19
00:00:53.000 --> 00:00:55.000
responsive user interfaces

20
00:00:55.000 --> 00:00:58.004
that work across different devices.

21
00:00:58.004 --> 00:01:01.005
If you feel a little behind in any of these areas

22
00:01:01.005 --> 00:01:04.009
and you're using them quite frequently on the job,

23
00:01:04.009 --> 00:01:07.009
it's worth scheduling out some time to revisit them

24
00:01:07.009 --> 00:01:10.006
and deepen your understanding.

25
00:01:10.006 --> 00:01:14.000
Now let's turn our attention to the back-end.

26
00:01:14.000 --> 00:01:17.007
At this point, you should be solid on the basic features

27
00:01:17.007 --> 00:01:19.005
of the language you're working with

28
00:01:19.005 --> 00:01:22.005
and starting to write more sophisticated code

29
00:01:22.005 --> 00:01:26.007
that leverages object-oriented programming concepts.

30
00:01:26.007 --> 00:01:29.004
You should also be comfortable with modeling data

31
00:01:29.004 --> 00:01:34.003
and able to store and access it within relational databases.

32
00:01:34.003 --> 00:01:36.001
If you haven't encountered them,

33
00:01:36.001 --> 00:01:39.000
you'll want to explore different types of databases

34
00:01:39.000 --> 00:01:41.008
and object relational mapping frameworks

35
00:01:41.008 --> 00:01:44.007
that can make you more proficient.

36
00:01:44.007 --> 00:01:47.000
The same goes for back-end frameworks

37
00:01:47.000 --> 00:01:50.000
that can help you more quickly build out different features

38
00:01:50.000 --> 00:01:52.003
in your team's product.

39
00:01:52.003 --> 00:01:55.004
After a few months on the job, you'll start to recognize

40
00:01:55.004 --> 00:01:58.006
the value provided by other people's code,

41
00:01:58.006 --> 00:02:02.004
which is why frameworks are so important.

42
00:02:02.004 --> 00:02:06.002
Large systems are rarely self-contained and isolated.

43
00:02:06.002 --> 00:02:08.003
They need to interact and integrate

44
00:02:08.003 --> 00:02:11.009
with other systems in the organization.

45
00:02:11.009 --> 00:02:14.008
Most frameworks provide built-in modules

46
00:02:14.008 --> 00:02:17.009
to perform these integrations, and it's rare

47
00:02:17.009 --> 00:02:22.007
to write the low-level code that connects to systems.

48
00:02:22.007 --> 00:02:25.009
In modern system architectures, the most popular method

49
00:02:25.009 --> 00:02:30.004
of integrating two systems is via an API or service,

50
00:02:30.004 --> 00:02:33.007
so you'll want to get familiar with them.

51
00:02:33.007 --> 00:02:37.002
The key to understanding web APIs is to first learn

52
00:02:37.002 --> 00:02:41.000
about the HTTP protocol in depth.

53
00:02:41.000 --> 00:02:43.007
Early in my career, I made it a point to read

54
00:02:43.007 --> 00:02:47.001
the HTTP specification from end to end,

55
00:02:47.001 --> 00:02:50.009
and it still benefits me frequently.

56
00:02:50.009 --> 00:02:54.009
Some systems make use of other mechanisms like ETL,

57
00:02:54.009 --> 00:02:58.006
messaging, or file transfers to exchange information,

58
00:02:58.006 --> 00:03:01.004
depending upon the situation.

59
00:03:01.004 --> 00:03:04.007
It's another learning target to shoot for at this stage

60
00:03:04.007 --> 00:03:07.006
in your career, especially if they're used

61
00:03:07.006 --> 00:03:10.002
by the system you're working on.

62
00:03:10.002 --> 00:03:12.003
It's also really important to learn

63
00:03:12.003 --> 00:03:15.006
and follow security best practices.

64
00:03:15.006 --> 00:03:18.002
At a minimum, you'll need to understand

65
00:03:18.002 --> 00:03:19.009
how to write secure code

66
00:03:19.009 --> 00:03:23.006
that mitigates common system vulnerabilities.

67
00:03:23.006 --> 00:03:27.001
If this doesn't sound familiar to you, I recommend reading

68
00:03:27.001 --> 00:03:30.007
about the top 10 most common security vulnerabilities

69
00:03:30.007 --> 00:03:34.006
on the Open Web Application Security Projects website

70
00:03:34.006 --> 00:03:37.007
so you can learn how to prevent them.

71
00:03:37.007 --> 00:03:41.001
Becoming more proficient with your tools will be beneficial

72
00:03:41.001 --> 00:03:43.002
as you solidify your understanding

73
00:03:43.002 --> 00:03:45.009
of the technologies we discussed.

74
00:03:45.009 --> 00:03:49.005
Advancing your capabilities with the source control system

75
00:03:49.005 --> 00:03:51.006
will allow you to work independently

76
00:03:51.006 --> 00:03:55.007
when you need to fix a commit, or resolve a merge conflict,

77
00:03:55.007 --> 00:03:58.005
which is likely to occur now that you're working

78
00:03:58.005 --> 00:04:00.006
in a larger team.

79
00:04:00.006 --> 00:04:04.005
At this point in my career, I also invested heavily

80
00:04:04.005 --> 00:04:08.007
in learning how to work faster in the IDEs I was using

81
00:04:08.007 --> 00:04:10.009
by learning the shortcuts and templates

82
00:04:10.009 --> 00:04:14.002
that made it faster to write code.

83
00:04:14.002 --> 00:04:16.003
Although it can be a little intimidating,

84
00:04:16.003 --> 00:04:18.009
learning the basics of how to work with PowerShell

85
00:04:18.009 --> 00:04:22.004
and Bash via the command line will benefit you later

86
00:04:22.004 --> 00:04:26.005
in your career with other technologies like containers.

87
00:04:26.005 --> 00:04:29.005
Finally, you should be pairing with other developers

88
00:04:29.005 --> 00:04:32.005
to learn how your CICD system is used

89
00:04:32.005 --> 00:04:34.006
to release the team's product.

90
00:04:34.006 --> 00:04:37.003
Ask to look over the shoulder of a senior developer

91
00:04:37.003 --> 00:04:39.005
when they're performing the release procedures,

92
00:04:39.005 --> 00:04:42.001
and take notes, because one day,

93
00:04:42.001 --> 00:04:44.009
it will be your responsibility.

94
00:04:44.009 --> 00:04:46.006
So that's quite the list.

95
00:04:46.006 --> 00:04:49.003
And you may have noticed that I repeated a few items

96
00:04:49.003 --> 00:04:52.003
that we discussed earlier in the course.

97
00:04:52.003 --> 00:04:55.008
That's because no matter how much you work with a language,

98
00:04:55.008 --> 00:05:00.002
technology or tool, there's always something new to learn,

99
00:05:00.002 --> 00:05:03.000
and that's now a key part of your job.

