WEBVTT
1
00:00:00.005 --> 00:00:03.007
- Learning your first programming language is exciting,

2
00:00:03.007 --> 00:00:05.009
but a little overwhelming.

3
00:00:05.009 --> 00:00:08.008
It requires a lot of thought and experimentation

4
00:00:08.008 --> 00:00:13.007
to understand the new programming concepts you'll encounter.

5
00:00:13.007 --> 00:00:15.004
And at the same time,

6
00:00:15.004 --> 00:00:18.000
you'll be getting familiar with the specific roles

7
00:00:18.000 --> 00:00:20.001
for the language you're learning.

8
00:00:20.001 --> 00:00:22.005
It's not a perfect comparison,

9
00:00:22.005 --> 00:00:24.008
but it's very similar to when you first learned

10
00:00:24.008 --> 00:00:26.009
to read and write.

11
00:00:26.009 --> 00:00:28.008
You had to learn the alphabet

12
00:00:28.008 --> 00:00:31.008
and the different sounds each letter made.

13
00:00:31.008 --> 00:00:34.007
Then you could begin to put those letters together

14
00:00:34.007 --> 00:00:38.006
to create words which each had their own meaning.

15
00:00:38.006 --> 00:00:41.001
From there, you learned to build sentences,

16
00:00:41.001 --> 00:00:43.005
combine different words together,

17
00:00:43.005 --> 00:00:46.003
along with some punctuation and grammar rules

18
00:00:46.003 --> 00:00:50.003
to express things like statements or questions.

19
00:00:50.003 --> 00:00:52.003
Eventually, you advanced to writing

20
00:00:52.003 --> 00:00:56.005
full paragraphs and papers that organized many sentences

21
00:00:56.005 --> 00:00:58.004
to communicate multiple thoughts

22
00:00:58.004 --> 00:01:01.001
about a particular topic.

23
00:01:01.001 --> 00:01:04.000
At each step, you learned a new building block

24
00:01:04.000 --> 00:01:06.005
or feature of the English language,

25
00:01:06.005 --> 00:01:09.004
which allowed you to read and write larger,

26
00:01:09.004 --> 00:01:12.007
more complicated pieces of text.

27
00:01:12.007 --> 00:01:15.001
When you learn to code with programming languages,

28
00:01:15.001 --> 00:01:18.004
like JavaScript, Python, or Java,

29
00:01:18.004 --> 00:01:21.006
you'll go through a similar learning progression.

30
00:01:21.006 --> 00:01:24.003
That's because most programming languages

31
00:01:24.003 --> 00:01:26.009
are made up of similar building blocks

32
00:01:26.009 --> 00:01:30.000
and as you learn them, you'll be able to write

33
00:01:30.000 --> 00:01:33.002
more advanced pieces of code.

34
00:01:33.002 --> 00:01:37.005
Variables and data types are one of those building blocks.

35
00:01:37.005 --> 00:01:39.005
It's where most developers start

36
00:01:39.005 --> 00:01:41.002
when learning a new language,

37
00:01:41.002 --> 00:01:45.005
because they're sort of like the letters in the alphabet.

38
00:01:45.005 --> 00:01:48.008
Programmers use variables to store information,

39
00:01:48.008 --> 00:01:51.009
like a piece of text or a number.

40
00:01:51.009 --> 00:01:55.001
Each variable has a name and a data type,

41
00:01:55.001 --> 00:01:59.008
which is how we know the type of information that it stores.

42
00:01:59.008 --> 00:02:01.009
Along with text and numbers,

43
00:02:01.009 --> 00:02:04.009
most programming languages will include data types

44
00:02:04.009 --> 00:02:07.003
for other information, like dates,

45
00:02:07.003 --> 00:02:10.003
and different types of numbers and groups of values

46
00:02:10.003 --> 00:02:12.006
known as arrays.

47
00:02:12.006 --> 00:02:16.004
At this point, you'll also be introduced to operators,

48
00:02:16.004 --> 00:02:19.002
which are special symbols in the language

49
00:02:19.002 --> 00:02:21.003
that allow programmers to perform

50
00:02:21.003 --> 00:02:24.000
different actions on variables.

51
00:02:24.000 --> 00:02:25.007
You can can use these operators

52
00:02:25.007 --> 00:02:28.001
to assign a value to a variable,

53
00:02:28.001 --> 00:02:29.009
to compare two variables,

54
00:02:29.009 --> 00:02:32.004
or to perform arithmetic operations,

55
00:02:32.004 --> 00:02:35.002
like addition or subtraction.

56
00:02:35.002 --> 00:02:37.000
When learning these concepts,

57
00:02:37.000 --> 00:02:40.000
you'll arrange variables and other operators

58
00:02:40.000 --> 00:02:44.001
to form statements, which are kind of like sentences

59
00:02:44.001 --> 00:02:47.004
that tell the computer what to do.

60
00:02:47.004 --> 00:02:49.007
Each language will have specific rules

61
00:02:49.007 --> 00:02:52.000
for how the statements are structured.

62
00:02:52.000 --> 00:02:54.009
This is known as its syntax.

63
00:02:54.009 --> 00:02:57.009
A language's syntax includes special characters,

64
00:02:57.009 --> 00:03:00.006
like curly braces or semicolons,

65
00:03:00.006 --> 00:03:02.009
that form your code's structure.

66
00:03:02.009 --> 00:03:07.004
You can almost think of it like punctuation in a sentence.

67
00:03:07.004 --> 00:03:11.003
Syntax is what allows the code to be understood

68
00:03:11.003 --> 00:03:14.006
by either a compiler or an interpreter.

69
00:03:14.006 --> 00:03:16.004
These are special components

70
00:03:16.004 --> 00:03:21.001
built into programming languages that help run your code.

71
00:03:21.001 --> 00:03:25.002
Learning how to write correct syntax is very important,

72
00:03:25.002 --> 00:03:28.004
because a missing parenthesis or semicolon

73
00:03:28.004 --> 00:03:31.000
will cause these components to throw errors

74
00:03:31.000 --> 00:03:34.007
when you attempt to compile or run the code.

75
00:03:34.007 --> 00:03:39.002
In some cases, our code needs to change how it will execute.

76
00:03:39.002 --> 00:03:41.004
It's often not as simple as just

77
00:03:41.004 --> 00:03:44.005
running a bunch of statements one right after the other

78
00:03:44.005 --> 00:03:47.002
the same way every time.

79
00:03:47.002 --> 00:03:49.006
For situations where you need to change

80
00:03:49.006 --> 00:03:52.004
the flow of the code, you'll use what's known

81
00:03:52.004 --> 00:03:54.007
as a control structure.

82
00:03:54.007 --> 00:03:56.008
Programming languages will include

83
00:03:56.008 --> 00:03:59.003
several types of control structures

84
00:03:59.003 --> 00:04:01.007
and which one you choose will depend

85
00:04:01.007 --> 00:04:04.000
upon what you need to achieve.

86
00:04:04.000 --> 00:04:08.004
For example, if we need to ask a question in the code

87
00:04:08.004 --> 00:04:10.004
and then decide whether to execute

88
00:04:10.004 --> 00:04:14.006
one piece of code or another, depending upon the answer,

89
00:04:14.006 --> 00:04:18.004
we can use an if statement to make the decision.

90
00:04:18.004 --> 00:04:22.004
In other cases, you might need to run the same statement

91
00:04:22.004 --> 00:04:24.009
several times repeatedly.

92
00:04:24.009 --> 00:04:29.005
To do this, we use a control structure known as a loop.

93
00:04:29.005 --> 00:04:33.005
When running a loop, we normally have some sort of condition

94
00:04:33.005 --> 00:04:35.009
that tells the code when to stop iterating

95
00:04:35.009 --> 00:04:38.007
or repeating the statements.

96
00:04:38.007 --> 00:04:42.000
If you have a piece of code that you're using frequently,

97
00:04:42.000 --> 00:04:45.002
you can place it inside of a function.

98
00:04:45.002 --> 00:04:47.004
A function group statements together

99
00:04:47.004 --> 00:04:50.003
so that you can reuse them throughout your code

100
00:04:50.003 --> 00:04:54.005
without repeating them all over the place.

101
00:04:54.005 --> 00:04:58.000
Once you place a block of code inside of a function,

102
00:04:58.000 --> 00:05:00.004
other code can then just call the function

103
00:05:00.004 --> 00:05:04.005
when it needs to execute the same set of instructions.

104
00:05:04.005 --> 00:05:06.000
When we call a function,

105
00:05:06.000 --> 00:05:07.009
we can provide it with some information

106
00:05:07.009 --> 00:05:10.007
about what it needs to complete its work.

107
00:05:10.007 --> 00:05:14.000
These are known as arguments.

108
00:05:14.000 --> 00:05:17.000
If the function needs to return some information

109
00:05:17.000 --> 00:05:19.008
after it's executed its statements,

110
00:05:19.008 --> 00:05:23.005
it can return a value to the code that called it.

111
00:05:23.005 --> 00:05:26.009
These are known as the return value.

112
00:05:26.009 --> 00:05:29.004
These are the basics you'll want to focus on

113
00:05:29.004 --> 00:05:32.003
when learning your first programming language.

114
00:05:32.003 --> 00:05:35.000
After you learn them, it will become easier

115
00:05:35.000 --> 00:05:36.008
to learn your next language,

116
00:05:36.008 --> 00:05:39.000
because these same building blocks

117
00:05:39.000 --> 00:05:42.001
are found across all programming languages,

118
00:05:42.001 --> 00:05:44.008
although the syntax or the way they're written

119
00:05:44.008 --> 00:05:46.009
may vary a bit.

120
00:05:46.009 --> 00:05:50.000
Unfortunately, most of these will not apply

121
00:05:50.000 --> 00:05:52.003
to CSS and HTML,

122
00:05:52.003 --> 00:05:55.004
because they're different types of languages.

123
00:05:55.004 --> 00:05:59.000
I know, it's a lot to take in all at once.

124
00:05:59.000 --> 00:06:03.001
It's going to take time and require a bit of patience,

125
00:06:03.001 --> 00:06:06.005
just like when you first learn to read and write.

126
00:06:06.005 --> 00:06:08.002
But before you know it,

127
00:06:08.002 --> 00:06:10.006
you'll master these different concepts

128
00:06:10.006 --> 00:06:14.000
and will be writing your own application with ease.

