WEBVTT
1
00:00:00.005 --> 00:00:02.006
- No matter how dedicated you are

2
00:00:02.006 --> 00:00:04.007
to building out your skills,

3
00:00:04.007 --> 00:00:07.000
there will be tasks that pop up

4
00:00:07.000 --> 00:00:10.000
where you'll need to use a language feature, technique

5
00:00:10.000 --> 00:00:13.008
or technology you haven't encountered before.

6
00:00:13.008 --> 00:00:16.000
When these situations arise,

7
00:00:16.000 --> 00:00:18.005
you'll need to quickly build up these skills

8
00:00:18.005 --> 00:00:22.004
through some on-the-job learning to complete your work.

9
00:00:22.004 --> 00:00:24.004
One strategy to do that

10
00:00:24.004 --> 00:00:27.003
is to use an abbreviated cycle of the steps

11
00:00:27.003 --> 00:00:31.007
we discussed earlier when planning your learning activities.

12
00:00:31.007 --> 00:00:35.001
So let's say your task in the latest sprint requires you

13
00:00:35.001 --> 00:00:38.004
to query some data from a GraphQL API

14
00:00:38.004 --> 00:00:42.008
and you've never worked with this type of API before.

15
00:00:42.008 --> 00:00:45.009
First, you'll want to do a quick round of research

16
00:00:45.009 --> 00:00:50.000
to understand the concepts behind GraphQL.

17
00:00:50.000 --> 00:00:51.004
Through a quick search,

18
00:00:51.004 --> 00:00:55.001
you can find the GraphQL foundation's website,

19
00:00:55.001 --> 00:00:57.003
which contains a learning section

20
00:00:57.003 --> 00:01:01.003
that will teach you the basics of using GraphQL.

21
00:01:01.003 --> 00:01:05.007
Now let's imagine that your project uses Java.

22
00:01:05.007 --> 00:01:07.006
You might do a round of research

23
00:01:07.006 --> 00:01:10.007
to discover the GraphQL Java project

24
00:01:10.007 --> 00:01:15.003
that can help you interact with GraphQL APIs.

25
00:01:15.003 --> 00:01:17.009
It seems like a good fit for the situation,

26
00:01:17.009 --> 00:01:20.002
so you would invest a little more time

27
00:01:20.002 --> 00:01:24.000
in reading key parts of the manual for the project.

28
00:01:24.000 --> 00:01:27.005
Most developers despise reading the manual,

29
00:01:27.005 --> 00:01:31.005
but those who do often quickly become the expert

30
00:01:31.005 --> 00:01:34.002
on their team for that topic.

31
00:01:34.002 --> 00:01:38.001
So you've done your research and have a direction,

32
00:01:38.001 --> 00:01:40.006
now, as a quick exercise,

33
00:01:40.006 --> 00:01:43.002
you might build a small proof of concept

34
00:01:43.002 --> 00:01:45.007
that uses the GraphQL project

35
00:01:45.007 --> 00:01:49.009
to call the API that you need to interact with.

36
00:01:49.009 --> 00:01:53.000
Once you have the POC up and running,

37
00:01:53.000 --> 00:01:55.005
it's a good idea to walk through the approach

38
00:01:55.005 --> 00:01:59.006
with one of your teammates that has a bit of experience.

39
00:01:59.006 --> 00:02:01.006
They can provide you with feedback

40
00:02:01.006 --> 00:02:03.005
on how you intend to proceed

41
00:02:03.005 --> 00:02:06.008
or might point you towards other examples in the project

42
00:02:06.008 --> 00:02:11.005
of how this type of feature was handled in the past.

43
00:02:11.005 --> 00:02:14.001
Once you've decided upon a solution,

44
00:02:14.001 --> 00:02:16.003
it's just a matter of implementing it

45
00:02:16.003 --> 00:02:18.004
within your team's product.

46
00:02:18.004 --> 00:02:21.005
Similar to the project work you did early on

47
00:02:21.005 --> 00:02:24.002
when you started your developer journey,

48
00:02:24.002 --> 00:02:27.005
except now, you'll want to create some unit tests

49
00:02:27.005 --> 00:02:30.002
and you might even consider doing a second pass

50
00:02:30.002 --> 00:02:35.004
on your solution to refactor and improve its design.

51
00:02:35.004 --> 00:02:38.002
Even if you've decided to switch directions

52
00:02:38.002 --> 00:02:41.000
after receiving your teammates' feedback,

53
00:02:41.000 --> 00:02:44.000
you'll still benefit from having done some research

54
00:02:44.000 --> 00:02:47.009
and performing a few exercises independently.

55
00:02:47.009 --> 00:02:51.000
This is what I call the learning snowball.

56
00:02:51.000 --> 00:02:54.002
Sometimes your research and proof of concepts

57
00:02:54.002 --> 00:02:55.007
might take you down a path

58
00:02:55.007 --> 00:02:58.000
that doesn't apply to the exact problem

59
00:02:58.000 --> 00:03:01.008
you're looking to resolve at that very moment.

60
00:03:01.008 --> 00:03:06.000
Some might get frustrated or think this time is wasted,

61
00:03:06.000 --> 00:03:07.004
but in my career,

62
00:03:07.004 --> 00:03:10.005
I've found that those experiments and research

63
00:03:10.005 --> 00:03:12.003
come around to benefit you later

64
00:03:12.003 --> 00:03:15.003
when you solve other problems in the future,

65
00:03:15.003 --> 00:03:19.001
so it should be accepted as part of your work.

66
00:03:19.001 --> 00:03:22.000
Kind of like a snowball rolling down a hill,

67
00:03:22.000 --> 00:03:23.006
as your career goes on,

68
00:03:23.006 --> 00:03:26.001
you'll pick up and accumulate knowledge

69
00:03:26.001 --> 00:03:29.008
that expands your mental map of technical concepts

70
00:03:29.008 --> 00:03:32.005
and that's what will make you a stronger,

71
00:03:32.005 --> 00:03:35.000
more experienced developer.

