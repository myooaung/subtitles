WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.620
I know that we have our entity class ready.

00:00:02.620 --> 00:00:08.840
In order for me to create objects off this class and save the details into the database we

00:00:08.840 --> 00:00:14.980
need to create first something called Session Factory on this particular station factory is

00:00:14.980 --> 00:00:17.880
required in almost all the programs that we're gonna work.

00:00:17.880 --> 00:00:23.750
So what we'll do is we'll clear the utility class for updating efficient factory object.

00:00:23.750 --> 00:00:28.340
So I'm gonna rightly conscious entity package here and then say new class.

00:00:28.340 --> 00:00:32.400
But I want this to be a new package called Youkilis,

00:00:32.400 --> 00:00:34.510
and then I'm gonna call this s paper.

00:00:34.510 --> 00:00:34.940
Nate,

00:00:34.940 --> 00:00:35.510
you did.

00:00:35.510 --> 00:00:37.220
First center.

00:00:37.220 --> 00:00:41.150
A new class with the new package has been created.

00:00:41.150 --> 00:00:47.010
Let's go and clear a private static session factory believable,

00:00:47.010 --> 00:00:50.940
and they import the same.

00:00:50.940 --> 00:00:55.070
I'm gonna best command ship or and since there is no name conflict,

00:00:55.070 --> 00:00:57.710
it simply added the import statement over here.

00:00:57.710 --> 00:00:58.580
Now,

00:00:58.580 --> 00:01:04.200
the reason I made this is the private static is because we want this object to be a single

00:01:04.200 --> 00:01:06.940
done so that wherever I asked for a factory,

00:01:06.940 --> 00:01:09.910
it is going to check if the factory is initialized,

00:01:09.910 --> 00:01:11.030
it's gonna return the theme.

00:01:11.030 --> 00:01:12.750
But if it is not initialized,

00:01:12.750 --> 00:01:15.350
it's going to initialize one on Dender Done the same.

00:01:15.350 --> 00:01:19.140
So let's go and clear the public function toe.

00:01:19.140 --> 00:01:20.110
Do the job.

00:01:20.110 --> 00:01:21.280
I'm gonna say static.

00:01:21.280 --> 00:01:23.670
It returns a session factory.

00:01:23.670 --> 00:01:24.440
It's holidays.

00:01:24.440 --> 00:01:25.890
Get session Factory.

00:01:25.890 --> 00:01:29.510
I would say you're returned factory,

00:01:29.510 --> 00:01:31.000
but we also check.

00:01:31.000 --> 00:01:32.760
Has this been initialized?

00:01:32.760 --> 00:01:34.090
If it's not initialized,

00:01:34.090 --> 00:01:40.520
were initial is the same Someone say you're If factory equals toe know then we're gonna do

00:01:40.520 --> 00:01:41.450
the initialization.

00:01:41.450 --> 00:01:42.850
Remember,

00:01:42.850 --> 00:01:48.750
static variables have bean initialized by default with now a session factory represents a

00:01:48.750 --> 00:01:52.330
database and a session represented database connection.

00:01:52.330 --> 00:01:54.780
Since the session factory represents a db,

00:01:54.780 --> 00:01:57.700
we have passed the T B connectivity information.

00:01:57.700 --> 00:02:01.350
Let's create a properties object for the same.

00:02:01.350 --> 00:02:09.290
So we said properties tops people's to new properties on the properties is from Java Util

00:02:09.290 --> 00:02:15.700
sung Select the sea And there are few properties over here that they problem starts step

00:02:15.700 --> 00:02:16.490
property.

00:02:16.490 --> 00:02:21.720
The first property is about the driver someone they really got.

00:02:21.720 --> 00:02:23.970
Connection got driver.

00:02:23.970 --> 00:02:27.880
The value for that depends on the TV that you want to connect toe.

00:02:27.880 --> 00:02:30.460
Since I want to connect tow hitch to database,

00:02:30.460 --> 00:02:33.380
it's gonna be our circuits to dart driver.

00:02:33.380 --> 00:02:39.930
I'm gonna make a copy off this and change this to you are you are happens to be the GBC

00:02:39.930 --> 00:02:41.790
connection string that you want to use.

00:02:41.790 --> 00:02:43.630
And if you don't remember,

00:02:43.630 --> 00:02:46.070
you can go to the hits to console,

00:02:46.070 --> 00:02:49.470
and then you can copy the urine from here.

00:02:49.470 --> 00:02:50.750
So I'm gonna copy this,

00:02:50.750 --> 00:02:53.720
go back over here and replace this one.

00:02:53.720 --> 00:03:00.230
So I'm gonna make another copy of this based it on changes to user name on the user name

00:03:00.230 --> 00:03:03.190
for our DB is este in my case.

00:03:03.190 --> 00:03:07.560
And then there is a password that I have to give which is empty street.

00:03:07.560 --> 00:03:15.990
So that's this password on this is empty street hibernate converts all your job function

00:03:15.990 --> 00:03:18.450
calls into an appropriate SQL command.

00:03:18.450 --> 00:03:21.890
For this it makes you that something called dialect class.

00:03:21.890 --> 00:03:23.510
For most of the applications,

00:03:23.510 --> 00:03:25.870
this dialect loss is not necessary,

00:03:25.870 --> 00:03:28.960
but for very important complex queries.

00:03:28.960 --> 00:03:30.570
Without the dialect Hyman,

00:03:30.570 --> 00:03:32.340
it will not work and will throw another.

00:03:32.340 --> 00:03:40.150
So let's give this properly by taking trump starts set property off hibernated dialect.

00:03:40.150 --> 00:03:47.630
The value for this is our about hibernate dart dialect don't face to dialect.

00:03:47.630 --> 00:03:49.610
Now,

00:03:49.610 --> 00:03:52.060
if you want to see what other Daleks you have,

00:03:52.060 --> 00:03:53.440
you can press command.

00:03:53.440 --> 00:04:01.160
Shift duty on Mac control shifted D on windows are you can goto navigate open tape and then

00:04:01.160 --> 00:04:04.810
take dialect and you should see our hibernate dialect,

00:04:04.810 --> 00:04:06.510
which is an abstract last over here.

00:04:06.510 --> 00:04:10.850
If you select there and then press function key for four,

00:04:10.850 --> 00:04:16.320
you'll see that there is a bunch of classes that extend that Alec class on hitch to dialect

00:04:16.320 --> 00:04:16.990
is one of them.

00:04:16.990 --> 00:04:18.000
So if you want to work with,

00:04:18.000 --> 00:04:18.590
for example,

00:04:18.590 --> 00:04:19.350
my SQL,

00:04:19.350 --> 00:04:21.690
you'll see that there is a my SQL dialect.

00:04:21.690 --> 00:04:27.010
There is more specific question off the same my SQL Fight dialect and expand the same thing

00:04:27.010 --> 00:04:29.150
to see more and more features,

00:04:29.150 --> 00:04:30.480
which won't work with article.

00:04:30.480 --> 00:04:31.200
For example,

00:04:31.200 --> 00:04:33.690
there's an Article eight i dialect,

00:04:33.690 --> 00:04:34.700
Article nine.

00:04:34.700 --> 00:04:41.240
I'd elect then 10 g and then you have to Elsie Dialect also so likewise for Microsoft SQL

00:04:41.240 --> 00:04:41.740
Server.

00:04:41.740 --> 00:04:44.690
You'll see that there is an abstract transact SQL dialect.

00:04:44.690 --> 00:04:46.940
But if you expend that you see an excuse.

00:04:46.940 --> 00:04:47.850
There were dialect.

00:04:47.850 --> 00:04:54.570
There is an SQL Server 2005 and then 2008 and then you have here 2012 dialect.

00:04:54.570 --> 00:04:57.020
So let's come out off that now.

00:04:57.020 --> 00:05:02.470
Earlier I mentioned that hybrid can create the tables for you if the tables don't exist.

00:05:02.470 --> 00:05:10.660
So I'm gonna make a copy off this on and are here changes to something called Hitch B M toe

00:05:10.660 --> 00:05:15.110
d d l Hitch B m stand for hibernated mapping toe media,

00:05:15.110 --> 00:05:16.680
which is data definition language.

00:05:16.680 --> 00:05:17.300
So basically,

00:05:17.300 --> 00:05:20.070
I've been it is gonna convert our hibernate mapping,

00:05:20.070 --> 00:05:23.160
which were given in the category using annotation in tow.

00:05:23.160 --> 00:05:27.620
Appropriate data definition language like create altered drop on here.

00:05:27.620 --> 00:05:29.890
I'm gonna give a value off update,

00:05:29.890 --> 00:05:33.980
which means it is only going to make the changes if needed.

00:05:33.980 --> 00:05:34.510
Otherwise,

00:05:34.510 --> 00:05:39.230
it is not going to do anything since high Bennett is gonna create the SQL commands for you

00:05:39.230 --> 00:05:39.230
.

00:05:39.230 --> 00:05:42.380
If your industry to see what SQL commands have been generated,

00:05:42.380 --> 00:05:49.760
you can also give here something called show underscored skewered with the value off to and

00:05:49.760 --> 00:05:54.330
it will show you the skill commands while they still command is very Lindy.

00:05:54.330 --> 00:05:57.840
If you want to form it that you can also use your format,

00:05:57.840 --> 00:06:00.670
underscore SQL and say that it is too.

00:06:00.670 --> 00:06:04.570
Whenever you don't want to just come here and then disabled this with Well,

00:06:04.570 --> 00:06:10.650
you off falls Now that we have enough properties here that's created a configuration object

00:06:10.650 --> 00:06:12.300
representing our TV.

00:06:12.300 --> 00:06:13.310
To do that,

00:06:13.310 --> 00:06:14.950
I'm gonna say configuration,

00:06:14.950 --> 00:06:15.900
see,

00:06:15.900 --> 00:06:23.480
energy equals toe new configuration and make sure to import it from the hybrid package.

00:06:23.480 --> 00:06:26.010
So there are two configuration classes.

00:06:26.010 --> 00:06:27.410
One comes from Java,

00:06:27.410 --> 00:06:29.100
ex security artillery in.

00:06:29.100 --> 00:06:30.380
That is not what we want.

00:06:30.380 --> 00:06:31.970
And this is the one that we want.

00:06:31.970 --> 00:06:33.050
I select the same.

00:06:33.050 --> 00:06:35.250
Now we have a configuration object.

00:06:35.250 --> 00:06:40.020
This configuration object can create a session factory for us.

00:06:40.020 --> 00:06:41.880
With the information we are given here,

00:06:41.880 --> 00:06:46.410
the first thing that we have to do is to say that we have a class called category that this

00:06:46.410 --> 00:06:51.460
sea of D should manage some say CFT dot at annotated class.

00:06:51.460 --> 00:06:55.230
And I'm gonna supply my category dark class as a matter,

00:06:55.230 --> 00:06:55.580
me too.

00:06:55.580 --> 00:06:56.340
Now,

00:06:56.340 --> 00:06:58.270
in orderto create a session factory,

00:06:58.270 --> 00:07:05.570
you simply have to say c f g dot bill session factory on that actually should give you a

00:07:05.570 --> 00:07:07.020
session factory object.

00:07:07.020 --> 00:07:11.680
I can assign this to factory hibernate washing four onwards.

00:07:11.680 --> 00:07:16.120
The factory can be created and kept in something called the registry.

00:07:16.120 --> 00:07:17.740
If you want to use that,

00:07:17.740 --> 00:07:20.080
you can see your service history.

00:07:20.080 --> 00:07:25.330
That's color Does the history equals toe new standard service,

00:07:25.330 --> 00:07:27.580
registry builder dark,

00:07:27.580 --> 00:07:31.970
apply settings on and then we supply the props.

00:07:31.970 --> 00:07:34.890
So where we have given all these information,

00:07:34.890 --> 00:07:40.300
then we say your dog build That gives me what's called the service registry,

00:07:40.300 --> 00:07:41.580
which we have to import.

00:07:41.580 --> 00:07:43.750
And once we import this,

00:07:43.750 --> 00:07:45.560
we can now say you're there.

00:07:45.560 --> 00:07:46.540
This registry,

00:07:46.540 --> 00:07:48.500
which contains all this information,

00:07:48.500 --> 00:07:51.380
should be used for building the session factory here.

00:07:51.380 --> 00:07:55.030
So I take this and positive isn't argument on.

00:07:55.030 --> 00:07:57.290
Now we have our factory ready.

00:07:57.290 --> 00:08:01.360
So all four programs we're going to simply say liability Util,

00:08:01.360 --> 00:08:02.960
don't get session Factory,

00:08:02.960 --> 00:08:05.650
Get a session factory object.

