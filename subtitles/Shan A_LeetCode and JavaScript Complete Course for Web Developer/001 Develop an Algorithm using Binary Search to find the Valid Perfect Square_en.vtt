WEBVTT
1
00:00:00.150 --> 00:00:06.000
Today, I have a Couric interview question, and it's a question that's asked by companies like Microsoft,

2
00:00:06.000 --> 00:00:12.190
Salesforce, Amazon and many other and this question is called valid, perfect square.

3
00:00:12.870 --> 00:00:21.000
So in this problem, we are given a positive integer and we need to determine if it is a perfect score

4
00:00:21.540 --> 00:00:22.760
to solve this problem.

5
00:00:23.010 --> 00:00:28.890
We will use binary search where we will divide our data sets into half.

6
00:00:29.400 --> 00:00:32.290
So let's get right to it to solve this problem.

7
00:00:32.490 --> 00:00:40.760
You're given a function called Is Perfect Square, which takes a positive integer and we need to return

8
00:00:40.770 --> 00:00:40.860
it.

9
00:00:40.860 --> 00:00:48.050
True, if the given integer is a perfect score and you're not allowed to use any built-In library functions.

10
00:00:48.570 --> 00:00:51.750
So we have to design an algorithm using binary search.

11
00:00:52.050 --> 00:00:52.990
Let me explain.

12
00:00:53.820 --> 00:00:58.300
So we're trying to find if nine is a perfect score.

13
00:00:58.890 --> 00:01:03.040
So is there a number that's multiplied by itself which will equal nine?

14
00:01:03.870 --> 00:01:07.440
So three times three will be four.

15
00:01:08.720 --> 00:01:11.480
So, yes, nine is a perfect square.

16
00:01:12.230 --> 00:01:18.680
So what that really means is that one of the numbers from one to nine squared would give us nine.

17
00:01:18.710 --> 00:01:21.200
So for one score, give us nine.

18
00:01:21.230 --> 00:01:23.990
One times one to two, it does nine.

19
00:01:23.990 --> 00:01:26.300
Two times two with three.

20
00:01:26.300 --> 00:01:28.290
Square two is nine, which is three times three.

21
00:01:28.700 --> 00:01:29.010
Yes.

22
00:01:29.570 --> 00:01:38.300
So instead of checking every number, we can do this by using binary search where we divide our datasets

23
00:01:38.300 --> 00:01:39.110
into half.

24
00:01:40.070 --> 00:01:43.580
So here, let's find our midpoint, which is five.

25
00:01:44.430 --> 00:01:47.290
This five times, five or five square feet, fine.

26
00:01:47.490 --> 00:01:52.230
No, it's it's greater than nine, so five that's five equal.

27
00:01:52.330 --> 00:01:53.940
Twenty five, which is greater than nine.

28
00:01:54.390 --> 00:01:58.060
So any number on the right side is greater than nine.

29
00:01:58.680 --> 00:02:00.390
So what we can do is we can eliminate.

30
00:02:01.900 --> 00:02:03.100
All of these numbers.

31
00:02:04.610 --> 00:02:08.560
Right, and then we're going to find the midpoint right here.

32
00:02:08.600 --> 00:02:10.009
We're going to split our data here.

33
00:02:10.789 --> 00:02:13.340
So the middle is to.

34
00:02:14.670 --> 00:02:22.880
So it's two squared equals and I know two squared equal to nine with two squared, which would be four.

35
00:02:23.470 --> 00:02:26.660
So that would not be equal to nine, that would actually be less.

36
00:02:27.120 --> 00:02:30.130
So we can eliminate the left side of the data.

37
00:02:30.750 --> 00:02:35.250
And now we're going to find the middle here, the midpoint here, which is three.

38
00:02:36.580 --> 00:02:36.970
OK.

39
00:02:39.970 --> 00:02:40.770
Sorry about that.

40
00:02:41.610 --> 00:02:42.120
So.

41
00:02:43.120 --> 00:02:43.540
Three.

42
00:02:44.860 --> 00:02:46.630
Square does not equal to nine.

43
00:02:46.660 --> 00:02:47.330
Yes, it does.

44
00:02:47.410 --> 00:02:48.400
So we have found.

45
00:02:50.100 --> 00:02:52.990
Our number at nine is a perfect square.

46
00:02:53.370 --> 00:02:58.680
So how we do this and we would have two variables, so we'll have the variable left.

47
00:02:59.850 --> 00:03:06.110
And very for right, so that would be one and then, right, would be the number which we are given

48
00:03:06.810 --> 00:03:08.700
and then we need to find the midpoint.

49
00:03:08.940 --> 00:03:10.020
So how would we do that?

50
00:03:10.520 --> 00:03:11.310
We would do.

51
00:03:12.980 --> 00:03:16.370
That which is one plus.

52
00:03:18.150 --> 00:03:22.220
Right, which is nine minus left.

53
00:03:23.860 --> 00:03:27.040
Divided by two and then we round down.

54
00:03:27.950 --> 00:03:30.830
So nine minus one, which will give us an eight.

55
00:03:32.130 --> 00:03:33.780
And then we divide that by two.

56
00:03:36.540 --> 00:03:39.650
That would give us a fourth and then we add one to it.

57
00:03:40.710 --> 00:03:42.390
So that were people five.

58
00:03:43.750 --> 00:03:47.710
The remainder were just rounded down so far to our midpoint.

59
00:03:48.790 --> 00:03:49.930
So we start right here.

60
00:03:50.860 --> 00:03:56.780
So now we're going to check this five times five squared doesn't equal nine.

61
00:03:56.830 --> 00:03:59.640
No, actually it's greater than nine.

62
00:04:00.100 --> 00:04:03.400
So we will eliminate all of the data sets to.

63
00:04:03.460 --> 00:04:03.790
Right.

64
00:04:04.740 --> 00:04:11.430
And then we're going to try to find them the midpoint again by going to this formula and the midpoint

65
00:04:11.430 --> 00:04:13.080
here would be to.

66
00:04:14.680 --> 00:04:22.470
So this two square equal nine, actually, it's the last two squared before, so it's less than nine.

67
00:04:22.960 --> 00:04:28.950
So to make everything here because everything on the left side would be less than nine.

68
00:04:28.960 --> 00:04:29.890
So there's no point.

69
00:04:30.670 --> 00:04:34.930
So then again, we're going to find the midpoint point to this formula again, which would be three

70
00:04:35.810 --> 00:04:39.370
Sodus three squared equals to nine.

71
00:04:39.550 --> 00:04:40.300
Yes, it does.

72
00:04:40.450 --> 00:04:43.210
So we found it and we can return.

73
00:04:43.600 --> 00:04:45.860
True, because nine is a perfect score.

74
00:04:46.450 --> 00:04:47.920
So let me show you this in code.

75
00:04:48.120 --> 00:04:49.000
All right, guys.

76
00:04:49.030 --> 00:04:55.800
So here we have the function called is perfect square and it takes a positive integer.

77
00:04:56.650 --> 00:05:04.900
So what we need to do is we need to return a true if the NUM is a perfect square or else will return

78
00:05:04.900 --> 00:05:05.530
a false.

79
00:05:06.220 --> 00:05:12.070
So we have to note that we cannot use any built in library functions such as security, which is square

80
00:05:12.070 --> 00:05:12.390
root.

81
00:05:13.480 --> 00:05:18.770
So the first thing we're going to check if this number is less than one.

82
00:05:19.540 --> 00:05:24.760
So if it's a zero, then we want to return to false because zero is not a perfect square.

83
00:05:26.010 --> 00:05:33.030
And as we as I showed on the whiteboard, we need to create we need to create two pointers so the left

84
00:05:33.030 --> 00:05:41.260
pointer and then the right pointer and the left pointer will always be one and the right pointer is

85
00:05:41.260 --> 00:05:42.540
the number we're given.

86
00:05:44.400 --> 00:05:46.660
So check out this example up here.

87
00:05:47.190 --> 00:05:48.870
So the number is nine.

88
00:05:49.050 --> 00:05:50.880
That's what we're given in this example.

89
00:05:51.480 --> 00:05:52.470
So what are we going to have?

90
00:05:52.470 --> 00:05:53.900
The left is going to be one.

91
00:05:54.240 --> 00:05:56.580
So one, two, three, four, five, six, seven, eight, nine.

92
00:05:57.660 --> 00:06:04.560
So we're going to put the left pointer at one and then the right pointer is the number which which is

93
00:06:05.250 --> 00:06:05.730
nine.

94
00:06:07.990 --> 00:06:14.830
OK, now we're going to have this wild, so wild left, which is one.

95
00:06:16.300 --> 00:06:20.550
Is less than or equal to the right is nine.

96
00:06:21.490 --> 00:06:23.080
So I want is less than nine.

97
00:06:23.780 --> 00:06:28.130
We're going to look and we're going to first get the midpoint.

98
00:06:29.050 --> 00:06:32.950
So if you remember, this is the formula to get the midpoint.

99
00:06:34.820 --> 00:06:43.760
So it is left plus right, minus left, divided by two, and we have the so to round it down.

100
00:06:45.560 --> 00:06:49.790
So in this example, the midpoint would be five.

101
00:06:54.070 --> 00:07:01.870
So what we're going to do is we're going to do is five times five, so midpoint times midpoint, does

102
00:07:01.870 --> 00:07:02.670
it equal nine?

103
00:07:03.550 --> 00:07:05.690
So five times five will give us a twenty five.

104
00:07:06.010 --> 00:07:08.490
And it does not equal the number, which is nine.

105
00:07:09.220 --> 00:07:10.460
So we will not return it.

106
00:07:10.460 --> 00:07:10.680
True.

107
00:07:10.730 --> 00:07:12.910
Instead, we will go into this outfit else.

108
00:07:14.920 --> 00:07:21.610
So if the midpoint is midpoint, which is twenty five is greater than the number which is which we have

109
00:07:21.610 --> 00:07:23.220
and the example is nine.

110
00:07:23.980 --> 00:07:28.930
So we're going to go into this elusive and we're going to update the right pointer.

111
00:07:30.110 --> 00:07:30.650
Why?

112
00:07:30.710 --> 00:07:38.300
Because anything right of the middle right, anything right of the middle is greater than nine.

113
00:07:38.420 --> 00:07:44.510
If you multiply it by itself, so if you do, six times six is greater than nine to seven times seven

114
00:07:44.510 --> 00:07:45.370
is greater than nine.

115
00:07:45.710 --> 00:07:47.690
If you do eight times eight, it's nine.

116
00:07:48.110 --> 00:07:55.550
So anything out of the right of the midpoint is going to be greater than excuse me, is going to be

117
00:07:55.550 --> 00:07:56.340
greater than nine.

118
00:07:56.870 --> 00:08:04.470
So we want to update the right pointer and we want to move it to the left side of it.

119
00:08:04.910 --> 00:08:05.940
So how are we going to do that?

120
00:08:05.960 --> 00:08:06.890
We're going to say, right.

121
00:08:06.950 --> 00:08:09.500
Pointer equals midpoint.

122
00:08:10.590 --> 00:08:11.700
Equals midpoint.

123
00:08:12.630 --> 00:08:13.560
Minus one.

124
00:08:15.540 --> 00:08:17.070
So we're going to move the right pointer.

125
00:08:18.800 --> 00:08:22.080
To the midpoint minus one to five, minus one, which will give us a four.

126
00:08:22.370 --> 00:08:23.660
So we're going to move it right here.

127
00:08:28.050 --> 00:08:36.789
OK, then again, so we're going to check is the midpoint times midpoint, which is going to give us

128
00:08:37.110 --> 00:08:37.669
twenty five.

129
00:08:37.679 --> 00:08:41.280
Is it less than over a number, which is nine?

130
00:08:41.400 --> 00:08:43.080
No, it's less than nine.

131
00:08:43.080 --> 00:08:45.720
So we're not going to go into this elusive.

132
00:08:46.860 --> 00:08:51.690
So, again, we're going to go back and we're going to look again to the wire loop and we're going to

133
00:08:51.690 --> 00:08:52.920
find the midpoint again.

134
00:08:54.090 --> 00:08:55.770
So what is going to be the midpoint here?

135
00:08:56.420 --> 00:08:58.110
We're going to go through this formula again.

136
00:08:59.720 --> 00:09:05.420
So instead of five, now, the midpoint is going to be at to.

137
00:09:08.480 --> 00:09:15.680
OK, so now we're going to do this again, midpoint as a midpoint, so two times, two times, two times

138
00:09:15.680 --> 00:09:20.450
two, which is four, is that equal to over number nine?

139
00:09:20.540 --> 00:09:21.270
No, it's not.

140
00:09:22.070 --> 00:09:23.060
So we're going to go here.

141
00:09:24.570 --> 00:09:29.940
Midpoints times midpoint, which is two times to four, is a greater than nine.

142
00:09:30.030 --> 00:09:30.730
No, it's not.

143
00:09:31.560 --> 00:09:33.840
So now we're here in this elusive.

144
00:09:34.870 --> 00:09:39.310
So two times two, which equals four, is that less than nine?

145
00:09:39.370 --> 00:09:41.920
Yes, it is less than nine, so.

146
00:09:42.920 --> 00:09:53.550
Anything left of the midpoint is less than nine, so one times one is going to give us one.

147
00:09:53.570 --> 00:09:54.660
So it's less than nine.

148
00:09:54.800 --> 00:09:59.450
So what we want to do is we want to move our left pointer to the right of the middle.

149
00:09:59.960 --> 00:10:01.000
So how are we going to do that?

150
00:10:01.550 --> 00:10:03.380
So we're going to do this by upgrading the left.

151
00:10:03.380 --> 00:10:07.040
Left equals midpoint plus one to midpoint point here.

152
00:10:07.040 --> 00:10:12.260
An example is two, so two plus one, which would give us a three.

153
00:10:12.710 --> 00:10:13.790
So we move the left.

154
00:10:16.340 --> 00:10:16.880
The three.

155
00:10:21.080 --> 00:10:27.020
OK, now, again, we're going to go back and go through this wild look again and we're going to check

156
00:10:27.020 --> 00:10:27.920
the midpoint again.

157
00:10:28.850 --> 00:10:37.560
So in this example, the middle is two and the left is three and the right is four.

158
00:10:38.060 --> 00:10:39.920
So the middle is going to be.

159
00:10:41.720 --> 00:10:44.810
Left, plus right, minus left, divided by two.

160
00:10:44.870 --> 00:10:47.000
And we're going to use my thought to round it down.

161
00:10:48.140 --> 00:10:54.650
So that means our new midpoint is going to be three.

162
00:11:04.150 --> 00:11:05.740
So now we're going to go through this.

163
00:11:06.740 --> 00:11:08.390
Midpoint times midpoint.

164
00:11:09.430 --> 00:11:14.240
So three times three, does it equal nine, which is our number in our example?

165
00:11:14.620 --> 00:11:17.380
Yes, three times three does equal nine.

166
00:11:17.440 --> 00:11:21.430
So we're going to return a true and we're done.

167
00:11:22.950 --> 00:11:30.870
So in the end, we have return false because let's say over the number that's given to us is not a perfect

168
00:11:30.870 --> 00:11:34.590
score like five five is not a perfect score.

169
00:11:34.860 --> 00:11:37.060
No number times itself can equal five.

170
00:11:37.650 --> 00:11:44.680
So if you were given five, then you would have something like this one to five and we would find the

171
00:11:45.030 --> 00:11:49.020
amid the left or right and we would go through this loop again.

172
00:11:49.260 --> 00:11:55.560
But in the end, there would be no number times itself to give us a five.

173
00:11:56.780 --> 00:12:04.340
So at that point, we would exit the loop and we return it to would return a false and that's pretty

174
00:12:04.340 --> 00:12:04.690
much it.

175
00:12:04.730 --> 00:12:12.350
That's how you find if the number is a perfect square, if you have any questions, then leave your

176
00:12:12.350 --> 00:12:13.700
questions in the comments below.

177
00:12:14.120 --> 00:12:15.490
And I will get back to.

