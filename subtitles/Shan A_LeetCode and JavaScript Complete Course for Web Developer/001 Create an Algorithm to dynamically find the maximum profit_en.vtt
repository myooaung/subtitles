WEBVTT
1
00:00:00.210 --> 00:00:08.400
Everyone, today I have a coding interview question, and it's a question that's asked by Google, and

2
00:00:08.400 --> 00:00:13.470
in this problem we need to figure out which houses to rob to get the most money.

3
00:00:13.890 --> 00:00:20.480
And what that means is which elements should we add up in the given area to get the largest number.

4
00:00:20.670 --> 00:00:24.420
So let's get right to it to solve this problem.

5
00:00:24.450 --> 00:00:30.630
You're given a function called Rob, OK, which takes an area of numbers.

6
00:00:31.780 --> 00:00:38.620
The numbers in the area presents money that each house has and we need to return the maximum amount

7
00:00:38.620 --> 00:00:42.690
of money that you can resolve without alerting the police.

8
00:00:43.210 --> 00:00:47.770
So we have to design an algorithm to find the maximum number.

9
00:00:48.580 --> 00:00:55.630
So this area, this represents the houses and the number represents the amount of money each house has.

10
00:00:56.020 --> 00:00:59.010
And as a robber, we cannot rob houses next to each other.

11
00:00:59.020 --> 00:01:01.870
So we cannot rule out the elements next to each other.

12
00:01:02.230 --> 00:01:07.300
So we have to go like this, either the first element and the third element.

13
00:01:08.770 --> 00:01:11.260
Or the second element and the fourth element.

14
00:01:12.520 --> 00:01:19.780
Because each house has an alarm system and the police will be notified if you roll up the house next

15
00:01:19.780 --> 00:01:20.340
to each other.

16
00:01:21.600 --> 00:01:28.380
So to find the maximum amount we can resolve without getting caught by the police, we need to create

17
00:01:28.380 --> 00:01:32.380
another area to keep track of the totals that we have robbed.

18
00:01:32.910 --> 00:01:36.900
So let's start with the first element where this is the first house.

19
00:01:36.930 --> 00:01:41.990
So we're going to put that in our area right here to keep track of it.

20
00:01:42.570 --> 00:01:48.480
And then we look at the second house, since we cannot rule the house next to each other, that we should

21
00:01:48.480 --> 00:01:50.590
either start with or we should start with one.

22
00:01:50.590 --> 00:01:50.780
Right.

23
00:01:51.180 --> 00:01:56.060
So if a trader or one trader, so it actually is greater.

24
00:01:56.400 --> 00:01:57.900
So we will start with eight.

25
00:01:59.360 --> 00:02:09.830
OK, and then we'll move on to the third element, so three plus eight, which will give us an 11 or

26
00:02:09.919 --> 00:02:11.570
should we keep or we have eight.

27
00:02:12.420 --> 00:02:15.310
But three plus eight, which is equal to 11, is greater.

28
00:02:15.480 --> 00:02:17.650
So we will definitely vote this House as well.

29
00:02:18.860 --> 00:02:23.230
Then we move on to the fourth element, so this has 10.

30
00:02:24.280 --> 00:02:31.660
So either 10 plus eight, which will give us 18 or we keep what we currently have to live.

31
00:02:32.920 --> 00:02:39.020
Actually, 18 is greater, so who bought this house, you will have it in your pocket.

32
00:02:40.840 --> 00:02:48.130
Then you look at the last element, which is seven, so seven plus 11, what we recently had before

33
00:02:48.130 --> 00:02:52.600
this, which would give us 18 or should we keep both our safe?

34
00:02:52.750 --> 00:02:59.410
So we have 18 has a maximum amount that we can roll without getting caught by the police.

35
00:02:59.890 --> 00:03:02.890
And that's what we're going to return to our function.

36
00:03:03.730 --> 00:03:10.450
So what this basically means is that you look at the first house and you see that, OK, this is what

37
00:03:10.450 --> 00:03:11.510
I'm going to start off with.

38
00:03:11.530 --> 00:03:12.850
So that's why you put here.

39
00:03:13.330 --> 00:03:14.790
Then you look at the second house.

40
00:03:15.310 --> 00:03:19.260
Well, the second house has less money, so it only has one.

41
00:03:19.270 --> 00:03:23.250
So actually, I want to start with eight, because you cannot rule next to each other.

42
00:03:23.440 --> 00:03:25.640
So you start with eight, OK?

43
00:03:26.290 --> 00:03:32.050
And then you go to the third element and you either want to keep what you have.

44
00:03:33.550 --> 00:03:39.490
Or three plus eight, which was 11, so of course, 11 is greater, so we brought this out.

45
00:03:39.520 --> 00:03:40.650
You can get 11.

46
00:03:41.570 --> 00:03:49.430
And then we look at the next element, which is so this house has 10 and what we had previously was

47
00:03:49.430 --> 00:03:52.700
eight, so it should be at eight, plus 10 can get 18.

48
00:03:54.260 --> 00:03:55.700
Of course, it is greater.

49
00:03:55.710 --> 00:03:57.020
That's why we have 18 here.

50
00:03:57.620 --> 00:03:59.590
And then the last 11, which is seven.

51
00:03:59.990 --> 00:04:05.250
So seven plus 11, which will give us an 18, but we already have an 18 as well.

52
00:04:05.570 --> 00:04:12.980
So it's both saying that's why we have 18 right here and that's our maximum amount we can get without

53
00:04:12.980 --> 00:04:14.340
getting caught by the police.

54
00:04:14.930 --> 00:04:17.800
So that's what we're going to return function.

55
00:04:18.410 --> 00:04:20.260
And let me show you this code.

56
00:04:20.899 --> 00:04:27.250
If you don't understand this, then make sure to leave a comment and I will make it more clear for you.

57
00:04:28.900 --> 00:04:34.660
All right, guys, so here we have the function call Rob and it takes an array of numbers.

58
00:04:35.110 --> 00:04:42.420
So it's the number is represents the value that each house has, so the amount of money each house has.

59
00:04:43.000 --> 00:04:49.180
So the first thing we're doing right here is we're checking if if the area that's passed is undefined

60
00:04:49.180 --> 00:04:55.490
or normal or the length is zero, meaning there's no elements in there.

61
00:04:56.020 --> 00:04:59.440
So we will just return to zero because we didn't make any money.

62
00:05:00.580 --> 00:05:07.450
And the next statement is if there's only one house, so if there's only one house, so we will just

63
00:05:07.450 --> 00:05:11.180
return the amount of money in that one house.

64
00:05:11.230 --> 00:05:13.210
So we're just going to return the first element.

65
00:05:15.100 --> 00:05:22.360
After that, we're going to create our area to keep track of the amount that we have robbed from each

66
00:05:22.360 --> 00:05:22.730
house.

67
00:05:23.710 --> 00:05:25.340
So right here is an example.

68
00:05:25.930 --> 00:05:31.060
So if you remember from the whiteboard explanation, we're going to first start with the first house.

69
00:05:31.060 --> 00:05:39.220
So we're going to put the first house value in our area and then we're going to see is the first house

70
00:05:39.250 --> 00:05:41.290
worth robbing or is the second house worthwhile?

71
00:05:41.980 --> 00:05:45.880
So the second house is worth more than because two is greater than one.

72
00:05:47.920 --> 00:05:48.980
So that's right here.

73
00:05:49.030 --> 00:05:50.530
So this is the first house.

74
00:05:51.940 --> 00:05:58.150
And then we're deciding is the first House has more money on the second house, husband won, the second

75
00:05:58.150 --> 00:05:59.710
house has more money in our case.

76
00:06:00.760 --> 00:06:05.440
After that, we're going to start looking to the rest of the houses, so we're going to start with the

77
00:06:05.440 --> 00:06:10.290
second index, because you've already covered the first house and the second house.

78
00:06:10.870 --> 00:06:14.080
So the second index pretty much means the third house.

79
00:06:15.760 --> 00:06:20.390
So what that means is that we're going to start looping through the third from the third house.

80
00:06:21.040 --> 00:06:27.870
So what we're doing right here is we're trying to see which one is greater, the total of one house

81
00:06:29.260 --> 00:06:29.770
or.

82
00:06:30.920 --> 00:06:32.800
The total of two houses of.

83
00:06:34.420 --> 00:06:36.790
Plus, the house we are currently on.

84
00:06:37.840 --> 00:06:39.710
So which one, whichever is greater.

85
00:06:40.210 --> 00:06:43.330
So would you rather keep the total from one house of.

86
00:06:45.090 --> 00:06:48.690
Or would be rather add the value of the current house.

87
00:06:49.940 --> 00:06:52.370
To the total amount of two houses of.

88
00:06:55.140 --> 00:06:56.790
So why two houses?

89
00:06:57.180 --> 00:07:04.000
Because we are not allowed to rob houses that are side by side, as I showed on the Y, for example.

90
00:07:04.830 --> 00:07:07.110
So we have to go back to houses.

91
00:07:08.160 --> 00:07:16.170
So let's continue our example right here, so we are on the third house right here, which is a three

92
00:07:16.860 --> 00:07:21.210
so three plus two houses ago, which is a one week.

93
00:07:21.210 --> 00:07:21.830
It was a four.

94
00:07:22.290 --> 00:07:27.400
So it's for later or we currently have two is greater, so four is greater.

95
00:07:27.420 --> 00:07:35.040
So it's good to rob this third house, which will give us a fourth and then move on to our last element,

96
00:07:35.040 --> 00:07:37.100
which is the last house, and that is the one.

97
00:07:37.710 --> 00:07:41.590
So one plus two houses ago, which will give us a three.

98
00:07:42.690 --> 00:07:46.860
So is three greater calls for greater force greater?

99
00:07:46.860 --> 00:07:50.370
So we will keep what we have and will not drop this last house.

100
00:07:50.790 --> 00:07:53.370
So that's what we're going to return in our function.

101
00:07:55.080 --> 00:07:56.170
So that's pretty much it.

102
00:07:56.190 --> 00:07:57.680
So that's we're going to show right here.

103
00:07:57.690 --> 00:08:05.540
Return total, total my minus one, because we want to return the last element of the area.

104
00:08:06.060 --> 00:08:07.710
And this is how we're going to do that.

105
00:08:08.400 --> 00:08:09.570
And that's pretty much it.

