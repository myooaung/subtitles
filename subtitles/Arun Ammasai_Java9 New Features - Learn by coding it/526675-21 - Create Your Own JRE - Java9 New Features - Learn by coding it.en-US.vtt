WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.150
Hello everyone and welcome back.

00:00:03.150 --> 00:00:05.130
So in the previous video,

00:00:05.130 --> 00:00:08.190
we discussed about how we are going to create a simple modular program.

00:00:08.190 --> 00:00:13.680
Now we are going to run against our JDK GID, right?

00:00:13.680 --> 00:00:15.840
So now we're going to create our wound

00:00:15.840 --> 00:00:20.025
KID and we are trying to run some program in our own JRE.

00:00:20.025 --> 00:00:20.730
Okay.

00:00:20.730 --> 00:00:23.820
So I just made a few modifications of existing program to be

00:00:23.820 --> 00:00:28.155
have a modelling for right-side just probably requests that Java base,

00:00:28.155 --> 00:00:30.015
which is not acquired anyway.

00:00:30.015 --> 00:00:35.430
You can provide it here or else you can demote here anybody for it to be referred.

00:00:35.430 --> 00:00:42.025
So I have a test package here which will give me the welcome dot think for amino jailing.

00:00:42.025 --> 00:00:44.960
So what I'm gonna do is I'm going to do anything with the program.

00:00:44.960 --> 00:00:50.825
I'm going to create a new custom JRE where I can create my own programs and I can run it.

00:00:50.825 --> 00:00:52.985
So how are we gonna do that?

00:00:52.985 --> 00:00:57.305
So the way we're gonna do that, using tailing.

00:00:57.305 --> 00:00:58.745
Okay, let's do that.

00:00:58.745 --> 00:01:04.940
So j link and we need to provide the module path.

00:01:04.940 --> 00:01:07.445
Module I offend.

00:01:07.445 --> 00:01:12.830
But I'm going to provide where you can retrieve the module.

00:01:12.830 --> 00:01:19.800
Okay, So basically the model is located in Program Files.

00:01:22.660 --> 00:01:26.660
Java JDK 9 under the TM mode.

00:01:26.660 --> 00:01:28.430
Here we have a Java code base,

00:01:28.430 --> 00:01:31.565
so I'm going to refer the entire package.

00:01:31.565 --> 00:01:36.050
So whatever the models we needed, it will pick it up.

00:01:36.050 --> 00:01:38.210
So J Mario part.

00:01:38.210 --> 00:01:40.790
So I have said my Java,

00:01:40.790 --> 00:01:43.925
But in my Java home environment variable.

00:01:43.925 --> 00:01:46.925
So I'm going to refer my variable here.

00:01:46.925 --> 00:01:52.085
So just provide tau1 and the score

00:01:52.085 --> 00:01:53.700
home

00:01:57.340 --> 00:02:03.450
slash templates folder.

00:02:03.640 --> 00:02:07.639
And I'm going to use the outfielder.

00:02:07.639 --> 00:02:12.109
And now so I know the part where I can refer the modules.

00:02:12.109 --> 00:02:16.640
So now I'm going to add my own modules, right?

00:02:16.640 --> 00:02:25.675
I have an iPhone, an iPhone module, and modules space.

00:02:25.675 --> 00:02:28.180
What is our module? It is a demo model, right?

00:02:28.180 --> 00:02:29.620
So demo module.

00:02:29.620 --> 00:02:32.170
And then you have to provide output water,

00:02:32.170 --> 00:02:35.335
the JRD we are trying to create output.

00:02:35.335 --> 00:02:38.395
My daddy folder name is going to be owned.

00:02:38.395 --> 00:02:42.070
And just Enter and wait for a minute.

00:02:42.070 --> 00:02:46.030
We should be able to see everyone j or it might take some, I'm going to delete it.

00:02:46.030 --> 00:02:48.370
They had to create the bin folder, lipo revenue, right?

00:02:48.370 --> 00:02:50.830
Whatever our GRE required,

00:02:50.830 --> 00:02:53.020
Eclipse go to the project folder.

00:02:53.020 --> 00:02:56.365
And here, jailing product, right?

00:02:56.365 --> 00:02:58.840
See now we have a new folder called own JRE.

00:02:58.840 --> 00:03:03.675
Here we have a bin confint glowed, legal and okay,

00:03:03.675 --> 00:03:11.555
these are OJT but just see the size of the JRE and this is my own GRE,

00:03:11.555 --> 00:03:15.410
just our own 36 scabies MB's, right?

00:03:15.410 --> 00:03:25.430
Let's talk about our JDK JRE Open JDK 9.

00:03:25.430 --> 00:03:27.275
And here we have, sorry,

00:03:27.275 --> 00:03:28.550
we have a JRE here, right?

00:03:28.550 --> 00:03:31.340
It's just right-click and check the properties.

00:03:31.340 --> 00:03:33.930
See the difference.

00:03:34.060 --> 00:03:38.210
Jpeg every contains 203 and besides,

00:03:38.210 --> 00:03:41.375
and my own Jared's just 36 and B.

00:03:41.375 --> 00:03:43.490
Since we use Java that base,

00:03:43.490 --> 00:03:48.020
it contained lot of packages inside. So it is 36.

00:03:48.020 --> 00:03:53.990
But if you're using some other modules like logging and logging and all,

00:03:53.990 --> 00:03:55.670
they'll take me less memory.

00:03:55.670 --> 00:04:03.815
Okay, So this is a major advantage of using a chain link to create your custom JRE.

00:04:03.815 --> 00:04:09.470
So now we know how to create a new module or how to add my module into my new JRE.

00:04:09.470 --> 00:04:11.510
So I have my own JRE here,

00:04:11.510 --> 00:04:16.410
Epsom 10 login inside my custom GRE, I own gyri.

00:04:16.600 --> 00:04:20.435
So here are the two radii, r and z.

00:04:20.435 --> 00:04:27.050
So on JR is a semi own J and go to the main folder.

00:04:27.050 --> 00:04:31.415
And let's create a program here and write executed and normal program.

00:04:31.415 --> 00:04:34.290
I have a bag. Let me copy this.

00:04:34.600 --> 00:04:37.430
Or ethnic me save this.

00:04:37.430 --> 00:04:39.510
Save us into our customer,

00:04:39.510 --> 00:04:42.560
even so-called own, Jerry Rubin.

00:04:42.560 --> 00:04:44.765
And let me save that as flagella here.

00:04:44.765 --> 00:04:46.280
And I don't know in the pack on here.

00:04:46.280 --> 00:04:48.680
So this is a deal.

00:04:48.680 --> 00:04:56.060
So now I have a program inside my own JIRA, right?

00:04:56.060 --> 00:04:59.540
So that I'm able to run java codes.

00:04:59.540 --> 00:05:01.040
Okay, let's put the air.

00:05:01.040 --> 00:05:03.740
Here. We have a program called test dot Java.

00:05:03.740 --> 00:05:06.470
So I'm going to compile it Java.

00:05:06.470 --> 00:05:10.820
Java. So now it is compiled.

00:05:10.820 --> 00:05:15.185
I'm going to run it on desktop.

00:05:15.185 --> 00:05:17.270
Welcome to J link.

00:05:17.270 --> 00:05:20.900
So this is how you indicate your own run-time environment.

00:05:20.900 --> 00:05:24.140
Okay, So this is the size difference.

00:05:24.140 --> 00:05:26.240
If you are working with the portable devices,

00:05:26.240 --> 00:05:28.805
you can create a mini minimal runtime environment.

00:05:28.805 --> 00:05:31.595
So based on your device.

00:05:31.595 --> 00:05:33.420
Thank you.
