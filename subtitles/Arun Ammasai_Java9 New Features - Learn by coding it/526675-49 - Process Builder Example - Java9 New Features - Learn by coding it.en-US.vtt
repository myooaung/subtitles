WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.875
Hello everyone.

00:00:01.875 --> 00:00:03.105
Welcome back.

00:00:03.105 --> 00:00:04.650
As I mentioned earlier,

00:00:04.650 --> 00:00:06.210
in this particular session,

00:00:06.210 --> 00:00:10.755
we're going to use the process builder to create our own process, right?

00:00:10.755 --> 00:00:15.850
So let me create a new class here.

00:00:18.170 --> 00:00:23.499
Process, Merida example.

00:00:24.650 --> 00:00:27.990
So normally when you want to open a Notepad file,

00:00:27.990 --> 00:00:30.510
what we're going to do, we'll identify

00:00:30.510 --> 00:00:33.600
the file and we are right-click and open using an old part.

00:00:33.600 --> 00:00:38.340
So now we're going to do it to the Java code with the help of process builder.

00:00:38.340 --> 00:00:42.550
For that, I need to have a file.

00:00:42.580 --> 00:00:46.310
So first thing, so I'm inside

00:00:46.310 --> 00:00:56.100
the process package and I'm going to create a file here in a simple text file.

00:00:58.750 --> 00:01:04.790
And sample dot dx dy.

00:01:04.790 --> 00:01:07.580
So I got sample.txt critter.

00:01:07.580 --> 00:01:10.175
Let's add some continental.

00:01:10.175 --> 00:01:17.430
Welcome to process API enhancements.

00:01:18.670 --> 00:01:23.765
Thank you. Thank you.

00:01:23.765 --> 00:01:27.690
Okay, so now I had a file.

00:01:27.880 --> 00:01:34.590
So we're going to open the file using Notepad application.

00:01:35.140 --> 00:01:36.785
Okay?

00:01:36.785 --> 00:01:38.270
So how are we going to do that?

00:01:38.270 --> 00:01:42.365
We know that we are going to use the process vulgar.

00:01:42.365 --> 00:01:47.310
How we're going to use the process builder process.

00:01:48.100 --> 00:01:53.810
Well, there is equal, this is syntax, process.

00:01:53.810 --> 00:02:02.765
And this particular plausible that contract law which will accepts their arcs,

00:02:02.765 --> 00:02:05.674
which is nothing but it will accept multiple string parameters.

00:02:05.674 --> 00:02:10.700
You can pass a many number of paramagnetic and ba 0 or it can to anything.

00:02:10.700 --> 00:02:13.475
For our scenario, I'm going to pass two.

00:02:13.475 --> 00:02:17.225
I want to open using Notepad and my file lemmas,

00:02:17.225 --> 00:02:21.995
sample dot dx d psi want to achieve this.

00:02:21.995 --> 00:02:24.260
So once the bill is ready,

00:02:24.260 --> 00:02:32.370
then we need to start the builder, builder.me.

00:02:34.840 --> 00:02:39.440
So let's do that in a simple example here.

00:02:39.440 --> 00:02:42.695
So we're going to use it. But having noticed something,

00:02:42.695 --> 00:02:44.645
we're not importing anything,

00:02:44.645 --> 00:02:48.050
then you're using the plus sign it because those are part of

00:02:48.050 --> 00:02:52.565
java.lang package where we don't need to explicitly import them.

00:02:52.565 --> 00:02:56.060
So here, process data.

00:02:56.060 --> 00:03:02.495
So beggar, new process builder.

00:03:02.495 --> 00:03:04.070
And as I mentioned,

00:03:04.070 --> 00:03:07.535
you can pass any number of arguments here.

00:03:07.535 --> 00:03:13.640
The funnel, I'm going to use Notepad and the filename,

00:03:13.640 --> 00:03:16.980
sample dot dx, dy.

00:03:18.820 --> 00:03:22.980
And let's start the builder.

00:03:25.600 --> 00:03:27.830
Okay?

00:03:27.830 --> 00:03:30.770
Now we might have a question.

00:03:30.770 --> 00:03:33.650
We need to use a try-catch here.

00:03:33.650 --> 00:03:37.200
So I'm gonna use throws exception here.

00:03:37.240 --> 00:03:40.235
Okay, So I probably did node pair here.

00:03:40.235 --> 00:03:43.370
But what will happen if I learn probably anything in here.

00:03:43.370 --> 00:03:45.155
I'm not probably in the data here.

00:03:45.155 --> 00:03:49.700
So still it wrong, but already happening and it will initiate the Notepad application.

00:03:49.700 --> 00:03:53.330
It will not do anything. It'll just simply initiate the Notepad.

00:03:53.330 --> 00:03:55.475
Let's see how it is when you do that.

00:03:55.475 --> 00:03:58.415
Run As Java Application.

00:03:58.415 --> 00:04:00.560
See the node, whereas in open,

00:04:00.560 --> 00:04:03.170
which is an untitled notepad.

00:04:03.170 --> 00:04:08.660
Right? Okay. So I know that if I can

00:04:08.660 --> 00:04:14.000
access our I can initiate any services or any process using the process builder.

00:04:14.000 --> 00:04:15.980
So now I want to open a specific method.

00:04:15.980 --> 00:04:21.305
I mean a specific process or a specific file which is nothing but sample.txt.

00:04:21.305 --> 00:04:23.840
Sample.txt.

00:04:23.840 --> 00:04:28.470
Okay, so let's run it again and we'll see what's going to happen.

00:04:30.370 --> 00:04:34.160
It is saying cannot find sample.txt file.

00:04:34.160 --> 00:04:35.375
Do you want to create new failed?

00:04:35.375 --> 00:04:40.550
Because I provided as input the file lemma say input,

00:04:40.550 --> 00:04:41.900
but the system saying like the,

00:04:41.900 --> 00:04:44.555
I'm not able to find that file here.

00:04:44.555 --> 00:04:46.490
Okay, let's see what's the issue here.

00:04:46.490 --> 00:04:51.110
The sample.txt, which is air under both in the same package,

00:04:51.110 --> 00:04:53.795
but still it's not able to identify the file.

00:04:53.795 --> 00:04:55.310
So these kind of scenarios,

00:04:55.310 --> 00:04:59.075
what you can do is you can provide absolute path.

00:04:59.075 --> 00:05:03.305
So how to get that right like the sample.txt file and go to Properties.

00:05:03.305 --> 00:05:06.140
And then you can find out the absolute path.

00:05:06.140 --> 00:05:10.295
Just copy this and provided here.

00:05:10.295 --> 00:05:12.845
Sometimes it's a log.

00:05:12.845 --> 00:05:15.515
And now I'm gonna run it.

00:05:15.515 --> 00:05:18.590
Redness that obligation.

00:05:18.590 --> 00:05:20.720
See, now it's looking right.

00:05:20.720 --> 00:05:22.640
Welcome to process AB enhancements.

00:05:22.640 --> 00:05:23.555
Thank you.

00:05:23.555 --> 00:05:26.000
So you can use something like that.

00:05:26.000 --> 00:05:29.690
So now the first case scenario is completed.

00:05:29.690 --> 00:05:34.355
So I have an external API and I use the process APA,

00:05:34.355 --> 00:05:35.660
the help of the person,

00:05:35.660 --> 00:05:39.695
but I'm in the process builder and I opened my TXT file.

00:05:39.695 --> 00:05:44.285
This is anonymous and other similar way you can access.

00:05:44.285 --> 00:05:46.910
You can open any kind of application.

00:05:46.910 --> 00:05:49.235
I mean, now any kind of process,

00:05:49.235 --> 00:05:51.140
let me try something different here.

00:05:51.140 --> 00:05:52.865
I'm let me try.

00:05:52.865 --> 00:06:00.365
There it is. Opening. Something else like so what else we can try here?

00:06:00.365 --> 00:06:04.770
Let's try Notepad.

00:06:05.440 --> 00:06:08.630
Plus, Plus. Not sure I was going to work,

00:06:08.630 --> 00:06:13.680
but let me just give it a try. Enter one.

00:06:13.810 --> 00:06:16.280
Art start.

00:06:16.280 --> 00:06:18.440
So for now, I'm just commenting this one.

00:06:18.440 --> 00:06:20.720
I don't want to start the lone pair on it.

00:06:20.720 --> 00:06:23.840
And I'll say, Okay,

00:06:23.840 --> 00:06:28.640
it's not finding it out because we need to find it.

00:06:28.640 --> 00:06:33.650
What are they exact name to launch in Notepad Plus Plus inert. Identify that.

00:06:33.650 --> 00:06:40.085
So let me try something like paint.

00:06:40.085 --> 00:06:43.450
And I haven't write it, but I'm trying it now.

00:06:44.500 --> 00:06:46.580
See, it's pretty cool, right?

00:06:46.580 --> 00:06:49.115
It is opening because if you know the proper name,

00:06:49.115 --> 00:06:51.995
we can use the process builder to create it.

00:06:51.995 --> 00:06:53.195
It is.

00:06:53.195 --> 00:06:55.460
See how simple is that?

00:06:55.460 --> 00:07:00.695
Because in, before Java it is not possible with just two lines of code.

00:07:00.695 --> 00:07:02.840
Okay, so the next example,

00:07:02.840 --> 00:07:04.025
what we're going to talk about,

00:07:04.025 --> 00:07:08.750
we're going to create a Java file to one for testing purpose and secondary is

00:07:08.750 --> 00:07:15.660
for to compile the another Java file and execute the Java file.
