WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.595
Hello everyone, Welcome back.

00:00:02.595 --> 00:00:05.925
So we know what are the class we are going to use to create

00:00:05.925 --> 00:00:11.055
our request and send a request.

00:00:11.055 --> 00:00:12.600
So now, Okay, Now,

00:00:12.600 --> 00:00:15.720
first phase is then the second phase is retrieving the response.

00:00:15.720 --> 00:00:17.040
To retrieve the response,

00:00:17.040 --> 00:00:20.620
we need to have HTTP response.

00:00:21.170 --> 00:00:27.090
Http response. And the response here,

00:00:27.090 --> 00:00:31.080
we are going to use the client to send that equals, right?

00:00:31.080 --> 00:00:34.875
I'm going to use the AAE Client dot.

00:00:34.875 --> 00:00:37.080
I'm, I'm going to send a SYN synchronous matter,

00:00:37.080 --> 00:00:40.215
so I'm going to use Send button here.

00:00:40.215 --> 00:00:42.190
But into the sand matter,

00:00:42.190 --> 00:00:47.510
we need to pass this request and what kind of response I'm retrieving it back.

00:00:47.510 --> 00:00:49.505
So this is my request.

00:00:49.505 --> 00:00:54.125
So, you know, what kind of

00:00:54.125 --> 00:01:00.450
response you are going to come up here by the spring or something else.

00:01:02.260 --> 00:01:09.440
So we can use the body handler which is available inside of the HTTP response.

00:01:09.440 --> 00:01:11.600
So use a hashtag response.

00:01:11.600 --> 00:01:13.880
And it's a functional interface.

00:01:13.880 --> 00:01:19.775
And body handler.

00:01:19.775 --> 00:01:25.610
And I'm going to handle the string data.

00:01:25.610 --> 00:01:29.330
So this is simple one,

00:01:29.330 --> 00:01:30.980
so I'm retrieving the data.

00:01:30.980 --> 00:01:34.550
I'm calling an API and I'm going to process the response as a string.

00:01:34.550 --> 00:01:35.600
Pretty cool.

00:01:35.600 --> 00:01:38.540
Okay, so I want to do the same thing,

00:01:38.540 --> 00:01:41.750
but I don't want to harmless a string.

00:01:41.750 --> 00:01:45.785
I want to write the response into another file.

00:01:45.785 --> 00:01:48.965
Not a big changes, it is simple one.

00:01:48.965 --> 00:01:52.280
So instead of Bardot am in body handler that

00:01:52.280 --> 00:01:56.360
string we're going to use as a final seven-year use file.

00:01:56.360 --> 00:02:01.250
We need to use the paths to get which phylum you're going to use it.

00:02:01.250 --> 00:02:03.230
So I'm going to use parts of that.

00:02:03.230 --> 00:02:08.490
Good and create a file m and n, for example, sample.

00:02:09.400 --> 00:02:16.939
That is pretty simple. Okay, so now I got the response.

00:02:16.939 --> 00:02:19.115
So what we'll available in the response,

00:02:19.115 --> 00:02:22.080
there are three things available in the response.

00:02:23.230 --> 00:02:24.575
Right?

00:02:24.575 --> 00:02:26.870
So what are the three things available in the response?

00:02:26.870 --> 00:02:30.960
The first thing, it contains status,

00:02:31.240 --> 00:02:35.300
and the second item it is contained header.

00:02:35.300 --> 00:02:37.880
And the third one, very important thing.

00:02:37.880 --> 00:02:46.020
And somebody, so status will confined by their success.

00:02:46.410 --> 00:02:52.459
And header will contain the information.

00:02:52.950 --> 00:02:58.945
Say T-cell count, any information a boat, body.

00:02:58.945 --> 00:03:01.705
And body contains the data.

00:03:01.705 --> 00:03:04.180
The basically the header is contains

00:03:04.180 --> 00:03:07.375
what is the data and what kind of data I'm dealing with,

00:03:07.375 --> 00:03:09.580
and then some Meta information.

00:03:09.580 --> 00:03:13.975
So these are the three important things which are going to use incident response.

00:03:13.975 --> 00:03:15.460
I'm in the HTTP response.

00:03:15.460 --> 00:03:18.370
But animating in save the status itself,

00:03:18.370 --> 00:03:22.165
we have a different kind of I mean,

00:03:22.165 --> 00:03:24.720
different kind of status as like let me,

00:03:24.720 --> 00:03:26.575
let me create a shared screen, okay?

00:03:26.575 --> 00:03:29.930
Status. The first one,

00:03:29.930 --> 00:03:36.450
1 x x, which will adding but information.

00:03:37.300 --> 00:03:41.035
So for example, if you're doing some process, we are calling an API.

00:03:41.035 --> 00:03:44.900
You will get some message saying like the process,

00:03:44.900 --> 00:03:46.820
the API is still call is still going.

00:03:46.820 --> 00:03:49.460
So do not close the browser.

00:03:49.460 --> 00:03:51.215
So the payment gateways running,

00:03:51.215 --> 00:03:54.980
so do not close them, but also that kind of informative information.

00:03:54.980 --> 00:04:01.229
And then what happened to execs 200, which means success.

00:04:01.270 --> 00:04:07.265
What else? A3x identify types of status are available allowed, okay.

00:04:07.265 --> 00:04:11.075
And in case if you're trying to call an API Minnesota and any website,

00:04:11.075 --> 00:04:17.345
and it was down and they have a rule in place retiring to some other domains.

00:04:17.345 --> 00:04:22.970
So the redirect will take parts of entry XX, like 300.

00:04:22.970 --> 00:04:27.950
And what will be the four hundred and four hundred and seven columns of four x x.

00:04:27.950 --> 00:04:29.990
So which will contain the client.

00:04:29.990 --> 00:04:31.910
Are they issue the client,

00:04:31.910 --> 00:04:35.330
for example, the request issue are some format issue.

00:04:35.330 --> 00:04:39.170
And five x is five x X,

00:04:39.170 --> 00:04:43.610
which is nothing but the adder from the server issue.

00:04:43.610 --> 00:04:45.725
When you are heating the slower,

00:04:45.725 --> 00:04:48.725
you might end up with the ADA saying legs are various down.

00:04:48.725 --> 00:04:50.705
So try after some time,

00:04:50.705 --> 00:04:54.740
those kind of had us has been handled in the server issue.

00:04:54.740 --> 00:04:57.890
So we know all the required information.

00:04:57.890 --> 00:05:01.970
So using this information, what we're going to do,

00:05:01.970 --> 00:05:05.105
we're going to create this simple high strategic client

00:05:05.105 --> 00:05:07.730
and that aqueous and we're going to call our API and we are

00:05:07.730 --> 00:05:14.940
receiving the response and we're exploiting what did the response contains?
