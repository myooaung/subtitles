WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.290
So far we discussed what is RA and what is collection and waited.

00:00:04.290 --> 00:00:07.740
We move on to adding some collection and how that is looks like,

00:00:07.740 --> 00:00:10.200
how do we use them and collection.

00:00:10.200 --> 00:00:12.480
So we're going to see an example right now.

00:00:12.480 --> 00:00:14.010
So how we can use Ariana,

00:00:14.010 --> 00:00:15.645
how we can use a collection.

00:00:15.645 --> 00:00:18.990
So let me open my Eclipse here.

00:00:18.990 --> 00:00:21.435
So I have a netlist critter.

00:00:21.435 --> 00:00:24.270
So just erase with his collection examples.

00:00:24.270 --> 00:00:28.240
So what I'm gonna do, the first thing, John, array.

00:00:28.310 --> 00:00:32.500
Let me create a simple array to show you what is it.

00:00:32.500 --> 00:00:35.180
Important thing which we need to take it down here.

00:00:35.180 --> 00:00:38.870
So I'm going to create a new string array.

00:00:38.870 --> 00:00:40.445
So it will accept,

00:00:40.445 --> 00:00:42.930
for example, a 100 elements here.

00:00:43.840 --> 00:00:45.125
Right?

00:00:45.125 --> 00:00:46.430
So now what I'm gonna do,

00:00:46.430 --> 00:00:49.460
I create an array which holds one long string.

00:00:49.460 --> 00:00:54.590
So the first concept has been achieved here because it is tightly coupled.

00:00:54.590 --> 00:00:58.385
This particular string at it belongs to only during that month.

00:00:58.385 --> 00:01:01.560
So let me add some data and do it.

00:01:01.750 --> 00:01:05.495
For example, I'm going to add John here.

00:01:05.495 --> 00:01:09.485
John and let me add someone else.

00:01:09.485 --> 00:01:12.540
May have Manti here.

00:01:18.670 --> 00:01:20.045
Okay.

00:01:20.045 --> 00:01:22.310
So we have Nancy.

00:01:22.310 --> 00:01:24.890
So now so far we don't have any issues.

00:01:24.890 --> 00:01:26.570
It is looks pretty good.

00:01:26.570 --> 00:01:31.190
But when I'm trying to add some other different data,

00:01:31.190 --> 00:01:36.680
I know that this particular arrays one lib belongs to a string,

00:01:36.680 --> 00:01:39.900
but I'm trying to put some impeded into it.

00:01:40.960 --> 00:01:44.030
And I'm probably some data here.

00:01:44.030 --> 00:01:49.640
See you whatever it is throwing an error because it is tightly coupled with

00:01:49.640 --> 00:01:54.725
highly layer will raise one lib belongs to string element.

00:01:54.725 --> 00:01:56.915
So that's what we're trying to prove it here.

00:01:56.915 --> 00:01:58.610
Arrays of type safety.

00:01:58.610 --> 00:02:01.895
So once you've decided what kind of array which we are going to use,

00:02:01.895 --> 00:02:06.230
you can add some other element and it is reliable and it is tightly coupled.

00:02:06.230 --> 00:02:08.840
And if it is some wrong type of data,

00:02:08.840 --> 00:02:10.220
if you're trying to add it,

00:02:10.220 --> 00:02:12.305
we'll draw our competitors.

00:02:12.305 --> 00:02:14.090
So we haven't seen anything yet.

00:02:14.090 --> 00:02:16.400
So how would is going to be again collections.

00:02:16.400 --> 00:02:17.750
So let me create a Collection,

00:02:17.750 --> 00:02:19.985
example of collection here.

00:02:19.985 --> 00:02:28.500
Silicon critics and collections list ally is equal to ArrayList.

00:02:33.460 --> 00:02:36.570
So we need to input.

00:02:38.470 --> 00:02:41.720
I got a bigger deal and we need to embody,

00:02:41.720 --> 00:02:43.865
I really stress with sedan.

00:02:43.865 --> 00:02:46.070
So what I'm gonna do, so now I have

00:02:46.070 --> 00:02:50.300
a collection which can take any kind of data or any form of data.

00:02:50.300 --> 00:02:51.500
It can be literal string,

00:02:51.500 --> 00:02:53.255
it can be live stuff integer,

00:02:53.255 --> 00:02:56.150
or it can be linked up something else. Let's start something else.

00:02:56.150 --> 00:02:59.255
Also said we tried to add something here,

00:02:59.255 --> 00:03:03.590
like what I did earlier for artery.

00:03:03.590 --> 00:03:05.165
I'm going to do the same thing here.

00:03:05.165 --> 00:03:10.220
So a les dot add,

00:03:10.220 --> 00:03:12.800
and I'm going to add Nancy here.

00:03:12.800 --> 00:03:14.974
So, so far nauseous.

00:03:14.974 --> 00:03:22.380
And now I'm going to add some different types of data here, new integer.

00:03:22.960 --> 00:03:30.710
And can you see what happened here?

00:03:30.710 --> 00:03:32.970
There is no error here.

00:03:33.820 --> 00:03:38.570
Because the collection which will accept all kind of data are our form of

00:03:38.570 --> 00:03:43.115
a data could drive.

00:03:43.115 --> 00:03:52.260
So let me print this, sorry, this flow.

00:03:56.470 --> 00:04:06.920
And then I'm going to append a string array. Okay?

00:04:06.920 --> 00:04:12.380
So I'm gonna s and I'm going to bring down,

00:04:12.380 --> 00:04:20.250
Let's also list collection.

00:04:24.790 --> 00:04:27.035
So now what we're going to do,

00:04:27.035 --> 00:04:35.870
Let's try to run the code and we'll see what is going to happen here.

00:04:35.870 --> 00:04:46.220
So particularly, write a Java application.

00:04:46.220 --> 00:04:48.350
I was going to happen here,

00:04:48.350 --> 00:04:51.410
John 90 and 15.

00:04:51.410 --> 00:04:54.470
Right? So we're pretty good

00:04:54.470 --> 00:04:57.960
there because this particular list can occur anywhere enough data.

00:04:58.120 --> 00:05:04.070
The problem is, it is not type-safe. Be great.

00:05:04.070 --> 00:05:06.065
I can add any gain of data.

00:05:06.065 --> 00:05:09.545
But that's what we're gonna do our next slide.

00:05:09.545 --> 00:05:13.430
To enable type safety and resulted casting so we know

00:05:13.430 --> 00:05:17.120
what is the type safety and we have seen it for awhile.

00:05:17.120 --> 00:05:19.250
So what is typecasting?

00:05:19.250 --> 00:05:20.090
Right.

00:05:20.090 --> 00:05:22.640
So basically I have yourselves. Do you hear me?

00:05:22.640 --> 00:05:24.050
Yes, ma'am.

00:05:24.050 --> 00:05:26.045
All right. I'm going to replace it now.

00:05:26.045 --> 00:05:28.370
So what I'm gonna do, string,

00:05:28.370 --> 00:05:30.275
my name, is it called,

00:05:30.275 --> 00:05:32.780
I can directly do ISAF 0.

00:05:32.780 --> 00:05:37.940
Do we need any type cosine here because this particular array belongs to S.

00:05:37.940 --> 00:05:42.200
So whatever comes in is going to be a string,

00:05:42.200 --> 00:05:44.795
so it is paid clickable.

00:05:44.795 --> 00:05:47.390
And typecasting it non necessary here.

00:05:47.390 --> 00:05:49.280
But in this scenario,

00:05:49.280 --> 00:05:52.200
I could try to do the same here.

00:05:52.300 --> 00:05:59.310
String main one is equal to a dot one.

00:05:59.950 --> 00:06:04.250
So now it is an error. What happened because a list is,

00:06:04.250 --> 00:06:06.365
will accept all kinda of a data.

00:06:06.365 --> 00:06:10.385
So we don't know what kind of data on whether the drill as a panda first element.

00:06:10.385 --> 00:06:14.160
So we need to provide the typecasting here.

00:06:14.590 --> 00:06:19.175
Right now that I was console here tightly coupled and

00:06:19.175 --> 00:06:23.270
type safety and no casting here loosely coupled.

00:06:23.270 --> 00:06:27.560
And we need to have typecasting and it is not a type safety.

00:06:27.560 --> 00:06:29.795
So to overcome the diet,

00:06:29.795 --> 00:06:32.690
type safety in collection in 1.5,

00:06:32.690 --> 00:06:34.715
the general, if you haven't been introduced,

00:06:34.715 --> 00:06:38.285
I'm going to show you a simple example how the database is going to work.

00:06:38.285 --> 00:06:41.375
And I'm from one from that particular place.

00:06:41.375 --> 00:06:42.810
Thank you.
