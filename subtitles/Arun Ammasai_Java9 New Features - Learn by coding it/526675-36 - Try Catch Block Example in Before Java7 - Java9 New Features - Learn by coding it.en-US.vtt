WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.815
Hello everyone, welcome back.

00:00:01.815 --> 00:00:04.140
Let's see how the traditional try block

00:00:04.140 --> 00:00:07.080
looks like and then we'll jump into that real time example.

00:00:07.080 --> 00:00:11.460
So this is a traditional way of gray and a catch block.

00:00:11.460 --> 00:00:14.265
And finally, try which always contains a vulnerable code,

00:00:14.265 --> 00:00:19.215
or you can call them as risky code because the dried sludge, the try block,

00:00:19.215 --> 00:00:21.690
it may throw an exception or

00:00:21.690 --> 00:00:24.390
it may not throw an exception is thrown exception we

00:00:24.390 --> 00:00:27.735
have alternate could Watson had to be done if it is an exception?

00:00:27.735 --> 00:00:29.880
And we always have a finally,

00:00:29.880 --> 00:00:34.095
which doesn't get up toward the water catch is three.

00:00:34.095 --> 00:00:36.995
It will still execute the finally always

00:00:36.995 --> 00:00:40.930
or we can simply sediments and clean up being the resource.

00:00:40.930 --> 00:00:49.445
So the how the code has been modified in Java 7 with the resources cry.

00:00:49.445 --> 00:00:53.134
Within the parentheses, we have to pass a resource.

00:00:53.134 --> 00:00:55.730
And again though, try-block cord.

00:00:55.730 --> 00:01:01.415
And we have that the cache block water happening if any exception rise in the try block.

00:01:01.415 --> 00:01:02.900
So, but here we don't know.

00:01:02.900 --> 00:01:06.215
Finally, because the clothes

00:01:06.215 --> 00:01:09.980
are clean up thing which you will complete it in the try block itself.

00:01:09.980 --> 00:01:12.830
11 is a try-block is finished automatically,

00:01:12.830 --> 00:01:14.720
that is, so there have been closed.

00:01:14.720 --> 00:01:18.120
So let's talk about some simple example.

00:01:18.520 --> 00:01:22.290
So I'm going to create a new class here.

00:01:28.960 --> 00:01:33.510
So let me create a new class.

00:01:55.120 --> 00:01:57.660
Before.

00:02:06.100 --> 00:02:10.830
Let's try this simple example how the drag edges looks like.

00:02:14.680 --> 00:02:19.895
So here, let's try and a catch block.

00:02:19.895 --> 00:02:30.930
And also we have a finally block up here, some resource.

00:02:30.970 --> 00:02:32.180
And

00:02:32.180 --> 00:02:33.630
here

00:02:40.420 --> 00:02:43.290
we can simply say it.

00:02:51.130 --> 00:02:56.150
Right? So this is our traditional try-catch block will be looks like.

00:02:56.150 --> 00:02:57.530
So let's create a resource.

00:02:57.530 --> 00:03:00.270
I'm going to use some BufferedReader here.

00:03:00.940 --> 00:03:04.145
Well, for VR is equal to,

00:03:04.145 --> 00:03:10.040
for now I'm going to go to the null so I can use the BufferedReader in the finally block.

00:03:10.040 --> 00:03:14.810
So if you're providing the BufferedReader entire try-block, I mean the try-block.

00:03:14.810 --> 00:03:16.670
It won't be the symbol for the finally block.

00:03:16.670 --> 00:03:20.555
That is another reason the Java sound comes into place at the resources.

00:03:20.555 --> 00:03:23.570
Let me write a simple core here.

00:03:23.570 --> 00:03:26.825
Vr is equal to new reader,

00:03:26.825 --> 00:03:29.850
which will accept don't know FileReader.

00:03:31.420 --> 00:03:34.610
I'm reaching out to some test protect somebody.

00:03:34.610 --> 00:03:36.950
I don't have the test data file here,

00:03:36.950 --> 00:03:39.890
so anyway, it has to throw a finite one exception.

00:03:39.890 --> 00:03:41.870
So I'm looking for some exception anyway.

00:03:41.870 --> 00:03:50.040
So here what I'm gonna do exception block.

00:03:53.860 --> 00:03:56.855
Here you can write some code.

00:03:56.855 --> 00:03:59.615
For example, if you're doing database operation,

00:03:59.615 --> 00:04:01.550
in case if something happened in the try block,

00:04:01.550 --> 00:04:10.085
you can revert the entire session on flush that data, something like that.

00:04:10.085 --> 00:04:13.100
And again here, the cleanup code,

00:04:13.100 --> 00:04:14.825
what is a resource here?

00:04:14.825 --> 00:04:21.095
So buffer is my resource. So what happened?

00:04:21.095 --> 00:04:23.855
I need to use the try-catch block here.

00:04:23.855 --> 00:04:29.375
Ordinance. I can use the throws exception. So that is what happened.

00:04:29.375 --> 00:04:36.035
See, even though I can tell you when the exception is handled,

00:04:36.035 --> 00:04:39.170
when you're using, when you're closing a particular resource,

00:04:39.170 --> 00:04:42.635
there is a possibility of exception rice.

00:04:42.635 --> 00:04:47.705
So what we need to do when you do use the try block inside the BR close.

00:04:47.705 --> 00:04:54.570
So let me put it in a simple way so we can see how the code has been.

00:04:55.270 --> 00:05:00.810
Try catch block here.

00:05:01.690 --> 00:05:06.810
Let's

00:05:15.430 --> 00:05:16.820
take a look

00:05:16.820 --> 00:05:17.930
at the lines of code.

00:05:17.930 --> 00:05:20.810
How many lines of code we have written here.

00:05:20.810 --> 00:05:25.820
Just because closing data sources,

00:05:25.820 --> 00:05:28.680
let's run this and see

00:05:36.870 --> 00:05:41.740
test.txt. I mean, test.txt file does not exist again and again,

00:05:41.740 --> 00:05:44.425
which is not existing. So always.

00:05:44.425 --> 00:05:47.590
When you see NullPointerException,

00:05:47.590 --> 00:05:54.580
line number 19. So what happened here?

00:05:54.580 --> 00:05:57.490
I am saying I'll connects up to near. Okay, this is a problem.

00:05:57.490 --> 00:06:03.025
So I have the buffered reader and in exception block I did not provide any handler.

00:06:03.025 --> 00:06:05.110
So what I need to do in good faith exception,

00:06:05.110 --> 00:06:07.160
so I need to print it.

00:06:08.730 --> 00:06:11.785
Print stack stress.

00:06:11.785 --> 00:06:14.380
Just printing the stack.

00:06:14.380 --> 00:06:16.390
So now we should be able to see that null point.

00:06:16.390 --> 00:06:20.690
I mean, the FileNotFoundException and also NullPointerException.

00:06:23.170 --> 00:06:26.720
Now we have the FileNotFoundException which

00:06:26.720 --> 00:06:30.680
test.txt and the finally will always be executed.

00:06:30.680 --> 00:06:33.440
The next example, let's look at a simple example

00:06:33.440 --> 00:06:38.070
how the try with resource has been introduced in Java 7.
