WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.550
Hello everyone, Welcome back.

00:00:02.550 --> 00:00:08.565
So we haven't seen a simple example on how to create a my first JP MS project.

00:00:08.565 --> 00:00:13.200
So let's talk about this is the one which we discussed earlier,

00:00:13.200 --> 00:00:19.995
how to export a model and how to import a model input mints requires here.

00:00:19.995 --> 00:00:26.430
And that is another picture here which indicates a service which is not exported.

00:00:26.430 --> 00:00:28.995
That means you are not able to, you,

00:00:28.995 --> 00:00:31.890
you won't be able to access the service model because it is not

00:00:31.890 --> 00:00:35.175
ex-post are exported to other models.

00:00:35.175 --> 00:00:37.150
It seemed done into my application.

00:00:37.150 --> 00:00:41.510
What are the other ways of exploiting things?

00:00:41.510 --> 00:00:44.105
So that is something called explicit export.

00:00:44.105 --> 00:00:44.885
Okay?

00:00:44.885 --> 00:00:48.500
Basically, I have two different modules and I don't

00:00:48.500 --> 00:00:52.940
want everyone can access my, my module.

00:00:52.940 --> 00:00:58.070
I wanted to specifically assign my package to somebody else only they can access.

00:00:58.070 --> 00:01:01.040
So those scenarios, what you can do,

00:01:01.040 --> 00:01:04.535
you can create a module and you need to export them.

00:01:04.535 --> 00:01:09.860
But export to specifically model some specific MLA in this scenario,

00:01:09.860 --> 00:01:12.380
I have a model or not, I'll model 2.

00:01:12.380 --> 00:01:15.515
So I had to export my model 1,

00:01:15.515 --> 00:01:17.315
2 specifically for model 2.

00:01:17.315 --> 00:01:24.185
So except model Danone can access my model.

00:01:24.185 --> 00:01:26.480
So if you want to explicitly export,

00:01:26.480 --> 00:01:28.205
you need to use a keyword to.

00:01:28.205 --> 00:01:29.585
This is a keyword.

00:01:29.585 --> 00:01:33.259
And here, model to require model one-to-one.

00:01:33.259 --> 00:01:36.305
So we are exploited specifically to model 2,

00:01:36.305 --> 00:01:39.170
which is the proper way to do it.

00:01:39.170 --> 00:01:40.820
And what are the other?

00:01:40.820 --> 00:01:43.400
We started something called transitive.

00:01:43.400 --> 00:01:45.590
So what is transitive?

00:01:45.590 --> 00:01:54.080
That is the question like, so BCE in exports and specifically export some other package.

00:01:54.080 --> 00:01:57.425
And why do I need a transitive here?

00:01:57.425 --> 00:02:02.885
For example, when, when you have employee model, okay.

00:02:02.885 --> 00:02:07.040
So employee model by internally required some different models employee,

00:02:07.040 --> 00:02:11.645
so our payroll service or departments or different kinds of models.

00:02:11.645 --> 00:02:13.205
And those kind of scenario.

00:02:13.205 --> 00:02:17.180
You don't have to require all of them.

00:02:17.180 --> 00:02:21.830
You can just require the transitive, the major model.

00:02:21.830 --> 00:02:26.540
Then what will happen? It has read access to the other models after.

00:02:26.540 --> 00:02:30.605
Okay, just take a look at the example in the screen right now.

00:02:30.605 --> 00:02:36.154
So here I have a model 1 which check sports com dot Java nine at model1.

00:02:36.154 --> 00:02:37.385
And along with that,

00:02:37.385 --> 00:02:40.895
It's requires com dot HG19 data service.

00:02:40.895 --> 00:02:42.065
Okay?

00:02:42.065 --> 00:02:45.230
And here, this is a model to model too.

00:02:45.230 --> 00:02:47.570
I mentioned required transitive conduct,

00:02:47.570 --> 00:02:49.100
hg19 dot model 1,

00:02:49.100 --> 00:02:53.240
which means I am looking for calm w1 and Model 1,

00:02:53.240 --> 00:02:54.575
which is exploited here.

00:02:54.575 --> 00:02:57.230
But since I've provided transitive here,

00:02:57.230 --> 00:03:01.775
I'll have read access to com dot hg19 dot services also.

00:03:01.775 --> 00:03:06.950
I don't have to specifically tell the compiler like I need

00:03:06.950 --> 00:03:12.169
that package that is called implied implied access.

00:03:12.169 --> 00:03:14.540
So when you accept, when you're,

00:03:14.540 --> 00:03:18.095
when you're able to access model 1 model and request some other package,

00:03:18.095 --> 00:03:19.430
some other models also.

00:03:19.430 --> 00:03:21.755
So by default you have access to them also

00:03:21.755 --> 00:03:25.260
when an accident the parent you will have access to the child.

00:03:27.640 --> 00:03:30.080
So what is static?

00:03:30.080 --> 00:03:35.405
And you can simply tell them a static is kind of optional.

00:03:35.405 --> 00:03:37.370
Okay, So when you're compiling,

00:03:37.370 --> 00:03:39.335
you may need some packages.

00:03:39.335 --> 00:03:42.020
But when the, when the application running in the class,

00:03:42.020 --> 00:03:43.910
but there are scenarios.

00:03:43.910 --> 00:03:46.640
You don't need the particular model.

00:03:46.640 --> 00:03:48.560
It can be optional.

00:03:48.560 --> 00:03:49.280
Okay?

00:03:49.280 --> 00:03:51.365
So in those scenarios,

00:03:51.365 --> 00:03:53.510
if you want to put some modules,

00:03:53.510 --> 00:03:54.635
it can be optional.

00:03:54.635 --> 00:03:58.280
So it may needed are it may not meet at those models.

00:03:58.280 --> 00:03:59.900
You can provide this static.

00:03:59.900 --> 00:04:04.730
So normally what happen if it is runtime, even in compile-time?

00:04:04.730 --> 00:04:09.170
If we don't have any packages, dependencies are available,

00:04:09.170 --> 00:04:12.230
we end up with an issue and in runtime will end up with

00:04:12.230 --> 00:04:15.950
a phone no class definition folder and right,

00:04:15.950 --> 00:04:21.110
when you're providing it static in class,

00:04:21.110 --> 00:04:24.320
but everything is running when this particular class file is looking

00:04:24.320 --> 00:04:29.240
for our axis by someone else and it isn't required static model.

00:04:29.240 --> 00:04:31.130
So if it is accessible,

00:04:31.130 --> 00:04:36.230
we will able to access or else it will be okay.

00:04:36.230 --> 00:04:40.860
It kinda Krishnan is not necessarily it has to be there.

00:04:43.120 --> 00:04:44.825
Okay?

00:04:44.825 --> 00:04:49.925
Just take a look at this particular example module graph.

00:04:49.925 --> 00:04:50.660
Okay?

00:04:50.660 --> 00:04:52.610
Just see what it would have done this.

00:04:52.610 --> 00:04:56.960
And I have a module one and module two.

00:04:56.960 --> 00:04:59.450
And I have something called Java database.

00:04:59.450 --> 00:05:01.700
What is Java Database?

00:05:01.700 --> 00:05:03.065
Right?

00:05:03.065 --> 00:05:06.650
So the very big concept which we

00:05:06.650 --> 00:05:10.010
need to discuss before we talking about the graphs we'll talk about in the next video.

00:05:10.010 --> 00:05:11.460
Thank you.
