WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.385
Hello everyone, Welcome back.

00:00:02.385 --> 00:00:06.015
So we discussed what is the problem with early versions of interface.

00:00:06.015 --> 00:00:09.660
So now what I'm going to do is I'm going to provide some implementation here,

00:00:09.660 --> 00:00:15.150
but it is going to be a default metallic default string method.

00:00:15.150 --> 00:00:18.195
Do I am providing some information here.

00:00:18.195 --> 00:00:22.180
Like this method is going to be written,

00:00:25.640 --> 00:00:36.645
written high and the data which is coming in or default method.

00:00:36.645 --> 00:00:41.845
And I say saying like I'm from default metadata.

00:00:41.845 --> 00:00:44.330
So now we are good.

00:00:44.330 --> 00:00:48.210
So initially all the interfaces,

00:00:48.340 --> 00:00:52.565
compilation error, it was showing a compilation error, now it is gone.

00:00:52.565 --> 00:00:53.720
But why is that?

00:00:53.720 --> 00:00:57.690
Let's show that. Led me.

00:00:58.000 --> 00:01:01.895
And the mother again like or else.

00:01:01.895 --> 00:01:04.205
Say hi one.

00:01:04.205 --> 00:01:07.625
So the moment I added, see what happened.

00:01:07.625 --> 00:01:14.570
All the class else getting compilation issue because I added an abstract method.

00:01:14.570 --> 00:01:17.240
So the hole is using my interface ID,

00:01:17.240 --> 00:01:18.800
they have to do the implementation.

00:01:18.800 --> 00:01:22.440
But since I added a default method here,

00:01:22.540 --> 00:01:25.535
since I added a default matter,

00:01:25.535 --> 00:01:29.375
if they interface example one need the implementation,

00:01:29.375 --> 00:01:32.735
they can override the matter and they can write

00:01:32.735 --> 00:01:37.085
their own implementation if introduced required in some time later,

00:01:37.085 --> 00:01:40.250
whenever they need, they can implement it, right?

00:01:40.250 --> 00:01:48.000
So let's override that methadone.

00:01:48.310 --> 00:01:51.980
So what I'm gonna do is so initially the matter

00:01:51.980 --> 00:01:54.815
has been written it was written a default matter, right.

00:01:54.815 --> 00:01:56.810
So I'm going to mention they've

00:01:56.810 --> 00:02:05.570
done message from interphase example one like this.

00:02:05.570 --> 00:02:07.760
So now the MSAL,

00:02:07.760 --> 00:02:09.800
the matter has been lower right order.

00:02:09.800 --> 00:02:18.305
So now what I can do, I can call another matter here, I1.me two.

00:02:18.305 --> 00:02:20.510
So now let's run it again.

00:02:20.510 --> 00:02:22.220
Now we'll see.

00:02:22.220 --> 00:02:24.260
Okay, so I need to print it right?

00:02:24.260 --> 00:02:30.575
So, so let me run it again.

00:02:30.575 --> 00:02:33.965
Now, you can see that as a message from interphase example,

00:02:33.965 --> 00:02:37.400
it can override or you can directly use them at that too.

00:02:37.400 --> 00:02:38.900
Right?

00:02:38.900 --> 00:02:40.865
Okay, so now it is good.

00:02:40.865 --> 00:02:45.620
But I want to write a method where nobody can read it,

00:02:45.620 --> 00:02:47.585
they can only use it.

00:02:47.585 --> 00:02:48.410
Okay?

00:02:48.410 --> 00:02:50.765
So for example, if you have a method here,

00:02:50.765 --> 00:02:53.495
so whoever wants it, they can use it,

00:02:53.495 --> 00:02:55.475
but they cannot do override it.

00:02:55.475 --> 00:02:58.235
But default method they can override, right?

00:02:58.235 --> 00:03:01.265
So I want to my torque which nobody can override.

00:03:01.265 --> 00:03:05.090
So that is where they introduced static method.

00:03:05.090 --> 00:03:15.180
So let's create a shouting whether you start digging into shouting matter.

00:03:15.190 --> 00:03:18.050
So just print something here.

00:03:18.050 --> 00:03:28.610
Oh, and from static method.

00:03:28.610 --> 00:03:30.320
So now what happen?

00:03:30.320 --> 00:03:32.885
Still, you will not get any compilation issue.

00:03:32.885 --> 00:03:36.230
So interface 1, if they want, they can use it.

00:03:36.230 --> 00:03:39.110
But another thing, if we take a look at the example here.

00:03:39.110 --> 00:03:41.360
So in this example I have an instance I1, right?

00:03:41.360 --> 00:03:48.410
Let's try to call the static method with the help of I1 dot static,

00:03:48.410 --> 00:03:50.180
but you wouldn't find it.

00:03:50.180 --> 00:03:52.130
The thing is it's a static method.

00:03:52.130 --> 00:03:56.240
It can be accessed one literal interface name.

00:03:56.240 --> 00:03:59.210
Even though if you have objects with different,

00:03:59.210 --> 00:04:00.770
you won't be able to call them.

00:04:00.770 --> 00:04:03.680
So you need to use the interface name and then you can

00:04:03.680 --> 00:04:07.310
call so interface dot static matter.

00:04:07.310 --> 00:04:08.705
Now it makes sense.

00:04:08.705 --> 00:04:10.040
Now it run.

00:04:10.040 --> 00:04:15.710
Now you can have that welcome matter from interphase example 1 and welcome Mr. John.

00:04:15.710 --> 00:04:17.720
And the message here,

00:04:17.720 --> 00:04:19.235
while we're at it metal message.

00:04:19.235 --> 00:04:22.715
And this is a matter which cannot be overrated by anybody else.

00:04:22.715 --> 00:04:24.440
So it always going to be the same,

00:04:24.440 --> 00:04:26.940
it is going to be static always.

00:04:27.010 --> 00:04:32.720
Right? So now we know what is the issue before,

00:04:32.720 --> 00:04:36.785
I mean before Jowett and what to overcome that issue.

00:04:36.785 --> 00:04:38.930
What has been introduced in Java,

00:04:38.930 --> 00:04:42.305
which is nothing but your default method and also a static method.

00:04:42.305 --> 00:04:46.070
And that is something else has

00:04:46.070 --> 00:04:49.490
been introduced in Java name which will overcome some other issue.

00:04:49.490 --> 00:04:52.200
So a truck over in the next video.
