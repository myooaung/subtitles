WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.445
Hello everyone, Welcome back.

00:00:02.445 --> 00:00:06.120
So we discussed how this looks like list and the set.

00:00:06.120 --> 00:00:10.240
Let's see, it's the same class to create my apples.

00:00:10.940 --> 00:00:13.620
Let's do that.

00:00:13.620 --> 00:00:16.290
So let's create a map.

00:00:16.290 --> 00:00:21.840
And the map is equal to the mother which are going to use is map.get off Matata.

00:00:21.840 --> 00:00:25.710
So when you use map dot,

00:00:25.710 --> 00:00:30.705
w should be able to see the number of metals has been overridden.

00:00:30.705 --> 00:00:33.645
So it may be any number of data.

00:00:33.645 --> 00:00:36.150
So I'm going to use the one for now.

00:00:36.150 --> 00:00:40.965
So my key is going to be an integer value like one,

00:00:40.965 --> 00:00:44.900
and Valley is going to be some name.

00:00:44.900 --> 00:00:47.210
I'm going to use the atom itself.

00:00:48.370 --> 00:00:57.420
So let me print it, run it now.

00:00:57.490 --> 00:01:06.140
So NullPointerException, so it is an appendix of the new year. Late is my bad.

00:01:06.140 --> 00:01:08.900
I should come on this one because one and compiling it'll say et al, right?

00:01:08.900 --> 00:01:10.730
I mean, when, when trying to execute the code,

00:01:10.730 --> 00:01:12.020
it will go through one by one, right?

00:01:12.020 --> 00:01:15.365
So when it is moving this line, we got another.

00:01:15.365 --> 00:01:17.120
So it will throw an error message.

00:01:17.120 --> 00:01:20.765
So just comment this line and then run it again.

00:01:20.765 --> 00:01:24.650
So now we've got the data in a map.

00:01:24.650 --> 00:01:26.175
Okay, let me add some more elements.

00:01:26.175 --> 00:01:30.755
Let's copy this and create one more,

00:01:30.755 --> 00:01:32.630
and then name them.

00:01:32.630 --> 00:01:34.640
And here I'm going to have a sum here.

00:01:34.640 --> 00:01:39.200
So I'm going to call the base and add one more person here.

00:01:39.200 --> 00:01:42.030
So let's have an answer here.

00:01:42.730 --> 00:01:46.505
Alright, let me print this one.

00:01:46.505 --> 00:01:48.860
So, so far no issues.

00:01:48.860 --> 00:01:53.570
So what will happen if they are duplicate?

00:01:53.570 --> 00:01:57.290
So that is a next question which will come into our mind, right?

00:01:57.290 --> 00:02:00.170
So value can be duplicated.

00:02:00.170 --> 00:02:03.575
That's not a problem, but the key is the matter here.

00:02:03.575 --> 00:02:09.245
So I highlight two key which has the same data 11.

00:02:09.245 --> 00:02:14.179
Let's run it again. Say this what we discussed in the slides.

00:02:14.179 --> 00:02:19.040
So then you're trying to add some duplicate elements or duplicate keys in it.

00:02:19.040 --> 00:02:23.700
It will draw been illegal argument exception.

00:02:24.040 --> 00:02:26.540
So what we'll have our next question.

00:02:26.540 --> 00:02:30.920
So what will happen if I'll add some null values in, into my map?

00:02:30.920 --> 00:02:33.230
Obviously, we'll end up with a NullPointerException, right?

00:02:33.230 --> 00:02:37.460
Let's check that out and introduce dot-dot name.

00:02:37.460 --> 00:02:41.130
I'm going to pass some null value here.

00:02:41.290 --> 00:02:44.735
So let's run it again and we'll see what's going to happen.

00:02:44.735 --> 00:02:47.780
So it is what we discussed, NullPointerException.

00:02:47.780 --> 00:02:50.000
So we tried to,

00:02:50.000 --> 00:02:53.495
we tried to pass duplicate and regarding the exception,

00:02:53.495 --> 00:02:58.610
and we tried to pass a null value and we got some NullPointerException.

00:02:58.610 --> 00:03:03.090
Okay, Let's change backward Anansi here.

00:03:04.840 --> 00:03:07.385
So what do one thing which is left.

00:03:07.385 --> 00:03:11.105
So we try to pass duplicate and null.

00:03:11.105 --> 00:03:13.805
Now when you try to modify the list,

00:03:13.805 --> 00:03:15.110
right, I have a map,

00:03:15.110 --> 00:03:18.330
right, ma'am, dot set.

00:03:18.370 --> 00:03:22.070
Second, we notice something.

00:03:22.070 --> 00:03:23.240
I'm trying to add something.

00:03:23.240 --> 00:03:25.445
Normally. If you want to add something,

00:03:25.445 --> 00:03:27.230
I just added the integer and string

00:03:27.230 --> 00:03:30.005
here to make sure whether I'm able to get anything here.

00:03:30.005 --> 00:03:37.310
So put we can pass your val key and the value here,

00:03:37.310 --> 00:03:40.550
so provided here and pass some values on it.

00:03:40.550 --> 00:03:43.890
So here I'm going to pass some form.

00:03:45.250 --> 00:03:48.485
Okay, so the reason I added integer and string,

00:03:48.485 --> 00:03:53.070
just to see clearly that I want to pass an integer and a string.

00:03:53.260 --> 00:03:55.475
So now I added a,

00:03:55.475 --> 00:03:58.805
I have a map which contains some unmodified list,

00:03:58.805 --> 00:04:03.305
and I print the data and then trying to modify the map.

00:04:03.305 --> 00:04:05.580
So let's see.

00:04:05.770 --> 00:04:10.385
See again the unsupported operation next apprentice, what happened?

00:04:10.385 --> 00:04:11.855
My colleagues and is already logged.

00:04:11.855 --> 00:04:13.130
So if you're trying to update,

00:04:13.130 --> 00:04:14.570
are trying to add something,

00:04:14.570 --> 00:04:16.985
you remove something, it is not going to walk.

00:04:16.985 --> 00:04:17.570
You.

00:04:17.570 --> 00:04:20.975
You're only allowed to use for us.

00:04:20.975 --> 00:04:25.160
Right? So, so these are

00:04:25.160 --> 00:04:28.010
the three major important colleagues and which we need

00:04:28.010 --> 00:04:30.890
to know about the factory method in,

00:04:30.890 --> 00:04:32.030
especially in Java nine.

00:04:32.030 --> 00:04:34.655
So these are a new concept as when it is in G11.

00:04:34.655 --> 00:04:37.070
And if you want to study furthermore,

00:04:37.070 --> 00:04:41.435
you need to know about a strong foundation, the immutable object.

00:04:41.435 --> 00:04:43.415
So how it is going to work on,

00:04:43.415 --> 00:04:45.845
you know that a string is immutable object.

00:04:45.845 --> 00:04:48.080
So not only the string,

00:04:48.080 --> 00:04:49.805
so that other wrapper classes,

00:04:49.805 --> 00:04:51.455
all of them are immutable objects, right?

00:04:51.455 --> 00:04:57.185
So if you want to study the immutable and then you can continue in this lecture.

00:04:57.185 --> 00:04:59.510
If you're not familiar with what is immutable,

00:04:59.510 --> 00:05:00.800
what is unmuted. Hello object on.

00:05:00.800 --> 00:05:03.990
All right, thank you.
