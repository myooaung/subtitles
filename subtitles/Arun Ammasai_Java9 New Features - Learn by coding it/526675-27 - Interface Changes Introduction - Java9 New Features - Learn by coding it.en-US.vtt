WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.740 --> 00:00:03.705
Hello everyone, Welcome back.

00:00:03.705 --> 00:00:08.235
So one another important enhancement in Zhao and n,

00:00:08.235 --> 00:00:10.680
the evolution of interface.

00:00:10.680 --> 00:00:13.110
So we know that what is the interface, okay,

00:00:13.110 --> 00:00:19.410
So the Java interfaces as been keep on updater in each and every lace.

00:00:19.410 --> 00:00:22.544
Okay, let's talk about the Java interfaces.

00:00:22.544 --> 00:00:28.065
How it is before geoid and how it is after injury,

00:00:28.065 --> 00:00:30.975
or how it is going to be in Java.

00:00:30.975 --> 00:00:32.940
Okay, So before Zhao eight,

00:00:32.940 --> 00:00:36.030
we know that the interfaces only contains

00:00:36.030 --> 00:00:39.680
the metadata declarations, no debt implementations.

00:00:39.680 --> 00:00:45.380
In Java it we are allowed to create a default and static methods,

00:00:45.380 --> 00:00:48.410
but in Java, Let's talk over it later.

00:00:48.410 --> 00:00:50.765
Once you completed table two steps,

00:00:50.765 --> 00:00:55.010
let me go to Eclipse and let me show you a simple example.

00:00:55.010 --> 00:01:01.020
Okay, Let me close other things with others.

00:01:01.090 --> 00:01:02.675
Okay?

00:01:02.675 --> 00:01:07.670
So here we need to talk about three things before Java it and enjoy it and after Java it,

00:01:07.670 --> 00:01:09.365
Let's create a simple example.

00:01:09.365 --> 00:01:12.320
I'm going to create a interface, okay?

00:01:12.320 --> 00:01:19.410
So interface before Java 8.

00:01:20.470 --> 00:01:22.880
So what basically it happen?

00:01:22.880 --> 00:01:26.765
So if it is an interface,

00:01:26.765 --> 00:01:28.700
it has only method,

00:01:28.700 --> 00:01:31.835
for example, wide method.

00:01:31.835 --> 00:01:34.200
I can call it as a mentor.

00:01:35.770 --> 00:01:41.075
Somebody that declaration, or you can declare a variable index is equal to 10.

00:01:41.075 --> 00:01:41.975
Okay?

00:01:41.975 --> 00:01:45.635
That is one thing which we need to know down here.

00:01:45.635 --> 00:01:47.930
Okay, so I haven't probably anything here.

00:01:47.930 --> 00:01:50.855
So by default, all the methods,

00:01:50.855 --> 00:01:52.775
it is a public abstract in,

00:01:52.775 --> 00:01:55.700
before July it public abstract,

00:01:55.700 --> 00:01:58.835
you don't have to mention public abstract and avoid a metonym.

00:01:58.835 --> 00:02:00.830
So even if you're not providing it,

00:02:00.830 --> 00:02:03.335
it is going to be a public abstract.

00:02:03.335 --> 00:02:03.920
Okay?

00:02:03.920 --> 00:02:07.370
The similarly, if you're declaring a variable into asked to

00:02:07.370 --> 00:02:12.480
be public static final by default.

00:02:12.910 --> 00:02:17.420
So that you can provide the public static public abstract here,

00:02:17.420 --> 00:02:19.010
or you can provide public abstract,

00:02:19.010 --> 00:02:20.990
I mean public static final here.

00:02:20.990 --> 00:02:21.995
Okay?

00:02:21.995 --> 00:02:24.590
So it's totally depends on us again.

00:02:24.590 --> 00:02:29.135
And then let's talk about what happened in Java 8.

00:02:29.135 --> 00:02:32.285
So when you create an interface in Java 8,

00:02:32.285 --> 00:02:42.005
Let's create interface in Java.

00:02:42.005 --> 00:02:45.350
So let's take the same exam example.

00:02:45.350 --> 00:02:51.425
I have an abstract method and I have a variable, a variable declaration.

00:02:51.425 --> 00:02:59.880
I can create default methods, default wide.

00:03:00.250 --> 00:03:03.035
And you can provide some implementations here.

00:03:03.035 --> 00:03:06.064
So default method has to be provider,

00:03:06.064 --> 00:03:08.555
some implement, I mean, some explanations.

00:03:08.555 --> 00:03:13.100
So just probably something you're welcome.

00:03:13.100 --> 00:03:17.015
Okay, so now we know in before Java 8,

00:03:17.015 --> 00:03:22.520
we can only create the method declarations and the initializing the variable.

00:03:22.520 --> 00:03:26.660
In Java it, we can have a default method also,

00:03:26.660 --> 00:03:32.705
we can have static method, static method 2.

00:03:32.705 --> 00:03:35.645
So here we're going to have something.

00:03:35.645 --> 00:03:37.910
Let's print something here.

00:03:37.910 --> 00:03:42.540
So I can call them is static.

00:03:43.480 --> 00:03:47.880
And we can call this as a default matter.

00:03:53.080 --> 00:03:56.150
So what are the changing?

00:03:56.150 --> 00:04:00.545
So in Java 7, before Java 8,

00:04:00.545 --> 00:04:03.470
we can have abstract methods.

00:04:03.470 --> 00:04:06.470
In Java it, we can have default matter.

00:04:06.470 --> 00:04:08.840
Also, we can have a static method.

00:04:08.840 --> 00:04:15.485
But in Java, we can have private methods and private static methods.

00:04:15.485 --> 00:04:16.745
Right?

00:04:16.745 --> 00:04:23.930
So let me tell you why these many upgrades in the Java interfaces so far.

00:04:23.930 --> 00:04:25.700
Now what I'm gonna do is I'm going to create

00:04:25.700 --> 00:04:27.755
a simple interface and I'm going to implement,

00:04:27.755 --> 00:04:29.360
and I want to explain how it is looking from

00:04:29.360 --> 00:04:32.105
the initial stages and how it was improved in Java it.

00:04:32.105 --> 00:04:37.500
And then we're jumping into how we did the modified in Java name.
