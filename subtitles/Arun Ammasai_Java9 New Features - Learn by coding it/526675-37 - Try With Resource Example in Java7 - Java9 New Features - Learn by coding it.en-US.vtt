WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.170 --> 00:00:03.105
Hello everyone, Welcome back.

00:00:03.105 --> 00:00:04.755
So we discussed about how

00:00:04.755 --> 00:00:08.280
acceleration try-catch block will looks like and how this works.

00:00:08.280 --> 00:00:11.445
So what I'm gonna do, I'm gonna create a new class.

00:00:11.445 --> 00:00:15.850
And we'll see how the try with resources have been greater.

00:00:17.960 --> 00:00:21.280
Try it.

00:00:21.280 --> 00:00:25.890
This example in Java 7.

00:00:26.020 --> 00:00:27.920
Finish.

00:00:27.920 --> 00:00:33.785
So we are going to implement the pretty much the same thing in this class also.

00:00:33.785 --> 00:00:36.020
So basically what we're looking for,

00:00:36.020 --> 00:00:39.770
we're looking for a BufferedReader of a reader.

00:00:39.770 --> 00:00:41.900
Let me write a try catch block here.

00:00:41.900 --> 00:00:46.295
As I said, the finally block is no more.

00:00:46.295 --> 00:00:48.300
We don't need it anymore.

00:00:50.650 --> 00:00:58.655
So let me write stuff here.

00:00:58.655 --> 00:01:00.740
I'm just simply copy pasting.

00:01:00.740 --> 00:01:03.060
So just to save some time.

00:01:03.280 --> 00:01:06.425
So now I hope Alpharetta this resource, right?

00:01:06.425 --> 00:01:09.510
So what I'm gonna do this.

00:01:13.330 --> 00:01:21.470
Okay, So how did try with resource will be looks like that dry matter parenthesis, right?

00:01:21.470 --> 00:01:23.975
Because in before Java seven,

00:01:23.975 --> 00:01:26.120
that is no brackets.

00:01:26.120 --> 00:01:29.615
After it, I gosh, I went and inline-block.

00:01:29.615 --> 00:01:33.650
But in Java 7, we can use brackets.

00:01:33.650 --> 00:01:37.560
Inside the bracket, we need to provide the resource.

00:01:38.050 --> 00:01:39.830
So what happened?

00:01:39.830 --> 00:01:40.670
What does it mean?

00:01:40.670 --> 00:01:44.255
So whenever this try-block has been closed,

00:01:44.255 --> 00:01:47.160
automatically interconnection be closed.

00:01:50.280 --> 00:01:54.970
So once the try block is close, in this case,

00:01:54.970 --> 00:01:57.970
if the line number 11 executor,

00:01:57.970 --> 00:02:00.565
the resource automatically closed,

00:02:00.565 --> 00:02:02.530
that is called auto closable.

00:02:02.530 --> 00:02:09.490
If you want to see, it can go to our dock.

00:02:09.490 --> 00:02:17.980
Are you can see auto

00:02:17.980 --> 00:02:27.250
closable documentation that again,

00:02:27.250 --> 00:02:31.610
seawater classes, which implements the auto glass,

00:02:31.610 --> 00:02:41.150
will say that a lot of classes buffer the buffer which we used,

00:02:41.150 --> 00:02:43.775
and buffer radar and byte array input from the road.

00:02:43.775 --> 00:02:48.245
Too many classes implements the auto closable.

00:02:48.245 --> 00:02:51.800
So most of the resources are no use to the article,

00:02:51.800 --> 00:02:54.470
whatever I mean, implements out to clusterable.

00:02:54.470 --> 00:02:58.190
Okay, now I don't need the finally block here.

00:02:58.190 --> 00:03:01.925
So what will happen? Let me read the code.

00:03:01.925 --> 00:03:06.480
Just copy paste the exception block here.

00:03:10.960 --> 00:03:19.850
Let me put some just to make sure that it is not allowing to execute.

00:03:19.850 --> 00:03:24.090
What is that instead, the time plot in case of any exception rice.

00:03:28.900 --> 00:03:31.950
Let me run this one.

00:03:34.180 --> 00:03:39.559
C Now, we got the same exception.

00:03:39.559 --> 00:03:44.660
But now we don't see the try block because I have an exception Re blog.

00:03:44.660 --> 00:03:48.410
So it's entirely skipped the try block and it came to the catch block.

00:03:48.410 --> 00:03:50.660
And it is saying exception block.

00:03:50.660 --> 00:03:53.270
So this is my error.

00:03:53.270 --> 00:03:59.480
Stack trace, so the file not found exception. Right?

00:03:59.480 --> 00:04:01.745
So it looks pretty fine red.

00:04:01.745 --> 00:04:05.960
Why I need to go for Java 9 and that rotation.

00:04:05.960 --> 00:04:07.490
Just take an example here.

00:04:07.490 --> 00:04:11.810
The try catch block is existing but the resource close,

00:04:11.810 --> 00:04:14.015
it's not available here because it's auto closable.

00:04:14.015 --> 00:04:20.600
So what will happen if any exception handled happens when I'm trying to do?

00:04:20.600 --> 00:04:23.195
In this scenario, it is suppressed.

00:04:23.195 --> 00:04:24.725
The exception is supposed to get,

00:04:24.725 --> 00:04:30.650
but still you should be able to see the exception strays in the logs are canceled.

00:04:30.650 --> 00:04:38.990
And also, we are able to use one-to-one resources here. So what happened?

00:04:38.990 --> 00:04:43.835
I have a multiple resources created when stack class initiator,

00:04:43.835 --> 00:04:47.480
and I need to use them inside the try block because those

00:04:47.480 --> 00:04:51.215
are not final, effectively final.

00:04:51.215 --> 00:04:53.670
So how to use them?

00:04:53.980 --> 00:04:56.900
One simple thing, I have an existing resource,

00:04:56.900 --> 00:04:59.045
I need to use it in the try block.

00:04:59.045 --> 00:05:01.550
But how are we gonna do that?

00:05:01.550 --> 00:05:04.560
Let's see it in a simple example.
