WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.370
Hello everyone, Welcome back.

00:00:02.370 --> 00:00:09.075
Let's talk about how we will create unmodified collection in Java 8.

00:00:09.075 --> 00:00:13.170
So we have to create a list in Java it,

00:00:13.170 --> 00:00:20.870
and then we need to add unmodified list into our collection.

00:00:20.870 --> 00:00:23.600
So this is a traditional way of creating a list of string.

00:00:23.600 --> 00:00:26.540
I have a list of string which contains a few names in it.

00:00:26.540 --> 00:00:31.370
And I'm converting my ArrayList into one modifiable list,

00:00:31.370 --> 00:00:33.095
and then I'm printing it.

00:00:33.095 --> 00:00:36.110
So this is a simpler way to create

00:00:36.110 --> 00:00:38.270
a non-modifiable list in Java it but

00:00:38.270 --> 00:00:40.820
looks how many number of lines of code I've written here.

00:00:40.820 --> 00:00:42.800
So for creating one single list,

00:00:42.800 --> 00:00:47.120
I had to go through these many number of codes and I had to specify,

00:00:47.120 --> 00:00:50.540
you need to make sure that this particular list as an unmodified list,

00:00:50.540 --> 00:00:53.480
if you're not providing the collection that unmodified list and

00:00:53.480 --> 00:00:57.350
it not becomes immutable list.

00:00:57.350 --> 00:01:02.150
Let's see how it is looks like in Java 9.

00:01:02.150 --> 00:01:06.755
Yan'an minted, smarter and the simpler and easier to code.

00:01:06.755 --> 00:01:09.935
So how we can create a list in javelin,

00:01:09.935 --> 00:01:15.215
simple list of string and an object name and then listed off.

00:01:15.215 --> 00:01:20.870
So that is the factory method which will help us to create the unmodified object.

00:01:20.870 --> 00:01:23.480
I'm not providing anything like list dot off

00:01:23.480 --> 00:01:25.970
on some data and I'm providing some unmodified list.

00:01:25.970 --> 00:01:28.790
I'm not promoting anything. The list dot off.

00:01:28.790 --> 00:01:35.150
The off method is a factory method which will create the unmodified list.

00:01:35.150 --> 00:01:37.205
So then we can print the data.

00:01:37.205 --> 00:01:39.470
Okay, Let's talk about other area.

00:01:39.470 --> 00:01:40.925
Okay, I have a list,

00:01:40.925 --> 00:01:45.315
I'm trying to add some elements and I'm printing it, but it is working.

00:01:45.315 --> 00:01:52.270
What will happen if I'm trying to add some elements into it in the later point,

00:01:52.270 --> 00:01:55.345
what happened and what will happen if I tried to,

00:01:55.345 --> 00:01:57.325
when I'm creating unmodified list?

00:01:57.325 --> 00:02:01.240
If I have another value in it, what will happen?

00:02:01.240 --> 00:02:03.430
And we know that that is a map, right?

00:02:03.430 --> 00:02:07.165
So when you're trying to add a duplicate value in a map board will happen obviously.

00:02:07.165 --> 00:02:09.670
So those things will talk about now.

00:02:09.670 --> 00:02:15.595
So when you're trying to modify an existing on modifiable list,

00:02:15.595 --> 00:02:20.095
we will get an exception saying like unsupported operation exception.

00:02:20.095 --> 00:02:23.065
So this is what happens when you're trying to add our update something.

00:02:23.065 --> 00:02:24.865
What if our null,

00:02:24.865 --> 00:02:27.405
it's a straightforward when you're trying to run.

00:02:27.405 --> 00:02:29.600
It will throw a NullPointerException.

00:02:29.600 --> 00:02:31.925
This will all happen in the runtime.

00:02:31.925 --> 00:02:37.805
And the next thing, so if I have a duplicate in my map, right?

00:02:37.805 --> 00:02:39.780
So what will happen?

00:02:39.790 --> 00:02:42.980
So we end up with illegal argument exception.

00:02:42.980 --> 00:02:44.210
These are the three important elements,

00:02:44.210 --> 00:02:46.595
edges we should know before we jump into them.

00:02:46.595 --> 00:02:50.970
Real code, right?

00:02:51.730 --> 00:02:56.510
Sharing mode eclipse, and then we'll see some examples of that.

00:02:56.510 --> 00:02:59.850
So let's create a new class here.

00:03:00.490 --> 00:03:04.410
Let's name it as an example.

00:03:07.120 --> 00:03:18.000
Let me change the name to faculty mentor package name and create a main method in it.

00:03:18.310 --> 00:03:20.315
Okay?

00:03:20.315 --> 00:03:22.820
So now what we're going to do.

00:03:22.820 --> 00:03:26.720
So we know that the one mutton which we need to use to

00:03:26.720 --> 00:03:33.425
create and modifiable collections of matter, right?

00:03:33.425 --> 00:03:37.940
So if it is a list,

00:03:37.940 --> 00:03:41.765
we are going to use list dot of metal.

00:03:41.765 --> 00:03:44.870
If it is a set of mud,

00:03:44.870 --> 00:03:46.565
that if it is a map,

00:03:46.565 --> 00:03:52.175
we're going to create a map of material, right?

00:03:52.175 --> 00:03:57.545
Okay, so how many methods that are available so easily anymore because I'm, I'm,

00:03:57.545 --> 00:04:00.935
I may be passing one parameter are two parameters are,

00:04:00.935 --> 00:04:03.995
if you're creating a list, you'll pass some elements, right?

00:04:03.995 --> 00:04:05.915
So how many elements you're going to pass?

00:04:05.915 --> 00:04:08.765
It's up to my one interest rate.

00:04:08.765 --> 00:04:10.175
I can pass one or two.

00:04:10.175 --> 00:04:12.875
Sometimes I'll pass it empty also.

00:04:12.875 --> 00:04:15.215
So how many mentors are available?

00:04:15.215 --> 00:04:19.490
Open the command prompt and I'll show you how many meters are available.

00:04:19.490 --> 00:04:31.080
So CGRP, and I'm going to use Java dot util dot list.

00:04:32.410 --> 00:04:37.655
It will show you what are the methods available under list class.

00:04:37.655 --> 00:04:39.980
Since this is the one which I'm talking about,

00:04:39.980 --> 00:04:42.350
just take a look at this particular thing.

00:04:42.350 --> 00:04:45.335
The last two lines.

00:04:45.335 --> 00:04:48.440
So the alphabet that happened multiple times,

00:04:48.440 --> 00:04:50.825
no arguments, singular humans, two arguments,

00:04:50.825 --> 00:04:53.240
up to 10 arguments.

00:04:53.240 --> 00:04:58.025
And that'll be another method which will take some variable x.

00:04:58.025 --> 00:05:00.725
It will take multiple number of arcs.

00:05:00.725 --> 00:05:03.095
But why do we need this minimum tax?

00:05:03.095 --> 00:05:05.180
So normally asks for the standard.

00:05:05.180 --> 00:05:09.830
The maximum scenario people will pass maximum up to ten elements.

00:05:09.830 --> 00:05:13.280
So they created I tend different metals

00:05:13.280 --> 00:05:16.355
while we're reading the same off my debt into tenths different methods,

00:05:16.355 --> 00:05:18.800
and we are passing different kind of parameters, 1, 2, 3.

00:05:18.800 --> 00:05:20.570
And I pretend that our scenarios,

00:05:20.570 --> 00:05:22.010
we might have more than ten elements.

00:05:22.010 --> 00:05:28.115
Then we can go further. The last one where we can pass the n number of elements.

00:05:28.115 --> 00:05:30.635
Okay, so how would it look like in a set?

00:05:30.635 --> 00:05:33.180
Its openness, it, and we'll see it.

00:05:34.510 --> 00:05:38.690
Cities pretty much the same thing off my that it

00:05:38.690 --> 00:05:43.655
has 0 element and one element or multiple elements are good ten elements.

00:05:43.655 --> 00:05:46.519
And also it have your number of arguments.

00:05:46.519 --> 00:05:49.535
Method also, so we can pass the n number of elements.

00:05:49.535 --> 00:05:53.730
Okay, let's talk about the map also. Take a look at a map.

00:05:53.950 --> 00:05:58.250
See mammary, which will accept an MD or

00:05:58.250 --> 00:06:02.645
a single p-value or multiple key-value up to 10 key-value pairs.

00:06:02.645 --> 00:06:04.970
And also the number of arguments.

00:06:04.970 --> 00:06:08.600
So you can pass n number of key-value pairs.

00:06:08.600 --> 00:06:15.365
So this is all you need to know about the list and sit and map methods, that off method.

00:06:15.365 --> 00:06:19.890
So we'll create a sample program and we'll see how it is going to work.
