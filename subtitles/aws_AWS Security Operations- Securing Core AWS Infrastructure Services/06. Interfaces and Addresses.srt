1
00:00:00,000 --> 00:00:06,574
In this clip we're going to take a look at interfaces and addressing, i.

2
00:00:06,574 --> 00:00:07,044
e.

3
00:00:07,044 --> 00:00:09,392
network interfaces on our instances.

4
00:00:09,392 --> 00:00:13,483
So when I look at an instance, I can have a number of network interfaces,

5
00:00:13,483 --> 00:00:17,142
this is how I'm going to communicate across either the public or

6
00:00:17,142 --> 00:00:19,942
private network and when my system starts up,

7
00:00:19,942 --> 00:00:22,937
I'll get a public and a private IP address,

8
00:00:22,937 --> 00:00:25,392
so what kind of public and private IP address.

9
00:00:25,392 --> 00:00:29,142
Well if I'm running in a VPC, then I can have a network interface.

10
00:00:29,142 --> 00:00:30,892
It kind of makes sense doesn't it?

11
00:00:30,892 --> 00:00:32,892
I'm on a network, I've got IP addresses,

12
00:00:32,892 --> 00:00:38,445
I've got subnetting, so in the VPC I define the networking that I want.

13
00:00:38,445 --> 00:00:44,339
Now the attributes of this NIC include a primary private IP version 4 address,

14
00:00:44,339 --> 00:00:48,550
the default network interface is always an eth0 and that

15
00:00:48,550 --> 00:00:50,655
can't be detached from the instance,

16
00:00:50,655 --> 00:00:53,813
so there's a little bit of Amazon control for you,

17
00:00:53,813 --> 00:00:57,392
but one or more secondary private IP addresses can be added.

18
00:00:57,392 --> 00:01:00,725
These include a public IP version 4 address and one

19
00:01:00,725 --> 00:01:04,234
or more IP version 6 addresses, and a MAC address.

20
00:01:04,234 --> 00:01:08,287
So we've got some flexibility for additional NICs and how I

21
00:01:08,287 --> 00:01:11,274
want my system to interface and communicate.

22
00:01:11,274 --> 00:01:15,510
Now the network interfaces are going to inherit the

23
00:01:15,510 --> 00:01:19,142
addressing from the subnet that you create or not,

24
00:01:19,142 --> 00:01:22,642
meaning that if you don't pay attention to the VPC,

25
00:01:22,642 --> 00:01:26,892
you'll have the default VPC with default IP addressing that's

26
00:01:26,892 --> 00:01:30,392
where your addresses will be chosen from.

27
00:01:30,392 --> 00:01:33,921
It almost goes without saying that public means public access from the

28
00:01:33,921 --> 00:01:37,546
internet and private means you're on the private network.

29
00:01:37,546 --> 00:01:42,392
So let's expand upon the private and public addresses.

30
00:01:42,392 --> 00:01:46,392
So doing a comparison with the public IP address versus the private IP address,

31
00:01:46,392 --> 00:01:48,392
first of all on the public side,

32
00:01:48,392 --> 00:01:52,445
it's assigned from a pool of public IP addresses that Amazon

33
00:01:52,445 --> 00:01:56,392
maintains and your system boots and depending on what you've

34
00:01:56,392 --> 00:02:02,392
defined when you built your instance, the addresses are assigned during launch.

35
00:02:02,392 --> 00:02:04,157
When your system turns off,

36
00:02:04,157 --> 00:02:08,392
your system doesn't need that address so the address is now disassociated,

37
00:02:08,392 --> 00:02:10,603
it's released back into the public pool.

38
00:02:10,603 --> 00:02:14,392
You turn your system back on, you get another public IP address.

39
00:02:14,392 --> 00:02:19,119
So if you think of a pool of web servers that's say auto-scaling,

40
00:02:19,119 --> 00:02:22,392
2, 3, 4, 6, 8 servers, addresses get assigned,

41
00:02:22,392 --> 00:02:24,301
systems aren't needed, addresses are taken back,

42
00:02:24,301 --> 00:02:25,392
systems are turned off.

43
00:02:25,392 --> 00:02:26,971
What about the private side?

44
00:02:26,971 --> 00:02:30,129
The private address is the primary on the private network

45
00:02:30,129 --> 00:02:35,249
based on the subnet that you're in, assigned to that default network interface,

46
00:02:35,249 --> 00:02:37,392
we talked about the eth0.

47
00:02:37,392 --> 00:02:42,192
On the public side, these addresses are not associated with your account,

48
00:02:42,192 --> 00:02:43,392
what's that mean?

49
00:02:43,392 --> 00:02:46,568
Well we'll talk about that in an upcoming slide.

50
00:02:46,568 --> 00:02:50,642
On the private side, they're associated using an elastic network interface,

51
00:02:50,642 --> 00:02:54,392
now the term that's interesting is the term elastic.

52
00:02:54,392 --> 00:02:58,392
There's a little bit of scalability with that address that we'll explore.

53
00:02:58,392 --> 00:03:01,392
On the public side, yeah it's accessible from the internet, we would think that.

54
00:03:01,392 --> 00:03:04,627
On the private side, hey it's not routable through the internet,

55
00:03:04,627 --> 00:03:07,234
it's on the private network, private means private.

56
00:03:07,234 --> 00:03:08,918
On the public side,

57
00:03:08,918 --> 00:03:14,392
use an elastic IP address if you want a persistent public IP address.

58
00:03:14,392 --> 00:03:17,392
Ah-hah, so I can have an address if I want it always to be the same.

59
00:03:17,392 --> 00:03:18,792
Why would I care?

60
00:03:18,792 --> 00:03:20,542
Oh yeah, load balancer right?

61
00:03:20,542 --> 00:03:25,007
So there'll be times when you might require an IP address to be

62
00:03:25,007 --> 00:03:28,392
persistent and there will be times when you won't need that.

63
00:03:28,392 --> 00:03:29,821
On the private side,

64
00:03:29,821 --> 00:03:33,392
well communication with the other instances on the private network.

65
00:03:33,392 --> 00:03:36,392
So address schemes, public and private.

66
00:03:36,392 --> 00:03:40,392
Now let's go into the elastic concept, the elastic network interface.

67
00:03:40,392 --> 00:03:46,487
So we've got two systems, an orange NIC hanging out with the system on the left,

68
00:03:46,487 --> 00:03:49,503
if I want additional interfaces, well I create them.

69
00:03:49,503 --> 00:03:53,392
I go into my account and say I'd like to create a new interface.

70
00:03:53,392 --> 00:03:55,842
If I then detach that network interface,

71
00:03:55,842 --> 00:03:59,342
assuming I'm allowed to, the first private one I can't,

72
00:03:59,342 --> 00:04:05,609
others I can, so I detach it and I reattach it on a second system.

73
00:04:05,609 --> 00:04:11,292
So the idea is that when a network interface moves from one instance,

74
00:04:11,292 --> 00:04:17,142
say the instance on our left, to the other instance on the right,

75
00:04:17,142 --> 00:04:19,392
the traffic will be redirected.

76
00:04:19,392 --> 00:04:23,517
It doesn't know any better, it's going to that IP address,

77
00:04:23,517 --> 00:04:25,392
to the new interface location.

78
00:04:25,392 --> 00:04:30,024
So it's something that we can do for failover or control.

79
00:04:30,024 --> 00:04:36,392
Along with the elastic network interface, we have elastic IP addresses.

80
00:04:36,392 --> 00:04:39,192
So these are where the account comes in.

81
00:04:39,192 --> 00:04:43,392
So the static IP version 4 address is linked to your account,

82
00:04:43,392 --> 00:04:47,792
much like when we looked at IAM and setting up policy,

83
00:04:47,792 --> 00:04:49,392
linked to our account.

84
00:04:49,392 --> 00:04:51,740
So we allocate the address, once we request it,

85
00:04:51,740 --> 00:04:52,522
to my account,

86
00:04:52,522 --> 00:04:56,704
then it's up to me to decide where I'm going to associate that address.

87
00:04:56,704 --> 00:05:02,392
Well the only place I can associate it is with a network interface.

88
00:05:02,392 --> 00:05:06,546
Public IP version 4 addresses are elastic IP addresses,

89
00:05:06,546 --> 00:05:08,392
reachable from the internet.

90
00:05:08,392 --> 00:05:10,918
Now hiding the failure of an instance, yeah,

91
00:05:10,918 --> 00:05:13,445
I can remap the address to another instance,

92
00:05:13,445 --> 00:05:14,392
kind of cool.

93
00:05:14,392 --> 00:05:17,992
Again, part of the toolbox for failover or DR.

94
00:05:17,992 --> 00:05:22,392
When I have an elastic IP address that's not in use,

95
00:05:22,392 --> 00:05:25,249
it remains in my account, I'll get charged for it,

96
00:05:25,249 --> 00:05:26,392
until I delete it.

97
00:05:26,392 --> 00:05:30,157
Once I delete it, I'm not being charged.

98
00:05:30,157 --> 00:05:33,451
So elastic IP addresses, elastic network adapters,

99
00:05:33,451 --> 00:05:36,392
giving us the ability for failover.

100
00:05:36,392 --> 00:05:39,821
So a public IP address auto-assigned by AWS,

101
00:05:39,821 --> 00:05:42,392
could that be considered more secure?

102
00:05:42,392 --> 00:05:46,210
In some cases yes because if somebody is trying to hack me,

103
00:05:46,210 --> 00:05:49,392
they won't be able to go back to that address.

104
00:05:49,392 --> 00:05:50,725
By the same token,

105
00:05:50,725 --> 00:05:55,392
why do I have a public IP address without protection in the first place?

106
00:05:55,392 --> 00:05:57,535
So it might be kind of a redundant argument.

107
00:05:57,535 --> 00:06:01,847
If it's just for a pool of web servers, let those addresses be assigned by AWS.

108
00:06:01,847 --> 00:06:07,301
You don't need an elastic IP address in that case because you have a pool

109
00:06:07,301 --> 00:06:11,309
of web servers and you have failover within that pool.

110
00:06:11,309 --> 00:06:14,249
Alright let's move on to placement groups.

111
00:06:14,249 --> 00:06:19,392
Now placement groups are instances that are logically grouped together within an

112
00:06:19,392 --> 00:06:25,614
availability zone and I need a placement group or I want a placement group

113
00:06:25,614 --> 00:06:29,492
because I want performance on the same 10 Gb network.

114
00:06:29,492 --> 00:06:31,242
Why do I want this?

115
00:06:31,242 --> 00:06:34,042
Well applications that need low network latency and

116
00:06:34,042 --> 00:06:35,503
high throughput across the network.

117
00:06:35,503 --> 00:06:36,892
So this might be obvious,

118
00:06:36,892 --> 00:06:40,642
but you should choose an instance type that supports enhanced networking,

119
00:06:40,642 --> 00:06:44,392
otherwise you won't get enhanced networking.

120
00:06:44,392 --> 00:06:47,392
You could also choose single root I/O virtualization.

121
00:06:47,392 --> 00:06:50,017
Now this gives you pretty enhanced networking,

122
00:06:50,017 --> 00:06:53,059
pretty high performance on the instances that support this,

123
00:06:53,059 --> 00:06:55,392
you're taking the load off the CPU.

124
00:06:55,392 --> 00:06:57,106
And so it could be quite a handy feature,

125
00:06:57,106 --> 00:06:59,011
of course the other aspect is the operating system of

126
00:06:59,011 --> 00:07:01,192
the application has to support that, of course.

127
00:07:01,192 --> 00:07:08,000
Again, a couple of additional scenarios as to ways I could group my instances together.

