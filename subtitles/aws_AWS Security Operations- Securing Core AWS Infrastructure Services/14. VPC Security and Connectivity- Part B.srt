1
00:00:00,000 --> 00:00:03,924
In this continuation clip of VPC security,

2
00:00:03,924 --> 00:00:08,409
we're going to look at security groups, NACLs,

3
00:00:08,409 --> 00:00:10,530
and connectivity options.

4
00:00:10,530 --> 00:00:14,244
We ended off our last clip taking a look at the multi-tier security

5
00:00:14,244 --> 00:00:17,280
groups and some examples of how we could setup security.

6
00:00:17,280 --> 00:00:19,530
So let's look at an example.

7
00:00:19,530 --> 00:00:22,824
Let's take an example of Wired Brain Coffee,

8
00:00:22,824 --> 00:00:26,530
the coffee growers in Australia, a three tier architecture,

9
00:00:26,530 --> 00:00:29,744
and the recommendations from Globomantics as to what they

10
00:00:29,744 --> 00:00:31,530
should consider for security groups.

11
00:00:31,530 --> 00:00:34,354
So starting off with availability zones.

12
00:00:34,354 --> 00:00:39,530
Availability Aone A and B over in Australia, that makes sense.

13
00:00:39,530 --> 00:00:43,530
They have a public subnet and what they're going to put in

14
00:00:43,530 --> 00:00:45,530
that public subnet is load balancing.

15
00:00:45,530 --> 00:00:51,530
The load balancing is exposed, not the web servers, important concept.

16
00:00:51,530 --> 00:00:56,985
Now we need a security group for this public subnet and it's going to be

17
00:00:56,985 --> 00:01:01,930
for the web tier elastic load balancer and we're going to take inbound

18
00:01:01,930 --> 00:01:05,530
rules from port 443 from anywhere in the world.

19
00:01:05,530 --> 00:01:06,842
Next, private subnets.

20
00:01:06,842 --> 00:01:12,530
On the private subnets we're starting off with instances for the web tier,

21
00:01:12,530 --> 00:01:16,765
the security group required, inbound rule through port 80.

22
00:01:16,765 --> 00:01:19,118
Now once they get authenticated,

23
00:01:19,118 --> 00:01:23,530
the web tiers can happily communicate with port 80.

24
00:01:23,530 --> 00:01:27,530
The source, the web tier elastic load balancer.

25
00:01:27,530 --> 00:01:29,280
So notice the protection.

26
00:01:29,280 --> 00:01:30,155
What's next?

27
00:01:30,155 --> 00:01:34,530
Well, another set of load balancers for the app tier.

28
00:01:34,530 --> 00:01:38,319
Now the app tier needs a security group,

29
00:01:38,319 --> 00:01:43,530
inbound rule from specific port 8082, the source: the web tier.

30
00:01:43,530 --> 00:01:45,308
Notice, again, the protection.

31
00:01:45,308 --> 00:01:47,086
Next, the app tier.

32
00:01:47,086 --> 00:01:50,641
The app tier inbound rule from port 8082,

33
00:01:50,641 --> 00:01:53,930
the source: the app tier elastic load balancer.

34
00:01:53,930 --> 00:01:57,130
And finally, I guess we need some data,

35
00:01:57,130 --> 00:02:03,583
so we've got the database tier and the inbound rules from port 3030,

36
00:02:03,583 --> 00:02:05,319
source: app tier.

37
00:02:05,319 --> 00:02:11,330
So we don't have any over-extension of any tier needing to

38
00:02:11,330 --> 00:02:14,130
go further than they absolutely have to.

39
00:02:14,130 --> 00:02:18,530
So an example of security groups in a three tier architecture.

40
00:02:18,530 --> 00:02:22,530
Now let's look at some examples of network access control lists.

41
00:02:22,530 --> 00:02:27,030
So for network access control lists, stateless subnet firewalls,

42
00:02:27,030 --> 00:02:29,530
that's really what they are.

43
00:02:29,530 --> 00:02:33,030
They work at the subnet level, they're optional.

44
00:02:33,030 --> 00:02:36,530
They control the inbound and the outbound rules.

45
00:02:36,530 --> 00:02:40,319
But these are separate inbound and outbound rules.

46
00:02:40,319 --> 00:02:45,530
So they perform a separate allow and deny of traffic flow.

47
00:02:45,530 --> 00:02:49,530
The rules are processed in order and the default NACL

48
00:02:49,530 --> 00:02:53,530
allows all traffic to flow both ways, in and out.

49
00:02:53,530 --> 00:02:56,530
Best practice: Number your rules by 10's.

50
00:02:56,530 --> 00:02:59,530
Now what do I mean by that?

51
00:02:59,530 --> 00:03:02,530
Well let's look at a specific example.

52
00:03:02,530 --> 00:03:08,530
So for this custom NACL, we've got inbound rules and outbound rules.

53
00:03:08,530 --> 00:03:14,530
Note the rules are numbered 120, 130, showing you a subset of all the rules.

54
00:03:14,530 --> 00:03:21,530
If we take a look at 120, from anywhere the protocol port 443 will allow that.

55
00:03:21,530 --> 00:03:26,592
Is there a matching rule on the outbound rules?

56
00:03:26,592 --> 00:03:28,280
Yes there is.

57
00:03:28,280 --> 00:03:30,530
120 TCP 443, allow.

58
00:03:30,530 --> 00:03:35,162
In that specific example the packets can go in through the

59
00:03:35,162 --> 00:03:38,530
subnet up towards the instance and back out.

60
00:03:38,530 --> 00:03:40,822
What else can we do?

61
00:03:40,822 --> 00:03:43,572
From the source IP of 172.

62
00:03:43,572 --> 00:03:44,030
30.

63
00:03:44,030 --> 00:03:44,488
1.

64
00:03:44,488 --> 00:03:50,330
10/16 we allow port 3389, must be doing RDP, must be doing administration.

65
00:03:50,330 --> 00:03:54,330
Note the asterisk rule, source address anywhere in the world,

66
00:03:54,330 --> 00:03:57,030
you're not identifying yourself, any protocol,

67
00:03:57,030 --> 00:04:01,530
any port, don't want to talk to you, deny.

68
00:04:01,530 --> 00:04:04,530
Going down on the outbound rules, we've looked at 120, what's 130?

69
00:04:04,530 --> 00:04:13,330
From anywhere, TCP specific ports, so outbound servicing of maybe web pages,

70
00:04:13,330 --> 00:04:15,530
we're allowing that.

71
00:04:15,530 --> 00:04:20,824
And we're denying anything from anywhere, again the 0 rule.

72
00:04:20,824 --> 00:04:26,863
So highly recommended as a starting point for setting up a custom NACL,

73
00:04:26,863 --> 00:04:31,530
overruling your default NACL, which says you can do whatever you want.

74
00:04:31,530 --> 00:04:37,530
Now onto gateway devices connecting from on-prem into Amazon and

75
00:04:37,530 --> 00:04:41,257
ultimately connecting to a virtual private cloud.

76
00:04:41,257 --> 00:04:44,530
We have some external choices that are pretty common.

77
00:04:44,530 --> 00:04:46,863
We can attach an Internet Gateway.

78
00:04:46,863 --> 00:04:49,586
We can attach a Virtual Private Gateway,

79
00:04:49,586 --> 00:04:51,530
so two distinct differences here,

80
00:04:51,530 --> 00:04:55,222
either access for public or access from corporation.

81
00:04:55,222 --> 00:04:57,530
Hey I want it private.

82
00:04:57,530 --> 00:04:59,435
I want an IPsec VPN.

83
00:04:59,435 --> 00:05:02,863
So the internet gateway allows you to connect instances

84
00:05:02,863 --> 00:05:05,530
located in the VPC to the internet.

85
00:05:05,530 --> 00:05:07,530
Now we kind of know that by now.

86
00:05:07,530 --> 00:05:10,280
It's added as a target to the route table for the

87
00:05:10,280 --> 00:05:11,530
routable traffic for the internet.

88
00:05:11,530 --> 00:05:13,412
The virtual private gateway,

89
00:05:13,412 --> 00:05:19,530
well this allows you to connect your VPC to your on-premise data center.

90
00:05:19,530 --> 00:05:24,080
So you get a hybrid design, all the range in cloud these days.

91
00:05:24,080 --> 00:05:28,684
So the virtual private gateway gives you private connectivity between the

92
00:05:28,684 --> 00:05:33,530
Amazon VPC of your choice and your on-premise network.

93
00:05:33,530 --> 00:05:36,530
Now I've got a couple of examples for VPC access.

94
00:05:36,530 --> 00:05:41,684
We can, of course, have ingress and egress internet access subject to the rules,

95
00:05:41,684 --> 00:05:46,530
subnet rules, NACLs, rules and regulations of the VPC.

96
00:05:46,530 --> 00:05:51,030
We've got the Amazon side of the secure VPN connection.

97
00:05:51,030 --> 00:05:55,530
We've got the customer side of the secure VPN connection.

98
00:05:55,530 --> 00:05:59,214
We can also have dedicated and isolated bandwidth to AWS,

99
00:05:59,214 --> 00:06:05,197
such as the direct connect where I could have up to a 10 GB private connection.

100
00:06:05,197 --> 00:06:09,387
I have to have an on-premise device, either hardware or software,

101
00:06:09,387 --> 00:06:12,898
in order to access AWS across the internet.

102
00:06:12,898 --> 00:06:19,530
And we also know we have VPC access where we can enable VPC peering,

103
00:06:19,530 --> 00:06:20,419
direct peering.

104
00:06:20,419 --> 00:06:23,086
So there's a number of examples.

105
00:06:23,086 --> 00:06:28,894
The connectivity to Amazon is very well documented and so take a look at the

106
00:06:28,894 --> 00:06:32,166
docs and you'll be able to get some great step by step,

107
00:06:32,166 --> 00:06:34,372
depending on the devices, hardware and software,

108
00:06:34,372 --> 00:06:36,056
that you're using on-prem.

109
00:06:36,056 --> 00:06:42,430
For this course, getting the big picture of how do I get access to the VPC?

110
00:06:42,430 --> 00:06:44,530
One example though to end off with,

111
00:06:44,530 --> 00:06:48,765
VPCs with multiple subnets and hardware VPN access.

112
00:06:48,765 --> 00:06:53,530
So let's review, we've got availability zones, that's good.

113
00:06:53,530 --> 00:06:56,372
We've got public subnets and we've got private subnets,

114
00:06:56,372 --> 00:07:00,697
we've got workloads, we've got NAT so the private subnets can get out.

115
00:07:00,697 --> 00:07:05,363
Obviously we need an internet gateway to help with those public subnets,

116
00:07:05,363 --> 00:07:09,330
we've got routing in the bottom left to our on-prem

117
00:07:09,330 --> 00:07:12,130
resources and we also need some routing,

118
00:07:12,130 --> 00:07:17,246
which we have as standard default routing within the VPC,

119
00:07:17,246 --> 00:07:22,000
giving us routing across the availability zones.

120
00:07:22,000 --> 00:07:26,485
So using the same pieces, the new component,

121
00:07:26,485 --> 00:07:39,000
the router from the on-prem to the Amazon VPC. So there's a look at VPC security and connectivity with AWS.

