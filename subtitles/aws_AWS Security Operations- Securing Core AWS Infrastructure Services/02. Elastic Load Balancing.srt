1
00:00:00,000 --> 00:00:05,314
So let's start with this concept of elastic load balancing,

2
00:00:05,314 --> 00:00:07,971
focusing on the term elastic.

3
00:00:07,971 --> 00:00:11,129
So in the cloud, very common on any network really,

4
00:00:11,129 --> 00:00:14,871
this wasn't invented for cloud, but cloud takes advantage of this,

5
00:00:14,871 --> 00:00:21,171
and the idea is that the load balancer is going to distribute incoming traffic,

6
00:00:21,171 --> 00:00:24,813
so requests to buy coffee from Wired Brain Coffee,

7
00:00:24,813 --> 00:00:29,971
we just don't want one web server, we want a bunch of web servers.

8
00:00:29,971 --> 00:00:31,445
How many web servers?

9
00:00:31,445 --> 00:00:32,918
That's a good question,

10
00:00:32,918 --> 00:00:38,356
but the load balancer can only balance the instances that are in the pool,

11
00:00:38,356 --> 00:00:42,048
that have been provided, so in our case,

12
00:00:42,048 --> 00:00:42,971
EC2 instances.

13
00:00:42,971 --> 00:00:47,089
Now one of the features of Amazon is, of course,

14
00:00:47,089 --> 00:00:50,813
balancing your failover across one or multiple availability zones,

15
00:00:50,813 --> 00:00:54,182
or one or more datacenters within the region,

16
00:00:54,182 --> 00:00:57,971
and that's exactly what the load balancer can do.

17
00:00:57,971 --> 00:01:01,287
So the choices, at AWS, we've got two choices.

18
00:01:01,287 --> 00:01:03,497
The first one is the classic,

19
00:01:03,497 --> 00:01:07,698
the load balancer that distributes traffic across the multiple instances,

20
00:01:07,698 --> 00:01:09,971
we've been talking about that.

21
00:01:09,971 --> 00:01:11,509
So there's our instances,

22
00:01:11,509 --> 00:01:14,971
traffic being balanced based on incoming traffic from clients.

23
00:01:14,971 --> 00:01:17,828
This is balancing up to layer 4, that's its job,

24
00:01:17,828 --> 00:01:20,971
and that's as high as it can go in the stack.

25
00:01:20,971 --> 00:01:24,346
Now the other choice is the application load balancer,

26
00:01:24,346 --> 00:01:27,721
and this is distributing application traffic across multiple targets,

27
00:01:27,721 --> 00:01:31,096
maybe not just a web application, maybe an application,

28
00:01:31,096 --> 00:01:34,360
maybe a different type of application than you're thinking of.

29
00:01:34,360 --> 00:01:37,138
So we can set up these groupings of targets and

30
00:01:37,138 --> 00:01:39,234
distribute the traffic across these targets.

31
00:01:39,234 --> 00:01:42,182
This can balance up to layer 7.

32
00:01:42,182 --> 00:01:47,445
Now this application load balancer has a couple of distinct purposes at Amazon,

33
00:01:47,445 --> 00:01:49,287
and we'll get to that.

34
00:01:49,287 --> 00:01:54,371
The key difference here is one can balance IP requests up to layer 4,

35
00:01:54,371 --> 00:01:57,871
typically to a web server, the application load balancer says,

36
00:01:57,871 --> 00:01:59,971
I can do the whole stack.

37
00:01:59,971 --> 00:02:00,971
To reiterate,

38
00:02:00,971 --> 00:02:06,971
the classic load balancer is designed for web tier load balancing integrated,

39
00:02:06,971 --> 00:02:09,158
here's something new, with auto scaling groups.

40
00:02:09,158 --> 00:02:12,918
Highly recommended that you look at the documentation for auto scaling groups.

41
00:02:12,918 --> 00:02:15,445
Again, we can't cover everything in this class,

42
00:02:15,445 --> 00:02:20,813
but one of the key features of load balancing at AWS is the load

43
00:02:20,813 --> 00:02:25,550
balancer can be automatically filled with a set number of

44
00:02:25,550 --> 00:02:28,076
instances as traffic increases and decreases.

45
00:02:28,076 --> 00:02:30,287
So take a look at that.

46
00:02:30,287 --> 00:02:33,971
Here in this class, more focused on the security point.

47
00:02:33,971 --> 00:02:36,853
Now the application load balancer designed for,

48
00:02:36,853 --> 00:02:39,324
as we know applications layer 7,

49
00:02:39,324 --> 00:02:42,400
but for microservices or container-based architectures.

50
00:02:42,400 --> 00:02:43,828
Think Docker.

51
00:02:43,828 --> 00:02:51,371
Ah Docker, Docker is a container service and becoming very popular,

52
00:02:51,371 --> 00:02:56,171
what if I want to load balance multiple containers on a single,

53
00:02:56,171 --> 00:02:56,971
large instance?

54
00:02:56,971 --> 00:02:59,971
Do a little research on containers if that's something

55
00:02:59,971 --> 00:03:08,000
that you're doing within your company. So there's a look at the two options for load balancers at AWS.

