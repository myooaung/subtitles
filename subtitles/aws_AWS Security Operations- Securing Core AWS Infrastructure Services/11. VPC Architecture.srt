1
00:00:00,000 --> 00:00:03,962
Probably the most important consideration when we're dealing

2
00:00:03,962 --> 00:00:08,298
with security is knowing your network, it's signed off,

3
00:00:08,298 --> 00:00:11,934
it's secure, and that starts with VPC architecture.

4
00:00:11,934 --> 00:00:14,287
Now the VPC architecture, the Virtual Private Cloud,

5
00:00:14,287 --> 00:00:16,052
cloud providers do it different ways,

6
00:00:16,052 --> 00:00:19,758
but they're all pretty well doing pretty much the same thing.

7
00:00:19,758 --> 00:00:22,934
You have some software defined networking saying this is

8
00:00:22,934 --> 00:00:26,534
your space to setup as you see fit.

9
00:00:26,534 --> 00:00:31,934
So a virtual network for your account, isolated within the AWS cloud,

10
00:00:31,934 --> 00:00:37,408
we had a classic network, you may still be on a classic network,

11
00:00:37,408 --> 00:00:42,034
that's more of a flat infrastructure, nowadays you sign up for Amazon,

12
00:00:42,034 --> 00:00:43,784
you're starting with a VPC.

13
00:00:43,784 --> 00:00:46,934
Now the IP address range is chosen by you,

14
00:00:46,934 --> 00:00:51,052
the customer, and the VPC can span multiple availability zones,

15
00:00:51,052 --> 00:00:51,463
i.

16
00:00:51,463 --> 00:00:51,875
e.

17
00:00:51,875 --> 00:00:56,267
data centers, however each subnet must reside within each availability zone.

18
00:00:56,267 --> 00:00:58,212
If you think about it,

19
00:00:58,212 --> 00:01:04,434
pretty hard to have a subnet spanning 2 separate buildings 3 to 5 miles apart,

20
00:01:04,434 --> 00:01:07,934
but the VPC can span the availability zones.

21
00:01:07,934 --> 00:01:12,601
So you have failover, number one thing Amazon wants you to know,

22
00:01:12,601 --> 00:01:14,934
please design your infrastructure for failover.

23
00:01:14,934 --> 00:01:18,667
Best practice, I'm repeating myself, but it's important,

24
00:01:18,667 --> 00:01:23,581
use 2 subnets in different availability zones for each network layer.

25
00:01:23,581 --> 00:01:25,228
What are you building?

26
00:01:25,228 --> 00:01:28,934
2 tier, 3 tier, set them up for failover.

27
00:01:28,934 --> 00:01:32,934
So we've done some work on subnets, now let's take a look at the type of subnet.

28
00:01:32,934 --> 00:01:35,267
We're talking about public and private subnets,

29
00:01:35,267 --> 00:01:39,934
so here's an example, we have a VPC and there is a public subnet.

30
00:01:39,934 --> 00:01:43,505
That should say to you that the design of this is for public access to

31
00:01:43,505 --> 00:01:46,490
those systems at the very least in that public subnet,

32
00:01:46,490 --> 00:01:49,601
maybe a load balancer in that public subnet,

33
00:01:49,601 --> 00:01:51,934
but the thought process is public,

34
00:01:51,934 --> 00:01:54,934
I'm wanting public access for something on that subnet.

35
00:01:54,934 --> 00:01:56,934
Now let's add some other pieces.

36
00:01:56,934 --> 00:01:59,116
If I add a NAT device,

37
00:01:59,116 --> 00:02:03,843
that won't be that useful for the systems that are already in the

38
00:02:03,843 --> 00:02:06,408
public subnet because they'll have public access,

39
00:02:06,408 --> 00:02:11,934
so the NAT device or the NAT service could be useful for my private subnet

40
00:02:11,934 --> 00:02:15,434
with instances that want to talk privately among themselves,

41
00:02:15,434 --> 00:02:21,184
but they may need updates and they may need some way to be wired to

42
00:02:21,184 --> 00:02:24,934
the outside world through a NAT service or a device.

43
00:02:24,934 --> 00:02:28,234
Let's add in a couple more subnets, so we've got subnets,

44
00:02:28,234 --> 00:02:30,934
so we know we have public and private subnets,

45
00:02:30,934 --> 00:02:35,434
within the VPC we have routing for all instances,

46
00:02:35,434 --> 00:02:42,134
we also have NICs on each instance that can be turned on or off

47
00:02:42,134 --> 00:02:44,934
for public access or private access only.

48
00:02:44,934 --> 00:02:46,934
What else do we need?

49
00:02:46,934 --> 00:02:50,302
Well we need some way of getting outside,

50
00:02:50,302 --> 00:02:54,513
so we need some sort of gateway, internet gateway service,

51
00:02:54,513 --> 00:02:55,977
linked to the VPC,

52
00:02:55,977 --> 00:03:01,543
wired to the route tables to ensure that the public subnets know how to get out

53
00:03:01,543 --> 00:03:05,758
or how to accept traffic from outside across the internet.

54
00:03:05,758 --> 00:03:10,934
So when a subnet's traffic is routed to the internet gateway,

55
00:03:10,934 --> 00:03:15,640
then it's deemed a public subnet, that is the differentiator,

56
00:03:15,640 --> 00:03:20,458
having the internet gateway turns a subnet into a public subnet.

57
00:03:20,458 --> 00:03:25,029
Now if the subnet doesn't have a route to the internet gateway,

58
00:03:25,029 --> 00:03:27,372
it's deemed as a private subnet.

59
00:03:27,372 --> 00:03:31,309
Now we could have other things on the diagram,

60
00:03:31,309 --> 00:03:33,934
we could define elastic IP addresses.

61
00:03:33,934 --> 00:03:36,656
We could do a lot of detail,

62
00:03:36,656 --> 00:03:40,934
but we're just building this piece by piece saying public/private subnets,

63
00:03:40,934 --> 00:03:42,934
what's the reasoning for these subnets.

64
00:03:42,934 --> 00:03:45,934
Is it for web access on the public subnet?

65
00:03:45,934 --> 00:03:48,122
Is it for load balancing?

66
00:03:48,122 --> 00:03:49,872
They're both possible answers.

67
00:03:49,872 --> 00:03:53,934
Private subnets, could be database, could be application servers,

68
00:03:53,934 --> 00:03:58,934
could be resources that don't need public access at all.

69
00:03:58,934 --> 00:04:03,309
So all public subnets will need a routing table entry

70
00:04:03,309 --> 00:04:05,934
that points to the internet gateway.

71
00:04:05,934 --> 00:04:07,346
The private subnets,

72
00:04:07,346 --> 00:04:13,463
they'll have a routing table entry potentially to a proxy/NAT instance or NAT

73
00:04:13,463 --> 00:04:17,302
service for the outside access for those specific instances,

74
00:04:17,302 --> 00:04:22,334
being able to go out and because that instance went out the

75
00:04:22,334 --> 00:04:25,134
traffic the response can come back in,

76
00:04:25,134 --> 00:04:27,134
potentially maybe totally protected subnets,

77
00:04:27,134 --> 00:04:28,809
for example, PCI workloads,

78
00:04:28,809 --> 00:04:32,746
that there is no access to the internet deemed

79
00:04:32,746 --> 00:04:34,934
necessary for this potential workload.

80
00:04:34,934 --> 00:04:37,758
The communication tool between the subnets,

81
00:04:37,758 --> 00:04:42,934
between the outside world, between the different subnets in your VPC,

82
00:04:42,934 --> 00:04:45,798
the route tables are making those decisions.

83
00:04:45,798 --> 00:04:51,116
Now one way to define a route table is that those rules, i.

84
00:04:51,116 --> 00:04:51,525
e.

85
00:04:51,525 --> 00:04:56,934
routes, they define where the network traffic, where the packets can go.

86
00:04:56,934 --> 00:05:01,434
So in this example we've got a VPC defined as a 10.

87
00:05:01,434 --> 00:05:01,809
0.

88
00:05:01,809 --> 00:05:02,184
0.

89
00:05:02,184 --> 00:05:05,934
0/16 subnet and the main route table says got it,

90
00:05:05,934 --> 00:05:07,684
local traffic, I'll allow that.

91
00:05:07,684 --> 00:05:12,934
So each route table has a set of rules that determine the network traffic flow.

92
00:05:12,934 --> 00:05:18,092
That initial route starts with a single rule for local traffic within the VPC,

93
00:05:18,092 --> 00:05:21,513
when you create the VPC and you define your subnet.

94
00:05:21,513 --> 00:05:22,460
All instances, therefore,

95
00:05:22,460 --> 00:05:26,634
launched into that VPC are going to be bound by their IP address,

96
00:05:26,634 --> 00:05:29,084
the subnet and the route table relationship.

97
00:05:29,084 --> 00:05:32,934
So if you mess it up, it's not working at all.

98
00:05:32,934 --> 00:05:36,059
So how many possibilities could you have why an instance

99
00:05:36,059 --> 00:05:37,934
isn't working the way you thought?

100
00:05:37,934 --> 00:05:41,084
Yeah, the wrong VPC, the wrong IP address scheme,

101
00:05:41,084 --> 00:05:43,534
the wrong route table, the wrong subnet,

102
00:05:43,534 --> 00:05:46,134
could be a lot of different reasons.

103
00:05:46,134 --> 00:05:48,934
And each route table, now some rules,

104
00:05:48,934 --> 00:05:52,934
every subnet has to be associated with a route table,

105
00:05:52,934 --> 00:05:55,334
otherwise how could it route traffic?

106
00:05:55,334 --> 00:05:58,934
There's got to be some linkage with the routing.

107
00:05:58,934 --> 00:05:59,776
Best practice,

108
00:05:59,776 --> 00:06:03,987
for best security create your custom route tables so you

109
00:06:03,987 --> 00:06:06,934
know where your traffic is exactly going.

110
00:06:06,934 --> 00:06:10,228
Don't get caught using the default VPC,

111
00:06:10,228 --> 00:06:14,934
which automatically assigns you outside access via an internet gateway.

112
00:06:14,934 --> 00:06:17,034
It may be what you want,

113
00:06:17,034 --> 00:06:21,584
but I'll bet you the range of addresses over time that were assigned

114
00:06:21,584 --> 00:06:25,363
automatically might not be what you want long term.

115
00:06:25,363 --> 00:06:30,934
So what happens when we have a situation where we have multiple VPCs

116
00:06:30,934 --> 00:06:33,434
and we decide that we'd like to link them together?

117
00:06:33,434 --> 00:06:36,434
Well we can do that and we can do that through a

118
00:06:36,434 --> 00:06:39,184
cool feature called VPC peering.

119
00:06:39,184 --> 00:06:45,934
Now VPC peering allows me connections between two VPCs.

120
00:06:45,934 --> 00:06:50,212
The peering connection isn't relying on a single piece of hardware,

121
00:06:50,212 --> 00:06:56,084
this is a service provided by Amazon that you sign up for in effect.

122
00:06:56,084 --> 00:06:59,684
These are the two VPCs, here's my security,

123
00:06:59,684 --> 00:07:01,934
I want to have communication,

124
00:07:01,934 --> 00:07:05,092
private IP addresses must be used to route the traffic,

125
00:07:05,092 --> 00:07:08,984
and you can also set up communication with VPCs in other accounts.

126
00:07:08,984 --> 00:07:13,884
Now all the VPCs must be within a single region and this is where

127
00:07:13,884 --> 00:07:16,720
your networking might come back and haunt you.

128
00:07:16,720 --> 00:07:19,934
We can't have any overlapping of network addresses allowed.

129
00:07:19,934 --> 00:07:24,134
So maybe over time the separate VPCs had exactly the same IP address range,

130
00:07:24,134 --> 00:07:28,661
you tried to link them together, how are they going to communicate?

131
00:07:28,661 --> 00:07:30,934
Transitive peering is not allowed.

132
00:07:30,934 --> 00:07:36,694
What this means is that we can't go through and say well I've got one VPC

133
00:07:36,694 --> 00:07:42,134
peering with another VPC and if I add in a third VPC,

134
00:07:42,134 --> 00:07:46,534
they aren't automatically having communication established,

135
00:07:46,534 --> 00:07:51,630
it's got to be direct between each VPC.

136
00:07:51,630 --> 00:07:54,760
So in this case if I have three VPCs,

137
00:07:54,760 --> 00:07:59,857
I've got three arrangements between the VPCs and I have to have those direct

138
00:07:59,857 --> 00:08:04,934
arrangements in order for the VPCs to talk to each other.

139
00:08:04,934 --> 00:08:12,039
So I could have generic corporate services hosted in one VPC and the other VPC,

140
00:08:12,039 --> 00:08:13,934
say dev and production,

141
00:08:13,934 --> 00:08:26,000
would utilize those core services held in the generic VPC for the corporation. So that's a look at VPC architecture and some of the main components.

