1
00:00:00,000 --> 00:00:06,307
In this clip we'll take a look at controlling access to resources.

2
00:00:06,307 --> 00:00:09,607
Now some of the access resource will be specifically IAM controlled,

3
00:00:09,607 --> 00:00:13,207
other access is going to be more of the big picture as

4
00:00:13,207 --> 00:00:15,307
to where the access can come from.

5
00:00:15,307 --> 00:00:19,117
So if we start off with the access to resources,

6
00:00:19,117 --> 00:00:23,607
the most common way to access something at AWS is through the

7
00:00:23,607 --> 00:00:27,507
management console and we know we can use IAM to control access to

8
00:00:27,507 --> 00:00:29,307
everything except for the root account.

9
00:00:29,307 --> 00:00:35,140
We also have the command line interface and we now know that the command line

10
00:00:35,140 --> 00:00:38,932
interface involves those access keys linked to an account.

11
00:00:38,932 --> 00:00:41,994
Both of these I would consider administrative

12
00:00:41,994 --> 00:00:43,840
methodologies of accessing resources.

13
00:00:43,840 --> 00:00:51,307
The next thing we can do is access via HTTPS using APIs, using credentials.

14
00:00:51,307 --> 00:00:55,307
We can access using software development kits to actually

15
00:00:55,307 --> 00:00:59,307
create something that's quite custom and this would be

16
00:00:59,307 --> 00:01:03,013
considered from the programmer point of view.

17
00:01:03,013 --> 00:01:08,307
And lastly we have managed services, an example AWS config.

18
00:01:08,307 --> 00:01:11,355
And I would define these resources as preconfigured.

19
00:01:11,355 --> 00:01:16,307
They're set up, you have to define how far you want to go.

20
00:01:16,307 --> 00:01:19,943
The managed services, the access to those resources,

21
00:01:19,943 --> 00:01:21,307
involves obviously credentials.

22
00:01:21,307 --> 00:01:25,542
A little different from the level where the programmer is and a

23
00:01:25,542 --> 00:01:27,307
little different from pure administration.

24
00:01:27,307 --> 00:01:32,954
Now resources outside of IAM that we have to control at AWS,

25
00:01:32,954 --> 00:01:35,307
what about an EC2 logon?

26
00:01:35,307 --> 00:01:38,107
So I've got a user, an administrator,

27
00:01:38,107 --> 00:01:42,507
and they have to access and authenticate to one of the

28
00:01:42,507 --> 00:01:44,640
instances running Linux or Windows,

29
00:01:44,640 --> 00:01:48,640
that's a logon which is not controlled by IAM,

30
00:01:48,640 --> 00:01:52,483
that's at the operating system level, at the application level.

31
00:01:52,483 --> 00:01:55,719
Same thing could be said for something that you build yourself,

32
00:01:55,719 --> 00:01:59,736
let's say you build a database server and you're logging

33
00:01:59,736 --> 00:02:02,307
on to that relational database server.

34
00:02:02,307 --> 00:02:06,040
Administrator authenticating to the database outside of IAM.

35
00:02:06,040 --> 00:02:09,307
Now there also could be managed services,

36
00:02:09,307 --> 00:02:12,307
which are completely controlled by IAM,

37
00:02:12,307 --> 00:02:19,149
but there also are these authentication methods that you have to manage as well.

38
00:02:19,149 --> 00:02:22,939
A couple of other ones, protection of my instances,

39
00:02:22,939 --> 00:02:26,307
if I've got them in a security group,

40
00:02:26,307 --> 00:02:29,483
that's a different form of security outside of IAM,

41
00:02:29,483 --> 00:02:33,886
although you could say, well couldn't you control who sets up the security group?

42
00:02:33,886 --> 00:02:34,675
Yeah that's true,

43
00:02:34,675 --> 00:02:37,657
but just trying to make a distinction between some of the

44
00:02:37,657 --> 00:02:40,107
security levels that we have at AWS.

45
00:02:40,107 --> 00:02:41,507
And finally, RDS protection,

46
00:02:41,507 --> 00:02:45,149
if I have something that I build myself or something

47
00:02:45,149 --> 00:02:48,096
that is provided for me from Amazon,

48
00:02:48,096 --> 00:02:53,943
I can set up security groups to protect that instance and that RDS database

49
00:02:53,943 --> 00:02:59,262
could be within a VPC where we know we can use security groups,

50
00:02:59,262 --> 00:03:01,307
or it might be standalone.

51
00:03:01,307 --> 00:03:06,307
So a couple of ways of accessing resources where the control isn't always IAM.

52
00:03:06,307 --> 00:03:09,029
These access methods, not part of IAM.

53
00:03:09,029 --> 00:03:13,307
So are you up for a little bit of a challenge?

54
00:03:13,307 --> 00:03:17,939
Well let's compare the root user, IAM user, the IAM roles.

55
00:03:17,939 --> 00:03:21,307
If I start with who has a password?

56
00:03:21,307 --> 00:03:24,878
The root user, yeah they've got to have a password.

57
00:03:24,878 --> 00:03:25,950
The IAM user?

58
00:03:25,950 --> 00:03:26,307
Yep.

59
00:03:26,307 --> 00:03:27,149
The role?

60
00:03:27,149 --> 00:03:27,570
No.

61
00:03:27,570 --> 00:03:33,044
Remember you've got a computer system asking for permission from the IAM policy,

62
00:03:33,044 --> 00:03:36,999
so it's not setting a password, it's not a human.

63
00:03:36,999 --> 00:03:37,769
Access key?

64
00:03:37,769 --> 00:03:38,922
The root user?

65
00:03:38,922 --> 00:03:39,307
Yes.

66
00:03:39,307 --> 00:03:43,307
Remember we can get rid of that if we don't want that

67
00:03:43,307 --> 00:03:46,307
automation through the secret key for the root user.

68
00:03:46,307 --> 00:03:47,230
IAM user?

69
00:03:47,230 --> 00:03:48,615
Yes access key.

70
00:03:48,615 --> 00:03:51,384
Again, we can control the access.

71
00:03:51,384 --> 00:03:52,307
IAM role?

72
00:03:52,307 --> 00:03:52,807
No.

73
00:03:52,807 --> 00:03:54,807
Belonging to a group?

74
00:03:54,807 --> 00:03:55,807
Root User?

75
00:03:55,807 --> 00:03:56,807
Self contain.

76
00:03:56,807 --> 00:03:57,807
IAM user?

77
00:03:57,807 --> 00:03:58,307
Absolutely.

78
00:03:58,307 --> 00:03:59,483
IAM role?

79
00:03:59,483 --> 00:04:00,072
No.

80
00:04:00,072 --> 00:04:04,778
The IAM role could be controlling a group.

81
00:04:04,778 --> 00:04:08,307
Finally, association with the EC2 instance?

82
00:04:08,307 --> 00:04:09,007
Root user?

83
00:04:09,007 --> 00:04:09,357
No.

84
00:04:09,357 --> 00:04:10,057
IAM user?

85
00:04:10,057 --> 00:04:11,457
We don't want to.

86
00:04:11,457 --> 00:04:12,157
The role?

87
00:04:12,157 --> 00:04:15,307
Yeah, we want to do it that way, again,

88
00:04:15,307 --> 00:04:20,450
the inline policy for that instance saying what is the job that

89
00:04:20,450 --> 00:04:24,307
that instance is allowed to carry out for us?

90
00:04:24,307 --> 00:04:25,378
Control by IAM.

91
00:04:25,378 --> 00:04:26,807
Okay did you pass?

92
00:04:26,807 --> 00:04:37,000
Well that was a no pressure test. So that's a look at access to resource outside of IAM at AWS.

