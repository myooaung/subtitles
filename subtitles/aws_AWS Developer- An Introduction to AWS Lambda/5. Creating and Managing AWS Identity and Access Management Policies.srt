1
00:00:01,110 --> 00:00:05,240
In this demo, we'll be looking at AWS IAM. I'll take you through the

2
00:00:05,240 --> 00:00:09,720
process of examining what AWS managed policies are and how we can use

3
00:00:09,720 --> 00:00:14,430
the AWS Policy Generator to create our own custom AWS policies. I'll

4
00:00:14,430 --> 00:00:18,890
also show you how we would create IAM roles inside of AWS Identity and

5
00:00:18,890 --> 00:00:20,340
Access Management.

6
00:00:20,340 --> 00:00:22,340
So let's go ahead and get started.

7
00:00:22,340 --> 00:00:24,400
I've loaded up the AWS console here,

8
00:00:24,400 --> 00:00:26,800
and I'm going to change the pinned icons that we had

9
00:00:26,800 --> 00:00:29,790
before from Icons and Text to Icons Only.

10
00:00:29,790 --> 00:00:32,300
This should make it a little easier to see which icons we're working

11
00:00:32,300 --> 00:00:35,940
with and navigate to the appropriate services. Now, I'm going to click

12
00:00:35,940 --> 00:00:40,130
on the Services drop‑down a few times, and this will get rid of our icon view.

13
00:00:40,130 --> 00:00:43,620
Now I'm going to go to the AWS Identity and Access Management console,

14
00:00:43,620 --> 00:00:46,100
which is located by clicking on the key.

15
00:00:46,100 --> 00:00:50,290
From there, I'm going to be able to look at AWS managed policies.

16
00:00:50,290 --> 00:00:55,060
I'll go over to the Policies section on the left and then click Create policy.

17
00:00:55,060 --> 00:00:55,370
Now,

18
00:00:55,370 --> 00:00:59,710
here I could create my own custom policies by picking a service, the

19
00:00:59,710 --> 00:01:03,840
actions, and the resources that I want inside of the policy, as well as any

20
00:01:03,840 --> 00:01:06,740
conditions that we might want to apply to the policy.

21
00:01:06,740 --> 00:01:11,420
Now, instead of doing this, I could also use an AWS managed policy.

22
00:01:11,420 --> 00:01:14,420
So, rather than creating my own custom policy,

23
00:01:14,420 --> 00:01:17,990
I could choose one that AWS has already created and provided for me.

24
00:01:17,990 --> 00:01:20,400
So I'm going to go back and take a look at those.

25
00:01:20,400 --> 00:01:22,630
You'll see that here in this Policies section that I clicked

26
00:01:22,630 --> 00:01:26,330
before, I automatically have a variety of different policies

27
00:01:26,330 --> 00:01:30,050
already that AWS has created and managed for me.

28
00:01:30,050 --> 00:01:32,560
And if I wanted to search for any particular policies that

29
00:01:32,560 --> 00:01:34,450
apply to services we'll be using later,

30
00:01:34,450 --> 00:01:38,620
like SES, I could find different managed policies to help me use

31
00:01:38,620 --> 00:01:42,550
those services. Fortunately for us, we'll be using mostly managed

32
00:01:42,550 --> 00:01:46,540
AWS policies for all of our interactions with AWS Lambda, until the

33
00:01:46,540 --> 00:01:48,140
last section of the course.

34
00:01:48,140 --> 00:01:51,650
So we don't have to create any custom policies here right now,

35
00:01:51,650 --> 00:01:54,720
but I do want to give you the ability to do that on your own later on.

36
00:01:54,720 --> 00:01:55,490
So if you needed to,

37
00:01:55,490 --> 00:01:59,470
you could click this Create policy button and go through that workflow; however,

38
00:01:59,470 --> 00:02:02,620
you could also use something called the AWS Policy Generator.

39
00:02:02,620 --> 00:02:04,230
Let's take a look at this now.

40
00:02:04,230 --> 00:02:07,790
You could go to the AWS Policy Generator by googling for AWS

41
00:02:07,790 --> 00:02:10,500
Policy Generator, or going to

42
00:02:10,500 --> 00:02:17,660
awspolicygen.s3.amazonaws.com/policygen.html. Now, this website

43
00:02:17,660 --> 00:02:21,440
makes it a little easier to create your own custom policies,

44
00:02:21,440 --> 00:02:23,330
depending on what you want to do with them.

45
00:02:23,330 --> 00:02:25,430
The website has a bunch of different kinds of

46
00:02:25,430 --> 00:02:27,480
policies that are used inside of AWS,

47
00:02:27,480 --> 00:02:31,220
including IAM policies, S3 bucket policies, SNS

48
00:02:31,220 --> 00:02:33,910
topic policies, and a few others.

49
00:02:33,910 --> 00:02:34,560
In our case,

50
00:02:34,560 --> 00:02:37,480
we're going to select a type of policy from the drop‑down and specify

51
00:02:37,480 --> 00:02:40,850
IAM Policy because that's the majority of what we'll be doing when

52
00:02:40,850 --> 00:02:43,600
we're working with policies in general. Now,

53
00:02:43,600 --> 00:02:46,870
after we select the policy type that we're working with, the Policy Generator

54
00:02:46,870 --> 00:02:50,610
will give us a few options down below in the Statements section. We'll be able

55
00:02:50,610 --> 00:02:54,910
to specify allow or deny, and this will end up being that portion that I showed

56
00:02:54,910 --> 00:02:59,520
you earlier inside of the JSON statement that either allows an action or denies

57
00:02:59,520 --> 00:03:01,320
an action on some resource.

58
00:03:01,320 --> 00:03:03,730
Then, we're going to have to say what services we want

59
00:03:03,730 --> 00:03:05,540
to be applied to this statement.

60
00:03:05,540 --> 00:03:10,550
I could say all services and just have this be the star for the service

61
00:03:10,550 --> 00:03:14,180
that we're working with, or I could uncheck the box and pick a particular

62
00:03:14,180 --> 00:03:17,710
service like Amazon's Simple Email Service, SES.

63
00:03:17,710 --> 00:03:21,870
From there, I could specify particular actions associated with the service.

64
00:03:21,870 --> 00:03:24,590
So if I go to the Actions drop‑down for SES,

65
00:03:24,590 --> 00:03:28,010
there's a variety of different actions that I might end up using,

66
00:03:28,010 --> 00:03:31,720
things like sending emails and creating things inside of SES that are

67
00:03:31,720 --> 00:03:34,270
resources we might use. Now in this case,

68
00:03:34,270 --> 00:03:37,440
we'd be using things like SendEmail and SendRawEmail,

69
00:03:37,440 --> 00:03:41,090
and we could select those actions and close out of that Actions window.

70
00:03:41,090 --> 00:03:44,640
However, because we're going to use AWS managed policies for the time being,

71
00:03:44,640 --> 00:03:47,380
we won't need to use this statement and the policy that it will be

72
00:03:47,380 --> 00:03:50,610
inside of right now. You can go back to this, and as you're

73
00:03:50,610 --> 00:03:54,420
creating new services use this to generate the specific permissions

74
00:03:54,420 --> 00:03:56,270
that those services might need.

75
00:03:56,270 --> 00:03:58,850
Now the last part of creating a statement for our policy

76
00:03:58,850 --> 00:04:01,870
would be to specify the Amazon resource name that the

77
00:04:01,870 --> 00:04:03,940
action would be applicable to.

78
00:04:03,940 --> 00:04:08,020
So what can we actually do with these actions, and what can we act upon? Now,

79
00:04:08,020 --> 00:04:12,470
in the case of SES, we won't be acting on any particular AWS resource names.

80
00:04:12,470 --> 00:04:12,930
For example,

81
00:04:12,930 --> 00:04:17,210
we won't be doing the SendEmail action on an S3 bucket, instead we'll

82
00:04:17,210 --> 00:04:21,390
be just taking that action. So we can specify the star here in this

83
00:04:21,390 --> 00:04:24,310
case to say that any resource name is fine.

84
00:04:24,310 --> 00:04:24,450
Now,

85
00:04:24,450 --> 00:04:26,960
this might be overbroad or overpermissive when you're doing it with

86
00:04:26,960 --> 00:04:31,190
other services, so keep in mind to use the star very sparingly as you're

87
00:04:31,190 --> 00:04:33,230
going through and creating your statements.

88
00:04:33,230 --> 00:04:35,790
Now, when we're ready to add this as a statement in our policy,

89
00:04:35,790 --> 00:04:37,780
we can scroll down and click Add Statement,

90
00:04:37,780 --> 00:04:41,110
and this will automatically add that to our entire policy.

91
00:04:41,110 --> 00:04:45,110
If we had additional actions and resources we wanted to grant permissions

92
00:04:45,110 --> 00:04:48,670
on, we could go back up and continue that process again and again until we

93
00:04:48,670 --> 00:04:50,850
were happy with the content of our policy.

94
00:04:50,850 --> 00:04:53,250
But once we're done, we can click Generate Policy,

95
00:04:53,250 --> 00:04:55,940
and we get the policy that we could actually paste in inside of

96
00:04:55,940 --> 00:04:59,390
the AWS console or attach to the command line to whatever

97
00:04:59,390 --> 00:05:01,550
resource we wanted it applicable to.

98
00:05:01,550 --> 00:05:03,730
Now, if we wanted to create our own custom role,

99
00:05:03,730 --> 00:05:05,830
we could then copy this policy here,

100
00:05:05,830 --> 00:05:09,940
and then we could take it over to the IAM management console again,

101
00:05:09,940 --> 00:05:14,510
click on the Roles section here, create a new role for ourselves,

102
00:05:14,510 --> 00:05:17,480
and then we'd have to specify who can assume this role.

103
00:05:17,480 --> 00:05:21,780
Would it be an AWS service like EC2 or Lambda, or maybe another AWS

104
00:05:21,780 --> 00:05:25,040
account that we want to give access to our AWS account?

105
00:05:25,040 --> 00:05:28,080
Potentially, we could also grant permissions to a web identity,

106
00:05:28,080 --> 00:05:32,340
like through the Amazon Cognito Service or an OpenID identity provider.

107
00:05:32,340 --> 00:05:36,320
And this could allow us to grant access to mobile application users.

108
00:05:36,320 --> 00:05:36,930
Finally,

109
00:05:36,930 --> 00:05:40,110
we might grant permissions to an actual user through an alternative

110
00:05:40,110 --> 00:05:44,210
directory than IAM, like through SAML 2.0 federation.

111
00:05:44,210 --> 00:05:44,840
Now in this case,

112
00:05:44,840 --> 00:05:48,130
if you wanted to add additional roles that your Lambda functions could use,

113
00:05:48,130 --> 00:05:52,700
you would stick with that AWS service option here, and then specify a Lambda.

114
00:05:52,700 --> 00:05:55,800
Then we'd attach the permissions to this role that we wanted to.

115
00:05:55,800 --> 00:05:59,010
We could either include the managed policies from AWS that you

116
00:05:59,010 --> 00:06:01,980
see here, or we can create a new policy from what we just

117
00:06:01,980 --> 00:06:04,730
generated in the AWS Policy Generator.

118
00:06:04,730 --> 00:06:06,890
Now we could go through the visual selection here,

119
00:06:06,890 --> 00:06:08,480
but because we just created the JSON,

120
00:06:08,480 --> 00:06:12,100
I can click on the JSON window here and then I can override everything

121
00:06:12,100 --> 00:06:15,100
here and paste in this statement that we created.

122
00:06:15,100 --> 00:06:18,050
Now I'm going to review this policy, and let's just call this our

123
00:06:18,050 --> 00:06:21,610
testpolicy here, and once we're done naming this,

124
00:06:21,610 --> 00:06:23,770
we could give it a description too. I'm going to also

125
00:06:23,770 --> 00:06:26,430
name it testpolicy, and you'll see a summary of what

126
00:06:26,430 --> 00:06:27,880
we're actually allowed to do here,

127
00:06:27,880 --> 00:06:29,870
which is to send email through the Simple Email

128
00:06:29,870 --> 00:06:31,540
Service or through Pinpoint email,

129
00:06:31,540 --> 00:06:35,550
which is another AWS service. Now, once we're confirmed with all of this

130
00:06:35,550 --> 00:06:39,040
being correct, we can go down and click Create policy,

131
00:06:39,040 --> 00:06:41,720
and then this policy will be created in IAM,

132
00:06:41,720 --> 00:06:43,730
and we could use it inside of our role.

133
00:06:43,730 --> 00:06:46,990
So if I go back to that earlier window where we were creating this role,

134
00:06:46,990 --> 00:06:49,400
we could look up testpolicy here,

135
00:06:49,400 --> 00:06:51,690
and if we don't see it in the drop‑down we'll need to refresh

136
00:06:51,690 --> 00:06:55,000
this list, and then we could be able to pick it out from our

137
00:06:55,000 --> 00:06:57,400
newly created policy that we just added.

138
00:06:57,400 --> 00:07:00,100
Then I can click Next: Tags, Next: Review,

139
00:07:00,100 --> 00:07:02,640
and we would be able to create a new role that would then be

140
00:07:02,640 --> 00:07:07,040
assignable to a Lambda function So we could call this testrole, and we

141
00:07:07,040 --> 00:07:10,960
would see this later on in the AWS Lambda console window to be able to

142
00:07:10,960 --> 00:07:13,080
attach this to that Lambda function.

143
00:07:13,080 --> 00:07:14,400
Now I'm going to create the role,

144
00:07:14,400 --> 00:07:17,970
and you'll see it under the full list of roles created under our account.

145
00:07:17,970 --> 00:07:21,190
So, this is the entire process of creating custom roles that we

146
00:07:21,190 --> 00:07:23,580
might then attach to our Lambda functions.

147
00:07:23,580 --> 00:07:24,180
Later on,

148
00:07:24,180 --> 00:07:26,490
I'll show you how we could take this entire process in a

149
00:07:26,490 --> 00:07:28,910
more automated fashion, but for right now,

150
00:07:28,910 --> 00:07:31,760
don't worry too much about this process as we'll be creating roles

151
00:07:31,760 --> 00:07:36,720
with managed policies that are created by AWS for us.

152
00:07:36,720 --> 00:07:39,740
So now that we're done with this demo, let's take a look at the module.

153
00:07:39,740 --> 00:07:42,100
What have we done inside of this module?

154
00:07:42,100 --> 00:07:45,170
Well, we've looked at what we could build with the AWS Free Tier,

155
00:07:45,170 --> 00:07:47,850
and we have a better understanding of what's included within the Free

156
00:07:47,850 --> 00:07:51,460
Tier and how to find out more of those details in case we're deciding

157
00:07:51,460 --> 00:07:53,740
to build other applications later on.

158
00:07:53,740 --> 00:07:56,940
We also have a better understanding of some of the AWS services that we'll

159
00:07:56,940 --> 00:08:02,360
be using inside of the demos later in this course. And, we created our own

160
00:08:02,360 --> 00:08:05,570
AWS IAM policy that we then attached to a role.

161
00:08:05,570 --> 00:08:08,630
Now we should be able to do this in the future if we have custom needs for

162
00:08:08,630 --> 00:08:11,370
the Lambda functions in the projects that we're creating,

163
00:08:11,370 --> 00:08:13,040
So what's next for us?

164
00:08:13,040 --> 00:08:15,630
So now that we have all this foundational knowledge, we'll be

165
00:08:15,630 --> 00:08:23,000
able to take our first steps with our first AWS Lambda project. Let's get to it in the next module.

