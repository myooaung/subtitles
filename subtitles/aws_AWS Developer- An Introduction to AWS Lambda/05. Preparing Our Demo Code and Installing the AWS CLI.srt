1
00:00:01,100 --> 00:00:01,900
In this video,

2
00:00:01,900 --> 00:00:03,770
I'll take you through the process of getting set up

3
00:00:03,770 --> 00:00:05,920
with some of the code for this course.

4
00:00:05,920 --> 00:00:08,630
You'll need to download the exercise files for the course if you

5
00:00:08,630 --> 00:00:10,920
haven't already. Once you're done with this,

6
00:00:10,920 --> 00:00:13,700
you can go to your Downloads folder and then unzip

7
00:00:13,700 --> 00:00:15,530
the file that you just downloaded.

8
00:00:15,530 --> 00:00:16,400
From there,

9
00:00:16,400 --> 00:00:18,910
you'll be able to navigate in it, and you'll look for something

10
00:00:18,910 --> 00:00:21,680
that references module four. In particular,

11
00:00:21,680 --> 00:00:25,280
we'll be expecting inside of module four to see a folder called sparrow.

12
00:00:25,280 --> 00:00:28,200
Go ahead and grab that folder, and drag it over to your Desktop

13
00:00:28,200 --> 00:00:30,400
because that's where we'll be working with it.

14
00:00:30,400 --> 00:00:32,400
For any of the other files you might need for the course,

15
00:00:32,400 --> 00:00:35,900
you should be able to see them somewhere inside of this folder.

16
00:00:35,900 --> 00:00:39,240
I've gone ahead and opened up my favorite code editor, VS Code.

17
00:00:39,240 --> 00:00:42,600
Now, inside of this, I've loaded up the sparrow folder, but if you can't find it,

18
00:00:42,600 --> 00:00:45,230
you should navigate to your Desktop and then change

19
00:00:45,230 --> 00:00:47,690
directories into the sparrow folder.

20
00:00:47,690 --> 00:00:49,665
Now, inside of here, let me clear the screen and list

21
00:00:49,665 --> 00:00:51,310
out the contents of the directory.

22
00:00:51,310 --> 00:00:54,710
You'll also see them on the left side of the screen here. Now, included in

23
00:00:54,710 --> 00:00:58,290
these files will be a bunch of files to help us build our Lambda function

24
00:00:58,290 --> 00:01:02,830
later on called setup.sh and windows_setup.bat.

25
00:01:02,830 --> 00:01:06,240
Now these two files will happen a little bit later in the course, so right now,

26
00:01:06,240 --> 00:01:09,240
let's focus on what we need to get our requirements set up.

27
00:01:09,240 --> 00:01:13,030
This README.md file will be very useful if you want a written guide on

28
00:01:13,030 --> 00:01:15,780
how to get started with some of these setup steps.

29
00:01:15,780 --> 00:01:20,240
Now some of the steps you'll need to do will be to install Python 3 and pip.

30
00:01:20,240 --> 00:01:22,980
Pip should be included with the latest version of Python 3,

31
00:01:22,980 --> 00:01:25,580
so hopefully that won't be too much extra work.

32
00:01:25,580 --> 00:01:27,780
After you install Python and pip,

33
00:01:27,780 --> 00:01:30,780
you'll also need to install boto3. You should be able to do

34
00:01:30,780 --> 00:01:34,040
this just by using pip3 install boto3.

35
00:01:34,040 --> 00:01:38,330
Typically, I install this on my entire system if I plan to work with AWS a lot,

36
00:01:38,330 --> 00:01:41,070
but you could also install it inside of a virtual environment,

37
00:01:41,070 --> 00:01:44,880
and I'll explain what that means in a second. In step three,

38
00:01:44,880 --> 00:01:47,780
you'll be installing the AWS CLI v1.

39
00:01:47,780 --> 00:01:52,320
At the moment, there's a few different options for the CLI, v1 and v2; however,

40
00:01:52,320 --> 00:01:54,090
v2 is still in beta mode,

41
00:01:54,090 --> 00:01:57,500
so maybe it'll be workable in the future, but I wouldn't recommend it right

42
00:01:57,500 --> 00:02:02,030
now. If you need the link to look for most recent installation instructions,

43
00:02:02,030 --> 00:02:04,690
I've included that at the bottom of step three.

44
00:02:04,690 --> 00:02:06,020
Now, when this has been completed,

45
00:02:06,020 --> 00:02:10,230
I'll show you how to configure the AWS CLI with some AWS access keys.

46
00:02:10,230 --> 00:02:13,950
So let's walk through the process of creating AWS access keys right now

47
00:02:13,950 --> 00:02:18,260
inside of the AWS console. Back in the AWS console,

48
00:02:18,260 --> 00:02:20,980
we're going to need to go back to Identity and Access Management,

49
00:02:20,980 --> 00:02:21,990
or IAM.

50
00:02:21,990 --> 00:02:23,720
We can only search for that in the Services

51
00:02:23,720 --> 00:02:25,640
dropâ€‘down to find it. Now, right now,

52
00:02:25,640 --> 00:02:29,270
we're currently using the root account, but if we want to get CLI

53
00:02:29,270 --> 00:02:33,500
credentials to run commands using the AWS CLI or the SDKs,

54
00:02:33,500 --> 00:02:36,570
it's not best practice to use the root account for those

55
00:02:36,570 --> 00:02:39,850
credentials. So we'll need to go and create a new administrator

56
00:02:39,850 --> 00:02:43,200
user and create credentials for that administrator, and we'll use

57
00:02:43,200 --> 00:02:45,240
that user in order to do this.

58
00:02:45,240 --> 00:02:45,900
So first,

59
00:02:45,900 --> 00:02:48,300
I'm going to go over to the Groups here because I want to

60
00:02:48,300 --> 00:02:50,600
create this user with another best practice,

61
00:02:50,600 --> 00:02:52,110
which is using groups.

62
00:02:52,110 --> 00:02:53,930
So I'm going to create a new group.

63
00:02:53,930 --> 00:02:56,910
I'm going to call this group admins because all the people in this

64
00:02:56,910 --> 00:03:00,470
group will be admins. Then I'll click Next Step, and then I'll need

65
00:03:00,470 --> 00:03:03,340
to associate a policy with this group.

66
00:03:03,340 --> 00:03:05,780
So I'm going to pick the AdministratorAccess policy

67
00:03:05,780 --> 00:03:07,620
and then click Next Step here.

68
00:03:07,620 --> 00:03:09,900
And on this final page I'll click Create Group,

69
00:03:09,900 --> 00:03:13,680
and we should have a new admins group that anybody we add to it will be an

70
00:03:13,680 --> 00:03:17,010
administrator with that administrator access policy.

71
00:03:17,010 --> 00:03:19,310
Now I'm going to go over to the Users section,

72
00:03:19,310 --> 00:03:21,320
and I'm going to create a new user for myself.

73
00:03:21,320 --> 00:03:22,670
This can just be your name.

74
00:03:22,670 --> 00:03:26,940
I'll call myself fernando here, and for this fernando user, I'm

75
00:03:26,940 --> 00:03:30,275
going to want to give them both programmatic access to the AWS

76
00:03:30,275 --> 00:03:34,300
CLIs and SDKs so that they can use this to take actions without

77
00:03:34,300 --> 00:03:35,940
having to log into the console.

78
00:03:35,940 --> 00:03:39,640
And I'm also just going to give them AWS management console access

79
00:03:39,640 --> 00:03:42,720
because it is best practice to use an administrator user rather

80
00:03:42,720 --> 00:03:47,040
than consistently using the root user, which is what I'm currently signed in as.

81
00:03:47,040 --> 00:03:48,410
After I check these two boxes,

82
00:03:48,410 --> 00:03:51,100
I'm also going to need to say how I want this user to sign

83
00:03:51,100 --> 00:03:53,150
into the AWS console for the first time.

84
00:03:53,150 --> 00:03:56,670
Because this is just me, I'm going to set a custom password and paste

85
00:03:56,670 --> 00:03:59,920
it in here so I can use it. Now, typically, it would be best practice

86
00:03:59,920 --> 00:04:03,530
to require a password reset if I was sending this password to another

87
00:04:03,530 --> 00:04:04,860
user, but in this case,

88
00:04:04,860 --> 00:04:07,950
I'm creating this user for myself, so I'm going to uncheck this box.

89
00:04:07,950 --> 00:04:10,440
You can definitely leave this selected if you're creating this

90
00:04:10,440 --> 00:04:12,960
user for someone else. Now I'm going to click Next:

91
00:04:12,960 --> 00:04:16,900
Permissions, and we'll associate this user with the group that

92
00:04:16,900 --> 00:04:18,440
we want it to be associated with,

93
00:04:18,440 --> 00:04:22,200
which is the admin group. So let's scroll back up, and let's keep

94
00:04:22,200 --> 00:04:25,050
this box selected for adding this user to a group.

95
00:04:25,050 --> 00:04:27,040
This is the best practice way of doing this.

96
00:04:27,040 --> 00:04:30,380
I'm going to select admins, and now that I have admins selected,

97
00:04:30,380 --> 00:04:31,890
I can move on to the next step.

98
00:04:31,890 --> 00:04:35,320
The alternative methods would be to attach policies directly to

99
00:04:35,320 --> 00:04:37,940
this user or copy policies from another user.

100
00:04:37,940 --> 00:04:39,660
But this method is the best practice,

101
00:04:39,660 --> 00:04:41,940
especially when you're working with many users.

102
00:04:41,940 --> 00:04:45,730
Now I'm going to go over here and click Next: Tags and Next: Review,

103
00:04:45,730 --> 00:04:48,140
and finally, at the end I'll create this user.

104
00:04:48,140 --> 00:04:49,310
Now, on this next page,

105
00:04:49,310 --> 00:04:52,600
pause for a second because this is your last chance to see the

106
00:04:52,600 --> 00:04:55,520
credential values if you close out this page,

107
00:04:55,520 --> 00:04:58,090
so make sure to copy down the access key ID value

108
00:04:58,090 --> 00:05:00,060
here and the secret access key,

109
00:05:00,060 --> 00:05:02,700
which will only appear when you click the Show button.

110
00:05:02,700 --> 00:05:03,500
Now, again,

111
00:05:03,500 --> 00:05:06,550
I'm going to delete this user after this course, so you

112
00:05:06,550 --> 00:05:08,210
won't be able to use these credentials.

113
00:05:08,210 --> 00:05:09,640
However, if I wasn't,

114
00:05:09,640 --> 00:05:11,850
I'd be blurring these out, so make sure you keep

115
00:05:11,850 --> 00:05:14,120
these safe and secret for yourself.

116
00:05:14,120 --> 00:05:16,620
After I've copied down both these values or I've downloaded

117
00:05:16,620 --> 00:05:18,970
the CSV file that contains this information,

118
00:05:18,970 --> 00:05:21,580
I can press the Close button. Now, in this next page, it's

119
00:05:21,580 --> 00:05:23,550
confirming that I have this user created,

120
00:05:23,550 --> 00:05:26,760
so I should be good to go with this user and using the credentials for this

121
00:05:26,760 --> 00:05:32,120
user to configure the AWS CLI. Now that I've created my credentials, back

122
00:05:32,120 --> 00:05:36,030
over here on my VS Code editor and the terminal inside of VS Code, I can

123
00:05:36,030 --> 00:05:38,940
install the AWS CLI. I'm going to use pip3,

124
00:05:38,940 --> 00:05:41,810
which should come preinstalled with Python 3, and then

125
00:05:41,810 --> 00:05:45,820
I'm going to run install awscli. Now,

126
00:05:45,820 --> 00:05:50,180
this process should install v1 of the AWS CLI, so it should go through all

127
00:05:50,180 --> 00:05:53,080
the prerequisite steps and get it installed in my system.

128
00:05:53,080 --> 00:05:55,850
However, if this fails for you on your system,

129
00:05:55,850 --> 00:05:58,170
make sure to read through the steps inside of the README that I

130
00:05:58,170 --> 00:06:02,020
provided, or go directly to the AWS documentation to see how

131
00:06:02,020 --> 00:06:05,450
they recommend you install the AWS CLI on your system, as it

132
00:06:05,450 --> 00:06:06,840
definitely could be different.

133
00:06:06,840 --> 00:06:08,840
So I'm going to clear the screen here, and now that

134
00:06:08,840 --> 00:06:10,840
we have the AWS CLI installed,

135
00:06:10,840 --> 00:06:14,950
we should be able to configure it with aws configure. Now,

136
00:06:14,950 --> 00:06:17,750
this is going to prompt us to enter in the access key ID and the

137
00:06:17,750 --> 00:06:21,510
secret that we just got when we were in the AWS console. So go ahead

138
00:06:21,510 --> 00:06:24,580
and paste those values in here now. Again,

139
00:06:24,580 --> 00:06:27,020
you'd be protecting these values with your life.

140
00:06:27,020 --> 00:06:27,670
In my case,

141
00:06:27,670 --> 00:06:31,030
I'm deleting these values right after I record these videos, so I'm

142
00:06:31,030 --> 00:06:33,630
fine showing them to you inside of my demo here.

143
00:06:33,630 --> 00:06:35,990
Now, the default region might not be set in your case,

144
00:06:35,990 --> 00:06:41,120
so make sure you enter usâ€‘eastâ€‘1 if you're using usâ€‘eastâ€‘1. Again,

145
00:06:41,120 --> 00:06:44,240
if you're not using this usâ€‘eastâ€‘1 Northern Virginia region,

146
00:06:44,240 --> 00:06:48,280
make sure to enter the code for your other region that you're deciding to use.

147
00:06:48,280 --> 00:06:51,050
You can go ahead and check on this in the AWS console if you've

148
00:06:51,050 --> 00:06:54,470
forgotten what it is or refer to the AWS documentation to get the

149
00:06:54,470 --> 00:06:58,260
correct value. After you enter that in, you can press Enter one more time,

150
00:06:58,260 --> 00:07:01,240
and you can leave the Default output format as None.

151
00:07:01,240 --> 00:07:03,160
So now we should be all configured.

152
00:07:03,160 --> 00:07:04,270
If we wanted to test this,

153
00:07:04,270 --> 00:07:07,230
we could clear the screen and run a command to see what's going on inside

154
00:07:07,230 --> 00:07:12,160
of our AWS account, something as simple as aws s3 ls to list out the

155
00:07:12,160 --> 00:07:14,920
buckets inside of the Simple Storage Service.

156
00:07:14,920 --> 00:07:17,000
Now, in this case, this is a brandâ€‘new account,

157
00:07:17,000 --> 00:07:19,310
so I don't see a result, and that's kind of expected.

158
00:07:19,310 --> 00:07:23,290
But the fact that it didn't fail actually means that this worked as expected.

159
00:07:23,290 --> 00:07:24,000
Now, from here,

160
00:07:24,000 --> 00:07:27,280
we should be able to use these credentials that are set up with the

161
00:07:27,280 --> 00:07:31,660
AWS CLI and automatically have them loaded into the boto3 SDK for

162
00:07:31,660 --> 00:07:33,870
Python whenever we're working with it.

163
00:07:33,870 --> 00:07:35,970
Now, if we wanted to make sure boto3 was installed,

164
00:07:35,970 --> 00:07:38,110
we could clear the screen one more time and do

165
00:07:38,110 --> 00:07:42,240
something like pip3 install boto3. Now,

166
00:07:42,240 --> 00:07:45,410
there are other ways to do these installations with a virtual environment,

167
00:07:45,410 --> 00:07:48,970
and I'll get to those later on when we deal with dependencies in our project.

168
00:07:48,970 --> 00:07:51,600
But now that I know this is installed, I can clear the screen again,

169
00:07:51,600 --> 00:07:54,550
and I can go into the Python 3 interpreter.

170
00:07:54,550 --> 00:07:55,690
And in the next video,

171
00:07:55,690 --> 00:08:04,000
we'll use some Python code, boto3, and the credentials we just created to send our Twitter API keys into the SSM Parameter Store.

