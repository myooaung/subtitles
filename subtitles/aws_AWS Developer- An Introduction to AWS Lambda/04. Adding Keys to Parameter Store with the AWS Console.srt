1
00:00:01,140 --> 00:00:02,230
In this video,

2
00:00:02,230 --> 00:00:05,290
we'll look at a few different methods of storing our twitter API

3
00:00:05,290 --> 00:00:08,640
keys inside of the Systems Manager Parameter Store.

4
00:00:08,640 --> 00:00:10,110
First, we'll be using the AWS.

5
00:00:10,110 --> 00:00:10,900
console.

6
00:00:10,900 --> 00:00:13,130
I'll be navigating to the Systems Manager Parameter

7
00:00:13,130 --> 00:00:15,090
Store by clicking on this icon here,

8
00:00:15,090 --> 00:00:18,440
but you can also go to the Services drop‑down to search for it.

9
00:00:18,440 --> 00:00:22,250
Now, underneath the Systems Manager, there's a lot of different services,

10
00:00:22,250 --> 00:00:26,280
but we're going to be taking advantage only of one, the Parameter Store here,

11
00:00:26,280 --> 00:00:28,520
underneath the Application Management.

12
00:00:28,520 --> 00:00:30,160
Now, inside of the Parameter Store,

13
00:00:30,160 --> 00:00:32,870
make sure that you're in the correct a region that you were using

14
00:00:32,870 --> 00:00:35,830
before in earlier sections. Again, for this course,

15
00:00:35,830 --> 00:00:38,940
I'm using Northern Virginia, or us‑east‑1.

16
00:00:38,940 --> 00:00:42,520
But just make sure you're consistent throughout your using the demos in this

17
00:00:42,520 --> 00:00:45,600
course so that you can get the parameters from the correct region when you're

18
00:00:45,600 --> 00:00:48,740
running your code and working with your functions.

19
00:00:48,740 --> 00:00:52,690
So when I'm in the correct region, I can go here and create a parameter,

20
00:00:52,690 --> 00:00:55,640
and in this parameter, I'll need to start by giving it a name.

21
00:00:55,640 --> 00:00:56,890
Now, for this first parameter,

22
00:00:56,890 --> 00:01:01,370
we'll start by giving it a name of CONSUMER_KEY. This will be one of the

23
00:01:01,370 --> 00:01:04,250
values that we got from Twitter in the previous video.

24
00:01:04,250 --> 00:01:05,000
For Description,

25
00:01:05,000 --> 00:01:08,560
I can just type out Twitter Consumer Key, and this will give

26
00:01:08,560 --> 00:01:10,770
us all the details we need. And then below,

27
00:01:10,770 --> 00:01:13,200
I'll need to pick between a tier for the Parameter

28
00:01:13,200 --> 00:01:15,640
Store of Standard or Advanced.

29
00:01:15,640 --> 00:01:18,530
I'm going to stick with the Standard tier right now because it won't cost

30
00:01:18,530 --> 00:01:21,070
me anything to put parameters with the Standard tier.

31
00:01:21,070 --> 00:01:24,220
But be sure to review the pricing documentation for parameters and

32
00:01:24,220 --> 00:01:27,230
parameter tiers before you go through with adding these.

33
00:01:27,230 --> 00:01:29,270
After you've selected the Standard tier,

34
00:01:29,270 --> 00:01:31,610
you can then pick the type of parameter you'll be using.

35
00:01:31,610 --> 00:01:33,320
We could use an unencrypted string,

36
00:01:33,320 --> 00:01:35,840
but in this case, I want to use a secure string.

37
00:01:35,840 --> 00:01:38,180
An alternative would be a string list where we'd have

38
00:01:38,180 --> 00:01:40,640
multiple strings separated by commas.

39
00:01:40,640 --> 00:01:41,920
But with this secure string,

40
00:01:41,920 --> 00:01:45,170
I can use KMS to encrypt the values of this string

41
00:01:45,170 --> 00:01:46,940
and make it a bit more secure.

42
00:01:46,940 --> 00:01:50,860
I can also choose if I want to use the KMS key inside of my current account,

43
00:01:50,860 --> 00:01:54,270
and by default, this will be a KMS key ID that is associated

44
00:01:54,270 --> 00:01:56,630
with the Systems Manager Parameter Store.

45
00:01:56,630 --> 00:02:00,940
You can see the ID for that key below with the alias/aws.ssm value down

46
00:02:00,940 --> 00:02:04,330
there, or I could choose a key from another AWS account,

47
00:02:04,330 --> 00:02:06,890
but they I'd have to provide some more configuration to do that.

48
00:02:06,890 --> 00:02:11,510
So I'm going to stick with my current account and the key associated with SSM.

49
00:02:11,510 --> 00:02:12,950
Now, if I had other KMS keys,

50
00:02:12,950 --> 00:02:15,640
I could use those in this application, but I'm going to stick with the

51
00:02:15,640 --> 00:02:18,940
free KMS key that's associated with this alias here.

52
00:02:18,940 --> 00:02:22,400
Next, I'm going to need to enter in the value for this parameter.

53
00:02:22,400 --> 00:02:22,640
Now,

54
00:02:22,640 --> 00:02:25,310
I'm going to copy and paste the consumer key value from the

55
00:02:25,310 --> 00:02:27,810
credentials that I copied down earlier, and then I'm going to

56
00:02:27,810 --> 00:02:30,470
scroll down and create this parameter.

57
00:02:30,470 --> 00:02:33,540
I could also add tags, but I'm not going to do that for right now.

58
00:02:33,540 --> 00:02:37,380
So now we have this consumer key even though the UI is a little bit wonky

59
00:02:37,380 --> 00:02:40,440
here, so I can close this out and see it a little better.

60
00:02:40,440 --> 00:02:43,860
And this consumer key will be storing an encrypted value of

61
00:02:43,860 --> 00:02:45,850
the consumer key that we got from Twitter.

62
00:02:45,850 --> 00:02:47,200
Now, when our application runs,

63
00:02:47,200 --> 00:02:49,670
it's going to make a call to the Parameter Store to get

64
00:02:49,670 --> 00:02:52,300
back the decrypted version of that key.

65
00:02:52,300 --> 00:02:53,300
So if you want to,

66
00:02:53,300 --> 00:02:56,400
you could add all of the Twitter credentials in this way, or

67
00:02:56,400 --> 00:03:02,000
you could wait a little bit longer and learn how to do it with boto3, the AWS SDK for Python.

