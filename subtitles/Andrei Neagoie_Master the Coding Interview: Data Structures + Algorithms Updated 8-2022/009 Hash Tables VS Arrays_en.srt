1
00:00:00,890 --> 00:00:01,790
Welcome back.

2
00:00:02,450 --> 00:00:03,050
Why?

3
00:00:03,110 --> 00:00:04,100
Hash tables.

4
00:00:05,060 --> 00:00:09,170
Hash tables are great when you want quick access to certain values.

5
00:00:09,350 --> 00:00:14,900
We remember that searching through an array for an item takes a really long time.

6
00:00:14,900 --> 00:00:21,380
We have to loop through every item and see if a certain string or a certain number is in an array with

7
00:00:21,380 --> 00:00:22,160
hash tables.

8
00:00:22,160 --> 00:00:23,870
That's really, really fast.

9
00:00:24,940 --> 00:00:28,780
And this is why you see hash tables in places like databases.

10
00:00:28,780 --> 00:00:29,240
Right.

11
00:00:29,260 --> 00:00:33,460
We want to search for something in a database and it gives it back to us right away.

12
00:00:34,210 --> 00:00:42,760
Similarly inserting items in a hash table, unlike an array that might shift indexes.

13
00:00:43,620 --> 00:00:49,500
Is typically of one, you just simply have to hash and create the key.

14
00:00:50,100 --> 00:00:55,230
Although we have those cases of collision most of the time, that's something that we don't need to

15
00:00:55,230 --> 00:00:56,130
worry about too much.

16
00:00:56,130 --> 00:00:59,130
And we can assume an insert of all of one.

17
00:00:59,950 --> 00:01:05,410
Then there's other aspects that are quite similar between the two arrays lets you quickly look up the

18
00:01:05,410 --> 00:01:06,850
value for a given.

19
00:01:06,850 --> 00:01:12,460
Key keys are called indexes in an array and we don't get to pick them.

20
00:01:12,460 --> 00:01:15,520
It's always 012, three in hash tables.

21
00:01:15,520 --> 00:01:16,600
We can pick them.

22
00:01:17,320 --> 00:01:25,630
So hash tables is kind of like a hack on top of an array to let us use flexible keys instead of being

23
00:01:25,630 --> 00:01:28,060
stuck with zero one, two, three.

24
00:01:29,260 --> 00:01:35,890
A problem of hash tables that we discussed was the idea of no concept of order in arrays.

25
00:01:35,920 --> 00:01:40,150
Each item was placed next to each other on a shelf in memory.

26
00:01:40,750 --> 00:01:43,780
Hash tables are kind of placed all over the place.

27
00:01:45,390 --> 00:01:51,570
Now that we have an idea of the differences between the two, I think it's time for us to actually work

28
00:01:51,570 --> 00:01:57,360
on some exercises and interview questions that will use hash tables in their answers.

29
00:01:58,450 --> 00:01:59,350
I'll see you in that one.

