WEBVTT
1
00:00:01.220 --> 00:00:03.780
Oh, we can feel the end almost.

2
00:00:03.800 --> 00:00:05.630
We're in rule number four.

3
00:00:05.660 --> 00:00:08.029
The final rule in our rule book.

4
00:00:08.210 --> 00:00:12.950
Drop non dominance or drop non dominant terms.

5
00:00:13.190 --> 00:00:14.240
What do we mean?

6
00:00:14.270 --> 00:00:15.200
Let's have a look.

7
00:00:16.680 --> 00:00:26.490
Let's say we have a function again with a really long name that says Print all numbers, then all pair

8
00:00:26.490 --> 00:00:27.300
sums.

9
00:00:27.930 --> 00:00:29.970
Maybe not the best name for our function.

10
00:00:29.970 --> 00:00:33.840
We can probably work on the readability here, but let's see what this function does.

11
00:00:34.230 --> 00:00:42.870
Well, this function takes numbers and these numbers variable, we're going to loop over them with a

12
00:00:42.900 --> 00:00:43.950
for each loop.

13
00:00:44.310 --> 00:00:48.000
So again, just looping over and logging out the numbers.

14
00:00:48.000 --> 00:00:53.760
And then we have another step, which should remind you that's probably an addition that we're doing.

15
00:00:53.760 --> 00:00:55.200
We're adding another step.

16
00:00:55.440 --> 00:01:00.330
And in here we're summing the pair sums.

17
00:01:00.330 --> 00:01:02.850
That is, we're adding.

18
00:01:03.720 --> 00:01:07.020
Each number one after another.

19
00:01:07.530 --> 00:01:11.190
Let's show you with a little bit of a demo here.

20
00:01:11.790 --> 00:01:18.930
If let's say we create actually, we'll just print numbers and in here for the numbers, let's just

21
00:01:18.930 --> 00:01:25.350
give it an array of one, two, three, four, five.

22
00:01:26.370 --> 00:01:28.170
If I click run here.

23
00:01:29.500 --> 00:01:31.660
We see that these are the numbers.

24
00:01:31.660 --> 00:01:36.160
One, two, three, four, five, because this is the step.

25
00:01:36.160 --> 00:01:37.710
We're just logging it out.

26
00:01:37.720 --> 00:01:39.100
Nothing too difficult.

27
00:01:39.430 --> 00:01:42.550
And these are their sums.

28
00:01:43.060 --> 00:01:51.400
All we're doing is adding one with one, then one with two, which equals three, one with three which

29
00:01:51.400 --> 00:01:55.990
equals four, one with four, which equals five and one and five which equals six.

30
00:01:55.990 --> 00:01:58.780
And then we move on to the next loop, which is.

31
00:01:59.620 --> 00:02:03.940
Two and one which equals three, two and two which equals four.

32
00:02:03.940 --> 00:02:06.970
And it keeps going on and on and on.

33
00:02:07.510 --> 00:02:14.260
So we see the loops that we've done here and problems like this is something we're going to do later

34
00:02:14.260 --> 00:02:14.920
on in the course.

35
00:02:14.920 --> 00:02:17.440
Right now, we're just worried about bingo.

36
00:02:17.530 --> 00:02:20.500
What do you think the big notation here is?

37
00:02:21.170 --> 00:02:30.650
Well, once again, if we do o of the first part is the for loop so we can say that there's of an.

38
00:02:31.680 --> 00:02:34.950
And then the second part, which again is another step.

39
00:02:34.950 --> 00:02:38.040
So we're going to say add plus.

40
00:02:39.380 --> 00:02:42.290
This one has two four loops nested.

41
00:02:42.440 --> 00:02:45.650
So that means oh to the power of two.

42
00:02:46.630 --> 00:02:46.960
All right.

43
00:02:46.960 --> 00:02:48.820
So that's our big O notation.

44
00:02:49.090 --> 00:02:54.430
But rule number four states that we want to drop the non dominant terms.

45
00:02:55.100 --> 00:02:58.940
That means we care about the most important term.

46
00:02:59.120 --> 00:03:02.690
In this case, we actually drop the N.

47
00:03:03.360 --> 00:03:12.060
And just have and to the power of two because as the input increases, the size of MN to the power of

48
00:03:12.060 --> 00:03:15.540
two is way more important than the MN.

49
00:03:15.780 --> 00:03:19.840
So we always just keep the dominant term.

50
00:03:19.860 --> 00:03:21.510
Let me give you another example.

51
00:03:22.150 --> 00:03:27.940
What if we had a function that had a big O of, let's say, X?

52
00:03:28.980 --> 00:03:35.670
To the power of two and then we'll say that it has three x.

53
00:03:36.810 --> 00:03:39.360
Plus 1000.

54
00:03:40.110 --> 00:03:44.940
And maybe we'll say plus X divided by two.

55
00:03:45.980 --> 00:03:46.610
All right.

56
00:03:46.700 --> 00:03:48.320
That's really, really confusing.

57
00:03:48.320 --> 00:03:49.380
That's math.

58
00:03:49.400 --> 00:03:51.970
We're not going to want to deal with that too much.

59
00:03:51.980 --> 00:03:57.140
How do we simplify this based on the drop non dominant terms?

60
00:03:58.450 --> 00:04:05.440
The fourth rule states that, again, we worry about the most important dominant term because X to the

61
00:04:05.440 --> 00:04:08.730
power of two is the most significant.

62
00:04:08.740 --> 00:04:19.060
That is, if X is five five to the power of two is 25, five times three is 15.

63
00:04:19.120 --> 00:04:24.610
This is 105 divided by two is 2.5.

64
00:04:24.820 --> 00:04:27.850
In this case, the dominant term is 100.

65
00:04:28.180 --> 00:04:32.230
But remember, with Big O, we're worried about scale.

66
00:04:32.230 --> 00:04:35.550
And as things grow larger and larger and larger.

67
00:04:35.560 --> 00:04:48.510
So when this becomes 5000, well, 5000 to the power of two or 500 to the power of two, that's 250,000,

68
00:04:48.520 --> 00:04:49.690
if I did the math right.

69
00:04:50.510 --> 00:04:53.430
Three times 500 is only 100.

70
00:04:53.510 --> 00:04:54.650
1500.

71
00:04:56.120 --> 00:05:01.160
100 is now insignificant and 500 divided by two is 250.

72
00:05:01.190 --> 00:05:04.430
You see how this has grown significantly more.

73
00:05:04.730 --> 00:05:07.760
Again, because we're only worried about scale here.

74
00:05:07.760 --> 00:05:11.660
We drop everything else and we can just ignore it completely.

75
00:05:11.660 --> 00:05:14.330
And this becomes X to the power of two.

76
00:05:14.750 --> 00:05:15.920
How nice is that?

77
00:05:16.010 --> 00:05:19.160
Just makes things so much simpler.

78
00:05:20.440 --> 00:05:21.720
So there you have it.

79
00:05:21.730 --> 00:05:24.730
We have now a way to simplify everything.

80
00:05:24.730 --> 00:05:27.010
If we go back to our past examples.

81
00:05:27.250 --> 00:05:28.450
Remember this one?

82
00:05:28.960 --> 00:05:30.070
Remember this one.

83
00:05:30.750 --> 00:05:38.790
It now makes sense why we've just said big O of n because we don't care about the insignificant items,

84
00:05:38.790 --> 00:05:40.680
only the most important ones.

85
00:05:40.830 --> 00:05:42.750
And same with this one.

86
00:05:44.370 --> 00:05:46.470
By the way, a fun little note here.

87
00:05:46.560 --> 00:05:52.950
If we had another loop inside of these two loops, well, this would become.

88
00:05:53.640 --> 00:05:54.210
Oh.

89
00:05:55.030 --> 00:06:01.360
To the power of X cubed or and cubed doesn't really matter what we have, but it's going to be to the

90
00:06:01.360 --> 00:06:05.260
power of three because we have three nested layers.

91
00:06:05.990 --> 00:06:07.640
And you can keep going.

92
00:06:07.670 --> 00:06:10.340
You can have to the power of four to the power of five.

93
00:06:10.370 --> 00:06:11.800
But here's the thing.

94
00:06:11.810 --> 00:06:18.740
If you have three nested loops, 99.99% of the time, that's usually a bad idea.

95
00:06:18.770 --> 00:06:23.180
It scales really, really badly, and most likely you're doing something wrong.

96
00:06:24.530 --> 00:06:25.410
And there you have it.

97
00:06:25.430 --> 00:06:27.680
We've gone over the four rules.

98
00:06:27.950 --> 00:06:33.230
And with this in mind, we're going to take a look at the cheat sheet that I've prepared for you.

99
00:06:33.230 --> 00:06:39.530
So from now on, instead of having to calculate everything and really look at every single detail of

100
00:06:39.530 --> 00:06:46.580
a function, you can right away, figure out what the big O is or what the time complexity of a function

101
00:06:46.580 --> 00:06:47.060
is.

