1
00:00:01,390 --> 00:00:06,610
It's time to celebrate because you just finished your first data structure and they're going to get

2
00:00:06,610 --> 00:00:07,840
more and more fun.

3
00:00:07,870 --> 00:00:13,990
But you see here that we've started to complete our mental model of data structures.

4
00:00:14,530 --> 00:00:19,210
I promised you that by the end of this course, this whole diagram is going to make sense.

5
00:00:19,210 --> 00:00:21,670
And we've finished a small part of it.

6
00:00:21,700 --> 00:00:23,050
The arrays.

7
00:00:23,960 --> 00:00:27,620
We talked about static and dynamic arrays.

8
00:00:28,130 --> 00:00:38,180
We talked about the big complexity and how dynamic arrays can sometimes have of n expense because,

9
00:00:38,180 --> 00:00:44,030
well, sometimes we have to double up or expand our memory.

10
00:00:44,330 --> 00:00:51,080
We also talked about how strings and questions regarding strings can be treated very similar to array

11
00:00:51,080 --> 00:00:51,830
questions.

12
00:00:52,560 --> 00:00:59,490
Where you just convert them into an array and then join them back up and return a string answer that

13
00:00:59,490 --> 00:00:59,970
you need.

14
00:01:00,780 --> 00:01:06,300
And there's a few other points for a race that we're going to talk about when we get into algorithms.

15
00:01:06,450 --> 00:01:15,000
But by now, you should take a look at the big cheat sheet and understand why the array data structure

16
00:01:15,000 --> 00:01:22,470
has these big numbers and understand when an array is a good thing to use.

17
00:01:22,680 --> 00:01:27,540
One thing that you'll note when it comes to arrays, especially when we get to algorithms, is that

18
00:01:27,540 --> 00:01:35,640
they're really, really good at having sorted data when it comes to sorting arrays are awesome because

19
00:01:35,640 --> 00:01:39,840
they're in memory in sequential order according to their index.

20
00:01:40,630 --> 00:01:45,610
Now, before I go on to the slide, you can pause the video.

21
00:01:45,640 --> 00:01:49,840
Think about when you would want to use an array when you wouldn't.

22
00:01:49,960 --> 00:01:54,220
Because in about 5 seconds I'm going to show you the pros and cons.

23
00:01:54,310 --> 00:01:58,780
So pause the video and the answer to when you should use an array.

24
00:02:00,100 --> 00:02:01,690
Well, here it is.

25
00:02:02,170 --> 00:02:04,900
Arrays are great for fast lookups.

26
00:02:05,170 --> 00:02:10,060
That is just accessing information where you know which index you want to look up.

27
00:02:10,539 --> 00:02:12,760
It's really fast, that push and pop.

28
00:02:12,760 --> 00:02:18,610
So adding things at the end of an array or taking things out at the end of the array.

29
00:02:18,760 --> 00:02:24,340
And of course, because it's ordered, having something that is ordered and close to each other and

30
00:02:24,340 --> 00:02:26,500
memory makes it really fast.

31
00:02:27,360 --> 00:02:34,410
However, it has slow inserts and deletes because we have to shift to race whenever it's not at the

32
00:02:34,410 --> 00:02:35,700
very end of the array.

33
00:02:36,270 --> 00:02:40,980
And then finally, if using static arrays, it's fixed size.

34
00:02:41,460 --> 00:02:47,910
That means sometimes you have to declare the memory ahead of time and how large of an array you want.

35
00:02:48,450 --> 00:02:54,930
But that can be avoided if we use some of the more modern languages that have dynamic arrays.

36
00:02:55,440 --> 00:02:59,820
Also, I just realized that this smiley face kind of looks like a crazy person.

37
00:03:00,630 --> 00:03:02,280
But this is meant to be good.

38
00:03:02,310 --> 00:03:03,140
This is good.

39
00:03:03,150 --> 00:03:05,280
This scary little icon.

40
00:03:05,280 --> 00:03:06,240
That's bad.

41
00:03:07,070 --> 00:03:07,600
Okay.

42
00:03:08,150 --> 00:03:09,800
I think we get it now.

43
00:03:10,160 --> 00:03:14,360
We're going to come back to a raise because a lot of other data structures we're going to talk about

44
00:03:14,360 --> 00:03:18,560
later on, like Qs and stacks are related to race.

45
00:03:19,190 --> 00:03:24,620
But for now, I want to get into other data structures because we still have a few to go through.

46
00:03:25,320 --> 00:03:26,460
I'll see you in the next one.

47
00:03:27,210 --> 00:03:27,750
Bye bye.

