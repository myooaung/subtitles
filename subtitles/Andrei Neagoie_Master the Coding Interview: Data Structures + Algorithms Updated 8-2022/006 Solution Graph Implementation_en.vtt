WEBVTT
1
00:00:01.330 --> 00:00:02.110
Welcome back.

2
00:00:02.660 --> 00:00:04.580
How did you do in this exercise?

3
00:00:05.150 --> 00:00:07.790
Were you successful where you're not?

4
00:00:08.330 --> 00:00:09.330
Here's the thing.

5
00:00:09.350 --> 00:00:16.730
This is actually extremely simple, but it looks overly complex.

6
00:00:17.420 --> 00:00:19.830
And that's a general trend with graphs.

7
00:00:19.850 --> 00:00:26.390
They look really, really intimidating at first and really hard to really think about them in your mind.

8
00:00:26.750 --> 00:00:33.380
But once you put things down, understand things, maybe draw things out, they're actually quite simple

9
00:00:33.380 --> 00:00:36.530
and they're very similar to what we've learned up until now.

10
00:00:36.650 --> 00:00:44.000
Everything we've learned about hash tables, arrays, trees, length lists are all part of graphs and

11
00:00:44.000 --> 00:00:44.480
graphs.

12
00:00:44.480 --> 00:00:46.730
Simply use those data structures.

13
00:00:46.730 --> 00:00:52.190
For those of you that weren't able to solve this problem, it might be because you are a little bit

14
00:00:52.190 --> 00:00:55.010
intimidated as to the task at hand.

15
00:00:55.970 --> 00:00:58.910
But let me show you how simple this can be.

16
00:00:59.090 --> 00:01:09.050
In order to add a vertex to our adjacency list, all we need to do is to simply say this dot add or

17
00:01:09.050 --> 00:01:14.080
this adjacency list is going to have node.

18
00:01:14.090 --> 00:01:22.220
So we're adding the key into this object of the node that we want to add, and that's going to equal

19
00:01:22.220 --> 00:01:29.210
an empty array because when we enter a new node, it's not going to have any connections initially.

20
00:01:29.810 --> 00:01:32.900
We want to add the edges afterwards.

21
00:01:33.820 --> 00:01:39.250
And then finally, we want to increase the number of nodes by one.

22
00:01:39.730 --> 00:01:41.290
Now we have one more.

23
00:01:41.560 --> 00:01:42.340
That's it.

24
00:01:43.120 --> 00:01:46.100
We've just created our nodes.

25
00:01:46.120 --> 00:01:46.860
Look at that.

26
00:01:46.870 --> 00:01:51.430
We have zero all the way through six and they are in our graph.

27
00:01:51.460 --> 00:01:54.250
Unfortunately, none of them connect to anything.

28
00:01:54.250 --> 00:01:57.810
We've just created the nodes, but none of the edges.

29
00:01:57.820 --> 00:01:59.560
So let's go ahead and do that.

30
00:02:00.330 --> 00:02:04.290
With the edges because this is an undirected graph.

31
00:02:05.040 --> 00:02:07.470
Well, we'll have to do is say this dot.

32
00:02:08.270 --> 00:02:12.470
A Jason list is going to say node one.

33
00:02:12.470 --> 00:02:14.450
That is the first.

34
00:02:15.360 --> 00:02:16.860
Node that we're giving.

35
00:02:17.700 --> 00:02:22.200
And the node one is going to push.

36
00:02:22.470 --> 00:02:23.700
Remember, this is an object.

37
00:02:23.700 --> 00:02:24.930
So we're getting the key.

38
00:02:24.930 --> 00:02:28.500
So that is let's say this is node zero.

39
00:02:28.530 --> 00:02:35.100
It's going to push to the array of connections that no zero has and say that it's going to be connected

40
00:02:35.100 --> 00:02:36.450
to Node two.

41
00:02:37.290 --> 00:02:42.600
And because this is undirected, that means we have to do it the other way around as well.

42
00:02:42.600 --> 00:02:44.310
So we simply copy this.

43
00:02:45.140 --> 00:02:47.450
Let's make this a little bit bigger so you can see.

44
00:02:48.610 --> 00:02:51.040
And we simply reverse things.

45
00:02:51.040 --> 00:02:51.610
So No.

46
00:02:51.610 --> 00:02:54.850
Two is also connected to Node one.

47
00:02:55.560 --> 00:02:56.970
If I press run here.

48
00:02:58.440 --> 00:02:59.130
Look at that.

49
00:02:59.430 --> 00:03:01.620
We have our graph.

50
00:03:02.930 --> 00:03:04.250
How simple is that?

51
00:03:04.280 --> 00:03:05.460
That wasn't bad, right?

52
00:03:05.480 --> 00:03:09.860
And I mean, we could create this in a link list if we wanted to.

53
00:03:09.890 --> 00:03:12.560
But the concept is the same.

54
00:03:12.980 --> 00:03:18.770
If we look at zero that is connected to one and two, we can confirm that zero is connected to one and

55
00:03:18.770 --> 00:03:19.250
two.

56
00:03:19.340 --> 00:03:24.410
So if we look at 13201 is connected to 3 to 0.

57
00:03:24.470 --> 00:03:27.650
And let's check maybe five, which is connected to four.

58
00:03:27.650 --> 00:03:31.310
Six five is connected to four, six.

59
00:03:32.210 --> 00:03:33.160
And there it is.

60
00:03:33.170 --> 00:03:38.720
We've just created our very first graph when it comes to interviews.

61
00:03:38.840 --> 00:03:46.730
Graphs aren't as big of a topic as the other data structures, mostly because they take a bit of time

62
00:03:46.730 --> 00:03:50.740
and questions regarding graphs can be overly complex.

63
00:03:50.750 --> 00:03:54.500
That doesn't mean that you won't see them, but they are rare.

64
00:03:54.740 --> 00:04:02.600
However, by knowing the basic fundamentals, what types of graphs we have and how you might create

65
00:04:02.600 --> 00:04:09.710
graphs, how you might want to hold data in graphs such as adjacency matrix, adjacency list and edge

66
00:04:09.710 --> 00:04:10.250
list.

67
00:04:10.430 --> 00:04:16.040
You already show that you have the ability to understand graphs, which is an advanced concept.

68
00:04:16.700 --> 00:04:21.550
Now because graph questions aren't that big a part of interviews.

69
00:04:21.560 --> 00:04:24.440
We won't be spending any more coding time on it.

70
00:04:24.440 --> 00:04:29.660
But also keep in mind that we have a section coming up on algorithms where we're going to dive a little

71
00:04:29.660 --> 00:04:35.660
bit deeper into things such as breadth first search and depth for search, which can be applied both

72
00:04:35.660 --> 00:04:37.310
to graphs and trees.

73
00:04:37.670 --> 00:04:43.040
So if you feel like you can still learn a bit about graphs, don't worry, we're still getting there.

74
00:04:43.430 --> 00:04:47.000
But for now, congratulations on creating your first graph.

75
00:04:47.950 --> 00:04:49.150
I'll see you in the next video.

76
00:04:49.690 --> 00:04:50.350
Bye bye.

