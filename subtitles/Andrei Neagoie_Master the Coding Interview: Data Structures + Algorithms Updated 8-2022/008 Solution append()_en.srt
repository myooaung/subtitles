1
00:00:01,589 --> 00:00:02,490
Welcome back.

2
00:00:03,780 --> 00:00:04,920
How was the exercise?

3
00:00:04,950 --> 00:00:08,010
Were you able to figure out the append method?

4
00:00:09,520 --> 00:00:11,230
Let me show you what I would have done.

5
00:00:13,010 --> 00:00:19,340
The first thing we would want to do is to create a new node with the value.

6
00:00:20,230 --> 00:00:22,210
And we can do that quite easily.

7
00:00:22,480 --> 00:00:25,060
Saying const new node.

8
00:00:25,180 --> 00:00:31,630
That's going to equal well, an object with the properties that we should be familiar by now we have

9
00:00:31,630 --> 00:00:36,190
value that is going to equal the value that we get as the parameter.

10
00:00:36,610 --> 00:00:38,410
And then the next.

11
00:00:38,950 --> 00:00:41,620
That will be no.

12
00:00:43,150 --> 00:00:49,240
So we have our new node here and we want to attach it now after the ten node.

13
00:00:49,950 --> 00:00:51,720
Which is our very first note.

14
00:00:52,330 --> 00:00:59,260
Well, we can simply do that by saying this dot tale.

15
00:00:59,900 --> 00:01:06,640
Dot next which is the remember this part over here next equals null.

16
00:01:06,650 --> 00:01:09,500
So that is what is the tail.

17
00:01:09,500 --> 00:01:16,100
That is the last item in our list because this method doesn't know that we only have one item, we could

18
00:01:16,100 --> 00:01:17,090
have 100 items.

19
00:01:17,090 --> 00:01:18,560
We just want to add at the end.

20
00:01:18,560 --> 00:01:23,030
So it's going to grab the tail and then grab the next value of the tail.

21
00:01:23,030 --> 00:01:28,670
So it's going to grab the pointer of the tail and say, hey, instead of pointing it to null, pointed

22
00:01:28,670 --> 00:01:31,310
to this new node that we just created.

23
00:01:34,000 --> 00:01:34,540
All right.

24
00:01:34,540 --> 00:01:42,280
We've pointed the tail to now point to the new node which has next null already set up.

25
00:01:42,850 --> 00:01:50,170
And then we also want to say that this what we had as tail before, which was the value of ten is no

26
00:01:50,170 --> 00:01:51,060
longer the tail.

27
00:01:51,070 --> 00:01:57,880
We have a new last item that is this tail is now going to equal.

28
00:01:59,090 --> 00:02:00,950
New node.

29
00:02:02,370 --> 00:02:12,990
And because we are running this operation after this one, when we run this, the tail next is still

30
00:02:12,990 --> 00:02:13,980
this node.

31
00:02:14,860 --> 00:02:16,840
And as soon as we update.

32
00:02:18,110 --> 00:02:25,430
This node to have a next of the new node we can now remove.

33
00:02:25,610 --> 00:02:28,610
We can now update the tail to be the new node.

34
00:02:29,480 --> 00:02:36,560
Because by that point, by the time this line runs, the next has been updated properly for this older

35
00:02:36,560 --> 00:02:37,430
retail value.

36
00:02:38,420 --> 00:02:45,010
And then finally we want to make sure that we add the length to equal to now.

37
00:02:45,020 --> 00:02:46,640
So we're going to do plus plus.

38
00:02:47,480 --> 00:02:52,340
And just for fun, because we want to make sure that we do this right, we're going to return this,

39
00:02:52,340 --> 00:02:54,700
which is the link list.

40
00:02:54,710 --> 00:02:59,480
Remember, this just references what this class is that gets instantiated.

41
00:02:59,480 --> 00:03:03,710
So we're just going to say return this so that we get back our link list.

42
00:03:04,890 --> 00:03:09,840
I'm going to remove the console lock for now and see what happens when we just run a pant.

43
00:03:09,870 --> 00:03:10,450
Five.

44
00:03:10,470 --> 00:03:11,790
I'm going to click Run.

45
00:03:13,230 --> 00:03:18,540
All right, I get returned our link list, which has a head of Value ten.

46
00:03:18,630 --> 00:03:25,290
Next is the new node that we created the value of five and next null.

47
00:03:25,500 --> 00:03:28,620
And then the tail is value of five.

48
00:03:28,620 --> 00:03:30,030
Next is null.

49
00:03:30,030 --> 00:03:32,700
Perfect with a length of two.

50
00:03:32,940 --> 00:03:33,630
Awesome.

51
00:03:33,660 --> 00:03:34,890
It looks like it's working.

52
00:03:34,890 --> 00:03:37,110
Let's do this one as well.

53
00:03:37,410 --> 00:03:38,100
Append.

54
00:03:39,710 --> 00:03:40,670
And there we go.

55
00:03:40,910 --> 00:03:43,370
We have value of five.

56
00:03:43,940 --> 00:03:50,210
So the head is referencing value of ten, which points to the next node, which has value of five,

57
00:03:50,210 --> 00:03:54,890
which points to next, which is an object that is the tail.

58
00:03:55,730 --> 00:04:00,560
Because of the way logging works, it won't show this nested.

59
00:04:00,590 --> 00:04:02,330
It'll just say that this is an object.

60
00:04:02,330 --> 00:04:06,080
But this is pointing to tail which has a value of 16.

61
00:04:06,080 --> 00:04:08,330
Next null length of three.

62
00:04:09,720 --> 00:04:10,770
How cool is that?

63
00:04:10,800 --> 00:04:18,480
We just created our linked list, our ten, five, 16 link list, just like that.

64
00:04:18,959 --> 00:04:20,279
I hope you got that right.

65
00:04:20,279 --> 00:04:21,450
But if you didn't.

66
00:04:21,480 --> 00:04:22,620
Don't get discouraged.

67
00:04:22,620 --> 00:04:25,470
This takes some time to get used to.

68
00:04:26,040 --> 00:04:31,950
Luckily for you, once you write it a couple of times, then it becomes, like I said, second nature.

69
00:04:31,950 --> 00:04:37,760
So don't stress out because I have another challenge for you now that you know how to do a pen.

70
00:04:37,800 --> 00:04:45,330
You should be able to do prep and right prep end is adding to the beginning of the list.

71
00:04:45,900 --> 00:04:53,760
So let's say that in our list over here, we want to add one as our head now instead of ten.

72
00:04:54,120 --> 00:04:57,770
How would we do that with a method called prep in?

73
00:04:58,880 --> 00:05:00,920
This present is going to take a value.

74
00:05:02,200 --> 00:05:12,910
And we're going to be able to run a command like my linked list dot pre penned one to add the one at

75
00:05:12,910 --> 00:05:14,590
the beginning of this list.

76
00:05:15,700 --> 00:05:17,350
So code here.

77
00:05:17,380 --> 00:05:18,220
Good luck.

78
00:05:18,250 --> 00:05:19,720
Let's see if we can solve this one.

79
00:05:19,720 --> 00:05:23,620
And I'll see you in the next video where I give you the solution.

