WEBVTT
1
00:00:01.000 --> 00:00:04.840
Now I've created for you a nice big old cheat sheet.

2
00:00:05.110 --> 00:00:10.420
Although we've taken a lot of time to go through everything at the end of the day, when it comes to

3
00:00:10.420 --> 00:00:11.710
preparing for an interview.

4
00:00:12.280 --> 00:00:14.980
This is pretty much all you need to know.

5
00:00:14.980 --> 00:00:20.320
And you can use this to review some of the topics we've covered, as well as what we're going to cover

6
00:00:20.320 --> 00:00:21.730
for future sections.

7
00:00:22.570 --> 00:00:26.960
We see here that the Big O's, they're mainly these ones over here.

8
00:00:26.980 --> 00:00:29.110
Now, we haven't gone through everything.

9
00:00:29.970 --> 00:00:31.980
We've gone through constant time.

10
00:00:32.680 --> 00:00:39.220
But we haven't gone through something like, oh, log in or own log in.

11
00:00:40.240 --> 00:00:43.420
Or o to the to to the power of n.

12
00:00:44.200 --> 00:00:46.990
Or even this one with the exclamation mark.

13
00:00:46.990 --> 00:00:48.040
I wonder what that is.

14
00:00:48.070 --> 00:00:50.080
Well, we're going to get into that.

15
00:00:50.080 --> 00:00:55.330
But the reason I haven't talked about them yet is because they're going to come up.

16
00:00:55.330 --> 00:01:03.730
When we talk about data structures and algorithms, these commented out big notations are very specific

17
00:01:03.730 --> 00:01:07.970
for certain algorithms and data structures to optimize code.

18
00:01:07.990 --> 00:01:12.760
So we're going to get into that when we talk about these topics because they'll make more sense to you

19
00:01:12.910 --> 00:01:13.900
such as.

20
00:01:13.930 --> 00:01:17.980
O log n is used a lot when it comes to searching algorithms.

21
00:01:18.760 --> 00:01:26.800
Or own log in is used a lot when it comes to sorting algorithms and something like oh two to the power

22
00:01:26.800 --> 00:01:31.210
of NW comes into play when we talk about recursive algorithms.

23
00:01:31.450 --> 00:01:33.430
So again, don't get overwhelmed.

24
00:01:33.430 --> 00:01:40.420
We've talked about these three major ones and we're going to come back to the rest throughout the course.

25
00:01:41.140 --> 00:01:44.710
Now when it comes to Begos, I want you to keep in mind two things.

26
00:01:44.710 --> 00:01:51.580
When you're iterating through half a collection, it's still o to the power of or O to the n, remember

27
00:01:51.850 --> 00:01:53.670
o n divided by two.

28
00:01:53.680 --> 00:01:55.330
It's still at the end of the day.

29
00:01:55.810 --> 00:01:56.430
O n.

30
00:01:56.440 --> 00:01:57.880
Remember our rule book?

31
00:01:58.850 --> 00:02:04.910
And again, another trick that often comes up in interviews is that two separate collections should

32
00:02:04.910 --> 00:02:14.570
be A plus B or if they're nested A times B, so two separate inputs should have two separate variables

33
00:02:14.570 --> 00:02:15.890
in big notation.

34
00:02:16.940 --> 00:02:21.740
And just to keep in mind what causes time in a function, because that's what we're measuring right

35
00:02:21.740 --> 00:02:22.160
now.

36
00:02:22.160 --> 00:02:30.290
Well, operations, comparisons, looping, we know that takes a while and things like outside function

37
00:02:30.290 --> 00:02:33.350
calls when you have a function inside of a function.

38
00:02:34.800 --> 00:02:40.170
And then finally we talked about our rule book, Always Big O measures the worst case.

39
00:02:40.380 --> 00:02:42.260
We want to remove constants.

40
00:02:42.270 --> 00:02:46.020
We want to have different inputs that have different variables.

41
00:02:46.020 --> 00:02:49.680
So O, A plus B, A and B are res.

42
00:02:49.710 --> 00:02:51.690
If they're nested are a times P.

43
00:02:51.690 --> 00:02:56.580
Again, something that we've mentioned up here, the easy way to remember this is addition four steps

44
00:02:56.580 --> 00:03:00.430
in order and multiplication for nested steps.

45
00:03:00.450 --> 00:03:05.520
And then finally rule four is to drop non dominant terms.

46
00:03:06.250 --> 00:03:07.330
Pretty simple, right?

47
00:03:08.130 --> 00:03:14.310
I'm going to bring this big cheat sheet back when we start talking and filling our gaps with the rest

48
00:03:14.310 --> 00:03:15.600
of the big old notation.

49
00:03:15.930 --> 00:03:18.150
But for now, let's get into the next lesson.

