1
00:00:00,710 --> 00:00:05,900
I like to think of breadth first search as a water flooding from the top.

2
00:00:06,020 --> 00:00:10,090
Kind of like this where we check from the top all the way down.

3
00:00:10,100 --> 00:00:16,910
And I like to think of breadth for a search as these little lines that go one as deep as they can.

4
00:00:16,910 --> 00:00:20,150
And then they keep going to the right.

5
00:00:22,090 --> 00:00:22,750
But.

6
00:00:23,450 --> 00:00:26,000
What is the advantage over the other?

7
00:00:26,030 --> 00:00:33,770
They both do the same thing traversal, but each one is used for different reasons and in interviews

8
00:00:33,770 --> 00:00:40,910
you'll get questions about what type of traversal to do and usually you'll have one of these two answers

9
00:00:40,910 --> 00:00:41,990
that you'll have to say.

10
00:00:42,140 --> 00:00:44,780
So when should you use one over the other?

11
00:00:44,780 --> 00:00:47,510
And we're going to explore that throughout the next couple of videos.

12
00:00:47,510 --> 00:00:50,780
But I want to start off with the main pros and cons.

13
00:00:51,320 --> 00:00:56,830
The time complexity for breadth, for search and depth for search is the same, right?

14
00:00:56,840 --> 00:01:03,290
They all visit the nodes at least once, so it's o of n all traversal is o of NW.

15
00:01:03,830 --> 00:01:09,770
So when we're trying to traverse through a tree or a graph we're really trying to do is walk through

16
00:01:09,770 --> 00:01:12,710
the tree without ever repeating ourselves.

17
00:01:13,250 --> 00:01:19,220
And the order is the thing that matters when it comes to breakfast, search and depth for a search.

18
00:01:19,910 --> 00:01:22,370
Now let's talk about breath first.

19
00:01:22,370 --> 00:01:24,800
Search with breath for search.

20
00:01:25,220 --> 00:01:32,570
It's very good for finding the shortest path between a starting point and any other reachable note,

21
00:01:33,050 --> 00:01:40,190
because we always start off with the root node and then search the closest nodes first and then the

22
00:01:40,190 --> 00:01:42,920
nodes further and then further and then further.

23
00:01:42,920 --> 00:01:48,560
And this is going to become more apparent when we talk about graph traversal and we have some videos

24
00:01:48,560 --> 00:01:51,140
specifically for this discussion.

25
00:01:51,320 --> 00:01:58,370
But the one down side with breath for search is that it requires more memory than depth for search.

26
00:01:59,430 --> 00:02:03,510
Again something we'll discuss more of when we start coating it.

27
00:02:03,930 --> 00:02:12,090
But a good rule of thumb is that if you have additional information on the location of the target node

28
00:02:12,480 --> 00:02:20,850
and you know that the node is likely in the upper level of a tree, then breadth first search is better

29
00:02:20,850 --> 00:02:24,990
because it will search through the closest nodes first.

30
00:02:25,730 --> 00:02:29,690
On the other hand, depth for search is the opposite.

31
00:02:30,080 --> 00:02:36,740
If you know that the node is likely at the lower level of a tree, perhaps depth where search is better

32
00:02:36,740 --> 00:02:37,520
in that case.

33
00:02:38,990 --> 00:02:45,620
And death research is really good at asking the question Does the path exist to a certain node from

34
00:02:45,620 --> 00:02:47,300
a source node to a target node?

35
00:02:47,300 --> 00:02:50,300
Again, something we'll get more into when we talk about graphs.

36
00:02:50,900 --> 00:02:57,830
The big advantage with depth for search is that it uses less memory than breath for search.

37
00:02:58,400 --> 00:03:04,550
The downside with depth for search is that it can get slow, especially if the tree or graph is really,

38
00:03:04,550 --> 00:03:10,010
really deep and it's not necessarily good at finding the shortest path like breadth for search.

39
00:03:11,370 --> 00:03:16,920
Now that we have an idea of when to use what, I know it's not 100% yet.

40
00:03:16,920 --> 00:03:17,850
We're getting there.

41
00:03:17,850 --> 00:03:20,160
But first, I want to do a bit of an exercise.

