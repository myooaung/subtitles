1
00:00:00,530 --> 00:00:01,400
Welcome back.

2
00:00:02,060 --> 00:00:09,350
The beauty of what we just learned in tree traversal, which was oh and we're visiting every node is

3
00:00:09,350 --> 00:00:16,730
that it's the same as in graph traversal because trees are just simply a type of graph.

4
00:00:17,520 --> 00:00:24,750
So using the same technique instead of using left and right properties, perhaps there's ten children.

5
00:00:25,260 --> 00:00:30,540
Well, we can do the same thing using depth, first search and breath, first search.

6
00:00:30,900 --> 00:00:33,410
And this is really powerful, right?

7
00:00:33,420 --> 00:00:41,730
Because graphs are used to model real life models, such as a recommendation engine in Amazon.

8
00:00:42,540 --> 00:00:53,190
We can now see what type of items are perhaps related or the closest relation to the last book that

9
00:00:53,190 --> 00:00:53,790
we bought.

10
00:00:54,180 --> 00:01:01,890
And in that case they would use something like breath for a search or on Facebook to see what type of

11
00:01:01,890 --> 00:01:04,620
friend requests I should be recommended.

12
00:01:04,890 --> 00:01:12,240
If I have a connection on LinkedIn, perhaps I might use depth for a search to see what degree of connection

13
00:01:12,240 --> 00:01:15,600
I have with that really important SEO.

14
00:01:15,780 --> 00:01:17,400
We use depth for search.

15
00:01:18,100 --> 00:01:25,930
And these are the bases of how peer to peer networks work, how Google Maps works.

16
00:01:26,350 --> 00:01:27,010
Right.

17
00:01:27,310 --> 00:01:29,920
Which is really, really powerful.

18
00:01:31,020 --> 00:01:32,520
And I have a nice visual here.

19
00:01:32,910 --> 00:01:35,550
I have our visual all go here.

20
00:01:35,700 --> 00:01:36,630
Our good friend.

21
00:01:36,630 --> 00:01:38,880
And they have left for search.

22
00:01:38,880 --> 00:01:44,880
And I made this little graph and we can traverse now using actually let's do breath for a search first

23
00:01:44,880 --> 00:01:46,800
and we'll start off with zero.

24
00:01:46,800 --> 00:01:51,930
So I'm going to enter zero in here and see how depth where search would work.

25
00:01:52,230 --> 00:01:54,270
We check all the closest nodes.

26
00:01:54,270 --> 00:01:58,890
One, three, four, five, six, and then we start with one.

27
00:01:58,890 --> 00:01:59,970
Does it have any children?

28
00:01:59,970 --> 00:02:02,310
Yeah, two, seven and eight.

29
00:02:02,310 --> 00:02:04,170
And then we go next in line three.

30
00:02:04,170 --> 00:02:05,170
What about four?

31
00:02:05,190 --> 00:02:06,190
What about five?

32
00:02:06,210 --> 00:02:07,020
What about six?

33
00:02:07,020 --> 00:02:08,400
They don't have any children.

34
00:02:09,250 --> 00:02:09,750
Okay.

35
00:02:09,759 --> 00:02:10,720
Let's go.

36
00:02:10,720 --> 00:02:14,140
Keep going down to the next place that has children.

37
00:02:14,870 --> 00:02:21,530
And we traverse the graph, as you can see, starting with the our closest neighbors and then going

38
00:02:21,530 --> 00:02:27,110
further and further out with a depth for a search.

39
00:02:27,320 --> 00:02:30,020
Let's say we're starting at zero.

40
00:02:31,090 --> 00:02:32,560
And I hit go.

41
00:02:32,710 --> 00:02:34,060
We go to one.

42
00:02:36,100 --> 00:02:37,090
Then to.

43
00:02:38,760 --> 00:02:39,840
Then seven.

44
00:02:39,960 --> 00:02:41,760
And then we're going to keep going deeper.

45
00:02:42,300 --> 00:02:42,960
Eight.

46
00:02:44,090 --> 00:02:47,180
We're going to go to nine, then ten.

47
00:02:47,210 --> 00:02:51,950
There's no more nodes, so we're going to go all the way back and go to the next in the list.

48
00:02:51,950 --> 00:02:52,820
That is three.

49
00:02:53,180 --> 00:02:56,210
Then four, then five, then six.

50
00:02:58,570 --> 00:03:07,030
So just by looking at this, you might see what I meant when I gave you the information at the beginning

51
00:03:07,030 --> 00:03:08,020
of this section.

52
00:03:08,290 --> 00:03:13,390
That is, breadth for search is usually good for shortest path.

53
00:03:13,390 --> 00:03:16,680
That is what's the closest to our node?

54
00:03:16,690 --> 00:03:19,870
What are the most related items on Amazon?

55
00:03:20,790 --> 00:03:26,280
Who are our closest friends on Facebook or closest connections on LinkedIn?

56
00:03:26,610 --> 00:03:32,550
Versus depth first search, which is really good to see if something exists.

57
00:03:34,740 --> 00:03:43,170
With death research, we're able to go really deep into a graph fairly fast, then breath for search

58
00:03:43,170 --> 00:03:45,930
that might cost a bit of extra memory.

59
00:03:46,870 --> 00:03:52,210
Let's talk about these two algorithms in more detail when it comes to graphs.

