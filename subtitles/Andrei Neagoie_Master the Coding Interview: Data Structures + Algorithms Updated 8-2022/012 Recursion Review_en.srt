1
00:00:01,440 --> 00:00:09,150
When we talk about recursion in computer science, we're talking about a function that calls itself.

2
00:00:09,660 --> 00:00:18,720
This type of technique is really good at some problems because of its ability to maintain state a different

3
00:00:18,720 --> 00:00:22,710
level of recursion just like our coachmen.

4
00:00:23,520 --> 00:00:24,930
Watching TV here.

5
00:00:25,080 --> 00:00:32,610
Recursion can be thought of as a bit of glass that gets filled up with recursive calls of functions,

6
00:00:33,150 --> 00:00:41,070
and then we start popping from the top until the very last function gets popped off and returns a value.

7
00:00:42,270 --> 00:00:49,140
One thing that we want to be careful of with recursion was this idea of Stack Overflow, this added

8
00:00:49,140 --> 00:00:57,390
memory space, as we keep calling the same function over and over until we possibly can reach a limit

9
00:00:57,840 --> 00:00:59,550
and get Stack Overflow.

10
00:01:00,810 --> 00:01:07,110
The rule of thumb that we learned is that we should use recursion when it makes code more readable.

11
00:01:08,110 --> 00:01:13,030
But sometimes it can be less efficient than iterative or looping solutions.

12
00:01:13,030 --> 00:01:14,440
So we have to be careful.

13
00:01:15,200 --> 00:01:23,480
We also learned the rule that anything you do with a recursion can be done iteratively, and in interviews,

14
00:01:23,480 --> 00:01:31,490
you'll get asked the question of the pros and cons of why we might want to use recursive over iterative.

15
00:01:31,880 --> 00:01:35,570
And I know I've brought this up before, but it's worth repeating.

16
00:01:36,050 --> 00:01:44,870
Recursion is interesting and clever, but can be costly, so you have to be really careful with it because

17
00:01:44,870 --> 00:01:48,590
recursion and space complexity are not friends.

18
00:01:49,370 --> 00:01:56,540
But when it comes to some problems like sorting and tree traversal, you'll see that we're going to

19
00:01:56,540 --> 00:02:00,230
have to use recursive solutions to make things simpler.

20
00:02:00,530 --> 00:02:06,770
Specifically, when we talk about these upcoming topics, we're going to be using recursion.

21
00:02:07,160 --> 00:02:08,470
So get ready for it.

22
00:02:08,479 --> 00:02:09,380
Merge sort.

23
00:02:09,380 --> 00:02:12,530
QuickSort tree traversal graph traversal.

24
00:02:12,560 --> 00:02:14,180
All use recursion.

25
00:02:15,060 --> 00:02:20,010
Now we're equipped a lot better to handle those situations that are going to come up.

26
00:02:20,850 --> 00:02:26,100
We're starting to build our mind map slowly and slowly.

27
00:02:26,580 --> 00:02:31,320
And you see over here that when it comes to tree data structure.

28
00:02:32,060 --> 00:02:35,000
Ask yourself, should we use recursion?

29
00:02:35,180 --> 00:02:42,470
Most of the time you do want to use recursion, but be mindful that space complexity or Stack Overflow

30
00:02:42,500 --> 00:02:43,370
can happen.

31
00:02:44,160 --> 00:02:45,240
I'll see you in the next one.

