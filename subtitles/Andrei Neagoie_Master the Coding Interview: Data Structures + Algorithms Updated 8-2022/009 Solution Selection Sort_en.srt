1
00:00:00,510 --> 00:00:01,410
Welcome back.

2
00:00:01,859 --> 00:00:05,310
I've left for you the solution for the selection sort.

3
00:00:06,050 --> 00:00:13,430
Now I'm not going to be going one by one through each sorting algorithm because it does take a lot of

4
00:00:13,430 --> 00:00:14,040
time.

5
00:00:14,060 --> 00:00:19,160
I don't want to bore you and lose you because there's so many more exciting things happening throughout

6
00:00:19,160 --> 00:00:20,600
the next couple of videos.

7
00:00:20,630 --> 00:00:24,440
So I'll leave this for you to see how it works.

8
00:00:24,440 --> 00:00:26,810
It's not that much different from bubble sort.

9
00:00:27,080 --> 00:00:29,240
We see that with selection sort.

10
00:00:29,270 --> 00:00:36,350
We're setting the current index as the minimum, so the very first item in the array becomes the minimum.

11
00:00:36,830 --> 00:00:41,180
But when we loop through the rest of the list.

12
00:00:41,770 --> 00:00:43,600
We want to update the minimum.

13
00:00:44,110 --> 00:00:46,780
If the current is lower than what we had previously.

14
00:00:46,780 --> 00:00:52,540
So what we had here where we initially set the first item in the array 99 as the minimum.

15
00:00:52,720 --> 00:00:55,360
As soon as we get to four, we're going to 44.

16
00:00:55,390 --> 00:00:58,720
We're going to say, oh, 44 is less than 99.

17
00:00:58,750 --> 00:01:00,880
Let's update the minimum.

18
00:01:01,000 --> 00:01:05,290
So that index where 44 is is now the minimum.

19
00:01:05,290 --> 00:01:12,580
And we're going to swap out those numbers just like we saw in the animation.

20
00:01:13,450 --> 00:01:18,550
And it also is a really well documented thing on the Internet.

21
00:01:18,850 --> 00:01:24,760
For example, if you are a python developer, you can just type in Python.

22
00:01:26,030 --> 00:01:28,280
Selection sort.

23
00:01:29,090 --> 00:01:37,520
And you'll find that, yeah, you can find how selection sorts it's implemented in Python and you can

24
00:01:37,520 --> 00:01:39,170
run the program as well.

25
00:01:39,320 --> 00:01:45,080
So depending on your language, you can usually click on the first or second link and show you how the

26
00:01:45,080 --> 00:01:47,480
algorithm is implemented.

27
00:01:48,430 --> 00:01:53,880
As you can see here, we have two nested for loops looping through the entire array.

28
00:01:53,890 --> 00:01:59,890
So it's o of n squared for the rest of the sorting algorithms.

29
00:01:59,890 --> 00:02:05,020
I will have the code provided for you so you can play with it and interact with it.

30
00:02:05,020 --> 00:02:12,910
You see that the sorting works as expected, but it can also search for your own language.

31
00:02:13,740 --> 00:02:18,090
To find the sorting algorithm so you understand it on a deeper level.

32
00:02:18,510 --> 00:02:22,530
Let's talk about the next sorting algorithm in the video coming up.

