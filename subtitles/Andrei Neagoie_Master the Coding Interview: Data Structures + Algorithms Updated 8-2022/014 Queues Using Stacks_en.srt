1
00:00:00,620 --> 00:00:01,550
Welcome back.

2
00:00:01,850 --> 00:00:08,210
One of the most common interview questions when it comes to Q's and Stacks is this one.

3
00:00:08,420 --> 00:00:11,930
Implement a cue using stacks.

4
00:00:12,500 --> 00:00:12,910
Huh?

5
00:00:13,940 --> 00:00:14,470
Yep.

6
00:00:14,480 --> 00:00:18,380
You can implement Q's using stacks.

7
00:00:19,080 --> 00:00:24,720
And it's especially easy if you create a stack using arrays.

8
00:00:25,200 --> 00:00:34,350
Now this question is on lead code, which is really, really nice because we're able to see the solutions.

9
00:00:35,640 --> 00:00:36,510
Explained.

10
00:00:37,890 --> 00:00:40,340
As well as solutions in different languages.

11
00:00:40,350 --> 00:00:44,910
If you go to discuss and type in, let's say JavaScript.

12
00:00:46,660 --> 00:00:49,630
We get solutions that people have submitted.

13
00:00:50,450 --> 00:00:54,690
You can see votes as well of the answer of how to do this.

14
00:00:54,710 --> 00:00:58,970
If you want to check Python because let's say you're writing in Python.

15
00:00:58,970 --> 00:01:00,770
Well they have that to.

16
00:01:01,910 --> 00:01:05,090
Any language you want you can find here.

17
00:01:06,130 --> 00:01:09,730
Now I have the answer for you as well.

18
00:01:09,730 --> 00:01:17,170
And in this video right around here and the available resources, you'll see a ripple with my answer

19
00:01:17,170 --> 00:01:17,620
on it.

20
00:01:18,160 --> 00:01:24,640
But I want to challenge you and pretend you're in an interview to implement Q Using stacks.

21
00:01:24,730 --> 00:01:26,410
How would you go about doing it?

22
00:01:27,670 --> 00:01:31,210
You can actually even code it on the elite code website if you want.

23
00:01:31,980 --> 00:01:38,310
Using whichever language you want and just a heads up here, if you are using JavaScript that they use

24
00:01:38,310 --> 00:01:41,970
the prototype way of adding methods.

25
00:01:42,330 --> 00:01:48,180
But the class syntax that I showed you is the newer version.

26
00:01:48,180 --> 00:01:49,290
It's underneath the hood.

27
00:01:49,290 --> 00:01:52,080
It's the exact same thing as doing dot prototype.

28
00:01:52,080 --> 00:01:55,680
However, it just looks cleaner using the class syntax.

29
00:01:55,680 --> 00:01:56,880
So that's what we did.

30
00:01:57,740 --> 00:01:58,970
So good luck with that.

31
00:01:59,150 --> 00:02:04,700
Have fun and I'll link to the solution code for you right over here.

