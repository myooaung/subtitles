1
00:00:00,960 --> 00:00:01,920
Welcome back.

2
00:00:02,190 --> 00:00:07,920
I wanted to have just a quick video to tell you about something interesting.

3
00:00:08,650 --> 00:00:10,330
And this depends on your language.

4
00:00:10,330 --> 00:00:14,890
But remember the sort method that we had in JavaScript.

5
00:00:15,890 --> 00:00:17,840
Or perhaps your language.

6
00:00:17,900 --> 00:00:23,840
I challenge you to figure out what sort of sorting algorithm it's using underneath the hood.

7
00:00:24,510 --> 00:00:31,320
Now, in most cases, it's either going to be quicksort or insertion sort and merge, sort, combine

8
00:00:31,320 --> 00:00:32,100
together.

9
00:00:32,130 --> 00:00:36,780
So go out and search what sorting algorithm your language uses.

10
00:00:36,780 --> 00:00:44,010
When it comes to JavaScript, there's actually no requirements to JavaScript as to which sorting algorithm

11
00:00:44,010 --> 00:00:44,940
to use.

12
00:00:45,450 --> 00:00:51,450
We have a script and JavaScript, which is the standard, but because the standard doesn't mention how

13
00:00:51,450 --> 00:00:58,110
this should be implemented, different browsers that have different JavaScript engines, Chrome has

14
00:00:58,110 --> 00:01:02,010
V8, Mozilla has its own engine, safari it's own engine.

15
00:01:02,460 --> 00:01:04,769
They all implement them differently.

16
00:01:05,470 --> 00:01:13,930
Well last time I checked in Mozilla they use merge sort for sorting and in Chrome and the V8 engine

17
00:01:13,930 --> 00:01:21,070
sort is implemented with quicksort and also insertion sort for the smaller arrays.

18
00:01:22,180 --> 00:01:23,660
I thought that was interesting.

19
00:01:23,680 --> 00:01:25,780
Anyway, I'll see you in the next video.

20
00:01:25,810 --> 00:01:26,470
Bye bye.

