1
00:00:01,930 --> 00:00:03,670
What is good code?

2
00:00:04,430 --> 00:00:09,740
But at this point, you should be able to talk a little bit, especially about scalable, right?

3
00:00:09,770 --> 00:00:10,690
I mean, readable.

4
00:00:10,700 --> 00:00:16,730
We're going to talk about in the next section, but scalable, we understood was big go.

5
00:00:16,970 --> 00:00:17,620
Right.

6
00:00:18,110 --> 00:00:20,030
Well, here's the thing.

7
00:00:20,540 --> 00:00:26,270
Don't hate me, but I may have slightly lied or simplified things, but.

8
00:00:26,390 --> 00:00:27,290
But not that much.

9
00:00:27,290 --> 00:00:28,130
So don't worry.

10
00:00:28,160 --> 00:00:29,210
We're going to build on that.

11
00:00:29,510 --> 00:00:35,390
When I say scalable, there's actually two things that we want to consider as engineers.

12
00:00:36,120 --> 00:00:38,320
One is speed.

13
00:00:38,340 --> 00:00:40,800
That's what we've been talking about up until now.

14
00:00:40,950 --> 00:00:44,820
How fast is our runtime on the code?

15
00:00:45,090 --> 00:00:49,800
How much time does it take for a function to run?

16
00:00:49,830 --> 00:00:52,530
How many operations does it cost?

17
00:00:53,070 --> 00:00:58,860
Well, there's another aspect when it comes to machines to valuable resources.

18
00:00:58,860 --> 00:01:03,210
One is the time and speed of our code.

19
00:01:03,270 --> 00:01:06,300
And the other one is memory.

20
00:01:06,690 --> 00:01:10,800
You see, computers have limited memory.

21
00:01:11,720 --> 00:01:15,350
Back in the day when computers were just being born.

22
00:01:15,350 --> 00:01:17,830
Memory was very, very expensive.

23
00:01:17,840 --> 00:01:19,550
We only had a little bit of it.

24
00:01:19,640 --> 00:01:23,810
And as time has gone on, we have more and more memory.

25
00:01:23,810 --> 00:01:25,310
But it's not infinite.

26
00:01:25,990 --> 00:01:35,530
Our computers run based on speed, which is usually dictated by the CPU and memory based on how much

27
00:01:35,530 --> 00:01:39,910
memory such as RAM and random access memory the computer has.

28
00:01:40,060 --> 00:01:43,120
And those are two valuable resources.

29
00:01:43,630 --> 00:01:46,060
So how can we talk about memory?

30
00:01:46,090 --> 00:01:47,620
We've talked about speed.

31
00:01:47,650 --> 00:01:48,670
What about memory?

32
00:01:48,670 --> 00:01:52,810
And the good news is that memory is fairly simple, not as complicated as speed.

33
00:01:52,810 --> 00:01:57,850
And it won't take us long to learn as much as we have about speed right now.

34
00:01:57,880 --> 00:02:02,080
Which code is best can be answered with the three pillars of code.

35
00:02:02,080 --> 00:02:06,790
Something that I want you to take with you for the rest of your career, and something that's going

36
00:02:06,790 --> 00:02:08,350
to grow you as an engineer.

37
00:02:08,350 --> 00:02:12,370
Because from now on, when you write code, you're going to have these three things in mind.

38
00:02:12,610 --> 00:02:20,290
One is you're going to write readable, clean code that others can read that is maintainable.

39
00:02:20,710 --> 00:02:23,320
The other one is speed.

40
00:02:23,830 --> 00:02:31,300
The type of code that we call time complexity has a big old time complexity that is efficient.

41
00:02:31,300 --> 00:02:32,470
It scales well.

42
00:02:33,070 --> 00:02:39,670
But we're going to talk about quickly about this third pillar, and that is memory.

43
00:02:39,790 --> 00:02:42,280
What's the memory usage of code?

44
00:02:42,670 --> 00:02:45,520
If it uses a lot of memory, that's not good.

45
00:02:45,520 --> 00:02:48,090
We might have limited memory on our machine.

46
00:02:48,100 --> 00:02:57,730
With this one, we use Big O once again to talk about space, complexity, the same notation but different

47
00:02:57,730 --> 00:02:58,330
topic.

48
00:02:58,690 --> 00:03:04,060
One is space, the other one is time, one is speed, the other one is memory.

49
00:03:04,510 --> 00:03:07,660
I'm going to give you a quick little preview.

50
00:03:08,630 --> 00:03:11,480
Most programming code solution.

51
00:03:11,480 --> 00:03:14,680
There's usually a trade off between speed and memory.

52
00:03:14,690 --> 00:03:16,310
You want things to go faster.

53
00:03:16,310 --> 00:03:20,510
Well, then you might have to sacrifice more memory.

54
00:03:20,810 --> 00:03:22,160
You want less memory?

55
00:03:22,160 --> 00:03:26,300
Well, then you might have to sacrifice with increased speed.

56
00:03:27,180 --> 00:03:31,230
Let's get into the nitty gritty of how we measure space complexity.

