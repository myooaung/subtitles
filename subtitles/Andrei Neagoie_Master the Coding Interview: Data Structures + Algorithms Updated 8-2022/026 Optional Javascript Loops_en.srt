1
00:00:00,330 --> 00:00:01,260
Welcome back.

2
00:00:01,290 --> 00:00:06,689
I just wanted to show you a quick video, especially for those that are familiar with JavaScript, that

3
00:00:06,689 --> 00:00:12,250
there are many, many ways to do loops in JavaScript and same with other languages as well.

4
00:00:12,270 --> 00:00:15,450
There's many ways to do these loops.

5
00:00:15,450 --> 00:00:19,180
So I just want to show you some quick ones that you might see throughout the course.

6
00:00:19,200 --> 00:00:20,850
Just so you're familiar with them.

7
00:00:20,970 --> 00:00:28,770
For example, the Find Nemo function that has a for loop can also be ridden with something like A for

8
00:00:28,770 --> 00:00:29,620
each function.

9
00:00:29,640 --> 00:00:30,930
So I can say.

10
00:00:32,460 --> 00:00:36,210
Can't find Nemo to.

11
00:00:37,060 --> 00:00:39,520
Takes in an array.

12
00:00:42,700 --> 00:00:51,550
And we can say that for each array, for each, which is pretty much the exact same thing as a for loop,

13
00:00:51,550 --> 00:00:57,580
but requires you to not have to type this entire thing for each.

14
00:00:58,630 --> 00:01:00,280
Item in the array.

15
00:01:00,280 --> 00:01:07,810
So we'll say I we're going to say if I equals Nemo.

16
00:01:08,560 --> 00:01:11,500
Because in this case, with four each, we're not taking the index.

17
00:01:11,500 --> 00:01:12,920
We're taking the item in the array.

18
00:01:12,940 --> 00:01:17,380
So maybe you could just say fish in here just so it's more or it makes more sense.

19
00:01:17,380 --> 00:01:20,890
And if that is the case, we'll just console the log.

20
00:01:21,100 --> 00:01:24,100
Found Nemo.

21
00:01:28,140 --> 00:01:34,140
Again, that is the same thing as this for each just allows us to simplify things a little bit.

22
00:01:35,490 --> 00:01:40,530
There is also another way that we can do this in JavaScript with the four off loop.

23
00:01:40,710 --> 00:01:43,080
If we just copy this code.

24
00:01:44,460 --> 00:01:47,400
And do you find Nemo three?

25
00:01:48,570 --> 00:01:55,350
This time, the array that we're going to take, we're going to say instead of the four each, this

26
00:01:55,350 --> 00:01:57,150
time we're going to say four.

27
00:01:58,730 --> 00:01:59,410
Let.

28
00:01:59,810 --> 00:02:03,350
I of array.

29
00:02:03,350 --> 00:02:07,580
And again this gives us the same thing the eye.

30
00:02:07,790 --> 00:02:10,699
Or we can just say fish here just so it's more clear.

31
00:02:13,530 --> 00:02:14,610
Is equal to Nemo.

32
00:02:14,640 --> 00:02:16,440
We're going to say Found Nemo.

33
00:02:17,070 --> 00:02:19,260
And if we run these functions.

34
00:02:20,470 --> 00:02:22,450
Let's make sure that they both work.

35
00:02:22,450 --> 00:02:25,540
So find Nemo to find number three.

36
00:02:25,540 --> 00:02:27,280
And we also run Find Nemo.

37
00:02:27,700 --> 00:02:28,870
If I click Run.

38
00:02:30,500 --> 00:02:33,110
And I don't need the bracket for this one.

39
00:02:33,140 --> 00:02:37,370
If I click Run, we see that we found Nemo all three times.

40
00:02:39,220 --> 00:02:42,970
Different ways of solving this problem.

41
00:02:43,210 --> 00:02:49,810
All of them are using loops, but you can see some are more readable than others.

42
00:02:49,810 --> 00:02:52,300
And that's something that we've encountered before.

43
00:02:52,330 --> 00:02:52,560
Right.

44
00:02:52,570 --> 00:02:56,830
Remember, a good code means something that is scalable.

45
00:02:57,440 --> 00:03:00,410
But also something that is readable.

46
00:03:02,220 --> 00:03:08,940
Depending on your situation and something we'll get into later on how maintainable and how others on

47
00:03:08,940 --> 00:03:10,870
your team can understand this code.

48
00:03:10,890 --> 00:03:15,120
There's different ways of doing things so that it's easier to work with.

49
00:03:16,090 --> 00:03:20,710
But I hope that if you see this syntax throughout this course, you're at least are familiar that at

50
00:03:20,710 --> 00:03:23,800
the end of the day, all we're doing is just loops.

51
00:03:24,100 --> 00:03:25,210
I'll see you in the next one.

52
00:03:25,630 --> 00:03:26,140
Bye bye.

