1
00:00:01,240 --> 00:00:02,740
[Autogenerated] Hi, This is Greg Golightly.

2
00:00:02,740 --> 00:00:06,900
And welcome to designing for Complexity on A W s

3
00:00:06,900 --> 00:00:10,540
setting up your A W s organization.

4
00:00:10,540 --> 00:00:13,940
With the help of our fictional company, Globomantics.

5
00:00:13,940 --> 00:00:17,680
We're going to take a look at some real problems that can happen

6
00:00:17,680 --> 00:00:22,510
when you don't plan for complexity and how AWS organizations can

7
00:00:22,510 --> 00:00:25,240
help you solve those problems.

8
00:00:25,240 --> 00:00:28,680
Globomantics opened a single AWS account a couple of

9
00:00:28,680 --> 00:00:31,220
years ago to try some things out.

10
00:00:31,220 --> 00:00:32,440
They liked what they built,

11
00:00:32,440 --> 00:00:36,650
and it just seemed easier to keep using the same AWS account.

12
00:00:36,650 --> 00:00:39,100
Since then, several different departments error.

13
00:00:39,100 --> 00:00:39,340
Now,

14
00:00:39,340 --> 00:00:45,440
using the account for a variety of internal and external facing applications,

15
00:00:45,440 --> 00:00:48,110
let's take a look at some of the challenges they're having.

16
00:00:48,110 --> 00:00:53,610
With this set up every month, development is hearing the same thing from finance.

17
00:00:53,610 --> 00:00:57,540
Why is our AWS bill so high?

18
00:00:57,540 --> 00:01:02,120
Not all of the activity in their AWS account is research and development.

19
00:01:02,120 --> 00:01:05,730
There are some production systems running that error generating revenue,

20
00:01:05,730 --> 00:01:10,440
and there are lots of sales, support instances and customer proofs of concept.

21
00:01:10,440 --> 00:01:13,430
But allocating costs to the appropriate departments

22
00:01:13,430 --> 00:01:16,140
and projects is a major challenge.

23
00:01:16,140 --> 00:01:19,560
It's just not possible to tell the difference from the current AWS

24
00:01:19,560 --> 00:01:23,180
Bill Finance just sees E C two's S3 buckets,

25
00:01:23,180 --> 00:01:28,410
LBS and a big check to write each month without clear visibility and ownership.

26
00:01:28,410 --> 00:01:30,960
Many resource is are getting for gotten like,

27
00:01:30,960 --> 00:01:33,420
easy to instances that have been running for a year.

28
00:01:33,420 --> 00:01:34,940
But no one knows why,

29
00:01:34,940 --> 00:01:38,250
and hundreds of terabytes of snapshots and volumes that

30
00:01:38,250 --> 00:01:40,930
aren't attached to any running instances.

31
00:01:40,930 --> 00:01:44,410
No one is optimizing for cost because they're not even aware

32
00:01:44,410 --> 00:01:47,300
of the current spend for their project.

33
00:01:47,300 --> 00:01:51,780
Separation of environments and user management is another pain point,

34
00:01:51,780 --> 00:01:54,650
like when one developer accidentally deleted another

35
00:01:54,650 --> 00:01:57,140
projects production environment.

36
00:01:57,140 --> 00:02:00,220
Since everyone is in the same account for development,

37
00:02:00,220 --> 00:02:04,190
testing and production, everyone is an admin,

38
00:02:04,190 --> 00:02:08,720
and several departments are even sharing a single user and credentials.

39
00:02:08,720 --> 00:02:17,000
It's difficult to tell what resource is belong to which department, and it's easy to accidentally delete the wrong thing.

