WEBVTT
1
00:00:01.140 --> 00:00:01.600
[Autogenerated] Hi,

2
00:00:01.600 --> 00:00:06.610
This is Craig Golightly and welcome to using Federation and A W s single

3
00:00:06.610 --> 00:00:14.470
sign on We're going to cover Federation And how AWS Single Sign on can

4
00:00:14.470 --> 00:00:17.590
help you manage Federated users across the A.

5
00:00:17.590 --> 00:00:23.010
W s accounts in your AWS organization will go over how to create a

6
00:00:23.010 --> 00:00:26.730
new or integrate and existing identity source,

7
00:00:26.730 --> 00:00:30.720
as well as some of the single sign on features you can leverage when using.

8
00:00:30.720 --> 00:00:37.080
Federation finally will cover how Amazon Security Token Service or STS,

9
00:00:37.080 --> 00:00:42.520
enables federation and touch on Amazon cognito and how that services

10
00:00:42.520 --> 00:00:47.650
apps you Federated external users As you separate your applications

11
00:00:47.650 --> 00:00:50.820
and workloads across multiple AWS accounts,

12
00:00:50.820 --> 00:00:54.880
you can manage user access with Federation Federation is

13
00:00:54.880 --> 00:00:58.540
the creation of a trust relationship between an external

14
00:00:58.540 --> 00:01:01.540
identity provider and A W s.

15
00:01:01.540 --> 00:01:06.830
A Federated user is different from an I am user and I am

16
00:01:06.830 --> 00:01:11.140
username exists in an individual AWS account.

17
00:01:11.140 --> 00:01:16.490
A Federated user exists in the external identity provider directory and

18
00:01:16.490 --> 00:01:20.150
will first authenticate with the identity provider.

19
00:01:20.150 --> 00:01:21.650
Once authenticated,

20
00:01:21.650 --> 00:01:26.950
A W s will use rolls to allow a user limited access to an

21
00:01:26.950 --> 00:01:33.460
individual AWS account in your organization AWS single sign on

22
00:01:33.460 --> 00:01:37.550
lets you connect with Active Directory either AWS managed or

23
00:01:37.550 --> 00:01:42.340
external or the AWS SSO directory service.

24
00:01:42.340 --> 00:01:44.700
This is the default identity source.

25
00:01:44.700 --> 00:01:47.170
So if you aren't using Active Directory,

26
00:01:47.170 --> 00:01:50.830
you can create users and groups in A W S S s.

27
00:01:50.830 --> 00:01:55.940
So you'll then assign users and groups access to individual A

28
00:01:55.940 --> 00:01:59.280
W s accounts in your A W s organization.

29
00:01:59.280 --> 00:02:02.460
The mechanics of this are very similar to what you saw when we

30
00:02:02.460 --> 00:02:05.710
talked about creating roles in individual accounts,

31
00:02:05.710 --> 00:02:09.940
then managing which users have permission to assume those roles.

32
00:02:09.940 --> 00:02:14.440
The big difference is that AWS single sign on gives you a central

33
00:02:14.440 --> 00:02:20.680
location to manage all users and their permitted access to control

34
00:02:20.680 --> 00:02:24.390
Federated User Access to your AWS account.

35
00:02:24.390 --> 00:02:26.940
You'll define permission sets.

36
00:02:26.940 --> 00:02:32.000
A permission set is simply a collection of I am policies outlining

37
00:02:32.000 --> 00:02:35.360
what resource is and actions are authorized.

38
00:02:35.360 --> 00:02:39.360
You can attach AWS managed policies and your own

39
00:02:39.360 --> 00:02:42.740
custom policies to a permission set.

40
00:02:42.740 --> 00:02:47.740
AWS also has pre defined job function policies.

41
00:02:47.740 --> 00:02:51.290
These group common policies of different AWS services.

42
00:02:51.290 --> 00:02:53.330
Based on what resource is different,

43
00:02:53.330 --> 00:02:58.260
users may need to do their job once you have users groups and permission

44
00:02:58.260 --> 00:03:03.040
sets to find you can then assigned users and groups to different AWS

45
00:03:03.040 --> 00:03:07.490
accounts in your organization and define the permission sets that error

46
00:03:07.490 --> 00:03:11.130
allowed for each user or group in that account.

47
00:03:11.130 --> 00:03:15.960
AWS then creates roles in that account to match the policies in

48
00:03:15.960 --> 00:03:20.020
the permission sets and users can do then assume a role that

49
00:03:20.020 --> 00:03:22.210
corresponds to a permission set.

50
00:03:22.210 --> 00:03:26.200
When they access that AWS account users will not

51
00:03:26.200 --> 00:03:29.340
access these AWS accounts directly.

52
00:03:29.340 --> 00:03:32.430
They'll first authenticate with the identity provider,

53
00:03:32.430 --> 00:03:36.240
then be shown a dashboard of accounts they have access to.

54
00:03:36.240 --> 00:03:37.760
When they select an account,

55
00:03:37.760 --> 00:03:41.200
they'll be shown the roles available for that account.

56
00:03:41.200 --> 00:03:46.010
Then they'll select a role to assume and be given access to the account.

57
00:03:46.010 --> 00:03:56.000
If they need to do something else that is not allowed by their current role, they'll need to go back to the dashboard and select a different role to assume

