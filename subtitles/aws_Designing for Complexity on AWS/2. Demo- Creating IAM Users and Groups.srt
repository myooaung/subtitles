1
00:00:02,410 --> 00:00:05,630
[Autogenerated] Let's go to the AWS console and create an I am

2
00:00:05,630 --> 00:00:11,010
group in an I am user will attach an AWS managed policy to a

3
00:00:11,010 --> 00:00:14,740
group and assign a user to that group.

4
00:00:14,740 --> 00:00:17,940
Let's create a couple of I am users.

5
00:00:17,940 --> 00:00:20,940
Go to I am.

6
00:00:20,940 --> 00:00:27,040
Then select users will add a user.

7
00:00:27,040 --> 00:00:29,500
Let's call this admin one and we can.

8
00:00:29,500 --> 00:00:33,140
Go ahead and add another user in the same console.

9
00:00:33,140 --> 00:00:35,040
We'll call it Dev one.

10
00:00:35,040 --> 00:00:38,690
Notice how we can select the access type for these users.

11
00:00:38,690 --> 00:00:42,400
We can enable programmatic and or console access.

12
00:00:42,400 --> 00:00:44,320
All just enable console access.

13
00:00:44,320 --> 00:00:47,840
For now,

14
00:00:47,840 --> 00:00:51,350
you can decide what type of password and whether they need to reset

15
00:00:51,350 --> 00:00:54,010
it when they log in will go to the next screen.

16
00:00:54,010 --> 00:00:56,090
Notice the message about groups.

17
00:00:56,090 --> 00:00:59,570
It's much easier to manage users by creating groups

18
00:00:59,570 --> 00:01:02,340
than adding the users to those groups.

19
00:01:02,340 --> 00:01:06,740
So we'll go ahead and create a couple of groups for these users.

20
00:01:06,740 --> 00:01:11,600
I'll call the first one administrators and I'll create

21
00:01:11,600 --> 00:01:15,740
another group called developers.

22
00:01:15,740 --> 00:01:19,290
These to users will automatically be added to these two groups.

23
00:01:19,290 --> 00:01:21,290
We'll go ahead and shuffle the users to the correct

24
00:01:21,290 --> 00:01:23,740
groups after we're done creating them.

25
00:01:23,740 --> 00:01:26,440
I'm not going to add any tags at this point.

26
00:01:26,440 --> 00:01:27,130
At this point,

27
00:01:27,130 --> 00:01:31,340
we can see to users Admin one and Dev one that have

28
00:01:31,340 --> 00:01:34,740
AWS console access with a password,

29
00:01:34,740 --> 00:01:38,900
and they'll be a member of the administrators and developers group

30
00:01:38,900 --> 00:01:41,840
with the ability to change their own password.

31
00:01:41,840 --> 00:01:45,760
At this point, the users are created as the administrator.

32
00:01:45,760 --> 00:01:48,800
You could send them email with logging instructions or

33
00:01:48,800 --> 00:01:51,940
download a CSV with their passwords.

34
00:01:51,940 --> 00:01:55,710
I'll go ahead and download the CSV so that we can use that later on in.

35
00:01:55,710 --> 00:01:59,610
The demo also noticed the management console sign in.

36
00:01:59,610 --> 00:02:02,380
This has the account number embedded so that they

37
00:02:02,380 --> 00:02:04,510
can sign into the correct account.

38
00:02:04,510 --> 00:02:08,340
These users only exist in this AWS account,

39
00:02:08,340 --> 00:02:12,330
so they need to know that information, in order to log into the console,

40
00:02:12,330 --> 00:02:17,400
will exit the wizard and go back to the AM page to manage which

41
00:02:17,400 --> 00:02:20,800
groups a user belongs to select the username.

42
00:02:20,800 --> 00:02:22,140
Then, under groups,

43
00:02:22,140 --> 00:02:24,270
you can remove any groups that they're currently

44
00:02:24,270 --> 00:02:27,050
assigned to or add them to a new group.

45
00:02:27,050 --> 00:02:31,840
I'll remove the admin one user from the developers group,

46
00:02:31,840 --> 00:02:36,350
then go back and remove the Dev one user from the administrators

47
00:02:36,350 --> 00:02:40,370
group now that the users are in the correct group.

48
00:02:40,370 --> 00:02:42,650
Let's take a look at some additional options to

49
00:02:42,650 --> 00:02:45,460
manage each user under permissions.

50
00:02:45,460 --> 00:02:45,790
We can.

51
00:02:45,790 --> 00:02:49,660
See which policies are attached to this user.

52
00:02:49,660 --> 00:02:53,310
This user only has permission to change their password.

53
00:02:53,310 --> 00:02:56,290
Let's take a look at security credentials.

54
00:02:56,290 --> 00:02:58,230
This is where you can see their activity,

55
00:02:58,230 --> 00:03:00,600
whether or not they've logged into the password.

56
00:03:00,600 --> 00:03:05,550
You can manage the console password, require them to use an M F A device,

57
00:03:05,550 --> 00:03:09,640
and you can also manage access keys and SSH keys.

58
00:03:09,640 --> 00:03:14,540
Let's go ahead and create an access key for the Dev user to see how that works.

59
00:03:14,540 --> 00:03:18,340
We'll download the CSV so that we can configure that later on.

60
00:03:18,340 --> 00:03:23,540
Keep in mind that you cannot retrieve a secret key from the AWS console.

61
00:03:23,540 --> 00:03:28,640
If the user somehow loses their key, you can simply create another one.

62
00:03:28,640 --> 00:03:34,330
Then deactivate or delete the lost key to manage groups.

63
00:03:34,330 --> 00:03:39,940
Select groups, then the group name you want to manage.

64
00:03:39,940 --> 00:03:42,940
We need to add some permissions to this group so that the

65
00:03:42,940 --> 00:03:46,440
administrators can actually do something.

66
00:03:46,440 --> 00:03:50,440
We'll go ahead and attach an AWS managed policy.

67
00:03:50,440 --> 00:03:54,710
We'll use administrator access.

68
00:03:54,710 --> 00:03:59,640
You can take a look at the policy details under show policy,

69
00:03:59,640 --> 00:04:02,400
and we can see that this allows all actions on all.

70
00:04:02,400 --> 00:04:05,870
Resource is this is fine for the administrators group,

71
00:04:05,870 --> 00:04:10,340
but suppose our developers only need access to S3.

72
00:04:10,340 --> 00:04:13,850
Let's go to the developers group and attach a policy

73
00:04:13,850 --> 00:04:19,340
that only allows access to S3.

74
00:04:19,340 --> 00:04:24,940
We'll select Amazon S3 full access and attached the policy.

75
00:04:24,940 --> 00:04:28,000
Let's log in using the Dev one user.

76
00:04:28,000 --> 00:04:29,060
I'll go to the console,

77
00:04:29,060 --> 00:04:32,460
sign in link in a different browser and enter the username

78
00:04:32,460 --> 00:04:34,810
and the password that was generated.

79
00:04:34,810 --> 00:04:38,530
Recall that we required a password change on the first log in,

80
00:04:38,530 --> 00:04:41,040
so I'll take care of that.

81
00:04:41,040 --> 00:04:44,240
This user only has access to S3.

82
00:04:44,240 --> 00:04:51,940
Let's go ahead and go to S3 and create a bucket.

83
00:04:51,940 --> 00:04:56,950
We successfully created the bucket and we can access at

84
00:04:56,950 --> 00:04:59,240
list and do everything that we need to do.

85
00:04:59,240 --> 00:05:07,840
If this user tries to go to easy to and see any running instances,

86
00:05:07,840 --> 00:05:09,740
notice how they get an error.

87
00:05:09,740 --> 00:05:12,730
They're not authorized to perform this operation.

88
00:05:12,730 --> 00:05:16,410
If we go back to the administrator's account and refresh,

89
00:05:16,410 --> 00:05:19,280
we'll see under console password that it's enabled

90
00:05:19,280 --> 00:05:22,340
and it was last signed in today.

91
00:05:22,340 --> 00:05:26,910
You could go ahead and disable the password or set a new password or

92
00:05:26,910 --> 00:05:31,090
require the user to reset it the next time they sign in.

93
00:05:31,090 --> 00:05:36,640
Let's try using the access keys for the Dev one user to use the AWS CLI.

94
00:05:36,640 --> 00:05:40,290
I've gone ahead and configured this AWS CLI with the

95
00:05:40,290 --> 00:05:43,390
secret and access key for the Dev one user.

96
00:05:43,390 --> 00:05:46,940
Let's try listing the S3 buckets.

97
00:05:46,940 --> 00:05:51,640
They're we can See the bucket that was created by this user.

98
00:05:51,640 --> 00:05:56,400
If we go back to the admin console we can, see when the key was last used.

99
00:05:56,400 --> 00:06:01,440
If we make the key inactive and the user tries to run the command again,

100
00:06:01,440 --> 00:06:05,040
notice how they get an invalid access key message.

101
00:06:05,040 --> 00:06:08,130
Creating separate I am users than issuing them.

102
00:06:08,130 --> 00:06:11,020
Keys is imperative to account safety.

103
00:06:11,020 --> 00:06:15,440
It's very easy to activate or inactivate keys or delete

104
00:06:15,440 --> 00:06:24,000
and create new ones if you need to. We'll go ahead and make the key active again, and now we can see that it works

