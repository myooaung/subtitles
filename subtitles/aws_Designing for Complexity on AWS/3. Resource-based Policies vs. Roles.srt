1
00:00:01,040 --> 00:00:03,940
[Autogenerated] a resource based policy is attached to

2
00:00:03,940 --> 00:00:06,520
a resource instead of an identity,

3
00:00:06,520 --> 00:00:11,800
as three buckets are a common use case for resource based policies and a role.

4
00:00:11,800 --> 00:00:17,070
Trust policy is also a resource based policy for a complete list of

5
00:00:17,070 --> 00:00:21,040
AWS services that support resource based policies.

6
00:00:21,040 --> 00:00:25,230
See the AWS documentation just because a resource based

7
00:00:25,230 --> 00:00:29,160
policy grants permission a username us to also be given

8
00:00:29,160 --> 00:00:31,770
permission from their account to act on.

9
00:00:31,770 --> 00:00:36,340
The resource like we saw in the previous demo and AWS account

10
00:00:36,340 --> 00:00:39,260
was an authorized principle for a role.

11
00:00:39,260 --> 00:00:40,070
However,

12
00:00:40,070 --> 00:00:44,330
policies for individual users in the account could allow or

13
00:00:44,330 --> 00:00:47,380
prevent users from assuming that role,

14
00:00:47,380 --> 00:00:51,940
even though the resource based policy on the role allowed it

15
00:00:51,940 --> 00:00:55,930
recall that a user will have a certain set of permissions when

16
00:00:55,930 --> 00:00:57,850
they operate in their account.

17
00:00:57,850 --> 00:00:59,580
When they assume a role,

18
00:00:59,580 --> 00:01:03,200
they leave those permissions behind and take on only

19
00:01:03,200 --> 00:01:05,440
the permissions granted to the role.

20
00:01:05,440 --> 00:01:11,740
For example, if a trusting account used a role to allow cross account access,

21
00:01:11,740 --> 00:01:15,510
user's in the trusted account would only have the permissions

22
00:01:15,510 --> 00:01:19,180
defined by the role when they assumed that role to access the

23
00:01:19,180 --> 00:01:22,520
resource with resource based policies,

24
00:01:22,520 --> 00:01:27,040
the policy is attached directly to the resource you want to share and

25
00:01:27,040 --> 00:01:30,980
specifies which principles can access that resource.

26
00:01:30,980 --> 00:01:33,790
When a principal accesses the resource,

27
00:01:33,790 --> 00:01:37,740
they retain all of their normal account permissions.

28
00:01:37,740 --> 00:01:42,920
Here is a resource based policy that allows all members of this AWS

29
00:01:42,920 --> 00:01:48,290
account to perform the list bucket action on the Docks bucket and the

30
00:01:48,290 --> 00:01:53,040
GETT Object Action on Objects in the Docks bucket.

31
00:01:53,040 --> 00:01:58,220
This policy defines the maximum allowed access from the trusted account,

32
00:01:58,220 --> 00:02:03,360
specified as a principal in the trusted account that has been granted

33
00:02:03,360 --> 00:02:08,900
access users will need to be given permission to perform actions on the

34
00:02:08,900 --> 00:02:13,170
resource is this policy could be added to a group.

35
00:02:13,170 --> 00:02:17,210
Then users who belong to the group could perform both actions that error

36
00:02:17,210 --> 00:02:21,840
allowed by the resource based policy attached to the bucket.

37
00:02:21,840 --> 00:02:27,840
However, if the policy only specified the list bucket operation on the bucket,

38
00:02:27,840 --> 00:02:37,000
then users in this account would not be able to perform the gett object action even though the resource based policy allows it

