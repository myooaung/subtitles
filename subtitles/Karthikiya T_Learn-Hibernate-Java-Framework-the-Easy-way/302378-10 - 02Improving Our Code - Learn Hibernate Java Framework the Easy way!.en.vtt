WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.250
hold it.

00:00:01.250 --> 00:00:03.440
Here is the improved Washington for code.

00:00:03.440 --> 00:00:05.910
Also the recommended way to write or code.

00:00:05.910 --> 00:00:09.600
So all the deal a significant increase in the number of lines of code.

00:00:09.600 --> 00:00:11.950
We're trying to follow some good practices here.

00:00:11.950 --> 00:00:17.370
So first off we have the static block within which were trying to call this method low

00:00:17.370 --> 00:00:18.400
decision factory.

00:00:18.400 --> 00:00:23.070
So in here we have the logic that does exactly the same.

00:00:23.070 --> 00:00:27.190
To load this session factory so that we can use the debt later point of time.

00:00:27.190 --> 00:00:31.650
And the significance off static block is something that I assume that you already know.

00:00:31.650 --> 00:00:35.460
This will get executed during the class loading time.

00:00:35.460 --> 00:00:41.210
But the key thing do not here is the way I'm creating the session factory.

00:00:41.210 --> 00:00:42.720
This time I didn't use that.

00:00:42.720 --> 00:00:43.870
Depreciated mattered,

00:00:43.870 --> 00:00:47.050
but I've done it in a different way.

00:00:47.050 --> 00:00:54.470
So I created the instance off configuration and that I'm trying to feed the conflagration

00:00:54.470 --> 00:00:58.160
xml file Do take note that I have no change.

00:00:58.160 --> 00:01:02.050
The name from hibernate to pose were skill.

00:01:02.050 --> 00:01:07.480
When you're trying to explicitly provide the name of the file like I did here,

00:01:07.480 --> 00:01:11.140
then you can give whatever the name off your choice.

00:01:11.140 --> 00:01:14.010
But If you don't want to specify the same,

00:01:14.010 --> 00:01:20.710
then you have to live it to have been a doxy of did or XML And what comes next is I'm

00:01:20.710 --> 00:01:25.150
trying to add resource the employee hatch b m dot xml.

00:01:25.150 --> 00:01:28.850
And this is basically whatever we give in here,

00:01:28.850 --> 00:01:30.960
same thing should go there as well.

00:01:30.960 --> 00:01:37.220
And since these two files are reciting in the Resources folder and not in the sub folder,

00:01:37.220 --> 00:01:42.590
I don't have to provide the complete part can just pacify directly the name of the file.

00:01:42.590 --> 00:01:49.680
Now here is the line that deserves some attention having it internally their so called so

00:01:49.680 --> 00:01:54.650
visas which are basically classes that implement certain standard interfaces.

00:01:54.650 --> 00:01:56.410
For example,

00:01:56.410 --> 00:01:58.750
we have connection provider,

00:01:58.750 --> 00:02:06.910
which is an interface that specify set off standard methods to maintain the data busy

00:02:06.910 --> 00:02:12.280
connections so that they have been it can actually acquired the connections and perform DB

00:02:12.280 --> 00:02:13.150
operations.

00:02:13.150 --> 00:02:19.480
And we have multiple implementations for that interface and each implementation different

00:02:19.480 --> 00:02:21.670
terms off how they manage the connections,

00:02:21.670 --> 00:02:22.710
etcetera.

00:02:22.710 --> 00:02:27.080
But all this implementation would ultimately solve the purpose off managing very busy

00:02:27.080 --> 00:02:31.390
connections because they all implement the same interface.

00:02:31.390 --> 00:02:32.860
So now then,

00:02:32.860 --> 00:02:35.450
what is this service registry in here.

00:02:35.450 --> 00:02:36.200
Well,

00:02:36.200 --> 00:02:38.390
service registry will actually manage.

00:02:38.390 --> 00:02:41.050
Those services that are used by the have been eight.

00:02:41.050 --> 00:02:43.260
And using this instruction,

00:02:43.260 --> 00:02:49.350
we're sort of building that service registry object and then feeling this object to the

00:02:49.350 --> 00:02:53.160
build session factory method to create our session factory.

00:02:53.160 --> 00:02:56.110
If this all sounds confusing,

00:02:56.110 --> 00:02:56.970
that's fine.

00:02:56.970 --> 00:02:59.690
These are all internal aspects off cabinet,

00:02:59.690 --> 00:03:02.550
and we don't presume have to bother too much about it.

00:03:02.550 --> 00:03:03.570
But,

00:03:03.570 --> 00:03:03.950
ah,

00:03:03.950 --> 00:03:07.320
you don't understand that you need to stop using the duplicated method,

00:03:07.320 --> 00:03:08.760
which is bill session factor,

00:03:08.760 --> 00:03:09.890
without any argument.

00:03:09.890 --> 00:03:13.730
But you should start using this approach,

00:03:13.730 --> 00:03:15.990
which is with the service industry,

00:03:15.990 --> 00:03:19.650
and the rest of the changes are pretty much Cordova concepts.

00:03:19.650 --> 00:03:20.890
You know what is static method,

00:03:20.890 --> 00:03:21.650
etcetera?

00:03:21.650 --> 00:03:25.850
And here's the same logic what we had seen in our earlier example.

00:03:25.850 --> 00:03:32.520
So I'm trying to get this session by calling this method get session and is essentially

00:03:32.520 --> 00:03:37.250
returning a session object and just off the code is pretty straightforward.

00:03:37.250 --> 00:03:38.910
And also,

00:03:38.910 --> 00:03:39.350
of course,

00:03:39.350 --> 00:03:44.690
I have put in a lot off try catch blocks in here to handle possible exceptions,

00:03:44.690 --> 00:03:46.250
and that's pretty much it.

00:03:46.250 --> 00:03:48.520
So for your convenience,

00:03:48.520 --> 00:03:53.040
I'm actually going to export this project and save it as part of the project files.

00:03:53.040 --> 00:03:57.610
So you should be able to download this and even import in Eclipse and Roman to take a look

00:03:57.610 --> 00:03:58.910
at what's happening in here.

00:03:58.910 --> 00:04:02.380
So living on this program and make sure there's working.

00:04:02.380 --> 00:04:03.850
But before that,

00:04:03.850 --> 00:04:06.320
I have actually deleted that table.

00:04:06.320 --> 00:04:08.810
So we get this error.

00:04:08.810 --> 00:04:12.650
Now let's run our program and save table gets created.

00:04:12.650 --> 00:04:21.170
And sure enough,

00:04:21.170 --> 00:04:23.100
it worked.

00:04:23.100 --> 00:04:25.580
All right,

00:04:25.580 --> 00:04:26.850
see you in my next video.

