WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.230
in this video,

00:00:05.230 --> 00:00:09.370
we're going to talk about hedge school or have been it quickly language,

00:00:09.370 --> 00:00:11.220
just like we have sq.

00:00:11.220 --> 00:00:12.370
For a database.

00:00:12.370 --> 00:00:14.950
We have Hetch Grill for Happen eight.

00:00:14.950 --> 00:00:19.780
But the difference is Eskil is specific to a database.

00:00:19.780 --> 00:00:22.390
But whereas Hetch Grill is not,

00:00:22.390 --> 00:00:24.240
let me explain you what I mean.

00:00:24.240 --> 00:00:25.170
For example,

00:00:25.170 --> 00:00:29.580
let's that you're using a skill in your code and at little point of time.

00:00:29.580 --> 00:00:32.690
If you're switching to a different alternative database,

00:00:32.690 --> 00:00:36.600
then you also need to make addicts in your SQL statements.

00:00:36.600 --> 00:00:43.200
That's because this in tax on the SQL statements differ from database to database.

00:00:43.200 --> 00:00:44.460
But where else,

00:00:44.460 --> 00:00:46.960
if you use have been it query language,

00:00:46.960 --> 00:00:49.250
then regardless off the database,

00:00:49.250 --> 00:00:51.310
things will work smoothly.

00:00:51.310 --> 00:00:54.730
You don't have to make any a bit in your hedge girl statements.

00:00:54.730 --> 00:00:59.830
That's because with Hatch you're you're not really interacting with the database,

00:00:59.830 --> 00:01:05.400
but you're interacting with the hibernate framework and Harbour Net framework is actually

00:01:05.400 --> 00:01:06.710
going to take care off,

00:01:06.710 --> 00:01:11.650
converting the hatch Grill queries into database specific SQL queries.

00:01:11.650 --> 00:01:18.310
And that is possible due to the dialect that you can figure in the Cabinet conflict file in

00:01:18.310 --> 00:01:20.550
case if you're using multiple databases,

00:01:20.550 --> 00:01:23.850
then you would have multiple have been in conflict files,

00:01:23.850 --> 00:01:26.950
and depending on the database that you're using,

00:01:26.950 --> 00:01:30.350
you can specify its specific dialect.

00:01:30.350 --> 00:01:34.510
So let's take a look at a very quick example of the same.

00:01:34.510 --> 00:01:38.000
Here are the examples off using hedge school.

00:01:38.000 --> 00:01:40.820
So with this statement,

00:01:40.820 --> 00:01:46.470
I'm just simply trying to retrieve all the list off employees present in the database in

00:01:46.470 --> 00:01:47.550
the employee table.

00:01:47.550 --> 00:01:49.200
So in here,

00:01:49.200 --> 00:01:54.610
I don't have to write Select Star from employees like we do in a skill you can just say

00:01:54.610 --> 00:01:55.590
from employees.

00:01:55.590 --> 00:02:00.810
And rest of the statement is assumed implicitly by have been eight.

00:02:00.810 --> 00:02:03.480
If you wish to use the select keyword,

00:02:03.480 --> 00:02:05.550
that is fine as well.

00:02:05.550 --> 00:02:09.100
Once you have this query in the form off a string,

00:02:09.100 --> 00:02:15.340
you have to feed that string to this method that belongs to this session.

00:02:15.340 --> 00:02:15.970
Object.

00:02:15.970 --> 00:02:20.650
So you would say session dot create query and then you would pass in the string.

00:02:20.650 --> 00:02:21.720
Once you do,

00:02:21.720 --> 00:02:22.250
that,

00:02:22.250 --> 00:02:25.080
dismantled would return the actual query,

00:02:25.080 --> 00:02:30.070
object and even just call quickly dot get result list,

00:02:30.070 --> 00:02:33.660
which will execute that query in the database and get you back.

00:02:33.660 --> 00:02:34.500
The results,

00:02:34.500 --> 00:02:36.850
which can be stored in the list,

00:02:36.850 --> 00:02:40.110
and you can use the list as you wish.

00:02:40.110 --> 00:02:41.750
Quite boys.

00:02:41.750 --> 00:02:47.340
We have another example in here that uses Aaliyah's So I said,

00:02:47.340 --> 00:02:50.850
Select he dot name from employees.

00:02:50.850 --> 00:02:52.430
So in this case,

00:02:52.430 --> 00:02:55.750
we haven't Elia's for the employee table,

00:02:55.750 --> 00:02:59.660
and that is with the letter e down the line.

00:02:59.660 --> 00:03:02.240
If you're trying to use this employee entity,

00:03:02.240 --> 00:03:09.150
you can just use its Elias name E and rest of the code will remain same.

00:03:09.150 --> 00:03:15.490
Do take a note that the employees in here corresponds to the class.

00:03:15.490 --> 00:03:16.930
Name off the entity.

00:03:16.930 --> 00:03:22.010
This is not going to be the database table name has evolved.

00:03:22.010 --> 00:03:25.120
We mentioned were not really interacting with the database,

00:03:25.120 --> 00:03:27.380
but we're letting have been it,

00:03:27.380 --> 00:03:29.050
interact with the database.

00:03:29.050 --> 00:03:30.920
So when you're using have been it,

00:03:30.920 --> 00:03:36.570
you have to use the object oriented approach to interact with the database,

00:03:36.570 --> 00:03:38.930
and that is one off the plus sites off.

00:03:38.930 --> 00:03:40.800
Using Cabinet query language.

00:03:40.800 --> 00:03:46.810
We Java developers will be comfortable using it because we're interacting with the objects

00:03:46.810 --> 00:03:48.050
or entities,

00:03:48.050 --> 00:03:49.950
not with the database tables,

00:03:49.950 --> 00:03:55.510
an example off where clause can be seen in here.

00:03:55.510 --> 00:03:58.890
There's a set off example statements.

00:03:58.890 --> 00:04:05.450
So in here I'm just trying to select employees with the name John.

00:04:05.450 --> 00:04:12.250
And in here I'm just trying to select all the employees that belong toe a particular city.

00:04:12.250 --> 00:04:19.350
And in here I'm trying to use the Elia's he that represents employee table.

00:04:19.350 --> 00:04:24.760
And here I'm just trying to select all the employees.

00:04:24.760 --> 00:04:26.850
Host City is not set another,

00:04:26.850 --> 00:04:29.730
and here I am,

00:04:29.730 --> 00:04:35.530
trying to combine our get results based on couple off tables are entities.

00:04:35.530 --> 00:04:38.650
I'm trying to use Elia's in this case as well.

00:04:38.650 --> 00:04:45.290
So what I'm trying to do here is I'm just trying to select list off boss objects that has

00:04:45.290 --> 00:04:48.150
the same name as with their employees.

00:04:48.150 --> 00:04:52.330
We're going to take a look at an example of the same in a second,

00:04:52.330 --> 00:04:54.750
and here is the order by clause.

00:04:54.750 --> 00:04:56.400
We know what it is.

00:04:56.400 --> 00:05:00.400
Let's take a look at an example of this in the clips.

00:05:00.400 --> 00:05:07.050
So here we have the one to many example that we had talked about.

00:05:07.050 --> 00:05:09.550
One boss will have multiple employees,

00:05:09.550 --> 00:05:11.480
and in the test class,

00:05:11.480 --> 00:05:14.060
I have added couple off employees,

00:05:14.060 --> 00:05:17.560
one with the names under and the other with the name John.

00:05:17.560 --> 00:05:24.050
The name of the boss is also sunder and in here when I'm trying to display the boss details

00:05:24.050 --> 00:05:24.050
.

00:05:24.050 --> 00:05:28.250
I'm trying to sort them in descending order.

00:05:28.250 --> 00:05:40.490
But let me pick this query from here and let me try to change this to E m.

00:05:40.490 --> 00:05:40.970
P.

00:05:40.970 --> 00:05:44.040
Now this corresponds to the name of the employees.

00:05:44.040 --> 00:05:46.770
If you take a look at the employ entity,

00:05:46.770 --> 00:05:50.290
he MPs for name of the employees,

00:05:50.290 --> 00:05:52.950
let me quickly run this program,

00:05:52.950 --> 00:05:57.080
save the file and let's see the result.

00:05:57.080 --> 00:06:10.450
So we have the boss whose name is Sunder because he's also having an employee under him

00:06:10.450 --> 00:06:11.850
with the same name.

00:06:11.850 --> 00:06:17.350
So likewise,

00:06:17.350 --> 00:06:21.700
we have many queries that we can run by using Hatch Kuol.

00:06:21.700 --> 00:06:28.660
But I don't think it's a good idea for me to waste your time in walking you through all the

00:06:28.660 --> 00:06:29.950
hatch kill statements.

00:06:29.950 --> 00:06:32.290
If you're taking this course,

00:06:32.290 --> 00:06:35.250
then I assume that you know s Cuba.

00:06:35.250 --> 00:06:42.440
This index off fetch girl is more or less similar to SQL just like we have joins sub

00:06:42.440 --> 00:06:43.130
queries,

00:06:43.130 --> 00:06:51.020
unions etcetera in SQL we do have the same stuff in hetch kill as well and the syntax is

00:06:51.020 --> 00:06:52.280
more or less the same.

00:06:52.280 --> 00:06:56.880
So I don't want to waste your time in discussing all the things that you already know.

00:06:56.880 --> 00:07:01.000
And as of all the dimension Hetch Grill in terms off sin,

00:07:01.000 --> 00:07:04.040
thats is more or less similar to SQL.

00:07:04.040 --> 00:07:05.910
And you can go to this link,

00:07:05.910 --> 00:07:07.510
which is the official link.

00:07:07.510 --> 00:07:18.000
And this has pretty much all the types off queries you can use using have been eight pretty

00:07:18.000 --> 00:07:19.150
easy stuff.

00:07:19.150 --> 00:07:21.700
So that's about it on Hetch Kuol.

00:07:21.700 --> 00:07:25.350
I'm going to save this document for you to download.

00:07:25.350 --> 00:07:29.350
It's with the name Hetch Kildare dogs.

00:07:29.350 --> 00:07:31.410
You can take a look at it.

