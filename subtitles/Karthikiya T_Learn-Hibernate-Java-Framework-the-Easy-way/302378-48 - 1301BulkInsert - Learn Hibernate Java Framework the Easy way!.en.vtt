WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.090
in this chapter,

00:00:05.090 --> 00:00:09.750
we're going to talk about how we can deal with bulk operations in Harbin aid.

00:00:09.750 --> 00:00:11.500
And in this video,

00:00:11.500 --> 00:00:17.110
we're going to take a look at how we can insert bulk amount of data into the database.

00:00:17.110 --> 00:00:22.190
Let's say that you were given with the task off inserting 100 employees into the database,

00:00:22.190 --> 00:00:24.360
then it's pretty straightforward approach.

00:00:24.360 --> 00:00:29.380
All you do is you take each and every employee object and use this method session,

00:00:29.380 --> 00:00:31.510
not save to save the employees.

00:00:31.510 --> 00:00:35.160
But what if I tell you that you have one million records?

00:00:35.160 --> 00:00:39.090
Are one million employee details to be inserted in the database?

00:00:39.090 --> 00:00:40.900
How are you going to handle that?

00:00:40.900 --> 00:00:41.430
Well,

00:00:41.430 --> 00:00:42.940
if you follow this approach,

00:00:42.940 --> 00:00:46.030
then it's going to cause one serious problem.

00:00:46.030 --> 00:00:48.370
Can you guess what the problem would be?

00:00:48.370 --> 00:00:49.470
Obviously,

00:00:49.470 --> 00:00:53.260
when you're trying to save so many objects into the database,

00:00:53.260 --> 00:00:58.560
that means all those objects would be accumulated in the cache memory,

00:00:58.560 --> 00:01:04.650
and ultimately it would lead to out off memory exception and your transaction will fail.

00:01:04.650 --> 00:01:06.750
So how are you going to handle that?

00:01:06.750 --> 00:01:09.000
You know that illustrate the same.

00:01:09.000 --> 00:01:16.050
I'm using the full loop to create employee objects on the fly and trying to save them.

00:01:16.050 --> 00:01:22.610
Now it is going to take a bit off time to actually insert one million records.

00:01:22.610 --> 00:01:24.590
So for the sake of this example,

00:01:24.590 --> 00:01:27.970
I'm just trying to save 40 employees objects.

00:01:27.970 --> 00:01:31.140
But as UME that this number is one million.

00:01:31.140 --> 00:01:33.350
So how are we going to handle that?

00:01:33.350 --> 00:01:33.970
Well,

00:01:33.970 --> 00:01:35.260
it's pretty simple.

00:01:35.260 --> 00:01:40.070
All you have to do is you would clear the cache memory once a while.

00:01:40.070 --> 00:01:41.350
For example,

00:01:41.350 --> 00:01:49.580
you're going to check to see if we had inserted 10 records by now by using this little math

00:01:49.580 --> 00:01:49.580
,

00:01:49.580 --> 00:01:53.580
and if this condition is satisfied than what you want to do,

00:01:53.580 --> 00:01:54.640
he would cessation,

00:01:54.640 --> 00:01:55.450
not clear.

00:01:55.450 --> 00:02:02.630
So what this will do is it will evict each and every object from the cache memory or first

00:02:02.630 --> 00:02:04.630
level cachet to be specific.

00:02:04.630 --> 00:02:10.620
So this will not lead to out off memory exception because we're clearing the cache memory

00:02:10.620 --> 00:02:11.800
every once a while.

00:02:11.800 --> 00:02:14.000
But we have another problem in here.

00:02:14.000 --> 00:02:18.150
Let's say that you're trying to make a ditz to the employee object on the fly,

00:02:18.150 --> 00:02:18.880
for example,

00:02:18.880 --> 00:02:22.800
say that I want to change his name to something else.

00:02:22.800 --> 00:02:28.850
Set name to say,

00:02:28.850 --> 00:02:31.090
employees,

00:02:31.090 --> 00:02:32.060
new,

00:02:32.060 --> 00:02:35.180
whatever the name just for the sake of this example.

00:02:35.180 --> 00:02:36.570
All right.

00:02:36.570 --> 00:02:40.780
Now let me run this program and take a look at the table in the database.

00:02:40.780 --> 00:02:41.380
Now,

00:02:41.380 --> 00:02:46.200
since we're trying to evict all the objects from the cache memory before we said

00:02:46.200 --> 00:02:46.920
transaction,

00:02:46.920 --> 00:02:47.780
not Comet,

00:02:47.780 --> 00:02:52.950
then only until we save the object will the changes reflect.

00:02:52.950 --> 00:02:58.580
So whatever the objects that come after it will not take any effect at all.

00:02:58.580 --> 00:03:01.560
It's on the program and see the result.

00:03:01.560 --> 00:03:10.100
And if you go to the database,

00:03:10.100 --> 00:03:14.210
you would notice that the employee name is not updated.

00:03:14.210 --> 00:03:18.400
So we need to try to save the object before we try to evict it.

00:03:18.400 --> 00:03:21.000
How can we accomplish that?

00:03:21.000 --> 00:03:22.250
It's very simple.

00:03:22.250 --> 00:03:28.240
We just need to call another method before we say sessions are clear and that is session

00:03:28.240 --> 00:03:29.440
dot flush.

00:03:29.440 --> 00:03:36.010
So what this is going to do is it would force decision to flush.

00:03:36.010 --> 00:03:40.590
That means all the objects would be persisted with their latest changes.

00:03:40.590 --> 00:03:44.950
And so that includes this name optician as well.

00:03:44.950 --> 00:03:45.630
No,

00:03:45.630 --> 00:03:49.750
that's straight on the program and see the result.

00:03:49.750 --> 00:03:51.390
And sure enough,

00:03:51.390 --> 00:03:54.850
if you go to the database,

00:03:54.850 --> 00:03:58.450
they would see those employees records getting updated.

00:03:58.450 --> 00:04:07.190
So if you're following the strategy to deal with bulk amount of data and you're trying to

00:04:07.190 --> 00:04:08.820
clear the cache once a while.

00:04:08.820 --> 00:04:11.010
Then do make sure that you do session,

00:04:11.010 --> 00:04:13.350
not flush before you try to clear.

00:04:13.350 --> 00:04:14.000
Now,

00:04:14.000 --> 00:04:16.190
if you have second level cache enabled,

00:04:16.190 --> 00:04:18.070
then you need to take care off,

00:04:18.070 --> 00:04:19.660
brushing that memory as well.

00:04:19.660 --> 00:04:22.880
Because even that cache memory has some limit.

00:04:22.880 --> 00:04:24.530
And if you're not careful,

00:04:24.530 --> 00:04:28.150
that may lead to out of memory exception as well.

00:04:28.150 --> 00:04:30.980
So you would say Session,

00:04:30.980 --> 00:04:32.480
factory,

00:04:32.480 --> 00:04:39.370
Dr Get cachet And then you would just simply say,

00:04:39.370 --> 00:04:40.670
evict all.

00:04:40.670 --> 00:04:42.900
Or we can use this method ev it.

00:04:42.900 --> 00:04:47.960
And then you would specify the class name that would ever all the objects that corresponds

00:04:47.960 --> 00:04:53.150
to the class and this should work as well.

00:04:53.150 --> 00:04:54.270
All right,

00:04:54.270 --> 00:04:55.040
that's about it.

00:04:55.040 --> 00:04:56.000
In this video,

00:04:56.000 --> 00:04:57.730
we'll continue from next video.

00:04:57.730 --> 00:04:58.390
See you soon.

