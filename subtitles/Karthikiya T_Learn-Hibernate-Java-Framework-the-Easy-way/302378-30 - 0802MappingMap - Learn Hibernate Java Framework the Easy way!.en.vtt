WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.520
okay.

00:00:01.520 --> 00:00:07.010
We had talked about how we can deal with mapping in case off list and set and the sweet of

00:00:07.010 --> 00:00:10.250
we're going to talk about how we can map a map,

00:00:10.250 --> 00:00:14.090
and we also know that map comes with key value pairs.

00:00:14.090 --> 00:00:16.350
And so we had to provide the same,

00:00:16.350 --> 00:00:21.700
and the key value pair would be represented as two different columns in the data base.

00:00:21.700 --> 00:00:24.500
So let's see how it's done again.

00:00:24.500 --> 00:00:27.740
You have to provide the sanitation element collection.

00:00:27.740 --> 00:00:30.430
Since we don't have any kind of relation,

00:00:30.430 --> 00:00:32.640
we're not going to provide one too many,

00:00:32.640 --> 00:00:34.580
many too many or anything of that sort.

00:00:34.580 --> 00:00:38.490
We would instead specify the sanitation element collection,

00:00:38.490 --> 00:00:45.350
and these two annotations in here would just let us give the name to both key and value

00:00:45.350 --> 00:00:45.980
pairs.

00:00:45.980 --> 00:00:52.980
So Map Key would be the column name off all the key values that we're going to enter and

00:00:52.980 --> 00:00:54.860
column as usual.

00:00:54.860 --> 00:01:02.160
This would represent the name of the column for this property and that put before the

00:01:02.160 --> 00:01:08.450
values that the provided in here So the main class code is pretty simple,

00:01:08.450 --> 00:01:20.350
and let us try to run the program and see how things will go so Basically what I've done in

00:01:20.350 --> 00:01:27.380
here is the second column is going to tell us who has actually created that nickname to

00:01:27.380 --> 00:01:28.250
their boss.

00:01:28.250 --> 00:01:37.350
And if you go to a database and a slash DT and here of the list off tables Select star from

00:01:37.350 --> 00:01:41.750
Bones nicknames.

00:01:41.750 --> 00:01:42.620
Well,

00:01:42.620 --> 00:01:47.460
having it has actually created this name since we haven't explicitly provided the

00:01:47.460 --> 00:01:48.270
annotation,

00:01:48.270 --> 00:01:50.120
other names.

00:01:50.120 --> 00:01:50.510
I mean,

00:01:50.510 --> 00:01:53.520
if you provide the sanitation,

00:01:53.520 --> 00:01:57.720
then we can give our own name to the gender to table.

00:01:57.720 --> 00:01:59.490
But since we didn't do so,

00:01:59.490 --> 00:02:01.710
have been it has done that for us.

00:02:01.710 --> 00:02:04.680
So let's try to see what's inside this.

00:02:04.680 --> 00:02:05.550
And sure enough,

00:02:05.550 --> 00:02:07.260
we have interesting here.

00:02:07.260 --> 00:02:10.800
According to what we're populated from our main class.

00:02:10.800 --> 00:02:20.020
You start to run the program with this annotation and make sure that's going to create a

00:02:20.020 --> 00:02:21.750
table with that name.

00:02:21.750 --> 00:02:25.450
And sure enough,

00:02:25.450 --> 00:02:27.800
we have.

00:02:27.800 --> 00:02:29.750
We now have that table in here.

00:02:29.750 --> 00:02:32.110
All right,

00:02:32.110 --> 00:02:32.970
that's about it.

00:02:32.970 --> 00:02:33.320
See?

00:02:33.320 --> 00:02:33.830
Assume

