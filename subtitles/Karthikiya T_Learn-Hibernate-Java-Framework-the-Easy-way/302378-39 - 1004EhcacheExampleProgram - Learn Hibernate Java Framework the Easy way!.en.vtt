WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.940
Okay,

00:00:04.940 --> 00:00:10.450
let us try to get some more inside off which cash Each cash comes with some default

00:00:10.450 --> 00:00:11.080
settings.

00:00:11.080 --> 00:00:14.920
But in case if you'd like to provide your own customization,

00:00:14.920 --> 00:00:20.590
then you can introduce this file each cash dot xml make it part of the list off resources

00:00:20.590 --> 00:00:21.440
in your project.

00:00:21.440 --> 00:00:22.820
And once you do that,

00:00:22.820 --> 00:00:26.850
you can provide your customization and in orderto all right,

00:00:26.850 --> 00:00:28.270
all the default settings.

00:00:28.270 --> 00:00:34.050
He can use the stag default cachet and provide your customization.

00:00:34.050 --> 00:00:36.770
So here we have some customization.

00:00:36.770 --> 00:00:37.700
As an example,

00:00:37.700 --> 00:00:42.970
we have said this Param Eter timeto idol seconds to 1 20 seconds.

00:00:42.970 --> 00:00:49.670
That means if an object remains idle for want of the seconds then habitable deleted state

00:00:49.670 --> 00:00:50.950
are from the cachet.

00:00:50.950 --> 00:00:51.880
Similarly,

00:00:51.880 --> 00:00:53.920
we have time to live seconds.

00:00:53.920 --> 00:00:58.200
This will be the total life often object in the cache memory.

00:00:58.200 --> 00:00:59.670
Similarly,

00:00:59.670 --> 00:01:02.510
we have host off other configurations we can set,

00:01:02.510 --> 00:01:03.950
and similarly,

00:01:03.950 --> 00:01:09.870
we can also get more specific and provide customization at entity level as well.

00:01:09.870 --> 00:01:16.750
So in here were just pointing to the employee class and we have provided some customization

00:01:16.750 --> 00:01:16.750
.

00:01:16.750 --> 00:01:20.060
So when you're dealing with employees entity,

00:01:20.060 --> 00:01:24.390
these settings will have priority over these,

00:01:24.390 --> 00:01:26.370
and moreover,

00:01:26.370 --> 00:01:29.200
you can actually create your own context.

00:01:29.200 --> 00:01:29.750
Good.

00:01:29.750 --> 00:01:31.710
Some name and use it in the code,

00:01:31.710 --> 00:01:34.110
an example of which can be seen in here.

00:01:34.110 --> 00:01:36.480
We have this file each cash a test.

00:01:36.480 --> 00:01:40.450
I'm going to make this part off this project so that you can take a look at it as well.

00:01:40.450 --> 00:01:44.650
And so what we have here is let me just come in this out,

00:01:44.650 --> 00:01:47.100
are created an instance off,

00:01:47.100 --> 00:01:48.100
cash a manager,

00:01:48.100 --> 00:01:52.650
and do take note that this is part off each casual library.

00:01:52.650 --> 00:01:55.380
So once I do that,

00:01:55.380 --> 00:01:59.590
I'm going to use that object to get the existing cash a context.

00:01:59.590 --> 00:02:03.120
And here I can provide this name in here,

00:02:03.120 --> 00:02:09.880
whatever the name that Ugo same goes in here and all this settings that we have in here are

00:02:09.880 --> 00:02:11.950
no applicable in our program.

00:02:11.950 --> 00:02:18.930
So here's a quick demonstration of just added some additional configurations and whatever

00:02:18.930 --> 00:02:25.020
the configuration that I set through program will have the preference over whatever I said

00:02:25.020 --> 00:02:29.820
as part of these And as of all the dimension,

00:02:29.820 --> 00:02:34.650
the data that gets stored in the cache A would be in the form off key value pair,

00:02:34.650 --> 00:02:38.850
so I've just added key value pairs in this way.

00:02:38.850 --> 00:02:43.960
So I just kept it simple by adding string type key value pairs.

00:02:43.960 --> 00:02:46.750
One corresponds to apple to two banana,

00:02:46.750 --> 00:02:47.550
etcetera.

00:02:47.550 --> 00:02:54.720
And I'm trying to get the data or devalue by using its key just as you see here.

00:02:54.720 --> 00:02:57.450
And then I'm just trying to display the same.

00:02:57.450 --> 00:02:59.480
And in addition to that,

00:02:59.480 --> 00:03:05.260
the cash object actually offers light off methods we can use off just to demonstrate one

00:03:05.260 --> 00:03:05.790
off them.

00:03:05.790 --> 00:03:08.260
Her made us off this method,

00:03:08.260 --> 00:03:09.960
his element on disk.

00:03:09.960 --> 00:03:15.200
So this method will actually tell us whether this element is present in the disc are in the

00:03:15.200 --> 00:03:15.790
cachet.

00:03:15.790 --> 00:03:19.750
No case it is present in the cashing out in the disc.

00:03:19.750 --> 00:03:22.780
So let's on the program and see the output.

00:03:22.780 --> 00:03:27.210
And sure enough,

00:03:27.210 --> 00:03:28.280
walked well.

00:03:28.280 --> 00:03:33.940
And then guess if you want to create a cashier on the fly and not rely on these XML

00:03:33.940 --> 00:03:34.680
documents,

00:03:34.680 --> 00:03:43.450
then can just simply do that by calling this method Add cachet and you would provide your

00:03:43.450 --> 00:03:44.150
own name.

00:03:44.150 --> 00:03:45.710
And from this point,

00:03:45.710 --> 00:03:49.990
you can just use this cash and things will be seen.

00:03:49.990 --> 00:03:58.520
So the final project that you download from this chapter we'll also include this file so

00:03:58.520 --> 00:04:00.000
that he can experiment with it.

00:04:00.000 --> 00:04:01.270
All right,

00:04:01.270 --> 00:04:02.050
See you soon.

