WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.880
okay.

00:00:00.880 --> 00:00:02.120
We have seen various ways.

00:00:02.120 --> 00:00:05.320
Weaken gender the ad into fire by using various gender.

00:00:05.320 --> 00:00:10.670
Two classes in this medium went to demonstrate you how we can write our own custom,

00:00:10.670 --> 00:00:15.880
gender true class that we can use to generate the app identifiers for our tables.

00:00:15.880 --> 00:00:22.500
So let's say that I wanted to generate identify IRS in the following form like I want to

00:00:22.500 --> 00:00:25.770
prepare and each and every i d with E M.

00:00:25.770 --> 00:00:26.150
P.

00:00:26.150 --> 00:00:31.450
And then I put an underscore and then some random number something of that sort.

00:00:31.450 --> 00:00:33.080
So we'll have e m.

00:00:33.080 --> 00:00:35.910
P underscore some other random number.

00:00:35.910 --> 00:00:38.660
So let's see how it's done for that purpose.

00:00:38.660 --> 00:00:43.750
All you have to do is to create a class file and then unit implement this particular

00:00:43.750 --> 00:00:45.050
interface,

00:00:45.050 --> 00:00:52.460
which is identify rare generator and taken note that this is part off the package or have

00:00:52.460 --> 00:00:53.010
been eight.

00:00:53.010 --> 00:00:55.460
So if you're using this custom generator,

00:00:55.460 --> 00:00:59.070
your code may not be compatible with other Orem tools.

00:00:59.070 --> 00:01:00.750
So do keep that in mind.

00:01:00.750 --> 00:01:01.840
In fact,

00:01:01.840 --> 00:01:04.680
I think existing generators would suffice,

00:01:04.680 --> 00:01:06.960
but in rare cases Justin gets.

00:01:06.960 --> 00:01:08.530
If you'd like to generate your own,

00:01:08.530 --> 00:01:09.490
identify air,

00:01:09.490 --> 00:01:10.950
then you can go in this way.

00:01:10.950 --> 00:01:13.880
So once implement this interface,

00:01:13.880 --> 00:01:18.590
you're forced to provide the implementation for this method generate.

00:01:18.590 --> 00:01:20.290
And inside this method,

00:01:20.290 --> 00:01:21.730
you would have the logic,

00:01:21.730 --> 00:01:26.250
whatever the logic that you would like to give you to generate your desired identifier.

00:01:26.250 --> 00:01:27.250
In my case,

00:01:27.250 --> 00:01:28.950
I'm just trying to keep things simple.

00:01:28.950 --> 00:01:33.990
I used this object random Teoh gender to random integer,

00:01:33.990 --> 00:01:42.520
and I'm just trying to return by propelling hit with the string and inside my persistent

00:01:42.520 --> 00:01:43.160
class.

00:01:43.160 --> 00:01:49.150
This time I'm going to use this particular annotation that is part off the cabinet package

00:01:49.150 --> 00:01:49.150
,

00:01:49.150 --> 00:01:51.850
not the standard GP annotation,

00:01:51.850 --> 00:01:54.820
and I'm going to provide the falling para meters.

00:01:54.820 --> 00:01:57.450
The name can be anything off your choice,

00:01:57.450 --> 00:02:00.370
but the stategy is going to point to this class file,

00:02:00.370 --> 00:02:03.050
including the package,

00:02:03.050 --> 00:02:04.800
just as you see here.

00:02:04.800 --> 00:02:12.790
And then we can use this custom generator by providing the stag gender to value and then

00:02:12.790 --> 00:02:13.910
you provide the name.

00:02:13.910 --> 00:02:17.450
Whatever you give here that's older is to it.

00:02:17.450 --> 00:02:18.460
Now,

00:02:18.460 --> 00:02:19.740
if we run this program,

00:02:19.740 --> 00:02:24.250
you would come across with one ever Let's see what it is.

00:02:24.250 --> 00:02:28.050
Can you guess what that there would be just by taking a look at this code,

00:02:28.050 --> 00:02:30.880
I'll give you three seconds.

00:02:30.880 --> 00:02:33.520
Okay,

00:02:33.520 --> 00:02:36.280
let's take a look at the output and see the exception.

00:02:36.280 --> 00:02:39.550
So let's run the program.

00:02:39.550 --> 00:02:43.960
I'm sorry.

00:02:43.960 --> 00:02:46.550
I supposed to run the this job will file,

00:02:46.550 --> 00:02:57.350
So can you see anything in here?

00:02:57.350 --> 00:03:04.040
So here is the fixed.

00:03:04.040 --> 00:03:05.050
Set me to view.

00:03:05.050 --> 00:03:06.280
So what?

00:03:06.280 --> 00:03:09.340
We're passing from this custom generator it's a string.

00:03:09.340 --> 00:03:12.650
But what we have here is off pipe along.

00:03:12.650 --> 00:03:14.610
So let's change us too.

00:03:14.610 --> 00:03:17.050
String as well.

00:03:17.050 --> 00:03:22.650
So same thing should get deflected here as well as here.

00:03:22.650 --> 00:03:25.510
Now,

00:03:25.510 --> 00:03:27.100
let's try to run our program.

00:03:27.100 --> 00:03:32.880
And this time as well we're going to come across with another exception.

00:03:32.880 --> 00:03:34.350
Can you make a guess?

00:03:34.350 --> 00:03:35.390
Hold on,

00:03:35.390 --> 00:03:36.500
Let me on the program.

00:03:36.500 --> 00:03:45.550
So it stays the following,

00:03:45.550 --> 00:03:51.020
and I guess Okay,

00:03:51.020 --> 00:03:53.030
I'll give a clue in the database.

00:03:53.030 --> 00:03:59.150
We Although they have a table that was created with the data type as begin for I d Field.

00:03:59.150 --> 00:04:01.050
But we have not changed.

00:04:01.050 --> 00:04:02.800
It does string.

00:04:02.800 --> 00:04:05.160
So what does the fix that we can give?

00:04:05.160 --> 00:04:07.750
Having give you another clue,

00:04:07.750 --> 00:04:12.990
the fix would be inside this post area skill con Forget similar.

00:04:12.990 --> 00:04:17.000
Can you guess what the picks would be?

00:04:17.000 --> 00:04:18.650
The fix is here.

00:04:18.650 --> 00:04:23.450
I'm going to change this to create.

00:04:23.450 --> 00:04:28.220
So what this would essentially do is it will delete the entire table,

00:04:28.220 --> 00:04:30.680
and it would recreate we've already taken.

00:04:30.680 --> 00:04:33.350
Look at such example in our previous video.

00:04:33.350 --> 00:04:35.450
So let's run this program.

00:04:35.450 --> 00:04:38.800
And this time things will go smooth.

00:04:38.800 --> 00:04:39.470
Hopefully,

00:04:39.470 --> 00:04:42.450
Sure enough,

00:04:42.450 --> 00:04:47.300
it has dropped the table and it has created again.

00:04:47.300 --> 00:04:50.650
But this time with the data type as our car.

00:04:50.650 --> 00:04:53.490
And as expected,

00:04:53.490 --> 00:04:58.260
you would see the identify.

00:04:58.260 --> 00:05:00.450
IRS isn't the custom generator,

00:05:00.450 --> 00:05:04.910
so that's about it.

00:05:04.910 --> 00:05:11.690
So although I don't recommend you to use this package or cabinet to use annotations,

00:05:11.690 --> 00:05:14.750
I just want to let you know the flexibility that happen,

00:05:14.750 --> 00:05:15.510
it offers.

00:05:15.510 --> 00:05:22.020
Unless there is a real need with a solid reason to switch to have been eight annotations,

00:05:22.020 --> 00:05:24.240
try not to use them all right.

00:05:24.240 --> 00:05:24.850
Season.

