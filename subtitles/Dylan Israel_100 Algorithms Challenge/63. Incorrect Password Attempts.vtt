WEBVTT

00:00.870 --> 00:01.500
All right.

00:01.500 --> 00:08.380
So here we have a essentially a password lock out algorithm that we need to solve.

00:08.640 --> 00:14.430
We need to find out if we are going to be able to input our password or if we're going to be locked

00:14.520 --> 00:18.880
locked out after after a set amount of attempts.

00:18.930 --> 00:21.330
So we're going to be passing in our password.

00:21.450 --> 00:30.840
And then if we ever have more than 10 consecutive fails to log we are then going to say look it is you

00:30.840 --> 00:37.080
are no longer passing and we are going to return true meaning you are locked out of your account.

00:37.140 --> 00:41.030
Else return false meaning you logged in so you'll see here 11 are cool.

00:41.580 --> 00:47.850
So this one is 1 2 3 4 5 6 7 8 9 10.

00:47.850 --> 00:53.190
So 10 attempts between two successful logons those We're going to return true because we're looking

00:53.190 --> 00:59.260
at you out of your account so says is is that you know you know usually 10 10 is a lot.

00:59.310 --> 01:01.800
So that's basically the objective here.

01:01.830 --> 01:02.700
I don't envy hints for you.

01:02.700 --> 01:05.170
This is just a basic logic type algorithm.

01:06.150 --> 01:07.780
So this one is not too bad.

01:07.990 --> 01:11.770
Well we're going to do here's where I initialize a count to zero.

01:11.770 --> 01:15.070
This is going to be the count that we keep track of.

01:15.700 --> 01:22.270
Essentially our failed password attempts and you know what let's change that goes with change to fill

01:22.270 --> 01:22.690
the time.

01:22.690 --> 01:24.030
So it's much better than counting.

01:24.310 --> 01:30.340
And what we're going to do is to iterate through what does use a for loop because we're can't check

01:30.340 --> 01:33.390
all the values.

01:33.970 --> 01:39.470
And we are going to say lead attempt of attempts.

01:40.030 --> 01:46.330
And on the bottom here if we don't fail out in our FOR loop we're going to return false because that

01:46.330 --> 01:49.980
means that hey we're not getting locked out or we're going to return true.

01:50.140 --> 01:53.120
So what do we how do we set our count.

01:53.150 --> 01:57.390
Well what we're going to do is going to have a simple IF statement.

01:57.400 --> 02:02.030
We know our check right if count is ever equal to 10.

02:02.240 --> 02:08.620
We're we're going to return true because we have failed and this is actually failed attempts to not

02:08.620 --> 02:09.830
count anymore.

02:10.180 --> 02:12.250
Pay attention doing so.

02:12.490 --> 02:21.190
But we need to Inkerman So every iteration we don't want to do just count plus plus failed attempts.

02:21.190 --> 02:24.130
Plus plus.

02:24.820 --> 02:29.730
Because it is going to return true every time because if we have 12 items it's going to you know get

02:29.750 --> 02:31.240
10 and then go over.

02:31.240 --> 02:38.170
So we just have to modify failed attempts on increasing by one what we're going to do here is we're

02:38.170 --> 02:46.000
just going to turn every hour say look is an attempt every equal to our passcode meaning that it's correct.

02:46.000 --> 02:56.410
If it is go ahead and reset failed attempts to zero else go at it and increment count failed attempts

02:57.450 --> 03:01.550
as Losh and changed my variableness minute video and that's it really at the end.

03:01.570 --> 03:05.010
So we're keeping track of the current count of failed attempts.

03:05.200 --> 03:10.080
If it ever equals the passcode we are going to reset it if it ever equals 10 we're going to return true.

03:10.150 --> 03:13.780
And if it iterates through the whole array we're going to turn or false because we never got locked

03:13.780 --> 03:15.370
out of our account.
