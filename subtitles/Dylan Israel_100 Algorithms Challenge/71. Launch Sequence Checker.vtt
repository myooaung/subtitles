WEBVTT

00:00.390 --> 00:01.100
All right.

00:01.110 --> 00:08.880
So launch codes everyone likes launching missiles and when it in for fun not for like causing damage

00:08.880 --> 00:12.060
or killing people but so that's what we're doing here.

00:12.280 --> 00:16.960
We want to make sure that they're increasing in the proper order.

00:17.100 --> 00:23.010
So we're going to take two properties an array with essentially the launch codes as well as the step

00:23.190 --> 00:24.620
numbers.

00:24.890 --> 00:31.860
And we want to know that hey if we call stage 1 for instance and they get very you can read this but

00:31.860 --> 00:38.900
this is what it's basically saying if if you call stage 1 when we hit stage 1 again this is the sea

00:39.000 --> 00:41.970
did the sequence increase when it was one.

00:41.970 --> 00:48.450
You know we call stage 1 again here in step numbers two did we did we actually increase there because

00:48.450 --> 00:53.430
we shut off right because we want our launch sequences to be in increasing order.

00:53.430 --> 00:55.320
And then you do the same thing stage two.

00:55.320 --> 01:02.070
Stage two dragon dragon and if that's a true statement we can return true if it's not we're going to

01:02.070 --> 01:03.870
return false for for all that.

01:03.870 --> 01:11.010
So the only item I did here this is mainly a logic based one was the has own property object method.

01:11.700 --> 01:18.990
So here our objective is to make sure that if we've already called a launch sequence that the second

01:18.990 --> 01:20.850
iteration is larger than the first.

01:20.940 --> 01:23.600
So we need a way of keeping track of that.

01:23.730 --> 01:28.080
The way that I did it I created a object here which I just called launch codes

01:30.930 --> 01:34.080
and as I said it's an empty object.

01:34.230 --> 01:44.610
Now when I'm going to iterate through the the system names the launch codes essentially the system name

01:44.700 --> 01:53.060
that we're going to then append to launch codes and iterate through it and we'll do the entire item.

01:53.810 --> 01:55.940
Should I do.

01:57.150 --> 01:57.540
Yes.

01:57.720 --> 01:58.400
We need we.

01:58.410 --> 02:00.920
I was just trying to think if I needed the index value I'd do.

02:00.930 --> 02:05.270
In fact.

02:05.810 --> 02:06.300
All right.

02:06.400 --> 02:11.080
So now what we are going to do we're going to do an if else check to check if this property exists in

02:11.080 --> 02:15.790
our launch code if it doesn't we're going to send it to the current step number that we're iterating

02:15.790 --> 02:17.050
on.

02:17.050 --> 02:18.810
So we're into Jack.

02:19.940 --> 02:22.660
If launch codes has owned property

02:25.600 --> 02:30.760
and we're checking in on system names occurring with the current value that we're checking if that is

02:30.760 --> 02:46.400
true we're going to go ahead and set launch codes plus that property just systems IMSAI equal to step

02:46.400 --> 02:47.530
numbers.

02:48.110 --> 02:54.420
Now the issue with that is this is going to this is going to just overwrite the value.

02:54.620 --> 02:58.120
It's not going to we first have to check if hey is it.

02:58.160 --> 03:06.500
If it's a second time because it now exists which says hey if the current launch code value right the

03:06.500 --> 03:11.350
current launch code value systems that property right.

03:11.360 --> 03:14.000
That's just the string That's our key.

03:14.090 --> 03:21.350
If that key is greater than or equal to the current value in step numbers I we're just going return

03:21.350 --> 03:27.050
false because we found out our case in which nothing works

03:31.040 --> 03:37.440
but else outside of here we're just going to set the value right because it doesn't exist.

03:39.630 --> 03:44.760
And we're going to it Systems names.

03:45.360 --> 03:50.990
Equals Two-Step numbers and we're done.

03:51.030 --> 03:53.770
So just go over the logic real quick one more time.

03:53.790 --> 03:59.900
We create an object to store if we call it a launch code and to store what its value is.

03:59.900 --> 04:05.670
What if it's been incrementing properly we do a check here to find out if that key exists.

04:05.730 --> 04:10.110
If it doesn't we haven't called it yet and we don't need to do a check to see if it's incrementing.

04:10.120 --> 04:15.470
It's the first item in its code type in its system name.

04:15.510 --> 04:19.090
So we're going to set this step number to its value.

04:19.110 --> 04:27.000
But if it does exist we are going to make a check to find out if it's incrementing properly and if it's

04:27.000 --> 04:31.890
not we're going to return false if it is we're just going to update it to the next increment in its

04:32.220 --> 04:33.120
launch code.

04:33.360 --> 04:33.950
That's really it.
