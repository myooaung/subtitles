WEBVTT

00:01.050 --> 00:05.600
All right guys so we have here are three previous lists.

00:05.790 --> 00:07.310
Less now less.

00:07.420 --> 00:12.900
Less so given every Avengers for position for each position I search among the previous positions from

00:12.900 --> 00:13.840
the last.

00:13.980 --> 00:18.820
From the left position that contains a smaller value stored this value at position I.

00:18.840 --> 00:20.520
And the answer is there is no such value.

00:20.520 --> 00:22.070
We found a negative one.

00:22.110 --> 00:25.130
So you'll see here we have three and then five.

00:25.240 --> 00:26.310
Three is less than five.

00:26.310 --> 00:30.100
So we're going to there is no value less than 30 so I don't know of one.

00:30.300 --> 00:34.390
And then we continue on through the array in terms of.

00:34.390 --> 00:38.460
Hence I forget put on here but on shift with something I use in here.

00:38.460 --> 00:39.970
The rest is just pure logic.

00:40.000 --> 00:41.670
I understand the problem.

00:41.730 --> 00:44.080
So let's go ahead and dive into it.

00:44.610 --> 00:51.220
All right so the hardest part of this one was really just understanding what they were asking and what

00:51.240 --> 00:56.990
we have to do is we have to answer a negative one when there isn't a index value that's less than its

00:57.030 --> 00:58.030
previous.

00:58.080 --> 01:05.970
And so the way that I went about that was I created a two dimensional array where I created an array

01:06.270 --> 01:14.070
that I iterated through twice and when I found an item that was greater than the previous item I I shifted

01:14.070 --> 01:15.540
that item into it.

01:15.660 --> 01:23.520
If that exists if that never existed and we hit the end of that second iteration I added a negative

01:23.520 --> 01:24.140
one.

01:24.540 --> 01:29.460
So I did this in reverse order because for his for some reason it makes more sense to me.

01:29.460 --> 01:37.220
So you're going to cost you and we're going to say less than list and this is going to be a number.

01:37.490 --> 01:38.270
All right.

01:38.500 --> 01:41.000
So you could go to Eric.

01:41.040 --> 01:41.460
All right.

01:41.640 --> 01:44.380
Let's go and start Khokha up real quick.

01:44.400 --> 01:50.130
And at the end here what we want do is honor turn in less than list.

01:50.710 --> 01:51.350
Nice.

01:51.360 --> 01:59.130
Now what we're going to do is we're going to Adrie this into the proper area.

02:00.090 --> 02:04.620
Now what we're going to do is we're going to create a for loop or in deck right backwards which means

02:04.620 --> 02:12.690
we're going to be equal to the items start lamps minus one because there's no index value on items on

02:12.720 --> 02:13.500
Lance.

02:13.730 --> 02:16.960
And then we have I is greater than or equal to zero.

02:17.230 --> 02:18.640
Well that is a true statement.

02:18.660 --> 02:21.940
Continue iterating and then just deck meant by one.

02:22.260 --> 02:23.410
Nice.

02:23.580 --> 02:26.510
Now what we're going to do is we're going to do it now the for loop.

02:26.620 --> 02:31.970
Let J equal to I mean the current index we're iterating on.

02:32.100 --> 02:38.030
And while J is greater than or equal to zero J.

02:38.340 --> 02:38.890
Mine is mine.

02:38.910 --> 02:44.430
So this skill allows iterate from the position that we're in in the array so that we don't know we aren't

02:44.430 --> 02:48.600
doing duplicate checks and we are only checking the previous values for here.

02:48.600 --> 02:52.500
Now what we have is a little bit of a complicated if else statements.

02:52.550 --> 02:55.890
It's not that complicated but you say if items

02:58.680 --> 03:06.920
is greater than items J which means this is a truce essentially a true statement.

03:06.950 --> 03:07.840
I mean that the.

03:07.860 --> 03:09.220
Because we're decrementing backwards.

03:09.240 --> 03:15.540
The item is greater or if you look at if you're going for is a current item is less than we're then

03:15.720 --> 03:25.900
going to say are cool that passes and then we're going to say on shift that value items J onto it like

03:25.900 --> 03:32.360
so else and then break because we don't want to do it more than once.

03:32.560 --> 03:38.800
So break else else if Excuse me.

03:38.910 --> 03:39.330
If

03:42.150 --> 03:46.380
we want to say if J is ever equal to zero.

03:46.470 --> 03:52.150
We've gone through the array and we've gone through all the previous items in the array.

03:52.200 --> 03:58.950
None of them matches this and we're going to say less than less.

03:59.010 --> 04:03.580
On shift and that means that in our case there is any previous value.

04:03.610 --> 04:11.070
We're just going to go ahead and throw in negative one like so and like so and we should be good to

04:11.070 --> 04:11.980
go here.

04:15.230 --> 04:18.800
And we expected did we.

04:18.880 --> 04:23.490
If it was we are secretly racist.

04:23.740 --> 04:24.600
That's what happened.

04:24.850 --> 04:25.860
And they're real.

04:25.930 --> 04:33.070
So I found the hardest part of this one personally I was just trying to understand what they were asking

04:33.550 --> 04:38.050
and that's what I think is one of the challenges that you get when you start working through these algorithms

04:38.080 --> 04:44.980
as well is you have to read typically not very good instructions and these are coming straight from

04:44.980 --> 04:46.450
algorithm sites.

04:46.450 --> 04:48.560
And I think that's almost intentional.

04:48.570 --> 04:52.350
At least I like to think it is to add a little bit of a challenge.
