WEBVTT

00:00.600 --> 00:01.290
All right.

00:01.290 --> 00:12.060
Largest of four saw we have here is a what our objective is is we have four nested arrays I say necessary

00:12.090 --> 00:18.010
but there's four arrays in them of numbers and we want to return the highest number for each array.

00:18.030 --> 00:22.770
So you'll see here we have thousand one for our output.

00:22.770 --> 00:29.450
We have thirty nine and I think I might have reversed these but then we have 5 and then we have 27 other

00:29.450 --> 00:29.860
outputs.

00:29.880 --> 00:37.360
We want to return the values of the largest the largest value in each individual array as an array.

00:37.560 --> 00:38.500
That's our objective.

00:38.610 --> 00:40.560
I don't really have any hints for you here.

00:40.560 --> 00:41.910
This is a pure logic one.

00:41.970 --> 00:43.910
Let's go out and jump into it.

00:43.950 --> 00:47.340
All right so I can actually solve this one but I don't think it's going to be too difficult so we'll

00:47.370 --> 00:48.400
go ahead and get it.

00:48.450 --> 00:49.940
So we know we have done this.

00:50.070 --> 00:55.830
We have a double nested array and we know that we want to return an array of numbers so we go in and

00:55.830 --> 01:05.860
create a array here and we'll call this highest numbers and this will be of type number array.

01:06.120 --> 01:11.730
And I just got a new update to Visual Studio which you'll see these great out values.

01:11.730 --> 01:15.810
They basically mean like hey we never do anything with this.

01:15.840 --> 01:17.340
Why do you have it here.

01:17.460 --> 01:18.240
Which is pretty cool.

01:18.240 --> 01:18.960
I like that update.

01:18.960 --> 01:23.330
So what we're going to do here is return highest numbers Marinus.

01:23.400 --> 01:31.880
Now we're going to iterate through highest numbers and lowest the highest numbers for each actually

01:31.880 --> 01:32.770
worries for us.

01:32.790 --> 01:34.440
Because I think it would be more readable.

01:34.440 --> 01:35.370
So we'll let

01:40.180 --> 01:44.350
on Tues what numbers of Gnome's

01:49.540 --> 01:59.750
ghost number list number group number group select number group of Naam so I'll do another one here.

01:59.800 --> 02:02.920
I say let.

02:02.950 --> 02:08.210
Number of numbered group.

02:08.880 --> 02:09.560
All right.

02:09.660 --> 02:13.300
So we're now iterating through our double nested array.

02:13.830 --> 02:22.380
Right here what we're going to have is a a variable that we're going to store our largest number for

02:22.440 --> 02:23.550
that we're going keep track of.

02:23.760 --> 02:29.870
And so we're going to be dealing with only positive numbers so it's OK for us initialises to zero.

02:30.000 --> 02:39.500
So we call this highest number or largest which is called largest initialized it to zero.

02:40.010 --> 02:52.650
And so here we can go ahead and do a turn ary says largest is equal to your turn their hair is largish

02:53.010 --> 02:56.360
less than number.

02:57.120 --> 03:03.410
If so return number three set largest.

03:03.570 --> 03:08.670
Now what we need to do outside of this loop is we just need to go ahead and say Hey now that we have

03:08.670 --> 03:17.910
our largest number and take highest numbers and push the largest to it and that's it we're done.

03:17.910 --> 03:23.020
So just go read the logic one more time we are iterating through both arrays.

03:23.190 --> 03:28.980
We have a very well that gets reset for every time we go through a new array to 0 and then each iteration

03:28.980 --> 03:36.660
we're just checking to see if our largest number is in fact larger than our current one.

03:36.660 --> 03:40.460
If it is a set if not just reset to its own value.

03:40.680 --> 03:44.790
And in this case we're once it's done going all the way through.

03:44.790 --> 03:47.950
We then just push whatever currently is largest and do it again.
