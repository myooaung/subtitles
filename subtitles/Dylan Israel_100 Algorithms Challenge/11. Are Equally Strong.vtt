WEBVTT

00:00.690 --> 00:02.570
All right are equally strong.

00:02.580 --> 00:09.510
So two arms are equally strong the heaviest weight they're able to lift are equal call to people equally

00:09.510 --> 00:13.950
strong it's their strongest arms are equally strong strongest and can be both the right and the left

00:14.280 --> 00:16.180
and so are their weakest arms.

00:16.230 --> 00:22.160
Given your near friends arm lifting capabilities find out if you two are equally strong.

00:22.410 --> 00:23.940
I don't really have any hints for you.

00:23.940 --> 00:29.150
This is a pure logic based type algorithm to see if you can read and understand what they're asking

00:29.150 --> 00:30.320
in these three sentences.

00:30.320 --> 00:37.080
There's a lot packed in those three senses but you know we'll have some test cases here these three

00:37.080 --> 00:38.960
for you to look at and figure out.

00:39.150 --> 00:41.700
Let's go ahead and dive into the algorithm.

00:41.720 --> 00:46.770
All right so hopefully you've had a second to look at it and try and understand the law the way that

00:46.800 --> 00:52.710
I solve this problem was we're really getting asked for things here.

00:52.800 --> 01:00.450
What is our strongest compared to our left and right arm what is our friends strong as compared to the

01:00.450 --> 01:01.680
left and right arm.

01:01.740 --> 01:05.150
What is our weakest compared to our left and right arm.

01:05.280 --> 01:08.510
And what is their weakness compared to their left and right arm.

01:08.610 --> 01:12.160
And then we need to compare those values to get our answer.

01:12.330 --> 01:18.900
And so this is what I did I created for Conte's of variables and I call this your weakest

01:22.800 --> 01:26.010
and was initialises conc.

01:26.230 --> 01:31.030
We're going to we're going to set the values there but just to really paint the picture you're strongest.

01:32.170 --> 01:36.430
And then we have for its weakest

01:38.960 --> 01:48.800
friends strong is.

01:48.920 --> 01:54.650
Now that we have these four initialized the first Eureka's value and you could probably VIVIR the weakest

01:54.650 --> 01:56.820
and strongest early matter.

01:57.290 --> 02:01.220
But what we're going to do here is we're going to do a turn area and we don't actually have to have

02:01.220 --> 02:09.460
that there where we're going to say your left is less than or equal to your right.

02:09.660 --> 02:15.990
And if that's true we want that to be equal to the your left value here.

02:16.590 --> 02:21.150
If it's false we want to be equal to your right value.

02:21.390 --> 02:26.480
So now we know which is the weaker arm here and now we're going to do the same for the strongest.

02:26.570 --> 02:31.860
Well we're just going to reverse this and it's going to look very similar except it's going to be your

02:31.860 --> 02:36.530
left is greater than or equal to your right.

02:37.080 --> 02:40.060
And if that's true we're going to go ahead and return your left.

02:40.110 --> 02:42.640
If it's false We're going to return your right.

02:43.230 --> 02:48.780
Excellent So now we know which arm is weak Yes which arm is strongest in terms of value and that's what

02:48.780 --> 02:53.550
we're looking for and we're going to the same exact thing with our friends left being less than or equal

02:53.550 --> 02:55.790
to friends right.

02:56.010 --> 03:01.240
And if that's true we're going to return friends left.

03:01.240 --> 03:03.390
Else we're going to return friends right.

03:03.620 --> 03:06.470
That's right.

03:07.290 --> 03:13.810
And last but not least reading it friends left is greater than or equal to friends right.

03:14.290 --> 03:14.850
Yes true.

03:14.850 --> 03:16.290
We're going to return friends

03:18.810 --> 03:19.880
left.

03:19.920 --> 03:21.290
We're going to turn friends.

03:21.360 --> 03:22.280
Right.

03:22.290 --> 03:23.350
All right.

03:23.580 --> 03:31.050
So we have we now know what the values of our of our strings of our numbers are.

03:31.140 --> 03:34.960
And now all we do in our return statement is evaluated.

03:35.190 --> 03:37.620
And so we're going to have.

03:37.860 --> 03:38.600
I liked your group.

03:38.610 --> 03:46.080
When I when I'm dealing with multiple statements but based off the problem and say hey are we is my

03:46.080 --> 03:51.200
strong is equal to my friend strongest and is my weakness equal to my friend's weakness.

03:51.210 --> 03:53.420
That's really what they're asking at the end of the day.

03:53.610 --> 04:00.090
So we could do something like this where you check raise your srong is equally equal to friends.

04:00.300 --> 04:01.110
Strong us

04:03.710 --> 04:13.970
and is your weakest people equal to your friends.

04:15.750 --> 04:19.330
Weak is and there you go.

04:19.390 --> 04:24.780
Let's take that off and look very good that on there and that's it at the end of the day.

04:24.790 --> 04:29.750
A lot of work is play you guys get comfortable reading through sort of some of the nonsense in the garbage

04:29.850 --> 04:31.500
and in these things shows.

04:31.690 --> 04:35.470
Oftentimes people make things more wordy than they are but that's also part of the problem.

04:35.650 --> 04:42.870
So we just really use Turner use and the and operator and Ghatak got our answer at the end of day.

04:42.910 --> 04:44.990
It did take me a while when I first read this.

04:45.040 --> 04:47.340
What are they actually asking in this problem.

04:47.560 --> 04:52.630
And that's a skill in itself sometimes figuring out why some of these algorithms are asking and so I

04:52.630 --> 04:53.860
hope you guys enjoyed this.
