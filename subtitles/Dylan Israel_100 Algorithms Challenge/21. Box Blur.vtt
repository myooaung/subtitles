WEBVTT

00:00.450 --> 00:01.170
All right.

00:01.170 --> 00:03.110
So we are on box Belaire.

00:03.120 --> 00:05.980
This is one of the harder ones in my opinion at least it was for me.

00:06.000 --> 00:12.030
Everyone has difficulty with their own set of algorithms but I found this one particularly difficult

00:12.780 --> 00:20.460
what we're doing here is we are taking the values we're going to omit the edges and we only want to

00:20.460 --> 00:22.800
have the center of values in our example here.

00:22.800 --> 00:28.350
There's only one center value because all of the values around it are on the edge and then we want to

00:28.350 --> 00:39.030
go ahead and create a get the value rounded down to in the center from all the values so last night

00:39.030 --> 00:41.370
we had to study which side a party instead.

00:41.370 --> 00:42.360
Poor decisions.

00:42.360 --> 00:44.720
Now there's black and white photo of you this will go viral.

00:44.730 --> 00:46.630
You cannot let this ruin your expectations.

00:46.670 --> 00:49.940
You want to apply a box or algorithm to hide its content.

00:49.950 --> 00:51.510
The algorithm works as follows.

00:51.510 --> 00:59.520
Each pixel acts in the resulting image has a value equal to the average value of the input images pixels

00:59.610 --> 01:05.640
values from the three by three square with the Center at X all pixels at the edges are corrupt pixels

01:05.700 --> 01:13.100
those integer all fractions should be rounded down so you'll see here and then give an example.

01:13.200 --> 01:17.930
Pixels are covering the value pixel that was obtained by adding these numbers together.

01:17.990 --> 01:21.020
Get 15 over 9 9 values in here.

01:21.030 --> 01:21.810
Round down to 1.

01:21.810 --> 01:24.400
Now we're dealing with more than just why three by three.

01:24.400 --> 01:27.540
This is it any Square starting at 3 by 3.

01:27.540 --> 01:32.820
So a hint is the push and Matloff floor let's good and jump into it.

01:32.940 --> 01:39.690
All right so what we're going to be returning is a double nested array and so we can start with that.

01:39.690 --> 01:48.120
By defining this rez which is short for resolution Conte's rez set is equal to an empty array and then

01:48.450 --> 01:53.570
eventually we want to return rise here after we have done modifying it.

01:53.940 --> 01:58.740
Now the way that we have to sort of think about this is what is it that we're really trying to accomplish

01:58.740 --> 02:03.140
here and what it is is we're trying to avoid the edges.

02:03.180 --> 02:06.750
So we have some interesting math here.

02:07.760 --> 02:12.170
Did do that and we're actually going to be having essentially triple nested array to find out what are

02:12.180 --> 02:14.050
edge values which are not.

02:14.210 --> 02:19.080
And then this was the hardest part was just trying to figure out how to look at the problem.

02:19.080 --> 02:23.850
So the first thing we can do is to look at the y coordinates so that if I were actually into this the

02:23.850 --> 02:29.120
Y and then we're going to the image that's being passed in length.

02:29.380 --> 02:34.210
Mine is to avoid the edges and then we can increment by 1.

02:34.230 --> 02:40.110
Now what we're going to do is we're going to create a line here and we're going to set this equal to

02:40.110 --> 02:40.780
an empty array.

02:40.800 --> 02:43.330
This eventually will be the item that we push.

02:43.500 --> 02:48.530
Once we have finished doing our box Blar right.

02:48.810 --> 02:53.650
So did it drop off my quote.

02:54.620 --> 02:56.020
So.

02:56.880 --> 02:58.470
Oh because I have infinite loop here.

02:58.490 --> 03:01.760
Well y is less than average length of two.

03:01.790 --> 03:07.680
So next we have to get we say OK we've set up our Y to handle that.

03:07.710 --> 03:14.700
Now we need set up R X right so that x equals zero while X is less than the image.

03:14.700 --> 03:17.380
And now we're passing in the y value.

03:17.980 --> 03:21.990
Not length because there is an array as well.

03:22.070 --> 03:26.130
Mine is to one to not want to ignore that here.

03:26.130 --> 03:32.050
So then X-post was all right.

03:32.520 --> 03:38.940
So now that we're over x and y coordinate we have to find the average value for that and that takes

03:38.940 --> 03:44.180
two more nested loops because we've essentially eliminated some of the edges and so we're going to have

03:44.190 --> 03:47.360
here is some are initialized to zero.

03:47.400 --> 03:49.160
And then we're going to count.

03:50.010 --> 03:54.430
And this will be what we are going to use for our divider.

03:54.600 --> 03:56.890
And now we're going to have two more nested loops.

03:56.890 --> 04:00.070
Yeah I know it's quite quite intricate.

04:00.130 --> 04:03.200
So I say let a little why.

04:03.420 --> 04:13.190
Because we're initialized and there a is less than Y plus 3 A plus plus R.

04:13.410 --> 04:22.440
So that plus streak again is handling the the edge cases and then we're going to do nested B.

04:22.440 --> 04:29.280
This is essentially really the way I like to look at it as a one plus why one sort of thing.

04:29.700 --> 04:31.580
So it's not handling the edge cases.

04:31.590 --> 04:32.360
Excuse me.

04:32.350 --> 04:34.150
So those plus threes.

04:34.170 --> 04:39.060
Remember we're dealing with a 9 by 9 grade and that's what those averages are for each one if it just

04:39.060 --> 04:41.900
happens we only have 1 9 by 9 grid here.

04:42.090 --> 04:46.920
But if we had another row of data we'd have won 9 by 9.

04:46.980 --> 04:51.390
Second 9 by 9 and then we'd have two values in our array.

04:51.390 --> 04:52.650
And that's what we're handling here.

04:52.650 --> 05:00.960
So now we're going ahead and do the B which would be essentially X to an hour and say while B is less

05:00.960 --> 05:07.580
than X plus 3 because again we're dealing with that 9 by nine grid and increment by 1.

05:07.770 --> 05:08.480
All right.

05:08.520 --> 05:10.610
Now that we've done that we're almost there.

05:10.670 --> 05:20.010
Now we just have to add the sum together and this is going to be the image of index of index B and then

05:20.010 --> 05:30.450
we're going to increment count by 1 and then we go ahead and we can go ahead and just outside of the

05:30.450 --> 05:31.820
for loop right here.

05:32.280 --> 05:33.480
We can say line

05:37.980 --> 05:43.410
push and what are we pushing them over pushing math thought floor because remember we were going to

05:43.620 --> 05:44.210
divide.

05:44.220 --> 05:46.180
Here you want it to be an integer.

05:46.440 --> 05:53.150
Matt the floor the sum count and line is the value that we've created here.

05:53.280 --> 06:02.120
And once we've iterated through each of these iterations what we're going to do right before while still

06:02.120 --> 06:04.870
within this loop is we are going to take a rest.

06:04.880 --> 06:11.760
And we're going to push that line to it and we're done us quite a bit going on here.

06:11.780 --> 06:14.280
The first thing is to handle the edge cases.

06:14.330 --> 06:21.750
This is for the second thing is to to create some variables to keep track of your count.

06:21.750 --> 06:29.250
The third thing is to write third and fourth I guess is to essentially do that nine by nine area here

06:29.700 --> 06:34.300
which is our objective and then push that value and finally and when you're done with your nine by nines

06:34.310 --> 06:40.410
here you are finally going to push the line or so quite a bit of logic to get accomplished.

06:40.410 --> 06:42.700
This was a very hard one for me.

06:43.170 --> 06:44.870
If you have a better solution please do share.

06:44.880 --> 06:45.990
But this is how I did it.
