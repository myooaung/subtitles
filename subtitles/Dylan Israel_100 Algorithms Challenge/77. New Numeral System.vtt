WEBVTT

00:00.510 --> 00:02.960
All right welcome back to New numeral system.

00:02.970 --> 00:12.570
So we're going to be taking in a letter as our and put your expected return back this array of characters

00:12.570 --> 00:15.400
with the plus value between them.

00:15.740 --> 00:21.930
Now that's that's what our objective here is based off based off our letter.

00:21.990 --> 00:29.010
Go ahead and find the value from a to that letter and then come in for both sides then B then f c then

00:29.010 --> 00:29.390
the.

00:29.490 --> 00:32.930
And then finally D and D and then stop and return that array.

00:33.150 --> 00:38.950
The two hands I have for you is the string method char code.

00:38.970 --> 00:43.180
And then the static method here string from Char code.

00:43.380 --> 00:45.460
Let's go ahead and jump into it.

00:45.480 --> 00:50.190
All right so the way that I solve this and you're going to need to have a little bit of insight into

00:50.190 --> 00:53.460
how ascii values work and what that's really what this is.

00:53.490 --> 00:59.850
This algorithm specifically is about getting familiar with strings and manipulating them as if they

00:59.850 --> 01:01.050
were integers.

01:01.050 --> 01:05.470
So when I saw this was I created a array because we have to store our values very.

01:05.480 --> 01:09.630
I just called these numerals and this is going to be a string.

01:09.720 --> 01:15.890
And when you initialize it to an empty array and at the end here we're going to return nine numerals.

01:18.220 --> 01:18.900
Cool.

01:19.000 --> 01:26.650
So I'm going to create a well I called the start char count value which is going to be initialized to

01:26.650 --> 01:34.640
65 and you might be saying and why read initialising star Tarth count 265.

01:34.750 --> 01:42.150
Well mainly because that is what is in the ask in the in the char count value in the ascii diary.

01:42.190 --> 01:51.730
So we can start there and we're going to increment upwards and downwards on each iteration until our

01:51.730 --> 01:59.360
char count is not less than our and char count so or is less than r in Arkansas.

01:59.440 --> 02:08.980
And Char count and we're going initialized and char count equal to the number we're passing in char

02:09.040 --> 02:11.770
code at and then index 0.

02:11.770 --> 02:12.180
All right.

02:12.370 --> 02:16.340
So that's essentially taking the first character and this is only one character in here.

02:16.360 --> 02:17.000
It's a string.

02:17.050 --> 02:21.430
And then we call it number meaning that char code value out of out of it.

02:21.430 --> 02:24.910
Now why we have that we have essentially all our set of.

02:24.940 --> 02:29.560
Now it's a matter of coming up with the right while loop because we don't know how many iterations we're

02:29.560 --> 02:36.890
going to have sorgen say Wall start char count is less than or equal to because remember we had D and

02:36.970 --> 02:46.450
D-plus see and that what that's y is less than or equal to and char count is our logic there.

02:46.450 --> 02:49.960
And now all we need to do is go ahead and create our numeral

02:53.140 --> 02:57.090
to push to it and we're going to just feel like we're back to X.

02:57.200 --> 02:59.350
You don't have to store this in a variable.

02:59.340 --> 03:01.440
I found a little bit easier to read.

03:01.660 --> 03:10.060
So where just a string dot from charcoal that's going to actually give us the value the that's going

03:10.060 --> 03:12.340
to take the number and give us the string.

03:12.340 --> 03:18.670
So if a 65 and we pass and sixty five here and what we're going to pass in is to start our count it's

03:18.670 --> 03:22.100
going to go ahead and give us a value there.

03:22.810 --> 03:28.590
And then we're going to put a space then plus we can do this one more time with dosimeter.

03:28.600 --> 03:32.640
So now we're going to do the opposite end of things.

03:33.380 --> 03:35.770
So you know all over the place.

03:36.430 --> 03:37.610
We're going to the opposite.

03:37.660 --> 03:41.250
We're going to get the string from charcoal.

03:41.280 --> 03:46.020
Except now it's going to be the end shark out at this point.

03:46.030 --> 03:51.520
All we have to do is define.

03:51.630 --> 03:52.270
All right.

03:52.360 --> 03:53.390
They just behind.

03:53.410 --> 03:53.720
All right.

03:53.730 --> 04:03.570
At this point we're just going to push two new our new Merrell two numerals and then we just have to

04:03.570 --> 04:07.020
Inkerman and decrement our items properly so a for loop break.

04:07.020 --> 04:13.550
So each iteration we want to increase or start Chaar count and each iteration we want to decrement our

04:13.560 --> 04:14.150
other Charka.

04:14.150 --> 04:20.060
And then you see we have our values here really in this wasn't too bad of one.

04:20.100 --> 04:26.910
The hard part for me was just going in and sort of becoming more familiar with Char code at and from

04:26.910 --> 04:31.720
Charka things I knew existed but I haven't quite I haven't used in quite some time.

04:31.770 --> 04:34.800
So it's good to get that little bit of a refresher.

04:35.160 --> 04:36.030
Those Phrynichus the.
