WEBVTT

00:00.950 --> 00:05.600
Want to take a second do a very brief introduction to some of the major parts of typescript that we'll

00:05.600 --> 00:08.760
be using some of you may not be familiar with typescript.

00:08.900 --> 00:14.630
It may be very cautious and maybe you know not you just want it maybe.

00:14.750 --> 00:20.220
I don't know why did we use sidetrip why not regular javascript Well don't worry if you know javascript

00:20.220 --> 00:23.360
you are going to be completely fine with this course and if you don't you're going to learn quite a

00:23.360 --> 00:23.900
bit.

00:23.930 --> 00:26.240
So typescript is a superset of javascript.

00:26.240 --> 00:29.870
Well that basically means it has additional functionality so we can do everything.

00:29.870 --> 00:32.720
Javascript is the here we have a regular job search function.

00:32.960 --> 00:38.870
But if we wanted to use some aspects of typescript such as types we can.

00:38.870 --> 00:43.850
So the things that you're going to see types assigned to the most see our function.

00:43.850 --> 00:45.310
An example here.

00:45.380 --> 00:51.650
Right now we're assuming that these are no 1 and 2 but we can actually tell typescript take make this

00:51.650 --> 00:55.030
a number and treat this as a number.

00:55.130 --> 00:59.900
And when we do that we get a lot of additional functionality where now if we do no one does it you see

00:59.900 --> 01:05.390
we're going to pull up the number you know Intellisense we can't say hey let's say we want to split

01:05.390 --> 01:06.890
it.

01:06.890 --> 01:11.470
We're going to get this error like you cannot split on type number for instance right.

01:11.510 --> 01:19.700
So it gives us the ability to pass types to our job primers those or turn types right.

01:19.790 --> 01:24.350
So let's say we put a return type string here which is a colon at the end of the function is to say

01:24.400 --> 01:27.800
oh this is a number because we're adding two numbers is not a string.

01:27.830 --> 01:33.320
So you're going to these return types so this is all going to be set up for you and the Get have people

01:33.530 --> 01:39.620
where we're going to have all of the parameters and the return types types a preassigned because I think

01:39.620 --> 01:40.860
it makes more readable code.

01:40.970 --> 01:42.770
But as you're working through.

01:43.240 --> 01:46.470
And you want to work you want to learn a little bit.

01:46.490 --> 01:51.150
Let's go ahead and do a very brief introduction of you know array data types for answers.

01:51.190 --> 01:58.610
So if it costs you an example and there's a lot to cover in typescript if you're interested the following

01:58.610 --> 02:04.070
resource will be a link to about a one hour video going over pretty much everything you would ever need

02:04.070 --> 02:09.440
to know about type 2 but you can assign types to variables exactly like how we did above.

02:09.500 --> 02:14.570
And so there is the any type which essentially means it's like hey we're going to put any data type

02:14.570 --> 02:19.490
in here like you know we could put strings of numbers we could but Boyens

02:22.950 --> 02:24.340
does not like that.

02:24.430 --> 02:28.060
Oh it likes Matyas Blunstone me use double quotes.

02:28.210 --> 02:33.970
But we can also go ahead and say hey this is a number type and we're expecting everything in here to

02:33.970 --> 02:37.690
be a numbers of 0 1 2.

02:37.690 --> 02:43.950
You can also do nested arrays like so or now we just let's go ahead and just another one on there and

02:43.970 --> 02:47.830
we do one comma three comma two.

02:47.920 --> 02:49.860
And now we have a double nested array.

02:49.900 --> 02:55.360
That's really the extent of 99 percent of what you're going to need to know about typescript and this

02:55.360 --> 02:57.970
course is going to make our intelligence smarter.

02:57.970 --> 03:01.320
It's going to make our code much more readable.

03:01.410 --> 03:05.700
That's going to make everything a little bit more understandable.

03:05.710 --> 03:08.180
So let's go ahead and jump into the next section.
