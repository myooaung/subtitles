WEBVTT

00:00.690 --> 00:01.290
All right.

00:01.290 --> 00:07.860
So what we have here for is tandem repeat is we're trying to find out if we cut our string down the

00:07.860 --> 00:14.940
middle if both sides are essentially going to be the same if we cut them in the middle and we can get

00:14.940 --> 00:15.800
them back together.

00:15.930 --> 00:18.240
Will it make our original work.

00:18.260 --> 00:20.610
That's what is tandem repeat is about here.

00:20.730 --> 00:22.080
You'll see here with QQQ.

00:22.080 --> 00:26.130
It won't because it's odd and you can't have all values passing.

00:26.270 --> 00:31.490
And for here if we cut it down it's also odd it wouldn't be the same no matter how we slice it.

00:31.510 --> 00:38.400
But tandem in tandem if we cut tandem we get tandem in tandem and that would the both halves would equal

00:38.400 --> 00:39.060
each other.

00:39.240 --> 00:40.740
And that's what we're trying to do here.

00:40.740 --> 00:45.410
So my hat for you is how you slice this the only method the rest of it just pretty much pure logic.

00:45.420 --> 00:48.060
Let's go ahead and jump into it.

00:48.090 --> 00:54.210
All right so the way that I solved this was I essentially got the length of the input string and then

00:54.210 --> 01:01.480
I sliced off the first half I sliced off the second half and I made a comparison here and like so.

01:01.650 --> 01:09.480
So we're used to a great constant and we'll just call this word Liath.

01:09.890 --> 01:11.660
Nothing too crazy.

01:11.680 --> 01:13.930
Course is equal to input string.

01:14.220 --> 01:14.980
Excellent.

01:15.030 --> 01:19.240
Now that we have that ladies we're going to do a statement here.

01:19.250 --> 01:27.450
So if word length modulo two is equal equal to zero meaning that there is an even amount of letters

01:27.450 --> 01:33.450
here because that's when we want to do our check if it doesn't equal 0 we go ahead and just return false

01:33.450 --> 01:38.640
because we already know that you can't cut anything a letter in half right.

01:38.640 --> 01:42.660
So all those odd values are going to be returning false instantly.

01:42.660 --> 01:47.210
Now here we're doing our check where we're going to get the first half of this first half.

01:47.400 --> 01:53.690
And this is going to be equal to the input string slice on the zero index.

01:53.880 --> 01:58.040
And then the word length divided by two.

01:58.050 --> 02:03.880
Now in theory we'll refactor this ever so slightly so we're going to do the second half now.

02:06.680 --> 02:17.080
And we're so equal to input string dot slice and we're going to do the first half here where it's going

02:17.080 --> 02:23.680
to be word line divided by two the word length for the entire world.

02:24.280 --> 02:28.970
So one thing that we could do if we wanted we could get half the length here.

02:29.140 --> 02:30.550
I think this is fine.

02:30.600 --> 02:34.840
Normally I would be as crazy as it sounds because it's repeated the logic.

02:34.920 --> 02:39.830
Well we have two and one from the other but we have unit test in the background it's not going to matter.

02:39.870 --> 02:41.220
But all we're going to do now anyhow.

02:41.230 --> 02:42.790
Now that we have the first half a second half

02:46.250 --> 02:47.600
we're going to make a comparison.

02:47.600 --> 02:53.090
We want to see if they in fact are equal if they are then they can go in tandem they do go in tandem

02:53.870 --> 02:55.630
four are even variables.

02:55.700 --> 02:58.250
That's it at the end of the are a pretty quick one.
