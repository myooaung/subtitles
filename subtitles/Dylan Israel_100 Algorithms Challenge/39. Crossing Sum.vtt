WEBVTT

00:00.590 --> 00:07.350
All right so crossing some is a fun multi-dimensional array type algorithm where we are passing in a

00:07.350 --> 00:14.220
two dimensional matrix and we have a three Browder's first matrix then a column value and a row value.

00:14.340 --> 00:19.680
And we want to do is find out what the sum of the Cross area is.

00:19.680 --> 00:23.640
So in our case two plus two plus two plus two our value 1.

00:23.670 --> 00:24.810
This is row 1 right.

00:24.810 --> 00:28.980
So we're getting all those shoes and then B we get one plus three right.

00:28.980 --> 00:31.200
One we skip two because I already had it.

00:31.250 --> 00:36.080
Now we get the three value on the index three.

00:36.150 --> 00:40.950
So we are having a two dimensional rate which we're essentially going up and across and we're getting

00:40.950 --> 00:42.330
those values and them together.

00:42.330 --> 00:48.450
The only hint I have for you or them can tell you to look at it maybe as like a graph is that I will

00:48.450 --> 00:52.220
be using the reduce method must go and jump into it.

00:52.230 --> 00:56.200
All right so the way that I solve this is once I understood that we're basically just trying to add

00:56.200 --> 00:59.970
a row and column values became very very soon very simple.

00:59.970 --> 01:06.870
The only other thing you have to kind of understand is how to omit a certain number.

01:07.410 --> 01:12.030
So with the call of value we can actually just immediately reduce that to a single value and that's

01:12.030 --> 01:14.490
what I did to create this contest year.

01:14.550 --> 01:22.230
We're in a sick column column total to be equal to our matrix and then on the column we're passing in

01:22.290 --> 01:26.970
a do want to reduce that to a single number.

01:27.130 --> 01:36.920
We're just going to call this a and b and say return a plus b that will give us our call total.

01:36.920 --> 01:41.060
And then we're going to create a total I wrote total here and this is going to be a lead because we're

01:41.060 --> 01:46.680
going to iterate through our row and we're modifying we're initialized a desire here.

01:46.850 --> 01:51.910
And then at the end what we want to happen is we want to call them told we want to set it equal to zero

01:51.920 --> 01:52.310
total.

01:52.310 --> 01:56.540
And that will give us our Told total My guess which is kind of a weird way of putting it but it will

01:56.540 --> 01:58.760
give us our total as I'm trying to say.

01:58.760 --> 02:05.150
So in our FOR loop here which we're now iterating through the matrix so we're going to iterate through

02:05.570 --> 02:10.670
each row of the matrix and get the column value.

02:10.850 --> 02:15.090
So we're in say let equal to zero.

02:16.080 --> 02:23.830
I's less than the matrix got LN plus plus.

02:24.020 --> 02:30.620
And here I just is a simple ternary to check if our current index value that we're checking was equal

02:30.620 --> 02:35.900
to AA if it was we're going to just return zero there because we've already counted that number if not

02:35.900 --> 02:36.950
we're just going to add the value.

02:36.950 --> 02:46.900
So we just say rotatable plus equals to do a check with the returner if I's not equal to a sweet thing

02:46.910 --> 02:49.450
go ahead and just return matrix.

02:49.850 --> 02:51.150
I of be.

02:51.200 --> 02:53.180
Because we're on the same column every time.

02:53.210 --> 02:54.220
So I have B.

02:54.410 --> 03:01.280
And then here we'll just go ahead and say if you are to turn 0 because that means we have that value

03:01.280 --> 03:03.020
and we don't want to count it twice.

03:03.020 --> 03:10.000
So really this is just the example of trying to be able to see if you can go through a chart in a x

03:10.010 --> 03:12.830
and y plane using a nested matrix.
