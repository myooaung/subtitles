WEBVTT

00:00.510 --> 00:03.130
Yes welcome to the 100 algorithm challenge.

00:03.130 --> 00:08.770
So the way this course is going to work is you're going to have a markdown file similar to this and

00:08.770 --> 00:13.450
this is just one of the hundred examples and we're going to be having an objective right.

00:13.510 --> 00:15.310
We're going to have some examples for you.

00:15.310 --> 00:20.580
We're going to have some hints for you the hints are really just hey this is how I solve this algorithm.

00:20.650 --> 00:26.820
You know me in terms of the method because part of this is I want you to get more familiar with what

00:27.070 --> 00:31.210
javascript and typescript as well just to get better at solving algorithms.

00:31.240 --> 00:34.570
So you're going to have your algorithm some examples and maybe some hints.

00:34.570 --> 00:37.930
Not always but sometimes as well as a little additional data.

00:37.930 --> 00:43.210
Now the way I see the course going is you go and you try and solve this on your own and if you do a

00:43.240 --> 00:49.240
great if not you can fall back on my solution and start to get those sort of juices flowing.

00:49.270 --> 00:55.380
And if you if you do you can also make comparisons to the original to my original solution say does

00:55.530 --> 00:57.790
in the same way or solve in a better way.

00:57.790 --> 01:01.150
And if you do please share those in the comments below.

01:02.390 --> 01:07.640
Now we're going to have all hundred algorithms in a get hub Ribault where you can download them pull

01:07.640 --> 01:13.610
them down and all they're going to have are these read me files as well as some tests that are going

01:13.610 --> 01:17.930
to be available for you to run against in terms of the function.

01:17.930 --> 01:23.330
So you have the names you have the expected inputs the expected outputs if you're not familiar with

01:23.330 --> 01:28.160
typescript don't worry about it and do a very brief section discussing typescript just linking to some

01:28.160 --> 01:31.980
courses I've I've made on youtube going over an additional detail.

01:32.060 --> 01:37.640
Now one thing I would recommend if you're getting going is if you want to see these cons. boxes go ahead

01:37.670 --> 01:41.000
and install a extension called Quokka.

01:41.000 --> 01:44.990
If you go to the extensions it's going to look like this.

01:45.050 --> 01:48.070
I'm not sure why this you know this L is there I go.

01:48.150 --> 01:48.560
Hey.

01:48.710 --> 01:50.120
So it's really like this.

01:50.170 --> 01:51.250
L Khokha.

01:51.390 --> 01:53.100
Yes go and install that.

01:53.300 --> 01:59.640
And if you press one and you go start quoque on this file you're going the node installed by the way.

01:59.810 --> 02:05.720
If you don't have that already but you'll see here that now this should be saying undefine and I actually

02:05.720 --> 02:06.200
printed out.

02:06.210 --> 02:09.740
So if we wanted to you know just got this out real quick.

02:09.890 --> 02:16.130
Hey it was two plus three years he'll give our output right there so we can check quickly against it.
