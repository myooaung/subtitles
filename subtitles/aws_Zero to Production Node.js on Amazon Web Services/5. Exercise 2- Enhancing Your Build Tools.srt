1
00:00:03,974 --> 00:00:07,517
Now it's time for the next exercise portion of our morning,

2
00:00:07,517 --> 00:00:14,321
where you fix more stuff in the example code project.

3
00:00:14,321 --> 00:00:17,142
So to correspond with exercise #2,

4
00:00:17,142 --> 00:00:26,354
we've got some more GitHub issues for you to take a look at.

5
00:00:26,354 --> 00:00:30,919
They are tagged with exercise2.

6
00:00:30,919 --> 00:00:37,055
And the first one is a bit that probably needs to be implemented

7
00:00:37,055 --> 00:00:40,133
before we take this thing fully to production,

8
00:00:40,133 --> 00:00:45,414
which is a task which will --- or a task to modify our collect_static task,

9
00:00:45,414 --> 00:00:46,997
which we already have,

10
00:00:46,997 --> 00:00:51,609
in addition to running our application JavaScript through

11
00:00:51,609 --> 00:00:55,812
Browserify to then run it through Uglify as well.

12
00:00:55,812 --> 00:01:01,408
So compressing the JavaScript source into a minified JavaScript source file

13
00:01:01,408 --> 00:01:05,309
that we can use in production and putting it into the public directory just

14
00:01:05,309 --> 00:01:09,673
like we do with the rest of the collect_static command.

15
00:01:09,673 --> 00:01:13,775
So spoiler alert, there is a Grunt plugin called Uglify,

16
00:01:13,775 --> 00:01:16,922
which is probably the place to start barking up if you

17
00:01:16,922 --> 00:01:19,849
want to take a crack at that task.

18
00:01:19,849 --> 00:01:22,077
So that is number 1.

19
00:01:22,077 --> 00:01:27,043
For bonus point actually on this task, I didn't actually call it out here,

20
00:01:27,043 --> 00:01:31,241
but if you look in the EJS template, which renders our TodoMVC page,

21
00:01:31,241 --> 00:01:34,830
there's a little bit of conditional logic in there

22
00:01:34,830 --> 00:01:37,198
that inserts a minified script,

23
00:01:37,198 --> 00:01:42,000
or like a script tag to the minified version of like app.

24
00:01:42,000 --> 00:01:44,630
css if we're in the production environment.

25
00:01:44,630 --> 00:01:46,552
But the JavaScript is just app.

26
00:01:46,552 --> 00:01:47,514
js every time,

27
00:01:47,514 --> 00:01:53,261
so maybe we also want to in the production environment include the minified.

28
00:01:53,261 --> 00:01:59,551
js file rather than fully inflated one with the source maps and everything.

29
00:01:59,551 --> 00:02:03,966
So that is another bit you might want to take care

30
00:02:03,966 --> 00:02:05,973
of during this particular issue.

31
00:02:05,973 --> 00:02:12,268
The other one that I put out there was to add a npm start script

32
00:02:12,268 --> 00:02:16,681
that is dedicated just for running migrations.

33
00:02:16,681 --> 00:02:21,099
I think you'll probably notice something in the package.

34
00:02:21,099 --> 00:02:23,749
json that already does run the migrations,

35
00:02:23,749 --> 00:02:28,634
but poststart, which is what it's currently assigned to,

36
00:02:28,634 --> 00:02:30,502
can do lots of other things.

37
00:02:30,502 --> 00:02:35,570
So it might be nice to have a npm script which just runs

38
00:02:35,570 --> 00:02:40,131
migrations using the Sequelize command line tool.

39
00:02:40,131 --> 00:02:42,737
So for that you'll have to learn a slightly different

40
00:02:42,737 --> 00:02:46,367
incantation to actually run that and make it work.

41
00:02:46,367 --> 00:02:50,987
So adding a special purpose migration command to our npm

42
00:02:50,987 --> 00:02:55,304
scripts will be another thing you could work on.

43
00:02:55,304 --> 00:02:56,951
And those are the two I've got,

44
00:02:56,951 --> 00:03:01,428
but I'm getting like unsolicated pull requests for all kinds of stuff,

45
00:03:01,428 --> 00:03:05,000
which is awesome. I'm very stoked at what you guys are doing with this.

