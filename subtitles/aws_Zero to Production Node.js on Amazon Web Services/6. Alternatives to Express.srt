1
00:00:04,030 --> 00:00:07,409
What we are going to do first is actually look at a few

2
00:00:07,409 --> 00:00:10,036
things that you could use other than Express.

3
00:00:10,036 --> 00:00:13,098
And over the next couple days, like as we introduce technology in this stack,

4
00:00:13,098 --> 00:00:15,914
I'll try to talk about some of the other choices that are out there because,

5
00:00:15,914 --> 00:00:16,194
again,

6
00:00:16,194 --> 00:00:19,437
I think one of the strengths of the Node ecosystem is

7
00:00:19,437 --> 00:00:22,331
there are a million ways to do everything,

8
00:00:22,331 --> 00:00:25,803
while at the same time a weakness of the Node ecosystem is

9
00:00:25,803 --> 00:00:27,660
that there are million ways to do everything.

10
00:00:27,660 --> 00:00:32,062
So, I will try to cover some of the other things that you can use.

11
00:00:32,062 --> 00:00:37,635
Hapi is another framework which is focused on creating server-side APIs,

12
00:00:37,635 --> 00:00:42,255
although it can do server-side HTML rendering just

13
00:00:42,255 --> 00:00:46,237
like any other framework out there.

14
00:00:46,237 --> 00:00:51,720
It's used in a lot of popular Node web applications and has a lot

15
00:00:51,720 --> 00:00:54,633
of --- has a lot more features than Express,

16
00:00:54,633 --> 00:00:57,008
a lot more behavior out of the box,

17
00:00:57,008 --> 00:01:01,263
which can a be a good or bad thing depending on how you look at it,

18
00:01:01,263 --> 00:01:05,129
but it's another mature robust framework out there that's

19
00:01:05,129 --> 00:01:07,037
definitely worth your consideration.

20
00:01:07,037 --> 00:01:11,513
On the sort of the furthest end of spectrum from

21
00:01:11,513 --> 00:01:13,786
Express is a framework called Sails,

22
00:01:13,786 --> 00:01:17,569
which strives to be sort of a full stack framework in

23
00:01:17,569 --> 00:01:19,553
the tradition of Ruby on Rails.

24
00:01:19,553 --> 00:01:25,073
So it provides its own ORM, its own configuration system,

25
00:01:25,073 --> 00:01:28,930
and sort of tries to pack in all the things that you probably need for

26
00:01:28,930 --> 00:01:32,947
a dynamic web application into the same package.

27
00:01:32,947 --> 00:01:35,380
And it's pretty okay.

28
00:01:35,380 --> 00:01:37,987
I know a few people who have used it.

29
00:01:37,987 --> 00:01:41,434
And if more of a full stack framework appeals to you,

30
00:01:41,434 --> 00:01:43,209
it's definitely worth checking out.

31
00:01:43,209 --> 00:01:45,208
The caveat that I'll put out there,

32
00:01:45,208 --> 00:01:49,174
which is again in my old age the way I choose software is

33
00:01:49,174 --> 00:01:51,530
essentially on like how well it's documented,

34
00:01:51,530 --> 00:01:54,038
like how much effort do I have to expend to do something

35
00:01:54,038 --> 00:01:57,065
useful with this piece of software.

36
00:01:57,065 --> 00:02:00,326
And Sails is documented okay,

37
00:02:00,326 --> 00:02:03,887
but the thing that's kind of a bummer is like you

38
00:02:03,887 --> 00:02:05,291
don't find a lot resources for it.

39
00:02:05,291 --> 00:02:08,141
Like there aren't a lot of people writing Sails tutorials or

40
00:02:08,141 --> 00:02:10,325
sample applications and that sort of thing,

41
00:02:10,325 --> 00:02:16,288
so you'll find yourself in the wilderness quite a lot when you're using Sails.

42
00:02:16,288 --> 00:02:18,169
The other one that I would throw out there,

43
00:02:18,169 --> 00:02:21,915
which is sort of a forward-looking framework built by some of the

44
00:02:21,915 --> 00:02:25,046
same people who built Express is called Koa.

45
00:02:25,046 --> 00:02:28,872
And Koa had in the past created a generator-based

46
00:02:28,872 --> 00:02:32,774
API for a serving HTTP requests.

47
00:02:32,774 --> 00:02:39,912
They're now moving towards like fully embracing Promises and the async await

48
00:02:39,912 --> 00:02:44,696
syntax that's emerging in newer versions of JavaScript,

49
00:02:44,696 --> 00:02:48,444
but it's definitely a bleeding edge type thing.

50
00:02:48,444 --> 00:02:51,470
And again, because I'm a crusty old man like that,

51
00:02:51,470 --> 00:02:54,609
that bleeding edge stuff gets old for me pretty fast,

52
00:02:54,609 --> 00:03:01,000
but it's definitely a cool one that's worth monitoring that could definitely pick up steam, so.

