WEBVTT
1
00:00:03.819 --> 00:00:07.812
Now we're actually ready to start creating the Elastic Beanstalk application,

2
00:00:07.812 --> 00:00:13.386
and for that I'm actually going to go back to the command line.

3
00:00:13.386 --> 00:00:18.023
And for extra, to kind of show you what this looks like end to end,

4
00:00:18.023 --> 00:00:21.666
I'm actually going to clone this project fresh to show you exactly

5
00:00:21.666 --> 00:00:26.789
like what would happen if like you were executing this as we usually

6
00:00:26.789 --> 00:00:29.185
do like on a continuous integration server.

7
00:00:29.185 --> 00:00:32.960
Like these are the steps that would happen to actually deploy this application

8
00:00:32.960 --> 00:00:36.264
with the exception of actually initializing the application.

9
00:00:36.264 --> 00:00:43.173
So, I'm going to go --- oops.

10
00:00:43.173 --> 00:01:00.931
(Working) As you can see, I've practiced this once before, once or twice.

11
00:01:00.931 --> 00:01:04.379
Alright, so I'm pulling down the application,

12
00:01:04.379 --> 00:01:08.309
and when I'm ready to actually start deploying this thing,

13
00:01:08.309 --> 00:01:13.938
the first thing I'm going to do is I'm going to cd,

14
00:01:13.938 --> 00:01:19.662
oops, into the application directory, and I'm going to type the command.

15
00:01:19.662 --> 00:01:20.889
Like at this point,

16
00:01:20.889 --> 00:01:25.867
I assume that you've installed the --- we have the AWS CLI installed,

17
00:01:25.867 --> 00:01:30.689
and when we do, that's going to put this eb command on our system path,

18
00:01:30.689 --> 00:01:35.533
and this is going to be the primary way in which we

19
00:01:35.533 --> 00:01:38.181
interact with the Elastic Beanstalk service.

20
00:01:38.181 --> 00:01:43.504
So the first thing you're going to do is eb init,

21
00:01:43.504 --> 00:01:48.961
and that is going to prompt you for a region in which you

22
00:01:48.961 --> 00:01:51.239
would like to deploy your application.

23
00:01:51.239 --> 00:01:56.415
And in this case, I'll go with US East Northern Virginia.

24
00:01:56.415 --> 00:01:59.313
It doesn't it really matter.

25
00:01:59.313 --> 00:02:05.910
And then you can --- if you already have an existing Elastic Beanstalk

26
00:02:05.910 --> 00:02:09.511
application that you're looking to associate this project with,

27
00:02:09.511 --> 00:02:11.857
you can choose that; otherwise,

28
00:02:11.857 --> 00:02:16.147
you can create a new application which we're going to do here.

29
00:02:16.147 --> 00:02:21.001
Alright, and this one we're going to call todomvc-plusplus,

30
00:02:21.001 --> 00:02:24.584
which is a good enough default name.

31
00:02:24.584 --> 00:02:29.522
And then it's going to try to detect the type of

32
00:02:29.522 --> 00:02:30.815
application you're looking to deploy.

33
00:02:30.815 --> 00:02:32.889
So for Elastic Beanstalk,

34
00:02:32.889 --> 00:02:37.037
it supports certain types of applications for deployment.

35
00:02:37.037 --> 00:02:37.368
Node.

36
00:02:37.368 --> 00:02:39.023
js is one of them.

37
00:02:39.023 --> 00:02:40.678
I'm going to say yes.

38
00:02:40.678 --> 00:02:45.166
And then it'll ask you if you want to set up SSH for your instances,

39
00:02:45.166 --> 00:02:51.059
which will allow you to associate the public key on your laptop with

40
00:02:51.059 --> 00:02:53.756
your instances so you can actually SSH into them.

41
00:02:53.756 --> 00:02:55.935
You can totally do that if you would like.

42
00:02:55.935 --> 00:03:01.958
For demonstration purposes, I'm going to say no, and now we're all set up.

43
00:03:01.958 --> 00:03:06.695
The one step that didn't happen for me, because I've already done this,

44
00:03:06.695 --> 00:03:12.563
is I was not prompted for my AWS access key and secret.

45
00:03:12.563 --> 00:03:14.956
So those credentials that you downloaded from the console before,

46
00:03:14.956 --> 00:03:21.374
you'll be prompted to enter those in during the setup process when do eb init.

47
00:03:21.374 --> 00:03:25.912
Alright, so now I have my application created,

48
00:03:25.912 --> 00:03:29.821
and now I need to create an environment,

49
00:03:29.821 --> 00:03:35.382
and this is actually going to create EC2 instances that will run my application.

50
00:03:35.382 --> 00:03:42.201
So to do that, I'm just going to say eb create,

51
00:03:42.201 --> 00:03:51.360
and it's going to prompt me for an environment name.

52
00:03:51.360 --> 00:03:54.745
The environment name is generated by default.

53
00:03:54.745 --> 00:03:58.059
It's just the name of your application -dev.

54
00:03:58.059 --> 00:03:59.875
You call it whatever you want,

55
00:03:59.875 --> 00:04:06.067
but I'll --- maybe I'll just call it todomvc and not

56
00:04:06.067 --> 00:04:12.351
associate it with an environment.

57
00:04:12.351 --> 00:04:15.054
And then you can enter a CNAME prefix,

58
00:04:15.054 --> 00:04:20.689
which is going to be like the public URL for your Elastic Load Balancer,

59
00:04:20.689 --> 00:04:25.690
which will send traffic to your actual Node application.

60
00:04:25.690 --> 00:04:29.689
Todomvc would be fine for that.

61
00:04:29.689 --> 00:04:38.133
For the load balancer, the classic configuration is going to be fine.

62
00:04:38.133 --> 00:04:41.099
You can do either one.

63
00:04:41.099 --> 00:04:46.437
The options are slightly different based on the region.

64
00:04:46.437 --> 00:04:51.694
If you did Oregon, like I think there's a different default, for instance.

65
00:04:51.694 --> 00:04:52.063
So,

66
00:04:52.063 --> 00:04:55.751
now what is happening is something that is actually ultimately

67
00:04:55.751 --> 00:04:59.370
going to fail because our application needs a little bit more

68
00:04:59.370 --> 00:05:01.886
configuration before it'll actually run.

69
00:05:01.886 --> 00:05:05.856
But what's going to happen is that Elastic Beanstalk is

70
00:05:05.856 --> 00:05:09.498
going to provision an environment that we can administer

71
00:05:09.498 --> 00:05:12.712
through the admin interface.

72
00:05:12.712 --> 00:05:18.047
It's going to zip up the current contents of our application directory,

73
00:05:18.047 --> 00:05:21.012
it's going to create a zip file of that,

74
00:05:21.012 --> 00:05:23.910
it's going to upload that archive to S3,

75
00:05:23.910 --> 00:05:29.083
and then that archive is actually going to be deployed to the EC2 instances

76
00:05:29.083 --> 00:05:32.930
that are being created for Elastic Beanstalk right now.

77
00:05:32.930 --> 00:05:38.118
So this is going to take a little bit,

78
00:05:38.118 --> 00:05:41.292
but there's a little of information that we can already

79
00:05:41.292 --> 00:05:44.813
start to glean from the output here.

80
00:05:44.813 --> 00:05:49.310
It's creating a new environment for us.

81
00:05:49.310 --> 00:05:52.141
So it's already created our S3 bucket,

82
00:05:52.141 --> 00:05:58.788
and it has created a security group for our Elastic Load Balancer,

83
00:05:58.788 --> 00:06:04.519
which is not something we care about because we're actually

84
00:06:04.519 --> 00:06:08.155
more interested in the security group for the Elastic

85
00:06:08.155 --> 00:06:09.645
Beanstalk instances themselves,

86
00:06:09.645 --> 00:06:13.934
which we'll be able to get at the end of this process.

87
00:06:13.934 --> 00:06:15.243
So this does take a while,

88
00:06:15.243 --> 00:06:21.452
so this would be a good point if you wanted to continue along your journey.

89
00:06:21.452 --> 00:06:23.402
If you've already downloaded your credentials,

90
00:06:23.402 --> 00:06:26.564
going in to your application project directory,

91
00:06:26.564 --> 00:06:28.426
doing eb init,

92
00:06:28.426 --> 00:06:33.545
going through the motions of initializing your application project,

93
00:06:33.545 --> 00:06:40.820
and then doing an eb create to create an environment to

94
00:06:40.820 --> 00:06:44.465
actually deploy our application to.

95
00:06:44.465 --> 00:06:50.326
So, got the environment going, again this is going to take a little bit,

96
00:06:50.326 --> 00:06:55.748
but the thing that we would like to see get created is a security

97
00:06:55.748 --> 00:07:01.781
group for our actual Elastic Beanstalk instances.

98
00:07:01.781 --> 00:07:06.738
So, once we have that, then we can create the RDS instance,

99
00:07:06.738 --> 00:07:10.753
which is actually going to talk to --- that our

100
00:07:10.753 --> 00:07:17.684
instances are actually going to talk to,

101
00:07:17.684 --> 00:07:21.978
our EC2 instances.

102
00:07:21.978 --> 00:07:29.394
(Waiting) So, what did the 0 say to the 8?

103
00:07:29.394 --> 00:07:32.054
Anybody know this one?

104
00:07:32.054 --> 00:07:33.156
Nice belt.

105
00:07:33.156 --> 00:07:33.707
Yes!

106
00:07:33.707 --> 00:07:35.911
Be here all week.

107
00:07:35.911 --> 00:07:36.463
Alright,

108
00:07:36.463 --> 00:07:44.122
so now we can see that an actual EC2 instance has now

109
00:07:44.122 --> 00:07:47.749
been created with this identifier.

110
00:07:47.749 --> 00:07:50.072
By default we're only going to have the one instance created

111
00:07:50.072 --> 00:07:54.891
that we can deploy our application to.

112
00:07:54.891 --> 00:08:02.805
Alright, so we've got our Auto Scaling group created.

113
00:08:02.805 --> 00:08:09.576
The instance is being added to it.

114
00:08:09.576 --> 00:08:12.478
Chugging, chugging, chugging.

115
00:08:12.478 --> 00:08:13.716
So it says it's safe to Ctrl+C,

116
00:08:13.716 --> 00:08:16.109
but what would happen at this point if you did that?

117
00:08:16.109 --> 00:08:18.067
You'd have to start over, right?

118
00:08:18.067 --> 00:08:19.590
No, it would keep going.

119
00:08:19.590 --> 00:08:21.418
The logs are still being piped.

120
00:08:21.418 --> 00:08:25.914
Like if we Ctrl+C this, we could actually go into the console,

121
00:08:25.914 --> 00:08:27.868
which maybe we'll do right now.

122
00:08:27.868 --> 00:08:30.776
If we go to the Elastic Beanstalk console,

123
00:08:30.776 --> 00:08:39.866
we can see that the todomvc environment is gray because it's still initializing,

124
00:08:39.866 --> 00:08:54.065
but we could kind of view the logs and see what's happening there.

125
00:08:54.065 --> 00:08:59.000
So there's --- oh good, we do have our security group already. I must've missed that.

