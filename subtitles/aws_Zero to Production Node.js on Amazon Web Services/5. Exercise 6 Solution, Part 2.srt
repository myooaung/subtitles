1
00:00:03,807 --> 00:00:12,223
So that was the fix that we had submitted for completing that particular issue.

2
00:00:12,223 --> 00:00:14,360
And that was awesome.

3
00:00:14,360 --> 00:00:19,702
It looks like we might have some other ones here.

4
00:00:19,702 --> 00:00:25,268
So we have a slightly different one here.

5
00:00:25,268 --> 00:00:30,507
It looks like this was maybe not the theme piece,

6
00:00:30,507 --> 00:00:35,091
so we can actually do that together right now since I don't think we have

7
00:00:35,091 --> 00:00:38,692
a pull request for the theme challenge specifically.

8
00:00:38,692 --> 00:00:39,277
So,

9
00:00:39,277 --> 00:00:49,927
the other issue that we had open was the ability to change the

10
00:00:49,927 --> 00:00:59,007
current CSS class of the component --- let's see here,

11
00:00:59,007 --> 00:01:05,464
based on like some kind of selector, or radio button,

12
00:01:05,464 --> 00:01:08,994
or something that would indicate that we want to change

13
00:01:08,994 --> 00:01:12,400
like the current theme of the object.

14
00:01:12,400 --> 00:01:17,260
So, let's go ahead and implement that here together.

15
00:01:17,260 --> 00:01:25,056
So, at the end of the day what we want to do --- here is the todoapp section,

16
00:01:25,056 --> 00:01:28,910
which is the container for the entire interface.

17
00:01:28,910 --> 00:01:34,880
And if we look at our todo controller here,

18
00:01:34,880 --> 00:01:40,419
the element that we are binding to is this todoapp,

19
00:01:40,419 --> 00:01:44,420
which I'm sure many of you already figured out.

20
00:01:44,420 --> 00:01:48,775
Here, let me back out the changes here because I haven't done that.

21
00:01:48,775 --> 00:01:49,454
So,

22
00:01:49,454 --> 00:01:59,542
what we want to do is conditionally add a class to this section that kind of

23
00:01:59,542 --> 00:02:05,309
contains all of our component based on the property of a Vue model that will

24
00:02:05,309 --> 00:02:07,780
update through some kind of user interface component.

25
00:02:07,780 --> 00:02:16,343
So the way that Vue provides to do this is a couple of things.

26
00:02:16,343 --> 00:02:22,420
One thing you could do is you could have a mustache template here,

27
00:02:22,420 --> 00:02:28,349
which will put the value of a Vue model property directly

28
00:02:28,349 --> 00:02:34,160
into the class list of the element here.

29
00:02:34,160 --> 00:02:41,690
So I could have a themeClass like Vue model property and I

30
00:02:41,690 --> 00:02:45,304
could drop it directly in the class list there.

31
00:02:45,304 --> 00:02:51,298
The other thing I can do is I can use a bind directive,

32
00:02:51,298 --> 00:02:57,269
which is a little bit more flexible if you have to do complex things with the

33
00:02:57,269 --> 00:03:01,060
classes that you're adding based on the state of the model.

34
00:03:01,060 --> 00:03:09,162
So one of the ways that we have to do that is with this v-bind directive.

35
00:03:09,162 --> 00:03:16,472
We can bind the class of that object to be the result of an array of

36
00:03:16,472 --> 00:03:22,622
properties or of an object with properties that we can toggle true or false

37
00:03:22,622 --> 00:03:26,793
indicating whether or not that class should be selected.

38
00:03:26,793 --> 00:03:32,922
So in this case, I'll just pass in an array of potential model properties.

39
00:03:32,922 --> 00:03:39,913
In this case, I'll just call it dark because by default,

40
00:03:39,913 --> 00:03:43,798
we'll assume that the light theme is essentially the default and

41
00:03:43,798 --> 00:03:48,376
just add some additional styles for the dark theme.

42
00:03:48,376 --> 00:03:55,073
So, what we're going to --- excuse me, we'll just call that theme.

43
00:03:55,073 --> 00:03:59,948
So, we'll be setting that property based on the Vue model.

44
00:03:59,948 --> 00:04:04,186
So now I think that's pretty much all we're going to

45
00:04:04,186 --> 00:04:05,827
have to do here in the markup.

46
00:04:05,827 --> 00:04:12,359
If we go into the actual Vue, we're going to add another property called theme,

47
00:04:12,359 --> 00:04:15,984
and this is actually where we'll set the default.

48
00:04:15,984 --> 00:04:21,494
So, the CSS theme for light will be the value by default,

49
00:04:21,494 --> 00:04:25,171
or we could actually not have a light theme class

50
00:04:25,171 --> 00:04:27,470
at all and just leave it empty.

51
00:04:27,470 --> 00:04:30,426
But we'll have a light theme class just in case we decide we

52
00:04:30,426 --> 00:04:33,371
want to add some properties for that later.

53
00:04:33,371 --> 00:04:37,657
So, now we need to do --- actually, I lied.

54
00:04:37,657 --> 00:04:43,182
We do need to go back to the markup a little bit.

55
00:04:43,182 --> 00:04:50,679
So, down at the bottom here at the section that has the filters,

56
00:04:50,679 --> 00:04:52,209
we'll do something just quick and dirty.

57
00:04:52,209 --> 00:04:55,130
There are a few ways you could do this.

58
00:04:55,130 --> 00:04:59,425
You could do like an input radio button,

59
00:04:59,425 --> 00:05:03,654
which maybe I will do right,

60
00:05:03,654 --> 00:05:15,001
input radio with a name of theme and a value of say light.

61
00:05:15,001 --> 00:05:19,878
And, we'll default that to checked.

62
00:05:19,878 --> 00:05:22,316
And, in addition,

63
00:05:22,316 --> 00:05:32,965
we're going to bind that to that theme property that we just created.

64
00:05:32,965 --> 00:05:37,163
So that's going to be like our radio option for the light theme.

65
00:05:37,163 --> 00:05:43,539
And then we're going to do something similar for the dark theme,

66
00:05:43,539 --> 00:05:46,604
although this time it's not going to be checked and

67
00:05:46,604 --> 00:05:50,346
the value is going to be dark.

68
00:05:50,346 --> 00:05:58,099
So, we've updated our Vue model to track this new property called theme.

69
00:05:58,099 --> 00:06:04,644
We have a little bit of user interface here to allow people to select

70
00:06:04,644 --> 00:06:09,627
a radio button based on their current preference.

71
00:06:09,627 --> 00:06:12,748
It's going to start updating the model,

72
00:06:12,748 --> 00:06:21,637
which should start toggling this class up here at the top.

73
00:06:21,637 --> 00:06:31,788
So, let's fire that up, make sure that that worked.

74
00:06:31,788 --> 00:06:33,726
And again, because I was spamming my database,

75
00:06:33,726 --> 00:06:38,551
we're going to have a long way to scroll down to the bottom,

76
00:06:38,551 --> 00:06:45,440
but there is our light theme and our dark theme,

77
00:06:45,440 --> 00:06:55,887
which doesn't seem to be updating the way I'd thought.

78
00:06:55,887 --> 00:07:02,285
Let's see here, name, theme, value, dark.

79
00:07:02,285 --> 00:07:03,708
Actually, you know what?

80
00:07:03,708 --> 00:07:10,773
This is going to change that to be a Boolean rather than a string.

81
00:07:10,773 --> 00:07:19,539
So that's not exactly what I want in this instance.

82
00:07:19,539 --> 00:07:21,351
Alright.

83
00:07:21,351 --> 00:07:32,221
What did I goof up there?

84
00:07:32,221 --> 00:07:35,845
Let's see.

85
00:07:35,845 --> 00:07:36,946
Yeah, I'm not sure.

86
00:07:36,946 --> 00:07:42,279
That kind of matches my note over there so I'm going to have to dig into that.

87
00:07:42,279 --> 00:07:44,933
Does it need to be checkbox instead of radio?

88
00:07:44,933 --> 00:07:45,188
No,

89
00:07:45,188 --> 00:07:48,764
I think the radio is what I want because I only want like one

90
00:07:48,764 --> 00:07:52,474
of these to be selected at any given time.

91
00:07:52,474 --> 00:08:01,101
What is weirding me out a little bit is the fact that I can't update it.

92
00:08:01,101 --> 00:08:02,971
It could be some like z-indexing stuff.

93
00:08:02,971 --> 00:08:04,574
I'll just, as a Hail Mary,

94
00:08:04,574 --> 00:08:08,442
try this and then I will leave you alone to debug this.

95
00:08:08,442 --> 00:08:14,816
I do want to show you how this works though so I'll do this over the break.

96
00:08:14,816 --> 00:08:15,089
Alright.

97
00:08:15,089 --> 00:08:18,971
So there I think it might have been like a z-indexing issue in

98
00:08:18,971 --> 00:08:25,075
the CSS because I am able to click it now.

99
00:08:25,075 --> 00:08:28,106
So, now if everything worked according to plan,

100
00:08:28,106 --> 00:08:35,984
like if I inspect this component, open up the body,

101
00:08:35,984 --> 00:08:46,060
there is the current class and --- that's not exactly

102
00:08:46,060 --> 00:08:47,819
doing what I thought it would do.

103
00:08:47,819 --> 00:08:52,088
Let's see, value dark.

104
00:08:52,088 --> 00:08:53,155
Alright.

105
00:08:53,155 --> 00:09:00,570
So that binding isn't working exactly the way I wanted here.

106
00:09:00,570 --> 00:09:05,721
I thought that --- I'm going to have to figure out why that is.

107
00:09:05,721 --> 00:09:06,118
Man!

108
00:09:06,118 --> 00:09:07,703
That is a bummer.

109
00:09:07,703 --> 00:09:11,908
But the idea is we are going to be toggling this property,

110
00:09:11,908 --> 00:09:16,411
it's going to be updating the class on that DOM element,

111
00:09:16,411 --> 00:09:21,606
and then we can add CSS styles to make that work.

112
00:09:21,606 --> 00:09:25,776
So, during the next break I'll debug that.

113
00:09:25,776 --> 00:09:29,024
I'll check my gist that I had set up for that and

114
00:09:29,024 --> 00:09:34,717
figure out why that's not working, and we'll cover that when we come back.

115
00:09:34,717 --> 00:09:39,593
But the next piece that we are going to tackle was starting to dig into Socket.

116
00:09:39,593 --> 00:09:40,919
IO a little bit.

117
00:09:40,919 --> 00:09:41,583
Yes, question.

118
00:09:41,583 --> 00:09:43,612
A quick question about --- this was a little bit a while ago,

119
00:09:43,612 --> 00:09:48,006
but what about the allDone input?

120
00:09:48,006 --> 00:09:53,865
They're just asking what about the allDone input.

121
00:09:53,865 --> 00:10:01,261
Yeah, so --- I can ask them to clarify if --- Yeah, what is the allDone?

122
00:10:01,261 --> 00:10:07,590
What do we mean by the allDone input?

123
00:10:07,590 --> 00:10:08,288
I'll ask them.

124
00:10:08,288 --> 00:10:11,689
Okay.

125
00:10:11,689 --> 00:10:18,806
The main section right above the todos header is bound to an allDone v-model.

126
00:10:18,806 --> 00:10:23,377
Line 25, I think.

127
00:10:23,377 --> 00:10:26,658
I think maybe like is that the completed stuff?

128
00:10:26,658 --> 00:10:29,102
V-model allDone.

129
00:10:29,102 --> 00:10:30,467
Oh, toggle-all.

130
00:10:30,467 --> 00:10:31,793
I think it's if you want to mark all of them isn't it?

131
00:10:31,793 --> 00:10:32,081
Yeah,

132
00:10:32,081 --> 00:10:36,408
so that is essentially --- I think that's going to be like a Boolean toggle.

133
00:10:36,408 --> 00:10:38,023
Let's take a look at that.

134
00:10:38,023 --> 00:10:42,266
And he's just saying it's not saving it to the database.

135
00:10:42,266 --> 00:10:47,711
The allDone is not saving to the database.

136
00:10:47,711 --> 00:10:49,258
That's a good question.

137
00:10:49,258 --> 00:10:54,959
I'm not sure off the DOM what that's supposed to do because the allDone ---

138
00:10:54,959 --> 00:10:59,352
this is code that I took from the TodoMVC implementation,

139
00:10:59,352 --> 00:11:05,726
is not actually a model object.

140
00:11:05,726 --> 00:11:08,743
Oh, you know what it is?

141
00:11:08,743 --> 00:11:12,262
I think it's probably a computed property.

142
00:11:12,262 --> 00:11:18,485
So, allDone is this computed property here, which has a getter and a setter.

143
00:11:18,485 --> 00:11:22,723
So it can be treated as if it is a property of the Vue

144
00:11:22,723 --> 00:11:24,477
model associated with the component.

145
00:11:24,477 --> 00:11:29,885
And then when it's called in the Vue like it is over here,

146
00:11:29,885 --> 00:11:32,390
the get function is called.

147
00:11:32,390 --> 00:11:40,279
So this checkbox is toggled based on whether or not all of

148
00:11:40,279 --> 00:11:43,441
the current todo items have been completed.

149
00:11:43,441 --> 00:11:45,657
So that's where that's coming from.

150
00:11:45,657 --> 00:11:52,560
It's one of these computed properties.

151
00:11:52,560 --> 00:11:54,868
So if you did want to save all of them after doing that

152
00:11:54,868 --> 00:11:59,121
you would just update this forEach callback to mark that

153
00:11:59,121 --> 00:12:02,074
it's modified and all saved?

154
00:12:02,074 --> 00:12:03,930
Yes, yes, that's what we would do.

155
00:12:03,930 --> 00:12:06,780
So you would, in addition to completed for each of them,

156
00:12:06,780 --> 00:12:11,981
you would also mark them as modified and it would all go to the

157
00:12:11,981 --> 00:12:15,164
server based on the current implementation.

158
00:12:15,164 --> 00:12:19,340
So the setter is what happens on change.

159
00:12:19,340 --> 00:12:28,000
So like if I were to click this checkbox, then that's when the setter logic gets executed.

