1
00:00:07,850 --> 00:00:10,980
Hello this is Carol from frigs both dot com.

2
00:00:11,130 --> 00:00:18,300
And welcome to the seventh tutorial in our series of em kill for tutorials for beginners.

3
00:00:18,610 --> 00:00:22,960
And today we're going to be talking about the for loop.

4
00:00:23,210 --> 00:00:26,560
This is the middle editor of programming environment.

5
00:00:26,720 --> 00:00:31,110
And let's go ahead and create a new script.

6
00:00:31,230 --> 00:00:38,000
I know we've done this a couple times already but I just think that it's a good idea to do it few more

7
00:00:38,000 --> 00:00:45,820
times so it sinks in and is basically on autopilot.

8
00:00:45,860 --> 00:00:52,820
So here we give our script a name here we quickly check that this is our information.

9
00:00:52,820 --> 00:00:56,730
We don't need a parameters to finish and voila.

10
00:00:57,230 --> 00:01:04,030
This is our script and it's going to get rid of these lines as usual.

11
00:01:05,040 --> 00:01:12,800
And so today we will be talking about for loop.

12
00:01:13,470 --> 00:01:22,500
It is very similar to the While loop which we talked about in tutorial 5 and that's from just going

13
00:01:22,500 --> 00:01:29,380
to go back to file and copy this part of the code

14
00:01:32,200 --> 00:01:35,000
and I'll just put it in here.

15
00:01:35,350 --> 00:01:41,700
And so that it doesn't distract us we'll just come me up.

16
00:01:42,010 --> 00:01:47,470
And as you can see this is where the multi-line comments come in handy.

17
00:01:49,320 --> 00:01:50,040
All right.

18
00:01:50,220 --> 00:01:57,990
So that was the while loop which we discussed previously today we're going to talk about for the for

19
00:01:57,990 --> 00:02:11,710
loop also consists of three parts the word for than normal brackets and then curly brackets the curve

20
00:02:11,730 --> 00:02:20,010
brackets will contain the body of the look just like with the While loop.

21
00:02:20,010 --> 00:02:29,400
However the normal brackets will be different to the ones a while loop because here we'll have three

22
00:02:29,460 --> 00:02:39,790
different segments and you'll see in a moment why all these three segments are relevant and how they

23
00:02:40,090 --> 00:02:44,270
relate to what we saw with the wild.

24
00:02:44,580 --> 00:03:01,020
So basically the first part of the four brackets is an opportunity for the programmer to introduce a

25
00:03:01,020 --> 00:03:08,480
new counter variable or just a kind of variable that will be used in the loop itself.

26
00:03:08,700 --> 00:03:14,550
So here we are going to introduce a new variable and i equals zero.

27
00:03:14,820 --> 00:03:21,130
Second part of brackets is responsible for the value that is checked.

28
00:03:21,150 --> 00:03:26,220
So here for example we will check that it is less than 5.

29
00:03:26,790 --> 00:03:38,950
And then the last part of the brackets allows for the increments that are supposed to occur at the end

30
00:03:38,950 --> 00:03:41,430
of each iteration of the loop.

31
00:03:41,470 --> 00:03:50,240
So here we can say five plus plus and plus plus is an impression that we haven't discussed before.

32
00:03:50,250 --> 00:03:56,260
Plus plus basically means the same as equals plus one.

33
00:03:56,310 --> 00:03:59,550
So this will increase the value of.

34
00:03:59,550 --> 00:04:09,090
I'd buy one a shorter way of writing them till four is a plus plus.

35
00:04:09,700 --> 00:04:10,200
All right.

36
00:04:10,240 --> 00:04:16,210
So let's see how this compares to what we had before in the wild.

37
00:04:16,660 --> 00:04:26,020
So as you remember in the while loop we had a counter which we used to in order to count the iterations

38
00:04:26,020 --> 00:04:30,680
of the loop and exit it when we needed to.

39
00:04:31,030 --> 00:04:33,080
That counter was just before that.

40
00:04:33,400 --> 00:04:40,570
Here we can introduce the counter inside the normal brackets of four.

41
00:04:41,080 --> 00:04:44,610
So basically this part is the same as this part.

42
00:04:46,460 --> 00:04:55,970
Eyes listen five is this is a logical expression that is checked on before every iteration of the loop

43
00:04:56,530 --> 00:05:00,440
and all of the while loop that Tartaros this part inside the brackets.

44
00:05:00,440 --> 00:05:08,390
So this middle part of the for loop is same as this part of the.

45
00:05:09,560 --> 00:05:19,640
And finally the increment is now located in the for loop in this part of the for loop whereas we had

46
00:05:19,640 --> 00:05:22,920
to put the increment into the bottom of the well.

47
00:05:23,840 --> 00:05:31,880
So basically from this we can tell that the while in the four loops are very similar but in my opinion

48
00:05:32,240 --> 00:05:40,580
the for loop is just much more convenient than the while loop because it allows you to kind of cluster

49
00:05:40,580 --> 00:05:50,930
all of this of the admin functions into these brackets.

50
00:05:51,160 --> 00:06:01,680
So let's give our for loop body and say for example say hello or how long.

51
00:06:02,110 --> 00:06:03,570
So learn how long.

52
00:06:03,640 --> 00:06:12,230
And because it's a string of text string quotation marks and that's that's basically it.

53
00:06:12,430 --> 00:06:25,300
So we'll compile that and when we run it we're supposed to see five flow statements so when I is zero

54
00:06:26,260 --> 00:06:29,190
origine zero this will be true.

55
00:06:29,290 --> 00:06:33,180
This will print then I will be incremented become one.

56
00:06:33,190 --> 00:06:34,580
This will still be true.

57
00:06:34,630 --> 00:06:37,600
This will be printed and I'll come to.

58
00:06:37,600 --> 00:06:38,580
This will be true.

59
00:06:38,620 --> 00:06:39,910
This will be printed.

60
00:06:40,290 --> 00:06:42,840
I will become three.

61
00:06:42,850 --> 00:06:45,270
This will be true this will be printed out.

62
00:06:45,310 --> 00:06:52,110
I will get code for this will still be true this will be printed and I will become five.

63
00:06:52,120 --> 00:06:58,720
This will become false and the body will be ignored just as the while loop and the program will move

64
00:06:58,870 --> 00:06:59,520
on.

65
00:06:59,860 --> 00:07:09,180
So let's compile that and check and traitor for Tauriel 7.

66
00:07:09,240 --> 00:07:14,210
We have 1 2 3 4 5 House.

67
00:07:14,910 --> 00:07:19,110
So basically that's how the for loop works.

68
00:07:19,260 --> 00:07:22,170
That brings us to the end of this tutorial.

69
00:07:22,290 --> 00:07:24,110
Hope you enjoyed it.

70
00:07:24,120 --> 00:07:28,460
More tutorials and information are available on for export.

71
00:07:28,500 --> 00:07:29,420
Dot com.

72
00:07:29,490 --> 00:07:32,960
Also that's where I post all of the source code.

73
00:07:32,970 --> 00:07:39,050
If you ever would like to download them and reference them and can join me for the next turn.

74
00:07:39,090 --> 00:07:40,140
Until then take.
