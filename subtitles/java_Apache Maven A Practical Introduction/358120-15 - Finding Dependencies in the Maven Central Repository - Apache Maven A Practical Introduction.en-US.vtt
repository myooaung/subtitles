WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:11.860
So in this video we're going to see how we can use the search for intend for the Melbourne

00:00:11.860 --> 00:00:15.620
Central repository to look up dependencies and include them into projects.

00:00:15.620 --> 00:00:19.040
So if we go to search dot maven dog,

00:00:19.040 --> 00:00:20.870
then we see the search front end.

00:00:20.870 --> 00:00:21.980
So from here,

00:00:21.980 --> 00:00:24.100
you can type in the dependency that you're looking for.

00:00:24.100 --> 00:00:24.850
For example,

00:00:24.850 --> 00:00:26.070
look for J.

00:00:26.070 --> 00:00:30.670
And then here will come back with all of the different results which include a lock for J.

00:00:30.670 --> 00:00:31.390
Still notice here.

00:00:31.390 --> 00:00:34.050
This isn't necessarily restricted to just the artifact tidy,

00:00:34.050 --> 00:00:37.020
but the lock for Jane String can actually win the group idly itself.

00:00:37.020 --> 00:00:37.530
So,

00:00:37.530 --> 00:00:38.350
for example,

00:00:38.350 --> 00:00:41.050
the rial log for J dependency which would actually want,

00:00:41.050 --> 00:00:43.210
is in this one here,

00:00:43.210 --> 00:00:44.770
which is log for J Group I d.

00:00:44.770 --> 00:00:46.090
Look for J artifact I d.

00:00:46.090 --> 00:00:48.050
But includes a lot of other stuff as well,

00:00:48.050 --> 00:00:51.430
which maybe we wouldn't want to see you get around that by doing that Advanced search

00:00:51.430 --> 00:00:51.950
instead.

00:00:51.950 --> 00:00:57.350
So from here is much more sophisticated weaken type in the group i D or artifact I d or

00:00:57.350 --> 00:00:57.750
version.

00:00:57.750 --> 00:01:03.970
So if you just want to search for artifacts that only cold look for J then we can specify

00:01:03.970 --> 00:01:04.490
that here.

00:01:04.490 --> 00:01:08.260
And that is as well when you do that that in the text box above it's actually giving a

00:01:08.260 --> 00:01:13.410
shorthand notation for the more sophisticated search A stands for artifact I D that I call

00:01:13.410 --> 00:01:14.020
on the string.

00:01:14.020 --> 00:01:20.690
It's gonna filter on to get the rial look for J by specifying the group on the on the

00:01:20.690 --> 00:01:23.140
artifact I d on hitting search.

00:01:23.140 --> 00:01:26.880
Then we only have the one result that were actually after that.

00:01:26.880 --> 00:01:28.270
From this screen,

00:01:28.270 --> 00:01:32.650
you can either click on the Group I d to get back to all of the other projects which are

00:01:32.650 --> 00:01:33.690
under that group ideas.

00:01:33.690 --> 00:01:34.820
All of the other artifact,

00:01:34.820 --> 00:01:38.420
which under the same group idea of log for J in this case there are only two.

00:01:38.420 --> 00:01:39.910
There's look for Jay and Apache.

00:01:39.910 --> 00:01:40.860
Log for extras,

00:01:40.860 --> 00:01:42.780
so we'll come back out of that.

00:01:42.780 --> 00:01:46.100
Or you could click the artifact i D.

00:01:46.100 --> 00:01:50.770
In which case you're pretty much filtering on just the artifact I D.

00:01:50.770 --> 00:01:53.520
But then saying the group I d can be a wild can match.

00:01:53.520 --> 00:01:57.370
So this is basically a list of projects that produce a lock for Jane Artifact.

00:01:57.370 --> 00:01:57.750
I d.

00:01:57.750 --> 00:01:59.730
Go back,

00:01:59.730 --> 00:02:03.440
say he receives a version section as well,

00:02:03.440 --> 00:02:06.020
so the latest version is 1 to 17.

00:02:06.020 --> 00:02:06.570
From here.

00:02:06.570 --> 00:02:08.500
If we wanted to get a list of all the versions,

00:02:08.500 --> 00:02:09.580
we can just click old.

00:02:09.580 --> 00:02:11.870
And then we could see all the different versions that we can.

00:02:11.870 --> 00:02:13.950
Possibly including a project say,

00:02:13.950 --> 00:02:14.460
for example,

00:02:14.460 --> 00:02:16.030
wanted Version 12 annoying.

00:02:16.030 --> 00:02:17.260
We could just click that.

00:02:17.260 --> 00:02:19.630
Know that whenever you select the version itself,

00:02:19.630 --> 00:02:23.940
because that's the most specific way of identifying a dependency a tous point what you're

00:02:23.940 --> 00:02:27.900
talking of our actual dependency itself on actual artifact that could be included.

00:02:27.900 --> 00:02:31.260
So this then brings us to the details section for the artifact.

00:02:31.260 --> 00:02:34.840
So here you can see it's got the group party artifact of the inversion listed.

00:02:34.840 --> 00:02:39.040
It's also got in the dependency information section the dependency snippet.

00:02:39.040 --> 00:02:42.780
You'd have to include an American palmed XML file and also other formats as well.

00:02:42.780 --> 00:02:42.910
So,

00:02:42.910 --> 00:02:43.350
for example,

00:02:43.350 --> 00:02:44.870
if you do review grapes,

00:02:44.870 --> 00:02:49.320
this would be a way of including that dependency into a group project outside the scope of

00:02:49.320 --> 00:02:49.740
this course,

00:02:49.740 --> 00:02:50.230
of course,

00:02:50.230 --> 00:02:53.200
but it's useful to note that you can include me of independence is from,

00:02:53.200 --> 00:02:53.320
um,

00:02:53.320 --> 00:02:59.440
Evan repository in projects that use other built technologies and then to the right.

00:02:59.440 --> 00:03:02.490
You finally have the Palm or the project object model,

00:03:02.490 --> 00:03:05.510
which this dependency was deployed to the repository with.

00:03:05.510 --> 00:03:06.410
So in this case,

00:03:06.410 --> 00:03:07.290
it's very simple.

00:03:07.290 --> 00:03:08.610
It's pretty much the minimal palm.

00:03:08.610 --> 00:03:11.010
It's just specifying the fact that it's a group I d.

00:03:11.010 --> 00:03:13.870
An artifact early and aversion and there's no dependency.

00:03:13.870 --> 00:03:15.410
Information doesn't require anything.

00:03:15.410 --> 00:03:15.980
It's just a very,

00:03:15.980 --> 00:03:16.200
very,

00:03:16.200 --> 00:03:17.510
very basic jar file,

00:03:17.510 --> 00:03:18.350
which has been deployed.

00:03:18.350 --> 00:03:21.550
Let's go back out from there to the search results again.

00:03:21.550 --> 00:03:26.580
Okay,

00:03:26.580 --> 00:03:30.920
so it tells you when it was last updated the 26th of May 2012 in this case,

00:03:30.920 --> 00:03:33.560
then it lets you download different artifact types,

00:03:33.560 --> 00:03:36.380
so you can either choose to download the Palm itself,

00:03:36.380 --> 00:03:37.750
which is what we've just seen.

00:03:37.750 --> 00:03:39.190
Or the jar file,

00:03:39.190 --> 00:03:44.100
which will actually allow you to download the binary jar file itself all the zip

00:03:44.100 --> 00:03:47.340
pathologies aid or the job or sources.

00:03:47.340 --> 00:03:47.650
John.

00:03:47.650 --> 00:03:48.600
So,

00:03:48.600 --> 00:03:49.160
for example,

00:03:49.160 --> 00:03:50.670
if I downloaded the sources John,

00:03:50.670 --> 00:03:59.300
that I could download that some boy local system and then I would have a copy of the source

00:03:59.300 --> 00:04:00.790
card of that particular project.

00:04:00.790 --> 00:04:05.550
So if you just with John T V f on that sources job far we've downloaded.

00:04:05.550 --> 00:04:09.910
We can see here we see the source code for that particular version of Lock for J.

00:04:09.910 --> 00:04:13.050
You can also include the same projects that by specifying the modesty,

00:04:13.050 --> 00:04:15.330
download sources equals true flag as well,

00:04:15.330 --> 00:04:19.510
or by also putting that in the palm fall I found search also gives you another option which

00:04:19.510 --> 00:04:23.670
is rather useful on this is to specify a class name.

00:04:23.670 --> 00:04:24.270
So,

00:04:24.270 --> 00:04:24.920
for example,

00:04:24.920 --> 00:04:27.710
if I go back to the look for glorious source code,

00:04:27.710 --> 00:04:28.530
which I have here,

00:04:28.530 --> 00:04:35.600
so I know that this appears in I think it was version 1 to 9 off the luggage A project If I

00:04:35.600 --> 00:04:41.630
copy this part of the file name which will correspond to the package on class names with a

00:04:41.630 --> 00:04:45.730
fully qualified class them off this particular class which is the sex era Handlers are

00:04:45.730 --> 00:04:48.550
organ Apache to log for Joe Dikes and all but sacks era handler.

00:04:48.550 --> 00:04:52.460
If I was depressed that into the class name section,

00:04:52.460 --> 00:04:59.630
replacing slashes with full stops,

00:04:59.630 --> 00:05:00.080
of course,

00:05:00.080 --> 00:05:01.840
Then he find it was such.

00:05:01.840 --> 00:05:07.500
This shows me all of the artifacts deployed to the Melbourne Central repository which

00:05:07.500 --> 00:05:08.970
include that specific file.

00:05:08.970 --> 00:05:09.620
And then again,

00:05:09.620 --> 00:05:12.450
you could link back and go to a specific version.

00:05:12.450 --> 00:05:16.250
Have a look there to further inspect dependencies or the palm and such,

00:05:16.250 --> 00:05:18.550
like this particular class,

00:05:18.550 --> 00:05:20.660
was there also including a different dependency.

00:05:20.660 --> 00:05:22.360
But for the purposes of a simple course,

00:05:22.360 --> 00:05:25.840
it enables you to research which dependencies you might need for something.

00:05:25.840 --> 00:05:26.130
So,

00:05:26.130 --> 00:05:26.600
for example,

00:05:26.600 --> 00:05:28.350
imagine you go into a blogger website,

00:05:28.350 --> 00:05:31.050
you see some code that's there were just as imports.

00:05:31.050 --> 00:05:33.620
It doesn't actually tell you which job file it needs to include.

00:05:33.620 --> 00:05:38.390
You could copy that fully qualified class name of the import statement into here and then

00:05:38.390 --> 00:05:41.690
that I give you a clue as to which dependence is you might want to download,

00:05:41.690 --> 00:05:42.750
including your project.

00:05:42.750 --> 00:05:43.500
Yes,

00:05:43.500 --> 00:05:44.140
As you can see,

00:05:44.140 --> 00:05:46.030
the MEV in Central Repository,

00:05:46.030 --> 00:05:51.110
the search from in for that very useful and a really great way to kick start new projects

00:05:51.110 --> 00:05:55.600
by looking for dependencies and copying the dependency snippets into the Pond XML file.

00:05:55.600 --> 00:06:00.080
And that's I used Amev in central repositories search from send to find the news

00:06:00.080 --> 00:06:01.300
dependencies with heaven

