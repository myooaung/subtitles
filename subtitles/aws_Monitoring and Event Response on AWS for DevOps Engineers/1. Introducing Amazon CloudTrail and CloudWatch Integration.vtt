WEBVTT
1
00:00:03.040 --> 00:00:03.490
Hi there,

2
00:00:03.490 --> 00:00:06.300
and welcome to this module in our Monitoring and Event

3
00:00:06.300 --> 00:00:08.830
Response on AWS for DevOps Engineers course.

4
00:00:08.830 --> 00:00:11.640
My name's Mike Brown, and in this module,

5
00:00:11.640 --> 00:00:16.040
we're going to be working with Amazon CloudWatch and CloudTrail.

6
00:00:16.040 --> 00:00:20.190
We're going to begin this module by introducing Amazon CloudTrail and

7
00:00:20.190 --> 00:00:23.470
how we can use CloudTrail to log events to CloudWatch and how we can

8
00:00:23.470 --> 00:00:26.540
use CloudWatch to work with those events.

9
00:00:26.540 --> 00:00:28.980
We'll also take a look at we can use CloudWatch to

10
00:00:28.980 --> 00:00:31.540
centralize CloudTrail log management.

11
00:00:31.540 --> 00:00:35.300
So let's begin by introducing Amazon CloudTrail before going on to

12
00:00:35.300 --> 00:00:38.240
look at CloudTrail and CloudWatch integration.

13
00:00:38.240 --> 00:00:40.640
So, what is CloudTrail?

14
00:00:40.640 --> 00:00:43.920
Well, fundamentally, CloudTrail records and stores events.

15
00:00:43.920 --> 00:00:45.320
But not all events.

16
00:00:45.320 --> 00:00:48.320
Specifically here, we're talking about administrative events.

17
00:00:48.320 --> 00:00:52.070
So any administrative logging or administrative API action,

18
00:00:52.070 --> 00:00:55.140
for example, will picked up by CloudTrail.

19
00:00:55.140 --> 00:00:58.640
These will include events instigated by your IAM users,

20
00:00:58.640 --> 00:01:03.640
IAM roles, or events that are instigated by AWS resources,

21
00:01:03.640 --> 00:01:06.570
such as Lambda functions and EC2 instances.

22
00:01:06.570 --> 00:01:10.940
Although CloudTrail has its own dashboard where we can see some events,

23
00:01:10.940 --> 00:01:14.240
it's usually good practice, particularly for long‑term analysis,

24
00:01:14.240 --> 00:01:20.330
that we integrate CloudTrail with a more permanent store like S3 or CloudWatch.

25
00:01:20.330 --> 00:01:23.220
This would include storing CloudTrail logs in CloudWatch,

26
00:01:23.220 --> 00:01:26.760
but also using CloudWatch Events to monitor for specific

27
00:01:26.760 --> 00:01:30.940
CloudTrail events and automate actions based on them.

28
00:01:30.940 --> 00:01:34.040
We can provide access to CloudTrail information for the console,

29
00:01:34.040 --> 00:01:36.710
or by using one of the many SDKs that AWS supports,

30
00:01:36.710 --> 00:01:39.380
you can access CloudTrail information programmatically.

31
00:01:39.380 --> 00:01:43.140
When working CloudTrail, there's a few things that we should know.

32
00:01:43.140 --> 00:01:45.650
First of all, we should know that CloudTrail is always on.

33
00:01:45.650 --> 00:01:50.140
It's enabled by default for every AWS account inside your organization.

34
00:01:50.140 --> 00:01:53.310
CloudTrail itself will keep an event history so we can view,

35
00:01:53.310 --> 00:01:54.440
search,

36
00:01:54.440 --> 00:01:57.030
and through which can download events to use locally or

37
00:01:57.030 --> 00:01:59.630
to import into a third‑party service.

38
00:01:59.630 --> 00:02:03.180
CloudTrail can collect events from multiple regions in a single place,

39
00:02:03.180 --> 00:02:07.130
and CloudTrail has integrity checks built in so that we can prove integrity

40
00:02:07.130 --> 00:02:09.840
of our logs and ensure they haven't been tampered with.

41
00:02:09.840 --> 00:02:10.130
Finally,

42
00:02:10.130 --> 00:02:14.540
it's worth knowing that all logs created by CloudTrail are encrypted by default.

43
00:02:14.540 --> 00:02:17.470
Now there are different types of CloudTrail events that we can view.

44
00:02:17.470 --> 00:02:19.800
The first type of event is a data event.

45
00:02:19.800 --> 00:02:24.640
These include activities such as S3 object‑level API activity

46
00:02:24.640 --> 00:02:26.140
and the invocation of Lambda functions.

47
00:02:26.140 --> 00:02:28.250
We can also monitor management events.

48
00:02:28.250 --> 00:02:32.210
These are a list of all interactions from all administrative tools.

49
00:02:32.210 --> 00:02:33.490
So there's no hiding from CloudTrail.

50
00:02:33.490 --> 00:02:36.720
Whatever tool you're using to access your AWS accounts,

51
00:02:36.720 --> 00:02:39.380
CloudTrail will be logging your activity. One particularly useful

52
00:02:39.380 --> 00:02:43.440
component of CloudTrail is Insights events. Insights events capture

53
00:02:43.440 --> 00:02:46.600
unusual activity. They are logged when CloudTrail detects unusual

54
00:02:46.600 --> 00:02:48.840
activity against your APIs,

55
00:02:48.840 --> 00:02:52.450
so something that's out of the normal for your typical administrative action.

56
00:02:52.450 --> 00:02:54.840
Unlike the other type of events for CloudTrail,

57
00:02:54.840 --> 00:02:57.540
Insights events are disabled by default,

58
00:02:57.540 --> 00:03:00.500
and you'll need to enable them if you want to view them, but there is an

59
00:03:00.500 --> 00:03:04.000
additional charge. So only enable Insights events if you think you'll find

60
00:03:04.000 --> 00:03:06.540
them useful. When working with CloudTrail,

61
00:03:06.540 --> 00:03:11.800
we create trails. By default, CloudTrail will keep 90 days of events

62
00:03:11.800 --> 00:03:14.780
available for you to view and search through the console.

63
00:03:14.780 --> 00:03:18.270
If you want to view data of a longer period than this or work

64
00:03:18.270 --> 00:03:21.000
with that data using more specialist tools,

65
00:03:21.000 --> 00:03:24.430
then we need to create them on trails. Trails deliver CloudTrail

66
00:03:24.430 --> 00:03:28.370
event information to S3 or to CloudWatch. Once we have the events in

67
00:03:28.370 --> 00:03:31.530
S3 or CloudWatch, we can use those events for long‑term analysis.

68
00:03:31.530 --> 00:03:36.340
Trails can collect events for individual accounts or for all AWS

69
00:03:36.340 --> 00:03:38.440
accounts in your organization.

70
00:03:38.440 --> 00:03:41.330
Take a minute to think about your own auditing requirements.

71
00:03:41.330 --> 00:03:43.140
Would CloudTrail work for you?

72
00:03:43.140 --> 00:03:46.220
What type of events would you want to capture short term, and what

73
00:03:46.220 --> 00:03:48.640
type of events would you want to capture long term?

74
00:03:48.640 --> 00:03:50.640
There are lots of use cases for CloudTrail.

75
00:03:50.640 --> 00:03:54.860
They help us to maintain compliance by allowing us to search for anomalous

76
00:03:54.860 --> 00:03:59.150
events that might go against our compliance requirements, they're an important

77
00:03:59.150 --> 00:04:04.280
part of our security analysis, they help us to monitor S3 activity, and are

78
00:04:04.280 --> 00:04:08.050
really useful in operational troubleshooting by allowing us to see how our

79
00:04:08.050 --> 00:04:12.270
administrative teams are interacting with our AWS accounts, what type of

80
00:04:12.270 --> 00:04:16.730
services they're using, what type of APIs calls they're using, and all of this

81
00:04:16.730 --> 00:04:22.370
information can be useful in helping us identify administrative actions that

82
00:04:22.370 --> 00:04:26.690
are best suited for automation instead of manual configuration. Another good

83
00:04:26.690 --> 00:04:31.220
use case for CloudTrail is the ability to detect unusual activity. Something

84
00:04:31.220 --> 00:04:42.000
out of the normal occurs, CloudTrail registers the event, and that itself can trigger automation to alert us when usual activity occurs.

