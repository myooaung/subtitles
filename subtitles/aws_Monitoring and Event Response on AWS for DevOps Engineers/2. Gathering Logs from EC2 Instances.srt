1
00:00:02,340 --> 00:00:06,240
EC2 instances generate lots of metrics that appear in CloudWatch,

2
00:00:06,240 --> 00:00:09,330
but what about the applications that are running on those EC2 instances?

3
00:00:09,330 --> 00:00:12,060
What about events that are registered by the operating system?

4
00:00:12,060 --> 00:00:14,640
Well, we can cover that information too.

5
00:00:14,640 --> 00:00:17,490
So in this section we're going to spend a few minutes talking about

6
00:00:17,490 --> 00:00:21,240
how we can gather log files from EC2 instances,

7
00:00:21,240 --> 00:00:24,840
and this conversation involves talking about the CloudWatch agent.

8
00:00:24,840 --> 00:00:30,240
We can deploy the CloudWatch agent to EC2 instances or on‑premise servers.

9
00:00:30,240 --> 00:00:31,100
Once deployed,

10
00:00:31,100 --> 00:00:34,250
we can use it to gather metrics and logging information from the

11
00:00:34,250 --> 00:00:37,640
operating systems and installed applications.

12
00:00:37,640 --> 00:00:40,590
Whether we're running Linux or Windows,

13
00:00:40,590 --> 00:00:44,140
there's a version of the CloudWatch agent that you can deploy.

14
00:00:44,140 --> 00:00:49,020
And we can go back several generations of the Windows OS and the support

15
00:00:49,020 --> 00:00:51,940
for multiple different types of Linux distribution.

16
00:00:51,940 --> 00:00:56,480
The rough steps for deploying the CloudWatch agent include creating an IAM role.

17
00:00:56,480 --> 00:00:59,920
If you're deploying the CloudWatch agent to an EC2 instance that

18
00:00:59,920 --> 00:01:03,030
instance will need a role that's allowed to write metric and

19
00:01:03,030 --> 00:01:05,090
logging information to CloudWatch.

20
00:01:05,090 --> 00:01:07,660
Now we can't attach a role to an on‑premise server,

21
00:01:07,660 --> 00:01:10,250
so if you're deploying the agent to an on‑premise server you

22
00:01:10,250 --> 00:01:12,540
will also need to configure a credential file.

23
00:01:12,540 --> 00:01:15,520
In that credential file you'll need the credentials that can write

24
00:01:15,520 --> 00:01:17,560
metric and logging information to CloudWatch.

25
00:01:17,560 --> 00:01:19,910
You then download the appropriate agent package

26
00:01:19,910 --> 00:01:23,740
suitable for your operating system, but don't install it straightaway.

27
00:01:23,740 --> 00:01:28,380
Instead, you need to modify or create the agent configuration file.

28
00:01:28,380 --> 00:01:30,810
It's the agent configuration file that contains all

29
00:01:30,810 --> 00:01:33,480
information about what you want to monitor on the EC2

30
00:01:33,480 --> 00:01:36,200
machine or on those on‑premise servers.

31
00:01:36,200 --> 00:01:40,440
The configuration file is a JSON document that you can create manually,

32
00:01:40,440 --> 00:01:44,540
or there is a configuration file wizard that you can run through.

33
00:01:44,540 --> 00:01:47,860
Once you have a configuration file configured you can then

34
00:01:47,860 --> 00:01:50,740
install and start the agent on your servers.

35
00:01:50,740 --> 00:01:52,410
This is a two‑step approach.

36
00:01:52,410 --> 00:01:56,430
You install the agent first and then from a command prompt or in Windows from

37
00:01:56,430 --> 00:02:00,710
PowerShell you start the agent by specifying the agent service and the

38
00:02:00,710 --> 00:02:04,640
configuration file that we used to configure that service.

39
00:02:04,640 --> 00:02:08,120
So, for EC2 instances, create that role that can write to CloudWatch.

40
00:02:08,120 --> 00:02:10,140
For on‑premise servers,

41
00:02:10,140 --> 00:02:15,090
create that credential profile locally. The credential profile will contain keys

42
00:02:15,090 --> 00:02:18,840
for an IAM user that has the rights to write to CloudWatch.

43
00:02:18,840 --> 00:02:22,570
Now the CloudWatch agent itself can be installed manually or you can deploy the

44
00:02:22,570 --> 00:02:26,790
CloudWatch agent using Systems Manager or CloudFormation.

45
00:02:26,790 --> 00:02:28,020
As mentioned a minute ago,

46
00:02:28,020 --> 00:02:32,190
the CloudWatch configuration file is just a JSON document you

47
00:02:32,190 --> 00:02:35,140
can create manually or by using a wizard.

48
00:02:35,140 --> 00:02:39,460
The wizard will ask you a series of questions about your configuration and the

49
00:02:39,460 --> 00:02:42,400
information that you want to gather and store in CloudWatch.

50
00:02:42,400 --> 00:02:45,240
It then creates a JSON document for you,

51
00:02:45,240 --> 00:02:49,440
and it's good practice then to store this JSON document in Parameter Store.

52
00:02:49,440 --> 00:02:52,570
That way you've got a configuration file that's centrally stored that

53
00:02:52,570 --> 00:02:56,390
other instances can then use instead of configuring a configuration file

54
00:02:56,390 --> 00:03:01,140
manually each time you deploy a new EC2 instance.

55
00:03:01,140 --> 00:03:04,760
So now we've got the CloudWatch agent deployed, we can gather all the

56
00:03:04,760 --> 00:03:08,510
extra system‑level metrics from our EC2 instances that we just can't

57
00:03:08,510 --> 00:03:11,340
get without the agent being deployed.

58
00:03:11,340 --> 00:03:14,880
Add to that the ability to collect on‑premise metrics as well, we've

59
00:03:14,880 --> 00:03:17,740
got ourselves a very powerful monitoring solution.

60
00:03:17,740 --> 00:03:20,140
Don't forget, it's not just about the operating systems.

61
00:03:20,140 --> 00:03:23,680
We can also create custom metrics that report information for our

62
00:03:23,680 --> 00:03:26,540
installed applications and our installed services.

63
00:03:26,540 --> 00:03:30,750
But possibly the most powerful feature is the ability to collect logs from both

64
00:03:30,750 --> 00:03:35,540
EC2 instances and the on‑premise servers and use all that logging information

65
00:03:35,540 --> 00:03:38,610
for our monitoring event response in CloudWatch.

66
00:03:38,610 --> 00:03:43,060
Sending log data from your EC2 instances and your on‑premise machines has

67
00:03:43,060 --> 00:03:46,910
lots of benefits starting off with the centralized storage of log files.

68
00:03:46,910 --> 00:03:50,210
With all our log file information stored in one place it should make it

69
00:03:50,210 --> 00:03:53,950
easier for us to secure those log files and work with them. Because we can

70
00:03:53,950 --> 00:03:56,840
use a standard set of CloudWatch tools and APIs to access the log

71
00:03:56,840 --> 00:04:00,980
information, and we're not having to learn individual tools for individual

72
00:04:00,980 --> 00:04:04,460
apps, we should get quicker access to all this consolidated log information

73
00:04:04,460 --> 00:04:05,540
as well.

74
00:04:05,540 --> 00:04:05,940
Also,

75
00:04:05,940 --> 00:04:10,730
by integrating with CloudWatch we can have indefinite log file retention. Now,

76
00:04:10,730 --> 00:04:13,580
if you store log file information on the EC2 instances and those

77
00:04:13,580 --> 00:04:17,320
instances fail or are replaced you lose access to the logs.

78
00:04:17,320 --> 00:04:20,280
So by taking that log file information and storing it centrally in

79
00:04:20,280 --> 00:04:22,580
CloudWatch we will have access to that log file information

80
00:04:22,580 --> 00:04:24,800
regardless of the state of individual instances.

81
00:04:24,800 --> 00:04:28,640
Also by collecting this log information from our EC2 instances

82
00:04:28,640 --> 00:04:31,420
and storing it in CloudWatch we can access other CloudWatch

83
00:04:31,420 --> 00:04:33,640
features such as CloudWatch alarms.

84
00:04:33,640 --> 00:04:37,200
So now we've talked a bit about metrics and alarms and gathering

85
00:04:37,200 --> 00:04:44,000
log information from EC2 instances, let's jump into a demonstration and have a look at some of this stuff.

