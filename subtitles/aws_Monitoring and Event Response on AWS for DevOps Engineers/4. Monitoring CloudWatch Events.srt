1
00:00:02,140 --> 00:00:04,990
So now we've seen CloudWatch Events and Amazon EventBridge in action,

2
00:00:04,990 --> 00:00:08,480
let's take a look at monitoring CloudWatch Events.

3
00:00:08,480 --> 00:00:11,540
There are several tools we can use to monitor CloudWatch Events,

4
00:00:11,540 --> 00:00:15,070
starting off with event metrics. So CloudWatch Events themselves

5
00:00:15,070 --> 00:00:18,680
generate metrics that we can monitor. We can monitor these metrics

6
00:00:18,680 --> 00:00:23,050
through the console by building a custom dashboard, or we can monitor

7
00:00:23,050 --> 00:00:27,170
key metrics by using CloudWatch Alarms. We can also monitor CloudWatch

8
00:00:27,170 --> 00:00:29,060
Events using CloudTrail events.

9
00:00:29,060 --> 00:00:33,640
So as your team build CloudWatch Events, they're triggering APIs, on these

10
00:00:33,640 --> 00:00:37,230
APIs are registered as CloudTrail events, so we can see who created the

11
00:00:37,230 --> 00:00:41,140
CloudWatch Events and when, as well as they're monitoring ongoing change to

12
00:00:41,140 --> 00:00:43,180
CloudWatch Events also through CloudTrail.

13
00:00:43,180 --> 00:00:44,840
Finally, we've got CloudWatch Logs.

14
00:00:44,840 --> 00:00:47,140
So as CloudWatch events are triggered,

15
00:00:47,140 --> 00:00:49,870
we can also log that and then view the information in

16
00:00:49,870 --> 00:00:52,160
CloudWatch Logs using tools like Log Insights.

17
00:00:52,160 --> 00:00:55,370
There are several CloudWatch event metrics that are generated automatically.

18
00:00:55,370 --> 00:00:58,150
These include failed invocation. This will be when

19
00:00:58,150 --> 00:01:01,910
a CloudWatch rule is triggered, but it fails to invoke its target.

20
00:01:01,910 --> 00:01:04,720
We also have invocations. So this will show you when

21
00:01:04,720 --> 00:01:06,630
CloudWatch Events have been triggered.

22
00:01:06,630 --> 00:01:09,950
We have matched events so you can see details of how many events of

23
00:01:09,950 --> 00:01:13,080
matched CloudWatch event rules and triggered rules.

24
00:01:13,080 --> 00:01:16,070
This will show us how many times a particular rule has been triggered.

25
00:01:16,070 --> 00:01:19,190
So a wealth of information here about the actual ruling of CloudWatch

26
00:01:19,190 --> 00:01:23,740
Events. These same metrics are also supported by EventBridge.

27
00:01:23,740 --> 00:01:24,570
As already mentioned,

28
00:01:24,570 --> 00:01:29,280
CloudTrail can monitor the API activity as registered in CloudTrail by

29
00:01:29,280 --> 00:01:34,480
CloudWatch Events. And by interacting with Lambda functions, we can log

30
00:01:34,480 --> 00:01:38,740
all the details of events to CloudWatch Logs.

31
00:01:38,740 --> 00:01:41,850
In this module, you have learned the power of

32
00:01:41,850 --> 00:01:45,140
CloudWatch Events and Amazon EventBridge.

33
00:01:45,140 --> 00:01:47,660
We've discussed the structure CloudWatch Events and how

34
00:01:47,660 --> 00:01:50,440
they are created using rules and targets.

35
00:01:50,440 --> 00:01:53,160
You were also shown a demonstration working with

36
00:01:53,160 --> 00:01:56,140
CloudWatch Events and Amazon EventBridge.

37
00:01:56,140 --> 00:02:00,140
Finally, we went through some of the options for monitoring CloudWatch Events,

38
00:02:00,140 --> 00:02:02,300
including CloudWatch Events metrics,

39
00:02:02,300 --> 00:02:05,350
monitoring events with CloudTrail, and the ability to log

40
00:02:05,350 --> 00:02:08,940
information from CloudWatch Events in CloudWatch Logs.

41
00:02:08,940 --> 00:02:13,370
In our next module, we'll be working with tags in AWS. So join

42
00:02:13,370 --> 00:02:16,720
me there, and we'll carry on our journey monitoring event

43
00:02:16,720 --> 00:02:22,000
response on AWS for DevOps engineers. Thank you.

