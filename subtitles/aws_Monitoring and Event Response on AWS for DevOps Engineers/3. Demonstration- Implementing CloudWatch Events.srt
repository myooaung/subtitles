1
00:00:00,740 --> 00:00:04,240
In this demonstration, we're going to be implementing CloudWatch Events.

2
00:00:04,240 --> 00:00:07,340
We're going to be working with the AWS console.

3
00:00:07,340 --> 00:00:09,840
And if you want to follow along with the demonstration,

4
00:00:09,840 --> 00:00:12,040
you'll need your own AWS account.

5
00:00:12,040 --> 00:00:15,040
Now we do encourage you to follow along with our demonstrations.

6
00:00:15,040 --> 00:00:18,640
But you must be aware that whenever you deploy resources to AWS,

7
00:00:18,640 --> 00:00:20,080
you might incur charges.

8
00:00:20,080 --> 00:00:22,290
So if you do follow in this demonstration,

9
00:00:22,290 --> 00:00:25,290
make sure you delete all the features you deploy once you

10
00:00:25,290 --> 00:00:28,840
are finished them or you may incur costs.

11
00:00:28,840 --> 00:00:33,240
I'm in the CloudWatch dashboard, and this time let's select Events.

12
00:00:33,240 --> 00:00:35,440
One thing to note here is this information message.

13
00:00:35,440 --> 00:00:38,640
CloudWatch Events is now Amazon EventBridge.

14
00:00:38,640 --> 00:00:40,770
So we still have access to Amazon CloudWatch Events

15
00:00:40,770 --> 00:00:44,960
through the CloudWatch console, but we also have the Amazon EventBridge console.

16
00:00:44,960 --> 00:00:47,220
Now you may find that at some point in the future, the

17
00:00:47,220 --> 00:00:50,480
EventBridge console will be visible through here or that

18
00:00:50,480 --> 00:00:52,580
CloudWatch Events will be removed completely,

19
00:00:52,580 --> 00:00:55,270
and you'll have to use the Amazon EventBridge console.

20
00:00:55,270 --> 00:00:57,200
We'll be using both throughout this course.

21
00:00:57,200 --> 00:01:00,040
For those of you thinking about the AWS DevOps exam,

22
00:01:00,040 --> 00:01:03,530
make sure you consult the current example overview to see if the

23
00:01:03,530 --> 00:01:06,240
exam has been updated with the new terminology.

24
00:01:06,240 --> 00:01:08,940
So let's select Get started.

25
00:01:08,940 --> 00:01:10,740
So here we're creating a new rule,

26
00:01:10,740 --> 00:01:13,270
and the first thing to choose is an event source,

27
00:01:13,270 --> 00:01:16,340
either event event pattern or schedule.

28
00:01:16,340 --> 00:01:20,840
We'll leave event pattern selected and then choose a service name.

29
00:01:20,840 --> 00:01:23,040
So I've selected EC2.

30
00:01:23,040 --> 00:01:26,140
Now you can see the event pattern preview being built up

31
00:01:26,140 --> 00:01:28,940
as we make changes to this new rule.

32
00:01:28,940 --> 00:01:33,340
For event type, I've selected EBS Snapshot Notification.

33
00:01:33,340 --> 00:01:38,140
And I don't want any notification, I want a specific event.

34
00:01:38,140 --> 00:01:41,380
So if I select the specific event radio button, I'll then

35
00:01:41,380 --> 00:01:45,040
for the drop‑down choose createSnapshot.

36
00:01:45,040 --> 00:01:49,680
So I want this rule to be invoked when a new EBS snapshot is created.

37
00:01:49,680 --> 00:01:51,940
Again, if I scroll down a little bit,

38
00:01:51,940 --> 00:01:55,240
we can see now the full event pattern that's being created for us.

39
00:01:55,240 --> 00:01:58,040
We can edit this directly by selecting Edit.

40
00:01:58,040 --> 00:02:00,690
This also means that you can create event patterns outside of

41
00:02:00,690 --> 00:02:04,540
CloudWatch in any text editor and paste them in.

42
00:02:04,540 --> 00:02:07,940
I'm happy with this rule, but now I need to select the target.

43
00:02:07,940 --> 00:02:12,020
So if I select Add target and for the drop‑down list,

44
00:02:12,020 --> 00:02:17,640
we can see the list of targets that are possible for this rule,

45
00:02:17,640 --> 00:02:22,840
including CodePipeline to trigger a software deployment,

46
00:02:22,840 --> 00:02:28,140
Lambda functions to trigger a Lambda function based as rule,

47
00:02:28,140 --> 00:02:29,620
and Step Functions.

48
00:02:29,620 --> 00:02:34,140
Step Functions are one of our main workflow services inside AWS.

49
00:02:34,140 --> 00:02:38,640
For this example, I'll leave SNS topic selected and then select a topic.

50
00:02:38,640 --> 00:02:41,700
Now you can have multiple targets for each rule.

51
00:02:41,700 --> 00:02:43,210
So if you need an additional target,

52
00:02:43,210 --> 00:02:45,900
select Add target and choose the additional target.

53
00:02:45,900 --> 00:02:50,270
If you're happy with the rule and targets, we can select Configure details.

54
00:02:50,270 --> 00:02:54,140
This includes giving the rule a name and an optional description.

55
00:02:54,140 --> 00:02:58,440
We could also untick the Enabled box to leave this rule created, but disabled.

56
00:02:58,440 --> 00:03:02,440
I'm happy with my sentence here, so I can select Create rule.

57
00:03:02,440 --> 00:03:04,540
It should only take a second to create the rule,

58
00:03:04,540 --> 00:03:08,840
and you can see here the rule was successfully created.

59
00:03:08,840 --> 00:03:12,540
We can search for the rule by typing its name in the filler box.

60
00:03:12,540 --> 00:03:16,640
So in the future if I need to edit the rule, I can select it.

61
00:03:16,640 --> 00:03:22,440
We can see the existing rule event pattern and its target.

62
00:03:22,440 --> 00:03:28,740
Then from the actions, we can delete rule, disable rule, or edit rule.

63
00:03:28,740 --> 00:03:30,940
So how would this looking EventBridge?

64
00:03:30,940 --> 00:03:32,740
Let's take a look at that.

65
00:03:32,740 --> 00:03:37,540
So from the Amazon EventBridge dashboard, we could say create rule.

66
00:03:37,540 --> 00:03:40,940
We would give the rule a name and description.

67
00:03:40,940 --> 00:03:45,040
We could then define a pattern, either event pattern or schedule.

68
00:03:45,040 --> 00:03:49,110
So we select event pattern and then choose either a

69
00:03:49,110 --> 00:03:52,540
pre‑defined pattern by service or a custom pattern.

70
00:03:52,540 --> 00:03:56,040
If I choose pre‑defined pattern by service,

71
00:03:56,040 --> 00:04:00,340
choose a service provider, so AWS, the service name,

72
00:04:00,340 --> 00:04:05,940
EC2, and then the event type and the specific event.

73
00:04:05,940 --> 00:04:09,580
So pretty much the same wizard that we saw through CloudWatch itself.

74
00:04:09,580 --> 00:04:11,260
But because this is EventBridge,

75
00:04:11,260 --> 00:04:13,500
we also have additional options for the event bus.

76
00:04:13,500 --> 00:04:15,740
Our selection uses the default event bus.

77
00:04:15,740 --> 00:04:19,040
And you may have noticed that from the Service provider section,

78
00:04:19,040 --> 00:04:20,480
we could have selected Service partners.

79
00:04:20,480 --> 00:04:24,010
If I select that now, then in the service name,

80
00:04:24,010 --> 00:04:29,080
we get a list of partners who have integrated their services with EventBridge.

81
00:04:29,080 --> 00:04:32,370
So Amazon EventBridge makes it easy to integrate with

82
00:04:32,370 --> 00:04:34,740
Software as a Service providers.

83
00:04:34,740 --> 00:04:37,940
Here we change back to our EC2 snapshot creation pattern.

84
00:04:37,940 --> 00:04:43,310
If I scroll to the bottom of this wizard, we get select targets.

85
00:04:43,310 --> 00:04:46,640
And it's the same target list that we saw from CloudWatch itself,

86
00:04:46,640 --> 00:04:49,980
including Lambda, SNS, Step Functions.

87
00:04:49,980 --> 00:04:55,020
And if we select SNS, for example, we get to choose our same topic.

88
00:04:55,020 --> 00:04:57,240
Now I'm not going to complete this wizard.

89
00:04:57,240 --> 00:05:02,940
But to complete it, we'd say Create, and that would put our rule into production.

90
00:05:02,940 --> 00:05:05,670
Back in our CloudWatch dashboard, let's create another rule.

91
00:05:05,670 --> 00:05:09,140
So if I say Create rule, this time we'll select Schedule.

92
00:05:09,140 --> 00:05:11,010
So we want this rule to run every 5 minutes.

93
00:05:11,010 --> 00:05:12,170
That would be a fixed rate.

94
00:05:12,170 --> 00:05:14,280
And here you can see that's already selected.

95
00:05:14,280 --> 00:05:16,050
If we want a more complex rule,

96
00:05:16,050 --> 00:05:19,720
we select cron expression and then configure the expression.

97
00:05:19,720 --> 00:05:22,170
With my schedule in place, I can select Add target.

98
00:05:22,170 --> 00:05:24,830
This time I'll choose a Lambda function,

99
00:05:24,830 --> 00:05:28,190
and then I can select the Lambda function that I want

100
00:05:28,190 --> 00:05:30,040
to be triggered every 5 minutes.

101
00:05:30,040 --> 00:05:33,940
If we're happy with the rule, we can select Configure details.

102
00:05:33,940 --> 00:05:38,140
Again, we provide a name for the rule and an optional description.

103
00:05:38,140 --> 00:05:41,790
If we're happy with that, we can select Create rule.

104
00:05:41,790 --> 00:05:45,140
And our rule was successfully created.

105
00:05:45,140 --> 00:05:48,310
So here we've created two basic rules using CloudWatch Events.

106
00:05:48,310 --> 00:05:56,000
We'll be using CloudWatch Events throughout this course, creating more complex rules for our event response needs.

