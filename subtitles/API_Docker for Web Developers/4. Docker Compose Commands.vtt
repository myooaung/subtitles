WEBVTT
1
00:00:02.840 --> 00:00:05.680
Once you have your docker‑compose.yml file available,

2
00:00:05.680 --> 00:00:09.110
you can go into the Quickstart Terminal and run the Docker

3
00:00:09.110 --> 00:00:11.440
Compose tool and use some different commands that we're going

4
00:00:11.440 --> 00:00:14.040
to talk through real quick here.

5
00:00:14.040 --> 00:00:16.370
So here are a few of the key commands that we're going to be

6
00:00:16.370 --> 00:00:19.740
using in the upcoming sections in this module.

7
00:00:19.740 --> 00:00:22.920
First off, we need to build our services into images,

8
00:00:22.920 --> 00:00:25.770
and we can do that with the Docker Compose tool,

9
00:00:25.770 --> 00:00:28.140
and we can run the build command.

10
00:00:28.140 --> 00:00:29.940
That's it, really simple.

11
00:00:29.940 --> 00:00:32.010
You'll notice there's not a lot to that,

12
00:00:32.010 --> 00:00:34.530
especially if you look back to what we've done when we did

13
00:00:34.530 --> 00:00:38.140
builds in the past with just the Docker client.

14
00:00:38.140 --> 00:00:39.740
Now once you have your images available,

15
00:00:39.740 --> 00:00:43.950
you can then say docker‑compose up to start those up as running containers.

16
00:00:43.950 --> 00:00:47.990
You can tear them down with the docker‑compose down command.

17
00:00:47.990 --> 00:00:51.760
And then you can do a lot of other things in addition to that.

18
00:00:51.760 --> 00:00:53.580
We can view the logs.

19
00:00:53.580 --> 00:00:57.340
We can list the different containers that are running as our services.

20
00:00:57.340 --> 00:01:00.600
We can stop all of the different services and then

21
00:01:00.600 --> 00:01:02.320
start them back up if we'd like.

22
00:01:02.320 --> 00:01:04.030
And then once we've stopped them,

23
00:01:04.030 --> 00:01:09.040
we can even remove the different containers that are making up our services.

24
00:01:09.040 --> 00:01:11.750
Now we're going to be diving into a lot of these as I move

25
00:01:11.750 --> 00:01:14.030
into some of the examples of using them.

26
00:01:14.030 --> 00:01:17.030
But let's walk through the fundamentals of the key ones here,

27
00:01:17.030 --> 00:01:20.740
the build, the up, and the down.

28
00:01:20.740 --> 00:01:24.000
So, earlier, I talked about the Docker workflow involved,

29
00:01:24.000 --> 00:01:25.970
building your services, starting them up,

30
00:01:25.970 --> 00:01:27.240
and then tearing them down.

31
00:01:27.240 --> 00:01:30.540
So let's focus on the build part here.

32
00:01:30.540 --> 00:01:35.010
So, as shown earlier, we can come in and say docker‑compose build,

33
00:01:35.010 --> 00:01:38.510
and that will automatically build or rebuild all of the

34
00:01:38.510 --> 00:01:42.140
different service images that we need that are all defined

35
00:01:42.140 --> 00:01:45.240
in your docker‑compose.yml file.

36
00:01:45.240 --> 00:01:48.580
Now this is great because if you had a bunch of services,

37
00:01:48.580 --> 00:01:51.750
like I showed earlier, maybe NGINX, Node,

38
00:01:51.750 --> 00:01:55.240
Mongo, Redis, and maybe even others, then,

39
00:01:55.240 --> 00:01:57.010
with one simple command,

40
00:01:57.010 --> 00:02:00.640
you can automatically create all the different images that those

41
00:02:00.640 --> 00:02:03.360
services will need to run on your development machine.

42
00:02:03.360 --> 00:02:06.240
So it's really, really nice that way.

43
00:02:06.240 --> 00:02:09.340
Now you can also build individual services.

44
00:02:09.340 --> 00:02:13.640
Oftentimes, as I'm doing this, I make a tweak maybe to a custom Docker file,

45
00:02:13.640 --> 00:02:17.810
or maybe there's just a new version of an image that you want up on Docker Hub,

46
00:02:17.810 --> 00:02:19.840
and you don't want to rebuild everything.

47
00:02:19.840 --> 00:02:22.180
You just want to rebuild one of those services.

48
00:02:22.180 --> 00:02:24.490
Well, you can do one‑off commands as well,

49
00:02:24.490 --> 00:02:30.040
and this would only build or rebuild the Mongo service of course.

50
00:02:30.040 --> 00:02:33.900
Now once you have everything built, we can then start those services up.

51
00:02:33.900 --> 00:02:38.230
And you saw that's very, very simple to do with our docker‑compose up command.

52
00:02:38.230 --> 00:02:41.890
That will automatically create the containers and then fire them up,

53
00:02:41.890 --> 00:02:42.750
start them up.

54
00:02:42.750 --> 00:02:46.240
That includes linking them together if you're doing linking technology or

55
00:02:46.240 --> 00:02:48.620
if you're using bridge networks or whatever it may be.

56
00:02:48.620 --> 00:02:50.330
So very, very simple.

57
00:02:50.330 --> 00:02:52.840
One simple command and you're up and running.

58
00:02:52.840 --> 00:02:53.330
Now, again,

59
00:02:53.330 --> 00:02:57.070
I want to highlight and compare that to what we've done up to this point

60
00:02:57.070 --> 00:03:00.460
in the course where we've had to do individual docker run commands, and

61
00:03:00.460 --> 00:03:02.820
some of those commands get a little bit long.

62
00:03:02.820 --> 00:03:04.010
This is a lot easier.

63
00:03:04.010 --> 00:03:09.280
So this is a great way to simply take a Docker.yml file, do a

64
00:03:09.280 --> 00:03:12.790
docker‑compose build. Once that's built, we can then say

65
00:03:12.790 --> 00:03:16.440
docker‑compose up, and we're off and running.

66
00:03:16.440 --> 00:03:21.220
Now we can also come in and do a docker‑compose up and supply

67
00:03:21.220 --> 00:03:23.740
some other command‑line arguments here.

68
00:03:23.740 --> 00:03:27.600
Maybe there's a particular service we want to bring up individually,

69
00:03:27.600 --> 00:03:31.540
such as Node in this case, you'll notice over to the right here.

70
00:03:31.540 --> 00:03:34.980
And we don't want any of the other dependencies though. Maybe Node

71
00:03:34.980 --> 00:03:38.940
depends on MongoDB or PostgreSQL or something like that.

72
00:03:38.940 --> 00:03:42.940
And we don't want to recreate those other services, just the Node one.

73
00:03:42.940 --> 00:03:43.240
Well,

74
00:03:43.240 --> 00:03:47.220
we can do that with the docker up. That will make sure that the node is

75
00:03:47.220 --> 00:03:51.220
brought back up, but we don't re‑create the other containers that might be

76
00:03:51.220 --> 00:03:56.540
linked into or bridged into the Node container.

77
00:03:56.540 --> 00:03:58.840
So we've now looked at building the services,

78
00:03:58.840 --> 00:04:03.840
starting up the services, and now let's look at tearing down the services.

79
00:04:03.840 --> 00:04:07.030
So the simple command here is docker‑compose down,

80
00:04:07.030 --> 00:04:09.590
and that automatically will take all the containers

81
00:04:09.590 --> 00:04:12.040
and stop them and then remove them.

82
00:04:12.040 --> 00:04:15.670
Now if you don't want to remove them, you could just do docker‑compose stop.

83
00:04:15.670 --> 00:04:19.520
I showed you that a little bit earlier. But down is really nice in cases

84
00:04:19.520 --> 00:04:23.100
where you're kind of done maybe for the day or something like that, and you

85
00:04:23.100 --> 00:04:25.390
just don't want those containers hanging around.

86
00:04:25.390 --> 00:04:28.120
Maybe you're going to be rebuilding your images anyway.

87
00:04:28.120 --> 00:04:31.940
And so you just like to kind of clear all that out.

88
00:04:31.940 --> 00:04:35.150
Now if you'd also like to not only stop the containers,

89
00:04:35.150 --> 00:04:38.670
remove the containers, but also remove all the images, then you can

90
00:04:38.670 --> 00:04:44.110
add some extra switches here. You can do ‑‑rmi all would remove all

91
00:04:44.110 --> 00:04:46.930
the different images that we have associated with those services.

92
00:04:46.930 --> 00:04:51.430
And then you can even remove any volumes associated with those with

93
00:04:51.430 --> 00:04:54.340
just a very, very simple command you can see.

94
00:04:54.340 --> 00:04:56.860
So, again, you can imagine if you had five containers

95
00:04:56.860 --> 00:04:59.370
running or more, this provides a really,

96
00:04:59.370 --> 00:05:02.070
really easy way to not only stop those and remove them,

97
00:05:02.070 --> 00:05:06.100
but even remove all the different images and all the containers associated

98
00:05:06.100 --> 00:05:09.310
with those instead of having to do that individually,

99
00:05:09.310 --> 00:05:11.740
like we've done up to this point.

100
00:05:11.740 --> 00:05:13.670
Now there are a lot of other commands you can run,

101
00:05:13.670 --> 00:05:16.110
but those are the key ones that you're going to start seeing

102
00:05:16.110 --> 00:05:24.000
as we look at Docker Compose in action. So let's jump on into the next section here, and let's put this to use.

