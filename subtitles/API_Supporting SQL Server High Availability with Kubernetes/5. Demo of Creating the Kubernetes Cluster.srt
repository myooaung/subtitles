1
00:00:01,440 --> 00:00:03,980
Okay, I know that was a lot of code to cover.

2
00:00:03,980 --> 00:00:07,110
Now let's get to the fun stuff, and we'll see this in action.

3
00:00:07,110 --> 00:00:10,850
First, we're going to look at creating and connecting to our Kubernetes cluster.

4
00:00:10,850 --> 00:00:13,240
Then we're going to look at creating the external storage for

5
00:00:13,240 --> 00:00:15,440
the three pods that we're going to be using.

6
00:00:15,440 --> 00:00:18,570
And then we're going to create three SQL Server deployments,

7
00:00:18,570 --> 00:00:24,840
one for the availability replica primary and two others for the secondaries.

8
00:00:24,840 --> 00:00:30,410
Okay, so now to run all this stuff, we've switched over to our Ubuntu system,

9
00:00:30,410 --> 00:00:33,880
and this is Visual Studio Code again that you see here that we're

10
00:00:33,880 --> 00:00:37,050
going to use to display and run the code with.

11
00:00:37,050 --> 00:00:40,000
And here is the first set of code that we're going to run

12
00:00:40,000 --> 00:00:42,240
to go ahead and create our cluster.

13
00:00:42,240 --> 00:00:46,240
You can see in it, az group create, create ‑‑resource‑group,

14
00:00:46,240 --> 00:00:47,060
and after that,

15
00:00:47,060 --> 00:00:51,360
creating our cluster with a node count of 3 and using the

16
00:00:51,360 --> 00:00:57,660
‑‑node‑vm‑size of Standard_B2ms. So, let's go ahead and run this.

17
00:00:57,660 --> 00:01:02,840
And, we are executing the create cluster code.

18
00:01:02,840 --> 00:01:06,240
It takes it just a couple minutes to do this.

19
00:01:06,240 --> 00:01:09,340
So, I'm going to go ahead and let this run,

20
00:01:09,340 --> 00:01:15,440
then I'm going to come back to it when we've got it finished.

21
00:01:15,440 --> 00:01:18,080
Okay, that took it about 3 minutes.

22
00:01:18,080 --> 00:01:22,650
And now we have a 3‑node cluster running up in Azure.

23
00:01:22,650 --> 00:01:24,750
Now let's go ahead and get the credentials for that

24
00:01:24,750 --> 00:01:28,340
cluster, so we can manage it with kubectl.

25
00:01:28,340 --> 00:01:30,390
So here's the code that does that,

26
00:01:30,390 --> 00:01:35,340
and we'll execute step2 to get our credentials.

27
00:01:35,340 --> 00:01:42,740
So it's going ahead and connecting and overriding our local config.

28
00:01:42,740 --> 00:01:45,540
And at this point, we've got the credentials back.

29
00:01:45,540 --> 00:01:50,440
Now let's go ahead and list the nodes in our cluster.

30
00:01:50,440 --> 00:01:53,700
And there you can see our three nodes are out there running.

31
00:01:53,700 --> 00:01:57,700
They haven't been running long, and they're fresh out of the box.

32
00:01:57,700 --> 00:01:59,510
So now that we've done that,

33
00:01:59,510 --> 00:02:05,720
let's go ahead and create the storage that we're going to use here.

34
00:02:05,720 --> 00:02:09,670
And you can see here our kubectl apply command. And now let's

35
00:02:09,670 --> 00:02:12,250
have a quick look at that storage command again.

36
00:02:12,250 --> 00:02:15,610
We have looked at this in some detail just a minute ago,

37
00:02:15,610 --> 00:02:18,690
but you can see our StorageClass.

38
00:02:18,690 --> 00:02:21,580
You can see the type of storage we're using.

39
00:02:21,580 --> 00:02:25,040
There's our first PersistentVolumeClaim.

40
00:02:25,040 --> 00:02:29,140
If we can scroll down, there's our second PersistentVolumeClaim,

41
00:02:29,140 --> 00:02:32,030
and there is our third PersistentVolumeClaim.

42
00:02:32,030 --> 00:02:34,860
Each one is going to be used by a different SQL

43
00:02:34,860 --> 00:02:37,840
replica in our availability group.

44
00:02:37,840 --> 00:02:41,940
So, let's go ahead and execute this.

45
00:02:41,940 --> 00:02:46,570
All our persistent volume claims have been created.

46
00:02:46,570 --> 00:02:50,650
Now, let's go ahead and display the storage like we did before.

47
00:02:50,650 --> 00:02:56,940
And we're going to be executing these two kubectl commands to do that.

48
00:02:56,940 --> 00:03:01,380
And you can see our StorageClass, you can see our access

49
00:03:01,380 --> 00:03:04,660
mode, and then at the bottom, you can see our persistent

50
00:03:04,660 --> 00:03:07,940
volume claims and their capacities.

51
00:03:07,940 --> 00:03:09,840
Let's go ahead and bring that back.

52
00:03:09,840 --> 00:03:11,220
Now,

53
00:03:11,220 --> 00:03:15,360
let's go ahead and create the secret for our cluster, which is

54
00:03:15,360 --> 00:03:20,540
going to hold our SQL Server SA password.

55
00:03:20,540 --> 00:03:22,550
And we've gone ahead and done that.

56
00:03:22,550 --> 00:03:26,840
Now, we're ready to go ahead and create our deployments.

57
00:03:26,840 --> 00:03:31,810
So if we look at this, you can see we're going to be running kubectl apply.

58
00:03:31,810 --> 00:03:35,070
We're going to be running it three times, once for the

59
00:03:35,070 --> 00:03:41,150
sqlAGPdeployment.yaml, and a second time for the sqlAGS1deployment.yaml,

60
00:03:41,150 --> 00:03:47,270
and the third time for the sqlAGS2deployment.yaml. The first one creates

61
00:03:47,270 --> 00:03:50,640
the primary, the next two create the two secondaries.

62
00:03:50,640 --> 00:03:53,140
Let's take a quick look at those .yaml files.

63
00:03:53,140 --> 00:03:56,510
We won't spend a lot of time here because we did explain

64
00:03:56,510 --> 00:04:00,440
them previously, but this is the primary.

65
00:04:00,440 --> 00:04:06,760
You can check out the name that we're using, the number of replicas. And there

66
00:04:06,760 --> 00:04:13,050
is our app identifier. If we scroll down a little bit more,

67
00:04:13,050 --> 00:04:16,630
we can see our hostname, and we can see the image we're

68
00:04:16,630 --> 00:04:24,340
using, the environment variables, the SA_PASSWORD, our memory limitation.

69
00:04:24,340 --> 00:04:25,520
And, of course,

70
00:04:25,520 --> 00:04:29,020
then the persistentVolumeClaim that we're going to use. And

71
00:04:29,020 --> 00:04:32,320
finally, the load balancing service to use with it,

72
00:04:32,320 --> 00:04:38,440
which is opening up the two ports, 1433 and 5022.

73
00:04:38,440 --> 00:04:41,230
If we have a quick look at the other two .yaml files,

74
00:04:41,230 --> 00:04:43,890
you can see they are all very similar.

75
00:04:43,890 --> 00:04:46,250
They follow the same pattern.

76
00:04:46,250 --> 00:04:52,040
Each has a different name, and this one is mssql‑secondary1‑deployment.

77
00:04:52,040 --> 00:04:53,550
The replicas are the same.

78
00:04:53,550 --> 00:04:56,610
Our app label, again, is different.

79
00:04:56,610 --> 00:05:01,540
If we scroll down, our hostname will be mssql‑secondary1.

80
00:05:01,540 --> 00:05:06,510
Our image name will be mssql‑secondary1. All the

81
00:05:06,510 --> 00:05:08,500
environment variables are the same.

82
00:05:08,500 --> 00:05:13,740
If we come down, you can see we're using a different persistentVolumeClaim here.

83
00:05:13,740 --> 00:05:21,440
And our app selector is different, and our ports are the same, 1433 and 5022.

84
00:05:21,440 --> 00:05:22,810
Same is true with this file.

85
00:05:22,810 --> 00:05:27,330
If we go and look at sqlAGS2deployment, and we can scroll

86
00:05:27,330 --> 00:05:29,810
through this file and start at the top again.

87
00:05:29,810 --> 00:05:33,920
We've got a different name. Our app name is different,

88
00:05:33,920 --> 00:05:41,360
mssql‑secondary2. And our hostname, mssql‑secondary2. Environment

89
00:05:41,360 --> 00:05:45,660
variables are all the same. Our mountPath, again, is different using

90
00:05:45,660 --> 00:05:51,810
that third volume claim that we created, mssql ‑ s2db. And our

91
00:05:51,810 --> 00:05:57,870
service is matching our app name of mssql‑secondary2. And then, we

92
00:05:57,870 --> 00:06:00,040
have our two ports that are open.

93
00:06:00,040 --> 00:06:09,330
So, let's go ahead and create our deployment. And, at this point,

94
00:06:09,330 --> 00:06:11,410
our deployment is created.

95
00:06:11,410 --> 00:06:13,950
So now, we have nodes,

96
00:06:13,950 --> 00:06:20,440
we have pods, and a load balancing service, and persistent volume claims.

97
00:06:20,440 --> 00:06:23,940
So now, let's go ahead and have a look at our deployment

98
00:06:23,940 --> 00:06:28,290
status, and we can do that by running this code. And we are

99
00:06:28,290 --> 00:06:32,940
going to run kubectl get all to do that.

100
00:06:32,940 --> 00:06:35,530
And, if we open this up again,

101
00:06:35,530 --> 00:06:40,130
let's go make it a little bigger so we can see it,

102
00:06:40,130 --> 00:06:44,160
there's our get status command.

103
00:06:44,160 --> 00:06:47,220
There are three pods that are running right now since they've just

104
00:06:47,220 --> 00:06:52,680
been created there in the STATUS of ContainerCreating. It is in the

105
00:06:52,680 --> 00:06:56,510
process also of assigning external IP addresses for the services

106
00:06:56,510 --> 00:06:59,050
that are running out there.

107
00:06:59,050 --> 00:07:04,840
And at the bottom, you can see our replica sets.

108
00:07:04,840 --> 00:07:07,850
Okay, let's check it one more time.

109
00:07:07,850 --> 00:07:11,710
And now, we can see our pods are all running.

110
00:07:11,710 --> 00:07:14,650
We have external IP addresses,

111
00:07:14,650 --> 00:07:19,540
and our replica sets are ready to go in their desired states.

112
00:07:19,540 --> 00:07:20,940
So let's bring this back.

113
00:07:20,940 --> 00:07:21,690
And, in fact,

114
00:07:21,690 --> 00:07:25,660
let's go ahead and flip over really quickly, and we'll run Azure

115
00:07:25,660 --> 00:07:30,090
Data Studio, and we're going to go ahead and connect into it. So

116
00:07:30,090 --> 00:07:33,340
we'll paste in our server address,

117
00:07:33,340 --> 00:07:40,740
our sa login, and then we'll connect, and there we're connected.

118
00:07:40,740 --> 00:07:45,440
Now remember, at this point, we have our databases ready to go.

119
00:07:45,440 --> 00:07:47,910
It only has the system databases on it.

120
00:07:47,910 --> 00:07:51,680
It's basically a plain vanilla SQL Server system.

121
00:07:51,680 --> 00:07:52,370
But remember,

122
00:07:52,370 --> 00:07:56,260
there are also two other systems running out here at the same time, too.

123
00:07:56,260 --> 00:07:57,510
And if you pay attention,

124
00:07:57,510 --> 00:08:05,000
take a look at our computer name, it's the name of the host that we just recently assigned to it.

