1
00:00:01,340 --> 00:00:03,990
So let's start off with a little background about SQL

2
00:00:03,990 --> 00:00:06,290
Server AlwaysOn Availability Groups.

3
00:00:06,290 --> 00:00:07,170
Originally,

4
00:00:07,170 --> 00:00:11,220
SQL Server AlwaysOn Availability Groups were designed to provide

5
00:00:11,220 --> 00:00:14,800
database high availability and disaster recovery.

6
00:00:14,800 --> 00:00:17,470
They are a replacement for the older and more

7
00:00:17,470 --> 00:00:19,690
limited database mirroring technology.

8
00:00:19,690 --> 00:00:23,440
And, like you might expect, they originated on Windows,

9
00:00:23,440 --> 00:00:29,340
and Microsoft later brought them over to the Linux version of SQL Server.

10
00:00:29,340 --> 00:00:33,300
AlwaysOn Availability Groups are designed to provide database‑level

11
00:00:33,300 --> 00:00:37,890
protection and availability by replicating the changes from a primary

12
00:00:37,890 --> 00:00:42,100
availability group replica to one or more secondaries.

13
00:00:42,100 --> 00:00:44,650
They can protect multiple databases,

14
00:00:44,650 --> 00:00:48,010
and there can be multiple secondary replicas.

15
00:00:48,010 --> 00:00:50,420
In a typical availability scenario,

16
00:00:50,420 --> 00:00:54,070
each availability group supports one primary replica

17
00:00:54,070 --> 00:00:56,940
and up to eight secondary replicas.

18
00:00:56,940 --> 00:01:01,820
There can be up to three synchronous replicas, and the rest can be asynchronous.

19
00:01:01,820 --> 00:01:06,410
A single distributed clusterless availability group can

20
00:01:06,410 --> 00:01:10,040
have up to 17 readable secondary replicas.

21
00:01:10,040 --> 00:01:14,600
The replicas can use a mixture of both synchronous and asynchronous connections.

22
00:01:14,600 --> 00:01:17,990
Synchronous replicas are often used for high availability

23
00:01:17,990 --> 00:01:20,540
as they provide near zero data loss,

24
00:01:20,540 --> 00:01:24,440
while asynchronous replicas are often used for disaster recovery,

25
00:01:24,440 --> 00:01:28,010
and they can be implemented across geographic boundaries where

26
00:01:28,010 --> 00:01:31,190
there can be significant latency between the nodes.

27
00:01:31,190 --> 00:01:35,490
Connections between the primary and secondaries can be highly secure.

28
00:01:35,490 --> 00:01:40,270
Availability Groups support both encrypted data streams for security and

29
00:01:40,270 --> 00:01:43,740
compressed data streams for improved network utilization.

30
00:01:43,740 --> 00:01:46,140
In a high availability scenario,

31
00:01:46,140 --> 00:01:50,280
availability groups support both automatic and manual failover.

32
00:01:50,280 --> 00:01:53,990
Availability groups were initially designed to be run and

33
00:01:53,990 --> 00:01:58,030
to provide high availability for SQL Server instances in

34
00:01:58,030 --> 00:01:59,710
Windows Failover Clusters.

35
00:01:59,710 --> 00:02:03,210
Then, as Microsoft ported SQL Server to Linux,

36
00:02:03,210 --> 00:02:06,890
they extended the cluster support to Linux Pacemaker.

37
00:02:06,890 --> 00:02:10,130
However, with SQL Server 2017,

38
00:02:10,130 --> 00:02:15,040
Microsoft added the addition of a clusterless availability group

39
00:02:15,040 --> 00:02:19,250
that provided read scale for multiple SQL Server instances

40
00:02:19,250 --> 00:02:22,300
without requiring any type of cluster.

41
00:02:22,300 --> 00:02:25,630
This is the type of availability group implementation that

42
00:02:25,630 --> 00:02:28,340
we're going to be covering in this module.

43
00:02:28,340 --> 00:02:30,930
So this slide gives us an overview of SQL Server

44
00:02:30,930 --> 00:02:33,580
Availability Groups and their capabilities.

45
00:02:33,580 --> 00:02:38,540
There is one primary replica, and there can be multiple secondary replicas.

46
00:02:38,540 --> 00:02:41,510
You can have up to eight secondary replicas.

47
00:02:41,510 --> 00:02:46,900
Three of those replicas can be synchronous, and the rest can be a synchronous.

48
00:02:46,900 --> 00:02:51,330
So you can mix and match synchronous replicas in an availability group.

49
00:02:51,330 --> 00:02:55,850
In the past, this was done for high availability and disaster recovery.

50
00:02:55,850 --> 00:02:58,880
So synchronous was used for high availability,

51
00:02:58,880 --> 00:03:02,280
and asynchronous was used for disaster recovery.

52
00:03:02,280 --> 00:03:06,000
There are differences for availability group capabilities

53
00:03:06,000 --> 00:03:09,500
depending on which edition of SQL Server you're using.

54
00:03:09,500 --> 00:03:14,930
The full‑featured availability group is available in the enterprise edition,

55
00:03:14,930 --> 00:03:19,720
while the standard edition provides a two‑node availability group,

56
00:03:19,720 --> 00:03:23,190
which can provide protection for one database.

57
00:03:23,190 --> 00:03:23,810
However,

58
00:03:23,810 --> 00:03:28,770
you can have multiple availability groups defined in your standard

59
00:03:28,770 --> 00:03:33,470
edition, multiple two‑node availability groups. And with availability

60
00:03:33,470 --> 00:03:36,720
groups, you can have readable secondaries,

61
00:03:36,720 --> 00:03:41,790
and that means you can offload or scale out processing to these

62
00:03:41,790 --> 00:03:47,680
secondaries for things like reporting, ETL, or backups. Now let's have

63
00:03:47,680 --> 00:03:50,840
a quick look at how availability groups work.

64
00:03:50,840 --> 00:03:53,540
The databases that are going to be part of an availability

65
00:03:53,540 --> 00:03:56,340
group are defined on the primary replica.

66
00:03:56,340 --> 00:04:00,360
Next, secondary replicas are added to the availability group.

67
00:04:00,360 --> 00:04:03,500
As users work with their database applications,

68
00:04:03,500 --> 00:04:07,750
they create transactions that add, update, and delete data in the

69
00:04:07,750 --> 00:04:10,520
databases that are part of the availability group.

70
00:04:10,520 --> 00:04:14,240
These transactions are then captured by the primary replica

71
00:04:14,240 --> 00:04:17,620
and forwarded to the secondary replicas.

72
00:04:17,620 --> 00:04:21,350
The connections between these primary and secondary replicas can

73
00:04:21,350 --> 00:04:24,500
be either synchronous or asynchronous or both.

74
00:04:24,500 --> 00:04:29,880
If a given secondary replica is configured for asynchronous replication.

75
00:04:29,880 --> 00:04:35,140
The primary replica does not wait for the secondary replica to harden its log.

76
00:04:35,140 --> 00:04:38,890
This provides faster performance, but can result in some data

77
00:04:38,890 --> 00:04:44,260
loss. For synchronous commit mode, the primary replica waits for

78
00:04:44,260 --> 00:04:48,220
the secondary replica to confirm that it has received the

79
00:04:48,220 --> 00:04:50,970
transaction before it hardens its log.

80
00:04:50,970 --> 00:04:54,040
The primary replica will then write the transaction

81
00:04:54,040 --> 00:05:02,000
to its disk or hardens its log. This is slower, but there is no data loss for synchronous replicas.

