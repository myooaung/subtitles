1
00:00:01,214 --> 00:00:02,401
In the last section of this module,

2
00:00:02,401 --> 00:00:07,789
we'll learn how to create our very own entirely custom actuator endpoints.

3
00:00:07,789 --> 00:00:08,570
In typical fashion,

4
00:00:08,570 --> 00:00:12,932
Spring Boot makes it very easy to create your own custom endpoints.

5
00:00:12,932 --> 00:00:18,619
Simply create and register a new bean annotated with the @Endpoint annotation.

6
00:00:18,619 --> 00:00:22,743
Then utilize one of the @ReadOperation, @WriteOperation,

7
00:00:22,743 --> 00:00:29,303
or @DeleteOperation annotations to annotate operational methods that expose,

8
00:00:29,303 --> 00:00:32,164
record, or delete information.

9
00:00:32,164 --> 00:00:34,403
Let's take a look at some example code.

10
00:00:34,403 --> 00:00:36,476
Suppose you wanted to create your own actuator endpoint

11
00:00:36,476 --> 00:00:39,489
that gave you information about the Docker container that

12
00:00:39,489 --> 00:00:41,441
your application was running in.

13
00:00:41,441 --> 00:00:42,195
As we just learned,

14
00:00:42,195 --> 00:00:45,687
we'll need to create a new class registered as a bean with the

15
00:00:45,687 --> 00:00:49,801
@Component annotation and then add the @Endpoint annotation to

16
00:00:49,801 --> 00:00:53,003
designate that it's an actuator endpoint.

17
00:00:53,003 --> 00:00:57,848
Then we need to create methods for gathering information and performing actions.

18
00:00:57,848 --> 00:00:58,600
To gather information,

19
00:00:58,600 --> 00:01:03,116
we create a new method and annotate it with the @ReadOperation annotation,

20
00:01:03,116 --> 00:01:07,937
and in this method, we could gather things like the name of the Docker container,

21
00:01:07,937 --> 00:01:10,681
its version, or maybe some statistics.

22
00:01:10,681 --> 00:01:11,502
To perform actions,

23
00:01:11,502 --> 00:01:15,165
we create a new method annotated with the @WriteOperation

24
00:01:15,165 --> 00:01:18,733
annotation and then we could use this method for actually

25
00:01:18,733 --> 00:01:26,000
performing some Docker related action, such as restarting the container or running a Docker command.

