WEBVTT
1
00:00:01.342 --> 00:00:03.799
Now let's talk about exposing endpoints.

2
00:00:03.799 --> 00:00:05.503
In earlier versions of Spring Boot,

3
00:00:05.503 --> 00:00:08.856
enabling an endpoint meant that it was automatically exposed.

4
00:00:08.856 --> 00:00:13.457
Since Spring Boot 2.0, you must explicitly expose endpoints.

5
00:00:13.457 --> 00:00:16.408
Exposing an endpoint makes it available for consumption,

6
00:00:16.408 --> 00:00:20.326
so for instance, if you wanted to be able to access the endpoint via HTTP,

7
00:00:20.326 --> 00:00:25.091
you would need to ensure that it's exposed via HTTP.

8
00:00:25.091 --> 00:00:27.370
Just like enabling and disabling endpoints,

9
00:00:27.370 --> 00:00:30.164
Spring Boot Actuator allows you to configure what endpoints

10
00:00:30.164 --> 00:00:33.413
are included or excluded for exposure.

11
00:00:33.413 --> 00:00:34.756
As of recording this course,

12
00:00:34.756 --> 00:00:38.602
there are two supported methods for exposing actuator endpoints,

13
00:00:38.602 --> 00:00:41.512
HTTP and JMX.

14
00:00:41.512 --> 00:00:45.654
By default, all endpoints are automatically exposed via JMX.

15
00:00:45.654 --> 00:00:49.348
Consuming endpoint data via HTTP is typically the more

16
00:00:49.348 --> 00:00:52.360
popular method used and endpoints are not,

17
00:00:52.360 --> 00:00:57.739
however, exposed via HTTP by default and you must configure them to do so.

18
00:00:57.739 --> 00:01:02.337
The only exceptions to this are the health endpoint and the info endpoint.

19
00:01:02.337 --> 00:01:04.336
It's very important to point out the dangers of

20
00:01:04.336 --> 00:01:07.157
exposing endpoints if they're not secured,

21
00:01:07.157 --> 00:01:08.807
especially via HTTP.

22
00:01:08.807 --> 00:01:11.084
We'll talk about securing endpoints in later sections,

23
00:01:11.084 --> 00:01:15.169
but I wanted to point this out now to emphasize its importance.

24
00:01:15.169 --> 00:01:16.109
Depending on the endpoint,

25
00:01:16.109 --> 00:01:19.321
exposing it to the public without any security could unnecessarily

26
00:01:19.321 --> 00:01:24.231
expose sensitive data or even worse sensitive operations.

27
00:01:24.231 --> 00:01:28.049
It's really easy to expose endpoints via some configuration values.

28
00:01:28.049 --> 00:01:28.866
In this example,

29
00:01:28.866 --> 00:01:32.034
we'll use the application to our properties to show the configuration,

30
00:01:32.034 --> 00:01:37.041
but this same configuration can be equally applied to an application.yml.

31
00:01:37.041 --> 00:01:39.650
Just like enabling or disabling endpoints,

32
00:01:39.650 --> 00:01:44.036
the properties for exposing endpoints follow a standard naming convention,

33
00:01:44.036 --> 00:01:47.011
management.endpoint .protocol,

34
00:01:47.011 --> 00:01:54.228
and remember this could be one of HTTP or JMX .expose .include or exclude.

35
00:01:54.228 --> 00:01:56.670
For example, if you only wanted to expose the metrics endpoint,

36
00:01:56.670 --> 00:02:04.044
you'd set the property.management .endpoint .http .expose .include equals to

37
00:02:04.044 --> 00:02:08.564
metrics where metrics is the ID of the metrics endpoint.

38
00:02:08.564 --> 00:02:09.710
And as another example,

39
00:02:09.710 --> 00:02:13.856
suppose you didn't want to expose the beans endpoint via JMX,

40
00:02:13.856 --> 00:02:15.677
you'd set the property in a similar manner,

41
00:02:15.677 --> 00:02:20.204
management.endpoint .jmx, instead of HTTP,

42
00:02:20.204 --> 00:02:23.889
.expose .exclude, instead of include,

43
00:02:23.889 --> 00:02:28.776
and then equals beans where beans is the ID of the beans endpoint.

44
00:02:28.776 --> 00:02:28.971
Lastly,

45
00:02:28.971 --> 00:02:31.550
it's important to note that there is a special asterisks value

46
00:02:31.550 --> 00:02:34.452
which can be used to match all endpoints.

47
00:02:34.452 --> 00:02:38.499
For instance, you could use it to expose all HTTP endpoints at once.

48
00:02:38.499 --> 00:02:39.891
Also, just a heads up,

49
00:02:39.891 --> 00:02:42.369
if you're configuring these properties in an application.yml,

50
00:02:42.369 --> 00:02:44.059
instead of an application.properties,

51
00:02:44.059 --> 00:02:51.000
make sure you surround the asterisks with quotes as asterisks have a special meaning in YAML.

