1
00:00:01,247 --> 00:00:03,779
Since we recently discussed the importance of ensuring that

2
00:00:03,779 --> 00:00:05,478
exposed endpoints are properly secure,

3
00:00:05,478 --> 00:00:08,759
let's talk about how you actually secure them.

4
00:00:08,759 --> 00:00:13,408
Spring Boot has made it extremely easy to add security to endpoints.

5
00:00:13,408 --> 00:00:17,834
In fact, if Spring Boot detects that you have Spring Security on the classpath,

6
00:00:17,834 --> 00:00:23,797
it will automatically secure exposed endpoints with HTTP basic authentication.

7
00:00:23,797 --> 00:00:27,844
There are two exceptions to this, the health endpoint and the info endpoint.

8
00:00:27,844 --> 00:00:29,157
With the default configuration,

9
00:00:29,157 --> 00:00:32,969
the health endpoint only returns whether the app is healthy or

10
00:00:32,969 --> 00:00:35,850
unhealthy if it's requested without authentication.

11
00:00:35,850 --> 00:00:36,663
It can, however,

12
00:00:36,663 --> 00:00:40,620
be further configured to show additional details if credentials are provided

13
00:00:40,620 --> 00:00:44,787
and the info endpoint is not meant to contain sensitive data.

14
00:00:44,787 --> 00:00:45,627
There is, however,

15
00:00:45,627 --> 00:00:49,282
nothing that enforces this so please be aware that it's not secured by

16
00:00:49,282 --> 00:00:53,025
default and should not contain any sensitive information.

17
00:00:53,025 --> 00:00:57,652
We'll cover the info endpoint in a bit more detail in the following sections.

18
00:00:57,652 --> 00:00:58,438
So in short,

19
00:00:58,438 --> 00:01:01,113
adding security to your endpoints is as simple as

20
00:01:01,113 --> 00:01:03,387
adding a dependency to your project.

21
00:01:03,387 --> 00:01:06,910
Let's quickly cover how to do that with Maven and Gradle.

22
00:01:06,910 --> 00:01:07,494
With Maven,

23
00:01:07,494 --> 00:01:11,002
you add a dependency on Spring Boot Starter Security to

24
00:01:11,002 --> 00:01:14,265
the Dependency section of your pom.xml.

25
00:01:14,265 --> 00:01:16,325
With Gradle, the process is similar.

26
00:01:16,325 --> 00:01:20,165
You add a new dependency on spring-boot-starter-security to

27
00:01:20,165 --> 00:01:23,606
your build.gradle in the dependencies block.

28
00:01:23,606 --> 00:01:25,427
Without any additional configuration,

29
00:01:25,427 --> 00:01:29,037
Spring Boot will automatically create a random password if

30
00:01:29,037 --> 00:01:31,405
spring security is on the classpath.

31
00:01:31,405 --> 00:01:34,542
This random password is printed to the console on

32
00:01:34,542 --> 00:01:38,206
startup and the default username is user.

33
00:01:38,206 --> 00:01:43,282
Spring security can also be configured with the specific username and password.

34
00:01:43,282 --> 00:01:49,741
Simply set this spring.security .user .name and .password properties in

35
00:01:49,741 --> 00:01:53,875
the application.properties or the application.yml.

36
00:01:53,875 --> 00:01:57,582
Since endpoint security is controlled by this spring security framework,

37
00:01:57,582 --> 00:02:01,264
it should come as no surprise that it's entirely customizable.

38
00:02:01,264 --> 00:02:02,386
To customize this security,

39
00:02:02,386 --> 00:02:06,636
create a new class annotated with the @Configuration annotation

40
00:02:06,636 --> 00:02:11,054
that extends WebSecurityConfigurerAdapter.

41
00:02:11,054 --> 00:02:14,798
The web security configurer adapter has one method to implement

42
00:02:14,798 --> 00:02:19,626
called configure and it passes in an HTTP security object that can

43
00:02:19,626 --> 00:02:22,426
be used to implement your customizations.

44
00:02:22,426 --> 00:02:23,209
In this example,

45
00:02:23,209 --> 00:02:26,030
we customize the endpoint to also require

46
00:02:26,030 --> 00:02:29,038
authorization in addition to authentication.

47
00:02:29,038 --> 00:02:32,543
In order to access this endpoint, the requestor must have authenticated,

48
00:02:32,543 --> 00:02:35,405
as well as have the role of admin.

49
00:02:35,405 --> 00:02:37,381
At this point, we've talked about enabling,

50
00:02:37,381 --> 00:02:40,839
disabling, exposing, and securing endpoints.

51
00:02:40,839 --> 00:02:43,631
Now let's talk about customizing endpoints.

52
00:02:43,631 --> 00:02:48,504
A subset of the overall endpoints come with inherent support for customizations,

53
00:02:48,504 --> 00:02:51,394
particularly the health endpoint, the info endpoint,

54
00:02:51,394 --> 00:02:52,993
and the metrics endpoint.

55
00:02:52,993 --> 00:02:58,000
We'll take a look at each of these in a bit more detail in the following sections.

