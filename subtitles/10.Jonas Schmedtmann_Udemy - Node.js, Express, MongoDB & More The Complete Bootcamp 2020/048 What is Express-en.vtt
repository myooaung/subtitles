WEBVTT
1
00:00:01.350 --> 00:00:02.710
<v Instructor>So, from now on</v>

2
00:00:02.710 --> 00:00:05.670
we are gonna use Express in our application.

3
00:00:05.670 --> 00:00:07.480
So the logical question is now

4
00:00:07.480 --> 00:00:10.393
what is Express and why should we use it?

5
00:00:11.460 --> 00:00:15.460
So, Express is a minimal node.js framework,

6
00:00:15.460 --> 00:00:19.530
which means it is actually built on top of node.js.

7
00:00:19.530 --> 00:00:22.533
Basically it's a higher level of abstraction,

8
00:00:22.533 --> 00:00:23.940
but, behind the scenes,

9
00:00:23.940 --> 00:00:28.940
Express is written 100% using node.js code, okay?

10
00:00:28.950 --> 00:00:32.031
It's also the most popular node.js framework, by the way.

11
00:00:32.031 --> 00:00:33.590
There are a couple of others,

12
00:00:33.590 --> 00:00:36.053
but Express has kind of become the standard here.

13
00:00:36.890 --> 00:00:39.450
So, Express contains a very robust

14
00:00:39.450 --> 00:00:41.450
and very useful set of features.

15
00:00:41.450 --> 00:00:43.240
Things like complex routing,

16
00:00:43.240 --> 00:00:45.874
easier handling of requests and responses,

17
00:00:45.874 --> 00:00:48.610
adding middleware, server-side rendering,

18
00:00:48.610 --> 00:00:52.258
and much, much more are all included out of the box.

19
00:00:52.258 --> 00:00:56.060
And this of course allows us to write node.js applications

20
00:00:56.060 --> 00:00:58.360
so much faster than before

21
00:00:58.360 --> 00:01:01.320
because we don't have to reinvent the wheel, basically.

22
00:01:01.320 --> 00:01:04.007
We don't have to repeat the same code over and over again

23
00:01:04.007 --> 00:01:06.610
each time that we need to implement

24
00:01:06.610 --> 00:01:09.380
some really complex routing, for example,

25
00:01:09.380 --> 00:01:12.070
or some templating system or something like that.

26
00:01:12.070 --> 00:01:14.540
So all of that is already included in Express,

27
00:01:14.540 --> 00:01:16.260
ready for us to use.

28
00:01:16.260 --> 00:01:18.100
For example, remember how we did

29
00:01:18.100 --> 00:01:20.163
some extremely simple routing

30
00:01:20.163 --> 00:01:22.860
right in the intersection of this course,

31
00:01:22.860 --> 00:01:26.520
but it was still not really straightforward to implement it.

32
00:01:26.520 --> 00:01:28.020
But, with Express, it's gonna

33
00:01:28.020 --> 00:01:30.951
be like ten times more simple you will see.

34
00:01:30.951 --> 00:01:33.480
Also, Express makes it easier

35
00:01:33.480 --> 00:01:37.210
to organize our application into the MVC architecture,

36
00:01:37.210 --> 00:01:40.680
which is a very popular software architecture pattern

37
00:01:40.680 --> 00:01:43.640
that we're gonna explore during this course.

38
00:01:43.640 --> 00:01:46.170
So, in conclusion, Express will make

39
00:01:46.170 --> 00:01:48.750
our lives with node.js so much easier

40
00:01:48.750 --> 00:01:52.190
and experience really is so much more pleasant.

41
00:01:52.190 --> 00:01:55.090
So I can't wait to show it to you throughout this section.

