1
00:00:00,570 --> 00:00:01,190
Alles klar Jungs.

2
00:00:01,230 --> 00:00:04,210
Hier ist der Moment der Wahrheit.

3
00:00:04,260 --> 00:00:11,000
Es macht keinen Spaß, einen Newsletter für die Web-App anzumelden, wenn wir uns nur über das lokale Host-Recht anmelden können.

4
00:00:11,310 --> 00:00:18,480
Stellen wir also unsere Web-App bereit, damit wir jedem den Link senden können und er auf unseren Server zugreifen

5
00:00:18,480 --> 00:00:25,080
kann, um sich für unseren Newsletter anzumelden und dieses lokale Host-Geschäft loszuwerden, da wir nicht mehr

6
00:00:25,080 --> 00:00:26,760
nur statische Websites bereitstellen.

7
00:00:26,820 --> 00:00:34,350
Wir können keine Hub-Seiten oder Server verwenden, die nur statischen Inhalt unterstützen, es sei denn, wir möchten unseren eigenen Service-Stack

8
00:00:34,470 --> 00:00:39,880
erstellen und mit lauten Servern leben, die rund um die Uhr ausgeführt werden.

9
00:00:39,900 --> 00:00:42,990
Und glauben Sie mir, es ist sehr laut und es ist sehr heiß.

10
00:00:42,990 --> 00:00:49,140
Ich habe das schon einmal gemacht und es macht viel Spaß, aber niemand wird jemals mit dir leben wollen, es sei denn,

11
00:00:49,140 --> 00:00:51,180
du bist in Island oder so.

12
00:00:51,180 --> 00:00:57,240
Das Kaufen und Einrichten eigener Server ist eine Menge Arbeit, da Sie sie rund um die Uhr laufen lassen müssen.

13
00:00:57,240 --> 00:01:02,360
Sie müssen die Software warten und alle Probleme lösen, auf die Sie stoßen, und es gibt viele Probleme.

14
00:01:02,370 --> 00:01:09,780
Stattdessen werden wir einige Server von jemand anderem mieten, damit diese den ganzen Aufwand und die Mühe haben,

15
00:01:09,810 --> 00:01:16,680
unsere Server aufrechtzuerhalten und sicherzustellen, dass die Leute über das World Wide Web darauf zugreifen können.

16
00:01:16,680 --> 00:01:23,610
Einige der besten Leute, die den Service anbieten, sind Heroku. Das Beste daran ist, dass Sie ihre

17
00:01:23,610 --> 00:01:31,740
Server kostenlos mieten können, damit Sie bis zu fünf Projekte kostenlos mit ihnen erstellen können, und sie werden Ihren Server hosten,

18
00:01:31,740 --> 00:01:35,570
um Ihre Website am Leben zu erhalten das Internet.

19
00:01:35,700 --> 00:01:42,360
Und sobald Ihre App populär wird und Sie viele, viele Anfragen an Ihren Server haben, können Sie

20
00:01:42,360 --> 00:01:48,600
sie mit Heroku so gut wie einfach mithilfe eines Schiebereglers dynamisch skalieren und sofort auf mehr

21
00:01:48,690 --> 00:01:53,100
Server zugreifen, die auf Anfragen von mehr antworten können Browser.

22
00:01:53,100 --> 00:01:58,920
Und dies ist, wenn Sie es in der Welt geschafft haben und Pokémon Go geworden sind oder ein großer Erfolg,

23
00:01:58,920 --> 00:02:00,810
der auch Ihren Erfolg unterstützen kann.

24
00:02:00,810 --> 00:02:05,390
Und erst in diesem Stadium beginnen Sie, sie für dieses Privileg zu bezahlen.

25
00:02:05,430 --> 00:02:12,240
Offensichtlich meldet sich die erste App für ihre Dienste an, und Sie müssen keine Kreditkarte angeben, und

26
00:02:12,330 --> 00:02:14,390
die Anmeldung ist völlig kostenlos.

27
00:02:14,760 --> 00:02:19,020
Wenn Sie noch keinen Heroku-Account haben, melden Sie sich jetzt an.

28
00:02:19,020 --> 00:02:26,310
Sobald Sie dies getan haben, können Sie sich in Ihr Konto einloggen und landen auf Ihrem Dashboard.

29
00:02:26,340 --> 00:02:33,630
Jetzt hat Heroku eine wirklich gute Dokumentation, die Sie unter Def center dot Heroku dot com finden.

30
00:02:33,630 --> 00:02:41,160
Wir können auf die Schaltfläche Erste Schritte klicken, um diese Schritt-für-Schritt-Anleitung für die Bereitstellung unserer ersten App anzusehen.

31
00:02:41,640 --> 00:02:46,620
Also werden wir keine Jess wählen, weil unser Code darauf basiert.

32
00:02:46,830 --> 00:02:53,280
Und wir werden diese Schritt-für-Schritt-Anleitung verwenden, um unseren Code hochzuladen und unseren Server in Betrieb zu nehmen.

33
00:02:53,880 --> 00:02:58,080
Der erste Schritt ist also das Herunterladen der Hurricane-Befehlszeilenschnittstelle.

34
00:02:58,080 --> 00:03:04,050
Wenn Sie darauf klicken, sollte automatisch die richtige Version für Sie ausgewählt werden, sei es Michael

35
00:03:04,500 --> 00:03:06,300
Windows oder andere Systeme.

36
00:03:06,300 --> 00:03:12,240
Sobald Sie den Assistenten durchlaufen und installiert haben, können Sie den Heroku-Befehl in

37
00:03:12,330 --> 00:03:14,200
Ihrer Befehlsshell verwenden.

38
00:03:14,220 --> 00:03:16,510
Das wird für uns also hyperaktiv.

39
00:03:16,530 --> 00:03:25,440
Sobald es installiert ist, sollten Sie in der Lage sein, Heroku-Login zu schreiben, und Sie müssen Ihre E-Mail-Adresse und Ihr Passwort eingeben,

40
00:03:25,530 --> 00:03:28,950
mit denen Sie sich bei Heroku angemeldet haben.

41
00:03:28,950 --> 00:03:30,870
Also vergiss diese Dinge nicht.

42
00:03:30,900 --> 00:03:37,770
Sobald Sie sich authentifiziert haben, können wir die anderen Versionsprüfungen durchführen.

43
00:03:37,770 --> 00:03:44,070
So können Sie zum Beispiel nach der Version von allem suchen, was Sie installiert haben, indem Sie einfach den Artikel schreiben,

44
00:03:44,070 --> 00:03:47,360
der ihr Roku sagt, und Sie können die Dash-Dash-Version sagen.

45
00:03:48,240 --> 00:03:53,670
So ist Heroku derzeit auf dem neuesten Stand und es läuft sieben Punkt null Punkt einundvierzig.

46
00:03:54,300 --> 00:03:59,070
Als nächstes sagen sie, dass dieses Tutorial für jede Version des Knotens größer

47
00:03:59,100 --> 00:04:00,240
als 8 funktioniert.

48
00:04:00,270 --> 00:04:04,350
Wir können also überprüfen, ob die Node-Version größer als 8 ist.

49
00:04:04,560 --> 00:04:07,390
Und es ist acht Punkt elf Punkt eins.

50
00:04:07,440 --> 00:04:08,820
So perfekt.

51
00:04:08,820 --> 00:04:15,570
Die andere Sache ist, dass NPM mit Knoten installiert ist. Stellen wir also sicher, dass wir tatsächlich NPM

52
00:04:15,720 --> 00:04:22,290
haben, damit wir die NPM-Dash-Version sehen können. Wenn Sie eine Jungfrau haben, bedeutet dies natürlich, dass dieses

53
00:04:22,320 --> 00:04:23,920
Element offensichtlich installiert ist.

54
00:04:24,060 --> 00:04:29,470
Als letztes müssen Sie überprüfen und sicherstellen, dass wir get installiert haben.

55
00:04:29,850 --> 00:04:35,880
Und wenn Sie eine haben, können Sie einfach auf diesen Link klicken und für Ihr System

56
00:04:36,210 --> 00:04:37,790
herunterladen und installieren.

57
00:04:37,800 --> 00:04:43,650
Wir werden uns also im nächsten Modul ausführlicher mit Get und Get Hub befassen.

58
00:04:43,800 --> 00:04:48,980
Aber im Moment werden wir dieses Tutorial nur verwenden, um alles zum Laufen zu bringen.

59
00:04:49,100 --> 00:04:55,080
Und wenn Sie alle drei überprüft haben und alles bereit ist, können wir klicken und bestätigen und mit dem

60
00:04:55,140 --> 00:04:56,280
nächsten Schritt fortfahren.

61
00:04:56,790 --> 00:05:05,680
Der nächste Schritt besteht also darin, unsere App so vorzubereiten, dass Sie in diesem Fall aufgefordert werden, ihre Beispiel-App zu verwenden,

62
00:05:05,740 --> 00:05:10,210
die sie erstellt haben. Den Code dafür finden Sie hier.

63
00:05:10,600 --> 00:05:16,960
Es hat einen Knotencode und ermöglicht es Ihnen, Heroku zu testen. In unserem Fall möchten wir jedoch unsere aktuelle

64
00:05:17,080 --> 00:05:20,740
App bereitstellen, bei der es sich um die Newsletter-Anmeldewebsite handelt.

65
00:05:21,160 --> 00:05:23,590
Wir werden ihren Schritten hier also nicht folgen.

66
00:05:23,590 --> 00:05:26,060
Stattdessen bereiten wir unsere eigene App vor.

67
00:05:26,080 --> 00:05:31,160
Jetzt gibt es ein paar Dinge, die Sie tun müssen, um es zu aktualisieren, damit es auf Heroku funktioniert.

68
00:05:31,510 --> 00:05:35,180
Und das erste, was in Ihrer App ist, ist nicht G. S ..

69
00:05:35,230 --> 00:05:40,210
Derzeit lauschen wir einem lokalen Hafen, dem dreitausend Hafen.

70
00:05:40,220 --> 00:05:48,370
Sobald wir unseren Code auf Heroku-Server hochgeladen haben, wird unser Code auf ihrem System ausgeführt und ihr Server

71
00:05:48,370 --> 00:05:51,700
möchte möglicherweise nicht den Port dreitausend verwenden.

72
00:05:52,000 --> 00:05:56,590
Heroku funktioniert also so, dass es möglicherweise einen Port für Sie auswählt.

73
00:05:56,890 --> 00:06:04,840
Um dies zu ermöglichen, müssen Sie auf einen sogenannten Prozesspunkt-EMV-Punktport tippen, und der Port ist in Großbuchstaben

74
00:06:04,840 --> 00:06:05,610
angegeben.

75
00:06:05,800 --> 00:06:10,510
Dies ist also im Grunde ein dynamischer Port, den Heroku unterwegs definieren wird.

76
00:06:10,870 --> 00:06:16,720
Daher kann es zu jedem Zeitpunkt entscheiden, Ihre App für Port 3000 oder 5000 oder was auch immer auf ihrem lokalen

77
00:06:16,720 --> 00:06:17,830
System bereitzustellen, bereitzustellen.

78
00:06:18,190 --> 00:06:25,030
Wenn wir also unseren Port auf diesen ändern, können wir nahtlos mit ihrem System arbeiten.

79
00:06:25,030 --> 00:06:31,630
Das Problem ist jedoch, dass unser Computer nicht weiß, worum es geht, wenn wir versuchen, dies

80
00:06:31,630 --> 00:06:37,240
jetzt lokal mit lokalen Hosts auszuführen, da dieses Prozessobjekt von Heroku definiert wird.

81
00:06:37,270 --> 00:06:43,960
Was wir hier also tun können, wenn wir es sowohl lokal testen als auch in Heroku bereitstellen möchten,

82
00:06:43,960 --> 00:06:51,010
wenn wir dies gleichzeitig tun möchten, können wir unserer App anweisen, diesen Port auf Heroku abzuhören, aber auch ein

83
00:06:51,100 --> 00:06:56,940
Ruder hinzufügen, um dies zu sagen Sie können auf 3000 hören, wenn wir lokal laufen.

84
00:06:56,950 --> 00:07:04,430
Wenn Sie dies als Port eingeben, funktioniert unsere App sowohl auf Heroku als auch auf unserem lokalen System.

85
00:07:04,450 --> 00:07:10,060
Nachdem wir festgelegt haben, dass wir fortfahren und auf Speichern klicken, müssen wir

86
00:07:10,120 --> 00:07:12,280
als Nächstes eine Proc-Datei erstellen.

87
00:07:12,280 --> 00:07:17,360
Dies ist die Datei, die Heroku überprüfen wird, um zu sehen, wie Sie Ihre App starten.

88
00:07:17,470 --> 00:07:23,320
Derzeit haben wir unsere App mit Knoten 1 gestartet, damit sie im Hintergrund ständig

89
00:07:23,320 --> 00:07:26,170
aktualisiert und alle Änderungen aktualisiert werden.

90
00:07:26,200 --> 00:07:32,920
Normalerweise führen wir eine App mit dem Befehlsknoten und dann mit dem Namen unserer Serverdatei aus, die in unserem

91
00:07:32,920 --> 00:07:34,780
Fall für GSM geeignet ist.

92
00:07:34,810 --> 00:07:40,630
Damit unsere Crew herausfinden kann, welcher Befehl ausgeführt werden muss, um unsere App zu starten, müssen wir dies

93
00:07:40,630 --> 00:07:47,650
in diesem Format angeben. Wir müssen Web COLA angeben, welches der Prozesstyp ist, und dann den Befehl, den wir verwenden müssen,

94
00:07:47,650 --> 00:07:50,260
um dies zu tun Start sind App.

95
00:07:50,260 --> 00:07:53,920
Also lasst uns fortfahren und dies unserer Seite hinzufügen.

96
00:07:53,920 --> 00:08:01,210
Also gehe ich zu CDE zu unserem Projekt, das sich derzeit in meinem Fall unter Desktop Slash

97
00:08:01,270 --> 00:08:02,170
Newsletter anmeldet.

98
00:08:02,410 --> 00:08:10,030
Und sobald ich mich in diesem Projektverzeichnis befinde, werde ich diese Proc-Datei erstellen.

99
00:08:10,030 --> 00:08:17,020
Jetzt ist es wirklich wichtig, dass wenn Sie ihre Dokumentation in der Proc-Datei lesen, sie so etwas

100
00:08:17,020 --> 00:08:19,130
wie Proc-Datei-Punkttext heißen kann.

101
00:08:19,240 --> 00:08:23,710
Es muss nur proc aufgerufen werden, um ohne Erweiterungen zu archivieren.

102
00:08:23,800 --> 00:08:27,590
Und es muss genauso geschrieben werden, wenn P groß geschrieben wird.

103
00:08:27,670 --> 00:08:30,280
Stellen Sie also sicher, dass Sie vorsichtig sind, wenn Sie dies eingeben.

104
00:08:30,280 --> 00:08:31,760
Und wenn Sie diese Datei erstellen.

105
00:08:31,990 --> 00:08:37,930
Nachdem wir diese Datei erstellt haben, klicken wir mit der rechten Maustaste, um sie mit dem

106
00:08:37,930 --> 00:08:45,010
Geldautomaten zu öffnen. Hier geben wir den Web-Doppelpunkt ein und beginnen dann unseren Prozess, der die Knoten-App für Jesus

107
00:08:45,040 --> 00:08:45,970
sein wird.

108
00:08:46,030 --> 00:08:52,750
Das ist also alles, was wir brauchen, um Heroku zu sagen, wie wir unsere App starten sollen und welche Datei tatsächlich unseren

109
00:08:52,780 --> 00:08:53,700
Servercode enthält.

110
00:08:53,830 --> 00:09:00,460
Manchmal entscheiden Sie sich also, diesen Index als Top-Jazz zu bezeichnen oder Jazz oder Server-Dot-Jazz zu entführen, und Heroku

111
00:09:00,460 --> 00:09:02,790
weiß nicht, welchen Sie verwenden möchten.

112
00:09:02,800 --> 00:09:05,940
Daher ist es wichtig, diese Datei und diese Zeile hinzuzufügen.

113
00:09:06,670 --> 00:09:12,920
Und der nächste Schritt ist, unsere Arbeit zu retten, um dies zu erreichen.

114
00:09:12,940 --> 00:09:17,340
Als erstes müssen wir sicherstellen, dass wir am richtigen Ort sind.

115
00:09:17,410 --> 00:09:27,530
Stellen Sie daher sicher, dass sich dieser Teil, der nach dem Namen Ihres Laptops steht, am Speicherort Ihres Projekts befindet.

116
00:09:27,550 --> 00:09:31,210
Dies sollte also der Name des Projektordners sein.

117
00:09:31,390 --> 00:09:38,560
Wenn es nicht sicher ist, dass Sie C. D. D. Denken Sie daran, dass Sie einen Ordner per

118
00:09:38,770 --> 00:09:46,300
Drag &amp; Drop in das Terminal ziehen können, damit er zu dieser Adresse navigiert und diese Adresse der Ordner sein muss, der Ihr gesamtes

119
00:09:46,300 --> 00:09:47,210
Paket enthält.

120
00:09:47,230 --> 00:09:55,180
Jason bekannte Module und App Punkt J. S. Dies ist der Projektordner, und wir haben

121
00:09:55,180 --> 00:10:02,380
bestätigt, dass wir uns an dieser Position befinden. Als Nächstes werden wir sagen, dass Sie sich darin befinden. Dadurch

122
00:10:02,500 --> 00:10:04,870
wird ein brandneues Get-Repository initialisiert.

123
00:10:04,870 --> 00:10:13,270
Jetzt ist es ein Schimpfwort auf Englisch, aber es ist auch eine Möglichkeit, alle verschiedenen Versionen Ihrer App oder

124
00:10:13,630 --> 00:10:15,520
Ihres Codes zu speichern.

125
00:10:15,640 --> 00:10:22,360
Denken Sie also daran, wenn Sie Essays in der High School oder in oder für das College geschrieben haben, haben

126
00:10:22,450 --> 00:10:30,010
Sie den Essay gespeichert und Sie haben Essay Final gesagt, und dann haben Sie festgestellt, dass ich einige Änderungen vorgenommen habe, und dann

127
00:10:30,040 --> 00:10:35,950
wird es Essay Final Final und dann wird es Essay Final für echten Aufsatz definitiv endgültig.

128
00:10:35,950 --> 00:10:39,790
Und irgendwann gerät es einfach außer Kontrolle und man weiß nicht, welche tatsächlich endgültig sind.

129
00:10:39,790 --> 00:10:47,560
Das ist mir schon so oft passiert, aber mit get und version control können Sie jeden Zeitpunkt

130
00:10:47,560 --> 00:10:49,470
Ihrer Arbeit speichern.

131
00:10:49,510 --> 00:10:55,120
Es ist also fast so, als hätten Sie eine Zeitmaschine für all Ihre Projekte, sodass Sie jederzeit

132
00:10:55,150 --> 00:11:00,480
auf die Vergangenheit zurückgreifen und experimentelle Zweige erstellen und mit Ihrem Code herumspielen können. In

133
00:11:00,490 --> 00:11:03,740
der nächsten Zeit wird all diese Güte auftauchen Modul.

134
00:11:03,910 --> 00:11:10,390
Aber jetzt werden wir Zahnräder verwenden und alle unsere Dateien, die sich in diesem aktuellen

135
00:11:10,390 --> 00:11:18,490
Repository befinden, hinzufügen, so dass dies zu unserer Versionskontrolle hinzugefügt wurde, und der nächste Schritt ist, dass wir unsere

136
00:11:18,550 --> 00:11:20,910
Änderungen daran festschreiben aktuelle Version.

137
00:11:20,920 --> 00:11:28,240
Dieses Schlüsselwort bedeutet also, dass wir eine neue Version starten, z. B. Version 3, oder in unserem Fall tatsächlich

138
00:11:28,240 --> 00:11:35,920
Version 1, weil wir nicht alle Änderungen vorgenommen haben und wir auch eine Nachricht hinzufügen können, indem wir das End-Flag

139
00:11:35,980 --> 00:11:42,130
so Strich hinzufügen n und dann geben wir eine Zeichenfolge an, die unsere Nachricht ist.

140
00:11:42,130 --> 00:11:49,030
Also werden wir zuerst Commit oder eine beliebige Nachricht sagen, die Sie wünschen, und sie würden die Eingabetaste drücken und

141
00:11:49,030 --> 00:11:51,520
alle unsere Dateien und alles wird festgeschrieben.

142
00:11:52,090 --> 00:11:59,020
Nachdem wir dies getan haben, sind wir mit dem Tutorial synchronisiert und können mit dem nächsten Schritt fortfahren.

143
00:11:59,140 --> 00:12:08,800
Der nächste Schritt ist nun die Bereitstellung dieser App. Sie möchten, dass Sie eine neue App auf Heroku mit dem

144
00:12:08,830 --> 00:12:11,130
Schlüsselwort Heroku create erstellen.

145
00:12:11,350 --> 00:12:15,750
Zu diesem Zeitpunkt müssen Sie angemeldet sein, damit dies erfolgreich ist.

146
00:12:15,820 --> 00:12:19,990
Wenn Sie nicht krank sind, fragen Sie erneut nach Ihrem Heroku-Passwort und Benutzernamen.

147
00:12:20,140 --> 00:12:27,550
Aber wenn alles grün und blau und nicht rot aussieht, bedeutet das, dass alles gut funktioniert.

148
00:12:27,550 --> 00:12:35,260
Jetzt haben sie Ihren brandneuen Container erstellt, sodass Ihr brandneuer Server unter dieser Adresse erstellt wurde.

149
00:12:35,320 --> 00:12:43,480
HECS salzig für die Heroku-App dot com. Sie können ihn durch einfaches Klicken überprüfen Aber es hat

150
00:12:43,480 --> 00:12:49,060
noch keinen Inhalt, da wir ihn nicht verschoben haben. Fahren wir

151
00:12:49,060 --> 00:12:51,920
also mit diesem Tutorial fort.

152
00:12:51,940 --> 00:12:59,480
Das Letzte, was wir tun müssen, bevor wir unser App-Leben erhalten können, ist, get push ihren Roku-Master

153
00:12:59,980 --> 00:13:07,340
zu schreiben. Dadurch wird unsere lokale Version, die mit get to her Roku gespeichert wurde, gepusht.

154
00:13:08,020 --> 00:13:17,050
Probieren wir es also aus, um ihren Roku-Master zu pushen. Das Hochladen aller unserer lokalen Dateien, die sich auf unsere Knoten-App

155
00:13:17,050 --> 00:13:25,540
beziehen, wird ein wenig Zeit in Anspruch nehmen und diese an ihre Roku senden, deren Server im Internet und

156
00:13:28,980 --> 00:13:37,320
sobald dies erledigt ist Zeigen Sie, wie Sie die Bereitstellung überprüft haben, und wir können am vorherigen Speicherort darauf

157
00:13:37,320 --> 00:13:38,180
zugreifen.

158
00:13:38,190 --> 00:13:46,530
Lassen Sie uns diese Seite aktualisieren und nur ein Wort der Warnung, dass Sie möglicherweise einen Anwendungsfehler erhalten, wenn Sie

159
00:13:46,530 --> 00:13:49,110
versuchen, die Site sofort zu laden.

160
00:13:49,110 --> 00:13:54,990
Jetzt ist es wichtig, dass Sie Heroku nur ein paar Minuten Zeit geben, um all diese

161
00:13:54,990 --> 00:14:01,030
ausgefallenen komplizierten Dinge hinter den Kulissen für Sie einzurichten und vielleicht nach fünf oder zehn Minuten darauf zurückzukommen.

162
00:14:01,050 --> 00:14:03,210
Das ist also unser Moment der Wahrheit.

163
00:14:03,300 --> 00:14:10,290
Lassen Sie uns fortfahren und unsere App testen, die im Web ausgeführt wird, und prüfen, ob dies funktioniert.

164
00:14:11,670 --> 00:14:13,340
Also werde ich mich anmelden.

165
00:14:13,350 --> 00:14:13,850
Genial.

166
00:14:13,860 --> 00:14:16,270
Sie haben sich erfolgreich für den Newsletter angemeldet.

167
00:14:16,380 --> 00:14:25,790
Und wenn ich mein MailChimp aktualisiere, kann ich sehen, dass meine neueste Person von einer aktiven Live-Website

168
00:14:25,920 --> 00:14:27,480
hinzugefügt wurde.

169
00:14:27,660 --> 00:14:33,090
Wenn Sie an diesem Punkt angelangt sind und alles so funktioniert, wie es ist, ist es Zeit,

170
00:14:33,090 --> 00:14:39,660
sich wirklich auf den Rücken zu klopfen, da wir gerade in diesem Modul viele wirklich komplexe Dinge getan haben und ohne Tools

171
00:14:39,660 --> 00:14:45,660
wie Heroku oder Node oder Express hätten wir ein oder zwei Monate damit verbracht, den Code zu schreiben und dann

172
00:14:45,750 --> 00:14:48,750
vielleicht noch zwei Monate damit, unseren eigenen Service-Stack aufzubauen.

173
00:14:48,780 --> 00:14:51,120
Das ist wirklich sehr, sehr cool.

174
00:14:51,120 --> 00:14:51,950
Was wir gemacht haben.

175
00:14:51,990 --> 00:14:58,950
Wenn Sie jedoch Probleme damit hatten, überprüfen Sie die Heroku-Protokolle. In der Regel erhalten Sie einen

176
00:14:58,980 --> 00:15:02,460
Hinweis darauf, was möglicherweise schief gelaufen ist.

177
00:15:02,460 --> 00:15:10,050
Wenn ich beispielsweise vergessen habe, den Port für die Verarbeitung von Dot und Dot-Port zu ändern, wird

178
00:15:10,050 --> 00:15:13,910
möglicherweise eine Seite angezeigt, die ungefähr so aussieht.

179
00:15:14,070 --> 00:15:20,580
In diesem Fall wird natürlich auf die Heroku-Protokolle zurückgegriffen, die Ihnen dabei helfen, zu sagen, wo der

180
00:15:20,580 --> 00:15:28,210
Prozess innerhalb von 60 Sekunden nach dem Start nicht an den Port gebunden werden konnte und im Grunde nicht funktioniert hat.

181
00:15:28,350 --> 00:15:34,680
Und im Grunde wird es immer wieder versucht, aber es kann nicht an den Port gebunden werden, an den

182
00:15:34,680 --> 00:15:38,820
Heroku es binden muss, und das alles, weil dieser Schritt vergessen wurde.

183
00:15:38,940 --> 00:15:44,280
In anderen Fällen haben Sie möglicherweise vergessen, ein Profil hinzuzufügen, das Profil falsch

184
00:15:44,580 --> 00:15:50,420
geschrieben oder den tatsächlichen Namen oder Ihren Server nicht hinzugefügt, oder Sie haben hier einige Tippfehler.

185
00:15:50,490 --> 00:15:55,920
Und wieder sehen Sie die Absturzprotokolle mit dem Befehl Heroku-Protokolle.

186
00:15:55,950 --> 00:16:00,750
Das ist also wirklich sehr hilfreich, um zu diagnostizieren, was möglicherweise schief gelaufen ist.

187
00:16:00,810 --> 00:16:08,490
Sobald Sie fertig sind und Ihre App fertiggestellt haben, ist das Aktualisieren Ihrer App so einfach wie

188
00:16:08,490 --> 00:16:10,470
das Vornehmen einiger Änderungen.

189
00:16:10,470 --> 00:16:18,690
Lassen Sie uns zum Beispiel unsere Erfolgsseite in "brillant" anstatt "fantastisch" ändern, da "fantastisch" wirklich

190
00:16:18,810 --> 00:16:20,870
unglaublich überstrapaziert ist.

191
00:16:21,300 --> 00:16:29,160
Und um diese Updates auf Heroku zu übertragen, müssen Sie nur noch get ad verwenden, um Ihre Änderungen hinzuzufügen. Get commit,

192
00:16:29,550 --> 00:16:32,010
um diese aktuelle Version zu speichern.

193
00:16:32,040 --> 00:16:42,870
Diese aktuelle Version ist also anders, da ich die Erfolgsseite jeweils geändert habe und jetzt wieder einen Push

194
00:16:42,900 --> 00:16:51,290
an Heroku Master senden kann, wodurch meine Website mit den Änderungen aktualisiert wird.

195
00:16:51,300 --> 00:16:56,700
Das schließt also die Änderung an jedem auf der Erfolgsseite ein.

196
00:16:56,730 --> 00:17:04,110
Sobald dies erledigt ist, kann ich zu meiner Website gehen und sie überprüfen, da dies nicht mehr auf dem lokalen

197
00:17:04,110 --> 00:17:05,440
Host ausgeführt wird.

198
00:17:05,610 --> 00:17:10,330
Ich kann mit jedem teilen, wie Sie alle sind, und sie können sich für meinen Newsletter anmelden.

199
00:17:10,770 --> 00:17:16,470
Dies ist also ein guter Zeitpunkt, um zu erwähnen, dass Sie, wenn Sie sich für den Newsletter der App Brewery anmelden

200
00:17:16,470 --> 00:17:23,520
möchten, unbedingt zu dot co slash P der App Brewery gehen sollten. Slash-Newsletter und wir versenden diesen nur einmal im Monat, damit

201
00:17:23,820 --> 00:17:29,010
wir die besten Dinge sammeln können, die im Laufe des Monats passiert sind, und wir

202
00:17:29,100 --> 00:17:34,770
senden Ihnen diesen kurzen und süßen Newsletter, der Ihnen hoffentlich jeden Monat fünf neue Dinge über

203
00:17:34,800 --> 00:17:42,580
das Programmdesign beibringen wird Startup coole neue Tools zum Ausprobieren und auch die App zeigt die besten Dinge, die unsere Schüler in

204
00:17:42,580 --> 00:17:44,200
diesem Monat gebaut haben.

205
00:17:44,220 --> 00:17:46,690
Das ist also nur ein kleiner Stecker von mir.

206
00:17:46,710 --> 00:17:53,670
Ich hoffe, es hat Ihnen Spaß gemacht, dieses großartige Projekt zu erstellen, und im nächsten Modul werden wir uns

207
00:17:53,750 --> 00:18:00,650
mit dem Kit Hub befassen und viel mehr über die Versionskontrolle und die Funktionsweise all dieser Magie erfahren.

208
00:18:00,690 --> 00:18:03,560
Für all das und mehr werde ich Sie im nächsten Modul sehen,

209
00:18:37,240 --> 00:18:38,920
bevor wir mit der Bereitstellung beginnen.
