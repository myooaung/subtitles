WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.590
We have seen how to create a list GPA for our machine learning model.

00:00:04.590 --> 00:00:09.240
Next, we will try to deploy this model on Google Cloud and cleared a rest

00:00:09.240 --> 00:00:14.770
API so that anybody who has access to the IP address of the VM can access the model.

00:00:15.290 --> 00:00:21.520
You can try it on AWS is euro or any other cloud environment.

00:00:22.370 --> 00:00:24.960
Gcp or Gould Claude provided

00:00:24.960 --> 00:00:29.685
theory roller free credit using which you can explore many of their services.

00:00:29.685 --> 00:00:35.160
For this lab will be primarily using GCP, VM instance.

00:00:35.160 --> 00:00:39.580
Search for VM instance or virtual machine.

00:00:40.130 --> 00:00:42.940
Click Create.

00:00:43.990 --> 00:00:47.190
We keep the default name.

00:00:50.080 --> 00:00:53.795
Let's select this extraordinary machine.

00:00:53.795 --> 00:00:57.230
You can leave all of the properties is default,

00:00:57.230 --> 00:01:01.170
will allow HTTP and HTTPS axis.

00:01:04.000 --> 00:01:06.470
Once the instances created,

00:01:06.470 --> 00:01:10.590
let's first ensured all the neglect ports are open.

00:01:10.810 --> 00:01:15.020
Because we will be running a Flask application than we might use.

00:01:15.020 --> 00:01:18.330
Different ports will open all the ports.

00:01:26.340 --> 00:01:29.630
Go to firewall rules.

00:01:33.000 --> 00:01:35.905
When we open these two dp by default,

00:01:35.905 --> 00:01:38.155
port EPEAT God opened.

00:01:38.155 --> 00:01:39.745
So we'll just edit dot,

00:01:39.745 --> 00:01:42.580
dot to make called ports open are you can artist

00:01:42.580 --> 00:01:46.580
separate firewall rule to open all our specific ports.

00:01:47.370 --> 00:01:52.160
Now all the ports for this particular VM and statured reopen.

00:01:55.020 --> 00:01:57.160
Whatever port we used for

00:01:57.160 --> 00:02:01.310
our Flask application that will be accessible to the outside world.

00:02:01.890 --> 00:02:08.360
Now go back and find dices its link to connect to the instance.

00:02:09.810 --> 00:02:12.610
And this is Python 3.7.

00:02:12.610 --> 00:02:16.764
And we also use Python 3.8.

00:02:16.764 --> 00:02:20.350
If it goes 2.2x automobile older version optic cortex,

00:02:20.350 --> 00:02:21.700
we might have faced some issues,

00:02:21.700 --> 00:02:23.960
but these were satisfied.

00:02:25.020 --> 00:02:28.600
So we need to install Python liabilities before

00:02:28.600 --> 00:02:31.885
we get started with building the rest API,

00:02:31.885 --> 00:02:35.275
we need to install other Python libraries.

00:02:35.275 --> 00:02:44.540
So let's install that by doing sudo app installed Python three Pip APS way.

00:02:50.940 --> 00:02:54.940
Let's install Flask by saying p3 in

00:02:54.940 --> 00:02:56.750
stone flies

00:03:03.720 --> 00:03:05.935
will install numpy.

00:03:05.935 --> 00:03:16.190
Next. We also need scikit-learn libraries to run the machine learning model.

00:03:18.750 --> 00:03:24.230
Next we'll get the pickle files from the GitHub repository.

00:03:24.900 --> 00:03:28.400
First installed w gate.

00:03:34.660 --> 00:03:40.740
Good dog classifier dot pickle. Also good.

00:03:48.010 --> 00:03:52.370
Now we'll copy the classifier rr with Python code from

00:03:52.370 --> 00:03:56.910
the local environment and will make two small changes.

00:03:57.640 --> 00:04:00.575
Set the port 20000,

00:04:00.575 --> 00:04:02.330
which is same as local laws,

00:04:02.330 --> 00:04:07.740
but that we adopt would be available outside gcloud VM instance.

00:04:08.620 --> 00:04:15.870
And we also change.com prediction from DCP APA.

00:04:17.590 --> 00:04:21.995
We'll create a python file you can create with any name.

00:04:21.995 --> 00:04:28.080
Simply paste the code, save it.

00:04:28.150 --> 00:04:36.150
Now you can start the classified by saying Python three classified ArcPy way.

00:04:36.310 --> 00:04:40.350
It started at port 8,005.

00:04:41.140 --> 00:04:46.550
Will grab the public IP address upto Google Cloud VM.

00:04:46.550 --> 00:04:48.660
Copy it.

00:04:48.820 --> 00:04:55.500
Go to the wrist claim based data IP address.

00:04:56.710 --> 00:05:02.250
And whatever port we use 805 and run it.

00:05:04.990 --> 00:05:10.860
We can see the prediction from the Google Cloud, DCP, APA.

00:05:12.250 --> 00:05:17.820
And we can try for 40 and that will be total will get 0.2.

00:05:23.680 --> 00:05:27.350
This is how you can make a machine-learning rest API

00:05:27.350 --> 00:05:30.930
on a cloud instance and make it available to the world.
