WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.160
Next we'll be creating a TensorFlow model server in a Docker eyes environment.

00:00:05.160 --> 00:00:09.375
So let's understand the basic idea behind containers and Docker.

00:00:09.375 --> 00:00:12.225
Typically in the on-premise setup will ever server,

00:00:12.225 --> 00:00:15.165
which arose multiple applications.

00:00:15.165 --> 00:00:17.580
For example, we could have a server hosting,

00:00:17.580 --> 00:00:21.660
web server application, servers database and various other applications.

00:00:21.660 --> 00:00:24.960
Then there is another concept called virtual server.

00:00:24.960 --> 00:00:27.990
Using VMware hypervisor, we can create

00:00:27.990 --> 00:00:31.770
multiple virtual machines on top of a physical servers.

00:00:31.770 --> 00:00:35.370
And each server would have their own operating system.

00:00:35.370 --> 00:00:36.630
It could be Windows, Linux,

00:00:36.630 --> 00:00:39.400
or any other operating system.

00:00:39.400 --> 00:00:42.140
With virtual servers, we are able to create

00:00:42.140 --> 00:00:44.945
isolated environments for a set of applications.

00:00:44.945 --> 00:00:46.760
For the disadvantages will have to have

00:00:46.760 --> 00:00:49.790
separate operating system for each of the virtual machines.

00:00:49.790 --> 00:00:54.950
Containers are lightweight, isolated environment in a server or virtual machine.

00:00:54.950 --> 00:00:57.290
They can share a slice of operating system from

00:00:57.290 --> 00:01:01.340
the underlying machine without needing their own operating system.

00:01:01.340 --> 00:01:05.030
We can have a physical server with one operating system.

00:01:05.030 --> 00:01:07.760
And within that, we can have multiple containers.

00:01:07.760 --> 00:01:10.910
They will share a slice of the underlying operating system.

00:01:10.910 --> 00:01:13.100
And within container, we can have

00:01:13.100 --> 00:01:16.730
an isolated environment where we can install specific apps.

00:01:16.730 --> 00:01:20.420
Unlike virtual machines, we do not have to worry about maintaining

00:01:20.420 --> 00:01:23.975
separate operating system for each of our container.

00:01:23.975 --> 00:01:26.630
Note that it's also possible to create

00:01:26.630 --> 00:01:30.365
multiple containers within a particular virtual machine.

00:01:30.365 --> 00:01:34.805
The advantage with containerization is you can build

00:01:34.805 --> 00:01:39.335
apps within your container and easily port to another environment.

00:01:39.335 --> 00:01:44.900
You can have separate applications or microservices running in each of the container.

00:01:44.900 --> 00:01:47.990
And you can keep your applications isolated from

00:01:47.990 --> 00:01:51.560
other applications running in the same physical environment.

00:01:51.560 --> 00:01:54.665
Containerization improves application security.

00:01:54.665 --> 00:01:57.230
Also, applications start to really fast in

00:01:57.230 --> 00:02:00.665
a container because there is no dependency on other applications.

00:02:00.665 --> 00:02:05.980
So containers are lightweight software components that would bundle the application,

00:02:05.980 --> 00:02:10.370
all its dependencies and configuration to a single image in

00:02:10.370 --> 00:02:12.980
an isolated environment and which can be ported to

00:02:12.980 --> 00:02:16.640
other servers or other cloud environments easily.

00:02:16.640 --> 00:02:22.160
Docker is a software platform for building applications based on containers.

00:02:22.160 --> 00:02:28.170
So let's dive in and create a TensorFlow model server using Docker container.
