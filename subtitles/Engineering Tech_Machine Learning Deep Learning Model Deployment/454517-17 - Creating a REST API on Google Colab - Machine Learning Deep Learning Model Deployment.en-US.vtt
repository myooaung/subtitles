WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.440 --> 00:00:03.780
In this lab we will see how to create a rest API on

00:00:03.780 --> 00:00:07.600
the Google collab environment and expose it on the internet.

00:00:09.020 --> 00:00:13.480
Let's import numpy.

00:00:15.230 --> 00:00:17.820
And we lord the pickle file.

00:00:17.820 --> 00:00:24.510
So for that, let's import to Lord INI file to Google Colombian Marmot.

00:00:24.510 --> 00:00:28.440
You can also directly upload from here.

00:00:28.440 --> 00:00:31.905
Click on this file icon.

00:00:31.905 --> 00:00:35.950
We need to select this directory and then click Upload.

00:00:45.190 --> 00:00:49.080
Let's check the files got uploaded.

00:00:49.540 --> 00:00:52.430
So we have both the pickles now,

00:00:52.430 --> 00:00:59.970
in the local environment of this collab notebook will first create a classifier object.

00:01:04.030 --> 00:01:08.490
Let's run this and then load it again.

00:01:09.850 --> 00:01:13.460
Will now create a scalar object.

00:01:13.460 --> 00:01:17.765
After that, we need to install Flask in Iraq.

00:01:17.765 --> 00:01:19.685
Using Flask in Iraq,

00:01:19.685 --> 00:01:24.420
we can make our Flask app accessible over the internet.

00:01:24.540 --> 00:01:30.910
It says that it's already installed in the Google collab environment. Let's continue.

00:01:30.910 --> 00:01:36.640
After installing flask and Iraq import run wheat ended up from Iraq.

00:01:36.640 --> 00:01:38.410
And after that, the stapes to

00:01:38.410 --> 00:01:42.950
creative flask list API is pretty much the same as what we did earlier.

00:01:43.740 --> 00:01:48.970
Import Flask and requests from the flask liability.

00:01:48.970 --> 00:01:50.905
Important request.

00:01:50.905 --> 00:01:53.170
Next we'll declare an app,

00:01:53.170 --> 00:01:57.530
and now we'll say run this app within Iraq.

00:01:58.140 --> 00:02:03.160
So with this, dark would be securely exposed over the internet.

00:02:03.160 --> 00:02:05.595
Similar to what we did earlier,

00:02:05.595 --> 00:02:09.340
will have to create a method which will read input parameters from

00:02:09.340 --> 00:02:14.560
the request and use the scalar and classifier object to predict.

00:02:14.560 --> 00:02:17.035
Then we live an endpoint as class predict.

00:02:17.035 --> 00:02:19.720
And we'll create a method which will be mapped to

00:02:19.720 --> 00:02:24.760
this particular end point. Let's run this.

00:02:24.760 --> 00:02:27.365
After that, we'll do app.get.

00:02:27.365 --> 00:02:30.940
And as soon as we do

00:02:30.940 --> 00:02:36.805
that flask and Iraq would create a public URL using which you can access the glass cap.

00:02:36.805 --> 00:02:41.605
So this is the URL that we need to hit to access the model.

00:02:41.605 --> 00:02:43.930
Let's copy this.

00:02:43.930 --> 00:02:46.630
And we'll go to spider.

00:02:46.630 --> 00:02:50.965
And we'll use that URL and we'll use last predict.

00:02:50.965 --> 00:02:55.615
So that is the end point at which we are reading the request.

00:02:55.615 --> 00:02:57.880
And then let's run this code,

00:02:57.880 --> 00:03:04.100
or there is a typo in it to fix that. Let's run it again.

00:03:05.550 --> 00:03:07.570
Let's check out the URL.

00:03:07.570 --> 00:03:10.370
It says NPS Naur defined.

00:03:10.830 --> 00:03:13.300
We probably did not run this.

00:03:13.300 --> 00:03:14.785
So let's run this again.

00:03:14.785 --> 00:03:17.065
And we can do a restart runtime.

00:03:17.065 --> 00:03:20.900
And we can run the notebook from the beginning again.

00:03:21.330 --> 00:03:24.220
And it just started running and it has given us

00:03:24.220 --> 00:03:28.310
a new public URL this time. Let's copy it.

00:03:30.780 --> 00:03:33.860
And now let's in,

00:03:33.860 --> 00:03:36.425
walked up and get the prediction.

00:03:36.425 --> 00:03:41.400
We got 0.8 for age 42 thousand.

00:03:46.030 --> 00:03:52.920
And we can change this input parameters and I'll get a different output.

00:03:53.500 --> 00:03:57.890
Collab is a great tool to practice machine learning, deep learning.

00:03:57.890 --> 00:04:02.465
And also, if you want to create a prototype and exposure machine learning model,

00:04:02.465 --> 00:04:04.220
without creating a virtual machine,

00:04:04.220 --> 00:04:05.735
you can directly do that.

00:04:05.735 --> 00:04:08.070
And the Colombian moment.
