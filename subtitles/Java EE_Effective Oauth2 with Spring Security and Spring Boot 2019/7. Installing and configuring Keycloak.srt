1
00:00:02,172 --> 00:00:04,942
You can download Keycloak from their web page.

2
00:00:04,942 --> 00:00:09,494
As of the creation of the course, I am using the latest version,

3
00:00:09,494 --> 00:00:11,164
which is 6.0 .1.

4
00:00:11,164 --> 00:00:14,722
Unzip it into a directory of your choosing.

5
00:00:14,722 --> 00:00:16,709
Then in the bin file,

6
00:00:16,709 --> 00:00:22,416
simply execute the standalone command with the jboss.http .port to 8081.

7
00:00:22,416 --> 00:00:26,598
Now the reason for the port is that, by default,

8
00:00:26,598 --> 00:00:31,437
it uses port 8080, and that would actually clash with our web app.

9
00:00:31,437 --> 00:00:33,639
If we access localhost on 8081,

10
00:00:33,639 --> 00:00:37,550
it will ask us to create the initial admin account.

11
00:00:37,550 --> 00:00:38,567
So fill that in.

12
00:00:38,567 --> 00:00:41,113
I'm just using admin and password for now.

13
00:00:41,113 --> 00:00:46,648
Now once logged in as admin, the first thing you need is a realm.

14
00:00:46,648 --> 00:00:51,505
This is like a container around users, applications, clients, etc.

15
00:00:51,505 --> 00:00:54,082
It's a core concept within Keycloak.

16
00:00:54,082 --> 00:00:58,511
Once your realm is created, you can start to see the power of Keycloak.

17
00:00:58,511 --> 00:01:01,499
With a few clicks, we can enable user registration,

18
00:01:01,499 --> 00:01:06,244
password recovery, remember me, email verification,

19
00:01:06,244 --> 00:01:09,494
SSL, select themes for our login page,

20
00:01:09,494 --> 00:01:12,477
configure security headers and content policies,

21
00:01:12,477 --> 00:01:17,540
enable user federation, like social sign-in with Google and Facebook,

22
00:01:17,540 --> 00:01:19,636
and much more.

23
00:01:19,636 --> 00:01:22,659
We need to register our application as a client.

24
00:01:22,659 --> 00:01:24,912
Under Clients, select Create.

25
00:01:24,912 --> 00:01:25,867
Give it a name.

26
00:01:25,867 --> 00:01:27,461
The protocol will be openid-connect.

27
00:01:27,461 --> 00:01:31,931
We can add a name and description.

28
00:01:31,931 --> 00:01:34,047
Make sure enabled is on.

29
00:01:34,047 --> 00:01:34,647
Consent required,

30
00:01:34,647 --> 00:01:39,756
this is if we want to prompt the resource owner to approve the scopes.

31
00:01:39,756 --> 00:01:42,576
Leave it as off for now unless you really want it.

32
00:01:42,576 --> 00:01:45,165
For the access type, select confidential,

33
00:01:45,165 --> 00:01:50,876
meaning a client secret is required and direct access grant to off as having

34
00:01:50,876 --> 00:01:55,652
it on would effectively enable the password grant flow.

35
00:01:55,652 --> 00:01:58,303
Service account enabled off.

36
00:01:58,303 --> 00:02:03,469
This is for the client credentials grant for machine-to-machine authentication.

37
00:02:03,469 --> 00:02:05,306
We don't need this at the moment.

38
00:02:05,306 --> 00:02:07,836
Below are some more advanced settings.

39
00:02:07,836 --> 00:02:11,845
a useful one is access token lifespan where you can set

40
00:02:11,845 --> 00:02:14,338
how long the access token is active for.

41
00:02:14,338 --> 00:02:17,360
Next, we preregister our redirect URI.

42
00:02:17,360 --> 00:02:21,573
This is the same one we provided in the Spring config.

43
00:02:21,573 --> 00:02:26,622
This needs to match as Keycloak will not redirect to any other URL.

44
00:02:26,622 --> 00:02:28,998
You could also add additional ones.

45
00:02:28,998 --> 00:02:30,698
Save this for now.

46
00:02:30,698 --> 00:02:35,423
In the Credentials tab, we now have the client ID and secret,

47
00:02:35,423 --> 00:02:38,616
which we will need to provide Spring later.

48
00:02:38,616 --> 00:02:40,963
Now that's it for the client.

49
00:02:40,963 --> 00:02:42,546
Let's create a test user.

50
00:02:42,546 --> 00:02:47,330
Select Users, Add user, fill this in and enable them.

51
00:02:47,330 --> 00:02:50,701
Add a password for them in credentials.

52
00:02:50,701 --> 00:02:51,153
As you can see,

53
00:02:51,153 --> 00:02:56,624
there is a lot of customization Keycloak allows you to do right out of the box.

54
00:02:56,624 --> 00:02:59,798
We are just scratching the surface.

55
00:02:59,798 --> 00:03:07,000
Now that's the hard part done. Next, let's set up this client in our Spring web app.

