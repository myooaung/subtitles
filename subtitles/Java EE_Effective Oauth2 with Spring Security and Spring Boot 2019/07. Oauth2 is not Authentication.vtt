WEBVTT
1
00:00:02.032 --> 00:00:07.273
OAuth is actually for delegated authorization, not authorization.

2
00:00:07.273 --> 00:00:11.339
It is a resource owner giving a third party access to a

3
00:00:11.339 --> 00:00:14.151
protected resource on their behalf.

4
00:00:14.151 --> 00:00:17.495
The best way to get your head around this is with an example.

5
00:00:17.495 --> 00:00:20.543
Now if Victoria has a bank account,

6
00:00:20.543 --> 00:00:24.548
she is authorized to withdraw money from her account by the bank.

7
00:00:24.548 --> 00:00:26.586
That's authorization.

8
00:00:26.586 --> 00:00:27.011
However,

9
00:00:27.011 --> 00:00:31.681
if Victoria wants to delegate Adam to withdraw some funds from her bank account,

10
00:00:31.681 --> 00:00:34.553
she can authorize Adam to do so.

11
00:00:34.553 --> 00:00:34.867
However,

12
00:00:34.867 --> 00:00:37.970
that doesn't mean that Adam is authorized to withdraw the

13
00:00:37.970 --> 00:00:41.499
money by the bank on Victoria's behalf.

14
00:00:41.499 --> 00:00:43.833
If the bank has a policy that only the account

15
00:00:43.833 --> 00:00:46.084
holder is allowed to withdraw funds,

16
00:00:46.084 --> 00:00:51.102
even if the bank verifies with 100% certainty that Victoria

17
00:00:51.102 --> 00:00:55.031
authorized Adam to withdraw funds on her behalf,

18
00:00:55.031 --> 00:01:00.070
the transaction is still not authorized as it breaks the bank's policy.

19
00:01:00.070 --> 00:01:02.786
That's delegated authorization.

20
00:01:02.786 --> 00:01:07.809
Additionally, there is a misconception that OAuth is purely for social sign-in.

21
00:01:07.809 --> 00:01:10.348
That's one popular use case for OAuth.

22
00:01:10.348 --> 00:01:12.847
However, OAuth is much more.

23
00:01:12.847 --> 00:01:20.000
In fact, it's really not for authentication. We'll discuss why next.

