1
00:00:02,060 --> 00:00:06,600
So in this module, we learned quite a bit about the grid, time to summarize it.

2
00:00:06,790 --> 00:00:12,280
You learned how you can create a grid, you do that by adding the display grid property to an element,

3
00:00:12,280 --> 00:00:17,620
this will automatically create a grid then and it will automatically place the direct child elements

4
00:00:17,860 --> 00:00:19,750
in rows of that grid.

5
00:00:19,750 --> 00:00:25,370
The rows are generated automatically and are as high as the content requires it to be.

6
00:00:25,630 --> 00:00:28,550
You can overwrite that default with grid auto flow,

7
00:00:28,570 --> 00:00:35,230
you can set the default of creating rows to create columns there for example and you can also style these

8
00:00:35,260 --> 00:00:42,340
automatically generated rows or columns with grid auto rows or grid auto columns. With grid auto gap,

9
00:00:42,340 --> 00:00:46,060
you can also add gaps between your columns and rows to the grid.

10
00:00:46,060 --> 00:00:49,160
Now that's the general grid, regarding the structure of the grid,

11
00:00:49,160 --> 00:00:56,200
you define columns and/or rows explicitly if you want to do this via grid template columns or grid

12
00:00:56,230 --> 00:00:57,490
template rows.

13
00:00:57,550 --> 00:01:01,980
Now please keep in mind what I said about the explicit and the implicit grid,

14
00:01:01,990 --> 00:01:06,440
you can also stick to these automatically generated rows if that is all you need

15
00:01:06,490 --> 00:01:12,700
but if you need at least two columns or you need certain layouts for your rows, then you want to add

16
00:01:12,700 --> 00:01:16,240
your columns and rows manually with these two properties.

17
00:01:16,420 --> 00:01:19,750
You can configure both rows and columns with repeat,

18
00:01:19,870 --> 00:01:23,400
there you enter the amount of times you want to repeat a certain size

19
00:01:23,500 --> 00:01:28,380
and then there will be as many columns or rows created as this function spits out,

20
00:01:28,390 --> 00:01:34,540
for example repeat three 10rem would create three columns or rows which have the width or height of 10rem

21
00:01:34,540 --> 00:01:35,650
.

22
00:01:35,710 --> 00:01:40,010
You can also use auto-fill or auto-fit on columns only

23
00:01:40,020 --> 00:01:46,900
though in the repeat function instead of entering a number in the times slot, this will then generate

24
00:01:46,990 --> 00:01:54,070
as many columns as fit into one row. Auto-fit also ensures that it's nicely centered and takes the full

25
00:01:54,070 --> 00:01:56,020
available width into account.

26
00:01:56,320 --> 00:02:01,960
And you shouldn't forget about the minmax function which you could enter in the size slot of the repeat

27
00:02:01,960 --> 00:02:06,010
function or in any other place where a size is required.

28
00:02:06,070 --> 00:02:12,580
Minmax will take two arguments; the first argument defines the minimum amount of width or height the

29
00:02:12,580 --> 00:02:13,850
column or row should have

30
00:02:13,930 --> 00:02:16,500
and the second argument defines the maximum.

31
00:02:16,660 --> 00:02:21,550
This is great for ensuring that certain columns or rows are never smaller than a certain size but

32
00:02:21,550 --> 00:02:27,670
also never bigger than another option or use auto as a maximum size, then they will always take the

33
00:02:27,670 --> 00:02:33,750
remaining free space. With the grid and its structure defined, it's all about placing elements.

34
00:02:33,760 --> 00:02:38,080
Now you don't need to define a grid structure on your own, you can just use the automatically created

35
00:02:38,080 --> 00:02:44,410
rows for that but you can then, in either of the two cases, decide where an element should be by using

36
00:02:44,410 --> 00:02:52,000
grid row and/or a grid column and then you can use line numbers or line names or you use grid area together

37
00:02:52,000 --> 00:02:53,560
with named areas.

38
00:02:53,840 --> 00:03:00,270
You shouldn't forget about span x as well as negative values for line numbers,

39
00:03:00,280 --> 00:03:07,750
this can help you to ensure that your elements span a certain amount of cells or simply span an entire

40
00:03:07,750 --> 00:03:10,200
row or whatever your requirement is.

41
00:03:10,330 --> 00:03:14,410
And last but not least, you cannot just position your elements in the grid,

42
00:03:14,410 --> 00:03:21,880
you can also align them and alignment is done with justify items on the x-axis and align items on the

43
00:03:21,880 --> 00:03:28,540
y-axis. For the entire grid where the content might not take the entire space you reserved,

44
00:03:28,540 --> 00:03:35,100
you can position it with justify content on the x-axis and align content on the y-axis.

45
00:03:35,300 --> 00:03:40,900
This is the brief summary, obviously it's all about practicing and diving into the different properties

46
00:03:41,020 --> 00:03:42,330
and simply using them

47
00:03:42,430 --> 00:03:46,960
but I hope that this module was very helpful when it comes to getting started with the grid.
