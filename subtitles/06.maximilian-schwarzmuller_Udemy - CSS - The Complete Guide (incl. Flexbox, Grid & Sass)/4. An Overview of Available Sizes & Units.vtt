WEBVTT
1
00:00:02.370 --> 00:00:05.160
So how is the size calculated?

2
00:00:05.160 --> 00:00:06.280
Let's have a look at that

3
00:00:06.340 --> 00:00:12.960
for the different units we have. The first category would be absolute lengths. What happens right here is

4
00:00:12.960 --> 00:00:18.210
that these absolute lengths mostly ignore user settings.

5
00:00:18.210 --> 00:00:19.880
Well what do I mean by that?

6
00:00:20.220 --> 00:00:25.950
Well if we apply pixels for example, we saw that in the example on our website on the customer page

7
00:00:26.190 --> 00:00:28.620
with the font size of 20 pixels.

8
00:00:28.620 --> 00:00:35.100
If I do that and our user changes the default font size, well then the font size on the website won't

9
00:00:35.100 --> 00:00:40.230
change because the user settings as it's written right here are ignored.

10
00:00:40.290 --> 00:00:43.620
So we specify a pixel and that's it,

11
00:00:43.620 --> 00:00:45.280
the user cannot change it.

12
00:00:45.480 --> 00:00:50.400
Yes you can change it by zooming in with the browser but we learn that this is probably not the behavior

13
00:00:50.490 --> 00:00:54.930
that we want. In addition to this pixel as an absolute length,

14
00:00:54.930 --> 00:00:58.860
we also have centimeters, millimeters and more

15
00:00:59.100 --> 00:01:04.630
but these are not units you should use in web development because centimeters and millimeters,

16
00:01:04.680 --> 00:01:11.190
these are units you use if you have something on paper because on paper, one centimeter is one centimeter,

17
00:01:11.790 --> 00:01:17.470
on a display, one centimeter definitely is not equal to one centimeter, so using these units

18
00:01:17.520 --> 00:01:20.050
in the end will just lead to a total mess.

19
00:01:20.070 --> 00:01:21.910
So we should avoid these,

20
00:01:21.930 --> 00:01:22.980
we won't use these,

21
00:01:22.980 --> 00:01:26.980
therefore I just wanted to show you that these units are also existing

22
00:01:27.090 --> 00:01:31.390
but we will stick to pixels when it comes to absolute lengths.

23
00:01:31.410 --> 00:01:34.800
With that we finished the first category of units,

24
00:01:34.800 --> 00:01:36.220
now what's the second category?

25
00:01:36.480 --> 00:01:42.930
Well the second category are viewport lengths. Viewport lengths, as the name says actually, adjust the

26
00:01:42.930 --> 00:01:45.560
size of the element we apply to

27
00:01:45.810 --> 00:01:51.390
according to the viewport, the viewport lengths can be applied with the vh value,

28
00:01:51.400 --> 00:01:54.360
so viewport height but also with viewport

29
00:01:54.360 --> 00:01:56.030
width, I showed you that already

30
00:01:56.220 --> 00:02:00.890
and we have more, we have vmin and vmax, we'll have a look at that

31
00:02:00.900 --> 00:02:08.970
once we understood vh and vw but generally, these lengths allow us to adjust our size more dynamically

32
00:02:09.060 --> 00:02:10.110
to the viewport.

33
00:02:10.140 --> 00:02:16.180
You'll learn what the viewport is, basically the visible part of our website in the browser.

34
00:02:16.680 --> 00:02:18.080
So that's the second category,

35
00:02:18.120 --> 00:02:25.860
viewport lengths, then we have a third one, font relative lengths. As the name says, font relative lengths

36
00:02:26.010 --> 00:02:28.420
adjust to the default font size

37
00:02:28.710 --> 00:02:34.240
and if you remember back what I said in the beginning, then this rem with my bad rem joke,

38
00:02:34.290 --> 00:02:38.140
this is the unit that allows you to do that.

39
00:02:38.160 --> 00:02:41.540
I also told you that we have em and that there is an important difference,

40
00:02:41.550 --> 00:02:43.760
we'll find out more about this difference

41
00:02:43.890 --> 00:02:48.420
and we also have more units available that are just sort of font size

42
00:02:48.570 --> 00:02:54.560
but as you can see, I didn't even mention them because rem and em are really the units you have to know

43
00:02:54.750 --> 00:02:57.160
when it comes to font relative lengths.

44
00:02:57.270 --> 00:03:05.360
And with that, there is only one category left and this category is a category we already know, the percentages,

45
00:03:05.490 --> 00:03:08.300
we applied these a lot already on our website.

46
00:03:08.760 --> 00:03:15.060
But the interesting thing is that, although we apply the percentages, we didn't understand how it works

47
00:03:15.060 --> 00:03:19.370
in detail and more importantly, it's even a special case.

48
00:03:19.380 --> 00:03:23.730
Now why is the percentage value a special case?

49
00:03:23.730 --> 00:03:31.230
Well because we have to answer the question, how this box size is actually calculated if we use the percentage

50
00:03:31.230 --> 00:03:33.610
unit to calculate the box size

51
00:03:33.870 --> 00:03:36.070
because the situation normally is the following,

52
00:03:36.120 --> 00:03:37.150
you have a div,

53
00:03:37.170 --> 00:03:42.950
this can have a padding and a border, like here and this div is normally nested into another div.

54
00:03:42.990 --> 00:03:46.450
This could be the body element, this could be another parent element,

55
00:03:46.650 --> 00:03:47.750
anything like that.

56
00:03:48.000 --> 00:03:53.370
Well and now the question is of course, this box size right here as a percentage value

57
00:03:53.640 --> 00:03:57.270
and this box width right here, also as a percentage,

58
00:03:57.360 --> 00:04:01.470
well what is this height and this width referring to?

59
00:04:01.680 --> 00:04:06.060
So if I add a width of 80%, what is this 80%?

60
00:04:06.270 --> 00:04:08.340
Is it 80% of the parent,

61
00:04:08.400 --> 00:04:14.410
80% of the body element, of the HTML element or of anything else we don't know so far?

62
00:04:14.610 --> 00:04:20.340
This is exactly the problem we have to take a closer look right now and for that, we have to understand

63
00:04:20.400 --> 00:04:22.230
the so-called containing.
