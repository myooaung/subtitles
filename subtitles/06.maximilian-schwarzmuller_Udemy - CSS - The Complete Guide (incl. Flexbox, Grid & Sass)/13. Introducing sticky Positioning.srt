1
00:00:02,560 --> 00:00:07,950
Let's have a look at sticky positioning. For that, I prepared another example for you,

2
00:00:08,060 --> 00:00:13,670
as always you can find the code attached to this video and what we can see right here are basically

3
00:00:13,850 --> 00:00:15,560
three different elements, 

4
00:00:15,560 --> 00:00:16,850
we can inspect it right here,

5
00:00:16,880 --> 00:00:24,620
we have three parent classes and inside this classes, we have a class country with the country and two

6
00:00:24,620 --> 00:00:25,180
cities,

7
00:00:25,250 --> 00:00:31,860
two separate classes again. If we scroll through that page, we can see that there is nothing spectacular actually.

8
00:00:32,120 --> 00:00:35,290
The code itself is also quite easy as we saw it,

9
00:00:35,330 --> 00:00:43,280
we have the HTML code right here with our one, two and three parent classes and the three classes inside of

10
00:00:43,280 --> 00:00:44,200
each parent.

11
00:00:44,480 --> 00:00:46,870
Additionally we have some CSS code,

12
00:00:47,030 --> 00:00:53,060
you can see the code I commented out right here because it's basically the same code we had in the other

13
00:00:53,060 --> 00:00:54,320
examples right here

14
00:00:54,800 --> 00:01:01,090
and I wanted to comment it out first to improve the readability for this first example right here

15
00:01:01,310 --> 00:01:07,370
but as soon as we dive deeper into sticky, I will comment this in just to make sure you can see all the relationships,

16
00:01:07,370 --> 00:01:10,050
so child, parent and so on.

17
00:01:10,100 --> 00:01:15,320
Now with that, let's start adding this position sticky declaration now

18
00:01:15,650 --> 00:01:20,770
and I want to add position sticky right here to the parent country selector

19
00:01:20,960 --> 00:01:28,670
and I don't explain a lot on purpose because I first want to show you what it does and then why it is

20
00:01:28,670 --> 00:01:30,350
doing what it does,

21
00:01:30,380 --> 00:01:35,820
so let's add position sticky right here to our country,

22
00:01:36,650 --> 00:01:39,370
basically we added it to this class right here now.

23
00:01:39,390 --> 00:01:50,230
If we now reload the page and scroll around, nothing changed but if we now add another property, a

24
00:01:50,230 --> 00:01:56,020
well-known property, top and say maybe 20 pixels,

25
00:01:56,050 --> 00:02:01,880
let's see if this changes the behavior of sticky. If you load again and now scroll down,

26
00:02:02,210 --> 00:02:04,560
oh what was that,

27
00:02:04,590 --> 00:02:07,320
can you see it? The USA,

28
00:02:07,440 --> 00:02:10,290
so the country element doesn't move

29
00:02:10,290 --> 00:02:11,890
in the beginning, you can see it

30
00:02:12,270 --> 00:02:20,070
but as soon as it touches a certain limit apparently, it moves downwards and behaves like a fixed element,

31
00:02:20,280 --> 00:02:22,100
oh but here it ends.

32
00:02:22,260 --> 00:02:28,670
If we scroll down further, we can see the same behavior for France, which stops right here

33
00:02:29,100 --> 00:02:32,870
and for Germany which stops right there.

34
00:02:32,950 --> 00:02:34,330
So what can we see right here,

35
00:02:34,330 --> 00:02:35,790
what is sticky doing?

36
00:02:36,250 --> 00:02:43,960
Well sticky is basically a hybrid or a combination of relative and fixed because if we now again

37
00:02:44,050 --> 00:02:48,110
remove top 20 pixels, we saw that and reload the page,

38
00:02:48,310 --> 00:02:49,320
nothing changes,

39
00:02:49,330 --> 00:02:54,600
so we basically added a position property which doesn't change the position in the document flow or

40
00:02:54,610 --> 00:02:59,490
which changes the position of the element at all, like relative does

41
00:02:59,590 --> 00:03:05,770
but as soon as we add the top property right here, the element behaves like a fixed element

42
00:03:05,770 --> 00:03:14,620
as soon as we reach a certain border. Now the border is reached depending on our position of the viewport

43
00:03:14,860 --> 00:03:24,240
because if we inspect USA up here and scroll down, we can see that as soon as we reach a certain limit,

44
00:03:24,930 --> 00:03:27,080
the element is fixed

45
00:03:27,270 --> 00:03:37,390
and if I change top 20 pixels to top 0, like that, I think you probably believe me that the relevant border

46
00:03:37,630 --> 00:03:39,940
is the distance between the viewport

47
00:03:40,030 --> 00:03:47,920
and can you see it, the border of our USA element right here. If we move down, it sticks right here and the

48
00:03:47,920 --> 00:03:49,390
same thing can be observed,

49
00:03:49,390 --> 00:03:54,320
can you see it? As soon as we reach our border of the France element,

50
00:03:54,370 --> 00:03:57,290
it moves down, same thing is true for Germany.

51
00:03:57,610 --> 00:03:58,740
So that's the first thing,

52
00:03:58,840 --> 00:04:04,440
apparently we can specify a distance between our element and the viewport

53
00:04:04,660 --> 00:04:08,490
and as soon as we reach this distance, the element behaves as fixed,

54
00:04:08,620 --> 00:04:11,480
I think we understood that.

55
00:04:11,550 --> 00:04:18,000
The interesting thing at the same time though is that the element simply stops being fixed as soon as

56
00:04:18,000 --> 00:04:24,510
it reaches the end of the content of its parent element and that's the second interesting behavior of

57
00:04:24,510 --> 00:04:25,190
sticky

58
00:04:25,290 --> 00:04:33,030
and that's also the reason why I will now comment in that code again, right here and right there, right

59
00:04:33,030 --> 00:04:34,530
here and right there

60
00:04:35,410 --> 00:04:38,840
and also the parent border maybe, like that

61
00:04:39,400 --> 00:04:46,610
and if we reload the page now and maybe change the color of the body to be honest, maybe to this gray,

62
00:04:46,710 --> 00:04:49,210
this looks better, like that,

63
00:04:49,240 --> 00:04:51,960
then you can see the same behavior we had before

64
00:04:52,060 --> 00:04:53,560
but you can get the idea of

65
00:04:54,010 --> 00:04:57,730
child, parent and parent of the parent,

66
00:04:57,760 --> 00:04:59,120
so the body element.

67
00:04:59,350 --> 00:05:03,610
And as you can see, the body element doesn't have an impact at all,

68
00:05:03,610 --> 00:05:10,170
the parent also doesn't have an impact, the only impact is only as I said this viewport

69
00:05:10,310 --> 00:05:17,840
but to end this fixed behavior, the end of the content inside the parents is the important factor.

70
00:05:18,260 --> 00:05:26,270
And we won't dive deeper into it in this course because sticky is a rather new value for the position

71
00:05:26,270 --> 00:05:26,980
property,

72
00:05:27,140 --> 00:05:31,010
so I think it's important to understand why it is there and how it works

73
00:05:31,280 --> 00:05:34,350
but browser support is not perfect yet,

74
00:05:34,430 --> 00:05:39,190
let me show you what I mean. If you Google caniuse, so right here,

75
00:05:39,230 --> 00:05:41,920
you can also write it like this if you want to,

76
00:05:41,930 --> 00:05:43,170
doesn't make a difference.

77
00:05:43,220 --> 00:05:44,280
So caniuse,

78
00:05:44,390 --> 00:05:47,160
you'll find this caniuse.com link up here.

79
00:05:47,300 --> 00:05:54,210
If you click onto that, you can now simply add the value in our case that you want to apply,

80
00:05:54,230 --> 00:06:01,670
we want to apply the sticky value and as you can see, we have CSS position sticky right here and browser

81
00:06:01,670 --> 00:06:02,430
support,

82
00:06:02,520 --> 00:06:04,120
yes it's OK

83
00:06:04,490 --> 00:06:07,070
but we can see it for the IE,

84
00:06:07,070 --> 00:06:11,560
the browser support is not there at all, for Edge,

85
00:06:11,570 --> 00:06:13,030
it's there, for Firefox,

86
00:06:13,040 --> 00:06:18,040
it's also there but even for Chrome, it's only partially supported.

87
00:06:18,170 --> 00:06:24,650
Therefore using sticky right now depending on your needs is maybe not the best idea but

88
00:06:24,650 --> 00:06:28,850
as this browser support might improve or will improve in the future, 

89
00:06:28,940 --> 00:06:34,600
knowing sticky and also having a basic idea of how it works is definitely helpful.

90
00:06:35,000 --> 00:06:41,720
But with that, I want to end the sticky part and before we also finish this module, I want to come

91
00:06:41,720 --> 00:06:49,500
back to a topic I quickly talked about when we applied the z-index, the stacking context.

92
00:06:49,540 --> 00:06:50,480
What's that actually?
