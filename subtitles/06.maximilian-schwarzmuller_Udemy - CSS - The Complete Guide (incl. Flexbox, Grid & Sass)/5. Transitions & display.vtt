WEBVTT
1
00:00:02.330 --> 00:00:08.100
Now with the basics of transition set, let's transition the backdrop too. Now

2
00:00:08.120 --> 00:00:15.290
there, we'll face a special case which I want to show you. The backdrop which is selected with this backdrop

3
00:00:15.290 --> 00:00:19.440
class selector still is shown by setting display none to display

4
00:00:19.440 --> 00:00:25.790
block and this happens because we add the open class to the backdrop too when we select the plan for

5
00:00:25.790 --> 00:00:27.230
example.

6
00:00:27.260 --> 00:00:31.090
Now the problem we face is that in that open class,

7
00:00:31.160 --> 00:00:37.640
we obviously changed the opacity and display to block and now we could think that we simply go to the

8
00:00:37.640 --> 00:00:44.590
backdrop and also don't use display none to hide it but opacity zero instead.

9
00:00:44.600 --> 00:00:51.640
Then we could add a transition where we watch the opacity and maybe over 200ms or .2s

10
00:00:51.650 --> 00:00:57.230
which of course is the same value, we animate with a linear timing function so that we always move at the

11
00:00:57.230 --> 00:00:58.400
same speed,

12
00:00:58.460 --> 00:01:04.930
this is an approach we could take. If we now reload the page, we notice that we can't click choose plan anymore.

13
00:01:05.120 --> 00:01:06.770
Now do you know why that happens?

14
00:01:08.320 --> 00:01:12.100
This happens because the backdrop now only is invisible,

15
00:01:12.340 --> 00:01:17.690
it's not not there. Now since it has a set index of 100, 

16
00:01:17.740 --> 00:01:21.370
it's actually in front of all the other elements even though we can't see it,

17
00:01:21.370 --> 00:01:24.730
that is why we can't interact with any element on our page,

18
00:01:24.760 --> 00:01:27.660
clearly an awful user experience.

19
00:01:27.750 --> 00:01:29.380
Now of course the fix is easy, right?

20
00:01:29.530 --> 00:01:35.080
We got our open CSS class selector here and we still set the display block there,

21
00:01:35.080 --> 00:01:41.400
so all we got to do is go to that backdrop again and besides using the opacity, we can use display none

22
00:01:41.430 --> 00:01:43.060
together with the opacity.

23
00:01:43.450 --> 00:01:49.440
With that, we really remove it from the document flow and therefore if we reload, we can interact again.

24
00:01:49.450 --> 00:01:55.900
However, if you watch closely, you might notice that the backdrop isn't really animated and

25
00:01:55.900 --> 00:02:01.240
this becomes even clearer if we temporarily increase that to two seconds of a duration.

26
00:02:01.240 --> 00:02:07.390
Now if we go back and click this plan, this doesn't look like a two second transition to me.

27
00:02:07.390 --> 00:02:09.780
The reason for this is some special behavior.

28
00:02:10.000 --> 00:02:14.890
If you change display, first of all you can't transition that display change,

29
00:02:14.890 --> 00:02:16.980
so watching display won't work

30
00:02:17.050 --> 00:02:23.590
and second of all, if you change the display from none to something else or the other way around, then

31
00:02:23.620 --> 00:02:25.860
your transition isn't going to kick off

32
00:02:25.960 --> 00:02:32.680
even if you're also changing some other property which normally would be animatable or transitionable, this

33
00:02:32.680 --> 00:02:39.670
is super important to keep in mind. Now if you still want to ensure that this works in this case, you would

34
00:02:39.670 --> 00:02:46.930
have to use some hacky workaround where in Javascript, you actually first of all set the backdrop style

35
00:02:46.930 --> 00:02:50.530
to block, backdrop style

36
00:02:50.530 --> 00:02:58.410
display is set to block and also the other way around for closing it,

37
00:02:59.440 --> 00:03:05.950
so in all occasions where we actually have remove the open class, we set that to none

38
00:03:06.140 --> 00:03:08.420
and that alone isn't enough,

39
00:03:08.420 --> 00:03:11.550
so this isn't all we have to do,

40
00:03:11.870 --> 00:03:18.100
instead we now also have to delay the start of the code where we add the open class,

41
00:03:18.110 --> 00:03:24.600
we can do this with the Javascript set timeout method, there we pass a function which is executed after

42
00:03:24.620 --> 00:03:30.300
a given timeout which can be very short, like 10ms, the 10 is a second argument means 10ms.

43
00:03:30.440 --> 00:03:33.680
So after 10ms, this function gets executed

44
00:03:33.890 --> 00:03:37.720
and there we actually should attach that open class.

45
00:03:37.760 --> 00:03:42.850
So now we can copy that and also wrap that backdrop,

46
00:03:42.890 --> 00:03:45.670
remove listener with it.

47
00:03:45.950 --> 00:03:49.010
So here we want to remove that after 10ms

48
00:03:49.040 --> 00:03:56.800
and what this does is, it ensures that we first of all set display to none or block, whatever we need

49
00:03:56.800 --> 00:04:00.180
and then as a second step, we change that,

50
00:04:00.440 --> 00:04:02.600
so we add this class or remove it.

51
00:04:02.840 --> 00:04:09.690
This ensures that CSS doesn't change all the properties in one step and therefore omit the transition

52
00:04:10.000 --> 00:04:14.100
but that it actually first of all changes the display which is the crucial part

53
00:04:14.240 --> 00:04:19.660
and then it changes the other properties and hence also plays our transition.

54
00:04:19.880 --> 00:04:28.000
So let's also add it up here where we have backdrop class list add open and with these changes in

55
00:04:28.010 --> 00:04:35.000
place, now we should actually be able to reload our page and now we see a nice transition here.

56
00:04:35.000 --> 00:04:36.470
Now of course, that's way too slow,

57
00:04:36.560 --> 00:04:42.940
so now we can speed that up to not use 2s but .2s for that opacity transition

58
00:04:43.460 --> 00:04:45.740
and now we get a transition on the backdrop too.

59
00:04:45.890 --> 00:04:51.410
Definitely a bit hacky but a way of making this work if you need such a behavior and I wanted to share

60
00:04:51.410 --> 00:04:57.080
this with you for that reason. Now one thing you might notice; for closing the backdrop, it disappears instantly

61
00:04:57.080 --> 00:05:00.110
because I have an error in my code. For closing,

62
00:05:00.110 --> 00:05:06.100
we of course first of all want to remove that open class and then once that is finished, we want to set

63
00:05:06.110 --> 00:05:12.830
display to none. This has one important implication, for that closing function, the timeout, the delay for

64
00:05:12.830 --> 00:05:18.220
which you want to wait has to match the delay of your transition or the duration of your transition

65
00:05:18.220 --> 00:05:24.680
I should say. So since our transition takes 200ms, here that opacity transition on the backdrop,

66
00:05:25.400 --> 00:05:29.660
we need to execute that function which removes the element from the document flow by setting display

67
00:05:29.660 --> 00:05:33.400
to none after this 200ms

68
00:05:33.620 --> 00:05:39.140
and that of course is a bit inconvenient because this means whenever you change the duration here on

69
00:05:39.140 --> 00:05:43.460
your transition property, you also need to change it in your Javascript code.

70
00:05:43.670 --> 00:05:46.900
This is still a workaround you can use, often

71
00:05:46.910 --> 00:05:50.960
thankfully, you don't have a set up where you require this behavior,

72
00:05:50.960 --> 00:05:55.420
if you do require it, keep this approach in mind. With these changes added,

73
00:05:55.430 --> 00:05:56.620
now we can reload

74
00:05:56.780 --> 00:06:04.110
and now we got a smooth transition for the backdrop as well for both cases; adding and removing it.

75
00:06:04.190 --> 00:06:09.880
So this now is how we can make transitions work under all circumstances.
