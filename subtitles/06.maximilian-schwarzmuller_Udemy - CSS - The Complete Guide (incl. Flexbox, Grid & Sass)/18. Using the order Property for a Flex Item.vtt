WEBVTT
1
00:00:02.090 --> 00:00:09.500
So with the flex container understood and applied to our project, it's now time to dive deeper into the

2
00:00:09.500 --> 00:00:17.660
flex items and the corresponding properties, specifically we will dive into the order property, then

3
00:00:17.660 --> 00:00:25.490
we'll use the flex shorthand which consists of three single properties actually: the flex grow, flex shrink

4
00:00:25.700 --> 00:00:27.900
and flex basis property

5
00:00:28.010 --> 00:00:34.700
and finally, we'll also have a look at align self. Now to understand these properties, we will jump back

6
00:00:34.700 --> 00:00:40.600
to our theory project and see what these properties do and how we can have an impact, that's really important

7
00:00:40.610 --> 00:00:47.990
now, onto the single flex items that we have because so far, all the properties applied to the flex container

8
00:00:48.290 --> 00:00:55.270
had the same effect onto all flex items. With the flex item specific properties,

9
00:00:55.370 --> 00:00:58.900
we can now really access specific items.

10
00:00:58.940 --> 00:01:01.730
Now let's find out how this works. For that, I'm

11
00:01:01.820 --> 00:01:07.800
back in our project, this is the status we had when we jumped back into our project, into the website

12
00:01:07.930 --> 00:01:08.850
project.

13
00:01:08.870 --> 00:01:16.790
So in the code, I will first change justify content to flex start, like that because I want to make sure

14
00:01:16.790 --> 00:01:22.370
that these elements are aligned to the left so we have a bit more space to the right, we will need

15
00:01:22.370 --> 00:01:28.880
that space and then I will also delete align content because we talked about it already and I don't

16
00:01:28.880 --> 00:01:30.290
think we need it anymore.

17
00:01:30.350 --> 00:01:33.250
As you can see, this doesn't make a difference right here.

18
00:01:33.470 --> 00:01:39.500
So as you saw, we have different properties which we can apply to our flex items and that's the first

19
00:01:39.500 --> 00:01:41.280
important thing we have to understand.

20
00:01:41.540 --> 00:01:48.380
So far, we only worked in the flex container here but this time or in this part of the module, we will work

21
00:01:48.500 --> 00:01:50.200
on the single element, so

22
00:01:50.300 --> 00:01:53.660
on the specific selectors right here that we want to change.

23
00:01:53.870 --> 00:01:55.420
Now what can we change?

24
00:01:55.430 --> 00:02:02.180
Well let's for example say we want to change the order of these elements and we could say that the fourth

25
00:02:02.180 --> 00:02:02.630
element,

26
00:02:02.630 --> 00:02:05.820
so this one right here should be positioned at the beginning,

27
00:02:05.840 --> 00:02:12.440
so in front of our div right here. For that, we simply have to go to item four, the fourth element right

28
00:02:12.450 --> 00:02:14.050
here and now write

29
00:02:14.060 --> 00:02:19.880
the order property, like that. The order property can have different values,

30
00:02:20.030 --> 00:02:23.080
the default value for order is simply 0.

31
00:02:23.150 --> 00:02:29.780
So if I apply this to our item four, nothing changes because order zero is applied to all elements and

32
00:02:29.780 --> 00:02:31.730
will not change a thing.

33
00:02:31.730 --> 00:02:38.430
Now if we change order zero to order one though, like that, if I now reload the page,

34
00:02:38.500 --> 00:02:44.840
well you can see that the element we applied the order property to is now positioned at the end. Now

35
00:02:45.050 --> 00:02:46.010
what does 'at the end' mean?

36
00:02:46.120 --> 00:02:51.610
Well keep in mind we have a flex direction of row, so the main axis goes from left to right,

37
00:02:51.610 --> 00:02:54.610
so at the end of this main axis right here

38
00:02:54.700 --> 00:03:02.260
but this also means if our other elements have an order of zero and one positions the element at the end of

39
00:03:02.260 --> 00:03:03.320
the other elements,

40
00:03:03.460 --> 00:03:09.430
well then if we will change it to -1 right here for example, like that and reload the page, we

41
00:03:09.430 --> 00:03:16.210
can position it in front of the other elements and that's actually the core logic that we have for this

42
00:03:16.250 --> 00:03:17.700
order property.

43
00:03:17.710 --> 00:03:22.430
It allows us to change the order of the elements that the elements initially have

44
00:03:22.440 --> 00:03:30.220
based on the code in HTML and by adding numbers, we simply say that the bigger number we apply to

45
00:03:30.220 --> 00:03:33.940
the order, the later the element will be positioned.

46
00:03:33.940 --> 00:03:42.010
For example, if we now apply an order value right here to our last item of -2 which is smaller than

47
00:03:42.010 --> 00:03:47.670
the one we apply to the fourth item right here, then this element will be positioned in front of all

48
00:03:47.680 --> 00:03:49.000
the other elements.

49
00:03:49.010 --> 00:03:55.630
On the other hand, if I now apply one back to our item four right here like that, it will be positioned at

50
00:03:55.630 --> 00:04:03.910
the end of the elements because this element right here has an order value of, let me increase it a bit, of

51
00:04:03.910 --> 00:04:04.210
-2,

52
00:04:04.240 --> 00:04:05.540
so this is the smallest one,

53
00:04:05.560 --> 00:04:10.820
so this will be the first element that is displayed. Then we have the elements right here in the middle,

54
00:04:10.820 --> 00:04:17.650
this one, this one, this one and that one which has the default order value of 0 and then we have the

55
00:04:17.650 --> 00:04:20.370
last element right here with the order value of 1,

56
00:04:20.410 --> 00:04:23.910
so the highest value and therefore, it's positioned at the end.

57
00:04:24.250 --> 00:04:31.930
An important thing to keep in mind though is, if I now change our flex direction right here from row

58
00:04:32.020 --> 00:04:39.460
to row reverse for example like that, then this will of course also change the order accordingly.

59
00:04:39.460 --> 00:04:43.700
Now this element is displayed first on the screen because it's the last element,

60
00:04:43.720 --> 00:04:48.010
remember our main axis starts right here from right to left,

61
00:04:48.010 --> 00:04:53.100
so at the end of the main axis and the element with the lowest order value,

62
00:04:53.110 --> 00:04:58.810
so this one right here is positioned at the beginning of the main axis right here

63
00:04:58.960 --> 00:05:05.100
but at the end of the page now if you read our page from left to right. This is also true if we change the flex

64
00:05:05.200 --> 00:05:06.990
direction to column right here,

65
00:05:07.060 --> 00:05:08.930
that's of course also possible

66
00:05:09.010 --> 00:05:15.910
and if we do that like this and reload our page, then you can see that the element with the lowest order

67
00:05:15.910 --> 00:05:20.410
value is positioned first and the element with the highest order last

68
00:05:20.410 --> 00:05:27.900
and if we now apply column reverse, then as you can hopefully imagine now, it will be displayed like that

69
00:05:27.990 --> 00:05:34.290
because this will now be positioned at the end of the main axis which now goes from the bottom left corner

70
00:05:34.380 --> 00:05:36.230
to the upper left corner.

71
00:05:36.230 --> 00:05:42.210
Now let's change this back to row though because I think that's the more intuitive way of displaying such

72
00:05:42.300 --> 00:05:44.350
elements, like that.

73
00:05:44.340 --> 00:05:50.670
Now with that, we understood the first property, the order property and we can actually remove that right

74
00:05:50.670 --> 00:05:54.350
here because I don't think we need to change the order of our elements,

75
00:05:54.360 --> 00:05:55.910
it's totally fine the way it is,

76
00:05:55.920 --> 00:06:03.350
so let's reload that and let me show you the second property that we have for our flex items.

77
00:06:03.540 --> 00:06:05.640
Let's do that in the next lecture.
