WEBVTT
1
00:00:02.150 --> 00:00:04.080
So what is SASS?

2
00:00:04.130 --> 00:00:10.640
And here, I just wrote it a bit differently, you can use both notations and I also note it SCSS in

3
00:00:10.640 --> 00:00:15.110
the title. Now SASS and SCSS are essentially the same,

4
00:00:15.110 --> 00:00:17.330
their syntax varies slightly

5
00:00:17.360 --> 00:00:21.780
and I will explain what the difference is and how their syntax differs in a second

6
00:00:22.040 --> 00:00:25.250
but first of all, let's find out what it is in general,

7
00:00:25.250 --> 00:00:28.180
what is this SASS/SCSS thing about?

8
00:00:28.580 --> 00:00:34.240
Well we obviously got CSS, that is what you learned in this course and no worries, what you learned

9
00:00:34.240 --> 00:00:35.300
still is valid,

10
00:00:35.390 --> 00:00:36.860
SASS builds up on it,

11
00:00:36.860 --> 00:00:38.840
it doesn't introduce new rules,

12
00:00:38.900 --> 00:00:43.560
it doesn't render your CSS knowledge you got in this course useless.

13
00:00:43.850 --> 00:00:52.550
Instead SASS stands for Syntactically Awesome Style Sheets and SASS, as I already mentioned, does not run

14
00:00:52.640 --> 00:00:54.060
in the browser,

15
00:00:54.080 --> 00:00:58.890
instead it extends CSS during development only.

16
00:00:59.090 --> 00:01:00.280
Now what does this mean?

17
00:01:00.350 --> 00:01:03.370
You can think of it like this; during development,

18
00:01:03.380 --> 00:01:09.530
you as a developer, you want to save time and you want to write clean reusable code that's easy to maintain

19
00:01:09.560 --> 00:01:15.190
and to adjust. With CSS, you can quickly end up with huge CSS files,

20
00:01:15.190 --> 00:01:22.100
with dozens, hundreds or thousands of rules. Now managing this can be cumbersome and you also find yourself

21
00:01:22.100 --> 00:01:29.070
repeating certain things a lot, so it would be nice if you had a more condensed, easier syntax,

22
00:01:29.120 --> 00:01:35.440
maybe something that allows you to nest CSS selectors into each other for example and SASS simply offers

23
00:01:35.450 --> 00:01:36.740
such features

24
00:01:36.740 --> 00:01:41.690
and in this module, you'll of course learn about all the important SASS features and I will show you in

25
00:01:41.690 --> 00:01:44.450
a real example how it would work.

26
00:01:44.450 --> 00:01:49.940
The important thing is of course that you can only use it during development, so it needs to be compiled

27
00:01:49.970 --> 00:01:56.230
to normal CSS before you can ship it to production because the browser doesn't understand SASS.

28
00:01:56.330 --> 00:02:04.280
So the idea is that you as a developer can write SASS/SCSS code and then you let some tool compile it

29
00:02:04.280 --> 00:02:09.650
to normal CSS and that's exactly what we will start with in this module thereafter,

30
00:02:09.650 --> 00:02:15.380
once we're done with these slides, we will install that tool and we will find out how it works and what

31
00:02:15.380 --> 00:02:17.780
it actually does for us.

32
00:02:17.780 --> 00:02:22.800
Now before we dive into that tool, let's quickly have a look at the SASS features we got.

33
00:02:23.210 --> 00:02:27.900
There are a lot of features and I will walk you through the important ones here in this module.

34
00:02:28.100 --> 00:02:34.310
What we can generally do with SASS is we can nest CSS rules to shorten our code,

35
00:02:34.370 --> 00:02:39.850
we can inherit from other rules so that we don't have to repeat ourselves as often,

36
00:02:40.070 --> 00:02:46.520
we can use helper functions to achieve certain things, like making a color a bit more brighter or things

37
00:02:46.520 --> 00:02:48.370
like that. We can add

38
00:02:48.380 --> 00:02:54.320
mixins to create reusable snippets of code you could say and I will show you how this works.

39
00:02:54.350 --> 00:03:00.150
We can split our code into multiple files easily with partials. We can define variables,

40
00:03:00.170 --> 00:03:06.450
let's say if a certain hex code of a color gets used a couple of times on our page, instead of writing

41
00:03:06.450 --> 00:03:12.170
that hex code every time and changing it whenever we change the color, we can simply store it in a variable

42
00:03:12.170 --> 00:03:17.020
and use that variable and we can also use conditions and loops and a couple of other features.

43
00:03:17.030 --> 00:03:20.580
Again, you will see them in practice in this module.

44
00:03:20.600 --> 00:03:26.210
So with that, let's move towards the practice and let's actually install that tool that will compile

45
00:03:26.210 --> 00:03:28.690
our SASS code to CSS code.
