WEBVTT
1
00:00:02.490 --> 00:00:05.760
So we spent a lot of time on the grid,

2
00:00:05.760 --> 00:00:14.740
time to again use it in our project and then to conclude this module. I want to use the grid on our form

3
00:00:14.750 --> 00:00:15.110
here,

4
00:00:15.150 --> 00:00:21.630
so on the start hosting form because we can actually organize this form as a grid

5
00:00:21.750 --> 00:00:23.460
and that's exactly what I want to do.

6
00:00:24.320 --> 00:00:31.240
What I want to do precisely is on bigger screens like this one, so on not mobile modes,

7
00:00:31.250 --> 00:00:38.320
I want to position my labels and the form inputs next to each other. On mobile screens,

8
00:00:38.330 --> 00:00:44.980
I essentially want to position them as they currently are positioned. Now for that, I'll use the grid

9
00:00:45.200 --> 00:00:51.230
and since we will see more on the desktop view, I'll actually start with the desktop related styles

10
00:00:51.440 --> 00:00:57.670
but we will also adjust this to be working mobile first throughout this module or throughout the next lectures

11
00:00:57.710 --> 00:00:58.720
to be precise.

12
00:00:59.030 --> 00:01:01.350
So what can we do?

13
00:01:01.370 --> 00:01:07.660
One thing I want to do is, on my start hosting, start-hosting.css file,

14
00:01:07.700 --> 00:01:13.610
the sign-up form here, I'll turn this into a grid, display grid.

15
00:01:13.910 --> 00:01:19.040
This will be relevant or this should be applied for both mobile and desktop views, so I don't need to

16
00:01:19.040 --> 00:01:20.550
put this into a media query.

17
00:01:20.810 --> 00:01:23.600
This also has one interesting implication, if we reload,

18
00:01:23.600 --> 00:01:30.350
nothing changes because the elements, the child elements are automatically put into the rows which

19
00:01:30.350 --> 00:01:31.730
are created automatically.

20
00:01:31.730 --> 00:01:36.620
You can see that we do have a grid here though if you click on that and the other interesting thing you can

21
00:01:36.620 --> 00:01:42.110
see here in the developer tools already is this page now actually has two grids;

22
00:01:42.110 --> 00:01:49.670
the body grid which is the header, main area and footer and this form grid and they are kind of nested

23
00:01:49.670 --> 00:01:50.720
into each other.

24
00:01:50.720 --> 00:01:57.590
The body holds the main element as one element, so this is added to one row of the body grid and the

25
00:01:57.590 --> 00:02:01.810
main grid on the other hand holds the form grid and that is absolutely fine,

26
00:02:01.820 --> 00:02:08.090
you can nest grids into each other just as you can add flex containers into a grid and the other way

27
00:02:08.090 --> 00:02:09.140
around.

28
00:02:09.140 --> 00:02:15.600
So we got a nested grid so to say, it's still a regular grid on my form here and this is essentially

29
00:02:15.600 --> 00:02:21.750
the look I want to have on a mobile phone, so we probably don't need to change that much about that

30
00:02:21.980 --> 00:02:23.810
but let's work on the desktop mode now,

31
00:02:23.890 --> 00:02:25.420
what can we change there?

32
00:02:26.910 --> 00:02:33.090
For that I'll go into my media query at the bottom because that is where I'll need to change things and I

33
00:02:33.090 --> 00:02:39.120
want you to define two columns there for my form because I want to position labels and inputs next to

34
00:02:39.120 --> 00:02:40.670
each other as I just said.

35
00:02:40.920 --> 00:02:47.340
So we add two columns with grid template columns and now the first column for the label maybe should

36
00:02:47.340 --> 00:02:52.860
be 10rem and the other one should be auto and just be as wide as required.

37
00:02:52.980 --> 00:02:54.470
If I now reload,

38
00:02:54.690 --> 00:02:57.280
now we have the elements sit next to each other.

39
00:02:57.330 --> 00:03:03.200
Now maybe this is a bit too small, so let's increase the width of the sign-up form to 30rem here,

40
00:03:04.100 --> 00:03:05.080
that looks better.

41
00:03:05.360 --> 00:03:07.550
So now we're already taking advantage of the grid

42
00:03:07.610 --> 00:03:12.780
and you can see how super easy and simple this is. Now with the grid added,

43
00:03:12.850 --> 00:03:16.620
we can also change the way we put distance between these elements.

44
00:03:16.690 --> 00:03:18.740
Right now, we do this with margins,

45
00:03:18.790 --> 00:03:24.300
for example on the button, we can get rid of that and we can also get rid of the other margins

46
00:03:24.310 --> 00:03:24.760
we have,

47
00:03:28.750 --> 00:03:35.240
like here on sign-up form labels, inputs and selects. With this if I save this and reload,

48
00:03:35.280 --> 00:03:41.000
there is no distance between the elements but you know how you can put distance between your rows,

49
00:03:41.010 --> 00:03:46.460
you add a grid gap. So we can add a grid row gap

50
00:03:46.470 --> 00:03:51.100
here of let's say 1rem.

51
00:03:51.130 --> 00:03:53.680
If I reload, now there is some distance in-between

52
00:03:53.680 --> 00:04:01.210
again. You could also add one between the columns, so a grid column gap or the shorthand of course, of maybe

53
00:04:01.470 --> 00:04:03.150
.5rem,

54
00:04:03.160 --> 00:04:08.200
now we can also see that there is a little bit of distance between the labels and the inputs.

55
00:04:08.200 --> 00:04:14.110
Now if we want to ensure that the checkbox and its label are still closer next to each other,

56
00:04:14.320 --> 00:04:20.110
one thing we can simply do is go to the index.html file and scroll down to the checkbox

57
00:04:20.320 --> 00:04:28.900
and here where we have the checkbox and our checkbox label, we can wrap this into a div, a div where we

58
00:04:28.900 --> 00:04:36.140
assign a class of maybe sign-up form checkbox

59
00:04:40.020 --> 00:04:43.140
and now we put both elements into there.

60
00:04:46.810 --> 00:04:52.030
Now if we save that, one problem we'll face is that it's squeezed into one cell and the button takes the

61
00:04:52.030 --> 00:04:53.660
cell next to it.

62
00:04:53.680 --> 00:04:57.290
Obviously, this is not the style we want and we can easily change it

63
00:04:58.530 --> 00:05:05.590
by adding a class of sign-up form checkbox, so this is the selector selecting the div we just added

64
00:05:06.130 --> 00:05:15.210
and giving it a grid column of span 2, so that this actually takes two cells.

65
00:05:15.430 --> 00:05:22.040
If we now reload, this is again taking two cells, therefore the button is below it

66
00:05:22.040 --> 00:05:25.760
and now we can see that this looks much nicer again.

67
00:05:26.810 --> 00:05:32.360
Now one other thing I want to do real quick here, just to practice the grid a bit more or maybe something

68
00:05:32.360 --> 00:05:33.690
for you to practice it,

69
00:05:33.800 --> 00:05:39.080
make sure that this dropdown actually goes in the second row, so that in the first row we just have the

70
00:05:39.080 --> 00:05:40.070
title label,

71
00:05:40.070 --> 00:05:45.920
second row should just be the dropdown and thereafter, you have the other form as it looks right now. Here's

72
00:05:45.920 --> 00:05:49.620
your chance to pause the video, thereafter we'll do this together.

73
00:05:51.910 --> 00:05:52.900
Were you successful?

74
00:05:52.900 --> 00:05:53.850
Let's try it out.

75
00:05:54.160 --> 00:06:00.320
So we want to put the label into one line and the dropdown into the line below it.

76
00:06:00.730 --> 00:06:08.950
Well one easy way of doing that of course is that we simply select the dropdown element here and assign

77
00:06:08.950 --> 00:06:14.700
it a row explicitly instead of letting the grid auto populate itself.

78
00:06:14.800 --> 00:06:23.290
We can select that dropdown here, so in this select element in a couple of different ways, for example

79
00:06:23.290 --> 00:06:29.920
by using the select tag collector or by using the ID attribute selector

80
00:06:29.920 --> 00:06:33.890
and I'll use that, just to again practice this.

81
00:06:33.910 --> 00:06:40.600
So let's use our sign-up form and in there, select any element which has the ID attribute which

82
00:06:40.990 --> 00:06:45.700
in this case should be title because it has an ID of title.

83
00:06:45.700 --> 00:06:50.710
So let's select this, this should give us access to the dropdown

84
00:06:50.720 --> 00:06:56.980
and now I want to move that into row number two as I said and now obviously we can do this by saying that

85
00:06:57.010 --> 00:07:04.420
we want to put it into a row which comes after line 2 and then span 1 is the default.

86
00:07:04.420 --> 00:07:08.610
We could also say up to row 3 but we can omit this

87
00:07:08.620 --> 00:07:14.710
and now if we reload, this is there but now the first name jumps into the cell which was previously occupied

88
00:07:14.710 --> 00:07:15.790
by the dropdown

89
00:07:15.830 --> 00:07:21.190
and the reason for this is that we explicitly assigned a new cell to this dropdown

90
00:07:21.190 --> 00:07:26.640
and as I said, this will then not lead to the DOM order being respected,

91
00:07:26.650 --> 00:07:32.350
instead the element after it takes its place because this has kind of taken out of the document flow

92
00:07:32.350 --> 00:07:33.540
you could say.

93
00:07:33.730 --> 00:07:39.880
Now one way around this is that we simply instead of giving it a clearly defined row, we tell it that

94
00:07:39.910 --> 00:07:43.900
it should span two cells on the columns.

95
00:07:44.030 --> 00:07:50.710
This will now ensure that this place it previously had is not taken because this element is now not

96
00:07:50.890 --> 00:07:52.670
taken out of the document flow,

97
00:07:52.720 --> 00:07:54.170
it just is broader

98
00:07:54.280 --> 00:07:55.600
and that's exactly the use case

99
00:07:55.600 --> 00:08:00.220
we practiced a few minutes ago in the theory project.

100
00:08:00.260 --> 00:08:03.620
Now we got this positioned in the way we want it positioned,

101
00:08:03.770 --> 00:08:08.800
let's now check the mobile view. Now on the mobile view, this looks pretty good already

102
00:08:08.810 --> 00:08:14.930
because if we go back to our sign-up form here where we set display grid, this obviously leads to all

103
00:08:14.930 --> 00:08:18.520
the elements being put into some default rows.

104
00:08:18.530 --> 00:08:26.330
The only thing I want to do here is I want to set grid auto rows to maybe 2rem.

105
00:08:26.330 --> 00:08:31.350
Now if we reload, all the rows are equally high which is a bit nicer in my opinion

106
00:08:33.660 --> 00:08:36.080
and maybe we also add a gap here,

107
00:08:36.260 --> 00:08:40.130
a grid row gap of .5rem between the rows,

108
00:08:40.410 --> 00:08:43.410
so there's a little bit more distance between the rows.

109
00:08:43.590 --> 00:08:47.150
With that, we got a nice mobile mode in my opinion,

110
00:08:47.190 --> 00:08:52.330
this looks all right and we got a nice desktop mode.

111
00:08:52.500 --> 00:08:57.750
Now one thing we can notice on very small devices, down there we have a little bit of an issue with the

112
00:08:57.750 --> 00:09:00.430
check box and the sign-up button,

113
00:09:00.530 --> 00:09:05.310
this won't actually be an issue though because I'm just zoomed in, so this would actually be a super

114
00:09:05.310 --> 00:09:08.330
small device and we shouldn't run into issues there.

115
00:09:08.340 --> 00:09:14.520
If you want to get rid of this too, if you want to support calculators, then you can simply decrease the

116
00:09:14.520 --> 00:09:18.020
font size of your labels and you'll be fine again,

117
00:09:18.030 --> 00:09:19.660
you can use a normal media query for that.

118
00:09:19.680 --> 00:09:21.380
So that's not a grid issue

119
00:09:21.540 --> 00:09:24.290
and on any realistic device, this looks good

120
00:09:24.360 --> 00:09:27.100
anyways. So I'm happy with that,

121
00:09:27.120 --> 00:09:34.000
we did add the grid and with that we reformated the form and this shows another use case of the grid

122
00:09:34.170 --> 00:09:38.760
besides generating a general page layout with header, footer and so on,

123
00:09:38.760 --> 00:09:40.670
now we're using it for a form,

124
00:09:40.770 --> 00:09:43.110
also a very nice way of using the grid.
