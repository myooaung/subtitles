WEBVTT
1
00:00:02.410 --> 00:00:08.080
Let's have a look at that strange timing function thing we saw in the last lecture. We can think of the

2
00:00:08.290 --> 00:00:12.610
timing or the duration of the transition as a function. At the beginning,

3
00:00:12.640 --> 00:00:17.110
no time passed and that transition also has a completion state of 0%

4
00:00:17.410 --> 00:00:24.910
but as we play the animation, it transitions from 0% completion to 100% over the given time

5
00:00:25.240 --> 00:00:31.700
and for this specific function here, it temporarily even has a higher completion in the end completion. This

6
00:00:31.750 --> 00:00:37.060
is also possible, you could have functions where you for example one to change the scale of an element

7
00:00:37.260 --> 00:00:43.730
and in-between, you actually have a bigger scale than at the end, to have a bumping effect.

8
00:00:43.900 --> 00:00:49.100
This is something you can easily build with CSS animations, something I'll dive in later.

9
00:00:49.100 --> 00:00:55.210
Now regarding the transition timing functions, if you google for CSS timing functions, you'll find a

10
00:00:55.210 --> 00:00:56.760
really helpful site,

11
00:00:58.380 --> 00:01:00.780
easeing functions cheat sheet, easings.net

12
00:01:00.780 --> 00:01:08.760
and there, you'll find a lot of values or timing functions and if you hover over them, there's also

13
00:01:08.760 --> 00:01:12.840
a demo animation playing showing you how this actually will look like.

14
00:01:13.020 --> 00:01:18.070
So for example, this one, easeInCubic starts really slow and finishes fast.

15
00:01:18.160 --> 00:01:22.270
If you click on one of them, it also shows you a code for this

16
00:01:22.530 --> 00:01:23.910
and that's interesting.

17
00:01:24.030 --> 00:01:33.060
Thus far, we used ease out, ease in, actually there also is linear and this helpful cubic bezier function.

18
00:01:33.140 --> 00:01:39.380
This allows you to enter your own timing function with four parameters defining that function,

19
00:01:39.450 --> 00:01:43.060
this essentially defines a function of time and completion

20
00:01:43.260 --> 00:01:47.750
and sites like this are really great to create such a timing function.

21
00:01:47.880 --> 00:01:55.710
So if we copy that for example and we insert this for our transform transition of the modal, cubic bezier

22
00:01:55.710 --> 00:01:57.190
with these values,

23
00:01:57.240 --> 00:02:01.760
now if we go back to our project and reload the page and I click Choose plan,

24
00:02:01.950 --> 00:02:08.310
now you see it starts very slow and then finishes suddenly. Even better, in the Chrome developer tools,

25
00:02:08.310 --> 00:02:12.990
if you inspect your modal here and you inspect the properties,

26
00:02:12.990 --> 00:02:18.300
you can see that timing function here and there's this button. You can find that strange button next

27
00:02:18.300 --> 00:02:21.110
to each timing function, to any timing function you have.

28
00:02:21.390 --> 00:02:26.880
If you click it, you can actually create your timing function in the Chrome developer tools by playing

29
00:02:26.880 --> 00:02:28.200
with these handles.

30
00:02:28.200 --> 00:02:32.900
Generally, the steeper it's at the beginning, the faster it starts and the slower it

31
00:02:32.910 --> 00:02:33.980
ends so to say.

32
00:02:34.290 --> 00:02:38.590
So you can play around with that and create really powerful timing function,

33
00:02:38.610 --> 00:02:43.470
you always get a preview at the top or by the way and this can be nice to find out how to work with

34
00:02:43.470 --> 00:02:46.940
timing functions to create that visual transition effect

35
00:02:47.010 --> 00:02:47.820
you want to have.
