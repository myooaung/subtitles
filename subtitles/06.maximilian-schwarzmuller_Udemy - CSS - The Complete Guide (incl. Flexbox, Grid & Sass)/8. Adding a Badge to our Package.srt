1
00:00:02,210 --> 00:00:05,760
So how can we now add a badge to our package right here?

2
00:00:05,900 --> 00:00:13,800
Well I think a good starting point would be to go to the HTML file, right here and add such a badge

3
00:00:13,850 --> 00:00:16,960
right there in the HTML code. For that,

4
00:00:16,970 --> 00:00:25,640
we have to go to our packages class right here, this one and we need the plus package because that's the

5
00:00:25,640 --> 00:00:26,980
one we want to recommend.

6
00:00:27,330 --> 00:00:36,020
So let's maybe add the element right here, another h2 element and we could give it a class of course

7
00:00:37,240 --> 00:00:43,860
of package-badge maybe, this makes sense again with our BEM notation right here

8
00:00:44,150 --> 00:00:51,080
and let's maybe write or name it RECOMMENDED, with capital letters like that.

9
00:00:52,090 --> 00:00:53,960
This looks like this now,

10
00:00:54,010 --> 00:00:57,340
well not really beautiful yet but we will see how we can change that

11
00:00:57,430 --> 00:01:00,580
but at least we have our recommended text already here.

12
00:01:01,570 --> 00:01:04,350
The question now is, how can we change the position

13
00:01:04,360 --> 00:01:10,030
because that's what this module is about. Right now, to position this badge right here,

14
00:01:10,110 --> 00:01:16,060
maybe in the right upper part of our package. Of course we could maybe add a left margin or a bottom

15
00:01:16,060 --> 00:01:19,500
margin but I don't think that would work and that would be a good idea

16
00:01:19,510 --> 00:01:26,130
from a code perspective but maybe we can use this position fix declaration to

17
00:01:26,140 --> 00:01:28,010
kind of position it right here

18
00:01:28,060 --> 00:01:29,960
because it worked with the navigation bar,

19
00:01:30,040 --> 00:01:34,600
so why don't we give it a try and see if we can use that knowledge.

20
00:01:34,630 --> 00:01:41,150
So let's go back to our packages.css file and remember package__badge, that's

21
00:01:41,180 --> 00:01:43,370
the class we want to refer to

22
00:01:43,870 --> 00:01:46,830
and why don't we add that new class

23
00:01:46,840 --> 00:01:48,490
maybe right here

24
00:01:49,250 --> 00:01:59,310
before the package subtitle. So it was package__badge and now we learned that we can

25
00:01:59,310 --> 00:02:03,370
use position fixed, like that.

26
00:02:03,380 --> 00:02:11,600
Let's see what happens now, if we go back, yes the recommended badge is taken out of the document flow,

27
00:02:11,670 --> 00:02:14,170
it's positioned in the middle of nowhere though,

28
00:02:14,400 --> 00:02:15,860
so we learned how to change that,

29
00:02:15,870 --> 00:02:23,640
we can simply add top zero and left zero, right like that.

30
00:02:23,810 --> 00:02:25,730
So let's reload it again,

31
00:02:25,730 --> 00:02:28,630
now it's positioned to the left of the viewport

32
00:02:28,670 --> 00:02:33,100
and we also have a distance to the top. Yes, this is the margin,

33
00:02:33,110 --> 00:02:36,010
I think we can keep this margin, this is fine,

34
00:02:36,020 --> 00:02:39,950
we can maybe even add a margin for the entire element,

35
00:02:39,950 --> 00:02:46,540
let's see how big this margin was, right here in the developer tools. We have a default margin of

36
00:02:46,600 --> 00:02:47,940
almost 20 pixels,

37
00:02:47,950 --> 00:02:59,530
so let's maybe add such a margin now, 20 pixels like that and with that, yes we got the badge positioned in the

38
00:02:59,530 --> 00:03:03,700
left upper corner of our viewport.

39
00:03:03,700 --> 00:03:06,100
Well, this is nice

40
00:03:06,100 --> 00:03:08,030
and we could now play around with that

41
00:03:08,050 --> 00:03:16,120
and for example increase left to, I don't know, 400 pixels to have a bigger distance right here, like that.

42
00:03:16,120 --> 00:03:23,580
Yes we're getting closer and then we could add a little bit more for the top distance, maybe 50 pixels,

43
00:03:24,210 --> 00:03:25,990
just guessing, like that,

44
00:03:26,220 --> 00:03:27,410
so it's moving down

45
00:03:27,810 --> 00:03:30,940
but as you can see, this is a lot of trial and error

46
00:03:30,990 --> 00:03:36,450
and in the end, the core problem is that the recommended badge would be related to the viewport

47
00:03:36,480 --> 00:03:40,460
and if we scroll down, well it would behave like that,

48
00:03:40,530 --> 00:03:44,710
definitely not the behavior we want to have for such a badge.

49
00:03:44,760 --> 00:03:53,020
So maybe there is another value for our position property which brings us closer to the behavior we want.

50
00:03:53,020 --> 00:04:00,560
The good news is there is because we can simply change position fixed to position absolute, like that.

51
00:04:01,680 --> 00:04:02,120
Now that

52
00:04:02,140 --> 00:04:03,930
we changed it to absolute,

53
00:04:03,940 --> 00:04:09,190
let's see if that changes our website. Apprently nothing changed

54
00:04:09,190 --> 00:04:11,760
but let's scroll down

55
00:04:12,030 --> 00:04:20,390
and as we can see, if we scroll down now, the element is no longer stuck to the viewport,

56
00:04:20,520 --> 00:04:26,970
it is now stuck to, to what is it stuck actually? Well for absolutely positioned elements, the positioning

57
00:04:26,970 --> 00:04:31,290
context is defined based on two cases.

58
00:04:31,380 --> 00:04:38,570
If none of the ancestors, so of the parent elements, has a position property applied, well then the positioning

59
00:04:38,610 --> 00:04:43,120
context of the element is simply the HTML element.

60
00:04:43,710 --> 00:04:50,310
If we have the second case that we have any position ancestors, then the closest ancestor which has the

61
00:04:50,310 --> 00:04:56,060
position property applied is the positioning context for this element.

62
00:04:56,070 --> 00:05:03,660
Now let's see what is the case in our situation. If we simply change top 50 pixels to top zero once again,

63
00:05:04,080 --> 00:05:06,380
like that and reload the page,

64
00:05:06,900 --> 00:05:13,890
well we can see that our element apparently is stuck to the HTML element because that's actually the

65
00:05:13,890 --> 00:05:16,920
element that wraps the entire website.

66
00:05:16,950 --> 00:05:25,180
If we would change that and now add a position property to our package class though

67
00:05:25,260 --> 00:05:25,920
right here,

68
00:05:26,040 --> 00:05:29,250
so let's add position absolute right there,

69
00:05:30,980 --> 00:05:35,600
as you can see in the index.html file, we are in this class right here

70
00:05:35,780 --> 00:05:39,250
and the package class is an ancestor.

71
00:05:39,440 --> 00:05:47,210
If we reload the page right now, well this kind of crashes our entire website because now all the packages

72
00:05:47,300 --> 00:05:49,920
are displayed with an absolute value

73
00:05:50,060 --> 00:05:56,490
and as we know, this takes all the elements out of the document flow and therefore, we have this mess.

74
00:05:56,550 --> 00:06:02,630
But isn't there another position value that we could apply that doesn't crash our entire website?

75
00:06:02,940 --> 00:06:03,950
Well yes it is

76
00:06:04,020 --> 00:06:10,080
and we'll have a look at this value later but for the moment, we will simply apply it to our package

77
00:06:10,080 --> 00:06:16,070
class right here and this value is relative, like that.

78
00:06:16,180 --> 00:06:21,220
With that if we reload the page, we can see two interesting things already.

79
00:06:21,220 --> 00:06:26,950
Apparently the relative value doesn't take our elements out of the document flow

80
00:06:26,980 --> 00:06:30,140
but as I said, we'll dive deeper into that later

81
00:06:30,370 --> 00:06:35,860
and the second interesting thing is that the positioning context of our recommended element right here

82
00:06:36,130 --> 00:06:41,490
now changed to the closest ancestor which has a position property applied

83
00:06:41,860 --> 00:06:48,550
and this is the anchor but if we unselect the inspect tool, we can see that the package class

84
00:06:48,820 --> 00:06:53,890
basically is this ancestor as we also saw it right here in the HTML code,

85
00:06:53,920 --> 00:06:57,220
so the badge and then we have the package class right there.

86
00:06:57,460 --> 00:07:03,670
So what have we seen so far? The fixed and the absolute value are quite comparable

87
00:07:03,700 --> 00:07:10,250
in general, both take the elements out of the document flow if you apply these values to these elements

88
00:07:10,960 --> 00:07:18,090
but for the fixed value, the positioning context always is the viewport, for the absolute value, the positioning

89
00:07:18,100 --> 00:07:20,040
context depends.

90
00:07:20,320 --> 00:07:25,810
If you don't have any ancestors with a positioning property applied, then the positioning context

91
00:07:25,900 --> 00:07:27,140
is the HTML element,

92
00:07:27,190 --> 00:07:28,430
we saw that right here.

93
00:07:28,720 --> 00:07:36,490
If you have ancestors with the position property applied, then the element, the absolutely positioned

94
00:07:36,490 --> 00:07:45,420
element, will be positioned in relation to the closest ancestor which has such a position property applied.

95
00:07:45,610 --> 00:07:53,230
With that, we basically made sure that our badge is at least positioned inside the right package but

96
00:07:53,260 --> 00:07:55,700
we didn't position the badge itself.

97
00:07:55,990 --> 00:07:58,330
Let's see how this works in the next video.
