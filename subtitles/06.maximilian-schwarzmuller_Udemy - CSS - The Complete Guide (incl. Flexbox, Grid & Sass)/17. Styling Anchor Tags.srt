1
00:00:02,060 --> 00:00:03,610
So here is your challenge,

2
00:00:03,710 --> 00:00:09,340
I want you to style these links on the right here to have a little bit more distance from each other.

3
00:00:09,350 --> 00:00:15,830
Keep in mind, you are limited regarding margin top and bottom when it comes to inline block elements

4
00:00:15,860 --> 00:00:17,620
but left and right should work

5
00:00:17,810 --> 00:00:25,760
and I also want you to make sure that the anchor tags in these list items do actually have a green text,

6
00:00:25,880 --> 00:00:31,040
the same green text we have for the brand by default and that they're not underlined.

7
00:00:31,160 --> 00:00:36,560
This is using a couple of concepts taught in the previous lectures and even the last module,

8
00:00:36,560 --> 00:00:37,310
good luck with that,

9
00:00:37,310 --> 00:00:40,000
here's your chance to pause the video, thereafter

10
00:00:40,040 --> 00:00:42,400
we'll as always do it together.

11
00:00:46,420 --> 00:00:47,900
So were you successful?

12
00:00:47,950 --> 00:00:49,570
Let's do it together.

13
00:00:49,630 --> 00:00:57,650
So to change the styling as we want it, I'll first of all add a little bit of margin between the items here.

14
00:00:57,700 --> 00:01:05,710
So on main-nav__item, I'll now add a margin and I only want margin on left and right because top and bottom

15
00:01:05,710 --> 00:01:08,020
won't work anyways and I don't want it,

16
00:01:08,380 --> 00:01:15,640
so I'll use that to value shorthand. The first value refers to a top and bottom, I'll set that to zero,

17
00:01:15,640 --> 00:01:20,780
the second value is left and right and there I'll use 16 pixels, like that.

18
00:01:21,280 --> 00:01:23,350
If we do that and we reload,

19
00:01:23,350 --> 00:01:29,380
now we got more spacing and also notice that this doesn't lead that to jump into a new line again because

20
00:01:29,390 --> 00:01:33,160
margin is not included in the width calculation.

21
00:01:33,160 --> 00:01:37,000
So this now positions them nicely, 

22
00:01:37,300 --> 00:01:40,590
let's now take care about the underlining and color.

23
00:01:40,680 --> 00:01:51,570
Now we can add text decoration none to our main-nav__item. If we save that and reload, the text decoration

24
00:01:51,570 --> 00:01:52,830
is still there,

25
00:01:52,920 --> 00:01:54,620
let's inspect that item.

26
00:01:54,630 --> 00:01:57,300
The problem is it's our anchor tag

27
00:01:57,300 --> 00:02:02,610
where this text decoration underline is set by default by the browser, so changing it on the list item

28
00:02:02,790 --> 00:02:04,570
doesn't do anything.

29
00:02:04,590 --> 00:02:08,670
It could be inherited in theory, though not even that is happening

30
00:02:08,760 --> 00:02:14,580
but even then, it would be overwritten because even browser defaults do have the lowest priority

31
00:02:14,610 --> 00:02:17,110
but even they directly target the element

32
00:02:17,190 --> 00:02:19,430
so they would overwrite inheritance.

33
00:02:19,890 --> 00:02:22,770
So setting text decoration here doesn't work.

34
00:02:22,770 --> 00:02:26,170
Now we got at least two alternatives to solve this,

35
00:02:26,250 --> 00:02:33,000
the first alternative is to assign a CSS class to all the anchor tags in our list items,

36
00:02:33,000 --> 00:02:36,250
so we could give each anchor tag a class.

37
00:02:36,480 --> 00:02:38,750
We can also use a combinator.

38
00:02:38,790 --> 00:02:44,320
So here I'll use main-nav__item a to select the anchor tag.

39
00:02:44,540 --> 00:02:50,150
Now what is better, using a class or using that combinator? From a performance perspective,

40
00:02:50,580 --> 00:02:57,630
assigning a class should be a little bit faster, though I will say unless you're building the next Facebook

41
00:02:57,810 --> 00:03:01,300
at least, you will probably not notice this

42
00:03:01,460 --> 00:03:08,820
and especially for cases like this where you have one anchor tag directly, so as a direct child, nested

43
00:03:08,880 --> 00:03:14,670
in an item with a class, this is a high performance selector too,

44
00:03:14,670 --> 00:03:17,880
so performance isn't even that much worse here.

45
00:03:18,000 --> 00:03:24,060
So that is perfectly fine to use and often it's just unnecessary to create an extra class, though you

46
00:03:24,060 --> 00:03:25,030
could do that,

47
00:03:25,050 --> 00:03:29,220
this is a perfectly fine way of selecting that nested element.

48
00:03:29,220 --> 00:03:32,980
So with it selected, we can of course style it now.

49
00:03:33,010 --> 00:03:40,260
So let's style it by removing the text decoration, setting this to none, giving it this darker green color with

50
00:03:40,260 --> 00:03:41,910
that hex code we used before

51
00:03:42,870 --> 00:03:44,070
and saving this.

52
00:03:44,370 --> 00:03:49,200
Now if we reload, these are our links, they look better.

53
00:03:49,200 --> 00:03:56,850
Now as a next step, I want to change the appearance when we hover over them. So that's something we'll cover

54
00:03:56,850 --> 00:03:57,800
in the next video.
