1
00:00:02,570 --> 00:00:04,710
We get our basic transformations set up,

2
00:00:04,760 --> 00:00:11,320
let's now change the perspective from which we're looking at this. To change the perspective,

3
00:00:11,390 --> 00:00:16,170
we've got a special function we can use on transform, perspective.

4
00:00:16,190 --> 00:00:22,430
There you enter a value in pixels or rem, like for example 100 pixels.

5
00:00:22,430 --> 00:00:29,510
If I enter 100 pixels and reload, now you see this looks as if we're sitting next to the element

6
00:00:29,700 --> 00:00:33,520
and the reason for this is, the smaller perspective is,

7
00:00:33,750 --> 00:00:38,030
so for example one pixel, the closer you are to the element.

8
00:00:38,040 --> 00:00:46,740
So for one pixel, we're right inside of the elements so to say. If we increase this to 1000 pixels, then we're

9
00:00:46,740 --> 00:00:51,090
really far away but still closer too than we were before.

10
00:00:51,330 --> 00:00:56,840
So now we can actually see this effect a bit better because it now goes outside of its surrounding

11
00:00:56,850 --> 00:01:00,260
box and therefore it creates a 3D look.

12
00:01:00,300 --> 00:01:05,910
Instead of using the perspective function, you can also use the perspective property by the way. You can

13
00:01:05,910 --> 00:01:09,210
set perspective here, with the perspective property

14
00:01:09,520 --> 00:01:13,590
and if you now reload, you don't see an effect, do you?

15
00:01:13,590 --> 00:01:18,840
The reason for this is that the perspective property actually has to be applied to the parent element,

16
00:01:18,840 --> 00:01:25,170
the advantage then is that you get the same perspective on all child elements. If you use perspective function,

17
00:01:25,440 --> 00:01:28,420
then each element where you apply it has its own perspective,

18
00:01:28,500 --> 00:01:32,420
even if they sit next to each other, this can leads to strange effects.

19
00:01:32,520 --> 00:01:35,940
So on the container if we now reload, we're back to where we were.

20
00:01:36,090 --> 00:01:40,040
Now we're looking at all child elements of the container, of which we only have one

21
00:01:40,050 --> 00:01:45,470
but if it were more, it would affect all, we're looking at all elements from the same perspective.

22
00:01:45,480 --> 00:01:49,820
Now you can also change the angle with perspective origin.

23
00:01:50,220 --> 00:01:53,770
Here you by default have center but you can also enter

24
00:01:53,790 --> 00:01:54,210
right

25
00:01:54,210 --> 00:01:58,590
for example, if you enter right here and you reload,

26
00:01:58,740 --> 00:02:01,590
now it looks as if it rotated a bit more

27
00:02:01,680 --> 00:02:04,470
but actually our perspective just moved to the right,

28
00:02:04,470 --> 00:02:12,990
so we're looking at this from a right angle now and on the other hand if we enter left here and we reload,

29
00:02:13,410 --> 00:02:15,990
now we're further on the left.

30
00:02:15,990 --> 00:02:20,060
You can also enter other values, like 100 pixels here,

31
00:02:20,190 --> 00:02:23,940
this moves the perspective center to the right by 100 pixels.

32
00:02:23,940 --> 00:02:29,040
So if you now reload, you're further to the right and if you enter an even bigger value, like 500 pixels

33
00:02:29,040 --> 00:02:30,970
here and you then reload,

34
00:02:31,050 --> 00:02:33,280
now you're even more on the right.

35
00:02:33,300 --> 00:02:39,830
So this can be really useful to make sure that you look at the rotated element from the right perspective.

36
00:02:40,050 --> 00:02:47,640
And with that said, it now also becomes easier to see both rotateX and y in action at the same time.

37
00:02:47,700 --> 00:02:54,600
If we now rotate x by 30 degrees for example and we keep our perspective on the container element, now

38
00:02:54,600 --> 00:02:56,010
we can reload

39
00:02:56,100 --> 00:02:59,540
and now we actually see both transformations in effect

40
00:02:59,540 --> 00:03:05,340
again, it's rotating around the y-axis and around the x-axis at the same time.

41
00:03:06,570 --> 00:03:11,760
We can now also introduce rotateZ to complete it and enter 30 degrees here

42
00:03:13,760 --> 00:03:15,670
and now it's also rotating around that.

43
00:03:15,680 --> 00:03:20,450
Now it can be hard to see which rotation has which effect but in the end, you can always tweak and play

44
00:03:20,450 --> 00:03:23,680
around with the settings until you got your desired effect.

45
00:03:23,690 --> 00:03:29,630
Important to understand is simply that you can control both the rotation of the element on three axis,

46
00:03:29,930 --> 00:03:34,610
as well as the perspective from which you're looking at this, both regarding the distance as well

47
00:03:34,610 --> 00:03:35,540
as the angle.
