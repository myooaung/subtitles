1
00:00:02,140 --> 00:00:05,160
So what have we learned throughout this module?

2
00:00:05,470 --> 00:00:13,300
Well, we basically learn that we have different units available in CSS, we have pixels and percentages,

3
00:00:13,330 --> 00:00:19,840
these are the ones we already used throughout this course so far but then we also saw that we have rem

4
00:00:19,910 --> 00:00:29,210
and em, so these units that refer to the font size and we have viewport units, vh and vw, vmin, vmax.

5
00:00:29,860 --> 00:00:36,250
In addition to that, I also showed you that using auto especially for margins can also be a really nice

6
00:00:36,260 --> 00:00:41,770
helper, in case you want to align your objects to the center of your website.

7
00:00:41,770 --> 00:00:48,220
We also had a look at the containing block which is basically the reference point whenever we apply

8
00:00:48,220 --> 00:00:50,950
percentage units to our element.

9
00:00:50,950 --> 00:00:58,680
The containing block basically depends on the position property that is applied to our element. Generally,

10
00:00:58,730 --> 00:01:03,920
the containing block is either the closest ancestor or the viewport.

11
00:01:04,060 --> 00:01:06,030
We had a detailed look at that,

12
00:01:06,130 --> 00:01:08,920
so we also saw the different combinations we have,

13
00:01:08,920 --> 00:01:15,370
for example we also saw that if we have the position fixed declaration applied to our element, then the

14
00:01:15,370 --> 00:01:19,500
containing block is not the closest ancestor but the viewport.

15
00:01:19,660 --> 00:01:28,360
If we have the position absolute declaration applied, then the closest ancestor which also has a position

16
00:01:28,360 --> 00:01:35,260
property applied is our containing block and we saw that if we have position static or relative applied,

17
00:01:35,530 --> 00:01:40,890
that the closest ancestor which is a block level element is our containing block.

18
00:01:41,260 --> 00:01:47,860
In addition to that, we also had a look at the 100% height issue because we saw that if our element

19
00:01:47,860 --> 00:01:57,180
itself and the ancestors both use the position static or relative value, then applying 100%

20
00:01:57,190 --> 00:02:00,160
height to our element is not working.

21
00:02:00,220 --> 00:02:05,200
We saw that if we add a height of 100% to the ancestors,

22
00:02:05,290 --> 00:02:06,860
this issue is fixed.

23
00:02:06,910 --> 00:02:13,750
Another fix for the issue that we saw was that we could simply use position fixed or absolute or simply

24
00:02:13,750 --> 00:02:16,930
use viewport units, vw or vh.

25
00:02:16,930 --> 00:02:20,370
Regarding this, we also had a look at browser compatibility,

26
00:02:20,380 --> 00:02:25,210
we saw the small limitations the Internet Explorer had for example.

27
00:02:25,330 --> 00:02:33,220
We also had a look at the min, max width property and we saw that if we combine a normal width property with one

28
00:02:33,220 --> 00:02:34,250
of these properties,

29
00:02:34,390 --> 00:02:37,840
by the way both are also available for the height of course,

30
00:02:37,840 --> 00:02:44,230
well if we combine these, we saw that we can easily restrict the size of an element, for example setting

31
00:02:44,230 --> 00:02:51,270
the max width to make sure that our image is not displayed too big on larger screens.

32
00:02:51,280 --> 00:02:53,360
Same thing was true for the min width

33
00:02:53,440 --> 00:02:58,160
when we said that we wanted to make sure that our image doesn't get too small.

34
00:02:58,210 --> 00:03:04,930
This was our first step towards a more responsive design but we will dive into the details about that

35
00:03:05,050 --> 00:03:06,730
in a separate module.

36
00:03:06,730 --> 00:03:14,830
We also had a look at em and rem, these are the units which depend on the font size.

37
00:03:14,950 --> 00:03:19,050
We saw that rem always depends on the font size of that root element,

38
00:03:19,060 --> 00:03:24,620
so the HTML element and em depended on the size of the element itself.

39
00:03:24,700 --> 00:03:32,020
This means our element used inheritance to get the font size of the ancestor and then multiplied this

40
00:03:32,020 --> 00:03:35,190
value with the em value applied.

41
00:03:35,230 --> 00:03:41,820
We also saw that em and rem, although these depend on the font size, are not restricted to the font size property,

42
00:03:41,950 --> 00:03:45,820
we also used rem for example for our margins

43
00:03:45,970 --> 00:03:52,650
and this is it actually. These are the core concepts you should understand now to make sure that you

44
00:03:52,650 --> 00:03:57,350
are really familiar with the units in CSS.

45
00:03:57,430 --> 00:04:04,660
Now with that, I will hand over back to Max who will now give you a short Javascript introduction because

46
00:04:04,660 --> 00:04:10,900
we created our nice backdrop in this module but the backdrop at the moment is not really working because

47
00:04:10,900 --> 00:04:15,420
we only have the option to comment in or comment out display none.

48
00:04:15,670 --> 00:04:17,620
Not the best solution as I would say,

49
00:04:17,680 --> 00:04:21,330
so let's see how we can make this a bit more dynamic.
