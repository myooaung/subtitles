1
00:00:02,200 --> 00:00:04,890
So what is the font display property

2
00:00:04,990 --> 00:00:09,700
and how does it impact the loading performance of our fonts?

3
00:00:09,700 --> 00:00:12,770
And that's important, by our fonts,

4
00:00:12,850 --> 00:00:18,710
I'm referring to our custom fonts that we imported by using @font-face.

5
00:00:18,730 --> 00:00:23,490
Keep that in mind, font display only works in connection with that.

6
00:00:23,650 --> 00:00:27,520
However, font display is a property as you can imagine

7
00:00:27,670 --> 00:00:34,410
and for this property, we can apply different values which impact the loading behavior of our custom

8
00:00:34,410 --> 00:00:46,180
fonts. The values we can have are swap, block, fallback, optional or if we don't set anything, then it will

9
00:00:46,180 --> 00:00:54,520
be set to a value of auto by default. Auto simply means that the browser our visitor is using will automatically

10
00:00:54,520 --> 00:00:58,060
choose a value of his choice.

11
00:00:58,060 --> 00:01:01,000
So what do these values mean now?

12
00:01:01,150 --> 00:01:02,580
Well, let's have a look.

13
00:01:02,620 --> 00:01:05,760
We basically have two different situations

14
00:01:05,850 --> 00:01:12,580
while the loading process of the font takes place. This is the so-called block period,

15
00:01:12,580 --> 00:01:16,510
this one right here and the swap period, that one.

16
00:01:16,510 --> 00:01:22,890
Now what do these mean and how are they different for the different values that we can apply? For the

17
00:01:22,900 --> 00:01:23,720
swap value,

18
00:01:23,770 --> 00:01:26,850
we don't have any kind of block period.

19
00:01:27,220 --> 00:01:29,410
Now what does this mean, block period

20
00:01:29,410 --> 00:01:33,310
and why don't we have a block period right here for this swap value?

21
00:01:33,520 --> 00:01:39,480
Well to understand the block period, imagine the following situation: our user is visiting our website

22
00:01:39,640 --> 00:01:41,620
so the content has to load,

23
00:01:41,890 --> 00:01:49,330
now as the fonts are not displayed immediately, we could have such a block period. In this block period,

24
00:01:49,510 --> 00:01:57,360
the space where our text would be displayed would be reserved with an invisible fallback font face

25
00:01:57,430 --> 00:01:58,650
and that's important.

26
00:01:58,810 --> 00:02:03,900
The font face will not be visible at the moment but the space for it would be reserved,

27
00:02:04,060 --> 00:02:05,530
this would be a block period,

28
00:02:05,590 --> 00:02:10,170
so we basically would have the styling or the general structure of all our websites visible,

29
00:02:10,300 --> 00:02:17,740
so a box which would contain text already has almost the correct height and is visible but no text would

30
00:02:17,740 --> 00:02:24,330
be displayed because the font is an invisible fallback, that will be a block period.

31
00:02:24,340 --> 00:02:30,460
Now if we don't have such a block period which is the case for the swap, the fallback right here would

32
00:02:30,460 --> 00:02:32,380
be immediately visible,

33
00:02:32,380 --> 00:02:38,200
this means once our users browses our website, boom, the fallback will be there.

34
00:02:38,200 --> 00:02:46,450
After that, we have a swap period and the swap period as the name already indicates, simply is the period where

35
00:02:46,540 --> 00:02:53,740
the browser has the ability to change or to swap the fallback font style that was loaded with the actual

36
00:02:53,740 --> 00:02:57,040
fonts style that we have, for the swap value,

37
00:02:57,040 --> 00:02:59,530
this period is infinite.

38
00:02:59,590 --> 00:03:07,060
This simply means no matter how long it takes, if our browser manages to load our custom font that we

39
00:03:07,060 --> 00:03:08,060
want to display,

40
00:03:08,110 --> 00:03:12,130
it will swap it with the fallback, if it cannot change it,

41
00:03:12,160 --> 00:03:14,470
the fallback will just stay there.

42
00:03:14,500 --> 00:03:17,260
So that's the first value, that's swap,

43
00:03:17,260 --> 00:03:18,670
now what about block now?

44
00:03:18,940 --> 00:03:21,820
Well for block, we have a short block period,

45
00:03:21,820 --> 00:03:27,310
this means this invisible font is loaded, so there is no text displayed but we have a placeholder that is

46
00:03:27,370 --> 00:03:28,710
reserving the space

47
00:03:28,750 --> 00:03:34,430
and after that, the behavior actually follows the swap value. We load the fallback

48
00:03:34,450 --> 00:03:41,500
and once we can load it, the browser will change the fallback with the custom font that we created. The

49
00:03:41,500 --> 00:03:47,350
third value is the fallback, the fallback case a very short block period,

50
00:03:47,380 --> 00:03:53,510
so we have this invisible font family displayed but only for a really minimum amount of time,

51
00:03:53,740 --> 00:03:57,020
then we have the fallback and then now it gets interesting,

52
00:03:57,160 --> 00:04:03,700
we only have a short swap period. So there is only a short window of time where the browser has the chance

53
00:04:03,910 --> 00:04:10,990
to load our custom font right here and to change it with our fallback. If the browser is able to do

54
00:04:10,990 --> 00:04:17,260
that within this swap period, this short swap period, he can change it with the custom font otherwise, the fallback

55
00:04:17,260 --> 00:04:21,410
will be displayed as long as our site is displayed for the visitor.

56
00:04:21,520 --> 00:04:22,630
So that's the difference.

57
00:04:22,800 --> 00:04:29,320
For the fallback, there was only a short opportunity to change the fallback with the custom font, for swap and block,

58
00:04:29,590 --> 00:04:35,170
the loading of the custom font or attempt to load the custom font lasts forever basically, as long as

59
00:04:35,170 --> 00:04:41,480
the user is on our website. Now optional is the last value that we have, for optional,

60
00:04:41,500 --> 00:04:49,990
we also have a very short block period and then this thing right here, then we don't have a swap period because

61
00:04:50,050 --> 00:04:54,950
the optional value simply allows the browser to choose

62
00:04:54,970 --> 00:05:01,480
what you should do and this basically depends on the internet connection speed. If the browser decides

63
00:05:01,480 --> 00:05:02,940
that our connection is good,

64
00:05:03,010 --> 00:05:06,190
he might decide to immediately load the custom font.

65
00:05:06,400 --> 00:05:11,490
If we have a worse connection which is not fast enough, the browser might decide to use the fallback

66
00:05:11,680 --> 00:05:14,260
and therefore, not load our custom font.

67
00:05:14,260 --> 00:05:19,900
This decision cannot be reversed, of course if we reload the page, it can but as soon we stay on the

68
00:05:19,900 --> 00:05:26,920
website as a user, we will only see the fallback for example if the internet connection is not good enough.

69
00:05:26,920 --> 00:05:32,560
Now the last value, auto, lets the browser make the entire decision. At the moment,

70
00:05:32,710 --> 00:05:35,120
most browsers choose block then,

71
00:05:35,140 --> 00:05:40,980
so if you don't set a font display, auto be applied and then it will use block, the one we saw right here

72
00:05:41,250 --> 00:05:48,910
as a second option. Now the problem with this font display and this performance topic is that the fonts

73
00:05:48,910 --> 00:05:51,940
we are using right here load really fast,

74
00:05:51,940 --> 00:05:57,050
so to be honest, I cannot show you this in a real life example now.

75
00:05:57,310 --> 00:06:04,450
What I can show you though if we go back to our code right here is how you could add or implement the font

76
00:06:04,450 --> 00:06:05,450
display property.

77
00:06:05,620 --> 00:06:11,980
Well important, not right here in our actual selector, so in the actual element but we have to add it

78
00:06:12,130 --> 00:06:14,860
up here in our font face import,

79
00:06:14,860 --> 00:06:22,430
for example if we use our first import here, we would simply add font display like that.

80
00:06:22,480 --> 00:06:28,000
As I said, I cannot show you how it works because the loading time is simply too fast but basically, you

81
00:06:28,000 --> 00:06:38,510
would simply add the property up here and then simply apply the values like swap or block or fallback

82
00:06:39,390 --> 00:06:46,550
or the last one, we also saw this, optional, like that.

83
00:06:46,550 --> 00:06:47,860
That's how you could do it.

84
00:06:47,870 --> 00:06:54,040
However as I said, I cannot show it to you, so we can delete that actually once again. What we should

85
00:06:54,050 --> 00:07:00,800
have a look at now though is the browser compatibility because as you might imagine, it's not the best

86
00:07:00,820 --> 00:07:01,600
unfortunately.

87
00:07:01,940 --> 00:07:08,450
If we go to caniuse.com once again and enter font-display right here,

88
00:07:08,450 --> 00:07:09,980
you can see what I mean.

89
00:07:09,980 --> 00:07:16,940
We have support for the latest versions of Safari, Chrome and Firefox but for example, the IE or Edge

90
00:07:17,240 --> 00:07:20,580
don't support the font display property at all

91
00:07:20,930 --> 00:07:28,160
and that also kind of summarizes the difficulties you could have when you use your own created fonts

92
00:07:28,160 --> 00:07:29,990
with @font-face, with the font

93
00:07:29,990 --> 00:07:37,330
import. The import itself can mean a lot of work as we have to import all the different font faces

94
00:07:37,520 --> 00:07:44,930
and then if we want to optimize our loading behavior, we also have to ensure that browser compatibility

95
00:07:44,990 --> 00:07:48,080
is OK for the users we want to address

96
00:07:48,230 --> 00:07:53,610
and as you normally also want to address IE or Edge users, well this can become a problem.

97
00:07:53,630 --> 00:07:57,670
However of course, you're totally free to do this as you prefer.

98
00:07:58,070 --> 00:08:01,150
Now with that, we are almost done with this module,

99
00:08:01,340 --> 00:08:06,480
there is actually only one thing that I would like to change right here

100
00:08:06,710 --> 00:08:14,570
snd this is our font shorthand because we actually don't need the AnonymousPro font family here

101
00:08:14,600 --> 00:08:20,090
because I would like to stick to Monserrat as we had it in the beginning and I also don't want to have

102
00:08:20,090 --> 00:08:21,320
this bold style.

103
00:08:21,560 --> 00:08:27,050
And additionally, now very important, as we only have one value left right here,

104
00:08:27,080 --> 00:08:31,090
the font size, we cannot use the font shorthand.

105
00:08:31,130 --> 00:08:32,130
We talked about that,

106
00:08:32,180 --> 00:08:36,980
we at least need the font size and the font family,

107
00:08:36,980 --> 00:08:39,390
otherwise this shorthand won't work.

108
00:08:39,590 --> 00:08:40,870
I can also prove this to you

109
00:08:40,880 --> 00:08:49,070
if I now go back to our page here, to the packages page and then inspect for example the class right here,

110
00:08:50,060 --> 00:08:55,700
you can see that the font was not applied because we use the shorthand incorrectly.

111
00:08:55,700 --> 00:09:04,010
Now if I add font size right here like that and reload the page, you can see that the font size was overtaken

112
00:09:04,010 --> 00:09:07,270
correctly based on the definition that we made.

113
00:09:07,700 --> 00:09:12,920
And with that, I think our code is cleaned up and looks fine, so we learned a lot I

114
00:09:12,920 --> 00:09:18,430
think about fonts and text now and before I wrap up this module,

115
00:09:18,500 --> 00:09:24,310
let's quickly have a look if all pages still look fine, as we can see right here,

116
00:09:24,320 --> 00:09:27,650
this looks pretty decent, so the font style

117
00:09:27,650 --> 00:09:29,620
is correct and the font families.

118
00:09:29,630 --> 00:09:32,480
The packages page also looks nice,

119
00:09:32,480 --> 00:09:34,680
same thing hopefully for the customers page,

120
00:09:34,730 --> 00:09:40,180
yes I think also still good and start hosting also works perfectly.

121
00:09:40,310 --> 00:09:47,470
Now with that, we finish this text and fonts module, now let me wrap up what we learned in the next lecture.
