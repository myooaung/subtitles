1
00:00:02,340 --> 00:00:03,540
So what's the difference,

2
00:00:03,600 --> 00:00:05,980
what are these different pixel types?

3
00:00:06,210 --> 00:00:12,600
Well so far, we played around right here in the dev tools and decreased our width right here and we saw that

4
00:00:12,600 --> 00:00:17,960
the page partially reacts, not perfect yet but we have kind of a reaction,

5
00:00:17,970 --> 00:00:22,980
so basically our browser understands that we have less width available.

6
00:00:23,010 --> 00:00:29,820
The problem at the moment though is that our browser does not really understand the difference between

7
00:00:29,850 --> 00:00:33,160
a desktop device and a mobile device.

8
00:00:33,210 --> 00:00:34,690
How can I prove this to you?

9
00:00:34,890 --> 00:00:42,150
Well, if we go to our dev tools and now click onto this symbol right here, like that, then we can see that

10
00:00:42,150 --> 00:00:46,960
we have a mobile device right here, I'll dive into that in a few seconds,

11
00:00:47,040 --> 00:00:53,160
just some information about this menu right here before, here we can choose different simulated devices.

12
00:00:53,160 --> 00:00:55,530
So we have the iPhone 8 selected right here,

13
00:00:55,530 --> 00:01:02,460
you can use an iPhone 7 or a Nexus or a Galaxy S5 just as you prefer, I'll

14
00:01:02,610 --> 00:01:05,570
stick to the iPhone 8.

15
00:01:05,590 --> 00:01:07,720
You can also change the zoom level,

16
00:01:07,720 --> 00:01:10,960
I will use 150 maybe so that you can see everything

17
00:01:11,140 --> 00:01:19,940
and if you increase the width a bit more maybe, you can find options to define if your device is online, offline

18
00:01:19,970 --> 00:01:21,560
or with a lost connection,

19
00:01:21,560 --> 00:01:23,560
not something we'll dive into now.

20
00:01:23,630 --> 00:01:29,060
You can change the mode between landscape and portrait, like that, we'll stick to portrait though for the

21
00:01:29,060 --> 00:01:34,820
moment and you have these three dots right here which allow you for example to hide the device frame or

22
00:01:34,820 --> 00:01:39,810
to show the device frame. I'll show it to you because I think it looks a little bit better.

23
00:01:40,070 --> 00:01:46,100
However, the important thing that you might have noticed is that although we had this partially responsive

24
00:01:46,100 --> 00:01:49,130
design on a smaller screen in the desktop version,

25
00:01:49,130 --> 00:01:54,040
so if I click right here and decrease the screen width, this reaction right here,

26
00:01:54,290 --> 00:02:00,380
well this is not happening in our mobile design because although we only have a mobile device which

27
00:02:00,380 --> 00:02:08,680
should actually be smaller than our desktop device if we decrease the width, the browser basically squeezes

28
00:02:08,690 --> 00:02:11,750
the entire website onto our mobile phone

29
00:02:12,110 --> 00:02:16,370
and with that, there is no responsive design at all available at the moment.

30
00:02:16,790 --> 00:02:18,180
Now what's the reason for that?

31
00:02:18,440 --> 00:02:23,290
Well first, have a look at this thing right here, at these pixels.

32
00:02:23,510 --> 00:02:28,600
We can see that in this simulator, in this mobile phone simulator in the dev tools,

33
00:02:29,180 --> 00:02:37,360
a width of 375 pixels right here is assumed and the height of 667 pixels.

34
00:02:37,640 --> 00:02:42,950
Let's focus onto these 375 pixels right here because if we inspect our background

35
00:02:42,980 --> 00:02:50,420
image which basically occupies the entire width right here and if we now increase that a bit here and

36
00:02:50,420 --> 00:02:54,790
scroll down, this is our menu we had before right here,

37
00:02:54,810 --> 00:03:01,080
so our computed menu, this one right here, as we have more space for the dev tools now, this is now

38
00:03:01,320 --> 00:03:02,700
directly available right here.

39
00:03:02,940 --> 00:03:11,310
And if we scroll down, we can see that we have a width of 980 pixels, which is quite big actually

40
00:03:11,580 --> 00:03:17,910
especially if we take into account that the Chrome developer tools actually assume a width of

41
00:03:17,910 --> 00:03:22,380
375 pixels for this iPhone 8.

42
00:03:22,380 --> 00:03:25,870
Now as you can see, there is something not working correctly at the moment

43
00:03:25,920 --> 00:03:29,560
and to understand this, we can go to this page right here.

44
00:03:29,670 --> 00:03:33,060
This is w3.org, a link to this website

45
00:03:33,150 --> 00:03:36,010
can of course be found attached to this video

46
00:03:36,420 --> 00:03:43,890
and on this page, you can see how absolute lengths are translated into pixels or vice versa

47
00:03:43,930 --> 00:03:53,490
in CSS and right here, you can see that 1 inch right here is equal to 69 pixels.

48
00:03:53,490 --> 00:04:01,440
Now in case you're not familiar with inch, one inch are 2.54 centimeters, so 1 inch is 69

49
00:04:01,650 --> 00:04:03,150
pixels

50
00:04:03,150 --> 00:04:08,930
and we had 980 pixels for the width of our background image right here,

51
00:04:08,970 --> 00:04:11,930
this one, this is 980 pixels.

52
00:04:12,060 --> 00:04:18,750
So if we translate that into inches, we have more than 10 inches right here for our device width

53
00:04:19,200 --> 00:04:26,610
and although an iPhone 8 is a big smartphone, I don't think it's more than 10 inches and this shows you

54
00:04:26,610 --> 00:04:33,270
exactly where the problem is coming from we have at the moment. The browser is of course able to identify

55
00:04:33,270 --> 00:04:39,930
the height of our pixels, so the pixel this iPhone has by default but it will just translate these pixels

56
00:04:40,080 --> 00:04:42,890
based on this logic right here.

57
00:04:42,900 --> 00:04:49,920
So here we'll say OK, I have a specific amount of pixels, so I assume that with each 96 pixels I have, the

58
00:04:49,920 --> 00:04:52,530
device has a width of 1 inch

59
00:04:52,710 --> 00:04:57,920
and while this works perfect for monitors or desktop devices, for a mobile phone,

60
00:04:57,960 --> 00:05:03,740
this leads to a website being displayed like this which is of course way too small.

61
00:05:03,930 --> 00:05:10,620
And what causes this problem of course in the end is that modern mobile phones have a really high pixel

62
00:05:10,620 --> 00:05:13,290
density and this high pixel density,

63
00:05:13,320 --> 00:05:19,050
so a lot of pixels in a really little amount of space lead to the problem that these, as I would call

64
00:05:19,050 --> 00:05:26,070
them, traditional ways of translating pixels into inches and by that, specify the amount of information

65
00:05:26,310 --> 00:05:30,360
that is displayed on the device is not working anymore.

66
00:05:30,360 --> 00:05:36,870
So if pixels are translated into inches and we have the problem that we have too many pixels and not

67
00:05:36,870 --> 00:05:43,890
enough space available or a too-small device, then we can either increase the size of the device which

68
00:05:43,890 --> 00:05:52,380
is difficult because our mobile phones have the size they have or decrease the amount of pixels because

69
00:05:52,440 --> 00:05:59,980
if we have less pixels available, then less information would be displayed at the same time on our display

70
00:06:00,060 --> 00:06:05,650
and with that, we would have a bigger font size and a bigger size of the entire content of the

71
00:06:05,650 --> 00:06:06,830
website actually.

72
00:06:07,050 --> 00:06:14,320
And if you now go to this page right here, mydevice.io and click on to compare devices, we can find the

73
00:06:14,310 --> 00:06:21,010
solution for that problem because here we have our iPhone 8 for example and we can see the physical width

74
00:06:21,220 --> 00:06:22,690
and the physical height,

75
00:06:22,690 --> 00:06:25,730
so these are the hardware pixels I'm referring to

76
00:06:26,230 --> 00:06:31,040
and right here, you can now see the CSS width and the CSS height.

77
00:06:31,090 --> 00:06:32,740
And we saw these numbers already

78
00:06:32,860 --> 00:06:39,570
because if we go back to our website, we can see that this is exactly the width and height that the

79
00:06:39,570 --> 00:06:46,440
Chrome developer tools show us as the device height and width for this iPhone 8

80
00:06:46,630 --> 00:06:51,970
and this basically is due to the fact that we have a so-called pixel ratio.

81
00:06:52,180 --> 00:06:56,490
In the case of the iPhone 8, we have a pixel ratio of two.

82
00:06:56,500 --> 00:07:02,560
This basically means that we take the physical height divided by two, as you can see it,

83
00:07:02,890 --> 00:07:07,310
and with that, we have the height that is now assumed by CSS

84
00:07:07,330 --> 00:07:09,340
for our mobile phone

85
00:07:09,790 --> 00:07:17,280
and with this pixel ratio, CSS would only assume a height of 676 pixels for our iPhone

86
00:07:17,290 --> 00:07:18,060
8

87
00:07:18,220 --> 00:07:25,840
and if we think back about our calculation right here, that 96 pixels are 1 inch, then we would only have

88
00:07:25,930 --> 00:07:30,510
let's say round about 6 inches of height that the browser understands

89
00:07:30,520 --> 00:07:36,460
for our iPhone and with that, we have a height that is a lot closer to the real one

90
00:07:36,490 --> 00:07:40,930
when comparing it to the initial one which led to this strange way of displaying the website right

91
00:07:40,930 --> 00:07:41,520
here

92
00:07:41,650 --> 00:07:48,280
and with that, we would be able to display our website in a better scaled way.

93
00:07:48,280 --> 00:07:51,010
The question now is, how can we achieve that goal?

94
00:07:51,010 --> 00:07:58,720
How can we tell the browser that it should apply this pixel ratio to make sure that it translates the

95
00:07:58,840 --> 00:08:07,530
actual hardware pixels, so 751334 into 375667.

96
00:08:07,890 --> 00:08:12,400
Well the answer is we simply have to add this viewport meta tag.

97
00:08:12,600 --> 00:08:17,020
For that, we can go back to our website and actually switch back to our code

98
00:08:17,280 --> 00:08:24,120
and as we are on the starting page, we can go to the main index.html file right here and now add the meta tag

99
00:08:24,180 --> 00:08:30,090
right here as the third meta tag and we simply add meta.

100
00:08:30,240 --> 00:08:38,900
Now we add name which should be viewport like that and now we add a second attribute, the content. For the

101
00:08:38,900 --> 00:08:46,550
content, we will add width equals the device width, I'll dive into these attributes in the next lectures in a bit

102
00:08:46,550 --> 00:08:47,350
more detail

103
00:08:47,390 --> 00:08:54,560
but generally, this simply means that the width of the viewport should be equal to the device width

104
00:08:54,650 --> 00:08:58,580
and with that, we can recognize the device width of our device,

105
00:08:58,580 --> 00:08:59,390
that's the important thing

106
00:08:59,390 --> 00:09:00,730
we didn't have so far.

107
00:09:00,950 --> 00:09:08,580
So we should add device width and then we can also add initial scale which equals 1.0.

108
00:09:08,600 --> 00:09:14,240
As I said, I will dive into that in one of the next lectures in a bit more detail. If we now go back to our

109
00:09:14,240 --> 00:09:23,270
website and reload it, you can see that the style totally changed because now our browser is able

110
00:09:23,420 --> 00:09:25,970
to identify the actual device

111
00:09:25,970 --> 00:09:28,580
width we have right here on our smartphone.

112
00:09:28,580 --> 00:09:32,870
This means he does not consider the actual hardware pixels

113
00:09:33,170 --> 00:09:36,280
but considers the CSS, the software pixels,

114
00:09:36,300 --> 00:09:46,370
so this 375 times 667 and for a width of 375 pixels, this is the way our website is displayed.

115
00:09:46,520 --> 00:09:54,380
And if we now go back to our desktop version and also decrease the size to this 375 pixels, right

116
00:09:54,380 --> 00:09:55,100
here,

117
00:09:55,520 --> 00:10:03,150
well then you can see if we switch back and increased the size a bit, that this is pretty identical now

118
00:10:03,350 --> 00:10:11,270
and with that, we applied a first very important core concept to be able to apply a responsive design

119
00:10:11,300 --> 00:10:12,540
to our website.

120
00:10:12,860 --> 00:10:20,850
Now before we dive deeper into this viewport meta tag and also into media queries, let me show you a

121
00:10:20,850 --> 00:10:27,220
quick comparison between the viewport meta tag and the media queries in the next lecture.
