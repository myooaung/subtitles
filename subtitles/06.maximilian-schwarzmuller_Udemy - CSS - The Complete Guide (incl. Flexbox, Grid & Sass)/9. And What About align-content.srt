1
00:00:02,230 --> 00:00:08,440
So time to have a look at the last property in connection with the flex container and this property

2
00:00:08,620 --> 00:00:12,310
is called align content,

3
00:00:12,320 --> 00:00:16,610
so basically, a combination of align items and justify content.

4
00:00:16,610 --> 00:00:20,160
Now let's start with align content center right here.

5
00:00:20,270 --> 00:00:23,300
If we do that and reload our page,

6
00:00:23,480 --> 00:00:24,760
nothing changed

7
00:00:24,980 --> 00:00:29,260
but if we now decrease the size, can you see the difference?

8
00:00:29,590 --> 00:00:34,060
Well let me show you right here by going into the developer tools

9
00:00:34,240 --> 00:00:39,300
and let's now unselect align content right here, like that.

10
00:00:39,300 --> 00:00:47,420
Can you see the difference? Align content allows us to align our items along the cross axis.

11
00:00:47,430 --> 00:00:53,370
As for the other properties, we have different values available for align content, you can find links

12
00:00:53,370 --> 00:00:54,940
to that attached to this video.

13
00:00:55,080 --> 00:01:02,310
So this is center, with that we centered our items but we can also add something like flex start once again,

14
00:01:02,400 --> 00:01:03,100
like this

15
00:01:03,120 --> 00:01:08,490
and if now reload the page, you can see that the items are positioned at the beginning of the cross

16
00:01:08,490 --> 00:01:09,470
axis.

17
00:01:09,570 --> 00:01:13,140
If I increase the size, it jumps back to this behavior

18
00:01:13,180 --> 00:01:17,630
because keep in mind, we have align items and justify content center,

19
00:01:17,670 --> 00:01:19,500
so this is basically what we see right here

20
00:01:19,740 --> 00:01:25,080
but as soon as we have our second line available right here, the align content property will come into

21
00:01:25,080 --> 00:01:25,630
play.

22
00:01:25,890 --> 00:01:27,450
We also have other values for it,

23
00:01:27,450 --> 00:01:37,260
for example we have space between, this one right here and if we apply this value, can you see what

24
00:01:37,260 --> 00:01:45,000
happens? The space between our elements is now simply used in a way that the elements in the first row

25
00:01:45,090 --> 00:01:50,400
are positioned at the beginning of our cross axis and that the second row is positioned at the end

26
00:01:50,490 --> 00:01:52,080
of our cross axis,

27
00:01:52,080 --> 00:01:56,060
it's also a nice way to display values like that differently.

28
00:01:56,160 --> 00:02:01,130
So that was it actually, that's the last property we have for our flex container,

29
00:02:01,230 --> 00:02:05,250
let's maybe change this back to center for example,

30
00:02:05,250 --> 00:02:10,350
I think that's the better way to display our elements right here but still, the theory is done

31
00:02:10,350 --> 00:02:16,740
and the theory is nice but I think now it's time to jump back to our project and to see where we can

32
00:02:16,800 --> 00:02:22,950
add flexbox right there because as you hopefully saw, it's quite a powerful tool actually

33
00:02:23,160 --> 00:02:28,650
and just by adding these lines of code right here, these ones right here, excluding the commented out

34
00:02:28,650 --> 00:02:29,570
part of course,

35
00:02:29,700 --> 00:02:33,870
we were able to change a lot of the behavior of our elements.

36
00:02:33,870 --> 00:02:38,850
So in the next lecture, we will go back to our project and see what we can change right there.
