WEBVTT
1
00:00:02.280 --> 00:00:09.650
Back in our theory project so to say, we learned about the basic positioning and layout and capabilities

2
00:00:09.710 --> 00:00:12.310
of the grid and its children,

3
00:00:12.320 --> 00:00:17.220
now let's dive into some shorthands and advanced positioning features,

4
00:00:17.240 --> 00:00:23.990
let's start with the shorthands. One convenient shorthand, which you probably will use quite a bit, is

5
00:00:23.990 --> 00:00:29.420
one which allows you to summarize the column, the grid column start and end or the grid row start and

6
00:00:29.420 --> 00:00:31.520
end statements into one.

7
00:00:31.520 --> 00:00:37.780
You can summarize grid column start and grid column end into just grid column and then the first value

8
00:00:37.790 --> 00:00:44.150
is the start value, one, and then the second value is separated and that's important, is separated by

9
00:00:44.150 --> 00:00:48.810
a slash, a forward slash and then you will simply add the end value.

10
00:00:48.860 --> 00:00:55.070
So this shorthand here replaces the longer version I had before

11
00:00:55.370 --> 00:00:58.190
and it works exactly the same for the row.

12
00:00:58.310 --> 00:01:00.980
There we have grid row as a shorthand

13
00:01:01.160 --> 00:01:07.240
with the start value which as you see can also be a name and the end value which also can be span 1.

14
00:01:07.250 --> 00:01:14.240
So you really enter just the same values as you did for grid row start and end but now in this shorthand

15
00:01:14.270 --> 00:01:20.540
notation. If you save that and reload, you shouldn't see any changes because it is just the same in the

16
00:01:20.540 --> 00:01:23.120
end, it leads to the same result

17
00:01:23.330 --> 00:01:30.590
but in a shorter way. There also is a shorthand which allows you to summarize all values into just one

18
00:01:30.590 --> 00:01:31.380
property

19
00:01:31.580 --> 00:01:35.570
and that's the so-called grid area property.

20
00:01:35.570 --> 00:01:40.640
Now the grid area property has a clearly defined order of values.

21
00:01:40.730 --> 00:01:43.930
First of all, you start with grid row start,

22
00:01:44.050 --> 00:01:48.460
so with this value, row-1-start in this element three's case.

23
00:01:48.470 --> 00:01:53.660
So you enter row-1-start, then a forward slash and then not,

24
00:01:53.660 --> 00:01:59.520
and that's important, not the end of the row but the start of the column instead.

25
00:01:59.660 --> 00:02:04.700
So we had the grid row start as a first value, the second value is grid column start,

26
00:02:04.790 --> 00:02:12.810
so two in this case. Then you have another forward slash and now you add the grid row end, so grid row

27
00:02:12.810 --> 00:02:20.120
start, grid column start, grid row end is row-2-end in this case and then another forward slash

28
00:02:20.120 --> 00:02:28.190
and now obviously grid column end, so span three in this example. If we insert this and comment out the

29
00:02:28.190 --> 00:02:34.700
longer version, we can save that and reload and we don't see any changes because we end up with the

30
00:02:34.700 --> 00:02:36.730
same grid here, just with

31
00:02:36.750 --> 00:02:42.860
this shorthand. Now feel free to use the in-between shorthand if this is a bit clearer to you,

32
00:02:43.100 --> 00:02:47.480
this one exists though and is of course perfectly fine to use it, may even be better,

33
00:02:47.480 --> 00:02:52.080
just make sure that your fellow developers are on board and also understand this.
