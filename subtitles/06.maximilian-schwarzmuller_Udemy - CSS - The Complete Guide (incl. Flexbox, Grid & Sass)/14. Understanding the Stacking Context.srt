1
00:00:02,330 --> 00:00:05,570
So what is this stacking context? For that,

2
00:00:05,570 --> 00:00:07,790
we have another code example right here

3
00:00:08,030 --> 00:00:11,210
and what we can see are three parent elements,

4
00:00:11,210 --> 00:00:18,470
so we have the navigation, the headline and contact us and inside the headline, we have three children,

5
00:00:18,530 --> 00:00:22,450
image one, image two and image three. From a code perspective,

6
00:00:22,460 --> 00:00:24,090
this looks like this,

7
00:00:24,350 --> 00:00:29,790
we have on the HTML side of course the class for navigation and for headline,

8
00:00:29,790 --> 00:00:36,980
as I said inside the headline, we have three images, also referred to as classes and we have our contact us div

9
00:00:37,040 --> 00:00:39,470
down there. On the CSS side,

10
00:00:39,530 --> 00:00:44,890
we basically have some general styling applied to all these elements,

11
00:00:44,930 --> 00:00:50,980
the really important thing though is that we applied position fixed to all parent elements right here

12
00:00:51,350 --> 00:00:56,480
and that's also the reason why navigation is at the bottom,

13
00:00:56,480 --> 00:01:02,630
then we have the headline on top of it and then contact us on top of the other elements. And now you probably

14
00:01:02,630 --> 00:01:03,090
say,

15
00:01:03,140 --> 00:01:04,520
yes I know this,

16
00:01:04,520 --> 00:01:05,700
we talked about that,

17
00:01:05,750 --> 00:01:08,680
we know that these are fixed elements,

18
00:01:08,720 --> 00:01:11,480
we know that these are taken out of the document flow,

19
00:01:11,630 --> 00:01:13,680
they all have z-index of zero

20
00:01:13,820 --> 00:01:20,840
and because of that, the order in the HTML document defines the order these are displayed along the z-axis

21
00:01:21,050 --> 00:01:26,540
which is totally correct because we can see that navigation is the first, then headline, then contact

22
00:01:26,540 --> 00:01:27,020
us,

23
00:01:27,020 --> 00:01:31,550
so contact us is the one positioned at the top.

24
00:01:31,610 --> 00:01:32,930
We can also change that,

25
00:01:32,930 --> 00:01:38,150
this is also something that we learned, so we could for example go to our headline right here

26
00:01:39,880 --> 00:01:46,520
and now add a z-index of one for example, like that

27
00:01:46,900 --> 00:01:53,110
and if we now reload the page, we know that headline is positioned on top of all elements.

28
00:01:53,110 --> 00:01:55,570
So this is what we know so far, nothing new,

29
00:01:55,660 --> 00:02:01,900
I just wanted to make sure that we have the same starting point because stacking context comes into

30
00:02:01,900 --> 00:02:10,710
play when we play around with these children right here because let's say that we apply another

31
00:02:10,720 --> 00:02:21,570
z-index for our contact us form which is 100, like that. With that, we know that contact us is back on top

32
00:02:21,570 --> 00:02:22,170
again

33
00:02:22,560 --> 00:02:28,620
but let's now focus onto these three images because what happens if I also apply position fixed to

34
00:02:28,620 --> 00:02:34,860
all three images and then apply a z-index to one of these images for example that is above the

35
00:02:34,860 --> 00:02:37,650
z-index of the Contact Us element.

36
00:02:37,640 --> 00:02:38,960
Let's do it step-by-step.

37
00:02:39,480 --> 00:02:41,730
Let's first apply position fixed,

38
00:02:45,190 --> 00:02:46,070
right here,

39
00:02:47,980 --> 00:02:57,480
there and for the third image, like that. If I now reload the page, yes we can see that the elements are now positioned

40
00:02:57,690 --> 00:02:58,350
fixed,

41
00:02:58,350 --> 00:03:02,680
we know that so far and that image three is on top of these elements.

42
00:03:02,700 --> 00:03:11,190
This means if I would go back and add a z-index to image 2 let's say of one again, then image 2 will

43
00:03:11,190 --> 00:03:18,740
be positioned on top of these images. If I will change the value to -1 for example, like that,

44
00:03:19,230 --> 00:03:22,530
well then the element is below the other elements,

45
00:03:22,560 --> 00:03:29,100
so image 2 cannot be moved below the actual headline element, below its parent

46
00:03:29,100 --> 00:03:35,610
but what happens now if I change the z-index again and as I said a few seconds ago, make it higher

47
00:03:35,790 --> 00:03:38,160
than the one we have for contact us?

48
00:03:38,160 --> 00:03:39,540
Contact us right here

49
00:03:39,600 --> 00:03:41,540
has z-index of 100

50
00:03:41,760 --> 00:03:45,520
and let's now say I add a z-index of 1000 right there,

51
00:03:45,520 --> 00:03:49,240
this is far above the one we have for contact us.

52
00:03:49,590 --> 00:03:55,500
If we go back and reload the page, you can see that image 2 is again above the other two images

53
00:03:56,070 --> 00:03:59,350
but it's still below contact us.

54
00:03:59,430 --> 00:04:00,620
Why is this happening?

55
00:04:00,840 --> 00:04:04,410
Well the reason for that is simply the stacking context

56
00:04:04,470 --> 00:04:05,630
and what does this mean?

57
00:04:05,850 --> 00:04:11,180
Well basically we aligned all our parent elements along the z-axis,

58
00:04:11,190 --> 00:04:12,090
that's what we know

59
00:04:12,510 --> 00:04:17,860
and by adding position fixed to these, each element has its own stacking context.

60
00:04:17,880 --> 00:04:25,800
This means for the elements inside the headline element, the z-index will only have an impact onto the

61
00:04:25,800 --> 00:04:32,960
order of these elements inside the headline element but the general order of the headline element below

62
00:04:33,000 --> 00:04:34,110
contact us,

63
00:04:34,110 --> 00:04:40,430
this is defined by the z-index that we apply to the headline element right here.

64
00:04:40,500 --> 00:04:41,460
What does this mean?

65
00:04:41,670 --> 00:04:48,360
If I change the headline z-index again to let's say 200 which is above the 100 of

66
00:04:48,390 --> 00:04:54,470
contact us, then it will be displayed above it including all of the children of course

67
00:04:54,750 --> 00:05:01,650
but if I change it back to a value below the z-index of contact us to 99 for example, then it's displayed

68
00:05:01,650 --> 00:05:08,070
again below it and we can apply whatever z-index we want to the images because these are part of

69
00:05:08,070 --> 00:05:15,300
the stacking context of headline and therefore, the positioning of the parent elements has nothing to

70
00:05:15,300 --> 00:05:22,530
do with these z-indices, for these parent elements, only the z-index of the parent elements itself

71
00:05:22,710 --> 00:05:23,780
has an impact.

72
00:05:24,090 --> 00:05:31,140
And this is the stacking context, you probably won't be confronted with that on a day-by-day coding basis

73
00:05:31,440 --> 00:05:38,190
but from time to time, it can be helpful to have this in mind in case you are not sure why your element

74
00:05:38,490 --> 00:05:41,270
is behaving the way it is behaving right now.

75
00:05:41,550 --> 00:05:47,330
And with that, we finished the last important core concept of this position module.

76
00:05:47,340 --> 00:05:50,550
Now let me summarize what we learned in the next video.
