WEBVTT
1
00:00:02.270 --> 00:00:05.440
So what can we do with this relative positioning now?

2
00:00:05.750 --> 00:00:08.940
Attached you can again find this starting code right here,

3
00:00:09.080 --> 00:00:15.620
this is actually the same code we had to get a better understanding of the fixed positioning

4
00:00:15.770 --> 00:00:20.120
and as we know the code, as you can see right here, it's the same we have before,

5
00:00:20.120 --> 00:00:27.100
why don't we just start and add the relative position to our first child,

6
00:00:27.140 --> 00:00:29.160
so to this navigation bar right here.

7
00:00:29.510 --> 00:00:38.390
Well let's do that by adding the parent class selector and now child one, class selector again

8
00:00:38.390 --> 00:00:46.820
and now I want to add position relative, like that. If we do that and you saw that already in the project,

9
00:00:46.980 --> 00:00:48.060
nothing changes

10
00:00:48.060 --> 00:00:54.870
basically, the element stays or behaves the same way it did before when we didn't apply that value.

11
00:00:55.860 --> 00:01:01.670
We saw though in the project also that with this position property, we can of course change the positioning

12
00:01:01.670 --> 00:01:04.460
context of other elements,

13
00:01:04.500 --> 00:01:09.990
so of children of this element but as we don't have any children right here,

14
00:01:10.050 --> 00:01:12.050
there is not a lot that we can change right now.

15
00:01:12.220 --> 00:01:20.040
But the cool thing is that if we now go back and add for example top let's say 50 pixels and left 50

16
00:01:20.040 --> 00:01:28.510
pixels, like that, then we can see that the element suddenly moves and why is this happening?

17
00:01:28.820 --> 00:01:38.210
Well we saw for the fixed and absolute values that the elements are taken out of the document flow and then

18
00:01:38.210 --> 00:01:45.950
positioned relatively to the viewport or as we saw it, to the HTML element or to the closest ancestor which

19
00:01:45.950 --> 00:01:50.100
has the position property applied. For the relative value,

20
00:01:50.150 --> 00:01:57.620
this is different because the positioning context is the element itself and at the same time, the element

21
00:01:57.830 --> 00:02:01.000
is also not taken out of the document flow.

22
00:02:01.040 --> 00:02:08.490
So what basically happened right here with our element is that we moved it down from its initial position,

23
00:02:08.610 --> 00:02:16.920
which was right here by 50 pixels from the top and then 50 pixels from the left,

24
00:02:16.920 --> 00:02:20.430
that's really important. With the relative value,

25
00:02:20.490 --> 00:02:28.590
you simply push your element from the current position down from the top by 50 pixels and from the left

26
00:02:28.860 --> 00:02:30.340
by 50 pixels.

27
00:02:30.390 --> 00:02:32.870
So if you would apply right 50 pixels

28
00:02:32.870 --> 00:02:34.640
now, let's do this quickly,

29
00:02:36.140 --> 00:02:44.880
like that and reload the page, then you can see that the element moves from the right to the left by

30
00:02:44.940 --> 00:02:51.810
50 pixels. So that's important to keep in mind, for the fixed and absolute values,

31
00:02:52.020 --> 00:02:59.190
the top, left, bottom and right properties specify a distance to the parent element basically,

32
00:02:59.190 --> 00:03:00.960
so to the containing block

33
00:03:01.530 --> 00:03:09.050
but for the relative positioning, this simply defines how this element should move from the current position.

34
00:03:09.240 --> 00:03:13.510
And as we can move the element basically wherever we want to,

35
00:03:13.590 --> 00:03:17.280
so we could also add top 300 pixels right here,

36
00:03:18.840 --> 00:03:22.330
well this can lead to the following situation.

37
00:03:22.380 --> 00:03:27.590
We basically move the relative element right here out of the actual parent,

38
00:03:27.600 --> 00:03:30.530
so of our parent class right here.

39
00:03:30.900 --> 00:03:37.470
Now you might want this behavior but there are probably situations where you say yes I want to move my

40
00:03:37.470 --> 00:03:42.660
element a little bit to the left, to the right, to the bottom, wherever but I want to make sure that it

41
00:03:42.930 --> 00:03:47.070
doesn't leave this parent or at least that it's not visible anymore

42
00:03:47.160 --> 00:03:53.100
as soon as it leaves the parent element right here. Now in the next video, I will show you how you can

43
00:03:53.100 --> 00:03:54.750
quickly solve this issue

44
00:03:55.020 --> 00:04:00.720
but also a problem that you can have depending on the element type your parent has.
