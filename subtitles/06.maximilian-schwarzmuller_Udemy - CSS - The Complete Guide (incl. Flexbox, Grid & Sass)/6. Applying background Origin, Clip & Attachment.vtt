WEBVTT
1
00:00:02.280 --> 00:00:09.690
Let's start with background origin, it's a bit comparable to box sizing, the values you can assign

2
00:00:09.780 --> 00:00:17.940
are very similar though there is an extra value. Let's temporarily comment this out and let's also give

3
00:00:17.940 --> 00:00:24.690
our image a border temporarily because this will help us understanding some of these additional properties.

4
00:00:24.690 --> 00:00:29.990
Let's give it a border of let's say 5 pixels dashed, not solid, red.

5
00:00:30.180 --> 00:00:32.120
If we save that and we reload,

6
00:00:32.310 --> 00:00:35.700
we see that dashed border around our image.

7
00:00:35.700 --> 00:00:41.730
Now what you can see already if you watch closely is that on the left and right, there is whitespace

8
00:00:41.730 --> 00:00:46.530
beneath the border, on the top and bottom, we actually see the image.

9
00:00:46.560 --> 00:00:49.140
The reason for this is that on the left and right,

10
00:00:49.170 --> 00:00:50.980
the images fit into the container

11
00:00:51.090 --> 00:00:57.620
but as you can see, the border doesn't seem to be part of the container width. On the top and bottom, the

12
00:00:57.630 --> 00:01:04.050
border also isn't part of the container but on the top and bottom, we actually have excess space

13
00:01:04.050 --> 00:01:09.880
on our image, so we crop it and that in turn seems to happen after the border,

14
00:01:09.930 --> 00:01:15.340
now that's exactly what we can control with properties like background origin.

15
00:01:15.630 --> 00:01:22.570
So if we set background origin to for example to border box and we save and we reload,

16
00:01:22.860 --> 00:01:25.690
now you see the image also goes beneath

17
00:01:25.690 --> 00:01:32.550
or below the border on the left and right because we now basically define what the container is for

18
00:01:32.550 --> 00:01:35.440
our background property. By default,

19
00:01:35.490 --> 00:01:39.660
it's not the border box and therefore we have that whitespace.

20
00:01:39.660 --> 00:01:41.280
So what is the default then,

21
00:01:41.280 --> 00:01:45.400
is it content box? Let's assign content box and reload

22
00:01:45.540 --> 00:01:51.990
and now we see we even got some whitespace inside of our image because if we hover over our section here

23
00:01:51.990 --> 00:01:55.040
which holds the image, we see that it's got some padding,

24
00:01:55.140 --> 00:01:58.600
that green area on the left and right and top and bottom.

25
00:01:58.890 --> 00:02:00.590
So content box

26
00:02:00.630 --> 00:02:06.490
just as for box sizing means the content without border and padding.

27
00:02:06.780 --> 00:02:12.840
So now the container which defines the width and height of our image is just a container without border

28
00:02:12.870 --> 00:02:14.180
and any padding.

29
00:02:14.550 --> 00:02:20.550
So the default actually is something we can't set on box sizing, the padding box,

30
00:02:20.550 --> 00:02:26.000
this means the container including content and padding but not the border.

31
00:02:26.010 --> 00:02:32.190
Now I will change this to border box here to ensure that my image also goes beneath the border,

32
00:02:32.280 --> 00:02:35.480
even though we will remove that border later.

33
00:02:35.970 --> 00:02:44.730
Now however one other thing we can notice is that it always, no matter what we defined, went beneath the border

34
00:02:44.910 --> 00:02:51.420
for top and bottom because there, we were not talking about setting the height of the container but we

35
00:02:51.420 --> 00:02:58.380
simply had the effect that we had excess image and we cropped that but the cropping wasn't affected

36
00:02:58.380 --> 00:03:07.610
by background original, this instead is set with background clip, here we can also set it to border

37
00:03:07.610 --> 00:03:08.430
box.

38
00:03:08.470 --> 00:03:12.430
If we save that and we reload, we get the same behavior as before.

39
00:03:12.860 --> 00:03:17.720
If we change it to padding box however and we now reload,

40
00:03:17.720 --> 00:03:19.980
now you see the border is empty,

41
00:03:20.000 --> 00:03:23.180
so no image beneath it at the top and bottom too.

42
00:03:23.450 --> 00:03:29.390
So with background clip, we define where the image actually should be clipped if necessary

43
00:03:29.510 --> 00:03:31.710
and now it's clipped after the padding

44
00:03:31.970 --> 00:03:36.720
and of course we could also set this to content to clip it before the padding,

45
00:03:36.740 --> 00:03:39.740
so now we got this whitespace around it.

46
00:03:39.740 --> 00:03:44.000
Please note that this now also affects the width,

47
00:03:44.030 --> 00:03:51.590
so the part where we don't clip it but where we actually size it. If we set this back to padding box,

48
00:03:51.620 --> 00:03:57.690
we can also see this because to the left and right, the border now also has some whitespace beneath it.

49
00:03:58.130 --> 00:04:05.660
So background clip actually overwrites background origin you could say and it's also important for defining

50
00:04:05.660 --> 00:04:12.100
how it should be, well not just positioned and sized but also how it should be clipped

51
00:04:12.350 --> 00:04:18.110
and I will also set background clip and origin back to border box to have a nicer view.

52
00:04:18.110 --> 00:04:22.230
Now the last thing we saw in the slides is background attachment.

53
00:04:22.250 --> 00:04:24.250
Now we won't actually see this in action here

54
00:04:24.380 --> 00:04:27.220
and it's a property you rarely use.

55
00:04:27.410 --> 00:04:33.680
With that you can define how scrolling would behave in a container that has a background image but that

56
00:04:33.680 --> 00:04:35.600
is not fixed itself.

57
00:04:35.600 --> 00:04:38.840
Now this container here isn't fixed but relative

58
00:04:38.960 --> 00:04:44.480
but we can't scroll inside of it and on the packages page, we have a container where we can

59
00:04:44.480 --> 00:04:47.590
scroll in it but the container itself is fixed to the page,

60
00:04:47.630 --> 00:04:57.290
so we also won't see effect there. Background attachment would allow you to set fixed, scroll or local as a value

61
00:04:57.890 --> 00:05:03.790
and this defines whether the image scrolls with the other content of the container,

62
00:05:04.220 --> 00:05:07.070
for local, that would be the case, for scroll

63
00:05:07.070 --> 00:05:12.840
however, the image would stay in place and the content would scroll over it, above it

64
00:05:14.110 --> 00:05:19.630
and for fixed, the image would not would not be fixed to the container but to the viewport.

65
00:05:19.630 --> 00:05:24.160
So you should have an effect where if you scroll the entire page with the container where the image

66
00:05:24.160 --> 00:05:27.800
is inside, the image should stay in place.

67
00:05:27.820 --> 00:05:30.330
This is what you can do with background attachment,

68
00:05:30.430 --> 00:05:34.560
again a property you don't use that often in reality though.

69
00:05:34.810 --> 00:05:37.790
So these are all the subproperties

70
00:05:37.870 --> 00:05:43.410
we can set for background, as we learned, most of them only apply to background images.

71
00:05:43.450 --> 00:05:48.720
Now with that, let's find out how we can bring all these subproperties into one

72
00:05:48.720 --> 00:05:49.360
shorthand.
