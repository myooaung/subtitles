WEBVTT
1
00:00:02.170 --> 00:00:09.930
Speaking of modern features, here is one we'll actually use in our course project, CSS variables.

2
00:00:09.940 --> 00:00:11.530
Now what does this mean?

3
00:00:11.560 --> 00:00:17.800
Consider this case; we get CSS code where we get different selectors and let's say they share some common

4
00:00:17.800 --> 00:00:20.850
functionality, like a color which you reuse.

5
00:00:20.860 --> 00:00:26.980
This could also be some unit though, this could be something like 1rem which you use again and again,

6
00:00:27.700 --> 00:00:36.610
CSS variables are a relatively new feature which allow you to put that reused value into a variable

7
00:00:36.700 --> 00:00:42.670
which you defined with this strange looking syntax, --my-color.

8
00:00:42.670 --> 00:00:49.570
Now this is a property which kind of exists, the browser understands that this now should become a custom

9
00:00:49.570 --> 00:00:54.790
variable and then you can reuse that variable with that var function.

10
00:00:54.790 --> 00:01:00.490
Also note that the variable here is defined in that root pseudo selector, which in the end refers to

11
00:01:00.490 --> 00:01:07.010
the entire document or to every element, you could also place it on a specific element selector

12
00:01:07.180 --> 00:01:11.190
but then this variable would only be usable within that selector.

13
00:01:11.200 --> 00:01:18.280
So with the snippet you see here, you define it once and you can use it everywhere in your document, everywhere

14
00:01:18.430 --> 00:01:19.960
on your page.

15
00:01:20.260 --> 00:01:25.420
And there also is a special syntax which you see at the very bottom where we provide a second value,

16
00:01:25.460 --> 00:01:29.870
this is a fallback value in case the variable is not defined yet.

17
00:01:29.890 --> 00:01:35.830
Be aware, this is not a fallback value for browsers which don't support variables because they won't

18
00:01:35.830 --> 00:01:37.870
even understand the var function,

19
00:01:37.870 --> 00:01:43.960
this really is just a fallback for cases where you reference a variable and for some reason, it isn't

20
00:01:43.960 --> 00:01:44.870
set yet,

21
00:01:44.890 --> 00:01:48.490
maybe because you forgot to import some other file where you defined it,

22
00:01:48.610 --> 00:01:50.890
then this fallback value will kick in,

23
00:01:50.890 --> 00:01:57.000
not in browsers which don't support variables. Speaking of browser support, if we check

24
00:01:57.000 --> 00:01:59.480
caniuse for CSS variables,

25
00:01:59.560 --> 00:02:05.970
we see that browser support is generally pretty good but Internet Explorer doesn't support it at all.

26
00:02:06.130 --> 00:02:12.280
So if you also need support Internet Explorer and chances are you do, at least version 11, then

27
00:02:12.280 --> 00:02:15.920
you can't use variables, you can't use CSS variables.

28
00:02:16.030 --> 00:02:19.840
If you don't need to do that, they are a real alternative though

29
00:02:20.020 --> 00:02:26.470
and in the future of course, when the usage of Internet Explorer becomes less and less, variables

30
00:02:26.470 --> 00:02:27.800
become more of an option.

31
00:02:27.820 --> 00:02:29.050
Now let's see them in action in

32
00:02:29.050 --> 00:02:37.570
our project. Back in our project, if we open the shared.css file, we see a couple of values that we repeat

33
00:02:37.660 --> 00:02:38.870
all over again.

34
00:02:39.100 --> 00:02:42.680
Well actually, I'm not going to replace everything with CSS variables,

35
00:02:42.700 --> 00:02:44.890
this is something you can definitely do though

36
00:02:45.010 --> 00:02:46.700
but I want to focus on colors.

37
00:02:46.750 --> 00:02:50.770
Be aware that you could use them for units like rem and so on too

38
00:02:50.790 --> 00:02:57.610
but we can already see that we reused colors, for example in that shared.css file if we scroll

39
00:02:57.610 --> 00:02:59.350
through it from top to bottom,

40
00:02:59.470 --> 00:03:00.650
this red color,

41
00:03:00.730 --> 00:03:02.820
we're using it twice here already.

42
00:03:03.100 --> 00:03:07.480
and if we scroll down further, we see that we also reuse that green color,

43
00:03:07.660 --> 00:03:09.970
so here, we can also see that.

44
00:03:10.330 --> 00:03:17.580
So it sounds like a good idea to put that green color and that red color into a CSS variable, now

45
00:03:17.590 --> 00:03:20.050
let's do that. All the way at the top,

46
00:03:20.170 --> 00:03:27.390
even above that universal selector, I'll add my root pseudo selector. Again, this selects the entire document.

47
00:03:28.530 --> 00:03:34.350
In that root selector, we can now add a variable with this special syntax you learned, by adding two dashes,

48
00:03:34.370 --> 00:03:35.530
now this is important

49
00:03:35.750 --> 00:03:40.970
and then the name of your variable, for example dark-green.

50
00:03:40.970 --> 00:03:42.820
Now that name is totally up to you,

51
00:03:42.830 --> 00:03:47.400
you then add a colon and then your value, like this dark green.

52
00:03:47.420 --> 00:03:52.370
Now this variable is defined and we can reuse it by that name.

53
00:03:52.370 --> 00:03:56.180
Now let's also put that red color into such a variable, so

54
00:03:56.300 --> 00:03:58.100
let's grab that hex code,

55
00:03:58.400 --> 00:04:07.070
scroll up to the root selector again and then maybe highlight color and use that color.

56
00:04:07.370 --> 00:04:10.280
Now of course, you might bring these names more into line,

57
00:04:10.280 --> 00:04:15.650
I'm using different names deliberately to really highlight and emphasize that you can use different names,

58
00:04:15.650 --> 00:04:19.500
that you can use custom names and name this however you want

59
00:04:19.880 --> 00:04:22.950
and now with that, we have these variables defined.

60
00:04:23.150 --> 00:04:26.580
Now of course, we want to use them. Now to use them,

61
00:04:26.780 --> 00:04:32.870
let's start with the green one maybe, dark green and let's search the occurrences of this dark green

62
00:04:32.870 --> 00:04:33.660
color.

63
00:04:33.980 --> 00:04:39.220
If we scroll down, here we see on the button we use it as a background,

64
00:04:39.390 --> 00:04:42.400
we now use it with a special var function.

65
00:04:42.480 --> 00:04:51.630
Here we simply add the name and we can add this as a fallback so that it uses this color in cases where

66
00:04:51.630 --> 00:04:54.000
somehow dark green is not set, here

67
00:04:54.000 --> 00:04:59.390
this is not required because we do set it at the top but this is how you could specify such a fallback.

68
00:04:59.610 --> 00:05:05.010
This is mostly interesting if you work with third-party packages that provide some variables where you

69
00:05:05.010 --> 00:05:07.620
might not be sure if it's defined or not.

70
00:05:08.010 --> 00:05:13.530
So here I'll repeat that, this time without the fallback because as I said, we don't need it,

71
00:05:13.620 --> 00:05:18.960
so use the var function here and use it down here where we got a color too.

72
00:05:19.110 --> 00:05:22.910
Now the other function, the other color I should say we have is the highlight color,

73
00:05:23.010 --> 00:05:24.630
so let's grab that too

74
00:05:24.810 --> 00:05:28.050
and let's search the occurrences of that color in our code,

75
00:05:28.200 --> 00:05:29.240
here we are

76
00:05:29.700 --> 00:05:34.660
and there, I'll again use the var function, enter the variable name and we're done

77
00:05:34.890 --> 00:05:41.790
and the same down here where we also use that color. With that if we scroll through, that should be all

78
00:05:41.880 --> 00:05:44.010
occurrences of these colors.

79
00:05:44.010 --> 00:05:48.910
Now if we save that and we reload, we see no difference

80
00:05:49.140 --> 00:05:52.490
and that is a good thing because that means that it works,

81
00:05:52.500 --> 00:05:54.710
we shouldn't see a difference here,

82
00:05:54.780 --> 00:05:57.800
we do style everything with variable successfully.

83
00:05:57.870 --> 00:06:05.400
We can see that if we inspect our call to action button here for example, there you can see that for

84
00:06:05.400 --> 00:06:11.300
the background, we got our highlight color and if we uncheck this, the background is gone,

85
00:06:11.310 --> 00:06:13.400
so this really seems to work.

86
00:06:13.450 --> 00:06:17.580
I can also see that there seems to be some leftover color,

87
00:06:17.970 --> 00:06:19.040
here it is,

88
00:06:19.050 --> 00:06:24.020
so maybe here for that color in our shared file still, we should also use var

89
00:06:24.180 --> 00:06:27.390
and then here it's dark-green.

90
00:06:27.390 --> 00:06:33.680
Now if we save that and we reload, then we can see that there we also got our dark green color.

91
00:06:33.690 --> 00:06:37.150
Now here, it's actually overwritten for that start hosting button

92
00:06:37.290 --> 00:06:42.030
but for the other elements, here we can see it's having an effect.

93
00:06:42.360 --> 00:06:50.430
So this how we can use CSS variables, later in this course when we dive into SASS, a preprocessor for

94
00:06:50.490 --> 00:06:52.950
CSS, we'll see an alternative to this

95
00:06:53.010 --> 00:06:58.740
but here we already got a nice feature which we can use to save ourselves some time because the clear

96
00:06:58.740 --> 00:07:04.740
advantage of the CSS variables is that we define them once and if we ever decide to change this color,

97
00:07:04.980 --> 00:07:10.230
we only need to do it in one place and the same of course if we were to define a font size or something

98
00:07:10.230 --> 00:07:16.200
like this here, we only need change it once and it will automatically be updated in the entire document,

99
00:07:16.200 --> 00:07:18.050
that's the great advantage.

100
00:07:18.120 --> 00:07:20.190
The disadvantage is the browser support

101
00:07:20.190 --> 00:07:21.850
as I mentioned, right now,

102
00:07:21.930 --> 00:07:23.880
Internet Explorer doesn't support it,

103
00:07:23.970 --> 00:07:29.470
so that might be a reason why you can't use them yet but in the future, this will be really great.
