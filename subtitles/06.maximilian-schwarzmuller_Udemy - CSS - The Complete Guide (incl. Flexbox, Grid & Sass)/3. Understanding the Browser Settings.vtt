WEBVTT
1
00:00:02.080 --> 00:00:08.530
So back in our project and I'm on the packages page because we will stay right here to play around with

2
00:00:08.530 --> 00:00:10.190
the fonts throughout this module

3
00:00:10.450 --> 00:00:16.990
and as I said, I would like to show you that you can find or where you can find the generic families

4
00:00:17.210 --> 00:00:19.950
and the font families in your browser.

5
00:00:20.440 --> 00:00:27.190
We are using Chrome in this course, so that's what it looks like in our case. In case you're using a different

6
00:00:27.190 --> 00:00:35.560
browser, the menu and the style selected might look different but the general idea is the same because

7
00:00:35.620 --> 00:00:43.780
if we simply go to our preferences right here and then go down to this customize fonts

8
00:00:43.790 --> 00:00:44.710
menu right here,

9
00:00:44.800 --> 00:00:49.800
this one and then scroll down a bit, right here,

10
00:00:50.040 --> 00:00:57.420
then we can see some interesting things actually because we can see that we have a standard font which

11
00:00:57.420 --> 00:00:59.260
is the font that will be applied

12
00:00:59.280 --> 00:01:06.790
as a standard by the browser and inside this font, we can select different font families.

13
00:01:06.840 --> 00:01:08.100
That's interesting, right?

14
00:01:08.100 --> 00:01:09.960
These are not generic families,

15
00:01:09.990 --> 00:01:13.350
these are already font families.

16
00:01:13.560 --> 00:01:14.900
OK, so that's what we can see,

17
00:01:14.930 --> 00:01:16.590
that's the standard behavior,

18
00:01:16.590 --> 00:01:21.530
we will see how we can change that, how we can impact that, we'll have a look at that throughout the module.

19
00:01:21.750 --> 00:01:26.730
Alternatively, we can also see that we have a serif font right here.

20
00:01:26.780 --> 00:01:30.380
This is a generic family now, for this generic family,

21
00:01:30.380 --> 00:01:33.080
we can now also select a font family.

22
00:01:33.080 --> 00:01:33.900
Important,

23
00:01:34.130 --> 00:01:40.870
this list right here also includes font families which are not part of the sans-serif generic family,

24
00:01:40.880 --> 00:01:42.230
for example Verdana,

25
00:01:42.230 --> 00:01:45.340
we saw that this is actually a sans-serif font.

26
00:01:45.470 --> 00:01:50.410
However, you can select the font you want to have for your serif font family right here.

27
00:01:50.480 --> 00:01:56.450
We've got the same thing for sans-serif right here and we got the fixed width font generic family which

28
00:01:56.450 --> 00:02:00.620
is basically the Monospace family we saw on the slide.

29
00:02:00.620 --> 00:02:06.460
However, this is what we can see in the browser, so we have these different fonts available right here

30
00:02:06.650 --> 00:02:13.970
but the actual question is now what will actually be displayed, which font will be used by the browser?

31
00:02:14.390 --> 00:02:18.170
Because we can see that we can select generic families right here,

32
00:02:18.170 --> 00:02:20.000
we can also select font families,

33
00:02:20.060 --> 00:02:21.500
we have the standard font,

34
00:02:21.500 --> 00:02:25.320
so what's the font that will be displayed in the end.

35
00:02:25.550 --> 00:02:31.160
Let's have a look at that because we have multiple options to have an impact on that because the starting

36
00:02:31.160 --> 00:02:38.090
point is of course this one, we are basically browsing onto our website and want to display it.

37
00:02:38.180 --> 00:02:43.660
Now the default behavior, the one right here is basically defined by the browser,

38
00:02:43.790 --> 00:02:44.870
that's what we saw,

39
00:02:44.930 --> 00:02:46.800
this is this standard font

40
00:02:46.970 --> 00:02:48.930
and what I mean by default behavior?

41
00:02:49.160 --> 00:02:55.970
Well the default behavior simply means that we didn't specify any kind of font family in our CSS

42
00:02:56.180 --> 00:03:03.230
code because with that, the browser will simply choose the standard font that we applied and use the

43
00:03:03.230 --> 00:03:05.930
font family that is selected in the browser,

44
00:03:05.930 --> 00:03:08.240
that's the default behavior that we have.

45
00:03:08.540 --> 00:03:16.670
Now one alternative we have is this one, we can define a generic family in our CSS code right here.

46
00:03:16.820 --> 00:03:21.610
With that, we could use one of the other options we saw because we had this standard font,

47
00:03:21.620 --> 00:03:27.980
this was option one but then we could also see that we could choose different font families for the different

48
00:03:27.980 --> 00:03:30.370
generic families in the browser settings

49
00:03:30.510 --> 00:03:36.710
and with that, we could tell the browser to please choose a specific generic family, sans-serif for example

50
00:03:37.070 --> 00:03:41.970
and then select the font family that was chosen in the browser settings,

51
00:03:42.090 --> 00:03:49.250
that's the second option we have. The third option will be that we specify a font family, in contrast

52
00:03:49.250 --> 00:03:49.900
to that,

53
00:03:49.970 --> 00:03:57.020
this will not be influenced directly by the browser settings because in the browser settings, we have different

54
00:03:57.020 --> 00:04:04.460
font families available but we could also select a font family in our CSS code which is not available

55
00:04:04.550 --> 00:04:12.080
by default in the browsers of our users. Because of that, we have three different options again, where to retrieve

56
00:04:12.080 --> 00:04:20.420
these font families from. The first option would be this one, the font family we specify in the CSS code is

57
00:04:20.510 --> 00:04:23.750
saved locally on the user's computer.

58
00:04:23.750 --> 00:04:30.750
Now as you can already imagine, this can lead to a lot of problems because the user's computer is a local

59
00:04:30.770 --> 00:04:36.240
computer and therefore, we cannot control which font families are installed, which ones are not,

60
00:04:36.260 --> 00:04:42.560
so the chances are quite high that our website, at least the fonts in our website will look different for

61
00:04:42.560 --> 00:04:43.660
a lot of users.

62
00:04:43.880 --> 00:04:48.830
We'll have a look at that though and see how we can implement some fallbacks to ensure that we can

63
00:04:48.830 --> 00:04:55.430
at least specify a generic family to make sure that the page looks at least kind of what it was intended

64
00:04:55.430 --> 00:04:56.360
to.

65
00:04:56.360 --> 00:04:59.060
So that's the first option, not the best one probably,

66
00:04:59.270 --> 00:05:04.760
then we have the second option, we can use web fontss and this is what we actually do in our project

67
00:05:04.760 --> 00:05:11.660
here because as we saw, we import our fonts that we used on the website from Google fonts with a so-called

68
00:05:11.660 --> 00:05:12.400
web font,

69
00:05:12.410 --> 00:05:16.270
so basically, we retrieve the font from a third party.

70
00:05:16.370 --> 00:05:17.720
We did that already,

71
00:05:17.840 --> 00:05:24.080
nevertheless we'll also have a closer look at it in this module. And then we have a third option, the third

72
00:05:24.140 --> 00:05:31.840
option simply means that we retrieve the fonts that we want to apply, the font family from a server

73
00:05:31.970 --> 00:05:37.520
and this could be for example our own server, so the server where our website is hosted.

74
00:05:37.760 --> 00:05:43.400
Therefore, we again have the control of the font families and make sure that the user can display these

75
00:05:43.400 --> 00:05:44.030
families,

76
00:05:44.030 --> 00:05:49.050
nevertheless if these are available in the browser or if these are saved to the computer

77
00:05:49.250 --> 00:05:55.010
and with that, we can ensure that the website looks as intended for most of our users.

78
00:05:55.040 --> 00:06:01.700
So these are the options we have, how we can specify what should be displayed or which font family, which

79
00:06:01.700 --> 00:06:04.850
font style should be applied to our website.

80
00:06:05.210 --> 00:06:11.000
So the best thing we can do right now probably is to jump back to our code and have a look at all these

81
00:06:11.000 --> 00:06:12.610
things in practice.

82
00:06:12.860 --> 00:06:15.410
So let's do that in the next lecture.
