WEBVTT

00:04.260 --> 00:11.370
Soulfire in our code we've been using my Escuela lie to connect to and interact with the database and

00:11.370 --> 00:17.110
we've been using procedural as opposed to object oriented code.

00:17.300 --> 00:22.260
However my Eskew ally Ah so has an object oriented interface.

00:22.380 --> 00:26.040
So each procedural function has an object oriented equivalent

00:28.790 --> 00:37.620
and it's okay to use either but not a good idea to mix them as your code will be difficult to read.

00:37.650 --> 00:44.430
We could convert all our code to use the object oriented version of my Eskew ally but if we're going

00:44.430 --> 00:51.060
to start using object oriented code to interact with the database P HP offers an alternative method

00:53.050 --> 01:01.020
with P HP data objects are pedigo we can access the database in much the same way we've been doing it

01:01.050 --> 01:03.100
using my s qaly.

01:03.450 --> 01:08.420
However PDA does have several advantages over my Eskew ally.

01:09.030 --> 01:16.140
First the show isn't just limited to my esky Well armoury dbe you can connect to all of these database

01:16.140 --> 01:20.550
management systems using exactly the same pdaf code.

01:20.730 --> 01:27.210
So once you know pto you can work with pretty much any relational database management system without

01:27.210 --> 01:30.840
having to learn more code.

01:30.840 --> 01:37.290
In addition to this working with prepared statements is easier with pto as you can have named place

01:37.290 --> 01:40.230
holders instead of just question marks.

01:40.320 --> 01:47.490
Plus I find the pdl code needed to fetch data using a prepared statement is easier to use than that

01:47.550 --> 01:50.160
of my escudo LIE.

01:51.510 --> 01:55.200
Having said that my escudo is still a good choice.

01:55.200 --> 02:03.360
If you know you're going to stick exclusively to my esky Well my Escuela does offer a very slight performance

02:03.360 --> 02:09.840
advantage over pdl but unless your site is very large and has millions of hits it's not going to make

02:09.840 --> 02:10.820
any difference.

02:11.070 --> 02:17.060
And I think the benefits of using pdl outweigh any disadvantages for this reason.

02:17.070 --> 02:24.120
I prefer to use pdl Whenever I need to work with a relational database p s p.

02:24.930 --> 02:31.290
So now that we know how to use classes and objects let's start using pdl in our project to connect to

02:31.290 --> 02:32.600
the database.

02:33.030 --> 02:39.480
First let's create a class that represents the database we're connecting to the database at the moment

02:39.480 --> 02:44.880
with this function and we're using it for various different scripts.

02:44.880 --> 02:50.730
Let's create a class that represents the database instead that we can use from any script that needs

02:50.730 --> 02:51.500
it.

02:51.930 --> 03:01.510
Let's create a new folder to put our class files in called classes in here.

03:01.530 --> 03:06.520
Will create a new file called databased up p p.

03:08.200 --> 03:11.280
And note that the file name starts with a capital letter

03:15.120 --> 03:19.020
in here will create a new class called database.

03:19.020 --> 03:22.930
And again note that the class name matches the file name.

03:23.580 --> 03:31.570
Let's add a method that will get the database connection when we use my Escuela.

03:31.770 --> 03:35.740
We need these data here in order to connect to the database.

03:35.760 --> 03:39.990
For now let's just copy that ease.

03:41.930 --> 03:44.190
And paste them in here.

03:44.600 --> 03:47.420
And later on we'll take these data out of here.

03:47.570 --> 03:48.920
So they're not hard coded

03:51.860 --> 03:54.490
to connect to a database using PDA.

03:54.650 --> 03:59.840
We create a pdl object passing in the connection parameters.

03:59.840 --> 04:01.780
The first parameter is the DSN.

04:01.780 --> 04:08.600
Our data source name which is a string that specifies the type of database to host the database name

04:08.600 --> 04:09.710
and so on.

04:09.980 --> 04:13.430
Then we add the user name and password.

04:14.420 --> 04:22.490
So the DSN string for our database will look like this for my esky Well armoury ADP which specify my

04:22.490 --> 04:23.660
Eskew L..

04:23.810 --> 04:32.120
Then the host followed by the database name and finally will also add the charset option which tells

04:32.120 --> 04:38.530
Pedia how to use the utf Eight character set with this database.

04:38.930 --> 04:48.500
Then we can create a new pdl object passing in the DSN the user name and the password we want to return

04:48.530 --> 04:50.280
this object from this method.

04:50.330 --> 04:58.270
So instead of assigning this object to a variable we'll just return it directly like that.

04:58.280 --> 05:02.150
Finally let's add a p p duck comments to the method

05:06.140 --> 05:08.150
and also to the class

05:11.600 --> 05:14.200
before we start using this new class.

05:14.240 --> 05:20.220
Let's protect the new classes folder in the same way we did with the includes folder with this hasty

05:20.240 --> 05:21.800
access file.

05:21.800 --> 05:23.700
So I'll just copy this file.

05:25.860 --> 05:28.140
And paste it in the new folder.
