WEBVTT

00:05.270 --> 00:09.650
Data in a relational database is stored in tables.

00:09.650 --> 00:13.140
Each table stirs data about a specific topic.

00:13.160 --> 00:24.030
For example users products or articles the table is made up of rolls and columns just like a spreadsheet.

00:24.320 --> 00:29.670
Each row of the table contains all the information about an individual item.

00:29.900 --> 00:35.300
For example a single user product or article.

00:37.200 --> 00:42.290
Roles are commonly referred to as records.

00:42.450 --> 00:45.590
Each row is divided into columns.

00:45.630 --> 00:50.970
Each column represents a particular piece of information about that item.

00:50.970 --> 00:57.180
For example a user's name a product price or an article or publication date.

00:57.240 --> 01:00.410
These are commonly referred to as fields.

01:03.640 --> 01:07.960
Each field is defined to hold a specific type of data.

01:08.230 --> 01:11.880
For example no text or a date.

01:12.210 --> 01:18.220
There is a full list of the possible data types here although in practice you'll probably only ever

01:18.220 --> 01:19.590
need a few of them.

01:19.750 --> 01:23.780
For example nos strings and dates.

01:26.370 --> 01:32.670
In addition to the fields that describe each rijkaard we need a way to uniquely identify each rijkaard

01:33.120 --> 01:35.430
so that we can later select it.

01:35.580 --> 01:36.370
Update it.

01:36.390 --> 01:41.030
I'll delete it although this could be one of the existing columns.

01:41.030 --> 01:43.140
If it contains something unique.

01:43.140 --> 01:45.390
For example an e-mail address.

01:45.390 --> 01:49.950
It's more common to have a specific Hi D column.

01:49.950 --> 01:57.630
This is usually a simple integer starting at 1 and increasing by one for each new record.

01:58.050 --> 02:06.060
Using this we can uniquely identify every row in the table will also use this later on when we start

02:06.060 --> 02:13.570
to relate one table to another which is where the relational part of a relational database comes in.

02:13.830 --> 02:19.290
The unique idea column is known as a primary key.

02:21.030 --> 02:24.870
Let's go ahead and add a table to our database.

02:24.870 --> 02:27.540
First we need to enter a name.

02:27.540 --> 02:29.690
You can call the table whatever you like.

02:29.720 --> 02:41.610
The convention is to use a singular noun to describe the tables contents for example user product or

02:41.670 --> 02:43.980
article.

02:44.790 --> 02:50.940
If you have more than one word separate the words with an underscore instead of a space for example

02:51.180 --> 02:59.200
customer invoice and it's best practice to use lower case letters with no accented characters.

02:59.820 --> 03:03.630
So let's create a table to store articles.

03:04.020 --> 03:06.330
Then we need to enter the number of columns.

03:06.340 --> 03:08.800
I'll accept the default of 4.

03:08.970 --> 03:12.740
You can always add remove columns later if you need to.

03:13.190 --> 03:14.950
Will click go.

03:19.260 --> 03:23.570
And we then have to define the tables columns first.

03:23.580 --> 03:26.140
Each column has to have a name.

03:26.520 --> 03:33.890
Again this should be lower case using underscores if you need to separate words with no axe and characters.

03:33.900 --> 03:39.480
Let's start with a primary key column which we'll call it.

03:40.680 --> 03:42.040
Then we choose the type.

03:42.120 --> 03:45.090
And here we have a list of all the possible types.

03:45.090 --> 03:49.450
If you hover over a type it tells you more about it.

03:49.500 --> 03:57.960
The idea field is going to be an integer next as this is the primary key in the index column.

03:57.960 --> 04:01.110
We need to specify primary.

04:04.030 --> 04:07.630
Will learn more about indexes later on.

04:07.630 --> 04:12.290
Finally far this field I am going to check the arto increment box.

04:15.290 --> 04:20.540
This will let us insert Ricardos without having to specify a value for this field.

04:20.690 --> 04:24.650
It'll be inserted automatically based on the existing values.

04:24.650 --> 04:30.050
In other regards we'll see an example of this in a moment.

04:31.940 --> 04:35.400
Next each article is going to have a title.

04:35.600 --> 04:38.540
So let's enter the title field.

04:39.420 --> 04:42.270
This is going to be a string.

04:43.620 --> 04:45.810
We have various options for this.

04:45.810 --> 04:49.750
Chas varchar text and so on.

04:50.070 --> 04:55.810
The best one to use for the title is varchar as it's going to be a relatively short string.

04:55.890 --> 05:02.450
And we don't want it padded with spaces which is what the char type would do.

05:02.460 --> 05:05.460
This also requires us to specify a length.

05:05.460 --> 05:09.070
So I'll put 128 characters.

05:09.660 --> 05:16.980
If we find that we need to store titles longer than this we can always adjust this later.

05:16.980 --> 05:20.060
Next our articles are going to have content.

05:23.860 --> 05:25.920
Which is going to be a string.

05:26.740 --> 05:28.840
But this time it could be very long.

05:28.840 --> 05:32.100
So will specify it as text.

05:35.750 --> 05:46.540
Finally Each article will have a date and time that it was published which will call published at.

05:48.680 --> 05:54.320
It's a common convention to give dates and time values in name in this format.

05:55.250 --> 06:03.510
This is going to be a date and time for which we have the date time type.

06:03.510 --> 06:08.010
Also on this field we're going to check the null check box.

06:08.030 --> 06:10.790
This means that this column can also be null.

06:10.880 --> 06:16.780
In other words not contain a value for other columns where this isn't checked.

06:16.850 --> 06:23.990
If you tried to insert a record with out a value in these fields you'd get an error checking this box

06:23.990 --> 06:27.380
here means that this field can be left empty.

06:27.380 --> 06:28.680
If you want.

06:29.120 --> 06:33.850
This would be for articles that haven't been published yet for example.

06:34.580 --> 06:36.510
And that's it to create the table.

06:36.590 --> 06:38.960
We go down and click save.

06:40.450 --> 06:41.800
And there it is.

06:45.160 --> 06:47.640
Now we can add some data to it.

06:47.860 --> 06:57.100
If we click on insert appear we're shown a farm where we can insert a couple of rows with fields for

06:57.100 --> 06:59.020
each of the columns.

06:59.050 --> 07:03.410
First is the idees column which we created as an integer.

07:04.660 --> 07:07.550
So the first rijkaard would be a 1.

07:08.260 --> 07:15.010
However when we created this field we checked the of increment box so this field will be filled in after

07:15.020 --> 07:18.090
magically So we don't need to.

07:18.100 --> 07:21.450
This is very common for numeric primary keys.

07:21.490 --> 07:27.260
It's much safer to let the database deal with assigning unique number to new records.

07:29.990 --> 07:41.290
Next we need a title which we'll put here and then some content.

07:44.480 --> 07:50.230
And further published at field will select a date and time with this button.

08:00.960 --> 08:08.870
Underneath will add another record with a value for the title.

08:12.580 --> 08:14.350
And some content.

08:19.200 --> 08:21.890
And we'll select a date and time.

08:33.360 --> 08:39.540
And then at the bottom we'll click go and those records are inserted.

08:39.570 --> 08:47.640
You can insert as many records as you like but here if we click browse there we can see the data in

08:47.640 --> 08:48.530
our table.

08:48.810 --> 08:53.880
And as you can see the field has been supplied after magically.
