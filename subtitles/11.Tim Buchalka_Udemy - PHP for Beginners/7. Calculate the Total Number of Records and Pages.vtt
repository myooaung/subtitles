WEBVTT

00:05.660 --> 00:12.230
In order to be able to not show a next link on the last page of records we need to know the total number

00:12.230 --> 00:14.090
of pages.

00:16.410 --> 00:25.080
If we have a total of 18 rijkaard for example then the number of pages will be this total divided by

00:25.080 --> 00:28.170
the number of records per page.

00:29.340 --> 00:35.420
Let's dump this value out to see what its value is.

00:38.180 --> 00:46.390
With four rijkaard per page and a total of 18 this value is four point five off four and a half pages.

00:49.690 --> 00:52.710
The page number is always an integer though.

00:52.960 --> 00:58.430
So let's round this value up to the nearest whole number using the sealing function.

01:02.520 --> 01:08.400
Now although this is still a float value it's been rounded up to five pages.

01:11.650 --> 01:15.340
So we can remove this far don't line.

01:15.520 --> 01:24.640
And if the page is less than the total number of pages we set the next property as before if not the

01:24.640 --> 01:27.770
next property will remain NULL.

01:28.480 --> 01:38.060
Then in the index page if the next property isn't NULL we'll display the link.

01:38.470 --> 01:43.270
Otherwise we'll just display the Word next.

01:47.900 --> 01:54.830
So now if we're on the penultimate page and we click next to get to the last page the next link is no

01:54.830 --> 01:56.110
longer there.

02:01.140 --> 02:02.310
Now this works.

02:02.340 --> 02:06.990
We can get rid of this hard coded value for the total number of records.

02:07.170 --> 02:10.470
First let's pass this in as an argument instead

02:13.470 --> 02:16.380
and we can remove the hard coded value here

02:19.230 --> 02:23.320
then in the index page we can pass the total in.

02:23.460 --> 02:26.430
When we create a new paginate object.

02:32.980 --> 02:36.110
We still don't want this to be hard coded though.

02:36.400 --> 02:40.260
We want to count the total number of records in the database.

02:40.840 --> 02:45.610
So let's add a method to the article class to do just that.

02:45.910 --> 02:48.540
We'll call the method get total.

02:51.690 --> 02:57.190
In esky well to count the number of records in a table we use the count function.

03:00.780 --> 03:05.830
We don't need a prepared statement for this so we can just use the query method.

03:08.400 --> 03:15.390
The results of this esky well will be a single column that contains the count of the number of articles

03:15.470 --> 03:16.920
cards.

03:20.290 --> 03:27.430
The query method returns a p the yayo statement object and we can call the fetch column method on this

03:27.700 --> 03:31.120
to get the contents of this single column.

03:33.340 --> 03:40.040
So let's call that method and return the value directly.

03:41.200 --> 03:49.090
Lastly let's add a p p doc comment to this method like that.

03:49.090 --> 03:58.640
Then in the index page we can replace this hard coded number with a call to the new method.

04:01.560 --> 04:08.670
So now on the last page of Ricardos there's automatically no next link based on the number of records

04:08.670 --> 04:10.120
in the database.
