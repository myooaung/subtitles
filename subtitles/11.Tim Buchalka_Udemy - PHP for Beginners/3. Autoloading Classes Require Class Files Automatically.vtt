WEBVTT

00:04.450 --> 00:12.610
It's good practice to define each class in a separate file as we've been doing before you can create

00:12.610 --> 00:14.420
an object of a class.

00:14.440 --> 00:21.410
You need to require the file where the class is defined as we're doing here in the new article script.

00:21.940 --> 00:28.470
However if you want to use lots of classes like this you can end up with lots of required statements.

00:29.020 --> 00:34.920
There's a better way to do this by loading these class files are to magically when they're needed.

00:35.470 --> 00:40.690
Let's look at an example in a new script called artle loading example

00:43.280 --> 00:43.890
up here.

00:43.920 --> 00:44.740
P

00:49.510 --> 00:50.090
in here.

00:50.140 --> 01:00.700
First let's require the article class file create a new article object and then dump out the contents

01:00.700 --> 01:05.050
of this variable so that we can see what it contains.

01:08.530 --> 01:16.120
When we run the code and view the results in the browser we get an object of this class printed out.

01:17.590 --> 01:20.110
If I remove the required line

01:23.680 --> 01:31.630
now in the browser we get an error saying the article class was not found as expected.

01:33.890 --> 01:41.570
When we use the new operator in P HP to create an object of a class p p checks to see if this class

01:41.570 --> 01:43.620
definition exists.

01:44.270 --> 01:47.500
In other words that the file has been loaded.

01:47.630 --> 01:50.790
If not we get the error that we just saw.

01:51.440 --> 01:59.660
However we can tell P P to try and load the class file automatically before the error occurs.

02:01.160 --> 02:05.350
We do this by registering an after load function with this.

02:05.420 --> 02:08.730
S P L after word register function here.

02:09.020 --> 02:15.200
With this we can register some code that will run when we try and create a class that hasn't been defined

02:15.260 --> 02:18.530
are loaded yet in our code.

02:20.000 --> 02:21.800
So at the top of our script.

02:21.890 --> 02:29.840
Let's call the S P L after load register function and the first argument to this function is the code

02:29.840 --> 02:33.000
that will run when a class isn't found.

02:33.110 --> 02:41.380
We can define a function directly in here like this and this function takes the name of the class were

02:41.390 --> 02:45.610
trying to create as an argument.

02:46.100 --> 02:52.140
For now let's just print out the value of this argument so we can see what happens.

02:55.130 --> 02:58.520
When we look at this in the browser we still get the error.

02:58.790 --> 03:03.400
But the name of the class we're trying to create has been printed out.

03:06.610 --> 03:10.530
So we can use this to require the class file.

03:10.540 --> 03:17.950
This is why we named the class files with the same name as the class itself.

03:18.130 --> 03:20.440
So instead of echoing out the class name

03:23.410 --> 03:29.890
we can require the class file by including the name of the class in the file name we pass to the require

03:29.890 --> 03:31.770
a statement like this.

03:37.820 --> 03:44.450
So now when we run the code the error has gone and the class has been required after Mattingly by the

03:44.450 --> 03:45.490
artle loader.
