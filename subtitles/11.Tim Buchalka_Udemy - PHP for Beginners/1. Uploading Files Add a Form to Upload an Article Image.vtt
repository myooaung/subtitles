WEBVTT

00:05.750 --> 00:10.550
At the moment the articles in our CNS are just text.

00:10.550 --> 00:13.970
Let's add an optional image to each article.

00:16.540 --> 00:24.250
Now we could add this as a column to the articles table in the database using the blob of binary large

00:24.340 --> 00:26.320
object data types.

00:26.800 --> 00:34.240
However relational databases aren't really meant to store binary data like this in the database itself.

00:34.240 --> 00:38.880
It's better to store files separately in the file system.

00:41.640 --> 00:49.500
Let's start by making a copy of the edit article script in the admin folder and call and get edits article

00:49.560 --> 00:54.030
image doppie HP in here.

00:54.060 --> 00:56.680
We still want to do all this at the top.

00:56.850 --> 00:58.470
Restricting access.

00:58.650 --> 01:07.400
Getting the article from the idees in the query string and so on for now will remove the code that processes

01:07.410 --> 01:17.740
the farm once it's submitted will change the page title and remove the edit article form.

01:17.790 --> 01:19.800
Include.

01:21.200 --> 01:26.510
Then in the admin article page let's add a link to this new page.

01:26.690 --> 01:35.860
After the existing edit and delete links passing in the idea of the current article in the query string.

01:38.930 --> 01:45.900
If we view an article in the admin area there's the link and there's the new page.

01:49.240 --> 01:55.500
Now we can add a farm to upload a file to upload files.

01:55.540 --> 02:03.910
The farm needs to use the post method and also have the bank type our encoding type attribute set to

02:03.930 --> 02:06.780
multipart farm data.

02:07.450 --> 02:17.140
Next let's add an input control to upload the file to insert an input control that allows us to select

02:17.140 --> 02:18.910
a file for uploading.

02:18.970 --> 02:23.740
We use an input element with the type set to file.

02:25.290 --> 02:32.210
Let's add a file input and also a label and a containing div element.

02:33.930 --> 02:40.450
I set the name and the idae to file 2 but these can be anything you like.

02:40.470 --> 02:48.030
Remember the name is used to access the data on the server and the idae is used to associate the label

02:48.360 --> 02:50.820
with the farm control.

02:51.100 --> 02:54.900
That's also add a button to submit the farm.

02:59.130 --> 03:06.770
The file input control looks like this with a button that lets you browse the files on your computer.

03:06.810 --> 03:12.590
This will look slightly different depending on your operating system and the browser you are using.

03:12.990 --> 03:20.150
You can select a single file which is what will be uploaded when the form is submitted.

03:23.990 --> 03:26.900
To select more than one file for uploading.

03:26.900 --> 03:33.920
You can either specify the multiple attribute and the farm are simply add more input controls to the

03:33.920 --> 03:35.890
farm.

03:35.930 --> 03:40.400
We only want to upload one file so we'll leave it as it is.

03:43.840 --> 03:50.530
When the form is submitted it will be submitted to itself and it's using the post method so we can process

03:50.530 --> 03:52.510
the farm submission here.

03:55.310 --> 03:55.720
Far.

03:55.750 --> 04:00.480
Other farm controls like text in Pooks text areas and so on.

04:00.670 --> 04:10.090
We access the posted values in the post array data from input file controls however are available in

04:10.090 --> 04:11.790
the files array.

04:15.730 --> 04:16.480
For now.

04:16.510 --> 04:23.720
When the farm is submitted let's just dump out the entire contents of the array like that.

04:27.590 --> 04:35.780
So now if I select a file and submit the form the file is uploaded.

04:35.780 --> 04:38.880
And this is the data in the files array.

04:41.090 --> 04:47.000
There's one file with an index that matches the value of the name attribute on the farm.

04:47.000 --> 04:55.500
Control containing the name of the file its type where it's been loaded to and so on.
