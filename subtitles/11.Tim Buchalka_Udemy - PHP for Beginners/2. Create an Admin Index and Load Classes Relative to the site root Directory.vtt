WEBVTT

00:05.520 --> 00:10.510
Access to the new article page is restricted to logged in users only.

00:10.650 --> 00:13.130
We don't even display the link to the page.

00:13.200 --> 00:22.380
If we're not logged in links to edit and delete are shown however and we haven't restricted access to

00:22.380 --> 00:25.990
these just yet.

00:27.270 --> 00:34.740
Before we do that let's look at how our site is structured at the moment all the pages are in the same

00:34.740 --> 00:39.890
folder in the root directory of the site for most visitors.

00:39.900 --> 00:44.870
We just want the index page and the individual article page.

00:45.360 --> 00:53.070
If we log in we want to be able to access the other pages to edit create and delete articles.

00:53.070 --> 00:58.510
So let's create an admin section for those users.

00:58.980 --> 01:06.110
First let's create a folder in the root kalid admin.

01:08.370 --> 01:14.850
We need an index page in here so let's copy the index page from the root.

01:26.080 --> 01:27.690
Without changing anything.

01:27.730 --> 01:34.270
Let's see what happens when we go to the admin folder in a browser.

01:35.470 --> 01:43.960
We get an error saying the init dot p s p script wasn't found.

01:43.960 --> 01:50.390
This is because the path we're passing to the require line here is a relative path.

01:50.410 --> 01:55.030
In other words it's relative to the current file.

01:55.030 --> 02:01.580
This works for pages in the root as the includes folder is at the same level.

02:01.930 --> 02:10.110
However we can't do the same indice script as it's in the admin subdirectory to fix it.

02:10.150 --> 02:16.450
We can add two dots to the start of the path like this.

02:16.450 --> 02:24.380
Two dots in a path like this mean go to the parent folder of the one where this script is.

02:24.460 --> 02:33.550
So now this require line will go up to the root directory and then into the includes folder to the init

02:33.670 --> 02:35.110
duck p s p file

02:39.610 --> 02:41.410
before we try this.

02:41.440 --> 02:43.990
Let's change the next line to.

02:44.980 --> 02:52.180
Which is also loading a file in the includes folder and also where we're loading the hates to email

02:52.180 --> 02:52.690
header

02:55.870 --> 02:58.190
and the footer.

03:02.980 --> 03:09.580
So now in the browser when we look at the admin folder the error about not finding the file in the includes

03:09.580 --> 03:17.170
folder has gone which means it's loading the files correctly but now we're presented with another error.

03:17.170 --> 03:22.700
This time the script is trying to load the classes databased up p p file.

03:25.890 --> 03:31.400
Classes are required in the artle loader which is in the init script here.

03:31.980 --> 03:33.410
We've got the same problem.

03:33.570 --> 03:40.950
It's trying to load a file relative to the admin folder but the classes folder isn't in the admin folder.

03:41.160 --> 03:43.390
It's one level up.

03:43.500 --> 03:50.330
Let's try adding the two dots to require in the article loader like that.

03:53.590 --> 03:54.660
And in the browser.

03:54.690 --> 03:56.290
This fixes it.

03:56.310 --> 04:02.250
We can see the index page in the admin folder with no errors.

04:02.250 --> 04:06.690
However if I go back to the index folder in the root.

04:06.840 --> 04:13.650
Now this is broken as it's trying to load the database class file from the parent directory of where

04:13.650 --> 04:20.320
this file is instead of at the same level which it did before we changed the autoloader.

04:24.360 --> 04:26.620
Remember when you include efile.

04:26.820 --> 04:32.080
It says there that file was part of the script that was including it.

04:32.430 --> 04:39.600
Instead we want to always require class files relative to where this init script is in the includes

04:39.600 --> 04:40.990
folder.

04:45.290 --> 04:53.740
To do this first P HP has a predefined constants that we can use this D.

04:53.760 --> 04:54.060
I.

04:54.090 --> 05:01.260
Our constants contains the directory including the full path of a script file.

05:01.850 --> 05:10.080
Then the D A our name our dear name function will return the part of the parent folder of a given path.

05:14.200 --> 05:24.880
For example if this is the full path of the init doppie HP file the d r constant will contain this the

05:24.880 --> 05:26.890
directory where the files

05:29.830 --> 05:37.240
if we pass this path to the denholm function then this will return the parent directory of that directory

05:37.900 --> 05:41.630
which in our case is the root directory of our site.

05:47.330 --> 05:54.030
The classis folder is at the same level as the includes folder where this in its script is.

05:54.500 --> 06:01.180
So to get to the classes folder we need to get the parent folder of where this script is which we get

06:01.190 --> 06:02.210
by calling the cold.

06:02.210 --> 06:11.990
We just SA which returns the parent folder of this script and inserting it before the rest of the path

06:12.320 --> 06:13.680
to the class file.

06:18.180 --> 06:24.150
In the browser the original index page is now fixed and if we go to the admin index

06:26.880 --> 06:29.610
this still works too.

06:29.700 --> 06:34.300
We don't want the admin index to be the same as the main site index though.

06:34.560 --> 06:38.440
We want to lay it out differently with different information.

06:38.460 --> 06:43.720
So first let's learn how to display tables of data in h t L..
