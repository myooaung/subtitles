WEBVTT

00:05.500 --> 00:12.100
The farm for editing an article now includes available categories and any categories that the article

00:12.130 --> 00:17.320
is already related to and are shown already selected in the farm.

00:17.330 --> 00:24.060
Now we need to handle these additional fields when the farm is submitted and save them to the database.

00:27.300 --> 00:32.740
When the form is submitted the article properties are set from the farm inputs.

00:32.910 --> 00:35.800
The title the content and so on.

00:36.300 --> 00:44.860
Let's add the category I.D. to this in the form the category check boxes are named category.

00:45.000 --> 00:46.850
And this is an array.

00:48.190 --> 00:50.530
Let's get these values in the same way.

00:50.680 --> 00:52.930
We're getting the other inputs.

00:54.310 --> 01:01.880
Then dump this value out and exert the script so we can see what's coming from the farm.

01:05.420 --> 01:12.980
If I select some categories and submit the form we get an array containing the I.D. of the categories

01:13.010 --> 01:14.020
I selected.

01:15.630 --> 01:20.130
If I don't select any However we get an error.

01:22.420 --> 01:28.050
This is because on selected check boxes aren't included in the posted data.

01:28.270 --> 01:34.390
When a form is submitted so this value doesn't exist in the post array.

01:35.360 --> 01:36.350
To fix this.

01:36.380 --> 01:38.860
We can use the null coalesce operator.

01:38.870 --> 01:40.120
We saw earlier.

01:41.600 --> 01:44.100
To set this to an empty array.

01:44.120 --> 01:47.680
If this element doesn't exist in the post array.

01:51.800 --> 01:59.380
Now if I submit the farm without selecting any categories there's no error and we get an empty array.

02:01.960 --> 02:08.920
Putting these selected categories in this array when the farm is submitted will also correctly redisplay

02:08.920 --> 02:10.980
the selected categories in the farm.

02:11.110 --> 02:19.390
If an error occurs and the farm is re displayed before we continue let's delete these two lines.

02:20.950 --> 02:25.980
Next the article Ricardos updated by calling the update method.

02:29.410 --> 02:34.850
Instead of updating the categories in here let's add a new method to do that.

02:40.100 --> 02:41.570
And will call it set.

02:41.570 --> 02:48.760
Categories will pass in the database connection and an array of category I.D. as parameters.

02:50.240 --> 02:58.700
The array of category I.D. could be empty so will check for that which we can do like this as an empty

02:58.700 --> 03:02.630
array is the boolean equivalent of false.

03:02.630 --> 03:06.780
Then we need to insert Ricardos into the join table.

03:09.140 --> 03:15.620
Will use this esky well which has place holders for the article idea and the category idae.

03:16.840 --> 03:23.440
We've got the article either 0 as this is a method We'll be calling on an article object.

03:23.440 --> 03:30.220
So instead of binding of value to this place holder we can simply insert the idea of the current article

03:30.250 --> 03:31.670
object instead.

03:34.610 --> 03:40.490
We do need to bind the category and ideas using place holders though as these data are coming from a

03:40.490 --> 03:41.480
farm.

03:42.650 --> 03:52.070
Next let's prepare the statement then as we have an array of categories I.D. will add a far each loop

03:52.670 --> 03:54.640
to process each one.

03:57.240 --> 04:05.490
Inside the loop will bind the value of each idae to the category I.D. place holder and then execute

04:05.490 --> 04:09.330
the statement with a prepared statement.

04:09.330 --> 04:15.660
You only need to prepare it once then you can execute it multiple times with different values for the

04:15.660 --> 04:16.840
bound parameters.

04:19.010 --> 04:23.500
Let's try calling this method after the article has been updated.

04:25.230 --> 04:28.940
Passing in the category I.D. from the farm.

04:33.240 --> 04:39.030
This is the edit article farm for the article with I.D. of 12.

04:39.030 --> 04:42.330
This currently has no related categories.

04:44.300 --> 04:51.320
Which means that there are no red cards in the article category table where the article E is equal to

04:51.320 --> 04:52.080
12.

04:55.060 --> 05:00.010
If I select a couple of categories and submit the farm.

05:07.070 --> 05:13.380
New red cards have been inserted into the table file this article and that was categories.

05:19.370 --> 05:26.870
If we edit the article again those categories are preselected in the form as expected.

05:26.870 --> 05:29.290
Let's try adding another category.

05:31.270 --> 05:38.370
This time when I submit the farm we get an error saying we have a duplicate primary key value.

05:43.520 --> 05:50.240
This is because the primary key on this table is a unique index on the article I.D. and the category

05:50.240 --> 05:51.350
Heidi.

05:51.770 --> 05:58.490
So there can be only one rijkaard containing a specific article either a and a specific category i.e.

05:58.670 --> 06:00.470
in this table.

06:00.470 --> 06:04.080
If we try to insert a duplicate rijkaard we get the error.

06:04.100 --> 06:05.290
We just saw.

06:08.700 --> 06:15.200
This error message has an associated error code in this case 23 thousand.

06:17.010 --> 06:20.240
This corresponds to a duplicate key error.

06:23.940 --> 06:30.930
So one way to fix this would be to catch the Pedia exception that's thrown and check for this error

06:30.930 --> 06:32.050
code.

06:32.160 --> 06:38.010
If this error code occurs we would just ignore it and try and insert the next rijkaard.

06:41.070 --> 06:48.780
An alternative way to fix this would be to use the insert ignore statement by adding the ignore keyword

06:48.900 --> 06:50.610
to an insert statement.

06:50.610 --> 06:55.020
Errors are ignored and the inserts can continue.

06:55.020 --> 07:02.100
You have to be careful with this as all errors are ignored not just duplicate key ones but with a simple

07:02.130 --> 07:07.600
join table like this other insert errors are unlikely so it's safe to use.

07:07.650 --> 07:08.750
In this case.

07:11.970 --> 07:17.600
So let's add the ignore key word to the insert statement in the set categories method.

07:22.770 --> 07:28.860
Now if we add a category and submit the farm no error occurs.

07:31.000 --> 07:36.690
And in the database a new record has been added alongside the existing ones.
