WEBVTT

00:05.210 --> 00:12.740
In addition to comments in h.t. email we can also insert comments in our pitch P cold.

00:14.290 --> 00:18.400
We have two ways to insert comments in P HP.

00:18.430 --> 00:22.660
The first is a one line comment using two slashes.

00:24.190 --> 00:28.840
Everything from the two slashes to the end of the line is a comment.

00:29.110 --> 00:33.080
So you can use it to add a comment on its own line like this.

00:33.070 --> 00:37.580
Or add a comment to an existing line like this.

00:37.930 --> 00:45.990
Again most editors will help you to see what's a comment by colouring it differently.

00:46.580 --> 00:52.080
Unlike X term l p s p comments and not sent to the browser.

00:52.090 --> 01:00.310
This is because they're part of the p h p code and as we learnt earlier all p s p code is executed before

01:00.370 --> 01:04.360
the results are sent to the browser.

01:04.360 --> 01:10.570
So you don't need to worry about any comments in your pitch peacoat being visible if the user views

01:10.570 --> 01:12.610
the source in the browser.

01:13.870 --> 01:23.020
The second way to insert comments is to use a slash and an asterisk to start a comment and an asterisk

01:23.050 --> 01:26.860
and the slash to end a comment.

01:26.860 --> 01:32.910
The difference with this style of comments is that they can span more than one line.

01:34.990 --> 01:35.840
Like this.

01:38.060 --> 01:44.720
Now while it's a good idea to add comments to your code it's only necessary if it's not obvious what

01:44.720 --> 01:46.980
the cold is already doing.

01:47.090 --> 01:55.740
For example these comments I've added aren't needed a Tal as it's clear from the code what's happening.

01:57.440 --> 02:03.800
That's why it's a good idea to give you variables meaningful names.

02:03.800 --> 02:05.580
We'll see some examples later on.

02:05.580 --> 02:10.050
Of how comments and necessary to make our code more readable.

02:12.600 --> 02:19.080
As far lay out just like in eight to AML you should use white space wherever possible to help improve

02:19.320 --> 02:20.760
readability.

02:21.150 --> 02:26.460
For example on this line we're creating a variable that contains an array.

02:26.460 --> 02:33.930
We could do it like this but without the spaces that is more difficult to read.

02:34.050 --> 02:38.460
It looks much clearer like this.

02:38.460 --> 02:44.880
You should put spaces tabs and newlines in your code wherever you think it makes the code easier to

02:44.880 --> 02:46.480
understand.

02:46.590 --> 02:51.720
It doesn't make any difference how the code executes but it does make a difference when you want to

02:51.720 --> 02:55.060
try and understand the code later on.

02:58.320 --> 03:06.760
Unlike Gates to mail P HP hasson recommended coding standards for how PE HP code should be written.

03:06.830 --> 03:12.340
The lowest level kalid psa one describes some basic coding standards.

03:12.500 --> 03:19.970
For example avoiding the use of the schadt p-h Pete opening tags that we saw earlier and some naming

03:19.970 --> 03:29.670
standards far various elements of p p which will see later the second level called p s out to extend

03:29.720 --> 03:38.870
this with recommendations such as how many spaces to use for indenting code opening braces for control

03:38.870 --> 03:41.870
structures and so on.

03:42.270 --> 03:47.210
There are further levels but complying with PSA 2 is the most common.

03:47.660 --> 03:53.600
Following these guidelines will make your code easier to read and maintain by other programmers and

03:53.600 --> 04:01.700
by being used to these standards you'll be able to read other people's code more easily to your no doubt

04:01.700 --> 04:04.470
be using someone else's cold in the future.

04:04.610 --> 04:11.020
So if you get used to writing clean easy to read code now it will save you a lot of time.

04:14.510 --> 04:21.770
As with s amount there are online tools like this one that will fix your code for you so it conforms

04:21.770 --> 04:25.520
to p s add to standards.

04:25.530 --> 04:28.370
There's also this p p coding standards.

04:28.370 --> 04:35.630
Fix a program that you can download and run on your code and it will fix it so that it conforms to the

04:35.630 --> 04:38.310
PSA to coding standards.

04:40.190 --> 04:46.020
There are several different ways to install it but the easiest is to download the file.

04:54.970 --> 05:00.710
Then on the command line of terminal you can run the program.

05:01.270 --> 05:10.420
Passing it the P 8 p script file name and when you run it it will refilm at your code so it complies

05:10.420 --> 05:12.780
with the piercer to standard.

05:16.990 --> 05:23.920
However if you're familiar with the coding standards you can use them as you write your code instead

05:23.920 --> 05:29.660
of having to run this afterwards although it doesn't hurt to run it if you like.

05:30.310 --> 05:35.050
While the cold shown on this course complies with the PSAT coding standard.

05:35.290 --> 05:38.270
So you shouldn't have to worry about running this program on it.
