WEBVTT

00:05.190 --> 00:12.520
Now that we have our database structured and containing data we can start using it from HP.

00:12.600 --> 00:21.210
First we have to connect to it a database server like my esky Well Maria idb runs separately to the

00:21.210 --> 00:26.770
web server it can run alongside the web server on the same computer.

00:26.910 --> 00:35.500
Like what you get on your local computer when you install that stamp it can run on a separate computer.

00:35.520 --> 00:40.680
This is quite common when you come to copy your website to a production server.

00:40.680 --> 00:45.500
The web server will be on a different computer to the database server.

00:47.800 --> 00:55.630
To connect to a database from HP you need to know for pieces of information the address of the database

00:55.630 --> 00:57.870
server known as the host.

00:57.880 --> 01:03.380
This will normally be a local host on your local computer.

01:03.790 --> 01:08.700
The name of the database the username and the password.

01:09.130 --> 01:14.750
We created all these when we created the database in P P might add in earlier.

01:18.730 --> 01:26.740
To connect to a my Eskew well on a read dbe database in P P to begin with will use the my Escuela connect

01:26.920 --> 01:28.780
function.

01:28.780 --> 01:36.730
This is one of the many functions provided by my esky Well improved extension which is part of HP by

01:36.730 --> 01:37.960
default.

01:38.470 --> 01:45.280
Even though this explicitly mentions my Eskew L. It works seamlessly with Myriad's B.

01:48.630 --> 01:56.970
We'll start by creating four variables with the necessary connection data the host which in our case

01:56.970 --> 02:03.090
is local host as it's the database server running locally.

02:03.090 --> 02:11.280
The database name which I called See amass the user which we created when we created the database.

02:11.310 --> 02:22.200
I called it C.M. s w w w and the password which we generated after Mattingly when we created the user.

02:22.200 --> 02:23.230
Then we call the.

02:23.250 --> 02:31.530
May I ask you will I connect method passing in these data which connects to the database and returns

02:31.530 --> 02:37.600
a variable which represents the connection to the database server.

02:40.500 --> 02:42.990
To check the connection has succeeded.

02:43.020 --> 02:48.660
We can call this Kinect error function that returns a string containing an error message.

02:48.660 --> 02:53.560
If it fails otherwise it returns NULL.

02:53.580 --> 02:59.940
Now you might notice the documentation refers to object oriented and procedural style.

02:59.940 --> 03:05.730
For now I will stick to the procedural style as that's what we've been using so far.

03:05.730 --> 03:10.390
Later on in the course we'll see how to use Object Oriented code.

03:13.820 --> 03:17.740
We can call this in if statements like this.

03:18.560 --> 03:25.960
We can do this because a none empty string will be cast to true will be converted to the built in value

03:25.970 --> 03:32.610
true and null will be cast are converted to the boolean value false.

03:32.870 --> 03:38.050
So if there is a connection error the code will go into this code work.

03:38.060 --> 03:45.110
In here we can print out the connection error which will give us more details about why the connection

03:45.110 --> 03:53.150
failed and then will call exit which stops the script right where it is.

03:53.150 --> 04:01.160
If the connection fails we dont want to continue executing the script outside the f block.

04:01.160 --> 04:08.850
If at this point we've connected successfully let's print out a message to that effect like that.

04:14.070 --> 04:20.780
When we look at this in a browser we get the message saying we've connected successfully.

04:20.940 --> 04:25.640
This is because we've got all the connection details correct.

04:26.010 --> 04:28.410
If we change one so that it's wrong

04:33.750 --> 04:40.280
and then go back to the browser we get a connection error message like this.

04:40.560 --> 04:41.740
You get this.

04:41.910 --> 04:45.510
Then you need to check and correct your connection data.

04:46.080 --> 04:48.910
This is a useful script on its form.

04:48.990 --> 04:53.380
If you ever need to check that you have the correct database connection data.
