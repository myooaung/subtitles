WEBVTT

00:05.470 --> 00:12.780
The response to an AJAX request can be anything at all it to email text even an image.

00:12.790 --> 00:18.350
It's up to the javascript code that handles the request to deal with whatever is sent back.

00:20.900 --> 00:28.070
With the example we just saw we returned a simple string of text which we inserted directly into the

00:28.160 --> 00:32.190
h.t. AML when it was returned to the Ajax request.

00:34.250 --> 00:39.980
But what if we want to return something more complex than a single value like this.

00:43.800 --> 00:47.450
Let's look at another example in this script.

00:47.490 --> 00:54.360
We've got an associative array of values that might represent a user with elements like an I.D. name

00:54.750 --> 00:56.960
email address and so on.

00:57.340 --> 01:03.940
While we're doing here at the moment is using the VAR dump to print out the entire array.

01:06.140 --> 01:11.090
If we view this in the browser we see the contents of the array.

01:14.480 --> 01:21.020
We want to display this data on this page where will use a d l element to display it.

01:23.010 --> 01:29.890
The d l r description list element is commonly used to display a list of key value pairs.

01:30.140 --> 01:32.840
Just like the user data we've got

01:35.600 --> 01:42.950
as in the previous example we've got a button aliment and we using J query to handle the button click

01:43.790 --> 01:45.270
when the button is correct.

01:45.380 --> 01:49.750
The script sends an AJAX request to the get data page.

01:50.000 --> 01:54.950
And for now we'll just display this data in an alert dialogue.

01:58.360 --> 02:04.120
If I click the button we see the data coming back from the script.

02:04.390 --> 02:07.680
We can't really do anything with the data like this though.

02:07.840 --> 02:15.820
As javascript doesn't understand the output from the P HP var dump function all it sees is a string.

02:19.470 --> 02:26.400
The solution is to use a standard format for into changing data when using Ajax.

02:26.400 --> 02:28.700
The format to use is Jason.

02:28.790 --> 02:31.840
Are javascript object notation.

02:32.310 --> 02:37.740
Jason is basically a way to format data fast sending from one place to another.

02:37.980 --> 02:41.660
For example from a web server to a web browser.

02:42.180 --> 02:48.360
Although it's based on Javascript it is language independent so we can use it in different languages

02:48.390 --> 02:51.100
easily in P H.

02:51.100 --> 02:59.040
P we have functions for converting data into the adjacent format and converting it back again and in

02:59.040 --> 02:59.980
javascript.

03:00.090 --> 03:01.930
We have similar functions.

03:05.860 --> 03:14.110
So instead of using var dump to print this data out will echo out the data encoded as Jason instead.

03:16.820 --> 03:19.870
In the browser the Jason data looks like this.

03:20.030 --> 03:24.310
Basically just a simple array of key value pairs.

03:27.730 --> 03:35.320
In the Ajax request when we get this data which is now Jason first we need to use the Jason up pass

03:35.320 --> 03:38.270
function to decode the Jason data.

03:39.490 --> 03:41.310
Then let's show this data.

03:41.320 --> 03:43.320
In the alert box for now.

03:47.640 --> 03:52.830
When we make the Ajax request what's shown in the dialogue is an object.

03:56.250 --> 03:59.920
When the Jason is decoded an object is created.

03:59.940 --> 04:07.250
And in this case it'll be a simple object with properties for each of the original array elements.

04:08.990 --> 04:12.820
So for example let's display the name property.

04:17.830 --> 04:24.160
And now when I click the button we get the name attribute from the original data.

04:27.840 --> 04:31.050
So to display these attributes in the astm l..

04:31.110 --> 04:37.410
First let's add I.D. to the description definition elements inside the description list.

04:39.190 --> 04:47.950
Then instead of the alert we can get the name element and use the astm malfunction to insert the name

04:47.950 --> 04:50.680
value directly into the astm l..

04:51.940 --> 04:56.360
We can repeat this from the email and date of birth values.

05:00.930 --> 05:07.570
So now when I click the button the attributes are inserted into each d d element.

05:11.550 --> 05:17.790
So whenever you're using AJAX to get some data from the server if that data is anything other than a

05:17.790 --> 05:26.560
simple value the best way to send that data is encoding it as Jason and then decoding that Jason.

05:26.700 --> 05:28.380
When the data are received.
