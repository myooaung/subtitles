WEBVTT

00:05.540 --> 00:10.200
The table element in x t email is used to create tabular data.

00:10.430 --> 00:15.570
In other words data in rolls and columns like a spreadsheet.

00:16.610 --> 00:18.550
Let's start with an example.

00:18.680 --> 00:26.090
Beginning with this basic H Tim L which contains a head section and a body section including a title

00:27.590 --> 00:35.290
to create a table we insert a table tag and then we go out of rows to the table.

00:35.480 --> 00:44.930
Each row is represented by the t r r. table row element and then inside each row we add columns.

00:45.080 --> 00:48.630
Each column is represented by the t d r.

00:48.650 --> 00:51.110
Table data element.

00:51.380 --> 00:56.330
For example here we have one row and two columns.

00:59.150 --> 01:07.160
In the browser it looks like this by default tables are shown with no borders so it can be a bit difficult

01:07.160 --> 01:09.130
to see what's going on.

01:09.830 --> 01:16.970
Let's add some styles to the top of the page in the head section which will colour in the borders of

01:16.970 --> 01:24.680
the various table elements will go into styling using C Ss like this later on in the course.

01:26.610 --> 01:33.530
Now in the browser we can see the table more clearly with one row and two columns.

01:34.320 --> 01:36.030
Just like in a spreadsheet.

01:36.060 --> 01:41.770
The contents of each data element is often referred to as a table cell.

01:41.790 --> 01:49.260
Let's change the content of the first two cells to a more meaningful example then will add some more

01:49.260 --> 01:51.560
roles below the first one with some.

01:51.560 --> 01:52.190
Example.

01:52.190 --> 01:53.540
Content.

01:57.560 --> 02:00.470
And in the browser the table looks like this.

02:00.530 --> 02:05.240
A table with two columns and five rows.

02:07.040 --> 02:13.820
When you have several rows in a table like this it's important to include the same number of t d elements

02:14.060 --> 02:15.890
for each row.

02:16.640 --> 02:22.120
For example if I remove the second column from the first row.

02:25.050 --> 02:29.250
In the browser there's a gap where the cell should be.

02:32.060 --> 02:38.820
You can make cells span more than one column though by using the colspan attribute.

02:38.840 --> 02:47.150
If I add the attribute to this t d element with a value of two then this cell will span two columns

02:48.620 --> 02:51.790
which in the browser looks like this.

02:55.440 --> 03:01.770
In addition to making a cell spanned more than one column like this you can also make a cell span more

03:01.770 --> 03:03.620
than one row.

03:03.870 --> 03:07.460
For example if I remove this cell.

03:09.820 --> 03:16.010
In the browser the cell after it moves to the left and leaves a gap.

03:17.920 --> 03:24.050
But if I add the role span attribute to the first column of the previous row.

03:24.820 --> 03:31.910
Now that cell spans two roles which in the browser looks like this.

03:36.800 --> 03:41.020
You can have as many rolls and columns as you like in a table.

03:41.060 --> 03:47.960
But be careful when using Carl span and rebel span for anything other than small spans like this as

03:47.960 --> 03:54.260
it can be easy to create a complicated table layout that's difficult to maintain.

03:56.300 --> 04:02.720
The first row are the first column of a table are commonly headers that contain titles that describe

04:02.780 --> 04:04.730
what's in that column.

04:04.970 --> 04:11.800
So instead of using the T D element for these we use the t h r table header element.

04:12.140 --> 04:19.090
So let's replace the contents of this row with two t h elements T H.

04:19.100 --> 04:28.640
Elements are used in the same way as t d elements but in the browser by default their style styled differently.

04:28.640 --> 04:31.510
For example here they're bold.

04:33.740 --> 04:42.470
It's also more semantic to use table header elements to mark-up which cells other headers from a column.

04:43.040 --> 04:49.400
Speaking of semantically marking up a table we can optionally add elements to a table to mark up the

04:49.400 --> 04:53.980
header body and footer sections of a table in a similar way.

04:53.990 --> 05:00.740
We use the header and footer elements in the main body of the ace to email page to mark up the table

05:00.770 --> 05:01.550
header.

05:01.610 --> 05:09.700
We used the T head element and capsulated the roles that farm the table header.

05:10.160 --> 05:15.800
The body of the table is marked up in a similar way with the T body element.

05:16.880 --> 05:25.620
And finally the T foot element is used to mark up the footer part of the table in here.

05:25.640 --> 05:33.590
Let's add a row with a t h and a t d element that represent the summary of the data in the body of the

05:33.590 --> 05:34.300
table.

05:37.980 --> 05:42.170
In the browser the T head t body and T F What elements.

05:42.180 --> 05:43.090
By default.

05:43.110 --> 05:52.250
Don't change how the table is styled but marking up the table with these elements is useful for accessibility.

05:52.380 --> 05:56.020
When printing the table and when styling it.

05:58.860 --> 06:05.040
The table element has many attributes that can be used to change how the table is displayed from the

06:05.040 --> 06:10.110
width so the background colour border attributes and so on.

06:10.110 --> 06:13.340
However using these attributes is no longer recommended.

06:13.500 --> 06:20.970
And many of them have been deprecated in the latest version of AITs to email instead to use styling

06:20.970 --> 06:21.930
on a table.

06:21.960 --> 06:26.730
We use stylesheets which will look at later on in the course.

06:29.960 --> 06:37.190
And one more thing I should mention is that tables are designed to display tabular data and nothing

06:37.190 --> 06:38.440
else.

06:38.450 --> 06:45.560
Many years ago tables were used for page layout but now the recommended way to lay out a page is using

06:45.560 --> 06:49.420
the h.t. Amount elements we've already been using.
