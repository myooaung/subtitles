WEBVTT

00:05.590 --> 00:12.550
We can now specify the page in the query string and if we leave the page out it defaults to PAGE ONE

00:13.690 --> 00:15.820
if we leave the variable in however.

00:15.970 --> 00:20.460
But passing a non numeric value we get an error.

00:21.250 --> 00:27.610
It's not a good idea to let errors happen this easily especially as it will be very easy for someone

00:27.610 --> 00:30.790
to change the query string and cast the error.

00:30.790 --> 00:35.420
So let's add some validation to the page number in the query string.

00:38.420 --> 00:45.950
The filter var function can be used to make show a variable contains a certain value.

00:45.950 --> 00:53.350
There are several filters available but the one we want for the page number is the one for integers.

00:56.430 --> 01:02.760
In the paginated class before we use the page number coming from the query string to calculate the offset

01:03.090 --> 01:10.680
will call the filter function passing in the page variable and the constant that will validate it as

01:10.680 --> 01:18.980
an integer and then assigning the result back into the page variable so that we can see what's happening.

01:19.170 --> 01:26.460
Let's dump out the value of the variable before and after the filter is applied.

01:29.020 --> 01:37.830
With a valid page number the filter var function simply converts the string into an integer as we can

01:37.830 --> 01:43.170
see from the before and after values of the page variable.

01:43.200 --> 01:45.770
If I changed this to something that isn't a number.

01:45.810 --> 01:55.200
However we get an error we can see that the filter var function has returned false as this isn't an

01:55.200 --> 01:56.700
integer.

01:56.850 --> 02:00.370
This isn't much use though as we still have the error.

02:02.860 --> 02:10.030
The filter var function has an optional third argument which is an array of options for the Chosen type

02:10.030 --> 02:13.920
of filter for the integer filter.

02:13.930 --> 02:20.860
We can specify a default value a minimum and a maximum.

02:20.870 --> 02:25.570
Let's add the default option to the filter var function call.

02:25.810 --> 02:28.290
This is the value the function will return.

02:28.300 --> 02:31.590
If the value passed two it isn't an integer.

02:34.890 --> 02:43.700
Now in the browser if we change the query string to a numeric value the function defaults to 1.

02:44.520 --> 02:46.390
We can still cause an error though.

02:46.590 --> 02:50.670
If I put a negative number for the value.

02:52.630 --> 02:53.910
The filter doesn't default.

02:53.920 --> 02:58.190
This has this is a valid integer.

03:01.020 --> 03:07.240
In addition to a default value we can also specify a minimum like that.

03:09.550 --> 03:10.920
Now in the browser.

03:10.990 --> 03:20.350
If I change the page to a negative number it changes it to 1 as this is the minimum a value for the

03:20.350 --> 03:22.160
page number.

03:22.180 --> 03:28.390
We could also specify a maximum value so that if we put in a page number that's higher than the number

03:28.390 --> 03:29.200
of pages

03:31.810 --> 03:34.060
then it would just show the last page.

03:34.150 --> 03:36.620
But I don't think that's correct behaviour.

03:36.940 --> 03:41.590
If the page number is too high it should be an empty page.

03:45.060 --> 03:51.320
Now that we have this working we can remove these two dump lines like that.
