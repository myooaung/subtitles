WEBVTT

00:04.420 --> 00:12.880
The properties and methods that we've added so far to this class are object properties and methods to

00:12.880 --> 00:13.640
use them.

00:13.660 --> 00:21.730
First we need to create our instantiate an object of this class the values of object properties and

00:21.730 --> 00:30.120
the results of carving object methods are specific to a particular object in addition to this.

00:30.190 --> 00:37.480
We can also create static properties and methods a static property our method can be accessed without

00:37.480 --> 00:39.960
first creating an object of the class.

00:42.470 --> 00:50.910
Let's add a county property to a class with a default value of zero to make it static.

00:50.930 --> 00:55.160
We add the static keyword like that.

00:55.160 --> 00:59.090
The ardour of key words before the property doesn't matter to p HP.

00:59.090 --> 01:03.520
You can put public static art static public if you like.

01:03.710 --> 01:08.490
However it's more common to write public static like this.

01:08.540 --> 01:14.570
This is so that all the visibility modifiers like public are private in the whole class are in the same

01:14.570 --> 01:21.470
place which makes the code easier to read than in the constructor.

01:21.500 --> 01:30.030
Let's increment this static property by one like that to refer to a static variable.

01:30.030 --> 01:37.370
Our method we use the static keyword with to Colon's before the property our method.

01:38.000 --> 01:45.080
Adding this line means that every time we create a new object the static counts property will be incremented

01:45.080 --> 01:49.610
by one in the other script.

01:49.700 --> 01:52.640
First let's just print out the value of this property

01:55.010 --> 01:59.960
before we create an object to refer to a static method.

01:59.960 --> 02:07.880
Our property from outside the class we use the class name to Colon's then the property are methot like

02:07.880 --> 02:08.970
this.

02:11.960 --> 02:14.260
When we run this code we get zero.

02:14.360 --> 02:18.180
As this is the initial value of the property.

02:19.850 --> 02:23.890
Let's repeat this line after we've created an object.

02:27.700 --> 02:31.550
Now when we run the code we get the initial value as before.

02:31.690 --> 02:36.650
But then we get one as we incremented it when we created a new object.

02:39.550 --> 02:43.480
Let's create another object and print the value out again.

02:47.080 --> 02:49.810
And we see that the value is incremented by 1.

02:49.970 --> 02:58.120
Every time we create a new object the static property is not tied to a specific object.

02:58.190 --> 03:00.540
Rather to the whole class.

03:00.710 --> 03:03.190
We can also have static methods.

03:03.570 --> 03:13.790
Let's add a new static method that will just print out the value of the static property like that.

03:13.790 --> 03:23.810
Then let's remove these var dumped lines and call the static method instead in the same way with access

03:23.810 --> 03:25.480
to the static property.

03:25.550 --> 03:29.870
The name of the class to Colon's and the static method name.

03:32.280 --> 03:38.670
When we run this code we get to which is the value of the static property.

03:38.910 --> 03:45.090
We'll see more examples of static and none static properties methods throughout the rest of the course.
