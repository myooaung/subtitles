WEBVTT

00:05.600 --> 00:11.720
We just added a method to get a single page of article records which we're calling here in the index

00:11.720 --> 00:13.360
page.

00:13.460 --> 00:20.810
We can restrict the number of records we display by passing in values for the limit and the offset it

00:20.810 --> 00:28.940
would be easier to specify a page number instead of these two values instead of doing this in the method

00:29.000 --> 00:30.640
in the article class though.

00:30.920 --> 00:37.130
Let's add a new class that we can reuse to paginate different database tables if we need to.

00:37.480 --> 00:41.710
We'll put it in the classis folder and we'll call it paginated.

00:41.750 --> 00:42.740
Doug P. HP

00:46.340 --> 00:54.720
first will add the class definition then will add properties for the limit and offset.

00:56.260 --> 01:06.170
Next let's add a constructor method where we can calculate the limits and offset based on the page number.

01:08.570 --> 01:13.650
The limit will simply be the number of rijkaard per page.

01:14.030 --> 01:17.320
The offset for the first page will be zero.

01:17.450 --> 01:20.020
Starting from the first rijkaard.

01:20.570 --> 01:28.930
If we have three Ricardos per page for example the offset for the second page will be 3 for the third

01:28.940 --> 01:32.430
page 6 and so on.

01:33.290 --> 01:36.930
So we can calculate the offset using this formula.

01:37.250 --> 01:43.460
The number of Rickard's per page multiplied by the page number minus one.

01:47.170 --> 01:53.440
So we'll pass the page number and the number of Ricardos into the constructor.

01:53.440 --> 02:01.780
Then the limit property will simply be the number of records and the offset property is calculated using

02:01.780 --> 02:03.940
that formula.

02:05.230 --> 02:12.760
It may seem unnecessary to just pass the records per page value in just to return this same value as

02:12.760 --> 02:20.620
the limit property but I will use this value later on when we calculate page links before we use this

02:20.620 --> 02:21.580
class.

02:21.580 --> 02:25.700
Let's add a p p duck comment for the constructor.

02:26.710 --> 02:33.110
The two properties and the class itself.

02:34.510 --> 02:42.640
Then in the index page we don't need to require the new class as the auto loader will take care of that.

02:43.220 --> 02:52.780
Let's create a new paginate up ject passing in a page number of 1 and 4 for the number of ecards per

02:52.780 --> 02:55.360
page.

02:55.360 --> 03:03.010
Then when we call the Get page method we can pass in the properties from the paginate an object like

03:03.010 --> 03:03.980
that.

03:07.330 --> 03:13.110
Let's give that a try with a page number of 1 and four records per page.

03:13.240 --> 03:16.710
We see the first four records.

03:16.960 --> 03:18.790
If I change the page to two

03:22.690 --> 03:25.250
we see the second page.

03:26.350 --> 03:28.000
If I change it to three

03:31.930 --> 03:34.800
we see the third page and so on.
