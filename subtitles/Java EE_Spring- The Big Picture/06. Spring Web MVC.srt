1
00:00:01,774 --> 00:00:04,453
In this section, we'll discuss Spring Web MVC,

2
00:00:04,453 --> 00:00:08,069
and in order to understand what Spring Web MVC is,

3
00:00:08,069 --> 00:00:11,485
we first need to understand what a servlet is.

4
00:00:11,485 --> 00:00:16,034
The Java language introduced very basic support for interacting with the

5
00:00:16,034 --> 00:00:19,737
web via a built-in framework called the Servlet API,

6
00:00:19,737 --> 00:00:25,146
and the Servlet API is named after the key component called a servlet.

7
00:00:25,146 --> 00:00:26,835
And in simple terms,

8
00:00:26,835 --> 00:00:31,020
a servlet is an object that receives a request and

9
00:00:31,020 --> 00:00:33,718
generates a response based on that request.

10
00:00:33,718 --> 00:00:38,789
Let's take a look at what a standard web request looks like using a Servlet API.

11
00:00:38,789 --> 00:00:41,389
We start off with a request to the web server,

12
00:00:41,389 --> 00:00:43,988
which is initially handled by the Servlet API,

13
00:00:43,988 --> 00:00:47,611
and then passed on to the actual application logic,

14
00:00:47,611 --> 00:00:50,839
or business logic as it's called.

15
00:00:50,839 --> 00:00:55,077
The business logic is executed and produces some result,

16
00:00:55,077 --> 00:00:58,645
and then those results are handed back to the

17
00:00:58,645 --> 00:01:01,024
Servlet API to generate a response.

18
00:01:01,024 --> 00:01:04,728
Servlets are great, but they don't come without their challenges.

19
00:01:04,728 --> 00:01:09,435
Specifically, the servlet API is considered to be somewhat of a low-level API,

20
00:01:09,435 --> 00:01:15,334
meaning that it's more detailed and offers less way of abstracting complexity,

21
00:01:15,334 --> 00:01:20,290
and this typically translates into something that is harder

22
00:01:20,290 --> 00:01:23,828
to use and is ultimately less productive.

23
00:01:23,828 --> 00:01:26,516
Because the Servlet API is so low level,

24
00:01:26,516 --> 00:01:31,782
it's easy to develop application logic that lacks proper design principles.

25
00:01:31,782 --> 00:01:36,843
Code can quickly become unorganized and hard to maintain.

26
00:01:36,843 --> 00:01:40,536
Now that we have a high-level understanding of the Servlet API,

27
00:01:40,536 --> 00:01:45,285
let's look at what a request looks like using the Spring Web MVC Framework.

28
00:01:45,285 --> 00:01:46,935
The request starts off the same,

29
00:01:46,935 --> 00:01:50,314
entering the web server and passing through the Servlet API; however,

30
00:01:50,314 --> 00:01:53,322
instead of going directly to the business logic,

31
00:01:53,322 --> 00:01:57,519
it's sent through to the Spring Web MVC Framework.

32
00:01:57,519 --> 00:02:01,413
The business logic can then make use of Spring Web MVC,

33
00:02:01,413 --> 00:02:05,837
generate a result, and pass control back to Spring Web MVC,

34
00:02:05,837 --> 00:02:09,309
which in turn can pass control back to the Servlet API,

35
00:02:09,309 --> 00:02:12,496
and ultimately generate a response.

36
00:02:12,496 --> 00:02:16,174
The advantage of the Spring Web MVC Framework is that it provides a

37
00:02:16,174 --> 00:02:19,569
higher-level API for the developer to interact with,

38
00:02:19,569 --> 00:02:24,921
and this results in easier usage and more productivity.

39
00:02:24,921 --> 00:02:29,196
The higher-level API also has the added benefit of making it easier to

40
00:02:29,196 --> 00:02:32,517
develop code that follows proper design principles.

41
00:02:32,517 --> 00:02:35,625
And you may have been wondering this whole time what

42
00:02:35,625 --> 00:02:41,255
exactly is the MVC in Spring Web MVC, well,

43
00:02:41,255 --> 00:02:46,111
MVC stands for model-view-controller, and it's a design principle,

44
00:02:46,111 --> 00:02:52,935
or a design pattern, that results in more organized and easier-to-maintain code.

45
00:02:52,935 --> 00:02:55,073
If you want to learn more about Spring Web MVC,

46
00:02:55,073 --> 00:03:05,000
be sure to check out the Pluralsight course called Introduction to Spring MVC 4, by Bryan Hansen.

