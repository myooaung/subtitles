WEBVTT
1
00:00:01.923 --> 00:00:05.137
We'll start off by talking about the Spring Data project,

2
00:00:05.137 --> 00:00:09.593
and you can visit the Spring Data project by visiting projects.

3
00:00:09.593 --> 00:00:11.457
spring.

4
00:00:11.457 --> 00:00:13.322
io/spring-data.

5
00:00:13.322 --> 00:00:17.133
Spring Data's mission is to provide a familiar and consistent

6
00:00:17.133 --> 00:00:21.406
programming model for data access while still retaining some of those

7
00:00:21.406 --> 00:00:24.028
special traits about the underlying data store,

8
00:00:24.028 --> 00:00:28.431
and this means that regardless of the type of data that's being stored,

9
00:00:28.431 --> 00:00:33.011
Spring Data utilizes sort of these common patterns across all data stores with

10
00:00:33.011 --> 00:00:37.711
the additional goal of ensuring that any of those unique traits that are

11
00:00:37.711 --> 00:00:41.592
specific to a specific data store are still available.

12
00:00:41.592 --> 00:00:44.857
You might be wondering how exactly is the Spring Data project

13
00:00:44.857 --> 00:00:48.081
different than the Spring Framework's Data Access support,

14
00:00:48.081 --> 00:00:49.841
and that's a great question.

15
00:00:49.841 --> 00:00:52.774
The Spring Data project extends the data access

16
00:00:52.774 --> 00:00:55.597
capabilities provided by the Spring Framework,

17
00:00:55.597 --> 00:01:00.499
whereas the Spring Framework is focused on one particular type of database,

18
00:01:00.499 --> 00:01:02.732
particularly relational databases.

19
00:01:02.732 --> 00:01:07.321
The Spring Data project adds new ways of interacting with relational databases,

20
00:01:07.321 --> 00:01:11.987
as well as support from many different types of databases.

21
00:01:11.987 --> 00:01:14.694
Spring Data is actually an umbrella project,

22
00:01:14.694 --> 00:01:18.360
meaning that it itself is not actually a project,

23
00:01:18.360 --> 00:01:24.203
but a series of subprojects, specifically a subproject per supported data store.

24
00:01:24.203 --> 00:01:26.230
And if you scroll down in the main project page,

25
00:01:26.230 --> 00:01:29.032
you can see all the various data stores that are supported.

26
00:01:29.032 --> 00:01:30.224
As you can see,

27
00:01:30.224 --> 00:01:34.865
there's a lot of different submodules to support a lot of different data stores,

28
00:01:34.865 --> 00:01:36.515
and there's the Main modules,

29
00:01:36.515 --> 00:01:39.248
which are supported within the Spring Data umbrella,

30
00:01:39.248 --> 00:01:43.382
and then there's the Community contribute modules that are written and

31
00:01:43.382 --> 00:01:46.737
maintained by others outside of the Spring Data team.

32
00:01:46.737 --> 00:01:50.098
One thing that's nice about all of the Spring project pages is that

33
00:01:50.098 --> 00:01:53.073
they show a quick example of using the technology.

34
00:01:53.073 --> 00:01:56.970
So if we scroll down to the bottom, we can see a section labeled Quick Start,

35
00:01:56.970 --> 00:01:58.589
and without going into the details,

36
00:01:58.589 --> 00:02:03.244
let me give you a quick overview of that this example is doing.

37
00:02:03.244 --> 00:02:06.153
This particular example is showing how you can create

38
00:02:06.153 --> 00:02:09.367
an object that holds some data, and in this case,

39
00:02:09.367 --> 00:02:14.572
it's an Employee object, and then Spring Data helps make it easy to save,

40
00:02:14.572 --> 00:02:17.581
and delete, and find any of that data,

41
00:02:17.581 --> 00:02:21.844
all with built-in methods and little to no additional coding required.

42
00:02:21.844 --> 00:02:24.978
Spring Data, along with some other technologies,

43
00:02:24.978 --> 00:02:29.860
like JPA, which is called the Java Persistence API,

44
00:02:29.860 --> 00:02:32.247
does the hard work of taking the data that's stored

45
00:02:32.247 --> 00:02:34.888
in the object and translating it, or mapping it,

46
00:02:34.888 --> 00:02:40.532
or converting it into something that can be stored into the target data store.

47
00:02:40.532 --> 00:02:43.176
If you're interested in learning more about Spring Data,

48
00:02:43.176 --> 00:02:46.275
there's two Pluralsight courses that utilize Spring Data.

49
00:02:46.275 --> 00:02:49.850
The first course is the same technology that we saw in the demo,

50
00:02:49.850 --> 00:02:53.659
and it's called, Getting Started with Spring Data JPA,

51
00:02:53.659 --> 00:02:54.929
by Dan Bunker,

52
00:02:54.929 --> 00:03:03.000
and the second course is called Getting Started with Spring Data REST, and it's also by Dan Bunker.

