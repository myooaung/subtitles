WEBVTT
ï»¿1
00:00:05.270 --> 00:00:06.370
Welcome back everyone.

2
00:00:06.440 --> 00:00:11.720
In this lecture we're going to discuss the general idea behind voter sentiment analysis with Python

3
00:00:11.750 --> 00:00:14.300
and NL T.K..

4
00:00:14.370 --> 00:00:20.280
We've already explored tech's classification and using it to predict sentiment labels on pre labeled

5
00:00:20.340 --> 00:00:21.450
movie reviews.

6
00:00:21.450 --> 00:00:27.400
That means someone has already read the review for us and manually labeled it either positive or negative.

7
00:00:27.450 --> 00:00:33.660
But what happens if we don't already have those labels are there pre constructed methods of attempting

8
00:00:33.660 --> 00:00:38.790
to discern sentiments sentiment being whether you feel positive about the text or negative about the

9
00:00:38.790 --> 00:00:42.610
text or neutral on raw unlabeled text.

10
00:00:42.630 --> 00:00:48.270
Is there a way we can take that raw text data and pass it through some sort of pre-built algorithm that

11
00:00:48.270 --> 00:00:54.720
will directly declare the sentiment for us without even needing any sort of pre labeled training mechanisms

12
00:00:56.030 --> 00:00:56.290
well.

13
00:00:56.300 --> 00:01:03.110
Luckily one of the solutions is called Vader which stands for valence aware dictionary for sentiment

14
00:01:03.200 --> 00:01:04.030
reasoning.

15
00:01:04.190 --> 00:01:06.930
So the sentiment that E is capitalized there.

16
00:01:06.980 --> 00:01:13.100
That's where they get the E for Vader and Vader is a model used for tech's sentiment analysis that is

17
00:01:13.100 --> 00:01:19.430
sensitive to both polarity that is whether something is positive or negative an intensity that is the

18
00:01:19.430 --> 00:01:20.940
strength of the emotion.

19
00:01:20.990 --> 00:01:24.430
And we'll talk about strength in a little bit now.

20
00:01:24.450 --> 00:01:29.820
Luckily for us it is available in the analytics package and can be applied directly to unlabeled text

21
00:01:29.820 --> 00:01:30.480
data.

22
00:01:30.540 --> 00:01:34.960
You do have to download it but it's a simple download call from within and L2 K..

23
00:01:35.040 --> 00:01:39.450
So keep that in mind if you have a firewall you may need to disable it in order to download and we cover

24
00:01:39.450 --> 00:01:47.050
the download process in the very next lecture now primarily Vader sentiment analysis relies on a dictionary

25
00:01:47.080 --> 00:01:53.530
which maps lexical features to emotion intensities called sentiment scores the sentiment score of a

26
00:01:53.530 --> 00:01:58.000
text can then be attained by summing up the intensity of each word in the text.

27
00:01:58.000 --> 00:02:04.030
So essentially every single word has some sort of positive or negative value attached to it.

28
00:02:04.030 --> 00:02:10.510
And what we do is we just take all the words instead of a text document and then convert them into positive

29
00:02:10.540 --> 00:02:17.310
or negative values and then we sum that all up and that will be our document sentiment score.

30
00:02:17.320 --> 00:02:21.440
So for example you can think of words like love like enjoy and happy.

31
00:02:21.550 --> 00:02:24.450
Those all convey a positive sentiment.

32
00:02:24.560 --> 00:02:29.890
And remember we also talked about the strength of the emotion and Vader is actually intelligent enough

33
00:02:29.890 --> 00:02:36.070
to understand basic context of these words such as did not love as a negative sentiment.

34
00:02:36.250 --> 00:02:42.430
So don't be too concerned about things like having the word love be completely positive because Vader

35
00:02:42.430 --> 00:02:49.210
will also take into account the context of the words because if there's a negative word such as not

36
00:02:49.540 --> 00:02:55.030
preceding a positive word then you can understand that that whole sentiment is probably negative.

37
00:02:55.060 --> 00:03:00.060
So not love or it did not like did not enjoy Vader will understand that.

38
00:03:00.340 --> 00:03:04.160
And it's also going to understand things like capitalization and punctuation.

39
00:03:04.330 --> 00:03:12.940
So if you write just a lowercase word love that doesn't convey a positive emotion as strongly as love

40
00:03:12.940 --> 00:03:15.410
in all caps with a bunch of exclamation marks.

41
00:03:15.430 --> 00:03:22.490
So Vader's also smart enough to take that into account now sentiment on raw text is always going to

42
00:03:22.490 --> 00:03:27.560
be challenging because there's a variety of possible factors things like positive and negative sentiment

43
00:03:27.950 --> 00:03:29.150
in the same text data.

44
00:03:29.600 --> 00:03:36.200
So for example if you're reading a movie review often movie reviews will praise actors capabilities.

45
00:03:36.200 --> 00:03:44.090
However maybe they judge the overall screenplay or the script of the movie itself as very poor and as

46
00:03:44.090 --> 00:03:48.680
we know if you've seen a movie with great actors in it that isn't a good movie often has to do with

47
00:03:48.680 --> 00:03:52.700
the screenplay or the poor script or just the poor storyline.

48
00:03:52.700 --> 00:03:57.530
So a movie review could have a positive things about the actors but that negative things to say about

49
00:03:57.530 --> 00:04:02.420
the overall movie itself and if there's more positive things about the actors than vader is going to

50
00:04:02.420 --> 00:04:08.600
say that the overall movie review could be positive when in fact the true analysis of the movie movie

51
00:04:08.600 --> 00:04:13.280
review when read it by human would be that the overall movie was negative but the actors were positive

52
00:04:13.340 --> 00:04:14.210
in it.

53
00:04:14.210 --> 00:04:16.790
Now another thing that's very difficult to detect is sarcasm.

54
00:04:16.790 --> 00:04:21.320
This is pretty much impossible for Vader to the text because you end up using positive words in a negative

55
00:04:21.320 --> 00:04:22.700
way sarcastically.

56
00:04:22.700 --> 00:04:24.650
So keep these two ideas in mind.

57
00:04:24.770 --> 00:04:31.080
This sense of analysis from Vader is definitely not going to be foolproof so we're going to do now is

58
00:04:31.080 --> 00:04:34.800
explore using Vader sentiment analysis and ulti Kate and Python.

59
00:04:34.800 --> 00:04:41.370
The key thing to keep in mind here is that we're going to be able to apply Vader onto any raw text data

60
00:04:41.400 --> 00:04:42.160
that we want.

61
00:04:42.510 --> 00:04:44.010
Okay let's get started.

62
00:04:44.010 --> 00:04:44.970
I'll see you in the next lecture.

