1
00:00:05,290 --> 00:00:06,490
Welcome back everyone.

2
00:00:06,670 --> 00:00:10,830
In the next lecture we're going to be working with Python and the sikat learn library.

3
00:00:11,050 --> 00:00:15,460
Let's quickly give a quick preview of how the psychic learned library works before we actually open

4
00:00:15,460 --> 00:00:17,410
up a notebook and get started with it.

5
00:00:18,780 --> 00:00:22,530
As I mentioned we're going to be using the sikat learn package in order to do some machine learning

6
00:00:22,530 --> 00:00:23,490
in this course.

7
00:00:23,580 --> 00:00:27,720
It's the most popular machine learning package for Python and it has a lot of algorithms already built

8
00:00:27,720 --> 00:00:28,350
into it.

9
00:00:29,590 --> 00:00:34,510
If you are using our provided environment file you may need to install it using either Carna install

10
00:00:34,510 --> 00:00:36,720
sikat learn or Pippin's all sikat learn.

11
00:00:36,940 --> 00:00:41,210
So go ahead and make sure you've installed it before you hit the next lecture.

12
00:00:41,370 --> 00:00:45,060
Let's quickly talk about the basic structure of how to use sikat learn first.

13
00:00:45,060 --> 00:00:51,270
The quicker we are the machine learning process remember we need to acquire or data cleaner data split

14
00:00:51,270 --> 00:00:56,230
our data into a training set and testing set test the model on the test set and then we can go into

15
00:00:56,280 --> 00:00:58,490
all of the ultimate.

16
00:00:58,580 --> 00:01:03,620
So we're going to do now is show you an example of this process using sikat learns Python syntax and

17
00:01:03,620 --> 00:01:07,190
don't worry about memorizing any of the steps we're going to get plenty of practice and review when

18
00:01:07,190 --> 00:01:14,090
we actually start coding and subsequent lectures every algorithm is expose and sikat learn via what's

19
00:01:14,090 --> 00:01:15,970
known as the matre object.

20
00:01:16,010 --> 00:01:21,200
S-meter is really just another word for model since all machine learning models are doing or estimating

21
00:01:21,240 --> 00:01:22,880
to predict predicted output.

22
00:01:22,880 --> 00:01:26,680
So first you're going to import the model and the general form looks something like this.

23
00:01:26,690 --> 00:01:32,210
You say from S-K learn dot and then the family of models you're looking for and then import the actual

24
00:01:32,210 --> 00:01:33,080
model.

25
00:01:33,110 --> 00:01:37,970
For example if you want to work with the linear regression model you would simply say from S learn linear

26
00:01:37,970 --> 00:01:43,070
underscore model and that linear underscore model is the family of linear models then you would import

27
00:01:43,130 --> 00:01:47,660
whatever specific model you're looking for and it will show you that you've got a notebook you can use

28
00:01:47,660 --> 00:01:52,870
tab and shift tab to quickly see what models are available.

29
00:01:52,900 --> 00:01:58,310
Keep in mind each estimator or machine learning model has parameters and all the parameters of the meter

30
00:01:58,630 --> 00:02:02,640
can be set when it is instantiated and have suitable default values.

31
00:02:02,680 --> 00:02:07,150
So luckily you don't need to know too much about the actual algorithms before you get started.

32
00:02:07,150 --> 00:02:10,360
Sikat learn because they usually have pretty reasonable default values.

33
00:02:10,480 --> 00:02:14,440
And again you can use shift plus tabun Jupiter to check the possible parameters.

34
00:02:15,520 --> 00:02:20,850
For example we could create a linear regression and state the normalized parameter is equal to true.

35
00:02:21,100 --> 00:02:25,510
And then if you print out the model you'll actually see the various other parameters such as fitting

36
00:02:25,510 --> 00:02:28,050
the int..

37
00:02:28,070 --> 00:02:32,420
Once you have your model created with your desired parameters it's time to fit your model or train your

38
00:02:32,420 --> 00:02:34,680
model on some training data.

39
00:02:34,750 --> 00:02:39,370
Remember you should always split the data into a training set and test it.

40
00:02:39,440 --> 00:02:45,810
Lucky for us sikat learn comes with a trained test split functionality so we can say here from Eski

41
00:02:45,810 --> 00:02:49,490
learned that model underscore selection import train test split.

42
00:02:49,670 --> 00:02:55,940
And then here I've made up some data for x and y and then if you actually pass x and y in the train

43
00:02:55,950 --> 00:03:00,790
to split all you need to do is decide what percentage of it should go to your test set.

44
00:03:00,840 --> 00:03:03,530
So the percentage is going to be between 0 and 1.

45
00:03:03,570 --> 00:03:10,090
So if I say test size is equal to 0.3 then that means 30 percent of this data will go to the test set.

46
00:03:10,230 --> 00:03:18,190
And notice how it brings back x train x test Y train and a Y test just as we discussed in previous lectures.

47
00:03:18,340 --> 00:03:21,880
Now that we've split the data we can train or fit our model of the training data.

48
00:03:21,970 --> 00:03:24,350
And this is done through the model fit method.

49
00:03:24,370 --> 00:03:30,880
All you need to say is modeled thought fit passenger extreme data and then pass your white train data.

50
00:03:31,090 --> 00:03:36,160
Now that the model has been trained on the training data the models ready to predict labels or values

51
00:03:36,220 --> 00:03:37,830
on the test set.

52
00:03:37,880 --> 00:03:43,280
So you get the predicted values by saying modeled up predict and then you pass the X test set.

53
00:03:43,280 --> 00:03:48,230
And keep in mind this dot product method is the same method you would apply for brand new data that

54
00:03:48,230 --> 00:03:49,940
the model has never seen before.

55
00:03:49,970 --> 00:03:53,400
So that's how you can use your model to predict on new values.

56
00:03:55,030 --> 00:03:59,410
So we can then evaluate our model by comparing our predictions to the correct values.

57
00:03:59,410 --> 00:04:04,360
The evaluation method depends on what sort of machine learning algorithm you're using whether it's regression

58
00:04:04,360 --> 00:04:06,190
classification or clustering.

59
00:04:06,250 --> 00:04:08,390
In our case we'll be looking at classification.

60
00:04:08,470 --> 00:04:11,440
So we've already gone over the different classification metrics.

61
00:04:11,440 --> 00:04:15,030
Let's go ahead and actually program through all of this in the next lecture.

62
00:04:15,130 --> 00:04:16,090
I'll see it there.

