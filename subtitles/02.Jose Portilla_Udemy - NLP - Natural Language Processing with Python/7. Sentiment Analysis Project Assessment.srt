1
00:00:00,390 --> 00:00:01,220
Welcome back.

2
00:00:01,230 --> 00:00:05,240
Let's have a quick overview of your sentiment analysis Assessment Project.

3
00:00:05,310 --> 00:00:07,380
I'm gonna open up the notebook and do a quick review.

4
00:00:07,630 --> 00:00:07,910
Okay.

5
00:00:07,920 --> 00:00:09,410
Here I am at the notebook.

6
00:00:09,480 --> 00:00:14,670
We essentially just have two major tasks with an extra challenge associated with each task.

7
00:00:14,670 --> 00:00:19,140
So the first task has to do with those actual word vectors we discussed at the very beginning of this

8
00:00:19,140 --> 00:00:23,880
section of the course where we want you to perform vector arithmetic on your own words.

9
00:00:23,910 --> 00:00:30,060
So we want you to write code that evaluates vector arithmetic vector of Matic is just adding and subtracting

10
00:00:30,090 --> 00:00:34,690
those particular word vectors similar to what we did with King minus man plus woman.

11
00:00:34,890 --> 00:00:39,310
And the goal is to come as close to an expected word as possible.

12
00:00:39,390 --> 00:00:45,660
And if you have really good arithmetic you can feel free to share those success stories on the Q A forum.

13
00:00:45,660 --> 00:00:49,380
So essentially at the end what we want you to do is just follow along these comments.

14
00:00:49,380 --> 00:00:54,440
So import Spacey low the language library and also remember to use the larger model.

15
00:00:54,440 --> 00:00:59,010
So you have access to those word vectors and then choose the words you wish to compare and obtain their

16
00:00:59,010 --> 00:00:59,820
vectors.

17
00:00:59,820 --> 00:01:06,690
So for example you can choose the words that we had in our actual example like man king and woman or

18
00:01:06,690 --> 00:01:07,430
choose your own words.

19
00:01:07,440 --> 00:01:12,360
So I would really encourage you to choose your own words but if you're kind of stuck on this you can't

20
00:01:12,360 --> 00:01:15,120
just follow along the example we did during the course.

21
00:01:15,150 --> 00:01:19,710
So then you're going to import spatial and the finite cosine similarity function.

22
00:01:19,710 --> 00:01:22,760
There's actually cosine similarity function also available and psychic learn.

23
00:01:22,860 --> 00:01:27,480
So lots of different options here for actually calculating the cosine similarity then you'll write the

24
00:01:27,480 --> 00:01:32,880
expression calculating that new vector and then list the top 10 closest vectors in the vocabulary that

25
00:01:32,880 --> 00:01:35,260
results of this new vector.

26
00:01:35,280 --> 00:01:40,770
So very similar to what we did and then what would I want you to do is as a challenge kind of encapsulate

27
00:01:40,800 --> 00:01:45,960
all this into a function so write a function that takes in three strings and then performs an A minus

28
00:01:45,960 --> 00:01:49,380
B policy arithmetic and returns a top 10 result.

29
00:01:49,440 --> 00:01:54,630
So here's a empty function for you vector math you would pass in three strings like King man and woman

30
00:01:54,930 --> 00:01:59,700
and it would automatically return the top 10 for a minus B policy essentially repeating all the steps

31
00:01:59,700 --> 00:02:06,090
you have appear but just enough within a function then Task two is to perform voter sentiment analysis

32
00:02:06,180 --> 00:02:07,540
on your own review.

33
00:02:07,590 --> 00:02:13,080
So we want you to set up a sentiment intensity analyzer and then want you to write your own string review.

34
00:02:13,110 --> 00:02:17,880
Feel free to be as positive or a negative as you want and then obtain that aside these scores for your

35
00:02:17,880 --> 00:02:23,400
own review and then the challenge is to write a function that takes in a review and returns a score

36
00:02:23,400 --> 00:02:25,440
of positive negative or neutral.

37
00:02:25,440 --> 00:02:28,880
Very similar to what you're doing up here except it's actually just returning back.

38
00:02:29,010 --> 00:02:30,360
This string code.

39
00:02:30,510 --> 00:02:32,340
OK so pretty straightforward.

40
00:02:32,340 --> 00:02:34,400
It does match up a lot of what we did in the lectures.

41
00:02:34,530 --> 00:02:39,330
But if you're stuck on anything feel free to go to the next lecture or we're going to go over the solutions

42
00:02:39,330 --> 00:02:40,770
notebook we'll see if there.

