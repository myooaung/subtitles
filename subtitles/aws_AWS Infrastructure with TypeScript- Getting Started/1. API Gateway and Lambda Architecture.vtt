WEBVTT
1
00:00:01.040 --> 00:00:04.290
So now that we've mastered the CDK lifecycle,

2
00:00:04.290 --> 00:00:08.510
now we're able to dive in and start building some really exciting things.

3
00:00:08.510 --> 00:00:11.090
So let's start off here by looking at Globomantics and

4
00:00:11.090 --> 00:00:12.980
what's going on in their process.

5
00:00:12.980 --> 00:00:17.140
So Josh, like us, has validated the CDK lifecycle.

6
00:00:17.140 --> 00:00:21.270
He's now ready to look at the API tier for this proof of

7
00:00:21.270 --> 00:00:23.640
concept for the document management system.

8
00:00:23.640 --> 00:00:24.460
So with this,

9
00:00:24.460 --> 00:00:28.590
he needs to be able to first deploy out some sample content into the

10
00:00:28.590 --> 00:00:32.540
documents bucket because he needs to have some data to work with.

11
00:00:32.540 --> 00:00:36.410
He also needs to enable users to view these documents without

12
00:00:36.410 --> 00:00:40.270
having AWS access. And also, as a side note here,

13
00:00:40.270 --> 00:00:44.760
without just opening up the bucket to anyone publicly. He also needs to

14
00:00:44.760 --> 00:00:49.540
have an API that can be integrated with the web front end.

15
00:00:49.540 --> 00:00:52.640
So let's take a quick look back at our sample architecture.

16
00:00:52.640 --> 00:00:55.490
Up to this point, here's what we've built out.

17
00:00:55.490 --> 00:01:00.050
We've created our documents bucket, and we've created our VPC.

18
00:01:00.050 --> 00:01:02.660
Now we're not going to be adding anything to our VPC

19
00:01:02.660 --> 00:01:04.650
until we get to the next module.

20
00:01:04.650 --> 00:01:06.710
But here within this module,

21
00:01:06.710 --> 00:01:08.880
we're going to be focused on building out that documents

22
00:01:08.880 --> 00:01:12.330
API with API Gateway and the Lambda function that's going

23
00:01:12.330 --> 00:01:15.040
to interact with the S3 bucket.

24
00:01:15.040 --> 00:01:19.130
And then once we get past this module, we'll then move forward with

25
00:01:19.130 --> 00:01:22.540
implementing the remaining work in the next module.

26
00:01:22.540 --> 00:01:24.860
So here, as an overview, first,

27
00:01:24.860 --> 00:01:28.390
we're going to be researching within the CDK documentation the

28
00:01:28.390 --> 00:01:30.460
needed packages that we're going to be working with.

29
00:01:30.460 --> 00:01:35.090
And I'm including this here because this is just as critical of a step as

30
00:01:35.090 --> 00:01:38.440
actually writing code because you'll spend a lot of time in the

31
00:01:38.440 --> 00:01:41.340
documentation when you're building out your infrastructure.

32
00:01:41.340 --> 00:01:41.770
Next,

33
00:01:41.770 --> 00:01:45.170
we're going to be implementing a Lambda function with local code

34
00:01:45.170 --> 00:01:48.930
within our project. We're then going to be configuring our Lambda

35
00:01:48.930 --> 00:01:52.460
function to interact with the documents bucket. We'll be deploying

36
00:01:52.460 --> 00:01:55.460
documents to an S3 bucket with the CDK,

37
00:01:55.460 --> 00:02:06.000
then defining permissions between Lambda, API Gateway, and S3, and then ultimately creating an API Gateway HTTP API.

