1
00:00:02,270 --> 00:00:07,460
With the placeholder directive added, let's go back to the auth component and now we need to add a new

2
00:00:07,460 --> 00:00:08,630
element here.

3
00:00:08,630 --> 00:00:14,590
Now you could add a div but there is a better element, you could should use ng-template here.

4
00:00:14,610 --> 00:00:21,020
This is a directive Angular ships with, which will not actually render anything to the DOM but still

5
00:00:21,020 --> 00:00:24,080
is accessible in the Angular templating language.

6
00:00:24,080 --> 00:00:28,550
This is great because we don't add the overhead of an extra DOM element here,

7
00:00:28,550 --> 00:00:36,830
instead we can now simply just get access to a place in the DOM. To ng-template, we add app

8
00:00:37,260 --> 00:00:43,250
placeholder like this, this new placeholder directive we created. By the way, you don't have to create

9
00:00:43,250 --> 00:00:44,050
it here,

10
00:00:44,060 --> 00:00:50,000
you can also create it outside of that row here if you wish to, anywhere here.

11
00:00:50,030 --> 00:00:56,000
So now we have that ng-template element added which is considered by Angular when it parses the

12
00:00:56,000 --> 00:01:02,240
template but which does not render a real element to the real DOM which is great but we will be able

13
00:01:02,240 --> 00:01:05,870
to get access to this place in the DOM thereafter,

14
00:01:05,870 --> 00:01:09,110
it's simply remembered internally by Angular

15
00:01:09,110 --> 00:01:12,710
you could say. So now we have that, how does it help us?

16
00:01:12,740 --> 00:01:15,220
Well in the auth.component.ts file,

17
00:01:15,350 --> 00:01:20,090
we can now get access to that directive with the help of @ViewChild which you already learned about

18
00:01:20,090 --> 00:01:27,590
in the component deep dive section. View child is imported from @angular/core and to @ViewChild, you

19
00:01:27,590 --> 00:01:29,860
pass a selector.

20
00:01:30,030 --> 00:01:34,720
Now you could pass in the name of a local reference as a string but that's not the goal here,

21
00:01:34,730 --> 00:01:40,640
instead you can all also pass in a type and it will look for the existence of that type in the

22
00:01:40,640 --> 00:01:41,120
template.

23
00:01:41,630 --> 00:01:47,000
So if we pass in the placeholder directive as a type, it will automatically find the first place where

24
00:01:47,000 --> 00:01:50,240
we use that directive in the template of this component.

25
00:01:50,300 --> 00:01:55,870
So here, I'll add placeholder directive and this needs to be imported from your placeholder directive

26
00:01:55,870 --> 00:01:59,020
file of course and I'll add it as a type like this

27
00:01:59,060 --> 00:02:04,410
and as I mentioned, @ViewChild will then find the first occurrence of that directive in the DOM.

28
00:02:04,730 --> 00:02:08,660
Then we can store this in a property of that component,

29
00:02:11,080 --> 00:02:16,840
like alert host would be a fitting name because it will be the place where we host our alert and this

30
00:02:16,840 --> 00:02:19,780
will be of type placeholder directive of course.

31
00:02:19,930 --> 00:02:25,930
So we get access to that directive we use in the template and we store that in alert host.

32
00:02:26,230 --> 00:02:29,620
Now that alert host can be used in show error alert.

33
00:02:29,620 --> 00:02:31,590
We have our factory down there,

34
00:02:31,720 --> 00:02:33,720
now we can get access to that

35
00:02:33,730 --> 00:02:36,610
view container reference of our host.

36
00:02:36,610 --> 00:02:41,650
So here we can get access to this with host view container ref for example

37
00:02:41,650 --> 00:02:47,590
and this simply is the view container if we find in our alert host which is that directive

38
00:02:47,860 --> 00:02:54,790
we selected with @ViewChild view container ref because our host has that view container ref property

39
00:02:55,120 --> 00:03:00,880
because it is just the directive we're selecting in our template and our placeholder directive of course

40
00:03:00,910 --> 00:03:05,010
exposes view container ref as a public property here.

41
00:03:05,050 --> 00:03:10,750
So therefore since we expose it there, we can get access to it here in the auth component and I'm storing

42
00:03:10,750 --> 00:03:13,650
it in new constant, you of course don't need to do that,

43
00:03:13,720 --> 00:03:15,660
you could continue working with that.

44
00:03:15,670 --> 00:03:21,220
So now I store a reference at that view container ref property in the host view container ref constant.

45
00:03:22,440 --> 00:03:28,560
Now the next thing is that we clear anything that might have been rendered there before by simply calling

46
00:03:28,560 --> 00:03:31,300
clear on this view container reference.

47
00:03:31,770 --> 00:03:36,420
As I mentioned, the view container reference is not just like a pair of coordinates,

48
00:03:36,450 --> 00:03:41,860
instead it is an object that allows you to interact with that place in the DOM and clear simply clears

49
00:03:41,910 --> 00:03:45,990
all Angular components that have been rendered in that place before

50
00:03:46,080 --> 00:03:49,410
and I want to clear everything before I render something new.

51
00:03:49,410 --> 00:03:51,140
Now we're almost there,

52
00:03:51,180 --> 00:03:56,160
now we can use our component factory to create a new alert component in that host

53
00:03:56,190 --> 00:04:02,880
view container reference and this is done by simply now using our host view container reference

54
00:04:03,210 --> 00:04:08,630
and calling create component. As I mentioned, you have methods for creating things in that place.

55
00:04:09,420 --> 00:04:11,350
So here I create a new component

56
00:04:11,490 --> 00:04:16,810
and this now does not need the type of the component but it needs such a factory,

57
00:04:16,830 --> 00:04:23,460
so here I pass in that alert component factory we created earlier and this will now create a new component

58
00:04:23,670 --> 00:04:24,600
in that place.

59
00:04:27,240 --> 00:04:31,470
Let's give this a trial, save all the files and let's wait for this to reload

60
00:04:31,590 --> 00:04:37,980
and now let's try logging in with fake credentials and I get an error. I get an error that no component

61
00:04:37,980 --> 00:04:43,390
factory found for alert component, did you add it to NgModule entry component?

62
00:04:43,420 --> 00:04:44,070
Now what is that?
