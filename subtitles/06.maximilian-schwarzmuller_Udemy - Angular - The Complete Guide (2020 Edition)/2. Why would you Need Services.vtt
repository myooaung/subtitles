WEBVTT
1

00:00:02.450  -->  00:00:07.750
Here's an example app which you can find attached to this lecture. Here we can create some accounts, you'll

2

00:00:07.760  -->  00:00:10.700
see we started with three accounts here at the bottom,

3

00:00:10.700  -->  00:00:15.470
we can switch these status of these accounts and you can see that whenever I switch it or log something

4

00:00:15.470  -->  00:00:16.620
to the console,

5

00:00:16.880  -->  00:00:19.490
you can also see that this gets logged

6

00:00:19.490  -->  00:00:26.720
if I create a new account here and overall, what we get here is the logging and the data storage,

7

00:00:26.720  -->  00:00:29.990
so in general tasks which might be centralized.

8

00:00:30.320  -->  00:00:33.230
We also communicate between these components,

9

00:00:33.230  -->  00:00:39.020
that's another area where services can be really helpful because let's have a look at our code.

10

00:00:39.320  -->  00:00:44.770
I got three components, the app component, then the account and the new account component.

11

00:00:45.230  -->  00:00:47.870
The app component is where it all comes together,

12

00:00:47.940  -->  00:00:53.780
there in the template, I embed the app new account and the app account component and I use property

13

00:00:53.780  -->  00:00:56.430
and event binding to pass data around,

14

00:00:56.450  -->  00:01:01.520
for example I loop through all accounts which are right now stored in the app component

15

00:01:01.530  -->  00:01:08.390
here and I pass them via property binding to the app account component here and there

16

00:01:08.390  -->  00:01:14.420
on the other hand, I have an event which gets fired when I click one of the three change status buttons,

17

00:01:14.960  -->  00:01:20.750
which is submitted here which will be cached by my app component where I then handle it again.

18

00:01:20.900  -->  00:01:27.170
So I do have event binding to be informed in my app component whenever something changes in the account

19

00:01:27.170  -->  00:01:28.000
component,

20

00:01:28.370  -->  00:01:30.960
pretty much the same happens in there new account component.

21

00:01:31.160  -->  00:01:36.890
There, I can also listen to a click when I create a new account and on such a click, I emit some data

22

00:01:37.100  -->  00:01:39.050
to the app component.

23

00:01:39.110  -->  00:01:45.740
So this is all fine but we already got quite a complex set up here to pass data around and that even

24

00:01:45.740  -->  00:01:51.070
though that it's still relatively simple, it's not a complex app here afterall.

25

00:01:51.110  -->  00:01:55.470
Now in this lecture, we're going to see how services can help us with that

26

00:01:55.670  -->  00:01:57.540
and what we have to watch out for.

27

00:01:57.800  -->  00:02:02.220
So let's dive into it and build our first service in the next lecture.
