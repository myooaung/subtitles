1
00:00:02,730 --> 00:00:08,920
With the basics about routings set, let's enhance our application a bit by going back to the app module and

2
00:00:08,920 --> 00:00:16,390
adding some other routes to it. Let's say that besides our users route here, we also want to be able to

3
00:00:16,390 --> 00:00:25,150
load a single user, so to load the user component which simply well gives us that single user. For

4
00:00:25,160 --> 00:00:30,010
that, we might want to load a user dynamically because if we have a look at our users component, we see

5
00:00:30,010 --> 00:00:32,460
we get three users with different IDs,

6
00:00:32,740 --> 00:00:39,550
so it would be nice if we could pass the ID of the user we want to load in that route path.

7
00:00:39,910 --> 00:00:44,340
One approach would be to set up a route with user/1 and then one with user/2

8
00:00:44,350 --> 00:00:51,460
and it doesn't look very optimal because it's not very dynamic and still, how would we know inside of

9
00:00:51,460 --> 00:00:52,210
this component

10
00:00:52,270 --> 00:00:53,820
which route was loaded?

11
00:00:53,980 --> 00:00:58,960
Okay we could parse the path manually but that's not really a great approach.

12
00:00:58,960 --> 00:01:04,740
Instead, we can add parameters to our routes, dynamic segments in our paths.

13
00:01:05,020 --> 00:01:11,560
We do this by adding a colon and then any name you like, like for example ID, you will later be able

14
00:01:11,560 --> 00:01:16,670
to retrieve the parameter inside of the loaded component by that name you specify here,

15
00:01:16,690 --> 00:01:23,780
so by ID in this case and the colon simply tells Angular that this is a dynamic part of the path.

16
00:01:24,070 --> 00:01:32,650
Without colon, only routes which are users/id and with ID, I literally mean the word ID, would lead

17
00:01:32,650 --> 00:01:36,510
to this component, with a colon user, slash

18
00:01:36,550 --> 00:01:43,180
anything else would load this component and anything else would be interpreted as the ID.

19
00:01:43,180 --> 00:01:53,050
Now with this in place, we are able to load a component, the user component with this dynamic piece sent

20
00:01:53,050 --> 00:01:54,070
to it.

21
00:01:54,070 --> 00:01:58,930
So if we have a look to this user component or at this user/1 component, here we simply say user

22
00:01:58,930 --> 00:02:05,680
with ID and now we have a dummy text here loaded and username with some dummy text here.

23
00:02:05,680 --> 00:02:07,600
Now for now, we won't touch this,

24
00:02:07,600 --> 00:02:09,910
we won't use this parameter,

25
00:02:09,940 --> 00:02:11,560
we will do in the next lecture,

26
00:02:11,670 --> 00:02:14,510
let's now see if we successfully reach this.

27
00:02:14,530 --> 00:02:19,400
So if we save this to let it recompile and we go back and we are in the users,

28
00:02:19,510 --> 00:02:23,220
let's add slash something here

29
00:02:24,050 --> 00:02:27,590
and you see, the single user component was loaded, the same

30
00:02:27,740 --> 00:02:29,980
if we add /1 here.

31
00:02:30,290 --> 00:02:37,760
So this thing, the segment after /users is indeed interpreted as dynamic,

32
00:02:37,880 --> 00:02:43,530
otherwise we would get the error that users/1 is an unknown route.

33
00:02:43,610 --> 00:02:50,850
It isn't because we set it up to be a known one because again, we added this dynamic path segment here.

34
00:02:51,100 --> 00:02:59,190
Now this is how we can dynamically load some route, how we can encode some data into our path,

35
00:02:59,210 --> 00:03:02,940
how can we get access to this data in the loaded component though

36
00:03:02,960 --> 00:03:06,020
because that of course is another key question.

37
00:03:06,020 --> 00:03:08,420
Let's take a closer look in the next lecture.
