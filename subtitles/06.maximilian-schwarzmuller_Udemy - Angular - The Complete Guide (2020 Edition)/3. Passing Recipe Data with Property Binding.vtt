WEBVTT
1
00:00:02.600 --> 00:00:03.770
So we add navigation in

2
00:00:03.770 --> 00:00:05.090
the last section,

3
00:00:05.090 --> 00:00:11.090
now I want to work on this list of recipe. Right now if we have a look at its component here,

4
00:00:11.150 --> 00:00:16.440
we see that the code for a single list item is this one here.

5
00:00:16.760 --> 00:00:19.580
We do have a separate recipe item component

6
00:00:19.580 --> 00:00:25.790
but right now it doesn't hold any template because we had to outsource this code and put it into this

7
00:00:25.850 --> 00:00:31.010
recipe list component temporarily because otherwise, we would not have been able to display our recipe

8
00:00:31.010 --> 00:00:32.090
data.

9
00:00:32.090 --> 00:00:39.890
Now we know how to pass data to a component though, so we can cut all that code here and put it into

10
00:00:39.890 --> 00:00:42.860
the recipe item component template,

11
00:00:42.860 --> 00:00:49.220
now the goal of course is to get this ngFor loop here and remove it from inside the item and move

12
00:00:49.220 --> 00:00:57.620
it back on the item here and then pass down the individual item, the individual recipe of each iteration

13
00:00:58.310 --> 00:01:04.000
to that component so that we can still output recipe name and so on here.

14
00:01:04.280 --> 00:01:07.150
So that is your chance to do this on your own again,

15
00:01:07.410 --> 00:01:11.850
pause the video and try to loop through the component itself,

16
00:01:11.900 --> 00:01:18.530
so get ngFor out of this component and then pass down the selected recipe or the recipe of the current

17
00:01:18.530 --> 00:01:25.360
loop iteration, in a few seconds you'll see my solution.

18
00:01:25.380 --> 00:01:27.340
So were you successful?

19
00:01:27.360 --> 00:01:35.010
First of all, I'll cut the ngFor loop here and I'll go back to the recipe list component and add it to the

20
00:01:35.150 --> 00:01:37.010
app recipe item selector,

21
00:01:37.170 --> 00:01:41.760
so that now the whole component is replicated for each recipe.

22
00:01:41.760 --> 00:01:47.970
Now the issue of course is that we don't have the recipe which we access inside the recipe item component

23
00:01:47.970 --> 00:01:48.820
anymore.

24
00:01:49.320 --> 00:01:57.260
So we should probably add a recipe here, the recipe of that single recipe item component.

25
00:01:57.540 --> 00:02:00.110
It will be of type recipe of course,

26
00:02:00.270 --> 00:02:07.410
so we have to import this from our own recipe model, going up two folders and then it's there, right in

27
00:02:07.410 --> 00:02:10.270
the folder we then moved to

28
00:02:10.770 --> 00:02:13.700
and initially this will not be defined,

29
00:02:13.770 --> 00:02:21.230
there won't be a value assigned to it because I want to get this recipe from outside.

30
00:02:21.550 --> 00:02:25.940
So to get a recipe from outside or any data from outside,

31
00:02:25.990 --> 00:02:34.510
we need to add something, a decorator, @input with parentheses which needs to be imported from @angular/core.

32
00:02:34.540 --> 00:02:41.920
@input allows us to bind this component property from outside

33
00:02:41.980 --> 00:02:46.500
and of course I want to bind it from my recipe list component here,

34
00:02:46.630 --> 00:02:52.590
so in this list where I replicate the single recipe item a couple of times.

35
00:02:52.870 --> 00:03:02.620
Now here we can now bind to our recipe, referring to the property in the single recipe item and bind the

36
00:03:02.620 --> 00:03:04.770
recipe of the current loop iteration.

37
00:03:05.080 --> 00:03:09.310
Now I'm not happy with the naming here because that can be very confusing,

38
00:03:09.340 --> 00:03:11.680
we're having recipe three times here,

39
00:03:11.980 --> 00:03:20.080
so to make super clear what each name here refers to, I'll rename the recipe here in our loop to recipeEl

40
00:03:20.170 --> 00:03:26.470
for element and that also has to be replaced here then because we're passing the single recipe element

41
00:03:26.500 --> 00:03:27.480
as a value,

42
00:03:27.500 --> 00:03:33.040
therefore on the right side of the equal sign, to the bindable recipe property.

43
00:03:33.490 --> 00:03:40.270
And keep in mind, the recipe here between the square brackets simply is the recipe property in the component

44
00:03:40.830 --> 00:03:42.310
we're placing this on.

45
00:03:42.310 --> 00:03:47.850
So in the recipe item component, this recipe here, that is what that refers to

46
00:03:48.050 --> 00:03:55.540
and actually to make this super super clear, I can split this horizontally to you have the receiving

47
00:03:55.540 --> 00:03:56.200
component,

48
00:03:56.200 --> 00:04:02.110
the recipe item component and the sending one, here template of the sending one, the recipe list component

49
00:04:02.110 --> 00:04:03.220
above each other,

50
00:04:03.220 --> 00:04:05.970
so that is what we're binding to here.

51
00:04:06.400 --> 00:04:08.950
So let me close this. With this 

52
00:04:08.950 --> 00:04:13.760
if we save that, we should see the same as before which makes sense,

53
00:04:13.760 --> 00:04:18.590
it's a good thing that we see this, it means it didn't break and it makes sense because now we're successfully

54
00:04:18.590 --> 00:04:25.680
passing down the data which keep in mind is stored in the recipe list component here in this array,

55
00:04:25.920 --> 00:04:30.800
we're successfully passing this down to the recipe item component.

56
00:04:30.800 --> 00:04:37.070
Now let's work on a feature that once we click an item here, we actually select it and then we load it

57
00:04:37.340 --> 00:04:39.340
in the recipe detail component.

58
00:04:39.560 --> 00:04:41.800
So that is what we'll work on next.
