WEBVTT
1
00:00:02.500 --> 00:00:10.360
Thus far, we had a look at two route guards, the CanActivateGuard and it's neighbor, the

2
00:00:10.390 --> 00:00:18.670
CanActivateChildGuard and a CanDeactivateGuard. Later in this course, in the modules section where you learn

3
00:00:18.670 --> 00:00:26.760
more about the Angular module, we will have a look at other routing related questions and also add guards

4
00:00:26.760 --> 00:00:27.140
again

5
00:00:27.160 --> 00:00:31.080
but I'll come back to this. In this module here,

6
00:00:31.090 --> 00:00:38.380
there are still two things I want to have a look at and the first one is how to get some data, either static

7
00:00:38.380 --> 00:00:41.800
data or dynamic data once a route is loaded.

8
00:00:41.800 --> 00:00:48.130
Now you might correctly say, hey we learned how to get data, how to get a parameter out of the URL and

9
00:00:48.130 --> 00:00:49.180
then use that

10
00:00:49.240 --> 00:00:51.330
but that's not what I mean.

11
00:00:51.370 --> 00:00:57.700
I mean that some of your routes depend on data they receive, either statically each time they are loaded

12
00:00:58.090 --> 00:01:00.500
or they will resolve dynamically.

13
00:01:00.520 --> 00:01:02.870
Maybe I show some examples to make this clearer,

14
00:01:03.070 --> 00:01:05.970
let's start with static data.

15
00:01:06.040 --> 00:01:08.920
We get our page not found component here,

16
00:01:08.920 --> 00:01:15.380
now let's say we don't want to use that but instead, I will create a new component, the error page component.

17
00:01:15.610 --> 00:01:21.690
So this will be a generic error page where the page not found component is pretty much limited to

18
00:01:21.710 --> 00:01:23.010
404

19
00:01:23.110 --> 00:01:31.060
not found errors, we could imagine that we reuse the error page for all kinds of errors. So I'll remove

20
00:01:31.130 --> 00:01:32.270
the spec.ts file

21
00:01:32.380 --> 00:01:35.780
and here in the template, now I don't want to output

22
00:01:35.950 --> 00:01:38.120
page not found or anything like this,

23
00:01:38.140 --> 00:01:42.990
instead let's say we have some error message which I want to output

24
00:01:43.160 --> 00:01:45.280
via string interpolation.

25
00:01:45.280 --> 00:01:52.660
The issue of course is this property doesn't exist as of now, so let's add it here, let's add error message

26
00:01:52.660 --> 00:01:59.380
to this component and we know it should be a string but still, what would be the message? Because again,

27
00:01:59.410 --> 00:02:01.600
we might reuse this page.

28
00:02:01.810 --> 00:02:07.240
Now for routing, there only is one proper use case you want to target right now and that is that a route

29
00:02:07.270 --> 00:02:08.370
is not found.

30
00:02:08.710 --> 00:02:17.320
So in our route set up here, our redirect route here which redirects to not found which loads the page not

31
00:02:17.320 --> 00:02:23.590
found component here in the end, here I will duplicate this and then comment it out so that I have the

32
00:02:23.590 --> 00:02:25.130
code stored. Here

33
00:02:25.170 --> 00:02:33.370
I now want to use the brand new error page component, so this error page component which was generated

34
00:02:33.370 --> 00:02:38.830
by the CLI and for which you should add an import here. Of course you should have also added this to

35
00:02:38.830 --> 00:02:45.060
your main app module if the CLI didn't do this automatically for you here and the import too.

36
00:02:45.190 --> 00:02:50.190
So with this, we're now loading this not found page or excuse me, this error page

37
00:02:50.260 --> 00:02:53.220
if we target the not found route.

38
00:02:53.260 --> 00:02:56.460
Still, the issue is that

39
00:02:56.500 --> 00:03:00.660
here we try to output some message which we haven't gotten here.

40
00:03:01.060 --> 00:03:08.260
Now we could reach this page through different hooks but or for different errors but for each error,

41
00:03:08.410 --> 00:03:10.130
there is only one message.

42
00:03:10.330 --> 00:03:18.370
So in our app-routing.module, we know that if we have the not found route and therefore, a not found error, we

43
00:03:18.370 --> 00:03:26.070
will always display the same error message and we can pass such static data with the data property here.

44
00:03:26.220 --> 00:03:33.330
The data property allows us to pass an object here and in this object, we can define any key-value pairs,

45
00:03:33.400 --> 00:03:35.160
any properties we want,

46
00:03:35.260 --> 00:03:39.420
like for example our message which is Page Not Found.

47
00:03:39.500 --> 00:03:44.170
Now again, you might say if I define it statically here and we will soon fetch it in the error page,

48
00:03:44.170 --> 00:03:46.370
why don't I define it there to begin with?

49
00:03:46.480 --> 00:03:48.510
Because we might resue this error page.

50
00:03:48.510 --> 00:03:54.070
Maybe we got another route reaching this where we want to display a different error or we have a different

51
00:03:54.070 --> 00:03:56.980
logic in our application which might render this page.

52
00:03:56.980 --> 00:04:03.280
So again, it might be reusable but for each use case, there is a specific data for the specific message

53
00:04:03.280 --> 00:04:04.120
we want to pass,

54
00:04:04.120 --> 00:04:06.270
like the page not found message here.

55
00:04:06.580 --> 00:04:14.260
So with this, we now want to retrieve that whenever we load our error page component and for this, like

56
00:04:14.260 --> 00:04:15.780
params, like query params,

57
00:04:15.850 --> 00:04:17.770
we need the active route.

58
00:04:17.830 --> 00:04:20.830
So let's inject our ActivatedRoute here,

59
00:04:20.830 --> 00:04:23.910
make sure to import it and in ngOnInit,

60
00:04:24.160 --> 00:04:32.200
I can then again either assign it by using the snapshot of this route and then simply a data object

61
00:04:32.290 --> 00:04:34.220
where I can now access message

62
00:04:34.300 --> 00:04:39.340
and of course I have to make sure that this property exists and we do make sure because we know we can

63
00:04:39.340 --> 00:04:44.920
only reach this component through this route where we will have this message property set.

64
00:04:45.070 --> 00:04:49.170
So this is the way of using it with its snapshot work

65
00:04:49.180 --> 00:04:51.020
or just like with params or query params,

66
00:04:51.040 --> 00:04:57.760
if this could possibly change while you still are on this page, you want to use your route and here, the

67
00:04:57.760 --> 00:05:04.720
data observable to which you subscribe and which will give you this new data object here of type

68
00:05:04.720 --> 00:05:10.750
data, some dummy data type you can import from @angular/router which will in the end give you access to

69
00:05:10.750 --> 00:05:13.950
your data or the properties you defined there.

70
00:05:14.080 --> 00:05:18.350
So here, you could then also set it equal to data message,

71
00:05:18.370 --> 00:05:21.580
both would work depending on whether it may change or not,

72
00:05:21.580 --> 00:05:23.510
so yes, both should work.

73
00:05:23.530 --> 00:05:28.630
I will comment out the first use case here but again, if it doesn't change, the using the snapshot is

74
00:05:28.660 --> 00:05:30.470
absolutely correct or fine.

75
00:05:30.790 --> 00:05:36.310
So with this, we should now bind this and therefore if we save this and go back to our application, enter

76
00:05:36.310 --> 00:05:43.950
some invalid route here, we correctly see page not found, the static error message we passed with the data

77
00:05:43.960 --> 00:05:50.590
property and this is a typical use case whenever you have some static data you want to pass to a route.

78
00:05:50.770 --> 00:05:54.190
Now let's move on to some dynamic data in the next lecture.
