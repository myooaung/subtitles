WEBVTT
1
00:00:02.500 --> 00:00:06.570
I prepared a little project which you as always can find attached to this lecture here

2
00:00:06.880 --> 00:00:08.720
and it's a super simple project.

3
00:00:08.770 --> 00:00:10.960
We get a button where we can toggle

4
00:00:10.980 --> 00:00:15.940
to only see odd numbers but right now, we don't see any numbers because whilst

5
00:00:15.980 --> 00:00:19.990
I do have an array of numbers here in my app.component.ts file,

6
00:00:20.140 --> 00:00:21.440
I'm not outputting it here.

7
00:00:21.550 --> 00:00:24.160
However I did set up a list.

8
00:00:24.330 --> 00:00:25.170
So with this,

9
00:00:25.170 --> 00:00:29.740
why don't we go ahead and simply add ngFor with a star

10
00:00:29.740 --> 00:00:37.590
since it is a structural directive to this list item and then we could simply say let number of numbers, 

11
00:00:37.600 --> 00:00:42.730
we already learned this syntax and we could also extract the index if we wanted but we don't need that

12
00:00:42.730 --> 00:00:43.960
here.

13
00:00:44.080 --> 00:00:51.280
So that is our single number and that of course allows it to now output it here. We can output it anywhere

14
00:00:51.340 --> 00:00:54.560
inside this element we placed ngFor on,

15
00:00:54.580 --> 00:01:01.060
so on any nested elements too. With that, we're outputting the number and now we see 1, 2, 3, 4, 5,

16
00:01:01.060 --> 00:01:09.220
the button still doesn't do anything though. The reason for this is that right now we do

17
00:01:09.220 --> 00:01:10.340
something upon clicking,

18
00:01:10.360 --> 00:01:15.730
we set onlyOdd, which is this property, to what it currently is not,

19
00:01:15.760 --> 00:01:18.620
so if it was false, we set it to true and the other way around

20
00:01:19.000 --> 00:01:21.230
but we're not using this information.

21
00:01:21.280 --> 00:01:22.870
Let's use it.

22
00:01:22.870 --> 00:01:26.370
Now we could try placing ngIf on the same element

23
00:01:26.380 --> 00:01:31.980
we already have ngFor on and check if number modulo,

24
00:01:32.020 --> 00:01:40.660
so the percent sign too, if that is equal to zero, which would mean now we only display even elements,

25
00:01:40.660 --> 00:01:41.440
right?

26
00:01:41.980 --> 00:01:47.910
If we do this we get an error because we can't have more than one structural directive on the same element,

27
00:01:47.920 --> 00:01:49.400
that just doesn't work

28
00:01:49.480 --> 00:01:53.160
but we don't need that, we can change it differently,

29
00:01:53.230 --> 00:01:59.480
we can simply make a tiny change to our main app here and implement odd numbers

30
00:02:01.700 --> 00:02:04.410
which is 1, 3 and 5

31
00:02:04.760 --> 00:02:06.790
and then of course even numbers

32
00:02:06.860 --> 00:02:09.200
and that is just a demo app for directives,

33
00:02:09.200 --> 00:02:09.560
right?

34
00:02:09.590 --> 00:02:14.510
So that might not be the best solution for your app where you really need this behavior, later in the

35
00:02:14.510 --> 00:02:19.410
pipe section, we will learn how to dynamically filter an array for example.

36
00:02:19.490 --> 00:02:26.210
So here, even would be 2 and 4. With that, I'm going to comment out the first numbers array

37
00:02:26.360 --> 00:02:33.210
and instead here, I'll loop through all my odd numbers and output odd here

38
00:02:33.350 --> 00:02:36.870
and of course we can do the same for the even numbers now,

39
00:02:36.890 --> 00:02:40.440
so even of even numbers.

40
00:02:40.600 --> 00:02:43.650
And now to display only one of the two,

41
00:02:43.850 --> 00:02:49.300
we can simply wrap them in let's say a div,

42
00:02:49.340 --> 00:02:52.160
so let's put the list item inside of the div

43
00:02:52.400 --> 00:02:58.430
and on the div, we could place ngIf and now the first one should only be displayed if onlyOdd is

44
00:02:58.430 --> 00:02:59.600
true.

45
00:02:59.600 --> 00:03:02.320
Now let's do the same for the second one here,

46
00:03:02.450 --> 00:03:09.510
let's place them in here and we place ngIf on that too where we check if not onlyOdd and maybe also

47
00:03:09.530 --> 00:03:15.690
replace even here. We now see we can toggle between the two lists, so this is now working with ngFor

48
00:03:15.690 --> 00:03:16.870
and ngIf.

49
00:03:16.870 --> 00:03:18.880
Nothing new, something we already learned.

50
00:03:18.940 --> 00:03:23.320
So these are the two structural directives we learned about and how we may use them and that you can't

51
00:03:23.350 --> 00:03:25.070
combine them on the same element.

52
00:03:25.330 --> 00:03:31.810
Before we dive deeper into this, let's also have a look at the two attribute directives we learned

53
00:03:31.830 --> 00:03:33.940
thus far, two of the most prominent ones.
