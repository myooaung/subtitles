1
00:00:03,300 --> 00:00:09,760
So this is the page as we see it right now in the project we created at the end of the last section,

2
00:00:10,340 --> 00:00:18,340
an empty page here, Angular, The Complete Guide, we reach it at localhost:4200, this is where our development

3
00:00:18,340 --> 00:00:25,650
server hosted by the CLI or spun up by the CLI will host our Angular application.

4
00:00:25,750 --> 00:00:32,940
Now the content we see here can be changed by going to the app.component.html of file in our app folder

5
00:00:33,640 --> 00:00:40,810
and in here, we can output some text let's say I'm the app component here in a h3 tag, a normal

6
00:00:40,840 --> 00:00:41,730
HTML tag

7
00:00:41,740 --> 00:00:49,240
therefore. If we save this, we will see it here and it automatically has the bootstrap text style and so on

8
00:00:49,240 --> 00:00:52,600
because we added bootstrap at the end of the last section too.

9
00:00:52,990 --> 00:00:58,630
But whilst it might seem kind of obvious that we see it here, it is also kind of strange,

10
00:00:58,720 --> 00:01:05,800
how does our browser or how does the server hosting our app know that it should render the content of

11
00:01:06,160 --> 00:01:08,450
app.component.html here?

12
00:01:08,530 --> 00:01:13,690
You could argue it's the only component we have right now and we will take a closer look at component

13
00:01:13,690 --> 00:01:14,390
soon

14
00:01:14,740 --> 00:01:16,630
but that is not the reason

15
00:01:16,630 --> 00:01:20,730
and actually, this is not the file served by the server,

16
00:01:20,740 --> 00:01:27,120
instead the index.html file here is served by the server and remember that I told you that Angular

17
00:01:27,130 --> 00:01:31,080
is a framework which allows you to create single page application,

18
00:01:31,080 --> 00:01:35,710
this is the single page which is served, the index.html file.

19
00:01:35,710 --> 00:01:40,440
Now if you have a look at this file, we see this is a normal HTML file,

20
00:01:40,510 --> 00:01:45,130
we define the title we could see on the tab in the browser here

21
00:01:45,700 --> 00:01:48,350
and the body of this file is very interesting.

22
00:01:48,430 --> 00:01:54,580
Here we get this app-root thing with loading.... in between.

23
00:01:54,580 --> 00:01:58,260
Now clearly we don't see loading... here,

24
00:01:58,660 --> 00:02:07,300
so somehow this index.html file seems to have changed and it did, app-root here here of course is not a

25
00:02:07,300 --> 00:02:09,170
default HTML element,

26
00:02:09,280 --> 00:02:15,610
instead this is one of our own components. We will soon dive into how we create our own components but

27
00:02:15,620 --> 00:02:17,650
the CLI created one for us,

28
00:02:17,650 --> 00:02:23,170
the root component of our application, the component which will tie together our whole application in

29
00:02:23,170 --> 00:02:30,070
the end and all the files in the app folder here which have component in their name,

30
00:02:30,100 --> 00:02:33,490
so these files are related to this component.

31
00:02:33,490 --> 00:02:37,870
I will go into more detail about these files in one of the next lectures, for now let's take a closer

32
00:02:37,870 --> 00:02:41,710
look at the app.component.ts file, the TypeScript file here.

33
00:02:41,710 --> 00:02:47,170
Here you can see that we have this @component decorator, this seems to be important but more importantly

34
00:02:47,170 --> 00:02:55,030
right now, you'll see that there, we have this selector property which assigns a string as a value and

35
00:02:55,030 --> 00:02:56,370
this string holds

36
00:02:56,480 --> 00:03:01,990
app-root. Now this clearly is the same text as in our index.html file

37
00:03:02,080 --> 00:03:09,340
and this actually is the information Angular needed to be able to replace this part here in this index.html

38
00:03:09,340 --> 00:03:16,210
file with the template of this component, the component having this selector and the template

39
00:03:16,240 --> 00:03:22,210
on this component simply is the content here in this app.component.html file.

40
00:03:22,210 --> 00:03:28,120
Now whilst I will dive deeper into how to create components and how to configure them, this is what basically

41
00:03:28,120 --> 00:03:30,550
happens at the startup, though

42
00:03:30,670 --> 00:03:34,600
the missing information is how is Angular triggered,

43
00:03:34,720 --> 00:03:42,060
how is it kicked off to actually run over our body here of this index.html file?

44
00:03:42,460 --> 00:03:49,240
And the answer is in the final index.html file, getting served in the browser and we can verify

45
00:03:49,240 --> 00:03:54,570
this by inspecting the source code here, we got a couple of script imports at the end.

46
00:03:54,730 --> 00:03:57,920
These are injected by the CLI automatically,

47
00:03:57,970 --> 00:04:00,920
so that is why we don't see it here in the raw index.html

48
00:04:00,950 --> 00:04:07,270
file, here we don't have any script imports but whenever this ng serve process rebuilds

49
00:04:07,300 --> 00:04:10,870
our project, it will create bundles,

50
00:04:10,870 --> 00:04:17,530
Javascript script bundles and automatically add the right imports in the index.html file, a little

51
00:04:17,620 --> 00:04:19,760
convenience functionality for us.

52
00:04:19,930 --> 00:04:28,090
So in the final file, these script imports here are present and these script imports will contain our own code

53
00:04:28,140 --> 00:04:35,820
too. So these script files are therefore executed and they're actually the first code to be executed

54
00:04:35,860 --> 00:04:42,040
and that is just something you have to keep in mind, is the code we write in our main.ts file,

55
00:04:42,040 --> 00:04:43,500
that is why it's called main,

56
00:04:43,540 --> 00:04:46,120
this is the first code which gets executed.

57
00:04:46,360 --> 00:04:48,370
Let's have a closer look at it then.

58
00:04:48,550 --> 00:04:54,670
Here you see that we get a couple of imports, then we check if we are in production mode or not

59
00:04:54,700 --> 00:04:58,100
to basically turn off some warning messages I can tell you that

60
00:04:58,240 --> 00:05:08,090
but most importantly here, this line, this now bootstraps starts our Angular application by passing an app

61
00:05:08,090 --> 00:05:14,380
module to this method and app module refers to this file here.

62
00:05:14,630 --> 00:05:23,110
Now if we have a look at this file, here we actually see that somehow we kind of like with the component have

63
00:05:23,120 --> 00:05:25,200
this strange @ thing here,

64
00:05:25,220 --> 00:05:28,310
I will dive into this in a couple of lectures too

65
00:05:28,700 --> 00:05:34,970
but most importantly for now, here we get this bootstrap array which basically lists all the components

66
00:05:35,300 --> 00:05:42,800
which should be known to Angular at the point of time it analyzes our index.html file and here

67
00:05:42,890 --> 00:05:44,290
the circle closes

68
00:05:44,340 --> 00:05:47,840
because here, we reference our app component.

69
00:05:48,020 --> 00:05:52,800
So Angular gets started, this main.ts file gets started, there

70
00:05:52,810 --> 00:06:00,620
we bootstrap an Angular application and we pass this module as an argument. In this module, we tell Angular

71
00:06:00,740 --> 00:06:06,850
hey there is this app component which you know when you try to start yourself and Angular

72
00:06:06,860 --> 00:06:15,200
now analyzes the app component, reads the set up we pass here and therefore knows this selector, app-root

73
00:06:15,530 --> 00:06:22,220
and now Angular is able to handle app-root in the index.html file and it knows

74
00:06:22,400 --> 00:06:28,280
all right this is the selector I know, you told me that I should know it because it was listed in this

75
00:06:28,280 --> 00:06:31,440
bootstrap array in the app module, this component.

76
00:06:31,460 --> 00:06:37,610
So now I know that here I should insert the app component and the app component happens to have some

77
00:06:37,760 --> 00:06:46,060
HTML code, a template attached to it which is this h3 tag and this is how the Angular application starts here,

78
00:06:46,130 --> 00:06:48,970
this is why we see what we see.

79
00:06:49,190 --> 00:06:55,310
Now that was a load of information regarding the app startup but it's key to understand how this starts,

80
00:06:55,730 --> 00:07:01,880
with this information we can now proceed and dive deeper into how components actually work, what they

81
00:07:01,880 --> 00:07:07,880
are, how we can create our own ones and what this app module here does in detail.

82
00:07:08,090 --> 00:07:09,330
So let's move on.
