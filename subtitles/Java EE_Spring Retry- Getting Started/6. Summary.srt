1
00:00:00,774 --> 00:00:01,689
In this module,

2
00:00:01,689 --> 00:00:05,477
we added a basic Spring Retry implementation called

3
00:00:05,477 --> 00:00:09,558
RetryTemplate to SaaS Bass's existing RestTemplate client and

4
00:00:09,558 --> 00:00:12,633
saw just how easy it is to add retry.

5
00:00:12,633 --> 00:00:16,795
We then simulated the three pain points SaaS Bass is experiencing.

6
00:00:16,795 --> 00:00:20,816
Namely, socket exceptions, timeout exceptions,

7
00:00:20,816 --> 00:00:24,445
and resource race conditions to determine which are

8
00:00:24,445 --> 00:00:27,681
alleviated by adding basic Spring Retry.

9
00:00:27,681 --> 00:00:30,514
We determined that basic Spring Retry alleviated socket

10
00:00:30,514 --> 00:00:35,100
exceptions and timeout exceptions, but not resource race conditions.

11
00:00:35,100 --> 00:00:42,000
In the next module, we'll add custom retry policies, which will cover resource race conditions.

