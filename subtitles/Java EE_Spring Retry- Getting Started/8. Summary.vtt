WEBVTT
1
00:00:00.000 --> 00:00:02.603
In this module, we added custom retry policies,

2
00:00:02.603 --> 00:00:08.491
namely backoff policy and retry policy, to our default RetryTemplate.

3
00:00:08.491 --> 00:00:12.146
We compared fixed versus exponential backoff strategies and showed

4
00:00:12.146 --> 00:00:15.122
why exponential backoff is preferable in large,

5
00:00:15.122 --> 00:00:17.832
highly concurrent microservice environments.

6
00:00:17.832 --> 00:00:21.312
We then simulated the three pain points SaaS Bass is experiencing

7
00:00:21.312 --> 00:00:24.960
and determined that socket and timeout exceptions continue to be

8
00:00:24.960 --> 00:00:27.079
alleviated with custom retry policies,

9
00:00:27.079 --> 00:00:29.655
and that resource race conditions are now alleviated

10
00:00:29.655 --> 00:00:32.337
thanks to our custom backoff policy.

11
00:00:32.337 --> 00:00:33.125
In the next module,

12
00:00:33.125 --> 00:00:40.000
we're going to make SaaS Bass's retry framework even smarter by implementing custom exceptions.

