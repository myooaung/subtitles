WEBVTT

00:02.390 --> 00:06.620
So the goal is to compare Engler you and react.

00:06.620 --> 00:08.250
And here's one important thing.

00:08.330 --> 00:10.420
There is no single truth here.

00:10.430 --> 00:14.440
There is no best framework and there is no single way of comparing them.

00:14.450 --> 00:21.320
You might have Ivor points which are important to you which I don't show here but here are a couple

00:21.320 --> 00:22.390
of things.

00:22.400 --> 00:27.930
Questions topics I came up with which seem important to me and which seem relevant to me.

00:27.980 --> 00:33.560
If I were to choose which framework to dive in deeper and which framework to use in my next project

00:33.590 --> 00:35.450
or to learn to get a job.

00:35.810 --> 00:38.680
So we'll have a look at the learning curve and what's that.

00:38.690 --> 00:44.750
I mean not only how easy it is to get started with it though that is an important point but also how

00:44.750 --> 00:50.810
easy is it to then follow along to dive deeper to learn different concepts of this framework and to

00:50.840 --> 00:53.960
build small or medium sized and bigger apps.

00:53.990 --> 01:01.700
So the overall learning curve there after I want to have a look at how easy is it to use that framework

01:01.760 --> 01:08.270
in smaller applications or in multi-page applications where since you have multiple pages you can think

01:08.270 --> 01:11.560
of it as multiple smaller applications.

01:11.570 --> 01:17.510
Javascript will always only manage parts of the one page and then we have multiple of these pages which

01:17.510 --> 01:19.080
are not connected to Jabra.

01:19.130 --> 01:25.130
That is what I mean we're small too so not necessarily small in the sense of it doesn't do much but

01:25.130 --> 01:28.990
more in the sense of what we do with this framework on each page.

01:29.000 --> 01:30.600
That is what I mean with downscaling.

01:30.650 --> 01:34.370
How easy is it to drop it into an existing application.

01:34.430 --> 01:38.050
The opposite of course is upscaling or single page applications.

01:38.060 --> 01:44.480
How easy is it with that framework to create big enterprise level single page applications where javascript

01:44.480 --> 01:51.140
manages to complete Front-End that also might be a key factor in your decision making and we'll have

01:51.140 --> 01:53.300
a look at it for each framework.

01:53.450 --> 01:56.320
Of course all Also important is the performance.

01:56.360 --> 01:58.480
How does the framework perform.

01:58.520 --> 02:00.440
That includes the bundle size.

02:00.440 --> 02:02.480
So how much code do we produce.

02:02.480 --> 02:04.160
How much overhead Do we have.

02:04.160 --> 02:05.840
How big is the framework.

02:05.900 --> 02:10.280
Which code has to be downloaded by the browser but also runtime performance.

02:10.280 --> 02:15.920
How does it perform once the framework has been loaded and Nambour important point of course is the

02:15.920 --> 02:17.770
way from development to production.

02:17.780 --> 02:24.290
That might sound trivial but actually it's super important that the framework you work with gives you

02:24.290 --> 02:30.420
build tools and gives you a workflow you like and you feel is easy to use.

02:30.440 --> 02:37.430
It might be overly complicated to get a production ready application or it might not be possible at

02:37.430 --> 02:37.700
all.

02:37.700 --> 02:39.240
So that is something we'll have a look at.

02:39.260 --> 02:41.750
How easy is it to make that staps run.

02:41.780 --> 02:43.090
Yeah I'm working with it.

02:43.130 --> 02:47.810
I'm developing an app to it now really is optimized for production.

02:48.350 --> 02:53.930
And the final point I came up with is the popularity or the jobs perspective.

02:53.930 --> 02:55.780
How easy is it to get a job.

02:55.880 --> 02:58.190
How popular is a framework.

02:58.190 --> 02:59.570
How is it backed.

02:59.600 --> 03:01.630
Which companies are using it.

03:01.640 --> 03:06.740
So basically answering the question what will be the future of this framework.

03:06.740 --> 03:08.660
Is it worth learning it.

03:08.660 --> 03:10.520
These are all the points I came up with.

03:10.520 --> 03:13.990
Again there might be Ã¼ber points which seem more relevant to you.

03:14.060 --> 03:20.090
Pigsties points give you a pretty clear impression on how the framework performs and that of course

03:20.090 --> 03:22.280
is up to you to weigh these points.

03:22.340 --> 03:25.750
Is it important to you that you can create single page applications with it.

03:25.760 --> 03:29.480
Maybe that's not your goal so then maybe that point is irrelevant to you.

03:29.480 --> 03:36.170
So take this list as a critical starting point of evaluating the framework on your own.

03:36.320 --> 03:37.760
But enough of the talking.

03:37.850 --> 03:41.040
Let's start filling out that list in the next lecture.
