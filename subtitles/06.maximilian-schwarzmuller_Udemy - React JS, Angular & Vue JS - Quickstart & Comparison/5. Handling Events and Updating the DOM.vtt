WEBVTT

00:02.840 --> 00:05.480
In the last lecture we added some dynamic content.

00:05.600 --> 00:09.170
Our very large output here with the single quotation marks.

00:09.380 --> 00:14.300
Now a typical use case would be that we want to change this name just like we did in the future.

00:14.300 --> 00:14.800
Yes.

00:14.810 --> 00:20.630
Example for days we could expand our element and keep in mind that I told you that you always have to

00:20.630 --> 00:24.000
have one rapping element so that could be a diff.

00:24.020 --> 00:27.140
And now in this day if we want to have a paragraph and a button.

00:27.380 --> 00:32.470
Now if you want to write this multiline you actually have to enclose it in normal parentheses.

00:32.630 --> 00:36.740
Dan you may split this up over multiple lines now in there.

00:36.830 --> 00:43.310
We could have our paragraph where we output the name and then you could say well we want to have a button

00:44.090 --> 00:49.670
where I say change name and now as someone changed the name now to this button we want to hear the click

00:49.670 --> 00:50.210
listener.

00:50.240 --> 00:52.120
And we do that by simply writing on click.

00:52.190 --> 00:55.290
So basically normal HVM code.

00:55.310 --> 01:01.550
However on click camel case with a capital C and we also don't pass a string here where we would then

01:01.550 --> 01:08.470
reference some function name we want to execute but we use single curly braces like with name.

01:08.480 --> 01:12.190
We want to do something dynamic one a reference something there.

01:12.230 --> 01:21.050
So here I can now call a function that's maybe name ID function change a name here and then that function

01:21.060 --> 01:22.370
I want to change my name.

01:22.370 --> 01:27.360
Saul turned us to left and that's just the E6 version of larder with some extra features.

01:27.390 --> 01:33.710
Again dive into iOS 6 course if you want to learn more about ESX or just use Vohra for now if you don't

01:33.710 --> 01:39.470
see the confortable using constant Latt lad how ever allows me to change the name so we could know same

01:39.530 --> 01:43.840
name equals an A LIKE DAT and then you're in on klick.

01:43.880 --> 01:44.880
I could execute.

01:44.930 --> 01:46.460
Change name.

01:46.460 --> 01:54.360
If I hit Control Enter now to rerun this and I open the console and it click Change name it doesn't

01:54.360 --> 01:54.720
change.

01:54.720 --> 01:59.940
But we also don't get an error so it looks like that should work.

02:00.300 --> 02:02.800
But then again it doesn't we don't get an error.

02:02.850 --> 02:05.210
However if I follow an alert here.

02:05.340 --> 02:06.800
Hi there.

02:06.810 --> 02:11.520
In this function and had control entry again we see that this function gets executed.

02:11.550 --> 02:18.790
So that's working but why don't we see the name being updated in our dorm.

02:19.090 --> 02:26.220
Because now that's a key take away the things you render to the Dom the element here is immutable.

02:26.220 --> 02:30.810
Which means once we called re-act Dom render we can't change it thereafter.

02:30.870 --> 02:36.060
Well we can change it but it won't be reflected we can change the name but that won't be reflected in

02:36.060 --> 02:36.980
the dawn.

02:37.020 --> 02:43.320
Now on a first side that sounds like a bad idea for a javascript framework because if there is one reason

02:43.320 --> 02:47.560
why we use it then certainly not because we want to have static HDMI content.

02:47.580 --> 02:50.910
We don't need javascript for debt do we.

02:50.910 --> 02:55.320
However you will learn that we can indeed update the dorm with react.

02:55.320 --> 02:57.750
It just doesn't work like that.

02:57.780 --> 03:03.460
Instead components play a key role in A react J.S. application.

03:03.480 --> 03:09.030
Even more important then in future years where we could create a basic app without any components just

03:09.030 --> 03:12.660
with the view instance in react we quickly hit a wall.

03:12.660 --> 03:14.300
We do so already.

03:14.490 --> 03:21.350
And the thing is the problem is we need to call react on render again to update the DOM again.

03:21.360 --> 03:22.460
Now we can do that.

03:22.470 --> 03:26.340
But of course that's not really the most convenient thing.

03:26.580 --> 03:34.560
What we can do is we can simply copy all that code creators element here again and if we now control

03:34.560 --> 03:41.070
entry click Change name it updates and only updates as part of the Dharma's as you can see if you inspect

03:41.070 --> 03:41.850
this.

03:41.850 --> 03:49.530
So if we rerun this that are back to Max year inspectors watch it here on the right you'll see only

03:49.530 --> 03:54.030
the paragraph got changed not the button so it didn't render everything.

03:54.240 --> 03:56.050
But I'd jury the paragraph.

03:56.220 --> 03:58.790
But of course that's not the really nice code here.

03:58.830 --> 04:04.700
Having to call react on render at the end of each function where you want to change something and then

04:04.700 --> 04:13.080
having to re set the whole HVM all code certainly is not how we want to write our apps so we need a

04:13.080 --> 04:14.340
better way of doing so.

04:14.340 --> 04:17.080
And as mentioned components are the solution.

04:17.100 --> 04:20.040
So let's take a closer look in the next lecture.
