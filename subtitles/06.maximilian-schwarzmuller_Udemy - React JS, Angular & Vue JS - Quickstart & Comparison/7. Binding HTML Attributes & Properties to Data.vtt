WEBVTT

00:03.030 --> 00:08.080
Over the last lectures we learn a lot about the core features of view chairs and that is amazing.

00:08.400 --> 00:14.890
But there is one use case we haven't covered yet we learned how we can output something here with the

00:15.060 --> 00:17.800
curly braces for element for example.

00:18.000 --> 00:19.830
Let me make a little bit broader.

00:19.830 --> 00:21.820
So here we learnt this syntax.

00:22.080 --> 00:29.910
But what if we actually don't want to output some text but we want to dynamically set some HVM attribute

00:29.940 --> 00:31.790
or property in general.

00:32.130 --> 00:36.150
So you've were a list item and I'm just splitting this over multiple lines to make it easier to read.

00:36.150 --> 00:38.460
I'm still on the list item here.

00:38.480 --> 00:39.290
Let me add this.

00:39.300 --> 00:40.370
And here again.

00:40.620 --> 00:47.430
So on this list item let's say I want to add an ID to it.

00:47.430 --> 00:50.500
And this idea of course shipbuilder namak too.

00:50.610 --> 00:58.590
Now we could have an idea which is something like element and then maybe we'll call it bracers element

00:58.590 --> 00:59.700
here.

01:00.000 --> 01:02.460
And let's name this L to avoid confusion.

01:02.520 --> 01:09.030
So element between the braces should refer to the number increasing number we're storing in disarray.

01:09.030 --> 01:14.640
However Vahid control enter U.S. This works but we get an error.

01:14.640 --> 01:17.680
If we open the console.

01:18.150 --> 01:25.200
The reason for this is that with the curly braces syntax we can really just output text and we can't

01:25.260 --> 01:26.650
output text here.

01:26.790 --> 01:34.800
When we bind to an attribute However there is an easy way of fixing this instead of setting the element

01:34.830 --> 01:36.670
value like this.

01:36.780 --> 01:38.540
We can use a number directive.

01:38.760 --> 01:48.330
The bind which tells you chess hey I want to bind some property or attribute office HVM l element to

01:48.330 --> 01:55.110
a dynamic value non dynamic would be hardcoded like with an existing Id like just one.

01:55.120 --> 02:01.950
This is hard code it doesn't change dynamic with the bind it works like this we have that directive

02:02.100 --> 02:05.560
and just like with the on we now have to tell you chess.

02:05.600 --> 02:06.000
OK.

02:06.030 --> 02:09.830
Which element or which property do you want to bind.

02:09.840 --> 02:11.310
We do this with a colon.

02:11.370 --> 02:17.640
And then the name of the attributes here ID does is one important implication whatever we have between

02:17.700 --> 02:25.650
quotation marks here is now analyzed by the U.K.'s and it will try to find a method or a data property

02:25.650 --> 02:29.110
in our view instance which matches whatever we write.

02:29.130 --> 02:32.810
But when there or basically it will try to resolve this.

02:32.820 --> 02:39.180
If we had some shallow strip code between quotation marks that would work to L-1 won't work because

02:39.180 --> 02:45.220
that's never a data property nor a method nor valid Javascript code.

02:45.390 --> 02:51.630
But what I can do now is I can add a string with single quotation marks because a string again is valid.

02:51.630 --> 03:00.590
Javascript code which could be l den plus to concatenate the string and then output element an element.

03:00.600 --> 03:08.430
Now we'll refer to this variable in our loop here because again it's resolved dynamically by the U.K.'s.

03:08.640 --> 03:14.400
And if we do this and open up the developer tools and hit Control enter clear to console to get rid

03:14.400 --> 03:19.370
of the old error and we hit a new element we see no error anymore.

03:19.670 --> 03:26.130
And if we inspect the element we indeed see that we got dynamic IDs here.

03:26.130 --> 03:34.530
So with the bind we can bind to properties attributes of h m l elements which is not possible with the

03:34.530 --> 03:36.270
curly braces syntax.
