WEBVTT

00:02.280 --> 00:09.660
I will add future to this appier if Chance is one of the easiest to get started with framework's which

00:09.660 --> 00:10.990
is why I chose it here.

00:11.130 --> 00:16.840
But later in the course we will have a look at re-act an angle or two and also a lot more at Meucci

00:16.850 --> 00:18.900
us here we will quickly dive into it.

00:18.900 --> 00:22.900
Later we'll have a section where we take a closer look at butis.

00:23.280 --> 00:25.510
Let's visit you art work.

00:25.590 --> 00:32.860
And here we can click on get started to get started but then we can choose installation to install it.

00:33.030 --> 00:35.210
And I still want to use a CDN here.

00:35.370 --> 00:41.880
So what we can do is we can simply right click on this link here and copy the link address to take the

00:41.970 --> 00:50.190
Cdn from unpackaged year giving us this link the latest version of you automatically and I will replace

00:51.470 --> 00:53.950
shake where you with it not load Esch.

00:53.960 --> 00:59.060
I still wanted unique ID but it will replace Cheikh query and they will say something about that replacement

00:59.060 --> 01:02.340
of Cheikh where you can not load Eshe later.

01:02.670 --> 01:03.350
Whoops.

01:03.390 --> 01:06.420
Let's turn this into a valid script tag again.

01:08.270 --> 01:15.260
So this now is the import of the U.K.'s and d loaded link here fixed.

01:16.390 --> 01:25.410
Now let's use view Chasse using DHS works totally different than using Cheikh we were just the reason

01:25.410 --> 01:26.580
why I replaced it.

01:26.690 --> 01:33.690
Lowder's doesn't interfere with our dorm which is why I still use load Esch but all the DOM manipulation

01:33.750 --> 01:35.600
will now be handled by future as.

01:35.610 --> 01:37.810
Which is why I removed Cheikh were you.

01:37.920 --> 01:42.890
We shouldn't have multiple libraries or frameworks doing the same thing.

01:42.930 --> 01:48.720
So if Cheikh where he interacts with the dawn and view Chasa as he will see the second does the same.

01:48.900 --> 01:51.370
Chances are we will mess things up.

01:51.420 --> 01:58.740
So as a rule of thumb if you're using a framework like angular react or view don't use Cheikh we might

01:58.740 --> 02:04.800
be hard at the beginning but really embraced the structured framework gives you and then stick to it

02:05.160 --> 02:11.130
and don't use Avar libraries not just Shakeri but that's the most prominent one which manipulates on

02:11.130 --> 02:17.970
to other libraries which do different things like loading Stasia giving the utility functions in javascript

02:17.970 --> 02:24.060
only are totally fine to use but accessing the DOM Datchet should only be done by one thing but one

02:24.060 --> 02:25.330
framework.

02:25.350 --> 02:30.510
After talking let's go back to view chess and let's understand how it works.

02:30.630 --> 02:33.950
View chess works with templates.

02:33.960 --> 02:39.750
That means that it basically needs a template for the actual age to Humala code.

02:39.750 --> 02:41.760
It will then create.

02:41.790 --> 02:49.260
We already have HTL code and we can tell you just use this as a template by wrapping it in a div for

02:49.260 --> 02:57.190
example taking all that code and putting it into that div So like this let me tidy this up and then

02:57.190 --> 03:03.460
I'll give Dave an idea of app you can choose any other ID that's totally up to you will we will need

03:03.460 --> 03:05.160
it in a second though.

03:05.350 --> 03:09.220
So now we have our team looking at almost the same as before.

03:09.280 --> 03:18.040
Now in javascript I will remove that code later but I will start simple by using View and keep in mind

03:18.070 --> 03:19.770
we added the import.

03:19.780 --> 03:26.950
So what I can do here is I can say new view to create a new view instance tell us how you chairs works

03:27.400 --> 03:30.150
and then we pass a javascript object to configure it.

03:30.310 --> 03:33.510
So that's basically initialises Mujeres you could say.

03:33.820 --> 03:36.120
And now we can work with it.

03:36.280 --> 03:39.040
There are two that object we can set a couple of properties.

03:39.040 --> 03:45.720
The first important one being the L property where we tell you chairs Hey over which part in our HDL

03:45.820 --> 03:47.720
code should you take control.

03:47.740 --> 03:50.190
So which part should you take as a template.

03:50.200 --> 03:51.490
We can work with.

03:51.790 --> 04:00.390
And here we use a normal C-s as selector for example hash tag app to select this whole day of year distaff.

04:00.540 --> 04:02.830
Now this is under control of view chess.

04:02.830 --> 04:11.770
Now you can say and now we want to add the same functionality we had before making the Spartan clickable

04:11.920 --> 04:19.330
and adding and removing elements now since we use a framework and we control this part of HDMI while

04:19.780 --> 04:22.270
we can use special commands in HDMI.

04:22.270 --> 04:25.900
Because again keep in mind this part is controlled by the U.K.'s.

04:25.930 --> 04:33.070
So whilst HMO while the browser won't understand our Command's view chase will and it will basically

04:33.070 --> 04:35.140
replace the commands with code.

04:35.140 --> 04:41.620
The browser does understand before the code hits the browser so we can add a click listener for example

04:41.620 --> 04:46.640
and we can do this by using vi on colon.

04:46.750 --> 04:49.380
Click here now v on.

04:49.380 --> 04:53.240
Is that directive command understood by View.

04:53.260 --> 04:54.210
Yes.

04:54.460 --> 05:00.800
And the think after the colon is an event you want to listen to because of the on the command tails

05:00.820 --> 05:06.720
view Chia's please react to event and event is then passed as an argument here after de colon.

05:06.730 --> 05:13.310
So this basically sets up a click listener you could say and here I want to execute at two.

05:13.480 --> 05:16.770
However this won't target our function here.

05:16.780 --> 05:25.690
Instead we have to stay in that view chess world does view object we passed to the view instance has

05:25.690 --> 05:31.180
a number property view chess understands and we can't add any properties here it has to be properties

05:31.210 --> 05:33.540
Mujeres knows more about this in the future.

05:33.540 --> 05:40.990
A section later and of course the methods property for example now methods here allows us to add our

05:40.990 --> 05:45.040
own methods like add to do which is just a function.

05:45.040 --> 05:50.580
So that's a normal javascript object we have here with a function now as a property to do.

05:50.770 --> 05:54.290
And this is now what this click listener will refer to.

05:54.430 --> 06:02.010
Now this is how we can now add a to do and to manage a list of to do is I need to add a number property

06:02.010 --> 06:05.030
to give view instance the data property.

06:05.190 --> 06:08.250
So where methods allows us to register our own methods.

06:08.280 --> 06:14.610
We can call from ever to darm or any other place in the view code your data allows us to set up some

06:14.610 --> 06:14.900
data.

06:14.910 --> 06:16.600
We want to work with an hour app.

06:16.950 --> 06:24.510
So here I will add a javascript object as data and then we'll add to do's as a property which is an

06:24.510 --> 06:25.630
empty array.

06:25.650 --> 06:31.390
So this is kind of similar to to do is down there but now not a variable just a property in this object.

06:31.470 --> 06:37.710
We set up as data of our view instance which just to bring this back in memory is all we're working

06:37.710 --> 06:42.610
with right now because the view is now taking control over our edge old code.

06:43.200 --> 06:47.520
So here in at Due's we can therefore now create a new to do.

06:47.580 --> 06:50.420
So we can still save our new to do.

06:50.670 --> 07:00.180
Basically we can chest copy the code we have here and add it to add and you to do we also probably still

07:00.180 --> 07:03.900
want to validate if the user did enter something valid.

07:03.930 --> 07:12.000
So two four days we need to check if our input element here holds valid coat and we can get access to

07:12.060 --> 07:14.570
this input what the user entered with.

07:14.570 --> 07:21.650
We model now with we model we can bind this to some data property here.

07:22.010 --> 07:26.820
So your this can be user input which is an empty string initially.

07:26.990 --> 07:29.380
And here I will now pass user input.

07:29.510 --> 07:36.110
And what this does is for input elements the model will automatically fetch whatever the user entered

07:36.110 --> 07:45.140
as a value and pass it to some property in that data property here which we defined between quotation

07:45.140 --> 07:45.650
marks.

07:45.680 --> 07:47.760
So we set up this link here.

07:48.350 --> 07:54.930
So once we get this value automatically in this function we can simply check Well basically do the same

07:54.930 --> 07:57.420
with that for user input.

07:57.890 --> 08:06.110
If user input and return if this is not valid however a user input like this won't work because we don't

08:06.110 --> 08:08.850
have a variable named user input at this point of time.

08:09.080 --> 08:16.420
But with this user input viewer chicest automatically gives us access to this new instance.

08:16.520 --> 08:22.670
And this might look a bit magic if you are experienced javascript developer because this can be tricky

08:22.670 --> 08:31.070
in javascript but UK has to make sure that this will actually always refer to the instance and give

08:31.070 --> 08:37.550
us access to all the methods and properties or all the data properties we added to this instance with

08:37.550 --> 08:40.000
the data or methods objects.

08:40.160 --> 08:45.560
So a bit magic here but that is what frameworks like view are about.

08:45.560 --> 08:50.560
So now this gives us access to user input allows us to check that allows us to create a new to do.

08:50.690 --> 08:58.100
And therefore allows us to use district views to access our traduce here and then push to push it new

08:58.130 --> 09:01.420
to you on this array of tattoos.

09:01.430 --> 09:03.650
Now this adds a new to you.

09:03.950 --> 09:11.750
Now let's also show this to you in our unordered list and here we again work an HMO code since again

09:11.750 --> 09:13.650
this is under control of the future.

09:13.660 --> 09:14.600
Yes.

09:14.780 --> 09:18.400
And then we can add a list item which is what we want to end in the end.

09:18.440 --> 09:25.790
And now another directive and Navier command beauteous will understand before which allows us to loop

09:25.790 --> 09:27.500
through some items.

09:27.500 --> 09:35.510
And here I want to loop through my two Jews so I can say to do in two deuse what this will do is to

09:35.510 --> 09:41.840
do us will automatically refer to our data property just like the model user input referred to our user

09:41.840 --> 09:48.970
input and to do is just Ela variable which will take the current to do for each iteration.

09:49.460 --> 09:56.420
And now we can use numbers syntax double curly braces which again is understood by the chess which allows

09:56.420 --> 09:59.320
us to output the individual to do text.

09:59.360 --> 10:06.140
So to do is a javascript object does would be to do value to you would refer to the individual object

10:06.140 --> 10:12.250
in our array and objects have this format and value therefore is whatever be entered.

10:12.350 --> 10:15.730
This code will already output new Tutu's.

10:15.770 --> 10:22.830
So let's now get rid of all the average value of code everything and at the end of ETA do let's all

10:22.860 --> 10:25.990
a console log does to do.

10:26.040 --> 10:31.950
However we have to have some valves in there if we see something here because Alber wise since we nube

10:31.950 --> 10:34.440
fruit juice we wouldn't see anything.

10:34.530 --> 10:38.450
For now we control enter open the console and clear it to see any errors.

10:38.460 --> 10:45.780
Let's add by Molik and click add to do and we get an error because of course they closed console here

10:46.260 --> 10:47.880
when we assigned the value.

10:47.880 --> 10:53.660
This also has to be this user input just as in to check here we have to refer to the user input.

10:53.670 --> 10:59.920
We created a data which will stand for automatically added to the overall view instance future has created.

10:59.940 --> 11:04.720
So it does if we now had control enter and I opened the console.

11:04.770 --> 11:08.860
Let's clear this and let's say by mulk now.

11:09.360 --> 11:11.880
And now you see Bimal was added.

11:11.880 --> 11:19.770
And if we say answer questions here you see this works and we've got our array.

11:19.800 --> 11:24.270
You may ignore does observer object in the parade that's added by you chest to do some of that magic

11:24.720 --> 11:33.840
but mainly you see that our to do here were added with IDS and of course their original values.

11:33.870 --> 11:38.550
That is what Mujeres does and you already saw that the array looked a bit different that we had some

11:38.550 --> 11:40.370
of this view magic in there.

11:40.620 --> 11:47.970
And this is a much easier way of managing our code much more understandable and we don't have to create

11:48.030 --> 11:49.790
all these elements manually.

11:49.800 --> 11:54.250
Instead we now have view chairs doing all of that for us.

11:54.360 --> 11:59.950
It gets especially easy if we not also add the functionality to remove the elements.

12:00.030 --> 12:06.360
All we have to do for this is add a number click listener to the list item and you just automatically

12:06.360 --> 12:15.690
added for every new list item it automatically generates we on click here where I say remove to do just

12:15.690 --> 12:22.560
like that and the only thing I have to do here is I have to pass to to do as an argument to remove to

12:22.560 --> 12:27.560
do now with Dad we can add a new method remove to do.

12:27.780 --> 12:34.640
And I know that I will get d to do what should be removed as an argument as I just passed this year.

12:35.040 --> 12:41.730
And with that what we can do is I can extract the idea to do Daut idea because again to do as simply

12:41.730 --> 12:44.280
an object of this type.

12:44.530 --> 12:51.090
And now I can reach out to my array of to do with a for loop to remove it.

12:51.100 --> 12:57.280
So a year I can again use var equals zero loop until we reach the end of.

12:57.490 --> 13:07.140
To do so as long we are within the length of that increment here and then simply check if to do is fix

13:07.500 --> 13:19.040
this to reduce by ID equals the IDB retrieved here and then if we find one use this to Dewes splice

13:19.550 --> 13:22.610
to remove this element the same code as before.

13:22.610 --> 13:28.250
Just put this in front of to do's and then also break out of this loop.

13:28.610 --> 13:35.540
Now we don't need to add any code to remove the element because now see for yourself if we open up the

13:35.540 --> 13:45.530
developer tools here and I enter by milk and then answer questions for click on answer questions it

13:45.530 --> 13:53.180
is removed and that is because you now only work with the data with your logic and the presentation

13:53.180 --> 13:56.240
and the dorm is handled by View chairs automatically.

13:56.440 --> 14:02.150
Since we loop through all the to do is here and replicate this list item as often as we need to have

14:02.150 --> 14:08.150
to to do being output to the DOM view chess will also recognize if we remove elements from this array

14:08.150 --> 14:14.060
we use here and then remove the elements from the DOM automatically and that is the great advantage

14:14.240 --> 14:15.620
of frameworks.

14:15.680 --> 14:21.080
You don't have to do that fine grained management of elements in a dorm you don't have to write a dom

14:21.080 --> 14:22.320
access view.

14:22.350 --> 14:23.630
Yes we'll do this for you.

14:23.660 --> 14:28.820
We'll even do it in a very efficient way for you so that you have a great chance of getting better performance

14:28.820 --> 14:32.980
than with your code and you can really focus on your business logic.

14:33.200 --> 14:39.080
And this I think is a very clean code very understandable and we will of course dive a little bit deeper

14:39.080 --> 14:45.970
into view as and how it works in the later section where we focus entirely on beauteous and then we

14:45.970 --> 14:52.430
will also do the same for angular and react so that you get a great feeling on which framework you may

14:52.430 --> 15:00.610
like to most but I hope that sample already shows by using a framework like view might be a great idea.
