WEBVTT

00:02.650 --> 00:08.350
In the last lecture we enter the functionality so that we can remove list items.

00:08.410 --> 00:15.220
That's nice but in a typical use case we probably also want to store an array of to use in javascript

00:15.580 --> 00:21.220
so that we don't just change to a dorm and add and remove items but we also have an array of of all

00:21.220 --> 00:25.920
our to use because probably want to do something with our to do isn't Javascript.

00:25.990 --> 00:31.770
So I typically use case would have would be to have to use array in javascript which is empty initially.

00:32.260 --> 00:38.120
And whenever we add a new to do here after we checked if the user entered something valid.

00:38.500 --> 00:45.850
Well in this case I could create a new to do here give it any name you like of course and that could

00:45.850 --> 00:50.890
be a javascript object where we have to value the user entered.

00:50.950 --> 00:59.410
So user input here but maybe also some unique ID so that we have something to identify ID to do boy.

00:59.670 --> 01:06.370
So we might have id property and now I will use Moff random and this is not truly a unique ID.

01:06.370 --> 01:11.470
I am aware of this does its just a random number and the chances are high that it will differ from the

01:11.470 --> 01:14.510
last one but it is not necessarily unique.

01:14.650 --> 01:16.520
It will do for now though.

01:16.990 --> 01:18.940
So that is our new to do.

01:19.030 --> 01:27.430
We can now push this new to do on our list of our off to use on our array of to use the issue we now

01:27.430 --> 01:33.260
have is if we remove it to do it's easy to remove the element a list item.

01:33.430 --> 01:36.820
But how do we find out which ID does list item head.

01:36.820 --> 01:42.000
We don't store this information in the dorm but the dorm is the only thing we access here.

01:42.010 --> 01:44.400
We just get the element we want to remove.

01:44.620 --> 01:47.310
So we need to store the ID in the dorm here too.

01:47.590 --> 01:49.180
One possible way.

01:49.630 --> 01:58.340
So what I can do is before appending this to do list item I will reach out to it and use the data that

01:58.360 --> 02:01.690
property to use this data attribute we can fill.

02:01.720 --> 02:08.320
We can populate with our own data with our own custom attributes so to say.

02:08.710 --> 02:17.050
And then there I want to store Id set my ID data property or attribute I should say and set it equal

02:17.050 --> 02:22.050
to new to do IDs or to do the ID we generated here.

02:22.060 --> 02:30.520
Now this gets stored in the dorm and I can show you this if we reload this and say Boy milk and then

02:30.580 --> 02:32.330
select discrete element.

02:32.410 --> 02:35.670
It does have this data id attribute here now.

02:36.160 --> 02:37.410
Now we can use that.

02:37.420 --> 02:46.510
You're in the Remove to do code before we actually remove it to get the item id by accessing the clicked

02:46.540 --> 02:48.930
Elyot and then dataset ID.

02:48.940 --> 02:50.630
So just where we store that here.

02:50.860 --> 02:55.480
Now with that Id fetched we can now loop through all the to do is an hour to do the array.

02:55.540 --> 02:59.540
So let's start at the first element with index 0.

02:59.800 --> 03:06.030
Let's loop as long as we are well within the scope within the length of this to do is array and let's

03:06.040 --> 03:16.040
increment I offer each iteration and then we can simply check if two Doo's i.e. ID.

03:16.080 --> 03:20.910
Keep in mind the elements in to do this are just elements of this type your objects of this type.

03:20.910 --> 03:28.760
So we will have the ID property if the ID is equal to the item ID.

03:28.870 --> 03:39.780
If this is the case then I want to call splice on to do is to basically remove the element and I don't

03:39.780 --> 03:44.960
want to splice start splicing at the position I splice one element.

03:45.390 --> 03:51.260
And thereafter I will call break to X exit out of my loop here.

03:51.330 --> 04:01.900
So now to see if that works let's console lawk are to do is aere at the end of add two and a D and all

04:02.210 --> 04:04.070
removed to do here.

04:04.290 --> 04:10.620
And if we now add control enter and I'll pop the console to see if we got any errors if I add by Malke

04:11.630 --> 04:14.410
and answer questions here.

04:14.440 --> 04:18.560
We seem to be adding objects to that array that looks good for now.

04:18.560 --> 04:23.550
Click on bimetallic only one object left and that is actually answer questions.

04:23.600 --> 04:25.520
And now the array is empty.

04:25.580 --> 04:32.570
So dad is working and that's the finished javascript code for now that's the finished application with

04:32.900 --> 04:34.920
a lot of code already.

04:34.970 --> 04:38.220
So let's analyze this and find out how we could improve it.
