WEBVTT

00:02.450 --> 00:07.740
So in the last lecture we learn how we can use conditionals with re-act just using normal Javascript

00:07.740 --> 00:08.310
code.

00:08.460 --> 00:10.090
And it's the same for lists.

00:10.090 --> 00:17.220
Therefore let's say we have never stayed here and add a new elements property to it which is an empty

00:17.220 --> 00:18.750
array initially.

00:18.750 --> 00:24.570
Now I will add a new method and or change name but add element maybe.

00:24.870 --> 00:28.040
And then there I now want to change this state.

00:28.050 --> 00:34.380
So I will call set state again pass a javascript object and I only want to change the elements here

00:34.380 --> 00:34.920
now.

00:35.070 --> 00:43.630
So I will set elements equal to you and now I can access my old elements so this state elements and

00:43.630 --> 00:48.290
I will actually cut this and store it in a constant year.

00:48.420 --> 00:57.330
So elements like does this state elements so that I can now just Xs are all named as old elements to

00:57.330 --> 00:58.550
be more precise.

00:58.710 --> 01:04.770
So I can now access old elements and I can call the concat method a normal javascript array function

01:05.130 --> 01:09.160
to add an element to this array and get back a new array.

01:09.210 --> 01:14.400
So not push this would change the old array I don't want to do that and want to change the state in

01:14.400 --> 01:15.840
an immutable way.

01:16.020 --> 01:19.260
So concat and Steelman and gives me back a new array.

01:19.420 --> 01:25.560
And here the element I want to add is old elements laying plots one just like in the future example

01:25.560 --> 01:27.850
to have an incrementing number I add.

01:28.380 --> 01:31.660
Well with this I called this stat said state.

01:31.680 --> 01:35.820
Now I can add a button here to my GSX code.

01:35.970 --> 01:45.930
This button will say new element and I will add my own click listener here to execute my method with

01:45.930 --> 01:54.270
this add element and bind this for the same reason as here with the change name method so that this

01:54.360 --> 01:59.600
inside this method here always refers to the class also at runtime.

01:59.640 --> 02:06.540
If I had control Enter NOW and click new element Well nothing happens of course because we're not outputting

02:06.540 --> 02:07.050
anything.

02:07.140 --> 02:08.900
So let's output something.

02:09.210 --> 02:17.280
And again with the same logic as before I can go into my render method here and add my list for example

02:17.700 --> 02:23.820
which now just refers to my list of elements so this state elements.

02:23.970 --> 02:25.760
And now I can use the map method.

02:25.840 --> 02:34.130
Also normal javascript method I can use and on a race to do something with each element in this array.

02:34.170 --> 02:42.180
So here what I want to do is and I will use the E6 arrow function for this I get each element and and

02:42.230 --> 02:46.390
that's just a normal function just E6 error arrow syntax here.

02:46.380 --> 02:49.030
So we got the arguments and then the function body.

02:49.320 --> 02:55.030
So for each element I want to simply return NUJ X piece.

02:55.110 --> 03:04.200
So a list item with this element inside of it that is what I return for each element in disarray and

03:04.200 --> 03:07.230
that is then stored in this latest variable.

03:07.230 --> 03:12.410
So it's simply just a couple of items in J.S. X code India and here.

03:13.050 --> 03:20.730
And of course now I want to output this list so I can go into my returned GSX code add unordered list

03:20.730 --> 03:21.250
there.

03:21.360 --> 03:24.690
And then there simply output list.

03:24.750 --> 03:25.830
This one here.

03:25.830 --> 03:32.580
If an out control enter we don't see anything here but if I click this you see it gets updated and again

03:32.610 --> 03:39.730
might look strange but it's just you react J.S. way of doing that Knauf to recreate that list if we

03:39.730 --> 03:41.160
check our console.

03:41.290 --> 03:45.030
We see that we get a warning here that we should key our elements.

03:45.130 --> 03:51.250
So we should add keys to these elements so that reactivates may keep track of them because to react

03:51.250 --> 03:52.210
they all look the same.

03:52.210 --> 03:54.150
Just a couple of list items.

03:54.160 --> 04:01.090
So in order for us to update our Dahlman the best way possible so that it doesn't have to rerun the

04:01.090 --> 04:02.890
full list on every change you make.

04:03.040 --> 04:05.070
We should assign keys here.

04:05.170 --> 04:12.910
We do this by simply adding the key property and the key is simply Shippey a unique identifier.

04:12.910 --> 04:19.660
Here in our case that can simply be the element itself because it's a incrementing number so definitely

04:19.660 --> 04:22.240
unique and therefore perfectly fine.

04:22.420 --> 04:27.220
You may use anything which has a unique identifier and that doesn't have to be a number it could also

04:27.220 --> 04:28.160
be a string.

04:28.360 --> 04:35.560
If you do it this now and I output this again you will see that if I cleared the console so that you

04:35.560 --> 04:37.890
can really see I'm not cheating.

04:38.380 --> 04:40.110
We don't get the warning anymore.

04:40.210 --> 04:43.590
So now we successfully put the list with a key.

04:43.600 --> 04:47.900
So that reaction Yesus able to identify our individual items.

04:48.110 --> 04:53.920
Now correct you would say that we already have quite a lot of code for this simple app and that it probably

04:53.920 --> 04:57.550
gets hard to manage all this code if that grows even more.

04:57.550 --> 05:02.070
Now that is why you typically create a couple of components and not just one.

05:02.260 --> 05:04.860
Feel free to optimize this right now.

05:04.870 --> 05:07.420
We will later have a look at multiple components again.

05:07.510 --> 05:13.080
But before doing so I want to show you how you can also style your components here.

05:13.090 --> 05:15.780
So let's dive into this in the next lectures.
