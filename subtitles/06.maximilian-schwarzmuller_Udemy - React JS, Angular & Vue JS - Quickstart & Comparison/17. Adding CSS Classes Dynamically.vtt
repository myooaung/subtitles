WEBVTT

00:02.970 --> 00:09.690
Just like in the modules we can not only change to styling dynamically we can also change siestas classes

00:10.360 --> 00:16.230
for days I will first define a s as class and we could define it in multiple places we could define

00:16.350 --> 00:21.930
our styles would see us as file which is added to the whole application and we can also add it to the

00:21.930 --> 00:23.630
app come on C is as follows.

00:23.760 --> 00:29.850
The important thing to know about this app components s as file is that any styles you set up your no

00:29.850 --> 00:35.130
matter if you override th one tag or you create a new custom CEOs as class like updated.

00:35.130 --> 00:36.560
I will do that here.

00:36.960 --> 00:43.300
And the starts to be fine here will only apply to disk component to the app component.

00:43.350 --> 00:51.780
In this case not to other components because styles are encapsulated which means by default they do

00:51.780 --> 00:54.750
not spread out to Avro components angler adds.

00:54.750 --> 01:00.300
The logic behind the scenes to make sure that Stahl's we are encapsulated and this allows you to for

01:00.300 --> 01:05.850
example define two different age one Stahl's and two components and they won't interfere with Jubber

01:06.290 --> 01:06.810
here of course.

01:06.810 --> 01:09.090
We only have one component so it doesn't really matter.

01:09.120 --> 01:11.690
I will still use the app component seeis as file.

01:11.760 --> 01:20.880
Add my updated class and here I will now set the color to white and the background color using normalcy

01:20.880 --> 01:26.280
as Ã¦sir of course to yellow to again have as unreadable style.

01:26.280 --> 01:31.350
Now I want to add this clause to my here to my name.

01:31.350 --> 01:39.010
Whenever we did change it now for this I can use another directive named Engy class.

01:39.120 --> 01:45.900
Again you can tell that it is offered by an alert you to DNG at the beginning and just like Engy style.

01:45.900 --> 01:51.150
This also needs to take square brackets because you need to send some data into this directive to work

01:51.150 --> 01:52.110
correctly.

01:52.110 --> 01:58.990
Just like ngi style Engy class has a property named Engy class in the directive to which we now sent

01:58.990 --> 02:00.250
a data.

02:00.360 --> 02:08.040
Here we also send a javascript object and here I now need to well have key value pairs where the key

02:08.040 --> 02:11.960
is to a class name and the value is the condition defining.

02:12.000 --> 02:16.530
If dishcloths should be added or not the class name is updated.

02:16.530 --> 02:23.970
That's the class I created here and to condition Well the condition simply as name is that equal to

02:23.970 --> 02:26.740
max or to be resizes is not equal to max.

02:26.850 --> 02:32.010
If it's not equal it will return TRUE here and therefore updated will be attached.

02:32.010 --> 02:38.540
I realize it won't if I save this and we click Change name now.

02:38.760 --> 02:40.880
You see we have that unreadable style again.

02:40.920 --> 02:43.590
So our class is added dynamically.
