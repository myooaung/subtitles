WEBVTT
1
00:00:00.080 --> 00:00:01.060
- [Instructor] Spring Boot: Actuator

2
00:00:01.060 --> 00:00:03.020
is one of the tools that I have found

3
00:00:03.020 --> 00:00:05.010
invaluable when working with Spring Boot

4
00:00:05.010 --> 00:00:08.000
applications, especially in a distributed

5
00:00:08.000 --> 00:00:10.040
microservices based environment.

6
00:00:10.040 --> 00:00:12.060
Actuator in Spring Book 2.0 however,

7
00:00:12.060 --> 00:00:16.000
had a major overhaul and this is not a little,

8
00:00:16.000 --> 00:00:18.090
I mean when I say major, this is a big deal.

9
00:00:18.090 --> 00:00:21.000
There are actually breaking changes

10
00:00:21.000 --> 00:00:23.050
in this upgrade and that is with respect

11
00:00:23.050 --> 00:00:24.060
to custom tooling.

12
00:00:24.060 --> 00:00:29.010
So if you had tools built within your CICD pipeline

13
00:00:29.010 --> 00:00:30.070
or within your deployment strategy,

14
00:00:30.070 --> 00:00:33.040
or within your containerization framework

15
00:00:33.040 --> 00:00:37.070
that was relying on components of Spring Boot: Actuator

16
00:00:37.070 --> 00:00:39.070
most likely when you do this upgrade

17
00:00:39.070 --> 00:00:41.080
you're going to have to make changes to those.

18
00:00:41.080 --> 00:00:44.000
Because it is that different.

19
00:00:44.000 --> 00:00:46.040
The URL itself has been restructured

20
00:00:46.040 --> 00:00:48.090
which alone breaks a lot of those tools.

21
00:00:48.090 --> 00:00:50.050
But access to that component tree

22
00:00:50.050 --> 00:00:51.080
and the way that things are set up

23
00:00:51.080 --> 00:00:53.080
has all changed as well.

24
00:00:53.080 --> 00:00:55.060
We also now have HAL support on all

25
00:00:55.060 --> 00:00:58.010
of our endpoints by default and that is

26
00:00:58.010 --> 00:01:00.020
really valuable if you're jumping around

27
00:01:00.020 --> 00:01:02.060
within the structure itself.

28
00:01:02.060 --> 00:01:04.070
If you write custom endpoints you will

29
00:01:04.070 --> 00:01:07.090
have to make changes to support the new model.

30
00:01:07.090 --> 00:01:09.070
The @Endpoint annotation is what will

31
00:01:09.070 --> 00:01:12.040
expose these custom endpoints.

32
00:01:12.040 --> 00:01:14.060
We also have the ability to now provide

33
00:01:14.060 --> 00:01:18.010
@ReadOperation, @WriteOperation, and @DeleteOperation

34
00:01:18.010 --> 00:01:19.080
as appropriate, especially when dealing

35
00:01:19.080 --> 00:01:21.050
on the JMX side.

36
00:01:21.050 --> 00:01:23.070
We can also use the endpoint web extension

37
00:01:23.070 --> 00:01:27.010
or endpoint JMX extension annotations

38
00:01:27.010 --> 00:01:29.090
for technology specific enhancements

39
00:01:29.090 --> 00:01:31.090
to our endpoints.

40
00:01:31.090 --> 00:01:33.060
Now, there's some additional support

41
00:01:33.060 --> 00:01:35.070
that was added with the Actuator, so it wasn't

42
00:01:35.070 --> 00:01:38.020
all just a revamping of the structure of it.

43
00:01:38.020 --> 00:01:40.050
This additional support added makes sense

44
00:01:40.050 --> 00:01:43.030
if you're dealing with reactive applications.

45
00:01:43.030 --> 00:01:46.080
So we now have support for Jersey resources

46
00:01:46.080 --> 00:01:48.050
within an Actuator context.

47
00:01:48.050 --> 00:01:51.020
It's not just Spring MVC or JMX.

48
00:01:51.020 --> 00:01:53.030
And if you're doing reactive, we now

49
00:01:53.030 --> 00:01:55.050
have a handler mapping that's custom

50
00:01:55.050 --> 00:01:59.070
specifically for Actuator on WebFlux applications.

51
00:01:59.070 --> 00:02:02.050
The other big area other than URLs that made changes

52
00:02:02.050 --> 00:02:05.010
is the way that Actuator Security works.

53
00:02:05.010 --> 00:02:07.060
If you had written custom security hooks

54
00:02:07.060 --> 00:02:10.050
before to deal with some of the limitations

55
00:02:10.050 --> 00:02:13.020
of Actuator in 1.5, most of those

56
00:02:13.020 --> 00:02:15.030
are going to be completely different now.

57
00:02:15.030 --> 00:02:17.090
Actuator Security is now not a separate

58
00:02:17.090 --> 00:02:19.080
security auto-config.

59
00:02:19.080 --> 00:02:22.090
It's tied into your default security auto-config,

60
00:02:22.090 --> 00:02:24.060
which makes a lot of sense because now

61
00:02:24.060 --> 00:02:28.010
we can manage it through that security context.

62
00:02:28.010 --> 00:02:30.060
There is no more management.security properties.

63
00:02:30.060 --> 00:02:32.000
That is all gone.

64
00:02:32.000 --> 00:02:35.050
The sensitive flag's also no longer supported.

65
00:02:35.050 --> 00:02:38.040
And all of the property structures have changed.

66
00:02:38.040 --> 00:02:40.090
In fact, the default exposure of all

67
00:02:40.090 --> 00:02:43.030
of the endpoints has changed as well.

68
00:02:43.030 --> 00:02:45.020
So not only the security, but the

69
00:02:45.020 --> 00:02:47.010
visualization has changed.

70
00:02:47.010 --> 00:02:49.070
And I highly encourage you to take a look my course

71
00:02:49.070 --> 00:02:52.020
Spring Boot Essentials 2.0 to actually

72
00:02:52.020 --> 00:02:54.080
take a look at how Actuator changed in

73
00:02:54.080 --> 00:02:56.050
much more detail.

74
00:02:56.050 --> 00:02:58.030
And of course, there's always the documentation

75
00:02:58.030 --> 00:03:00.000
that you can read.

