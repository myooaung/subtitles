WEBVTT
1
00:00:00.060 --> 00:00:02.040
- [Narrator] My grading the Spring Boot 2.0

2
00:00:02.040 --> 00:00:04.080
can require a lot of individual changes

3
00:00:04.080 --> 00:00:07.000
to your application, and I just wanted to run through

4
00:00:07.000 --> 00:00:09.060
some of the other constructs that have changed

5
00:00:09.060 --> 00:00:12.030
in case you run into those during an upgrade.

6
00:00:12.030 --> 00:00:14.070
Now, Reactive is one of the big changes,

7
00:00:14.070 --> 00:00:16.020
and it's not one that I think a lot of

8
00:00:16.020 --> 00:00:19.010
people are using previously in Spring Boot 1.5,

9
00:00:19.010 --> 00:00:22.020
but if you were, there are some changes.

10
00:00:22.020 --> 00:00:23.060
So all of support for Reactive

11
00:00:23.060 --> 00:00:26.040
comes from Spring 5, so you get WebFlux,

12
00:00:26.040 --> 00:00:28.020
and the WebFlux.fn which we have

13
00:00:28.020 --> 00:00:31.000
already talked about previously in this course.

14
00:00:31.000 --> 00:00:33.060
You also get Reactive Spring Data

15
00:00:33.060 --> 00:00:35.090
for databases like Cassandra, as well as

16
00:00:35.090 --> 00:00:39.050
several other Reactive-capable databases.

17
00:00:39.050 --> 00:00:41.010
You get Reactive Spring Security,

18
00:00:41.010 --> 00:00:42.050
and this is from my buddy Rob Winch,

19
00:00:42.050 --> 00:00:44.090
and this is some powerful, powerful stuff

20
00:00:44.090 --> 00:00:47.010
if you're working in a Reactive world.

21
00:00:47.010 --> 00:00:48.060
The entire Spring Security ecosystem

22
00:00:48.060 --> 00:00:51.060
now works with Reactive code, and that allows

23
00:00:51.060 --> 00:00:54.050
you to use your consistent Spring Security constructs

24
00:00:54.050 --> 00:00:57.090
now into another incantation of web.

25
00:00:57.090 --> 00:00:59.050
You also now have Embedded Netty

26
00:00:59.050 --> 00:01:02.090
which is utilized for these Reactive streams.

27
00:01:02.090 --> 00:01:04.070
As we talked about earlier as well,

28
00:01:04.070 --> 00:01:07.030
you now have support for HTTP/2.

29
00:01:07.030 --> 00:01:11.000
Support comes from Tomcat, Undertow, and Jetty.

30
00:01:11.000 --> 00:01:12.050
Now, all three of those do require

31
00:01:12.050 --> 00:01:14.080
some level of configuration.

32
00:01:14.080 --> 00:01:16.060
We did an example where Tomcat, where

33
00:01:16.060 --> 00:01:19.020
we had to provide to the Tomcat container

34
00:01:19.020 --> 00:01:22.050
a truststore and a keystore,

35
00:01:22.050 --> 00:01:24.000
and you will find the same thing

36
00:01:24.000 --> 00:01:26.080
for Jetty, as well as Undertow.

37
00:01:26.080 --> 00:01:30.030
This really can be faster and safer for your customers,

38
00:01:30.030 --> 00:01:33.060
so if you have the opportunity to move to HTTP/2,

39
00:01:33.060 --> 00:01:35.050
I encourage you to do so.

40
00:01:35.050 --> 00:01:37.050
Your SEO results may also improve

41
00:01:37.050 --> 00:01:39.080
by doing this as more and more sites

42
00:01:39.080 --> 00:01:41.020
are really going to start looking

43
00:01:41.020 --> 00:01:43.050
that you are running on SSL instead

44
00:01:43.050 --> 00:01:47.000
of standard HTTP, and the list goes on and on.

45
00:01:47.000 --> 00:01:48.070
There's also been some tooling changes

46
00:01:48.070 --> 00:01:50.000
within Spring Boot.

47
00:01:50.000 --> 00:01:51.040
The Gradle plugin, for instance,

48
00:01:51.040 --> 00:01:53.040
got a complete rewrite, so if you're using Gradle,

49
00:01:53.040 --> 00:01:57.060
instead of Maven, be aware that the Gradle plugin changed,

50
00:01:57.060 --> 00:01:58.060
and you might just inspect some

51
00:01:58.060 --> 00:02:01.010
of your builds as you start out.

52
00:02:01.010 --> 00:02:04.000
You have Kotlin support for version 1.2 of Kotlin.

53
00:02:04.000 --> 00:02:06.040
If you haven't messed with Kotlin as a language,

54
00:02:06.040 --> 00:02:09.020
I encourage you to do so.

55
00:02:09.020 --> 00:02:11.010
It's kind of a fun language to code in,

56
00:02:11.010 --> 00:02:12.080
but in addition, it is very powerful

57
00:02:12.080 --> 00:02:14.020
when dealing with some of the constructs

58
00:02:14.020 --> 00:02:18.060
like AMET ability that we now are getting in Spring 5.

59
00:02:18.060 --> 00:02:21.000
And we now get Animated ASCII art,

60
00:02:21.000 --> 00:02:23.060
because that is so important during start-up.

61
00:02:23.060 --> 00:02:25.070
And I bring it up as a little bit of a joke,

62
00:02:25.070 --> 00:02:29.050
but really it's about providing you with value.

63
00:02:29.050 --> 00:02:31.030
In my every-day world, I use tools

64
00:02:31.030 --> 00:02:32.070
that are written on Spring Boot

65
00:02:32.070 --> 00:02:35.010
as well as write my own, and it's amazing

66
00:02:35.010 --> 00:02:36.080
some of the ASCII art that gets brought

67
00:02:36.080 --> 00:02:38.060
into these applications, and it

68
00:02:38.060 --> 00:02:40.080
becomes really kind of cool as you're hopping around,

69
00:02:40.080 --> 00:02:42.070
because then you can see in the logs

70
00:02:42.070 --> 00:02:44.060
which application is running in case you have

71
00:02:44.060 --> 00:02:46.020
some kind of a mental block; you're like,

72
00:02:46.020 --> 00:02:47.030
oh, what server was I looking at?

73
00:02:47.030 --> 00:02:49.080
You can see it in the logs, in that ASCII art.

74
00:02:49.080 --> 00:02:54.010
And the animated, it's fun, but OK it's there.

75
00:02:54.010 --> 00:02:56.090
Now the list goes on from there, and the documentation

76
00:02:56.090 --> 00:02:58.090
does spell out all of the changes,

77
00:02:58.090 --> 00:03:01.050
but some of the big ones that I think you may touch on:

78
00:03:01.050 --> 00:03:04.060
Data Hibernate has been upgraded and changed,

79
00:03:04.060 --> 00:03:08.070
JdbcTemplate, this one's big; you now by default get an

80
00:03:08.070 --> 00:03:12.080
auto-configured, named parameter JdbcTemplate

81
00:03:12.080 --> 00:03:15.020
which is much more secure when dealing

82
00:03:15.020 --> 00:03:17.070
with things like SQL injection prevention.

83
00:03:17.070 --> 00:03:19.060
There's some changes to Redis, and Flyway

84
00:03:19.060 --> 00:03:21.070
if you're using that for database management.

85
00:03:21.070 --> 00:03:24.040
Again, take a look at the documentation on that.

86
00:03:24.040 --> 00:03:26.040
Web Context path logging, so this is

87
00:03:26.040 --> 00:03:28.040
kind of powerful when you're looking

88
00:03:28.040 --> 00:03:31.000
at the logs at the start-up of your application,

89
00:03:31.000 --> 00:03:33.060
and you're like OK, where's the root context.

90
00:03:33.060 --> 00:03:35.070
You now will see that in the log;

91
00:03:35.070 --> 00:03:37.020
there's been some changes that we've talked

92
00:03:37.020 --> 00:03:40.060
about with JSON, and we saw earlier with JSON B,

93
00:03:40.060 --> 00:03:43.060
Thymeleaf upgrades and Thymeleaf changes.

94
00:03:43.060 --> 00:03:45.000
If you're using Quartz, and I've used

95
00:03:45.000 --> 00:03:47.090
Quartz professionally in many applications,

96
00:03:47.090 --> 00:03:50.050
you now get some auto-configuration around that.

97
00:03:50.050 --> 00:03:52.010
So if you're using Quartz applications

98
00:03:52.010 --> 00:03:53.090
for timed events that happened,

99
00:03:53.090 --> 00:03:55.060
take a look at that auto-config,

100
00:03:55.060 --> 00:03:58.020
it may save you some of your existing config,

101
00:03:58.020 --> 00:03:59.040
and it may give you a little bit more

102
00:03:59.040 --> 00:04:02.000
continuity with the way that Quartz works

103
00:04:02.000 --> 00:04:05.010
in relationship to your other Spring Boot applications.

104
00:04:05.010 --> 00:04:06.060
And all of the testing changes that

105
00:04:06.060 --> 00:04:09.020
we have already seen throughout Spring 5.

106
00:04:09.020 --> 00:04:11.000
You get all of that within Spring Boot

107
00:04:11.000 --> 00:04:13.020
and a few other little bells and whistles

108
00:04:13.020 --> 00:04:16.000
that may make your life easier going forward.

109
00:04:16.000 --> 00:04:18.080
So all in all, I think Spring Boot 2 is a great improvement,

110
00:04:18.080 --> 00:04:21.000
and I think that it's something you should look at

