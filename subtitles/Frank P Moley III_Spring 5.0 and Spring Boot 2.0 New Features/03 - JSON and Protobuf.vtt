WEBVTT
1
00:00:00.060 --> 00:00:04.000
- [Instructor] There a few notable in Spring 5 with JSON

2
00:00:04.000 --> 00:00:06.020
and Protocol Buffer handling.

3
00:00:06.020 --> 00:00:07.060
So there were a couple of upgrades.

4
00:00:07.060 --> 00:00:11.010
The Jackson libraries were upgrade by default of 3.9,

5
00:00:11.010 --> 00:00:15.050
and Protobuf or Protocol Buffers were upgraded to version 3.

6
00:00:15.050 --> 00:00:17.080
One of the bigger changes however in this arena,

7
00:00:17.080 --> 00:00:20.070
is the implementation of JSON-B.

8
00:00:20.070 --> 00:00:23.000
The JSON-B is native support for JSON

9
00:00:23.000 --> 00:00:25.000
within the Java Framework.

10
00:00:25.000 --> 00:00:27.090
It follows many of the same concepts that we got with JAXB

11
00:00:27.090 --> 00:00:30.050
which was the XML Java Libraries,

12
00:00:30.050 --> 00:00:32.020
and this is really good about maintaining

13
00:00:32.020 --> 00:00:34.070
consistency between the two.

14
00:00:34.070 --> 00:00:38.050
This is specified by JSR 367 and Spring

15
00:00:38.050 --> 00:00:40.090
provides full support.

16
00:00:40.090 --> 00:00:43.040
Now there is a couple of Current Implementations.

17
00:00:43.040 --> 00:00:46.080
There's Eclipse Yasson, which the reference implementation

18
00:00:46.080 --> 00:00:48.070
and that's what we're going to use here in a moment,

19
00:00:48.070 --> 00:00:51.090
and then there's also a Johnzon, from Apache,

20
00:00:51.090 --> 00:00:54.070
which is a similar implementation from them.

21
00:00:54.070 --> 00:00:57.020
So let's jump into code and see what we need to do,

22
00:00:57.020 --> 00:01:00.070
to go use JSON-B within a Spring application.

23
00:01:00.070 --> 00:01:05.050
Now in our application, we're going to open up our pom file.

24
00:01:05.050 --> 00:01:06.050
We're going to scroll down a little bit here,

25
00:01:06.050 --> 00:01:08.040
and we're going to add a few dependencies,

26
00:01:08.040 --> 00:01:09.080
and we're going to do so at

27
00:01:09.080 --> 00:01:12.070
the end of our compiled dependencies.

28
00:01:12.070 --> 00:01:15.060
So the first dependency that we're going to add here,

29
00:01:15.060 --> 00:01:19.020
is javax.json.bind-api,

30
00:01:19.020 --> 00:01:23.090
and that comes from the group javax.json.bind.

31
00:01:23.090 --> 00:01:26.080
And we'll select version 1.0.

32
00:01:26.080 --> 00:01:29.080
Now the next dependency along the similar lines,

33
00:01:29.080 --> 00:01:32.040
is going to be yasson itself,

34
00:01:32.040 --> 00:01:35.060
and that comes from org.eclipse,

35
00:01:35.060 --> 00:01:38.070
and the version on that is 1.0.

36
00:01:38.070 --> 00:01:41.040
And the final dependency that we're going to add

37
00:01:41.040 --> 00:01:47.010
is javax.json and this is from org.glassfish,

38
00:01:47.010 --> 00:01:50.000
and the version on that we're going to select is 1.1.

39
00:01:50.000 --> 00:01:52.010
Now we'll allow Maven to do its thing,

40
00:01:52.010 --> 00:01:54.070
and bring in all its dependencies.

41
00:01:54.070 --> 00:01:56.050
And once those are resolved, we're actually going to go

42
00:01:56.050 --> 00:01:59.020
open up our application of properties file.

43
00:01:59.020 --> 00:02:01.090
We need to add a property to let Spring know,

44
00:02:01.090 --> 00:02:04.030
that we want to use JSON-B.

45
00:02:04.030 --> 00:02:11.040
So it's spring.http.converters.preferred-json-mapper,

46
00:02:11.040 --> 00:02:13.070
and we're going to select jsonb.

47
00:02:13.070 --> 00:02:16.000
Now with that there's actually a bug and we're

48
00:02:16.000 --> 00:02:18.030
going to need to address that real quick.

49
00:02:18.030 --> 00:02:22.020
You cannot do immutable objects with JSON-B, currently.

50
00:02:22.020 --> 00:02:24.040
I've logged a bug against what I saw,

51
00:02:24.040 --> 00:02:27.000
and I'm hoping that gets fixed here shortly.

52
00:02:27.000 --> 00:02:29.040
So we're going to convert this to a data object,

53
00:02:29.040 --> 00:02:31.020
from a value object.

54
00:02:31.020 --> 00:02:34.020
What that does, now I get getters and setters,

55
00:02:34.020 --> 00:02:37.030
a default constructor and an AllArgs constructor,

56
00:02:37.030 --> 00:02:39.030
all within this object.

57
00:02:39.030 --> 00:02:42.030
So, it really reverts us back to

58
00:02:42.030 --> 00:02:44.060
pre using immutable objects.

59
00:02:44.060 --> 00:02:47.080
Let's jump into our Presidents Controller now.

60
00:02:47.080 --> 00:02:51.050
We're going to make, just a couple of changes here.

61
00:02:51.050 --> 00:02:55.010
We're going to go ahead and add a GetMapping in here.

62
00:02:55.010 --> 00:02:58.060
GetMapping is going to return a list,

63
00:02:58.060 --> 00:03:01.010
of President objects.

64
00:03:01.010 --> 00:03:03.060
Call it getAllPresidents.

65
00:03:03.060 --> 00:03:04.080
We don't need any parameters,

66
00:03:04.080 --> 00:03:09.000
and we will simply return the Presidents.

67
00:03:09.000 --> 00:03:10.070
Excellent, so now that's done,

68
00:03:10.070 --> 00:03:14.010
we can go startup our application.

69
00:03:14.010 --> 00:03:17.020
Expand this view of the console a little bit.

70
00:03:17.020 --> 00:03:19.000
And now that our application is started,

71
00:03:19.000 --> 00:03:21.000
we're going to jump over to our terminal.

72
00:03:21.000 --> 00:03:22.060
We're going to do a couple of commands here.

73
00:03:22.060 --> 00:03:24.030
The first one that we're going to do,

74
00:03:24.030 --> 00:03:27.020
so that I can use my http tool once again,

75
00:03:27.020 --> 00:03:33.040
and I'm going to POST to localhost:8080/presidents and

76
00:03:33.040 --> 00:03:43.050
id:=1 firstName=George lastName=Washington

77
00:03:43.050 --> 00:03:46.050
and we'll go ahead and do that verbose.

78
00:03:46.050 --> 00:03:48.070
And it looks the exact same as we saw before.

79
00:03:48.070 --> 00:03:50.090
But now we're using a different parser,

80
00:03:50.090 --> 00:03:53.000
and we don't really see much to that,

81
00:03:53.000 --> 00:03:54.050
it's just that it's nice to have within

82
00:03:54.050 --> 00:03:56.030
the Spring Framework.

83
00:03:56.030 --> 00:03:59.000
Just to show you that it really does return the same thing,

84
00:03:59.000 --> 00:04:05.010
we'll go ahead and do an http on localhost:8080/presidents

85
00:04:05.010 --> 00:04:07.010
- V for verbose

86
00:04:07.010 --> 00:04:08.060
and we return that object.

87
00:04:08.060 --> 00:04:10.090
It looks much the same way as we would expect it.

88
00:04:10.090 --> 00:04:13.060
Its an array, because it was a list, that array has

89
00:04:13.060 --> 00:04:14.040
an object in it,

90
00:04:14.040 --> 00:04:16.060
and that object matches what we've saved.

91
00:04:16.060 --> 00:04:19.020
So, that's really the JSON-B binding,

92
00:04:19.020 --> 00:04:22.000
and that's how it works in the Spring Framework.

