1
00:00:01,140 --> 00:00:04,330
Hello everybody, and
welcome to this tutorial.

2
00:00:04,330 --> 00:00:08,981
Today I'm gonna go ahead and
start configuring my computer,

3
00:00:08,981 --> 00:00:14,080
my network settings, in order to be
able to strip the SSL encryption

4
00:00:14,080 --> 00:00:18,651
from various packets that I'm
going to redirect to myself.

5
00:00:18,651 --> 00:00:21,974
Anyway, one of the first things that we
need to do is take a look at the list

6
00:00:21,974 --> 00:00:23,131
of these commands here.

7
00:00:23,131 --> 00:00:26,720
So it's echo 1 to this file here.

8
00:00:26,720 --> 00:00:32,620
Let me just show you,
I'm going to copy basid.

9
00:00:32,620 --> 00:00:39,220
I am deliberately not giving you the text
files from which you can copy paste.

10
00:00:39,220 --> 00:00:42,430
I mean,
I know that it's perhaps tiresome or

11
00:00:42,430 --> 00:00:45,700
something like that but
try typing the commands in.

12
00:00:45,700 --> 00:00:49,950
It does help you a great deal
to understand them better,

13
00:00:49,950 --> 00:00:53,860
because you're gonna make mistakes and
you're gonna correct them and

14
00:00:53,860 --> 00:00:57,100
you will understand and
remember the commands as well.

15
00:00:58,210 --> 00:01:00,880
A very good way to remember
them is just to type them in.

16
00:01:00,880 --> 00:01:04,030
Also, you will be able to
understand a bit more,

17
00:01:04,030 --> 00:01:06,960
because you're gonna get error messages
that are gonna tell you stuff about it.

18
00:01:08,540 --> 00:01:13,970
Anyway, I have buried a file for
myself here to save us a bit

19
00:01:13,970 --> 00:01:19,570
of time today and to save myself
from making mistakes when typing.

20
00:01:19,570 --> 00:01:22,840
But, anyway.
What we need to do is type this in.

21
00:01:22,840 --> 00:01:27,970
It says echo 1 and
then put it into this file here.

22
00:01:30,520 --> 00:01:31,800
I can go ahead and press Enter.

23
00:01:31,800 --> 00:01:34,570
It's already set to 1 but
it doesn't matter.

24
00:01:34,570 --> 00:01:38,010
I can also verify that it is
1 by catting the content.

25
00:01:38,010 --> 00:01:38,600
So, it is 1.

26
00:01:38,600 --> 00:01:44,630
If you wish to revert it back
to dual state, just type in 0.

27
00:01:44,630 --> 00:01:46,460
And if I type in cat again,
it's going to be 0.

28
00:01:46,460 --> 00:01:51,010
By default on your machines, it will be
set to 0, so you do need to change this.

29
00:01:51,010 --> 00:01:54,693
I have done this before,
so it was already on 1.

30
00:01:54,693 --> 00:01:55,593
But it doesn't matter.

31
00:01:55,593 --> 00:01:58,213
It does no harm to type
it in one more time.

32
00:01:58,213 --> 00:02:03,748
Now there is this rather lengthy
command in terms of IP tables

33
00:02:03,748 --> 00:02:08,958
configuration that we need to
configure our firewall for

34
00:02:08,958 --> 00:02:13,843
port redirection because
we need to redirect traffic

35
00:02:13,843 --> 00:02:17,332
from a certain port to a certain port.

36
00:02:17,332 --> 00:02:21,817
So from port 80 to the listening
port of the SSL strip and

37
00:02:21,817 --> 00:02:26,313
iptables as I mentioned before
is a fantastic firewall.

38
00:02:26,313 --> 00:02:31,341
Completely open source and
it can be used to conduct extremely

39
00:02:31,341 --> 00:02:37,410
complex operations and it can be used for
the simplest of things.

40
00:02:37,410 --> 00:02:41,180
The wonder of it is that it's free and
that it's very good.

41
00:02:41,180 --> 00:02:41,990
Anyway, type in ip.

42
00:02:43,440 --> 00:02:45,785
There's also graphical interface, but

43
00:02:45,785 --> 00:02:48,332
rarely people use it on
very rare occasions.

44
00:02:48,332 --> 00:02:50,872
I don't think that that
is the general approach.

45
00:02:50,872 --> 00:02:55,842
Usually people prefer to just
type the commands in themselves.

46
00:02:55,842 --> 00:03:00,120
Anyway, iptables, space -t nat.

47
00:03:00,120 --> 00:03:02,883
So, nat is a table for
Network Address Translation.

48
00:03:02,883 --> 00:03:06,946
-A, that stands for append.

49
00:03:06,946 --> 00:03:14,087
I could also type in here -I for insert or
-D for delete, but we need append.

50
00:03:14,087 --> 00:03:16,747
And chain prerouting.

51
00:03:16,747 --> 00:03:19,307
PREROUTING.

52
00:03:19,307 --> 00:03:19,887
Excellent.

53
00:03:19,887 --> 00:03:21,447
We're going to specify a protocol.

54
00:03:21,447 --> 00:03:29,746
So it's gonna be tcp --destination-port.

55
00:03:29,746 --> 00:03:34,860
You can also use deport argument.

56
00:03:34,860 --> 00:03:40,280
I don't know, I suppose for some strange
reason, I've opted for destination port.

57
00:03:40,280 --> 00:03:42,372
It's a lot easier to
understand when looking at it.

58
00:03:42,372 --> 00:03:45,732
It's practically written as though
it was literally English language.

59
00:03:45,732 --> 00:03:48,168
It is English language, but

60
00:03:48,168 --> 00:03:53,250
how would you tell somebody to
redirect to a certain point.

61
00:03:53,250 --> 00:03:57,120
You tell them redirect to port and
type in the port.

62
00:03:57,120 --> 00:04:01,129
You use the same syntax you
would use when telling somebody,

63
00:04:01,129 --> 00:04:03,890
a real person, to redirect something.

64
00:04:03,890 --> 00:04:06,121
You would use the same syntax to
actually tell the machine as well.

65
00:04:06,121 --> 00:04:11,342
So, they've made a great effort
to make it as simple as possible.

66
00:04:11,342 --> 00:04:14,282
Although at first glance
it can seem a bit complex.

67
00:04:14,282 --> 00:04:19,945
So, It's tcp the destination port is 80 so

68
00:04:19,945 --> 00:04:25,160
-j and I want to redirect the traffic, so

69
00:04:25,160 --> 00:04:31,131
just type in REDIRECT --to- port 8080.

70
00:04:31,131 --> 00:04:37,511
Now port 8080 is going to be the port on
which SSL strip will be listening on.

71
00:04:37,511 --> 00:04:39,419
Go ahead and press Enter.

72
00:04:40,480 --> 00:04:44,123
There is no output there
is no information nothing.

73
00:04:44,123 --> 00:04:47,813
The exit code is zero so
nothing happens here and

74
00:04:47,813 --> 00:04:52,437
if nothing happens that's great,
it means it has worked.

75
00:04:52,437 --> 00:04:56,977
Not necessarily but 99% of the cases
it means that it has worked.

76
00:04:56,977 --> 00:05:03,833
However I do like to run a verification,
and I'm gonna go ahead and

77
00:05:03,833 --> 00:05:08,498
type in iptables -t nat
-L to get a listing.

78
00:05:08,498 --> 00:05:12,698
And I want PREROUTING,
I want to see what I've done there.

79
00:05:14,517 --> 00:05:15,119
Excellent!

80
00:05:15,119 --> 00:05:20,798
So, you see, it says redirect
tcp from anywhere to anywhere.

81
00:05:20,798 --> 00:05:25,998
Destination port of you see dport,
dpt, it's a short version here.

82
00:05:25,998 --> 00:05:30,497
So, this nation port is port JD,
which is HTTP.

83
00:05:30,497 --> 00:05:33,438
Redirect towards 8080.

84
00:05:33,438 --> 00:05:34,500
Excellent.

85
00:05:34,500 --> 00:05:38,140
I've already inserted,
I have a bad feeling I've inserted

86
00:05:38,140 --> 00:05:41,040
this root three times by now,
cuz I've done some test runs in order to

87
00:05:42,450 --> 00:05:45,380
not make any mistakes during your
tutorial to save us all time.

88
00:05:45,380 --> 00:05:47,160
But it seems to be effective.

89
00:05:47,160 --> 00:05:50,410
It seems to be working so
let's just go ahead and clear the screen.

90
00:05:50,410 --> 00:05:54,270
Keep in mind that while you're doing this
you're gonna encounter a lot of problems.

91
00:05:54,270 --> 00:05:55,990
There's gonna be error messages.

92
00:05:55,990 --> 00:05:58,010
Things are not gonna work.

93
00:05:58,010 --> 00:06:00,080
You're gonna need to
reinstall some things,

94
00:06:00,080 --> 00:06:03,050
install additional libraries perhaps or
something of a kind.

95
00:06:03,050 --> 00:06:05,860
Don't sweat it,
that is all standard procedure.

96
00:06:05,860 --> 00:06:09,130
It happens to everybody quite literally.

97
00:06:09,130 --> 00:06:13,430
You just need nerves of
steel to go through it.

98
00:06:13,430 --> 00:06:15,780
Now I've written for
myself here find a target.

99
00:06:15,780 --> 00:06:19,833
Now you can use,
I know what target I'm going to use but

100
00:06:19,833 --> 00:06:24,431
you can use nmap and
before you use nmap just like an ifconfig.

101
00:06:24,431 --> 00:06:32,950
Clear, ifconfig p8p1.

102
00:06:32,950 --> 00:06:33,610
Excellent.

103
00:06:33,610 --> 00:06:38,474
So I just wanted to get a listing for
the interface that I'm using because you

104
00:06:38,474 --> 00:06:43,350
need to be using the interface that you
are using to connect to the Internet.

105
00:06:43,350 --> 00:06:48,000
So this is the IP address that is assigned
to me, usually the default gateway is

106
00:06:48,000 --> 00:06:52,789
simply the lowest one, but you can check
the default gateway by typing in route,

107
00:06:52,789 --> 00:06:54,489
press Enter and there we go.

108
00:06:54,489 --> 00:06:57,689
Gateway 192.168.1.1.

109
00:06:57,689 --> 00:07:02,808
That will be the IP address of
my router within a LAN now.

110
00:07:02,808 --> 00:07:07,536
Looking at this, I'm guessing it's

111
00:07:07,536 --> 00:07:12,854
assigning IP addresses from 2 to 254,

112
00:07:12,854 --> 00:07:17,151
because it can't assign 255.

113
00:07:17,151 --> 00:07:18,909
255 is the broadcast.

114
00:07:18,909 --> 00:07:24,113
Anyway, so
from 2 to 254 it's going to be assigning

115
00:07:24,113 --> 00:07:29,095
IP addresses I can perform
a nmap scan of the network so

116
00:07:29,095 --> 00:07:32,748
nmap, and I'm going to go ahead and And

117
00:07:32,748 --> 00:07:36,758
type in 192.168.1.1/24.

118
00:07:36,758 --> 00:07:41,960
So please scan the entire subnet or
I can just do this, 2-254,

119
00:07:41,960 --> 00:07:48,190
to save myself a couple of IP
addresses here, two IP addresses less.

120
00:07:48,190 --> 00:07:49,900
And I want -vv after it.

121
00:07:49,900 --> 00:07:53,400
This might take a while
if you're doing it.

122
00:07:53,400 --> 00:07:58,720
This will reveal all the hosts that are up
on the network and that nmap can reveal.

123
00:07:58,720 --> 00:08:02,540
I've also told it to scan
on all ports as well.

124
00:08:05,020 --> 00:08:07,366
However, you're gonna have to do this,
basically,

125
00:08:07,366 --> 00:08:10,331
if you're in a real life situation and
it's gonna keep on scanning.

126
00:08:10,331 --> 00:08:12,852
And it says, okay, host down.

127
00:08:12,852 --> 00:08:14,160
I only have one host that is up here.

128
00:08:14,160 --> 00:08:18,410
That is up and running,
which is my Windows machine.

129
00:08:18,410 --> 00:08:21,430
And I'm not gonna go and
sift through all these up.

130
00:08:21,430 --> 00:08:24,219
I'm just gonna go ahead
over to my VirtualBox,

131
00:08:24,219 --> 00:08:26,250
and open up my Windows 8 machine.

132
00:08:26,250 --> 00:08:27,231
There you go.

133
00:08:27,231 --> 00:08:31,690
So it says, scanned hosts, never mind.

134
00:08:32,810 --> 00:08:37,920
Anyway you will need to perform this scan
if you want to figure out who's alive.

135
00:08:37,920 --> 00:08:39,200
But I've just shown you how to do it.

136
00:08:39,200 --> 00:08:42,130
Just do nmap and
if you don't find any hosts try passing

137
00:08:42,130 --> 00:08:46,140
on some different arguments through nmap.

138
00:08:46,140 --> 00:08:49,399
Try saying like -Pn or
something of a kind, and

139
00:08:49,399 --> 00:08:52,341
see if that yields any different results.

140
00:08:52,341 --> 00:08:59,581
Also you can use -o for, oops, -o for
OS detection and something of a kind.

141
00:08:59,581 --> 00:09:01,021
Yeah, there we go.

142
00:09:01,021 --> 00:09:02,600
So, I'm gonna open up my Windows machine.

143
00:09:04,290 --> 00:09:06,450
Type in ipconfig into the CMD, oops.

144
00:09:09,890 --> 00:09:13,050
Is it IP?
Yep, it's ipconfig into the CMD, and

145
00:09:13,050 --> 00:09:15,991
I'm gonna get a lot of information here.

146
00:09:15,991 --> 00:09:20,840
Basically I'm only interested to see which
IP address is actually assigned to this

147
00:09:20,840 --> 00:09:21,472
machine.

148
00:09:21,472 --> 00:09:23,392
It's 100.

149
00:09:23,392 --> 00:09:24,972
Excellent.

150
00:09:24,972 --> 00:09:30,386
So this machine,
this Windows 8.1 virtual machine

151
00:09:30,386 --> 00:09:35,452
is functioning on 192.168.1.100.

152
00:09:35,452 --> 00:09:40,626
That is my victim that is a machine
that I wish to vandalize,

153
00:09:40,626 --> 00:09:47,051
that I want to actually strip of it's
encryption and view it's traffic.

154
00:09:47,051 --> 00:09:49,450
So just go ahead and minimize it for

155
00:09:49,450 --> 00:09:53,192
the time being as we know
what the IP address is there.

156
00:09:53,192 --> 00:09:56,490
And if you're wondering why I
have all these terminals open,

157
00:09:56,490 --> 00:09:59,282
we will need two terminals
to perform this attack and

158
00:09:59,282 --> 00:10:01,692
a third one to view
the results of the attack,

159
00:10:01,692 --> 00:10:05,712
because we don't want to stop the attack
while we are viewing the results.

160
00:10:05,712 --> 00:10:11,010
Anyway, second part in the followup
tutorial, I'm gonna go ahead and

161
00:10:11,010 --> 00:10:16,152
go over arpspoofs, since we have
completely prepared our machine.

162
00:10:16,152 --> 00:10:18,852
We have found our victim.

163
00:10:18,852 --> 00:10:23,686
Now we need to do the arspoof and
we need to conduct an SSL strip,

164
00:10:23,686 --> 00:10:27,882
and then we need to have a live
report of the log as well,

165
00:10:27,882 --> 00:10:32,653
in order to pull out some of
the valuable information from it.

166
00:10:32,653 --> 00:10:35,380
Anyway, I bid you all farewell and
I hope to see you in the next tutorial.

