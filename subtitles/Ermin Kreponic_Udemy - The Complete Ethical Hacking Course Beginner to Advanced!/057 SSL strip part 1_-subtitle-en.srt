1
00:00:00,250 --> 00:00:03,270
Hello everybody and
welcome to this tutorial.

2
00:00:03,270 --> 00:00:07,762
Today, I'll talk about open,
sorry not open, rather instead,

3
00:00:07,762 --> 00:00:09,780
SSL strips and ARP spoofing.

4
00:00:10,810 --> 00:00:15,500
Now, attacking wireless systems is,
attacking wireless networks in general,

5
00:00:15,500 --> 00:00:20,910
is much more than just cracking
the authentication keys.

6
00:00:20,910 --> 00:00:23,970
There are a lot of other
options that you can use.

7
00:00:23,970 --> 00:00:25,120
Especially in public wi-fis,

8
00:00:25,120 --> 00:00:28,196
where you can authenticate
without any problems whatsoever.

9
00:00:28,196 --> 00:00:33,660
And you can also,
once you're in that public wi-fi,

10
00:00:33,660 --> 00:00:37,960
or you're within a building that has
a wi-fi to which people are connecting.

11
00:00:37,960 --> 00:00:41,990
Perhaps it's not a public one, but
it's a company or you're in a school or

12
00:00:41,990 --> 00:00:42,910
something like that.

13
00:00:42,910 --> 00:00:46,620
As long as you are authenticated
to that wi-fi,

14
00:00:46,620 --> 00:00:52,690
you will be able to listen
to all the traffic that goes

15
00:00:52,690 --> 00:00:56,090
over that particular wi-fi,
that's up in the air.

16
00:00:56,090 --> 00:00:58,380
However, more likely than not,

17
00:00:58,380 --> 00:01:02,540
it's gonna be encrypted, and
it's not going to be very useful to you.

18
00:01:02,540 --> 00:01:08,049
You'll be able to see who, most likely
you'll be able to see who's visiting

19
00:01:08,049 --> 00:01:13,587
what somewhere, but you won't be able
to see anything of relevance really.

20
00:01:13,587 --> 00:01:18,268
The problem is, the HTTPS protocol,
which encrypts your web traffic,

21
00:01:18,268 --> 00:01:22,510
and once you pass login credentials,
they are encrypted.

22
00:01:22,510 --> 00:01:26,068
So you can't actually see somebody
else's login credentials,

23
00:01:26,068 --> 00:01:27,628
which is very problematic.

24
00:01:27,628 --> 00:01:33,237
Now, there is a program,
it's called SSL strip,

25
00:01:33,237 --> 00:01:38,846
which converts,
let me just put it to you this way,

26
00:01:38,846 --> 00:01:42,254
which converts HTTP to HTTPS.

27
00:01:42,254 --> 00:01:44,680
Sorry, the other way around.

28
00:01:44,680 --> 00:01:48,990
This would make absolutely no sense for
pen testing.

29
00:01:48,990 --> 00:01:50,450
HTTPS to HTTP.

30
00:01:50,450 --> 00:01:54,710
Basically it strips this SSL inscription.

31
00:01:54,710 --> 00:01:57,390
Hence it's called the SSL strip.

32
00:01:57,390 --> 00:02:02,370
And once it is no longer encrypted,
once the data over the network is

33
00:02:02,370 --> 00:02:07,540
transmitted in the form of regular
HTTP packets in clear text, you will

34
00:02:07,540 --> 00:02:12,380
be able to see user names and passwords
of pretty much everybody on the network.

35
00:02:12,380 --> 00:02:15,830
Now if their using HTTP you'll
be able to do this anyway.

36
00:02:15,830 --> 00:02:21,920
But as I said, very few sites today of
importance are using only HTTP protocol.

37
00:02:21,920 --> 00:02:26,504
Usually they have a port 443 open for
SSL encryption.

38
00:02:26,504 --> 00:02:29,183
And you can capture the data, but

39
00:02:29,183 --> 00:02:34,370
there isn't really much or
anything that you can do with it.

40
00:02:34,370 --> 00:02:39,130
Now HTTPS has been,
it's showing cracks, definitely.

41
00:02:39,130 --> 00:02:43,934
There were two Italian people
who've claimed to have decoded it,

42
00:02:43,934 --> 00:02:49,851
to have decrypted it, but there are still
issues to be resolved and it's not fully

43
00:02:49,851 --> 00:02:55,296
cracked yet, so you won't be able to
read information if it is encrypted.

44
00:02:55,296 --> 00:03:01,004
And for this purpose today, we will need
several tools, we will need two tools.

45
00:03:01,004 --> 00:03:05,138
We will require SSL strip,
so just go ahead and

46
00:03:05,138 --> 00:03:11,260
type in yum install SSL,
not install, rather instead search.

47
00:03:11,260 --> 00:03:15,800
Search SSL strip and yup, there we go.

48
00:03:15,800 --> 00:03:17,490
So this is what you would need to install.

49
00:03:18,680 --> 00:03:22,980
The tool provides a demonstration
of HTTPS stripping attacks.

50
00:03:22,980 --> 00:03:26,830
It does much more than provide
a demonstration, but oh well.

51
00:03:26,830 --> 00:03:30,241
Basically, just type in as before,

52
00:03:30,241 --> 00:03:35,194
yum install sslstrip, and
this is gonna go through,

53
00:03:35,194 --> 00:03:41,020
because mine is already installed and
latest version.

54
00:03:41,020 --> 00:03:45,720
Nothing will happen but you can also
do this dash y and you will not be

55
00:03:45,720 --> 00:03:50,390
prompted for any questions during
the installation if you pass this command.

56
00:03:50,390 --> 00:03:55,360
Now the second tool that we are going
to use is for DNS spoofing.

57
00:03:56,410 --> 00:03:59,270
Because we need to convince the router
of our assumed identity, so

58
00:03:59,270 --> 00:04:01,460
to say, we need to trick it.

59
00:04:01,460 --> 00:04:08,310
We need to trick it into sending us
the packets that the user sends to it.

60
00:04:10,580 --> 00:04:14,900
This is so we can actually strip
the encryption, retransmit

61
00:04:14,900 --> 00:04:19,300
the packet through the router, and then
the router transmits it over the internet.

62
00:04:19,300 --> 00:04:21,940
I will explain how this works in a moment,
but

63
00:04:21,940 --> 00:04:27,400
before I do there is just one more
tool that you need to acquire.

64
00:04:27,400 --> 00:04:29,370
Let's clear the screen.

65
00:04:29,370 --> 00:04:34,090
So yum search dsn.

66
00:04:34,090 --> 00:04:34,800
Is it this?

67
00:04:34,800 --> 00:04:36,460
Yep, there we go.

68
00:04:36,460 --> 00:04:38,340
It has a bit of a weird name here.

69
00:04:38,340 --> 00:04:43,500
Usually it's called ARP spoof on pretty
much every other distro out there,

70
00:04:43,500 --> 00:04:46,890
but on Fedora it's called dsniff.

71
00:04:46,890 --> 00:04:50,400
And this is another networking
tool which you need to install.

72
00:04:50,400 --> 00:04:55,500
Basically, what we shall be doing
today is convincing the router to

73
00:04:56,510 --> 00:05:02,220
send us all packets that a specific
user transmits to the router.

74
00:05:02,220 --> 00:05:04,860
They will go back to us from the router.

75
00:05:04,860 --> 00:05:10,730
We will remove the encryption,
forward the packets back to the router and

76
00:05:10,730 --> 00:05:15,650
then the router will only transmit
onto the net HTTP packets.

77
00:05:17,460 --> 00:05:20,712
Everything will be in clear text.

78
00:05:20,712 --> 00:05:25,823
We will be performing a man in
the middle attack as this technique

79
00:05:25,823 --> 00:05:30,747
falls definitely into that category and
then we will be able to

80
00:05:30,747 --> 00:05:35,577
read the user credentials and
practically take all the vital

81
00:05:35,577 --> 00:05:41,086
information as they were in clear
text without any sort of problems.

82
00:05:41,086 --> 00:05:45,483
Now, before I do this it
is of vital importance for

83
00:05:45,483 --> 00:05:50,211
me to stress out that this
is not going to work always.

84
00:05:50,211 --> 00:05:55,760
This is not going to
work 100% of the time.

85
00:05:55,760 --> 00:06:00,490
With Internet Explorer it's more likely
to work than with Firefox or Chrome.

86
00:06:00,490 --> 00:06:05,120
But it's still going to work in
Firefox and Chrome, however,

87
00:06:05,120 --> 00:06:10,220
perhaps some websites like PayPal,
they have very strong defenses against it,

88
00:06:10,220 --> 00:06:14,000
so it's very unlikely that
it's gonna work there.

89
00:06:14,000 --> 00:06:15,400
Well, 2015 now, probably won't work.

90
00:06:15,400 --> 00:06:20,748
I'm giving 99.9% chance that it's
not going to work on PayPal,

91
00:06:20,748 --> 00:06:25,466
and about 95% chance that it's not
going to work on Facebook either.

92
00:06:25,466 --> 00:06:31,380
But, because people tend
to recycle passwords,

93
00:06:31,380 --> 00:06:35,140
and they tend to use exactly the same
passwords on multiple sites,

94
00:06:35,140 --> 00:06:39,500
and they use, pretty much,
their emails as their login credentials,

95
00:06:39,500 --> 00:06:45,610
as their user name, you can just take
other passwords that you gather and

96
00:06:45,610 --> 00:06:51,171
then attempt them on the sites
where you cannot do this.

97
00:06:51,171 --> 00:06:53,360
So that can be very convenient and

98
00:06:53,360 --> 00:06:58,620
that is definitely something I
would advise you all against it.

99
00:06:58,620 --> 00:07:01,150
If you have,
you can have one set of passwords for

100
00:07:01,150 --> 00:07:05,050
all of your financial places on the net.

101
00:07:05,050 --> 00:07:07,970
Another set of passwords for
all the irrelevant places on the net.

102
00:07:07,970 --> 00:07:13,440
I would definitely advise you
to do that primarily because,

103
00:07:13,440 --> 00:07:21,240
these places such as Gmail, or Facebook,
or PayPal, they will be better protected.

104
00:07:21,240 --> 00:07:25,040
They will have the latest
protection possible.

105
00:07:25,040 --> 00:07:28,370
And the passwords you use there,
you shouldn't really use

106
00:07:28,370 --> 00:07:32,670
on some other websites that don't
really have a good protection because

107
00:07:32,670 --> 00:07:36,910
your credentials will get stolen while
you're doing something on those sites.

108
00:07:36,910 --> 00:07:40,520
While your registering on some forum or
browsing a forum or something like that.

109
00:07:40,520 --> 00:07:43,820
You definitely shouldn't use
the same password as on your PayPal.

110
00:07:43,820 --> 00:07:47,510
And somebody will then just try it on
your PayPal account, there you go.

111
00:07:48,710 --> 00:07:53,890
Basically they've effectively circumvented
all the people's protections and

112
00:07:53,890 --> 00:07:57,610
all the millions of dollars that
they've invested into security systems.

113
00:07:59,420 --> 00:08:03,780
Keyless in for this do not recycle
passwords I will show you how to,

114
00:08:03,780 --> 00:08:06,290
I will begin using this in
the follow up tutorial.

115
00:08:06,290 --> 00:08:09,725
But these are just a few
basics that we had to

116
00:08:09,725 --> 00:08:13,170
cover before actually digging into this.

117
00:08:13,170 --> 00:08:15,178
Now both of these tools, SSL strip and

118
00:08:15,178 --> 00:08:19,828
ARP Spoof are not installed by
default on Fedora Distribution.

119
00:08:19,828 --> 00:08:20,856
They are on Kali, so

120
00:08:20,856 --> 00:08:25,440
if you are running a live version of Kali
you will have both of these tools there.

121
00:08:25,440 --> 00:08:29,490
But if you're using Fedora you
have to install them as I did.

122
00:08:29,490 --> 00:08:33,280
The installation process is very
straight forward just as I showed you.

123
00:08:33,280 --> 00:08:36,650
Just type in one command for
one and the other for the other.

124
00:08:36,650 --> 00:08:39,580
The only difference is the name
of the packet, that's it and

125
00:08:39,580 --> 00:08:41,700
it will install, no problems.

126
00:08:41,700 --> 00:08:42,850
Once you're done with that,

127
00:08:42,850 --> 00:08:46,920
come back and we'll actually get to
use it in the follow up tutorial.

128
00:08:46,920 --> 00:08:48,530
Until then, thank you for watching.

