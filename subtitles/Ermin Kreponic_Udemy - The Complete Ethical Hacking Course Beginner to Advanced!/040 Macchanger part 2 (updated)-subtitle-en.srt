1
00:00:00,000 --> 00:00:06,130
Welcome back all, today I'm just gonna go ahead and continue with the MAC changer

2
00:00:06,130 --> 00:00:14,246
Now, in this lecture I will actually use it and I will show you how to change your MAC address

3
00:00:14,246 --> 00:00:24,829
this is primarily meant to be applied in real life circumstances and since these are only learning and training

4
00:00:24,829 --> 00:00:29,927
videos, since this is for learning purposes and these are only training videos,

5
00:00:29,927 --> 00:00:35,189
we're going to do it in the virtual machine, keep in mind that even though this is possible to do

6
00:00:35,189 --> 00:00:43,003
from the Linux command line within the virtual machine it will effectively kill your internet connectivity

7
00:00:43,003 --> 00:00:53,190
on the virtual machine, on real machines or bootable USBs it won't because how it is meant to be used

8
00:00:53,190 --> 00:01:03,428
I will show you how you can also change a MAC address in virtual box without actually losing internet connectivity

9
00:01:03,428 --> 00:01:20,894
Anyway, let just type in "macchanger -r eth0" which is

10
00:01:03,428 --> 00:01:20,894
our interface, actually before that, let's type in

11
00:01:20,894 --> 00:01:33,861
"ifconfig eth0" and we see the MAC address here, I've already changed it but let's revert it back..

12
00:01:33,861 --> 00:01:46,737
let's just go ahead and continue, let's change it again, so let's type in "macchanger - r eth0"

13
00:01:46,737 --> 00:01:55,821
Enter, so it says Permanent MAC, this is our original MAC address, this is the current MAC address which

14
00:01:55,821 --> 00:02:00,554
I've changed it prior to the beggining of this tutorial, and this is the new MAC address

15
00:02:00,554 --> 00:02:08,972
When it says New MAC address, yep, there we go, this is the one that shall be used

16
00:02:08,972 --> 00:02:15,443
So new MAC address is the one that will be used, permanent MAC address is the original one

17
00:02:15,443 --> 00:02:22,070
and the current one, the one that is currently being used is this one, but as soon as you have a new one

18
00:02:22,070 --> 00:02:33,739
then this will be applied, let me show you, so "ifconfig eth0", and you can see that this one

19
00:02:33,739 --> 00:02:42,929
this output and this output are completely the same, but as you can see I can type in

20
00:02:42,929 --> 00:02:59,097
"ping google.com" and this is not going to work, If I type in "macchanger -p" to restore the permanent one

21
00:02:59,097 --> 00:03:06,857
If I type in "ping google.com" you see that the internet connection does work

22
00:03:06,857 --> 00:03:11,993
So you won't have this problem on the physical machine or with the bootable USB

23
00:03:11,993 --> 00:03:20,374
There will be no difficulties there whatsoever but with a virtual machine is a little bit different

24
00:03:20,374 --> 00:03:25,430
If you wish to change it in a virtual machine and if you're using virtual box, it fairly simple but I

25
00:03:25,430 --> 00:03:33,240
as I already stated it makes little sense because the address is already fairly...

26
00:03:33,240 --> 00:03:37,990
I mean, it's basically the MAC address of the virtual machine, who cares?

27
00:03:37,990 --> 00:03:45,622
It's not like, It's a machine that you bought with your own money somewhere or something like that, it's the MAC

28
00:03:45,622 --> 00:03:51,309
address of the virtual machine, so who cares? so just from a logical perspective it makes little sense

29
00:03:51,309 --> 00:03:56,264
but let me show you in case you really want you

30
00:03:56,264 --> 00:04:08,780
Ok, so go ahead and clear the screen and I can type in... So this one is 08:00:27:03:5a:75

31
00:04:08,780 --> 00:04:18,167
feel free to memorize it, feel free not to memorize it.

32
00:04:08,780 --> 00:04:18,167
You can remember the last set so it's 75 and let's see how that changes

33
00:04:18,167 --> 00:04:34,332
So the very first thing we need to do is completely power off our machine,

34
00:04:18,167 --> 00:04:34,332
power off the virtual machine that is. Just wait for it

35
00:04:34,332 --> 00:04:45,791
And there we go, so let's right click on our virtual machine, go to settings, go into network

36
00:04:45,791 --> 00:04:50,997
let's change it to bridge, go into Advanced, it doesn't need to be in bridge,

37
00:04:50,997 --> 00:04:57,794
you can leave it in NAT if you wish, just so you know.

38
00:04:57,794 --> 00:05:09,239
So promiscuous mode allowed all and down below I have a MAC address

39
00:04:57,794 --> 00:05:09,239
and now let's go ahead and rotate it, let's change it to something else

40
00:05:09,239 --> 00:05:24,501
So you see it's randomizing these bits here... yeah, you won't be able to change manufacturer from here

41
00:05:24,501 --> 00:05:32,493
You'll just be able to randomize the device bits, so the manufacturer remains the same

42
00:05:32,493 --> 00:05:40,434
but the device bits will change completely, but either way you are fairly anonymous anyway

43
00:05:41,094 --> 00:05:53,850
but using a virtual machine so no worries there, just go ahead and click on Ok

44
00:05:57,610 --> 00:06:03,634
Are you serious? Please?

45
00:06:19,884 --> 00:06:27,930
I love it when it bugs out like this, it's something that I love the most

46
00:06:27,930 --> 00:06:35,897
Ok, so once again, going to settings and go into network, I'm gonna go ahead and switch to bridge

47
00:06:35,897 --> 00:06:45,260
go into Advanced, click on this green circle to change the MAC address, click on Ok

48
00:06:45,260 --> 00:06:50,511
and then you can power the machine on and the MAC address will be changed

49
00:06:50,511 --> 00:07:02,179
So you can't change the manufacturer but you can change the bits identify the machine

50
00:07:02,179 --> 00:07:12,226
However as I said, it's just a virtual machine so no need to pretty much worry at all, it can be deleted any time you wish and you can create a new one

51
00:07:12,226 --> 00:07:22,762
Anytime you wish, but on a real system and on a bootable USB this would make a lot of difference

52
00:07:22,762 --> 00:07:27,945
So every time you're gonna use this in the real world this would make a lot of difference, but on a virtual machine

53
00:07:27,945 --> 00:07:40,674
which you're using now, for learning purposes I'm just demonstrating it so you know how to do it

54
00:07:40,674 --> 00:07:48,425
Ok so booting in, booting and booting and booting really slowly

55
00:07:48,425 --> 00:07:59,969
I've always loved the speed of virtual machines, just close this and close this and open up our terminal

56
00:07:59,969 --> 00:08:07,838
there is another thing that can be implemented and Linux allows for scheduling of tasks so you can

57
00:08:07,838 --> 00:08:16,233
schedule a task, you run at boot time so you can have your MAC address changed every time you boot

58
00:08:16,233 --> 00:08:29,926
your machine so if you type in "crontab -e" in Kali Linux 2.0 it's gonna ask you which editor would you

59
00:08:29,926 --> 00:08:39,560
like to use. I've always liked to use VIM but I've noticed that people have had problems with to put it on udemy

60
00:08:39,560 --> 00:08:46,941
because it can be quite a bit complicated but it is very powerful however for this purpose I'm gonna use

61
00:08:46,941 --> 00:08:55,847
Nano as it is a lot simpler and easier to use and by far less powerful although for this purpose

62
00:08:55,847 --> 00:09:00,728
we just need a basic editor to change a few things so there's no need to use a very powerful tool

63
00:09:00,728 --> 00:09:04,335
in the first place.

64
00:09:04,335 --> 00:09:12,781
So let's go ahead and, let's pick and option, number 1

65
00:09:12,781 --> 00:09:21,071
And let's go down, so at the bottom you have "m h dom mon dow comand" so what are these options?

66
00:09:28,825 --> 00:09:42,514
M stands for minutes, H stands for hours dom is day of the month, mon is just month and dw is day of the week

67
00:09:42,514 --> 00:09:51,994
and the command that you wish to run, so in a physical or a USB device, you can run something like this

68
00:09:51,994 --> 00:10:02,526
"@reboot" so you disregard these options completely and you just state "@reboot" and then you could

69
00:10:02,526 --> 00:10:11,869
type in something like ''macchanger -r eth0''

70
00:10:11,869 --> 00:10:19,193
you could also bring the interface down and change the MAC address if that doesn't work

71
00:10:19,193 --> 00:10:27,850
so for example you have ''@reboot macchanger -r eth0'' this should work, if it does not

72
00:10:27,850 --> 00:10:34,746
you can do the following

73
00:10:34,746 --> 00:10:44,089
So we're somewhere on the file system, let's go into Documents and we can type in

74
00:10:44,089 --> 00:10:54,585
''mkdir" I don't know, how should we name this file? "whatever.sh"

75
00:10:54,585 --> 00:10:59,522
and then we're gonna type in ''nano whatever.sh''

76
00:10:59,522 --> 00:11:08,596
No, wait, mkdir creates a directory, my sincere apologies for that

77
00:11:08,596 --> 00:11:18,391
I'm just gonna go ahead and type in ''nano whatever.sh'' and then I'm gonna create a small script

78
00:11:18,391 --> 00:11:28,833
for myself here /bin/bash and then you can type in a set of commands basically

79
00:11:28,833 --> 00:11:32,742
exactly the same commands that you would use in the terminal so,

80
00:11:32,742 --> 00:11:42,301
ifconfig eth0 down

81
00:11:47,081 --> 00:11:55,421
Notice also that this is primarily used for wireless interfaces and I am using a wired interface

82
00:11:55,421 --> 00:12:01,623
for these tests so, also you want generally change the MAC address on a wired interface

83
00:12:01,623 --> 00:12:07,691
you would generally change it on a wireless interface, but the procedure is exactly the same

84
00:12:07,691 --> 00:12:13,378
the only thing that differs is the name of the interface, so you don't need to copy this part

85
00:12:13,378 --> 00:12:17,858
or anything like that, I'm just creating this script for demonstration purposes

86
00:12:17,858 --> 00:12:22,913
of what you can do, so you can create entire sets of commands but you want to be executed

87
00:12:22,913 --> 00:12:30,800
at boot time, you configure your system to tune your system the way you want it to be tuned

88
00:12:30,800 --> 00:12:36,774
at boot time, so you wouldn't have to do it every time manually, so you could automate the tasks

89
00:12:36,774 --> 00:12:43,233
type in back maccchanger -r eth0

90
00:12:43,233 --> 00:12:49,043
and then ifconfig eth0 up

91
00:12:49,043 --> 00:13:09,742
and you can also to ensure that it runs smoothly, you type in sleep 2, and we can do this

92
00:13:09,742 --> 00:13:21,789
as well, sleep 2, sleep just puts the execution of... executes ifconfig then sleeps for 2 seconds

93
00:13:21,789 --> 00:13:26,218
then executes the macchanger, then sleeps for 2 seconds and then it brings

94
00:13:26,218 --> 00:13:31,972
the interface back up, this is just to ensure that everything runs smoothly

95
00:13:31,972 --> 00:13:41,867
So Control + O to save, Enter, Control + X to exit, then we do ls, we see the script is there

96
00:13:41,867 --> 00:13:52,032
and now we, we need to make it executable, so type in chmod +x whatever.sh

97
00:13:52,032 --> 00:13:59,359
and then if we do ls again you will see that it's a different color, and you can see that

98
00:13:59,359 --> 00:14:05,379
it is indeed an executable file, this x symbolizes that it is executable,

99
00:14:05,379 --> 00:14:11,377
so the first three are for the user, the second three permissions are for the group

100
00:14:11,377 --> 00:14:18,725
and then third three permissions are for everybody so the user can read, write and execute

101
00:14:18,725 --> 00:14:27,496
the owner of the file is root, the group to which root belongs is called root as well

102
00:14:27,496 --> 00:14:33,600
so the root group can read and execute but it cannot write

103
00:14:33,600 --> 00:14:40,117
Yeah, but if you're root you can do pretty much anything, so if there's another user

104
00:14:40,117 --> 00:14:46,711
Let's say... user called test, that is a member of the root group, he would be able to read,

105
00:14:46,711 --> 00:14:53,183
and execute the file, so read and execute, but it wouldn't be able to write anything

106
00:14:53,183 --> 00:15:00,900
to it, and the rwxr also can read and execute, so everybody else belongs to any other group

107
00:15:00,900 --> 00:15:05,793
Anyway, I know the type perhaps lost you a little bit there, but no worries, this will

108
00:15:05,793 --> 00:15:17,711
clear out the tutorial progresses, let's go ahead and type in crontab -e

109
00:15:17,711 --> 00:15:23,847
Notice how I didn't get prompted for an editor this time, scroll down to the bottom

110
00:15:23,847 --> 00:15:41,206
type in pwd to see that you're currently working in directory, so it's root and then Documents

111
00:15:41,206 --> 00:15:57,771
feel free to copy this, so Control + Shift + C, and then let's go ahead and type in crontab -e once again

112
00:15:57,771 --> 00:16:12,543
Scroll down to the bottom, type in @reboot /root/Documents (with Control + Shift + V) and then whatever.sh

113
00:16:12,543 --> 00:16:19,090
so I haven't really tested this out in this machine but it should work without difficulties and you can

114
00:16:19,090 --> 00:16:25,883
press Control + O to save, Enter to write and Control + X to exit

115
00:16:25,883 --> 00:16:35,546
If I type in ifconfig I can see that the last set of the address is e7:43 let's test the script

116
00:16:35,546 --> 00:16:44,690
to see if it actually works, "sleep is not functional", okay, no big deal, but you can see that

117
00:16:44,690 --> 00:16:53,383
it works even without sleep quite well so the current MAC and the permanent MAC and the new MAC

118
00:16:53,383 --> 00:17:01,484
you can see that it has indeed changed it, let me just reconfigure this a little bit

119
00:17:01,484 --> 00:17:11,802
should've used a capital S just lower case S if I'm not mistaken, if it doesn't no big deal

120
00:17:11,802 --> 00:17:16,954
There you go, you've noticed that the execution of this script was a bit slower because you had

121
00:17:16,954 --> 00:17:24,823
sleep intervals of 2 seconds but indeed again it changes and it will change it every time it reboots

122
00:17:24,823 --> 00:17:29,412
we can make sure of this by just typing in reboot

123
00:17:29,412 --> 00:17:38,370
Running a bit short of time here but well, we should wrap the tutorial up fairly soon

124
00:17:38,370 --> 00:17:46,343
You can put in anything you want in that script so it will, it should run every time that the machine

125
00:17:46,343 --> 00:17:53,882
reboots which is very nice as I said, you can have a preconfigured machine in one single script

126
00:17:53,882 --> 00:18:01,128
so you can change your DNS settings, you can connect to a VPN, you can do whatever

127
00:18:01,128 --> 00:18:06,646
it is that you want to do and put it in one script that will run every time that you boot

128
00:18:06,646 --> 00:18:11,191
so everything will be like 2 seconds instead if you go in manually from here to there

129
00:18:11,191 --> 00:18:14,194
configuring that, ect.

130
00:18:28,254 --> 00:18:42,043
Booting, give me the terminal, zoom, and let's type in macchanger -s eth0

131
00:18:42,043 --> 00:18:46,882
and there we go, so it says that the current MAC is this one and the permanent MAC

132
00:18:46,882 --> 00:18:51,107
is this one so indeed has changed it at reboot

133
00:18:51,107 --> 00:18:55,739
Anyway, I thank you for watching, this will conclude the Macchanger Section

134
00:18:55,739 --> 00:19:02,328
I hope that you have enjoyed it and I bid you all farewell.

