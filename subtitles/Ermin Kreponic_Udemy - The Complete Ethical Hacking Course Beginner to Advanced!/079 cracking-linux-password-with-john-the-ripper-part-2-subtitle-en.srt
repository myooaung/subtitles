1
00:00:00,630 --> 00:00:06,000
Okay so let's just continue up with this follow-up tutorial on John the Ripper.

2
00:00:06,000 --> 00:00:08,790
We have obtained root access and we needed root access

3
00:00:08,790 --> 00:00:14,300
in order to have access to etc passwd and etc shadow

4
00:00:14,300 --> 00:00:16,360
where the passwords are stored.

5
00:00:16,360 --> 00:00:22,000
Now we need to go ahead and type in as root.

6
00:00:22,000 --> 00:00:26,000
"unshadow"

7
00:00:26,000 --> 00:00:29,000
Yes, my typing skills are amazing.

8
00:00:29,000 --> 00:00:37,500
So just type in "unshadow /etc/passwd"

9
00:00:37,500 --> 00:00:44,200
and "/etc/shadow"

10
00:00:44,200 --> 00:00:45,000
Excellent

11
00:00:45,000 --> 00:00:47,250
and we need to store this in some sort of file.

12
00:00:47,250 --> 00:00:49,000
You can name it whatever you want.

13
00:00:49,000 --> 00:00:50,990
You can actually smash your keyboard if you wish.

14
00:00:50,990 --> 00:00:55,790
I'm gonna go ahead and name mine "pass"

15
00:00:55,790 --> 00:00:58,000
Press ENTER

16
00:00:58,000 --> 00:01:02,800
If you do "ls", you'll see that there is a data file named "pass"

17
00:01:02,800 --> 00:01:04,979
Let's just go ahead and type in "cat pass"

18
00:01:04,979 --> 00:01:05,900
Press ENTER

19
00:01:05,900 --> 00:01:07,000
and there you go

20
00:01:07,000 --> 00:01:12,000
I have lots of things here, lots of hashes...

21
00:01:12,000 --> 00:01:15,000
Actually, maybe not lots of hashes.

22
00:01:15,000 --> 00:01:15,800
Sorry about that

23
00:01:15,800 --> 00:01:23,500
but you have "root :", and here you have an encryption

24
00:01:23,500 --> 00:01:28,860
and then down below somewhere, if I can just find it...

25
00:01:28,860 --> 00:01:30,000
There we go

26
00:01:30,000 --> 00:01:34,900
So it says "test :" and then you have an encryption there.

27
00:01:34,900 --> 00:01:37,049
Let's go ahead and clear the screen.

28
00:01:37,049 --> 00:01:42,100
Now "john" has a lot of options here.

29
00:01:42,100 --> 00:01:44,920
Let me just switch to full screen mode

30
00:01:44,920 --> 00:01:46,000
and look --

31
00:01:46,000 --> 00:01:50,400
You can specify certain rules.

32
00:01:50,400 --> 00:01:52,400
You can specify files.

33
00:01:52,400 --> 00:01:58,000
So just do a word list and then read from the word list.

34
00:01:58,000 --> 00:02:04,400
You can have a configuration file for john itself to substitute john.com

35
00:02:04,400 --> 00:02:07,000
which you can also alter as well

36
00:02:07,000 --> 00:02:10,800
There are literally tons and tons of rules here

37
00:02:10,800 --> 00:02:12,920
depending on what you are cracking

38
00:02:12,920 --> 00:02:15,000
what sort of encryption you are cracking

39
00:02:15,000 --> 00:02:18,000
but the most specific rules are the best ones.

40
00:02:18,000 --> 00:02:19,300
Actually, the best ones

41
00:02:19,300 --> 00:02:20,300
That's what I wanted to say

42
00:02:20,300 --> 00:02:24,230
The best ones are when you can actually specify certain rules

43
00:02:24,230 --> 00:02:27,200
on your brute force attack.

44
00:02:27,200 --> 00:02:29,400
So let's say, I don't know

45
00:02:29,400 --> 00:02:32,500
I want you to try all the words

46
00:02:32,500 --> 00:02:37,000
where the first letter is a capital letter

47
00:02:37,000 --> 00:02:41,500
then the second letter is lower case letter or something of a kind

48
00:02:41,500 --> 00:02:44,060
because it is likely the first letter will be capital

49
00:02:44,060 --> 00:02:46,200
more likely than not

50
00:02:46,200 --> 00:02:52,900
and if you know that the the last three characters are actually numbers

51
00:02:52,900 --> 00:02:54,100
you can also do that as well.

52
00:02:54,100 --> 00:02:55,900
There are a ton load of options.

53
00:02:55,900 --> 00:03:00,600
You can do these things with crunch, as I have shown you before

54
00:03:00,600 --> 00:03:04,400
but I just wanted to make a mention of it that it does exist

55
00:03:04,400 --> 00:03:06,800
for John the Ripper as well.

56
00:03:06,800 --> 00:03:09,800
However, what people generally tend to use for John the Ripper

57
00:03:09,800 --> 00:03:13,400
is "--format - NAME"

58
00:03:13,400 --> 00:03:14,600
Now name, of course

59
00:03:14,600 --> 00:03:18,800
you will substitute with one of the encryption types

60
00:03:18,800 --> 00:03:20,000
with one of the hashes

61
00:03:20,000 --> 00:03:24,300
so it forces one of these hashes to be decrypted.

62
00:03:24,300 --> 00:03:27,700
If you don't know which type of a hash it is, it's not a big deal at all.

63
00:03:27,700 --> 00:03:29,200
Don't worry about it.

64
00:03:29,200 --> 00:03:33,200
John will be able to figure it out on its own

65
00:03:33,200 --> 00:03:36,000
but it will issue a warning.

66
00:03:36,000 --> 00:03:37,790
Look at how many of them there are.

67
00:03:37,790 --> 00:03:39,410
There are a lot of them

68
00:03:39,410 --> 00:03:43,000
and as I said, if you don't know which one it is, no big deal.

69
00:03:43,000 --> 00:03:45,000
Also a very nice thing is...

70
00:03:45,000 --> 00:03:47,500
You know those files that you download from torrents

71
00:03:47,500 --> 00:03:49,700
and then, I don't know

72
00:03:49,700 --> 00:03:53,790
sometimes it says that the file is zipped and that there is a password on it?

73
00:03:53,790 --> 00:03:58,600
Well, you can use John the Ripper to actually crack it open.

74
00:03:58,600 --> 00:04:01,000
That's very nice as well

75
00:04:01,000 --> 00:04:06,200
but in any case, we're just gonna use John with the most basic options

76
00:04:06,200 --> 00:04:10,100
in order to crack the password hashes for a Linux system

77
00:04:10,100 --> 00:04:12,900
as we are cracking system passwords today.

78
00:04:12,900 --> 00:04:14,400
You can also use this crack status

79
00:04:14,400 --> 00:04:17,580
"emit a status line whenever a password is cracked"

80
00:04:17,580 --> 00:04:21,760
If you have a very large file of hashes

81
00:04:21,760 --> 00:04:27,500
you can also use this one to tell you when something is cracked

82
00:04:27,500 --> 00:04:31,500
but generally, you just want to leave it to run to the end.

83
00:04:31,500 --> 00:04:33,900
Anyway, let's just go ahead and clear to screen.

84
00:04:33,900 --> 00:04:35,200
Use john

85
00:04:35,200 --> 00:04:38,300
So just type in "john"

86
00:04:38,300 --> 00:04:41,900
It's called John the Ripper, but the command to execute it is just John

87
00:04:41,900 --> 00:04:45,500
and then type in the file that we have previously made.

88
00:04:45,500 --> 00:04:49,000
So "pass", press Enter

89
00:04:49,000 --> 00:04:51,400
and for you, its gonna say, I don't know

90
00:04:51,400 --> 00:04:56,100
something like password's cracked or something like that.

91
00:04:56,100 --> 00:05:00,800
For me, it says "Loaded 2 password hashes with 2 different salts"

92
00:05:00,800 --> 00:05:02,120
So yeah, there we go.

93
00:05:02,120 --> 00:05:04,300
It says "No password hashes left to crack"

94
00:05:04,300 --> 00:05:07,000
because I have cracked them previously

95
00:05:07,000 --> 00:05:10,220
but it doesn't matter whether you find them here or not.

96
00:05:10,220 --> 00:05:14,000
What you want to do is be able to see them later on

97
00:05:14,000 --> 00:05:16,000
and that's the command that is of importance to you

98
00:05:16,000 --> 00:05:18,700
regardless of whether you see them here or not.

99
00:05:18,700 --> 00:05:21,720
So they will be printed out here.

100
00:05:21,720 --> 00:05:24,200
It will say "username password"

101
00:05:24,200 --> 00:05:26,300
However, that's not what you want.

102
00:05:26,300 --> 00:05:32,500
What you want is "john --show"

103
00:05:32,500 --> 00:05:33,700
Oops, sorry

104
00:05:33,700 --> 00:05:36,000
"john --show pass"

105
00:05:36,000 --> 00:05:37,200
Excellent

106
00:05:37,200 --> 00:05:40,000
So you type in "john", then you type in space

107
00:05:40,000 --> 00:05:43,000
once the job is done completely

108
00:05:43,000 --> 00:05:47,000
and then space, dash dash, show, space

109
00:05:47,000 --> 00:05:52,500
and then name of the file for which you wanted to crack the hashes

110
00:05:52,500 --> 00:06:04,500
and then it says "root : test : 0 :0 : root : /root : /bin/bash"

111
00:06:04,500 --> 00:06:09,200
It says "root : test"  and this is the password for root.

112
00:06:09,200 --> 00:06:14,000
So you see here - the root account, colon

113
00:06:14,000 --> 00:06:15,800
The password for root account is test

114
00:06:15,800 --> 00:06:18,300
and you can just disregard the rest

115
00:06:18,300 --> 00:06:23,310
and the password for our regular user

116
00:06:23,310 --> 00:06:25,300
test, colon, test

117
00:06:25,300 --> 00:06:27,370
I really should be using something different here

118
00:06:27,370 --> 00:06:30,000
other than just pretty much naming everything "test"

119
00:06:30,000 --> 00:06:32,000
because it can get a bit confusing.

120
00:06:32,000 --> 00:06:36,000
That's one of the things that I would suggest to you that you change

121
00:06:36,000 --> 00:06:38,400
but many case, this cracking process can take a while

122
00:06:38,400 --> 00:06:40,800
so keep that in mind.

123
00:06:40,800 --> 00:06:42,100
John the Ripper is not perfect

124
00:06:42,100 --> 00:06:46,100
and of course, its performance is dependent

125
00:06:46,100 --> 00:06:49,700
on the physical capabilities of your machine.

126
00:06:49,700 --> 00:06:53,000
If it's something rather complex and difficult

127
00:06:53,000 --> 00:06:56,700
It's gonna take a lot longer than this.

128
00:06:56,700 --> 00:06:58,900
Although there's always that factor of chance

129
00:06:58,900 --> 00:07:03,010
that you will be able to figure it out a relatively short amount of time.

130
00:07:03,010 --> 00:07:06,700
In any case, it doesn't cost you a lot to simply give it a shot

131
00:07:06,700 --> 00:07:09,500
because you always have a chance

132
00:07:09,500 --> 00:07:13,600
and this is the format that you will get for the files.

133
00:07:13,600 --> 00:07:15,800
Make sure to save the files somewhere

134
00:07:15,800 --> 00:07:24,100
so that you can always review them later on with "john --show" command.

135
00:07:24,100 --> 00:07:26,200
I just want to reiterate once again

136
00:07:26,200 --> 00:07:29,800
it makes no difference whatsoever that I wasn't shown passwords here

137
00:07:29,800 --> 00:07:32,500
because it says "No password hashes left to crack"

138
00:07:32,500 --> 00:07:35,330
"Loaded 2 password hashes with 2 different salts"

139
00:07:35,330 --> 00:07:37,000
Doesn't really matter.

140
00:07:37,000 --> 00:07:39,000
All of this you will see

141
00:07:39,000 --> 00:07:40,800
except this last line

142
00:07:40,800 --> 00:07:42,789
and then instead of the last line

143
00:07:42,789 --> 00:07:45,500
you will see something like this

144
00:07:45,500 --> 00:07:48,000
but again, it doesn't matter to you at all

145
00:07:48,000 --> 00:07:50,020
primarily because that's the terminal output.

146
00:07:50,020 --> 00:07:51,200
That's the standard output.

147
00:07:51,200 --> 00:07:53,900
You don't want to just have it there in the standard output.

148
00:07:53,900 --> 00:07:55,410
You want to have it somewhere

149
00:07:55,410 --> 00:07:57,900
where you are always able to access it

150
00:07:57,900 --> 00:08:01,300
and that's why after you've cracked them

151
00:08:01,300 --> 00:08:04,300
clear the screen and use "john --show"

152
00:08:04,300 --> 00:08:05,800
and then the name of the file

153
00:08:05,800 --> 00:08:07,200
in order to list them here

154
00:08:07,200 --> 00:08:11,600
because like that, they are stored for good on your computer

155
00:08:11,600 --> 00:08:14,200
where you can review them at any later time.

156
00:08:14,200 --> 00:08:18,000
You do not want to be memorizing these passwords

157
00:08:18,000 --> 00:08:20,210
and once again, do use something different other than "test"

158
00:08:20,210 --> 00:08:22,500
You can see I was confused there for moment

159
00:08:22,500 --> 00:08:25,000
primarily because I use these things.

160
00:08:25,000 --> 00:08:28,240
Anyway, I bid you all farewell

161
00:08:28,240 --> 00:08:30,400
and in the follow-up tutorial

162
00:08:30,400 --> 00:08:33,500
I'm gonna go ahead and jump into Windows

163
00:08:33,500 --> 00:08:35,700
and see what we can actually do there

164
00:08:35,700 --> 00:08:39,330
and how can we extract and crack the passwords in Windows

165
00:08:39,330 --> 00:08:42,400
or bypass them completely.

166
00:08:42,400 --> 00:08:47,500
Until then, I'm gonna call the tutorial here

167
00:08:47,500 --> 00:08:50,000
and I hope to see you there as well.

