1
00:00:00,030 --> 00:00:04,180
Hello everybody and welcome to this tutorial.

2
00:00:04,180 --> 00:00:04,680
Today I'm gonna go over a tool called hydra.

3
00:00:04,680 --> 00:00:11,059
It will enable you to actually attack websites about login form

4
00:00:11,059 --> 00:00:14,780
which actually have login forms.

5
00:00:14,780 --> 00:00:15,280
Most of them do have login forms.

6
00:00:15,280 --> 00:00:20,040
It's pretty much on all the websites today.

7
00:00:20,040 --> 00:00:20,540
You can log in somewhere on some portion of the site, or something of a kind.

8
00:00:20,540 --> 00:00:25,340
Anyway, it is important to mention that this attack functions

9
00:00:25,340 --> 00:00:30,260
regardless whether the protocol is HTTPS or HTTP

10
00:00:30,260 --> 00:00:36,089
because I'm going to be using the vulnerable app

11
00:00:36,089 --> 00:00:36,589
I'm going to be using HTTP

12
00:00:36,589 --> 00:00:42,730
but it's going to work just fine on HTTPS, no problems.

13
00:00:42,730 --> 00:00:43,230
So regardless of the encryption, it's gonna work.

14
00:00:43,230 --> 00:00:48,149
Don't worry about it.

15
00:00:48,149 --> 00:00:48,649
Anyway, what does Hydra do for us? How does it help us?

16
00:00:48,649 --> 00:00:53,409
Well, it simply enables us to try multiple login credentials over a period of time.

17
00:00:53,409 --> 00:00:59,800
So you can try out, I don't know

18
00:00:59,800 --> 00:01:05,090
20,000 user names with 20,000 passwords, and so on and so forth.

19
00:01:05,090 --> 00:01:05,590
You get the general idea of this.

20
00:01:05,590 --> 00:01:12,030
Anyway, let me just go ahead and minimize this.

21
00:01:12,030 --> 00:01:12,530
Type in "hydra"

22
00:01:12,530 --> 00:01:16,689
and I'm gonna get a menu here for Hydra.

23
00:01:16,689 --> 00:01:17,189
Not a lot of things here

24
00:01:17,189 --> 00:01:23,240
It might seem like a lot, but believe me, it is not.

25
00:01:23,240 --> 00:01:23,740
So you have the note from the author of Hydra.

26
00:01:23,740 --> 00:01:27,880
This is a bit of an interesting segment here this.

27
00:01:27,880 --> 00:01:33,049
It says "Please do not use in military or secret service organizations, or for illegal purposes"

28
00:01:33,049 --> 00:01:38,649
and down below, you have the syntax

29
00:01:38,649 --> 00:01:39,149
and I know that the syntax, when you look at it like this

30
00:01:39,149 --> 00:01:44,750
it seems somewhat strange or difficult to comprehend

31
00:01:44,750 --> 00:01:52,020
but believe me, it is not.

32
00:01:52,020 --> 00:01:52,520
It is rather simple. Of that, you can rest assured.

33
00:01:52,520 --> 00:01:57,429
All of these brackets and stuff like that can seem a bit complex, but we're gonna go over those things

34
00:01:57,429 --> 00:02:01,310
and by the end of this tutorial, you will figure out most of these things.

35
00:02:01,810 --> 00:02:06,450
They're not complicated as they might seem in the syntax part.

36
00:02:06,450 --> 00:02:10,929
Down below, you immediately see the amount of options that Hydra has are not substantial.

37
00:02:10,929 --> 00:02:14,170
I mean, there's just a few of them here.

38
00:02:14,170 --> 00:02:14,670
There's not that many, so it's not that difficult.

39
00:02:14,670 --> 00:02:22,329
You have basically the ability to pass in with a lowercase L

40
00:02:22,329 --> 00:02:27,829
To pass in a single login username

41
00:02:27,829 --> 00:02:28,329
or with a capital L to pass a file leading to a dictionary of user names.

42
00:02:28,329 --> 00:02:35,349
You might wonder how to create these word lists

43
00:02:35,349 --> 00:02:37,549
but you can find some of them on the net.

44
00:02:37,549 --> 00:02:42,489
However, in a lot of cases, it is a lot better to actually create them yourselves

45
00:02:42,489 --> 00:02:47,049
depending on the site that you are attacking.

46
00:02:47,049 --> 00:02:51,389
You want to be able to customize them.

47
00:02:51,389 --> 00:02:51,889
You want to adapt them to your own needs.

48
00:02:51,889 --> 00:02:56,469
For example, let's say that there is a company somewhere

49
00:02:56,469 --> 00:02:59,519
and that company has a profile on LinkedIn or something like that

50
00:02:59,519 --> 00:03:00,019
and it has a list of its employees there

51
00:03:00,019 --> 00:03:05,739
or you can at least find some of the employees that work for the company on LinkedIn there.

52
00:03:07,900 --> 00:03:16,840
So they would probably have something like standardized user names for employee accounts.

53
00:03:16,840 --> 00:03:23,819
Basically what that means is that you either have first name dot last name

54
00:03:23,819 --> 00:03:29,359
or first name space last name

55
00:03:29,359 --> 00:03:29,859
or just last name, nothing in between

56
00:03:29,859 --> 00:03:33,239
or something of a kind.

57
00:03:33,239 --> 00:03:33,739
So you can get those first names and last names

58
00:03:33,739 --> 00:03:41,299
and you can generate a dictionary from there into a file.

59
00:03:41,299 --> 00:03:47,019
To generate a dictionary basically means just put the things that you want to try out into a file

60
00:03:47,019 --> 00:03:49,739
and that's it.

61
00:03:49,739 --> 00:03:50,239
So just put the names in there

62
00:03:50,239 --> 00:03:57,430
and that's not a really big deal.

63
00:03:57,430 --> 00:03:58,560
You can also use crunch if you wish, in order to generate them by default.

64
00:03:58,560 --> 00:03:59,060
It's not that difficult.

65
00:03:59,060 --> 00:04:04,290
It's a pretty simple and straightforward procedure.

66
00:04:04,290 --> 00:04:10,349
Anyway, down below you have lower case P for password.

67
00:04:10,349 --> 00:04:15,189
You can pass in a single password and then try it against multiple user names.

68
00:04:15,189 --> 00:04:20,540
Not a bad idea, but it can be a bad, primarily because there is a low probability of success

69
00:04:20,540 --> 00:04:25,080
but if you have managed to gather some information

70
00:04:25,080 --> 00:04:27,730
if you know something more

71
00:04:27,730 --> 00:04:34,070
usually people use brute force when they acquired at least some bits and portions of information

72
00:04:34,070 --> 00:04:39,360
that you can really acquire a realistically by just browsing the web.

73
00:04:39,360 --> 00:04:45,100
You can also pass a password file, you can pass a username file and a password file

74
00:04:45,100 --> 00:04:45,600
and that's gonna use combinations from both.

75
00:04:45,600 --> 00:04:52,210
Anyway, down below there is a very neat option

76
00:04:52,210 --> 00:04:58,140
There's -C, and then you specify a file.

77
00:04:58,140 --> 00:04:58,640
Where it says file, you just specify the path of that file.

78
00:04:58,640 --> 00:05:04,560
Same thing goes for here and here.

79
00:05:04,560 --> 00:05:07,080
Here, instead of login, you would just type in a login name

80
00:05:07,080 --> 00:05:07,580
and here, instead of a pass, you would just type in the password that you wish to try

81
00:05:07,580 --> 00:05:12,170
as opposed to writing a path to a file here.

82
00:05:12,170 --> 00:05:19,200
Anyway, -C FILE

83
00:05:19,200 --> 00:05:19,700
It's a colon separated thing

84
00:05:19,700 --> 00:05:24,600
so you can type in a login user name and right next to user name, you can type in a password.

85
00:05:24,600 --> 00:05:31,280
It says here "instead of -L/-P options"

86
00:05:31,280 --> 00:05:31,780
Now you might think "Oh well, who's gonna make this tedious list" or something like that

87
00:05:31,780 --> 00:05:35,340
and "Sure, I can download it somewhere from the net...

88
00:05:39,290 --> 00:05:41,820
...but why not use them separately and see what I can get from there"

89
00:05:41,820 --> 00:05:48,660
Well, how about this?

90
00:05:48,660 --> 00:05:49,160
Now I have personally used this -C for routers.

91
00:05:49,160 --> 00:05:57,770
Now for example, a small firm

92
00:05:57,770 --> 00:06:03,410
they have different routers within their buildings somewhere for wireless, and those were of one brand

93
00:06:03,410 --> 00:06:07,780
and they had their main default gateway, which was the exit to the outer world

94
00:06:07,780 --> 00:06:12,040
which was completely different brand

95
00:06:12,040 --> 00:06:19,500
and then they had their interior routers from the main gateway cable goes this router

96
00:06:19,500 --> 00:06:24,630
and then this router covers wireless this room, and so on and so forth.

97
00:06:24,630 --> 00:06:30,570
You get the idea There was a whole spread .

98
00:06:30,570 --> 00:06:31,169
Then I used -C to test out the default user names and passwords

99
00:06:31,169 --> 00:06:35,680
for all those routers

100
00:06:35,680 --> 00:06:40,159
just see if any of those routers actually contains a default username

101
00:06:40,159 --> 00:06:43,960
or a default username/password combination.

102
00:06:43,960 --> 00:06:44,460
Now there aren't a lot of them, but different manufacturers

103
00:06:44,460 --> 00:06:47,969
and I know you think "Oh well, why do you need it?"

104
00:06:47,969 --> 00:06:51,009
"It's just admin admin, right? You can just put in one entry"

105
00:06:51,009 --> 00:06:55,909
Well, no

106
00:06:55,909 --> 00:06:56,409
Different manufacturers have different default credentials on their routers.

107
00:06:56,409 --> 00:07:02,779
Sure a lot of the time, let's face it, it's just admin admin

108
00:07:02,779 --> 00:07:05,830
but for some manufacturers, it can be ubmt for both username and password, I think

109
00:07:05,830 --> 00:07:11,270
it can be root

110
00:07:11,270 --> 00:07:16,759
and then for password, it can be toor -- just reverse of root

111
00:07:16,759 --> 00:07:17,259
and you have these variations that you can find

112
00:07:17,259 --> 00:07:20,330
and that you can just type in default router passwords

113
00:07:20,330 --> 00:07:24,139
and you can find all of them pretty much.

114
00:07:24,139 --> 00:07:24,639
So I just loaded up the list and attempted these.

115
00:07:24,639 --> 00:07:31,610
This saves you a lot of time...

116
00:07:31,610 --> 00:07:35,750
It can raise flags because default credentials have been attempted

117
00:07:35,750 --> 00:07:39,669
but it doesn't raise any flags in a sense that you're not making too many attempts

118
00:07:39,669 --> 00:07:42,460
I mean, you're making a couple of attempts per router moving on

119
00:07:42,460 --> 00:07:47,300
a couple of attempts moving on, and so on and so forth

120
00:07:47,300 --> 00:07:47,800
and with that, you can pretty scan the entire network

121
00:07:47,800 --> 00:07:52,569
whether it contains default credentials.

122
00:07:52,569 --> 00:07:55,800
If any of them contains default credentials

123
00:07:55,800 --> 00:08:00,819
yo have immediately found one weakness that you can write in your report.

124
00:08:00,819 --> 00:08:01,319
With that said, it's a bit of an easy test which saves you a lot of time.

125
00:08:01,319 --> 00:08:06,599
Anyway, down below you can use this in combination with -C

126
00:08:06,599 --> 00:08:11,409
and let me tell you something --

127
00:08:11,409 --> 00:08:17,270
Your home routers usually get probed twice or thrice per day by some IP address from God knows where

128
00:08:17,270 --> 00:08:21,909
probing it for default credentials.

129
00:08:21,909 --> 00:08:26,819
Pretty much everyone's routers gets probed with this once.

130
00:08:26,819 --> 00:08:32,889
You can pass a file with a -M option, which is a list of servers to attack.

131
00:08:32,889 --> 00:08:39,209
Basically a list of IP addresses

132
00:08:39,209 --> 00:08:42,010
and people from different parts of the world, they tend to pass these files

133
00:08:42,010 --> 00:08:42,510
and they pass every single IP on the planet.

134
00:08:42,510 --> 00:08:47,120
They basically mass scan the internet.

135
00:08:47,120 --> 00:08:47,620
They use Nmap to mass scan the internet

136
00:08:47,620 --> 00:08:51,530
and then they load up live hosts with IP addresses to this fire

137
00:08:51,530 --> 00:08:56,990
and then pass this file to Hydra, which in turn, attempts default login credentials

138
00:08:56,990 --> 00:09:03,820
and if the default login credentials succeed

139
00:09:03,820 --> 00:09:08,510
then they can be passed to different scripts that can do different things.

140
00:09:08,510 --> 00:09:15,330
So basically, people have been known to alter DNS settings on massive scales

141
00:09:15,330 --> 00:09:20,740
because you get maybe a million routers which had default credentials in their homes

142
00:09:20,740 --> 00:09:26,510
and you redirect all of their DNS requests to yourself.

143
00:09:26,510 --> 00:09:27,010
You can imagine the possibilities.

144
00:09:27,010 --> 00:09:34,160
I mean, you will be able to do a lot.

145
00:09:34,160 --> 00:09:40,070
From redirecting all of their traffic to a certain site

146
00:09:40,070 --> 00:09:46,410
to basically zombifying them, making them bots or something of a kind.

147
00:09:46,410 --> 00:09:51,570
The options are countless.

148
00:09:51,570 --> 00:09:52,070
It would be even pointless to start listing them

149
00:09:52,070 --> 00:09:57,050
but anyway, that's what people do generally.

150
00:09:57,050 --> 00:09:57,550
If you check out the log files, usually they'll get probed once or twice, maybe thrice, per day.

151
00:09:57,550 --> 00:10:06,640
Anyway, the best way to protect this is to simply to change the default user credentials

152
00:10:06,640 --> 00:10:09,930
and as soon as the script sees that the default ones are not used, who cares.

153
00:10:14,220 --> 00:10:15,270
It's just going to move on.

154
00:10:15,270 --> 00:10:20,150
Also different telecoms in different countries

155
00:10:20,150 --> 00:10:26,050
use different default credentials for different router brands.

156
00:10:26,050 --> 00:10:26,550
These default credentials are always public.

157
00:10:26,550 --> 00:10:31,360
Most of the time they're public

158
00:10:31,360 --> 00:10:31,860
and you can actually find them out on the net.

159
00:10:31,860 --> 00:10:35,880
So in a certain country, there are different credentials for that particular internet service provider

160
00:10:35,880 --> 00:10:41,180
that it uses on its router.

161
00:10:41,180 --> 00:10:41,680
So just before you'd conduct any sort of brute force attack

162
00:10:41,680 --> 00:10:46,940
don't just go all out and try to hammer your way.

163
00:10:46,940 --> 00:10:51,470
Rather instead, do a bit of research.

164
00:10:51,470 --> 00:10:55,550
Do a bit of footprinting.

165
00:10:55,550 --> 00:11:01,029
Try to figure out any additional information that can actually help you out.

166
00:11:01,029 --> 00:11:04,130
Anything is useful.

167
00:11:04,130 --> 00:11:04,630
Anything new that you learn is useful

168
00:11:04,630 --> 00:11:07,080
and it can significantly lower the time of your brute force attack.

169
00:11:07,080 --> 00:11:11,610
It can significantly reduce the possibility of a red flag.

170
00:11:11,610 --> 00:11:12,110
Down below, you have an option -- It's -t for TASKS

171
00:11:12,110 --> 00:11:17,070
Basically, this is the amount of threads that's gonna run.

172
00:11:17,070 --> 00:11:21,329
Threads are processes which can run simultaneously or give an illusion of simultaneous operations.

173
00:11:21,329 --> 00:11:28,180
It says "run TASKS number of connects in parallel (per host, default: 16)"

174
00:11:28,180 --> 00:11:33,610
So, per one host, it's going to attempt 16 connections at relatively the same time.

175
00:11:33,610 --> 00:11:41,019
The differences are trivial, like nano seconds

176
00:11:41,019 --> 00:11:43,760
so it doesn't really matter.

177
00:11:43,760 --> 00:11:45,720
Pretty sure it's nano second.

178
00:11:45,720 --> 00:11:46,220
It could be some other measurement, but it doesn't matter.

179
00:11:46,220 --> 00:11:49,829
The difference between the execution of the threads.

180
00:11:49,829 --> 00:11:54,579
Anyway, you can specify a different amount of threads

181
00:11:54,579 --> 00:11:58,899
depending on what your processor can handle and depending on how obvious you want this attack to be.

182
00:12:03,870 --> 00:12:06,170
because somebody on the other side is gonna see that there are a lot of connections coming in

183
00:12:06,170 --> 00:12:11,140
at pretty much the same time, so it's gonna be obvious that there something amiss

184
00:12:11,140 --> 00:12:18,450
and you have -U

185
00:12:18,450 --> 00:12:18,950
We're gonna skip that for now.

186
00:12:18,950 --> 00:12:19,450
-h is a complete help

187
00:12:19,450 --> 00:12:24,050
and okay, there are some other options down below

188
00:12:24,050 --> 00:12:24,550
but for the time being, they're not that important.

189
00:12:24,550 --> 00:12:28,770
I would strongly advise you to check them out

190
00:12:28,770 --> 00:12:34,120
as they also provide for different factors of attack.

191
00:12:34,120 --> 00:12:34,620
For the time being, I want to show you how to attack a website login

192
00:12:34,620 --> 00:12:40,360
and what I've told you now is specifically related to that purpose.

193
00:12:40,360 --> 00:12:46,910
Anyway, let's just go ahead and see how a Hydra command would look like.

194
00:12:46,910 --> 00:12:51,300
So you just type in "hydra" and  "-l" for a user

195
00:12:51,300 --> 00:12:58,990
Actually, you have an example here

196
00:12:58,990 --> 00:13:04,100
but look at this part is not difficult.

197
00:13:04,100 --> 00:13:07,980
So this anybody can do, but that is not what we are here for to do.

198
00:13:07,980 --> 00:13:12,520
We need to get this part.

199
00:13:12,520 --> 00:13:13,020
This is for a FTP server, which is something we're not gonna do today.

200
00:13:13,020 --> 00:13:17,460
You can see for FTP it's really simple.

201
00:13:17,460 --> 00:13:21,780
There isn't really that much logic to it.

202
00:13:21,780 --> 00:13:23,250
Rather instead,we want to do attack a HTTP web site.

203
00:13:23,250 --> 00:13:27,280
Same procedure would apply for HTTPS, if I'm not mistaken.

204
00:13:27,280 --> 00:13:27,780
It's going to work for HTTPS for sure

205
00:13:27,780 --> 00:13:32,770
but I do believe that pretty much the same procedure applies.

206
00:13:32,770 --> 00:13:40,620
You just need specify that it's HTTPS.

207
00:13:40,620 --> 00:13:41,120
Anyway, what we need is these field names.

208
00:13:41,120 --> 00:13:45,070
So we need a field name of username and we need to field name of passwords.

209
00:13:45,070 --> 00:13:50,370
So what we need to do is right-click on the website, inspect element

210
00:13:50,370 --> 00:13:50,870
Sorry, not inspect element

211
00:13:50,870 --> 00:14:02,010
View selection source

212
00:14:02,010 --> 00:14:02,510
Excellent

213
00:14:02,510 --> 00:14:09,550
Most of the time you're gonna see view page source.

214
00:14:09,550 --> 00:14:15,130
So you will need to be able to find username fields and password fields in order to actually do this

215
00:14:15,130 --> 00:14:22,350
and you will also need the login submit button.

216
00:14:22,350 --> 00:14:26,360
You can also do this burp suite.

217
00:14:26,360 --> 00:14:31,180
I've showed you this in the previous tutorial.

218
00:14:31,180 --> 00:14:31,680
In the SQL injections, where we've actually extracted a cookie.

219
00:14:31,680 --> 00:14:36,860
Using exactly the same procedure, you can also get these things as well

220
00:14:36,860 --> 00:14:41,840
but in this tutorial, I wanted to show a bit of a different method.

221
00:14:41,840 --> 00:14:46,960
perhaps a bit easier method

222
00:14:46,960 --> 00:14:47,460
to actually figure these things out

223
00:14:47,460 --> 00:14:47,960
but it's pretty easy here

224
00:14:47,960 --> 00:14:50,580
primarily because it can get these individual sections and take a look at them like this

225
00:14:50,580 --> 00:15:01,390
but if we, for example, open up any other website like Kali docs

226
00:15:01,390 --> 00:15:01,890
view page source

227
00:15:01,890 --> 00:15:10,380
you can see how a page source would look like.

228
00:15:10,380 --> 00:15:14,959
It's clumsy, it's long

229
00:15:14,959 --> 00:15:15,459
I'm not saying this code is clumsy but it might appear like that

230
00:15:15,459 --> 00:15:22,529
and it's pretty long, so yeah, it's gonna take a while.

231
00:15:22,529 --> 00:15:26,559
I mean, you're gonna find it eventually, but it might take a while to actually figure out where is what.

232
00:15:26,559 --> 00:15:33,329
I would suggest using a CTRL F option and type in...

233
00:15:33,329 --> 00:15:38,209
Okay, this particular website doesn't have a login form, if I'm correct.

234
00:15:38,209 --> 00:15:41,379
Yep, it doesn't actually have a login form, but it doesn't matter.

235
00:15:41,379 --> 00:15:41,879
You just type in user name and hit CTRL F or something of a kind

236
00:15:41,879 --> 00:15:45,529
and then just sweep through the source of website

237
00:15:45,529 --> 00:15:49,629
in order to find whatever it is that you're looking for this

238
00:15:49,629 --> 00:15:51,889
In this particular case, we are looking for the user name and password forms.

239
00:15:57,029 --> 00:16:02,679
So go ahead and right-click view page source.

240
00:16:02,679 --> 00:16:03,179
In our case, view section source

241
00:16:03,179 --> 00:16:06,550
because this allows you to see actually different sections .

242
00:16:06,550 --> 00:16:11,389
It's a lot easier that way.

243
00:16:11,389 --> 00:16:11,889
What we will need here it is name, which will be username

244
00:16:11,889 --> 00:16:20,470
and password for the field is password.

245
00:16:20,470 --> 00:16:27,589
We will need these two, we will need the portion of the address

246
00:16:27,589 --> 00:16:28,089
and we will also need the IP address of the server.

247
00:16:28,089 --> 00:16:38,549
So this is the IP address of our server.

248
00:16:38,549 --> 00:16:42,920
How to find the IP address of that particular server, I showed that in the previous tutorials.

249
00:16:42,920 --> 00:16:47,269
So those are the things that we're going to need in the follow-up tutorial

250
00:16:47,269 --> 00:16:52,049
where we will actually conduct a brute forcing attack.

251
00:16:52,049 --> 00:16:56,329
I did take this time to actually explain all the options, because Hydra can be complicated from time to time

252
00:16:56,329 --> 00:17:00,749
especially with this last section

253
00:17:00,749 --> 00:17:01,249
pass the username and pass the password.

254
00:17:01,249 --> 00:17:05,699
You need to pass additional parameters, which can get a little bit tricky.

255
00:17:05,699 --> 00:17:11,079
You will see soon why.

256
00:17:11,079 --> 00:17:13,000
Anyway, I bid you all farewell and I hope to see you in the follow-up tutorial.

