WEBVTT
1
00:00:01.000 --> 00:00:03.060
- [Instructor] We have discussed already how parent poms

2
00:00:03.060 --> 00:00:07.060
can help an organization control the actual dependencies

3
00:00:07.060 --> 00:00:10.080
used by projects within the organization.

4
00:00:10.080 --> 00:00:13.080
The mechanism for doing this is most often

5
00:00:13.080 --> 00:00:17.000
through the use of dependency management.

6
00:00:17.000 --> 00:00:18.030
To illustrate how this works

7
00:00:18.030 --> 00:00:21.010
let's implement the dependency management section

8
00:00:21.010 --> 00:00:23.080
in our parent pom for our project.

9
00:00:23.080 --> 00:00:26.080
So, let's jump into our IDE.

10
00:00:26.080 --> 00:00:29.000
The first thing that I want you to do

11
00:00:29.000 --> 00:00:32.080
is to go into the sub-project

12
00:00:32.080 --> 00:00:36.090
and cut the properties.

13
00:00:36.090 --> 00:00:40.020
Now go to the parent pom

14
00:00:40.020 --> 00:00:45.030
and paste those properties in.

15
00:00:45.030 --> 00:00:47.020
Now, in order to test this

16
00:00:47.020 --> 00:00:48.040
we're going to go back to the root

17
00:00:48.040 --> 00:00:50.020
of our project end terminal

18
00:00:50.020 --> 00:00:56.010
and just do a maven clean verify.

19
00:00:56.010 --> 00:00:58.070
If this runs to completion, we know that the properties

20
00:00:58.070 --> 00:01:02.040
have actually moved from the parent pom down to the children

21
00:01:02.040 --> 00:01:03.080
which is what we would expect.

22
00:01:03.080 --> 00:01:06.040
And indeed we got a build success.

23
00:01:06.040 --> 00:01:11.000
Now, let's jump back over into our parent pom

24
00:01:11.000 --> 00:01:15.030
and we're going to put in a dependency management section.

25
00:01:15.030 --> 00:01:17.090
Now, to our dependency management section,

26
00:01:17.090 --> 00:01:19.070
we're going to add all of the dependencies

27
00:01:19.070 --> 00:01:22.000
from our child project.

28
00:01:22.000 --> 00:01:28.010
Let's come over here and let's actually copy them all.

29
00:01:28.010 --> 00:01:31.070
Go from the beginning of the dependencies tag to the end

30
00:01:31.070 --> 00:01:34.030
copy those, and drop them

31
00:01:34.030 --> 00:01:38.040
into the dependency management section of the parent.

32
00:01:38.040 --> 00:01:41.070
We can leave scope in, everything else is fine.

33
00:01:41.070 --> 00:01:44.030
But, now go back to the child project

34
00:01:44.030 --> 00:01:50.060
and remove scope and version on every single one of them.

35
00:01:50.060 --> 00:01:52.080
So all we should be specifying

36
00:01:52.080 --> 00:01:55.030
is the group and the artifact.

37
00:01:55.030 --> 00:01:56.060
What this is saying is,

38
00:01:56.060 --> 00:02:00.020
is this project needs these dependencies

39
00:02:00.020 --> 00:02:02.040
but I don't care about scope or version,

40
00:02:02.040 --> 00:02:05.010
let the parent handle those.

41
00:02:05.010 --> 00:02:10.050
Now, I can override anything from the parent in the child

42
00:02:10.050 --> 00:02:14.020
as long as the enforcer plug-in isn't in play.

43
00:02:14.020 --> 00:02:15.040
But since in this case

44
00:02:15.040 --> 00:02:18.050
we don't have the enforcer plug-in running,

45
00:02:18.050 --> 00:02:20.020
I can override whatever I want.

46
00:02:20.020 --> 00:02:23.030
So, we want to make sure that we've removed version

47
00:02:23.030 --> 00:02:28.030
from each and every artifact.

48
00:02:28.030 --> 00:02:31.060
Once we're confirmed that all of that is done,

49
00:02:31.060 --> 00:02:34.000
let's jump back to our terminal

50
00:02:34.000 --> 00:02:37.010
and once again, run maven clean verify.

51
00:02:37.010 --> 00:02:39.050
If this executes to completion,

52
00:02:39.050 --> 00:02:40.090
we know that we've actually

53
00:02:40.090 --> 00:02:44.030
built our parent pom correctly now.

54
00:02:44.030 --> 00:02:46.050
Now, as you can see, we've got a build success

55
00:02:46.050 --> 00:02:48.000
which is what we want.

56
00:02:48.000 --> 00:02:50.030
Now, we can go much further than this.

57
00:02:50.030 --> 00:02:54.020
We could go and move all of our plug-in management

58
00:02:54.020 --> 00:02:56.040
into our parent pom as well.

59
00:02:56.040 --> 00:03:00.060
Specifically the things around build and reporting.

60
00:03:00.060 --> 00:03:03.010
We're going to leave that for your to do on your own.

61
00:03:03.010 --> 00:03:07.000
The idea here is to really show the power of this section

62
00:03:07.000 --> 00:03:09.000
by removing the versions.

63
00:03:09.000 --> 00:03:12.000
This allows your developers not to worry about things

64
00:03:12.000 --> 00:03:15.020
but, for all of your projects to share a version

65
00:03:15.020 --> 00:03:18.030
which means, if a defect exists

66
00:03:18.030 --> 00:03:20.070
you could impact the entire build

67
00:03:20.070 --> 00:03:23.060
by simply changing the version in your parent pom

68
00:03:23.060 --> 00:03:27.020
and triggering a new release of all of your artifacts.

69
00:03:27.020 --> 00:03:29.030
Again, we can go much further

70
00:03:29.030 --> 00:03:31.020
but I'm going to leave that up to you.

71
00:03:31.020 --> 00:03:35.000
Just know that this is how a parent pom works.

