WEBVTT
1
00:00:01.010 --> 00:00:02.070
- [Instructor] The Maven Build Lifecycle

2
00:00:02.070 --> 00:00:05.060
is made up of three main lifecycles,

3
00:00:05.060 --> 00:00:09.040
each of which serves a distinct purpose.

4
00:00:09.040 --> 00:00:14.070
The three built-in lifecycles are default, clean, and site.

5
00:00:14.070 --> 00:00:17.090
The default life cycle is the main one that is used

6
00:00:17.090 --> 00:00:21.020
for project build and deployment.

7
00:00:21.020 --> 00:00:24.060
The clean lifecycle we've seen as well in our commands,

8
00:00:24.060 --> 00:00:27.040
and it is responsible for cleaning the project,

9
00:00:27.040 --> 00:00:30.050
specifically, the target directory.

10
00:00:30.050 --> 00:00:33.030
The site lifecycle we have also seen,

11
00:00:33.030 --> 00:00:35.080
and it is responsible for generating

12
00:00:35.080 --> 00:00:39.020
all of the site documentation.

13
00:00:39.020 --> 00:00:43.010
Each lifecycle is made up of phases.

14
00:00:43.010 --> 00:00:45.040
Let's dig into phases a little bit

15
00:00:45.040 --> 00:00:48.050
by looking at the default phases.

16
00:00:48.050 --> 00:00:50.050
But first, we need to understand

17
00:00:50.050 --> 00:00:56.000
that a phase is a stage or a step in the lifecycle.

18
00:00:56.000 --> 00:00:58.060
The default lifecycle, for instance,

19
00:00:58.060 --> 00:01:03.000
has phases for validation, compilation, testing,

20
00:01:03.000 --> 00:01:08.050
packaging, verification, installation, and deployment.

21
00:01:08.050 --> 00:01:09.090
For instance, earlier,

22
00:01:09.090 --> 00:01:12.090
when we called the Maven clean package,

23
00:01:12.090 --> 00:01:15.080
we wanted to execute the clean lifecycle.

24
00:01:15.080 --> 00:01:18.030
Then, in the build lifecycle,

25
00:01:18.030 --> 00:01:23.010
we wanted to run up to and including, the package phase.

26
00:01:23.010 --> 00:01:26.090
You must execute all phases in order

27
00:01:26.090 --> 00:01:31.030
so you get every phase in a lifecycle, up to and including,

28
00:01:31.030 --> 00:01:34.080
the one that you call with your Maven command.

29
00:01:34.080 --> 00:01:39.010
Phases themselves are made up of goals.

30
00:01:39.010 --> 00:01:44.030
Goals are individual tasks within a phase.

31
00:01:44.030 --> 00:01:47.040
More specifically, goals of a plugin

32
00:01:47.040 --> 00:01:51.080
are bound to a phase in the lifecycle.

33
00:01:51.080 --> 00:01:55.090
Goals can be triggered on plugins individually.

34
00:01:55.090 --> 00:01:58.040
For instance, the dependency plugin

35
00:01:58.040 --> 00:02:01.010
has a dependency analyze goal.

36
00:02:01.010 --> 00:02:05.030
This can be triggered on the project from the command line

37
00:02:05.030 --> 00:02:08.010
and it will tell you the status of your dependencies.

38
00:02:08.010 --> 00:02:09.030
And we're going to look at this one

39
00:02:09.030 --> 00:02:11.080
a little bit more detailed later on,

40
00:02:11.080 --> 00:02:15.050
but, this is a very useful dependency goal

41
00:02:15.050 --> 00:02:17.080
because it will allow you to ensure

42
00:02:17.080 --> 00:02:21.050
that you are declaring the dependencies you are using,

43
00:02:21.050 --> 00:02:25.030
as well as not loading jars that you don't need.

44
00:02:25.030 --> 00:02:28.070
Goals can be very useful during development,

45
00:02:28.070 --> 00:02:32.030
especially when you don't want to run full phases

46
00:02:32.030 --> 00:02:35.080
just to get the output of a specific plugin,

47
00:02:35.080 --> 00:02:38.000
let's say, like Surefire.

