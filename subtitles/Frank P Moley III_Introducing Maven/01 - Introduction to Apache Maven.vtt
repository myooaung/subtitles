WEBVTT
1
00:00:01.000 --> 00:00:04.040
- [Instructor] Apache Maven isn't the new kid on the block,

2
00:00:04.040 --> 00:00:08.000
but a look at Maven Central will let you understand

3
00:00:08.000 --> 00:00:11.010
why it is still very relevant and popular

4
00:00:11.010 --> 00:00:13.090
in today's Java development shops.

5
00:00:13.090 --> 00:00:16.090
In the Apache Foundation's own words,

6
00:00:16.090 --> 00:00:20.050
Apache Maven is a software project management

7
00:00:20.050 --> 00:00:23.000
and comprehension tool.

8
00:00:23.000 --> 00:00:25.080
The project management comes from a single touchpoint

9
00:00:25.080 --> 00:00:30.080
from Maven, the POM file, or Project Object Model.

10
00:00:30.080 --> 00:00:34.020
For better or worse, Maven is still mainly known

11
00:00:34.020 --> 00:00:38.030
for its original core purpose, software builds.

12
00:00:38.030 --> 00:00:41.010
It was developed to streamline builds

13
00:00:41.010 --> 00:00:44.040
and it does a very good job of doing that today.

14
00:00:44.040 --> 00:00:48.040
I have built more projects, projects that are still in use,

15
00:00:48.040 --> 00:00:53.010
both publicly and privately today, using Apache Maven.

16
00:00:53.010 --> 00:00:57.090
In my opinion, Maven is the single easiest tool to use

17
00:00:57.090 --> 00:01:02.040
to build your software, maintain and publish your artifacts,

18
00:01:02.040 --> 00:01:05.090
report on your software, and publish documentation

19
00:01:05.090 --> 00:01:09.030
on your software, just to name a few.

20
00:01:09.030 --> 00:01:11.080
Apache lists some of its core objectives

21
00:01:11.080 --> 00:01:15.010
for Maven on their website, and I want to talk about them

22
00:01:15.010 --> 00:01:18.000
as part of the foundation of this course,

23
00:01:18.000 --> 00:01:19.090
as we will touch them all.

24
00:01:19.090 --> 00:01:24.020
The first is to make the build process easier.

25
00:01:24.020 --> 00:01:27.070
Maven aims to extract you from the build process

26
00:01:27.070 --> 00:01:31.020
so you don't need to know all of the details.

27
00:01:31.020 --> 00:01:35.080
Maven also aims to provide a uniform build system.

28
00:01:35.080 --> 00:01:40.070
Because it is based on a POM file that contains plugins,

29
00:01:40.070 --> 00:01:45.000
you get consistent behavior for every single artifact build,

30
00:01:45.000 --> 00:01:48.020
as well as across many artifacts.

31
00:01:48.020 --> 00:01:50.050
Furthermore, once you can understand

32
00:01:50.050 --> 00:01:53.040
how a single project builds under Maven,

33
00:01:53.040 --> 00:01:57.010
you can use that knowledge on every project build

34
00:01:57.010 --> 00:01:58.080
by Apache Maven.

35
00:01:58.080 --> 00:02:01.090
Maven almost prides itself on documentation

36
00:02:01.090 --> 00:02:04.060
about your build, and to be honest,

37
00:02:04.060 --> 00:02:07.060
it is still one of my favorite features.

38
00:02:07.060 --> 00:02:11.060
With Apache Maven, you get a wealth of information,

39
00:02:11.060 --> 00:02:15.070
much of it with very little work about your project,

40
00:02:15.070 --> 00:02:18.070
just by using Maven as a tool.

41
00:02:18.070 --> 00:02:21.050
Now, we will talk about many of these data,

42
00:02:21.050 --> 00:02:25.000
but things like dependency list, change logs,

43
00:02:25.000 --> 00:02:28.020
test execution reports, Java docs, et cetera,

44
00:02:28.020 --> 00:02:31.030
are just a couple characters away.

45
00:02:31.030 --> 00:02:34.010
Maven also has some strong opinions

46
00:02:34.010 --> 00:02:38.050
about project structure that they force you as a developer,

47
00:02:38.050 --> 00:02:41.000
but these are aimed at giving you some

48
00:02:41.000 --> 00:02:43.070
of the basic best practices to follow

49
00:02:43.070 --> 00:02:46.010
when writing your code.

50
00:02:46.010 --> 00:02:49.070
Maven is designed to be passive to change.

51
00:02:49.070 --> 00:02:51.050
While upgrading to the latest features

52
00:02:51.050 --> 00:02:53.070
is trivial in most cases,

53
00:02:53.070 --> 00:02:56.060
and that is what they specify as the goal,

54
00:02:56.060 --> 00:03:00.010
the fact is they do a very good job of not breaking

55
00:03:00.010 --> 00:03:04.060
existing functionality as well when they do an upgrade.

56
00:03:04.060 --> 00:03:07.010
With all of this said, you may wonder why

57
00:03:07.010 --> 00:03:10.040
I choose Apache Maven as my build system of choice

58
00:03:10.040 --> 00:03:13.010
and why you should as well.

59
00:03:13.010 --> 00:03:17.020
I've already alluded to this, but Maven just works.

60
00:03:17.020 --> 00:03:19.080
I have done everything from basic builds

61
00:03:19.080 --> 00:03:25.000
to complex projects, all of which using Apache Maven.

62
00:03:25.000 --> 00:03:29.080
And from that perspective, it is an amazing system.

63
00:03:29.080 --> 00:03:34.040
In addition, Apache Maven is super easy to use.

64
00:03:34.040 --> 00:03:37.050
You have a single touchpoint for what you want to do.

65
00:03:37.050 --> 00:03:39.050
There's no languages to learn,

66
00:03:39.050 --> 00:03:42.000
there's no digging in for examples.

67
00:03:42.000 --> 00:03:45.050
Maven's website and plugin sites have great examples

68
00:03:45.050 --> 00:03:50.020
of what you as a developer actually want to do.

69
00:03:50.020 --> 00:03:53.020
Because Apache Maven is so common

70
00:03:53.020 --> 00:03:55.080
and there is such a strong user base,

71
00:03:55.080 --> 00:04:00.000
finding answers to your questions is pretty easy.

72
00:04:00.000 --> 00:04:02.090
And finally, from a Java perspective,

73
00:04:02.090 --> 00:04:05.090
especially when building hundreds of artifacts

74
00:04:05.090 --> 00:04:08.090
for distributed microservices platform,

75
00:04:08.090 --> 00:04:11.070
Maven has never failed me.

76
00:04:11.070 --> 00:04:13.070
Now there are always certain aspects

77
00:04:13.070 --> 00:04:16.020
that another build system may do better.

78
00:04:16.020 --> 00:04:18.050
However, from a feature perspective

79
00:04:18.050 --> 00:04:23.000
and operations perspective, Maven just works.

