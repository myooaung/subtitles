WEBVTT
1
00:00:01.000 --> 00:00:02.090
- [Narrator] The Tools Plugins tend to be

2
00:00:02.090 --> 00:00:05.020
the most configuration-heavy

3
00:00:05.020 --> 00:00:06.070
of all of your plugins.

4
00:00:06.070 --> 00:00:08.070
And these are the ones that I tend to reference

5
00:00:08.070 --> 00:00:12.000
the Apache site more often than anything else.

6
00:00:12.000 --> 00:00:13.000
Once again, we're going to jump

7
00:00:13.000 --> 00:00:15.020
back into our browser

8
00:00:15.020 --> 00:00:17.020
and take a look at our Plugins page

9
00:00:17.020 --> 00:00:20.090
at maven.apache.org/plugins.

10
00:00:20.090 --> 00:00:21.090
We're going to go ahead and scroll down here

11
00:00:21.090 --> 00:00:24.080
to the Tools section.

12
00:00:24.080 --> 00:00:26.030
And the first one that we're going to talk about

13
00:00:26.030 --> 00:00:28.000
is the Dependency Plugin.

14
00:00:28.000 --> 00:00:30.030
And this is by far the most used

15
00:00:30.030 --> 00:00:33.090
of all the plugins in the Apache world.

16
00:00:33.090 --> 00:00:35.030
We're going to focus on this plugin

17
00:00:35.030 --> 00:00:36.080
quite a bit later on,

18
00:00:36.080 --> 00:00:39.030
when we talk about specifics of dependencies.

19
00:00:39.030 --> 00:00:43.020
But for now, let's take a look at the usage.

20
00:00:43.020 --> 00:00:45.060
The usage of this plugin actually has

21
00:00:45.060 --> 00:00:48.090
a lot of configuration that you can apply to it

22
00:00:48.090 --> 00:00:52.000
if you choose to.

23
00:00:52.000 --> 00:00:53.090
Furthermore, there's lots of examples

24
00:00:53.090 --> 00:00:58.000
of what to do when you want to handle specific events

25
00:00:58.000 --> 00:01:00.010
within your dependencies.

26
00:01:00.010 --> 00:01:02.050
Again, this is a very useful plugin,

27
00:01:02.050 --> 00:01:04.090
and one that you'll configure quite a bit.

28
00:01:04.090 --> 00:01:07.000
So I encourage you to study this a little bit

29
00:01:07.000 --> 00:01:11.090
as you go throughout the rest of this course.

30
00:01:11.090 --> 00:01:13.060
The next one that I want to talk about

31
00:01:13.060 --> 00:01:16.030
is the Enforcer Plugin.

32
00:01:16.030 --> 00:01:18.050
This one is really cool if you want to make sure

33
00:01:18.050 --> 00:01:20.050
that everyone in your organization

34
00:01:20.050 --> 00:01:22.090
is actually following the rules

35
00:01:22.090 --> 00:01:26.030
and doing the things that you say must be done.

36
00:01:26.030 --> 00:01:28.040
This is set at a parent POM

37
00:01:28.040 --> 00:01:31.040
that everyone in your organization consumes.

38
00:01:31.040 --> 00:01:33.010
And the purpose of this is to make sure

39
00:01:33.010 --> 00:01:36.040
that people are using the versions of Maven and Java

40
00:01:36.040 --> 00:01:38.070
that you want them to use.

41
00:01:38.070 --> 00:01:40.010
Alright, so we can take a look at this

42
00:01:40.010 --> 00:01:42.080
at the Usage page here.

43
00:01:42.080 --> 00:01:45.030
And you'll see that we can enforce things

44
00:01:45.030 --> 00:01:48.090
like which version of Java do you want to use?

45
00:01:48.090 --> 00:01:50.050
Which version of Maven?

46
00:01:50.050 --> 00:01:54.030
But take a look here at line 16 of this configuration.

47
00:01:54.030 --> 00:01:57.060
We can actually specify specific rules.

48
00:01:57.060 --> 00:02:00.010
Now there's a really cool default rule

49
00:02:00.010 --> 00:02:02.020
that if you set the level to be error

50
00:02:02.020 --> 00:02:05.040
and somebody uses a plugin that you define

51
00:02:05.040 --> 00:02:06.060
as something that is banned,

52
00:02:06.060 --> 00:02:08.070
it will actually fail the build.

53
00:02:08.070 --> 00:02:11.060
So you can restrict people from using plugins

54
00:02:11.060 --> 00:02:12.080
within your organization

55
00:02:12.080 --> 00:02:14.080
that you don't want them to.

56
00:02:14.080 --> 00:02:18.020
There's also plugins written by other companies,

57
00:02:18.020 --> 00:02:20.010
like Sumner Type for instance,

58
00:02:20.010 --> 00:02:23.030
that can actually prevent security-related jars

59
00:02:23.030 --> 00:02:26.090
and plugins from being used within your ecosystem

60
00:02:26.090 --> 00:02:29.010
through this Enforcer Plugin.

61
00:02:29.010 --> 00:02:31.090
If you're responsible for any form of security

62
00:02:31.090 --> 00:02:34.060
or management within your organization,

63
00:02:34.060 --> 00:02:36.080
take a look at this Enforcer Plugin,

64
00:02:36.080 --> 00:02:38.050
because you may find that

65
00:02:38.050 --> 00:02:41.070
it actually improves your efficiency,

66
00:02:41.070 --> 00:02:43.030
and you don't really have to do anything

67
00:02:43.030 --> 00:02:45.030
other than configure, once,

68
00:02:45.030 --> 00:02:49.050
in the parent POM that everyone else is already using.

69
00:02:49.050 --> 00:02:52.040
We'll jump back up here to the Plugin page,

70
00:02:52.040 --> 00:02:55.030
and now I want to take a look at the Jarsigner.

71
00:02:55.030 --> 00:02:58.040
And the Jarsigner is used to sign

72
00:02:58.040 --> 00:02:59.080
your project

73
00:02:59.080 --> 00:03:02.090
using a PKI encryption scheme.

74
00:03:02.090 --> 00:03:05.050
And if you take a look at the Usage here,

75
00:03:05.050 --> 00:03:07.080
you will see that when we configure it,

76
00:03:07.080 --> 00:03:09.020
we give it a key store,

77
00:03:09.020 --> 00:03:12.000
and that key store contains a certificate

78
00:03:12.000 --> 00:03:15.060
that allows us to sign this artifact.

79
00:03:15.060 --> 00:03:17.030
A lot of times when you're dealing with things,

80
00:03:17.030 --> 00:03:19.030
especially in the security world,

81
00:03:19.030 --> 00:03:21.090
you want to only use signed jars

82
00:03:21.090 --> 00:03:24.070
when you run your application server.

83
00:03:24.070 --> 00:03:26.060
Sometimes this is a great way to make sure

84
00:03:26.060 --> 00:03:29.050
that rogue applications don't get onto your classloader,

85
00:03:29.050 --> 00:03:32.040
because you only use things that are signed

86
00:03:32.040 --> 00:03:34.030
by your institution.

87
00:03:34.030 --> 00:03:36.080
This can actually be part of your control structure

88
00:03:36.080 --> 00:03:38.080
for SOX or PCI

89
00:03:38.080 --> 00:03:40.050
if you need it to be.

90
00:03:40.050 --> 00:03:43.080
This Jarsigner, though it doesn't get used a lot,

91
00:03:43.080 --> 00:03:44.080
when it is needed,

92
00:03:44.080 --> 00:03:47.020
can really be a powerful tool,

93
00:03:47.020 --> 00:03:51.070
which is why I wanted to show it to you.

94
00:03:51.070 --> 00:03:53.050
Now, of all of these plugins,

95
00:03:53.050 --> 00:03:56.050
the one that I have used the most,

96
00:03:56.050 --> 00:03:58.060
is the Release Plugin.

97
00:03:58.060 --> 00:04:00.080
The Release Plugin is a tool

98
00:04:00.080 --> 00:04:03.080
that allows you to build a project

99
00:04:03.080 --> 00:04:05.060
and release it.

100
00:04:05.060 --> 00:04:09.010
And by releasing it, it's doing several things.

101
00:04:09.010 --> 00:04:12.040
It's doing things like manipulating the version,

102
00:04:12.040 --> 00:04:14.050
tagging things in SCM,

103
00:04:14.050 --> 00:04:17.010
releasing it to your organization's repository,

104
00:04:17.010 --> 00:04:19.040
and then preparing the project

105
00:04:19.040 --> 00:04:21.060
for the next iteration.

106
00:04:21.060 --> 00:04:24.090
This Release Plugin is used a lot in organizations

107
00:04:24.090 --> 00:04:27.040
that are both manually tagging artifacts

108
00:04:27.040 --> 00:04:30.050
as well as running things through CI/CD.

109
00:04:30.050 --> 00:04:32.030
Now, there are some caveats,

110
00:04:32.030 --> 00:04:35.000
especially with the way that you use Git.

111
00:04:35.000 --> 00:04:36.070
If you are using Git for SCM,

112
00:04:36.070 --> 00:04:38.040
you have to be real careful

113
00:04:38.040 --> 00:04:40.060
about how this plugin operates

114
00:04:40.060 --> 00:04:42.070
and the permissions that it needs.

115
00:04:42.070 --> 00:04:45.060
But, the documentation is really clear

116
00:04:45.060 --> 00:04:48.090
and shows you how to go about this process

117
00:04:48.090 --> 00:04:50.090
in a typical flow.

118
00:04:50.090 --> 00:04:54.020
The Release Plugin can save you a lot of repetitive,

119
00:04:54.020 --> 00:04:57.050
manual work by providing those common steps

120
00:04:57.050 --> 00:04:59.020
through a simple plugin.

121
00:04:59.020 --> 00:05:01.090
Now there's a lot of other tools here that you can look at,

122
00:05:01.090 --> 00:05:03.020
but for the purpose of this course,

123
00:05:03.020 --> 00:05:05.060
these are the big ones I wanted to point out,

124
00:05:05.060 --> 00:05:08.000
but the documentation is rich for all of them,

125
00:05:08.000 --> 00:05:10.000
so I encourage you to take a look.

