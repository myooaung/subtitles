WEBVTT
1
00:00:01.010 --> 00:00:02.020
- [Instructor] We've already looked a little

2
00:00:02.020 --> 00:00:04.080
at Maven reporting through the use of Maven sites,

3
00:00:04.080 --> 00:00:06.090
but I want to talk a little bit more about

4
00:00:06.090 --> 00:00:11.010
the value proposition of these documentation tools.

5
00:00:11.010 --> 00:00:13.040
In today's world we have many different ways

6
00:00:13.040 --> 00:00:15.060
to document our work as developers.

7
00:00:15.060 --> 00:00:18.000
So you may be asking why we need to use

8
00:00:18.000 --> 00:00:20.080
yet another documentation tool?

9
00:00:20.080 --> 00:00:23.090
One of the primary reasons are that Maven sites

10
00:00:23.090 --> 00:00:28.010
provide build specific documentation.

11
00:00:28.010 --> 00:00:31.030
In addition, because the documentation is part

12
00:00:31.030 --> 00:00:32.060
of the build process,

13
00:00:32.060 --> 00:00:37.020
when using Maven sites it can be automated.

14
00:00:37.020 --> 00:00:39.040
And maybe even more important yet,

15
00:00:39.040 --> 00:00:42.090
because of the automation and the actual reporting

16
00:00:42.090 --> 00:00:44.070
on the code base itself,

17
00:00:44.070 --> 00:00:47.090
Maven sites never become stale.

18
00:00:47.090 --> 00:00:50.050
In fact, because it lives with your code,

19
00:00:50.050 --> 00:00:54.040
its opportunity to become stale is much smaller.

20
00:00:54.040 --> 00:00:58.080
And finally, because you can define the site details

21
00:00:58.080 --> 00:01:00.050
in the Parent POM,

22
00:01:00.050 --> 00:01:03.050
you can control the deployment process.

23
00:01:03.050 --> 00:01:06.020
Maven sites allow for consistent behavior

24
00:01:06.020 --> 00:01:10.040
across all of your teams with respect to documentation,

25
00:01:10.040 --> 00:01:13.080
which will make it easier to read

26
00:01:13.080 --> 00:01:16.010
because everything across your organization

27
00:01:16.010 --> 00:01:18.080
becomes ubiquitous.

28
00:01:18.080 --> 00:01:20.070
So you want to start building sites,

29
00:01:20.070 --> 00:01:22.070
where do you start?

30
00:01:22.070 --> 00:01:26.020
We've seen and used the Maven site command already,

31
00:01:26.020 --> 00:01:30.050
but because it is a natural fit with other Maven commands

32
00:01:30.050 --> 00:01:34.050
your build tools can just build the site as part

33
00:01:34.050 --> 00:01:36.040
of the standard build.

34
00:01:36.040 --> 00:01:41.010
By doing this we can automate the build in documentation.

35
00:01:41.010 --> 00:01:44.060
And much like we have seen deploying build artifacts,

36
00:01:44.060 --> 00:01:48.050
we can deploy Maven sites through a plugin goal,

37
00:01:48.050 --> 00:01:50.080
Site Deploy.

38
00:01:50.080 --> 00:01:54.010
And all of this can be scripted to be included

39
00:01:54.010 --> 00:01:55.070
in every single build,

40
00:01:55.070 --> 00:02:00.020
making uniform behavior as easy for documentation

41
00:02:00.020 --> 00:02:03.000
as it is for code.

42
00:02:03.000 --> 00:02:05.090
Deploying the site is relatively easy.

43
00:02:05.090 --> 00:02:09.000
Out of the box, Maven Three supports

44
00:02:09.000 --> 00:02:16.020
File, HTTP, and HTTPS protocols for transporting the site.

45
00:02:16.020 --> 00:02:17.070
Because it is HTML,

46
00:02:17.070 --> 00:02:20.090
the easiest mechanism I have found is to push

47
00:02:20.090 --> 00:02:24.070
the documentation to a structured Apache web server

48
00:02:24.070 --> 00:02:28.000
or an HTTPD server.

49
00:02:28.000 --> 00:02:29.090
Now if you want a little bit more secure way

50
00:02:29.090 --> 00:02:33.080
to transport your site, and you should,

51
00:02:33.080 --> 00:02:37.060
you can use configurable wagons to move code.

52
00:02:37.060 --> 00:02:39.080
I used to use webdev in the past,

53
00:02:39.080 --> 00:02:44.050
but today I use SSH, and more specifically SCP,

54
00:02:44.050 --> 00:02:47.030
to move the files from my build system

55
00:02:47.030 --> 00:02:51.000
to the site web server itself.

