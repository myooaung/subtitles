WEBVTT
1
00:00:01.000 --> 00:00:02.050
- [Instructor] Dependencies are probably

2
00:00:02.050 --> 00:00:07.030
the most recognizable part of a Maven POM file.

3
00:00:07.030 --> 00:00:09.080
This is, after all, what most people think about

4
00:00:09.080 --> 00:00:11.040
when they think about Maven.

5
00:00:11.040 --> 00:00:17.030
And it does a very fine job of managing those dependencies.

6
00:00:17.030 --> 00:00:19.020
To take a look at dependencies,

7
00:00:19.020 --> 00:00:22.030
let's open up the exercise files once again.

8
00:00:22.030 --> 00:00:24.070
Navigate to the POM file in our

9
00:00:24.070 --> 00:00:29.000
learning-maven-presidents project.

10
00:00:29.000 --> 00:00:32.080
Now, let's scroll down to the dependencies section.

11
00:00:32.080 --> 00:00:35.090
You will see that I have organized these by scope,

12
00:00:35.090 --> 00:00:37.060
and this is just because this is

13
00:00:37.060 --> 00:00:40.070
how I do dependency management.

14
00:00:40.070 --> 00:00:44.030
I have all of my compile scope and then my runtime scope,

15
00:00:44.030 --> 00:00:46.030
and then my test scope.

16
00:00:46.030 --> 00:00:48.020
Again, this is just my convention,

17
00:00:48.020 --> 00:00:51.000
this is not a hard and fast requirement.

18
00:00:51.000 --> 00:00:53.010
Now we're going to talk about scope quite a bit

19
00:00:53.010 --> 00:00:54.070
later on in the course,

20
00:00:54.070 --> 00:00:58.040
but it's important to note that when scope isn't specified,

21
00:00:58.040 --> 00:01:00.030
compile scope is default,

22
00:01:00.030 --> 00:01:01.090
which is why I mentioned all of these

23
00:01:01.090 --> 00:01:05.010
first ones being compile scope.

24
00:01:05.010 --> 00:01:08.000
You can also see that each dependency

25
00:01:08.000 --> 00:01:10.090
we have listed as a group ID, which,

26
00:01:10.090 --> 00:01:14.000
as I mentioned earlier when talking about our project,

27
00:01:14.000 --> 00:01:17.040
is a top-level organizational structure.

28
00:01:17.040 --> 00:01:20.070
Most companies make this top-level domain

29
00:01:20.070 --> 00:01:22.090
or their company in reverse

30
00:01:22.090 --> 00:01:28.080
or some sub-domain of that in a typical OU style.

31
00:01:28.080 --> 00:01:32.020
Next, you will see that we have the artifact ID.

32
00:01:32.020 --> 00:01:35.070
This is more often how we reference a dependency,

33
00:01:35.070 --> 00:01:38.030
by its common name.

34
00:01:38.030 --> 00:01:40.040
Then you have a version, and we just went through

35
00:01:40.040 --> 00:01:44.000
and replaced a bunch of these with properties,

36
00:01:44.000 --> 00:01:47.030
but this version is the specific build

37
00:01:47.030 --> 00:01:50.050
of the artifact that you want to consume.

38
00:01:50.050 --> 00:01:52.060
When dealing with defects,

39
00:01:52.060 --> 00:01:55.060
especially with security-related defects,

40
00:01:55.060 --> 00:01:57.070
this is very, very important to know

41
00:01:57.070 --> 00:02:01.040
what version of the dependency you are running.

42
00:02:01.040 --> 00:02:04.000
Now this was just a very quick introduction

43
00:02:04.000 --> 00:02:06.050
because we have a whole chapter on dependencies

44
00:02:06.050 --> 00:02:08.020
later on in this course

45
00:02:08.020 --> 00:02:10.070
because, after all, this is one of the

46
00:02:10.070 --> 00:02:15.000
most important aspects of Apache Maven.

