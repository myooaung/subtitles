1
00:00:01,840 --> 00:00:04,940
To create our test, I want to go ahead and open up the

2
00:00:04,940 --> 00:00:08,480
unit test that we have underneath our src/test/java

3
00:00:08,480 --> 00:00:12,340
directory called RestControllerTest.

4
00:00:12,340 --> 00:00:17,320
Currently we have our GetRides test that we had in here from before.

5
00:00:17,320 --> 00:00:21,440
I'm going to go ahead and just add another one inside of here.

6
00:00:21,440 --> 00:00:25,610
So, I'm going to start off by just grabbing this code and

7
00:00:25,610 --> 00:00:29,980
copying it in here and paste it for us to have a starting

8
00:00:29,980 --> 00:00:35,140
point for our testCreateRide method.

9
00:00:35,140 --> 00:00:40,120
I want to walk you through the RestTemplate for doing a put to here so you

10
00:00:40,120 --> 00:00:44,240
can see the object that we're passing in so you more conceptually

11
00:00:44,240 --> 00:00:47,240
understand the whole test that we're trying to write.

12
00:00:47,240 --> 00:00:50,570
So the first thing I'm going to do is, just like our other one,

13
00:00:50,570 --> 00:00:53,050
create an instance of the RestTemplate here.

14
00:00:53,050 --> 00:00:56,470
The difference this time is that we're going to create an instance of a ride.

15
00:00:56,470 --> 00:01:03,660
So we're going to say Ride ride = new Ride, and we're just going to use the

16
00:01:03,660 --> 00:01:08,550
default no arguments constructor, and then we're going to go ahead and say

17
00:01:08,550 --> 00:01:19,140
ride.setName, and we'll call this the Bobsled Trail Ride.

18
00:01:19,140 --> 00:01:20,950
And then we also want to set a duration,

19
00:01:20,950 --> 00:01:26,260
so we'll say ride.setDuration, and we'll say that it took us 35

20
00:01:26,260 --> 00:01:30,240
minutes to do. So I just put a 35 in there.

21
00:01:30,240 --> 00:01:33,870
Now, we can call the RestTemplate's put method.

22
00:01:33,870 --> 00:01:40,430
So we'll say restTemplate and we just want to put, and we're

23
00:01:40,430 --> 00:01:45,650
going to enter in our URL. So we'll put in a string here and say

24
00:01:45,650 --> 00:01:55,970
http://localhost:8080/ride_tracker.

25
00:01:55,970 --> 00:01:58,900
Now if you named your project something different,

26
00:01:58,900 --> 00:02:01,770
you'll want to change this context, of course, and

27
00:02:01,770 --> 00:02:05,040
then we'll call the ride controller.

28
00:02:05,040 --> 00:02:09,770
Then the next thing we're going to do is pass in our ride object

29
00:02:09,770 --> 00:02:13,440
and the put will automatically call that for us.

30
00:02:13,440 --> 00:02:16,690
Now we currently don't have this endpoint in there, we need to

31
00:02:16,690 --> 00:02:20,640
go ahead and modify our controller to do so.

32
00:02:20,640 --> 00:02:25,040
So I'm going to go ahead and open up our RideController.

33
00:02:25,040 --> 00:02:27,000
And right now it's quite simple,

34
00:02:27,000 --> 00:02:33,440
we just go ahead and have our get for all of the rides in there.

35
00:02:33,440 --> 00:02:37,210
I'm going to paste in this code that I have written previously

36
00:02:37,210 --> 00:02:40,670
just so you don't need to watch me type all of this in, and

37
00:02:40,670 --> 00:02:42,940
we'll walk through what it does.

38
00:02:42,940 --> 00:02:49,970
So, I have a request mapping for /ride and a method type of PUT, and we

39
00:02:49,970 --> 00:02:54,090
go ahead and we call this and it takes a request body in, which is the

40
00:02:54,090 --> 00:02:58,240
object that we passed in from our test.

41
00:02:58,240 --> 00:03:01,740
Currently this just returns null, but it's going to

42
00:03:01,740 --> 00:03:05,240
eventually call our service and return an object.

43
00:03:05,240 --> 00:03:11,760
So let's save this. To test this, we can go ahead and start our server back up,

44
00:03:11,760 --> 00:03:17,430
make sure that there's no deployment errors there, everything looks fine, and

45
00:03:17,430 --> 00:03:21,810
we can go into our test that we've now created and rightâ€‘click on

46
00:03:21,810 --> 00:03:29,170
testCreateRide and say Run As, JUnit Test, and we should see that the server

47
00:03:29,170 --> 00:03:33,420
then gets the call for deploying it and we have our unit test that also gets

48
00:03:33,420 --> 00:03:37,380
ran. And we can check that by looking at the tab for the unit test and see that

49
00:03:37,380 --> 00:03:39,440
it came back green.

50
00:03:39,440 --> 00:03:48,000
Let's go ahead and now write the code to talk to our service tier that will eventually call our repository now.

