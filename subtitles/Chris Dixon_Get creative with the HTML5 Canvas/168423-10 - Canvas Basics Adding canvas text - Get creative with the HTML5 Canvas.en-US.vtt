WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.660 --> 00:00:05.950
In this video, we're going to move on from actually drawing shapes and lines,

00:00:05.950 --> 00:00:09.325
and I'm going to show you how to add text to the canvas,

00:00:09.325 --> 00:00:15.200
and how to add various styles and effects to make your text really stand out.

00:00:15.200 --> 00:00:21.010
I've gone ahead and copied the last video and created a adding text code pen,

00:00:21.010 --> 00:00:23.575
and then cleared out the script section,

00:00:23.575 --> 00:00:26.960
leaving the canvas and the context variables.

00:00:27.800 --> 00:00:34.260
The way to add text to the canvas is by using fillText and also strokeText,

00:00:34.260 --> 00:00:38.535
and you should be able to guess what those two do from previous videos.

00:00:38.535 --> 00:00:41.295
The strokeText draws the outline,

00:00:41.295 --> 00:00:45.870
and fillText draws the text with a color fill.

00:00:45.870 --> 00:00:49.440
We're going to begin by using fillText.

00:00:49.440 --> 00:00:57.855
So ctx.fillText, and then the brackets after that.

00:00:57.855 --> 00:01:03.425
The first property we need to add is the text we want to display.

00:01:03.425 --> 00:01:10.970
I'm just going to add some text of adding canvas text.

00:01:11.810 --> 00:01:17.560
Then the starting coordinates of 0, 0.

00:01:18.170 --> 00:01:21.995
We notice that if we look at the canvas on the right-hand side,

00:01:21.995 --> 00:01:25.235
we can't actually see any of the texts that we've just drawn.

00:01:25.235 --> 00:01:28.580
This is because the text coordinates of 0,

00:01:28.580 --> 00:01:32.635
0 are actually at the bottom left of the text.

00:01:32.635 --> 00:01:35.535
To move it down so that we can see it on the screen,

00:01:35.535 --> 00:01:40.065
we are going to change the y-value to be 50.

00:01:40.065 --> 00:01:44.710
Now we can just about see it appearing on the screen there.

00:01:44.810 --> 00:01:47.495
To make it a little bit bigger,

00:01:47.495 --> 00:01:52.500
we can add some font styles, ctx.font.

00:01:53.050 --> 00:01:59.125
Let's set the font to be equal to 50 pixels to make it bigger,

00:01:59.125 --> 00:02:03.460
and also the font type to be Helvetica.

00:02:08.990 --> 00:02:16.039
In fact, to get this to work, we just need to place this just before the fillText,

00:02:16.039 --> 00:02:19.160
and that should make the text be bigger now. There we go.

00:02:19.160 --> 00:02:20.195
That's a lot bigger now,

00:02:20.195 --> 00:02:21.790
and we've changed the font.

00:02:21.790 --> 00:02:24.419
The default size is 10 pixels,

00:02:24.419 --> 00:02:26.895
and it's a sans-serif font.

00:02:26.895 --> 00:02:28.905
Now, let's give it a little bit color.

00:02:28.905 --> 00:02:34.600
Let's add a fillStyle, ctx.fillStyle.

00:02:37.160 --> 00:02:43.750
To make it simple, I'm just going to add a color name of purple.

00:02:44.870 --> 00:02:52.000
Then let's push the text into the center of the canvas by using textAlign.

00:02:54.890 --> 00:02:58.810
I'll put this to be in the center.

00:03:03.260 --> 00:03:06.795
Okay, that's not exactly what we're looking for.

00:03:06.795 --> 00:03:11.120
If we wanted the text to appear in the center of the canvas,

00:03:11.120 --> 00:03:16.120
we need to change the starting position in the fillText method.

00:03:16.120 --> 00:03:20.865
Currently the text is centering over the zero coordinates,

00:03:20.865 --> 00:03:23.160
which is over here.

00:03:23.160 --> 00:03:26.220
Let's push that into the middle of the canvas.

00:03:26.220 --> 00:03:32.770
We're going to add canvas.width over 2.

00:03:33.770 --> 00:03:39.050
The text is referenced from halfway across the canvas.

00:03:39.200 --> 00:03:43.020
Let's do the same for this value,

00:03:43.020 --> 00:03:51.010
change 50 to be canvas height divided by 2,

00:03:51.170 --> 00:03:56.630
and that's the baseline of the text to be across the center of the canvas.

00:03:56.630 --> 00:04:01.155
Okay. Next we are going to take a look at text baseline.

00:04:01.155 --> 00:04:07.249
Before we look at that, I just want to draw a line right across the center of the canvas,

00:04:07.249 --> 00:04:09.930
and you'll see why in just a moment.

00:04:09.930 --> 00:04:12.810
Let's quickly just create a line.

00:04:12.810 --> 00:04:22.275
Move to 0 canvas.height divided by 2.

00:04:22.275 --> 00:04:25.390
Let's draw the line.

00:04:28.490 --> 00:04:33.680
The line is going to be the width of the canvas,

00:04:34.380 --> 00:04:43.540
and then the y position is going to be canvas.height divide by 2.

00:04:43.540 --> 00:04:47.210
Let's draw the line with the stroke.

00:04:50.270 --> 00:04:54.735
Okay, now we've got a line appearing across the center of the canvas,

00:04:54.735 --> 00:04:57.240
and you'll see why in just a moment.

00:04:57.240 --> 00:05:03.460
I'm just going to move the text just to the very bottom there.

00:05:04.100 --> 00:05:08.205
Let's start playing around with the text baseline.

00:05:08.205 --> 00:05:13.990
Underneath there, I'm just going to add ctx.textBaseline.

00:05:14.720 --> 00:05:20.300
As it currently stands, we've got the text also nicely

00:05:20.300 --> 00:05:25.460
on the line with the tails hanging below the imaginary line.

00:05:25.460 --> 00:05:30.050
Let's change this by changing the textBaseline to be bottom,

00:05:30.050 --> 00:05:32.460
and let's see what happens.

00:05:32.770 --> 00:05:36.390
That effectively pushes the text up.

00:05:36.390 --> 00:05:42.944
Every single letter or every part of each letter is now resting on the baseline.

00:05:42.944 --> 00:05:46.920
There's quite a few different options we've got to look at the baseline,

00:05:46.920 --> 00:05:48.975
we can also use top,

00:05:48.975 --> 00:05:52.870
and this pushes everything below the baseline.

00:05:52.870 --> 00:05:55.700
We can also use middle,

00:05:57.920 --> 00:06:03.170
and this adds the baseline to be through the middle of the text.

00:06:06.180 --> 00:06:09.590
There's also alphabetic.

00:06:11.750 --> 00:06:14.160
This brings us back to the start,

00:06:14.160 --> 00:06:16.170
as this is the default value.

00:06:16.170 --> 00:06:20.830
The last one that I'm going to show you is hanging.

00:06:24.500 --> 00:06:29.095
By using hanging, it actually looks a little bit like when using top.

00:06:29.095 --> 00:06:32.680
However, there's no gap between the top of the letters and the baseline.

00:06:32.680 --> 00:06:36.620
They're effectively just hanging off the baseline there.

00:06:36.800 --> 00:06:40.165
When using the fillText method,

00:06:40.165 --> 00:06:43.250
there's actually one more parameter which we can add,

00:06:43.250 --> 00:06:45.690
and this is an optional value.

00:06:45.690 --> 00:06:48.390
This sets the maximum width,

00:06:48.390 --> 00:06:53.210
which we can use to restrict the text to a certain size.

00:06:53.210 --> 00:06:58.960
As an example, I'm just going to restrict the text to be 200 pixels wide.

00:06:58.960 --> 00:07:02.465
You can see that squashes the text up.

00:07:02.465 --> 00:07:05.700
Let's change it to 300,

00:07:05.700 --> 00:07:08.330
that makes it a little bit wider.

00:07:08.330 --> 00:07:14.500
That's useful if we want to keep the bounds of the text within a certain container.

00:07:14.500 --> 00:07:18.755
Of course, just like when using all the shapes in previous videos,

00:07:18.755 --> 00:07:20.465
rather than using fill,

00:07:20.465 --> 00:07:24.755
we can change this to be stroke, or stroke text.

00:07:24.755 --> 00:07:29.250
Then we just get the outline of the text rather than a solid fill color.

00:07:29.480 --> 00:07:32.160
That's how we can add text to the canvas,

00:07:32.160 --> 00:07:34.845
and how we can add styling to our text.

00:07:34.845 --> 00:07:37.290
Now let's move on to the next video.

00:07:37.290 --> 00:07:41.280
We'll take a look at removing sections of the canvas.
