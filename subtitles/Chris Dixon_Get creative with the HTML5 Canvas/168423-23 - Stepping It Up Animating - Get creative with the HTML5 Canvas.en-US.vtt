WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.940
Welcome back guys. In the last video,

00:00:02.940 --> 00:00:05.880
we created this block and red pattern,

00:00:05.880 --> 00:00:08.100
which you can see on the right-hand side.

00:00:08.100 --> 00:00:12.090
We achieved this by creating a red background,

00:00:12.090 --> 00:00:14.640
and then we used a for loop to draw

00:00:14.640 --> 00:00:19.635
the block segments and then we looped round and repeated it six times.

00:00:19.635 --> 00:00:25.095
In this video, we're going to move on one step further and take a look at animating.

00:00:25.095 --> 00:00:29.670
In particular, we're going to take a look at the set interval method,

00:00:29.670 --> 00:00:32.505
which is going to rotate open,

00:00:32.505 --> 00:00:36.405
and the final results would look something like this.

00:00:36.405 --> 00:00:42.640
It's not really that hard to create this effect when using set interval.

00:00:42.640 --> 00:00:46.050
Let's begin by creating its own pen.

00:00:46.730 --> 00:00:50.110
For the last video,

00:00:52.130 --> 00:01:00.330
and I'm going to call this animating, just like that.

00:01:00.330 --> 00:01:04.000
We can reuse all the code from the last video.

00:01:04.000 --> 00:01:09.790
What basically we're going to do is wrap all existing code within a function

00:01:09.790 --> 00:01:16.370
and then pass this function into the set interval method at a specified time delay.

00:01:16.370 --> 00:01:20.545
To begin, we need to wrap the existing code within a function.

00:01:20.545 --> 00:01:23.515
Just below our contacts variable,

00:01:23.515 --> 00:01:28.520
create a function, and this you going to call rotate.

00:01:29.690 --> 00:01:32.850
Then we need to add the curly braces,

00:01:32.850 --> 00:01:35.655
so add the opening curly brace.

00:01:35.655 --> 00:01:37.655
Then right down at the bottom,

00:01:37.655 --> 00:01:44.460
we can add the closing brace, just here.

00:01:44.740 --> 00:01:47.295
I'm back up to the top.

00:01:47.295 --> 00:01:52.945
We just need to add one or two lines within this function just to make it work properly.

00:01:52.945 --> 00:01:59.120
The first thing we need to do is create the reference points in the center of the Canvas.

00:01:59.120 --> 00:02:02.700
Let's use ctx.translate.

00:02:03.230 --> 00:02:08.315
All we want to do is translate to the center of the canvas,

00:02:08.315 --> 00:02:10.760
just like we've done many times before.

00:02:10.760 --> 00:02:14.035
Let's add these inside the brackets.

00:02:14.035 --> 00:02:18.005
Now we've got the reference point in the center of the canvas.

00:02:18.005 --> 00:02:22.560
Then next we want to create a rotate method.

00:02:24.610 --> 00:02:31.365
We're going to rotate by one degree each time a set interval method is called.

00:02:31.365 --> 00:02:37.535
Let's just add Math.Pi divided by 180,

00:02:37.535 --> 00:02:41.315
and this is the equivalent of one degree.

00:02:41.315 --> 00:02:45.720
Then just like we did in the last video where we translated,

00:02:45.720 --> 00:02:49.400
rotated, and then translated back to origin,

00:02:49.400 --> 00:02:59.620
we need to add a second translate to translate back to origin on each rotation.

00:02:59.720 --> 00:03:03.820
We can do the same as the first one, but instead,

00:03:03.820 --> 00:03:10.395
we can use negative just so we are back to origin.

00:03:10.395 --> 00:03:12.060
This translates at the top,

00:03:12.060 --> 00:03:15.060
can then move to the correct position.

00:03:15.060 --> 00:03:22.245
I'm just going to indent this code just like that.

00:03:22.245 --> 00:03:24.480
Then to get this to actually work,

00:03:24.480 --> 00:03:29.945
also actually cause the rotation just above the last curly brace,

00:03:29.945 --> 00:03:32.285
which is for the rotate function.

00:03:32.285 --> 00:03:35.250
We need to add set interval,

00:03:37.700 --> 00:03:40.520
and then it takes in two parameters.

00:03:40.520 --> 00:03:43.490
The first one is the rotate function,

00:03:43.490 --> 00:03:45.410
which will be created.

00:03:45.410 --> 00:03:48.040
You can see that goes really faster.

00:03:48.040 --> 00:03:53.915
The second parameter is the specified time delay in milliseconds.

00:03:53.915 --> 00:03:55.970
Let's just change that to 30,

00:03:55.970 --> 00:03:58.590
and we can slow it down just a little bit.

00:03:59.150 --> 00:04:02.840
Of course this can be changed to you and if you want you prefer.

00:04:02.840 --> 00:04:06.450
Change to 300 makes it really slow,

00:04:07.090 --> 00:04:09.850
so let's just change about there.

00:04:09.850 --> 00:04:15.605
It's actually quite simple to create animation using set interval.

00:04:15.605 --> 00:04:19.010
Just to recap, we use the drawing from

00:04:19.010 --> 00:04:23.450
the last video and surround it inside a rotate function.

00:04:23.450 --> 00:04:25.490
We added one, two lines of code.

00:04:25.490 --> 00:04:28.610
We began with the translate method,

00:04:28.610 --> 00:04:33.365
which made sure that the reference point was in the center of the Canvas.

00:04:33.365 --> 00:04:36.620
We then rotate by one degree,

00:04:36.620 --> 00:04:39.990
each time set interval is called,

00:04:40.190 --> 00:04:44.495
and then we made sure that we translated back to the origin

00:04:44.495 --> 00:04:49.470
so it didn't cause any problems every time we move to the center.

00:04:50.660 --> 00:04:55.100
Then we passed in the rotate function to

00:04:55.100 --> 00:04:59.015
set interval and then stop it going from real fast.

00:04:59.015 --> 00:05:06.895
We added 30 millisecond delay just to slow things down, just like that.

00:05:06.895 --> 00:05:11.415
That's how we can use set interval to create a animation.

00:05:11.415 --> 00:05:14.405
We'll now move on to the final project,

00:05:14.405 --> 00:05:20.730
or have a little bit fun by drawing a mickey mouse face. I'll see you there.
