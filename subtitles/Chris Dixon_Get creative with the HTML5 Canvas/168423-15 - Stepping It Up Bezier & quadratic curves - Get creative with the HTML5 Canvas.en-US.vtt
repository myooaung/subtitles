WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:08.330 --> 00:00:12.450
Welcome back guys. We're going to start things up a little bit now and

00:00:12.450 --> 00:00:16.050
take a look at how to use bezier and quadratic curves.

00:00:16.050 --> 00:00:19.720
Let's create new pen for this video.

00:00:19.720 --> 00:00:27.280
So this is called bezier and quadratic curves.

00:00:29.240 --> 00:00:34.785
We should copy this again just so we don't need to keep remembering how to spell that.

00:00:34.785 --> 00:00:37.959
Paste that in into the title

00:00:46.220 --> 00:00:50.390
and save that, make it a bit more space.

00:00:51.440 --> 00:00:55.480
It should move all the script in again except

00:00:55.480 --> 00:01:01.550
our canvas and context variables. So we're good to go.

00:01:03.830 --> 00:01:07.665
First we're going to take a look at quadratic curves.

00:01:07.665 --> 00:01:11.235
To get started and to explain better how they work,

00:01:11.235 --> 00:01:17.060
first I'm going to draw three circles or three dots on the canvas for reference.

00:01:18.350 --> 00:01:21.700
Let's begin with a path,

00:01:22.310 --> 00:01:25.920
and you see why we draw these in just a moment.

00:01:25.920 --> 00:01:27.790
Let's create the start points,

00:01:27.790 --> 00:01:32.750
and then let's create our first circle, we're at arc.

00:01:32.750 --> 00:01:35.610
So I'm going to make the start points 50,

00:01:35.610 --> 00:01:41.490
250, radius of five,

00:01:41.490 --> 00:01:45.330
and the position of zero to begin with,

00:01:45.330 --> 00:01:51.250
and to make a full circle is two times math.PI.

00:01:51.350 --> 00:01:56.680
I'm just going to copy this arc so you can use it a few more times.

00:01:56.690 --> 00:02:02.740
Let's move to the second points to draw the second circle.

00:02:02.740 --> 00:02:07.400
So one is to be at 550, 50.

00:02:07.400 --> 00:02:10.750
Let's draw the second arc on there,

00:02:10.750 --> 00:02:18.800
and then the third one is going to be moved to position 50,

00:02:18.800 --> 00:02:22.925
50, and then the third circle, just on there.

00:02:22.925 --> 00:02:24.530
Then to draw the circles,

00:02:24.530 --> 00:02:27.000
we'll use the fill method.

00:02:33.290 --> 00:02:39.135
Let's change the positions of the arcs so much should they move to.

00:02:39.135 --> 00:02:44.490
So this one's 550 and 50,

00:02:44.490 --> 00:02:47.460
and the third one is 50 and 50.

00:02:47.460 --> 00:02:52.195
Now, we also got the three points on the canvas as a reference.

00:02:52.195 --> 00:02:54.245
So I'm just going to add a comment.

00:02:54.245 --> 00:02:56.940
This is the start point,

00:02:57.560 --> 00:03:01.060
this is the ending points,

00:03:01.310 --> 00:03:05.910
and then the third one is what we call a control point.

00:03:07.450 --> 00:03:13.955
We use quadraticCurveTo to create what is called a quadratic bezier curve.

00:03:13.955 --> 00:03:17.525
This type of curve begins from the current pen points.

00:03:17.525 --> 00:03:22.840
Let's start with the current pen points by using a moveTo.

00:03:23.540 --> 00:03:27.810
This is the position that we want to begin with,

00:03:27.810 --> 00:03:30.165
which is this first dot here.

00:03:30.165 --> 00:03:33.930
So the starting points was 50, 250.

00:03:33.930 --> 00:03:37.690
Those are dots inside of the brackets,

00:03:37.690 --> 00:03:40.600
which will move the pen to this starting dot there.

00:03:40.600 --> 00:03:43.600
Then we use the quadraticCurveTo method,

00:03:43.600 --> 00:03:50.230
and it takes in the control points and also the ending points. Let's add that now.

00:03:50.230 --> 00:03:53.900
So ctx.quadraticCurveTo.

00:03:58.520 --> 00:04:03.565
The first two parameters are the control points, which is this one.

00:04:03.565 --> 00:04:05.425
This is position 50,

00:04:05.425 --> 00:04:08.985
50, and then two more,

00:04:08.985 --> 00:04:11.085
which is the end point.

00:04:11.085 --> 00:04:14.040
We've also got the endpoints of 550,

00:04:14.040 --> 00:04:21.210
50, and then to actually draw the line,

00:04:21.210 --> 00:04:23.710
we can use the stroke.

00:04:25.070 --> 00:04:28.269
Now let's see what happens.

00:04:29.750 --> 00:04:33.075
We've got a nice quadratic curve line,

00:04:33.075 --> 00:04:36.600
so we've got the starting points we've moved to,

00:04:36.600 --> 00:04:38.995
we've got the ending points,

00:04:38.995 --> 00:04:41.350
which we've added just here,

00:04:41.350 --> 00:04:43.600
and then we've got a control point,

00:04:43.600 --> 00:04:49.430
which effectively pulls the line towards to create the type of curve which we want.

00:04:49.430 --> 00:04:51.365
Of course, we can change this to be

00:04:51.365 --> 00:04:55.890
different values and this will affect the position of the line.

00:04:56.600 --> 00:05:00.195
Let's change that to 0, 0,

00:05:00.195 --> 00:05:05.910
and we get a different type of curve as the line's pulled further into the corner.

00:05:08.050 --> 00:05:11.885
Next I want to take a look at a bezier curve.

00:05:11.885 --> 00:05:16.775
This works in a similar way to the quadratic curve, which we just looked at.

00:05:16.775 --> 00:05:18.980
But rather than taking in one control point,

00:05:18.980 --> 00:05:23.545
we use two control points to have a finer control over the line.

00:05:23.545 --> 00:05:28.555
Let's just add a comment of bezier curve.

00:05:28.555 --> 00:05:32.015
We can get to work by adding some references,

00:05:32.015 --> 00:05:33.865
just like we did before.

00:05:33.865 --> 00:05:37.450
So ctx.beginPath.

00:05:38.690 --> 00:05:41.705
This time we need to create a starting point,

00:05:41.705 --> 00:05:45.785
and ending point, and then two control points to work from.

00:05:45.785 --> 00:05:48.140
To make the stand out on the canvas,

00:05:48.140 --> 00:05:53.160
we'll just simply change the fillStyle, this time to be red.

00:05:55.180 --> 00:06:02.820
The starting point, let's do the ctx.arc.

00:06:04.360 --> 00:06:09.415
The first point is 100 by 50,

00:06:09.415 --> 00:06:11.824
a 5 pixel radius.

00:06:11.824 --> 00:06:14.630
I will make a full circle,

00:06:14.630 --> 00:06:17.640
with two times math.PI.

00:06:18.340 --> 00:06:28.200
Let's copy this one, and then let's add them with the ctx.fill. There we go.

00:06:28.200 --> 00:06:29.850
That's the first point,

00:06:29.850 --> 00:06:32.340
which is our starting point.

00:06:32.340 --> 00:06:36.010
Then we'll create the ending point.

00:06:37.010 --> 00:06:39.720
Let's add a new arc,

00:06:39.720 --> 00:06:42.820
and if I could do the moveTo first.

00:06:44.480 --> 00:06:48.015
The next one we're going to add our position 500,

00:06:48.015 --> 00:06:54.525
50 and then add the circle at the same point,

00:06:54.525 --> 00:06:56.940
so that's our second circle.

00:06:56.940 --> 00:07:01.445
These circles which you are drawing are purely for demonstration purposes,

00:07:01.445 --> 00:07:05.840
just so you can see how the line is being pulled towards reference points.

00:07:05.840 --> 00:07:08.840
We don't actually need to include them when creating the curves.

00:07:08.840 --> 00:07:10.595
We got the start points,

00:07:10.595 --> 00:07:15.870
the end points, and now we need to create the first control points.

00:07:17.450 --> 00:07:25.980
So control point 1, and then let's move the pen to be position 100,

00:07:25.980 --> 00:07:36.730
250, paste in the arc at the same position of 100, 250.

00:07:36.920 --> 00:07:40.690
Then control point 2,

00:07:49.940 --> 00:07:55.750
I want to be at position 500, 250.

00:07:56.540 --> 00:08:02.460
Just change the arc to 500 and then 250.

00:08:02.460 --> 00:08:04.830
That leaves the starting point,

00:08:04.830 --> 00:08:09.105
the ending point, and then the two control points at the bond.

00:08:09.105 --> 00:08:13.000
What we're looking for is a curve which is going to start here,

00:08:13.000 --> 00:08:16.610
and then go round and be pulled by

00:08:16.610 --> 00:08:19.205
the two control points and the curve back

00:08:19.205 --> 00:08:22.960
up to the ending points in the top-right corner.

00:08:22.960 --> 00:08:26.250
Just like with the quadratic curve,

00:08:26.250 --> 00:08:29.730
we'll move the pen to the starting position.

00:08:29.730 --> 00:08:39.910
We have ctx.moveTo, and the starting point was 150,

00:08:44.600 --> 00:08:48.360
and then rather than quadraticCurveTo,

00:08:48.360 --> 00:08:52.870
we use bezierCurveTo to draw the line.

00:08:57.500 --> 00:09:00.435
We've got our starting points up here.

00:09:00.435 --> 00:09:03.930
So let's add control point number 1 first,

00:09:03.930 --> 00:09:09.540
which is 100, 250 on the x and y,

00:09:09.540 --> 00:09:12.375
and then control point 2,

00:09:12.375 --> 00:09:17.025
which is x, 500, and then y,

00:09:17.025 --> 00:09:23.775
250, and then lastly we add the end points,

00:09:23.775 --> 00:09:27.670
which is our 500 by 50.

00:09:30.520 --> 00:09:36.810
Then we'll add the stroke to finally draw the line onto the canvas.

00:09:37.520 --> 00:09:41.720
Just like before, we can move the control points to create

00:09:41.720 --> 00:09:45.800
different style of line and give us any type of curve that we want to use.

00:09:45.800 --> 00:09:47.990
Of course, you can also use fill rather than

00:09:47.990 --> 00:09:52.525
stroke to fill the curve with the background color.

00:09:52.525 --> 00:09:57.210
So change it back to stroke. That's it.

00:09:57.210 --> 00:09:58.425
I hope that makes sense,

00:09:58.425 --> 00:10:02.690
and that's how we can use bezier and quadratic curves with the canvas.

00:10:02.690 --> 00:10:08.130
I'll see you in the next video. We'll take a look at using the save and restore methods.
