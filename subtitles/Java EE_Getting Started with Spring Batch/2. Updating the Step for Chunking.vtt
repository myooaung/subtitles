WEBVTT
1
00:00:01.993 --> 00:00:05.904
With the PatientRecord domain object in place and input file defined,

2
00:00:05.904 --> 00:00:08.021
the next step is to modify the step.

3
00:00:08.021 --> 00:00:11.555
When I configured the step in the previous section of the course,

4
00:00:11.555 --> 00:00:12.853
I defined a tasklet.

5
00:00:12.853 --> 00:00:16.357
The tasklet simply would output Hello World!

6
00:00:16.357 --> 00:00:20.364
Now I want to replace it with chunk-oriented processing.

7
00:00:20.364 --> 00:00:24.660
Here you can see the code that I'll use to replace the existing step.

8
00:00:24.660 --> 00:00:30.238
The first change is to pass an ItemReader for a PatientRecord into the method.

9
00:00:30.238 --> 00:00:32.864
I'll be creating the bean shortly for this ItemReader.

10
00:00:32.864 --> 00:00:36.833
Next, I've added the chunk behavior after the step name.

11
00:00:36.833 --> 00:00:40.220
This tells the JobBuilder to process items in chunks.

12
00:00:40.220 --> 00:00:43.590
Specifically, I'm going to process two at a time.

13
00:00:43.590 --> 00:00:47.990
Note also that I've parameterized the call to chunk for type safety.

14
00:00:47.990 --> 00:00:51.978
Finally, I've added a reader, processor, and writer.

15
00:00:51.978 --> 00:00:56.143
The reader will leverage the item creator that I'm going to create shortly.

16
00:00:56.143 --> 00:00:59.538
I'll create some mock code for the processor and writer later in this

17
00:00:59.538 --> 00:01:03.673
section and fully implement them later in the course.

18
00:01:03.673 --> 00:01:07.014
Let's implement this change now.

19
00:01:07.014 --> 00:01:09.820
I'll be demonstrating the update of the job step.

20
00:01:09.820 --> 00:01:12.856
Note that I'll be following Demo 10 found in the DEMOS.

21
00:01:12.856 --> 00:01:17.317
md file in the root project directory.

22
00:01:17.317 --> 00:01:22.063
In this demo, I'm going to update the existing job step to support chunking.

23
00:01:22.063 --> 00:01:26.428
Let's open up the class BatchJobConfiguration.

24
00:01:26.428 --> 00:01:29.221
I'm going to scroll down to the step method.

25
00:01:29.221 --> 00:01:33.620
Next, I'm going to drop in updated code for the method.

26
00:01:33.620 --> 00:01:38.082
I've defined an ItemReader bean to be passed as an argument to the method.

27
00:01:38.082 --> 00:01:42.874
I've also added a call to chunk with a size of 2 in the build instructions.

28
00:01:42.874 --> 00:01:45.119
Finally, I've added a call for the reader,

29
00:01:45.119 --> 00:01:47.098
processor, and writer in the chunk processing.

30
00:01:47.098 --> 00:01:51.277
You're going to see a compile error for now until I've implemented a

31
00:01:51.277 --> 00:02:01.000
temporary processor and writer later in this section. This completes the update for the job step to use chunk-oriented processing.

