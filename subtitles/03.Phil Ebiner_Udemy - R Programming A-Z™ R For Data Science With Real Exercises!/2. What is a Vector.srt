1

00:00:00,000  -->  00:00:07,319
Hello and welcome back to the course of

2

00:00:07,319  -->  00:00:10,230
R programming. This is Kirill Eremenko and

3

00:00:10,230  -->  00:00:12,599
I am super excited to have you back here

4

00:00:12,599  -->  00:00:14,759
in the course and what are we talking

5

00:00:14,759  -->  00:00:16,830
about today? Well today we'll finally

6

00:00:16,830  -->  00:00:19,560
find out what is a vector. We've touched

7

00:00:19,560  -->  00:00:21,869
on vectors a little bit in the previous

8

00:00:21,869  -->  00:00:24,180
section of the course and it is time now

9

00:00:24,180  -->  00:00:27,750
to finally get it down pat and have a

10

00:00:27,750  -->  00:00:29,550
good understanding of what a vector is.

11

00:00:29,550  -->  00:00:31,260
In fact, it is going to be a quite a

12

00:00:31,260  -->  00:00:33,000
quick tutorial because of vectors are

13

00:00:33,000  -->  00:00:34,500
not that complicated.

14

00:00:34,500  -->  00:00:37,050
Ok so let's get started. The definition

15

00:00:37,050  -->  00:00:39,180
of a vector is a sequence of data

16

00:00:39,180  -->  00:00:42,510
element of the same basic time. The way I

17

00:00:42,510  -->  00:00:44,730
imagined a vector is like a horizontal

18

00:00:44,730  -->  00:00:47,340
bookshelf with lots of sections and in

19

00:00:47,340  -->  00:00:48,989
each one of these sections you can put a

20

00:00:48,989  -->  00:00:50,910
number so let's say in the first section

21

00:00:50,910  -->  00:00:55,140
put 50 second section 34, 111 and so on. So

22

00:00:55,140  -->  00:00:57,899
basically we're putting numbers into

23

00:00:57,899  -->  00:01:00,930
this vector and there's ten numbers and

24

00:01:00,930  -->  00:01:02,820
this is a numeric vector. Numeric

25

00:01:02,820  -->  00:01:05,909
basically means either integer or double

26

00:01:05,909  -->  00:01:07,680
so basically anything that has a number

27

00:01:07,680  -->  00:01:10,439
so this is a numeric vector of length

28

00:01:10,439  -->  00:01:13,049
10 and if you've studied other

29

00:01:13,049  -->  00:01:14,760
programming languages before then a

30

00:01:14,760  -->  00:01:19,770
vector in R is the same thing as an array for example and C or C++ so pretty

31

00:01:19,770  -->  00:01:21,689
much in any other languages just called

32

00:01:21,689  -->  00:01:24,509
different and the name a vector comes

33

00:01:24,509  -->  00:01:27,570
from a linear algebra because R is a

34

00:01:27,570  -->  00:01:29,880
statistical language from mathematicians

35

00:01:29,880  -->  00:01:32,820
and statisticians and there are a lot of

36

00:01:32,820  -->  00:01:35,400
concepts that come from linear algebra

37

00:01:35,400  -->  00:01:37,680
and one of them is a the name of vector

38

00:01:37,680  -->  00:01:40,079
and actually vectors are enumerated

39

00:01:40,079  -->  00:01:42,119
because vectors the sequence of data

40

00:01:42,119  -->  00:01:44,729
elements or in other words and ordered

41

00:01:44,729  -->  00:01:47,759
set it will always have a beginning and

42

00:01:47,759  -->  00:01:50,759
an end so in this case it starts with

43

00:01:50,759  -->  00:01:54,420
123456789 10 and notice the difference

44

00:01:54,420  -->  00:01:55,920
here if you studied other programming

45

00:01:55,920  -->  00:01:58,170
languages then indexation of areas

46

00:01:58,170  -->  00:02:01,140
normally starts with a 0, so in this case

47

00:02:01,140  -->  00:02:03,750
would be zero all the way up to 9 but in R

48

00:02:03,750  -->  00:02:05,969
indexations that starts with a 1 which

49

00:02:05,969  -->  00:02:07,439
makes things a little bit easier

50

00:02:07,439  -->  00:02:09,720
especially if you're just starting out

51

00:02:09,720  -->  00:02:10,700
into programming.

52

00:02:10,700  -->  00:02:13,280
Ok so that is an American vector of

53

00:02:13,280  -->  00:02:15,410
length 10, let's have a look at different

54

00:02:15,410  -->  00:02:16,700
vector. Let's have a look at a

55

00:02:16,700  -->  00:02:19,310
character vector of length 7 so a

56

00:02:19,310  -->  00:02:21,560
character vector would have character

57

00:02:21,560  -->  00:02:23,330
elements in it and we've already talked

58

00:02:23,330  -->  00:02:25,010
about character variable so there's

59

00:02:25,010  -->  00:02:27,650
letters zed and of course it has to have

60

00:02:27,650  -->  00:02:30,349
quotation marks as any character value

61

00:02:30,349  -->  00:02:33,380
letter F letter or the number seven but

62

00:02:33,380  -->  00:02:35,480
represented as a character because

63

00:02:35,480  -->  00:02:38,630
remember that a vector can only have

64

00:02:38,630  -->  00:02:41,450
data elements of the same type so even

65

00:02:41,450  -->  00:02:44,750
if you tried to put in a 7 as a number

66

00:02:44,750  -->  00:02:47,269
into a character vector. R would

67

00:02:47,269  -->  00:02:50,000
automatically change it for you into a

68

00:02:50,000  -->  00:02:51,739
character so because it can change a

69

00:02:51,739  -->  00:02:53,870
letter into number but it can change a

70

00:02:53,870  -->  00:02:57,140
number into a character you're resulting

71

00:02:57,140  -->  00:03:00,019
vector would of course be of characters

72

00:03:00,019  -->  00:03:02,329
and there's a couple more characters so

73

00:03:02,329  -->  00:03:05,750
even multiple letters or a combination

74

00:03:05,750  -->  00:03:07,430
of letters and numbers in R is

75

00:03:07,430  -->  00:03:09,349
considered to be characters so this

76

00:03:09,349  -->  00:03:13,160
is a vector character vector of length 7

77

00:03:13,160  -->  00:03:17,120
and here is its indexation. Ok so that's

78

00:03:17,120  -->  00:03:19,160
how vectors work and one final thing I

79

00:03:19,160  -->  00:03:21,200
wanted to show you for today and that is

80

00:03:21,200  -->  00:03:24,319
a little secret of R. Ok let's say you

81

00:03:24,319  -->  00:03:26,239
have a number you have a number for

82

00:03:26,239  -->  00:03:28,010
instance 27 and we've talked about

83

00:03:28,010  -->  00:03:30,319
variables before we've talked about

84

00:03:30,319  -->  00:03:33,829
values and how you can store values and

85

00:03:33,829  -->  00:03:37,459
variable and so on and in fact the

86

00:03:37,459  -->  00:03:40,489
secret of R is that even a single

87

00:03:40,489  -->  00:03:44,569
number is stored as a vector. As a vector

88

00:03:44,569  -->  00:03:47,810
of length 1, there you go that is our

89

00:03:47,810  -->  00:03:48,799
little secret

90

00:03:48,799  -->  00:03:50,359
and we're getting a bit of ahead of

91

00:03:50,359  -->  00:03:53,120
ourselves right now why that is is kind

92

00:03:53,120  -->  00:03:54,889
of a conceptual thing in the background

93

00:03:54,889  -->  00:03:56,480
of R and we'll get back to it further

94

00:03:56,480  -->  00:03:58,340
down in the course but just keep that in

95

00:03:58,340  -->  00:04:00,620
mind that everything in R even a

96

00:04:00,620  -->  00:04:03,079
single number or a single character is

97

00:04:03,079  -->  00:04:05,299
always going to be a vector that's just

98

00:04:05,299  -->  00:04:08,069
how this programming language works

99

00:04:08,069  -->  00:04:09,299
and I look forward to in the next

100

00:04:09,299  -->  00:04:13,430
tutorial, until then happy coding.
