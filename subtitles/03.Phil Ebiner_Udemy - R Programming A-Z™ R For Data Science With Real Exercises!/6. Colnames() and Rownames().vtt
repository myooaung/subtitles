WEBVTT
1

00:00:00.000  -->  00:00:07.049
Hello and welcome back to the course of

2

00:00:07.049  -->  00:00:09.030
R programming. Now that we've talked about

3

00:00:09.030  -->  00:00:11.280
the theory of named objects, let's see

4

00:00:11.280  -->  00:00:13.740
how it all works out in practice. So here

5

00:00:13.740  -->  00:00:16.650
we've got R studio and this is what we

6

00:00:16.650  -->  00:00:17.910
talked about last time, we talked about

7

00:00:17.910  -->  00:00:19.949
the matrix function, the R bind

8

00:00:19.949  -->  00:00:21.930
function and the C bind function and

9

00:00:21.930  -->  00:00:23.939
all of them were used to create matrices.

10

00:00:23.939  -->  00:00:27.750
So now let's create a new file and here

11

00:00:27.750  -->  00:00:29.820
we're going to start with named vector,

12

00:00:29.820  -->  00:00:32.880
so hashtag named vectors.

13

00:00:32.880  -->  00:00:35.250
Alright, follow along and we're going to

14

00:00:35.250  -->  00:00:37.710
create a vector. Let's call him Charlie

15

00:00:37.710  -->  00:00:40.620
right? Let's give this vector name and

16

00:00:40.620  -->  00:00:42.540
we'll put the numbers 1:5, so very simple

17

00:00:42.540  -->  00:00:45.539
vector if we type in Charlie now we've

18

00:00:45.539  -->  00:00:48.360
got our vector 1,2,3,4,5 beautiful!

19

00:00:48.360  -->  00:00:51.210
Ok so let's make it a name to vector

20

00:00:51.210  -->  00:00:54.570
right? Let's give it names, give names.

21

00:00:54.570  -->  00:00:56.610
Well we need the names function and the

22

00:00:56.610  -->  00:00:59.160
way it works is you type in names and

23

00:00:59.160  -->  00:01:02.190
then in brackets you type in the object

24

00:01:02.190  -->  00:01:04.229
that you want to check the names for. So

25

00:01:04.229  -->  00:01:05.369
first thing we're going to do is we're

26

00:01:05.369  -->  00:01:07.260
going to check the names, so if you just

27

00:01:07.260  -->  00:01:08.189
write it like this

28

00:01:08.189  -->  00:01:10.799
names Charlie it will tell you the names

29

00:01:10.799  -->  00:01:12.960
of the elements and right now it's just

30

00:01:12.960  -->  00:01:15.900
returning null and in R or in

31

00:01:15.900  -->  00:01:17.670
programming, null basically means nothing.

32

00:01:17.670  -->  00:01:19.530
So it's not anything that something is.

33

00:01:19.530  -->  00:01:22.020
It's just nothing, there's there are no names

34

00:01:22.020  -->  00:01:23.580
and it couldn't look them up. There are

35

00:01:23.580  -->  00:01:25.409
not even zeroes. They're not even empty values,

36

00:01:25.409  -->  00:01:27.900
they're just null. There are no names and

37

00:01:27.900  -->  00:01:29.310
that's why we're getting it all because

38

00:01:29.310  -->  00:01:31.229
indeed they are no names for the

39

00:01:31.229  -->  00:01:33.570
spectrum so let's create some some names.

40

00:01:33.570  -->  00:01:35.100
How do you perform this procedure? Well

41

00:01:35.100  -->  00:01:36.180
this is going to be interesting,

42

00:01:36.180  -->  00:01:38.610
especially for those of you coming from

43

00:01:38.610  -->  00:01:40.979
a programming background because what

44

00:01:40.979  -->  00:01:42.390
we're going to see now it doesn't happen

45

00:01:42.390  -->  00:01:45.420
often in programming. So here we've got

46

00:01:45.420  -->  00:01:48.090
the vector named Charlie as we've got

47

00:01:48.090  -->  00:01:49.770
this function names around charlie and

48

00:01:49.770  -->  00:01:51.000
as we know about functions of this

49

00:01:51.000  -->  00:01:53.100
function returns a value right? So in

50

00:01:53.100  -->  00:01:54.540
this case, it returned to null

51

00:01:54.540  -->  00:01:56.159
but what you can actually do with this

52

00:01:56.159  -->  00:01:58.740
specific function is you can assign it a

53

00:01:58.740  -->  00:02:00.149
value, so I'm just going to type it out

54

00:02:00.149  -->  00:02:01.439
and then I'll explain what we're doing.

55

00:02:01.439  -->  00:02:03.270
So let's say we want to assign this vector

56

00:02:03.270  -->  00:02:05.159
names just like in our example and we

57

00:02:05.159  -->  00:02:09.090
want to call ABCD and E and now what

58

00:02:09.090  -->  00:02:10.830
we're doing here is we're actually

59

00:02:10.830  -->  00:02:13.740
assigning this vector of five element

60

00:02:13.740  -->  00:02:16.890
to a function. Isn't that's crazy right?

61

00:02:16.890  -->  00:02:21.000
It's pretty strange, well well how

62

00:02:21.000  -->  00:02:23.160
the best way to think about it is R

63

00:02:23.160  -->  00:02:25.650
allows you to treat this part on the

64

00:02:25.650  -->  00:02:27.810
left as an object, so when you calling

65

00:02:27.810  -->  00:02:29.580
and that's not for all functions, that's just for

66

00:02:29.580  -->  00:02:31.500
specific functions and for instance

67

00:02:31.500  -->  00:02:34.290
names so when you are calling names, Charlie. It's

68

00:02:34.290  -->  00:02:36.030
like you're looking at the

69

00:02:36.030  -->  00:02:38.790
characteristic of the vector Charlie

70

00:02:38.790  -->  00:02:40.860
which is its names right? You can just

71

00:02:40.860  -->  00:02:42.480
run this bid by itself and then you'll

72

00:02:42.480  -->  00:02:45.090
find out the names or you can assign it

73

00:02:45.090  -->  00:02:47.430
about, so if you think of names Charlie

74

00:02:47.430  -->  00:02:49.680
as an object as another vector that

75

00:02:49.680  -->  00:02:53.730
always accompanies Charlie and then it

76

00:02:53.730  -->  00:02:56.040
would kind of make more sense and so now

77

00:02:56.040  -->  00:02:57.780
if we run this line what will happen is

78

00:02:57.780  -->  00:03:00.240
Charlie will get some names and let's

79

00:03:00.240  -->  00:03:02.010
check out charlie.

80

00:03:02.010  -->  00:03:04.200
So if you look at Charlie now you'll see

81

00:03:04.200  -->  00:03:06.330
that this is now a named vector those

82

00:03:06.330  -->  00:03:08.160
are the values 1,2,3,4,5 and those are names

83

00:03:08.160  -->  00:03:11.100
about them ABCD and E, so if I want to

84

00:03:11.100  -->  00:03:12.840
access that number four

85

00:03:12.840  -->  00:03:14.850
then how would I do it? I would say Charlie

86

00:03:14.850  -->  00:03:18.270
and I would type in the name of that

87

00:03:18.270  -->  00:03:20.460
element which is D and I run that and

88

00:03:20.460  -->  00:03:22.350
there we go, so I get back this number

89

00:03:22.350  -->  00:03:23.130
four.

90

00:03:23.130  -->  00:03:26.880
Ok awesome and now I can also check the

91

00:03:26.880  -->  00:03:29.820
names of Charlie, right. So if I run that,

92

00:03:29.820  -->  00:03:32.880
ABCD and E and by the way, here you can

93

00:03:32.880  -->  00:03:34.500
see that concept that we talked about before,

94

00:03:34.500  -->  00:03:36.630
that everything in R is a vector, so

95

00:03:36.630  -->  00:03:39.000
even though we're calling out just one

96

00:03:39.000  -->  00:03:42.330
element, it's returning a vector of length

97

00:03:42.330  -->  00:03:44.610
1 which is also named vector. It has the

98

00:03:44.610  -->  00:03:46.680
name D for this only one on it, but

99

00:03:46.680  -->  00:03:48.420
let's not get bogged down with that

100

00:03:48.420  -->  00:03:50.490
that's just to reiterate something we

101

00:03:50.490  -->  00:03:51.540
talked about before.

102

00:03:51.540  -->  00:03:53.460
Alright so we've got the names of

103

00:03:53.460  -->  00:03:55.470
Charlie over here and Charlie is the named

104

00:03:55.470  -->  00:03:57.930
vector. There it is, now what we want to

105

00:03:57.930  -->  00:03:59.700
learn is we want to learn how to clear

106

00:03:59.700  -->  00:04:01.830
names right? So if we want to clear names,

107

00:04:01.830  -->  00:04:03.810
how do we do it? Because some people get

108

00:04:03.810  -->  00:04:07.110
very upset that meant that sometimes

109

00:04:07.110  -->  00:04:09.300
vectors or as will seem matrices have

110

00:04:09.300  -->  00:04:12.030
names. There is very easy way to clear it

111

00:04:12.030  -->  00:04:14.400
just say Charlie and instead of giving

112

00:04:14.400  -->  00:04:16.560
it some names, just type in null here, do

113

00:04:16.560  -->  00:04:18.390
that and then when you look at Charlie

114

00:04:18.390  -->  00:04:21.060
now, he won't have any more names for

115

00:04:21.060  -->  00:04:22.650
the elements and that's how you clear

116

00:04:22.650  -->  00:04:24.419
names from a named vector.

117

00:04:24.419  -->  00:04:27.000
Okay we're done with named vectors, it's

118

00:04:27.000  -->  00:04:27.360
all

119

00:04:27.360  -->  00:04:29.099
pretty simple stuff right? As long as you

120

00:04:29.099  -->  00:04:32.069
think of this as an object then you will

121

00:04:32.069  -->  00:04:33.840
see that it makes sense that you're

122

00:04:33.840  -->  00:04:35.430
assigning those vectors some null, is that

123

00:04:35.430  -->  00:04:37.650
it's a pretty simple function names.

124

00:04:37.650  -->  00:04:40.500
Ok let's look at the next thing for

125

00:04:40.500  -->  00:04:45.629
today which is naming matrix dimensions.

126

00:04:45.629  -->  00:04:47.909
Ok so let's create this matrix. First

127

00:04:47.909  -->  00:04:49.349
we're going to create a temporary vector,

128

00:04:49.349  -->  00:04:51.900
temp.vec and into the spector we are going

129

00:04:51.900  -->  00:04:53.969
to put in some values and I would like us

130

00:04:53.969  -->  00:04:55.680
to practice the replicate function

131

00:04:55.680  -->  00:04:58.050
because we haven't used it in awhile so

132

00:04:58.050  -->  00:04:59.849
what are we going to replicate? Remember

133

00:04:59.849  -->  00:05:03.120
with replicate we can just take an

134

00:05:03.120  -->  00:05:05.430
element take an object and replicate it a

135

00:05:05.430  -->  00:05:06.840
couple times, so we're going to start

136

00:05:06.840  -->  00:05:08.969
with a vector. This is what we're

137

00:05:08.969  -->  00:05:10.500
going to put inside replicate, so we're

138

00:05:10.500  -->  00:05:13.319
going to have a vector A and B capital

139

00:05:13.319  -->  00:05:16.500
and then let's say zed zed right? So

140

00:05:16.500  -->  00:05:18.599
this is a simple vector of three

141

00:05:18.599  -->  00:05:21.539
elements A,B,Zz and now what we're going to

142

00:05:21.539  -->  00:05:24.150
do is we are going to copy this vector and

143

00:05:24.150  -->  00:05:27.000
we're going to put it into replicate and

144

00:05:27.000  -->  00:05:29.460
then we'll say replicate it three times. So

145

00:05:29.460  -->  00:05:31.529
if I run this part by itself, now let's

146

00:05:31.529  -->  00:05:34.379
just put it aside for a second now what

147

00:05:34.379  -->  00:05:36.690
we will get is will get A,B,Zz, we'll

148

00:05:36.690  -->  00:05:39.000
get A,B,Zz and we'll get A,B,Zz

149

00:05:39.000  -->  00:05:41.430
again three times. Now what I wanted

150

00:05:41.430  -->  00:05:43.259
to show you today is a cool trick in

151

00:05:43.259  -->  00:05:45.750
replicate what we're doing right now is

152

00:05:45.750  -->  00:05:47.279
we telling it how many times to

153

00:05:47.279  -->  00:05:50.069
replicate so it's the same as saying times

154

00:05:50.069  -->  00:05:53.339
equals 3, so if I run this, I'll get exactly

155

00:05:53.339  -->  00:05:55.319
the same result the three times this

156

00:05:55.319  -->  00:05:57.330
vector has been replicated and it should

157

00:05:57.330  -->  00:05:59.370
be glued into one long vector of line

158

00:05:59.370  -->  00:06:01.589
elements, but where else you can say is

159

00:06:01.589  -->  00:06:03.240
you can say instead of times, you can say

160

00:06:03.240  -->  00:06:05.610
each and if you say each what will

161

00:06:05.610  -->  00:06:07.740
happen is instead of replicating the whole

162

00:06:07.740  -->  00:06:09.509
vector, each one of these elements will

163

00:06:09.509  -->  00:06:11.009
be replicated three times. Let's have a look,

164

00:06:11.009  -->  00:06:13.110
if I run that, now I get a different

165

00:06:13.110  -->  00:06:17.849
story, I get AAA, BBB, ZZZ so that

166

00:06:17.849  -->  00:06:20.129
can be convenient in some certain

167

00:06:20.129  -->  00:06:22.589
circumstances. In fact, that's what we're

168

00:06:22.589  -->  00:06:25.409
going to use today, so just to make a note

169

00:06:25.409  -->  00:06:25.919
of that,

170

00:06:25.919  -->  00:06:27.930
that's how you can also use replicate

171

00:06:27.930  -->  00:06:31.650
that's a kind of a different way to

172

00:06:31.650  -->  00:06:34.259
replicate your values that you're

173

00:06:34.259  -->  00:06:36.839
supplying to the vector, to the function

174

00:06:36.839  -->  00:06:39.149
so there we go that's how we're going to

175

00:06:39.149  -->  00:06:41.070
use replicate, let's run that

176

00:06:41.070  -->  00:06:43.740
and let's look at our temp.vec now. So

177

00:06:43.740  -->  00:06:48.060
as you expect it its AA, BB, ZZ and

178

00:06:48.060  -->  00:06:49.560
now what we're going to do is we're

179

00:06:49.560  -->  00:06:51.450
going to create a matrix out of this

180

00:06:51.450  -->  00:06:53.580
vector. Now I did say we don't we won't

181

00:06:53.580  -->  00:06:56.580
be using the matrix function a lot, but

182

00:06:56.580  -->  00:06:58.530
in this case let's give it a go just to

183

00:06:58.530  -->  00:07:01.050
practice and kind of sink in that

184

00:07:01.050  -->  00:07:03.120
knowledge that we learned in the previous tutorial.

185

00:07:03.120  -->  00:07:05.940
Also temp.vec right? We were saying

186

00:07:05.940  -->  00:07:07.290
we're calling the matrix function and

187

00:07:07.290  -->  00:07:08.610
then we have to as you can see here

188

00:07:08.610  -->  00:07:10.740
we've got to supply the data then we say

189

00:07:10.740  -->  00:07:12.210
how many rows, how many columns. We know

190

00:07:12.210  -->  00:07:14.340
that our vector has an element so we'll

191

00:07:14.340  -->  00:07:16.650
make it a three by three matrix. Around

192

00:07:16.650  -->  00:07:19.290
that and I call Bravo, you'll see that

193

00:07:19.290  -->  00:07:21.060
I've got our matrices. It's nice and neat

194

00:07:21.060  -->  00:07:23.100
its AAA, BBB, ZZZ because

195

00:07:23.100  -->  00:07:25.530
that's how our vector was structured and as

196

00:07:25.530  -->  00:07:27.570
you can see it's not a named matrix. It

197

00:07:27.570  -->  00:07:29.610
doesn't have a rows, names or column

198

00:07:29.610  -->  00:07:30.030
names.

199

00:07:30.030  -->  00:07:32.610
Let's fix that, let's explore how we can

200

00:07:32.610  -->  00:07:34.620
do that and we're going to explore a

201

00:07:34.620  -->  00:07:35.940
function that's very similar to the

202

00:07:35.940  -->  00:07:37.530
names function. We're going to look at

203

00:07:37.530  -->  00:07:41.370
row names. We'll start with row names, so row

204

00:07:41.370  -->  00:07:42.060
names -

205

00:07:42.060  -->  00:07:44.700
Bravo, if i run that now, I get a null

206

00:07:44.700  -->  00:07:47.580
because there are no real names and just

207

00:07:47.580  -->  00:07:49.350
as with names I can supply some values

208

00:07:49.350  -->  00:07:50.910
here. So let's say, I want to supply

209

00:07:50.910  -->  00:07:55.110
values "how", "are" and "you" and I can't even put

210

00:07:55.110  -->  00:07:57.720
a question mark here. So if I run that and I'll

211

00:07:57.720  -->  00:08:01.500
look at let's say bravo, you'll see that

212

00:08:01.500  -->  00:08:05.340
this matrix now has row names and

213

00:08:05.340  -->  00:08:07.320
similar same thing for columns so I can

214

00:08:07.320  -->  00:08:10.560
call the function, call names and supply

215

00:08:10.560  -->  00:08:14.160
Bravo. If I run that, no call names, if I

216

00:08:14.160  -->  00:08:16.860
assign some values, so let's say we'll

217

00:08:16.860  -->  00:08:21.870
assign X, Y and Z. Around that, if I

218

00:08:21.870  -->  00:08:25.170
look at bravo now, you'll see that we've

219

00:08:25.170  -->  00:08:28.020
got both row names and column names, so

220

00:08:28.020  -->  00:08:31.890
let's say we want to put a 0 in not not

221

00:08:31.890  -->  00:08:34.229
an L. Let's put 20 in here, in

222

00:08:34.229  -->  00:08:34.620
the middle.

223

00:08:34.620  -->  00:08:36.780
Let's put 20 in the very middle. How

224

00:08:36.780  -->  00:08:39.240
would we do that? We'll say bravo, so we

225

00:08:39.240  -->  00:08:41.370
can go 2-2 right? Because it is a

226

00:08:41.370  -->  00:08:43.650
second row, second column or we can say

227

00:08:43.650  -->  00:08:46.590
R because that's the name of the row

228

00:08:46.590  -->  00:08:48.840
and then in quotation marks and then we

229

00:08:48.840  -->  00:08:50.790
can say Y because that's the name of

230

00:08:50.790  -->  00:08:53.850
the column and if we if we just run that,

231

00:08:53.850  -->  00:08:54.510
we'll get

232

00:08:54.510  -->  00:08:56.130
the value in there, which is a letter B

233

00:08:56.130  -->  00:08:59.550
and if we want to put a 0 in there, we

234

00:08:59.550  -->  00:09:01.440
just put it there in there and now if we

235

00:09:01.440  -->  00:09:03.420
look at bravo, you'll see that there's a

236

00:09:03.420  -->  00:09:06.870
0 in the very middle and finally if you

237

00:09:06.870  -->  00:09:10.050
want to we can also check row names

238

00:09:10.050  -->  00:09:11.790
right? We can check row names or

239

00:09:11.790  -->  00:09:13.650
call names choose whichever one you like,

240

00:09:13.650  -->  00:09:17.430
we can check there they are. That's the row names

241

00:09:17.430  -->  00:09:19.230
for bravo and if you want to get rid of

242

00:09:19.230  -->  00:09:21.450
them so this might be useful some of you

243

00:09:21.450  -->  00:09:23.070
might find this useful because sometimes

244

00:09:23.070  -->  00:09:25.740
you get named rows or columns which you don't

245

00:09:25.740  -->  00:09:28.170
really want to get rid of that same

246

00:09:28.170  -->  00:09:30.450
thing just type in null and look at

247

00:09:30.450  -->  00:09:32.130
Bravo. You see,

248

00:09:32.130  -->  00:09:33.930
we got rid of the row names, the column

249

00:09:33.930  -->  00:09:36.720
names are still there. Ok so that's how you

250

00:09:36.720  -->  00:09:39.900
rename matrices and vectors and as you

251

00:09:39.900  -->  00:09:41.070
can see, I'm sure you guys will agree.

252

00:09:41.070  -->  00:09:44.310
This is all very simple stuff but as

253

00:09:44.310  -->  00:09:45.900
we'll see throughout the rest of the

254

00:09:45.900  -->  00:09:47.730
tutorials of this section. It is very

255

00:09:47.730  -->  00:09:50.670
important to know how to work with named

256

00:09:50.670  -->  00:09:52.680
objects in R, and that brings us to the

257

00:09:52.680  -->  00:09:54.450
end of today's tutorial. I look forward to

258

00:09:54.450  -->  00:09:55.710
seeing you next time and until then,

259

00:09:55.710  -->  00:10:07.139
happy coding.
