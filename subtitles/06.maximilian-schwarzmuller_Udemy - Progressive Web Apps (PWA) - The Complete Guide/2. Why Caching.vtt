WEBVTT

00:02.300 --> 00:09.470
So let's dive now into probably the main purpose why we're using service workers, providing offline

00:09.470 --> 00:11.870
support for our web application.

00:11.900 --> 00:18.680
That means that users can use our web application even if they are offline, which of course leads us

00:18.680 --> 00:21.810
to the question, why would this be beneficial,

00:21.860 --> 00:25.980
when would you use a web app if you have no internet connection?

00:26.450 --> 00:30.260
Well actually, there are a couple of use cases where you might have no internet connection and still

00:30.260 --> 00:32.190
want to interact with a web app,

00:32.190 --> 00:34.190
here are some examples.

00:34.190 --> 00:40.630
Think about a big sports event or any event where a large crowd of people is coming together.

00:40.820 --> 00:45.420
Now there, you might have a poor connection or no connection at all from time to time,

00:45.470 --> 00:51.830
still maybe you want to read that news article and navigate to another news article or do something

00:51.830 --> 00:52.920
like that,

00:52.970 --> 00:59.090
use a web application where you only need a couple of static assets in the end or a couple of images

00:59.190 --> 01:03.820
and the web page would work but it doesn't because you have no internet connection.

01:04.100 --> 01:09.830
Well with service workers, you will learn that you can pre-cache or in general, that you can cache certain

01:09.830 --> 01:16.820
file, assets your web app might need and therefore can still display this page and even allow navigation

01:17.130 --> 01:19.310
whilst your application is offline,

01:19.310 --> 01:21.700
super useful in such circumstances.

01:22.500 --> 01:28.470
Another example would be maybe in an elevator, so places where you have no connection at all and you

01:28.470 --> 01:33.000
know it. Still in such places especially in the elevator for example,

01:33.210 --> 01:38.160
you only have no connection for a couple of seconds or minutes, so it's super annoying that you kind

01:38.160 --> 01:45.690
of can't spend that time especially in the elevator with a more useful task like browsing some article

01:45.690 --> 01:48.020
or fetching some e-mail a colleague sent you.

01:48.060 --> 01:49.990
Now with service workers, again

01:50.040 --> 01:55.730
you can cache certain parts off the web application to provide it to the user when no internet connection

01:55.730 --> 02:00.690
is there and therefore, you can still continue using the web app even though you entered a place where

02:00.690 --> 02:02.900
you have no internet connection.

02:03.060 --> 02:07.710
And finally and probably the most important use case, Lie-Fie,

02:08.040 --> 02:11.100
so that's Wi-Fi which just is not.

02:11.250 --> 02:14.460
So that means you think you have a Wi-Fi connection,

02:14.520 --> 02:21.060
your phone displays that it has a Wi-Fi connection but we've all been there, sometimes especially in hotspots

02:21.090 --> 02:22.350
or in hotels

02:22.350 --> 02:26.260
maybe, you can't get that network request through the Wi-Fi,

02:26.400 --> 02:32.980
so there, you simply can't get the request out to the Internet even though you think you have a connection.

02:33.090 --> 02:37.460
In such cases, your whole application might simply crash and show you the

02:37.530 --> 02:41.050
you have no internet connection screen even though in theory,

02:41.190 --> 02:47.160
well you just wanted to keep on using it and connection might be back in a couple of seconds.

02:47.220 --> 02:52.980
So there again, it's great if you can use service workers to cache certain parts of your web application,

02:53.190 --> 02:59.670
to provide them to the user even when no internet connection is there. Let's have a look at how we exactly

02:59.670 --> 03:00.240
do this,

03:00.240 --> 03:04.480
how this caching works and which feature we use there in the next lecture.
