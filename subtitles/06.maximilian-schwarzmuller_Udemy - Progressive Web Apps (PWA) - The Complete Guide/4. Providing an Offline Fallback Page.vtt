WEBVTT

00:02.210 --> 00:05.070
Here's another important thing I want to share with you.

00:05.240 --> 00:08.860
You already can provide some offline functionality in your app

00:09.290 --> 00:15.020
but if the user visits our app like this and has never been to the help page and I haven't been to

00:15.020 --> 00:16.450
it, you can see in the dynamic cache,

00:16.460 --> 00:18.700
we don't cache anything from that page.

00:18.780 --> 00:24.770
Now make sure to not visit it, if you have, simply delete your cache and reload the page.

00:24.770 --> 00:27.270
So with the help page not cached,

00:27.410 --> 00:32.330
if we now go offline and reload, the main page works of course

00:32.450 --> 00:38.370
but if I navigate to help, it fails because we never fetched anything from that page, which makes sense.

00:38.420 --> 00:42.880
This page here however is not really that beautiful.

00:43.010 --> 00:51.170
It would be better if we had a default fallback page we could present for pages we haven't cached yet

00:51.620 --> 00:54.070
but also not this page here,

00:54.290 --> 00:59.780
so some in-between solution, that we at least have our own styling, we stay on our page and we say hey

00:59.780 --> 01:05.570
sorry this is not available offline but you can go here and provide a link to some other resource which

01:05.570 --> 01:09.820
has been cached, something like that, to enhance the user experience.

01:09.830 --> 01:15.590
Now we can do that and for that, we need to add a new file to our setup.

01:15.710 --> 01:20.780
I'll add a new file in the main directory, so in the public directory I should say and I'll name it

01:20.780 --> 01:21.230
offline.html

01:21.260 --> 01:22.100
.

01:22.150 --> 01:23.820
Now the file name is up to you,

01:23.840 --> 01:30.090
the file extension is not, it should be a HTML file and first of all, I'll copy the content from my index.html

01:30.090 --> 01:35.840
file because I want to stay in the same frame so to say, the same app shell,

01:35.840 --> 01:37.060
I don't need the feed.js

01:37.190 --> 01:44.300
file in that offline file here though, so I can get rid of that. I'll leave the other imports

01:44.540 --> 01:46.490
and regarding the styling here,

01:46.550 --> 01:51.780
I don't need the feed.css file but I need the app.css file and the other imports too.

01:51.920 --> 01:53.960
In the end, I want to use the same app shell,

01:54.050 --> 01:56.640
so I'll leave the navigation here,

01:56.900 --> 02:02.990
what I will do though is get rid of this create post div which is this pop-up we can open

02:02.990 --> 02:10.860
basically, I'll get rid of this image and what I'll also do is here I'll get rid of shared moments, this div,

02:10.880 --> 02:13.420
we won't load anything here and

02:13.420 --> 02:15.910
I'll leave the title for now.

02:16.010 --> 02:19.280
Get rid of that floating button and of everything below there,

02:19.280 --> 02:24.500
we don't need that here, so we have a bare minimum page here with the menu though.

02:24.530 --> 02:26.530
Now what I want to do on this page is

02:26.750 --> 02:36.390
I want to output some text like we're sorry, this page hasn't been cached yet,

02:36.390 --> 02:40.240
maybe show a sad smiley and below that, I'll add a paragraph,

02:40.410 --> 02:48.420
but why don't you try one of our other pages and maybe other pages could be a link, so

02:48.460 --> 02:53.380
let's add one where we simply point to the root page to go back there.

02:55.490 --> 03:03.710
Now the goal is to load this page, this offline.html page whenever the user is offline and visit something,

03:03.710 --> 03:07.400
some page we haven't pre-cached yet or we haven't cached at all,

03:07.400 --> 03:09.280
also not dynamically cached,

03:09.380 --> 03:13.630
for example if you visit the help page for the first time so it hasn't been cached.

03:14.480 --> 03:17.030
We can control this in the service worker.

03:17.060 --> 03:23.870
For one we need to bump up the static cache version and add a new file to the cache, the offline.html

03:23.930 --> 03:24.660
file,

03:24.710 --> 03:29.980
so add /offline.html because that is the path to that file,

03:29.990 --> 03:31.470
the only way to load it

03:31.970 --> 03:36.000
but then I'll change something down here in our fetch response.

03:36.050 --> 03:42.100
We try to fetch something from the cache and if we don't find it there, we reach out to the network.

03:42.170 --> 03:46.120
Now if that fails, we don't do anything right now, here

03:46.130 --> 03:49.940
I now want to return my fallback page.

03:49.940 --> 03:55.670
So here's what I want to do is, I want to return something and I want to return an operation where I

03:55.730 --> 04:05.570
open my static cache because that is where I put that offline.html file, so here in the then function,

04:05.840 --> 04:09.340
I have access to that cache then because it was opened

04:09.680 --> 04:15.170
and in that cache, I now want to get the offline.html file and return it.

04:15.440 --> 04:22.770
Now the command for getting something is match and I try to find something with the /offline.html

04:22.820 --> 04:27.340
identifier, which is the exact URL, request URL

04:27.380 --> 04:29.350
I passed up here, here,

04:29.450 --> 04:30.970
so it should be found.

04:31.340 --> 04:35.690
This is what I store and this is what I try to match here and this will automatically return me the value

04:35.690 --> 04:37.090
if it finds it.

04:37.100 --> 04:43.040
Keep in mind that since we add it here to add all, the request for it will be made automatically and it

04:43.040 --> 04:46.540
will be stored together with its response in the cache.

04:46.670 --> 04:51.740
Here of course, we have to return the value of cache match though because we want to return that retrieved

04:51.740 --> 04:52.610
value.

04:52.970 --> 05:00.010
Now with that whenever we make a HTTP request where we can't get a valid value, we'll return this page.

05:00.140 --> 05:06.320
This of course has the side effect that if it's some other request, like us fetching some JSON from a URL

05:06.350 --> 05:07.920
we can't reach,

05:07.970 --> 05:09.770
we also return this.

05:09.980 --> 05:17.780
So fine tuning might be required and it is something we can look into later when we see how we can cache

05:17.780 --> 05:22.770
depending on the route of the resource, or the full URL of the resource,

05:22.790 --> 05:25.080
for now we're going to go with that approach.

05:25.430 --> 05:32.180
So with this in place, let's save this, we change the service workers so we have to go back, make

05:32.180 --> 05:38.480
offline available again, make the internet available again I mean, make sure that in the cache we don't have

05:38.480 --> 05:44.690
anything from the help page to not spoil the experience and then simply close the tab and open a new

05:44.690 --> 05:48.350
one or click skip waiting

05:48.530 --> 05:51.030
and now let's go offline.

05:51.200 --> 05:54.420
So the help page hasn't been cached

05:54.650 --> 05:56.300
and now click on help

05:57.010 --> 06:02.220
and you see we're sorry, this page hasn't been cached yet and yes, we could center this text here

06:02.380 --> 06:04.840
but the cool thing is, we can click on other pages,

06:04.840 --> 06:10.360
we're back to the main page, so that all works and we get a better user experience because whilst the

06:10.360 --> 06:11.780
page is not available,

06:11.800 --> 06:17.290
we can show something meaningful here and that is something you also want to have in your toolbox to

06:17.290 --> 06:19.320
enhance your application.
