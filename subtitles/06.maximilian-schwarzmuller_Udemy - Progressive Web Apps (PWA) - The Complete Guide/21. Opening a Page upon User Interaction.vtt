WEBVTT

00:02.110 --> 00:05.220
In the last lectures, we made push messages work,

00:05.370 --> 00:10.980
we show a notification from our service worker and you saw it works across device of course with our different

00:10.980 --> 00:12.140
subscriptions.

00:12.210 --> 00:17.730
Now I want to allow the user to interact with notifications, we already listen to notification click but

00:17.730 --> 00:21.200
we don't do anything there except for closing the notification.

00:21.240 --> 00:28.280
So the goal now is to actually open a new page and we can do this with the following code,

00:28.470 --> 00:33.370
let's say we want to do that in all cases where the action isn't confirm.

00:33.450 --> 00:36.390
So here where I console log the action,

00:36.390 --> 00:45.870
I will add a new code snippet and I will say event wait until to make sure the service worker doesn't continue

00:45.870 --> 00:52.330
or doesn't continue, waits for me to actually finish this code, to finish opening a new page.

00:52.590 --> 00:56.740
Inside there, the following code allows us to open a new page.

00:56.820 --> 01:05.620
We can execute clients and this basically refers to all windows or all browser tasks related to this

01:05.610 --> 01:06.850
service worker.

01:07.200 --> 01:10.420
We can call match all to get access to them all

01:10.530 --> 01:16.920
and this returns us a promise where in the function of this promise, we get access to all found clients.

01:17.070 --> 01:21.960
Again, this refers to things managed by the service worker to simplify it.

01:21.990 --> 01:27.730
Now inside here, I now want to find windows managed by this service worker which are visible,

01:27.840 --> 01:30.460
so open windows where our application runs in

01:30.490 --> 01:36.360
would be a fitting translation. To identify the first window of our application,

01:36.420 --> 01:41.620
even if we have multiple ones, I'm only interested in one window, I'll create a variable which I'll name client

01:42.390 --> 01:47.070
and I will access all the clients I found and use the find helper method,

01:47.130 --> 01:51.920
this normal Javascript method which exists on arrays and clients is just an array,

01:52.050 --> 01:55.150
so this is just an array here, I should say.

01:55.560 --> 02:01.560
So it will execute a function on each element in this array and I'll pass this element as c into that

02:01.560 --> 02:03.000
function

02:03.060 --> 02:06.890
and now we have to return true or false. If we return true, that means

02:06.950 --> 02:09.470
yes we found the element we are looking for

02:09.600 --> 02:11.520
and this will then be stored in client.

02:11.720 --> 02:14.960
If we return false, we say it's not the right one

02:15.030 --> 02:19.970
and if we return false for all iterations, we got none, the first time we return true,

02:19.980 --> 02:23.030
it will stop though and that will be our found object.

02:23.400 --> 02:29.320
So here I will simply return a boolean check where I see for the element I'm checking,

02:29.340 --> 02:37.170
so c is the individual element in that array, if the visibility state is equal to visible which means

02:37.170 --> 02:40.070
we have an open browser window basically,

02:40.310 --> 02:42.830
this will then be stored in client.

02:42.860 --> 02:50.630
So next I of course want to check if client is unequal to undefined which means we found an object,

02:50.630 --> 02:52.190
we found open window.

02:52.340 --> 02:57.420
In this case I simply want to navigate to a URL with the navigate helper method,

02:57.710 --> 03:05.530
maybe I want to navigate to http://localhost:8080 just like that

03:05.900 --> 03:08.150
and then I also want to focus that window,

03:08.210 --> 03:16.820
so I will call focus. Else if we didn't have it open, then I want to open a new one with the clients object

03:16.820 --> 03:23.300
now again, giving us access to the things managed by the service worker

03:23.420 --> 03:29.200
and there's a helper method called open window which will open a new window or actually by default a

03:29.210 --> 03:35.100
tab which opens the given URL, so http://localhost:8080 too.

03:35.270 --> 03:42.790
This should basically ensure that if we tap the notification, we either load our application in a tab the user

03:42.920 --> 03:49.490
already had open, to not unnecessarily open a new one or if the user didn't have our application open,

03:49.610 --> 03:51.860
maybe the whole browser was closed,

03:51.920 --> 03:58.300
we open a new tab, maybe even a new browser window with our application loaded.

03:58.370 --> 03:59.840
This is what I want to do here

04:00.050 --> 04:07.020
and once all of that is done, so after this if else statement, I'll close the notification.

04:07.030 --> 04:08.010
This is the goal,

04:08.020 --> 04:09.860
this is what I want to do,

04:09.880 --> 04:14.590
now let's head back and see if it works. For that in my application,

04:14.590 --> 04:17.150
I installed a new service worker or I updated it,

04:17.200 --> 04:24.600
so let's refresh the page to install it and let's then reopen it to activate the new service worker

04:25.090 --> 04:28.050
and now subscription and all is still set up,

04:28.120 --> 04:34.120
let's create a new post and see if click works.

04:35.510 --> 04:37.140
Let me click post here

04:37.310 --> 04:39.200
and now it opened a notification.

04:39.470 --> 04:46.340
I'll click on it and you saw it refreshed the page because it reloaded it, should be even clearer,

04:46.520 --> 04:48.160
does it really work

04:48.290 --> 04:54.010
if I change something else? I'll post it and now close this tab

04:55.020 --> 04:58.220
and now if I click the notification, it reopens it.

04:58.710 --> 05:02.540
So this is how it works, this is how we can handle the notification click

05:02.700 --> 05:06.180
and of course this also works on the mobile device.

05:06.260 --> 05:09.610
Now there is of course the one thing which isn't optimal right now,

05:09.690 --> 05:14.580
we hardcode the to be opened URL into the service worker

05:14.970 --> 05:17.730
and that's of course bad, if that ever changes,

05:17.820 --> 05:22.650
we have to add the service worker and even worse than that, for most notifications,

05:22.680 --> 05:27.480
the URL isn't always the same. If we push a message about a new blog post,

05:27.510 --> 05:29.540
we probably want a link to that blog post,

05:29.640 --> 05:35.790
we can't hardcode that URL into our front-end. So in the next lecture, I will show you how you can

05:35.790 --> 05:42.390
pass data from your server to your push message to your service worker to this notification click handler.

05:42.720 --> 05:43.260
See you there.
