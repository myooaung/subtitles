WEBVTT

00:02.120 --> 00:06.740
So with the project cleaned up, this is our application, what do we want to cache,

00:06.740 --> 00:08.540
what would make sense?

00:08.850 --> 00:15.570
Well keep in mind, this card here in the middle, the San Francisco trip, this is some dynamic content.

00:15.680 --> 00:21.500
Yes we fake it a little bit but in the end, we do make this fetch request here which triggers Create

00:21.500 --> 00:22.150
Card,

00:22.160 --> 00:28.490
so if that fails, this card will never be created so we can treat it as a dynamic request.

00:28.490 --> 00:31.710
There are other parts of the application which are more static though,

00:31.800 --> 00:39.380
in the end of course everything is loaded over the wire but our menu here, the help page and a majority

00:39.380 --> 00:45.020
of the feed page here, like this plus button and what we open here is all static content,

00:45.020 --> 00:52.290
it's all inside the index.html file or the HTML file in the help section or part of the loaded CSS and

00:52.340 --> 00:54.230
Javascript files we fetch here.

00:54.440 --> 00:59.610
So all these things we import here are basically in the end parts of our core app

00:59.630 --> 01:07.490
we could say. We call this the app shell, the application shell, the frame of our application you could

01:07.490 --> 01:07.910
say.

01:07.910 --> 01:14.600
So everything around your dynamic content because most applications have something like that, a toolbar

01:14.660 --> 01:21.410
a side bar, a footer maybe, some features which are really a core part of the app and which by the way from

01:21.410 --> 01:24.780
a developer's perspective don't change that often.

01:24.800 --> 01:26.830
On the other hand, you have dynamic content,

01:26.900 --> 01:31.780
what the user really wants to see, what he wants to visit and we can cache this too

01:31.910 --> 01:34.590
but it's not part of our app shell.

01:34.700 --> 01:41.330
So a typical concept is to at least cache this app shell, so you have this frame and this basic app,

01:41.330 --> 01:47.620
maybe you have a text displaying nothing can be shown right now or something like that to give the user

01:47.870 --> 01:52.820
the feeling that your application is still working even if it's offline

01:52.970 --> 01:58.940
and again as I already said, throughout the course we will also learn how to cache dynamic content so that everything

01:58.940 --> 02:02.250
about our application works without internet connection.

02:02.420 --> 02:08.540
Let's start with this app shell though so that when the user visits our app and it's offline, he doesn't

02:08.540 --> 02:17.040
see this but still sees our web page even though the dynamic content might be missing. On the other hand,

02:17.040 --> 02:21.480
pages like the help page which are fully static would still work which is great.

02:21.510 --> 02:28.020
So this is the goal for now, cache that app shell and this is in general how you work with service workers.

02:28.260 --> 02:33.880
You find out what your app shell is, what the core assets of your application are that are visible

02:33.900 --> 02:41.430
on most pages or are used on most pages, then you want to pre-cache that already whilst your service worker

02:41.430 --> 02:49.630
is installing and then you can think about what you want to cache on an on-demand basis, dynamically cache

02:49.640 --> 02:50.100
it

02:50.490 --> 02:56.340
and as a last step you can think about dynamic content, so content which changes frequently, which you

02:56.340 --> 02:59.010
might want to cache. Too much for now?

02:59.100 --> 03:02.040
Well we'll walk through all these steps step-by-step,

03:02.040 --> 03:05.280
let's start with pre-caching our app shell.
