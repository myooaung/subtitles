WEBVTT

00:02.260 --> 00:07.320
Before we dive deeper into the cache API, let's learn where we can use it.

00:07.490 --> 00:12.400
Now on the MDN page, you see it's an experimental technology which means it's still getting worked on and

00:12.400 --> 00:14.650
it's not supported by all browsers.

00:14.650 --> 00:19.240
If we scroll down in this article and of course you can find a link to this article at the end of this

00:19.450 --> 00:20.300
module,

00:20.380 --> 00:21.500
if we scroll down,

00:21.640 --> 00:26.370
besides a couple of examples, you see the browser compatibility table.

00:26.410 --> 00:29.390
Now as you can see, support is ok-ish,

00:29.530 --> 00:34.370
Chrome supports it and supports pretty much all the methods which are planned right now,

00:34.700 --> 00:39.820
also on mobile but of course Internet Explorer and Safari are not supporting it.

00:39.910 --> 00:44.830
Well they aren't even supporting service workers at the point of time I'm recording this at least, so this

00:44.830 --> 00:49.510
isn't really a downside because we couldn't have used offline access or service workers for offline

00:49.510 --> 00:50.750
access anyways.

00:51.010 --> 00:53.350
Still, they are working on that too

00:53.390 --> 00:57.670
and once they introduce service workers, they will probably also support the cache API,

00:57.820 --> 01:04.420
so this is only a matter of time and with Chrome especially Chrome on mobile, we already have a vast

01:04.420 --> 01:12.040
audience we can target and we can well use or we can try to improve the user experience for that audience

01:12.340 --> 01:14.280
which is quite significant.

01:14.560 --> 01:16.330
So this is the browser support right now,

01:16.360 --> 01:18.080
definitely worth implementing it

01:18.220 --> 01:22.750
and I'm going to repeat this throughout the course, just with all the other features you learned,

01:22.930 --> 01:29.440
this is an incremental enhancement. Of course, it's not running in all browsers but for the users who

01:29.440 --> 01:34.810
are able to use it, you enhance your web applications, for the other users, well they are just back to

01:34.810 --> 01:36.870
the world which is already pretty normal,

01:36.880 --> 01:39.480
you can't access a web page without internet connection,

01:39.550 --> 01:41.580
too bad but not the end of the world.

01:41.860 --> 01:43.540
So that's the browser support

01:43.570 --> 01:47.870
and with that, why don't we dive into the cache API and simply start using it?
