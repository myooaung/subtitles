WEBVTT

00:02.230 --> 00:04.060
I hope you enjoyed the assignment,

00:04.240 --> 00:05.050
in the assignment

00:05.050 --> 00:06.460
we detected something.

00:06.880 --> 00:12.700
If we have a look at a service worker here in our main project again, so make sure to switch back to

00:12.700 --> 00:20.320
that and make sure to clear the storage in your application to use the service worker of the main

00:20.320 --> 00:21.900
project again.

00:22.030 --> 00:23.620
Everything is working here

00:24.070 --> 00:33.150
but one thing we can see here is, that there we also use this regular expression check to see if the request

00:33.170 --> 00:37.410
URL is basically part of our static files.

00:37.720 --> 00:44.430
So here, we actually should face the same issue as we did in our assignment.

00:44.830 --> 00:51.640
So one improvement here could be since we have this generic short slash here which is part of basically

00:51.730 --> 00:52.640
any URL,

00:52.720 --> 00:59.060
if you have a case like this, the better alternative most likely is to create the same helper function

00:59.060 --> 01:04.680
I created in the assignment and you can basically skip and just copy the code if you did the assignment,

01:04.690 --> 01:12.100
if not here's what I did there. I added the isInArray method which takes two inputs, a string and an

01:12.100 --> 01:15.090
array and I want to check if the string as part of the array.

01:15.220 --> 01:21.910
For that, I simply loop through the array with a traditional for loop where I check if i is smaller than

01:21.910 --> 01:31.000
the length and that increment i and in there, I simply check if array[i], so the current

01:31.000 --> 01:33.500
element of the loop is equal to string.

01:33.820 --> 01:35.600
If that's the case, I want to return true,

01:35.620 --> 01:40.530
it means we have a hit and if I finish the loop without a hit, I return false

01:40.660 --> 01:46.970
and now I can use isInArray here, instead of the regular expression and to this array

01:46.970 --> 01:49.710
I pass the request URL as the string

01:49.720 --> 01:53.590
I want to find and the array of course is static files.

01:53.950 --> 02:00.280
So with that, let's save this and go back to the application and there, first of all clear storage to

02:00.280 --> 02:07.120
make sure you have no old data from the assignment lying around, then you can reload twice to install

02:07.120 --> 02:12.000
the service worker and then do all the fetching and it should work fine.

02:12.040 --> 02:15.630
We've fetched the majority from the service worker or from the cache

02:15.640 --> 02:17.100
via the service worker,

02:17.290 --> 02:23.470
we only store or we only fetch the path, the get route dynamically which is exactly what we want to

02:23.470 --> 02:24.220
do.

02:24.640 --> 02:32.320
So this is this improvement, definitely a nice improvement in cases like ours where you do have a generic

02:32.320 --> 02:38.020
string in the array of strings we wanted to check which could be part of unqualifying routes too.
