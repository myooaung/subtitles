WEBVTT

00:02.250 --> 00:05.370
Let's conclude this module by having a look at VueJS now.

00:05.520 --> 00:11.610
Just as with create react app, there's an official template which already ships a progressive web app

00:11.700 --> 00:16.890
out of the box and it's best of course to start with that if you want to build a single page application

00:16.950 --> 00:20.050
which is a progressive web app with Vue.

00:20.280 --> 00:23.830
Now here, you also find the steps you have to use

00:23.880 --> 00:27.480
and of course a link to this can also be found in the last lecture of this module,

00:27.480 --> 00:31.360
you can also search for VueJS PWA template.

00:31.410 --> 00:33.930
So here are the steps you have to follow through,

00:33.960 --> 00:40.140
first of all install the vue-cli and then create a new project with that PWA template.

00:40.140 --> 00:46.440
So I'll use this step here because I already have the CLI installed and I still want to do this in

00:46.440 --> 00:50.500
the folder I already have set up, so I will execute Vue init

00:50.520 --> 00:54.680
pwa. and this should use the existing folder.

00:55.020 --> 01:01.080
Now with that, what it will do is it will set this project up and then of course install this template

01:01.140 --> 01:02.010
for me.

01:02.010 --> 01:04.570
So yes, I want to do this in the current folder

01:04.680 --> 01:06.810
and now it will download the template.

01:06.810 --> 01:14.080
Now we can assign a project name, a project short name which is already what it will use in the manifest.json

01:14.110 --> 01:16.020
file as it hints us,

01:16.020 --> 01:17.100
so here I'll name it

01:17.220 --> 01:21.890
pwa, then a short description,

01:21.890 --> 01:26.210
my pwa with Vue maybe. The author,

01:26.360 --> 01:28.270
that's me, then here

01:28.280 --> 01:33.850
which type of compiler we want to use, I pick runtime only Vue router,

01:33.870 --> 01:34.980
well I don't need it

01:35.010 --> 01:35.790
so I will

01:35.790 --> 01:38.090
disable this, don't need linting here,

01:38.100 --> 01:39.810
no tests are needed for this.

01:39.890 --> 01:41.360
Let's disable this all

01:41.490 --> 01:46.430
and now we can just run npm install to install all the dependencies this template has

01:46.530 --> 01:51.430
and as I've just said, it will give us a PWA out of the box in the end.

01:51.450 --> 01:54.330
So let's wait for this to finish to then see what it gives us

01:54.330 --> 01:58.650
out of the box and how we can adjust it, how we can fine tune it.

01:58.650 --> 02:03.450
Actually we can have a look at what's included on this template page whilst it is installing, as you

02:03.450 --> 02:08.980
can see it gives us a service worker which will precache our app shell and the static assets it created.

02:09.210 --> 02:14.500
It will also cleverly pre-load imports we may need at a later point of time,

02:14.580 --> 02:21.360
it will give us a manifest and icons and already the viewport set up. A good score on lighthouse we

02:21.360 --> 02:24.120
saw earlier and a good development environment

02:24.120 --> 02:27.160
too, of course also minifying everything and so on.

02:27.180 --> 02:29.550
So it's a nice set up.

02:29.550 --> 02:35.110
Now here it did finish and with that, let's have a look at what it gave us.

02:35.110 --> 02:39.470
As you can see, we got an index.html file and in there,

02:39.490 --> 02:46.080
we also got the Microsoft additions, also the Apple meta tag.

02:46.080 --> 02:50.840
So this is a good set up because it already gives us that, we don't even have to add these,

02:50.860 --> 02:52.330
that's already great.

02:52.330 --> 02:57.760
We also got the theme color and an import to the manifest which looks very cryptic because this will

02:57.760 --> 03:00.780
be resolved as soon as we build for production.

03:00.790 --> 03:04.860
In the end, it hints us where we find the manifest though, in the static folder,

03:04.930 --> 03:10.280
so there indeed we have the manifest.json file which we can now fine tune to our needs.

03:10.300 --> 03:15.170
It comes with some icons by default and a name, short name and so on,

03:15.220 --> 03:17.860
feel free to of course adjust this to your needs.

03:18.010 --> 03:22.510
Now the service worker is something we don't find in our project here,

03:22.810 --> 03:27.610
no matter in which folder you look here, there is no service worker to be found.

03:27.650 --> 03:30.400
Well let's have a look at the build folder,

03:30.400 --> 03:36.850
there you see service worker related files and there, you can also configure your service worker.

03:37.290 --> 03:37.810
Here

03:37.840 --> 03:41.960
you see that it has the code for registering a service worker

03:42.070 --> 03:47.380
and if you dive into the webpack prod file here, you'll see it's also using SWPrecache, the

03:47.380 --> 03:50.480
same plugin React used by default.

03:50.500 --> 03:56.530
Now for that reason of course, you can also fine tune the set up here, change the name of the file,

03:56.530 --> 04:02.650
of course you also need to change it in the file where you import it then here, change what should get cached

04:02.740 --> 04:03.790
and so on

04:03.850 --> 04:07.770
and of course possibly also replace it with workbox if you want to use that,

04:07.780 --> 04:11.010
just make sure to carefully read the workbox documentation

04:11.020 --> 04:12.570
if you plan to do so.

04:12.940 --> 04:16.390
So this is the set up Vue uses,

04:16.510 --> 04:22.900
let's see what it gives us by simply executing a script it gives us as well, the build script here.

04:23.170 --> 04:30.070
So let's run npm run build to use the default build workflow it gives us out of the box and let's see which files

04:30.100 --> 04:31.340
and folders and assets

04:31.360 --> 04:37.140
it gives us. So the build succeeded and it now gave us a dist folder.

04:37.370 --> 04:38.070
Now if we have a look at that,

04:38.080 --> 04:41.720
we see a service worker file here created by the precache plugin

04:41.980 --> 04:47.410
and we have the manifest file in the static folder, it'll get imported in the index.html file.

04:47.410 --> 04:48.630
Now we can use the serve

04:48.670 --> 04:53.740
server we installed in the React video with, just in case you missed it,

04:53.740 --> 04:57.130
with npm install -g serve,

04:57.490 --> 05:04.520
so that's a global server on my machine now and there we can use serve -s dist here to serve

05:04.570 --> 05:05.660
this dist folder.

05:05.950 --> 05:11.890
Now with that let's copy that URL and open it and let's see how this looks like, what was created

05:11.890 --> 05:12.570
for us.

05:13.510 --> 05:15.920
Well we see React because I loaded that before,

05:15.960 --> 05:18.220
let's clear the storage because it's the same URL,

05:18.240 --> 05:20.490
so the old service worker was taking over.

05:20.490 --> 05:21.900
Now we see the Vue app

05:22.230 --> 05:26.510
and now let's also go offline there.

05:26.640 --> 05:33.450
If I do that and reload, it still works because I precached some assets as you can see if you inspect

05:33.510 --> 05:34.410
the cache.

05:34.650 --> 05:37.800
Now as I said you can customize a lot about that

05:37.950 --> 05:43.130
and that would be far beyond the core scope since it's more about writing development workflows, webpack

05:43.170 --> 05:45.080
and so on.

05:45.090 --> 05:52.080
The key takeaway is with React, Angular and Vue, it's easy to turn the application into a progressive

05:52.080 --> 05:57.510
web app if you don't have one already as it is the case with React and Vue, at least with this template

05:57.510 --> 05:58.230
for Vue.

05:58.320 --> 06:01.200
So it's easy to incorporate progressive web app-like features

06:01.350 --> 06:07.140
and then it's always up to you to fine tune the configuration, fine tune the service worker code to make

06:07.140 --> 06:14.070
sure you also use the logic you want to use in your service workers, add background synchronization and

06:14.070 --> 06:15.080
so on.

06:15.090 --> 06:20.940
Now in the last lecture of this module, you'll find some useful links regarding this SWPrecachePlugin,

06:20.940 --> 06:27.750
how to configure that as well as other links for these three frameworks and progressive web apps.

06:27.750 --> 06:34.110
So definitely consider building your next Vue, React or Angular app as a progressive web app and always

06:34.110 --> 06:37.890
keep in mind, the progressive is an important part of that word

06:37.900 --> 06:39.950
too. You don't have to go all in,

06:40.020 --> 06:45.200
you can start by precaching some assets and gradually add dynamic caching,

06:45.240 --> 06:47.310
caching strategies and more.
