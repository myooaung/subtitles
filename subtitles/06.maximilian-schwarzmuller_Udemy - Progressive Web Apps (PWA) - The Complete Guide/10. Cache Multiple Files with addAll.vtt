WEBVTT

00:02.280 --> 00:07.110
In the last lecture, we started adding parts of our app shell to the cache,

00:07.110 --> 00:15.090
now let's make this a bit easier by using addAll. addAll actually takes an array of strings where each

00:15.090 --> 00:18.620
string represents a URL of the request we want to send

00:18.720 --> 00:25.850
and again just as add, the service worker will go ahead make the HTTP request and store the request response

00:25.860 --> 00:30.340
key-value pair in the cache storage, in the given cache we're opening here.

00:30.720 --> 00:38.160
So let's add all the URLs we already have here to that and let's all the other URLs you

00:38.160 --> 00:38.990
want to store,

00:39.000 --> 00:40.320
now there are a couple of those.

00:40.500 --> 00:48.560
Besides these files here, we also have a /src/js/feed.js file which makes sense

00:48.570 --> 00:52.460
storing. We probably also want to store our polyfills,

00:52.470 --> 01:03.740
so let's store js/promise.js and let's store src/js/fetch.js or do we?

01:03.870 --> 01:08.040
What's your take on these two requests being stored?

01:08.040 --> 01:12.100
Think about it for a second and then I'll give you my opinion on that.

01:15.280 --> 01:19.730
Does it make sense to store these polyfills in our cache?

01:20.740 --> 01:26.340
In my opinion, it doesn't because we use these polyfills for older browsers.

01:26.450 --> 01:33.580
Now these browsers won't support service workers anyways, so there's no value in storing these files

01:33.640 --> 01:34.940
in the cache.

01:35.290 --> 01:41.160
If we store them there, we only load them for browsers which don't need them,

01:41.440 --> 01:43.900
so we can also remove them from there,

01:43.960 --> 01:46.750
it doesn't hurt if we don't have them cached.

01:46.750 --> 01:52.510
Now from a performance perspective, storing them in the cache might still be worth it because even modern

01:52.510 --> 01:57.960
browsers have to load these files because we simply import them in the HTML file.

01:58.060 --> 02:03.400
Now that is something you can optimize in your build workflow if you have one, to only include or to

02:03.400 --> 02:08.090
conditionally load these polyfills only on browsers where you need it.

02:08.250 --> 02:14.770
Now here, I will add them to the cache for the performance reason so that we can quickly load them

02:15.010 --> 02:21.130
but I want to give you or I want you to keep that in mind, that these are only needed on browsers which

02:21.130 --> 02:22.680
don't support service workers

02:22.780 --> 02:29.380
but since we have to load the files on all browsers, caching them might still make sense, only because

02:29.380 --> 02:33.370
we don't have a build workflow where we would conditionally load this though.

02:33.580 --> 02:38.770
If you have such a workflow or have any other set up, this might not make sense, here

02:38.770 --> 02:40.660
it does however.

02:40.840 --> 02:46.210
So with that, we loaded these Javascript files, there's one other file we should store, source Javascript

02:46.420 --> 02:52.270
and that's the material.min.js file, a file required by that package I'm using, the material

02:52.270 --> 02:54.890
design lite package.

02:54.980 --> 02:56.970
So these are Javascript files,

02:57.100 --> 02:58.740
what about CSS?

02:58.760 --> 03:00.970
Let's have a look at these files too.

03:01.010 --> 03:12.910
There I'll store src/css/app.css and src/css/feed.css,

03:13.330 --> 03:16.130
what about help.css and the index.html

03:16.130 --> 03:18.190
file in the help page?

03:18.190 --> 03:24.290
We could pre-cache that but I want to store the bare minimum app shell we have

03:24.490 --> 03:31.200
and also parts we need to make our front our first page run, like the feed.js file.

03:31.210 --> 03:37.130
This is why I don't pre-cache the files from the other parts of the app,

03:37.180 --> 03:43.290
however you'll soon learn how to dynamically add files to the cache once the user visited a given page,

03:43.300 --> 03:46.860
so that you can provide them on future visits too,

03:46.870 --> 03:49.210
for now I won't pre-cache them though.

03:49.780 --> 03:53.430
So these are the Javascript, HTML and CSS files

03:53.440 --> 04:01.270
but we also got some files which are loaded over the wire and we get images. Now in our index.html

04:01.270 --> 04:01.960
file,

04:01.960 --> 04:07.690
right now we only use one of these images, except for the one which we load dynamically which isn't important

04:07.690 --> 04:10.050
here because this won't work anyways,

04:10.060 --> 04:12.500
we don't have internet connection to do so.

04:12.500 --> 04:15.430
The image we're using however is this main-image.jpg

04:15.470 --> 04:19.040
file, so pre-caching that makes sense too.

04:19.120 --> 04:24.090
We don't have to but for the best user experience, we should probably add this too,

04:24.220 --> 04:31.350
so let's add /src/images/main-image.jpg.

04:31.360 --> 04:34.290
Now what about the icons here?

04:34.890 --> 04:41.970
Well the icons, you don't really need to pre-cache those in my opinion because yes, you won't be able to add

04:41.980 --> 04:45.720
it to the homescreen if you don't pre-cache

04:45.770 --> 04:48.250
the icons here because the browser can't fetch it

04:48.360 --> 04:54.270
but that shouldn't be an issue here because offline support shouldn't be the permanent state of our

04:54.270 --> 04:55.500
application.

04:55.530 --> 05:00.330
Feel free of course to cache some of the icons if you need them in your application,

05:00.340 --> 05:05.660
I will decide against it and stick to the core assets of my main page and not focus on any other assets

05:05.760 --> 05:07.760
in this application.

05:07.990 --> 05:15.520
Other things I want to pre-cache though are the things I get from CDNs, like the styling package here

05:15.720 --> 05:19.750
from material-design-lite or the Google fonts and image

05:19.770 --> 05:23.520
icon sets. So to pre-cache those,

05:23.560 --> 05:32.420
I'll just copy that link here to the roboto font and I will add it to my cache. Here

05:32.430 --> 05:36.370
however I need the full URL, not just /css and so on

05:36.420 --> 05:42.110
because of course it's not loaded from my localhost, not from my domain here but from a different server

05:42.180 --> 05:43.630
but and this is important,

05:43.740 --> 05:49.530
you can also cache files loaded from other service over a CDN, this is perfectly fine,

05:49.530 --> 05:54.500
doesn't have to be your own server. So this is one thing I will pre-cache here.

05:54.900 --> 05:56.600
One important restriction though,

05:56.790 --> 06:03.690
if you don't want to get an error here, the servers you are pre-caching from should set the CORS headers

06:03.750 --> 06:07.330
to allow cross-origin-access to these files,

06:07.380 --> 06:10.460
if they don't, this will throw an error.

06:11.040 --> 06:14.070
So storing the font here is only one thing,

06:14.080 --> 06:16.590
I also want to store the icons,

06:17.010 --> 06:21.200
so let's add this URL to the cache too

06:21.750 --> 06:28.710
and finally let's also add the link to that CSS file we are using, to our theme,

06:28.740 --> 06:36.140
let's add that too. And with that, I think we're pre-caching everything we need, so we can remove these two caching

06:36.140 --> 06:40.900
lines down there and now see if that works as it should.

06:41.120 --> 06:46.790
Let's go back to our application and reload to fetch the new version of the service worker, activate it

06:46.820 --> 06:49.260
and reload the page

06:49.460 --> 06:53.100
and now click on network

06:53.340 --> 06:56.340
and let's see where the files are getting loaded from.

06:56.340 --> 06:58.760
A lot of stuff is coming from the service worker

06:59.040 --> 07:06.510
and we don't see that many requests coming from the network thereafter, the get request and this cryptic

07:06.550 --> 07:08.030
request.

07:08.080 --> 07:11.490
Now this cryptic requests are our actual fonts,

07:11.500 --> 07:13.020
let me show you what I mean.

07:13.210 --> 07:17.000
If we tick offline and we reload, you

07:17.130 --> 07:17.810
see a lot

07:17.810 --> 07:19.520
works here, looks pretty good,

07:19.520 --> 07:21.830
we have the general styling of the image.

07:22.010 --> 07:26.420
We have the font here but the icon is missing, right,

07:26.440 --> 07:28.680
we have some text here.

07:28.720 --> 07:34.340
The reason for this is that the icons here are fetched differently.

07:34.360 --> 07:41.440
We're pre-caching this link but if we carefully evaluate this link here in our network tab, it's this

07:41.440 --> 07:44.180
one and we have a look at the response,

07:44.380 --> 07:49.810
we see that we get back some font definitions where in the end the fonts are loaded from a different

07:49.840 --> 07:55.080
URL, here it's this cryptic URL with 2fcr.

07:55.390 --> 08:00.520
Well if you have a look at the requests, this is this request which is then again sent over the wire.

08:00.730 --> 08:03.480
So we are pre-caching the font definition,

08:03.480 --> 08:11.410
this works, we're fetching this from cache but the actual icons still are fetched over the wire unfortunately.

08:11.650 --> 08:13.920
So this doesn't work yet,

08:13.990 --> 08:17.410
we'll fix this with dynamic caching in the future,

08:17.650 --> 08:22.570
what does work though is, even though it's not super beautiful because the icons are missing,

08:22.570 --> 08:24.400
the application is generally working,

08:24.400 --> 08:27.340
even the Javascript otherwise we couldn't open that menu here.

08:27.520 --> 08:28.440
So this is working,

08:28.450 --> 08:34.570
we can open our own menu, just the icons are missing and if we navigate to help of course, the app breaks

08:34.720 --> 08:36.640
because we're not caching that.

08:37.180 --> 08:43.660
Now it would be nice if we could cache pages or if we could dynamically add assets to the page,

08:43.690 --> 08:48.970
for example if the user visits this page, maybe we want to cache the things we need to display this cache

08:49.240 --> 08:53.030
thereafter, so that future visits are also possible offline.

08:53.230 --> 08:56.860
The same for these icons which still have to be fetched from the wire.

08:57.070 --> 09:02.620
Maybe it would be nice if we could catch that response and dynamically add it to the cache so that we

09:02.620 --> 09:06.140
have it available for future requests too. Dynamic

09:06.150 --> 09:08.850
caching is what I'll have a look at next.
