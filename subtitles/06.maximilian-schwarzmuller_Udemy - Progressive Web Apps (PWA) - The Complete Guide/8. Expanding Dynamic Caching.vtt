WEBVTT

00:02.190 --> 00:04.430
So in the last lecture, we got started with routing,

00:04.450 --> 00:06.770
now I want to continue on this road,

00:06.780 --> 00:12.850
I also want to pull in this CSS file for our material design package because keep in mind, we're

00:12.850 --> 00:15.690
loading this over a CDN too, it's this

00:15.730 --> 00:22.000
URL here and I want to make sure that the images of my posts are not going into that storage

00:22.000 --> 00:23.350
for my Google fonts.

00:23.350 --> 00:24.710
Right now, they do because the

00:24.740 --> 00:30.600
URL also ends with googleapis.com before we have all the parameters thereafter.

00:30.610 --> 00:33.750
So these are the things I also want to do next

00:33.940 --> 00:38.990
and let's start with the CSS package for the material design.

00:39.130 --> 00:45.110
I'll copy this route and now I'll use a different matching algorithm here.

00:45.340 --> 00:47.240
I won't use a regular expression,

00:47.440 --> 00:50.370
instead I'll use an Express style route.

00:50.440 --> 00:53.830
I'll copy this full URL of my CDN,

00:53.850 --> 01:01.540
of this CSS file I'm pulling in and in sw-base. I'll just enter this as a string, not as a regular

01:01.540 --> 01:03.430
expression, as a string.

01:03.430 --> 01:09.400
Now here I don't have any dynamic parameters, though I could of course add them if I wanted to, I could

01:09.400 --> 01:12.310
add dynamic parameters Express style in there,

01:12.430 --> 01:17.470
however here I'm only interested in this full URL, so I can just match this.

01:17.500 --> 01:23.380
I still want to use the staleWhileRevalidate strategy for the same reason as in the first route,

01:23.440 --> 01:28.120
I want to reach out to the cache first but also get it from the internet in case we don't have it in the

01:28.120 --> 01:33.980
cache or we have a newer version on the internet and I want to store it in a separate cache which

01:33.980 --> 01:37.250
I'll name material-css 

01:37.360 --> 01:41.790
So with that, we already have that pulled in. Now another thing I want to do though

01:41.800 --> 01:49.480
before we see this in action, I want to also make sure that images related to my posts don't go into

01:49.480 --> 01:51.000
this Google fonts folder.

01:51.310 --> 01:53.320
So I'll add another new route.

01:53.320 --> 01:57.550
Now in this route, I want to tweak the matching pattern,

01:57.730 --> 02:02.050
I'm not interested in gstatic but I am interested if the URL

02:02.140 --> 02:11.020
contains Firebase storage because if we have a look at our network tab here, we see that for all these

02:11.020 --> 02:16.340
images here, if we have a look at one of these requests, the URL basically is 

02:16.390 --> 02:24.670
firebasestorage.googleapis.com/ and this means I can match it by adding firebasestorage.googleapis

02:24.700 --> 02:31.390
here, escaped the dot with a backslash and now this should make sure that all images which

02:31.390 --> 02:36.530
we'll use this as part of their URL do use this route.

02:36.530 --> 02:40.090
Now there, I will also use the staleWhileRevalidate strategy,

02:40.120 --> 02:43.480
so basically cache then network with dynamic caching and

02:43.690 --> 02:49.070
I'll store it in a cache name which I'll name post images maybe, whatever you like.

02:49.070 --> 02:55.450
And with that, let's open up the console and let's rerun generate-sw to generate an updated service worker

02:56.290 --> 02:59.000
and back in the application with npm start running,

02:59.230 --> 03:05.740
I'll clear the storage to fetch my updated service worker and reload, reload twice to have the dynamic

03:05.740 --> 03:09.120
assets cached and let's refresh the storage

03:09.400 --> 03:12.730
and there, we already see Google fonts only has three items

03:12.730 --> 03:17.120
now, the fonts and post images has all my post images.

03:17.140 --> 03:21.010
I have 5 posts and 5 entries here stored in it,

03:21.070 --> 03:22.820
so this is great.

03:22.930 --> 03:27.640
Now in the next lecture, I want to have a look at the other options you can pass to your strategies

03:27.640 --> 03:29.160
besides the cache name.
