WEBVTT
1
00:00:02.296 --> 00:00:04.557
So poor design choices are often the root cause of most

2
00:00:04.557 --> 00:00:08.009
of the frustration when writing tests, particularly unit tests.

3
00:00:08.009 --> 00:00:10.855
Unit tests should be fairly easy to set up and run,

4
00:00:10.855 --> 00:00:13.459
and only fail when the code they are testing changes.

5
00:00:13.459 --> 00:00:16.661
One of the best set of principles I have found for

6
00:00:16.661 --> 00:00:18.375
addressing these issues is SOLID.

7
00:00:18.375 --> 00:00:21.470
SOLID is an acronym, and even if you're not familiar with the term,

8
00:00:21.470 --> 00:00:24.490
you're likely following some of these principles already.

9
00:00:24.490 --> 00:00:27.288
The principles are single responsibility,

10
00:00:27.288 --> 00:00:31.667
open for extension, closed for modification,

11
00:00:31.667 --> 00:00:35.268
Liskov substitution, interface segregation,

12
00:00:35.268 --> 00:00:36.517
and dependency inversion.

13
00:00:36.517 --> 00:00:40.654
Broadly, these five principles can be placed in two groups.

14
00:00:40.654 --> 00:00:43.520
There are the cohesive principles of single

15
00:00:43.520 --> 00:00:45.878
responsibility and interface segregation,

16
00:00:45.878 --> 00:00:55.000
and the dependency abstraction principles of open/closed, Liskov substitution, and dependency inversion.

