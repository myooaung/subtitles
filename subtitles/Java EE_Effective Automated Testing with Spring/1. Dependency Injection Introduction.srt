1
00:00:00,000 --> 00:00:02,529
Hey, this is Billy with Pluralsight,

2
00:00:02,529 --> 00:00:09,197
and we are looking at how to write effective automated tests in Spring.

3
00:00:09,197 --> 00:00:10,129
In the previous module,

4
00:00:10,129 --> 00:00:12,550
we learned one of the biggest impediments to writing

5
00:00:12,550 --> 00:00:15,899
automated tests is poorly designed code.

6
00:00:15,899 --> 00:00:17,359
When classes have too many responsibilities,

7
00:00:17,359 --> 00:00:21,124
or when they don't have a way of abstraction from their dependencies,

8
00:00:21,124 --> 00:00:23,898
test complexity and maintenance costs rise sharply,

9
00:00:23,898 --> 00:00:28,834
to the point where automated tests no longer provide enough value to

10
00:00:28,834 --> 00:00:32,109
justify the time spent writing and maintaining them.

11
00:00:32,109 --> 00:00:32,871
In this module,

12
00:00:32,871 --> 00:00:36,051
we will learn how the patterns and practices covered in the previous

13
00:00:36,051 --> 00:00:38,779
module allow for the easy injection of mock dependencies,

14
00:00:38,779 --> 00:00:42,214
and how to leverage these mock dependencies to test the

15
00:00:42,214 --> 00:00:45,408
business behavior of our application.

16
00:00:45,408 --> 00:00:46,295
During this module,

17
00:00:46,295 --> 00:00:51,835
we will take a closer look at the key characteristics and goals of unit testing.

18
00:00:51,835 --> 00:00:54,215
We will look at the different types of mocks and

19
00:00:54,215 --> 00:00:56,121
when and where they should be used,

20
00:00:56,121 --> 00:00:59,302
have a brief overview of the demo application we will

21
00:00:59,302 --> 00:01:04,451
be building during this course, learn about test-driven development,

22
00:01:04,451 --> 00:01:06,017
or TDD, and finally,

23
00:01:06,017 --> 00:01:12,000
run through a few scenarios of modifying our application and adding new features to it.

