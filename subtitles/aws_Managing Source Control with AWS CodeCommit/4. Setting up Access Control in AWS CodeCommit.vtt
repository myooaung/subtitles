WEBVTT
1
00:00:02.440 --> 00:00:07.080
Previously, we saw how to create a user and assign him the

2
00:00:07.080 --> 00:00:12.410
privileges required to access the CodeCommit repository.

3
00:00:12.410 --> 00:00:16.480
This way of individually setting access control will soon become

4
00:00:16.480 --> 00:00:21.670
unmaintainable as the number of users starts increasing.

5
00:00:21.670 --> 00:00:26.040
The recommended way is to create groups and assign policies to

6
00:00:26.040 --> 00:00:30.610
the groups and add the users to these groups.

7
00:00:30.610 --> 00:00:36.340
In our project, we're going to create three different groups for developers,

8
00:00:36.340 --> 00:00:46.380
administrators, and managers. Go ahead and click Groups, Create New Group.

9
00:00:46.380 --> 00:00:51.170
Let's create a group named Developers, and Developers will

10
00:00:51.170 --> 00:00:57.670
have full access to the repository. Select

11
00:00:57.670 --> 00:01:02.400
AWSCodeCommitFullAccess from the Policy Type.

12
00:01:02.400 --> 00:01:07.830
Click Next and Create Group.

13
00:01:07.830 --> 00:01:11.540
Now let's create another group for administrators.

14
00:01:11.540 --> 00:01:14.770
Administrators are power users in the sense that they

15
00:01:14.770 --> 00:01:18.840
can create and delete repositories.

16
00:01:18.840 --> 00:01:28.540
Let's select AWSCodeCommitPowerUser as a policy, click Create Group.

17
00:01:28.540 --> 00:01:32.690
Now let's create one last group named Managers,

18
00:01:32.690 --> 00:01:36.640
and they may not need write access to the repository.

19
00:01:36.640 --> 00:01:47.040
So let's select the AWSCodeCommitReadOnly policy and click Create Group.

20
00:01:47.040 --> 00:01:53.440
Now that we have three groups, we need to add users to these groups.

21
00:01:53.440 --> 00:01:59.880
Click the Add user button, enter developer1, and let's choose the

22
00:01:59.880 --> 00:02:05.320
option so that he can use the autogenerated password,

23
00:02:05.320 --> 00:02:13.080
and he needs to change it once he logs in. Click Permissions.

24
00:02:13.080 --> 00:02:16.880
Now instead of adding policies to the users directly,

25
00:02:16.880 --> 00:02:23.710
they're going to add this user to the group. Select the Developers group.

26
00:02:23.710 --> 00:02:30.530
Let's leave the tags empty. Click Create user.

27
00:02:30.530 --> 00:02:35.340
Now let's go ahead and create the user manager1, and

28
00:02:35.340 --> 00:02:38.010
instead of assigning policy to the user,

29
00:02:38.010 --> 00:02:43.570
we're going to add him to the group manager, and click Create

30
00:02:43.570 --> 00:02:48.940
user. In the last clip when we created the admin user, we

31
00:02:48.940 --> 00:02:54.340
assigned a policy to this user directly.

32
00:02:54.340 --> 00:02:59.830
Let's go ahead and delete these two policies, and let's

33
00:02:59.830 --> 00:03:05.820
add this user to the admin group. Any time we need to

34
00:03:05.820 --> 00:03:08.740
create new users in the future,

35
00:03:08.740 --> 00:03:12.540
we don't need to worry about their access control.

36
00:03:12.540 --> 00:03:16.590
We just need to identify to which group they belong and

37
00:03:16.590 --> 00:03:20.730
add them to the corresponding group.

38
00:03:20.730 --> 00:03:25.240
Let's quickly summarize what we've learned so far.

39
00:03:25.240 --> 00:03:32.340
We started by understanding the value proposition offered by AWS CodeCommit.

40
00:03:32.340 --> 00:03:37.760
We created an empty repository by logging into the AWS CodeCommit console

41
00:03:37.760 --> 00:03:43.930
directly and walked through the various phases of version control management

42
00:03:43.930 --> 00:03:50.110
directly in the CodeCommit console without writing a single Git command. We

43
00:03:50.110 --> 00:03:58.295
later saw how to migrate an existing Git repository into AWS CodeCommit. We

44
00:03:58.295 --> 00:04:03.690
then saw how to set up access control to the repositories by creating IAM

45
00:04:03.690 --> 00:04:12.000
groups, assigning policies to them, and adding individual users to those groups.

