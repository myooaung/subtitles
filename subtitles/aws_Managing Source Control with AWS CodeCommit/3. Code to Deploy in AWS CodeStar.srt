1
00:00:00,840 --> 00:00:05,640
Let's jump into a quick demo and see how AWS CodeStar

2
00:00:05,640 --> 00:00:10,440
streamlines the process from coding to deployment.

3
00:00:10,440 --> 00:00:16,040
Click on Globomanticsâ€‘P2 repository.

4
00:00:16,040 --> 00:00:21,520
I went ahead and performed a few more changes to index.html

5
00:00:21,520 --> 00:00:26,040
and pushed the changes to the repository.

6
00:00:26,040 --> 00:00:33,912
Click on Compare commits. Choose master as destination and develop

7
00:00:33,912 --> 00:00:41,250
as source. Click Compare. And you can see the differences between

8
00:00:41,250 --> 00:00:45,540
the two branches have been highlighted.

9
00:00:45,540 --> 00:00:49,240
You have an option to add comments at the bottom.

10
00:00:49,240 --> 00:00:53,890
Or you can also add in line comment.

11
00:00:53,890 --> 00:01:03,840
Click on the small blue icon to your left, add your comments, and click on Save.

12
00:01:03,840 --> 00:01:10,840
Now that the code has been reviewed, we can go back to the pull requests.

13
00:01:10,840 --> 00:01:18,740
Click on Create pull request. Choose master as the destination and

14
00:01:18,740 --> 00:01:27,480
develop as source. Give the pull request a title and click Create

15
00:01:27,480 --> 00:01:39,720
pull request. Click on Merge, and then Merge pull request. Let me go

16
00:01:39,720 --> 00:01:48,560
back to AWS CodeStar console, click on Application endpoints,

17
00:01:48,560 --> 00:01:55,040
and you can see the HTML page that is currently being deployed.

18
00:01:55,040 --> 00:01:59,000
You can see the code that we pushed has been successfully

19
00:01:59,000 --> 00:02:06,040
committed and the build is currently in progress.

20
00:02:06,040 --> 00:02:08,570
Once the build is successfully completed,

21
00:02:08,570 --> 00:02:12,540
you can see that deployment has started.

22
00:02:12,540 --> 00:02:16,710
Click on Deploy history and you can see the

23
00:02:16,710 --> 00:02:21,900
previous deployments under its status.

24
00:02:21,900 --> 00:02:27,440
Now the deployment is completed, let me click on Pipeline history.

25
00:02:27,440 --> 00:02:31,851
You can see the latest deployment and the duration of deployment.

26
00:02:31,851 --> 00:02:40,320
CodeCommit history shows the latest commit and its commit ID.

27
00:02:40,320 --> 00:02:44,750
I'm going to go and click the endpoint again, and you can

28
00:02:44,750 --> 00:02:48,140
see now our latest changes have been successfully

29
00:02:48,140 --> 00:02:52,930
reflected and successfully deployed.

30
00:02:52,930 --> 00:02:57,500
Let's quickly summarize what we learned so far.

31
00:02:57,500 --> 00:03:03,140
We saw how CodeStar can be used in creating new projects

32
00:03:03,140 --> 00:03:07,610
using preexisting templates and how it may not be a good

33
00:03:07,610 --> 00:03:11,440
candidate for existing projects.

34
00:03:11,440 --> 00:03:14,510
We saw all the different AWS Service's that are

35
00:03:14,510 --> 00:03:18,140
required from setting up access control,

36
00:03:18,140 --> 00:03:21,540
to project development, to deployment,

37
00:03:21,540 --> 00:03:27,880
having connected together and how AWS CodeStar provides a unified dashboard

38
00:03:27,880 --> 00:03:33,327
which gives a complete snapshot of our project status at any given time.

39
00:03:33,327 --> 00:03:38,470
With all the code services that are needed for continuous integration and

40
00:03:38,470 --> 00:03:43,670
continuous delivery being in place, the time it takes in a typical life

41
00:03:43,670 --> 00:03:54,000
cycle from coding to deployment is much reduced and, hence, it helps in a faster time to market.

