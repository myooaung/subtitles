1
00:00:00,340 --> 00:00:01,540
Hello there.

2
00:00:01,540 --> 00:00:05,460
Welcome to the module of Monitor and Troubleshoot

3
00:00:05,460 --> 00:00:08,800
AWS CodeCommit. In this module,

4
00:00:08,800 --> 00:00:13,780
we will see how to set up notification rules to alert your

5
00:00:13,780 --> 00:00:16,960
dev team once a developer makes any changes in the

6
00:00:16,960 --> 00:00:20,640
repository, like checking in the code,

7
00:00:20,640 --> 00:00:27,420
creating or deleting a branch, and so on. Many a times we may need more than a

8
00:00:27,420 --> 00:00:35,190
simple notification. We may need to trigger downstream builds or other processes

9
00:00:35,190 --> 00:00:38,840
when a change happens in the current repository.

10
00:00:38,840 --> 00:00:45,240
For cases like these, AWS allows us to create triggers.

11
00:00:45,240 --> 00:00:50,970
You can write a lambda function and have CodeCommit call this lambda function

12
00:00:50,970 --> 00:00:57,540
when that specific action occurs. We will see how to write a simple lambda

13
00:00:57,540 --> 00:01:03,360
function and set up a trigger to invoke this function. One of the important

14
00:01:03,360 --> 00:01:09,530
requirements for any large enterprise is to maintain an audit trail so that we

15
00:01:09,530 --> 00:01:15,240
can find out who did what action and when.

16
00:01:15,240 --> 00:01:20,808
You will see how CodeCommit API calls are logged in CloudTrail and help

17
00:01:20,808 --> 00:01:26,830
interpret it. Let's see a quick demo and learn how to create a

18
00:01:26,830 --> 00:01:31,880
notification rule in AWS CodeCommit repository.

19
00:01:31,880 --> 00:01:36,660
I just logged into AWS CodeCommit. Choose

20
00:01:36,660 --> 00:01:41,540
Globomantics from the list of repositories.

21
00:01:41,540 --> 00:01:50,340
Click on Settings and then Notifications, choose Create notification rules.

22
00:01:50,340 --> 00:01:55,020
Let me enter Globomantics Notification under the Notification

23
00:01:55,020 --> 00:02:00,720
name, and we have the option to include Basic details or Full

24
00:02:00,720 --> 00:02:04,390
details in the notification message.

25
00:02:04,390 --> 00:02:11,420
I'm going to select Full details. The next section list all the events

26
00:02:11,420 --> 00:02:15,540
for which the notification needs to be triggered.

27
00:02:15,540 --> 00:02:23,053
I'm going to select all. Under targets,we can select the Amazon SNS topic

28
00:02:23,053 --> 00:02:29,170
to which you want to send the notifications. I'm going to select

29
00:02:29,170 --> 00:02:34,040
Globomantics notification that I've already created.

30
00:02:34,040 --> 00:02:38,520
You also have the option of selecting multiple targets if you want the

31
00:02:38,520 --> 00:02:47,110
notification to be sent to more than one place. Click Submit, and you can see a

32
00:02:47,110 --> 00:02:51,940
summary of the notification rule that you just created.

33
00:02:51,940 --> 00:02:58,740
Let's go to SNS Service and check how this topic has been set up.

34
00:02:58,740 --> 00:03:02,680
It shows four topics currently.

35
00:03:02,680 --> 00:03:07,800
Let's select Globomantics notification, and you can see it

36
00:03:07,800 --> 00:03:13,040
doesn't have any subscription set up here.

37
00:03:13,040 --> 00:03:20,850
Click Create subscription, under Protocol select Email, and specify the

38
00:03:20,850 --> 00:03:28,440
email address under Endpoint. Click Create subscription.

39
00:03:28,440 --> 00:03:33,140
You can see the Status is Pending confirmation.

40
00:03:33,140 --> 00:03:37,700
Let me switch to my email client, and here here you can see

41
00:03:37,700 --> 00:03:41,070
the email that I just received from AWS,

42
00:03:41,070 --> 00:03:48,420
asking me to confirm the subscription. Click Confirm subscription.

43
00:03:48,420 --> 00:03:50,250
Once a subscription is confirmed,

44
00:03:50,250 --> 00:03:57,030
you can see that the status is changed to Confirmed status. I'm going to

45
00:03:57,030 --> 00:04:04,170
make a simple commit and test this notification rule. Let's go to CloudNine

46
00:04:04,170 --> 00:04:10,090
console. We are currently in the Develop branch.

47
00:04:10,090 --> 00:04:17,890
Let's open file1.txt, and I'm going to make some changes to this file.

48
00:04:17,890 --> 00:04:22,640
Once completed, save the file.

49
00:04:22,640 --> 00:04:29,120
Let's add the file to the local branch and commit the changes.

50
00:04:29,120 --> 00:04:33,490
Let's push the changes to the remote branch.

51
00:04:33,490 --> 00:04:38,690
I'm going to log back into my email client, and here is a

52
00:04:38,690 --> 00:04:42,340
notification message that is triggered by the notification

53
00:04:42,340 --> 00:04:46,240
rule that we initially set up.

54
00:04:46,240 --> 00:04:48,640
You can see the repositoryName,

55
00:04:48,640 --> 00:04:58,000
the branch name, and the user that performed the change and the type of change, as part of the email message.

