1
00:00:02,240 --> 00:00:03,480
Hello there.

2
00:00:03,480 --> 00:00:10,340
Welcome to this module on Integrate AWS CodeCommit with AWS CodeStar.

3
00:00:10,340 --> 00:00:14,190
In this module, we will look at different features offered by

4
00:00:14,190 --> 00:00:18,940
AWS CodeStar and some of its limitations.

5
00:00:18,940 --> 00:00:23,090
Then we will look at all AWS services that our

6
00:00:23,090 --> 00:00:28,340
integrated together as part of AWS CodeStar.

7
00:00:28,340 --> 00:00:32,370
We will take a look at the default project templates that are offered by

8
00:00:32,370 --> 00:00:38,400
CodeStar and how a project manager will have one single view that gives a

9
00:00:38,400 --> 00:00:44,400
snapshot of the current status of the project at any given time. We will see

10
00:00:44,400 --> 00:00:48,320
the various options that are available to choose for your development

11
00:00:48,320 --> 00:00:54,680
environment and to maintain the code repository. We will be selecting Cloud9

12
00:00:54,680 --> 00:00:59,950
as our development environment and CodeCommit as our source control

13
00:00:59,950 --> 00:01:04,800
repository. Once the environment is set up, we will launch our development

14
00:01:04,800 --> 00:01:05,830
environment,

15
00:01:05,830 --> 00:01:10,970
perform code changes in a separate branch, and merge the changes back

16
00:01:10,970 --> 00:01:16,230
to master. Before merging the changes, you will also see how to

17
00:01:16,230 --> 00:01:20,485
compare different commits and perform a code review in AWS

18
00:01:20,485 --> 00:01:27,620
CodeCommit. With so many developer tool services offered by AWS, it

19
00:01:27,620 --> 00:01:32,070
may be tedious in switching back and forth between services in a

20
00:01:32,070 --> 00:01:34,640
typical development project.

21
00:01:34,640 --> 00:01:40,260
AWS CodeStar provides a nice facade that integrates all the core AWS

22
00:01:40,260 --> 00:01:46,780
services that are required in a typical development project. With so

23
00:01:46,780 --> 00:01:50,920
many programming language options that are available both for front end

24
00:01:50,920 --> 00:01:57,360
and back end, CodeStar offers many different project templates that can

25
00:01:57,360 --> 00:02:03,220
be run in a serverless or virtual service or in a managed application

26
00:02:03,220 --> 00:02:05,240
environment.

27
00:02:05,240 --> 00:02:07,840
Once the development project is created,

28
00:02:07,840 --> 00:02:13,240
you can add the roles and permissions for the selected users.

29
00:02:13,240 --> 00:02:18,510
Once the project is created and users set up, AWS CodeStar

30
00:02:18,510 --> 00:02:23,930
provides a project dashboard where you can track bugs, monitor

31
00:02:23,930 --> 00:02:29,580
latest commits, check the status of the latest build, and maintain

32
00:02:29,580 --> 00:02:32,740
a project wiki all in one place.

33
00:02:32,740 --> 00:02:39,290
One major drawback with AWS CodeStar is that this can be used only for new

34
00:02:39,290 --> 00:02:44,410
development projects, and existing projects cannot be migrated to leverage

35
00:02:44,410 --> 00:02:48,590
these features. Before we jump into a demo,

36
00:02:48,590 --> 00:02:55,040
let's quickly look at the different roles that are part of AWS CodeStar project.

37
00:02:55,040 --> 00:02:57,740
The first one is owner,

38
00:02:57,740 --> 00:03:03,140
which is the highest access level, and this role can add and remove other

39
00:03:03,140 --> 00:03:09,640
team members, push code changes to the depository, configure project

40
00:03:09,640 --> 00:03:18,040
dashboard, and can even delete the project. Contributor, this role cannot

41
00:03:18,040 --> 00:03:23,570
add our remove other team members but can perform other projectâ€‘level tasks

42
00:03:23,570 --> 00:03:26,910
except deleting the project.

43
00:03:26,910 --> 00:03:31,330
And the third one is viewer, and the users with this role

44
00:03:31,330 --> 00:03:38,000
will only be able to view the resources and cannot push any code changes to the depository.

