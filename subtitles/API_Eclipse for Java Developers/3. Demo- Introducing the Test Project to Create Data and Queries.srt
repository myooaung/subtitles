1
00:00:02,040 --> 00:00:04,470
[Autogenerated] now that we have the big picture in mind.

2
00:00:04,470 --> 00:00:09,040
Er, let us jump in the live demo of this Majola.

3
00:00:09,040 --> 00:00:13,590
Let us connect Eclipse Toe on existing my sequel database.

4
00:00:13,590 --> 00:00:14,700
Instance.

5
00:00:14,700 --> 00:00:17,710
First win still the J DBC driver.

6
00:00:17,710 --> 00:00:22,810
Then we create a connection and then we play with it,

7
00:00:22,810 --> 00:00:26,210
passing sequel queries back and forth to the mice.

8
00:00:26,210 --> 00:00:27,350
Equal database.

9
00:00:27,350 --> 00:00:28,640
Instance.

10
00:00:28,640 --> 00:00:29,740
So first,

11
00:00:29,740 --> 00:00:34,470
we're going to begin with an existing Java maven project

12
00:00:34,470 --> 00:00:38,150
that I just created in Eclipse Java eight.

13
00:00:38,150 --> 00:00:42,440
Maven project Called user Dash Devi.

14
00:00:42,440 --> 00:00:47,860
It has a dependency to the my sequel connector Java Jdb

15
00:00:47,860 --> 00:00:51,690
See Driver provided by my sequel.

16
00:00:51,690 --> 00:00:56,760
Every database vendor provides a J DBC driver so the first step,

17
00:00:56,760 --> 00:01:02,380
of course, is to find this driver which is most of the time,

18
00:01:02,380 --> 00:01:04,290
very easy.

19
00:01:04,290 --> 00:01:09,220
Then we have a user class which is just a plain Java Bina,

20
00:01:09,220 --> 00:01:13,430
which two properties, name and age, respectively,

21
00:01:13,430 --> 00:01:20,070
a string on an end and then create user class that is going to

22
00:01:20,070 --> 00:01:25,140
create a set of fuser in an existing database.

23
00:01:25,140 --> 00:01:31,070
The database Your area is local host slash your site on the day of a user,

24
00:01:31,070 --> 00:01:35,280
and it's password are both Brewer site, of course,

25
00:01:35,280 --> 00:01:40,740
never use this kind of thing in a real production environment.

26
00:01:40,740 --> 00:01:46,570
Then we are just using playing a J DBC coda with a prepared statement

27
00:01:46,570 --> 00:01:51,400
on a batch to create four users in the database.

28
00:01:51,400 --> 00:01:54,130
And then we have a read user class,

29
00:01:54,130 --> 00:01:58,290
which is just reading back the users from the database.

30
00:01:58,290 --> 00:02:00,560
This database exists.

31
00:02:00,560 --> 00:02:05,170
I have my sequel server open running on this local machina,

32
00:02:05,170 --> 00:02:08,010
and if you want to run this code yourself,

33
00:02:08,010 --> 00:02:12,780
you should have such a server available on your machine.

34
00:02:12,780 --> 00:02:24,000
Installing and configuring my sequel is beyond the scope off this module, but I guess that you're able to do that yourself.

