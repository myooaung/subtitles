WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.350 --> 00:00:07.320
We've now successfully searched the database for the hotel and we show it in our view.

00:00:07.320 --> 00:00:13.915
In the last video, we also added these two buttons to update and also delete the hotel.

00:00:13.915 --> 00:00:17.955
If we click on the ''Update Hotel'' button,

00:00:17.955 --> 00:00:22.910
we now pass the hotel ID in the URL as a parameter,

00:00:22.910 --> 00:00:25.705
just before forward slash updates.

00:00:25.705 --> 00:00:31.320
This is because we set this up in the hotel detail.profile.

00:00:31.320 --> 00:00:34.895
We set this up just here inside of our link.

00:00:34.895 --> 00:00:38.840
Having this unique hotel ID is how we're going to be

00:00:38.840 --> 00:00:43.835
selecting the hotel from the database we want to update or delete.

00:00:43.835 --> 00:00:49.060
First, we can handle the route in the index.js file.

00:00:49.060 --> 00:00:57.175
In our admin section on the edit remove, let's add router.get.

00:00:57.175 --> 00:01:00.315
In this video, we're going to be handling the updates.

00:01:00.315 --> 00:01:04.110
The route is forward slash admin forward slash.

00:01:04.110 --> 00:01:11.935
We want this section to be dynamic so we use a colon and give this ID a name of hotel ID.

00:01:11.935 --> 00:01:14.480
Then update.

00:01:14.480 --> 00:01:18.165
We want to run the hotel controller.

00:01:18.165 --> 00:01:22.630
Then create a function called Update hotel get.

00:01:23.600 --> 00:01:28.340
This will then display a form on a screen which will allow us to change

00:01:28.340 --> 00:01:34.464
the hotel details before creating a post request to actually submit these to database.

00:01:34.464 --> 00:01:36.840
Over in hotel controller,

00:01:36.840 --> 00:01:40.110
we create this update hotel gets.

00:01:40.110 --> 00:01:44.235
Let's go to the hotel controller.js.

00:01:44.235 --> 00:01:50.765
Down at the bottom, exports towards updates.

00:01:50.765 --> 00:01:54.365
Hotel gets, which is going to be a sink.

00:01:54.365 --> 00:01:57.365
Smart dysfunction with the a sync keyword,

00:01:57.365 --> 00:02:02.320
passing new request, the response and also next.

00:02:02.750 --> 00:02:05.490
We can add a try block.

00:02:05.490 --> 00:02:08.605
Then add a constant of hotel.

00:02:08.605 --> 00:02:14.480
This is going to add weight on the data when we go to the database and find one record.

00:02:14.480 --> 00:02:17.540
The one record we want to find is the hotel which

00:02:17.540 --> 00:02:21.045
is passed in as the parameter at the top here.

00:02:21.045 --> 00:02:25.985
Inside of the request object we'd use need.params.

00:02:25.985 --> 00:02:28.760
Awaits the hotel.

00:02:28.760 --> 00:02:34.105
Let's find one which will return one record which matches.

00:02:34.105 --> 00:02:37.975
We can match this with the _ID field.

00:02:37.975 --> 00:02:43.565
The ID we want to match is stored inside request.params.

00:02:43.565 --> 00:02:49.335
We named this if we go to index.js hotel ID.

00:02:49.335 --> 00:02:55.260
Request.params hotel ID.

00:02:55.260 --> 00:02:59.805
After this we then want to add our cache block just afterwards.

00:02:59.805 --> 00:03:09.900
To cache any errors pass this on to next for our middle ware, so next error.

00:03:09.900 --> 00:03:14.550
To check this is all working okay after our constant just here.

00:03:14.550 --> 00:03:19.985
I'm going to do res.json to see what data is returned back to us.

00:03:19.985 --> 00:03:22.410
We can then pass in this hotel which we are searching

00:03:22.410 --> 00:03:26.760
for and then go over to our project and then hit reload.

00:03:26.760 --> 00:03:30.160
Now, we can see we getting the details back from hotel full

00:03:30.160 --> 00:03:34.445
which is the ID which is passed in as a parameter in the URL.

00:03:34.445 --> 00:03:43.650
If we go back to our admin and search for a different hotel in Number 6.

00:03:43.650 --> 00:03:45.390
I'm going to update.

00:03:45.390 --> 00:03:49.320
We got the value of hotel 6 returned back to us.

00:03:49.320 --> 00:03:52.580
Now we know we're getting the correct information instead of this

00:03:52.580 --> 00:03:56.690
res.json we now want to render a page templates.

00:03:56.690 --> 00:04:01.475
The template I'm going to reuse is the add hotel templates.

00:04:01.475 --> 00:04:06.500
This is basically the form which has all the fields which we need for our hotel.

00:04:06.500 --> 00:04:11.005
We can go ahead and modify any of these and then update.

00:04:11.005 --> 00:04:16.725
Instead of the res.json changes to be res.render.

00:04:16.725 --> 00:04:21.280
Passing in our templates of add hotel.

00:04:21.320 --> 00:04:27.640
The page title of update hotel.

00:04:30.140 --> 00:04:36.400
Then finally we can also pass the data stored in our constants of hotel.

00:04:36.400 --> 00:04:41.060
Passes to our templates and give them a safe.

00:04:41.060 --> 00:04:45.330
Now, we go to the browser and then he Reload instead of the JSON

00:04:45.330 --> 00:04:49.465
we should now see our page now has a form is at the bottom.

00:04:49.465 --> 00:04:53.034
This form is going to be used to update the hotel.

00:04:53.034 --> 00:04:56.410
Inside of this form, something we ideally want to do is to

00:04:56.410 --> 00:04:59.965
have the data passed into all these fields already.

00:04:59.965 --> 00:05:03.555
For example, it should say hotel 6.

00:05:03.555 --> 00:05:07.830
We can go in and just modify the data which is there.

00:05:07.830 --> 00:05:12.310
We can use these values straightforward just before we do this,

00:05:12.310 --> 00:05:17.420
I'm going to put this form into a mixin to keep things organized.

00:05:17.420 --> 00:05:23.940
Over to the sidebar and then side the Views and Mixins,

00:05:23.940 --> 00:05:30.225
create a new file called underscore hotel underscore form.

00:05:30.225 --> 00:05:37.215
With the.org extension create our mixin name at the top just like we did before.

00:05:37.215 --> 00:05:45.765
Hotel form which is going to receive the hotel data as an argument.

00:05:45.765 --> 00:05:51.420
Then Hotel.org on the sidebar.

00:05:51.420 --> 00:05:58.250
This is the form which will now rendering for the updates and also the Add Hotel section.

00:05:58.250 --> 00:06:03.680
Then we can put this down from our form all the way right down to the bottom.

00:06:03.680 --> 00:06:08.520
Our full form section and save the file.

00:06:08.520 --> 00:06:14.710
Now go back into a mixin of hotel form and we can paste this in.

00:06:14.960 --> 00:06:20.210
If we go back up to the top and and then indented correctly, save that file.

00:06:20.210 --> 00:06:25.220
With mixin now setup we can now go back to add hotel.pug.

00:06:25.220 --> 00:06:29.020
Then include the mixin at the top of the file.

00:06:29.020 --> 00:06:38.235
Include the mixins which is a folder and the name of underscore hotel, underscore form.

00:06:38.235 --> 00:06:41.175
Remember we don't need the PAG extension.

00:06:41.175 --> 00:06:44.540
We can include this mixin anywhere in our file.

00:06:44.540 --> 00:06:47.255
I'm going to add my back end at the bottom.

00:06:47.255 --> 00:06:49.880
We plus hotel form.

00:06:49.880 --> 00:06:52.630
Person in the hotel data.

00:06:52.630 --> 00:06:56.070
If we now save this and test, it's working okay.

00:06:56.070 --> 00:06:59.070
I reload in, we still see the form is now on

00:06:59.070 --> 00:07:02.670
the screen but we've outsourced this to a mixin.

00:07:02.670 --> 00:07:05.285
Back to making these form fields,

00:07:05.285 --> 00:07:08.405
have the hotel data already populated.

00:07:08.405 --> 00:07:14.750
This can be added inside of the mixin that we just created to the hotel form.

00:07:14.750 --> 00:07:17.625
Lets go down to one of our fields to begin with.

00:07:17.625 --> 00:07:19.635
Let's start with the hotel name.

00:07:19.635 --> 00:07:23.520
The way we can do this to set the volume.

00:07:23.520 --> 00:07:27.120
Inside the inputs we can set the value equal to

00:07:27.120 --> 00:07:31.470
a hotel which we receive in as an argument here.

00:07:31.470 --> 00:07:37.210
Then the name we want is.hotel_name.

00:07:38.210 --> 00:07:42.735
Actually this is a string. We don't want to use the quotations.

00:07:42.735 --> 00:07:46.065
Now if we save this and then it reload our form.

00:07:46.065 --> 00:07:51.335
We now see the value of hotel 6 which is now being passed into our form.

00:07:51.335 --> 00:07:57.855
We can do the same with the other fields too. The description.

00:07:57.855 --> 00:08:03.945
Go into our text area because we say text area.

00:08:03.945 --> 00:08:06.015
We need do this a little differently.

00:08:06.015 --> 00:08:13.860
We need to set the text to be equal to hotel.hotel_description.

00:08:13.860 --> 00:08:17.425
Rather than using the volume attributes like we do in

00:08:17.425 --> 00:08:22.760
other inputs we can go down to the star rating.

00:08:24.120 --> 00:08:27.730
We did the image so we don't need this for now.

00:08:27.730 --> 00:08:32.020
The star rating takes you come back to the value

00:08:32.020 --> 00:08:40.580
of hotel.star_rating. The country.

00:08:42.780 --> 00:08:51.355
Hotel, country, the cost per night.

00:08:51.355 --> 00:08:54.880
Again after required value is going to be equal to

00:08:54.880 --> 00:09:01.640
hotel dot cost per night using underscores.

00:09:03.120 --> 00:09:06.730
Save this and then check this out in the browser.

00:09:06.730 --> 00:09:13.750
Reload. Great, this now makes updating the information for a hotel so much easier.

00:09:13.750 --> 00:09:16.915
Next, we need to set up the post request to actually

00:09:16.915 --> 00:09:20.735
handle the updates when we click on Confirm button.

00:09:20.735 --> 00:09:25.965
Pass over to the router, which is inside of the index dot js.

00:09:25.965 --> 00:09:27.720
Let's close these down,

00:09:27.720 --> 00:09:34.315
open up the index dot js duplicates over get request for updates.

00:09:34.315 --> 00:09:38.590
But this time, changes to be post and

00:09:38.590 --> 00:09:44.050
then the hotel controller is going to be update hotel post.

00:09:44.050 --> 00:09:48.230
Then create this over in the hotel controller.

00:09:49.460 --> 00:09:55.325
Exports dot updates hotel post.

00:09:55.325 --> 00:10:00.270
This is going to be in a sync function with

00:10:00.270 --> 00:10:05.810
the request and the response objects all the way next for the middleware.

00:10:05.810 --> 00:10:08.600
Setup our function.

00:10:09.060 --> 00:10:12.145
We can begin with the error handling.

00:10:12.145 --> 00:10:15.445
Try and also a catch block,

00:10:15.445 --> 00:10:17.800
checking in the errors.

00:10:17.800 --> 00:10:21.650
Then passes to one middleware with next.

00:10:22.320 --> 00:10:26.410
There we go. Inside of our try block,

00:10:26.410 --> 00:10:29.500
the first thing I want to do is settle by constant.

00:10:29.500 --> 00:10:34.480
This is going to be to store the hotel Id which has been passed to us.

00:10:34.480 --> 00:10:40.765
This hotel Id number is available as a parameter which we have just here.

00:10:40.765 --> 00:10:43.490
Let set this up now,

00:10:44.280 --> 00:10:49.450
const hotel Id is equal to request

00:10:49.450 --> 00:10:56.125
dot params dot hotel Id capital I.

00:10:56.125 --> 00:10:59.245
Then a second constant of hotel,

00:10:59.245 --> 00:11:05.005
which is going to be equal to await hotel, which is our model.

00:11:05.005 --> 00:11:09.595
This time we're going to be using a method called find by Id and

00:11:09.595 --> 00:11:18.100
update or a common case or find by Id and update.

00:11:18.180 --> 00:11:23.830
This is a Mongo method which we can use to then pass in the hotel Id,

00:11:23.830 --> 00:11:25.915
which we have star just here.

00:11:25.915 --> 00:11:32.590
We can then obtain the record inside Mongo and then return back towards the new details.

00:11:32.590 --> 00:11:35.995
First of all, the first arguments which we're going to add,

00:11:35.995 --> 00:11:39.280
this is variable of hotel Id.

00:11:39.280 --> 00:11:42.835
This first argument is the idea of the record,

00:11:42.835 --> 00:11:45.730
which we want to find inside of our database,

00:11:45.730 --> 00:11:47.380
separated by a comma.

00:11:47.380 --> 00:11:52.120
The second parameter is the data we want to use to update it with.

00:11:52.120 --> 00:11:56.590
This data can be found inside of the request, the body.

00:11:56.590 --> 00:12:02.530
We also use requester body when originally created the hotel, which is just above.

00:12:02.530 --> 00:12:06.205
If will go up to create hotel post,

00:12:06.205 --> 00:12:10.540
which was a function we originally used to setup a new hotel.

00:12:10.540 --> 00:12:14.110
Remember inside here we created a new hotel using

00:12:14.110 --> 00:12:18.010
information from the request object stored inside the body.

00:12:18.010 --> 00:12:20.995
This is the data which is passed in from the form.

00:12:20.995 --> 00:12:24.130
We're going to be using the same data down below.

00:12:24.130 --> 00:12:26.575
But this time, rather than creating a hotel,

00:12:26.575 --> 00:12:28.930
we'll be using it to update.

00:12:28.930 --> 00:12:30.745
The third parameter.

00:12:30.745 --> 00:12:33.580
Finally, I'm going to add a options objects,

00:12:33.580 --> 00:12:40.765
so separated by comma at an objects and we can set new to be true.

00:12:40.765 --> 00:12:43.915
By default, after updating,

00:12:43.915 --> 00:12:47.830
we will still get the original record returned back to us.

00:12:47.830 --> 00:12:52.030
If we go ahead and set new to be true is we'll make sure we get back

00:12:52.030 --> 00:12:56.380
the modified or the updated version to show in our app.

00:12:56.380 --> 00:12:58.495
Then over to the browser.

00:12:58.495 --> 00:13:00.895
We can now make a change.

00:13:00.895 --> 00:13:06.669
Let's call this the hotel 66, it confirm.

00:13:07.290 --> 00:13:12.385
We don't see anything on the screen because we're not setup what's doing next.

00:13:12.385 --> 00:13:16.580
But instead, if we go over to mLab and then refresh.

00:13:17.880 --> 00:13:23.860
Now we can see we have the hotel 66 inside of our records.

00:13:23.860 --> 00:13:25.830
Back to our project.

00:13:25.830 --> 00:13:28.575
We can see this is still spinning in the corner.

00:13:28.575 --> 00:13:31.530
Ravenous browse hung and we're going to do a rest or

00:13:31.530 --> 00:13:34.950
redirect to then redirect this to the route,

00:13:34.950 --> 00:13:36.800
which won't handle this.

00:13:36.800 --> 00:13:39.895
After our constant of hotel,

00:13:39.895 --> 00:13:43.940
let's do a rest dot redirect.

00:13:43.940 --> 00:13:47.490
Inside the back ticks we can add all slash

00:13:47.490 --> 00:13:52.325
all and then forward slash the Id of the hotel.

00:13:52.325 --> 00:13:55.255
We have this stored inside of this variable here.

00:13:55.255 --> 00:14:01.040
We can paste this in, save this, and then reload.

00:14:01.560 --> 00:14:06.490
Our post requests is now updated database and also redirected us

00:14:06.490 --> 00:14:11.500
to forward slash all and then forward slash the Id of the hotel.

00:14:11.500 --> 00:14:13.930
Down at the bottom, we see we haven't set up

00:14:13.930 --> 00:14:17.260
this route just yet and this is why we see an error.

00:14:17.260 --> 00:14:21.025
But the hotel is still updating inside the mLab.

00:14:21.025 --> 00:14:23.560
We'll handle this route later on.

00:14:23.560 --> 00:14:27.280
This same route is also needed when we click on Hotel.

00:14:27.280 --> 00:14:31.090
If you go to the homepage by clicking the logo,

00:14:31.090 --> 00:14:34.345
and then click on any of these hotels.

00:14:34.345 --> 00:14:36.114
See the full detail.

00:14:36.114 --> 00:14:40.600
This takes us to the same route which is forward slash all and then the hotel

00:14:40.600 --> 00:14:43.870
Id and of course we've got the message of not

00:14:43.870 --> 00:14:47.605
found because we are not yet created this in the browser.

00:14:47.605 --> 00:14:49.210
Before we leave this video there,

00:14:49.210 --> 00:14:54.655
let's try one more updates on a different hotel to make sure everything is working okay.

00:14:54.655 --> 00:15:02.710
Back to the Admin, so forward slash admin, Edits and Remove.

00:15:02.710 --> 00:15:09.685
We can go for hotel number 12, Confirm.

00:15:09.685 --> 00:15:17.920
There's hotel 12, click on the Update button and changes to be hotel 122,

00:15:17.920 --> 00:15:22.195
Confirm with the mLab.

00:15:22.195 --> 00:15:24.910
Let's scroll up and down so you can see these reports,

00:15:24.910 --> 00:15:27.310
our normal hotels there.

00:15:27.310 --> 00:15:30.200
Go to the next page.

00:15:31.530 --> 00:15:35.350
There's our updated hotel name just there.

00:15:35.350 --> 00:15:39.490
I'm quickly going to just reinstate these back to how the were.

00:15:39.490 --> 00:15:43.630
Hotel 12, Confirm this.

00:15:43.630 --> 00:15:46.450
Then we can go back to Admin,

00:15:46.450 --> 00:15:50.875
just forward slash admin inside the URL.

00:15:50.875 --> 00:15:55.030
We can go also to hotel 66,

00:15:55.030 --> 00:15:58.315
which is the first one which we edited.

00:15:58.315 --> 00:16:01.405
We can see we've not added an image for this.

00:16:01.405 --> 00:16:10.105
Let's go to update changes back to hotel six at the hotel six image.

00:16:10.105 --> 00:16:13.075
Then update this in the database.

00:16:13.075 --> 00:16:15.880
This is all our updates now working fine.

00:16:15.880 --> 00:16:18.940
Before we move on now this one small thing we need to

00:16:18.940 --> 00:16:23.360
fix only if we go over to the Admin.

00:16:23.760 --> 00:16:27.205
Then if we go to Edit and Remove,

00:16:27.205 --> 00:16:29.870
search for a hotel,

00:16:30.030 --> 00:16:34.735
click Confirm and then to Update.

00:16:34.735 --> 00:16:38.320
Currently we have all the fields inside here or

00:16:38.320 --> 00:16:42.475
repopulated and this works really well when updating the hotel.

00:16:42.475 --> 00:16:48.010
However person in this data will create an issue when we're adding a new hotel.

00:16:48.010 --> 00:16:54.535
Let's just quickly add the hotel 12 image back in and then Confirm.

00:16:54.535 --> 00:16:58.990
Then if we go to Admin and then forward slash add.

00:16:58.990 --> 00:17:01.510
Remember, forward slash adds uses

00:17:01.510 --> 00:17:06.055
the same templates of the same form as we used to update the hotel.

00:17:06.055 --> 00:17:09.715
But we can see inside of the template that we have an error.

00:17:09.715 --> 00:17:16.075
These errors are caused because inside of the form we access in the hotel data.

00:17:16.075 --> 00:17:20.155
Go to a mixin and here we're accessing hotel,

00:17:20.155 --> 00:17:23.110
which is passed in a pile of options here.

00:17:23.110 --> 00:17:27.830
Basically this form is expecting to receive the hotel data.

00:17:27.830 --> 00:17:34.230
However, if we go to the hotel controller and then if we go to update hotel get.

00:17:34.230 --> 00:17:37.950
Here, we presented the hotel data which it needs.

00:17:37.950 --> 00:17:41.735
But if you scroll up to where we created the hotel,

00:17:41.735 --> 00:17:45.755
which is in create hotel get just here.

00:17:45.755 --> 00:17:49.415
This is also using the same add hotel form.

00:17:49.415 --> 00:17:52.715
However, we don't pass in any hotel info,

00:17:52.715 --> 00:17:55.975
and in fact we have no reason to.

00:17:55.975 --> 00:18:00.800
One way around this is over in the hotel form mixin.

00:18:00.800 --> 00:18:03.305
Underscore hotel, underscore form,

00:18:03.305 --> 00:18:08.430
we can go ahead and initially set hotel to be an empty object.

00:18:08.430 --> 00:18:15.940
Hotel is equal to an empty object and then save this and reload.

00:18:15.940 --> 00:18:18.680
Now we can see when we add a new hotel,

00:18:18.680 --> 00:18:21.620
we now have this form back on the screen.

00:18:21.620 --> 00:18:25.490
Adding hotel to be in an empty object this way will make

00:18:25.490 --> 00:18:29.810
the template aware of the hotel name and you will know if there's an error.

00:18:29.810 --> 00:18:34.740
But since it's an empty object it won't interfere with our fields.

00:18:34.740 --> 00:18:39.270
Great, the main objective in this video was to successfully

00:18:39.270 --> 00:18:43.750
update the hotels in our database and we now have this working.

00:18:43.750 --> 00:18:47.065
Next, we'll be covering another important task too

00:18:47.065 --> 00:18:51.930
and this is to be able to delete records from our database.
