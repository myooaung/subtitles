WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.730 --> 00:00:05.520
For this project, we're going to be taking advantage of

00:00:05.520 --> 00:00:09.045
a lightweight framework for Node called Express.

00:00:09.045 --> 00:00:12.975
Express is a really popular framework in the Node community,

00:00:12.975 --> 00:00:16.950
and it's the ideal platform for us to begin our project.

00:00:16.950 --> 00:00:21.225
Over in the homepage which is expressjs.com,

00:00:21.225 --> 00:00:22.714
we can see this homepage,

00:00:22.714 --> 00:00:24.245
as it says here, is a fast,

00:00:24.245 --> 00:00:29.285
and unopinionated, and minimalist framework for Node.js.

00:00:29.285 --> 00:00:33.125
This means it does not assume how our project will be.

00:00:33.125 --> 00:00:36.830
We are free to basically take advantage of what Express

00:00:36.830 --> 00:00:41.165
provides without having to adhere to a lot of strict rules,

00:00:41.165 --> 00:00:44.230
which a lot of other frameworks force upon us.

00:00:44.230 --> 00:00:49.445
It's minimalist, which means it provides the base features we'll almost certainly need,

00:00:49.445 --> 00:00:51.125
such as a web server,

00:00:51.125 --> 00:00:53.510
route end to switch between pages,

00:00:53.510 --> 00:00:56.170
error handling and templating,

00:00:56.170 --> 00:01:02.660
boost any extra functionality is up to boost the ads by using the node package manager,

00:01:02.660 --> 00:01:04.340
which we looked at before.

00:01:04.340 --> 00:01:09.355
Express provides a web server which we can use to serve our pages,

00:01:09.355 --> 00:01:12.520
and this also serves them to all browser with

00:01:12.520 --> 00:01:16.685
the dynamic content just like we looked at in the last video.

00:01:16.685 --> 00:01:19.260
Even installed in Express 2,

00:01:19.260 --> 00:01:21.885
is done as an npm module.

00:01:21.885 --> 00:01:27.830
As we see down here, we have the terminal code to set the server as a node module,

00:01:27.830 --> 00:01:30.405
so we can set things up manually,

00:01:30.405 --> 00:01:33.190
or Express also provides a generator.

00:01:33.190 --> 00:01:35.375
We have everything we need to get going.

00:01:35.375 --> 00:01:39.055
If we go to the menu and Getting started,

00:01:39.055 --> 00:01:43.430
hover over this and then we can click on the Express generator.

00:01:43.430 --> 00:01:46.395
We need to install this via npm,

00:01:46.395 --> 00:01:49.675
so I'm going to head over to the terminal to install.

00:01:49.675 --> 00:01:54.145
Windows users can open up the PowerShell program for the stage,

00:01:54.145 --> 00:01:57.530
or any other program which you may prefer.

00:01:57.530 --> 00:02:05.230
I'm going to open up iTerm and make us a little bit bigger.

00:02:05.750 --> 00:02:11.635
Before we continue, we need to make sure Node and npm is correctly installed.

00:02:11.635 --> 00:02:16.870
We can do this by typing inside of the terminal or inside a PowerShell.

00:02:16.870 --> 00:02:19.810
We can check Node is correctly installed by typing

00:02:19.810 --> 00:02:24.315
node -v. If we see a version number here,

00:02:24.315 --> 00:02:26.490
it means the Node is correctly installed.

00:02:26.490 --> 00:02:31.745
We can do the same with npm -v. Again,

00:02:31.745 --> 00:02:33.880
if we have a version number appearing,

00:02:33.880 --> 00:02:37.260
this means that node and npm is correctly installed.

00:02:37.260 --> 00:02:40.440
If you don't see the version number or you have an error,

00:02:40.440 --> 00:02:43.385
do make sure to go ahead and re-install Node,

00:02:43.385 --> 00:02:46.130
and make sure this is in place before moving on.

00:02:46.130 --> 00:02:50.710
We can then go ahead and install the Express generator using npm.

00:02:50.710 --> 00:02:58.940
So type in npm install exepress-generator,

00:02:59.610 --> 00:03:03.005
and then dash g at the end.

00:03:03.005 --> 00:03:08.965
Mac users may also need to add the sudo keyword before if you hit an error.

00:03:08.965 --> 00:03:12.910
Just before this, we need to add sudo and then "Enter",

00:03:12.910 --> 00:03:17.580
and this will then prompt us for the password, then hit "Enter".

00:03:17.580 --> 00:03:23.130
Now is, we'll go ahead and download the Express generator from npm.

00:03:23.130 --> 00:03:27.015
The dash g flag which we add at the end of here,

00:03:27.015 --> 00:03:29.325
will install this package globally.

00:03:29.325 --> 00:03:31.850
This means it can be used in any project,

00:03:31.850 --> 00:03:34.330
not just the one we are creating.

00:03:34.330 --> 00:03:38.435
Now we need to navigate to where we want to create our projects.

00:03:38.435 --> 00:03:41.480
I'm going to be adding mine to the desktop.

00:03:41.480 --> 00:03:45.380
At present, I am in my current user directory,

00:03:45.380 --> 00:03:49.970
so I'm going to use cd to change the directory to the Desktop.

00:03:49.970 --> 00:03:53.800
Hit "Enter" and now we can see we're inside of the desktop.

00:03:53.800 --> 00:03:57.740
Of course, you can change it to be any location which you prefer,

00:03:57.740 --> 00:04:01.415
I'm just keeping mine on the desktop for ease of access.

00:04:01.415 --> 00:04:04.325
Now to create a new project in this directory,

00:04:04.325 --> 00:04:06.260
we can run this command.

00:04:06.260 --> 00:04:10.280
So express followed by the name of our project,

00:04:10.280 --> 00:04:13.260
I'm going to call mine lets-travel,

00:04:13.960 --> 00:04:19.810
and then dash dash view is equal to pug,

00:04:19.810 --> 00:04:23.840
hit "Enter" and let us go ahead and create our projects,

00:04:23.840 --> 00:04:28.670
which is also using the pug templating language, which we'll cover soon.

00:04:28.670 --> 00:04:31.115
If we scroll up inside the terminal,

00:04:31.115 --> 00:04:35.090
we can see a list of files and folders which have been created for us,

00:04:35.090 --> 00:04:38.650
and also some instructions on how to get started.

00:04:38.650 --> 00:04:42.985
I'm going to be using Visual Studio's built-in terminal from now.

00:04:42.985 --> 00:04:46.670
I also recommend you do this too throughout this course.

00:04:46.670 --> 00:04:50.405
If you prefer, you can keep on going in a separate terminal,

00:04:50.405 --> 00:04:52.580
but you will need to go ahead and first

00:04:52.580 --> 00:04:56.285
change into the current directory for the project.

00:04:56.285 --> 00:05:01.010
Then you would need to run npm install to get all the dependencies,

00:05:01.010 --> 00:05:05.135
and then start the application with these commands down at the bottom.

00:05:05.135 --> 00:05:08.210
If you are following along in Visual Studio Code,

00:05:08.210 --> 00:05:10.970
we can now close down the terminal,

00:05:10.970 --> 00:05:16.310
the browser, open up Visual Studio Code,

00:05:17.980 --> 00:05:22.050
and then drag inside our project folder.

00:05:24.770 --> 00:05:28.325
We can open up Visual Studio as built-in terminal,

00:05:28.325 --> 00:05:30.935
by going up to View in a sub menu,

00:05:30.935 --> 00:05:34.030
and then go down to Integrated Terminal.

00:05:34.030 --> 00:05:37.700
This will then open up the terminal down at the bottom,

00:05:37.700 --> 00:05:39.760
listed are our terminal commands.

00:05:39.760 --> 00:05:43.159
This also has the benefit of having our directory

00:05:43.159 --> 00:05:47.000
automatically setup to the column project folder on the desktop.

00:05:47.000 --> 00:05:51.335
We don't need to navigate to where our folder is located.

00:05:51.335 --> 00:05:54.170
We're going to take a better look around all of

00:05:54.170 --> 00:05:56.540
these files and folders soon, but for now,

00:05:56.540 --> 00:06:01.890
if we open up the package.json and then close the sidebar,

00:06:01.890 --> 00:06:04.955
inside here we see some dependencies,

00:06:04.955 --> 00:06:08.465
which inside of this dependencies object just here,

00:06:08.465 --> 00:06:11.045
which are needed for this project.

00:06:11.045 --> 00:06:17.255
These dependencies are node modules which you can install using npm install.

00:06:17.255 --> 00:06:21.814
Down in the terminal, run npm install,

00:06:21.814 --> 00:06:24.780
hit "Enter" and then give,

00:06:24.780 --> 00:06:30.530
say a few moments to run through and pulling all the packages we need from npm.

00:06:30.530 --> 00:06:36.680
npm install will grab everything we need listed inside of this package.json,

00:06:36.680 --> 00:06:41.320
and then place them inside of our projects in a node modules folder.

00:06:41.320 --> 00:06:43.780
Also, when we add more modules later,

00:06:43.780 --> 00:06:46.705
again we will use this npm install command,

00:06:46.705 --> 00:06:49.960
but followed by the module name we want to install.

00:06:49.960 --> 00:06:51.760
Great. Once this is done,

00:06:51.760 --> 00:06:54.385
this should now be a node_modules folder.

00:06:54.385 --> 00:06:56.200
If we open up the sidebar,

00:06:56.200 --> 00:06:57.885
if we open this up,

00:06:57.885 --> 00:06:59.315
we just got a drop-down,

00:06:59.315 --> 00:07:02.755
we see listed everything which we're using for this project.

00:07:02.755 --> 00:07:06.265
It will have things such as a debug module.

00:07:06.265 --> 00:07:09.485
We also have express which is just here,

00:07:09.485 --> 00:07:15.075
and also pug, our templating engine amongst others which we'll also use.

00:07:15.075 --> 00:07:17.060
Now all that is left to do,

00:07:17.060 --> 00:07:21.745
is start up our web server and open it up inside the browser.

00:07:21.745 --> 00:07:24.710
Still inside this package.json file,

00:07:24.710 --> 00:07:29.935
up at the top we have something called start inside of our scripts.

00:07:29.935 --> 00:07:33.290
We can use start script inside the terminal,

00:07:33.290 --> 00:07:38.135
to then go ahead and kickstart our application so we can view it in the browser.

00:07:38.135 --> 00:07:40.205
Down inside the terminal,

00:07:40.205 --> 00:07:42.820
let's run npm start,

00:07:42.820 --> 00:07:51.380
hit "Enter" and then open up the web browser, which you want to use.

00:07:51.380 --> 00:07:57.705
Navigate to localhost, colon 3000,

00:07:57.705 --> 00:08:03.255
hit "Enter" and now we can see our basic Express up is now running.

00:08:03.255 --> 00:08:08.355
But how do we know it's port 3000 which node is running on?

00:08:08.355 --> 00:08:12.020
Well, if we go over to the package.json,

00:08:12.020 --> 00:08:18.070
the start command has a file path of bin, forward slash, www.

00:08:18.070 --> 00:08:21.785
If we open up this file inside the same bar,

00:08:21.785 --> 00:08:26.635
inside of this file is a variable which is set to port 3000.

00:08:26.635 --> 00:08:29.105
Here we have a variable called port,

00:08:29.105 --> 00:08:31.775
which is set to be port 3000.

00:08:31.775 --> 00:08:35.660
Also, if you happen to use port 3000 for anything else,

00:08:35.660 --> 00:08:40.775
you can also change this number to be something different, such as 3001.

00:08:40.775 --> 00:08:45.620
Its file structure and setup is a little different to what we've used so far.

00:08:45.620 --> 00:08:48.980
In the next video, we'll take a better look at what we have

00:08:48.980 --> 00:08:53.130
here in our Express Generator project.
