WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:05.505
In this video, we're going to make some improvements to the user experience.

00:00:05.505 --> 00:00:07.740
Will be doing various things such as

00:00:07.740 --> 00:00:11.640
conditional rendering to change the nerve links depending on the

00:00:11.640 --> 00:00:17.910
user's logged in states also will be displaying the username inside the header,

00:00:17.910 --> 00:00:20.520
and protecting the admin routes.

00:00:20.520 --> 00:00:25.140
To begin, we can add some more locals to all middleware over in the

00:00:25.140 --> 00:00:31.395
app.js file and then scroll down to our customer middleware.

00:00:31.395 --> 00:00:35.115
So which is just this function just here.

00:00:35.115 --> 00:00:38.240
I'm going to add one more just like this.

00:00:38.240 --> 00:00:40.420
This is for the user.

00:00:40.420 --> 00:00:44.675
So inside here, we need a common edge on here.

00:00:44.675 --> 00:00:48.900
So say res.locals.user,

00:00:50.200 --> 00:00:57.125
is going to be equal to the request dot user and there should be semi-colons at the end.

00:00:57.125 --> 00:00:59.830
So should quickly change this.

00:00:59.830 --> 00:01:04.100
So the user is added to the request object by passport.

00:01:04.100 --> 00:01:07.085
When a user has successfully logged in.

00:01:07.085 --> 00:01:10.310
We can now use this user variable inside

00:01:10.310 --> 00:01:14.170
of templates to apply some conditional rendering.

00:01:14.170 --> 00:01:16.940
Currently if we go over to a menu,

00:01:16.940 --> 00:01:22.805
we have sign-up, have login and also log out showing at the same time.

00:01:22.805 --> 00:01:29.210
We only want to show the sign-up and login buttons when the user has not signed in.

00:01:29.210 --> 00:01:31.190
So over to our layout,

00:01:31.190 --> 00:01:35.730
a PRG, and then go to our nerve section about the top here.

00:01:35.730 --> 00:01:41.840
We are going to add some conditional rendering to only display if the user is logged in.

00:01:41.840 --> 00:01:45.395
So just below the logo on the unordered list,

00:01:45.395 --> 00:01:47.390
indented in one level,

00:01:47.390 --> 00:01:51.845
we can say if you use is false,

00:01:51.845 --> 00:01:58.170
we're going to indent in this list item for signup, and also login.

00:01:58.540 --> 00:02:03.570
These two buttons will only display if the user is not logged in.

00:02:03.570 --> 00:02:07.790
Else will show the logout button when the user is logged in.

00:02:07.790 --> 00:02:12.410
So to do this, we can also enhance the logout section in one level.

00:02:12.410 --> 00:02:18.080
Then we can add the else section which lines up with the if section just above.

00:02:18.080 --> 00:02:23.240
Also, since we have access to this use of variable which you just see here,

00:02:23.240 --> 00:02:26.795
we can also display to the menu, the user name.

00:02:26.795 --> 00:02:28.639
We just have to logout,

00:02:28.639 --> 00:02:34.640
we can ask the brackets and then use the hash two outputs, some dynamic data.

00:02:34.640 --> 00:02:36.980
So open up the curly braces.

00:02:36.980 --> 00:02:41.045
Now we can access user dot first name.

00:02:41.045 --> 00:02:47.910
So it gives us a save and trying to sounds in the browser. So reload.

00:02:48.800 --> 00:02:53.390
Currently we want to see the sign up button and the login.

00:02:53.390 --> 00:02:56.040
Let's try login in.

00:02:57.470 --> 00:03:05.160
I'm going to see what happens if we add our details in down the bottom. It Login.

00:03:05.160 --> 00:03:08.630
Great, so now we only see the logout button

00:03:08.630 --> 00:03:12.380
and also our name is now displayed next to this.

00:03:12.380 --> 00:03:15.880
Let's try clicking this and login out.

00:03:15.880 --> 00:03:18.825
We now get the flash message on here.

00:03:18.825 --> 00:03:23.110
We also now only see the sign-up and login buttons.

00:03:23.110 --> 00:03:28.460
Now on to protecting the admin routes from unauthorized uses.

00:03:28.460 --> 00:03:32.240
To do this, I'm going to create a piece of middleware to

00:03:32.240 --> 00:03:35.975
burn through where we need to check if the user is an admin.

00:03:35.975 --> 00:03:40.580
We can do this over in the use of controller.js,

00:03:40.580 --> 00:03:43.715
and down the bottom just blow our logo function.

00:03:43.715 --> 00:03:45.680
We can add exports.admin.

00:03:45.680 --> 00:03:54.180
This is going to be a function taking the request, the response.

00:03:54.560 --> 00:04:02.945
Also next, inside here we're going to perform two checks.

00:04:02.945 --> 00:04:06.830
First is to use a method called is authenticated.

00:04:06.830 --> 00:04:13.080
So I'm going to say if request dot is authenticated,

00:04:14.960 --> 00:04:18.495
then it'll curly braces just afterwards.

00:04:18.495 --> 00:04:22.250
Then second is to check if the user is an admin.

00:04:22.250 --> 00:04:28.655
Early when we created the user model in the users.js. Let's open this up.

00:04:28.655 --> 00:04:31.730
We added the is admin fields,

00:04:31.730 --> 00:04:35.240
which is a default Boolean type of false.

00:04:35.240 --> 00:04:37.340
I'm also going to use this in the,

00:04:37.340 --> 00:04:42.410
if statement to only allow free users who is set to true.

00:04:42.410 --> 00:04:47.435
So news controller, as well as checking if the user is authenticated.

00:04:47.435 --> 00:04:49.850
We can also use the double ampersand.

00:04:49.850 --> 00:04:57.390
It's also check if the condition of request.user.admin is set to true.

00:04:57.430 --> 00:05:01.145
This will be a piece of middleware, it's pass-through.

00:05:01.145 --> 00:05:04.025
So we also need to call next.

00:05:04.025 --> 00:05:08.465
So first of all, add next inside here,

00:05:08.465 --> 00:05:11.590
which will move on to the admin page.

00:05:11.590 --> 00:05:14.930
Then the return keyword after this,

00:05:14.930 --> 00:05:18.995
this return keyword will break out the function if this is true.

00:05:18.995 --> 00:05:21.515
If this condition is not met however,

00:05:21.515 --> 00:05:25.039
we can just redirect the user back to the homepage.

00:05:25.039 --> 00:05:30.240
Outside if statements, we can ask the res.redirects.

00:05:30.240 --> 00:05:35.780
Then as a string just forward slash to go back to the homepage.

00:05:35.780 --> 00:05:39.215
Now over in the index.js file,

00:05:39.215 --> 00:05:42.800
we can and this middleware to our admin routes.

00:05:42.800 --> 00:05:46.120
So index.js.

00:05:46.120 --> 00:05:49.400
If we find our admin section,

00:05:49.400 --> 00:05:52.000
these are Admin routes here.

00:05:52.000 --> 00:05:55.910
The first one we want to protect is simply forward slash Admin.

00:05:55.910 --> 00:05:58.880
So before we take them to the admin page,

00:05:58.880 --> 00:06:02.839
will also going to run through these E's Admin function,

00:06:02.839 --> 00:06:06.025
which is also in the use controller.

00:06:06.025 --> 00:06:12.650
So use controller dot is admin and separate these with a comma.

00:06:12.650 --> 00:06:16.850
Then I'm also going to add a second route 2

00:06:16.850 --> 00:06:21.065
which will catch all of the routes beginning with a forward slash admin,

00:06:21.065 --> 00:06:24.890
and then forward slash any other route just afterwards.

00:06:24.890 --> 00:06:28.535
So I'll show you what I mean with this weird router.

00:06:28.535 --> 00:06:34.185
Dot gets to be a control rounds.

00:06:34.185 --> 00:06:37.490
So for such admin and then forward slash,

00:06:37.490 --> 00:06:38.885
we're going to use the star.

00:06:38.885 --> 00:06:42.710
So this will catch all routes which start with forward slash admin,

00:06:42.710 --> 00:06:45.730
and then any of the stuff afterwards.

00:06:45.730 --> 00:06:48.915
So then we're going to run through use

00:06:48.915 --> 00:06:55.110
controller.isAdmin before they proceed with any of these extra routes.

00:06:55.270 --> 00:07:00.020
Now over to the browser to test designs on the admirals.

00:07:00.020 --> 00:07:03.245
So both the browser and reload.

00:07:03.245 --> 00:07:08.480
We can see by all menu items that we're currently not logged in.

00:07:08.480 --> 00:07:11.670
Let's try forward/Admin.

00:07:11.720 --> 00:07:16.020
We then redirected back to the homepage.

00:07:16.020 --> 00:07:18.850
So let's try and login in.

00:07:24.950 --> 00:07:30.220
Now we log in with forward slash or /admin once again.

00:07:30.220 --> 00:07:34.805
Once again, we are redirected back to the homepage.

00:07:34.805 --> 00:07:37.130
So for both of these cases,

00:07:37.130 --> 00:07:38.750
we directed back here,

00:07:38.750 --> 00:07:41.615
meaning the authentication has failed.

00:07:41.615 --> 00:07:43.490
As you may have already guessed,

00:07:43.490 --> 00:07:49.730
this is because we set ourselves as a user and is admin is set to be false.

00:07:49.730 --> 00:07:52.055
Over in mLab.

00:07:52.055 --> 00:07:54.870
Maybe it's low back in.

00:07:55.040 --> 00:08:02.980
Yes, there's not the username and password and login.

00:08:02.980 --> 00:08:07.155
We can now select our user from mLab,

00:08:07.155 --> 00:08:10.660
and then it set admin to be true.

00:08:11.240 --> 00:08:14.400
Click on our database.

00:08:14.400 --> 00:08:18.040
We need the user's collection.

00:08:20.570 --> 00:08:24.015
Click on the Edit icon.

00:08:24.015 --> 00:08:27.965
So here we can see is admin is set to false.

00:08:27.965 --> 00:08:30.335
We can change this to be true.

00:08:30.335 --> 00:08:33.450
Click on Save and go back.

00:08:35.300 --> 00:08:39.230
This going into database is not something we want to

00:08:39.230 --> 00:08:42.785
be doing each time we want to create a new admin.

00:08:42.785 --> 00:08:46.610
But once we have one admin sets, like we do now,

00:08:46.610 --> 00:08:51.035
a good challenge for you would be to go ahead and create something from the admin screen,

00:08:51.035 --> 00:08:55.630
to be able to change the setting for adding new admin users.

00:08:55.630 --> 00:08:59.630
So now bar codes the project while we are still logged in.

00:08:59.630 --> 00:09:04.300
Let's go back to the admin routes forward/admin.

00:09:04.300 --> 00:09:07.095
Now have isAdmin set to true.

00:09:07.095 --> 00:09:11.935
We can see we no longer redirected and we'll stay on this admin routes.

00:09:11.935 --> 00:09:15.640
Now if we try clicking log out,

00:09:16.040 --> 00:09:19.894
we're then redirected back to the homepage.

00:09:19.894 --> 00:09:24.005
Remember we also added this catch all routes with the star.

00:09:24.005 --> 00:09:26.390
Let's try some different routes here.

00:09:26.390 --> 00:09:29.140
So admin, forward/ adds.

00:09:29.140 --> 00:09:31.820
We are currently taken back to the homepage.

00:09:31.820 --> 00:09:35.550
Let's try logging in, and test this again.

00:09:36.370 --> 00:09:39.545
Login as our admin.

00:09:39.545 --> 00:09:43.880
Now we can try forward/admin.

00:09:43.880 --> 00:09:46.885
Obviously, it will go to this, which is good.

00:09:46.885 --> 00:09:49.610
Once more we'll try login out.

00:09:49.610 --> 00:09:53.530
Now we're redirected back to the homepage.
