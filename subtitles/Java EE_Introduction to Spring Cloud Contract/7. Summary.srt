1
00:00:02,040 --> 00:00:06,340
[Autogenerated] So let's recap what we've covered so far in this module.

2
00:00:06,340 --> 00:00:10,170
Micro services come with many benefits such a smaller,

3
00:00:10,170 --> 00:00:15,940
more maintainable co basis on the ability to deliver software more rapidly.

4
00:00:15,940 --> 00:00:18,930
However, they can present new challenges,

5
00:00:18,930 --> 00:00:23,390
particularly in the area of testing and to end testing.

6
00:00:23,390 --> 00:00:26,490
Micro services can be slow and flaky,

7
00:00:26,490 --> 00:00:29,900
and it's hard to diagnose values due to the network hops

8
00:00:29,900 --> 00:00:32,880
of traffic for out the system mark.

9
00:00:32,880 --> 00:00:35,280
You know, stubbing dependencies is quicker,

10
00:00:35,280 --> 00:00:40,480
but those marks and stops can easily become stale and give false positives.

11
00:00:40,480 --> 00:00:43,270
And when everything's put together in the pipeline,

12
00:00:43,270 --> 00:00:46,000
the feedback we get isn't really good enough,

13
00:00:46,000 --> 00:00:50,290
meaning that it can take too long to release a micro service.

14
00:00:50,290 --> 00:00:51,880
And, most importantly,

15
00:00:51,880 --> 00:00:56,670
thes problems at a motivation for spring cloud contract in

16
00:00:56,670 --> 00:00:59,910
the next module will be learning about the consumer driven

17
00:00:59,910 --> 00:01:04,890
contract testing technique, the technique spring cloud contracts implements.

18
00:01:04,890 --> 00:01:08,070
This will help set the remaining context for the course,

19
00:01:08,070 --> 00:01:15,000
after which will start using spring cloud contract to build a real Marcus services application

