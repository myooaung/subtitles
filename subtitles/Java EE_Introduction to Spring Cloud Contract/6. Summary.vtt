WEBVTT
1
00:00:01.840 --> 00:00:06.460
[Autogenerated] Let's recap some of the key takeaways from this module.

2
00:00:06.460 --> 00:00:08.810
The first is a consumer driven contracts.

3
00:00:08.810 --> 00:00:12.730
Testing helps filled a micro services testing gap.

4
00:00:12.730 --> 00:00:13.980
Specifically,

5
00:00:13.980 --> 00:00:17.770
her grants is a performance in isolation of mocking Bow without

6
00:00:17.770 --> 00:00:21.810
the possibility of false positives in our tests.

7
00:00:21.810 --> 00:00:25.100
It works by defining agreed interactions between

8
00:00:25.100 --> 00:00:29.380
consumers and providers via contracts.

9
00:00:29.380 --> 00:00:34.510
These contracts are then continually tacit against on the consumer On provider,

10
00:00:34.510 --> 00:00:41.240
Side said, our local builds will always fail if a breaking a P I changes made.

11
00:00:41.240 --> 00:00:45.300
The technique also takes t d D to the architectural level.

12
00:00:45.300 --> 00:00:48.610
As a consumer's tests drive the implementation off to

13
00:00:48.610 --> 00:00:55.000
providers AP I contract Listen, shores only what is required is implemented.

14
00:00:55.000 --> 00:00:58.380
House guarantee Services conf unction together and

15
00:00:58.380 --> 00:01:01.770
also gives regression coverage.

16
00:01:01.770 --> 00:01:04.520
The outcome of this pattern is that micro services

17
00:01:04.520 --> 00:01:06.300
truly do become independently,

18
00:01:06.300 --> 00:01:11.420
testable and deployable as contract tests are usually enough to verify that

19
00:01:11.420 --> 00:01:15.690
they function together correctly with their collaborators.

20
00:01:15.690 --> 00:01:19.880
In the next module will be introducing spring cloud contract on

21
00:01:19.880 --> 00:01:28.000
using it with the consumer driven contracts Testing technique to implement a micro service based architecture

