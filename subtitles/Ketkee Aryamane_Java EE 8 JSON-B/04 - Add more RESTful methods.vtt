WEBVTT
1
00:00:00.050 --> 00:00:02.060
- [Instructor] Now let's add one more method

2
00:00:02.060 --> 00:00:04.060
which is going to edit the order.

3
00:00:04.060 --> 00:00:08.060
Okay, so now since it's the edit kind of changing the data,

4
00:00:08.060 --> 00:00:12.000
we're gonna add POST method for the RESTful P.

5
00:00:12.000 --> 00:00:13.060
Okay that's the first thing,

6
00:00:13.060 --> 00:00:19.050
and then let's also have an explicit path for it,

7
00:00:19.050 --> 00:00:22.090
let's say edit, okay.

8
00:00:22.090 --> 00:00:24.080
Next is, let's write out the method.

9
00:00:24.080 --> 00:00:29.030
Public, String, editOrder,

10
00:00:29.030 --> 00:00:32.050
and let's go and...

11
00:00:32.050 --> 00:00:37.090
Take a reference of all the object as a parameter.

12
00:00:37.090 --> 00:00:43.030
Okay, and let's also type the...

13
00:00:43.030 --> 00:00:45.090
'Order to edit',

14
00:00:45.090 --> 00:00:47.090
so once we get the Order object as a parameter,

15
00:00:47.090 --> 00:00:50.050
I'm just going to query the orderId for it and print it out

16
00:00:50.050 --> 00:00:53.040
to ensure that it was indeed the order that we tried

17
00:00:53.040 --> 00:00:56.060
to send from the Postman tool, okay?

18
00:00:56.060 --> 00:00:58.020
So basically we're going to hit this method

19
00:00:58.020 --> 00:01:00.000
with the Postman tool,

20
00:01:00.000 --> 00:01:03.010
passing an Order JSON it should come here

21
00:01:03.010 --> 00:01:05.090
and I should be able to get an Order object

22
00:01:05.090 --> 00:01:08.080
for the corresponding JSON and then I should be able to

23
00:01:08.080 --> 00:01:13.040
retrieve the orderId inside the method on line number 37.

24
00:01:13.040 --> 00:01:14.020
Okay?

25
00:01:14.020 --> 00:01:16.020
Once that's done, of course you're,

26
00:01:16.020 --> 00:01:21.010
you can go and edit the Order and then say,

27
00:01:21.010 --> 00:01:26.060
return a statement saying OrderEdited successfully.

28
00:01:26.060 --> 00:01:28.000
So in your line application of course you

29
00:01:28.000 --> 00:01:31.000
will have some kind of processing logic where I've

30
00:01:31.000 --> 00:01:33.010
returned a comment on line 38,

31
00:01:33.010 --> 00:01:34.030
where you'll edit the order or

32
00:01:34.030 --> 00:01:36.020
maybe to sum transactions against a database,

33
00:01:36.020 --> 00:01:38.030
and then come back and tell the customer that

34
00:01:38.030 --> 00:01:42.030
yes the order was edited successfully, okay?

35
00:01:42.030 --> 00:01:44.080
Okay, so that's one more method that we've added.

36
00:01:44.080 --> 00:01:46.020
Let's add another one.

37
00:01:46.020 --> 00:01:51.040
Let's add a GET method and what is this going to do?

38
00:01:51.040 --> 00:01:56.060
Let's also add a Path for this,

39
00:01:56.060 --> 00:01:58.060
okay, alright.

40
00:01:58.060 --> 00:02:02.010
getOrder, so this one that we were trying to have,

41
00:02:02.010 --> 00:02:04.070
is getting us all the orders that you have,

42
00:02:04.070 --> 00:02:07.060
this one is getting a specific order, okay?

43
00:02:07.060 --> 00:02:11.000
And in order to do this, once we get the order,

44
00:02:11.000 --> 00:02:17.040
of course this is also going to produce MediaType JSON,

45
00:02:17.040 --> 00:02:22.000
that is APPLICATION_JSON.

46
00:02:22.000 --> 00:02:25.000
Okay, and now what we will do here is,

47
00:02:25.000 --> 00:02:26.080
we are going to write a method.

48
00:02:26.080 --> 00:02:27.070
What will this return?

49
00:02:27.070 --> 00:02:30.010
This will return a simple Order object

50
00:02:30.010 --> 00:02:31.090
and the name of the method

51
00:02:31.090 --> 00:02:35.000
will be findOrder and this will of course

52
00:02:35.000 --> 00:02:40.040
take the unique identifier to find out the orderId.

53
00:02:40.040 --> 00:02:45.020
And this orderId we are going to pass as a query parameter.

54
00:02:45.020 --> 00:02:48.060
So for that, as for the RESTful API basics,

55
00:02:48.060 --> 00:02:53.000
we annotate the parameter with the QueryParam annotation.

56
00:02:53.000 --> 00:02:56.070
And also specify how is it going to come,

57
00:02:56.070 --> 00:02:59.080
it's going to come in the form of this ID variable.

58
00:02:59.080 --> 00:03:01.020
Okay?

59
00:03:01.020 --> 00:03:04.060
Once this is done, what I am going to do is,

60
00:03:04.060 --> 00:03:08.010
I'm going to just iterate the list of orders

61
00:03:08.010 --> 00:03:12.000
so I can copy line number 30

62
00:03:12.000 --> 00:03:13.040
and paste it on line 47.

63
00:03:13.040 --> 00:03:15.040
So this is my list of orders, okay?

64
00:03:15.040 --> 00:03:17.080
And I'm going to iterate this list

65
00:03:17.080 --> 00:03:20.060
for every order...

66
00:03:20.060 --> 00:03:23.090
inside this orders.

67
00:03:23.090 --> 00:03:28.000
What I'm gonna do, I'm gonna to just compare the orderId

68
00:03:28.000 --> 00:03:33.060
with the incoming orderId received as a parameter.

69
00:03:33.060 --> 00:03:34.090
That's all.

70
00:03:34.090 --> 00:03:36.010
And if I get a match,

71
00:03:36.010 --> 00:03:40.060
I'm going to just return that order object back, that's all.

72
00:03:40.060 --> 00:03:44.030
Okay, if there's nothing then I'll just return null.

73
00:03:44.030 --> 00:03:45.020
There we go.

74
00:03:45.020 --> 00:03:47.030
So we'll read a QueryParam, this is a GET request,

75
00:03:47.030 --> 00:03:49.050
which means the ID parameter is going to come

76
00:03:49.050 --> 00:03:50.090
in the query stream,

77
00:03:50.090 --> 00:03:53.080
we are going to make sure that we find a match for that

78
00:03:53.080 --> 00:03:56.050
in our list of orders that we already have.

79
00:03:56.050 --> 00:03:57.080
And if we have a match then

80
00:03:57.080 --> 00:04:01.010
we will just return that order, nothing more.

81
00:04:01.010 --> 00:04:03.000
Okay, so we have added a couple of other methods

82
00:04:03.000 --> 00:04:06.000
to RESTful API, let's test this out in the next video.

