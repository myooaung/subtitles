WEBVTT
1
00:00:00.050 --> 00:00:02.040
- [Narrator] So that is all that we have to see

2
00:00:02.040 --> 00:00:04.040
under the JSON binding API

3
00:00:04.040 --> 00:00:06.000
we saw the default settings

4
00:00:06.000 --> 00:00:07.060
a whole lot of settings there,

5
00:00:07.060 --> 00:00:09.090
then we saw a lot of custom options,

6
00:00:09.090 --> 00:00:11.010
both ways, the compile time

7
00:00:11.010 --> 00:00:12.080
and the runtime customizations.

8
00:00:12.080 --> 00:00:15.000
And then we also saw how to have your own

9
00:00:15.000 --> 00:00:17.000
serialization by means of adapters

10
00:00:17.000 --> 00:00:18.090
and serializers.

11
00:00:18.090 --> 00:00:20.070
The last bit of this course is where

12
00:00:20.070 --> 00:00:22.060
we are going to see how do you get the

13
00:00:22.060 --> 00:00:25.040
JSON binding API and put it inside

14
00:00:25.040 --> 00:00:28.070
a JAX-RS which is Java API for

15
00:00:28.070 --> 00:00:30.060
restful web service application.

16
00:00:30.060 --> 00:00:32.020
So we are going to build a very small

17
00:00:32.020 --> 00:00:34.020
JAX-RS application quickly

18
00:00:34.020 --> 00:00:36.030
and make sure that we use JSON binding

19
00:00:36.030 --> 00:00:39.090
in order to send and receive

20
00:00:39.090 --> 00:00:42.010
Java JSON object and vice versa.

21
00:00:42.010 --> 00:00:43.000
Okay.

22
00:00:43.000 --> 00:00:45.040
So let's set up that application first.

23
00:00:45.040 --> 00:00:46.060
It's very simple to do that.

24
00:00:46.060 --> 00:00:49.000
And it means that we have create a Maven project

25
00:00:49.000 --> 00:00:51.070
from the Java EE 8 archetype.

26
00:00:51.070 --> 00:00:53.060
So let's go and do that.

27
00:00:53.060 --> 00:00:55.010
You say right click,

28
00:00:55.010 --> 00:00:56.050
new project,

29
00:00:56.050 --> 00:00:59.030
say Maven and choose this option

30
00:00:59.030 --> 00:01:02.000
project from archetype

31
00:01:02.000 --> 00:01:03.060
and what are we gonna choose it's

32
00:01:03.060 --> 00:01:05.060
a restful web application that we want so,

33
00:01:05.060 --> 00:01:09.070
Java EE 8 essential archetype should be good.

34
00:01:09.070 --> 00:01:10.070
Say next,

35
00:01:10.070 --> 00:01:13.010
give it a name so let's say

36
00:01:13.010 --> 00:01:16.070
JSONbWeb.

37
00:01:16.070 --> 00:01:18.000
Let's get rid of the default package

38
00:01:18.000 --> 00:01:18.080
we don't want this package.

39
00:01:18.080 --> 00:01:20.010
We'll create our own later

40
00:01:20.010 --> 00:01:23.020
when the structure of the project gets generated.

41
00:01:23.020 --> 00:01:25.020
Okay say finish

42
00:01:25.020 --> 00:01:32.070
and let's get the project structure generated first.

43
00:01:32.070 --> 00:01:35.040
Okay so I'm going to minimize the earlier one

44
00:01:35.040 --> 00:01:37.080
and that's the one that we want, okay.

45
00:01:37.080 --> 00:01:40.020
Now under source packages there are some

46
00:01:40.020 --> 00:01:42.040
default packages that get generated out of

47
00:01:42.040 --> 00:01:43.030
that archetype.

48
00:01:43.030 --> 00:01:44.050
We don't want them.

49
00:01:44.050 --> 00:01:45.050
What we'll do is we'll create our

50
00:01:45.050 --> 00:01:47.060
own packages so

51
00:01:47.060 --> 00:01:49.050
com.app.rest

52
00:01:49.050 --> 00:01:50.060
so this is the folder

53
00:01:50.060 --> 00:01:52.090
that is going to contain all the rest classes.

54
00:01:52.090 --> 00:01:55.030
Then another source package

55
00:01:55.030 --> 00:01:56.080
for

56
00:01:56.080 --> 00:01:59.090
all the beans that we use.

57
00:01:59.090 --> 00:02:05.020
And then we'll also create one package

58
00:02:05.020 --> 00:02:09.000
for the utis.

59
00:02:09.000 --> 00:02:10.010
Okay.

60
00:02:10.010 --> 00:02:11.030
Let's understand this quickly.

61
00:02:11.030 --> 00:02:14.000
This is a JAX-RS application, right?

62
00:02:14.000 --> 00:02:15.060
So you will have a basic class which

63
00:02:15.060 --> 00:02:19.030
is the basic configuration class for JAX-RS

64
00:02:19.030 --> 00:02:21.040
which extends the application class.

65
00:02:21.040 --> 00:02:24.020
Let me tell you that it has already been generated

66
00:02:24.020 --> 00:02:26.070
here under the com.airhacks package.

67
00:02:26.070 --> 00:02:27.080
Okay if I just open this

68
00:02:27.080 --> 00:02:29.020
that's what it looks like.

69
00:02:29.020 --> 00:02:31.030
It extends the application class.

70
00:02:31.030 --> 00:02:34.060
It is annotated with the applicationpath annotation

71
00:02:34.060 --> 00:02:37.090
and that is what specifies the basic URI

72
00:02:37.090 --> 00:02:39.050
for this application.

73
00:02:39.050 --> 00:02:41.050
So if you want to access any other restful bean

74
00:02:41.050 --> 00:02:42.050
in this application,

75
00:02:42.050 --> 00:02:44.040
you'll have to first come to this part

76
00:02:44.040 --> 00:02:46.030
and then access the part of the

77
00:02:46.030 --> 00:02:47.090
respective restful class.

78
00:02:47.090 --> 00:02:48.090
Okay.

79
00:02:48.090 --> 00:02:51.030
So we'll just get this, copy this

80
00:02:51.030 --> 00:02:52.090
and put it in a rest package.

81
00:02:52.090 --> 00:02:54.000
Paste it there

82
00:02:54.000 --> 00:02:56.020
along with the refractor option.

83
00:02:56.020 --> 00:02:57.020
Once we do this,

84
00:02:57.020 --> 00:02:58.070
now we can completely get rid

85
00:02:58.070 --> 00:03:01.020
of these packages that were created by default.

86
00:03:01.020 --> 00:03:03.040
Okay so I'm going to delete them

87
00:03:03.040 --> 00:03:06.050
and I'm gonna remove all references.

88
00:03:06.050 --> 00:03:07.080
Okay we are good.

89
00:03:07.080 --> 00:03:09.030
So we've created the rest package,

90
00:03:09.030 --> 00:03:10.080
we've created the bean package,

91
00:03:10.080 --> 00:03:13.000
and we've created the utis package.

92
00:03:13.000 --> 00:03:15.000
Now, the magical thing is that

93
00:03:15.000 --> 00:03:16.020
under the poem xml,

94
00:03:16.020 --> 00:03:18.060
which is the Maven configuration file

95
00:03:18.060 --> 00:03:19.070
for this project,

96
00:03:19.070 --> 00:03:23.010
do you see a dependency for Java EE API?

97
00:03:23.010 --> 00:03:24.040
Yes.

98
00:03:24.040 --> 00:03:26.000
So now that it is already there,

99
00:03:26.000 --> 00:03:28.060
we do not need to really add the JSON

100
00:03:28.060 --> 00:03:31.020
bind API dependency separately.

101
00:03:31.020 --> 00:03:33.030
The entire dependency has already been added

102
00:03:33.030 --> 00:03:35.030
to our project so it's right out there

103
00:03:35.030 --> 00:03:36.070
available with us.

104
00:03:36.070 --> 00:03:37.060
Okay.

105
00:03:37.060 --> 00:03:39.010
So that was the first step create a

106
00:03:39.010 --> 00:03:40.080
Maven project from the archetype.

107
00:03:40.080 --> 00:03:44.010
Next is add GlassFish Server 5

108
00:03:44.010 --> 00:03:45.070
to the IDE.

109
00:03:45.070 --> 00:03:47.090
Now we are gonna download GlassFish Server 5

110
00:03:47.090 --> 00:03:49.020
as a part of the setup

111
00:03:49.020 --> 00:03:51.010
and let's say you don't know

112
00:03:51.010 --> 00:03:52.000
how to add a server.

113
00:03:52.000 --> 00:03:53.040
I'll show you that.

114
00:03:53.040 --> 00:03:55.020
Let's go to tools,

115
00:03:55.020 --> 00:03:57.010
servers,

116
00:03:57.010 --> 00:04:00.000
and here you have an option to add server.

117
00:04:00.000 --> 00:04:01.060
So when you click on add server,

118
00:04:01.060 --> 00:04:03.080
you can choose the option of GlassFish server.

119
00:04:03.080 --> 00:04:04.080
Say next.

120
00:04:04.080 --> 00:04:06.030
You can also give it a name by the way,

121
00:04:06.030 --> 00:04:07.030
down there.

122
00:04:07.030 --> 00:04:08.030
Say next

123
00:04:08.030 --> 00:04:10.040
and then you need to feed the path

124
00:04:10.040 --> 00:04:12.070
of the GlassFish instillation data tree.

125
00:04:12.070 --> 00:04:15.010
When you download, it comes as a zip package.

126
00:04:15.010 --> 00:04:17.000
You just need to go to the home part

127
00:04:17.000 --> 00:04:19.080
of GlassFish server and then feed that path

128
00:04:19.080 --> 00:04:21.070
to this instillation location.

129
00:04:21.070 --> 00:04:23.000
So let me show you the

130
00:04:23.000 --> 00:04:25.030
GlassFish instillation path.

131
00:04:25.030 --> 00:04:26.090
Let's go to the

132
00:04:26.090 --> 00:04:28.050
explorer

133
00:04:28.050 --> 00:04:31.050
under my D drive softwares,

134
00:04:31.050 --> 00:04:33.090
I have GlassFish already unzipped

135
00:04:33.090 --> 00:04:35.000
when I downloaded.

136
00:04:35.000 --> 00:04:36.060
So I can go there

137
00:04:36.060 --> 00:04:40.020
and that becomes the path of my GlassFish server.

138
00:04:40.020 --> 00:04:41.070
Okay, you just have to take this

139
00:04:41.070 --> 00:04:43.010
and paste it right there

140
00:04:43.010 --> 00:04:44.060
in your IDE

141
00:04:44.060 --> 00:04:45.060
and then you're done.

142
00:04:45.060 --> 00:04:47.040
It creates a local domain for you

143
00:04:47.040 --> 00:04:49.010
and when you say next it will install

144
00:04:49.010 --> 00:04:50.020
that server for you.

145
00:04:50.020 --> 00:04:52.080
Now, for me, in this netsbean IDE setup

146
00:04:52.080 --> 00:04:54.070
I already have that available with me

147
00:04:54.070 --> 00:04:56.070
so I'm not going to go ahead with this operation.

148
00:04:56.070 --> 00:04:58.030
I'm just going to cancel this but,

149
00:04:58.030 --> 00:05:00.000
these are the definite steps

150
00:05:00.000 --> 00:05:03.020
to get the GlassFish server added to netbeans.

151
00:05:03.020 --> 00:05:04.040
Okay, we need this server

152
00:05:04.040 --> 00:05:07.020
because we need to deploy this restful application

153
00:05:07.020 --> 00:05:08.060
on the server.

154
00:05:08.060 --> 00:05:09.040
Alright.

155
00:05:09.040 --> 00:05:10.040
So,

156
00:05:10.040 --> 00:05:11.090
that is done too.

157
00:05:11.090 --> 00:05:14.060
We have created the package for beans

158
00:05:14.060 --> 00:05:15.050
and rest classes.

159
00:05:15.050 --> 00:05:16.070
Yes we have done that.

160
00:05:16.070 --> 00:05:19.000
The rest of the stuff we will see in the next video.

