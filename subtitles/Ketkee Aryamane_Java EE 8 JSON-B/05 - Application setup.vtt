WEBVTT
1
00:00:00.050 --> 00:00:03.030
- [Narrator] Let's now set up a JSON-B Application quickly

2
00:00:03.030 --> 00:00:04.030
as apart of this course.

3
00:00:04.030 --> 00:00:06.030
So we are going to have two kinds of application

4
00:00:06.030 --> 00:00:08.000
one is a stand-alone application

5
00:00:08.000 --> 00:00:10.050
where we'll see the entire operation of

6
00:00:10.050 --> 00:00:13.000
the JSON binding API's that we have available

7
00:00:13.000 --> 00:00:14.080
as a part of the specification.

8
00:00:14.080 --> 00:00:17.000
And after that, we are going to build a small

9
00:00:17.000 --> 00:00:20.040
JAX-RS application which is a RESTful application.

10
00:00:20.040 --> 00:00:22.060
And then we'll use JSON-B inside it.

11
00:00:22.060 --> 00:00:23.050
Okay?

12
00:00:23.050 --> 00:00:26.060
So let's see the software prerequisites for this first.

13
00:00:26.060 --> 00:00:28.070
We will Java Development Kit, JDK,

14
00:00:28.070 --> 00:00:30.050
the java software version 1.8

15
00:00:30.050 --> 00:00:31.080
you can download it from the link

16
00:00:31.080 --> 00:00:33.070
that has been mentioned on the slide.

17
00:00:33.070 --> 00:00:36.070
And then you need an integrated development environment

18
00:00:36.070 --> 00:00:39.040
where you'll do all of your coding and testing.

19
00:00:39.040 --> 00:00:41.010
I've chosen NetBeans IDE.

20
00:00:41.010 --> 00:00:44.020
You can however choose any IDE of your own preference.

21
00:00:44.020 --> 00:00:46.060
Then you have the Postman tool

22
00:00:46.060 --> 00:00:49.040
which is the one that we are going to use to test out

23
00:00:49.040 --> 00:00:51.000
the RESTful application that we are building

24
00:00:51.000 --> 00:00:52.050
at the end of this course.

25
00:00:52.050 --> 00:00:54.090
So we need that, you can download it from that link.

26
00:00:54.090 --> 00:00:57.020
However, if you want to your RESTful orders

27
00:00:57.020 --> 00:00:59.010
which are just kind of get requests

28
00:00:59.010 --> 00:01:01.010
through a browser then you will need a Google Chrome

29
00:01:01.010 --> 00:01:03.000
or a Firefox and an MS Edge browser

30
00:01:03.000 --> 00:01:05.020
which is of the latest version.

31
00:01:05.020 --> 00:01:07.050
Now, let's setup a JSON-B Application.

32
00:01:07.050 --> 00:01:09.060
One is a stand-alone application that we are going to build

33
00:01:09.060 --> 00:01:11.010
which is a simple Java application.

34
00:01:11.010 --> 00:01:13.060
And the second one will be a JAX-RS service

35
00:01:13.060 --> 00:01:14.090
but that we'll do at the end.

36
00:01:14.090 --> 00:01:18.020
Right now, let's look only at the standard Java Application.

37
00:01:18.020 --> 00:01:21.090
So in the NetBeans IDE, first let's create a Java project

38
00:01:21.090 --> 00:01:25.010
let's go to IDE and say right-click new project

39
00:01:25.010 --> 00:01:27.090
and this option of Maven under that category

40
00:01:27.090 --> 00:01:29.060
you can choose Java Application.

41
00:01:29.060 --> 00:01:34.010
When you say next let's give it a name, JSON-B

42
00:01:34.010 --> 00:01:36.020
Sample.

43
00:01:36.020 --> 00:01:38.040
Let's get rid of the default package, we'll create our own

44
00:01:38.040 --> 00:01:41.050
packages when the structure gets formed for the project.

45
00:01:41.050 --> 00:01:42.080
And say finish.

46
00:01:42.080 --> 00:01:45.030
So this is how the project structure looks like

47
00:01:45.030 --> 00:01:48.010
and you have your palm XML out there.

48
00:01:48.010 --> 00:01:51.030
Inside that, right now you just have the Maven compiler

49
00:01:51.030 --> 00:01:54.020
version set to 1.8 that is very important

50
00:01:54.020 --> 00:01:56.060
because this JSON binding API will definitely

51
00:01:56.060 --> 00:02:01.020
require Java 1.8 version to be used for compilation.

52
00:02:01.020 --> 00:02:04.020
Now, how are you going to integrate JSON-B

53
00:02:04.020 --> 00:02:05.080
in this Java Application?

54
00:02:05.080 --> 00:02:08.000
It is very, very simple to do that.

55
00:02:08.000 --> 00:02:11.080
What you have to do is just go to the official documentation

56
00:02:11.080 --> 00:02:14.060
of JSON-B which is JSON-B.net

57
00:02:14.060 --> 00:02:17.010
that's the official documentation website

58
00:02:17.010 --> 00:02:20.010
and under that you have these steps

59
00:02:20.010 --> 00:02:22.070
getting started and user guide and all of that.

60
00:02:22.070 --> 00:02:25.070
So when you click on users guide the first page

61
00:02:25.070 --> 00:02:28.020
that comes up is exactly the Maven coordinates

62
00:02:28.020 --> 00:02:30.070
that you may want to enter into your palm XML

63
00:02:30.070 --> 00:02:33.090
so that you get started with the JSON-B course, okay?

64
00:02:33.090 --> 00:02:35.080
Now, what are these dependencies for?

65
00:02:35.080 --> 00:02:36.070
Let's quickly go through them

66
00:02:36.070 --> 00:02:38.070
and then we'll add it to the palm XML.

67
00:02:38.070 --> 00:02:41.030
First, you have the JSON-B dependency so in one

68
00:02:41.030 --> 00:02:45.010
of our earlier discussions we did talk about how JSON-B

69
00:02:45.010 --> 00:02:47.040
uses JSON-P internally.

70
00:02:47.040 --> 00:02:48.080
So you'll require that dependency

71
00:02:48.080 --> 00:02:51.060
and of course its reference implementation.

72
00:02:51.060 --> 00:02:53.050
And then you have the JSON-B interfaces

73
00:02:53.050 --> 00:02:55.010
specification declared there

74
00:02:55.010 --> 00:02:58.040
and then the reference implementation for that too

75
00:02:58.040 --> 00:03:00.070
which is Eclipse Yasson library.

76
00:03:00.070 --> 00:03:02.080
So that dependency is also listed out there.

77
00:03:02.080 --> 00:03:06.020
So I'm just going to take this entire set of dependencies

78
00:03:06.020 --> 00:03:07.050
along with the comments so we are clear

79
00:03:07.050 --> 00:03:09.020
what we are trying to insert.

80
00:03:09.020 --> 00:03:10.070
Copy this.

81
00:03:10.070 --> 00:03:11.070
Go to the IDE.

82
00:03:11.070 --> 00:03:14.080
And after the packaging tag

83
00:03:14.080 --> 00:03:19.040
let's enter the dependencies tag.

84
00:03:19.040 --> 00:03:23.020
And under that let's add all of these dependencies.

85
00:03:23.020 --> 00:03:25.070
Okay.

86
00:03:25.070 --> 00:03:28.000
Yeah, so we've created of the Java Maven project

87
00:03:28.000 --> 00:03:29.090
we've add the dependencies and once you've added them

88
00:03:29.090 --> 00:03:32.000
you just have to clean and build and run.

89
00:03:32.000 --> 00:03:35.070
So let's clean and build this project.

90
00:03:35.070 --> 00:03:38.030
So all of these dependencies will get installed.

91
00:03:38.030 --> 00:03:39.010
Then we download it

92
00:03:39.010 --> 00:03:41.000
if they have not been downloaded already.

93
00:03:41.000 --> 00:03:42.030
And they'll get installed of course,

94
00:03:42.030 --> 00:03:44.070
on your project wall or project jar file

95
00:03:44.070 --> 00:03:46.060
whatever packaging that you are using.

96
00:03:46.060 --> 00:03:49.000
Okay, so the building is a success so we are all set

97
00:03:49.000 --> 00:03:51.050
to go ahead with the demos now.

98
00:03:51.050 --> 00:03:54.000
In the next video, we'll start looking at the demos.

