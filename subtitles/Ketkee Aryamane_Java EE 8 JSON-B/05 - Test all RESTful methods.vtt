WEBVTT
1
00:00:00.060 --> 00:00:02.020
- [Woman] The web application has been

2
00:00:02.020 --> 00:00:04.070
deployed successfully after you make all the changes.

3
00:00:04.070 --> 00:00:06.020
So now let's go to the Postman tool

4
00:00:06.020 --> 00:00:07.080
and test out these methods.

5
00:00:07.080 --> 00:00:09.070
We'll test out the get order method first.

6
00:00:09.070 --> 00:00:12.080
So what we have to do is go to Postman.

7
00:00:12.080 --> 00:00:16.030
And let's go back to that original view

8
00:00:16.030 --> 00:00:18.080
so that we can see the URL, yes.

9
00:00:18.080 --> 00:00:21.020
So that's the URL for the RESTful bin.

10
00:00:21.020 --> 00:00:24.090
So after that we have defined another part

11
00:00:24.090 --> 00:00:28.020
to access this method, to access the find order methods

12
00:00:28.020 --> 00:00:30.060
and we will take that part, copy,

13
00:00:30.060 --> 00:00:32.080
go right there, and paste it.

14
00:00:32.080 --> 00:00:34.050
And of course there's a query param

15
00:00:34.050 --> 00:00:36.010
that this method is expecting.

16
00:00:36.010 --> 00:00:37.090
So we have to feed that parameter.

17
00:00:37.090 --> 00:00:40.080
So let's click on the params button there.

18
00:00:40.080 --> 00:00:46.040
And say the key is ID and the order, let's say, is 200.

19
00:00:46.040 --> 00:00:49.090
So send, and there you go, you get the respective order now.

20
00:00:49.090 --> 00:00:51.060
Let me change the view.

21
00:00:51.060 --> 00:00:53.050
Right, so this terminal getting a collection of orders,

22
00:00:53.050 --> 00:00:58.000
you're just getting a single order, which is order ID 200.

23
00:00:58.000 --> 00:01:01.000
Okay, so you can retrieve an individual order

24
00:01:01.000 --> 00:01:02.090
instead of trying to retrieve all orders.

25
00:01:02.090 --> 00:01:04.040
That's also possible.

26
00:01:04.040 --> 00:01:07.000
And then, let's copy this entire thing.

27
00:01:07.000 --> 00:01:09.090
Let's copy this entire JSON.

28
00:01:09.090 --> 00:01:12.050
And let's test out the next method.

29
00:01:12.050 --> 00:01:13.030
What is that?

30
00:01:13.030 --> 00:01:14.060
We are going to see whether we can

31
00:01:14.060 --> 00:01:16.060
edit an order successfully.

32
00:01:16.060 --> 00:01:19.000
Now, when you talk about editing an order,

33
00:01:19.000 --> 00:01:21.000
you're going to access this part

34
00:01:21.000 --> 00:01:23.070
and you're going to provide that entire JSON.

35
00:01:23.070 --> 00:01:25.010
You're going to send the entire JSON,

36
00:01:25.010 --> 00:01:26.060
which is the order data,

37
00:01:26.060 --> 00:01:28.060
to the server site, to the RESTful bin.

38
00:01:28.060 --> 00:01:30.040
And then the RESTful bin can manipulate it

39
00:01:30.040 --> 00:01:32.070
or save it to the database or make few changes

40
00:01:32.070 --> 00:01:34.080
and then come back to you with a message saying that

41
00:01:34.080 --> 00:01:36.080
the order was edited successfully.

42
00:01:36.080 --> 00:01:38.040
Okay, so let's access this service

43
00:01:38.040 --> 00:01:39.080
and then we'll talk about the semantics

44
00:01:39.080 --> 00:01:41.090
that go behind this entire run.

45
00:01:41.090 --> 00:01:44.020
Okay, so let's go to Postman.

46
00:01:44.020 --> 00:01:46.080
Let's go back to the original bin.

47
00:01:46.080 --> 00:01:49.030
Let's make sure that we access the correct part.

48
00:01:49.030 --> 00:01:52.080
That is edit, that's the part, edit.

49
00:01:52.080 --> 00:01:55.050
Okay, and now this is a post request,

50
00:01:55.050 --> 00:01:57.050
so I'm gonna change this to post.

51
00:01:57.050 --> 00:02:00.080
And let's go to body and send that JSON.

52
00:02:00.080 --> 00:02:02.070
So that will be in the dropdown

53
00:02:02.070 --> 00:02:05.030
you can change it to application JSON,

54
00:02:05.030 --> 00:02:08.050
and paste that order, alright?

55
00:02:08.050 --> 00:02:10.090
This is the order object that I basically

56
00:02:10.090 --> 00:02:14.050
want to go ahead and edit, okay?

57
00:02:14.050 --> 00:02:17.000
That's the URL, we are parsing the data,

58
00:02:17.000 --> 00:02:20.070
it is a post request, now let's hit send.

59
00:02:20.070 --> 00:02:22.070
So what do we get?

60
00:02:22.070 --> 00:02:24.030
Yeah, we get the message!

61
00:02:24.030 --> 00:02:27.030
Order edited successfully, let's go back to the console.

62
00:02:27.030 --> 00:02:30.010
Yay, we get the order to edit is 200.

63
00:02:30.010 --> 00:02:32.070
So we are getting that JSON perfectly

64
00:02:32.070 --> 00:02:36.010
inside our edit order method.

65
00:02:36.010 --> 00:02:40.020
What happened is, the JSON was hit on the RESTful API.

66
00:02:40.020 --> 00:02:42.000
Now, the Jack's hard at service,

67
00:02:42.000 --> 00:02:45.040
with the help of JSON binding API running behind the scenes,

68
00:02:45.040 --> 00:02:48.070
we can work that entire JSON representation of order

69
00:02:48.070 --> 00:02:51.010
into an order object and you have

70
00:02:51.010 --> 00:02:54.040
that entire object to yourself to go and make changes.

71
00:02:54.040 --> 00:02:57.030
And then it was done, and hence it came back and told me

72
00:02:57.030 --> 00:02:59.060
that the order was edited successfully.

73
00:02:59.060 --> 00:03:02.040
So basically, the whole story of this RESTful application

74
00:03:02.040 --> 00:03:05.050
is jack's orders is completely integrated

75
00:03:05.050 --> 00:03:07.050
with the JSON binding API.

76
00:03:07.050 --> 00:03:09.060
You just have to make sure that you start writing

77
00:03:09.060 --> 00:03:12.030
all your RESTful APIs, your database interactions,

78
00:03:12.030 --> 00:03:13.080
and plug them in together.

79
00:03:13.080 --> 00:03:16.030
And rest of the entire job off converting

80
00:03:16.030 --> 00:03:19.090
this Java object back to a JSON representation on the UI.

81
00:03:19.090 --> 00:03:23.040
Or maybe, the JSON representation from the UI request

82
00:03:23.040 --> 00:03:27.070
to the RESTful API, everything will be done by JAXRS's.

83
00:03:27.070 --> 00:03:30.040
Okay, there's one last thing.

84
00:03:30.040 --> 00:03:34.060
The kind of methods we wrote are very raw.

85
00:03:34.060 --> 00:03:36.040
They are the basic forms of methods

86
00:03:36.040 --> 00:03:38.030
that we could write in the RESTful bin.

87
00:03:38.030 --> 00:03:39.020
Of course in your life project

88
00:03:39.020 --> 00:03:41.010
the structure will exactly be the same

89
00:03:41.010 --> 00:03:44.000
but the logic inside this will definitely be

90
00:03:44.000 --> 00:03:46.050
palpable logic that you will have for your application.

91
00:03:46.050 --> 00:03:47.090
This was just a demo.

92
00:03:47.090 --> 00:03:51.010
So we have just kept it very minimal, very simple.

93
00:03:51.010 --> 00:03:53.070
Just trying to get the data and just trying to tell you

94
00:03:53.070 --> 00:03:57.020
that there is this serialization process from Java to JSON

95
00:03:57.020 --> 00:04:00.010
and deserialization from JSON to Java,

96
00:04:00.010 --> 00:04:02.010
which is made so simple with the help

97
00:04:02.010 --> 00:04:06.000
of JAXRS integration with the JSON binding API.

