WEBVTT
1
00:00:00.050 --> 00:00:01.070
- [Instructor] Let's also look at the option

2
00:00:01.070 --> 00:00:04.060
where you can change the property-naming strategy.

3
00:00:04.060 --> 00:00:06.080
The earlier video showed us how to change the name

4
00:00:06.080 --> 00:00:08.020
of the property itself,

5
00:00:08.020 --> 00:00:10.000
but you can also change the naming strategy

6
00:00:10.000 --> 00:00:11.050
for all the properties.

7
00:00:11.050 --> 00:00:12.080
Let's see how to do that.

8
00:00:12.080 --> 00:00:15.050
Now that is achieved with the help of JsonbConfig object,

9
00:00:15.050 --> 00:00:17.080
which means it is a runtime customization.

10
00:00:17.080 --> 00:00:18.090
The earlier one was,

11
00:00:18.090 --> 00:00:21.050
of course, the compiled time customization.

12
00:00:21.050 --> 00:00:23.060
So let's go back to the IDE,

13
00:00:23.060 --> 00:00:24.090
and let's go to ObjectMapper now

14
00:00:24.090 --> 00:00:28.000
because we need to do something on the JsonbConfig object.

15
00:00:28.000 --> 00:00:32.080
So here I'm going to say property naming strategy.

16
00:00:32.080 --> 00:00:35.050
And I'm going to get hold of that config object

17
00:00:35.050 --> 00:00:39.060
and call withPropertyNamingStrategy.

18
00:00:39.060 --> 00:00:41.030
That's the method we're looking for.

19
00:00:41.030 --> 00:00:44.020
And to specify a string, the string can come out

20
00:00:44.020 --> 00:00:50.020
of that same API, which is naming strategy, yeah.

21
00:00:50.020 --> 00:00:51.060
And you have six options.

22
00:00:51.060 --> 00:00:54.020
You can either have your names which are case sensitive,

23
00:00:54.020 --> 00:00:55.030
or you can have your names

24
00:00:55.030 --> 00:00:58.010
which is pointing to the option of identity.

25
00:00:58.010 --> 00:01:01.080
Now this is the default option that Json binding employees.

26
00:01:01.080 --> 00:01:03.040
So when I say that it picks up the names

27
00:01:03.040 --> 00:01:04.030
of the instance variable,

28
00:01:04.030 --> 00:01:08.070
it is trying to have the naming strategy of identity.

29
00:01:08.070 --> 00:01:10.070
Then lower case with dashes,

30
00:01:10.070 --> 00:01:13.030
or you can have lower cases with underscores.

31
00:01:13.030 --> 00:01:15.010
Or you can have upper camel case,

32
00:01:15.010 --> 00:01:17.060
or you can have upper camel case with spaces.

33
00:01:17.060 --> 00:01:20.080
We want to use the names of the instance variables only

34
00:01:20.080 --> 00:01:22.070
as keys in the Json document.

35
00:01:22.070 --> 00:01:23.090
However, you can change that,

36
00:01:23.090 --> 00:01:28.070
so we will try out one of them, lower_case_with_underscores.

37
00:01:28.070 --> 00:01:30.080
Okay.

38
00:01:30.080 --> 00:01:34.010
And let's go to custom names, TestCustomNames class,

39
00:01:34.010 --> 00:01:37.010
and now on line number 28

40
00:01:37.010 --> 00:01:40.040
where we we're trying to get the Jsonb instance,

41
00:01:40.040 --> 00:01:43.070
we are going to actually get the config object

42
00:01:43.070 --> 00:01:45.090
and then get the Jsonb instance.

43
00:01:45.090 --> 00:01:53.070
So that will be ObjectMapper.getObjectMapper.

44
00:01:53.070 --> 00:01:55.030
Another thing that we have to do is we have to go

45
00:01:55.030 --> 00:01:59.060
to the customer class and get rid of these annotations

46
00:01:59.060 --> 00:02:06.040
on line number 16 and the one that we had on line number 47.

47
00:02:06.040 --> 00:02:08.070
Okay?

48
00:02:08.070 --> 00:02:14.050
All right, so let's come here back and run this.

49
00:02:14.050 --> 00:02:20.040
Okay, let's go and check the file on our folder structures.

50
00:02:20.040 --> 00:02:21.090
And when I did this,

51
00:02:21.090 --> 00:02:25.030
yes, do you see that it employed formatting number one

52
00:02:25.030 --> 00:02:28.000
because the JsonbConfig had already got the option

53
00:02:28.000 --> 00:02:30.090
of customizing the formatting option?

54
00:02:30.090 --> 00:02:34.040
And the second, it also now inserted the underscore

55
00:02:34.040 --> 00:02:36.010
in between the names.

56
00:02:36.010 --> 00:02:38.090
So that is how it will try to generate your keys

57
00:02:38.090 --> 00:02:43.030
if you select a particular property-naming strategy.

58
00:02:43.030 --> 00:02:46.050
All right, now, if you're not too happy with that as well,

59
00:02:46.050 --> 00:02:48.030
then you have a third way out.

60
00:02:48.030 --> 00:02:49.090
You can write your custom class.

61
00:02:49.090 --> 00:02:51.070
So let's see how to do that.

62
00:02:51.070 --> 00:02:53.090
You can go ahead to IDE,

63
00:02:53.090 --> 00:02:57.070
and let's create a package,

64
00:02:57.070 --> 00:03:01.000
com.app.custom.

65
00:03:01.000 --> 00:03:04.000
Okay, and let's create a class.

66
00:03:04.000 --> 00:03:10.060
Let's say CustomerNamingStrategy.

67
00:03:10.060 --> 00:03:14.040
Okay, and this will implement the interface,

68
00:03:14.040 --> 00:03:18.080
which is PropertyNamingStrategy.

69
00:03:18.080 --> 00:03:20.030
That's the one.

70
00:03:20.030 --> 00:03:21.090
Now, inside this of course there's a method

71
00:03:21.090 --> 00:03:24.060
that we'll have to implement because it's an interface.

72
00:03:24.060 --> 00:03:29.000
So I'm going to right-click and implement abstract methods.

73
00:03:29.000 --> 00:03:30.090
We do not want the default implementation,

74
00:03:30.090 --> 00:03:33.020
so let's get rid of it.

75
00:03:33.020 --> 00:03:34.070
And what does this method say?

76
00:03:34.070 --> 00:03:36.030
It says translateName.

77
00:03:36.030 --> 00:03:37.070
So basically if you're not too happy

78
00:03:37.070 --> 00:03:39.070
with any of the default naming strategies

79
00:03:39.070 --> 00:03:42.030
that the Json binding API provides you,

80
00:03:42.030 --> 00:03:44.020
you can devise your own strategy.

81
00:03:44.020 --> 00:03:46.010
So let's say I want a strategy

82
00:03:46.010 --> 00:03:49.080
where the name is something like this,

83
00:03:49.080 --> 00:03:50.070
return the original string,

84
00:03:50.070 --> 00:03:52.030
which is the name, which is the property,

85
00:03:52.030 --> 00:03:54.000
not the name, the property.

86
00:03:54.000 --> 00:03:58.090
And to this, I'm going to append underscore, let's say.

87
00:03:58.090 --> 00:04:01.080
Okay, so all the keys that get generated

88
00:04:01.080 --> 00:04:04.030
in the Json document are going to have

89
00:04:04.030 --> 00:04:06.050
that underscore at the end.

90
00:04:06.050 --> 00:04:09.000
It will be the name of the instance variable,

91
00:04:09.000 --> 00:04:11.070
but at the same time, it will also be underscore at the end.

92
00:04:11.070 --> 00:04:13.040
That's the strategy I want.

93
00:04:13.040 --> 00:04:17.060
Now, in order to make sure that this gets apply,

94
00:04:17.060 --> 00:04:22.020
you have to go to the object mapper and come down here.

95
00:04:22.020 --> 00:04:28.090
And then we will comment here property naming strategy,

96
00:04:28.090 --> 00:04:34.050
but this time by custom class.

97
00:04:34.050 --> 00:04:36.000
Okay, and I'm going to say

98
00:04:36.000 --> 00:04:41.090
config.withPropertyNamingStrategy.

99
00:04:41.090 --> 00:04:44.060
Now this time you're going to pick up the overloaded version

100
00:04:44.060 --> 00:04:48.020
of that method, which will demand an instance

101
00:04:48.020 --> 00:04:49.090
of your custom class.

102
00:04:49.090 --> 00:04:53.040
So I'm going to say CustomerNamingStrategy.

103
00:04:53.040 --> 00:04:56.000
There we go.

104
00:04:56.000 --> 00:04:58.080
Now, in order that this particular configuration

105
00:04:58.080 --> 00:05:01.040
takes effect, I'm definitely going to comment this out.

106
00:05:01.040 --> 00:05:02.070
I don't want this right now.

107
00:05:02.070 --> 00:05:05.030
I want my custom strategy, okay?

108
00:05:05.030 --> 00:05:08.020
Right, so let's now test this out.

109
00:05:08.020 --> 00:05:10.050
Let's run this file.

110
00:05:10.050 --> 00:05:14.020
Okay, and let's go and check our customer file.

111
00:05:14.020 --> 00:05:15.060
Yeah, do you see?

112
00:05:15.060 --> 00:05:17.060
The original instance variable name was picked up

113
00:05:17.060 --> 00:05:19.060
followed by that underscore sign.

114
00:05:19.060 --> 00:05:21.030
So you can devise whatever strategy

115
00:05:21.030 --> 00:05:23.010
that you wanna have for your application

116
00:05:23.010 --> 00:05:25.060
as per the conventions that you have decided.

117
00:05:25.060 --> 00:05:28.000
However, we generally do not do so much customizations,

118
00:05:28.000 --> 00:05:30.070
and we keep the name of the instance variable itself

119
00:05:30.070 --> 00:05:32.080
as the key in the Json document

120
00:05:32.080 --> 00:05:34.020
so that when we deserialize,

121
00:05:34.020 --> 00:05:36.000
we don't have any problems either.

