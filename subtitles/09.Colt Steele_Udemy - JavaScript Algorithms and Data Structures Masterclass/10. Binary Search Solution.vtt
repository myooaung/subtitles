WEBVTT

00:00.180 --> 00:01.290
Hai, selamat datang kembali.

00:01.320 --> 00:04.890
Jadi mari kita mulai mengimplementasikan versi pencarian biner kita sendiri.

00:04.890 --> 00:06.570
Jadi sekali lagi ini adalah kode semu.

00:06.590 --> 00:11.350
Pertama saya hanya perlu membuat tempat untuk benar-benar menulis kode jadi saya sudah melakukannya.

00:11.430 --> 00:15.090
Saya melakukannya sebagai cuplikan lagi dan saya panggil biner pencarian tambang.

00:15.120 --> 00:16.480
Itu tidak masalah.

00:17.010 --> 00:21.710
Jika saya jadi Anda, saya sebenarnya mungkin akan melakukan ini di file di suatu tempat menyimpannya di komputer Anda.

00:21.960 --> 00:23.490
Tetapi ini lebih mudah bagi saya.

00:23.670 --> 00:29.470
Jadi saya akan mendefinisikan fungsi kita semua yang kita katakan diatur untuk menerima array yang diurutkan dan nilai.

00:29.610 --> 00:32.390
Jadi saya hanya akan memanggil pencarian biner saya.

00:32.440 --> 00:34.790
Bagi saya ini cukup besar.

00:34.860 --> 00:39.450
Lihat mengecilkan ini OK.

00:39.840 --> 00:42.390
Pencarian Biner mengambil dalam array.

00:42.420 --> 00:46.690
Sebut saja a r r dan kemudian nilainya akan menyebutnya elemen atau L-M.

00:46.710 --> 00:56.380
Jadi misalnya kita harus bisa menyebutnya dengan sesuatu yang relatif singkat ke 5 6 9 13 15.

00:56.880 --> 00:59.090
Hampir semua angka ganjil melakukannya.

00:59.500 --> 01:00.830
20.

01:01.110 --> 01:01.680
28.

01:01.840 --> 01:05.110
OK lalu anggap kita sedang mencari.

01:05.280 --> 01:08.260
Katakanlah kita sedang mencari 15 di sana.

01:08.520 --> 01:09.310
Baiklah.

01:09.900 --> 01:12.430
Jadi sekarang ini jelas tidak akan berhasil.

01:12.450 --> 01:18.570
Selanjutnya kita perlu mengatur pointer kiri dan kanan dan tengah atau saya akan memanggil mereka.

01:18.750 --> 01:26.760
Saya lebih suka memulai dan mengakhiri dan tengah dan apa yang ingin kita lakukan adalah mengatur awal untuk berada di sini

01:26.760 --> 01:27.690
setiap awal.

01:27.690 --> 01:31.890
Kami tidak ingin mengecualikan salah satu array sehingga kami selalu ingin memulai dari awal.

01:31.890 --> 01:37.720
Jadi itu mudah buat saja panggilan variabel itu mulai sama dengan indeks 0.

01:38.250 --> 01:43.420
Lalu saya akan mengakhiri dan itu akan menjadi panjang teorinya.

01:43.450 --> 01:45.510
Tetapi kita perlu melakukan minus satu.

01:45.590 --> 01:47.680
Kalau tidak, kita akan keluar batas.

01:47.700 --> 01:53.220
Jadi kami ingin indeks ini yang ditetapkan 6 0 1 2 3 4 5 6 ya.

01:53.220 --> 01:57.960
Jadi 0 6 dan kemudian kita perlu mengambil tengah.

01:57.980 --> 01:59.570
Ini baru permulaan.

01:59.790 --> 02:02.040
Yang di tengah hanya rata-rata dari keduanya.

02:02.040 --> 02:07.200
Jadi dalam hal ini 0 dan 6 Rata-rata akan menjadi 3 0 1 2 3.

02:07.200 --> 02:09.600
Jadi itu akan memberi kita posisi ini 3.

02:09.780 --> 02:14.010
Tetapi jika kita memiliki satu item lagi di sini seperti 30 maka itu membuang semuanya.

02:14.010 --> 02:22.050
Jadi jika saya baru saja mulai plus dan kemudian perlu menambahkan parens untuk melakukan rata-rata kalau tidak, ia hanya

02:22.050 --> 02:24.650
akan mulai plus dan dibagi dua.

02:24.690 --> 02:26.600
Kasus ini rata-rata sebenarnya untuk mereka.

02:26.700 --> 02:30.440
Tetapi jika Anda melihat kita akan dari nol hingga tujuh.

02:30.450 --> 02:32.850
Sekarang rata-rata adalah tiga koma lima.

02:33.000 --> 02:36.280
Tidak ada indeks tiga koma lima nol satu dua tiga.

02:36.300 --> 02:39.820
Itu akan benar antara 9 dan 13 yang tidak akan bekerja untuk kita.

02:39.840 --> 02:42.640
Jadi di situlah saya akan melakukan matematika lantai atas.

02:42.660 --> 02:43.420
Semuanya itu.

02:43.490 --> 02:46.190
Anda juga dapat mengumpulkan jika Anda mau.

02:46.230 --> 02:48.240
Anda hanya perlu konsisten dalam apa yang Anda pilih.

02:48.420 --> 02:48.770
BAIK.

02:48.810 --> 02:53.070
Jadi pada titik ini inilah yang kita lihat dengan array yang tepat ini.

02:53.070 --> 02:54.560
Kami mulai memulai.

02:54.570 --> 02:57.650
Ini akan diatur ke indeks nol di sini.

02:57.690 --> 03:04.620
Kemudian kita memiliki dan menetapkan indeks tujuh dalam kasus kita yang sekarang 30 dan kemudian tengah akan menjadi indeks tiga koma lima

03:04.890 --> 03:08.690
dibulatkan ke bawah yang memberi kita 3 0 1 2 3.

03:08.700 --> 03:09.790
Jadi kita punya sembilan.

03:10.140 --> 03:16.350
Dan hanya untuk memverifikasi kita bisa menghitung log itu mulai dari tengah dan seperti itu.

03:16.500 --> 03:20.530
Dan jika kita mengeksekusi ini mereka mendapatkan apa pun kita pergi 0 3 7.

03:20.530 --> 03:22.140
Jadi itulah yang kami harapkan.

03:22.140 --> 03:25.400
Sekarang kita masuk ke logika sebenarnya dari apa yang ingin kita lakukan di sini.

03:25.620 --> 03:30.010
Kami ingin terus mengulang dan mengulangi proses ini di mana kami memilih perantara.

03:30.010 --> 03:32.390
Yah pertama-tama kita perlu memeriksa apakah tengahnya benar.

03:32.460 --> 03:33.200
Kanan.

03:33.300 --> 03:37.160
Langsung dari kelelawar kita bisa memilih 15 kita tidak.

03:37.200 --> 03:40.310
Kami bekerja dengan sembilan tetapi katakanlah kami sedang mencari sembilan.

03:40.590 --> 03:43.670
Kami memilih tengah sembilan segera jadi kami perlu memeriksa apakah kami sudah benar.

03:43.670 --> 03:49.410
Dan jika tidak, kita lebih besar atau lebih kecil daripada yang kita lihat adalah 9 terlalu besar atau terlalu kecil.

03:49.530 --> 03:54.950
Dalam hal ini Anda perlu mulai mencari di sini saja atau mulai mencari hanya di sini saja.

03:54.960 --> 03:58.090
Jadi mari kita mulai dengan hanya loop sementara sederhana.

03:58.290 --> 04:07.440
Jadi saya hanya akan mengulang-ulang sementara elemen sementara array tengah tidak sama dengan apa yang

04:07.440 --> 04:09.170
kita cari.

04:09.180 --> 04:13.450
Jadi sementara kami belum menemukan sementara yang salah, mari kita bicara seperti itu.

04:13.860 --> 04:16.170
Jadi pertengahan waktu pertama ini adalah sembilan.

04:16.200 --> 04:17.420
Bukan itu yang kami cari.

04:17.430 --> 04:18.280
Kami ingin 15.

04:18.330 --> 04:20.150
Jadi kita akan mengulangi kode ini.

04:20.190 --> 04:22.950
Sekarang kode yang akan kita lakukan pertama kita akan periksa.

04:23.310 --> 04:28.890
Kita dapat mengasumsikan jika kita berada di sini yang berarti tengah lebih besar dari atau kurang

04:28.890 --> 04:32.430
dari jika jumlah yang kita cari lebih sedikit dari tengah.

04:32.460 --> 04:35.610
Jadi jika kita tengah sembilan katakanlah kita sedang mencari enam.

04:35.640 --> 04:37.120
Enam kurang dari sembilan.

04:37.440 --> 04:42.670
Jadi yang ingin kita lakukan adalah menggeser ujung kita ke 6.

04:42.930 --> 04:47.430
Sekarang Anda mungkin berpikir kami dapat mengalihkan minat ke 9 dan itu akan berhasil tetapi itu berlebihan karena

04:47.430 --> 04:49.220
kami tahu bahwa 9 belum menjawab.

04:49.320 --> 04:50.200
Kami memeriksanya.

04:50.430 --> 04:54.420
Jadi kita akan menetapkan akhir menjadi tengah minus 1.

04:54.420 --> 04:56.370
Jadi ini jendela baru kita.

04:56.370 --> 05:01.970
Demikian juga arah lain seperti dalam kasus ini dengan 15 kami memeriksa 9 itu terlalu kecil.

05:02.040 --> 05:05.020
Jadi kita akan memindahkan jendela kita sampai ke sini.

05:05.220 --> 05:09.870
Jadi awal kita sekarang 13 dan tengah kita akan menjadi lima belas atau dua puluh delapan.

05:09.870 --> 05:12.710
Kita akan membulatkannya menjadi 15.

05:12.810 --> 05:18.120
Jadi kami ingin melakukan tengah plus satu atau tengah minus satu karena kami sudah menguji tengah.

05:18.120 --> 05:18.900
Jadi mari kita lakukan itu.

05:18.910 --> 05:27.610
Sekarang saya akan memiliki pernyataan IF sederhana jika elemen kurang dari array tengah seperti itu.

05:27.750 --> 05:32.200
Jika itu masalahnya, seperti jika Anda mencari enam, kita akan menetapkan akhir.

05:32.210 --> 05:34.070
Kami akan memindahkan ujungnya ke sini.

05:34.080 --> 05:34.860
Kanan.

05:34.870 --> 05:43.450
Jadi dan dia memanggil tengah minus satu dan kemudian kita punya yang lain hanya ada satu pilihan lain.

05:43.620 --> 05:47.900
Karena jika sama jika kita benar maka kita keluar dari lingkaran.

05:48.390 --> 05:49.460
Tapi kita belum sampai di sana.

05:49.470 --> 05:51.710
Jadi kita lebih besar atau lebih kecil dari itu.

05:51.720 --> 05:55.610
Lain Itu berarti bahwa apa yang kita cari dalam kasus ini 15 lebih besar dari 9.

05:55.620 --> 06:04.840
Kita perlu memindahkan awal jendela kita ke 13 jadi mulai sama dengan tengah plus satu begitu saja.

06:05.070 --> 06:06.170
Lalu hal lainnya.

06:06.210 --> 06:07.480
Yah, ini bukan satu-satunya hal.

06:07.480 --> 06:11.220
Tetapi hal lain yang perlu kita lakukan sekarang adalah mengubah nilai tengah kita.

06:11.310 --> 06:13.260
Kita hanya perlu menghitung ulang.

06:13.260 --> 06:17.630
Jadi pertama kali kami melaluinya kami hanya menyalin ini.

06:17.760 --> 06:21.240
Inilah yang kami mulai dengan dan kemudian kami memeriksanya.

06:21.240 --> 06:24.920
Jadi kelas menengah tidak sama dengan Elemen tingkat 9 tidak sama dengan 15.

06:24.930 --> 06:27.310
Begitu juga elemen yang kurang dari menengah.

06:27.330 --> 06:27.770
Nggak.

06:27.900 --> 06:29.580
Jadi lewati yang lain ini.

06:29.580 --> 06:33.470
Mulai sama dengan tengah ditambah satu tengah ditambah satu adalah 13.

06:33.690 --> 06:37.470
Jadi itu berarti bahwa awal kita sekarang 13 di sini.

06:37.770 --> 06:39.940
Akhir kami masih 30 belum bergerak.

06:40.180 --> 06:41.700
Kita perlu menghitung ulang tengahnya.

06:41.820 --> 06:43.620
Jadi kita perlu rata-rata 13.

06:43.620 --> 06:49.320
Dan ketiga bukan 13:30 kita perlu rata-rata indeks yang akan menjadi apa yang kita sebagai tahun

06:49.320 --> 06:51.910
1 2 3 4 dan 7.

06:51.960 --> 06:56.910
Jadi saya hanya akan menyalin baris yang sama persis ini tanpa var di loop itu.

06:56.910 --> 06:58.980
Kami baru saja mendapat perantara baru.

06:59.010 --> 07:03.960
Jadi sekarang tengah akan menjadi apa lantai Matha empat dan tujuh.

07:03.960 --> 07:07.260
Jadi itulah yang 11 untuk lantai.

07:07.350 --> 07:14.030
Ini akan memberi kami 5 indeks dari 5 yang merupakan item ini di sini jadi ini akan menjadi perantara baru kami.

07:14.040 --> 07:16.440
Dan hanya untuk memverifikasi itu.

07:17.010 --> 07:25.220
Mari kita pindahkan baris ini ke dalam loop yang kita lihat apa yang kita dapatkan setiap kali melalui.

07:25.910 --> 07:26.440
BAIK.

07:26.610 --> 07:27.610
Jadi saya akan menjalankan ini sekarang.

07:27.690 --> 07:32.910
Biarkan saya menghapus nasihat saya membuat ini sedikit lebih besar.

07:34.290 --> 07:40.210
Dan sepertinya itu hanya berjalan sekali karena pada akhirnya kami mendapat jawaban yang benar.

07:40.320 --> 07:47.600
Jadi saya memilih contoh 15 terlalu mudah tetapi Anda akan melihat pada akhirnya 0 3 7 jadi itulah

07:47.640 --> 07:51.210
yang kita miliki dengan indeks 3 dan 7.

07:51.210 --> 07:55.370
Kemudian tambahkan pembaruan untuk beralih dari 4 ke 7 yang kami miliki di sini.

07:55.530 --> 07:57.220
Dan yang di tengah adalah lima.

07:57.390 --> 07:59.750
Dan apa yang Anda tahu itulah yang kami cari 15.

07:59.910 --> 08:04.250
Jadi kami keluar dari loop karena tengah sekarang sama dengan elemen.

08:04.290 --> 08:10.500
Sekarang jika saya memilih sesuatu yang lain saya akan mengatakan memilih 28 kali ini kita akan mendapatkan langkah ekstra.

08:10.780 --> 08:11.640
Dieksekusi lagi.

08:11.640 --> 08:14.500
Kita mulai dengan hal yang sama.

08:14.670 --> 08:16.860
Tapi kali ini 28 lebih besar dari sembilan.

08:16.950 --> 08:23.100
Jadi jendela kita sekarang adalah dari sini ke sini dan yang di tengah adalah 15 yang kami periksa dan itu

08:23.100 --> 08:23.720
terlalu kecil.

08:23.850 --> 08:26.150
Jadi kita punya iterasi lain.

08:26.790 --> 08:29.280
Dan dalam hal ini terlalu kecil.

08:29.280 --> 08:35.340
Jadi apa yang kita lakukan kita menggeser start ke atas lagi dan menyingkirkan M dan mulai sekarang pergi ke 28.

08:35.340 --> 08:39.540
Inilah Endace 30 di tengah kita.

08:39.540 --> 08:41.910
Ketika Anda mengambil rata-rata kita akan membulatkan ke bawah.

08:41.940 --> 08:43.880
Jadi perantara kami juga ada di sini.

08:44.300 --> 08:49.890
Jadi terlihat lebih seperti ini dan itu sekarang berarti bahwa kita sudah menebak angka dengan benar karena

08:49.980 --> 08:56.640
perantara kita adalah 28 dan Anda dapat melihat bahwa indeks Timur Tengah enam memulai indeks enam ini atau indeks Endace tujuh.

08:56.640 --> 08:57.840
Kami menemukannya.

08:58.110 --> 09:05.080
Jadi pada akhirnya apa yang harus kita lakukan untuk saat ini setidaknya hanya kembali tengah dan jika

09:05.080 --> 09:12.600
kita menguji semua ini atau mengembalikan enam indeks enam dan itu benar ketika kita mencari 28 kita sedang mencari lima

09:13.330 --> 09:14.430
Kami mengembalikan indeks 1.

09:14.440 --> 09:15.420
Itu benar.

09:15.430 --> 09:21.670
Ada masalah besar dengan kode kami dan masalahnya adalah jika tidak ada jika nomor tidak ditemukan di

09:21.670 --> 09:23.590
sana kode kami tidak menanganinya.

09:24.160 --> 09:31.350
Dan saya tidak akan melakukan ini sebenarnya saya merekam video ini sebelumnya dan saya benar-benar menunjukkan apa yang terjadi ada

09:31.360 --> 09:33.190
loop tak terbatas yang terjadi.

09:33.490 --> 09:35.590
Semoga kita akan melihat apakah Anda dapat menemukan alasannya.

09:35.800 --> 09:38.340
Tapi katakanlah saya sedang mencari 50 di sini.

09:38.440 --> 09:39.730
Kami tidak akan menemukan 50.

09:39.730 --> 09:45.310
Kode kami tidak menanganinya dan peramban terus berulang-ulang dan dengan perangkat lunak rekaman saya plus

09:45.310 --> 09:50.570
peramban melakukan itu komputer saya benar-benar tidak bahagia dan mendapat seperti seribu derajat.

09:50.620 --> 09:52.300
Jadi saya tidak akan mereplikasi di sini.

09:52.480 --> 09:57.040
Tetapi yang akan terjadi adalah bahwa pada dasarnya kita akan mendapatkan ribuan dan ribuan.

09:57.070 --> 10:03.190
Akhirnya itu akan dimatikan tetapi puluhan ribu iterasi jika tidak lebih karena kita tidak akan pernah

10:03.190 --> 10:04.500
menemukan elemen itu.

10:04.510 --> 10:11.350
Dan satu-satunya cara loop kita pernah berhenti adalah ketika kita menemukannya jika indeks tengah kita sama dengan elemen yang

10:11.560 --> 10:12.590
kita keluarkan.

10:12.850 --> 10:17.950
Tetapi nilai tengah dan berikutnya kami tidak akan pernah sama dengan atau item di indeks tengah

10:17.950 --> 10:23.120
tidak pernah sama dengan 50 atau 1 atau 14 atau angka apa pun yang tidak ada di sini.

10:23.140 --> 10:24.440
Ini akan berlangsung selamanya.

10:24.700 --> 10:26.700
Jadi apa kondisi berhentinya yang lain.

10:26.980 --> 10:32.230
Nah jika kita melihat apa yang terjadi ketika kita mendekati angka yang tidak ada di sana kita mulai kita melakukan hal yang sama

10:32.230 --> 10:32.820
dengan benar.

10:32.920 --> 10:35.910
To adalah awal atau nol kita adalah indeks kita.

10:36.000 --> 10:40.470
Ini adalah akhir kami 7 dan ini adalah tengah dan indeks kami 3.

10:40.510 --> 10:42.210
Yah kita periksa 50 lebih besar dari 9.

10:42.220 --> 10:45.070
Jadi kami memindahkan jendela ke sini seperti yang Anda lihat di sana.

10:45.250 --> 10:49.480
Jadi sekarang mulai kami memiliki 13 atau indeks hingga 7.

10:49.510 --> 10:53.970
Kami mengambil indeks tengah 5 dan 50 masih lebih besar dari 15.

10:54.160 --> 11:02.110
Jadi sekarang kita naik lagi dan ini jendela baru kita dan tengah kita 28 dan periksa ulang 50 lebih besar

11:02.110 --> 11:03.280
dari 28.

11:03.280 --> 11:03.910
Ini.

11:04.030 --> 11:09.130
Jadi seperti apa iterasi terakhir kita di sini atau seperti apa kelihatannya

11:09.130 --> 11:13.320
kita akan memindahkan awal menjadi menengah plus yang 30.

11:13.330 --> 11:19.530
Jadi kita berakhir dengan semuanya mulai dari tengah dan akhir semua pada 30 di akhir daftar.

11:19.960 --> 11:20.830
Lalu apa selanjutnya.

11:20.830 --> 11:26.220
Karena kode kami masih mengatakan Baiklah, tengah adalah 30, kami sedang mencari 50.

11:26.290 --> 11:33.190
Jadi kita perlu bergerak mulai naik satu dan tidak ada apa-apa setelah itu tetapi akan menambah awal

11:33.580 --> 11:39.370
kita atau menambah awal kita menjadi 8 pada titik yang di luar batas.

11:39.370 --> 11:44.530
Jadi jika kita mencoba melakukan susunan 8 kita akan terdefinisi dan kemudian kita

11:44.530 --> 11:50.320
akan mulai membandingkan hal-hal dengan undefined dan itu tidak baik dan itu akan terus berjalan selamanya

11:50.410 --> 11:51.510
Jadi kami tidak menginginkan itu.

11:51.550 --> 11:52.340
Baiklah.

11:52.360 --> 11:56.740
Saya akan menunjukkan kepada Anda apa yang terjadi dan komputer saya tidak akan bahagia.

11:56.740 --> 11:57.920
Kita mulai.

12:00.210 --> 12:05.490
Seperti yang Anda lihat, terus berjalan dan terus dan terus dan mulai.

12:05.510 --> 12:12.220
Sekarang tidak apa-apa saya kembali setelah komputer saya dan saya sangat senang dengan saya tetapi berhasil

12:12.380 --> 12:19.580
Jadi apa yang terjadi pada akhirnya adalah bahwa awal kita tengah dan bertemu dan kemudian kita mulai di atas awal kita

12:19.580 --> 12:21.540
diatur menjadi tengah plus satu.

12:21.560 --> 12:27.860
Jadi waktu berikutnya jika kita bekerja dengan start adalah 8 tengah tujuh di akhir sampai 7 jika

12:27.860 --> 12:34.400
kita pergi lagi kita memeriksa tengah yang masih 7 karena kita mengambil rata-rata delapan dan tujuh ini dan

12:34.400 --> 12:38.140
Anda lantai itu dan Anda masih terjebak dengan 7.

12:38.150 --> 12:40.770
Jadi tengah kami tidak akan bergerak dan tetap di 7.

12:41.180 --> 12:42.240
Lalu kita lanjutkan lagi.

12:42.260 --> 12:44.150
Apakah elemen kurang dari Array tengah.

12:44.150 --> 12:46.310
Tidak, ini lebih besar daripada karena kami sedang mencari 50.

12:46.330 --> 12:47.930
Jadi 50 lebih besar dari.

12:48.230 --> 12:52.910
Jadi kita dapat mulai sama dengan kelas menengah setelah awal adalah tujuh plus satu.

12:52.910 --> 12:58.490
Jadi kami tidak bergerak apa pun dan kami macet karena pada dasarnya kami telah mencapai akhir dan kami telah menyeberang

12:58.490 --> 12:59.910
jika itu masuk akal.

13:00.170 --> 13:04.330
Awal kami telah melampaui tujuan kami dan macet seperti itu.

13:04.340 --> 13:09.170
Kita akan terus menetapkan ini sebagai awal akan kita makan tengah akan 7 dan itu

13:09.170 --> 13:10.300
terus berjalan berulang-ulang.

13:10.580 --> 13:12.470
Jadi kamu mau berhenti.

13:12.710 --> 13:18.390
Anda ingin memastikan bahwa loop ini hanya berjalan sementara awal kami kurang dari atau sama dengan akhir.

13:18.980 --> 13:24.520
Jadi, segera setelah awal menjadi lebih besar atau akhirnya menjadi kurang maka kita punya masalah.

13:24.830 --> 13:26.250
Jadi hanya di sini saya akan lakukan.

13:26.490 --> 13:31.090
Dan kemudian kita hanya akan memeriksa awal kurang dari atau sama dengan.

13:31.700 --> 13:35.330
Dan sama seperti itu OK.

13:35.620 --> 13:36.690
Jadi kita sudah dekat sekarang.

13:36.760 --> 13:42.040
Dan jika saya jika saya menjalankan ini saat ini kami masih memiliki masalah yaitu bahwa kami mengembalikan tengah bahkan jika

13:42.040 --> 13:43.000
kami tidak menemukannya.

13:43.180 --> 13:47.780
Sekarang kami tidak mengulang selamanya, tetapi mengembalikan indeks 7 karena di situlah kami berhenti tepat.

13:47.830 --> 13:50.140
Itu poin terakhir kami di sini.

13:50.140 --> 13:55.370
Jadi indeks 7 tetapi itu tidak berhasil karena 50 jelas bukan indeks 7.

13:55.390 --> 13:57.640
Jadi sekarang kita hanya perlu menambahkan sedikit cek di akhir.

13:57.700 --> 13:58.930
Anda ingin memeriksa.

13:58.930 --> 14:05.320
Pada dasarnya jika sinar tengah sama dengan apa yang kita cari

14:08.410 --> 14:13.740
seperti itu jika itu maka kita kembali tengah.

14:14.000 --> 14:18.020
Jika kita ingin kembali, kita akan mengembalikan yang negatif.

14:18.070 --> 14:19.400
Saya pikir apa yang kami katakan benar.

14:19.660 --> 14:20.770
Ya itu.

14:21.120 --> 14:25.810
Jadi itu masuk akal jadi kami memeriksa jika item tengah di indeks tengah adalah apa yang

14:25.810 --> 14:30.220
kami cari harus melakukan triple sama dengan akan kembali tengah jika tidak kembali negatif 1.

14:30.220 --> 14:32.610
Jadi sekarang kita mendapatkan negatif 1.

14:32.860 --> 14:40.210
Tetapi jika kita mencari 5 itu memberi kita satu jika kita mencari sembilan hanya tiga jika kita mencari yang

14:40.750 --> 14:44.380
negatif kita mendapatkan negatif 1 negatif 10 masih negatif.

14:44.980 --> 14:45.820
BAIK.

14:45.970 --> 14:49.900
Jadi beberapa hal kecil yang bisa kita lakukan jika kita mau.

14:50.230 --> 14:54.360
Pertama-tama kita bisa menyingkirkan kontra. log Anda tidak perlu itu.

14:54.880 --> 14:57.740
Selanjutnya kita dapat menyingkat beberapa pernyataan bersyarat ini.

14:58.030 --> 15:04.930
Jadi saya akan menduplikasi solusi ini karena beberapa orang ingin memiliki versi yang lebih panjang tetapi saya juga

15:04.930 --> 15:10.750
akan melakukan versi yang lebih pendek di mana kita pada dasarnya menghilangkan banyak spasi

15:10.750 --> 15:17.540
putih seperti ini untuk melakukan pernyataan IF baris tunggal dan kemudian yang lain tidak juga butuh kurung.

15:17.590 --> 15:22.600
Jadi ada satu pengurangan beberapa garis dan kemudian kita juga bisa meletakkan semua ini

15:22.600 --> 15:25.150
pada satu baris menggunakan operator ternary.

15:25.360 --> 15:26.730
Sehingga terlihat seperti ini.

15:26.840 --> 15:33.580
Atau satu kemungkinan ada dua implementasi sehingga Anda bisa melakukan array kembali.

15:33.910 --> 15:36.820
Tengah sama dengan elemen.

15:36.820 --> 15:38.230
Jika itu benar.

15:38.440 --> 15:40.000
Jadi kita perlu tanda tanya ini.

15:40.000 --> 15:42.570
Kita akan mengembalikan tanda titik dua.

15:42.670 --> 15:44.260
Lain yang berubah negatif 1.

15:44.320 --> 15:49.030
Jika Anda belum melihat sintaks cara Anda membaca ini dikembalikan hasil dari semua ini.

15:49.030 --> 15:54.820
Pertama-tama dan hasilnya akan tergantung pada apakah array tengah sama dengan elemen sehingga

15:54.820 --> 16:00.340
jika array tengah sama dengan Elemen return tengah lagi menghasilkan negatif 1.

16:00.340 --> 16:02.320
Jadi coba saja lagi.

16:02.580 --> 16:03.930
Sepertinya itu berfungsi.

16:04.030 --> 16:11.010
Mari kita masukkan angka yang ada di sana seperti 30 dan kita diindeks 7 dan 13 mendapatkan indeks 4.

16:11.050 --> 16:13.370
Jika kita menemukannya di 103 kita mendapatkan negatif 1.

16:13.730 --> 16:14.280
BAIK.

16:14.320 --> 16:15.630
Jadi itu solusi kami yang lebih singkat.

16:15.640 --> 16:17.440
Semua yang kami lakukan logika adalah sama.

16:17.440 --> 16:21.300
Kami baru saja menyingkirkan beberapa tanda kurung tambahan dan lebih lama jika pernyataan.

16:21.610 --> 16:22.930
Jadi kami berhasil lewat sana.

16:23.170 --> 16:25.010
Semoga masuk akal bagaimana ini semua bekerja.

16:25.030 --> 16:27.820
Dan sekarang kita beralih ke beberapa algoritma pencarian lainnya.

16:27.820 --> 16:30.550
Jadi perlu diingat ini berfungsi baik pada array yang diurutkan.

16:30.550 --> 16:31.840
Kalau tidak, itu tidak berguna.

16:32.050 --> 16:34.380
Jadi linear adalah yang terbaik yang bisa kita lakukan.

16:34.440 --> 16:35.910
Yah kami melihat beberapa video yang lalu.

16:35.920 --> 16:39.160
Adalah yang terbaik yang bisa kita lakukan pada binary array yang tidak disortir

16:39.160 --> 16:39.910
Bagus sekali.

16:39.910 --> 16:41.020
Jika data kami diurutkan.
