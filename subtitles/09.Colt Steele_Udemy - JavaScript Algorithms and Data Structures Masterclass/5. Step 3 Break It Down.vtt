WEBVTT

00:00.210 --> 00:00.780
Selamat datang kembali.

00:00.810 --> 00:02.100
Jadi mari kita beralih ke bagian tiga.

00:02.100 --> 00:05.320
Langkah ketiga untuk memecahkan masalah atau setidaknya berusaha.

00:05.370 --> 00:06.650
Jadi kami mengerti masalahnya.

00:06.660 --> 00:09.160
Kami mengeksplorasi contoh nyata.

00:09.180 --> 00:15.690
Sekarang sebelum kita mulai mengetik kode saya ingin memecahnya dan saya benar-benar suka melakukannya sepertinya saya tidak

00:15.690 --> 00:18.090
mulai menari di tengah-tengah wawancara.

00:18.150 --> 00:18.830
Saya memecahnya.

00:18.830 --> 00:23.460
Maksud saya mengambil langkah sebenarnya dari masalah dan menuliskannya.

00:23.650 --> 00:27.810
Tidak harus kode pseudo penuh itu tidak harus valid Anda tahu sintaks.

00:27.810 --> 00:32.610
Saya suka melakukan sedikit komentar sebagai panduan untuk langkah-langkah yang perlu mereka ambil terutama dalam

00:32.610 --> 00:33.340
pengaturan wawancara.

00:33.360 --> 00:38.850
Ini sangat penting yang dicari oleh banyak pewawancara adalah Anda tahu Anda harus mengomunikasikan apa yang Anda

00:38.850 --> 00:39.230
lakukan.

00:39.240 --> 00:43.800
Anda tidak ingin langsung mengetik atau mulai menulis kode di papan tulis secara diam-diam

00:43.800 --> 00:46.650
dengan alis Anda mengerut dengan marah menulis kode.

00:46.650 --> 00:50.220
Jauh lebih baik untuk mengatakan Baiklah, inilah langkah-langkah yang akan saya coba dan ambil.

00:50.250 --> 00:53.650
Anda tahu kadang-kadang Anda bisa mendapatkan sedikit petunjuk yang bisa Anda masukkan.

00:53.840 --> 00:58.140
Apakah Anda pikir itu akan berhasil atau Anda tahu apakah itu terdengar gila bagi Anda atau mungkinkah ini cara yang

00:58.140 --> 00:59.000
tepat untuk melakukannya?

00:59.190 --> 01:01.350
Dan kadang-kadang mereka akan memberi Anda sedikit petunjuk.

01:01.440 --> 01:03.670
Jadi memecahnya bisa sangat penting.

01:03.690 --> 01:07.490
Jadi saya sarankan secara eksplisit menuliskan langkah-langkah yang perlu Anda ambil.

01:07.500 --> 01:11.370
Tidak harus satu ton detail, tidak harus baris demi baris setiap baris yang

01:11.640 --> 01:14.340
Anda butuhkan untuk menulis hanya komponen dasar dari solusi.

01:14.340 --> 01:19.650
Jadi ini memaksa Anda untuk berpikir tentang kode Anda sebelum Anda benar-benar menulisnya sehingga Anda tidak hanya

01:19.680 --> 01:21.710
Freewheelin dan mencoba membuatnya dengan cepat.

01:21.900 --> 01:27.810
Dan itu juga membantu Anda menangkap atau mencari tahu pertanyaan yang masih ada atau Anda tahu bagian-bagian

01:27.810 --> 01:30.320
yang Anda takuti yang tidak Anda mengerti.

01:30.330 --> 01:33.260
Jadi itu sebabnya saya sangat merekomendasikan melakukan ini.

01:33.270 --> 01:37.730
Ini membantu Anda hanya meletakkan langkah-langkah Anda dan itu selalu menyenangkan dan membantu Anda tetap fokus.

01:37.770 --> 01:42.400
Tetapi juga membantu Anda menyoroti masalah yang mungkin masih belum Anda yakini.

01:42.630 --> 01:45.690
Dan kemudian Anda bisa langsung masuk dan mulai menulis kode.

01:45.690 --> 01:47.610
Jadi saya akan tunjukkan seperti apa rupanya.

01:47.610 --> 01:52.210
Jika saya harus memecah masalah yang sama ini menulis fungsi yang mengambil string dan mengembalikan jumlah

01:52.230 --> 01:53.750
setiap karakter dalam string.

01:53.750 --> 01:55.890
Ini masalah yang sama dari sebelumnya.

01:55.890 --> 01:56.150
Baiklah.

01:56.160 --> 01:59.740
Jadi saya punya selembar kertas atau papan tulis atau apa pun itu dalam wawancara saya.

01:59.820 --> 02:06.330
Saya telah menulis beberapa contoh dan sekarang saya akan mengetikkan kerangka fungsi saya sehingga kami akan menyebutnya

02:06.330 --> 02:10.790
Char count dan kami tahu Anda tahu itu menerima string.

02:10.860 --> 02:16.800
Ini disebut sebagai TR dan kemudian berhenti dengan kode aktual dan saya akan mulai menulis beberapa komentar.

02:16.800 --> 02:18.500
Kita akan memecahnya sendiri.

02:18.720 --> 02:23.880
Dan hal paling sederhana yang bisa kita mulai adalah hanya melakukan sesuatu dan kemudian menambahkan nilai pengembalian

02:23.880 --> 02:28.060
kita mengembalikan objek dengan kunci yang merupakan karakter alfanumerik huruf kecil dalam string.

02:28.080 --> 02:33.540
Jadi hanya untuk memperjelas saya memutuskan atau pewawancara saya memutuskan bahwa kita hanya perlu peduli dengan

02:33.540 --> 02:35.700
karakter alfanumerik huruf kecil juga.

02:35.730 --> 02:39.570
Jadi itu berarti Anda tahu dalam contoh ini nomor PIN Anda adalah 1 2 3 4.

02:39.660 --> 02:45.570
Kami melacak nomor dan kami melacak semua huruf tetapi hanya huruf kecil

02:45.750 --> 02:48.230
jadi p i n pin.

02:48.330 --> 02:55.190
Kami akan menjaga Anda tahu satu huruf kecil P untuk huruf kecil I ini di sini dan di sini.

02:55.260 --> 02:55.750
BAIK.

02:56.100 --> 02:59.060
Jadi kita bisa mulai dengan sesuatu yang sederhana seperti ini.

02:59.130 --> 03:01.170
Masukkan nilai pengembalian kami di sana.

03:01.770 --> 03:05.100
Saya akan menduplikasi ini dan mengembangkannya.

03:05.100 --> 03:08.040
Jadi jika kita memikirkan langkah sebenarnya dari apa yang ingin kita lakukan.

03:08.280 --> 03:12.420
Kita perlu melakukan sesuatu sekali untuk setiap karakter dalam string.

03:12.420 --> 03:12.840
Kanan.

03:12.850 --> 03:15.660
Kita akan membahasnya di beberapa titik.

03:15.660 --> 03:19.940
Kita juga perlu membuat objek yang akan kita kembalikan di bagian paling akhir.

03:19.950 --> 03:23.010
Benar bahwa sederhana kita perlu membuat hal yang kita akan kembali.

03:23.010 --> 03:24.930
Kita harus mengembalikannya di akhir.

03:25.050 --> 03:31.050
Tetapi sebagian besar logika melibatkan perulangan setiap karakter dalam string kita dan melakukan sesuatu.

03:31.110 --> 03:37.030
Jadi saya mungkin mulai mari kita singkirkan ini dan sederhanakan ini.

03:37.080 --> 03:43.970
Saya akan mulai dengan sesuatu seperti membuat objek untuk kembali dan kemudian setelah itu saya tidak akan

03:43.980 --> 03:50.330
melakukan loop over string dan kami akan kembali dan mengisi detail dan kemudian mengembalikan objek.

03:50.330 --> 03:56.680
Dan sekarang kami memiliki langkah-langkah yang sangat mendasar dan kami dapat Anda ketahui mengisi bagian yang kosong.

03:56.730 --> 04:00.210
Tetapi perulangan string jelas merupakan bagian terbesar dari logika kita.

04:00.240 --> 04:01.700
Jadi apa yang perlu kita lakukan.

04:01.920 --> 04:06.600
Jika kita mengulangi string, kita tahu bahwa kita perlu melihat setiap karakter dan mari

04:06.600 --> 04:10.300
kita mulai dengan mengapa kita perlu melihat mengapa dan huruf kecil.

04:10.380 --> 04:13.310
Jadi kita tahu kita bisa mengurangi seluruh string di awal.

04:13.310 --> 04:14.250
Itu salah satu opsi.

04:14.550 --> 04:16.570
Atau kita dapat mengecilkan setiap karakter saat kita pergi.

04:16.650 --> 04:21.290
Tapi kita akan mulai dengan melihat karakter ini dan apa yang kita lakukan kita periksa.

04:21.390 --> 04:27.570
Nah, apakah ada di objek kita yang siap dan secara teknis itu akan mulai kosong sehingga tidak ada

04:27.570 --> 04:28.410
di sana.

04:28.410 --> 04:32.640
Jadi kita akan menambahkan mengapa alih-alih dihitung menjadi 1.

04:32.790 --> 04:37.040
Tetapi jika sudah ada y di objek itu maka kita akan menambahkan 1 untuk itu.

04:37.290 --> 04:44.820
Jadi itu benar-benar perulangan logika string untuk setiap karakter.

04:44.820 --> 04:57.280
Kemudian kita akan melakukan sesuatu seperti jika saya hanya akan melakukan char di objek kita, katakanlah adalah kunci di Object

04:57.280 --> 05:07.380
tambahkan satu untuk menghitung jika karakter tidak ada di objek kita dan set nilai menjadi satu.

05:07.840 --> 05:14.890
Jadi itu masuk akal meskipun ini tidak memperhitungkan fakta bahwa kita hanya peduli pada karakter alfanumerik sehingga ruang yang

05:15.220 --> 05:20.010
tidak akan kita tambahkan pada tanda seru yang tidak akan kita tambahkan.

05:20.010 --> 05:21.650
Jadi kita harus mengklarifikasi itu.

05:21.730 --> 05:29.530
Kita harus mengatakan jika karakter adalah angka yang memangkas huruf dan merupakan kunci dan atau objek yang ingin saya hitung

05:29.860 --> 05:31.650
jika karakternya adalah a.

05:31.720 --> 05:34.690
Surat slash dan bukan di objek kami.

05:34.690 --> 05:43.600
Tambahkan ke objek dan atur nilainya menjadi satu dan kemudian kalau tidak kita akan mengatakan seperti jika karakter adalah

05:43.600 --> 05:50.040
sesuatu yang lain periode ruang dll. jangan lakukan apapun.

05:50.560 --> 05:53.590
Dan kemudian pada akhirnya kami mengembalikan objek kami.

05:53.590 --> 05:55.720
Jadi kami membuat objek kami di awal.

05:55.720 --> 05:57.900
Lalu kita pergi karakter demi karakter.

05:58.060 --> 05:59.360
Kami memiliki logika utama kami.

05:59.380 --> 06:06.280
Ini hanya akan menjadi sebuah loop untuk sebuah loop dan kemudian kita akan melihat setiap karakter untuk memastikan pastikan

06:06.310 --> 06:07.450
apakah itu alfanumerik.

06:07.480 --> 06:12.050
Apakah itu angka atau huruf jika itu maka kita akan menambahkannya ke objek kita.

06:12.190 --> 06:19.210
Dan itu berarti menambah bagian yang ada dari suatu objek atau menambahkan ke dalam objek dan mengatur

06:19.210 --> 06:20.760
nilainya menjadi satu.

06:20.920 --> 06:23.170
Dan jika itu bukan alfanumerik, kami hanya tidak melakukan apa-apa.

06:23.170 --> 06:27.830
Jadi kita membangun objek kita satu karakter pada satu waktu dan kemudian kita mengembalikannya di akhir.

06:28.230 --> 06:34.390
Dan sekarang setelah kita memiliki langkah-langkah dasar ini kita sekarang dapat mengisi bagian yang kosong dan saya sangat menyarankan Anda tahu ini adalah

06:34.390 --> 06:35.740
masalah yang lebih sederhana.

06:35.740 --> 06:40.150
Beberapa dari Anda mungkin bisa memiliki banyak dari Anda mungkin bisa menyelesaikan ini tanpa harus

06:40.210 --> 06:45.220
melakukan ini, Anda tahu kode semu dan ini bahkan bukan kode pseudo penuh tetapi hanya menulis komentar ini.

06:45.280 --> 06:51.220
Tetapi untuk masalah yang lebih rumit, ini benar-benar bisa menjadi penyelamat karena jika Anda menulis langkah-langkah terutama dalam wawancara Anda

06:51.220 --> 06:55.480
menulis langkah-langkah Anda tahu apa yang perlu Anda lakukan bahkan jika Anda tidak yakin bagaimana

06:55.480 --> 06:56.370
cara mencapainya.

06:56.380 --> 07:01.870
Ini menunjukkan kepada pewawancara Anda bahwa Anda setidaknya telah merumuskan suatu pendekatan dan jika Anda kehabisan waktu

07:01.870 --> 07:07.100
dan Anda hanya berada di tengah jalan tetapi Anda harus merencanakan apa yang akan Anda lakukan.

07:07.120 --> 07:11.890
Jadi seperti jika kita berhenti di sini misalnya, ini adalah masalah pendek tetapi katakanlah di sinilah kita kehabisan waktu.

07:11.920 --> 07:13.810
Semuanya diimplementasikan dalam kode.

07:13.960 --> 07:18.800
Jika kami memiliki catatan-catatan ini di sini, pewawancara kami dapat melihat bahwa kami tahu ke mana

07:18.800 --> 07:24.530
kami akan pergi atau kami memiliki gagasan umum dan itu seringkali dapat membuat perbedaan dalam menunjukkan bahwa Anda tahu kompeten.

07:25.000 --> 07:26.490
Bahkan jika Anda tidak menyelesaikan masalah.

07:26.530 --> 07:31.090
Saya telah melihat banyak orang mendapatkan pekerjaan yang tidak Anda tahu mereka pikir mereka gagal wawancara karena mereka

07:31.090 --> 07:32.160
tidak menyelesaikan masalah.

07:32.170 --> 07:34.660
Mereka tidak memiliki nilai pengembalian yang tepat pada akhirnya.

07:34.660 --> 07:39.880
Tetapi seringkali masalah ini dibuat sedemikian sulit atau memakan waktu sehingga Anda tidak seharusnya

07:39.880 --> 07:40.260
menyelesaikannya.

07:40.270 --> 07:42.500
Dan ini benar-benar tentang melihat proses Anda.

07:42.550 --> 07:44.790
Jadi itulah semua ini tentang prosesnya.
