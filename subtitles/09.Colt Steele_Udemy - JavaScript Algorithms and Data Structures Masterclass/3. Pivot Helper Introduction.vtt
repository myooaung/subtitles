WEBVTT

00:00.150 --> 00:00.780
Selamat datang kembali.

00:00.780 --> 00:03.800
Dan video ini akan membaca bagian pertama quicksort.

00:03.900 --> 00:05.000
Sama seperti dengan semacam penggabungan.

00:05.010 --> 00:07.050
Kami menerapkan pembantu gabungan.

00:07.050 --> 00:09.380
Pertama kita akan melakukan hal yang sama di sini.

00:09.480 --> 00:12.540
Anda mungkin mendengar ini disebut partisi atau pivot.

00:12.630 --> 00:13.570
Itu melakukan hal yang sama.

00:13.620 --> 00:18.270
Jadi kita akan menulis sebuah fungsi yang memberikan sebuah array, ia menunjuk sebuah elemen sebagai titik pivot dan

00:18.270 --> 00:20.270
itu harus mengatur ulang elemen-elemen dalam array.

00:20.280 --> 00:22.960
Jadi pada dasarnya ini yang sudah saya katakan sebelumnya.

00:23.100 --> 00:24.210
Dan di depan slide.

00:24.240 --> 00:25.360
Kejutan kejutan.

00:25.360 --> 00:29.040
Semua nilai kurang dari pivot dipindahkan ke kiri dan semua nilai lebih besar dari pivot dipindahkan

00:29.040 --> 00:29.730
ke kanan.

00:30.060 --> 00:32.500
Tetapi urutan di kedua sisi tidak masalah.

00:32.510 --> 00:36.740
Itu hanya perlu lebih sedikit dari pivot dan lebih besar dari pivot di sisi kanan.

00:36.870 --> 00:41.100
Tetapi di dalam kiri dan kanan tidak masalah urutan apa yang ada di dalamnya.

00:41.130 --> 00:44.880
Jadi hal lain yang sangat penting adalah bahwa penolong ini harus melakukannya di tempat.

00:44.880 --> 00:51.690
Jadi seharusnya tidak membuat array baru dan mengembalikan indeks pivot sehingga mengembalikan indeks.

00:51.690 --> 00:54.840
Itu melakukan semuanya di tempat jadi jangan membuat array baru untuk melakukannya.

00:54.840 --> 00:59.500
Jadi, hal pertama yang harus dibahas dalam memilih pivot sebenarnya adalah keputusan penting.

00:59.610 --> 01:03.550
Runtime quicksort dapat berubah tergantung dari mana Anda memilih pivot.

01:03.660 --> 01:05.770
Idealnya itu harus dipilih.

01:05.840 --> 01:07.940
Ini nilai median dalam dataset.

01:07.980 --> 01:12.990
Jika itu masuk akal jika kita harus jika kita bisa mendapatkannya dengan sempurna, kita akan memilih nilai tengah dari data

01:12.990 --> 01:15.730
yang diurutkan kita sehingga sisi kiri dan kanan akan sama.

01:16.080 --> 01:20.940
Tapi itu tidak mudah dilakukan jika kita tidak tahu apa data itu sendiri dan bagaimana cara memesannya.

01:20.940 --> 01:22.820
Itulah intinya kami mencoba memesannya.

01:23.100 --> 01:28.750
Jadi ada strategi lain yang Anda pilih elemen pertama atau yang terakhir atau elemen tengah atau acak.

01:29.130 --> 01:34.260
Demi kesederhanaan dalam video ini kita hanya akan selalu memilih inden untuk menjadi elemen pertama yang benar-benar

01:34.650 --> 01:39.180
memiliki beberapa konsekuensi dengan sejauh-O besar yang akan kita bicarakan nanti tetapi kita akan memilih

01:39.180 --> 01:41.440
saja elemen pertama yang membuatnya sederhana.

01:41.460 --> 01:44.470
Jadi begini caranya, inilah cara kerjanya.

01:44.550 --> 01:51.270
Jika ini adalah array kami dan kami memanggil fungsi pivot kami dari array itu, ia harus mengembalikan indeks 4.

01:51.300 --> 01:52.900
Jadi perhatikan itu tidak mengembalikan array.

01:53.130 --> 01:55.950
Tetapi jika kita melihat array itu sudah berubah.

01:55.950 --> 01:58.770
Salah satu dari konfigurasi ini adalah valid.

01:58.770 --> 02:02.330
Jadi yang dilakukan adalah mengambil elemen pertama dan memilihnya sebagai poros.

02:02.340 --> 02:08.850
Jadi 5 dan sekarang perlu mengatur ulang array sehingga 5 berada di tempat yang benar di mana setiap angka di sebelah

02:08.850 --> 02:10.330
kiri kurang dari 5.

02:10.470 --> 02:15.630
Jadi jika kita melihat semua contoh ini yang bisa menjadi nilai array, tidak masalah urutannya jika kita memiliki 2 dari

02:15.630 --> 02:20.400
1 dan 4 dari 3 atau 1 dari empat lalu tiga lalu dua lalu dua dan seterusnya.

02:20.460 --> 02:26.700
Selama kita memiliki satu dua tiga dan empat di sisi ini dan kemudian di sisi lain kita memiliki enam

02:26.700 --> 02:28.290
tujuh delapan dalam urutan.

02:28.290 --> 02:30.630
Sekarang ini bukan semua opsi yang memungkinkan.

02:30.660 --> 02:34.310
Saya hanya tidak ingin pergi dan daftar setiap kombinasi yang mungkin keluar.

02:34.470 --> 02:37.660
Tetapi penting untuk dicatat bahwa tidak masalah untuk kode kita.

02:37.740 --> 02:40.570
Apa yang sebenarnya kita miliki di sisi kiri atau SUV.

02:40.590 --> 02:45.140
Apa pun yang kita miliki, tidak masalah urutan apa pun yang ada di sisi itu.

02:45.570 --> 02:47.040
Jadi ini semua bisa diterima.

02:47.040 --> 02:54.740
Yang penting adalah 5 berada di tempat yang benar dan kami mengembalikan indeks yang untuk 0 1 2 3 4.

02:54.750 --> 03:00.510
Jadi ini pada dasarnya mengatakan dalam jika array diurutkan akhir jika Anda terus melakukan ini di sebelah

03:00.510 --> 03:05.850
kiri dan kanan berulang-ulang berada di posisi terakhir ini di mana ia akan berada.

03:05.850 --> 03:07.160
Setelah Anda mengurutkan data.

03:07.320 --> 03:07.650
BAIK.

03:07.680 --> 03:09.390
Jadi, inilah kode semu.

03:09.810 --> 03:11.660
Setidaknya ada satu versi.

03:11.940 --> 03:18.450
Jadi, tulis fungsi, panggil pivot atau partisi dan terima tiga argumen, yakni indeks awal dan

03:18.450 --> 03:19.710
indeks akhir.

03:19.740 --> 03:26.390
Dan saya harus memulai default ke 0 dan akhir default ke panjang array minus 1.

03:26.570 --> 03:32.090
Lalu kita hanya akan memilih pivot dari awal array, ingat dan kita bisa mengubahnya menjadi dari

03:32.090 --> 03:34.430
tengah atau akhir atau tempat acak.

03:34.430 --> 03:39.740
Tetapi demi kesederhanaan kami memilih dari awal dan kemudian menyimpan indeks pivot saat ini dalam sebuah

03:39.770 --> 03:40.400
variabel.

03:40.400 --> 03:45.260
Jadi ini akan melacak di mana kita akan menukar pivot itu sampai akhir.

03:45.620 --> 03:50.380
Jadi saya akan membahas selanjutnya hanya dalam satu detik pada visual saya akan pergi dan menunjukkan kepada Anda apa yang saya maksud.

03:50.480 --> 03:55.280
Tapi kita akan mengulang array dari awal sampai akhir dan jika pivot lebih besar

03:55.280 --> 03:59.810
dari elemen yang kita lihat kita akan menambah variabel indeks pivot dari dermaga dan

03:59.810 --> 04:05.450
kemudian menukar elemen saat ini dengan elemen pada indeks pivot jadi itu mimpi buruk mencoba untuk hanya

04:05.540 --> 04:06.880
membaca kode pseudo.

04:07.010 --> 04:09.090
Tapi itu masuk akal karena saya menunjukkan contoh.

04:09.200 --> 04:14.930
Dan kemudian kita pada akhirnya kita menukar pivot yang kita mulai dengan indeks pivot.

04:15.200 --> 04:16.700
Dan kemudian kita kembalikan indeks pivot.

04:16.700 --> 04:19.130
Jadi daripada hanya berbicara tentang teks.

04:19.190 --> 04:20.570
Mari kita lihat.

04:20.600 --> 04:24.570
Jadi pada awalnya kita akan memilih elemen pertama untuk menjadi poros kita.

04:24.590 --> 04:32.000
Kita mulai pada 28 lalu apa yang kita lakukan adalah mengulang setiap elemen lainnya dan kita membandingkan 28 hingga 41 pada kasus

04:32.000 --> 04:32.540
pertama.

04:32.690 --> 04:33.560
Empat puluh satu lebih besar.

04:33.560 --> 04:34.970
Jadi kami sebenarnya tidak melakukan apa-apa.

04:36.610 --> 04:38.010
Tapi kemudian kita sampai ke 4.

04:38.020 --> 04:39.590
28 lebih besar dari empat.

04:39.640 --> 04:45.620
Jadi kita tahu bahwa kita perlu memiliki empat di sisi kiri 28 dan kita hanya akan membuat catatan mental.

04:45.640 --> 04:50.710
Kita akan memiliki variabel yang disebut indeks Pivot dan itu akan melacak berapa banyak hal yang

04:51.040 --> 04:55.560
kurang dari 28 sehingga kita dapat menukar 28 di akhir ke tempat yang benar.

04:55.570 --> 05:00.250
Jadi kami pindah empat dan kemudian kami memiliki indeks pivot yang saat ini akan sama dengan

05:00.250 --> 05:01.180
indeks 1.

05:01.210 --> 05:06.250
Jadi jika tidak ada dalam Abaikan segala sesuatu di sisi lain dari era jika

05:06.640 --> 05:13.540
tidak ada yang lain kita tahu bahwa 28 perlu berada di posisi ini pada akhirnya sehingga 4 bisa kurang dari

05:14.220 --> 05:22.290
tetapi jika kita terus berjalan 11 juga kurang 28 jadi kita akan menukar itu dengan 41 dan sekarang menambah indeks pivot dengan 1.

05:22.300 --> 05:23.070
Jadi sekarang kita tahu.

05:23.080 --> 05:23.500
BAIK.

05:23.590 --> 05:24.850
Ada dua hal.

05:24.880 --> 05:27.540
Kurang dari 28

05:27.880 --> 05:28.670
Pergi Lagi.

05:28.780 --> 05:29.800
Whoops tidak mengkliknya.

05:29.800 --> 05:31.450
Ini dia 16 yang kurang.

05:31.450 --> 05:32.110
Jadi kami bertukar.

05:32.110 --> 05:33.770
Dan sekarang kita tahu ada tiga hal yang kurang.

05:33.770 --> 05:36.070
Kemudian kami bertukar.

05:36.070 --> 05:41.260
Ada empat variabel variabel, ada empat potong data dalam array ini, empat elemen kurang dari

05:41.260 --> 05:42.280
pivot kami.

05:42.850 --> 05:43.350
Nggak.

05:43.420 --> 05:45.440
OK, inilah yang kelima kita tukar.

05:45.460 --> 05:47.700
Kami pergi lagi dan lagi dan lagi.

05:47.980 --> 05:50.630
Dan inilah elemen keenam kami yang kurang dari 28.

05:50.680 --> 05:51.850
Jadi kami bertukar.

05:51.850 --> 05:55.610
Sekarang kita telah mencapai akhir dan kita memiliki variabel indeks pivot ini.

05:55.630 --> 06:00.610
Catatan mental ini saya sebutkan dan sekarang sama dengan 6 karena setiap kali kami menemukan elemen kurang

06:00.640 --> 06:02.920
dari 28 kami menambahkan 1 ke dalamnya.

06:02.920 --> 06:06.020
Jadi kita punya 1 2 3 4 5 6.

06:06.040 --> 06:11.070
Ini memberitahu kita bahwa kita perlu menukar elemen pada indeks 6 dengan pivot kita yang ada di awal.

06:11.290 --> 06:13.680
Dan jika kita melakukannya di sana kita pergi.

06:13.910 --> 06:15.450
Sekarang kita sudah selesai.

06:15.760 --> 06:18.470
Yang harus kita lakukan adalah mengembalikan indeks ini.

06:18.470 --> 06:22.910
Jadi semua yang ada di sebelah kiri kurang dari semua yang di sebelah kanan lebih besar dari kode semu

06:22.910 --> 06:24.330
itu sendiri tidak terlalu membantu.

06:24.440 --> 06:29.120
Tetapi jika Anda melihat berdampingan dengan sesuatu seperti ini di mana Anda melangkah melewatinya, saya pikir itu bisa

06:29.120 --> 06:29.590
membantu.

06:29.600 --> 06:32.240
Jadi, teruskan dan implementasikan ini jika Anda mau.

06:32.240 --> 06:36.030
Sekali lagi itu tidak semudah itu tetapi mencobanya jika Anda ingin bertahan.

06:36.050 --> 06:41.170
Saya akan melakukan satu contoh walkthrough lagi, tetapi saya tahu itu bisa membosankan jika Anda mengerti semuanya.

06:41.210 --> 06:42.200
Dan kamu siap untuk pergi.

06:42.200 --> 06:42.880
Atau apakah Anda bosan.

06:42.890 --> 06:45.920
Silakan dan lewati ini tapi saya akan taruh di sini untuk latihan ekstra.

06:45.920 --> 06:48.060
Data baru awal.

06:48.080 --> 06:50.580
Kami memilih titik pivot kami pada hal pertama.

06:50.600 --> 06:51.460
26.

06:51.620 --> 06:53.600
Sekarang kita membandingkannya dengan setiap elemen lainnya.

06:53.660 --> 06:55.260
23 kurang dari 26.

06:55.280 --> 06:57.020
Jadi kita akan melacak itu.

06:57.050 --> 07:02.210
Kita perlu memiliki kita memiliki indeks counter pivot dan kita tahu pada akhirnya kita

07:02.210 --> 07:04.950
harus menukar 26 dengan indeks satu.

07:05.450 --> 07:06.950
Kita sampai 27 yang lebih besar dari itu.

07:06.990 --> 07:09.070
Kami tidak melakukan apa pun yang lebih besar dari lagi.

07:09.410 --> 07:11.520
Sekarang kita sampai 17 yang kurang dari.

07:11.620 --> 07:19.640
Jadi yang kita lakukan adalah kita menukar dengan 27 dalam hal ini dan kemudian kita akan menambah indeks pivot kita satu kali.

07:19.640 --> 07:21.410
Sekarang kita tahu ada dua hal.

07:21.410 --> 07:22.370
Kurang dari 26

07:22.400 --> 07:23.910
Jadi kita perlu bertukar pada akhirnya.

07:24.050 --> 07:30.440
Jadi 26 ada di sini di mana 17 saat ini kita lalui lagi yang lebih besar dari kelas lebih besar

07:30.440 --> 07:38.210
kemudian lebih besar dari lebih besar maka akhirnya kita sampai ke yang kurang dari dan kita bertukar dengan 44 dan sekarang kita menambah indeks

07:38.210 --> 07:39.850
pivot dengan 1 lagi.

07:39.860 --> 07:41.620
Jadi sekarang jam 3.

07:41.630 --> 07:47.180
Jadi pada akhir kode kita kita akan menukar pivot dan indeks nol dengan indeks pivot yaitu

07:47.180 --> 07:49.240
3 0 1 2 3

07:49.280 --> 07:53.450
Jadi kami bertukar kedua hal ini dan Whyalla.

07:53.520 --> 07:57.100
Sekarang kita memiliki sisi kiri dengan benar partisi dan sisi kanan.

07:57.150 --> 08:03.210
Jadi 2006 adalah bahwa tempat yang benar dalam kode kita harus mengembalikan indeks 3 yang mengatakan bahwa tempat yang

08:03.210 --> 08:06.110
benar untuk 26 dalam array ini adalah indeks 3.
