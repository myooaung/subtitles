WEBVTT

00:00.220 --> 00:03.200
OK jadi mari kita menulis semacam gabungan kita sendiri.

00:03.540 --> 00:06.150
Jadi saya punya cuplikan baru lagi.

00:06.270 --> 00:12.840
Saya memiliki fungsi gabungan kami yang berfungsi dari dua video sehingga kami dapat menyingkirkan baris ini untuk saat ini.

00:12.840 --> 00:17.430
Sekarang saya akan mendefinisikan fungsi semacam gabungan kami yang mengambil satu array.

00:18.060 --> 00:24.840
Dan jika kita kembali ke kode semu kita semua yang ingin kita lakukan adalah tetap membaginya

00:25.230 --> 00:32.430
menjadi array yang lebih kecil dan memanggil semacam penggabungan pada array sampai mereka panjang array adalah 1 atau 0.

00:32.490 --> 00:37.740
Jadi kita bisa mulai dengan kasus dasar jika kita ingin jika panjang array kurang dari atau sama dengan 1.

00:37.830 --> 00:43.160
Kita akan mengembalikan array bukan array satu array.

00:43.920 --> 00:45.850
Jadi saat ini itu tidak berarti banyak.

00:46.140 --> 00:51.060
Pada dasarnya kita tidak melakukan panggilan rekursif mengingat setiap fungsi rekursif memiliki kasus

00:51.060 --> 00:54.610
dasar dan kemudian kasus rekursif panggilan fungsi rekursif.

00:54.630 --> 01:01.800
Jadi kita akan memanggil semacam penggabungan pada sesuatu lagi tetapi itu harus di dua bagian array.

01:01.800 --> 01:04.140
Jadi bagaimana kita bagaimana kita meletakkan array ini menjadi dua.

01:04.140 --> 01:15.640
Jadi misalnya jika saya memanggil merge sort di sini pada array ini 10 untuk 24 76 73 72 dan 1.

01:16.080 --> 01:17.860
Jadi bagaimana kita membaginya menjadi dua.

01:18.270 --> 01:22.020
Jadi jika kita hanya mengambil ini, saya merekomendasikan menggunakan slice.

01:22.020 --> 01:28.790
Jadi jika saya menyimpan variabel ini v r a r r sama dengan bagaimana kita memisahkannya atau memotongnya menjadi dua.

01:28.830 --> 01:33.920
Nah kita pergi dari nol untuk sisi kiri kita pergi dari nol sampai apa.

01:33.930 --> 01:35.410
Bagaimana kita menemukan titik tengahnya.

01:35.790 --> 01:41.040
Yah kita bisa mengambil panjang array dibagi dua dan kemudian lantai itu.

01:41.040 --> 01:41.370
Baiklah.

01:41.380 --> 01:43.640
Jadi ingat pencarian biner kami melakukan hal yang sama.

01:43.950 --> 01:52.340
Jadi itulah yang akan saya lakukan matematika dengan panjang array 2 dan itu memberi kita 3.

01:52.350 --> 01:57.090
Jadi saya akan melakukan array tidak memotong dari 0 hingga 3.

01:57.120 --> 02:04.370
Dan itu memberi kita tiga item pertama dan kemudian kita perlu mengatur irisan itu dari tiga menjadi apa yang perlu kita lakukan hanya

02:04.390 --> 02:10.080
melihat apa yang sebenarnya bisa kita lakukan dengan benar mengiris 3 dan akan mulai dari 3 hingga akhir.

02:10.080 --> 02:14.760
Begitulah cara kerjanya Anda tidak harus memasukkan nomor kedua jika Anda tidak mau.

02:14.760 --> 02:16.110
Sehingga akan memecah array.

02:16.110 --> 02:20.820
Itu langkah pertama kami dan kemudian kami akan memanggil penggabungan pada masing-masing.

02:20.820 --> 02:25.480
Jadi mari kita tulis kode itu untuk memulai sehingga kita dapat mendefinisikan titik tengah di sini.

02:25.560 --> 02:32.110
Jadi biarkan titik tengah atau sebut saja itu dibuat sama dengan yang berhenti mengalir atau hal yang

02:32.160 --> 02:35.430
sama kita melihat panjang radar dibagi dua.

02:35.430 --> 02:43.470
Jadi itu memberi kita titik tengah maka kita akan mengatakan sisi kiri sama dengan irisan titik dari nol sampai

02:44.100 --> 02:52.050
titik tengah dan kemudian kita akan mengatakan sisi kanan sama dengan apa yang sisi kanan akan menjadi irisan

02:52.200 --> 02:55.570
besar hanya dari titik tengah sampai akhir.

02:55.870 --> 02:59.600
Jadi sekarang kita telah membagi array menjadi dua bagian yang hilang dan ada di sini.

02:59.590 --> 03:00.860
Itu dia.

03:00.870 --> 03:05.740
Sekarang sampai pada bagian yang rumit alih-alih hanya melakukan bagian kiri sama dengan irisan kanan.

03:05.760 --> 03:14.790
Aku benar-benar akan memanggil slice sort array penggabungan dan hal yang sama di sini menggabungkan slice sort keluar sampai

03:14.790 --> 03:15.760
akhir.

03:16.320 --> 03:16.830
BAIK.

03:16.830 --> 03:18.370
Jadi apa yang terjadi di sini.

03:18.420 --> 03:24.270
Jika kita menyebut ini pertama kali melalui array ini, panjangnya tidak kurang dari atau sama dengan 1.

03:24.270 --> 03:25.200
Jadi kami melewatkan itu.

03:25.200 --> 03:28.150
Kami menemukan titik tengah dan kami menemukan kiri dan kanan.

03:28.350 --> 03:35.580
Jadi jika kita fokus ke kiri, kita akan memanggil semacam penggabungan lagi pada array ini yang bisa Anda lihat di sini.

03:35.640 --> 03:40.840
Jadi itu melewati dan itu disebut lagi seperti ini tidak kurang dan sama dengan satu.

03:40.860 --> 03:43.650
Jadi kita melewatkan garis itu dan kemudian kita membaginya menjadi dua lagi.

03:43.770 --> 03:50.580
Dan sekarang kita sebut semacam gabungan dari kiri dan kanan dan kemudian satu kali melalui salah satu dari mereka memiliki

03:50.580 --> 03:51.320
panjang satu.

03:51.390 --> 03:52.490
Jadi kita putar array itu.

03:52.500 --> 03:55.510
Tetapi yang lain memiliki panjang dua karena ada tiga item.

03:55.590 --> 03:57.690
Jadi kami menyebutnya semacam penggabungan lagi.

03:57.960 --> 04:04.200
Dan kemudian pada saat itu kita memiliki tiga array item tunggal dan sekarang kita harus khawatir tentang

04:04.260 --> 04:05.110
penggabungannya kembali.

04:05.520 --> 04:11.680
Dan ini adalah sedikit sihir lain yang kami gabungkan kiri dan kanan.

04:11.980 --> 04:15.820
Jadi ini adalah kode dan saya akan berjalan melalui baris demi baris

04:15.820 --> 04:23.630
cara kerjanya kita akan melangkah melalui tumpukan panggilan dengan versi yang lebih kecil tapi mari kita pastikan bahwa itu berfungsi jika saya menjalankannya terlihat bagus.

04:23.650 --> 04:27.320
1 9 10 24 72 73 76.

04:28.030 --> 04:28.250
BAIK.

04:28.270 --> 04:35.220
Sekarang sebut saja, mari kita lakukan empat item dan saya akan meletakkan breakpoint di sini.

04:36.050 --> 04:41.990
Sekarang jika kita melihat apa yang terjadi hanya dengan empat item ini untuk melangkah melalui itu akan menjalankan kode.

04:42.890 --> 04:45.880
Dan ketika kami menutup konsol, kami memiliki lebih banyak ruang.

04:46.430 --> 04:48.390
Lihatlah tumpukan panggilan kami di sini.

04:48.840 --> 04:51.800
OK di sini kita melanjutkan perjalanan.

04:51.980 --> 04:55.160
Jadi kita mulai dan menggabungkan semacam dipanggil pada array ini, itu empat item.

04:55.160 --> 04:57.740
Jadi hal pertama ini tidak terjadi.

04:57.740 --> 05:01.530
Lalu kami menemukan titik tengah yang merupakan dua.

05:01.550 --> 05:02.540
Nah, inilah yang pertama.

05:02.540 --> 05:04.590
Tonton apa yang terjadi pada tumpukan panggilan.

05:04.790 --> 05:06.450
Kami menambahkan secara rekursif.

05:06.560 --> 05:09.210
Jadi ada jenis gabungan lain yang telah ditambahkan ke tumpukan panggilan.

05:09.320 --> 05:13.980
Dan jika Anda melihat sekarang pada jenis gabungan ini dipanggil di sebelah kiri setengah kanan.

05:14.090 --> 05:19.580
Jadi setengah kiri hanya 10 dan 24 adalah panjang array kurang dari atau sama dengan 1.

05:19.880 --> 05:20.520
Nggak.

05:20.780 --> 05:27.210
Jadi kami melewatkannya dan apa yang terjadi lagi kami menemukan titik tengah baru yang hanya

05:27.210 --> 05:33.830
indeks yang hanya tengah survei yang kami sebut penggabungan pada bagaimana jika kami melihat tumpukan kami lagi.

05:33.860 --> 05:39.360
Di sana kita memanggil semacam penggabungan pada elemen tunggal 10.

05:39.360 --> 05:40.180
Baiklah.

05:40.240 --> 05:45.160
Sekarang laju waktu ini panjangnya kurang dari atau sama dengan 1 kanan.

05:45.170 --> 05:50.740
Jadi kita akan mengembalikan array 10 dan Anda akan melihatnya keluar dari stack di sini.

05:51.170 --> 06:00.390
Hanya array nilai pengembalian kedua dan muncul berikutnya.

06:00.450 --> 06:02.100
Kami kembali ke yang ini.

06:02.160 --> 06:04.650
Jadi sekarang kita kembali ke yang kita tinggalkan di sini, di sini.

06:04.650 --> 06:06.800
Ini adalah hal yang sulit tentang rekursi.

06:06.810 --> 06:10.160
Saya berharap saya memiliki diagram papan tulis ini semuanya tapi kami menunggu.

06:10.770 --> 06:17.030
Panggilan fungsi ini menunggu kiri untuk terus berjalan sampai mengembalikan sesuatu dan sekarang benar perlu

06:17.040 --> 06:24.930
pergi sampai kembali begitu benar pada babak kedua adalah 10 umum 24 kita membaginya dan sisi kanan masuk dan

06:25.020 --> 06:30.410
kita dapatkan array dengan panjang 24 kurang dari atau sama dengan 1.

06:30.780 --> 06:38.580
Jadi kami mengembalikan array dan melihatnya memunculkan tumpukan panggilan dan hanya yang kedua sekarang kami menggabungkan kiri dan kanan

06:38.900 --> 06:42.640
10 dan 24 dan kami menggabungkan mereka bersama.

06:43.140 --> 06:50.160
Itu panggilan menggabungkan semua kode ini terjadi dan pada akhirnya kami akhirnya bergabung.

06:50.160 --> 06:55.460
Dan akhirnya kembali dan menonton tumpukan panggilan.

06:55.520 --> 06:56.970
Sekarang kita keluar lagi.

06:57.380 --> 07:01.370
Sekarang kali ini kita sudah selesai kiri kanan yang sedang menunggu.

07:01.520 --> 07:04.030
Dan kode ini kita tunggu untuk menggabungkan sisi kiri.

07:04.100 --> 07:05.410
Sekarang kita perlu melakukan hal yang benar.

07:05.600 --> 07:07.090
Kami bahkan tidak pernah menjalankan garis ini.

07:07.400 --> 07:13.720
Jadi sekarang sisi kanan sekarang akan pergi dan jika kita lihat itu memanggil semacam penggabungan lagi dengan

07:13.730 --> 07:16.830
apa yang lewat beberapa saat yang lalu.

07:16.850 --> 07:21.670
76 dan 73 sehingga panjangnya tidak kurang dari atau sama dengan 1.

07:21.680 --> 07:22.610
Jadi kami tidak mengembalikannya.

07:22.700 --> 07:28.440
Jadi kita lanjutkan sekarang kita sebut semacam gabungan di sisi kiri yang memberi kita 76.

07:28.460 --> 07:31.640
Panjangnya kurang dari atau sama dengan 1.

07:31.640 --> 07:37.890
Jadi kita akan mengembalikan array dan Anda akan melihatnya keluar dari tumpukan panggilan masuk sana kita pergi.

07:38.000 --> 07:41.440
Dan sekarang kita kembali ke sini di semacam gabungan untuk sisi kanan.

07:41.450 --> 07:47.870
Gila, saya tahu ini bagian yang sulit dipahami, tetapi kami kembali ke sini dan kali ini kami menyebutnya 73 atau membaca

07:47.870 --> 07:50.660
panjangnya kurang dari atau sama dengan yang benar.

07:50.660 --> 07:54.770
Kami mengembalikan array yang 73 muncul dari tumpukan panggilan.

07:54.770 --> 08:00.990
Sekarang yang kita miliki adalah kiri dan kanan jadi kiri ke kanan adalah array yang kita gabungkan bersama.

08:01.010 --> 08:11.420
Jadi kami memanggil kembali ke sini melalui penggabungan ini dan kemudian pada akhirnya mengembalikan hasil yang merupakan gabungan

08:11.420 --> 08:12.320
array.

08:12.360 --> 08:19.660
Sekarang kami mengembalikannya dari panggilan sortir gabungan ini ke panggilan orisinal gabungan jenis kami yang sedang menunggu.

08:19.660 --> 08:22.220
Jadi kita telah meninggalkan dan sekarang yang telah digabung.

08:22.370 --> 08:26.690
Yah mereka belum belas kasihan cuaca maafkan saya mereka telah diurutkan mereka telah dibagi

08:26.690 --> 08:28.880
dan disortir secara individu dan kemudian bergabung.

08:28.900 --> 08:34.790
Sekarang kami memiliki dua item dua array yang panjangnya dua dan kami menggabungkannya bersama dengan penggabungan akhir

08:35.510 --> 08:41.830
kami ke kiri dan sekarang kode ini membutuhkan waktu lebih lama karena kami punya dua potong data untuk masing-masingnya.

08:41.900 --> 08:44.100
Anda dapat melihat hasilnya di sini.

08:44.150 --> 08:47.310
Kami mengembalikan hasil untuk menggabungkan semacam.

08:47.330 --> 08:55.090
Jadi sekarang kita memiliki 10 24 76 73 dan itulah yang kita kembalikan.

08:55.120 --> 09:00.570
Dan akhirnya saya berpikir untuk menunjukkan kontra. Kita berakhir dengan nilai pengembalian itu.

09:00.850 --> 09:05.140
Jadi seperti yang Anda lihat, banyak yang harus dilacak dalam diri Anda sendiri, hanya empat elemen yang berusaha

09:05.140 --> 09:07.130
melacak semuanya di kepala Anda bisa banyak.

09:07.210 --> 09:12.680
Jadi saya membuat diagramnya dan mari kita lihat urutan sebenarnya yang terjadi.

09:12.700 --> 09:20.610
Jadi ketika kita memanggil merge sort pada 10:24 76 73 hal pertama yang terjadi array adalah array ini yang kita periksa adalah panjang bus

09:20.680 --> 09:22.130
beberapa sama dengan satu.

09:22.150 --> 09:23.040
Tidak.

09:23.050 --> 09:30.070
Jadi kami menemukan titik tengah dan kemudian kami akan memanggil semacam penggabungan di sisi kiri dari 0 hingga titik tengah.

09:30.460 --> 09:34.310
Jadi ini disebut semacam gabungan dari 10 umum 24.

09:34.330 --> 09:41.750
Jadi dalam kode itu jika daftar kita adalah 10 24 itu masih tidak kurang dari atau sama dengan panjangnya.

09:41.860 --> 09:44.850
Jadi kami memanggil semacam penggabungan lagi di sebelah kiri.

09:45.340 --> 09:50.510
Dan sekarang kali ini panjang array ini kurang dari atau sama dengan 1.

09:50.740 --> 09:53.880
Dan dalam kejadian itu kita mengembalikan array.

09:54.580 --> 09:56.280
Jadi kita kembalikan 10.

09:56.480 --> 10:03.250
Jadi sekarang ini gabungan dari 10 umum 24 daftar dua item yang lama sekarang memiliki nilai untuk kiri.

10:03.580 --> 10:05.720
Jadi selanjutnya ia menemukan nilai yang tepat.

10:05.740 --> 10:07.240
Itu menunggu ini untuk kembali.

10:07.240 --> 10:10.030
Ingat sekarang ia kembali sehingga bergerak ke baris berikutnya.

10:10.030 --> 10:17.440
Saat ini akan memanggil semacam penggabungan sisi kanan yaitu 24 gabungan jenis 24.

10:17.500 --> 10:19.880
Panjang array itu kurang dari atau sama dengan satu.

10:19.900 --> 10:22.260
Jadi mengembalikan 24.

10:22.840 --> 10:26.520
Jadi sekarang kita punya kiri dan kanan.

10:26.880 --> 10:32.210
Jadi sekarang kita bisa beralih ke penggabungan garis ini ke kiri ke kanan.

10:32.230 --> 10:39.070
Jadi ketika kita memanggil penggabungan kiri, datang ke kanan dengan 10 dan 24 ingat fungsi penggabungan kita mengambil ke dalam array yang diurutkan.

10:39.340 --> 10:43.750
Ini menggabungkan mereka dan mengembalikan nilai yang merupakan array.

10:43.750 --> 10:48.830
10:24 Ya itu sudah disortir tetapi abaikan bagian itu dan kode kita tidak tahu itu.

10:49.030 --> 10:50.850
Jadi itu mengembalikan nilai sekarang.

10:51.490 --> 10:57.750
Jadi itu dikembalikan dari panggilan semacam gabungan ini yang merupakan sisi kiri dari jenis gabungan pertama kami.

10:57.760 --> 11:02.980
Jadi sekarang jenis gabungan pertama kami sudah menunggu dan ada sisi yang dikembalikan.

11:02.980 --> 11:05.380
Sekarang akan melakukan seluruh sisi kanan.

11:05.710 --> 11:10.050
Jadi kami memanggil semacam gabungan pada 76 73 dalam kode itu.

11:10.180 --> 11:11.960
Panjangnya tidak kurang dari atau sama dengan 1.

11:12.130 --> 11:20.110
Jadi itu menghitung titik tengah dan kemudian melakukan sisi kiri menggabungkan semacam 76 yang itu adalah

11:20.110 --> 11:28.300
satu array item sehingga mengembalikan nilai 76 maka sisi kanan ini yang menunggu kita dapat kita menyelesaikan sisi

11:28.300 --> 11:28.960
ini.

11:28.960 --> 11:36.490
Sekarang kita akan menggabungkan mengurutkan sisanya dan itu memberi kita 73 sebagai nilai kembali karena itu adalah

11:36.490 --> 11:37.930
array item tunggal.

11:37.930 --> 11:40.640
Kemudian sekali lagi kita beralih ke baris ini.

11:40.750 --> 11:41.800
Ini sedang menunggu.

11:41.800 --> 11:42.940
Gabungkan ke kiri dan ke kanan.

11:42.970 --> 11:50.530
Nah sekarang kita memiliki kiri dan hak-hak kita, kita menggabungkan mereka dan mengembalikan 73 Komus ke array item maka jenis

11:50.890 --> 11:52.110
gabungan ini muncul.

11:52.120 --> 11:55.000
Sekarang memiliki kiri dan kanan yang menunggu.

11:55.300 --> 11:59.160
Jadi akhirnya dapat ini kemudian akhirnya ini.

11:59.260 --> 12:07.840
Sekarang itu benar-benar dapat menggabungkan kiri dan kanan dan ke kiri dan kanan kita berakhir dengan 10:24 73 dan

12:07.840 --> 12:09.260
76 ini.

12:09.310 --> 12:10.060
Saya tahu banyak.

12:10.210 --> 12:12.730
Tapi ingat saya sudah mengatakan ini beberapa kali.

12:12.760 --> 12:17.170
Hanya fokus untuk dapat menjelaskan apa yang terjadi atau berjalan jika Anda memiliki papan tulis atau

12:17.170 --> 12:21.850
selembar kertas. Saya pikir akan sangat membantu jika menuliskan apa yang ada di tumpukan panggilan pada titik

12:21.850 --> 12:22.410
tertentu.

12:22.430 --> 12:25.560
Dan saya sarankan Anda tidak mencobanya pada array yang sangat panjang.

12:25.570 --> 12:31.230
Jika Anda masuk ke seperti enam tujuh item itu membutuhkan lebih banyak waktu dan lebih banyak ruang untuk diagram.

12:31.270 --> 12:33.170
Tolong jangan merasa terlalu terintimidasi oleh ini.

12:33.280 --> 12:36.820
Dalam video berikutnya kita akan berbicara tentang O besar dari jenis gabungan.
