WEBVTT

00:00.150 --> 00:01.200
Hai, selamat datang kembali.

00:01.320 --> 00:05.400
Mari kita mulai berbagai hal dengan traversal pertama yang dalam dari sebuah grafik.

00:05.400 --> 00:10.440
Jadi seperti halnya pohon yang kami habiskan dalam waktu yang cukup lama untuk pohon pencarian biner

00:10.440 --> 00:15.110
atau pohon biner secara umum ada dua opsi utama untuk melintasi pohon-pohon ini.

00:15.150 --> 00:17.240
Kedalaman pertama dan lebarnya traversal pertama.

00:17.430 --> 00:23.850
Sekarang di kedalaman pertama kita memang berbicara tentang pre order Post order, tetapi ide umum di balik kedalaman dan luasnya

00:23.850 --> 00:25.680
adalah apa yang kita pedulikan.

00:25.950 --> 00:32.640
Jadi ketika kita mengatakan kedalaman terlebih dahulu untuk pohon pencarian biner ini atau pohon apa pun

00:32.640 --> 00:41.490
itu berarti kita memfokuskan kita memprioritaskan mengunjungi anak-anak dari node tertentu sebelum kita mengunjungi saudara kandung atau kita memperdalam traversal sebelum

00:41.490 --> 00:42.720
kita memperluasnya.

00:42.720 --> 00:47.880
Jadi apa yang sebenarnya berarti apakah kita ke kiri atau kanan dulu tidak terlalu penting tetapi katakanlah

00:47.880 --> 00:49.120
kita pergi ke kiri.

00:49.200 --> 00:50.500
Jadi kita mulai dari 41.

00:50.640 --> 00:57.660
Kita akan mengunjungi 20 dan daripada pergi ke saudara kita sekarang akan menyelesaikan anak-anak

00:57.660 --> 00:58.350
20.

00:58.440 --> 01:02.130
Jadi itu membuat kita menjadi 11 dan tidak kembali ke 20.

01:02.130 --> 01:03.610
Habiskan anak-anak.

01:03.690 --> 01:04.800
Sekarang kami memiliki jalan buntu.

01:05.130 --> 01:08.050
Sekarang kita kembali dan mengunjungi saudara 20-an.

01:08.550 --> 01:10.130
Dan kemudian kita terus melakukan itu.

01:10.140 --> 01:16.800
Jadi kami memprioritaskan pendalaman traversal daripada pelebaran luas apakah cuaca daripada pelebaran Jadi

01:16.800 --> 01:19.050
itu kedalaman terlebih dahulu.

01:19.080 --> 01:24.150
Tetapi pada bagian ini kita berbicara tentang grafik yang bukan pohon dan mereka tidak selalu lebih

01:24.150 --> 01:29.970
sulit untuk dilalui tetapi kadang-kadang mereka bisa sedikit lebih sulit untuk memahami apa arti kedalaman versus napas karena

01:30.510 --> 01:37.670
mudah pada pohon di mana kita memiliki arah yang jelas ke bawah atau tergantung Anda tahu bagaimana itu digambar kadang-kadang Anda melihat

01:37.680 --> 01:40.370
pohon yang ditarik ke atas dari akar.

01:40.500 --> 01:44.410
Tapi bagaimanapun ditarik, ada jalan yang jelas melalui pohon itu.

01:44.430 --> 01:45.460
Ada satu root.

01:45.660 --> 01:50.680
Dan kemudian Anda turun atau naik apa pun yang Anda pindah dari akar itu.

01:50.700 --> 01:53.760
Jadi kedalaman pertama berarti menjauh dari root.

01:53.820 --> 01:58.980
Ketika kita berbicara tentang grafik, grafik yang lebih umum seperti ini dan ini adalah grafik yang diarahkan.

01:58.990 --> 02:02.470
Sayangnya situs web ini tidak membiarkan saya melakukan grafik yang tidak diarahkan dan melintasi mereka.

02:02.550 --> 02:06.150
Tetapi, katakanlah kita memilih salah satu dari simpul-simpul ini.

02:06.180 --> 02:07.760
Tidak ada simpul root.

02:07.860 --> 02:11.050
Tidak ada pohon tetapi katakanlah kita akan mulai dari nol.

02:11.550 --> 02:14.740
Apa artinya melakukan traversal pertama mendalam dari sini.

02:15.090 --> 02:20.110
Ya benar semua yang dimaksud adalah menemukan satu tetangga mengikuti satu tetangga.

02:20.310 --> 02:24.410
Katakanlah satu tetapi sebenarnya ada tiga tetangga yang kita miliki enam dan dua.

02:24.570 --> 02:31.950
Katakanlah kita mengikuti satu dan kemudian kita terus mengikuti tetangga satu sebelum kita mengunjungi saudara-saudaranya dan ketika kita mengatakan saudara

02:32.610 --> 02:36.840
itu agak berbeda dari pohon karena mereka tidak harus pada tingkat yang

02:36.840 --> 02:37.600
sama.

02:38.070 --> 02:40.470
Tapi biar saya katakan begini, kita mulai nol.

02:40.680 --> 02:45.800
Katakanlah kita selalu memilih angka terendah sebagai barang berikutnya yang akan kita kunjungi.

02:45.870 --> 02:48.270
Jadi kita pergi ke 0 ke 1.

02:48.270 --> 02:56.160
Sekarang dalam napas pertama yang akan kembali ke kita kemudian akan mengunjungi tetangga lain dari 0 2 dan 6 tetapi secara

02:56.160 --> 03:03.930
mendalam pertama kita akan pergi 0 ke 1 ke 5 dan kemudian kembali ke 1 dan pergi ke enam dan

03:03.930 --> 03:10.260
kemudian dari 6 kita kunjungi tetangga seperti 7 dan kemudian 9 dan seterusnya daripada luasnya pertama

03:10.260 --> 03:14.040
di mana kita akan mengunjungi 0 1 2 6.

03:14.100 --> 03:19.360
Semua tetangga nol terlebih dahulu sebelum kita mengunjungi tetangga dan dua tetangga kita dan seterusnya.

03:19.680 --> 03:22.660
Jadi, saya tunjukkan diagram animasi kecil yang saya kumpulkan.

03:22.660 --> 03:24.360
Ini grafik yang lebih sederhana.

03:24.360 --> 03:30.420
Tidak ada Anda tahu simpul root yang kita mulai secara default tetapi katakanlah kita sedang melakukan traversal pertama yang

03:30.420 --> 03:31.790
mendalam mulai dari a.

03:31.830 --> 03:38.580
Kami ingin menjelajahi sejauh mungkin di bawah satu cabang sebelum mundur lagi, kami harus memutuskan

03:38.640 --> 03:40.560
urutan kunjungan kami.

03:40.860 --> 03:44.430
Jadi kita jika kita memiliki dua tetangga yang mana yang kita kunjungi pertama.

03:44.580 --> 03:47.930
Baiklah mari kita pergi dengan urutan abjad agar tetap konsisten.

03:47.970 --> 03:52.550
Keduanya adalah tetangga dan kita bisa mengunjungi yang pertama tetapi katakanlah kita akan mengunjungi berdasarkan abjad

03:52.560 --> 03:53.700
Jadi kita mulai dari a.

03:53.970 --> 03:56.040
Dan kemudian kita mengunjungi B.

03:56.070 --> 03:59.690
Sekarang, jika ini luasnya maka kami akan kembali dan mengunjungi.

03:59.900 --> 04:04.100
Tapi kedalaman dulu berarti kita sekarang akan menjelajahi tetangga ini.

04:04.110 --> 04:06.960
Jadi mari kita pilih tetangga berdasarkan abjad.

04:06.960 --> 04:12.520
Kami telah melihat kami bisa melakukan D tetapi mari kita lakukan C agar konsisten sekarang dari C ..

04:12.690 --> 04:16.110
Kami memiliki dua tetangga dan kami sudah mengunjungi B.

04:16.140 --> 04:17.730
Jadi ini ide yang penting.

04:17.790 --> 04:19.380
Kita harus ingat di mana kita berada.

04:19.380 --> 04:21.140
Kalau tidak, kita bisa kembali menjadi seperti itu.

04:21.330 --> 04:22.340
Jadi kita sudah selesai.

04:22.440 --> 04:24.060
Sehingga meninggalkan kita D.

04:24.480 --> 04:30.720
Sekarang dari D Kita memiliki dua pilihan dan jika kita pergi secara alfabet kita akan pergi ke E dan kemudian ke

04:30.720 --> 04:31.250
f.

04:31.260 --> 04:34.220
Sekarang urutan itu tidak terlalu penting sejauh kedalaman dulu.

04:34.220 --> 04:35.950
Keduanya adalah tetangga D.

04:36.090 --> 04:41.770
Tapi itu hanya membantu bagi kita untuk menjadi semacam Anda tahu memiliki pesanan konkret jika kita hanya melakukan abjad.

04:42.090 --> 04:42.620
BAIK.

04:42.780 --> 04:46.120
Jadi sangat penting bagi kita untuk mengingat di mana setiap tikungan.

04:46.410 --> 04:48.350
Kalau tidak, kita akan pergi dari a.

04:48.390 --> 04:50.300
Katakanlah kita akan menjadi lagi.

04:50.520 --> 04:53.100
Nah B memiliki dua tetangga atau tiga tetangga.

04:53.100 --> 04:54.590
C d n.

04:54.810 --> 04:57.050
Dan jika kita tidak ingat kita sudah pernah ke.

04:57.390 --> 05:03.140
Apa yang menghentikan kita dari hanya kembali ke a dan kemudian kembali ke B untuk selalu

05:03.140 --> 05:08.500
memilih alfabet paling awal alfabet A terendah dan kemudian B kita akan mandek.

05:08.660 --> 05:11.180
Jadi inilah contoh lain grafik yang sedikit berbeda.

05:11.180 --> 05:15.120
Saya tahu itu simpul yang sama simpul yang sama tetapi tepi yang berbeda.

05:15.140 --> 05:22.090
Jika kita mulai dari lagi jika kita melakukan yang terendah menurut abjad, kita akan pergi ke B dan kemudian dari B kita hanya

05:22.090 --> 05:23.000
punya satu pilihan.

05:23.020 --> 05:23.900
Kami pergi ke D.

05:24.100 --> 05:26.660
Sekarang kita memiliki dua pilihan ke mana kita pergi.

05:26.900 --> 05:28.570
Ya, kita lakukan berdasarkan abjad terlebih dahulu.

05:28.570 --> 05:29.550
Kami pergi ke E.

05:29.680 --> 05:31.690
Sekarang kita punya dua pilihan.

05:31.780 --> 05:34.620
Ada tiga sisi tetapi kita tahu kita sudah pernah ke D.

05:34.660 --> 05:40.380
Jadi apakah kita pergi ke C atau F untuk melakukannya secara alfabet kita pergi untuk melihat sekarang dari C ..

05:40.410 --> 05:41.410
Itu jalan buntu.

05:41.500 --> 05:43.440
Kami mengunjungi kami mengunjungi e.

05:43.540 --> 05:45.230
Jadi jika kita kembali ke e ..

05:45.610 --> 05:46.860
Dan sekarang kita harus selesai.

05:46.870 --> 05:50.260
E Kita memiliki F dan kemudian selesai.

05:50.500 --> 05:58.330
Jadi di sini ada satu lagi grafik yang sama persis animasi yang sama tetapi di sini saya menampilkan daftar adjacency

05:58.330 --> 05:59.020
kami.

05:59.230 --> 06:03.070
Jadi Anda dapat melihat terhubung ke B dan C dan itu tercermin di sini.

06:03.460 --> 06:06.150
Dan saya memiliki hal-hal yang terdaftar menurut abjad terlebih dahulu.

06:06.250 --> 06:10.510
Jadi tepi dari a ke b muncul sebelum 8 adalah c.

06:10.570 --> 06:12.220
Sekali lagi itu tidak masalah.

06:12.280 --> 06:15.280
Tetapi bagi saya untuk menjelaskan lebih mudah untuk melakukan abjad terlebih dahulu.

06:15.520 --> 06:21.820
OK jadi jika kita melihat apa yang terjadi dari kita memulai dan kita mengunjungi sehingga kita akan

06:22.240 --> 06:27.280
mencoretnya berarti setiap kali kita melihat simpul yang berdekatan kita akan mengabaikannya.

06:27.400 --> 06:33.850
Jadi kita melihat a dan kita melihat bahwa ada dua sisi dua simpul sehingga kita bisa pergi ke B atau C dan kita

06:33.850 --> 06:36.060
akan mengambil yang pertama yang kita kalahkan.

06:36.280 --> 06:43.240
Jadi ketika kita mengunjungi B kita sekarang menyeberang dari sini dan dari sini ke semua ujungnya.

06:43.240 --> 06:47.950
Ini tidak berarti menghapusnya, itu hanya berarti bahwa kita akan mengingat saya sudah terlalu

06:47.950 --> 06:49.810
mengabaikannya lain kali kita melihatnya.

06:50.020 --> 06:55.760
Jadi kita menjadi yang ada di sini dan kita melihat bahwa ia memiliki dua sisi a dan D.

06:55.810 --> 06:58.120
Tapi kita sudah Benty kita mencoretnya.

06:58.120 --> 07:02.890
Jadi sekarang kita pergi ke D dan kita mencoret karena kita sudah di sana ia memiliki tiga tepi.

07:02.890 --> 07:05.140
Kami menyeberang di mana-mana.

07:05.260 --> 07:10.350
Jadi sekarang pada saat kita melihat dengan baik ada tiga pilihan tetapi kita sudah menjadi.

07:10.410 --> 07:14.580
Jadi kita akan pergi ke setiap berikutnya dan kita mencoret semua e itu.

07:14.650 --> 07:15.790
Sekarang kita pergi ke E.

07:16.060 --> 07:17.250
Dari mana kita harus pergi.

07:17.350 --> 07:19.120
Baiklah mari kita lihat.

07:19.540 --> 07:20.050
BAIK.

07:20.260 --> 07:21.360
Sangat bagus untuk dilihat.

07:21.550 --> 07:27.320
Dan kami menyeberangi semua lautan itu dan sekarang kami kembali ke tempat terakhir kami.

07:28.030 --> 07:29.300
Dan kami sudah mengunjungi Laut.

07:29.350 --> 07:30.910
Kami sudah mengunjungi D.

07:31.180 --> 07:33.890
Sekarang kita perlu mengunjungi F dan selesai.

07:34.290 --> 07:34.870
BAIK.

07:35.140 --> 07:38.060
Jadi itulah ide dasar kedalaman traversal pertama.

07:38.080 --> 07:40.580
Kami mengikuti cabang ke bawah.

07:40.810 --> 07:46.780
Lebih sulit untuk mengatakan kami memperdalam karena sedikit lebih sulit untuk memahami secara visual apa arti kedalaman dalam

07:46.780 --> 07:50.600
grafik karena Anda tahu ketika Anda memiliki pohon lebih mudah.

07:50.620 --> 07:51.890
Kami bergerak menjauh dari rute.

07:51.970 --> 07:55.620
Dalam hal ini pada dasarnya terlihat seperti lingkaran.

07:55.930 --> 08:01.480
Jadi kedalaman lebih sulit untuk menjelaskan apa artinya sebenarnya hanya mengikuti tetangga dan terus

08:01.480 --> 08:03.320
mengikuti tetangga sebelum mundur.

08:03.400 --> 08:07.120
Jadi kita akan menerapkan pencarian kedalaman pertama baik secara rekursif.

08:07.280 --> 08:11.470
Saya katakan pencarian yang sebenarnya akan kita lakukan traversal adalah ide yang sama kecuali kita tidak mencari sesuatu,

08:11.710 --> 08:13.910
kita hanya akan mengunjungi setiap simpul setiap simpul.

08:14.020 --> 08:15.660
Pokoknya kita akan melakukannya secara rekursif.

08:15.700 --> 08:20.570
Dan jika kami hanya menunjukkan kepada Anda berdua pendekatan itu adalah hal yang baik untuk diketahui.

08:20.860 --> 08:23.630
Jadi kita akan mulai dengan solusi rekursif rekursif.

08:23.680 --> 08:27.670
Yah pertama-tama kode pseudo dalam video berikutnya dan kemudian implementasi setelahnya dan kemudian kita akan melakukannya

08:27.700 --> 08:30.360
atau melarikan diri dan kemudian kita akan membahasnya terlebih dahulu.

08:30.430 --> 08:30.690
BAIK.
