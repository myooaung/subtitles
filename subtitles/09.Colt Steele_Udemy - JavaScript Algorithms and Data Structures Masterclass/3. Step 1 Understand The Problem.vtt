WEBVTT

00:00.450 --> 00:01.290
Selamat datang kembali.

00:01.530 --> 00:06.510
Jadi seperti yang saya sebutkan di video terakhir, salah satu tantangan terbesar bagi pengembang baru berkaitan

00:06.810 --> 00:08.790
dengan pemecahan masalah oleh programmer baru.

00:08.790 --> 00:12.510
Jadi saya pikir bagi kebanyakan orang cukup mudah untuk mempelajari sintaksis.

00:12.510 --> 00:16.790
Mungkin butuh sedikit waktu tetapi Anda mempelajari sintaks dan Anda selesai.

00:16.830 --> 00:23.430
Anda dapat menyalin kode orang lain atau membuat ulang aplikasi dengan mengikuti petunjuk langkah demi langkah.

00:23.580 --> 00:27.750
Tetapi hal yang paling sulit adalah menyelesaikan masalah baru dan tantangan baru.

00:27.960 --> 00:32.790
Dan Anda menjadi lebih baik dengan waktu terlepas dari teknologi yang Anda gunakan.

00:32.790 --> 00:37.680
Anda tahu bahasa tempat Anda bekerja, sangat penting untuk memiliki serangkaian keterampilan pemecahan masalah

00:37.680 --> 00:42.640
yang kuat dan banyak dari itu akan muncul secara alami seiring waktu tetapi perlu disengaja.

00:42.660 --> 00:46.800
Layak memiliki rencana permainan untuk mengikuti panduan langkah demi langkah.

00:46.860 --> 00:51.990
Ini tidak akan menyelesaikan masalah Anda untuk Anda, tetapi itu membantu Anda duduk dan memikirkan serta

00:51.990 --> 00:52.650
memecahkan masalah.

00:52.650 --> 00:55.710
Dan ini membantu solusi muncul secara lebih alami.

00:55.710 --> 00:58.670
Jadi saya menyebutkan lima langkah yang akan kita bicarakan.

00:58.740 --> 01:04.050
Video ini akan dimulai dengan memahami atau memahami masalah sebelum kita melangkah lebih jauh.

01:04.080 --> 01:09.090
Saya harus menyebutkan bahwa banyak dari strategi ini diadaptasi dari buku yang sangat bagus tentang pemecahan masalah

01:09.090 --> 01:09.960
secara umum.

01:10.110 --> 01:15.840
Ini semacam lebih condong ke arah matematika tetapi oleh orang ini bernama George polio polio.

01:15.840 --> 01:17.480
Buku ini berjudul Bagaimana menyelesaikannya.

01:17.540 --> 01:20.750
Sumber yang bagus dan dari sanalah banyak tips ini berasal.

01:21.060 --> 01:21.600
BAIK.

01:21.870 --> 01:24.310
Jadi kita mulai dengan memahami masalahnya.

01:24.360 --> 01:26.620
Jadi bayangkan Anda sedang duduk di sebuah ruangan.

01:26.790 --> 01:30.080
Bisa jadi ruangan yang indah atau bisa seperti sel penjara yang terbuat dari cinderblock.

01:30.330 --> 01:35.310
Dan ada pewawancara di depan Anda dan dia mengajukan pertanyaan kepada Anda dan Anda tidak tahu

01:35.310 --> 01:36.140
bagaimana menyelesaikannya.

01:36.590 --> 01:38.150
Dan itu tidak datang kepada Anda segera.

01:38.160 --> 01:42.880
Ini bukan salah satu masalah latihan yang Anda hafal selama akhir pekan belajar sebelumnya.

01:43.290 --> 01:49.560
Jadi, beberapa hal pertama yang harus saya lakukan adalah memahami masalah dan mungkin tergoda untuk menyelami

01:49.560 --> 01:54.420
dan mulai memecahkan sesuatu khususnya ketika Anda berada di bawah semacam kendala waktu

01:54.420 --> 01:56.280
seperti dalam sebuah wawancara.

01:56.310 --> 02:00.750
Jadi kebanyakan orang hanya ingin jantung mereka mulai berpacu mereka ingin segera memulai.

02:00.930 --> 02:07.590
Dan ini benar dalam pemrograman khususnya Anda dapat membuat kemajuan bahkan jika Anda tidak melakukannya dengan benar.

02:07.590 --> 02:12.000
Anda cukup mengetikkan banyak kode dengan cepat dan merasa seperti Anda membuat kemajuan dalam waktu

02:12.000 --> 02:12.580
singkat.

02:12.720 --> 02:17.580
Tetapi sebelum Anda mulai mengetik atau menulis di papan tulis atau apa pun yang Anda lakukan, saya pikir sangat

02:17.580 --> 02:21.050
penting untuk mengambil langkah mundur dan pastikan Anda memahami tugas di depan Anda.

02:21.180 --> 02:26.920
Dan kedengarannya konyol kedengarannya sepele tetapi ada beberapa pertanyaan yang sangat disengaja yang dapat Anda tanyakan.

02:27.080 --> 02:32.820
Penyelidikan menyeluruh tentang masalah atau pertanyaan dan itu benar-benar dapat membantu memperjelas hal-hal dan kadang-kadang akan memberi

02:32.820 --> 02:35.060
Anda momen aha meskipun tidak selalu.

02:35.130 --> 02:40.400
Jadi, berikut adalah beberapa pertanyaan yang saya sarankan Anda tanyakan pada diri sendiri atau jika Anda dalam pengaturan

02:40.410 --> 02:45.330
wawancara tanyakan pewawancara tetapi juga jika Anda bekerja pada tantangan Anda sendiri Anda mencoba untuk membangun sesuatu

02:45.330 --> 02:47.560
dan Anda tidak yakin bagaimana cara mendekatinya.

02:47.580 --> 02:49.120
Tanyakan pada diri Anda pertanyaan-pertanyaan ini.

02:49.230 --> 02:51.950
Jadi, bisakah Anda menyatakan kembali masalahnya dengan kata-kata Anda sendiri.

02:51.960 --> 02:55.210
Ini selalu hal pertama yang saya minta siswa saya lakukan dalam pengaturan wawancara.

02:55.260 --> 02:56.590
Anda mendapat pertanyaan baru.

02:56.610 --> 02:58.810
Pastikan Anda dapat mengembalikannya kembali.

02:58.950 --> 03:00.190
Bukan kata demi kata.

03:00.240 --> 03:05.970
Jangan hanya menyalin dengan kata pewawancara tetapi mengubahnya sedikit dengan kata-kata Anda sendiri untuk memastikan

03:05.970 --> 03:10.730
bahwa Anda benar-benar memahami apa pertanyaannya. Apa input yang masuk ke masalah.

03:10.890 --> 03:13.300
Jadi ini yang sangat penting.

03:13.320 --> 03:14.910
Bagaimana dengan outputnya.

03:14.910 --> 03:17.720
Jadi apa saja output yang harus datang dari solusi untuk masalah tersebut.

03:18.030 --> 03:21.530
Seperti apa hasilnya nanti dan kita akan masuk ke dalam contoh sesaat.

03:21.720 --> 03:24.000
Jadi seperti apa inputnya nantinya.

03:24.000 --> 03:29.670
Apa output apa yang harus datang dari solusi saya apa yang harus dikembalikan dari fungsi saya.

03:29.670 --> 03:32.250
Bisakah output ditentukan dari input.

03:32.280 --> 03:38.490
Artinya apakah Anda memiliki informasi yang cukup untuk menyelesaikan masalah yang Anda miliki inputnya, dapatkah Anda mendapatkan output

03:38.490 --> 03:39.490
yang diharapkan.

03:39.590 --> 03:45.560
Hanya dengan menggunakan informasi itu dan kadang-kadang Anda perlu menunggu sedikit sampai Anda dapat menemukannya.

03:45.630 --> 03:49.170
Bagaimana saya harus memberi label pada bagian penting dari data yang merupakan bagian dari masalah.

03:49.200 --> 03:53.910
Jadi ini akan membuat Anda tahu apa saja hal yang benar-benar penting dalam masalah ini apa yang harus

03:53.910 --> 03:54.850
Anda sebut mereka.

03:54.900 --> 03:56.950
Apa terminologi yang harus Anda gunakan.

03:57.210 --> 03:58.330
Jadi mungkin terlihat seperti banyak.

03:58.380 --> 04:04.260
Tetapi jika kita berjalan melalui contoh aktual kita akan melakukan contoh yang sangat sederhana yaitu menulis fungsi

04:04.260 --> 04:07.420
yang mengambil dua angka dan kembali ke sana begitu.

04:07.540 --> 04:10.140
Jadi bayangkan seseorang menanyakan hal ini kepada Anda dalam sebuah wawancara.

04:10.380 --> 04:14.550
Mari kita jelajahi semacam memahami masalah melalui lensa ini.

04:14.670 --> 04:17.490
Jadi mari kita berjalan melalui beberapa langkah ini.

04:17.580 --> 04:19.940
Tulis fungsi yang mengambil dua angka dan mengembalikan atau beberapa.

04:19.950 --> 04:21.780
Bisakah saya menyatakan kembali masalahnya dengan kata-kata saya sendiri.

04:21.790 --> 04:24.410
Baiklah, yang ini bagus dan sederhana.

04:24.510 --> 04:29.520
Anda tahu kita bisa mengatakan sesuatu seperti menulis fungsi yang menambahkan dua angka atau mengimplementasikan penambahan atau

04:29.530 --> 04:30.640
sesuatu seperti itu.

04:30.860 --> 04:31.280
BAIK.

04:31.290 --> 04:32.640
Cukup mudah.

04:32.640 --> 04:34.830
Apa input yang masuk ke masalah.

04:35.100 --> 04:37.500
Yah ini mungkin tampak seperti kasus buka dan tutup.

04:37.500 --> 04:40.430
Tambahkan saja dua angka sehingga kita membutuhkan dua angka dengan benar.

04:40.560 --> 04:43.810
Tetapi jika Anda mulai benar-benar memikirkannya di sana, itu benar-benar tergantung.

04:43.830 --> 04:48.830
Maksud saya adalah kita berbicara tentang bilangan bulat atau kita berbicara tentang floating point secara eksklusif.

04:48.860 --> 04:51.420
Tergantung pada bahasa tempat kami bekerja tentunya.

04:51.450 --> 04:53.250
Seberapa besar angka-angka ini nantinya.

04:53.250 --> 04:58.650
Karena dalam beberapa bahasa sebagian besar saya pernah bekerja di sana ada batas atas untuk ukuran angka dan jika

04:58.650 --> 05:02.220
Anda mencoba menambahkan angka yang sangat besar itu tidak berfungsi dengan baik.

05:02.220 --> 05:10.170
Misalnya, jika kami mencoba melakukan ini di sini, itu adalah angka yang sangat besar plus Anda dapat melihat tanda plus.

05:10.170 --> 05:14.000
Jumlah lain yang sangat besar operasi matematika yang benar-benar valid.

05:14.160 --> 05:16.190
Tetapi dalam javascript Apa yang kita dapatkan.

05:16.190 --> 05:19.820
Infinity hanya menyerah dan memberi kita tak terbatas.

05:19.830 --> 05:24.380
Jadi, dalam bahasa lain Anda mungkin bisa mewakili ini lebih baik sebagai string.

05:24.630 --> 05:25.520
Masing-masing dari angka-angka ini.

05:25.530 --> 05:31.410
Maksud saya, saya tidak akan benar-benar melakukannya untuk keduanya tetapi penambahan implement menggunakan string.

05:31.410 --> 05:34.320
Jadi itu sebenarnya sangat penting.

05:34.320 --> 05:36.050
Itu bukan pertanyaan sepele.

05:36.210 --> 05:39.760
Sungguh konyol untuk hanya menambahkan dua angka bersama kita sudah memiliki tambahan.

05:39.780 --> 05:40.640
Kenapa melakukan itu?

05:40.890 --> 05:45.870
Tetapi jika kita hanya memikirkannya, kita sudah mulai mencari tahu bahwa ada beberapa perbedaan

05:45.870 --> 05:51.300
penting antara input ini dan jika kita mencoba menambahkan angka yang sangat besar ini tiba-tiba masalahnya menjadi

05:51.300 --> 05:56.490
jauh lebih sulit karena dalam javascript kita tidak dapat melakukan itu hanya dengan angka lama.

05:56.490 --> 05:59.830
Hal lain adalah kita hanya bekerja dengan dua input.

05:59.940 --> 06:00.780
Apakah selalu dua.

06:00.780 --> 06:03.380
Apa yang terjadi jika seseorang pergi dan ditunda.

06:03.390 --> 06:08.220
Atau bagaimana jika seseorang ingin menambahkan empat 10 angka seperti itu benar-benar valid untuk menambahkan 10

06:08.280 --> 06:13.500
angka bersama secara matematis karena fungsi kita hanya akan bekerja dengan dua angka dan hal yang sama berlaku

06:13.500 --> 06:16.890
untuk pertanyaan ketiga yaitu output Seperti apa seharusnya bentuk output.

06:16.890 --> 06:18.620
Ini lebih sederhana dalam hal ini.

06:18.690 --> 06:21.930
Kami masih memiliki pertanyaan apakah itu bilangan bulat.

06:21.990 --> 06:26.910
Haruskah itu float tergantung pada Anda tahu jika Anda masuk ke float apakah Anda ingin mengapung kembali

06:26.910 --> 06:28.980
jika Anda memasukkan integer dan float

06:28.980 --> 06:30.760
Apakah Anda bahkan diizinkan untuk lulus dalam kendaraan hias.

06:30.780 --> 06:34.290
Atau bagaimana dengan string yang mengembalikan string A untuk melakukan penambahan besar-besaran ini.

06:34.590 --> 06:36.270
Jadi itu semacam pertanyaan yang sama.

06:36.390 --> 06:39.390
Yah itu bukan pertanyaan yang sama tetapi banyak masalah yang sama.

06:39.390 --> 06:42.530
Selanjutnya dapat ditentukan output dari input.

06:42.690 --> 06:45.770
Pada dasarnya kita memiliki informasi yang cukup untuk menyelesaikan masalah.

06:45.870 --> 06:47.830
Dan dalam banyak kasus jawabannya adalah ya.

06:47.970 --> 06:53.010
Tetapi jika Anda memikirkannya apa yang terjadi jika seseorang hanya melewati satu nomor dan sudah dibahas, kami tidak

06:53.280 --> 06:55.930
memiliki cukup informasi untuk melakukan penambahan pada saat itu.

06:56.190 --> 06:57.750
Jadi kita tambahkan nol.

06:57.750 --> 07:01.180
Apakah kita kembali tidak terdefinisi atau tidak atau sesuatu.

07:01.200 --> 07:02.020
Apa yang kita lakukan.

07:02.400 --> 07:03.910
Dan itu tergantung.

07:04.080 --> 07:09.090
Anda bertanya kepada pewawancara Anda bahwa atau di sebagian besar pengaturan wawancara mungkin hanya meminta Anda untuk mengabaikannya untuk saat ini tetapi

07:09.090 --> 07:13.290
juga di sebagian besar pengaturan wawancara mereka mungkin tidak akan meminta Anda untuk menulis fungsi yang mengambil dua

07:13.290 --> 07:14.990
angka dan saya menoleh ke mereka.

07:15.000 --> 07:19.830
Dan terakhir bagaimana saya harus memberi label pada bagian-bagian penting dari data yang merupakan bagian dari masalah.

07:19.920 --> 07:23.910
Jadi saya suka meletakkan ini di sini karena penting untuk mulai berpikir tentang ini yang penting.

07:23.940 --> 07:27.400
Jadi kami memiliki input dan kami memiliki output dan itu semua yang kami butuhkan.

07:27.660 --> 07:33.420
Jadi mungkin Anda tahu nama fungsi kami tambahkan dan kemudian kita akan memiliki nomor satu dan nomor dua adalah

07:33.720 --> 07:36.990
argumen dan kemudian beberapa adalah hasil kami yang kami kembalikan.

07:36.990 --> 07:41.640
Jadi ini sederhana, tetapi begitu Anda mulai mengalami masalah yang lebih rumit memikirkan langkah demi langkah ini benar-benar

07:41.640 --> 07:45.300
dapat membuat perbedaan dan saya akan menunjukkan beberapa contoh di mana itu membantu.

07:45.300 --> 07:50.700
Tetapi pertama-tama mari kita beralih dari memahami masalah ke mengeksplorasi contoh-contoh nyata.

07:50.700 --> 07:52.100
Jadi ini hanya langkah pertama.

07:52.110 --> 07:57.480
Tetapi masih ada beberapa pertanyaan yang bisa kita tanyakan pada diri kita sendiri atau bertanya kepada pewawancara kita tentang masalah tersebut.

07:57.480 --> 07:57.740
Baiklah.

07:57.750 --> 07:59.370
Selanjutnya menjelajahi contoh-contoh.
