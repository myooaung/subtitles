WEBVTT

00:00.210 --> 00:00.920
Selamat datang kembali.

00:00.930 --> 00:02.700
Mari kita mulai mengerjakan pesanan pos.

00:02.970 --> 00:04.830
Jadi kita akan mengambil simpul apa pun.

00:04.830 --> 00:08.240
Kita akan menjelajahi seluruh sisi kiri kemudian sisi kanan.

00:08.310 --> 00:10.510
Dan akhirnya mengunjungi node itu sendiri.

00:10.510 --> 00:11.980
Tambahkan ke daftar kami.

00:12.510 --> 00:21.360
Mari kita melompat ke kode saya dan saya hanya akan menentukan kedalaman urutan posting pencarian pertama seperti ini

00:21.360 --> 00:29.010
akan membuat array data kami untuk menyimpan data kami dan pada akhirnya akan mengembalikan data.

00:29.010 --> 00:35.190
Kemudian saya akan mendefinisikan fungsi saya melintasi fungsi pembantu yang mengambil node

00:35.190 --> 00:40.680
tetapi daripada mendorong dalam data terlebih dahulu dan kemudian melihat

00:40.890 --> 00:52.660
ke kiri dan melihat ke kanan kita akan lakukan jika simpul kiri melewati node keluar jika simpul traverse kanan tidak diragukan lagi benar.

00:53.130 --> 00:59.670
Dan kemudian setelah itu data naik nilai push node.

01:00.650 --> 01:08.400
Dan kemudian kita perlu memanggil traverse di traverse akhir dengan rute titik rute ini.

01:09.370 --> 01:10.930
Dan itu saja.

01:10.930 --> 01:17.110
Jadi itu kode yang sama persis kecuali kita memindahkan baris ini di mana kita benar-benar mengunjungi node dengan menambahkannya

01:17.110 --> 01:21.130
ke array yang kita pindahkan setelah kita menjelajahi kiri dan kanan.

01:21.250 --> 01:27.920
Jadi, bisakah Anda pergi lalu ke kanan maka kami dorong masuk dan jika kami hanya memverifikasi itu berfungsi lebih dulu.

01:28.060 --> 01:36.210
Mari kita lakukan kedua pohon dot DFS preorder pohon dot posting DFS.

01:36.340 --> 01:37.780
Jangan pohon itu lagi.

01:40.150 --> 01:41.920
Dan mari kita pastikan itu berhasil.

01:41.960 --> 01:47.790
Jadi jalankan kode saya dan itu seharusnya tahu sesuatu yang lebih baik memberi saya nilai pengembalian terakhir.

01:47.900 --> 01:48.980
Baiklah, kita mulai.

01:48.980 --> 01:50.780
Jadi ini yang baru saja kita lakukan.

01:50.780 --> 01:52.210
Ini dari video terakhir.

01:52.580 --> 01:56.300
Jadi Anda dapat melihat ini berfungsi, kami mendapatkan pesanan yang diharapkan.

01:56.300 --> 01:59.470
Jadi jika ini adalah pohon kami di sini sama dengan yang ada di slide.

01:59.690 --> 02:04.750
Urutannya adalah tiga dan kemudian delapan, enam, bukan sepuluh.

02:04.790 --> 02:06.520
Kami masih harus turun ke sisi kanan.

02:06.560 --> 02:08.190
Jadi itu berarti 20 15.

02:08.210 --> 02:12.110
Dan akhirnya Anda kembali ke 10 sampai ini berfungsi dengan benar.

02:12.110 --> 02:16.330
Bandingkan dengan preorder di mana kita mengunjungi dan kemudian melihat ke kiri dan ke kanan.

02:16.520 --> 02:17.890
Jadi kami mengunjungi 10.

02:18.020 --> 02:19.560
Lalu kita turun ke kiri.

02:19.580 --> 02:20.820
Kami mengunjungi enam.

02:20.990 --> 02:22.780
Lalu kita turun ke kiri.

02:22.790 --> 02:23.830
Kami mengunjungi tiga.

02:23.960 --> 02:25.070
Lalu kita pergi ke kanan.

02:25.070 --> 02:26.190
Kami mengunjungi delapan.

02:26.390 --> 02:27.690
Lalu kita kembali jam 10.

02:27.740 --> 02:35.930
Kami mengunjungi sisi kanan 15 dan 20 dan hanya itu yang diperlukan untuk mengubah urutan untuk melakukan pencarian pertama

02:35.960 --> 02:38.660
kedalaman posting atau traversal pertama kedalaman.
