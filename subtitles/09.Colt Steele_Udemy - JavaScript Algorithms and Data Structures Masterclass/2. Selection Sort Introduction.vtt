WEBVTT

00:00.240 --> 00:01.370
Hai, selamat datang kembali.

00:01.470 --> 00:03.930
Dalam video ini saya akan memperkenalkan semacam seleksi.

00:03.930 --> 00:05.660
Algoritma pemilahan kami berikutnya.

00:05.880 --> 00:11.640
Jadi saya menulis bahwa ini mirip dengan bubble sort tetapi alih-alih menempatkan pertama nilai-nilai besar ke posisi

00:11.640 --> 00:17.320
yang diurutkan di akhir array kita menempatkan nilai-nilai kecil ke dalam semacam posisi satu per satu.

00:17.340 --> 00:18.900
Jadi kami sedang membangun array.

00:19.050 --> 00:25.800
Kami masih bergerak dari awal hingga akhir tetapi data yang diurutkan sebenarnya terakumulasi di awal.

00:25.800 --> 00:28.260
Jadi izinkan saya memberi Anda contoh cara kerjanya.

00:28.320 --> 00:31.570
Kami melewati Berikut ini satu pass sehingga kami memiliki array ini.

00:31.710 --> 00:36.210
Kita mulai dari awal dan apa yang akan kita lakukan adalah terus mencari nilai minimum

00:36.210 --> 00:39.000
dan kemudian kita akan menempatkan itu di depan.

00:39.660 --> 00:43.460
Jadi misalnya kita mulai dengan lima dan tiga yang mana yang terkecil sedangkan tiga.

00:43.530 --> 00:48.330
Jadi tiga akan menjadi minimum kami untuk saat ini, itulah yang dimaksud Green.

00:48.330 --> 00:52.310
Tapi kemudian kita sekarang dibandingkan dengan empat yang merupakan minimum.

00:52.410 --> 00:54.300
Masih tiga.

00:54.360 --> 00:57.900
Jadi sekarang kita bandingkan dengan 1 yang merupakan minimum.

00:57.900 --> 00:59.360
Nah sekarang sudah 1.

00:59.500 --> 01:00.890
Jadi Anda bisa melihat satu yang hebat sekarang.

01:00.900 --> 01:02.080
Jadi itu orang baru kita.

01:02.130 --> 01:05.730
Sekarang kita membandingkan satu dari dua yang mana yang minimum.

01:05.730 --> 01:12.600
Jadi apa yang kita lakukan sekarang, kita telah mencapai akhirnya adalah kita bertukar, kita mengambil apa pun elemen minimum dengan apa

01:12.600 --> 01:14.290
pun yang kita mulai.

01:14.370 --> 01:19.260
Dan sekarang kita telah meletakkan item terkecil di array di awal dibandingkan dengan bubble sort.

01:19.260 --> 01:24.600
Di mana kami melewati dan kami bertukar swap berpotensi untuk mendorong elemen terbesar nilai

01:24.600 --> 01:27.400
terbesar ke jenis seleksi akhir membangunnya sebaliknya.

01:27.540 --> 01:31.560
Kami menemukan swap minimum di akhir dan meletakkannya di awal.

01:31.560 --> 01:36.550
Jadi mari kita berjalan melalui go visual go vidual.

01:36.970 --> 01:42.390
Namun Anda mengatakan ini algoritma visual dan saya memiliki satu set data kecil di sini.

01:42.500 --> 01:45.540
Jika kita melangkah, kita mulai dari awal.

01:45.600 --> 01:51.170
Ini adalah posisi pertama kami dan kami menetapkan nilai minimum menjadi 19.

01:51.240 --> 01:53.610
Jadi itu nilai terkecil yang kami lihat sejauh ini.

01:53.610 --> 01:57.540
Selanjutnya kita membandingkannya dengan nilai di sebelahnya 44.

01:57.560 --> 01:58.670
Apakah ada minimum baru.

01:58.770 --> 02:01.260
Tidak 19 masih minimum kami.

02:01.260 --> 02:03.870
Sekarang kita beralih dan membandingkannya dengan 38.

02:03.870 --> 02:04.930
Apakah ada minimum baru.

02:04.950 --> 02:05.620
Tidak.

02:05.640 --> 02:07.410
19 masih yang terkecil.

02:07.410 --> 02:08.660
Sekarang dia mendapat 5.

02:08.790 --> 02:12.000
Dan kami membandingkan mereka lima sekarang minimum baru.

02:12.210 --> 02:13.800
Jadi itu orang baru kita.

02:13.860 --> 02:14.550
Kami pindah.

02:14.580 --> 02:16.260
Kami membandingkannya dengan 47.

02:16.260 --> 02:16.910
Tidak.

02:16.920 --> 02:18.030
5 masih lebih kecil.

02:18.030 --> 02:19.140
Hal yang sama dengan 15.

02:19.170 --> 02:20.250
Kami sekarang telah mencapai akhir.

02:20.250 --> 02:22.890
Kita tahu bahwa elemen terkecil di sana adalah lima.

02:22.920 --> 02:24.910
Jadi apa yang kita lakukan, kita mulai di sini.

02:25.020 --> 02:30.330
Jadi kami sekarang menukar elemen terkecil seperti yang Anda lihat kami memiliki dua hal memilih awal di

02:30.330 --> 02:35.470
mana kami mulai dan elemen terkecil dan kami menukar mereka dan sekarang kita mulai dari awal.

02:35.770 --> 02:37.680
Tapi kali ini kita mulai dari 44.

02:37.690 --> 02:41.650
Jadi saya pikir itu hanya menunjukkan kepada kita bahwa bagian ini sekarang disortir.

02:41.710 --> 02:42.740
Kami tidak harus peduli tentang itu.

02:42.880 --> 02:44.570
Jadi kita beralih ke 44.

02:44.610 --> 02:45.270
Kami membandingkan.

02:45.280 --> 02:47.070
OK minimum sekarang adalah 38.

02:47.080 --> 02:49.090
Sekarang minimum akan menjadi 19.

02:49.120 --> 02:50.250
Sekarang masih 19.

02:50.260 --> 02:51.270
Sekarang umur 15.

02:51.430 --> 02:53.100
Jadi pria yang baru berusia 15 tahun.

02:53.380 --> 02:56.070
Jadi kami menukar dengan 44.

02:56.080 --> 02:56.880
Itu dia.

02:57.130 --> 02:57.560
BAIK.

02:57.640 --> 02:59.260
Jadi sekarang dua hal pertama diurutkan.

02:59.260 --> 03:01.150
Sekarang kita lanjutkan ke 38.

03:01.170 --> 03:07.150
19 19 adalah laki-laki 19 dan 47 19 masih terkecil dan 19 masih terkecil.

03:07.150 --> 03:09.830
Kami menukar 19 dan 38.

03:10.360 --> 03:10.750
Baiklah.

03:10.750 --> 03:12.880
Mudah-mudahan Troy mendapatkan ide dari sini.

03:12.880 --> 03:13.510
Teruskan.

03:13.510 --> 03:19.010
Temukan seorang lelaki di tempat itu dalam contoh itu para lelaki itu adalah apa yang kita mulai dengan 38.

03:19.120 --> 03:23.550
Sekarang kita hanya perlu menukar dua yang terakhir dan kita selesai.

03:23.950 --> 03:25.760
Jadi itu semacam seleksi.

03:25.840 --> 03:30.790
Kami akan melalui dan memilih elemen terkecil minimum dan kemudian meletakkannya di awal.

03:30.940 --> 03:32.800
Oh dan sebenarnya ini belum selesai secara resmi.

03:32.800 --> 03:33.280
Ini dia.

03:33.280 --> 03:35.360
Sekarang alih-alih, kami memiliki array yang diurutkan.

03:35.500 --> 03:37.840
Jadi sejauh kode untuk mengurutkan pilihan.

03:37.840 --> 03:39.750
Sebenarnya tidak seburuk itu.

03:39.790 --> 03:40.250
Kita punya.

03:40.270 --> 03:42.240
Jadi kami menggunakan kembali kode swap.

03:42.310 --> 03:46.780
Jadi jika Anda membuat fungsi untuk bertukar video dan gelembung jenis terakhir di mana Anda ingin

03:46.780 --> 03:50.290
menggunakan yang saya buat maka kita tidak perlu khawatir tentang logika swap.

03:50.290 --> 03:52.240
Jadi mari kita telusuri beberapa kode pseudo.

03:52.610 --> 03:52.930
BAIK.

03:52.960 --> 03:58.180
Jadi, hal pertama yang ingin Anda lakukan adalah membuat variabel untuk menyimpan nilai minimum dan pada awalnya Anda dapat mengatur itu

03:58.330 --> 04:01.720
sama dengan hanya item pertama yang harus Anda mulai di suatu tempat.

04:01.840 --> 04:07.000
Jadi hal pertama dalam array adalah nilai terkecil kita dari satu-satunya hal yang telah kita lihat kemudian yang kita

04:07.030 --> 04:09.760
lakukan adalah kita lalui dan kita membandingkannya dengan item berikutnya.

04:09.760 --> 04:11.620
Jika item berikutnya lebih kecil.

04:11.770 --> 04:16.330
Sekarang kami memperbarui nilai variabel minimum menjadi item berikutnya.

04:16.510 --> 04:23.140
Dan jika itu tidak lebih kecil, kami akan terus maju dan jika kami menemukan nilai lebih kecil yang baru, kami menyimpannya

04:23.140 --> 04:24.100
seminimal mungkin.

04:24.100 --> 04:25.730
Sekarang apa yang sebenarnya kita simpan.

04:26.020 --> 04:29.680
Kami sebenarnya tidak menyimpan nilai itu sendiri.

04:29.680 --> 04:32.730
Apa yang akan kita simpan adalah indeks di mana nilai itu ditemukan.

04:32.890 --> 04:34.630
Jadi kita bisa bertukar.

04:34.720 --> 04:37.180
Jadi kami tidak peduli jika nilainya 20.

04:37.210 --> 04:38.700
Kami ingin tahu di mana itu.

04:38.860 --> 04:40.020
Indeks tiga.

04:40.030 --> 04:44.380
Jadi kita bisa menukar indeks nol dalam indeks tiga setelah lulus pertama kita.

04:45.400 --> 04:46.540
Jadi itulah yang kita miliki di sini.

04:46.560 --> 04:50.800
Jika sejumlah kecil ditemukan untuk menunjuk angka yang lebih kecil itu menjadi

04:50.800 --> 04:56.620
minimum baru dan terus sampai akhir array jika minimum bukan nilai indeks tepat menempatkan bahwa di sana

04:56.620 --> 04:58.860
Anda mulai dengan kemudian tukar keduanya

04:59.050 --> 05:05.170
Kalau tidak, jika mereka sama, itu berarti bahwa kita kebetulan memiliki array di mana elemen pertama adalah elemen

05:05.380 --> 05:10.810
terkecil yang baru saja kita beruntung atau mungkin itu sudah diurutkan yang tidak akan baik

05:10.810 --> 05:12.070
untuk pemilihan semacam.

05:12.070 --> 05:14.650
Dan tentu saja kami ulangi saja proses ini.

05:14.650 --> 05:20.630
Lain kali kita tahu bahwa item pertama sudah diurutkan sehingga kita tidak perlu mengulang setiap item.

05:20.740 --> 05:25.500
Apa yang ingin kita lakukan sebenarnya adalah mulai dari item berikutnya setelah itu dan menemukan minimum baru.

05:25.780 --> 05:32.110
Kalau tidak, jika kita terus melihat seluruh array setiap kali kita akan selalu menemukan hak minimum yang sama jika

05:32.110 --> 05:38.020
kita baru mulai dari sini lagi ini adalah orang-orang kita dan kita membandingkannya membandingkan menit kita masih akan

05:38.020 --> 05:38.880
menjadi satu.

05:39.010 --> 05:41.960
Dan jika kita mulai lagi selalu akan menjadi satu.

05:41.980 --> 05:47.050
Jadi yang perlu kita lakukan adalah melihat area ini dan menemukan pria dan kemudian melihat ini dan ini

05:47.050 --> 05:47.790
dan seterusnya.

05:47.800 --> 05:53.940
Jadi kami ingin mengecilkan ruang lingkup atau jendela dari apa yang kami bandingkan saat kami mengulang.

05:54.230 --> 05:54.540
BAIK.

05:54.550 --> 05:56.860
Jadi, coba ini jika ingin.

05:56.860 --> 06:00.420
Ini relatif pendek untuk diterapkan juga.

06:00.640 --> 06:07.000
Benar-benar itu hanya sebuah loop ditambah loop lain dan satu kondisional dan kemudian pada akhirnya swap.

06:07.000 --> 06:09.580
Jadi cobalah, tetapi juga jangan merasa buruk.

06:09.700 --> 06:11.560
Saya tidak ingin membuatnya terdengar begitu mudah.

06:11.560 --> 06:14.320
Secara konseptual bisa sulit untuk membuatnya bekerja.

06:14.320 --> 06:18.320
Jadi dalam video berikutnya saya akan mengimplementasikannya dan kita akan lihat bagaimana kelanjutannya.
