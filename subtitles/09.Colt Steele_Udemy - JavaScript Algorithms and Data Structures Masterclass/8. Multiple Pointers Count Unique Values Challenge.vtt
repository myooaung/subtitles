WEBVTT

00:00.270 --> 00:01.260
Hai, selamat datang kembali.

00:01.260 --> 00:06.040
Jadi, inilah masalah kedua yang bisa kita selesaikan dengan menggunakan beberapa pointer adalah dua pointer.

00:06.450 --> 00:07.330
Agak berbeda.

00:07.410 --> 00:11.260
Seperti yang sudah saya sebutkan karena kita tidak bekerja dari awal dan akhir menuju tengah.

00:11.490 --> 00:13.960
Tapi kami masih memiliki dua petunjuk dan itu yang terpenting.

00:14.070 --> 00:17.830
2. 0 bergerak beberapa arah berdasarkan kondisi.

00:18.000 --> 00:21.630
Jadi fungsi yang Anda butuhkan untuk mengimplementasikan dipanggil untuk menghitung nilai unik.

00:22.080 --> 00:29.100
Dan itu harus menerima array yang diurutkan lagi dan mengembalikan hitungan nilai unik dalam array itu dan dapat memiliki

00:29.100 --> 00:30.850
angka negatif di sana.

00:30.960 --> 00:32.590
Tapi itu akan selalu disortir.

00:32.610 --> 00:38.270
Jadi dalam hal ini harus mengembalikan dua karena hanya ada dua angka unik 1 dan 2.

00:38.340 --> 00:44.590
Dalam hal ini ia harus mengembalikan 7 karena kita punya 1 2 3 4 5 6 7.

00:44.730 --> 00:49.020
Sejauh nomor unik kosong, kami memiliki 0 nilai unik.

00:49.020 --> 00:53.240
Di sini kita memiliki empat nilai unik negatif ke negatif 1 0 dan 1.

00:53.310 --> 00:55.460
Jadi, Anda dapat menggunakan dua petunjuk untuk membantu Anda di sini.

00:55.560 --> 01:00.860
Jika Anda ingin mencobanya sendiri, ini bukan salinan langsung atau tiruan dari solusi sebelumnya.

01:00.960 --> 01:03.540
Ini sedikit berbeda tetapi kami masih memiliki dua petunjuk.

01:03.540 --> 01:05.450
Jadi di sini adalah jika Anda ingin mencobanya.

01:05.490 --> 01:08.840
Papan tulis benar-benar kosong dengan nol petunjuk dan nol bantuan.

01:08.850 --> 01:10.820
Maksud saya nol petunjuk.

01:10.860 --> 01:11.190
Lanjutkan.

01:11.190 --> 01:12.540
Jeda video dan baru saja dimulai.

01:12.680 --> 01:16.830
Ada latihan setelah video ini jika Anda ingin mencobanya dan saya akan punya solusi setelah itu.

01:16.920 --> 01:21.240
Tetapi jika Anda ingin beberapa saran beberapa petunjuk petunjuk Berikut adalah cara saya akan melakukannya.

01:21.240 --> 01:23.460
Ini semacam pendekatan yang dimaksudkan.

01:23.460 --> 01:24.470
Mulai sebuah pointer.

01:24.480 --> 01:27.360
Mari kita lakukan contoh ini mulai pointer di sini.

01:27.510 --> 01:29.980
Dan kemudian satu lagi di sini dan pada dasarnya membandingkan keduanya.

01:30.120 --> 01:31.420
Yah ini tidak sama.

01:31.590 --> 01:36.330
Jadi, Anda bisa membuat variabel untuk menghitung berapa kali mereka tidak sama.

01:36.330 --> 01:38.060
Berapa kali ada nilai yang berbeda.

01:38.310 --> 01:44.450
Tetapi hal lain yang bisa Anda lakukan itu bagus adalah besar array itu sendiri untuk menyimpan nilai unik

01:44.460 --> 01:50.130
sehingga membangun nilai-nilai unik di awal array karena tidak ada aturan yang mengatakan Anda tidak bisa

01:50.260 --> 01:52.810
tahu mengubah array ini yang sedang lewat.

01:52.890 --> 01:54.970
Anda tidak harus menggunakan variabel terpisah.

01:55.020 --> 01:59.730
Jadi solusi yang akan saya lakukan sebenarnya akan membangun nilai-nilai unik di awal.

01:59.790 --> 02:06.750
Jadi saya berakhir dengan 7 di sini dan kemudian kita akan berakhir dengan 12 di sini dan 13 dan

02:06.960 --> 02:11.970
juga pointer pertama kita hanya akan bergerak sejauh indeks enam atau tujuh item.

02:11.970 --> 02:13.190
Itu akan bergerak.

02:13.200 --> 02:15.170
Jadi saya akan tunjukkan sebuah contoh.

02:15.210 --> 02:18.560
Jadi jika kita memiliki array ini yang diteruskan saya akan memiliki pointer di sini.

02:18.780 --> 02:19.720
Sebut saja tinggi.

02:19.920 --> 02:21.350
Dan satu lagi bernama J.

02:21.630 --> 02:22.410
Dan kami membandingkannya.

02:22.440 --> 02:23.730
Ya mereka sama.

02:23.730 --> 02:29.200
Jadi saya akan bergerak Jay ke depan tetapi meninggalkan saya di tempat itu maka saya akan melakukannya lagi.

02:29.220 --> 02:30.650
Bandingkan mereka meski masih sama.

02:30.660 --> 02:31.760
Jadi saya akan pindah J.

02:31.770 --> 02:34.270
Agak seperti J seperti pramuka saya.

02:34.320 --> 02:37.920
Memimpin muatan paket atau apa pun ungkapannya.

02:38.010 --> 02:39.640
Dan kita melihat dua dan membandingkannya dengan satu.

02:39.660 --> 02:41.040
Nah sekarang mereka berbeda.

02:41.340 --> 02:47.720
Jadi saya akan pindah ke sini dan kemudian saya akan menempatkan 2 di sini begitu saja.

02:48.030 --> 02:53.070
Jadi sekarang saya akan melihat dua dan saya akan memajukan Jay.

02:53.070 --> 02:55.870
Dan sekarang kita melihat tiga dengan tiga dan dua berbeda.

02:56.160 --> 02:59.300
Jadi saya akan naik satu dan menempatkan tiga di sini.

02:59.520 --> 03:02.040
Jadi saya membangun nilai-nilai unik di sini.

03:02.400 --> 03:07.140
Dan pada akhirnya saya akan memiliki mereka semua di awal dan saya hanya bisa mencari tahu berapa

03:07.140 --> 03:09.410
banyak yang didasarkan dari indeks saya sama dengan

03:09.660 --> 03:11.020
Jadi saya pindah Jay lagi.

03:11.280 --> 03:12.070
Tiga lagi.

03:12.090 --> 03:14.670
Jadi kami tidak melakukan apa pun kami hanya meningkatkan J.

03:14.730 --> 03:15.870
Sekarang kita sampai ke 4.

03:15.990 --> 03:18.940
Jadi saya akan naik dan meletakkan 4 di sini.

03:19.260 --> 03:20.900
Jadi sekarang saya melihat.

03:21.030 --> 03:22.890
J pergi ke empat lainnya.

03:23.040 --> 03:23.930
Kami tidak melakukan apa-apa.

03:24.030 --> 03:25.660
Jay pergi ke lima Ah.

03:25.770 --> 03:27.430
Sekarang kami memiliki lima dibandingkan empat.

03:27.540 --> 03:28.560
Jadi kami menambahkan satu ke J.

03:28.560 --> 03:30.270
Dan saya menempatkan angka 5 di sini.

03:30.330 --> 03:33.110
Sekarang kita membandingkan lima hingga enam.

03:33.480 --> 03:34.690
Mereka berbeda.

03:34.770 --> 03:38.220
Jadi kami menempatkan enam di sini dan sekarang kami selesai.

03:38.220 --> 03:43.920
Jay telah mencapai ujung array dan ini benar-benar hanya membutuhkan satu melewati array akhir dan kami sedang

03:43.920 --> 03:46.040
melihat berapa banyak item di sini.

03:46.230 --> 03:50.100
Nah cara kita akan tahu itu adalah dengan mengambil indeks saat ini.

03:50.330 --> 03:54.130
Jadi saya akan menjadi 0 1 2 3 4 5.

03:54.600 --> 03:57.180
Jadi itulah indeks I yang perlu kita tambahkan.

03:57.180 --> 03:59.160
Tentu saja karena indeks kami mulai dari nol.

03:59.250 --> 04:01.640
Jadi sebenarnya ada enam nilai unik.

04:02.010 --> 04:03.360
Dan ini adalah salah satu cara untuk melakukannya.

04:03.360 --> 04:05.520
Kami bahkan tidak memerlukan variabel terpisah.

04:05.520 --> 04:09.390
Kami tidak membutuhkan variabel lain untuk melacak Anda tahu nilai-nilai unik.

04:09.390 --> 04:14.280
Sekarang jika kita tidak diizinkan untuk mengubah array maka ini mungkin bukan pendekatan terbaik tetapi itu

04:14.310 --> 04:17.220
bekerja dengan baik untuk keadaan yang tepat ini.

04:17.220 --> 04:17.570
BAIK.

04:17.610 --> 04:21.540
Jadi jika Anda ingin mencobanya menggunakan dua pointer mulai dari sisi kiri Anda juga

04:21.540 --> 04:27.080
bisa mulai dari sisi kanan tentu saja dan pindah ke kiri tetapi bergerak dari satu arah ke yang lain dengan dua pointer.

04:27.080 --> 04:29.640
Saya punya solusi setelah ini setelah latihan.
