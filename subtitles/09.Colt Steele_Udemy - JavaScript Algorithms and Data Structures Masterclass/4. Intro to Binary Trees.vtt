WEBVTT

00:00.120 --> 00:04.540
Selamat datang kembali seperti dunia nyata di mana kami memiliki berton-ton varietas.

00:04.550 --> 00:09.950
Jenis pohon mendapat kategori pohon yang berbeda mendapat keluarga.

00:09.940 --> 00:10.880
Saya bukan ahli botani.

00:10.890 --> 00:11.920
Saya suka pohon.

00:12.030 --> 00:15.440
Tetapi ada banyak jenis dan kita dapat menikmati semuanya di dunia.

00:15.540 --> 00:20.900
Lagi pula di dunia struktur data ilmu komputer pohon ada banyak varietas juga.

00:21.210 --> 00:26.520
Jadi sebenarnya di Wikipedia ada artikel yang berisi daftar saya tidak tahu apakah itu lengkap

00:26.730 --> 00:29.290
tapi ini mulai sekarang saya akan melihat-lihat.

00:29.310 --> 00:32.730
Ini semua varietas pohon semua jenis.

00:32.880 --> 00:36.170
Jadi mereka semua mengikuti aturan yang sama seperti yang didefinisikan oleh.

00:36.210 --> 00:44.280
Mereka cocok dengan pola pohon tetapi mereka akan menambahkan beberapa properti khusus beberapa aturan pada dasarnya sesuatu yang membuat mereka sedikit berbeda

00:44.280 --> 00:48.960
dan sering Anda tahu beberapa dari mereka akan jauh lebih cepat dalam mencari

00:48.960 --> 00:55.110
atau memasukkan sesuatu atau mereka unggul dalam menyimpan data dalam format tertentu atau data yang Anda tahu

00:55.200 --> 00:59.250
berisi banyak duplikat atau data yang semuanya unik dan semuanya.

00:59.250 --> 01:00.780
Maksud saya saya belum pernah mendengar tentang.

01:01.050 --> 01:02.900
Mayoritas bahkan bukan cara yang baik untuk menggambarkannya.

01:02.900 --> 01:06.030
Saya belum pernah mendengar tentang 95 persen dari ini.

01:06.080 --> 01:08.120
Ada beberapa pohon yang sangat bagus di sini.

01:08.310 --> 01:15.060
Dan Anda dapat melihat juga ada berbagai kategori pohon seperti simpanlah Oh sayang, saya tidak tahu apakah Anda mendengar bahwa

01:15.060 --> 01:16.300
kucing saya menunggu

01:20.300 --> 01:21.540
maaf tentang itu.

01:21.590 --> 01:22.840
Dimana aku

01:22.850 --> 01:27.230
Ada banyak jenis pohon dan berbagai kategori pengelompokan yang berbeda seperti tumpukan yang akan kita

01:27.230 --> 01:28.020
pelajari nanti.

01:28.130 --> 01:29.590
Kami akan berbicara tentang video ini.

01:29.720 --> 01:31.150
Terutama pohon biner kami.

01:31.160 --> 01:35.570
Jadi satu kelompok seperti yang bisa Anda pikirkan dalam geometri.

01:35.710 --> 01:37.980
Ada hal yang disebut poligon bentuk apa pun.

01:37.990 --> 01:44.270
Yah saya kira tidak ada bentuk apa pun cit. bentuk atau ada sejumlah sisi dan di dalamnya kita memiliki

01:44.290 --> 01:45.230
lateral kuadrat.

01:45.230 --> 01:47.790
Itu satu keluarga sama seperti ini adalah keluarga.

01:47.790 --> 01:50.210
Dan kemudian kita memiliki segitiga dan keluarga lainnya.

01:50.510 --> 01:56.180
Dan di dalam itu kami bisa membuat Anda tahu di dalam segi empat ada segi empat dan trapesium sekitar

01:56.180 --> 01:58.310
sejauh geometri saya berjalan pada titik ini.

01:58.310 --> 02:03.120
Jadi pohon yang akan kita fokuskan adalah pohon pada umumnya kita sudah meletakkannya.

02:03.230 --> 02:08.610
Tetapi lebih khusus pohon biner dan bahkan lebih khusus pohon pencarian biner.

02:08.690 --> 02:15.800
Jadi pohon pencarian biner adalah jenis khusus dari pohon biner yang merupakan jenis pohon khusus dan mereka unggul

02:15.800 --> 02:19.030
seperti yang dapat Anda bayangkan dari judul pencarian.

02:19.130 --> 02:21.860
Jadi kami menyimpan data yang diurutkan dengan cara tertentu.

02:21.910 --> 02:26.060
Kami akan tiba di sana hanya sebentar di pohon pencarian biner yang membuatnya lebih mudah untuk diambil.

02:26.060 --> 02:29.140
Mari kita rekap ini hanya pohon generik.

02:29.270 --> 02:34.750
Setiap node dapat memiliki jumlah node anak yang kami punya satu ini memiliki empat anak.

02:34.820 --> 02:35.870
Satu dua tiga empat.

02:35.930 --> 02:37.690
Yang ini tidak memiliki anak.

02:37.700 --> 02:38.390
Yang ini punya tiga.

02:38.390 --> 02:40.120
Yang ini punya dua, yang ini punya.

02:40.130 --> 02:45.050
Tidak ada aturan nyata tentang berapa banyak pohon biner yang memiliki kondisi khusus.

02:45.080 --> 02:49.530
Setiap node dapat memiliki paling banyak dua anak di bagian biner.

02:49.700 --> 02:55.140
Sehingga dapat memiliki nol anak dapat memiliki satu anak satu anak dan dapat memiliki dua anak

02:55.400 --> 03:03.170
Jadi simpul root kami biasanya memiliki dua dan kemudian masing-masing simpul dapat memiliki dua atau bisa memiliki satu atau bisa memiliki

03:03.170 --> 03:05.420
nol tetapi tidak dapat memiliki tiga.

03:05.420 --> 03:07.820
Misalnya ini bukan pohon biner.

03:07.820 --> 03:13.550
Ini adalah pohon yang valid secara umum jika kita hanya berbicara tentang pohon generik tetapi bukan pohon biner dan

03:13.930 --> 03:19.550
ada juga saya pernah mendengar tentang pohon ternary di mana ada tiga paling banyak setiap node dapat memiliki

03:19.550 --> 03:20.470
tiga anak.

03:20.510 --> 03:24.220
Saya yakin ada istilah untuk Anda tahu Khwaja quad unary.

03:24.230 --> 03:30.560
Saya tidak tahu lima enam tujuh delapan tetapi mereka tidak begitu umum dibicarakan karena pohon biner memiliki

03:30.560 --> 03:33.850
beberapa sifat khusus yang membuatnya lebih mudah dinavigasi.

03:33.860 --> 03:38.510
Dan kita akan membicarakan itu ketika kita berbicara tentang pohon pencarian biner yang

03:38.510 --> 03:43.530
sebenarnya sekarang jadi pohon pencarian biner adalah kasus khusus dari pohon biner yang merupakan jenis pohon.

03:43.550 --> 03:49.690
Jadi mereka adalah pohon yang paling mereka miliki dua anak per simpul 0 satu atau dua anak.

03:50.060 --> 03:55.310
Dan di atas semua itu pohon pencarian biner diurutkan dengan cara tertentu mereka disimpan dalam suatu urutan.

03:55.520 --> 04:00.230
Jadi B-S menggoda yang mungkin akan saya katakan sebagian besar waktu karena pohon

04:00.230 --> 04:05.220
pencarian biner sedikit mengganggu untuk mengatakan bahwa beasties digunakan untuk menyimpan data yang dapat dibandingkan.

04:05.240 --> 04:10.330
Itu agak sering disortir secara klasik, kita berbicara tentang angka dan itulah yang akan kita kerjakan.

04:10.340 --> 04:15.680
Itu bisa berupa string, bisa berupa data lain yang Anda tahu memiliki beberapa cara agar Anda dapat

04:15.680 --> 04:19.800
memesannya dan membandingkan hal-hal mana yang lebih besar mana yang lebih kecil.

04:19.910 --> 04:20.990
Jadi begini cara kerjanya.

04:20.990 --> 04:22.640
Ini adalah properti sihir khusus.

04:22.670 --> 04:29.510
Jika kita mengambil simpul apa pun di pohon itu mencoba rute semua angka atau setiap item yang kurang dari

04:29.510 --> 04:36.620
simpul ini terletak di sebelah kiri itu setiap item atau nomor dalam kasus kami yang lebih besar daripada yang terletak di

04:36.620 --> 04:37.420
sebelah kanan.

04:37.910 --> 04:40.800
Dan Anda bisa mengulanginya di setiap simpul anak.

04:40.820 --> 04:47.390
Jadi jika kita melihat enam di sebelah kiri adalah angka-angka yang lebih kecil dari 6 di sebelah kanan adalah angka-angka yang

04:47.390 --> 04:51.000
lebih besar dari 6 seperti 8 atau 15 di sini.

04:51.020 --> 04:57.240
Kami hanya memiliki satu node tetapi 20 lebih besar dari 15 sehingga terletak di sebelah kanannya.

04:57.290 --> 05:01.900
Jadi untuk meninjau bahwa pohon pencarian biner adalah jenis pohon biner.

05:02.120 --> 05:07.160
Setiap simpul orangtua memiliki paling banyak dua anak tetapi di atas itu setiap simpul di sebelah

05:07.190 --> 05:12.410
kiri simpul induk selalu lebih kecil dari induk dan setiap simpul di sebelah kanan simpul induk selalu lebih

05:12.410 --> 05:13.460
besar daripada induknya.

05:13.460 --> 05:15.620
Jadi, inilah contoh yang sedikit lebih besar.

05:15.710 --> 05:19.840
Kami mengambil simpul seperti root semua simpul ke kiri.

05:19.850 --> 05:24.800
Semua ini harus kurang dari empat puluh satu dan segala yang di sebelah kanan lebih besar dari 41.

05:25.190 --> 05:27.510
Dan kemudian kita bisa mencobanya lagi di sini pukul 20.

05:27.530 --> 05:33.410
Segala yang di kiri harus kurang dari 20 dan itu semua di sebelah kanan lebih besar dari 20.

05:33.410 --> 05:35.050
Hal yang sama turun ke 11.

05:35.180 --> 05:36.050
Bla bla bla.

05:36.050 --> 05:38.430
Di sini itu adalah properti yang persis sama.

05:38.480 --> 05:43.400
Jadi itulah yang membuat pohon pencarian biner pohon pencarian biner bukan hanya pohon biner.

05:43.610 --> 05:49.280
Jadi data disimpan dalam urutan tertentu setiap simpul setiap anak di sebelah kanan lebih besar dari simpul. Simpul

05:49.630 --> 05:53.900
induk dan setiap potongan data di sebelah kiri lebih kecil dari simpul induk.
