WEBVTT

00:00.230 --> 00:01.470
Hai, selamat datang kembali.

00:01.470 --> 00:04.970
Jadi kita beralih ke ketiga algoritma penyortiran dasar kami.

00:04.980 --> 00:06.650
Yang terakhir untuk bagian ini.

00:06.750 --> 00:13.500
Sebelum kita beralih ke beberapa yang lebih menakutkan beberapa yang lebih mewah mari kita menyebutnya mewah alih-alih

00:13.500 --> 00:14.070
menakutkan.

00:14.150 --> 00:15.840
Jadi semacam penyisipan.

00:15.870 --> 00:17.720
Sebenarnya ini sangat mirip dengan jenis gelembung.

00:17.730 --> 00:21.000
Dan dua jenis pilihan yang saya maksud adalah menggabungkan semuanya.

00:21.120 --> 00:26.220
Namun ada beberapa perbedaan utama beberapa hal yang jenis penyisipan sebenarnya bagus.

00:26.220 --> 00:28.950
Jadi ini bukan salah satu yang hanya perlu diketahui.

00:28.950 --> 00:30.400
Ini bukan hanya tantangan yang bagus.

00:30.450 --> 00:35.150
Ada situasi di mana penyisipan bekerja dengan baik dan saya akan menjelaskannya saat kita melanjutkan.

00:35.250 --> 00:37.320
Tapi pertama-tama mari kita bicara tentang cara kerjanya.

00:37.350 --> 00:44.440
Jadi ia membangun semacam itu dengan secara bertahap membuat setengah lebih besar dari array yang selalu diurutkan.

00:44.460 --> 00:50.370
Jadi, alih-alih mencari satu, bukan menemukan elemen terbesar pada suatu waktu atau menemukan elemen terkecil pada suatu

00:50.370 --> 00:56.190
waktu, ia mengambil setiap elemen dan menempatkannya di tempat yang seharusnya berada di bagian yang diurutkan.

00:56.190 --> 00:57.150
Jadi mari kita lihat.

00:57.160 --> 01:03.480
Itu tidak terlalu berarti, tetapi jika ini adalah keadaan awal kita, kita mulai dengan ini diurutkan setengah array

01:03.480 --> 01:05.280
ditampilkan dalam warna hijau.

01:05.280 --> 01:10.150
Jadi sekarang setengah bukan belokan kanan dengan cara bagian korsleting diurutkan.

01:10.440 --> 01:13.370
Dan nilai kami adalah tiga.

01:13.410 --> 01:16.640
Jadi di mana kita akan meletakkan 3 untuk mengurutkan bagian ini.

01:16.680 --> 01:18.260
Yah kita sudah menempatkannya sebelum jam lima tepat.

01:18.270 --> 01:20.330
Kami memasukkannya ke tempat yang tepat.

01:20.340 --> 01:21.530
Sekarang kita menekan empat.

01:21.750 --> 01:22.840
Kemana perginya.

01:22.950 --> 01:24.700
Kami memasukkannya di antara keduanya.

01:24.990 --> 01:27.180
Jadi sekarang ini adalah porsi kami.

01:27.180 --> 01:31.500
Lalu kita tekan satu di mana kita harus meletakkan itu di awal dan kita tekan dua.

01:31.560 --> 01:33.680
Di mana kita memasukkan itu di sana.

01:33.690 --> 01:34.910
Indeks 1.

01:35.040 --> 01:39.780
Jadi, Anda dapat melihat apa yang terjadi adalah kami secara bertahap membangun bagian yang diurutkan dari array

01:39.780 --> 01:42.920
dengan memasukkan satu item pada suatu waktu di tempat yang benar.

01:42.930 --> 01:45.100
Jadi, inilah langkah cepatnya.

01:45.480 --> 01:52.200
Jika kita mulai dengan array kecil ini, kita memiliki tiga dan kita mengambil 44 dan kita mencari tahu di mana ia harus pergi

01:52.770 --> 01:54.120
di bagian yang diurutkan.

01:54.120 --> 01:59.640
Yah sebenarnya itu hanya berjalan kembali ke tempat itu karena itu lebih besar dari tiga di situlah tempatnya.

01:59.750 --> 02:01.320
Tapi sekarang kita mencapai 38.

02:01.320 --> 02:04.830
Di mana kita harus meletakkan 38 di bagian kiri ini.

02:04.830 --> 02:09.870
Kami menempatkannya di antara keduanya seperti itu maka lima.

02:09.870 --> 02:10.900
Kemana harus pergi.

02:11.070 --> 02:12.670
Yah tidak pergi ke sana, melakukannya.

02:12.840 --> 02:13.190
Nggak.

02:13.260 --> 02:15.100
Jadi kita harus memeriksa yang berikutnya untuk melihatnya pergi ke sana.

02:15.270 --> 02:16.430
Iya nih.

02:16.440 --> 02:25.610
Di antara kedua 47 dibandingkan dengan 44 ke atas Anda hanya pergi tepat di mana Anda 15 dibandingkan dengan 47.

02:25.620 --> 02:27.810
Tidak dibandingkan dengan 44.

02:27.840 --> 02:29.570
Tidak dibandingkan dengan 38.

02:29.670 --> 02:31.370
Tidak dibandingkan dengan lima.

02:31.530 --> 02:32.170
Iya nih.

02:32.250 --> 02:34.450
Dan sekarang kita memiliki array yang diurutkan.

02:34.740 --> 02:37.500
Jadi semoga Anda bisa melihat mengapa ini disebut jenis penyisipan.

02:37.530 --> 02:42.030
Kami mengambil elemen satu per satu dan memasukkannya di tempat yang benar.

02:42.070 --> 02:48.390
Tetapi sejauh kode pseudo apa yang Anda lakukan, Anda mulai dengan memilih elemen kedua dalam array karena

02:48.660 --> 02:52.810
bagian kami yang diurutkan akan dianggap sebagai elemen pertama di awal.

02:53.040 --> 02:54.570
Jadi kita tidak perlu mengurutkan elemen pertama.

02:54.600 --> 03:00.370
Jadi kami mengambil yang kedua dan kami membandingkannya dengan yang sebelumnya dan jika perlu kami menukar mereka.

03:00.900 --> 03:04.290
Lalu kami melanjutkan ke elemen berikutnya dan memeriksa apakah itu ada di tempat yang benar.

03:04.290 --> 03:07.020
Jadi kita beralih melalui bagian yang disortir ke kiri.

03:07.020 --> 03:12.020
Pada titik ini jika kita telah mengurutkan dua di antaranya dua di kiri dan kita mencari tahu di mana harus meletakkan yang ketiga.

03:12.630 --> 03:16.780
Dan kami ulangi sampai array diurutkan dan kemudian mengembalikan array itu.
