WEBVTT

00:00.300 --> 00:00.910
Selamat datang kembali.

00:00.960 --> 00:07.320
Jadi komponen dasar terakhir kita di sekitar menambahkan tepi dan simpul dan menghapusnya adalah menghapus simpul.

00:07.320 --> 00:13.020
Jadi misalkan Anda tahu kami memodelkan maskapai ini dan kami dulu sering terbang keluar. Saya tidak tahu banyak

00:13.020 --> 00:15.300
tentang Hong Kong, tetapi sekarang sesuatu terjadi.

00:15.330 --> 00:20.400
Kita adalah itu. Saya tidak tahu mengapa ini tampak seperti tempat yang tidak akan pernah Anda tarik karena takut terhadap maskapai tetapi

00:20.400 --> 00:24.260
anggap saja kami menghapusnya dari peta kami, kami tidak ingin lagi terbang ke Hong Kong.

00:24.330 --> 00:28.370
Itu berarti menghapus semua tepi dan juga menghapus Virtex itu sendiri.

00:28.410 --> 00:30.370
Jadi ini sedikit lebih rumit.

00:30.870 --> 00:36.180
Jadi kami akan menulis fungsi yang disebut hapus Virtex dan menerima argumen tunggal hanya nama Virtex

00:36.180 --> 00:37.530
yang kami coba hapus.

00:37.920 --> 00:43.440
Itu harus berulang selama ada simpul lain dalam daftar adjacency untuk simpul itu.

00:43.440 --> 00:51.330
Jadi artinya jika kita memiliki Hong Kong dalam daftar kedekatan kita dan ada sepuluh sisi, itu hanya 10 kota lain

00:51.630 --> 00:54.900
yang perlu kita lewati dan hapus setiap koneksi.

00:54.900 --> 00:57.700
Tidak cukup hanya dengan menghapus Hong Kong dari daftar.

00:57.720 --> 00:59.740
Kami juga harus menghapus semua tepi.

00:59.790 --> 01:02.790
Kalau tidak, kita dibiarkan dengan tepi yang rusak ini.

01:02.790 --> 01:06.420
Jadi di dalam loop kita hanya akan menggunakan fungsi hapus tepi kita.

01:06.420 --> 01:12.600
Kami telah menetapkan sehingga kami akan memanggil hapus tepi untuk setiap tepi di titik atau mencoba untuk menghapus.

01:12.930 --> 01:17.520
Dan kemudian yang terakhir saya akan benar-benar menghapus kunci yang berdekatan dengan daftar.

01:18.030 --> 01:19.740
Jadi, saya tunjukkan seperti apa itu.

01:19.740 --> 01:22.700
Jika ini adalah kondisi awal kita, ini sedikit lebih rumit.

01:23.730 --> 01:27.660
Katakanlah kita akan menghapus Hong Kong seluruh vertex.

01:27.660 --> 01:32.330
Jadi apa yang sebenarnya berarti menghapus adalah seluruh baris ini tentu saja.

01:32.580 --> 01:37.570
Tetapi jika kita hanya menyingkirkan ini maka kita akan memiliki Tokyo masih referensi ke Hong Kong.

01:37.890 --> 01:41.410
Bahkan jika Hong Kong pergi dan itu rusak itu tidak baik.

01:41.640 --> 01:45.570
Jadi kita juga perlu menghapus yang perlu kita hapus.

01:45.570 --> 01:48.640
Los Angeles memiliki koneksi ke Hong Kong dan Dallas.

01:48.870 --> 01:50.490
Jadi kita harus menghapus semua itu.

01:50.850 --> 01:53.530
Jadi logika kami benar-benar mengambil Hong Kong.

01:53.550 --> 01:54.660
Itulah yang kami hapus.

01:54.720 --> 02:01.620
Ulangi arraynya dan untuk masing-masing disebut remove edge yang sudah ditentukan yang akan menghapus Tokyo dari Hong Kong

02:01.620 --> 02:07.390
dan menghapus Hong Kong dari Tokyo remove edge di Dallas di Hong Kong dan seterusnya.

02:07.440 --> 02:10.680
Dan akhirnya kita masih harus menghapus Hong Kong.

02:10.710 --> 02:13.820
Kuncinya agar tidak ada referensi ke Hong Kong di sini.

02:14.010 --> 02:16.980
Dan itu sesuatu yang mungkin tidak terlalu sering Anda lakukan.

02:16.980 --> 02:18.030
Saya tidak sering melakukannya.

02:18.030 --> 02:22.340
Biasanya Anda membiarkannya kosong atau mengaturnya menjadi tidak terdefinisi atau apalah.

02:22.350 --> 02:26.000
Tapi mari kita hapus semuanya dari daftar kedekatan kita.

02:26.010 --> 02:31.710
Tetapi dalam Javascript Anda dapat melakukannya dengan hanya menghapus dan kemudian hal yang Anda coba hapus.

02:31.740 --> 02:33.880
Jadi inilah yang akan kita akhiri pada akhir hari.

02:33.930 --> 02:35.580
Semua jejak pistol Hong Kong.
