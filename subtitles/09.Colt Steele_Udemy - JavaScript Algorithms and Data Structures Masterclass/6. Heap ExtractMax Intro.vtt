WEBVTT

00:00.170 --> 00:01.270
Hai, selamat datang kembali.

00:01.290 --> 00:04.230
Jadi kita telah melihat cara memasukkan node atau elemen ke tumpukan.

00:04.230 --> 00:05.600
Sekarang mari kita bicara tentang yang sebaliknya.

00:05.640 --> 00:11.940
Menghapus hal-hal tempat standar dari satu area yang biasanya kita hapus adalah root.

00:11.940 --> 00:16.530
Jadi di emacs biner heap itu berarti menghapus apa artinya dengan root di kedua kasus.

00:16.530 --> 00:22.260
Tetapi itu berarti menghapus elemen maksimum nilai tertinggi dan dalam tumpukan biner itu berarti menghapus

00:22.260 --> 00:23.460
nilai terendah minimum.

00:23.460 --> 00:25.920
Jadi metode yang kita definisikan Kita bisa menyebutnya hapus.

00:25.920 --> 00:30.990
Kita juga bisa menyebutnya mengekstrak maksimum atau mengekstrak Max dan itu cukup umum untuk melihatnya.

00:30.990 --> 00:36.870
Jadi ketika kita melanjutkan untuk mengimplementasikan antrian prioritas misalnya di mana setiap elemen diberi tingkat

00:36.870 --> 00:40.750
prioritas dan kami ingin menghapus sesuatu berdasarkan tingkat prioritasnya.

00:41.040 --> 00:46.360
Yah prioritas tertinggi dalam binary emacs setidaknya akan selalu naik ke atas dan oleh karena itu kami

00:46.610 --> 00:49.170
akan menghapus dari dalam antrian prioritas kami.

00:49.170 --> 00:51.360
Saya tidak bisa berbicara dengan baik selalu mengambil rute itu.

00:51.360 --> 00:54.110
Ini akan menjadi item prioritas tertinggi.

00:54.270 --> 01:00.210
Cara kerjanya mirip dengan menyisipkan di mana kita tidak bisa hanya menghapus ini dan melakukan apa yang tidak bisa kita tinggalkan begitu saja.

01:00.210 --> 01:05.160
Tentu saja kita harus memiliki rute baru, tetapi kemudian kita tidak bisa hanya menempatkan beberapa kita bisa bertukar dengan elemen apa pun dan

01:05.160 --> 01:06.140
hanya meletakkannya di sana.

01:06.390 --> 01:08.250
Tetapi kemungkinan besar akan salah.

01:08.340 --> 01:11.850
Ini tidak akan menjadi Anda tahu bahwa tumpukan kompak yang benar.

01:11.850 --> 01:18.540
Jadi yang kita lakukan adalah menghapus elemen ini dan menukarnya atau menempatkan nilai terakhir saat ini.

01:18.540 --> 01:19.970
Ini adalah cara standar untuk melakukannya.

01:19.980 --> 01:23.980
Nilai 12 terakhir dalam kasus kami akan di sini dan kemudian kami sesuaikan.

01:24.150 --> 01:27.320
Yang saya selalu dengar sebagai tenggelam atau tenggelam.

01:27.480 --> 01:29.320
Tapi saya melihat Wikipedia.

01:29.340 --> 01:31.050
Ada banyak istilah untuk itu.

01:31.050 --> 01:35.790
Prosedur untuk menghapus root dari heap secara efektif mengekstraksi elemen max

01:36.030 --> 01:40.890
di heap max atau elemen minimum di heap min dan memulihkan sifat-sifatnya

01:40.890 --> 01:49.890
sehingga memastikan semuanya baik-baik saja lagi disebut heap alias menggelegak turun meresap turun disaring mengalir turun ke bawah mengalir turun dan mengekstrak

01:49.890 --> 01:51.690
min dan maks.

01:51.900 --> 01:54.090
Tidak ada tempat yang benar-benar mengatakan tenggelam.

01:54.150 --> 01:57.930
Itulah yang selalu saya dengar jadi saya agak tersinggung dengan itu.

01:57.960 --> 02:00.360
Mereka memiliki begitu banyak pilihan tetapi hidup saya bohong.

02:00.360 --> 02:01.840
Tidak ada wastafel.

02:01.890 --> 02:03.260
Tapi itu ide yang sama.

02:03.270 --> 02:06.600
Jadi kami memiliki gelembung ketika itulah kami memiliki elemen di akhir.

02:06.610 --> 02:09.180
Ada akhir di tempat yang salah.

02:09.210 --> 02:11.770
Ini item terakhir dan kami menggembungkannya ke tempat yang benar.

02:11.970 --> 02:17.220
Nah dalam hal ini apa yang akan kita lakukan adalah meletakkan elemen di root

02:17.220 --> 02:23.040
yang kemungkinan besar salah dan membuatnya jatuh ke bawah menyaring apa pun ke lokasi yang benar.

02:23.490 --> 02:27.330
Jadi misalnya jika ini yang kita mulai dengan Belum ada yang dihapus.

02:27.330 --> 02:33.550
Tetapi jika saya ingin menghapus root saya memanggil ekstrak Max adalah apa yang elemen atau apa metode.

02:33.630 --> 02:35.680
Ini akan memakan waktu 41.

02:35.700 --> 02:41.570
Hapus dari array ini atau daftar ini dan kemudian ambil 12 dan letakkan di tempatnya.

02:41.700 --> 02:43.140
Jadi kita berakhir dengan ini.

02:43.170 --> 02:49.830
Kami menghapus 41 dan 12 pergi ke awal dan akhirnya kami dengan struktur yang tidak benar

02:50.340 --> 02:51.180
sama sekali.

02:51.600 --> 02:59.860
Jadi langkah selanjutnya adalah memanggil apa pun yang Anda duduk atau duduk dan kami membandingkannya dengan anak-anaknya.

02:59.910 --> 03:02.950
Kami mengambil 12 dan kami melihat dua anaknya.

03:02.970 --> 03:08.190
Kami mengambil mana yang lebih besar dari yang 39 dan kemudian kita akan bertukar.

03:08.190 --> 03:11.240
Anggap 12 itu memang kurang dari 39.

03:11.400 --> 03:15.250
Artinya 39 layak atau harus menjadi rute baru.

03:15.360 --> 03:16.560
Lebih dari 12.

03:16.620 --> 03:18.670
Jadi kalau memang begitu.

03:18.750 --> 03:19.440
Kami bertukar.

03:19.560 --> 03:26.130
OK jadi sekarang setelah 39 ada di tempat yang benar kita kembali ke 12 dan kita membandingkannya dengan anak baru atau kedua

03:26.130 --> 03:27.340
anak baru sebenarnya.

03:27.540 --> 03:30.030
Dan kita akan menukar dengan yang lebih besar.

03:30.030 --> 03:31.650
Jika salah satunya lebih besar.

03:31.830 --> 03:36.480
Jika keduanya lebih kecil daripada lebih banyak di tempat yang benar dan kami tidak perlu bertukar.

03:36.480 --> 03:38.790
Namun dalam hal ini keduanya lebih besar.

03:38.910 --> 03:45.480
Jadi kita akan menukar 12 dan 27 dan akan melakukan itu dan kita selesai.

03:45.510 --> 03:51.080
12 sekarang telah tenggelam ke lokasi yang benar yang pada dasarnya di bagian paling akhir lagi.

03:51.360 --> 03:57.000
Hanya saja dulu ada di sebelah kiri karena kami memiliki simpul tambahan tetapi kami menghapus simpul itu

03:57.000 --> 04:00.300
dan karenanya harus mengayunkan jalannya ke tempat yang benar.

04:00.690 --> 04:03.540
Tapi sekarang semuanya bahagia lagi di tumpukan biner kami.

04:03.600 --> 04:11.250
Jadi saya akan tunjukkan satu lagi contoh animasi yang sedikit lebih baik pada visual algo visual go mereka menyebutnya ekstrak Max.

04:11.280 --> 04:18.720
Itu tidak disebut hapus tetapi jika saya menyebutnya langkah mundur itu menghapus root yang 70 dan itu akan

04:18.720 --> 04:19.530
bertukar.

04:19.560 --> 04:26.540
Sebenarnya bukan swap yang akan menggantinya dengan elemen terakhir 31 jadi 31 naik ke sana.

04:26.720 --> 04:28.530
Dan jelas itu salah.

04:28.700 --> 04:30.920
Ini bukan elemen terbesar, bukan maks.

04:30.920 --> 04:33.270
Jadi kami membandingkannya dengan kiri dan kanan.

04:33.440 --> 04:40.370
Dan keduanya lebih besar tetapi 67 lebih besar dari 65 jadi kita akan bertukar di sana.

04:40.790 --> 04:44.590
Sekarang 67 adalah rute baru, maksimum baru, elemen maksimum.

04:44.600 --> 04:46.140
Itu di tempat yang benar.

04:46.160 --> 04:47.450
Ini disemen.

04:47.450 --> 04:48.530
Sekarang kita melakukan hal yang sama.

04:48.680 --> 04:51.860
Kami membandingkannya 31 hingga 45 dan 58.

04:51.860 --> 04:53.360
Keduanya lebih besar.

04:53.360 --> 04:57.260
Kami akan menukar dengan yang lebih besar yaitu 58.

04:57.260 --> 04:58.220
Itu dia.

04:58.330 --> 05:00.310
Sekarang tidak ada anak yang tersisa.

05:00.320 --> 05:01.960
Kami tidak memiliki apa pun untuk bertukar dengan.

05:02.000 --> 05:04.090
Dan itu berada di tempat yang benar.

05:04.160 --> 05:08.470
Dan kemudian kami mungkin akan mengembalikan 70 yang merupakan apa yang kami hapus.

05:08.650 --> 05:08.870
Kanan.

05:08.870 --> 05:09.580
Itulah intinya.

05:09.580 --> 05:13.550
Kami menghapus Mac dan kami mungkin ingin mengembalikannya sekali lagi hanya untuk mengukur

05:13.610 --> 05:15.560
baik akan lebih cepat kali ini.

05:15.560 --> 05:17.080
Apa Hellmann di atas.

05:17.190 --> 05:18.320
Enam puluh tujuh.

05:18.320 --> 05:19.180
Baiklah kita menghapusnya.

05:19.190 --> 05:22.120
Kami menggantinya dengan 15 dan sekarang kami membandingkan.

05:22.220 --> 05:22.680
Baiklah.

05:22.680 --> 05:23.990
Enam puluh lima adalah yang terbesar.

05:24.020 --> 05:25.180
Jadi sekarang kita bertukar di sana.

05:25.220 --> 05:27.620
Sekarang kami memiliki 15 dan 40 dan 53.

05:27.710 --> 05:30.470
Kami menukar 53 karena itu yang lebih besar.

05:30.470 --> 05:33.130
Dan sekarang di tempat peristirahatan terakhirnya.

05:33.140 --> 05:34.360
Itu tidak pergi ke tempat lain.

05:34.370 --> 05:34.860
Baiklah.

05:34.910 --> 05:35.950
Jadi, inilah kode semu.

05:35.960 --> 05:41.300
Jika Anda ingin mencoba dan menerapkannya dengan benar metode di kelas kami atau tumpukan biner Max disebut

05:41.300 --> 05:45.740
Anda bisa menyebutnya hapus atau saya akan menyebutnya ekstrak Max atau ekstrak maksimum.

05:45.740 --> 05:48.130
Tidak perlu argumen apa pun Anda menyebutnya.

05:48.260 --> 05:52.220
Dan apa yang akan dilakukan adalah mengembalikan root ke root yang lama.

05:52.280 --> 05:56.690
Tetapi juga akan menghapus root itu dan memperbarui pohon atau secara teknis heap.

05:56.780 --> 05:58.580
Jadi Anda dapat mengikuti kode pseudo jika Anda mau.

05:58.600 --> 06:04.160
Anda tidak harus melakukan baris ini untuk baris tetapi pada dasarnya mengambil nilai pertama dan menukar

06:05.150 --> 06:07.880
dengan yang terakhir lalu menghapus yang terakhir.

06:07.910 --> 06:10.920
Gunakan pop agar kita mendapatkan root yang lama.

06:11.060 --> 06:14.800
Jadi kita akan memiliki root swap dengan item terakhir dan kemudian pop item terakhir.

06:14.900 --> 06:20.000
Tetapi secara efektif mengeluarkan item pertama dan kemudian menggantinya dengan item terakhir.

06:20.180 --> 06:23.180
Maka Anda harus sampai ke bagian wastafel.

06:23.180 --> 06:25.840
Ini menyaring turun meresap ke bawah.

06:26.090 --> 06:29.890
Pada dasarnya mulailah dari indeks root, mulailah dari nol.

06:29.960 --> 06:35.720
Mulailah dengan penghitung kecil atau variabel indeks dan temukan indeks anak kiri dan anak

06:35.720 --> 06:37.600
kanan untuk indeks itu.

06:37.610 --> 06:39.010
Jadi untuk nol itu mudah.

06:39.150 --> 06:45.440
Benar kita tahu bahwa jika suatu elemen berada di lokasi 0 itu anak pertama itu hanya lokasi 1 dan indeks 2 adalah

06:45.440 --> 06:46.510
anak yang tepat.

06:46.790 --> 06:53.870
Tetapi pada dasarnya lakukan ini dua kali indeks matematika untuk kita satu dua kali dan X ditambah dua dan mengambil dua

06:53.870 --> 06:59.510
nilai yang Anda temukan dua anak kemudian mengambil anak-anak itu dan membandingkannya dengan elemen di orangtua.

06:59.510 --> 07:01.250
Elemen pertama adalah rute baru.

07:01.490 --> 07:05.090
Dan jika salah satunya lebih besar Anda akan bertukar.

07:05.150 --> 07:12.050
Namun saya perhatikan bahwa jika anak kiri dan kanan lebih besar dari orang tua maka bertukar dengan

07:12.050 --> 07:13.100
anak terbesar.

07:13.100 --> 07:15.330
Kita ini yang kita lihat di sini.

07:15.650 --> 07:23.440
Jika saya melangkah mundur ketika kami bertukar 15 di bagian atas kami membandingkannya dengan 58 dan 65.

07:23.450 --> 07:24.490
Keduanya lebih besar.

07:24.680 --> 07:26.500
Tapi Anda akan menukar dengan 65.

07:26.810 --> 07:32.870
Dan kemudian setelah Anda bertukar jika Anda menukar anak yang baru saja Anda bertukar dengan indeks itu

07:32.870 --> 07:38.990
menjadi indeks induk baru dan kemudian Anda mencari anak-anak baru dan Anda mengulangi proses Anda mengulang dan terus

07:38.990 --> 07:45.770
bertukar loop dan bertukar sampai anak tidak lebih besar dari elemen yang berarti bahwa Anda telah berhasil menenggelamkan elemen yang

07:45.770 --> 07:50.660
Anda tempatkan di root dan perlu menyaring jalannya ke tempat yang benar dan kemudian

07:50.660 --> 07:53.110
pada akhirnya mengembalikan root yang lama.

07:53.120 --> 07:55.850
Itulah inti keseluruhan yang seharusnya menjadi maksimum.

07:55.910 --> 08:01.400
Jadi berikan yang ini bidikan lagi ingat matematika di sini itu indeks dua kali plus satu dua

08:01.400 --> 08:05.780
kali indeks ditambah dua untuk menemukan anak-anak kiri dan kanan diberi indeks orangtua

08:05.780 --> 08:06.650
Ambil itu.

08:06.680 --> 08:12.860
Temukan anak-anak membandingkan kedua anak dengan elemen yang sekarang di root dan kemudian bertukar jika Anda membutuhkan

08:12.860 --> 08:13.440
dua.

08:13.550 --> 08:19.070
Dan kemudian Anda semacam menggeser jendela Anda sehingga bukannya melihat root. Anda melihat Anda tahu

08:19.070 --> 08:24.500
indeks baru dan melihat anak-anaknya dan terus berjalan sampai tidak ada yang bisa ditukar.

08:24.500 --> 08:24.940
Baiklah.

08:25.040 --> 08:27.020
Jadi, berikan ekstrak suntikan Max.

08:27.060 --> 08:27.740
Saya akan punya solusi.

08:27.740 --> 08:28.130
Berikutnya.
