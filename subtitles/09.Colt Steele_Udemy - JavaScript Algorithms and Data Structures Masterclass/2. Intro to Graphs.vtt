WEBVTT

00:00.270 --> 00:01.480
Hai, selamat datang kembali.

00:01.500 --> 00:02.630
Ini bagian baru di sini.

00:02.700 --> 00:04.920
Setidaknya ini adalah pagi yang baru bagi saya.

00:04.920 --> 00:10.940
Merekam ini dan yang paling penting struktur data baru yang membuat grafik jadi saya suka grafik secara pribadi mereka

00:10.950 --> 00:16.560
menyenangkan untuk diajarkan. Mereka menyenangkan untuk diimplementasikan tetapi yang paling penting mereka benar-benar berguna di dunia saat

00:16.560 --> 00:17.030
ini.

00:17.040 --> 00:24.060
Grafik pada dasarnya digunakan di setiap jejaring sosial kapan saja kita memodelkan pengguna dan mesin rekomendasi

00:24.060 --> 00:24.750
misalnya.

00:24.750 --> 00:30.490
Ketika Netflix merekomendasikan film lain atau sesuatu untuk Anda atau pengiklan menargetkan Anda berdasarkan sesuatu.

00:30.510 --> 00:32.490
Grafik biasanya dimainkan.

00:32.700 --> 00:38.780
Dan ketika saya mengatakan grafik kita tidak berbicara tentang grafik yang dalam bahasa Inggris sering kita sebut grafik itu.

00:38.790 --> 00:43.260
Sekarang berbicara tentang jenis grafik yang terlihat dua dimensi ini struktur data yang sangat berbeda

00:43.260 --> 00:44.170
dari ini.

00:44.190 --> 00:47.880
Jadi apa yang akan kita dapatkan hanya sesaat tapi pertama-tama tujuan kita.

00:48.090 --> 00:49.520
Jadi jelaskan apa itu grafik.

00:49.860 --> 00:51.330
Jelas bisa memulai dari sana.

00:51.330 --> 00:56.430
Membandingkan dan membedakan berbagai jenis grafik dan juga akan membandingkan dan membandingkan

00:56.430 --> 01:02.390
grafik dengan struktur lain yang pernah kita lihat seperti pohon yang sebenarnya merupakan jenis grafik khusus.

01:02.550 --> 01:06.750
Dan kemudian juga berbicara tentang utilitas aplikasi mereka di dunia nyata.

01:06.870 --> 01:10.390
Kemudian kita akan mengimplementasikan grafik menggunakan sesuatu yang disebut daftar adjacency.

01:10.410 --> 01:12.720
Jadi ada beberapa cara untuk mengimplementasikan grafik.

01:12.750 --> 01:17.670
Saya hanya akan menunjukkan kepada Anda satu daftar kedekatan dan kita akan berbicara tentang mengapa kemudian kita akan

01:17.670 --> 01:25.410
menelusuri melalui grafik menggunakan B tua kita yang baik jika s dan DFS luasnya pertama dalam pencarian pencarian pertama dan perbandingan grafik algoritma traversal kontras kita ' Saya

01:25.410 --> 01:27.720
akan berbicara tentang big-O di sepanjang jalan.

01:27.720 --> 01:33.230
Bicara tentang beberapa algoritma yang menyenangkan tetapi mari kita mulai dengan hanya berbicara tentang apa itu grafik.

01:33.230 --> 01:39.810
Singkirkan Wikipedia struktur data grafik terdiri dari kumpulan simpul atau titik yang terbatas dan mungkin bisa berubah bersama-sama dengan

01:39.810 --> 01:44.340
satu set pasangan simpul yang diperintahkan untuk grafik yang tidak diarahkan atau serangkaian

01:44.340 --> 01:46.850
pasangan yang dipesan untuk grafik yang diarahkan.

01:47.220 --> 01:48.690
OK, kamu mengerti.

01:49.310 --> 01:49.570
Ya.

01:49.610 --> 01:53.790
Itu tidak terlalu masuk akal atau mungkin tidak masuk akal.

01:53.790 --> 02:00.420
Agak kikuk benar-benar turun ke apa adalah grafik adalah kumpulan node dan koneksi antara

02:00.420 --> 02:01.810
catatan itu.

02:01.830 --> 02:09.030
Jadi jika kita kembali dan membaca definisi itu lagi mari kita menyortir sekilas simpul atau catatan yang

02:09.030 --> 02:09.540
terbatas.

02:09.540 --> 02:15.630
Jadi anggap saja satu set simpul bersama dengan satu set pasangan simpul ini.

02:15.630 --> 02:17.340
Jadi itulah koneksinya.

02:17.460 --> 02:22.100
Jadi kami memiliki banyak titik, beberapa titik dan kemudian koneksi di antara mereka.

02:22.290 --> 02:24.310
Jadi ini adalah grafik yang valid.

02:24.330 --> 02:27.890
Ini adalah node dan ini adalah koneksi.

02:28.500 --> 02:30.150
Ini grafik lain yang valid.

02:30.150 --> 02:33.170
Node yang sama hanya koneksi yang berbeda.

02:33.360 --> 02:36.960
Jadi penempatan mereka dalam diagram ini tidak masalah.

02:36.960 --> 02:38.600
Kita dapat memiliki struktur yang sama ini.

02:38.600 --> 02:40.660
Hanya koneksi yang penting.

02:40.770 --> 02:46.290
Tapi Anda tahu apakah ini adalah jika ada jauh di sini atau F ini jauh di sini tidak masalah

02:46.290 --> 02:49.620
selama kita memiliki garis yang sama dengan koneksi yang sama.

02:49.620 --> 02:51.750
Ini benar-benar hanya tentang garis-garis itu.

02:51.780 --> 02:52.010
BAIK.

02:52.020 --> 02:54.180
Jadi ini adalah grafik yang valid.

02:54.180 --> 02:55.210
Ini satu lagi.

02:55.290 --> 02:58.280
Kami memiliki beberapa node dengan koneksi di antara mereka.

02:58.580 --> 02:59.660
Apakah saya punya satu lagi.

02:59.660 --> 03:00.320
Kita mulai.

03:00.330 --> 03:06.360
Yang sangat berbeda mencari satu jumlah node yang sama huruf yang sama untuk masing-masing tetapi koneksi berbeda

03:06.360 --> 03:07.490
garis yang berbeda.

03:07.500 --> 03:12.810
Jadi jika kita kembali ke sesuatu seperti daftar tertaut dan kita berbicara tentang daftar tertaut, kita

03:12.810 --> 03:14.970
punya simpul yang terhubung secara linear.

03:15.180 --> 03:20.040
Ketika kami tidak memiliki pohon, kami memiliki simpul bahwa ada satu induk.

03:20.050 --> 03:21.380
Satu simpul paling atas.

03:21.630 --> 03:26.400
Dan kemudian dari sana ada sekelompok anak-anak yang turun dari satu simpul itu dan setiap orang tua

03:26.400 --> 03:28.580
dapat memiliki anak-anak mereka sendiri dan seterusnya.

03:28.650 --> 03:33.060
Jadi pohon adalah jenis grafik tetapi dalam grafik ini kita melihat di sini.

03:33.420 --> 03:36.420
Tidak ada orang tua, tidak ada tempat awal.

03:36.540 --> 03:38.440
Tidak ada titik masuk yang Anda ketahui.

03:38.490 --> 03:45.000
Ini semua hanya catatan diperlakukan sama dan mereka terhubung dengan cara yang berbeda dan koneksi itu dapat berarti

03:45.000 --> 03:46.440
hal yang berbeda.

03:46.440 --> 03:48.210
Mari kita bicara tentang beberapa contoh.

03:48.210 --> 03:50.180
Pertama-tama di mana Anda akan menggunakan ini.
