WEBVTT

00:00.180 --> 00:00.690
Baiklah.

00:00.690 --> 00:01.420
Selamat datang kembali.

00:01.560 --> 00:04.630
Mari kita cepat berbicara tentang membangun q dengan array.

00:04.710 --> 00:06.640
Jadi ini cara yang mudah.

00:06.690 --> 00:09.980
Jadi yang benar-benar perlu kita lakukan adalah membuat variabel.

00:10.050 --> 00:10.830
Saya hanya akan memanggil milik saya.

00:10.830 --> 00:16.870
T Sukai surat itu dan bukan T Anda EUV berpikir Anda mengejanya.

00:16.890 --> 00:21.900
Jadi ini adalah array kosong dan ada beberapa setidaknya ada dua cara untuk melakukan ini.

00:22.170 --> 00:24.860
Kita bisa menambahkan ke awal atau menambahkan ke akhir.

00:24.900 --> 00:26.450
Jadi mari kita pilih satu.

00:26.550 --> 00:31.050
Katakanlah kita akan mulai dengan menambahkan ke akhir array sehingga kita bisa menggunakan push.

00:31.080 --> 00:31.730
Kanan.

00:31.770 --> 00:37.890
Jadi mari kita dorong dulu dan beberapa kurang lebih dua detik dan kejutan akan berhasil.

00:37.890 --> 00:39.000
Ketiga.

00:39.030 --> 00:39.640
Baiklah.

00:39.870 --> 00:41.580
Jadi array terlihat seperti ini.

00:41.580 --> 00:48.720
Jadi agar ini berfungsi atau beroperasi sebagai isyarat nyata, kita perlu cara untuk menghapus, pertama, kedua, ketiga, ketiga

00:48.990 --> 00:49.770
pertama.

00:49.770 --> 00:51.320
Jadi kami ingin menghapus dari awal.

00:51.510 --> 00:56.760
Jadi pop bukan yang kita inginkan jika kita melakukan stack maka itu akan berhasil.

00:56.760 --> 00:59.830
Sebagai gantinya kita harus bergerak dari awal dengan shift.

01:00.510 --> 01:03.200
Dan kita mendapatkan yang pertama kedua dan ketiga.

01:03.210 --> 01:08.000
Jadi itu salah satu cara membuat isyarat dan itu sangat mudah.

01:08.100 --> 01:08.910
Kanan.

01:09.090 --> 01:14.730
Tentu saja satu hal yang tidak bagus ketika kita melakukan ini adalah jika kita memiliki 10.000 item di

01:14.730 --> 01:19.840
sana yang akan Anda indeks dan menghapus dari awal berarti bahwa setiap item dibaca indeks

01:19.920 --> 01:25.770
Jadi menambahkan ke akhir array tidak memerlukan pengindeksan ulang apa pun hanya berarti mengindeks item

01:25.770 --> 01:29.550
baru di akhir tetapi menghapus dari awal menggeser semuanya.

01:29.550 --> 01:33.170
Jadi bagaimana jika kita melakukan ini sebagai gantinya jika kita melihat Q As kosong.

01:33.360 --> 01:36.360
Jadi mari kita lakukan dan bergeser, mari kita tambahkan ke awal.

01:36.570 --> 01:43.650
Jadi kita akan lakukan dulu lagi dan kedua dan ketiga.

01:43.680 --> 01:44.700
Sangat menarik.

01:45.000 --> 01:47.780
Jadi jika kita melihat Cue sekarang akan terlihat seperti ini.

01:48.090 --> 01:54.370
Dan kemudian untuk menghapus mengikuti aturan memiliki isyarat pertama di pertama kita perlu pop dari akhir sehingga

01:54.600 --> 01:57.100
kita mendapatkan kedua dan ketiga pertama.

01:57.240 --> 02:00.810
Jadi kedua pasangan itu bisa kita lakukan secara kombinasi dengan pop.

02:00.990 --> 02:08.640
Atau kita bisa melakukan push dikombinasikan dengan shift, keduanya akan memberi kita fungsi isyarat yang diinginkan

02:08.640 --> 02:10.050
terlebih dahulu.

02:10.050 --> 02:13.010
Namun dalam kasus kedua kami berpikir tentang cara kerjanya.

02:13.110 --> 02:19.890
Ketika kami menumbuhkan sepuluh ribu item ini jika kami menambahkan ke awal setiap kali kami memasukkan itu

02:19.950 --> 02:26.970
berarti mengindeks ulang seluruh antrian yang juga tidak baik karena itu berarti menggeser semua yang Anda tahu memberikan

02:26.970 --> 02:29.810
indeks baru jika kami memiliki 10.000 item.

02:29.850 --> 02:34.360
Itu berarti menugaskan kembali setiap item yang muncul dari ujung berfungsi dengan baik.

02:34.560 --> 02:41.220
Jadi tidak seperti ketika kita berbicara tentang tumpukan, Anda dapat menggunakan push dan pop untuk membuat stack dan Anda

02:41.220 --> 02:44.310
tidak perlu mengindeks ulang seluruh isi seluruh array.

02:44.760 --> 02:48.080
Berbeda dengan itu ketika kita melakukan Q Tidak ada jalan lain menggunakan array.

02:48.120 --> 02:55.090
Jadi, masuk akal untuk membuat kelas Q Anda sendiri jika Anda benar-benar peduli dengan kinerja.

02:55.110 --> 03:01.470
Seperti yang saya katakan saya akan menggunakan array untuk menggambarkan atau membuat isyarat untuk kita dalam beberapa algoritma yang lebih rumit

03:01.500 --> 03:04.290
di kemudian hari untuk menjaga kode saya pendek.

03:04.290 --> 03:10.310
Tapi itu tidak ideal di video berikutnya saya akan menunjukkan kepada Anda bagaimana menggunakan daftar terkait berdasarkan Q untuk menentukan kelas Q

03:10.320 --> 03:15.000
kita sendiri yang akan melakukan lebih baik dari ini tetapi ini secara teknis adalah sebuah kubus

03:15.060 --> 03:21.370
Kami memiliki cara untuk menambah dan menghapus dan fungsionalitas metode cara masuk pertama keluar pertama.

03:21.400 --> 03:23.580
Pokoknya Anda bisa melakukannya dengan sebuah array.

03:23.610 --> 03:25.080
Selanjutnya kita akan melakukannya dari awal.
