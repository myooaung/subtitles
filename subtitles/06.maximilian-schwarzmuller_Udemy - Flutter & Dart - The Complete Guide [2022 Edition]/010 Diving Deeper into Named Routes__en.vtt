WEBVTT
1
00:00:02.250 --> 00:00:05.689
I got two other annotations for the routes here,

2
00:00:05.700 --> 00:00:14.480
the named routes. For one, home always also has an automatically named route which is just slash.

3
00:00:14.580 --> 00:00:23.720
So if I would add a route to just slash like this here and I then remove this home key, it would still work,

4
00:00:23.750 --> 00:00:29.240
of course I have to provide a builder function here though. So if we do this, if I add this /route

5
00:00:29.240 --> 00:00:33.440
here with a builder function that loads my category screen,

6
00:00:36.690 --> 00:00:42.650
this still works and I still get my categories here and I can navigate around and so on.

7
00:00:42.900 --> 00:00:49.110
If you for some reason want to make sure that the default behavior of Flutter is to not load slash but

8
00:00:49.110 --> 00:00:56.070
a different route, you can also add an initial route argument to your MaterialApp and the default value

9
00:00:56.070 --> 00:00:58.920
is just slash, so you don't need to set this.

10
00:00:58.920 --> 00:01:04.470
Now one last important note about these route names, of course you can type them like this in the main.dart

11
00:01:04.470 --> 00:01:09.800
file but the downside of that of course is that when you want to go to your category meals here

12
00:01:09.810 --> 00:01:16.640
for example, you manually have to type that name when you use pushNamed.

13
00:01:16.800 --> 00:01:21.780
Now of course, it's easy to have a typo here and suddenly, your app is broken and finding that error can

14
00:01:21.780 --> 00:01:22.980
be hard,

15
00:01:22.980 --> 00:01:28.350
hence a common practice is to add a static constant property to your screens.

16
00:01:28.350 --> 00:01:34.770
So here for the category meal screen widget, you would add a static const property which is a property

17
00:01:34.770 --> 00:01:41.220
that can be accessed without instantiating that class, which has a name of routeName or a screen name

18
00:01:41.220 --> 00:01:42.200
or anything like that,

19
00:01:42.210 --> 00:01:49.440
the name is up to you and there you would store your routeName, like category meals and the advantage

20
00:01:49.440 --> 00:01:55.290
of this approach is that you can now go to the main.dart file and instead of hardcoding it here, you

21
00:01:55.290 --> 00:02:02.880
would point at your class, category meal screen, not instantiate it, so don't add parentheses but simply

22
00:02:02.880 --> 00:02:08.070
refer to that static property like this, which gives us a string and which is therefore a perfectly

23
00:02:08.070 --> 00:02:08.690
fine key

24
00:02:08.750 --> 00:02:14.640
here in our map because routeName gives us a string and now in the place where you push, you would do

25
00:02:14.640 --> 00:02:15.600
the same.

26
00:02:15.600 --> 00:02:22.650
So here, you would simply use CategoryMealsScreen and access routeName, of course make sure for

27
00:02:22.650 --> 00:02:27.010
that you're importing category_meals_screen.dart in the file where you use that.

28
00:02:27.120 --> 00:02:33.180
So that's simply an approach which is less error prone and therefore preferable. Ultimately it's of course

29
00:02:33.180 --> 00:02:37.010
up to you if you want to use named routes or if you want to push routes

30
00:02:37.020 --> 00:02:42.150
as I showed it in the first approach but especially in bigger apps, I would definitely recommend checking

31
00:02:42.150 --> 00:02:43.070
out named routes.

