WEBVTT
1
00:00:02.220 --> 00:00:09.780
So for those set up, we can go back to the firebase messaging package page and there you got the IOC

2
00:00:09.780 --> 00:00:11.000
integration steps.

3
00:00:11.310 --> 00:00:15.780
Now it looks short, but actually you got a few steps that you need to perform here.

4
00:00:16.200 --> 00:00:21.300
For example, you need to generate certificates required by Apple for receiving push notifications.

5
00:00:21.630 --> 00:00:28.080
Again, for that identification part, where you're basically telling Apple, hey, that's me, I'm

6
00:00:28.080 --> 00:00:30.080
the creator of the app, and here's my proof.

7
00:00:30.930 --> 00:00:34.230
Now, you can follow this guide, as you can see, to configure that.

8
00:00:35.070 --> 00:00:38.330
And that takes us to the official firebase cloud messaging docs.

9
00:00:38.880 --> 00:00:44.640
Now, here you should go for the first two steps, but you can skip Detriot, the provisioning profile

10
00:00:44.640 --> 00:00:47.550
step, as is also mentioned here.

11
00:00:48.780 --> 00:00:55.830
So let's go through the other steps then, and the first step is that we create an authentication key

12
00:00:56.400 --> 00:01:03.180
for that, we need to have an Apple developer account and log into that so we can search for Apple developer

13
00:01:03.180 --> 00:01:09.370
or Apple developer account and find their Apple developer page and log in there with your Apple ID.

14
00:01:09.900 --> 00:01:11.280
Now, once you did log in.

15
00:01:12.810 --> 00:01:19.160
You should go to certificate's identifiers and profiles and under a key select, all as you can tell.

16
00:01:19.530 --> 00:01:20.280
Let's go there.

17
00:01:23.890 --> 00:01:30.790
Go to keys and there simply click on plus that all part is not required for me, at least here I can

18
00:01:30.790 --> 00:01:32.630
just click on Plus to create a new key.

19
00:01:33.720 --> 00:01:35.440
Now, I did that there for.

20
00:01:36.720 --> 00:01:40.980
And now we should enter a description for the appends off key.

21
00:01:42.340 --> 00:01:48.460
And under a key, services, select the Appends check box and click continue, so here, in the end,

22
00:01:48.460 --> 00:01:55.690
we want to check this aptness checkbox, which basically says that we want to generate a key which we

23
00:01:55.690 --> 00:01:57.400
can use to send push notifications.

24
00:01:57.820 --> 00:02:03.790
And we should give this a name like FLEDER chat example, something like this.

25
00:02:06.760 --> 00:02:11.560
And once you did all of that, you can click, confirm and then download and then safety's key in a

26
00:02:11.560 --> 00:02:18.070
secure place because that will be a key which we will soon provide through Firebase Cloud messaging

27
00:02:18.310 --> 00:02:22.750
to Apple for every message we want to send to send that message.

28
00:02:22.780 --> 00:02:27.880
So anyone with that key could cause harm to your application and could abuse it.

29
00:02:27.970 --> 00:02:30.070
So store it in a secure place.

30
00:02:30.310 --> 00:02:36.400
Don't just put it on your desktop, don't uploaded to a GitHub repository, store it in a place where

31
00:02:36.400 --> 00:02:41.830
only you have access to all the knowing that it's a one time download and you can't retrieve the key

32
00:02:41.830 --> 00:02:42.410
later.

33
00:02:42.460 --> 00:02:43.840
So make sure you don't lose it.

34
00:02:44.410 --> 00:02:48.040
So let's click on Continue Your Register.

35
00:02:49.790 --> 00:02:55.730
And here we get the same warning that we can only download in once, so let me now download this key

36
00:02:56.240 --> 00:03:01.490
and I'm storing this in some folder on my system now where no one else has access to.

37
00:03:02.830 --> 00:03:08.980
So that's the key downloaded, the next step now is that we create an app ID, so that is basically

38
00:03:08.980 --> 00:03:11.890
an identified that uniquely identifies our application.

39
00:03:12.130 --> 00:03:17.830
And there we use this reversed domain notation here, which we also use for our bundle identifier.

40
00:03:18.810 --> 00:03:24.390
For that, go to the Apple developer member sender and login, you should already be locked in by now

41
00:03:24.840 --> 00:03:27.710
and then click on certificate's identifiers and profiles.

42
00:03:28.050 --> 00:03:30.270
So where we just were essentially.

43
00:03:31.450 --> 00:03:32.380
And in their.

44
00:03:33.370 --> 00:03:41.860
Navigate to identifiers, app IDs, so identifiers, and then here we got app IDs, as you can tell.

45
00:03:42.400 --> 00:03:44.350
And we want to add a new identifier here.

46
00:03:45.240 --> 00:03:46.950
So the plus button was clicked.

47
00:03:48.110 --> 00:03:50.150
Now that new APD has a name.

48
00:03:51.230 --> 00:03:55.010
Which is basically a human readable name and a timid.

49
00:03:56.000 --> 00:03:58.580
So let's generate this app here.

50
00:04:01.060 --> 00:04:01.710
Continue.

51
00:04:04.140 --> 00:04:07.110
Give it your description, like Fleder.

52
00:04:08.470 --> 00:04:16.029
Chet, example, your team I.D. should already be selected here and now choose a bundle ID here and

53
00:04:16.029 --> 00:04:22.600
choose explicit, as it also says here, and then input your bundle ID, which you also have in your

54
00:04:22.600 --> 00:04:23.320
application.

55
00:04:23.320 --> 00:04:24.090
And that's important.

56
00:04:24.100 --> 00:04:25.240
It has to be the same one.

57
00:04:25.570 --> 00:04:33.010
So your iOS Roner folder, you have the envelope list file and in there Dedman ID is inserted by flutter

58
00:04:33.010 --> 00:04:33.460
in the end.

59
00:04:34.410 --> 00:04:40.320
Now, if you're not sure what your actual ideas they offer, you can simply open your project and Xcode.

60
00:04:40.800 --> 00:04:46.080
So that is folder of your flutter project in Xcode and they're under general.

61
00:04:46.080 --> 00:04:48.560
It's this bundle identifier I'm talking about.

62
00:04:48.840 --> 00:04:50.790
Grab this bundle identifier.

63
00:04:52.780 --> 00:04:54.580
Now, important before you continue.

64
00:04:57.150 --> 00:05:03.930
You should scroll down here and check push notifications to make it clear that this app intends to use

65
00:05:03.930 --> 00:05:04.990
push notifications.

66
00:05:05.160 --> 00:05:10.230
That's also what you find here in the docs that you should check push notifications.

67
00:05:12.080 --> 00:05:14.750
Thereafter, we can continue and verify our inputs.

68
00:05:16.090 --> 00:05:17.440
And click register.

69
00:05:18.740 --> 00:05:22.610
Now, as mentioned, you can skip the create provisioning profile part here.

70
00:05:24.080 --> 00:05:29.230
All the worth a note, of course, your bundle identifier should be one that's not already taken.

71
00:05:29.240 --> 00:05:33.760
For example, I changed mine to calm accouterment flutter complete guide to mine.

72
00:05:33.780 --> 00:05:38.560
This my company because cormick sample flutter, a complete guide was already taken.

73
00:05:38.570 --> 00:05:44.300
If that happens for you, you have to change it here to something unique to your company name and then

74
00:05:44.300 --> 00:05:45.740
some identifier for example.

75
00:05:45.890 --> 00:05:49.250
And then all the Rijad your project on Firebase.

76
00:05:49.430 --> 00:05:54.290
So remove your existing iOS project here and re added as shown at the beginning of the module.

77
00:05:54.440 --> 00:05:56.590
It's super simple and not the end of the world.

78
00:05:57.230 --> 00:06:01.160
So once that is done, we can skip that, create the provisioning profile step.

79
00:06:02.000 --> 00:06:05.420
And then for now, we're done with step one here in the IOC integration.

80
00:06:05.600 --> 00:06:06.170
No worries.

81
00:06:06.170 --> 00:06:07.640
The other steps will be faster.

82
00:06:07.910 --> 00:06:11.120
For example, we already finished step two.

83
00:06:11.120 --> 00:06:15.200
We linked our project to Firebase already, so we don't need to do this again.

84
00:06:16.070 --> 00:06:19.520
Now, here in Xcode, we now need to configure something, though.

85
00:06:19.850 --> 00:06:24.320
We need to select a runner in the Project Navigator and then into Capability's Tab.

86
00:06:24.320 --> 00:06:31.100
We should turn on push notifications and background modes and enable background fetch and remote notifications.

87
00:06:32.430 --> 00:06:37.860
So here in Xcode, click on Runner and under signing and Capabilities.

88
00:06:38.780 --> 00:06:44.540
Click on Plus capability and choose push notifications here.

89
00:06:45.460 --> 00:06:46.450
Double click on it.

90
00:06:48.700 --> 00:06:50.320
Now, all the click on that again.

91
00:06:52.440 --> 00:06:58.860
And choose background modes and on background modes, then enable remote notifications and background

92
00:06:58.860 --> 00:06:59.400
fetch.

93
00:07:00.890 --> 00:07:03.380
These are the two things you should enable here.

94
00:07:06.280 --> 00:07:12.760
Next, let's follow the steps here under upload your AppNexus certificate in the Firebase Docs.

95
00:07:13.120 --> 00:07:18.640
This is required because the firebase cloud messaging service in the end just talks to Apple's push

96
00:07:18.640 --> 00:07:19.930
notification service.

97
00:07:20.260 --> 00:07:27.310
And therefore, we need to make sure that FCMB firebase cloud messaging is able to talk to those service

98
00:07:27.310 --> 00:07:30.760
and is able to provide our identification criteria.

99
00:07:30.790 --> 00:07:33.430
So our key to those servers.

100
00:07:36.040 --> 00:07:43.570
So we already set up our client, we already added Firebase to our iOS project, we registered our app

101
00:07:43.570 --> 00:07:46.150
with Firebase, so that all happened.

102
00:07:46.480 --> 00:07:53.080
Hence now our next step is that we upload our Appian authentication keys.

103
00:07:53.080 --> 00:07:55.540
So that key we generated a few minutes ago.

104
00:07:56.560 --> 00:08:02.230
And for that, go to your firebase console and other project settings, go to cloud messaging.

105
00:08:03.480 --> 00:08:04.110
So here.

106
00:08:05.000 --> 00:08:10.730
Click on project settings on that gear icon and then project settings and then go to the cloud messaging

107
00:08:10.730 --> 00:08:19.640
tab and scroll down to your iOS app configuration and there you need that app and Wolski click on upload

108
00:08:19.640 --> 00:08:19.970
here.

109
00:08:20.210 --> 00:08:24.620
Well, to upload it and browse for that key file you downloaded a few minutes ago.

110
00:08:25.280 --> 00:08:28.430
So here is my key and I will open it here.

111
00:08:28.460 --> 00:08:34.039
And then in order to upload it, you need to enter your kid and your team ID.

112
00:08:35.130 --> 00:08:38.880
Now you find both underage certificates, identifiers and profiles.

113
00:08:40.620 --> 00:08:46.140
Here is the key idea, which, of course, is different for you, but you can grab it from that page.

114
00:08:46.200 --> 00:08:52.020
This was not deleted after your download, so you can still access this and your comedy.

115
00:08:53.110 --> 00:08:55.690
This is the idea you find here in the top right corner.

116
00:08:59.820 --> 00:09:04.380
So injured both here and click on upload, and it should story your key here.

117
00:09:05.940 --> 00:09:11.130
So that were two steps, two and three year in that documentation we're currently going through.

118
00:09:12.100 --> 00:09:16.390
Now we need to initialize Firebase on our app, but that's something we can skip because we're using

119
00:09:16.390 --> 00:09:22.060
the Firebase Flattr as the case, we can skip all of that and we can also skip that entire part for

120
00:09:22.060 --> 00:09:28.590
handling the messages, because we're going to do all of that with help of that flutter package here.

121
00:09:28.870 --> 00:09:33.040
Indeed, as it says here, we just needed to upload our app and certificate.

122
00:09:33.040 --> 00:09:35.350
Only that part need to be completed.

123
00:09:35.530 --> 00:09:37.990
And that is the part we just had a look at.

124
00:09:39.380 --> 00:09:46.130
So, Delford, we're done with step four, we can ignore step five here, and with that, we're therefore

125
00:09:46.130 --> 00:09:49.040
done with the I was set up here, though.

126
00:09:49.070 --> 00:09:58.070
Now we also need to do something in our flutter code, because whilst we are able to just start sending

127
00:09:58.070 --> 00:10:04.010
messages on Android and we didn't need any flatter code, that's not the case here for us.

128
00:10:04.010 --> 00:10:10.820
We need to request permissions first and therefore we need to write some code to do that before we'll

129
00:10:10.820 --> 00:10:15.100
be able to send notifications to our iOS device and see them there.

130
00:10:15.770 --> 00:10:17.750
So to do that, let's pick a good place.

131
00:10:18.230 --> 00:10:22.490
And I will just go for, let's say, that chat screen.

132
00:10:22.730 --> 00:10:28.640
I could ask on the main dart file, but if a user hasn't even locked in, it doesn't make much sense

133
00:10:28.640 --> 00:10:30.890
to start sending messages to that user.

134
00:10:31.340 --> 00:10:37.730
So instead, here in the chat screen, I want to ask the user whether he's fine with me sending push

135
00:10:37.730 --> 00:10:41.560
notifications to him or her not to ask for permissions.

136
00:10:41.600 --> 00:10:51.350
I will convert chat screen here to a state full of widget simply because now I have this extra life-cycle

137
00:10:51.350 --> 00:10:54.590
hook which I can use here the in IT state function.

138
00:10:55.430 --> 00:11:00.470
So here we can now write our own extra code and that's where I want to ask for permission.

139
00:11:00.470 --> 00:11:02.900
So that will ask whenever this comes up.

140
00:11:02.900 --> 00:11:04.310
Whenever Dad opens up.

141
00:11:05.270 --> 00:11:07.880
For that, let's import this.

142
00:11:08.750 --> 00:11:14.570
Package, which we added earlier, the firebase messaging package and there to firebase messaging DARD

143
00:11:14.570 --> 00:11:20.990
File and in in its state here, we can now access firebase messaging.

144
00:11:22.350 --> 00:11:28.850
And instantiated like this, there is no instance property, as on the other firebase flutter packages

145
00:11:28.860 --> 00:11:31.170
here we have to instantiate like this.

146
00:11:32.510 --> 00:11:38.990
And we can store this in a variable or in a constant, to be precise, I'll name it FPM for Firebase

147
00:11:38.990 --> 00:11:45.530
Messaging and on FPM we can now call request notification permissions, not on Android.

148
00:11:45.560 --> 00:11:47.200
This will do nothing but on us.

149
00:11:47.210 --> 00:11:49.280
It will well ask for permission.

150
00:11:50.990 --> 00:11:55.340
And they're after in the next line, I call FPM Configure.

151
00:11:56.570 --> 00:12:03.320
Now, let's save this and let's rerun this updated app here on the real iOS device, because as mentioned

152
00:12:03.320 --> 00:12:07.740
earlier, you need a real iOS device to test and use push notifications.

153
00:12:07.940 --> 00:12:10.880
So here is the app running on my real iOS device.

154
00:12:10.880 --> 00:12:17.190
And I will now switch to a different app so that the main app is not in the foreground anymore.

155
00:12:17.630 --> 00:12:25.580
And now let's try sending a message for dad here in a cloud messaging area, all duplicate my last notification

156
00:12:25.580 --> 00:12:25.880
here.

157
00:12:25.880 --> 00:12:28.880
This test notification and under target.

158
00:12:29.000 --> 00:12:31.250
I will now also target another app.

159
00:12:31.520 --> 00:12:39.260
I will also targeted that I saphir click on next, click on next and click on review.

160
00:12:39.440 --> 00:12:43.160
Now don't publish it yet because at the moment this would not work.

161
00:12:43.160 --> 00:12:47.510
I could send it, but actually keep in mind that we need to grant our permission first.

162
00:12:47.930 --> 00:12:48.500
That's all.

163
00:12:48.500 --> 00:12:54.710
Actually switch back to my flutter app and instead log in real quick so that I reached a chat screen

164
00:12:54.710 --> 00:12:56.870
where I am being asked for permission.

165
00:12:58.840 --> 00:13:04.920
Here I am now, I will grant this permission and now I will switch away to a different app.

166
00:13:05.620 --> 00:13:08.530
So now, with the permission granted, we can click publish here.

167
00:13:11.200 --> 00:13:14.030
And I do get this push notification here.

168
00:13:14.920 --> 00:13:16.000
Does this work?

169
00:13:17.880 --> 00:13:23.670
This now is one of the notifications I have here, and if I tap on it, it opens up the Flattr chat

170
00:13:23.670 --> 00:13:23.910
app.

171
00:13:24.270 --> 00:13:31.140
So this is how we can send push notifications with help of the Firebase Cloud Messaging SDK and service

172
00:13:31.740 --> 00:13:35.040
to flutter apps both on Android and iOS.

173
00:13:35.640 --> 00:13:39.390
Now let's see how we can handle those messages inside of the app.

