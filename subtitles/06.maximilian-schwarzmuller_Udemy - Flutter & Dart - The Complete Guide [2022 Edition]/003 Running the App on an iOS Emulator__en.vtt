WEBVTT
1
00:00:02.270 --> 00:00:06.380
So that was Android emulator and the real device.

2
00:00:06.650 --> 00:00:13.010
Now, what about iOS now important to build an Iowa app, you need the Mac OS operating system that

3
00:00:13.010 --> 00:00:15.020
is a restriction applied by Apple.

4
00:00:15.740 --> 00:00:19.490
You can't build your flutter app for hours on Windows or Linux.

5
00:00:19.490 --> 00:00:20.840
You need Mac OS.

6
00:00:21.470 --> 00:00:29.710
If you are on Mac OS, then you can of course also test the app on a simulator or also on a real device.

7
00:00:30.380 --> 00:00:36.470
Now for that you need X code and I showed you how to install X code in the first module of this course.

8
00:00:36.740 --> 00:00:40.070
So you should be able to launch X code and see that welcome screen.

9
00:00:40.070 --> 00:00:41.770
They're now in there.

10
00:00:42.620 --> 00:00:43.970
Open another project.

11
00:00:43.970 --> 00:00:44.960
Click that button.

12
00:00:45.920 --> 00:00:52.460
And then never get to your flutter project folder and there to the IOC folder and choose that runner

13
00:00:52.490 --> 00:00:57.120
Xcode project file, open that as a project in Xcode.

14
00:00:57.530 --> 00:01:01.070
Now, here you could write code, but that's not what we'll do.

15
00:01:01.310 --> 00:01:03.560
We'll stick to visual pseudocode for that.

16
00:01:03.950 --> 00:01:08.650
But here we can also configure this so that we can run it on a simulator.

17
00:01:09.020 --> 00:01:11.330
And there's one important thing you need to set up.

18
00:01:11.840 --> 00:01:13.340
Click on this project.

19
00:01:13.340 --> 00:01:19.520
I here on this route, I can hear this root element in the left bar here where you can get by clicking

20
00:01:19.520 --> 00:01:20.690
this folder icon here.

21
00:01:20.960 --> 00:01:23.240
So click on that so that you have this view.

22
00:01:23.660 --> 00:01:28.940
And then here you might see that signing for requires the development team for dad.

23
00:01:28.940 --> 00:01:33.080
Here in this dropdown, you should choose a team and normally you should have one.

24
00:01:33.470 --> 00:01:40.760
If you don't have a team here, click on add an account and add your application with your applied here

25
00:01:40.760 --> 00:01:41.590
to X code.

26
00:01:42.230 --> 00:01:47.280
So here you can even create a new one if you don't have one or you login with an existing account.

27
00:01:47.960 --> 00:01:55.520
Now, important for developing iOS apps, you need an Apple developer account and you can activate one

28
00:01:55.520 --> 00:02:01.670
for your applied, which you probably already have by going to developer dot apple dot com.

29
00:02:03.130 --> 00:02:04.870
And there, click on account.

30
00:02:05.770 --> 00:02:12.160
Now, here, you now have to login with your Apple ID and the process should start, which turns you

31
00:02:12.160 --> 00:02:18.130
into an Apple developer, whilst you need to agree to some terms, what you don't need to do to develop

32
00:02:18.130 --> 00:02:19.470
apps is pay.

33
00:02:19.810 --> 00:02:26.680
You will have to pay a fee to really publish your app to the Apple App Store, but for developing and

34
00:02:26.680 --> 00:02:29.530
testing your app, you don't need a paid account.

35
00:02:29.710 --> 00:02:30.890
So no need to pay.

36
00:02:30.940 --> 00:02:33.610
You just need a normal Apple developer account.

37
00:02:34.000 --> 00:02:40.480
Once you have that, you should be able to select your team here in Xcode and use that for this project.

38
00:02:40.930 --> 00:02:42.970
And once you did this once, you should be fine.

39
00:02:43.210 --> 00:02:49.480
And now you can run your project either through Xcode by selecting a simulator here and clicking the

40
00:02:49.480 --> 00:02:52.960
run button or select a real connect the device if you have one.

41
00:02:53.530 --> 00:02:59.170
But you can also do it here from within Visual Studio Code by going to the terminal.

42
00:02:59.500 --> 00:03:03.190
And there in your normal system terminal, you can run open.

43
00:03:04.370 --> 00:03:10.760
Dash, a simulator taught app, and what this will do is it will bring up an ISIS simulator.

44
00:03:12.480 --> 00:03:19.190
Here it is, close xcode, we don't need that anymore, let me move the Android simulator over there

45
00:03:19.560 --> 00:03:20.400
and now here.

46
00:03:21.820 --> 00:03:27.970
And now here is the IOC simulator, and again, you could have launched that through Xcode as well if

47
00:03:27.970 --> 00:03:28.540
you wanted to.

48
00:03:29.320 --> 00:03:35.740
Now this is booting up and as soon as the simulator is done booting up, we can select it down here.

49
00:03:36.140 --> 00:03:37.540
Well, actually, I can already do that.

50
00:03:37.540 --> 00:03:42.790
So you can select your simulator here in the bottom right corner of visual pseudocode by clicking on

51
00:03:42.790 --> 00:03:50.770
that bar here, then select the iOS device or as before, shut down all our simulators, disconnect

52
00:03:50.770 --> 00:03:54.670
all other devices from your machine and it should automatically pick this one.

53
00:03:55.210 --> 00:04:01.780
And once did all of that just before you can again run your app there with the flutter run command or

54
00:04:01.780 --> 00:04:07.270
through the debug menu here in visuals to do code and start without debugging, for example.

55
00:04:07.420 --> 00:04:13.090
And now it is all the built the app, but it will now build it with the help of X code because now in

56
00:04:13.090 --> 00:04:18.430
its app is built and once it's done building the app, it will ship it onto the simulator.

57
00:04:18.820 --> 00:04:20.430
So let's wait for Dad to finish.

58
00:04:21.610 --> 00:04:28.120
Here's the app running on iOS now, and one thing you might notice is that it looks exactly the same

59
00:04:28.120 --> 00:04:30.740
as it looks on an Android device.

60
00:04:31.390 --> 00:04:37.540
The reason for that is that Flutter does not automatically adjust the styles to the IRS.

61
00:04:37.540 --> 00:04:40.100
Look, it does not automatically give you the IRS.

62
00:04:40.240 --> 00:04:45.730
Look, remember that with Lawder, you in the end use a framework that controls every pixel.

63
00:04:46.060 --> 00:04:52.630
It's not using native device or native platform user interface elements.

64
00:04:52.630 --> 00:04:59.020
So a button here is not compiled to an IRS button for I was sent to an Android button for Android.

65
00:04:59.140 --> 00:05:03.160
Instead, a button always looks the same because Flutter draws it onto the screen.

66
00:05:03.160 --> 00:05:08.290
It's not using some platform primitive, not a built in UI element.

67
00:05:08.560 --> 00:05:10.330
And therefore these apps look similar.

68
00:05:10.660 --> 00:05:16.090
Now, later, and of course you will indeed learn how to adjust your look, though, other than the

69
00:05:16.090 --> 00:05:19.120
font, the font family is actually different automatically.

70
00:05:19.270 --> 00:05:24.940
But you will learn how you can adjust your app to look like an Android app on Android and iOS app on

71
00:05:24.940 --> 00:05:25.420
us.

72
00:05:25.570 --> 00:05:32.620
If you want that or you create your own look for all platforms, whatever you need, all that is possible

73
00:05:32.620 --> 00:05:33.370
with flutter.

74
00:05:33.490 --> 00:05:36.250
And we'll of course, have a look at all these options throughout the course.

75
00:05:36.790 --> 00:05:41.770
Now, more important than the look is, of course, that it works correctly and that is the case here.

76
00:05:41.980 --> 00:05:46.570
So now we can also test you appear on the simulator and we're just fine.

77
00:05:46.600 --> 00:05:49.120
Everything is working correctly now.

78
00:05:49.150 --> 00:05:51.910
What about a real iOS device then?

