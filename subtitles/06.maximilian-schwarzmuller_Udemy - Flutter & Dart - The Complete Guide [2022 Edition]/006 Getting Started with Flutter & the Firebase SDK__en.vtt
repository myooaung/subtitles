WEBVTT
1
00:00:02.020 --> 00:00:06.490
Now let's see how we can connect Flutter to Firebase, and for that, here's one important note.

2
00:00:06.880 --> 00:00:13.180
Of course, we already used Flutter in conjunction with Firebase before and we didn't have to go through

3
00:00:13.180 --> 00:00:14.290
all the set up steps.

4
00:00:14.290 --> 00:00:23.020
I just showed you this was possible because we only talked to Firebase in those early sections by using

5
00:00:23.020 --> 00:00:25.390
firebases rest APIs.

6
00:00:25.630 --> 00:00:32.700
So their web APIs, which are exposed by FIREBASE to which we could communicate through flodders to

7
00:00:32.729 --> 00:00:33.690
the package.

8
00:00:33.970 --> 00:00:38.320
And this is a fine way of communicating with Firebase and with any backend.

9
00:00:38.980 --> 00:00:47.200
But Firebase is such a powerful service that you can't use all its services efficiently through just

10
00:00:47.240 --> 00:00:49.050
their Web APIs.

11
00:00:49.480 --> 00:00:54.310
Instead, they give you STK, which are packages you can add to your project.

12
00:00:54.310 --> 00:01:01.150
So to your flutter project, I mean, so that you can execute flutter code and behind the scenes, this

13
00:01:01.150 --> 00:01:06.880
communication with the firebase back and will happen so that you don't have to write and handle all

14
00:01:06.880 --> 00:01:09.330
those outgoing HTP requests on your own.

15
00:01:09.610 --> 00:01:10.930
That's the difference.

16
00:01:11.020 --> 00:01:12.700
That's what we're going to do here.

17
00:01:12.700 --> 00:01:18.340
And that's why we needed this different setup now, because we're going to use some packages which are

18
00:01:18.340 --> 00:01:26.290
provided by the FIREBASE team for flutter apps that make our life easier if we want to dive really deep

19
00:01:26.290 --> 00:01:32.860
into the firebase ecosystem and if we want to use a lot of their services for the dummy back in part

20
00:01:32.860 --> 00:01:39.040
we had earlier for working with any reste APIs or any other Web APIs.

21
00:01:39.040 --> 00:01:43.170
You don't need such a setup and you don't need a dedicated suitcase.

22
00:01:43.660 --> 00:01:49.480
We use that here because we're going to go all in on Firebase in this module and we need access to all

23
00:01:49.480 --> 00:01:56.200
their features and we want that access through a convenient flutter package, which exposes us some

24
00:01:56.200 --> 00:02:02.020
methods we can call, which exposes us a night code base we can use where we don't have to wire up everything

25
00:02:02.020 --> 00:02:06.540
on our own and where we don't have to take care about all the nitty gritty details on our own.

26
00:02:06.730 --> 00:02:07.890
That's the difference.

27
00:02:08.470 --> 00:02:14.860
So to install those packages I'm talking about, you can Google for Flutter Firebase and you'll find

28
00:02:14.860 --> 00:02:17.350
an article in the official Firebase Docs.

29
00:02:18.070 --> 00:02:20.990
Now here you also can learn how to set everything up.

30
00:02:21.010 --> 00:02:22.240
We already did that.

31
00:02:22.720 --> 00:02:24.550
And you see some examples.

32
00:02:25.060 --> 00:02:30.760
Now, if you go back, you will also see that on Flutter Dot Def, you'll also find some firebase documentation.

33
00:02:30.850 --> 00:02:38.020
So on the official Flattr page, on the official flutter docs, you find some firebase documentation.

34
00:02:39.120 --> 00:02:45.180
Now, if you go back again and we manipulate our search query a little bit and you search for Flutter

35
00:02:45.180 --> 00:02:52.470
Firebase Firestorm Store will find the first STK which will install to get started with Firebase.

36
00:02:53.220 --> 00:03:00.090
This STK here, cloud firestorm allows us to communicate with one firebase feature, which is called

37
00:03:00.090 --> 00:03:02.280
Fire Store, which is their database.

38
00:03:02.580 --> 00:03:07.470
Now there are other features as well, and if we want to work with those, we have to add different

39
00:03:07.470 --> 00:03:08.490
flutter packages.

40
00:03:08.850 --> 00:03:10.830
But we're going to get started with this one.

41
00:03:11.790 --> 00:03:17.310
Now, here you see some set of steps and these are mainly the steps we already followed.

42
00:03:17.610 --> 00:03:20.650
So there's not much for us to do here.

43
00:03:21.030 --> 00:03:27.540
Instead, we can go right away to installing and just wrap this link here and added an ARTPOP spectate

44
00:03:27.540 --> 00:03:32.190
YAML file here, maybe below the Cupertino Aitken's.

45
00:03:32.550 --> 00:03:36.120
And if you didn't save to file, this package should be automatically installed.

46
00:03:36.340 --> 00:03:43.410
If not, you can manually run flutter packages, get this installs this flutter package into your project

47
00:03:43.680 --> 00:03:48.680
and now you can import it and use it in your code now to get started.

48
00:03:48.720 --> 00:03:52.710
Let's go back to our firebase console and dare click on database.

49
00:03:53.710 --> 00:03:56.110
Here you'll find two database's.

50
00:03:59.430 --> 00:04:06.600
Cloud, firestorm, and also the real time database and early and of course, we use the real time database

51
00:04:06.600 --> 00:04:13.350
because that was the one that was easier to use as a dummy backend that gave us a nice rest API, which

52
00:04:13.350 --> 00:04:15.030
we could use now.

53
00:04:15.040 --> 00:04:21.089
We're going to use Cloud Forest to work, which is the more modern solution by FIREBASE, which does

54
00:04:21.089 --> 00:04:26.670
not give us such a nice rest API, but which doesn't matter here because we're going to communicate

55
00:04:26.670 --> 00:04:33.210
with it through to Flutter Firebase SDK anyways so you can click on create a database and make sure

56
00:04:33.210 --> 00:04:34.920
you start in test mode here.

57
00:04:35.220 --> 00:04:39.570
That's important so that we can access this database without limitations.

58
00:04:40.570 --> 00:04:41.590
Click on next.

59
00:04:43.630 --> 00:04:46.300
And choose any location you want here.

60
00:04:46.330 --> 00:04:48.860
That's the end, the server that is going to be used.

61
00:04:49.120 --> 00:04:51.420
You can leave the default here and click on Done.

62
00:04:52.240 --> 00:04:57.340
Now, this will set up this database and this is a database which will run in the cloud.

63
00:04:57.640 --> 00:05:04.060
And Firebase then has a layer between the database and between your app, which in the end is breached

64
00:05:04.060 --> 00:05:10.480
by the Flutter Firebase SDK through which we can communicate to that database from within our Flutter

65
00:05:10.480 --> 00:05:10.780
app.

66
00:05:11.650 --> 00:05:16.180
Now, with the firestorm created here, with that database created here.

67
00:05:17.180 --> 00:05:24.980
Let's go back to our chat screen, where we have our list view here and let's, for example, pull in

68
00:05:24.980 --> 00:05:31.220
some data that resides in this database that we can create a collection here, which is basically a

69
00:05:31.220 --> 00:05:32.360
table in your database.

70
00:05:32.370 --> 00:05:37.340
You could say, and I'm going to name my collection here, Chat's click them next.

71
00:05:37.760 --> 00:05:39.800
And you can now also add a document here.

72
00:05:40.040 --> 00:05:46.970
A document is basically an entry in that table and you're going to fetch documents and you're going

73
00:05:46.970 --> 00:05:51.280
to be able to write documents with help of the Flodden Firebase SDK.

74
00:05:51.830 --> 00:05:56.330
So a collection will basically be where you later store your data.

75
00:05:56.480 --> 00:05:59.170
And a document is one piece of data.

76
00:05:59.180 --> 00:06:06.500
So not a document in the sense of a word document where you write a text, but a document instead is

77
00:06:06.500 --> 00:06:08.080
just a piece of data.

78
00:06:08.180 --> 00:06:14.150
For example, if you would be building an online shop, you could have a collection which is named Products.

79
00:06:14.450 --> 00:06:21.890
And in there you have a list of products where every single product is a document in the products collection,

80
00:06:22.280 --> 00:06:28.490
or you have a collection named users with a bunch of user documents in there and in FIREBASE.

81
00:06:28.760 --> 00:06:31.670
Every document can also have some collections.

82
00:06:31.940 --> 00:06:36.470
So you could have a chat's collection with a bunch of chatroom documents.

83
00:06:36.740 --> 00:06:43.340
And every chatroom document could then have a message collection which contains individual messages,

84
00:06:43.340 --> 00:06:44.190
documents.

85
00:06:44.390 --> 00:06:46.490
That's how fire stored is structured.

86
00:06:46.730 --> 00:06:48.830
But we'll see that in action from this module.

87
00:06:50.280 --> 00:06:53.550
Now, I'm going to generate an ID automatically here.

88
00:06:54.710 --> 00:06:59.540
And I'm not going to add any field here, I'll just save it like this instead.

89
00:07:00.880 --> 00:07:06.700
And now here we got this chat's collection with this one chat document we created in India, we can

90
00:07:06.700 --> 00:07:13.450
create a new collection and you always have days pattern in firebase collection, document collection

91
00:07:13.450 --> 00:07:14.110
document.

92
00:07:14.290 --> 00:07:19.630
So our collection always has documents and a document may have other collections.

93
00:07:19.660 --> 00:07:24.820
It may also have other fields, like, for example, some text you want to store in there, some numbers,

94
00:07:24.820 --> 00:07:25.270
whatever.

95
00:07:25.930 --> 00:07:32.050
Here in my chat's collection, I have one document and in that chat document I'm going to create a new

96
00:07:32.050 --> 00:07:38.980
collection which will name messages, click next and create an idea automatically.

97
00:07:38.980 --> 00:07:41.800
And now I'm going to add a field here which will name text.

98
00:07:42.190 --> 00:07:49.270
The type is string, which means it's well, some text and then the value here could just be hi there

99
00:07:49.600 --> 00:07:50.260
like this.

100
00:07:50.980 --> 00:07:54.370
And if I now save this, this is stored.

101
00:07:54.670 --> 00:08:00.130
And now in the end I have a chat's collection with one document which has a message, this collection

102
00:08:00.460 --> 00:08:06.250
which then has my messages where I have one document which has a text of hi there.

103
00:08:07.540 --> 00:08:11.950
And we can now utilize this here in our chat screen widget.

104
00:08:13.540 --> 00:08:15.760
Let's say besides our body.

105
00:08:18.000 --> 00:08:22.950
We at a floating action button here, so our regular floating action button.

106
00:08:24.020 --> 00:08:25.940
Where the child is simply.

107
00:08:26.890 --> 00:08:27.700
And Ican.

108
00:08:29.670 --> 00:08:32.909
Let's say the ad item for now.

109
00:08:34.220 --> 00:08:37.700
And we're on prest, we want to execute some function.

110
00:08:39.039 --> 00:08:44.350
Now, the function I want to execute here is a function that should reach out to Firebase and for the

111
00:08:44.350 --> 00:08:50.740
moment not add anything will add to this later, but instead fetch the data from there so that we can

112
00:08:50.740 --> 00:08:55.240
see how we can communicate with Firebase, eventually will output all the data here.

113
00:08:55.240 --> 00:09:00.850
But for the moment, let's just output the data we fetch in the console with a print statement of four

114
00:09:00.850 --> 00:09:01.690
that we need to fetch.

115
00:09:01.690 --> 00:09:06.080
At first, though, and we can do this with Firestorm.

116
00:09:06.400 --> 00:09:11.070
We installed this firestorm package to cloud forest or package.

117
00:09:11.470 --> 00:09:20.480
So now in Shet screen where I want to use it, I can import package, cloud, firestorm, cloud, firestorm,

118
00:09:20.480 --> 00:09:21.100
dot, dart.

119
00:09:22.430 --> 00:09:27.710
And with this import added here in on prest, you can access Firestorm.

120
00:09:28.690 --> 00:09:36.370
Dort instance, there always is one act of instance which is managed on your behalf, and on that instance

121
00:09:36.370 --> 00:09:37.810
you can execute methods.

122
00:09:37.840 --> 00:09:41.990
You can, for example, use collection to reach out to a collection.

123
00:09:42.730 --> 00:09:49.840
Now, here, you then specify the name of the collection or you specify a full path to a specific sub

124
00:09:49.840 --> 00:09:50.490
collection.

125
00:09:50.980 --> 00:09:56.580
For example, here I want to get my chat's and there is one chat which I created.

126
00:09:56.910 --> 00:10:00.880
It has this idea which was generated automatically.

127
00:10:01.970 --> 00:10:10.460
Let's quickly grab this ID here and add it here and add another slash and then reach out to messages.

128
00:10:11.750 --> 00:10:16.580
So with this, we're telling the story that we want to get access to the messages collection inside

129
00:10:16.580 --> 00:10:19.220
of this document instead of the Chet's collection.

130
00:10:20.300 --> 00:10:27.470
Now, with this access to a collection, we can do more things, we can, for example, add a new document

131
00:10:27.470 --> 00:10:33.380
with this ADD method, we can get a specific document here with the document method.

132
00:10:33.380 --> 00:10:35.720
So get the data for a specific document.

133
00:10:36.080 --> 00:10:42.410
We can also query and search for documents that meet a certain condition, for example.

134
00:10:44.260 --> 00:10:51.670
And we also have snapshots here, and snapshots is an amazing method which we can call on a collection,

135
00:10:52.300 --> 00:10:55.300
snapshots returns a stream.

136
00:10:56.410 --> 00:11:03.490
Now, since it is a stream, that means it's going to emit new values whenever data changes, so that's

137
00:11:03.490 --> 00:11:10.960
that real time data aspect I mentioned earlier, it allows us to set up a listener through the Firebase

138
00:11:10.960 --> 00:11:14.890
Flattr SDK to our FIREBASE database.

139
00:11:15.250 --> 00:11:21.790
And whenever data changes in there, this listener will be notified automatically and we can re render

140
00:11:21.790 --> 00:11:24.030
our widget or do whatever we want to do.

141
00:11:24.820 --> 00:11:33.700
So here for the moment, I will just call listen to set up a listener and pass in a function that will

142
00:11:33.700 --> 00:11:35.800
trigger for every piece of data we get.

143
00:11:36.280 --> 00:11:42.260
And I'll just print that data here inside of that function I passed to listen.

144
00:11:42.400 --> 00:11:46.630
Now this is just some dummy code will replace it later, but for the moment it's good like this.

145
00:11:46.990 --> 00:11:50.290
Now let's safeness and let's restart this application.

146
00:11:52.600 --> 00:11:59.350
Here is our app and now click the plus button, if you click it, you will see an error.

147
00:12:00.550 --> 00:12:07.720
Now, this can happen if you add it all your firebase configuration and you didn't restart your app

148
00:12:07.720 --> 00:12:13.150
fully in between, so I'll actually close this running application and do a full restart and therefore

149
00:12:13.150 --> 00:12:13.780
rebuild.

150
00:12:13.930 --> 00:12:18.880
This makes sure that all those configuration settings and files, which we added will be taken into

151
00:12:18.880 --> 00:12:19.310
account.

152
00:12:19.840 --> 00:12:22.600
So let's wait for this full restart to finish.

153
00:12:24.140 --> 00:12:29.600
And you might now be getting a different error, you might also not be getting this, this really depends

154
00:12:29.600 --> 00:12:36.440
a bit on the point of time you're viewing this and the cloud firestorm flutter package we're using.

155
00:12:37.390 --> 00:12:43.590
At the moment, you might get such air or that points at Decs Archive merger exception.

156
00:12:44.510 --> 00:12:47.880
Now, this is simply a bag with the package, which is easy to fix.

157
00:12:48.380 --> 00:12:53.990
You can go to your Android folder and then they built Gradle file in the app folder.

158
00:12:55.960 --> 00:13:04.900
And they are in default config at the end at multi decks and abled, true written like this, make sure

159
00:13:04.930 --> 00:13:09.040
the D and the E here is a capital case, D and E.

160
00:13:11.410 --> 00:13:20.770
Also then scroll down and go to dependencies and here at implementation and then signal quotes, com

161
00:13:20.770 --> 00:13:25.870
dot android dot support, Colen multi decs.

162
00:13:27.430 --> 00:13:30.350
Colon 1.0, drug free.

163
00:13:31.090 --> 00:13:36.700
Now, if you do all of that, if you add these two things and you restart your application, it should

164
00:13:36.700 --> 00:13:40.400
now rebuild successfully and should restart successfully.

165
00:13:40.630 --> 00:13:42.760
So let's wait for that to finish.

166
00:13:45.300 --> 00:13:46.300
And that looks better.

167
00:13:46.440 --> 00:13:50.580
Here's the running application and now click the button once.

168
00:13:51.150 --> 00:13:57.860
If you do so, you should now see instance of query snapshot or is something similar here in the console.

169
00:13:58.170 --> 00:14:00.320
And that's coming from this print statement here.

170
00:14:00.960 --> 00:14:04.940
Indeed, on data, you can access different kinds of data.

171
00:14:04.950 --> 00:14:08.190
For example, you can access a documents key.

172
00:14:08.610 --> 00:14:15.930
And if you do that and you save and you click the plus button again, you see incents of documents,

173
00:14:15.930 --> 00:14:22.350
snapshot like this in an array and you can access the first document here because this is an array.

174
00:14:23.430 --> 00:14:28.320
With the square bracket notation and zero, which is the index of the first element, and then there

175
00:14:28.320 --> 00:14:36.090
add one extra pair of square brackets and X's text like this text, because that's the.

176
00:14:37.920 --> 00:14:44.070
Ky, I chose here in Massachusetts to store, to text for a single message, if you chose a different

177
00:14:44.070 --> 00:14:46.860
key here, you need to access a different key here.

178
00:14:47.250 --> 00:14:52.440
So that's essentially just getting access to that one document we have right now in the messages collection

179
00:14:52.680 --> 00:14:56.810
and then retrieving the text field and the values stored in that field from there.

180
00:14:57.240 --> 00:15:02.210
And if you say that now and you click the plus again, you will see how high they are here.

181
00:15:02.850 --> 00:15:06.450
So that shows us that it works and that we have access to this database.

182
00:15:06.990 --> 00:15:10.710
Now, we can also access DataDot documents.

183
00:15:12.680 --> 00:15:19.370
And call for each on that to execute a function on every document, and that function will get the document

184
00:15:19.370 --> 00:15:22.910
as an input and we can then do something with the document in here.

185
00:15:22.910 --> 00:15:29.540
For example, print the document text, as we did before, the differences that we now do this for every

186
00:15:29.540 --> 00:15:31.480
document we have in Massachusetts.

187
00:15:31.850 --> 00:15:35.380
Now, at the moment, this still gives us just hi there.

188
00:15:35.930 --> 00:15:41.840
But now the nice thing is if we go back to Firebase and here in Massachusetts, we add a new document.

189
00:15:42.230 --> 00:15:45.650
So not a new field here, but a new document in messages.

190
00:15:46.400 --> 00:15:52.850
And we give us an idea automatically and we add a text field here as well, and we add this is another

191
00:15:53.090 --> 00:15:55.640
entry and a safe distance.

192
00:15:56.390 --> 00:16:02.270
You will see it was added here, but without me doing anything here, without me restarting or clicking

193
00:16:02.270 --> 00:16:03.110
the plus again.

194
00:16:03.470 --> 00:16:10.160
So without any of that, you also see this is a no entry here and a lock because this is a stream and

195
00:16:10.160 --> 00:16:14.280
they offer such a life listener to our collection.

196
00:16:14.810 --> 00:16:19.550
Now, this is, of course, not the final way of how we want to listen, but this is a nice start.

