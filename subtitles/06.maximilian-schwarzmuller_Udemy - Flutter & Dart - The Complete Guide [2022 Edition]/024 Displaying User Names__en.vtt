WEBVTT
1
00:00:02.190 --> 00:00:08.850
So it's username time, and for that, back in the message bubble, we can make sure that besides outputting

2
00:00:08.850 --> 00:00:13.770
the main message, we also output the user name of the user who wrote the message.

3
00:00:15.270 --> 00:00:21.780
For this, I'll actually wrap text here into a column because I now want to have another text above

4
00:00:21.780 --> 00:00:25.680
it, so let's add this text and this should now be the username.

5
00:00:26.720 --> 00:00:28.310
So here.

6
00:00:29.380 --> 00:00:37.870
I expect a new property, a string, which is the user name, and that should also be passed to the

7
00:00:37.870 --> 00:00:39.730
message bubble as an argument.

8
00:00:41.330 --> 00:00:49.010
So this username should be output here, and we can also set some text style here and for a start.

9
00:00:50.030 --> 00:00:54.080
That simply set the font weight here to font weight, not bold.

10
00:00:55.660 --> 00:01:00.400
It's a very simple style that should show the user name above the main text.

11
00:01:00.700 --> 00:01:05.830
Now, the problem is that at the moment we're not getting this username and messages here.

12
00:01:05.830 --> 00:01:09.850
We are forwarding the text and the check, whether it's us or not.

13
00:01:09.940 --> 00:01:15.580
But we're not forwarding the user name because we don't have the user name of the user who created a

14
00:01:15.580 --> 00:01:16.040
message.

15
00:01:16.570 --> 00:01:21.700
The only thing we have on Firebase for a given message is the idea of the user.

16
00:01:22.740 --> 00:01:28.530
We got the dummy IDs and we got the real I.D. now, actually to avoid any problems, let's delete all

17
00:01:28.530 --> 00:01:34.040
documents with that dummy user I.D. of a so quickly delete those free documents.

18
00:01:34.380 --> 00:01:38.700
So today only have documents, only have messages by real users.

19
00:01:39.270 --> 00:01:40.610
So that's the second one.

20
00:01:41.340 --> 00:01:43.890
And here's the third one.

21
00:01:44.520 --> 00:01:48.510
Still, we only have the user IDs here, not the user names.

22
00:01:48.510 --> 00:01:53.640
And of course, I want to output the real user name here and not the I.D. Having this here in the chat

23
00:01:53.640 --> 00:01:56.190
app would probably not be that useful.

24
00:01:57.090 --> 00:02:01.660
Now, of course, we can use the I.D. to get the username that belongs to it.

25
00:02:02.370 --> 00:02:09.479
This is certainly something we can do and for that we can forward.

26
00:02:10.690 --> 00:02:17.920
Let's say the user I.D. here to message bubble as a second argument and in message bubble, change that

27
00:02:17.920 --> 00:02:23.200
name to user ID to make it clear that we're actually not getting the user name right now, but the user

28
00:02:23.200 --> 00:02:23.590
ID.

29
00:02:24.560 --> 00:02:30.380
So now we have the user I.D. here and in the message bubble, we could now utilized his user ID to fetch

30
00:02:30.380 --> 00:02:31.490
the actual user name.

31
00:02:32.090 --> 00:02:38.960
We could say that we wrapped this text here where we want to output the user name with a stream builder.

32
00:02:41.160 --> 00:02:47.460
And then we reach out to the users collection and look for the document with that ID.

33
00:02:48.990 --> 00:02:54.660
Now, I'll do that, but I'll actually replace Stream Builder here with Future Builder because I don't

34
00:02:54.660 --> 00:02:56.450
want to set up an ongoing stream.

35
00:02:56.460 --> 00:03:02.340
Instead, I'll just want to fetch that username once there is no need to set up a life listener, it's

36
00:03:02.340 --> 00:03:06.780
not going to change because we don't even have a functionality to change our user name here.

37
00:03:07.650 --> 00:03:11.980
Now, the future here is that we reach out to Firestorm.

38
00:03:12.390 --> 00:03:15.550
And for that, you need to add the imports to cloud firestorm.

39
00:03:16.710 --> 00:03:25.110
So we reach out to Firestorm dot instance and then we reach out to the users collection for a certain

40
00:03:25.110 --> 00:03:33.000
user I.D. So on that collection, I now use document to point at a certain document and I want to point

41
00:03:33.000 --> 00:03:34.560
at the document with that user.

42
00:03:35.610 --> 00:03:41.520
Keep in mind that in Firebase we have a users collection and we have documents where the names or the

43
00:03:41.520 --> 00:03:43.650
IDs indeed are our user IDs.

44
00:03:45.070 --> 00:03:50.890
So we can look for is such a document and document on its own does not give us a future yet, but we

45
00:03:50.890 --> 00:03:57.340
can call, get on this and get will simply get the data off this document and it will do this through

46
00:03:57.340 --> 00:03:57.970
a future.

47
00:03:59.240 --> 00:04:05.390
Now, then, we have our builder where we have our data snapshot here, and that snapshot will eventually

48
00:04:05.390 --> 00:04:07.640
hold data about that user.

49
00:04:08.660 --> 00:04:11.720
So here we can, of course, check the snapshot connection state.

50
00:04:12.230 --> 00:04:19.010
And if we're still waiting, so if our connection status waiting, we could return some dummy text where

51
00:04:19.010 --> 00:04:21.500
we say loading something like this.

52
00:04:22.160 --> 00:04:29.540
And once we got the actual data here, we output snapshot dot data and that will give us access to this

53
00:04:29.540 --> 00:04:30.160
document.

54
00:04:30.170 --> 00:04:32.560
And there it's the username name field we're interested.

55
00:04:32.840 --> 00:04:34.760
So snapshot dot data.

56
00:04:35.030 --> 00:04:37.940
And then this is a map where we access user name like this.

57
00:04:39.200 --> 00:04:42.360
If we do this and we saved as indeed we see the user name here.

58
00:04:43.220 --> 00:04:47.690
Now let's make sure we can all read the text if it's on the same color background.

59
00:04:48.820 --> 00:04:56.140
So for that, I'll set the color of the username to the same color as a message text.

60
00:04:57.840 --> 00:04:58.470
Like this.

61
00:05:00.150 --> 00:05:01.320
And now it is readable.

62
00:05:02.940 --> 00:05:10.170
And now maybe also for some alignment to make sure this is not centered like it currently seems to be.

63
00:05:12.360 --> 00:05:17.190
We can control this on the column with the cross axis alignment, and the alignment actually should

64
00:05:17.190 --> 00:05:19.110
depend on whether it's by us or not.

65
00:05:19.110 --> 00:05:20.820
If it's by us, it should be on the right.

66
00:05:20.820 --> 00:05:25.440
So alignment and if it's by the other user, it should be on the left.

67
00:05:25.440 --> 00:05:26.940
So alignment start.

68
00:05:27.850 --> 00:05:33.610
So here on the Cross is a line of the column we can check if it's us and if it is us all said cross

69
00:05:33.610 --> 00:05:39.460
axis alignment end to move it to the right and otherwise cross the line and start to move it to the

70
00:05:39.460 --> 00:05:39.910
left.

71
00:05:41.060 --> 00:05:43.560
We now save that this looks pretty good.

72
00:05:43.820 --> 00:05:46.150
Now, the text should also be aligned to the right.

73
00:05:46.790 --> 00:05:53.780
So on the message text, we can add, text a line and also check if it's me and if it's me, I'll send

74
00:05:53.780 --> 00:05:59.180
text a line here to end an otherwise text a line to start.

75
00:06:00.220 --> 00:06:03.970
And now the message text itself also should be aligned correctly.

76
00:06:04.930 --> 00:06:05.600
So that's good.

77
00:06:05.620 --> 00:06:08.570
Now we see the username, but this approach has a flaw.

78
00:06:08.740 --> 00:06:13.350
And by the way, you don't see it on the left because this is not connected to our development server.

79
00:06:13.360 --> 00:06:18.600
Does this old snapshot of the app, which is still running here, but this approach has a flaw here.

80
00:06:18.760 --> 00:06:20.620
And do you know which floor that is?

81
00:06:22.280 --> 00:06:30.320
The flaw is that I'm fetching that username here in the message bubble, I'm fetching it with my future

82
00:06:30.320 --> 00:06:32.770
builder, which I did here, this one.

83
00:06:33.050 --> 00:06:38.450
And that means that for every new message bubble that's being rendered, I reach out to Firebase and

84
00:06:38.450 --> 00:06:39.740
I fetch that data.

85
00:06:39.830 --> 00:06:41.140
This can be good or bad.

86
00:06:41.420 --> 00:06:44.360
This can hammer does API quite a bit.

87
00:06:45.080 --> 00:06:49.940
Now, the good news is, since this isn't a list, it should only fetch to username for the messages

88
00:06:49.940 --> 00:06:51.610
that are actually being rendered.

89
00:06:51.860 --> 00:06:56.110
And in addition, Firestar were also caches data locally.

90
00:06:56.240 --> 00:07:00.030
So it's not going to make a million requests here, probably.

91
00:07:00.200 --> 00:07:05.080
Instead, it should cache data and not send too many requests still.

92
00:07:05.240 --> 00:07:07.400
This is not something you might want here.

93
00:07:07.550 --> 00:07:13.190
You maybe don't want to send a new request for every message bubble that's being rendered.

94
00:07:14.510 --> 00:07:20.690
Therefore, we could argue that we don't want to fetch this here, but that instead when we create a

95
00:07:20.690 --> 00:07:26.870
message, so when we create a new message here and a new message widget, we want a store to use her

96
00:07:26.870 --> 00:07:32.770
name next to the user ID so that we already have the user name here and we don't need to fetch it again.

97
00:07:33.290 --> 00:07:39.230
This would mean that we only need to fetch it once when we send this message instead of every time when

98
00:07:39.230 --> 00:07:40.310
we render a message.

99
00:07:41.000 --> 00:07:44.330
And we could even simplify it as more theoretically we could.

100
00:07:44.330 --> 00:07:50.630
Also featured once when our application starts up and then stored as in some applied state or anywhere

101
00:07:50.630 --> 00:07:51.740
else, wherever you want.

102
00:07:51.750 --> 00:07:55.430
So you can really optimize this quite a bit if you want to.

103
00:07:56.880 --> 00:08:01.470
Here, I will fetch it whenever we create a new message, so for that all.

104
00:08:02.910 --> 00:08:08.550
Get my user data by awaiting for a firestorm, for instance.

105
00:08:09.520 --> 00:08:17.590
And then reaching out to the users collection for document with my user ID here, which I get from the

106
00:08:17.590 --> 00:08:18.580
user I fetched.

107
00:08:19.620 --> 00:08:23.160
And then get that's the same I did hear in the message bubble.

108
00:08:24.840 --> 00:08:30.930
It's the same future, but now I get this year for the user who's sending a message and all the user

109
00:08:30.930 --> 00:08:34.620
data I resolve for which I wait, I'll be able to get.

110
00:08:35.690 --> 00:08:41.480
That username, because that is that user document in the user's collection and now the user name is

111
00:08:41.480 --> 00:08:45.860
also being stored in every new message which be stored in firestorm.

112
00:08:46.520 --> 00:08:52.700
Now, that means that when we fetch all messages here in the messages widget with the Stream Builder,

113
00:08:53.120 --> 00:08:59.180
those messages will already include the user names, which are fetched because they will be part of

114
00:08:59.180 --> 00:09:00.570
the messages themselves.

115
00:09:01.250 --> 00:09:04.820
So that means that now we can just forward user name here.

116
00:09:06.060 --> 00:09:12.430
To our message bubble, because we add such a username field here when we send a message and therefore

117
00:09:12.430 --> 00:09:21.030
in the message bubble, I can renamed is back to username also here, and we can assume that this already

118
00:09:21.030 --> 00:09:22.480
is the final username.

119
00:09:22.980 --> 00:09:29.460
So now in a message bubble, we can get rid of that future builder here, can get rid of all of that.

120
00:09:32.150 --> 00:09:34.370
And instead, we just have our text here.

121
00:09:39.710 --> 00:09:45.950
Just like this, and we don't have snapshot data username, but we used the username property, which

122
00:09:45.950 --> 00:09:47.480
we now have in the message bubble.

123
00:09:50.500 --> 00:09:54.880
Now, of course, this won't work with our existing messages, which is why I'm getting an error here,

124
00:09:55.240 --> 00:09:58.930
because all those existing chat messages don't have the username field.

125
00:09:59.440 --> 00:10:05.200
That's all the leads doesn't hire Chet collection so that it's going to be recreated.

126
00:10:05.890 --> 00:10:07.150
Let's restart the app now.

127
00:10:08.050 --> 00:10:10.510
And let's now send a message test.

128
00:10:12.610 --> 00:10:14.170
And also send one here.

129
00:10:15.720 --> 00:10:21.000
And of course, from the left device, I'm still getting an error because I'm running an old version

130
00:10:21.000 --> 00:10:24.900
of the app here, so that version doesn't attach to user name yet.

131
00:10:25.410 --> 00:10:27.240
So I'm quickly going to do this manually.

132
00:10:34.380 --> 00:10:35.910
Here in the chat collection.

133
00:10:37.630 --> 00:10:44.080
On that document, which doesn't have the username field, I will manually add this field for now to

134
00:10:44.080 --> 00:10:52.570
fix this error and set this to Maximilien, for example, added reload the app and you see that this

135
00:10:52.570 --> 00:10:54.340
now works correctly.

136
00:10:55.830 --> 00:11:01.740
So that works, we're going to run a more recent version of the app on Android soon, too, and with

137
00:11:01.740 --> 00:11:06.780
that, we should have a relatively efficient way of storing and fetching the user name and displaying

138
00:11:06.780 --> 00:11:07.500
the username.

139
00:11:07.770 --> 00:11:10.220
Now, later will also show an image of the user.

140
00:11:10.230 --> 00:11:12.330
But for the moment, this is good enough.

141
00:11:12.330 --> 00:11:13.860
This is fine like that.

142
00:11:15.180 --> 00:11:19.470
So with all of that, we got that finished chat functionality.

143
00:11:19.470 --> 00:11:22.570
We can send messages, we can receive messages.

144
00:11:22.620 --> 00:11:25.680
This list is updating whenever we get a new message.

145
00:11:25.840 --> 00:11:27.780
We got our authentication in place.

146
00:11:28.200 --> 00:11:34.260
I would say it is now time to move on to image upload with the firebase cloud storage.

