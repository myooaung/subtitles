WEBVTT
1
00:00:02.280 --> 00:00:07.920
So time to finish this up now that we got an up and running function, let's make sure we actually utilize

2
00:00:07.920 --> 00:00:14.760
the FIREBASE admin package, which we can use in our function to send a push notification for that.

3
00:00:14.760 --> 00:00:16.980
We, first of all, need to import it.

4
00:00:17.250 --> 00:00:23.580
And in JavaScript, we do this by adding a constant so a variable that can't be changed with any name

5
00:00:23.580 --> 00:00:24.300
of your choice.

6
00:00:24.300 --> 00:00:30.240
And then we use require to, in this case, import firebase admin.

7
00:00:31.240 --> 00:00:36.550
So here I repeat, the package name, which you all define here in the package that Jason fall.

8
00:00:37.210 --> 00:00:42.610
Now, this is in the end a package that gives us administration privileges in our function.

9
00:00:42.610 --> 00:00:47.080
And we need those to send a message or to send push notifications.

10
00:00:47.920 --> 00:00:50.920
Now, you can send push notifications in different ways.

11
00:00:51.310 --> 00:00:54.400
You can target individual devices, for example.

12
00:00:55.300 --> 00:00:57.130
For dad and your flutter code.

13
00:00:58.460 --> 00:01:04.580
With the help of that based messaging object, which we used to get permissions and to configure our

14
00:01:04.580 --> 00:01:07.790
handlers, you can get device token.

15
00:01:10.320 --> 00:01:17.370
With Get Tolkan, this is a token which you would have to send to a server to store it in some database

16
00:01:17.550 --> 00:01:23.850
and anyone who has that token, so if that is stored in your server side database, can use that token

17
00:01:23.850 --> 00:01:31.230
to send a notification to it so you can send notifications to a specific devices with help of those

18
00:01:31.230 --> 00:01:38.640
device tokens so you can get this token and use that to send messages to specific devices, for example,

19
00:01:38.640 --> 00:01:43.590
that might be useful if two people are chatting with each other, then you would store the device token

20
00:01:43.590 --> 00:01:46.050
of every participant in your database.

21
00:01:46.410 --> 00:01:53.490
And whenever Participant A sends a message to Participant B, you would grab the token of participant

22
00:01:53.490 --> 00:01:56.550
B and send a push notification to him or her.

23
00:01:56.760 --> 00:01:57.900
So that is one option.

24
00:01:58.440 --> 00:02:04.710
But you also can do something else with the firebase package here with the firebase messaging package

25
00:02:04.710 --> 00:02:05.390
and flutter.

26
00:02:05.910 --> 00:02:08.490
You can also subscribe to a topic.

27
00:02:09.449 --> 00:02:15.660
And that topic is simply a string identifier and it can be anything of your choice, for example, Chet,

28
00:02:16.380 --> 00:02:18.360
and this will do what the name implies.

29
00:02:18.370 --> 00:02:21.050
This will subscribe to such a topic.

30
00:02:21.060 --> 00:02:25.830
And now any notification sent to such a topic will reach this device.

31
00:02:25.950 --> 00:02:30.600
And you can target topics with the FIREBASE Admin SDK, too.

32
00:02:30.960 --> 00:02:35.250
So I will subscribe to this topic here to the chat topic here.

33
00:02:36.290 --> 00:02:41.840
And with that, we should receive any push notifications sent to this topic on this device.

34
00:02:42.740 --> 00:02:44.900
So now back in our index is fall.

35
00:02:44.900 --> 00:02:50.120
So in that cloud function, we want to send a new notification to this topic.

36
00:02:50.900 --> 00:02:53.300
And we do this by calling admin.

37
00:02:54.360 --> 00:03:01.530
That's our admin and STK object here and then their messaging, which you execute as a function and

38
00:03:01.530 --> 00:03:08.190
then dear send and you got a send to topic function, a to topic method here, which you can use.

39
00:03:08.610 --> 00:03:10.530
And this does just what the name implies.

40
00:03:10.530 --> 00:03:13.320
It sends a message to a specific topic.

41
00:03:14.330 --> 00:03:19.520
So here you then, first enter your topic identifier, which, of course, should be the same one as

42
00:03:19.520 --> 00:03:21.800
in the Flutter app, so hearable use chat.

43
00:03:22.340 --> 00:03:24.750
And then the second argument is your payload.

44
00:03:25.490 --> 00:03:31.340
So basically the data you want to send, that should be a JavaScript object, which you create with

45
00:03:31.340 --> 00:03:32.570
such curly braces.

46
00:03:32.960 --> 00:03:36.840
And in there you can choose whether it's a data message or a notification.

47
00:03:37.400 --> 00:03:42.170
Now, I mentioned earlier that the notification is what we want here, so I'll choose notification.

48
00:03:42.440 --> 00:03:45.110
And that itself uses an object as a value.

49
00:03:45.620 --> 00:03:50.660
So you have notification and then a colon and then you assign the value for that notification.

50
00:03:50.660 --> 00:03:59.270
So the object that describes this notification and in there we can add a title and I want to use the

51
00:03:59.270 --> 00:04:03.440
name of the user who sends the message as a title.

52
00:04:03.440 --> 00:04:06.860
So I will access snapshot data.

53
00:04:07.400 --> 00:04:11.750
And then there we saw in our log if I go back to that.

54
00:04:12.690 --> 00:04:15.780
That we can access the username field to get that username.

55
00:04:16.829 --> 00:04:19.680
So I will access username here as my title.

56
00:04:21.470 --> 00:04:25.880
And we can also set up a body, which is the main message, and that should be the message the user

57
00:04:25.880 --> 00:04:26.310
sent.

58
00:04:26.330 --> 00:04:27.980
So here I will use the text.

59
00:04:29.620 --> 00:04:33.490
So therefore, here it's now snapshot data text.

60
00:04:36.070 --> 00:04:42.340
So this should be my notification, there is more you can set and you can, again, as always, check

61
00:04:42.340 --> 00:04:44.340
out the official docs to learn all about that.

62
00:04:44.770 --> 00:04:52.660
I will just set to click action here and set this to this letter notification thing, which we did have

63
00:04:52.660 --> 00:04:54.150
to set up earlier as well.

64
00:04:54.160 --> 00:04:59.140
So to does flutter notification click identifier here as a string.

65
00:05:01.030 --> 00:05:07.150
So that should send a message and this returns a promise, and that makes this entire process the ideal

66
00:05:07.150 --> 00:05:13.720
return value of our function, this ensures that the function will keep on running until this message

67
00:05:13.720 --> 00:05:16.070
here, this notification has been scheduled.

68
00:05:17.080 --> 00:05:24.790
So with that, if we now safeties, we can redeploy our firebase function with firebase deploy and we

69
00:05:24.790 --> 00:05:28.450
can also kill the running flutter app and restart that flutter app.

70
00:05:28.720 --> 00:05:35.080
Now that we made sure that we subscribe to the chat topic dear to see whenever that all works the way

71
00:05:35.080 --> 00:05:35.590
it should.

72
00:05:37.000 --> 00:05:43.060
For that, I'll not just launch the app here on Android, but I'll also stop this again and now select

73
00:05:43.060 --> 00:05:44.880
my real iPhone device again.

74
00:05:44.890 --> 00:05:49.350
So today, all eyes are on the latest version on that device and launched the app there as well.

75
00:05:50.970 --> 00:05:56.820
And here's the app running there, I'm already getting asked whether I want to allow getting push notifications,

76
00:05:56.820 --> 00:05:58.500
so I will confirm decir.

77
00:05:59.720 --> 00:06:01.610
So you're still up and running.

78
00:06:02.690 --> 00:06:09.320
And now that both apps are up and running, let's verify whether that all works for debt, I'll put

79
00:06:09.320 --> 00:06:14.000
the Android app in background and send a message from my iOS device.

80
00:06:17.610 --> 00:06:21.030
And see whether that triggers a push notification on Android.

81
00:06:22.580 --> 00:06:28.970
And that's not happening, and in the firebase cloud function console here, we see why, because the

82
00:06:29.220 --> 00:06:34.460
firebase app does not exist, make sure to call initialize app before using the firebase services.

83
00:06:35.330 --> 00:06:42.170
Little mistake from my side here in index index before we use the admin SDK, we should call initialize

84
00:06:42.170 --> 00:06:43.430
app on it just like this.

85
00:06:43.830 --> 00:06:46.520
That's one tiny extra line that makes a huge difference.

86
00:06:46.530 --> 00:06:50.780
You should add it and thereafter just redeploy with firebase deploy again.

87
00:06:50.900 --> 00:06:53.210
Now you don't need to rebuild your flutter apps.

88
00:06:53.210 --> 00:06:54.500
It has nothing to do with that.

89
00:06:54.650 --> 00:06:59.240
You just need to add this line to the cloud function and redeploy it.

90
00:06:59.540 --> 00:07:03.560
And once the deployment process is finished, let's test this again.

91
00:07:04.510 --> 00:07:09.790
So the function redeployed, so if I'm back here, let's try another.

92
00:07:12.710 --> 00:07:13.310
Last year.

93
00:07:14.840 --> 00:07:16.070
And send that.

94
00:07:19.800 --> 00:07:26.010
And now it is looks much better here, you see Maximilien and never tested, if I click on that, I'm

95
00:07:26.010 --> 00:07:28.700
of course taken to the up, so that's great.

96
00:07:28.980 --> 00:07:31.110
Now let's try the other direction.

97
00:07:32.900 --> 00:07:39.710
And for that, I'm switching to another app here on the iPhone so that, again, the main app is running

98
00:07:39.710 --> 00:07:40.460
in the background.

99
00:07:42.400 --> 00:07:46.720
And now I'll send the notification here, notification or.

100
00:07:47.770 --> 00:07:49.780
Message from Android.

101
00:07:53.010 --> 00:07:58.220
And let's see if we get this message coming up here on the iPhone, here it is.

102
00:07:58.470 --> 00:08:01.170
So here we see the sender and the message.

103
00:08:03.310 --> 00:08:07.950
And of course, here, if I expand this and tap on it, the app here is also reopened.

104
00:08:08.470 --> 00:08:15.490
So that works on both devices, as you can tell, and that is how push notifications work and how you

105
00:08:15.490 --> 00:08:22.390
can trigger them both manually through the cloud messaging console here in the Web, as well as programmatically

106
00:08:22.690 --> 00:08:28.810
through some server side code, for example, here with the firebase cloud function code, and especially

107
00:08:28.810 --> 00:08:35.500
if you're using all the other firebase services, you see that they're nicely integrating into each

108
00:08:35.500 --> 00:08:41.710
other, that they're very easy to connect, and that you can build quite amazing apps with little effort

109
00:08:41.710 --> 00:08:43.510
and not that much code.

