WEBVTT
1
00:00:02.090 --> 00:00:03.260
So what's missing now?

2
00:00:03.620 --> 00:00:08.930
Well, obviously, I want to make sure that when we have items in the cart, we can hit that order button

3
00:00:08.930 --> 00:00:14.210
here and add them to our orders screen and Fordice.

4
00:00:14.420 --> 00:00:15.860
We need to manage orders.

5
00:00:16.340 --> 00:00:21.830
Now, in my opinion, it makes sense to add a new class and you provided class for that because it doesn't

6
00:00:21.830 --> 00:00:23.820
really fit into products there.

7
00:00:23.960 --> 00:00:29.000
When I managed to products we can work with doesn't fit into cart because there I want to manage only

8
00:00:29.000 --> 00:00:33.950
my cart, not the orders and product here is just a single product we use in products.

9
00:00:33.980 --> 00:00:37.700
We could of course also move that product class into the product start fall.

10
00:00:38.360 --> 00:00:45.470
So add a new fall orders dot start where I want to manage the orders we have in there.

11
00:00:45.470 --> 00:00:52.490
We can create new class orders and I'll use with change notifier imported from Flutter Foundation Dodge

12
00:00:52.490 --> 00:00:57.590
Dart, because of course we will provide it and we might have places in Yapp where we want to listen

13
00:00:57.590 --> 00:00:58.250
to changes.

14
00:01:00.120 --> 00:01:00.800
No end there.

15
00:01:00.900 --> 00:01:06.540
I want to manage some orders, unsurprisingly, and for that, of course, we, first of all need to

16
00:01:06.540 --> 00:01:14.160
define how our order should look like, just as with the cart here, all create my order item right

17
00:01:14.400 --> 00:01:15.660
inside the same file.

18
00:01:15.660 --> 00:01:22.560
You could do it in the separate file and each order should have an ID, should have an amount.

19
00:01:22.560 --> 00:01:26.640
So the total amount to the quantity of items times the price.

20
00:01:26.640 --> 00:01:27.360
So to say.

21
00:01:28.260 --> 00:01:31.050
I also want to find out which products were ordered.

22
00:01:31.230 --> 00:01:38.010
So I want to get a list of my products and they're actually of the card items, to be precise, because

23
00:01:38.010 --> 00:01:41.190
I also want to find out which quantity was ordered and so on.

24
00:01:41.670 --> 00:01:50.100
So I'll import my card file here so that I can use the card item class here and then have my products

25
00:01:50.100 --> 00:01:54.510
here and all of the time at which this order was placed.

26
00:01:54.540 --> 00:01:56.670
That's also something that's worth storing.

27
00:01:59.040 --> 00:02:04.440
Then let's add the constructor and I will go with named arguments here to assign values to all these

28
00:02:04.440 --> 00:02:05.220
properties.

29
00:02:09.789 --> 00:02:10.449
Like this.

30
00:02:12.320 --> 00:02:14.510
Woops, and that should be order item, of course.

31
00:02:15.440 --> 00:02:22.400
And also, just as we did it earlier on, Mark, all these arguments here as required.

32
00:02:23.470 --> 00:02:29.890
So that's an order item in the orders class will now have a list of such items selldown down there,

33
00:02:29.890 --> 00:02:37.480
we can add a list of type order items which holds an order item orders, which is empty initially,

34
00:02:37.480 --> 00:02:37.990
let's say.

35
00:02:38.820 --> 00:02:43.350
And then here we can already at Geter, which returns are order items.

36
00:02:45.010 --> 00:02:52.180
Named Orders, which returns a copy, again, by using or by creating a new list with square brackets

37
00:02:52.180 --> 00:02:56.590
and then using the spread operator to take some items and move them into this new list.

38
00:02:56.620 --> 00:02:58.830
So here are the items which are part of orders.

39
00:02:58.930 --> 00:03:02.710
And I'm doing this so that from outside this class, we can't edit orders.

40
00:03:04.280 --> 00:03:11.390
Now, what I need here is, of course, to add order method, which returns nothing but which is executed

41
00:03:11.390 --> 00:03:15.050
when we click that order now button here on the card screen.

42
00:03:15.590 --> 00:03:19.880
The idea here is to then add all the content of the card into one order.

43
00:03:20.480 --> 00:03:30.230
So I should probably get a list of card items which will name card products here as an argument, maybe

44
00:03:30.230 --> 00:03:31.370
already get the total.

45
00:03:31.520 --> 00:03:34.580
If I already have that calculated, I don't have to redo it.

46
00:03:35.850 --> 00:03:39.630
And then with that, we can add this as a new order.

47
00:03:41.480 --> 00:03:45.080
So here we can try and reach out to orders to that list and.

48
00:03:46.350 --> 00:03:53.640
Added as a new order were actually use insert with index zero to add it as the first element in the

49
00:03:53.640 --> 00:03:57.750
list and will always add it at the end of the list with insert zero.

50
00:03:57.750 --> 00:04:02.700
We added at the beginning of the list so that more recent orders are at the beginning of the list.

51
00:04:02.910 --> 00:04:04.220
But that's totally up to you.

52
00:04:04.260 --> 00:04:09.990
So here I'll use insert zero to add new order at the beginning of the orders list and move all existing

53
00:04:09.990 --> 00:04:10.500
orders.

54
00:04:10.530 --> 00:04:12.630
Well, one index ahead to the end.

55
00:04:13.890 --> 00:04:18.680
And then here the element which should be added is, of course, a new order item.

56
00:04:19.380 --> 00:04:21.810
And there we need to define an idea.

57
00:04:22.079 --> 00:04:29.450
And for now, I'll use daytime now to string to get a pseudo unique ID.

58
00:04:30.540 --> 00:04:33.030
Then we also need to define our.

59
00:04:34.230 --> 00:04:37.410
Amount here, that's the total which I'm getting as an argument.

60
00:04:39.140 --> 00:04:45.950
Then we have the current time stamp on there, we can just use DAIM time daytime now and we also need

61
00:04:45.950 --> 00:04:50.780
to pass in our products that are just the card products which I'm receiving.

62
00:04:52.670 --> 00:04:58.370
So with that, we're adding a new order and now in case we got someone who's listening, we want to

63
00:04:58.370 --> 00:05:04.220
call notify listeners so that any places in the app which depend on orders are now updated.

64
00:05:06.690 --> 00:05:12.110
Placing an order also means that we want to clear the cart, of course, because we ordered all elements,

65
00:05:12.120 --> 00:05:13.440
so the cart should be cleared.

66
00:05:13.710 --> 00:05:19.980
So the cart fall, we can add a new method, clearer cart or just clear whatever you want to name it,

67
00:05:20.790 --> 00:05:22.740
and there able will set items back.

68
00:05:23.600 --> 00:05:27.200
To an empty map and then call notify listeners.

69
00:05:30.410 --> 00:05:32.240
We can now start using that.

70
00:05:35.190 --> 00:05:40.290
First of all, we need to provide our orders class, right, because I plan on using that in different

71
00:05:40.290 --> 00:05:47.670
places and yep, ever to dispatch actions like add a new order or to listen to my orders or fetch my

72
00:05:47.670 --> 00:05:48.160
orders.

73
00:05:48.990 --> 00:05:50.280
So where should be provided?

74
00:05:50.880 --> 00:05:56.250
If we have a look at the main outfall, we'll definitely need orders in the card screen or at least

75
00:05:56.250 --> 00:05:58.260
in a part of the card screen there.

76
00:05:58.500 --> 00:06:02.490
And we'll add a new screen soon, which shows all orders.

77
00:06:02.730 --> 00:06:07.560
So therefore we'll register a brand new screen which definitely needs access to the orders.

78
00:06:07.560 --> 00:06:12.920
And therefore we also need to provide the orders here in the route app just because it's important.

79
00:06:12.940 --> 00:06:18.090
Keep in mind, this does not mean that the entire app rebuilds when something changes there because

80
00:06:18.090 --> 00:06:20.370
it's not the provider which causes a rebuild.

81
00:06:20.370 --> 00:06:24.120
But the listener and the listeners are not here in the main widget.

82
00:06:24.240 --> 00:06:25.620
They are in different widgets.

83
00:06:25.620 --> 00:06:31.920
For example, in the card screen where we have our card provider ends on our listeners which rebuild

84
00:06:31.920 --> 00:06:39.450
the UI they offer in MAINARD, we can now add another provider here or change notifier provider.

85
00:06:41.330 --> 00:06:47.720
With dollar value, where the value is actually a new instance of orders, and for that, of course,

86
00:06:47.720 --> 00:06:48.710
we need to import.

87
00:06:49.980 --> 00:06:50.550
Our.

88
00:06:51.620 --> 00:06:57.740
Order, does the dart fall from the provider's folder with that import that we create a new instance

89
00:06:58.040 --> 00:06:59.850
here and provide that as a value?

90
00:07:00.200 --> 00:07:04.280
And with that, we can listen to orders from anywhere in our application.

91
00:07:04.790 --> 00:07:08.000
And of course, you already know it just as recommended before.

92
00:07:08.030 --> 00:07:10.870
You shouldn't necessarily use the value constructor here.

93
00:07:11.120 --> 00:07:17.720
So just to reemphasize, is the recommended approach here again, ask before would be that you use the

94
00:07:17.870 --> 00:07:24.830
create function here in the normal constructor function of the change notifier provider for products,

95
00:07:24.830 --> 00:07:32.060
Fourcade, and also here for orders, or of course, the builders function if you're using provider

96
00:07:32.060 --> 00:07:33.160
packaged version free.

97
00:07:33.440 --> 00:07:35.250
So that's the recommended approach.

98
00:07:35.270 --> 00:07:36.950
Again, I mentioned it before.

99
00:07:36.950 --> 00:07:38.390
It's just really important to me.

100
00:07:38.690 --> 00:07:42.070
The other approach also works, but that's a better approach.

