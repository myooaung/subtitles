WEBVTT
1
00:00:02.350 --> 00:00:08.440
And Kuester, where the username we need to do something after the user was created here, because that's

2
00:00:08.440 --> 00:00:11.750
important for creating a user with email and password.

3
00:00:11.800 --> 00:00:14.440
We really can just stored that data.

4
00:00:15.130 --> 00:00:21.760
But of course, once we got a user created, we can reach out to the fire database and store extra user

5
00:00:21.760 --> 00:00:23.110
data there if you want to.

6
00:00:24.060 --> 00:00:33.050
So we can simply go here after DFL statement, but still inside of the tribe block because the code

7
00:00:33.060 --> 00:00:37.180
I'm about to execute should only run if this was successful.

8
00:00:37.200 --> 00:00:38.400
Not if we had an error.

9
00:00:38.730 --> 00:00:47.340
So here, instead of the tribe block, I will now use fire storm not based off, but fire storm.

10
00:00:49.190 --> 00:00:53.120
So for that, let me import package.

11
00:00:55.350 --> 00:01:01.890
Cloud fires, the word cloud firestorm, dot dart, the package I showed you a few minutes ago already.

12
00:01:03.080 --> 00:01:06.260
And then after logging in or after signing up.

13
00:01:07.620 --> 00:01:18.060
I want to use fire storm dot instance to store extra user data and actually not after logging in or

14
00:01:18.060 --> 00:01:20.560
signing up, but only after signing up.

15
00:01:20.820 --> 00:01:21.450
So let's move.

16
00:01:21.480 --> 00:01:25.410
Does anybody else block this should only run if we signed up, not if we did log in.

17
00:01:26.470 --> 00:01:32.710
So here we can now call collection to reach out to a collection and reach out to the users collection.

18
00:01:32.950 --> 00:01:36.760
This collection doesn't exist yet, but it will be created on the fly.

19
00:01:36.760 --> 00:01:38.830
So we don't have to create it ahead of time.

20
00:01:39.790 --> 00:01:42.220
And then we can target a specific document.

21
00:01:42.620 --> 00:01:47.450
And I want to create a document which uses the idea of my user as an idea.

22
00:01:48.040 --> 00:01:54.270
Normally, if you add a document with the ADD method, a new ID is generated dynamically.

23
00:01:54.640 --> 00:01:55.950
I don't want that here.

24
00:01:55.960 --> 00:01:57.630
I want to use an existing idea.

25
00:01:57.630 --> 00:02:02.590
I want to use my existing user ID as ID in this user's collection.

26
00:02:03.070 --> 00:02:08.199
And you can do that by using the document method and then by passing the ID you want to use as an argument

27
00:02:08.199 --> 00:02:08.919
to this method.

28
00:02:09.340 --> 00:02:11.140
And here that's all the result.

29
00:02:11.470 --> 00:02:14.090
Dot user dot uid.

30
00:02:14.920 --> 00:02:22.630
So this author is Salt Object here has a user object which didn't has a UID field, which is that user

31
00:02:22.630 --> 00:02:25.630
ID that was generated for the user by Firebase.

32
00:02:26.760 --> 00:02:32.850
And on this document, we can then call set data to store extra data for that document.

33
00:02:33.240 --> 00:02:35.320
This is just the identifier of the document.

34
00:02:35.340 --> 00:02:36.770
Here comes the extra data.

35
00:02:37.320 --> 00:02:42.920
Now, as mentioned before, the extra data you stored in a document is a map here in Flutter.

36
00:02:43.170 --> 00:02:45.390
And you can have any key value pairs you want.

37
00:02:45.600 --> 00:02:49.790
So all at the username key and the value is username.

38
00:02:49.800 --> 00:02:52.500
So the value stored here in this argument.

39
00:02:53.190 --> 00:02:58.700
And I will also store the email again just to have it there in this document as well.

40
00:02:59.670 --> 00:03:05.360
And with that, we're adding a new user to the new users collection when we sign up a new user.

41
00:03:05.760 --> 00:03:10.920
So we simply manage this extra user data here on our own Nosef.

42
00:03:10.920 --> 00:03:19.920
Data returns a future so we can also await this year to then, for example, clear some loading indicator

43
00:03:19.920 --> 00:03:23.790
if we had one or do whatever you want to do once we're done with that.

44
00:03:25.890 --> 00:03:31.770
Before we manage any loading indicator, let me, however, safeties and actually delete this user,

45
00:03:32.400 --> 00:03:38.580
this user account here just so that I can reuse this email address and then I'll sign up again here.

46
00:03:40.840 --> 00:03:45.760
Now, if we refresh, this user will be recreated, but now if we go to database.

47
00:03:47.490 --> 00:03:53.370
We'll see a new users collection here and in there we see one document with this idea, and in there

48
00:03:53.370 --> 00:03:55.050
we have the email and the username.

49
00:03:55.050 --> 00:03:57.630
So that's does extra data which was stored.

50
00:03:59.550 --> 00:04:05.070
And now with that, just to finish up this authentication process, I think it would be a bit nicer

51
00:04:05.070 --> 00:04:11.820
if this sign up button would be replaced with a loading spinner or maybe both buttons would be replaced

52
00:04:11.820 --> 00:04:14.940
with a loading spinner whilst we're waiting for a result.

53
00:04:15.360 --> 00:04:19.350
And we can easily add such a functionality by going to the off screen.

54
00:04:19.920 --> 00:04:26.550
And we have a stateful widget here so we can manage some state here in off screen state.

55
00:04:28.970 --> 00:04:30.050
BA is.

56
00:04:31.200 --> 00:04:39.090
Is loading could be false initially and we want to set this to true whenever we start logging in or

57
00:04:39.090 --> 00:04:46.500
whenever we start signing up, so I'll set state here at the beginning of the trip.

58
00:04:46.500 --> 00:04:49.830
Lock and set is loading equal to true.

59
00:04:50.720 --> 00:04:58.700
And is loading should be sent back to falls if we have an error, so here at the end of both catch blocks,

60
00:04:58.700 --> 00:05:02.000
I'll call set state and set is loading back to false.

61
00:05:02.630 --> 00:05:04.580
So let's wrap this and all edit here.

62
00:05:05.000 --> 00:05:11.930
And it should also be set to falls here in the success case that we actually added this extra user data.

63
00:05:12.200 --> 00:05:17.690
But we don't need to do this here because we'll soon navigate the users somewhere else anyways.

64
00:05:17.930 --> 00:05:20.220
So we don't have to do that here.

65
00:05:20.840 --> 00:05:25.460
Now, one thing we, of course, do have to do is we have to utilize this is loading state.

66
00:05:26.480 --> 00:05:29.600
So here to off for him, I'll actually pass is loading.

67
00:05:30.840 --> 00:05:38.370
And instead of off, we now need to accept this, so here in off forum, I add a second property, which

68
00:05:38.370 --> 00:05:39.390
I want to get here.

69
00:05:40.350 --> 00:05:42.870
Boolean is loading.

70
00:05:43.860 --> 00:05:46.530
Which is set through the constructor like this.

71
00:05:48.050 --> 00:05:51.920
And then in our widget tree, which is being rendered.

72
00:05:53.040 --> 00:06:00.100
Here we can replace the race, but not the Flett and the Flett button with a floating indicator for

73
00:06:00.300 --> 00:06:08.940
dad, we could check if is if widget is loading is true and if that is the case, I will render a circular

74
00:06:08.940 --> 00:06:10.140
progress indicator.

75
00:06:11.300 --> 00:06:18.200
And the race button should be removed, so if not widget is loading, this button should show up and

76
00:06:18.200 --> 00:06:23.060
therefore it's removed if we are loading and I apply the same logic to the flat button here.

77
00:06:23.240 --> 00:06:26.990
So the two buttons are only showing if we're not loading, if we are loading.

78
00:06:26.990 --> 00:06:29.610
I showed a circular progress indicator instead.

79
00:06:30.380 --> 00:06:34.940
So if I save this and click on Sign Up, you see the loading spinner and then here I get an error because

80
00:06:34.940 --> 00:06:36.290
I already used his email address.

81
00:06:36.500 --> 00:06:38.540
But you see that the loading spinner works.

82
00:06:38.870 --> 00:06:39.560
That's great.

83
00:06:41.680 --> 00:06:43.840
So with that out of the way.

84
00:06:45.300 --> 00:06:51.000
We got that working, we got the extra data stored, now let's make sure that we actually move the user

85
00:06:51.000 --> 00:06:54.480
to the chat screen if we are authenticated.

