WEBVTT
1
00:00:02.080 --> 00:00:07.990
So with the format, it let's make sure that we don't just print the inputs, but that we actually create

2
00:00:07.990 --> 00:00:14.230
a new user with Firebase now early in the course, we use the provider package for managing the state

3
00:00:14.230 --> 00:00:17.890
and for sending those HTP requests we could do this year.

4
00:00:18.320 --> 00:00:22.650
But as you will see throughout this module, we don't really need the provider package here.

5
00:00:22.660 --> 00:00:24.780
We don't really need this application.

6
00:00:24.790 --> 00:00:33.070
White state management, because Firebase, the FIREBASE SDK, which we're using, will basically manage

7
00:00:33.070 --> 00:00:37.600
all relevant state for us because we have that life connection to the server.

8
00:00:37.690 --> 00:00:44.200
And Firebase will also do some caching to cache data so that it's even available if we temporarily lose

9
00:00:44.200 --> 00:00:45.010
the connection.

10
00:00:45.340 --> 00:00:48.190
So we don't really need our own state management.

11
00:00:48.790 --> 00:00:54.700
Hence I will not create any models or any state management classes.

12
00:00:54.820 --> 00:00:57.430
I will not add the provider package.

13
00:00:57.790 --> 00:01:05.710
Instead, we can go to the off screen and maybe handle the request to create a new user there, because

14
00:01:05.710 --> 00:01:12.040
then we have the forum for collecting all the inputs and the off screen for the heavy lifting of creating

15
00:01:12.040 --> 00:01:12.700
a new user.

16
00:01:13.990 --> 00:01:21.700
For this year in the off screen state, we can add a new function, submit off form maybe, and this

17
00:01:21.700 --> 00:01:27.400
is a function that should get all the data from the off form as parameters so as inputs.

18
00:01:27.970 --> 00:01:30.940
So there we can get an email, which will be a string.

19
00:01:31.270 --> 00:01:38.530
We can get the password, which will be a string, the user name, which is a string, and also the

20
00:01:38.530 --> 00:01:41.470
information whether we are in login mode or not.

21
00:01:42.670 --> 00:01:50.020
And with all of that gathered here inside of the function will be able to use the FIREBASE SDK to create

22
00:01:50.020 --> 00:01:55.030
a new user or sign an existing user, that will be step number two.

23
00:01:55.450 --> 00:02:01.720
Step number one is that we connect dysfunction here in the off screen state with our off forum.

24
00:02:02.110 --> 00:02:05.050
And that's, of course, something we covered extensively in the course.

25
00:02:05.230 --> 00:02:09.250
We can simply pass down a reference to this method to off for.

26
00:02:09.850 --> 00:02:11.980
So here are two off forum as an argument.

27
00:02:12.160 --> 00:02:20.530
We can pass down submit of form so we can pass down a pointer at this method and now we just need to

28
00:02:20.530 --> 00:02:22.850
accept this inset off of form.

29
00:02:23.020 --> 00:02:27.310
So any off for dart file here in the widget class?

30
00:02:29.150 --> 00:02:30.020
We can.

31
00:02:31.080 --> 00:02:38.250
At the constructor by repeating the class name and now I want to accept an argument and stored is in

32
00:02:38.250 --> 00:02:43.650
a property of this class Vardy's, I'll add a new property and that will be a function.

33
00:02:43.920 --> 00:02:48.780
And we can actually even define how to function, which we want to get as an argument.

34
00:02:48.780 --> 00:02:54.330
Should look like now we'll get a pointer at that function, but we can define how the function will

35
00:02:54.330 --> 00:02:58.460
point at should look like it should be a function that returns nothing.

36
00:02:58.470 --> 00:03:01.320
And for this you simply add white in front of function.

37
00:03:01.560 --> 00:03:03.840
So function is the type of data we'll have.

38
00:03:03.960 --> 00:03:07.320
But this is an extra piece of information for this function type.

39
00:03:08.130 --> 00:03:13.710
And you can't add parentheses here to then also define the arguments dysfunction, which we want to

40
00:03:13.710 --> 00:03:16.880
get or which we want to store here in the property should have.

41
00:03:17.280 --> 00:03:21.720
We also need to add the property name here and that will be submitted, for example.

42
00:03:22.290 --> 00:03:26.040
So we'll have a submit F and property here in off form.

43
00:03:26.340 --> 00:03:32.400
And the type of this property is a function which returns nothing and which now should also get some

44
00:03:32.400 --> 00:03:33.960
arguments, some parameters.

45
00:03:34.680 --> 00:03:43.140
For example, at EML, for example, a password also of course, the user name and also the information

46
00:03:43.140 --> 00:03:44.850
whenever we are logging in or not.

47
00:03:44.940 --> 00:03:49.770
So the exact same arguments we do expect here in the off screen.

48
00:03:50.970 --> 00:03:55.380
Hear these arguments, they are mirrored here in this type.

49
00:03:56.190 --> 00:04:02.400
And then here in the off from constructor, we can say this submit function to make clear that the argument

50
00:04:02.400 --> 00:04:09.960
we are receiving here is bound to this property of this class and this property here will point at this

51
00:04:09.960 --> 00:04:12.110
function we're getting from off screen.

52
00:04:12.990 --> 00:04:15.840
So now and try to submit here instead of printing.

53
00:04:16.940 --> 00:04:24.460
We can call widget dot, submit TFN to execute dysfunctionally stored in the widget and Tudor's function,

54
00:04:24.470 --> 00:04:26.030
we now need to pass all that data.

55
00:04:26.040 --> 00:04:30.140
We need to pass to email the password to username and he is login state.

56
00:04:30.590 --> 00:04:38.690
So I a pass user email, ipass, user password and user name and also is logged in.

57
00:04:38.690 --> 00:04:42.080
All that information is passed to this function.

58
00:04:43.940 --> 00:04:51.050
And with that, back in the off screen will receive that and here we can now use the FIREBASE SDK to

59
00:04:51.050 --> 00:04:52.730
create a new user.

60
00:04:54.080 --> 00:04:56.060
Let's do that in the next lecture.

