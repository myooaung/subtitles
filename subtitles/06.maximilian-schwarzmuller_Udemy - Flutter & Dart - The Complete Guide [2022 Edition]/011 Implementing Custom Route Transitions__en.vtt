WEBVTT
1
00:00:02.180 --> 00:00:04.880
Now last but not least, to conclude this module,

2
00:00:04.880 --> 00:00:08.240
I also want to introduce you to custom page transitions.

3
00:00:08.270 --> 00:00:10.730
Let's say we go to manage products here.

4
00:00:10.730 --> 00:00:16.820
When we do that, we always have the default material animation page transition where the new page comes

5
00:00:16.820 --> 00:00:20.300
in from the bottom, slides in from the bottom and also has this fade effect.

6
00:00:20.320 --> 00:00:24.530
Now that's the default material animation, your users might be used to that,

7
00:00:24.530 --> 00:00:29.930
it's also a nice animation, so of course there's no need to change it but sometimes you want your own

8
00:00:29.930 --> 00:00:36.320
animation, you want to change something and Flutter supports this as well. For that, you have to build

9
00:00:36.320 --> 00:00:45.050
your own page route class, so your own load a new screen class in the end which you can then hand off

10
00:00:45.050 --> 00:00:51.940
to Flutter. I'll build it in a new folder which I'll name helpers and you could of course also move it

11
00:00:51.940 --> 00:01:00.390
into a different folder and in there, I'll add a custom_route.dart file. I name such

12
00:01:00.390 --> 00:01:07.890
because I named the class custom route and that custom route will extend the material page

13
00:01:07.920 --> 00:01:14.190
route and you might know material page route from earlier in the course, material page route was used

14
00:01:14.460 --> 00:01:25.300
to create this on the fly navigation with push or push replace, so not push named but just push. Material

15
00:01:25.300 --> 00:01:32.670
page route is a generic class and this is signaled by adding the angle brackets and t here as a placeholder

16
00:01:32.680 --> 00:01:35.040
for the generic type that can be passed in,

17
00:01:35.140 --> 00:01:40.030
that would be the data that the page you're loading would resolve to once it's popped off.

18
00:01:40.660 --> 00:01:48.580
So your custom route should also be a generic type and then you should add a constructor to custom route.

19
00:01:48.870 --> 00:01:58.240
In that constructor, you should accept a widget builder type of name builder, so a

20
00:01:58.240 --> 00:02:05.530
builder argument which will get a widget builder function in the end and your route settings stored

21
00:02:05.530 --> 00:02:11.320
in a settings property, settings argument because route settings is simply also an argument the material

22
00:02:11.340 --> 00:02:12.270
page route gets

23
00:02:12.280 --> 00:02:17.170
and of course your custom route should be able to work with everything the material page route gets,

24
00:02:17.170 --> 00:02:19.220
it should just play a different animation,

25
00:02:19.330 --> 00:02:24.350
it shouldn't change the general behavior unless you really know what you're doing.

26
00:02:24.370 --> 00:02:30.070
All these things should be forwarded to the parent class, so to material page route which we'll still use

27
00:02:30.070 --> 00:02:34.900
behind the scenes therefore and we do this with this initialize list with a colon and then

28
00:02:34.900 --> 00:02:40.570
by calling super thereafter and to super, for the builder, I forward the builder I'm getting and for the

29
00:02:40.570 --> 00:02:46.150
settings, I'm forwarding the settings I'm getting, so that this all works just as before with just the

30
00:02:46.150 --> 00:02:49.420
material page route and nothing changed regarding that.

31
00:02:49.750 --> 00:02:54.640
So this is now fully function custom route which in the end just wraps the material page route and doesn't

32
00:02:54.640 --> 00:02:56.420
add anything useful to it,

33
00:02:56.530 --> 00:03:04.120
the useful thing comes now. You can add a build transitions method and my IDE helps me here with the

34
00:03:04.120 --> 00:03:08.680
auto completion where I can hit enter to get this method. Build

35
00:03:08.680 --> 00:03:10.360
transitions is overridden,

36
00:03:10.390 --> 00:03:16.930
it's part of material page route and this controls how the page transition is animated and by overriding

37
00:03:16.930 --> 00:03:18.960
this, we can set up our own animation.

38
00:03:19.120 --> 00:03:23.620
It gets a build context and it gets an animation, in the end,

39
00:03:23.620 --> 00:03:30.420
that is the animation which Flutter controls for you, which you can simply listen to to know at which

40
00:03:30.420 --> 00:03:36.960
part of the transition you are and it will basically give you as you see a double that changes

41
00:03:36.960 --> 00:03:45.390
over time which you can use for for example changing the opacity and then in here, instead of returning

42
00:03:45.430 --> 00:03:52.150
super build transitions which would again just wrap the default method provided by the parent class, we

43
00:03:52.150 --> 00:03:56.860
can first of all check if settings, you have the settings property right,

44
00:03:58.140 --> 00:04:02.790
this is getting stored as a property by material page route and since we extend this, we can access it

45
00:04:02.790 --> 00:04:09.930
here as well. Settings is initial route which means this is the first route that loads in the app,

46
00:04:10.080 --> 00:04:15.030
then I just want to return child which is the page we're navigating to because I don't want to animate

47
00:04:15.030 --> 00:04:21.510
that first page that's loading in. If it's not the initial route, so if we're already in the app and we're

48
00:04:21.510 --> 00:04:26.460
just moving to a different screen, then we can for example return a fade transition which we already

49
00:04:26.460 --> 00:04:34.600
saw earlier where we set the opacity to animation because animation here is this argument which is an

50
00:04:34.610 --> 00:04:41.060
animation that animates a double and that's just what opacity needs and the child, the child route

51
00:04:41.360 --> 00:04:47.570
which should be animated in is simply passed here as a child argument to fade transition and that is all.

52
00:04:47.780 --> 00:04:55.000
This is now a custom route with a very simple fade in transition. Now how can we use this?

53
00:04:55.190 --> 00:05:03.650
Well the way we use material page route, so in on the fly animations. So here, we can go to let's say the

54
00:05:03.920 --> 00:05:09.770
products, not the products grid, there we have the hero animation but let's say we go to our drawer

55
00:05:11.210 --> 00:05:18.680
and there when we go to orders, instead of using pushReplacementNamed, let's use navigator of context

56
00:05:19.310 --> 00:05:26.360
pushReplacement without named and now create a new custom route here and for that, we need to import

57
00:05:26.480 --> 00:05:37.080
our custom route, so import helpers/custom_route.dart. With that import added down there, we create our

58
00:05:37.080 --> 00:05:42.780
custom route on the fly, we add a builder, that builder gets a context, it's the same builder you have

59
00:05:42.780 --> 00:05:49.440
in the material page route because we extend the material page route and we build an orders screen here,

60
00:05:49.590 --> 00:05:50.850
it's as simple as that, we need

61
00:05:56.320 --> 00:06:04.120
to add one extra parentheses here and with that, if you save this, go to shop maybe and then go to the

62
00:06:04.180 --> 00:06:06.860
orders screen and you see this

63
00:06:06.860 --> 00:06:12.430
now just has a fade animation, it doesn't have that push from the bottom animation, it just fades because

64
00:06:12.430 --> 00:06:14.680
it's using our custom route.

65
00:06:14.680 --> 00:06:18.340
So this is how you can use your custom animation on a per route level.

66
00:06:18.340 --> 00:06:24.280
Now what if you want to apply to all routes including named routes? Then you can go to the main.dart file

67
00:06:24.280 --> 00:06:30.070
where you set up your theme here in material app and in there, you can also set a page transition

68
00:06:30.070 --> 00:06:31.410
theme.

69
00:06:31.430 --> 00:06:36.100
This takes a page transition theme where you set up some builders.

70
00:06:36.380 --> 00:06:43.140
Now builders is a map and that is a map of different builder functions for different operating systems,

71
00:06:43.250 --> 00:06:47.870
so you can even have different transitions for different operating systems,

72
00:06:48.050 --> 00:06:55.820
so for Android or iOS. The key simply is TargetPlatform.android for example and 

73
00:06:55.960 --> 00:06:57.150
TargetPlatform.ios

74
00:06:57.410 --> 00:07:03.470
and then the value after the colon has to be a builder function which defines how that should look like,

75
00:07:04.380 --> 00:07:05.770
so here you need a page

76
00:07:05.790 --> 00:07:15.300
transition builder. Now the good thing is our helper file here should be imported, so helpers custom

77
00:07:15.300 --> 00:07:15.850
route

78
00:07:16.020 --> 00:07:19.310
and in there, we have such a transition builder of course.

79
00:07:19.350 --> 00:07:24.600
Now here, we unfortunately can't assign our custom route though because that's a full route and not just

80
00:07:24.600 --> 00:07:31.460
a transition builder but we can go to the helper here and add another class in there,

81
00:07:31.460 --> 00:07:37.840
the custom page transition builder if you want to name it like this which extends the built-in page

82
00:07:37.850 --> 00:07:43.480
transition builder and in here, you need to add this build transitions method.

83
00:07:43.550 --> 00:07:50.060
So you could copy that into this class here and now we need to just adjust this as a little bit because build

84
00:07:50.060 --> 00:07:51.770
transitions here,

85
00:07:51.770 --> 00:07:54.670
actually if we have a look at the page

86
00:07:54.670 --> 00:08:02.770
transition builder, does also get the route class or the route object which controls the animation as a first

87
00:08:02.800 --> 00:08:09.580
argument, so let's add page route which is a generic type route here.

88
00:08:09.780 --> 00:08:14.160
Build transitions therefore also needs to be generic and get that t type here,

89
00:08:14.190 --> 00:08:18.290
so we have it both on build transitions as an annotation to that method name

90
00:08:18.300 --> 00:08:23.580
and on page route, this simply means that in the end this will work with different routes that will load

91
00:08:23.610 --> 00:08:28.830
different pages which will return different values when they're popped off and this just is Dart's way

92
00:08:28.830 --> 00:08:35.370
of expressing this relation and making sure that type support is ensured across the entire chain of

93
00:08:35.970 --> 00:08:37.980
logic you're executing.

94
00:08:37.980 --> 00:08:43.200
Now because we have the route here, we can now access route.settings here to check for the initial

95
00:08:43.200 --> 00:08:44.310
route

96
00:08:44.310 --> 00:08:46.930
and with that, this should be set up correctly.

97
00:08:46.950 --> 00:08:55.440
Now we can use that custom page transition builder in our main.dart file here, sorry custom page transition

98
00:08:55.440 --> 00:09:00.570
builder by instantiating it here and I'll use the exact same for iOS but you could of course define

99
00:09:00.570 --> 00:09:07.170
different ones and now if you do a restart here, you should actually have that fade transition for every

100
00:09:07.290 --> 00:09:14.910
route change and indeed, if I go to the shop or to the orders or back to the shop or here to the shirt,

101
00:09:15.210 --> 00:09:16.650
I always have

102
00:09:16.650 --> 00:09:22.410
this fade transition. So this is how you could change the transition for all your routes if you wanted

103
00:09:22.410 --> 00:09:27.470
to, here through the theme with the help of the page transition theme and your own page

104
00:09:27.480 --> 00:09:33.680
transition builder which is very similar to your own custom route here, difference is

105
00:09:33.690 --> 00:09:40.150
you have one extra argument in build transitions here and you use it for different purposes. This

106
00:09:40.150 --> 00:09:46.810
here for single routes on the fly creation, this here for a general theme which affects all route transitions

107
00:09:46.810 --> 00:09:47.290
of course.

