WEBVTT
1
00:00:02.190 --> 00:00:07.860
So we got this chat screen going, but of course, the chat messages don't look that exciting.

2
00:00:08.070 --> 00:00:15.540
So time to work on those who get the message to start fall where we render just text messages.

3
00:00:16.200 --> 00:00:23.700
And I will simply add a new widget file here, message bubble to start to render such a chat message

4
00:00:23.700 --> 00:00:24.870
bubble in their.

5
00:00:27.660 --> 00:00:33.750
Now, message bubble can't just be a stateless widget, it doesn't manage any internal state, it just

6
00:00:33.750 --> 00:00:37.410
outputs data and it's named this message bubble.

7
00:00:37.680 --> 00:00:43.200
And of course, as always, import material, the thart from the flutter package so that we can use

8
00:00:43.200 --> 00:00:45.380
all those flutter components.

9
00:00:45.990 --> 00:00:47.760
Now, the idea here is simple here.

10
00:00:47.760 --> 00:00:55.140
I want to render or output return a more beautiful chat message which looks nicer than just some boring

11
00:00:55.140 --> 00:00:55.680
text.

12
00:00:56.640 --> 00:01:03.030
And to achieve this, we can indeed turn a container here, because a container is a pretty versatile

13
00:01:03.030 --> 00:01:07.680
component, which we can stall quite a bit and we add decoration to the container.

14
00:01:07.860 --> 00:01:13.580
Now, this takes a box decoration object, which we can create with the box decoration constructor function.

15
00:01:14.040 --> 00:01:16.330
And here we can configure a bunch of things.

16
00:01:16.350 --> 00:01:23.260
For example, we can set a color and use, let's say, our axon color here as the base background color.

17
00:01:24.060 --> 00:01:31.560
We can also set up a border radius to define some around corners and here we can then use border radius

18
00:01:31.920 --> 00:01:36.360
dots circular to set a specific border radius on all corners.

19
00:01:37.600 --> 00:01:44.140
Now, we can also define a fixed width, not instead of decoration, though, but directly in the container,

20
00:01:44.560 --> 00:01:51.820
for example, of 140, so that our message is always contained in a box of this width.

21
00:01:52.900 --> 00:02:00.250
We can also add some padding here and use etch insets symmetric, maybe to have different padding to

22
00:02:00.250 --> 00:02:04.380
left and right and top and bottom and for padding to top and bottom.

23
00:02:04.390 --> 00:02:08.479
So for vertical padding, all set up, heading off 10 and four left and right.

24
00:02:08.500 --> 00:02:12.510
I want to have a little bit more space, so I'll set the horizontal padding to 16.

25
00:02:12.580 --> 00:02:18.640
And of course, as always, you can play around with these values and find to style you like most now

26
00:02:18.640 --> 00:02:23.320
also want to add some margin so that there is some space between the different messages.

27
00:02:23.770 --> 00:02:29.920
And here again, I'll use Etch INSETs symmetric to have different spacing to top and bottom and for

28
00:02:29.920 --> 00:02:33.160
left and right and for top and bottom spacing.

29
00:02:33.160 --> 00:02:36.100
I'll use four and four left and right spacing.

30
00:02:36.100 --> 00:02:37.090
I'll use eight.

31
00:02:39.410 --> 00:02:45.710
Now, last but not least inside of that container, I want to have a child and dad can be a text which

32
00:02:45.710 --> 00:02:52.970
is here, which should now hold that actual message, of course, not hard coded like this, but received

33
00:02:52.970 --> 00:02:56.290
from outside as an input to message bubble.

34
00:02:57.080 --> 00:03:04.070
So therefore, here all the fine property, which is of string, which will be our message, and that

35
00:03:04.070 --> 00:03:05.510
should be received from outside.

36
00:03:05.540 --> 00:03:11.570
So let's define the message bubble constructor function here and make sure that the first argument we

37
00:03:11.570 --> 00:03:14.480
receive is bound to that message property.

38
00:03:15.050 --> 00:03:17.510
And now that message property will hold the message.

39
00:03:17.870 --> 00:03:19.430
We can output it here.

40
00:03:21.730 --> 00:03:29.290
Now, maybe we all want to style this text's all set the style argument on the text widget and set it

41
00:03:29.290 --> 00:03:33.660
to a text style object where you can style whatever you want.

42
00:03:33.940 --> 00:03:42.070
I will just style the color and make sure that we can see this because the box has the accent color

43
00:03:42.070 --> 00:03:42.970
as a background.

44
00:03:43.450 --> 00:03:49.900
Because of that here, I actually want to set the text color to X and text theme.

45
00:03:52.400 --> 00:03:53.790
Title dot color.

46
00:03:53.960 --> 00:03:59.210
And that should be a color that stands out from the exit color background.

47
00:04:01.550 --> 00:04:04.250
So that's my message bubble, let's give it a try.

48
00:04:04.280 --> 00:04:10.430
Let's go to Massachusetts, and instead of rendering just this text here, we can now render a message

49
00:04:10.430 --> 00:04:11.210
bubble here.

50
00:04:11.630 --> 00:04:14.960
Of course, make sure you import your message bubble.

51
00:04:15.080 --> 00:04:16.190
DARD filed for that.

52
00:04:17.519 --> 00:04:23.490
And message bubble wants the Texas should render as an input, so we reach out to Texas to chat docs

53
00:04:23.790 --> 00:04:27.870
for to give an index and then to the text field in this document.

54
00:04:29.100 --> 00:04:35.190
And if we now save everything, this looks nicer now we got these chat messages, still not the final

55
00:04:35.250 --> 00:04:37.300
style, but better than nothing.

56
00:04:38.100 --> 00:04:44.850
Now you see that the width is ignored, though, the width of 140, which I set up.

57
00:04:45.710 --> 00:04:53.030
Here and that happens because it's inside of a list view now, we can make sure that the width is respected

58
00:04:53.360 --> 00:04:55.250
by, for example, wrapping.

59
00:04:57.330 --> 00:05:02.520
The container here into a row and you'll see why I want to row in a second.

60
00:05:02.760 --> 00:05:04.850
I have another reason for using that as well.

61
00:05:05.310 --> 00:05:10.200
So if you wrap is in a row now, the width is respected and we have our chat bubbles here.

62
00:05:11.220 --> 00:05:15.140
Now, at the moment, they all have the same look and they're all on the same side.

63
00:05:15.150 --> 00:05:22.530
And of course, in reality, we might want to differentiate between chat messages received or written

64
00:05:22.530 --> 00:05:25.620
by us and chat messages written by another user.

65
00:05:25.880 --> 00:05:31.800
May maybe our messages should be on the right and have a different background color than the messages

66
00:05:31.800 --> 00:05:33.030
we get from our users.

67
00:05:34.170 --> 00:05:40.650
And to incorporate this, we can go to new message and make sure that when we sent this message, we

68
00:05:40.650 --> 00:05:50.430
actually also add a number of field, the user ID field, and that should now be our user ID so that

69
00:05:50.430 --> 00:05:57.810
we can later use that to find out whether it was us who wrote this message or some other user name for

70
00:05:57.810 --> 00:05:57.960
that.

71
00:05:57.960 --> 00:06:02.190
Of course, we need access to our user ID and that's something we'll do in the next lecture.

