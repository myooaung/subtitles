WEBVTT
1
00:00:02.150 --> 00:00:09.050
So now that we got push notifications working, now that we're able to push our notifications of Wieters

2
00:00:09.320 --> 00:00:16.160
notifications tool here on Firebase, I think it would be a great conclusion to this app and to this

3
00:00:16.160 --> 00:00:23.720
model if we could not just send messages through this tool here, which, by the way, is a great tool

4
00:00:23.900 --> 00:00:30.090
for any marketing messages or any messages you as the app owner want to push out to your users.

5
00:00:30.230 --> 00:00:32.360
So does this not just a testing tool?

6
00:00:32.540 --> 00:00:36.110
This is really a tool you can use to send messages to your users.

7
00:00:36.650 --> 00:00:40.370
But sometimes you also want messages that are triggered by users.

8
00:00:40.650 --> 00:00:47.090
For example, if a user sends a chat message here, maybe you want to let all average users know about

9
00:00:47.090 --> 00:00:47.160
it.

10
00:00:47.180 --> 00:00:49.940
So that is another use case you could have.

11
00:00:49.940 --> 00:00:53.270
And therefore that is something we want to look into here as well.

12
00:00:53.360 --> 00:01:00.040
And I think that would be a great conclusion to this model that we make sure if a user sends a chat

13
00:01:00.050 --> 00:01:07.430
message here, we push that message to all other devices that also have this app installed.

14
00:01:07.790 --> 00:01:12.770
Now, as a side note, if this is something you want is on a different page, you might not want to

15
00:01:12.770 --> 00:01:18.440
spam all your users just because one user posted something in a public chat.

16
00:01:18.710 --> 00:01:24.060
But here to demonstrate how this works and to see this in action, I think it's a great example.

17
00:01:24.890 --> 00:01:32.660
So therefore, we need some way of triggering such a message, which we previously wrote manually with

18
00:01:32.660 --> 00:01:34.640
this tool automatically.

19
00:01:34.820 --> 00:01:42.740
When a new entry is written to our database, when a new chat message arrives and Firebase has a solution

20
00:01:42.740 --> 00:01:49.790
for that, we can use Firebase Cloud functions to execute code when a certain event occurs.

21
00:01:50.210 --> 00:01:53.990
Now, of course, that's also not the only way of sending automated messages.

22
00:01:54.230 --> 00:02:00.530
You can write your own server side code on your own server and interact with the firebase cloud messaging

23
00:02:00.530 --> 00:02:02.860
service to trigger an automated message.

24
00:02:03.200 --> 00:02:07.910
And as always, the official firebase cloud messaging docs got you covered here.

25
00:02:07.910 --> 00:02:14.570
Under a server environments, you can learn all about automated messages, but it's particularly easy

26
00:02:14.600 --> 00:02:20.600
if you do use the entire firebase ecosystem and if you do use firebase cloud functions.

27
00:02:21.930 --> 00:02:28.080
So to get started on the functions part of Firebase, we can just click on Get Started and we learned

28
00:02:28.080 --> 00:02:34.120
that we need to install this tool locally on our machine to get started writing such functions.

29
00:02:34.440 --> 00:02:39.660
So here, the Flutter app, I'll switch to the regular terminal, which is integrated into my idee.

30
00:02:39.660 --> 00:02:47.520
Here you can also use your normal system terminal or command prompt and in there run npm install dashi

31
00:02:47.520 --> 00:02:48.800
firebase tools.

32
00:02:48.990 --> 00:02:54.630
Now, as a side note on Linux and Mac, you might need to add Souto in front of this to have the right

33
00:02:54.630 --> 00:02:55.280
permissions.

34
00:02:55.740 --> 00:03:02.370
This will installed as Firebase Tools package globally on your system and we need this tool to then

35
00:03:02.370 --> 00:03:07.380
later write to cloud function code to create those automated notifications.

36
00:03:08.310 --> 00:03:13.410
So this finished and so we can click on continue and now we should run Firebase in it.

37
00:03:13.530 --> 00:03:21.240
And then once we did write our function code firebase deploy, so I'll write Firebase init here in this

38
00:03:21.240 --> 00:03:22.720
project and that's important.

39
00:03:22.920 --> 00:03:28.710
Do this inside of the project to which the functions should belong to keep all your code organized.

40
00:03:29.610 --> 00:03:36.360
And now this will basically open up a wizard which asks you some questions and it asks you which features

41
00:03:36.360 --> 00:03:42.150
of the firebase ecosystem you want to use here, or to be precise, which features you want to manage

42
00:03:42.150 --> 00:03:45.930
with that Firebase Seelie tool, which we're using here.

43
00:03:46.020 --> 00:03:48.480
Seelie stands for Command Line Interface.

44
00:03:48.990 --> 00:03:54.420
Now, we're interested in functions here, so I will scroll down to that and hit space to select it

45
00:03:54.810 --> 00:03:56.500
and we can leave the rest untouched.

46
00:03:56.730 --> 00:04:02.930
Yes, we are using Firestorm and yes, we are using storage, but we already got this integrated here.

47
00:04:02.940 --> 00:04:06.780
We don't want to manage anything there with the Firebase Seelie.

48
00:04:06.930 --> 00:04:09.300
We're managing this through the web interface instead.

49
00:04:09.510 --> 00:04:15.480
Now, functions currently can't be managed through this, so we do select those and hit enter thereafter.

50
00:04:16.320 --> 00:04:24.390
Now you have to let the firebase tool know to which project you want to connect this local functions

51
00:04:24.390 --> 00:04:25.860
project you're going to create.

52
00:04:25.890 --> 00:04:29.070
So to which firebase web project you want to connect it.

53
00:04:29.430 --> 00:04:32.670
And here I will select you as an existing project.

54
00:04:34.260 --> 00:04:36.780
And then select my flutter chat app here.

55
00:04:37.710 --> 00:04:42.840
Now is the last step I'm asked which programming language I want to use for those functions and I will

56
00:04:42.840 --> 00:04:43.950
use JavaScript.

57
00:04:44.040 --> 00:04:48.120
Now, as a side note, you don't need to be a JavaScript expert to follow along here.

58
00:04:48.330 --> 00:04:53.370
Of course, if you want to build a real app with a more complex silverside logic, you need to learn

59
00:04:53.370 --> 00:04:56.370
JavaScript or some other language which you can use there.

60
00:04:56.730 --> 00:05:00.200
But to follow along and discourse, you don't need any JavaScript knowledge.

61
00:05:00.270 --> 00:05:05.580
So let's just hit enter here and let's choose yes.

62
00:05:05.580 --> 00:05:09.330
Here for LINTANG so that we avoid any bugs.

63
00:05:09.840 --> 00:05:12.830
And this will now add a functions folder here.

64
00:05:13.770 --> 00:05:19.680
Now in that functions folder you've got a couple of files and they all don't matter except for this

65
00:05:19.680 --> 00:05:20.810
index just file.

66
00:05:20.850 --> 00:05:25.470
That's the important one for us because that is where we're going to write our function.

67
00:05:27.090 --> 00:05:31.710
Now, you also see that the wizard isn't entirely done, it asks you whether it dependancy should be

68
00:05:31.710 --> 00:05:35.670
installed and you should press Y for a yes here and hit enter.

69
00:05:35.940 --> 00:05:37.920
And this will install all dependencies.

70
00:05:37.950 --> 00:05:39.930
This functions, setup needs.

71
00:05:40.290 --> 00:05:42.360
So now I'm not talking about the flutter app.

72
00:05:42.360 --> 00:05:44.460
I'm talking about these cloud functions.

73
00:05:44.550 --> 00:05:49.560
And we will later deploy these cloud functions, Tudor's firebase hosting environment.

74
00:05:49.620 --> 00:05:53.270
So they will be running on a server away from our local machine.

75
00:05:53.580 --> 00:05:55.480
We just developed them locally.

76
00:05:56.160 --> 00:06:01.140
Now this created this node modules folder, which basically contains all the dependencies we have here.

77
00:06:01.500 --> 00:06:07.920
And we have this packaged adjacent file which lists all the dependencies this Project Dysfunctions Project

78
00:06:07.920 --> 00:06:08.250
has.

79
00:06:08.550 --> 00:06:13.290
And there we got two dependencies, firebase admin and firebase functions.

80
00:06:13.620 --> 00:06:20.310
And we will indeed only need these two packages to write our automated notifications sending code.

81
00:06:20.720 --> 00:06:22.680
So let's get started with that next.

