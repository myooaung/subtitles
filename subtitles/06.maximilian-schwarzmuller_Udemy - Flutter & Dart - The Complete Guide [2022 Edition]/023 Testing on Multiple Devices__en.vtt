WEBVTT
1
00:00:02.120 --> 00:00:03.000
So that's nice.

2
00:00:03.020 --> 00:00:09.260
Of course, there are missing functionalities, for example, we don't have to upload, we don't display

3
00:00:09.290 --> 00:00:13.040
the image of the sender or the user name of the sender here next to our messages.

4
00:00:13.830 --> 00:00:20.870
But before we dive into any of that, let's actually see whether this works and if two devices, two

5
00:00:20.870 --> 00:00:25.100
simulators can talk to each other for dead all around us on issues here.

6
00:00:26.100 --> 00:00:28.050
I'll stop this process here.

7
00:00:29.220 --> 00:00:36.600
An entirely rerun it on Android once so that this new latest version is installed on Android so that

8
00:00:36.600 --> 00:00:39.840
when I kill it the next time I can still started on the device.

9
00:00:40.170 --> 00:00:44.310
Otherwise, I would have started an older state of the app, which of course I don't want.

10
00:00:47.100 --> 00:00:53.280
So now with this running, I can kill this again, but now I can launch it for the after.

11
00:00:54.260 --> 00:00:55.700
And get the latest state.

12
00:00:57.230 --> 00:01:00.950
And now I will launch it on Aiwass now to launch on IWG.

13
00:01:02.050 --> 00:01:08.230
I'll bring up that status, bar individuals to do code and click here on my emulator down there and

14
00:01:08.230 --> 00:01:09.840
start the simulator.

15
00:01:10.000 --> 00:01:13.660
Alternatively, you can simply start at through Xcode.

16
00:01:14.740 --> 00:01:18.670
So that now this simulator is booting up.

17
00:01:20.540 --> 00:01:27.140
And with that booted all run Flattr on that, since it's Selecter down there, when I run the flood

18
00:01:27.140 --> 00:01:28.900
wrap, it will run on this device.

19
00:01:28.910 --> 00:01:32.380
So now does this building the app for us and will launch it there?

20
00:01:33.140 --> 00:01:38.180
And since this is the first time I'm running it, it's also doing all the initial set up, all the packages

21
00:01:38.180 --> 00:01:39.710
I added to the app and so on.

22
00:01:39.710 --> 00:01:41.180
So this can take a bit longer.

23
00:01:41.960 --> 00:01:49.220
And what you might observe here is that it basically gets stuck and it shows this strange error.

24
00:01:49.220 --> 00:01:54.410
Configuring the default firebase app first through called Stack, if you're getting this, can simply

25
00:01:54.410 --> 00:02:01.070
cancel this launch process on issues and simply make sure that you open this project, the folder there

26
00:02:01.070 --> 00:02:04.070
through X code and then here click on Runner.

27
00:02:04.070 --> 00:02:04.370
Right.

28
00:02:04.370 --> 00:02:05.030
Click on it.

29
00:02:05.970 --> 00:02:08.550
And choose add files to runner.

30
00:02:09.630 --> 00:02:16.230
And now here, choose this Google service info list file again, which we downloaded and stored in this

31
00:02:16.230 --> 00:02:23.850
folder earlier, click, add and added through Xcode like this, it's still in the same location, but

32
00:02:23.850 --> 00:02:26.820
this makes Xcode aware of it, so to say.

33
00:02:28.210 --> 00:02:34.560
So once you did that, you can try running this app again, so again, go to run, make sure you selected

34
00:02:34.570 --> 00:02:39.220
the iPhone or whatever simulator you are using and launched you flutter app again.

35
00:02:39.220 --> 00:02:42.240
And now this time it should work.

36
00:02:42.640 --> 00:02:44.320
So let's wait again.

37
00:02:46.220 --> 00:02:53.090
So now I get this app up and running here and I'll simply create a new account here, test to at test

38
00:02:53.090 --> 00:02:53.690
dotcom.

39
00:02:54.990 --> 00:02:56.850
With a different username.

40
00:02:57.790 --> 00:03:01.070
And my password and I click sign up to create this user.

41
00:03:01.390 --> 00:03:03.570
Now here I see all the messages are not by me.

42
00:03:03.580 --> 00:03:04.360
This makes sense.

43
00:03:04.750 --> 00:03:11.770
And if I send a message here, this is a test from the other device.

44
00:03:13.270 --> 00:03:14.350
And user.

45
00:03:15.330 --> 00:03:17.940
If I sent this message here.

46
00:03:19.470 --> 00:03:22.120
You see the fear here and you see it up here on the left.

47
00:03:22.140 --> 00:03:23.820
So this now works.

48
00:03:25.470 --> 00:03:31.230
From this user, on the other hand, of course, also shows up on the right device, but here it shows

49
00:03:31.230 --> 00:03:36.570
up as if it's not from this user because it isn't because I'm working on two different users on those

50
00:03:36.570 --> 00:03:37.700
two devices.

51
00:03:38.070 --> 00:03:39.780
So that is pretty amazing.

52
00:03:39.810 --> 00:03:41.100
This works pretty well.

53
00:03:41.100 --> 00:03:46.190
And we can see that the app works on both devices and that we're able to chat.

54
00:03:46.800 --> 00:03:52.140
Now, needless to say, of course, the other functionalities like logout and so on also still should

55
00:03:52.140 --> 00:03:52.480
work.

56
00:03:52.500 --> 00:03:55.280
Let's just test the real quick for completeness sake.

57
00:03:55.320 --> 00:03:56.590
Yeah, looks good to me.

58
00:03:57.300 --> 00:04:04.160
So if we get this basic chat functionality going on, but right now it's hard to tell from whom a message

59
00:04:04.170 --> 00:04:04.710
is coming.

60
00:04:04.960 --> 00:04:12.210
It would be better if we could also see the user name, at least of the user who wrote a message, maybe

61
00:04:12.210 --> 00:04:18.860
like a fat title above the actual message that tells us who the user is that wrote this message.

62
00:04:19.170 --> 00:04:21.149
This is what we're going to add next.

