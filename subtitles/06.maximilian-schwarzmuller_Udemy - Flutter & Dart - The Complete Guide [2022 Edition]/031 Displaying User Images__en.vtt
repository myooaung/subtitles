WEBVTT
1
00:00:02.070 --> 00:00:08.880
So we want user images next to the chat messages, and to avoid that, we have to send thousands of

2
00:00:08.880 --> 00:00:13.620
requests to the users collection for thousands of messages potentially.

3
00:00:14.130 --> 00:00:23.220
I will also make sure to store a link where you are held to the image next to the message it belongs

4
00:00:23.220 --> 00:00:26.200
to for the same reason I stored a username there.

5
00:00:26.250 --> 00:00:33.030
Now, of course, if you have an app where users are allowed to edit their name or their image, that

6
00:00:33.030 --> 00:00:39.210
might not be the best solution because you might have to update all those existing messages or you have

7
00:00:39.210 --> 00:00:44.120
to take a different route where you fetched a brand new data from the user's collection for every message.

8
00:00:44.550 --> 00:00:47.940
But here, where does updating functionality is not possible?

9
00:00:48.120 --> 00:00:52.650
This definitely is a great approach to minimize the amount of requests being sent.

10
00:00:53.160 --> 00:00:59.130
Hence, it's not a new message widget where we send a new message where I now don't just want to store

11
00:00:59.160 --> 00:01:06.570
the user name, but also, let's say a user image field here in the document besides the text of the

12
00:01:06.570 --> 00:01:07.080
message.

13
00:01:07.470 --> 00:01:11.350
And here we want to take the well image you are of the user.

14
00:01:11.820 --> 00:01:16.250
Now, the good thing is we are already fetching data from the users collection here.

15
00:01:16.830 --> 00:01:22.770
That's where we get the user name from so we can use that same user data to get access to the image

16
00:01:22.800 --> 00:01:30.600
you URL because in the users collection we have that image you URL field here so I can just access image.

17
00:01:30.600 --> 00:01:35.730
You are out here to get access to it yourself and store it on every message that's being sent.

18
00:01:37.110 --> 00:01:44.820
Now, with that out of the way, here is the app running on my Android emulator, but here you can see

19
00:01:44.820 --> 00:01:46.290
it running on my real iPhone.

20
00:01:46.980 --> 00:01:48.990
And if I now type hello here.

21
00:01:49.870 --> 00:01:55.990
As a message and I sent this, you see it pop up on the left, too, which is how it should work, and

22
00:01:55.990 --> 00:01:59.260
that's not where I want to also show the image of the user.

23
00:01:59.470 --> 00:02:05.980
Now, if we quickly check Firebase in our collections here, if I reload this collections page, we

24
00:02:05.980 --> 00:02:09.070
hopefully see that on our message.

25
00:02:10.250 --> 00:02:14.630
In the chat collection, we also have the user.

26
00:02:15.600 --> 00:02:19.410
Image, you are all being stored and that's not the case here.

27
00:02:23.630 --> 00:02:30.330
Simply because I didn't update my real device with the latest version of that app, of course, my bad.

28
00:02:30.350 --> 00:02:32.030
Let me quickly do that off screen.

29
00:02:33.210 --> 00:02:36.570
So now the latest version is running, let me now try this again.

30
00:02:37.380 --> 00:02:38.100
Hello.

31
00:02:41.930 --> 00:02:45.110
So now here in this chat document, we see the user image.

32
00:02:45.350 --> 00:02:46.490
So this is not working.

33
00:02:46.520 --> 00:02:50.340
Now, a link to the image is being stored side by side to every message.

34
00:02:50.720 --> 00:02:56.650
And with that, let's not output the image next to every chat message bubble to now for this URL.

35
00:02:56.670 --> 00:02:59.960
First of all, create a new user also here on the Android account.

36
00:03:00.850 --> 00:03:05.830
A different user, of course, with my dummy emulator image, which is good enough.

37
00:03:06.850 --> 00:03:10.150
And now we at least have two users that can communicate with each other.

38
00:03:10.630 --> 00:03:14.480
So now the goal is to show that user image next to the message bubble.

39
00:03:15.220 --> 00:03:18.320
Now we're storing the image as part of a message, which is great.

40
00:03:18.460 --> 00:03:23.680
That means we can pass that data to our message bubble constructor here in the messages widget.

41
00:03:24.070 --> 00:03:26.060
We're already passing in the username.

42
00:03:26.350 --> 00:03:35.330
Now we can just pass in the image you URL or as a name ID here, user image, actually, user image.

43
00:03:35.470 --> 00:03:38.920
Now we can just pass this to message bubble and in message bubble.

44
00:03:38.920 --> 00:03:41.480
We now of course, need to accept this extra parameter.

45
00:03:41.890 --> 00:03:44.830
So here in message bubble in its constructor.

46
00:03:46.940 --> 00:03:52.490
After a username, maybe I also want to store to use user image, but of course now we need a property

47
00:03:52.490 --> 00:03:57.280
of that name and that should be of type string because the image will just be a u r l..

48
00:03:57.290 --> 00:03:58.940
In the end, it's a u r l..

49
00:03:58.940 --> 00:03:59.690
Which is a string.

50
00:03:59.840 --> 00:04:01.040
Cue that image.

51
00:04:02.240 --> 00:04:06.860
So now we're able to receive that image here in the message bubble and by the way, we can clear this

52
00:04:06.860 --> 00:04:08.150
import here now that you see it.

53
00:04:08.630 --> 00:04:11.840
And with that image received, we can now output it.

54
00:04:13.770 --> 00:04:17.070
Now, how are you one outputted is, of course, totally up to you.

55
00:04:17.950 --> 00:04:26.350
I will go for an approach where I will wrap this entire row into a number of widget, into a stack widget

56
00:04:26.830 --> 00:04:34.000
and to stack widget takes some children which are organized in an array and which will be laid out on

57
00:04:34.000 --> 00:04:35.330
top of each other, basically.

58
00:04:35.710 --> 00:04:43.290
So if I just wrap this row here now like this, not much should change.

59
00:04:43.300 --> 00:04:49.360
We still see our message as it looked before, but now we can add a new widget which will be on top

60
00:04:49.360 --> 00:04:51.750
of the row in a three dimensional way.

61
00:04:51.760 --> 00:04:58.570
I mean, so here we could now add a circle avatar again to have a rounded image.

62
00:04:58.930 --> 00:05:04.840
And if I add this year, you see this is now on top or actually below it because the stack is organized

63
00:05:04.840 --> 00:05:09.360
such that the further down you are in this children are, the more on top.

64
00:05:09.370 --> 00:05:10.450
This will be visually.

65
00:05:10.660 --> 00:05:18.450
So we can simply move Avatar down after row here and now it will be on top of the row.

66
00:05:18.940 --> 00:05:22.570
And of course, that is roughly what I want, but not exactly.

67
00:05:22.780 --> 00:05:25.920
I want to have it a bit more outside of this chat bubble.

68
00:05:26.410 --> 00:05:32.040
And to achieve this, we can use a number of widget with which I wrapped the circle Avatar and that's

69
00:05:32.060 --> 00:05:33.400
dispositioned widget.

70
00:05:33.610 --> 00:05:39.520
The positioned widget is designed with the stack widget in mind, which means the positioned widget

71
00:05:39.700 --> 00:05:42.160
helps us to position our widgets.

72
00:05:42.430 --> 00:05:45.880
The child of positioned, to be precise, inside of a stack.

73
00:05:46.690 --> 00:05:50.560
Now, I'm not talking about the three dimensional positioning for Dad.

74
00:05:50.560 --> 00:05:54.400
You just have to order your elements correctly in the stack children.

75
00:05:54.910 --> 00:05:58.200
But I'm talking about the two dimensional positioning.

76
00:05:58.450 --> 00:06:03.760
So, for example, that these circles should be further above the message bubble or further on the right.

77
00:06:04.690 --> 00:06:07.960
And for that position has a couple of helpful arguments.

78
00:06:08.740 --> 00:06:09.460
Precisely.

79
00:06:09.460 --> 00:06:11.710
It has bottom, left, right and top.

80
00:06:11.920 --> 00:06:18.610
And for example, here, if I set top to zero and right to zero, it will move to circle Avatar in the

81
00:06:18.610 --> 00:06:19.810
top right corner.

82
00:06:20.290 --> 00:06:26.260
Now, of course, here we see that it takes the entire width of that widget, which is the entire row.

83
00:06:27.640 --> 00:06:36.340
And not just the width of this container in which I have my column with the chat messages now, there

84
00:06:36.370 --> 00:06:39.160
are various ways of fixing that.

85
00:06:39.880 --> 00:06:47.650
And one of the easiest is that we simply said left instead of right, but not to zero, but for example,

86
00:06:47.650 --> 00:06:48.870
to 140.

87
00:06:48.990 --> 00:06:52.440
And now we move to circle one hundred and forty pixels from the left.

88
00:06:53.110 --> 00:06:54.310
And this doesn't look too bad.

89
00:06:54.700 --> 00:07:00.820
I think it should be a bit further above the message bubble, though, and for that we can actually

90
00:07:00.820 --> 00:07:04.080
even set a negative top here, for example, 30.

91
00:07:04.630 --> 00:07:09.940
Now what you'll notice is that this now is clipped into a white that happens.

92
00:07:10.270 --> 00:07:17.470
You go to your stack widget and there you can see that overflow to overload, not visible.

93
00:07:19.010 --> 00:07:24.110
So the overflow argument on the stack widget, now you can fully see that.

94
00:07:25.340 --> 00:07:31.190
Now, it's a bit too much above the chat bubble, so maybe minus 10 works out better and also a little

95
00:07:31.190 --> 00:07:32.770
bit further to the left would be nice.

96
00:07:32.840 --> 00:07:38.420
So maybe one hundred and twenty and you can play around with that to position it in the way you want

97
00:07:38.420 --> 00:07:39.090
to position it.

98
00:07:39.410 --> 00:07:41.260
I think this doesn't look too shabby, though.

99
00:07:41.570 --> 00:07:47.970
And with it, of course, the goal is to show the image and not just some colorful background video.

100
00:07:47.990 --> 00:07:53.370
Again, we can set the background image, which you already learned once at image provider.

101
00:07:53.990 --> 00:07:58.520
Now, we previously saw the image provider for a file image.

102
00:07:58.790 --> 00:08:01.030
Now we basically have a network image.

103
00:08:01.040 --> 00:08:03.980
We have a you are able to image on some server.

104
00:08:04.100 --> 00:08:08.330
And for that there is a dedicated provider and that's the network image provider.

105
00:08:08.540 --> 00:08:12.230
And this provider network image simply wants a link.

106
00:08:12.380 --> 00:08:13.940
You are to that image.

107
00:08:14.540 --> 00:08:16.220
And here I will simply use.

108
00:08:18.150 --> 00:08:21.690
The user image property, which Holstead image.

109
00:08:23.090 --> 00:08:26.120
So here we have user image.

110
00:08:29.100 --> 00:08:34.830
And with this, you see the image here for this user who posted this image.

111
00:08:36.440 --> 00:08:44.230
And that's exactly the look I want, and if I, for example, answer here, you also see it on my post.

112
00:08:44.240 --> 00:08:49.570
Now, of course, it's positioned correctly because we always position it basically the top right corner.

113
00:08:49.820 --> 00:08:55.970
Now, that is the positioning we want for our messages, but not for our own messages, because our

114
00:08:55.970 --> 00:08:58.960
own messages show up on the right, not on the left.

115
00:08:59.780 --> 00:09:05.330
Now, for that we got that useful is my property, which is a boolean that basically tells us whoever

116
00:09:05.330 --> 00:09:06.950
does as opposed by us or not.

117
00:09:07.490 --> 00:09:09.890
And we can use this to fine tune the positioning.

118
00:09:10.370 --> 00:09:12.740
The top positioning is always fine.

119
00:09:12.920 --> 00:09:19.010
But if this is us, if this is me, I don't want to have left one hundred and twenty instead, then

120
00:09:19.010 --> 00:09:25.820
I probably don't want to positioned is from the left side at all so we can set this to null here.

121
00:09:29.370 --> 00:09:34.380
Now, of course, I want to position it, though, but from the right side, so therefore we can add

122
00:09:34.390 --> 00:09:34.980
right.

123
00:09:35.340 --> 00:09:42.180
And if this is me, I want to use one hundred and twenty from the right here and now, otherwise, which

124
00:09:42.180 --> 00:09:43.190
is the not my case.

125
00:09:44.070 --> 00:09:49.720
So now you see its position correctly, both if that's me, as well as when it's the average user.

126
00:09:50.280 --> 00:09:57.990
So now we can type here and send more messages and ultimately add more and more messages with our extra

127
00:09:57.990 --> 00:09:58.440
image.

128
00:09:59.100 --> 00:10:02.700
Now you also see a little glitch here when we have multiple messages.

129
00:10:02.790 --> 00:10:06.930
So maybe we should have a little bit more spacing between our messages.

130
00:10:07.230 --> 00:10:11.970
And that's something we can all to configure here in the message bubble, because, dear, we get this

131
00:10:11.970 --> 00:10:12.570
container.

132
00:10:13.760 --> 00:10:17.960
And we set up some margin around.

133
00:10:18.760 --> 00:10:21.860
Our message is already maybe we should use 10 here.

134
00:10:22.720 --> 00:10:29.560
Now, there is more spacing available, maybe actually 16 on the vertical axis and now this looks way

135
00:10:29.560 --> 00:10:30.100
better.

136
00:10:31.560 --> 00:10:35.940
And you can also see, of course, that this is scrollable in case it should exceed the boundaries of

137
00:10:35.940 --> 00:10:38.710
our screen, so that looks good.

138
00:10:38.760 --> 00:10:42.750
Now we're rendering the messages here with our user image.

139
00:10:45.150 --> 00:10:49.570
Because of the margin, actually, the image is now not positioned perfectly anymore.

140
00:10:49.980 --> 00:10:52.790
Let me fix this by setting top to zero again.

141
00:10:53.250 --> 00:10:54.600
Yeah, so this now looks great.

142
00:10:54.780 --> 00:10:57.960
This is now the final state and want to have your with that.

143
00:10:57.960 --> 00:10:59.280
We got the authentication.

144
00:10:59.280 --> 00:11:01.170
We got the chat, we get the images.

145
00:11:01.560 --> 00:11:05.940
Now, of course, there's just one thing missing and that would be the push notifications.

