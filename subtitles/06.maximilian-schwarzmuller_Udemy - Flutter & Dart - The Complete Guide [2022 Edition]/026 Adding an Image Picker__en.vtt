WEBVTT
1
00:00:02.310 --> 00:00:09.060
So we got our basic chat going on, we see the usernames now, how about some user images?

2
00:00:09.330 --> 00:00:16.550
It would be nice if besides the username, we would also see some image of the user who sent a message.

3
00:00:17.040 --> 00:00:23.430
And for that, we, of course, need a way of adding a profile picture, to be precise, during the

4
00:00:23.430 --> 00:00:25.290
sign up process here.

5
00:00:25.290 --> 00:00:30.170
Besides providing a user name, it would be great if we would also have to provide an image.

6
00:00:30.750 --> 00:00:33.140
So that's what I'm going to work on right now for this.

7
00:00:33.150 --> 00:00:37.590
Let's go back to the off screen or to the art form, to be precise.

8
00:00:37.710 --> 00:00:45.360
And in that all form, we now also want to fetch an image if the user is signing up, of course, not

9
00:00:45.360 --> 00:00:48.000
during logging, but only during sign up.

10
00:00:48.810 --> 00:00:55.470
So for that, maybe at the very top of this entire column, which I have here in the form, we can add

11
00:00:55.470 --> 00:01:01.230
a new widget and that new widget could be the the image prevue, which you want to use.

12
00:01:02.230 --> 00:01:07.600
And there's a specific widget that could be helpful here, and that's the circle avatar, we can add

13
00:01:07.600 --> 00:01:14.380
this on top of the email, TextField, and this gives us such a nice circle here in which we later can

14
00:01:14.380 --> 00:01:15.520
preview the image.

15
00:01:16.150 --> 00:01:22.060
Now, it's a bit small, but we can set the radius here to change that and set it to a double.

16
00:01:22.390 --> 00:01:26.930
And if we set it to 30, you see this is already getting bigger and you can play around with that value.

17
00:01:26.950 --> 00:01:28.840
I'll go with 40 here, I think.

18
00:01:28.850 --> 00:01:29.670
Let me save that.

19
00:01:30.010 --> 00:01:31.260
Yeah, that looks nice to me.

20
00:01:31.360 --> 00:01:34.140
And there I want to preview the image of the user.

21
00:01:34.360 --> 00:01:38.020
Now, of course, the user also needs a way of taking and setting that image.

22
00:01:38.260 --> 00:01:41.310
And therefore, we need a button below that circle avatar.

23
00:01:41.590 --> 00:01:48.130
And you can of course, go four different buttons here, all go for a flat button where I want to combine

24
00:01:48.130 --> 00:01:50.200
text and a camera I can.

25
00:01:50.470 --> 00:01:56.460
And there is a special constructor of this flat button which I can use for this, the DOT icon constructor.

26
00:01:56.740 --> 00:02:01.150
This generates a flat button that has both some text as well as an icon.

27
00:02:01.810 --> 00:02:08.800
So here on prest, I'll just provide a dummy function right now and for the icon, also the icon.

28
00:02:09.250 --> 00:02:18.340
And there we can use the image icon, for example, and for the label we can specify a text widget and

29
00:02:18.340 --> 00:02:19.480
set this to.

30
00:02:21.440 --> 00:02:31.130
Ad image or any text you want now on this flat button, we can then also set the text, color the text.

31
00:02:32.180 --> 00:02:33.830
Color to theme.

32
00:02:35.340 --> 00:02:36.540
Off context.

33
00:02:37.650 --> 00:02:44.550
Primary color, and with all that added, you should have this nice ad image button below this circular

34
00:02:44.550 --> 00:02:45.150
avatar.

35
00:02:45.870 --> 00:02:51.210
Now, of course, we need to hook this button up so that when we click it, we actually do allow the

36
00:02:51.210 --> 00:02:53.360
user to take or pick an image.

37
00:02:54.060 --> 00:02:58.740
And for this, we can use the good old image picker package, which we can use for flutter.

38
00:02:58.950 --> 00:03:00.780
This is very straightforward to use.

39
00:03:01.150 --> 00:03:07.440
We just need to go to installing here, grab this dependency and add this to our perspective YAML file.

40
00:03:07.740 --> 00:03:11.760
So in there below firebase off, I'll add the image picker.

41
00:03:13.520 --> 00:03:18.050
And this will then, of course, automatically download this package and add it to our project.

42
00:03:18.770 --> 00:03:24.140
Now, regarding extra set up steps, there's nothing you need to do on Android, but there are some

43
00:03:24.140 --> 00:03:26.870
extra steps you want to do on iOS.

44
00:03:27.170 --> 00:03:32.930
You want to add these free strings or items to your info list.

45
00:03:33.560 --> 00:03:37.640
And for that, if you are building for iOS, you should go to the IOC folder.

46
00:03:38.630 --> 00:03:41.890
Then to the runner folder and there an envelope.

47
00:03:42.160 --> 00:03:49.070
Just make sure that you do have those items and I currently don't have them here.

48
00:03:50.060 --> 00:03:53.570
So I'll grab this and as photo library use such description.

49
00:03:56.780 --> 00:04:03.590
And we can simply add this here at the bottom and add a key field opening and closing, and between

50
00:04:03.590 --> 00:04:11.240
the opening and closing key, you add this identifier and below that, you just add a string field like

51
00:04:11.240 --> 00:04:11.630
this.

52
00:04:11.940 --> 00:04:18.230
And between the string tags, you now put the options which belong to this description, and that is

53
00:04:18.230 --> 00:04:23.530
the text that will be shown to the user if your app wants access to the photo library.

54
00:04:24.420 --> 00:04:32.460
We need access to let you pick an image, something like this, now we can replicate this twice so that

55
00:04:32.460 --> 00:04:38.850
we have three items because we also need the NSA camera use such description where I will show the same

56
00:04:38.850 --> 00:04:42.390
message and the microphone we shouldn't need to hear.

57
00:04:42.390 --> 00:04:44.580
But to avoid errors, we can also added.

58
00:04:44.820 --> 00:04:49.320
But since we are not going to access the microphone, you might not need this depending on what you

59
00:04:49.320 --> 00:04:50.160
do in your app.

60
00:04:51.900 --> 00:04:57.870
So now with these keys added here, we should now be fine and we should now have all the setup, we

61
00:04:57.870 --> 00:05:04.410
need to use the image picker so we can then go back to the for forum and make sure that we do pick an

62
00:05:04.410 --> 00:05:07.080
image if this button is pressed.

63
00:05:08.390 --> 00:05:15.280
Now, to keep this off him, Leon, I will actually grab this circle avatar and the flat button, though,

64
00:05:15.980 --> 00:05:18.530
cut it from there and add a new widget.

65
00:05:20.450 --> 00:05:28.580
And all, added Pickus Subfolder, and in there I'm going to create a user, underscore image, underscore

66
00:05:28.580 --> 00:05:35.390
Picador file, which holds a stateful widget stateful because this widget will actually need to update

67
00:05:35.390 --> 00:05:41.210
some state since we're going to manage a preview of the image to user chose and we'll need to store

68
00:05:41.210 --> 00:05:44.720
that chose an image and then render the UI to show a preview.

69
00:05:45.470 --> 00:05:52.760
So here I have my user image picker widget and I import material to start, of course.

70
00:05:53.090 --> 00:05:56.510
And now in there I want to render these two widgets, which I cut.

71
00:05:56.660 --> 00:05:59.690
Now, rendering them side by side like this won't work though.

72
00:05:59.900 --> 00:06:06.440
So I'll wrap them in an extra column which has some children into some children are my circle avatar

73
00:06:06.440 --> 00:06:07.540
and my flat button.

74
00:06:07.970 --> 00:06:13.230
And now we can use this user image picker in the off form and therefore the form stays lean.

75
00:06:13.550 --> 00:06:16.310
So here I just have my user image picture like this.

76
00:06:16.550 --> 00:06:21.860
And of course, in order to use the user image picker here, you also need to add this import.

77
00:06:23.240 --> 00:06:28.730
So with that, we have the same year before, but now we have a separate component that manages the

78
00:06:28.730 --> 00:06:32.730
image picking process and that is always a good practice.

79
00:06:33.650 --> 00:06:40.640
So now here with that with that image picture component, we want to make sure that when this flat buttons

80
00:06:40.640 --> 00:06:48.770
pressed, we do open up that image picker that allows the user to use the camera or to use the image

81
00:06:48.770 --> 00:06:49.220
library.

82
00:06:50.670 --> 00:06:54.000
For this, I'll add a new function, your pig image.

83
00:06:55.170 --> 00:07:02.460
And on the image pick or package, we also see how this works, how this package works, and that picking

84
00:07:02.460 --> 00:07:08.970
an image is as easy as calling pic image on this image picker object, which we get from that image

85
00:07:08.970 --> 00:07:11.040
picker library we added.

86
00:07:11.760 --> 00:07:14.820
So therefore we need to add disempowers here as well.

87
00:07:14.970 --> 00:07:17.190
Import this image.

88
00:07:18.650 --> 00:07:25.040
Picker Dodge Dart filed from the image picker package and then here in Pic Image, we can call image

89
00:07:25.040 --> 00:07:27.680
picker dot pic image.

90
00:07:28.610 --> 00:07:34.700
Like this, and now we need to wire up pig image, of course, to the buttons, so here on prest I'll

91
00:07:34.700 --> 00:07:41.750
point at pig image without parentheses so that this function, this method gets executed whenever a

92
00:07:41.750 --> 00:07:43.580
user presses this button.

93
00:07:45.400 --> 00:07:52.480
Now we can find a source here, the image source, and here we got the image source Inam, which actually

94
00:07:52.480 --> 00:07:58.900
allows us to specify the source, and here we can choose whatever we want to use to camera or the gallery

95
00:07:59.050 --> 00:08:00.580
for taking that image.

96
00:08:01.120 --> 00:08:07.270
Now, if you would want to allow the user to go for either of the two, you could also open up a separate

97
00:08:07.270 --> 00:08:09.770
dialogue before you call pic image.

98
00:08:09.850 --> 00:08:13.150
And in that separate dialogue, you could get that user choice.

99
00:08:13.330 --> 00:08:19.210
Now, I will simply assume that we always want to use the camera here, let's say.

100
00:08:19.360 --> 00:08:23.830
But of course, that is totally up to you and what you want to build in your application.

101
00:08:25.040 --> 00:08:34.039
So now here we call pic image and this should open up the camera now, pic image then returns a future

102
00:08:34.039 --> 00:08:35.919
which resolves to depict file.

103
00:08:36.679 --> 00:08:42.860
So here I'll turn this into a async function so that we can conveniently await this future and in the

104
00:08:42.860 --> 00:08:49.100
end get depict image file here and stored this in this constant in this variable here.

105
00:08:50.140 --> 00:08:56.020
And it's just picked image file, which we then can use to show a preview for that here in this state,

106
00:08:56.020 --> 00:09:02.080
we just need to add a new variable, which will be of type file, and that's the picked image.

107
00:09:03.360 --> 00:09:09.090
Underscore picked image, actually, and file is a type which you need to import.

108
00:09:10.870 --> 00:09:19.870
From I so you can add to start IO import here and this will unlock this file type and then this is the

109
00:09:19.870 --> 00:09:20.570
perfect image.

110
00:09:20.980 --> 00:09:28.360
And here we can therefore then call set state and set picked image equal to this picked image file we

111
00:09:28.360 --> 00:09:30.250
got from our future here.

112
00:09:30.370 --> 00:09:33.700
And that stores depict image file in this picked image property.

113
00:09:33.790 --> 00:09:38.530
And it's this property which we now can use to show the prevue, because, of course, we have access

114
00:09:38.530 --> 00:09:45.700
to that property down there in our widget tree and it's here in the Circle Avatar, where you can now

115
00:09:46.060 --> 00:09:48.910
actually set a background image.

116
00:09:49.450 --> 00:09:56.230
You will show an image in this avatar and this background image argument here should be of type image

117
00:09:56.230 --> 00:09:57.070
provider.

118
00:09:57.580 --> 00:09:59.990
And there are various providers in flutter.

119
00:10:00.010 --> 00:10:04.570
There are providers for images that come from the web.

120
00:10:04.570 --> 00:10:14.020
So where you have a link to the image, but there also is a file image provider and file image simply

121
00:10:14.140 --> 00:10:20.230
takes the file, which holds the image and will then basically create a connection and load that image.

122
00:10:20.740 --> 00:10:24.970
So here we just pass passing our picked image and that should do the trick.

123
00:10:25.450 --> 00:10:31.560
With that, we should be able to open the camera safe, depict image and show it as a preview here in

124
00:10:31.560 --> 00:10:32.630
the circle, Avatar.

125
00:10:33.270 --> 00:10:34.390
Now you see when it's safe to.

126
00:10:34.460 --> 00:10:39.550
I get an error, though, because initially, of course, my file here is null.

127
00:10:39.550 --> 00:10:41.890
The picked image initially is not set.

128
00:10:42.610 --> 00:10:46.870
So therefore, your background image actually initially shouldn't be set to anything.

129
00:10:47.140 --> 00:10:52.900
I will rather check if picked image is not null and only if it is not null.

130
00:10:52.900 --> 00:10:54.310
I'll set it to this file image.

131
00:10:54.610 --> 00:11:01.390
Otherwise I will set background image as a whole to null so I will not pass null to file image.

132
00:11:01.600 --> 00:11:07.120
This would cause this error, but instead I only load file image for this image if we have it, and

133
00:11:07.120 --> 00:11:10.800
otherwise set the entire background image argument here to null.

134
00:11:11.350 --> 00:11:14.770
And with that it now saves and reloads without errors.

135
00:11:15.340 --> 00:11:17.230
And we have to empty prevue here.

136
00:11:17.800 --> 00:11:20.760
And you could set a different background color if you wanted to.

137
00:11:20.800 --> 00:11:21.970
We can do this in a second.

138
00:11:22.510 --> 00:11:23.890
And now she was an image.

139
00:11:24.720 --> 00:11:28.530
And as you can tell, nothing happens here when I click this button.

140
00:11:29.620 --> 00:11:34.030
But instead, I get an error here, I get the error that.

141
00:11:35.270 --> 00:11:40.190
The plugin is missing at the end and we know it is error, we can fix it by closing this emulator and

142
00:11:40.190 --> 00:11:42.370
simply restarting it entirely.

143
00:11:42.620 --> 00:11:48.010
If you add a brand new package, you often have to do this to make sure that the package is loaded correctly.

144
00:11:48.590 --> 00:11:50.180
So let's restart it entirely.

145
00:11:51.000 --> 00:11:57.540
And let's then try again, and now it is looks better, it opens up this camera simulator on my emulator

146
00:11:58.350 --> 00:12:04.680
and we can take a picture, your safeties, and we see it here as a preview.

147
00:12:05.220 --> 00:12:10.050
Now, if you're trying this on iOS, you won't be able to do this on the emulator there.

148
00:12:10.050 --> 00:12:12.120
You would need to test it on a real device.

149
00:12:12.300 --> 00:12:16.280
And we'll do that in a second as well once we add it to upload functionality.

150
00:12:16.980 --> 00:12:19.410
So here's my image now.

151
00:12:19.410 --> 00:12:25.890
I will set a different background color here for the case that we don't have an image yet and background

152
00:12:25.890 --> 00:12:29.090
color simply well, once a value of type color.

153
00:12:29.520 --> 00:12:34.740
And here I will just use this gray color as a default so that if we save this.

154
00:12:36.070 --> 00:12:38.610
And they reload this app, so we have no perfect image.

155
00:12:39.100 --> 00:12:42.670
We start with this gray color, but then we can pick an image.

156
00:12:45.610 --> 00:12:50.470
Confirmed this, and now we have our image, so that's great, we're able to pick an image now.

157
00:12:50.950 --> 00:12:56.200
Now, one problem we have here is that, of course, I only want to be able to pick an image if we're

158
00:12:56.200 --> 00:12:58.150
signing up, not ever logging in.

159
00:12:58.330 --> 00:13:01.350
And currently does this showing up on the login screen here.

160
00:13:01.990 --> 00:13:03.430
Now, fixing this is easy.

161
00:13:03.450 --> 00:13:10.300
However, on the off form, we just need to make sure that just like the username field, for example,

162
00:13:10.330 --> 00:13:14.680
this user image picker is only getting added if we're not in logging mode.

163
00:13:15.040 --> 00:13:20.740
And for this, we can use this in error if statement where we check if we're not in logging mode.

164
00:13:20.770 --> 00:13:25.930
So if is logging in is false and only then does user image picker will be added.

165
00:13:26.530 --> 00:13:31.150
So if you do that, you see there is no image picture here and only if I create a new account that's

166
00:13:31.150 --> 00:13:31.450
there.

167
00:13:32.450 --> 00:13:38.960
And then, of course, I can pick that image and it should work just fine, and of course, we also,

168
00:13:38.960 --> 00:13:43.460
thanks to the strohl ability we added earlier, can add our other fields.

169
00:13:44.360 --> 00:13:45.890
So this is now working.

170
00:13:45.890 --> 00:13:47.540
That's step number one.

171
00:13:47.780 --> 00:13:52.250
Step number two is that this image should get uploaded, of course.

