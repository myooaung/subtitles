WEBVTT
1
00:00:02.080 --> 00:00:03.950
So in the previous lecture,

2
00:00:03.950 --> 00:00:07.220
we installed Flutter X code and Android studio,

3
00:00:07.220 --> 00:00:09.050
and we made sure that all these tools

4
00:00:09.050 --> 00:00:11.100
are set up and configured.

5
00:00:11.100 --> 00:00:14.200
Now we wanna create our first Flutter app

6
00:00:14.200 --> 00:00:17.460
and run it on one of these emulators.

7
00:00:17.460 --> 00:00:20.570
And for this, you should, first of all,

8
00:00:20.570 --> 00:00:23.810
go into a folder in your terminal here

9
00:00:23.810 --> 00:00:28.050
where you wanna create and store that Flutter project.

10
00:00:28.050 --> 00:00:31.150
You can use the CD command for Dart to navigate around.

11
00:00:31.150 --> 00:00:34.710
And here in my case, I will go into a playground folder,

12
00:00:34.710 --> 00:00:37.230
which sits in a global development folder,

13
00:00:37.230 --> 00:00:41.160
but you can create and use any folder structure you want,

14
00:00:41.160 --> 00:00:44.830
move into that folder here in your terminal,

15
00:00:44.830 --> 00:00:47.230
and that's really important because the path

16
00:00:47.230 --> 00:00:48.680
into which you moved here

17
00:00:48.680 --> 00:00:52.430
will be used for storing that Flutter project

18
00:00:52.430 --> 00:00:54.760
that we are about to create.

19
00:00:54.760 --> 00:00:57.960
And therefore once you switched to the appropriate folder,

20
00:00:57.960 --> 00:00:59.880
you can then run Flutter create

21
00:00:59.880 --> 00:01:03.020
to create a new Flutter project.

22
00:01:03.020 --> 00:01:05.780
You also need to give that project a name,

23
00:01:05.780 --> 00:01:09.343
and I'll name at first-app, but the name is up to you.

24
00:01:10.230 --> 00:01:12.260
And then once you run this command,

25
00:01:12.260 --> 00:01:16.470
a new folder with that name, first step in my case

26
00:01:16.470 --> 00:01:18.850
will be created in the path

27
00:01:18.850 --> 00:01:20.733
into which you navigated before.

28
00:01:21.810 --> 00:01:23.080
No here I'll hit Enter

29
00:01:23.080 --> 00:01:26.660
and this one now quickly create this project.

30
00:01:26.660 --> 00:01:29.000
Now we also see two commands here,

31
00:01:29.000 --> 00:01:32.830
which we could now use to already start our Flutter app

32
00:01:32.830 --> 00:01:35.900
assuming that we do have an emulator up and running.

33
00:01:35.900 --> 00:01:38.940
But I actually don't wanna do this right away.

34
00:01:38.940 --> 00:01:41.910
Instead, I now wanna install an extra tool,

35
00:01:41.910 --> 00:01:45.000
which we will use for writing our code.

36
00:01:45.000 --> 00:01:47.290
We could use Android Studio for that,

37
00:01:47.290 --> 00:01:50.330
but Android Studio is quite heavy and a bit slow

38
00:01:50.330 --> 00:01:52.600
and I personally don't like it too much.

39
00:01:52.600 --> 00:01:56.380
So my personal preference is a different tool,

40
00:01:56.380 --> 00:01:59.810
and that tool is called Visual Studio Code,

41
00:01:59.810 --> 00:02:04.210
which is a free IDE, a free development environment

42
00:02:04.210 --> 00:02:06.000
provided by Microsoft,

43
00:02:06.000 --> 00:02:09.190
which you can use for all kinds of programming languages

44
00:02:09.190 --> 00:02:11.963
and Flutter and Dart are no exceptions.

45
00:02:12.840 --> 00:02:15.980
So you can visit code.visualstudio.com

46
00:02:15.980 --> 00:02:18.040
to download it from there.

47
00:02:18.040 --> 00:02:20.550
It's a way liable for all operating systems

48
00:02:20.550 --> 00:02:21.940
and your operating system

49
00:02:21.940 --> 00:02:23.893
should be selected here by default.

50
00:02:24.970 --> 00:02:27.923
So you can then download Visual Studio Code.

51
00:02:28.820 --> 00:02:30.980
And once that download is finished,

52
00:02:30.980 --> 00:02:34.890
simply install it by opening that downloaded file

53
00:02:34.890 --> 00:02:36.660
and following the instructions here,

54
00:02:36.660 --> 00:02:38.623
it's really straight forward.

55
00:02:40.730 --> 00:02:42.880
Once you did install it, you can open it

56
00:02:42.880 --> 00:02:44.580
and you should see a starting screen

57
00:02:44.580 --> 00:02:46.480
that looks something like that.

58
00:02:46.480 --> 00:02:49.530
The exact look might differ over time,

59
00:02:49.530 --> 00:02:51.480
but it should look something like that.

60
00:02:52.530 --> 00:02:56.820
Now here I have this dark look and you can get this as well

61
00:02:56.820 --> 00:02:59.930
by going to the menu, and then there under code,

62
00:02:59.930 --> 00:03:03.460
preferences, color theme, you can choose the color theme.

63
00:03:03.460 --> 00:03:06.020
And I'm using that dark plus theme,

64
00:03:06.020 --> 00:03:09.440
but you can of course try out different themes here.

65
00:03:09.440 --> 00:03:10.763
But I like this a lot.

66
00:03:12.010 --> 00:03:14.270
The great thing about Visual Studio Code

67
00:03:14.270 --> 00:03:18.430
is also that you can install a lot of extensions there

68
00:03:18.430 --> 00:03:21.020
which make your life easier.

69
00:03:21.020 --> 00:03:22.870
And there are a couple of extensions

70
00:03:22.870 --> 00:03:24.570
which I'm using in this course,

71
00:03:24.570 --> 00:03:28.550
which you absolutely should install as well.

72
00:03:28.550 --> 00:03:31.880
And for that you can go to this extensions part here

73
00:03:31.880 --> 00:03:35.030
in that sidebar or by using that shortcut

74
00:03:35.030 --> 00:03:38.520
or by using view, extensions,

75
00:03:38.520 --> 00:03:41.370
and then here, the first extension you need

76
00:03:41.370 --> 00:03:44.233
is the Flutter extension.

77
00:03:45.500 --> 00:03:48.970
So search for Flutter and then make sure

78
00:03:48.970 --> 00:03:51.060
you installed that extension.

79
00:03:51.060 --> 00:03:52.800
That's an extension maintained

80
00:03:52.800 --> 00:03:55.250
by the official Dart and Flutter team,

81
00:03:55.250 --> 00:03:57.910
and it will make developing Flutter apps

82
00:03:57.910 --> 00:04:01.440
with Visual studio code much, much easier.

83
00:04:01.440 --> 00:04:03.113
So definitely install that.

84
00:04:03.990 --> 00:04:07.800
That will then automatically also install another extension,

85
00:04:07.800 --> 00:04:09.240
the Dart extension,

86
00:04:09.240 --> 00:04:12.360
which you don't need to install separately

87
00:04:12.360 --> 00:04:16.329
therefore, which also helps with writing Dart code.

88
00:04:16.329 --> 00:04:20.240
And since Flutter uses Dart, this is also helpful.

89
00:04:20.240 --> 00:04:21.490
Now I'll quickly reload here

90
00:04:21.490 --> 00:04:25.390
since I'm prompted for that but that's now the first step.

91
00:04:25.390 --> 00:04:27.280
And then there's one last extension,

92
00:04:27.280 --> 00:04:29.130
which you can also install

93
00:04:29.130 --> 00:04:31.640
and that's the material icon extension.

94
00:04:31.640 --> 00:04:34.280
Now this is purely visual,

95
00:04:34.280 --> 00:04:36.410
but I'm using it throughout this course.

96
00:04:36.410 --> 00:04:39.270
It changes the file icons in our project.

97
00:04:39.270 --> 00:04:40.690
So I will install it.

98
00:04:40.690 --> 00:04:44.210
And then after installing it, choose adhere to set it.

99
00:04:44.210 --> 00:04:47.610
And this is just cosmetics. It's not required.

100
00:04:47.610 --> 00:04:51.203
But I like to look up the file icons this gives me.

101
00:04:52.710 --> 00:04:55.890
Okay, now we've got all these extensions installed.

102
00:04:55.890 --> 00:04:59.900
Now we can go here to the explorer and open a new folder,

103
00:04:59.900 --> 00:05:03.220
open a new project into Visual studio code

104
00:05:03.220 --> 00:05:05.600
so that we can edit it here.

105
00:05:05.600 --> 00:05:08.820
And here I'm simply picking that first app folder,

106
00:05:08.820 --> 00:05:13.090
which I created a second ago with Flutter create

107
00:05:13.090 --> 00:05:16.000
and open that here in Visual studio code.

108
00:05:16.000 --> 00:05:17.850
I'm opening the entire folder.

109
00:05:17.850 --> 00:05:19.460
I'm not selecting the files in there,

110
00:05:19.460 --> 00:05:22.260
but the entire folder and click open.

111
00:05:22.260 --> 00:05:26.533
And this will now give me this project set up here.

112
00:05:27.870 --> 00:05:32.140
Now the exact files and folders you might be getting

113
00:05:32.140 --> 00:05:35.170
could differ a little bit over time,

114
00:05:35.170 --> 00:05:37.070
but you should have a lib folder,

115
00:05:37.070 --> 00:05:40.260
you should have an Android and an iOS folder

116
00:05:40.260 --> 00:05:42.510
since we are on MacOS here.

117
00:05:42.510 --> 00:05:43.970
You should have a test folder,

118
00:05:43.970 --> 00:05:46.620
you should have a pubspec backward yaml file,

119
00:05:46.620 --> 00:05:49.243
and then you are pretty much good to go.

120
00:05:50.350 --> 00:05:53.840
Now since the exact folder structure

121
00:05:53.840 --> 00:05:56.340
and also the starting project you get

122
00:05:56.340 --> 00:06:01.340
can differ over time, attached you find my pubspec.yml file

123
00:06:01.860 --> 00:06:04.470
and my main.dart file.

124
00:06:04.470 --> 00:06:07.100
And you should use these attached files

125
00:06:07.100 --> 00:06:11.269
to replace your main.dart file into lip folder with mine

126
00:06:11.269 --> 00:06:15.930
and delete any other Dart files you might have in there

127
00:06:15.930 --> 00:06:18.940
if you have more than just main.dart.

128
00:06:18.940 --> 00:06:22.310
Delete anything else so that you have just a lip folder

129
00:06:22.310 --> 00:06:26.370
with my attached main.dart file in there.

130
00:06:26.370 --> 00:06:30.500
And replace your pubspec.yml file with mine

131
00:06:30.500 --> 00:06:33.097
simply to make following along with this course

132
00:06:33.097 --> 00:06:35.453
and this lecture much easier.

133
00:06:37.670 --> 00:06:40.760
Now I will walk you through these folders and files

134
00:06:40.760 --> 00:06:43.690
and what they do in the next course section.

135
00:06:43.690 --> 00:06:46.230
So for the moment we'll just take them for granted

136
00:06:46.230 --> 00:06:47.520
and ignore them.

137
00:06:47.520 --> 00:06:50.060
I can say that the pubspec.yml file

138
00:06:50.060 --> 00:06:53.740
is an important configuration file for our project

139
00:06:53.740 --> 00:06:57.060
and the lib folder holds the main source code

140
00:06:57.060 --> 00:06:58.120
for our project.

141
00:06:58.120 --> 00:06:59.390
So instead lib folder

142
00:06:59.390 --> 00:07:01.773
in which we will write our Flutter code.

143
00:07:02.840 --> 00:07:05.440
But I don't wanna dive too much into that right now,

144
00:07:05.440 --> 00:07:07.230
we'll do that in the next section,

145
00:07:07.230 --> 00:07:10.630
instead I now wanna start this Flutter project

146
00:07:10.630 --> 00:07:11.970
on an emulator

147
00:07:11.970 --> 00:07:14.803
so that we can see this Flutter app in action.

148
00:07:16.490 --> 00:07:20.990
And for this, what you can do is in Visual studio code,

149
00:07:20.990 --> 00:07:24.840
go to terminal new terminal here,

150
00:07:24.840 --> 00:07:28.170
to open your regular system terminal,

151
00:07:28.170 --> 00:07:31.630
but integrated into this project here,

152
00:07:31.630 --> 00:07:34.170
integrated into Visual studio code.

153
00:07:34.170 --> 00:07:37.630
Which is good because that means you can have your code

154
00:07:37.630 --> 00:07:40.373
and this terminal on the same screen.

155
00:07:42.780 --> 00:07:46.320
And then here in this terminal, what you can do

156
00:07:46.320 --> 00:07:50.120
to run this project is you can run Flutter run.

157
00:07:50.120 --> 00:07:52.500
But, before you do that,

158
00:07:52.500 --> 00:07:55.470
you need to make sure that you have an emulator

159
00:07:55.470 --> 00:07:56.850
up and running.

160
00:07:56.850 --> 00:08:01.850
And that could be the iOS emulator or the Android emulator.

161
00:08:03.560 --> 00:08:06.350
Now here I'll go for the Android emulator

162
00:08:06.350 --> 00:08:08.650
since I will use the Android emulator

163
00:08:08.650 --> 00:08:10.570
for the majority of this course,

164
00:08:10.570 --> 00:08:14.450
since a windows students can only build for Android

165
00:08:14.450 --> 00:08:16.660
and hence I wanna use the emulator

166
00:08:16.660 --> 00:08:18.820
all the students can use here.

167
00:08:18.820 --> 00:08:20.840
You could also use iOS,

168
00:08:20.840 --> 00:08:22.810
but if you're facing any problems there,

169
00:08:22.810 --> 00:08:25.180
ignore them for now, later in the course

170
00:08:25.180 --> 00:08:29.000
I will in detail again, show you how to configure X code

171
00:08:29.000 --> 00:08:32.460
and run your Flutter app on a real iOS device

172
00:08:32.460 --> 00:08:35.100
and on an iOS simulator.

173
00:08:35.100 --> 00:08:37.870
So for the moment I'll use Android here.

174
00:08:37.870 --> 00:08:42.409
And hence in Android studio, open that ABD manager,

175
00:08:42.409 --> 00:08:45.600
as we learned it in the previous course lecture,

176
00:08:45.600 --> 00:08:50.233
and then start that emulator that I created there again,

177
00:08:51.110 --> 00:08:54.720
so that I have this Android emulator up and running,

178
00:08:54.720 --> 00:08:57.430
which I use for testing my Android app,

179
00:08:57.430 --> 00:08:59.283
my Flutter app on Android.

180
00:09:00.330 --> 00:09:03.010
Here it is starting up.

181
00:09:03.010 --> 00:09:04.963
Let me close this here.

182
00:09:05.940 --> 00:09:09.510
And now that the Android emulator is up and running

183
00:09:09.510 --> 00:09:10.423
for me here,

184
00:09:11.330 --> 00:09:16.330
back here in Visual studio code in this integrated terminal,

185
00:09:16.640 --> 00:09:19.210
we can run Flutter run.

186
00:09:19.210 --> 00:09:21.970
And what this should do normally

187
00:09:21.970 --> 00:09:26.750
is it should now convert this Flutter project

188
00:09:26.750 --> 00:09:31.750
into an Android app and start it on the Android emulator.

189
00:09:32.190 --> 00:09:34.700
It won't do that if you don't have an emulator

190
00:09:34.700 --> 00:09:35.600
up and running,

191
00:09:35.600 --> 00:09:39.380
then it might try to start this as a web application,

192
00:09:39.380 --> 00:09:42.700
but we're not focusing on web applications in this course.

193
00:09:42.700 --> 00:09:45.930
So really make sure you have your Android emulator

194
00:09:45.930 --> 00:09:46.783
up and running.

195
00:09:47.820 --> 00:09:51.540
Now, the first time you start this, it can take a while

196
00:09:51.540 --> 00:09:55.600
because it's going through that complete build process.

197
00:09:55.600 --> 00:09:58.650
It's converting your Flutter code to machine code

198
00:09:58.650 --> 00:10:01.220
and building it as an Android app.

199
00:10:01.220 --> 00:10:04.303
Under the hood it's using Android studio for that

200
00:10:04.303 --> 00:10:06.160
and therefore the first time you run this,

201
00:10:06.160 --> 00:10:08.390
this can take a while.

202
00:10:08.390 --> 00:10:10.900
So let's be patient here

203
00:10:10.900 --> 00:10:14.363
and wait for this startup process to finish.

204
00:10:16.630 --> 00:10:20.960
And now it's installing that built app on the emulator.

205
00:10:20.960 --> 00:10:24.763
So here on the emulator you see that something is happening.

206
00:10:26.030 --> 00:10:27.810
And here we go now.

207
00:10:27.810 --> 00:10:30.750
This now is running and you can tell that it's running

208
00:10:30.750 --> 00:10:33.600
by the fact that I'm not getting any error here.

209
00:10:33.600 --> 00:10:36.320
That I see a couple of commands, which I can use.

210
00:10:36.320 --> 00:10:37.760
I'll come back to them later.

211
00:10:37.760 --> 00:10:41.210
And that this process didn't finish.

212
00:10:41.210 --> 00:10:44.640
I'm not back into the regular input mode again

213
00:10:44.640 --> 00:10:49.330
instead we now have this running administration mode here

214
00:10:49.330 --> 00:10:53.110
where we can administer the running application

215
00:10:53.110 --> 00:10:55.910
and I'll come back to what I mean with that in a second.

216
00:10:56.780 --> 00:10:58.560
If you have a look at the emulator,

217
00:10:58.560 --> 00:11:01.010
you should see this output here

218
00:11:01.010 --> 00:11:04.043
with that starting project I gave to you.

219
00:11:05.960 --> 00:11:08.710
And here you got this button, which you can click.

220
00:11:08.710 --> 00:11:10.760
And if you do click this button here,

221
00:11:10.760 --> 00:11:13.910
you have this counter, that increments.

222
00:11:13.910 --> 00:11:16.610
It might be a bit slow initially, but no worries

223
00:11:16.610 --> 00:11:18.440
that's not Flutter in general,

224
00:11:18.440 --> 00:11:21.060
but this emulator can be a bit slow

225
00:11:21.060 --> 00:11:22.920
also depending on your hardware.

226
00:11:22.920 --> 00:11:25.670
And since I'm recording my screen whilst using it,

227
00:11:25.670 --> 00:11:28.630
it's especially not extremely fast.

228
00:11:28.630 --> 00:11:30.420
But you shouldn't be able to interact here.

229
00:11:30.420 --> 00:11:33.600
And this is now our first Flutter app

230
00:11:33.600 --> 00:11:37.850
built as an Android app, running on an Android phone.

231
00:11:37.850 --> 00:11:40.993
A virtual one but still an Android phone.

232
00:11:41.870 --> 00:11:45.580
And the code for that app is here in main.dart.

233
00:11:45.580 --> 00:11:47.960
Now again, we'll dive into that code and understand it

234
00:11:47.960 --> 00:11:51.520
through out course, starting in the next core section.

235
00:11:51.520 --> 00:11:53.560
But in the end here we have code

236
00:11:53.560 --> 00:11:55.960
for rendering this user interface,

237
00:11:55.960 --> 00:11:59.270
for rendering a couple of those so-called widgets

238
00:11:59.270 --> 00:12:02.963
on this user interface, and for managing that counter.

239
00:12:04.320 --> 00:12:07.270
Now what's nice about the development experience you get

240
00:12:07.270 --> 00:12:11.040
with Flutter, is that after this initial start here,

241
00:12:11.040 --> 00:12:14.110
you don't have to stop this running process

242
00:12:14.110 --> 00:12:16.140
and run Flutter run again,

243
00:12:16.140 --> 00:12:18.850
whenever you change anything in your code.

244
00:12:18.850 --> 00:12:22.910
But instead you can make code changes and reload,

245
00:12:22.910 --> 00:12:24.890
hot reload, as it's called,

246
00:12:24.890 --> 00:12:28.560
that running application to see changes immediately.

247
00:12:28.560 --> 00:12:32.100
For example, let's say here in line 58,

248
00:12:32.100 --> 00:12:33.960
we wanna change counter

249
00:12:33.960 --> 00:12:38.040
to set it equal to counter plus two.

250
00:12:38.040 --> 00:12:40.700
You don't need to fully understand the code yet,

251
00:12:40.700 --> 00:12:42.870
but what this will do is it will make sure

252
00:12:42.870 --> 00:12:44.590
that whenever we click the button,

253
00:12:44.590 --> 00:12:47.080
the counter is not incremented by one,

254
00:12:47.080 --> 00:12:49.053
but instead increased by two.

255
00:12:50.110 --> 00:12:52.360
If you do that and you save the file

256
00:12:52.360 --> 00:12:57.000
by pressing command safe or using file safe,

257
00:12:57.000 --> 00:13:00.584
then right now, it still increments by one

258
00:13:00.584 --> 00:13:02.223
if I clicked the button.

259
00:13:03.170 --> 00:13:06.300
But here in this terminal,

260
00:13:06.300 --> 00:13:09.320
you see that we got a couple of commands we can issue.

261
00:13:09.320 --> 00:13:12.160
And one of them is the hot reload command,

262
00:13:12.160 --> 00:13:15.060
which simply means that our updated code

263
00:13:15.060 --> 00:13:17.840
will be injected into this running app,

264
00:13:17.840 --> 00:13:20.230
which is nice during development.

265
00:13:20.230 --> 00:13:25.230
So by pressing R once it will perform that hot reload

266
00:13:25.770 --> 00:13:28.700
and now you see I still have my old counter here,

267
00:13:28.700 --> 00:13:32.550
but if I now click plus it's increased by two.

268
00:13:32.550 --> 00:13:36.390
So that code change was injected into the running app

269
00:13:36.390 --> 00:13:38.970
and that makes development super efficient

270
00:13:38.970 --> 00:13:41.310
because we don't have to stop everything

271
00:13:41.310 --> 00:13:43.150
and restart the entire app

272
00:13:43.150 --> 00:13:46.083
just because we made one tiny code change.

273
00:13:46.990 --> 00:13:50.220
Now if this breaks for some reason or doesn't work,

274
00:13:50.220 --> 00:13:53.090
you can always also do a full restart

275
00:13:53.090 --> 00:13:58.090
by pressing shift + R and then it will restart the app.

276
00:13:58.750 --> 00:14:01.810
The counter will there for reset to zero here,

277
00:14:01.810 --> 00:14:05.330
but you still don't need to quit the entire process

278
00:14:05.330 --> 00:14:07.390
and run Flutter run again,

279
00:14:07.390 --> 00:14:09.580
instead of just to restart at the app

280
00:14:09.580 --> 00:14:11.263
based on the latest code now.

281
00:14:12.610 --> 00:14:15.710
And that's how our development flow could look like

282
00:14:15.710 --> 00:14:18.023
when using flutter run in the terminal.

283
00:14:18.930 --> 00:14:20.850
But I'm saying could look like

284
00:14:20.850 --> 00:14:23.460
because of with Visual studio code

285
00:14:23.460 --> 00:14:25.860
and the flatter extension installed there,

286
00:14:25.860 --> 00:14:28.890
we don't even have to use this approach.

287
00:14:28.890 --> 00:14:31.830
Instead I'll quit this running process here

288
00:14:31.830 --> 00:14:36.520
by pressing Ctrl + C here in that terminal.

289
00:14:36.520 --> 00:14:39.040
And I'll close that terminal.

290
00:14:39.040 --> 00:14:42.440
Instead of using Flutter run there, which you could,

291
00:14:42.440 --> 00:14:47.140
I'm going to go to my menu here and then run.

292
00:14:47.140 --> 00:14:50.410
And then here we can start debugging this app

293
00:14:50.410 --> 00:14:52.720
or run it without debugging.

294
00:14:52.720 --> 00:14:54.090
And that's what all do here.

295
00:14:54.090 --> 00:14:56.323
I'll choose run without debugging.

296
00:14:57.960 --> 00:15:00.370
And what this will do for me now here,

297
00:15:00.370 --> 00:15:05.370
is it will again start this Flutter app on this emulator,

298
00:15:05.630 --> 00:15:10.150
but it will execute Flutter run behind the scenes.

299
00:15:10.150 --> 00:15:13.190
Now for you it might first of all prompt you

300
00:15:13.190 --> 00:15:15.570
how you wanna run this application.

301
00:15:15.570 --> 00:15:17.990
It might show a little dropdown

302
00:15:17.990 --> 00:15:21.850
where you can then choose Dart as an option

303
00:15:21.850 --> 00:15:23.560
or Flutter and Dart.

304
00:15:23.560 --> 00:15:27.660
So choose that option if you are prompted to choose

305
00:15:27.660 --> 00:15:30.920
how to execute this app, choose Dart and Flutter,

306
00:15:30.920 --> 00:15:34.653
or just Dart in the dropdown you might be getting there.

307
00:15:36.520 --> 00:15:39.410
Once this is running you also might get this popup

308
00:15:39.410 --> 00:15:41.410
regarding the Dart dev tools

309
00:15:41.410 --> 00:15:43.500
and here we'll dive into them later.

310
00:15:43.500 --> 00:15:45.653
I'll choose not now for now.

311
00:15:46.970 --> 00:15:49.810
Now we also got this terminal down there,

312
00:15:49.810 --> 00:15:53.210
but it's actually not the same terminal as before.

313
00:15:53.210 --> 00:15:56.670
It's just a debug console that locks some warnings

314
00:15:56.670 --> 00:16:01.330
or some information messages to us that we might be getting.

315
00:16:01.330 --> 00:16:05.410
But we now got this part here with some controls

316
00:16:05.410 --> 00:16:09.880
that we can use to control the running app.

317
00:16:09.880 --> 00:16:13.030
For example here, we got this flash,

318
00:16:13.030 --> 00:16:16.010
which is now our hot reload button.

319
00:16:16.010 --> 00:16:18.200
So instead of pressing R,

320
00:16:18.200 --> 00:16:21.310
we can click this button to hot reload.

321
00:16:21.310 --> 00:16:22.850
But we don't even have to do that

322
00:16:22.850 --> 00:16:24.910
if I change my code and save this,

323
00:16:24.910 --> 00:16:27.960
this will actually be issued automatically.

324
00:16:27.960 --> 00:16:31.310
So now Flutter will watch my code changes here

325
00:16:31.310 --> 00:16:34.300
and whenever I save my code after changing it,

326
00:16:34.300 --> 00:16:37.850
it will automatically trigger a hot reload.

327
00:16:37.850 --> 00:16:42.720
So then I automatically get this new code in effect here.

328
00:16:42.720 --> 00:16:45.800
So we could manually trigger it by clicking the flash,

329
00:16:45.800 --> 00:16:47.500
but we don't have to.

330
00:16:47.500 --> 00:16:49.840
If we wanna do a full hot restart,

331
00:16:49.840 --> 00:16:54.840
we can click this green arrow here and then do that restart,

332
00:16:55.210 --> 00:16:59.190
which we previously did by pressing shift + R.

333
00:16:59.190 --> 00:17:00.750
And if we're done for the moment,

334
00:17:00.750 --> 00:17:04.550
we can press this stop icon to stop running this,

335
00:17:04.550 --> 00:17:06.290
and then it will terminate this.

336
00:17:06.290 --> 00:17:10.170
We can close this console and we can always rerun by again,

337
00:17:10.170 --> 00:17:12.653
choosing run, run without debugging.

338
00:17:13.869 --> 00:17:17.109
So that's how we will now manage and run this Flutter app

339
00:17:17.109 --> 00:17:18.660
for the rest of this course,

340
00:17:18.660 --> 00:17:21.589
since this simply is a bit more convenient

341
00:17:21.589 --> 00:17:23.670
than having to use Flutter run

342
00:17:23.670 --> 00:17:26.069
and having to hot reload manually.

343
00:17:26.069 --> 00:17:27.050
That's why I'm using

344
00:17:27.050 --> 00:17:29.853
this FlUtter extension driven approach instead.

345
00:17:31.180 --> 00:17:34.250
Now with that we have the development set up we need

346
00:17:34.250 --> 00:17:38.180
for MacOS for building Flutter projects

347
00:17:38.180 --> 00:17:41.380
as apps for iOS and Android.

348
00:17:41.380 --> 00:17:43.160
And then for now and the next lectures

349
00:17:43.160 --> 00:17:45.710
I'll show the same approach for windows.

350
00:17:45.710 --> 00:17:49.800
Of course, you can skip that if you are only using MacOS

351
00:17:49.800 --> 00:17:51.780
and then in the next core section,

352
00:17:51.780 --> 00:17:54.040
I will then dive into that code a bit more,

353
00:17:54.040 --> 00:17:56.330
and we're going to learn how Flutter and Dart

354
00:17:56.330 --> 00:17:58.330
works from the ground up.

355
00:17:58.330 --> 00:18:00.900
Before we do that though, in the next lectures,

356
00:18:00.900 --> 00:18:02.450
after the windows set up,

357
00:18:02.450 --> 00:18:05.560
I'll walk you through what you can expect from the course,

358
00:18:05.560 --> 00:18:09.223
and through other aspects of working with Flutter as well.

