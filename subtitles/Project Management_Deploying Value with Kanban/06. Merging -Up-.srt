1
00:00:00,940 --> 00:00:02,780
Okay, time to merge up.

2
00:00:02,780 --> 00:00:07,240
It's time to get even a little more disciplined.

3
00:00:07,240 --> 00:00:09,770
Let's do a definition of a pull request.

4
00:00:09,770 --> 00:00:13,170
If you have code you want to put back into a source code repository's

5
00:00:13,170 --> 00:00:16,070
mainline or branch, you will issue a pull request.

6
00:00:16,070 --> 00:00:18,240
This is also known as a merge request.

7
00:00:18,240 --> 00:00:22,090
So it got the name pull request because the dev requests that the

8
00:00:22,090 --> 00:00:25,790
owner of the target codebase pull the dev's source code and merge

9
00:00:25,790 --> 00:00:27,680
it back into the target codebase.

10
00:00:27,680 --> 00:00:32,140
And I am also calling this merging up.

11
00:00:32,140 --> 00:00:34,590
Merging your dev branch back to mainline.

12
00:00:34,590 --> 00:00:37,630
Let's do our timeline again so we can see what is happening.

13
00:00:37,630 --> 00:00:38,080
Okay,

14
00:00:38,080 --> 00:00:41,170
so you are the developer, and you have been assigned the branch work item

15
00:00:41,170 --> 00:00:45,830
495.1, and it is branched off of the parent branch release 4,

16
00:00:45,830 --> 00:00:48,240
which, of course, was branched off of the mainline.

17
00:00:48,240 --> 00:00:48,800
Remember,

18
00:00:48,800 --> 00:00:52,650
I mentioned earlier that all dev branches may be best branched off of the

19
00:00:52,650 --> 00:00:56,340
release branches between the mainline and the developer's branch.

20
00:00:56,340 --> 00:00:59,010
That is what I like, and you may like something else as well.

21
00:00:59,010 --> 00:00:59,970
On day two,

22
00:00:59,970 --> 00:01:02,890
the parent branch release 4 was updated by the owner of

23
00:01:02,890 --> 00:01:05,310
release 4 branch. And on day three,

24
00:01:05,310 --> 00:01:08,500
you merged release 4, validated that everything was good,

25
00:01:08,500 --> 00:01:11,240
made a build, and continued coding. Perfect.

26
00:01:11,240 --> 00:01:14,990
Then on day six, your code's complete, and you issue a pull request,

27
00:01:14,990 --> 00:01:17,540
which informs the owner of the parent branch.

28
00:01:17,540 --> 00:01:17,960
In fact,

29
00:01:17,960 --> 00:01:20,570
the pull request may inform many people based on your

30
00:01:20,570 --> 00:01:23,050
pull request policies. On day six,

31
00:01:23,050 --> 00:01:26,970
or sometimes soon thereafter, their parent branch owner then takes the

32
00:01:26,970 --> 00:01:29,740
action and merges your work into the parent branch.

33
00:01:29,740 --> 00:01:35,020
If all is good, you move on and pull new work into your Kanban value stream step.

34
00:01:35,020 --> 00:01:36,530
Or, if there are issues,

35
00:01:36,530 --> 00:01:38,990
the parent branch owner will certainly let you know,

36
00:01:38,990 --> 00:01:42,540
and you'll correct any issues.

37
00:01:42,540 --> 00:01:46,970
Here are a few merging up rules of thumb. When your work item is validated,

38
00:01:46,970 --> 00:01:50,430
that is it has passed all the Kanban done rules for the validation

39
00:01:50,430 --> 00:01:54,540
step, then it is now a candidate to be merged up and back into the

40
00:01:54,540 --> 00:01:56,840
target branch from where it originated.

41
00:01:56,840 --> 00:01:59,420
So you make a pull request from within your tool.

42
00:01:59,420 --> 00:02:00,590
A pull request, of course,

43
00:02:00,590 --> 00:02:04,850
is asking someone, the branch owner, lead, or a PM to merge your completed

44
00:02:04,850 --> 00:02:07,810
work back into the codebase from where you branched from.

45
00:02:07,810 --> 00:02:12,100
It could be the mainline, but it's likely a release branch like in our examples.

46
00:02:12,100 --> 00:02:15,030
A pull request means that you're code files are a candidate. That

47
00:02:15,030 --> 00:02:17,980
is they're all ready to be merged up to the code stream from where

48
00:02:17,980 --> 00:02:19,920
you branched from, the parent branch.

49
00:02:19,920 --> 00:02:22,150
Pull requests are made to the branch owner.

50
00:02:22,150 --> 00:02:24,140
All branches, and especially the mainline,

51
00:02:24,140 --> 00:02:26,440
are major releases, must have an owner.

52
00:02:26,440 --> 00:02:29,040
I think every branch has an owner, end of story.

53
00:02:29,040 --> 00:02:31,220
The owner inspects the changes usually with

54
00:02:31,220 --> 00:02:33,300
highlighting syntax and diffs, you know,

55
00:02:33,300 --> 00:02:35,760
old version and new version side by side,

56
00:02:35,760 --> 00:02:39,450
maybe follows a checklist that must be completed, and only updates the

57
00:02:39,450 --> 00:02:42,710
files such as changes, added files, or deleted files,

58
00:02:42,710 --> 00:02:45,200
and then they are committed to the target branch.

59
00:02:45,200 --> 00:02:49,400
The candidate branch is rejected or approved. And of course, rejected means that

60
00:02:49,400 --> 00:02:52,310
the owner sends it back to the developer to fix and repair.

61
00:02:52,310 --> 00:02:56,270
After the developer repairs the work, they will issue another pull request.

62
00:02:56,270 --> 00:02:57,060
If approved,

63
00:02:57,060 --> 00:03:00,270
you're done, and the pull coordinator or owner does

64
00:03:00,270 --> 00:03:02,150
the merge into the target branch.

65
00:03:02,150 --> 00:03:04,410
If later the merge code is problematic,

66
00:03:04,410 --> 00:03:07,850
some systems allow you to undo or revert with no harm

67
00:03:07,850 --> 00:03:10,240
to the dev stream or parent stream, if you will,

68
00:03:10,240 --> 00:03:15,000
and you might want to be sure that your version control system can in fact do that.

