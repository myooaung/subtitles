WEBVTT
1
00:00:05.550 --> 00:00:10.080
Selamat datang kembali di kuliah ini kita akan membahas solusi untuk pekerjaan rumah iterators dan

2
00:00:10.710 --> 00:00:15.090
generator karena solusi itu sendiri tidak memerlukan banyak baris kode kita hanya akan menelusuri

3
00:00:15.100 --> 00:00:17.350
solusi notebook dan menjelaskan solusi di sana.

4
00:00:17.610 --> 00:00:19.670
Mari kita mulai, OK.

5
00:00:19.690 --> 00:00:22.220
Di sini saya di bawah folder generator python.

6
00:00:22.210 --> 00:00:25.370
Ada iterators yang dihasilkan file solusi pekerjaan rumah.

7
00:00:25.780 --> 00:00:27.020
Mari kita bahas satu masalah.

8
00:00:27.040 --> 00:00:30.900
Sedangkan Anda membuat generator yang menghasilkan kuadrat angka hingga akhir.

9
00:00:31.150 --> 00:00:35.140
Kami benar-benar melakukan contoh yang sangat mirip dalam kuliah untuk generator.

10
00:00:35.170 --> 00:00:41.380
Yang harus Anda lakukan adalah mengatakan untuk saya dalam kisaran n dan kemudian Anda ingin menghasilkan kuadrat I.

11
00:00:41.590 --> 00:00:46.480
Dan kemudian Anda bisa membuat generator dan mencetak angka-angka kuadrat itu.

12
00:00:46.510 --> 00:00:52.360
Masalah 2 adalah masalah yang sangat mirip kecuali kami ingin membuat generator untuk angka acak antara

13
00:00:52.360 --> 00:00:54.320
beberapa angka rendah dan tinggi.

14
00:00:54.460 --> 00:00:59.380
Dan dalam hal ini yang Anda lakukan adalah alih-alih menghasilkan kuadrat dari angka yang

15
00:00:59.380 --> 00:01:06.050
kami lakukan adalah Anda mengambil keuntungan dari fungsi bilangan bulat Rantz acak ini dan kemudian menghasilkan beberapa titik acak

16
00:01:06.070 --> 00:01:11.830
berlari dan kemudian melewati rendah dan tinggi karena ingat fungsi ini sendiri adalah akan menghasilkan angka dan

17
00:01:11.830 --> 00:01:16.690
kemudian kita akan lakukan daripada menghasilkannya untuk membuat generator dari seluruh fungsi ini.

18
00:01:17.750 --> 00:01:20.290
Dan di sini kita memiliki angka acak yang dihasilkan.

19
00:01:21.840 --> 00:01:25.700
Masalah 3 adalah menggunakan fungsi mengkonversi string di bawah ini menjadi iterator.

20
00:01:25.740 --> 00:01:29.210
Kami benar-benar melakukan hal yang sama persis di kuliah untuk ini.

21
00:01:29.220 --> 00:01:33.720
Tapi yang harus Anda lakukan adalah menyapa dan kemudian meneruskan ke seluruh fungsi dan hanya itu.

22
00:01:33.720 --> 00:01:41.160
Anda kemudian dapat memanggil berikutnya pada S dan itu berubah dari menjadi iterable ke masalah iterator yang dipaksa untuk menjelaskan use case untuk generator

23
00:01:41.160 --> 00:01:45.090
menggunakan pernyataan hasil di mana Anda tidak ingin menggunakan fungsi normal dan pada

24
00:01:45.480 --> 00:01:49.860
dasarnya adalah hal yang pernah saya lakukan. mengatakan selama kuliah adalah bahwa output memiliki potensi

25
00:01:49.860 --> 00:01:53.370
mengambil sejumlah besar memori dan Anda hanya berniat untuk mengulanginya.

26
00:01:53.370 --> 00:01:58.390
Anda tidak ingin semuanya sekaligus maka itu masuk akal untuk menggunakan generator dan kemudian kredit

27
00:01:58.410 --> 00:02:01.740
tambahan dapatkah Anda menjelaskan apa yang dimaksud dengan bhalo.

28
00:02:02.020 --> 00:02:07.300
Jadi kami sebenarnya tidak membahas hal ini dalam perkuliahan tetapi jika Anda memahami generator Google ini persis seperti

29
00:02:07.300 --> 00:02:07.870
ini.

30
00:02:07.900 --> 00:02:13.080
Ini seperti pemahaman daftar tetapi bukannya benar-benar membuat daftar di memori itu akan menghasilkannya.

31
00:02:13.090 --> 00:02:19.630
Jadi yang perlu Anda lakukan di sini adalah mengganti tanda kurung siku untuk pangeran dan Anda mengubah pemahaman daftar Anda

32
00:02:19.750 --> 00:02:24.720
menjadi generator sehingga Anda dapat beralih generator dan tidak menyimpan semua ini dalam memori.

33
00:02:25.200 --> 00:02:25.590
BAIK.

34
00:02:25.630 --> 00:02:29.440
Semoga yang bermanfaat bagi Anda memiliki pertanyaan, jangan ragu untuk mengirimkan formulir county.

35
00:02:29.440 --> 00:02:30.460
Sampai jumpa di kuliah berikutnya.
