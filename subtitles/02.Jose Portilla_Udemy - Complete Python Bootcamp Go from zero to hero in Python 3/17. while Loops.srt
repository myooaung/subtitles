1
1

00:00:01,675  -->  00:00:05,332
<v ->Hello everyone, and welcome to the while loops lecture.</v>
2

2

00:00:05,332  -->  00:00:07,482
What we're gonna be learning about in this lecture
3

3

00:00:07,482  -->  00:00:09,709
is how to use the while statement in Python
4

4

00:00:09,709  -->  00:00:11,151
and it gonna be, it's actually
5

5

00:00:11,151  -->  00:00:13,770
one of the most general ways to perform iteration.
6

6

00:00:13,770  -->  00:00:15,619
And what happens is the while statement
7

7

00:00:15,619  -->  00:00:18,266
will repeatedly execute a single statement
8

8

00:00:18,266  -->  00:00:21,409
or a group of statements until a true value occurs.
9

9

00:00:21,409  -->  00:00:24,326
So you can see here, if we zoom in,
10

10

00:00:25,692  -->  00:00:28,012
that the general format for a while loop
11

11

00:00:28,012  -->  00:00:32,827
is you have while, then some sort of test condition
12

12

00:00:32,827  -->  00:00:37,553
and then as long as that test condition is still being met,
13

13

00:00:37,553  -->  00:00:40,667
then you have whatever code is executed.
14

14

00:00:40,667  -->  00:00:42,771
And then if you want, you can have an else
15

15

00:00:42,771  -->  00:00:45,053
to have have a final code statement.
16

16

00:00:45,053  -->  00:00:47,397
What we're gonna be doing throughout this lecture
17

17

00:00:47,397  -->  00:00:49,815
is just going through some of these examples.
18

18

00:00:49,815  -->  00:00:53,008
So you can see here I have the Jupyter Notebook open
19

19

00:00:53,008  -->  00:00:56,169
and we're gonna be going through these examples
20

20

00:00:56,169  -->  00:00:58,348
and then we're also going to be learning about the terms
21

21

00:00:58,348  -->  00:01:00,779
break, continue and pass.
22

22

00:01:00,779  -->  00:01:01,612
Then we're gonna be working
23

23

00:01:01,612  -->  00:01:03,584
through some more examples there.
24

24

00:01:03,584  -->  00:01:04,851
Okay, great.
25

25

00:01:04,851  -->  00:01:06,809
Let's go ahead and check it out.
26

26

00:01:06,809  -->  00:01:10,559
We're gonna hop over to the Jupyter Notebook.
27

27

00:01:12,550  -->  00:01:14,954
Now we're at the Jupyter Notebook for the while loops
28

28

00:01:14,954  -->  00:01:16,184
and let's go ahead a look at
29

29

00:01:16,184  -->  00:01:19,043
a few simple while loops in action.
30

30

00:01:19,043  -->  00:01:23,930
I'm gonna say, make a variable called x = 0.
31

31

00:01:23,930  -->  00:01:26,019
And then you'll notice the formatting looks pretty similar
32

32

00:01:26,019  -->  00:01:28,881
to a for loop except we have a while statement.
33

33

00:01:28,881  -->  00:01:33,557
And I'm gonna say while, notice the syntax highlighting,
34

34

00:01:33,557  -->  00:01:34,974
x is less than 10
35

35

00:01:38,131  -->  00:01:40,267
and here we can say, do some code.
36

36

00:01:40,267  -->  00:01:43,046
So if I just said right now,
37

37

00:01:43,046  -->  00:01:43,879
print
38

38

00:01:45,474  -->  00:01:46,307
'hello!',
39

39

00:01:47,367  -->  00:01:50,337
and clicked enter here, this loop would go on forever
40

40

00:01:50,337  -->  00:01:52,263
'cause nothing is affecting x
41

41

00:01:52,263  -->  00:01:56,342
and x will always be less than 10 as long as x is 0.
42

42

00:01:56,342  -->  00:01:59,689
So I'm not gonna actually run that.
43

43

00:01:59,689  -->  00:02:02,158
What I'm gonna do is say,
44

44

00:02:02,158  -->  00:02:03,825
I'm gonna say, print
45

45

00:02:04,834  -->  00:02:05,667
x is
46

46

00:02:07,083  -->  00:02:07,916
currently,
47

47

00:02:09,551  -->  00:02:10,801
space, and then
48

48

00:02:12,560  -->  00:02:15,696
I'm going to print the value of x.
49

49

00:02:15,696  -->  00:02:18,279
And then what I'm gonna say is,
50

50

00:02:19,570  -->  00:02:21,237
I'm gonna add 1 to x
51

51

00:02:22,192  -->  00:02:23,541
for every instance in that loop.
52

52

00:02:23,541  -->  00:02:26,129
So let's go ahead and see what happens.
53

53

00:02:26,129  -->  00:02:29,054
If you notice, while x was less than 10,
54

54

00:02:29,054  -->  00:02:33,356
I said, okay, print this statement, x is currently,
55

55

00:02:33,356  -->  00:02:35,343
and then we printed x.
56

56

00:02:35,343  -->  00:02:39,043
And then the next step was x, add a 1 to it.
57

57

00:02:39,043  -->  00:02:40,807
So after that it became 1.
58

58

00:02:40,807  -->  00:02:43,192
And then, was this statement still true?
59

59

00:02:43,192  -->  00:02:44,025
Yes.
60

60

00:02:44,025  -->  00:02:45,851
At 1, is still less than 10.
61

61

00:02:45,851  -->  00:02:49,110
So this while loop basically keeps performing
62

62

00:02:49,110  -->  00:02:51,432
until the condition is met.
63

63

00:02:51,432  -->  00:02:55,599
And in this case once x was greater than or equal to 10
64

64

00:02:56,902  -->  00:02:59,812
or basically no longer less than 10,
65

65

00:02:59,812  -->  00:03:01,805
this loop stopped.
66

66

00:03:01,805  -->  00:03:02,638
Okay.
67

67

00:03:02,638  -->  00:03:05,170
So hopefully that should be pretty clear.
68

68

00:03:05,170  -->  00:03:08,083
And notice how many times the print statements occurred
69

69

00:03:08,083  -->  00:03:10,108
and how the while loop kept going
70

70

00:03:10,108  -->  00:03:12,279
until that true condition was met
71

71

00:03:12,279  -->  00:03:14,147
which occurred once that x equals 10.
72

72

00:03:14,147  -->  00:03:16,634
So you can see, it actually stops at that 9
73

73

00:03:16,634  -->  00:03:21,618
because once you had 10 there, none of this code executed.
74

74

00:03:21,618  -->  00:03:23,545
So it's important to note that that occurred
75

75

00:03:23,545  -->  00:03:24,805
and the code stopped.
76

76

00:03:24,805  -->  00:03:26,862
So let's go ahead and see how we could have added
77

77

00:03:26,862  -->  00:03:28,596
an else statement to this.
78

78

00:03:28,596  -->  00:03:30,417
So I'm gonna make another cell here.
79

79

00:03:30,417  -->  00:03:33,012
I'm gonna say, x = 0.
80

80

00:03:33,012  -->  00:03:35,816
And I'm gonna say while,
81

81

00:03:35,816  -->  00:03:38,359
let's go ahead and just zoom in one more.
82

82

00:03:38,359  -->  00:03:40,026
I'm gonna say while,
83

83

00:03:41,230  -->  00:03:42,730
x is less than 10,
84

84

00:03:45,807  -->  00:03:46,890
print x is
85

85

00:03:49,959  -->  00:03:50,792
currently,
86

86

00:03:53,117  -->  00:03:53,950
comma, x
87

87

00:03:55,632  -->  00:03:59,799
and then I'm gonna say go ahead and add that 1 to it
88

88

00:04:00,850  -->  00:04:02,105
and I'm gonna have an else statement
89

89

00:04:02,105  -->  00:04:03,957
so this is gonna occur after
90

90

00:04:03,957  -->  00:04:06,173
the while statement condition is met.
91

91

00:04:06,173  -->  00:04:07,840
I'm gonna say print,
92

92

00:04:09,098  -->  00:04:10,629
All Done!
93

93

00:04:10,629  -->  00:04:13,370
So let's go ahead and run that cell and see what happens.
94

94

00:04:13,370  -->  00:04:16,796
So you'll notice we have x = 0
95

95

00:04:16,796  -->  00:04:21,035
and after I met that condition on that while loop,
96

96

00:04:21,035  -->  00:04:22,132
I did my else statement.
97

97

00:04:22,132  -->  00:04:25,139
I printed all is done, or all done.
98

98

00:04:25,139  -->  00:04:26,139
Okay, great.
99

99

00:04:27,144  -->  00:04:29,666
So hopefully this is pretty straight forward to you.
100

100

00:04:29,666  -->  00:04:32,197
Basically what we have is this while condition
101

101

00:04:32,197  -->  00:04:34,343
and the while loop will just keep running
102

102

00:04:34,343  -->  00:04:37,082
until the condition is met.
103

103

00:04:37,082  -->  00:04:38,201
All right.
104

104

00:04:38,201  -->  00:04:41,806
So now we're gonna learn about break, continue and pass.
105

105

00:04:41,806  -->  00:04:44,223
So that's gonna be the words,
106

106

00:04:47,724  -->  00:04:48,974
break, continue
107

107

00:04:50,295  -->  00:04:51,128
and pass.
108

108

00:04:52,313  -->  00:04:53,146
Break.
109

109

00:04:54,051  -->  00:04:55,345
Continue.
110

110

00:04:55,345  -->  00:04:56,354
Pass.
111

111

00:04:56,354  -->  00:04:57,221
All right.
112

112

00:04:57,221  -->  00:05:00,858
So let's go ahead and hop over to the notebook
113

113

00:05:00,858  -->  00:05:04,025
so we can explore it a little further.
114

114

00:05:06,522  -->  00:05:10,406
We can use break, continue and pass statements in our loops
115

115

00:05:10,406  -->  00:05:13,582
to add additional functionality for various cases.
116

116

00:05:13,582  -->  00:05:15,525
These three statements are defined by,
117

117

00:05:15,525  -->  00:05:16,571
first off, break.
118

118

00:05:16,571  -->  00:05:19,342
So what happens is, break, if you put that in your loop,
119

119

00:05:19,342  -->  00:05:23,574
it's gonna break out of the current closest enclosing loop.
120

120

00:05:23,574  -->  00:05:25,506
What continue is gonna do, if you type that in,
121

121

00:05:25,506  -->  00:05:30,052
it's gonna go the the top of the closest enclosing loop.
122

122

00:05:30,052  -->  00:05:32,322
And then pass does nothing at all.
123

123

00:05:32,322  -->  00:05:35,238
So when we're thinking about break and continue statements,
124

124

00:05:35,238  -->  00:05:36,613
the general format's gonna look
125

125

00:05:36,613  -->  00:05:38,122
a little something like this.
126

126

00:05:38,122  -->  00:05:42,072
You can have a while test condition and then some code
127

127

00:05:42,072  -->  00:05:46,239
and you can say, maybe, if another test condition, break.
128

128

00:05:47,419  -->  00:05:50,002
Or if another test condition, continue
129

129

00:05:50,002  -->  00:05:52,230
and then you have an else.
130

130

00:05:52,230  -->  00:05:54,257
So you'll notice the break and continue statements
131

131

00:05:54,257  -->  00:05:56,514
can appear anywhere inside the loop's body
132

132

00:05:56,514  -->  00:05:59,277
but we we'll usually put the further nested in conjunction
133

133

00:05:59,277  -->  00:06:01,469
with and if statement to perform an action
134

134

00:06:01,469  -->  00:06:03,553
based on some sort of test condition.
135

135

00:06:03,553  -->  00:06:05,494
So to explain all that, we're gonna go ahead
136

136

00:06:05,494  -->  00:06:07,659
and explore some more examples.
137

137

00:06:07,659  -->  00:06:10,055
So let's go ahead and do that.
138

138

00:06:10,055  -->  00:06:12,419
So, again, we're gonna start with that same example
139

139

00:06:12,419  -->  00:06:13,656
we've been working at.
140

140

00:06:13,656  -->  00:06:15,731
I'm gonna say x = 0
141

141

00:06:15,731  -->  00:06:18,528
and then I'm gonna say, while,
142

142

00:06:18,528  -->  00:06:20,028
x is less than 10,
143

143

00:06:22,682  -->  00:06:24,292
print
144

144

00:06:24,292  -->  00:06:25,125
x is
145

145

00:06:26,968  -->  00:06:28,385
currently, space,
146

146

00:06:29,875  -->  00:06:30,708
comma, x.
147

147

00:06:32,678  -->  00:06:34,511
And then I'm going to,
148

148

00:06:35,345  -->  00:06:37,487
I'm gonna add another print statement.
149

149

00:06:37,487  -->  00:06:39,259
I'm gonna say,
150

150

00:06:39,259  -->  00:06:40,092
x is
151

151

00:06:41,038  -->  00:06:41,871
still less
152

152

00:06:43,142  -->  00:06:43,975
than 10,
153

153

00:06:45,635  -->  00:06:46,802
adding 1 to x.
154

154

00:06:49,059  -->  00:06:51,207
And then I'm gonna do it, I'm gonna add 1 to x.
155

155

00:06:51,207  -->  00:06:53,022
So notice what's going on here.
156

156

00:06:53,022  -->  00:06:56,621
I'm saying while x is less than 10, print the current x
157

157

00:06:56,621  -->  00:06:59,231
and then also print a statement that verifies
158

158

00:06:59,231  -->  00:07:01,617
or just tells you, x is still less than 10,
159

159

00:07:01,617  -->  00:07:05,383
I'm adding one to x, and then I go ahead and add one to x.
160

160

00:07:05,383  -->  00:07:09,042
And now what I'm gonna do is add an if statement here.
161

161

00:07:09,042  -->  00:07:11,667
And what this if statement's gonna do is it's gonna say,
162

162

00:07:11,667  -->  00:07:12,500
if x
163

163

00:07:14,081  -->  00:07:15,248
is equal to 3,
164

164

00:07:17,651  -->  00:07:19,497
go ahead and print some sort of alert.
165

165

00:07:19,497  -->  00:07:21,330
So I'm gonna say, hey,
166

166

00:07:22,359  -->  00:07:23,933
x
167

167

00:07:23,933  -->  00:07:24,766
equals 3!
168

168

00:07:27,723  -->  00:07:30,234
And then I'm gonna go backspace to come back
169

169

00:07:30,234  -->  00:07:31,605
and line it up with that if
170

170

00:07:31,605  -->  00:07:33,938
and then I'm gonna say else,
171

171

00:07:35,340  -->  00:07:36,173
print
172

172

00:07:38,324  -->  00:07:39,974
continuing
173

173

00:07:39,974  -->  00:07:40,807
...
174

174

00:07:42,193  -->  00:07:45,239
And I'm gonna say continue.
175

175

00:07:45,239  -->  00:07:47,140
Okay, so let's go ahead and break this down,
176

176

00:07:47,140  -->  00:07:48,863
what's going on in this cell.
177

177

00:07:48,863  -->  00:07:53,342
I'm saying while x is less than 10, print this statement
178

178

00:07:53,342  -->  00:07:55,526
which is gonna print out your current x.
179

179

00:07:55,526  -->  00:07:58,357
Then I'm gonna say print, x is still less than 10
180

180

00:07:58,357  -->  00:08:00,891
then I'm gonna add 1 to x right here.
181

181

00:08:00,891  -->  00:08:04,697
And then I'm saying, okay, now if at that point in time,
182

182

00:08:04,697  -->  00:08:09,108
is x is equal to 3, print this statement.
183

183

00:08:09,108  -->  00:08:11,514
Else, if it's any other number that's not 3,
184

184

00:08:11,514  -->  00:08:13,305
go ahead and print continuing....,
185

185

00:08:13,305  -->  00:08:17,064
and then we continue on with this outside loop.
186

186

00:08:17,064  -->  00:08:20,699
Okay, let's go ahead and run that and see what happens.
187

187

00:08:20,699  -->  00:08:22,656
So let's take a look at the output.
188

188

00:08:22,656  -->  00:08:25,469
I print out x is currently the number,
189

189

00:08:25,469  -->  00:08:29,246
x is still less than 10, adding 1, and then continuing.
190

190

00:08:29,246  -->  00:08:33,726
And if you notice, hey, x is currently 2,
191

191

00:08:33,726  -->  00:08:36,986
x is still less than 10, adding 1 to x
192

192

00:08:36,986  -->  00:08:39,398
and at that point in time, I've added 1 to x
193

193

00:08:39,398  -->  00:08:41,545
so it's gonna say, hey, x equals 3!
194

194

00:08:41,545  -->  00:08:43,311
So you get that little alert there.
195

195

00:08:43,311  -->  00:08:46,431
And it's gonna say, hey, x is currently 3.
196

196

00:08:46,431  -->  00:08:47,938
It's still less than 10, I'm adding one,
197

197

00:08:47,938  -->  00:08:49,388
at that point it's four so it's going to
198

198

00:08:49,388  -->  00:08:51,884
go ahead and continue going.
199

199

00:08:51,884  -->  00:08:54,485
All right, so you're gonna have to note
200

200

00:08:54,485  -->  00:08:55,820
how we have that printed statement,
201

201

00:08:55,820  -->  00:08:58,774
when x is equal to 3, and then the continue being printed
202

202

00:08:58,774  -->  00:09:01,675
as we continue through that outer while loop.
203

203

00:09:01,675  -->  00:09:05,147
So let's go ahead and put a break once x is equal to 3
204

204

00:09:05,147  -->  00:09:07,657
so we can get a sense of how break works.
205

205

00:09:07,657  -->  00:09:09,381
I'm gonna go ahead and go back here
206

206

00:09:09,381  -->  00:09:13,386
and I'm gonna say, okay, put in a break statement.
207

207

00:09:13,386  -->  00:09:15,465
And remember, what the break statement does
208

208

00:09:15,465  -->  00:09:20,297
is it's gonna break that code for the outer loop.
209

209

00:09:20,297  -->  00:09:23,106
So now I'm gonna run this cell.
210

210

00:09:23,106  -->  00:09:25,759
And if you notice, once that statement's true,
211

211

00:09:25,759  -->  00:09:29,808
so hey, x is equal to 3, print this, and then break.
212

212

00:09:29,808  -->  00:09:33,241
So it stops the outer loop that it's nested in.
213

213

00:09:33,241  -->  00:09:34,791
And then you have the hey, equals 3
214

214

00:09:34,791  -->  00:09:37,898
and it doesn't continue going because of that break.
215

215

00:09:37,898  -->  00:09:40,914
So, note how the other else statement wasn't reached
216

216

00:09:40,914  -->  00:09:42,081
and continuing
217

217

00:09:43,471  -->  00:09:46,136
afterwards was never printed.
218

218

00:09:46,136  -->  00:09:47,957
So these are pretty brief examples
219

219

00:09:47,957  -->  00:09:50,683
but hopefully you have a comfortable understanding
220

220

00:09:50,683  -->  00:09:55,350
of this while statement, how to read and write it.
221

221

00:09:55,350  -->  00:09:58,904
Okay, I want to make a quick word of caution.
222

222

00:09:58,904  -->  00:10:02,594
If you have something that is always true,
223

223

00:10:02,594  -->  00:10:05,769
you can run into danger of having infinitely running loops.
224

224

00:10:05,769  -->  00:10:09,686
So if I were to say something like, while True,
225

225

00:10:11,457  -->  00:10:12,290
print,
226

226

00:10:13,591  -->  00:10:15,258
let's say, infinite.
227

227

00:10:16,544  -->  00:10:19,167
And I'm not gonna actually run this cell
228

228

00:10:19,167  -->  00:10:21,921
'cause if I ran this cell, I would just get
229

229

00:10:21,921  -->  00:10:24,244
an infinite print statements.
230

230

00:10:24,244  -->  00:10:27,599
And if you notice here in this Jupyter Notebook,
231

231

00:10:27,599  -->  00:10:29,625
you'll notice it's actually a super long Notebook
232

232

00:10:29,625  -->  00:10:30,958
because I've run
233

233

00:10:32,096  -->  00:10:34,853
a quick sample of, Uh Oh infinite Loop!
234

234

00:10:34,853  -->  00:10:37,131
by always having that true.
235

235

00:10:37,131  -->  00:10:41,136
Okay, make sure you do not do that in your code.
236

236

00:10:41,136  -->  00:10:43,229
Always, before you implement a while statement,
237

237

00:10:43,229  -->  00:10:46,139
make sure that there's at least some sort of break statement
238

238

00:10:46,139  -->  00:10:49,843
that you'll hit or you're affecting the test condition
239

239

00:10:49,843  -->  00:10:51,510
where you won't have
240

240

00:10:52,801  -->  00:10:55,388
an infinite loop occur.
241

241

00:10:55,388  -->  00:10:58,622
So, that's actually it for this lesson on while loops.
242

242

00:10:58,622  -->  00:11:01,891
Just to reiterate, the general format of a while loop,
243

243

00:11:01,891  -->  00:11:04,186
you have a while, some sort of test condition
244

244

00:11:04,186  -->  00:11:05,682
and then your code statement.
245

245

00:11:05,682  -->  00:11:08,437
And then you can have an else, for when you finish
246

246

00:11:08,437  -->  00:11:11,385
that while loop, you can have final code statements.
247

247

00:11:11,385  -->  00:11:13,612
So we went through a quick example using 10
248

248

00:11:13,612  -->  00:11:15,854
and we kept adding to it.
249

249

00:11:15,854  -->  00:11:20,021
And then the next example we had an else statement.
250

250

00:11:21,342  -->  00:11:23,031
And then after that example we learned about
251

251

00:11:23,031  -->  00:11:25,395
break, continue and pass.
252

252

00:11:25,395  -->  00:11:27,338
So a quick reminder, break is going to
253

253

00:11:27,338  -->  00:11:30,802
break out of the current closest enclosing loop.
254

254

00:11:30,802  -->  00:11:33,091
Continue is going to go to the top
255

255

00:11:33,091  -->  00:11:35,213
of the closest enclosing loop.
256

256

00:11:35,213  -->  00:11:37,940
And then pass does nothing at all.
257

257

00:11:37,940  -->  00:11:41,570
All right, so we'll be revisiting while loops
258

258

00:11:41,570  -->  00:11:43,224
and then break and continue statements
259

259

00:11:43,224  -->  00:11:46,478
as we go on throughout the course.
260

260

00:11:46,478  -->  00:11:49,999
So don't worry, we'll be covering this more and more
261

261

00:11:49,999  -->  00:11:53,180
as we get more and more complicated programmes
262

262

00:11:53,180  -->  00:11:54,440
throughout the course.
263

263

00:11:54,440  -->  00:11:56,219
Okay, so that's it for the while loop.
264

264

00:11:56,219  -->  00:11:58,954
I will see you at the next lecture.
