1
1

00:00:01,324  -->  00:00:02,264
<v Instructor>Hello everyone</v>
2

2

00:00:02,264  -->  00:00:03,908
and welcome to this quick lecture
3

3

00:00:03,908  -->  00:00:05,849
on the functions and methods homework.
4

4

00:00:05,849  -->  00:00:07,723
So in this lecture we're just gonna quickly go over
5

5

00:00:07,723  -->  00:00:11,381
the assignment and what to expect.
6

6

00:00:11,381  -->  00:00:13,432
Okay, so let's go head and get started.
7

7

00:00:13,432  -->  00:00:15,732
So your first question is write a function that computes
8

8

00:00:15,732  -->  00:00:18,482
the volume of a sphere given its radius.
9

9

00:00:18,482  -->  00:00:22,440
And for pretty much all of these function homework
10

10

00:00:22,440  -->  00:00:26,167
assignments, I've given you just the basic code cell
11

11

00:00:26,167  -->  00:00:27,691
to fill in.
12

12

00:00:27,691  -->  00:00:29,323
So there's your def vol.
13

13

00:00:29,323  -->  00:00:30,809
It's gonna take in a radius,
14

14

00:00:30,809  -->  00:00:32,585
and then you're gonna have to return the volume
15

15

00:00:32,585  -->  00:00:34,585
of the sphere.
16

16

00:00:34,585  -->  00:00:36,621
Second question, write a function that checks
17

17

00:00:36,621  -->  00:00:39,347
whether a number is in a given range.
18

18

00:00:39,347  -->  00:00:42,050
So that's inclusive of high and low.
19

19

00:00:42,050  -->  00:00:43,670
So there's two methods for this.
20

20

00:00:43,670  -->  00:00:45,984
You could either say def ran_check,
21

21

00:00:45,984  -->  00:00:47,832
and you could have a print statement that says
22

22

00:00:47,832  -->  00:00:50,885
yes, it's in the given range,
23

23

00:00:50,885  -->  00:00:53,398
or you could just do a Boolean check.
24

24

00:00:53,398  -->  00:00:55,200
And I want you to fill these in both.
25

25

00:00:55,200  -->  00:00:58,196
So have one function say it prints out a statement
26

26

00:00:58,196  -->  00:01:00,116
saying whether the number's in the range,
27

27

00:01:00,116  -->  00:01:03,472
and another one that just returns the Boolean.
28

28

00:01:03,472  -->  00:01:07,484
Okay, after that, I want you to write a Python function
29

29

00:01:07,484  -->  00:01:10,598
that accepts a string and calculates the number
30

30

00:01:10,598  -->  00:01:13,782
of upper case letters and lower case letters.
31

31

00:01:13,782  -->  00:01:16,608
So, for example, you have an input string that says
32

32

00:01:16,608  -->  00:01:19,465
Hello Mr. Rogers, how are you this fine Tuesday?
33

33

00:01:19,465  -->  00:01:23,214
And I want you to have the output print something like
34

34

00:01:23,214  -->  00:01:24,918
this, number of upper case characters,
35

35

00:01:24,918  -->  00:01:27,392
number of lower case characters.
36

36

00:01:27,392  -->  00:01:29,057
And if you feel ambitious, you can use the
37

37

00:01:29,057  -->  00:01:31,262
collections module to solve this problem,
38

38

00:01:31,262  -->  00:01:34,608
but you actually don't need it.
39

39

00:01:34,608  -->  00:01:37,890
Okay, after that, I want you to write a Python function
40

40

00:01:37,890  -->  00:01:39,994
that takes a list and returns a new list
41

41

00:01:39,994  -->  00:01:42,819
of the unique elements of the first list.
42

42

00:01:42,819  -->  00:01:45,698
Remember, I want you to return a list.
43

43

00:01:45,698  -->  00:01:48,630
So it's gonna look a little something like that.
44

44

00:01:48,630  -->  00:01:51,681
Okay, after that, I want you to write a Python function
45

45

00:01:51,681  -->  00:01:54,410
to multiply all the numbers in a list,
46

46

00:01:54,410  -->  00:01:56,077
as so, def multiply.
47

47

00:01:58,048  -->  00:02:00,077
Then, I want you to write a Python function
48

48

00:02:00,077  -->  00:02:03,478
that checks whether a passed string is a palindrome or not.
49

49

00:02:03,478  -->  00:02:07,116
So remember, a palindrome is a word, phrase or sequence,
50

50

00:02:07,116  -->  00:02:09,829
that reads the same forward and backward.
51

51

00:02:09,829  -->  00:02:12,213
So like madam or nurses run,
52

52

00:02:12,213  -->  00:02:15,804
those are examples of palindromes.
53

53

00:02:15,804  -->  00:02:20,672
Okay, then finally, I have this hard level question,
54

54

00:02:20,672  -->  00:02:22,242
and what it's gonna do is I want you to write
55

55

00:02:22,242  -->  00:02:24,714
a Python function to check whether a string
56

56

00:02:24,714  -->  00:02:26,540
is a pangram or not.
57

57

00:02:26,540  -->  00:02:28,967
And note that pangrams are words or sentences
58

58

00:02:28,967  -->  00:02:32,254
containing every letter of the alphabet, at least once.
59

59

00:02:32,254  -->  00:02:35,565
So for example, the quick brown fox jumps over the lazy dog
60

60

00:02:35,565  -->  00:02:38,031
contains every letter in the alphabet.
61

61

00:02:38,031  -->  00:02:40,251
And I put a little hint for you,
62

62

00:02:40,251  -->  00:02:42,096
and you're gonna use the string module.
63

63

00:02:42,096  -->  00:02:45,557
So you're gonna put this line, import string.
64

64

00:02:45,557  -->  00:02:48,477
And this is gonna allow you to save time
65

65

00:02:48,477  -->  00:02:50,974
from having to write every letter of the alphabet.
66

66

00:02:50,974  -->  00:02:52,292
So if you import string,
67

67

00:02:52,292  -->  00:02:55,292
and then say string.ascii_lowercase,
68

68

00:02:57,814  -->  00:02:59,291
that will actually output the alphabet.
69

69

00:02:59,291  -->  00:03:00,941
So to give you an example of what that looks like,
70

70

00:03:00,941  -->  00:03:02,548
after you import string,
71

71

00:03:02,548  -->  00:03:06,596
you're gonna say string.ascii_lowercase,
72

72

00:03:06,596  -->  00:03:08,737
and that's just gonna output this long string
73

73

00:03:08,737  -->  00:03:10,606
of the alphabet.
74

74

00:03:10,606  -->  00:03:12,189
Okay, so that's it.
75

75

00:03:13,132  -->  00:03:14,836
Basically have a lot of fun with these.
76

76

00:03:14,836  -->  00:03:18,137
There's multiple ways to answer a lot of these functions.
77

77

00:03:18,137  -->  00:03:21,215
See if you can try the most readable and simple
78

78

00:03:21,215  -->  00:03:23,449
solutions you can.
79

79

00:03:23,449  -->  00:03:25,046
And I forgot you can go ahead and check out
80

80

00:03:25,046  -->  00:03:27,717
the Jupyter notebook that has the solutions.
81

81

00:03:27,717  -->  00:03:30,217
Okay, that's it and good luck.
