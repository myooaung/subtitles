1
1

00:00:01,598  -->  00:00:03,154
<v Instructor>Hello everyone and welcome</v>
2

2

00:00:03,154  -->  00:00:05,487
to the StringIO Module lecture.
3

3

00:00:05,487  -->  00:00:07,462
So this is going to be a very brief lecture
4

4

00:00:07,462  -->  00:00:11,263
on what the StringIO module actually does,
5

5

00:00:11,263  -->  00:00:12,765
and then I'll let you go ahead and explore
6

6

00:00:12,765  -->  00:00:14,729
the documentation in Jupiter notebook if you feel
7

7

00:00:14,729  -->  00:00:18,312
the need to ever use StringIO in your code.
8

8

00:00:19,466  -->  00:00:21,705
StringIO is sometimes confusing to beginners,
9

9

00:00:21,705  -->  00:00:24,356
but the best way to think about it is StringIO
10

10

00:00:24,356  -->  00:00:29,196
module basically implements an in-memory file like object,
11

11

00:00:29,196  -->  00:00:30,860
and I'm actually not going to do any live code,
12

12

00:00:30,860  -->  00:00:33,611
I'm just going to walk through the Jupiter notebook here.
13

13

00:00:33,611  -->  00:00:36,087
And then this object can then be used as input or output
14

14

00:00:36,087  -->  00:00:39,425
to most functions that would expect a standard file object.
15

15

00:00:39,425  -->  00:00:42,121
So the best way to show this is by simple example.
16

16

00:00:42,121  -->  00:00:44,833
So here you see an imported StringIO,
17

17

00:00:44,833  -->  00:00:47,289
and then create an arbitrary string with some message
18

18

00:00:47,289  -->  00:00:49,733
that says 'this is just a normal string'.
19

19

00:00:49,733  -->  00:00:52,327
Now what you're seeing is that I can use StringIO,
20

20

00:00:52,327  -->  00:00:56,097
and then you use the dot StringIO method in order
21

21

00:00:56,097  -->  00:00:59,754
to create a file object out of a string.
22

22

00:00:59,754  -->  00:01:02,397
And we set as the variable F,
23

23

00:01:02,397  -->  00:01:04,033
and then you can actually perform
24

24

00:01:04,033  -->  00:01:05,715
like read and write
25

25

00:01:05,715  -->  00:01:07,669
so you can treat that object F,
26

26

00:01:07,669  -->  00:01:09,354
just like you'd be able to treat a file,
27

27

00:01:09,354  -->  00:01:12,352
so you say F dot read, F dot write, F dot seek,
28

28

00:01:12,352  -->  00:01:14,657
all those things we learned back when we were dealing with
29

29

00:01:14,657  -->  00:01:18,824
files in Python in the very beginning of this course.
30

30

00:01:20,208  -->  00:01:21,597
So that's really all there is to it.
31

31

00:01:21,597  -->  00:01:23,645
You can basically just convert strings
32

32

00:01:23,645  -->  00:01:25,145
and be able to read and write to them
33

33

00:01:25,145  -->  00:01:26,286
as if they were files.
34

34

00:01:26,286  -->  00:01:28,144
So you can go ahead and check out the link here
35

35

00:01:28,144  -->  00:01:30,034
to the rest of the documentation,
36

36

00:01:30,034  -->  00:01:32,156
there's quite a few methods and there's also
37

37

00:01:32,156  -->  00:01:36,323
a faster C StringIO which is just a C implementation
38

38

00:01:37,733  -->  00:01:41,372
of StringIO, which will be faster and it provides
39

39

00:01:41,372  -->  00:01:45,076
similar interface just to the StringIO.
40

40

00:01:45,076  -->  00:01:47,069
So go ahead and check those out
41

41

00:01:47,069  -->  00:01:49,146
in case you ever need them in your code,
42

42

00:01:49,146  -->  00:01:52,712
but I can't think of any examples for you
43

43

00:01:52,712  -->  00:01:54,973
as far as typical code usage.
44

44

00:01:54,973  -->  00:01:58,969
Usually when you're just are using StringIO
45

45

00:01:58,969  -->  00:02:02,260
it has to do with scraping from the web and trying to read
46

46

00:02:02,260  -->  00:02:04,408
strings from the web as files,
47

47

00:02:04,408  -->  00:02:07,643
so that's where you'll see it come into play
48

48

00:02:07,643  -->  00:02:09,060
during your code.
49

49

00:02:09,966  -->  00:02:12,380
Okay, so that's it for StringIO,
50

50

00:02:12,380  -->  00:02:14,511
I will go ahead and see you at the next lecture.
51

51

00:02:14,511  -->  00:02:15,844
Thanks everyone.
