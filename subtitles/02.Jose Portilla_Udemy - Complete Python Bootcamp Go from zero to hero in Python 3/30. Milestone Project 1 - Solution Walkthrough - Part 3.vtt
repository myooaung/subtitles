WEBVTT
1
1

00:00:01.718  -->  00:00:02.980
<v Instructor>Hello everyone,</v>
2

2

00:00:02.980  -->  00:00:04.306
and welcome to the final lecture
3

3

00:00:04.306  -->  00:00:08.725
on the Milestone Project 1: Walkthrough Solution.
4

4

00:00:08.725  -->  00:00:10.356
So, we've gone over all the steps
5

5

00:00:10.356  -->  00:00:13.092
and created all the functions we need.
6

6

00:00:13.092  -->  00:00:15.131
What we're gonna do now is put it all together
7

7

00:00:15.131  -->  00:00:17.236
and use while loops and the functions we've made
8

8

00:00:17.236  -->  00:00:19.249
to actually run a game.
9

9

00:00:19.249  -->  00:00:22.103
Let's go ahead and just clear this.
10

10

00:00:22.103  -->  00:00:22.936
First thing we're gonna say,
11

11

00:00:22.936  -->  00:00:26.233
is just print .
12

12

00:00:26.233  -->  00:00:28.371
Then, we're gonna say, while True:,
13

13

00:00:28.371  -->  00:00:30.430
so that we continually run the game
14

14

00:00:30.430  -->  00:00:33.230
until something goes False.
15

15

00:00:33.230  -->  00:00:36.206
So, I'm gonna go ahead and reset the board.
16

16

00:00:36.206  -->  00:00:40.124
So, I'll make a variable called theBoard,
17

17

00:00:40.124  -->  00:00:44.821
and I'm going to make it just 10, empty spaces here,
18

18

00:00:44.821  -->  00:00:48.071
and then I'm going to use player_input.
19

19

00:00:49.945  -->  00:00:52.425
If we just go back real quick to player_input
20

20

00:00:52.425  -->  00:00:54.409
so we can remember what it looks like.
21

21

00:00:54.409  -->  00:00:58.481
Remember, it returns a tuple of X and O, or O and X,
22

22

00:00:58.481  -->  00:01:01.394
depending on what the Player 1 chose.
23

23

00:01:01.394  -->  00:01:04.192
So, in that case, I'm gonna say,
24

24

00:01:04.192  -->  00:01:08.359
player1_marker, and player2_marker = player_input
25

25

00:01:13.894  -->  00:01:17.815
and this is using tuple unpacking to basically, whoops,
26

26

00:01:17.815  -->  00:01:20.375
make player1_marker and player2_marker,
27

27

00:01:20.375  -->  00:01:23.755
the outputs of that player_input function,
28

28

00:01:23.755  -->  00:01:27.922
and then I'm gonna say turn variable = choose_first ,
29

29

00:01:29.334  -->  00:01:31.983
so that's gonna be a variable we can say,
30

30

00:01:31.983  -->  00:01:35.457
remember choose_first returns a string,
31

31

00:01:35.457  -->  00:01:38.447
so if we go back up, make sure we understand that.
32

32

00:01:38.447  -->  00:01:40.777
Choose_first either returns Player 1 or Player 2,
33

33

00:01:40.777  -->  00:01:42.592
so we're gonna do some checks to see
34

34

00:01:42.592  -->  00:01:45.036
if player, if turn = Player 1, if turn = Player 2,
35

35

00:01:45.036  -->  00:01:47.704
et cetera, and then I'm gonna say,
36

36

00:01:47.704  -->  00:01:51.871
print(turn, which is a string, + another string,
37

37

00:01:53.492  -->  00:01:54.825
will go first!'.
38

38

00:01:57.465  -->  00:01:59.857
So depending on this random, I'll say oh, Player 1
39

39

00:01:59.857  -->  00:02:03.371
will go first, or Player 2 will go first,
40

40

00:02:03.371  -->  00:02:07.575
and then I'm gonna make one more variable called game_on
41

41

00:02:07.575  -->  00:02:09.218
and I'll set it equal to True,
42

42

00:02:09.218  -->  00:02:11.681
and I will make game_on False,
43

43

00:02:11.681  -->  00:02:15.348
if the game ever is a tie or somebody's won.
44

44

00:02:16.798  -->  00:02:18.041
Now I'm gonna make another while loop
45

45

00:02:18.041  -->  00:02:22.208
and I'll say while game_on: if turn == "Player 1",
46

46

00:02:27.595  -->  00:02:31.117
so remember it's Player's 1 turn right now,
47

47

00:02:31.117  -->  00:02:33.700
I'm going to say display_board,
48

48

00:02:37.764  -->  00:02:39.848
and I'm just gonna pass in the board itself,
49

49

00:02:39.848  -->  00:02:42.623
remember the board is just this empty list here.
50

50

00:02:42.623  -->  00:02:45.832
So display_board, pass in the board,
51

51

00:02:45.832  -->  00:02:49.999
and then I'm gonna say position = player_choice ,
52

52

00:02:56.664  -->  00:03:00.414
and then I'm gonna say place_marker function,
53

53

00:03:01.571  -->  00:03:05.238
and I will pass in theBoard, player1_marker,
54

54

00:03:08.357  -->  00:03:09.774
and the position.
55

55

00:03:10.791  -->  00:03:12.911
All right, so what are we doing so far?
56

56

00:03:12.911  -->  00:03:14.822
I'm saying while the game is still on,
57

57

00:03:14.822  -->  00:03:17.176
I set it as True right now, if the turn,
58

58

00:03:17.176  -->  00:03:19.792
if it's Player's 1 turn, display the board,
59

59

00:03:19.792  -->  00:03:22.280
so print it out, set the position
60

60

00:03:22.280  -->  00:03:23.624
equal to the player_choice,
61

61

00:03:23.624  -->  00:03:25.626
so I'm gonna ask the player what position they want to do
62

62

00:03:25.626  -->  00:03:28.175
and remember if we look back to player_choice,
63

63

00:03:28.175  -->  00:03:31.048
I continually ask until I get something that makes sense
64

64

00:03:31.048  -->  00:03:34.131
using space check and other functions
65

65

00:03:35.346  -->  00:03:38.352
that split on the list, and then I'm gonna say,
66

66

00:03:38.352  -->  00:03:40.395
place_marker on theBoard,
67

67

00:03:40.395  -->  00:03:43.276
player1_marker, at the position,
68

68

00:03:43.276  -->  00:03:46.033
where Player 1's marker, remember, comes from player_input,
69

69

00:03:46.033  -->  00:03:48.742
so we know it's either X or O.
70

70

00:03:48.742  -->  00:03:51.699
All right, then once we put the marker on the board,
71

71

00:03:51.699  -->  00:03:53.601
I want to check if somebody's won.
72

72

00:03:53.601  -->  00:03:57.768
So I'll say if win_check ,
73

73

00:04:02.813  -->  00:04:06.980
I'm just using tab there, I'm gonna say display_board,
74

74

00:04:10.175  -->  00:04:13.675
I'll show theBoard, and then I will print,
75

75

00:04:15.775  -->  00:04:19.442
let's just print 'Congratulations, Player 1,
76

76

00:04:24.564  -->  00:04:26.147
has won the game').
77

77

00:04:28.117  -->  00:04:30.427
So if that win_check ends up being True,
78

78

00:04:30.427  -->  00:04:33.407
Player 1's won the game and I'm gonna say game_on now
79

79

00:04:33.407  -->  00:04:36.277
is equal to False, because if somebody's won
80

80

00:04:36.277  -->  00:04:37.397
than the game is no longer on,
81

81

00:04:37.397  -->  00:04:40.730
so this entire while loop will collapse.
82

82

00:04:42.351  -->  00:04:45.340
Otherwise, I'll say else, we also want to check
83

83

00:04:45.340  -->  00:04:49.507
if there's a tie, so I'll say if full_board_check,
84

84

00:04:51.229  -->  00:04:55.396
given theBoard, display_board ,
85

85

00:04:58.842  -->  00:05:01.613
and then I'm gonna go ahead and print
86

86

00:05:01.613  -->  00:05:05.780
, and I will go ahead,
87

87

00:05:08.070  -->  00:05:11.487
and just break out if the game is a draw,
88

88

00:05:12.835  -->  00:05:17.002
else:, so else means nobody won, the game isn't a draw,
89

89

00:05:18.747  -->  00:05:22.914
so I set turn = 'Player 2', and just remember
90

90

00:05:24.585  -->  00:05:28.653
that these strings need to be exactly the same
91

91

00:05:28.653  -->  00:05:32.820
as the strings you output for the random choice function,
92

92

00:05:34.377  -->  00:05:36.842
which if we look up, is right here.
93

93

00:05:36.842  -->  00:05:38.345
So those strings need to be exactly the same
94

94

00:05:38.345  -->  00:05:42.512
as these, on the choose_first, otherwise you'll get errors.
95

95

00:05:44.726  -->  00:05:48.393
Okay, so we just did Player 1's entire turn.
96

96

00:05:49.781  -->  00:05:52.614
Player 2's turn, #Player's 2 turn,
97

97

00:05:54.397  -->  00:05:57.782
is gonna look pretty much almost exactly the same,
98

98

00:05:57.782  -->  00:06:00.612
so again we're just going to, we can actually just copy
99

99

00:06:00.612  -->  00:06:05.011
and paste this, and then do the appropriate changes.
100

100

00:06:05.011  -->  00:06:06.828
So in this case, I have display theBoard,
101

101

00:06:06.828  -->  00:06:09.173
that's gonna stay the same, position, again,
102

102

00:06:09.173  -->  00:06:11.395
I'm gonna ask the player for his choice,
103

103

00:06:11.395  -->  00:06:13.903
and in this case when I say place_marker,
104

104

00:06:13.903  -->  00:06:15.940
I'm gonna place player2_marker,
105

105

00:06:15.940  -->  00:06:18.940
which again I got from player_input,
106

106

00:06:20.809  -->  00:06:25.649
and I'm gonna put it at the position that they chose.
107

107

00:06:25.649  -->  00:06:28.127
After that, I'm gonna do again, a really similar thing,
108

108

00:06:28.127  -->  00:06:30.946
we're just gonna say check for wins and check for ties,
109

109

00:06:30.946  -->  00:06:32.936
so you can just copy and paste that,
110

110

00:06:32.936  -->  00:06:34.826
and do the appropriate changes.
111

111

00:06:34.826  -->  00:06:38.060
Instead of player1_marker, I'm just gonna do player2_marker,
112

112

00:06:38.060  -->  00:06:40.415
and instead of congratulating Player 1,
113

113

00:06:40.415  -->  00:06:43.960
in case if Player 2 wins, I will congratulate Player 2,
114

114

00:06:43.960  -->  00:06:47.774
and again I set game_on = False, and here,
115

115

00:06:47.774  -->  00:06:52.318
if the game has not yet been won, or is not a draw yet,
116

116

00:06:52.318  -->  00:06:54.563
I set turn = 'Player 1',
117

117

00:06:54.563  -->  00:06:55.858
and then since the game is still on,
118

118

00:06:55.858  -->  00:06:58.072
we come back here to this if loop,
119

119

00:06:58.072  -->  00:07:00.626
again we ask for position, check if there's a win,
120

120

00:07:00.626  -->  00:07:05.161
check if there's a tie, if not, turn becomes Player 2,
121

121

00:07:05.161  -->  00:07:07.622
meaning if we come back here, it's no longer Player 1,
122

122

00:07:07.622  -->  00:07:09.496
so we go to else here.
123

123

00:07:09.496  -->  00:07:11.090
This could also be elif player,
124

124

00:07:11.090  -->  00:07:14.165
this could also be elif turn = Player 2, but this case,
125

125

00:07:14.165  -->  00:07:15.277
since there's only two players,
126

126

00:07:15.277  -->  00:07:19.782
we just have an else, and now the only thing left to do
127

127

00:07:19.782  -->  00:07:23.228
is ask for that replay, which should line up
128

128

00:07:23.228  -->  00:07:26.265
with this while loop up here.
129

129

00:07:26.265  -->  00:07:27.703
So let's go ahead and zoom out of this
130

130

00:07:27.703  -->  00:07:29.943
so we get the whole picture.
131

131

00:07:29.943  -->  00:07:34.743
So I'm gonna say while game_on, if turn Player 1,
132

132

00:07:34.743  -->  00:07:37.493
else, and now I'm just gonna say,
133

133

00:07:39.082  -->  00:07:43.974
if not replay , 'cause remember replay just asks
134

134

00:07:43.974  -->  00:07:47.222
if they want to replay again, I will break
135

135

00:07:47.222  -->  00:07:50.368
out of this while loop, the True one.
136

136

00:07:50.368  -->  00:07:53.423
Okay, so let's actually try and play this out.
137

137

00:07:53.423  -->  00:07:57.663
I'm going to say Cell, Run All, just to make sure
138

138

00:07:57.663  -->  00:08:01.191
all the functions in the cells defined below, or above this,
139

139

00:08:01.191  -->  00:08:02.204
have take into place.
140

140

00:08:02.204  -->  00:08:03.688
Let's make sure it all works out.
141

141

00:08:03.688  -->  00:08:08.536
I'm gonna say X, Choose your next position: ,
142

142

00:08:08.536  -->  00:08:12.219
and just a quick note, sometimes in jupyter notebooks,
143

143

00:08:12.219  -->  00:08:14.213
inputs will hop from top to bottom,
144

144

00:08:14.213  -->  00:08:15.989
depending on the print order.
145

145

00:08:15.989  -->  00:08:18.278
It should hop back to the bottom in just a second
146

146

00:08:18.278  -->  00:08:21.036
if I choose one here, and it did, okay.
147

147

00:08:21.036  -->  00:08:23.079
Let's choose O's position, we'll put 'em in the centre,
148

148

00:08:23.079  -->  00:08:25.662
so one, two, three, four, five,
149

149

00:08:26.600  -->  00:08:28.604
and X is gonna go, let's say, top corner,
150

150

00:08:28.604  -->  00:08:32.088
one, two, three, four, five, six, seven,
151

151

00:08:32.088  -->  00:08:34.819
O will try to block that there,
152

152

00:08:34.819  -->  00:08:36.302
so I'll choose next position, I'll say,
153

153

00:08:36.302  -->  00:08:39.069
one, two, three, four for O.
154

154

00:08:39.069  -->  00:08:42.852
Let's say X goes to this, has to block that one actually,
155

155

00:08:42.852  -->  00:08:45.602
one, two, three, four, five, six,
156

156

00:08:47.874  -->  00:08:52.111
and O will now, let's say put top, so that's gonna be eight,
157

157

00:08:52.111  -->  00:08:55.567
then X needs to block that one, so that's two,
158

158

00:08:55.567  -->  00:08:57.857
looks like we're gonna have a tied game here.
159

159

00:08:57.857  -->  00:09:01.202
We'll make it tied and we'll check out the wins.
160

160

00:09:01.202  -->  00:09:03.817
So we'll put that one at nine,
161

161

00:09:03.817  -->  00:09:05.256
actually let's, let's check the win first,
162

162

00:09:05.256  -->  00:09:08.232
so right now we're gonna force this to be a win,
163

163

00:09:08.232  -->  00:09:10.666
one, two, three, let's see what happens.
164

164

00:09:10.666  -->  00:09:13.266
So we say, Congratulations, Player 1, has won the game!
165

165

00:09:13.266  -->  00:09:14.214
Do you want to play again?
166

166

00:09:14.214  -->  00:09:15.706
Enter Yes or No.
167

167

00:09:15.706  -->  00:09:19.373
Remember we could say YYEAHHHH, click Enter,
168

168

00:09:22.518  -->  00:09:25.791
and we will play again, because remember how we implemented
169

169

00:09:25.791  -->  00:09:30.043
this replay again, it just checked that first letter
170

170

00:09:30.043  -->  00:09:32.536
and then lower cased it and checked if it equals
171

171

00:09:32.536  -->  00:09:33.430
lowercase Y.
172

172

00:09:33.430  -->  00:09:35.164
So do I want to be X or O?
173

173

00:09:35.164  -->  00:09:37.389
I'm gonna go ahead and be O.
174

174

00:09:37.389  -->  00:09:38.481
It's gonna say Choose your next position.
175

175

00:09:38.481  -->  00:09:41.353
Let's make sure our while loop is working.
176

176

00:09:41.353  -->  00:09:43.621
So if we scroll back up, remember,
177

177

00:09:43.621  -->  00:09:45.770
if we're checking next position,
178

178

00:09:45.770  -->  00:09:48.599
we had to check whether it was an actual number
179

179

00:09:48.599  -->  00:09:52.100
and we also had to check whether the board was clear there.
180

180

00:09:52.100  -->  00:09:53.653
So I'm gonna try to mess this up.
181

181

00:09:53.653  -->  00:09:56.557
I'm gonna say HELLLO, and you notice,
182

182

00:09:56.557  -->  00:09:57.965
it's just gonna keep asking me
183

183

00:09:57.965  -->  00:10:00.083
until it can set the actual position.
184

184

00:10:00.083  -->  00:10:03.032
So if I say 34, that's also no good.
185

185

00:10:03.032  -->  00:10:05.753
If I say false, that's also no good.
186

186

00:10:05.753  -->  00:10:08.756
If I say print, I don't know, this might really break it,
187

187

00:10:08.756  -->  00:10:10.966
print 'hello', nope that won't break it.
188

188

00:10:10.966  -->  00:10:13.336
Now if I click 1, that's good to go.
189

189

00:10:13.336  -->  00:10:15.100
So now I'm gonna choose X's position.
190

190

00:10:15.100  -->  00:10:19.956
Again, if I try to say something else, it's not gonna work.
191

191

00:10:19.956  -->  00:10:22.951
If I try to choose a position that's already taken,
192

192

00:10:22.951  -->  00:10:25.562
it's also not gonna work, it's gonna keep asking me
193

193

00:10:25.562  -->  00:10:29.145
until I actually put in the correct values.
194

194

00:10:30.167  -->  00:10:34.191
So let's go ahead and try to get a tie here now,
195

195

00:10:34.191  -->  00:10:38.358
0, X, 0, X, 0, X, so hopefully I don't screw this up, okay,
196

196

00:10:40.183  -->  00:10:44.148
and X should go at nine to block that,
197

197

00:10:44.148  -->  00:10:47.355
and then finally, the only one left is seven,
198

198

00:10:47.355  -->  00:10:50.602
so, oh crap, looks like 0 won,
199

199

00:10:50.602  -->  00:10:54.226
I just want to make sure that our games a draw check
200

200

00:10:54.226  -->  00:10:57.100
is all working out, so let's try this one more time.
201

201

00:10:57.100  -->  00:11:00.143
Guess I'm just too good at Tic Tac Toe, against myself,
202

202

00:11:00.143  -->  00:11:01.310
do I want to play again?
203

203

00:11:01.310  -->  00:11:02.294
Yes I do.
204

204

00:11:02.294  -->  00:11:03.644
Do I want to be X or O's?
205

205

00:11:03.644  -->  00:11:05.061
Let's do X, okay.
206

206

00:11:07.580  -->  00:11:11.330
One, so it looks like Player 2's going first.
207

207

00:11:12.668  -->  00:11:16.668
Three, okay so where should, I'm on X right now,
208

208

00:11:18.713  -->  00:11:22.946
X should go on nine, make sure to block 'em there.
209

209

00:11:22.946  -->  00:11:25.993
Okay, and then O should go at eight,
210

210

00:11:25.993  -->  00:11:30.129
make sure to block them there, and now X,
211

211

00:11:30.129  -->  00:11:31.414
it doesn't matter where they'll go,
212

212

00:11:31.414  -->  00:11:35.132
so I'll put them at four, and then O's gonna go at seven,
213

213

00:11:35.132  -->  00:11:36.990
since that's the only space left,
214

214

00:11:36.990  -->  00:11:38.474
and looks like we successfully checked
215

215

00:11:38.474  -->  00:11:40.125
that the game is a draw.
216

216

00:11:40.125  -->  00:11:41.063
Do I want to play again?
217

217

00:11:41.063  -->  00:11:43.950
Let's check to make sure if I put in no.
218

218

00:11:43.950  -->  00:11:45.710
Basically anything that didn't start with a yes
219

219

00:11:45.710  -->  00:11:47.286
would've broken that loop.
220

220

00:11:47.286  -->  00:11:49.573
Okay, that's it for the game.
221

221

00:11:49.573  -->  00:11:51.550
Let's go ahead and just really make sure we understand
222

222

00:11:51.550  -->  00:11:53.518
each and every step of the full game
223

223

00:11:53.518  -->  00:11:54.803
by zooming in on it.
224

224

00:11:54.803  -->  00:11:56.951
So I print 'Welcome to Tic Tac Toe!',
225

225

00:11:56.951  -->  00:11:58.980
I have my while loop True, so that's gonna keep running
226

226

00:11:58.980  -->  00:12:03.498
until all the way down here, I break, if not replay,
227

227

00:12:03.498  -->  00:12:06.295
so if they decide not to replay.
228

228

00:12:06.295  -->  00:12:09.124
I create an empty Board using a list.
229

229

00:12:09.124  -->  00:12:12.530
I use the player_input function to set my player1_marker
230

230

00:12:12.530  -->  00:12:13.833
and my player2_marker.
231

231

00:12:13.833  -->  00:12:16.825
I use tuple unpacking in order to do that.
232

232

00:12:16.825  -->  00:12:20.159
I set a variable called turn = choose_first ,
233

233

00:12:20.159  -->  00:12:22.547
that randomly returns either "Player 1" string
234

234

00:12:22.547  -->  00:12:24.447
or "Player 2" string.
235

235

00:12:24.447  -->  00:12:27.728
Then I print, ' will go first!', so either Player 1
236

236

00:12:27.728  -->  00:12:29.630
or Player 2, will go first.
237

237

00:12:29.630  -->  00:12:33.076
I create a variable called game_on which is True or False.
238

238

00:12:33.076  -->  00:12:34.209
Then I say while game_on,
239

239

00:12:34.209  -->  00:12:37.458
meaning the game has begun, it's on.
240

240

00:12:37.458  -->  00:12:41.234
If the turn == "Player 1", I show the board,
241

241

00:12:41.234  -->  00:12:43.985
ask for the position, and then place the marker
242

242

00:12:43.985  -->  00:12:46.709
at that position based off player1_marker
243

243

00:12:46.709  -->  00:12:48.200
for the Player 1 loop.
244

244

00:12:48.200  -->  00:12:49.919
Once I place the marker, I want to check
245

245

00:12:49.919  -->  00:12:53.782
if that person's won or if there's a tie.
246

246

00:12:53.782  -->  00:12:57.042
So I display the board, if there's a win_check,
247

247

00:12:57.042  -->  00:12:58.871
if that ends up being True, I display the board
248

248

00:12:58.871  -->  00:13:00.746
and say 'Congratulations, Player 1, has won,
249

249

00:13:00.746  -->  00:13:04.221
and then I set the game_on as False, the game's over.
250

250

00:13:04.221  -->  00:13:07.215
Else, I say if full_board_check, display the board,
251

251

00:13:07.215  -->  00:13:10.628
print 'The game is a draw!', and I break.
252

252

00:13:10.628  -->  00:13:14.133
Otherwise, I set the turn = 'Player 2',
253

253

00:13:14.133  -->  00:13:16.422
which is the reason why I don't say game_on = False here
254

254

00:13:16.422  -->  00:13:19.822
'cause I also want that else turn Player 2.
255

255

00:13:19.822  -->  00:13:21.839
Very similar thing for Player 2,
256

256

00:13:21.839  -->  00:13:25.006
except now it's player2_marker's across.
257

257

00:13:25.006  -->  00:13:26.653
Once a break has happened
258

258

00:13:26.653  -->  00:13:29.097
or the game_on has been equal to False,
259

259

00:13:29.097  -->  00:13:31.977
then it will say, Do you want to replay?,
260

260

00:13:31.977  -->  00:13:34.665
and that's all there is to the Tic Tac Toe game.
261

261

00:13:34.665  -->  00:13:36.804
All right, so again, make sure you walk through
262

262

00:13:36.804  -->  00:13:39.002
each of these steps, understand the functions,
263

263

00:13:39.002  -->  00:13:39.843
and then really understand
264

264

00:13:39.843  -->  00:13:42.147
how everything's working together, but that's it,
265

265

00:13:42.147  -->  00:13:45.453
congratulations on completing your first milestone project,
266

266

00:13:45.453  -->  00:13:47.244
and I will see you at the next lecture.
267

267

00:13:47.244  -->  00:13:48.577
Thanks everyone.
