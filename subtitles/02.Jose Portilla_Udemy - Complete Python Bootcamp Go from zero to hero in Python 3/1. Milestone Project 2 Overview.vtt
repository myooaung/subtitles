WEBVTT
1
00:00:05.430 --> 00:00:09.240
Selamat datang kembali semua orang untuk proyek tonggak kedua Anda.

2
00:00:09.290 --> 00:00:14.240
Jadi kita sekarang telah belajar cukup tentang Python dengan kesalahan pemrograman berorientasi objek dan penanganan

3
00:00:14.540 --> 00:00:18.900
pengecualian serta fungsi yang cukup untuk benar-benar memulai proyek yang lebih besar.

4
00:00:18.920 --> 00:00:22.880
Dan kasus ini akan menjadi proyek Moulson kedua kami di mana kami akan

5
00:00:22.880 --> 00:00:24.830
membuat permainan catur hitam dengan Python.

6
00:00:24.830 --> 00:00:28.100
Sekarang Anda dapat mendekati proyek ini dengan beberapa cara berbeda.

7
00:00:28.100 --> 00:00:32.150
Pertama jika Anda masih merasa sedikit fuzzy dan pemrograman berorientasi objek atau Anda membutuhkan lebih

8
00:00:32.150 --> 00:00:37.400
banyak bantuan saat Anda melanjutkan proyek besar pertama Anda, yang bisa kami lakukan hanyalah kode di sepanjang proyek ini

9
00:00:37.400 --> 00:00:42.080
dari solusi yang memberikan kuliah kepada banyak siswa sangat suka pendekatan itu terutama jika mereka masih merasa

10
00:00:42.080 --> 00:00:44.360
sedikit terlalu baru untuk pemrograman berorientasi objek.

11
00:00:44.480 --> 00:00:49.100
Mereka akan langsung melompat ke video solusi dan kemudian kode bersama dengan video yang sebenarnya itu.

12
00:00:49.160 --> 00:00:53.930
Dan ini cara yang baik bagi seseorang untuk membantu membimbing Anda dalam menciptakan proyek yang lebih besar.

13
00:00:53.930 --> 00:00:58.430
Pendekatan kedua hampir merupakan kebalikan total yang hanya untuk mencoba proyek Anda sendiri.

14
00:00:58.580 --> 00:01:03.620
Jadi dia benar-benar menyarankan agar siswa yang merasa sangat percaya diri dalam pemrograman berorientasi

15
00:01:03.620 --> 00:01:08.690
objek atau yang hanya menyukai tantangan ekstra juga setelah meninjau kuliah ini, langsung saja ke

16
00:01:08.690 --> 00:01:14.780
buku catatan kosong atau skrip kosong dan mulai men-debug pengujian Zao dan bermain-main dengan Python untuk lihat apakah

17
00:01:14.780 --> 00:01:16.980
dia bisa membuat game sendiri.

18
00:01:17.000 --> 00:01:20.140
Maka kita agak memiliki di antara yang merupakan buku kerja.

19
00:01:20.180 --> 00:01:24.530
Jadi seperti proyek Moulson pertama, kami benar-benar memiliki buku kerja lengkap

20
00:01:24.530 --> 00:01:31.430
yang memecah seluruh proyek menjadi lebih kecil sub-masalah Hanibal sehingga Anda pada dasarnya membantu membimbing Anda saat Anda mencoba

21
00:01:31.430 --> 00:01:32.360
proyek ini.

22
00:01:32.360 --> 00:01:36.040
Dan kemudian ada kuliah solusi yang membahas buku kerja itu juga.

23
00:01:36.050 --> 00:01:41.390
Jadi sekali lagi jangan ragu untuk mengambil pendekatan yang paling cocok untuk Anda tergantung pada bagaimana Anda mengisi dengan materi

24
00:01:41.390 --> 00:01:42.850
yang baru saja kita bahas.

25
00:01:44.770 --> 00:01:48.880
Jadi seperti yang saya sebutkan untuk proyek ini Anda akan menggunakan pemrograman berorientasi objek untuk

26
00:01:48.880 --> 00:01:50.630
membuat game blackjack dengan Python.

27
00:01:50.830 --> 00:01:54.790
Jadi saya ingin dengan cepat membahas ide utama dari game, membahas objek atau

28
00:01:54.790 --> 00:02:00.880
program yang harus digunakan untuk proyek ini dan kemudian memberikan Anda gambaran singkat dari buku kerja notebook untuk proyek ini.

29
00:02:01.100 --> 00:02:04.890
Jadi untuk versi gim kami, ini akan menjadi versi blackjack yang disederhanakan.

30
00:02:04.940 --> 00:02:09.080
Kami hanya akan memiliki dealer komputer dan pemain manusia dan kami akan

31
00:02:09.080 --> 00:02:13.760
mulai dengan setumpuk kartu yang normal dan Anda akan membuat representasi dek itu dengan

32
00:02:13.760 --> 00:02:15.610
Python menggunakan pemrograman berorientasi objek.

33
00:02:15.640 --> 00:02:20.000
Jadi mari kita cepat membahas permainan apa yang sebenarnya akan terlihat seperti ini untuk orang-orang yang

34
00:02:20.080 --> 00:02:22.310
blackjack asing atau jika Anda blackjack akrab.

35
00:02:22.320 --> 00:02:26.410
Kami akan mendiskusikan hal-hal yang tidak perlu kami pertimbangkan atau kami hanya akan mengabaikan

36
00:02:26.410 --> 00:02:27.430
versi permainan kami.

37
00:02:27.460 --> 00:02:31.870
Jadi konsep dasar dari gim yang akan kami implementasikan dengan Python adalah

38
00:02:31.870 --> 00:02:37.040
bahwa kami memiliki dealer komputer dan kemudian pemain manusia di keyboard dan setumpuk 52 kartu.

39
00:02:37.070 --> 00:02:41.180
Lalu yang terjadi adalah pemain manusia yang memiliki bankroll sehingga Anda diharapkan sudah mulai

40
00:02:41.180 --> 00:02:45.230
berpikir bahwa mereka akan memiliki atribut untuk bankroll mereka seperti yang kita bahas ketika

41
00:02:45.230 --> 00:02:49.120
kita berbicara tentang membuat rekening bank untuk tantangan pemrograman berorientasi objek kita sebelumnya.

42
00:02:49.220 --> 00:02:53.570
Dan dari bankroll itu pemain manusia akan memasang taruhan yang menunjukkan apakah mereka pikir

43
00:02:53.570 --> 00:02:56.120
mereka akan memenangkan set tangan ini atau tidak.

44
00:02:57.690 --> 00:03:02.270
Kemudian apa yang terjadi adalah pemain mulai dengan dua kartu menghadap ke atas

45
00:03:02.270 --> 00:03:10.610
dan dealer mulai dengan satu kartu menghadap ke atas dalam satu kartu menghadap ke bawah pemain pergi pertama dalam permainan bermain tujuan pemain adalah untuk

46
00:03:10.610 --> 00:03:16.190
mendekati nilai total 21 dari dealer tidak dan nilai total hanyalah jumlah dari kartu menghadap ke

47
00:03:16.190 --> 00:03:17.980
atas yang dimiliki pemain manusia.

48
00:03:18.010 --> 00:03:20.630
Dan ada dua tindakan yang mungkin dilakukan pemain manusia.

49
00:03:20.660 --> 00:03:25.490
Mereka dapat menekan yang menerima kartu lain dari dek atau mereka dapat tetap berhenti

50
00:03:25.490 --> 00:03:26.360
menerima kartu.

51
00:03:26.360 --> 00:03:32.420
Kita akan mengabaikan tindakan seperti pemisahan asuransi atau Double Downs yang terjadi di kasino nyata yang bermain

52
00:03:32.420 --> 00:03:33.030
blackjack.

53
00:03:33.170 --> 00:03:34.890
Tapi kami ingin versi sederhana dari game ini.

54
00:03:34.910 --> 00:03:39.890
Jadi yang harus dilakukan pemain adalah memukul yang mengambil kartu dari dek dan meletakkannya di tangan mereka

55
00:03:39.890 --> 00:03:44.450
dan kemudian membawa Anda beberapa di sana atau tinggal yang berarti berhenti menerima kartu.

56
00:03:45.730 --> 00:03:47.810
Jadi misalnya mereka dapat menekan dapatkan kartu baru.

57
00:03:47.830 --> 00:03:49.260
Dan kemudian mereka memeriksa dengan sumus mereka.

58
00:03:49.300 --> 00:03:53.870
Ingat mereka mencoba untuk mendekati nilai 21 daripada dealer.

59
00:03:54.170 --> 00:03:58.370
Jadi begitu pemain telah pergi giliran mereka telah berakhir dan kemudian giliran komputer.

60
00:03:58.370 --> 00:04:04.190
Jika pemain masih di bawah 21 maka dealer memukul sampai mereka mengalahkan pemain atau

61
00:04:04.190 --> 00:04:08.620
dealer gagal sehingga dengan bus kami berarti Anda melewati 21.

62
00:04:08.630 --> 00:04:12.050
Jadi mari kita lihat cara yang mungkin agar permainan bisa berakhir.

63
00:04:12.050 --> 00:04:17.570
Pertama jika pemain terus memukul bahkan sebelum komputer pergi dan mereka melewati 21 maka mereka bangkrut dan

64
00:04:17.660 --> 00:04:21.590
mereka kalah atau bertaruh permainan kemudian berakhir dan dealer mengumpulkan uang.

65
00:04:22.320 --> 00:04:25.010
Jadi itu salah satu cara agar permainan bisa berakhir yaitu penghilang pemain.

66
00:04:25.110 --> 00:04:31.570
Dan ini sebelum dealer komputer bahkan harus pergi dengan cara kedua permainan bisa berakhir adalah jika komputer

67
00:04:31.570 --> 00:04:32.650
mengalahkan dealer.

68
00:04:32.650 --> 00:04:37.990
Jadi yang terjadi adalah pemain manusia pergi mereka mulai mengumpulkan kartu dan kemudian mereka memutuskan untuk tetap

69
00:04:37.990 --> 00:04:38.510
tinggal.

70
00:04:38.530 --> 00:04:43.390
Jadi misalnya jumlah mereka saat ini adalah 19 maka dealer komputer pergi dan mereka mulai memukul kartu sehingga mereka mengumpulkan

71
00:04:43.390 --> 00:04:47.350
kartu dari geladak dan jika mereka memiliki seorang putra yang lebih tinggi daripada pemain manusia dan

72
00:04:47.350 --> 00:04:48.580
masih di bawah 21.

73
00:04:48.730 --> 00:04:51.550
Kemudian komputer telah mengalahkan dealer.

74
00:04:51.740 --> 00:04:55.880
Dan akhirnya pilihan ketiga yang memungkinkan cara permainan berakhir adalah bahwa pemain benar-benar

75
00:04:55.880 --> 00:04:56.280
menang.

76
00:04:56.300 --> 00:04:57.900
Setelah komputer mendapat giliran.

77
00:04:58.100 --> 00:05:02.390
Jadi, dalam versi gim kami yang disederhanakan, yang akan terjadi adalah dealer komputer terus memukul

78
00:05:02.540 --> 00:05:05.420
sampai mereka mengalahkan pemain manusia atau sampai mereka gagal.

79
00:05:05.600 --> 00:05:08.630
Jadi pada akhirnya yang mungkin terjadi adalah terus memukul dan kemudian mereka pingsan.

80
00:05:08.660 --> 00:05:10.820
Maksud saya mereka memiliki lebih dari 21.

81
00:05:10.850 --> 00:05:14.660
Dan jika itu yang terjadi, pemain manusia menang dan mereka benar-benar kemudian melipatgandakan uang taruhan mereka.

82
00:05:14.690 --> 00:05:15.970
Dan itu masuk ke bankroll mereka.

83
00:05:15.980 --> 00:05:18.240
Sekarang kami memiliki pemain manusia yang bahagia.

84
00:05:18.800 --> 00:05:21.950
Jadi mari kita bicara tentang beberapa aturan khusus yang harus ditanamkan.

85
00:05:21.950 --> 00:05:27.540
Salah satunya adalah bahwa kartu wajah seperti Jack Queen dan King akan dihitung sebagai nilai 10.

86
00:05:27.830 --> 00:05:32.360
Jadi kita akan memandu Anda benar-benar membuat representasi dari setumpuk kartu

87
00:05:32.360 --> 00:05:35.740
dan kartu wajah tersebut akan memiliki nilai 10.

88
00:05:36.050 --> 00:05:42.530
Dan kemudian inilah yang sulit adalah ace dapat dihitung sebagai 1 atau 11 yang nilainya lebih

89
00:05:42.530 --> 00:05:43.480
disukai pemain.

90
00:05:43.490 --> 00:05:49.640
Jadi, jika Anda memiliki kartu As di tangan Anda, Anda dapat memperlakukannya sebagai 1 atau 11.

91
00:05:49.820 --> 00:05:53.650
Anda dapat memeriksa tautan sumber daya untuk penjelasan lebih lanjut tentang blackjack dan informasi lebih lanjut tentang itu.

92
00:05:53.840 --> 00:05:57.600
Tapi yang akan kita lakukan sekarang adalah mengeksplorasi proyek itu sendiri dan buku kerja.

93
00:05:57.830 --> 00:06:00.240
Mari kita mulai dengan melompati repositori itu.

94
00:06:00.530 --> 00:06:00.770
BAIK.

95
00:06:00.770 --> 00:06:02.720
Jadi di sini kita berada di repositori.

96
00:06:02.750 --> 00:06:07.150
Jika Anda pergi untuk menyelesaikan bootcamp Python 3 Anda akan melihat folder yang memiliki proyek tonggak sejarah.

97
00:06:07.160 --> 00:06:11.270
Perlu diingat bahwa penomoran mungkin sedikit berbeda jika kita menambahkan folder di masa depan atau mengatur

98
00:06:11.270 --> 00:06:16.660
ulang hal-hal tetapi nama-nama itu harus menjadi proyek tonggak yang sama dan apa yang kita lihat di sini adalah beberapa buku

99
00:06:16.670 --> 00:06:18.010
catatan yang memiliki buku tugas.

100
00:06:18.090 --> 00:06:21.650
Dan jika Anda mengklik buku tugas pada dasarnya hanya menggambarkan seperti apa permainan blackjack

101
00:06:21.650 --> 00:06:22.160
itu.

102
00:06:22.160 --> 00:06:26.330
Kami membuat pemain game blackjack sederhana berbasis hit hit Stan.

103
00:06:26.330 --> 00:06:27.600
Pantau uang pemain.

104
00:06:27.610 --> 00:06:29.980
Ini pada dasarnya apa yang baru saja saya jelaskan dalam slide itu.

105
00:06:30.110 --> 00:06:33.500
Dan kemudian beberapa notebook berikutnya berjalan melalui langkah-langkah buku kerja.

106
00:06:33.650 --> 00:06:37.040
Kami memeriksa bahwa di sini kami melihat berjalan melalui langkah-langkah buku kerja.

107
00:06:37.040 --> 00:06:41.220
Pada dasarnya ini adalah semacam panduan untuk mengatur bagaimana Anda harus mencoba mendekati proyek ini.

108
00:06:41.270 --> 00:06:45.740
Dan ini adalah langkah-langkah dasar yang harus Anda ikuti saat membuat gim cek kosong dan kemudian jika

109
00:06:45.740 --> 00:06:51.620
Anda terus menggulir ke bawah kami memiliki sel dengan beberapa kode kerangka dasarnya di sini untuk Anda isi sehingga Anda dapat melihat kami

110
00:06:51.620 --> 00:06:53.690
telah membuat kartu kelas untuk Anda .

111
00:06:53.690 --> 00:06:57.190
Kami memiliki metode kosong, metode string kosong untuk Anda isi.

112
00:06:57.290 --> 00:07:01.170
Dan kemudian kita memiliki Langkah Tiga buat kelas langkah selanjutnya untuk membantu memandu Anda.

113
00:07:01.220 --> 00:07:06.710
Dan ini semacam penghalang antara mencoba melakukan semuanya sendiri pada awalnya atau dari mencoba melompat lurus dan

114
00:07:06.710 --> 00:07:10.300
mencoba sebagai proyek yang panjang meskipun itu benar-benar baik-baik saja.

115
00:07:10.430 --> 00:07:12.240
Salah satu dari pendekatan itu juga ok.

116
00:07:12.260 --> 00:07:16.020
Kami mencoba memberi Anda sebanyak mungkin opsi untuk gaya belajar yang berbeda.

117
00:07:16.040 --> 00:07:20.840
Jadi ini adalah buku kerja seperti yang Anda miliki untuk proyek tonggak pertama di mana kami perlahan-lahan

118
00:07:20.840 --> 00:07:23.240
memandu Anda melalui berbagai langkah membuat game ini.

119
00:07:23.450 --> 00:07:28.010
Dan pada akhirnya Anda akan memiliki apa yang pada dasarnya hanya loop sementara di sini

120
00:07:28.010 --> 00:07:29.890
yang melewati semua langkah permainan.

121
00:07:29.980 --> 00:07:31.940
Lalu setelah itu kedua notebook lainnya.

122
00:07:31.940 --> 00:07:35.440
Salah satunya adalah buku catatan solusi yang akan kita bahas dalam kuliah berikutnya.

123
00:07:35.570 --> 00:07:40.970
Dan kemudian kami juga memiliki notebook kode solusi dan pada dasarnya semua kode itu ada di buku kerja ini.

124
00:07:40.970 --> 00:07:42.790
Untuk solusi dalam satu sel.

125
00:07:42.800 --> 00:07:47.720
Jadi jika Anda lebih suka menggunakan Sublime Text Editor atau pi charm atau sesuatu yang menggunakan skrip dot

126
00:07:47.720 --> 00:07:53.090
PI Anda dapat menggunakan kode solusi yang kita tidak perlu salin dan tempel dari semua sel yang berbeda di buku kerja.

127
00:07:53.090 --> 00:07:53.580
BAIK.

128
00:07:53.720 --> 00:07:55.300
Jadi pada dasarnya itu.

129
00:07:55.340 --> 00:07:57.080
Sekali lagi Anda agak memiliki tiga pendekatan di sini.

130
00:07:57.100 --> 00:08:00.420
Perlakukan itu sebagai kode sepanjang kuliah dengan hanya melompat langsung ke solusi.

131
00:08:00.530 --> 00:08:04.880
Dan saya akan merekomendasikan melakukan itu jika Anda merasa sedikit tidak nyaman masih beberapa topik pemrograman

132
00:08:04.880 --> 00:08:05.480
berorientasi objek.

133
00:08:05.570 --> 00:08:09.300
Ini adalah bagian terbesar dari kode yang akan Anda tulis sejauh ini.

134
00:08:09.320 --> 00:08:14.990
Jadi banyak siswa cenderung lebih suka kode itu sepanjang proyek dengan cara lain yang bisa Anda lakukan adalah dengan membaca buku

135
00:08:14.990 --> 00:08:15.970
kerja itu sendiri.

136
00:08:15.980 --> 00:08:20.360
Yang baru saja kami jelaskan di sini melihat seberapa jauh Anda bisa mendapatkan solusi referensi ketika Anda perlu.

137
00:08:20.360 --> 00:08:24.170
Dan kemudian cara ketiga untuk programmer yang lebih berpengalaman mungkin orang-orang datang dari bahasa

138
00:08:24.410 --> 00:08:28.670
lain atau orang-orang yang hanya ingin tantangan ekstra membuka notebook baru dan memulai dan melihat seberapa

139
00:08:28.670 --> 00:08:29.830
jauh Anda bisa melangkah.

140
00:08:29.840 --> 00:08:32.000
Sekali lagi kami selalu di sini untuk membantu di forum komunitas.

141
00:08:32.000 --> 00:08:34.450
Jika Anda memiliki pertanyaan, Anda dapat bertanya di sana.

142
00:08:34.640 --> 00:08:37.240
Kami akan menemui Anda di kuliah berikutnya di mana kami mulai membahas solusinya.
