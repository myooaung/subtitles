WEBVTT
1
1

00:00:01.153  -->  00:00:03.132
<v Instructor>Hello everyone, and welcome to the chained</v>
2

2

00:00:03.132  -->  00:00:06.098
comparison operators lecture.
3

3

00:00:06.098  -->  00:00:08.922
So, one of the nice features of Python is this ability
4

4

00:00:08.922  -->  00:00:10.678
to chain multiple comparisons
5

5

00:00:10.678  -->  00:00:13.218
to perform a more complex test.
6

6

00:00:13.218  -->  00:00:15.110
And you can use these chained comparisons
7

7

00:00:15.110  -->  00:00:18.625
as a shorthand for some larger Boolean expressions.
8

8

00:00:18.625  -->  00:00:20.948
So, in this lecture we're gonna learn how to use
9

9

00:00:20.948  -->  00:00:23.745
chained comparison operators, and we're gonna introduce
10

10

00:00:23.745  -->  00:00:25.713
two other important other statements in Python,
11

11

00:00:25.713  -->  00:00:28.865
which is the and and the or statements
12

12

00:00:28.865  -->  00:00:31.577
that I have highlighted here.
13

13

00:00:31.577  -->  00:00:34.382
So let's go ahead and jump into the live code
14

14

00:00:34.382  -->  00:00:35.478
so I can show you show examples
15

15

00:00:35.478  -->  00:00:38.268
of chained comparison operators.
16

16

00:00:38.268  -->  00:00:40.435
Okay, so you remember that
17

17

00:00:41.374  -->  00:00:44.100
we have just normal comparison operators.
18

18

00:00:44.100  -->  00:00:46.767
I can say, is one less than two?
19

19

00:00:47.700  -->  00:00:49.184
That's true.
20

20

00:00:49.184  -->  00:00:51.101
Is two less than three?
21

21

00:00:52.223  -->  00:00:53.573
Well that's also true.
22

22

00:00:53.573  -->  00:00:56.385
So what I can do is I can actually chain these.
23

23

00:00:56.385  -->  00:00:58.968
I can say, is one less than two
24

24

00:01:00.338  -->  00:01:03.705
and, is less two less than three?
25

25

00:01:03.705  -->  00:01:05.299
And that'll output true.
26

26

00:01:05.299  -->  00:01:09.279
So, that statement will check if one was less than two
27

27

00:01:09.279  -->  00:01:11.811
and, if two was less than three.
28

28

00:01:11.811  -->  00:01:13.612
So, another way I could've written that
29

29

00:01:13.612  -->  00:01:16.376
is with an and statement in Python.
30

30

00:01:16.376  -->  00:01:20.155
So I could've said, is one less than two
31

31

00:01:20.155  -->  00:01:23.419
and, is the condition three, excuse me,
32

32

00:01:23.419  -->  00:01:25.480
two, less than three?
33

33

00:01:25.480  -->  00:01:26.313
Also true.
34

34

00:01:27.924  -->  00:01:31.457
So, that checks, makes sure that basically
35

35

00:01:31.457  -->  00:01:33.726
the and is used to make sure two checks
36

36

00:01:33.726  -->  00:01:35.734
have to be true in order for that
37

37

00:01:35.734  -->  00:01:38.156
total Boolean check to be true.
38

38

00:01:38.156  -->  00:01:41.024
Let's go ahead and see another example.
39

39

00:01:41.024  -->  00:01:44.774
So, one less than three, we know that's true.
40

40

00:01:46.100  -->  00:01:48.512
Three greater than two, we know that's also true.
41

41

00:01:48.512  -->  00:01:49.821
So I can chain these together,
42

42

00:01:49.821  -->  00:01:52.321
I can say one less than three,
43

43

00:01:53.550  -->  00:01:56.133
and, is three greater than two.
44

44

00:01:57.342  -->  00:01:58.342
Oops, sorry.
45

45

00:01:59.350  -->  00:02:01.234
Greater than two.
46

46

00:02:01.234  -->  00:02:02.829
And that's true.
47

47

00:02:02.829  -->  00:02:05.499
So another way I can write that is with the and statement.
48

48

00:02:05.499  -->  00:02:07.931
So I can say, is one less than three
49

49

00:02:07.931  -->  00:02:10.514
and, is three greater than two?
50

50

00:02:11.934  -->  00:02:13.693
And that'll output true.
51

51

00:02:13.693  -->  00:02:15.499
So it's important to note that Python is actually
52

52

00:02:15.499  -->  00:02:18.511
checking both instances of the comparisons.
53

53

00:02:18.511  -->  00:02:22.687
And we can also use or to write comparisons in Python.
54

54

00:02:22.687  -->  00:02:24.770
For example, I could say,
55

55

00:02:26.078  -->  00:02:27.245
one equal two,
56

56

00:02:29.198  -->  00:02:31.118
which we know is false.
57

57

00:02:31.118  -->  00:02:35.091
Two, less than three, which we know is true.
58

58

00:02:35.091  -->  00:02:38.554
So what if I wanted, just either of these things to be true?
59

59

00:02:38.554  -->  00:02:40.963
Just one or the other.
60

60

00:02:40.963  -->  00:02:42.460
That's where the or statement comes in.
61

61

00:02:42.460  -->  00:02:46.377
So I can say, hey check if one is equal to two,
62

62

00:02:48.147  -->  00:02:52.111
or, also check if two is greater than, excuse me,
63

63

00:02:52.111  -->  00:02:55.523
let's say it's greater than one.
64

64

00:02:55.523  -->  00:02:59.854
So, as long as one of these statements happens to be true,
65

65

00:02:59.854  -->  00:03:02.243
then we'll get a true, so,
66

66

00:03:02.243  -->  00:03:05.189
or means it's only checking that one of the instances
67

67

00:03:05.189  -->  00:03:07.158
happens to be true.
68

68

00:03:07.158  -->  00:03:09.223
Because we're using the or operator.
69

69

00:03:09.223  -->  00:03:12.639
So it needs one or the other to be true.
70

70

00:03:12.639  -->  00:03:14.224
Let's take a look at one more example
71

71

00:03:14.224  -->  00:03:16.035
just to drive the point home.
72

72

00:03:16.035  -->  00:03:18.595
So we know one is equal to one, and I'm gonna write
73

73

00:03:18.595  -->  00:03:20.345
or, 100 equal to one.
74

74

00:03:21.769  -->  00:03:25.697
So it just needed one or the other to be true.
75

75

00:03:25.697  -->  00:03:28.622
And, one equals one was true.
76

76

00:03:28.622  -->  00:03:31.882
So, that's just it as far as chained comparison operators.
77

77

00:03:31.882  -->  00:03:33.376
Just a quick overview.
78

78

00:03:33.376  -->  00:03:35.032
You can go ahead and check out the Jupyter Notebook
79

79

00:03:35.032  -->  00:03:37.911
if you wanna, some more detail on what we just did,
80

80

00:03:37.911  -->  00:03:40.381
but, that's basically it, so.
81

81

00:03:40.381  -->  00:03:42.300
You should a comfortable understanding of,
82

82

00:03:42.300  -->  00:03:46.807
what and's and the or statements are doing in your code.
83

83

00:03:46.807  -->  00:03:48.115
But you can basically treat them
84

84

00:03:48.115  -->  00:03:51.233
as these chained comparison operators.
85

85

00:03:51.233  -->  00:03:53.627
So go ahead and go to the quiz for this section
86

86

00:03:53.627  -->  00:03:55.529
to check your understanding.
87

87

00:03:55.529  -->  00:03:56.952
All right, that's it.
88

88

00:03:56.952  -->  00:03:58.285
Thanks everyone.
