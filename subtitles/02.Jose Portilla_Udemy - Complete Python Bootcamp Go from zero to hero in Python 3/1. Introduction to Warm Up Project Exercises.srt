1
00:00:05,340 --> 00:00:10,920
Willkommen, alle zusammen, in diesem Meilenstein-Projektabschnitt des Kurses beginnen wir diesen Abschnitt mit

2
00:00:10,950 --> 00:00:14,250
ein paar Übungen zum Aufwärmen des Projekts.

3
00:00:15,770 --> 00:00:21,260
Wir sind fast bereit für Sie, ein vollständiges interaktives Python-Programm für Ihr bevorstehendes Meilensteinprojekt zu

4
00:00:21,260 --> 00:00:21,740
erstellen.

5
00:00:22,100 --> 00:00:24,710
Sie erstellen ein interaktives Tic Tac Toe-Spiel.

6
00:00:26,020 --> 00:00:31,450
Um sich für dieses Projekt aufzuwärmen, werden wir einige Übungen zusammenstellen, damit Sie sehen, wie

7
00:00:31,450 --> 00:00:34,030
Sie Python-Code verwenden, um Folgendes zu tun.

8
00:00:34,600 --> 00:00:41,080
Holen Sie sich Benutzereingaben, bearbeiten Sie eine Variable in Ihrem Python-Skript oder -Programm basierend auf dieser Eingabe und

9
00:00:41,080 --> 00:00:43,300
geben Sie die angepasste Variable zurück.

10
00:00:43,930 --> 00:00:49,930
Sie kennen also bereits die gesamte Python, die erforderlich ist, um so etwas wie ein Tic Tac Toe-Spiel zu erstellen.

11
00:00:50,440 --> 00:00:56,200
Für Anfänger ist es jedoch oft schwierig zu erkennen, wie all diese beweglichen Teile und Teile miteinander

12
00:00:56,200 --> 00:00:59,290
verbunden werden können, um ein interaktives Programm zu erstellen.

13
00:00:59,650 --> 00:01:04,660
Deshalb haben wir nur ein paar Übungen und kurze Vorträge, um Ihnen nur einige einfache Beispiele zu

14
00:01:04,660 --> 00:01:06,640
zeigen, wie dies getan werden kann.

15
00:01:07,180 --> 00:01:11,740
Aber zuerst beschreiben wir einfach, was ein interaktives Programm im Allgemeinen macht.

16
00:01:13,190 --> 00:01:17,810
Sie müssen also eine Art visuelle Darstellung haben, die Ihr Benutzer sehen wird.

17
00:01:18,260 --> 00:01:24,140
So verwende ich hier beispielsweise Folien, um Informationen tatsächlich anzuzeigen, und dann.

18
00:01:25,130 --> 00:01:28,820
Wenn Sie ein Spiel bauen, könnte das so etwas wie ein Tic Tac Toe Board sein.

19
00:01:29,240 --> 00:01:33,890
In jedem interaktiven Programm sollte es also eine Art visuelle Darstellung geben, die ein Benutzer sehen kann.

20
00:01:34,520 --> 00:01:41,000
Und um dieses Programm zu aktualisieren, muss der Benutzer eine Entscheidung treffen und diese Entscheidung basierend auf

21
00:01:41,000 --> 00:01:43,610
dem, was er visuell sieht, eingeben.

22
00:01:44,210 --> 00:01:49,430
Wenn Sie beispielsweise Tic Tac Toe spielen, ist eine Benutzereingabe so etwas wie die Auswahl der

23
00:01:49,430 --> 00:01:53,240
oberen rechten Ecke für das Oh, um dieses Spiel zu gewinnen.

24
00:01:54,990 --> 00:01:58,470
Dann würde diese Benutzereingabe in eine Art Python-Funktion gehen.

25
00:01:59,720 --> 00:02:07,010
Dann aktualisieren wir in diesem Python-Skript oder -Notizbuch die Board-Variable und haben dann ein neues Bild, das dem

26
00:02:07,010 --> 00:02:08,620
Benutzer angezeigt wird.

27
00:02:09,760 --> 00:02:15,040
Und dann haben wir die aktualisierte visuelle Darstellung und im Wesentlichen kann dieser Zyklus immer

28
00:02:15,040 --> 00:02:18,520
wieder vorkommen, um nur ein interaktives Fronting-Programm zu haben.

29
00:02:18,760 --> 00:02:21,730
Dies ist also ein sehr einfaches Beispiel für ein Tic Tac Toe Board.

30
00:02:22,000 --> 00:02:28,390
Im Wesentlichen folgt die von Ihnen verwendete interaktive Software einer sehr einfachen Logik wie dieser.

31
00:02:28,780 --> 00:02:34,450
Das eigentliche Skript, das ausgeführt wird und das extrem kompliziert sein kann, hängt davon ab, wie viele

32
00:02:34,450 --> 00:02:37,810
Optionen es gibt und wie komplex die Berechnungen sein können.

33
00:02:38,080 --> 00:02:41,470
Insgesamt zeigen Sie jedoch nur eine visuelle Darstellung.

34
00:02:41,740 --> 00:02:48,190
Akzeptieren Sie Benutzereingaben, lassen Sie diese in Ihrem Python-Skript aktualisieren und zeigen Sie dann immer wieder ein

35
00:02:48,190 --> 00:02:49,780
aktualisiertes Bild an.

36
00:02:51,430 --> 00:02:56,680
Wie bereits erwähnt, zeigen die meisten Programme in unserer interaktiven Arbeit an dieser sehr einfachen Idee dem

37
00:02:56,680 --> 00:02:57,670
Benutzer etwas Visuelles.

38
00:02:58,030 --> 00:03:02,140
Lassen Sie den Benutzer oder eine Interaktion die Variablen im Programm aktualisieren.

39
00:03:02,500 --> 00:03:07,120
Anschließend werden diese Variablen durchlaufen, um das aktualisierte Bild anzuzeigen.

40
00:03:07,480 --> 00:03:12,220
Dort besteht also eine Verbindung zwischen den internen Variablen und dem, was der Benutzer als visuell ansieht.

41
00:03:13,590 --> 00:03:18,210
In der nächsten Reihe von kurzen Vorlesungen werden wir Sie durch Beispiele führen,

42
00:03:18,210 --> 00:03:21,870
wie Sie jede dieser einzelnen Aufgaben mit Python ausführen können.

43
00:03:22,530 --> 00:03:27,570
Beachten Sie, dass es viele verschiedene Möglichkeiten gibt, dieselbe Aufgabe auszuführen, z. B. die Ausgabe zu

44
00:03:27,720 --> 00:03:30,990
spreizen oder Variablen intern in Ihrem Python-Skript zu bearbeiten.

45
00:03:31,380 --> 00:03:36,180
Ich möchte also nicht, dass Sie sich durch die Beispiele, die wir hier zeigen, eingeschränkt fühlen. Nur so können Sie dies tun.

46
00:03:36,510 --> 00:03:38,040
Dies sind nur einfache Beispiele.

47
00:03:38,130 --> 00:03:43,680
Damit Sie die Punkte zwischen dem, was Sie bereits gelernt haben, und dem Erstellen eines interaktiven Programms verbinden

48
00:03:43,680 --> 00:03:44,100
können.

49
00:03:44,550 --> 00:03:45,600
OK, fangen wir an.

50
00:03:45,810 --> 00:03:46,790
Wir sehen uns bei der nächsten Vorlesung.
