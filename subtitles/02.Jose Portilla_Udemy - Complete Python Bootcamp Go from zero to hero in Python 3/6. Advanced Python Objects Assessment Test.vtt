WEBVTT
1
1

00:00:01.902  -->  00:00:02.735
<v Voice Over>Hey Every one.</v>
2

2

00:00:02.735  -->  00:00:05.077
Welcome to the advanced Python objects test.
3

3

00:00:05.077  -->  00:00:07.904
So, this will actually be probably a pretty brief test.
4

4

00:00:07.904  -->  00:00:10.062
But an interesting one.
5

5

00:00:10.062  -->  00:00:13.798
As always, just go to the advanced Python objects test.
6

6

00:00:13.798  -->  00:00:16.082
Notebook. You can click the download link on the right.
7

7

00:00:16.082  -->  00:00:17.689
And fill it in yourself.
8

8

00:00:17.689  -->  00:00:19.469
I'm just gonna go over the problems quickly
9

9

00:00:19.469  -->  00:00:21.827
so there's no confusion.
10

10

00:00:21.827  -->  00:00:24.306
First problem that you're gonna do is convert
11

11

00:00:24.306  -->  00:00:27.231
the number 1024 to binary and hexadecimal
12

12

00:00:27.231  -->  00:00:29.134
representation.
13

13

00:00:29.134  -->  00:00:30.980
Problem two. I want you to round
14

14

00:00:30.980  -->  00:00:33.480
5.23222 to two decimal places.
15

15

00:00:34.574  -->  00:00:36.219
That was a lot of twos.
16

16

00:00:36.219  -->  00:00:39.131
Okay, next moving on the the advanced strings.
17

17

00:00:39.131  -->  00:00:42.925
Here, I want you to check if every letter in the string S
18

18

00:00:42.925  -->  00:00:44.390
is lower case.
19

19

00:00:44.390  -->  00:00:47.532
And, use the methods you've learned in this section
20

20

00:00:47.532  -->  00:00:49.174
of the course.
21

21

00:00:49.174  -->  00:00:51.087
Problem four, what I want you to do
22

22

00:00:51.087  -->  00:00:53.102
is check how many times does the letter
23

23

00:00:53.102  -->  00:00:55.602
W show up in the string below.
24

24

00:00:56.569  -->  00:00:59.367
After that, advanced sets.
25

25

00:00:59.367  -->  00:01:00.598
Problem five.
26

26

00:01:00.598  -->  00:01:02.387
I want you to find the elements in set one
27

27

00:01:02.387  -->  00:01:04.686
that are not in set two.
28

28

00:01:04.686  -->  00:01:06.020
Then, I want you to find all the elements
29

29

00:01:06.020  -->  00:01:09.517
that are in either set for problem six.
30

30

00:01:09.517  -->  00:01:11.450
In advanced dictionaries, problem seven.
31

31

00:01:11.450  -->  00:01:14.170
I want you to create this dictionary right here.
32

32

00:01:14.170  -->  00:01:16.826
So, note the pattern, what's going on?
33

33

00:01:16.826  -->  00:01:19.117
And then I want you to use dictionary comprehension
34

34

00:01:19.117  -->  00:01:21.580
to create that dictionary.
35

35

00:01:21.580  -->  00:01:23.943
Then advanced lists, just reverse and
36

36

00:01:23.943  -->  00:01:25.964
sort the list below.
37

37

00:01:25.964  -->  00:01:29.235
Okay, that's it and good luck.
38

38

00:01:29.235  -->  00:01:31.233
Honestly, if you're this far into the course,
39

39

00:01:31.233  -->  00:01:33.483
you may not even feel like you need to be tested, so
40

40

00:01:33.483  -->  00:01:35.746
if you feel that way, go ahead and feel free
41

41

00:01:35.746  -->  00:01:38.714
to skip this advanced Python objects test.
42

42

00:01:38.714  -->  00:01:40.918
But, hopefully it should be pretty straight forward to you.
43

43

00:01:40.918  -->  00:01:42.926
By this point in the course.
44

44

00:01:42.926  -->  00:01:44.843
Okay, thanks everyone.
