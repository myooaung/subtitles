1
1

00:00:01,691  -->  00:00:04,119
<v ->Hello everyone, and welcome to your lecture on</v>
2

2

00:00:04,119  -->  00:00:06,625
Object Oriented Programming.
3

3

00:00:06,625  -->  00:00:10,844
Now Object Oriented Programming, or otherwise known as OOP,
4

4

00:00:10,844  -->  00:00:13,423
tends to be one of the major obstacles for beginners
5

5

00:00:13,423  -->  00:00:15,815
when they're first starting to learn Python.
6

6

00:00:15,815  -->  00:00:19,136
So there's many many tutorials and lessons covering OOP
7

7

00:00:19,136  -->  00:00:21,357
so feel free to Google search other lessons
8

8

00:00:21,357  -->  00:00:23,827
and I will also put some links to other useful tutorials
9

9

00:00:23,827  -->  00:00:25,722
at the bottom of the Jupyter Notebook
10

10

00:00:25,722  -->  00:00:27,626
if you scroll down here.
11

11

00:00:27,626  -->  00:00:30,266
There's four really nice other great resources
12

12

00:00:30,266  -->  00:00:32,588
on Object Oriented Programming
13

13

00:00:32,588  -->  00:00:35,370
to serve as extra learning material for you
14

14

00:00:35,370  -->  00:00:38,505
as you learn about Object Oriented Programming.
15

15

00:00:38,505  -->  00:00:41,100
So for this lesson, we're gonna construct our knowledge
16

16

00:00:41,100  -->  00:00:44,084
of OOP by building on the following topics.
17

17

00:00:44,084  -->  00:00:47,096
We're gonna start by learning about objects themselves
18

18

00:00:47,096  -->  00:00:49,511
and remembering what it means to be an object.
19

19

00:00:49,511  -->  00:00:51,924
Then we're learn about using the class keyword.
20

20

00:00:51,924  -->  00:00:54,231
Then we'll create class attributes.
21

21

00:00:54,231  -->  00:00:56,859
We'll create methods within a class.
22

22

00:00:56,859  -->  00:00:58,566
We'll learn about inheritance,
23

23

00:00:58,566  -->  00:01:01,903
and then we'll learn about Special Methods for classes.
24

24

00:01:01,903  -->  00:01:04,262
We're gonna take this very slowly and methodically
25

25

00:01:04,262  -->  00:01:07,568
and most likely this Object Oriented Programming lecture
26

26

00:01:07,568  -->  00:01:10,012
will be broken up into smaller chunks
27

27

00:01:10,012  -->  00:01:12,842
so they're easier to digest, if you will.
28

28

00:01:12,842  -->  00:01:15,158
Okay, so we're gonna start by remembering
29

29

00:01:15,158  -->  00:01:17,408
about Basic Python Objects.
30

30

00:01:19,230  -->  00:01:21,363
And before we begin with the live coding,
31

31

00:01:21,363  -->  00:01:23,575
I actually really encourage you to just go ahead
32

32

00:01:23,575  -->  00:01:26,727
and read through the entire Jupyter Notebook here
33

33

00:01:26,727  -->  00:01:28,537
before you actually see this video
34

34

00:01:28,537  -->  00:01:31,247
just so you at least see everything once
35

35

00:01:31,247  -->  00:01:33,569
before jumping into the LiveCode.
36

36

00:01:33,569  -->  00:01:37,263
Now go ahead and after your done reading this notebook
37

37

00:01:37,263  -->  00:01:39,173
'cause there's actually a a lot of text here for you to read
38

38

00:01:39,173  -->  00:01:40,551
that'll help your understanding
39

39

00:01:40,551  -->  00:01:41,661
which I'm going to explain right now
40

40

00:01:41,661  -->  00:01:43,078
throughout the video lecture,
41

41

00:01:43,078  -->  00:01:45,938
but it's nice that you've at least seen it once before.
42

42

00:01:45,938  -->  00:01:49,301
Okay, let's go and hop over to the actual coding now.
43

43

00:01:49,301  -->  00:01:51,582
So let's start the lesson by remembering about
44

44

00:01:51,582  -->  00:01:53,382
Basic Python Objects.
45

45

00:01:53,382  -->  00:01:56,807
So for example, lets make a list.
46

46

00:01:56,807  -->  00:01:59,709
Remember lists, just use brackets.
47

47

00:01:59,709  -->  00:02:00,542
There we have our lists.
48

48

00:02:00,542  -->  00:02:02,961
And remember how we can call methods on a list.
49

49

00:02:02,961  -->  00:02:06,049
So we have our object, l, which is a list
50

50

00:02:06,049  -->  00:02:07,826
and I can call various methods on it.
51

51

00:02:07,826  -->  00:02:09,743
So I could say count...
52

52

00:02:11,285  -->  00:02:13,247
Count how many times two shows up.
53

53

00:02:13,247  -->  00:02:15,512
And we're basically going to be doing in this lecture
54

54

00:02:15,512  -->  00:02:18,596
is exploring how we could create an object type,
55

55

00:02:18,596  -->  00:02:19,767
like a list.
56

56

00:02:19,767  -->  00:02:22,286
So we've learned about how to create functions
57

57

00:02:22,286  -->  00:02:23,786
such as def square
58

58

00:02:26,131  -->  00:02:27,464
where you return
59

59

00:02:28,498  -->  00:02:29,964
that num
60

60

00:02:29,964  -->  00:02:30,887
to the power of two.
61

61

00:02:30,887  -->  00:02:33,264
So we've learned about how to create functions,
62

62

00:02:33,264  -->  00:02:35,098
but you can imagine what would happen if you wanted
63

63

00:02:35,098  -->  00:02:38,372
to create an object like a list.
64

64

00:02:38,372  -->  00:02:40,619
Like how would you actually code that in Python?
65

65

00:02:40,619  -->  00:02:42,151
And that's where Object Oriented Programming
66

66

00:02:42,151  -->  00:02:43,646
is gonna come into place.
67

67

00:02:43,646  -->  00:02:47,813
So in Python, let's go ahead and start learning about
68

68

00:02:48,995  -->  00:02:49,828
objects.
69

69

00:02:52,055  -->  00:02:54,118
So in Python, everything is an object.
70

70

00:02:54,118  -->  00:02:56,135
And remember this from previous lectures.
71

71

00:02:56,135  -->  00:02:58,089
We can use the type function
72

72

00:02:58,089  -->  00:03:00,399
to check the type of object something is.
73

73

00:03:00,399  -->  00:03:01,732
So for instance,
74

74

00:03:02,912  -->  00:03:04,829
I have an integer, one.
75

75

00:03:05,882  -->  00:03:08,169
And if I use the type function on that,
76

76

00:03:08,169  -->  00:03:10,474
it'll tell me what type of object it is.
77

77

00:03:10,474  -->  00:03:11,767
It's an int object.
78

78

00:03:11,767  -->  00:03:13,744
That's its object type.
79

79

00:03:13,744  -->  00:03:16,908
What if I wanted to check the type for
80

80

00:03:16,908  -->  00:03:18,123
this list that I just made?
81

81

00:03:18,123  -->  00:03:20,206
Which is one, two, three.
82

82

00:03:21,876  -->  00:03:25,252
It's a type list, so that a type of object it is.
83

83

00:03:25,252  -->  00:03:27,332
And let's just really drive the point home.
84

84

00:03:27,332  -->  00:03:30,047
Let's go ahead and make it a tuple.
85

85

00:03:30,047  -->  00:03:31,486
One, two.
86

86

00:03:31,486  -->  00:03:32,569
It's a tuple.
87

87

00:03:33,844  -->  00:03:36,555
Let's go ahead and make a dictionary.
88

88

00:03:36,555  -->  00:03:37,388
Say k1,
89

89

00:03:38,314  -->  00:03:39,969
one.
90

90

00:03:39,969  -->  00:03:41,710
Tells you type is dict.
91

91

00:03:41,710  -->  00:03:44,837
Okay, so now we know that everything in Python
92

92

00:03:44,837  -->  00:03:46,238
is an object,
93

93

00:03:46,238  -->  00:03:47,838
and we can actually use type
94

94

00:03:47,838  -->  00:03:50,330
to check the type of object something is.
95

95

00:03:50,330  -->  00:03:51,856
So we know all these things are objects.
96

96

00:03:51,856  -->  00:03:54,185
So how do we create our own object types?
97

97

00:03:54,185  -->  00:03:57,900
And that's where the class keyword comes in.
98

98

00:03:57,900  -->  00:04:00,349
So we'll be using the class keyword
99

99

00:04:00,349  -->  00:04:03,363
in order to create our own object types.
100

100

00:04:03,363  -->  00:04:05,049
Okay, so I'm actually going to
101

101

00:04:05,049  -->  00:04:07,310
stop this first part of the lecture here.
102

102

00:04:07,310  -->  00:04:09,830
Make sure you read through this entire Jupyter Notebook
103

103

00:04:09,830  -->  00:04:11,612
before continuing on with the other lectures
104

104

00:04:11,612  -->  00:04:13,980
in the Object Oriented Programming series
105

105

00:04:13,980  -->  00:04:15,685
or section of the course.
106

106

00:04:15,685  -->  00:04:19,852
And keep in mind that in Python everything is an object.
107

107

00:04:21,961  -->  00:04:24,410
And to drive that point home,
108

108

00:04:24,410  -->  00:04:28,580
I will show one more example of everything being an object.
109

109

00:04:28,580  -->  00:04:30,430
So remember we could create functions.
110

110

00:04:30,430  -->  00:04:31,645
Square,
111

111

00:04:31,645  -->  00:04:32,478
again.
112

112

00:04:33,316  -->  00:04:34,149
Return
113

113

00:04:35,362  -->  00:04:37,096
Num to the power of two.
114

114

00:04:37,096  -->  00:04:39,824
So even that square function in Python,
115

115

00:04:39,824  -->  00:04:41,881
it is an object itself.
116

116

00:04:41,881  -->  00:04:43,650
And what type of object it is?
117

117

00:04:43,650  -->  00:04:45,512
It's a function object.
118

118

00:04:45,512  -->  00:04:48,648
So keep in mind that everything in Python is an object.
119

119

00:04:48,648  -->  00:04:51,585
And now we're gonna learn how to use the class keyword
120

120

00:04:51,585  -->  00:04:53,259
to create our own objects.
121

121

00:04:53,259  -->  00:04:55,479
An Object Oriented Programming in Python
122

122

00:04:55,479  -->  00:04:58,457
is gonna be highly dependent on that class keyword.
123

123

00:04:58,457  -->  00:05:02,319
Okay, so make sure you read this entire Jupyter Notebook
124

124

00:05:02,319  -->  00:05:03,787
before continuing on
125

125

00:05:03,787  -->  00:05:05,593
and then you'll come in fully prepped
126

126

00:05:05,593  -->  00:05:07,455
for the upcoming videos.
127

127

00:05:07,455  -->  00:05:09,615
Okay, and just a quick reminder,
128

128

00:05:09,615  -->  00:05:12,121
there's also, at the bottom, of this Jupyter Notebook
129

129

00:05:12,121  -->  00:05:15,545
four other great resources in Object Oriented Programming.
130

130

00:05:15,545  -->  00:05:17,817
And the reason I'm stressing so much that you read this
131

131

00:05:17,817  -->  00:05:19,191
and take your time with it
132

132

00:05:19,191  -->  00:05:20,585
is that a lot of people get stuck
133

133

00:05:20,585  -->  00:05:21,855
on Object Oriented Programming
134

134

00:05:21,855  -->  00:05:23,622
when they're first learning about Python.
135

135

00:05:23,622  -->  00:05:25,113
And it's a bit of a learning curve,
136

136

00:05:25,113  -->  00:05:27,889
but once you get it, you'll feel that it suddenly clicks
137

137

00:05:27,889  -->  00:05:29,185
and you understand why you're using
138

138

00:05:29,185  -->  00:05:30,962
Object Oriented Programming.
139

139

00:05:30,962  -->  00:05:35,129
Okay, so in the next video we'll explain about class.
