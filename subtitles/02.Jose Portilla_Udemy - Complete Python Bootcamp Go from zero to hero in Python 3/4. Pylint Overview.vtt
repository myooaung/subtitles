WEBVTT
1
00:00:05.460 --> 00:00:06.620
Selamat datang kembali semuanya.

2
00:00:06.630 --> 00:00:10.970
Sekarang kita mengerti bagaimana menangani kesalahan dan pengecualian di Python, coba kecuali.

3
00:00:11.010 --> 00:00:12.600
Akhirnya blok kode.

4
00:00:12.630 --> 00:00:14.950
Mari kita beralih ke membahas pengujian unit.

5
00:00:16.210 --> 00:00:21.250
Ketika Anda mulai memperluas ke proyek multi-file yang lebih besar atau Anda mulai bekerja dengan tim yang lebih

6
00:00:21.250 --> 00:00:24.760
besar dari Anda sendiri, menjadi sangat penting untuk memiliki tes di tempat.

7
00:00:24.880 --> 00:00:29.710
Dengan cara ini saat Anda atau anggota tim Anda membuat perubahan atau memperbarui kode Anda, Anda dapat menjalankan file pengujian

8
00:00:29.710 --> 00:00:32.250
Anda untuk memastikan kode sebelumnya masih berjalan seperti yang diharapkan.

9
00:00:33.490 --> 00:00:36.240
Ada beberapa alat pengujian dan kami akan fokus pada dua.

10
00:00:36.240 --> 00:00:40.270
Ada yang lain yang disebutkan dalam buku catatan yang sejalan dengan kuliah ini, tetapi kita akan

11
00:00:40.270 --> 00:00:41.170
fokus pada tiang.

12
00:00:41.260 --> 00:00:44.980
Dan ini adalah perpustakaan yang secara umum melihat kode Anda dan melaporkan kembali.

13
00:00:44.980 --> 00:00:46.150
Kemungkinan masalah.

14
00:00:46.150 --> 00:00:47.500
Mungkin Anda memiliki masalah styling.

15
00:00:47.500 --> 00:00:52.270
Atau mungkin Anda memiliki beberapa kode yang tidak valid dan akan melaporkan kembali masalah kode Anda.

16
00:00:52.270 --> 00:00:54.100
Kemudian kita memiliki perpustakaan unit test.

17
00:00:54.100 --> 00:00:58.780
Ini adalah pustaka bawaan dengan python yang akan memungkinkan Anda untuk menguji program Anda sendiri

18
00:00:58.780 --> 00:01:01.830
dan kemudian memeriksa apakah Anda mendapatkan hasil yang diinginkan.

19
00:01:01.860 --> 00:01:06.080
Kami akan mulai dengan menunjukkan kepada Anda bagaimana menggunakan pilot untuk memeriksa kode Anda untuk kemungkinan kesalahan dan gaya.

20
00:01:06.090 --> 00:01:08.040
Dan jika Anda bertanya-tanya apa yang saya maksud dengan gaya.

21
00:01:08.190 --> 00:01:11.590
Python memiliki seperangkat aturan konvensi gaya yang dikenal sebagai pep A.

22
00:01:11.640 --> 00:01:16.200
Saya akan menunjukkan kepada Anda yang ada di dokumentasi dan kemudian setelah itu kita akan

23
00:01:16.200 --> 00:01:20.430
mengeksplorasi bagaimana menguji kode kita adalah pustaka uji unit bawaan untuk kuliah ini.

24
00:01:20.430 --> 00:01:24.780
Kami akan membuat skrip dan subline karena ini adalah contoh yang lebih realistis tentang

25
00:01:24.780 --> 00:01:27.240
bagaimana Anda akan benar-benar menggunakan program ini.

26
00:01:27.240 --> 00:01:29.770
Anda masih dapat menggunakan buku catatan terkait untuk kode.

27
00:01:29.850 --> 00:01:33.910
Ini memiliki banyak file yang benar perintah Jupiter sihir untuk membuat tulisan postscript.

28
00:01:34.010 --> 00:01:39.890
Jadi, jika Anda benar-benar berniat menempel di Jupiter, buku catatan Juber memang berfungsi untuk kuliah ini, tetapi dalam pembuatan

29
00:01:40.130 --> 00:01:44.480
film yang sebenarnya, kami akan menggunakan editor teks karena itu sedikit lebih realistis.

30
00:01:44.520 --> 00:01:46.150
OK, mari kita mulai.

31
00:01:46.530 --> 00:01:50.010
OK, hal pertama yang perlu kita lakukan adalah menginstal perpustakaan pilot.

32
00:01:50.070 --> 00:01:52.530
Jadi mari kita lanjutkan dan lakukan itu di baris perintah kita.

33
00:01:52.530 --> 00:01:57.420
Jadi jika Anda adalah baris perintah atau terminal Anda jika Anda berada di Mac OS atau Linux atau yang perlu Anda lakukan adalah

34
00:01:57.420 --> 00:01:58.330
langsung ke baris perintah.

35
00:01:58.350 --> 00:02:00.990
Jangan panggil Python sebelum ini hanyalah sebuah lubang.

36
00:02:01.510 --> 00:02:04.850
Instal masukkan diam.

37
00:02:04.950 --> 00:02:07.400
Jadi itu sebabnya L dan T.

38
00:02:07.410 --> 00:02:09.110
Saat ini saya sudah siap untuk pergi.

39
00:02:09.150 --> 00:02:11.210
Karena itu datang dengan distribusi Anaconda saya.

40
00:02:11.340 --> 00:02:15.900
Itu mungkin terjadi untuk Anda, tetapi pastikan Anda menjalankan baris ini hanya untuk memeriksa sudah memilikinya.

41
00:02:15.960 --> 00:02:19.560
Setelah Anda siap, mari kembali ke editor teks kami.

42
00:02:19.560 --> 00:02:24.210
Baiklah jadi saya di sini di editor teks dan saya akan membuat file dot

43
00:02:24.210 --> 00:02:34.340
py yang sangat sederhana jadi biarkan saya menyimpan file save dan saya akan menyimpan ini ke desktop saya dan saya akan menyimpan ini sebagai satu kue sederhana hanya file yang sangat sederhana

44
00:02:34.380 --> 00:02:35.880
yang dapat Anda simpan.

45
00:02:35.880 --> 00:02:39.340
Atau pernah Anda inginkan selama Anda dapat menelepon di baris perintah.

46
00:02:39.600 --> 00:02:44.130
Jika Anda tidak terbiasa dengan cara menjalankan skrip seperti ini, pastikan Anda kembali dan

47
00:02:44.130 --> 00:02:47.920
mengunjungi dosen di awal kursus yang disebut Menjalankan kode Python.

48
00:02:47.940 --> 00:02:54.300
Ok jadi saya akan mengatakan AES sama dengan 1 dan perhatikan memiliki penyorotan sintaks yang berarti terdaftar itu adalah

49
00:02:54.300 --> 00:02:55.470
titik demi file.

50
00:02:55.720 --> 00:02:57.310
Maka saya akan mengatakan sama dengan dua.

51
00:02:57.340 --> 00:03:03.060
Perhatikan huruf kecil saya ada di sini maka saya akan mengatakan cetak dan kemudian saya akan mengatakan cetak.

52
00:03:03.110 --> 00:03:05.050
Dan saya akan membuat kesalahan di sini dengan sengaja.

53
00:03:05.060 --> 00:03:09.650
Saya akan mengatakan modal cetak-T bahkan persediaan Texas mengatakan kepada saya hei saya pikir maksud Anda huruf kecil tetapi kita

54
00:03:09.860 --> 00:03:11.370
akan mengabaikan itu untuk saat ini.

55
00:03:11.420 --> 00:03:15.800
Jadi ini hanya skrip yang sangat sederhana tetapi pasti ada kesalahan di sini.

56
00:03:15.800 --> 00:03:20.570
Jadi seperti yang dapat Anda bayangkan dengan empat baris itu cukup mudah untuk menangkap kesalahan ini tetapi jika Anda

57
00:03:20.570 --> 00:03:25.640
memiliki skrip ratusan baris itu akan jauh lebih sulit untuk melakukan kontrol atau perintah ini untuk menyimpan ini dan setelah

58
00:03:25.640 --> 00:03:27.720
Anda memilikinya simpan datang ke garis komando.

59
00:03:29.500 --> 00:03:32.190
Dan kemudian kita akan lakukan di sini adalah mengatakan pilot.

60
00:03:32.450 --> 00:03:34.390
Jadi saya tidak mengatakan Python.

61
00:03:34.390 --> 00:03:38.450
Saya akan mengatakan pylint dan kemudian mengatakan pai sederhana.

62
00:03:38.710 --> 00:03:43.930
Ingat mereka harus berada di lokasi yang sama dengan skrip tinggi Anda dan Anda dapat melihat kuliah baris perintah untuk

63
00:03:43.930 --> 00:03:47.130
mendapatkan ide tentang bagaimana cara bergerak di sekitar baris perintah Anda.

64
00:03:47.410 --> 00:03:50.060
Tapi mari kita masuk ke sini dan lihat apa yang terjadi.

65
00:03:50.510 --> 00:03:50.870
BAIK.

66
00:03:50.890 --> 00:03:56.410
Jadi kami benar-benar mendapatkan kembali sedikit laporan di sini dan apa yang dilakukan pilot adalah

67
00:03:56.500 --> 00:03:59.620
mengeluarkan laporan yang pada dasarnya menilai kode Anda.

68
00:03:59.790 --> 00:04:05.130
Jadi silakan gulirkan jalan kembali ke sini ia mengatakan tidak ada file config ditemukan menggunakan konfigurasi default sehingga

69
00:04:05.130 --> 00:04:09.400
Anda dapat mengatur konfigurasi lebih lanjut dan kami memiliki baris baru akhir yang hilang.

70
00:04:09.420 --> 00:04:10.710
Jadi kami punya beberapa masalah.

71
00:04:10.710 --> 00:04:12.160
Dan ini adalah masalah gaya.

72
00:04:12.210 --> 00:04:15.610
Kami memiliki nama konstan yang tidak valid tetapi yang terpenting ada di sini.

73
00:04:15.630 --> 00:04:17.910
Ini adalah kesalahan aktual sehingga ada e di sini.

74
00:04:18.120 --> 00:04:22.120
Dan ini adalah yang Anda benar-benar ingin diperhatikan untuk variabel B. yang tidak ditentukan

75
00:04:22.320 --> 00:04:27.130
Jadi nanti itu memberi Anda statistik sejauh apa yang mereka gunakan kelas metode fungsi.

76
00:04:27.330 --> 00:04:30.990
Jadi untuk beberapa alasan Anda ingin mencari tahu berapa banyak kelas yang saya miliki.

77
00:04:31.110 --> 00:04:32.680
Berapa banyak fungsi yang memiliki kode ini.

78
00:04:32.730 --> 00:04:33.870
Apakah mereka didokumentasikan?

79
00:04:33.870 --> 00:04:36.990
Apakah mereka memiliki nama bergaya yang tidak pantas.

80
00:04:36.990 --> 00:04:42.110
Sebagai contoh, mungkin Anda secara tidak sengaja menggunakan fungsi sehingga ini akan memberikan statistik yang kemudian memberi

81
00:04:43.200 --> 00:04:48.160
kami metrik mentah seperti berapa banyak kode yang ada, berapa banyak dokumentasi yang ada komentar.

82
00:04:48.180 --> 00:04:49.440
Berapa banyak yang kosong.

83
00:04:49.470 --> 00:04:54.270
Jadi jika Anda bekerja untuk orang lain dan Anda laki-laki, hei setiap baris lain harus memiliki komentar tentang itu.

84
00:04:54.300 --> 00:04:58.180
Anda dapat menggunakan ini untuk memeriksa dengan cepat sekarang apakah Anda memerlukan banyak komentar atau tidak.

85
00:04:58.380 --> 00:05:02.670
Mudah-mudahan Anda dapat melihat lebih banyak dari posisi manajemen bagaimana laporan semacam ini akan sangat membantu

86
00:05:02.910 --> 00:05:05.890
baik untuk diberikan kepada manajer Anda atau untuk diterima sebagai manajer.

87
00:05:06.390 --> 00:05:07.520
Apakah kami memiliki duplikasi.

88
00:05:07.590 --> 00:05:09.080
Berapa banyak baris yang telah diduplikasi.

89
00:05:09.120 --> 00:05:11.540
Saat ini kami memiliki nol karena ini adalah file yang sederhana.

90
00:05:11.550 --> 00:05:13.220
Kemudian kita melihat pesan berdasarkan kategori.

91
00:05:13.260 --> 00:05:15.150
Jadi kalau ada kesalahan peringatan.

92
00:05:15.150 --> 00:05:17.680
Jadi di sini kita sebenarnya mendapatkan kesalahan.

93
00:05:17.910 --> 00:05:22.400
Jadi perhatikan mereka menjalankan kode dan mendapat kesalahan dan kemudian kami memiliki beberapa informasi lebih lanjut tentang pesan.

94
00:05:22.560 --> 00:05:26.690
Dan ini adalah jenis pesan apa yang muncul ketika Anda menjalankan laporan pilot itu.

95
00:05:26.740 --> 00:05:31.050
Dan di sini kita mendapatkan banyak pesan kita memiliki variabel yang tidak terdefinisi ada string thok

96
00:05:31.110 --> 00:05:34.420
yang hilang karena hanya file sederhana dengan kesalahan besar di dalamnya.

97
00:05:34.440 --> 00:05:37.790
Jadi penilaian global pada akhirnya akan mengevaluasi kembali kode Anda.

98
00:05:37.790 --> 00:05:42.110
Dan di sini kita mendapatkan evaluasi mengerikan yang berada di sebelah dua belas koma lima dari 10.

99
00:05:42.180 --> 00:05:47.060
Jadi skor sempurna adalah 10 menit dan di sini kami melakukan sangat buruk dengan negatif dua belas koma lima.

100
00:05:47.250 --> 00:05:49.910
Jadi pilot itu mendaftar beberapa masalah styling.

101
00:05:49.920 --> 00:05:54.030
Ingin melihat baris tambahan pada modul akhir dan definisi fungsi harus memiliki skrip

102
00:05:54.030 --> 00:05:58.650
yang mendokumentasikan satu karakter juga pilihan yang buruk untuk nama variabel sehingga agak mengeluh

103
00:05:58.650 --> 00:05:59.850
tentang itu juga.

104
00:05:59.890 --> 00:06:03.460
Dan yang terpenting dari semua ini jika ditemukan kesalahan dalam program.

105
00:06:03.540 --> 00:06:08.280
Jadi mari kita coba bersihkan ini semua dan lihat skor apa yang bisa kita dapatkan.

106
00:06:08.310 --> 00:06:13.700
Dan saya harus mencatat di sini cukup sulit untuk mencoba membidik 10 dari 10 yang sempurna.

107
00:06:13.890 --> 00:06:17.740
Jadi jangan stres jika Anda tidak mendapatkan 10 tentatif pada kode Anda sendiri.

108
00:06:17.940 --> 00:06:19.990
Terkadang Anda mendapatkan sesuatu dan 10.

109
00:06:20.010 --> 00:06:22.580
Itu harus sangat bisa dibaca mesin dan bisa dibaca manusia.

110
00:06:22.620 --> 00:06:26.280
Dan Anda selalu ingin menyeimbangkan bahwa jika orang lain melihat atau kode mereka akan dapat

111
00:06:26.280 --> 00:06:27.170
membacanya dengan mudah.

112
00:06:27.190 --> 00:06:29.280
Namun kami pasti dapat membuat beberapa perbaikan di sini.

113
00:06:29.340 --> 00:06:30.860
Jadi mari kita lihat apa yang kita bisa.

114
00:06:31.250 --> 00:06:32.540
OK jadi kembali ke skrip.

115
00:06:32.550 --> 00:06:34.620
Mari kita lihat apakah kita bisa memperbaiki semua ini.

116
00:06:34.680 --> 00:06:38.730
Seringkali ketika Anda berurusan dengan skrip tinggi, Anda ingin memiliki komentar multi-baris di

117
00:06:38.730 --> 00:06:42.480
bagian atas supaya pengembang lain dapat masuk dan memahami apa yang terjadi.

118
00:06:42.730 --> 00:06:49.570
Jadi di sini yang akan mengatakan naskah yang sangat sederhana.

119
00:06:50.140 --> 00:06:55.990
Jadi itu akan membantu kita skor beberapa poin dengan pilot dan kemudian kita benar-benar akan membuat fungsi

120
00:06:55.990 --> 00:06:59.790
yang dokter akan katakan phunk saya tidak akan mengambil parameter.

121
00:06:59.860 --> 00:07:05.380
Dan sekali lagi kita harus memberikan fungsi kita sebuah docstring dan perkecil hanya sedikit di sini sehingga kita dapat

122
00:07:05.380 --> 00:07:06.420
melihat seluruh gambar.

123
00:07:06.700 --> 00:07:16.340
Dan di sini kita akan mengatakan fungsi sederhana dan kemudian mari kita benar-benar membuat dua nama variabel baru pertama

124
00:07:16.350 --> 00:07:17.880
sama dengan 1.

125
00:07:18.030 --> 00:07:19.500
Dan kedua sama dengan 2.

126
00:07:19.650 --> 00:07:25.950
Karena biasanya Anda tidak ingin menggunakan hanya satu huruf sebagai nama variabel dan mereka

127
00:07:25.980 --> 00:07:32.910
akan mencetak terlebih dahulu dan kemudian kita akan lakukan adalah kita akan mencetak detik di sini.

128
00:07:34.350 --> 00:07:38.770
Dan pada akhir ini kita akan benar-benar menjalankan fungsi saya.

129
00:07:39.060 --> 00:07:40.410
Jadi saya akan mengatakan funk saya.

130
00:07:40.530 --> 00:07:42.860
Buka tutup, jalankan Princie di bagian bawah.

131
00:07:42.960 --> 00:07:46.470
Jadi perhatikan di sini bahwa lekukan saya akan mengatakan ini.

132
00:07:46.530 --> 00:07:50.590
Dan mari kita jalankan ini lagi di pilot dan lihat apakah kita dapat meningkatkan skor kita.

133
00:07:50.700 --> 00:07:52.210
Sekali lagi kemungkinan besar tidak akan mendapatkan.

134
00:07:52.260 --> 00:07:57.990
Dan kita harus melihat lompatan besar dari negatif 12 baik-baik saja aku kembali ke sini di atas meja saya.

135
00:07:57.990 --> 00:08:00.320
Pertama mari kita pastikan skrip kita benar-benar berjalan.

136
00:08:00.360 --> 00:08:06.030
Kami akan memanggil yang sederhana atau Python yang sederhana bahwa pi harus dapat menghapus itu dan kami akan kembali

137
00:08:06.030 --> 00:08:06.900
satu dua.

138
00:08:06.900 --> 00:08:07.840
Sepertinya sedang berjalan.

139
00:08:07.860 --> 00:08:17.780
Sekarang mari kita periksa skor yang mengatakan pilot sederhana yang masuk PI dan sekarang kita kembali 0 dari 10.

140
00:08:17.860 --> 00:08:22.540
Jadi sepertinya kami masih memiliki beberapa masalah, tetapi kami tidak lagi mendapatkan negatif dua belas

141
00:08:22.540 --> 00:08:23.900
koma lima dari 10.

142
00:08:23.900 --> 00:08:24.390
Baiklah.

143
00:08:24.410 --> 00:08:29.780
Sekarang Anda mungkin melihat ini dan mengatakan bahwa sepertinya banyak masalah kita dengan indentasi campuran.

144
00:08:29.810 --> 00:08:34.630
Dan jika Anda gulir ke sini Anda akan menyadari bahwa itu memberi tahu Anda tentang semua peringatan ini.

145
00:08:34.640 --> 00:08:39.950
Ini ditemukan dalam notasi dengan tab bukan spasi karena masalah gaya terutama editor teks yang

146
00:08:39.970 --> 00:08:40.410
berbeda.

147
00:08:40.420 --> 00:08:45.160
Jadi misalkan kolega Anda membuka istilah ini dan pai istilah dan Anda membuka luhur orang lain

148
00:08:45.230 --> 00:08:45.860
membuka.

149
00:08:45.900 --> 00:08:52.100
Adam Anda biasanya ketika Anda bekerja untuk orang lain ingin menggunakan spasi, bukan tab.

150
00:08:52.100 --> 00:08:56.910
Sekarang lagi ini sangat banyak hanya pilihan styling kode masih akan berjalan dengan baik karena kami baru saja melihat mereka

151
00:08:56.930 --> 00:08:58.700
tidak punya masalah mengeluarkan kode itu.

152
00:08:58.710 --> 00:09:05.240
Pilot akan mengeluh tentang masalah ini dan Anda tidak dapat memeriksa dokumentasi dan mengatakan jangan

153
00:09:05.240 --> 00:09:07.560
khawatir tentang peringatan khusus ini.

154
00:09:07.580 --> 00:09:12.320
Biasanya Anda ingin agar itu memperingatkan tentang campuran di stasiun tetapi Anda tidak ingin itu memperingatkan

155
00:09:12.320 --> 00:09:14.430
tentang tab murni atau ruang murni.

156
00:09:14.640 --> 00:09:18.130
Jadi untuk memperbaiki masalah ini Anda dapat kembali ke skrip Anda.

157
00:09:18.140 --> 00:09:19.190
Ayo lakukan sekarang.

158
00:09:20.830 --> 00:09:25.540
Jadi di sinilah saya pada fungsi saya dan Anda akan melihat bahwa ketika saya mendefinisikan fungsi saya semua yang saya

159
00:09:25.570 --> 00:09:28.480
lakukan adalah tekan enter dan kemudian pada dasarnya otomatis tab untuk saya.

160
00:09:28.480 --> 00:09:32.770
Jadi jika saya menekan delete atau backspace sekarang ini akan kembali satu tab.

161
00:09:32.770 --> 00:09:38.440
Jadi untuk memperbaikinya yang bisa kita lakukan adalah memastikan semuanya didefinisikan sebagai spasi.

162
00:09:38.470 --> 00:09:45.050
Jadi hapus ini di sini dan kemudian lakukan satu dua tiga empat spasi dan jika kita melakukannya untuk setiap baris.

163
00:09:45.100 --> 00:09:47.440
Sebenarnya saya sudah melakukan itu untuk Anda.

164
00:09:47.500 --> 00:09:49.550
Sebenarnya saya sudah melakukannya sendiri pada script.

165
00:09:49.570 --> 00:09:51.790
Kami telah melakukannya untuk Anda di buku catatan Jupiter juga.

166
00:09:51.970 --> 00:09:55.430
Tapi sekarang dia harus bisa memperbaiki itu jadi aku akan menyelamatkan ini.

167
00:09:55.570 --> 00:10:00.130
Dan jika Anda pernah memiliki keraguan apakah tab atau spasi ini di beberapa editor teks buta Anda harus

168
00:10:00.130 --> 00:10:00.870
dapat menyoroti.

169
00:10:01.150 --> 00:10:08.110
Dan di sini mungkin tidak akan muncul di screencast Anda, tetapi saya punya saya bisa melihat empat titik yang sangat samar

170
00:10:08.140 --> 00:10:09.310
menunjukkan setiap ruang

171
00:10:09.310 --> 00:10:11.680
Dan jika Anda hanya memiliki tab, Anda tidak akan melihatnya.

172
00:10:11.680 --> 00:10:13.350
Jadi, Anda harus melihatnya di layar Anda sendiri.

173
00:10:13.360 --> 00:10:14.730
Tetapi sekali lagi hanya menyoroti ini.

174
00:10:14.800 --> 00:10:16.250
Anda bisa melihat spasi.

175
00:10:16.450 --> 00:10:21.410
Dan jika Anda baru saja masuk, Anda akan melihat tab di sini hanya satu garis lurus.

176
00:10:21.640 --> 00:10:24.790
Jadi tiang akan mengeluh ketika Anda mencampurnya.

177
00:10:24.940 --> 00:10:27.280
Jadi mari kita simpan ini dan kembali ke baris perintah kami.

178
00:10:28.400 --> 00:10:31.740
Dan saya akan memutarkan lagi tiang pada simbol saya pada catatan tambahan itu.

179
00:10:31.820 --> 00:10:34.340
Sekarang hanya memiliki spasi putih, saya akan tekan enter.

180
00:10:36.300 --> 00:10:38.250
Dan sepertinya sekarang kita menjadi jauh lebih baik.

181
00:10:38.250 --> 00:10:42.120
Kami mendapat delapan koma tiga tiga dari menjalankan kami sebelumnya.

182
00:10:42.160 --> 00:10:45.270
Dan Anda membuat enam koma tujuh setelah memperbaikinya.

183
00:10:45.400 --> 00:10:48.750
Saya sudah menjalankan ini beberapa kali mencoba menangani masalah spasi putih itu.

184
00:10:48.970 --> 00:10:54.130
Dan ini kemungkinan besar tentang yang terbaik yang akan kita dapatkan tanpa harus memasukkan banyak komentar

185
00:10:54.130 --> 00:10:55.470
tambahan dalam kode.

186
00:10:56.740 --> 00:10:57.170
BAIK.

187
00:10:57.190 --> 00:11:02.080
Itu benar-benar semua yang perlu kita ketahui tentang tiang untuk kasus penggunaan kami dan secara umum kami hanya

188
00:11:02.080 --> 00:11:02.820
coding sendiri.

189
00:11:02.890 --> 00:11:07.390
Anda tidak akan menggunakan sesuatu seperti ini yang sering kali ini benar-benar lebih untuk ketika

190
00:11:07.390 --> 00:11:12.970
Anda bekerja jika orang lain bekerja dengan program yang sangat besar dan Anda memiliki semacam metode ketat untuk diri

191
00:11:12.970 --> 00:11:16.270
Anda sendiri untuk memastikan semuanya sesuai dengan gaya tertentu Konvensi.

192
00:11:16.270 --> 00:11:21.760
Sekali lagi itu tidak benar-benar berguna untuk hanya peringkat untuk kembali ke satu pengguna karena Anda baru saja

193
00:11:21.760 --> 00:11:22.960
melihat seluruh kode.

194
00:11:23.290 --> 00:11:28.360
OK jadi pilot akan datang berikutnya kita akan belajar tentang tes unit yang memungkinkan Anda untuk menulis

195
00:11:28.390 --> 00:11:29.650
program pengujian Anda sendiri.

196
00:11:29.650 --> 00:11:31.940
Perhatikan di sini bahwa kami pada dasarnya menjalankan banyak tes.

197
00:11:32.020 --> 00:11:34.040
Akan lebih baik jika kita bisa menulis sendiri.

198
00:11:34.240 --> 00:11:35.780
Sampai jumpa di kuliah berikutnya.
