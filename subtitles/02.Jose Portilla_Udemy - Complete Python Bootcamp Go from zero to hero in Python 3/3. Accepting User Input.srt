1
00:00:05,520 --> 00:00:06,410
Willkommen zurück, alle zusammen.

2
00:00:06,690 --> 00:00:10,590
In dieser Vorlesung werden wir über das Akzeptieren von Benutzereingaben sprechen.

3
00:00:11,130 --> 00:00:13,320
Gehen wir zum Jupiter-Notizbuch und legen los.

4
00:00:14,010 --> 00:00:14,280
Gut.

5
00:00:14,310 --> 00:00:19,530
Zuvor haben wir darüber gesprochen, Informationen nur über eine Anzeigefunktion anzuzeigen, die im

6
00:00:19,530 --> 00:00:23,340
Wesentlichen nur ein kleiner Platzhalter für mehrere Druckfunktionen ist.

7
00:00:23,820 --> 00:00:29,700
Jetzt möchten wir Benutzereingaben akzeptieren und Ihnen nur einige wichtige Dinge zeigen, die Sie bei der

8
00:00:29,700 --> 00:00:32,010
Verwendung der Eingabefunktion beachten sollten.

9
00:00:32,520 --> 00:00:36,570
Jetzt haben wir bereits etwas über die Eingabefunktion und die nützliche Operator-Vorlesung gelernt.

10
00:00:36,840 --> 00:00:38,970
Aber hier zeigen wir Ihnen noch ein paar Dinge.

11
00:00:39,750 --> 00:00:43,380
Die Eingabefunktion ist also einfach die Schlüsselworteingabe.

12
00:00:44,100 --> 00:00:45,810
Und dann Klammern öffnen und schließen.

13
00:00:45,870 --> 00:00:49,470
Und was Sie tun, ist, dass Sie die Zeichenfolge eingeben, die der Benutzer sehen soll.

14
00:00:49,950 --> 00:00:56,760
Nehmen wir zum Beispiel an, geben Sie einen Wert ein und dann haben wir einen Doppelpunkt und ein Leerzeichen.

15
00:00:57,150 --> 00:01:00,750
Und sobald ich die Zelle betreibe, werden wir sehen.

16
00:01:00,780 --> 00:01:04,710
Bitte geben Sie einen Wert-Doppelpunkt und dann ein kleines Eingabefeld ein.

17
00:01:04,860 --> 00:01:11,960
So kann ich zum Beispiel sagen, dass es dann einfach die Eingabetaste drückt und wir den String zurück zu bekommen.

18
00:01:12,870 --> 00:01:17,520
Ich kann also auch nur die Ausgabe hier anzeigen.

19
00:01:18,530 --> 00:01:20,210
Ich werde es als Ergebnis speichern.

20
00:01:20,270 --> 00:01:22,260
Also werde ich sagen, Ergebnis ist gleich Eingabe.

21
00:01:23,030 --> 00:01:28,430
Bitte geben Sie eine Wertespalte ein, geben Sie die Leerzeichen-Umschreibung ein, um dies auszuführen.

22
00:01:29,000 --> 00:01:35,300
Und wenn ich zwei sage, sehen wir das Ausgabeergebnis tatsächlich nicht, weil ich es als Variable gespeichert habe, was bedeutet, dass

23
00:01:35,300 --> 00:01:37,170
ich jetzt Ergebnisse aufrufen kann.

24
00:01:38,220 --> 00:01:44,790
Und ich stelle jetzt wieder fest, dass die Eingabefunktion, was auch immer wir tatsächlich

25
00:01:44,790 --> 00:01:47,250
übergeben, eine Zeichenfolge zurückgibt.

26
00:01:47,760 --> 00:01:53,460
Wenn ich also den Typ mit der in Python integrierten Typfunktion überprüfe, ist es SDR, ein

27
00:01:53,550 --> 00:01:53,970
Zeichenfolgentyp.

28
00:01:54,750 --> 00:02:00,630
Wenn ich wollte, dass dies tatsächlich ein anderer Typ ist, z. B. ein Gleitkomma oder eine Ganzzahl,

29
00:02:00,630 --> 00:02:04,650
müsste ich ihn in eine Ganzzahl oder einen Gleitkomma konvertieren.

30
00:02:04,830 --> 00:02:08,670
Und das kann ich im Wesentlichen mit den eingebauten Casting-Funktionen tun.

31
00:02:08,760 --> 00:02:13,980
Ich kann also sagen, dass das Ergebnis gleich ist und dann eingegeben wird.

32
00:02:15,200 --> 00:02:16,250
Angenommen, geben Sie einen Wert ein.

33
00:02:18,020 --> 00:02:19,940
Wir werden die Umschalttaste drücken, um dies auszuführen.

34
00:02:20,300 --> 00:02:21,310
Ich werde in zwei setzen.

35
00:02:22,160 --> 00:02:29,360
Und sobald ich die Ergebnisse habe, kann ich sie in eine Ganzzahl umwandeln, ohne den Pass und das Ergebnis des nahen Prinzen

36
00:02:29,540 --> 00:02:30,530
hier zu öffnen.

37
00:02:31,190 --> 00:02:37,400
Und dann werden wir sagen, dass die Ergebnisse I unterstreichen. EIN. ist gleich dem ganzzahligen Ergebnis.

38
00:02:38,330 --> 00:02:46,460
Führen Sie dies aus und der Typ meines ursprünglichen Ergebnisses ist eine Zeichenfolge und der Typ meiner Ergebnis-Ganzzahl.

39
00:02:48,360 --> 00:02:49,100
Ist eine ganze Zahl.

40
00:02:49,580 --> 00:02:56,930
Im Wesentlichen ist dieser Typ in Python auch eine Funktion, mit der Sie von einem Typ in einen anderen konvertieren können.

41
00:02:57,560 --> 00:03:04,640
Wenn ich also zum Beispiel den Typ von zwei Punkt drei überprüfe, bringt er float zurück, was bedeutet, dass

42
00:03:05,150 --> 00:03:08,120
float tatsächlich in Gleitkommazahlen konvertiert werden kann.

43
00:03:08,480 --> 00:03:12,460
Wenn ich zum Beispiel eine Zeichenfolge hätte, wäre das beispielsweise drei Punkt eins vier.

44
00:03:13,220 --> 00:03:16,940
Es konvertiert es tatsächlich in die Zahl oder Gleitkommazahl.

45
00:03:17,390 --> 00:03:20,330
Denken Sie also daran, dass die Hauptsache hier die Eingabe ist.

46
00:03:20,330 --> 00:03:25,140
Die Funktion gibt immer einen String zurück, was bedeutet, dass Sie ihn möglicherweise konvertieren müssen.

47
00:03:25,280 --> 00:03:28,460
Wenn Sie tatsächlich einen bestimmten Datentyp in Ihrer Funktion benötigen.

48
00:03:29,240 --> 00:03:37,430
Das wird also wichtig sein, denn wenn wir so etwas wie eine Position haben, ist der Index gleich der

49
00:03:37,940 --> 00:03:40,580
Eingabe für die Auswahl einer Indexposition.

50
00:03:41,590 --> 00:03:42,490
Colin Raum.

51
00:03:43,150 --> 00:03:43,690
Später.

52
00:03:43,810 --> 00:03:46,780
Ich möchte diesen Positionsindex möglicherweise als Teil meiner Liste verwenden.

53
00:03:47,260 --> 00:03:49,870
Also werden wir zum Beispiel weitermachen und dies ausführen.

54
00:03:49,930 --> 00:03:52,330
Und wir werden sagen, man tritt ein.

55
00:03:52,920 --> 00:03:55,480
Und stellen wir uns vor, ich habe immer noch diese Rose oben.

56
00:03:55,540 --> 00:04:00,930
Wenn ich hier nach oben scrolle, erinnere ich mich, ich habe Zeile eins, Zeile zwei oder drei und so weiter.

57
00:04:01,630 --> 00:04:02,920
Also habe ich hier die erste Reihe.

58
00:04:03,250 --> 00:04:04,150
Ich schalte ein.

59
00:04:05,210 --> 00:04:12,950
Leider kann ich nicht einfach sagen, dass der Positionsindex bestanden wurde, dann erhalte ich hier eine Fehlermeldung, und das liegt daran, dass der

60
00:04:13,250 --> 00:04:18,110
Listenindex oder die Listenindizes Ganzzahlen oder Slices sein müssen und keine Zeichenfolge sein können.

61
00:04:18,560 --> 00:04:21,680
Der Positionsindex hier ist also eigentlich immer noch eine Zeichenfolge.

62
00:04:21,860 --> 00:04:28,040
Was hier wirklich passiert, ist, dass ich versuche, Zeile eins zu sagen, und ich übergebe die Zeichenfolge eins. Dies ist

63
00:04:28,040 --> 00:04:33,400
der Fehler, den ich tatsächlich in einer Ganzzahl übergebe, wie Sie bereits in der Listenvorlesung gesehen haben.

64
00:04:33,620 --> 00:04:42,020
Was ich hier also tun kann, ist, dass ich entweder den Positionsindex umwandeln oder ihn mit int result oder in einen Positionsindex in einen ganzzahligen

65
00:04:42,170 --> 00:04:45,830
Typ konvertieren oder dies alles in einer Zeile tun kann.

66
00:04:46,370 --> 00:04:51,920
Ich werde sagen, ich MDT und die Eingabefunktion darum wickeln.

67
00:04:52,400 --> 00:04:58,820
Dies erfasst also im Wesentlichen Ihre Eingabe als Zeichenfolge und konvertiert sie dann in eine

68
00:04:59,090 --> 00:05:02,090
Ganzzahl, bevor sie dem Variablenpositionsindex zugewiesen wird.

69
00:05:02,510 --> 00:05:04,520
Lassen Sie uns fortfahren und diese Zellen ausführen.

70
00:05:04,850 --> 00:05:06,560
Ich werde diese ganz schnell löschen.

71
00:05:07,520 --> 00:05:10,110
Also werde ich hier eintreten, das ausführen.

72
00:05:10,130 --> 00:05:11,720
Es heißt, wählen Sie eine indizierte Position.

73
00:05:12,110 --> 00:05:14,780
Versuchen wir es noch einmal mit zwei Eingabetasten.

74
00:05:15,170 --> 00:05:17,450
Und das Schöne daran ist der Typ.

75
00:05:18,460 --> 00:05:25,170
Von meiner Position ist der Index eine Ganzzahl. Wenn ich beispielsweise eine dieser Zeilen zurücknehme, sagen wir

76
00:05:25,710 --> 00:05:26,670
Zeile zwei.

77
00:05:27,540 --> 00:05:29,730
Ich kann jetzt Passan Position Index.

78
00:05:30,090 --> 00:05:31,260
Und es funktioniert gut.

79
00:05:31,800 --> 00:05:36,420
Dies ist also die Art von Dingen, die Sie beachten müssen, wenn Sie Benutzereingaben verwenden.

80
00:05:36,690 --> 00:05:40,170
Ist das Python wird es automatisch als String übergeben.

81
00:05:40,500 --> 00:05:45,090
Und um es in Ihrem Programm zu verwenden, müssen Sie es möglicherweise tatsächlich in einen anderen Datentyp

82
00:05:45,090 --> 00:05:47,370
wie eine Ganzzahl oder eine Gleitkommazahl konvertieren.

83
00:05:48,770 --> 00:05:52,040
Bevor wir diesen Vortrag abschließen, möchte ich Ihnen noch zwei weitere Dinge sagen.

84
00:05:52,520 --> 00:05:58,970
Die erste ist, wenn Sie eine Art von Konvertierung verwenden, z. B. den Versuch, eine Eingabe in eine Ganzzahl umzuwandeln, muss

85
00:05:58,970 --> 00:06:04,310
es sich um eine legitime Eingabe handeln, was im Wesentlichen bedeutet, dass es sich um eine normale

86
00:06:04,310 --> 00:06:08,360
Ganzzahl handeln muss, aber nur wird zufällig als Zeichenfolge in Anführungszeichen gesetzt.

87
00:06:09,230 --> 00:06:16,670
Stellen wir uns also vor, es heißt, wählen Sie eine indizierte Position und der Spieler tippt, um dies zu mögen.

88
00:06:17,000 --> 00:06:23,270
Nun, Python ist tatsächlich klug genug, um dies direkt in eine Ganzzahl umzuwandeln.

89
00:06:23,270 --> 00:06:28,970
Wenn also hier ein Treffer eingegeben wird, wird tatsächlich dieser Wertfehler angezeigt, der besagt, hey, ungültiges Litoral

90
00:06:28,970 --> 00:06:36,710
für eine Ganzzahl mit Basis 10, um im Wesentlichen zu sagen, dass ich nicht weiß, wie diese Zeichenfolge in eine Ganzzahl konvertiert werden soll.

91
00:06:37,100 --> 00:06:38,390
Darauf muss man also achten.

92
00:06:38,840 --> 00:06:42,980
Und was wir später tun werden, ist Ihnen tatsächlich zu zeigen, wie Sie Benutzereingaben validieren können.

93
00:06:43,490 --> 00:06:50,600
Wir können also überprüfen, ob dies gültig ist, bevor wir versuchen, es in eine Ganzzahl

94
00:06:50,600 --> 00:06:51,170
umzuwandeln.

95
00:06:51,620 --> 00:06:53,420
Das erfahren wir in der nächsten Vorlesung.

96
00:06:53,750 --> 00:06:59,540
Und das Letzte, was ich erwähnen möchte, ist, dass die Eingabefunktion selbst etwas schwierig sein kann, da

97
00:06:59,630 --> 00:07:07,040
sie auf eine Benutzerinteraktion wartet. Wenn Sie sie also versehentlich zweimal ausführen, bleibt Ihr Python-Programm oder -Skript möglicherweise hängen und wartet

98
00:07:07,370 --> 00:07:10,760
auf eine Antwort, die dies nicht tut tatsächlich kommen.

99
00:07:11,210 --> 00:07:12,650
Also möchte ich Ihnen zeigen, wie das aussieht.

100
00:07:13,490 --> 00:07:16,880
Nehmen wir an, wir haben ein Ergebnis, das gleich der Eingabe ist.

101
00:07:18,040 --> 00:07:18,880
Geben Sie eine Nummer ein.

102
00:07:19,560 --> 00:07:21,960
Rufen Sie im Weltraum an und ich gehe in die Schicht.

103
00:07:22,420 --> 00:07:24,790
Beachten Sie jetzt, dass es dort einen Asterix gibt.

104
00:07:25,090 --> 00:07:27,310
Und es heißt, hey, ich warte auf ein Ergebnis.

105
00:07:27,340 --> 00:07:28,420
Bitte gebe eine Nummer ein.

106
00:07:28,960 --> 00:07:34,840
Wenn ich absolut vergessen habe, dass ich diese Zelle betrieben habe, habe ich mein Notizbuch weiter heruntergefahren und versucht, eine andere Zelle

107
00:07:34,840 --> 00:07:36,640
wie zwei plus zwei zu betreiben.

108
00:07:37,060 --> 00:07:42,430
Diese Zelle wird erst ausgeführt, wenn Sie hier tatsächlich ein Ergebnis für die Eingabe der Nummer erhalten.

109
00:07:42,640 --> 00:07:46,210
Dies wartet also im Wesentlichen auf die Benutzerinteraktion von der Eingabe.

110
00:07:46,810 --> 00:07:52,180
Nur bis ich hier eine Nummer eingebe und die Eingabetaste drücke, werden die restlichen Zellen tatsächlich ausgeführt.

111
00:07:52,720 --> 00:07:57,460
Und das andere, woran man sich erinnern sollte, und das ist das, was bei der Eingabe wirklich schwierig ist, ist,

112
00:07:57,460 --> 00:07:59,530
dass manchmal Leute die Zelle versehentlich zweimal betreiben.

113
00:07:59,950 --> 00:08:01,900
Das heißt, wir sagen so etwas wie Eingabe.

114
00:08:04,180 --> 00:08:06,280
Geben Sie keine Kohle in den Weltraum.

115
00:08:06,580 --> 00:08:13,480
Ich verschiebe, trete ein und klicke dann möglicherweise versehentlich wieder auf diese Zelle und drücke hier erneut die

116
00:08:13,510 --> 00:08:14,170
Eingabetaste.

117
00:08:15,570 --> 00:08:22,380
Und jetzt sind wir in Schwierigkeiten, weil ich versehentlich versuche, diese Eingabezelle zu überschreiben.

118
00:08:22,590 --> 00:08:27,390
Aber diese anfängliche Eingabe wartet immer noch auf ihre Interaktion, ihren Wert.

119
00:08:27,810 --> 00:08:33,720
Was im Wesentlichen bedeutet, dass wir jetzt, mangels eines besseren Wortes, durcheinander sind, weil wir immer noch auf diese

120
00:08:33,720 --> 00:08:34,980
ursprüngliche Eingabe warten müssen.

121
00:08:35,400 --> 00:08:39,870
Und Jupiter bemerkt, weil er diese erste Box angehoben hat, weil ich versucht habe, die Zelle erneut auszuführen, was

122
00:08:39,870 --> 00:08:41,310
jetzt jede andere Zelle bedeutet.

123
00:08:41,570 --> 00:08:48,690
Wenn ich zum Beispiel 20 plus 20 versuche, bleibt jetzt alles hängen und wartet auf die Eingabe, auf die ich keinen

124
00:08:48,690 --> 00:08:49,890
Zugriff mehr habe.

125
00:08:50,370 --> 00:08:57,030
Und wenn Ihnen dies passiert, können Sie dies leider nur beheben, indem Sie zum Kernel gehen und dann Ihren Kernel neu

126
00:08:57,030 --> 00:08:57,630
starten.

127
00:08:58,630 --> 00:09:03,370
Möglicherweise können Sie versuchen, es zu unterbrechen, aber normalerweise funktioniert die Unterbrechung nicht.

128
00:09:03,400 --> 00:09:06,310
Der beste Weg, dies zu beheben, besteht darin, noch einmal zu sagen, Colonel.

129
00:09:06,730 --> 00:09:11,050
Und dann neu starten und hier bemerken, wir haben das Neuladen dieses Neustarts gesehen.

130
00:09:11,470 --> 00:09:16,270
Nach dem Neustart kann ich jede dieser Zellen erneut ausführen.

131
00:09:16,300 --> 00:09:20,500
Beachten Sie jedoch, dass alle vorherigen Variablen im Speicher gelöscht wurden.

132
00:09:20,590 --> 00:09:22,900
Und wir fangen neu bei Eingabe eins an.

133
00:09:23,380 --> 00:09:29,230
Wenn ich also diese Zwei-plus-Zwei-Sulien-Benachrichtigung ausführen würde, wäre dies jetzt die zweite Zelle, und alle

134
00:09:29,260 --> 00:09:32,440
Variablen wie Ergebnisse und Zeilen sind oben definiert.

135
00:09:32,710 --> 00:09:34,770
Sie stehen mir nicht mehr zur Verfügung.

136
00:09:35,380 --> 00:09:41,050
Sie werden sagen, hey, Roe ist nicht in Ordnung, denn um alles neu zu definieren, nachdem Sie Ihren Colonel neu

137
00:09:41,050 --> 00:09:43,660
gestartet haben, müssen Sie alle diese Zellen erneut ausführen.

138
00:09:43,720 --> 00:09:48,030
Sie müssen sagen, drucken Sie diesen Druck, der diese Zellen neu definiert hat, und so weiter.

139
00:09:48,190 --> 00:09:49,510
Sie müssen alle diese Zellen weiter ausführen.

140
00:09:49,870 --> 00:09:55,330
Ein schneller Weg, dies zu tun, ist jedoch, dass Sie immer sagen können, dass alle Zellen oben oder unten ausgeführt werden.

141
00:09:55,420 --> 00:09:57,280
Das ist also eine Art schneller Tooltip.

142
00:09:57,880 --> 00:09:58,090
OK.

143
00:09:58,390 --> 00:10:04,480
So oft ist es ein häufiger Fehler für Anfänger, versehentlich eine Eingabezelle auszuführen, zweimal zu funktionieren, und dann stecken Sie

144
00:10:04,480 --> 00:10:05,440
irgendwie fest.

145
00:10:05,560 --> 00:10:08,620
Wenn Ihnen das passiert, klicken Sie einfach auf Kernel-Neustart.

146
00:10:09,460 --> 00:10:09,730
Gut.

147
00:10:10,180 --> 00:10:13,720
Sie haben also erwähnt, dass die Validierung von Benutzereingaben wichtig sein wird.

148
00:10:14,020 --> 00:10:16,690
Lassen Sie uns in der nächsten Vorlesung untersuchen, wie wir das tun können.

149
00:10:17,020 --> 00:10:17,560
Ich sehe dich dort.
