WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.230 --> 00:00:05.240
We've focused so far on adding new pictures and new orders,

00:00:05.240 --> 00:00:10.230
but now we're going to shift our attention to removing things from the database.

00:00:10.230 --> 00:00:16.215
If you go over to Visual Studio Code and head over to the admin dot view components,

00:00:16.215 --> 00:00:20.730
inside the template, we already have some HTML button set up.

00:00:20.730 --> 00:00:26.100
We have wanted to remove any menu items and below inside of the orders loop.

00:00:26.100 --> 00:00:29.550
We also have a button to remove any orders.

00:00:29.550 --> 00:00:32.130
I'm going to begin in the first person,

00:00:32.130 --> 00:00:37.995
which is to remove any menu items by adding a Click handler for our delete button.

00:00:37.995 --> 00:00:46.065
Just after the class we can add a click and then set this up to be Remove menu item,

00:00:46.065 --> 00:00:49.360
which we want to set up as a method just below.

00:00:49.360 --> 00:00:52.985
This needs to take in the item dot ID,

00:00:52.985 --> 00:00:55.850
so we know which one to remove from the database.

00:00:55.850 --> 00:00:59.720
This click handler is going to dispatch an action from our store,

00:00:59.720 --> 00:01:02.155
which we're going to create very soon.

00:01:02.155 --> 00:01:04.470
We already have our store imported,

00:01:04.470 --> 00:01:07.875
so we can now scroll down and add this as a method.

00:01:07.875 --> 00:01:10.410
Just after sign out,

00:01:10.410 --> 00:01:14.350
we can add Remove menu item,

00:01:14.350 --> 00:01:18.890
which takes in the arguments of the ID which you pass to it.

00:01:18.890 --> 00:01:21.500
We need to dispatch this action which we're going to call

00:01:21.500 --> 00:01:26.740
Remove menu item by accessing our store dot dispatch.

00:01:26.740 --> 00:01:35.310
The action name, which we want to call Remove menu item and also the ID as the payload.

00:01:35.310 --> 00:01:39.374
Over in the menu dot js which is the store module,

00:01:39.374 --> 00:01:41.160
we can create this action.

00:01:41.160 --> 00:01:45.570
Just after add menu item, add a comma.

00:01:45.570 --> 00:01:49.650
We can set this up which was Remove menu item.

00:01:49.650 --> 00:01:52.395
This is going to be async.

00:01:52.395 --> 00:01:57.200
We can parse in any context and also the payload which was the ID,

00:01:57.200 --> 00:02:01.055
sets about function and also our error handling.

00:02:01.055 --> 00:02:05.235
Try catch, passing in the errors,

00:02:05.235 --> 00:02:09.675
and we can alert any errors to the user inside of the backticks.

00:02:09.675 --> 00:02:16.950
Error removing menu item and then passing the variable which is our error.

00:02:17.120 --> 00:02:19.995
Inside of our training section,

00:02:19.995 --> 00:02:26.330
inside here we want to await our documents which we can grab from our DB menu ref,

00:02:26.330 --> 00:02:31.900
and the documents which we want to grab is the ID which is passed as the payload.

00:02:31.900 --> 00:02:36.630
We can store this inside of a constant which I'm going to call item.

00:02:36.630 --> 00:02:40.250
For this item, we can call the Firebase delete method,

00:02:40.250 --> 00:02:43.220
which is going to remove this from the database.

00:02:43.220 --> 00:02:47.130
Let's give this a try over in the admin section,

00:02:49.430 --> 00:02:52.995
scroll down to our buttons inside the menu.

00:02:52.995 --> 00:02:54.705
We can click on one of these.

00:02:54.705 --> 00:02:58.890
This is now being removed from our database. Let's just double-check.

00:02:58.890 --> 00:03:00.505
If we go to the menu,

00:03:00.505 --> 00:03:04.200
we now want to see the margarita and the pepperoni.

00:03:04.200 --> 00:03:06.615
It is now removed from our database.

00:03:06.615 --> 00:03:11.455
Our Firebase findings are also keeping this in sync with our local state,

00:03:11.455 --> 00:03:17.130
meaning our admin and also menu is exactly the same as our database.

00:03:17.130 --> 00:03:22.135
We can now do the same for removing our orders on admin screen two.

00:03:22.135 --> 00:03:25.055
Go back to the admin dot view.

00:03:25.055 --> 00:03:27.540
If we go to our orders loop,

00:03:27.540 --> 00:03:31.770
inside of our button we can also add a click handler inside here.

00:03:31.770 --> 00:03:35.590
This click handler is going to be Remove order.

00:03:35.780 --> 00:03:38.965
This also needs to take in the ID,

00:03:38.965 --> 00:03:43.800
which we can grab from order dot ID. Scroll down.

00:03:43.800 --> 00:03:46.430
We can also create a method for this,

00:03:46.430 --> 00:03:49.380
stuff that remove menu item.

00:03:49.380 --> 00:03:52.035
This is remove order,

00:03:52.035 --> 00:03:55.120
taking in the ID.

00:03:55.310 --> 00:03:59.939
We can then dispatch an action which we're going to create in just a moment,

00:03:59.939 --> 00:04:03.265
which is going to be called remove order.

00:04:03.265 --> 00:04:06.570
Passing in the ID as the payload,

00:04:06.570 --> 00:04:12.820
this time we're going to create this action inside of our orders dot js module.

00:04:12.820 --> 00:04:15.525
Let's head over to there inside of the store,

00:04:15.525 --> 00:04:20.805
inside of our actions object that's located at the end of at new order.

00:04:20.805 --> 00:04:23.580
We can set to Remove order,

00:04:23.580 --> 00:04:26.190
pretty much just like we did before.

00:04:26.190 --> 00:04:28.840
This is going to be async.

00:04:29.290 --> 00:04:32.045
Passing in any context,

00:04:32.045 --> 00:04:34.980
the ID as the payload.

00:04:35.030 --> 00:04:38.360
I would try and our cut section for error

00:04:38.360 --> 00:04:45.030
handling passing in the error and alerting the user.

00:04:45.030 --> 00:04:49.310
Again inside of the backticks, the text sorry,

00:04:49.310 --> 00:04:54.745
there was a problem, removing the order,

00:04:54.745 --> 00:04:58.110
passing in error as our variable.

00:04:58.110 --> 00:04:59.900
Just like the menu item,

00:04:59.900 --> 00:05:03.875
we're also going to take advantage of the Firebase delete method.

00:05:03.875 --> 00:05:08.270
First let's find our documents by awaiting the DB or

00:05:08.270 --> 00:05:15.280
this ref accessing the individual documents with the payload of the ID.

00:05:15.280 --> 00:05:23.700
We can store this inside of a constant called order and then call order dot delete.

00:05:23.700 --> 00:05:27.595
We can now test this out over in the admin.

00:05:27.595 --> 00:05:30.970
Let's first check how many orders we have.

00:05:31.910 --> 00:05:34.670
Inside here we have two separate orders,

00:05:34.670 --> 00:05:36.590
so we can now delete one of these.

00:05:36.590 --> 00:05:41.700
I delete second one on to the console and refresh.

00:05:41.960 --> 00:05:44.700
Since we've removed both our orders,

00:05:44.700 --> 00:05:46.725
we no longer have the orders collection.

00:05:46.725 --> 00:05:48.435
This is all working fine,

00:05:48.435 --> 00:05:51.975
meaning all of our remove buttons are now complete.

00:05:51.975 --> 00:05:53.970
I'm going to leave this video there,

00:05:53.970 --> 00:06:00.270
and next we can make the admin more secure by hiding it from unauthorized users.
