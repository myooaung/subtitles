WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.640 --> 00:00:05.760
In the last video, we successfully added the router link.

00:00:05.760 --> 00:00:08.775
The link between paths inside of our application.

00:00:08.775 --> 00:00:12.945
If we head over to the browser and then go to right-click and inspect,

00:00:12.945 --> 00:00:18.285
we can open up the developer tools and take a closer look at the output the code.

00:00:18.285 --> 00:00:20.850
If we look for our header section,

00:00:20.850 --> 00:00:24.240
open this up and then down into our nav link,

00:00:24.240 --> 00:00:26.880
we see we have our unordered list.

00:00:26.880 --> 00:00:28.740
Inside of our unordered list,

00:00:28.740 --> 00:00:33.180
we have our list items where we have our link rendered inside here.

00:00:33.180 --> 00:00:36.130
However, if we now open up the link,

00:00:36.130 --> 00:00:40.045
we see a second a element nested inside.

00:00:40.045 --> 00:00:43.880
We do know if we go to the header, the view file,

00:00:43.880 --> 00:00:48.590
that we should have a single a link because we added this in the last video.

00:00:48.590 --> 00:00:51.610
Why did we see two links instead?

00:00:51.610 --> 00:00:54.034
Well, this is because by default,

00:00:54.034 --> 00:00:57.710
the router link component renders a a tag.

00:00:57.710 --> 00:01:01.205
We can change this by adding a never prop called tag,

00:01:01.205 --> 00:01:06.355
which will allow us to setup the router link to be a different type of element.

00:01:06.355 --> 00:01:08.685
I'm going to go over into the header.

00:01:08.685 --> 00:01:10.550
Inside of our router link,

00:01:10.550 --> 00:01:12.245
just after the two prop,

00:01:12.245 --> 00:01:17.915
we can add a second probe called Tag and set this to be a list item.

00:01:17.915 --> 00:01:24.190
This also means we can now remove the surrounding li tags since we don't need these.

00:01:24.190 --> 00:01:27.120
Remove this and also the one below.

00:01:27.120 --> 00:01:29.390
We can also remove the comments.

00:01:29.390 --> 00:01:31.475
This is on our boutons.

00:01:31.475 --> 00:01:33.275
We can do the same just above.

00:01:33.275 --> 00:01:36.000
We can remove the last item,

00:01:37.510 --> 00:01:44.555
sets up a tag to be again a list item and do the same for the first two.

00:01:44.555 --> 00:01:48.240
The menu remove the list item,

00:01:49.040 --> 00:01:57.610
tag of li and finally the same for the home components.

00:01:59.480 --> 00:02:02.730
Give this a Save and back over to the developer tools.

00:02:02.730 --> 00:02:04.475
If we give this a Refresh,

00:02:04.475 --> 00:02:06.860
we can now go back into our header,

00:02:06.860 --> 00:02:13.240
into the navigation, the unordered list and open up one of our list items.

00:02:13.240 --> 00:02:19.400
Inside we see a single link is rendered and we still have the surrounding list item.

00:02:19.400 --> 00:02:22.330
Link is looking more like it should be.

00:02:22.330 --> 00:02:27.905
Also you will see there are some added classes to the surrounding list item.

00:02:27.905 --> 00:02:30.815
There's router link, exact active,

00:02:30.815 --> 00:02:33.275
router link active two.

00:02:33.275 --> 00:02:37.610
Router link exact means the path must be an exact match.

00:02:37.610 --> 00:02:40.070
As an example, when using the home route,

00:02:40.070 --> 00:02:42.770
we have the forward slash by itself.

00:02:42.770 --> 00:02:46.100
In another route, such as forward slash my new,

00:02:46.100 --> 00:02:49.025
this also begins with a forward slash two.

00:02:49.025 --> 00:02:50.870
Without this exact class,

00:02:50.870 --> 00:02:54.475
defaults lush would be much for all routes.

00:02:54.475 --> 00:02:58.160
In the exact class means the whole of the path must be

00:02:58.160 --> 00:03:03.350
an exact match rather than just looking at the forward slash at the beginning.

00:03:03.350 --> 00:03:07.730
The second class added is router link active.

00:03:07.730 --> 00:03:12.880
View router automatically adds this class to the current active link.

00:03:12.880 --> 00:03:16.550
We can see this in action when we click on the above links.

00:03:16.550 --> 00:03:18.845
If we go to Contact Us,

00:03:18.845 --> 00:03:21.095
we see this is now being removed.

00:03:21.095 --> 00:03:26.575
Router link active is now being placed on new contact link.

00:03:26.575 --> 00:03:31.900
We can also take advantage of this class to add some custom CSS.

00:03:31.900 --> 00:03:36.305
You may be also wondering why use router link at all.

00:03:36.305 --> 00:03:41.210
After all, we already had an a tag where we could just add a link too.

00:03:41.210 --> 00:03:46.085
Well, there are a few reasons why using router link is a better approach.

00:03:46.085 --> 00:03:49.730
In single-page applications, the idea is that

00:03:49.730 --> 00:03:53.254
you make a request to the server for each homepage.

00:03:53.254 --> 00:03:57.470
Each page after is then switched by the router inside of

00:03:57.470 --> 00:04:01.975
the browser so we don't need to keep making requests to the server.

00:04:01.975 --> 00:04:04.620
Using router link intercepts

00:04:04.620 --> 00:04:09.260
the click event so the browser will not try to reload each page.

00:04:09.260 --> 00:04:12.955
Instead, it just switches between the components.

00:04:12.955 --> 00:04:16.880
This is one of the reasons why we don't our the hatred attribute

00:04:16.880 --> 00:04:21.605
the a link because this will make a new request to the server.

00:04:21.605 --> 00:04:25.205
Also, soon we will be looking at different modes

00:04:25.205 --> 00:04:28.945
called History and harsh and we will go over these soon.

00:04:28.945 --> 00:04:32.540
Put router link also allows us to switch between these modes,

00:04:32.540 --> 00:04:35.335
without making any extra changes.

00:04:35.335 --> 00:04:42.480
This is just some extra details to make the router link render exactly how we wanted to.
