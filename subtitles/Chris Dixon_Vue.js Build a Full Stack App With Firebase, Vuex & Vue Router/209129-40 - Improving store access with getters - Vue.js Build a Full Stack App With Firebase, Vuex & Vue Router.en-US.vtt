WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:01.610 --> 00:00:06.450
In the last video, we accessed our central store directly using

00:00:06.450 --> 00:00:11.865
a $store.state.menuItems, just like you see here.

00:00:11.865 --> 00:00:14.655
There is a better way to do this, however,

00:00:14.655 --> 00:00:17.800
and this is by adding getters to our store.

00:00:17.800 --> 00:00:19.745
As this name suggests,

00:00:19.745 --> 00:00:23.570
we use them also to grow up data from our central store.

00:00:23.570 --> 00:00:28.175
But you may already be thinking we are already getting data from our store.

00:00:28.175 --> 00:00:30.760
So why are we using a getter?

00:00:30.760 --> 00:00:34.865
The reason is because you can do so much more with getters,

00:00:34.865 --> 00:00:39.695
when we access the state before directly using $store,

00:00:39.695 --> 00:00:42.535
yes we got the data which we wanted back,

00:00:42.535 --> 00:00:44.280
but as an example.

00:00:44.280 --> 00:00:47.675
What if we wanted to do something slightly more complex,

00:00:47.675 --> 00:00:51.170
such as faction orders from the store and then

00:00:51.170 --> 00:00:55.039
filter these orders to only show the orders which are completed.

00:00:55.039 --> 00:00:57.365
To do this, after we fetch the data,

00:00:57.365 --> 00:01:03.020
we would need to perform this filter action inside of the components computed property.

00:01:03.020 --> 00:01:06.830
If only one components wanted to perform this filter.

00:01:06.830 --> 00:01:08.840
This is not much of a problem.

00:01:08.840 --> 00:01:14.015
However, if multiple components would access the same filtered data,

00:01:14.015 --> 00:01:17.665
we will be having duplicate code through out our App.

00:01:17.665 --> 00:01:23.375
To fix this, we use a getter to fetch the data we need from the store,

00:01:23.375 --> 00:01:25.955
then perform any action we want,

00:01:25.955 --> 00:01:28.880
such as a filter or calculation.

00:01:28.880 --> 00:01:34.270
Then the components will receive the final or the exact data which it needs.

00:01:34.270 --> 00:01:39.050
I think a getter is just as simple as adding state to our sore.

00:01:39.050 --> 00:01:41.720
If we head over to this store.js ,

00:01:41.720 --> 00:01:46.415
just after our state objects and scroll down to the very bottom,

00:01:46.415 --> 00:01:50.540
add a comma and setup our getters object,

00:01:50.540 --> 00:01:52.070
just like I our state.

00:01:52.070 --> 00:01:58.390
We then add the name of our getter and I'm going to call this "getMenuItems."

00:01:58.390 --> 00:02:03.620
This is going to be a function which receives the state as an argument.

00:02:03.620 --> 00:02:08.060
We then use the state to access any piece of information which we want.

00:02:08.060 --> 00:02:12.775
So we want to grab the state.menuItems from just above.

00:02:12.775 --> 00:02:18.080
We can then use this getMenuItems getter inside of the menu components,

00:02:18.080 --> 00:02:21.130
lets head over to there "menu.vue".

00:02:21.130 --> 00:02:24.435
Then all we need to do, rather than accessing our state,

00:02:24.435 --> 00:02:29.770
we're going to access our getters objects and the name was getMenuItems.

00:02:29.770 --> 00:02:34.045
The other getter which we need is to get the number of orders which we have.

00:02:34.045 --> 00:02:37.675
For this, we need an orders array inside of our state,

00:02:37.675 --> 00:02:40.105
so back here to store,

00:02:40.105 --> 00:02:42.170
right at the very bottom,

00:02:42.170 --> 00:02:45.605
just after our objects add a corner.

00:02:45.605 --> 00:02:49.620
We're going to initially set our orders array to be empty.

00:02:49.620 --> 00:02:51.699
This is empty at the moment,

00:02:51.699 --> 00:02:55.180
but later in the course we will sync this information with firebase,

00:02:55.180 --> 00:02:58.269
to pull in the orders from our database.

00:02:58.269 --> 00:03:02.035
Using this, we can now set up a second getter,

00:03:02.035 --> 00:03:04.970
called Number of orders.

00:03:05.310 --> 00:03:07.855
This set up just as above.

00:03:07.855 --> 00:03:15.970
It takes in the state as an argument of our function and we can access the state.orders.

00:03:15.970 --> 00:03:20.360
Since we want them to know the number of orders rather than the contents,

00:03:20.360 --> 00:03:23.730
we can access it with the land property.

00:03:23.860 --> 00:03:27.965
The number of orders is part of our admin screen.

00:03:27.965 --> 00:03:32.060
Therefore, we need to add this to the admin components.

00:03:32.060 --> 00:03:36.820
Let's go to there, down to the computer property.

00:03:36.820 --> 00:03:39.404
After I get menu items,

00:03:39.404 --> 00:03:45.360
we can add our number of orders where we're

00:03:45.360 --> 00:03:53.470
going to return this.$store.getters.numberoOfOrders.

00:03:53.990 --> 00:03:56.480
Also while we're here,

00:03:56.480 --> 00:04:01.100
we can also change the get menu items above to also use the getter.

00:04:01.100 --> 00:04:06.580
So getters.getMenuItems.

00:04:06.580 --> 00:04:10.280
We can now use a number of orders up in our templates.

00:04:10.280 --> 00:04:12.650
If we'll look for the current orders,

00:04:12.650 --> 00:04:15.185
we have a hard coded value of five.

00:04:15.185 --> 00:04:17.180
Inside of the double curly braces,

00:04:17.180 --> 00:04:19.735
we can access our number of orders.

00:04:19.735 --> 00:04:24.570
Give this a save and off in the admin, reload the browser.

00:04:24.570 --> 00:04:28.115
We now see the currents orders is set to zero.

00:04:28.115 --> 00:04:31.190
As we mentioned at the start of this video,

00:04:31.190 --> 00:04:32.915
when using a getter,

00:04:32.915 --> 00:04:38.575
we can do pretty much anything we want to the data before we pass it to our components.

00:04:38.575 --> 00:04:41.390
For example, we could do something simple,

00:04:41.390 --> 00:04:44.240
such as the oddest land plus 10,

00:04:44.240 --> 00:04:47.830
and this is updated inside of our component.

00:04:47.830 --> 00:04:50.855
Or we can do something much more complex,

00:04:50.855 --> 00:04:56.860
such as formatting or validating data even before it reaches our components.

00:04:56.860 --> 00:05:00.785
We know how to access state from our store.

00:05:00.785 --> 00:05:03.380
Now is a good time to move on to looking at

00:05:03.380 --> 00:05:07.830
mutations that change the state within our store.
