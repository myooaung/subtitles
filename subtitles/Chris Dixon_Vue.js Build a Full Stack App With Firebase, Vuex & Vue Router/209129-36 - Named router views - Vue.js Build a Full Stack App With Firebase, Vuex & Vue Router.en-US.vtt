WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.720 --> 00:00:04.810
If we head back over to the main app the Vue file.

00:00:04.810 --> 00:00:07.615
Inside a here we have a router-view.

00:00:07.615 --> 00:00:12.385
We have so far looked at using this router-view to switch between components.

00:00:12.385 --> 00:00:14.110
Also, how we can use

00:00:14.110 --> 00:00:19.494
the router-view components to display child routes inside of the above components.

00:00:19.494 --> 00:00:24.505
We can also use multiple view routes components inside of our app.

00:00:24.505 --> 00:00:28.105
This is so we can display multiple views on the same page,

00:00:28.105 --> 00:00:31.735
rather than just switching between single components.

00:00:31.735 --> 00:00:35.010
For example, inside of this app the Vue file,

00:00:35.010 --> 00:00:39.664
we have this router-view component to switch between the main contents.

00:00:39.664 --> 00:00:43.145
We're not restricted though to only one outlet,

00:00:43.145 --> 00:00:47.860
we can add as many router-views as we want by giving them a name.

00:00:47.860 --> 00:00:52.400
We have already set up some information components which we use in the about.

00:00:52.400 --> 00:00:54.065
We have the ordering guide,

00:00:54.065 --> 00:00:56.960
the delivery information, and the history.

00:00:56.960 --> 00:01:03.245
This would also be ideal to display on the homepage too by using a new router view.

00:01:03.245 --> 00:01:06.605
Let's set this up just below our current router-view.

00:01:06.605 --> 00:01:10.060
I'm going to use this to display these three components.

00:01:10.060 --> 00:01:14.680
Let's set up a div with the class of info_block_wrapper.

00:01:16.910 --> 00:01:20.675
Now, to display our free information components,

00:01:20.675 --> 00:01:22.700
we can add more router-views,

00:01:22.700 --> 00:01:25.915
but this time with the name attribute.

00:01:25.915 --> 00:01:30.625
The router-view with the opening and the closing tag.

00:01:30.625 --> 00:01:32.485
Inside of the opening tag,

00:01:32.485 --> 00:01:38.420
we can then add the name and we want to set this name to be ordering guide.

00:01:39.660 --> 00:01:43.135
Then duplicate this two more times.

00:01:43.135 --> 00:01:46.804
The second one is going to be for delivering,

00:01:46.804 --> 00:01:51.670
and the third one is going to be for history.

00:01:52.760 --> 00:01:57.760
Save this. If we head back over to the browser and click on our "Home" link.

00:01:57.760 --> 00:02:01.535
We don't see any components currently shown on the screen,

00:02:01.535 --> 00:02:05.170
this is because we first need to add them to our routes.

00:02:05.170 --> 00:02:08.855
So let's head over to our new routes.js file.

00:02:08.855 --> 00:02:12.980
Since our home links will now be displaying multiple components,

00:02:12.980 --> 00:02:16.430
we need to change the component of property just here,

00:02:16.430 --> 00:02:19.540
have an s on the end to make these components.

00:02:19.540 --> 00:02:21.405
Remove the home link.

00:02:21.405 --> 00:02:24.110
This is now going to take in an object

00:02:24.110 --> 00:02:27.530
where we can add the components as key value pairs,

00:02:27.530 --> 00:02:32.500
just like we do when registering a components inside of the view instance.

00:02:32.500 --> 00:02:35.880
First, we add a default components,

00:02:35.880 --> 00:02:38.485
which is going to be the home.

00:02:38.485 --> 00:02:43.145
This is the component rendered in the router-view with no name.

00:02:43.145 --> 00:02:46.985
This is the original one we had just up at the top here.

00:02:46.985 --> 00:02:51.245
This will keep it just as we had before with the home components.

00:02:51.245 --> 00:02:56.740
We can then set up our free router-views just below all with matching names.

00:02:56.740 --> 00:03:00.030
The first one was the ordering guide.

00:03:00.800 --> 00:03:05.325
We want to map this to way components called ordering guide.

00:03:05.325 --> 00:03:07.845
The next one was for delivery.

00:03:07.845 --> 00:03:11.560
We want to map this to way components called delivery.

00:03:11.560 --> 00:03:14.850
The third one was for history.

00:03:18.080 --> 00:03:20.655
Let's see this over in the browser.

00:03:20.655 --> 00:03:21.990
Back to the homepage.

00:03:21.990 --> 00:03:26.630
Our free components now taken the place of our named router-views.

00:03:26.630 --> 00:03:30.980
Also the default home components is taking the place of the router-view,

00:03:30.980 --> 00:03:32.770
which doesn't have a name.

00:03:32.770 --> 00:03:37.940
This also needs a little work with these styling too when we created the ordering guide,

00:03:37.940 --> 00:03:40.325
delivery and history components.

00:03:40.325 --> 00:03:42.140
If we take a look at these,

00:03:42.140 --> 00:03:44.135
we can open up any of these.

00:03:44.135 --> 00:03:45.590
Inside of the template,

00:03:45.590 --> 00:03:48.725
we added a class of info_block as the wrapper,

00:03:48.725 --> 00:03:51.305
and also a class of info_block_contents,

00:03:51.305 --> 00:03:54.565
which is for the title and also the image.

00:03:54.565 --> 00:03:57.445
If we go back over to the app.vue.

00:03:57.445 --> 00:04:02.120
We also surrounded these free components in a class called info_block_wrapper.

00:04:02.120 --> 00:04:05.540
We can target these classes in the CSS,

00:04:05.540 --> 00:04:08.425
starting with the smallest screen view.

00:04:08.425 --> 00:04:15.345
Down at the bottom, we can target the info_block_wrapper.

00:04:15.345 --> 00:04:18.490
This is a wrapper for our free outlets.

00:04:18.490 --> 00:04:21.435
I'm going to set the display type to be flex.

00:04:21.435 --> 00:04:25.600
We can set the flex direction to be column on the smallest screens.

00:04:25.600 --> 00:04:27.720
So these are stacked.

00:04:27.720 --> 00:04:31.305
Next up the individual info_block.

00:04:31.305 --> 00:04:34.570
This is the wrapper for each components.

00:04:34.570 --> 00:04:36.895
I want to give this a background color,

00:04:36.895 --> 00:04:40.520
which is going to have the value of f1e6da.

00:04:42.080 --> 00:04:45.790
So margin, so 10 pixels on the top and

00:04:45.790 --> 00:04:49.885
bottom to add some space in and zero on the left and right,

00:04:49.885 --> 00:04:53.990
some padding on the inside of the div of 10 pixels.

00:04:53.990 --> 00:04:58.285
The number can target the info blocks and level 3 heading.

00:04:58.285 --> 00:05:00.655
If we go back to the ordering guide,

00:05:00.655 --> 00:05:03.965
this is the title at the top of each block.

00:05:03.965 --> 00:05:08.130
Info_block, we can target the level 3 headings.

00:05:08.130 --> 00:05:12.415
All I'm going to do here is set the text line to be in the center.

00:05:12.415 --> 00:05:16.550
We can also target the info_blocks_content.

00:05:17.200 --> 00:05:20.845
This is the section just below the title,

00:05:20.845 --> 00:05:23.545
would detect son also the image.

00:05:23.545 --> 00:05:27.485
Once you set this to be a display type or flex,

00:05:27.485 --> 00:05:31.550
so we can align the items into the center.

00:05:31.700 --> 00:05:34.180
Then finally for the small screens,

00:05:34.180 --> 00:05:36.685
I'm going to set the info_block image.

00:05:36.685 --> 00:05:41.560
All I want to do here is to restrict the width to be 30 percent.

00:05:41.560 --> 00:05:44.140
Let's take a look at this in the browser.

00:05:44.140 --> 00:05:47.330
We can shrink this down to the smaller view.

00:05:47.330 --> 00:05:51.005
This looks a little bit better on mobile devices now.

00:05:51.005 --> 00:05:54.270
If we stretch the browser out to the desktop size.

00:05:54.270 --> 00:05:57.670
We now need to add a media query to target this.

00:05:57.670 --> 00:06:03.755
I'm going to set up the media query target the minimum width of 900 pixels.

00:06:03.755 --> 00:06:07.260
Our media screen.

00:06:07.260 --> 00:06:13.170
Also the minimum width be 900 pixels.

00:06:13.170 --> 00:06:16.810
Let's start with the info_block.

00:06:17.450 --> 00:06:21.700
Setting the width to be 100 percent.

00:06:22.160 --> 00:06:28.645
The info_block_wrapper, which is the main wrapper for all,

00:06:28.645 --> 00:06:30.445
free of all components.

00:06:30.445 --> 00:06:33.700
We can set the flex direction or override

00:06:33.700 --> 00:06:38.315
the flex direction from column to be row so these all aligns.

00:06:38.315 --> 00:06:41.260
Next up, if we take a look inside of the browser,

00:06:41.260 --> 00:06:44.980
we now have these setup across the row using the flex box.

00:06:44.980 --> 00:06:47.770
But we want some spacing in between each one.

00:06:47.770 --> 00:06:51.445
To do this, I'm going to select this "Info_block" in the middle.

00:06:51.445 --> 00:06:54.550
We can target this one by using the nth-child.

00:06:54.550 --> 00:06:58.670
Back over to the CSS and target the info_block,

00:06:58.670 --> 00:07:00.540
and then the colon.

00:07:00.540 --> 00:07:02.765
We can target the nth-child,

00:07:02.765 --> 00:07:05.730
which will select any one of these which we pass in.

00:07:05.730 --> 00:07:09.290
We want to select the second one which is in the middle.

00:07:09.290 --> 00:07:15.620
Then all we're going to do is set some margin to be 10 pixels. Give this a save.

00:07:15.620 --> 00:07:20.525
Now, this is added some 10 pixel spacing around this components.

00:07:20.525 --> 00:07:23.419
Next up inside of these three components,

00:07:23.419 --> 00:07:26.930
we're going to have the text on the image stack vertically.

00:07:26.930 --> 00:07:29.720
We can do this by setting the flex direction to be

00:07:29.720 --> 00:07:33.370
column and also align these into the center.

00:07:33.370 --> 00:07:37.390
Let's go for the info_block_contents.

00:07:39.020 --> 00:07:42.620
We can set the flex direction to be into

00:07:42.620 --> 00:07:47.940
a column and also align the items into the center.

00:07:49.130 --> 00:07:53.250
Save this. Next up the image.

00:07:53.250 --> 00:07:56.640
I'm going to give this a maximum width of a 100 percent.

00:07:56.640 --> 00:08:02.295
The info_block image, the maximum width,

00:08:02.295 --> 00:08:05.490
going to restrict to 100 percent.

00:08:05.490 --> 00:08:09.820
Finally, I'm going to use the flex box to reset the source order.

00:08:09.820 --> 00:08:15.880
So these are alternated by moving the image above the text on the second child.

00:08:15.880 --> 00:08:21.820
Let's use the same selector that we used before using the nth-child.

00:08:21.820 --> 00:08:23.970
We can add this in.

00:08:23.970 --> 00:08:27.435
But this time we also want to target the image.

00:08:27.435 --> 00:08:33.485
We can reset the source order by setting the order of the image to be negative one.

00:08:33.485 --> 00:08:39.825
Save this. Our free components and now alternated on the larger screen.

00:08:39.825 --> 00:08:42.365
If we shrink back down to the mobile view,

00:08:42.365 --> 00:08:48.550
source order stays exactly as it was since this is set inside of a media query.

00:08:48.550 --> 00:08:52.070
This is now the end of our routing section.

00:08:52.070 --> 00:08:56.240
You can see there is a lot more to routing than just switching between pages.

00:08:56.240 --> 00:09:00.455
I hope this section has given you a good idea of what is available.

00:09:00.455 --> 00:09:06.270
In the next section, we're going to move on to stay management using View x.
