WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.650 --> 00:00:06.165
I'm going to begin this section by adding Firebase bindings to Vuex.

00:00:06.165 --> 00:00:09.525
Now that we have Vuex added to our application,

00:00:09.525 --> 00:00:14.640
we now have one centralized place for all of our data and our state.

00:00:14.640 --> 00:00:19.735
In this section, we'll also be binding our Vuex door to Firebase.

00:00:19.735 --> 00:00:25.580
While Vuex may be a convenient central location to push and retrieve our data,

00:00:25.580 --> 00:00:28.385
it is not a persistent data-store.

00:00:28.385 --> 00:00:30.860
This means if we reload the app,

00:00:30.860 --> 00:00:34.030
any changes made to the store are then lost.

00:00:34.030 --> 00:00:39.410
To fix this and make sure our menu items and orders are stored permanently,

00:00:39.410 --> 00:00:43.445
I'm going to keep the Vuex store in sync with Firebase.

00:00:43.445 --> 00:00:46.895
We will do this with a package called Vuexfire,

00:00:46.895 --> 00:00:50.630
and this package is maintained by the call VJS team,

00:00:50.630 --> 00:00:56.755
and it will allow our central Vuex store to be kept in sync with our Firebase data.

00:00:56.755 --> 00:01:01.310
It does this by listening to our Firebase database and

00:01:01.310 --> 00:01:06.205
then communicating mutations to change our state to match.

00:01:06.205 --> 00:01:09.545
At the moment, if we go inside of our admin,

00:01:09.545 --> 00:01:12.550
we can add a new pizza inside here.

00:01:12.550 --> 00:01:14.445
We can add this,

00:01:14.445 --> 00:01:17.930
and we can see that this is not added to our menu,

00:01:17.930 --> 00:01:20.810
or if we go over to the menu components,

00:01:20.810 --> 00:01:23.170
we don't see it added there either.

00:01:23.170 --> 00:01:26.700
This is because if we go over to our store modules.

00:01:26.700 --> 00:01:30.105
So let's go into the menu.js,

00:01:30.105 --> 00:01:32.580
and then up to our state.

00:01:32.580 --> 00:01:35.555
Inside here we just have our dummy data.

00:01:35.555 --> 00:01:40.070
So now will be a good time to remove this and replace this with an empty array.

00:01:40.070 --> 00:01:44.725
So I'm going to remove all the contents from inside our states,

00:01:44.725 --> 00:01:47.884
we can leave the name of menu items,

00:01:47.884 --> 00:01:52.450
but this time I'm going to set this equal to an empty array.

00:01:52.450 --> 00:01:55.205
This will soon be kept in sync with Firebase.

00:01:55.205 --> 00:01:57.110
So all the data which we have inside of

00:01:57.110 --> 00:02:00.590
our database will then be reflected inside the state.

00:02:00.590 --> 00:02:03.230
Meaning we can still use our get menu items

00:02:03.230 --> 00:02:07.220
getter to grab our state and push it to our components.

00:02:07.220 --> 00:02:09.935
So now let's install the package which we need,

00:02:09.935 --> 00:02:12.290
which is called Vuexfire.

00:02:12.290 --> 00:02:14.654
I'm going to do this via npm,

00:02:14.654 --> 00:02:19.020
with the i command on the package name is Vuexfire,

00:02:19.020 --> 00:02:22.830
and this should just take a few moments to install.

00:02:24.280 --> 00:02:30.155
Great, with this now, we can verify this is installed inside of the package.json,

00:02:30.155 --> 00:02:35.035
we can go up-to dependencies and receive Vuexfire is installed here,

00:02:35.035 --> 00:02:38.820
and the next step is to add our Firebase mutations.

00:02:38.820 --> 00:02:42.619
It is added to the root store and these in mutations,

00:02:42.619 --> 00:02:47.920
we need to mutate our state every time the data inside the Firebase changes.

00:02:47.920 --> 00:02:53.910
So let's go over to the root store.js inside of our stall folder.

00:02:53.910 --> 00:02:58.580
I'll probably talk, we first need to import these from Vuexfire.

00:02:58.580 --> 00:03:00.755
This is going to be named import.

00:03:00.755 --> 00:03:02.749
So inside the curly braces,

00:03:02.749 --> 00:03:10.330
Vuexfire mutations, on the package is Vuexfire.

00:03:10.600 --> 00:03:16.850
This will then allow us to inject these mutations into the root of our store.

00:03:16.850 --> 00:03:21.985
So we can add the mutations with the matching name from above.

00:03:21.985 --> 00:03:25.925
Now I have this, the next step is to enhance our actions.

00:03:25.925 --> 00:03:29.240
This takes our normal actions which we have in our store,

00:03:29.240 --> 00:03:32.390
and then add some additional parameters to bind

00:03:32.390 --> 00:03:36.125
or unbind our state to a Firebase reference.

00:03:36.125 --> 00:03:40.789
So in our case, we combined our Firebase menu and oldest collection,

00:03:40.789 --> 00:03:42.995
and we will look at how to do this now.

00:03:42.995 --> 00:03:47.590
Let's set this up back in the menu module, first,

00:03:47.590 --> 00:03:50.135
we need to import the Firebase action,

00:03:50.135 --> 00:03:55.410
just like we just did with the Firebase mutations at the very top.

00:03:55.410 --> 00:03:57.854
Okay, this is named export,

00:03:57.854 --> 00:04:00.605
so we add this inside of the curly braces,

00:04:00.605 --> 00:04:03.835
the name is Firebase action.

00:04:03.835 --> 00:04:07.590
Once again, from our Vuexfire package,

00:04:07.590 --> 00:04:11.210
we're also going to be dealing with our menu reference,

00:04:11.210 --> 00:04:14.705
so we can also import this from our own Firebase file.

00:04:14.705 --> 00:04:18.060
It will be called the DB menu ref.

00:04:18.080 --> 00:04:21.290
The file path is dot,

00:04:21.290 --> 00:04:23.945
dot slash, dot, dot slash,

00:04:23.945 --> 00:04:26.980
and the filename of Firebase.

00:04:26.980 --> 00:04:29.480
So now inside this menu module,

00:04:29.480 --> 00:04:32.315
we already have our actions objects setup.

00:04:32.315 --> 00:04:36.785
Inside here we're going to use the firestorm action we just imported,

00:04:36.785 --> 00:04:39.440
rather than using a regular action.

00:04:39.440 --> 00:04:46.000
This will wrap our action so we can use Vuexfire to keep our data in sync with Firebase,

00:04:46.000 --> 00:04:50.220
and I'm going to call this new action set menu ref.

00:04:52.390 --> 00:04:55.865
We can then access the five-star action,

00:04:55.865 --> 00:04:57.850
which we just imported,

00:04:57.850 --> 00:05:04.775
install action also takes in our context objects just as a regular action does,

00:05:04.775 --> 00:05:06.260
but as we mentioned before,

00:05:06.260 --> 00:05:11.635
it also enhances it with some new functions to help with binding it to Firebase.

00:05:11.635 --> 00:05:14.670
Let's set this up as a function.

00:05:14.670 --> 00:05:19.105
The first thing to do inside of our function body is to return

00:05:19.105 --> 00:05:21.910
the context and then access one of

00:05:21.910 --> 00:05:26.630
the extra functions provided called bind fire store ref.

00:05:27.180 --> 00:05:31.895
But what exactly do we want to bind to Firebase?

00:05:31.895 --> 00:05:34.750
If we scroll up, we already have inside of

00:05:34.750 --> 00:05:37.300
this file lead two things which we want to bind.

00:05:37.300 --> 00:05:40.540
We have a reference to our database which points

00:05:40.540 --> 00:05:43.790
to our menu collection inside of our states.

00:05:43.790 --> 00:05:47.094
Just below, we have our local menu items.

00:05:47.094 --> 00:05:51.160
So these are the two references which you want keep in sync.

00:05:51.160 --> 00:05:55.675
We combine these together and make sure the data is exactly the same.

00:05:55.675 --> 00:06:00.385
So first of all, let's pass in our state of menu items.

00:06:00.385 --> 00:06:05.010
And then the second argument is going to be our db menu ref.

00:06:05.360 --> 00:06:09.035
If we now go over to our application,

00:06:09.035 --> 00:06:11.030
which determined with this,

00:06:11.030 --> 00:06:15.005
this has been automatically added in by the text editor.

00:06:15.005 --> 00:06:17.750
So this just needs to be viable action,

00:06:17.750 --> 00:06:20.245
back over to application,

00:06:20.245 --> 00:06:23.585
you see we've now lost our menu items.

00:06:23.585 --> 00:06:26.690
This is because we're missing one important thing.

00:06:26.690 --> 00:06:29.900
We've created our action over in the module,

00:06:29.900 --> 00:06:32.585
but we've not actually dispatched it.

00:06:32.585 --> 00:06:35.855
This particular action does not change our state,

00:06:35.855 --> 00:06:38.600
rather, it binds to Firebase instead.

00:06:38.600 --> 00:06:42.845
Therefore, we want to dispatch it as soon as the application loads.

00:06:42.845 --> 00:06:48.890
A good place to do this would be inside of the created hook in the main app.view file.

00:06:48.890 --> 00:06:53.130
Let's head over to the app.view and down to our script.

00:06:53.130 --> 00:06:57.930
We can add the created hook just after our components.

00:06:59.270 --> 00:07:02.870
We dispatch this just as with any action,

00:07:02.870 --> 00:07:07.620
we can access this dot star dot dispatch.

00:07:07.780 --> 00:07:13.430
The first thing is passing easy action which is named set menu ref.

00:07:13.430 --> 00:07:16.160
The second argument is the payload,

00:07:16.160 --> 00:07:18.110
which is DB menu ref,

00:07:18.110 --> 00:07:21.395
which points towards menu collection in our database.

00:07:21.395 --> 00:07:23.930
Now we've included the DB menu ref,

00:07:23.930 --> 00:07:31.235
we also need to import this at the top of our scripts from our Firebase file,

00:07:31.235 --> 00:07:34.720
which is located at dot slash, and then Firebase.

00:07:34.720 --> 00:07:37.965
Suddenly, inside of the created hook,

00:07:37.965 --> 00:07:41.599
we'll dispatch the action once the app is created.

00:07:41.599 --> 00:07:45.860
This will make sure our store is bound to Firebase right away.

00:07:45.860 --> 00:07:50.360
Now hopefully if we save this file and then head over to our project,

00:07:50.360 --> 00:07:53.945
we now see inside of the menu we have our pepperoni pizza,

00:07:53.945 --> 00:07:56.780
which is now pulled in from our database.

00:07:56.780 --> 00:07:59.880
Let's head over to the admin routes.

00:08:02.210 --> 00:08:06.425
We can check this is being displayed correctly inside here too.

00:08:06.425 --> 00:08:09.425
We see the pepperoni pizza also in here.

00:08:09.425 --> 00:08:12.420
Let's try adding one more.

00:08:12.740 --> 00:08:15.795
We can add this with a default data.

00:08:15.795 --> 00:08:22.235
Now see the margarita has been pushed to our database and also reflected inside our menu.

00:08:22.235 --> 00:08:25.070
So this is really good progress and something which

00:08:25.070 --> 00:08:28.025
is really important for our application.

00:08:28.025 --> 00:08:30.470
Next up we're also going to do the same with

00:08:30.470 --> 00:08:34.349
our orders and synchronize these with Firebase.
