WEBVTT
1
00:00:00.450 --> 00:00:01.320
Okay my friends.

2
00:00:01.320 --> 00:00:07.680
So we just cover the data depressing part and we cover it in a flashlight thanks to our data depressing

3
00:00:07.770 --> 00:00:14.400
template and now we're about to really build and train the simple in our regression model on the training

4
00:00:14.400 --> 00:00:15.010
set of course.

5
00:00:15.030 --> 00:00:15.360
Right.

6
00:00:15.360 --> 00:00:20.970
Remember that we split it the data sets into the training set and it set the training set will be used

7
00:00:20.970 --> 00:00:26.550
to train are simple in a regression model and the test will be used to evaluate it.

8
00:00:26.550 --> 00:00:28.590
So now we have to start with the training.

9
00:00:28.590 --> 00:00:29.540
And so there we go.

10
00:00:29.550 --> 00:00:36.430
Let's create a new coat cell and let's implement the very simple linear regression model.

11
00:00:36.540 --> 00:00:36.800
All right.

12
00:00:36.810 --> 00:00:42.840
So the first thing we'll have to do is to import the right class with which we're gonna build this simple

13
00:00:42.840 --> 00:00:49.470
linear regression model because indeed we could either implement it from scratch or we could use libraries.

14
00:00:49.470 --> 00:00:55.770
And of course we're gonna use libraries because I want to provide a very clear code template which allows

15
00:00:55.770 --> 00:01:01.200
you to build any simple in a regression models and a flashlight and this library that we're going to

16
00:01:01.200 --> 00:01:07.860
use is psychic learn from which we're going to get access to a certain module called linear moral and

17
00:01:07.860 --> 00:01:13.890
from this module we're gonna call a certain class called linear regression and our simple linear regression

18
00:01:13.890 --> 00:01:18.210
model which we're gonna build will be exactly an instance of this class right.

19
00:01:18.210 --> 00:01:20.810
It will be an object of this class.

20
00:01:20.910 --> 00:01:22.020
All right so let's do this.

21
00:01:22.020 --> 00:01:29.700
Let's start by importing from you know from the psychic learn library which has the code name as K learn

22
00:01:30.060 --> 00:01:34.500
so from a scalar and then as we said we're gonna get access to a CERN module.

23
00:01:34.500 --> 00:01:43.520
So we had to add a dot here and which is linear model and from this lunar module of the Sagan library.

24
00:01:43.560 --> 00:01:52.840
Well we're going to import that linear regression class exactly this one linear regression.

25
00:01:53.040 --> 00:02:00.090
And then as we said this simple linear regression more which we're going to build will be an instance

26
00:02:00.300 --> 00:02:08.010
or an object of this linear regression class and therefore here we have to create a new horrible which

27
00:02:08.010 --> 00:02:13.380
will be exactly this instance of the linear regression class and we're going to call this object we

28
00:02:13.380 --> 00:02:18.930
can call it by any name but we're going to call it regress or because indeed we are doing right now

29
00:02:19.040 --> 00:02:19.930
regression.

30
00:02:19.980 --> 00:02:20.310
Right.

31
00:02:20.310 --> 00:02:25.980
I remind the big difference between regression and classification regression is when you have to predict

32
00:02:26.200 --> 00:02:32.400
a continuous real value like a salary as we're about to do and the classification is when you have to

33
00:02:32.400 --> 00:02:38.230
predict a category or you know a class which will we'll do in part 3 classification.

34
00:02:38.250 --> 00:02:38.910
All right.

35
00:02:39.030 --> 00:02:45.180
So regress or that's a new variable which at the same time will become the object of the linear regression

36
00:02:45.180 --> 00:02:49.940
class and you can exactly see this object as the linear regression model itself.

37
00:02:49.950 --> 00:02:56.010
You know I remind that a class allows you to implement a couple of instructions to build something and

38
00:02:56.010 --> 00:03:00.960
well this linear regression class built exactly this simple in a regression model.

39
00:03:00.960 --> 00:03:06.570
All right so you have to see this regress or object as exactly this model right a regression then to

40
00:03:06.570 --> 00:03:12.510
create an objective a class where there is nothing more simple you just have to call the class itself

41
00:03:12.930 --> 00:03:17.540
linear regression and then add some parentheses and that's it.

42
00:03:17.580 --> 00:03:23.110
Usually there are some parameters inside that we can implement but here you have to enter anything.

43
00:03:23.160 --> 00:03:27.720
This will just create a simple inner regression model and it is so simple that usually we don't have

44
00:03:27.720 --> 00:03:30.090
to play too much with the parameters.

45
00:03:30.090 --> 00:03:30.730
All right.

46
00:03:30.780 --> 00:03:35.610
And that line of code directly creates the simple linear regression model.

47
00:03:35.760 --> 00:03:37.590
And that's only the building part.

48
00:03:37.590 --> 00:03:43.140
You know we actually get a model but now of course we had to train it on the training set and therefore

49
00:03:43.140 --> 00:03:50.140
we have to connect it in some way to the training set and the action or you know the function that connects

50
00:03:50.140 --> 00:03:53.640
it in order to train it is called the Fit function.

51
00:03:53.640 --> 00:03:57.410
And that's exactly our next up here to proceed to the training.

52
00:03:57.420 --> 00:04:02.070
Remember this because you know this is your first machinery model so this is the first time you're going

53
00:04:02.070 --> 00:04:06.840
to use this fit method and then you're gonna see you're going to use it all the time whether you're

54
00:04:06.840 --> 00:04:10.980
gonna do neural networks or anything in artificial intelligence.

55
00:04:10.980 --> 00:04:16.890
The method that we're going to use to train our regression model is the fit method and how do we call

56
00:04:16.890 --> 00:04:17.930
such a method.

57
00:04:17.940 --> 00:04:24.270
Well first we have to take the object itself regress her and then add a dot and then add the method

58
00:04:24.270 --> 00:04:27.320
itself which is fit and add some parentheses.

59
00:04:27.690 --> 00:04:32.700
So as a reminder of the fit method here is a method of the linear regression class.

60
00:04:32.760 --> 00:04:38.550
And I remind also that a class indeed has a couple of not only instructions but also tools and these

61
00:04:38.550 --> 00:04:44.310
tools are called the methods and these tools complete some actions like training a model on the certain

62
00:04:44.310 --> 00:04:47.810
training set or predicting some future results.

63
00:04:47.810 --> 00:04:49.530
You know on the test set.

64
00:04:49.530 --> 00:04:53.580
So that's a first method and you'll see that then we'll use another method.

65
00:04:53.580 --> 00:04:53.850
All right.

66
00:04:53.850 --> 00:04:59.910
So basically this fit method will train this regression model the simple in a regression model on the

67
00:05:00.030 --> 00:05:04.960
training set and now as you might guess the only thing that's missing here and that we have to enter

68
00:05:05.280 --> 00:05:08.550
in the FIT method is of course the training set itself.

69
00:05:08.560 --> 00:05:14.860
However we have to enter it in a certain way because the fit method expects a certain format of the

70
00:05:14.860 --> 00:05:21.450
training set and this format is of course you know the couple of X train and Y train right.

71
00:05:21.460 --> 00:05:27.610
I reminded X train contains the features you know the independent vocals of the training set and why

72
00:05:27.610 --> 00:05:34.660
train contains the dependent variable vector of the train set as well and the fit method here expect

73
00:05:34.690 --> 00:05:42.700
exactly the train set in this format with first the matrix of features X train and second the dependent

74
00:05:42.940 --> 00:05:47.650
variable vector x train and Y train just like that.

75
00:05:47.650 --> 00:05:48.160
All right.

76
00:05:48.220 --> 00:05:53.630
So now what I suggest is that we run all the cells because we haven't run any cell so far.

77
00:05:53.650 --> 00:05:57.490
So we're going to do it because indeed when we're going to run the cells something will happen in the

78
00:05:57.490 --> 00:05:58.660
output so let's see.

79
00:05:58.900 --> 00:06:04.990
First we have to import the libraries where we import none by Metro element benders then we import into

80
00:06:04.990 --> 00:06:05.620
the data set.

81
00:06:05.620 --> 00:06:08.910
Make sure to have it uploaded in collab.

82
00:06:09.010 --> 00:06:14.430
Then step 3 we were going to split the data set into a train set and the test set.

83
00:06:14.430 --> 00:06:15.100
So there we go.

84
00:06:15.100 --> 00:06:18.200
Now we have extra in excess weight train and why test.

85
00:06:18.340 --> 00:06:23.560
And since we have X train and Y train well we can now train this simple in a regression model on the

86
00:06:23.560 --> 00:06:26.820
training set by calling this fit method.

87
00:06:26.950 --> 00:06:32.080
Taken from the regrets or object of the linear regression class here we go.

88
00:06:32.170 --> 00:06:37.660
Let's play this cell and as I told you there is something in the output that's just to say that indeed

89
00:06:37.780 --> 00:06:42.040
the linear regression model is created and that's the default parameters.

90
00:06:42.040 --> 00:06:44.420
You don't have to worry about them but there you go.

91
00:06:44.420 --> 00:06:49.630
Congratulations you actually built and trained your very first machinery model.

92
00:06:49.630 --> 00:06:54.010
I'm super excited for you I remember how excited I was the first time I did this.

93
00:06:54.070 --> 00:06:54.820
So there you go.

94
00:06:54.820 --> 00:07:00.370
I know the feeling but be aware my friends that this is the first but definitely not the last.

95
00:07:00.370 --> 00:07:05.660
Machinery model that you're going to build we're gonna build many others more complex of course.

96
00:07:05.770 --> 00:07:08.110
And for any types of applications.

97
00:07:08.110 --> 00:07:12.620
So you know by the end of this course you will know how to do anything in machine learning.

98
00:07:12.670 --> 00:07:17.710
And that's why we really want to provide code templates for you to be efficient on how to play with

99
00:07:17.710 --> 00:07:18.210
them.

100
00:07:18.250 --> 00:07:18.630
Okay.

101
00:07:19.100 --> 00:07:20.680
So congratulations again.

102
00:07:20.680 --> 00:07:23.050
Now we're gonna proceed to the next step.

103
00:07:23.080 --> 00:07:27.540
Predicting the test results and for this we're gonna use a new method.

104
00:07:27.880 --> 00:07:30.190
And so now I would like you to take action.

105
00:07:30.190 --> 00:07:34.390
I would like you to try to predict the test results before we do it together.

106
00:07:34.480 --> 00:07:35.990
And I'm gonna give you a little hint.

107
00:07:36.010 --> 00:07:42.250
Even if you can look at it online while the method that you have to use to predict new observations

108
00:07:42.550 --> 00:07:45.160
is the predictive method as simple as that.

109
00:07:45.160 --> 00:07:47.740
You know they chose some simple terms.

110
00:07:47.740 --> 00:07:50.030
So there you go try to implement that before me.

111
00:07:50.030 --> 00:07:51.800
That's your little exercise here.

112
00:07:51.940 --> 00:07:55.330
And we will implement a solution together in the next sartorial.
