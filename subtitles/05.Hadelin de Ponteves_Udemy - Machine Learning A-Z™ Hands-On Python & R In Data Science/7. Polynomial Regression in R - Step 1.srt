1

00:00:00,270  -->  00:00:02,580
Hello and welcome to this art tutorial.

2

00:00:02,580  -->  00:00:04,700
So we already built two regression models.

3

00:00:04,710  -->  00:00:09,960
It was that simple in our regression and the multiple you know regression and these two models were

4

00:00:10,050  -->  00:00:16,500
linear models and now we are going to the next level because we will start to build non-linear our regression

5

00:00:16,500  -->  00:00:17,370
morals.

6

00:00:17,370  -->  00:00:22,020
So that means that for data sets where there will not be a linear relationship between the independent

7

00:00:22,020  -->  00:00:27,520
variables and the dependent variable these non linear regression models will be very useful.

8

00:00:27,780  -->  00:00:33,150
And speaking of problems with non-linear relationships this is the kind of problems that we will have

9

00:00:33,150  -->  00:00:35,880
to deal with in the future sections.

10

00:00:35,910  -->  00:00:42,750
So in the future sections we will be not linear regression models to solve nonlinear problems and today

11

00:00:42,750  -->  00:00:46,440
in this Statoil we will start with polynomial regression.

12

00:00:46,830  -->  00:00:51,180
So as usual let's prepare the workspace by setting the rightful as working directory.

13

00:00:51,360  -->  00:00:57,150
So right now I'm going to my machinery Naisi folder for two regression then Section polynomial regression

14

00:00:57,150  -->  00:00:57,310
.

15

00:00:57,390  -->  00:00:58,780
And here's the right folder.

16

00:00:58,800  -->  00:01:03,960
Make sure that you have the position satirises the file and you can click on this more button here and

17

00:01:03,960  -->  00:01:06,120
then set as working directory.

18

00:01:06,120  -->  00:01:10,810
And now let's start with the usual first step of making of machine or any model.

19

00:01:11,100  -->  00:01:14,630
So this first step is of course the data processing step.

20

00:01:14,670  -->  00:01:19,860
So to be efficient I'm going to go to my data processing template as we made in part one.

21

00:01:20,040  -->  00:01:22,830
I'm going to select everything in a template.

22

00:01:23,190  -->  00:01:29,460
Copy and paste it in my polynomial regression model this way.

23

00:01:29,740  -->  00:01:30,330
OK.

24

00:01:30,630  -->  00:01:32,560
And now we just need to change a few things.

25

00:01:32,640  -->  00:01:35,800
So the first thing we need to change is the name of the dataset.

26

00:01:36,030  -->  00:01:37,170
So it's not data here.

27

00:01:37,200  -->  00:01:40,160
Data was the name of the data set in the pre-processing part.

28

00:01:40,260  -->  00:01:45,040
But now in this regression part the name of the dataset is position underscores salaries.

29

00:01:45,150  -->  00:01:50,320
So here all right position and the scores salaries.

30

00:01:50,760  -->  00:01:56,410
And now let's select this line and execute to have a look at our data set.

31

00:01:56,580  -->  00:01:56,930
OK.

32

00:01:56,960  -->  00:02:00,120
Now let's see what will be our machine learning mission.

33

00:02:00,600  -->  00:02:06,060
So we are a human resource team working for a big company and we are about to hire a new employee in

34

00:02:06,060  -->  00:02:07,200
this company.

35

00:02:07,200  -->  00:02:12,710
So this new employee seems to be great a good fit for the job and we we're about to make an offer to

36

00:02:12,710  -->  00:02:14,390
his potential new employee.

37

00:02:14,700  -->  00:02:20,460
And now it's time to negotiate negotiate on what is going to be the future salary of this new employee

38

00:02:20,460  -->  00:02:21,510
in the company.

39

00:02:21,870  -->  00:02:27,030
And so at the beginning of the negotiation this new employee is telling that he's had 20 plus years

40

00:02:27,030  -->  00:02:32,550
of experience and eventually earned 160 K annual salary in its previous company.

41

00:02:32,550  -->  00:02:36,500
So this employee is asking for at least more than 160 k.

42

00:02:36,810  -->  00:02:41,940
However there is someone in the H.R. team that is kind of a control freak and always fantasized about

43

00:02:41,940  -->  00:02:42,950
being a detective.

44

00:02:43,110  -->  00:02:46,740
So suddenly decides to call the previous employer to check that info.

45

00:02:46,830  -->  00:02:53,280
You know that info about the previous 160 K annual salary of this future potential new employee but

46

00:02:53,280  -->  00:02:59,070
unfortunately all the info that this person manages to get are these info here.

47

00:02:59,130  -->  00:03:04,060
The simple table of salaries for these 10 different positions in the produce company.

48

00:03:04,350  -->  00:03:10,680
So does a church member of the team runs a simple analysis on Excel or a Google sheet and actually observes

49

00:03:10,680  -->  00:03:16,600
that there is a non linear relationship between these position levels and their associated salaries

50

00:03:16,610  -->  00:03:16,950
.

51

00:03:17,610  -->  00:03:22,710
However And moreover this H.R. guy could get another very relevant info.

52

00:03:23,070  -->  00:03:28,740
This other relevant info is that this new employee that is about to be hired has been a regional manager

53

00:03:28,740  -->  00:03:34,500
for two years now in the previous company and that usually takes on average four years to jump from

54

00:03:34,500  -->  00:03:37,020
being a regional manager to a partner.

55

00:03:37,350  -->  00:03:44,430
So this new employee about to be hired was kind of halfway between Level 6 and level 7 and therefore

56

00:03:44,430  -->  00:03:46,880
we can say he was level 6.5.

57

00:03:47,250  -->  00:03:52,710
So now is a job guys getting all excited because he is selling to the team that he can build a bluffing

58

00:03:52,710  -->  00:03:58,200
detector using regression models to predict if this new employee is bluffing about it sorry.

59

00:03:58,200  -->  00:04:02,970
So at the beginning the team finds it a little weird but it's kind of curious to see what's going to

60

00:04:02,970  -->  00:04:03,900
happen.

61

00:04:03,900  -->  00:04:05,570
So here is the mission.

62

00:04:05,670  -->  00:04:12,060
This new employee that is about to be hired is telling that its annual salary was 160 in the previous

63

00:04:12,060  -->  00:04:12,930
company.

64

00:04:13,140  -->  00:04:19,560
Let's use polynomial regression to build the bluffing detector to predict if it's truth or bluff.

65

00:04:19,590  -->  00:04:19,970
All right.

66

00:04:19,970  -->  00:04:25,560
And now that we get a problem let's see if we need all the data set to train our machine learning model

67

00:04:25,680  -->  00:04:28,940
which by the way is going to be the polynomial regression model.

68

00:04:28,950  -->  00:04:34,530
Remember the machine is the polynomial regression model itself and learning is related to the fact that

69

00:04:34,740  -->  00:04:40,380
this polynomial regression machinery model will learn the correlations between the levels here and the

70

00:04:40,380  -->  00:04:46,680
salaries to predict any new salary of new levels that are not in this table here.

71

00:04:46,680  -->  00:04:53,760
For example we want to predict the salary level 6.5 Well thanks to what our machine learning polynomial

72

00:04:53,760  -->  00:04:57,400
regression model learns on this info here.

73

00:04:57,450  -->  00:05:00,610
It will be able to predict the salary of level 6.5.

74

00:05:00,980  -->  00:05:01,460
Okay.

75

00:05:01,500  -->  00:05:08,700
So we notice that in this dataset this position column is typically equivalent to this level column

76

00:05:08,730  -->  00:05:15,330
you know it's like we already encoded this position column you know by transforming this variable into

77

00:05:15,480  -->  00:05:21,750
numerical variables and therefore will not include this position column in the data set where we will

78

00:05:21,750  -->  00:05:27,930
train our polynomial regression model and we will only use these to call him level and salary so that

79

00:05:27,930  -->  00:05:32,730
the independent variable called in will be this level column and the dependent variable will be the

80

00:05:32,730  -->  00:05:34,380
salary column.

81

00:05:34,380  -->  00:05:41,220
So let's go back to our polynomial regression model and here let's select these two columns we are only

82

00:05:41,220  -->  00:05:42,150
interested in.

83

00:05:42,540  -->  00:05:45,920
So to do this we will reset the data set.

84

00:05:46,320  -->  00:05:52,050
So I'm taking my data set here and again I'm taking my data set than brackets.

85

00:05:52,140  -->  00:05:58,170
And then this brackets here will put the indexes of the columns who want to keep to train our machine

86

00:05:58,170  -->  00:05:59,140
learning mode.

87

00:05:59,610  -->  00:06:02,290
So let's see what these indexes are.

88

00:06:02,700  -->  00:06:07,190
OK so we have three columns indexes and are start at 1.

89

00:06:07,230  -->  00:06:09,020
So this column has an next one.

90

00:06:09,030  -->  00:06:11,980
This column has index 2 and this column has next 3.

91

00:06:12,120  -->  00:06:17,180
So since we want to keep these last two columns then we want to keep the indexes 2 and 3.

92

00:06:17,400  -->  00:06:19,940
OK so let's put that to him.

93

00:06:19,950  -->  00:06:24,220
Put this we can simply input to column three.

94

00:06:24,340  -->  00:06:25,400
Let's check it out.

95

00:06:25,620  -->  00:06:28,280
That's like the slide and executes.

96

00:06:28,530  -->  00:06:35,650
And as you can see now our data sets if we look at it only has these two columns level and salary.

97

00:06:35,970  -->  00:06:41,450
So as a reminder level is the independent variable and salary is the dependent variable.

98

00:06:41,490  -->  00:06:44,780
So we will use the correlations between the levels and the salaries.

99

00:06:44,820  -->  00:06:52,110
To train our non-linear machine learning polynomial regression model to predict some salaries such as

100

00:06:52,110  -->  00:06:56,150
the salary associated to a 6.5 position level.

101

00:06:56,670  -->  00:06:57,180
OK.

102

00:06:57,270  -->  00:07:00,000
So let's go back to the polling regression model.

103

00:07:00,000  -->  00:07:03,170
Our data set is well important now it's well prepared.

104

00:07:03,210  -->  00:07:04,540
We have everything we need.

105

00:07:04,700  -->  00:07:06,750
And now let's move on to the next step.

106

00:07:06,750  -->  00:07:12,630
So the next step is to split the data set into the training set and the test set.

107

00:07:12,630  -->  00:07:16,840
And actually this time and normally this time we will not do that.

108

00:07:16,860  -->  00:07:20,520
And the reason is that we only have 10 observations here.

109

00:07:20,520  -->  00:07:27,270
So this is a very small dataset and by the way I chose this dataset because we're still shaping our

110

00:07:27,270  -->  00:07:31,530
intuition of machine learning we're still learning the basics of machine learning.

111

00:07:31,770  -->  00:07:36,570
And therefore I choose the simple data set because we have two dimensions here so we will be able to

112

00:07:36,900  -->  00:07:43,560
plot the form of the polynomial regression model self as well as the future non-linear regression models

113

00:07:43,590  -->  00:07:43,910
.

114

00:07:44,200  -->  00:07:46,520
OK so let's go back to the model.

115

00:07:46,560  -->  00:07:52,350
And as I just said we won't need to split the data set into the training set in the test set.

116

00:07:52,350  -->  00:07:56,890
So what I'm going to do now is I'm going to put all this section in comments.

117

00:07:57,090  -->  00:08:05,580
So let's do this press command control plus shift plus C and that puts all your selected lines in comments

118

00:08:05,590  -->  00:08:06,010
.

119

00:08:06,300  -->  00:08:09,730
So no trainset and notice that will be created.

120

00:08:10,140  -->  00:08:12,490
OK and the last step now is feature scaling.

121

00:08:12,600  -->  00:08:16,450
And the good news is that we will need features game either.

122

00:08:16,590  -->  00:08:21,950
And the reason is simple it's that because a polynomial regression model is actually a multiple in our

123

00:08:21,950  -->  00:08:27,990
regression model with polynomial terms you know instead of having different features like features that

124

00:08:27,990  -->  00:08:33,210
represent something very different we are taking a first feature which is actually the position levels

125

00:08:33,660  -->  00:08:35,100
from 9:59.

126

00:08:35,370  -->  00:08:41,040
And as the other independent variables that we'll be in are multiple in our regression model we will

127

00:08:41,040  -->  00:08:46,600
take the squares and other exponents of these levels here.

128

00:08:47,280  -->  00:08:50,470
OK so actually that's turned out was actually very simple.

129

00:08:50,580  -->  00:08:52,560
No need for training set or test set.

130

00:08:52,560  -->  00:08:58,710
No need for future scanning just some little changes in the dataset here with indexes and we're all

131

00:08:58,710  -->  00:08:59,100
fine.

132

00:08:59,100  -->  00:09:04,470
We're ready to build our first nonlinear regression model that is the pulling of the regression model

133

00:09:04,830  -->  00:09:08,050
and that's what we will be doing in the next tutorial.

134

00:09:08,070  -->  00:09:10,930
So I look forward to creating this bluffing detector with you.

135

00:09:11,100  -->  00:09:13,050
And until then enjoyer machine learning
