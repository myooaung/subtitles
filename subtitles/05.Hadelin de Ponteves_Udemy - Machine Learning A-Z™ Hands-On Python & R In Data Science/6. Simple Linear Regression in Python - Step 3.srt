1
00:00:00,390 --> 00:00:01,280
Hello my friends.

2
00:00:01,350 --> 00:00:01,760
All right.

3
00:00:01,770 --> 00:00:06,080
How did you do with the little exercise here predicting the test set results.

4
00:00:06,360 --> 00:00:11,240
So based on what we've just done in the previous tutorial you know in training the simple in regression

5
00:00:11,240 --> 00:00:17,670
or on the training set and also based on the hint I gave you you know this predict method well you should

6
00:00:17,670 --> 00:00:19,200
have been able to crack this.

7
00:00:19,260 --> 00:00:24,270
All right now we're going to implement a solution together starting by creating this new code cell.

8
00:00:25,020 --> 00:00:25,290
All right.

9
00:00:25,290 --> 00:00:28,330
So first let's just expand what we want to do here.

10
00:00:28,380 --> 00:00:33,000
We want to predict the results of the observations in the test set.

11
00:00:33,090 --> 00:00:36,870
And so let me show you once again the data set.

12
00:00:36,900 --> 00:00:40,920
So that's the whole dataset containing the 30 observations.

13
00:00:40,920 --> 00:00:47,400
And we actually split this data set into the training set and it set the test size was chosen to be

14
00:00:47,550 --> 00:00:53,470
open to meaning that 20 percent of all these observations went into the test set.

15
00:00:53,520 --> 00:00:56,170
So 20 percent of 30 is actually six.

16
00:00:56,190 --> 00:01:02,460
So let's say just to simplify the explanation that the observations of the test set are the last six

17
00:01:02,460 --> 00:01:02,930
ones.

18
00:01:02,960 --> 00:01:05,370
You know one two three four five six.

19
00:01:05,430 --> 00:01:08,220
So let's say all these observations went into the test set.

20
00:01:08,370 --> 00:01:14,850
Well what we want to do now is predict for each of these observations meaning for each of these employees

21
00:01:15,120 --> 00:01:16,590
the salary.

22
00:01:16,590 --> 00:01:17,210
Right.

23
00:01:17,220 --> 00:01:22,560
So what we're going to input in that predict method is exactly the number of years of experience for

24
00:01:22,560 --> 00:01:27,350
each of these six employees and our moral will predict the salaries.

25
00:01:27,690 --> 00:01:32,380
So the salaries that we see here you know the last six ones are the exact salaries you know the truth.

26
00:01:32,400 --> 00:01:34,620
We call it The Ground Truth.

27
00:01:34,620 --> 00:01:41,280
And when calling the predict method on these six numbers of years of experience we will get six predicted

28
00:01:41,280 --> 00:01:42,070
salaries.

29
00:01:42,120 --> 00:01:48,990
And so what will want to do then will be to compare the predicted salaries to these real six salaries.

30
00:01:48,990 --> 00:01:49,570
OK.

31
00:01:49,590 --> 00:01:54,330
And we will do that in a less steps of this implementation when visualizing not only the test results

32
00:01:54,360 --> 00:01:59,040
but also the training set results you you're going to see everything will be super clear.

33
00:01:59,040 --> 00:02:05,610
All right so let's do this let's get the test results by first you know in order to call a method.

34
00:02:05,640 --> 00:02:08,920
We first need to call the object itself which is regressive.

35
00:02:09,150 --> 00:02:15,150
So that was the first step you had to do here then from our object we add a dot here and we call the

36
00:02:15,240 --> 00:02:16,190
function we want.

37
00:02:16,230 --> 00:02:17,240
Oh wow it's funny.

38
00:02:17,250 --> 00:02:21,270
The Google could have actually guessed what I was about to call.

39
00:02:21,270 --> 00:02:21,870
That's.

40
00:02:22,080 --> 00:02:23,330
I never noticed that but anyway.

41
00:02:23,340 --> 00:02:24,060
Yeah that's perfect.

42
00:02:24,060 --> 00:02:26,380
We want to use the predict method of course.

43
00:02:26,430 --> 00:02:27,390
Now what's the hint.

44
00:02:27,540 --> 00:02:32,310
And this brick method you know as any function expects some arguments.

45
00:02:32,310 --> 00:02:36,360
And so now according to you what does we have input in this predict method.

46
00:02:36,360 --> 00:02:37,400
Well that's simple.

47
00:02:37,470 --> 00:02:45,630
Once again you know we want to enter the features meaning numbers of years of experience and not the

48
00:02:45,630 --> 00:02:47,480
salaries that were just for the training set.

49
00:02:47,550 --> 00:02:51,960
Here we only need the numbers of experience because from the numbers of experience we want to predict

50
00:02:52,290 --> 00:02:58,360
the salaries and the numbers of experience are exactly contained in x test.

51
00:02:58,410 --> 00:02:58,650
Right.

52
00:02:58,650 --> 00:03:01,680
Because we want the numbers of experience of the test set.

53
00:03:01,770 --> 00:03:05,570
And so the only thing we had input here is access.

54
00:03:05,620 --> 00:03:06,810
And there you go.

55
00:03:06,810 --> 00:03:07,770
That was the solution.

56
00:03:08,390 --> 00:03:08,700
OK.

57
00:03:08,700 --> 00:03:10,620
So as you can see once again very easy.

58
00:03:10,620 --> 00:03:12,380
That's the beauty of the libraries.

59
00:03:12,420 --> 00:03:17,040
You can just do anything you want in usually one or two or three lines of code.

60
00:03:17,040 --> 00:03:22,170
And here we just had to call the predict method to make some predictions from a model that is of course

61
00:03:22,260 --> 00:03:24,550
already trained on the training set.

62
00:03:24,550 --> 00:03:25,260
All right.

63
00:03:25,470 --> 00:03:31,050
Now because we are going to visualize then the training that results in a test results I'm actually

64
00:03:31,050 --> 00:03:36,720
going to put all these predictions because this returns actually a vector of predictions you know a

65
00:03:36,720 --> 00:03:41,010
vector containing the predicted salaries of the employees in the test set.

66
00:03:41,040 --> 00:03:46,800
So I would like to put all these British salaries in a vector therefore in a new variable and therefore

67
00:03:46,800 --> 00:03:54,660
here I am creating this new variable which I'm calling why Fred you know as opposed to y test which

68
00:03:54,660 --> 00:03:55,920
contains the real salary.

69
00:03:55,950 --> 00:04:01,320
So make sure to understand why test here contains the real salaries and why bread here contains the

70
00:04:01,320 --> 00:04:02,560
predicted salaries.

71
00:04:02,820 --> 00:04:08,260
And now in the next steps we're going to compare white bread to white test and also we'll compare white

72
00:04:08,280 --> 00:04:14,610
train to the predicted salaries in the training set in the last two steps of this implementation visualizing

73
00:04:14,640 --> 00:04:19,590
the trains that results and visualizing the test results we will get amazing graph super clear super

74
00:04:19,890 --> 00:04:25,650
simple to understand and we will clearly see how well our model was trained with this visualization

75
00:04:25,950 --> 00:04:30,420
and how well amo was able to predict new observations with this visualization.

76
00:04:30,660 --> 00:04:32,510
So let us do this in the next sartorial.

77
00:04:32,550 --> 00:04:34,410
And until then enjoy machine learning.
