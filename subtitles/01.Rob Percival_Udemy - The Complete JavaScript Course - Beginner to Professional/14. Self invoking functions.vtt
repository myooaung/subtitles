WEBVTT

00:01.380 --> 00:07.480
Welcome back in another use for anonymous functions is to have self executing functions.

00:07.530 --> 00:10.170
So very similar to the anonymous function.

00:10.360 --> 00:17.280
It gives us the ability to execute a function whenever the script comes to that.

00:17.510 --> 00:24.560
And there is a benefit for this because it does actually give us the ability to execute out and set

00:24.560 --> 00:31.490
variables because we know variables will only live inside of the function if they're created with a

00:31.490 --> 00:33.660
function that they're declared within the function.

00:33.800 --> 00:41.000
So we can make use of variables within that function and output them and utilize them and then we know

00:41.000 --> 00:45.210
that they get destroyed as soon as the function finishes rendering it.

00:45.230 --> 00:49.200
So this is how we can create a self executing function.

00:49.310 --> 00:54.420
So basically what's going to happen here is that this function is going to execute.

00:54.560 --> 00:56.500
And let's set up variables.

00:56.540 --> 00:58.830
We're setting up a variable of a.

00:58.970 --> 01:02.880
And this one is going to say a little.

01:03.290 --> 01:09.740
And then with in here we're creating another variable A and this one is a world

01:12.490 --> 01:14.700
and basically lets put

01:17.600 --> 01:27.430
We'll put a here and then let's put the value of A as well afterwards.

01:27.440 --> 01:34.880
So after the function gets called after it runs through then were you also in another value of A.

01:35.090 --> 01:36.240
Put a space there.

01:36.440 --> 01:39.560
Let's try this out and we get world hello.

01:39.800 --> 01:47.630
So basically what's happened here is that I should actually reverse the is because we know that we're

01:47.630 --> 01:51.380
trying to Kolton this one first and one second.

01:51.520 --> 01:53.380
So more typically you would see.

01:53.400 --> 01:54.800
Hello world.

01:54.830 --> 02:02.030
So let's go through what's going on here within the code and self executing self executing anonymous

02:02.030 --> 02:03.410
functions.

02:03.420 --> 02:11.240
They're great for holding items and variables specifically that you might not need to make use of after

02:11.300 --> 02:14.450
you've done this initiation of them.

02:14.720 --> 02:19.550
So you don't need to hold them in the memory any longer and basically you can get them destroyed after

02:19.600 --> 02:22.060
an X X and executes.

02:22.130 --> 02:27.710
And this is a great way to especially if you've got a really long program you've got a lot of variables

02:27.710 --> 02:32.900
that you're using to make sure that you're not having conflicting values for the variables you use them

02:32.990 --> 02:34.580
when you need to make use of them.

02:34.610 --> 02:41.840
And then once you've completed and once you've run through your use of them then you can go back to

02:41.840 --> 02:44.780
the global variables and then also make use of those.

02:44.960 --> 02:48.020
So it's a way to save some space within the memory.

02:48.020 --> 02:55.610
So basically we're setting the value of a over here or grabbing that element area to output our content

02:55.940 --> 03:00.800
then we're creating this anonymous functions some new name for the function because we don't need to

03:00.800 --> 03:03.530
make use of it anywhere else within our script.

03:03.560 --> 03:08.930
We just want it to run through one time and ideally it's going to hold a bunch of variables here that

03:08.960 --> 03:10.210
where you can do something worth.

03:10.210 --> 03:11.480
We're going to make use of them.

03:11.510 --> 03:17.480
We might also make use of some of the global variables we can't call them the same obviously but we

03:17.480 --> 03:24.770
can make use of some global variables local variables create an output and then once that finishes running

03:24.830 --> 03:31.460
all of those variables get destroyed and we go back to our global scope where we've just outputting

03:31.610 --> 03:35.060
the initial value that we have within our global scope.

03:35.060 --> 03:36.180
So that's what's happening there.

03:36.200 --> 03:39.800
And when we refresh it and put it we get.

03:39.830 --> 03:40.900
Hello world.

03:41.150 --> 03:47.870
So what I want you to do is try this for yourself as well and try creating an anonymous function to

03:47.870 --> 03:54.650
run and set up some variables in there and then output those variables do something with the variables

03:54.680 --> 03:56.470
within that anonymous function.

03:56.540 --> 04:02.090
And then once you finished then you can go back and start using some of the global variables that you

04:02.160 --> 04:06.120
had originally set up outside of this anonymous function.

04:06.140 --> 04:08.730
So open up your or try it for yourself.
