WEBVTT

00:00.480 --> 00:05.800
Welcome back in in this lesson we're going to do a little bit of fine tuning of our application.

00:05.850 --> 00:13.250
So what we wanted to do is actually make cards local variable within the start function.

00:13.260 --> 00:16.280
So what I want you to do now is actually I've already started this.

00:16.290 --> 00:23.070
But what I want you to do now is pause the video and try to make cards local within a start deal.

00:23.070 --> 00:29.430
So we don't want cards as a global value anymore we're trying to cut down as much as possible on these

00:29.430 --> 00:30.690
global values.

00:30.690 --> 00:32.530
So let's keep that locally.

00:32.790 --> 00:40.770
And you can also do players as well if you want to but to keep it simpler let's just keep players global

00:40.830 --> 00:47.160
and where you take cards locally within a start deal to pause the video and make this local make cards

00:47.160 --> 00:51.550
local and let me show you the solution.

00:51.560 --> 00:56.690
So basically we're going to get rid of it there we're going to get rid of it here as well and we're

00:56.690 --> 01:03.560
going to use cards here and we're going to set up a variable called cards and passing it over to the

01:03.560 --> 01:05.720
function build cards.

01:05.720 --> 01:08.460
So within build cards we need an array.

01:08.490 --> 01:10.170
So blank to work with.

01:10.190 --> 01:12.070
So we might as well call it cards.

01:12.200 --> 01:20.090
And the last thing that we need to do is hit return and return back the value of this array cards because

01:20.090 --> 01:26.650
we use it within here and we're going to turn it back and when we returned back a value within a function

01:26.650 --> 01:33.440
and then that basically means that this variable within this function is now going to get assigned that

01:33.530 --> 01:35.320
set of values.

01:35.480 --> 01:42.310
So basically we're building a deck of cards within this function and we're not using any global variables.

01:42.320 --> 01:46.570
So now we've already set up that we're passing that value of cards.

01:46.580 --> 01:50.600
And here we're also passing the value of cards in deal.

01:50.600 --> 01:52.660
So there's actually nothing to change in there.

01:52.700 --> 01:58.410
So this one was already set up that it would shuffle whatever rate gets sent in there.

01:58.520 --> 02:03.140
And then this one we had early set it up that were passed and the value of cards in there.

02:03.140 --> 02:07.150
So just make sure that you do have that and you are passing that in there.

02:07.190 --> 02:13.730
Otherwise this function won't know what cards is and you're going to get an error when you try to call

02:13.730 --> 02:14.690
back to cards.

02:14.690 --> 02:15.690
So let's try it.

02:15.710 --> 02:19.840
Let's refresh it deal to four people steal to two.

02:19.910 --> 02:25.700
And we see that everything is working nice and neatly just as before but we were able to move this variable

02:25.700 --> 02:27.840
from the global scope locally.

02:28.040 --> 02:32.540
And this is going to be always a real benefit whenever you're building out applications.

02:32.540 --> 02:40.190
If you can simplify it and if you can keep these variable values even the arrays keep as much as possible

02:40.220 --> 02:46.550
locally within the function and within this set up we've got the four functions each one has its own

02:46.730 --> 02:53.570
specific task within this application and that's usually how I use functions when I build out applications

02:53.900 --> 02:57.400
I initiate a function to have its own set of tasks.

02:57.500 --> 03:02.320
And that way I can call upon those tasks anywhere within the application.

03:02.330 --> 03:08.560
So if you have something a whole lot more complex than this one and if all of a sudden you're and your.

03:08.560 --> 03:12.230
You've created a game out of this and it calls for shuffling the cards.

03:12.350 --> 03:13.730
You've got that function there.

03:13.820 --> 03:17.850
If it calls for dealing the cards you've got that function there and ready to go.

03:17.900 --> 03:24.320
And then also Also consider that you might have to bring that this back out within the global scope.

03:24.440 --> 03:29.480
If you're trying to access these cards that are only available within this function so be careful be

03:29.480 --> 03:31.010
cautious and be careful.

03:31.160 --> 03:37.190
And use your Gobel values as sparingly as possible.

03:38.610 --> 03:44.430
And also keeping in mind that if you want any other values within the card object you can add them in

03:44.430 --> 03:46.050
here as well.

03:46.060 --> 03:49.760
Sometimes what I'll do is if I want to then the value of it.

03:49.770 --> 03:51.960
So maybe I can set another variable.

03:51.960 --> 04:03.160
Call it V and I can just simply take the value of the index value that I'm looking at for C and I can

04:03.160 --> 04:05.260
output it within value.

04:05.260 --> 04:06.650
So basically.

04:07.300 --> 04:11.820
And actually this one should be plus one.

04:11.890 --> 04:15.570
So I'm going to wrap around that.

04:15.580 --> 04:22.660
So the reason I'm doing a plus one is because my cards are my cards as we know arrays started 0 so I

04:22.660 --> 04:25.400
need to add plus one to give it a value of 1.

04:25.510 --> 04:27.420
Or actually my cards are starting at 2.

04:27.430 --> 04:29.180
So let's start it up plus two.

04:29.380 --> 04:31.050
Let's go back out refreshed.

04:31.060 --> 04:40.000
Deal the cards go into our console and remember we've got cards within the local scope of the function

04:40.210 --> 04:43.910
so we can still access them with players because that's a global scope.

04:43.990 --> 04:46.890
Now we can see that each one of these objects.

04:46.930 --> 04:55.090
So that is we're not adding it together because it's we need to convert that to a number so that let's

04:55.120 --> 05:02.770
update that convert into a number and then we'll add 2 to it go back out refreshed and let's try that

05:02.770 --> 05:03.090
again.

05:03.100 --> 05:11.910
So deal it and two players and this time we should actually have the value for players of the card.

05:11.950 --> 05:13.550
So let's open that up.

05:13.570 --> 05:19.600
So we've got aces are worth 14 jacks are worth 11 sixes worth 6.

05:19.600 --> 05:21.560
So we see we've got that value in there.

05:21.790 --> 05:22.750
So go ahead.

05:22.750 --> 05:24.520
Also try it to for yourself.

05:24.610 --> 05:27.550
Add in some additional values within this object.

05:27.640 --> 05:30.360
And then you can make use of it within the output as well.

05:30.460 --> 05:36.670
So try that out for yourself and build out all of these functions and again try to keep things within

05:36.670 --> 05:43.390
the local school as much as possible when you're utilizing functions and when you are building functions

05:43.600 --> 05:49.750
think of them as having their own set of instructions within each function and running its own set of

05:49.750 --> 05:50.470
code.

05:50.470 --> 05:56.500
So typically we could have even done one here where we could have broken out this value here and we

05:56.500 --> 06:00.130
could have created the players within a function.

06:00.130 --> 06:03.940
So if we had more information per player we might want to do that as well.

06:03.940 --> 06:06.670
So there are a number of different options available to us.
