WEBVTT

00:03.240 --> 00:09.480
So we've worked with strings earlier and we know that strings we can create a string and we can just

00:09.540 --> 00:13.480
define it by a variable and we can give a variable name.

00:13.500 --> 00:16.850
And this is how we can actually create a string.

00:17.070 --> 00:19.180
So this is actually a string primitive.

00:19.230 --> 00:25.030
And javascript automatically will convert your string primitive to a String object.

00:25.140 --> 00:29.130
But in case you want to create a string object directly.

00:29.340 --> 00:35.630
So I'm going to actually do world hello and I'm going to show you why I did that later on.

00:35.640 --> 00:43.820
So if you want to actually create a string object right away you can do string.

00:43.820 --> 00:47.560
You could do new and string.

00:47.720 --> 00:49.530
And basically what this will do.

00:49.550 --> 00:55.000
This will create a global object that is constructor strings.

00:55.010 --> 01:04.290
So basically allows us to create a string and then within here we can do hello world and save that.

01:04.310 --> 01:11.360
And now let's go back out into our page and we know that we've got a we've got B and we see that the

01:11.360 --> 01:18.750
string object we've got all of these different characters so we've got the string is actually broken

01:18.750 --> 01:21.960
down and it looks exactly like an object.

01:22.080 --> 01:24.490
And we've got our primitive value here.

01:24.510 --> 01:30.050
So this is the one that we're used to working with where we would just have our typical value and when

01:30.050 --> 01:35.760
we output it in the console then all we see is all of that value put together.

01:35.760 --> 01:41.700
But here we see some of the characteristics that we saw earlier even when working with arrays where

01:41.700 --> 01:43.410
we've got enough length.

01:43.560 --> 01:46.130
We've got all of the different characters.

01:46.140 --> 01:54.720
So basically what that means is that if I do B and let's say I wanted to select character that actually

01:54.750 --> 01:56.010
that would be an elf.

01:56.010 --> 01:58.950
So let's let's do six.

01:59.220 --> 02:01.770
Not sure which one will be so this will be a W.

02:01.890 --> 02:09.480
So I can select the characters separately and the really cool thing about it is I can do that for a

02:09.570 --> 02:10.370
as well.

02:10.530 --> 02:16.920
So really javascript is doing a lot behind the scenes here because it's converting those primitives

02:17.190 --> 02:18.940
into the string objects.

02:19.080 --> 02:23.910
So most of the time you're not going to have to define strings within this type of format to get the

02:23.910 --> 02:27.480
ability to work with strings as objects.

02:27.690 --> 02:32.460
So we saw that here and we can also get a length of a string.

02:32.640 --> 02:38.290
So just as we did with an array we can find out how many characters are within that string.

02:39.450 --> 02:43.740
So the first character in the string has the value 0.

02:43.740 --> 02:49.140
So just like an array and the last character is just before the length.

02:49.200 --> 02:53.820
So it's minus one off of the length and that's how we know what the last characters

02:56.830 --> 02:58.860
index value will be.

02:58.900 --> 03:06.610
So we can also go into a string and we can check to see if we can return back a character value at a

03:06.610 --> 03:07.900
certain location.

03:07.900 --> 03:18.970
So if I did something like a and I did character it basically this and we need to specify an index value.

03:19.060 --> 03:24.600
So let's try six again so I can do character at 6 and it's actually going to return back.

03:24.610 --> 03:27.510
The same thing as that square bracket did.

03:27.640 --> 03:32.590
So this is actually a short format then doing character out and most of the time you're probably not

03:32.590 --> 03:37.180
going to use character out you're just going to use the shorthand method the same way that we're just

03:37.270 --> 03:41.310
specifying the index value with square brackets.

03:42.160 --> 03:47.050
And just as we saw there was a lot that we can do with arrays.

03:47.050 --> 03:49.420
There's a lot we can do with strings as well.

03:49.510 --> 03:51.840
So we can concatenate them together.

03:51.970 --> 03:56.100
And this is another one that we already have another solution for.

03:56.110 --> 03:59.500
So if we can cat need it together basically it returns back.

03:59.530 --> 04:05.680
All of that string value together and we know that if we do a plus b that's also a shorter format for

04:05.680 --> 04:07.270
concatenating it together.

04:10.080 --> 04:13.200
So let's go ahead and create an exercise.

04:13.230 --> 04:19.750
So the first thing that we need to do within this exercise is have an input for string.

04:19.990 --> 04:30.690
Then the second thing that we want to do is I have another input to guess the length of the string from

04:30.690 --> 04:42.550
the input above and then we also need to have a button to trigger function and then let's create a function

04:42.820 --> 04:53.130
that's actually going to check to see if the guess is correct and output the results over to the message.

04:53.140 --> 05:00.460
So pause the video and build out all those functionality and I'll show you how to do that.

05:00.460 --> 05:02.740
Coming up.

05:02.950 --> 05:05.970
So if you get an opportunity to try this out.

05:06.280 --> 05:09.010
So let's let's create what the solution is.

05:09.010 --> 05:10.930
So first thing that we need is an input.

05:10.930 --> 05:17.440
This is just a regular text input and from this input we're going to give it an idea so we can pick

05:17.440 --> 05:20.980
up the value and this will be my guess.

05:20.980 --> 05:23.030
So this is where this is actually no.

05:23.030 --> 05:24.090
Sorry this one isn't.

05:24.130 --> 05:30.160
Guess this would be the we'll call it my string.

05:30.520 --> 05:33.490
So this is the string that we've entered in.

05:33.580 --> 05:39.880
And now we're going to leave it up to the user to guess how many characters how long that string is

05:41.660 --> 05:51.860
next let's do input and we'll do type and this one will just do a type number and we'll give it an ID

05:51.920 --> 05:52.690
as well.

05:52.700 --> 05:57.150
And this one is going to be called guess.

05:57.180 --> 06:04.230
And then lastly let's do one more input and this time puts do a button and we're going to give it a

06:04.230 --> 06:10.910
value of guess and then we'll add an On Click event.

06:11.520 --> 06:15.610
And then this event will be check yes.

06:15.770 --> 06:17.670
So we'll fire off check yes.

06:17.730 --> 06:20.170
Whenever that button gets clicked.

06:20.190 --> 06:25.800
So that takes care of those first two parts and then actually three parts.

06:25.800 --> 06:33.030
So now we need to create a function so let's create a function and call it check guess and check.

06:33.030 --> 06:42.060
Guess we'll do a conditional statement to check to see the length of my string and it will compare it

06:42.150 --> 06:44.670
to the value that's a guess.

06:44.820 --> 06:47.940
And if you got it right then it all right up here.

06:47.940 --> 06:48.760
Correct.

06:48.810 --> 06:52.890
And if you got it wrong then I'll tell you what the correct answer will be.

06:52.890 --> 06:53.790
So let's add that in.

06:53.820 --> 07:00.780
So this is a condition and we're going to use that string length value.

07:00.780 --> 07:03.260
So we know that.

07:03.990 --> 07:09.160
Let's set up a couple of variables and this one will take in the string value.

07:09.390 --> 07:17.340
So you can do documents and get element by id and the ID is also my string.

07:18.090 --> 07:21.340
So grab that value into the variable next.

07:21.390 --> 07:28.190
Let's do my guess and this one we're going to do.

07:28.190 --> 07:36.540
Documents Yeah element by id and this time we're going to grab the value of guests and this is of value

07:36.750 --> 07:38.220
because it's an input.

07:38.220 --> 07:42.220
So now we've got I guess and we've got my stream.

07:42.450 --> 07:44.000
So next let's compare.

07:44.010 --> 07:45.590
So we've got our condition there.

07:45.720 --> 07:51.000
So we're going to check to see if the length is equal to my guess.

07:51.360 --> 07:58.140
And if it is then we know we need to output something in message to do correct and otherwise we're going

07:58.140 --> 07:58.640
to do so.

07:58.680 --> 08:01.880
We're going to say that you were wrong it was this value.

08:02.040 --> 08:06.150
So let's set up a variable for a message because we are going to use it twice.

08:06.150 --> 08:08.360
We're going to just set it up as a global.

08:08.580 --> 08:11.680
So document element by ID.

08:11.910 --> 08:14.770
Let's grab message into there.

08:15.320 --> 08:21.960
And now in the gaps in her HMO and this this is for message.

08:21.960 --> 08:27.510
So the message object message in our HMO now equals.

08:27.510 --> 08:35.520
So this is if they got it correct correct it was and then we can also add that length there as well.

08:35.520 --> 08:40.620
So you can see we can actually see the length and otherwise.

08:40.620 --> 08:44.890
So if they didn't guess correctly this is where we're going to use elf's.

08:45.000 --> 08:53.990
So we know that if it was not correct then we're going to say incorrect or we can just say wrong it

08:54.260 --> 08:58.340
was and then we'll output the value just as we did above.

08:58.700 --> 08:59.770
So now we're ready.

08:59.780 --> 09:01.730
Let's try this out.

09:03.080 --> 09:03.840
Save it.

09:03.860 --> 09:05.200
Go back out to the page.

09:05.210 --> 09:07.870
We can clear that we can minimize this.

09:07.940 --> 09:12.230
And let's go back out and refresh it and we should have actually labeled them.

09:12.230 --> 09:15.940
But anyway this is going to be our strings so this one is Hello world.

09:16.070 --> 09:22.410
And the next one is number so we're going to guess how many characters are in Hello world.

09:22.490 --> 09:27.590
So let's say 11 and we see that it was wrong and it was undefined.

09:27.590 --> 09:32.010
So we're having a problem there that actually we're not getting the length of that string.

09:32.150 --> 09:33.880
So let's see what happened.

09:34.730 --> 09:39.930
And going into the code I missed the value there so isn't actually picking up a value.

09:39.980 --> 09:42.800
So let's go back refreshed and let's try this again.

09:42.800 --> 09:46.640
So hello world and let's do our guests.

09:46.670 --> 09:51.670
So 11 and we see that we were correct if we update it to 12.

09:51.710 --> 09:53.560
We were wrong it was 11.

09:53.570 --> 09:57.490
So remember that the space also counts as a character.

09:57.620 --> 10:02.060
So that's where we're able to guess the different values.

10:02.090 --> 10:09.830
So go ahead try it for yourself and make some adjustments to it and also add in longer strings and then

10:09.830 --> 10:12.470
you can go ahead and guess the values.

10:12.590 --> 10:19.140
Also add in spaces so if I add in some spaces at the end you can see that whenever I guess.

10:19.250 --> 10:25.310
So that makes it a little bit more tricky because this way we're guessing and we're not always right

10:25.340 --> 10:27.190
because we've got the spaces at the end.

10:27.290 --> 10:31.790
So always be careful of spaces that are within your string value.
