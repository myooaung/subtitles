WEBVTT

00:01.300 --> 00:05.840
With the newer browsers we got a lot more access to different API.

00:06.010 --> 00:12.220
So some of these API that are coming up in this section may not work in some of the older browsers they

00:12.220 --> 00:16.230
do work in Chrome and they work within most of the mobile browsers.

00:16.420 --> 00:19.690
So in this lesson we're going to be looking at file praetor.

00:19.810 --> 00:25.630
So what this does is this gives you the ability to upload files into javascript.

00:25.630 --> 00:31.270
So let's show you how to set this up so first of all we need an input and the input type is going to

00:31.270 --> 00:31.990
be file.

00:31.990 --> 00:40.570
So we're going to be uploading a file and also let's do multiple.

00:40.710 --> 00:47.060
So we'll have ability to upload multiple files and we're going to do on onchange event handler.

00:47.100 --> 00:57.820
So whenever this changes then we're going to up files and that's going to be the event handler that

00:57.820 --> 01:06.940
we're going to use and within the argument let's pass over this files object so we're passing over we're

01:06.940 --> 01:13.630
using this object that we looked at earlier and we're passing over all of that file information on the

01:13.630 --> 01:14.430
upload.

01:14.530 --> 01:20.050
And also I'm going to add in one more div here.

01:20.100 --> 01:21.820
And within the div..

01:21.930 --> 01:25.840
So this is basically going to be whatever content we want to output.

01:25.860 --> 01:29.260
And we want to display when the files get uploaded.

01:29.400 --> 01:36.660
So now let's build our function in javascript and the whole thing with the web API is in each tim L5

01:36.690 --> 01:45.150
is connecting javascript to our h HTML and making added additional functionality into the code and into

01:45.150 --> 01:47.210
the web pages.

01:47.310 --> 01:53.220
So a lot to set up some variables and we're going to do what we've done before where we're doing document

01:53.610 --> 02:04.380
get element by id and we're going to grab the one that's the element with the name message.

02:04.630 --> 02:12.520
And also let's do a quick check just to make sure so as I mentioned before that not all of the browsers

02:12.520 --> 02:13.880
are going to support this.

02:14.020 --> 02:20.730
So I want to do a quick check on the window and the function that we're checking is file reader.

02:20.830 --> 02:29.530
And as we can see here this allows us to file reader lets us read object's contents of files into our

02:29.530 --> 02:31.470
javascript and then make use of them.

02:31.480 --> 02:34.040
So not all the browsers are going to be able to accept this.

02:34.050 --> 02:37.990
So we're going to check and make sure that it is available.

02:37.990 --> 02:44.190
So what I want you to do now is pause the video and we've already added in the condition to check if

02:44.200 --> 02:46.300
file reader is available.

02:46.300 --> 02:49.810
So what I want you to do is output within the message area.

02:49.900 --> 02:57.910
If file reader is available just say file reader is available and if it's not available then output

02:57.910 --> 03:02.590
within the message Div. that file reader is not available.

03:02.590 --> 03:10.920
So go ahead and pause the video and add in those updates and changes so you had an opportunity to try

03:10.920 --> 03:11.570
that out.

03:11.790 --> 03:16.150
And this part was what we've done before within message.

03:16.290 --> 03:18.410
So we saw that there's a number of ways.

03:18.450 --> 03:21.420
And basically this was just plain conditional statement.

03:21.540 --> 03:24.590
When we do window we're looking into the window object.

03:24.750 --> 03:30.130
And what we're looking for is the file reader function that's available within the window object.

03:30.240 --> 03:37.350
So if it is available and we have access to it then we're going to output a message that file reader

03:37.530 --> 03:45.600
is available and if it's not available so this was the second part was the condition statement that

03:46.380 --> 03:51.230
if it's not available so file reader and we'll just say not available.

03:51.240 --> 03:55.960
So just update this and put a big upper case there that it's not available.

03:56.160 --> 03:57.660
So let's try this out.

03:57.690 --> 04:05.000
Let's go into our code and save the file and let's refresh and we see file reader is available.

04:05.040 --> 04:09.560
And as mentioned I am using Chrome and chrome for the most part.

04:09.660 --> 04:13.340
Most of these brand new API is aged him L5.

04:13.500 --> 04:18.450
They're all going to work within chrome and they're also going to work across a lot of the mobile browsers

04:18.840 --> 04:24.410
and some of the older browsers like IEEE IEEE eight IEEE nine will have trouble with this.

04:24.510 --> 04:32.710
So before you try to use it just make sure that it is compatible with the browsers that your users are

04:32.710 --> 04:34.000
typically using.

04:34.000 --> 04:37.740
So the next thing that we need to do is I want to add in this function.

04:37.750 --> 04:41.200
So we did create that listener for up files.

04:41.200 --> 04:46.900
So let's create a function now and this function is the one that is going to get called with the event

04:46.900 --> 04:52.930
handler and we're going to just pass over some file information so we can call it files because we're

04:52.930 --> 04:59.380
passing over all that file information and because we're allowing the ability to add multiple files

05:00.130 --> 05:03.370
so we can loop through all the different files that are being received.

05:03.370 --> 05:09.670
So let's do a quick loop so variable x and this is the same function that we've done before.

05:09.700 --> 05:15.550
So we're going to loop while X is less than the length of files because this is going to be represented

05:15.580 --> 05:20.440
as an array and then we need to increment X in order to break out of our array.

05:20.440 --> 05:24.690
So next to that we need to do is we need to pick up the file information.

05:25.060 --> 05:31.570
And for now I'm going to just Konsole a log out that file information so a console log out what we're

05:31.570 --> 05:32.550
picking up here.

05:32.590 --> 05:40.400
So as we loop through them we can console log at all the different files that are available or maybe

05:40.400 --> 05:46.700
what we can do is we'll just add it into our message because we did set that up so we can just add it

05:46.700 --> 05:48.960
in to message there.

05:49.620 --> 05:55.490
And in so starting in a library so it's more readable.

05:56.530 --> 05:57.010
So there we go.

05:57.020 --> 06:03.310
So now whenever we select some files we should see that output being put within our age home page.

06:03.310 --> 06:04.400
So let's try that out.

06:05.780 --> 06:08.520
And before we go there is a few errors here.

06:08.540 --> 06:14.840
So just to make sure that we do need to output because we're going to get return back as an object so

06:14.840 --> 06:16.940
files get returned back as an object.

06:16.940 --> 06:22.040
So they're going to contain a length and each one of the files is actually gonna have a name and last

06:22.070 --> 06:22.500
updated.

06:22.500 --> 06:26.620
So there's some information that gets returned back for each one of the files.

06:26.630 --> 06:28.570
So now we're ready to test it out.

06:28.580 --> 06:30.230
Let's go ahead and grab.

06:30.290 --> 06:34.670
So we grab two different files and we loop through all the different file names.

06:34.670 --> 06:40.340
So the next thing that we want to do is we want to read this information into our h t m l.

06:40.370 --> 06:41.540
So now that we're able.

06:41.540 --> 06:48.710
We know that we're actually able to grab that file information we need to set up some we need to set

06:48.710 --> 06:50.110
up our reader.

06:50.250 --> 06:52.980
So basically this is going to be the F reader.

06:54.200 --> 06:59.780
So file reader and we're going to create a brand new object and the brand new object that we're creating

06:59.810 --> 07:06.900
is going to be a file reader object and need to do the round in brackets here.

07:10.610 --> 07:20.060
And every time that we pick up a new file our f reader can then output that information so we can actually

07:20.060 --> 07:23.280
what we can do is we can console log that.

07:23.510 --> 07:28.130
So it can take a closer look at actually what's happening here with the reader.

07:29.500 --> 07:32.810
And that afterwards I'll show you how you can output it into your aged him.

07:32.810 --> 07:34.830
So let's go ahead and try that out.

07:34.900 --> 07:37.870
So see that and go and refresh the page.

07:38.050 --> 07:42.760
And we're going to grab those same two files and you can also do this with one file as well.

07:42.910 --> 07:46.610
And we're just going to open up the console.

07:46.800 --> 07:50.910
And so basically this is what we see within the console.

07:50.910 --> 07:53.070
So we get all of that file information.

07:53.070 --> 07:57.450
So for each one we have a number of different states we've got a ready state.

07:57.450 --> 08:02.730
We've got on progress on load on load and on a board.

08:02.820 --> 08:06.600
So we've got all of this information and we can use these.

08:06.600 --> 08:12.090
So these are objects that are contained within the file reader object and we can check to make sure

08:12.090 --> 08:18.660
that when it loads that we can do something and so on we can also do something if there is an error.

08:18.660 --> 08:25.140
So this is basically giving us more options as to what we can do with the F reader object.

08:25.140 --> 08:27.740
So this is that new one that we've just created.

08:27.870 --> 08:32.030
So let's create a few scenarios here.

08:32.040 --> 08:34.950
So whenever we finish loading.

08:34.950 --> 08:40.830
So whenever we do f reader on let's just do a function so do an anonymous function.

08:40.950 --> 08:47.460
So we're passing over the event information so much because we saw earlier with event handlers where

08:47.460 --> 08:55.950
we can get event information and we can console log it or we can pick up that information and that information

08:56.010 --> 08:57.470
is going to be saved.

08:57.510 --> 09:07.210
The same thing as the listener where we can do the event target and we can just return back the result.

09:07.450 --> 09:09.120
And I'm actually going to console a lot.

09:09.130 --> 09:12.820
I'm going to get rid of this one here because we don't need to take a look at that anymore.

09:12.850 --> 09:22.210
And I'm also going to just log out just the plain just the plain event target so that we can take a

09:22.210 --> 09:25.600
closer look at that object with the result as well.

09:25.600 --> 09:27.010
So now let's try this again.

09:27.010 --> 09:34.690
So let's open this up and refreshed grab both of those files and open up our console and we can see

09:34.690 --> 09:37.560
within the console.

09:37.680 --> 09:41.170
And there's one other thing that we need to add in still to make it function.

09:41.190 --> 09:49.540
So this is the last part of the everyday object and we need to read as so got a few options and we're

09:49.540 --> 09:51.250
going to read it as a text.

09:51.250 --> 09:56.580
So we're going to read whatever content of those files so when he Tulsa's specify the file that we want

09:56.610 --> 10:02.850
to read and the file is Files X. So this is the object that we actually want to read.

10:02.860 --> 10:08.680
So this again this is being submitted by the input here and then we're able to read that.

10:08.710 --> 10:14.140
So let's go back and refresh the page and I'll show you what's going to show up within the console.

10:14.140 --> 10:20.290
So each one of those files they just have some basic text and you can actually see the text being output

10:20.320 --> 10:20.620
here.

10:20.620 --> 10:23.440
So this is being output in the result.

10:23.440 --> 10:26.140
So this is ultimately what we want to output.

10:26.260 --> 10:28.680
So we're going to output both of those values.

10:28.690 --> 10:34.800
The result is the contents of the file and we're going to output that information into our HVM mail.

10:34.900 --> 10:38.240
And the way that we can do that is within the on load.

10:38.260 --> 10:47.260
So instead of having this one here let's make a quick update and we're pulling back that target result

10:47.350 --> 10:51.450
value and we can also add that up here as well.

10:51.460 --> 10:54.940
So let's let's let's just added an up here

10:57.930 --> 11:03.680
and I get to swap these around so that we have the contents of the file underneath the name of the file

11:03.690 --> 11:09.030
so put the name of the file first and then next will have the contents of the file.

11:09.030 --> 11:09.990
So let's check it out.

11:09.990 --> 11:14.600
So let's open this up and refreshed and grab those two files.

11:14.670 --> 11:16.300
And as you can see those files.

11:16.440 --> 11:19.680
They just simply contain that text information.

11:19.710 --> 11:22.040
So it's good to scrub both of them again.

11:23.690 --> 11:27.280
And there's one other thing that we need to do actually before we test it.

11:27.350 --> 11:34.000
So we need to store this file's name value outside of the onload function.

11:34.100 --> 11:41.670
So let's bring that over here and we'll just call it file name so that we can actually put it in nice

11:41.670 --> 11:42.210
and neatly.

11:42.210 --> 11:47.460
Or we also have the option to pull that out and we could have done that before we did the onload.

11:47.460 --> 11:52.950
So that way we could if we had any errors or any issues we could also see the file name and then we

11:52.950 --> 11:55.040
could see what is attached to it.

11:55.080 --> 12:00.630
So let's go ahead and try this out and let's go ahead and we're going to open both of those test files

12:00.900 --> 12:05.510
and now we see we've got file reader is available so that's come in from up here.

12:05.730 --> 12:11.820
Next we're getting the file name so we're picking that up here under file name and then next we're getting

12:11.880 --> 12:19.740
the contents of the file and this file simply says first file javascript course and then the second

12:19.740 --> 12:27.600
one says second file javascript course and I can open up the files here so this is the first one and

12:27.630 --> 12:30.300
I can just do something like updated.

12:30.510 --> 12:35.700
And then also the second one I'll do second and uppercase.

12:35.700 --> 12:41.970
So now if I go back into the application and I select both of those files refresh an application we

12:41.970 --> 12:44.290
see that now we get that updated content.

12:44.370 --> 12:51.780
And if I update it again and I want to pull back 110 so I can get updated content of that one I can

12:51.780 --> 12:53.520
get updated content to that one.

12:53.640 --> 12:56.430
So it is actually pulling that content from the files.

12:56.430 --> 12:59.470
So what I want you to do now is create your own version of this.

12:59.610 --> 13:05.330
Create some basic text files and create them on your computer.

13:05.430 --> 13:14.190
So locally on your system and then open up create a file reader object and create an input that allows

13:14.190 --> 13:20.280
you to select files off of your computer and then output the results and the contents of those files

13:20.550 --> 13:22.470
within your aged him l page.

13:22.470 --> 13:24.100
So go ahead and try that.

13:25.560 --> 13:32.040
And the next lesson we're going to be looking at even more you can do with him L5 and the javascript

13:32.070 --> 13:32.670
API.
