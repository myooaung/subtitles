WEBVTT

00:01.140 --> 00:04.370
This lesson I want to have some more fun with arrays.

00:04.390 --> 00:10.150
So we saw earlier how useful arrays can be and when we converted these arrays with functions we can

00:10.150 --> 00:11.320
do even more.

00:11.470 --> 00:19.840
So let's set up an array and we're just going to call it my R and then we need to add in some values

00:19.900 --> 00:23.320
within this array.

00:23.380 --> 00:25.830
So let's create some names.

00:29.460 --> 00:36.890
And let's create a few of them so that we have some content populated here within our array.

00:36.930 --> 00:40.540
So that's good enough so we've got three names sitting within our array.

00:40.650 --> 00:47.500
And now let's create a function and this function will show the names.

00:47.970 --> 00:53.070
And we're not going to have any parameters within this function but we're still going to be able to

00:53.070 --> 00:56.080
grab that information as we're passing it in.

00:56.130 --> 01:00.690
And this is one of the really neat things about javascript's because there's quite a bit of flexibility

01:00.690 --> 01:01.770
to it.

01:01.860 --> 01:04.360
So let's log it.

01:04.440 --> 01:13.110
First of all let's log out console console log and log out the arguments.

01:13.110 --> 01:20.560
So notice that we haven't passed any variable called arguments but I'm able to console log arguments.

01:20.580 --> 01:24.930
So first of all do you think this is going to work do you think I'm going to throw some type of error.

01:24.930 --> 01:26.720
What do you think is going to happen here.

01:26.760 --> 01:31.610
When I invoke this function and I pass through my or RE values.

01:31.920 --> 01:35.550
So let's try it out and see what happens.

01:35.550 --> 01:44.400
So interestingly enough we actually do pass through those values and we can pick it up using the javascript

01:45.030 --> 01:46.890
reserved word arguments.

01:47.100 --> 01:54.990
So basically within arguments we see that we can pass in and we've got an array and we've got four items

01:55.080 --> 01:56.720
within that array.

01:56.760 --> 02:06.680
So if we wanted to get access to the first item I can do arguments bracket's zero.

02:06.850 --> 02:08.270
Let's go take a closer look.

02:08.350 --> 02:10.400
So what you think is going to get returned here.

02:10.510 --> 02:16.200
And if you said that we're going to get that whole array of values within the arguments you're correct

02:16.210 --> 02:19.360
so we're going to pass through and we're going to grab that array.

02:19.360 --> 02:23.620
So basically the array is being passed over as an argument.

02:23.620 --> 02:27.020
And next let's add in one more thing.

02:27.040 --> 02:29.290
So let's type in Javascript.

02:29.500 --> 02:32.360
So we're going to pass in a number of parameters here.

02:32.590 --> 02:34.590
So let's refresh it again.

02:34.720 --> 02:39.100
And here we see that we actually create an array of two items.

02:39.100 --> 02:47.740
So we can comma separated out and we can pick up the values that are being passed in there by using

02:47.740 --> 02:49.280
this keyword arguments.

02:49.420 --> 02:55.540
And the more we pass in there we do get an array and that means that we can loop through the array if

02:55.540 --> 02:56.670
the need is there.

02:56.680 --> 03:02.290
So if we weren't sure how many arguments were passing through we could essentially loop through it and

03:02.290 --> 03:06.270
then we could also pick up this my array.

03:06.280 --> 03:09.100
So our first argument is actually an array.

03:09.130 --> 03:11.380
And we know that we can loop through that as well.

03:12.320 --> 03:15.250
So what we want you to do now is try the suit for yourself.

03:15.290 --> 03:22.940
Create a simple array and then passing that information within a function and then pick up that those

03:23.000 --> 03:28.080
arguments without having parameters there within your function

03:31.200 --> 03:35.380
and loop through those and output the within your console.

03:35.400 --> 03:37.730
So go ahead and try that out within your editor.
