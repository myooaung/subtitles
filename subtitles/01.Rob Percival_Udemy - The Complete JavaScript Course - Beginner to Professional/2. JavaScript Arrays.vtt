WEBVTT

00:01.530 --> 00:08.070
Welcome back earlier we saw how useful variables could be where we can store values and then recall

00:08.070 --> 00:10.890
them later on within our script.

00:10.890 --> 00:17.010
So in this lesson we're going to look at arrays arrays actually give us the ability to hold multiple

00:17.010 --> 00:19.980
values in one single variable.

00:19.980 --> 00:24.870
So let's first of all let's set up a variable and I'm going to call it my array.

00:25.260 --> 00:31.560
And initially it looks similar to what we were doing originally or is setting up variables but arrays

00:31.560 --> 00:34.480
have one unique difference.

00:34.500 --> 00:42.690
And that's the ability to hold multiple values within this one contained variable arrays can hold any

00:42.720 --> 00:45.570
data type and to create an array.

00:45.570 --> 00:51.600
So this isn't a literal array and this is the simplest and fastest way to create arrays.

00:51.600 --> 00:57.860
So the way that we create that is we create a value just like we work with other variables.

00:57.960 --> 01:01.050
And then here we use these square brackets.

01:01.200 --> 01:07.080
And then the content inside of these square brackets this is where we hold all of that the items that

01:07.080 --> 01:09.140
are contained within the array.

01:09.480 --> 01:14.550
So they can be strings much as what we saw earlier with the data types.

01:14.550 --> 01:19.740
They can also be numbers and they can also be boolean values.

01:20.160 --> 01:26.350
So basically we've created an array and this array is going to have three values inside of it.

01:29.110 --> 01:32.590
And this is the most common way to create arrays.

01:32.620 --> 01:36.680
And again this is called alit literal array.

01:37.240 --> 01:38.440
There's also

01:41.250 --> 01:42.130
in javascript.

01:42.120 --> 01:46.300
Another way to create arrays and that's using the array constructor.

01:46.410 --> 01:50.540
So this is a little bit different and it's not as common.

01:50.580 --> 01:57.660
So the way the format for this one is that we do the same thing where we set up a variable and let's

01:57.660 --> 02:05.830
do this one my every one and this time we're going to set this up as a new array.

02:05.970 --> 02:13.380
So this key word new is really important because we need to specify that this is a new object that we're

02:13.380 --> 02:17.250
creating and the object that we're creating is going to be an array.

02:17.520 --> 02:25.530
And then within the array values so notice it's the rounded brackets and you can then have the same

02:25.530 --> 02:28.610
contents as we did with the literal array.

02:29.100 --> 02:34.210
So again this one is not used as often.

02:34.460 --> 02:37.830
You can also define arrays with no values.

02:37.830 --> 02:42.950
If you don't have any default values you can add in values later on as well.

02:42.950 --> 02:49.790
So we could do this where we do the my array and we can just specify that this is a new array and then

02:49.850 --> 02:53.580
leave those leave the content and then the brackets blank.

02:53.720 --> 02:56.340
And the same thing for the literal or literal array.

02:56.480 --> 03:02.330
We can do the same thing where we can initiate an array and I'm going to give it three three and we

03:02.330 --> 03:06.550
can simply have a blank value there.

03:06.560 --> 03:14.030
So this also indicates that this now is going to be an array because remember what the variables we

03:14.030 --> 03:19.820
look at the value which is held on the right hand side to determine the different types of values that

03:19.820 --> 03:25.400
are being contained within there and the different types of variables that we're defining and setting

03:25.400 --> 03:27.910
up.

03:27.940 --> 03:33.490
So these are the two ways that we can set up arrays and this one up here the literal or way is the one

03:33.490 --> 03:41.300
that's most commonly used and now that we see we've got a lot of different values that we can store

03:41.300 --> 03:49.260
in here and we can literally store as probably pretty much as many values as we want to within an array.

03:49.310 --> 03:53.960
There is a limit but it's a really large number it's something on the billions.

03:54.200 --> 03:57.950
So we don't have to worry about ever running out of space within the array.

03:58.160 --> 04:02.770
So the next thing that we need to do is have a way to recall this information.

04:02.780 --> 04:09.920
So if I was to do something like console log and we'll take a look at what we can log out within when

04:09.920 --> 04:11.150
we cancel log out.

04:11.180 --> 04:12.830
The variable my array.

04:13.020 --> 04:20.000
Let's go out to our browser will refresh the page and again make the console side a little bit bigger

04:20.000 --> 04:20.650
there.

04:20.900 --> 04:28.070
So we see that we get all three values are contained what we call back the my array variable name and

04:28.070 --> 04:34.310
we see that we've got the contents in there we've got the string which is the first value the 100 which

04:34.310 --> 04:35.440
is the next value.

04:35.510 --> 04:38.190
And then we've got false which is the last value.

04:38.390 --> 04:44.070
And we also see here on the left hand side there's numbers starting at zero.

04:44.180 --> 04:48.630
And this is an important thing to know what that arrays do start at zero.

04:49.820 --> 04:53.470
And they're known as what is called the Zero index.

04:53.480 --> 05:01.100
So basically what that means is that array with an index of two is actually going to be the third item

05:01.160 --> 05:03.130
in the array because we've got three there.

05:03.200 --> 05:08.000
And we also see that we've got a length of three for the array and we are going to be looking at that

05:08.000 --> 05:11.600
property later on as well with an upcoming lessons.

05:11.600 --> 05:17.660
So now in order to recall some of the content that's contained within the array all we need to do is

05:17.720 --> 05:20.120
reference the index value.

05:20.330 --> 05:27.440
So if we want to recall the first item in the array What do you think that we do.

05:27.470 --> 05:32.770
How do you think that we could recall that specifying the my array value.

05:33.230 --> 05:37.700
And I'll give you a hint that we use the square brackets and within.

05:37.700 --> 05:43.610
Here is where we place the index value of the item that we want to recall.

05:43.610 --> 05:51.930
So to recall back string we would do my array do the square brackets and zero.

05:51.930 --> 05:57.840
So now I want to go back and if I refresh it we see that we've got a value of string in there and we

05:57.840 --> 06:04.170
could do the same thing for the other items in the array so we could return back the third item in the

06:04.170 --> 06:07.270
array which is has an index of 2.

06:07.290 --> 06:12.020
We can also return back to the second item which has an index of 1.

06:12.210 --> 06:20.070
So in order to return any value we use the in C and this returns by the corresponding item within the

06:20.070 --> 06:21.350
array.

06:21.390 --> 06:28.980
So we have our way of retrieving information from the array and now we want I want to show you one way

06:28.980 --> 06:31.870
to update the information within the array.

06:31.890 --> 06:39.650
So if we do know the C number that we corresponds to the item that we want to update we can specify

06:39.650 --> 06:47.070
that within our code where we can say my history and give an index number and then.

06:47.100 --> 06:48.400
Now all we need to do.

06:48.420 --> 06:55.340
Just like we do with any other variable we can assign any value we want into that array.

06:55.530 --> 07:04.890
And now when we list out the tire array within our javascript we'll see that we've updated the value

07:04.890 --> 07:05.970
successfully.

07:06.240 --> 07:08.880
So let's go back out here and we'll refresh it.

07:08.880 --> 07:13.180
So we see that now we've got string new value and false.

07:13.320 --> 07:18.870
One other thing to note is that we are able to change different data types.

07:18.870 --> 07:27.330
So just like with variables the items within the array they can take on any data type whatever is specified

07:27.390 --> 07:33.920
when we're assigning those values to that particular item.

07:34.150 --> 07:41.560
So in arrays are a great way to store a bunch of information grouping together and then having access

07:41.560 --> 07:42.250
to it.

07:42.250 --> 07:45.980
So what I want you to do is to create your own array.

07:46.000 --> 07:55.150
Open up your editor go into the editor and define a new array and create a list of items that you like

07:55.150 --> 07:55.640
to do.

07:55.690 --> 08:01.750
So different tasks that you're looking to do and that's going to be the first step in what we're going

08:01.750 --> 08:03.730
to be looking at in the next lesson.

08:03.790 --> 08:07.420
Where are we going to do an actual exercise with that task list.

08:07.600 --> 08:17.100
So go ahead create your task list and output it and put that task list using console log within your

08:17.130 --> 08:23.550
browser console and take a closer look at how that content gets output and in the next lesson we're

08:23.550 --> 08:28.440
going to be showing you how to do even more with that content that's contained within that array.

08:28.500 --> 08:29.320
So that's coming up.
