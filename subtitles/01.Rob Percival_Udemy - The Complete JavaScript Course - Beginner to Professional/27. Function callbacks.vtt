WEBVTT

00:01.050 --> 00:01.920
Welcome back.

00:01.920 --> 00:05.380
And in this lesson we're going to be looking at callbacks.

00:05.460 --> 00:13.760
So what callbacks are is there when you're passing a function as an argument into another function.

00:13.860 --> 00:15.270
So that's a callback.

00:15.270 --> 00:19.700
So callbacks are basically passed has arguments into other functions.

00:19.740 --> 00:22.450
So let me show you an example of this.

00:22.470 --> 00:24.230
So let's set up a function.

00:24.230 --> 00:25.000
First

00:29.740 --> 00:37.760
and we're going to call this one make message and for this once we're going to take a couple of values

00:37.760 --> 00:40.130
here so S1 and S2.

00:40.130 --> 00:45.770
So these are going to be just some string values that are being placed and then also I want to have

00:45.770 --> 00:47.590
one that's called callback.

00:47.750 --> 00:52.760
So we see that we're expecting three different parameters to be passed into this function.

00:52.910 --> 01:00.170
And what I want to do within the function is I want to create a brand new variable and I want to

01:03.530 --> 01:10.940
use this third value that I've sent in here so call back and I get a pass in some arguments into this

01:10.940 --> 01:11.470
one.

01:11.540 --> 01:15.930
So you get a pass in these two values that I've got passed into me.

01:16.010 --> 01:21.260
I'm going to pass them into the callback function and I'm going to get a result.

01:21.560 --> 01:30.140
And then at the end of it and I set up my variable here to grab the output and documents get element

01:30.170 --> 01:34.630
by id and output.

01:34.670 --> 01:39.780
So now at the end of it this result going to do output of enraged him out.

01:39.830 --> 01:44.600
And this is going to simply equal whatever the value of result is going to be.

01:45.110 --> 01:53.540
So this is what we're going to do now is that we're going to pass in a function into back so that we

01:53.540 --> 01:57.430
can actually do something with these two values that are being passed him.

01:57.440 --> 01:59.240
So right now it won't work.

01:59.450 --> 02:01.430
But we need to.

02:01.670 --> 02:08.420
So we invoke this function as we normally would and we pass the arguments in.

02:08.420 --> 02:11.080
So the first one will be hello.

02:11.300 --> 02:13.950
The second one will be world.

02:14.270 --> 02:20.690
And then this is where it gets really interesting because this is where we're actually going to pass

02:20.690 --> 02:22.730
in an anonymous function.

02:22.820 --> 02:29.310
So function and this function is going to take the two parameters so S1 and S2.

02:29.720 --> 02:35.660
So it doesn't actually have to be named US 1 and 2 because this is just an anonymous function and it's

02:35.660 --> 02:42.730
going to it's going to use whatever values are being passed in here within the parameters.

02:42.890 --> 02:47.170
So it doesn't actually have to be those ones but we are making use of those ones.

02:47.210 --> 02:53.930
So this this is just what we're doing and we're going to take those two values and we create another

02:53.930 --> 02:54.780
variable.

02:54.800 --> 02:58.780
So this one is going to be sitting within the function.

02:58.790 --> 03:05.390
So let me give it a name of string or maybe I can just maybe I'll call it result too and this can be

03:05.430 --> 03:09.400
result 1 so that we can distinguish between the two.

03:09.440 --> 03:16.100
So they're not necessarily related because they're only being created and locally used within the functions

03:16.100 --> 03:17.470
themselves.

03:17.480 --> 03:20.810
So now let's take the value of S1.

03:21.200 --> 03:23.460
We're going to add it to have two.

03:23.660 --> 03:28.190
And then lastly we'll do something like a work or something.

03:29.150 --> 03:37.370
And then what we're doing here is we're going to return the value of results to and try to out.

03:37.370 --> 03:39.950
So what do you think is going to happen here.

03:39.980 --> 03:43.490
What message are we going to end up getting with an output.

03:43.730 --> 03:50.120
So let's refresh the page and see that we actually did get the two values.

03:50.240 --> 03:58.670
And they actually did get combined within the function and we got the return value and the usefulness

03:58.670 --> 04:06.260
of this is that we've got this anonymous function so we can do a number of different things within this

04:06.300 --> 04:09.780
callback and have them both initiate.

04:09.800 --> 04:15.560
So it doesn't necessarily need to always be that we're concatenating one and two and worked.

04:15.560 --> 04:23.650
We can have any number of things occurring so if for instance we had another one that was Make message.

04:23.780 --> 04:32.770
And at this time it will be John or maybe we'll do something we'll do javascript.

04:32.770 --> 04:35.500
So be in line with the course topic.

04:35.500 --> 04:39.430
So javascript and at this time instead of

04:42.160 --> 04:44.470
worked we're going to do it is great.

04:44.480 --> 04:51.530
So we see that we can do quite a number of different things here and then we can even concatenate it

04:51.530 --> 04:59.750
again and do one and reuse the variables and simply it's going to be returning back that result.

04:59.750 --> 05:03.520
So what do you think now is going to be happen in the output.

05:03.710 --> 05:07.210
And let's concatenate that so we can actually see them.

05:07.220 --> 05:15.470
So now we see that that second one is doing the same function passing those same two parameters and

05:15.500 --> 05:18.780
it's being invoked here within the function itself.

05:18.950 --> 05:25.700
But we're actually able to return back a completely different result using those same two parameters.

05:25.880 --> 05:32.060
So this is where we've got a lot of flexibility when we're building out our functions and we can really

05:32.060 --> 05:34.460
see how this works together.

05:34.730 --> 05:42.760
So what I want to do in the upcoming lesson is take what we've learned here in regards to how callbacks

05:42.770 --> 05:49.730
work and we're going to update that script that we had earlier where we were adding subtracting multiplying

05:49.730 --> 05:59.640
and dividing and we're going to update that script in order to use callbacks which will give us a whole

05:59.640 --> 06:02.780
lot more flexibility when we're writing out our code.

06:02.790 --> 06:08.400
So if you want to open up that previous script that we had we were adding subtracting multiplying and

06:08.400 --> 06:11.070
dividing and trying it for yourself.

06:11.070 --> 06:17.760
See if you can shorten that script and use callbacks instead of all the different functions that we're

06:17.760 --> 06:18.550
using.

06:18.600 --> 06:24.560
And then the next lesson I'll show you how how it can be done with callbacks.

06:24.560 --> 06:25.400
That's coming up.
