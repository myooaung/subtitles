WEBVTT

00:00.880 --> 00:06.760
Welcome to our section on Javascript loops are you tired or are writing the same code over and over

00:06.790 --> 00:08.920
and over and over again.

00:08.920 --> 00:15.020
Well this is your opportunity to get familiar with loops because loops will save you time.

00:15.070 --> 00:21.910
They allow you to loop through irritate through code multiple times and you can specify how many times

00:21.910 --> 00:23.890
you can loop through that code.

00:23.980 --> 00:31.090
Setting up a condition and you get full control over that output so allows you to loop through the number

00:31.090 --> 00:34.620
of times that block of code is going to get executed.

00:34.810 --> 00:42.010
So loops really do save you time because they allow you to execute content as many times as you need

00:42.250 --> 00:43.690
within your code.

00:43.690 --> 00:50.820
We're going to look at the DO loop and as well as the do while loop the while loop and the for loop.

00:50.830 --> 00:56.830
So all of the different types of loops that are available within Javascript the do while loop is a statement

00:56.830 --> 01:04.450
that gets X executed at least once and it's really executed every time that condition evaluates to true.

01:04.510 --> 01:10.280
And there's different cases that you might use one loop over another and this is up to you to decide.

01:10.390 --> 01:16.510
Depending on what is best for your application you can utilize that to all the different loop that you

01:16.510 --> 01:20.950
need in order to accomplish what you're setting out to do within your code.

01:21.040 --> 01:24.420
For loops are definitely the most popular type of loop.

01:24.550 --> 01:29.560
So you going to see those most often used within the code but sometimes they're not the best case to

01:29.560 --> 01:31.090
use within code.

01:31.180 --> 01:37.750
And there's also while loops so while loops can continue to execute while the condition is true.

01:38.110 --> 01:45.130
So for loops as you've mentioned are the most popular format for looping and most used within Javascript

01:45.130 --> 01:45.850
code.

01:45.850 --> 01:51.580
We're going to introduce you to some more exercises so that you can see this code in action and see

01:51.580 --> 01:55.050
how useful it can be when you're writing out applications.

01:55.100 --> 01:57.530
We're going to be building out a calorie counter.

01:57.550 --> 02:03.220
It's going to ask how many of these items that you want to eat is going to tell you how many calories

02:03.220 --> 02:05.950
you're burning using a loop.

02:05.960 --> 02:07.940
There's also nested loops.

02:08.060 --> 02:14.510
So allows you to build more and do even more with looping a loop within a loop looping the child and

02:14.510 --> 02:21.140
then also looping out the parents so you can have full control and loopholed build out tables and a

02:21.140 --> 02:24.980
whole lot more using this type of format and loops.

02:24.980 --> 02:31.340
There's also a stop which allows you to stop the loop and also continue which allows you to continue

02:31.340 --> 02:33.670
looping depending on the condition.

02:33.680 --> 02:37.470
So I'm going to show you these and a whole lot more within this section.

02:37.690 --> 02:44.150
Also adding conditions to loops really allows you to customize that output because remember you can

02:44.150 --> 02:50.450
set in different pieces of code and you can apply different conditions as we saw in the last lesson.

02:50.450 --> 02:54.050
And we're building upon what we've learned in the previous sections.

02:54.050 --> 02:58.810
So we're coming together and we're putting everything together using loops.

02:58.820 --> 03:04.100
There's also different types of loops where we're pairing loops with arrays.

03:04.220 --> 03:11.240
So this is a natural way of getting information as we read through all of the different information

03:11.240 --> 03:12.990
that's contained within the array.

03:13.070 --> 03:20.780
And this really shows the usefulness and the value of loops because we can pull out a lot of information

03:20.960 --> 03:27.080
quickly without having to be very specific because we know with an array it contains information and

03:27.080 --> 03:29.220
is generally ordered information.

03:29.240 --> 03:34.090
So if we go through the index we can pull out that information using a loop.

03:34.190 --> 03:40.940
Also objects objects we saw that they can hold a lot of information and data and we can lose utilize

03:40.940 --> 03:46.500
them with loops to pull some of that information out and utilize it within our code.

03:46.700 --> 03:49.290
We're also going to be building out a shopping list.

03:49.370 --> 03:55.820
So this is going to be a great exercise to get familiar with what can be done with loops and arrays

03:56.150 --> 04:01.790
and how we can really utilize this type of code and the code we've learned in the previous sections

04:02.060 --> 04:04.250
in a more real life example.

04:04.370 --> 04:10.610
And I do encourage you to work alongside and take advantage of all the different challenges that we're

04:10.610 --> 04:16.670
offering within this section to really get familiar with what's possible with loops and what loops can

04:16.670 --> 04:18.410
do in javascript.
