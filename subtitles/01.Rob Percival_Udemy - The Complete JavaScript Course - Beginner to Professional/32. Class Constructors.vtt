WEBVTT

00:00.570 --> 00:04.150
With the six we got constructor's within classes.

00:04.290 --> 00:12.860
So let's set up a class and we're going to just call it make a name and then a class has the curly brackets.

00:13.020 --> 00:19.410
And then within this class this is where we can really make use of left and Konst remember that those

00:19.500 --> 00:24.690
are block depending on the block that they're defined in that's where they're going to sit and live

00:24.690 --> 00:25.440
with them.

00:25.800 --> 00:33.170
So next let's add in the constructor so we ended up getting that constructor method within the brain.

00:33.180 --> 00:35.380
Classes in ESX.

00:35.400 --> 00:36.700
So let's try that.

00:36.720 --> 00:44.770
So constructor and we can take in some parameters here and we can do something with those parameters.

00:44.860 --> 00:51.760
And over here what I want to do is I want to construct and use the person's first name and last name

00:51.820 --> 00:56.460
and then return back their created name their complete name.

00:56.500 --> 00:59.380
So let's do let friend.

00:59.650 --> 01:08.820
And we're going to create new and we're going to use that newly created class so new make name.

01:09.060 --> 01:12.990
And then what we're going to do within the constructor so we're going to take those two parameters.

01:12.990 --> 01:15.390
We're going to take first and last.

01:15.420 --> 01:19.190
So we need to set some values for a first name and a last name.

01:19.320 --> 01:20.490
So let's add those in.

01:20.640 --> 01:30.920
So so adding in some values for the make name and within the constructor we're going to use this.

01:30.920 --> 01:37.420
So this within a class refers to an array of the content that's actually sitting there within there.

01:37.430 --> 01:42.740
So when we're using this we're talking about anything that's contained within make name so we need to

01:42.740 --> 01:45.920
set some variables here that are contained within make name.

01:45.920 --> 01:51.030
We don't have to declare them because they're already contained within the class already.

01:51.140 --> 01:57.170
So they're already declared and when we're using this that gives us the ability just to pass that information

01:57.200 --> 02:00.310
over within that same class.

02:00.320 --> 02:05.680
So let's set up as first name and all we have to do is equal to first.

02:05.690 --> 02:11.360
So within that constructor we're getting those two arguments that are getting passed so we can pick

02:11.360 --> 02:17.440
it up within the constructor and we can assign it to live with inside of our class.

02:17.510 --> 02:22.790
And of course then at this point there's quite a bit that we can do with these values.

02:22.790 --> 02:27.220
For now we're just going to do a simple constructor of the person's name.

02:27.320 --> 02:32.780
But this is there's a lot of things that you can extend expand out into.

02:32.780 --> 02:38.720
Once you've got a class set up because it's as easy as this when you set a couple values here and then

02:38.750 --> 02:43.650
do a bunch of code here and apply a bunch of logic as well so they can get fairly complex.

02:43.760 --> 02:47.330
So I'm trying to provide a really simplified version of it.

02:47.540 --> 02:52.440
So within the class as well we can create some functions or methods.

02:52.730 --> 03:00.350
And so these can actually live inside so complete name and basically the whole idea is that I want to

03:00.350 --> 03:10.680
console log out the value for this first name and I want to concatenate it together with the value of

03:11.310 --> 03:13.390
this last name.

03:13.430 --> 03:18.240
We need to include this because that's referring to that entire class.

03:18.240 --> 03:24.540
And if we need to if we want to access it then we need to take a look at that as it's entirety so I

03:24.540 --> 03:27.680
can output this as well within the cons..

03:27.690 --> 03:34.130
And then lastly in order to make use of the complete name we know that we've passed in that value.

03:34.240 --> 03:36.400
That's all being contained within friend.

03:36.420 --> 03:45.020
So now we can take a friend and we can call to the method that's contained within it because we've assigned

03:45.140 --> 03:52.060
that instance of the class to it so now if we do friend complete name we're actually going to run through

03:52.120 --> 03:54.880
and we're going to run through all of those functions.

03:55.330 --> 03:55.960
So there we go.

03:55.960 --> 04:01.890
So I know we went through a lot of trouble to simply add two strings together to concatenate them with

04:01.890 --> 04:03.000
a space.

04:03.180 --> 04:06.280
But there's a lot of potential where you can build out from this.

04:06.280 --> 04:13.980
And also I want to also look at this so we see within this when we set it up within the constructor.

04:14.050 --> 04:18.580
Now we can't access it within this object.

04:18.640 --> 04:25.720
So we always have access to it because it's sitting within this class and using this type of using this.

04:25.720 --> 04:31.140
This we can do quite a bit with the values that are contained within the class.

04:31.200 --> 04:37.080
So I want you to do now is try the search for yourself and do something really simple simple like the

04:37.080 --> 04:45.800
one that I've just created where you can go and create a class and then set up variable defined new

04:45.800 --> 04:51.590
instance of that class pass in some arguments you can do the same one as I did where we do first name

04:51.650 --> 04:52.880
and last name.

04:52.880 --> 04:58.610
Pass those values into the constructor so pick those arguments up and then do something with those arguments

04:58.610 --> 05:08.010
within the constructor and then create a method within that class and then call to that method within

05:08.010 --> 05:09.570
the class and the method.

05:09.590 --> 05:15.300
If this method is actually where we'll get that output where we can actually see what's happening inside

05:15.300 --> 05:16.200
of the class.

05:16.200 --> 05:18.310
So that's what we've got it console log.

05:18.410 --> 05:20.570
But you can do even more with that as well.

05:20.610 --> 05:25.810
So go ahead and try the soat for yourself and get familiar with using classes iest classes.
