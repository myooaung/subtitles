WEBVTT

00:02.990 --> 00:06.590
In this section we're going to be covering intermediate Javascript.

00:06.650 --> 00:11.660
So now that you've become familiar with how javascript works and all the really amazing things you can

00:11.660 --> 00:12.720
do with javascript.

00:12.860 --> 00:18.500
Let's take it to the next level and I'm going to show you some useful functionality that you can do

00:18.530 --> 00:19.790
with javascript.

00:19.910 --> 00:28.010
There's also how we can use Regg X so Reg X is a powerful way to search through different types of strings

00:28.040 --> 00:32.970
and get values back to suspiciously like finding a needle in a haystack.

00:32.990 --> 00:35.810
So Reg X helps you set that needle.

00:35.900 --> 00:40.790
And then the haystack is that string value that you can quickly search through.

00:40.790 --> 00:47.990
Also we're going to look at how we can build out an email extractor so you can put a bunch of text into

00:48.050 --> 00:55.400
a text area and press a button and it's to extract all the email addresses that are within that tax.

00:55.400 --> 01:01.050
So this is a useful type of application that you can build really easily and is going to combine.

01:01.070 --> 01:08.130
We learn about Reg acts and what we've learned about the Dawn also how you can use an email validator.

01:08.210 --> 01:14.490
So this is important when you're creating forms you want to make sure that the form format is proper.

01:14.540 --> 01:20.750
And this again is where we can use Reg X to make sure that the format of that email actually matches

01:20.810 --> 01:22.460
an email type format.

01:22.460 --> 01:28.200
Also creating cookies and how they work within the browser retrieving that cookie information.

01:28.250 --> 01:33.250
We're also going to show you how immediately invoked functions work.

01:33.260 --> 01:37.120
So those are fairly new and I'm going to show you how those work.

01:37.190 --> 01:40.160
Also six arguments within an array.

01:40.250 --> 01:46.310
How he can pull out arguments from a function using the arguments keyword function.

01:46.340 --> 01:54.320
Recursion also of javascript hoisting how hoisting works and how javascript handles variables and declaring

01:54.530 --> 02:02.470
variables and also both strict mode C can set your javascript to a different mode in that strict mode.

02:02.600 --> 02:07.490
So typically javascript's really forgiving and if you set up a strict mode it's not going to be forgiving

02:07.490 --> 02:08.900
on any of the errors.

02:08.900 --> 02:13.280
So that's an option that you have when you're developing your code and you want to make sure that your

02:13.280 --> 02:16.520
code is airtight that it's nice and strict.

02:16.520 --> 02:18.090
You can set strict mode.

02:18.140 --> 02:23.210
So Also we're going to be going over some of the common errors when writing javascript and what you

02:23.210 --> 02:24.870
can do to avoid them.

02:24.920 --> 02:27.710
We're going to be building out a memory game.

02:27.710 --> 02:34.340
So it's a memory game we need to flip over tiles and match it with other tiles that you flipped over

02:34.340 --> 02:40.070
so find the pairs of tiles that are available on screen by flipping over the tiles.

02:40.070 --> 02:44.330
So this is a memory game that we're going to be building up from scratch.

02:44.600 --> 02:48.130
And that's going to be one of the main exercises of this section.

02:48.170 --> 02:55.100
Also debugging javascript and overall just all the different concepts of javascript that are more of

02:55.100 --> 03:01.010
an intermediate level that require a basic understanding of javascript really to get started with and

03:01.010 --> 03:02.410
to get familiar with.

03:02.420 --> 03:09.710
So this section is going to bring us up to the next level and let's begin coding some javascript some

03:09.710 --> 03:11.050
intermediate javascript.
