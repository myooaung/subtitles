WEBVTT

00:00.680 --> 00:01.480
Welcome back.

00:01.490 --> 00:07.780
And in this lesson we're going to build out a countdown timer to a selected date by the user.

00:07.970 --> 00:13.850
So first thing that we need to do is we need to create an input for the user to be able to select the

00:13.850 --> 00:16.370
date we're going to use type date.

00:16.400 --> 00:21.890
This is each symbol 5 and this is going to give us that little pop up window where we can grab the date

00:24.450 --> 00:29.310
and I want to fire off a function whenever the user makes their selection.

00:29.310 --> 00:31.920
So for this we can use on change.

00:31.920 --> 00:38.460
So this will give us the ability to fire off the start function whenever that date changes.

00:38.460 --> 00:44.370
So let's open up our javascript go into the javascript and create a function and we're going to call

00:44.370 --> 00:45.460
this one start.

00:45.600 --> 00:50.970
So this is going to initiate our start time our start countdown timer.

00:51.360 --> 00:59.490
So we need to do a few things where we need to actually grab this current value and actually place it

00:59.600 --> 01:01.380
within our countdown.

01:01.380 --> 01:02.870
So we need to build out a date.

01:02.970 --> 01:05.130
We need to take the date from now.

01:05.160 --> 01:11.280
We need to create an update to the event and then we need to create our countdown timer that's going

01:11.280 --> 01:17.750
to loop and constantly update the values counting down to our eventual date.

01:18.030 --> 01:20.430
So let's set some of those parameters.

01:20.550 --> 01:26.250
So some of the parameters that we need to set We need the current date so that will be

01:30.100 --> 01:32.800
that will be our See date.

01:32.800 --> 01:36.010
The other thing that we need to set is we need an event date.

01:36.160 --> 01:39.350
So this is when the event is going to get fired off.

01:39.580 --> 01:41.470
And also I want to output

01:45.160 --> 01:54.100
these values in seconds I want minutes hours and days so that we can properly output that within our

01:54.120 --> 01:57.340
HD am also going to set up some default variables.

01:57.430 --> 02:03.270
We're just initiating those default variables and now we can make use of the within our start function.

02:03.280 --> 02:13.890
So go ahead and pause the video and add in the current date into see date and add in the date into the

02:13.990 --> 02:19.080
date variables and set those up within start.

02:19.120 --> 02:21.770
So I hope you had an opportunity to try that out.

02:21.910 --> 02:26.940
And we know from our date input that we're getting the start date.

02:26.950 --> 02:31.860
So this is the date that we want the countdown to go until.

02:31.990 --> 02:37.110
So that will already be passed there and that gets passed within the event object.

02:37.480 --> 02:42.520
And the other one the current date we can pull back and we can just set up a date object.

02:42.520 --> 02:49.360
So basically we're setting up two different date objects we're doing each date and see date and date

02:49.450 --> 02:54.630
is going to be new date and we need to set a value within there.

02:54.670 --> 02:56.830
So let's just do that right now.

02:56.980 --> 03:03.880
And I can actually set a different variable for now and we can also we could always just simply put

03:03.880 --> 03:06.350
that whole statement within the date.

03:06.640 --> 03:12.420
So what we want to do is we want to set the A call it till date.

03:12.460 --> 03:16.270
So this is the date that we're actually going to be going to.

03:16.510 --> 03:19.920
So let's do that target.

03:19.970 --> 03:26.750
So we're getting that event target from this particular input because this is the one that changed triggered

03:26.750 --> 03:27.340
the event.

03:27.470 --> 03:34.420
So we can grab out the value and we have an option actually where we can grab the value as date.

03:34.700 --> 03:38.250
So that will grab it as long formatted date.

03:38.330 --> 03:44.510
And this is also more useful when we're pulling it into our our javascript instead of just having it

03:44.570 --> 03:48.710
as just a regular string value.

03:49.100 --> 03:50.730
So now we know that this is a date.

03:50.750 --> 03:57.770
And now let's actually it looks like this wrote in message in age to M-L so that we can take a closer

03:57.770 --> 04:00.660
look at what is being held with antedate.

04:01.070 --> 04:07.160
So let's go back out and refresh it and we can try our data objects so we can select a date and there

04:07.160 --> 04:10.900
we go so we can see that we're passing that value through.

04:10.970 --> 04:17.840
We're able to pick up that value and this whatever we're selecting here we're actually outputting up

04:17.840 --> 04:18.820
here on the top.

04:18.980 --> 04:26.600
So we're able to make use of that input field and pick up the date within javascript in a usable format.

04:26.600 --> 04:34.070
So now we know that we need to just set this value and we can simply deposited in here and now e date

04:34.250 --> 04:37.450
is going to be equivalent to whatever date was past him.

04:37.910 --> 04:42.750
So now we're ready to go and we've got it formatted as a Date object.

04:42.950 --> 04:49.190
So the next thing that we need to do is we need to have a timeout counter.

04:49.460 --> 04:52.850
And this one I also want to have as a global variable.

04:52.970 --> 04:58.520
So this is a timer so I'm going to just use tief for that and we're going to set within the variable

04:58.520 --> 04:59.140
t.

04:59.390 --> 05:05.340
And this is a Windows object where we're going to set in we're going to set timeout actually.

05:05.360 --> 05:11.430
So Interpol executes the code snippet repeatedly and we can also set timeout.

05:11.480 --> 05:19.610
And the reason that we're going to use timeout is so that basically we have the ability to constantly

05:19.670 --> 05:22.080
launch that code anyway within timeout.

05:22.190 --> 05:29.340
So we're going to set it as timeout and then within the function itself we're going to continue to launch

05:29.360 --> 05:31.430
out the same functionality.

05:31.470 --> 05:33.730
So we're going to just call it within itself.

05:33.810 --> 05:39.450
And we saw earlier one of the earlier lessons that that's another way to constantly run the same function

05:39.480 --> 05:40.580
over and over again.

05:40.710 --> 05:45.230
And this is actually going to give us an opportunity that we don't have to clear the timer.

05:45.330 --> 05:48.840
We can within that one function we can simply stop it.

05:48.840 --> 05:50.570
Once we reach our goal.

05:50.820 --> 05:57.390
So now we've got our set timeout is set there and the next thing that we need to do is we need to just

05:57.450 --> 06:03.640
specify the function that we want to run.

06:03.980 --> 06:06.950
And then we are going to track it every second.

06:06.980 --> 06:11.920
So basically we want this update to occur every second.

06:12.650 --> 06:14.580
So let's go ahead and save that.

06:14.650 --> 06:17.750
And next we need to create a function called update

06:20.360 --> 06:22.160
within this update function.

06:22.160 --> 06:28.610
So this is where everything is going to happen and we're going to actually get a brain you time for

06:28.670 --> 06:29.240
the date.

06:29.240 --> 06:32.830
So we're going to constantly get a brain you see date.

06:33.140 --> 06:35.290
So this is going to constantly be changing.

06:35.360 --> 06:40.220
So we're gonna always look at the system time and see what the brand new date is.

06:40.220 --> 06:47.030
And then at the bottom here we're going to do that same time out here at the bottom.

06:47.030 --> 06:53.270
So basically what's going to happen is this will give us the ability to constantly update that time

06:53.300 --> 07:01.400
and will continue to run those functions as every second once that's been initiated within the set time

07:01.480 --> 07:04.240
and or start.

07:04.460 --> 07:10.030
So next what I want to do is I want to output it within the output value here.

07:10.280 --> 07:13.340
So let's create some space for that.

07:13.340 --> 07:20.000
And then within here we're going to make our calculations and we're going to output how many minutes

07:20.090 --> 07:27.240
or how many seconds are left and we're going to create the number starting by the seconds.

07:27.260 --> 07:32.330
So let's set the number of seconds and we know that we're tracking vs seconds.

07:32.330 --> 07:37.670
So let's make our calculation and this time we need to subtract

07:40.330 --> 07:44.720
from the date we need to subtract the current date.

07:44.830 --> 07:49.660
And this is actually going to give us the number of seconds that are that are left

07:52.450 --> 07:54.760
and it's actually going to give us the milliseconds.

07:54.910 --> 08:02.710
So if we want the seconds we've got to divide by a thousand and I'm going to take this value over here.

08:02.840 --> 08:08.830
And next we need to simply update our our output.

08:08.950 --> 08:12.730
So I'm going to create a function in order to update that output.

08:12.730 --> 08:20.170
So I want to be able to simply update the output and output it properly within that format.

08:20.170 --> 08:27.930
So now let's set that up and we'll do function and output update.

08:28.210 --> 08:32.230
We don't have to pass any parameters for this because these are global variables that we're working

08:32.230 --> 08:32.680
with.

08:32.680 --> 08:36.850
So we can always pick up these global variables as needed.

08:36.850 --> 08:46.240
So now it's we need to make an update to that output so we can place that output within an object.

08:46.240 --> 08:47.190
So let's do that.

08:47.200 --> 08:52.510
So document get element by id and let's add an output.

08:52.720 --> 08:55.770
So that way we could just simply access it by typing output.

08:55.950 --> 08:58.660
So output for each team.

08:58.760 --> 09:00.350
So we'll leave it up to him.

09:00.460 --> 09:02.500
Of course we could do text as well.

09:02.620 --> 09:04.610
So we're going to do seconds.

09:04.720 --> 09:09.910
So let's try this out and refreshed and just make sure that everything is working properly.

09:10.840 --> 09:12.730
So we should have to wait.

09:13.220 --> 09:17.380
We we didn't actually add in that update function so that was what was missing there.

09:17.410 --> 09:20.530
So we need to add that in over there and over here.

09:20.770 --> 09:24.060
And once I do that then we can actually update that output.

09:24.150 --> 09:29.820
So go back out or refresh it and let's try that again.

09:29.840 --> 09:35.870
So now we see how many seconds are actually left and we see that it's counting down.

09:36.080 --> 09:39.090
We see that we've got a decimal place there within seconds.

09:39.290 --> 09:45.470
So that is also something that we know that we need to round that in order before we actually output

09:45.470 --> 09:45.850
it.

09:48.100 --> 09:54.640
So now that we actually know how many seconds we can do all of the rest of the calculation really easily

09:55.000 --> 10:00.550
and we can also even bring this one into here because we're duplicating our work here.

10:00.700 --> 10:03.780
So we don't actually need to have that in two places.

10:03.850 --> 10:09.220
We can have it within that one function and there's also another thing that we're also duplicating and

10:09.280 --> 10:10.570
that's the current date.

10:10.690 --> 10:16.070
So let's add that in as well so that we don't have to constantly duplicate some of our work.

10:16.270 --> 10:17.830
And that's the current state over there.

10:17.950 --> 10:23.670
So as long as we're calling to output update we're getting all of the functionality.

10:23.770 --> 10:29.800
So no we know that we're pulling out number of seconds and now we need to do some calculations with

10:29.890 --> 10:31.330
this value.

10:31.330 --> 10:35.800
So let's open that up and we know that.

10:36.130 --> 10:40.280
Let's set up a duration here so do you are.

10:41.210 --> 10:43.750
And this will help with the calculation.

10:43.750 --> 10:53.230
So basically we're going to take the event date and subtract the current date and let's set up seconds

10:53.530 --> 10:59.800
so we know that this way we're actually getting the duration there that we're looking for that's still

10:59.800 --> 11:00.620
available.

11:00.730 --> 11:05.360
So seconds actually needs to be the formula for this.

11:05.380 --> 11:10.750
Let's do a math floor so we can bring the number down to zero so we don't have all those decimal places

11:12.490 --> 11:17.170
and then within a math floor we need to make some calculations.

11:17.380 --> 11:18.850
So let me grab that.

11:18.880 --> 11:22.390
And I only want to display the number of seconds.

11:22.510 --> 11:25.580
So I don't want to display the total number of seconds.

11:25.660 --> 11:28.770
So we need to do some additional calculations as well.

11:28.840 --> 11:32.440
And then we're going to simply divide it by a thousand.

11:32.470 --> 11:34.660
So we know that we have to duration

11:37.380 --> 11:39.890
and let's do modulus.

11:39.900 --> 11:48.250
So what's the remainder and the remainder of what's left when we do sixty thousand milliseconds.

11:48.390 --> 11:57.330
And basically the 60000 milliseconds is going to represent the amount of milliseconds before we actually

11:57.360 --> 11:58.890
hit the next level.

11:58.890 --> 12:02.810
So no we've got 1000 milliseconds within each second.

12:02.820 --> 12:09.480
So that's what we need to do 60000 because we have guys got 60000 milliseconds or 60 seconds before

12:09.480 --> 12:12.610
we hit the next level or the next tier up.

12:12.630 --> 12:20.480
So let's do duration and we can also to simplify it we can do 1000 times 60.

12:20.640 --> 12:23.990
So that's the amount of seconds till the next level up.

12:24.150 --> 12:30.140
And what we're going to do is we're going to take this and we're going to get the modulus of this value

12:31.170 --> 12:36.060
and then simply return that value.

12:36.370 --> 12:37.750
So let's see what this looks like.

12:37.750 --> 12:39.500
So go ahead and see that.

12:39.520 --> 12:43.390
And then we know that we can apply that same format to the other ones.

12:43.480 --> 12:45.930
So we've got 2 1 0.

12:46.000 --> 12:47.290
Now it's 59.

12:47.290 --> 12:51.760
So this is exactly what we want and we know that this is account for the seconds.

12:51.900 --> 12:54.130
So let's do the same thing for minutes

12:56.770 --> 13:00.980
so we can copy this out and the minutes is going to be slightly different.

13:00.970 --> 13:01.900
So minutes.

13:01.930 --> 13:05.230
So update that to em and minutes.

13:05.260 --> 13:12.650
We know that it's 60000 times another 60 to get to the next tier.

13:12.850 --> 13:18.670
And instead of dividing by 1000 We know that we're dividing by the 60000.

13:18.670 --> 13:22.240
So whatever would have been in that tier before that.

13:22.420 --> 13:27.790
This is the number that we need to divide the pie so that that way we're actually getting that total

13:27.820 --> 13:30.390
that we need in order to output that value.

13:30.550 --> 13:36.460
So just do a double check just to make sure that we've got all of the brackets and everything is properly

13:36.460 --> 13:37.340
in place.

13:40.360 --> 13:45.290
And I believe we're missing one more bracket at the end.

13:45.360 --> 13:49.270
And now let's try to get the minutes out so we'll do.

13:49.280 --> 13:55.410
And plus and we'll just do the coal in there.

13:55.410 --> 13:59.910
So now let's refresh the code and we'll try to say one more time.

14:00.090 --> 14:07.220
So now we know that we've got 29 minutes and whatever amount of seconds 23 22 and so on.

14:07.230 --> 14:11.550
So now we can apply the same thing to the hours and to the days.

14:11.550 --> 14:20.150
So using the same format plus the video and add in the value for hours and also add in the value for

14:20.160 --> 14:24.390
days and I'll show you the solution coming up.

14:24.430 --> 14:30.820
So let's go ahead and we're going to copy out this string and we know we need to use that same type

14:30.820 --> 14:31.600
of format.

14:31.750 --> 14:38.680
So opt to get to the next level we need to add in 24 because that's going to be the next breaking point.

14:38.680 --> 14:41.420
And that's where we get 24 hours in a day.

14:41.890 --> 14:47.320
And also the division as well has to increment by 60.

14:47.350 --> 14:50.700
And then lastly we know that the days.

14:50.770 --> 15:00.500
So this is the final one and we know that we've got the duration and we can actually for this one we

15:00.500 --> 15:09.100
can simply divide and we don't actually need the rest of the stuff here so we can simply divide by the

15:09.100 --> 15:14.020
duration and we can get rid of the other bracket there.

15:14.080 --> 15:21.200
So basically we've got days and I'm just going to copy this.

15:21.220 --> 15:22.740
So to break that apart.

15:23.050 --> 15:24.880
So we've got our days.

15:24.880 --> 15:26.610
We've got ours.

15:27.250 --> 15:31.720
We've got minutes and we've got seconds so let's go ahead and try that out.

15:32.830 --> 15:41.770
So select a date and we see that there is one day there's 21 hours 27 minutes and 38 seconds.

15:41.770 --> 15:49.000
Let's try something further down in the calendar so you know we've got 171 days 21 hours 27 minutes

15:49.030 --> 15:50.390
29 seconds.

15:50.550 --> 15:54.010
Oh so this is all worked out done via javascript.

15:54.040 --> 15:57.010
So there's one other thing that I wanted to add in as well.

15:57.160 --> 16:06.450
And we know that if the value of the minutes is less than 10 that we need to add in a zero into that.

16:06.640 --> 16:07.970
So let's update that.

16:07.990 --> 16:10.820
And also for the seconds as well.

16:10.960 --> 16:18.380
So let's add seconds and we're going to equal that to and we're going to do a terrine every operator

16:18.380 --> 16:22.470
so we're going to check to see if seconds is less than 10.

16:22.610 --> 16:26.410
And if it is then we're going to simply add the zero.

16:26.410 --> 16:31.130
So concatenate the 0 to the value of seconds.

16:31.340 --> 16:34.790
Otherwise we're just going to output the value of seconds.

16:34.790 --> 16:41.090
So go ahead pause the video and do the same one four minutes and let me show you let's refresh thought

16:43.010 --> 16:45.490
and let's pick a time period.

16:45.650 --> 16:52.020
So now we need to actually wait till we get down to less than the two jets in order to tell if it works.

16:52.040 --> 16:58.040
But in the meantime you can pause the video and see if the minutes update it within that same format

16:58.040 --> 17:05.720
for minutes and it's going to be the same thing except we're going to change the variables.

17:05.800 --> 17:11.890
So now it's minutes and if Minutes is and see there we go we've got the zero in place there.

17:12.040 --> 17:20.110
So if Minutes is less than 10 then we're going to concatenate the 0 to the minutes allowing us to output

17:20.350 --> 17:21.400
that within

17:24.140 --> 17:25.520
a more readable format.

17:25.520 --> 17:30.080
So we're not going to the single digits at any point within our output.

17:31.990 --> 17:38.770
So go ahead and try it out for yourself and just get that output depending on the date that's selected

17:39.010 --> 17:43.230
and you can also enter in a static date and do a count down.

17:43.240 --> 17:46.590
So set up the same script and do the countdown.

17:46.600 --> 17:51.160
So when the page loads countdown to your birthday and add that into the script.
