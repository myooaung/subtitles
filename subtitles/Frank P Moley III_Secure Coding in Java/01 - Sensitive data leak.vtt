WEBVTT
1
00:00:00.006 --> 00:00:03.005
- [Instructor] Many public attacks on software systems

2
00:00:03.005 --> 00:00:07.003
yield some form of sensitive data leakage.

3
00:00:07.003 --> 00:00:09.005
We usually think of things like injection attacks

4
00:00:09.005 --> 00:00:11.000
as the likely culprit,

5
00:00:11.000 --> 00:00:14.000
but many times that isn't the case.

6
00:00:14.000 --> 00:00:17.001
Many times, leaking data through our exceptions

7
00:00:17.001 --> 00:00:21.000
or logs becomes much more out of sight, out of mind

8
00:00:21.000 --> 00:00:24.003
and can make a system more susceptible.

9
00:00:24.003 --> 00:00:25.007
When talking about sensitive data,

10
00:00:25.007 --> 00:00:28.006
it is important for a developer to understand

11
00:00:28.006 --> 00:00:32.001
what is sensitive within his or her domain.

12
00:00:32.001 --> 00:00:33.005
There are some universal ones,

13
00:00:33.005 --> 00:00:36.009
but sensitive data can also be very specific.

14
00:00:36.009 --> 00:00:40.006
I'm really only going to discuss the major global ones here.

15
00:00:40.006 --> 00:00:43.007
Now, regulatory data is any data that is controlled

16
00:00:43.007 --> 00:00:46.005
by a governmental or regulatory body.

17
00:00:46.005 --> 00:00:49.002
Obviously, this varies by jurisdiction,

18
00:00:49.002 --> 00:00:51.007
but as your applications extend their reach

19
00:00:51.007 --> 00:00:54.000
and your business itself does,

20
00:00:54.000 --> 00:00:56.002
you may be more under the influence

21
00:00:56.002 --> 00:00:58.002
of these regulatory bodies.

22
00:00:58.002 --> 00:01:00.004
Normally, companies have someone on staff

23
00:01:00.004 --> 00:01:02.005
to work these topics,

24
00:01:02.005 --> 00:01:05.009
but a developer needs to at least be aware they exist

25
00:01:05.009 --> 00:01:09.003
and who to contact when he or she has questions.

26
00:01:09.003 --> 00:01:12.009
Personally identifiable information, or PII,

27
00:01:12.009 --> 00:01:15.004
can also vary by locale,

28
00:01:15.004 --> 00:01:19.005
which can add to the challenge of dealing with this topic.

29
00:01:19.005 --> 00:01:21.002
In most parts of the world,

30
00:01:21.002 --> 00:01:24.007
phone number, for instance, isn't PII,

31
00:01:24.007 --> 00:01:27.000
but in some countries it is.

32
00:01:27.000 --> 00:01:29.007
Essentially, PII is anything that can be used

33
00:01:29.007 --> 00:01:34.001
to identify specifically who a person is,

34
00:01:34.001 --> 00:01:36.006
things that are unique to one person

35
00:01:36.006 --> 00:01:38.007
and always unique to that person.

36
00:01:38.007 --> 00:01:42.009
So name generally isn't actually PII

37
00:01:42.009 --> 00:01:45.008
because many people can have the same name,

38
00:01:45.008 --> 00:01:49.007
but email address that's guaranteed to be globally unique

39
00:01:49.007 --> 00:01:52.006
is almost always PII.

40
00:01:52.006 --> 00:01:55.009
Health information should be pretty self-explanatory.

41
00:01:55.009 --> 00:01:58.009
If you collect health data on your customers,

42
00:01:58.009 --> 00:02:02.000
especially in a healthcare-focused company,

43
00:02:02.000 --> 00:02:04.009
you have to be very careful with this data.

44
00:02:04.009 --> 00:02:07.001
There are laws and regulatory agencies

45
00:02:07.001 --> 00:02:09.004
you may also have to deal with,

46
00:02:09.004 --> 00:02:10.006
but you owe your users

47
00:02:10.006 --> 00:02:13.007
to treat any health data as sensitive.

48
00:02:13.007 --> 00:02:15.005
Financial is another one

49
00:02:15.005 --> 00:02:18.008
that may or may not fall under regulatory agencies.

50
00:02:18.008 --> 00:02:22.009
If you're dealing with credit cards, you have to follow PCI,

51
00:02:22.009 --> 00:02:25.000
but there's more than just that.

52
00:02:25.000 --> 00:02:27.005
If you deal with any data about money,

53
00:02:27.005 --> 00:02:29.007
spending habits, investments, or debt,

54
00:02:29.007 --> 00:02:33.000
you need to treat that data with the utmost respect.

55
00:02:33.000 --> 00:02:36.000
System information is one that slips through a lot.

56
00:02:36.000 --> 00:02:38.004
How many error pages have you seen on the web

57
00:02:38.004 --> 00:02:41.004
that let you know details about the system as a whole,

58
00:02:41.004 --> 00:02:44.001
what web server is running, what OS it's running,

59
00:02:44.001 --> 00:02:46.006
what language the code is written in?

60
00:02:46.006 --> 00:02:48.004
And the list goes on and on.

61
00:02:48.004 --> 00:02:51.004
I've even seen stack traces pop up on government sites,

62
00:02:51.004 --> 00:02:52.009
and that really scares me.

63
00:02:52.009 --> 00:02:56.005
If you give an attacker that kind of information,

64
00:02:56.005 --> 00:03:00.000
it makes breaching the system that much easier

65
00:03:00.000 --> 00:03:03.002
because you've narrowed down the scope of the attack vectors

66
00:03:03.002 --> 00:03:04.009
that he or she has to look at.

67
00:03:04.009 --> 00:03:07.007
Finally, we'll talk about data that's confidential.

68
00:03:07.007 --> 00:03:09.006
Now, this can mean so many different things

69
00:03:09.006 --> 00:03:11.009
to different companies, but in the end,

70
00:03:11.009 --> 00:03:13.007
there's usually some set of data

71
00:03:13.007 --> 00:03:16.005
that is confidential to your business.

72
00:03:16.005 --> 00:03:20.001
Competitive advantage, financial, employee data,

73
00:03:20.001 --> 00:03:23.004
among others, can be detrimental if leaked.

74
00:03:23.004 --> 00:03:25.001
Consider just the case

75
00:03:25.001 --> 00:03:29.001
of the next killer product being worked on by your company,

76
00:03:29.001 --> 00:03:31.000
and you're writing a webpage for it,

77
00:03:31.000 --> 00:03:32.006
but instead of hiding that data,

78
00:03:32.006 --> 00:03:35.008
you leak it before the product is even done.

79
00:03:35.008 --> 00:03:39.001
This gives your competition time to catch up

80
00:03:39.001 --> 00:03:41.004
or, worse yet, beat you to market.

81
00:03:41.004 --> 00:03:44.001
Now, there are a number of ways that data can be leaked,

82
00:03:44.001 --> 00:03:47.002
and the list is as long as this course and then some.

83
00:03:47.002 --> 00:03:49.003
Every vulnerability has the risk

84
00:03:49.003 --> 00:03:51.006
of data loss or data leak in the end.

85
00:03:51.006 --> 00:03:54.008
There are a few key areas that we want to discuss, however.

86
00:03:54.008 --> 00:03:57.007
Clearly, open vulnerabilities are on topic.

87
00:03:57.007 --> 00:03:58.008
I'm not necessarily talking

88
00:03:58.008 --> 00:04:01.008
about that injection attack you may be susceptible to.

89
00:04:01.008 --> 00:04:04.002
That's kind of implied here with the risk.

90
00:04:04.002 --> 00:04:07.004
I'm talking about things like vulnerable software being used

91
00:04:07.004 --> 00:04:10.000
after that vulnerability is made public.

92
00:04:10.000 --> 00:04:12.007
We have lots of evidence of these in the industry.

93
00:04:12.007 --> 00:04:14.002
As someone who fell victim

94
00:04:14.002 --> 00:04:17.000
to having my private information leaked

95
00:04:17.000 --> 00:04:20.001
by a major credit processing service recently

96
00:04:20.001 --> 00:04:22.009
because of an open vulnerability that they ignored.

97
00:04:22.009 --> 00:04:25.003
As a developer, you have a responsibility

98
00:04:25.003 --> 00:04:27.008
to actively look at open CVEs

99
00:04:27.008 --> 00:04:30.003
and ensure your software isn't dependent

100
00:04:30.003 --> 00:04:31.009
on a vulnerable system.

101
00:04:31.009 --> 00:04:33.001
Log messages.

102
00:04:33.001 --> 00:04:35.009
Now, how great these can be during an incident.

103
00:04:35.009 --> 00:04:38.000
The things that make them great, however,

104
00:04:38.000 --> 00:04:39.008
also make them a target.

105
00:04:39.008 --> 00:04:42.006
All too often, developers err on the side

106
00:04:42.006 --> 00:04:45.001
of logging too much information

107
00:04:45.001 --> 00:04:47.008
because it makes troubleshooting that much easier.

108
00:04:47.008 --> 00:04:50.001
Issue really isn't logging per se.

109
00:04:50.001 --> 00:04:51.004
It's not being creative

110
00:04:51.004 --> 00:04:53.006
in protecting the data in those logs.

111
00:04:53.006 --> 00:04:55.008
We will talk a lot about this topic

112
00:04:55.008 --> 00:04:59.003
and ways to ensure that you can still use your logs,

113
00:04:59.003 --> 00:05:01.004
but not make them easy to scrape.

114
00:05:01.004 --> 00:05:02.005
Exception data is something

115
00:05:02.005 --> 00:05:04.005
that I've already talked about a bit.

116
00:05:04.005 --> 00:05:08.000
All too often, exceptions have too much information,

117
00:05:08.000 --> 00:05:11.003
or there's too much visibility of the manifestation,

118
00:05:11.003 --> 00:05:13.000
and that puts you at risk.

119
00:05:13.000 --> 00:05:15.004
Again, we're going to talk a lot about this area

120
00:05:15.004 --> 00:05:19.000
and really extend it into error conditions as well.

121
00:05:19.000 --> 00:05:21.003
And the last one that we'll discuss here is open

122
00:05:21.003 --> 00:05:23.000
or lacking security.

123
00:05:23.000 --> 00:05:26.005
Now, this isn't really a Java topic, but it's critical.

124
00:05:26.005 --> 00:05:29.002
I cannot tell you how many databases I've seen

125
00:05:29.002 --> 00:05:31.009
that have default passwords still in use.

126
00:05:31.009 --> 00:05:35.000
Many times, these are in non-production environments,

127
00:05:35.000 --> 00:05:37.009
so it's all about developer ease of access.

128
00:05:37.009 --> 00:05:42.000
The problem becomes, however, when we copy production down

129
00:05:42.000 --> 00:05:44.003
so we can simulate real use cases.

130
00:05:44.003 --> 00:05:46.007
Now our production data is protected

131
00:05:46.007 --> 00:05:48.009
by a default database password.

132
00:05:48.009 --> 00:05:52.000
Essentially, if you're going around security as a developer

133
00:05:52.000 --> 00:05:54.001
to make your job easier.

134
00:05:54.001 --> 00:05:59.000
You're also opening the door for a bad actor to do the same.

