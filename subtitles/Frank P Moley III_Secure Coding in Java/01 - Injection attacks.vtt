WEBVTT
1
00:00:00.002 --> 00:00:01.008
- [Trainer] There are a class of attacks

2
00:00:01.008 --> 00:00:04.006
that continually show up on the last top 10.

3
00:00:04.006 --> 00:00:06.008
I'm not sure the scariest part of this is

4
00:00:06.008 --> 00:00:09.003
the fact that they can be devastating

5
00:00:09.003 --> 00:00:11.005
for a company or its customers,

6
00:00:11.005 --> 00:00:15.007
or the fact that release after release of the last top 10.

7
00:00:15.007 --> 00:00:18.000
These attacks continually show up.

8
00:00:18.000 --> 00:00:21.004
Injection attacks are relatively simple to understand.

9
00:00:21.004 --> 00:00:24.000
Part of why they're so easy to execute.

10
00:00:24.000 --> 00:00:27.005
You have to have some form of interpreted code on the path.

11
00:00:27.005 --> 00:00:31.002
One of the most common is SQL injection.

12
00:00:31.002 --> 00:00:34.002
However, it isn't even close to the only one,

13
00:00:34.002 --> 00:00:37.007
the bad actor leverages user input or requests,

14
00:00:37.007 --> 00:00:41.004
but maliciously forms it to cause the application

15
00:00:41.004 --> 00:00:43.006
to produce unexpected results.

16
00:00:43.006 --> 00:00:47.003
Once the maliciously formed input reaches the application,

17
00:00:47.003 --> 00:00:50.002
it is interpreted as routine input,

18
00:00:50.002 --> 00:00:54.004
which in turn allows its malicious behavior to be expressed.

19
00:00:54.004 --> 00:00:58.001
The unanticipated behavior can be a plethora of things.

20
00:00:58.001 --> 00:01:00.000
Examples in the wild I have seen,

21
00:01:00.000 --> 00:01:03.006
include dumping an entire database or parts of it,

22
00:01:03.006 --> 00:01:05.008
including sensitive user data.

23
00:01:05.008 --> 00:01:08.008
I have seen attacks that have been devastating,

24
00:01:08.008 --> 00:01:11.001
but no one knew they were happening.

25
00:01:11.001 --> 00:01:14.000
Let's go through some of the more common injection attacks

26
00:01:14.000 --> 00:01:15.009
in Java programs real quick.

27
00:01:15.009 --> 00:01:18.009
We will go into some of these in more detail later.

28
00:01:18.009 --> 00:01:22.001
Now, SQL injection is by far the most common,

29
00:01:22.001 --> 00:01:24.006
both for their prevalence and applications

30
00:01:24.006 --> 00:01:28.000
and ease to script against the attack itself.

31
00:01:28.000 --> 00:01:31.008
For enterprise systems and others that rely on LDAP.

32
00:01:31.008 --> 00:01:34.009
This can be a common point of injection taxes well,

33
00:01:34.009 --> 00:01:38.003
as the queries themselves are again interpreted.

34
00:01:38.003 --> 00:01:41.003
Well cross XSS scripting, isn't really Java

35
00:01:41.003 --> 00:01:45.000
and said JavaScript, a lot of full stack developers need

36
00:01:45.000 --> 00:01:48.003
to understand the risks to web based applications.

37
00:01:48.003 --> 00:01:51.002
In a similar vein carriage return line feed,

38
00:01:51.002 --> 00:01:53.006
or CRLF injection,

39
00:01:53.006 --> 00:01:55.004
applies to web applications

40
00:01:55.004 --> 00:01:57.006
and not specifically Java,

41
00:01:57.006 --> 00:02:00.007
but nonetheless it is common error seen in the wild

42
00:02:00.007 --> 00:02:02.008
and one that you need to be aware of.

43
00:02:02.008 --> 00:02:04.007
The last one comes mainly from the

44
00:02:04.007 --> 00:02:05.006
enterprise world of Java,

45
00:02:05.006 --> 00:02:08.005
and that is XPath injection.

46
00:02:08.005 --> 00:02:11.006
When you use dynamic XML queries using XPath,

47
00:02:11.006 --> 00:02:12.005
you can be susceptible to XPath injection.

48
00:02:12.005 --> 00:02:17.007
Now there are several other injection attacks.

49
00:02:17.007 --> 00:02:20.002
We won't really discuss much in this course,

50
00:02:20.002 --> 00:02:23.005
but I wanted to give you a quick rundown of them.

51
00:02:23.005 --> 00:02:26.008
SMT and IMAP or email injection attacks,

52
00:02:26.008 --> 00:02:30.007
allow a malicious user to inject SMTP commands

53
00:02:30.007 --> 00:02:33.005
or IMAP commands that are interpreted

54
00:02:33.005 --> 00:02:36.003
by the end SMTP/IMAP system.

55
00:02:36.003 --> 00:02:38.008
These attacks can be used to send spam

56
00:02:38.008 --> 00:02:41.009
through your relay or worse yet disclose

57
00:02:41.009 --> 00:02:44.003
sensitive information about your system.

58
00:02:44.003 --> 00:02:46.000
Code injection attacks

59
00:02:46.000 --> 00:02:49.001
actually leveraged the applications user

60
00:02:49.001 --> 00:02:52.002
to execute additional applications.

61
00:02:52.002 --> 00:02:55.000
If the user has sufficient permissions

62
00:02:55.000 --> 00:02:57.004
or those permissions can be elevated,

63
00:02:57.004 --> 00:03:01.003
the bad actor can compromise the system as a whole.

64
00:03:01.003 --> 00:03:05.009
OS command injection, targets executing available commands

65
00:03:05.009 --> 00:03:08.000
on the host operating system.

66
00:03:08.000 --> 00:03:09.008
Through the application runtime,

67
00:03:09.008 --> 00:03:13.000
the bad actor will execute commands on the OS

68
00:03:13.000 --> 00:03:16.001
that may give them full access to the system.

69
00:03:16.001 --> 00:03:19.005
Host header injections apply again to web applications.

70
00:03:19.005 --> 00:03:22.000
And they're usually seen in password reset

71
00:03:22.000 --> 00:03:24.004
or cash heavy applications.

72
00:03:24.004 --> 00:03:29.003
The abuse of Host header injections usually inputs corrupt

73
00:03:29.003 --> 00:03:32.000
or abusive data into the system

74
00:03:32.000 --> 00:03:33.008
that can cause many of these functions

75
00:03:33.008 --> 00:03:36.000
to break or leak data.

