WEBVTT
1
00:00:00.001 --> 00:00:06.009
(upbeat music)

2
00:00:06.009 --> 00:00:07.007
- [Instructor] So now we're ready

3
00:00:07.007 --> 00:00:10.002
for our first code challenge for this course.

4
00:00:10.002 --> 00:00:11.009
You're going to be working on some code

5
00:00:11.009 --> 00:00:14.003
that is ripe with the SQL injection,

6
00:00:14.003 --> 00:00:17.005
and you're going to remediate that code injection.

7
00:00:17.005 --> 00:00:20.009
Let's go over a bit more detail for our challenge exercise.

8
00:00:20.009 --> 00:00:23.001
First of all, I've written some code for you

9
00:00:23.001 --> 00:00:25.006
and put it in the exercise files for this video.

10
00:00:25.006 --> 00:00:28.008
Input the code from this chapter into your IDE.

11
00:00:28.008 --> 00:00:30.004
Now if you look at the code it's pretty simple

12
00:00:30.004 --> 00:00:32.003
and we're going to do it here in a moment,

13
00:00:32.003 --> 00:00:35.004
but there are a couple of classes and a test class.

14
00:00:35.004 --> 00:00:38.004
Open the test class and run it in your IDE.

15
00:00:38.004 --> 00:00:42.001
You will see that two tests exist but only one passes.

16
00:00:42.001 --> 00:00:43.007
This is actually a good strategy

17
00:00:43.007 --> 00:00:45.006
that we will talk about more

18
00:00:45.006 --> 00:00:48.008
when I show my solution to this exercise.

19
00:00:48.008 --> 00:00:51.004
So let's take a look at the code here real quick.

20
00:00:51.004 --> 00:00:53.002
Okay, I've loaded up the test class

21
00:00:53.002 --> 00:00:55.006
and there's a couple things here that I want you to note.

22
00:00:55.006 --> 00:00:57.000
So first of all on line 16,

23
00:00:57.000 --> 00:00:59.001
you'll see that I have a database util that I wrote

24
00:00:59.001 --> 00:01:00.001
that loads a file.

25
00:01:00.001 --> 00:01:02.005
And this'll load some schema and data

26
00:01:02.005 --> 00:01:04.009
into a in memory database.

27
00:01:04.009 --> 00:01:05.009
Now it's critical here

28
00:01:05.009 --> 00:01:09.000
that your code sits in a directory location

29
00:01:09.000 --> 00:01:12.004
that is compatible with the class loader.

30
00:01:12.004 --> 00:01:15.009
Sometimes spaces and other things in your file path

31
00:01:15.009 --> 00:01:19.002
don't actually work with a class loader load file.

32
00:01:19.002 --> 00:01:22.008
And you can take a look at that code in the database util.

33
00:01:22.008 --> 00:01:24.005
You'll see that I'm just simply doing

34
00:01:24.005 --> 00:01:26.007
a class loader get resource,

35
00:01:26.007 --> 00:01:30.000
and those files exist in source main resources.

36
00:01:30.000 --> 00:01:31.006
So now back to our test here.

37
00:01:31.006 --> 00:01:34.005
You'll see that I've got two tests to get executed.

38
00:01:34.005 --> 00:01:35.008
There's get by last name

39
00:01:35.008 --> 00:01:38.004
and then get by last name with an injection.

40
00:01:38.004 --> 00:01:40.001
And what I have in my dataset

41
00:01:40.001 --> 00:01:41.004
is a list of all the presidents

42
00:01:41.004 --> 00:01:43.007
of the United States of America.

43
00:01:43.007 --> 00:01:47.003
And in there, exists from Washington to Trump.

44
00:01:47.003 --> 00:01:51.004
So when we do a search on our test here on line 21,

45
00:01:51.004 --> 00:01:52.007
we're searching for Washington,

46
00:01:52.007 --> 00:01:55.005
and we expect to get one result back.

47
00:01:55.005 --> 00:01:57.006
Now, when we do the injection,

48
00:01:57.006 --> 00:01:59.007
we expect to get zero results back

49
00:01:59.007 --> 00:02:01.002
because there is no president

50
00:02:01.002 --> 00:02:07.003
whose name is Trump tick space or space tick one tick

51
00:02:07.003 --> 00:02:11.009
space equals space tick one double quote.

52
00:02:11.009 --> 00:02:14.004
So, that just doesn't exist in the database.

53
00:02:14.004 --> 00:02:16.007
So we're going to expect to get zero results back.

54
00:02:16.007 --> 00:02:20.002
But you'll see if we run this test,

55
00:02:20.002 --> 00:02:23.001
our tests fail because there's an assertation error.

56
00:02:23.001 --> 00:02:25.005
We got back 45 presidents.

57
00:02:25.005 --> 00:02:29.002
We got back the entire dataset based on that query.

58
00:02:29.002 --> 00:02:31.000
So our assertation failed.

59
00:02:31.000 --> 00:02:32.004
And now that's your challenge

60
00:02:32.004 --> 00:02:36.000
is to go fix the code so that both of these tests pass.

