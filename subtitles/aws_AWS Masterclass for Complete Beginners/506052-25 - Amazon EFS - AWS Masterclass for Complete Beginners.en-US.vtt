WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.355
Hello and welcome back.

00:00:02.355 --> 00:00:08.790
In this video, we will be learning about a new service called Amazon EFS,

00:00:08.790 --> 00:00:12.645
which stands for Elastic File Storage.

00:00:12.645 --> 00:00:17.055
And this essentially stands for,

00:00:17.055 --> 00:00:19.965
for Elastic File System.

00:00:19.965 --> 00:00:23.385
And at the time of recording this video,

00:00:23.385 --> 00:00:25.259
it is a relatively new service.

00:00:25.259 --> 00:00:27.990
And I'm sure a lot of things will be changed and updated.

00:00:27.990 --> 00:00:35.475
And it seems like Amazon is trying to really put this into the center of a lot of,

00:00:35.475 --> 00:00:42.175
it's trample a lot of focus on the service to it's important to will increase.

00:00:42.175 --> 00:00:45.980
So you might need to spend a little more time going over

00:00:45.980 --> 00:00:49.790
this depending on when you're watching this video,

00:00:49.790 --> 00:00:52.715
you know, if it's been quite a while since I've recorded this video.

00:00:52.715 --> 00:00:57.830
But I'll give you all the basics of what EFS is.

00:00:57.830 --> 00:01:00.470
Now, EFS is a separate service.

00:01:00.470 --> 00:01:02.975
It's not going to be within EC2.

00:01:02.975 --> 00:01:06.530
It's going to be a separate service altogether.

00:01:06.530 --> 00:01:10.385
So essentially it provides a simple,

00:01:10.385 --> 00:01:15.245
scalable, fully-managed, elastic NFS or network,

00:01:15.245 --> 00:01:25.280
a network file system and use the NFS version 4.1 protocol and for use with AWS,

00:01:25.280 --> 00:01:28.115
Cloud services and on-premise resources.

00:01:28.115 --> 00:01:34.340
And it is built to scale on-demand to paint them bytes without disrupting applications,

00:01:34.340 --> 00:01:36.755
growing and shrinking automatically.

00:01:36.755 --> 00:01:40.430
As you add or remove files and eliminates the need

00:01:40.430 --> 00:01:44.150
to provision and manage capacity to accommodate growth.

00:01:44.150 --> 00:01:47.645
Okay, So it's a fully managed service,

00:01:47.645 --> 00:01:49.655
fully managed file system.

00:01:49.655 --> 00:01:52.970
It is quite a bit expensive,

00:01:52.970 --> 00:01:54.530
especially Chaconne one competitive, yes,

00:01:54.530 --> 00:01:58.740
but that's the price you're paying for having a fully managed service.

00:01:59.080 --> 00:02:03.635
So there are essentially two storage classes.

00:02:03.635 --> 00:02:08.030
The standard storage class and the infrequent access storage class.

00:02:08.030 --> 00:02:12.500
So can put files that we will not be

00:02:12.500 --> 00:02:15.740
accessing for quite some time or you'll be accessing

00:02:15.740 --> 00:02:19.175
and frequently into the infrequent access storage class.

00:02:19.175 --> 00:02:23.030
And this will help you reduce costs because it's going to be much cheaper.

00:02:23.030 --> 00:02:31.895
And it's 0 to $5 in a time of recording this video for the EFS IA,

00:02:31.895 --> 00:02:39.920
where whereas 0 or like a $0.3 or something for the normal standard surge class.

00:02:39.920 --> 00:02:45.590
So essentially, EFS IA provides

00:02:45.590 --> 00:02:52.640
price slash performance that's cost optimized for files not accessed every day.

00:02:52.640 --> 00:02:58.175
So by simply enabling EFS lifecycle management on your life on your file system,

00:02:58.175 --> 00:03:02.570
files not accessed according to the lifecycle policy.

00:03:02.570 --> 00:03:07.610
You choose will automatically and transparently move into EFS IA. So.

00:03:07.610 --> 00:03:11.375
If you successfully set up your lifecycle management,

00:03:11.375 --> 00:03:14.990
you won't even need to bother finding files

00:03:14.990 --> 00:03:19.235
that an African access and putting them into EFS IA.

00:03:19.235 --> 00:03:21.530
That can be done automatically for you.

00:03:21.530 --> 00:03:23.615
And I'll show you how to set that up.

00:03:23.615 --> 00:03:29.045
And that's very important for saving costs because again, EFS IA storage,

00:03:29.045 --> 00:03:37.745
the IFS I storage class costs only $0.025 per gigabyte per month.

00:03:37.745 --> 00:03:40.580
And so, you know,

00:03:40.580 --> 00:03:43.340
while workload patterns vary,

00:03:43.340 --> 00:03:47.435
customers typically find that 80 percent of files or infrequently accessed.

00:03:47.435 --> 00:03:52.700
And thus they're suitable for EFS IA and 20 percent are actively used,

00:03:52.700 --> 00:03:55.835
which are for AFS standard.

00:03:55.835 --> 00:04:03.080
And this results in effective storage cost as low as $0.08 per gigabyte per month.

00:04:03.080 --> 00:04:06.725
Efs transparently serves files from

00:04:06.725 --> 00:04:11.735
both storage classes in a common file system namespace.

00:04:11.735 --> 00:04:14.570
Now, EFS is designed to provide

00:04:14.570 --> 00:04:20.240
massively parallel shared access to thousands of Amazon EC2 instances enabling

00:04:20.240 --> 00:04:24.830
your applications to achieve a higher levels of aggregate throughput and

00:04:24.830 --> 00:04:30.590
IOPS with consistent low latencies, okay?

00:04:30.590 --> 00:04:36.110
And it is well-suited to support a broad spectrum of

00:04:36.110 --> 00:04:41.855
use cases are from just regular old home directories to business critical applications.

00:04:41.855 --> 00:04:44.270
Other cases include Big Data Analytics,

00:04:44.270 --> 00:04:46.250
web serving and content management,

00:04:46.250 --> 00:04:48.440
application development and testing,

00:04:48.440 --> 00:04:50.660
media and entertainment workflows,

00:04:50.660 --> 00:04:54.590
database backups, and Container Storage.

00:04:54.590 --> 00:04:59.930
Amazon EFS is a global service storing data within and across

00:04:59.930 --> 00:05:05.345
multiple availability zones for high availability and durability.

00:05:05.345 --> 00:05:09.020
And Amazon EC2 instances can access your file system

00:05:09.020 --> 00:05:13.730
across availability zones, regions, and VPCs.

00:05:13.730 --> 00:05:19.610
While on-premises servers can access using AWS Direct Connect or AWS VPN.

00:05:19.610 --> 00:05:23.120
So this is really a server-side universe,

00:05:23.120 --> 00:05:24.500
pushing into the spotlight.

00:05:24.500 --> 00:05:26.554
It's going to really increase importance.

00:05:26.554 --> 00:05:28.054
I'm in the future.

00:05:28.054 --> 00:05:34.340
And yeah, so are we comparing EFS to EBS in the next video?

00:05:34.340 --> 00:05:40.910
But for now, let's talk about some benefits of Amazon EFS scalable performance.

00:05:40.910 --> 00:05:44.570
So now the FS is designed to provide

00:05:44.570 --> 00:05:49.100
the throughput IOPS and low latency needed for Linux workloads,

00:05:49.100 --> 00:05:53.120
throughput and I upscale as a file system grows and can burst

00:05:53.120 --> 00:05:56.410
a higher throughput levels for short periods of time to

00:05:56.410 --> 00:06:00.624
support the unpredictable performance needs of file workloads.

00:06:00.624 --> 00:06:02.530
For the most demanding workloads,

00:06:02.530 --> 00:06:05.500
amazon EFS can support performance over

00:06:05.500 --> 00:06:10.645
10 gigabytes per second and more than 500000 IOPS.

00:06:10.645 --> 00:06:14.530
Okay, so that's a benefit of Amazon EFS.

00:06:14.530 --> 00:06:17.290
Another benefit is that it's fully managed.

00:06:17.290 --> 00:06:20.964
Our provides shared file system storage for the next workload,

00:06:20.964 --> 00:06:24.985
it provides a simple interface allowing you to create and configure

00:06:24.985 --> 00:06:30.175
file systems quickly and manages the file storage infrastructure for you.

00:06:30.175 --> 00:06:32.830
Removing the complexity of deploying, patching,

00:06:32.830 --> 00:06:37.000
and maintaining the underpinnings of our file system.

00:06:37.000 --> 00:06:39.565
Also it's cost effective.

00:06:39.565 --> 00:06:41.920
You pay only for what you use.

00:06:41.920 --> 00:06:45.999
There is no need to provision storage in advance like AVS.

00:06:45.999 --> 00:06:50.035
And there are no minimum commitments or opera front fees.

00:06:50.035 --> 00:06:52.360
And that's a huge advantage.

00:06:52.360 --> 00:06:55.840
When he had us lifecycle management with AFS, lifecycle management,

00:06:55.840 --> 00:06:58.000
you can automatically move files are

00:06:58.000 --> 00:07:03.085
accessed less frequently to a cost optimize storage class,

00:07:03.085 --> 00:07:07.615
reducing file storage costs by up to 92%.

00:07:07.615 --> 00:07:13.570
You can also use a dollar budgets to monitor your file system costs.

00:07:13.570 --> 00:07:17.155
And when it comes to security compliance,

00:07:17.155 --> 00:07:23.270
EFS allows you to securely access files using your existing security infrastructure.

00:07:23.270 --> 00:07:29.300
You can control access to your Amazon EFS file system with POSIX permissions,

00:07:29.300 --> 00:07:31.549
Amazon VPC and AWS.

00:07:31.549 --> 00:07:37.130
Iam, secure your data by encrypting your data at rest and in transit.

00:07:37.130 --> 00:07:42.785
Amazon EFS also meets many eligibility and compliance requirements.

00:07:42.785 --> 00:07:45.935
To help you meet your regulatory needs.

00:07:45.935 --> 00:07:52.640
Are you can look up in our list of compliance programs in scope for Amazon EFS.

00:07:52.640 --> 00:07:57.575
If you're interested, then dynamic elasticity.

00:07:57.575 --> 00:08:00.590
Amazon EFS automatically and instantly scales or

00:08:00.590 --> 00:08:03.980
file system storage capacity up or

00:08:03.980 --> 00:08:07.490
down as you add or remove files without disrupting your applications,

00:08:07.490 --> 00:08:11.510
dynamically providing the storage capacity you need as you need it.

00:08:11.510 --> 00:08:14.270
You simply create your file system and start adding files

00:08:14.270 --> 00:08:17.629
with no need to provision storage in advance.

00:08:17.629 --> 00:08:20.854
And it's POSIX compliant.

00:08:20.854 --> 00:08:26.090
Shared file storage provides secure axis for thousands of connections for

00:08:26.090 --> 00:08:29.045
Amazon EC2 instances and on-premise servers

00:08:29.045 --> 00:08:33.365
simultaneously using a traditional file permissions model,

00:08:33.365 --> 00:08:35.150
file locking capabilities and

00:08:35.150 --> 00:08:42.080
hierarchical directory structure via the NFS version 4.1 protocol.

00:08:42.080 --> 00:08:45.305
Amazon EC2 instances can access your file system

00:08:45.305 --> 00:08:50.195
across availability zones, regions, and VPCs.

00:08:50.195 --> 00:08:52.940
While on-premise servers can access using AWS,

00:08:52.940 --> 00:08:54.845
Direct Connect radios, VPN.

00:08:54.845 --> 00:08:58.010
So these are some of the benefits of Amazon EFS.

00:08:58.010 --> 00:09:04.730
As you can see, Amazon is putting in a lot of effort to really push the service forward.

00:09:04.730 --> 00:09:06.815
We'll see where it goes.

00:09:06.815 --> 00:09:10.710
But right now let's do some hands on.

00:09:12.190 --> 00:09:15.290
So here we are in the AWS management console.

00:09:15.290 --> 00:09:17.585
We've been using EC2 up until now,

00:09:17.585 --> 00:09:18.875
pretty much for everything.

00:09:18.875 --> 00:09:23.375
Even EBS was located within EC2 instance store.

00:09:23.375 --> 00:09:27.950
So was it AMI and all the other things we've been covering so far.

00:09:27.950 --> 00:09:33.260
But now we're going to go under storage and into EFS.

00:09:33.260 --> 00:09:37.789
It's a separate service marketed separately from EC2.

00:09:37.789 --> 00:09:40.400
And so let's go ahead and click it.

00:09:40.400 --> 00:09:44.210
And here we are in the Amazon Elastic File System,

00:09:44.210 --> 00:09:49.010
scalable elastic Cloud native NFS file system.

00:09:49.010 --> 00:09:51.425
And you can see the pricing here.

00:09:51.425 --> 00:09:52.790
So yeah, like I said,

00:09:52.790 --> 00:09:55.100
we have the standard storage class,

00:09:55.100 --> 00:09:58.040
which is about $0.30 per gigabyte.

00:09:58.040 --> 00:10:00.530
And then we have infrequent access storage,

00:10:00.530 --> 00:10:06.185
which is 0.025 or ¢2.5 per gigabyte.

00:10:06.185 --> 00:10:12.155
And then when you do have files stored with an infrequent access storage class,

00:10:12.155 --> 00:10:19.910
you will have to pay additional additional fee for requests.

00:10:19.910 --> 00:10:22.895
And that's because the whole point of the figure axis.

00:10:22.895 --> 00:10:24.560
Suppose we accessing infrequently,

00:10:24.560 --> 00:10:27.035
so access will cost you.

00:10:27.035 --> 00:10:30.020
And then there is the provision throughput, throughput pricing.

00:10:30.020 --> 00:10:33.290
And you can use Amazon pricing calculator to further

00:10:33.290 --> 00:10:37.760
calculate if this is something that's going to be useful for you or not.

00:10:37.760 --> 00:10:40.890
Let's go ahead and create a file system.

00:10:40.890 --> 00:10:42.580
And we can give us a name.

00:10:42.580 --> 00:10:44.905
So let's call it EFS demo.

00:10:44.905 --> 00:10:50.860
And you will need to keep in mind the EFS is meant to be

00:10:50.860 --> 00:10:57.565
accessible by all types of bias.

00:10:57.565 --> 00:11:00.385
You know, hundreds and thousands of

00:11:00.385 --> 00:11:06.189
EC2 instances and across multiple availability zones and not just instances.

00:11:06.189 --> 00:11:10.090
Even other services like Amazon

00:11:10.090 --> 00:11:15.010
provides can be integrated with or can access this file system.

00:11:15.010 --> 00:11:17.680
So you have to specify VPC.

00:11:17.680 --> 00:11:19.075
We have one VPC.

00:11:19.075 --> 00:11:21.130
So we can go ahead and select it.

00:11:21.130 --> 00:11:24.305
And we create. And that's it.

00:11:24.305 --> 00:11:29.810
We have an EFS and elastic file system in place. It's been created.

00:11:29.810 --> 00:11:33.210
Now, if we click on it,

00:11:34.210 --> 00:11:41.765
we will see that currently we are only using six chi B or storage within here.

00:11:41.765 --> 00:11:44.495
We have none in EFS IA.

00:11:44.495 --> 00:11:50.255
And throughput mode is bursting performance model general-purpose.

00:11:50.255 --> 00:11:53.165
And you know, it's encrypted.

00:11:53.165 --> 00:11:57.755
Let's go into, let's go into network.

00:11:57.755 --> 00:12:01.850
And the network, we can see that this,

00:12:01.850 --> 00:12:05.885
since this is a region specific or regional service,

00:12:05.885 --> 00:12:08.330
you have access to it from each availability zone.

00:12:08.330 --> 00:12:13.760
And this is one of the distinguishing differences between EFS and EBS is that EBS is

00:12:13.760 --> 00:12:20.285
locked to a specific availability zone where EFS is available throughout the region,

00:12:20.285 --> 00:12:22.175
in all the availability zones.

00:12:22.175 --> 00:12:26.480
And so there's a separate network interface ID for each.

00:12:26.480 --> 00:12:32.240
So you can use each of these to connect or you can create security groups to add,

00:12:32.240 --> 00:12:34.850
to, attach to the EFS.

00:12:34.850 --> 00:12:37.940
So there are a lot of different ways you can do this.

00:12:37.940 --> 00:12:40.220
You can come into here and you can attach from here to

00:12:40.220 --> 00:12:42.875
an instance where you can go into an instance is a back and forth.

00:12:42.875 --> 00:12:48.500
So I'm just going to be going over one way to do it.

00:12:48.500 --> 00:12:51.570
So let's go into EC2.

00:12:51.700 --> 00:12:56.330
And in the dashboard we have no running instances.

00:12:56.330 --> 00:13:00.980
Let's go ahead and launch some instances.

00:13:00.980 --> 00:13:04.145
Let's click this one.

00:13:04.145 --> 00:13:08.510
And let's go into configure instance.

00:13:08.510 --> 00:13:10.670
Let's launch two instances.

00:13:10.670 --> 00:13:15.395
Now the whole point of what we're doing now is to show how how

00:13:15.395 --> 00:13:20.150
EBS was focused more on having individual volumes,

00:13:20.150 --> 00:13:22.670
individual storage for individual instances.

00:13:22.670 --> 00:13:26.105
And it wasn't really meant to be,

00:13:26.105 --> 00:13:30.530
to be accessible from all your instances at once.

00:13:30.530 --> 00:13:34.610
Even under as multi-touch capabilities and some how,

00:13:34.610 --> 00:13:38.240
but that's not really the intended purpose of it.

00:13:38.240 --> 00:13:42.320
But Amazon EFS is meant to be accessible by all your instances at once,

00:13:42.320 --> 00:13:43.865
like a central file system.

00:13:43.865 --> 00:13:46.715
So that's what I'm creating two here, two instances.

00:13:46.715 --> 00:13:50.465
Just so I can show how adding a file into one

00:13:50.465 --> 00:13:55.085
will actually be able to be seen in other word instantly.

00:13:55.085 --> 00:14:01.325
Whereas with EBS we had to detach the volume and then attach it to the other instance.

00:14:01.325 --> 00:14:03.620
So in order to do that,

00:14:03.620 --> 00:14:08.465
we have to attach or we have to add a file system so we can,

00:14:08.465 --> 00:14:10.700
if we hadn't created one from Amazon EFS,

00:14:10.700 --> 00:14:12.200
we could have created a new one,

00:14:12.200 --> 00:14:13.700
but we do have one.

00:14:13.700 --> 00:14:15.695
So let's add the file system.

00:14:15.695 --> 00:14:17.660
And there we go, EFS demo.

00:14:17.660 --> 00:14:21.815
We only have one to pick from anyway, because we only have one.

00:14:21.815 --> 00:14:29.180
Now, again, amazon EFS is accessed through a security group.

00:14:29.180 --> 00:14:31.100
So there is a layer,

00:14:31.100 --> 00:14:35.180
a security group layer on top of VFS and

00:14:35.180 --> 00:14:42.740
other Amazon EC2 instances will need to have access to that security group.

00:14:42.740 --> 00:14:47.930
And they themselves have security groups.

00:14:47.930 --> 00:14:49.535
I can access that security group.

00:14:49.535 --> 00:14:52.940
And because you know how, when you're defining a security group,

00:14:52.940 --> 00:14:55.190
you can select just an IP,

00:14:55.190 --> 00:14:57.290
but you can also select other security groups that

00:14:57.290 --> 00:14:59.420
can have access or you can give access to.

00:14:59.420 --> 00:15:02.720
So instead of doing all of that in the past,

00:15:02.720 --> 00:15:04.700
I would have had to been done manually.

00:15:04.700 --> 00:15:07.099
You would have to go into EFS,

00:15:07.099 --> 00:15:09.170
create a security group,

00:15:09.170 --> 00:15:11.690
and then go into your instance and create

00:15:11.690 --> 00:15:15.650
another security group and then give them the access and so on and so forth.

00:15:15.650 --> 00:15:19.595
But here, now Amazon allows,

00:15:19.595 --> 00:15:21.410
manages that for us,

00:15:21.410 --> 00:15:24.185
automatically create an attached the required security.

00:15:24.185 --> 00:15:25.430
It's that simple.

00:15:25.430 --> 00:15:26.660
You don't have to worry about it.

00:15:26.660 --> 00:15:29.670
So let's go ahead and review and launch.

00:15:30.550 --> 00:15:36.719
And let's knowledge.

00:15:40.080 --> 00:15:44.090
And now we can view instances.

00:15:48.870 --> 00:15:51.830
Let's refresh.

00:15:57.210 --> 00:15:59.500
There we go. We have two instances.

00:15:59.500 --> 00:16:02.980
Now let's name these so they don't get confused between them.

00:16:02.980 --> 00:16:09.410
This is called first and this whole cause second.

00:16:10.080 --> 00:16:13.030
Now let's go ahead and connect to each.

00:16:13.030 --> 00:16:15.380
So let's connect to this one.

00:16:22.140 --> 00:16:25.670
And then let's connect to.

00:16:35.790 --> 00:16:38.620
So now we have first,

00:16:38.620 --> 00:16:41.800
second, these two instances.

00:16:41.800 --> 00:16:45.670
Now, what we have to do now is if you remember, even with AVS,

00:16:45.670 --> 00:16:52.480
we had to mount the devices onto our instances.

00:16:52.480 --> 00:16:55.885
So essentially, you have to also mount

00:16:55.885 --> 00:16:58.375
your Amazon EFS file system

00:16:58.375 --> 00:17:01.665
to your instances that you know that the instance that you want.

00:17:01.665 --> 00:17:07.115
Of the access to instances that you want to have access to your EFS file system.

00:17:07.115 --> 00:17:10.910
And you can do that using the mount helper.

00:17:10.910 --> 00:17:15.320
So let's use MT.

00:17:15.320 --> 00:17:18.680
And this time the type of assets and we're using is EFS.

00:17:18.680 --> 00:17:23.045
And we have to write in the EFS,

00:17:23.045 --> 00:17:28.580
our EFS file system ID.

00:17:28.580 --> 00:17:30.365
So this is the fastest of ID.

00:17:30.365 --> 00:17:36.395
Let's copy that. And let's paste, paste it here.

00:17:36.395 --> 00:17:43.594
And we want to mount it to EFS.

00:17:43.594 --> 00:17:45.890
This represents the root file,

00:17:45.890 --> 00:17:50.090
so the mount folder in the root folder,

00:17:50.090 --> 00:17:52.340
and then EFS folder within that.

00:17:52.340 --> 00:17:54.830
So this is just,

00:17:54.830 --> 00:17:58.549
this is taken directly from the diverse documentation.

00:17:58.549 --> 00:18:00.995
So just, you can just take this.

00:18:00.995 --> 00:18:01.835
Again.

00:18:01.835 --> 00:18:06.785
This is the Amazon EFS file system ID semicolon

00:18:06.785 --> 00:18:12.530
forward slash space for slash M and T for such EFS.

00:18:12.530 --> 00:18:14.540
Go ahead and click Enter.

00:18:14.540 --> 00:18:22.295
Now, we can see that if we go and check mount,

00:18:22.295 --> 00:18:27.560
we can see the file system has been mounted and CFS.

00:18:27.560 --> 00:18:32.015
Now when we go into the first EC2 instance,

00:18:32.015 --> 00:18:35.795
when we do ls mount,

00:18:35.795 --> 00:18:40.910
this is there is an EFS here but it's not mounted.

00:18:40.910 --> 00:18:43.835
So if we were to,

00:18:43.835 --> 00:18:50.539
let's say echo, hello,

00:18:50.539 --> 00:18:55.925
world, into hello.txt or

00:18:55.925 --> 00:19:06.119
into heaven t EFS slash hello, target text.

00:19:11.050 --> 00:19:13.685
Let's come to the root user.

00:19:13.685 --> 00:19:16.715
And then let's go echo.

00:19:16.715 --> 00:19:21.170
Hello world, permanent here first,

00:19:21.170 --> 00:19:23.480
hello dot here, text.

00:19:23.480 --> 00:19:25.340
Now if we were to,

00:19:25.340 --> 00:19:27.600
if we go into,

00:19:30.520 --> 00:19:33.440
we see that as a file called hello about texts.

00:19:33.440 --> 00:19:35.760
But if we do the same here,

00:19:40.120 --> 00:19:43.130
there's no firewall texts.

00:19:43.130 --> 00:19:45.860
So let's go ahead and mount this one as well.

00:19:45.860 --> 00:19:51.240
Sudo mount type EFS.

00:19:52.930 --> 00:19:55.655
Mount EFS.

00:19:55.655 --> 00:20:02.310
Now we see that there's held our text and we can actually come cat.

00:20:04.360 --> 00:20:07.310
And we see that there's helloworld.

00:20:07.310 --> 00:20:12.635
It's the same one that we put in here because because now these two

00:20:12.635 --> 00:20:18.155
have mounted onto their slash mount slash EFS folder,

00:20:18.155 --> 00:20:25.760
the file system that has the faster ID as follows here, as shown here.

00:20:25.760 --> 00:20:34.670
So this is basically one way to mount your EFS file system to your instances.

00:20:34.670 --> 00:20:36.770
And as you can see in an advantage here,

00:20:36.770 --> 00:20:38.494
as opposed to EBS,

00:20:38.494 --> 00:20:43.190
is that now I can potentially as many volume,

00:20:43.190 --> 00:20:45.065
as many instances as I want,

00:20:45.065 --> 00:20:48.635
and they can all be attached to the very same file system.

00:20:48.635 --> 00:20:50.600
So they will have a shared file system,

00:20:50.600 --> 00:20:53.840
which is a huge blessing, right?

00:20:53.840 --> 00:20:55.505
In many cases.

00:20:55.505 --> 00:20:57.770
And you can have multiple of our systems.

00:20:57.770 --> 00:21:04.520
Well, now here, if you notice it says reducer surge price using Lifecycle Management.

00:21:04.520 --> 00:21:08.670
So that's definitely something you can set up.

00:21:09.520 --> 00:21:12.785
Last adolescent lesion set up.

00:21:12.785 --> 00:21:15.829
If you're interested in using EFS,

00:21:15.829 --> 00:21:19.385
definitely take advantage of that in just know that it exists.

00:21:19.385 --> 00:21:23.675
And essentially, it's a way of automating

00:21:23.675 --> 00:21:25.760
the management of your file system so that

00:21:25.760 --> 00:21:29.225
unused files will be automatically transferred into EFS IA,

00:21:29.225 --> 00:21:32.210
and therefore will save you or your home,

00:21:32.210 --> 00:21:35.335
institution or company, whatever, a lot of money.

00:21:35.335 --> 00:21:37.475
So that's that's it for AFS.

00:21:37.475 --> 00:21:39.665
Again, depending on when you're watching this video,

00:21:39.665 --> 00:21:44.930
maybe go over what the last exam focused on as

00:21:44.930 --> 00:21:46.790
some people that took the exam and see

00:21:46.790 --> 00:21:50.450
if you see how much emphasis being placed on Amazon EFS.

00:21:50.450 --> 00:21:53.585
And based on that, you can know how much

00:21:53.585 --> 00:21:57.320
focus you should be putting on it when studying for the exam on,

00:21:57.320 --> 00:22:00.710
but for practical purposes in the USA how to, how to implement it.

00:22:00.710 --> 00:22:03.680
And then you can also set up lifecycle management.

00:22:03.680 --> 00:22:05.450
I'll see you in the next video.

00:22:05.450 --> 00:22:06.810
Thanks.
