WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.620
Welcome back.

00:00:01.620 --> 00:00:06.450
We're going to be jumping straight into the AWS management console for some hands

00:00:06.450 --> 00:00:11.699
on EBS volume experience.

00:00:11.699 --> 00:00:20.310
So let's jump straight into EC2 because remember EBS is a service specific to EC2.

00:00:20.310 --> 00:00:24.744
And so it is not as separate storage surface service.

00:00:24.744 --> 00:00:27.875
So we're going to have to jump right into the EC2 dashboard.

00:00:27.875 --> 00:00:30.589
And let's just go into running instances.

00:00:30.589 --> 00:00:32.794
Obviously we have no running instances.

00:00:32.794 --> 00:00:36.260
The first thing I want to show you guys is how to create

00:00:36.260 --> 00:00:40.295
or how valid are actually created with an instance.

00:00:40.295 --> 00:00:42.545
So again, you can create,

00:00:42.545 --> 00:00:44.750
and I'm gonna be showing you how to create

00:00:44.750 --> 00:00:48.950
an independent volumes just completely

00:00:48.950 --> 00:00:53.359
independently of any EC2 instance and then later attach it to a running EC2 instance.

00:00:53.359 --> 00:00:57.619
But first, let's see how this happens by default.

00:00:57.619 --> 00:00:59.660
So let's just go into Large Instances.

00:00:59.660 --> 00:01:01.415
And every time we come into here,

00:01:01.415 --> 00:01:04.670
we discover something new in one of these steps.

00:01:04.670 --> 00:01:09.334
In this case, we're just going to be creating our regular instance.

00:01:09.334 --> 00:01:13.175
And now if we just,

00:01:13.175 --> 00:01:15.575
let's jump into Review and Launch,

00:01:15.575 --> 00:01:18.590
we can see that down here in storage,

00:01:18.590 --> 00:01:26.809
we actually have an EBS volume that comes attached with our EC2 instance.

00:01:26.809 --> 00:01:30.229
And this comes attached as the root device.

00:01:30.229 --> 00:01:33.695
And it is that ABC type GPT-2,

00:01:33.695 --> 00:01:38.689
if you remember, we learned about the different volume types.

00:01:38.689 --> 00:01:41.960
We had the GPT-2 and GPT-3.

00:01:41.960 --> 00:01:44.825
We had I0, I1, I2,

00:01:44.825 --> 00:01:46.519
we had ST1 as

00:01:46.519 --> 00:01:54.574
C1 would depend on whether or not you wanted to SSD or HDD, so on and so forth.

00:01:54.574 --> 00:01:56.944
So we said that, you know,

00:01:56.944 --> 00:02:01.909
the g, P2 is what's recommended for most workloads.

00:02:01.909 --> 00:02:04.549
So that's what comes by default.

00:02:04.549 --> 00:02:08.914
And it comes with a size of eight GB.

00:02:08.914 --> 00:02:15.679
And it's by default that's called slash dev slash X V D J.

00:02:15.679 --> 00:02:18.080
And we're gonna see, see that when we

00:02:18.080 --> 00:02:20.435
go into the instance and also when we go into volume,

00:02:20.435 --> 00:02:23.390
and it comes with its snapshot,

00:02:23.390 --> 00:02:31.179
and by default, it's not encrypted and it will delete on termination.

00:02:31.179 --> 00:02:34.074
This means that if you save anything into this,

00:02:34.074 --> 00:02:36.640
into our new instance will be saved.

00:02:36.640 --> 00:02:38.724
Everything will be saved to this route device,

00:02:38.724 --> 00:02:40.869
to this route EBS device.

00:02:40.869 --> 00:02:42.999
And if you terminate your instance,

00:02:42.999 --> 00:02:45.624
it will be deleted.

00:02:45.624 --> 00:02:48.730
The volume will delete with the instance type,

00:02:48.730 --> 00:02:50.365
so we want to change that.

00:02:50.365 --> 00:02:54.775
So we just go into step number 4, add storage.

00:02:54.775 --> 00:02:57.220
And let's modify what,

00:02:57.220 --> 00:03:01.269
what's going on here so we can actually change the volume type.

00:03:01.269 --> 00:03:02.680
So we can take a G0,

00:03:02.680 --> 00:03:05.484
P3, we can pick an I1 and I2.

00:03:05.484 --> 00:03:07.480
We can also pick up magnetic type.

00:03:07.480 --> 00:03:09.375
We're not going to be covering this.

00:03:09.375 --> 00:03:13.580
But by default, the IOPS that comes with it is set

00:03:13.580 --> 00:03:18.574
to a baseline of where a minimum of a 100.

00:03:18.574 --> 00:03:20.525
Because I'm gonna be showing you

00:03:20.525 --> 00:03:23.480
these in more detail and recreate independent volume types.

00:03:23.480 --> 00:03:33.079
But essentially, there's a baseline of three IOPS per GB with a minimum of a 100 IOPS.

00:03:33.079 --> 00:03:35.959
And these storage types are,

00:03:35.959 --> 00:03:40.579
are these volumes are burstable to 3000 IOPS.

00:03:40.579 --> 00:03:47.239
So if you do not want your volume to be deleted on the termination of your EC2 instance,

00:03:47.239 --> 00:03:50.540
you can go ahead and uncheck this box here.

00:03:50.540 --> 00:03:55.159
And if you want to encrypt your volume type by default,

00:03:55.159 --> 00:04:01.339
you can go ahead and select from here which key you want to use that involves KMS,

00:04:01.339 --> 00:04:05.239
which is a whole another AWS service that we'll be covering later.

00:04:05.239 --> 00:04:07.745
But essentially this is where you can do that.

00:04:07.745 --> 00:04:14.255
And you can actually add new volumes to your EC2 instance while munching it.

00:04:14.255 --> 00:04:16.759
So at this point during lunch,

00:04:16.759 --> 00:04:20.599
and you can assign them a range from a range of names,

00:04:20.599 --> 00:04:23.450
everything from slash dev slash STB,

00:04:23.450 --> 00:04:26.119
all the way to slash dev slash SDF.

00:04:26.119 --> 00:04:28.850
All of these are available device names.

00:04:28.850 --> 00:04:31.639
And then you can change the gigabytes,

00:04:31.639 --> 00:04:34.355
you can, based on the gigabytes,

00:04:34.355 --> 00:04:36.634
the IOPS will change.

00:04:36.634 --> 00:04:42.799
So now it's 300 because there's a baseline of three IOPS per gigabyte.

00:04:42.799 --> 00:04:46.595
So, so a 100 times three would be 300.

00:04:46.595 --> 00:04:51.110
So let's go ahead and set this at a 100 gigabytes. Why not?

00:04:51.110 --> 00:04:53.389
And we'll just keep it at GPT-2.

00:04:53.389 --> 00:05:00.155
Now, one thing we do want to make sure of is let's go into configure instance.

00:05:00.155 --> 00:05:04.085
And let's just make sure we specify the,

00:05:04.085 --> 00:05:08.029
specify a specific region,

00:05:08.029 --> 00:05:10.669
specific availability zone within our region.

00:05:10.669 --> 00:05:14.720
Let's specify it to us east to a.

00:05:14.720 --> 00:05:16.790
So it's easier to remember a.

00:05:16.790 --> 00:05:21.054
And the reason for that is because we're going to be attaching different volume types,

00:05:21.054 --> 00:05:23.494
different devices, or different instances.

00:05:23.494 --> 00:05:32.044
And remember volumes, volumes are specific to a particular availability zone.

00:05:32.044 --> 00:05:34.985
And I'll show you how to transfer between availability zones.

00:05:34.985 --> 00:05:38.660
Are you taking snapshots and increasing volumes from snapshots?

00:05:38.660 --> 00:05:40.760
But for this video,

00:05:40.760 --> 00:05:43.220
we're not going to be working between availability zones.

00:05:43.220 --> 00:05:45.739
So we do want to make sure that all the volumes recreate,

00:05:45.739 --> 00:05:49.459
as well as the instances belong to the same availability zone so that we

00:05:49.459 --> 00:05:53.719
can pass in or swap volumes between different instances.

00:05:53.719 --> 00:05:58.729
So with that, I think that's enough.

00:05:58.729 --> 00:06:06.709
Let's go ahead and let's actually have the root volume delete by default.

00:06:06.709 --> 00:06:08.569
But this attached volume,

00:06:08.569 --> 00:06:11.720
we won't delete. Actually, I won't even.

00:06:11.720 --> 00:06:14.000
So you can see that we can attach it here,

00:06:14.000 --> 00:06:18.440
but let's go ahead and not attach a volume here.

00:06:18.440 --> 00:06:21.859
And instead, I'll show you how to attach.

00:06:21.859 --> 00:06:23.060
The Azure instance has been created,

00:06:23.060 --> 00:06:24.754
but you can now see how to,

00:06:24.754 --> 00:06:27.949
how to add new volumes, wild Logic Instance.

00:06:27.949 --> 00:06:29.539
So let's go ahead and review.

00:06:29.539 --> 00:06:31.070
Launch.

00:06:31.070 --> 00:06:33.200
I do acknowledge.

00:06:33.200 --> 00:06:39.064
And we launch. So we have.

00:06:39.064 --> 00:06:41.809
We should have a running instance soon.

00:06:41.809 --> 00:06:44.074
It might take some time.

00:06:44.074 --> 00:06:46.849
There we go. We are running essence.

00:06:46.849 --> 00:06:50.539
Let's just go ahead and call this first.

00:06:50.539 --> 00:06:52.220
Okay?

00:06:52.220 --> 00:06:56.495
Now if we click on this instance and we go into storage,

00:06:56.495 --> 00:07:04.535
we can see that the root device is an EBS volume.

00:07:04.535 --> 00:07:07.640
And the specifics are down here,

00:07:07.640 --> 00:07:08.764
so it is attached.

00:07:08.764 --> 00:07:12.184
This is its size and it is not encrypted.

00:07:12.184 --> 00:07:14.660
And it will be deleted on termination.

00:07:14.660 --> 00:07:17.059
And this is a device name.

00:07:17.059 --> 00:07:19.189
And then when we click on this,

00:07:19.189 --> 00:07:23.359
we'll jump right into Elastic Block Store volumes.

00:07:23.359 --> 00:07:26.854
So we could have just clicked on here right away.

00:07:26.854 --> 00:07:29.554
And here we can see all the volumes we have.

00:07:29.554 --> 00:07:31.849
Right now we have a single volume.

00:07:31.849 --> 00:07:34.684
Before we created the instance we had none.

00:07:34.684 --> 00:07:36.319
And if we delete that instance,

00:07:36.319 --> 00:07:38.375
we will have none again, because why?

00:07:38.375 --> 00:07:44.059
This is set to delete on termination of the instance,

00:07:44.059 --> 00:07:45.995
so it will not persist.

00:07:45.995 --> 00:07:49.265
As long as the instance is running, it will run.

00:07:49.265 --> 00:07:52.429
And you can view all the details on here.

00:07:52.429 --> 00:07:57.364
But, but basically, what we want to do now

00:07:57.364 --> 00:08:03.755
is let's go into our running instances.

00:08:03.755 --> 00:08:08.900
Let's go into first, let's connect.

00:08:08.900 --> 00:08:13.595
And let me show you how you can see the different devices,

00:08:13.595 --> 00:08:17.840
volume, volumes that are attached to your ec2 instance.

00:08:17.840 --> 00:08:20.840
So this is going to require some Linux administration.

00:08:20.840 --> 00:08:22.490
But don't be frightened.

00:08:22.490 --> 00:08:24.755
It's, it's pretty straightforward.

00:08:24.755 --> 00:08:28.490
If you know what ls does, right?

00:08:28.490 --> 00:08:31.310
It basically shows you like Let's go back.

00:08:31.310 --> 00:08:33.845
One folder, ls.

00:08:33.845 --> 00:08:36.979
It shows you the folders that are in the current directory.

00:08:36.979 --> 00:08:43.445
So let's just go back into our directory.

00:08:43.445 --> 00:08:48.155
We're in. Now ls bulk like this.

00:08:48.155 --> 00:08:56.419
Lsp, LK will give you the devices that are attached to your device.

00:08:56.419 --> 00:09:00.575
So we do have our root volume which is attached,

00:09:00.575 --> 00:09:04.849
and that's given the name X V D J.

00:09:04.849 --> 00:09:06.949
Now if we go into,

00:09:06.949 --> 00:09:12.539
let's go into volumes in a separate tab.

00:09:12.970 --> 00:09:20.329
And the name of this volume is given down here and attachment information.

00:09:20.329 --> 00:09:27.530
So we can see that it's attached to the instance by ID or by this name.

00:09:27.530 --> 00:09:29.345
We gave it the name first.

00:09:29.345 --> 00:09:34.879
And it's attached as slash dev slash X V D J and it is attached.

00:09:34.879 --> 00:09:36.709
So if we go back into here,

00:09:36.709 --> 00:09:39.589
we can confirm that Zui Da,

00:09:39.589 --> 00:09:43.114
this command removes dev slash by default.

00:09:43.114 --> 00:09:45.979
So this is actually a slash dev slash Zui Da,

00:09:45.979 --> 00:09:47.449
but it removes that.

00:09:47.449 --> 00:09:51.889
And it's mounted on the route on the root folder.

00:09:51.889 --> 00:09:55.414
So basically everything that's within this file system that we are

00:09:55.414 --> 00:10:00.485
in is saved to that volume type, okay?

00:10:00.485 --> 00:10:05.149
And we can view some specific information on

00:10:05.149 --> 00:10:10.909
how this volume type has been formatted by using.

00:10:10.909 --> 00:10:13.250
There are a couple of commands we can use.

00:10:13.250 --> 00:10:15.919
So we can do Sudo file,

00:10:15.919 --> 00:10:20.250
dash S, and then the name of

00:10:20.250 --> 00:10:23.275
The device name.

00:10:23.275 --> 00:10:27.430
And so here we can see that this is all the details,

00:10:27.430 --> 00:10:30.969
if you know anything about the next administration so that you can,

00:10:30.969 --> 00:10:33.549
you can basically read that.

00:10:33.549 --> 00:10:38.320
And actually what we want to see is XV dA1.

00:10:38.320 --> 00:10:40.360
And we can see that it is formatted as

00:10:40.360 --> 00:10:45.850
an Excel file system and some additional information on that.

00:10:45.850 --> 00:10:48.339
Or we can do sudo again,

00:10:48.339 --> 00:10:51.790
LSB or K dash F and mosquitoes information,

00:10:51.790 --> 00:10:54.069
all the attached devices.

00:10:54.069 --> 00:10:59.350
So it is a file system type is x fs.

00:10:59.350 --> 00:11:05.165
So basically we have one instance and that instance has one EBS volume attached to it.

00:11:05.165 --> 00:11:08.569
And that is the root EBS volume that is attached are

00:11:08.569 --> 00:11:12.559
created while you're launching the EC2 instance in the first place.

00:11:12.559 --> 00:11:20.314
Now, we want to create a new volume of new volume independent of any instance.

00:11:20.314 --> 00:11:25.490
So you come into volumes on the Elastic Block Store.

00:11:25.490 --> 00:11:27.350
You click on Create Volume,

00:11:27.350 --> 00:11:29.839
and here we go you can select any other types.

00:11:29.839 --> 00:11:31.069
We discussed.

00:11:31.069 --> 00:11:33.829
General purpose SSD or GPT-2,

00:11:33.829 --> 00:11:38.419
general purpose SSD, GPT-3 provision, IOPS SSD.

00:11:38.419 --> 00:11:41.675
So I0, I2 called HTTP,

00:11:41.675 --> 00:11:45.799
which is SE one or throughput Optimized HDD,

00:11:45.799 --> 00:11:49.055
which is ST1, or the magnetic one which we're not covering.

00:11:49.055 --> 00:11:52.790
And then based on that, you can specify the size.

00:11:52.790 --> 00:11:56.764
And again, this go ahead and read these notes.

00:11:56.764 --> 00:11:58.069
These are useful.

00:11:58.069 --> 00:12:06.155
So basically this incident over this volume type comes with a minimum of a 100 IOPS.

00:12:06.155 --> 00:12:07.879
And then after that,

00:12:07.879 --> 00:12:13.459
for every job, you get three additional IOPS.

00:12:13.459 --> 00:12:15.950
So, so for example,

00:12:15.950 --> 00:12:17.194
if we had just eight,

00:12:17.194 --> 00:12:19.339
it would be the minimum of a 100.

00:12:19.339 --> 00:12:21.350
Even if we have 10,

00:12:21.350 --> 00:12:23.149
10 times 3 should be 30,

00:12:23.149 --> 00:12:25.504
but the minimum is a 100, doesn't change.

00:12:25.504 --> 00:12:28.370
20 times 30 should be 60,

00:12:28.370 --> 00:12:29.539
but the minimum is a 100,

00:12:29.539 --> 00:12:31.009
so it stays at a 100.

00:12:31.009 --> 00:12:33.019
But as soon as we pass,

00:12:33.019 --> 00:12:34.999
like let's say two hundred,

00:12:34.999 --> 00:12:36.409
two hundred times three would be 600.

00:12:36.409 --> 00:12:39.379
And so this will change to 600, so on and so forth.

00:12:39.379 --> 00:12:43.070
So and then these will be burstable up to 3000.

00:12:43.070 --> 00:12:49.280
Obviously, if you have a volume type that is that has more IOPS,

00:12:49.280 --> 00:12:52.519
3000, then it must be personable.

00:12:52.519 --> 00:12:57.109
But if, if it's below 3000 and it will have the potential to burst up to 3000.

00:12:57.109 --> 00:13:01.745
And the details of those will depend on the credits that you earn.

00:13:01.745 --> 00:13:04.055
And the credits you earn will also depend on

00:13:04.055 --> 00:13:07.684
the size and other characteristics of the volume type, et cetera.

00:13:07.684 --> 00:13:09.364
So for all of that,

00:13:09.364 --> 00:13:11.765
definitely refer refer to the documentation.

00:13:11.765 --> 00:13:17.389
No need to pack all that into a video like this.

00:13:17.389 --> 00:13:19.985
And then again, the throughput.

00:13:19.985 --> 00:13:26.254
We said that the GP two devices,

00:13:26.254 --> 00:13:30.020
or the GP 21 types are not.

00:13:30.020 --> 00:13:35.045
The dominant feature is IOPS and throughput because they're solid-state drives.

00:13:35.045 --> 00:13:39.154
So if we were to select, for example, a

00:13:39.154 --> 00:13:40.790
A hard disk drive.

00:13:40.790 --> 00:13:43.820
Let's select as C1.

00:13:43.820 --> 00:13:50.375
Then we get the throughput and the baseline is untold megabytes per second per TIP.

00:13:50.375 --> 00:13:53.630
So again, this will all depend on

00:13:53.630 --> 00:13:57.559
your volume type and so definitely be sensitive to that.

00:13:57.559 --> 00:14:00.110
This is good for most cases,

00:14:00.110 --> 00:14:03.349
GPT-2, but again, it can depend on your use case.

00:14:03.349 --> 00:14:06.154
Now, something that's very important is

00:14:06.154 --> 00:14:08.720
the availability zone and good thing that

00:14:08.720 --> 00:14:12.755
we know the availability zone of our answer so we don't have to go and check.

00:14:12.755 --> 00:14:17.404
But essentially if we were to create this volume type, as you know,

00:14:17.404 --> 00:14:22.654
within the US east to be availability zone,

00:14:22.654 --> 00:14:26.119
we will not be able to attach it directly to our instance.

00:14:26.119 --> 00:14:29.869
We would have to create another one within this availability zone here.

00:14:29.869 --> 00:14:32.465
So definitely watch out for availability zones.

00:14:32.465 --> 00:14:34.610
And let's not encrypt this volume,

00:14:34.610 --> 00:14:37.610
but we can, so this is where you would do it.

00:14:37.610 --> 00:14:41.150
And they were such a master key and that kinda stuff.

00:14:41.150 --> 00:14:42.965
But we're not going to be doing that.

00:14:42.965 --> 00:14:49.384
Let's not go with 500 to 100100 and let's just do ten.

00:14:49.384 --> 00:14:53.315
And let's go ahead and create this volume.

00:14:53.315 --> 00:14:55.219
Let's close.

00:14:55.219 --> 00:14:58.025
So it's being created,

00:14:58.025 --> 00:15:00.169
it's in the creating state.

00:15:00.169 --> 00:15:06.980
Our other volume type is in use because it's attached.

00:15:06.980 --> 00:15:09.124
And the details of that are here.

00:15:09.124 --> 00:15:12.109
That's attached to a currently running instance.

00:15:12.109 --> 00:15:13.614
It doesn't have to be running, but it's,

00:15:13.614 --> 00:15:15.439
it's currently attached to an instance.

00:15:15.439 --> 00:15:18.155
And we saw that, we saw that here.

00:15:18.155 --> 00:15:20.930
Now let's go ahead and refresh this.

00:15:20.930 --> 00:15:28.129
There we go. This volume is now available and we can now attach it.

00:15:28.129 --> 00:15:29.884
And how we do that is,

00:15:29.884 --> 00:15:37.639
let's name this so independent in the in it.

00:15:37.639 --> 00:15:41.779
And there we go. Okay.

00:15:41.779 --> 00:15:44.579
It didn't name.

00:15:46.870 --> 00:15:50.599
Okay, there we go. Independent and dependent.

00:15:50.599 --> 00:15:52.790
And this is, say,

00:15:52.790 --> 00:15:58.349
first because it's just attached the first device of,

00:15:58.840 --> 00:16:04.415
of the solute volume of our instance named first.

00:16:04.415 --> 00:16:06.424
So let's click on this.

00:16:06.424 --> 00:16:09.755
Actions attach volume.

00:16:09.755 --> 00:16:15.119
And from here we're going to select our first instance.

00:16:15.430 --> 00:16:17.960
And we can change the name,

00:16:17.960 --> 00:16:19.369
but we don't need to.

00:16:19.369 --> 00:16:23.090
We're just going to call it and gave it to us by default,

00:16:23.090 --> 00:16:24.394
there's a range of names,

00:16:24.394 --> 00:16:27.034
all the way up to STP, you can name it.

00:16:27.034 --> 00:16:32.059
But know that Linux kernels might rename your device.

00:16:32.059 --> 00:16:33.800
And they will in our case,

00:16:33.800 --> 00:16:37.459
because they haven't renamed to X PDF,

00:16:37.459 --> 00:16:39.695
for example, in the case of the root one device,

00:16:39.695 --> 00:16:41.825
all the way up to x vdp.

00:16:41.825 --> 00:16:44.180
So just keep that in mind.

00:16:44.180 --> 00:16:46.369
If your Linux kernel does that,

00:16:46.369 --> 00:16:48.905
it won't change here, so this will stay the same.

00:16:48.905 --> 00:16:50.659
So that shouldn't be a problem.

00:16:50.659 --> 00:16:53.520
And let's go ahead and attach.

00:16:54.160 --> 00:16:56.974
Now it's being attached,

00:16:56.974 --> 00:17:00.800
it's already in use. There we go.

00:17:00.800 --> 00:17:02.180
It is now attached.

00:17:02.180 --> 00:17:06.635
And if we click on it, we see that it is attached to the first.

00:17:06.635 --> 00:17:11.119
Instance, and it's given the name sidestep slash SDF.

00:17:11.119 --> 00:17:16.700
Now if we actually go into the first instance, let's click on this.

00:17:16.700 --> 00:17:22.999
Here's our first instance and we click on our instance and we go down into storage.

00:17:22.999 --> 00:17:25.669
We can now see that we still have our root device,

00:17:25.669 --> 00:17:31.475
but now we have an additional device slash dev slash SDF.

00:17:31.475 --> 00:17:32.315
Okay?

00:17:32.315 --> 00:17:34.129
And because this was created independently,

00:17:34.129 --> 00:17:36.875
obviously it will not delete under termination.

00:17:36.875 --> 00:17:40.955
And so now when we go into here,

00:17:40.955 --> 00:17:44.010
Let's go ahead and refresh.

00:17:46.180 --> 00:17:51.110
Now, if we do LSB ALK,

00:17:51.110 --> 00:17:58.820
ls, VARK, we now see our second device that's been attached.

00:17:58.820 --> 00:18:01.084
And just like AWS warned us,

00:18:01.084 --> 00:18:05.280
our Linux kernel did rename it from

00:18:06.460 --> 00:18:16.205
from STF two x d F. Okay,

00:18:16.205 --> 00:18:20.689
so this is the new volume type that we

00:18:20.689 --> 00:18:24.770
created that we gave the name of N2 for independent.

00:18:24.770 --> 00:18:26.689
Obviously that's named just within AWS.

00:18:26.689 --> 00:18:28.909
It's not has nothing do with actual volume types.

00:18:28.909 --> 00:18:30.440
So second show up here,

00:18:30.440 --> 00:18:32.794
but that is our new device.

00:18:32.794 --> 00:18:36.350
And you can see there's 10 and the size is 10 gigs.

00:18:36.350 --> 00:18:39.934
And so the one thing you should notice here is that

00:18:39.934 --> 00:18:44.480
it has no mount point and it has been attached,

00:18:44.480 --> 00:18:46.340
but it has not been mounted.

00:18:46.340 --> 00:18:47.989
And in order to mount it,

00:18:47.989 --> 00:18:49.759
we need to actually format it.

00:18:49.759 --> 00:18:53.240
So after you attach an Amazon EBS volume to your instance,

00:18:53.240 --> 00:18:55.609
it is exposed as a block device.

00:18:55.609 --> 00:19:00.319
And you can format the volume with any file system and then mounted.

00:19:00.319 --> 00:19:04.084
Now, there is a chance that a,

00:19:04.084 --> 00:19:06.110
an EBS volume that's been attached to

00:19:06.110 --> 00:19:10.850
your instance has a file system actually has been formatted,

00:19:10.850 --> 00:19:11.930
especially if you're creating,

00:19:11.930 --> 00:19:14.990
if it's at a volume that has been created from a snapshot,

00:19:14.990 --> 00:19:19.429
it most probably will have a file system because it doesn't really make sense creating

00:19:19.429 --> 00:19:25.654
a snapshot of an EBS volume that has not been formatted because there's no point, right?

00:19:25.654 --> 00:19:29.300
There's nothing on there. Snapshotting.

00:19:29.300 --> 00:19:32.419
So most probably it will have a file system.

00:19:32.419 --> 00:19:34.715
So before you try to format it,

00:19:34.715 --> 00:19:38.855
definitely do check if you do format it and you create a new file system on it,

00:19:38.855 --> 00:19:41.074
It's okay, It'll just overwrite what's there.

00:19:41.074 --> 00:19:44.765
But it doesn't hurt to, to check.

00:19:44.765 --> 00:19:49.460
So let's go sudo LSP, LK, dash ef.

00:19:49.460 --> 00:19:55.354
And we can see that our root volume device has a file system,

00:19:55.354 --> 00:19:57.515
which is the XLS file system,

00:19:57.515 --> 00:20:02.464
but our new attached volume neither has a file system nor is mounted.

00:20:02.464 --> 00:20:05.510
Which makes sense because you can't mount the device at is how far system.

00:20:05.510 --> 00:20:10.669
So let's go ahead and create a file format that device.

00:20:10.669 --> 00:20:15.184
So again, we're doing this because the volume is empty

00:20:15.184 --> 00:20:17.809
and we want to create a file system on

00:20:17.809 --> 00:20:20.855
that volume so that we can actually attach it so that,

00:20:20.855 --> 00:20:23.945
you know, there are probably a lot of different ways to do this.

00:20:23.945 --> 00:20:26.450
But this none of the next administration course.

00:20:26.450 --> 00:20:29.135
So I'm just going give you a very simple way to do it.

00:20:29.135 --> 00:20:31.864
We're going to use the MK.

00:20:31.864 --> 00:20:34.955
We're make file system fs

00:20:34.955 --> 00:20:43.699
command slash t. And we're going to create the type,

00:20:43.699 --> 00:20:46.040
and we're going to create the SFS type.

00:20:46.040 --> 00:20:50.315
And we're going to do that for which device?

00:20:50.315 --> 00:20:52.805
For x df now,

00:20:52.805 --> 00:20:58.039
don't write x V D F because that is not the actual device name.

00:20:58.039 --> 00:21:02.660
Remember, LSB ALK removes slash dev from the name.

00:21:02.660 --> 00:21:07.519
So this is actually slash dev slash X, V d f.

00:21:07.519 --> 00:21:10.175
And if we go ahead and press Enter,

00:21:10.175 --> 00:21:15.694
Let's go ahead and check that it worked. And there we go.

00:21:15.694 --> 00:21:19.040
Our attached volume now has a file system.

00:21:19.040 --> 00:21:20.584
Now this means that at this point,

00:21:20.584 --> 00:21:22.595
even if, you know,

00:21:22.595 --> 00:21:27.140
unattached this volume from this instance,

00:21:27.140 --> 00:21:29.390
it'll be preserved right that instant.

00:21:29.390 --> 00:21:33.814
And that volume now has a file system even if we attach to another instance.

00:21:33.814 --> 00:21:35.630
But we wanted to go further.

00:21:35.630 --> 00:21:39.649
We want to actually mount this onto our instance.

00:21:39.649 --> 00:21:41.359
And to do that, we can first,

00:21:41.359 --> 00:21:42.814
let's go ahead and create.

00:21:42.814 --> 00:21:45.529
By now we have no folders.

00:21:45.529 --> 00:21:50.960
Let's create, let's mount it onto a folder within our current directory called data.

00:21:50.960 --> 00:21:56.449
So let's make a directory called data.

00:21:56.449 --> 00:22:02.329
Actually, let's put it into our root folder that our current contract right?

00:22:02.329 --> 00:22:05.285
Now if you do ls, There we go.

00:22:05.285 --> 00:22:07.100
In the root folder.

00:22:07.100 --> 00:22:09.769
We have somewhere here.

00:22:09.769 --> 00:22:11.854
There we go. We have data we just created.

00:22:11.854 --> 00:22:16.895
And now we want to mount this file or this volume onto,

00:22:16.895 --> 00:22:19.909
onto that endpoint or mount, mount point.

00:22:19.909 --> 00:22:28.849
So we use the command sudo mount and we're mounting again slash slash x,

00:22:28.849 --> 00:22:32.209
V, d, f. And we're mounting it to slash data.

00:22:32.209 --> 00:22:38.659
And the slash refers to the root folder in the file in our current file system.

00:22:38.659 --> 00:22:40.909
So let's go and press Enter.

00:22:40.909 --> 00:22:45.440
And again, we can check to the US be a k dash f.

00:22:45.440 --> 00:22:51.649
F just gives you the full file system file types for all the attached volumes.

00:22:51.649 --> 00:22:54.859
There are ways to check for just individuals like I showed you.

00:22:54.859 --> 00:22:58.595
Like for example, we can do what we did.

00:22:58.595 --> 00:22:59.120
Like.

00:22:59.120 --> 00:23:01.325
We can call it pseudo file,

00:23:01.325 --> 00:23:10.715
dash slash slash x, v d, f.

00:23:10.715 --> 00:23:15.635
And we can see that it has access file system in place.

00:23:15.635 --> 00:23:17.210
So that's pretty cool.

00:23:17.210 --> 00:23:20.540
Now, we can now see that it's been mounted LSB,

00:23:20.540 --> 00:23:23.434
okay, It's been mounted to slash data.

00:23:23.434 --> 00:23:29.824
This means that anything we save into slash data will actually be saved into that volume,

00:23:29.824 --> 00:23:32.209
into this volume that's, that's been attached to it.

00:23:32.209 --> 00:23:33.844
And that's really cool, right?

00:23:33.844 --> 00:23:36.514
So let's go ahead and test that.

00:23:36.514 --> 00:23:41.674
Let's, I guess we can create just a very simple file.

00:23:41.674 --> 00:23:44.880
Hello world.

00:23:44.880 --> 00:23:52.490
And we'll just put it into slash data, slash text.

00:23:53.010 --> 00:23:57.759
Hello dot TXT her to a text file.

00:23:57.759 --> 00:24:00.069
So permission is denied.

00:24:00.069 --> 00:24:03.774
So let's go into our root user.

00:24:03.774 --> 00:24:05.575
And then let's do the same thing.

00:24:05.575 --> 00:24:12.520
Echo hello world and to slash data slash hello.txt.

00:24:12.520 --> 00:24:15.835
And now if we were to go into,

00:24:15.835 --> 00:24:21.310
go into data, we would see a file here called hello.txt.

00:24:21.310 --> 00:24:25.315
Now, we're actually now within that volume because we're in the data

00:24:25.315 --> 00:24:29.584
slash data folder to which this volume has been mounted.

00:24:29.584 --> 00:24:37.670
So if we were to print out this file,

00:24:37.670 --> 00:24:38.690
we see Hello World.

00:24:38.690 --> 00:24:41.120
So now at this point,

00:24:41.120 --> 00:24:45.030
if we unmount,

00:24:49.120 --> 00:24:56.879
let's go back into our directory pseudo unmount.

00:24:58.210 --> 00:25:03.305
Or you mt stands for unmount.

00:25:03.305 --> 00:25:04.115
There we go.

00:25:04.115 --> 00:25:08.644
Now LSB, ls be ALK.

00:25:08.644 --> 00:25:13.684
There we go. We have this volume is no longer mounted.

00:25:13.684 --> 00:25:21.155
This means that if we now go into here and we detach our volume,

00:25:21.155 --> 00:25:23.880
Let's go ahead and detach it.

00:25:25.240 --> 00:25:30.830
What we're hoping for is that this volume now will contain that file,

00:25:30.830 --> 00:25:35.479
the hello.txt file, which will contain the text Hello World.

00:25:35.479 --> 00:25:38.840
And now if we would attach this to a new volume,

00:25:38.840 --> 00:25:43.309
two new instance, we should be able to see that text even though it's new instance.

00:25:43.309 --> 00:25:44.719
So let's actually go ahead and create.

00:25:44.719 --> 00:25:47.194
Now we have our first instance.

00:25:47.194 --> 00:25:49.610
Let's create a second instance.

00:25:49.610 --> 00:25:54.485
Select, Review and Launch.

00:25:54.485 --> 00:26:02.569
Launch. New instances.

00:26:02.569 --> 00:26:09.410
There we go. We now have a second instance.

00:26:09.410 --> 00:26:14.930
And this has its own EBS volume,

00:26:14.930 --> 00:26:16.714
how it's being attached,

00:26:16.714 --> 00:26:20.550
and we can go to it.

00:26:20.980 --> 00:26:24.329
So let's refresh this.

00:26:25.960 --> 00:26:28.025
The filter.

00:26:28.025 --> 00:26:32.540
There we go. We have our independent volume that is now available.

00:26:32.540 --> 00:26:35.494
It is no longer attached to our first instance.

00:26:35.494 --> 00:26:39.439
And then we have the root volume device for our first instance.

00:26:39.439 --> 00:26:42.689
And then now we have our second,

00:26:43.420 --> 00:26:50.610
we have our root volume device for our second instance, okay? Now.

00:26:50.830 --> 00:26:57.170
This was populated with data when attached to this instance.

00:26:57.170 --> 00:26:59.600
Now, let's go ahead and attach 0.

00:26:59.600 --> 00:27:01.115
But we made a huge mistake.

00:27:01.115 --> 00:27:01.819
Again.

00:27:01.819 --> 00:27:06.319
This is what I was wanting guys against. Luck.

00:27:06.319 --> 00:27:10.085
This is in US dash, dash to see.

00:27:10.085 --> 00:27:14.669
And so if we go into instances,

00:27:19.750 --> 00:27:26.179
second instance is in US dash, dash to see.

00:27:26.179 --> 00:27:30.959
So if we were to try and attach this volume,

00:27:31.660 --> 00:27:34.129
we want, we, we own C,

00:27:34.129 --> 00:27:36.230
The second instance even appear as

00:27:36.230 --> 00:27:39.364
an option because it's in a different availability zone.

00:27:39.364 --> 00:27:42.139
It's in US dash, dash B2C,

00:27:42.139 --> 00:27:46.895
whereas this volume was created in US dash, dash to a.

00:27:46.895 --> 00:27:56.039
So basically we're going to have to terminate that instance and launch a new one.

00:27:59.680 --> 00:28:07.745
We're going to configure the availability zone to be US dash, dash a.

00:28:07.745 --> 00:28:10.340
And we're going to review and launch.

00:28:10.340 --> 00:28:15.454
So it's good to have these kind of mistakes live when recording

00:28:15.454 --> 00:28:22.320
because it gives you exposure as to how the stuff actually works, right?

00:28:22.450 --> 00:28:29.630
So let's just call this second just with big letters, I guess.

00:28:29.630 --> 00:28:32.879
So we progress are some possible.

00:28:34.450 --> 00:28:38.430
Okay, anyway, let's just call it a sec.

00:28:39.130 --> 00:28:42.785
And now it should be in the correct availability zone.

00:28:42.785 --> 00:28:47.700
Now when we go into volumes and refresh,

00:28:47.800 --> 00:28:56.704
we now have the new volume.

00:28:56.704 --> 00:29:01.339
This is the root volume device for our second instance.

00:29:01.339 --> 00:29:03.320
And this time it's in the correct availability zone.

00:29:03.320 --> 00:29:09.965
So now, if we were to attach the independent volume,

00:29:09.965 --> 00:29:12.439
we can now select between the first and the second.

00:29:12.439 --> 00:29:15.620
It was originally attached to the first and that's where we formatted it.

00:29:15.620 --> 00:29:17.510
And we gave it a file system.

00:29:17.510 --> 00:29:19.400
And then we put in some data,

00:29:19.400 --> 00:29:23.540
and now we want to attach it to the second instance.

00:29:23.540 --> 00:29:26.100
Let's go ahead and touch it.

00:29:29.410 --> 00:29:32.420
And we can see from here,

00:29:32.420 --> 00:29:34.894
if we do ls VARK,

00:29:34.894 --> 00:29:36.769
we no longer see that volume type.

00:29:36.769 --> 00:29:38.989
It has been removed from the first instance.

00:29:38.989 --> 00:29:44.929
Let's go ahead and close this one.

00:29:44.929 --> 00:29:47.824
And now let's connect.

00:29:47.824 --> 00:29:50.164
So let's refresh this. There we go.

00:29:50.164 --> 00:29:55.654
It's in use now and it's attached to the second instance type.

00:29:55.654 --> 00:29:59.610
And so now if we go into the second instance type from here,

00:29:59.740 --> 00:30:02.269
first of all, we can order storage.

00:30:02.269 --> 00:30:03.934
We can see it here.

00:30:03.934 --> 00:30:04.895
Okay.

00:30:04.895 --> 00:30:07.500
And then let's go ahead and connect.

00:30:12.640 --> 00:30:16.520
And then let's go ahead and check the attached devices.

00:30:16.520 --> 00:30:18.889
There we go, we see this attached device.

00:30:18.889 --> 00:30:21.365
But now, if we do.

00:30:21.365 --> 00:30:26.719
If we look at the file system of the attached volume,

00:30:26.719 --> 00:30:28.835
we will see that it is x fs,

00:30:28.835 --> 00:30:31.504
unlike the first time we attach it to the first instance,

00:30:31.504 --> 00:30:34.294
it did not have a file system,

00:30:34.294 --> 00:30:36.874
and so we had the format of another, it's formatted.

00:30:36.874 --> 00:30:38.420
It persists, right?

00:30:38.420 --> 00:30:41.494
That's the big advantage of EBS. Volumes.

00:30:41.494 --> 00:30:44.690
They persist. So it's it's,

00:30:44.690 --> 00:30:46.955
it's formatted so it can be mounted now.

00:30:46.955 --> 00:30:49.149
So let's just go ahead and mounted directly.

00:30:49.149 --> 00:30:53.075
Let's make the data directory.

00:30:53.075 --> 00:30:55.024
And then that's mounted.

00:30:55.024 --> 00:30:59.839
In fact, let's make another directory called data too,

00:30:59.839 --> 00:31:03.320
just so we can see that it's a different name even.

00:31:03.320 --> 00:31:11.539
And then mount dev x VEGF to slash data to.

00:31:11.539 --> 00:31:15.690
And obviously, we made a mistake.

00:31:16.300 --> 00:31:18.244
There we go.

00:31:18.244 --> 00:31:22.250
Now we can do LSB ALK and its magnitude slash CO2.

00:31:22.250 --> 00:31:24.125
And now the moment of truth.

00:31:24.125 --> 00:31:28.040
Let's go into that folder.

00:31:28.040 --> 00:31:29.330
And there we go.

00:31:29.330 --> 00:31:30.634
We see the data.

00:31:30.634 --> 00:31:31.819
It has persisted.

00:31:31.819 --> 00:31:32.915
We see Hello World,

00:31:32.915 --> 00:31:34.580
or we see how that text.

00:31:34.580 --> 00:31:36.799
And if we were to print out this file,

00:31:36.799 --> 00:31:38.540
we will see Hello World.

00:31:38.540 --> 00:31:39.440
And there we go.

00:31:39.440 --> 00:31:42.425
That is the beauty of EBS volumes.

00:31:42.425 --> 00:31:45.335
You can now attach this volume to

00:31:45.335 --> 00:31:49.520
any other instance you want and you will not have any problems.

00:31:49.520 --> 00:31:51.064
The data will still be there.

00:31:51.064 --> 00:31:58.324
And so this adds a whole new level of flexibility to your architectural design.

00:31:58.324 --> 00:32:04.969
And so essentially, that's all you really need to know at this point.

00:32:04.969 --> 00:32:14.255
Let's go ahead and unmount data to pseudo.

00:32:14.255 --> 00:32:19.189
You mount power, let's just go back in.

00:32:19.189 --> 00:32:23.300
And then pseudo you mount data to.

00:32:23.300 --> 00:32:28.520
And then now we

00:32:28.520 --> 00:32:34.860
can go into our instances.

00:32:37.510 --> 00:32:42.479
Let's go ahead and terminate these instances.

00:32:44.380 --> 00:32:50.970
Let's terminate them and then go into our volumes.

00:32:51.100 --> 00:32:56.495
And now, because we had selected delete and termination,

00:32:56.495 --> 00:32:58.625
these two will be deleted.

00:32:58.625 --> 00:33:00.634
Well, if we hadn't done that,

00:33:00.634 --> 00:33:03.110
they will still show up here and there we'll be able to attach them

00:33:03.110 --> 00:33:05.930
to another instance where when we create a new instance.

00:33:05.930 --> 00:33:11.045
But then let's also delete these ones as well just to clean up.

00:33:11.045 --> 00:33:13.025
Delete volumes.

00:33:13.025 --> 00:33:14.480
Yes.

00:33:14.480 --> 00:33:18.719
Okay. The other instances are still shutting down.

00:33:19.840 --> 00:33:21.499
Okay.

00:33:21.499 --> 00:33:24.139
So they haven't terminated.

00:33:24.139 --> 00:33:26.404
Let's go back to the volumes.

00:33:26.404 --> 00:33:27.920
They're gone and now we just have

00:33:27.920 --> 00:33:32.989
the independent volume and we can go ahead and delete that volume as well.

00:33:32.989 --> 00:33:36.739
And there we go. We are back to how everything was.

00:33:36.739 --> 00:33:41.555
We have no volumes and we have no running instances.

00:33:41.555 --> 00:33:48.140
I will see you in the next video where we will go over AWS, EBS, snapshots.

00:33:48.140 --> 00:33:50.249
Thanks, buh-bye.
