WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.950
Hello and welcome back.

00:00:01.950 --> 00:00:07.800
We're just going to go over just very quickly the differences between EBS and EFS.

00:00:07.800 --> 00:00:12.930
I have been mentioning some of the key differences in the past videos.

00:00:12.930 --> 00:00:17.550
But here I just want to summarize everything sphere concisely so that it's

00:00:17.550 --> 00:00:22.485
easy for you to decide which service would be best for you.

00:00:22.485 --> 00:00:25.105
So let's very quickly recap.

00:00:25.105 --> 00:00:28.835
Ebs stands for Elastic Block Storage.

00:00:28.835 --> 00:00:30.485
Every server needs a drive.

00:00:30.485 --> 00:00:36.050
Ebs is essentially a cloud-based storage for the drives on your virtual machines.

00:00:36.050 --> 00:00:41.405
So EBS is designed to store data and blocks attached to an Amazon EC2 instance,

00:00:41.405 --> 00:00:45.635
similar to like a local disk drive on your physical machine.

00:00:45.635 --> 00:00:50.930
And you need to mount EBS onto an Amazon EC2 instance, right?

00:00:50.930 --> 00:00:54.695
Whereas EFS is elastic file system,

00:00:54.695 --> 00:00:58.280
on the other hand, is automatically scalable.

00:00:58.280 --> 00:01:02.810
This means that you need not to be worried about running applications from,

00:01:02.810 --> 00:01:03.965
as I won't be any problems,

00:01:03.965 --> 00:01:07.025
even if the workload suddenly becomes higher,

00:01:07.025 --> 00:01:10.835
storage will automatically scales to compensate for that.

00:01:10.835 --> 00:01:12.980
And now with the workload decreases,

00:01:12.980 --> 00:01:15.620
the storage will itself scale down as well.

00:01:15.620 --> 00:01:20.210
So you don't pay anything for the part of the story is that you don't use as opposed EBS.

00:01:20.210 --> 00:01:24.980
Amazon, EFS is especially helpful for running servers.

00:01:24.980 --> 00:01:28.100
I'm shared volumes, big data analysis,

00:01:28.100 --> 00:01:32.435
any Minos, scalable workload you can think of.

00:01:32.435 --> 00:01:36.980
Now, let's jump into this table very quickly.

00:01:36.980 --> 00:01:43.355
So I tried to summarize some of the key differences between the two services.

00:01:43.355 --> 00:01:46.490
When it comes to storage type, right?

00:01:46.490 --> 00:01:48.695
Ebs block storage.

00:01:48.695 --> 00:01:51.650
Efs is object storage.

00:01:51.650 --> 00:01:55.040
That's pretty straightforward when it comes to performance.

00:01:55.040 --> 00:01:57.755
Ebs is narrowly scalable.

00:01:57.755 --> 00:01:59.435
You know, how would you scale it?

00:01:59.435 --> 00:02:03.859
You can manually scale the size of the volumes without stopping the instance.

00:02:03.859 --> 00:02:06.620
We know the baseline performance comes with

00:02:06.620 --> 00:02:09.515
three IOPS per gigabyte for general purpose volume.

00:02:09.515 --> 00:02:12.245
And if you do want to increase the performance,

00:02:12.245 --> 00:02:14.900
you would need to use provisioned IOPS.

00:02:14.900 --> 00:02:16.940
So there's some scalability.

00:02:16.940 --> 00:02:18.125
We're not really.

00:02:18.125 --> 00:02:21.305
Whereas in EFS, you know,

00:02:21.305 --> 00:02:24.214
this is a highly scalable managed service,

00:02:24.214 --> 00:02:30.710
service and it supports up to 7 thousand file system operations per second.

00:02:30.710 --> 00:02:36.710
So that's quite a big difference when it comes to data stored.

00:02:36.710 --> 00:02:40.595
Ebs, storage data in the same availability zone.

00:02:40.595 --> 00:02:45.380
And replicas are made within the availability zone for higher durability.

00:02:45.380 --> 00:02:49.520
Efs stores data in the same region.

00:02:49.520 --> 00:02:51.770
Replicas are made within the region.

00:02:51.770 --> 00:02:56.059
So and then when it comes to data access,

00:02:56.059 --> 00:03:01.070
EBS can only be accessed by a single EC2 instance.

00:03:01.070 --> 00:03:02.510
So that's one of

00:03:02.510 --> 00:03:06.005
The key defining differences between the two services,

00:03:06.005 --> 00:03:09.470
because EFS can be accessed by

00:03:09.470 --> 00:03:15.545
12 thousands of EC2 instances from multiple availability zones concurrently.

00:03:15.545 --> 00:03:17.315
So that's quite a,

00:03:17.315 --> 00:03:19.625
quite an advantage there.

00:03:19.625 --> 00:03:28.415
And what kinds of file systems EBS supports various file systems like X3 and X4,

00:03:28.415 --> 00:03:35.000
whereas EFS is a file server servers for use and with AWS EC2.

00:03:35.000 --> 00:03:38.660
So but it can also be used as a network file system for

00:03:38.660 --> 00:03:43.025
on-premise server services using AWS Direct Connect.

00:03:43.025 --> 00:03:45.425
And they both use the same encryption.

00:03:45.425 --> 00:03:51.380
Aws, KMS Managed customer master key or CMYK,

00:03:51.380 --> 00:03:55.189
and AES 256 bit encryption standards.

00:03:55.189 --> 00:04:00.935
And that's pretty standard variability that they're both very highly available.

00:04:00.935 --> 00:04:02.435
Durability.

00:04:02.435 --> 00:04:05.180
So when it comes to durability,

00:04:05.180 --> 00:04:09.620
EBS is 20 times more reliable than normal hardest,

00:04:09.620 --> 00:04:13.280
but EFS is highly durable like, you know,

00:04:13.280 --> 00:04:17.210
it doesn't compete with DFS now regard storage.

00:04:17.210 --> 00:04:20.525
So for availability zone failure,

00:04:20.525 --> 00:04:25.985
EBS cannot withstand availability zone failure without point in time, maybe a snapshot.

00:04:25.985 --> 00:04:28.280
Efs on the other hand, you know,

00:04:28.280 --> 00:04:31.370
every file system object is redundantly stored across

00:04:31.370 --> 00:04:36.485
multiple availability zones so it can survive one availability zone fader.

00:04:36.485 --> 00:04:44.165
Storage size, EBS actually does have a maximum limit and volume size,

00:04:44.165 --> 00:04:47.659
and that's set at 16 terabytes.

00:04:47.659 --> 00:04:52.605
Whereas if S has no limitation on the size of the file system whatsoever,

00:04:52.605 --> 00:04:56.765
you can potentially scaled up to petabytes of data,

00:04:56.765 --> 00:04:59.899
of European terabytes of files.

00:04:59.899 --> 00:05:08.135
And interesting, I love EBS has no limitation on file size, whereas EFS does.

00:05:08.135 --> 00:05:14.704
So. Efs actually has a maximum size,

00:05:14.704 --> 00:05:21.005
file size of 47.9 terabytes, which is pretty interesting.

00:05:21.005 --> 00:05:26.595
And finally, data throughput and input our output.

00:05:26.595 --> 00:05:29.575
Avs, if you recall,

00:05:29.575 --> 00:05:34.900
has the SST and the HDD backed storage devices.

00:05:34.900 --> 00:05:40.269
Use of SSD backed and provisioned IOPS is recommended for dedicated,

00:05:40.269 --> 00:05:42.220
improper operations is needed.

00:05:42.220 --> 00:05:46.780
Whereas EFS has a default throughput

00:05:46.780 --> 00:05:50.395
of three gigabytes per second for all connected clients.

00:05:50.395 --> 00:05:54.880
So, yeah, these are just some quick comparisons.

00:05:54.880 --> 00:06:04.090
Again, EFS is quite new in terms of as far as AWS services are concerned.

00:06:04.090 --> 00:06:11.360
So it might take some time for it's place to really settle down and

00:06:11.360 --> 00:06:15.080
for it to really become clear what it should be

00:06:15.080 --> 00:06:18.800
used for when it should be preferred over other storage systems.

00:06:18.800 --> 00:06:22.880
But right now it's already very clear that the fact that

00:06:22.880 --> 00:06:28.670
you can have it accessed by potentially thousands of EC2 instances.

00:06:28.670 --> 00:06:34.865
A huge advantage, it elasticity and scalability and so on and so forth.

00:06:34.865 --> 00:06:39.920
So that's it for this section.

00:06:39.920 --> 00:06:42.485
We finished EC2 storage.

00:06:42.485 --> 00:06:46.835
We're going to be moving on to S3 in the next section.

00:06:46.835 --> 00:06:48.455
So I will see you there.

00:06:48.455 --> 00:06:50.670
Thanks, buh-bye.
