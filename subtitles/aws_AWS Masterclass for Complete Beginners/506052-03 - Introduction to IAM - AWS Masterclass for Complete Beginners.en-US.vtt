WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:03.900
Hello and welcome to identity and access management.

00:00:03.900 --> 00:00:05.340
In AWS.

00:00:05.340 --> 00:00:08.910
I'm a smile and I'll be walking you through some of

00:00:08.910 --> 00:00:15.479
the core concepts and important points to remember and terminology when it comes to AIM.

00:00:15.479 --> 00:00:19.335
Now, keep in mind just as with any other service in AWS,

00:00:19.335 --> 00:00:27.270
AIM is very vast and it has a lot that it offers and a lot that allows you to do. So.

00:00:27.270 --> 00:00:37.040
My job here is not to give you a complete encyclopedia coverage of AIM.

00:00:37.040 --> 00:00:41.810
I'm going to give you the core concepts and important pieces of

00:00:41.810 --> 00:00:47.165
AIM that you will need in order to start using the service.

00:00:47.165 --> 00:00:51.590
And pretty much be able to do 80% of what you would need to do it,

00:00:51.590 --> 00:00:54.695
maybe even 90 percent of what you need to do with AIM.

00:00:54.695 --> 00:00:57.575
If you work in an organization or

00:00:57.575 --> 00:01:01.130
you're building your own application or whatever the case may be.

00:01:01.130 --> 00:01:05.255
And anything further as it comes up.

00:01:05.255 --> 00:01:09.200
Niche or edge cases that you might encounter,

00:01:09.200 --> 00:01:12.590
it's up to you to go and use AWS is

00:01:12.590 --> 00:01:16.640
documentation to find answers to what you're looking for.

00:01:16.640 --> 00:01:18.530
Now, I will say I came in,

00:01:18.530 --> 00:01:21.140
I probably said this before and I keep saying it.

00:01:21.140 --> 00:01:27.170
Aws has a stellar documentation system,

00:01:27.170 --> 00:01:34.010
so they very thoroughly document everything and it's very easy to find, easy to read.

00:01:34.010 --> 00:01:36.770
It's not very complex, right?

00:01:36.770 --> 00:01:38.675
It's very, very simple.

00:01:38.675 --> 00:01:40.985
Writing, very simple English.

00:01:40.985 --> 00:01:45.665
And so you should be able to find whatever you're looking for.

00:01:45.665 --> 00:01:51.795
And they do also offer in all their documentation pages in PDF form.

00:01:51.795 --> 00:01:55.490
If that's something you'd like to do is download it and print it out,

00:01:55.490 --> 00:01:56.915
maybe it, and read from there.

00:01:56.915 --> 00:01:58.370
So having said that,

00:01:58.370 --> 00:02:00.740
let's get into AIM.

00:02:00.740 --> 00:02:02.750
Now. What is AIR?

00:02:02.750 --> 00:02:07.760
It is basically an abbreviation for identity and access management,

00:02:07.760 --> 00:02:11.840
as you'll find in AWS loves abbreviations.

00:02:11.840 --> 00:02:14.120
They rebuild everything like they're in the military.

00:02:14.120 --> 00:02:17.240
Even AWS itself is an abbreviation for Amazon,

00:02:17.240 --> 00:02:18.770
amazon Web Services, right?

00:02:18.770 --> 00:02:21.815
So you get used to these abbreviations.

00:02:21.815 --> 00:02:23.390
You'll pick them up.

00:02:23.390 --> 00:02:27.350
Don't worry, but you should always know what the abbreviation stands for.

00:02:27.350 --> 00:02:31.115
Like EC2 stands for Elastic Cloud Computing, right?

00:02:31.115 --> 00:02:33.935
Because that's important to know because, you know,

00:02:33.935 --> 00:02:39.080
the elastic term is used quite often in AWS and it's important

00:02:39.080 --> 00:02:44.090
to know which serves their elastic and same with cloud computing.

00:02:44.090 --> 00:02:47.060
Understand that it's a Cloud computing service and so on and so forth.

00:02:47.060 --> 00:02:53.000
So you should know abbreviations for each of these services.

00:02:53.000 --> 00:02:57.890
So are the meaning of the abbreviations for each of the services.

00:02:57.890 --> 00:03:00.140
So Identity and Access Management.

00:03:00.140 --> 00:03:03.560
So that pretty much gives you an understanding of what I am

00:03:03.560 --> 00:03:07.415
is used for you basically managing identity and access.

00:03:07.415 --> 00:03:11.150
And identity obviously refers to users and that kind of stuff.

00:03:11.150 --> 00:03:14.570
Access, what type of permissions they have, so on and so forth.

00:03:14.570 --> 00:03:20.630
So it's a web service that helps you securely control access to AWS resources.

00:03:20.630 --> 00:03:24.125
Given the vast amount of resources available in AWS,

00:03:24.125 --> 00:03:30.940
and given the scale to which you can build applications and systems with AWS,

00:03:30.940 --> 00:03:38.105
you know, you'll most probably be working at a company or an organization or a team where

00:03:38.105 --> 00:03:41.990
different individuals within that team

00:03:41.990 --> 00:03:46.340
will need access to different parts of the AWS account.

00:03:46.340 --> 00:03:50.375
And it's probably not wise to give everybody complete access.

00:03:50.375 --> 00:03:53.435
So you need a way of managing all of that, right?

00:03:53.435 --> 00:03:56.480
You don't want your project manager who

00:03:56.480 --> 00:03:59.720
doesn't have any technical idea of how to use AWS.

00:03:59.720 --> 00:04:03.500
You don't want him to be able to go in and and be able to

00:04:03.500 --> 00:04:06.110
disrupt any of the services you have running

00:04:06.110 --> 00:04:08.480
or any of the servers and that kind of stuff.

00:04:08.480 --> 00:04:11.300
But you do want him to be able to manage billing in that canister,

00:04:11.300 --> 00:04:13.220
right? Same with the developer.

00:04:13.220 --> 00:04:16.340
Maybe you don't want the developer to know the intricacies of how

00:04:16.340 --> 00:04:20.930
your servers have been set up and all of that.

00:04:20.930 --> 00:04:24.364
But you do want him to have access to

00:04:24.364 --> 00:04:28.760
a particular servers so he can deploy his coders application.

00:04:28.760 --> 00:04:31.205
So there are n this case,

00:04:31.205 --> 00:04:35.000
cases are on scenarios that we can go over.

00:04:35.000 --> 00:04:36.725
But in each of these,

00:04:36.725 --> 00:04:40.820
the central theme is that you have multiple users and they each play

00:04:40.820 --> 00:04:44.840
a different role in your production environment.

00:04:44.840 --> 00:04:48.480
And you want to be able to manage who has access to what and,

00:04:48.480 --> 00:04:50.570
and restricted as, as required.

00:04:50.570 --> 00:04:53.375
So, and likewise, right,

00:04:53.375 --> 00:04:55.490
just as you have different users,

00:04:55.490 --> 00:04:59.690
you might also have a vast number of different services,

00:04:59.690 --> 00:05:04.430
different servers, different instances and agonists have running on your account.

00:05:04.430 --> 00:05:07.640
And you might want to also manage which one of

00:05:07.640 --> 00:05:10.940
those services can communicate with the other services, right?

00:05:10.940 --> 00:05:13.400
Like we have a database.

00:05:13.400 --> 00:05:16.970
And database is close to external access,

00:05:16.970 --> 00:05:20.540
but you might have three servers running different versions of it.

00:05:20.540 --> 00:05:21.995
And I have an application.

00:05:21.995 --> 00:05:27.080
And you might want to control which of those servers have access to your application.

00:05:27.080 --> 00:05:30.110
So you need a way of Acts are managing access,

00:05:30.110 --> 00:05:34.910
management of different web services to other web services as well.

00:05:34.910 --> 00:05:39.290
So you do that under the row definition.

00:05:39.290 --> 00:05:41.870
So whereas a user refers to the individual,

00:05:41.870 --> 00:05:45.050
a row, we'll refer to our observer.

00:05:45.050 --> 00:05:48.230
So we're gonna go into all of that, don't worry.

00:05:48.230 --> 00:05:54.740
So essentially, AIM is an alternative to using the root user which should never be used.

00:05:54.740 --> 00:05:56.510
Note exclamation mark.

00:05:56.510 --> 00:05:58.160
And this is very important,

00:05:58.160 --> 00:06:00.290
so it is highly, highly,

00:06:00.290 --> 00:06:06.725
highly advised by AWS and buy all the DevOps engineers that

00:06:06.725 --> 00:06:10.280
have experienced using these type of services that you should never

00:06:10.280 --> 00:06:14.270
use on the root user for your daily work.

00:06:14.270 --> 00:06:16.100
And this is also,

00:06:16.100 --> 00:06:19.970
I guess a theme that's been transferred over from Linux administration.

00:06:19.970 --> 00:06:23.015
Those of you who are familiar with Linux administration, right?

00:06:23.015 --> 00:06:26.150
You don't want to do your regular administrating or

00:06:26.150 --> 00:06:29.360
your regular maintenance and not going to solve using your user, right?

00:06:29.360 --> 00:06:30.050
Because it's.

00:06:30.050 --> 00:06:38.525
Very risky. You might do something and mess stuff up and not be able to undo any of that.

00:06:38.525 --> 00:06:43.490
So it's always good practice to create separate user even if you are the Admin,

00:06:43.490 --> 00:06:45.380
even if you are the creator of the account,

00:06:45.380 --> 00:06:49.220
and even if you are the one that should have the ultimate,

00:06:49.220 --> 00:06:51.905
highest of access, you can give yourself,

00:06:51.905 --> 00:06:54.530
um, access to all the different web services.

00:06:54.530 --> 00:06:55.920
But you should do it as a,

00:06:55.920 --> 00:06:56.990
as a separate user.

00:06:56.990 --> 00:07:00.380
So the first thing you should do is obviously create a user for yourself

00:07:00.380 --> 00:07:04.190
that is like the highest level admin in a master user.

00:07:04.190 --> 00:07:09.200
And then from there you can do whatever you want and allows you to manage,

00:07:09.200 --> 00:07:12.395
create a manage IAM, IAM identities,

00:07:12.395 --> 00:07:15.620
or what we refer to users,

00:07:15.620 --> 00:07:19.475
groups or roles as so anything you create within IAM,

00:07:19.475 --> 00:07:22.430
specific user or group,

00:07:22.430 --> 00:07:26.915
or group or a role in is referred to as an I am identity.

00:07:26.915 --> 00:07:28.820
Again, the reason I'm emphasizing

00:07:28.820 --> 00:07:32.270
these definitions and these terms is because especially if you're going to take

00:07:32.270 --> 00:07:35.360
the exam or you're working in an environment that

00:07:35.360 --> 00:07:39.200
has been using it for a long time in a year,

00:07:39.200 --> 00:07:41.780
expected to know these definitions and know these terms.

00:07:41.780 --> 00:07:44.390
So I'm going to be covering as many terms as I can.

00:07:44.390 --> 00:07:45.980
But keep in mind that again,

00:07:45.980 --> 00:07:47.000
I can't, you know,

00:07:47.000 --> 00:07:50.599
this course is not meant no course, whatever,

00:07:50.599 --> 00:07:54.800
go into complete detail because I would just take way too long.

00:07:54.800 --> 00:08:04.595
So do use the AWS documentation to further expand your AWS vocabulary.

00:08:04.595 --> 00:08:07.355
And I will put some references at the end of

00:08:07.355 --> 00:08:13.445
each section for you to read further on everything we've covered.

00:08:13.445 --> 00:08:15.260
So users, like we said,

00:08:15.260 --> 00:08:17.225
refer to individuals, groups,

00:08:17.225 --> 00:08:24.230
allow you to group users so that you can apply the same permissions

00:08:24.230 --> 00:08:27.620
or policies as they're called in AWS to

00:08:27.620 --> 00:08:31.265
multiple users and change them without having to go into each individual user.

00:08:31.265 --> 00:08:33.590
So for example, if you want to have a set

00:08:33.590 --> 00:08:38.735
of permissions that you want to assign all the developers in your,

00:08:38.735 --> 00:08:40.355
in your town, your team.

00:08:40.355 --> 00:08:42.260
And you don't want to, you know,

00:08:42.260 --> 00:08:45.200
let's say you want to change something in the set of permissions.

00:08:45.200 --> 00:08:48.740
You don't want to go into each user one by one and change it.

00:08:48.740 --> 00:08:51.080
So you can assign them all to a single group,

00:08:51.080 --> 00:08:52.940
let's say a developer group.

00:08:52.940 --> 00:08:56.600
And then you can assign a policy or a set of permissions to that group.

00:08:56.600 --> 00:08:57.860
And whenever you change that,

00:08:57.860 --> 00:09:02.180
it reflected within the underlying users and roles.

00:09:02.180 --> 00:09:04.790
Like we said, they refer not to individuals but

00:09:04.790 --> 00:09:09.935
two instances or inner like a database server that kinda,

00:09:09.935 --> 00:09:13.430
now this is above the, you know,

00:09:13.430 --> 00:09:17.060
we're not for the sake of this course or roles are not that important.

00:09:17.060 --> 00:09:20.690
But let me just give you a more proper definition of what our role is.

00:09:20.690 --> 00:09:22.130
Just so you do know what it is.

00:09:22.130 --> 00:09:26.660
So a role is very similar to a user in that it is an identity

00:09:26.660 --> 00:09:32.030
with permission policies that determine what the identity can and cannot do in AWS.

00:09:32.030 --> 00:09:38.180
However, a row does not have any credentials associated with it.

00:09:38.180 --> 00:09:41.540
So instead of being uniquely associated with one person.

00:09:41.540 --> 00:09:46.880
You know, our role is intended to be assumable by anyone who needs it.

00:09:46.880 --> 00:09:50.120
And so an Ada, an AIM user,

00:09:50.120 --> 00:09:55.070
can assume a role to temporarily take on different permissions for a specific task.

00:09:55.070 --> 00:09:57.305
And then so, you know,

00:09:57.305 --> 00:09:59.990
but for all intents and purposes, Right?

00:09:59.990 --> 00:10:03.635
Why would you prefer a rollover user-user over rho?

00:10:03.635 --> 00:10:06.290
And I'll go into that in the following slides.

00:10:06.290 --> 00:10:08.120
But, you know, I just felt you should know that.

00:10:08.120 --> 00:10:11.450
But in general, it is used how it is used,

00:10:11.450 --> 00:10:13.250
where I told you is used,

00:10:13.250 --> 00:10:15.995
but it's good to know what it is formally defined as.

00:10:15.995 --> 00:10:20.240
So. So IAM allows you to manage permissions, policies,

00:10:20.240 --> 00:10:23.600
as we've said, it also lets you set up multi-factor authentication,

00:10:23.600 --> 00:10:25.325
also known as MFA.

00:10:25.325 --> 00:10:31.460
And this just allows you to ensure the security of the users that are accessing

00:10:31.460 --> 00:10:35.540
your account and security the whole another beast when it

00:10:35.540 --> 00:10:40.040
comes to all Ada was Services and we're going to be covering as much as possible,

00:10:40.040 --> 00:10:43.055
but do make sure that you are up to date with the latest.

00:10:43.055 --> 00:10:47.930
One important thing to keep in mind with AWS is in they're always updating,

00:10:47.930 --> 00:10:50.750
they're always changing their services

00:10:50.750 --> 00:10:54.770
and even the luck of their console and that kind of stuff.

00:10:54.770 --> 00:11:00.380
So, you know, if anybody who makes a course eventually becomes outdated.

00:11:00.380 --> 00:11:06.440
And so this course is probably the newest course you'll have access to,

00:11:06.440 --> 00:11:08.975
but still you should keep up to date with

00:11:08.975 --> 00:11:13.580
the new features in the new security documentation, that kind of stuff.

00:11:13.580 --> 00:11:20.930
So here are a list of some of the key features.

00:11:20.930 --> 00:11:27.890
So the number one feature obviously being shared access to your AWS account, right.

00:11:27.890 --> 00:11:31.265
Otherwise, it would be a huge pain.

00:11:31.265 --> 00:11:35.360
I'm doing anything because you wouldn't be able to have anybody else working with you on

00:11:35.360 --> 00:11:39.320
your account unless you shared with them in your actual credentials,

00:11:39.320 --> 00:11:41.000
which would be, you know,

00:11:41.000 --> 00:11:45.155
very risky and and a big no-no when it comes to security.

00:11:45.155 --> 00:11:48.590
So you can grant other people permission to administer and use

00:11:48.590 --> 00:11:52.040
resources in your AWS account without having to share your password access key.

00:11:52.040 --> 00:11:53.660
So this is the number one feature.

00:11:53.660 --> 00:11:55.400
And granular permissions.

00:11:55.400 --> 00:11:59.240
You can grant different permissions to different people for different resources.

00:11:59.240 --> 00:12:01.700
For example, you might allow some users complete access

00:12:01.700 --> 00:12:06.514
to an EC2 instance or an S3 instance.

00:12:06.514 --> 00:12:09.425
Again, EC2 stands for Amazon Elastic Cloud,

00:12:09.425 --> 00:12:15.290
Elastic Compute Cloud, and S3 stands for Simple Storage Service.

00:12:15.290 --> 00:12:20.690
Or, you know, DynamoDB redshift in other services as well.

00:12:20.690 --> 00:12:25.940
For other users, you can allow read only access to just some S3 buckets,

00:12:25.940 --> 00:12:30.080
or permission to administer just some EC2 instances, right?

00:12:30.080 --> 00:12:34.310
If you have like an admin or the examiner or somebody that you want to

00:12:34.310 --> 00:12:38.825
manage your instance or to access your billing information, but nothing else.

00:12:38.825 --> 00:12:43.295
Like we said in the previous slide, you know,

00:12:43.295 --> 00:12:47.240
maybe you want your project manager to access your account,

00:12:47.240 --> 00:12:49.520
but you don't want to mess stuff up on accident because he has

00:12:49.520 --> 00:12:52.610
no technical knowledge of how to use AWS.

00:12:52.610 --> 00:12:54.020
But you he, you know, he needs to view

00:12:54.020 --> 00:12:56.420
the billing and manage the billing and Afghanistan.

00:12:56.420 --> 00:12:57.395
So.

00:12:57.395 --> 00:12:59.720
Another feature would be secure access to

00:12:59.720 --> 00:13:04.340
AWS resources for applications that run on Amazon EC2.

00:13:04.340 --> 00:13:07.340
You can use AIM features for securely,

00:13:07.340 --> 00:13:11.899
to securely provide credentials for applications that run on EC2 instances,

00:13:11.899 --> 00:13:14.795
okay, So your applications in maybe have an eight.

00:13:14.795 --> 00:13:18.500
You have a database that's running on your EC2 instance,

00:13:18.500 --> 00:13:21.215
maybe have a Web API, whatever it may be,

00:13:21.215 --> 00:13:24.800
can securely provide credentials for those applications.

00:13:24.800 --> 00:13:31.295
These credentials provide permissions for free application to access other AWS resources,

00:13:31.295 --> 00:13:37.310
such as S3 buckets or DynamoDB tables and so on, so forth.

00:13:37.310 --> 00:13:40.205
If you're not familiar with S3 and,

00:13:40.205 --> 00:13:42.920
and these other names of touring around.

00:13:42.920 --> 00:13:46.490
Don't worry, this course is intended to teach you all that.

00:13:46.490 --> 00:13:51.380
So we will be covering almost all of those major services in this course.

00:13:51.380 --> 00:13:54.560
But you know, there are over a 100,

00:13:54.560 --> 00:13:57.830
I think, services on AWS so we can't corral them.

00:13:57.830 --> 00:13:58.940
But like all the main ones,

00:13:58.940 --> 00:14:01.235
like EC2, S3, so on and so forth.

00:14:01.235 --> 00:14:02.825
We'll cover.

00:14:02.825 --> 00:14:07.010
And then obviously multi-factor authentication,

00:14:07.010 --> 00:14:09.140
also known as MFA.

00:14:09.140 --> 00:14:12.785
You can add two-factor authentication to your account.

00:14:12.785 --> 00:14:14.630
So that's what MFA is.

00:14:14.630 --> 00:14:17.570
And to individual users for extra security.

00:14:17.570 --> 00:14:19.670
With MFA, you and your users must provide

00:14:19.670 --> 00:14:23.885
not only a password or access key to work with your account,

00:14:23.885 --> 00:14:26.630
but also a code from a specially configured device.

00:14:26.630 --> 00:14:28.280
So this device can be a phone,

00:14:28.280 --> 00:14:33.275
it can be a designated MFA device, whatever it is.

00:14:33.275 --> 00:14:35.615
And there are some options will see them when we're,

00:14:35.615 --> 00:14:39.065
when we're doing the hands-on for this section.

00:14:39.065 --> 00:14:42.620
But I prefer using my phone. Here.

00:14:42.620 --> 00:14:44.915
There's an application you have to download and, and that kind of stuff.

00:14:44.915 --> 00:14:50.060
But you might have exposure to MFA from other applications.

00:14:50.060 --> 00:14:54.290
I think Google now is also crying MFA or recommending

00:14:54.290 --> 00:14:59.000
MFA when you're logging in avian into your Google account or your G-mail account.

00:14:59.000 --> 00:15:00.590
Identity federation.

00:15:00.590 --> 00:15:04.085
Again, these keywords are good to know for the examined.

00:15:04.085 --> 00:15:07.595
And when you're working with other DevOps engineers and stuff,

00:15:07.595 --> 00:15:11.990
identity federation basically means that you can allow users who,

00:15:11.990 --> 00:15:14.750
who already have passwords elsewhere.

00:15:14.750 --> 00:15:20.510
For example, if you're working in a company and you have a corporate network or like,

00:15:20.510 --> 00:15:22.490
you know, some other CRM.

00:15:22.490 --> 00:15:27.635
A CRM, but like some sort of software that's managing your employees at your company.

00:15:27.635 --> 00:15:33.185
Or you just have another application that has that already has

00:15:33.185 --> 00:15:36.440
user and password information and you don't want to go

00:15:36.440 --> 00:15:40.264
and create a new set of user and password information.

00:15:40.264 --> 00:15:42.320
Just for the sake of AWS.

00:15:42.320 --> 00:15:44.660
You can, you can allow,

00:15:44.660 --> 00:15:47.960
you can integrate that with AWS so that

00:15:47.960 --> 00:15:52.910
essentially they can use their existing password to log in to AWS.

00:15:52.910 --> 00:15:58.640
Now, that's a huge topic and that's something that no other course will also cover.

00:15:58.640 --> 00:16:00.260
And that's a more advanced topic.

00:16:00.260 --> 00:16:03.560
But it's good to mention here so that you know that it's

00:16:03.560 --> 00:16:07.670
possible identity information for assurance.

00:16:07.670 --> 00:16:11.540
So if you use AWS CloudTrail,

00:16:11.540 --> 00:16:14.060
which is another service from AWS.

00:16:14.060 --> 00:16:16.880
You can receive log records that include information about

00:16:16.880 --> 00:16:20.540
those who made requests for resources in your account.

00:16:20.540 --> 00:16:23.970
And that information will be based on AIM identities.

00:16:23.970 --> 00:16:28.790
So that's useful if you do use AWS CloudTrail.

00:16:28.790 --> 00:16:33.050
And then it's integrated with many AWS services.

00:16:33.050 --> 00:16:38.450
You can see a full list of all the services that I am is integrated with.

00:16:38.450 --> 00:16:43.010
If you just search like AWS services that work with I am into Google.

00:16:43.010 --> 00:16:49.205
You'll find a AWS Documentation page and then it's free to use.

00:16:49.205 --> 00:16:54.800
So that's a big plus 8 of this notoriously charges you for, for everything.

00:16:54.800 --> 00:16:59.675
But AIM is just a default free service.

00:16:59.675 --> 00:17:01.280
But obviously you will be,

00:17:01.280 --> 00:17:05.960
you will be charged for the services that your user,

00:17:05.960 --> 00:17:14.930
your users will be using when they use their AIM identity to access AWS account.

00:17:14.930 --> 00:17:17.660
So obviously make sure that keep track of

00:17:17.660 --> 00:17:20.600
what services they're using because you will be charged for that,

00:17:20.600 --> 00:17:23.795
but you won't be charged for using AIM specifically.

00:17:23.795 --> 00:17:28.475
So let's get into AIM identities.

00:17:28.475 --> 00:17:33.170
So we've kinda mentioned all of this previously,

00:17:33.170 --> 00:17:36.440
but these are formally define all these terms.

00:17:36.440 --> 00:17:39.815
And I am identity provides access to an AWS account.

00:17:39.815 --> 00:17:41.720
You know, that's very clear.

00:17:41.720 --> 00:17:46.055
A group is a collection of AIM users managed as a unit.

00:17:46.055 --> 00:17:51.140
So it can contain many users and a user can belong to multiple groups.

00:17:51.140 --> 00:17:55.010
And groups basically lets you specify permissions for multiple users.

00:17:55.010 --> 00:18:00.920
As I mentioned, an AIM identity represents a user and this is in,

00:18:00.920 --> 00:18:03.380
I pulled this from the AWS documentation.

00:18:03.380 --> 00:18:06.725
This is really good example of how you can have groups set up.

00:18:06.725 --> 00:18:08.915
So you have your original account.

00:18:08.915 --> 00:18:14.060
Again, the root access to this account you should never use.

00:18:14.060 --> 00:18:16.085
Just lock it up somewhere.

00:18:16.085 --> 00:18:17.735
Save and that's it,

00:18:17.735 --> 00:18:19.025
right? Don't use it.

00:18:19.025 --> 00:18:22.280
You have to use obviously create your first user,

00:18:22.280 --> 00:18:24.230
which will basically be u.

00:18:24.230 --> 00:18:25.910
And then from there,

00:18:25.910 --> 00:18:27.620
you don't need to use it again.

00:18:27.620 --> 00:18:32.090
But for example, if you want Bob and Susan to have admin access,

00:18:32.090 --> 00:18:34.070
you can create a group called admins.

00:18:34.070 --> 00:18:37.670
And then you can specify admin permissions that will

00:18:37.670 --> 00:18:42.365
basically be transferred over to any user that belongs to that group.

00:18:42.365 --> 00:18:44.480
Same with developers and same with,

00:18:44.480 --> 00:18:48.740
let's say you want to have a test group and so on and so forth.

00:18:48.740 --> 00:18:50.780
So that's how you manage groups.

00:18:50.780 --> 00:18:53.045
And I'll show you that in the hands-on video.

00:18:53.045 --> 00:19:00.410
In the first will create permissions and so on and so forth using just individual users.

00:19:00.410 --> 00:19:03.395
And then I'll show you how it's more efficient to use groups.

00:19:03.395 --> 00:19:06.620
So an IAM identity represents

00:19:06.620 --> 00:19:12.140
a user and can be authenticated and authorized to perform actions in AWS.

00:19:12.140 --> 00:19:17.270
So each eye IAM identity can be associated with one or more policies.

00:19:17.270 --> 00:19:19.264
And policies basically determine

00:19:19.264 --> 00:19:26.285
what actions a user role or a member of a group can perform on which AWS resources,

00:19:26.285 --> 00:19:30.170
on which AWS resources and under what conditions.

00:19:30.170 --> 00:19:32.780
So policies.

00:19:32.780 --> 00:19:35.210
I'm going to be getting into that as well.

00:19:35.210 --> 00:19:39.305
But there are predefined policies and our policies that you can create.

00:19:39.305 --> 00:19:41.690
And we're gonna, I'm gonna be showing you how to do that as well,

00:19:41.690 --> 00:19:45.800
but I'm going to also be giving you some more information on the following slides.

00:19:45.800 --> 00:19:48.929
So Identity Access Management.

00:19:49.000 --> 00:19:51.665
So you can get a quick idea.

00:19:51.665 --> 00:19:55.160
Policies define what actions the above can take.

00:19:55.160 --> 00:19:56.930
So users groups and roles,

00:19:56.930 --> 00:20:01.310
they can each have different policies, so on and so forth.

00:20:01.310 --> 00:20:04.565
And you can move users in and out of different groups.

00:20:04.565 --> 00:20:07.130
And same with rows.

00:20:07.130 --> 00:20:12.890
So there are AWS managed policies and customer managed policies.

00:20:12.890 --> 00:20:16.490
So Ada, AWS managed policies are

00:20:16.490 --> 00:20:20.945
basically policies that are created and managed by AWS and they're very useful,

00:20:20.945 --> 00:20:24.064
especially if you're new to using policies.

00:20:24.064 --> 00:20:29.645
It's highly recommended that you just stick to using AWS managed policies, for example.

00:20:29.645 --> 00:20:30.890
And I'll show you how to do that.

00:20:30.890 --> 00:20:32.510
But you can search for like,

00:20:32.510 --> 00:20:35.299
let's say, network administrators.

00:20:35.299 --> 00:20:36.890
So, you know, you will,

00:20:36.890 --> 00:20:38.870
they will open this up and we'll be able to see

00:20:38.870 --> 00:20:43.340
exactly what that policy has access to and

00:20:43.340 --> 00:20:46.580
whether or not has read or write access or has complete access

00:20:46.580 --> 00:20:50.480
or a diverse uses the word full access,

00:20:50.480 --> 00:20:55.880
um, and then, and then you can just assign those two groups, and so on and so forth.

00:20:55.880 --> 00:21:02.210
But in the case that you do want more customized policies or permissions,

00:21:02.210 --> 00:21:05.465
you can create customer managed policies.

00:21:05.465 --> 00:21:07.715
And so these are,

00:21:07.715 --> 00:21:10.655
these are providing a more precise control.

00:21:10.655 --> 00:21:16.685
And you can, there's a visual editor within AWS where you can visually edit,

00:21:16.685 --> 00:21:19.850
creator, edit your AIM policies, um,

00:21:19.850 --> 00:21:25.460
or if you're more programming inclined or coding client

00:21:25.460 --> 00:21:32.960
and you want to use some kind of reproducible method.

00:21:32.960 --> 00:21:39.125
Each policy is actually essentially a JSON document or JSON data file.

00:21:39.125 --> 00:21:44.210
So you can define your policies as JSON files.

00:21:44.210 --> 00:21:48.425
And this way you can save it or you can share it and so on and so forth.

00:21:48.425 --> 00:21:52.100
Aws managed policies are a good starting point to help you figure out

00:21:52.100 --> 00:21:55.550
the names of the privileges that you might want to use.

00:21:55.550 --> 00:21:57.995
But it's better to use the,

00:21:57.995 --> 00:22:01.925
but it's better to use the AWS policy generator,

00:22:01.925 --> 00:22:05.540
which I will show you how to use.

00:22:05.540 --> 00:22:08.615
But yeah, so you're not going to redefine yourself

00:22:08.615 --> 00:22:12.065
using customer managed policies too often.

00:22:12.065 --> 00:22:14.240
I do in some cases,

00:22:14.240 --> 00:22:16.310
just for, you know,

00:22:16.310 --> 00:22:21.350
just to add something or take away something from an already existing managed policy.

00:22:21.350 --> 00:22:23.630
But again, we'll get into all that.

00:22:23.630 --> 00:22:24.290
Now.

00:22:24.290 --> 00:22:31.250
When would you want to create an IAM user instead of a role?

00:22:31.250 --> 00:22:35.630
Because remember, I define what our role is and you know,

00:22:35.630 --> 00:22:38.945
at this point it might be a little too advanced.

00:22:38.945 --> 00:22:42.545
And so you might have gotten confused as to when to, you know,

00:22:42.545 --> 00:22:47.930
what's the difference between a user and a row is I did mention that the

00:22:47.930 --> 00:22:50.750
very common application of using a role specifically

00:22:50.750 --> 00:22:53.870
when dealing with web services instead of individuals.

00:22:53.870 --> 00:22:57.260
But obviously the definition is a little bit more broad.

00:22:57.260 --> 00:23:01.400
And so I'm going to try to give you some idea of how

00:23:01.400 --> 00:23:05.180
you could prefer or when you would prefer one over the other.

00:23:05.180 --> 00:23:08.990
So this should help you understand better the difference between the two.

00:23:08.990 --> 00:23:15.875
So because I am uses just an identity with specific permissions in your account,

00:23:15.875 --> 00:23:18.740
or you might not need to create an IAM user

00:23:18.740 --> 00:23:22.414
for every occasion on which you need credentials.

00:23:22.414 --> 00:23:23.765
Okay?

00:23:23.765 --> 00:23:28.700
In many cases, you can take advantage of IAM roles and

00:23:28.700 --> 00:23:31.280
their temporary security credentials instead of

00:23:31.280 --> 00:23:34.295
using the long-term credentials associated with an IAM user.

00:23:34.295 --> 00:23:40.220
So if you create an AWS account and you're the only person who works in your account,

00:23:40.220 --> 00:23:43.040
then technically it is possible to work

00:23:43.040 --> 00:23:46.880
with AWS using the root user credentials for your ADLS account,

00:23:46.880 --> 00:23:50.450
but that's not recommended at all as we've discussed.

00:23:50.450 --> 00:23:54.440
So instead, it's highly recommended that you create an IAM user for

00:23:54.440 --> 00:23:59.059
yourself and use the credentials for that user when you work with AWS.

00:23:59.059 --> 00:24:01.190
So in that case,

00:24:01.190 --> 00:24:04.115
obviously you create a user and not our role.

00:24:04.115 --> 00:24:08.150
And there is a nice documentation by AWS

00:24:08.150 --> 00:24:12.680
on security best practices when dealing with AIM.

00:24:12.680 --> 00:24:18.305
And again, just search into AWS documentation on docs dot AWS dot amazon.com.

00:24:18.305 --> 00:24:22.625
Just search for security best practices in AIM and you'll find those.

00:24:22.625 --> 00:24:26.630
On another case would be when other people in your group needs to work in

00:24:26.630 --> 00:24:30.589
your AWS account and your group is using no other identity mechanism.

00:24:30.589 --> 00:24:32.270
And so in that case, you know,

00:24:32.270 --> 00:24:36.980
create a IAM users for the individuals who need access to your AWS resources and

00:24:36.980 --> 00:24:42.789
assign appropriate permissions to each user and give each his or her own credentials.

00:24:42.789 --> 00:24:45.175
So we strongly recommend,

00:24:45.175 --> 00:24:49.810
and it's strongly recommend in any other area of us professionals

00:24:49.810 --> 00:24:54.880
would strongly recommend that you never share credentials among multiple users.

00:24:54.880 --> 00:24:56.980
So essentially you would just create another row,

00:24:56.980 --> 00:25:02.140
our user for each separate am identity for each user, each individual.

00:25:02.140 --> 00:25:05.665
So that's generally like to good rules of thumb.

00:25:05.665 --> 00:25:10.705
You know, those are two situations where you would create an IAM user instead of a row.

00:25:10.705 --> 00:25:18.400
Now let's look at the opposite That's stuck at the other side and answer the question,

00:25:18.400 --> 00:25:21.280
when would you create an IAM role instead of user?

00:25:21.280 --> 00:25:24.290
By the way, these are questions that might come up on

00:25:24.290 --> 00:25:27.695
the exam as well if you are taking this course, for example,

00:25:27.695 --> 00:25:35.255
our goal with this course is more of a hands-on real-world course for application.

00:25:35.255 --> 00:25:37.265
Getting your hands dirty.

00:25:37.265 --> 00:25:39.905
We're not as concerned about the exam,

00:25:39.905 --> 00:25:42.200
but we are covering everything you do need for the exam.

00:25:42.200 --> 00:25:45.215
So I will try to, as much as I remember

00:25:45.215 --> 00:25:48.740
to note important things you might need for the exam.

00:25:48.740 --> 00:25:52.490
So create, like you should create or

00:25:52.490 --> 00:25:56.810
thinking about creating an IAM role for these three situations.

00:25:56.810 --> 00:25:59.930
So assume you are creating an application that runs on

00:25:59.930 --> 00:26:03.635
an Amazon Elastic Compute Cloud or Amazon EC2.

00:26:03.635 --> 00:26:07.460
Instance, and that application makes requests to AWS.

00:26:07.460 --> 00:26:09.860
So don't create an IAM user and pass

00:26:09.860 --> 00:26:11.840
the user credential user's credentials to

00:26:11.840 --> 00:26:15.725
the application or embed the credentials in the application.

00:26:15.725 --> 00:26:17.480
Okay, instead of that,

00:26:17.480 --> 00:26:22.880
create an IAM role that you attach to the EC2 instance to

00:26:22.880 --> 00:26:28.895
give temporary security credentials to applications running on the instance.

00:26:28.895 --> 00:26:32.330
Okay, and we made brief mention this earlier.

00:26:32.330 --> 00:26:35.825
When an application uses these credentials in AWS,

00:26:35.825 --> 00:26:38.060
it can perform all of the operations that are

00:26:38.060 --> 00:26:40.550
allowed by the policies attached to the role.

00:26:40.550 --> 00:26:42.020
So essentially it is like a user,

00:26:42.020 --> 00:26:46.130
but note the specific use case here.

00:26:46.130 --> 00:26:50.420
So you can again use AWS documentation,

00:26:50.420 --> 00:26:54.140
search for using an AIM role to grant permissions to

00:26:54.140 --> 00:26:58.625
applications running on Amazon EC2 instances or something like that.

00:26:58.625 --> 00:27:02.795
And you can find relevant documentation on how you would do that.

00:27:02.795 --> 00:27:05.810
Or, you know, you're creating an app that runs on

00:27:05.810 --> 00:27:09.349
a mobile phone and makes requests to AWS.

00:27:09.349 --> 00:27:12.200
In that case, again, don't create an IAM user and

00:27:12.200 --> 00:27:15.320
distributed users access key with the app.

00:27:15.320 --> 00:27:16.115
Don't do that.

00:27:16.115 --> 00:27:22.400
Instead, use an identity provider like login with Amazon or Amazon, Cognito,

00:27:22.400 --> 00:27:26.510
Facebook or Google, or any other service

00:27:26.510 --> 00:27:30.590
like that to authenticate users and map the users to an IAM role.

00:27:30.590 --> 00:27:34.400
And the app can use the role to get

00:27:34.400 --> 00:27:37.370
temporary security credentials that have

00:27:37.370 --> 00:27:40.880
the permission specified by the same policies that you know,

00:27:40.880 --> 00:27:42.785
by the way, that you can attach to users.

00:27:42.785 --> 00:27:45.035
But in this case that are attached to the row.

00:27:45.035 --> 00:27:49.610
So again, you can find out more information on how to do all of that.

00:27:49.610 --> 00:27:55.520
And also another use case for creating a row instead of user when p,

00:27:55.520 --> 00:27:58.370
when he users in your company are authenticated in

00:27:58.370 --> 00:28:02.480
your corporate network and want to be able to use AWS without having to sign in.

00:28:02.480 --> 00:28:03.515
Again.

00:28:03.515 --> 00:28:08.390
That is, you want to allow users to federate into AWS.

00:28:08.390 --> 00:28:13.985
Remember we talked about user federation and if you already have a system, Utrecht,

00:28:13.985 --> 00:28:17.930
Utrecht collaboration retro company or business or wherever where

00:28:17.930 --> 00:28:21.770
you're already managing and dealing with users and passwords and that kind of stuff.

00:28:21.770 --> 00:28:23.270
So in that case,

00:28:23.270 --> 00:28:24.845
don't create IAM users,

00:28:24.845 --> 00:28:31.385
configure a federation relationship between your enterprise identity system and AWS.

00:28:31.385 --> 00:28:33.650
And there are a couple ways you can do this.

00:28:33.650 --> 00:28:35.255
I'm not gonna go into details.

00:28:35.255 --> 00:28:39.949
Again, all of this you can find through AWS documentation.

00:28:39.949 --> 00:28:42.800
Like I mentioned, the federation issues is something

00:28:42.800 --> 00:28:45.995
that's above the scope of this level.

00:28:45.995 --> 00:28:48.395
But just knowing that it exists,

00:28:48.395 --> 00:28:52.190
I will help you, especially if you do get a question like that on the exam.

00:28:52.190 --> 00:28:58.310
So these are some very useful resources you can use to find out more.

00:28:58.310 --> 00:29:02.660
Essentially, if you just go into the AIM user guide on the side,

00:29:02.660 --> 00:29:05.179
you'll have some links.

00:29:05.179 --> 00:29:08.180
Basically as you can walk through all everything that eight of

00:29:08.180 --> 00:29:13.055
this documentation has to offer in terms of AIM.

00:29:13.055 --> 00:29:18.215
So I will see you in the next video for some hands on AIM practice.

00:29:18.215 --> 00:29:19.800
Buh-bye.
