WEBVTT
1
00:00:01.040 --> 00:00:03.500
Now that you know how to use Cloud9 to read,

2
00:00:03.500 --> 00:00:05.190
write, and debug code,

3
00:00:05.190 --> 00:00:08.670
let's take a quick look at how it can be leveraged for entire development

4
00:00:08.670 --> 00:00:13.830
teams and organizations to write software and collaborate.

5
00:00:13.830 --> 00:00:17.380
In the AWS world,

6
00:00:17.380 --> 00:00:20.620
identity and access management is a service that is used to

7
00:00:20.620 --> 00:00:24.680
provide granular access to AWS services and resources to

8
00:00:24.680 --> 00:00:28.670
users and to other AWS services.

9
00:00:28.670 --> 00:00:32.790
It's a pretty important concept, so let me go ahead and say that one more time.

10
00:00:32.790 --> 00:00:36.270
Identity and access management, commonly referred to as IAM,

11
00:00:36.270 --> 00:00:41.050
is the service within AWS that is used to provide access

12
00:00:41.050 --> 00:00:46.140
to specific AWS resources and services.

13
00:00:46.140 --> 00:00:52.050
Access could be permitted to either AWS users or to other resources or services.

14
00:00:52.050 --> 00:00:55.450
I know this concept can be a little complicated at first,

15
00:00:55.450 --> 00:00:58.730
but essentially, the idea here is that identity and access

16
00:00:58.730 --> 00:01:03.470
management can control access to everything within AWS, whether that

17
00:01:03.470 --> 00:01:08.280
access is permitted to a single user or access to a service provided

18
00:01:08.280 --> 00:01:10.640
to a different service or resource.

19
00:01:10.640 --> 00:01:12.070
So with that logic,

20
00:01:12.070 --> 00:01:15.810
in order to provide users with an AWS account access to

21
00:01:15.810 --> 00:01:19.530
Cloud9, they would need access to an IAM policy,

22
00:01:19.530 --> 00:01:24.050
which is essentially an explicit set of permissions to enable them to access

23
00:01:24.050 --> 00:01:29.410
the service. When building solutions with Cloud9 that interact with other AWS

24
00:01:29.410 --> 00:01:35.000
services, such as AWS Lambda or S3, you'll likely need to have IAM policies

25
00:01:35.000 --> 00:01:40.370
in place that allow the secure communication between the two systems. Within

26
00:01:40.370 --> 00:01:41.700
the scope of this course,

27
00:01:41.700 --> 00:01:44.920
we're only going to cover IAM as it pertains to

28
00:01:44.920 --> 00:01:47.640
providing users access to Cloud9.

29
00:01:47.640 --> 00:01:48.390
However,

30
00:01:48.390 --> 00:01:50.860
if you're interested in learning more about identity and

31
00:01:50.860 --> 00:01:54.030
access management and how to use it securely for a broader

32
00:01:54.030 --> 00:01:56.830
set of AWS services and users,

33
00:01:56.830 --> 00:02:01.750
I recommend checking out my Introduction to AWS Security course, also here on

34
00:02:01.750 --> 00:02:07.980
Pluralsight. As an AWS administrator, there are two main types of team setups

35
00:02:07.980 --> 00:02:11.780
to be aware of when setting up teams to use Cloud9,

36
00:02:11.780 --> 00:02:15.970
The standard team setup option leverages IAM and allows you to provide

37
00:02:15.970 --> 00:02:20.440
users access to Cloud9 within a single AWS account.

38
00:02:20.440 --> 00:02:22.670
An enterprise setup, however,

39
00:02:22.670 --> 00:02:27.170
lets you leverage AWS Single Sign‑On solution to enable users from

40
00:02:27.170 --> 00:02:32.140
multiple AWS accounts to access Cloud9 within an enterprise.

41
00:02:32.140 --> 00:02:36.220
This is a fairly advanced setup option that better enables large

42
00:02:36.220 --> 00:02:40.580
corporations with multiple AWS accounts to set up Cloud9

43
00:02:40.580 --> 00:02:44.440
globally to all of their AWS accounts.

44
00:02:44.440 --> 00:02:49.240
You're probably wondering, why would a company ever have multiple AWS accounts?

45
00:02:49.240 --> 00:02:51.340
That sounds a little complicated.

46
00:02:51.340 --> 00:02:53.660
Well, for large organizations,

47
00:02:53.660 --> 00:02:57.300
managing security, billing, and resource provisioning can

48
00:02:57.300 --> 00:03:00.890
actually become a complicated endeavor due to the number

49
00:03:00.890 --> 00:03:02.840
of users within the system.

50
00:03:02.840 --> 00:03:04.250
So because of this problem,

51
00:03:04.250 --> 00:03:07.650
large corporations will often have entirely separate AWS

52
00:03:07.650 --> 00:03:10.840
accounts to better govern their environments.

53
00:03:10.840 --> 00:03:15.230
A typical use case for this is companies may have a different AWS

54
00:03:15.230 --> 00:03:18.540
account for test and production environments.

55
00:03:18.540 --> 00:03:21.600
This enables their resources to innovate with less security

56
00:03:21.600 --> 00:03:24.120
barriers in place in a test environment,

57
00:03:24.120 --> 00:03:28.180
but also enables an entirely separate and more secure production

58
00:03:28.180 --> 00:03:31.980
environment that is running their active applications.

59
00:03:31.980 --> 00:03:36.340
Conceptually, Cloud9 team setups are quite simplistic.

60
00:03:36.340 --> 00:03:39.540
Each AWS account by default has a root account.

61
00:03:39.540 --> 00:03:43.020
The root account is then used to create different IAM users

62
00:03:43.020 --> 00:03:45.580
that become admins within that environment.

63
00:03:45.580 --> 00:03:48.820
Admins are basically just IAM users that have elevated

64
00:03:48.820 --> 00:03:51.240
permissions within the AWS account.

65
00:03:51.240 --> 00:03:55.150
Our admins then would be used to create additional IAM users and

66
00:03:55.150 --> 00:03:59.970
provide them access to services using IAM. So, for Cloud9 team

67
00:03:59.970 --> 00:04:03.340
setups, our admin account would create IAM users for each

68
00:04:03.340 --> 00:04:06.820
developer within the organization.

69
00:04:06.820 --> 00:04:11.120
Now, AWS users, by default, have access to nothing.

70
00:04:11.120 --> 00:04:14.920
So let's say we want to assign all of these users access to Cloud9.

71
00:04:14.920 --> 00:04:18.740
Rather than assigning individual policies to each user,

72
00:04:18.740 --> 00:04:23.130
which would get pretty tedious if we had a lot of users, we could just add all

73
00:04:23.130 --> 00:04:26.940
of our users to an IAM group based on their job function.

74
00:04:26.940 --> 00:04:28.240
For example,

75
00:04:28.240 --> 00:04:33.250
we could add all of our engineers to a developer group, then we could take

76
00:04:33.250 --> 00:04:37.220
that developer group and attach a Cloud9 IAM policy to it,

77
00:04:37.220 --> 00:04:42.640
which would provide access to Cloud9 to all IAM users within that group.

78
00:04:42.640 --> 00:04:46.000
This example outlines how you can quickly and securely provide

79
00:04:46.000 --> 00:04:50.100
access to many IAM users to an AWS service,

80
00:04:50.100 --> 00:04:54.640
be it Cloud9 or a different service entirely.

81
00:04:54.640 --> 00:04:57.160
If you're wondering why we can't just use the root account to create

82
00:04:57.160 --> 00:05:00.910
our developer IAM users in our developer group, well,

83
00:05:00.910 --> 00:05:04.680
this is actually bad security practice in AWS.

84
00:05:04.680 --> 00:05:09.040
AWS recommends that the root account only be used to create the first

85
00:05:09.040 --> 00:05:12.840
IAM user and shouldn't be used on a daily basis.

86
00:05:12.840 --> 00:05:15.960
Using the root account on a daily basis or for common administrative

87
00:05:15.960 --> 00:05:19.850
tasks is bad practice because the root account actually has

88
00:05:19.850 --> 00:05:24.140
permissions to delete the AWS account entirely.

89
00:05:24.140 --> 00:05:27.830
I won't be demoing how to create enterprise Cloud9 setup in this course,

90
00:05:27.830 --> 00:05:30.860
but I think it's important to understand how it works conceptually,

91
00:05:30.860 --> 00:05:32.400
at least at a high level,

92
00:05:32.400 --> 00:05:35.340
so you can make the decision later when setting up users in

93
00:05:35.340 --> 00:05:39.460
Cloud9 on the method that best matches your use case. With

94
00:05:39.460 --> 00:05:42.040
AWS, you can create organizations.

95
00:05:42.040 --> 00:05:46.240
Organizations are essentially a group of AWS accounts.

96
00:05:46.240 --> 00:05:50.740
Each organization has a master account and then a member account.

97
00:05:50.740 --> 00:05:55.400
Both master and member accounts have full access to AWS services and

98
00:05:55.400 --> 00:05:59.340
function just as if they were standard AWS accounts.

99
00:05:59.340 --> 00:06:03.100
The only difference between the two is that the master account can be used to

100
00:06:03.100 --> 00:06:09.780
create and remove member accounts within that single organization. Within each

101
00:06:09.780 --> 00:06:13.160
AWS account, similar to our previous example,

102
00:06:13.160 --> 00:06:16.400
the accounts would use the root account to create admin users,

103
00:06:16.400 --> 00:06:20.480
which would then be provided access to create additional users and

104
00:06:20.480 --> 00:06:26.230
create IAM groups. With organizations, you could then provide access

105
00:06:26.230 --> 00:06:30.980
to IAM groups to Cloud9 using AWS Single Sign‑On that would span

106
00:06:30.980 --> 00:06:36.470
across multiple AWS accounts within that same organization. As

107
00:06:36.470 --> 00:06:40.840
mentioned previously, when to use an organization over a single AWS

108
00:06:40.840 --> 00:06:42.720
account is quite subjective,

109
00:06:42.720 --> 00:06:47.160
since anything can technically be accomplished with a single AWS account

110
00:06:47.160 --> 00:06:51.640
rather than using an organization. For most situations,

111
00:06:51.640 --> 00:06:54.840
a single AWS account is probably sufficient.

112
00:06:54.840 --> 00:06:58.320
However, if you work for a very large corporation,

113
00:06:58.320 --> 00:07:02.370
leveraging AWS organizations to have multiple AWS accounts

114
00:07:02.370 --> 00:07:07.180
might actually be the best option for you.

115
00:07:07.180 --> 00:07:10.930
Let's get back to the AWS console and do a quick demo showing how you

116
00:07:10.930 --> 00:07:16.570
can provide access to Cloud9 to multiple IAM users.

117
00:07:16.570 --> 00:07:19.440
In order to provide access to our users to Cloud9,

118
00:07:19.440 --> 00:07:22.670
we could head over to the identity and access management, or

119
00:07:22.670 --> 00:07:26.440
IAM, dashboard within the AWS console.

120
00:07:26.440 --> 00:07:27.200
From here,

121
00:07:27.200 --> 00:07:30.800
we can select users to view all of the IAM users we currently have in

122
00:07:30.800 --> 00:07:36.470
this AWS account. In the user screen, we can view a list of IAM users

123
00:07:36.470 --> 00:07:39.340
and the groups they are associated to.

124
00:07:39.340 --> 00:07:43.020
Using IAM groups is a more efficient method of assigning access

125
00:07:43.020 --> 00:07:47.360
to AWS resources, multiple users that require similar access

126
00:07:47.360 --> 00:07:49.490
and have similar job requirements,

127
00:07:49.490 --> 00:07:55.020
such as a group of developers working on a specific application or system.

128
00:07:55.020 --> 00:07:57.900
We can see the developers group is already created in our

129
00:07:57.900 --> 00:08:00.880
account, and a few of our users, such as LukaDoncic,

130
00:08:00.880 --> 00:08:06.530
John Smith, and BobanMarjanovic, are already placed within this group.

131
00:08:06.530 --> 00:08:09.700
In order to provide these users access to Cloud9,

132
00:08:09.700 --> 00:08:13.640
we need to add a new IAM policy to the developers group.

133
00:08:13.640 --> 00:08:18.990
So let's select the developers group hyperlink next to the Luka IAM user.

134
00:08:18.990 --> 00:08:24.140
In the IAM groups page for our developers group, we can view active

135
00:08:24.140 --> 00:08:28.590
permissions that this IAM group has. Here we can select to attach a new IAM

136
00:08:28.590 --> 00:08:35.090
policy. Again, an IAM policy is just a specific set of granular permissions

137
00:08:35.090 --> 00:08:39.650
that can be added to an IAM user or group that provides access to AWS

138
00:08:39.650 --> 00:08:42.540
resources or services.

139
00:08:42.540 --> 00:08:44.140
When attaching a policy,

140
00:08:44.140 --> 00:08:48.150
we can search for AWS policies based on the native U.S. service.

141
00:08:48.150 --> 00:08:51.440
So let's type Cloud9 and see what we get.

142
00:08:51.440 --> 00:08:55.200
We get a few hits immediately of permission options we have.

143
00:08:55.200 --> 00:08:59.470
Let's go ahead and select to add the AWS Cloud9 user policy to

144
00:08:59.470 --> 00:09:02.930
our group and select to attach the policy.

145
00:09:02.930 --> 00:09:05.650
And there it is. Really just with a few clicks,

146
00:09:05.650 --> 00:09:11.540
we've provided every single user in our developers group access to use Cloud9.

147
00:09:11.540 --> 00:09:15.550
A great benefit of IAM is that if we want to create new users later,

148
00:09:15.550 --> 00:09:17.980
we could simply just add them to the appropriate IAM

149
00:09:17.980 --> 00:09:20.390
group, and they will automatically get all of the

150
00:09:20.390 --> 00:09:24.640
permissions set by that specific group.

151
00:09:24.640 --> 00:09:28.310
Well, now that our developers group is set up and ready to use Cloud9,

152
00:09:28.310 --> 00:09:34.310
let's try logging in with one of our users. In the login

153
00:09:34.310 --> 00:09:37.120
screen for our AWS account, we can log in with our user,

154
00:09:37.120 --> 00:09:40.840
LukaDoncic, to access the AWS dashboard.

155
00:09:40.840 --> 00:09:44.340
Once we get the AWS dashboard, we can select Cloud9

156
00:09:44.340 --> 00:09:46.920
to access the service. Perfect.

157
00:09:46.920 --> 00:09:50.240
We can now see that our IAM user, which has been added to the

158
00:09:50.240 --> 00:09:54.750
developers group, can access Cloud9, since we added the IAM policy

159
00:09:54.750 --> 00:09:59.940
toward developers IAM group. With this simple setup, an AWS

160
00:09:59.940 --> 00:10:03.930
administrator could easily provision hundreds of IAM users and quickly

161
00:10:03.930 --> 00:10:12.000
provide them access to Cloud9, or any other resource for that matter, by using IAM roles and policies.

