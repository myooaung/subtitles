WEBVTT
1
00:00:00.004 --> 00:00:05.006
(upbeat music)

2
00:00:05.006 --> 00:00:06.005
- [Instructor] Let's have a look now

3
00:00:06.005 --> 00:00:10.005
at one way to solve this refactoring code challenge.

4
00:00:10.005 --> 00:00:12.009
Starting in tech support.xml,

5
00:00:12.009 --> 00:00:16.000
where our channel is first configured,

6
00:00:16.000 --> 00:00:17.004
the first thing we need to do

7
00:00:17.004 --> 00:00:20.005
is instead of using the channel element

8
00:00:20.005 --> 00:00:22.006
from the Integration namespace,

9
00:00:22.006 --> 00:00:26.002
we need to use the PublishSubscribeChannel element.

10
00:00:26.002 --> 00:00:27.006
It's that simple.

11
00:00:27.006 --> 00:00:30.002
Now in our code references,

12
00:00:30.002 --> 00:00:33.003
we need to update the type that we're casting

13
00:00:33.003 --> 00:00:34.009
this reference to.

14
00:00:34.009 --> 00:00:37.005
So here in line 33, in the ViewService,

15
00:00:37.005 --> 00:00:42.005
instead of casting our resulting bean to a direct channel,

16
00:00:42.005 --> 00:00:46.008
we need to cast it to a PublishSubscribeChannel.

17
00:00:46.008 --> 00:00:48.008
The reason that works so handily for us

18
00:00:48.008 --> 00:00:52.000
is there in line 20, we have initialized

19
00:00:52.000 --> 00:00:54.001
our TechSupportChannel property

20
00:00:54.001 --> 00:00:56.003
to be an abstract subscribable channel,

21
00:00:56.003 --> 00:00:59.005
which is the parent of both PublishSubscribeChannels

22
00:00:59.005 --> 00:01:00.007
and direct channels.

23
00:01:00.007 --> 00:01:03.004
So it's just a simple matter of changing our cast

24
00:01:03.004 --> 00:01:06.004
there in line 33, and that does the trick.

25
00:01:06.004 --> 00:01:09.003
We have a similar situation in Dashboard Manager.

26
00:01:09.003 --> 00:01:14.008
We have a reference to a direct channel here in line 69.

27
00:01:14.008 --> 00:01:20.001
We need to update to this, to PublishSubscribeChannel.

28
00:01:20.001 --> 00:01:22.000
And now in the case of those two classes,

29
00:01:22.000 --> 00:01:24.007
all of the implementation that we've already been using

30
00:01:24.007 --> 00:01:26.004
will stay in place.

31
00:01:26.004 --> 00:01:29.003
What remains is to go into our TechSupportService,

32
00:01:29.003 --> 00:01:31.000
and this is why we're doing this challenge,

33
00:01:31.000 --> 00:01:32.005
because here in TechSupportService,

34
00:01:32.005 --> 00:01:35.006
we want to subscribe to the same channel

35
00:01:35.006 --> 00:01:38.005
and get the broadcast messages also.

36
00:01:38.005 --> 00:01:41.008
We want to be able to broadcast to more than one subscriber.

37
00:01:41.008 --> 00:01:43.000
So what we're going to do

38
00:01:43.000 --> 00:01:45.005
is we have a handle here pre-typed,

39
00:01:45.005 --> 00:01:48.009
a handle to a TechSupportChannel.

40
00:01:48.009 --> 00:01:51.002
Let's initialize this instance

41
00:01:51.002 --> 00:01:56.001
in the way we have become accustomed to now.

42
00:01:56.001 --> 00:01:59.009
We're going to get a reference to the object

43
00:01:59.009 --> 00:02:06.001
from our Spring context.

44
00:02:06.001 --> 00:02:08.006
And now, just like we did in the ViewService,

45
00:02:08.006 --> 00:02:11.008
we're going to subscribe to this channel,

46
00:02:11.008 --> 00:02:13.006
and let us use the view handler

47
00:02:13.006 --> 00:02:16.005
that we configured as an inner class in this class,

48
00:02:16.005 --> 00:02:22.002
which is called ServiceMessageHandler.

49
00:02:22.002 --> 00:02:25.006
That, I believe, will do the trick.

50
00:02:25.006 --> 00:02:31.000
I believe now that we can start our application,

51
00:02:31.000 --> 00:02:32.007
and now we see in our console log

52
00:02:32.007 --> 00:02:35.008
that our TechSupportService is logging to the console,

53
00:02:35.008 --> 00:02:38.002
which proves that it is consuming that message

54
00:02:38.002 --> 00:02:41.007
from our new PublishSubscribeChannel,

55
00:02:41.007 --> 00:02:44.009
and also our user interface is still getting

56
00:02:44.009 --> 00:02:46.009
the build message that's coming

57
00:02:46.009 --> 00:02:49.003
from the same subscribable channel.

58
00:02:49.003 --> 00:02:51.000
So that does it for our code challenge.

