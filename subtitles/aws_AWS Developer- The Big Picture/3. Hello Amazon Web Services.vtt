WEBVTT
1
00:00:00.940 --> 00:00:02.400
Around 2003,

2
00:00:02.400 --> 00:00:05.890
some engineers at Amazon figured out that not only did Amazon

3
00:00:05.890 --> 00:00:08.480
need standardized server configurations,

4
00:00:08.480 --> 00:00:11.770
but that there was a potentially huge revenue stream waiting if they

5
00:00:11.770 --> 00:00:15.240
could sell those same capabilities to other businesses.

6
00:00:15.240 --> 00:00:18.590
It only took 1 year after this proposal to offer a service to

7
00:00:18.590 --> 00:00:22.990
businesses for cloud computing that AWS was christened, and the first

8
00:00:22.990 --> 00:00:26.300
offering, Simple Queue Service, was launched.

9
00:00:26.300 --> 00:00:30.480
This was just the first of a deluge of services that added more and more

10
00:00:30.480 --> 00:00:34.940
functionality to satisfy the needs of modern web applications.

11
00:00:34.940 --> 00:00:38.830
Amazon wasn't the first company to identify this business opportunity,

12
00:00:38.830 --> 00:00:42.540
but they were one of the first to fill it so successfully.

13
00:00:42.540 --> 00:00:44.890
So let's talk about Amazon Web Services in the

14
00:00:44.890 --> 00:00:48.190
plainest possible terms. At its simplest,

15
00:00:48.190 --> 00:00:52.600
AWS is a collection of cloud computing services that can be utilized

16
00:00:52.600 --> 00:00:57.340
individually or in tandem to run a computer application.

17
00:00:57.340 --> 00:00:58.600
To break this down,

18
00:00:58.600 --> 00:01:02.560
we call it cloud computing services because the services are

19
00:01:02.560 --> 00:01:06.130
running in some magical data center somewhere, and marketing

20
00:01:06.130 --> 00:01:09.040
people need simple terms for these things.

21
00:01:09.040 --> 00:01:12.960
These services all provide some type of computing operation,

22
00:01:12.960 --> 00:01:15.950
whether it be literal computing, messaging,

23
00:01:15.950 --> 00:01:19.240
storage, routing, or something else.

24
00:01:19.240 --> 00:01:24.190
Although AWS is typically used for web applications, that is not a requirement.

25
00:01:24.190 --> 00:01:27.790
You can run any type of application with AWS.

26
00:01:27.790 --> 00:01:29.300
Many universities,

27
00:01:29.300 --> 00:01:33.650
government agencies, and corporations use the flexibility of AWS to

28
00:01:33.650 --> 00:01:37.980
process large amounts of data or run a lot of computations that would be

29
00:01:37.980 --> 00:01:41.040
difficult and expensive to set up on‑premises.

30
00:01:41.040 --> 00:01:45.580
Amazon Web Services is simply one of the many providers of cloud services.

31
00:01:45.580 --> 00:01:48.610
They have distinguished themselves as one of the most reliable and

32
00:01:48.610 --> 00:01:51.940
also as having the largest geographical footprint.

33
00:01:51.940 --> 00:01:56.660
Large tech enterprises have their entire infrastructure running on AWS,

34
00:01:56.660 --> 00:01:59.940
which is a huge vote of confidence for the service.

35
00:01:59.940 --> 00:02:02.200
Essentially, if AWS went down,

36
00:02:02.200 --> 00:02:06.580
there would be no Netflix. Amazon established themselves in this market

37
00:02:06.580 --> 00:02:10.040
by having a fierce focus on creating services that solve their

38
00:02:10.040 --> 00:02:14.140
customers' needs offered at an affordable price.

39
00:02:14.140 --> 00:02:18.840
So why would someone want to put their entire business on AWS?

40
00:02:18.840 --> 00:02:21.890
It seems like a huge gamble, right? Well,

41
00:02:21.890 --> 00:02:25.560
the two biggest reasons are cost and scalability.

42
00:02:25.560 --> 00:02:29.830
Let's look at cost first. We'll return to our friend Lisa's web company.

43
00:02:29.830 --> 00:02:33.990
Without AWS or a similar cloud provider, she would be looking at first

44
00:02:33.990 --> 00:02:36.940
buying a server for serving the web application,

45
00:02:36.940 --> 00:02:41.310
perhaps a separate server for the database, cables to hook it up to a

46
00:02:41.310 --> 00:02:45.900
business‑speed broadband internet connection, and she may need a dedicated

47
00:02:45.900 --> 00:02:50.240
room to house all of this hardware and keep it safe from physical dangers.

48
00:02:50.240 --> 00:02:55.830
All of this before she has even one customer paying for her service. Seems

49
00:02:55.830 --> 00:03:00.560
a little daunting, right? Compare this wall of upfront capital to the cost

50
00:03:00.560 --> 00:03:02.740
of hosting on AWS.

51
00:03:02.740 --> 00:03:09.540
Here's what you need up front to run your application on AWS.

52
00:03:09.540 --> 00:03:11.610
No, the video didn't stop.

53
00:03:11.610 --> 00:03:16.230
The upfront cost of AWS is nothing. With AWS,

54
00:03:16.230 --> 00:03:20.110
you only pay for what you use and usually on a monthly basis.

55
00:03:20.110 --> 00:03:24.680
So once those customers start signing up and paying for your service,

56
00:03:24.680 --> 00:03:28.800
you'll already have the money to pay for the web application they're using.

57
00:03:28.800 --> 00:03:32.240
Not to mention that instead of dropping thousands or

58
00:03:32.240 --> 00:03:35.270
hundreds of thousands of monies to purchase hardware that

59
00:03:35.270 --> 00:03:37.640
may fail and have to be replaced,

60
00:03:37.640 --> 00:03:39.960
you're paying pennies on the hour for some of these

61
00:03:39.960 --> 00:03:43.040
services that AWS is providing.

62
00:03:43.040 --> 00:03:46.950
AWS even provides handy calculators to help you estimate

63
00:03:46.950 --> 00:03:50.140
the price for your intended usage.

64
00:03:50.140 --> 00:03:54.940
The other big reason to choose the cloud and AWS is scalability.

65
00:03:54.940 --> 00:03:57.500
I almost feel bad for dragging Lisa through this again,

66
00:03:57.500 --> 00:03:59.940
but let's use her company as an example.

67
00:03:59.940 --> 00:04:03.370
Imagine that she pays for all the infrastructure up front, and her

68
00:04:03.370 --> 00:04:06.940
application ends up being wildly successful.

69
00:04:06.940 --> 00:04:08.930
Customers are flooding onto the platform,

70
00:04:08.930 --> 00:04:12.710
overwhelming her initial server setup. Someone posted on

71
00:04:12.710 --> 00:04:15.510
Reddit, and now her web application dies from too many

72
00:04:15.510 --> 00:04:18.000
requests. She needs to scale up,

73
00:04:18.000 --> 00:04:21.430
but her only option is to order another server, which can

74
00:04:21.430 --> 00:04:25.040
take days and maybe even weeks to arrive.

75
00:04:25.040 --> 00:04:25.920
In the meantime,

76
00:04:25.920 --> 00:04:31.340
the user experience is suffering, and growth may drop off or disappear entirely,

77
00:04:31.340 --> 00:04:35.080
killing her business before it even had a chance. By

78
00:04:35.080 --> 00:04:38.840
deploying her application to AWS, this scalability concern

79
00:04:38.840 --> 00:04:41.350
is resolved in literal seconds.

80
00:04:41.350 --> 00:04:47.170
With AWS adding more servers, running her application takes only a few clicks.

81
00:04:47.170 --> 00:04:50.730
The servers start up immediately, and her application can be up

82
00:04:50.730 --> 00:04:54.650
and running in around a minute. Pricing is the same as before,

83
00:04:54.650 --> 00:04:56.430
paying only for what she uses.

84
00:04:56.430 --> 00:04:57.350
So again,

85
00:04:57.350 --> 00:05:01.940
there's no upfront cost for spinning up a new instance of the web application.

86
00:05:01.940 --> 00:05:06.550
With both of these as the two defining features of the cloud and AWS, I

87
00:05:06.550 --> 00:05:14.000
hope you can see why the adoption of these types of services has spread so quickly through the technology industry.

