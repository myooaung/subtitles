1
00:00:00,940 --> 00:00:04,350
The AWS command line interface, or CLI,

2
00:00:04,350 --> 00:00:09,550
is a unified tool to interact with different AWS resources from a command line.

3
00:00:09,550 --> 00:00:12,200
Although it's certainly possible that you might use the

4
00:00:12,200 --> 00:00:14,430
CLI manually in your own terminal,

5
00:00:14,430 --> 00:00:17,820
most developers find the CLI useful when writing shell

6
00:00:17,820 --> 00:00:21,410
scripts. Being able to execute commands in AWS with a

7
00:00:21,410 --> 00:00:23,850
simple script isn't just a time saver,

8
00:00:23,850 --> 00:00:28,040
but also increases the ways you can use AWS. For instance,

9
00:00:28,040 --> 00:00:31,470
automated build systems can run shell scripts that deploy

10
00:00:31,470 --> 00:00:34,050
built application artifacts to the cloud,

11
00:00:34,050 --> 00:00:38,540
creating a simple, but powerful continuous deployment pipeline.

12
00:00:38,540 --> 00:00:41,250
Because the AWS CLI is a unified tool,

13
00:00:41,250 --> 00:00:45,350
you can interact with almost any service. When executing a command,

14
00:00:45,350 --> 00:00:48,590
you type aws to run the CLI itself.

15
00:00:48,590 --> 00:00:51,390
The next argument is the service that you want to do something

16
00:00:51,390 --> 00:00:55,560
with and, beyond that, is the specific command and any flags

17
00:00:55,560 --> 00:00:57,640
or parameters for the command.

18
00:00:57,640 --> 00:01:02,220
Here is the documentation for what services you can interact with using the

19
00:01:02,220 --> 00:01:08,800
CLI, and you can see that almost any service is accessible. Installation of

20
00:01:08,800 --> 00:01:12,440
the AWS CLI is simple and straightforward.

21
00:01:12,440 --> 00:01:13,430
Once installed,

22
00:01:13,430 --> 00:01:17,920
you'll need to do an initial configuration which involves adding an access key,

23
00:01:17,920 --> 00:01:20,640
secret key, and default region.

24
00:01:20,640 --> 00:01:24,610
You can add or remove access keys from the security credentials menu in

25
00:01:24,610 --> 00:01:27,740
the console. And once those have been configured,

26
00:01:27,740 --> 00:01:32,240
you can start using the CLI to interact with the services in your account.

27
00:01:32,240 --> 00:01:33,470
Now let's try it out.

28
00:01:33,470 --> 00:01:36,450
I wanted to replicate the example from the last clip where

29
00:01:36,450 --> 00:01:39,340
we sent an item to a DynamoDB table.

30
00:01:39,340 --> 00:01:42,600
So we'll start by entering the aws command.

31
00:01:42,600 --> 00:01:46,640
Next will be the service we want to use, which is DynamoDB.

32
00:01:46,640 --> 00:01:48,950
Since we want to put an item into our table,

33
00:01:48,950 --> 00:01:54,060
we'll use the put‑item command, then the ‑‑table‑name flag,

34
00:01:54,060 --> 00:01:55,940
followed by the table name.

35
00:01:55,940 --> 00:02:01,740
The last parameter we'll add is the flag for item and our item in JSON format.

36
00:02:01,740 --> 00:02:05,140
If we run this command, it should execute smoothly.

37
00:02:05,140 --> 00:02:09,000
We can check our DynamoDB table and see that the item was successfully

38
00:02:09,000 --> 00:02:13,810
added, just like with our SDK before. You can probably imagine one of the

39
00:02:13,810 --> 00:02:18,310
differences with the CLI and the SDK is that it can be easier to do things

40
00:02:18,310 --> 00:02:23,240
dynamically in code. A way to add a dynamic nature to your command line is

41
00:02:23,240 --> 00:02:27,800
with shell scripts, and that's really where the AWS CLI is probably used

42
00:02:27,800 --> 00:02:29,440
more than manually.

43
00:02:29,440 --> 00:02:30,570
I built a short,

44
00:02:30,570 --> 00:02:33,090
simple shell script that put some more items in our

45
00:02:33,090 --> 00:02:36,850
DynamoDB table. You can see each command is simply running

46
00:02:36,850 --> 00:02:39,570
the AWS CLI. Nothing is different.

47
00:02:39,570 --> 00:02:43,600
I can run that shell script from my terminal like so, and it will execute

48
00:02:43,600 --> 00:02:49,040
both AWS CLI commands and put the items in my Dynamo table as we can see.

49
00:02:49,040 --> 00:02:53,410
The CLI is great for doing things quickly with little overhead or for

50
00:02:53,410 --> 00:02:55,840
automation tasks and shell scripts.

51
00:02:55,840 --> 00:03:04,000
Since the level of interaction roughly matches the SDKs and web console, there's not much you can't do with the AWS CLI.

