WEBVTT
1
00:00:00.940 --> 00:00:04.240
CloudWatch is broadly defined as a monitoring service for

2
00:00:04.240 --> 00:00:07.150
many different other services in AWS.

3
00:00:07.150 --> 00:00:09.620
If you've already tried out some of the other services

4
00:00:09.620 --> 00:00:11.670
previously mentioned in this course,

5
00:00:11.670 --> 00:00:14.740
you may have even used CloudWatch without knowing it.

6
00:00:14.740 --> 00:00:18.120
Amazon has integrated CloudWatch into most of the other

7
00:00:18.120 --> 00:00:21.440
AWS services for monitoring and alarms.

8
00:00:21.440 --> 00:00:25.450
In fact, those are the main two key functionalities of CloudWatch,

9
00:00:25.450 --> 00:00:28.690
monitoring resources and alerting you when some

10
00:00:28.690 --> 00:00:31.540
predefined criteria has occurred.

11
00:00:31.540 --> 00:00:35.550
One of my favorite features of CloudWatch is the ability to set up alarms to

12
00:00:35.550 --> 00:00:39.640
monitor a multitude of metrics for different Amazon services.

13
00:00:39.640 --> 00:00:44.000
For each alarm, you choose from a preâ€‘existing set of metrics for each service.

14
00:00:44.000 --> 00:00:45.600
Once you've chosen the metric,

15
00:00:45.600 --> 00:00:49.490
you will then set a threshold for the alarm and actions to take.

16
00:00:49.490 --> 00:00:55.600
Actions can range from notifying you via email or SMS to triggering some

17
00:00:55.600 --> 00:00:59.240
auto scaling action within an EC2 auto scaling group.

18
00:00:59.240 --> 00:01:03.440
CloudWatch can also consume, aggregate, and monitor logs.

19
00:01:03.440 --> 00:01:08.290
This is simply accomplished by installing and configuring an awslogs agent

20
00:01:08.290 --> 00:01:13.370
on your EC2 instances and telling it which logs to send to CloudWatch.

21
00:01:13.370 --> 00:01:16.350
Once the agent is installed in sending logs,

22
00:01:16.350 --> 00:01:19.820
CloudWatch can be configured to filter the logs and send

23
00:01:19.820 --> 00:01:22.640
alerts based on criteria you define.

24
00:01:22.640 --> 00:01:26.590
An example for that is tracking how many times a certain exception

25
00:01:26.590 --> 00:01:30.250
happens in your logs and then sending a notification once it's

26
00:01:30.250 --> 00:01:35.400
occurred a set number of times. Since CloudWatch comprises of quite

27
00:01:35.400 --> 00:01:39.580
a few different functionalities, pricing reflects that same approach.

28
00:01:39.580 --> 00:01:42.540
Each CloudWatch function has a different price.

29
00:01:42.540 --> 00:01:44.910
Each is different by region as usual,

30
00:01:44.910 --> 00:01:49.030
but here's a rundown of pricing in the Oregon region. CloudWatch

31
00:01:49.030 --> 00:01:54.590
alarms cost 10 cents per alarm per month. Ingesting logs into

32
00:01:54.590 --> 00:01:59.610
CloudWatch costs 50 cents per gigabyte and 3 cents per gigabyte

33
00:01:59.610 --> 00:02:02.140
for any archived logs.

34
00:02:02.140 --> 00:02:06.300
CloudWatch also allows you to create custom dashboards with the available

35
00:02:06.300 --> 00:02:11.740
metrics, and those will cost you $3 per dashboard per month.

36
00:02:11.740 --> 00:02:13.620
And again, there's a free tier,

37
00:02:13.620 --> 00:02:19.000
giving you the opportunity to try most of these features before you have to drop any cash.

