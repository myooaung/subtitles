WEBVTT
1
00:00:01.451 --> 00:00:04.159
The foundation for any good well-built application begins

2
00:00:04.159 --> 00:00:06.562
with the data and the database layout.

3
00:00:06.562 --> 00:00:08.259
So to speed things up,

4
00:00:08.259 --> 00:00:12.536
I'm providing a schema and some sample data that you can install so you have

5
00:00:12.536 --> 00:00:15.848
something local to work with as you build this application.

6
00:00:15.848 --> 00:00:19.093
Here is a view of the ER diagram of the database.

7
00:00:19.093 --> 00:00:21.071
There are a lot of tables I'm providing here,

8
00:00:21.071 --> 00:00:23.913
but we're only going to be building out a certain subset.

9
00:00:23.913 --> 00:00:29.165
We'll be focusing on speakers and sessions and their relationships.

10
00:00:29.165 --> 00:00:31.626
Even though this subset might not look like much,

11
00:00:31.626 --> 00:00:35.052
it's enough to cover concepts like many-to-many relationships,

12
00:00:35.052 --> 00:00:37.827
handling binary data for images, foreign keys,

13
00:00:37.827 --> 00:00:40.352
and all of that fun stuff that you end up dealing

14
00:00:40.352 --> 00:00:44.284
with in a real-world application.

15
00:00:44.284 --> 00:00:46.267
To help you get your database set up locally,

16
00:00:46.267 --> 00:00:49.915
simply head over to your browser and go to the following URL,

17
00:00:49.915 --> 00:00:58.607
github.com /dlbunker/ps-first-spring-boot-app.

18
00:00:58.607 --> 00:01:04.770
And this repository will contain database help to get you up and running.

19
00:01:04.770 --> 00:01:07.693
So simply jump into the database/postgres folder,

20
00:01:07.693 --> 00:01:10.287
and you can see that there is two basic files here,

21
00:01:10.287 --> 00:01:11.870
create_tables and insert_data.

22
00:01:11.870 --> 00:01:14.736
But before you can do that, you actually need a database.

23
00:01:14.736 --> 00:01:16.349
You have a couple of options.

24
00:01:16.349 --> 00:01:19.782
If you have a local postgres database instance already set up,

25
00:01:19.782 --> 00:01:23.972
you can simply log in with PSQL and perform the create database command,

26
00:01:23.972 --> 00:01:25.634
switch to that database,

27
00:01:25.634 --> 00:01:30.817
and then run the create_tables file followed by the insert_data file.

28
00:01:30.817 --> 00:01:33.444
If you don't have a local postgres instance available,

29
00:01:33.444 --> 00:01:38.928
the next easiest way is to run postgres in a Docker container.

30
00:01:38.928 --> 00:01:41.502
I've included instructions for this,

31
00:01:41.502 --> 00:01:45.760
and they're available in the readme file on the GitHub repo in this folder.

32
00:01:45.760 --> 00:01:48.777
At this point, go ahead and get your database tables installed,

33
00:01:48.777 --> 00:01:55.984
and add the data to it, and then come back to the video when you're ready.

34
00:01:55.984 --> 00:01:58.510
I'm using a postgres database client called Postico,

35
00:01:58.510 --> 00:02:02.542
but any database client that you are familiar with or can

36
00:02:02.542 --> 00:02:04.890
work with will be just fine to use.

37
00:02:04.890 --> 00:02:06.597
Just make sure that before moving on,

38
00:02:06.597 --> 00:02:10.027
you have your database set up and you can connect to it.

39
00:02:10.027 --> 00:02:12.984
In this case, you can see all of my tables are listed here.

40
00:02:12.984 --> 00:02:16.670
And if I go look at sessions, I can go into one of these,

41
00:02:16.670 --> 00:02:20.596
and you'll see that I have some session data inside of the session table.

42
00:02:20.596 --> 00:02:24.615
One thing that you'll want to note here is that the URL

43
00:02:24.615 --> 00:02:27.160
that you use to connect to your database,

44
00:02:27.160 --> 00:02:35.000
you're going to need that information available because coming up, we will actually use that to connect Spring to the database.

