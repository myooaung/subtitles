WEBVTT
1
00:00:01.280 --> 00:00:11.630
Our project is Java COVID 19 Cases Tracker System, so we are going to develop an interface or web application

2
00:00:12.110 --> 00:00:16.400
for tracking the cases all over the world of COVID 19.

3
00:00:16.700 --> 00:00:24.890
So during this pandemic scenario, we have seen there are using data analysis, part in COVID tracking

4
00:00:24.890 --> 00:00:25.310
system.

5
00:00:25.850 --> 00:00:33.830
So we are going to create some data visualization or we can send data set part with some spring framework

6
00:00:34.610 --> 00:00:39.440
and we are going to find some formal and visible solution for this.

7
00:00:40.070 --> 00:00:43.700
So COVID 19 crisis ecosystem, we are going to be using Java.

8
00:00:44.540 --> 00:00:49.160
So this Java project is based on code Java, Java Spring Framework and so on.

9
00:00:50.120 --> 00:00:55.610
So I'm not going to because of consumption, I'm using some solid concepts here.

10
00:00:55.970 --> 00:00:59.330
So our food system is based on Java framework.

11
00:00:59.750 --> 00:01:03.290
I'm going to teach the Java Spring framework from the scratch.

12
00:01:03.650 --> 00:01:05.930
I'm going to explain Java course in Texas.

13
00:01:06.550 --> 00:01:16.370
And so our project is Java COVID 19 Prep. And we are going to build some data presentation part in our

14
00:01:16.370 --> 00:01:17.800
friending using Java.

15
00:01:20.410 --> 00:01:26.380
I'm using here data set by default data set, but I'm not creating my own dataset here.

16
00:01:26.650 --> 00:01:29.950
I'm using data as a default on available on the internet.

17
00:01:30.190 --> 00:01:33.130
You can use such similar datasets also.

18
00:01:33.730 --> 00:01:36.430
So this is one of the useful application.

19
00:01:36.430 --> 00:01:42.190
Or we can one of the useful data representation application in current pandemic, we can find all the

20
00:01:42.190 --> 00:01:44.680
cases we can find the.

21
00:01:45.650 --> 00:01:50.540
Or or we can see ascending limbs descending lift off each annually.

22
00:01:51.140 --> 00:01:54.260
So this is all about how we are going to develop our project.

23
00:01:55.210 --> 00:01:58.600
So let's see what is our project first.

24
00:01:59.140 --> 00:02:04.960
So our project aim is to develop web applications from the ecosystem of COVID 19 cases.

25
00:02:05.470 --> 00:02:12.610
So we are going to develop one web application for this purpose and we are going to users think two

26
00:02:12.620 --> 00:02:17.470
steps of development are explicitly posted projects set up how we are going to set about project.

27
00:02:17.980 --> 00:02:22.690
Secondly, understanding different tools we are going to use here, what is the dependency then etc?

28
00:02:22.840 --> 00:02:25.480
What are the simple files and all the things you're?

29
00:02:26.420 --> 00:02:27.710
Some basic concepts.

30
00:02:28.800 --> 00:02:34.050
JavaScript framework, Java solar concepts, I'm not going to use force of live Python.

31
00:02:34.290 --> 00:02:38.890
I'm just considering so as some in Texas Java web interfaces.

32
00:02:38.910 --> 00:02:45.510
How the web interfaces are made in Java files, etc. So this is all about how the state software development

33
00:02:45.810 --> 00:02:48.270
server project aims to develop the reputation.

34
00:02:49.260 --> 00:02:52.290
Application requirements, Java basic knowledge.

35
00:02:52.830 --> 00:02:56.540
If you should have some Java basic knowledge regarding the syntax of the eugenics.

36
00:02:57.060 --> 00:03:02.550
I'm not going to explain from the scratch of Java, but I'm going to tell you for some simple cases.

37
00:03:03.270 --> 00:03:04.650
Java spin framework.

38
00:03:04.650 --> 00:03:09.830
I'm not going with syntax this part on the part of Java string, but you should not the Java spinning,

39
00:03:09.830 --> 00:03:15.750
but otherwise I'm going to explain also your then Java web development how the web application developed

40
00:03:15.750 --> 00:03:18.590
in Java in regard to the solid part.

41
00:03:18.600 --> 00:03:24.370
What is different in back end, each and every team then tools required here is JDK used.

42
00:03:24.450 --> 00:03:29.550
Our development kit get Prince ID, which is basically intelligent idea.

43
00:03:29.730 --> 00:03:35.580
It is very useful platform to create such Java applications.

44
00:03:36.030 --> 00:03:43.140
I'm going to use your ultimate edition, but you can choose Community Edition also then spring initialize

45
00:03:43.140 --> 00:03:46.290
it, which is basically a web interface to initialize your project.

46
00:03:47.660 --> 00:03:50.000
So this is it about how we can go with this.

47
00:03:51.470 --> 00:03:54.970
So I'm going to satisfy the Java basic concepts also here.

48
00:03:55.700 --> 00:04:00.320
But before that, you should remember from Java V6 in Texas.

49
00:04:00.560 --> 00:04:03.190
I'm just telling you the Java basic concepts.

50
00:04:03.200 --> 00:04:10.220
Yet so Java is made up of three parts other than other languages like Python or seed.

51
00:04:10.250 --> 00:04:15.200
There are no parts in their languages that are just compilers or interpreters, which are compiling

52
00:04:15.590 --> 00:04:20.630
a language, language, machine level language, and you're printing the output or you are developing

53
00:04:20.630 --> 00:04:21.260
your project.

54
00:04:21.590 --> 00:04:24.080
But Java is made up of three parts.

55
00:04:24.440 --> 00:04:26.530
First is JVM, which is Java virtual machine.

56
00:04:27.080 --> 00:04:27.340
Why?

57
00:04:27.340 --> 00:04:32.120
I am telling you this because JVM is over runtime server, we can see all these filters.

58
00:04:32.300 --> 00:04:39.260
So we are going to fetch data from one thing on every level on the internet, which is slowly updated

59
00:04:40.010 --> 00:04:41.600
within one day or two days.

60
00:04:42.020 --> 00:04:45.270
So these are our datasets and what we are going to do.

61
00:04:45.290 --> 00:04:49.670
We are going to loaded in the solar part and we are going to present using Java Free.

62
00:04:50.660 --> 00:04:54.370
So Java Virtual Machine is not physically existing machine.

63
00:04:54.380 --> 00:04:55.520
It is virtual machine.

64
00:04:56.210 --> 00:04:59.730
It provides runtime enrolment in which Java bytecode executed.

65
00:05:00.200 --> 00:05:02.620
It also runs programs in other languages.

66
00:05:02.630 --> 00:05:08.930
But compiling Java by so basic thing is each node scored, which is very important in so server part

67
00:05:08.930 --> 00:05:09.320
server.

68
00:05:09.320 --> 00:05:15.980
In part, it verifies the words which is basically the compiler or something, which detects executes

69
00:05:15.980 --> 00:05:18.410
code and provides the rendering environment.

70
00:05:18.740 --> 00:05:24.050
Why I'm telling you the JVM thing is if you are getting runtime error, no need to check your application

71
00:05:24.050 --> 00:05:27.340
code or et cetera, you have to check your basic go to jail.

72
00:05:28.220 --> 00:05:30.500
So these are the things you are going to use your.

73
00:05:32.180 --> 00:05:38.940
So other than this jihadi jihadist Java document, which you set of rules, libraries, Java executor

74
00:05:39.410 --> 00:05:45.200
and Java application programs, it is implementation of Java and we can say for the imitation.

75
00:05:45.200 --> 00:05:48.050
But but we need back in the jihadi form.

76
00:05:49.310 --> 00:05:50.810
Again, this is physically exist.

77
00:05:50.900 --> 00:05:54.800
So these are some libraries Java files to modify using Java.

78
00:05:55.770 --> 00:05:58.050
JDK Java Development Kit.

79
00:05:59.100 --> 00:06:02.490
Contains Jihadi pleasure in food allergy, mimics duty.

80
00:06:02.820 --> 00:06:07.980
Also, it contains Java compiler, which is basically compiling by bus and which is basically you are

81
00:06:07.980 --> 00:06:10.590
downloading the JDK only from the website.

82
00:06:11.250 --> 00:06:15.540
I'm using it in Java JDK 16 Trojan, but then you are downloading.

83
00:06:15.540 --> 00:06:19.690
That part is basically to the C word in standard edition versions.

84
00:06:19.710 --> 00:06:21.930
Enterprise Edition Wooden's available on Java.

85
00:06:22.420 --> 00:06:23.940
So these are the basic things.

86
00:06:24.930 --> 00:06:32.040
So legacy pictorial representation of this JVM is this basically the oval shaped JVM, which is basically

87
00:06:32.040 --> 00:06:34.790
a virtual machine which loads the bytecode and all the things about you?

88
00:06:34.800 --> 00:06:39.920
Like all the RAM, all the things are virtual, so it's just a little for our purposes.

89
00:06:40.710 --> 00:06:46.170
By creating this application and executing all the codes set of libraries justified in some other files

90
00:06:46.170 --> 00:06:50.780
like document, ventilation, etc, etc. And then you can mix Jerry.

91
00:06:51.420 --> 00:06:54.030
Jerry convinced JVM and all these things.

92
00:06:54.450 --> 00:07:01.170
JDK contains some Java files other than this Guardian are letting some Java compiler solve for there.

93
00:07:01.170 --> 00:07:07.620
There are some dependencies in duty, Kelsall, so all the things makes Git JVM plays jihadi and Java

94
00:07:07.620 --> 00:07:13.200
compiler, so the downloaded file is basically just again, you're installing that.

95
00:07:14.130 --> 00:07:18.780
So if you are not installed on JDK, try to download it adjudicate, would you?

96
00:07:18.780 --> 00:07:27.810

97
0:44 Also, give the part name eugenics cetra, or you can check your proposal of your team and you

98
00:07:27.810 --> 00:07:32.430
can check the Java word, you know, and so using Java Virgin Command in your system.

99
00:07:32.910 --> 00:07:36.240
So I checked and I'm using superintelligent.

100
00:07:37.280 --> 00:07:37.910
So this is it.

101
00:07:38.060 --> 00:07:39.950
We are going to do so.

102
00:07:40.280 --> 00:07:42.830
I'm going to tell you some Java methods and classes later.

103
00:07:43.250 --> 00:07:46.640
But let us see how we can initialize our project first.

104
00:07:47.270 --> 00:07:55.160
So let me go to the Chrome, your web browser, any web browser you have to go then going to this standard

105
00:07:55.170 --> 00:07:55.660
spring dot.

106
00:07:56.150 --> 00:08:02.270
So this is basically the spring initialize that we can see it's being initializing project so you can

107
00:08:02.270 --> 00:08:04.280
check their documentation, eugenics, cetera.

108
00:08:04.610 --> 00:08:08.450
So currently they're using, oh, 1.5 to two point.

109
00:08:08.450 --> 00:08:11.900
Also, these basically are on the window currently.

110
00:08:13.060 --> 00:08:19.270
Oh, and so you can check your Springwood War against let basically religion, and these are the snapshots.

111
00:08:19.540 --> 00:08:25.350
So these are not the stable evidence who can take this is the stable version 2.5 then million project

112
00:08:25.360 --> 00:08:26.000
we are going to use.

113
00:08:26.800 --> 00:08:29.620
So in there are people for pretty much already deployed.

114
00:08:29.840 --> 00:08:37.180
So other then I'm telling the web application I'm going with call job on Google are basically based

115
00:08:37.180 --> 00:08:38.740
on three four applications.

116
00:08:39.010 --> 00:08:41.320
Popular are three and my million little.

117
00:08:42.290 --> 00:08:46.370
So and he's basically convinced some Web apps of legitimacy.

118
00:08:47.240 --> 00:08:50.870
Also, data and based framework on some.

119
00:08:51.990 --> 00:08:57.900
But Miami is a more advanced part of and which contain spring.

120
00:08:58.080 --> 00:09:00.660
I would need all all the things.

121
00:09:01.170 --> 00:09:06.850
Oh, in that part, I will tell you what is hibernating Judy, basically Judy, which is basically connecting

122
00:09:06.870 --> 00:09:07.590
bark hibernate.

123
00:09:07.590 --> 00:09:13.360
You can initialize the command database directly in the Java files.

124
00:09:13.380 --> 00:09:15.620
No need to extend that part.

125
00:09:16.380 --> 00:09:17.540
So these are the main things.

126
00:09:18.630 --> 00:09:23.790
And that is basically for the mobile app development, cetera for all languages of the Java use language

127
00:09:23.790 --> 00:09:24.150
Java.

128
00:09:24.450 --> 00:09:25.620
No need to choose.

129
00:09:25.620 --> 00:09:28.590
This could not go with Java with this.

130
00:09:29.100 --> 00:09:31.070
Now we are going to mention these forbidden.

131
00:09:31.620 --> 00:09:32.100
I'm going.

132
00:09:33.310 --> 00:09:33.930
Mentioned as.

133
00:09:35.060 --> 00:09:35.510
Well, we.

134
00:09:42.030 --> 00:09:43.500
So artifact name is again.

135
00:09:45.670 --> 00:09:46.180
Well, we.

136
00:09:49.180 --> 00:09:50.960
But I like this name is this.

137
00:09:50.980 --> 00:09:51.460
Then?

138
00:09:54.240 --> 00:09:55.650
Namely, it's COVID 19.

139
00:09:57.920 --> 00:09:58.490
Cases.

140
00:09:59.780 --> 00:10:00.320
And I could.

141
00:10:01.830 --> 00:10:02.760
Package name is this.

142
00:10:03.270 --> 00:10:06.840
Remember, I'm using Java Javi's 16, good, click your 16th word in Java.

143
00:10:08.100 --> 00:10:11.040
So we need to declare some and some dependencies.

144
00:10:11.040 --> 00:10:15.960
Also liquor and dependencies part so hope you can see this part.

145
00:10:16.560 --> 00:10:17.190
All the things.

146
00:10:18.250 --> 00:10:21.580
Let me add the part, which is spring web.

147
00:10:23.690 --> 00:10:27.530
We need to deploy applications using spin events.

148
00:10:27.860 --> 00:10:32.480
So beautiful thing of spring, you never required any Soviet silver particle.

149
00:10:32.720 --> 00:10:37.430
Apache Tomcat is the default embedded container which deploys on the internet, and you will get the

150
00:10:37.430 --> 00:10:37.880
output.

151
00:10:38.270 --> 00:10:39.320
So these are they're deployed.

152
00:10:39.620 --> 00:10:41.200
So we're in the spring web.

153
00:10:42.400 --> 00:10:44.140
Then let me add him live.

154
00:10:45.640 --> 00:10:51.820
Which is basically Java template engine for the solo line or standalone arrangement, which you basically

155
00:10:51.850 --> 00:10:58.290
can live in June, which allows the estimate to correctly deploys on the browser and as a static brutal

156
00:10:58.300 --> 00:10:58.630
base.

157
00:10:58.900 --> 00:11:07.810
And if it's so dynamic, going to bring them and bring all we can see, they also spring would doubtless

158
00:11:08.020 --> 00:11:09.240
like reload, restart.

159
00:11:09.250 --> 00:11:11.140
I need to use that part.

160
00:11:11.620 --> 00:11:15.790
So these things I need to request so spring web tim and spring wood.

161
00:11:15.790 --> 00:11:20.950
Other than this, you can add wedding also for the Chad Morton eugenic system so you can check there.

162
00:11:21.280 --> 00:11:27.910
I'm not using here any restful API because of steam file will be loaded to the spring only, so nobody's

163
00:11:27.910 --> 00:11:29.380
Fool API is required here.

164
00:11:31.080 --> 00:11:32.880
So the job I'm having and this.

165
00:11:33.910 --> 00:11:39.850
Give as it is this and generate once you generate this, you can see the file is downloaded, which

166
00:11:39.850 --> 00:11:40.810
is basically defeat.

167
00:11:40.960 --> 00:11:43.360
And later we are going to open it and over it.

168
00:11:43.960 --> 00:11:49.840
But before that, or proceeding to our project here to see the Java basic concept concepts for us.

169
00:11:50.890 --> 00:11:57.280
So first is Java methods and classes, so everything in the Java is made up of classes and objects.

170
00:11:58.530 --> 00:12:00.600
You seen lower programming Java.

171
00:12:00.930 --> 00:12:02.700
Again, it's glass and metal.

172
00:12:03.510 --> 00:12:10.260
So while writing any program, printing any output, or if you are making any arithmetic program, you

173
00:12:10.260 --> 00:12:12.630
need to require classes and methods.

174
00:12:13.110 --> 00:12:18.540
So everything in Java is associated with classes and methods without classes and methods.

175
00:12:18.540 --> 00:12:22.500
You can write any Java program, which is basically people in every job.

176
00:12:24.130 --> 00:12:26.980
For example, in real life, cars are objects.

177
00:12:28.810 --> 00:12:33.090
About Usera having some attributes like weight, color.

178
00:12:34.110 --> 00:12:36.990
Method side of drywall break, stop, etc..

179
00:12:37.290 --> 00:12:41.480
Open the door are also can be method, so do other things like Angela.

180
00:12:41.940 --> 00:12:44.640
So method side adjust the logic behind that bottom.

181
00:12:45.150 --> 00:12:51.750
So classes is like object constructor on blue print for objects of God is the object.

182
00:12:52.020 --> 00:12:54.600
So but we can create as one class as a beacon.

183
00:12:55.290 --> 00:12:58.240
Similarly, we can put in that we call motorbike.

184
00:12:58.260 --> 00:13:02.790
Also, another object carries an object tracking, then another object to classes.

185
00:13:02.790 --> 00:13:09.300
The basically the object constructor and object is basically to use that called the class or use that

186
00:13:09.300 --> 00:13:12.330
class or execute particular class.

187
00:13:13.310 --> 00:13:19.640
And object and called the instance of classes, we don't object, we cannot call classes, except the

188
00:13:19.640 --> 00:13:25.940
class, you know, similar class or classes, subclasses part or even classes in literature that part.

189
00:13:26.540 --> 00:13:29.840
So the inheritance concept you don't original concept.

190
00:13:30.050 --> 00:13:32.930
We cannot use all classes without any objects.

191
00:13:33.410 --> 00:13:35.270
Meters are declared within the classes.

192
00:13:35.780 --> 00:13:38.300
It contains the whole code of particular functions.

193
00:13:38.690 --> 00:13:41.780
Methodist contains certain values, accessibility patterns also.

194
00:13:42.080 --> 00:13:46.810
So basically it turns out to be the logical thinking of logical part.

195
00:13:46.820 --> 00:13:51.590
We can see a logical block of classes contains all the logic of the whole process.

196
00:13:52.720 --> 00:13:58.060
And object of class is created, we can easily use that common touch with objects with something else

197
00:13:58.060 --> 00:14:03.940
like object art methods, etc. in the Java, and you can definitely use that objects and classes and

198
00:14:03.940 --> 00:14:04.360
methods.

199
00:14:04.990 --> 00:14:11.050
Again, Miniter Rs30 Palminteri in Java version public static void main thing with arguements, which

200
00:14:11.140 --> 00:14:12.430
returns always strings.

201
00:14:13.060 --> 00:14:19.660
It is made metal, which is default method in Java to run any program in Java.

202
00:14:19.960 --> 00:14:23.230
So this is the first thing which loads on JVM.

203
00:14:23.500 --> 00:14:29.560
So while writing the code, we are going to write some logic in Minmetals only, or we are going to

204
00:14:29.560 --> 00:14:32.200
call that logic, you know, mm only to run the problem.

205
00:14:33.230 --> 00:14:38.140
So do it about the Java methods and policies, but what is this thing doing here?

206
00:14:38.600 --> 00:14:40.610
So let's see, what does this bring framework here is?

207
00:14:41.610 --> 00:14:47.850
So if you know, in the pipeline or in any other languages, there are some default frameworks to deploy

208
00:14:47.850 --> 00:14:50.460
on the web as a python as Django and Plus.

209
00:14:51.000 --> 00:14:58.140
Similarly, in Java in 2003, it's being trained we've created, which is basically basic framework

210
00:14:58.140 --> 00:14:58.710
in Java.

211
00:14:59.180 --> 00:15:06.690
But there are several steps of development be taken, and spring framework is now very popular in Java

212
00:15:06.990 --> 00:15:08.400
to deploy any application.

213
00:15:09.000 --> 00:15:12.060
Second thing, it's long term stability.

214
00:15:12.660 --> 00:15:15.060
And third thing is, it's very easy to use.

215
00:15:15.570 --> 00:15:18.480
So there are some advantages of putting the framework on.

216
00:15:18.480 --> 00:15:21.690
So I'm going to deal with this slow spring framework.

217
00:15:21.700 --> 00:15:26.670
Use lightweight framework we can see, and you can start as a framework of frameworks.

218
00:15:26.970 --> 00:15:33.540
So there are different frameworks in Java as to say what types would you be JSF?

219
00:15:33.930 --> 00:15:41.340
So these are some popular free, mostly Java Spring frameworks includes all the frameworks, and they

220
00:15:41.340 --> 00:15:44.650
made some robust framework for that.

221
00:15:44.730 --> 00:15:45.920
So no need to required.

222
00:15:46.260 --> 00:15:48.230
I wouldn't need or foods again and again.

223
00:15:48.300 --> 00:15:49.620
We can use spring forward.

224
00:15:50.640 --> 00:15:59.250
This is my Web MVC framework, which had several modules like the IOC then database, in addition to

225
00:15:59.250 --> 00:16:01.380
the in dependency injection also there.

226
00:16:01.740 --> 00:16:08.630
So these are some default cases framework you can set as a structure where we find a solution of various

227
00:16:08.640 --> 00:16:09.480
technical problems.

228
00:16:09.930 --> 00:16:16.590
So in spring framework, we can use database, then hibernate part, then JS part solid part also.

229
00:16:16.860 --> 00:16:19.920
And so these are there's some default frameworks.

230
00:16:20.310 --> 00:16:25.950
So in three for the windows, I'm going with some steps of development and how we are going to develop

231
00:16:25.950 --> 00:16:26.610
our project.

232
00:16:27.000 --> 00:16:33.300
So first, initialize your project using Spring Initialism, use that constraint and use that.
