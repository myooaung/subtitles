1
00:00:01,830 --> 00:00:09,770
In previous sessions we have already seen be created for Page for participants, I know and admin page

2
00:00:09,780 --> 00:00:10,100
also.

3
00:00:10,590 --> 00:00:12,750
So all the participants sign up for.

4
00:00:13,230 --> 00:00:17,760
We created this page for log in and sign up.

5
00:00:18,510 --> 00:00:25,170
So this is the page for signup page, and we have already seen how we are going to store these to their

6
00:00:25,170 --> 00:00:25,860
database.

7
00:00:26,490 --> 00:00:30,500
So this is for sign up, but what is for login page?

8
00:00:30,720 --> 00:00:34,050
So it should validate each and every person according to that.

9
00:00:34,410 --> 00:00:40,380
So what I'm going to create, I'm going to create one another page listing will page participant login

10
00:00:40,380 --> 00:00:42,780
page for the log in proposal participants.

11
00:00:43,290 --> 00:00:47,070
In this, we are going to pass on your username and password.

12
00:00:47,730 --> 00:00:49,440
So what will happen?

13
00:00:50,130 --> 00:00:58,820
Users or participants will add this inside this page username and password they're given on by signing

14
00:00:58,830 --> 00:00:59,010
up.

15
00:00:59,790 --> 00:01:03,780
So these will use the app to validate password and configuring your.

16
00:01:04,800 --> 00:01:12,000
To validate each and every person's or participants, including this, so this is about the this is

17
00:01:12,000 --> 00:01:12,540
very simple.

18
00:01:12,920 --> 00:01:18,950
I'm using former method we have already seen fundamentally in admin page or admin scenario also.

19
00:01:19,500 --> 00:01:22,890
So as I told you, we already created this.

20
00:01:22,890 --> 00:01:23,990
I'm closing this now.

21
00:01:24,600 --> 00:01:27,780
So what will happen once it's log in is done?

22
00:01:27,900 --> 00:01:29,610
It should proceed to the next page.

23
00:01:30,120 --> 00:01:33,120
So let us see how we can create the EPA Java.

24
00:01:33,180 --> 00:01:39,800
So let's sort this out in building to source package, right click the new and also look while adding

25
00:01:40,050 --> 00:01:40,130
it.

26
00:01:40,170 --> 00:01:43,680
I'm going telling you how to take it to the web.

27
00:01:43,680 --> 00:01:44,640
Not accessible file.

28
00:01:44,790 --> 00:01:45,900
So that's solid.

29
00:01:46,800 --> 00:01:51,060
So this is our vapor page, I can see.

30
00:01:51,540 --> 00:01:54,480
So do you think you're taking all the inputs?

31
00:01:54,870 --> 00:01:57,240
Are you using libraries?

32
00:01:57,240 --> 00:01:57,550
All the.

33
00:01:59,070 --> 00:02:06,240
And this is all about the VPN extent you know about this, but it should throw this lovely description

34
00:02:06,240 --> 00:02:06,780
and everything.

35
00:02:07,290 --> 00:02:11,160
And this is also important for teams inside.

36
00:02:12,270 --> 00:02:13,160
Writing this on it.

37
00:02:13,680 --> 00:02:14,850
So what is it doing?

38
00:02:16,620 --> 00:02:18,010
This fetching the data.

39
00:02:20,950 --> 00:02:27,360
From achievement from this, the pitching narrator from the extremely warm.

40
00:02:27,730 --> 00:02:30,700
This is via username and password.

41
00:02:31,330 --> 00:02:33,670
This is your username and password.

42
00:02:34,360 --> 00:02:38,040
So what if logging deal not validate?

43
00:02:38,170 --> 00:02:44,050
So what I'm going to do, I'm going to create another simple Java program to invoke this.

44
00:02:45,240 --> 00:02:51,720
These things, so we can say job of and I'm going to use this as these are the public things, we can

45
00:02:51,720 --> 00:03:00,390
easily use this without using any object or something because these are in the same package before the

46
00:03:00,660 --> 00:03:03,600
so no need to specify object and then go for them.

47
00:03:04,050 --> 00:03:08,160
So and be and then be basically the username and password.

48
00:03:08,160 --> 00:03:12,180
I'm passing this and this will proceed to participants, even the human.

49
00:03:12,480 --> 00:03:12,850
Simple.

50
00:03:13,110 --> 00:03:18,440
If no, stay on that page using our do not include, I'm going to tell what is in glutamate or also

51
00:03:18,450 --> 00:03:21,760
in for other videos or examples.

52
00:03:22,320 --> 00:03:28,290
And this is olive oil to stay on the same page as for username and password are incorrect.

53
00:03:31,600 --> 00:03:32,950
I will put there and.

54
00:03:34,690 --> 00:03:42,280
And next year about this and closing the connection, oh, Duclos, oh, so this is all about things

55
00:03:42,460 --> 00:03:43,230
like what?

56
00:03:43,270 --> 00:03:43,800
Well, it it.

57
00:03:43,810 --> 00:03:49,750
But now we are going to create a logging deal, or I can say, log in this to validate the password.

58
00:03:50,020 --> 00:03:51,330
So this is very important method.

59
00:03:51,340 --> 00:03:52,330
I'm going to use this.

60
00:03:52,780 --> 00:03:55,680
So just create another method due to time constraint.

61
00:03:55,720 --> 00:03:56,710
I'm Moon base planning this.

62
00:03:56,710 --> 00:04:01,030
I already created this method, so I will tell and I will explain this part.

63
00:04:02,310 --> 00:04:09,690
So inside this source package, you have to right then create devils on it and in the logging deal and.

64
00:04:11,580 --> 00:04:15,170
So let us see how we can create a decent return here.

65
00:04:15,450 --> 00:04:23,550
Our need is just Java School, no need to invoke anything, then it should be Boolean because I'm going

66
00:04:23,550 --> 00:04:29,250
to pass Boolean value as a status or we can say true or false.

67
00:04:29,430 --> 00:04:30,960
If it's true, it will pass.

68
00:04:30,990 --> 00:04:33,990
If it's false, it will show the error.

69
00:04:35,140 --> 00:04:41,020
It is very simple, as we can see, so I created one major public static boolean, I lead it as you

70
00:04:41,410 --> 00:04:45,100
validate Boolean return string username.

71
00:04:45,490 --> 00:04:47,650
Now remember what is this user name?

72
00:04:48,340 --> 00:04:51,910
As I told you, this is very important in this.

73
00:04:52,540 --> 00:04:54,700
It should not be any different things.

74
00:04:54,860 --> 00:04:57,640
Why I am using these specific names here.

75
00:04:58,510 --> 00:05:04,930
So if you know that while creating table in the CMB, I will bring this select.

76
00:05:08,120 --> 00:05:15,380
Toilets are fun pillows and doodles you can see over this, you are username like this password is like

77
00:05:15,380 --> 00:05:21,610
this and like this, so I'm just storing the name, I'm not using the name, I'm going to use username.

78
00:05:22,070 --> 00:05:24,500
So this and these are very important.

79
00:05:25,100 --> 00:05:26,870
Hence I'm using.

80
00:05:28,350 --> 00:05:33,540
Similar things inside this username and password.

81
00:05:34,610 --> 00:05:38,690
Or as often as I can see the arguments, parameters.

82
00:05:40,100 --> 00:05:42,410
So these very same building I'm going to use.

83
00:05:42,680 --> 00:05:49,910
So these are the parameters, and to pass the username and password, you first create Boolean variable,

84
00:05:49,910 --> 00:05:53,060
I'm setting two statistics equal to false positive should be false.

85
00:05:53,340 --> 00:05:54,560
It's not always true.

86
00:05:54,560 --> 00:05:59,390
So I'm watching these polls, then I want to access the database.

87
00:05:59,840 --> 00:06:06,560
So for accessing the database, I'm using this class floated out name Oracle Jollibee's.

88
00:06:06,560 --> 00:06:11,750
You travel to do that very simple thing to invoke the class in this.

89
00:06:12,320 --> 00:06:14,180
So I am asking for the connection.

90
00:06:14,630 --> 00:06:21,800
I a manager in this and I'm passing with your user name, database and password of the database and

91
00:06:21,800 --> 00:06:22,670
that particular user.

92
00:06:22,880 --> 00:06:27,560
You can create another string for this and you can directly put that things on.

93
00:06:27,570 --> 00:06:31,370
So yet, but I'm just passing directly because the program is very short.

94
00:06:32,090 --> 00:06:34,610
Then I'm considered a prepared statement.

95
00:06:34,970 --> 00:06:40,580
So in the previous cases, it's like, Oh, OK, store bid to buy.

96
00:06:40,940 --> 00:06:46,700
So the participants you can see, we get an we are creating the statement and the statements, and we

97
00:06:46,700 --> 00:06:47,750
are executing the query.

98
00:06:48,350 --> 00:06:52,280
But in this, what I'm going to do, I already create a prepared statement.

99
00:06:52,550 --> 00:06:54,710
What is the difference between this and this?

100
00:06:55,040 --> 00:07:02,690
So we can see the instant statement, which is not to execute something to execute that query, or we

101
00:07:02,690 --> 00:07:05,420
can say we can invoke it.

102
00:07:05,420 --> 00:07:13,940
Very advanced things inside this as this store be what it is doing is just executing that query and

103
00:07:13,940 --> 00:07:15,080
it's just forwarding.

104
00:07:15,710 --> 00:07:20,920
But in this, I want to create everything and each and every statement.

105
00:07:20,930 --> 00:07:25,790
So what is doing it to create a prepared statement, piece this statement.

106
00:07:26,600 --> 00:07:30,260
So let's start from below in details where username is this question mark?

107
00:07:30,710 --> 00:07:36,800
So what is the thing between question mark location to specifies the line number for, we can say,

108
00:07:36,800 --> 00:07:38,810
one two three sequential numbers here.

109
00:07:39,170 --> 00:07:42,050
So I don't know what is the sequential number of these.

110
00:07:42,260 --> 00:07:48,920
It can be 2000 also, as their bootloader position of the user names appears again, like inside the

111
00:07:49,250 --> 00:07:49,700
CMD.

112
00:07:49,880 --> 00:07:54,200
As you can see, this is the first name I know this is first and second.

113
00:07:54,740 --> 00:08:01,520
But while putting all the names, all the usual names, the user name can be this third and this can

114
00:08:01,520 --> 00:08:03,410
be become for password.

115
00:08:03,710 --> 00:08:10,010
So for that purpose, I'm putting question marks there because I don't know the specific position of

116
00:08:10,010 --> 00:08:10,250
that.

117
00:08:11,180 --> 00:08:20,060
So username and password in selecting so be is not seeing one slash username and for two or four, the

118
00:08:20,060 --> 00:08:20,540
password.

119
00:08:20,810 --> 00:08:23,930
So it's not like that one for username, two for password.

120
00:08:24,080 --> 00:08:28,700
If the user name comes out third position, the password becomes a default position.

121
00:08:29,180 --> 00:08:31,460
So Java program will take care of that.

122
00:08:32,150 --> 00:08:39,850
Then the reserve set audience is equal to be it not execute query to execute this if you decided to

123
00:08:41,420 --> 00:08:44,010
provide the further or go to for that one.

124
00:08:44,030 --> 00:08:50,540
Then third position, then Jake or no position and then even no collusion or username and password and

125
00:08:50,570 --> 00:08:51,560
closing the connection.

126
00:08:51,710 --> 00:08:57,980
I'm accepting this exception, and I'm still retaining the status as the Boolean.

127
00:08:57,980 --> 00:09:01,190
I have to return something, so I'm ending the status.

128
00:09:02,230 --> 00:09:07,690
This is all about logging the odd login credentials or logging information.

129
00:09:08,380 --> 00:09:15,070
So inside this really validating it should validate our username and password.

130
00:09:15,430 --> 00:09:20,800
So this is all about how we can create participants log in scenario using sign them.

131
00:09:21,460 --> 00:09:22,480
So let us see.

132
00:09:22,870 --> 00:09:25,150
Oh, I will build this project first.

133
00:09:27,670 --> 00:09:33,460
To check whether there are some errors or not, if there are errors, we have to debug sometimes.

134
00:09:34,450 --> 00:09:37,840
So as you can see, our database review process is started.

135
00:09:38,620 --> 00:09:40,400
And lastly, Server is learning.

136
00:09:41,200 --> 00:09:50,440
So this will boot up your every program inside this late and it will through your output to your default

137
00:09:50,440 --> 00:09:52,570
browser and it will show you automatically.

138
00:09:53,510 --> 00:10:00,710
So every time while you are running this first time after opening this, it has to build and clean build

139
00:10:00,710 --> 00:10:06,590
and then it will execute so you can see all the frameworks are distributing and visiting and visited

140
00:10:06,590 --> 00:10:12,700
references, then it will show everything virtual server and everything, so it will take time to load

141
00:10:12,710 --> 00:10:13,190
everything.

142
00:10:21,980 --> 00:10:25,040
So now you can see over these pages and now.

143
00:10:25,880 --> 00:10:27,680
And this is all about.

144
00:10:28,180 --> 00:10:32,930
We created the event, so let us see how we can go to the participants log in page.

145
00:10:33,200 --> 00:10:36,140
So we already know how we can create sign up.

146
00:10:36,290 --> 00:10:38,350
Now we have moved up our differential.

147
00:10:38,900 --> 00:10:40,700
So this is about the participants log in.

148
00:10:41,210 --> 00:10:46,460
So let us go to see him there and we know that our username is J one zero one and password is one two

149
00:10:46,460 --> 00:10:46,880
three four.

150
00:10:47,600 --> 00:10:50,720
Let us see if we put this what this happening.

151
00:10:51,580 --> 00:10:54,130
J one, zero, one zero and one two.

152
00:10:55,300 --> 00:10:56,480
One, two, three four.

153
00:10:59,730 --> 00:11:06,840
So as you can see, I already created the folder page for this, so I will do that for their page,

154
00:11:06,840 --> 00:11:11,640
which is basically participants, page participants, page for event registration and everything.

155
00:11:11,850 --> 00:11:13,530
I already created that page.

156
00:11:13,770 --> 00:11:18,900
But inside it, while you're playing, oh, you can see we created participants.

157
00:11:18,900 --> 00:11:20,120
You were in the Middle East.

158
00:11:20,130 --> 00:11:25,200
Even if you are not created this page, it will throw the 03:46 for error, basically.

159
00:11:25,440 --> 00:11:29,850
But for the time constraint, I already created everything page inside this.

160
00:11:30,210 --> 00:11:33,690
So in saying this, I created participants event page.

161
00:11:33,990 --> 00:11:37,680
So this is all about the participant event and everything.

162
00:11:38,550 --> 00:11:40,380
So what inside this we created?

163
00:11:40,740 --> 00:11:43,170
We want participants to sign up.

164
00:11:43,170 --> 00:11:46,560
Participants log in, validating the participants and log in.

165
00:11:47,070 --> 00:11:48,960
So what will happen?

166
00:11:49,470 --> 00:11:50,190
Exactly.

167
00:11:50,580 --> 00:11:53,520
So in the program, it will fetch that username.

168
00:11:53,520 --> 00:11:54,840
Is this password for this?

169
00:11:54,840 --> 00:11:55,740
Is this?

170
00:11:56,310 --> 00:12:04,050
So while validating this, it will check both for that username password should be seen like that,

171
00:12:04,050 --> 00:12:07,470
like ways that it will execute everything inside this.

172
00:12:07,980 --> 00:12:10,470
So as you can see, we are using Bobo's method.

173
00:12:10,770 --> 00:12:13,500
So there are two methods inside this do both and do it.

174
00:12:13,830 --> 00:12:15,870
Let's see what is the difference between them.

175
00:12:17,040 --> 00:12:20,130
So this is all about good enforcement.

176
00:12:20,610 --> 00:12:26,330
So in case of an unlimited amount, data can be sent to the hidden web.

177
00:12:26,340 --> 00:12:31,680
Inside the post, we can send a large amount of data like you can create in Yemen to eschew mail tags

178
00:12:31,680 --> 00:12:33,510
and anything inside what's inside it.

179
00:12:33,810 --> 00:12:36,360
You have to execute at least two or three on.

180
00:12:36,690 --> 00:12:38,250
You can proceed with further.

181
00:12:38,910 --> 00:12:43,750
So that request is not secure because it is exposed on your.

182
00:12:44,000 --> 00:12:50,310
But as you can see, I want to store inside the courtroom, as you can see.

183
00:12:52,680 --> 00:12:58,720
It is not saying anything your participants log in or anything, but while you are using the gate method,

184
00:12:58,720 --> 00:13:01,660
it will show everything like your username and password.

185
00:13:02,380 --> 00:13:04,300
So this is a very insecure method.

186
00:13:04,990 --> 00:13:10,180
So this is very important who by most method is very secure.

187
00:13:10,960 --> 00:13:18,520
But while using some simple things like I want to base the data, just want to face data from database,

188
00:13:18,540 --> 00:13:20,710
and I want to show you, I want to declare everything.

189
00:13:21,010 --> 00:13:24,550
You can use get me to get a request can be bookmarked.

190
00:13:24,760 --> 00:13:25,630
But what are you?

191
00:13:25,630 --> 00:13:30,760
Bookmark amateur means you can invoke it again and again, but post method you cannot be move it again

192
00:13:30,760 --> 00:13:31,120
and again.

193
00:13:31,630 --> 00:13:33,970
Only one time you can use it.

194
00:13:34,080 --> 00:13:40,060
Request ID. Potentially number 10 means if second request will be ignored when the first request is

195
00:13:40,060 --> 00:13:43,840
delivered late, you cannot ask for too many engagement.

196
00:13:44,080 --> 00:13:48,760
Built in signpost method you can ask for too many post same postal methods.

197
00:13:49,540 --> 00:13:54,040
That request is more efficient and use more than post.

198
00:13:54,640 --> 00:13:57,430
Like inside our world of getting everything.

199
00:13:57,430 --> 00:14:02,530
I want to create the one secure scenario, so I use post material not to get a method.

200
00:14:03,870 --> 00:14:11,940
As you can see in this ad, I use mostly post meter for logging also or store password and also everything,

201
00:14:11,940 --> 00:14:18,330
I used your post meter because for the logging and everything, I need to create one security environment.

202
00:14:18,630 --> 00:14:26,050
If you do get a metal, what will happen exactly inside chrome, as you can see or for the log in,

203
00:14:26,070 --> 00:14:28,940
it will pass Blake username and password.

204
00:14:28,950 --> 00:14:30,570
Is this for that purpose?

205
00:14:30,990 --> 00:14:33,480
As we know, we are creating some things.

206
00:14:33,900 --> 00:14:34,480
Oh yeah.

207
00:14:34,760 --> 00:14:40,200
You can also go with some encrypted password emitters, audit everything, but it's very complicated

208
00:14:40,200 --> 00:14:42,560
programming or the simple programming.

209
00:14:42,570 --> 00:14:43,350
What are you going to do?

210
00:14:43,380 --> 00:14:48,570
You can click just to do both methods to secure security involvement because it's not showing your username

211
00:14:48,570 --> 00:14:49,860
and password and sending you are in.

212
00:14:50,790 --> 00:14:54,520
So this is all about the things you do push.

213
00:14:55,140 --> 00:15:00,400
So what you do post on do get used to it the request.

214
00:15:00,450 --> 00:15:02,370
So we want to create a request.

215
00:15:02,380 --> 00:15:06,960
So we use the poster to get content input he gives us for this.

216
00:15:06,960 --> 00:15:12,030
You know, I will tell you how we can use do get method, so get requests more efficient.

217
00:15:12,030 --> 00:15:18,900
As you can see, text ball much less time than you post her new boss method because too much time to

218
00:15:19,110 --> 00:15:22,140
invoke it and then everything in the Java program.

219
00:15:22,860 --> 00:15:27,030
So this is all about the boost method other than to do post-military.

220
00:15:27,090 --> 00:15:30,950
We have too many things get parameters inside this for thirty nine years.

221
00:15:30,990 --> 00:15:34,230
I will tell you how we're going to create servlet request interface.

222
00:15:35,570 --> 00:15:40,920
So in this case, we created everything related to do it and do it.
