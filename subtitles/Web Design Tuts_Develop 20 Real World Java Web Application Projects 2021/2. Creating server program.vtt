WEBVTT
1
00:00:01.910 --> 00:00:10.280
In previous sessions, I told you all the basic concepts of Java and we created the basic structures

2
00:00:10.280 --> 00:00:13.730
are three basic classes inside Java bursted server.

3
00:00:13.850 --> 00:00:16.070
Second is blank and third is Japanese.

4
00:00:17.060 --> 00:00:22.340
So hope you understand this, but you can create one package elsewhere and you can use that also here

5
00:00:22.670 --> 00:00:24.920
where I'm going with directly like this.

6
00:00:25.520 --> 00:00:28.910
So let us see what we are going to do here now.

7
00:00:29.750 --> 00:00:39.620
So first of all, what I am going to mention is there some unique IDs and private variables to establish

8
00:00:39.620 --> 00:00:40.220
the connection?

9
00:00:41.120 --> 00:00:48.260
So first is basically unique ID for each connection, like I'm going considering here two or three clients

10
00:00:48.260 --> 00:00:51.020
or time are for the connection.

11
00:00:51.110 --> 00:00:52.460
Glenn means user again.

12
00:00:53.540 --> 00:00:57.570
So for each connection, we need to create unique for that purpose.

13
00:00:57.590 --> 00:01:00.200
What I'm going to do is I'm going to mention a private.

14
00:01:02.300 --> 00:01:04.550
Static, I'm using it, static you were.

15
00:01:05.530 --> 00:01:06.580
Standing in.

16
00:01:10.820 --> 00:01:11.630
Unique ID.

17
00:01:15.770 --> 00:01:22.970
Also, new green color, as you can see here, because we haven't in this part.

18
00:01:24.310 --> 00:01:24.820
And.

19
00:01:26.980 --> 00:01:27.280
OK.

20
00:01:28.520 --> 00:01:30.920
We haven't used that, but then.

21
00:01:32.820 --> 00:01:35.180
I'm considering here as a realist.

22
00:01:35.730 --> 00:01:42.210
So what is the ad basically composed of, at least you can consider like that single database inside

23
00:01:42.210 --> 00:01:43.560
the list to keep?

24
00:01:45.680 --> 00:01:48.260
List of all clients.

25
00:01:51.120 --> 00:01:53.880
So what I'm going to create is here again, private.

26
00:01:55.520 --> 00:01:56.240
Released.

27
00:01:59.720 --> 00:02:06.710
So it will involve this part, let me do one thing is we do this before levity, at least.

28
00:02:08.800 --> 00:02:10.750
Which is basically I'm going to create easier.

29
00:02:11.880 --> 00:02:12.480
Lion.

30
00:02:14.960 --> 00:02:15.350
Trade.

31
00:02:16.350 --> 00:02:22.620
I haven't mentioned the client, read an excerpt of our ship let in later, but I will explain what

32
00:02:22.620 --> 00:02:25.050
is the client religion and everything here.

33
00:02:26.480 --> 00:02:34.130
Now, to display time when that is mentioned, what I'm going to do is we're.

34
00:02:35.570 --> 00:02:41.240
Private, there is one default symbol date format, which realistically did.

35
00:02:42.360 --> 00:02:45.720
Is DfI mentioning it or it's impolitic for me?

36
00:02:47.800 --> 00:02:48.310
Then.

37
00:02:49.720 --> 00:02:50.980
World connection.

38
00:02:52.530 --> 00:02:54.270
Is also a private.

39
00:02:55.450 --> 00:02:55.770
In.

40
00:02:56.900 --> 00:02:57.310
AUD.

41
00:02:59.270 --> 00:03:01.040
Jake said, what is an inning or not?

42
00:03:02.290 --> 00:03:04.960
I'm going to create criticize Boolean Boolean variable.

43
00:03:09.280 --> 00:03:10.660
Again, it should be private.

44
00:03:10.840 --> 00:03:13.480
Always private Boolean.

45
00:03:15.620 --> 00:03:16.010
Keep.

46
00:03:16.910 --> 00:03:19.460
I'm mentioning you just keep going.

47
00:03:21.380 --> 00:03:27.800
As we embark and notification is basically nothing, but you can say the.

48
00:03:33.310 --> 00:03:33.580
What?

49
00:03:37.760 --> 00:03:42.170
If you have seen some, well, what we can see notification tape.

50
00:03:43.590 --> 00:03:45.250
We can in this.

51
00:03:47.080 --> 00:03:50.800
Considering is star two stars, three stars before any notification.

52
00:03:52.890 --> 00:04:01.500
So this is all about how we can do so, this setup in the server basically so I mean, all things here.

53
00:04:01.950 --> 00:04:04.520
I will tell you what is planted in later part.

54
00:04:05.080 --> 00:04:06.090
But remember this?

55
00:04:07.250 --> 00:04:09.980
Now let one constructed yet.

56
00:04:12.710 --> 00:04:13.880
Constructeur.

57
00:04:20.240 --> 00:04:21.500
Instructed to.

58
00:04:23.900 --> 00:04:25.400
Do you see the.

59
00:04:26.660 --> 00:04:27.110
Or.

60
00:04:37.490 --> 00:04:41.810
Listen, I will tell you what is listening and each and every part who for.

61
00:04:43.220 --> 00:04:44.330
Connection to.

62
00:04:45.910 --> 00:04:48.060
So I will mention it will be the.

63
00:04:49.760 --> 00:04:51.590
There is concern this only.

64
00:04:52.930 --> 00:04:56.490
So the board basically forced this, Don.

65
00:04:58.720 --> 00:04:59.140
OK, OK.

66
00:04:59.470 --> 00:05:00.740
Let me mention first.

67
00:05:01.970 --> 00:05:07.220
Public server default constructor, I'm considering it is in important.

68
00:05:09.000 --> 00:05:09.480
Then.

69
00:05:10.990 --> 00:05:16.600
The board is basically this not all is equal to all.

70
00:05:18.570 --> 00:05:19.140
Then.

71
00:05:21.600 --> 00:05:22.590
Display.

72
00:05:27.590 --> 00:05:28.070
They.

73
00:05:29.180 --> 00:05:32.240
Or the displaying it, what I'm going to create here is DFA.

74
00:05:34.090 --> 00:05:35.260
Is equal to new.

75
00:05:36.830 --> 00:05:44.120
Simple format you have to mention, and in turn this year to mention it or whatever would mean we need.

76
00:05:44.950 --> 00:05:46.420
Then second, can automate.

77
00:05:47.370 --> 00:05:50.100
As I mentioned, so this is basically the pattern.

78
00:05:51.820 --> 00:05:56.940
We need to create at least also here, because I'm mentioning it.

79
00:05:58.510 --> 00:05:59.740
At least for.

80
00:06:01.120 --> 00:06:01.810
Clients.

81
00:06:03.730 --> 00:06:06.100
And is equal to new.

82
00:06:07.590 --> 00:06:09.270
And copy this part because.

83
00:06:11.330 --> 00:06:11.960
He's very.

84
00:06:13.580 --> 00:06:14.330
Similar.

85
00:06:20.860 --> 00:06:26.390
And I'm going to use this one, so I will tell you what is we are going to create here and each and

86
00:06:26.470 --> 00:06:26.920
everything.

87
00:06:27.400 --> 00:06:30.790
So this is all about a basic set of summer.

88
00:06:31.270 --> 00:06:36.130
So I will explain everything with this socket and each and everything.

89
00:06:36.640 --> 00:06:38.220
So remember what I did this year?

90
00:06:38.230 --> 00:06:44.200
I created some materials or you can see defined things here.

91
00:06:44.470 --> 00:06:49.330
First is unique ID with each and everything unique ID for each connection.

92
00:06:50.770 --> 00:06:51.290
You need it.

93
00:06:51.910 --> 00:06:57.700
Then I created a released, which consists of clients, I will tell you how we can create client reading.

94
00:06:57.700 --> 00:07:04.240
Each and everything is basically name as a symbol that informant to mention the date and date format

95
00:07:04.240 --> 00:07:05.920
here then.

96
00:07:05.930 --> 00:07:13.000
But I read it basically for the word connection, then server running to check server is running or

97
00:07:13.000 --> 00:07:13.240
not.

98
00:07:13.240 --> 00:07:14.490
I'm going to do it here.

99
00:07:14.650 --> 00:07:20.860
William want keep going in against Bing to create a notification before any message ought to be before

100
00:07:20.860 --> 00:07:21.220
anything.

101
00:07:21.610 --> 00:07:23.500
I'm creating a notification bar.

102
00:07:23.980 --> 00:07:25.720
So this is all things I did not.

103
00:07:27.150 --> 00:07:34.690
What we can say only in private, only private, because for the what we can to obstruction bubbles,

104
00:07:34.800 --> 00:07:36.090
no one can change this part.

105
00:07:36.630 --> 00:07:43.590
Then in public, I'm consulting the constructor to decide what to listen, basically, which is public

106
00:07:43.590 --> 00:07:49.590
service input in this, but I must indirectly then displayed it and I relish for the clients.

107
00:07:49.920 --> 00:07:52.380
So this is all about how we can create each and everything.

108
00:07:53.040 --> 00:07:58.490
So in the final part, I will tell you what is the basic document each and every?

109
00:07:59.040 --> 00:08:01.560
So now we are set up with our basic things.

110
00:08:03.190 --> 00:08:06.010
So let us consider what is teams we are going to use.

111
00:08:06.430 --> 00:08:09.220
So we are considering you as a socket.

112
00:08:09.880 --> 00:08:10.600
What is this awkward?

113
00:08:10.600 --> 00:08:17.920
You know, the electric socket, each and every plug has the socket you need to put inside the socket,

114
00:08:18.130 --> 00:08:19.360
basic electric socket.

115
00:08:19.360 --> 00:08:25.000
Or we can say electric supplies will get similarly Socrates of one endpoint of two way communication

116
00:08:25.240 --> 00:08:27.610
link between two programs running on the network.

117
00:08:28.120 --> 00:08:34.180
So server and client server has some socket inside that.

118
00:08:34.630 --> 00:08:39.610
But using a port and server address, I'm going to create your socket.

119
00:08:39.970 --> 00:08:46.870
What plans will do clients will plug there for on that socket, and it will be throughout the network.

120
00:08:47.650 --> 00:08:55.240
So using such mechanism, I'm going to create a communication link between many clients or clients and

121
00:08:55.240 --> 00:09:02.710
sort of with the socket mechanism provides internal process communication IPC by establishing named

122
00:09:02.950 --> 00:09:05.140
as a contact point between two communication.

123
00:09:05.140 --> 00:09:08.500
We we I can mention the name for that on the communication also.

124
00:09:09.130 --> 00:09:12.820
So this is the basic thing of socket so we can create the socket insert server.

125
00:09:12.820 --> 00:09:15.000
We are going to create socket insert server only.

126
00:09:15.220 --> 00:09:16.330
No need to create a socket.

127
00:09:16.330 --> 00:09:22.390
Insert Glenn, because we are providing a client interface or we can say we are providing a user interface

128
00:09:22.390 --> 00:09:23.650
for clients and do not.

129
00:09:23.650 --> 00:09:26.430
We are going to create server part here.

130
00:09:27.280 --> 00:09:30.760
So for that purpose, we are going to create socket insert on server.

131
00:09:32.040 --> 00:09:36.400
Here I am considering PCB protocol, what is the ECB protocol in networking?

132
00:09:36.420 --> 00:09:44.160
User transmission control for proper protocol is basically that user top of IP IP address to ensure

133
00:09:44.160 --> 00:09:45.960
the transmission of packets.

134
00:09:46.740 --> 00:09:53.670
So all the data, all we are going to use it is converted into by converting to package, it will display

135
00:09:53.670 --> 00:10:00.390
to another plant, so likely that it will create and possibly include some mechanisms, like if lost

136
00:10:00.390 --> 00:10:02.790
or packet out of order to evacuate corrupted packets.

137
00:10:03.180 --> 00:10:06.360
It has emerged that part and also Java uses that part.

138
00:10:06.900 --> 00:10:13.050
So what is the listening is basically ECB listening is basically sort of what is waiting for the clients

139
00:10:13.050 --> 00:10:13.500
to connect.

140
00:10:13.500 --> 00:10:14.910
That part is listening.

141
00:10:15.180 --> 00:10:18.540
So for that purpose, I created a Boolean variable keep going.

142
00:10:18.960 --> 00:10:20.730
That is myself.

143
00:10:20.730 --> 00:10:21.600
What is running them?

144
00:10:21.870 --> 00:10:23.490
You can use that part.

145
00:10:24.650 --> 00:10:27.620
But you can see you can connect any claim to that excellent.

146
00:10:27.980 --> 00:10:37.010
So the basic for the server or we can see it is a simple thing like I created a socket inside server.

147
00:10:37.130 --> 00:10:44.270
No, the socket I create socket, which consists of many ports and mini grants.

148
00:10:44.270 --> 00:10:47.990
You use that part or you can use that socket.

149
00:10:48.140 --> 00:10:52.000
And no matter what is like on the network, any client can take that part.

150
00:10:52.550 --> 00:10:54.560
So this is all about all the things.

151
00:10:55.160 --> 00:10:56.450
So what is the server?

152
00:10:56.450 --> 00:11:02.210
And Glenn's basically sort of what is basically you can see a system which consists all the server side

153
00:11:02.210 --> 00:11:05.810
code client had some client side could load the internet.

154
00:11:05.810 --> 00:11:13.370
We can connect that server to, I can see, tell you that this is the socket for all creating or connecting

155
00:11:13.370 --> 00:11:14.660
the client to the server.

156
00:11:15.900 --> 00:11:22.530
So what is the team behind this whole trade system is going to work if my client one is riding on this,

157
00:11:23.400 --> 00:11:25.050
it will go to the internet.

158
00:11:25.290 --> 00:11:32.460
It will go to the server server will use that and check that which clients he wants to or she wants

159
00:11:32.460 --> 00:11:36.060
to do that, saying that it will check if it's for all.

160
00:11:36.330 --> 00:11:37.680
It will go to the on.

161
00:11:38.580 --> 00:11:41.930
If not, it will go to the that particular client.

162
00:11:42.630 --> 00:11:48.210
And then that second client is also connected using the same socket, but different or the same socket

163
00:11:48.450 --> 00:11:50.810
or within the same port, each and everything.

164
00:11:51.030 --> 00:11:55.710
But the part all connection is different, like connecting to three wires inside same socket, you can

165
00:11:55.710 --> 00:11:56.940
see an electrical pipe.

166
00:11:57.450 --> 00:11:58.890
Similarly, I'm going to do this.

167
00:11:59.790 --> 00:12:02.340
So these are all about the server client I'm going to consider.

168
00:12:02.610 --> 00:12:07.590
I'm not considering using this mobile device what I did here, but I'm not creating any mobile device

169
00:12:07.590 --> 00:12:08.430
interface on anything.

170
00:12:09.640 --> 00:12:15.090
So PCBs are workplan process, I mean, explain, but what is this gland processing sort of what causes?

171
00:12:15.460 --> 00:12:23.200
Because as a multithreading part, as I told you, we can run many processes, you know, Java or we

172
00:12:23.200 --> 00:12:26.380
can run mini programs inside of your own.

173
00:12:26.890 --> 00:12:31.000
So this is sort of a process and clean process degradable.

174
00:12:31.570 --> 00:12:37.780
So Glanville's is considering socket layer, protocol layer, device layer so you can see and can use

175
00:12:37.780 --> 00:12:38.560
such parts.

176
00:12:38.560 --> 00:12:42.600
And I can connect plan to the server and I can connect the mini glands.

177
00:12:42.610 --> 00:12:45.120
Flexible part of the connection of Manicaland.

178
00:12:45.130 --> 00:12:47.110
I'm going to use your multi-threading part.

179
00:12:47.620 --> 00:12:50.590
So let us see how we can create such things in Shangela.

180
00:12:50.950 --> 00:12:56.950
So for more, as I told you inside server program, I already created this.

181
00:12:57.340 --> 00:12:59.840
No, I need to mention a public word start.

182
00:13:00.190 --> 00:13:01.480
So I will explain what is.

183
00:13:01.480 --> 00:13:03.630
The basic thing is here is.

184
00:13:05.690 --> 00:13:06.440
Start.

185
00:13:08.860 --> 00:13:15.130
So what is public it started is basically starting my process, no, my mentioning keep going is equal

186
00:13:15.130 --> 00:13:17.890
to two, because it should be.

187
00:13:19.390 --> 00:13:24.400
So world is like life is basically like it's running.

188
00:13:25.820 --> 00:13:26.300
No.

189
00:13:27.330 --> 00:13:28.890
I am going to create a socket.

190
00:13:31.010 --> 00:13:31.820
So could silver.

191
00:13:34.210 --> 00:13:36.970
And wait for connection.

192
00:13:39.370 --> 00:13:43.180
Request, I'm going to wait for connection request.

193
00:13:43.600 --> 00:13:46.330
No, always remember creator, try catch block your first.

194
00:13:48.250 --> 00:13:54.070
But we wanted to try explaining the catch, I will create a logic inside tie only first.

195
00:13:55.510 --> 00:13:58.620
Socket used by server, because I'm.

196
00:14:00.290 --> 00:14:05.630
Oh, mentioning here, which soccer, oh my god, he's going to use the 80s.

197
00:14:06.650 --> 00:14:07.480
Server.

198
00:14:09.540 --> 00:14:10.230
Socket.

199
00:14:11.940 --> 00:14:15.360
So do you remember this, I'm going to mention this again.

200
00:14:16.970 --> 00:14:18.170
What is server socket?

201
00:14:19.210 --> 00:14:24.860
So for this purpose, I need to import Java, I need library, my ID explains that you need to improve

202
00:14:24.880 --> 00:14:25.990
your need library.

203
00:14:26.800 --> 00:14:28.030
So what I can do is.

204
00:14:29.450 --> 00:14:30.230
I will import.

205
00:14:31.910 --> 00:14:34.720
Java dot net dot dot.

206
00:14:37.710 --> 00:14:40.890
Also, what I'm going to do is here and I'm you, your stuff.

207
00:14:42.310 --> 00:14:44.560
So as you can see in this reasoning.

208
00:14:45.130 --> 00:14:54.190
So in insect, Java need library server socket is already to no need to create from basic socket, each

209
00:14:54.190 --> 00:14:54.730
and everything.

210
00:14:56.540 --> 00:14:57.800
The syntax is very similar.

211
00:14:59.710 --> 00:15:02.670
Server soccer and you two mentioned poor.

212
00:15:05.920 --> 00:15:06.860
So that's it.

213
00:15:06.990 --> 00:15:08.470
Oh, I'm going to create your.

214
00:15:11.480 --> 00:15:16.460
So why this is showing me because I haven't cleared the block, so.

215
00:15:18.170 --> 00:15:22.550
No, I mean, infinite loop to wait for connection.

216
00:15:25.750 --> 00:15:26.230
So.

217
00:15:27.830 --> 00:15:30.050
Why we need infinite loop because.

218
00:15:32.250 --> 00:15:34.500
Or our program should always.

219
00:15:39.250 --> 00:15:44.940
Our program should always listening for requests from planes to connect our server for that purpose,

220
00:15:44.950 --> 00:15:47.140
I'm considering the infinite loop.

221
00:15:47.560 --> 00:15:52.660
So in the next part, I'm going to explain how we can create in an infinite loop and each and everything.

222
00:15:53.170 --> 00:15:55.750
So I will use some default codes on each and every day.

223
00:15:55.760 --> 00:15:57.310
In the next part, I will explain this.

224
00:15:57.790 --> 00:16:01.530
So this is all about how we can do the server socket.

225
00:16:01.540 --> 00:16:04.630
I already created a server socket, which is using this for.
