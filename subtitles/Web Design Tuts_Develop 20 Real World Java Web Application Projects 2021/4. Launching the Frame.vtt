WEBVTT
1
00:00:00.520 --> 00:00:07.960
Now, so that we have like initialized all the global variables, all the objects which are going to

2
00:00:07.960 --> 00:00:15.760
be required in this project now in the next step, we are going to be concerned about launching the

3
00:00:15.770 --> 00:00:16.660
application.

4
00:00:16.960 --> 00:00:19.900
And we have already mentioned it here also.

5
00:00:20.170 --> 00:00:28.900
So we have created the last name did not stress is our Java, and now we are worried about functionalities

6
00:00:28.900 --> 00:00:31.030
for launching that application.

7
00:00:31.420 --> 00:00:41.110
So firstly, we have to create our function, of course, so that we can move forward in order to add

8
00:00:41.110 --> 00:00:42.060
anything inside.

9
00:00:43.900 --> 00:00:51.850
So it is going to be a main function taking string Yuman and.

10
00:00:52.900 --> 00:01:02.890
After which August, so we have created our function and inside this function, we are going to like

11
00:01:03.280 --> 00:01:11.950
add cases for the running of the application, opening the lake application in a separate window and

12
00:01:11.950 --> 00:01:15.100
then other processes involved here.

13
00:01:16.330 --> 00:01:26.010
So this is the required functionality for launching of the application, and this consists of try and

14
00:01:26.020 --> 00:01:29.710
get error like exceptional handling method.

15
00:01:30.060 --> 00:01:38.740
And this is going to handle all the exception, if suppose there are any complexities in right around

16
00:01:38.740 --> 00:01:42.130
time of the application.

17
00:01:42.460 --> 00:01:54.610
So this try and get exception handling methods are health listing that if like or try to open this new

18
00:01:54.610 --> 00:01:59.390
window and windows not like we are setting the bar.

19
00:01:59.410 --> 00:02:03.370
So true, we have already covered this that by default.

20
00:02:03.580 --> 00:02:11.680
Visibility is set to floors, so in order to make the frame visible in a new window, we have the visibility

21
00:02:11.680 --> 00:02:12.400
to through.

22
00:02:12.670 --> 00:02:21.880
So I suppose like we are trying to open this window, and if some exception arises, then we will like

23
00:02:21.880 --> 00:02:28.570
get that exception and we will bring stacked three frames, that is.

24
00:02:28.960 --> 00:02:38.490
And this is going to handle the exception, like any of that is occurring by launching of that application.

25
00:02:38.500 --> 00:02:38.920
Yes.

26
00:02:39.250 --> 00:02:44.720
And this event you invoke later is handling the running.

27
00:02:44.730 --> 00:02:53.530
But as we know, we have already seen that the window was responsive and the difference difference in

28
00:02:53.530 --> 00:02:57.640
that window is going to handle with the help of this statement.

29
00:02:57.940 --> 00:03:07.390
And this will make the window unable after this covering offer running late launching the application.

30
00:03:07.390 --> 00:03:17.290
But our next concern is to create the application like how to handle functions of the lead layout,

31
00:03:17.320 --> 00:03:23.520
the buttons and everything inside Loughnane so far creating that application for us.

32
00:03:23.740 --> 00:03:35.620
We are going to initialize public and this function, which is going to initialize the application like

33
00:03:35.620 --> 00:03:38.710
initially the Windows features opening.

34
00:03:38.920 --> 00:03:49.540
I already show new and empty off nine blocks is going to open when we like run the application.

35
00:03:50.140 --> 00:03:59.890
So this is going to be responsible for that initialization and we are done with this now in the next

36
00:03:59.890 --> 00:04:00.250
one.

37
00:04:00.520 --> 00:04:08.750
We are going to set conditions for winning of the game, like who is going to win the game.

38
00:04:09.340 --> 00:04:11.440
This race should be placed here.

39
00:04:12.700 --> 00:04:16.090
And then this is said the initialize.

40
00:04:16.100 --> 00:04:19.720
Functionally, you do not need to worry about that.

41
00:04:20.020 --> 00:04:29.350
This is just explained here as after the like launching of the application, obviously the initialization

42
00:04:29.350 --> 00:04:30.410
should take place.

43
00:04:30.940 --> 00:04:39.910
So after this, if we are creating a duplicate game, so we have to set conditions for winning or losing

44
00:04:39.910 --> 00:04:49.840
off specific player like suppose if one player are, then we lose or if the game draws, then we have

45
00:04:49.840 --> 00:04:52.050
to set a condition for that also.

46
00:04:52.570 --> 00:04:59.620
So we have created this private void running game function and inside this we have to write queries

47
00:04:59.980 --> 00:05:02.260
for makers specific player then.

48
00:05:02.680 --> 00:05:07.110
So suppose firstly, we want to like avoid that.

49
00:05:07.840 --> 00:05:15.370
Like suppose firstly, for Player X so far played X, what are the winning conditions we are going to

50
00:05:15.370 --> 00:05:17.410
look up to in this spot?

51
00:05:18.040 --> 00:05:31.930
So we have said, like if condition that is going to be responsible for checking on like event x x satisfies,

52
00:05:31.930 --> 00:05:35.680
all the conditions are known.

53
00:05:36.130 --> 00:05:47.680
So if we run and we do is equal to one and b t is equal to one, then X will win.

54
00:05:48.640 --> 00:05:50.380
So let me explain this.

55
00:05:50.560 --> 00:05:51.250
Like what?

56
00:05:51.250 --> 00:05:52.390
Actually this if?

57
00:05:52.460 --> 00:05:53.160
Is doing.

58
00:05:53.700 --> 00:06:01.770
So this is the launching frame like the mean setup function for launching of the application and that

59
00:06:01.770 --> 00:06:04.440
is responsible for launching off this frame.

60
00:06:04.770 --> 00:06:13.320
Now suppose that we said that if conversion, let's be one and be two and three is equal to one.

61
00:06:13.710 --> 00:06:15.660
So what that actually means?

62
00:06:16.050 --> 00:06:18.810
So suppose that we have nine blocks.

63
00:06:18.810 --> 00:06:24.990
This is the one we need to be three three four five six seven eight and May nine.

64
00:06:25.230 --> 00:06:30.400
There are nine blocks and blocks in the beginning in that structure.

65
00:06:30.720 --> 00:06:34.710
And we are checking that the work is split X-mas.

66
00:06:34.980 --> 00:06:43.800
So if, like the X comes here, head on here, firstly, we are going to check for the horizontal like

67
00:06:43.800 --> 00:06:48.150
look up like on configuration of the building.

68
00:06:48.690 --> 00:06:55.230
And this consecutive two occurrence of X will be responsible for making X then.

69
00:06:55.710 --> 00:07:04.500
So in the information we are, I think that only that is the three in a row becomes equal, then X is

70
00:07:04.500 --> 00:07:05.370
going to win.

71
00:07:06.270 --> 00:07:11.040
So I hope you understood what this if statement is signified.

72
00:07:11.400 --> 00:07:13.350
So I already shown you.

73
00:07:13.380 --> 00:07:20.220
That's what happens when a specific player wins like three games in a row, but then it can be horizontal,

74
00:07:20.220 --> 00:07:20.940
vertical or.

75
00:07:21.810 --> 00:07:29.670
This dialog box up best showing that player Nash wins, and we are going to set that function for that

76
00:07:29.670 --> 00:07:32.170
only inside Gardam condition.

77
00:07:32.460 --> 00:07:35.040
So he is here to face this year.

78
00:07:35.040 --> 00:07:41.520
Option Pain Dot Sure, Message Dialog is responsible for that dialog box.

79
00:07:41.520 --> 00:07:51.330
That Pop-Up Box mixes up any specific experiments, and this consists of a frame, a message which is

80
00:07:51.330 --> 00:07:59.070
in our string former displaying that Player X lens and awesome just is the title of that same how you

81
00:07:59.070 --> 00:08:06.270
can see and after which we have the option pane information missing.

82
00:08:06.510 --> 00:08:15.870
We have called these two options been heading an information message which is displayed and we are facing

83
00:08:15.870 --> 00:08:18.030
best graphics by one.

84
00:08:18.060 --> 00:08:19.350
This is responsible.

85
00:08:19.350 --> 00:08:27.990
Like initially, we have set this to zero and we are implementing this five run effects wins and then

86
00:08:28.230 --> 00:08:37.890
said test string value off like we are in setting the X count in this goal box that we have rendered

87
00:08:37.890 --> 00:08:41.720
the score and now we are fixing me to this block on me.

88
00:08:42.480 --> 00:08:49.860
And similarly, we are going to do this for all the 2D throws mark.

89
00:08:49.860 --> 00:09:00.750
Suppose if that is, if there should be as supportive one, two and three gongs in a row, there should

90
00:09:00.750 --> 00:09:02.730
be as garnishing also.

91
00:09:03.060 --> 00:09:06.480
So basically, it is not about the s condition.

92
00:09:06.490 --> 00:09:10.120
Let me call it as if condition makes.

93
00:09:10.120 --> 00:09:17.940
Suppose this happens, then this is going to be displayed as if this happens, then more is going to

94
00:09:17.940 --> 00:09:18.480
happen.

95
00:09:18.870 --> 00:09:26.340
So we have to like analyze things that what are the possibilities of the making of player win samples

96
00:09:26.340 --> 00:09:27.630
that we are considering?

97
00:09:27.660 --> 00:09:30.990
And what are the condition for making X men?

98
00:09:31.290 --> 00:09:37.470
So this is a one two three four five six seven eight nine lot, and I like that.

99
00:09:37.470 --> 00:09:38.580
So analyze that.

100
00:09:38.580 --> 00:09:41.160
What are the two conditions which will make x one?

101
00:09:41.520 --> 00:09:48.150
So if one totally comes in at all and four, five, six and seven eight nine.

102
00:09:48.360 --> 00:09:57.270
Similarly, one, four and seven comes in a row equal to one right and operator.

103
00:09:57.600 --> 00:10:04.320
And this is like goal five and ID, and this is three, six and nine.

104
00:10:04.650 --> 00:10:09.510
So we have to set conditions for these three combinations like total.

105
00:10:09.510 --> 00:10:14.190
We have three, three three and totally we talked about six conditions.

106
00:10:14.550 --> 00:10:23.460
So we are going to copy this same pain and paste it inside and assess block, as we call it.

107
00:10:24.000 --> 00:10:32.700
So copying this part and then again, copying it inside this same public like private white and then

108
00:10:32.700 --> 00:10:38.280
you can gain function and pasting it so will tell all four, five more times.

109
00:10:38.280 --> 00:10:40.830
So I am pasting it five more things.

110
00:10:41.820 --> 00:10:46.200
We are done this three four and this is fine.

111
00:10:46.770 --> 00:10:51.960
Now we will update the B variable inside everything.

112
00:10:52.330 --> 00:10:55.420
So we are done with one, two, three.

113
00:10:55.750 --> 00:10:57.760
Now we will change it to one.

114
00:10:59.080 --> 00:11:06.130
We are changing it like, let's check one two three now one, four and seven.

115
00:11:06.670 --> 00:11:10.810
So we will update it here with two, one, four and seven.

116
00:11:11.320 --> 00:11:18.400
So this is going to be four and this is going to be seven in the similar way for all the other.

117
00:11:19.570 --> 00:11:27.280
Once we're done with one, four, seven now, what are the other possibilities this this is covered

118
00:11:27.280 --> 00:11:33.670
now two, four and six should be taken into consideration.

119
00:11:34.460 --> 00:11:37.150
So suppose this becomes equal.

120
00:11:37.990 --> 00:11:42.690
So this is going to be before and this is going to be six.

121
00:11:43.420 --> 00:11:53.380
And inside this issue, we have to protect ourselves and of course, we will update it with N70 when?

122
00:11:55.200 --> 00:11:59.250
And after that, we will be updating this everything.

123
00:11:59.860 --> 00:12:08.700
Let's quickly analyze the inside structure of bias and assess statements so they options are going to

124
00:12:08.700 --> 00:12:09.270
be seen.

125
00:12:09.270 --> 00:12:13.150
The inside component of this is that statement won't change.

126
00:12:13.560 --> 00:12:21.420
What are all the nine common issues we are going to ask for a specific player when we have nine possible

127
00:12:21.420 --> 00:12:29.070
combinations, like nine one eight, like we can't one two three four, five, six, seven and eight.

128
00:12:29.340 --> 00:12:32.880
So yes, there are certain eight possible combinations.

129
00:12:33.150 --> 00:12:37.740
So it is best make better win, whether it be X or it be zero.

130
00:12:38.280 --> 00:12:42.050
So we've made, I think, like nine they found outstanding shows.

131
00:12:42.390 --> 00:12:49.390
An insight into the structure of the board will remain the same for X in the in all and eight cases.

132
00:12:49.770 --> 00:12:53.550
Just this if things will change in every code.

133
00:12:53.820 --> 00:13:03.930
So yes, let's try to like change it with this statement says we have successfully like updated everything,

134
00:13:04.800 --> 00:13:10.800
life conditions and coordination with the possibilities of Planet X many.

135
00:13:11.190 --> 00:13:19.530
We are 10 total one two three four five six seven and total, yes, total.

136
00:13:20.100 --> 00:13:21.020
So yes, totally.

137
00:13:21.020 --> 00:13:27.780
If conditions are there for making that excellent now in this similar to me, we will be writing code

138
00:13:27.780 --> 00:13:34.560
for May all running inside this private void running game function as well.

139
00:13:35.370 --> 00:13:42.090
So let's take a look at this in the next part of this series.
