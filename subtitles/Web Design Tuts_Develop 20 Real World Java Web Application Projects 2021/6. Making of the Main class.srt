1
00:00:00,990 --> 00:00:09,210
So in the previous five, we have successfully created enough functionalities for adding some, finding

2
00:00:09,210 --> 00:00:14,850
the songs and adding the song to the playlist with the help of track numbers.

3
00:00:15,360 --> 00:00:24,480
We have certain playlists as our data structure calling list, an important link list from the YOU delivery

4
00:00:24,480 --> 00:00:25,080
as well.

5
00:00:25,920 --> 00:00:34,140
So removing that extra part from the import now we have imported both had a list and link list from

6
00:00:34,140 --> 00:00:34,610
that job.

7
00:00:34,780 --> 00:00:35,880
You do package.

8
00:00:37,210 --> 00:00:43,570
Now, so that we have successfully created that playing this function.

9
00:00:44,140 --> 00:00:46,990
Let the facts see that what is happening?

10
00:00:47,530 --> 00:00:55,900
So we have created an integer called index, which is going to store track number of minus one in the

11
00:00:55,900 --> 00:01:04,270
beginning and inside the if when we are checking that if the index is greater than zero and this is

12
00:01:04,390 --> 00:01:11,320
called and operator and it is a logical operator, if you know the Java basics, you must have heard

13
00:01:11,320 --> 00:01:13,030
about logical operators.

14
00:01:13,750 --> 00:01:21,310
So if the index is greater than zero and index is less than the song says, like suppose, initially

15
00:01:21,310 --> 00:01:24,160
we have a size of song says.

16
00:01:25,060 --> 00:01:29,260
We know that we are using it in analyst, so that list is desirable.

17
00:01:29,560 --> 00:01:32,560
But there should be some size in the beginning.

18
00:01:32,650 --> 00:01:35,410
I suppose the list is containing five songs.

19
00:01:35,740 --> 00:01:44,050
So this is going to check that if the correct number is greater than zero and the track number is less,

20
00:01:44,050 --> 00:01:48,820
then like the index of the track is less than song size.

21
00:01:49,450 --> 00:01:58,420
And this if statement is going to be a function even only when this both parties too.

22
00:01:58,750 --> 00:02:06,600
Like if this is false and this is true, then it is going to return false and the loop will exit this

23
00:02:06,750 --> 00:02:07,360
statement.

24
00:02:08,020 --> 00:02:13,750
And even if this is true and this is false, then again, the same thing is going to happen.

25
00:02:14,140 --> 00:02:23,630
So this issue will only be entered if both parts are through one and one on one leg through and through

26
00:02:23,710 --> 00:02:25,620
is only going to return true.

27
00:02:26,110 --> 00:02:30,390
And then only this is going to check Playlist Dorton.

28
00:02:31,120 --> 00:02:38,440
So if both of that things are true, then only the song is going to be added in the playlist and this

29
00:02:38,440 --> 00:02:39,790
function is going to return.

30
00:02:40,540 --> 00:02:49,570
Otherwise, if any of these two is false, then the function will exhibit this if statement, like before

31
00:02:49,570 --> 00:02:55,780
entering this segment, will directly put into this system that are not playing.

32
00:02:56,290 --> 00:03:04,630
This album does not have the song with track number and calling this object track number with the help

33
00:03:04,630 --> 00:03:09,680
of plus symbol and the function will return false.

34
00:03:09,700 --> 00:03:10,390
Of course.

35
00:03:12,450 --> 00:03:19,890
So after checking like adding those songs to the playlist with the help of track numbers now in the

36
00:03:19,890 --> 00:03:25,920
next bag, we are going to add songs to the playlist with the help of its title.

37
00:03:26,400 --> 00:03:33,570
So initializing the function in this similarly public Boolean as the playlist.

38
00:03:34,770 --> 00:03:42,240
We already have that function called as stop playing this, but this time the argument is going to be.

39
00:03:43,210 --> 00:03:45,940
Are tighter strings tighter?

40
00:03:47,070 --> 00:03:51,700
And let me go with this same thing for the playlist part.

41
00:03:53,050 --> 00:04:02,200
As only the first argument is going to differ now, if we are going to add songs with the help of title,

42
00:04:02,620 --> 00:04:03,520
we have to.

43
00:04:05,480 --> 00:04:11,010
And it with checking if the title is same, then only we've been born there.

44
00:04:11,900 --> 00:04:12,770
And the song.

45
00:04:13,820 --> 00:04:26,270
So the playlist, if that item is not seen, so check the song, and if the song is doesn't this not

46
00:04:26,270 --> 00:04:34,490
songs is used to call the song matter from the above declaration inside the far loop.

47
00:04:34,940 --> 00:04:43,520
We are going to leave statement, check the song Don't get title to get the title.

48
00:04:44,300 --> 00:04:49,540
We have declared this title in the song class in the song Java.

49
00:04:50,510 --> 00:04:57,950
And after getting that title, we are going to check that if this title equals the current title or

50
00:04:57,950 --> 00:05:02,400
not, so equals and enter.

51
00:05:03,190 --> 00:05:07,080
And the argument of equals is going to be the title of this song.

52
00:05:07,860 --> 00:05:09,170
Yes, fair enough.

53
00:05:10,420 --> 00:05:15,640
Now inside the statement, if the song title equals title.

54
00:05:17,010 --> 00:05:20,670
Then playlist should be added.

55
00:05:21,880 --> 00:05:23,320
The witness from.

56
00:05:24,590 --> 00:05:26,210
Playlist, Naughton.

57
00:05:27,710 --> 00:05:34,550
Check the song name we have checked before this song, and it can be added to the playlist.

58
00:05:35,030 --> 00:05:44,720
It is not pleasant already in the list and after which this Boolean function is going to return through.

59
00:05:46,200 --> 00:05:49,470
So return to is going to be the.

60
00:05:51,010 --> 00:05:53,110
Output for this function.

61
00:05:53,320 --> 00:05:53,890
Yes.

62
00:05:53,920 --> 00:05:56,140
So are here with this.

63
00:05:56,820 --> 00:06:07,990
Now if there is if statement, then to counter this if statement we have tonight a statement like what

64
00:06:08,290 --> 00:06:14,050
will happen if this if is not accessed, this is not performed.

65
00:06:14,770 --> 00:06:19,330
So we have the out the same thing we have.

66
00:06:20,460 --> 00:06:25,860
Like this song like track number, no, was the above argument.

67
00:06:26,190 --> 00:06:30,900
So in this part, we are going to see a subtitle.

68
00:06:32,500 --> 00:06:39,450
Plus, there is no such song in that there's.

69
00:06:40,920 --> 00:06:45,540
No such song in the album.

70
00:06:48,220 --> 00:06:48,880
Yes.

71
00:06:49,420 --> 00:06:55,750
So we are here would not add to playlist matters.

72
00:06:57,380 --> 00:07:06,500
So we have completed both topline, this functions one way to not track no argument, and there is no

73
00:07:06,500 --> 00:07:07,620
title argument.

74
00:07:08,060 --> 00:07:16,220
So track number as the argument and Typekit argument are going to be that though part of the add to

75
00:07:16,220 --> 00:07:17,330
playlist function.

76
00:07:18,260 --> 00:07:28,490
So as far as I can see that we have successfully completed the song class by adding songs with title

77
00:07:28,490 --> 00:07:29,450
and duration.

78
00:07:30,730 --> 00:07:37,210
And yes, the song part is completed by adding the title and then duration.

79
00:07:37,750 --> 00:07:42,790
Also, the Album Pass is completed by adding.

80
00:07:43,950 --> 00:07:49,740
Methods like functionalities for finding those songs like me have to list the songs.

81
00:07:50,250 --> 00:07:57,330
I hope you have gone through the introduction section, so we have to find the songs and the songs,

82
00:07:57,600 --> 00:08:00,270
list the songs and then move the songs.

83
00:08:00,690 --> 00:08:07,320
So yes, we have completed everything inside the album, plus also.

84
00:08:08,760 --> 00:08:13,280
Let us summarize this album, Glass and then switch to the next breath.

85
00:08:13,680 --> 00:08:20,480
We have found song and song our playlist two times, and this is going to output that.

86
00:08:20,560 --> 00:08:23,590
Rather, this song is present in the playlist on on.

87
00:08:24,220 --> 00:08:30,480
Now switching to the auto type section, we have created Project.

88
00:08:30,690 --> 00:08:32,780
We have written the song Glass.

89
00:08:33,210 --> 00:08:35,220
We have created the album Glass.

90
00:08:35,460 --> 00:08:43,110
Now we are going to create the mean blast, which is going to run the project like this main glass is

91
00:08:43,110 --> 00:08:44,850
responsible for.

92
00:08:47,240 --> 00:08:50,600
Testing and running.

93
00:08:52,660 --> 00:08:53,800
Of the project.

94
00:08:56,210 --> 00:09:00,780
Of the register music player playlist.

95
00:09:01,220 --> 00:09:02,780
Whatever we say on this.

96
00:09:03,410 --> 00:09:06,610
So now we are going to create them in class.

97
00:09:08,690 --> 00:09:14,450
Inside this RC folder, of course, so mean dark Java.

98
00:09:15,520 --> 00:09:18,420
Is going to be the name for the middle class.

99
00:09:18,550 --> 00:09:21,370
And here we are inside our main glass.

100
00:09:21,670 --> 00:09:23,950
Now we will start writing.

101
00:09:25,180 --> 00:09:34,930
The quiet is inside the main glass, so let's initialize this main glass with initializing.

102
00:09:35,380 --> 00:09:44,380
Static void, main function and the arguments are going to be string args.

103
00:09:45,910 --> 00:09:52,870
Yes, it is going to be this way and the function is created for the main glass.

104
00:09:53,380 --> 00:10:00,010
Now inside this, we are going to create a like we have to play songs.

105
00:10:00,550 --> 00:10:04,180
So firstly, we have to earn songs to the album.

106
00:10:05,170 --> 00:10:12,790
So we have created the album Glass already, so adding artists songs to the album.

107
00:10:13,750 --> 00:10:24,130
So I suppose the first album is like the album and this album is new, so we have to add the new keyboard

108
00:10:24,610 --> 00:10:26,500
and an album.

109
00:10:27,720 --> 00:10:36,600
Inside the album, suppose that we wish to add some name for the album, so the name is going to be

110
00:10:37,380 --> 00:10:45,690
like you can see that in situations it is asking for a string name string artist and add a list of those

111
00:10:45,690 --> 00:10:46,170
songs.

112
00:10:46,470 --> 00:10:55,770
So inside this album object for this function, we are going to earn a name artist and I'll add a list,

113
00:10:55,770 --> 00:10:56,400
of course.

114
00:10:56,880 --> 00:11:01,860
So suppose the name for this album is album one.

115
00:11:03,160 --> 00:11:12,460
And now I this is there's going to be inside the double gold, so album one.

116
00:11:13,240 --> 00:11:14,950
And this is.

117
00:11:16,390 --> 00:11:21,400
Like, this second one is the lightest.

118
00:11:23,420 --> 00:11:26,540
And the this is going to be.

119
00:11:27,630 --> 00:11:29,240
Nurses are calling.

120
00:11:31,530 --> 00:11:36,600
You have to select this thing from the side dishes only.

121
00:11:37,200 --> 00:11:40,960
I missed the suggestion, so I am writing it manually.

122
00:11:41,430 --> 00:11:44,580
So new album name is album one.

123
00:11:44,910 --> 00:11:48,300
And for the artist section, I have the check.

124
00:11:49,220 --> 00:11:51,160
In the head.

125
00:11:51,980 --> 00:11:58,670
So the song First Day Peaches Memory, so is the artist version of me.

126
00:11:58,880 --> 00:12:00,260
Maroon five.

127
00:12:01,310 --> 00:12:01,640
Yes.

128
00:12:02,390 --> 00:12:07,760
So Maroon five is like this or I sang these amazing songs.

129
00:12:08,010 --> 00:12:11,090
I'm going to end in my playlist.

130
00:12:12,370 --> 00:12:21,820
So the album is created now inside the album, we have to have our list for the title of the song and

131
00:12:21,820 --> 00:12:29,170
the original The Song, as that a list of songs consists in the song and the song consists of title

132
00:12:29,320 --> 00:12:30,460
and annihilation.

133
00:12:31,360 --> 00:12:37,240
Now we have created this album and songs to the album.

134
00:12:37,660 --> 00:12:39,610
We are calling this album.

135
00:12:40,670 --> 00:12:43,360
Object and and song.

136
00:12:44,750 --> 00:12:52,970
Yes, that these are song we have written in the album, plus I have talked about it, that this sad

137
00:12:53,060 --> 00:12:59,840
song is going to end the song to the list only if the song is not already present in the list.

138
00:13:00,230 --> 00:13:08,570
Incase if the song is already present in the list, it will still an exception saying that stop, this

139
00:13:08,570 --> 00:13:12,860
song is already present and the Boolean function will return.

140
00:13:12,860 --> 00:13:17,900
Like this sad song was a Boolean function and it is going to return false.

141
00:13:18,260 --> 00:13:19,010
Next stop!

142
00:13:19,040 --> 00:13:20,960
You can dance song to the list.

143
00:13:21,650 --> 00:13:24,200
So our song I am selecting this.

144
00:13:24,860 --> 00:13:28,130
I'm supposed the title of this song is.

145
00:13:29,770 --> 00:13:33,670
Like the first song is supposed stay.

146
00:13:35,390 --> 00:13:44,150
And our duration, let's suppose it is four point five minutes.

147
00:13:45,170 --> 00:13:47,450
It is a double daytime soap.

148
00:13:47,930 --> 00:13:48,410
Yes.

149
00:13:49,330 --> 00:13:49,760
No.

150
00:13:49,900 --> 00:13:58,320
Ending this and copying this to me more times than we can complete as many times as we want.

151
00:13:59,180 --> 00:14:01,940
Number of songs can be in finite.

152
00:14:03,170 --> 00:14:13,460
And we are using analyst, and it allows us to run multiple data now for the third song I have to check.

153
00:14:14,120 --> 00:14:17,780
Yes, it's memories, memories.

154
00:14:18,890 --> 00:14:22,100
And the duration for this is supposed to be point five.

155
00:14:22,490 --> 00:14:25,070
And for this purpose, 5.2.

156
00:14:25,790 --> 00:14:28,370
So we have added three songs successfully.

157
00:14:29,030 --> 00:14:32,420
Let's add one more song or better lyric.

158
00:14:32,780 --> 00:14:40,400
So we have created the first album now in the similarly, we have to create one more album so that the

159
00:14:40,420 --> 00:14:45,980
song has some variations, so it is showing some matter.

160
00:14:46,130 --> 00:14:49,130
Let's try to see what it is.

161
00:14:50,640 --> 00:14:54,810
So the syntax error tokens are misplaced.

162
00:14:55,710 --> 00:14:56,880
Okay, so you.
