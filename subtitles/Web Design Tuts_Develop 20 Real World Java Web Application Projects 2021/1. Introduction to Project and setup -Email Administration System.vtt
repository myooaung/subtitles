WEBVTT
1
00:00:02.300 --> 00:00:02.900
Java.

2
00:00:02.960 --> 00:00:09.920
Email administration in this project, we are going to learn basic Java project focused on.

3
00:00:11.170 --> 00:00:14.290
Object oriented design in real world application.

4
00:00:15.160 --> 00:00:23.500
So this is email administration project where all the email details like creating mail, using firstname

5
00:00:23.500 --> 00:00:31.450
and lastname, then giving the company department like related to that company department, then creating

6
00:00:31.450 --> 00:00:36.370
some system generated password assigning to that particular email.

7
00:00:36.970 --> 00:00:40.990
We are going to create your email administration project like that.

8
00:00:41.530 --> 00:00:49.030
So in this project, we are going to learn some basic concepts of Java, object oriented design of Java,

9
00:00:49.450 --> 00:00:56.920
then abstraction of Java, like how we can secure our password and everything like abstracted password.

10
00:00:57.850 --> 00:01:07.480
Also, we are going to learn how we can execute or create some files in Java itself, like finagling

11
00:01:07.480 --> 00:01:08.140
in the Java.

12
00:01:08.800 --> 00:01:15.970
So after creating all the details like email, their password, first name, last name, we are going

13
00:01:15.970 --> 00:01:21.520
to store that particular data or information in a text file.

14
00:01:22.700 --> 00:01:26.360
So let's see how we can proceed with this project.

15
00:01:26.930 --> 00:01:33.890
So first, we are going to learn or we are going to see our project in, so consider your own I.T. support

16
00:01:33.890 --> 00:01:36.920
administrator, administrator or something like that.

17
00:01:37.070 --> 00:01:44.660
Your post or what you are going to do is you have your task is creating email account for new hires

18
00:01:44.780 --> 00:01:47.510
or new employees for that purpose.

19
00:01:47.540 --> 00:01:50.870
You need first name and last name from the user.

20
00:01:51.050 --> 00:01:54.230
Or we can say for the new employees.

21
00:01:55.310 --> 00:01:57.170
So using that, you are going to create.

22
00:01:58.220 --> 00:02:00.860
Email new email with another difference.

23
00:02:01.980 --> 00:02:09.000
So steps of our development for this project is plus these projects set up, and we are going to set

24
00:02:09.000 --> 00:02:13.710
up all things in this basic fundamental concepts in Java.

25
00:02:14.640 --> 00:02:16.320
We are going to use Java code.

26
00:02:16.320 --> 00:02:23.880
Basically, we're accessing classes, methods or all the abstractions of classes in Java.

27
00:02:25.480 --> 00:02:32.530
Here we are going to see basic concepts, creating objects, classes, methods, file handling, Java.

28
00:02:33.530 --> 00:02:38.750
Basically, we are going to create a one based file to file, and we are going to store all the data

29
00:02:38.750 --> 00:02:41.570
in it, and we are going to retrieve that information until.

30
00:02:42.500 --> 00:02:49.850
Creating single executions, I love John Lake in this project, we are going to create multiple classes

31
00:02:49.850 --> 00:02:55.570
for the Java files, but after that we are compiling it in Buddha symbol executing Godfrey.

32
00:02:56.700 --> 00:02:59.970
So this is our basic project on the steps of development.

33
00:03:00.840 --> 00:03:02.070
We are going to use here.

34
00:03:03.640 --> 00:03:10.780
So our application requirements, so we can see how we can proceed with our requirements.

35
00:03:11.620 --> 00:03:14.580
First, we are going to need a one JDK.

36
00:03:15.010 --> 00:03:17.800
I'm going to explain what you mean by JDK in Java.

37
00:03:18.190 --> 00:03:22.780
And second, is it it basically integrated development environment for Java.

38
00:03:23.380 --> 00:03:26.500
So there are multiple ideas in this field.

39
00:03:27.070 --> 00:03:30.280
We are going to see how we can use that for our application.

40
00:03:31.290 --> 00:03:31.950
First is.

41
00:03:33.130 --> 00:03:38.160
Our basic thing is generating an email which index indexed like first name.

42
00:03:39.730 --> 00:03:45.940
Last name, I get it department, we are going to provide dot company dot com.

43
00:03:46.390 --> 00:03:53.980
So here, first name, last me, last name and department is given from the user or we can say new hire

44
00:03:53.980 --> 00:03:54.250
from.

45
00:03:55.060 --> 00:04:02.260
So for the terminals department, we are, I'm considering your sales development accounting year or

46
00:04:02.410 --> 00:04:09.340
if none is given from the new employee, then that blank will be there in email.

47
00:04:10.310 --> 00:04:12.590
Generate a random string for the password.

48
00:04:13.960 --> 00:04:17.900
And so what is the third or aim of that application?

49
00:04:18.980 --> 00:04:22.430
Applications should have some set of methods to change the password.

50
00:04:23.530 --> 00:04:31.540
Then said the mailbox capacity, basically the mail capacity and the defined, the alternate email address

51
00:04:32.020 --> 00:04:35.620
is also going from the user only, or we can send new higher.

52
00:04:37.260 --> 00:04:44.310
It should have some great methods to display the name, email and the mailbox capacity when we are going

53
00:04:44.310 --> 00:04:46.620
to bring that email address also.

54
00:04:47.220 --> 00:04:54.330
And it should have some file handling methods, or we can see of file handling methods to store some

55
00:04:54.330 --> 00:05:00.000
data in the file so it will store data and retrieved it also.

56
00:05:00.600 --> 00:05:03.360
So this is our application requirements.

57
00:05:03.750 --> 00:05:10.220
And here we are going to use JDK basically Java Development Kit and ID Integrated Development Environment

58
00:05:10.680 --> 00:05:12.060
to do what's required.

59
00:05:14.600 --> 00:05:18.330
So as I mentioned when we read some ID.

60
00:05:18.890 --> 00:05:23.660
So for the Java development, I'm going to use your intel, Julia.

61
00:05:23.810 --> 00:05:28.310
So we are going to use it for the Java development.

62
00:05:28.820 --> 00:05:34.610
So in this project, we are going to build our whole project using this highly.

63
00:05:35.560 --> 00:05:45.100
For the JDK or Java, we are going to use your Java ESI, which is standard edition 16 generation JDK

64
00:05:45.400 --> 00:05:46.600
for the Java development.

65
00:05:46.930 --> 00:05:52.240
So from these websites, you can download it and you can use it, utilize it.

66
00:05:53.080 --> 00:05:58.300
So for this, you need to download as but you are the system requirements.

67
00:05:58.930 --> 00:06:01.660
There are two versions of this IDE Ultimate and community.

68
00:06:01.660 --> 00:06:02.410
You can download it.

69
00:06:02.800 --> 00:06:10.120
And for Java, see, you have to download JDK here and are installed once you installed it.

70
00:06:10.810 --> 00:06:15.520
It's it will automatically detect the path of that JDK.

71
00:06:17.490 --> 00:06:21.090
So this is about all your tools really required.

72
00:06:22.630 --> 00:06:27.480
So first, let us see more business in my guide, JVM and JDK.

73
00:06:28.210 --> 00:06:35.480
So just you downloaded the Java Sea Virgin starting early edition Virgin 16 you downloaded is basically

74
00:06:35.510 --> 00:06:36.100
Jellicle.

75
00:06:36.790 --> 00:06:38.920
So did you get contents and JVM?

76
00:06:38.920 --> 00:06:41.320
So JVM is the smallest part of duty.

77
00:06:42.580 --> 00:06:46.670
So JVM is the Java virtual machine, as the name suggests.

78
00:06:47.380 --> 00:06:52.810
No, physically, it's not physically exist on your system, it's what your machine.

79
00:06:53.530 --> 00:07:02.290
But its main aim is, or a main function is, which provides the runtime environment in which Java bytecode

80
00:07:02.290 --> 00:07:02.980
executes.

81
00:07:04.130 --> 00:07:11.690
So what do you mean by bytecode is basically you are creating some Java syntax or its higher level language

82
00:07:11.690 --> 00:07:16.580
you are writing, but the machine knows the lower level language one zero one zero machine level language.

83
00:07:16.880 --> 00:07:20.900
So it converts that bytecode and executes that by.

84
00:07:22.180 --> 00:07:26.650
It also runs programs in other languages, but compiled in Java.

85
00:07:27.310 --> 00:07:33.620
So basically, if you created some other languages, I mean by Kotlin, awesome, they these are the

86
00:07:33.640 --> 00:07:36.100
supports, these supports of the Java amongst some.

87
00:07:37.030 --> 00:07:45.970
So what is the main functions of JVM is its laws, the code, it's the replace, the code, it executes

88
00:07:45.970 --> 00:07:48.670
the code and each provides the right environment.

89
00:07:50.170 --> 00:07:51.670
Second parties, jihadi.

90
00:07:52.680 --> 00:07:54.420
Java runtime environment.

91
00:07:55.590 --> 00:08:03.090
What is the Jrt is it is a set of tools library and some data files Java Archive files.

92
00:08:04.620 --> 00:08:12.120
It's used in the Java applications programs that we are going to create, and it provides the implementation

93
00:08:12.120 --> 00:08:19.620
of JVM, it physically exists in JDK as its runtime environment is just a set of programs protocols

94
00:08:19.620 --> 00:08:19.790
in.

95
00:08:21.220 --> 00:08:23.440
JDK Java Development Kit.

96
00:08:23.980 --> 00:08:30.790
It contains Jrt, JVM, Java compiler, Java and were just basically different versions.

97
00:08:31.030 --> 00:08:34.090
All the related files and everything it contains.

98
00:08:35.200 --> 00:08:38.860
And let's see what is the structure of that.

99
00:08:39.520 --> 00:08:43.090
It's look like JVM Jihadi and dude.

100
00:08:43.630 --> 00:08:48.460
So Jessica is the superclass, or we can say all the union class of jihadi and JVM.

101
00:08:49.180 --> 00:08:49.560
So do you?

102
00:08:49.560 --> 00:08:56.320
Avium is the smallest part Java virtual machine, then Java runtime environment contains some set of

103
00:08:56.320 --> 00:08:56.890
libraries.

104
00:08:56.890 --> 00:08:58.580
Java is some other.

105
00:08:58.900 --> 00:09:01.750
Also, it contains and it contains JVM also.

106
00:09:02.890 --> 00:09:09.490
So this creates Jrt, and this is a development which contains Java files.

107
00:09:09.520 --> 00:09:15.400
Java compiler files, Java files and Jihadi JVM, all mixed and JDK.

108
00:09:15.640 --> 00:09:17.500
So just we downloaded the JDK.

109
00:09:17.950 --> 00:09:21.580
It contains the Java imagery and everything.

110
00:09:22.680 --> 00:09:29.730
It will execute our Java file and it will alert design what we are going to proceed with.

111
00:09:30.180 --> 00:09:33.540
So this is the basic consensus of guilty JVM and Jodi.

112
00:09:34.050 --> 00:09:41.730
Now we will see how we can set up our environment or our project for our application email administration

113
00:09:41.730 --> 00:09:42.420
application.

114
00:09:44.640 --> 00:09:50.250
Once you install our ID and the easy idea, you can see this welcome screen.

115
00:09:52.280 --> 00:09:55.730
Before that, I already installed in my system.

116
00:09:55.850 --> 00:10:02.090
So before that, you should say some configuration like foreign based everything.

117
00:10:02.810 --> 00:10:05.210
So once this is done, you can see the screen.

118
00:10:05.720 --> 00:10:08.990
So here I am, going to create a new project here new project.

119
00:10:15.090 --> 00:10:17.910
So it will take time to create a new project.

120
00:10:24.590 --> 00:10:30.440
So once a new project I'm going to create here or once this screen is loaded.

121
00:10:31.320 --> 00:10:34.500
Or you have to specify your duty.

122
00:10:34.800 --> 00:10:38.190
All we can say here is decay, so it will automatically detect you.

123
00:10:38.190 --> 00:10:38.490
It is.

124
00:10:39.270 --> 00:10:41.010
Yeah, I'm using.

125
00:10:44.020 --> 00:10:46.570
16 version of Jodi Get, so I'm choosing this.

126
00:10:47.140 --> 00:10:55.120
No need to install any additional libraries like groovy or cold linear or no need to specify some use.

127
00:10:55.300 --> 00:10:56.560
Do you find libraries also?

128
00:10:57.370 --> 00:10:58.750
Just click the next.

129
00:10:59.780 --> 00:11:02.000
Or don't take this.

130
00:11:02.360 --> 00:11:04.160
It will create some default template.

131
00:11:04.190 --> 00:11:07.400
We don't want to create some default template here.

132
00:11:08.530 --> 00:11:13.300
Create next before that, give the project name and project location.

133
00:11:13.750 --> 00:11:18.700
So for this, I'm going to specify the project name as.

134
00:11:22.210 --> 00:11:22.370
E!

135
00:11:22.450 --> 00:11:23.980
Mail application.

136
00:11:26.440 --> 00:11:30.170
You can specify a universal project name.

137
00:11:30.190 --> 00:11:32.170
I'm going to specify email application.

138
00:11:32.410 --> 00:11:33.100
Click the finish.

139
00:11:34.340 --> 00:11:41.960
It will take time to create indexing and everything, but it will once it slow, it will show the screen

140
00:11:41.960 --> 00:11:42.350
also.

141
00:11:44.070 --> 00:11:46.410
So wait for creating a new project.

142
00:11:49.270 --> 00:11:50.290
It will take time.

143
00:12:15.130 --> 00:12:16.370
Wait for it.

144
00:12:17.510 --> 00:12:19.480
It's showing the loading here, you can see.

145
00:12:20.020 --> 00:12:21.280
So wait for that.

146
00:12:21.880 --> 00:12:28.060
Scanning and indexing everything, it will automatically create all the folders related to our project.

147
00:12:42.830 --> 00:12:49.130
So now we are done with our set up, so we specified the JDK.

148
00:12:49.640 --> 00:12:51.710
Then we created our new project.

149
00:12:52.610 --> 00:12:56.120
Now you can see this is our project email application.

150
00:12:56.810 --> 00:12:59.210
And you can see all the related to find.

151
00:12:59.840 --> 00:13:05.300
That is got idea, then it's pretty easy to see for the main folder we are going to create here all

152
00:13:05.300 --> 00:13:06.980
the applications here.

153
00:13:07.430 --> 00:13:11.210
Then this is I am in file and all the external libraries and everything.

154
00:13:11.460 --> 00:13:15.480
So this is the only Java files we are going to use.

155
00:13:15.500 --> 00:13:22.280
So this is not at all required to see and this is mean if we are going to.

156
00:13:22.520 --> 00:13:24.500
So we are done with our setup.

157
00:13:24.860 --> 00:13:28.790
Now we will see how we can proceed with our project.

158
00:13:30.880 --> 00:13:37.030
So once all this is done and all things are indexed and loaded.

159
00:13:38.130 --> 00:13:39.810
Now what you are going to do is.

160
00:13:41.670 --> 00:13:46.320
Click this on SIRC right here.

161
00:13:48.330 --> 00:13:49.560
It will take time to load.

162
00:13:50.160 --> 00:13:51.540
So just slightly here.

163
00:14:04.820 --> 00:14:07.820
It will do all the options related to this.

164
00:14:09.580 --> 00:14:10.270
Click on New.

165
00:14:10.630 --> 00:14:14.380
You can see every option, what we can make in this.

166
00:14:14.890 --> 00:14:21.890
So what we needed, we needed create some java for it, so we need to clear Java class.

167
00:14:22.210 --> 00:14:28.930
But before that, what I'm going to do is I'm creating this Java classes we are going to proceed with

168
00:14:29.200 --> 00:14:30.370
in some package.

169
00:14:30.700 --> 00:14:39.550
What do you mean by packaging Java is I'm going to store that specific classes in some files.

170
00:14:40.180 --> 00:14:43.720
So this is a very basic project in further projects.

171
00:14:44.260 --> 00:14:48.190
We are going to create some large projects in that part.

172
00:14:48.460 --> 00:14:56.140
We need to create some different packages like in the industry, also ones for the small, small requirements.

173
00:14:56.350 --> 00:14:58.570
We can create small small packages.

174
00:14:59.320 --> 00:15:00.970
So once packaging is done.

175
00:15:03.650 --> 00:15:06.790
Specify the name, you can see the package.

176
00:15:06.990 --> 00:15:11.160
So I want the name as email here for that package.

177
00:15:11.180 --> 00:15:14.210
It will create some simple folder for dark glasses.

178
00:15:15.690 --> 00:15:19.650
Now to this email app, right click on that.

179
00:15:20.630 --> 00:15:23.060
And here I am going to create a glass.

180
00:15:24.160 --> 00:15:24.940
What are these?

181
00:15:25.180 --> 00:15:26.890
We need to create two classes.

182
00:15:27.730 --> 00:15:31.210
So what is the requirement of creating two classes with us?

183
00:15:31.730 --> 00:15:38.950
So in one class, we are going to create Minmetals, which is basically executing method and in another

184
00:15:38.950 --> 00:15:41.200
Java file or class.

185
00:15:41.320 --> 00:15:42.370
We are going to create.

186
00:15:43.720 --> 00:15:46.180
Or we are going this based fact all over the method.

187
00:15:46.420 --> 00:15:51.490
So first, let's see, there could be a third part or we can see what we are going to specify in that

188
00:15:51.490 --> 00:15:51.790
part.

189
00:15:51.940 --> 00:15:52.990
Let's see in that.

190
00:15:54.310 --> 00:16:02.500
So first, I'm going to create a Java class, and in this, so I'll specify a name for this Java class

191
00:16:02.500 --> 00:16:03.310
as email.

192
00:16:03.880 --> 00:16:05.980
I'm going to give us e-mail.

193
00:16:07.520 --> 00:16:09.020
Once it is, then it will.

194
00:16:10.460 --> 00:16:11.660
Note that Glass.

195
00:16:15.780 --> 00:16:19.770
So as you can see, it will load this glass on us.

196
00:16:20.910 --> 00:16:23.400
With some default structure.

197
00:16:24.720 --> 00:16:26.680
Let us see what is this structure for us?

198
00:16:28.720 --> 00:16:30.570
You can hide this part also here.

199
00:16:31.060 --> 00:16:35.520
I'm going to leave this and let's see what it is, basically structures.

200
00:16:36.880 --> 00:16:41.830
This is package name email that we created under this, and this is our class.

201
00:16:42.130 --> 00:16:45.800
So we are done with the primary setup of this lake public class mail.

202
00:16:45.820 --> 00:16:47.680
This is the class syntax blizzard.

203
00:16:48.910 --> 00:16:54.040
We will in the folder this, we are going to see how we can proceed with a letter.

204
00:16:54.730 --> 00:16:56.260
What do you mean by class methods?

205
00:16:56.260 --> 00:16:56.680
Everything.

206
00:16:56.680 --> 00:16:59.110
And we can proceed with our project in this.
