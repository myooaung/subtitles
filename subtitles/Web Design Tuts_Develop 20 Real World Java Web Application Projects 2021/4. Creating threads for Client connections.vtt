WEBVTT
1
00:00:01.620 --> 00:00:10.320
In previous part, I told you how we created the server side using Java for the DCB server and client.

2
00:00:11.040 --> 00:00:15.210
So if you observe inside our IDE or code.

3
00:00:16.360 --> 00:00:25.780
I'm using your port number as 1500, one five zero zero as a port number, so as you can see, I'm using

4
00:00:25.780 --> 00:00:27.220
some different things here.

5
00:00:27.730 --> 00:00:31.230
So you should record this Jalopnik.

6
00:00:32.350 --> 00:00:34.750
And by default, it is PCP connection.

7
00:00:35.900 --> 00:00:41.480
Internal using TCP IP protocol, all the closing and each and everything.

8
00:00:42.140 --> 00:00:47.300
So what I'm going to do is now I need to create some client.

9
00:00:47.570 --> 00:00:49.910
As I mentioned here, I'm using planted.

10
00:00:49.910 --> 00:00:51.950
But what if the client did it?

11
00:00:51.950 --> 00:00:55.370
We use the some multithreading concepts.

12
00:00:55.850 --> 00:01:01.160
So before that, I will explain multi-threading concepts for TCP server client.

13
00:01:01.160 --> 00:01:05.030
As I told you, there is one client process and server process.

14
00:01:05.330 --> 00:01:05.520
Yeah.

15
00:01:06.320 --> 00:01:11.320
What will happen when server code runs on the supply side will be like?

16
00:01:11.480 --> 00:01:19.790
Or we can say online now client will ask the server or request the server to join me select server.

17
00:01:20.540 --> 00:01:29.900
So this is one client process in saying that it consists TCP IP network, which network driver will

18
00:01:29.910 --> 00:01:33.260
network and another network that it will be connected to this.

19
00:01:33.680 --> 00:01:39.340
So there is one socket layer, two device layer protocol, each and everything in this sort of workplan

20
00:01:39.830 --> 00:01:40.280
process.

21
00:01:40.680 --> 00:01:46.520
So this is only one client, but in our case, we need more processes, which is basically more clients.

22
00:01:47.780 --> 00:01:51.050
For that, but you can create more processes.

23
00:01:51.720 --> 00:01:57.110
But what a sort of worst program or we can say server configuration, which is I'm considering your

24
00:01:57.110 --> 00:01:58.640
local host, my own machine.

25
00:01:59.710 --> 00:02:06.040
Is very less compatible for handling such processes, it can handle our own Ben Bruce install process.

26
00:02:06.490 --> 00:02:13.440
But in the real scenario, we want to connect more clients like in a group of any chat system.

27
00:02:13.450 --> 00:02:16.930
You have our participants, basically and their clients.

28
00:02:17.500 --> 00:02:22.900
Similarly, I want to create such a scenario for that is what I'm going to do.

29
00:02:23.290 --> 00:02:25.330
I'm going to handle it by multithreading.

30
00:02:25.990 --> 00:02:27.190
So what is multi-threading?

31
00:02:27.880 --> 00:02:30.640
You know, the process, what you can do.

32
00:02:30.880 --> 00:02:34.090
You can divide that process into task and task.

33
00:02:35.440 --> 00:02:41.350
So that is the multi-tiered of concepts, you can divide the process in two different different threads

34
00:02:41.680 --> 00:02:46.240
and you can create as a task and you can use that process other task.

35
00:02:46.540 --> 00:02:56.360
So consider like you want to take some or you want to buy some vegetables from market, but you have

36
00:02:56.360 --> 00:03:03.610
given the sequence like first then or you can say you have to buy my some three vegetables for vegetables.

37
00:03:03.940 --> 00:03:08.110
But sequence is not given what you can do and you want to buy on some fruits.

38
00:03:08.410 --> 00:03:12.100
So meanwhile, you can buy one vegetable, you can buy one fruit.

39
00:03:12.610 --> 00:03:15.850
After that, you can buy two vegetables, you can buy one fruit again.

40
00:03:16.750 --> 00:03:18.340
According to time stamp.

41
00:03:18.640 --> 00:03:23.770
The System Requirements System Configuration Multi-tiered will be handled through the virtual machine

42
00:03:24.130 --> 00:03:27.880
so that such tasks like process device you can do.

43
00:03:27.880 --> 00:03:30.160
The task for task for us is divided.

44
00:03:30.730 --> 00:03:34.120
What a second task if it's taking too much time.

45
00:03:35.690 --> 00:03:39.500
Over the Java virtual machine actually calculates homeless time it requires.

46
00:03:40.280 --> 00:03:48.890
But if that time is more than another process does, it will use that process and it simultaneously

47
00:03:48.890 --> 00:03:50.090
runs both processes.

48
00:03:51.350 --> 00:03:58.190
In this time will be we really ought to begin to retain complexity, will be very lest our system utilization

49
00:03:58.190 --> 00:03:59.570
is at maximum level.

50
00:04:00.050 --> 00:04:04.430
So military is a good application part for our channel.

51
00:04:05.450 --> 00:04:07.040
So what is my identity in the Java?

52
00:04:07.490 --> 00:04:12.110
Multi-threading and Java is a process of executing multiple rules simultaneously.

53
00:04:12.380 --> 00:04:19.430
As I told you to decide, it basically task in our surpluses, as you can see, so you can execute the

54
00:04:19.430 --> 00:04:27.920
multi-tiered assignment and see a trade is lightweight, so process knowledge you need to see multiprocessing

55
00:04:27.920 --> 00:04:28.820
and multi-threading.

56
00:04:29.330 --> 00:04:33.260
Both are used to accumulate, asking What is it multi-tasking?

57
00:04:33.530 --> 00:04:39.530
We can say I'm connecting a client as I'm telling you, I'm creating client through here.

58
00:04:39.890 --> 00:04:41.150
So what it will be do.

59
00:04:41.540 --> 00:04:46.300
It will similarly do that client information server simultaneously.

60
00:04:46.340 --> 00:04:50.300
It will connect that client to the server simultaneously.

61
00:04:50.300 --> 00:04:56.300
It will ask the name for the client, then simultaneously it will ask for the message and then this

62
00:04:56.300 --> 00:04:58.840
list server can do some another utilization also.

63
00:04:59.540 --> 00:05:08.010
So what will we do in writing clients, the Nightengale users server?

64
00:05:08.310 --> 00:05:09.140
Never be done.

65
00:05:09.170 --> 00:05:10.130
We can say server.

66
00:05:10.130 --> 00:05:11.030
Always be like.

67
00:05:12.530 --> 00:05:17.150
So multi-threading is a Java feature that allows concurrent execution of two or more of our top program

68
00:05:17.540 --> 00:05:23.630
or the maximum utilization of sleep, or you can see a process or you assisting each part of such program

69
00:05:23.630 --> 00:05:27.560
is called a so trade is a lightweight process within the process.

70
00:05:28.460 --> 00:05:29.420
So what are you going to do?

71
00:05:29.660 --> 00:05:35.120
You can perform trades using two mechanism expanding the trade glass, implementing the runnable based

72
00:05:35.480 --> 00:05:36.680
interface, basically.

73
00:05:36.890 --> 00:05:38.360
So these are the two methods.

74
00:05:38.360 --> 00:05:41.960
Or you can say, two types of Java would work similar.

75
00:05:42.020 --> 00:05:44.120
There is no difference between of them.

76
00:05:44.690 --> 00:05:47.240
There are slight differences in the naval interface.

77
00:05:47.250 --> 00:05:48.550
And here.

78
00:05:48.910 --> 00:05:51.840
Here I am, creating another class client paradigm.

79
00:05:52.130 --> 00:05:57.350
I'm going to expand that to the third class, which is basically default class.

80
00:05:59.110 --> 00:06:01.090
So let me go with that.

81
00:06:04.430 --> 00:06:04.820
OK.

82
00:06:05.330 --> 00:06:12.350
So as I told you, we are done with this with some clients, you know, what I'm going to do is I'm

83
00:06:12.350 --> 00:06:13.790
mentioning the glacier.

84
00:06:20.770 --> 00:06:26.460
The class names should be Lion Trail, because, as I mentioned already.

85
00:06:29.780 --> 00:06:30.260
Lion.

86
00:06:31.180 --> 00:06:31.540
Through.

87
00:06:32.720 --> 00:06:33.380
Extends.

88
00:06:37.320 --> 00:06:37.650
Three.

89
00:06:41.480 --> 00:06:45.160
So as you can see, I mean, what would that claim through, but.

90
00:06:45.710 --> 00:06:49.700
And you can see now this is in looking like that class is in here.

91
00:06:50.880 --> 00:06:52.560
Client, then each and everything.

92
00:06:53.830 --> 00:07:02.320
As a top, I know this program is very lengthy, so I'm expanding step by step, then I need to modernise

93
00:07:02.320 --> 00:07:05.590
to create this new only one instance, I will explain it.

94
00:07:07.600 --> 00:07:08.770
One instance.

95
00:07:12.100 --> 00:07:12.430
Of.

96
00:07:13.290 --> 00:07:14.250
This trade.

97
00:07:16.640 --> 00:07:17.030
Will.

98
00:07:19.360 --> 00:07:28.090
But then what each client, so for each client it will execute wanted, and we can create more than

99
00:07:28.570 --> 00:07:36.760
under two thousand trades in Java, according to the Java JVM, as a virtual machine.

100
00:07:37.060 --> 00:07:45.700
So we need no need to require some in the higher computer, or we can say you can invoke it as what

101
00:07:45.700 --> 00:07:46.150
you want.

102
00:07:47.600 --> 00:07:52.520
Then I need to create soccer tier soccer to get my message.

103
00:07:53.300 --> 00:07:56.180
So what I'm going to do is I'm going to mention soccer soccer.

104
00:07:59.010 --> 00:08:05.740
They're talking then object would seem to intent, because what why I'm using object input stream,

105
00:08:05.760 --> 00:08:06.750
you will understand you're.

106
00:08:07.470 --> 00:08:08.760
Let me put this.

107
00:08:09.790 --> 00:08:11.060
As we.

108
00:08:12.980 --> 00:08:20.090
You already mentioned here, let me change where I mentioned that it's input, so it's input, it's

109
00:08:20.090 --> 00:08:21.350
for doing that.

110
00:08:21.350 --> 00:08:28.310
Inside is all we can say or, you know, object outputs as this is, at least I need to create object

111
00:08:28.310 --> 00:08:31.690
outputs, think inputs, sing for that purpose.

112
00:08:31.700 --> 00:08:33.170
I created its input variable.

113
00:08:33.170 --> 00:08:38.990
You're already I mentioned here because I want to create in that part, if you want to create you,

114
00:08:38.990 --> 00:08:43.610
then create plus plant plus plant three, then you can go to the mean part.

115
00:08:43.610 --> 00:08:45.430
But I'm going as a.

116
00:08:47.770 --> 00:08:50.410
Then I need to mention object output stream.

117
00:08:52.970 --> 00:08:53.960
Its output.

118
00:08:57.860 --> 00:08:58.400
Then.

119
00:09:01.440 --> 00:09:03.850
Not to mention unique I.D..

120
00:09:06.440 --> 00:09:12.650
By university, it is easier for the connection, the connecting everything, it is very easier if we

121
00:09:12.650 --> 00:09:14.390
are to execute it in that part.

122
00:09:16.660 --> 00:09:17.440
Username.

123
00:09:20.700 --> 00:09:22.080
Which is basically stunning.

124
00:09:27.370 --> 00:09:30.010
As I told you, I already created each and everything here.

125
00:09:31.770 --> 00:09:32.220
Then.

126
00:09:33.260 --> 00:09:34.760
Message object.

127
00:09:36.440 --> 00:09:36.740
Who?

128
00:09:38.120 --> 00:09:39.290
This new message.

129
00:09:52.360 --> 00:09:53.650
So what did we do?

130
00:09:54.520 --> 00:09:56.980
Subjective message chat message.

131
00:09:58.170 --> 00:09:58.800
See in.

132
00:10:00.100 --> 00:10:04.630
So I will tell you why I'm using your chat message and what is the gentleman said here?

133
00:10:04.750 --> 00:10:07.570
I already created this chat room on stage, as you can see this class.

134
00:10:07.720 --> 00:10:12.670
So I will create one program here, and I'm using that programming into this I haven't created.

135
00:10:12.670 --> 00:10:13.660
I will create that part.

136
00:10:15.790 --> 00:10:17.080
Time for that time.

137
00:10:17.140 --> 00:10:19.600
What I'm mentioning is string date.

138
00:10:21.660 --> 00:10:27.210
Then I need to create constructive, because for the passenger loop, you can directly blast through

139
00:10:27.210 --> 00:10:33.600
the air or what you can see arguments or you can create a constructor for that purpose, for that purpose

140
00:10:33.610 --> 00:10:35.790
or the client in the name.

141
00:10:37.280 --> 00:10:38.970
So it shouldn't be there at all.

142
00:10:43.170 --> 00:10:44.100
Typekit should be there.

143
00:10:46.570 --> 00:10:49.120
What you can see arguments.

144
00:10:50.850 --> 00:10:56.190
Again, I'd say it is very important because it is equal to less plus uniquely.

145
00:11:02.420 --> 00:11:02.990
So.

146
00:11:14.300 --> 00:11:18.460
So what is this unique idea I'm going to do is I'm going to create that later.

147
00:11:18.590 --> 00:11:19.310
I will tell you.

148
00:11:21.340 --> 00:11:21.790
So.

149
00:11:23.400 --> 00:11:26.700
Let me check all the things here, OK?

150
00:11:31.060 --> 00:11:36.250
No, what I'm going to do is let's be listening to what I'm going to do is.

151
00:11:37.480 --> 00:11:39.730
Then socket or socket?

152
00:11:41.700 --> 00:11:46.950
Is equal to socket, so it will default legal for voting for the right to that part.

153
00:11:53.630 --> 00:11:56.990
And what I'm going to mention is your son's statement.

154
00:11:58.230 --> 00:12:04.500
Two chicken eating correct or not, or you can say trade is trying to create each and everything.

155
00:12:07.800 --> 00:12:09.220
I will bring this year.

156
00:12:10.790 --> 00:12:12.170
Object streams.

157
00:12:13.620 --> 00:12:18.090
So we already created this part, and what I'm going to do is know.

158
00:12:19.030 --> 00:12:19.960
All.

159
00:12:21.280 --> 00:12:22.060
I'm going to.

160
00:12:23.510 --> 00:12:27.140
Jake, here, basically, because I made a mistake in naming four.

161
00:12:30.870 --> 00:12:33.200
She's basically this should be.

162
00:12:34.290 --> 00:12:38.520
Because it should be a plus plus in that part, not so what I needed and just.

163
00:12:40.290 --> 00:12:40.980
Is that part?

164
00:12:42.360 --> 00:12:43.140
What he's doing is.

165
00:12:48.530 --> 00:12:49.000
OK.

166
00:12:49.820 --> 00:12:51.870
So why are is giving me a reason?

167
00:12:51.890 --> 00:12:56.390
Basically, because of I created a private static and unique I.D..

168
00:12:59.700 --> 00:13:05.040
And what I did is I close that glass already.

169
00:13:07.140 --> 00:13:13.740
Or inside me, inevitably going to say this glass to what I'm going to do is instead of closing this

170
00:13:13.740 --> 00:13:16.710
glass, insert this again, closed this.

171
00:13:18.150 --> 00:13:20.310
So now you can say you will be running.

172
00:13:21.680 --> 00:13:23.290
Well, the areas will be less you.

173
00:13:29.520 --> 00:13:33.780
This is for the server, this is for the clients, and this is for the client through.

174
00:13:34.710 --> 00:13:35.250
So.

175
00:13:37.010 --> 00:13:43.130
And so designed to create a January thing, I need to invoke that socket to what I'm going to do is.

176
00:13:45.830 --> 00:13:46.820
After this is done.

177
00:13:49.130 --> 00:13:55.190
I need to create one or two events creating soccer without creating a connection.

178
00:13:55.520 --> 00:14:02.630
I already mentioned everything about what I need to mention of its output is input each and everything.

179
00:14:03.290 --> 00:14:05.510
So let me do that stuff first.

180
00:14:08.020 --> 00:14:10.930
It should win in large block.

181
00:14:12.110 --> 00:14:13.840
So what is the significance of the decision?

182
00:14:18.120 --> 00:14:21.810
Adequate cash flows, we need to mention that exceptionalism.

183
00:14:23.020 --> 00:14:23.410
You're.

184
00:14:24.390 --> 00:14:26.340
OK, so I will explain it later.

185
00:14:26.670 --> 00:14:34.170
Let me do that, so first, what I mentioning it is I created a good stream and inside this, I'm putting

186
00:14:34.170 --> 00:14:34.710
that input.

187
00:14:35.670 --> 00:14:38.970
As I told you, I created already immediately for the input.

188
00:14:39.600 --> 00:14:45.960
Using this, I'm reading the user name and being that read object and then broadcasting it directly

189
00:14:46.320 --> 00:14:48.180
to the notify.

190
00:14:49.290 --> 00:14:57.030
Which is basically that stars start part and often after this catch, I need to mention that catch extra

191
00:14:57.030 --> 00:14:59.490
catch plus for the class, not fun.

192
00:14:59.630 --> 00:15:00.090
Also.

193
00:15:02.800 --> 00:15:04.090
So these are also required.

194
00:15:05.140 --> 00:15:08.070
So now you can see the object will be gone.

195
00:15:08.260 --> 00:15:15.490
And what I'm system, but I'm not telling you, I'm printing that stuff.

196
00:15:16.690 --> 00:15:17.860
How are we going to mention this?

197
00:15:18.070 --> 00:15:25.330
And after this, I need to mention the data also because it should printer date after this date.

198
00:15:26.340 --> 00:15:30.450
Dude, how are you going to create this client constructor and each and everything?

199
00:15:30.900 --> 00:15:36.240
So now we are remaining with some more tech support with great user name consumption, each and everything.

200
00:15:36.510 --> 00:15:42.210
I will tell you in these only, oh, we are going to do that stuffs and.

201
00:15:43.180 --> 00:15:44.260
Hope you understand this.

202
00:15:44.980 --> 00:15:51.370
Stick to this topic, and in the later part, I'm going to create some Java swing on song, so I will

203
00:15:51.370 --> 00:15:54.940
tell you, but inside that I'm not mentioning all the stops.

204
00:15:55.150 --> 00:15:58.870
I mentioned the only like part and some string concepts.

205
00:16:00.010 --> 00:16:01.250
So this is it.

206
00:16:01.870 --> 00:16:06.070
We can create a server, but we are remaining with client, but also plan parties.

207
00:16:07.060 --> 00:16:11.230
So we can create do not we do not own 50 lines of code.

208
00:16:11.470 --> 00:16:14.260
And that message, I'm going to mention all legitimate stages.

209
00:16:14.520 --> 00:16:19.350
So once we establish all the server connection, we can proceed with client and materials.
