1
00:00:00,990 --> 00:00:01,980
Hello, everyone.

2
00:00:02,430 --> 00:00:09,180
So I hope that you all have went through that introduction five and the working off the application,

3
00:00:09,180 --> 00:00:18,570
but black David and have gained much idea about what actually this project is about and what are the

4
00:00:18,570 --> 00:00:23,550
functionalities we are going to attach by making this project?

5
00:00:23,900 --> 00:00:27,870
What are the classes and what's inside the classes?

6
00:00:27,900 --> 00:00:34,350
Although like methods, we are going to add in order to make this project properly functional.

7
00:00:34,740 --> 00:00:41,940
So this is like the internal initialization of the programming section.

8
00:00:42,570 --> 00:00:48,420
We are going to make a new project in our favorite tidy visual studio code.

9
00:00:48,630 --> 00:00:58,340
And then after we are going to like and classes and functions in order to make this system functional.

10
00:00:59,310 --> 00:01:07,250
So this is the welcome page of our individual studio hall and inside this welcome piece.

11
00:01:07,470 --> 00:01:12,240
We are going to create a new project on clicking this explore.

12
00:01:12,420 --> 00:01:20,550
That option will appear and we have selected our project from that sidebar option.

13
00:01:20,880 --> 00:01:29,430
And inside this, we have to like choose the type of based tools we are going to attach in our project.

14
00:01:29,940 --> 00:01:34,390
So this is a basic project to you.

15
00:01:34,590 --> 00:01:39,120
We are going to use core Java in the programming section of this project.

16
00:01:39,540 --> 00:01:44,740
So we will not be attaching any external tools otherwise.

17
00:01:44,740 --> 00:01:51,530
We have several tools in Georgia, such as MAVEN Springboard Quarks, Mike Low-Profile, and these are

18
00:01:51,540 --> 00:01:57,510
like, very important to those in making most of the project.

19
00:01:57,520 --> 00:02:04,590
So in this project, we are going to work with the source code directly without any of those.

20
00:02:04,950 --> 00:02:12,600
So we will be selecting Norbert, those now our friend that files user of their system will open and

21
00:02:12,600 --> 00:02:13,850
ask you for that.

22
00:02:13,850 --> 00:02:21,660
The what is the location of the project that you want to keep of the folder which will be created,

23
00:02:22,050 --> 00:02:25,590
which will be containing all the files regarding this project.

24
00:02:26,010 --> 00:02:31,830
So Jews are like a correct location for your project in order to like.

25
00:02:31,830 --> 00:02:38,430
If you want to find that project in future, then you can find it without any mess easily.

26
00:02:38,730 --> 00:02:47,040
So I am choosing next up as my project location and on helping the select project location.

27
00:02:47,040 --> 00:02:54,180
But then we will enter this input field, which will be asking for the Java project to name.

28
00:02:54,510 --> 00:03:02,820
So I choose like a good project demand, but which is going to be the name of the folder containing

29
00:03:02,820 --> 00:03:03,450
that project.

30
00:03:03,780 --> 00:03:09,810
So like, choose your name wisely, which defines your project.

31
00:03:10,050 --> 00:03:17,160
That's what actually this project is doing, so that if in future you like going through all of your

32
00:03:17,160 --> 00:03:25,230
projects just by listening to the names like reading the name of the project, you can like remember

33
00:03:25,230 --> 00:03:31,620
everything that what is happening inside the project, so do not choose any fancy or anonymous thing

34
00:03:31,920 --> 00:03:33,470
as a name of it.

35
00:03:33,960 --> 00:03:36,240
Just simply name your project.

36
00:03:37,290 --> 00:03:45,780
Read more Actually, like files are doing inside of the project, so I am going to name this project

37
00:03:46,470 --> 00:03:50,580
in management system.

38
00:03:51,030 --> 00:03:56,880
So it team management system is going to be the name of my project.

39
00:03:57,240 --> 00:04:04,830
You can choose any name for your project according to your choice, but make sure that it defines the

40
00:04:04,830 --> 00:04:06,990
meaning of the project pretty well.

41
00:04:07,500 --> 00:04:12,000
And there should be no anonymous kind of names for the folder.

42
00:04:12,390 --> 00:04:18,180
So it then management system is my choice of name for this project on heading and.

43
00:04:18,780 --> 00:04:23,910
We will enter the window of the project, which we are going to me.

44
00:04:24,510 --> 00:04:27,660
This is the folder it power management system.

45
00:04:28,020 --> 00:04:36,540
There are some sub folders inside this, which I like already present in baseline of folders on creating

46
00:04:36,540 --> 00:04:37,770
this project.

47
00:04:38,070 --> 00:04:46,830
So we have created this project project targeting this explorer option from the sidebar and then creating

48
00:04:46,830 --> 00:04:51,060
a job up to now selecting a location and naming the project.

49
00:04:51,360 --> 00:05:00,040
We enter this project like interface in our compiler, so this darndest and not be chords of.

50
00:05:00,130 --> 00:05:04,320
All of these projects are at the mercy of this gun pilot.

51
00:05:04,620 --> 00:05:08,700
We are having no use of these two folders in our project.

52
00:05:09,120 --> 00:05:18,020
These are just like inbuilt folders of the compilers which have no use, no use for us right now.

53
00:05:18,030 --> 00:05:21,200
So yes, they start this standard bar Bardot.

54
00:05:21,210 --> 00:05:24,480
We have called folders can be ignored right now.

55
00:05:24,810 --> 00:05:32,250
Now, after this, that ASIC folder, which is going to be the main folder of our project, this ASIC

56
00:05:32,250 --> 00:05:40,410
folder is going to like contain all the mean files on the folders, which are going to be involved containing

57
00:05:40,410 --> 00:05:44,430
the classes and functionalities of our data management system.

58
00:05:44,910 --> 00:05:51,240
So basically, we can understand this as this ASIC folder is the body of this project.

59
00:05:51,480 --> 00:05:58,020
And inside this body, we are going to have our different body parts which are going to like, handle

60
00:05:58,020 --> 00:05:59,760
this complete system.

61
00:06:00,150 --> 00:06:08,870
So inside this, I see folders that is already present file and this file is containing a class called

62
00:06:08,880 --> 00:06:09,180
app.

63
00:06:09,570 --> 00:06:16,920
So the name of the file is after Java, and it is going to be a class app inside this class that we

64
00:06:16,920 --> 00:06:18,410
are having our function.

65
00:06:18,420 --> 00:06:21,960
I mean, function, which are containing string as argument.

66
00:06:22,230 --> 00:06:27,900
And this will run whenever this application with or other in diameter.

67
00:06:28,260 --> 00:06:33,450
So we are like handling the exceptions with the help of this class.

68
00:06:33,780 --> 00:06:40,890
And whenever there will be an exception, this will print hello so we can like let's signify that are

69
00:06:40,890 --> 00:06:42,960
yes, there is some runtime error.

70
00:06:42,960 --> 00:06:51,390
So we have to like debug things and try running the project again in order to avoid any kind of exception.

71
00:06:51,570 --> 00:06:56,220
So yes, this is going to be like the the structure of the project.

72
00:06:56,460 --> 00:07:01,020
Once you create a new job project in the magnet in your compiler.

73
00:07:01,380 --> 00:07:02,760
So now what?

74
00:07:02,760 --> 00:07:09,900
Actually, we have to do, firstly, we have to like we have discussed in the prototype section that

75
00:07:09,900 --> 00:07:16,320
we have to create the mean class, which is going to be responsible for testing and running off of them.

76
00:07:17,010 --> 00:07:23,550
So the main class is going to be the class, of course.

77
00:07:24,030 --> 00:07:29,580
So I am going to name this class as if the dark java.

78
00:07:29,910 --> 00:07:34,140
So the file is created and we are inside the file.

79
00:07:34,650 --> 00:07:43,140
We have a public class atrium created already, and this class is going to like, as we say, responsible

80
00:07:43,140 --> 00:07:45,450
for testing and running of the application.

81
00:07:46,020 --> 00:07:55,440
So yes, now inside this class, we will be creating a main function of, of course, as we have to

82
00:07:55,440 --> 00:08:00,090
create a mean function, though like I stand on the program.

83
00:08:00,090 --> 00:08:01,730
So public start date.

84
00:08:01,970 --> 00:08:11,460
Void main and again, string arguments are going to be parsed inside this function a square bracket

85
00:08:11,460 --> 00:08:13,500
and access box.

86
00:08:14,040 --> 00:08:16,510
So the arguments are strengthened.

87
00:08:16,560 --> 00:08:20,020
This little exception.

88
00:08:22,220 --> 00:08:34,040
I use exception, and this exception will be thrown whenever there will be like any kind of exception.

89
00:08:34,730 --> 00:08:36,410
While running of this project.

90
00:08:36,770 --> 00:08:41,180
So inside this, we are going to create option menu.

91
00:08:41,960 --> 00:08:49,820
So we have discussed already in the prototype section that we are going to like integrate every options

92
00:08:49,820 --> 00:08:51,860
inside the options menu plans.

93
00:08:52,250 --> 00:09:00,560
And that option menu class will be responsible for handling everything about Nokia, like the input

94
00:09:00,560 --> 00:09:05,390
and the like functions attached to every choices.

95
00:09:06,020 --> 00:09:18,170
So option menu and this new All My Card is created inside the main class now calling the introduction.

96
00:09:19,530 --> 00:09:27,840
And the introduction will be called as a tone or a construct, as we can say that all we will be creating

97
00:09:27,840 --> 00:09:30,330
this inside the other classes.

98
00:09:30,810 --> 00:09:41,810
So I've shown my new yes, dark main menu will be like reflecting as soon as they execute the program.

99
00:09:42,480 --> 00:09:50,200
So we will be creating this option menu later in this project, just in the main class.

100
00:09:50,220 --> 00:09:57,750
We are making things clear that the what is going to happen when I read on the project.

101
00:09:58,260 --> 00:10:09,090
So yes, the introduction of class or the function we have created is going to be like containing six

102
00:10:09,090 --> 00:10:09,510
out.

103
00:10:10,170 --> 00:10:18,060
So six out is the sharp good for system, dark out the plain talon, which is going to like print anything

104
00:10:18,570 --> 00:10:22,350
we are now are about what we know.

105
00:10:22,350 --> 00:10:23,370
We can see that.

106
00:10:23,730 --> 00:10:25,800
So let us capitalize.

107
00:10:25,800 --> 00:10:28,690
Everything will come for a better life.

108
00:10:28,720 --> 00:10:33,660
You are so welcome to the IT Dam project.

109
00:10:34,800 --> 00:10:39,330
And yes, so welcome to the Ethereum project.

110
00:10:39,360 --> 00:10:42,750
Our estimation mine goes well with it.

111
00:10:43,230 --> 00:10:43,620
And.

112
00:10:44,640 --> 00:10:47,230
So we are done with the main class.

113
00:10:47,640 --> 00:10:53,280
As far as I can see that, oh yes, you can see that there.

114
00:10:53,520 --> 00:10:58,380
We have called this your exhibition type of exception handler.

115
00:10:58,740 --> 00:11:05,820
So automatically get this job i dati or notyou exception back, which is important to our data class

116
00:11:06,120 --> 00:11:13,800
and Ghatak to this import does so in case there is any kind of Input-Output exception, as we are like

117
00:11:13,800 --> 00:11:16,860
inputting our values from our keyboard.

118
00:11:17,100 --> 00:11:24,600
And according to that, the compiler is outputting like regarding function to that specific choice.

119
00:11:25,020 --> 00:11:29,850
So everything is going to be handled with the help of input output function.

120
00:11:30,210 --> 00:11:38,850
So any kind of exception would be handled with the help of Iowa exception packet of the Java Library.

121
00:11:39,060 --> 00:11:42,690
So yes, this is going to be our mean class.

122
00:11:42,990 --> 00:11:48,120
This will be like learning at the time of testing and running of the project.

123
00:11:48,600 --> 00:11:55,290
So let us fast through some like really working things to the project.

124
00:11:55,680 --> 00:12:00,300
So the second concern was to create an account class.

125
00:12:00,840 --> 00:12:12,630
So icon, not Java, is going to be the name of the second class we are creating inside this account

126
00:12:12,630 --> 00:12:13,560
that Java.

127
00:12:16,720 --> 00:12:27,250
So we are having our account glass and everything about the like, we have mentioned it to her that

128
00:12:27,400 --> 00:12:31,090
this account glass is going to handle this type of account.

129
00:12:31,480 --> 00:12:39,310
The customer ratification process and operations regarding the balance of the nation will be mentioned

130
00:12:39,310 --> 00:12:47,140
inside the account, plus only the exception handling for the invalid choices will be also handled inside

131
00:12:47,140 --> 00:12:51,550
this account, plus soirées everything Mahender.

132
00:12:51,850 --> 00:12:59,080
So our first step should be like declaring some global variables inside this account class.

133
00:12:59,590 --> 00:13:05,950
So we will move forward with the help of this private access.

134
00:13:05,950 --> 00:13:14,010
Specify it indeed, therefore customer number and for a pin number.

135
00:13:14,020 --> 00:13:19,690
So initially we were being asked for our customer number and a pin number.

136
00:13:19,960 --> 00:13:22,560
And both of them are going to be integers.

137
00:13:22,570 --> 00:13:27,760
So I will be copying this and again for a pin number.

138
00:13:28,630 --> 00:13:29,120
Yes.

139
00:13:29,140 --> 00:13:35,290
Changing this customer's open and things are going to be working the same.

140
00:13:35,800 --> 00:13:44,950
The third and the fourth to endanger, like double global variables, will be checking balance and savings

141
00:13:44,950 --> 00:13:45,580
balance.

142
00:13:46,820 --> 00:13:50,810
So private double.

143
00:13:54,350 --> 00:14:03,230
And checking balance, so checking balance and saving balance in the similarly.

144
00:14:04,630 --> 00:14:06,970
This issue should be in small.

145
00:14:07,990 --> 00:14:16,060
And initially, the checking balance value will be set to zero, as initially we have no balance in

146
00:14:16,060 --> 00:14:16,780
our account.

147
00:14:17,230 --> 00:14:26,710
Once the user deposits the money, then only the balance will be updated, whether it be the savings

148
00:14:26,710 --> 00:14:28,780
balance or the cheque balance.

149
00:14:29,260 --> 00:14:34,480
So here we are, done with the declaration of all the global variables.

150
00:14:34,510 --> 00:14:42,910
Now the next concern is to introduce the scanner, which is going to scan the choices imported by the

151
00:14:42,910 --> 00:14:51,500
user and then our next scans and will be to get the answers to all the values of which we have declared.

152
00:14:51,700 --> 00:14:58,090
And like the variables, customer number, pin number and they have declared everything as private in

153
00:14:58,090 --> 00:14:58,660
the beginning.

154
00:14:58,670 --> 00:15:06,340
So in order to access these variables are objects we can see by any other classes.

155
00:15:06,370 --> 00:15:15,040
Then you have to use get them set, start in Java so that it can be accessed by any class without any

156
00:15:15,040 --> 00:15:15,850
exception.

157
00:15:16,090 --> 00:15:18,910
So yes, we will be seeing that in the next five.
