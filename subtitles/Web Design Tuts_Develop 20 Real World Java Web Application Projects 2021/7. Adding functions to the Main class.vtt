WEBVTT
1
00:00:00.590 --> 00:00:01.520
Hello, everyone.

2
00:00:01.760 --> 00:00:12.380
So we have successfully created functions for songs, finding songs and adding songs to the playlist.

3
00:00:12.620 --> 00:00:19.820
And now we are going to use those great functions inside our main Java class.

4
00:00:20.150 --> 00:00:27.980
So inside the main class we have created like two albums, Album one and album, both named for the

5
00:00:27.980 --> 00:00:32.390
first album is Album one and then for the second album.

6
00:00:32.420 --> 00:00:40.640
So these are two random artist, and these are some random songs that I am adding to the music library.

7
00:00:41.000 --> 00:00:50.600
So I guess now this album, dark and album is used to add songs to the album now so that we have the

8
00:00:50.600 --> 00:00:54.380
band and add a list for our songs in the album.

9
00:00:54.620 --> 00:00:59.900
Now we are using the list for our songs to the playlist.

10
00:01:00.200 --> 00:01:07.270
Like me, I've stated this in songs Class Me as like the album Glass.

11
00:01:07.280 --> 00:01:14.540
Yes, so we have created a lengthy list, and I explained to you that consequence of using a list like

12
00:01:14.540 --> 00:01:19.000
it has appointed to the previous elements and the next element.

13
00:01:19.280 --> 00:01:24.830
So the songs are connected to the previous track and the next track.

14
00:01:25.130 --> 00:01:32.750
Our current song may navigate to the previous track and the current track we navigate through that next

15
00:01:32.750 --> 00:01:36.260
track like we can navigate between these songs.

16
00:01:36.710 --> 00:01:43.790
Now, after that, we have created a playlist and added songs to the playlist using album that gets

17
00:01:44.390 --> 00:01:48.050
under the name of the playlist as Playlist one.

18
00:01:48.590 --> 00:01:57.650
So let me go on this playlist, my using this play list slash one.

19
00:01:58.250 --> 00:02:00.650
Yes, this is the way of calling.

20
00:02:01.740 --> 00:02:09.360
Now, so that we have created this, we have to clear a creator may function so far, creating that

21
00:02:09.360 --> 00:02:10.380
play function.

22
00:02:10.440 --> 00:02:18.550
We are going to use private static void and play.

23
00:02:18.810 --> 00:02:20.790
The name of the function is play.

24
00:02:21.300 --> 00:02:24.090
We have already created a mean function.

25
00:02:24.450 --> 00:02:28.410
Now we are creating a play function.

26
00:02:28.830 --> 00:02:39.480
So the arguments and saying that function is song like the playlist in the form of link list and the

27
00:02:39.780 --> 00:02:45.240
name of the linked list is playlist so perfect?

28
00:02:45.600 --> 00:02:51.630
We have created this function for playing the songs in that playlist.

29
00:02:52.260 --> 00:02:54.870
Now we have those scan.

30
00:02:56.190 --> 00:03:01.290
I hope that you are aware about the scan function inside Java.

31
00:03:01.620 --> 00:03:09.990
Like, if there's also a concept involved in the basic Java like basics of Java and scanning is used

32
00:03:09.990 --> 00:03:11.130
to scan.

33
00:03:11.250 --> 00:03:19.380
Let's take some input from the user and according to that input, it gives output to the user in the

34
00:03:19.530 --> 00:03:20.310
compiler.

35
00:03:21.060 --> 00:03:27.990
Like there are things in there, the program is running, but then it may be determined there the separately

36
00:03:28.020 --> 00:03:35.150
not so a scanner is going to work in that way now so that we have implemented the scanner.

37
00:03:35.470 --> 00:03:44.610
Firstly, we have to import this scanner using our Yotel dot scanner and it is done in sort of, you

38
00:03:44.640 --> 00:03:45.420
know, scanner.

39
00:03:45.690 --> 00:03:49.110
Firstly, we have to import the scanner using that Java.

40
00:03:49.110 --> 00:03:56.220
You do package similarly for the list decorator that we are threatening to do the link list, so we

41
00:03:56.220 --> 00:03:58.230
have to import that also.

42
00:03:58.650 --> 00:04:07.530
So we have importing the scanner, we have imported that list there and now we are able to go so moving

43
00:04:07.530 --> 00:04:08.130
forward.

44
00:04:09.380 --> 00:04:19.520
So now that we have input and so value from the user now after scanning the value, like we have several

45
00:04:19.520 --> 00:04:27.950
options, we can see that we have zero one two three four five six options from which use that has to

46
00:04:27.950 --> 00:04:29.390
select one of them.

47
00:04:29.930 --> 00:04:33.770
And after scanning, that's what value is input.

48
00:04:34.340 --> 00:04:43.430
Now we will perform several tasks like firstly, if we like, if we are inputting zero, then it is

49
00:04:43.430 --> 00:04:48.350
four point Soyuz, which is initialized as feels like.

50
00:04:48.350 --> 00:04:51.800
By default, it will not be quick and like.

51
00:04:51.800 --> 00:04:56.240
It will mean in the terminal window and this will remain open.

52
00:04:56.510 --> 00:05:01.730
So by default, there is no grid, so it isn't initialize as follows.

53
00:05:02.120 --> 00:05:07.760
Similarly, for four, it is initialized, as do four by default list.

54
00:05:07.830 --> 00:05:18.560
That data is going to trade through the list of songs and then each playlist size is real, then system.

55
00:05:18.560 --> 00:05:26.690
It is going to in like this string, and the string says that this playlist have no song.

56
00:05:27.200 --> 00:05:30.110
So this playlist has no song.

57
00:05:31.340 --> 00:05:37.760
So yes, if there are no songs in the playlist, then obviously nothing is going to be.

58
00:05:38.000 --> 00:05:39.630
I'll put it in the terminal.

59
00:05:39.770 --> 00:05:44.540
It will obviously apparent that there are no songs in the playlist.

60
00:05:44.540 --> 00:05:53.180
Of course, as if there are any songs present in the plan is, then this is going to bring.

61
00:05:53.480 --> 00:06:01.910
Now playing as a string and no object is saying that let's start later Dark nights, not Nordstrom.

62
00:06:02.630 --> 00:06:05.420
So I can explain this here.

63
00:06:05.810 --> 00:06:14.390
So this now plain song and the title and the duration we are using those string to convert the double

64
00:06:14.390 --> 00:06:18.260
data type of generation in the form of a string.

65
00:06:18.770 --> 00:06:27.230
So now playing is already a string and so that we have converted everything to a string using this door

66
00:06:27.230 --> 00:06:29.030
string method in Java.

67
00:06:29.540 --> 00:06:32.120
So this is going to bring the down menu.

68
00:06:32.630 --> 00:06:38.600
So after this, it is going to bring what is going to happen next.

69
00:06:39.980 --> 00:06:44.180
And we are going to make the print menu function later.

70
00:06:44.660 --> 00:06:50.900
Firstly, we have covered this supplemental plate function successfully.

71
00:06:51.290 --> 00:06:53.980
Now let's see what is the next one?

72
00:06:54.200 --> 00:06:55.430
We have to cover.

73
00:06:56.240 --> 00:07:07.130
So after this incident, like suppose if you were not quite sure not, which is equally written as an

74
00:07:07.370 --> 00:07:12.350
exclamation mark and the exclamation mark signifies not.

75
00:07:13.250 --> 00:07:20.650
This is also one of the basic concepts of Java, and we call this exclamation mark as not operate.

76
00:07:21.440 --> 00:07:26.660
We saw and often it did already, which was a logical operator.

77
00:07:27.110 --> 00:07:35.630
Now we are coming across this not operator, which is a logical operator as well.

78
00:07:36.080 --> 00:07:41.870
So Skynet is going to scan the integer and then.

79
00:07:43.990 --> 00:07:45.970
Bracket after which?

80
00:07:47.000 --> 00:07:51.380
And thus, Canada is going to be written as Sexy Dog Next line.

81
00:07:53.110 --> 00:07:54.220
So next line.

82
00:07:54.730 --> 00:08:06.220
OK, so now let's suppose that we have selected any key like any options now, what should be done next?

83
00:08:06.670 --> 00:08:13.060
Like what are the consequences of pressing and selecting and new options?

84
00:08:13.690 --> 00:08:16.990
So suppose that the user has selected zero.

85
00:08:17.530 --> 00:08:20.590
So what is going to happen if you were selected as eagle?

86
00:08:21.190 --> 00:08:29.800
So the program will be great and the random thing will stop executing and you will be out of the program

87
00:08:30.130 --> 00:08:31.330
learning portion.

88
00:08:31.930 --> 00:08:34.510
Now, suppose whatever the user presses one.

89
00:08:34.990 --> 00:08:40.030
So we have to switch to the next song if user presses one.

90
00:08:40.390 --> 00:08:49.870
Similarly, for kids, do we have to like replay the song, which is currently playing so we have to

91
00:08:49.870 --> 00:08:53.530
write some simple functions in order to do so.

92
00:08:54.160 --> 00:08:57.490
Now, if the user presses option three.

93
00:08:57.880 --> 00:09:00.130
So yes, we have done with two options.

94
00:09:00.770 --> 00:09:01.040
Yes.

95
00:09:01.060 --> 00:09:05.530
So in four, we have to simply put into the playlist.

96
00:09:05.970 --> 00:09:07.840
No, nothing more is required.

97
00:09:07.840 --> 00:09:09.230
An option for us.

98
00:09:10.000 --> 00:09:14.140
And again, in five, we have to simply print the menu again.

99
00:09:14.560 --> 00:09:17.980
We have a print menu function already created.

100
00:09:18.430 --> 00:09:25.180
So like we are going to create menu function simply on pressing the first option.

101
00:09:25.510 --> 00:09:29.680
The menu will again going to be printed in the terminal window.

102
00:09:30.400 --> 00:09:34.960
And last but not the least, we are going to delete the current song.

103
00:09:35.350 --> 00:09:44.740
So for deleting the current song, we simply have to check and if and as foundation and if the playlist

104
00:09:44.740 --> 00:09:53.440
size is seven zero, then we have to simply remove key one, which is going to iterate through the list

105
00:09:53.440 --> 00:09:57.340
and simply remove the currently playing song.

106
00:09:57.700 --> 00:10:06.040
And it will link the current song to the song like remove the current song and connect the previous

107
00:10:06.040 --> 00:10:07.570
song to the next song.

108
00:10:07.930 --> 00:10:12.910
Like, we have three iTunes of a present song like current song of previous song.

109
00:10:13.180 --> 00:10:15.430
Suppose that this is previous song.

110
00:10:15.700 --> 00:10:18.910
This is current song, and this is the next song.

111
00:10:19.240 --> 00:10:24.470
So if we are playing this second one and be deleted now, what is going to happen and then?

112
00:10:25.390 --> 00:10:33.580
So the link between this and this and this and this will be broken, so we have to connect that in order

113
00:10:33.580 --> 00:10:36.040
to continue the process.

114
00:10:36.370 --> 00:10:42.790
So we will connect the state and memories together and rest will remain the same.

115
00:10:43.150 --> 00:10:50.460
Yes, the link between stand pages and pages and memory will be broken and everything will remain sim.

116
00:10:50.890 --> 00:10:55.300
No more changes will be required and we will see that.

117
00:10:56.260 --> 00:11:01.150
So we are going to create a switch type of statement.

118
00:11:01.600 --> 00:11:06.330
We have already talked about it, like the Switch case statement.

119
00:11:07.060 --> 00:11:14.500
The problem does this in the switch, and if any exception arise, then it will break through the case

120
00:11:14.500 --> 00:11:16.630
and jump to the next phase.

121
00:11:17.020 --> 00:11:17.950
So we will see that.
