WEBVTT
1
00:00:01.150 --> 00:00:02.140
Hello, everyone.

2
00:00:02.480 --> 00:00:10.570
So I hope that you all have went to the introduction radio and the working of the application review

3
00:00:10.840 --> 00:00:17.140
and gained a rough overview about the application that we are going to make today.

4
00:00:18.070 --> 00:00:23.860
So my application was a music playlist library ready made in Java.

5
00:00:24.160 --> 00:00:32.200
Yes, for Java, not any other complex libraries will be used while making this application, and we

6
00:00:32.200 --> 00:00:37.780
are going to make this application in our favourite compiler New York studio code.

7
00:00:38.080 --> 00:00:38.500
Yes.

8
00:00:38.830 --> 00:00:47.140
So this is the welcome window of the INI, the compiler, which we are going to for writing the code

9
00:00:47.140 --> 00:00:49.690
of the Music playlist application.

10
00:00:50.980 --> 00:00:57.460
So let's start creating the code of the application in the IEEE.

11
00:00:57.910 --> 00:01:06.630
So once you open the welcome page of the IDG, you'll have to click this file item on the top of the

12
00:01:06.640 --> 00:01:07.780
left then.

13
00:01:08.170 --> 00:01:16.990
So this is Explorer tab, and we have to click this after clicking that Explorer tab option.

14
00:01:17.200 --> 00:01:25.850
We have to click on Create Java project option, so I hope that you all have installed the idea and

15
00:01:25.890 --> 00:01:33.340
the latest version in order to make job application and learn how to make magic to.

16
00:01:34.390 --> 00:01:40.690
These two are the most required things before starting to make this application.

17
00:01:41.020 --> 00:01:47.890
So I'm hoping that you all have installed that Visual Studio code and your tickets are ending.

18
00:01:48.130 --> 00:01:56.080
I am moving forward, but in case if you have missed that part or have not installed, then go through

19
00:01:56.080 --> 00:02:04.820
the previous videos, then you will get the tutorial for installing both of them, the idea and the

20
00:02:04.840 --> 00:02:06.550
JDK Virgin as well.

21
00:02:07.000 --> 00:02:16.360
So for those who have already installed, I am moving forward and starting to get that job up from scratch.

22
00:02:17.960 --> 00:02:23.960
So clicking on this created job up there, I am going to select no rental options.

23
00:02:24.290 --> 00:02:32.570
We are going to make this application without any external frameworks of Java like we have maven springboard

24
00:02:32.570 --> 00:02:34.340
quirks and micro profile.

25
00:02:34.610 --> 00:02:38.810
But in this project, we have no use of these extensions.

26
00:02:39.110 --> 00:02:46.610
We are just going to begin this with no tool options and on clicking on this no rental option.

27
00:02:46.940 --> 00:02:51.230
We will open our next door file, choose our option.

28
00:02:51.590 --> 00:02:55.570
So this is for choosing the location of the file.

29
00:02:56.870 --> 00:03:00.830
So choosing the folders for storing the application.

30
00:03:01.250 --> 00:03:06.350
So if you wish to store in an already made folder, you can do so.

31
00:03:06.590 --> 00:03:10.880
Or if you want to create a new folder, then you can also do so.

32
00:03:11.240 --> 00:03:19.760
So I am going to select the POC desktop for storing this application, and I'm clicking on the select

33
00:03:19.760 --> 00:03:20.990
project location.

34
00:03:21.350 --> 00:03:24.200
We will set a location for our project.

35
00:03:24.800 --> 00:03:32.510
You must note the location for the project as later when you mistakenly close Visual Studio code.

36
00:03:32.780 --> 00:03:38.600
Then if you wish to open the project, then you'll go through that part of the project like suppose

37
00:03:38.840 --> 00:03:45.920
if you have stored the project in C drive, then you have to win C Drive in order to open the project.

38
00:03:46.310 --> 00:03:53.810
Similarly, if you have stored index of like me, then you have to open your desktop and then open your

39
00:03:53.810 --> 00:03:56.120
folder made for this project.

40
00:03:56.510 --> 00:04:03.860
So we have selected desktop folder for storing this for a project like the location of Project is going

41
00:04:03.860 --> 00:04:05.000
to be in the next stop.

42
00:04:05.360 --> 00:04:12.470
And after selecting the desktop option now, I have to say to me for this job logic.

43
00:04:12.740 --> 00:04:17.480
Like this dialog box is asking for input any Java project name?

44
00:04:17.510 --> 00:04:17.870
Yes.

45
00:04:18.320 --> 00:04:21.230
So we have to input that name for this Java project.

46
00:04:21.740 --> 00:04:31.370
So if suppose I want to name this project as like my music library?

47
00:04:31.610 --> 00:04:32.210
Perfect.

48
00:04:32.990 --> 00:04:35.690
So you can name your application anyway.

49
00:04:35.840 --> 00:04:38.720
What I like listening for in my application.

50
00:04:39.050 --> 00:04:41.960
So I am naming this as my music library.

51
00:04:42.320 --> 00:04:50.360
So after hitting enter, a folder will be planted in the desktop as I have selected that location for

52
00:04:50.360 --> 00:04:51.820
my project creation.

53
00:04:51.950 --> 00:04:57.710
So the folder will be created in the next up only and ostentation of that folder.

54
00:04:57.980 --> 00:05:05.150
We will create files inside the folder, then maybe make some in resize, install and folders inside

55
00:05:05.150 --> 00:05:13.670
this my music library folder with restoring index.html and similar folders and using create or the files

56
00:05:13.670 --> 00:05:17.270
will be created will store in that location.

57
00:05:17.270 --> 00:05:21.380
Only then will we know other locations where the files will be stored.

58
00:05:21.980 --> 00:05:25.860
Like any, Tang will not be stored in your C drive or new areas.

59
00:05:26.680 --> 00:05:31.730
This is a simple application that simplifies more complex files.

60
00:05:32.270 --> 00:05:37.460
So my music library will be the name of the folder now after hitting Enter.

61
00:05:38.990 --> 00:05:42.620
And we are going to turn in our new Democratic Soyuz.

62
00:05:42.660 --> 00:05:52.040
We are here now, we have an empty bed for our application, which has some inbuilt folders like this

63
00:05:52.080 --> 00:05:55.790
darkness, which is due to the mercy of our compiler.

64
00:05:56.090 --> 00:06:04.190
Like the install folders with the mercy of our compiler and the rest are new to the Java project, which

65
00:06:04.190 --> 00:06:05.810
we have selected from this.

66
00:06:06.080 --> 00:06:08.180
And Clickbank project.

67
00:06:08.540 --> 00:06:16.310
So these are the inbuilt folders and files like if we click inside that sample, we will see that there's

68
00:06:16.310 --> 00:06:24.620
an inbuilt sign their Java, which contains a class folder, and this path will run whenever the app

69
00:06:24.620 --> 00:06:26.360
led to an exception.

70
00:06:27.020 --> 00:06:30.280
So you may be wondering what the exception is like.

71
00:06:30.420 --> 00:06:34.340
Like the Apple two exception, what is the reason behind it?

72
00:06:34.730 --> 00:06:38.270
So let me give you a quick look up on it.

73
00:06:38.780 --> 00:06:47.270
So suppose you are making the application and suppose there are some errors, like some bugs in your

74
00:06:47.270 --> 00:06:48.080
application.

75
00:06:48.590 --> 00:06:59.420
So if the exception is seen by the compiler, it will tell that exception and will bring this thing

76
00:06:59.420 --> 00:07:00.500
like it will print.

77
00:07:00.500 --> 00:07:07.280
Hello all this in the by default string, which is created by the Java project itself.

78
00:07:07.640 --> 00:07:10.460
We can change it according to our means.

79
00:07:10.820 --> 00:07:18.500
So whenever they happen to know a runtime error, then this area will be displayed in your compiler

80
00:07:19.160 --> 00:07:20.540
compilers terminal.

81
00:07:20.930 --> 00:07:22.130
And this is all that.

82
00:07:22.170 --> 00:07:28.670
The app has some exceptions, like the one debugging and then try to run it once again.

83
00:07:29.210 --> 00:07:35.220
So checking exceptions are the most important thing while making a job budget.

84
00:07:35.840 --> 00:07:44.060
So yes, we are done with this app, not level five, which we have already present before, before

85
00:07:44.060 --> 00:07:52.310
starting the and we are having these folders and we have this after our fine as in mint file in this

86
00:07:52.310 --> 00:07:53.180
application.

87
00:07:53.270 --> 00:07:53.750
So.

88
00:07:54.840 --> 00:07:55.330
Nice.

89
00:07:55.420 --> 00:08:00.420
Now we are it to our project now.

90
00:08:01.290 --> 00:08:03.870
We have already made a prototype.

91
00:08:04.020 --> 00:08:11.660
You can see that we already made this prototype and this will guide us to how to move forward while

92
00:08:11.670 --> 00:08:12.870
making this project.

93
00:08:14.630 --> 00:08:20.300
So firstly, let me zoom this for better visibility of the viewers.

94
00:08:20.810 --> 00:08:25.130
So, yes, we are done with creating a Java project in our.

95
00:08:26.180 --> 00:08:34.940
Now, in order to me to start making the application, we have to be classified as without glasses.

96
00:08:34.970 --> 00:08:36.710
That is nothing in Java.

97
00:08:37.160 --> 00:08:45.140
We have to create glasses and then initialize constructors inside, initialize functions inside it and

98
00:08:45.140 --> 00:08:51.760
then add the querying inside them so that we can make that function.

99
00:08:52.490 --> 00:08:59.960
So let's first create a file and call it as some dark java.

100
00:09:00.800 --> 00:09:07.640
And by hitting enter, we are here in a new file, which in public last song.

101
00:09:07.970 --> 00:09:16.840
So this line means that we have created a class called Song and the access specifies see that this this

102
00:09:16.850 --> 00:09:17.360
public.

103
00:09:17.720 --> 00:09:26.450
So this class is accessible by all the files in this app, and we can call it anywhere without getting

104
00:09:26.450 --> 00:09:27.880
any error.

105
00:09:27.890 --> 00:09:34.640
And the exception like this without using public, supposing we are using private, then we have to

106
00:09:34.650 --> 00:09:44.900
set some like go and certain methods in Java so that in order to access that class or anything like

107
00:09:44.900 --> 00:09:49.820
we can add public for anybody able any class, any function.

108
00:09:50.240 --> 00:09:57.920
So I am just explaining the concept behind these access specify like what is the difference between

109
00:09:57.920 --> 00:10:00.960
creating a public class and a private class?

110
00:10:01.340 --> 00:10:07.610
So I hope you must have understood what is the difference between a public class and a private plan.

111
00:10:08.270 --> 00:10:13.010
So we went through the garden setting in our previous project.

112
00:10:13.400 --> 00:10:16.460
You must go to them to understand them.

113
00:10:16.460 --> 00:10:22.220
There are 10 set concepts now so that we have created this song class.

114
00:10:22.550 --> 00:10:30.710
Now we will try to add some songs like song layout for the application.

115
00:10:31.130 --> 00:10:40.120
Like, you can see that in the presentation section that we have a song and a brace and insert the release

116
00:10:40.490 --> 00:10:41.060
we have.

117
00:10:41.060 --> 00:10:49.790
The title of this song has a string and duration of this song, as we can see that in our mathematical

118
00:10:49.790 --> 00:10:52.880
term, enough like we call in decimal.

119
00:10:52.880 --> 00:10:53.600
I think yes.

120
00:10:53.990 --> 00:11:01.800
So the duration is as the form of decimals and the title in the form of string.

121
00:11:02.300 --> 00:11:06.830
So we have to create that inside this song class.

122
00:11:07.340 --> 00:11:19.550
Now initializing this class song, the string called it the name of the song, and for that duration

123
00:11:19.550 --> 00:11:20.470
was decimal.

124
00:11:20.490 --> 00:11:23.750
So we have to initialize this as double.

125
00:11:24.200 --> 00:11:29.360
I hope you know the concept of two note double in in Java.

126
00:11:30.230 --> 00:11:36.410
In order to learn how to make Java project, you must be aware of the basics of Java.

127
00:11:36.680 --> 00:11:44.870
The data types involved in Java and Darvel is a very popular data type in Java Soyuz.

128
00:11:44.930 --> 00:11:50.660
This double is containing that duration of those song and.

129
00:11:51.720 --> 00:11:56.630
We are done with both of the components inside the song class.

130
00:11:57.300 --> 00:12:04.110
Now we have to call it inside to construct a public song.

131
00:12:05.440 --> 00:12:10.000
Not a constructor butterfly functions public song.

132
00:12:10.480 --> 00:12:19.180
So inside this song function, we have to pass to arguments like whenever this function will be called,

133
00:12:19.660 --> 00:12:24.910
it will come up next to arguments one as the string.

134
00:12:25.720 --> 00:12:35.080
So yes, let us name this asteroid and it will more look more involving like the song has a title and

135
00:12:35.230 --> 00:12:36.160
or direction.

136
00:12:37.390 --> 00:12:46.060
So the arguments are passed successfully for the song Glass for the song the song function.

137
00:12:46.420 --> 00:12:55.300
We have created this song Glass Inside, which we have two objects of glass contains object, so this

138
00:12:55.300 --> 00:13:04.120
title and duration are the real world entities, all in one, but equally does the object.

139
00:13:04.510 --> 00:13:09.310
So they have two objects and the function has arguments.

140
00:13:09.610 --> 00:13:13.270
Yes, the function consists of argument.

141
00:13:13.270 --> 00:13:14.320
And what is this?

142
00:13:14.950 --> 00:13:22.780
So we have created the function, and inside we are calling the title object using this key.

143
00:13:23.620 --> 00:13:28.510
This given used to access the object of any class.

144
00:13:30.520 --> 00:13:39.490
And similarly, for this dark duration, the dart is used to call that matters.

145
00:13:40.810 --> 00:13:46.350
This is also one of the basic concepts of learning the language.

146
00:13:48.550 --> 00:13:54.640
So we have gone both of the objects inside this function.

147
00:13:55.090 --> 00:13:58.990
Now let me create the empty constructor.

148
00:14:00.850 --> 00:14:04.150
Currently, we are not going to use this constructor.

149
00:14:04.240 --> 00:14:09.480
Martin later later in this project while making this project.

150
00:14:09.490 --> 00:14:17.770
Suppose if we will need this, then we are going to use this now after the creation of the class, the

151
00:14:17.770 --> 00:14:20.110
function and the constructor.

152
00:14:20.300 --> 00:14:30.700
Now, moving forward in this song class, we have to create to get title and generation function in

153
00:14:30.700 --> 00:14:34.990
order to return the title and the duration.

154
00:14:35.230 --> 00:14:43.690
We have created the title and duration inside the public class, but still to avoid any kind of exception,

155
00:14:43.930 --> 00:14:48.130
we are going to get them using the get my time in Java.

156
00:14:49.330 --> 00:14:53.010
So we are going to see that stuff in the next five.

157
00:14:53.110 --> 00:14:54.700
So see you in the next block.
