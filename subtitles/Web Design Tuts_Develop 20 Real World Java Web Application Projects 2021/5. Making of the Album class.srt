1
00:00:01,450 --> 00:00:02,470
Hello, everyone.

2
00:00:02,710 --> 00:00:11,950
So in this part, we are going to add functions for adding the songs, finding the songs and then adding

3
00:00:11,950 --> 00:00:13,600
the songs to the playlist.

4
00:00:14,230 --> 00:00:15,460
So let's begin.

5
00:00:16,600 --> 00:00:23,620
OK, so we have to take this class, the function and the constructor.

6
00:00:24,130 --> 00:00:31,630
Now we are going to create a public song, public song.

7
00:00:33,530 --> 00:00:34,430
Find some.

8
00:00:36,010 --> 00:00:47,770
Class 3A function, yes, and inside which we are going to add string string type then, so that title

9
00:00:47,770 --> 00:00:55,510
of the song is going to be the argument inside the find song class.

10
00:00:56,500 --> 00:01:02,630
After creating the class, now, we are going to end all fall.

11
00:01:04,190 --> 00:01:06,290
Firstly, we have to create.

12
00:01:07,780 --> 00:01:17,200
Of attention and things like before the finding of the song in order to find the song is present or

13
00:01:17,200 --> 00:01:17,500
not.

14
00:01:17,890 --> 00:01:26,770
Firstly, we have to add the song to the playlist or the library as we have named it.

15
00:01:27,950 --> 00:01:37,010
So that song is going to be a Boolean type function, and the arguments are going to mean that I love

16
00:01:37,020 --> 00:01:48,570
this song and the duration the song contains two tormenter like the song class, contains two networks,

17
00:01:48,590 --> 00:01:51,650
the title and the duration.

18
00:01:52,520 --> 00:01:56,900
So that is what we are going to call and say this.

19
00:01:57,920 --> 00:02:01,460
So we have created the function for adding the song.

20
00:02:02,800 --> 00:02:04,480
And now we are going to.

21
00:02:06,030 --> 00:02:10,010
Check if the song is present or not.

22
00:02:10,170 --> 00:02:21,800
So in saying this, if if statement we are going to call the find a song, which we have created had

23
00:02:22,740 --> 00:02:29,870
a title of this song as we are going to find the song with the help of its title.

24
00:02:30,480 --> 00:02:35,460
And if the title is present, then this is going to return true.

25
00:02:36,240 --> 00:02:38,970
By default, it is set to null.

26
00:02:40,190 --> 00:02:49,700
So if the song title is pressing inside the list of the songs, man, we are going to add some songs.

27
00:02:50,790 --> 00:02:58,820
To the list, like if this song title is not a prison bailout, then only we are going to earn the songs

28
00:02:58,830 --> 00:03:03,030
to the list and this is absolutely fine.

29
00:03:03,870 --> 00:03:08,100
What is the need to a song which is already present?

30
00:03:09,390 --> 00:03:17,970
So, yes, we have successfully added enough songs with its title and its duration.

31
00:03:18,840 --> 00:03:25,770
Now in saying that if statement we are going to like, exist out.

32
00:03:27,050 --> 00:03:32,510
This is the shortcut for printing, something we have to write as well, yes.

33
00:03:32,870 --> 00:03:41,240
And the suggestions are going to suggest that we have to select the 6lb option and this will complete

34
00:03:41,240 --> 00:03:45,470
the state run automatic light system dark powder print.

35
00:03:46,430 --> 00:03:53,390
So what if statement is going to print fake whatever song is not present in the list?

36
00:03:53,960 --> 00:03:56,940
So we have to add this song to the list, right?

37
00:03:58,040 --> 00:04:00,230
So we are going to write this.

38
00:04:01,260 --> 00:04:12,940
The title of the song, like calling the title of the animal and then successfully added to the list

39
00:04:13,450 --> 00:04:16,840
like this title is successfully added to the list.

40
00:04:16,960 --> 00:04:24,250
I suppose the title is anything like naming the song is ABC Plus successfully added to the list, so

41
00:04:24,280 --> 00:04:26,020
as a whole, it is going to print.

42
00:04:26,170 --> 00:04:36,370
ABC successfully added to the list, and this is going to return true as the eighth tape of this function

43
00:04:36,370 --> 00:04:37,350
is rolling.

44
00:04:38,200 --> 00:04:44,710
This function is returning Boolean Boolean argument.

45
00:04:44,920 --> 00:04:57,160
So yes, we are done with this, but now we are going to complete the Find Song section also and then

46
00:04:57,160 --> 00:05:06,100
start off the song like suppose if the song is already present, then what may have to?

47
00:05:07,440 --> 00:05:15,240
Output like more, this function is going to get done, so if the song is already present, then we

48
00:05:15,240 --> 00:05:22,320
have to sizzle song of it to name song it name.

49
00:05:23,640 --> 00:05:24,240
Plus.

50
00:05:25,630 --> 00:05:33,300
Plus, it's used for adding a variable and a variable, here is the title of the song written they are

51
00:05:33,310 --> 00:05:38,230
wishing to add in the list already exists.

52
00:05:39,460 --> 00:05:40,480
In the list.

53
00:05:41,500 --> 00:05:42,370
What list?

54
00:05:42,400 --> 00:05:46,690
The library, which may have created.

55
00:05:47,470 --> 00:05:56,860
So if that song is already present, then this is is responsible for returning that the song is already

56
00:05:56,860 --> 00:05:58,120
present in the list.

57
00:05:58,480 --> 00:06:06,970
Do not bother to add the song again, so the add song part is completed.

58
00:06:07,420 --> 00:06:10,030
Now we are switching to the Find Song.

59
00:06:12,320 --> 00:06:23,150
Inside the find song function, we are going to check that the song is present in the list are not like

60
00:06:23,160 --> 00:06:26,050
the day-to-day reality using to store their songs.

61
00:06:26,450 --> 00:06:30,830
Is that a list which is recyclable and nothing else?

62
00:06:31,250 --> 00:06:33,110
So this recyclable at it.

63
00:06:33,920 --> 00:06:41,240
So we have to try to throw this out in this show in order to check whether the song is present in the

64
00:06:41,240 --> 00:06:42,140
list or not.

65
00:06:42,770 --> 00:06:53,660
So far, I think we have to use the loo so that we can move one by one in the songs and check if this

66
00:06:53,660 --> 00:07:01,340
is present like we have to match the string that this data is already present or not.

67
00:07:01,640 --> 00:07:06,770
And we are going to do this with the help of an enhanced form.

68
00:07:07,470 --> 00:07:16,670
So inside the Find Songs section, we are going to declare the enhanced for piano and inside the far

69
00:07:16,670 --> 00:07:17,030
loop.

70
00:07:17,630 --> 00:07:23,150
We are going to check that check.

71
00:07:23,670 --> 00:07:24,710
Check the song.

72
00:07:27,440 --> 00:07:33,200
Check this song like we will need the checked song functionality.

73
00:07:35,400 --> 00:07:40,530
Let me first complete that, find the song section and then we will.

74
00:07:42,410 --> 00:07:43,490
Get tighter.

75
00:07:43,580 --> 00:07:53,720
We have already declared in the song that Java class, get tighter and after this get tighter.

76
00:07:54,470 --> 00:08:04,640
If it equals the title not in good thing, then it will draw an exception like this is already present.

77
00:08:04,670 --> 00:08:07,340
Please do not bother to learn this again.

78
00:08:08,530 --> 00:08:10,930
And after this chicken.

79
00:08:12,300 --> 00:08:20,070
Song Chick, so this is going to be the if inside the four.

80
00:08:22,290 --> 00:08:25,770
First complete of forty four.

81
00:08:27,740 --> 00:08:29,750
So check.

82
00:08:32,200 --> 00:08:33,880
Song Chang, the song.

83
00:08:34,780 --> 00:08:35,230
Yes.

84
00:08:35,740 --> 00:08:36,850
The suggestions.

85
00:08:37,910 --> 00:08:43,490
Song cheering the song is the mountain is like a colon.

86
00:08:44,900 --> 00:08:54,230
This design held for a loop which is going to stick to the barrels and asking that if this song is present

87
00:08:54,230 --> 00:08:55,580
in the list, are not.

88
00:08:57,150 --> 00:08:59,610
Inside the hall, we are.

89
00:09:00,830 --> 00:09:04,220
I think his statement, which is going to.

90
00:09:06,540 --> 00:09:14,130
Return that if this song is already present, then you're just checking the checking that with the help

91
00:09:14,130 --> 00:09:19,290
of it, a string matching my show equals data.

92
00:09:19,590 --> 00:09:25,170
If this is true, then this fine song is going.

93
00:09:25,470 --> 00:09:29,220
This fine song function is going to return.

94
00:09:31,960 --> 00:09:33,910
No, no.

95
00:09:34,900 --> 00:09:43,690
So, yes, we are done with the public song find some function, which has the argument that the song

96
00:09:43,690 --> 00:09:44,200
title.

97
00:09:44,740 --> 00:09:53,020
So if they wish to find a song inside the Nest, we have to call for love and check that the song is

98
00:09:53,020 --> 00:10:01,980
already present on now so that we have successfully added functionalities to an song and find find songs

99
00:10:01,980 --> 00:10:03,400
from the list.

100
00:10:03,760 --> 00:10:12,790
Now, the other next model should be to add and songs to the playlist like we have a list of songs,

101
00:10:13,550 --> 00:10:16,120
list of albums, list of artists.

102
00:10:16,570 --> 00:10:24,550
Now our main concern is to add songs to Playlist Rachel as the main goal of making this project.

103
00:10:24,940 --> 00:10:34,600
Like, we are bothered about making a playlist of our favourite songs, so let us initialize our function

104
00:10:35,350 --> 00:10:46,630
for adding songs to Dublin's name, this says and to playlist using cameras case.

105
00:10:48,310 --> 00:10:58,870
And no function for ironing songs to playlist is created now, arguments when we like, so goes the

106
00:10:58,890 --> 00:10:59,380
track.

107
00:10:59,440 --> 00:11:05,440
No track, no is going to be like one two three four.

108
00:11:07,290 --> 00:11:10,540
And it is going to be an integer.

109
00:11:10,560 --> 00:11:21,540
Of course, also the playlist is going to be in the link, the list, the power structure.

110
00:11:22,350 --> 00:11:30,660
So we will come to the linked list like what name list is shortly in some time?

111
00:11:32,220 --> 00:11:38,670
First, let me call on human and the function, and I hope you are done.

112
00:11:39,600 --> 00:11:48,210
So we have created the function of which is going to return Boolean tonight, like a true or false.

113
00:11:48,660 --> 00:11:55,280
So public Boolean act of is in track number and we are good to go.

114
00:11:55,290 --> 00:11:59,010
I think the English song playlist.

115
00:11:59,190 --> 00:11:59,610
Yes.

116
00:12:00,150 --> 00:12:08,370
So I can say this in this similar way may have done this for finding songs again, for adding the songs

117
00:12:08,370 --> 00:12:09,300
to the playlist.

118
00:12:09,630 --> 00:12:17,520
Firstly, we have to iterate through the list and check that whether the song is already present in

119
00:12:17,520 --> 00:12:18,930
the plane is diagnosed.

120
00:12:19,500 --> 00:12:28,950
So in order to check so we have to like, firstly, call off or lose an enhanced follow.

121
00:12:29,190 --> 00:12:39,270
And this is going to check again using that check the song thing like we have used to moving in the

122
00:12:39,690 --> 00:12:49,080
song section and then going to check back when the song is present in the playlist are known.

123
00:12:50,290 --> 00:13:00,250
So Song Cheng, the song calling this dark songs is used for iterating through the song list.

124
00:13:01,590 --> 00:13:09,450
Now how we are going to create a playlist like we have and our list of songs, which contains supposed

125
00:13:09,450 --> 00:13:19,200
five to six songs from makes me want to add the three songs to our playlist, so we will iterate through

126
00:13:19,330 --> 00:13:27,510
the list and check that whether the Tengiz Brothers song is present in the list or not.

127
00:13:27,900 --> 00:13:31,950
And we are going to make that playlist as a lengthy list.

128
00:13:32,310 --> 00:13:36,900
So you may be wondering why me into a single playlist as a link list?

129
00:13:38,550 --> 00:13:49,890
So I listed the special data structure data tie, which is going to contain a pointer to from the previous

130
00:13:50,040 --> 00:13:53,340
element and from the next element.

131
00:13:53,610 --> 00:14:01,680
So basically enclosed is like two or three type of data structure, which has nodes and the roots are

132
00:14:01,680 --> 00:14:05,130
connected to the first thing like previous elements.

133
00:14:05,430 --> 00:14:08,640
And the second thing, the next element.

134
00:14:09,120 --> 00:14:17,490
So yes, we are going to create a playlist as a link list as the members of the playlist are connected.

135
00:14:17,880 --> 00:14:24,540
Now, current song is connected to the previous track, and the current song is connected to the next

136
00:14:24,540 --> 00:14:25,500
track as well.

137
00:14:26,040 --> 00:14:30,000
So yes, it is going to be done in this way only.

138
00:14:30,690 --> 00:14:39,300
So we have covered the link list now we are going to check this with a similar way.

139
00:14:39,420 --> 00:14:44,040
We have added like a similar way.

140
00:14:44,040 --> 00:14:53,700
We have checked it in the Find Song section, so we've checked song title equals equals.

141
00:14:55,450 --> 00:14:59,220
Under title, so the government and the.

142
00:15:00,750 --> 00:15:03,060
Equals is going to be that tight, the.

143
00:15:04,270 --> 00:15:05,830
So he is here we are.

144
00:15:06,790 --> 00:15:14,560
So the we have checked everything inside this statement and then this song is present and I give this

145
00:15:14,560 --> 00:15:17,440
song is not present in the playlist.

146
00:15:17,950 --> 00:15:24,130
So we are going to add that to the playlist in English, which is playlist.

147
00:15:24,760 --> 00:15:31,420
And this is our to this mental life playlist and more than check this song.

148
00:15:34,150 --> 00:15:34,750
Yes.

149
00:15:34,850 --> 00:15:37,990
So it is going to be done like this.

150
00:15:38,950 --> 00:15:42,490
And we have added to the playlist.

151
00:15:43,630 --> 00:15:52,870
And this function is going to return a Boolean expression, which is going to be true like this is true.

152
00:15:52,900 --> 00:15:55,550
We have successfully added songs to the flames.
