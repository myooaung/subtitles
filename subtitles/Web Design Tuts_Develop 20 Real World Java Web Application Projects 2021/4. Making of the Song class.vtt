WEBVTT
1
00:00:00.790 --> 00:00:07.060
Now, Soledad, we have created the class and function now within me, 15.

2
00:00:07.660 --> 00:00:12.400
Don't don't get my card for the title and the duration.

3
00:00:12.790 --> 00:00:18.540
So it is going to be like public strings get title.

4
00:00:19.480 --> 00:00:28.090
And this is for getting the title of the song and inside which we are going to return the title.

5
00:00:28.780 --> 00:00:40.750
So basically, this function is going to return no title of the song New Dawn title as we have declared

6
00:00:40.750 --> 00:00:43.570
the name as string title.

7
00:00:44.470 --> 00:00:54.130
This function is going to return and this is going to return the duration and the duration is double.

8
00:00:55.260 --> 00:00:58.290
Like, no later time saw double.

9
00:00:59.530 --> 00:01:02.080
And gay liberation.

10
00:01:05.370 --> 00:01:10.290
Again, immigration, it is going to mean Cameron's case.

11
00:01:12.590 --> 00:01:15.740
And will return the duration of the song.

12
00:01:17.110 --> 00:01:26.020
In the form of a double, so I hope you must have understood that what is this function doing and what

13
00:01:26.140 --> 00:01:29.470
this part is going to return to the compiler?

14
00:01:30.130 --> 00:01:40.120
Now we have got like collecting the title of this song and the duration of the song from the class.

15
00:01:40.510 --> 00:01:50.080
Now we have to bind this as this like, we have combined this inside this race as us doing this complete

16
00:01:50.080 --> 00:01:51.250
partisan string.

17
00:01:51.760 --> 00:01:56.590
This song is a class which we have written in this song.

18
00:01:57.010 --> 00:02:02.860
We are in it like our putting the title on duration as a string.

19
00:02:03.550 --> 00:02:07.510
So we will convert the double take.

20
00:02:08.050 --> 00:02:17.050
It is already a string title, but that double will be returned in the form of her double like or decimal

21
00:02:17.050 --> 00:02:17.500
think.

22
00:02:17.770 --> 00:02:21.890
So we have the fourth converting to the string and then they've done.

23
00:02:22.570 --> 00:02:30.550
So now we have to call that those string mountain in Java and that those string method will be responsible

24
00:02:30.550 --> 00:02:36.970
for converting the string duration and the title and bind them.

25
00:02:37.060 --> 00:02:41.200
And then I'll put them as a string as a whole.

26
00:02:41.680 --> 00:02:49.990
So firstly, we have to call the override my turn as we are going to convert the class, so we have

27
00:02:50.500 --> 00:02:53.440
to again create a public string.

28
00:02:55.560 --> 00:03:04.970
Public string, those string, those string basically is a method in Java, which is used to convert

29
00:03:04.980 --> 00:03:08.820
the other data dives into a string output.

30
00:03:09.300 --> 00:03:13.980
So inside this string class, I am going to return.

31
00:03:15.210 --> 00:03:16.770
The song.

32
00:03:18.440 --> 00:03:28.850
And the like this song, and we have a brave soul inside the breeze and the collar variable, we have

33
00:03:28.850 --> 00:03:32.390
to have this blessed sign inside the breeze.

34
00:03:32.390 --> 00:03:39.980
We have the title, the title string and the variable title like the.

35
00:03:42.220 --> 00:03:43.690
Firstly, close this.

36
00:03:45.720 --> 00:03:53.850
Is equal to Nash, and the title is called US Plus.

37
00:03:54.830 --> 00:03:58.850
Title about human misery declared in the class.

38
00:03:59.990 --> 00:04:01.640
And the nine plus.

39
00:04:03.490 --> 00:04:04.690
Inside this.

40
00:04:07.040 --> 00:04:14.490
Like Line, Ginger and which is going to ruin clothing inside the single inverted comma.

41
00:04:15.320 --> 00:04:16.100
No, no gain.

42
00:04:17.600 --> 00:04:28.550
And this is going to close the title by closing this double inverted comma once and we are done with

43
00:04:28.550 --> 00:04:29.210
that title.

44
00:04:29.220 --> 00:04:41.090
But now we're doing the same for the duration, like the duration is similar as the title, so duration

45
00:04:41.450 --> 00:04:46.100
the court, plus the duration of an event.

46
00:04:48.580 --> 00:04:55.840
Just a single double fault and no deviation or an evil as missing said.

47
00:04:57.160 --> 00:04:58.450
So duration.

48
00:04:59.710 --> 00:05:01.870
And the place is closed.

49
00:05:03.060 --> 00:05:10.260
So closing the and saying the single in one thing comma and then closing the statement.

50
00:05:11.640 --> 00:05:17.790
So the brass parties completed as far as I can see that.

51
00:05:20.420 --> 00:05:29.390
So we have completed this string method, which will be converting the duration and title and the string

52
00:05:29.390 --> 00:05:30.260
in the hole.

53
00:05:30.680 --> 00:05:38.690
So this is the song this is no is the title which we called in saying the strings and the title of the

54
00:05:38.690 --> 00:05:45.050
song after we just base and the duration of double.

55
00:05:45.530 --> 00:05:50.660
So that double is converted in the form of string with the help of distortion.

56
00:05:51.290 --> 00:05:59.750
So as far as I can see that we have completed the song class now make the switch to the album class.

57
00:06:00.200 --> 00:06:10.340
So let me give you the album the double fine first, so selecting the new file option inside the sassy

58
00:06:10.340 --> 00:06:11.300
folder of that.

59
00:06:11.840 --> 00:06:19.400
As I already told you that all the files involved in this project will be stored inside the SLC folder.

60
00:06:19.970 --> 00:06:21.620
So inside those are the folder.

61
00:06:21.620 --> 00:06:28.040
I am going to create a new file and will name it does album not double.

62
00:06:29.390 --> 00:06:38.870
So we have successfully created the album class and now will start creating the function inside this

63
00:06:38.870 --> 00:06:39.800
class as well.

64
00:06:40.330 --> 00:06:46.700
OK, so now let me I've created the album Class Coalinga function.

65
00:06:47.000 --> 00:06:57.500
Let let us firstly declare the variables which are going to be used and the variables are object inside

66
00:06:57.500 --> 00:06:58.100
the class.

67
00:06:58.820 --> 00:07:08.480
I already told you about what objects are labeled entities, which are the consistency of the class.

68
00:07:09.140 --> 00:07:10.880
So private string name.

69
00:07:12.170 --> 00:07:12.860
And.

70
00:07:14.950 --> 00:07:25.190
I this private things like or which artist has sung the song, we always ask for that.

71
00:07:25.970 --> 00:07:35.330
So the album will contain a name in the string format and artist in the string format, and the list

72
00:07:35.330 --> 00:07:43.160
of songs inside the album is going to be displayed as an analyst.

73
00:07:44.230 --> 00:07:51.310
So at least in the very useful concept inside Java.

74
00:07:52.360 --> 00:08:02.330
Let me firstly import this liability, which consist this list feature, so it doesn't send the job

75
00:08:02.490 --> 00:08:05.500
until at least the package.

76
00:08:07.210 --> 00:08:19.000
Yes, we have successfully imported the ArrayList line ready and getting that last name with us, so.

77
00:08:20.260 --> 00:08:28.150
The last name is going to be strong, so I'm going to contain songs simply, so there are no words as

78
00:08:28.150 --> 00:08:29.190
far as I can see.

79
00:08:29.920 --> 00:08:37.900
So let us quickly talk about a list like what actually are the lists and what is it is going to do in

80
00:08:37.900 --> 00:08:38.710
this project.

81
00:08:39.430 --> 00:08:47.830
So after creating this and initializing all the objects, now we are going to talk about that in this.

82
00:08:48.400 --> 00:08:59.620
So we have more data structure as Andy will have heard about it to store a list of things, Reuse added.

83
00:09:00.010 --> 00:09:08.510
So you must be wondering that why we are not storing the song inside the added and released list of

84
00:09:08.560 --> 00:09:11.920
what is the consequence of using this analyst?

85
00:09:12.490 --> 00:09:18.940
So let me tell you first that an eraser limit their size the add.

86
00:09:18.940 --> 00:09:20.440
It has unlimited size.

87
00:09:20.770 --> 00:09:22.450
It has a fixed size.

88
00:09:22.840 --> 00:09:27.840
We cannot increase the size and alter the element inside the body.

89
00:09:28.540 --> 00:09:36.730
So this is a bound nation like we can see that this is the limitation of any which is preventing us

90
00:09:36.730 --> 00:09:39.160
from using any in this project.

91
00:09:40.030 --> 00:09:45.820
So what is the benefit of using at least at least as similar as an array?

92
00:09:46.300 --> 00:09:55.690
It is a use for storing multiple data and data types like it could be string like what we see Fluor

93
00:09:55.690 --> 00:09:57.370
double digit on anything.

94
00:09:57.880 --> 00:10:06.330
So storing multiple data types and the main feature of our list is that it is pretty sizable.

95
00:10:06.700 --> 00:10:12.010
The size of that it is impossible for the size of our list is muted.

96
00:10:12.490 --> 00:10:16.960
We can increase the size of the list according to our needs.

97
00:10:17.440 --> 00:10:25.690
Like suppose, currently our playlist contains only five songs and we want to increase the size of the

98
00:10:26.260 --> 00:10:28.210
song list in future.

99
00:10:28.570 --> 00:10:34.000
So in at it, it is not possible to increase the size it is fixed.

100
00:10:34.370 --> 00:10:41.230
But if we are using it, at least we can increase like we do not have to certain size in the beginning

101
00:10:41.410 --> 00:10:43.230
in that and we have to decide.

102
00:10:44.050 --> 00:10:48.580
In the meantime of declaring that it network what size maximum size?

103
00:10:48.730 --> 00:10:53.800
The ad is going to be, but there is nothing like this in that list.

104
00:10:54.380 --> 00:10:58.390
So yes, these are the benefits of using analyst.

105
00:10:58.810 --> 00:11:04.090
We are going to store the songs inside this list called list.

106
00:11:04.540 --> 00:11:11.590
And this is when the mercy of this library of Java inside Java utilized a list.

107
00:11:12.100 --> 00:11:19.330
So we have given what adding list is now we are going to create a function.

108
00:11:20.510 --> 00:11:34.010
Inside this album, Glass, like we have named so function is going to be public album and the arguments

109
00:11:34.010 --> 00:11:43.670
are like name of the album mastering the artist as string and.

110
00:11:45.100 --> 00:11:48.110
The third one is the list of songs.

111
00:11:49.300 --> 00:11:54.190
And which is going to be our analyst day to day.

112
00:11:54.910 --> 00:12:03.100
So we have called those two arguments, and now we are going to call that hard argument that at least

113
00:12:03.760 --> 00:12:05.800
the second one has in the last.

114
00:12:06.950 --> 00:12:12.520
Original suggestions are suggesting the suggestions are very useful.

115
00:12:13.370 --> 00:12:22.600
They helps us and saves a lot of time while writing the code, so we have successfully called all the

116
00:12:22.930 --> 00:12:25.120
arguments inside the function.

117
00:12:26.020 --> 00:12:35.410
Now inside this function, in the similar way we have called the songs like we can see that we have

118
00:12:35.410 --> 00:12:39.460
called this using this dark side to land the start duration.

119
00:12:39.880 --> 00:12:46.180
This is the method of calling objects from a class inside Java.

120
00:12:46.690 --> 00:12:50.290
So this dark name is going to be name.

121
00:12:51.310 --> 00:12:54.760
Similarly, this start, this is going to be.

122
00:12:56.010 --> 00:12:59.970
I best new artist.

123
00:13:01.350 --> 00:13:05.070
This in the method of accessing objects.

124
00:13:06.270 --> 00:13:12.270
Inside the function, we have already used it in the song Glass.

125
00:13:12.480 --> 00:13:24.060
Now we are using it in the album Tango and Song, so all the stuff is quite relatable, but we can say

126
00:13:24.060 --> 00:13:24.450
that.

127
00:13:25.480 --> 00:13:28.770
And you do not have to make much effort.

128
00:13:29.970 --> 00:13:31.770
While learning Java.

129
00:13:33.490 --> 00:13:36.320
Java is such an interesting language.

130
00:13:36.370 --> 00:13:37.810
It has everything.

131
00:13:38.800 --> 00:13:40.630
Inside its libraries.

132
00:13:41.860 --> 00:13:45.280
So this is like new ad in this song.

133
00:13:46.330 --> 00:13:49.990
So the list is access to using a new keyword.

134
00:13:51.130 --> 00:13:57.220
This is a method of calling the analyst inside the function.

135
00:13:58.120 --> 00:14:05.830
So we have successfully ported all the PR humans like we have successfully calling them and saying the

136
00:14:05.830 --> 00:14:06.460
function.

137
00:14:07.660 --> 00:14:15.070
Now I am going to create a constructor called Alamo.

138
00:14:16.620 --> 00:14:23.750
I think there's a good practice to initialize the constructor in the beginning, even if we have no

139
00:14:23.750 --> 00:14:24.200
use.

140
00:14:26.040 --> 00:14:34.500
As far as I can see that we have successfully created our two classes named song and Album.

141
00:14:35.040 --> 00:14:44.690
So after creating the song and album, we have to start adding songs to the project and this will be

142
00:14:44.970 --> 00:14:47.800
going to happen with the help off.

143
00:14:48.240 --> 00:14:50.010
And the song function.

144
00:14:50.430 --> 00:14:57.100
And then we are going to find the songs like we have to bring to the list.

145
00:14:57.120 --> 00:15:06.360
As you can see, that in the second set is so we have to find those songs like which are the songs presenting

146
00:15:06.360 --> 00:15:10.380
the list list and what are its durations.

147
00:15:10.920 --> 00:15:19.650
So we are going to make a dedicated function for finding those songs and for like adding those songs

148
00:15:19.650 --> 00:15:20.430
to the list.

149
00:15:21.510 --> 00:15:23.530
So see you in the next part.
