WEBVTT
1
00:00:01.550 --> 00:00:09.500
So I hope you all have watched that introduction section of this project, and then our overview about

2
00:00:09.590 --> 00:00:18.590
this project, what we are actually going to do in this programming section of the school funds system.

3
00:00:20.680 --> 00:00:26.320
Now, let's begin by creating a job offer today in the studio code.

4
00:00:26.800 --> 00:00:35.590
I hope you all have this doll, but you let this division and visual studio code I need in your systems.

5
00:00:36.100 --> 00:00:37.260
We are ready.

6
00:00:39.120 --> 00:00:44.460
This cost of the installation and download five in the earlier videos.

7
00:00:44.820 --> 00:00:49.740
So, yes, let's start with creating a Java project in regards to your.

8
00:00:50.850 --> 00:00:53.310
Look at this project, but.

9
00:00:54.950 --> 00:01:03.020
You have to create a job project by clicking on this button, select no Mentos as we are sitting on

10
00:01:03.020 --> 00:01:04.370
this project.

11
00:01:04.400 --> 00:01:06.860
So initially we have to select this.

12
00:01:06.870 --> 00:01:08.420
No, those options.

13
00:01:09.710 --> 00:01:10.100
Yes.

14
00:01:10.550 --> 00:01:15.490
So this project requires a thought that it will be saved.

15
00:01:15.560 --> 00:01:23.090
So I am going to create a new folder in my next stop and call it does school.

16
00:01:25.870 --> 00:01:26.680
Funds.

17
00:01:29.060 --> 00:01:29.780
System.

18
00:01:31.730 --> 00:01:34.130
And so let's not project location.

19
00:01:35.630 --> 00:01:43.220
After selecting the project location, we have no input, a job, our project name for this project.

20
00:01:44.860 --> 00:01:49.150
So they will import a Java project name in the text box.

21
00:01:50.180 --> 00:01:55.220
Women and men with their school funds system.

22
00:01:57.000 --> 00:01:58.080
And press and.

23
00:02:03.540 --> 00:02:08.130
So, head is the school fund system project in Java.

24
00:02:08.460 --> 00:02:15.360
Let's not invent folders, likes the things, not Jason, which does Visual Studio Code provides by

25
00:02:15.360 --> 00:02:22.770
default a live file, which is empathy and an ASIC folder, which is the main folder of this project.

26
00:02:23.190 --> 00:02:27.120
All the required files will be made here only.

27
00:02:27.330 --> 00:02:35.790
Yes, so it contains the Java already, and this is the main file of this project, which we are going

28
00:02:35.790 --> 00:02:36.270
to run.

29
00:02:36.660 --> 00:02:40.770
You'll get our output of this school funds management system.

30
00:02:42.650 --> 00:02:50.560
Here we have a public class called up and inside the class that is a function public standing wine me

31
00:02:50.870 --> 00:02:59.800
with arguments as string and when it throws up exception, the Aptos one exception, then it will print

32
00:02:59.810 --> 00:03:04.170
out this hell of oil and for printing anything in Java.

33
00:03:04.190 --> 00:03:07.010
We have the right system, but I will not bring them.

34
00:03:07.490 --> 00:03:10.520
And we will see it later in this project as well.

35
00:03:10.910 --> 00:03:15.800
So if they run this fight, of course, we will get the output.

36
00:03:18.180 --> 00:03:22.620
Yes, so you can see that Halo one is bringing in that time.

37
00:03:23.370 --> 00:03:25.660
So the court is working perfectly fine.

38
00:03:26.130 --> 00:03:31.020
Let's start by making our files required in this project.

39
00:03:31.830 --> 00:03:38.670
So the first file we are going to create is in the ASIC folder and we will name it as.

40
00:03:39.820 --> 00:03:41.320
Mean, not Java.

41
00:03:43.410 --> 00:03:48.960
So here you can see that I am creating a file called Mean Dark Java.

42
00:03:51.890 --> 00:03:59.870
So you can see that our members are, well, fine is already created here we have I mean, as you can

43
00:03:59.870 --> 00:04:07.190
see, we have already I glass after creating the main file in SIRC folder.

44
00:04:08.270 --> 00:04:10.830
Java is all about glass as an object.

45
00:04:10.860 --> 00:04:14.630
So yes, you can see that we have already have glass.

46
00:04:14.930 --> 00:04:20.750
Now we will import that dependencies and the liability required in this package.

47
00:04:21.560 --> 00:04:26.540
Basically, we are going to attach all the packages required in this project.

48
00:04:26.870 --> 00:04:28.790
So I am going to import.

49
00:04:31.810 --> 00:04:33.250
Java analyst.

50
00:04:34.480 --> 00:04:40.960
I I will not tell you about the webserver, at least this let me first import this.

51
00:04:44.590 --> 00:04:47.600
So, yes, we have important.

52
00:04:48.230 --> 00:04:49.040
Yeah, you did.

53
00:04:49.060 --> 00:04:53.320
Adam is currently it is great as we haven't used in the whole.

54
00:04:53.500 --> 00:04:57.370
But later, when they will use this, it will become colourful.

55
00:04:57.760 --> 00:05:01.300
Now let me tell you about what Java and this is.

56
00:05:03.950 --> 00:05:14.050
You think is a package for our far right and our goods and animals is a property of Java, which gives

57
00:05:14.050 --> 00:05:16.390
us a very sizeable eddy.

58
00:05:16.840 --> 00:05:20.140
And this list is found in Java.

59
00:05:20.140 --> 00:05:28.120
You do Typekit, as you can see that I am writing it like Java that you think that Adam is so inside

60
00:05:28.120 --> 00:05:32.710
there that Java that you can package, we will get that in this function.

61
00:05:32.860 --> 00:05:42.400
So yes, our list is a sizable ADI, which we will use later in this project for adding features to

62
00:05:42.400 --> 00:05:43.330
them, to the AL.

63
00:05:43.510 --> 00:05:45.000
And it was be desirable.

64
00:05:45.250 --> 00:05:52.570
It will help us to increase the number of features that students in later without having any conflicts.

65
00:05:53.790 --> 00:05:57.750
The next package we are going to import is our list.

66
00:05:58.290 --> 00:06:07.230
So let me important as black importers, why don't you then package itself not list?

67
00:06:12.490 --> 00:06:12.910
Yes.

68
00:06:13.450 --> 00:06:20.020
So we have successfully imported list and analyst for our project in Java.

69
00:06:20.320 --> 00:06:24.010
List is the facility to maintain order the collection.

70
00:06:24.370 --> 00:06:29.950
It contains index based methods to insert, update, delete and search the elements.

71
00:06:30.340 --> 00:06:35.440
So we will use less than that and list properties of Java in this project.

72
00:06:35.770 --> 00:06:38.170
Now let's begin with the.

73
00:06:39.170 --> 00:06:43.760
Class and we will create our function.

74
00:06:44.210 --> 00:06:45.860
Public static.

75
00:06:49.370 --> 00:06:51.450
I mean, we are.

76
00:06:52.710 --> 00:06:57.570
Main function containing arguments as string.

77
00:06:59.690 --> 00:07:01.950
Square places and.

78
00:07:03.470 --> 00:07:08.270
And so, yes, the parameter is fast as strong arguments.

79
00:07:09.400 --> 00:07:13.480
Inside the main function, we will initialize the.

80
00:07:14.950 --> 00:07:21.040
So inside the main function, we will be learning new methods later.

81
00:07:21.340 --> 00:07:27.370
But let us first create a student class, teacher class and a school.

82
00:07:27.460 --> 00:07:34.780
Does this mean that Java will be responsible for running the program successfully?

83
00:07:35.260 --> 00:07:39.990
So let me create a new file in the SLC folder as well.

84
00:07:40.390 --> 00:07:44.320
I namely does students know Java.

85
00:07:45.430 --> 00:07:46.690
So here it is.

86
00:07:47.110 --> 00:07:55.750
We have a class called student, and this class will contain all the information about the student I.D.,

87
00:07:55.960 --> 00:08:00.310
its roll number, or whatever information like the fees paid.

88
00:08:00.640 --> 00:08:01.980
What is the fees paid?

89
00:08:01.990 --> 00:08:06.820
What is the fees left to be paid by the student and similar kind of things?

90
00:08:07.210 --> 00:08:13.930
So let's begin this with starting this student part of this program.

91
00:08:15.430 --> 00:08:16.690
So let's start.

92
00:08:18.090 --> 00:08:22.920
Private, which is the access specified in Java.

93
00:08:24.300 --> 00:08:32.550
There are three access specifies in Java public, private and protected, and they have their own rules

94
00:08:33.060 --> 00:08:39.150
for the variables like if they declare a variable as private label.

95
00:08:39.390 --> 00:08:40.930
This variable will be not.

96
00:08:41.230 --> 00:08:44.100
It would not be accessible with any other class.

97
00:08:44.490 --> 00:08:51.060
But if it is private or public, it will be accessible by the other classes of the program.

98
00:08:52.250 --> 00:08:59.900
And the protected is similar as private, it is protected from the other classes that they can cannot

99
00:09:00.050 --> 00:09:05.240
access that variable in the program without permission.

100
00:09:05.810 --> 00:09:15.890
So let's start with giving up these are I.D. object inside this class to be similarly private.

101
00:09:16.490 --> 00:09:19.160
Screen name.

102
00:09:27.190 --> 00:09:36.070
And similarly, for the other three variables, which we are going to use grade fees, speed and C slow.

103
00:09:37.120 --> 00:09:38.500
So here we are.

104
00:09:39.030 --> 00:09:43.000
We have Nick Clegg firing twice inside this class.

105
00:09:43.180 --> 00:09:47.770
And let me commend the purpose of this file.

106
00:09:47.770 --> 00:09:58.540
So I am using control plus large in like this file is for keeping track of student name fees grade and

107
00:09:58.540 --> 00:10:03.340
he's been keeping class track of.

108
00:10:07.100 --> 00:10:07.450
Yes.

109
00:10:07.530 --> 00:10:08.630
So here we go.

110
00:10:09.080 --> 00:10:12.620
I am a comment on the significance of this file.

111
00:10:12.650 --> 00:10:18.950
And this stop of this right now to create a new student by initializing.

112
00:10:19.310 --> 00:10:22.070
We have to create laws again.

113
00:10:24.760 --> 00:10:27.510
This class is not a simple class.

114
00:10:27.550 --> 00:10:29.310
This is a constructor.

115
00:10:30.100 --> 00:10:35.860
So Constructor is a class basically with the same name as the.

116
00:10:36.800 --> 00:10:45.230
Above plus, but it contains parameters inside it for the functioning of that program.

117
00:10:45.320 --> 00:10:57.380
So inside it, I am initializing the argument says in its name and then they on the student's name doing

118
00:10:57.380 --> 00:11:00.710
all of them inside the student constructor.

119
00:11:04.800 --> 00:11:14.250
So, yes, inside this construct that we are going to call all the functions which were declared above

120
00:11:14.250 --> 00:11:15.270
in the classes.

121
00:11:16.200 --> 00:11:25.560
So yes, inside this constructor, we are going to initialize operators for the film declare declared

122
00:11:25.560 --> 00:11:36.210
above this that I.D. is for I.D. This dot grid is far greater than this dog name is for the name field,

123
00:11:36.570 --> 00:11:38.160
which will declare the

124
00:11:42.300 --> 00:11:44.430
Soyuz are.

125
00:11:46.420 --> 00:11:54.730
This operator for each thing mentioned above inside the constructor, and yes, here we are.

126
00:11:55.270 --> 00:12:05.830
So let me give you a quick idea about what constructors are circumventing of what so many will require

127
00:12:06.010 --> 00:12:08.560
to add a new student to the school.

128
00:12:08.890 --> 00:12:13.960
This constructor will be called with the use of new keyword in Java.

129
00:12:14.140 --> 00:12:19.870
The construct it is called automatically in every place, wherever we want to call it.

130
00:12:20.230 --> 00:12:27.040
So let me write this to create the new student.

131
00:12:29.220 --> 00:12:34.950
This constructor is called by initializing this constructor.

132
00:12:37.100 --> 00:12:39.710
The constructor with the name student.

133
00:12:42.470 --> 00:12:43.040
Yes.

134
00:12:43.640 --> 00:12:44.570
So how do you?

135
00:12:48.710 --> 00:12:49.250
Yes.

136
00:12:50.750 --> 00:12:56.900
So this construct that has the job of creating new stories by initializing then.

137
00:12:57.980 --> 00:13:05.630
With her I.D. unnamed and agree, which is a compulsory fee for every new student to be admitted in

138
00:13:05.630 --> 00:13:06.350
the school.
