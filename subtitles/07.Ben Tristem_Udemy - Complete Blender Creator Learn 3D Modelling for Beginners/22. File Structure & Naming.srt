1
00:00:04,370 --> 00:00:06,190
Hello everybody and welcome back.

2
00:00:06,200 --> 00:00:12,110
This will be the last of these very heavy lectures for the moment but I do want to whilst we've been

3
00:00:12,110 --> 00:00:14,240
talking about managing our files.

4
00:00:14,480 --> 00:00:17,720
Talk about managing our actual files themselves.

5
00:00:17,720 --> 00:00:24,710
So a place for everything and everything in its place and the great understanding here is that there

6
00:00:24,770 --> 00:00:28,380
is no one way of setting up your filing system.

7
00:00:28,400 --> 00:00:35,840
I've been in a team where the programmers wanted it one way the artists wanted it another.

8
00:00:35,840 --> 00:00:40,880
In the end we just had to settle for a compromise between the two that made sense.

9
00:00:40,880 --> 00:00:46,160
Ultimately it will come down to whoever whoever is handling the data the most.

10
00:00:46,160 --> 00:00:53,030
It makes more sense for the artist to have the say where and how textures and materials are configured

11
00:00:54,010 --> 00:00:57,330
than the programmers who eventually just end up using them.

12
00:00:57,460 --> 00:01:03,520
Because often there's a hierarchy that you need to have in one system that you don't necessarily need

13
00:01:03,520 --> 00:01:06,370
in another and trying to merge the two together.

14
00:01:06,370 --> 00:01:08,390
Sometimes it's just not possible.

15
00:01:08,410 --> 00:01:13,450
So understanding that there's no one way of setting up your filing system and seeing the pros and cons

16
00:01:13,450 --> 00:01:18,150
from both ways perhaps you can find a way of setting up your workflow.

17
00:01:18,160 --> 00:01:20,970
So it's kind of independent of anybody else.

18
00:01:20,980 --> 00:01:22,570
That's great.

19
00:01:22,570 --> 00:01:27,620
Watch out for overloaded folders so I'll try to keep folders.

20
00:01:27,640 --> 00:01:29,770
Less than 20 assets.

21
00:01:29,800 --> 00:01:36,760
The problem is if you have too many things in a folder it becomes impossible to navigate sets.

22
00:01:36,820 --> 00:01:43,090
And heaven forbid you have rock 20 which means you've got 19 other rocks in your folder.

23
00:01:43,090 --> 00:01:45,930
I hope you have a better name system than that.

24
00:01:46,060 --> 00:01:50,080
Or of course the folder is just going to be called rocks at that point.

25
00:01:50,080 --> 00:01:54,220
Have a personal style of filing if you don't like mine.

26
00:01:54,220 --> 00:02:01,000
As we start going through the course use yours there's nothing to save any particular way is wrong.

27
00:02:01,090 --> 00:02:04,660
Goes back to that top point there there's no one way of doing this.

28
00:02:04,720 --> 00:02:11,090
You may find that the project you're working on suits a different type of filing than what I'm doing.

29
00:02:11,090 --> 00:02:18,370
Now we've mentioned team quite a bit here and in inner team you'll often form guidelines from your own

30
00:02:18,370 --> 00:02:18,990
needs.

31
00:02:19,000 --> 00:02:23,830
So depending on what type of project you're working on you'll often find that you need to name things

32
00:02:23,830 --> 00:02:26,930
in certain ways or you need to store them in certain ways.

33
00:02:26,930 --> 00:02:33,160
And this is especially true when you're starting to work with a particular game engines some engines

34
00:02:33,160 --> 00:02:38,800
love your files being named in a certain way or your objects named in a certain way which is a great

35
00:02:38,800 --> 00:02:44,800
reason why you shouldn't just leave things named cube dot 0 0 8.

36
00:02:44,800 --> 00:02:46,330
I mean what does that even mean.

37
00:02:46,330 --> 00:02:48,280
I bet it's no longer a cube either.

38
00:02:48,280 --> 00:02:50,280
I know I've caught some of you out there.

39
00:02:50,740 --> 00:02:54,850
So let's take three game engines that I have worked with quite a bit.

40
00:02:54,850 --> 00:02:57,930
We've got unity got unreal and Godot.

41
00:02:58,150 --> 00:03:05,200
Any one of those game engines requires a different way of naming things with unreal for instance you

42
00:03:05,200 --> 00:03:11,080
need to have a U.S. exe file if you want custom collisions but you need to make sure that the hierarchy

43
00:03:11,080 --> 00:03:13,570
is right within your outline as well.

44
00:03:13,660 --> 00:03:19,840
And Godot that can have a suffixes or prefixes that you put on your on your files and that means that

45
00:03:20,020 --> 00:03:26,080
they will automatically do other things being able to understand that and use the documentation that

46
00:03:26,080 --> 00:03:32,590
comes along with your game engine speeds up workflow no end to do form some guidelines write them down

47
00:03:32,590 --> 00:03:37,360
so you can remember them and then you don't need to worry anymore you can just export things with those

48
00:03:37,360 --> 00:03:45,400
guidelines in place and it should work really well where is it is something that happens a lot especially

49
00:03:45,400 --> 00:03:51,580
as a project gets bigger so you can go the Google approach as I like calling.

50
00:03:51,610 --> 00:03:57,440
You can have all the files together makes it difficult to navigate potentially easy to search.

51
00:03:57,580 --> 00:04:01,630
Now there is an argument here to say if you've named things appropriately you should be able to find

52
00:04:01,630 --> 00:04:02,650
them with a name.

53
00:04:02,680 --> 00:04:08,140
However it gets a bit awkward when you've got gravel Wang and Gravel two grand will three you really

54
00:04:08,140 --> 00:04:09,010
need to see them.

55
00:04:09,010 --> 00:04:13,370
They may be distinctly different and it does matter which one you pick.

56
00:04:13,450 --> 00:04:16,410
Now all files for a particular asset together.

57
00:04:16,480 --> 00:04:22,240
This is another way of storing your files so if you have let's say we're working on the church door

58
00:04:22,240 --> 00:04:28,770
we could put all the textures and everything else together for that particular assets it's a pain to

59
00:04:28,770 --> 00:04:29,940
find one file.

60
00:04:29,940 --> 00:04:36,120
If you do that's because everything is all grouped together so that really doesn't help with share textures

61
00:04:36,630 --> 00:04:39,710
but you could always start like this and float up.

62
00:04:39,710 --> 00:04:44,550
So grabbing that say a wooden texture that you've got on your door then you find that you're using that

63
00:04:44,550 --> 00:04:51,290
wooden texture as well on a torch or on a seat well you can just float up to a higher level.

64
00:04:51,600 --> 00:04:56,360
But then again it does become a bit more difficult to track where things are.

65
00:04:56,400 --> 00:05:03,120
So I would actually favor especially as a beginner if you're using that wood texture in multiple places

66
00:05:03,510 --> 00:05:05,280
and you've got enough hard drive space.

67
00:05:05,280 --> 00:05:08,720
Most people do these days then just duplicates it.

68
00:05:08,730 --> 00:05:15,300
That also means that if you need to modify that wood texture that it won't modify everything that it's

69
00:05:15,300 --> 00:05:16,010
linked to.

70
00:05:16,020 --> 00:05:21,270
You can get yourself in a real pickle if you're not careful where things are linked together and it

71
00:05:21,270 --> 00:05:22,890
be easy to lose track.

72
00:05:22,890 --> 00:05:24,730
Trust me on that one.

73
00:05:24,750 --> 00:05:29,550
Okay so another thing that you can do is store your assets by where they are used in the game so you

74
00:05:29,550 --> 00:05:35,920
could have cemetery or office block or construction site or app wherever it happens to be.

75
00:05:36,360 --> 00:05:43,020
You can store things logically in where they used and that also has the benefits of being able to have

76
00:05:43,020 --> 00:05:44,800
a theme amongst your objects.

77
00:05:44,820 --> 00:05:48,450
And it's really easy to see if something's not on theme.

78
00:05:48,510 --> 00:05:53,460
However there's a possibility that if you're working with an artist and you're saying you need to make

79
00:05:53,460 --> 00:05:58,380
these assets for me please they might not know the locations well.

80
00:05:58,380 --> 00:06:04,830
So you can sort by categories so someone's focused on polishing an area of a game they're going to be

81
00:06:04,830 --> 00:06:06,570
able to work on it.

82
00:06:06,720 --> 00:06:12,870
Okay so let's talk about some external constraints things that we don't really have much say over we

83
00:06:13,070 --> 00:06:19,260
we kind of do I suppose in some ways but ideally we should adhere to the standardization that makes

84
00:06:19,260 --> 00:06:25,920
it a lot easier to communicate and work in a team game engines often have their own naming conventions

85
00:06:25,920 --> 00:06:27,450
I've touched on that already.

86
00:06:27,450 --> 00:06:33,660
Whether you need to name something with a prefix or suffix look at your game engines documentation and

87
00:06:33,660 --> 00:06:40,400
work to that now meshes breaks and textures will often have different names depending on where they're

88
00:06:40,410 --> 00:06:41,750
going to be used.

89
00:06:41,790 --> 00:06:48,960
So in real for instance I'm working a lot and I'm real at the moment a diffused texture a albedo texture

90
00:06:48,960 --> 00:06:56,460
the bass color whatever you want to call it the bass color of your mesh will have C as a suffix on the

91
00:06:56,460 --> 00:07:00,820
end but it will also have a T at the beginning.

92
00:07:00,900 --> 00:07:07,800
So naming things like that means that you know that they're going to be applied properly over in unreal

93
00:07:08,040 --> 00:07:12,090
and that also means that you can filter things properly as well within the game engine when you're setting

94
00:07:12,090 --> 00:07:17,820
up materials and it's not just unreal that that happens with it's with all external programs.

95
00:07:17,820 --> 00:07:22,170
It could be substance so that you're working with for instance it doesn't have to be a game engine but

96
00:07:22,170 --> 00:07:27,240
making sure you have things named appropriately so you know what it is you're looking at would be very

97
00:07:27,240 --> 00:07:27,510
great.

98
00:07:27,510 --> 00:07:33,390
So let's talk about a texture called bricks bricks doesn't mean anything.

99
00:07:33,560 --> 00:07:39,340
Now you could type bricks normal or bricks bump map or bricks albedo or bricks or whatever.

100
00:07:39,400 --> 00:07:41,340
Now the benefit of Isaac is quite generic.

101
00:07:41,370 --> 00:07:46,420
You know what tests the downside of that is it's not in any specific format.

102
00:07:46,470 --> 00:07:53,350
And again you will know what you're working with so named things appropriately OK so we've talked a

103
00:07:53,350 --> 00:07:57,100
lot about external file management.

104
00:07:57,130 --> 00:07:58,470
How to organize things.

105
00:07:58,630 --> 00:08:00,970
But what about blender organization itself.

106
00:08:00,970 --> 00:08:05,540
Well we're going to be making a much more complex scene than any we've previously made.

107
00:08:05,590 --> 00:08:08,170
It's going to consist of many many parts.

108
00:08:08,320 --> 00:08:11,710
So I would suggest you organize it as you go.

109
00:08:11,710 --> 00:08:15,730
And this goes so goes through your file system as well not afterwards.

110
00:08:15,820 --> 00:08:21,640
It will be a real pain in the backside trying to name everything afterwards or trying to put it into

111
00:08:21,640 --> 00:08:23,320
collections afterwards.

112
00:08:23,320 --> 00:08:25,930
Please remember to organize it as you go.

113
00:08:25,930 --> 00:08:27,850
We're all going to fall foul of this.

114
00:08:27,850 --> 00:08:33,760
And I've seen so many models that you look at afterwards and you just know that that's nearly impossible

115
00:08:33,760 --> 00:08:38,740
to edit because nothing's named appropriately so you don't know what it is looking in the outline.

116
00:08:39,690 --> 00:08:40,150
Okay.

117
00:08:40,150 --> 00:08:40,960
Yes.

118
00:08:40,960 --> 00:08:42,610
Use descriptive names.

119
00:08:42,700 --> 00:08:50,950
Cube cubes are it was here one etc. is not helpful to anyone except of course if it is a cube then I

120
00:08:50,950 --> 00:08:56,290
will let you get away with calling a cube but it is important it's not helpful for anyone you will know

121
00:08:56,290 --> 00:08:57,280
what it is.

122
00:08:57,340 --> 00:09:02,830
Now when you're working on it when you open up your file again perhaps even the next day you might not

123
00:09:02,830 --> 00:09:06,080
have a clue what cube refers to if you looked at it.

124
00:09:06,220 --> 00:09:11,080
You will have to go and have a look at it click it in the outline it come back to the 3D view look around

125
00:09:11,110 --> 00:09:17,380
oh oh It's a door I better go name it door and that's why you can see why organizing as you go rather

126
00:09:17,380 --> 00:09:19,740
than afterwards is a good idea.

127
00:09:19,870 --> 00:09:22,540
So there are some no no's as well.

128
00:09:22,540 --> 00:09:28,210
Never ever store multiple versions of the same asset in your master folder.

129
00:09:28,210 --> 00:09:34,000
Now we've not talked really about a master folder but this is your current working directory.

130
00:09:34,060 --> 00:09:39,520
If you've got a new iteration of something you're working on and it's to replace the older ones then

131
00:09:39,520 --> 00:09:41,370
don't keep them all in the same place.

132
00:09:41,370 --> 00:09:47,590
Push it into an archive folder so it's very clear that that asset is the one that you're using.

133
00:09:47,620 --> 00:09:53,590
So one bit of advice here is not to rename that put it in your archive folder name the folder whatever

134
00:09:53,590 --> 00:10:00,070
you need to but the asset itself don't go ahead and rename it renaming it will break any links to blender

135
00:10:00,070 --> 00:10:02,290
files that you're using the assets in.

136
00:10:02,410 --> 00:10:07,870
That would be a real shame and a pain in the backside to try and fix it or also break all the links

137
00:10:07,870 --> 00:10:10,040
that you've got in your game engine as well.

138
00:10:10,120 --> 00:10:11,470
Also not great.

139
00:10:11,470 --> 00:10:17,980
Of course there is a kind of exception to this and that is when you're exporting let's say both unity

140
00:10:17,980 --> 00:10:25,780
and unreal they both accept FP Xs see you probably going to be exporting into a specific directory in

141
00:10:25,780 --> 00:10:31,210
order to overwrite a previous version and there we go.

142
00:10:31,210 --> 00:10:33,430
That's it for me on this topic.

143
00:10:33,430 --> 00:10:37,960
However this is a great thing to discuss amongst yourselves as well.

144
00:10:37,960 --> 00:10:40,430
This is such a wide scope.

145
00:10:40,540 --> 00:10:44,380
I'd love to hear how you guys organize your files as well.

146
00:10:44,380 --> 00:10:46,450
The pros and cons of doing it that way.

147
00:10:46,450 --> 00:10:50,440
Be open about it if you know that there's a downside.

148
00:10:50,440 --> 00:10:57,250
Tell people about it as well as the good things about it and also if you've had some fun experiences

149
00:10:57,250 --> 00:10:58,820
share those as well.

150
00:10:58,840 --> 00:11:04,220
A good story of working in a team you can always laugh about it later can't you.

151
00:11:04,240 --> 00:11:06,790
Anyway that's enough for me on this topic.

152
00:11:06,790 --> 00:11:11,620
Please share your thoughts over in the discussions and I'll see you all in the next lecture.
