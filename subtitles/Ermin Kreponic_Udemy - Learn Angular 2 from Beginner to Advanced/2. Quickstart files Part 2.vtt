WEBVTT

00:00.230 --> 00:00.510
OK.

00:00.540 --> 00:02.330
Welcome back anyway.

00:02.520 --> 00:05.410
So we've done some smaller changes here.

00:05.520 --> 00:12.680
But for the time being I'm assuming that we collectively have no idea what the system got config dodgiest

00:12.690 --> 00:14.930
file actually is.

00:15.150 --> 00:17.370
So let's talk about it a little bit.

00:17.370 --> 00:21.180
System genius is a dynamic module loader.

00:21.180 --> 00:32.580
The QuickStart uses system just to load libraries as angular and our modules it is using the old sort

00:32.580 --> 00:40.200
of floating which means that it will load modules only and only when they are actually needed.

00:40.200 --> 00:47.240
Which is actually a rather efficient behavior in terms of Freestore in terms of resource consumption.

00:47.700 --> 00:51.550
Anyway the file is used for configuring the system.

00:51.570 --> 00:54.100
J.S. in map.

00:54.130 --> 01:04.150
So right here inside of map we tell system areas where to look for modules for example all at angular

01:04.570 --> 01:11.020
modules will be searched in node underlying modules at angular.

01:11.050 --> 01:19.890
Our source code is inside the app folder therefore our whole application is in is in the app module.

01:19.930 --> 01:27.620
However the typescript compiler will compile files to the DMP folder which we have created.

01:27.990 --> 01:29.200
We just go ahead and do this.

01:29.200 --> 01:29.620
There you go.

01:29.620 --> 01:37.020
So you have the DMP folder here which we have actually created so System Dreyer's needs to look for

01:37.020 --> 01:41.320
the app module inside of DNP slash app.

01:41.320 --> 01:42.810
Simple as that.

01:42.830 --> 01:49.750
Also our main file for the module app is in main dot G-S.

01:50.050 --> 01:56.110
So if we just go down a little bit as you can see it says app and then says main main geas the full

01:56.170 --> 01:56.910
extension.

01:56.920 --> 01:57.850
J.S..

01:57.850 --> 02:06.490
So our main file for the module app is in fact main dodginess which means that if we load the app Bargewell

02:06.760 --> 02:11.380
app slash main dodginess will be loaded as well.

02:11.440 --> 02:12.980
It is it isn't it.

02:13.000 --> 02:14.250
It is an entry point.

02:14.260 --> 02:21.040
If any of you are familiar with C or C++ or Java or similar or similar programming languages to those

02:21.310 --> 02:27.850
you will know that you have a main function and then you call the main first and then everything else

02:27.850 --> 02:30.670
gets called pretty much from the main.

02:30.850 --> 02:36.730
So it's that principle of function it functions under such principles or take that with grain of salt.

02:36.730 --> 02:38.130
It's similar to those principles.

02:38.140 --> 02:39.470
Let's put it that way.

02:40.650 --> 02:47.200
Anyway the next file that we're going to go ahead and take a look is Taiping start Jason as well.

02:47.200 --> 02:49.350
So actually it's a folder.

02:49.700 --> 02:50.860
No sorry.

02:52.010 --> 02:54.130
They do.

02:55.030 --> 03:02.230
God out there we go it's right down below.

03:02.230 --> 03:04.960
Don't look at the don't look at the folder for the time being.

03:04.960 --> 03:07.390
We'll get to that eventually.

03:07.390 --> 03:10.690
Anyway this is a pretty short explanation.

03:10.690 --> 03:20.950
This is using typings we can install typescript definitions for javascript packages some packages like

03:21.010 --> 03:27.700
E S 6 dash shim are not originally developed in typescript but in Javascript.

03:27.700 --> 03:31.010
So using Taiping we can install typescript definitions for them.

03:31.030 --> 03:34.110
You can think about them as wrappers.

03:34.150 --> 03:39.270
So there there needs to be something that wraps it and that basically translates it.

03:39.280 --> 03:44.950
Or you can think of it as an adapter the official the official terminology is actually that this is

03:44.950 --> 03:52.330
a wrapper but you can think of it as some sort of a translation when you write something in Javascript

03:52.330 --> 03:59.080
can you translate it to typescript so to say again take it with a grain of salt.

03:59.090 --> 04:05.530
Ok going to bid you farewell here and we're going to go ahead and continue along with these files to

04:05.530 --> 04:07.210
see what each one of them does.

04:07.210 --> 04:09.030
The ones that we're going to use anyway.
