WEBVTT

00:00.300 --> 00:02.070
Welcome back all.

00:02.220 --> 00:08.910
So today we're going to go ahead and just continue from where we left off at some code didn't save it

00:08.910 --> 00:09.790
here.

00:10.000 --> 00:16.290
Anyway we need to take a look at the Create component of TS So create art component that yes you will

00:16.290 --> 00:20.490
need to make this file.

00:20.490 --> 00:24.390
And here we're going to go ahead and construct our computer.

00:24.610 --> 00:33.000
So we are importing on an IT and on the stroy we have used them before we will need them for energy

00:33.000 --> 00:37.470
on an ad and energy on the stroy methods down low.

00:38.760 --> 00:39.820
Create that component.

00:40.070 --> 00:45.710
The amount that is the HD M-L which is going to be created right here.

00:45.720 --> 00:48.840
So it's not that big very small.

00:48.840 --> 00:50.950
I'll explain it in a moment.

00:51.180 --> 01:00.220
Next down below immediately we are exporting a class so this class will basically implement on an add

01:00.260 --> 01:06.630
on and destroy interfaces which means that it also must implement the methods that it contains.

01:06.630 --> 01:18.240
Hence the engine in it and Enghien destroyed it ups the risk of this a private account ID.

01:18.240 --> 01:25.680
So this is this is a private variable of type number we will use this variable in order to store the

01:25.680 --> 01:35.230
ID of the account from the query parameter if it exists and if it does not exist it should be.

01:35.300 --> 01:40.320
It is basically going to be none or some nonsensical thing like that.

01:40.320 --> 01:44.100
Anyway the underscored parents some which is of type.

01:44.100 --> 01:45.320
Any.

01:45.570 --> 01:51.120
Its also a private variable so we will store the subscription to route parameters so that we have the

01:51.120 --> 01:55.660
ability to basically unsubscribe when the class itself is destroyed.

01:57.120 --> 02:00.100
As Me Just scroll down a little bit.

02:00.100 --> 02:08.860
So here we have a constructor and we are injecting the activated Raut Service ID activated route's service

02:09.340 --> 02:14.620
into the underscore Araud private variable and down below.

02:14.620 --> 02:22.030
If you remember from before this component will this component will be basically this method will be

02:22.030 --> 02:24.850
called when the component is created.

02:25.000 --> 02:33.910
So Engy on it and we have a body here and then within the body we have a other function as well so function

02:33.910 --> 02:38.830
within the function the arrow base functions that we have used before.

02:38.830 --> 02:46.450
So all that this does that this code here does is fetch the account parameter which contains the ID

02:46.480 --> 02:47.770
of the account.

02:47.770 --> 02:49.840
This is basically how we do it.

02:49.840 --> 02:57.940
First of all we will create a subscription to d basically just subscribe to the underscore router her

02:58.180 --> 03:09.620
parents right here and then we will use the arrow function then well it won't actually be used straight

03:09.620 --> 03:10.030
away.

03:10.040 --> 03:17.450
It will be called when the parameters of the route actually change and those parameters of the route

03:17.450 --> 03:21.800
will be stored into the parents variable here.

03:21.830 --> 03:28.910
So this is all this is the statement is true for the route and query parameters both are not just for

03:28.910 --> 03:31.180
one set anyway.

03:31.190 --> 03:38.780
Perhaps as I said which contains the new route and query parameters upon change when the function is

03:38.780 --> 03:43.870
called this these these parameters will be passed by the router.

03:44.210 --> 03:48.990
Now we fetch the account parameter.

03:49.340 --> 03:50.900
Thats right here.

03:51.080 --> 03:58.250
So we use parens and then we say that we would like to take the account parameter from parents and we

03:58.250 --> 04:05.870
use the plus which is basically a quick and dirty way to convert the account into a number which is

04:05.870 --> 04:09.910
then stored into the account ID.

04:10.190 --> 04:11.200
No big deal there.

04:11.450 --> 04:19.450
And Double-O will just unsubscribe so angry or destroy perms or underscore parents Param that unsubscribe

04:19.460 --> 04:23.830
so we are simply unsubscribing gone.

04:24.380 --> 04:28.430
OK next we need to go into the component d'arte HD email

04:31.610 --> 04:41.260
I just moved this one and we're going to go up in the wrong one anyway.

04:41.520 --> 04:42.060
Right.

04:42.070 --> 04:48.280
So create art component art HD DML have a header here so just great transactional that's not really

04:48.280 --> 04:52.040
that important but down below these two statements.

04:52.150 --> 04:58.810
So the first statement basically what we are trying to achieve here is that if the account ID does not

04:58.810 --> 05:00.390
exist.

05:00.670 --> 05:14.270
So if from our previous file of this account ID basically does not exist if its something nonsensical.

05:14.590 --> 05:23.290
Then the account then basically the account ID will be NAND So N A and which stands for Not A Number.

05:23.530 --> 05:25.830
And this will be printed out onto the screen.

05:25.840 --> 05:33.080
So there is no preset for this account so Account ID.

05:33.680 --> 05:35.630
Yeah it will be.

05:35.630 --> 05:37.190
It will be true.

05:37.190 --> 05:41.610
And then we will it will be sorry it will be false.

05:41.990 --> 05:47.990
And then we will negate it then it will become true and this will be printed out onto the screen.

05:47.990 --> 05:56.030
However if the account ID does indeed exist then this will be printed out onto the screen so account

05:56.090 --> 06:04.190
is set id and then in bold letters we will actually fetch the account ID and print it out onto the screen

06:04.310 --> 06:05.610
as well.

06:07.000 --> 06:10.420
I'll show you how all this looks like on the site.

06:10.450 --> 06:16.620
As soon as we're done with just a few minor modifications so go into the details start component RTX

06:17.730 --> 06:21.360
details start component at ts and

06:23.860 --> 06:26.430
router router directives.

06:26.440 --> 06:28.950
So this is a new thing which was imported here.

06:29.070 --> 06:39.550
We need it for the rowdier link which we will use in the DML and we just added it basically here to

06:39.550 --> 06:44.460
the directives that said that's there isn't that much.

06:44.490 --> 06:46.110
There isn't anything else to do.

06:46.110 --> 06:53.930
Next up we go into the details DOD component that h d m l where we need to alter on the one line for

06:54.290 --> 06:55.110
you.

06:55.210 --> 06:56.060
There we go.

06:56.080 --> 06:59.540
I've actually written a number of the light needs to be altered.

07:00.040 --> 07:01.090
So what.

07:01.120 --> 07:04.150
This is the button that we shall create and add.

07:04.150 --> 07:10.490
So we want this button to take us to the creation of the transaction where we click on it.

07:10.510 --> 07:15.800
We want to go to where the transaction can actually be created for that particular account.

07:15.940 --> 07:21.260
Which means that we will have to use the query parameters and preset the account ID.

07:21.340 --> 07:22.000
How do we do this.

07:22.000 --> 07:28.390
Well we simply set the query parameter and so have the router link and then it goes transactions which

07:28.390 --> 07:35.380
is the which is the main route and you have the child route and then we will set the quit one of the

07:35.380 --> 07:36.670
query parameters.

07:36.850 --> 07:44.680
So the query parameter is a count and we will initialize it to account dot underscore account data ID

07:44.860 --> 07:51.940
and the square account that I underscore account is a other variable and data ID is that which is contained

07:51.940 --> 07:55.200
within the within the array.

07:55.450 --> 08:02.080
One of the elements anyway down below this is nothing to suggest reassess how we would like our button

08:02.110 --> 08:03.100
to be colored.

08:03.100 --> 08:08.710
So primary I do believe that it's going to be blue and then add trance action that's what's going to

08:08.710 --> 08:15.250
be written within the button itself and the small small small modifications here is modification here

08:15.250 --> 08:16.220
within the C Ss.

08:16.240 --> 08:23.170
So this number can just change it to 12 because we want to move our button from the bottom and then

08:23.260 --> 08:28.130
let's go just save all the files and go on to the site.

08:28.230 --> 08:34.020
It's already here and this place and

08:38.200 --> 08:40.180
OK so welcome to personal finance.

08:40.240 --> 08:44.130
Let's go ahead and look at the accounts so there are two accounts here.

08:44.290 --> 08:47.490
Go ahead and click on the first one you can click on the second one doesn't matter.

08:47.500 --> 08:54.940
And this is the button that is added here so it says add transaction account ID is 1.

08:55.360 --> 09:06.950
So if I click on Add transaction account set id 1 create transaction an up here is the interesting part.

09:06.990 --> 09:08.960
Well let me just go ahead and actually

09:16.360 --> 09:17.490
capitis.

09:17.740 --> 09:19.650
So why did I do this.

09:19.890 --> 09:21.950
Well because I want you to take a look at it.

09:22.150 --> 09:27.330
You have the HP localhost blah blah transactions create child route.

09:27.520 --> 09:33.590
That's fine but you have the semicolon here and Engler has a unique way a rather unique way.

09:33.630 --> 09:40.380
Or maybe not that you need but I don't know any other framework or programming language for Thorpe and

09:40.380 --> 09:44.150
it actually uses semi-colons to separate query parameters.

09:44.470 --> 09:45.060
Maybe there are.

09:45.070 --> 09:46.100
Correct me if I'm wrong.

09:46.140 --> 09:46.990
It doesn't really matter.

09:46.990 --> 09:54.400
So as I said Engler to use uses a rather unique way to separate the query parameters from the route

09:54.400 --> 09:55.190
itself.

09:55.510 --> 10:01.330
So you have the same icon here and then you have the query parameter.

10:01.330 --> 10:03.610
It says account equals one.

10:03.610 --> 10:11.320
Usually you would have something like a question mark here but and you don't need the ADD percent signs

10:11.320 --> 10:16.830
or anything like that it's used in other frameworks you just separate them by placing another semi-colon

10:16.840 --> 10:20.160
here and then you can add.

10:20.230 --> 10:28.650
And then I don't know if you have more than one query parameter you can just say Line 50 so lines 50

10:28.660 --> 10:30.530
something like something like this.

10:30.550 --> 10:33.950
So you can they key there you can add a lot of them here.

10:34.840 --> 10:38.290
And I just wanted you to take a look at that.

10:38.430 --> 10:46.920
If I go ahead and delete the account because 1 and just leave that create it says there is no preset

10:46.920 --> 10:49.140
for this account.

10:49.140 --> 10:55.320
This is why it doesn't it doesn't seem that important now it doesn't seem all that that the account

10:55.320 --> 11:02.010
has a preset etc. but when you click on Add transaction you wanted to you want to take you to a reference

11:02.010 --> 11:06.060
point that is related to everything that is that account.

11:06.060 --> 11:12.330
So when you want to if we click on an transaction we want to be able to enter the transaction for this

11:12.330 --> 11:19.650
particular account nothing else and we don't want to specify for which account we are adding a transaction

11:19.680 --> 11:25.170
upon clicking our transaction button we wanted to take us there in an automated fashion.

11:25.170 --> 11:28.430
Sure I guess there must be some other ways of doing this simpler.

11:28.440 --> 11:34.200
But I wanted to demonstrate the query parameters here and how they actually function.

11:34.220 --> 11:38.120
Anyway I'm going to bid you farewell here and I hope to see you in the follow up.
