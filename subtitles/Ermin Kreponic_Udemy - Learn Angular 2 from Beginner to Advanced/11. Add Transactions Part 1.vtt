WEBVTT

00:00.270 --> 00:01.730
Welcome back everybody.

00:02.100 --> 00:07.650
So today we're going to go ahead and begin expanding our application.

00:07.650 --> 00:13.110
So when you go on to the accounts and when you click on one of the accounts you're going to get something

00:13.260 --> 00:14.370
like this.

00:14.550 --> 00:20.340
So you will have transactions basically it will have the value of a transaction.

00:20.370 --> 00:29.190
If the money came in or if the money went out the transactions will have dates and they will have some

00:29.190 --> 00:33.540
sort of description signed placed in some random descriptions here so something something else.

00:33.540 --> 00:34.860
Bills paid.

00:35.310 --> 00:41.820
And in addition to that transactions will also have some sort of tags that you wish to put into them.

00:42.100 --> 00:47.560
So the tag for this transaction is for example bills electricity or something like that.

00:47.880 --> 00:52.650
And then it gives you the total balance of the account here as well.

00:54.340 --> 00:54.880
OK.

00:54.960 --> 00:58.930
So let's have a look at our files.

00:59.210 --> 01:05.860
I'm just going to go ahead and close these Ok the first one that we're going to take a look is transaction

01:05.950 --> 01:06.910
modeled out here.

01:06.970 --> 01:14.290
So we will need to create a transaction folder where we will store everything that is related to the

01:14.290 --> 01:20.590
transactions and within it we will have the transaction modeled out.

01:20.610 --> 01:28.570
Yes as you can see and transaction that service thius so transaction model is fairly straight forward.

01:29.960 --> 01:38.000
And basically we just create a class transaction and exported all the fields down below and this class

01:38.030 --> 01:39.120
will be public.

01:39.140 --> 01:48.110
That is the as that is a model and the whole point of them being here is so that they could actually

01:48.110 --> 01:49.750
be used elsewhere.

01:49.940 --> 01:53.160
So they need to be accessible.

01:53.540 --> 02:01.460
Now you have the ID there you have some sort of a variable ID of type string.

02:01.460 --> 02:04.690
This will be the ID of the transaction itself.

02:04.720 --> 02:06.000
And you have the value.

02:06.200 --> 02:12.870
So this represents the value of a transaction means that basically money the minus will mean that the

02:12.920 --> 02:15.290
money went away and the plus that the money came in.

02:15.290 --> 02:18.080
So as you can see if there is no minus if its green like this.

02:18.070 --> 02:22.530
Thats not a plus if its green or if its like this.

02:23.180 --> 02:23.910
The money came in.

02:23.930 --> 02:30.740
But if there is a minus and if its read the money went away gone anyway.

02:31.040 --> 02:34.200
General transaction description will be down below.

02:34.400 --> 02:39.530
So we have a description variable which is of type String thats just some general description for the

02:39.530 --> 02:41.790
transaction that is right here.

02:43.530 --> 02:48.750
And of course we need the we need the we need the dates to be recorded for every transaction.

02:48.750 --> 02:59.590
So you have the dates here listed as well and we got words you have tags which I have which are to the

02:59.590 --> 02:59.950
right.

02:59.950 --> 03:06.600
So Ive just placed in some random tax but you can play some whatever you want there as well.

03:07.430 --> 03:13.420
This is so that you can better trace the transactions and down below you have the account ID.

03:13.450 --> 03:20.830
So we also need to bind the transaction to a particular account and we will do that by using the account

03:20.890 --> 03:25.560
ID of course you have to create the transaction folder first.

03:25.560 --> 03:33.880
As I said before and then these two files within it hopefully by now you know how to create this transaction

03:33.880 --> 03:36.250
folder is in the account folder.

03:36.250 --> 03:39.270
So now let me just go and check this

03:44.200 --> 03:45.170
its India folder.

03:45.180 --> 03:47.840
Yep my bad.

03:47.880 --> 03:52.440
Sorry I just get confused with a lot of things that are currently opened up.

03:52.440 --> 03:55.090
So the transaction folder is in the app folder.

03:56.470 --> 04:02.560
And within it you have these two files which you need to create which hopefully by this point of time

04:02.560 --> 04:05.750
you know how to do anyway.

04:06.060 --> 04:14.880
Now the transaction service starts yes you have well not a bigger file here but hey it's not it's it's

04:14.880 --> 04:19.900
just there a lot of new code that needs to be written.

04:20.010 --> 04:21.600
Let me just do this.

04:21.720 --> 04:29.040
So many better ways of doing this but I am going to be very lazy.

04:31.060 --> 04:34.370
And maybe I won't.

04:34.570 --> 04:43.720
Hold on let me just format this a little bit so that it's a little bit more clear as to what is it exactly

04:43.810 --> 04:46.540
that is being done here.

04:46.660 --> 04:48.610
Actually I don't need these.

04:48.710 --> 04:52.900
It's just need to do this.

04:53.470 --> 05:04.530
And now I need it in dance which was just a part of me but well I'm just going to do this as well and

05:05.100 --> 05:08.280
separate all the fields to the new lines.

05:09.750 --> 05:12.870
And I see it looks a little bit better.

05:13.050 --> 05:16.630
You can agree or disagree with me either way.

05:19.430 --> 05:25.160
Ops didn't see this one.

05:25.560 --> 05:34.420
So here and here and the other one kind of makes me wonder why I didn't do this before.

05:36.730 --> 05:42.590
I don't know I guess when you're writing the code that you are alone you are reading it right in a very

05:42.590 --> 05:47.630
different way from when you're writing it for other people to actually see.

05:48.320 --> 05:52.550
So that was my fixation

05:56.030 --> 05:58.850
should be it aside from this one.

05:58.870 --> 05:59.660
There we go.

06:00.650 --> 06:02.000
So let's go.

06:02.030 --> 06:08.990
Let's go over this file now so you have the injectable decorator up injectable decorator up here which

06:08.990 --> 06:10.580
we have used before.

06:10.580 --> 06:18.510
So this decorator is needed in order to create services in order to be able to inject them into components.

06:18.830 --> 06:29.090
And this is the transaction model that we just basically made so the transaction market model Ts account.

06:29.120 --> 06:35.000
This is all this is already familiar from before except for using the double dot here which I've explained

06:35.000 --> 06:35.540
before.

06:35.540 --> 06:38.580
It means that we are reverting one directory back.

06:38.570 --> 06:44.300
So we're just creating a shortened path here because we have to exit the transaction folder and then

06:44.360 --> 06:48.670
go looking for the account and account or model

06:51.240 --> 07:00.320
anyway moving on downwards we are making this class inject injectable.

07:00.330 --> 07:06.810
Basically we're just adding a decorator to a class to declare it injectable just as we basically did

07:06.870 --> 07:07.690
before.

07:07.710 --> 07:15.100
The previous to Torrijos so just export class and the class name is transaction service.

07:15.100 --> 07:17.710
Now that below there is a private variable.

07:17.850 --> 07:25.680
So since we at the moment do not really have a database this array will represent the transactions that

07:25.680 --> 07:31.870
we have and the service will pool the data from it later we'll add a database.

07:31.950 --> 07:39.800
But for the time being I'm just going to use this array as sort of a simulation of a database so to

07:39.800 --> 07:41.640
say.

07:41.900 --> 07:46.060
So this transaction does is this is like transactions.

07:46.070 --> 07:53.660
And then you have you have an array transaction you have a variable transactions private one of type

07:53.780 --> 07:55.280
array.

07:56.120 --> 08:03.760
And basically in it we will store the information in regard to the transaction.

08:03.770 --> 08:07.240
So Id here is one.

08:07.250 --> 08:10.130
So this is the ID of the transaction itself.

08:10.280 --> 08:15.220
The value is 50 as you can see the value is 50.

08:15.230 --> 08:22.360
It's one and you have the description which is something and then you have the date.

08:22.380 --> 08:24.710
And this is something you hear so create.

08:24.720 --> 08:33.930
We are creating a new object here to basically initializing the date and time which will be set by default

08:33.930 --> 08:36.130
to the current date.

08:36.500 --> 08:40.240
And that's why it's 19.

08:40.280 --> 08:42.290
Oh my God it's 19.

08:42.320 --> 08:48.560
Today I have a terrible I have a terrible orientation and time wise.

08:48.650 --> 08:55.370
If you agree to meet with me at 5:00 you will be lucky if I arrive by 7:00 or something like that.

08:55.380 --> 09:02.090
I arrive two hours later two hours early which is a which is a cause for a lot of funny scenes and a

09:02.090 --> 09:04.940
lot of rage anyway.

09:05.720 --> 09:06.620
Yeah.

09:07.160 --> 09:13.490
Down below just some tags you can add tags here I just added some random tag some something it doesn't

09:13.490 --> 09:21.590
really matter if you want to add multiple tags just separated by a coma as demonstrated here and this

09:21.740 --> 09:30.440
account ID so we will tie this to the account with the ID 1 which is basically our first account that

09:30.440 --> 09:31.780
we created.

09:34.060 --> 09:39.220
And the other two are exactly the same pretty much except this one is actually a minus.

09:39.240 --> 09:45.770
And the other two are actually like some money that came in and this is the money that went away.

09:49.390 --> 09:55.240
Next up we have this function a public method basically.

09:55.240 --> 10:04.930
So this is used to get all the transactions from some account basically as a parameter base as it takes

10:05.350 --> 10:08.500
it takes actually the account ID as a parameter.

10:08.500 --> 10:17.820
So we are sending the ID of the account and it will return a promise in a form of an array of transept

10:17.970 --> 10:20.540
of transactions.

10:21.010 --> 10:26.990
And down below we are using the previously utilized syntax for a promise.

10:27.010 --> 10:33.970
So you have resolve and reject as parameters of an error syntax function although reject will not be

10:33.970 --> 10:38.290
used at all and only the resolve will be used.

10:38.290 --> 10:46.870
So we'll just go ahead and resolve this straight away because there is no case when it will not be resolved

10:47.900 --> 10:48.980
transaction.

10:49.000 --> 10:51.480
Basically here this is transactions.

10:51.490 --> 10:54.860
This is our array.

10:54.960 --> 10:56.610
Me just go ahead and show it to you.

10:56.620 --> 10:57.750
You see transactions.

10:57.760 --> 11:04.380
This is our array of filter is the method of the array.

11:04.380 --> 11:11.370
A built in method which will return and your way in which we will have elements from the from the array

11:11.370 --> 11:14.930
of elements from which the arrow function return true.

11:14.940 --> 11:20.880
So to say I know I messed that up whereby as soon as it came out of my mouth I realized that there was

11:20.880 --> 11:22.770
something messed up anyway.

11:23.040 --> 11:24.660
You have a filter here.

11:24.980 --> 11:28.600
And so the filter says OK I will create a new array.

11:28.740 --> 11:36.780
And in that array I will store all the elements from the previous array for which this function actually

11:36.840 --> 11:38.280
returns true.

11:38.730 --> 11:46.290
And what happens here is that this is an arrow function again and you have Tran which is basically a

11:46.290 --> 11:50.280
parameter that will also be the element that we're looking into.

11:50.640 --> 11:57.330
And we are then checking that with this.

11:57.600 --> 12:05.010
So then we're checking is the account ID of this transaction equal to the past account ID if the result

12:05.010 --> 12:10.050
of this can be the result of this comparison will be returned.

12:10.050 --> 12:14.250
So if true that will be stored in the new array.

12:14.250 --> 12:26.030
If not it won't basically and down below like with the account service before we will export to this

12:26.030 --> 12:27.680
variable.

12:27.680 --> 12:36.290
So we will export this variable so transaction service providers that contains all the needed providers

12:36.290 --> 12:37.840
for this service.

12:37.850 --> 12:45.650
Although this is strictly not necessary at this point in time trust me just included this does prevent

12:45.740 --> 12:50.350
a lot of troubleshooting later on if it problems do occur.

12:50.460 --> 12:54.050
Anyway better farewell and hope to see you in the follow up to Torito.
