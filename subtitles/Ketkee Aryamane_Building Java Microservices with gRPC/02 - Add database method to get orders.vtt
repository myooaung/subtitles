WEBVTT
1
00:00:00.007 --> 00:00:02.003
- [Instructor] The next step will be to write

2
00:00:02.003 --> 00:00:04.009
the OrderDao class which is going to get us

3
00:00:04.009 --> 00:00:07.006
the orders for the user from the database.

4
00:00:07.006 --> 00:00:12.002
So let's go to the IDE, and under the db package,

5
00:00:12.002 --> 00:00:14.004
I will add one more class,

6
00:00:14.004 --> 00:00:17.003
which is the OrderDao.

7
00:00:17.003 --> 00:00:22.008
In this I will take a Logger first for logging anything,

8
00:00:22.008 --> 00:00:26.003
it's java.util.logging,

9
00:00:26.003 --> 00:00:35.005
and let's see Logger.getLogger orderDao.class.getName.

10
00:00:35.005 --> 00:00:37.001
So we have the logger ready,

11
00:00:37.001 --> 00:00:42.004
and then we can write a method

12
00:00:42.004 --> 00:00:46.002
which is going to retrieve the orders.

13
00:00:46.002 --> 00:00:50.001
So for this, we will first need a domain object

14
00:00:50.001 --> 00:00:52.006
in order to collect all the orders data.

15
00:00:52.006 --> 00:00:54.009
So let's go and do that first.

16
00:00:54.009 --> 00:00:58.005
I will go to the db package,

17
00:00:58.005 --> 00:01:01.002
make another class that will be Order,

18
00:01:01.002 --> 00:01:06.003
which is the domain object inside which all my data sits.

19
00:01:06.003 --> 00:01:10.003
Let's come back to the Order now and define fields in this,

20
00:01:10.003 --> 00:01:15.003
so there will be a private userId,

21
00:01:15.003 --> 00:01:21.001
there will be an orderId,

22
00:01:21.001 --> 00:01:28.001
there'll also be noOfItems, for every order,

23
00:01:28.001 --> 00:01:32.007
there will be the amount,

24
00:01:32.007 --> 00:01:36.006
and there'll be an orderDate,

25
00:01:36.006 --> 00:01:41.000
that's java.util and let's also go

26
00:01:41.000 --> 00:01:47.007
and generate the Getters and Setters for all these feats.

27
00:01:47.007 --> 00:01:49.006
Right, so our domain object is ready,

28
00:01:49.006 --> 00:01:53.001
now let's go back to the orderDao

29
00:01:53.001 --> 00:01:55.004
and write a method here.

30
00:01:55.004 --> 00:01:59.000
Now this method is going to have multiple orders returned

31
00:01:59.000 --> 00:02:00.000
from the database.

32
00:02:00.000 --> 00:02:02.007
So let's take the return type

33
00:02:02.007 --> 00:02:09.006
as List of the order domain objects, like that.

34
00:02:09.006 --> 00:02:18.001
And the input for this method is going to be the userId.

35
00:02:18.001 --> 00:02:20.007
The next thing will be to get the connection first

36
00:02:20.007 --> 00:02:22.009
because it's database code.

37
00:02:22.009 --> 00:02:24.008
So let's grab the connection using

38
00:02:24.008 --> 00:02:29.000
the H2DatabaseConnection class that we already have.

39
00:02:29.000 --> 00:02:39.006
And on this, I'm going to fetch the PreparedStatement,

40
00:02:39.006 --> 00:02:41.006
that'll contain my query.

41
00:02:41.006 --> 00:02:43.007
So the query's again going to be a very simple one,

42
00:02:43.007 --> 00:02:50.006
if you're going to select * from the orders table,

43
00:02:50.006 --> 00:02:53.004
where I'm just going to push this on the next line

44
00:02:53.004 --> 00:02:56.003
so that it becomes easier to view for us.

45
00:02:56.003 --> 00:03:03.002
Yes, so select * from orders where the user_id

46
00:03:03.002 --> 00:03:08.001
will be the dynamic parameter that we want to set.

47
00:03:08.001 --> 00:03:10.002
And let's set that dynamic parameter.

48
00:03:10.002 --> 00:03:15.003
So I'm going to say preparedStatement.setInt, first parameter,

49
00:03:15.003 --> 00:03:18.005
and that will be the userId that is received

50
00:03:18.005 --> 00:03:21.004
from the argument that is on line 11.

51
00:03:21.004 --> 00:03:25.001
So we feed that as the parameter to the query.

52
00:03:25.001 --> 00:03:26.004
We're getting few errors,

53
00:03:26.004 --> 00:03:30.000
so that's basically asking us to handle everything

54
00:03:30.000 --> 00:03:32.003
using try/catch, so let's do that.

55
00:03:32.003 --> 00:03:37.002
I'm also going to make sure that the try block on line 15,

56
00:03:37.002 --> 00:03:41.001
actually should start when we do everything else

57
00:03:41.001 --> 00:03:46.001
so let's do that and align this correctly.

58
00:03:46.001 --> 00:03:48.001
Let me also do one more thing,

59
00:03:48.001 --> 00:03:52.000
I can grab this connection variable outside,

60
00:03:52.000 --> 00:03:55.001
instead of the try block,

61
00:03:55.001 --> 00:03:57.001
set this to null here

62
00:03:57.001 --> 00:04:05.009
and then just assign this at the corresponding code line.

63
00:04:05.009 --> 00:04:07.008
The other thing that I want to do here

64
00:04:07.008 --> 00:04:09.005
before proceeding to the code,

65
00:04:09.005 --> 00:04:15.001
is defining a list of orders in which we collect our data.

66
00:04:15.001 --> 00:04:18.000
So let's make that Array List here,

67
00:04:18.000 --> 00:04:26.001
orders equal to new ArrayList, right?

68
00:04:26.001 --> 00:04:28.009
Now let's come down and this preparedStatement or setInt

69
00:04:28.009 --> 00:04:31.001
will be setting the parameter on line 25,

70
00:04:31.001 --> 00:04:33.000
this line should not sit outside the try

71
00:04:33.000 --> 00:04:38.009
so I'm just going to cut this and paste it under try, okay.

72
00:04:38.009 --> 00:04:40.002
In addition to this if you see,

73
00:04:40.002 --> 00:04:43.000
you have the catch block that got generated

74
00:04:43.000 --> 00:04:45.003
and it has got the printStackTrace on 24,

75
00:04:45.003 --> 00:04:46.004
which we are not happy with,

76
00:04:46.004 --> 00:04:49.001
we'll just log it using a logger.

77
00:04:49.001 --> 00:04:52.000
So we'll say logger.log,

78
00:04:52.000 --> 00:04:57.001
SEVERE level say Could not execute query,

79
00:04:57.001 --> 00:04:59.001
this is a message of your choice, of course,

80
00:04:59.001 --> 00:05:03.005
along with the exception object.

81
00:05:03.005 --> 00:05:06.003
So what do we have to do in addition to setting

82
00:05:06.003 --> 00:05:08.003
the parameter on the PreparedStatement.

83
00:05:08.003 --> 00:05:10.003
The next big step is executing the query,

84
00:05:10.003 --> 00:05:13.002
so we'll take a ResultSet object

85
00:05:13.002 --> 00:05:17.009
that will be ResultSet object, yeah, that's java.sql,

86
00:05:17.009 --> 00:05:22.006
and you have to call the executeQuery method

87
00:05:22.006 --> 00:05:24.008
on that statement.

88
00:05:24.008 --> 00:05:27.006
Then we'll iterate this ResultSet,

89
00:05:27.006 --> 00:05:32.006
while resultSet.next,

90
00:05:32.006 --> 00:05:33.009
and what are we going to do?

91
00:05:33.009 --> 00:05:36.003
Understand that the query on line 24,

92
00:05:36.003 --> 00:05:38.005
which is select * from orders where user_id

93
00:05:38.005 --> 00:05:41.004
is going to fetch us multiple rows from the database.

94
00:05:41.004 --> 00:05:43.004
So for every row that we fetch,

95
00:05:43.004 --> 00:05:45.005
we will create an Order object,

96
00:05:45.005 --> 00:05:49.005
and that Order object will get added to the list of orders

97
00:05:49.005 --> 00:05:52.007
that we have declared on line 18.

98
00:05:52.007 --> 00:05:54.001
So that's what we're going to do.

99
00:05:54.001 --> 00:05:56.008
So let's say for every resultSet,

100
00:05:56.008 --> 00:06:01.002
let's create a new Order object like this,

101
00:06:01.002 --> 00:06:03.004
and let's start setting the fields

102
00:06:03.004 --> 00:06:06.002
on this Order object one by one.

103
00:06:06.002 --> 00:06:10.005
So we'll do order.setUserId,

104
00:06:10.005 --> 00:06:16.002
and that will come as an integer from the ResultSet,

105
00:06:16.002 --> 00:06:18.004
the name of the column in the database is order_id,

106
00:06:18.004 --> 00:06:20.008
so that's what we'll write there.

107
00:06:20.008 --> 00:06:22.009
Similarly, we'll do,

108
00:06:22.009 --> 00:06:27.006
okay, I think this is user_id, so this should be user_id.

109
00:06:27.006 --> 00:06:29.006
Let's correct that, yes.

110
00:06:29.006 --> 00:06:32.002
The next one will be setOrderId,

111
00:06:32.002 --> 00:06:34.007
which is going to come from the order_id column

112
00:06:34.007 --> 00:06:35.008
from the database,

113
00:06:35.008 --> 00:06:43.001
so that again is an int.

114
00:06:43.001 --> 00:06:48.000
The next one is the NoOfItems, that's again an int,

115
00:06:48.000 --> 00:06:54.000
so let's do that, no_of_items,

116
00:06:54.000 --> 00:06:56.003
that's the name of the column.

117
00:06:56.003 --> 00:07:02.005
Then we have setTotalAmount,

118
00:07:02.005 --> 00:07:03.009
we say getDouble,

119
00:07:03.009 --> 00:07:08.008
and the name of the column is total_amount.

120
00:07:08.008 --> 00:07:11.006
And lastly we have the OrderDate,

121
00:07:11.006 --> 00:07:16.000
so that will come as a Date from the database,

122
00:07:16.000 --> 00:07:20.001
the name of the column is order_date.

123
00:07:20.001 --> 00:07:23.000
So once we have all the fields set for the Order object,

124
00:07:23.000 --> 00:07:25.001
the last step would be to add the total object

125
00:07:25.001 --> 00:07:26.008
to the list of orders.

126
00:07:26.008 --> 00:07:32.001
So I'm going to say orders.add that order object.

127
00:07:32.001 --> 00:07:34.008
So just to be clear, these column names are coming

128
00:07:34.008 --> 00:07:36.008
from our initialized .sql script

129
00:07:36.008 --> 00:07:38.008
which is already present under your resources,

130
00:07:38.008 --> 00:07:42.000
feel free to double-check in case there are typos

131
00:07:42.000 --> 00:07:45.001
so that they don't result into any errors.

132
00:07:45.001 --> 00:07:47.008
So for the entire ResultSet that we have,

133
00:07:47.008 --> 00:07:51.006
for each row that we retrieved, we created an order object.

134
00:07:51.006 --> 00:07:55.006
We set all the fields and we added that to the list.

135
00:07:55.006 --> 00:07:58.003
And the final statement will be to return

136
00:07:58.003 --> 00:08:04.001
that entire list back.

137
00:08:04.001 --> 00:08:07.008
So that is basically our data access object class

138
00:08:07.008 --> 00:08:10.002
which will retrieve orders for a user,

139
00:08:10.002 --> 00:08:13.002
and set them into the order domain object.

140
00:08:13.002 --> 00:08:15.007
A list of such order domain objects will be returned

141
00:08:15.007 --> 00:08:17.000
from this method.

