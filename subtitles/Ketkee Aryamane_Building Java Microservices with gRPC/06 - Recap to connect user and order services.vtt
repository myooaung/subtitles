WEBVTT
1
00:00:00.007 --> 00:00:01.008
- [Instructor] Now that we have the user

2
00:00:01.008 --> 00:00:04.005
and the order services both functioning correctly,

3
00:00:04.005 --> 00:00:07.009
the last bit will be, to connect both of these services.

4
00:00:07.009 --> 00:00:08.007
So you may think

5
00:00:08.007 --> 00:00:10.009
that since both of these services are anyway residing

6
00:00:10.009 --> 00:00:12.003
in the same project,

7
00:00:12.003 --> 00:00:16.007
why not just call the order dow from the user dow?

8
00:00:16.007 --> 00:00:19.001
Fair, but that's not what we want to do.

9
00:00:19.001 --> 00:00:20.003
We want to make sure

10
00:00:20.003 --> 00:00:25.004
that we use a gRPC call to connect both of these services.

11
00:00:25.004 --> 00:00:28.004
As stated already before, we emulated a setup

12
00:00:28.004 --> 00:00:31.000
where both of these services are running independently

13
00:00:31.000 --> 00:00:32.004
on different ports.

14
00:00:32.004 --> 00:00:35.006
And now we will connect them using a gRPC call.

15
00:00:35.006 --> 00:00:37.003
So what are we going to do exactly?

16
00:00:37.003 --> 00:00:41.000
The first thing is, we will write a gRPC Java client,

17
00:00:41.000 --> 00:00:42.005
which is for the order service

18
00:00:42.005 --> 00:00:46.003
so now we are going to write the order client class.

19
00:00:46.003 --> 00:00:49.007
Once this is done, then we're going to use this client

20
00:00:49.007 --> 00:00:52.008
in the user service implementation class.

21
00:00:52.008 --> 00:00:55.004
Let's recollect that the UserServiceImpl class

22
00:00:55.004 --> 00:00:57.008
already retrieves the user details.

23
00:00:57.008 --> 00:01:00.007
So now when you invoke the order client

24
00:01:00.007 --> 00:01:02.003
from the user service,

25
00:01:02.003 --> 00:01:04.005
it'll also get us the order details.

26
00:01:04.005 --> 00:01:08.000
So both the user and the order details will be fetched

27
00:01:08.000 --> 00:01:10.003
in the UserServiceImpl class.

28
00:01:10.003 --> 00:01:13.001
We could extract a part of that order data

29
00:01:13.001 --> 00:01:15.009
and add it to our user response object.

30
00:01:15.009 --> 00:01:18.003
And this is the final user response object

31
00:01:18.003 --> 00:01:21.001
that'll get returned when the call is completed.

32
00:01:21.001 --> 00:01:23.001
So once we've written the order client

33
00:01:23.001 --> 00:01:25.001
and invoked it in the user service,

34
00:01:25.001 --> 00:01:28.008
we will start both the user and the order servers,

35
00:01:28.008 --> 00:01:32.004
then we will call the user service by the BloomRPC client,

36
00:01:32.004 --> 00:01:35.003
which will internally call the order service

37
00:01:35.003 --> 00:01:37.006
through the order client.

38
00:01:37.006 --> 00:01:39.006
And when the call gets completed,

39
00:01:39.006 --> 00:01:42.001
the user response will show the order data

40
00:01:42.001 --> 00:01:44.006
along with the user details.

41
00:01:44.006 --> 00:01:47.004
So let's go ahead and execute these remaining steps

42
00:01:47.004 --> 00:01:50.000
to connect both the services.

