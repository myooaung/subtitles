WEBVTT
1
00:00:00.007 --> 00:00:02.003
- [Instructor] So now let's run

2
00:00:02.003 --> 00:00:04.005
the OrderServer that we wrote

3
00:00:04.005 --> 00:00:08.007
This should start the server on 50052

4
00:00:08.007 --> 00:00:12.003
as we have written the code.

5
00:00:12.003 --> 00:00:14.006
Yeah, so the OrderServer has started.

6
00:00:14.006 --> 00:00:18.005
Let's also make sure that we have multiple records

7
00:00:18.005 --> 00:00:19.007
for a particular user ID,

8
00:00:19.007 --> 00:00:22.006
so I'm going to just double check that.

9
00:00:22.006 --> 00:00:27.006
Okay, so we have one record.

10
00:00:27.006 --> 00:00:30.009
We have just one record for the user ID 5,

11
00:00:30.009 --> 00:00:37.005
so what I'm going to do is I'm going to quickly add one more

12
00:00:37.005 --> 00:00:39.006
so that we have multiple records.

13
00:00:39.006 --> 00:00:43.008
So let's increment the order ID,

14
00:00:43.008 --> 00:00:45.005
the user ID remains the same.

15
00:00:45.005 --> 00:00:47.003
We can change the number of items,

16
00:00:47.003 --> 00:00:51.003
we can change the amount,

17
00:00:51.003 --> 00:00:55.002
and we can change this date too, okay.

18
00:00:55.002 --> 00:00:58.004
So what we will do is, if you look right up,

19
00:00:58.004 --> 00:01:01.003
we have used this Chandler's username before to

20
00:01:01.003 --> 00:01:02.006
retrieve the user details.

21
00:01:02.006 --> 00:01:05.002
We're going to pick this user ID, which is five,

22
00:01:05.002 --> 00:01:06.008
and we're going to retrieve orders,

23
00:01:06.008 --> 00:01:08.005
and we know that in the order stable

24
00:01:08.005 --> 00:01:12.009
we have two records for the user ID five.

25
00:01:12.009 --> 00:01:14.004
Okay, so our orders already started,

26
00:01:14.004 --> 00:01:16.006
let's go to BloomRPC,

27
00:01:16.006 --> 00:01:18.008
and I'm going to add the proto file

28
00:01:18.008 --> 00:01:20.005
for order.proto this time,

29
00:01:20.005 --> 00:01:24.007
which is this one,

30
00:01:24.007 --> 00:01:27.000
and let's open them a tad,

31
00:01:27.000 --> 00:01:31.007
let's also make sure that this port is 50052 this time.

32
00:01:31.007 --> 00:01:39.009
So I'm going to say, user ID is five and let's run this.

33
00:01:39.009 --> 00:01:41.009
And we just get one order, yeah,

34
00:01:41.009 --> 00:01:45.000
but that is because we haven't restarted the server,

35
00:01:45.000 --> 00:01:46.009
so I'm just going to restart the Order Server

36
00:01:46.009 --> 00:01:51.003
for the database script to take effect.

37
00:01:51.003 --> 00:01:53.005
Yeah, so the Order Server has restarted,

38
00:01:53.005 --> 00:01:57.003
now we should get both the orders for the user Id.

39
00:01:57.003 --> 00:01:58.003
There we go.

40
00:01:58.003 --> 00:02:01.002
So we have two orders that we had for user ID five,

41
00:02:01.002 --> 00:02:03.006
we have been able to successfully retrieve them,

42
00:02:03.006 --> 00:02:06.002
so this actually completes the order service,

43
00:02:06.002 --> 00:02:07.007
but the next part of this module

44
00:02:07.007 --> 00:02:10.003
is going to be to connect the order

45
00:02:10.003 --> 00:02:12.005
and the user services together.

46
00:02:12.005 --> 00:02:14.004
So the result that we got in BloomRPC

47
00:02:14.004 --> 00:02:16.000
is the couple of orders.

48
00:02:16.000 --> 00:02:18.002
Feel free, please, to go ahead

49
00:02:18.002 --> 00:02:21.008
and insert as many values as you want in the database

50
00:02:21.008 --> 00:02:24.003
with the script that is already provided to you

51
00:02:24.003 --> 00:02:28.007
in order to have the result tested for multiple orders.

52
00:02:28.007 --> 00:02:31.004
There is another thing to note off in this response

53
00:02:31.004 --> 00:02:33.001
that we've received,

54
00:02:33.001 --> 00:02:36.004
We're trying to look at the order date in the order data.

55
00:02:36.004 --> 00:02:40.003
This is how Protobuf represents the timestamp format.

56
00:02:40.003 --> 00:02:43.000
It'll give you the total number of whole seconds

57
00:02:43.000 --> 00:02:47.002
from epoch and the remaining amount in nanoseconds.

58
00:02:47.002 --> 00:02:50.006
We got to this value by transforming the Java.util date

59
00:02:50.006 --> 00:02:54.004
to the time stamp type by using the timestamps utility

60
00:02:54.004 --> 00:02:57.000
inside the service implementation class.

