WEBVTT
1
00:00:00.007 --> 00:00:01.005
- [Instructor] The next step

2
00:00:01.005 --> 00:00:03.006
will be to build the service definition file

3
00:00:03.006 --> 00:00:05.006
which is the user.proto.

4
00:00:05.006 --> 00:00:08.000
So let's go back to the IDE

5
00:00:08.000 --> 00:00:16.002
and first I'll create a folder here under the main,

6
00:00:16.002 --> 00:00:18.004
label that as proto

7
00:00:18.004 --> 00:00:23.005
and make sure you mark this directory as a source folder.

8
00:00:23.005 --> 00:00:32.001
And under this, I'll create a file, which is user.proto.

9
00:00:32.001 --> 00:00:35.000
So let's go ahead and define the user service.

10
00:00:35.000 --> 00:00:39.005
The first statement will of course be the syntax.

11
00:00:39.005 --> 00:00:46.003
So that will be proto3.

12
00:00:46.003 --> 00:00:49.008
The next will be the packet statement.

13
00:00:49.008 --> 00:00:51.007
So let's give this a proper name,

14
00:00:51.007 --> 00:00:59.008
we'll call it com.shopping.stubs.user.

15
00:00:59.008 --> 00:01:03.008
We'll additionally also define the java_package

16
00:01:03.008 --> 00:01:07.008
to explicitly state the Java package.

17
00:01:07.008 --> 00:01:09.008
And I'm going to keep that exactly same

18
00:01:09.008 --> 00:01:12.000
as the one that we defined on line number three.

19
00:01:12.000 --> 00:01:17.008
So let's copy this and let's provide that as a value.

20
00:01:17.008 --> 00:01:23.008
Also, let's make sure that java_multiple_files

21
00:01:23.008 --> 00:01:28.006
is set to true.

22
00:01:28.006 --> 00:01:30.009
The next step is to define the service.

23
00:01:30.009 --> 00:01:36.007
So we'll say service, give a name, user service.

24
00:01:36.007 --> 00:01:39.001
And under this list, you find a method

25
00:01:39.001 --> 00:01:44.006
called getUserDetails.

26
00:01:44.006 --> 00:01:50.002
This will take in our userRequest

27
00:01:50.002 --> 00:01:57.002
and it should return a userResponse.

28
00:01:57.002 --> 00:01:59.005
Now, let's go ahead and define those messages,

29
00:01:59.005 --> 00:02:01.008
userRequest and userResponse.

30
00:02:01.008 --> 00:02:08.002
So let's see message userRequest

31
00:02:08.002 --> 00:02:12.001
and this will have a single field, which is the username

32
00:02:12.001 --> 00:02:14.006
which is of a string type.

33
00:02:14.006 --> 00:02:16.005
Let's tag that as one.

34
00:02:16.005 --> 00:02:18.006
Let's also define the user response.

35
00:02:18.006 --> 00:02:23.007
So I'll say message UserResponse

36
00:02:23.007 --> 00:02:25.005
and this can have many other fields.

37
00:02:25.005 --> 00:02:29.005
So let's begin with an id field.

38
00:02:29.005 --> 00:02:30.005
Let's stack this as one.

39
00:02:30.005 --> 00:02:32.008
This is just an incremental id value

40
00:02:32.008 --> 00:02:35.000
that we can map from the database.

41
00:02:35.000 --> 00:02:36.007
So just a place holder for that.

42
00:02:36.007 --> 00:02:40.000
Additionally, it will also return the username field,

43
00:02:40.000 --> 00:02:42.000
let's take that as two.

44
00:02:42.000 --> 00:02:46.005
Then we can have another string field called name,

45
00:02:46.005 --> 00:02:51.009
let's have another integer field for age

46
00:02:51.009 --> 00:02:58.009
and another field which is of the gender type.

47
00:02:58.009 --> 00:03:02.004
Now, this gender is not an inbuilt type

48
00:03:02.004 --> 00:03:04.004
in the protocol buffers project

49
00:03:04.004 --> 00:03:07.008
which is why I'm getting that error on line 21.

50
00:03:07.008 --> 00:03:08.008
So what we will do is,

51
00:03:08.008 --> 00:03:12.007
we will define this type explicitly in this proto file.

52
00:03:12.007 --> 00:03:17.003
So let's come down and see enum Gender

53
00:03:17.003 --> 00:03:20.002
and the moment you do this, the error is gone.

54
00:03:20.002 --> 00:03:23.003
And since this is an enum, we'll define values for it.

55
00:03:23.003 --> 00:03:32.007
So that will be MALE - 0, FEMALE - 1 and OTHER - 3.

56
00:03:32.007 --> 00:03:34.004
Please know that the enum values

57
00:03:34.004 --> 00:03:39.007
start with the number zero instead of one.

58
00:03:39.007 --> 00:03:40.006
So there we go.

59
00:03:40.006 --> 00:03:44.002
We have the entire service definition ready with us.

60
00:03:44.002 --> 00:03:45.009
The last step of this will be

61
00:03:45.009 --> 00:03:48.004
to just go and generate those classes.

62
00:03:48.004 --> 00:03:51.001
So I'll click on the right-hand side Maven tab

63
00:03:51.001 --> 00:03:55.002
and we can select the goals, clean, and install

64
00:03:55.002 --> 00:03:58.009
in order to get the stubs generated.

65
00:03:58.009 --> 00:04:01.003
So whatever we did with the protoc command

66
00:04:01.003 --> 00:04:04.007
in our previous module, now we're doing it through Maven.

67
00:04:04.007 --> 00:04:08.001
So let's run these two goals.

68
00:04:08.001 --> 00:04:10.006
And when this project completes its build,

69
00:04:10.006 --> 00:04:14.003
we should be able to see the auto-generated steps

70
00:04:14.003 --> 00:04:16.003
for this service file.

71
00:04:16.003 --> 00:04:18.007
So we'll build is completing now,

72
00:04:18.007 --> 00:04:24.004
this will take a while when you do it for the first time.

73
00:04:24.004 --> 00:04:25.006
The build was a success.

74
00:04:25.006 --> 00:04:28.004
So if you see the target folder regenerated now

75
00:04:28.004 --> 00:04:33.006
and under classes, you have com_shopping stubs user

76
00:04:33.006 --> 00:04:37.001
and you'll have all the classes for the user service.

77
00:04:37.001 --> 00:04:39.001
In addition to that, the user.total file

78
00:04:39.001 --> 00:04:42.000
also comes in bundled inside the target folder.

