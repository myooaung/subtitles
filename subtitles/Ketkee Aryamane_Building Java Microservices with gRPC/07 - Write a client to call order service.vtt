WEBVTT
1
00:00:00.007 --> 00:00:02.008
- [Instructor] As a first step to connect the user

2
00:00:02.008 --> 00:00:06.001
and the Order services as we recapped in the previous video,

3
00:00:06.001 --> 00:00:09.007
that'll be to write the gRPC Java client

4
00:00:09.007 --> 00:00:11.005
for the Order service.

5
00:00:11.005 --> 00:00:13.007
So let's head back to the IDE.

6
00:00:13.007 --> 00:00:18.001
And I will first add a package here,

7
00:00:18.001 --> 00:00:19.008
for our client classes.

8
00:00:19.008 --> 00:00:26.005
And under that I will create a class called OrderClient.

9
00:00:26.005 --> 00:00:27.007
What do we need to do here?

10
00:00:27.007 --> 00:00:30.009
We first need to get a stub object,

11
00:00:30.009 --> 00:00:32.008
which will help you make either a blocking

12
00:00:32.008 --> 00:00:35.009
or an asynchronous call to the service method.

13
00:00:35.009 --> 00:00:38.001
We're going to go ahead with a simple blocking call.

14
00:00:38.001 --> 00:00:39.008
So we need to get that stub.

15
00:00:39.008 --> 00:00:44.003
And next step will be to call the service method.

16
00:00:44.003 --> 00:00:46.000
These are the two things that we will need to do

17
00:00:46.000 --> 00:00:47.005
as a part of this class.

18
00:00:47.005 --> 00:00:49.001
But just to add a note here,

19
00:00:49.001 --> 00:00:51.005
when we get a stub object,

20
00:00:51.005 --> 00:00:56.002
we first need to get the HTTP/2 connection to the server

21
00:00:56.002 --> 00:00:57.008
that has to be set up first.

22
00:00:57.008 --> 00:01:00.000
So if you recall from a previous modules,

23
00:01:00.000 --> 00:01:02.005
we've known that whenever you want to establish

24
00:01:02.005 --> 00:01:04.005
an endpoint connection to the server side,

25
00:01:04.005 --> 00:01:07.003
you basically open a channel.

26
00:01:07.003 --> 00:01:10.008
So the channel opens, then you get the stub,

27
00:01:10.008 --> 00:01:12.007
and then you call the method.

28
00:01:12.007 --> 00:01:14.006
That is typically the cycle.

29
00:01:14.006 --> 00:01:17.003
So let's go ahead and first grab the stub.

30
00:01:17.003 --> 00:01:19.008
And call the service method as a part of OrderClient.

31
00:01:19.008 --> 00:01:23.007
And we will see how the channel gets tied up with the flow.

32
00:01:23.007 --> 00:01:25.006
So the first thing is,

33
00:01:25.006 --> 00:01:29.003
let's take an instance variable for the stub.

34
00:01:29.003 --> 00:01:34.002
So that will be this one.

35
00:01:34.002 --> 00:01:36.001
Inside the OrderServiceGrpc,

36
00:01:36.001 --> 00:01:38.008
you have a class called OrderServiceBlockingStub

37
00:01:38.008 --> 00:01:42.007
which will help you grab the variable for it.

38
00:01:42.007 --> 00:01:44.000
That's what we need.

39
00:01:44.000 --> 00:01:45.001
The next thing you're going to do is,

40
00:01:45.001 --> 00:01:46.006
we're going to write a constructor

41
00:01:46.006 --> 00:01:52.002
of the OrderClient class.

42
00:01:52.002 --> 00:01:53.009
I think this led to an import

43
00:01:53.009 --> 00:01:55.005
which we do not need right now,

44
00:01:55.005 --> 00:01:56.004
on line number three.

45
00:01:56.004 --> 00:01:58.002
So I'm going to delete that.

46
00:01:58.002 --> 00:01:59.001
Okay.

47
00:01:59.001 --> 00:02:01.007
Let's come back to the constructor.

48
00:02:01.007 --> 00:02:04.004
Okay, now in this,

49
00:02:04.004 --> 00:02:06.004
we're going to have a parameter to the constructor.

50
00:02:06.004 --> 00:02:09.007
Firstly, which is channel,

51
00:02:09.007 --> 00:02:13.003
which is io.grpc package.

52
00:02:13.003 --> 00:02:15.002
And once we have that parameter,

53
00:02:15.002 --> 00:02:16.009
what we will do is we'll take the variable

54
00:02:16.009 --> 00:02:20.006
that we declared on line number 10,

55
00:02:20.006 --> 00:02:22.002
take the service class again,

56
00:02:22.002 --> 00:02:23.004
and inside that,

57
00:02:23.004 --> 00:02:27.000
there is a method called newBlockingStub.

58
00:02:27.000 --> 00:02:28.007
So this is the one that we are going to grab

59
00:02:28.007 --> 00:02:32.004
in order to make the calls to the service method.

60
00:02:32.004 --> 00:02:36.007
And this internally asks for that channel as an argument.

61
00:02:36.007 --> 00:02:39.003
So we will feed that.

62
00:02:39.003 --> 00:02:40.007
Let's delete rest of the lines

63
00:02:40.007 --> 00:02:43.002
and format the code correctly.

64
00:02:43.002 --> 00:02:44.006
Right.

65
00:02:44.006 --> 00:02:46.001
So first part is done.

66
00:02:46.001 --> 00:02:49.000
And we will get to how this channel

67
00:02:49.000 --> 00:02:50.006
is going to be passed to the order line.

68
00:02:50.006 --> 00:02:52.002
Do not worry about that right now.

69
00:02:52.002 --> 00:02:53.008
You're going to see it further.

70
00:02:53.008 --> 00:02:56.000
The next step, as we said, is to write a method,

71
00:02:56.000 --> 00:02:58.004
to call the Order service.

72
00:02:58.004 --> 00:03:00.003
So let's do that.

73
00:03:00.003 --> 00:03:03.003
Type public.

74
00:03:03.003 --> 00:03:06.007
This will be a list of orders that we want from the service.

75
00:03:06.007 --> 00:03:07.009
And this list,

76
00:03:07.009 --> 00:03:09.009
let's first import that,

77
00:03:09.009 --> 00:03:11.005
java.util.

78
00:03:11.005 --> 00:03:15.001
And this will be the stub object,

79
00:03:15.001 --> 00:03:16.009
which is coming from the proto file,

80
00:03:16.009 --> 00:03:20.000
which is this order.

81
00:03:20.000 --> 00:03:22.005
Let's say, getOrders.

82
00:03:22.005 --> 00:03:28.001
This should take a userId.

83
00:03:28.001 --> 00:03:31.007
The implementation of this method will be very simple.

84
00:03:31.007 --> 00:03:38.001
First thing is we need to get a request object.

85
00:03:38.001 --> 00:03:42.005
Again, let's use the builder to do that.

86
00:03:42.005 --> 00:03:44.005
And do that, set the user ID,

87
00:03:44.005 --> 00:03:48.002
which is coming in from the parameter.

88
00:03:48.002 --> 00:03:52.002
And let's build this object.

89
00:03:52.002 --> 00:03:54.000
Since we are inside the client,

90
00:03:54.000 --> 00:03:56.006
we will need to build the request object first

91
00:03:56.006 --> 00:03:59.007
before we make the call to the service method.

92
00:03:59.007 --> 00:04:00.009
Then the next line will be,

93
00:04:00.009 --> 00:04:04.002
you have to grab that stub

94
00:04:04.002 --> 00:04:07.001
and make a call to that service method,

95
00:04:07.001 --> 00:04:09.005
with this getOrdersForUser

96
00:04:09.005 --> 00:04:11.001
and it demands the request object.

97
00:04:11.001 --> 00:04:14.006
So feed that request object to it as an argument.

98
00:04:14.006 --> 00:04:18.008
The output of this will be an OrderResponse.

99
00:04:18.008 --> 00:04:21.005
Collect that into the corresponding variable,

100
00:04:21.005 --> 00:04:24.001
which is orderResponse.

101
00:04:24.001 --> 00:04:28.000
And after that, the simple thing that we're going to do is,

102
00:04:28.000 --> 00:04:30.008
we're just going to extract the list of orders

103
00:04:30.008 --> 00:04:33.004
from that orderResponse,

104
00:04:33.004 --> 00:04:37.009
and return it from this method.

105
00:04:37.009 --> 00:04:40.002
So, that's what we have.

106
00:04:40.002 --> 00:04:43.001
Let's just format this code correctly.

107
00:04:43.001 --> 00:04:45.000
Yeah.

108
00:04:45.000 --> 00:04:46.005
So the two things that we did,

109
00:04:46.005 --> 00:04:47.009
we grabbed the stub,

110
00:04:47.009 --> 00:04:50.008
instantiated the stub by using the service class.

111
00:04:50.008 --> 00:04:53.001
There's a method called newBlockingStub on it.

112
00:04:53.001 --> 00:04:55.000
That requires a channel to be passed.

113
00:04:55.000 --> 00:04:56.001
We did that.

114
00:04:56.001 --> 00:04:57.002
And then we wrote a method.

115
00:04:57.002 --> 00:05:00.008
Simple, which will create or build the request object

116
00:05:00.008 --> 00:05:03.004
and it'll call the getOrdersForUser method

117
00:05:03.004 --> 00:05:04.009
of the Order service.

118
00:05:04.009 --> 00:05:07.005
That is all that we have to do as a part of the client.

119
00:05:07.005 --> 00:05:09.007
The next video will explain to us

120
00:05:09.007 --> 00:05:14.000
how are we going to tie up that channel to this stub.

