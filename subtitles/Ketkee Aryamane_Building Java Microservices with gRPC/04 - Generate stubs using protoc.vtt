WEBVTT
1
00:00:00.007 --> 00:00:02.008
- [Instructor] We have downloaded the utilities,

2
00:00:02.008 --> 00:00:04.009
we have written the service definition,

3
00:00:04.009 --> 00:00:07.009
the last part of this demo will be to generate the stubs

4
00:00:07.009 --> 00:00:09.006
from the service definition.

5
00:00:09.006 --> 00:00:12.008
To do this, we are going to run the protoc command

6
00:00:12.008 --> 00:00:15.009
and this command takes in three arguments.

7
00:00:15.009 --> 00:00:18.008
The first is the plugin path.

8
00:00:18.008 --> 00:00:22.005
The plugin is basically used to generate your service class.

9
00:00:22.005 --> 00:00:25.003
So we need to feed the part of that plugin.

10
00:00:25.003 --> 00:00:28.007
This plugin was already downloaded as a utility before.

11
00:00:28.007 --> 00:00:31.005
Second, it requires the source folder

12
00:00:31.005 --> 00:00:34.001
where it'll pick up your proto file from.

13
00:00:34.001 --> 00:00:35.007
So we'll specify that.

14
00:00:35.007 --> 00:00:38.006
And the third argument is that destination folder

15
00:00:38.006 --> 00:00:40.002
or the output directory

16
00:00:40.002 --> 00:00:42.007
in which all the auto-generated classes

17
00:00:42.007 --> 00:00:44.007
are going to be placed.

18
00:00:44.007 --> 00:00:45.008
So what we will do is,

19
00:00:45.008 --> 00:00:48.008
we will define a local environment variable

20
00:00:48.008 --> 00:00:53.003
on the windows system for each of these arguments first.

21
00:00:53.003 --> 00:00:56.004
Once we do that, then we will run the protoc command.

22
00:00:56.004 --> 00:01:01.006
So I'll go back to my editor, I'll open a new file

23
00:01:01.006 --> 00:01:04.009
and first we will write out everything on the notepad

24
00:01:04.009 --> 00:01:08.002
before we run the commands on the windows terminal.

25
00:01:08.002 --> 00:01:09.003
So the first thing

26
00:01:09.003 --> 00:01:12.006
is to set those three environment variables.

27
00:01:12.006 --> 00:01:19.006
So I'm going to say set PROTO_FOLDER_PATH,

28
00:01:19.006 --> 00:01:22.001
and that is E/proto

29
00:01:22.001 --> 00:01:23.007
because that is the directory inside

30
00:01:23.007 --> 00:01:26.004
which we created a proto file.

31
00:01:26.004 --> 00:01:29.002
The next one is the PROTO_PLUGIN_PATH,

32
00:01:29.002 --> 00:01:32.002
let's name a variable like that

33
00:01:32.002 --> 00:01:37.006
and let's also set this to E/proto

34
00:01:37.006 --> 00:01:40.004
and we need the full name of the plugin.

35
00:01:40.004 --> 00:01:43.005
So let's go and grab that from our proto folder.

36
00:01:43.005 --> 00:01:47.003
I'm just going to copy this name.

37
00:01:47.003 --> 00:01:48.006
Let's come back to the editor

38
00:01:48.006 --> 00:01:50.008
and write out the name completely.

39
00:01:50.008 --> 00:01:52.008
So that's the PROTO_PLUGIN_PATH.

40
00:01:52.008 --> 00:01:54.009
And lastly, we need a destination folder.

41
00:01:54.009 --> 00:01:58.007
Let's call that OUTPUT_DIRECTORY

42
00:01:58.007 --> 00:02:01.000
and that again will be the same.

43
00:02:01.000 --> 00:02:03.005
It will be E/proto.

44
00:02:03.005 --> 00:02:05.000
So if you have two environment variables.

45
00:02:05.000 --> 00:02:08.000
One is to indicate the folder

46
00:02:08.000 --> 00:02:09.008
in which the proto file is present.

47
00:02:09.008 --> 00:02:12.003
Second is to indicate the part of the folder

48
00:02:12.003 --> 00:02:14.001
in which the plugin is present,

49
00:02:14.001 --> 00:02:16.003
and third, the output directory.

50
00:02:16.003 --> 00:02:18.006
Now let's write out the protoc command.

51
00:02:18.006 --> 00:02:20.000
So say protoc,

52
00:02:20.000 --> 00:02:23.003
the first argument will be the part of the proto folder

53
00:02:23.003 --> 00:02:29.005
that will be denoted by a flag called proto_path

54
00:02:29.005 --> 00:02:32.004
and let's copy the name of the variable

55
00:02:32.004 --> 00:02:35.006
from line number one,

56
00:02:35.006 --> 00:02:37.007
come down on line number five

57
00:02:37.007 --> 00:02:43.006
and feed the value of this to the flag proto_path.

58
00:02:43.006 --> 00:02:47.002
So this is how you evaluate a variable in windows.

59
00:02:47.002 --> 00:02:50.009
The next argument will be the plugin_path.

60
00:02:50.009 --> 00:02:57.004
That will be with the help of this flag called plugin.

61
00:02:57.004 --> 00:03:00.000
So let's set the value of this plugin first.

62
00:03:00.000 --> 00:03:02.009
The value of the plugin can be taken from line number two,

63
00:03:02.009 --> 00:03:07.000
I will just copy protoc-gen-gprc-java,

64
00:03:07.000 --> 00:03:08.004
that's the name.

65
00:03:08.004 --> 00:03:11.004
So the first thing is you'd feed the name

66
00:03:11.004 --> 00:03:13.008
on line number five,

67
00:03:13.008 --> 00:03:18.004
and then you feed the value for this

68
00:03:18.004 --> 00:03:22.000
which will be the variable evaluated from line number two.

69
00:03:22.000 --> 00:03:25.004
So I'll copy PROTO_PLUGIN_PATH

70
00:03:25.004 --> 00:03:32.004
and I will feed this to that flag, like that.

71
00:03:32.004 --> 00:03:34.008
The immediate next argument

72
00:03:34.008 --> 00:03:40.000
will be the folder in which the service class will sit.

73
00:03:40.000 --> 00:03:43.006
So we know that the protoc-gen-gprc-java plugin

74
00:03:43.006 --> 00:03:46.005
is going to help us generate the service class.

75
00:03:46.005 --> 00:03:50.001
And we need to mention the output directory

76
00:03:50.001 --> 00:03:53.001
inside which the service class will sit.

77
00:03:53.001 --> 00:04:01.005
That is denoted by another flag, which is grpc-java_out.

78
00:04:01.005 --> 00:04:03.009
And that for us is the output directory,

79
00:04:03.009 --> 00:04:08.004
so we can grab that variable from line number three

80
00:04:08.004 --> 00:04:13.009
and paste it here, like that.

81
00:04:13.009 --> 00:04:17.009
The next flag is to denote the output directory

82
00:04:17.009 --> 00:04:20.009
for all the objects that are generated

83
00:04:20.009 --> 00:04:23.003
out of the message types.

84
00:04:23.003 --> 00:04:24.009
So let's go back to employee proto

85
00:04:24.009 --> 00:04:26.004
and recollect this concept.

86
00:04:26.004 --> 00:04:28.008
There are two things that should get auto-generated.

87
00:04:28.008 --> 00:04:31.003
One is the entire service class,

88
00:04:31.003 --> 00:04:33.005
and second, all the classes

89
00:04:33.005 --> 00:04:35.004
with respect to the message types,

90
00:04:35.004 --> 00:04:38.002
which is employee request and employee response

91
00:04:38.002 --> 00:04:42.000
that we have defined on line number 12 and line number 16.

92
00:04:42.000 --> 00:04:44.003
We have already fed the output directory

93
00:04:44.003 --> 00:04:45.007
for the service class,

94
00:04:45.007 --> 00:04:47.008
now let's feed the output directory

95
00:04:47.008 --> 00:04:50.002
for both of these objects.

96
00:04:50.002 --> 00:04:52.002
So let's go back

97
00:04:52.002 --> 00:04:57.005
and the flag to do this is java_out.

98
00:04:57.005 --> 00:04:59.007
And let's take the same thing again,

99
00:04:59.007 --> 00:05:07.004
OUTPUT_DIR copy from line three and feed it

100
00:05:07.004 --> 00:05:10.000
to the java_outflank.

101
00:05:10.000 --> 00:05:12.003
And the last part of this command

102
00:05:12.003 --> 00:05:15.007
will be the actual proto file path.

103
00:05:15.007 --> 00:05:16.008
So that we can get

104
00:05:16.008 --> 00:05:19.007
by first embedding the proto folder variable,

105
00:05:19.007 --> 00:05:23.005
which is on line number one, let me take that.

106
00:05:23.005 --> 00:05:28.007
Evaluate that first and further to this,

107
00:05:28.007 --> 00:05:31.008
you have the actual employee proto.

108
00:05:31.008 --> 00:05:35.006
So you need to specify the complete name of the proto file

109
00:05:35.006 --> 00:05:39.000
along with the folder part that it is residing in.

110
00:05:39.000 --> 00:05:39.008
So that's what we did,

111
00:05:39.008 --> 00:05:41.009
the protoc command one big star

112
00:05:41.009 --> 00:05:46.004
folder path of the proto file takes the plug-in path

113
00:05:46.004 --> 00:05:49.000
takes the output directory for the service class,

114
00:05:49.000 --> 00:05:51.003
takes the output directory for the object classes

115
00:05:51.003 --> 00:05:52.006
for message types

116
00:05:52.006 --> 00:05:56.008
and lastly, the actual proto file complete path.

117
00:05:56.008 --> 00:06:00.004
So go and execute these commands one by one

118
00:06:00.004 --> 00:06:01.008
in a windows terminal.

119
00:06:01.008 --> 00:06:05.000
So I'll open up windows terminal first,

120
00:06:05.000 --> 00:06:07.005
and let's take the first command,

121
00:06:07.005 --> 00:06:10.006
setting the proto folder path,

122
00:06:10.006 --> 00:06:12.009
let's run that, you're done.

123
00:06:12.009 --> 00:06:15.006
Let's take the second command

124
00:06:15.006 --> 00:06:19.003
which is to set the path of the plugin.

125
00:06:19.003 --> 00:06:20.007
There we go.

126
00:06:20.007 --> 00:06:25.006
And then you have the output directory.

127
00:06:25.006 --> 00:06:28.002
Let's set that too.

128
00:06:28.002 --> 00:06:29.006
Now that we've done the setting

129
00:06:29.006 --> 00:06:31.003
of the environment variables,

130
00:06:31.003 --> 00:06:35.004
let's stick this protoc command

131
00:06:35.004 --> 00:06:37.008
and if we have done everything correctly,

132
00:06:37.008 --> 00:06:41.007
then this should be able to generate everything for us.

133
00:06:41.007 --> 00:06:43.004
Yeah, the command worked well.

134
00:06:43.004 --> 00:06:45.007
So let's go to the proto folder,

135
00:06:45.007 --> 00:06:48.001
and if you see you have this com folder

136
00:06:48.001 --> 00:06:49.006
that got generated now.

137
00:06:49.006 --> 00:06:54.001
So it's basically a package, com, example, services

138
00:06:54.001 --> 00:06:57.000
and there you have all the classes.

139
00:06:57.000 --> 00:06:59.006
So this is the service class that got generated

140
00:06:59.006 --> 00:07:04.006
and these classes from Employee.java

141
00:07:04.006 --> 00:07:07.001
to EmployeeResponseOnBuilder.java

142
00:07:07.001 --> 00:07:09.004
are all the object classes

143
00:07:09.004 --> 00:07:12.003
corresponding to the message types.

144
00:07:12.003 --> 00:07:16.000
So that's how we were able to generate the classes

145
00:07:16.000 --> 00:07:19.009
or the stubs as we say, using the protoc command.

146
00:07:19.009 --> 00:07:21.009
Please note that this demo

147
00:07:21.009 --> 00:07:25.001
has been done on the windows operating system.

148
00:07:25.001 --> 00:07:28.007
If you're working with Linux or any other OS,

149
00:07:28.007 --> 00:07:31.007
then these commands will change a little bit here and there

150
00:07:31.007 --> 00:07:35.000
which you will need to see from the documentation.

