WEBVTT
1
00:00:00.007 --> 00:00:02.008
- [Instructor] All the steps to build the user service

2
00:00:02.008 --> 00:00:04.008
have been listed on the screen.

3
00:00:04.008 --> 00:00:07.002
Let us go through them one by one.

4
00:00:07.002 --> 00:00:10.008
The first step is to create a gRPC project with Maven

5
00:00:10.008 --> 00:00:13.002
and add all the necessary dependencies.

6
00:00:13.002 --> 00:00:18.006
So let's go to the IntelliJ IDE and create a new project.

7
00:00:18.006 --> 00:00:23.000
Choose Maven, and let's click on next and give this a name.

8
00:00:23.000 --> 00:00:27.001
Let's call it shopping-services.

9
00:00:27.001 --> 00:00:29.007
So create a basic skeleton for the project.

10
00:00:29.007 --> 00:00:31.000
The next step that we have to do

11
00:00:31.000 --> 00:00:33.001
is make sure that all the dependencies

12
00:00:33.001 --> 00:00:36.007
for the gRPC framework are available in the pom file.

13
00:00:36.007 --> 00:00:40.004
Now I have already listed all the dependencies for you

14
00:00:40.004 --> 00:00:43.005
and these are available in the resources folder

15
00:00:43.005 --> 00:00:45.005
under your exercise files.

16
00:00:45.005 --> 00:00:47.000
So let's open that.

17
00:00:47.000 --> 00:00:50.001
So under chapter three, Resources, you have the pom_xml.

18
00:00:50.001 --> 00:00:53.005
I'm going to open this with an editor first,

19
00:00:53.005 --> 00:00:57.006
copy this entirely, go back to the IDE

20
00:00:57.006 --> 00:01:00.008
and paste this in its entirety.

21
00:01:00.008 --> 00:01:04.000
The one thing that we have to change is go right up

22
00:01:04.000 --> 00:01:06.001
and on line number eight, we have to make sure

23
00:01:06.001 --> 00:01:08.008
that we include the project name that we won't do

24
00:01:08.008 --> 00:01:11.008
since we already named it, this shopping-services.

25
00:01:11.008 --> 00:01:16.005
I'm going to make sure that that's the name of the artifact.

26
00:01:16.005 --> 00:01:19.005
Also, let's walk through the pom file quickly.

27
00:01:19.005 --> 00:01:22.009
Line seven to nine is the basic Maven fundamental

28
00:01:22.009 --> 00:01:26.002
that you have for group id, artifact id and version.

29
00:01:26.002 --> 00:01:29.009
Lines 11 to 18 define certain properties

30
00:01:29.009 --> 00:01:31.008
that this pom file is going to use.

31
00:01:31.008 --> 00:01:34.003
For example, what version of Java will Maven use

32
00:01:34.003 --> 00:01:36.000
to come by your source code?

33
00:01:36.000 --> 00:01:38.006
What source encoding format are you going to use?

34
00:01:38.006 --> 00:01:41.006
That's UTF 8, which is on line 14.

35
00:01:41.006 --> 00:01:45.004
Lines 15 to 17 signify the gRPC version

36
00:01:45.004 --> 00:01:48.005
the protobuf version and the product version.

37
00:01:48.005 --> 00:01:52.003
These are the ones which were the latest stable versions

38
00:01:52.003 --> 00:01:54.004
at the time of recording this course.

39
00:01:54.004 --> 00:01:56.007
However, if you choose to take versions

40
00:01:56.007 --> 00:01:58.000
which are later than these,

41
00:01:58.000 --> 00:02:02.006
then you will have to make sure that everything works well.

42
00:02:02.006 --> 00:02:08.006
The next few set of flights that is lines 22, 37,

43
00:02:08.006 --> 00:02:12.001
these dependencies are coming from the gRPC code framework,

44
00:02:12.001 --> 00:02:15.001
so there's GRPC Nettie shaded on line 23,

45
00:02:15.001 --> 00:02:19.000
which is for the client, the GRPC protobuf on line 29

46
00:02:19.000 --> 00:02:21.005
and GRPCstub on line 34.

47
00:02:21.005 --> 00:02:24.002
In addition to that, on line 39,

48
00:02:24.002 --> 00:02:26.005
we have the protobuf-java-util,

49
00:02:26.005 --> 00:02:29.002
which will help you grab all the utility classes

50
00:02:29.002 --> 00:02:33.006
to work with the message types in your proto files.

51
00:02:33.006 --> 00:02:38.009
Additionally, we have also the H2 database dependency

52
00:02:38.009 --> 00:02:41.009
from lines 56 to 60.

53
00:02:41.009 --> 00:02:43.000
As we spoke earlier,

54
00:02:43.000 --> 00:02:45.009
we are going to use an in-memory H2 database

55
00:02:45.009 --> 00:02:47.007
for the service development.

56
00:02:47.007 --> 00:02:50.008
However, if you use a database of your choice,

57
00:02:50.008 --> 00:02:53.003
then this dependency will change.

58
00:02:53.003 --> 00:02:54.007
In addition to this,

59
00:02:54.007 --> 00:02:58.000
line number 68 has the always Maven plugin

60
00:02:58.000 --> 00:02:59.004
that has been defined.

61
00:02:59.004 --> 00:03:01.006
This is to detect the OS

62
00:03:01.006 --> 00:03:04.005
and generate always specific properties.

63
00:03:04.005 --> 00:03:08.009
Also on line 75, you have the protobuf Maven plugging

64
00:03:08.009 --> 00:03:10.009
which uses the protoc command

65
00:03:10.009 --> 00:03:13.001
to generate your java source fights.

66
00:03:13.001 --> 00:03:15.003
It will scan all the project dependencies

67
00:03:15.003 --> 00:03:17.005
for the bundled.proto files,

68
00:03:17.005 --> 00:03:22.000
and then it'll configure the proto_spot for all of them.

69
00:03:22.000 --> 00:03:25.005
Additionally, it also helps you to attach .proto

70
00:03:25.005 --> 00:03:28.003
to the resources so that they can be bundled

71
00:03:28.003 --> 00:03:32.008
into the package, which is your artifacts package.

72
00:03:32.008 --> 00:03:35.003
If you see on line 77 to 80,

73
00:03:35.003 --> 00:03:38.008
we have used the plugin which is the production grpc java.

74
00:03:38.008 --> 00:03:40.008
This is something that we also used

75
00:03:40.008 --> 00:03:43.001
in the demo that we saw in module two,

76
00:03:43.001 --> 00:03:46.004
where you're trying to generate the service fight

77
00:03:46.004 --> 00:03:47.003
for the proto.

78
00:03:47.003 --> 00:03:51.005
So that's what the plugin is about.

79
00:03:51.005 --> 00:03:52.004
So that is all

80
00:03:52.004 --> 00:03:54.004
That is in a, just the important dependencies

81
00:03:54.004 --> 00:03:56.006
that you will need in order to start working

82
00:03:56.006 --> 00:03:58.008
with the gRPC framework.

83
00:03:58.008 --> 00:04:01.007
But to do one more thing on the right hand side,

84
00:04:01.007 --> 00:04:03.004
click on that Maven tab,

85
00:04:03.004 --> 00:04:06.001
and let's just refresh this project

86
00:04:06.001 --> 00:04:07.003
so that it does all checks

87
00:04:07.003 --> 00:04:11.000
and we have clean fight.

88
00:04:11.000 --> 00:04:12.007
So we have that.

89
00:04:12.007 --> 00:04:14.008
So there we go, we have created a project,

90
00:04:14.008 --> 00:04:18.003
we have pom_xml and we have all the dependencies in place

91
00:04:18.003 --> 00:04:21.000
to get started with development of our services.

