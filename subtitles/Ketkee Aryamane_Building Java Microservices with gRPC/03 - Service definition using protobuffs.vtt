WEBVTT
1
00:00:00.007 --> 00:00:03.004
- [Instructor] Now that we have all the utilities downloaded

2
00:00:03.004 --> 00:00:04.008
and the setup is complete.

3
00:00:04.008 --> 00:00:05.006
The next part

4
00:00:05.006 --> 00:00:08.006
of this demo is to write the service definition.

5
00:00:08.006 --> 00:00:11.003
The steps have been listed on the screen.

6
00:00:11.003 --> 00:00:13.002
Let's go through them one by one.

7
00:00:13.002 --> 00:00:15.002
The first one is to create a text file

8
00:00:15.002 --> 00:00:18.008
with the .proto extension and give it a name.

9
00:00:18.008 --> 00:00:20.004
Now you can use any text editor

10
00:00:20.004 --> 00:00:22.002
of your choice for this demo.

11
00:00:22.002 --> 00:00:24.005
I am going to use sublime text editor.

12
00:00:24.005 --> 00:00:28.000
So let's go to that and I've opened a new file.

13
00:00:28.000 --> 00:00:31.008
The first thing that we'll do is let's save this file

14
00:00:31.008 --> 00:00:34.002
and name it employee

15
00:00:34.002 --> 00:00:35.004
dot

16
00:00:35.004 --> 00:00:36.006
proto

17
00:00:36.006 --> 00:00:39.007
and I'm going to save this file in the same proto folder

18
00:00:39.007 --> 00:00:42.002
that I used to download the utilities.

19
00:00:42.002 --> 00:00:43.006
So let's save this,

20
00:00:43.006 --> 00:00:45.000
now before we go to the next step

21
00:00:45.000 --> 00:00:47.002
there are a few things that we need to do

22
00:00:47.002 --> 00:00:48.008
at the beginning of this file.

23
00:00:48.008 --> 00:00:51.001
The first thing is to denote the syntax

24
00:00:51.001 --> 00:00:55.002
of protobufs that we intend to use that is denoted

25
00:00:55.002 --> 00:00:56.006
by the syntax statement.

26
00:00:56.006 --> 00:00:58.000
So it looks like this.

27
00:00:58.000 --> 00:01:01.004
We say syntax equal to proto three.

28
00:01:01.004 --> 00:01:03.002
So we're enforcing that we want to use

29
00:01:03.002 --> 00:01:06.002
the proto three syntax for protocol buffers.

30
00:01:06.002 --> 00:01:08.004
If you do not specify proto three

31
00:01:08.004 --> 00:01:09.008
it will take in proto two.

32
00:01:09.008 --> 00:01:10.008
We don't want that.

33
00:01:10.008 --> 00:01:12.009
So make sure you specify this,

34
00:01:12.009 --> 00:01:15.005
syntax is always the first line of that file.

35
00:01:15.005 --> 00:01:17.008
The next one is the package statement.

36
00:01:17.008 --> 00:01:22.001
So I say package and let's say I say example.

37
00:01:22.001 --> 00:01:26.000
So what this means is that all the auto-generated steps out

38
00:01:26.000 --> 00:01:30.005
of this service file will sit in a package called example.

39
00:01:30.005 --> 00:01:33.006
Packages are usually defined to avoid naming conflicts

40
00:01:33.006 --> 00:01:35.008
between different projects.

41
00:01:35.008 --> 00:01:37.004
Now we know that in this course

42
00:01:37.004 --> 00:01:39.004
we are going to use the Java language.

43
00:01:39.004 --> 00:01:42.008
So all the auto-generated Java stubs will recite

44
00:01:42.008 --> 00:01:45.003
in a package called example.

45
00:01:45.003 --> 00:01:47.007
However, there is an additional option

46
00:01:47.007 --> 00:01:50.003
that you can configure in the proto file

47
00:01:50.003 --> 00:01:55.002
which allows you to explicitly state a Java package.

48
00:01:55.002 --> 00:01:56.003
How do you do that?

49
00:01:56.003 --> 00:01:58.009
Let's see on line number five

50
00:01:58.009 --> 00:02:04.003
I am declaring an option called java underscore package

51
00:02:04.003 --> 00:02:05.003
and I can

52
00:02:05.003 --> 00:02:09.001
give a package name like this.

53
00:02:09.001 --> 00:02:13.000
So this is usually how we define packages in Java.

54
00:02:13.000 --> 00:02:14.008
So line number five indicates

55
00:02:14.008 --> 00:02:18.002
that all the auto-generated Java classes will sit

56
00:02:18.002 --> 00:02:22.006
in a package called com.example.services.

57
00:02:22.006 --> 00:02:25.006
Had we not defined this option?

58
00:02:25.006 --> 00:02:27.003
Then these classes would have sat

59
00:02:27.003 --> 00:02:29.006
in the package called example

60
00:02:29.006 --> 00:02:32.000
that we defined on line number three,

61
00:02:32.000 --> 00:02:33.001
in addition to this

62
00:02:33.001 --> 00:02:37.002
also remember that if you're not using the Java language

63
00:02:37.002 --> 00:02:40.004
then line five will become redundant.

64
00:02:40.004 --> 00:02:41.003
Also

65
00:02:41.003 --> 00:02:44.005
protobufs project insists that

66
00:02:44.005 --> 00:02:48.001
even if you do define a Java underscore package

67
00:02:48.001 --> 00:02:51.003
retain the package statement on line number three

68
00:02:51.003 --> 00:02:55.004
to avoid any conflicts with any protobufs packages.

69
00:02:55.004 --> 00:02:57.009
So we retain both, but please remember that

70
00:02:57.009 --> 00:03:03.006
our classes will get generated in com.example.services.

71
00:03:03.006 --> 00:03:06.003
I would like to define an additional option here

72
00:03:06.003 --> 00:03:09.000
which is called Java

73
00:03:09.000 --> 00:03:12.002
underscore multiple files.

74
00:03:12.002 --> 00:03:15.007
It's a boolean, and I will set this to true.

75
00:03:15.007 --> 00:03:19.008
This means that every auto-generated Java class will sit

76
00:03:19.008 --> 00:03:22.004
in its individual file instead

77
00:03:22.004 --> 00:03:26.002
of clubbing all the classes together in a single file

78
00:03:26.002 --> 00:03:30.001
we do this so that it helps us to look

79
00:03:30.001 --> 00:03:33.005
and navigate onto the classes a little better.

80
00:03:33.005 --> 00:03:34.006
Okay so that's what we've done.

81
00:03:34.006 --> 00:03:37.001
We have defined the syntax that we want to use.

82
00:03:37.001 --> 00:03:39.002
We have the package statement on line three to avoid

83
00:03:39.002 --> 00:03:40.006
any naming conflicts

84
00:03:40.006 --> 00:03:41.004
and we have a couple

85
00:03:41.004 --> 00:03:45.003
of other Java options specific to the Java language.

86
00:03:45.003 --> 00:03:46.006
Let's look at the next step.

87
00:03:46.006 --> 00:03:49.001
The next step will be to define the service.

88
00:03:49.001 --> 00:03:52.004
So let's go ahead and do that.

89
00:03:52.004 --> 00:03:53.006
This is how we define a service.

90
00:03:53.006 --> 00:03:56.004
You write the keyword service and then you name

91
00:03:56.004 --> 00:03:59.004
your service, which is employee service in our case.

92
00:03:59.004 --> 00:04:00.003
That's all.

93
00:04:00.003 --> 00:04:01.009
That's how you define a service.

94
00:04:01.009 --> 00:04:02.009
What is the next step?

95
00:04:02.009 --> 00:04:06.001
Define a method which is getEmployee.

96
00:04:06.001 --> 00:04:08.007
So we need to define that method inside that service.

97
00:04:08.007 --> 00:04:09.008
So on line

98
00:04:09.008 --> 00:04:12.000
nine I will say rpc

99
00:04:12.000 --> 00:04:15.003
because it's a remote procedural call

100
00:04:15.003 --> 00:04:18.003
and give the name of the method.

101
00:04:18.003 --> 00:04:20.002
Now this method

102
00:04:20.002 --> 00:04:22.006
takes an input message

103
00:04:22.006 --> 00:04:25.008
which is employeeRequest,

104
00:04:25.008 --> 00:04:26.006
and

105
00:04:26.006 --> 00:04:27.005
it

106
00:04:27.005 --> 00:04:28.003
returns

107
00:04:28.003 --> 00:04:30.007
an output message

108
00:04:30.007 --> 00:04:34.006
which is employeeResponse.

109
00:04:34.006 --> 00:04:36.008
Now employeeRequest and employeeResponse are

110
00:04:36.008 --> 00:04:39.007
the messages that I have defined in the method

111
00:04:39.007 --> 00:04:41.004
which essentially means that I will have

112
00:04:41.004 --> 00:04:45.002
to specify the definitions of these messages

113
00:04:45.002 --> 00:04:47.001
and that is exactly the next step.

114
00:04:47.001 --> 00:04:49.008
So we have to define those messages in the proto file.

115
00:04:49.008 --> 00:04:50.009
So let's go ahead.

116
00:04:50.009 --> 00:04:52.009
On line 12, how do you define a message?

117
00:04:52.009 --> 00:04:55.009
You have the keyword message

118
00:04:55.009 --> 00:05:01.000
and then you say employeeRequest

119
00:05:01.000 --> 00:05:02.008
have a pair of curly braces for it

120
00:05:02.008 --> 00:05:05.009
and what fields are we going to have in this message?

121
00:05:05.009 --> 00:05:08.003
Just one field, which is the ID.

122
00:05:08.003 --> 00:05:12.009
So I'm going to say int32 ID equal to one.

123
00:05:12.009 --> 00:05:15.008
Okay now what does line 13 mean

124
00:05:15.008 --> 00:05:16.009
int32

125
00:05:16.009 --> 00:05:17.007
is a type

126
00:05:17.007 --> 00:05:20.009
that is used in protobufs in order to indicate

127
00:05:20.009 --> 00:05:23.000
an integer value.

128
00:05:23.000 --> 00:05:25.006
ID is the name of the field.

129
00:05:25.006 --> 00:05:28.000
This name again is going to be your choice

130
00:05:28.000 --> 00:05:33.001
and this int32 ID has been assigned a value of one.

131
00:05:33.001 --> 00:05:37.002
This one is the tag that is used to identify the field

132
00:05:37.002 --> 00:05:40.004
in the binary message when it gets transported

133
00:05:40.004 --> 00:05:43.001
over the HTTP two protocol.

134
00:05:43.001 --> 00:05:45.004
So that is what line 13 means.

135
00:05:45.004 --> 00:05:48.001
So we are done with the defining the employeeRequest.

136
00:05:48.001 --> 00:05:51.001
Let us now define the employeeResponse.

137
00:05:51.001 --> 00:05:56.004
So let's say message employeeResponse

138
00:05:56.004 --> 00:05:59.000
and let's define the fields which are going to

139
00:05:59.000 --> 00:06:00.009
be a part of the response.

140
00:06:00.009 --> 00:06:02.005
So of course we'll have the ID returned

141
00:06:02.005 --> 00:06:03.004
in the response again.

142
00:06:03.004 --> 00:06:06.009
So I'll say int32 ID equal to one.

143
00:06:06.009 --> 00:06:09.007
In addition to that, I have a string

144
00:06:09.007 --> 00:06:13.005
which is a name let's tag this as two

145
00:06:13.005 --> 00:06:15.008
and I have a

146
00:06:15.008 --> 00:06:17.000
designation,

147
00:06:17.000 --> 00:06:20.003
let's tag this as three.

148
00:06:20.003 --> 00:06:24.005
So we have three fields, an ID, a name and a designation

149
00:06:24.005 --> 00:06:27.004
the name and the designation are string values

150
00:06:27.004 --> 00:06:32.001
and they're identified by the string type in protobufs.

151
00:06:32.001 --> 00:06:34.005
In addition to int32 and string

152
00:06:34.005 --> 00:06:37.003
there are many other types that are present

153
00:06:37.003 --> 00:06:39.006
in the protobufs project.

154
00:06:39.006 --> 00:06:41.000
For example, I can put a comment here

155
00:06:41.000 --> 00:06:43.005
and I can quickly list those types out.

156
00:06:43.005 --> 00:06:46.008
You have int64 to represent a long value

157
00:06:46.008 --> 00:06:52.001
you have float double to represent those respective values

158
00:06:52.001 --> 00:06:54.009
and then you also have a bool, which is for boolean.

159
00:06:54.009 --> 00:06:57.008
There is a comprehensive guide, which has got a list

160
00:06:57.008 --> 00:07:01.001
of all the types that you can use in your proto files

161
00:07:01.001 --> 00:07:05.000
and also the options that you can configure in your file.

162
00:07:05.000 --> 00:07:07.004
So let me get rid of this.

163
00:07:07.004 --> 00:07:08.004
We don't need this now

164
00:07:08.004 --> 00:07:10.008
let's save this file and we are done.

165
00:07:10.008 --> 00:07:14.000
So we have written out the service definition.

