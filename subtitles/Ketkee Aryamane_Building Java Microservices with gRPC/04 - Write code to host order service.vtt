WEBVTT
1
00:00:00.007 --> 00:00:04.001
- So we have completed the OrderServiveImpl class.

2
00:00:04.001 --> 00:00:06.000
It is pretty much the same.

3
00:00:06.000 --> 00:00:07.007
All the logic is included here.

4
00:00:07.007 --> 00:00:12.005
The next step will be to write the OrderServer class

5
00:00:12.005 --> 00:00:15.000
in order to host the implementation.

6
00:00:15.000 --> 00:00:17.007
So, let's go ahead and this time,

7
00:00:17.007 --> 00:00:19.007
what we can do is we just have to

8
00:00:19.007 --> 00:00:22.007
take this class UserServer, copy it.

9
00:00:22.007 --> 00:00:25.002
It is going to be exactly the same.

10
00:00:25.002 --> 00:00:29.007
You just have to modify a couple of things.

11
00:00:29.007 --> 00:00:32.007
So I copied the UserServer class and I'm copying it

12
00:00:32.007 --> 00:00:35.002
to the same folder, but I'm going to rename it

13
00:00:35.002 --> 00:00:37.007
to the OrderServer.

14
00:00:37.007 --> 00:00:40.006
Let's make the necessary changes. The logger is the same

15
00:00:40.006 --> 00:00:43.004
which is the OrderServer.class.getname.

16
00:00:43.004 --> 00:00:44.002
We are good there.

17
00:00:44.002 --> 00:00:48.001
Let's make this port number on line 18, five zero zero

18
00:00:48.001 --> 00:00:49.009
five two, because this is another server

19
00:00:49.009 --> 00:00:51.004
that we will start locally.

20
00:00:51.004 --> 00:00:52.007
So it is supposed to be exposed

21
00:00:52.007 --> 00:00:56.003
to another port that is five zero zero five two.

22
00:00:56.003 --> 00:01:00.001
In addition to that, on line 21, we have to make sure

23
00:01:00.001 --> 00:01:03.000
that we feed the correct implementation class.

24
00:01:03.000 --> 00:01:04.008
We are hosting the OrderService,

25
00:01:04.008 --> 00:01:08.002
so that will be OrderServiceImpl.

26
00:01:08.002 --> 00:01:12.003
And let's change the log statement on line 25 accordingly.

27
00:01:12.003 --> 00:01:16.007
So we have to say that the OrderServer

28
00:01:16.007 --> 00:01:22.000
started on five zero zero five two.

29
00:01:22.000 --> 00:01:24.002
Lastly, we have to do one more thing.

30
00:01:24.002 --> 00:01:27.004
We make sure that the variable names are according

31
00:01:27.004 --> 00:01:29.009
to the server that you're hosting.

32
00:01:29.009 --> 00:01:34.000
So let's make sure that that is the variable used

33
00:01:34.000 --> 00:01:35.009
in all the codes.

34
00:01:35.009 --> 00:01:36.007
So there we go.

35
00:01:36.007 --> 00:01:38.009
We have the OrderServer class ready.

36
00:01:38.009 --> 00:01:42.003
This is going to host us the OrderService implementation

37
00:01:42.003 --> 00:01:45.008
on port five zero zero five two locally.

38
00:01:45.008 --> 00:01:50.004
So the URL will be local host colon five zero zero five two.

39
00:01:50.004 --> 00:01:52.002
In addition to that, I will also do

40
00:01:52.002 --> 00:01:55.000
one more small change that we did not do

41
00:01:55.000 --> 00:01:58.008
the last time we did the UserService implementation.

42
00:01:58.008 --> 00:02:01.003
I'm going to take this line 14

43
00:02:01.003 --> 00:02:05.006
and instead of creating an instance inside the method

44
00:02:05.006 --> 00:02:09.004
I'll create it on the class level.

45
00:02:09.004 --> 00:02:13.001
Why I'm doing this because we don't want to create

46
00:02:13.001 --> 00:02:17.002
an instance of the UserDao every time we make the request.

47
00:02:17.002 --> 00:02:20.001
We can just create it once and we can use it

48
00:02:20.001 --> 00:02:23.006
in all the methods inside the ServiceImpl class.

49
00:02:23.006 --> 00:02:29.002
Let's format this code a little bit.

50
00:02:29.002 --> 00:02:32.006
Right. So we have the UserServer ready

51
00:02:32.006 --> 00:02:35.009
a little load of refactoring on the UserServiceImpl.

52
00:02:35.009 --> 00:02:38.007
Additionally, one main thing here.

53
00:02:38.007 --> 00:02:42.000
Why are we creating a separate class for the OrderServer?

54
00:02:42.000 --> 00:02:43.007
Why are we trying to host the service

55
00:02:43.007 --> 00:02:47.000
on a separate port of five zero zero five two?

56
00:02:47.000 --> 00:02:48.005
Instead, we could actually go

57
00:02:48.005 --> 00:02:51.000
to the UserServer and on line 22

58
00:02:51.000 --> 00:02:54.003
where we've added the UserServiceImpl to

59
00:02:54.003 --> 00:02:57.001
get hosted on five zero zero five one,

60
00:02:57.001 --> 00:03:01.000
we could also add a chain method code of the same method

61
00:03:01.000 --> 00:03:04.009
and feed in the OrderServiceImpl instance to it.

62
00:03:04.009 --> 00:03:06.009
So this essentially will mean that the user

63
00:03:06.009 --> 00:03:09.008
and the order services both get hosted on the same port

64
00:03:09.008 --> 00:03:13.009
which is five zero zero five one as stated on line 19

65
00:03:13.009 --> 00:03:16.003
but we are not doing this.

66
00:03:16.003 --> 00:03:19.001
Why? That is because we want to emulate a setup

67
00:03:19.001 --> 00:03:22.000
where the user and the order services

68
00:03:22.000 --> 00:03:26.002
are hosted independently on separate ports.

69
00:03:26.002 --> 00:03:29.004
We are doing this so that when we go further in the codes

70
00:03:29.004 --> 00:03:31.001
we can connect both of these services

71
00:03:31.001 --> 00:03:34.003
using a GRPC network code. For that

72
00:03:34.003 --> 00:03:38.000
we need these services running independently

73
00:03:38.000 --> 00:03:40.008
and that's why we have a separate OrderServer

74
00:03:40.008 --> 00:03:42.009
that we have written out.

75
00:03:42.009 --> 00:03:46.000
And now let's go ahead and test out the OrderService

76
00:03:46.000 --> 00:03:48.000
the way we did for the UserService.

