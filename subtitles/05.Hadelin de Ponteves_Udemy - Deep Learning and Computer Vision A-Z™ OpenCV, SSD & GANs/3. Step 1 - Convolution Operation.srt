1
00:00:00,690 --> 00:00:05,730
Hello and welcome back to the course on deep learning in the press the Tauriel we found out what convolutional

2
00:00:05,810 --> 00:00:07,290
neural networks are all about.

3
00:00:07,350 --> 00:00:11,050
And today we're going to dive into Step 1 convolution.

4
00:00:11,100 --> 00:00:18,530
So this is the convolution function and we try to stay away from mathematics and keep things intuitive.

5
00:00:18,540 --> 00:00:25,110
But I couldn't help but share this formula for you because it is so simple a convolution is basically

6
00:00:25,110 --> 00:00:31,380
a combined integration of the two functions and it shows you how one function modifies the other or

7
00:00:31,470 --> 00:00:36,520
modifies the shape of the other and if you've done any signal processing or electrical engineering or

8
00:00:36,520 --> 00:00:42,030
a profession where signal processing is required you would have inevitably come across a conclusion

9
00:00:42,030 --> 00:00:42,390
function.

10
00:00:42,390 --> 00:00:44,090
It is quite popular now.

11
00:00:44,100 --> 00:00:49,490
Once again we're going to keep the mathematics lights or keep them separate.

12
00:00:49,500 --> 00:00:56,190
And if you'd like to get into the math behind the convolutional neural networks a great additional read

13
00:00:56,520 --> 00:01:05,010
is Introduction to convolutional neural networks by Jensine Wu who is a professor at Nanjing University

14
00:01:05,010 --> 00:01:05,820
in China.

15
00:01:05,820 --> 00:01:12,780
This paper was published literally days ago like five or six days ago and it is oriented specifically

16
00:01:12,780 --> 00:01:17,690
at people who are starting out at beginners who are getting to know convolutional neural networks so

17
00:01:18,250 --> 00:01:23,700
the mathematics there should be accessible actually e-mailed Professor Johnson.

18
00:01:23,730 --> 00:01:32,040
And yeah he said his whole goal is to make or break the complex things down so that people who are new

19
00:01:32,040 --> 00:01:33,360
to this field can understand.

20
00:01:33,360 --> 00:01:40,680
And also he mentioned that he's got some materials available on his home page so if you yourself if

21
00:01:40,680 --> 00:01:47,220
you just remove the last two parts and you just go to like Slash W.J. X to that part that's his home

22
00:01:47,220 --> 00:01:52,380
page and you'll be able to find more additional tutorials and materials which haven't been published

23
00:01:52,380 --> 00:01:59,120
as papers but but he uses them in his tutorials so you might find those useful so browse around there

24
00:01:59,130 --> 00:02:05,130
if you'd like to get an introduction into the mathematics behind coalitional neural networks and kind

25
00:02:05,130 --> 00:02:08,470
of build a solid base around that area.

26
00:02:08,550 --> 00:02:12,570
But we're going to move on and we're going to talk about the convolution.

27
00:02:12,570 --> 00:02:17,160
So what is a good solution in intuitive terms here on the left.

28
00:02:17,160 --> 00:02:21,690
We've got an input image as we discussed that's how we're going to look at images just ones and zeros

29
00:02:21,690 --> 00:02:22,750
to simplify things.

30
00:02:22,950 --> 00:02:25,050
And you can see the smiley face there.

31
00:02:25,090 --> 00:02:28,660
Then we've got a feature detector so feature detectors a three by three Matrix.

32
00:02:28,740 --> 00:02:30,120
Does it have to be three by three.

33
00:02:30,150 --> 00:02:31,920
No it doesn't.

34
00:02:31,920 --> 00:02:35,810
Alex net I think uses seven by seven.

35
00:02:35,850 --> 00:02:41,640
And then some other one of those other famous ones uses like five by five feature detectors.

36
00:02:41,640 --> 00:02:48,270
They can be different but usually you'll see that they are three by three and they are you know reasons

37
00:02:48,270 --> 00:02:52,110
to make them three by three so we're going to stick to the conventional way.

38
00:02:52,170 --> 00:02:57,510
Having a three by three feature detector also the feature detectors called these are important terms

39
00:02:57,510 --> 00:02:58,710
because you might come across them.

40
00:02:58,710 --> 00:03:04,080
There are many different terms for the feature detector but the most common ones are feature detector

41
00:03:04,110 --> 00:03:09,540
or Eik might hear it being called kernel or you might hear it being called Filter.

42
00:03:09,540 --> 00:03:14,760
So in this course we're going to be using either filter or a feature detector interchangeably but just

43
00:03:14,760 --> 00:03:23,670
bear in mind that it has those names and a coalition operation is signified by an X in a circle.

44
00:03:23,670 --> 00:03:31,230
Just as you saw in the formulas before and here what happens is on an intuitive level or just think

45
00:03:31,230 --> 00:03:34,980
of it in terms of what is actually happening in the background rather than the mathematics.

46
00:03:35,010 --> 00:03:40,740
Well you take this feature detector or filter and you put it on your image like you see on the left.

47
00:03:40,740 --> 00:03:48,120
So you cover the for instance in this case the top left corner the nine pixels in the top left corner

48
00:03:48,450 --> 00:03:58,760
and you basically multiply each a valuable value so respect to value so the top 0 by the top left value

49
00:03:58,780 --> 00:04:04,980
by the top left value then basically is in position of a 1 one by position about 1 1 position number

50
00:04:05,090 --> 00:04:08,670
or 0 1 0 1 0 2 by 0 2 and so on.

51
00:04:08,670 --> 00:04:13,410
So it's element wise multiplication on these matrices.

52
00:04:13,410 --> 00:04:14,460
And then you add up the result.

53
00:04:14,460 --> 00:04:20,010
So in this case nothing matches up so it's always either 0 by 0 0 or by 1.

54
00:04:20,010 --> 00:04:21,280
So the result is zero.

55
00:04:21,530 --> 00:04:26,610
And here you can see that one of them matched up one on the left matched up.

56
00:04:26,610 --> 00:04:28,120
And therefore we've got a 1 here.

57
00:04:28,120 --> 00:04:30,820
Nothing matched up nothing matched up nothing matched up.

58
00:04:30,890 --> 00:04:38,100
Then we move on to the next throw so and step at which we're moving this whole filter is called the

59
00:04:38,100 --> 00:04:38,610
stride.

60
00:04:38,610 --> 00:04:40,570
So here we have a stride of one pixel.

61
00:04:40,680 --> 00:04:45,820
Here you can see again something matched up the bottom right corner matched up against stride but a

62
00:04:46,110 --> 00:04:50,850
bottom one in the middle matched up here top right hand match up the nothing measure.

63
00:04:50,970 --> 00:04:52,040
The stride is one.

64
00:04:52,170 --> 00:04:53,930
You can change the stride.

65
00:04:54,330 --> 00:04:56,260
You can make it one two.

66
00:04:56,340 --> 00:04:58,580
You're going to get three whatever you like.

67
00:04:58,830 --> 00:05:02,770
The Eventually the one that works well is usually or two.

68
00:05:02,800 --> 00:05:04,280
So that's what people stick to.

69
00:05:04,600 --> 00:05:09,480
And we'll we'll talk about what the stride is towards the end of this tutorial.

70
00:05:09,520 --> 00:05:14,170
So here we've got so we're matching absolutely when I hear you can see we've got two because two of

71
00:05:14,170 --> 00:05:17,270
them matched up and so on and so on.

72
00:05:17,290 --> 00:05:24,830
So on there we go there's another one that matched up there we go and we're done.

73
00:05:24,830 --> 00:05:27,770
So what's what have we created.

74
00:05:27,800 --> 00:05:28,600
Right.

75
00:05:28,820 --> 00:05:31,860
Couple of important things here.

76
00:05:31,970 --> 00:05:38,240
The image on the right is called a feature map also has several terms it also can be called sometimes

77
00:05:38,870 --> 00:05:40,530
it can Vold feature.

78
00:05:41,000 --> 00:05:46,280
So in your blog and volution operation operator to something it doesn't become convoluted it becomes

79
00:05:46,280 --> 00:05:53,680
convolved and it has sometimes like I think to myself in the wrong way but it is the correct term is

80
00:05:53,700 --> 00:05:57,900
convolved is a kind of old feature or it can also be called the activation map.

81
00:05:58,040 --> 00:06:02,510
But we're going to be calling it a feature map in this course so it can be called any one of those things

82
00:06:03,500 --> 00:06:06,300
and what have we done here.

83
00:06:06,320 --> 00:06:09,910
Well as you can see we've reduced the size of the image.

84
00:06:09,920 --> 00:06:15,500
That's number one and that's the important thing I wanted to mention about your input image and the

85
00:06:15,500 --> 00:06:17,090
feature text and the stride.

86
00:06:17,240 --> 00:06:21,690
If you have a stride of one you can see the image reduced a bit but if you have a right to the image

87
00:06:21,690 --> 00:06:25,410
is going to produce more so the feature is going to be even smaller.

88
00:06:25,610 --> 00:06:33,950
And that's a very important function of the feature detector of this whole convolution step is to make

89
00:06:33,950 --> 00:06:42,100
the image smaller because that'll be it'll be easier to process it and it'll be just faster.

90
00:06:42,110 --> 00:06:51,830
It will and you'll be just foster because imagine like here we've got a what a seven by seven image

91
00:06:51,860 --> 00:06:55,310
but imagine if you have a proper photo right.

92
00:06:55,700 --> 00:07:02,270
Or if you have like a 256th on 56 pixel image that's it's a huge number of pixels I CHONE if it is x

93
00:07:02,900 --> 00:07:06,940
squared or like let's say you have a 300 but 300 pixels.

94
00:07:07,060 --> 00:07:13,400
So we don't get confused with the R.G. B 256 has to say like we have a 300 by 300 image in terms of

95
00:07:13,400 --> 00:07:14,720
size and pixels.

96
00:07:14,780 --> 00:07:22,640
Then you have 300 square number of pixels that's a huge number and therefore feature detectors will

97
00:07:23,360 --> 00:07:27,580
reduce the size of the image and therefore stride of two is actually beneficial.

98
00:07:27,740 --> 00:07:29,970
But then the question is do we lose information.

99
00:07:29,990 --> 00:07:34,520
Are we losing information when we're applying the feature detector.

100
00:07:34,520 --> 00:07:40,580
Well some information we are losing of course because we have less values and of resulting matrix.

101
00:07:40,700 --> 00:07:45,950
But at the same time the purpose of the feature detector is to detect certain features certain parts

102
00:07:45,950 --> 00:07:48,170
of the image that are integral.

103
00:07:48,620 --> 00:07:53,150
And so for instance if you think about it this way like the feature detector has a certain pattern on

104
00:07:53,150 --> 00:07:54,080
it.

105
00:07:54,080 --> 00:07:57,950
The highest number in your feature map is when that pattern matches up.

106
00:07:57,950 --> 00:08:04,820
In fact the highest number you can get is in an all simplified example is when the feature is that it

107
00:08:04,820 --> 00:08:10,550
matches exactly and you can see that number four we have in our feature map that's exactly.

108
00:08:10,550 --> 00:08:16,910
So if you look at it here that's exactly where this feature detector because there's only four ones

109
00:08:16,910 --> 00:08:21,460
and it matched perfectly so you can see this this part over here.

110
00:08:21,470 --> 00:08:23,220
So the feature was detected here.

111
00:08:23,450 --> 00:08:32,340
And as we discussed at the very start of this section that it features is how we see things is how we

112
00:08:32,430 --> 00:08:33,080
recognize it.

113
00:08:33,090 --> 00:08:40,410
We don't look at every single pixel so to speak in what we see on an image or in real life.

114
00:08:40,410 --> 00:08:46,440
We don't look at every single picture we look at features we look at the nose the hats the the feather

115
00:08:47,070 --> 00:08:55,110
the eyes under the little black marks under the cheetah's eyes to distinguish between a cheetah and

116
00:08:55,110 --> 00:08:57,470
a leopard or the shape of the train.

117
00:08:57,480 --> 00:09:02,610
We don't to distinguish between a bullet train and normal train and so on so we don't look at everything

118
00:09:02,610 --> 00:09:08,110
we look at features and that's what we're preserving and that's what the feature map helps us preserve.

119
00:09:08,110 --> 00:09:15,480
Actually that's what it allows us to bring forward and get rid of all of the unnecessary things that

120
00:09:15,570 --> 00:09:22,740
even as humans we don't process so much information going into your eyes that at any given time like

121
00:09:22,740 --> 00:09:28,680
gigabytes of information if you look at every single dot if not terabytes of information going into

122
00:09:28,680 --> 00:09:35,640
your eyes per second and still we're able to proceed because we get rid of what is unnecessary only

123
00:09:35,640 --> 00:09:41,510
focus on the important features features that are important to us and that is exactly what the feature

124
00:09:41,640 --> 00:09:42,270
does.

125
00:09:42,270 --> 00:09:51,030
So now moving on this is our input image and you we create a feature map so the front one let's say

126
00:09:51,030 --> 00:09:54,300
the front one is the one we just created but then how come there's many of them.

127
00:09:54,300 --> 00:10:00,300
But we create multiple feature maps because we use different filters.

128
00:10:00,300 --> 00:10:00,590
Right.

129
00:10:00,630 --> 00:10:05,430
And that's another way that we preserve lots of the information so we don't just have one feature map

130
00:10:05,880 --> 00:10:12,600
we look for certain features and then or basically the network decides through its training and this

131
00:10:12,600 --> 00:10:18,030
is something we'll discuss towards the end of the section through his training it decides which features

132
00:10:18,120 --> 00:10:23,670
are important for certain types or certain categories and it looks for them and therefore will have

133
00:10:23,670 --> 00:10:26,070
different filters and we'll talk about filters just now.

134
00:10:26,160 --> 00:10:32,280
But basically Ill apply these filters so to get this feature map it applied a filter like the one we

135
00:10:32,280 --> 00:10:36,270
saw but then to get this feature Mabbett apply a different filter to get this feature up apply a different

136
00:10:36,270 --> 00:10:38,080
filter and so on.

137
00:10:38,370 --> 00:10:43,430
And so basically it just creates these feature maps.

138
00:10:43,650 --> 00:10:49,700
And actually that's why personally I think the term feature detector is better than filters.

139
00:10:49,710 --> 00:10:56,040
Remember we're here we have this filter which we also can call a feature detector Well actually the

140
00:10:56,040 --> 00:10:59,440
word feature detector I think is better suited.

141
00:10:59,490 --> 00:11:03,390
And the reason for that is that's what the purpose is right.

142
00:11:03,390 --> 00:11:06,510
We don't want to just we don't want to just filter out our image.

143
00:11:06,510 --> 00:11:10,220
But even though that's a whole that's the same same just a question of terminology.

144
00:11:10,230 --> 00:11:11,990
But basically we want to detect features.

145
00:11:12,000 --> 00:11:12,270
All right.

146
00:11:12,270 --> 00:11:19,680
In this in this lair we're going to our own this feature map we've detected where certain features are

147
00:11:19,800 --> 00:11:24,240
in the image and this feature map we've detected where certain other features are where a certain specific

148
00:11:24,240 --> 00:11:30,350
feature is located and this feature map will be detected where a certain other feature is located on

149
00:11:30,350 --> 00:11:31,420
the image.

150
00:11:31,440 --> 00:11:33,420
So that's that's what we're doing.

151
00:11:33,420 --> 00:11:40,470
And listen we've got a couple of examples So here we're using and this is from Gip dot org.

152
00:11:40,610 --> 00:11:48,690
Their documentation it's a free like kind of tool like paint and you can use it to adjust your images

153
00:11:48,690 --> 00:11:49,550
or work with your images.

154
00:11:49,560 --> 00:11:56,490
But basically they have some valuable examples in their documentation and here they have a picture of

155
00:11:56,490 --> 00:11:59,790
the Taj Mahal and you can choose which filter you want to apply.

156
00:11:59,880 --> 00:12:06,150
So if you download this program and you upload a photo into it and then you can actually start a conversion

157
00:12:06,150 --> 00:12:12,600
matrix and apply filters and you will see that these things these English matrices actually applied

158
00:12:12,600 --> 00:12:15,240
in image processing and design and so on.

159
00:12:15,240 --> 00:12:17,150
So let's have a look at what we get what we get so.

160
00:12:17,240 --> 00:12:21,520
So if we apply this filter five in the middle minus one one is one one is one minus one.

161
00:12:21,690 --> 00:12:23,780
You can see that it sharpens the image.

162
00:12:23,890 --> 00:12:29,010
And so this is it's quite intuitive if you think of it.

163
00:12:29,010 --> 00:12:36,300
So 5 is the pixel of the main pixel like in the middle of the of the filter or the feature detector

164
00:12:36,600 --> 00:12:43,410
and then minus one minus one one just one just kind of like reduces the pixels around the a in an intuitive

165
00:12:44,430 --> 00:12:45,000
sense.

166
00:12:46,170 --> 00:12:47,020
Then blur.

167
00:12:47,040 --> 00:12:54,150
So basically takes equal significant gives equal significance to all of the pixels are all the one in

168
00:12:54,150 --> 00:12:59,070
the center and therefore it combines them together and you get a blur edge enhance.

169
00:12:59,070 --> 00:13:03,860
So here you can see that's minus one and one and then you get zeros right.

170
00:13:03,870 --> 00:13:11,100
So you did delete to remove the pixels around the main one in the middle and you only keep this one

171
00:13:11,100 --> 00:13:15,610
at a minus one and it gives you an edge and this was a bit harder to understand how it works.

172
00:13:16,290 --> 00:13:20,700
Like probably harder just to think of it intuitively edge detect.

173
00:13:20,700 --> 00:13:23,340
Right so this one probably makes more sense.

174
00:13:23,340 --> 00:13:25,860
Right you take them a middle one.

175
00:13:25,850 --> 00:13:28,880
You reduce the middle one.

176
00:13:29,050 --> 00:13:36,180
The Probably like the strength of the middle pixel and then you look for the ones you look for.

177
00:13:36,420 --> 00:13:41,980
These ones you see increase the strength of the ones around them.

178
00:13:42,090 --> 00:13:43,910
So you have the ones there.

179
00:13:44,720 --> 00:13:45,610
Yes that's.

180
00:13:45,690 --> 00:13:50,700
That gives you like an edge takes and you can see which you get there and boss another one.

181
00:13:50,700 --> 00:13:58,130
So the the key here is that it's symmetrical and you can see the image becomes asymmetrical as well

182
00:13:58,140 --> 00:14:03,580
so you got like that kind of feeling that it's standing out towards you.

183
00:14:03,840 --> 00:14:08,910
And that's what you get when you have like minuses here and plus here again this is very this is getting

184
00:14:08,970 --> 00:14:13,860
a bit technical now but at least we can get some kind of intuitive and Lissa's go quickly through them

185
00:14:13,860 --> 00:14:14,160
again.

186
00:14:14,160 --> 00:14:21,480
So there's sharpen there's blur there's edgin hands there's an edge detect there's and boss as so as

187
00:14:21,480 --> 00:14:27,350
you can see these are great examples of the same image but we're getting feature maps.

188
00:14:27,360 --> 00:14:32,430
So we use different feature detectors to get different feature maps of the same image and therefore

189
00:14:32,430 --> 00:14:40,380
now we have lots of the last of this versions of this image where in each one we've tried to detect

190
00:14:40,440 --> 00:14:44,920
certain things in these terms they're not applicable to us.

191
00:14:44,940 --> 00:14:50,460
Their second boss is probably not applicable to us in terms of convolutional neural networks but age

192
00:14:50,550 --> 00:14:51,630
detect that's important.

193
00:14:51,630 --> 00:14:58,590
We want to detect the edges edge enhance probably not blur sharpen so certain things like edgy text.

194
00:14:58,580 --> 00:15:02,450
Probably the most important one for our type of work.

195
00:15:02,460 --> 00:15:07,560
And in terms of understanding computers they will decide for themselves or neural networks will decide

196
00:15:07,560 --> 00:15:12,900
for itself what's important what's not and it probably won't be even recognizable to the human eye.

197
00:15:12,900 --> 00:15:14,910
You won't be able to understand what those features mean.

198
00:15:14,910 --> 00:15:22,530
But the computer will decide and that's the beauty of neural networks that they can process so many

199
00:15:22,530 --> 00:15:28,950
different things and understand without even having that intuition or without having that explanation

200
00:15:28,950 --> 00:15:34,380
why they will understand which features are important to them whether we have a name for them or not

201
00:15:34,810 --> 00:15:39,830
that that's a whole that's an irrelevant question for the artificial neural network.

202
00:15:39,990 --> 00:15:41,260
And my favorite one.

203
00:15:41,280 --> 00:15:50,940
Here's a image of Geoffrey Hinton from Geoffrey Hinton passed through one of these filters.

204
00:15:50,940 --> 00:15:53,070
All right so that brings us to the end of Teresa Tauriel.

205
00:15:53,070 --> 00:15:55,460
I hope you enjoyed learning about convolution.

206
00:15:55,470 --> 00:16:02,490
The key takeaway is that convolution the primary purpose of we can evolution is to find features in

207
00:16:02,490 --> 00:16:08,280
your image using the feature detector put them into a feature map and by having them in a future map

208
00:16:08,340 --> 00:16:15,710
it still preserves the spatial relationships between pixels which is very important for us to you know

209
00:16:15,720 --> 00:16:19,280
because if they are completely jumbled up then we've we've lost the pattern.

210
00:16:19,350 --> 00:16:25,110
And at the same time it's important to understand that most of the time the features a neural network

211
00:16:25,110 --> 00:16:32,430
will detect and use to recognize certain images and Klaas's will mean nothing to humans but nevertheless

212
00:16:32,460 --> 00:16:33,120
they work.

213
00:16:33,120 --> 00:16:34,420
And that's what convolution is.

214
00:16:34,440 --> 00:16:36,280
And I look forward to seeing you next Tauriel.

215
00:16:36,300 --> 00:16:37,980
Until then enjoy learning.
