WEBVTT
1
00:00:02.340 --> 00:00:06.480
So how do we open the device camera?

2
00:00:07.080 --> 00:00:15.720
The good thing is, if you'll remember, the first section of this module, Flutter actually uses Start

3
00:00:15.720 --> 00:00:23.580
and it runs on an engine, so to say, which gives you direct access to the system, to the operating

4
00:00:23.580 --> 00:00:28.890
system you're running on so you can directly tap into such native device features.

5
00:00:28.890 --> 00:00:34.320
Flutter gives you a direct bridge to these features and later in the module.

6
00:00:34.320 --> 00:00:41.670
By the way, I'll also show you how you can actually write your own native Swift or Java code for iOS

7
00:00:41.670 --> 00:00:48.450
or for Android and connect that to your flutter code and you'll see how easy that is because Flutter

8
00:00:48.450 --> 00:00:52.680
has all the features it needs to talk to the underlying platform.

9
00:00:52.680 --> 00:00:57.540
So iOS or Android, it has all the features it needs to talk to the platform built in.

10
00:00:57.540 --> 00:01:03.510
So therefore talking to iOS or to Android to open the camera is really simple.

11
00:01:03.690 --> 00:01:10.350
Still, you would have to write some Java or swift code to really then tell Android or iOS to open the

12
00:01:10.350 --> 00:01:11.010
camera.

13
00:01:11.460 --> 00:01:15.750
And of course, that's not something we want to do here, because chances are you don't know Swift,

14
00:01:15.750 --> 00:01:16.980
you don't know Java.

15
00:01:17.310 --> 00:01:24.270
And the good thing is for all the common interactions you want to have with your device, so things

16
00:01:24.270 --> 00:01:30.540
like working with maps or working with the camera, you've got packages which you can install to take

17
00:01:30.540 --> 00:01:36.750
all the heavy lifting away from you and just give you a couple of dart methods you can call to, well,

18
00:01:36.750 --> 00:01:39.330
open a camera to open maps and so on.

19
00:01:39.750 --> 00:01:45.960
There are official packages managed by the Flutter team and tons of unofficial ones managed by the community.

20
00:01:46.260 --> 00:01:50.310
And if you search for image underscore picker here on pop dot dev.

21
00:01:51.240 --> 00:01:56.490
You'll find a couple of plugins that help you with selecting images and definitely feel free to explore

22
00:01:56.520 --> 00:01:57.150
them all.

23
00:01:57.240 --> 00:02:00.270
The one I'll use is the image picker plugin here.

24
00:02:00.630 --> 00:02:06.870
This is a great plug in which makes it very easy to work with the device camera, select the image or

25
00:02:06.870 --> 00:02:09.150
take an image and then work with that image.

26
00:02:09.330 --> 00:02:14.970
It has detailed installation docs here and as always, the installation starts by going to the installing

27
00:02:14.970 --> 00:02:18.030
tab here and copying that dependency.

28
00:02:18.360 --> 00:02:25.560
Then simply go into your pup spectral YAML file here and there, add it and then save it.

29
00:02:25.560 --> 00:02:27.960
And as always, it fetches this automatically.

30
00:02:27.960 --> 00:02:34.920
If it doesn't run, flatter packages get in the terminal after navigating into this project here.

31
00:02:35.310 --> 00:02:40.350
So with that added here, we can start using this package to open the camera.

32
00:02:40.590 --> 00:02:44.190
So here in image input start you now can import.

33
00:02:45.030 --> 00:02:51.300
A package with package colon and it's the image picker package and the image picker dart file.

34
00:02:52.020 --> 00:02:58.590
With that added, you can go down here to this function which is triggered when this flat button is

35
00:02:58.590 --> 00:02:59.280
pressed.

36
00:02:59.430 --> 00:03:02.430
And there I now want to start taking my image.

37
00:03:02.790 --> 00:03:08.520
Now, since we have a bit more code in there, I'll actually use a named method here, a named function.

38
00:03:09.030 --> 00:03:11.550
So this is a bit well nicer to read.

39
00:03:11.550 --> 00:03:15.000
Our code is a bit more structured and I'll name it.

40
00:03:16.490 --> 00:03:17.150
Take.

41
00:03:17.900 --> 00:03:18.770
Picture.

42
00:03:19.800 --> 00:03:22.830
And I'll come back to the type that returns in a second.

43
00:03:22.980 --> 00:03:27.580
And in here I'll use image picker and we don't instantiate this.

44
00:03:27.600 --> 00:03:32.430
Instead, you use this as a class, which provides a couple of static methods.

45
00:03:32.580 --> 00:03:38.190
And if you click on it, you see it has static methods in there, like the pic image method and you

46
00:03:38.190 --> 00:03:40.650
already see this that this will return a future.

47
00:03:40.860 --> 00:03:45.030
So you can call pig image here to open the camera and take an image.

48
00:03:45.030 --> 00:03:50.670
And this returns a future because of course that will take a while to finish, at least until the user

49
00:03:50.670 --> 00:03:53.430
pressed the camera button and confirmed the image.

50
00:03:53.820 --> 00:03:58.980
So here we'll get back a future and therefore I want to use async await and therefore here we'll return

51
00:03:58.980 --> 00:04:03.690
a future here, however, a future which won't yield anything but here.

52
00:04:03.690 --> 00:04:10.590
I of course, want to await for this image to be taken, and then we'll have the image file as a response

53
00:04:10.590 --> 00:04:11.040
here.

54
00:04:11.400 --> 00:04:12.660
And that should be final.

55
00:04:13.230 --> 00:04:18.480
So in the end, after the image took and confirmed, the image will have an image file here.

56
00:04:20.120 --> 00:04:27.880
Now there is an important note to take, though, if you are using image picker version 0.6.7 or higher.

57
00:04:27.890 --> 00:04:36.830
So if you're not using 06.5 or anything like that, then this syntax changes slightly or you can change

58
00:04:36.830 --> 00:04:37.190
it.

59
00:04:37.430 --> 00:04:43.730
You can still use the syntax to show you here, but alternatively, you can now also instantiate the

60
00:04:43.730 --> 00:04:46.820
image picker to create an image picker.

61
00:04:47.270 --> 00:04:52.280
So actually you would store this in a new final constant then.

62
00:04:52.490 --> 00:04:56.540
And then on this picker you can call get image.

63
00:04:56.600 --> 00:05:04.010
Now to get image, you will still be able to pass the exact same arguments I'm now going to pass over

64
00:05:04.010 --> 00:05:04.880
the next minutes.

65
00:05:04.880 --> 00:05:06.290
So that does not change.

66
00:05:06.290 --> 00:05:13.070
But how you trigger that image picking process that changed you instantiate and then call get image

67
00:05:13.070 --> 00:05:16.850
on the instance instead of calling pick image as a static method.

68
00:05:17.060 --> 00:05:19.340
It depends on the package version you're using.

69
00:05:19.340 --> 00:05:25.460
And as I just said, you can also still use the other approach with the newer package version, but

70
00:05:25.460 --> 00:05:29.360
you might want to consider switching to that alternative I just showed you.

71
00:05:29.660 --> 00:05:32.330
Now pick image needs to be configured.

72
00:05:32.450 --> 00:05:37.280
You need to provide the source argument and define what your source for the image should be.

73
00:05:37.280 --> 00:05:44.060
Because there are two sources and you can use the image source enum for that which is provided by the

74
00:05:44.060 --> 00:05:45.740
image picker package.

75
00:05:45.740 --> 00:05:48.200
And there you have the camera or the gallery.

76
00:05:48.200 --> 00:05:53.300
Now I won't use the camera, but of course you could also use the gallery instead to let the user will

77
00:05:53.300 --> 00:05:54.680
take an image from their.

78
00:05:55.570 --> 00:06:01.840
And another argument you can define as the max height or max width and all restrict the image or automatically

79
00:06:01.840 --> 00:06:07.210
crop it to a max width of 600 so that our image isn't too big.

80
00:06:07.240 --> 00:06:12.940
Because of course, modern phones really have high resolution cameras and you therefore shoot large

81
00:06:12.940 --> 00:06:13.600
images.

82
00:06:13.600 --> 00:06:16.170
And for this app we don't need such a large image.

83
00:06:16.180 --> 00:06:21.400
So to save some space on the device and also speed up our app, you should of course ensure that you

84
00:06:21.400 --> 00:06:28.690
only take images in a size that you really need and don't take high resolution images if your app doesn't

85
00:06:28.690 --> 00:06:29.320
need them.

86
00:06:29.320 --> 00:06:31.300
If it does, of course do so.

87
00:06:31.570 --> 00:06:34.540
So here that will now configure the image I want to take.

88
00:06:34.540 --> 00:06:38.380
It will take the image and thereafter it will store it here in image file.

89
00:06:39.710 --> 00:06:43.610
Now let's hook up to take picture method here to this button.

90
00:06:43.880 --> 00:06:46.840
So point at take picture without parentheses.

91
00:06:46.850 --> 00:06:51.140
Don't want to execute this method when the code gets passed, but instead when the user presses the

92
00:06:51.140 --> 00:06:51.740
button.

93
00:06:52.190 --> 00:06:55.280
And with all of that, we're almost there.

94
00:06:55.280 --> 00:06:58.730
But one super important thing is missing.

95
00:06:58.880 --> 00:07:04.520
Often when working with native device features like the camera or with the user location, you need

96
00:07:04.520 --> 00:07:11.240
to ask for permission before you use these features and therefore you need to add some extra setup.

97
00:07:11.240 --> 00:07:14.630
And you see that also in the package here in the read me file.

98
00:07:14.630 --> 00:07:21.500
And basically whenever you're working with a package that leverages some native device feature which

99
00:07:21.500 --> 00:07:25.220
needs permissions, the official documentation should tell you about that.

100
00:07:25.220 --> 00:07:31.610
So the official docs here for the plugins you're using are always worth having a look at because they

101
00:07:31.610 --> 00:07:35.390
tell you what you need to configure for this package to work correctly.

102
00:07:35.750 --> 00:07:40.970
Of course you should not just check the read me for packages that use native device features.

103
00:07:40.970 --> 00:07:46.550
You should actually read the read me for all packages you're using, but especially for packages that

104
00:07:46.550 --> 00:07:48.020
use native device features.

105
00:07:48.020 --> 00:07:51.290
You should have a look so that you don't miss any setup.

106
00:07:51.500 --> 00:07:56.960
And here we get extra hints on how to configure this for iOS and for Android and for Android.

107
00:07:56.960 --> 00:07:58.970
As you see, we need no extra conflict.

108
00:07:58.970 --> 00:08:01.370
But for iOS we do there.

109
00:08:01.370 --> 00:08:07.040
We need to add it the info list file in the iOS runner folder.

110
00:08:07.040 --> 00:08:12.800
Now if you're on Windows or Linux, you won't have an iOS folder because you can't build iOS apps there.

111
00:08:12.860 --> 00:08:18.590
But if you are on Mac OS, make sure you go to the iOS folder in your Flutter project and there to the

112
00:08:18.590 --> 00:08:21.230
runner folder and then to info p list.

113
00:08:21.410 --> 00:08:28.190
Info P list is a configuration file for the iOS app where you set up things like the number of the app,

114
00:08:28.190 --> 00:08:35.480
but also some permissions you need and the text you want to show in the permission prompts, which iOS

115
00:08:35.480 --> 00:08:41.929
automatically shows to the user when the user is about to use the camera, use the location, anything

116
00:08:41.929 --> 00:08:42.559
like that.

117
00:08:42.950 --> 00:08:46.190
So here you see three keys, which you should add.

118
00:08:46.280 --> 00:08:47.990
So just copy that name.

119
00:08:47.990 --> 00:08:51.530
And then in here you can pick any place.

120
00:08:53.270 --> 00:08:54.380
Maybe here.

121
00:08:55.630 --> 00:08:58.280
Above that key UI launch storyboard name.

122
00:08:58.330 --> 00:08:59.260
The storyboard name.

123
00:08:59.260 --> 00:09:04.930
So right next to such a key entry, not between key and string or a key or whatever, because these

124
00:09:04.930 --> 00:09:06.280
entries always belong together.

125
00:09:06.280 --> 00:09:08.590
You have a key, and then that's the value for the key.

126
00:09:08.590 --> 00:09:13.300
So don't enter your new entry between such a key value pair.

127
00:09:14.180 --> 00:09:20.150
But instead add a new key here with these opening and closing elements here.

128
00:09:20.150 --> 00:09:28.940
Key and then again, key with a forward slash between the angled brackets and then enter that key which

129
00:09:28.940 --> 00:09:30.770
you got from the official docs.

130
00:09:30.770 --> 00:09:36.620
And now the value here is a string because you enter some text which is displayed to the user when he

131
00:09:36.620 --> 00:09:41.150
basically is about to use a feature that needs that permission.

132
00:09:41.660 --> 00:09:45.920
So here, this would be the permission you need when you want to use the gallery.

133
00:09:45.920 --> 00:09:49.400
We're actually not using that, so we technically don't need this.

134
00:09:49.400 --> 00:09:52.730
But in case you want to use the gallery, add this permission.

135
00:09:52.730 --> 00:09:54.050
That's why I'm showing it here.

136
00:09:54.500 --> 00:10:01.580
So here you can display any text that Will gets the user to confirm this or give you the permission.

137
00:10:01.580 --> 00:10:04.850
So we need to take a picture.

138
00:10:04.850 --> 00:10:10.280
Maybe you provide a more meaningful text than that, but I think you're getting the idea here.

139
00:10:10.640 --> 00:10:16.490
So whenever permission, which we need to add for our app here, certainly is to camera usage description.

140
00:10:16.490 --> 00:10:20.660
You need that when you want to use the camera and I'll show the same text here.

141
00:10:20.660 --> 00:10:22.820
You could enter a different text of course.

142
00:10:23.270 --> 00:10:25.280
And then here the microphone usage.

143
00:10:25.280 --> 00:10:30.320
You only need that if you want to take a video where you also record the audio.

144
00:10:30.350 --> 00:10:33.830
We're definitely not doing that here, so we don't need to set this up.

145
00:10:34.220 --> 00:10:37.010
So this here's the camera key.

146
00:10:37.010 --> 00:10:38.420
That's the important one for us.

147
00:10:38.420 --> 00:10:41.150
If you want to use the gallery, you also need that.

148
00:10:41.150 --> 00:10:45.950
And if you want to record videos, you also should ask for permission to record the audio.

149
00:10:46.790 --> 00:10:51.350
With that, we're all set for iOS as the official docs state.

150
00:10:51.380 --> 00:10:56.330
We don't need a special setup for Android, so with that we should now be able to press that button.

151
00:10:56.330 --> 00:10:59.900
Let's do a full refresh and then let's see whether that works.

152
00:11:01.140 --> 00:11:05.640
So let's go here to the ad plays screen click take picture.

153
00:11:06.310 --> 00:11:09.010
And I'm actually getting an error here.

154
00:11:11.000 --> 00:11:15.250
No implementation found for method pig image on channel plugins.

155
00:11:15.260 --> 00:11:21.710
Now this should be a problem that can be solved by closing our process and fully rebuilding and restarting

156
00:11:21.710 --> 00:11:22.280
the app.

157
00:11:23.080 --> 00:11:29.860
Simply because we added a plugin that's taps into native device functionalities that can sometimes lead

158
00:11:29.860 --> 00:11:30.460
to problems.

159
00:11:30.460 --> 00:11:32.320
So let's do a full restart here.

160
00:11:33.400 --> 00:11:35.950
And now let's go back to the ad play screen.

161
00:11:35.950 --> 00:11:37.540
Click take picture again.

162
00:11:37.900 --> 00:11:40.120
And now it is opens up the camera here.

163
00:11:40.150 --> 00:11:43.230
Now, the first time you launch this, you get this info screen here.

164
00:11:43.240 --> 00:11:46.270
So simply go back in that case here, leave the camera.

165
00:11:47.960 --> 00:11:49.510
And let's press it again.

166
00:11:49.520 --> 00:11:50.930
Camera opens up again.

167
00:11:50.930 --> 00:11:52.730
And now here we can take a picture.

168
00:11:53.620 --> 00:12:00.250
And confirmed us with a check mark if we're happy this closes the camera and now we got a handle to

169
00:12:00.250 --> 00:12:01.060
that image.

170
00:12:01.060 --> 00:12:03.010
It's now stored in that variable.

171
00:12:03.010 --> 00:12:08.080
But of course, now we need to do something with the variable to save it on our local device in the

172
00:12:08.080 --> 00:12:09.250
file system there.

