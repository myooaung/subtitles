1
00:00:02,290 --> 00:00:04,300
Let's get there step-by-step.

2
00:00:04,300 --> 00:00:11,740
The first step which I want to take is that we make sure that when we favorite a product, we actually

3
00:00:11,800 --> 00:00:16,420
only do that for ourselves and not for everyone.

4
00:00:16,480 --> 00:00:23,350
So therefore in the product.dart file where we send a request to mark a product as a favorite, here

5
00:00:23,740 --> 00:00:31,120
I actually will send this to a different URL and that different URL could be user favorites,

6
00:00:31,120 --> 00:00:38,230
whatever you want to name it, then I want to have a dynamic segment here with the userId so that we

7
00:00:38,230 --> 00:00:45,580
have a subfolder for that userId only and then in there, yet another folder or another entry so to say

8
00:00:45,910 --> 00:00:51,260
with the product ID. So actually I need two IDs now,

9
00:00:51,280 --> 00:00:57,050
this here is the product ID but I also need the userId. Now since I get the token here as an argument,

10
00:00:57,080 --> 00:01:02,930
it makes sense to also get the userId as an argument here and then this would be the thing I want

11
00:01:02,930 --> 00:01:04,050
to use here.

12
00:01:04,069 --> 00:01:10,200
So this is the userId, we now need to ensure that this reaches this method here in the product_item.dart

13
00:01:10,210 --> 00:01:12,830
file as a second argument

14
00:01:12,950 --> 00:01:18,320
and of course we can go to our auth.dart file in the providers folder because in there, we have the

15
00:01:18,380 --> 00:01:24,280
userId and we're setting that ID when a user is logged in, we're setting it here,

16
00:01:24,350 --> 00:01:32,730
so all we have to do is add a getter. Let's add a getter here, userId and here, I'll not really add a

17
00:01:32,730 --> 00:01:33,530
long check,

18
00:01:33,560 --> 00:01:37,000
we could check if the user is authenticated and otherwise return null

19
00:01:37,010 --> 00:01:38,480
but it's kind of redundant here,

20
00:01:38,630 --> 00:01:46,010
so I'll just return userId, like this. Let's go back to the product_item.dart file and therefore now we can

21
00:01:46,010 --> 00:01:49,900
access authData.userId here now.

22
00:01:49,930 --> 00:01:55,600
So I'm now sending this into toggle favorite status and here, this request should now be sent somewhere

23
00:01:55,600 --> 00:01:56,780
else.

24
00:01:56,860 --> 00:02:07,600
Let's give this a try, let's again login here like this and let's ignore what we see here as a status

25
00:02:07,600 --> 00:02:08,380
with the hearts,

26
00:02:08,470 --> 00:02:12,850
let's press the favorite button here and on Firebase,

27
00:02:12,910 --> 00:02:18,460
you should see that you now have a new user favorites folder, the new entry and that actually should

28
00:02:18,460 --> 00:02:19,750
be the ID of your user.

29
00:02:20,020 --> 00:02:23,870
Let's kind of remember it starts with vtf0,

30
00:02:23,920 --> 00:02:26,550
let's go to authentication, yes

31
00:02:26,580 --> 00:02:27,450
vtf0

32
00:02:27,450 --> 00:02:28,560
that looks pretty good to me,

33
00:02:28,680 --> 00:02:30,410
so that clearly is our userId

34
00:02:31,440 --> 00:02:35,020
So back to the database data, in that folder,

35
00:02:35,040 --> 00:02:39,210
we have another entry, for that product,

36
00:02:39,210 --> 00:02:41,490
we set isFavorite to true.

37
00:02:41,580 --> 00:02:45,480
Now actually, this is kind of a redundant entry, sending a post request there is not really what I want

38
00:02:45,480 --> 00:02:49,900
to do, I don't want to append new values there all the time when we switch our status,

39
00:02:49,920 --> 00:02:52,720
instead I want to override the existing status.

40
00:02:52,770 --> 00:02:58,170
So now instead of sending a patch request here which was good for the old approach where we stored this

41
00:02:58,170 --> 00:03:05,340
together with the other product data, now we can send a put request here because now I really just want

42
00:03:05,340 --> 00:03:06,390
to send

43
00:03:06,390 --> 00:03:08,830
true or false as a value.

44
00:03:08,940 --> 00:03:11,510
So I will just send isFavorite

45
00:03:11,520 --> 00:03:18,780
which is true or false and not in curly braces but just as a standalone value still encoded to JSON

46
00:03:19,080 --> 00:03:22,540
but other than that as a standalone value.

47
00:03:22,550 --> 00:03:30,880
So now let me actually clear that entry and let's save that and let's see what this now generates when

48
00:03:30,880 --> 00:03:34,030
we use put and just send true or false.

49
00:03:34,030 --> 00:03:42,010
So again real quick, let's login here and yes this is annoying, we'll fix it later and let's press this

50
00:03:42,010 --> 00:03:43,630
heart again

51
00:03:43,630 --> 00:03:48,430
and now you see we have a new entry where we simply have that ID which is the product ID here if

52
00:03:48,430 --> 00:03:51,190
you want to compare it and set to true.

53
00:03:51,460 --> 00:03:57,160
If I press that heart again, it's updated to false.

54
00:03:57,440 --> 00:03:58,300
This now works

55
00:03:58,310 --> 00:04:03,560
but of course we now also have to take this into account when we fetch our products because now the

56
00:04:03,560 --> 00:04:06,500
favorite status will not be included in the product anymore

57
00:04:06,500 --> 00:04:12,200
and I will already delete it from there because it simply shouldn't be part of our product data anymore,

58
00:04:12,230 --> 00:04:17,240
the favorite status is not part of the products anymore.

59
00:04:17,240 --> 00:04:18,370
So back in our code,

60
00:04:18,380 --> 00:04:21,440
that means that when we add a product,

61
00:04:24,320 --> 00:04:31,430
here in products.dart when we add a product, of course I'll no longer add isFavorite to the data we submit

62
00:04:31,460 --> 00:04:36,680
because a new product on the server should no longer have a favorite status

63
00:04:36,680 --> 00:04:44,520
and it also means that when we fetch products, we of course also want to fetch data for the favorite

64
00:04:44,520 --> 00:04:45,080
status

65
00:04:45,090 --> 00:04:51,530
and we haven't done this thus far. So here in fetch and set products, besides fetching a list of products,

66
00:04:51,540 --> 00:05:00,200
we also want to fetch the favorite statuses and I want to do that before I transform my product data.

67
00:05:00,200 --> 00:05:04,520
So actually here, I don't want to do that

68
00:05:04,520 --> 00:05:07,240
if we have no product, so I'll wait for this check

69
00:05:07,250 --> 00:05:14,640
but after this check, it's time for another request where we get our favorite response or whatever you

70
00:05:14,640 --> 00:05:18,690
want to call it, where we await another HTTP get request

71
00:05:18,870 --> 00:05:24,600
but now the URL here will be this URL of course which we have in the product.dart

72
00:05:24,610 --> 00:05:32,270
file where we sent that favorite status to. So we can copy it from there, the token is now named auth

73
00:05:32,280 --> 00:05:39,000
token here and we're not looking for a specific product ID but instead, I want to fetch all favorite

74
00:05:39,000 --> 00:05:41,190
information for the logged in user.

75
00:05:41,350 --> 00:05:47,940
Now the userId is not an information I have in here but just like the authToken, we can of course

76
00:05:47,940 --> 00:05:49,760
expect to get this here.

77
00:05:49,800 --> 00:05:55,140
So we can expect to have the user ID here and maybe get this as a second argument if you will

78
00:05:55,140 --> 00:06:00,630
and then we just have to go to the main.dart file again and ensure that we receive the userId here.

79
00:06:00,630 --> 00:06:09,750
So now here for the product's constructor, we also forward auth.userId as a second argument.

80
00:06:09,760 --> 00:06:16,840
Now we have the userID here and therefore we can also use it here in this request and I shouldn't

81
00:06:16,840 --> 00:06:20,340
name this URL because this is final, I'm overriding it.

82
00:06:20,950 --> 00:06:22,720
Let me turn this into a var up there,

83
00:06:22,720 --> 00:06:27,670
remove final down there and simply overwrite the URL because we only need it for this request and

84
00:06:27,670 --> 00:06:29,970
then we can assign a new value for this request.

85
00:06:30,700 --> 00:06:37,750
So now I get all the favorite data for all products that this user favorited or marked as a favorite,

86
00:06:37,750 --> 00:06:39,190
this should of course be

87
00:06:39,190 --> 00:06:40,520
response.

88
00:06:40,690 --> 00:06:47,890
So now for creating our products here which we then store locally, we have to take that data into account

89
00:06:47,980 --> 00:06:57,260
which we get back here and what we will get back of course will be in the end a map where we have key

90
00:06:57,260 --> 00:07:01,930
value pairs, where the key should be product ID and values should be true or false,

91
00:07:01,970 --> 00:07:11,430
so a pretty trivial map which we get back. So I'll create my favorite data here and there, I will JSON

92
00:07:11,430 --> 00:07:22,690
decode the favorite response body and that will be the map I just described. Here where we create the products,

93
00:07:22,780 --> 00:07:28,870
when I assign the favorite status, we no longer get that from the prodData but from the favorites data

94
00:07:29,200 --> 00:07:34,990
and there I just explained, we'll have keys which match our product IDs and then the value will be false

95
00:07:34,990 --> 00:07:35,440
or true.

96
00:07:35,440 --> 00:07:42,830
So I just have to access the prodId here and I should be good to go. Now a check is required

97
00:07:42,860 --> 00:07:51,560
though, for one I want to check if favorite data is equal to null, if that is the case, then this user

98
00:07:51,560 --> 00:07:53,660
has never favorited anything,

99
00:07:53,690 --> 00:07:57,290
so then obviously every product will just be not a favorite,

100
00:07:57,290 --> 00:07:58,730
so we set this to false,

101
00:07:58,730 --> 00:08:02,750
only if the user has some favorite data we can check for that productId

102
00:08:03,290 --> 00:08:12,790
but that product ID still might not exist. If we find no entry for prodId, this here will be null.

103
00:08:12,910 --> 00:08:16,040
Now if it is null, I want to use an alternative value.

104
00:08:16,040 --> 00:08:17,570
We can do this with a double question mark

105
00:08:17,570 --> 00:08:19,870
operator which simply checks whether that is null.

106
00:08:19,940 --> 00:08:25,190
If it's not null, it will use that value and if it is null, it will fallback to the value after the double

107
00:08:25,190 --> 00:08:26,240
question marks

108
00:08:26,240 --> 00:08:32,530
and that would be false as well. So if favorite data is null or if we find no entry for that ID, we'll

109
00:08:32,539 --> 00:08:33,679
set it to false,

110
00:08:33,700 --> 00:08:39,250
otherwise we'll use that entry which we find and that should now actually load our products such that it

111
00:08:39,250 --> 00:08:48,770
takes the favorite data we store here into account. So with that all saved, we can reload the app

112
00:08:51,580 --> 00:08:53,110
and log back in here and

113
00:08:56,040 --> 00:08:59,730
now let's see, this reloads and none of that is a favorite

114
00:08:59,850 --> 00:09:03,690
and that makes sense because we only have one entry and that is set to false.

115
00:09:03,720 --> 00:09:06,430
So even though we have an entry for one product, it's false.

116
00:09:07,530 --> 00:09:14,630
Let's switch this to a favorite here and it's true therefore and then let's reload that page here by simply

117
00:09:14,630 --> 00:09:15,980
revisiting it

118
00:09:16,280 --> 00:09:17,980
and now this is loaded correctly.

119
00:09:17,990 --> 00:09:23,580
If I switch both to a favorite and I reload, it should load and fill out both hearts right from the start

120
00:09:23,660 --> 00:09:27,580
and if I clear that and I reload, only the book should be a favorite.

121
00:09:27,650 --> 00:09:33,470
So this seems to work and we're now storing our favorites on a per user basis, so that if a different

122
00:09:33,470 --> 00:09:38,930
user logs in which I can demonstrate by refreshing the app and logging in with that second user I also

123
00:09:38,930 --> 00:09:40,050
created earlier,

124
00:09:40,970 --> 00:09:47,330
if we now login here with test2@test.com which is my other user, then here we should also be

125
00:09:47,330 --> 00:09:55,830
able to load all the products of course but if we do so, we see two empty hearts, even though one product

126
00:09:55,830 --> 00:10:04,460
is a favorite but it's a favorite of the other user. So that's how we scope the favorite mode or status

127
00:10:04,460 --> 00:10:05,600
to our user,

128
00:10:05,600 --> 00:10:12,110
let's now make sure that the products themselves also belong to users and that on the managed products

129
00:10:12,110 --> 00:10:15,620
page, we really only find the products that we own.

