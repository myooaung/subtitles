WEBVTT
1
00:00:02.330 --> 00:00:07.550
Now what could be a proper solution for this landscape problem?

2
00:00:07.550 --> 00:00:12.890
Well we could show some switch here at the top, some toggle that actually allows us to switch between Chart

3
00:00:12.890 --> 00:00:21.170
View and ListView where we have these different lists. And therefore here in the main.dart file, we of

4
00:00:21.170 --> 00:00:26.560
course don't always want to render both the chart and the list but either of the two

5
00:00:26.630 --> 00:00:35.180
but what we do always want to render on top of both is a switch? For that thankfully, there is a switch

6
00:00:35.450 --> 00:00:43.450
element in Flutter, a switch widget which is built into Flutter just like that called switch and switch

7
00:00:43.450 --> 00:00:46.810
itself has a couple of fields you can configure.

8
00:00:46.810 --> 00:00:48.760
Most importantly, you can set its value,

9
00:00:48.760 --> 00:00:55.690
true or false, is it enabled or disabled and a function that is triggered whenever the user changes the

10
00:00:55.690 --> 00:00:57.160
switch.

11
00:00:57.190 --> 00:01:02.740
Now of course, some labels would also be good, so let's actually wrap this into a row here and in that

12
00:01:02.740 --> 00:01:12.150
row, we then have a text where we maybe say show chart and next to that, we then have our switch, like that

13
00:01:12.540 --> 00:01:17.220
and we can set the value to true for now so that it's always turned on but of course we should also

14
00:01:17.220 --> 00:01:21.350
handle clicks on the switch where the user is able to change this.

15
00:01:21.350 --> 00:01:23.050
Now we have that chart here,

16
00:01:23.330 --> 00:01:29.870
some centering would also be good I'd say. So on the row, as you learned it, we can of course add some main

17
00:01:29.870 --> 00:01:37.410
axis alignment and ensure that everything is centered along the main axis, which is left to right for

18
00:01:37.410 --> 00:01:37.770
a row

19
00:01:37.830 --> 00:01:39.830
therefore it's centered in the middle.

20
00:01:39.870 --> 00:01:47.720
Now to make those button clickable, we need to manage the onChanged event here, so when user taps it

21
00:01:47.900 --> 00:01:52.340
because you manually need to store the current value of the switch.

22
00:01:52.520 --> 00:01:55.760
So thankfully, we already are in a stateful widget,

23
00:01:55.760 --> 00:02:01.370
otherwise we would have to transform it into one because that switch value is some state which

24
00:02:01.370 --> 00:02:08.419
changes and which has to be reflected on the UI, our widget, our switch here will change after all leave

25
00:02:08.419 --> 00:02:11.750
alone the rest of the page which we here also will change.

26
00:02:11.750 --> 00:02:19.900
And therefore here, I'll add a new property in our class here, maybe below our list here and

27
00:02:20.140 --> 00:02:28.250
it will not be a final one, it'll be a boolean and we could name it show chart because that is in the

28
00:02:28.250 --> 00:02:33.320
end what is controlled with that switch and initially let's say it's false.

29
00:02:33.320 --> 00:02:42.310
Now we can assign or reassign show chart whenever our switch is pressed. So there on the switch, for

30
00:02:42.310 --> 00:02:45.300
onPressed we can define it in an an anonymous function,

31
00:02:45.340 --> 00:02:51.340
of course you could have also used a named one. This function will get the value, the new value that will

32
00:02:51.340 --> 00:02:52.900
be stored which is a boolean,

33
00:02:52.900 --> 00:02:58.060
so Flutter automatically tells you should the new value be true or is it false depending

34
00:02:58.060 --> 00:03:00.780
on whether the switch is turned on or turned off

35
00:03:00.950 --> 00:03:06.340
and therefore in here, you just have to call set state to also retrigger the build method and update

36
00:03:06.370 --> 00:03:11.220
the UI based on the choice and set show chart equal to val,

37
00:03:11.230 --> 00:03:17.350
so the chosen value and of course, set the switch to the currently chosen value so that on the switch,

38
00:03:17.590 --> 00:03:25.800
it's reflected what the user chose. Now with that, that switch is usable and you can switch here.

39
00:03:26.250 --> 00:03:33.150
The next step of course is that we show either the chart or our list of transactions when we press

40
00:03:33.150 --> 00:03:33.780
that switch.

41
00:03:37.720 --> 00:03:44.680
So here, we can use a ternary expression and check show chart, if show chart is true, then I want to show

42
00:03:44.680 --> 00:03:46.750
that chart, otherwise,

43
00:03:46.780 --> 00:03:47.890
so not an addition

44
00:03:47.890 --> 00:03:53.780
but otherwise, I want to show this container here with my list.

45
00:03:53.830 --> 00:03:59.050
So now if we save that, we still have that image problem which we'll also fix but now we only see the

46
00:03:59.050 --> 00:04:07.090
list and only if I turn this on, we see the chart. So that's now of course way better because while still

47
00:04:07.090 --> 00:04:13.660
the styling is off and we'll have to fix that, we certainly now have a way of showing less on the screen

48
00:04:13.690 --> 00:04:19.029
and that is what we want to do here on landscape mode because we have less height available. An alternative

49
00:04:19.029 --> 00:04:21.610
of course would be to make the whole screen scrollable

50
00:04:21.670 --> 00:04:27.010
but then again we'll have the problem with the lists where if we scroll down too far, we only scroll

51
00:04:27.010 --> 00:04:30.070
the ListView and we can't get up again.

52
00:04:30.130 --> 00:04:31.740
So this is the first step,

53
00:04:31.750 --> 00:04:39.460
let's now also make sure that we adjust the chart height here and of course, that we also adjust our image

54
00:04:39.460 --> 00:04:40.120
size here.

