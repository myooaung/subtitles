WEBVTT
1
00:00:02.140 --> 00:00:09.010
Before we continue working on this, it's time for a summary because we covered a lot of things and a

2
00:00:09.010 --> 00:00:12.280
lot of different widgets over the last lectures.

3
00:00:12.280 --> 00:00:19.930
For example in the transaction list, we now also use the ListTile, the CircleAvatar, padding, FittedBox,

4
00:00:19.950 --> 00:00:25.510
there are so many new widgets which I covered in this module thus far and especially over the last

5
00:00:25.510 --> 00:00:26.770
lectures.

6
00:00:26.770 --> 00:00:32.710
Now I know that when I learned Flutter, I found the amount of widgets overwhelming.

7
00:00:32.710 --> 00:00:35.670
Now I did of course already mention this earlier in the course,

8
00:00:35.830 --> 00:00:40.540
there is this official widget catalog which I always recommend checking out to learn more about the

9
00:00:40.540 --> 00:00:45.740
widgets we're using here and to also learn which widgets are available.

10
00:00:45.760 --> 00:00:52.870
I also want to really stress here that there are so many widgets also because a lot of the widgets have

11
00:00:53.470 --> 00:00:58.130
equal or comparable effects, not equal but comparably effects,

12
00:00:58.240 --> 00:00:59.630
take the padding here.

13
00:00:59.830 --> 00:01:05.110
I mentioned that you can build the exact same thing by using a container, you could use container with

14
00:01:05.110 --> 00:01:09.340
padding. Padding is simply a shortcut here which you can use,

15
00:01:09.340 --> 00:01:13.480
you don't have to but which you can use if you only want to set some padding.

16
00:01:13.660 --> 00:01:18.960
It can be easier, doesn't add the extra overhead of all the other arguments which you might want to set

17
00:01:18.960 --> 00:01:20.770
up and therefore using a padding if

18
00:01:20.770 --> 00:01:26.770
you only need the padding is a bit clearer regarding your intents. Regarding performance,

19
00:01:26.770 --> 00:01:30.670
it's hard to measure that but that should hardly make any difference.

20
00:01:30.700 --> 00:01:36.790
Now CircleAvatar for example could also be replaced with a container which you manually turn into a

21
00:01:36.790 --> 00:01:38.170
circle shape.

22
00:01:38.170 --> 00:01:39.900
Now that's something we haven't done yet,

23
00:01:39.910 --> 00:01:46.450
we haven't built our own shapes but if you would want to replace CircleAvatar, you could use a container

24
00:01:46.450 --> 00:01:46.960
here.

25
00:01:46.970 --> 00:01:53.220
Now of course in this container, you can't have a radius but what you can have here is a decoration

26
00:01:53.450 --> 00:01:58.750
and here we can create a BoxDecoration which we did already earlier and there for example, you can set

27
00:01:58.750 --> 00:02:06.020
your color to theme of context and then primary color to use that and then you can give this a shape here

28
00:02:06.190 --> 00:02:12.520
and that by default if you hover over that is of type BoxShape.rectangle and you can set this to

29
00:02:12.520 --> 00:02:17.890
BoxShape.circle to turn this container into a circle instead of a rectangle.

30
00:02:17.890 --> 00:02:26.340
Now you can also give that container a height of 60 and a width of 60

31
00:02:26.410 --> 00:02:34.420
and if you save that, you have basically your CircleAvatar, 60 instead of 30 because 30 was your radius

32
00:02:34.420 --> 00:02:37.410
and therefore of course height and width are double the radius.

33
00:02:37.420 --> 00:02:41.860
So this is just an example, of course you wouldn't build this on your own if you have a CircleAvatar,

34
00:02:41.860 --> 00:02:47.260
if you want that exact look but this is basically how you could rebuild it. Of course CircleAvatar behind

35
00:02:47.260 --> 00:02:49.390
the scenes also has some other things

36
00:02:49.390 --> 00:02:52.110
but in the end, this is how Flutter works,

37
00:02:52.170 --> 00:02:57.300
there's always more than one way of achieving something but that is something that shouldn't scare you

38
00:02:57.370 --> 00:03:02.830
but that should actually be good because it gives you a lot of opportunities to build things in a different

39
00:03:02.830 --> 00:03:08.270
way on your own or by using certain built-in widgets and you will also have that point

40
00:03:08.290 --> 00:03:09.640
and that is absolutely normal

41
00:03:09.640 --> 00:03:11.560
and I also have that point

42
00:03:11.560 --> 00:03:17.440
even after all the time I worked with Flutter, where you suddenly find a new widget which you haven't

43
00:03:17.440 --> 00:03:22.770
heard about before which does something which you always did differently and that new widget does it in

44
00:03:22.840 --> 00:03:24.700
an easier way or in a better way

45
00:03:24.700 --> 00:03:28.070
and there are also new widgets getting added to Flutter all the time.

46
00:03:28.210 --> 00:03:33.970
So take all these widgets as an opportunity and use the official docs, the widget catalog to get a feeling

47
00:03:33.970 --> 00:03:36.660
for which widgets you have and how to use them.

48
00:03:36.670 --> 00:03:40.990
That's also the case for all these values like EdgeInsets here.

49
00:03:40.990 --> 00:03:47.410
I know that when you're starting off, it's strange to see how I know that here you need EdgeInsets.,

50
00:03:48.010 --> 00:03:55.560
in other cases you need to create a BoxDecoration object, then you suddenly need to use a Flexfit.tight

51
00:03:55.570 --> 00:03:56.500
or something like that,

52
00:03:56.530 --> 00:03:59.650
so how do you know when to create which value?

53
00:03:59.730 --> 00:04:04.890
And there again, often hovering over a value gives you a first glimpse, a first idea,

54
00:04:04.960 --> 00:04:10.990
here for example we get a hint at EdgeInsets.all and that is already pretty helpful.

55
00:04:11.170 --> 00:04:17.980
If that doesn't help however, you can also click command or control click on a value to dive into its

56
00:04:18.610 --> 00:04:23.290
source code basically and have a look at what's happening there and maybe get an idea of which value

57
00:04:23.290 --> 00:04:24.670
would make sense there

58
00:04:24.670 --> 00:04:31.960
or of course, check out the official docs for the card widget, for the ListTile widget to get a detailed

59
00:04:31.960 --> 00:04:35.900
explanation of how to configure and use it and to see some examples.

60
00:04:35.950 --> 00:04:40.540
That is how you get a feeling for that and the more you then work with Flutter, the more you remember

61
00:04:40.540 --> 00:04:48.340
and the easier it gets to combine all these widgets together but also be prepared that you will hit

62
00:04:48.340 --> 00:04:52.930
that point where you suddenly learn about a new widget or a new value and you can replace some of your

63
00:04:52.930 --> 00:04:54.580
existing widgets with that

64
00:04:54.670 --> 00:04:55.750
and that's not bad.

65
00:04:55.750 --> 00:05:00.760
Using the second most widget is not the end of the world, doesn't mean horrible performance automatically,

66
00:05:00.760 --> 00:05:05.110
that is how you learn Flutter and how you evolve as a Flutter developer.

