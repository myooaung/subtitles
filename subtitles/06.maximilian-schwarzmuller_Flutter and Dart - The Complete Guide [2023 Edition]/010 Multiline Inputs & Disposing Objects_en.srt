1
00:00:02,390 --> 00:00:05,240
Now the price and the title are not all,

2
00:00:05,270 --> 00:00:12,440
we also of course need an input for the description. So I'll copy the title input here and move that after

3
00:00:12,440 --> 00:00:21,660
the price input and on there, I'll say description as a label text and the text input

4
00:00:21,660 --> 00:00:29,460
action here should still be next because I still want to go to a different input thereafter but now

5
00:00:29,460 --> 00:00:34,980
the special thing about the description input here will be that it actually should be suited for longer

6
00:00:34,980 --> 00:00:39,150
inputs because the description of a product potentially is longer.

7
00:00:39,150 --> 00:00:46,530
For that I'll add a maxLines argument here and set this to three to determine how long this may be, how

8
00:00:46,530 --> 00:00:52,350
many lines should be rendered on the screen so to say, the user can always enter more by scrolling

9
00:00:52,410 --> 00:00:58,700
in the text field but that determines how big the text field container is in the end. I will also set

10
00:00:58,970 --> 00:01:04,500
a special keyboard type with text input type as we did it for the price

11
00:01:04,569 --> 00:01:09,750
and here to multiline which gives us a keyboard that is particularly suited for multiline text input.

12
00:01:10,340 --> 00:01:18,590
Now with that actually, I do remove the next text input action because multiline will automatically

13
00:01:18,590 --> 00:01:23,960
give us an enter symbol in the bottom right corner of the soft keyboard so that we can enter a new line

14
00:01:23,960 --> 00:01:30,770
there, hence we also don't need onFieldSubmitted there because the user will have to move to the next

15
00:01:30,770 --> 00:01:37,310
input on his own because we can't tell when he's done because we'll have an enter symbol to simply add

16
00:01:37,310 --> 00:01:39,380
a new line but let's simply see that.

17
00:01:39,500 --> 00:01:41,650
So if I save this, we go back,

18
00:01:41,690 --> 00:01:45,890
you see this is now bigger than the other inputs because we set maxLines to three

19
00:01:46,060 --> 00:01:50,960
and now if I tap in here, this is this new line button which I meant, you see the cursor here jumps

20
00:01:50,960 --> 00:01:52,400
into different lines

21
00:01:52,400 --> 00:02:00,220
if I press that and that's why we can't go to a new text input or go to the next input because we don't

22
00:02:00,220 --> 00:02:04,580
know when the user wants to add a new line or when the user wants to quit editing this,

23
00:02:04,660 --> 00:02:07,750
so we'll leave that to the user and always create a new line

24
00:02:07,750 --> 00:02:11,800
and if the user wants to go to a different input, he simply has to tap it.

25
00:02:11,800 --> 00:02:15,390
So now with that, we have the description input here as well

26
00:02:15,880 --> 00:02:21,570
now let's make sure we can go there from the price input by also assigning a focus node to it.

27
00:02:21,640 --> 00:02:25,020
So just as before, we can create another focus node,

28
00:02:25,060 --> 00:02:37,190
now it's the descriptionFocusNode like this and we now assign this here as a focus node to the description

29
00:02:37,190 --> 00:02:44,840
input and on the price input where we have that next button in the soft keyboard, we also use on field

30
00:02:45,080 --> 00:02:51,140
submitted as we did it on the title input and of course here, we request focus for the description focus

31
00:02:51,140 --> 00:02:55,930
node. With that if we save that and we're in the price, if I hit next, I go to description.

32
00:02:57,040 --> 00:03:03,280
Now one other important note about focus nodes by the way, you have to dispose them when your state gets

33
00:03:03,280 --> 00:03:03,700
cleared,

34
00:03:03,700 --> 00:03:09,700
so when this object gets removed, when you'll leave that screen because the focus nodes otherwise will

35
00:03:09,700 --> 00:03:12,870
stick around in memory and will lead to a memory leak.

36
00:03:12,880 --> 00:03:18,490
So when working with focus nodes as we're doing it here, you should add a dispose method to your state

37
00:03:18,550 --> 00:03:26,770
object where you're using them and then in there, call price focus node dispose and do the same for the

38
00:03:26,770 --> 00:03:27,760
description focus

39
00:03:27,760 --> 00:03:33,910
node to be sure that you clear up that memory, free up that memory which they occupy and avoid memory

40
00:03:33,910 --> 00:03:34,450
leaks.

41
00:03:34,510 --> 00:03:36,490
That's an important side note here,

42
00:03:36,490 --> 00:03:41,710
if you're working with your own focus nodes, you need to dispose of them in the dispose method in your

43
00:03:41,710 --> 00:03:43,150
state.

44
00:03:43,150 --> 00:03:49,810
And with that, we added some core inputs here which allow us to enter a couple of important pieces of

45
00:03:49,810 --> 00:03:51,560
information about a product.

46
00:03:51,850 --> 00:03:57,930
One missing piece if we have a look at the definition of a product of course is the imageUrl

47
00:03:58,180 --> 00:04:00,550
because that is something we also need,

48
00:04:00,550 --> 00:04:02,280
ID can be automatically generated,

49
00:04:02,350 --> 00:04:06,990
favourite is set to false but the imageUrl is something the user needs to enter.

50
00:04:07,000 --> 00:04:09,160
So let's make sure we have an input for that as well.

