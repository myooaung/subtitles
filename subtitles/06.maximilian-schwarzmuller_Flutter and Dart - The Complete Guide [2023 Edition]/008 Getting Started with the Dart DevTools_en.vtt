WEBVTT
1
00:00:02.400 --> 00:00:05.760
So that's the debugger. By default,

2
00:00:05.790 --> 00:00:11.610
I would recommend that you run your app without debugging though because the debugger injects some extra

3
00:00:11.610 --> 00:00:18.150
logic into the running app and simply makes the app a bit slower and therefore, you have a faster development

4
00:00:18.150 --> 00:00:24.720
cycle, you can work on your app faster, see updates faster if you start your app without debugging but

5
00:00:24.750 --> 00:00:30.270
dive into debugging mode whenever you have a complex problem where you want to find out what's going wrong.

6
00:00:30.760 --> 00:00:31.600
Now

7
00:00:31.680 --> 00:00:32.140
that

8
00:00:32.159 --> 00:00:38.910
all were tools however that helped us with finding and fixing errors in our code

9
00:00:38.970 --> 00:00:46.470
but what if we want to have a look at our user interface and find out why elements are positioned the

10
00:00:46.470 --> 00:00:52.620
way they are positioned or find out how performance of the application is.

11
00:00:52.740 --> 00:00:58.590
For that, we have yet another tool we can use and for that in Visual Studio Code,

12
00:00:58.710 --> 00:01:06.840
you can hit command shift p or control shift p on Windows to bring up that command panel and there

13
00:01:06.850 --> 00:01:08.790
if you type Dart

14
00:01:08.850 --> 00:01:13.820
DevTools, it should give you that option of opening the DevTools. Hit enter there,

15
00:01:13.980 --> 00:01:17.280
maybe you also were prompted for it before in the bottom right corner,

16
00:01:17.280 --> 00:01:18.880
that's also possible.

17
00:01:19.140 --> 00:01:23.340
Once you hit enter there, a new tab should open up in your browser,

18
00:01:23.370 --> 00:01:31.270
here in Chrome and that now is a webpage that is connected to your running emulator and gives you some

19
00:01:31.270 --> 00:01:32.650
live insights.

20
00:01:32.650 --> 00:01:39.840
For example here on the left, you see the current widget tree that you see graphically here in the emulator,

21
00:01:39.850 --> 00:01:47.430
here is its data representation so to say and you can click on widgets there to learn more about them.

22
00:01:47.560 --> 00:01:53.530
Here for example, you see the text that's inside this text widget, which is clearly the question text

23
00:01:53.530 --> 00:02:00.370
here at the top and you can learn more about its settings, like the color, if it has a specific style and

24
00:02:00.370 --> 00:02:05.140
so on and you can do that for all, you can do that for all these containers and so on, to learn how they

25
00:02:05.140 --> 00:02:10.810
are configured. Now, at the moment at least, you can't change the configuration here but at least you get

26
00:02:10.810 --> 00:02:16.060
a feeling for how your widget tree looks like and how it is configured.

27
00:02:16.060 --> 00:02:22.360
You can also go into select widget mode here, activate this by tapping on it once and thereafter, you

28
00:02:22.360 --> 00:02:24.490
can select widgets here in the emulator,

29
00:02:24.490 --> 00:02:29.680
you can simply click on them like on this button and now it's selected. You see some helper lines that

30
00:02:29.680 --> 00:02:37.090
show you how much space this widget takes up and how it is rendered and on the right side or in your

31
00:02:37.390 --> 00:02:39.340
browser there, in the DevTools,

32
00:02:39.340 --> 00:02:40.390
it is also automatically

33
00:02:40.380 --> 00:02:45.220
selected then and you can learn more about it and how it is configured.

34
00:02:45.220 --> 00:02:50.890
You even see, for example here for the button, how it is built internally by Flutter, that it uses a

35
00:02:50.890 --> 00:02:54.020
couple of other Flutter widgets to build that button,

36
00:02:54.070 --> 00:02:57.460
for example a container, a center widget and so on.

37
00:02:57.880 --> 00:03:04.670
So here you can really have a deep dive into your user interface and see why it is built in the way

38
00:03:04.720 --> 00:03:12.260
it is built. In case you're not interested in selecting widgets, here in this Flutter DevTools

39
00:03:12.260 --> 00:03:15.710
or in this Dart DevTools browser window,

40
00:03:15.710 --> 00:03:18.750
you can also click on debug paint here.

41
00:03:18.830 --> 00:03:25.940
What this does is it add some helper lines here in your UI that basically helps you understand why your

42
00:03:25.940 --> 00:03:30.620
app is laid out or structured in the way it is laid out or structured.

43
00:03:30.620 --> 00:03:35.930
You see that for example this text here is centered, you see some helper lines around that button

44
00:03:35.940 --> 00:03:41.960
widget which indicate that there seems to be some extra margin and so on, so that can be really helpful

45
00:03:41.960 --> 00:03:47.000
for getting a feeling for why your app looks the way it looks like.

46
00:03:47.000 --> 00:03:52.790
You can now also paint the baselines here which gives you some helper lines for the text baselines, can

47
00:03:52.790 --> 00:04:00.040
be useful for aligning things that are sitting next to each other. So these are nice visual helpers here.

48
00:04:00.060 --> 00:04:05.700
You also have a performance overlay which you can activate, which helps you understand how performance

49
00:04:05.700 --> 00:04:07.850
of your application is, though be aware

50
00:04:07.850 --> 00:04:15.330
that's performance in development mode on an emulator is never great and never as good as on a real device

51
00:04:15.330 --> 00:04:20.610
once your app is built for production. So using it here in development mode is not really something I

52
00:04:20.610 --> 00:04:26.120
would recommend because you get a wrong idea of how performant or unperformant your application is.

53
00:04:26.220 --> 00:04:30.710
But once you build your app for production and you're testing this app, you can get a feeling for it

54
00:04:30.710 --> 00:04:36.540
if you have any places in your app that you might need to tweak to improve performance, it's not something

55
00:04:36.540 --> 00:04:37.820
we'll care about at the moment

56
00:04:37.830 --> 00:04:44.670
though. What you also have here in the DevTools is an option to turn off that debug banner in the top

57
00:04:44.670 --> 00:04:49.250
right corner, in case that was annoying to you and really useful,

58
00:04:49.290 --> 00:04:52.380
the repaint rainbow and that's something I want to have a closer look at.

