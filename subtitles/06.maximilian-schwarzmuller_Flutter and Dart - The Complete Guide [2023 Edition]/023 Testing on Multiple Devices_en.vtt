WEBVTT
1
00:00:02.050 --> 00:00:02.980
So that's nice.

2
00:00:03.010 --> 00:00:05.620
Of course there are missing functionalities.

3
00:00:05.620 --> 00:00:11.170
For example, we don't have image upload, we don't display the image of the sender or the username

4
00:00:11.170 --> 00:00:13.180
of the sender here next to our messages.

5
00:00:13.840 --> 00:00:18.760
But before we dive into any of that, let's actually see whether this works.

6
00:00:18.760 --> 00:00:25.270
And if two devices, two simulators can talk to each other for that all around is on iOS here.

7
00:00:26.140 --> 00:00:28.270
I'll stop this process here.

8
00:00:29.200 --> 00:00:36.580
An entirely rerun it on Android once so that this new latest version is installed on Android so that

9
00:00:36.580 --> 00:00:40.090
when I kill it the next time, I can still start it on the device.

10
00:00:40.120 --> 00:00:44.440
Otherwise, I would have started an older state of the app, which of course I don't want.

11
00:00:47.060 --> 00:00:49.580
So now with this running, I can kill this again.

12
00:00:49.580 --> 00:00:53.510
But now I can launch it for the app drawer.

13
00:00:54.240 --> 00:00:55.890
And get this latest state.

14
00:00:57.250 --> 00:00:58.960
And now I will launch it on iOS.

15
00:00:58.990 --> 00:01:01.180
Now to launch it on iOS.

16
00:01:02.050 --> 00:01:08.650
I'll bring up that status bar in Visual Studio code and click here on my emulator down there and start

17
00:01:08.650 --> 00:01:09.970
the iOS simulator.

18
00:01:10.000 --> 00:01:13.870
Alternatively, you can simply start it through X code.

19
00:01:14.670 --> 00:01:18.870
So that now this iOS emulator is booting up.

20
00:01:20.530 --> 00:01:25.990
And with that booted I'll run flutter on that since it's selected down there.

21
00:01:25.990 --> 00:01:28.900
When I run the Flutter app, it will run on this device.

22
00:01:28.900 --> 00:01:32.620
So now this is building the app for iOS and will launch it there.

23
00:01:33.250 --> 00:01:38.140
And since this is the first time I'm running it, it's also doing all the initial setup of the packages

24
00:01:38.140 --> 00:01:39.700
I added to the app and so on.

25
00:01:39.700 --> 00:01:41.350
So this can take a bit longer.

26
00:01:41.860 --> 00:01:49.210
And what you might observe here is that it basically gets stuck and it shows this strange error.

27
00:01:49.210 --> 00:01:52.660
Configuring the Default Firebase app first through call stack.

28
00:01:52.690 --> 00:01:58.510
If you're getting this, can simply cancel this launch process on iOS and simply make sure that you

29
00:01:58.510 --> 00:02:03.940
open this project, the iOS folder there through Xcode and then here click on Run.

30
00:02:04.060 --> 00:02:05.260
Right click on it.

31
00:02:05.990 --> 00:02:08.720
And choose add files to runner.

32
00:02:09.650 --> 00:02:16.220
And now here choose this Google Service Info list file again which be downloaded and stored in this

33
00:02:16.220 --> 00:02:17.510
folder earlier.

34
00:02:18.050 --> 00:02:21.620
Click Add and added through Xcode like this.

35
00:02:21.620 --> 00:02:27.020
It's still in the same location, but this makes Xcode aware of it, so to say.

36
00:02:28.160 --> 00:02:32.360
So once you did that, you can try running this app again.

37
00:02:32.360 --> 00:02:38.180
So again, go to run, make sure you select the the iPhone or whatever simulator you are using and launch

38
00:02:38.180 --> 00:02:39.200
the Flutter app again.

39
00:02:39.200 --> 00:02:42.500
And now this time it should work.

40
00:02:42.500 --> 00:02:44.510
So let's wait again.

41
00:02:46.210 --> 00:02:50.530
So now I got this app up and running here, and I'll simply create a new account here.

42
00:02:50.560 --> 00:02:53.890
Test two at test dot com.

43
00:02:54.900 --> 00:02:57.060
With a different username.

44
00:02:57.810 --> 00:03:01.230
And my password and I click sign up to create this user.

45
00:03:01.260 --> 00:03:03.540
Now here I see all the messages are not by me.

46
00:03:03.570 --> 00:03:04.530
This makes sense.

47
00:03:04.650 --> 00:03:11.970
And if I send a message here, this is a test from the other device.

48
00:03:13.290 --> 00:03:14.580
And user.

49
00:03:15.320 --> 00:03:18.170
If I send this message here.

50
00:03:19.480 --> 00:03:20.200
You see it up here?

51
00:03:20.200 --> 00:03:22.090
Here, and you see it up here on the left.

52
00:03:22.100 --> 00:03:24.040
So this now works.

53
00:03:25.430 --> 00:03:31.220
From this user, on the other hand, of course, also shows up on the right device, but here it shows

54
00:03:31.220 --> 00:03:36.560
up as if it's not from this user because it isn't because I'm working on two different users on those

55
00:03:36.560 --> 00:03:37.910
two devices.

56
00:03:37.910 --> 00:03:39.770
So that is pretty amazing.

57
00:03:39.770 --> 00:03:46.400
This works pretty well and we can see that the app works on both devices and that we're able to chat

58
00:03:46.700 --> 00:03:47.110
now.

59
00:03:47.120 --> 00:03:51.110
Needless to say, of course the other functionality is like logout and so on.

60
00:03:51.110 --> 00:03:52.490
All the still should work.

61
00:03:52.490 --> 00:03:55.310
Let's just test it real quick for completeness sake.

62
00:03:55.310 --> 00:03:56.810
Yeah, looks good to me.

63
00:03:57.140 --> 00:04:04.160
So we got this basic chat functionality going on, but right now it's hard to tell from whom a message

64
00:04:04.160 --> 00:04:04.910
is coming.

65
00:04:04.910 --> 00:04:11.840
It would be better if we could also see the username at least of the user who wrote a message.

66
00:04:11.840 --> 00:04:19.040
Maybe like a fat title above the actual message that tells us who the user is that wrote this message.

67
00:04:19.040 --> 00:04:21.350
This is what we're going to add next.

