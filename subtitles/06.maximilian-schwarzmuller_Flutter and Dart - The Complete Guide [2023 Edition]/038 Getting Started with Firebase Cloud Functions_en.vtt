WEBVTT
1
00:00:02.080 --> 00:00:09.220
So now that we got push notifications working, now that we're able to push our notifications via this

2
00:00:09.220 --> 00:00:16.149
notifications tool here on Firebase, I think it would be a great conclusion to this app and to this

3
00:00:16.149 --> 00:00:23.800
module if we could not just send messages through this tool here, which by the way, is a great tool

4
00:00:23.800 --> 00:00:30.100
for any marketing messages or any messages you as the app owner want to push out to your users.

5
00:00:30.100 --> 00:00:32.500
So this is not just a testing tool.

6
00:00:32.500 --> 00:00:36.250
This is really a tool you can use to send messages to your users.

7
00:00:36.520 --> 00:00:40.480
But sometimes you also want messages that are triggered by users.

8
00:00:40.480 --> 00:00:47.080
For example, if a user sends a chat message here, maybe you want to let all other users know about

9
00:00:47.080 --> 00:00:47.170
it.

10
00:00:47.170 --> 00:00:52.840
So that is another use case you could have, and therefore that is something we want to look into here

11
00:00:52.840 --> 00:00:53.350
as well.

12
00:00:53.350 --> 00:01:00.040
And I think that would be a great conclusion to this module that we make sure if a user sends a chat

13
00:01:00.040 --> 00:01:07.630
message here, we push that message to all our devices that also have this app installed.

14
00:01:07.630 --> 00:01:12.850
Now, as a side note, if this is something you want is on a different page, you might not want to

15
00:01:12.850 --> 00:01:18.550
spam all your users just because one user posted something in a public chat.

16
00:01:18.550 --> 00:01:24.250
But here to demonstrate how this works and to see this in action, I think it's a great example.

17
00:01:24.760 --> 00:01:32.860
So therefore we need some way of triggering such a message which we previously wrote manually with this

18
00:01:32.860 --> 00:01:34.750
tool automatically.

19
00:01:34.750 --> 00:01:42.700
When a new entry is written to our database, when a new chat message arrives and Firebase has a solution

20
00:01:42.700 --> 00:01:50.050
for that, we can use Firebase Cloud functions to execute code when a certain event occurs.

21
00:01:50.050 --> 00:01:54.100
Now, of course, that's also not the only way of sending automated messages.

22
00:01:54.100 --> 00:02:00.520
You can write your own server side code on your own server and interact with the Firebase Cloud Messaging

23
00:02:00.520 --> 00:02:03.040
Service to trigger an automated message.

24
00:02:03.100 --> 00:02:09.310
And as always, the official Firebase Cloud Messaging Docs got you covered here under server environments.

25
00:02:09.310 --> 00:02:16.960
You can learn all about automated messages, but it's particularly easy if you do use the entire Firebase

26
00:02:16.960 --> 00:02:20.770
ecosystem and if you do use Firebase Cloud functions.

27
00:02:21.860 --> 00:02:28.070
So to get started on the functions part of Firebase, you can just click on Get Started and we learn

28
00:02:28.070 --> 00:02:34.330
that we need to install this tool locally on our machine to get started writing such functions.

29
00:02:34.340 --> 00:02:39.620
So here in the Flutter app, I'll switch to the regular terminal which is integrated into my IDE.

30
00:02:39.650 --> 00:02:40.040
Here.

31
00:02:40.040 --> 00:02:48.260
You can also use your normal system terminal or command prompt and in there run npm install dash g firebase

32
00:02:48.260 --> 00:02:48.890
tools.

33
00:02:48.890 --> 00:02:54.620
Now as a side note on Linux and Mac, you might need to add sudo in front of this to have the right

34
00:02:54.620 --> 00:02:55.490
permissions.

35
00:02:55.610 --> 00:03:02.360
This will install this Firebase Tools package globally on your system and we need this tool to then

36
00:03:02.360 --> 00:03:07.580
later write the cloud function code to create those automated notifications.

37
00:03:08.150 --> 00:03:13.490
So this finished and we can click on continue and now we should run firebase in it.

38
00:03:13.490 --> 00:03:21.230
And then once we did write our function code Firebase Deploy, so I'll write Firebase Init here in this

39
00:03:21.230 --> 00:03:22.820
project and that's important.

40
00:03:22.820 --> 00:03:28.850
Do this inside of the project to which the functions should belong to keep all your code organized.

41
00:03:29.580 --> 00:03:36.330
And now this will basically open up a wizard which asks you some questions and it asks you which features

42
00:03:36.330 --> 00:03:42.150
of the Firebase ecosystem you want to use here, or to be precise, which features you want to manage

43
00:03:42.150 --> 00:03:45.970
with that Firebase CLI tool, which we're using here.

44
00:03:45.990 --> 00:03:48.690
CLI stands for Command Line Interface.

45
00:03:48.840 --> 00:03:54.930
Now we're interested in functions here, so I will scroll down to that and hit space to select it and

46
00:03:54.930 --> 00:03:56.640
we can leave the rest untouched.

47
00:03:56.640 --> 00:04:02.910
Yes, we are using fire store and yes, we are using storage, but we already got this integrated here.

48
00:04:02.910 --> 00:04:06.840
We don't want to manage anything there with the Firebase CLI.

49
00:04:06.870 --> 00:04:09.420
We're managing this through the web interface instead.

50
00:04:09.420 --> 00:04:15.660
Now functions currently can't be managed through this, so we do select those and hit enter thereafter.

51
00:04:16.170 --> 00:04:24.390
Now you have to let the Firebase Tool know to which project you want to connect this local functions

52
00:04:24.390 --> 00:04:25.830
project you are going to create.

53
00:04:25.830 --> 00:04:29.310
So too which Firebase Web project you want to connect it.

54
00:04:29.310 --> 00:04:32.820
And here I will select use an existing project.

55
00:04:34.250 --> 00:04:36.950
And then select my flutter chat app here.

56
00:04:37.630 --> 00:04:42.520
Now, as a last step, I'm asked which programming language I want to use for those functions, and

57
00:04:42.520 --> 00:04:43.990
I will use JavaScript.

58
00:04:43.990 --> 00:04:48.300
Now, as a side note, you don't need to be a JavaScript expert to follow along here.

59
00:04:48.310 --> 00:04:53.320
Of course, if you want to build a real app with a more complex server side logic, you need to learn

60
00:04:53.320 --> 00:04:56.530
JavaScript or some other language which you can use there.

61
00:04:56.530 --> 00:05:00.220
But to follow along in this course, you don't need any JavaScript knowledge.

62
00:05:00.220 --> 00:05:09.490
So let's just hit enter here and let's choose yes here for listing so that we avoid any bugs.

63
00:05:09.760 --> 00:05:13.030
And this will now add a functions folder here.

64
00:05:13.630 --> 00:05:19.690
Now in that functions folder you've got a couple of files and they all don't matter except for this

65
00:05:19.690 --> 00:05:20.800
index JS file.

66
00:05:20.800 --> 00:05:25.660
That's the important one for us because that is where we're going to write our function.

67
00:05:26.960 --> 00:05:29.630
Now you'll also see that the wizard isn't entirely done.

68
00:05:29.630 --> 00:05:35.240
It asks you whether it dependencies should be installed and you should press y for a yes here and hit

69
00:05:35.240 --> 00:05:35.840
enter.

70
00:05:35.840 --> 00:05:37.880
And this will install all dependencies.

71
00:05:37.880 --> 00:05:40.160
This functions set up needs.

72
00:05:40.160 --> 00:05:45.530
So now I'm not talking about the Flutter app, I'm talking about these cloud functions and we will later

73
00:05:45.530 --> 00:05:49.550
deploy these cloud functions to this firebase hosting environment.

74
00:05:49.550 --> 00:05:53.480
So they will be running on a server away from our local machine.

75
00:05:53.480 --> 00:05:55.700
We just develop them locally.

76
00:05:56.000 --> 00:06:01.340
Now this created this node modules folder which basically contains all the dependencies we have here.

77
00:06:01.340 --> 00:06:07.910
And we have this package JSON file which lists all the dependencies this project, this functions project

78
00:06:07.910 --> 00:06:08.420
has.

79
00:06:08.420 --> 00:06:15.470
And there we got two dependencies, Firebase Admin and Firebase functions and we will indeed only need

80
00:06:15.470 --> 00:06:20.510
these two packages to write our automated notification sending code.

81
00:06:20.540 --> 00:06:22.850
So let's get started with that next.

