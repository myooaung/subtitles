1
00:00:02,250 --> 00:00:07,890
So we added one provider, our product provider, which we use in the products grid.

2
00:00:07,890 --> 00:00:13,710
In the end we use it there because we're setting up a subscription and that subscription or that listener

3
00:00:13,710 --> 00:00:21,000
here with Provider Off Works because we're providing our products object which manages our list of products

4
00:00:21,000 --> 00:00:23,160
here with changed notifier provider.

5
00:00:23,730 --> 00:00:28,360
Now I want to make sure that we can mark products as favorites.

6
00:00:28,380 --> 00:00:34,920
Now, if we have a look at the product model, which is not yet usable by our provider because we're

7
00:00:34,920 --> 00:00:40,920
not implementing with Change Notifier, which, which means we couldn't trigger our listeners from inside

8
00:00:40,920 --> 00:00:41,250
it.

9
00:00:41,970 --> 00:00:48,810
This model has the favorite boolean here and it's also not a final boolean, so we could change that.

10
00:00:50,060 --> 00:00:50,360
Now.

11
00:00:50,360 --> 00:00:57,620
I think it would be pretty neat if the products we had here in our providers package which do use this

12
00:00:57,620 --> 00:01:05,930
product model, could use that product model such that if we change the favorite status of a product,

13
00:01:05,930 --> 00:01:15,800
we automatically notify all places in the app that require a single product and are interested.

14
00:01:15,800 --> 00:01:22,280
You always have to specify that you are interested with the help of provider of so that the widgets

15
00:01:22,280 --> 00:01:28,100
that depend on a single product and are interested are rebuilt whenever that single product changes,

16
00:01:28,100 --> 00:01:32,930
which in our case here means whenever there is favorite status changes because that's the only thing

17
00:01:32,930 --> 00:01:34,340
which can change.

18
00:01:35,090 --> 00:01:35,480
Now.

19
00:01:35,480 --> 00:01:39,560
Therefore, I'll move product here over into providers.

20
00:01:39,590 --> 00:01:43,530
Alternatively, we could now both rename two models if we want to choose.

21
00:01:43,530 --> 00:01:49,670
So rename that folder to models, but I'll simply move the product art file over into providers and

22
00:01:49,670 --> 00:01:54,680
add width change notifier here as well, which is available.

23
00:01:54,710 --> 00:01:57,010
Also thanks to the foundation for import.

24
00:01:57,020 --> 00:02:02,060
So you can use either the foundation art import or the material art import.

25
00:02:02,480 --> 00:02:06,470
Now here in the products DART file, I'm referring to that product.

26
00:02:06,470 --> 00:02:10,400
So through that single product dart file and it's now in the same folder.

27
00:02:10,400 --> 00:02:14,240
So the import path should change to dot slash product dart.

28
00:02:14,840 --> 00:02:21,710
With that, I'm still trading products here, but these products now actually can notify listeners when

29
00:02:21,710 --> 00:02:22,730
they changed.

30
00:02:23,540 --> 00:02:27,740
Now, what would be a place where I'm interested in a changing product?

31
00:02:28,460 --> 00:02:32,790
Now, you might think that would be the product detail page, but that's actually not the case.

32
00:02:32,810 --> 00:02:41,510
There I load a single product based on the ID, which I got, and thereafter I don't really care whether

33
00:02:41,510 --> 00:02:42,410
that changes or not.

34
00:02:42,890 --> 00:02:48,940
I'm not displaying the favorite status on this screen, and I also can't change it from on this screen.

35
00:02:48,950 --> 00:02:51,590
Well, right now it is the screen is pretty empty, to be honest.

36
00:02:51,590 --> 00:02:57,470
Will add more, but will not add anything that would allow us to change the favorite status on the screen.

37
00:02:57,530 --> 00:03:04,700
So the product details screen here is not really a place where I want to reactively listen to changes

38
00:03:04,700 --> 00:03:05,900
in a single product.

39
00:03:06,320 --> 00:03:09,530
The product item, DART file is a different file.

40
00:03:09,530 --> 00:03:14,420
They are the product item widget, which is that Great Tile we're creating there.

41
00:03:14,420 --> 00:03:22,400
I do have this button which represents the the favorite status of a product here and I actually want

42
00:03:22,400 --> 00:03:27,790
to switch that I can based on whether this product already is a favorite or not.

43
00:03:27,800 --> 00:03:35,270
So therefore here of course, I need product data and I need specific data about whether this product

44
00:03:35,270 --> 00:03:36,680
now is a favorite or not.

45
00:03:36,680 --> 00:03:40,700
So I'm interested in hearing about changes in that product.

46
00:03:41,500 --> 00:03:42,970
What does this mean for us?

47
00:03:43,000 --> 00:03:46,990
It means that here I want to set up a listener to a single product.

48
00:03:46,990 --> 00:03:52,000
And that's not important to a single product, not to all products, but to my single product.

49
00:03:52,000 --> 00:03:59,650
Here in that product class, we also need a way of manipulating this Boolean here in a way that also

50
00:03:59,950 --> 00:04:02,770
allows us to call, notify listeners.

51
00:04:02,770 --> 00:04:04,780
And of course, what else is missing?

52
00:04:04,780 --> 00:04:06,520
We have a listener, we have a class.

53
00:04:06,520 --> 00:04:08,380
We need to set up a provider.

54
00:04:08,380 --> 00:04:10,840
What we're doing in main part here for products.

55
00:04:10,840 --> 00:04:14,170
We also need to do that for all our single products.

56
00:04:14,820 --> 00:04:21,120
Now let's start by setting up a provider in the products grid widget.

57
00:04:21,480 --> 00:04:27,570
I'm listening to all my products and then for every product we have, we're creating a product item

58
00:04:27,570 --> 00:04:30,300
here in the end tile in our grid.

59
00:04:30,990 --> 00:04:38,220
So in the end, it's here where I need to provide my product object based on the product class.

60
00:04:38,850 --> 00:04:43,860
Now, in the main dart file, we're doing that here right at the top so that the entire app can in the

61
00:04:43,860 --> 00:04:47,700
end listen to changes in products because we need products in different places.

62
00:04:47,880 --> 00:04:53,050
Now, my single product here is actually really only needed in every product item list style.

63
00:04:53,700 --> 00:05:00,210
So therefore here, where I get all my products, I want to set up a new provider here above my product

64
00:05:00,210 --> 00:05:04,880
item so that inside of the product item we can then listen to changes in that product.

65
00:05:04,890 --> 00:05:09,810
And since this runs, this builder here runs for every product in our products list.

66
00:05:09,810 --> 00:05:15,430
That's perfect because then we can set up different providers for our different product objects.

67
00:05:15,450 --> 00:05:21,760
Because for products, we really only have one object for the entire app defined here in main dart for

68
00:05:21,780 --> 00:05:22,650
a single product.

69
00:05:22,650 --> 00:05:25,680
So for the individual product items, that's a bit different.

70
00:05:25,680 --> 00:05:31,200
We have multiple products there, multiple product items, so we can't set up a single provider.

71
00:05:31,200 --> 00:05:34,140
We need multiple providers one for each product.

72
00:05:34,470 --> 00:05:42,030
Now we're not setting up the provider here inside of the products class because that won't really work.

73
00:05:42,330 --> 00:05:44,640
Instead, we have to do that in our which a tree.

74
00:05:44,640 --> 00:05:52,020
But that's no problem because here we have access to all our products, to the product items stored

75
00:05:52,020 --> 00:05:53,430
in the product class.

76
00:05:53,760 --> 00:06:00,320
And therefore here we can set up a new change notifier provider just as we did in the main dart file.

77
00:06:00,330 --> 00:06:03,030
This is what I'm now returning in my item builder.

78
00:06:03,960 --> 00:06:10,410
This takes a child and the child still is the product item here in the end, so we can still keep that

79
00:06:10,410 --> 00:06:11,070
code.

80
00:06:11,670 --> 00:06:18,060
But now I also want to set up a builder where I build my product object.

81
00:06:18,090 --> 00:06:23,450
Now, the thing, of course, here is I already have my product objects right there built here.

82
00:06:23,460 --> 00:06:27,060
Here I instantiate my product objects.

83
00:06:27,060 --> 00:06:29,340
I do this inside of the product class.

84
00:06:29,340 --> 00:06:32,580
So I don't want to re instantiate product objects now.

85
00:06:32,580 --> 00:06:35,520
I don't want to build a new product object.

86
00:06:37,330 --> 00:06:43,840
But that's no problem in our builder here, where I get a new context passed in automatically, where

87
00:06:43,840 --> 00:06:46,930
I simply have to return the value which I want to provide.

88
00:06:47,020 --> 00:06:49,120
I can simply return.

89
00:06:49,790 --> 00:06:50,870
Products.

90
00:06:51,840 --> 00:06:52,500
I.

91
00:06:54,120 --> 00:07:02,400
This will return a single product item as it's stored in the product class, and it will do this multiple

92
00:07:02,400 --> 00:07:06,240
times because it's inside of the item builder for all the products they have.

93
00:07:08,730 --> 00:07:15,600
Now, since I'm providing a single product here, that also means we could, but we don't have to receive

94
00:07:15,600 --> 00:07:19,200
our product data as arguments here in product item.

95
00:07:20,330 --> 00:07:26,150
Instead here, I'm not passing anything because instead of product item, we could now get rid of all

96
00:07:26,150 --> 00:07:29,840
of that and it wouldn't have been a problem to receive this before.

97
00:07:29,840 --> 00:07:35,630
But now, since I'm interested in some dynamic value in a single product, it makes sense to use a provider

98
00:07:35,630 --> 00:07:36,140
here.

99
00:07:36,440 --> 00:07:37,940
So now in here.

100
00:07:39,820 --> 00:07:42,910
I can again use provider off.

101
00:07:43,090 --> 00:07:48,490
And for that of course you need to import the provider package here in the product item DARD File.

102
00:07:49,090 --> 00:07:55,960
So provider off and now off product because I'm interested in a single product.

103
00:07:56,170 --> 00:08:04,270
So let's import that provider now from the providers folder there from the product dart file, not products

104
00:08:04,270 --> 00:08:05,380
but product.

105
00:08:05,650 --> 00:08:10,870
And it will now look for the nearest product which is provided, which simply happens here in the product

106
00:08:10,870 --> 00:08:17,410
script where I'm providing a product for this product item and a new product, a different product is

107
00:08:17,410 --> 00:08:20,530
provided for every different product item which is rendered.

108
00:08:20,530 --> 00:08:24,190
So for every grid tile because we're repeating this code for all the products.

109
00:08:24,190 --> 00:08:29,680
So this reruns for all the products we have and hence we provide a brand new product for every product

110
00:08:29,680 --> 00:08:32,200
item, which of course is exactly what we want.

111
00:08:32,200 --> 00:08:39,070
We want to provide the correct product item or the correct product element for every product item widget.

112
00:08:39,220 --> 00:08:43,990
Now, there is actually one little problem you should be aware of when working with nested providers

113
00:08:43,990 --> 00:08:49,000
as we're doing it here, when you're using it in a list or in a grid, as we're doing it here where

114
00:08:49,030 --> 00:08:55,150
Flutter removes items when they leave the screen and reads them when they re-enter the screen.

115
00:08:55,150 --> 00:09:02,800
In such situations, what actually happens is that the widget itself is reused by flutter and just the

116
00:09:02,800 --> 00:09:05,140
data that's attached to it changes.

117
00:09:05,140 --> 00:09:07,720
So Flutter recycles the same widget.

118
00:09:07,720 --> 00:09:13,030
It doesn't destroy it and recreate it, which would work fine with our nested provider, but it recycles

119
00:09:13,030 --> 00:09:19,090
it, which means that we are actually attaching a provider to a widget here which content changes over

120
00:09:19,090 --> 00:09:21,550
time and our provider won't pick this up.

121
00:09:21,550 --> 00:09:26,830
Therefore, the more items you have in your list, as soon as you have items that are not visible all

122
00:09:26,830 --> 00:09:30,400
the time, you will run into strange errors and bugs.

123
00:09:30,400 --> 00:09:32,500
But we'll fix this in the next lecture.

124
00:09:32,500 --> 00:09:37,750
This is a good first step and this is an approach you can always use if you're not using a list or a

125
00:09:37,750 --> 00:09:38,320
grid.

126
00:09:38,800 --> 00:09:41,650
So in product item, I can now listen to that.

127
00:09:42,920 --> 00:09:48,590
Past in my context, of course, which is this important communication channel and in here.

128
00:09:49,210 --> 00:09:52,060
I get my product or whatever you want to name it.

129
00:09:52,060 --> 00:09:54,220
So I have my product variable here.

130
00:09:54,920 --> 00:09:57,440
Which won't change in this build run here.

131
00:09:57,440 --> 00:09:58,520
Hence it's final.

132
00:09:58,760 --> 00:10:02,840
And then I can use product ID here to forward that.

133
00:10:02,840 --> 00:10:09,470
I can use product image URL here and I can use product title down there.

134
00:10:10,550 --> 00:10:11,930
If we save that.

135
00:10:15,930 --> 00:10:20,820
You see, this still renders as before, but now we're actually using a different pattern.

136
00:10:20,850 --> 00:10:24,030
The question, of course, is why are we using that pattern?

137
00:10:24,690 --> 00:10:30,660
Because I now, of course, want to make sure that when we tap that favorite button, we switch to favorite

138
00:10:30,660 --> 00:10:33,870
status of a single product for that.

139
00:10:33,870 --> 00:10:40,410
In our product provider file up there in the providers folder, let's add a new method which doesn't

140
00:10:40,410 --> 00:10:43,410
return anything, which I'll name toggle favorite.

141
00:10:44,580 --> 00:10:45,360
Status.

142
00:10:45,450 --> 00:10:47,100
You can name this whatever you want.

143
00:10:47,130 --> 00:10:52,470
The idea here is simply is that we invert the value of is favorite.

144
00:10:52,470 --> 00:10:55,200
So if it's currently true, I want to set it to false.

145
00:10:55,200 --> 00:10:57,510
If it's set to false, I want to set it to true.

146
00:10:57,780 --> 00:11:06,150
So here I'll set is favorite equal to not is favorite and the exclamation mark here simply inverts the

147
00:11:06,150 --> 00:11:06,690
value.

148
00:11:06,690 --> 00:11:11,520
So if it is true, then this here will return false and therefore it a new value will be false.

149
00:11:11,520 --> 00:11:15,480
If it was false, then this year will return true and the new value true.

150
00:11:16,200 --> 00:11:21,690
Now again, to let all listeners know, we need to call notify listeners.

151
00:11:21,690 --> 00:11:25,890
So you could kind of say that's like set state in the provider package.

152
00:11:25,890 --> 00:11:30,720
You let listening widgets know that something changed and they should rebuild.

153
00:11:30,720 --> 00:11:36,690
It's the equivalent to set state and stateful which which we now don't really need here when we're managing

154
00:11:36,690 --> 00:11:38,460
something with the provider package.

155
00:11:39,860 --> 00:11:44,240
Though you don't have to manage everything with the provider package, but I'll come back to this later.

156
00:11:44,570 --> 00:11:51,200
So we're notifying our listeners that this model changed, that we changed something in this object.

157
00:11:51,200 --> 00:11:53,350
We change the favorite status.

158
00:11:53,360 --> 00:12:01,340
We can now use that favorite status in the product item for one here when we press this button, of

159
00:12:01,340 --> 00:12:03,860
course I want to use my product.

160
00:12:04,870 --> 00:12:06,820
Which I'm getting here with my listener.

161
00:12:07,660 --> 00:12:13,420
And call toggle favorite status because that's one thing that should always happen.

162
00:12:13,480 --> 00:12:19,420
And I wanted to reflect the current favorite status here with the icon so we can simply check product

163
00:12:19,420 --> 00:12:20,170
is favorite.

164
00:12:20,170 --> 00:12:26,440
And if it is true, then I want to show that favorite icon which is that filled out hard and otherwise

165
00:12:26,440 --> 00:12:31,210
I'll show favorite border, which is that hard where we got no filling.

166
00:12:33,160 --> 00:12:39,070
If we now save this or maybe do a full refresh here to make sure that this really gets used, you now

167
00:12:39,070 --> 00:12:45,460
see we have empty hearts everywhere, but if I tap it, it gets filled out and I can then also toggle

168
00:12:45,460 --> 00:12:46,090
it off.

169
00:12:46,090 --> 00:12:49,660
And that's correctly reflected on my different items.

170
00:12:49,870 --> 00:12:56,320
And this happens and this works thanks to the provider pattern where we are informed about changes here

171
00:12:56,320 --> 00:12:57,250
in product.

172
00:12:57,250 --> 00:13:03,310
When we tap a heart, by the way, that's a nice use case or a nice place to show.

173
00:13:03,310 --> 00:13:05,170
What happens if I said listen?

174
00:13:05,990 --> 00:13:07,310
Two falls here.

175
00:13:07,430 --> 00:13:12,650
Now, for every product item that gets rendered in our grid, we only fetch the product data.

176
00:13:12,650 --> 00:13:15,050
But then we don't set up an ongoing listener.

177
00:13:15,230 --> 00:13:18,170
That means that when is favorite changes here?

178
00:13:18,170 --> 00:13:20,480
It will still change behind the scenes.

179
00:13:20,480 --> 00:13:27,800
But notify listeners will not reach this build method in this widget because we opted out of updates.

180
00:13:27,800 --> 00:13:28,910
We're not listening.

181
00:13:28,910 --> 00:13:34,040
So this product here will not receive this updated is favorite status.

182
00:13:34,040 --> 00:13:38,540
Therefore a build will not rerun and therefore will not see the new icon.

183
00:13:38,840 --> 00:13:41,930
So if we now do a full hot refresh here.

184
00:13:43,830 --> 00:13:46,770
You see, I can tap these icons as long as I want.

185
00:13:46,800 --> 00:13:50,910
Nothing changes there because we're not listening to updates.

186
00:13:50,940 --> 00:13:52,780
Of course, here, that's not what we want.

187
00:13:52,800 --> 00:13:53,730
So I'll remove that.

188
00:13:53,730 --> 00:13:56,460
But it's important to understand what listen false does.

189
00:13:56,730 --> 00:14:00,390
So now with this changed, you see now this updates again.

