1
00:00:02,290 --> 00:00:04,480
So we got our basic chat going on.

2
00:00:04,480 --> 00:00:05,780
We see the usernames.

3
00:00:05,800 --> 00:00:09,250
Now how about some user images?

4
00:00:09,280 --> 00:00:16,750
It would be nice if, besides the username, we would also see some image of the user who sent a message.

5
00:00:16,960 --> 00:00:24,010
And for that, we of course, need a way of adding a profile picture, to be precise, during the signup

6
00:00:24,010 --> 00:00:25,300
process here.

7
00:00:25,300 --> 00:00:30,400
Besides providing a username, it would be great if we would also have to provide an image.

8
00:00:30,580 --> 00:00:33,130
So that's what I'm going to work on right now for this.

9
00:00:33,130 --> 00:00:37,660
Let's go back to the off screen or to the form, to be precise.

10
00:00:37,660 --> 00:00:44,300
And in that off form, we now also want to fetch an image if the user is signing up.

11
00:00:44,320 --> 00:00:48,190
Of course not during login, but only during sign up.

12
00:00:48,700 --> 00:00:55,210
So for that, maybe at the very top of this entire column, which I have here, in the form, we can

13
00:00:55,210 --> 00:01:01,420
add a new widget and that new widget could be the the image preview which you want to use.

14
00:01:02,250 --> 00:01:06,570
And there's a specific widget that could be helpful here, and that's the Circle Avatar.

15
00:01:07,020 --> 00:01:13,260
We can add this on top of the email text from Field, and this gives us such a nice circle here in which

16
00:01:13,260 --> 00:01:15,690
we later can preview the image.

17
00:01:16,080 --> 00:01:22,260
Now it's a bit small, but we can set the radius here to change that and set it to a double.

18
00:01:22,260 --> 00:01:26,580
And if we set this to 30, you see this is already getting bigger and you can play around with that

19
00:01:26,580 --> 00:01:26,920
value.

20
00:01:26,940 --> 00:01:28,820
I'll go with 40 here, I think.

21
00:01:28,830 --> 00:01:29,850
Let me save that.

22
00:01:29,880 --> 00:01:31,320
Yeah, that looks nice to me.

23
00:01:31,320 --> 00:01:34,290
And there I want to preview the image of the user.

24
00:01:34,320 --> 00:01:39,420
Now, of course, the user also needs a way of taking and setting that image, and therefore we need

25
00:01:39,420 --> 00:01:41,520
a button below that circle avatar.

26
00:01:41,550 --> 00:01:44,580
And you can, of course, go for different buttons here.

27
00:01:44,580 --> 00:01:50,340
I'll go for a flat button where I want to combine text and a camera icon.

28
00:01:50,340 --> 00:01:56,590
And there is a special constructor of this flat button which we can use for this, the dot icon constructor.

29
00:01:56,610 --> 00:02:01,350
This generates a flat button that has both some text as well as an icon.

30
00:02:01,680 --> 00:02:08,970
So here on press, I'll just provide a dummy function right now, and for the icon, I'll set an icon.

31
00:02:09,120 --> 00:02:13,620
And there we can use the image icon, for example.

32
00:02:13,800 --> 00:02:19,710
And for the label we can specify a text widget and set this to.

33
00:02:21,310 --> 00:02:25,000
Add image or any text you want.

34
00:02:25,150 --> 00:02:29,860
Now on this flat button, we can then also set the text color.

35
00:02:29,890 --> 00:02:31,330
Whoops, the text.

36
00:02:32,160 --> 00:02:33,990
Color to theme.

37
00:02:35,360 --> 00:02:36,770
Off context.

38
00:02:37,670 --> 00:02:38,900
Primary color.

39
00:02:39,290 --> 00:02:45,410
And with all that added, you should have this nice add image button below this circular avatar.

40
00:02:45,740 --> 00:02:51,230
Now, of course, we need to hook this button up so that when we click it, we actually do allow the

41
00:02:51,230 --> 00:02:53,600
user to take or pick an image.

42
00:02:54,020 --> 00:02:58,850
And for this, we can use the good old image picker package, which we can use for flutter.

43
00:02:58,880 --> 00:03:00,960
This is very straightforward to use.

44
00:03:00,980 --> 00:03:07,600
We just need to go to installing here, grab this dependency and add this to our back to the YAML file.

45
00:03:07,610 --> 00:03:11,960
So in there below firebase off, I'll add the image picker.

46
00:03:13,540 --> 00:03:18,250
And this will then, of course, automatically download this package and add it to our project.

47
00:03:18,640 --> 00:03:24,490
Now, regarding extra setup steps, there's nothing you need to do on Android, but there are some extra

48
00:03:24,490 --> 00:03:26,990
steps you want to do on iOS.

49
00:03:27,010 --> 00:03:33,160
You want to add these three strings or items to your info list.

50
00:03:33,460 --> 00:03:37,870
And for that, if you are building for iOS, you should go to the iOS folder.

51
00:03:38,610 --> 00:03:42,520
Then to the runner folder and they are in info list.

52
00:03:42,540 --> 00:03:49,230
Make sure that you do have those items and I currently don't have them here.

53
00:03:49,990 --> 00:03:53,770
So I'll grab this nice photo library usage description.

54
00:03:56,890 --> 00:04:02,980
And we can simply add this here at the bottom and add a key field opening and closing.

55
00:04:02,980 --> 00:04:10,180
And between the opening and closing key, you add this identifier and below that you just add a string

56
00:04:10,180 --> 00:04:11,830
field like this.

57
00:04:11,830 --> 00:04:18,220
And between the string tags, you now put the options which belong to this description, and that is

58
00:04:18,220 --> 00:04:23,710
the text that will be shown to the user if your app wants access to the photo library.

59
00:04:24,290 --> 00:04:29,480
We need access to lets you pick an image, something like this.

60
00:04:29,600 --> 00:04:35,570
Now we can replicate this twice so that we have three items because we also need the NFS camera.

61
00:04:35,600 --> 00:04:41,170
Use such description where I will show the same message and the microphone.

62
00:04:41,180 --> 00:04:44,690
We shouldn't need this here, but to avoid errors we can also add it.

63
00:04:44,690 --> 00:04:49,490
But since we're not going to access the microphone, you might not need this depending on what you do

64
00:04:49,490 --> 00:04:50,300
in your app.

65
00:04:51,800 --> 00:04:55,820
So now with these keys added here, we should now be fine.

66
00:04:55,820 --> 00:04:57,740
And we should now have all the setup.

67
00:04:57,740 --> 00:05:04,310
We need to use the image picker so we can then go back to the off form and make sure that we do pick

68
00:05:04,310 --> 00:05:07,250
an image if this button is pressed.

69
00:05:08,310 --> 00:05:14,940
Now to keep this off forum, Leon, I will actually grab this circle, avatar and the flat button,

70
00:05:14,940 --> 00:05:15,510
though.

71
00:05:15,840 --> 00:05:18,720
Cut it from there and add a new widget.

72
00:05:20,520 --> 00:05:23,640
And I'll add it in a picker's subfolder.

73
00:05:23,640 --> 00:05:30,330
And in there I'm going to create a user underscore image, underscore picker, dot dot file, which

74
00:05:30,330 --> 00:05:31,950
holds a stateful widget.

75
00:05:31,980 --> 00:05:38,370
Stateful because this widget will actually need to update some state since we're going to manage a preview

76
00:05:38,370 --> 00:05:44,160
of the image the user chose and we'll need to store that chosen image and then re render the UI to show

77
00:05:44,160 --> 00:05:44,910
a preview.

78
00:05:45,300 --> 00:05:52,950
So here I have my user image picker widget and I import material dot dot of course.

79
00:05:52,950 --> 00:05:56,600
And now in there I want to render these two widgets which I cut.

80
00:05:56,610 --> 00:05:58,350
Now, rendering them side by side.

81
00:05:58,350 --> 00:06:03,960
Like this won't work though, so I'll wrap them in an extra column which has some children into.

82
00:06:03,960 --> 00:06:07,740
Some children are my circle avatar and my flat button.

83
00:06:07,890 --> 00:06:13,370
And now we can use this user image picker in the form and therefore the auth form stays lean.

84
00:06:13,380 --> 00:06:16,440
So here I just have my user image picker like this.

85
00:06:16,440 --> 00:06:22,050
And of course in order to use the user image picker here, you also need to add this import.

86
00:06:23,110 --> 00:06:29,200
So with that we have the same UI as before, but now we have a separate component that manages the image

87
00:06:29,200 --> 00:06:32,920
picking process, and that is always a good practice.

88
00:06:33,550 --> 00:06:40,210
So now here with that, with that image picker component, we want to make sure that when this flat

89
00:06:40,210 --> 00:06:47,830
button is pressed, we do open up that image picker that allows the user to use the camera or to use

90
00:06:47,830 --> 00:06:49,420
the image library.

91
00:06:50,690 --> 00:06:51,050
Produce.

92
00:06:51,050 --> 00:06:52,520
I'll add a new function here.

93
00:06:52,820 --> 00:06:54,200
Pic image.

94
00:06:55,180 --> 00:07:02,470
And on the image picker package, we also see how this works, how this package works, and that picking

95
00:07:02,470 --> 00:07:08,980
an image is as easy as calling pick image on this image picker object, which we get from that image

96
00:07:08,980 --> 00:07:11,260
picker library, we add it.

97
00:07:11,620 --> 00:07:14,980
So therefore we need to add this import here as well.

98
00:07:14,980 --> 00:07:17,410
Import this image.

99
00:07:18,690 --> 00:07:21,980
Picker start file from the image picker package.

100
00:07:21,990 --> 00:07:27,900
And then here in pick image, we can call image picker dot pick image.

101
00:07:28,630 --> 00:07:29,560
Like this.

102
00:07:30,040 --> 00:07:33,160
And now we need to wire up pig image, of course, to the Spartans.

103
00:07:33,160 --> 00:07:39,940
So here on Presque Isle Point at pig image without parentheses, so that this function, this method

104
00:07:39,940 --> 00:07:43,750
gets executed whenever a user presses this button.

105
00:07:45,280 --> 00:07:52,450
Now we can define the source here, the image source, and here we get the image source enum which actually

106
00:07:52,450 --> 00:07:54,550
allows us to specify the source.

107
00:07:54,550 --> 00:08:00,790
And here we can choose whether we want to use the camera or the gallery for taking that image.

108
00:08:01,030 --> 00:08:07,240
Now, if you would want to allow the user to go for either of the two, you could also open up a separate

109
00:08:07,240 --> 00:08:09,850
dialog before you call pick image.

110
00:08:09,850 --> 00:08:13,210
And in that separate dialog you could get that user choice.

111
00:08:13,240 --> 00:08:19,300
Now I will simply assume that we always want to use the camera here, let's say.

112
00:08:19,300 --> 00:08:24,010
But of course that is totally up to you and what you want to build in your application.

113
00:08:24,900 --> 00:08:30,090
So now here we call pick image and this should open up the camera.

114
00:08:30,420 --> 00:08:36,150
Now pick image then returns a future which resolves to depict file.

115
00:08:36,570 --> 00:08:42,750
So here, I'll turn this into a async function so that we can conveniently await this future and in

116
00:08:42,750 --> 00:08:49,290
the end get depict image file here and store this in this constant in this variable here.

117
00:08:50,070 --> 00:08:54,900
And it's this pict image file which we then can use to show a preview for that.

118
00:08:54,900 --> 00:09:01,590
Here in this state, we just need to add a new variable which will be of type file and that's the PICT

119
00:09:01,590 --> 00:09:02,280
image.

120
00:09:03,380 --> 00:09:05,390
Underscore picked image actually.

121
00:09:05,390 --> 00:09:09,260
And file is a type which you need to import.

122
00:09:10,890 --> 00:09:12,630
From Dart io.

123
00:09:13,080 --> 00:09:18,360
So you can add this dart io import here and this will unlock this file type.

124
00:09:19,050 --> 00:09:20,840
And then this is the pict image.

125
00:09:20,850 --> 00:09:28,710
And here we can therefore then call set state and set pict image equal to this pict image file we got

126
00:09:28,710 --> 00:09:33,750
from our future here and that stores depict image file in this pict image property.

127
00:09:33,750 --> 00:09:38,640
And it's this property which we now can use to show the preview because of course we have access to

128
00:09:38,640 --> 00:09:46,680
that property down there in our widget tree and it's here in this circle avatar where you can now actually

129
00:09:46,680 --> 00:09:52,260
set a background image to, well, show a image in this avatar.

130
00:09:52,560 --> 00:09:57,270
And this background image argument here should be of type image provider.

131
00:09:57,450 --> 00:09:59,970
And there are various providers in flutter.

132
00:09:59,970 --> 00:10:04,560
There are providers for images that come from the web.

133
00:10:04,560 --> 00:10:14,100
So where you have a link to the image, but there also is a file image provider and file image simply

134
00:10:14,100 --> 00:10:20,460
takes the file which holds the image and will then basically create a connection and load that image.

135
00:10:20,520 --> 00:10:25,170
So here we just pass in our pict image and that should do the trick.

136
00:10:25,350 --> 00:10:31,560
With that we should be able to open the camera, save, depict image and show it as a preview here in

137
00:10:31,560 --> 00:10:32,100
the circle.

138
00:10:32,100 --> 00:10:32,850
Avatar.

139
00:10:33,210 --> 00:10:38,700
Now, you see, when I save this, I get an error though, because initially, of course, my file here

140
00:10:38,700 --> 00:10:39,540
is null.

141
00:10:39,540 --> 00:10:42,090
The Pict image initially is not set.

142
00:10:42,480 --> 00:10:47,070
So therefore here background image actually initially shouldn't be set to anything.

143
00:10:47,070 --> 00:10:52,920
I will rather check if pict image is not null and only if it is not null.

144
00:10:52,920 --> 00:10:54,510
I'll set it to this file image.

145
00:10:54,540 --> 00:11:01,560
Otherwise I will set background image as a whole to null so I will not pass null to file image.

146
00:11:01,560 --> 00:11:07,590
This would cause this error, but instead I only load file image for this image if we have it and otherwise

147
00:11:07,590 --> 00:11:10,980
set the entire background image argument here to null.

148
00:11:11,280 --> 00:11:14,940
And with that it now saves and reloads without errors.

149
00:11:15,300 --> 00:11:20,730
And we have this empty preview here and you could set a different background color if you wanted to.

150
00:11:20,760 --> 00:11:24,090
We can do this in a second and now choose an image.

151
00:11:24,770 --> 00:11:28,730
And as you can tell, nothing happens here when I click this button.

152
00:11:29,580 --> 00:11:31,590
But instead I get an error here.

153
00:11:31,710 --> 00:11:34,260
I get the error that.

154
00:11:35,290 --> 00:11:37,600
The plug in is missing in the end and we know it is error.

155
00:11:37,600 --> 00:11:42,540
We can fix it by closing this emulator and simply restarting it entirely.

156
00:11:42,550 --> 00:11:48,220
If you add a brand new package, you often have to do this to make sure that the package is loaded correctly.

157
00:11:48,460 --> 00:11:50,380
So let's restart it entirely.

158
00:11:51,030 --> 00:11:52,590
And let's then try again.

159
00:11:52,590 --> 00:11:53,790
And now it looks better.

160
00:11:53,790 --> 00:12:02,790
It opens up this camera simulator on my emulator and we can take a picture here, save this, and we

161
00:12:02,790 --> 00:12:04,920
see it here as a preview.

162
00:12:05,070 --> 00:12:10,050
Now, if you're trying this on iOS, you won't be able to do this on the emulator there.

163
00:12:10,050 --> 00:12:15,120
You would need to test it on a real device, and we'll do that in a second as well once we added the

164
00:12:15,120 --> 00:12:16,470
upload functionality.

165
00:12:16,860 --> 00:12:18,900
So here's my image.

166
00:12:18,900 --> 00:12:25,890
Now I will set a different background color here for the case that we don't have an image yet and background

167
00:12:25,890 --> 00:12:33,540
color simply, well, once a value of type color and here I will just use this gray color as a default

168
00:12:33,540 --> 00:12:34,920
so that if we save this.

169
00:12:36,090 --> 00:12:37,260
And they reload this app.

170
00:12:37,260 --> 00:12:38,850
So we have no pict image.

171
00:12:38,940 --> 00:12:42,870
We start with this gray color, but then we can pick an image.

172
00:12:45,600 --> 00:12:47,970
Confirmed us and now we have our image.

173
00:12:47,970 --> 00:12:48,870
So that's great.

174
00:12:48,870 --> 00:12:50,640
We're able to pick an image now.

175
00:12:50,760 --> 00:12:56,250
Now, one problem we have here is that, of course, I only want to be able to pick an image if we're

176
00:12:56,250 --> 00:12:58,260
signing up, not if we're logging in.

177
00:12:58,260 --> 00:13:01,590
And currently this is showing up on the login screen here.

178
00:13:01,860 --> 00:13:03,420
Now, fixing this is easy.

179
00:13:03,420 --> 00:13:10,290
However, on the off form we just need to make sure that just like the username field, for example,

180
00:13:10,290 --> 00:13:14,850
this user image picker is only getting added if we're not in login mode.

181
00:13:14,970 --> 00:13:20,700
And for this we can use this in error if statement where we check if we're not in logging mode.

182
00:13:20,700 --> 00:13:26,130
So if is log in is false and only then this user image picker will be added.

183
00:13:26,400 --> 00:13:31,620
So if we do that, you see there is no image picker here and only if I create a new account that's there.

184
00:13:32,520 --> 00:13:37,290
And then, of course, I can pick that image and it should work just fine.

185
00:13:37,830 --> 00:13:43,680
And of course, we also, thanks to the scroll ability we added earlier, can add our our fields.

186
00:13:44,220 --> 00:13:45,870
So this is not working.

187
00:13:45,870 --> 00:13:47,670
That's step number one.

188
00:13:47,670 --> 00:13:51,640
Step number two is that this image should get uploaded.

189
00:13:51,660 --> 00:13:52,440
Of course.

