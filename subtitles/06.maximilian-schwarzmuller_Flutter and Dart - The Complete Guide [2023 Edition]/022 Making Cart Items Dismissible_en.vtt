WEBVTT
1
00:00:02.220 --> 00:00:05.130
Swipe to remove is a common pattern in app development,

2
00:00:05.130 --> 00:00:06.390
we haven't used it such far,

3
00:00:06.450 --> 00:00:09.170
so now it's definitely time to implement it.

4
00:00:09.180 --> 00:00:15.990
I want to make sure that in our cart item here, the cart items which we are rendering can be removed

5
00:00:15.990 --> 00:00:20.000
when we swipe them, removed from the lists, removed from the cart.

6
00:00:20.040 --> 00:00:25.260
Now in my app here and that's of course always also something you can define however you want, swiping

7
00:00:25.260 --> 00:00:27.180
means the entire item is gone,

8
00:00:27.180 --> 00:00:30.840
so if we had it in the cart three times, it's now removed entirely.

9
00:00:30.870 --> 00:00:34.290
I won't add a functionality to remove single items,

10
00:00:34.290 --> 00:00:39.840
obviously you could do this as a bonus task but for the purposes of this course and demo, I'll focus

11
00:00:39.840 --> 00:00:42.890
on removing the entire element here.

12
00:00:43.170 --> 00:00:45.620
So how can we implement this?

13
00:00:45.720 --> 00:00:48.390
Thankfully, Flutter got us covered.

14
00:00:48.390 --> 00:00:54.390
There is a special widget which we can add, which we can wrap around our cart here actually and that

15
00:00:54.390 --> 00:01:01.140
is the dismissible widget. That's a widget which is built into Flutter which automatically gives us a nice

16
00:01:01.140 --> 00:01:06.210
animation and will remove the element it wraps from the UI. Internally,

17
00:01:06.210 --> 00:01:11.010
this is a stateful widget therefore and as you can imagine, it does a lot of complex heavy lifting

18
00:01:11.010 --> 00:01:18.630
for managing the animation and so on and therefore, this needs a key to work correctly to avoid issues

19
00:01:18.630 --> 00:01:24.570
where it then displays the list of which often, this part is rendered incorrectly.

20
00:01:24.810 --> 00:01:30.270
Here you should render or use a value key and the perfect value for this is of course the ID of our

21
00:01:30.270 --> 00:01:35.880
cart item because that's guaranteed to be unique. Now on dismissible,

22
00:01:35.880 --> 00:01:40.110
you can also define a background which is shown behind that element

23
00:01:40.110 --> 00:01:51.670
once you start swiping and here, I'll render a container with a color where I use my theme error color

24
00:01:51.700 --> 00:02:00.870
which is a red color. With that added, if you go back and you add an item to the cart, you see I can now

25
00:02:00.870 --> 00:02:06.670
swipe this, right in both directions and if I swipe enough, this indeed is gone. Now

26
00:02:06.690 --> 00:02:11.520
it's not really deleted, it's just deleted on the user interface for now which is why it's back when

27
00:02:11.520 --> 00:02:12.470
I go back

28
00:02:12.660 --> 00:02:14.510
but we can listen of course to that

29
00:02:14.550 --> 00:02:19.560
it's gone effect and then also update it in our data to remove it from there as well.

30
00:02:21.240 --> 00:02:24.020
So we added dismissible,

31
00:02:24.240 --> 00:02:26.630
now there are a couple of things you can configure there.

32
00:02:26.640 --> 00:02:30.060
For one, it would be nice to understand what it does when we remove that.

33
00:02:30.060 --> 00:02:31.980
So here in that container,

34
00:02:32.190 --> 00:02:37.230
I'll also add a little child and that will be an icon and there,

35
00:02:37.260 --> 00:02:42.680
I want to use the delete icon and give that a color of colors

36
00:02:42.720 --> 00:02:51.740
white, also give it a size of 40, so that we can see that. And to position it correctly in the container,

37
00:02:51.740 --> 00:02:58.730
I will add alignment, the alignment argument to the container and set this to alignment.centerRight,

38
00:02:59.000 --> 00:03:05.900
to align it in the center vertically but on the right horizontally. Also add some padding to the container

39
00:03:05.930 --> 00:03:16.820
with EdgeInsets.only on the right of 20 and with that, let's see how that works. If I save this and I

40
00:03:16.910 --> 00:03:20.660
add two items to the cart here,

41
00:03:20.710 --> 00:03:26.560
now you see we have that trash icon here which kind of indicates what's about to happen when we continue

42
00:03:26.560 --> 00:03:27.310
swiping here.

43
00:03:29.290 --> 00:03:33.840
Now if you want to make sure that the background is only behind the cart, you can of course also add the

44
00:03:33.840 --> 00:03:37.460
same margin you added on the overall cart here. Now

45
00:03:39.630 --> 00:03:45.380
that means I just copy that EdgeInsets setup from down there on the cart

46
00:03:45.380 --> 00:03:52.980
and now if I add two cart items there, the swipe effect is only behind the cart. So that's nice, would

47
00:03:52.980 --> 00:03:55.200
also be nice to only swipe from right to left

48
00:03:55.200 --> 00:03:57.180
let's say, not in the other direction.

49
00:03:57.180 --> 00:03:59.760
Thankfully you can restrict this as well

50
00:03:59.760 --> 00:04:00.990
on dismissible.

51
00:04:00.990 --> 00:04:10.040
So here on dismissible, outside of the background argument, so here, you can set the direction argument

52
00:04:10.780 --> 00:04:15.570
to set the direction in which this can be dismissed

53
00:04:15.570 --> 00:04:18.630
and there, you can provide a DismissDirection.

54
00:04:18.660 --> 00:04:25.450
and now here we need endToStart, which typically is right to left and if you set this and you add an item to

55
00:04:25.490 --> 00:04:31.510
the cart, you see now swiping right to left still works but swiping in the other direction does not work.

56
00:04:33.180 --> 00:04:39.390
Now of course, we also need to define what happens once we dismissed it visually because that only affects

57
00:04:39.390 --> 00:04:42.750
the UI but of course we also want to change something in our data then.

58
00:04:43.010 --> 00:04:48.690
And for that, we can define onDismissed which executes a function which we defined here once it's done.

59
00:04:49.290 --> 00:04:52.560
In that function, we received the direction in which it was dismissed,

60
00:04:52.590 --> 00:04:57.030
in case you're allowing different directions and you want to do something different based on the different

61
00:04:57.030 --> 00:04:57.950
directions,

62
00:04:57.960 --> 00:04:59.220
it's not the case for us here,

63
00:04:59.250 --> 00:05:05.250
we always want to dismiss, remove the cart item but if you have different options, different swiping directions,

64
00:05:05.430 --> 00:05:07.200
then you could check the direction here

65
00:05:07.200 --> 00:05:11.040
based on the direction you are getting here as an argument automatically

66
00:05:11.040 --> 00:05:18.100
but since we only have one direction, we can go right ahead and remove the item from our cart. For that

67
00:05:18.100 --> 00:05:19.570
in the cart provider,

68
00:05:19.600 --> 00:05:27.610
we first of all need to add a new method, remove item and the easiest way of getting rid of an item here

69
00:05:27.730 --> 00:05:35.690
is to simply receive the ID of the product it belongs to. So here, we expect our product

70
00:05:35.930 --> 00:05:40.280
ID and that is useful because we use that product ID as a key in our map

71
00:05:40.280 --> 00:05:43.880
if you remember, that's what we assign as a key in the map.

72
00:05:43.880 --> 00:05:51.490
And thankfully, on maps, we also have a remove method to which we pass a key and then the value for that

73
00:05:51.500 --> 00:05:55.670
key will be removed. Thereafter, we call notifyListeners and we're done,

74
00:05:55.670 --> 00:06:01.550
this is the easiest way of getting rid of an entry in a map.

75
00:06:01.550 --> 00:06:04.450
So that's what I want to call here in the cart item

76
00:06:04.520 --> 00:06:12.650
and for that, we need to tap into our cart container, into our provider and hence, we need to import the

77
00:06:12.650 --> 00:06:19.720
provider package in here from provider.dart, from the provider package

78
00:06:19.790 --> 00:06:29.860
and of course, import our cart model here from the providers folder. With that down here, we can setup

79
00:06:29.940 --> 00:06:41.120
provider of cart, pass in the context and then simply call remove item. Now where do we get the product

80
00:06:41.120 --> 00:06:48.570
ID from? We can simply expect it as an input to this cart item widget.

81
00:06:48.580 --> 00:06:55.750
So here, we can expect a product ID argument here, maybe as the second argument, doesn't matter

82
00:06:55.750 --> 00:07:00.640
and now in the place where you render the cart items, so in the cart screen, you also need to pass this as a

83
00:07:00.640 --> 00:07:01.760
second argument

84
00:07:01.870 --> 00:07:08.260
and there you get that from cart items and just as you have a values property to give you a list of

85
00:07:08.260 --> 00:07:15.640
values, you can always get a list of keys and then for that given index we're looking for,

86
00:07:15.760 --> 00:07:20.530
we simply pass in the key as a value to cart item.

87
00:07:23.880 --> 00:07:29.790
So with that, we pass the key for the item we're looking at into our cart item widget and that key is the

88
00:07:29.790 --> 00:07:31.040
product ID.

89
00:07:31.140 --> 00:07:37.470
So we get the product ID here now and with that, we can use the product ID down there.

90
00:07:37.470 --> 00:07:40.970
Now important, I don't really want to set up a listener to the cart here,

91
00:07:40.980 --> 00:07:48.270
so I'll set listen to false, I really just need access to the cart to dispatch my action here, listen

92
00:07:48.270 --> 00:07:52.830
false here on the of method, I don't want to set up a permanent listener.

93
00:07:55.750 --> 00:08:02.990
With that, if we go back to our application and we add a couple of items to the cart, we see them here

94
00:08:03.860 --> 00:08:11.430
and now watch the total up there when I swipe this cart item. You see, the total updated because now

95
00:08:11.430 --> 00:08:16.020
it was really removed from the cart which is also proven by the fact that if I go back and then I

96
00:08:16.020 --> 00:08:18.750
go back into the cart, it's still gone.

97
00:08:18.750 --> 00:08:25.320
So now we're really not just update this visually with the help of dismissible but also in our data with

98
00:08:25.320 --> 00:08:32.039
the help of provider of and our cart provider, our cart container and we're not listening here in the

99
00:08:32.039 --> 00:08:32.799
cart item

100
00:08:32.820 --> 00:08:37.830
but of course we're listening to changes in the cart, in the cart screen and therefore we rebuild the

101
00:08:37.830 --> 00:08:40.260
cart screen when our cart changes

102
00:08:40.260 --> 00:08:45.030
and that's exactly what I want to do because I want to rebuild the total and also my list here.

