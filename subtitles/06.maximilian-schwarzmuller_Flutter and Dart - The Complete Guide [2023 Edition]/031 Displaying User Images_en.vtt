WEBVTT
1
00:00:02.029 --> 00:00:05.330
So we want user images next to the chat messages.

2
00:00:05.510 --> 00:00:12.320
And to avoid that, we have to send thousands of requests to the user's collection for thousands of

3
00:00:12.320 --> 00:00:13.820
messages, potentially.

4
00:00:14.030 --> 00:00:23.720
I will also make sure to store a link or the URL to the image next to the message it belongs to.

5
00:00:23.810 --> 00:00:26.200
For the same reason I store the username there.

6
00:00:26.210 --> 00:00:33.020
Now of course, if you have an app where users are allowed to edit their name or their image, that

7
00:00:33.020 --> 00:00:39.200
might not be the best solution because you might have to update all those existing messages or you have

8
00:00:39.200 --> 00:00:44.360
to take a different route where you fetch the brand new data from the user's collection for every message.

9
00:00:44.360 --> 00:00:50.390
But here, where this updating functionality is not possible, this definitely is a great approach to

10
00:00:50.390 --> 00:00:52.820
minimise the amount of requests being sent.

11
00:00:53.030 --> 00:00:59.150
Hence it's in the new message widget where we send a new message where I now don't just want to store

12
00:00:59.150 --> 00:01:07.310
the username, but also let's say a user image field here in the document besides the text of the message.

13
00:01:07.340 --> 00:01:11.570
And here we want to take the well image URL of the user.

14
00:01:11.630 --> 00:01:16.460
Now the good thing is we are already fetching data from the user's collection here.

15
00:01:16.730 --> 00:01:23.570
That's where we get the username from so we can use that same user data to get access to the image URL

16
00:01:23.600 --> 00:01:30.890
because in the user's collection we have that image your URL field here so I can just access image your

17
00:01:30.920 --> 00:01:35.900
URL here to get access to that URL and store it on every message that's being sent.

18
00:01:37.010 --> 00:01:43.430
Now with that out of the way, here is the app running on my Android emulator.

19
00:01:43.430 --> 00:01:48.020
But here you again, see it running on my real iPhone and if I now type.

20
00:01:48.020 --> 00:01:49.190
Hello here.

21
00:01:49.890 --> 00:01:50.760
As a message.

22
00:01:50.760 --> 00:01:55.620
And I sent this you see it pop up on the left, too, which is how it should work.

23
00:01:55.620 --> 00:01:59.340
And that's now where I want to also show the image of the user.

24
00:01:59.370 --> 00:02:05.970
Now, if we quickly check Firebase and our collections here, if I reload this collections page, we

25
00:02:05.970 --> 00:02:09.300
hopefully see that on our message.

26
00:02:10.240 --> 00:02:11.830
In the chat collection.

27
00:02:11.830 --> 00:02:14.830
We also have the user.

28
00:02:15.670 --> 00:02:16.240
Image.

29
00:02:16.390 --> 00:02:17.680
You are all being stored.

30
00:02:17.680 --> 00:02:19.600
And that's not the case here.

31
00:02:23.560 --> 00:02:29.210
Simply because I didn't update my real device with the latest version of the app.

32
00:02:29.230 --> 00:02:30.280
Of course, my iPad.

33
00:02:30.280 --> 00:02:32.230
Let me quickly do that off screen.

34
00:02:33.110 --> 00:02:35.060
So now the latest version is running.

35
00:02:35.060 --> 00:02:36.770
Let me now try this again.

36
00:02:37.460 --> 00:02:38.300
Hello.

37
00:02:41.950 --> 00:02:45.220
So now here in this chat document, we see the user image.

38
00:02:45.220 --> 00:02:46.470
So this is not working.

39
00:02:46.480 --> 00:02:50.580
Now a link to the image is being stored side by side to every message.

40
00:02:50.590 --> 00:02:55.180
And with that, let's now output the image next to every chat message bubble to.

41
00:02:55.830 --> 00:03:00.150
Now for this, I'll first of all, create a new user also here on the Android account.

42
00:03:00.920 --> 00:03:06.020
A different user of course, with my dummy emulator image, which is good enough.

43
00:03:06.820 --> 00:03:10.420
And now we at least have two users that can communicate with each other.

44
00:03:10.450 --> 00:03:14.680
So now the goal is to show that user image next to the message bubble.

45
00:03:15.070 --> 00:03:18.390
Now we're storing the image as part of a message, which is great.

46
00:03:18.400 --> 00:03:23.860
That means we can pass that data to our message bubble constructor here in the messages widget.

47
00:03:23.890 --> 00:03:26.200
We're already passing in the username.

48
00:03:26.200 --> 00:03:32.680
Now we can just pass in the image u URL or as a name ID here.

49
00:03:32.680 --> 00:03:35.370
User image actually user image.

50
00:03:35.380 --> 00:03:40.300
Now we can just pass this to message bubble and in message bubble, we now of course need to accept

51
00:03:40.300 --> 00:03:41.700
this extra parameter.

52
00:03:41.710 --> 00:03:45.010
So here in message bubble in its constructor.

53
00:03:47.010 --> 00:03:48.060
After a username.

54
00:03:48.060 --> 00:03:53.760
Maybe I also want to store the user image, but of course now we need a property of that name and that

55
00:03:53.760 --> 00:03:57.270
should be of type string because the image will just be a new URL.

56
00:03:57.270 --> 00:04:01.260
In the end it's a new URL which is a string to that image.

57
00:04:02.170 --> 00:04:05.170
So now we're able to receive that image here in the message bubble.

58
00:04:05.350 --> 00:04:08.320
And by the way, we can clear this import here now that I see it.

59
00:04:08.560 --> 00:04:12.010
And with that image received, we can now output it.

60
00:04:13.700 --> 00:04:17.269
Now how you want to output it is, of course, totally up to you.

61
00:04:17.970 --> 00:04:26.550
I will go for an approach where I will wrap this entire row into another widget, into a stack widget.

62
00:04:26.760 --> 00:04:33.840
And the stack widget takes some children which are organized in an array and which will be laid out

63
00:04:33.840 --> 00:04:35.590
on top of each other, basically.

64
00:04:35.610 --> 00:04:43.290
So if I just wrap this row here now like this, not much should change.

65
00:04:43.290 --> 00:04:49.350
We still see our message as it looked before, but now we can add a new widget which will be on top

66
00:04:49.350 --> 00:04:51.780
of the row in a three dimensional way.

67
00:04:51.780 --> 00:04:58.740
I mean, so here we could now add a circle avatar again to have a rounded image.

68
00:04:58.860 --> 00:05:04.830
And if I add this here, you see this is now on top or actually below it, because the stack is organized

69
00:05:04.830 --> 00:05:10.530
such that the further down you are in this children array, the more on top this will be visually.

70
00:05:10.530 --> 00:05:18.630
So we can simply move Circle Avatar down after row here and now it will be on top of the row.

71
00:05:18.810 --> 00:05:22.710
And of course, that is roughly what I want, but not exactly.

72
00:05:22.710 --> 00:05:26.130
I want to have it a bit more outside of this chat bubble.

73
00:05:26.340 --> 00:05:31.470
And to achieve this, we can use a number of widget with which I wrap the circle avatar.

74
00:05:31.500 --> 00:05:33.510
And that's the positioned widget.

75
00:05:33.540 --> 00:05:39.600
The Positioned widget is designed with the stack widget in mind, which means the positioned widget

76
00:05:39.600 --> 00:05:46.050
helps us to position our widgets, the child of positioned to be precise, inside of a stack.

77
00:05:46.650 --> 00:05:50.550
Now, I'm not talking about the three dimensional positioning for Dad.

78
00:05:50.550 --> 00:05:54.570
You just have to order your elements correctly in the stack children.

79
00:05:54.750 --> 00:05:58.350
But I'm talking about the two dimensional positioning.

80
00:05:58.350 --> 00:06:03.930
So for example, that these circles should be further above the message bubble or further on the right.

81
00:06:04.620 --> 00:06:08.130
And for that position has a couple of helpful arguments.

82
00:06:08.700 --> 00:06:09.450
Precisely.

83
00:06:09.450 --> 00:06:11.850
It has bottom left, right and top.

84
00:06:11.850 --> 00:06:18.510
And for example, here, if I set top to zero and right to zero, it will move the circle avatar in

85
00:06:18.510 --> 00:06:20.010
the top right corner.

86
00:06:20.220 --> 00:06:26.430
Now, of course, here we see that it takes the entire width of that widget, which is the entire row.

87
00:06:27.660 --> 00:06:35.490
And not just the width of this container in which I have my column with the chat messages.

88
00:06:35.790 --> 00:06:39.390
Now, there are various ways of fixing that.

89
00:06:39.840 --> 00:06:47.640
And one of the easiest is that we simply set left instead of right, but not to zero, but for example,

90
00:06:47.640 --> 00:06:49.050
to 140.

91
00:06:49.050 --> 00:06:52.620
And now we move the circle 140 pixels from the left.

92
00:06:53.040 --> 00:06:54.480
And this doesn't look too bad.

93
00:06:54.660 --> 00:06:59.690
I think it should be a bit further above the message bubble, though.

94
00:06:59.700 --> 00:07:04.290
And for that, we can actually even set a negative top here, for example, 30.

95
00:07:04.560 --> 00:07:07.380
Now, what you'll notice is that this now is clipped.

96
00:07:07.560 --> 00:07:12.760
And to avoid that this happens, you go to your stack widget.

97
00:07:12.780 --> 00:07:17.670
And there you can set overflow to overflow dot visible.

98
00:07:18.900 --> 00:07:22.020
So the overflow argument on the stack widget.

99
00:07:22.050 --> 00:07:24.270
Now you can fully see that.

100
00:07:25.300 --> 00:07:29.890
Now it's a bit too much above the chat bubble, so maybe minus ten works out better.

101
00:07:29.890 --> 00:07:32.770
And also a little bit further to the left would be nice.

102
00:07:32.770 --> 00:07:39.280
So maybe 120 and you can play around with that to position it in the way you want to position it.

103
00:07:39.310 --> 00:07:41.430
I think this doesn't look too shabby, though.

104
00:07:41.440 --> 00:07:47.830
And with that, of course, the goal is to show the image and not just some colorful background for

105
00:07:47.830 --> 00:07:47.980
that.

106
00:07:47.980 --> 00:07:53.560
Again, we can set the background image which you already learned wants an image provider.

107
00:07:53.950 --> 00:07:58.670
Now, we previously saw the image provider for a file image.

108
00:07:58.690 --> 00:08:01.000
Now we basically have a network image.

109
00:08:01.000 --> 00:08:04.090
We have a u URL to an image on some server.

110
00:08:04.090 --> 00:08:08.470
And for that there is a dedicated provider and that's the network image provider.

111
00:08:08.470 --> 00:08:14.140
And this provider network image simply wants a link, a URL to that image.

112
00:08:14.500 --> 00:08:16.420
And here I will simply use.

113
00:08:18.170 --> 00:08:21.860
The user image property which holds that image.

114
00:08:23.010 --> 00:08:26.340
So here we have user image.

115
00:08:29.120 --> 00:08:35.059
And with this, you see the image here for this user who posted this image.

116
00:08:36.480 --> 00:08:38.730
And that's exactly the look I want.

117
00:08:38.940 --> 00:08:44.159
And if I, for example, answer here, you also see it on my post.

118
00:08:44.190 --> 00:08:49.710
Now, of course, it's positioned correctly because we always position it basically the top right corner.

119
00:08:49.740 --> 00:08:56.010
Now, that is the positioning we want for our messages, but not for our own messages, because our

120
00:08:56.010 --> 00:08:59.130
own messages show up on the right, not on the left.

121
00:08:59.670 --> 00:09:05.310
Now for that, we got that useful is my property, which is a boolean that basically tells us whether

122
00:09:05.310 --> 00:09:07.140
this is a post by us or not.

123
00:09:07.380 --> 00:09:10.110
And we can use this to fine tune the positioning.

124
00:09:10.350 --> 00:09:12.840
The top positioning is always fine.

125
00:09:12.840 --> 00:09:20.250
But if this is us, if this is me, I don't want to have left 120 instead, then I probably don't want

126
00:09:20.250 --> 00:09:26.010
to position this from the left side at all so we can set this to NULL here.

127
00:09:29.300 --> 00:09:32.750
Now, of course, I want to position it, though, but from the right side.

128
00:09:33.140 --> 00:09:34.400
So therefore we can add.

129
00:09:34.430 --> 00:09:35.180
Right.

130
00:09:35.180 --> 00:09:43.430
And if this is me, I want to use 120 from the right here and now otherwise, which is the not me case.

131
00:09:43.910 --> 00:09:49.910
So now you see it's positioned correctly both, if that's me, as well as when it's the average user.

132
00:09:50.120 --> 00:09:58.010
So now we can type here and send more messages and ultimately add more and more messages with our extra

133
00:09:58.010 --> 00:09:58.640
image.

134
00:09:59.000 --> 00:10:02.690
Now, you'll also see a little glitch here when we have multiple messages.

135
00:10:02.690 --> 00:10:07.100
So maybe we should have a little bit more spacing between our messages.

136
00:10:07.100 --> 00:10:12.740
And that's something we can also configure here in the message bubble because there we get this container.

137
00:10:13.780 --> 00:10:18.160
And we set up some margin around.

138
00:10:18.810 --> 00:10:19.920
Our message is already.

139
00:10:19.920 --> 00:10:22.050
Maybe we should use ten here.

140
00:10:22.680 --> 00:10:27.840
Now there is more spacing available, maybe actually 16 on the vertical axis.

141
00:10:27.840 --> 00:10:30.270
And now this looks way better.

142
00:10:31.600 --> 00:10:35.950
And you can also see, of course, that this is scrollable in case it should exceed the boundaries of

143
00:10:35.950 --> 00:10:36.730
our screen.

144
00:10:37.270 --> 00:10:38.680
So that looks good.

145
00:10:38.680 --> 00:10:42.940
Now we're rendering the messages here with our user image.

146
00:10:45.260 --> 00:10:46.400
Because of the margin.

147
00:10:46.400 --> 00:10:49.820
Actually, the image is now not positioned perfectly anymore.

148
00:10:49.850 --> 00:10:53.030
Let me fix this by setting top to zero again.

149
00:10:53.120 --> 00:10:53.540
Yeah.

150
00:10:53.540 --> 00:10:54.670
So this now looks great.

151
00:10:54.680 --> 00:10:57.140
This is now the final state I want to have here.

152
00:10:57.260 --> 00:11:01.370
With that, we got the authentication, we got the chat, we get the images.

153
00:11:01.370 --> 00:11:06.110
Now, of course, there's just one thing missing and that would be the push notifications.

