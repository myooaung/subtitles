1
00:00:02,220 --> 00:00:04,620
So let's make sure we can use the token everywhere and for that,

2
00:00:04,620 --> 00:00:11,220
let's go to the products.dart file first of all where we already have the token added and in there, we're

3
00:00:11,220 --> 00:00:13,070
using it for fetching the products,

4
00:00:13,110 --> 00:00:17,590
now of course we also need it for adding a product and we add it in exactly the same way,

5
00:00:17,610 --> 00:00:25,110
?auth at the end and then here, point at authToken with string interpolation and this is

6
00:00:25,110 --> 00:00:26,280
no longer a const but

7
00:00:26,290 --> 00:00:32,299
now a runtime constant value with final. Now of course, we also need it for updating a product

8
00:00:32,330 --> 00:00:41,600
so in there, let's add auth and set that equal to the authToken as well and also here for deleting a product,

9
00:00:41,630 --> 00:00:46,710
so here also auth equal to auth token, like this.

10
00:00:46,710 --> 00:00:51,450
Now there's one place that's a bit more tricky and that's inside of a single product. There we also send

11
00:00:51,450 --> 00:00:57,690
a HTTP request to update the favorite status of that product,

12
00:00:57,810 --> 00:01:02,280
we also need the token in here. Now for a single product,

13
00:01:02,310 --> 00:01:09,750
that means that we also need to kind of get the token right. Now you could also add the token

14
00:01:09,750 --> 00:01:15,930
here as a property and then simply pass the token in from inside products which is where you do create

15
00:01:15,930 --> 00:01:22,650
a single product here and there of course, you could also forward your authToken if you wanted that

16
00:01:22,650 --> 00:01:23,500
in product

17
00:01:23,790 --> 00:01:25,820
but there also is another route you could take

18
00:01:25,860 --> 00:01:32,490
and either way is ok in my opinion. You can go to the place where you in the end trigger that HTTP request

19
00:01:32,550 --> 00:01:35,850
and that's from inside the 

20
00:01:35,850 --> 00:01:44,090
product_item.dart file here, there we have the toggle favorite status call and in there, we could also say that

21
00:01:44,090 --> 00:01:46,960
this method simply accepts the token,

22
00:01:47,360 --> 00:01:52,610
then we just have to make sure that we have the token available here and we can of course make it available

23
00:01:52,610 --> 00:01:56,030
here in this widget if we want to.

24
00:01:56,030 --> 00:01:57,930
So both ways are OK,

25
00:01:57,950 --> 00:02:02,720
I just want to show this alternative. In product.dart in the providers folder,

26
00:02:02,720 --> 00:02:08,699
we can say that we expect the token as an argument to toggle favorite status, so that here we can also

27
00:02:08,750 --> 00:02:17,440
add it with string interpolation, that token we're getting here and now in product_item where we need

28
00:02:17,440 --> 00:02:26,820
that token, we can get our AuthData or whatever you want to name it with provider of and then point at

29
00:02:26,820 --> 00:02:31,260
the auth class because of course we are providing that here in our main.dart file,

30
00:02:31,260 --> 00:02:31,590
right,

31
00:02:31,590 --> 00:02:38,940
so of course we can get access to that, for that we just need to import the auth provider class here

32
00:02:39,360 --> 00:02:44,780
into this file, like this and now here we forward the context.

33
00:02:44,790 --> 00:02:50,990
I don't want to set up a listener, I just want to get the token one time and now with AuthData available

34
00:02:51,000 --> 00:02:56,590
here, of course we can forward AuthData.token and that's it,

35
00:02:56,590 --> 00:02:59,760
this also now passes the token and we can use it here,

36
00:02:59,760 --> 00:03:02,450
so this is one possible approach.

37
00:03:02,590 --> 00:03:08,430
Now we always need the token for our orders, not in the cart but in the orders and there, I will use the

38
00:03:08,430 --> 00:03:10,860
same approach as my products.

39
00:03:10,940 --> 00:03:18,730
So besides having my orders here, I want to have my authToken in here which actually should be final

40
00:03:19,700 --> 00:03:27,950
and for that, I expect to get that through the constructor and I also want to set my orders here though

41
00:03:28,700 --> 00:03:33,450
and with that, we can go to the main.dart file where we provide the orders and use the same approach as

42
00:03:33,470 --> 00:03:42,200
for products, instead of this provider here, we use the ChangeNotifierProxyProvider like that, instead

43
00:03:42,200 --> 00:03:49,670
of having value here, we have a builder. We need to set the generic types here for this constructor and

44
00:03:49,670 --> 00:03:55,700
that is our dependency and then the value we're about to provide, the dependencies of and we're about

45
00:03:55,700 --> 00:03:57,170
to provide orders,

46
00:03:57,230 --> 00:04:02,580
so we need to set this and the builder now is a function that receives a context, receives our auth

47
00:04:02,610 --> 00:04:10,040
object and our previous orders object and returns a new orders object here and in that new orders object,

48
00:04:10,040 --> 00:04:17,060
we want to pass that token, like this here and our previous orders,

49
00:04:17,060 --> 00:04:26,690
so here we'll have the previous orders, check if it's equal to null in which case I want

50
00:04:26,690 --> 00:04:35,600
to pass in an empty array, empty list and otherwise if it's not null, we can access the orders here and

51
00:04:35,600 --> 00:04:42,870
initialize the orders in the newly built orders object with our old orders. With that, we should actually

52
00:04:42,870 --> 00:04:46,020
be able to send all requests in authenticated state.

53
00:04:46,020 --> 00:04:52,230
So let's do a full refresh and login again and we'll of course also work on making sure that we don't

54
00:04:52,260 --> 00:04:53,750
always have to login.

55
00:04:53,990 --> 00:04:59,230
So let's login here and let's try favoriting this, seems to work,

56
00:04:59,230 --> 00:05:02,480
let's reload that page, still there.

57
00:05:02,500 --> 00:05:06,850
Let's place an order, order now seems to work,

58
00:05:06,850 --> 00:05:12,090
let's go to orders and here, I get an error actually.

59
00:05:12,130 --> 00:05:13,240
Let's quickly check,

60
00:05:13,240 --> 00:05:14,500
yes,

61
00:05:14,590 --> 00:05:15,460
makes sense,

62
00:05:15,460 --> 00:05:18,040
getting the token in orders is nice,

63
00:05:18,040 --> 00:05:20,390
you also have to use it for the requests.

64
00:05:20,440 --> 00:05:24,970
So here for fetch and select orders, we want to use auth and then use our authToken

65
00:05:24,970 --> 00:05:26,730
and of course this therefore is a final

66
00:05:26,730 --> 00:05:28,000
URL not a const

67
00:05:28,000 --> 00:05:30,790
URL and do the same for adding an order

68
00:05:30,820 --> 00:05:31,710
and by the way, there

69
00:05:31,720 --> 00:05:36,730
I didn't get an error when we tried to add the order in the cart because we haven't implemented error

70
00:05:36,730 --> 00:05:39,050
handling simply to save time,

71
00:05:39,070 --> 00:05:44,380
obviously that was a good proof for why you might want to do that if you're building a real application

72
00:05:44,620 --> 00:05:48,670
to make sure that you actually show an error if something goes wrong.

73
00:05:48,700 --> 00:05:52,530
Now however, I do use my authToken for orders too,

74
00:05:52,540 --> 00:05:54,000
so let's retry that all,

75
00:05:54,000 --> 00:06:03,480
let's do a full refresh here and then log back in here with our data, like this

76
00:06:06,310 --> 00:06:12,080
and now actually add this again to the cart, place that order

77
00:06:12,340 --> 00:06:14,710
and now go to the orders screen

78
00:06:14,980 --> 00:06:17,830
and now here are the orders, here's our latest order.

79
00:06:17,890 --> 00:06:25,760
Let's also try to manage our products, add a new product here. So we add some book for example,

80
00:06:25,760 --> 00:06:27,350
29.99,

81
00:06:27,500 --> 00:06:28,810
this is a book

82
00:06:28,970 --> 00:06:32,690
and then here, use the same image I use before

83
00:06:37,330 --> 00:06:48,230
and then save this. So this seemed to work, let's also check it on Firebase to be super safe.

84
00:06:48,270 --> 00:06:51,730
There, if we have a look at our data, in products,

85
00:06:51,730 --> 00:06:55,870
there is a third element and that is the element I just added.

86
00:06:55,870 --> 00:06:58,780
Let's now also edit it to see whether that also works,

87
00:06:58,780 --> 00:07:05,280
maybe the title and the price and add a couple of exclamation marks here, that's looking good.

88
00:07:05,300 --> 00:07:10,570
Let's go to the shop real quick and view it there as well,

89
00:07:10,590 --> 00:07:13,410
I see the price, I see the exclamation marks down there.

90
00:07:13,500 --> 00:07:14,600
Back to managing,

91
00:07:14,610 --> 00:07:19,530
let's delete it and this also worked, it's gone here.

92
00:07:19,560 --> 00:07:26,730
So this all works. Now missing pieces are that we automatically logged the user in when there is a valid

93
00:07:26,730 --> 00:07:31,500
token and the user just closed the app or reloaded the app somehow,

94
00:07:31,770 --> 00:07:36,960
we also want to make sure that the user is able to logout and of course, we also want to make sure

95
00:07:37,290 --> 00:07:44,490
that we scope orders and favorite status to a user, so that if you hit favorite, you don't change the

96
00:07:44,520 --> 00:07:51,150
overall configuration of that product but instead you just change it for your user, for this product

97
00:07:51,480 --> 00:07:58,710
and that you also have your own orders instead of having a generic global pool of orders which everyone

98
00:07:58,710 --> 00:08:00,860
can access, that makes no sense.

99
00:08:00,870 --> 00:08:07,950
In addition, it also makes sense that we add our userId here to the products so that when we try to

100
00:08:07,950 --> 00:08:12,650
manage the products here, we actually only load products for our ID,

101
00:08:12,810 --> 00:08:18,960
so for our user and not all products, all products should only be loaded here on the shop page.

102
00:08:19,020 --> 00:08:25,980
So the next steps will be on scoping data to our user, making sure it belongs to our user before we then

103
00:08:25,980 --> 00:08:29,130
work on the auto login and logout functionality.

