WEBVTT
1
00:00:02.290 --> 00:00:10.660
The image upload is working our images here, but now I want easy to use u r l which we can store here

2
00:00:10.660 --> 00:00:16.450
in our users collection and which we can then use in our message bubble to show the image of a user

3
00:00:16.450 --> 00:00:17.650
who sent a message.

4
00:00:18.070 --> 00:00:22.060
Now, getting such a URL is thankfully very, very easy.

5
00:00:22.330 --> 00:00:26.140
Once we uploaded this, we can use our ref here again.

6
00:00:26.140 --> 00:00:32.619
And on the ref you can call, get download URL and this returns a future or it gives you a future that

7
00:00:32.619 --> 00:00:40.230
will actually retrieve a long lift u URL which is usable by anyone who has that URL to view that image.

8
00:00:40.240 --> 00:00:44.830
And that's great because that means that in the future we don't have to use the Firebase Storage package

9
00:00:44.830 --> 00:00:49.020
to scan through all our files and find the file for a specific user.

10
00:00:49.030 --> 00:00:53.050
Instead, we can just store a direct link to the image for every user.

11
00:00:53.500 --> 00:00:55.240
So let's await this.

12
00:00:56.050 --> 00:01:03.160
We should get the u url here in the end, once this resolved so that you are less than what I want to

13
00:01:03.160 --> 00:01:04.060
store here.

14
00:01:04.910 --> 00:01:09.770
In my users collection, so I stored a file with Firebase Storage.

15
00:01:09.770 --> 00:01:14.330
But in my extra user data, I store a pointer, a URL to that file.

16
00:01:15.300 --> 00:01:17.430
So image you are all here.

17
00:01:17.820 --> 00:01:22.290
Can just be that your URL which we're getting with get download URL.

18
00:01:23.510 --> 00:01:25.430
And this hopefully does the trick.

19
00:01:25.580 --> 00:01:31.640
If we save this and we try this one more time, if I log out and we create a brand new account.

20
00:01:38.560 --> 00:01:39.760
With some valid data.

21
00:01:39.760 --> 00:01:41.710
Here we add an image.

22
00:01:44.990 --> 00:01:46.310
And click sign up.

23
00:01:48.310 --> 00:01:49.930
The sign up process.

24
00:01:52.970 --> 00:01:55.160
Is active and eventually finishes.

25
00:01:55.400 --> 00:01:58.640
And if we now go back to the Firebase Web console.

26
00:01:59.390 --> 00:02:00.680
To the database.

27
00:02:02.380 --> 00:02:03.940
And to users.

28
00:02:04.640 --> 00:02:11.090
You see that I have this image URL for the user I just added and if we grab that URL and enter it in

29
00:02:11.090 --> 00:02:12.980
the browser, it loads this image.

30
00:02:12.980 --> 00:02:19.070
So that's a direct URL to that image, which is great because that means we cannot always use that URL

31
00:02:19.100 --> 00:02:20.750
to load and preview this image.

32
00:02:20.750 --> 00:02:26.810
We don't have to use the Firebase Storage SDK to kind of scan all files.

33
00:02:28.830 --> 00:02:34.500
Now, one thing you might also notice, though, is that on storage you see that the files are relatively

34
00:02:34.500 --> 00:02:37.830
large here, around 200 kilobytes.

35
00:02:37.830 --> 00:02:42.420
And if you're using a high resolution camera, that might be even bigger.

36
00:02:42.600 --> 00:02:48.200
And that's way too big for an image, which I'll just show here next to the chat message.

37
00:02:48.210 --> 00:02:50.620
I don't need such a huge image here.

38
00:02:50.640 --> 00:02:57.450
So in order to save storage and in order to make sure that this all loads and uploads fast, I actually

39
00:02:57.450 --> 00:03:03.240
will go back to the user image picker where we call pick image on the image picker package.

40
00:03:03.240 --> 00:03:09.000
And besides the source, we can for example, also set the image quality here and set us to 50.

41
00:03:09.090 --> 00:03:15.090
It should be a value between zero and 100 and I'll set it to 50, which is a way worse quality but should

42
00:03:15.090 --> 00:03:16.350
still be good enough.

43
00:03:16.560 --> 00:03:22.230
We can also set a max width and height here to ensure that this is not too large.

44
00:03:22.230 --> 00:03:26.580
And since I only need a tiny image, I'll set the max width to 150.

45
00:03:26.580 --> 00:03:32.700
So this should not actually give us a much smaller image, which is way faster to upload and way smaller

46
00:03:32.700 --> 00:03:33.630
to store.

47
00:03:33.660 --> 00:03:38.280
So if we give that a try, we log out and create yet another new user.

48
00:03:46.980 --> 00:03:47.640
You're.

49
00:03:48.570 --> 00:03:49.800
Let's take an image.

50
00:03:51.570 --> 00:03:54.210
If I now sign up, you see, that is faster.

51
00:03:54.240 --> 00:03:56.530
It doesn't take as long to upload.

52
00:03:56.550 --> 00:03:57.690
And we also see it here.

53
00:03:57.690 --> 00:04:01.080
If I reload, the other images have around 200 kilobytes.

54
00:04:01.080 --> 00:04:03.540
This image has just three kilobytes.

55
00:04:04.410 --> 00:04:08.220
And of course it has a worse quality, but that should be fine.

56
00:04:08.220 --> 00:04:13.680
And we can always find you this later, but we certainly don't need the high resolution, super large

57
00:04:13.680 --> 00:04:16.990
image if we're just going to use a tiny image here.

58
00:04:17.010 --> 00:04:18.959
Now, that's the next point, though.

59
00:04:18.959 --> 00:04:21.660
I want to make sure we do display the image here.

60
00:04:21.660 --> 00:04:26.160
And for that, I will actually clear all my images I currently have here.

61
00:04:26.940 --> 00:04:28.710
So that we start from scratch.

62
00:04:28.920 --> 00:04:32.010
And it will also clear all the database data.

63
00:04:34.450 --> 00:04:38.590
So everything here in chat by deleting the entire chat collection.

64
00:04:38.650 --> 00:04:42.130
Everything in chats by deleting this collection.

65
00:04:43.140 --> 00:04:47.040
And everything in users by deleting this collection.

66
00:04:47.220 --> 00:04:51.900
And of course, that means we'll also delete all users here under authentication.

67
00:04:51.900 --> 00:04:54.370
And I'm simply doing this to start from scratch.

68
00:04:54.390 --> 00:05:00.660
Now that we added all those core functionalities when it comes to creating users, and I also then want

69
00:05:00.660 --> 00:05:08.370
to test this on iOS on a real iOS device before we thereafter continue to show the image preview and

70
00:05:08.370 --> 00:05:10.950
then all the work on the push notifications.

