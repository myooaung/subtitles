WEBVTT
1
00:00:02.520 --> 00:00:05.010
So that's it for this module.

2
00:00:05.010 --> 00:00:09.820
We added a bunch of custom widgets composed of built-in widgets Flutter ships us

3
00:00:09.990 --> 00:00:15.990
and there, you learned about many new widgets and how to configure them, like the text field widgets, containers,

4
00:00:16.000 --> 00:00:18.180
expanded, different buttons,

5
00:00:18.180 --> 00:00:25.380
the ListTile widget here, the ListView widget and hopefully, all these pieces together form a bigger

6
00:00:25.380 --> 00:00:30.430
picture that allows you to use these widgets in your own apps.

7
00:00:30.510 --> 00:00:36.570
Now as I also emphasized throughout this module, it's normal that you have so many widgets and configuration

8
00:00:36.570 --> 00:00:42.450
options that you sometimes forget about a widget or that you're not sure how to use a widget and in

9
00:00:42.450 --> 00:00:49.250
such cases, the official docs and there, the widgets catalog is really a crucial tool to work with.

10
00:00:49.260 --> 00:00:58.250
In addition, also be aware that in the official docs here, once you are in the API reference here where

11
00:00:58.250 --> 00:01:03.320
you get to when you choose a widget from the widget catalog, you can always search the docs up there

12
00:01:03.590 --> 00:01:08.960
and for example search for ListTile to find more information about that, on how to configure that

13
00:01:09.170 --> 00:01:16.730
and also find demos, examples and more. So really use these docs to get the most out of this course

14
00:01:16.730 --> 00:01:22.310
and most importantly, to get the most out of Flutter because that is what Flutter is all about and what

15
00:01:22.310 --> 00:01:24.130
this module was all about.

16
00:01:24.170 --> 00:01:29.090
You learned more about the Flutter fundamentals, about how to compose user interfaces from built-in

17
00:01:29.090 --> 00:01:34.770
and custom widgets and that custom widgets are also composed from built-in and other custom widgets.

18
00:01:34.850 --> 00:01:39.830
You learned how to style and configure widgets with their arguments and as I just mentioned, to use

19
00:01:39.830 --> 00:01:45.890
the docs and the IDE support you're getting by hitting control space and by hovering over things and that

20
00:01:45.890 --> 00:01:48.620
really should get you very far.

21
00:01:48.680 --> 00:01:54.020
Now when we talk about styling and configuring widgets, it's important that there is a broad variety

22
00:01:54.020 --> 00:02:00.620
of how you can configure and style widgets. For some widgets, you need an extra constructor, other widgets

23
00:02:00.620 --> 00:02:07.720
are configured with enums or by instantiating some class with its main constructor

24
00:02:07.790 --> 00:02:14.210
and there again, the docs and the IDE help you understand what you can pass for which argument. And often

25
00:02:14.210 --> 00:02:17.910
there's more than one widget or more than one option that gets the job done

26
00:02:17.960 --> 00:02:22.040
and that's also fine and perfectly normal in Flutter.

27
00:02:22.040 --> 00:02:27.530
We also had a look at theming, which is the idea of defining that global theme in your MaterialApp

28
00:02:27.560 --> 00:02:33.830
widget which you then can tap into from anywhere in your app with theme of context, which allows you

29
00:02:33.830 --> 00:02:39.470
to define your global colours or your main text theme once and then use it anywhere in the app where

30
00:02:39.470 --> 00:02:40.460
you want to use it

31
00:02:40.580 --> 00:02:42.620
so that when you ever change that main color,

32
00:02:42.650 --> 00:02:47.990
it changes everywhere. And the built-in widgets, a lot of the built-in widgets all the use these theme

33
00:02:47.990 --> 00:02:54.340
settings automatically, so you get a nice styling there automatically without any extra setup.

34
00:02:54.410 --> 00:02:57.960
Last but not least, we added some business logic to this app as well.

35
00:02:58.010 --> 00:02:59.180
We added methods,

36
00:02:59.180 --> 00:03:00.350
we manage data,

37
00:03:00.350 --> 00:03:06.350
we used stateful widgets and there you learned that lifting state up is an important concept that

38
00:03:06.350 --> 00:03:12.450
you need to manage state on the common denominator widget which holds all the other widgets that need

39
00:03:12.470 --> 00:03:16.690
that data or that trigger a change that should change that data,

40
00:03:16.790 --> 00:03:22.040
like in the example with our main widget and then the transaction list and the new transaction widget

41
00:03:22.710 --> 00:03:28.130
and you also learned how to parse function references and data around so that every part in your widget

42
00:03:28.130 --> 00:03:35.510
tree, every widget there, can do exactly the things it needs to do, be that outputting content or registering

43
00:03:35.510 --> 00:03:36.630
events.

44
00:03:36.740 --> 00:03:42.200
Last but not least, you also learned how to adjust the user interface to your logic, for example showing

45
00:03:42.200 --> 00:03:48.260
that bottom modal sheet to have a nicer way of presenting that editing area to your users which

46
00:03:48.320 --> 00:03:52.130
allows the users to add new transactions in our example app here.

