1
00:00:02,230 --> 00:00:04,080
Now of course we could deploy any app,

2
00:00:04,090 --> 00:00:10,120
I picked these great places app where we worked with the native device features, camera, maps and so on

3
00:00:10,450 --> 00:00:12,620
to show you these different steps

4
00:00:12,710 --> 00:00:15,750
and let's start with the testing and code optimization step.

5
00:00:15,760 --> 00:00:22,870
Now testing simply means that you should run your app on as many devices as possible, so you should make

6
00:00:22,870 --> 00:00:30,220
sure that you test your app on different device screens, on older devices, smaller devices, bigger devices,

7
00:00:30,400 --> 00:00:36,800
of course on Android and iOS devices if you want to target both platforms and as much as you can, on

8
00:00:36,800 --> 00:00:40,650
real devices to really see if your app works correctly,

9
00:00:40,660 --> 00:00:46,840
if there are any bugs, if it looks good, if it's fast enough. Regarding the performance, you can always

10
00:00:46,840 --> 00:00:52,450
go back to be Flutter internals module in this course where I explain how Flutter rebuilds and what

11
00:00:52,450 --> 00:00:54,760
you can do to optimize your app,

12
00:00:54,760 --> 00:01:01,510
for example split your bigger widgets which are rebuilding into smaller widgets, so that smaller parts

13
00:01:01,510 --> 00:01:09,670
of your app rebuild or use const constructors, for example in places where you have const values like

14
00:01:09,820 --> 00:01:13,260
this text widget here which should effectively never rebuild,

15
00:01:13,300 --> 00:01:19,450
you can add const in front of this to tell Flutter that when this widget rebuilds, this widget, this text

16
00:01:19,450 --> 00:01:24,680
widget doesn't need to rebuild because it will never change, things like that.

17
00:01:24,700 --> 00:01:31,750
Now you will always find certain improvements, optimizations and maybe also some bugs after you deployed,

18
00:01:32,140 --> 00:01:33,760
after you published your app

19
00:01:33,880 --> 00:01:36,160
and that is absolutely normal.

20
00:01:36,160 --> 00:01:42,010
Of course you should really rule out as many bugs as possible but for performance optimizations like

21
00:01:42,010 --> 00:01:48,550
this one here, if you tested your app on a broad variety of devices, also on older devices and it worked

22
00:01:48,550 --> 00:01:51,460
fine everywhere, then this is not the end of the world

23
00:01:51,610 --> 00:01:56,830
and you can always and you should of course update your already published app, publish a new version

24
00:01:56,980 --> 00:01:59,810
and your users will automatically download and use it.

25
00:01:59,980 --> 00:02:06,070
So highest priority really is that you ship an error free application and thereafter, performance

26
00:02:06,640 --> 00:02:11,570
improvements or other tiny improvements, you will always find new ways of improving your app

27
00:02:11,620 --> 00:02:13,380
and that's a normal part of development.

28
00:02:13,690 --> 00:02:16,370
So don't worry about overlooking some step,

29
00:02:16,420 --> 00:02:19,120
testing is the important thing, with your tested app,

30
00:02:19,140 --> 00:02:21,700
you can always publish updated versions thereafter.

