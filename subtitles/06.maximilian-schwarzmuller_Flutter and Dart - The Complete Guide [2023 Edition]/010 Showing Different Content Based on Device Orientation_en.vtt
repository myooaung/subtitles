WEBVTT
1
00:00:02.250 --> 00:00:06.890
Now to only show that switch and the either/or setup on landscape mode,

2
00:00:06.900 --> 00:00:12.750
we need to find out which mode we're in and then change what we're rendering down there based on that

3
00:00:12.750 --> 00:00:14.410
mode. For that

4
00:00:14.520 --> 00:00:20.250
here in the main.dart file in this build method, we can find out which mode we're in whenever build is

5
00:00:20.310 --> 00:00:23.620
rerun with the help of media query

6
00:00:23.700 --> 00:00:24.720
again.

7
00:00:24.720 --> 00:00:30.690
There, you can get access to the context and then instead of accessing the size, there is an orientation

8
00:00:32.509 --> 00:00:34.210
property.

9
00:00:34.230 --> 00:00:40.830
Now we can now check whether that value here is equal to and now there's an enum orientation, written like

10
00:00:40.830 --> 00:00:47.720
this, which is available thanks to that material.dart import you have up there and that enum either

11
00:00:48.350 --> 00:00:53.030
is 0 or 1, it has two values, landscape and portrait.

12
00:00:53.060 --> 00:00:59.510
So here we can check if that's equal to landscape and store the result in a variable which is final because

13
00:00:59.510 --> 00:01:02.790
for each build run, we will never reassign it.

14
00:01:02.810 --> 00:01:09.290
So here, this is a final local variable inside of that build method which I'll name isLandscape and

15
00:01:09.290 --> 00:01:15.350
you can name it whatever you want. Now isLandscape will be a boolean in the end, which is true if we

16
00:01:15.350 --> 00:01:16.610
are in landscape mode,

17
00:01:16.610 --> 00:01:22.790
thanks to this comparison or false otherwise and now we can use that isLandscape variable which is

18
00:01:22.790 --> 00:01:31.800
again recalculated for every build run, so whenever Flutter rebuilds the UI, we can use that in our user interface.

19
00:01:31.930 --> 00:01:39.620
So there, we use it for example to render that row with the switch or not.

20
00:01:39.630 --> 00:01:46.200
So here we can check if isLandscape is true and only if it is true, render that row and otherwise, don't

21
00:01:46.200 --> 00:01:47.580
render anything.

22
00:01:47.720 --> 00:01:53.520
Now actually, there is a little shortcut instead of or a nicer version of that, instead of using that

23
00:01:53.520 --> 00:01:59.700
ternary expression, you can use an if statement in here, in that list and that's a relatively new feature

24
00:01:59.730 --> 00:02:05.640
which is supported since Dart 2.2.2 which allows you to add an if statement here in that list

25
00:02:06.240 --> 00:02:11.940
and there we can check if isLandscape and then after the if statement, you will have what should be

26
00:02:12.090 --> 00:02:17.730
added to the list if that is true. If that is not true, this element will simply be left out in the list

27
00:02:17.760 --> 00:02:22.440
and there will be no element added in this place of the overall list.

28
00:02:22.620 --> 00:02:26.220
So if landscape is true, if isLandscape is true, we'll add a row,

29
00:02:26.220 --> 00:02:31.200
otherwise we'll not add anything here which is exactly what I want. In this column, I only want to have

30
00:02:31.200 --> 00:02:36.150
that row with the switch if we are in landscape mode, otherwise instead of that switch, nothing should be

31
00:02:36.150 --> 00:02:42.980
added. Now for down here where we have that ternary expression, we can now use something similar. I only

32
00:02:42.980 --> 00:02:51.490
have that either/or case if we are in landscape mode, otherwise I render both. For that to save some

33
00:02:51.490 --> 00:02:57.070
code and don't duplicate too much code, I'll take that container with the transaction list which actually

34
00:02:57.070 --> 00:03:01.760
never changes that widget configuration and store that in a variable as well.

35
00:03:02.140 --> 00:03:10.340
So here, I'll add another variable which is my txListWidget and there I simply store my container

36
00:03:10.340 --> 00:03:16.160
with the transaction list and I do that so that I can use it down there and if I then use it again down

37
00:03:16.160 --> 00:03:20.840
there in another place, I only referred to that variable instead of copy and pasting all that code

38
00:03:21.050 --> 00:03:26.000
and then if we would change anything about that widget or the way you use it here, you would have to

39
00:03:26.000 --> 00:03:31.490
change it in multiple places. Now it's stored in a variable and you can always change it in that variable

40
00:03:31.490 --> 00:03:37.460
here if you want to. So it's a little bit of code refactoring but now, we still have the same logic as

41
00:03:37.460 --> 00:03:44.510
before, show chart is checked and then we show either that container or that list. The alternative is that

42
00:03:44.510 --> 00:03:49.820
we want to show both. Hence I'll add another if check here and check

43
00:03:49.820 --> 00:03:51.650
if we're not in landscape mode,

44
00:03:51.680 --> 00:04:00.880
so if we are in portrait mode and now, again without curly braces, for this in array or in list if statement

45
00:04:00.880 --> 00:04:02.350
you don't use curly braces,

46
00:04:02.410 --> 00:04:10.120
so if we're not in landscape mode, I want to add this container here for the chart but with a height

47
00:04:10.150 --> 00:04:16.630
of .3 because then and that's simply another element I add conditionally,

48
00:04:16.720 --> 00:04:19.440
if we're still not in landscape mode,

49
00:04:22.620 --> 00:04:30.730
then I'll add my txListWidget. So I check if we're not landscape mode, in which case I add my smaller chart

50
00:04:30.730 --> 00:04:31.480
container

51
00:04:31.480 --> 00:04:36.610
and if we're also not in the landscape mode, I also add that list widget. And now for this condition

52
00:04:36.610 --> 00:04:40.660
down there, I'll check if we are in landscape mode

53
00:04:40.660 --> 00:04:47.620
and only then, I will re-run this ternary expression and then show either my chart container

54
00:04:47.710 --> 00:04:53.970
or that list widget. So that entire either/or code here is only executed if we are in landscape mode,

55
00:04:54.100 --> 00:04:59.200
if we're not in landscape mode, we render the two individual widgets above each other and not either/or.

56
00:05:00.700 --> 00:05:06.350
And now if we reload this application onto our device,

57
00:05:06.350 --> 00:05:10.140
we see the switch here on landscape mode

58
00:05:13.980 --> 00:05:19.410
but if I go to portrait mode, it disappears and you see we have both here, above each other but no switch.

59
00:05:19.620 --> 00:05:22.140
If I go back to landscape mode and this rotates,

60
00:05:22.140 --> 00:05:24.420
I am again back to the switch.

61
00:05:24.420 --> 00:05:30.660
So this is now how we can also render different content based on the orientation if you need that behavior

62
00:05:30.840 --> 00:05:31.380
in your app.

