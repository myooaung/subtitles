1
00:00:02,110 --> 00:00:06,700
Let's make sure we can deliver push notifications to an Android application.

2
00:00:06,700 --> 00:00:12,070
And for that we got all the steps required here in this official documentation of this package and it

3
00:00:12,070 --> 00:00:18,490
is worth following along with that documentation in case some tiny step changed since I recorded this

4
00:00:18,490 --> 00:00:19,090
video.

5
00:00:19,510 --> 00:00:26,260
So the first goal is to create an Android project in the Firebase console and essentially link that

6
00:00:26,260 --> 00:00:28,180
project to your Flutter app.

7
00:00:28,180 --> 00:00:33,340
Now, we already did this at the very beginning of this module, so if you just came in here for the

8
00:00:33,340 --> 00:00:39,700
push notifications, at least go back to the beginning of the module and check out the Firebase SDK

9
00:00:39,700 --> 00:00:43,960
setup steps there to see how to link Firebase to a Flutter project.

10
00:00:44,410 --> 00:00:46,270
So we're already done with step one.

11
00:00:46,270 --> 00:00:49,840
Therefore, we also completed parts of the next steps.

12
00:00:49,840 --> 00:00:52,720
But let's verify that everything is set up correctly there.

13
00:00:53,020 --> 00:00:58,330
For example, in our Android Build Gradle file, we should have these two dependencies.

14
00:00:58,480 --> 00:00:59,410
So let's go there.

15
00:00:59,410 --> 00:01:02,920
Let's go to the Android folder and then the build gradle file.

16
00:01:03,640 --> 00:01:10,600
And they are make sure that you have that Google services dependency, which we have, and make sure

17
00:01:10,600 --> 00:01:14,430
that you also have that tools build gradle dependency there.

18
00:01:14,440 --> 00:01:17,230
And I also do have that there and you should have both.

19
00:01:17,230 --> 00:01:18,760
But again, verify it.

20
00:01:19,780 --> 00:01:26,080
Next, make sure you apply this plugin here in your Android app Build Gradle file.

21
00:01:26,080 --> 00:01:32,110
So in the app folder there is another build gradle file and in there make sure that at the bottom of

22
00:01:32,110 --> 00:01:34,000
the file you have this line.

23
00:01:37,070 --> 00:01:39,830
Now I don't have it at the bottom, but actually here at the top.

24
00:01:39,830 --> 00:01:44,140
So to avoid any issues, let me just move that to the bottom of that file.

25
00:01:44,150 --> 00:01:46,880
But with that, we should be fine here as well.

26
00:01:47,870 --> 00:01:51,590
Now with that, we are done with the basic setup.

27
00:01:51,590 --> 00:01:58,670
And in case you're wondering, when this ID step between our app and the push notification server will

28
00:01:58,670 --> 00:01:59,230
happen.

29
00:01:59,240 --> 00:02:01,400
Well, that happened with those steps.

30
00:02:01,400 --> 00:02:09,020
We linked our Firebase Project to our Android Flutter project, and that is this ID that ensures that

31
00:02:09,020 --> 00:02:15,890
only you, the developer of the app who has access to both the app and your Firebase project, is authorized

32
00:02:15,890 --> 00:02:17,450
to send push notifications.

33
00:02:17,450 --> 00:02:20,510
So that is this ID step for Android.

34
00:02:20,870 --> 00:02:24,680
Now also one important node to test push notifications.

35
00:02:24,680 --> 00:02:28,340
You need a device that has Google play services installed.

36
00:02:28,430 --> 00:02:35,120
So you should ensure that this is the case on your real device but also on your emulator.

37
00:02:35,800 --> 00:02:42,910
And to verify this on your emulator you can bring up android studio and there is simply open that AVD

38
00:02:42,910 --> 00:02:43,930
manager.

39
00:02:46,700 --> 00:02:53,570
And here, make sure that the emulator you're running has this play store icon.

40
00:02:54,340 --> 00:02:55,060
With that.

41
00:02:55,060 --> 00:02:56,200
You should be fine.

42
00:02:57,020 --> 00:02:57,770
So.

43
00:02:58,570 --> 00:02:59,560
With that.

44
00:02:59,560 --> 00:03:00,820
We're done with all of that.

45
00:03:00,820 --> 00:03:05,260
But there is one optional but recommended step which we all will complete here.

46
00:03:05,620 --> 00:03:11,590
And this is a step that ensures that when we later receive a push notification and we tap on it when

47
00:03:11,590 --> 00:03:18,310
our app is not opened, the app will open up and we are able to handle this notification inside of the

48
00:03:18,310 --> 00:03:18,610
app.

49
00:03:18,610 --> 00:03:24,550
If you skip step four, you will be able to get notifications, but you won't be able to tap on them

50
00:03:24,550 --> 00:03:28,300
and then do something in your app based on the notification.

51
00:03:28,480 --> 00:03:36,430
So in order to be able to do that, make sure that you add this intent filter within the activity tag

52
00:03:36,430 --> 00:03:38,170
of your Android app.

53
00:03:38,180 --> 00:03:41,320
Source Main Android Manifest XML file.

54
00:03:43,050 --> 00:03:47,940
So let's go to Android app source main Android manifest.

55
00:03:48,180 --> 00:03:53,190
And there there is this activity node and we already got one in ten filter here.

56
00:03:53,220 --> 00:04:00,360
Make sure you also add this upper intent filter which you just copied from that article I was just on.

57
00:04:00,390 --> 00:04:07,080
This ensures that incoming messages can be handled by tapping on them and by then doing something in

58
00:04:07,080 --> 00:04:07,770
your app.

59
00:04:08,790 --> 00:04:10,500
So this should be added here.

60
00:04:12,950 --> 00:04:15,190
And with that you're done.

61
00:04:15,200 --> 00:04:20,720
Now that background message is part is something different, not related to the push notifications we're

62
00:04:20,720 --> 00:04:25,820
going to handle and therefore we can skip all those background messages steps.

63
00:04:25,820 --> 00:04:29,120
Now if that is something you need in your app, you can of course add this.

64
00:04:29,120 --> 00:04:31,520
But again here we won't need this.

65
00:04:31,520 --> 00:04:34,430
So therefore we're done with the Android setup.

66
00:04:34,790 --> 00:04:41,000
Now before we dive into that iOS setup, let's actually check whether it works and therefore we can

67
00:04:41,000 --> 00:04:43,100
scroll down to sending messages.

68
00:04:43,100 --> 00:04:46,160
We'll work on receiving and doing something with messages later.

69
00:04:46,160 --> 00:04:51,050
For now, let's scroll down to sending messages and follow the steps there.

70
00:04:51,050 --> 00:04:55,550
And thankfully, we can send a dummy message from inside the Firebase console.

71
00:04:55,790 --> 00:05:00,620
So here in your Firebase Project, which you created at the beginning of the module and where we have

72
00:05:00,620 --> 00:05:04,760
the database and everything, we can scroll down to cloud messaging.

73
00:05:05,060 --> 00:05:07,370
And if you click on cloud messaging.

74
00:05:09,470 --> 00:05:11,960
You can click on Send your first message.

75
00:05:12,570 --> 00:05:16,820
Now here you can enter a title like Test and some text.

76
00:05:16,830 --> 00:05:17,940
Does this work?

77
00:05:18,330 --> 00:05:21,510
You can include an image, but we're not going to do this here.

78
00:05:21,930 --> 00:05:24,330
And a name which we're also not going to do here.

79
00:05:25,910 --> 00:05:27,800
And instead we can click on next here.

80
00:05:27,920 --> 00:05:30,590
Now we need to specify a target.

81
00:05:32,460 --> 00:05:37,710
And here we're going to target a user if app and then pick our Android app here.

82
00:05:38,850 --> 00:05:40,050
And click on next.

83
00:05:41,200 --> 00:05:43,040
Make sure to send it now.

84
00:05:43,060 --> 00:05:45,940
You could also schedule it, but I want to send it now.

85
00:05:48,560 --> 00:05:50,420
We can skip this step here.

86
00:05:50,990 --> 00:05:54,770
And now on the last step, there is one thing we can set.

87
00:05:54,800 --> 00:05:56,990
We see that here in the official docs, too.

88
00:05:57,020 --> 00:06:03,650
We want to set a click action field under a custom data to set this here.

89
00:06:03,650 --> 00:06:05,990
This identifier has the click action.

90
00:06:05,990 --> 00:06:13,430
That is what will later connect to this content filter to basically allow Android to make the link between

91
00:06:13,430 --> 00:06:18,350
this notification and our app and allow us to handle this inside of the app.

92
00:06:19,350 --> 00:06:19,920
For the moment.

93
00:06:19,920 --> 00:06:22,290
I'll send a message without that though.

94
00:06:22,800 --> 00:06:26,040
And therefore, let's click review here.

95
00:06:27,100 --> 00:06:28,810
And then publish.

96
00:06:29,670 --> 00:06:34,610
Just one extra note about this cloud messaging console, which we're seeing here.

97
00:06:34,620 --> 00:06:36,990
This is not just for testing.

98
00:06:36,990 --> 00:06:44,280
This is actually a tool you can use if you want to send out push notifications to the users of your

99
00:06:44,280 --> 00:06:50,730
application, for example, for marketing or to share an important information with them.

100
00:06:50,730 --> 00:06:57,660
So this is your channel to your users, so to say, to send out push notifications to them.

101
00:06:57,660 --> 00:07:03,780
Now, of course, you can also automate this, for example, to send a push notification if a user sends

102
00:07:03,780 --> 00:07:04,920
a new chat message.

103
00:07:04,920 --> 00:07:11,820
But that's something we'll do later in the course whenever you want to test or you have the scenario

104
00:07:11,820 --> 00:07:18,270
that you as the app owner and developer want to send out push notifications to your users.

105
00:07:18,270 --> 00:07:25,470
This cloud messaging tool here, this cloud messaging console here in this Firebase Project, is the

106
00:07:25,470 --> 00:07:28,530
tool you could use to send those messages.

107
00:07:30,180 --> 00:07:36,630
Now, you might not be seeing any notification here on your emulator, but you should see some error

108
00:07:36,630 --> 00:07:37,320
here.

109
00:07:37,350 --> 00:07:40,860
Error while delivering the message service, intent not found.

110
00:07:41,250 --> 00:07:46,950
So let's actually quit any running processes here and restart your app because we added a new package

111
00:07:46,950 --> 00:07:52,080
and we even changed something in the Android config and you should absolutely restart your app thereafter.

112
00:07:52,410 --> 00:07:53,970
So make sure you do that.

113
00:07:53,970 --> 00:07:58,950
You restart your application, you rebuild and restart your application, I should say.

114
00:07:59,710 --> 00:08:03,970
And once that's finished, let's go back and hear on your previous message.

115
00:08:03,970 --> 00:08:09,520
You can click on those three dots, click on duplicate notification to just send it again, click on

116
00:08:09,520 --> 00:08:11,440
review and publish.

117
00:08:14,330 --> 00:08:16,790
And now you'll see a different message here.

118
00:08:16,850 --> 00:08:19,580
Fatal failed to find callback.

119
00:08:19,940 --> 00:08:21,530
So that's now a different message.

120
00:08:21,530 --> 00:08:26,330
And this in the end proves that something seemed to happen on our device.

121
00:08:27,490 --> 00:08:31,990
And please note that this is the case if the app is open in the foreground.

122
00:08:32,289 --> 00:08:37,270
Now, let's see what happens if we kill this application with the task manager.

123
00:08:37,600 --> 00:08:41,440
And therefore, of course, this running process here finishes as well.

124
00:08:41,710 --> 00:08:47,680
And we duplicate this again, duplicate review and publish it.

125
00:08:50,550 --> 00:08:55,980
And now you will see here is your push notification arriving on this device.

126
00:08:55,980 --> 00:08:59,160
You now have it here with your app icon here.

127
00:08:59,160 --> 00:09:02,670
And that's just a flutter icon because that is the default app icon.

128
00:09:02,940 --> 00:09:06,600
Now, if we tap this, we're taken to our application.

129
00:09:06,600 --> 00:09:07,560
So that works.

130
00:09:07,560 --> 00:09:12,690
But right now we'll not be able to handle the notification in there, will not be able to do something

131
00:09:12,690 --> 00:09:13,680
with it here.

132
00:09:13,680 --> 00:09:15,180
So that's the missing part.

133
00:09:15,180 --> 00:09:16,830
That's what we'll take care about next.

134
00:09:16,830 --> 00:09:22,770
And of course, we'll then also make sure that we handle notifications when we get them whilst the app

135
00:09:22,770 --> 00:09:27,990
is running because that is where we previously got this fatal fail to find callback error.

136
00:09:27,990 --> 00:09:32,670
But generally sending messages to Android works now.

137
00:09:32,790 --> 00:09:39,000
Now before we integrate all the remaining steps and we set up some code to handle messages, let's make

138
00:09:39,000 --> 00:09:42,180
sure we also set up everything for iOS.

