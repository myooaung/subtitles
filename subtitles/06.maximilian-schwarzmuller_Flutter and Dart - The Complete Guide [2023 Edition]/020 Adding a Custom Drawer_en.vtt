WEBVTT
1
00:00:02.360 --> 00:00:07.740
Now before we fill the favorites tab with life, which means that we'll have to write some logic for this

2
00:00:07.790 --> 00:00:08.600
app,

3
00:00:08.600 --> 00:00:15.080
I want to focus on adding a drawer which is the other major navigation feature Flutter gives us which

4
00:00:15.080 --> 00:00:17.750
we haven't had a look at yet.

5
00:00:17.750 --> 00:00:24.830
So let's add a drawer and let's add it here on the TabsScreen in this appBar here next to your favorite

6
00:00:24.830 --> 00:00:27.740
or categories depending on which page we loaded,

7
00:00:27.740 --> 00:00:31.320
I want to have this hamburger icon which opens up a drawer.

8
00:00:31.400 --> 00:00:34.570
Now thankfully, Flutter makes adding such a feature

9
00:00:34.610 --> 00:00:44.030
really simple. You add a drawer by simply going to your scaffold, not to the appBar but to the scaffold

10
00:00:44.030 --> 00:00:51.380
and there you can add a drawer argument. Now the drawer argument typically takes a drawer widget which is

11
00:00:51.380 --> 00:00:57.340
a widget built into Flutter, which automatically gives you a drawer with a nice backdrop, backdrop.

12
00:00:57.340 --> 00:01:04.440
is that thing that greys out the background behind the drawer and allows you to add content to that drawer.

13
00:01:04.459 --> 00:01:11.310
Now on that drawer, you can add any content you want, any widgets you want, for example to start really simple,

14
00:01:11.390 --> 00:01:15.720
I'll just add a child widget here where I say the drawer.

15
00:01:15.750 --> 00:01:19.830
Now let's see what this does if I add this simple drawer, just one line of code added,

16
00:01:19.840 --> 00:01:26.500
this line of code here gives us this hamburger icon, automatically managed by Flutter and if we

17
00:01:26.500 --> 00:01:30.810
tap it, this drawer slides open, you see the nice backdrop,

18
00:01:30.830 --> 00:01:36.450
this grey background which you can tap to close the drawer and you see behind the status bar at the top,

19
00:01:36.520 --> 00:01:41.790
the drawer text here, you can also close the drawer by swiping.

20
00:01:41.790 --> 00:01:45.390
So this is what you get out of the box with this drawer widget,

21
00:01:45.390 --> 00:01:51.190
now of course typically you would not just add a boring text here but a more meaningful content.

22
00:01:51.240 --> 00:01:56.760
Now the content I do want to add here are essentially two buttons, two links

23
00:01:56.760 --> 00:02:01.540
you could say that take us to different pages in our app.

24
00:02:01.560 --> 00:02:08.160
One should always take us back here to this TabsScreen, so to our meals section and the other link

25
00:02:08.340 --> 00:02:10.830
should take us to the filters

26
00:02:10.830 --> 00:02:15.180
we can set, to filter for vegan or vegetarian food.

27
00:02:15.180 --> 00:02:18.010
So these are the two links I want to have here,

28
00:02:18.060 --> 00:02:22.090
so let's add them to this drawer now and since we'll add quite some content,

29
00:02:22.200 --> 00:02:27.570
I'll not add that here but I'll actually create a new widget because you might remember splitting your

30
00:02:27.570 --> 00:02:30.680
app into widgets is never a bad idea.

31
00:02:30.690 --> 00:02:36.660
So in the widgets folder, I'll add a new widget and I'll name it main_drawer, the name as always

32
00:02:36.660 --> 00:02:39.950
is up to you and that will be a stateless widget here.

33
00:02:40.170 --> 00:02:47.520
In that stateless widget which I'll also name main drawer, I want to handle or I want to compose the content

34
00:02:47.520 --> 00:02:49.530
for this drawer.

35
00:02:49.530 --> 00:02:56.040
So that means that I of course return a drawer widget here and now the child of the drawer here as I mentioned

36
00:02:56.040 --> 00:03:00.780
can be anything you want, you can build any content here into your drawer,

37
00:03:00.780 --> 00:03:07.230
I want to have a column in here because I want to have a couple of items on top of each other from top to

38
00:03:07.230 --> 00:03:15.750
bottom inside of that drawer. So let's add the children here and as always, you can of course style this

39
00:03:15.750 --> 00:03:17.890
drawer however you want.

40
00:03:18.020 --> 00:03:23.600
I want to have a little container at the beginning which has a height of 120 pixels

41
00:03:23.630 --> 00:03:29.840
and a width of double infinity, which means it takes all the space, all the width it can get, which has

42
00:03:29.840 --> 00:03:34.560
some padding, maybe of EdgeInsets.all 20

43
00:03:34.560 --> 00:03:39.470
and again, I mentioned this over and over again but these are always values you can play around with and

44
00:03:39.470 --> 00:03:43.230
you can style the way you want.

45
00:03:43.280 --> 00:03:45.160
I'll add an alignment,

46
00:03:45.170 --> 00:03:50.720
we have never done this before in the course, this controls how the child of the container is aligned

47
00:03:50.780 --> 00:03:52.730
inside of the container

48
00:03:52.730 --> 00:04:01.610
and here I want to align the content with Alignment.centerLeft to have it in the center but moved

49
00:04:01.670 --> 00:04:03.710
all the way to the left, so vertically

50
00:04:03.770 --> 00:04:05.560
it's in the center, horizontally

51
00:04:05.600 --> 00:04:08.080
it's on the left. Now,

52
00:04:08.120 --> 00:04:10.890
that's my container, in the container,

53
00:04:10.940 --> 00:04:16.010
I want to have a child which should be a text widget where I say cooking up and of course you could

54
00:04:16.399 --> 00:04:23.810
put any text in there, it's just some fancy text for our application here and I'll style this text a

55
00:04:23.810 --> 00:04:33.120
little bit by providing my custom text style here, where I will set the font weight to let's say font weight

56
00:04:33.450 --> 00:04:34.700
w900,

57
00:04:34.740 --> 00:04:37.090
this picks a weight of 900.

58
00:04:37.140 --> 00:04:43.110
If you inspect your options here on the font weight, you'll see that there you have shortcuts like bold

59
00:04:43.110 --> 00:04:49.820
and normal but you can also specify a concrete weight, like weight 900 and if you remember in the

60
00:04:49.820 --> 00:04:56.940
pubspec.yaml file, we set up a weight 900 for Raleway which is our default font for the app, for this very

61
00:04:57.060 --> 00:04:59.640
thick Raleway font.

62
00:04:59.640 --> 00:05:03.150
So I'm using that font style in the end here,

63
00:05:03.150 --> 00:05:07.560
Raleway is the default font for the app so I don't need to set the font family here,

64
00:05:07.560 --> 00:05:08.990
that's not required.

65
00:05:10.270 --> 00:05:11.610
I will set the font size

66
00:05:11.620 --> 00:05:17.200
however let's say to 30 and a colour to theme of context

67
00:05:17.380 --> 00:05:24.950
primary colour and one other thing which I forgot up there, I want to add a background colour to the overall

68
00:05:24.950 --> 00:05:34.550
container where I use my accent color. We can do this with the color argument on the container.

69
00:05:34.550 --> 00:05:39.690
By the way, an alternative always is decoration with BoxDecoration where you then set the color,

70
00:05:39.690 --> 00:05:42.000
this does the same as the color argument.

71
00:05:42.200 --> 00:05:48.740
If you just want to set the color, there is no need to use this more complicated decoration approach,

72
00:05:48.740 --> 00:05:52.850
only do that if you also want to set some other decoration like a border.

73
00:05:52.850 --> 00:05:56.810
If you do use decoration however, you have to set the color

74
00:05:56.810 --> 00:06:02.900
also through decoration and not through the color key, otherwise you would get an error by Flutter.

75
00:06:02.930 --> 00:06:07.230
Here, I only want to set the color though so there is no need to use the decoration.

76
00:06:07.250 --> 00:06:11.390
With that, we have no links in our drawer yet,

77
00:06:11.420 --> 00:06:15.950
so below that container which basically creates a heading at the top of the drawer,

78
00:06:16.250 --> 00:06:18.980
let's now work on the concrete links, on the buttons

79
00:06:18.980 --> 00:06:20.330
we can click.

80
00:06:20.510 --> 00:06:25.910
First of all, I'll add a SizedBox with a height of 20 to add some spacing between our

81
00:06:25.910 --> 00:06:28.690
header here and now the concrete content

82
00:06:29.300 --> 00:06:32.510
and here you can of course again add whatever you want,

83
00:06:32.510 --> 00:06:36.070
what looks particularly good in drawers in my opinion

84
00:06:36.110 --> 00:06:37.240
are list tiles.

85
00:06:37.760 --> 00:06:44.990
So I'll add a ListTile here and on that ListTile, I'll set an icon at the beginning with the leading argument,

86
00:06:45.500 --> 00:06:50.390
with icons restaurant which I think fits the meal theme pretty well,

87
00:06:52.190 --> 00:06:55.640
where I also will give this icon a size of 26,

88
00:06:55.640 --> 00:07:02.600
this basically works like a font size to make it a little bit bigger. And then add a title on the list

89
00:07:02.630 --> 00:07:10.130
tile which holds a text widget where I say meals and where I of course also want to add a style.

90
00:07:10.430 --> 00:07:21.360
So my own text style here, where in my case here I want to set the font family to RobotoCondensed

91
00:07:21.780 --> 00:07:22.650
like this,

92
00:07:22.680 --> 00:07:31.780
no typo there hopefully. Set the font size to 24, a little bit smaller than the icon and the font way

93
00:07:31.780 --> 00:07:33.900
to FontWeight.bold.

94
00:07:34.060 --> 00:07:41.470
Now as a side note, w700 would be the same like FontWeight.bold, so if you want that default bold style

95
00:07:41.470 --> 00:07:45.170
however, you can of course just use that.

96
00:07:45.180 --> 00:07:46.640
Now very important now,

97
00:07:46.770 --> 00:07:53.670
besides leading and title, I now also want to register taps and conveniently the ListTile has an onTap

98
00:07:53.970 --> 00:08:00.710
argument where we can register a function that should be triggered when we tap here and in here, I soon

99
00:08:00.720 --> 00:08:03.300
want to do something to go to a different page.

100
00:08:05.130 --> 00:08:13.650
Now let me copy that ListTile here and create another one, here not with the restaurant icon but

101
00:08:13.920 --> 00:08:22.450
with the settings icon which is this gear icon here and then here, I'll say filters or settings or whatever

102
00:08:22.450 --> 00:08:23.340
you want to use,

103
00:08:23.350 --> 00:08:25.870
same text style and therefore yes,

104
00:08:25.870 --> 00:08:29.050
you could of course also use a builder method here,

105
00:08:29.050 --> 00:08:30.980
why don't we do it since we learned it.

106
00:08:31.030 --> 00:08:38.059
Let's cut the ListTile and add a new method here in the main drawer which returns a widget, build

107
00:08:38.289 --> 00:08:47.780
ListTile which then simply returns our ListTile here

108
00:08:47.920 --> 00:08:54.610
and of course, we have a dynamic title so that should be passed in as an argument and the icon

109
00:08:57.360 --> 00:09:03.930
data should also be passed in, what you pass to an icon here, what's returned by icons is of type icon

110
00:09:03.930 --> 00:09:11.020
data, as you can see if you hover over icon, then you see that it needs icon data for its icon,

111
00:09:11.220 --> 00:09:16.550
so that's what I also expect to get here because that's different for every ListTile.

112
00:09:16.650 --> 00:09:23.460
And then here, instead of saying meals, I can use the title argument we're getting and instead of using

113
00:09:23.490 --> 00:09:25.920
icons restaurant, I use the icon 

114
00:09:25.950 --> 00:09:34.260
we're getting here. With that, we can use the buildListTile method down there and pass in meals here

115
00:09:34.260 --> 00:09:41.460
for the first ListTile and then icons.restaurant which gives us such icon data and then do

116
00:09:41.460 --> 00:09:51.540
the same here for the second ListTile, delete all of that and instead call buildListTile where we

117
00:09:51.540 --> 00:09:52.020
have

118
00:09:54.450 --> 00:09:57.870
filters and use icons settings.

119
00:09:58.080 --> 00:09:59.880
Now also important,

120
00:09:59.910 --> 00:10:05.040
I did mention this before but it is important to keep in mind, instead of using a builder method, you

121
00:10:05.040 --> 00:10:10.290
could of course also put that into a separate widget which you use and it might even be a widget which

122
00:10:10.290 --> 00:10:12.470
you only stored in that same file.

123
00:10:12.480 --> 00:10:18.030
Normally, we have one file per widget but if you have a widget which you only use in conjunction with

124
00:10:18.030 --> 00:10:22.380
this widget here, you could definitely store that extra widget in the same file.

125
00:10:22.530 --> 00:10:26.470
So using a widget instead of a builder method would be totally fine,

126
00:10:26.490 --> 00:10:28.580
generally there is no difference,

127
00:10:28.650 --> 00:10:34.800
that would change a little bit if in that widget you could potentially create here, you would maybe change

128
00:10:34.800 --> 00:10:41.340
some state or use the theme, so something which could trigger the build method of the surrounding

129
00:10:41.430 --> 00:10:47.070
widget, then putting this into a separate widget would be good because then only this widgets build method

130
00:10:47.070 --> 00:10:50.980
would be triggered and not this overall build method. Since

131
00:10:51.210 --> 00:10:54.740
here however we have nothing that could trigger the build method,

132
00:10:54.810 --> 00:10:59.070
we can also use a builder function. So that's just a tiny thing

133
00:10:59.100 --> 00:11:05.180
you could keep in mind if you wanted to optimize your app. For example because I'm just talking about

134
00:11:05.180 --> 00:11:12.420
it, in the MealDetailScreen widget, there buildSectionTitle uses theme of and therefore it could

135
00:11:12.420 --> 00:11:15.120
be an idea to put this into separate widget,

136
00:11:15.120 --> 00:11:20.190
again as I said maybe store it in the same file so that only that widget's build method would be triggered

137
00:11:20.430 --> 00:11:21.810
if the theme changes.

138
00:11:21.840 --> 00:11:27.000
Now it's of course important to keep in mind that in our app however, the theme will never change,

139
00:11:27.000 --> 00:11:31.150
so for this app that wouldn't matter, it wouldn't make a difference

140
00:11:31.260 --> 00:11:37.020
and besides that, we're also using the theme here in our main build method anyways so that would be triggered

141
00:11:37.050 --> 00:11:41.650
anyways. So it could be outsourced but it wouldn't make a difference here

142
00:11:41.880 --> 00:11:46.560
but let's go back to our drawer now, to our drawer widget.

143
00:11:46.710 --> 00:11:48.420
We have our buildListTile method,

144
00:11:48.450 --> 00:11:50.230
we're building the list tiles here,

145
00:11:50.250 --> 00:11:54.340
now I'd say it's of course time to also see something on the screen.

146
00:11:54.540 --> 00:12:01.440
And for that, let's use our main drawer here in the TabsScreen on that drawer argument in the scaffold.

147
00:12:01.500 --> 00:12:07.380
So here instead of creating a new drawer, I'll use main drawer, the custom widget we just worked on

148
00:12:07.590 --> 00:12:15.570
and of course for that to be available here, we need to import it with that import syntax, go up one level,

149
00:12:15.570 --> 00:12:21.270
go into the widgets folder and then import main_drawer.dart. With that, we can assign the main drawer

150
00:12:21.270 --> 00:12:27.690
here and now if we go back to our app, we open the drawer, we should see this custom drawer which in my

151
00:12:27.690 --> 00:12:33.270
opinion looks quite nice and we can tap these items but for now, of course nothing's happening there.

152
00:12:33.270 --> 00:12:35.550
Let's change that in the next lectures.

