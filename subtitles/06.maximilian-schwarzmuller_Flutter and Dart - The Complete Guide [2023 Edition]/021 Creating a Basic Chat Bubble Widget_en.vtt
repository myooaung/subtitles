WEBVTT
1
00:00:02.210 --> 00:00:04.500
So we got this chat screen going.

2
00:00:04.520 --> 00:00:07.990
But of course, the chat messages don't look that exciting.

3
00:00:08.000 --> 00:00:10.040
So time to work on those.

4
00:00:10.490 --> 00:00:18.050
We get the message to start file where we render just text as messages and I will simply add a new widget

5
00:00:18.050 --> 00:00:18.920
file here.

6
00:00:19.100 --> 00:00:25.070
Message Bubble Start to render such a chat message bubble in there.

7
00:00:27.590 --> 00:00:30.940
Now message bubble can just be a stateless widget.

8
00:00:30.950 --> 00:00:38.090
It doesn't manage any internal state, it just outputs data and I'll name this message bubble and of

9
00:00:38.090 --> 00:00:44.510
course as always import material to dart from the flutter package so that we can use all those flutter

10
00:00:44.510 --> 00:00:45.590
components.

11
00:00:45.920 --> 00:00:52.940
Now, the idea here is simple here I want to render or output return a more beautiful chat message which

12
00:00:52.940 --> 00:00:55.850
looks nicer than just some boring text.

13
00:00:56.660 --> 00:01:03.020
And to achieve this, we can indeed return a container here because a container is a pretty versatile

14
00:01:03.020 --> 00:01:07.790
component, which we can stall quite a bit and we add decoration to the container.

15
00:01:07.820 --> 00:01:13.760
Now this takes a box decoration object, which we can create with the box decoration constructor function,

16
00:01:14.000 --> 00:01:16.280
and here we can configure a bunch of things.

17
00:01:16.280 --> 00:01:22.880
For example, we can set a color and use, let's say, our accent color here as the base background

18
00:01:22.880 --> 00:01:23.450
color.

19
00:01:23.930 --> 00:01:31.760
We can also set up a border radius to define some rounded corners and here we can then use border radius

20
00:01:31.760 --> 00:01:36.560
dot circular to set a specific border radius on all corners.

21
00:01:37.500 --> 00:01:44.390
Now we can also define a fixed width, not instead of decoration though, but directly in the container,

22
00:01:44.400 --> 00:01:51.960
for example, of 140, so that our message is always contained in a box of this width.

23
00:01:52.830 --> 00:02:00.510
We can also add some padding here and use etch insets symmetric maybe to have different padding to left

24
00:02:00.510 --> 00:02:04.350
and right and top and bottom and for padding to top and bottom.

25
00:02:04.350 --> 00:02:09.060
So for vertical padding, I'll set up heading of ten and for left and right, I want to have a little

26
00:02:09.060 --> 00:02:09.870
bit more space.

27
00:02:09.870 --> 00:02:12.540
So I'll set the horizontal padding to 16.

28
00:02:12.540 --> 00:02:17.670
And of course, as always, you can play around with these values and find the style you like most.

29
00:02:18.180 --> 00:02:23.490
Now also want to add some margin so that there is some space between the different messages.

30
00:02:23.700 --> 00:02:29.940
And here again, I'll use edge insets symmetric to have different spacing to top and bottom and for

31
00:02:29.940 --> 00:02:33.150
left and right and for top and bottom spacing.

32
00:02:33.150 --> 00:02:34.770
I'll use four and four.

33
00:02:34.770 --> 00:02:37.290
Left and right spacing, I'll use eight.

34
00:02:39.300 --> 00:02:45.480
Now, last but not least, inside of that container, I want to have a child and that can be a text

35
00:02:45.480 --> 00:02:49.920
widget here, which should now hold that actual message.

36
00:02:49.950 --> 00:02:56.520
Of course, not hardcoded like this, but received from outside as an input to message bubble.

37
00:02:56.940 --> 00:03:04.050
So therefore, here I'll define a property which is of kind string, which will be our message and that

38
00:03:04.050 --> 00:03:05.520
should be received from outside.

39
00:03:05.520 --> 00:03:11.580
So let's define the message bubble constructor function here and make sure that the first argument we

40
00:03:11.580 --> 00:03:14.670
receive is bound to that message property.

41
00:03:15.030 --> 00:03:17.730
And now that message property will hold the message.

42
00:03:17.760 --> 00:03:19.620
We can output it here.

43
00:03:21.600 --> 00:03:29.100
Now maybe we also want to style this text, so I'll set the style argument on the text widget and set

44
00:03:29.100 --> 00:03:33.870
it to a text style object where you can style whatever you want.

45
00:03:33.900 --> 00:03:42.060
I will just style the color and make sure that we can see this because the box has the accent color

46
00:03:42.060 --> 00:03:43.140
as a background.

47
00:03:43.290 --> 00:03:50.070
Because of that here, I actually want to set the text color to accent text theme.

48
00:03:51.900 --> 00:03:59.400
Dot title, dot color, and that should be a color that stands out from the exit color background.

49
00:04:01.480 --> 00:04:03.280
So that's my message bubble.

50
00:04:03.310 --> 00:04:04.210
Let's give it a try.

51
00:04:04.240 --> 00:04:05.380
Let's go to messages.

52
00:04:05.380 --> 00:04:11.380
And instead of rendering just this text here, we can now render a message bubble here.

53
00:04:11.650 --> 00:04:12.250
Of course.

54
00:04:12.250 --> 00:04:16.390
Make sure you import your message bubble dart file for that.

55
00:04:17.540 --> 00:04:20.839
And Message bubble wants the text that should render as an input.

56
00:04:20.839 --> 00:04:28.070
So we reach out to text to chat docs for the given index and then to the text field in this document.

57
00:04:29.180 --> 00:04:31.790
And if we now save everything, this looks nicer.

58
00:04:31.790 --> 00:04:33.680
Now we got these chat messages.

59
00:04:33.830 --> 00:04:37.550
Still not the final style, but better than nothing.

60
00:04:37.970 --> 00:04:45.050
Now you see that the width is ignored, though the width of 140, which I set up.

61
00:04:45.720 --> 00:04:46.380
Here.

62
00:04:46.650 --> 00:04:49.440
And that happens because it's inside of a list view.

63
00:04:49.650 --> 00:04:55.470
Now we can make sure that the width is respected by, for example, wrapping.

64
00:04:57.280 --> 00:05:02.620
The container here into a row, and you'll see why I want a row in a second.

65
00:05:02.680 --> 00:05:05.020
I have another reason for using that as well.

66
00:05:05.140 --> 00:05:10.390
So if you wrap this in a row now, the width is respected and we have our chat bubbles here.

67
00:05:11.140 --> 00:05:15.130
Now, at the moment, they all have the same look and they're all on the same side.

68
00:05:15.130 --> 00:05:22.480
And of course, in reality, we might want to differentiate between chat messages received or written

69
00:05:22.480 --> 00:05:25.780
by us and chat messages written by another user.

70
00:05:25.810 --> 00:05:31.900
Maybe our messages should be on the right and have a different background colour than the messages we

71
00:05:31.900 --> 00:05:33.220
get from our users.

72
00:05:34.090 --> 00:05:40.660
And to incorporate this, we can go to new message and make sure that when we send this message, we

73
00:05:40.660 --> 00:05:50.380
actually also add a number of field, the user ID field, and that should now be our user ID so that

74
00:05:50.380 --> 00:05:57.040
we can later use that to find out whether it was us who wrote this message or some other user.

75
00:05:57.400 --> 00:06:02.350
Now for that, of course, we need access to our user ID and that's something we'll do in the next lecture.

