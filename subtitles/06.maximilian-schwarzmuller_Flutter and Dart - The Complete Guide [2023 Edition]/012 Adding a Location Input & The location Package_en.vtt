WEBVTT
1
00:00:02.320 --> 00:00:05.000
Let's start with the user location

2
00:00:05.020 --> 00:00:11.760
and for that unsurprisingly, we need another package which makes it easy for us to get that location.

3
00:00:11.800 --> 00:00:16.540
You can search for location on pub.dev to find that location package

4
00:00:16.690 --> 00:00:20.790
and this is a package which helps you with getting the user location.

5
00:00:20.800 --> 00:00:26.740
So here again, under installing, you find the installation instructions, in the README you'll find the usage

6
00:00:26.740 --> 00:00:27.820
instructions

7
00:00:27.970 --> 00:00:30.820
and now here, go to pubspec.yaml

8
00:00:30.940 --> 00:00:33.760
and add this location package here.

9
00:00:34.060 --> 00:00:39.490
Now with that added, as always quit that process already, you'll need to do a full restart anyways

10
00:00:39.490 --> 00:00:44.020
and of course run Flutter packages get if it doesn't run automatically

11
00:00:44.020 --> 00:00:49.280
and now we can start using that. To get the location,

12
00:00:49.280 --> 00:00:51.410
I'll add a new widget in the widgets folder,

13
00:00:51.500 --> 00:00:52.850
we have an image input,

14
00:00:52.850 --> 00:01:00.380
now it's time for a place input or a location input if you will, which allows us to pick a location and

15
00:01:00.380 --> 00:01:08.050
show a preview on the map. In there, we'll need a stateful widget because I'll manage the data we fetch

16
00:01:08.040 --> 00:01:08.250
here,

17
00:01:08.270 --> 00:01:13.370
I'll manage the preview image I want to show in here, so we'll need to update this widget from inside

18
00:01:13.910 --> 00:01:16.120
and I'll name this location input

19
00:01:16.190 --> 00:01:24.090
and of course as always, import the material.dart file. Now in there, in the build method of the

20
00:01:24.090 --> 00:01:30.290
state class, I want to have a column because my idea is to have a big preview of the map and then below that,

21
00:01:30.330 --> 00:01:36.660
two buttons, one button to open a full screen map where we can select the location by tapping on it and

22
00:01:36.660 --> 00:01:40.380
one button to select the user by location.

23
00:01:40.380 --> 00:01:44.420
So here, I'll have the first item therefore which is my

24
00:01:44.440 --> 00:01:50.370
preview container which shows a preview of the map, I'll give this a height of let's say 170

25
00:01:50.370 --> 00:01:57.240
maybe, a width of double infinity to take the full width

26
00:01:57.360 --> 00:02:00.600
of the device and the child here,

27
00:02:00.600 --> 00:02:07.140
well then that depends on whether we have a loaded location for which I can show a preview or not.

28
00:02:07.290 --> 00:02:12.890
So I'll actually add a property here which is a string and that should be a preview imageUrl.

29
00:02:12.890 --> 00:02:19.650
Now it might sound strange but in the end here, we'll store a link, a URL pointing at a preview

30
00:02:19.650 --> 00:02:22.680
image of the location we chose,

31
00:02:22.680 --> 00:02:29.730
so a preview image of the map snapshot we chose and Google has an API that creates such images on the

32
00:02:29.730 --> 00:02:30.340
fly,

33
00:02:30.420 --> 00:02:32.990
really cool and we'll use it in a second.

34
00:02:33.000 --> 00:02:38.330
So for now here, I just added this property and then we can use the property down there

35
00:02:39.000 --> 00:02:45.900
when we're outputting a child in a container and if that's equal to null, so if we have no loaded location

36
00:02:45.900 --> 00:02:55.110
which we can preview yet, then I just want to show a text where I say no location chosen, give this a text

37
00:02:55.140 --> 00:03:04.600
align of textAlign.center like this and otherwise, here

38
00:03:04.840 --> 00:03:08.940
I want to render an image.

39
00:03:08.980 --> 00:03:13.500
Now this will be a network image because this will now not be an image we store on the device

40
00:03:13.510 --> 00:03:17.270
but as I said, we'll use a Google API that creates it on the fly,

41
00:03:17.290 --> 00:03:22.570
therefore that will be stored on Google's servers so to say or generated by Google's servers.

42
00:03:22.600 --> 00:03:27.190
So here, we'll reach out to that URL which we'll in the end store in here,

43
00:03:27.400 --> 00:03:35.520
so point at the preview imageUrl here and then give this a fit of BoxFit.cover to fit it

44
00:03:35.530 --> 00:03:40.270
nicely into the surrounding container and also give it a width of double infinity,

45
00:03:40.270 --> 00:03:45.280
so that it takes the full width of the surrounding container.

46
00:03:45.280 --> 00:03:52.120
Now on the container, I also want to set up an alignment of alignment.center to center the text vertically

47
00:03:52.120 --> 00:03:53.710
and horizontally centered

48
00:03:53.770 --> 00:03:57.520
and then the text itself is also centered inside of its box

49
00:03:57.520 --> 00:04:01.440
and with that, we should be prepared to output a preview.

50
00:04:01.690 --> 00:04:06.490
Now of course, a preview isn't worth that much if we have no way to get a location.

51
00:04:06.640 --> 00:04:11.680
So below that preview container, I'll add a row because I want to have two buttons sit next to each other

52
00:04:12.300 --> 00:04:18.730
and therefore the children of that row are two flat buttons, to be precise flat buttons that also have

53
00:04:18.730 --> 00:04:22.660
an icon with that special icon constructor here.

54
00:04:22.670 --> 00:04:30.350
Now the first FlatButton will have an icon where I used the icons widget of icons location on, gives

55
00:04:30.350 --> 00:04:38.370
us this nice map marker icon here which I find quite nice for this button and a label of let's say

56
00:04:38.910 --> 00:04:44.710
current location because that should be the button for getting the current user location

57
00:04:44.970 --> 00:04:47.990
and of course, that should be a text widget

58
00:04:48.060 --> 00:04:55.970
and besides these two things, I also want to set a text color, text color here should be theme of context

59
00:04:55.980 --> 00:04:57.760
primary color let's say

60
00:04:57.840 --> 00:05:01.530
and of course, we need an onPressed handler and for now, this is an empty method.

61
00:05:02.550 --> 00:05:09.920
The second button has generally the same set up, so I'll copy that over there but the icon is a different

62
00:05:09.920 --> 00:05:16.430
one, instead of location on, I'll use the map icon and instead of the text current location, it makes more

63
00:05:16.430 --> 00:05:23.230
sense to say select on map or anything like that. Color is the same and for now, I also have no onPressed

64
00:05:23.420 --> 00:05:24.830
handler there.

65
00:05:24.860 --> 00:05:26.890
So with that, we got this setup,

66
00:05:26.900 --> 00:05:29.960
now let's view it before we work with it.

67
00:05:29.960 --> 00:05:38.330
So in the add place screen, where we have the image input, we can add another SizedBox to add a little bit of

68
00:05:38.330 --> 00:05:40.890
spacing with a height of 10 again maybe

69
00:05:40.970 --> 00:05:48.500
and then here, I want to use my location input, so I'll import this from the widgets folder, 

70
00:05:48.500 --> 00:05:49.180
location_input.dart

71
00:05:49.340 --> 00:05:56.330
and with that input added here, down there below the SizedBox we just added, we can add the location

72
00:05:57.260 --> 00:06:05.320
input widget like that. Let's save this and then restart that, on app, start the rebuild process and start it

73
00:06:05.320 --> 00:06:11.180
on the Android emulator to have a look at this before we then of course also add functionality

74
00:06:11.410 --> 00:06:18.750
and now what you'll notice at this point is that the app doesn't start. This makes a lot of sense because

75
00:06:18.750 --> 00:06:24.270
as I mentioned, you should always read the README of packages you're using, especially if that package

76
00:06:24.270 --> 00:06:26.600
uses native device functionalities.

77
00:06:26.820 --> 00:06:32.550
Here we get informed that we need to add a certain entry to the AndroidManifest file to make this work

78
00:06:32.550 --> 00:06:33.510
on Android

79
00:06:33.780 --> 00:06:38.140
and you also need to add certain entries to the info.plist on iOS,

80
00:06:38.190 --> 00:06:41.990
this is all required to request the right permissions.

81
00:06:42.090 --> 00:06:49.980
So let's go to the Android folder and there in the app folder, to the src folder, to the main folder and

82
00:06:49.980 --> 00:06:57.000
then to the AndroidManifest file and there you can add your permission right here outside of this application

83
00:06:57.000 --> 00:07:03.180
node inside of this manifest node. This use the permission, Android permission access find location. That

84
00:07:03.180 --> 00:07:09.390
is required so make sure you add this to the AndroidManifest and to make it work on iOS as well, go

85
00:07:09.390 --> 00:07:15.990
to iOS, the runner folder and then info.plist and there as you see, you need to add these two keys

86
00:07:16.770 --> 00:07:26.260
so let's copy that key-value pair we added for the camera and then copy the first key location, when

87
00:07:26.350 --> 00:07:33.190
in use, usage description needs to get your location. As always, you want to have a message here that

88
00:07:33.190 --> 00:07:38.230
really convinces the user to give you that permission, so be really clear about what you're planning

89
00:07:38.230 --> 00:07:44.110
to do with that data or why you need it, also add that second key and there I'll use the same

90
00:07:44.110 --> 00:07:45.850
dummy message for now.

91
00:07:45.850 --> 00:07:48.890
Now with that, we have the permissions set up,

92
00:07:48.930 --> 00:07:52.690
now you'll notice that there are more settings you need to add though.

93
00:07:52.840 --> 00:07:58.800
So for Android you all need to change that gradle.properties file and basically add these two entries,

94
00:07:58.870 --> 00:08:04.780
you'll find that file in the Android folder and then there, it's that gradle.properties file, simply

95
00:08:04.870 --> 00:08:12.010
add these two entries you find here at the start of this file, that's important and also make sure you

96
00:08:12.010 --> 00:08:19.300
have these entries here in your build.gradle file, though I had no problems before without these additions,

97
00:08:19.750 --> 00:08:25.630
so I'll not add them here but if you're facing problems, add these dependencies in that

98
00:08:25.630 --> 00:08:30.060
build.gradle file. The adjustments in the gradle.properties file are definitely required

99
00:08:30.070 --> 00:08:37.450
and with that, now you can try restarting your application, do a full rebuild and launch it on the device

100
00:08:38.169 --> 00:08:41.059
and now see whether that works.

101
00:08:41.409 --> 00:08:42.419
So this is looking better,

102
00:08:42.429 --> 00:08:43.789
the app launched,

103
00:08:44.020 --> 00:08:50.230
now let's go to the add places screen and now here, you see that preview area for the map

104
00:08:50.230 --> 00:08:51.850
and then the two buttons.

105
00:08:51.880 --> 00:08:57.610
Now there are some stylistic adjustments I want to make in the location input, for one on that preview

106
00:08:57.610 --> 00:08:58.960
container,

107
00:08:58.960 --> 00:09:06.930
I'll add a decoration, BoxDecoration object therefore and set a border to border.all where I have

108
00:09:06.930 --> 00:09:09.830
a width of 1 and a color of Colors.grey

109
00:09:09.850 --> 00:09:17.770
to have a grey border around that preview container and that color: of course.

110
00:09:17.780 --> 00:09:18.640
So that's one thing

111
00:09:18.740 --> 00:09:23.240
and in the row with the buttons, it would be nice to have them centered

112
00:09:23.300 --> 00:09:30.440
and therefore we can add main axis alignment and then MainAxisAlignment.center here for the row

113
00:09:30.440 --> 00:09:32.330
with the two flat buttons

114
00:09:32.330 --> 00:09:34.550
and now this looks much nicer.

115
00:09:34.610 --> 00:09:41.060
Now let's next ensure that the current location here really uses the location package to fetch

116
00:09:41.060 --> 00:09:42.130
the user location.

