1
00:00:02,400 --> 00:00:07,890
So we want to load that chart screen if we are authenticated and therefore in main art, we need to

2
00:00:07,890 --> 00:00:11,200
swap this off screen for the chat screen.

3
00:00:11,220 --> 00:00:13,800
If we do find out that we have a valid token.

4
00:00:14,160 --> 00:00:20,250
Now in the off section we did something similar, but there you saw that there are a couple of steps

5
00:00:20,850 --> 00:00:25,830
you need to to do or you need to take care about when you're managing the token on your own.

6
00:00:26,040 --> 00:00:32,310
The cool thing is with Firebase and Firebase off that entire token, management is done for you and

7
00:00:32,310 --> 00:00:36,450
therefore swapping pages based on the off status is extremely easy.

8
00:00:37,670 --> 00:00:41,420
We can replace our home widget here with a stream builder.

9
00:00:41,450 --> 00:00:44,300
I showed you the stream builder early already.

10
00:00:44,570 --> 00:00:47,540
Now this takes a stream and then a builder argument.

11
00:00:47,960 --> 00:00:55,550
Now for the stream, I'll here not take my cloud firestorm, but instead my Firebase auth package or

12
00:00:55,550 --> 00:00:57,170
a feature from the package.

13
00:00:57,170 --> 00:01:04,489
So I'll import package firebase off firebase auth dart.

14
00:01:05,290 --> 00:01:13,150
And then with that imported here we can use firebase auth dot instance dot on off state changed and

15
00:01:13,150 --> 00:01:19,540
this gives us a stream and this stream will emit a new value whenever the off state changes and the

16
00:01:19,540 --> 00:01:26,380
off state changes when we sign up, when we log in, when we log out, but also when the app is loading,

17
00:01:26,380 --> 00:01:33,070
it will check if there is a cached token and the DAT caching and storage will be managed entirely by

18
00:01:33,070 --> 00:01:35,560
Firebase here by the Firebase Flutter package.

19
00:01:35,560 --> 00:01:38,890
And if it finds such a token, it will validate the token.

20
00:01:38,890 --> 00:01:45,130
And if token is valid, it will even use that token even after a new app startup.

21
00:01:45,710 --> 00:01:53,300
So that entire token storage and manage it across app restarts stuff is fully managed by Firebase here,

22
00:01:53,300 --> 00:01:54,830
which is extremely convenient.

23
00:01:55,040 --> 00:01:57,830
So we just need to listen to that stream.

24
00:01:58,010 --> 00:01:59,660
And then the builder here will fire.

25
00:01:59,660 --> 00:02:05,570
Whenever our off status changes here, we get the context and we get that user snapshot.

26
00:02:08,190 --> 00:02:13,290
And in this function we then can return different widgets based on the user snapshot.

27
00:02:13,320 --> 00:02:20,480
We can check if the user snapshot has data, which means that we did find a token essentially.

28
00:02:20,490 --> 00:02:23,520
And in that case we can return the chat screen.

29
00:02:23,550 --> 00:02:26,430
Whoops, the chat screen here.

30
00:02:27,530 --> 00:02:32,780
Haas data is a field that is available on the snapshot to, well, indicate whether we've found some

31
00:02:32,780 --> 00:02:33,770
valid data.

32
00:02:34,190 --> 00:02:39,980
If we didn't find data, we'll return the off screen because then we need to authenticate.

33
00:02:40,310 --> 00:02:45,800
And if I now save this, you will see that the chat screen is here because I did sign up earlier.

34
00:02:45,830 --> 00:02:51,770
Firebase, as I explained multiple times, did take and store that token and manage it behind the scenes.

35
00:02:51,770 --> 00:02:57,200
And therefore, just by adding this code, Firebase checked if it had a token, it does, and therefore

36
00:02:57,200 --> 00:03:02,210
it logs us in and it renders the chat screen just like that all managed behind the scenes.

37
00:03:03,520 --> 00:03:06,970
So that's why Firebase Authentication is really amazing.

38
00:03:06,970 --> 00:03:14,500
Here now to see it fully in action, log out functionality might also be nice and therefore I'll go

39
00:03:14,500 --> 00:03:17,860
to the chat screen and here on the scaffold.

40
00:03:18,570 --> 00:03:20,250
I'll add an app bar.

41
00:03:21,130 --> 00:03:22,720
The default app bar.

42
00:03:23,380 --> 00:03:26,200
And this app bar will get a title.

43
00:03:28,220 --> 00:03:33,620
Which can be a text widget where I say flutter, chat, anything like that.

44
00:03:34,130 --> 00:03:38,810
And more importantly than that, it will get some actions.

45
00:03:40,140 --> 00:03:42,300
Actions is an array of widgets.

46
00:03:42,630 --> 00:03:47,610
And there I want to add a dropdown button which is a default widget that comes with Flutter.

47
00:03:48,460 --> 00:03:54,580
The dropdown button is able to render an icon which is displayed in the action bar and there I'll use

48
00:03:54,580 --> 00:04:02,200
the icon widget and then the more vert icon which basically gives us three vertical dots.

49
00:04:03,350 --> 00:04:04,970
I'll also set the.

50
00:04:05,930 --> 00:04:06,830
Color.

51
00:04:07,780 --> 00:04:14,080
Here of the icon to theme of context primary color.

52
00:04:15,500 --> 00:04:15,860
Sorry.

53
00:04:15,860 --> 00:04:17,660
Not primary, but primary.

54
00:04:17,959 --> 00:04:20,000
I can theme dot color.

55
00:04:23,960 --> 00:04:24,830
Like this.

56
00:04:26,490 --> 00:04:29,610
Notice we'll render a nice dropdown button, which we see here.

57
00:04:29,910 --> 00:04:32,100
But this button doesn't do anything right now.

58
00:04:34,280 --> 00:04:36,590
So to make sure that it does.

59
00:04:37,440 --> 00:04:38,730
On the drop down button.

60
00:04:38,730 --> 00:04:43,710
But outside of the icon, we set some items which are the items that are shown when we click the dropdown

61
00:04:43,710 --> 00:04:44,040
button.

62
00:04:44,040 --> 00:04:45,960
And that again is a list of widgets.

63
00:04:46,990 --> 00:04:51,010
And here we typically render dropdown menu items.

64
00:04:51,970 --> 00:04:54,280
And that is a single item in that dropdown.

65
00:04:54,280 --> 00:04:56,290
And here I want to have one item.

66
00:04:57,010 --> 00:05:03,610
It has a child where I will use a container and that container has a child where I will use a row because

67
00:05:03,610 --> 00:05:08,110
I want to render two widgets next to each other here as a child in that dropdown.

68
00:05:09,230 --> 00:05:15,140
The two widgets next to each other should be an icon.

69
00:05:15,140 --> 00:05:23,630
So a regular icon widget where I use the exit to app icon and then a text widget where I say.

70
00:05:24,610 --> 00:05:29,350
Logout and for some extra spacing I'll add a third widget here.

71
00:05:29,350 --> 00:05:32,920
A sized box where I set the width to eight.

72
00:05:34,300 --> 00:05:42,190
Now we also need to give this dropdown menu item value which will act as an identifier and I'll just

73
00:05:42,190 --> 00:05:43,200
use log out here.

74
00:05:43,210 --> 00:05:44,530
The value is up to you.

75
00:05:45,350 --> 00:05:52,880
With that back on the entire dropdown button here you can add on changed.

76
00:05:53,570 --> 00:05:54,440
Argument.

77
00:05:54,770 --> 00:05:58,790
And that should be a function which gets the item identifier.

78
00:06:00,740 --> 00:06:05,750
So the value you specified here, if you had multiple items, you could find out which item was pressed

79
00:06:05,750 --> 00:06:08,000
by looking at the identifier here.

80
00:06:08,030 --> 00:06:09,620
Of course we have only one item.

81
00:06:09,890 --> 00:06:15,950
Still, for completeness sake, I'll check if item identifier is equal to logout, which of course should

82
00:06:15,950 --> 00:06:17,810
be here since that's our only item.

83
00:06:17,810 --> 00:06:21,440
And if that's the case, I want to log out for this.

84
00:06:21,440 --> 00:06:24,920
I'll again use the firebase off package.

85
00:06:24,920 --> 00:06:29,030
So package firebase off firebase auth dot dart.

86
00:06:29,480 --> 00:06:39,470
And here we can then call firebase off dot instance dot sign out and this will log the user out.

87
00:06:41,220 --> 00:06:42,330
With all of that.

88
00:06:42,510 --> 00:06:48,330
Now we can open this and if I click logout, I'm back here because this science user out it will automatically

89
00:06:48,330 --> 00:06:55,140
destroy the token and it will emit a new event here on the off state changed stream.

90
00:06:55,140 --> 00:07:01,170
And there we will find out that we no longer have a token so we won't make it into this if statement

91
00:07:01,170 --> 00:07:03,630
and instead this off screen is returned again.

92
00:07:04,140 --> 00:07:06,960
And therefore now if I log in again here.

93
00:07:10,360 --> 00:07:15,340
You, of course, see that we go back to the chat screen so that works that log in and log out part

94
00:07:15,340 --> 00:07:15,970
works.

95
00:07:17,380 --> 00:07:19,640
So that was a lot of progress.

96
00:07:19,660 --> 00:07:26,740
Let me now talk briefly about some Firebase database rules which are important when we talk about security

97
00:07:26,740 --> 00:07:31,390
on Firebase before we then start working on the actual chat here.

