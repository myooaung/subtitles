1
00:00:02,150 --> 00:00:08,230
For this module, I'll start with a brand new project and you can therefore simply create a brand new project

2
00:00:08,230 --> 00:00:09,820
with Flutter create, attached

3
00:00:09,820 --> 00:00:16,900
you'll find the main.dart file here which will actually get you started or which will give you the content

4
00:00:16,900 --> 00:00:18,470
I have here in the main.dart file,

5
00:00:18,480 --> 00:00:24,130
it's only one simple widget where we're currently missing a home screen where I just added some theme

6
00:00:24,150 --> 00:00:26,360
set up here to have some nice colors

7
00:00:26,380 --> 00:00:31,100
and that's basically all for now, we'll add the rest together. Now as already mentioned,

8
00:00:31,360 --> 00:00:36,370
I will add all these screens and widgets together with you but it will not be the main focus of this

9
00:00:36,370 --> 00:00:40,900
module and I'll pretty much only use features there which we already learned about in this course,

10
00:00:40,930 --> 00:00:47,680
so I'll walk through that relatively quick and instead focus on how to work with native device features.

11
00:00:47,800 --> 00:00:53,200
So let's jump right in and let's add a screens folder here because we will have a couple of screens

12
00:00:53,200 --> 00:00:55,960
of course, to be precise,

13
00:00:56,170 --> 00:01:04,090
we'll have a screen for our places list, so all the places we have,

14
00:01:04,120 --> 00:01:06,040
that's our starting screen basically.

15
00:01:06,490 --> 00:01:12,130
We'll then have a place detail screen, so I'll just create all these files for now and then we'll add

16
00:01:12,130 --> 00:01:13,210
content to them later,

17
00:01:13,210 --> 00:01:20,560
so places list screen, place detail screen, we'll also need an add place screen which is that screen

18
00:01:20,560 --> 00:01:26,830
we open when we click the plus icon in the appBar to add a new place and that will be it for now. We'll

19
00:01:26,830 --> 00:01:31,740
add more later but these are the three main screens we'll have in our application.

20
00:01:31,750 --> 00:01:36,390
Now let's start with the places list screen because that should be our starting screen.

21
00:01:36,640 --> 00:01:42,880
That can be a stateless widget because in there, we don't really change the screen from inside,

22
00:01:42,880 --> 00:01:45,870
there is no data in there that would change from inside,

23
00:01:45,940 --> 00:01:50,710
so I'll just name this here places list screen, like that

24
00:01:50,710 --> 00:01:56,470
and as you already are used to, I'll of course import material.dart from the Flutter package.

25
00:01:56,530 --> 00:02:02,410
Now in this places list screen, I want to have a scaffold of course because I want to render an entire

26
00:02:02,410 --> 00:02:03,450
page there

27
00:02:03,610 --> 00:02:10,930
and in the scaffold, I'll add an appBar with a title which is a text widget where we could

28
00:02:10,930 --> 00:02:16,210
say your places, anything like that because in the end, on the screen here, we'll display all the places

29
00:02:16,210 --> 00:02:19,870
of this user. Now in the appBar,

30
00:02:19,870 --> 00:02:26,350
I also want to have some actions because there, we certainly need an icon button in the actions list

31
00:02:26,350 --> 00:02:29,650
here which shows a plus,

32
00:02:29,650 --> 00:02:36,480
so an add icon here that allows us to add new places or to switch to that new places screen.

33
00:02:36,550 --> 00:02:38,920
So on pressing this, we'll soon navigate,

34
00:02:38,920 --> 00:02:43,240
for now I'll just have an empty anonymous function here because I'll add the navigation logic later.

35
00:02:43,840 --> 00:02:50,320
This is the add button here though, besides that in our scaffold, of course we need a body and in the

36
00:02:50,350 --> 00:02:51,190
body here,

37
00:02:51,190 --> 00:02:58,930
I want to output my list of places obviously. For the moment, I'll add a center widget here

38
00:02:58,960 --> 00:03:07,300
with a child in there where I just show a CircularProgressIndicator but of course we'll soon add some

39
00:03:07,300 --> 00:03:08,670
real data. For that

40
00:03:08,680 --> 00:03:13,420
however, we'll need a place to manage data and I'll again do this with the provider package,

41
00:03:13,540 --> 00:03:21,310
so let's add providers folder there and in there, I'll add a great_places.dart file simply

42
00:03:21,310 --> 00:03:26,590
because we're managing all the great places we collected, you could name it just places or user places

43
00:03:26,590 --> 00:03:32,890
or whatever you want of course. Now in addition, I want to define how a place looks like and that will

44
00:03:32,890 --> 00:03:38,350
actually be a definition which won't change internally, to which I don't want to listen,

45
00:03:38,470 --> 00:03:44,470
so I'll create a separate models folder to again have that separation between data models which

46
00:03:44,470 --> 00:03:50,470
will be provided and to which changes I want to listen and to also have models like here in the models

47
00:03:50,470 --> 00:03:52,330
folder to which changes

48
00:03:52,330 --> 00:03:56,530
I won't listen because I'm not interested or because the data won't really change.

49
00:03:57,140 --> 00:04:04,220
So in there, I'll just add a place.dart file to define how a place should look like. So let's start in

50
00:04:04,220 --> 00:04:10,160
that place.dart file maybe and let's think about how a place should look like

51
00:04:10,220 --> 00:04:11,860
and for that, we can create a place

52
00:04:11,860 --> 00:04:17,079
class of course to have a blueprint for how a place should look like in this application

53
00:04:17,089 --> 00:04:19,730
and I'd say each place should have an ID,

54
00:04:19,730 --> 00:04:24,770
so that will be an ID which is a string. Each place should have a title

55
00:04:24,770 --> 00:04:28,880
and these are all the things I already mentioned in the planning lecture.

56
00:04:28,880 --> 00:04:35,150
Each place should have a location and we'll worry about the data type in a second

57
00:04:35,150 --> 00:04:37,460
and each place should have an image

58
00:04:37,460 --> 00:04:45,470
and we'll worry about that data type in a second too. Now of course, I want to have a constructor where

59
00:04:45,480 --> 00:04:50,670
we assign values to these properties and I'll use named arguments here

60
00:04:50,670 --> 00:04:54,830
by wrapping them in curly braces and I always want to require them all,

61
00:04:54,840 --> 00:05:02,220
so let's also import foundation.dart from the Flutter package so that we can use the @required decorator

62
00:05:02,220 --> 00:05:05,330
here and then I want to require the ID,

63
00:05:06,090 --> 00:05:08,350
I also want to require the title,

64
00:05:08,490 --> 00:05:15,550
I also want to require the location and unsurprisingly, I also want to require the image.

65
00:05:15,570 --> 00:05:19,840
Now back to location and image, which data types do I want to use there?

66
00:05:19,950 --> 00:05:26,880
Well since we'll now work with images that are stored on the device, I'll actually use the file data type

67
00:05:26,880 --> 00:05:27,480
here.

68
00:05:27,510 --> 00:05:33,030
Now file is not a data type built into Flutter but actually into Dart, to unlock it,

69
00:05:33,030 --> 00:05:35,580
you need to import dart:io.

70
00:05:35,760 --> 00:05:41,910
This gives you access to methods and to types that help you work with files and the file system

71
00:05:41,910 --> 00:05:44,700
and that's something Flutter is able to leverage.

72
00:05:44,700 --> 00:05:46,620
So here we'll work with files,

73
00:05:46,620 --> 00:05:52,770
each image is a file on our device, not a string, not a URL to some image stored in the web but instead

74
00:05:52,770 --> 00:06:00,260
a file on our device. Now for location, a location should actually be a combination of things.

75
00:06:00,270 --> 00:06:07,690
Locations are typically expressed as coordinates which are defined with a latitude and a longitude which

76
00:06:07,690 --> 00:06:10,690
are geographic measures basically

77
00:06:10,690 --> 00:06:16,900
and I also want to store an address. So I'll create another class in here which I'll name place location

78
00:06:17,410 --> 00:06:25,870
and a place location is, as I just said, made up of a latitude which actually should be a double because

79
00:06:25,870 --> 00:06:29,000
that's just a number, latitude and longitude are just numbers,

80
00:06:29,010 --> 00:06:33,930
they're basically coordinates and also a longitude.

81
00:06:33,970 --> 00:06:39,490
So we've these two coordinates which are used to describe a place on earth and that's a common way

82
00:06:39,490 --> 00:06:46,140
of measuring or of locating things on the planet because latitude and longitude together

83
00:06:46,630 --> 00:06:50,820
allow you to identify a unique place on the world

84
00:06:50,980 --> 00:06:56,860
and in addition to that as I mentioned, I'll store the address which is simply a human readable address

85
00:06:56,860 --> 00:06:59,090
and therefore, it should be a string.

86
00:06:59,140 --> 00:07:07,690
Now just as with the place, here I want to add a constructor, again maybe with named arguments where we

87
00:07:07,690 --> 00:07:15,550
expect the latitude, where we expect the longitude and where we expect the address and the latitude

88
00:07:15,700 --> 00:07:17,230
should certainly be required,

89
00:07:17,260 --> 00:07:21,800
so should be the longitude and for the address,

90
00:07:22,060 --> 00:07:28,000
I actually don't require this here because we will be able to work without that since latitude

91
00:07:28,000 --> 00:07:33,250
and longitude are the key things when it comes to finding a location on the planet.

92
00:07:33,340 --> 00:07:38,890
The address is just the human readable part and we don't need that in all parts of the app we're building.

93
00:07:39,000 --> 00:07:45,310
So latitude and longitude and therefore here, location in the place model, in the place class should

94
00:07:45,310 --> 00:07:51,580
be of type place location, so of our own class here and as you learned, every class you defined also automatically

95
00:07:51,670 --> 00:07:54,100
creates a type you can use.

96
00:07:54,100 --> 00:08:00,550
So this is how places should look like in the application and in great places, we'll manage these places.

97
00:08:00,550 --> 00:08:07,000
So great places is just another class here which will use the ChangeNotifier mixin though, which

98
00:08:07,000 --> 00:08:13,870
you can also import from foundation.dart and ChangeNotifier, as you learned, is a mixin that allows you

99
00:08:13,870 --> 00:08:21,520
to call notifyListeners which then is used by the provider package to update all places where

100
00:08:21,520 --> 00:08:29,860
you listen to that provided object thereafter. In the great places, I want to use the place model, so I'll import

101
00:08:30,160 --> 00:08:37,090
that from the models folder, from the place.dart file, so that in there, we can have a list of places in

102
00:08:37,090 --> 00:08:40,960
the end and I'll name that items and initially, it will be an empty list.

103
00:08:43,789 --> 00:08:49,400
Now just as we did it in earlier modules, I also want to provide a getter which allows us to retrieve

104
00:08:49,430 --> 00:08:58,250
a copy of our items, so I'll name this just items without an underscore and here, I'll return a copy of items,

105
00:08:58,340 --> 00:09:02,760
again so that we can always get access to the items from anywhere in the app

106
00:09:02,780 --> 00:09:08,420
but we get access to a copy of the items, so if we change that list from the place where we're getting

107
00:09:08,420 --> 00:09:11,420
access to it, then we won't change the list here

108
00:09:11,420 --> 00:09:14,680
in this class which is certainly something we want to avoid,

109
00:09:14,690 --> 00:09:19,160
so we want to make sure that this can't be changed from outside because if you would change it from

110
00:09:19,160 --> 00:09:24,320
outside, you wouldn't trigger notifyListeners and therefore you would change data without updating

111
00:09:24,320 --> 00:09:25,600
the app which would be bad

112
00:09:26,390 --> 00:09:32,830
and that's it for now, we'll add more methods here, like a method for adding a place when we need it.

113
00:09:32,870 --> 00:09:35,800
With that, we have our data model here set up,

114
00:09:35,810 --> 00:09:39,360
now we need to provide it so that we can listen to it. Now

115
00:09:39,380 --> 00:09:44,370
the place to provide it unsurprisingly is again the main.dart file.

116
00:09:44,410 --> 00:09:52,480
There, I'll basically wrap the entire MaterialApp with a new widget and that will be the 

117
00:09:52,490 --> 00:09:57,880
ChangeNotifierProvider widget to provide this class with the provider package.

118
00:09:57,950 --> 00:10:02,600
But one thing is missing, in order to do that, we need to install the provider package

119
00:10:02,600 --> 00:10:09,470
and since this is a brand new project, we'll actually have to add the provider package before we can use

120
00:10:09,470 --> 00:10:10,080
it.

121
00:10:10,490 --> 00:10:17,430
For this, you can again visit pub.dev and there search for provider and find that provider package

122
00:10:17,430 --> 00:10:20,340
there and it's the exact same package we used before.

123
00:10:20,450 --> 00:10:21,920
So there, under installing,

124
00:10:21,920 --> 00:10:27,380
copy that entry here with that version, the latest version of course you're having when you're viewing

125
00:10:27,380 --> 00:10:33,440
this video and then go to your pubspec.yaml file and under dependencies, below Flutter here, on

126
00:10:33,440 --> 00:10:34,140
the right level,

127
00:10:34,140 --> 00:10:41,060
so on the same level as Flutter, add this package. Simply save this and it should be installed automatically,

128
00:10:41,060 --> 00:10:48,320
in case it's not, as always you can go to the terminal and there, run Flutter packages get to install

129
00:10:48,350 --> 00:10:51,500
all the packages for this project.

130
00:10:51,560 --> 00:10:55,370
Now with that, we got the provider package installed, in main.dart

131
00:10:55,400 --> 00:11:00,770
we can therefore now import it. So import package/provider/provider.dart

132
00:11:00,770 --> 00:11:04,720
and now the ChangeNotifierProvider is available there.

133
00:11:04,810 --> 00:11:11,030
Now here, I'll use the value constructor and therefore, we have to provide a value argument and that

134
00:11:11,030 --> 00:11:14,950
should be an instance of my great places class.

135
00:11:15,560 --> 00:11:20,660
So let's go to the providers folder and there to great places

136
00:11:20,660 --> 00:11:28,100
and let's instantiate great places here. Now besides the value, we of course also have the child argument

137
00:11:28,100 --> 00:11:35,650
here for the value constructor and therefore with that, we should be all set to provide this data.

138
00:11:35,660 --> 00:11:42,710
Now we just have to make sure that we use the places list screen here as our home screen,

139
00:11:42,960 --> 00:11:45,510
so let's actually import this as well,

140
00:11:45,600 --> 00:11:53,870
the places list screen here and let's render it here or add it here as a value for the home argument

141
00:11:53,890 --> 00:11:58,100
in the MaterialApp, places list screen, like that.

142
00:11:58,260 --> 00:12:00,930
With this, the content in the main.dart file is finished for now,

143
00:12:00,930 --> 00:12:06,910
we're providing an instance of great places by instantiating it here and providing it with 

144
00:12:06,960 --> 00:12:13,080
ChangeNotifierProvider value and therefore now in the places lists screen which is a child of this widget and of this

145
00:12:13,080 --> 00:12:19,110
widget because we're passing it as the argument to home, in the places list screen, we can start consuming

146
00:12:19,110 --> 00:12:24,480
our places and of course, I want to consume the places here in the body.

147
00:12:24,510 --> 00:12:32,330
However, I only want to do this once we have places and for now, we don't have any, so we'll add this later.

148
00:12:32,670 --> 00:12:39,300
Let's next work on this add place screen because that is the screen where we then will start working

149
00:12:39,300 --> 00:12:42,270
with native device features like the camera of course.

