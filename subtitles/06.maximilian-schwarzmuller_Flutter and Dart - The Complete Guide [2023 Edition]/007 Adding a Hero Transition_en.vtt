WEBVTT
1
00:00:02.250 --> 00:00:08.750
Another thing we could animate is when we actually go to a product detail page. This transition certainly

2
00:00:08.750 --> 00:00:15.140
isn't bad but there is a nice animation which you might know from some applications where this image

3
00:00:15.140 --> 00:00:20.840
here, this book image for example doesn't really go away but instead, it's kept here,

4
00:00:20.870 --> 00:00:26.270
it increases in size and floats into the position where it needs to be on the new screen.

5
00:00:26.270 --> 00:00:32.119
This is called a hero animation and this kind of animation is built into Flutter or at least, it's very

6
00:00:32.119 --> 00:00:33.940
simple to implement.

7
00:00:33.950 --> 00:00:35.520
Now how does it work?

8
00:00:35.540 --> 00:00:42.430
You go to your image which you want to use in that hero animation and you wrap it in a new widget and

9
00:00:42.550 --> 00:00:45.910
that's the hero widget which is also built into Flutter.

10
00:00:46.310 --> 00:00:48.880
The hero widget and that's important needs a tag,

11
00:00:48.950 --> 00:00:54.290
this tag is then used on the new page which is loaded because the hero animation is always used between

12
00:00:54.290 --> 00:00:56.970
two different pages, two different screens,

13
00:00:57.080 --> 00:01:02.690
it's used on the new screen which is loaded to know which image on the old screen to float over so to

14
00:01:02.690 --> 00:01:08.610
say, which image should be animated over into the new screen. It can be any tag you want, here

15
00:01:08.710 --> 00:01:14.810
I'll use the product ID which I have available but in general, that can be any tag you want, it

16
00:01:14.810 --> 00:01:16.270
should of course be unique

17
00:01:16.340 --> 00:01:22.630
per image otherwise Flutter doesn't know which image to shift over.

18
00:01:22.670 --> 00:01:24.950
Now of course, setting it up here is only one part,

19
00:01:24.950 --> 00:01:30.620
you also need to go to the place where you're animating to, so hero is a widget that only makes sense

20
00:01:30.620 --> 00:01:32.670
if you're switching between different screens.

21
00:01:32.960 --> 00:01:37.610
The new screen we're animating to is the product detail screen and there,

22
00:01:37.630 --> 00:01:40.460
I'm also outputting an image here

23
00:01:40.790 --> 00:01:46.510
and therefore this now should also be wrapped into a widget.

24
00:01:46.520 --> 00:01:50.780
So here, we also use the hero widget, the same widget and the same tag

25
00:01:50.780 --> 00:01:52.970
and of course, the tag should now be equal,

26
00:01:52.970 --> 00:02:01.250
so here it's the loadedProduct.id and that should be all, this is absolutely all. If you now restart

27
00:02:01.250 --> 00:02:09.840
this and let this reload, if you now click on let's say the red shirt item here, you see this now is actually

28
00:02:10.050 --> 00:02:12.890
faded over or animated over into the new route

29
00:02:12.900 --> 00:02:15.860
and that's of course a really nice effect here.

30
00:02:15.870 --> 00:02:20.940
So this is a fancy animation which as you see is extremely easy to add in Flutter apps with the hero

31
00:02:20.940 --> 00:02:21.480
widget,

32
00:02:21.600 --> 00:02:27.360
just a couple of lines of code and you've got this nice look which looks super complex and really nice

33
00:02:27.360 --> 00:02:31.280
and gives the user a good idea of what changed on the screen

34
00:02:31.410 --> 00:02:33.060
and it's that easy to implement.

