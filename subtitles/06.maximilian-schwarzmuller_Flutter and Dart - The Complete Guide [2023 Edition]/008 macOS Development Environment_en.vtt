WEBVTT
1
00:00:02.066 --> 00:00:03.933
- [Instructor] So in the previous lecture,

2
00:00:03.933 --> 00:00:07.200
we installed Flutter X
code and Android studio,

3
00:00:07.200 --> 00:00:09.033
and we made sure that all these tools

4
00:00:09.033 --> 00:00:11.100
are set up and configured.

5
00:00:11.100 --> 00:00:14.200
Now we wanna create our first Flutter app

6
00:00:14.200 --> 00:00:17.433
and run it on one of these emulators.

7
00:00:17.433 --> 00:00:20.566
And for this, you should, first of all,

8
00:00:20.566 --> 00:00:23.800
go into a folder in your terminal here

9
00:00:23.800 --> 00:00:28.033
where you wanna create and
store that Flutter project.

10
00:00:28.033 --> 00:00:31.133
You can use the CD command
for Dart to navigate around.

11
00:00:31.133 --> 00:00:34.700
And here in my case, I will
go into a playground folder,

12
00:00:34.700 --> 00:00:37.200
which sits in a global development folder,

13
00:00:37.200 --> 00:00:41.133
but you can create and use
any folder structure you want,

14
00:00:41.133 --> 00:00:44.800
move into that folder
here in your terminal,

15
00:00:44.800 --> 00:00:47.200
and that's really
important because the path

16
00:00:47.200 --> 00:00:48.666
into which you moved here

17
00:00:48.666 --> 00:00:52.400
will be used for storing
that Flutter project

18
00:00:52.400 --> 00:00:54.733
that we are about to create.

19
00:00:54.733 --> 00:00:57.933
And therefore once you switched
to the appropriate folder,

20
00:00:57.933 --> 00:00:59.866
you can then run Flutter create

21
00:00:59.866 --> 00:01:03.000
to create a new Flutter project.

22
00:01:03.000 --> 00:01:05.766
You also need to give that project a name,

23
00:01:05.766 --> 00:01:09.333
and I'll name at first-app,
but the name is up to you.

24
00:01:10.200 --> 00:01:12.233
And then once you run this command,

25
00:01:12.233 --> 00:01:16.466
a new folder with that
name, first step in my case

26
00:01:16.466 --> 00:01:18.833
will be created in the path

27
00:01:18.833 --> 00:01:20.700
into which you navigated before.

28
00:01:21.800 --> 00:01:23.066
No here I'll hit Enter

29
00:01:23.066 --> 00:01:26.633
and this one now quickly
create this project.

30
00:01:26.633 --> 00:01:29.000
Now we also see two commands here,

31
00:01:29.000 --> 00:01:32.800
which we could now use to
already start our Flutter app

32
00:01:32.800 --> 00:01:35.900
assuming that we do have
an emulator up and running.

33
00:01:35.900 --> 00:01:38.933
But I actually don't
wanna do this right away.

34
00:01:38.933 --> 00:01:41.900
Instead, I now wanna
install an extra tool,

35
00:01:41.900 --> 00:01:45.000
which we will use for writing our code.

36
00:01:45.000 --> 00:01:47.266
We could use Android Studio for that,

37
00:01:47.266 --> 00:01:50.300
but Android Studio is
quite heavy and a bit slow

38
00:01:50.300 --> 00:01:52.600
and I personally don't like it too much.

39
00:01:52.600 --> 00:01:56.366
So my personal preference
is a different tool,

40
00:01:56.366 --> 00:01:59.800
and that tool is called
Visual Studio Code,

41
00:01:59.800 --> 00:02:04.200
which is a free IDE, a free
development environment

42
00:02:04.200 --> 00:02:06.000
provided by Microsoft,

43
00:02:06.000 --> 00:02:09.166
which you can use for all
kinds of programming languages

44
00:02:09.166 --> 00:02:11.933
and Flutter and Dart are no exceptions.

45
00:02:12.833 --> 00:02:15.966
So you can visit code.visualstudio.com

46
00:02:15.966 --> 00:02:18.033
to download it from there.

47
00:02:18.033 --> 00:02:20.533
It's a way liable for
all operating systems

48
00:02:20.533 --> 00:02:21.933
and your operating system

49
00:02:21.933 --> 00:02:23.866
should be selected here by default.

50
00:02:24.966 --> 00:02:27.900
So you can then download
Visual Studio Code.

51
00:02:28.800 --> 00:02:30.966
And once that download is finished,

52
00:02:30.966 --> 00:02:34.866
simply install it by
opening that downloaded file

53
00:02:34.866 --> 00:02:36.633
and following the instructions here,

54
00:02:36.633 --> 00:02:38.600
it's really straight forward.

55
00:02:40.700 --> 00:02:42.866
Once you did install it, you can open it

56
00:02:42.866 --> 00:02:44.566
and you should see a starting screen

57
00:02:44.566 --> 00:02:46.466
that looks something like that.

58
00:02:46.466 --> 00:02:49.500
The exact look might differ over time,

59
00:02:49.500 --> 00:02:51.466
but it should look something like that.

60
00:02:52.500 --> 00:02:56.800
Now here I have this dark look
and you can get this as well

61
00:02:56.800 --> 00:02:59.900
by going to the menu, and
then there under code,

62
00:02:59.900 --> 00:03:03.433
preferences, color theme, you
can choose the color theme.

63
00:03:03.433 --> 00:03:06.000
And I'm using that dark plus theme,

64
00:03:06.000 --> 00:03:09.433
but you can of course try
out different themes here.

65
00:03:09.433 --> 00:03:10.733
But I like this a lot.

66
00:03:12.000 --> 00:03:14.266
The great thing about Visual Studio Code

67
00:03:14.266 --> 00:03:18.400
is also that you can install
a lot of extensions there

68
00:03:18.400 --> 00:03:21.000
which make your life easier.

69
00:03:21.000 --> 00:03:22.866
And there are a couple of extensions

70
00:03:22.866 --> 00:03:24.566
which I'm using in this course,

71
00:03:24.566 --> 00:03:28.533
which you absolutely
should install as well.

72
00:03:28.533 --> 00:03:31.866
And for that you can go to
this extensions part here

73
00:03:31.866 --> 00:03:35.000
in that sidebar or by using that shortcut

74
00:03:35.000 --> 00:03:38.500
or by using view, extensions,

75
00:03:38.500 --> 00:03:41.366
and then here, the
first extension you need

76
00:03:41.366 --> 00:03:44.200
is the Flutter extension.

77
00:03:45.500 --> 00:03:48.966
So search for Flutter and then make sure

78
00:03:48.966 --> 00:03:51.033
you installed that extension.

79
00:03:51.033 --> 00:03:52.800
That's an extension maintained

80
00:03:52.800 --> 00:03:55.233
by the official Dart and Flutter team,

81
00:03:55.233 --> 00:03:57.900
and it will make developing Flutter apps

82
00:03:57.900 --> 00:04:01.433
with Visual studio code much, much easier.

83
00:04:01.433 --> 00:04:03.100
So definitely install that.

84
00:04:03.966 --> 00:04:07.800
That will then automatically
also install another extension,

85
00:04:07.800 --> 00:04:09.233
the Dart extension,

86
00:04:09.233 --> 00:04:12.333
which you don't need to install separately

87
00:04:12.333 --> 00:04:16.300
therefore, which also helps
with writing Dart code.

88
00:04:16.300 --> 00:04:20.233
And since Flutter uses
Dart, this is also helpful.

89
00:04:20.233 --> 00:04:21.466
Now I'll quickly reload here

90
00:04:21.466 --> 00:04:25.366
since I'm prompted for that
but that's now the first step.

91
00:04:25.366 --> 00:04:27.266
And then there's one last extension,

92
00:04:27.266 --> 00:04:29.100
which you can also install

93
00:04:29.100 --> 00:04:31.633
and that's the material icon extension.

94
00:04:31.633 --> 00:04:34.266
Now this is purely visual,

95
00:04:34.266 --> 00:04:36.400
but I'm using it throughout this course.

96
00:04:36.400 --> 00:04:39.266
It changes the file icons in our project.

97
00:04:39.266 --> 00:04:40.666
So I will install it.

98
00:04:40.666 --> 00:04:44.200
And then after installing
it, choose adhere to set it.

99
00:04:44.200 --> 00:04:47.600
And this is just cosmetics.
It's not required.

100
00:04:47.600 --> 00:04:51.200
But I like to look up the
file icons this gives me.

101
00:04:52.700 --> 00:04:55.866
Okay, now we've got all
these extensions installed.

102
00:04:55.866 --> 00:04:59.900
Now we can go here to the
explorer and open a new folder,

103
00:04:59.900 --> 00:05:03.200
open a new project into Visual studio code

104
00:05:03.200 --> 00:05:05.600
so that we can edit it here.

105
00:05:05.600 --> 00:05:08.800
And here I'm simply picking
that first app folder,

106
00:05:08.800 --> 00:05:13.066
which I created a second
ago with Flutter create

107
00:05:13.066 --> 00:05:16.000
and open that here in Visual studio code.

108
00:05:16.000 --> 00:05:17.833
I'm opening the entire folder.

109
00:05:17.833 --> 00:05:19.433
I'm not selecting the files in there,

110
00:05:19.433 --> 00:05:22.233
but the entire folder and click open.

111
00:05:22.233 --> 00:05:26.500
And this will now give me
this project set up here.

112
00:05:27.866 --> 00:05:32.133
Now the exact files and
folders you might be getting

113
00:05:32.133 --> 00:05:35.166
could differ a little bit over time,

114
00:05:35.166 --> 00:05:37.066
but you should have a lib folder,

115
00:05:37.066 --> 00:05:40.233
you should have an
Android and an iOS folder

116
00:05:40.233 --> 00:05:42.500
since we are on MacOS here.

117
00:05:42.500 --> 00:05:43.966
You should have a test folder,

118
00:05:43.966 --> 00:05:46.600
you should have a pubspec
backward yaml file,

119
00:05:46.600 --> 00:05:49.233
and then you are pretty much good to go.

120
00:05:50.333 --> 00:05:53.833
Now since the exact folder structure

121
00:05:53.833 --> 00:05:56.333
and also the starting project you get

122
00:05:56.333 --> 00:06:01.333
can differ over time, attached
you find my pubspec.yml file

123
00:06:01.833 --> 00:06:04.466
and my main.dart file.

124
00:06:04.466 --> 00:06:07.100
And you should use these attached files

125
00:06:07.100 --> 00:06:11.266
to replace your main.dart
file into lip folder with mine

126
00:06:11.266 --> 00:06:15.900
and delete any other Dart
files you might have in there

127
00:06:15.900 --> 00:06:18.933
if you have more than just main.dart.

128
00:06:18.933 --> 00:06:22.300
Delete anything else so that
you have just a lip folder

129
00:06:22.300 --> 00:06:26.366
with my attached main.dart file in there.

130
00:06:26.366 --> 00:06:30.500
And replace your
pubspec.yml file with mine

131
00:06:30.500 --> 00:06:33.066
simply to make following
along with this course

132
00:06:33.066 --> 00:06:35.433
and this lecture much easier.

133
00:06:37.666 --> 00:06:40.733
Now I will walk you through
these folders and files

134
00:06:40.733 --> 00:06:43.666
and what they do in the
next course section.

135
00:06:43.666 --> 00:06:46.200
So for the moment we'll
just take them for granted

136
00:06:46.200 --> 00:06:47.500
and ignore them.

137
00:06:47.500 --> 00:06:50.033
I can say that the pubspec.yml file

138
00:06:50.033 --> 00:06:53.733
is an important configuration
file for our project

139
00:06:53.733 --> 00:06:57.033
and the lib folder holds
the main source code

140
00:06:57.033 --> 00:06:58.100
for our project.

141
00:06:58.100 --> 00:06:59.366
So instead lib folder

142
00:06:59.366 --> 00:07:01.766
in which we will write our Flutter code.

143
00:07:02.833 --> 00:07:05.433
But I don't wanna dive too
much into that right now,

144
00:07:05.433 --> 00:07:07.200
we'll do that in the next section,

145
00:07:07.200 --> 00:07:10.600
instead I now wanna start
this Flutter project

146
00:07:10.600 --> 00:07:11.966
on an emulator

147
00:07:11.966 --> 00:07:14.800
so that we can see this
Flutter app in action.

148
00:07:16.466 --> 00:07:20.966
And for this, what you can
do is in Visual studio code,

149
00:07:20.966 --> 00:07:24.833
go to terminal new terminal here,

150
00:07:24.833 --> 00:07:28.166
to open your regular system terminal,

151
00:07:28.166 --> 00:07:31.600
but integrated into this project here,

152
00:07:31.600 --> 00:07:34.166
integrated into Visual studio code.

153
00:07:34.166 --> 00:07:37.600
Which is good because that
means you can have your code

154
00:07:37.600 --> 00:07:40.366
and this terminal on the same screen.

155
00:07:42.766 --> 00:07:46.300
And then here in this
terminal, what you can do

156
00:07:46.300 --> 00:07:50.100
to run this project is
you can run Flutter run.

157
00:07:50.100 --> 00:07:52.500
But, before you do that,

158
00:07:52.500 --> 00:07:55.466
you need to make sure
that you have an emulator

159
00:07:55.466 --> 00:07:56.833
up and running.

160
00:07:56.833 --> 00:08:01.833
And that could be the iOS
emulator or the Android emulator.

161
00:08:03.533 --> 00:08:06.333
Now here I'll go for the Android emulator

162
00:08:06.333 --> 00:08:08.633
since I will use the Android emulator

163
00:08:08.633 --> 00:08:10.566
for the majority of this course,

164
00:08:10.566 --> 00:08:14.433
since a windows students
can only build for Android

165
00:08:14.433 --> 00:08:16.633
and hence I wanna use the emulator

166
00:08:16.633 --> 00:08:18.800
all the students can use here.

167
00:08:18.800 --> 00:08:20.833
You could also use iOS,

168
00:08:20.833 --> 00:08:22.800
but if you're facing any problems there,

169
00:08:22.800 --> 00:08:25.166
ignore them for now, later in the course

170
00:08:25.166 --> 00:08:29.000
I will in detail again, show
you how to configure X code

171
00:08:29.000 --> 00:08:32.433
and run your Flutter
app on a real iOS device

172
00:08:32.433 --> 00:08:35.100
and on an iOS simulator.

173
00:08:35.100 --> 00:08:37.866
So for the moment I'll use Android here.

174
00:08:37.866 --> 00:08:42.400
And hence in Android studio,
open that ABD manager,

175
00:08:42.400 --> 00:08:45.600
as we learned it in the
previous course lecture,

176
00:08:45.600 --> 00:08:50.200
and then start that emulator
that I created there again,

177
00:08:51.100 --> 00:08:54.700
so that I have this Android
emulator up and running,

178
00:08:54.700 --> 00:08:57.400
which I use for testing my Android app,

179
00:08:57.400 --> 00:08:59.266
my Flutter app on Android.

180
00:09:00.300 --> 00:09:03.000
Here it is starting up.

181
00:09:03.000 --> 00:09:04.933
Let me close this here.

182
00:09:05.933 --> 00:09:09.500
And now that the Android
emulator is up and running

183
00:09:09.500 --> 00:09:10.400
for me here,

184
00:09:11.300 --> 00:09:16.300
back here in Visual studio code
in this integrated terminal,

185
00:09:16.633 --> 00:09:19.200
we can run Flutter run.

186
00:09:19.200 --> 00:09:21.966
And what this should do normally

187
00:09:21.966 --> 00:09:26.733
is it should now convert
this Flutter project

188
00:09:26.733 --> 00:09:31.733
into an Android app and start
it on the Android emulator.

189
00:09:32.166 --> 00:09:34.700
It won't do that if you
don't have an emulator

190
00:09:34.700 --> 00:09:35.600
up and running,

191
00:09:35.600 --> 00:09:39.366
then it might try to start
this as a web application,

192
00:09:39.366 --> 00:09:42.700
but we're not focusing on web
applications in this course.

193
00:09:42.700 --> 00:09:45.900
So really make sure you
have your Android emulator

194
00:09:45.900 --> 00:09:46.766
up and running.

195
00:09:48.033 --> 00:09:49.766
Now, if "flutter run"

196
00:09:49.766 --> 00:09:53.766
would still run your Flutter app as a web app.

197
00:09:53.766 --> 00:09:56.400
So not on that Android emulator.

198
00:09:56.733 --> 00:09:59.433
You can also control for which target

199
00:09:59.433 --> 00:10:02.366
device this app is built and executed

200
00:10:02.866 --> 00:10:06.433
by making sure that in Visual Studio Code

201
00:10:06.766 --> 00:10:09.266
your able to view the status bar.

202
00:10:10.733 --> 00:10:13.833
Because in that status bar at the bottom

203
00:10:14.133 --> 00:10:17.900
you can
click on this device and that might be saying

204
00:10:17.900 --> 00:10:22.166
"Chrome" or "No device" for you or anything like that.

205
00:10:22.400 --> 00:10:26.366
But you can
then click on that device thing here at the bottom

206
00:10:26.766 --> 00:10:30.200
and then simply choose your target device.

207
00:10:30.266 --> 00:10:34.866
And here
you should choose your emulator, your simulator.

208
00:10:34.866 --> 00:10:39.233
You should choose an iOS or Android device here.

209
00:10:39.666 --> 00:10:43.200
And then
once you did select a device here, "flutter run"

210
00:10:43.400 --> 00:10:48.933
will build this
app for this device and run the app on this device.

211
00:10:51.000 --> 00:10:54.733
Now, the first time you start
this, it can take a while

212
00:10:54.733 --> 00:10:58.800
because it's going through
that complete build process.

213
00:10:58.800 --> 00:11:01.833
It's converting your
Flutter code to machine code

214
00:11:01.833 --> 00:11:04.400
and building it as an Android app.

215
00:11:04.400 --> 00:11:07.500
Under the hood it's using
Android studio for that

216
00:11:07.500 --> 00:11:09.333
and therefore the first time you run this,

217
00:11:09.333 --> 00:11:11.566
this can take a while.

218
00:11:11.566 --> 00:11:14.100
So let's be patient here

219
00:11:14.100 --> 00:11:17.533
and wait for this startup
process to finish.

220
00:11:19.800 --> 00:11:24.133
And now it's installing that
built app on the emulator.

221
00:11:24.133 --> 00:11:27.933
So here on the emulator you see
that something is happening.

222
00:11:29.200 --> 00:11:31.000
And here we go now.

223
00:11:31.000 --> 00:11:33.933
This now is running and you
can tell that it's running

224
00:11:33.933 --> 00:11:36.800
by the fact that I'm not
getting any error here.

225
00:11:36.800 --> 00:11:39.500
That I see a couple of
commands, which I can use.

226
00:11:39.500 --> 00:11:40.933
I'll come back to them later.

227
00:11:40.933 --> 00:11:44.400
And that this process didn't finish.

228
00:11:44.400 --> 00:11:47.833
I'm not back into the
regular input mode again

229
00:11:47.833 --> 00:11:52.500
instead we now have this
running administration mode here

230
00:11:52.500 --> 00:11:56.300
where we can administer
the running application

231
00:11:56.300 --> 00:11:59.100
and I'll come back to what I
mean with that in a second.

232
00:11:59.966 --> 00:12:01.733
If you have a look at the emulator,

233
00:12:01.733 --> 00:12:04.200
you should see this output here

234
00:12:04.200 --> 00:12:07.233
with that starting project I gave to you.

235
00:12:09.133 --> 00:12:11.900
And here you got this
button, which you can click.

236
00:12:11.900 --> 00:12:13.933
And if you do click this button here,

237
00:12:13.933 --> 00:12:17.100
you have this counter, that increments.

238
00:12:17.100 --> 00:12:19.800
It might be a bit slow
initially, but no worries

239
00:12:19.800 --> 00:12:21.633
that's not Flutter in general,

240
00:12:21.633 --> 00:12:24.233
but this emulator can be a bit slow

241
00:12:24.233 --> 00:12:26.100
also depending on your hardware.

242
00:12:26.100 --> 00:12:28.866
And since I'm recording
my screen whilst using it,

243
00:12:28.866 --> 00:12:31.800
it's especially not extremely fast.

244
00:12:31.800 --> 00:12:33.600
But you shouldn't be
able to interact here.

245
00:12:33.600 --> 00:12:36.800
And this is now our first Flutter app

246
00:12:36.800 --> 00:12:41.033
built as an Android app,
running on an Android phone.

247
00:12:41.033 --> 00:12:44.166
A virtual one but still an Android phone.

248
00:12:45.066 --> 00:12:48.766
And the code for that
app is here in main.dart.

249
00:12:48.766 --> 00:12:51.133
Now again, we'll dive into
that code and understand it

250
00:12:51.133 --> 00:12:54.700
through out course, starting
in the next core section.

251
00:12:54.700 --> 00:12:56.733
But in the end here we have code

252
00:12:56.733 --> 00:12:59.133
for rendering this user interface,

253
00:12:59.133 --> 00:13:02.466
for rendering a couple of
those so-called widgets

254
00:13:02.466 --> 00:13:06.133
on this user interface, and
for managing that counter.

255
00:13:07.500 --> 00:13:10.466
Now what's nice about the
development experience you get

256
00:13:10.466 --> 00:13:14.233
with Flutter, is that after
this initial start here,

257
00:13:14.233 --> 00:13:17.300
you don't have to stop
this running process

258
00:13:17.300 --> 00:13:19.333
and run Flutter run again,

259
00:13:19.333 --> 00:13:22.033
whenever you change anything in your code.

260
00:13:22.033 --> 00:13:26.100
But instead you can make
code changes and reload,

261
00:13:26.100 --> 00:13:28.066
hot reload, as it's called,

262
00:13:28.066 --> 00:13:31.733
that running application
to see changes immediately.

263
00:13:31.733 --> 00:13:35.300
For example, let's say here in line 58,

264
00:13:35.300 --> 00:13:37.133
we wanna change counter

265
00:13:37.133 --> 00:13:41.233
to set it equal to counter plus two.

266
00:13:41.233 --> 00:13:43.900
You don't need to fully
understand the code yet,

267
00:13:43.900 --> 00:13:46.066
but what this will do is it will make sure

268
00:13:46.066 --> 00:13:47.766
that whenever we click the button,

269
00:13:47.766 --> 00:13:50.266
the counter is not incremented by one,

270
00:13:50.266 --> 00:13:52.233
but instead increased by two.

271
00:13:53.300 --> 00:13:55.533
If you do that and you save the file

272
00:13:55.533 --> 00:14:00.200
by pressing command
safe or using file safe,

273
00:14:00.200 --> 00:14:03.766
then right now, it still increments by one

274
00:14:03.766 --> 00:14:05.400
if I clicked the button.

275
00:14:06.366 --> 00:14:09.500
But here in this terminal,

276
00:14:09.500 --> 00:14:12.500
you see that we got a couple
of commands we can issue.

277
00:14:12.500 --> 00:14:15.333
And one of them is the hot reload command,

278
00:14:15.333 --> 00:14:18.233
which simply means that our updated code

279
00:14:18.233 --> 00:14:21.033
will be injected into this running app,

280
00:14:21.033 --> 00:14:23.400
which is nice during development.

281
00:14:23.400 --> 00:14:28.400
So by pressing R once it
will perform that hot reload

282
00:14:28.966 --> 00:14:31.900
and now you see I still
have my old counter here,

283
00:14:31.900 --> 00:14:35.733
but if I now click plus
it's increased by two.

284
00:14:35.733 --> 00:14:39.566
So that code change was
injected into the running app

285
00:14:39.566 --> 00:14:42.166
and that makes development super efficient

286
00:14:42.166 --> 00:14:44.500
because we don't have to stop everything

287
00:14:44.500 --> 00:14:46.333
and restart the entire app

288
00:14:46.333 --> 00:14:49.266
just because we made one tiny code change.

289
00:14:50.166 --> 00:14:53.400
Now if this breaks for some
reason or doesn't work,

290
00:14:53.400 --> 00:14:56.266
you can always also do a full restart

291
00:14:56.266 --> 00:15:01.266
by pressing shift + R and
then it will restart the app.

292
00:15:01.933 --> 00:15:05.000
The counter will there
for reset to zero here,

293
00:15:05.000 --> 00:15:08.500
but you still don't need
to quit the entire process

294
00:15:08.500 --> 00:15:10.566
and run Flutter run again,

295
00:15:10.566 --> 00:15:12.766
instead of just to restart at the app

296
00:15:12.766 --> 00:15:14.433
based on the latest code now.

297
00:15:15.800 --> 00:15:18.900
And that's how our development
flow could look like

298
00:15:18.900 --> 00:15:21.200
when using flutter run in the terminal.

299
00:15:22.100 --> 00:15:24.033
But I'm saying could look like

300
00:15:24.033 --> 00:15:26.633
because of with Visual studio code

301
00:15:26.633 --> 00:15:29.033
and the flatter extension installed there,

302
00:15:29.033 --> 00:15:32.066
we don't even have to use this approach.

303
00:15:32.066 --> 00:15:35.000
Instead I'll quit this
running process here

304
00:15:35.000 --> 00:15:39.700
by pressing Ctrl + C
here in that terminal.

305
00:15:39.700 --> 00:15:42.233
And I'll close that terminal.

306
00:15:42.233 --> 00:15:45.633
Instead of using Flutter
run there, which you could,

307
00:15:45.633 --> 00:15:50.333
I'm going to go to my
menu here and then run.

308
00:15:50.333 --> 00:15:53.600
And then here we can
start debugging this app

309
00:15:53.600 --> 00:15:55.900
or run it without debugging.

310
00:15:55.900 --> 00:15:57.266
And that's what all do here.

311
00:15:57.266 --> 00:15:59.500
I'll choose run without debugging.

312
00:16:01.133 --> 00:16:03.566
And what this will do for me now here,

313
00:16:03.566 --> 00:16:08.566
is it will again start this
Flutter app on this emulator,

314
00:16:08.800 --> 00:16:13.333
but it will execute Flutter
run behind the scenes.

315
00:16:13.333 --> 00:16:16.366
Now for you it might
first of all prompt you

316
00:16:16.366 --> 00:16:18.766
how you wanna run this application.

317
00:16:18.766 --> 00:16:21.166
It might show a little dropdown

318
00:16:21.166 --> 00:16:25.033
where you can then
choose Dart as an option

319
00:16:25.033 --> 00:16:26.733
or Flutter and Dart.

320
00:16:26.733 --> 00:16:30.833
So choose that option if
you are prompted to choose

321
00:16:30.833 --> 00:16:34.100
how to execute this app,
choose Dart and Flutter,

322
00:16:34.100 --> 00:16:37.833
or just Dart in the dropdown
you might be getting there.

323
00:16:39.700 --> 00:16:42.600
Once this is running you
also might get this popup

324
00:16:42.600 --> 00:16:44.600
regarding the Dart dev tools

325
00:16:44.600 --> 00:16:46.700
and here we'll dive into them later.

326
00:16:46.700 --> 00:16:48.833
I'll choose not now for now.

327
00:16:50.166 --> 00:16:53.000
Now we also got this terminal down there,

328
00:16:53.000 --> 00:16:56.400
but it's actually not the
same terminal as before.

329
00:16:56.400 --> 00:16:59.866
It's just a debug console
that locks some warnings

330
00:16:59.866 --> 00:17:04.500
or some information messages
to us that we might be getting.

331
00:17:04.500 --> 00:17:08.599
But we now got this part
here with some controls

332
00:17:08.599 --> 00:17:13.066
that we can use to
control the running app.

333
00:17:13.066 --> 00:17:16.200
For example here, we got this flash,

334
00:17:16.200 --> 00:17:19.200
which is now our hot reload button.

335
00:17:19.200 --> 00:17:21.400
So instead of pressing R,

336
00:17:21.400 --> 00:17:24.500
we can click this button to hot reload.

337
00:17:24.500 --> 00:17:26.032
But we don't even have to do that

338
00:17:26.032 --> 00:17:28.099
if I change my code and save this,

339
00:17:28.099 --> 00:17:31.133
this will actually be
issued automatically.

340
00:17:31.133 --> 00:17:34.500
So now Flutter will watch
my code changes here

341
00:17:34.500 --> 00:17:37.500
and whenever I save my
code after changing it,

342
00:17:37.500 --> 00:17:41.033
it will automatically
trigger a hot reload.

343
00:17:41.033 --> 00:17:45.900
So then I automatically get
this new code in effect here.

344
00:17:45.900 --> 00:17:49.000
So we could manually trigger
it by clicking the flash,

345
00:17:49.000 --> 00:17:50.700
but we don't have to.

346
00:17:50.700 --> 00:17:53.033
If we wanna do a full hot restart,

347
00:17:53.033 --> 00:17:58.033
we can click this green arrow
here and then do that restart,

348
00:17:58.400 --> 00:18:02.366
which we previously did
by pressing shift + R.

349
00:18:02.366 --> 00:18:03.933
And if we're done for the moment,

350
00:18:03.933 --> 00:18:07.733
we can press this stop
icon to stop running this,

351
00:18:07.733 --> 00:18:09.466
and then it will terminate this.

352
00:18:09.466 --> 00:18:13.366
We can close this console and
we can always rerun by again,

353
00:18:13.366 --> 00:18:15.833
choosing run, run without debugging.

354
00:18:17.066 --> 00:18:20.300
So that's how we will now
manage and run this Flutter app

355
00:18:20.300 --> 00:18:21.833
for the rest of this course,

356
00:18:21.833 --> 00:18:24.766
since this simply is a bit more convenient

357
00:18:24.766 --> 00:18:26.866
than having to use Flutter run

358
00:18:26.866 --> 00:18:29.266
and having to hot reload manually.

359
00:18:29.266 --> 00:18:30.233
That's why I'm using

360
00:18:30.233 --> 00:18:33.033
this FlUtter extension
driven approach instead.

361
00:18:34.366 --> 00:18:37.433
Now with that we have the
development set up we need

362
00:18:37.433 --> 00:18:41.366
for MacOS for building Flutter projects

363
00:18:41.366 --> 00:18:44.566
as apps for iOS and Android.

364
00:18:44.566 --> 00:18:46.333
And then for now and the next lectures

365
00:18:46.333 --> 00:18:48.900
I'll show the same approach for windows.

366
00:18:48.900 --> 00:18:53.000
Of course, you can skip that
if you are only using MacOS

367
00:18:53.000 --> 00:18:54.966
and then in the next core section,

368
00:18:54.966 --> 00:18:57.233
I will then dive into
that code a bit more,

369
00:18:57.233 --> 00:18:59.500
and we're going to learn
how Flutter and Dart

370
00:18:59.500 --> 00:19:01.500
works from the ground up.

371
00:19:01.500 --> 00:19:04.100
Before we do that though,
in the next lectures,

372
00:19:04.100 --> 00:19:05.633
after the windows set up,

373
00:19:05.633 --> 00:19:08.733
I'll walk you through what you
can expect from the course,

374
00:19:08.733 --> 00:19:12.400
and through other aspects of
working with Flutter as well.

