WEBVTT
1
1

00:00:00.126  -->  00:00:03.376
(upbeat ambient music)
2

2

00:00:05.400  -->  00:00:07.390
<v Instructor>Alright, for this first challenge,</v>
3

3

00:00:07.390  -->  00:00:12.390
I want you to add methods to do a pre-order traversal
4

4

00:00:12.480  -->  00:00:14.100
of our tree implementation.
5

5

00:00:14.100  -->  00:00:16.830
So the starter project in the resources area
6

6

00:00:16.830  -->  00:00:19.740
is essentially the tree implementation,
7

7

00:00:19.740  -->  00:00:21.610
the simple implementation of a tree
8

8

00:00:21.610  -->  00:00:25.580
that we did in this section, and we added methods
9

9

00:00:25.580  -->  00:00:27.500
to the tree and the tree node class
10

10

00:00:27.500  -->  00:00:31.560
to do an in-order traversal, but we didn't add methods
11

11

00:00:31.560  -->  00:00:34.110
for pre-order or post-order traversal.
12

12

00:00:34.110  -->  00:00:36.580
Now remember that a pre-order traversal
13

13

00:00:36.580  -->  00:00:39.020
means that we visit the root first.
14

14

00:00:39.020  -->  00:00:42.880
And so, this is our tree, and a pre-order traversal
15

15

00:00:42.880  -->  00:00:46.380
would be 25, because we visit the root first,
16

16

00:00:46.380  -->  00:00:48.810
and then we go down to its left subtree
17

17

00:00:48.810  -->  00:00:51.980
and visit its left subtree and so in this subtree,
18

18

00:00:51.980  -->  00:00:53.730
we're also gonna visit the root first.
19

19

00:00:53.730  -->  00:00:57.390
So we'll do 20, and then we wanna visit its left subtree
20

20

00:00:57.390  -->  00:01:00.110
while we're gonna do the root of the left subtree first,
21

21

00:01:00.110  -->  00:01:02.870
so we'll do 15, there's no left subtree,
22

22

00:01:02.870  -->  00:01:04.750
so then we'll do 17.
23

23

00:01:04.750  -->  00:01:08.360
Then we move back up, we've completed 20's left subtree,
24

24

00:01:08.360  -->  00:01:11.210
so now we visit the right subtree, that's 22.
25

25

00:01:11.210  -->  00:01:13.350
Now, we finish the root's left subtree,
26

26

00:01:13.350  -->  00:01:15.270
so now we wanna visit it's right subtree.
27

27

00:01:15.270  -->  00:01:18.210
We're gonna visit the root first, 27.
28

28

00:01:18.210  -->  00:01:20.870
Then we're gonna visit its left subtree,
29

29

00:01:20.870  -->  00:01:22.560
there's just 26 there.
30

30

00:01:22.560  -->  00:01:24.350
We wanna now do its right subtree,
31

31

00:01:24.350  -->  00:01:27.223
so we'll do 30, 29, and 32.
32

32

00:01:27.223  -->  00:01:30.470
With the pre-order, you always visit the root first,
33

33

00:01:30.470  -->  00:01:32.430
and then you visit its left subtree
34

34

00:01:32.430  -->  00:01:33.630
and then its right subtree.
35

35

00:01:33.630  -->  00:01:35.710
But of course, for each subtree,
36

36

00:01:35.710  -->  00:01:37.400
you also visit the root first,
37

37

00:01:37.400  -->  00:01:39.430
and then the left, and then the right.
38

38

00:01:39.430  -->  00:01:43.090
So this should be a fairly easy challenge I would say,
39

39

00:01:43.090  -->  00:01:46.840
but go ahead and add the methods
40

40

00:01:46.840  -->  00:01:50.793
for pre-order traversal to the tree and the tree node class.
