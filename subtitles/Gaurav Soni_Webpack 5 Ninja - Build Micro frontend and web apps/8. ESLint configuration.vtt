WEBVTT
1
00:00:00.060 --> 00:00:05.220
Hey guys, welcome to a final video on creating a React application using a custom pack build.

2
00:00:05.640 --> 00:00:09.930
Now in this video, we're going to be seeing a few things which are going to be making our code more

3
00:00:09.930 --> 00:00:11.790
standardized in our organization.

4
00:00:12.150 --> 00:00:14.550
And that is using the plugin called As is linked.

5
00:00:15.030 --> 00:00:20.280
Now, if you are not used easily before yesterday, it basically helps you to make this syntax similar

6
00:00:20.280 --> 00:00:21.480
across all the developers.

7
00:00:21.900 --> 00:00:27.900
So for example, if I'm a developer who uses two spaces after each of the function or maybe like four

8
00:00:27.900 --> 00:00:34.050
spaces after creating an object, and some other developer is using some other number of spaces, things

9
00:00:34.050 --> 00:00:38.700
like this and other things such as how is the naming convention should be followed, what are the file

10
00:00:38.700 --> 00:00:40.350
types that you can use and so on.

11
00:00:40.380 --> 00:00:45.120
So there are like multiple rules that can be implemented using s linked and that differs according to

12
00:00:45.120 --> 00:00:46.050
the organizations.

13
00:00:46.560 --> 00:00:51.390
Now, before we go ahead, I would like to show you what are the things that I installed regarding Iceland?

14
00:00:51.840 --> 00:00:54.030
Now you can see that a couple of things installed over here.

15
00:00:54.540 --> 00:00:59.310
So we have the main Iceland library, then we have the Eastern configuration, Airbnb.

16
00:00:59.730 --> 00:01:04.590
So we are going to be using the Airbnb configurations, all the rules that Airbnb has set up for their

17
00:01:04.590 --> 00:01:05.040
company.

18
00:01:05.460 --> 00:01:10.380
So this is quite standardized among all the organizations, quite good and easy to follow.

19
00:01:10.930 --> 00:01:13.950
And then we have the excellent loader which are going to be using shortly.

20
00:01:14.490 --> 00:01:17.430
Then we also have the mean yes and the pack plugin.

21
00:01:17.910 --> 00:01:21.510
And then there are some additional side plugins which are used for React especially.

22
00:01:21.780 --> 00:01:25.350
So that is basically understand the React syntax.

23
00:01:26.190 --> 00:01:26.570
Okay.

24
00:01:26.580 --> 00:01:28.500
So that is about the installation.

25
00:01:28.530 --> 00:01:30.690
Let's go ahead and see how do we configuring it.

26
00:01:31.200 --> 00:01:33.630
Now, similar to the plugin, we need to be first importing it.

27
00:01:33.640 --> 00:01:34.710
So as a concept.

28
00:01:35.340 --> 00:01:35.940
Yes.

29
00:01:36.090 --> 00:01:39.360
Learned plugin equals to required.

30
00:01:39.600 --> 00:01:43.770
And in here I'll put it as is linked that back plugin.

31
00:01:44.640 --> 00:01:44.910
Okay.

32
00:01:44.910 --> 00:01:45.470
So that's done.

33
00:01:45.480 --> 00:01:47.210
Now we can go ahead and use this plugin.

34
00:01:47.250 --> 00:01:52.770
So I'll come here in my plugin section and say new is learned plugin and then initialize it.

35
00:01:53.280 --> 00:01:57.330
Well, that's pretty much it that needs to be doing for this plugin section.

36
00:01:57.510 --> 00:02:02.160
But isn't it requires a configuration file that needs to be added to our repository.

37
00:02:02.580 --> 00:02:06.150
So if I just come back to our 10.1 right click and say new file.

38
00:02:06.690 --> 00:02:09.690
Yes, it needs a configuration file called as DOT.

39
00:02:09.930 --> 00:02:11.610
Yes, link RC.

40
00:02:12.060 --> 00:02:13.260
So that's the name of the file.

41
00:02:13.590 --> 00:02:16.710
And in here we need to be passing in a configuration object.

42
00:02:17.190 --> 00:02:19.530
So let's see how the configuration object looks like.

43
00:02:20.010 --> 00:02:24.630
Now, you do not really need to memorize this because when you're doing the configuration, you'll generally

44
00:02:24.630 --> 00:02:29.670
go to the yes and website, then try to follow the documentation and then, you know, use it according

45
00:02:29.670 --> 00:02:30.180
to your needs.

46
00:02:30.570 --> 00:02:33.370
But let's just see the basic configuration, what can be done.

47
00:02:33.390 --> 00:02:36.060
I'm not going to be going too much into depth in the linked.

48
00:02:36.450 --> 00:02:39.720
So the first parameter that we need to be specifying is the parser.

49
00:02:40.170 --> 00:02:41.760
So that's going to be the parser.

50
00:02:42.030 --> 00:02:44.300
And we are going to be specifying Babel as the parcel.

51
00:02:44.310 --> 00:02:48.210
So I put it as Babel is linked.

52
00:02:48.750 --> 00:02:49.690
So that's the parser.

53
00:02:49.770 --> 00:02:52.920
The second configuration that we need to be parsing in is extent.

54
00:02:54.060 --> 00:02:55.440
So in here we'll see.

55
00:02:55.450 --> 00:02:57.780
It's going to be extending Airbnb.

56
00:02:58.110 --> 00:03:00.300
So that's Airbnb configuration file.

57
00:03:01.170 --> 00:03:02.520
Okay, so that's done.

58
00:03:02.640 --> 00:03:06.870
Now we can sort of go ahead and run our incident configurations and see what happens.

59
00:03:07.440 --> 00:03:14.040
So, for example, let me just open up my console and say NPM, run, build.

60
00:03:15.240 --> 00:03:16.650
So let's just give it a try.

61
00:03:17.250 --> 00:03:17.550
Okay.

62
00:03:17.550 --> 00:03:18.440
So we have done this.

63
00:03:18.450 --> 00:03:21.180
Now you can see that there are the five problems over here in total.

64
00:03:21.540 --> 00:03:23.550
And there was like one error also.

65
00:03:24.120 --> 00:03:28.740
So this is sort of expected and this is the natural behavior that you would get.

66
00:03:29.100 --> 00:03:31.870
Now, in your case, you might be seeing a little bit more errors.

67
00:03:31.870 --> 00:03:33.810
So don't don't really worry about it.

68
00:03:34.200 --> 00:03:35.600
So that's that's totally fine.

69
00:03:35.610 --> 00:03:37.440
Let's see how we can be fixing this errors.

70
00:03:38.010 --> 00:03:40.590
Now, there are two ways of sort of fixing this errors.

71
00:03:40.860 --> 00:03:44.250
So one of the ways is automatic in which you can be fixing some simple errors.

72
00:03:44.730 --> 00:03:50.340
So since we do not have any sort of simple errors over here in my case, because I've ran this multiple

73
00:03:50.340 --> 00:03:50.700
times.

74
00:03:51.030 --> 00:03:53.160
So what I'm going to do here is I want to be creating an error.

75
00:03:53.160 --> 00:03:58.160
So let's just go to the AB Dodgers and I'm going to be making some changes here.

76
00:03:58.170 --> 00:04:04.950
So for example, let me put some spaces here, here as well, and let's try to just save this file and

77
00:04:04.950 --> 00:04:07.290
I'm going to be running this NPM run build once again.

78
00:04:08.100 --> 00:04:08.910
Okay, so that's done.

79
00:04:08.910 --> 00:04:10.550
Now you can see that there are a lot of errors.

80
00:04:10.560 --> 00:04:13.020
The indentation is wrong for many of the places.

81
00:04:13.440 --> 00:04:16.320
And then we also see errors regarding the import extensions.

82
00:04:16.680 --> 00:04:20.130
Then we have a reactive gsx file name extension.

83
00:04:20.130 --> 00:04:24.450
So it's not able to understand that GSX is a valid file format.

84
00:04:24.870 --> 00:04:29.460
So how you can be teaching it when you go to the ESL and asked the configuration file?

85
00:04:29.850 --> 00:04:32.280
And in here we add additional parameters.

86
00:04:32.790 --> 00:04:34.410
So it's called US rules.

87
00:04:34.680 --> 00:04:37.020
And in the notes we are going to be defining couple of rules.

88
00:04:37.470 --> 00:04:42.090
So what do you see over here is actually a rule name, so I can just copy this rule in from here.

89
00:04:43.210 --> 00:04:44.260
Pasted right here.

90
00:04:44.890 --> 00:04:51.340
And in this, I can sort of enable this rule by saying one, and then I need to be passing an additional

91
00:04:51.340 --> 00:04:51.850
object.

92
00:04:52.030 --> 00:04:55.990
Now, in this object, I'm going to be specifying what allowed these supported file limits.

93
00:04:56.020 --> 00:04:59.390
So we can pass in parameter called as extensions.

94
00:04:59.890 --> 00:05:05.650
And in this, we are going to be seeing an added and we will see that we support to file format.

95
00:05:05.660 --> 00:05:07.160
So that is the DE.

96
00:05:07.240 --> 00:05:11.020
S format as well as the DOT Gsx format.

97
00:05:11.620 --> 00:05:13.210
So these are the two valid formats.

98
00:05:13.360 --> 00:05:14.500
So let me just save that.

99
00:05:15.010 --> 00:05:21.340
And I'm also going to be sort of mitigating this import extension's error because it says that you cannot

100
00:05:21.340 --> 00:05:24.160
have this dot gsx in the end of the file.

101
00:05:24.550 --> 00:05:26.980
So this is not a file like a valid file extension.

102
00:05:26.980 --> 00:05:28.720
So we need to sort of mitigate that as well.

103
00:05:29.140 --> 00:05:35.320
So let me just put a comma here and let's add this rule and then I'm just going to be passing the symbol

104
00:05:35.320 --> 00:05:36.970
property saying off.

105
00:05:37.060 --> 00:05:39.310
So I want to be disabling this rule, basically.

106
00:05:39.730 --> 00:05:40.630
So let's save that.

107
00:05:41.290 --> 00:05:43.220
And I want you to notice one more thing.

108
00:05:43.240 --> 00:05:46.750
So you can see that we have a lot of issues that are added.

109
00:05:46.750 --> 00:05:47.470
All right.

110
00:05:47.530 --> 00:05:49.220
So these are still going to remain.

111
00:05:49.360 --> 00:05:51.160
So let's see what happens once we run our build.

112
00:05:51.490 --> 00:05:52.690
So as NPM ran build.

113
00:05:53.650 --> 00:05:53.950
Okay.

114
00:05:53.950 --> 00:05:56.950
So we saw that all the extensions are now valid.

115
00:05:56.950 --> 00:06:01.360
So this rule has been applied and we'd Nazi any errors regarding import extension as well.

116
00:06:01.960 --> 00:06:03.130
Now, how do we fix this error?

117
00:06:03.130 --> 00:06:05.050
Do we need to be going to each file and fixing it?

118
00:06:05.500 --> 00:06:06.330
Well, not really.

119
00:06:06.340 --> 00:06:08.200
We have a loader in place for that.

120
00:06:08.530 --> 00:06:14.560
So if you remember in the package dot, Jason, we had used this East Link loader and let's see how

121
00:06:14.560 --> 00:06:16.480
we can be using it in our back configuration.

122
00:06:17.440 --> 00:06:23.650
So in the Rat Pack configuration, we need to be applying this loader on all the gears and the gsx file.

123
00:06:23.660 --> 00:06:25.870
So it's typically going to go in here.

124
00:06:26.500 --> 00:06:27.480
So let's go down.

125
00:06:27.490 --> 00:06:30.220
We already have one loader setup, which is the paper loader.

126
00:06:30.760 --> 00:06:32.830
So after this, I'm going to be adding another loader.

127
00:06:33.340 --> 00:06:34.810
This is also going to be an object.

128
00:06:35.530 --> 00:06:37.210
Let's specify the name of the loader.

129
00:06:37.750 --> 00:06:39.850
And this is the yes.

130
00:06:39.850 --> 00:06:40.840
Lint loader.

131
00:06:41.260 --> 00:06:43.870
And we also need to be specifying the options.

132
00:06:44.410 --> 00:06:49.570
And this is going to be object as well with the option of fix as true.

133
00:06:50.350 --> 00:06:55.180
So we are basically saying whenever you encounter any of the ideas or the gsx file, try to fix all

134
00:06:55.180 --> 00:06:59.410
the excellent loaders and then try to pass the file using the bid will configurations.

135
00:07:00.220 --> 00:07:00.490
Okay.

136
00:07:00.490 --> 00:07:01.350
So that's pretty much it.

137
00:07:01.360 --> 00:07:05.530
Let me try to save that and just clear the console and see NPM run build.

138
00:07:06.400 --> 00:07:06.870
Awesome.

139
00:07:06.880 --> 00:07:10.780
So we saw that all the rules regarding this basis are automatically fixed.

140
00:07:11.080 --> 00:07:13.510
Now if I just go to the file, also have Node.js.

141
00:07:13.510 --> 00:07:16.540
You can see that it has fixed all of those basic issues.

142
00:07:17.170 --> 00:07:19.390
So you can see that once you have this, yes.

143
00:07:19.390 --> 00:07:23.710
Linked in your project, there's going to be a lot of consistency, a lot of clean looking code.

144
00:07:24.010 --> 00:07:26.440
And this is really important in any JavaScript project.

145
00:07:27.130 --> 00:07:30.070
So that is a very high level or beyond excellent.

146
00:07:30.070 --> 00:07:34.810
You can go to the same documentation and explore more what are the different kind of configuration you

147
00:07:34.810 --> 00:07:35.590
can do and so on.

148
00:07:35.830 --> 00:07:40.090
So this is pretty much an introduction on how to be using easily with the pack.

149
00:07:40.420 --> 00:07:45.370
So I hope you enjoyed and learned a lot from this entire section on React Years and Webpack combination.

150
00:07:45.790 --> 00:07:50.440
So let's go to the next video and just have an overview of what was learned in this section.
