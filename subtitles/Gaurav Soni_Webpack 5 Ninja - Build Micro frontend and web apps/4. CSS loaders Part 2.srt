1
00:00:05,070 --> 00:00:05,820
Welcome back.

2
00:00:05,850 --> 00:00:10,770
In the last video, we saw how to be importing books in our JavaScript file, and that was pretty cool.

3
00:00:10,980 --> 00:00:13,170
But I'm going to be showing you something even more color.

4
00:00:13,530 --> 00:00:16,080
So let's see how theses modules work.

5
00:00:16,680 --> 00:00:20,040
So what I see is as modules and where are they useful?

6
00:00:20,490 --> 00:00:23,610
So to showcase that, I need to be creating an additional file.

7
00:00:24,120 --> 00:00:29,220
So what I want you to be doing is go to the SRT folder and let's go ahead and create a new component

8
00:00:29,220 --> 00:00:29,460
here.

9
00:00:29,910 --> 00:00:34,700
So we are going to be calling this component as clear button dot GS.

10
00:00:35,430 --> 00:00:40,890
So basically the concept is if I just switch over to my browser, I want a new button to be coming up

11
00:00:40,890 --> 00:00:41,100
here.

12
00:00:41,370 --> 00:00:45,270
And when I click on that, I need to be clearing up the list that gets created here.

13
00:00:45,780 --> 00:00:49,350
Well, for now, you're not going to be clearing the list, but we're just going to be showcasing that

14
00:00:49,350 --> 00:00:50,070
particular button.

15
00:00:50,760 --> 00:00:52,500
So let's switch back to our code here.

16
00:00:53,040 --> 00:00:55,980
And in this, what we're going to be doing is creating the button.

17
00:00:55,980 --> 00:01:01,260
So will a contest element equal to document or create element?

18
00:01:01,770 --> 00:01:04,230
And in this, we are going to be creating a button.

19
00:01:04,830 --> 00:01:06,350
So let me just type in button.

20
00:01:06,930 --> 00:01:11,580
So element dot in our achievements or we can also give it a label.

21
00:01:11,880 --> 00:01:13,800
Let's call this as clear.

22
00:01:14,980 --> 00:01:15,320
Cool.

23
00:01:15,970 --> 00:01:20,190
Now we also need to be appending this to a particular DOM element.

24
00:01:20,200 --> 00:01:24,160
So what I'm going to be doing is if I go to the index start estimable, you can see that we have the

25
00:01:24,160 --> 00:01:26,530
body section in which all the other elements are there.

26
00:01:26,890 --> 00:01:28,990
So I'm just going to be appending it after this button.

27
00:01:29,590 --> 00:01:37,120
So just going back to our clear button Roger's, we can see document, dot, body, dot, apparent child

28
00:01:37,210 --> 00:01:39,520
and in here you can just see as element.

29
00:01:40,180 --> 00:01:42,820
The final thing that I want to be doing is adding a click listener.

30
00:01:42,820 --> 00:01:48,670
So I'll say doc element dot on click and that's equal to a function.

31
00:01:49,060 --> 00:01:55,840
And in the function we are not going to be doing the largest C alert as clear clicked.

32
00:01:57,580 --> 00:01:57,960
Cool.

33
00:01:58,000 --> 00:02:01,600
So that looks good just to make sure that things are working as expected.

34
00:02:01,960 --> 00:02:06,650
I need to be first obviously importing this player, but yeah, so what I'll do, I'll go back to the

35
00:02:06,650 --> 00:02:12,700
index ideas and let's import this file here to say import dart slash player button.

36
00:02:13,600 --> 00:02:13,900
Okay.

37
00:02:13,900 --> 00:02:18,490
So as soon as I got here, that code, all these files are going to be called as well.

38
00:02:18,790 --> 00:02:20,530
That's our dependency graph kicking in.

39
00:02:21,370 --> 00:02:23,110
Okay, so let's clear the console.

40
00:02:23,110 --> 00:02:24,970
Let's run and beam, run, build.

41
00:02:26,260 --> 00:02:26,920
Last one.

42
00:02:26,920 --> 00:02:30,190
Let's switch over to a browser refresh and we have a clear button.

43
00:02:30,490 --> 00:02:32,230
If I click on it, it is clear.

44
00:02:32,230 --> 00:02:32,590
Click.

45
00:02:33,160 --> 00:02:33,970
So far, so good.

46
00:02:34,660 --> 00:02:35,020
All right.

47
00:02:35,020 --> 00:02:38,980
Now for the interesting part, let's switch back and ask you first to our buttons.

48
00:02:39,340 --> 00:02:41,680
Now I'm going to be going to the index darts.

49
00:02:41,680 --> 00:02:42,240
Yes.

50
00:02:42,250 --> 00:02:45,370
And I'm going to be adding a class called as button.

51
00:02:46,120 --> 00:02:51,300
And in this let's give it a background as maybe a loop and of a dart.

52
00:02:51,310 --> 00:02:56,080
Then we also need to be applying this and I need to be going to my index dart edge HTML.

53
00:02:56,350 --> 00:02:58,930
And in this we have the button called button one.

54
00:02:59,290 --> 00:03:01,100
And I'm going to be adding a class here.

55
00:03:01,120 --> 00:03:04,390
Let's call this class as button, which you had just declared.

56
00:03:04,960 --> 00:03:07,930
I'm also going to be doing the same thing for our clear button.

57
00:03:08,260 --> 00:03:10,420
So we are going to be adding a dynamic class here as well.

58
00:03:10,510 --> 00:03:17,050
So as the element DART class list, DART added and in this you can put up added within which you are

59
00:03:17,050 --> 00:03:19,990
going to be defining as button.

60
00:03:20,000 --> 00:03:21,730
So this is the class that reacting.

61
00:03:22,600 --> 00:03:23,820
Okay, so far so good.

62
00:03:23,830 --> 00:03:27,310
Let's try to run this once again to make sure things are working out as expected.

63
00:03:27,790 --> 00:03:28,690
So switch back.

64
00:03:28,690 --> 00:03:31,870
We can see that both the buttons are getting a color yellow.

65
00:03:32,170 --> 00:03:33,670
That's matching exactly my shirt.

66
00:03:34,420 --> 00:03:36,310
All right, fine.

67
00:03:36,310 --> 00:03:38,230
Let's switch back to things now.

68
00:03:38,590 --> 00:03:40,840
You can see that where the problem lies.

69
00:03:41,200 --> 00:03:44,770
Let's suppose I want to be giving this clear button another class.

70
00:03:44,780 --> 00:03:47,950
So let's suppose I define another CSS file here.

71
00:03:48,520 --> 00:03:51,860
Imagine that clear button is like a separate component altogether.

72
00:03:51,860 --> 00:03:54,370
It does not know that there is going to be injected and so on.

73
00:03:55,000 --> 00:04:02,020
So I've created a clear button dart thesis and this developer comes in and it creates another class

74
00:04:02,020 --> 00:04:02,890
with the name button.

75
00:04:03,580 --> 00:04:04,330
So what?

76
00:04:04,330 --> 00:04:06,190
Obama But that's what he has done.

77
00:04:06,640 --> 00:04:14,020
So I'll just create another class called Button and this guy gave it a background of non background

78
00:04:14,020 --> 00:04:17,410
color, just background as maybe a red.

79
00:04:19,300 --> 00:04:20,410
All right, so that's done.

80
00:04:20,440 --> 00:04:24,520
Now, if I come to my clear button, I need to be importing that case file.

81
00:04:24,520 --> 00:04:30,290
So I'll say import dart slash, clear button, dart thesis.

82
00:04:31,250 --> 00:04:32,770
Okay, so that's done.

83
00:04:32,890 --> 00:04:35,020
Clear the console, run, npm, run, build.

84
00:04:35,020 --> 00:04:39,130
Once again, switch back to our browser and click on refresh.

85
00:04:40,130 --> 00:04:40,350
Oh.

86
00:04:41,120 --> 00:04:43,400
As you can see, both our buttons have become red.

87
00:04:43,400 --> 00:04:45,290
So that was not expected, right?

88
00:04:45,710 --> 00:04:47,540
Well, let's try to understand what's happening here.

89
00:04:47,750 --> 00:04:52,820
If I take out my head section, you can see that we have the style tag integrated here.

90
00:04:53,270 --> 00:04:56,150
In this, we had the button called as background yellow.

91
00:04:56,600 --> 00:05:01,490
And we also have another style tag in which we had the class button which has a background red.

92
00:05:01,880 --> 00:05:06,710
Now, as you can see, due to this class, being at the lower level is having a higher precedence.

93
00:05:07,010 --> 00:05:09,140
That's why both of the buttons have become red.

94
00:05:09,620 --> 00:05:13,280
Now, this is exactly the place that the SS modules are very helpful.

95
00:05:13,730 --> 00:05:19,340
We are going to be using the Axis model to be segregating both these classes so that they are identified

96
00:05:19,340 --> 00:05:20,000
uniquely.

97
00:05:20,750 --> 00:05:22,250
So let's see how that is done.

98
00:05:23,680 --> 00:05:25,570
Now for using the US model.

99
00:05:25,600 --> 00:05:29,110
One fundamental change need to be done to our configuration.

100
00:05:29,470 --> 00:05:34,720
So let's switch back to over paddock config dodgers and we're going to be changing the way we're using

101
00:05:34,720 --> 00:05:35,860
our access loaders.

102
00:05:36,370 --> 00:05:40,450
So in this, we are going to be seeing as use somewhat a bit of moving all of this.

103
00:05:40,450 --> 00:05:42,250
But just for comparison, I'm keeping it.

104
00:05:42,610 --> 00:05:44,230
And this is going to be an ADI.

105
00:05:44,680 --> 00:05:48,910
And instead of directly putting the string values, we are going to be defining objects in this.

106
00:05:49,390 --> 00:05:51,750
So the first object is going to be defined here.

107
00:05:51,760 --> 00:05:56,170
We are going to be putting the property as loader and this is going to be style loaders.

108
00:05:56,170 --> 00:05:58,930
I can just cut and paste it right here.

109
00:05:59,870 --> 00:06:00,350
Okay.

110
00:06:00,350 --> 00:06:04,280
Let me just fix my columns, and that's perfect.

111
00:06:05,760 --> 00:06:06,040
Okay.

112
00:06:06,060 --> 00:06:10,020
The second is also going to be a loader and this is going to be this year as loader.

113
00:06:10,020 --> 00:06:15,570
So let's cut that and put it right here and remove all of this unused coal.

114
00:06:16,410 --> 00:06:16,830
Okay.

115
00:06:16,860 --> 00:06:21,510
So far, nothing has changed the course loader and style loaders as before.

116
00:06:21,930 --> 00:06:27,150
Now, the additional thing that we need to be doing by enabling theses modules is putting up the options

117
00:06:27,150 --> 00:06:27,600
properties.

118
00:06:27,600 --> 00:06:34,710
So in here you say options and in this field to be defining as modules and then through.

119
00:06:36,860 --> 00:06:38,030
So that's pretty much it.

120
00:06:38,040 --> 00:06:39,660
So, insists Lauda.

121
00:06:39,680 --> 00:06:44,690
We have added another property called Options, in that we have created an object with modules property

122
00:06:44,690 --> 00:06:45,440
as group.

123
00:06:45,950 --> 00:06:47,780
So that's all required to enable C.

124
00:06:47,780 --> 00:06:48,590
S modules.

125
00:06:49,130 --> 00:06:52,070
Now, with that done, how to think look different.

126
00:06:52,430 --> 00:06:54,770
So I'm going to be running once again the build.

127
00:06:54,860 --> 00:06:56,690
So let's run, NPM, run, build.

128
00:06:57,110 --> 00:06:57,980
Everything passes.

129
00:06:57,980 --> 00:07:00,170
So that path configuration is correct.

130
00:07:00,560 --> 00:07:05,510
Switching back to the browser, I click on refresh and we have lost all this users.

131
00:07:05,750 --> 00:07:06,500
Why is that?

132
00:07:06,800 --> 00:07:09,500
Let's switch to our console and check what's happening here.

133
00:07:10,010 --> 00:07:14,360
Now, if I were one of these static tags, you can see that we no longer see the names that were given

134
00:07:14,360 --> 00:07:17,270
for the classes, but we see some random characters here.

135
00:07:17,720 --> 00:07:21,800
Now, what Webpack has done, it has basically made up names of its own.

136
00:07:22,040 --> 00:07:24,980
And these are the names that we are going to be using for our classes.

137
00:07:25,430 --> 00:07:31,430
We have already added the body section in which we are using the class as button, but since there's

138
00:07:31,430 --> 00:07:34,460
no class called Button anymore, these styles are not applied.

139
00:07:35,150 --> 00:07:40,700
Now, as you can see, every style that has been created over here are having unique characters, and

140
00:07:40,700 --> 00:07:43,010
that is exactly where it's going to be very helpful.

141
00:07:43,520 --> 00:07:46,280
Now, how do we using this classes that have been created?

142
00:07:46,850 --> 00:07:47,870
Let's go back to our code.

143
00:07:48,530 --> 00:07:51,950
And in this we go to our index dogs.

144
00:07:53,340 --> 00:07:53,730
Okay.

145
00:07:53,970 --> 00:07:58,530
Now, instead of just importing the access file, we're going to be importing it as a style.

146
00:07:58,650 --> 00:08:02,490
So I would say style from index starts, the says.

147
00:08:03,150 --> 00:08:08,280
Now, whenever I wanted to be using this style, I need to be putting it using the dot operator.

148
00:08:08,790 --> 00:08:10,740
So what exactly is in this style?

149
00:08:11,220 --> 00:08:16,260
Well, using the SS module, all the class that is there is going to be exported as an object.

150
00:08:16,830 --> 00:08:20,820
So what are we controlling this out to show you and make it more clear?

151
00:08:21,510 --> 00:08:23,010
So I just say consolidate log.

152
00:08:23,520 --> 00:08:24,870
So how do you use this style?

153
00:08:25,020 --> 00:08:28,260
Well, for example, we wanted to apply the style on the button one.

154
00:08:28,680 --> 00:08:34,920
So instead of just adding a directly what I say convert button one equals to this one.

155
00:08:35,670 --> 00:08:40,170
And then we can just put it a little bit refactoring and then add the event listener.

156
00:08:40,860 --> 00:08:47,100
Now I also want to be doing another thing, so I'll say button one dot class list, dot add.

157
00:08:47,310 --> 00:08:51,060
And in this, I need to be passing in that now to be adding the class.

158
00:08:51,060 --> 00:08:53,910
What I'll be doing is style dot button.

159
00:08:54,660 --> 00:08:56,850
So this is how we are going to be applying this style.

160
00:08:56,860 --> 00:08:59,640
So we'll use the dot operator and then apply these styles.

161
00:09:00,150 --> 00:09:02,550
A similar thing can be done for the clear button as well.

162
00:09:02,610 --> 00:09:04,560
So instead of just directly importing this.

163
00:09:04,560 --> 00:09:07,710
Yes, I say import style from.

164
00:09:08,070 --> 00:09:09,360
And please note this is a variable.

165
00:09:09,360 --> 00:09:11,010
You can just name it as you like.

166
00:09:11,970 --> 00:09:12,320
Okay.

167
00:09:12,330 --> 00:09:15,060
Now introducing button, we are going to be doing this similar thing.

168
00:09:15,060 --> 00:09:19,170
So this is style dot and then we say button.

169
00:09:20,120 --> 00:09:20,540
Cool.

170
00:09:20,540 --> 00:09:21,930
So that's pretty much it.

171
00:09:21,950 --> 00:09:29,060
Now, if I just try to refresh once again, so I would say NPM, run, build and things have been properly.

172
00:09:29,060 --> 00:09:33,470
Let's try to refresh our page and voila we do see our is getting applied.

173
00:09:33,470 --> 00:09:34,760
So that's really good.

174
00:09:35,180 --> 00:09:37,850
We have learned how we were using the access modules.

175
00:09:38,240 --> 00:09:41,510
Now this one more special feature of this module that I would like to show you.

176
00:09:42,140 --> 00:09:46,670
So for example, let's suppose you are not really having this uses now.

177
00:09:46,670 --> 00:09:49,790
I do have used x styled or button.

178
00:09:50,120 --> 00:09:51,870
Now what do you expect to happen?

179
00:09:51,890 --> 00:09:55,460
So for example, if I run NPM, run, build, what do you expect would happen?

180
00:09:55,910 --> 00:09:57,800
Will it be applying this style or not?

181
00:09:58,580 --> 00:10:02,420
Well, if you expect this style to be applied, well, that's not going to happen.

182
00:10:02,570 --> 00:10:07,850
So if you just switch back here, you can see that the button did not get rendered itself well, it

183
00:10:07,850 --> 00:10:12,290
did not get rendered because it was not able to find the styles against the style is not defined.

184
00:10:12,620 --> 00:10:17,510
And this is exactly why the application sort of broke at that place while we are going to be fixing

185
00:10:17,510 --> 00:10:18,200
that shortly.

186
00:10:18,650 --> 00:10:23,030
Let's suppose you want to be using all the styles that were there in the indexed audience.

187
00:10:23,510 --> 00:10:25,310
So how do we do that?

188
00:10:25,610 --> 00:10:26,980
Well, you can do that as well.

189
00:10:26,990 --> 00:10:32,510
So as you know, we already have defined the index study of cases in that we had the button style and

190
00:10:32,510 --> 00:10:35,000
only use the same style in the clear button.

191
00:10:35,540 --> 00:10:39,020
Now what you can do here is you can remove all of this.

192
00:10:40,360 --> 00:10:42,760
And you can use the concept of global studies.

193
00:10:43,210 --> 00:10:46,420
So how do you define global styles for defining global styles?

194
00:10:46,420 --> 00:10:50,650
What you can be doing is you can go back to the index, talk to the masses, and you can put up the

195
00:10:50,650 --> 00:10:58,430
keyword as X column and then say global and move all of this class in a bracket just like that.

196
00:10:59,320 --> 00:11:04,750
I write the dart and what happens is this particular style is going to be exported as a global style.

197
00:11:05,170 --> 00:11:11,340
Now, if I can come back in my career button now I can just add up the array and just put or here as

198
00:11:11,470 --> 00:11:12,880
button just like that.

199
00:11:13,810 --> 00:11:21,220
So if I refresh my build once again and be build and if I come back to my browser C refresh, we can

200
00:11:21,220 --> 00:11:27,520
see that our status is getting applied on both the element because we made it as a global style.

201
00:11:27,940 --> 00:11:30,600
Now we can see that we're just getting one more error there.

202
00:11:30,610 --> 00:11:34,700
It comes over here because we are trying to use this index.

203
00:11:34,990 --> 00:11:35,330
Yes.

204
00:11:35,650 --> 00:11:37,570
And we are trying to use the style element.

205
00:11:37,930 --> 00:11:43,270
Now, since we had made it global, this does not exist anymore and that is presented by this console.log

206
00:11:43,270 --> 00:11:43,480
log.

207
00:11:43,480 --> 00:11:48,250
So if you see the consolidated log, we just have one style that is there in our space object that is

208
00:11:48,250 --> 00:11:49,000
the header style.

209
00:11:49,330 --> 00:11:52,450
Since that was not made as the global object.

210
00:11:52,840 --> 00:11:54,280
So this was not made as the global.

211
00:11:54,280 --> 00:11:55,450
That's why it's available over here.

212
00:11:55,870 --> 00:11:59,360
All the global objects have been removed from their style object.

213
00:11:59,380 --> 00:12:02,110
That's why it is being applied on the A.T.M. page.

214
00:12:02,650 --> 00:12:05,830
So that is how we are going to be using these as modules.

215
00:12:05,830 --> 00:12:12,260
I hope this gave you a good overview of how do we importing these styles as components in the ideas

216
00:12:12,310 --> 00:12:17,980
file and how do we using the DART operator and then apply any of these styles on any of your elements

217
00:12:18,220 --> 00:12:19,270
if you use React?

218
00:12:19,270 --> 00:12:21,220
This is a very popular approach over there.

219
00:12:22,150 --> 00:12:22,440
Okay.

220
00:12:22,480 --> 00:12:27,280
If you would like to learn more about this module and what other features that you can be using, I

221
00:12:27,280 --> 00:12:28,870
will point to the documentation as well.

222
00:12:29,260 --> 00:12:34,330
So this is on GitHub slash thesis dash modules and then again six modules.

223
00:12:34,780 --> 00:12:39,280
I'm going to be adding this along with the lecture so you can just check it out if you wish to.

224
00:12:39,550 --> 00:12:45,120
So this has all the documentation on how do we use the next module, what are global styles, what are

225
00:12:45,130 --> 00:12:46,240
local styles and so on.

226
00:12:46,240 --> 00:12:48,370
And this can be very helpful for your next project.

227
00:12:49,000 --> 00:12:49,300
All right.

228
00:12:49,300 --> 00:12:51,610
So that's about it for theses modules.

229
00:12:51,640 --> 00:12:57,280
So let me take a short break and see how do we dealing with some pre processes, especially the SSP

230
00:12:57,280 --> 00:13:01,120
process that's about it and see you in the next video.
