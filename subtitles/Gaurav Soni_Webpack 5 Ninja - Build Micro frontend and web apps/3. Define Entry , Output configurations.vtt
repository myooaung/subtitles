WEBVTT
1
00:00:00.180 --> 00:00:00.510
All right.

2
00:00:00.510 --> 00:00:03.030
So we can go ahead and start creating of a pack file.

3
00:00:03.240 --> 00:00:06.840
Now, for creating the fact file, we have to go to the base folder.

4
00:00:06.840 --> 00:00:09.690
So that's the 10.1 React project based folder.

5
00:00:09.900 --> 00:00:16.080
And in this I just right click and see new file and give this flat back file as the name the backdoor

6
00:00:16.090 --> 00:00:16.860
config.

7
00:00:18.140 --> 00:00:18.970
Config dot.

8
00:00:19.220 --> 00:00:19.670
Yes.

9
00:00:20.210 --> 00:00:20.510
Okay.

10
00:00:21.140 --> 00:00:23.620
So I have a spelling mistake.

11
00:00:23.630 --> 00:00:26.060
That's why I did not identify it, so I'll just fix it.

12
00:00:26.510 --> 00:00:26.830
Okay.

13
00:00:26.840 --> 00:00:27.650
So that looks good.

14
00:00:27.920 --> 00:00:30.320
Now we need to also install all our dependencies.

15
00:00:30.320 --> 00:00:33.320
So far you see that we do not have the Node.js modules folder.

16
00:00:33.740 --> 00:00:36.950
So for that, I can just come here and see npm install.

17
00:00:37.340 --> 00:00:41.310
There's no PMI chart to get all our dependencies loaded.

18
00:00:41.720 --> 00:00:47.180
Now this includes dependency, like react and all the other dependencies we need for Diva Pack as well.

19
00:00:48.250 --> 00:00:48.550
Okay.

20
00:00:48.550 --> 00:00:50.560
So all our dependencies are now installed.

21
00:00:50.560 --> 00:00:52.810
I can start writing my Webpack configuration.

22
00:00:53.380 --> 00:00:58.450
Now, first of all, we can see module dot export and this is going to be our base object.

23
00:00:58.990 --> 00:01:02.380
Now, we have already done this a couple of times, so if you want, you can just take a pause over

24
00:01:02.380 --> 00:01:06.790
here and try to define the entry and the output configurations by yourself.

25
00:01:07.450 --> 00:01:07.750
Okay.

26
00:01:07.750 --> 00:01:08.890
So were you able to do it?

27
00:01:09.100 --> 00:01:12.880
Well, if not, are you if you face some issues, you can just go ahead and do it right.

28
00:01:12.880 --> 00:01:13.120
Okay.

29
00:01:13.840 --> 00:01:16.360
So first of all, I'll put up the entry.

30
00:01:17.320 --> 00:01:18.790
So let's call that entry.

31
00:01:18.820 --> 00:01:20.860
So in this we need to be using the port module.

32
00:01:20.860 --> 00:01:22.540
So let me go ahead and import that.

33
00:01:22.630 --> 00:01:28.930
So I would say content but equals to require, but so that's the first one.

34
00:01:29.290 --> 00:01:39.430
And we here we can save but not resolve and there's directory name comma SC slash index start just now

35
00:01:39.430 --> 00:01:43.420
as I told you earlier, this is a single page application, so we're going to be just having a single

36
00:01:43.420 --> 00:01:44.140
entry file.

37
00:01:44.680 --> 00:01:47.020
So that's why I'm not creating an object.

38
00:01:47.020 --> 00:01:49.180
Instead, I'm just resolving it directly with you.

39
00:01:50.080 --> 00:01:52.540
So let's move on the next one, which is the output.

40
00:01:53.020 --> 00:01:55.300
And in the output we need to be defining an object.

41
00:01:55.720 --> 00:01:58.000
The first barometer is the phylum.

42
00:01:59.090 --> 00:02:02.360
So in the filing, we see it as the string.

43
00:02:02.540 --> 00:02:03.950
And in here, we passed a name.

44
00:02:03.950 --> 00:02:05.990
Dot, bundle dot.

45
00:02:06.080 --> 00:02:06.680
Yes.

46
00:02:07.340 --> 00:02:07.720
Okay.

47
00:02:07.730 --> 00:02:09.190
So we have defined the file name.

48
00:02:09.200 --> 00:02:13.580
Now, we also need to be defining where we need to be outputting the bundled files.

49
00:02:14.000 --> 00:02:18.410
So for that we can see again but not resolve.

50
00:02:19.100 --> 00:02:21.800
Directory name, comma, dest.

51
00:02:23.070 --> 00:02:23.430
Okay.

52
00:02:23.430 --> 00:02:27.870
So that sun, nothing so exciting so far, but it's going to be getting exciting very soon.

53
00:02:28.650 --> 00:02:28.950
Okay.

54
00:02:28.950 --> 00:02:34.020
So let's go ahead and import the estimate of our pack plug in now estimate of a pack plug in.

55
00:02:34.020 --> 00:02:39.330
As you know, it's going to be helping us to inject all the bundles into the stable file.

56
00:02:39.780 --> 00:02:41.970
So for that, let's go ahead and import that first.

57
00:02:41.970 --> 00:02:50.100
So the second slash HTML Webpack plugin equals two required SD HTML work that plugin.

58
00:02:50.820 --> 00:02:51.180
Okay.

59
00:02:51.540 --> 00:02:58.520
Now we also need to be defining the plugins section so I can see plugins and this is of type added.

60
00:02:59.010 --> 00:03:06.150
And in this we say new issue plugin and we need to be initializing it and passing it to an object.

61
00:03:07.020 --> 00:03:09.990
Now the object that is postured is the template.

62
00:03:10.410 --> 00:03:14.400
So that's the first one and the second one is file name.

63
00:03:15.060 --> 00:03:18.960
So we can just name the file, let's say index start HTML.

64
00:03:19.590 --> 00:03:21.300
Now what is going to be our template?

65
00:03:21.480 --> 00:03:26.820
We can see we heard us dart slash as our C slash indexed dart HTML.

66
00:03:27.210 --> 00:03:31.650
Now just going into our folder structure, we have the associate and this is the index dart estimate

67
00:03:31.650 --> 00:03:33.030
file that we had just created.

68
00:03:33.930 --> 00:03:34.230
Okay.

69
00:03:34.230 --> 00:03:35.460
So things looks pretty good.

70
00:03:35.460 --> 00:03:37.920
So we have the three properties set up now.

71
00:03:37.920 --> 00:03:41.940
I would just like to take another break here before we go ahead and add some additional configuration

72
00:03:41.940 --> 00:03:43.950
in the back and get our depth so we're running.
