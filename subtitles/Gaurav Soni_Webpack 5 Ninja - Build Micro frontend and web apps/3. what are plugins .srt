1
00:00:00,060 --> 00:00:01,620
Welcome back to another video.

2
00:00:01,800 --> 00:00:07,620
And in this, let's see the theory of exactly how plug ins fit in to the concept of their ecosystem.

3
00:00:08,130 --> 00:00:12,240
So we had already seen this particular diagram in which we saw where the load has come in.

4
00:00:12,570 --> 00:00:14,130
So we had the dependency graph.

5
00:00:14,490 --> 00:00:18,810
Within that, we have the loader for loading the additional file tapes which were backwards, not able

6
00:00:18,810 --> 00:00:19,920
to understand by default.

7
00:00:20,280 --> 00:00:23,760
So once that was done, we were able to get the output of that back.

8
00:00:24,180 --> 00:00:25,110
So this was working.

9
00:00:25,350 --> 00:00:27,060
Now let's see where plug ins come in.

10
00:00:27,600 --> 00:00:30,630
Now, if I scroll down, I have one other diagram regarding plug ins.

11
00:00:30,990 --> 00:00:36,450
So as you can see, we have the VAT back dependency graph created again, and then we have the loaders.

12
00:00:36,840 --> 00:00:41,490
Now, once all the loaders have done their job, they have compiled all the output that was given by

13
00:00:41,490 --> 00:00:42,600
the dependency graph.

14
00:00:43,050 --> 00:00:44,910
Then that is where the plug ins come in.

15
00:00:45,300 --> 00:00:50,490
Plug ins are basically used for enhancing the functionality that is going to be outputted in the Webpack

16
00:00:50,490 --> 00:00:51,270
output folder.

17
00:00:51,780 --> 00:00:57,570
So we already have the Webpack output folder and all the JavaScript files are created, but we are going

18
00:00:57,570 --> 00:01:00,180
to be announcing what is going to be outputted over here.

19
00:01:00,720 --> 00:01:05,790
So just to give you an example, let's see what are the some of the plugins available by default in

20
00:01:05,790 --> 00:01:06,240
Webpack?

21
00:01:06,600 --> 00:01:09,390
So we have something called as the Steam plugin.

22
00:01:09,810 --> 00:01:15,540
So what exactly the estimate of our plugins is going to be doing is it's going to be injecting all the

23
00:01:15,540 --> 00:01:18,240
dependencies directly in the ML file.

24
00:01:18,570 --> 00:01:24,210
So if we had to be adding those dependencies manually, that is the bundle files manually in our estimate.

25
00:01:24,630 --> 00:01:27,900
And this is going to be helping us to automatically inject those files.

26
00:01:28,830 --> 00:01:31,500
Next, we also have another plugin called Environment Plugin.

27
00:01:31,920 --> 00:01:35,250
Now let's suppose you want to be hosting your application in multiple environments.

28
00:01:35,250 --> 00:01:39,150
You have like your dev, your production environment and your queue environment.

29
00:01:39,540 --> 00:01:44,490
You can set up some environment variables and this can be also done using the environment plugin.

30
00:01:45,420 --> 00:01:47,790
Next we have the HTML minimizing plugin.

31
00:01:48,210 --> 00:01:52,560
So whenever you're going to be giving a production output, you need to make sure your bundle size is

32
00:01:52,560 --> 00:01:53,160
very small.

33
00:01:53,580 --> 00:01:56,520
So this is going to be helping us to manipulate that bundle size.

34
00:01:56,790 --> 00:02:01,560
Then finally, we are going to be seeing another very important and useful plugin, which is the main

35
00:02:01,560 --> 00:02:03,000
thesis extract plugin.

36
00:02:03,450 --> 00:02:07,740
Now if you remember when all of you were loading all this cases while they were just going to be getting

37
00:02:07,740 --> 00:02:11,100
injected into our index start in the shadow section.

38
00:02:11,790 --> 00:02:17,160
Now, from the performance perspective, this is not very good because we cannot be really caching all

39
00:02:17,160 --> 00:02:18,480
the thesis files here.

40
00:02:18,810 --> 00:02:22,740
Every time you are going to be loading that particular page, you also need to be pulling up all these

41
00:02:22,750 --> 00:02:23,300
cases.

42
00:02:23,670 --> 00:02:29,040
And it's going to be very useful if you can extract all of this thesis into a separate file.

43
00:02:29,400 --> 00:02:31,740
And this is exactly what is going to be done by this plugin.

44
00:02:32,250 --> 00:02:36,460
Now, once you apply this plugin, we are going to be having another file created that has the bundled

45
00:02:36,720 --> 00:02:39,750
cases and that can be loaded into our steam and.

46
00:02:40,850 --> 00:02:41,180
Okay.

47
00:02:41,180 --> 00:02:44,240
So that is pretty much it of what is plug ins.

48
00:02:44,420 --> 00:02:49,610
Let's continue on in the next video and see how we're going to be optimizing the last application using

49
00:02:49,610 --> 00:02:50,150
plug ins.
