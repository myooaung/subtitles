1
00:00:00,060 --> 00:00:05,220
We are in a brand new section and in this section we are going to be covering up things related to react.

2
00:00:05,580 --> 00:00:10,740
Now we have seen all the basics of our pack and in this section we are going to be seeing things specifically

3
00:00:10,740 --> 00:00:12,150
for the React application.

4
00:00:12,540 --> 00:00:16,350
Now, if you have worked already on React application, you must have used a React scale.

5
00:00:16,830 --> 00:00:20,820
And through this, we are bootstrapping the entire application in the back end.

6
00:00:20,850 --> 00:00:24,840
The React scale actually uses Webpack and that's how everything works.

7
00:00:24,840 --> 00:00:29,940
You have things such as preloading, you have the dependencies, resolving and a lot of other things

8
00:00:30,060 --> 00:00:32,850
and that's taken care automatically by the react like.

9
00:00:33,300 --> 00:00:37,200
Now in this we are going to be seeing exactly what happens when this react really works.

10
00:00:37,710 --> 00:00:43,350
So I've just created a sample React application and we will be just seeing all the concepts on this

11
00:00:43,350 --> 00:00:43,950
application.

12
00:00:44,400 --> 00:00:46,020
Now, let me just give you a small demo.

13
00:00:46,120 --> 00:00:48,960
Well, there's just two pages, so not a lot of demo to give here.

14
00:00:49,380 --> 00:00:54,570
Anyways, we have this login page and we are not going to be really entering any of the values here.

15
00:00:54,870 --> 00:01:00,210
So if you just click on sign in, we are taken to the speech, which is the movies I wrote, as you

16
00:01:00,210 --> 00:01:04,260
can see on the top, and many of you see a couple of movies poster.

17
00:01:04,770 --> 00:01:08,220
And this is somewhat related to what you see on Netflix and so on.

18
00:01:08,940 --> 00:01:09,330
Okay.

19
00:01:09,330 --> 00:01:11,730
So that is all about the application.

20
00:01:11,730 --> 00:01:15,420
You can also click on Designer Button and you'll be taken back to the sign in page.

21
00:01:15,880 --> 00:01:17,340
So a couple of things happening here.

22
00:01:17,370 --> 00:01:20,010
First of all, we have these two pages which are getting loaded.

23
00:01:20,310 --> 00:01:24,420
Then we have also set up the routing through which we are routing from one page to the another.

24
00:01:24,840 --> 00:01:29,850
And this is a fundamental difference between what we have been implementing so far in the other applications.

25
00:01:30,150 --> 00:01:32,010
So I've just created a small diagram here.

26
00:01:32,400 --> 00:01:38,850
So as you can see, we are in the browser and we go to some localhost, 3000 and this is where our application

27
00:01:38,850 --> 00:01:39,420
is hosted.

28
00:01:39,900 --> 00:01:42,480
Now in general, we are having multiple entry points.

29
00:01:42,570 --> 00:01:47,460
So for example, if I built this entire application using a traditional approach, there would be two

30
00:01:47,460 --> 00:01:48,310
A.T.M. files.

31
00:01:48,570 --> 00:01:52,200
And we would just go to those appropriate email files and do the navigation.

32
00:01:52,560 --> 00:01:56,280
And in our back configuration, we would be needing the two entry files as well.

33
00:01:56,970 --> 00:02:01,710
Well, things are quite different when you are in the React application or any other single page applications,

34
00:02:02,100 --> 00:02:04,320
you are just going to be having a single entry point.

35
00:02:04,620 --> 00:02:07,200
So for example, this is our single entry container.

36
00:02:07,500 --> 00:02:11,910
And in this container we are loading the pages that is required according to the route that has been

37
00:02:11,910 --> 00:02:13,020
accessed in the browser.

38
00:02:13,620 --> 00:02:17,940
So in this case, in other config, we are just going to be having one entry file.

39
00:02:18,900 --> 00:02:19,200
Okay.

40
00:02:19,200 --> 00:02:21,170
So that is one of the fundamental difference.

41
00:02:21,180 --> 00:02:25,470
And we are also going to be implementing the previous concepts of loaders and plug ins.

42
00:02:25,770 --> 00:02:28,320
And we will also see two additional new concepts.

43
00:02:28,770 --> 00:02:35,280
So the first concept is how do we using the Babel loader now in case of React is we have the Gsx format.

44
00:02:35,520 --> 00:02:39,360
Now Gsx is not really understood by the back end, doesn't know how to compile it.

45
00:02:39,660 --> 00:02:41,400
So for that reason we are going to be using Babel.

46
00:02:41,760 --> 00:02:47,130
And we are also will be using another plugin that is the post CSS plugin, which is going to help us

47
00:02:47,130 --> 00:02:49,560
enhance the thesis that we write in our application.

48
00:02:50,370 --> 00:02:50,670
Okay.

49
00:02:50,670 --> 00:02:55,320
So once we have that, then we are also going to be adding one additional plugin to check how well our

50
00:02:55,320 --> 00:02:56,040
code is written.

51
00:02:56,280 --> 00:02:58,020
And this is the first linked plugin.

52
00:02:58,440 --> 00:03:03,450
So using the years later to list out all the common errors and we are also going to be adding some configuration

53
00:03:03,450 --> 00:03:03,600
to.

54
00:03:03,600 --> 00:03:03,900
Yes.

55
00:03:04,260 --> 00:03:08,190
And we are going to be specifically going to be using the Airbnb excellent configurations.

56
00:03:08,460 --> 00:03:10,440
And that is pretty standard in the market.

57
00:03:10,830 --> 00:03:11,180
Okay.

58
00:03:11,190 --> 00:03:13,050
So that's about it for now.

59
00:03:13,170 --> 00:03:17,640
Let's continue on and see how we can be building React application using Webpack.
