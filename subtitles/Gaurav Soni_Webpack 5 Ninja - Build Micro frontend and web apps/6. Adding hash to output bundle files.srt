1
00:00:00,300 --> 00:00:00,690
Hey there.

2
00:00:00,690 --> 00:00:03,780
In this video, I would just like to do one small announcement to our bed.

3
00:00:04,140 --> 00:00:06,540
So we're outputting multiple window files.

4
00:00:06,550 --> 00:00:11,010
We so as you can see, we got this render node modules or indexes and the index bundle.

5
00:00:11,490 --> 00:00:16,800
Now this one problem here and I wouldn't really call it a problem, rather it's an announcement and

6
00:00:16,800 --> 00:00:18,810
that is the hash version of this build.

7
00:00:19,230 --> 00:00:24,990
Now how would the browser caching works is whenever the name of the bundle gets changed, is automatically

8
00:00:24,990 --> 00:00:27,090
going to be sending the request to the server.

9
00:00:27,510 --> 00:00:32,340
So in that case, we are going to be changing the hash version only and only when there is a change

10
00:00:32,340 --> 00:00:33,450
in the bundle itself.

11
00:00:33,720 --> 00:00:38,760
So for example, if are pulling up a new version of the bootstrap only, then the hash version is going

12
00:00:38,760 --> 00:00:42,750
to be changed and then the browser is going to be sending the request to the server for the new file.

13
00:00:43,230 --> 00:00:46,800
So in short, we need to be adding the hash to this bundle logs.

14
00:00:47,280 --> 00:00:47,580
Okay.

15
00:00:47,580 --> 00:00:49,350
So to do that, it's quite simple.

16
00:00:49,350 --> 00:00:56,580
We just go back to our code and in our code we had the output port here and in this we are already using

17
00:00:56,580 --> 00:00:57,930
the name as the output.

18
00:00:58,290 --> 00:01:03,570
And I just want to add additional property here and the additional property is called S content hash

19
00:01:04,050 --> 00:01:10,020
so we can put O'Hara's content hash dot bundled nodes.

20
00:01:10,470 --> 00:01:14,970
Now we do not really need the DOT bundle also, so I can probably get rid of that.

21
00:01:15,330 --> 00:01:17,010
So let me just remove that from here.

22
00:01:17,550 --> 00:01:18,870
Let's go ahead and save this.

23
00:01:19,260 --> 00:01:22,650
And I'm just going to be stopping my backside and starting it off again.

24
00:01:23,130 --> 00:01:27,900
Now, please remember, if you're making them change to the web back file itself, you need to be restarting

25
00:01:27,900 --> 00:01:28,500
your web back.

26
00:01:28,500 --> 00:01:31,650
So okay, with that said, let's say NPM run.

27
00:01:31,650 --> 00:01:32,520
So once again.

28
00:01:33,560 --> 00:01:39,080
Our browser opens up and we're going to be inspecting and seeing if the file names have changed.

29
00:01:39,500 --> 00:01:43,700
Now I also have the analyzer plugin running, so this also is getting started.

30
00:01:43,700 --> 00:01:46,790
So let's close that off and inspect our website.

31
00:01:47,710 --> 00:01:51,640
And in our Web site, if I go to the network tab, hit refresh once again.

32
00:01:52,360 --> 00:01:56,530
Now we see that we have the vendor node modules, but we also have the hash version right here.

33
00:01:56,920 --> 00:02:01,780
So we have both for the vendor node modules as well as for the vendor X modules.

34
00:02:02,110 --> 00:02:04,300
And we also have it for the index dodgers.

35
00:02:04,780 --> 00:02:10,560
And this acquisition is going to be changing only if any of the dependencies that are inside those bundles

36
00:02:10,570 --> 00:02:11,260
get changed.

37
00:02:11,910 --> 00:02:15,970
Alright, so that's a small announcement right here, but this is going to be helping a lot with the

38
00:02:15,970 --> 00:02:19,300
browser caching so that unnecessary request are not sent to ourselves.

39
00:02:20,170 --> 00:02:21,550
So that's about it for this video.

40
00:02:21,580 --> 00:02:22,900
Let's move on to the next one.
