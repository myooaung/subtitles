WEBVTT
1
00:00:00.390 --> 00:00:04.800
Now that we have successfully published the data from our quick booking, let's go ahead and update

2
00:00:04.800 --> 00:00:07.350
the seed booking application and consume that data.

3
00:00:07.860 --> 00:00:12.540
So I'm just going to be opening the pack, configure our seat selection app because we need to get hold

4
00:00:12.540 --> 00:00:14.220
of that observable objective, remember.

5
00:00:14.700 --> 00:00:18.960
So if you just go to the plug in section, we need to be having a new import.

6
00:00:19.380 --> 00:00:23.550
Now in here, you can see that we do not really have a remote setup, so we need to be adding the new

7
00:00:23.550 --> 00:00:24.030
remote here.

8
00:00:24.540 --> 00:00:26.880
So I would say a remote and then a new object.

9
00:00:27.390 --> 00:00:32.640
Now let's call this as movie app as usual, and we're going to be adding the part.

10
00:00:33.150 --> 00:00:37.750
So instead of typing it down, probably I can just use the same that we had in the home page app.

11
00:00:38.310 --> 00:00:43.530
So we can just copy the entire remote entry location and pasted right here.

12
00:00:44.760 --> 00:00:45.090
Okay.

13
00:00:45.090 --> 00:00:49.870
So we have movie app hosted on localhost 9000 and the remote and read ideas.

14
00:00:49.890 --> 00:00:50.700
So nothing new.

15
00:00:50.700 --> 00:00:52.320
We have done this couple of times so far.

16
00:00:53.190 --> 00:00:53.520
Okay.

17
00:00:53.520 --> 00:00:54.390
So we have that done.

18
00:00:54.420 --> 00:00:55.950
Let me just go ahead and save this file.

19
00:00:55.950 --> 00:00:58.860
And as usual, we need to be restarting our application.

20
00:00:59.370 --> 00:01:01.010
So let me go to DC Selection App.

21
00:01:01.720 --> 00:01:02.070
Stop.

22
00:01:02.070 --> 00:01:05.400
This will give you a restart by saying npm run solve.

23
00:01:06.150 --> 00:01:08.870
So we get our browser opened up.

24
00:01:08.880 --> 00:01:10.530
We do not really need that for now.

25
00:01:10.560 --> 00:01:16.540
Let's go back to our code and let's go to the components that is the seed selection content DART.

26
00:01:17.730 --> 00:01:22.020
So in this huge selection app component and this is the component that we are trying to edit.

27
00:01:22.710 --> 00:01:23.250
Okay.

28
00:01:23.280 --> 00:01:28.260
So with that done, let's see how we can be subscribing to that particular observable.

29
00:01:29.130 --> 00:01:33.750
Now to do this subscription, we are going to be doing it as soon as this component loads up.

30
00:01:34.230 --> 00:01:38.160
Now in React, we are going to be using the concept of user effect.

31
00:01:38.550 --> 00:01:41.040
Now, if you're not really used to react, don't worry.

32
00:01:41.040 --> 00:01:45.660
With our framework you are using, it's going to be having like a bootstrap function which gets called

33
00:01:45.660 --> 00:01:48.000
immediately when your component get loaded up.

34
00:01:48.480 --> 00:01:52.290
So that's the place where you are generally going to be loading all the new data.

35
00:01:53.550 --> 00:01:53.880
Okay.

36
00:01:53.880 --> 00:01:56.730
So in the case of React, we need that use effect.

37
00:01:57.150 --> 00:02:02.760
So you can just type year use effect and then we can pass in function.

38
00:02:02.850 --> 00:02:03.840
That's an arrow function.

39
00:02:04.260 --> 00:02:10.050
And after this calibration, you need to also be putting up the closing and opening square brackets

40
00:02:10.620 --> 00:02:12.780
so that it doesn't get called again and again.

41
00:02:12.780 --> 00:02:14.130
So that's reacting.

42
00:02:15.000 --> 00:02:15.350
Okay.

43
00:02:15.360 --> 00:02:21.150
Now we need to be having again that dynamic import implemented here because as usual, we are accessing

44
00:02:21.150 --> 00:02:23.370
something from our external application.

45
00:02:23.880 --> 00:02:26.430
So as usual, we put up the import statement.

46
00:02:26.850 --> 00:02:32.910
This is going to be from the movie app, then slash and then we need to be adding the name of that component.

47
00:02:33.450 --> 00:02:35.820
So I really forgot what was the name of the component?

48
00:02:35.820 --> 00:02:37.920
Let me just take it up once again.

49
00:02:37.950 --> 00:02:38.850
That's movie data.

50
00:02:39.770 --> 00:02:43.490
And let's go back to our seed selection up and pasted right here.

51
00:02:44.360 --> 00:02:46.350
And this is going to be returning a promise.

52
00:02:46.370 --> 00:02:54.950
So we say dot then and this returns module which we can be sort of resolving against a contract movie

53
00:02:54.950 --> 00:02:59.000
data equals to module dot default.

54
00:03:00.400 --> 00:03:00.820
Okay.

55
00:03:00.820 --> 00:03:02.500
So we got that in there.

56
00:03:02.870 --> 00:03:07.660
The next thing that we need to be doing over here is adding a subscription to this particular object,

57
00:03:07.660 --> 00:03:08.740
the movie data object.

58
00:03:09.160 --> 00:03:11.530
So what you can do over here is same movie data.

59
00:03:12.160 --> 00:03:13.450
Don't subscribe.

60
00:03:14.850 --> 00:03:17.640
And in this we are going to be passing in an object.

61
00:03:18.180 --> 00:03:23.130
So as we have done in our sample last year, we are going to be subscribing to the parameter called

62
00:03:23.130 --> 00:03:24.210
as next.

63
00:03:24.750 --> 00:03:27.570
And in this, we are going to be passing in a dummy function.

64
00:03:28.050 --> 00:03:32.220
So let's just consolidate log and see the end to end if it is working or not.

65
00:03:32.640 --> 00:03:33.420
So let's see.

66
00:03:33.840 --> 00:03:36.900
Movie data received is.

67
00:03:37.080 --> 00:03:40.320
And as usual, we are going to be putting the back picks.

68
00:03:40.800 --> 00:03:44.430
And here we can see a dollar and then pass in the value.

69
00:03:44.460 --> 00:03:47.430
So I can see Val and paste value.

70
00:03:49.230 --> 00:03:50.340
All right, so that's done.

71
00:03:50.430 --> 00:03:52.750
Now, I hope you're getting what we're trying to do here.

72
00:03:52.800 --> 00:03:55.230
We have just initialized us in the use effect.

73
00:03:55.650 --> 00:04:01.830
Then we did a dynamic import of that observable that we had exported from the main movie application,

74
00:04:02.100 --> 00:04:03.540
and then we just subscribe to it.

75
00:04:03.870 --> 00:04:05.820
Now, as soon as we click on the book button.

76
00:04:06.030 --> 00:04:11.250
The data should be added to the observable object and then should be consumed when we are on this particular

77
00:04:11.250 --> 00:04:11.610
page.

78
00:04:12.390 --> 00:04:15.840
Okay, so let's just try this out and see if things are working as expected.

79
00:04:15.910 --> 00:04:20.430
So I'm just going to be switching over to my browser and let's just close all the other applications

80
00:04:20.430 --> 00:04:23.130
and what are we opening up this one on Port 9000.

81
00:04:23.640 --> 00:04:28.140
So the one on the 9000 port is our main movie application, which has all the routing setup.

82
00:04:28.710 --> 00:04:31.950
So let's just give that a refresh once close of all the other tabs.

83
00:04:32.430 --> 00:04:35.220
Now, if I just open up my console to make sure things are working.

84
00:04:36.370 --> 00:04:40.360
Let me stick this at the bottom and let me open up the console.

85
00:04:41.230 --> 00:04:43.330
Let's clear off all the existing things.

86
00:04:43.420 --> 00:04:45.310
Let's click on the book button.

87
00:04:46.210 --> 00:04:47.650
So I'm brought it over here.

88
00:04:47.980 --> 00:04:49.710
Now in here, we take out the console.

89
00:04:49.720 --> 00:04:51.460
We see that we do get a log.

90
00:04:51.460 --> 00:04:54.880
But this is from the quick booking application, not from the seat selection application.

91
00:04:55.240 --> 00:05:00.400
If I just go back to the code, we can see that we had logged this message as movie data received and

92
00:05:00.400 --> 00:05:02.620
this is nowhere to be found in the console.

93
00:05:02.890 --> 00:05:03.880
So what's happening here?

94
00:05:04.510 --> 00:05:08.650
Well, this is the gotcha that I told you with this subject property that we had implemented in our

95
00:05:08.650 --> 00:05:09.550
movie application.

96
00:05:10.030 --> 00:05:16.090
So if I just go back to the code and let's crawl back to our movie Observable dot, this is the main

97
00:05:16.090 --> 00:05:22.230
observer that we created in our movie application and be used as import for our call subject from our

98
00:05:22.240 --> 00:05:22.510
text.

99
00:05:23.290 --> 00:05:29.170
Now our excuse also supports another export, and that's called a behavioral subject.

100
00:05:29.680 --> 00:05:31.390
So our behavior subject matter.

101
00:05:31.990 --> 00:05:33.040
So what's the difference between them?

102
00:05:33.040 --> 00:05:39.130
Behavior, subject and subject is in the case of behavior subject, you can be actually passing a default

103
00:05:39.130 --> 00:05:39.580
value.

104
00:05:40.090 --> 00:05:45.670
So if I just make it as a behavioral subject and you can pass it a default value less if example null

105
00:05:46.300 --> 00:05:52.060
and the main difference between this and enormous object is whenever a new subscriber is going to be

106
00:05:52.060 --> 00:05:56.390
subscribing to this is going to be publishing the existing data as well.

107
00:05:56.410 --> 00:05:59.950
So whatever is the existing value is going to be sent to the subscriber.

108
00:06:00.370 --> 00:06:06.160
In the case of a normal subject, devalue is not sent to this subscriber and only the data that is sent

109
00:06:06.160 --> 00:06:09.400
after the subscription is going to be sent to that subscriber.

110
00:06:09.970 --> 00:06:14.110
So this is the main difference between a behavior subject and a normal subject.

111
00:06:14.560 --> 00:06:20.410
So if I just save this now and let's just go back to a browser, let's go back to our main page.

112
00:06:20.410 --> 00:06:21.820
So that's onboard 9000.

113
00:06:22.420 --> 00:06:25.660
Let me clear this console off and let's click on the book button.

114
00:06:26.290 --> 00:06:31.030
Now we see that we have the quick booking, but if you check on the bottom, we can see that the movie

115
00:06:31.030 --> 00:06:32.830
data received is an object.

116
00:06:33.190 --> 00:06:37.180
So let me just make some changes so we can see exactly what's happening within that object.

117
00:06:37.630 --> 00:06:39.400
So let's go to the selection app.

118
00:06:39.850 --> 00:06:43.630
And in this, I can see as just remove all of this.

119
00:06:44.050 --> 00:06:48.850
And then probably with the plus, I can say, well and can remove this value here.

120
00:06:49.330 --> 00:06:51.190
Okay, so let me just save that.

121
00:06:51.640 --> 00:06:52.540
Let's come back here.

122
00:06:53.020 --> 00:06:56.650
Now, please note, if you just click on refresh, things are not going to work.

123
00:06:57.040 --> 00:07:00.940
Now, this is because as soon as you refresh, the all the things are going to be lost.

124
00:07:00.940 --> 00:07:05.560
Jobs always lost, and all the value within the observer is lost because everything is maintained within

125
00:07:05.560 --> 00:07:06.130
the memory.

126
00:07:06.640 --> 00:07:10.060
So this is just like a normal variable that you have in JavaScript.

127
00:07:10.540 --> 00:07:13.330
So for that reason, we need to be navigating back from the homepage.

128
00:07:13.750 --> 00:07:15.010
So let me clear that off.

129
00:07:15.010 --> 00:07:20.540
Click on the book button and we still see it as object to my mistake.

130
00:07:20.560 --> 00:07:23.770
Actually, just go back to the escort and replace this plus with a comma.

131
00:07:24.220 --> 00:07:26.590
So that's how we can log the content of the object.

132
00:07:26.950 --> 00:07:28.750
So let me just refresh that once again.

133
00:07:28.750 --> 00:07:29.230
Save it.

134
00:07:29.500 --> 00:07:33.580
Go back to my homepage and let's go to the booking page once again.

135
00:07:34.150 --> 00:07:37.450
And this time we can see that the movie data received is in fact correct.

136
00:07:37.450 --> 00:07:40.780
So we have the movie one, the date and the time that was selected.

137
00:07:41.110 --> 00:07:42.640
So that is really, really cool.

138
00:07:42.640 --> 00:07:48.490
We were able to add some data on the homepage and this subscribe to it in real time on a feed selection

139
00:07:48.490 --> 00:07:49.090
application.

140
00:07:49.420 --> 00:07:50.710
Now you can also verify the data.

141
00:07:50.710 --> 00:07:55.570
So this was the data that we sent from the booking application and it matches exactly what we received

142
00:07:55.570 --> 00:07:56.860
on this application.

143
00:07:57.460 --> 00:08:01.570
Just to make things really practical, let's just go ahead and change this value.

144
00:08:01.930 --> 00:08:04.750
Now select maybe Spiderman and change the date.

145
00:08:04.750 --> 00:08:07.810
As for 222 and the time as well.

146
00:08:08.290 --> 00:08:13.540
Let's click on the book button and we get the new movie ID that was selected, the new time as well

147
00:08:13.540 --> 00:08:14.230
as the new date.

148
00:08:14.710 --> 00:08:16.600
So things are looking pretty, pretty good.

149
00:08:16.600 --> 00:08:17.350
So that's great.

150
00:08:18.010 --> 00:08:22.210
Let's just take a short break and do a small update in which we can get all these things rendered.

151
00:08:22.210 --> 00:08:24.010
So right now, it just shows the default values.

152
00:08:24.430 --> 00:08:28.420
So let's just quickly fix this so that we have a sort of end to end working application.
