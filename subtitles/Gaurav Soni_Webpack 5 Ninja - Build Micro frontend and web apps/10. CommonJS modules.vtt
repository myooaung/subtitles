WEBVTT
1
00:00:04.590 --> 00:00:05.340
Welcome back.

2
00:00:05.610 --> 00:00:09.330
In this video, we're going to be seeing one of the most important concept that we're going to be using

3
00:00:09.330 --> 00:00:11.460
throughout the course, and that is modules.

4
00:00:12.000 --> 00:00:17.280
Modules are very important in JavaScript as such, especially when we are using the new form of JavaScript

5
00:00:17.550 --> 00:00:22.620
where everything happens in Malawi and this is the main concept and Webpack back as well.

6
00:00:23.190 --> 00:00:27.630
Now if you are already familiar with the modules, you can skip this particular lecture and also the

7
00:00:27.630 --> 00:00:33.180
next one in this we are going to be covering the six modules as well as the commandeers format of the

8
00:00:33.180 --> 00:00:33.690
modules.

9
00:00:34.200 --> 00:00:38.460
So first of all, let's have a look at what are the different types of modules that were available and

10
00:00:38.460 --> 00:00:39.810
still available in JavaScript.

11
00:00:40.200 --> 00:00:43.800
So as you can see here, there are multiple type of module formats we have.

12
00:00:43.800 --> 00:00:47.010
The Commons is module format with use the required keyword.

13
00:00:47.430 --> 00:00:52.020
Then we had the Emacs 2015 format which had the import and export.

14
00:00:52.380 --> 00:00:55.410
You have the AMD format which are defined and acquired.

15
00:00:55.860 --> 00:01:02.910
Then in courses and access you have the ACT import format and this is also following concept of modules

16
00:01:02.910 --> 00:01:03.750
synthesis.

17
00:01:04.320 --> 00:01:08.040
Now you also can be having the concept of module for image references.

18
00:01:08.370 --> 00:01:12.450
We are going to be seeing this shortly where we are going to be importing the images and other assets

19
00:01:12.660 --> 00:01:14.520
directly in our JavaScript files.

20
00:01:15.120 --> 00:01:17.430
So that is about the different types of modules.

21
00:01:17.760 --> 00:01:21.000
And in this video and the next one, we are going to be covering two important ones.

22
00:01:21.000 --> 00:01:26.130
One is the common yes and then the important, the export of the iMac script 2015.

23
00:01:27.090 --> 00:01:27.480
All right.

24
00:01:27.480 --> 00:01:31.970
So with that said, let's head over to our coding platform, which is Vsco.

25
00:01:32.370 --> 00:01:34.650
And we are going to be starting off creating this folder.

26
00:01:35.400 --> 00:01:39.490
We are going to be starting off for the required year format because this was introduced earlier and

27
00:01:39.510 --> 00:01:41.820
it is natively supported by Node.js.

28
00:01:42.270 --> 00:01:45.210
So what I want you to be doing is go ahead and create a new folder.

29
00:01:45.630 --> 00:01:48.060
Let's give this a name as modules.

30
00:01:48.480 --> 00:01:51.300
And in this we are going to be learning a couple of concepts of modules.

31
00:01:52.020 --> 00:01:53.850
So let me just give this theme.

32
00:01:54.750 --> 00:01:55.170
All right.

33
00:01:55.170 --> 00:01:58.770
So in this, the concept is we are creating entry file.

34
00:01:58.920 --> 00:02:01.260
We are going to be calling this as mean dogs.

35
00:02:01.710 --> 00:02:06.390
And in this we are going to be creating a folder and called this as functions.

36
00:02:07.050 --> 00:02:11.190
So the concept is we are going to be creating couple of functions in this folder and we are going to

37
00:02:11.190 --> 00:02:13.830
be calling those functions in the main dogs file.

38
00:02:14.280 --> 00:02:17.970
The main thing that we will need to learn is what are the different ways of declaring the functions

39
00:02:17.970 --> 00:02:20.130
and importing them and exporting them as well.

40
00:02:20.850 --> 00:02:22.860
So let's add all to the functions folder.

41
00:02:22.950 --> 00:02:23.790
Create a new file.

42
00:02:23.790 --> 00:02:32.040
Let's call this says add dot gees and we are going to be having another file called as Subtract Dot

43
00:02:32.190 --> 00:02:32.810
Jesus.

44
00:02:33.840 --> 00:02:34.200
All right.

45
00:02:34.200 --> 00:02:37.110
As the name suggests, we are going to be adding a small function here.

46
00:02:37.110 --> 00:02:39.930
So let's call this function add.

47
00:02:41.040 --> 00:02:44.470
And we are going to be returning the value of E!

48
00:02:44.820 --> 00:02:46.050
Edition with B.

49
00:02:46.050 --> 00:02:49.470
So that's a plus B, pretty straightforward.

50
00:02:49.830 --> 00:02:52.160
We are going to be doing the same thing and subtract as well.

51
00:02:52.170 --> 00:02:59.910
So let's do that file, rename this as subtract and then it's just going to be replaced with a minus.

52
00:03:01.430 --> 00:03:01.760
All right.

53
00:03:01.760 --> 00:03:03.470
So the implementation is not important.

54
00:03:03.500 --> 00:03:06.020
The main concept that we are learning here is of modules.

55
00:03:06.710 --> 00:03:12.410
Now, to be using these functions in the main dogs, using the acquired keyword, we need to first exporting

56
00:03:12.410 --> 00:03:14.210
these from the particular files.

57
00:03:14.600 --> 00:03:15.770
Now to be exporting them.

58
00:03:16.100 --> 00:03:18.800
We are going to be using the module dart export.

59
00:03:19.040 --> 00:03:24.810
So that's module dart export and that is equal to the function name that is ADD.

60
00:03:25.430 --> 00:03:26.390
That said, actually.

61
00:03:26.690 --> 00:03:30.260
And you have seen this already in the file that we created earlier.

62
00:03:30.890 --> 00:03:35.090
Now, if you go to the subtract file as well, we can be just putting this or that as well.

63
00:03:35.120 --> 00:03:40.010
So I will say module dart export equal to subtract.

64
00:03:40.790 --> 00:03:41.180
All right.

65
00:03:41.180 --> 00:03:42.260
Pretty straightforward.

66
00:03:42.320 --> 00:03:45.800
Let's hello to our main dodges and start using these functions.

67
00:03:46.280 --> 00:03:52.220
So for importing this functions, we can act as const equals to required.

68
00:03:52.910 --> 00:03:57.290
So this is the keyword that we are using for importing the modules and then we can head over to the

69
00:03:57.290 --> 00:03:58.970
functions slash add.

70
00:03:59.750 --> 00:04:00.080
All right.

71
00:04:00.080 --> 00:04:01.850
We have this function available or here.

72
00:04:01.880 --> 00:04:05.960
Now, to be calling this function, we can just say add one comma, two, for example.

73
00:04:06.650 --> 00:04:09.650
And if you go to our terminal, make sure that you're in the right folder.

74
00:04:09.650 --> 00:04:15.110
So right now I'm in the main folder, I need to be going to the modules folder to that CD dot modules.

75
00:04:15.770 --> 00:04:16.190
All right.

76
00:04:16.460 --> 00:04:22.610
Now, to be executing a node command, you can just put up node and then the file that is me introduce

77
00:04:23.330 --> 00:04:26.120
and we do execute it but will not see any output.

78
00:04:26.120 --> 00:04:28.550
So we need to be also controlling log this output.

79
00:04:28.970 --> 00:04:37.010
So I'm just going to be adding it as constant output and then we can console dot log this output.

80
00:04:38.270 --> 00:04:38.570
All right.

81
00:04:38.600 --> 00:04:39.860
Let's try to run that once again.

82
00:04:40.640 --> 00:04:42.860
And in fact, we see that the answer is three.

83
00:04:43.520 --> 00:04:43.820
All right.

84
00:04:43.820 --> 00:04:46.280
So this is a very basic implementation of required.

85
00:04:46.820 --> 00:04:51.770
Now, in this case, we were just exporting one particular function, one of the multiple functions.

86
00:04:51.770 --> 00:04:54.680
How do you export multiple functions from a single file?

87
00:04:55.190 --> 00:04:57.940
So let's have example from that audience.

88
00:04:57.950 --> 00:05:03.770
We are also exporting another function, maybe add and multiply by some number.

89
00:05:04.130 --> 00:05:06.620
So that's a very strange example.

90
00:05:06.620 --> 00:05:08.060
But for now, let's just take it.

91
00:05:08.060 --> 00:05:12.500
So let's say a function add and multiply.

92
00:05:13.800 --> 00:05:14.820
So that's our function.

93
00:05:14.820 --> 00:05:16.040
So what it's going to be doing it.

94
00:05:16.060 --> 00:05:21.600
It's going to be taking a number and it's going to be taking two numbers, basically.

95
00:05:21.600 --> 00:05:24.630
And the third one is going to be the one that is going to be multiplied.

96
00:05:25.440 --> 00:05:26.910
So how does this return?

97
00:05:26.910 --> 00:05:28.080
So we're going to be returning.

98
00:05:29.180 --> 00:05:32.480
E plus B into C.

99
00:05:33.260 --> 00:05:33.730
All right.

100
00:05:33.740 --> 00:05:34.860
So that is it.

101
00:05:34.880 --> 00:05:40.370
Now, how do we export this particular function that we have just created now to be exporting multiple

102
00:05:40.370 --> 00:05:40.850
functions?

103
00:05:40.880 --> 00:05:43.580
We need to be converting this into a named export.

104
00:05:44.240 --> 00:05:48.800
Now, what I mean by name exporters, we just need to be creating an object over here and we're going

105
00:05:48.800 --> 00:05:50.010
to be naming the export.

106
00:05:50.030 --> 00:05:53.000
So we'll say, I want to be exporting a function called desired.

107
00:05:53.450 --> 00:05:56.620
And what is the function that is going to be exported?

108
00:05:56.630 --> 00:05:58.010
It is dysfunctional as well.

109
00:05:58.340 --> 00:06:03.200
So you can just say and now we can have another one that is added and multiply.

110
00:06:03.560 --> 00:06:09.680
So let's suppose we want to be giving this a different name so I can say add and multiply instead of,

111
00:06:09.680 --> 00:06:11.090
you know, just and multiply.

112
00:06:11.090 --> 00:06:13.550
So I'll just say and multiply.

113
00:06:15.710 --> 00:06:17.300
My the fly.

114
00:06:17.300 --> 00:06:18.650
Let me fix their spelling quickly.

115
00:06:18.860 --> 00:06:19.670
And that looks good.

116
00:06:20.090 --> 00:06:23.570
And the second parameter or the value is going to be the actual function name.

117
00:06:23.570 --> 00:06:25.760
So I just copied and pasted right here.

118
00:06:26.600 --> 00:06:26.900
All right.

119
00:06:26.900 --> 00:06:28.730
So that is your named export.

120
00:06:29.210 --> 00:06:33.350
Now, if you want to be importing this into the mean or there, it's going to be a slight difference

121
00:06:33.350 --> 00:06:33.890
here as well.

122
00:06:34.370 --> 00:06:38.180
Now, to be importing it, we are going to be replacing this with an object as well.

123
00:06:38.690 --> 00:06:41.810
And we need to be specifying the name that was exported from here.

124
00:06:42.260 --> 00:06:46.550
So in this case, the two names that we exported will add and this one.

125
00:06:46.550 --> 00:06:48.050
The second one is add and multiply.

126
00:06:48.380 --> 00:06:49.370
So let's try to find that.

127
00:06:49.370 --> 00:06:50.240
So if I say ADD.

128
00:06:50.780 --> 00:06:51.790
So that's the first one.

129
00:06:51.800 --> 00:06:54.200
And the second was add and multiply.

130
00:06:54.620 --> 00:06:55.430
So that's right there.

131
00:06:55.890 --> 00:07:00.830
Now, if I want to be using this as before, we can just say add and multiply.

132
00:07:00.960 --> 00:07:03.110
So this is the third one.

133
00:07:03.740 --> 00:07:07.130
Now is basically the it should be adding these 2/1 two values.

134
00:07:07.130 --> 00:07:09.410
So that is three and multiply by three.

135
00:07:09.410 --> 00:07:10.580
So the answer should be nine.

136
00:07:10.940 --> 00:07:12.210
So let's try to execute that.

137
00:07:12.710 --> 00:07:14.580
And we do see the answer as nine.

138
00:07:14.600 --> 00:07:15.740
So that looks pretty good.

139
00:07:16.910 --> 00:07:17.270
All right.

140
00:07:17.270 --> 00:07:19.900
So that was about how you can be doing the named expert.

141
00:07:20.030 --> 00:07:21.050
Know a shortcut here.

142
00:07:21.530 --> 00:07:26.250
Let's suppose you want to be exporting the name as the name of the function itself.

143
00:07:26.250 --> 00:07:30.530
So for example, here we have put up add an ad, you can use a shortcut.

144
00:07:30.590 --> 00:07:34.460
So what you can do here is you do not need to be specifying the second parameter.

145
00:07:34.790 --> 00:07:36.620
You just need to specify one parameter.

146
00:07:36.980 --> 00:07:41.480
So this means that I'm exporting the same name as what is the function name?

147
00:07:42.110 --> 00:07:43.010
So same thing over here.

148
00:07:43.010 --> 00:07:45.080
Let's suppose we do not want to be changing the name.

149
00:07:45.470 --> 00:07:49.250
What you can do is just remove all of this and just keep it like this.

150
00:07:50.030 --> 00:07:50.360
All right?

151
00:07:50.360 --> 00:07:53.090
So this simplifies your output as well.

152
00:07:54.170 --> 00:07:58.460
Now, for example, if I come here, I need to be fixing this since this is not going to be found anymore.

153
00:07:58.880 --> 00:08:02.000
So if I just say add and multiply, so that is going to be found.

154
00:08:02.000 --> 00:08:03.830
Now, I can use this right here.

155
00:08:04.970 --> 00:08:09.110
So that was about how you're going to be exporting the modules using the common GSC format.

156
00:08:09.980 --> 00:08:10.340
Okay.

157
00:08:10.340 --> 00:08:11.690
So that is about it.

158
00:08:11.750 --> 00:08:15.020
Now there's also one additional thing that I would like to show you in common.

159
00:08:15.030 --> 00:08:15.370
Yes.

160
00:08:15.380 --> 00:08:19.040
And also in the new format, that is the A6 format.

161
00:08:19.430 --> 00:08:24.260
Now what you can be doing is let's suppose you have a lot of function that is just e add and subtract.

162
00:08:24.500 --> 00:08:29.180
Let's suppose you're creating a whole math library where you have multiplication, division factorial

163
00:08:29.180 --> 00:08:29.780
and so on.

164
00:08:30.050 --> 00:08:34.130
So in that case, when you want to be importing, it's going to be a lot of headache, right?

165
00:08:34.490 --> 00:08:40.910
So what you have to do is every time I want to use subtract, I need to see as cost, subtract equals

166
00:08:40.910 --> 00:08:44.480
to require and then go to that function and then select subtract.

167
00:08:44.810 --> 00:08:49.280
So you can imagine that how many of the libraries we are, how many lines are going to be there for

168
00:08:49.280 --> 00:08:49.880
the import?

169
00:08:50.270 --> 00:08:51.710
It's going to be very tedious to maintain.

170
00:08:51.710 --> 00:08:51.980
Right?

171
00:08:52.460 --> 00:08:58.010
So what generally people do is what they can do is they're going to be creating a new file in functions

172
00:08:58.010 --> 00:09:00.320
and call this as index dodgers.

173
00:09:00.680 --> 00:09:02.600
So this is basically your entry file.

174
00:09:03.200 --> 00:09:08.360
Now what I'm going to be doing, what we heard is instead of importing all of this into the main file,

175
00:09:08.390 --> 00:09:12.830
I'm going to be importing all the rest of the functions in this index Dodgers file.

176
00:09:13.310 --> 00:09:21.100
I'll say const add equals to required and then in here as here slash add.

177
00:09:21.710 --> 00:09:24.260
Now I need to be first fixing my Dodgers.

178
00:09:24.260 --> 00:09:28.310
So instead of making it a named export, let's just revert back.

179
00:09:28.310 --> 00:09:30.890
I'm going to be deleting of this function that we had created.

180
00:09:31.310 --> 00:09:35.240
And just make it as a default export as it was that earlier.

181
00:09:35.600 --> 00:09:36.290
Just like that.

182
00:09:37.010 --> 00:09:37.340
All right.

183
00:09:37.340 --> 00:09:39.620
Going back to our index dodgers.

184
00:09:40.280 --> 00:09:46.280
So let's try to import this add functions so we can just say add.

185
00:09:46.880 --> 00:09:47.180
All right.

186
00:09:47.180 --> 00:09:48.540
Now we have the ADD function here.

187
00:09:48.560 --> 00:09:50.510
So anything we can do for this, subtract as well.

188
00:09:51.110 --> 00:09:54.020
See a required dot slash subtract.

189
00:09:54.830 --> 00:09:55.190
Cool.

190
00:09:55.430 --> 00:09:57.020
So we have both of the things here.

191
00:09:57.230 --> 00:09:58.790
Now we are going to be exporting.

192
00:09:59.090 --> 00:10:00.200
So I say a module.

193
00:10:01.900 --> 00:10:03.070
DART exports.

194
00:10:04.060 --> 00:10:06.250
And from here, I'm going to be doing a named export.

195
00:10:06.250 --> 00:10:08.680
So I'll say add, comma, subtract.

196
00:10:09.820 --> 00:10:10.390
All right.

197
00:10:10.480 --> 00:10:15.790
Now, if I go back to I mean, dodges, I'm not going to be including this ad file as passé.

198
00:10:16.090 --> 00:10:19.990
So what I'm going to be doing is I remove all of this, I say convert, and this is, again, going

199
00:10:19.990 --> 00:10:20.970
to be a named import.

200
00:10:20.980 --> 00:10:23.560
But this time I'm not going to be importing from the individual files.

201
00:10:23.650 --> 00:10:26.470
Rather, I'm going to be importing from the index file that we just created.

202
00:10:26.890 --> 00:10:31.660
So I say equals to required that da slash functions.

203
00:10:32.260 --> 00:10:36.010
Now if you notice one more thing, we are not put up slash index ideas.

204
00:10:36.310 --> 00:10:41.530
Now by default when you use the required keyword indexed, gorgias is going to be pulled by default.

205
00:10:41.740 --> 00:10:42.820
That is how it works.

206
00:10:43.270 --> 00:10:48.260
So I can just say dot slash functions and it knows I need to be going to the index to just file nine

207
00:10:48.280 --> 00:10:48.490
here.

208
00:10:48.520 --> 00:10:50.640
You can find the function that we had created.

209
00:10:50.650 --> 00:10:53.980
So these were the act and the subtract function that were exported from there.

210
00:10:54.340 --> 00:11:01.990
They can just say add comma, subtract, call, and I can just use that and make sure that things are

211
00:11:01.990 --> 00:11:03.190
working as expected.

212
00:11:03.370 --> 00:11:07.450
So let's save that clear console and try to run it once again.

213
00:11:07.570 --> 00:11:10.750
And yes, in fact, we can see that the R numbers are added.

214
00:11:11.590 --> 00:11:12.020
Cool.

215
00:11:12.040 --> 00:11:12.940
So that works.

216
00:11:13.390 --> 00:11:19.060
Now, one last feature that I'd like to show you regarding the required keyword are generally importing

217
00:11:19.060 --> 00:11:19.660
and exporting.

218
00:11:19.990 --> 00:11:22.660
Let's suppose you want to be giving out an alias name.

219
00:11:22.960 --> 00:11:27.550
Let's suppose you have another function over here is called as function.

220
00:11:27.560 --> 00:11:28.000
And.

221
00:11:29.310 --> 00:11:32.540
All right, so you have another function and it does something else.

222
00:11:32.550 --> 00:11:35.430
For example, let's suppose just console or log.

223
00:11:35.670 --> 00:11:37.440
Hello, or something like that.

224
00:11:38.130 --> 00:11:42.660
So in this case, you can see that we have a conflict between this and this function.

225
00:11:42.870 --> 00:11:44.430
So our output will be all messed up.

226
00:11:44.910 --> 00:11:48.990
So what we need to be doing this or what you can do is you can give this analysis.

227
00:11:49.470 --> 00:11:55.230
So to do an alias, you can say you can put up a column and say add numbers.

228
00:11:55.410 --> 00:11:59.190
So you can give it any value that you like, any variable that you like.

229
00:11:59.580 --> 00:12:04.440
And now whenever you want to be calling this particular function here, instead of saying ADD, you

230
00:12:04.440 --> 00:12:08.670
say add numbers and whenever you want to be calling this particular function.

231
00:12:09.060 --> 00:12:12.900
So for example, I'm calling this function, so I'll just call it with the keyword.

232
00:12:13.770 --> 00:12:14.160
All right.

233
00:12:14.160 --> 00:12:15.570
Now let's try to execute this.

234
00:12:16.380 --> 00:12:23.010
So as you can see or here we see the output of hello with the wrong spelling and the output that was

235
00:12:23.010 --> 00:12:24.540
the addition of those two numbers.

236
00:12:25.710 --> 00:12:31.350
Okay, so I'm done with this particular requir key word and you see an example of how things are being

237
00:12:31.350 --> 00:12:33.690
imported and exported from the files.

238
00:12:34.080 --> 00:12:38.130
Now, this is very important to understand, not just for the attack, but in general when you're working

239
00:12:38.130 --> 00:12:40.380
with JavaScript, this is going to be a very core concept.

240
00:12:40.860 --> 00:12:46.230
Now let's take a short break, and we're going to be exploring the new format of import and export and

241
00:12:46.230 --> 00:12:50.010
how those things work with regards to the same example that we're seeing here.

242
00:12:50.400 --> 00:12:54.030
Now, once again, if you're already familiar with this, you can go ahead and skip the next video as

243
00:12:54.030 --> 00:12:54.270
well.

244
00:12:54.660 --> 00:12:54.960
All right.

245
00:12:54.960 --> 00:12:57.240
Let's take a short break and see you in the next video.
