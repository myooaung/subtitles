WEBVTT
1
00:00:00.300 --> 00:00:03.450
Welcome back to another video on optimizing our brain for production.

2
00:00:03.780 --> 00:00:08.280
Now, in this video, we're going to be seeing how to be getting rid of all the unusual excess.

3
00:00:08.700 --> 00:00:12.360
Now, you can imagine if you have like a big application, there might be a lot of theaters floating

4
00:00:12.360 --> 00:00:15.120
around which is not really being used in your application.

5
00:00:15.570 --> 00:00:19.620
So let's take at that scenario and what will happen right now if you have some dumb excess.

6
00:00:20.070 --> 00:00:25.050
So I'm going to be opening up the SRT folder and let's navigate to one of our cases file.

7
00:00:25.050 --> 00:00:30.990
For example, this index darts cases and currently all the cases added over here is being used by our

8
00:00:30.990 --> 00:00:31.620
application.

9
00:00:32.190 --> 00:00:34.160
So I'm just going to be adding order mixes.

10
00:00:34.170 --> 00:00:40.890
So for example, let's call that as the excess with a background of maybe yellow.

11
00:00:41.890 --> 00:00:47.380
So once that's done, let me try to run my build and see what happens as NPM Brown dev.

12
00:00:48.040 --> 00:00:50.680
So this is going to be giving our best directory.

13
00:00:51.400 --> 00:00:55.630
It also opens up this analyzer plugin, which I'm not really interested in for now.

14
00:00:56.020 --> 00:00:57.130
So let's go back to the code.

15
00:00:58.240 --> 00:00:58.620
Okay.

16
00:00:58.630 --> 00:01:03.470
So with that, then let's open up our dist folder where the things are interesting and we have the two

17
00:01:03.470 --> 00:01:04.420
access files.

18
00:01:04.900 --> 00:01:07.300
We are not really interested in the models.

19
00:01:07.300 --> 00:01:07.740
Yes.

20
00:01:07.750 --> 00:01:08.830
Let's open up the next one.

21
00:01:09.370 --> 00:01:13.270
And in here you can see that dynamics was added in our final bundle.

22
00:01:13.570 --> 00:01:18.130
Although the CSS is not being used anywhere, which is not really up to my system.

23
00:01:18.760 --> 00:01:21.040
Okay, so let's see, what can we do to fix this?

24
00:01:21.670 --> 00:01:25.690
So let me just close this off and stop my software as well.

25
00:01:26.150 --> 00:01:28.300
And let's head over to our Webpack config.

26
00:01:28.720 --> 00:01:33.850
So in the config, let me first of all disable the bundle analyzer plugins since we are not really using

27
00:01:33.850 --> 00:01:34.000
it.

28
00:01:34.450 --> 00:01:36.700
And I don't want this to be starting as well.

29
00:01:37.180 --> 00:01:41.800
So with that done, we'll also be needing to additional libraries that are going to be helping us to

30
00:01:41.800 --> 00:01:43.180
remove the dead CSS.

31
00:01:43.810 --> 00:01:45.010
So let's get that installed.

32
00:01:45.010 --> 00:01:47.860
So I'll say NPM, I save Dev.

33
00:01:48.130 --> 00:01:54.250
So the first libraries called us purge the SS the back plugin.

34
00:01:56.390 --> 00:01:56.830
All right.

35
00:01:56.870 --> 00:01:59.030
And the second one is called US Club.

36
00:01:59.960 --> 00:02:00.260
Okay.

37
00:02:00.290 --> 00:02:04.040
What the first one does is basically, as the name suggests, it's a plug in for Webpack.

38
00:02:04.040 --> 00:02:07.400
And this is actually going to be helping us to remove or dead access.

39
00:02:07.850 --> 00:02:12.920
And the second one is basically a helper library, which is useful, scanning the folders and basically

40
00:02:12.920 --> 00:02:16.880
return all the files that need to be used by this particular plugin.

41
00:02:17.720 --> 00:02:18.860
Okay, what are we showing you soon?

42
00:02:18.860 --> 00:02:19.950
How are we using both of them?

43
00:02:19.970 --> 00:02:21.800
Let's just go ahead and do the installation.

44
00:02:23.200 --> 00:02:23.470
Okay.

45
00:02:23.470 --> 00:02:25.280
Both the installation was done successfully.

46
00:02:25.300 --> 00:02:28.330
Let's go to the top and get this file imported.

47
00:02:28.900 --> 00:02:34.180
So in here I would say concept, but success equals to required.

48
00:02:35.110 --> 00:02:37.870
And that's Burj CSS as a plug in.

49
00:02:38.290 --> 00:02:40.450
And the second one is Globe.

50
00:02:41.260 --> 00:02:43.780
There's also require globe.

51
00:02:45.180 --> 00:02:47.190
So we have both of the dependencies added.

52
00:02:47.610 --> 00:02:52.800
Let's go to the bottom where we add our plugins and add the new plugin that we have just imported.

53
00:02:53.460 --> 00:02:55.680
So I'm going to be adding it after this copy plugin.

54
00:02:55.740 --> 00:02:57.630
So I can just hit and enter here.

55
00:02:57.870 --> 00:03:00.010
It doesn't really matter where you're going to be entering it.

56
00:03:00.030 --> 00:03:01.830
So you can just do it as you like.

57
00:03:02.370 --> 00:03:07.290
Now in here I'd say new, but yes, let me put a comma there.

58
00:03:07.890 --> 00:03:11.040
And in this, we are going to be passing in a configuration object.

59
00:03:11.640 --> 00:03:14.700
Now, what does the configuration object really look like?

60
00:03:15.120 --> 00:03:19.800
Well, the unity passing in the part that need to be scanned by the purge CSS.

61
00:03:20.250 --> 00:03:22.970
So in here, we are going to be passing a parameter called as part.

62
00:03:23.610 --> 00:03:25.710
And in here we need to be passing string.

63
00:03:26.310 --> 00:03:31.140
Now we cannot really be passing it locations like we had done earlier.

64
00:03:31.150 --> 00:03:35.220
So for example, we can just party pass it as part that it did not really work.

65
00:03:36.120 --> 00:03:39.000
Okay, so what we need to be doing is we need to be using this glob.

66
00:03:39.630 --> 00:03:42.300
And for glob, we need to be creating a new object.

67
00:03:42.720 --> 00:03:44.820
So let me show you what the object looks like.

68
00:03:45.240 --> 00:03:46.370
So in here, we will see.

69
00:03:47.640 --> 00:03:52.710
Maybe some object named as part, but equals to an object.

70
00:03:53.520 --> 00:03:56.170
Okay, so what are we going to be adding in this object?

71
00:03:56.190 --> 00:03:58.830
We are going to be passing a perimeter called see.

72
00:03:59.220 --> 00:04:02.610
And this is going to be consisting of part dart join.

73
00:04:03.270 --> 00:04:09.930
And in here we passing directory name to that directory name comma, SIRC.

74
00:04:10.860 --> 00:04:12.540
So this is the part variable.

75
00:04:12.600 --> 00:04:15.330
And this is going to be added to this SRT attribute.

76
00:04:15.930 --> 00:04:17.800
Right now we have the root part set up.

77
00:04:17.880 --> 00:04:23.160
So what we need to be do next is we come down and set up the parts object in here.

78
00:04:24.000 --> 00:04:29.730
So what we're going to do over here is we'll use the plugin glob and then here we'll see a sync.

79
00:04:30.210 --> 00:04:36.270
So basically sync is for doing a synchronous operation to find all the directories in the given location.

80
00:04:36.810 --> 00:04:41.730
So in here we'll pass in using the back so we can use the dynamic variables here.

81
00:04:42.180 --> 00:04:47.790
So we put up a dollar sign with two braces and we just use the configuration that we had created.

82
00:04:47.790 --> 00:04:51.030
So that was part, but not SIRC.

83
00:04:51.810 --> 00:04:55.650
Then we put up a slash, then two stars, and then a single star.

84
00:04:56.400 --> 00:05:02.190
So basically we're telling that here, just go and find all the files that are there in this location.

85
00:05:02.190 --> 00:05:07.380
So this is the base location, SRT in that all the folders and in that all defined.

86
00:05:08.530 --> 00:05:11.260
Okay so that for the globe dart sync.

87
00:05:11.710 --> 00:05:17.560
Now we also need to be passing additional parameter here and the additional parameter is again, another

88
00:05:17.560 --> 00:05:18.010
object.

89
00:05:18.130 --> 00:05:25.530
So after the back pick, put up a comma and we pass in another object and this is called as no directly.

90
00:05:26.350 --> 00:05:28.370
And then we pass in as true.

91
00:05:29.080 --> 00:05:31.270
So why are we passing the second object?

92
00:05:31.300 --> 00:05:34.810
Well, this is basically due to the configuration of glob.

93
00:05:35.020 --> 00:05:38.940
So you need this particular object so that it can sort of go through it.

94
00:05:38.940 --> 00:05:40.420
It does not matter directly.

95
00:05:40.810 --> 00:05:43.840
And that's why we need this particular configuration here.

96
00:05:44.770 --> 00:05:45.160
Okay.

97
00:05:45.160 --> 00:05:49.360
With that done, let's just save this and try to run our build once again.

98
00:05:49.510 --> 00:05:55.870
I'll just clear up the console and see and PM run dev and let's see if it works or if it's a matter.

99
00:05:56.260 --> 00:05:56.530
Okay.

100
00:05:56.560 --> 00:05:59.230
So my build was successful, as we can see here.

101
00:05:59.590 --> 00:06:03.520
And the main thing that we need to be seeing is in our output directory.

102
00:06:03.880 --> 00:06:09.280
And this time you can see that the file is normal present the configuration policy as is normal present.

103
00:06:09.670 --> 00:06:13.720
And we have successfully removed this process that was not used in our application.

104
00:06:14.050 --> 00:06:15.400
And that's really, really good.

105
00:06:15.580 --> 00:06:17.860
And this is really going to help us optimize our build for the.

106
00:06:18.960 --> 00:06:19.260
Okay.

107
00:06:19.260 --> 00:06:21.930
So with that, then I would just like to show you one.

108
00:06:21.930 --> 00:06:22.530
Gotcha.

109
00:06:22.530 --> 00:06:28.110
Or, you know, there might be cases where your plug in is removing the cases, but you might be adding

110
00:06:28.110 --> 00:06:30.540
dynamically or some, some in some other way.

111
00:06:30.540 --> 00:06:30.840
Right.

112
00:06:31.140 --> 00:06:36.660
So you should have some way to be sort of explicitly telling this plug in that, hey, don't mess up

113
00:06:36.660 --> 00:06:41.190
this particular system, so don't exclude it when you're running this particular plug in.

114
00:06:41.850 --> 00:06:43.020
So how do we do that?

115
00:06:43.740 --> 00:06:47.010
Well, if you want to be doing that, you can also pass in another parameter.

116
00:06:47.220 --> 00:06:50.130
And this department is called us safe list.

117
00:06:50.640 --> 00:06:54.570
So in safe list, just make sure that the is small, it's not capital.

118
00:06:55.170 --> 00:07:00.180
So in the safe list, you can pass in an attic and the area is basically going to be containing the

119
00:07:00.190 --> 00:07:00.900
class names.

120
00:07:01.320 --> 00:07:04.710
So for example, in our index last year, it was called as dummy exit.

121
00:07:04.720 --> 00:07:10.080
So let me just go ahead and copy that and let me just place it in this area just like that.

122
00:07:11.200 --> 00:07:11.500
All right.

123
00:07:11.500 --> 00:07:16.360
So what's going to happen with Ed is going to scan through all of this directory, but since we have

124
00:07:16.360 --> 00:07:21.910
added the CCS in our safe list, so it's going to be adding this regardless in the final build.

125
00:07:22.600 --> 00:07:22.900
Okay.

126
00:07:22.900 --> 00:07:26.940
So let me try to run the build once again by NPM run dev.

127
00:07:27.860 --> 00:07:28.130
Okay.

128
00:07:28.160 --> 00:07:29.360
So our builder is now complete.

129
00:07:29.390 --> 00:07:34.190
Now, if I try to inspect my final boot, you see that access was added once again.

130
00:07:34.670 --> 00:07:39.680
So this is how you can be basically ignoring some classes from being pushed automatically.

131
00:07:40.310 --> 00:07:42.710
And there are multiple ways of passing the save list.

132
00:07:42.920 --> 00:07:47.360
And I'm just going to be pointing you to the documentation so that you can just go through it and you

133
00:07:47.360 --> 00:07:49.550
can be configuring it according to your needs.

134
00:07:50.270 --> 00:07:50.540
Okay.

135
00:07:50.540 --> 00:07:54.140
Now for the documentation, I already have the links open, so I'd just like to show it to you.

136
00:07:54.650 --> 00:07:59.490
So this is called as page six dot com slash configuration dot estimate.

137
00:07:59.990 --> 00:08:03.020
And in this, if you go to the configurations on the left side.

138
00:08:03.090 --> 00:08:03.830
So right here.

139
00:08:04.220 --> 00:08:10.280
And so for example, if you search for see if list and you can just scroll through it.

140
00:08:10.670 --> 00:08:12.380
So these are the safe list.

141
00:08:12.380 --> 00:08:19.130
You can search like directly as perimeter or probably you also need to be passing in some regular expressions

142
00:08:19.140 --> 00:08:20.270
so you can do that as well.

143
00:08:20.600 --> 00:08:23.840
So as you can see here, they have used like this regular expression.

144
00:08:24.560 --> 00:08:25.790
So that is also possible.

145
00:08:26.240 --> 00:08:30.830
Now, again, I'm not going to be implementing all of this because your case might be different, but

146
00:08:30.980 --> 00:08:32.360
you know where to we looking at now?

147
00:08:32.990 --> 00:08:36.530
Similarly, if you want to be doing some pattern matching with Globe, you can just sort of radical

148
00:08:36.710 --> 00:08:38.180
documentation on NPM.

149
00:08:38.600 --> 00:08:43.070
And this tells you how you can be using the regular expression for matching blobs and so on.

150
00:08:43.490 --> 00:08:46.760
So as you see here, we have a lot of backgrounds that can be implemented.

151
00:08:47.860 --> 00:08:48.100
Okay.

152
00:08:48.100 --> 00:08:50.740
So that was about how do we removing our negotiators?

153
00:08:50.980 --> 00:08:54.550
Let's take a short break and see what else can we do in the production mode.
