WEBVTT
1
00:00:00.060 --> 00:00:00.690
Welcome back.

2
00:00:00.870 --> 00:00:05.280
In this, we are going to be seeing another the concept of production leaving our Web backbone, and

3
00:00:05.280 --> 00:00:06.540
that is the concept of shaming.

4
00:00:06.900 --> 00:00:10.230
Now, if you're using some old libraries, this is going to be very helpful for you.

5
00:00:10.710 --> 00:00:13.170
So let's first explore what is this concept all about?

6
00:00:13.560 --> 00:00:18.360
So for example, let's suppose I have a library called as animate ideas and it has a function called

7
00:00:18.360 --> 00:00:18.930
as animate.

8
00:00:19.380 --> 00:00:24.240
Now by default, what the libraries used to be doing is they're just going to be referencing some external

9
00:00:24.240 --> 00:00:28.800
library through some symbols of example, we are referencing the equity, using the dollar symbol,

10
00:00:29.160 --> 00:00:32.670
and then we say dot item to fetch some maybe element on the DOM.

11
00:00:33.120 --> 00:00:37.890
And if this element is not found on your window object, all the application is going to break.

12
00:00:38.250 --> 00:00:42.240
So generally they would mention in the documentation that, hey, you need to be going and importing

13
00:00:42.240 --> 00:00:47.760
the script in your mail file, and once descriptors loaded in the mail, it's automatically going to

14
00:00:47.760 --> 00:00:53.280
bind the symbol on your window object just like this, and then it's going to be used in the animate

15
00:00:53.280 --> 00:00:53.700
function.

16
00:00:54.270 --> 00:00:55.920
So this was the concept generally.

17
00:00:56.220 --> 00:00:58.980
Now how would you implement something like this using the pack?

18
00:00:59.010 --> 00:01:01.470
How would you get this dollar symbol implemented?

19
00:01:02.070 --> 00:01:06.210
Now, just to give you a showcase, our current application already uses the equity.

20
00:01:06.570 --> 00:01:13.230
And if you just go to your console and type in here as Windows dot dollar, we can see that we are returned

21
00:01:13.230 --> 00:01:13.920
with a function.

22
00:01:13.950 --> 00:01:16.050
This denotes that the equity is binded.

23
00:01:16.440 --> 00:01:18.450
Similar thing we can also do for underscore.

24
00:01:18.750 --> 00:01:22.650
So this will give us the load library, which is again bind it on the window object.

25
00:01:23.370 --> 00:01:27.060
Okay, let's take another library since these two already bind it.

26
00:01:27.060 --> 00:01:27.810
And what are we using?

27
00:01:27.810 --> 00:01:29.190
The example of moment?

28
00:01:30.120 --> 00:01:34.830
Let's go to our code base and I've already created a folder called Assuming in which you're going to

29
00:01:34.830 --> 00:01:35.820
be seeing this example.

30
00:01:36.330 --> 00:01:40.110
So for that, let's go ahead and first install this moment library.

31
00:01:40.560 --> 00:01:45.810
So I'll just clear of the console and say npm install save moment.

32
00:01:45.930 --> 00:01:48.720
So that's amore and me and be okay.

33
00:01:48.720 --> 00:01:52.380
So what is this library about is basically used for formatting the data.

34
00:01:52.860 --> 00:01:57.360
So we do not really need to go into the implementation argument, but we are just going to be using

35
00:01:57.360 --> 00:01:58.470
a small function from it.

36
00:01:59.070 --> 00:02:02.970
Let's open up the source folder and open up the libs in the loop.

37
00:02:02.970 --> 00:02:04.590
So I'm going to be creating a new file.

38
00:02:04.890 --> 00:02:08.880
Let's call this as sure date dot G's.

39
00:02:09.540 --> 00:02:11.640
I'm going to be exporting our function from here.

40
00:02:11.640 --> 00:02:14.970
So I would say export function sure did.

41
00:02:15.750 --> 00:02:18.510
And we also are going to be importing movement for now.

42
00:02:18.510 --> 00:02:22.140
So let's say import and from moment.

43
00:02:23.160 --> 00:02:25.440
So that's more immunity.

44
00:02:26.310 --> 00:02:33.420
Now, what I can do here is I can say console log and here I see amante.

45
00:02:33.870 --> 00:02:41.430
And this thing basically takes in a data object so I can say new date and then I can say after this

46
00:02:41.430 --> 00:02:46.080
DART format and we are going to be formatting it as D.D. and.

47
00:02:46.090 --> 00:02:46.380
Mm.

48
00:02:47.350 --> 00:02:47.640
Why?

49
00:02:47.650 --> 00:02:48.220
Why, why?

50
00:02:49.190 --> 00:02:49.550
Okay.

51
00:02:50.030 --> 00:02:52.200
So don't worry about the implementation.

52
00:02:52.220 --> 00:02:56.600
Just make sure that you have this index proper so that the code works as expected.

53
00:02:57.410 --> 00:02:59.660
Okay, we have this exported function.

54
00:02:59.660 --> 00:03:00.160
Should it?

55
00:03:00.170 --> 00:03:02.870
Let's go to the index dogs and get this imported.

56
00:03:03.470 --> 00:03:10.010
So on the top I'll say import and the calibrations from dot slash.

57
00:03:11.260 --> 00:03:15.790
Lives are shorted and the function is also shorted.

58
00:03:16.800 --> 00:03:17.130
Okay.

59
00:03:17.130 --> 00:03:21.300
Now, if I just try to execute the function right here, so I'll say showed it right here.

60
00:03:21.450 --> 00:03:26.550
A We should be seeing the console dialog in the output, so let's save that and run our back.

61
00:03:26.550 --> 00:03:33.420
So by saying NPM, run, serve, so that should start of our solar and we should be seeing the output

62
00:03:33.420 --> 00:03:34.260
in the console.

63
00:03:35.360 --> 00:03:39.370
Let me open up my console here and that's right here.

64
00:03:39.380 --> 00:03:42.230
And we can see that we have the output after this date.

65
00:03:42.770 --> 00:03:43.010
Okay.

66
00:03:43.010 --> 00:03:44.330
So things are working pretty well.

67
00:03:44.750 --> 00:03:49.040
But just imagine, as I showed in the earlier case, we do not have this import statement.

68
00:03:49.040 --> 00:03:51.890
We're using some legacy library and this is not there.

69
00:03:52.430 --> 00:03:57.980
So if I don't have that in there and just try to see if this file and if I go back to my browser, we

70
00:03:57.980 --> 00:04:01.670
can see that the moment is not defined and this is as expected.

71
00:04:02.090 --> 00:04:03.260
Now, how do we fix this?

72
00:04:03.590 --> 00:04:07.880
In general, we are going to be opening some external library and trying to modify that, right?

73
00:04:07.880 --> 00:04:13.280
So we are not going to be really doing that now to make sure that this library has the expected library.

74
00:04:13.280 --> 00:04:15.520
So it expects to empty object.

75
00:04:15.530 --> 00:04:18.470
So to provide that, we can go to our web backfill.

76
00:04:19.040 --> 00:04:22.580
So I'll just move on to my Webpack that's right here.

77
00:04:23.030 --> 00:04:25.280
And we're going to be adding some additional configurations here.

78
00:04:25.760 --> 00:04:29.900
Now, what we do here is we are going to be using the concept of provide plugin.

79
00:04:30.290 --> 00:04:33.500
So provide plugin is provided by default by Webpack.

80
00:04:33.530 --> 00:04:38.900
So since it's a plugin, we can just minimize this modules and we can add plugins right here.

81
00:04:39.230 --> 00:04:44.330
It doesn't really matter if you add it at the top or the bottom, it should just be there in some place.

82
00:04:44.870 --> 00:04:50.330
So in here we'll say new and this time the plugin is going to be imported directly from Webpack.

83
00:04:50.720 --> 00:04:54.650
So let's go on top and we will be needing the Webpack library itself.

84
00:04:54.650 --> 00:04:56.930
So second that back.

85
00:04:58.180 --> 00:04:59.760
Equals to required.

86
00:05:00.190 --> 00:05:02.280
And that's that back right there.

87
00:05:03.130 --> 00:05:03.490
Okay.

88
00:05:03.490 --> 00:05:09.670
Now, once we have that back important, we can just go to our plugins and then we'll see that back

89
00:05:10.060 --> 00:05:10.540
dart.

90
00:05:11.850 --> 00:05:13.080
Provide a plug in.

91
00:05:13.110 --> 00:05:17.580
So this is something built into Webpack and let's see how we can be using this provide plugin.

92
00:05:17.590 --> 00:05:21.390
So again, it's going to be a function with an object inside for configuration.

93
00:05:21.930 --> 00:05:26.040
And in the configuration we need to be specifying what are we trying to provide.

94
00:05:26.430 --> 00:05:29.730
So in our case we are providing something called as a guarantee.

95
00:05:29.730 --> 00:05:32.610
So that was the object that library was looking for.

96
00:05:33.060 --> 00:05:37.890
And we have already installed a library that was moment, so we need to be pointing to that.

97
00:05:38.280 --> 00:05:40.230
So I would say we had us moment.

98
00:05:40.290 --> 00:05:45.540
Now make sure that this name should match as what has been installed in your packages.

99
00:05:45.540 --> 00:05:50.610
And so in our package or Jason, we have this name Heroes moment and that is matching the name over

100
00:05:50.610 --> 00:05:53.670
here and this can be any name that you want to be providing.

101
00:05:54.480 --> 00:05:55.380
Okay, that's done.

102
00:05:55.440 --> 00:05:57.660
Let me just fix this and save my file.

103
00:05:58.020 --> 00:06:01.200
As usual, we need to be starting off our deficit once again.

104
00:06:01.500 --> 00:06:03.000
So let's say NPM run.

105
00:06:03.000 --> 00:06:06.420
So, okay, let's just give that a second.

106
00:06:06.990 --> 00:06:10.320
Our browser opens up and let's check out what's happening here.

107
00:06:11.160 --> 00:06:12.960
Let me right click and see inspect.

108
00:06:13.560 --> 00:06:17.610
And if I go to the console, we can see that our plugin is working once again.

109
00:06:17.940 --> 00:06:22.560
It's able to resolve that MMP, which was not found earlier, and that's exactly how we're going to

110
00:06:22.560 --> 00:06:27.750
be resolving or modifying the global level exports that are required by some of those legacy libraries.

111
00:06:28.140 --> 00:06:30.570
The same concept can also be applied for equity.

112
00:06:30.900 --> 00:06:36.450
So for example, if I had another provide plugin, I can just put all we had as dollar and then let's

113
00:06:36.450 --> 00:06:38.010
suppose I had equity in here.

114
00:06:38.520 --> 00:06:45.120
So what I can do in that case, I can just go to my let's suppose indexed charges and I can actually

115
00:06:45.120 --> 00:06:46.980
get rid of the equity itself.

116
00:06:46.980 --> 00:06:52.590
So I can get rid of the equity in here and I can also get rid of the equity import that was there in

117
00:06:52.590 --> 00:06:53.160
quarters.

118
00:06:53.580 --> 00:06:59.850
So let's get rid of that here as well just to make sure I'll go back to my file and that's right there.

119
00:07:00.240 --> 00:07:05.700
Now, since we have made some modifications in our Webpack file, we need to be starting of this once

120
00:07:05.700 --> 00:07:05.970
again.

121
00:07:06.660 --> 00:07:12.000
So let's NPM run stuff and we can see that our page is working as before.

122
00:07:12.420 --> 00:07:18.990
Now, if I just go down, if I just try to use the email, address those, type in and see subscribe,

123
00:07:19.380 --> 00:07:24.930
and if I just resize by browser as well, you can see that I have got the error message printed here

124
00:07:24.930 --> 00:07:26.640
and this works basically on the equity.

125
00:07:26.970 --> 00:07:30.270
So we are sure that the equity library is not working as expected.

126
00:07:31.080 --> 00:07:31.380
Okay.

127
00:07:31.380 --> 00:07:36.150
So that's about skimming and how you can be using it if you are facing some issues regarding things

128
00:07:36.150 --> 00:07:39.180
such as the symbol is not defined in the browser.
