1
00:00:00,180 --> 00:00:02,260
So how did things go setting up this year?

2
00:00:02,270 --> 00:00:02,880
Says Lauder.

3
00:00:03,270 --> 00:00:04,200
Well, you're successful.

4
00:00:04,590 --> 00:00:08,550
So if there are some issues, you can just follow along with me in this video and we're going to be

5
00:00:08,550 --> 00:00:10,890
seeing how do we adding those lawyers in place?

6
00:00:11,430 --> 00:00:14,460
Now, as usual, I'm going to be creating another folder here.

7
00:00:14,880 --> 00:00:19,800
So as I told you earlier multiple times, this is just for tracking purpose, so that if you get stuck,

8
00:00:19,800 --> 00:00:23,220
you can just come to the appropriate folder and load up from there.

9
00:00:23,820 --> 00:00:24,180
Okay.

10
00:00:24,180 --> 00:00:28,560
So I'm going to be naming this as the RSS loaders.

11
00:00:29,610 --> 00:00:29,970
Okay.

12
00:00:29,970 --> 00:00:30,900
So that's done.

13
00:00:30,930 --> 00:00:33,210
Let's quickly save that.

14
00:00:33,210 --> 00:00:40,410
And I'm going to be moving up one folder that's CD 8.2 project caseloads.

15
00:00:41,220 --> 00:00:41,580
Okay.

16
00:00:41,580 --> 00:00:47,250
With that done, let me just close off all my tabs, open up my folder and open up diva pack configuration.

17
00:00:48,270 --> 00:00:48,690
Okay.

18
00:00:48,690 --> 00:00:52,800
So as we've seen earlier, we need to be installing couple of loaders, possibly SS.

19
00:00:53,100 --> 00:00:54,810
So let's go ahead install those first.

20
00:00:54,900 --> 00:01:00,510
So it's going to be NPM, install there, send PMI in chart, then we can see save.

21
00:01:01,930 --> 00:01:05,860
Dev and I just need the two dashes also in front.

22
00:01:06,430 --> 00:01:08,350
And after that we can install all the loads.

23
00:01:08,350 --> 00:01:11,290
So the first one is going to be the excess loader.

24
00:01:11,300 --> 00:01:14,740
Then we need the second one as style loader.

25
00:01:15,310 --> 00:01:18,580
And we also need the SPSS loader.

26
00:01:19,330 --> 00:01:23,200
And finally, we also need the code package that is SC SS.

27
00:01:24,160 --> 00:01:28,630
Okay, so these are all the loaders that are going to be required and we can now start updating the

28
00:01:28,630 --> 00:01:30,370
configuration in other back file.

29
00:01:30,970 --> 00:01:33,250
Now, I know you want to be averaging the loaders.

30
00:01:33,250 --> 00:01:34,660
We need to add another section.

31
00:01:34,660 --> 00:01:37,060
Yeah, that's called as module.

32
00:01:37,180 --> 00:01:40,030
And in the module, we are going to be setting up the rules.

33
00:01:40,210 --> 00:01:41,770
So these are the rules.

34
00:01:42,100 --> 00:01:45,820
And in the rules we are going to be adding a nati which takes in an object.

35
00:01:46,360 --> 00:01:48,460
So in the object we need to be adding the perimeter.

36
00:01:48,460 --> 00:01:53,420
The first one is going to be the test section and the second one is the loaders.

37
00:01:53,440 --> 00:01:58,900
So in this case, we are going to be using the loaders, so we'll type in use and then we can define

38
00:01:58,900 --> 00:01:59,980
the loaders that we need.

39
00:02:00,280 --> 00:02:00,610
All right.

40
00:02:00,610 --> 00:02:06,700
In the test section, I can just add the regular expression for testing so I can just put in the slash

41
00:02:06,700 --> 00:02:08,940
then or here, I'll say dot theses.

42
00:02:09,490 --> 00:02:11,620
So that's our CSC file getting tested.

43
00:02:12,190 --> 00:02:16,720
Now, the loaders that we're going to be using over here is the style loader.

44
00:02:17,230 --> 00:02:23,710
So there's the style loader and then we need to use the CAS loader just like that.

45
00:02:24,550 --> 00:02:24,850
Okay.

46
00:02:24,850 --> 00:02:27,520
So we have the excess rules set up.

47
00:02:27,880 --> 00:02:30,580
We also need to be doing the same thing for access.

48
00:02:30,640 --> 00:02:33,730
Since I told you that we're using both of those types of format.

49
00:02:34,240 --> 00:02:36,520
Now, in this case, it's going to be a little bit different.

50
00:02:36,520 --> 00:02:40,330
So we will say s e and then.

51
00:02:41,460 --> 00:02:42,040
See.

52
00:02:42,940 --> 00:02:43,860
SS Alright.

53
00:02:44,220 --> 00:02:45,960
So that took some time, but we are there.

54
00:02:46,080 --> 00:02:51,360
All right, so we have the access and access supported over here using this loader.

55
00:02:51,930 --> 00:02:54,630
The only additional thing that we need, all we had is to define that.

56
00:02:54,630 --> 00:02:58,140
We also need to be using the SC SS loader.

57
00:02:59,290 --> 00:02:59,680
Okay.

58
00:02:59,680 --> 00:03:01,070
So that looks pretty good.

59
00:03:01,090 --> 00:03:03,490
We have all the loaders in place now.

60
00:03:03,490 --> 00:03:05,770
We can quickly try to run this file once again.

61
00:03:05,770 --> 00:03:10,900
So I just saved this file and close this and see and PM run.

62
00:03:11,020 --> 00:03:12,730
Dev okay.

63
00:03:12,730 --> 00:03:17,860
All that pack configuration is starting off and this time we do not actually get this CSS errors.

64
00:03:18,340 --> 00:03:20,110
So things looks pretty great.

65
00:03:20,440 --> 00:03:26,770
We are able to create the dest folder in that we have the two bundle files and this is also is getting

66
00:03:26,770 --> 00:03:27,370
loaded now.

67
00:03:27,790 --> 00:03:33,490
Now what are we going to be doing next is we are going to be moving the cases file into our index file.

68
00:03:33,880 --> 00:03:38,800
So if we just open our four SRT folder, open up the index start edge HTML.

69
00:03:39,340 --> 00:03:44,440
Now in the next hour, we can see that a couple of the easiest files we have, the index starts here

70
00:03:44,460 --> 00:03:46,990
says we have font awesome and also bootstrap.

71
00:03:47,650 --> 00:03:52,930
Now let's see how we can be importing this using the import statement and remove it from the steam file.

72
00:03:53,470 --> 00:03:58,840
So for doing that, what we need to be doing is so first of all, let's fix this font or some dortmunder

73
00:03:58,850 --> 00:03:59,380
cases.

74
00:03:59,770 --> 00:04:05,810
So for that, what I'll do is instead of directly importing it in the DC file, let's go to our index

75
00:04:05,810 --> 00:04:06,880
start CSS file.

76
00:04:07,240 --> 00:04:11,950
Now, we have not seen this earlier, but you can also import one cases into another cases.

77
00:04:12,310 --> 00:04:18,820
So what I can say is at the root import and in this I can just point to that particular file so we can

78
00:04:18,820 --> 00:04:24,280
say dot slash and then we can go to the assets and in that we have the cases font.

79
00:04:24,280 --> 00:04:24,820
Awesome.

80
00:04:24,820 --> 00:04:25,730
Not mandatory.

81
00:04:25,730 --> 00:04:26,140
Yes.

82
00:04:26,800 --> 00:04:32,830
So with that done, as soon as our index starts, this file is loaded in our browser, it's going to

83
00:04:32,830 --> 00:04:34,180
be pulling up all the font.

84
00:04:34,180 --> 00:04:34,570
Awesome.

85
00:04:34,570 --> 00:04:35,860
And Garcia says as well.

86
00:04:36,790 --> 00:04:39,190
Okay, so that's done with the font.

87
00:04:39,190 --> 00:04:40,210
Awesome Dortmund.

88
00:04:40,280 --> 00:04:45,690
Garcia says, Now let's close this file and remove this dependency from our index start estimate.

89
00:04:47,020 --> 00:04:50,380
Let's see the next one, which is the bootstrap dortmunder cases.

90
00:04:50,920 --> 00:04:56,830
Now, another approach that people generally follow is having a separate vendor Nazi SS file and just

91
00:04:56,830 --> 00:04:58,600
importing that when the Nazi SS.

92
00:04:58,990 --> 00:05:00,850
Now let's see what I'm trying to say here.

93
00:05:01,510 --> 00:05:03,670
I'm going to be first creating a new file here.

94
00:05:03,730 --> 00:05:09,220
So I'll say new file and let's call this as maybe underscore render.

95
00:05:10,450 --> 00:05:17,650
Dot SCA says so I'm going to be using all my SCA says dependencies of the event is added right here

96
00:05:18,190 --> 00:05:23,860
so if I just open up the bootstrap documentation so this is the documentation opened up you can see

97
00:05:23,860 --> 00:05:29,440
that we have a section called importing styles and in that you can actually be importing bootstrap just

98
00:05:29,440 --> 00:05:29,890
like this.

99
00:05:30,340 --> 00:05:36,220
So you have the bootstrap, then it goes to the SC assets folder and it loads all the bootstrap styles

100
00:05:36,670 --> 00:05:42,490
so we can just copy all of this import statement and add it to our vendor dot access.

101
00:05:42,880 --> 00:05:43,870
So that's import.

102
00:05:43,960 --> 00:05:49,390
Then we have a timeline bootstrap this does that we need to be going to the node modules folder and

103
00:05:49,390 --> 00:05:51,520
then finding out the bootstrap dependency.

104
00:05:51,940 --> 00:05:54,340
And within that we should be having the access folder.

105
00:05:54,700 --> 00:05:58,150
Within that we have the bootstrap dependency of the access.

106
00:05:59,550 --> 00:06:05,580
Okay with that then let's just see if this closed this file and remove the bootstrap dependency from

107
00:06:05,580 --> 00:06:06,600
here as well.

108
00:06:07,800 --> 00:06:09,120
All right, so that looks good.

109
00:06:09,480 --> 00:06:11,390
Now, finally, the question comes in.

110
00:06:11,400 --> 00:06:17,340
We need to be loading our index Nazi SS and also our access file that we had created.

111
00:06:17,820 --> 00:06:21,930
So for that, we can also be removing our index Nazi SS dependency from here.

112
00:06:22,560 --> 00:06:30,120
Go back to our index, start guys and load all our dependencies right here so I can say import and then

113
00:06:30,120 --> 00:06:34,000
we can be calling the index dot thesis.

114
00:06:34,440 --> 00:06:36,360
So that's our index Nazi SS.

115
00:06:36,690 --> 00:06:39,450
And then we can also be importing our access.

116
00:06:39,840 --> 00:06:46,860
So that is not slash vendor underscore vendor nazi SS.

117
00:06:47,760 --> 00:06:51,030
Okay, so we have all our things as dependencies added here.

118
00:06:51,360 --> 00:06:55,440
Now you can also see that we also have a toaster dart access file.

119
00:06:55,470 --> 00:06:59,940
So actually you can be moving this also in the same folder as we had earlier.

120
00:06:59,940 --> 00:07:01,020
So that was the vendor.

121
00:07:01,350 --> 00:07:04,380
So this is also a dependency that was installed externally.

122
00:07:04,740 --> 00:07:08,640
So what I'll do is I'll just copy this dependency from here.

123
00:07:09,390 --> 00:07:16,140
And in this case, we'll just go to our vendor dot access file, add in another import statement and

124
00:07:16,140 --> 00:07:20,310
then just paste that location just like that.

125
00:07:21,330 --> 00:07:22,650
Okay, so that's done.

126
00:07:22,890 --> 00:07:26,640
We also need to be just fixing up a little bit our vendor diseases.

127
00:07:26,640 --> 00:07:32,970
So as you can see right now, this vendor DOT accesses altered our CRC folder so you can just drag this

128
00:07:32,970 --> 00:07:36,630
and move it to our SLC folder, making sure that it's at the same level.

129
00:07:37,170 --> 00:07:40,080
Now with that done, everything should be dissolving automatically.

130
00:07:40,800 --> 00:07:41,100
Okay.

131
00:07:41,160 --> 00:07:46,740
So I can just see if this file and closes and we have our index start file, we can also remove this

132
00:07:46,740 --> 00:07:50,550
toaster dependency from here and everything should work as expected.

133
00:07:50,970 --> 00:07:53,310
So let's try to run our build once again.

134
00:07:53,340 --> 00:07:57,120
So I'll just clear the console and PM run dev.

135
00:07:57,690 --> 00:08:00,180
And with that done, let's wait for it.

136
00:08:00,600 --> 00:08:01,320
And there you go.

137
00:08:01,320 --> 00:08:05,490
We see that Albert is now successful and things should be looking much better.

138
00:08:05,880 --> 00:08:09,960
So what I'm going to be doing now is let's try to load our index start HTML.

139
00:08:10,320 --> 00:08:15,960
Now, if I just open up the index start estimate file and let's try to see what happens here.

140
00:08:15,990 --> 00:08:21,870
So if I just go at the bottom of the page and in here right now, you can see that it's pointing to

141
00:08:21,870 --> 00:08:22,750
the index start.

142
00:08:22,800 --> 00:08:23,160
Yes.

143
00:08:23,580 --> 00:08:25,500
Let's do some manual work right now.

144
00:08:25,620 --> 00:08:29,400
And in here, we need to be pointing to the index start bundle dogs.

145
00:08:29,850 --> 00:08:36,180
So instead of this, I'm going to be moving up on folder dist and then see index start bundled out.

146
00:08:36,180 --> 00:08:36,570
Yes.

147
00:08:37,380 --> 00:08:37,730
Okay.

148
00:08:37,740 --> 00:08:39,660
So we are going to be automating all of this soon.

149
00:08:39,660 --> 00:08:42,870
But for now, let's just make sure things are working as expected.

150
00:08:43,230 --> 00:08:47,220
Right click and set will in finder and let's double click to open.

151
00:08:48,000 --> 00:08:49,530
And things are looking pretty well.

152
00:08:49,530 --> 00:08:52,050
We can see that our type library was working.

153
00:08:52,290 --> 00:08:56,220
And if I just inspect this, you can also see all the dependencies loading in.

154
00:08:56,250 --> 00:09:02,010
So I just say refresh and we are loading our index start bundle, which contains all our dependencies

155
00:09:02,010 --> 00:09:03,600
that reloaded via NPM.

156
00:09:03,870 --> 00:09:04,200
All right.

157
00:09:04,200 --> 00:09:06,900
Things looks pretty good after adding this process loaders.

158
00:09:07,230 --> 00:09:08,460
But this one problem here.

159
00:09:08,490 --> 00:09:14,700
So if I scroll down and we have this subscribe to newsletter and if I just enter a dummy email ID here

160
00:09:14,700 --> 00:09:18,270
and try to click on subscribe, did not see the error message that was shown earlier.

161
00:09:18,780 --> 00:09:24,030
Now if I just try to inspect and see what's going on wrong here, go to the console and in here you

162
00:09:24,030 --> 00:09:29,160
can see that the validate was not defined and this basically means that the library was not imported.

163
00:09:29,580 --> 00:09:32,010
So let's go back to our code and try to fix this off.

164
00:09:32,490 --> 00:09:38,190
So going back to our index start, yes, we are going to be adding the additional dependencies to that

165
00:09:38,190 --> 00:09:39,630
as of validate.

166
00:09:40,380 --> 00:09:43,050
So are import validate from validate dodges.

167
00:09:43,320 --> 00:09:47,460
And we also need another dependency that is for showing that toaster icon.

168
00:09:47,940 --> 00:09:52,770
So we need to import that as well so as to import toaster from toaster.

169
00:09:53,520 --> 00:09:53,850
Okay.

170
00:09:53,850 --> 00:09:54,900
So that looks pretty good.

171
00:09:54,960 --> 00:09:56,070
Let me see if that off.

172
00:09:56,430 --> 00:09:59,190
Clear the console and try to ring the build once again.

173
00:09:59,880 --> 00:10:00,250
Okay.

174
00:10:00,270 --> 00:10:06,840
The build as successful, if I go back to my browser, hit on refresh and this time you see that we

175
00:10:06,840 --> 00:10:12,210
have the email address and if I enter some wrong email address and click unsubscribe, we do see the

176
00:10:12,210 --> 00:10:12,960
error message.

177
00:10:13,410 --> 00:10:14,650
So that's fantastic.

178
00:10:14,670 --> 00:10:16,050
Things are looking pretty good now.

179
00:10:16,410 --> 00:10:16,740
All right.

180
00:10:16,740 --> 00:10:18,780
So that's pretty much it for this video.

181
00:10:19,050 --> 00:10:25,710
And what are you going to be doing next is going to be copying this HTML file into the DIST folder and

182
00:10:25,710 --> 00:10:27,840
we are also going to be running the Webpack dev server.

183
00:10:27,840 --> 00:10:31,650
So we do not need to be actually running the build again and again manually.

184
00:10:32,070 --> 00:10:36,720
So I want you to try to do this by yourself, as have already covered this in the previous videos.

185
00:10:37,080 --> 00:10:39,620
As a heads up, we are going to be installing two dependencies.

186
00:10:39,630 --> 00:10:45,000
One is going to be a steamvr backed plugin, and the second one is going to be the Webpack dev server.

187
00:10:45,390 --> 00:10:50,580
And you also need to be doing the configurations in the Webpack file as well as the package Node.js.

188
00:10:50,580 --> 00:10:52,660
And so that's about it.

189
00:10:52,680 --> 00:10:55,770
Let's take a short break and continue on in the next video.
