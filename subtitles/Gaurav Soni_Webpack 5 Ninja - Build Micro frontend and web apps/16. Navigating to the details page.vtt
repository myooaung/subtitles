WEBVTT
1
00:00:00.150 --> 00:00:05.130
You guys, you're going to be starting off navigating between the pages, using the click lessons.

2
00:00:05.490 --> 00:00:09.780
Now, before we get started, if you're not able to get some of this all started or maybe you're facing

3
00:00:09.780 --> 00:00:15.540
some issues, what I would suggest to you is users 11.1 for database and continue along with the project

4
00:00:15.540 --> 00:00:16.470
navigation set up.

5
00:00:16.950 --> 00:00:22.110
So I've already copied this into the 11.2 folder and I'm going to be doing all the future development

6
00:00:22.110 --> 00:00:23.520
in this 11.2 folder.

7
00:00:23.910 --> 00:00:24.240
All right.

8
00:00:24.240 --> 00:00:27.750
With that said, let's just switch over to a browser and see what we have done so far.

9
00:00:28.200 --> 00:00:32.460
Now that we've got all the other routes set up in the main application, we're going to be seeing how

10
00:00:32.460 --> 00:00:36.660
we can click on any of this movie tiles and get navigated to the details page.

11
00:00:37.140 --> 00:00:40.290
So for that, let's go back to our code and make some changes.

12
00:00:40.830 --> 00:00:45.180
Now we are going to be making the changes in the homepage application.

13
00:00:45.330 --> 00:00:46.330
So that's right here.

14
00:00:46.890 --> 00:00:53.640
And if I just open up the CAC and within this we have the components and then we have the home content

15
00:00:53.640 --> 00:00:54.590
dot gsx.

16
00:00:55.290 --> 00:00:55.620
All right.

17
00:00:55.620 --> 00:00:59.210
So if you just open up this and let's see how the ClickList now works here.

18
00:00:59.940 --> 00:01:03.540
Now you can see that we are having the quick booking component here.

19
00:01:03.870 --> 00:01:06.060
So that's the component that we see on top the header.

20
00:01:06.360 --> 00:01:08.610
And within that, we have all this movie cards.

21
00:01:09.180 --> 00:01:11.700
So if I just check out how the movie cards are being loaded.

22
00:01:12.120 --> 00:01:14.730
So in this, we are calling the suspense block.

23
00:01:14.850 --> 00:01:16.830
And in this we have this render movie list.

24
00:01:17.280 --> 00:01:21.360
So render movie list is a function which renders all this movie cards.

25
00:01:21.810 --> 00:01:25.500
So as you can see or hear, the individual movie cards are being called right here.

26
00:01:26.430 --> 00:01:32.130
So on the top of this, there's a div and already a click listener has been added to this so that the

27
00:01:32.160 --> 00:01:34.950
movie clicked and we are passing in the item that was clicked.

28
00:01:35.550 --> 00:01:40.170
Now, for example, if I just try to do a console dot blog and see what is the item that is being clicked.

29
00:01:40.680 --> 00:01:43.380
So let's say console dart, log item.

30
00:01:44.580 --> 00:01:51.360
Now in here I can just go back to my browser, give it a refresh is right click and just click on any

31
00:01:51.360 --> 00:01:51.960
of the items.

32
00:01:52.440 --> 00:01:57.390
So if you go to the console and click on any item here, you can see that the item which was clicked

33
00:01:57.390 --> 00:01:58.140
has been returned.

34
00:01:58.140 --> 00:02:03.540
So we got the ID, the name, the module and the description of this particular movie.

35
00:02:04.550 --> 00:02:04.850
Okay.

36
00:02:04.850 --> 00:02:06.740
So that party's already been set up for us.

37
00:02:07.220 --> 00:02:10.400
Now we can also see that we are passing in a callback.

38
00:02:10.790 --> 00:02:16.040
So if you see over here, we're are checking if the property has a attribute called as movie clip.

39
00:02:16.400 --> 00:02:19.490
And if it does contain it, we are going to be calling that as a function.

40
00:02:19.760 --> 00:02:22.310
So this is basically how the callback has been set up.

41
00:02:22.910 --> 00:02:26.330
Now, in this case, let's see where we are calling this home content.

42
00:02:26.990 --> 00:02:31.640
Now, if you remember, we are calling this home content application in our main application.

43
00:02:31.640 --> 00:02:33.050
So that's in the movie app.

44
00:02:33.680 --> 00:02:39.920
So in the movie app, if I go to the SRT and open up the app Dodgers in this we have the homepage.

45
00:02:40.430 --> 00:02:42.530
So home page is nothing but the home content.

46
00:02:42.530 --> 00:02:46.490
I've just named it home page where instead of home contents, that's not really a problem.

47
00:02:47.480 --> 00:02:50.810
What we can do over here next is we can implement that click listener.

48
00:02:51.380 --> 00:02:55.030
So as you remember, we had this property called the movie clip.

49
00:02:55.070 --> 00:02:59.090
So I can just copy this movie clip and add it as an attribute here.

50
00:02:59.150 --> 00:03:04.890
So let's call that movie clip equals to a function called As Movie Clicked.

51
00:03:04.910 --> 00:03:06.560
So let's just keep the same name.

52
00:03:07.460 --> 00:03:09.340
Now in here, we're going to be defining that function.

53
00:03:09.350 --> 00:03:13.820
So as a concert movie clip equals to a function.

54
00:03:14.000 --> 00:03:15.800
I'm using arrow function here.

55
00:03:16.640 --> 00:03:21.860
Now in here I can just do a consolidated log once again just to make sure that our function is actually

56
00:03:21.860 --> 00:03:22.700
being executed.

57
00:03:23.210 --> 00:03:27.770
And in this, if I just see movie, so that's being returned from here.

58
00:03:28.220 --> 00:03:30.770
So we can see that another movie is being written from here.

59
00:03:32.140 --> 00:03:38.140
So if I just consolidate log and then, you know, let's print out the movie and let's just give it

60
00:03:38.140 --> 00:03:38.760
a name here.

61
00:03:38.830 --> 00:03:44.470
So the movie clip is comma and then the movie name.

62
00:03:45.010 --> 00:03:47.860
So let's just save that and try to make sure that things are working.

63
00:03:48.460 --> 00:03:52.120
Let's give it a refresh here, the console and just click on another item.

64
00:03:52.690 --> 00:03:55.330
Now we can see that we have the callback getting called.

65
00:03:55.690 --> 00:03:56.920
So this is really interesting.

66
00:03:57.160 --> 00:04:01.570
So we're passing the callback from the home page application to our movie application.

67
00:04:01.960 --> 00:04:06.790
So this is the log that is getting printed from a home page application and the one over here is getting

68
00:04:06.790 --> 00:04:08.590
printed from our main application.

69
00:04:08.590 --> 00:04:09.700
So that's pretty cool.

70
00:04:09.940 --> 00:04:11.980
We got our chain to be working properly.

71
00:04:12.370 --> 00:04:14.980
Now we just have to do a small thing for doing the navigation.

72
00:04:15.100 --> 00:04:19.930
So what we need to do here is we need to be using the react rotor dom for doing the navigation.

73
00:04:20.050 --> 00:04:21.220
So how does that work?

74
00:04:21.580 --> 00:04:24.700
So we already have the react rotor dom imported here.

75
00:04:24.970 --> 00:04:26.500
So we're going to be adding another import.

76
00:04:26.500 --> 00:04:28.330
It's called as use history.

77
00:04:29.230 --> 00:04:35.230
Now in our main app, we can initialize this, we can say convert history equals to.

78
00:04:37.610 --> 00:04:40.340
Use history, and that's going to be initialized.

79
00:04:40.730 --> 00:04:47.270
Now, once we have that initialized, we can just the history dot push and then we can pass in the route

80
00:04:47.270 --> 00:04:50.060
that we want to be pushing in and are details throughout.

81
00:04:50.270 --> 00:04:52.460
Oh, let me just name that properly details.

82
00:04:53.000 --> 00:04:57.380
So as soon as we click on that, it's going to be calling the callback and the callback is going to

83
00:04:57.380 --> 00:05:03.950
be navigating to all the set out details throughout and in return, our route of details page is going

84
00:05:03.950 --> 00:05:05.570
to be rendered awesome.

85
00:05:05.570 --> 00:05:06.230
So that looks great.

86
00:05:06.230 --> 00:05:07.370
Let me just save that.

87
00:05:07.370 --> 00:05:08.510
Go back to our browser.

88
00:05:09.440 --> 00:05:12.170
Let's close this off and give it a refresh.

89
00:05:12.560 --> 00:05:16.310
Now, if I just click on any of the items, we are related to the new page.

90
00:05:16.670 --> 00:05:19.730
So this is how we're going to be doing the navigation, using the callback.

91
00:05:20.150 --> 00:05:24.470
Now, just to give a revision on this, if I just go back to the diagram that we've implemented, we

92
00:05:24.470 --> 00:05:29.540
had this main container or the main movie card which was there in our homepage application and on clicking

93
00:05:29.540 --> 00:05:36.320
this we sent a callback to our movie application and the movie application in turn called History API

94
00:05:36.320 --> 00:05:38.120
and did a push of the new out.

95
00:05:38.360 --> 00:05:39.800
And that's how we are seeing the details.

96
00:05:39.800 --> 00:05:40.670
PAGE All right.

97
00:05:40.670 --> 00:05:41.870
So that looks pretty good.

98
00:05:41.870 --> 00:05:44.270
Now we just need to make additional changes here.

99
00:05:44.480 --> 00:05:48.290
So as you can see right now, we do not see exactly on which movie we clicked on.

100
00:05:48.620 --> 00:05:51.380
So let's just take a short break and just fix up this page.
