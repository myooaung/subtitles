1
00:00:05,050 --> 00:00:06,640
Welcome back to another video.

2
00:00:07,090 --> 00:00:10,510
In this video, we're going to be seeing how to be loading external cases files.

3
00:00:10,870 --> 00:00:15,490
So far, we have already been dealing with these files, but this is a new file type and we are going

4
00:00:15,490 --> 00:00:17,770
to be seeing the concept of loaders and how they work.

5
00:00:18,430 --> 00:00:23,560
So to proceed, we are going to be using the folder that was already created by us to getting started.

6
00:00:24,040 --> 00:00:26,500
So what you can do is you can just copy this folder.

7
00:00:26,500 --> 00:00:30,550
So I'll say Control C and we can copy and paste it right here.

8
00:00:30,790 --> 00:00:34,510
It might take a couple of seconds, but it has to copy all the dependencies.

9
00:00:35,320 --> 00:00:36,760
Next, we're going to be renaming this.

10
00:00:36,760 --> 00:00:41,960
So let's give it a name like three and SS loaders.

11
00:00:42,700 --> 00:00:43,750
All right, that looks good.

12
00:00:43,900 --> 00:00:48,670
Now, what we are going to be doing here, let's have a recap first of exactly what was happening in

13
00:00:48,670 --> 00:00:49,420
this application.

14
00:00:49,930 --> 00:00:54,610
Let's right click and say Reveal in Finder and let's double click this file.

15
00:00:55,000 --> 00:00:57,880
And we can see that this was nothing but just a title.

16
00:00:57,880 --> 00:01:01,900
And when we clicked on the button, it was updating the title and rendering a list.

17
00:01:02,020 --> 00:01:03,130
So nothing fancy here.

18
00:01:03,970 --> 00:01:04,410
All right.

19
00:01:04,420 --> 00:01:08,260
So let's go ahead and make it a little bit fancy, add some colors, maybe some background color and

20
00:01:08,260 --> 00:01:09,820
so on using a thesis file.

21
00:01:10,360 --> 00:01:16,390
So switching back to our code, I'm going to be adding a new access file in the SRT folder.

22
00:01:16,600 --> 00:01:17,920
So I'll just say a new file.

23
00:01:18,310 --> 00:01:21,120
Let's call this as index dot thesis.

24
00:01:22,000 --> 00:01:22,450
All right.

25
00:01:22,840 --> 00:01:27,460
What I'm going to be doing here is let's open up our indexed our email file as well.

26
00:01:27,460 --> 00:01:33,100
We already have IDG one as header, so maybe we can have some styling on the header, maybe like an

27
00:01:33,100 --> 00:01:34,060
underline or so on.

28
00:01:34,690 --> 00:01:40,300
So I'll come here, I'll pick it up by the class name unless I find something else.

29
00:01:40,780 --> 00:01:44,830
So it's a text decoration as underlined.

30
00:01:46,140 --> 00:01:46,560
All right.

31
00:01:46,590 --> 00:01:49,080
And we can also change probably the color.

32
00:01:49,110 --> 00:01:51,690
So I'll make it maybe like a blue color.

33
00:01:53,400 --> 00:01:53,760
Okay.

34
00:01:53,820 --> 00:01:54,960
That looks pretty good.

35
00:01:55,470 --> 00:01:58,500
Now, how do we be importing this to this file?

36
00:01:59,070 --> 00:02:03,090
Well, earlier, what we used to do is we used to go to the index Tata Steel Mill and just import the

37
00:02:03,090 --> 00:02:04,350
CAC file directly.

38
00:02:04,640 --> 00:02:06,150
And we are not going to be doing that anymore.

39
00:02:06,180 --> 00:02:11,400
We need to be importing it in the JavaScript so that we can enable all the optimizations that are provided

40
00:02:11,400 --> 00:02:12,360
by that part to us.

41
00:02:12,960 --> 00:02:15,630
So I just go to the index file in here.

42
00:02:15,640 --> 00:02:17,550
We are going to be calling the import statement.

43
00:02:18,180 --> 00:02:23,460
So it'll say import and then dark slash index dot ccis.

44
00:02:24,880 --> 00:02:25,210
All right.

45
00:02:25,210 --> 00:02:26,230
That's pretty much it.

46
00:02:26,500 --> 00:02:30,280
For the import and the court, you feed on this as it is.

47
00:02:30,310 --> 00:02:37,030
So if I just open up my terminal by going to terminal, new terminal and going to the folder that is

48
00:02:37,360 --> 00:02:39,010
created by us, see us as lawyers.

49
00:02:39,490 --> 00:02:41,740
And if I say NPM, run, build.

50
00:02:43,820 --> 00:02:47,390
You can see that the Web starts off, but it fails at one particular point.

51
00:02:47,810 --> 00:02:49,970
And it will tell us the exact message.

52
00:02:50,000 --> 00:02:51,110
What we need to be fixing.

53
00:02:51,440 --> 00:02:53,870
You need the appropriate loader to handle this file type.

54
00:02:54,230 --> 00:02:58,880
So as you can see here, when it was trying to load this index, see this file, there was an error

55
00:02:58,880 --> 00:03:00,470
and it was not able to load this file.

56
00:03:00,650 --> 00:03:02,170
So let's go and fix up the PackBot.

57
00:03:02,180 --> 00:03:04,700
So we are able to now load excess files.

58
00:03:05,090 --> 00:03:08,030
So for that, let's set all to be the pack configuration.

59
00:03:08,420 --> 00:03:12,230
And when know you want to be using the loaders, you're going to be adding a new parameter here.

60
00:03:12,590 --> 00:03:15,680
So in our object, we just have the entry and the output defined.

61
00:03:15,950 --> 00:03:19,280
Now fighting the loaders, we need to be using another our key here.

62
00:03:19,290 --> 00:03:20,900
So that's called as module.

63
00:03:21,410 --> 00:03:25,940
And in this module, we are going to be defining the different ruleset that is going to be used for

64
00:03:25,940 --> 00:03:26,510
the loaders.

65
00:03:26,990 --> 00:03:28,880
So in here you need to be defining it as.

66
00:03:30,330 --> 00:03:35,460
Ruth and INEOS are going to be defining an array of rules that we are going to be using.

67
00:03:35,970 --> 00:03:38,970
So the first rule that we are going to be using is for diseases.

68
00:03:39,300 --> 00:03:46,080
So I will say test and let's put up a comma and there's another parameter and this is called as use.

69
00:03:47,150 --> 00:03:49,290
All right, so what are these two barometers?

70
00:03:49,310 --> 00:03:53,370
The test barometer defines as what are the file types that it needs to match.

71
00:03:53,840 --> 00:03:55,610
So this takes up a regular expression.

72
00:03:55,940 --> 00:03:57,830
So let's define a regular expression right here.

73
00:03:58,550 --> 00:04:03,710
So you need to be putting up two slash and indigo in said dot thesis and then are doing the same.

74
00:04:04,460 --> 00:04:05,540
So that's pretty much it.

75
00:04:05,570 --> 00:04:07,970
So we're defining that when you're trying to load a file.

76
00:04:07,970 --> 00:04:12,860
So for example, the one that was getting loaded over here was index starts versus it's going to be

77
00:04:12,860 --> 00:04:17,300
matching the DOT CFS part at the end of that particular file.

78
00:04:17,630 --> 00:04:20,690
So the dollar specifies that it has to be at the end of the file.

79
00:04:21,710 --> 00:04:26,340
We also have covered some of the basic regular expressions so you can head over to the JavaScript and

80
00:04:26,340 --> 00:04:31,250
the node introduction in which I have also covered slightly on the regular expression path is going

81
00:04:31,250 --> 00:04:34,010
to be giving you a heads up on how regular expressions work.

82
00:04:35,090 --> 00:04:35,290
Okay.

83
00:04:35,480 --> 00:04:39,830
With that said, let's all my road to the next perimeter, which is the used perimeter.

84
00:04:40,520 --> 00:04:46,100
So in this, we need to be putting up an I.D. so the IRS is going to be using all the loaders that are

85
00:04:46,100 --> 00:04:47,780
going to be used for loading these.

86
00:04:48,800 --> 00:04:51,110
We're going to be using two special loaders for this.

87
00:04:51,140 --> 00:04:54,920
The first is going to be this style loader and the second is going to be the excess loader.

88
00:04:55,550 --> 00:04:59,270
Now, please note this loader which are using is not built into the bag.

89
00:04:59,510 --> 00:05:02,210
We need to be explicitly installing it from NPM.

90
00:05:02,960 --> 00:05:06,380
So let's clear off our console and say NPM.

91
00:05:06,380 --> 00:05:14,000
I dashed out save dev theses loader and tile loader.

92
00:05:15,020 --> 00:05:16,460
All right, let's give it a second.

93
00:05:16,460 --> 00:05:18,530
And we have now installed successfully.

94
00:05:19,040 --> 00:05:19,580
Nine here.

95
00:05:19,590 --> 00:05:20,600
We are going to be using them.

96
00:05:20,600 --> 00:05:28,190
So we just put it as tail loader and the second one as the SS loader.

97
00:05:29,030 --> 00:05:29,960
Pretty straightforward.

98
00:05:30,350 --> 00:05:32,360
Now, there's one very important point to note here.

99
00:05:32,780 --> 00:05:34,630
The order in which you're going to be putting this.

100
00:05:34,910 --> 00:05:39,350
So let's say, for example, you think that I can just take this and put it in the starting and this

101
00:05:39,350 --> 00:05:40,610
style loader can come second.

102
00:05:41,060 --> 00:05:42,530
Well, this is not going to work.

103
00:05:42,980 --> 00:05:46,690
When we are loaders execute, they execute from the right side to the left side.

104
00:05:46,700 --> 00:05:49,160
So first off, yes, that's going to be executed.

105
00:05:49,460 --> 00:05:50,720
And then your style loader.

106
00:05:51,260 --> 00:05:54,140
So what does the user's loader does internally?

107
00:05:54,350 --> 00:06:00,290
So what it does is it whenever you are in next year's file is encountered, it sees this indexed arceus

108
00:06:00,290 --> 00:06:04,040
as being imported and it knows how to be resolving this dependency.

109
00:06:04,610 --> 00:06:08,990
Now, once it has loaded that particular dependency does not really know what to be doing with it.

110
00:06:09,530 --> 00:06:13,160
So that data basically passes on to this style loader.

111
00:06:13,460 --> 00:06:19,370
The style loader takes all the data that was processed by the exit loader and it loaded into the stable

112
00:06:19,370 --> 00:06:19,850
document.

113
00:06:20,360 --> 00:06:24,920
So it's going to be creating like a style tag in your estimate document, and that's how your thesis

114
00:06:24,920 --> 00:06:25,640
is going to work.

115
00:06:26,480 --> 00:06:29,360
So that is pretty much the configuration that we need for now.

116
00:06:29,390 --> 00:06:31,910
Let's try to save this file and execute it.

117
00:06:32,720 --> 00:06:37,880
So I'll just clear off the console and see NPM run bed once again.

118
00:06:39,330 --> 00:06:39,700
Cool.

119
00:06:39,710 --> 00:06:41,660
So everything seems to be running.

120
00:06:42,150 --> 00:06:46,850
Let's head back to our web browser and see if things work as expected.

121
00:06:47,600 --> 00:06:48,390
So I'm refreshing.

122
00:06:48,410 --> 00:06:50,960
And voila, we do see our says looking.

123
00:06:50,960 --> 00:06:52,250
That's just amazing.

124
00:06:52,610 --> 00:06:56,570
We are successfully able to load our thesis using this year loader.

125
00:06:57,110 --> 00:06:58,860
Now the couple of things that we should be seeing.

126
00:06:58,880 --> 00:07:04,250
So I'm going to be right clicking and seeing inspect and let's see what happened behind the scenes.

127
00:07:04,850 --> 00:07:05,390
Now this.

128
00:07:05,390 --> 00:07:10,580
If I open up the code section, you can see that I have a style tag automatically injected.

129
00:07:10,580 --> 00:07:12,620
So this is where your style loader came in from.

130
00:07:13,160 --> 00:07:19,010
So it injected this style tag in your estimate document and you can see that we have this header CSS

131
00:07:19,010 --> 00:07:22,460
with all these years as that property that we had added in that particular file.

132
00:07:23,060 --> 00:07:23,360
All right.

133
00:07:23,360 --> 00:07:24,430
So this is really great.

134
00:07:24,440 --> 00:07:30,080
We understood how the SS loaders work behind the scene and we only successfully able to load our access

135
00:07:30,090 --> 00:07:30,440
file.

136
00:07:30,800 --> 00:07:34,550
Now we're going to be taking a short break and we are going to be exploring a little bit more about

137
00:07:34,550 --> 00:07:39,940
this uses loader, especially because this module, since this module is the newer approach of implementing

138
00:07:39,950 --> 00:07:44,720
the SS in your application and this is widely used if you're using some framework such as React and

139
00:07:44,720 --> 00:07:45,110
so on.

140
00:07:45,620 --> 00:07:49,220
So it's also important to understand how those things work behind the scene.

141
00:07:49,820 --> 00:07:50,150
All right.

142
00:07:50,150 --> 00:07:52,310
Let's take a short break and continue on from there.

143
00:07:52,340 --> 00:07:52,820
Thank you.
