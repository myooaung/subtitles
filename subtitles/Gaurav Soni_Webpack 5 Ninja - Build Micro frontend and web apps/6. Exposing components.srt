1
00:00:00,330 --> 00:00:00,960
In this video.

2
00:00:00,960 --> 00:00:05,490
Let's see how we can be exposing those components that we need to be using on the home bed application.

3
00:00:05,940 --> 00:00:09,180
So the one that we're interested in is the movie card component.

4
00:00:09,600 --> 00:00:12,300
So I've already opened up this React component.

5
00:00:12,570 --> 00:00:16,400
And within this, let me just give you an overview of how things are structured here.

6
00:00:16,800 --> 00:00:21,630
So if I just open the source folder, we have the component folder and within this we have like this

7
00:00:21,630 --> 00:00:24,540
buttons, dropdown, movie card and typography.

8
00:00:25,080 --> 00:00:28,290
Now if I just open up the button component, there's something interesting here.

9
00:00:28,800 --> 00:00:31,520
In the button folder, we have a couple of buttons here.

10
00:00:31,560 --> 00:00:34,530
So we go out like this by button glitch, simple.

11
00:00:34,530 --> 00:00:35,430
And this no button.

12
00:00:35,730 --> 00:00:40,920
And all of this have been sort of combined and exported from this index cards for simplicity.

13
00:00:41,550 --> 00:00:44,970
If I just go to the ideas and see how things have been important here.

14
00:00:45,630 --> 00:00:51,120
Now, in the app, yes, we have like this import button and these things have been imported from the

15
00:00:51,120 --> 00:00:54,420
index dogs and that's how our application has been loaded here.

16
00:00:54,450 --> 00:01:00,330
So this is our our dogs working and this is how we are displaying all the buttons and the card component.

17
00:01:01,170 --> 00:01:05,790
Now, if I just go back to the code now when we exporting, we are not really interested in this app,

18
00:01:05,790 --> 00:01:09,000
not just because Abdulaziz is the entire file.

19
00:01:09,000 --> 00:01:10,290
We are not really interested.

20
00:01:10,290 --> 00:01:14,040
We are just interested in those couple of components that are being created separately here.

21
00:01:14,970 --> 00:01:15,330
Okay.

22
00:01:15,600 --> 00:01:20,460
So if you want to be exporting this as usual, we need to be going to have a pack configuration and

23
00:01:20,460 --> 00:01:21,720
all the magic happens here.

24
00:01:22,350 --> 00:01:26,490
Let me make this a bit smaller and mean to first import our component.

25
00:01:26,970 --> 00:01:33,420
So I would say contact and put up the collaborators equals to require and this is going to be imported

26
00:01:33,420 --> 00:01:36,120
from the pack dot container.

27
00:01:36,990 --> 00:01:45,000
And in here we can be finding it as module federation, plug in, make sure that you have all your capitalization

28
00:01:45,000 --> 00:01:50,250
in place because this is a named export and if you try to use some of the capitalization is not going

29
00:01:50,250 --> 00:01:50,970
to really work.

30
00:01:52,080 --> 00:01:52,380
Okay.

31
00:01:52,380 --> 00:01:56,500
So we have the plug in imported, which is directly being exported by the pack.

32
00:01:56,520 --> 00:01:58,440
No external installation is required here.

33
00:01:59,400 --> 00:02:04,050
As usual, we when we want to be using our plug in, we go to our plug in section and start writing

34
00:02:04,050 --> 00:02:04,890
the configurations.

35
00:02:05,400 --> 00:02:11,640
So NERC as new model for plug in and pass in the configuration object.

36
00:02:12,540 --> 00:02:12,840
Okay.

37
00:02:12,840 --> 00:02:15,060
So what are the configuration object we need to be passing?

38
00:02:15,630 --> 00:02:17,430
The first one is called us name.

39
00:02:18,300 --> 00:02:20,610
The second one is called as the file name.

40
00:02:22,190 --> 00:02:29,150
Then we have the third one, which is the exposes, and that's it actually for exposing something.

41
00:02:29,570 --> 00:02:32,730
Now, let me tell you what these three properties that we just created here.

42
00:02:32,900 --> 00:02:37,910
The first one name is the application name by which you want to be exposing this entire application

43
00:02:37,910 --> 00:02:38,930
to the outer world.

44
00:02:39,500 --> 00:02:42,050
So for example, this is called as react component.

45
00:02:42,350 --> 00:02:46,760
So probably I can just make a short and call this and pad application as component.

46
00:02:47,930 --> 00:02:49,910
Or maybe components since it's multiple.

47
00:02:50,600 --> 00:02:51,650
Okay, so that's done.

48
00:02:51,890 --> 00:02:53,600
Now, the second one is called if by limb.

49
00:02:53,600 --> 00:02:58,730
And this quite important, if I just switch back to on my diagram, we had this remote entry last year

50
00:02:59,060 --> 00:03:03,050
and this was the file that was being found by the other application which was importing it.

51
00:03:03,470 --> 00:03:06,320
And this remote entry is exactly what is the file name.

52
00:03:06,920 --> 00:03:12,560
So if I just go back, the file name is going to be called as remote and three dot gas.

53
00:03:13,190 --> 00:03:16,440
Now please note it does not really have to be mentioned as a remote control.

54
00:03:16,460 --> 00:03:18,120
You can just give it any name you want.

55
00:03:18,470 --> 00:03:20,750
But this is generally the convention that's been followed.

56
00:03:21,620 --> 00:03:23,270
Okay, so we have the file name setup.

57
00:03:23,540 --> 00:03:26,150
Finally, we need to be putting up the exposes property.

58
00:03:26,720 --> 00:03:32,210
So exposes is going to be an type of object and it need to be defined as the key value pair.

59
00:03:32,840 --> 00:03:35,570
The first is the key, which is the component name.

60
00:03:35,960 --> 00:03:41,480
Now for the component name, we need to be starting it with a dot slash and then give it a name.

61
00:03:41,870 --> 00:03:47,480
So for example, I can give it as a movie card and then we need to specify the entire path for it.

62
00:03:47,990 --> 00:03:54,170
So this is going to be in dot slash as our C slash component slash.

63
00:03:55,390 --> 00:03:57,880
Movie card slash.

64
00:03:58,090 --> 00:04:01,630
If I just go open up the memory card, we have this movie card, not gsx.

65
00:04:02,230 --> 00:04:06,130
So I'll put it up here as a movie card dot gsx.

66
00:04:07,090 --> 00:04:10,900
Now, just to make sure that you don't make any spelling mistakes, there's another way to do it.

67
00:04:10,960 --> 00:04:16,960
So you can just right click on the movie card and you can see whereas copy relative bought and just

68
00:04:17,020 --> 00:04:17,980
pasted over here.

69
00:04:18,160 --> 00:04:22,960
So you know, it gives you the entire part and then you can sort of just cut it from here.

70
00:04:22,960 --> 00:04:25,510
So we can we need it from the SRT locations.

71
00:04:25,510 --> 00:04:32,680
I can just see control C remove all of this and then if I just be a store here, I can just really make

72
00:04:32,680 --> 00:04:35,440
sure that, you know, I don't have any typing mistakes here.

73
00:04:36,370 --> 00:04:38,290
Okay, so that was the movie card.

74
00:04:38,950 --> 00:04:42,640
The second component is a simple example, the buttons that we've created.

75
00:04:43,060 --> 00:04:45,040
Now, there's one very important factor here.

76
00:04:45,540 --> 00:04:47,350
When will you exposing the component?

77
00:04:47,350 --> 00:04:50,110
You cannot be exposing it as the named export.

78
00:04:50,440 --> 00:04:52,960
You need to be exposing only default component.

79
00:04:53,470 --> 00:04:54,640
So what do I mean by that?

80
00:04:55,150 --> 00:04:59,380
Now, if I just open up the buy button and just open up one of the components, for example, this one

81
00:04:59,380 --> 00:05:05,830
by button and scroll all the way to the bottom, we can see that is exported as a default component.

82
00:05:05,830 --> 00:05:08,710
And this is exactly what we need when we're using module federation.

83
00:05:09,310 --> 00:05:14,440
For example, if I go to the index cards, we are exporting this as the AMP components and this is not

84
00:05:14,440 --> 00:05:18,910
really going to work when we're going to try to export it from here, from the exposes property.

85
00:05:19,390 --> 00:05:22,240
So make sure that you have already full components created.

86
00:05:23,170 --> 00:05:23,920
As closer.

87
00:05:24,790 --> 00:05:28,390
Now I can be exposing the individual buttons here so I can say dot slash.

88
00:05:28,720 --> 00:05:31,510
And then let's say you want to be exposing this by button.

89
00:05:31,990 --> 00:05:34,420
So I would say by button.

90
00:05:34,720 --> 00:05:37,060
And then we can also give the location for it.

91
00:05:37,220 --> 00:05:40,240
So I'm just going to copy and paste here and change the things.

92
00:05:40,780 --> 00:05:42,550
So this is from the button folder.

93
00:05:43,270 --> 00:05:46,150
Then within the button folder, we have the buy button folder.

94
00:05:46,720 --> 00:05:48,990
And within the by button folder we have the G6.

95
00:05:49,000 --> 00:05:49,630
So by.

96
00:05:50,830 --> 00:05:52,750
Button dot G6.

97
00:05:53,380 --> 00:05:53,680
Okay.

98
00:05:53,680 --> 00:05:58,060
So for now, I'm just going to be exporting these two components and see how things work.

99
00:05:58,540 --> 00:06:00,100
I'm just going to be saving this file.

100
00:06:00,400 --> 00:06:03,870
Open up our terminal and we need to be restarting ourselves.

101
00:06:04,330 --> 00:06:08,680
Because since we have made some changes in the configuration itself, it's not going to automatically

102
00:06:08,680 --> 00:06:09,160
pick it up.

103
00:06:09,820 --> 00:06:12,990
So I already have my react components or terminal open up.

104
00:06:13,000 --> 00:06:15,440
Just navigate around and find your react components.

105
00:06:16,540 --> 00:06:21,960
And the second Rosie to stop this as well as clear the console off and see and PM her on.

106
00:06:22,600 --> 00:06:23,080
So.

107
00:06:24,510 --> 00:06:25,740
Let's give that a second.

108
00:06:25,740 --> 00:06:29,040
Our browser opens up and loading this micro frontend.

109
00:06:29,430 --> 00:06:31,800
We have the application running on port 3000.

110
00:06:31,800 --> 00:06:39,120
Two things work pretty much as before, but now if you just go to the new orders, slash remote entry

111
00:06:39,390 --> 00:06:46,110
dogs, press enter and voila we see a remote entry file created by default for us using this Webpack

112
00:06:46,110 --> 00:06:46,560
plugin.

113
00:06:46,980 --> 00:06:47,850
So that's pretty cool.

114
00:06:48,390 --> 00:06:52,620
Now, one more thing to notice in this particular output is the components that we expose.

115
00:06:53,010 --> 00:06:55,530
So we expose this component called as movie card.

116
00:06:55,920 --> 00:07:03,030
So if I just come back to the browser and the dart slash movie card, we can see that this component

117
00:07:03,030 --> 00:07:08,160
is being exported from this remote entry, and that's how all the communication channel works.

118
00:07:08,550 --> 00:07:11,730
So our second application is going to be hitting this remote entry, Dodge's.

119
00:07:12,090 --> 00:07:16,290
It's going to be searching for this movie card and that's how it's going to be loading this component

120
00:07:16,290 --> 00:07:17,670
in the other application.

121
00:07:18,090 --> 00:07:20,280
And that's pretty cool once we get all the things set up.

122
00:07:21,120 --> 00:07:23,910
Okay, so that's about how we're going to be exposing the components.

123
00:07:23,910 --> 00:07:28,890
I'm going to be taking a short break and then we'll see how do we importing this component in the homepage

124
00:07:28,890 --> 00:07:29,670
application?
