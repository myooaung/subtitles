1
00:00:03,640 --> 00:00:05,440
You guys, welcome to another video.

2
00:00:05,650 --> 00:00:09,100
And this is going to be a first for that video in which you're going to be writing some code.

3
00:00:09,460 --> 00:00:12,190
Now, I'm really excited to show you what we're can do for us.

4
00:00:12,730 --> 00:00:17,290
Now we are just going to be creating a blank folder in here and start with some of the basics.

5
00:00:17,680 --> 00:00:21,670
Now, please remember you can always go to the kit repository, and in there you're going to be finding

6
00:00:21,670 --> 00:00:23,830
the final version of what you're going to be writing right here.

7
00:00:24,790 --> 00:00:25,290
All right.

8
00:00:25,300 --> 00:00:26,230
So let's start off.

9
00:00:26,230 --> 00:00:27,310
We have a blank folder.

10
00:00:27,430 --> 00:00:29,620
Let's click on a new folder.

11
00:00:29,830 --> 00:00:33,670
And this is going to be as high as the folder in which you're going to be hosting all of our files.

12
00:00:34,180 --> 00:00:35,230
We'll be needing to file.

13
00:00:35,230 --> 00:00:40,840
This one is going to be the index start, HDMI, DML, and the second file is going to be a JavaScript

14
00:00:40,840 --> 00:00:41,140
file.

15
00:00:41,150 --> 00:00:43,300
So let's call that as index start.

16
00:00:43,300 --> 00:00:43,720
Yes.

17
00:00:44,620 --> 00:00:46,990
In our estimate file, let's put in some boilerplate.

18
00:00:47,080 --> 00:00:50,080
So I'll just put in using this estimate of five syntax.

19
00:00:50,500 --> 00:00:55,510
And as you can see, it added the head and the body section along with some other metadata.

20
00:00:56,530 --> 00:00:56,860
All right.

21
00:00:56,860 --> 00:00:58,720
So not a lot of things need to be done here.

22
00:00:58,720 --> 00:01:00,820
We're just going to be adding a twin tag.

23
00:01:00,820 --> 00:01:02,530
Let's see here.

24
00:01:02,680 --> 00:01:06,820
This is my first left back application.

25
00:01:08,490 --> 00:01:08,880
Cool.

26
00:01:09,210 --> 00:01:10,020
So that looks good.

27
00:01:10,710 --> 00:01:15,060
And I'm also going to be adding a button in which you're going to be adding a function that is going

28
00:01:15,060 --> 00:01:17,070
to be called from our JavaScript file.

29
00:01:17,460 --> 00:01:21,810
So let's say on click equals to button clicked.

30
00:01:24,520 --> 00:01:25,420
Just like that.

31
00:01:25,540 --> 00:01:25,990
All right.

32
00:01:26,410 --> 00:01:29,950
Now, when I click on this button, I'm going to be updating the text that we see here.

33
00:01:30,310 --> 00:01:33,050
So for that, I need to be also adding, I need to buy this.

34
00:01:33,070 --> 00:01:36,190
So that's how I'm going to be picking up this particular H1 tag.

35
00:01:36,220 --> 00:01:39,640
So let's give this MIDI as maybe head of.

36
00:01:41,730 --> 00:01:42,090
All right.

37
00:01:42,090 --> 00:01:43,380
So that is pretty much it.

38
00:01:43,410 --> 00:01:46,020
Now we can head over to our JavaScript file.

39
00:01:46,140 --> 00:01:49,410
So I just copied this function as well because we are going to be defining it over there.

40
00:01:49,920 --> 00:01:51,720
So in here we can see function.

41
00:01:52,860 --> 00:01:56,280
And we put in the name of the function and then define the block.

42
00:01:57,030 --> 00:01:59,400
So first of all, I need to be getting the element right here.

43
00:01:59,400 --> 00:02:05,140
So let's say const element equals to document dot get element by.

44
00:02:05,790 --> 00:02:09,300
And in this we can go ahead and copy the ID that was held up.

45
00:02:11,310 --> 00:02:15,060
Once we have the element, we can go ahead and change the inner demon.

46
00:02:15,120 --> 00:02:17,910
So I would say in our estimate equals to.

47
00:02:19,270 --> 00:02:19,600
Here.

48
00:02:19,600 --> 00:02:22,810
I have updated the code.

49
00:02:24,070 --> 00:02:24,370
All right.

50
00:02:24,370 --> 00:02:25,600
So nothing fancy here.

51
00:02:25,690 --> 00:02:30,640
Let's just go ahead and include this JavaScript file in our estimate so that it can get loaded.

52
00:02:31,210 --> 00:02:32,890
So I'll put in the script tag.

53
00:02:33,100 --> 00:02:38,450
Let's put in the sa c as dark slash index dog.

54
00:02:38,470 --> 00:02:38,950
Yes.

55
00:02:40,210 --> 00:02:40,600
Okay.

56
00:02:40,600 --> 00:02:45,310
So now to check whether things are working properly, I can just right click on the estimate they reveal

57
00:02:45,310 --> 00:02:48,070
in finder and just double click on the estimate.

58
00:02:49,030 --> 00:02:49,950
Alright, that looks good.

59
00:02:49,960 --> 00:02:54,310
I do not have any button text so I just need to be quickly adding that as well.

60
00:02:54,520 --> 00:02:57,430
So let's go back to a button and see.

61
00:02:58,390 --> 00:02:59,140
Click me.

62
00:03:01,310 --> 00:03:01,700
Okay.

63
00:03:01,700 --> 00:03:03,320
Let's go back and refresh our page.

64
00:03:03,380 --> 00:03:05,420
And things work as expected.

65
00:03:05,840 --> 00:03:07,130
So nothing fancy here.

66
00:03:07,760 --> 00:03:12,830
Now, to make things a bit fancy, as we know that the pack can be used for loading some dependencies.

67
00:03:13,160 --> 00:03:15,140
I'm going to be adding an additional dependency.

68
00:03:15,590 --> 00:03:17,120
So let's open up a new tab.

69
00:03:17,150 --> 00:03:20,380
And in this we are going to be searching for a library called as Lord Ash.

70
00:03:20,900 --> 00:03:22,580
So let's search for Lord Ash.

71
00:03:22,580 --> 00:03:24,560
And where are we loading this via CD.

72
00:03:24,690 --> 00:03:30,650
And so CD and as the content delivery network basically it provides you with this descriptor hosted

73
00:03:30,650 --> 00:03:31,790
at some under this hour.

74
00:03:32,480 --> 00:03:39,150
So we have this CD and copies here now in this hidden copies, you can just copy from the clipboard.

75
00:03:39,170 --> 00:03:40,880
So we have this copy you are in.

76
00:03:41,540 --> 00:03:47,120
And if you switch back to our code, we're going to be including this under the script tag.

77
00:03:47,270 --> 00:03:55,550
So let's say script as RC and in here we paste what we had just copied and Laura should be included

78
00:03:55,550 --> 00:03:57,620
next time we load our index stardust html.

79
00:03:58,310 --> 00:04:01,040
So to just verify that, let's switch back to our browser.

80
00:04:01,250 --> 00:04:02,810
Go to our application.

81
00:04:03,500 --> 00:04:07,280
Let's right click inspect and let's go to the network tab.

82
00:04:07,880 --> 00:04:13,100
Now please remember I prefer to use Chrome and that gives a lot of good debugging whenever you're going

83
00:04:13,100 --> 00:04:15,410
to be loading any of your remote files and so on.

84
00:04:15,860 --> 00:04:21,140
And this is really going to be helping us verify that things are working and expected when we're building

85
00:04:21,140 --> 00:04:22,520
our web back application.

86
00:04:23,330 --> 00:04:25,130
So for now, let's just click on refresh.

87
00:04:25,730 --> 00:04:31,760
And in here you can see that the load start menu dogs was in fact loaded and this took approximately

88
00:04:31,760 --> 00:04:32,930
13 milliseconds.

89
00:04:33,050 --> 00:04:34,100
So that's not too bad.

90
00:04:35,340 --> 00:04:40,680
Let's go back to our codebase and in our code base, we are going to be going to the index start use.

91
00:04:41,070 --> 00:04:45,510
Now what I want to be doing here to make things a little bit dynamic, I'm going to be going back to

92
00:04:45,510 --> 00:04:49,200
the next order estimate and in here let's add a useful tag.

93
00:04:49,830 --> 00:04:53,820
So basically we are going to be adding a few items and we're going to be rendering them dynamically.

94
00:04:54,450 --> 00:04:58,140
So let's call this ID as shopping list.

95
00:04:58,620 --> 00:04:59,610
So that looks good.

96
00:05:00,120 --> 00:05:03,390
And this is going to be used in our index cards.

97
00:05:03,870 --> 00:05:05,420
So what I'm going to be doing here is.

98
00:05:05,430 --> 00:05:06,090
I see.

99
00:05:07,260 --> 00:05:12,360
Concert ul equals to same thing as before.

100
00:05:12,360 --> 00:05:15,850
Document Art Get Element VI I.D. Shopping List.

101
00:05:15,870 --> 00:05:18,330
So we have the UL tag now.

102
00:05:18,420 --> 00:05:19,980
What are we creating a list as well?

103
00:05:19,980 --> 00:05:25,230
So let's say concert list items equals to and add it.

104
00:05:25,680 --> 00:05:28,500
Now in here we can add a couple of items that we need to be shopping for.

105
00:05:28,890 --> 00:05:32,950
Let's say we want to be shopping for a list of fruits and vegetables.

106
00:05:32,950 --> 00:05:34,680
So let's say apple.

107
00:05:35,760 --> 00:05:39,030
Orange and banana.

108
00:05:40,260 --> 00:05:40,680
All right.

109
00:05:40,770 --> 00:05:43,800
Nothing very fancy here, but no worries.

110
00:05:44,800 --> 00:05:47,950
So in here we are going to be using the underscore operator.

111
00:05:48,250 --> 00:05:52,720
So underscore is automatically exposed by Lord Ash on the global scope.

112
00:05:52,720 --> 00:05:56,280
As soon as you load Lord in the index, start steaming.

113
00:05:56,770 --> 00:05:58,420
So I can say underscore dot.

114
00:05:59,680 --> 00:06:00,670
For each.

115
00:06:01,510 --> 00:06:04,810
So in this, we can specify exactly what you want to be iterating over.

116
00:06:05,260 --> 00:06:08,110
So what we need to be iterating or is the list item?

117
00:06:08,110 --> 00:06:09,640
So I'd say list items.

118
00:06:10,120 --> 00:06:13,350
And in this we need to be passing in a function.

119
00:06:13,360 --> 00:06:18,220
So we'll put up here as function and this takes up an.

120
00:06:19,780 --> 00:06:20,260
Item.

121
00:06:20,320 --> 00:06:24,460
So this is going to be each individual item that is present in this list.

122
00:06:24,940 --> 00:06:27,820
So what we're going to be doing here is will create an element.

123
00:06:27,850 --> 00:06:35,320
So let's say cause an element equal to document, dot create element.

124
00:06:35,710 --> 00:06:38,020
And in here we need a like tag.

125
00:06:38,230 --> 00:06:45,850
That is what we're going to be creating an element dot in our HTML equals to item.

126
00:06:46,720 --> 00:06:52,300
So I see this is quite basic and we do not really are we not going to be really going into a lot of

127
00:06:52,300 --> 00:06:55,090
depth as what's happening here, but it's quite self-explanatory.

128
00:06:56,050 --> 00:07:00,280
Now what we are going to be doing is once we have the element created, we need to be appending this

129
00:07:00,520 --> 00:07:01,480
to our UL.

130
00:07:01,630 --> 00:07:08,200
So we already have the world tag here you will append child and in here we are going to be appending

131
00:07:08,200 --> 00:07:10,480
the temp element that we had just created.

132
00:07:11,500 --> 00:07:11,860
All right.

133
00:07:11,860 --> 00:07:13,300
So that is pretty much it.

134
00:07:13,390 --> 00:07:16,540
Let's go back to our estimates page and see what happens.

135
00:07:17,020 --> 00:07:22,880
So if we go back to actual page due to refresh and if I click right here, we can see that the text

136
00:07:22,880 --> 00:07:25,720
last updated and the elements caught up in it as well.

137
00:07:26,440 --> 00:07:31,210
So all this was done using the traditional approach in which you are loading the files, using this

138
00:07:31,210 --> 00:07:33,400
Eden and using the script tags.

139
00:07:33,760 --> 00:07:36,010
And this is not what do you mean to enable?

140
00:07:36,340 --> 00:07:40,690
As you can see, as we have a lot of dependencies, we are going to be just adding dependencies one

141
00:07:40,690 --> 00:07:41,320
after the other.

142
00:07:41,710 --> 00:07:46,660
And we are also going to be loading those dependencies again and again when we start switching the pages.

143
00:07:47,050 --> 00:07:49,780
Now, that is not the most efficient way of managing things.

144
00:07:50,080 --> 00:07:52,150
So this is exactly where Webpack comes in.

145
00:07:52,420 --> 00:07:55,840
So let's take a short break, and we are going to be creating our first Webpack file.

146
00:07:56,110 --> 00:08:00,820
And in that, we are going to be seeing how we can be loading this load dependency which we loaded in

147
00:08:00,820 --> 00:08:01,400
the index.

148
00:08:01,400 --> 00:08:03,910
Start a steel mill and move it to the index.

149
00:08:03,910 --> 00:08:05,200
Start JS file.

150
00:08:05,470 --> 00:08:06,830
So see you after a short break.
