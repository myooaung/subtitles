WEBVTT
1
00:00:00.220 --> 00:00:03.780
In this section we're going to be focusing on permanent data storage.

2
00:00:03.780 --> 00:00:08.970
So looking at a number of different ways of storing data permanently in your app will also of course

3
00:00:08.970 --> 00:00:15.780
be building a couple of real apps to try that out including a Notes app and a news reader app.

4
00:00:15.900 --> 00:00:20.250
We're going to start with the most simple way to store data permanently and that's using something called

5
00:00:20.250 --> 00:00:22.150
Shared preferences.

6
00:00:22.770 --> 00:00:26.240
So I'm going to start a new project for this.

7
00:00:27.020 --> 00:00:30.600
So shared preferences as is implied by the name

8
00:00:34.300 --> 00:00:40.180
is a way of storing just very simple short items of data.

9
00:00:40.630 --> 00:00:48.030
So ideally just strings like a username or indeed a preference that the user has selected for your app.

10
00:00:48.310 --> 00:00:52.330
So we're going to see how to use shared preferences to store and restore data.

11
00:00:52.540 --> 00:00:59.020
And finally we're going to complete the memorable places app by adding permanent storage to it using

12
00:00:59.020 --> 00:01:04.960
shared preferences shared preferences is great for storing just little bits of information but if you

13
00:01:04.960 --> 00:01:10.030
want to start storing lots of information such as a selection of emails or tweets or something like

14
00:01:10.030 --> 00:01:17.260
that then there are better ways to do it using databases which we'll look at later on in this section.

15
00:01:17.260 --> 00:01:17.510
OK.

16
00:01:17.520 --> 00:01:18.420
Here we go.

17
00:01:18.790 --> 00:01:20.800
So this is our shared preferences app I'm in.

18
00:01:20.800 --> 00:01:25.080
Main activity Java.

19
00:01:26.190 --> 00:01:29.510
I'm going to start writing code in here straight off.

20
00:01:29.810 --> 00:01:31.030
So you shared preferences.

21
00:01:31.090 --> 00:01:35.140
We create a variable of a type of shared preferences

22
00:01:38.030 --> 00:01:41.530
we'll call it shared preferences.

23
00:01:44.070 --> 00:01:54.140
And we create this from the context so from the main activity so we use this datt get shared preferences

24
00:01:56.000 --> 00:01:59.980
and then we have to give it the name of the app.

25
00:02:00.110 --> 00:02:05.960
So fortunately it's saved for us then for us as package.

26
00:02:05.960 --> 00:02:08.180
So I just copy and paste that right in.

27
00:02:08.930 --> 00:02:18.030
And then we need to give a context and we want only our app to access this data.

28
00:02:18.300 --> 00:02:20.890
So we're going to use node private.

29
00:02:21.120 --> 00:02:24.530
Now I mean only our app can access the data that we're saving here.

30
00:02:24.690 --> 00:02:30.480
It is possible to share bits of data between apps using shared preferences but usually we just want

31
00:02:30.480 --> 00:02:34.930
to save it and then get some information back about our app.

32
00:02:36.170 --> 00:02:37.550
OK.

33
00:02:37.740 --> 00:02:46.060
Or just run it in the background where we're going now to save an item in shared preferences.

34
00:02:46.680 --> 00:02:54.620
We use our shared preferences variable and then we want to edit the shared preferences and you can see

35
00:02:54.630 --> 00:03:02.180
we can put a range of variable types in but this is the only variable types that we can save.

36
00:03:02.190 --> 00:03:07.910
So for now we'll put a string and then we give a name for the variable.

37
00:03:08.370 --> 00:03:10.740
So call this username

38
00:03:13.600 --> 00:03:15.640
and then a value for the variable.

39
00:03:15.640 --> 00:03:20.940
So for example ROP and then to the end of that command

40
00:03:23.850 --> 00:03:25.620
we put the instruction apply

41
00:03:30.160 --> 00:03:40.140
and that will do the saving process for us and then to get it back we'll create a string called use

42
00:03:40.160 --> 00:03:42.720
again to sort of use a name.

43
00:03:43.390 --> 00:03:47.680
And then we just use shared preferences that get string

44
00:03:50.550 --> 00:03:55.290
and then we give the name of the variable that we want to get.

45
00:03:55.440 --> 00:03:58.930
And we also give a default value.

46
00:03:59.850 --> 00:04:06.210
So if there isn't a user name saved even though we know that there is if there isn't one then the default

47
00:04:06.210 --> 00:04:08.280
value here is just going to be an empty string.

48
00:04:08.280 --> 00:04:15.210
So just like we did with the put extra and the Get in extra in the previous section we put a default

49
00:04:15.210 --> 00:04:15.840
value.

50
00:04:16.140 --> 00:04:21.600
We'll get if our value doesn't exist and then we'll just log

51
00:04:24.860 --> 00:04:28.810
the results so we can see it in action.

52
00:04:29.910 --> 00:04:36.920
So call it username and then use a name.

53
00:04:37.160 --> 00:04:41.560
So let's run the app and take a look at the logs.

54
00:04:42.260 --> 00:04:43.410
And here we go.

55
00:04:44.180 --> 00:04:50.690
And you can see that that these name Rob has indeed been restored from shared preferences.

56
00:04:51.620 --> 00:04:58.550
Just to prove that that has indeed been stored permanently I'm going to jump over to the app and shut

57
00:04:58.550 --> 00:05:10.130
it down by double tapping on the square and closing down the app and then I'm going to comment out the

58
00:05:10.130 --> 00:05:16.160
part of the code that saves the string in shared preferences and then we'll just run it again and we

59
00:05:16.160 --> 00:05:22.670
should get exactly the same result which will prove that the username and shared preferences were stored

60
00:05:22.880 --> 00:05:24.320
permanently.

61
00:05:24.530 --> 00:05:25.340
And here we go.

62
00:05:25.370 --> 00:05:26.620
You can see it right there.

63
00:05:26.660 --> 00:05:29.170
Once again brilliant.

64
00:05:29.180 --> 00:05:34.580
So that's more or less all there is to saving items with shared preferences.

65
00:05:34.760 --> 00:05:39.020
But I did mention at the end of the last section that the challenge here was going to be converting

66
00:05:39.050 --> 00:05:43.610
our memorable places app to permanent storage using shared preferences.

67
00:05:43.730 --> 00:05:49.070
That's going to be a bit tougher than just saving a string because we want to save our array lists permanently.

68
00:05:49.550 --> 00:05:54.170
So I'm going to show you how to do that and then I'll give you the challenge of updating memorable places

69
00:05:54.290 --> 00:05:57.950
to store data permanently.

70
00:05:57.950 --> 00:06:03.630
So first off I'm just going to comment out I have got so far.

71
00:06:03.710 --> 00:06:08.230
And then we'll create an array list to save.

72
00:06:08.770 --> 00:06:16.200
This will be called friends which should be familiar.

73
00:06:17.310 --> 00:06:22.620
And then as before we'll add Monaca

74
00:06:27.530 --> 00:06:33.740
and John le and we'll just leave it there we only really need to to prove that point.

75
00:06:33.770 --> 00:06:41.210
Now you will have noticed that shared preferences are limited with the types of data that we can store.

76
00:06:41.750 --> 00:06:45.930
So one option is to convert our data into a string set.

77
00:06:46.250 --> 00:06:50.960
But the problem with that is we lose the order of the data which is important to us.

78
00:06:51.050 --> 00:06:57.590
So I'm going to do a process called serialization which is a bit like converting something to Jason

79
00:06:57.590 --> 00:07:04.320
essentially converts it to a string so that we can save it as a string in shared preferences.

80
00:07:04.700 --> 00:07:08.510
To do that I'm going to import a new class.

81
00:07:08.510 --> 00:07:09.610
This is something we haven't done before.

82
00:07:09.620 --> 00:07:14.070
So it's a good thing to see so we're going to import a new Java class.

83
00:07:14.360 --> 00:07:26.060
And this is going to be called object Serializer and object Serializer is a standard class provided

84
00:07:26.060 --> 00:07:33.350
by Apache but I've made a very slightly edited version which just works slightly smoother with Android

85
00:07:33.800 --> 00:07:35.380
and you can get that at Android.

86
00:07:35.380 --> 00:07:42.590
Of course dot com slash object Serializer Drage DML if you want to see the original then just google

87
00:07:42.590 --> 00:07:46.660
object Serializer Java and it'll pop right up.

88
00:07:46.710 --> 00:07:48.620
You can see that mine is very similar.

89
00:07:48.620 --> 00:07:54.450
I've just changed the exceptions really to work with Android studio.

90
00:07:55.310 --> 00:07:59.710
So we're then going to delete everything here in this class.

91
00:07:59.710 --> 00:08:04.290
Apart from the package name at the top and then paste it all in.

92
00:08:04.490 --> 00:08:06.060
That should work absolutely fine.

93
00:08:06.080 --> 00:08:07.860
Now we've got this class.

94
00:08:08.030 --> 00:08:13.100
I'm not going to worry about what the code is doing precisely essentially just converting our

95
00:08:16.150 --> 00:08:19.150
array list into a string.

96
00:08:20.680 --> 00:08:30.520
So now we can edit our shared preferences and put a string again and this time I'll call the string

97
00:08:30.520 --> 00:08:39.430
friends and the string that we're gonna save is object Serializer dot serialise and then we're going

98
00:08:39.430 --> 00:08:42.060
to serialize the object friends

99
00:08:44.820 --> 00:08:48.470
and then as before we'll apply that.

100
00:08:48.480 --> 00:08:51.490
Now this is something that could fail.

101
00:08:51.720 --> 00:09:00.060
So we're going to surround it by try and catch.

102
00:09:00.270 --> 00:09:07.000
And then we need to try and restore that into a new array list.

103
00:09:07.080 --> 00:09:08.650
So let's do that down here.

104
00:09:09.120 --> 00:09:18.780
So we'll create a new array list of strings which are called new friends.

105
00:09:18.780 --> 00:09:25.110
So initially that will just be an empty list and then we're going to set it equal to.

106
00:09:25.180 --> 00:09:34.480
And this is where we're going to bring our data back from shared preferences and we're going to use

107
00:09:34.480 --> 00:09:39.790
the object Serializer and this time we're going to serialize I we're going to convert it from a string

108
00:09:40.090 --> 00:09:42.370
to our array list object.

109
00:09:42.670 --> 00:09:49.540
And the thing that we want to serialize is what we say earlier so that shared preferences get string

110
00:09:50.770 --> 00:09:58.360
and friends and then we need to have a secondary string.

111
00:09:58.630 --> 00:10:00.360
So we could leave it as an empty string.

112
00:10:00.370 --> 00:10:06.490
But the problem with that is if we do actually get no response from our shared preferences then trying

113
00:10:06.490 --> 00:10:10.080
to realize an empty string will give us an error.

114
00:10:10.270 --> 00:10:20.610
So I'm going to create a serialized empty array list so we use objects Serializer to serialize and then

115
00:10:20.610 --> 00:10:24.950
we'll just create a new array list

116
00:10:28.010 --> 00:10:29.030
of strings

117
00:10:32.050 --> 00:10:33.250
just like that.

118
00:10:33.250 --> 00:10:39.310
So that looks slightly confusing but all we're really doing is creating a new serialise empty array

119
00:10:39.310 --> 00:10:40.060
list.

120
00:10:40.060 --> 00:10:46.740
So then if we get an error over here we're going to d serialize that serialized array list which would

121
00:10:46.740 --> 00:10:50.500
just create an empty arriviste make sense.

122
00:10:50.620 --> 00:10:56.740
Hopefully some of that same issue was before that we need to surround it with try and catch in case

123
00:10:56.740 --> 00:10:58.060
it fails.

124
00:10:58.810 --> 00:11:04.600
And also this time this will return just a generic object.

125
00:11:04.600 --> 00:11:11.670
So we need to cast it to an array list of strengths

126
00:11:15.170 --> 00:11:19.690
that we get and then we'll log

127
00:11:24.240 --> 00:11:25.380
new friends.

128
00:11:28.840 --> 00:11:31.700
And we're converted to a string so it can be locked.

129
00:11:34.160 --> 00:11:37.380
And we should see them the results come back.

130
00:11:40.020 --> 00:11:46.210
So that's a slightly fiddly process we're converting to a string using the object serializer.

131
00:11:46.380 --> 00:11:49.690
And then we're converting back again.

132
00:11:49.820 --> 00:11:50.960
I seem to have an error somewhere.

133
00:11:51.010 --> 00:11:51.970
I guess I've forgotten

134
00:11:54.680 --> 00:11:55.730
a semi-colon

135
00:12:00.250 --> 00:12:01.770
so just check this works.

136
00:12:01.770 --> 00:12:12.580
We should now find that it saves the array list friends in a serialized form and then brings it back.

137
00:12:12.610 --> 00:12:17.970
DC realizes it and log's it has an array list.

138
00:12:22.570 --> 00:12:23.660
And there it is.

139
00:12:23.660 --> 00:12:29.620
You just it just past fantastic manicuring generally you can see it's in the same order which is what

140
00:12:29.620 --> 00:12:30.500
we want.

141
00:12:31.180 --> 00:12:35.020
And again convince ourselves

142
00:12:37.790 --> 00:12:46.960
that if I comment out the part of the code that saves that array list I still get the result and that

143
00:12:46.960 --> 00:12:50.140
will mean that it's saved permanently.

144
00:12:50.470 --> 00:12:52.080
And there it is.

145
00:12:54.000 --> 00:12:54.990
Wonderful.

146
00:12:55.380 --> 00:13:02.340
So again it's a bit of a faff but it does the job and generally being able to convert objects to strings

147
00:13:02.340 --> 00:13:04.500
is useful in a number of different instances.

148
00:13:04.510 --> 00:13:08.250
It's worth being aware of the object serializer.

149
00:13:08.800 --> 00:13:12.200
All right now it's the big challenge for this video.

150
00:13:12.870 --> 00:13:20.430
So we're going back over the memorable places and your challenge is to add permanent storage to the

151
00:13:20.430 --> 00:13:22.730
memorable places app.

152
00:13:22.980 --> 00:13:24.030
Best of luck.

153
00:13:24.090 --> 00:13:24.760
Go for it.

154
00:13:32.450 --> 00:13:32.960
All right.

155
00:13:32.990 --> 00:13:33.950
Here we get them.

156
00:13:34.250 --> 00:13:41.450
So I'm going to start by adding my new object Serializer Java class.

157
00:13:46.850 --> 00:13:52.490
And I'm going to paste in code so I can use the object serializer.

158
00:13:52.860 --> 00:13:57.410
And then let's think about the two places that we're going to need to use permanent storage.

159
00:13:57.450 --> 00:14:03.900
So one is when we're getting the data back at the beginning of the create method in the main activity

160
00:14:04.500 --> 00:14:10.220
and the other is where we're saving items at the bottom of the maps activity.

161
00:14:10.770 --> 00:14:14.770
So I'm going to start by saving items.

162
00:14:15.570 --> 00:14:26.520
So let's begin by using your preferences so it will create a variable again co-chaired preferences which

163
00:14:26.520 --> 00:14:34.170
is going to be created from this activity and we're going to get shared preferences.

164
00:14:35.410 --> 00:14:42.120
For the app package come to what Percival thought memorable places.

165
00:14:42.430 --> 00:14:44.270
Package name are probably be different.

166
00:14:45.100 --> 00:14:46.120
And then we'll use

167
00:14:49.120 --> 00:14:50.420
private mode again.

168
00:14:52.660 --> 00:15:04.260
Only our app can access the data and then to save the places or at list we'll use shared preferences

169
00:15:05.570 --> 00:15:15.960
at it don't put strain and we'll save it as places and then we use the object Serializer to serialize

170
00:15:15.960 --> 00:15:22.270
the data and the data that we want to serialize is main activity dot places

171
00:15:25.430 --> 00:15:35.920
then we'll add in try catch and don't forget they apply at the end.

172
00:15:36.220 --> 00:15:44.950
Easily done saving the locations is a little bit trickier because they are saved as Lachlan's which

173
00:15:44.950 --> 00:15:47.040
we can save in shared preferences.

174
00:15:47.050 --> 00:15:54.750
So we're going to convert those to strings and save them separately as latitude and longitude as so

175
00:15:55.190 --> 00:15:57.620
to do that we're going to loop through.

176
00:15:58.550 --> 00:16:01.340
So we're looking for that Lind's

177
00:16:04.580 --> 00:16:15.380
which I'll call coordinates and we're looking for all the coordinates in main activity dot locations

178
00:16:16.360 --> 00:16:23.380
then we're going to create separate array lists for each for latitude and longitude.

179
00:16:25.560 --> 00:16:26.780
So let's see that's

180
00:16:30.940 --> 00:16:37.900
latitudes which is a new array list and same

181
00:16:40.840 --> 00:16:42.040
for longer cheat's

182
00:16:48.150 --> 00:16:48.570
then

183
00:16:51.420 --> 00:16:56.050
each of the lungs will take latitudes and add

184
00:16:59.040 --> 00:17:07.880
and we want to add coordinates dot latitude but we need to convert that to a string.

185
00:17:08.480 --> 00:17:11.660
So we use double dots to string

186
00:17:14.600 --> 00:17:19.700
to do that and same for longer cheats and cheats.

187
00:17:19.770 --> 00:17:21.960
And we won't see

188
00:17:24.890 --> 00:17:27.420
use coordinates longer at this time.

189
00:17:27.470 --> 00:17:30.950
We still want to convert it to a string

190
00:17:35.890 --> 00:17:36.800
that we gave.

191
00:17:36.830 --> 00:17:47.380
So now we can use our shared preferences again and this time I'll just copy and paste.

192
00:17:47.420 --> 00:17:48.980
So we're putting latitudes

193
00:17:52.760 --> 00:18:05.900
and this time we want to serialize the latitude variable and then longer cheat's what we call long and.

194
00:18:07.750 --> 00:18:08.400
All right.

195
00:18:08.710 --> 00:18:11.430
So now everything should be saved permanently.

196
00:18:11.470 --> 00:18:17.120
We now just need to restore it from the permanent storage.

197
00:18:17.170 --> 00:18:24.670
So let's set up our shared preferences again will it share preferences.

198
00:18:24.700 --> 00:18:26.080
We're pretty familiar with this by now.

199
00:18:26.080 --> 00:18:31.630
So this dog get shared preferences and then the package name

200
00:18:36.310 --> 00:18:47.500
and then contact stopped made private and we start with places.

201
00:18:47.840 --> 00:18:54.470
So Plett set places equal to and now we're restoring.

202
00:18:54.470 --> 00:19:04.880
So we use object Serializer to serialize shared preferences don't get string and the string want to

203
00:19:04.880 --> 00:19:05.750
get is places

204
00:19:08.540 --> 00:19:18.380
and the back up as before will be a serialized empty string or empty list

205
00:19:28.190 --> 00:19:44.510
every gay forget the semi-colon and let's add an hour try catch.

206
00:19:44.660 --> 00:19:48.380
And finally of course we need to combat that.

207
00:19:53.100 --> 00:19:58.200
To a very list of strings.

208
00:19:58.210 --> 00:19:58.710
All right.

209
00:19:58.750 --> 00:20:08.020
So that's fine for places but for the slightly trickier locations we're going to need to create new

210
00:20:08.020 --> 00:20:09.290
array lists.

211
00:20:11.140 --> 00:20:12.220
For latitudes

212
00:20:22.980 --> 00:20:26.080
and also for long Michie's

213
00:20:32.220 --> 00:20:36.490
OK so let's copy our places code

214
00:20:41.760 --> 00:20:50.770
and then we'll set latitudes and this can be exactly the same except we're looking for the latitude

215
00:20:50.850 --> 00:20:55.400
object in shed preferences.

216
00:20:58.530 --> 00:20:59.870
And same for long and cheat's

217
00:21:07.400 --> 00:21:08.240
OK.

218
00:21:11.380 --> 00:21:12.170
We're nearly there.

219
00:21:12.310 --> 00:21:17.710
So now we're going to check to see if we've actually got some data here from permanent storage because

220
00:21:17.710 --> 00:21:21.450
it might be that they haven't saved anything yet.

221
00:21:21.490 --> 00:21:22.150
So if

222
00:21:25.240 --> 00:21:30.450
place is not size is greater than zero.

223
00:21:32.780 --> 00:21:33.350
And

224
00:21:35.810 --> 00:21:40.200
attitudes to us size is greater than zero.

225
00:21:42.530 --> 00:21:49.910
And long cheat's size is greater than zero.

226
00:21:50.600 --> 00:21:52.310
That means we have some data.

227
00:21:52.400 --> 00:21:59.240
Now there is a very small chance that something's gone wrong and we don't have the same number of places

228
00:21:59.300 --> 00:22:04.070
latitude and longitude as if that's the case our app is definitely going to give some errors at some

229
00:22:04.070 --> 00:22:04.730
point.

230
00:22:04.730 --> 00:22:20.430
So I'm going to do a check to see if places talk size is equal to a latitude star size and latitudes

231
00:22:20.460 --> 00:22:30.260
but size is equal to long dot size and only then what we process everything.

232
00:22:30.260 --> 00:22:36.620
Otherwise we might well try and create a location for something where we've only got a latitude for

233
00:22:36.620 --> 00:22:42.100
some reason not that that should ever happen but it's always good to check for these things.

234
00:22:42.170 --> 00:22:44.150
So if this is the case then all is well.

235
00:22:44.150 --> 00:22:47.840
So we're going to loop through both latitudes and long and shoots.

236
00:22:47.970 --> 00:22:56.830
Easiest way to do that is to follow up with a counter variable starting at zero.

237
00:22:58.230 --> 00:22:59.580
And GARING until

238
00:23:02.220 --> 00:23:09.230
we get to latitudes size which is of course the same as places size and longitude size.

239
00:23:10.530 --> 00:23:12.820
Adding one to each time.

240
00:23:13.110 --> 00:23:20.680
And then we want to take locations and add to it a new learn.

241
00:23:20.710 --> 00:23:27.460
I'm going to create that from latitudes get I.

242
00:23:28.190 --> 00:23:30.810
And look at us get I see.

243
00:23:30.910 --> 00:23:32.880
I mean each of those.

244
00:23:33.260 --> 00:23:34.920
But of course these are both strings.

245
00:23:35.000 --> 00:23:37.910
So we're going to need to convert them to doubles

246
00:23:40.810 --> 00:23:44.170
which we do using double pass double

247
00:23:53.270 --> 00:23:54.900
that we get.

248
00:23:54.930 --> 00:24:03.940
Now a final thing to check or to do really is initially to set places

249
00:24:06.670 --> 00:24:11.420
as well as latitudes and longer cheat's

250
00:24:15.360 --> 00:24:22.550
and indeed locations to empty array lists just in case the items are already saved there.

251
00:24:22.560 --> 00:24:28.590
We want to restore these items and put them on top of what's already saved.

252
00:24:28.590 --> 00:24:31.410
We want to essentially start from scratch each time.

253
00:24:32.010 --> 00:24:32.820
OK.

254
00:24:32.820 --> 00:24:37.850
If of course there aren't any places saved that we want to do what we did before.

255
00:24:40.000 --> 00:24:44.740
Which is to add this initial place in or rent them.

256
00:24:45.220 --> 00:24:46.400
So let's give it a gay

257
00:24:53.430 --> 00:24:55.670
Essentially there were two things to learn there.

258
00:24:55.680 --> 00:25:03.750
One is how to use shared preferences to store data permanently within a reasonably complex app.

259
00:25:03.750 --> 00:25:09.720
But another is also that shared preferences is not necessarily the ideal solution and will use shared

260
00:25:09.720 --> 00:25:10.220
preferences.

261
00:25:10.230 --> 00:25:15.840
In our first big app of this section which will be a note taking app but we won't use it later on and

262
00:25:15.840 --> 00:25:21.270
we'll see the advantages and disadvantages of shared preferences versus databases which we'll see how

263
00:25:21.270 --> 00:25:22.960
to use later on.

264
00:25:28.320 --> 00:25:29.180
And here we are.

265
00:25:29.310 --> 00:25:32.760
I've actually cheated slightly and you can see that everything's working because I've already saved

266
00:25:32.760 --> 00:25:35.960
a new place but let's just pivot to ourselves.

267
00:25:36.390 --> 00:25:47.030
So add a new place that's OK for Biggleswade this time so long press and then that will save that location.

268
00:25:47.110 --> 00:25:49.840
And we've got a nice address there as well.

269
00:25:49.990 --> 00:25:53.860
So going back OK it's displaying it then that's great.

270
00:25:54.070 --> 00:26:01.300
But we want to be sure that it's saved it permanently so double tap on the square and then we'll close

271
00:26:01.300 --> 00:26:04.760
down the app and then run it again.

272
00:26:06.840 --> 00:26:07.940
From Android studio

273
00:26:11.380 --> 00:26:17.120
and with any luck we'll see that those two items now have been saved permanently.

274
00:26:17.740 --> 00:26:23.860
And there they are fantastic of course if I click on that one then it will take me to that particular

275
00:26:23.860 --> 00:26:28.700
location in the lovely town of Pickle's way am.

276
00:26:28.810 --> 00:26:32.040
So now we have permanent storage in memorable places.

277
00:26:32.200 --> 00:26:37.660
But do bear in mind that it wasn't that straightforward and if I wanted to do anything more complicated

278
00:26:37.660 --> 00:26:41.040
with my permanent storage it would probably be a bit of a nightmare.

279
00:26:41.260 --> 00:26:46.210
So we're going to start by seeing how good shared preferences can be for an app like Notes app and then

280
00:26:46.210 --> 00:26:50.460
we'll go on and look at databases as an alternative before we build our nights out.

281
00:26:50.560 --> 00:26:56.060
We're going to see two new features that are useful in all sorts of different Android apps.

282
00:26:56.080 --> 00:26:58.670
Firstly see how to customize the action bar.

283
00:26:58.960 --> 00:27:03.280
And then we'll see how to use pop ups or alert dialogs in our apps.

284
00:27:03.280 --> 00:27:06.330
We'll start with customizing the action bar in the next video.
