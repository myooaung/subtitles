WEBVTT
1
00:00:00.570 --> 00:00:06.650
Of course a major part of Instagram's functionality is importing photos from the camera.

2
00:00:06.900 --> 00:00:09.840
And that is something that we like We want to do in several of our apps.

3
00:00:10.020 --> 00:00:13.130
So I'm going to show you the process in a new project

4
00:00:16.180 --> 00:00:24.730
which I'll call later import demo and all the usual settings.

5
00:00:31.620 --> 00:00:38.490
And starting off a photo import is actually very very simple we just create an intent to jump to what's

6
00:00:38.490 --> 00:00:42.850
known as the media store to get media from the user's phone.

7
00:00:48.840 --> 00:00:55.890
So all we need today in the uncreate method is create a new intent

8
00:00:59.610 --> 00:01:07.730
which is going to be a new intent and this time we're going to use intent dot action

9
00:01:10.520 --> 00:01:19.060
pick to allow us to pick from the media store and to specify that we want to pick from the media store.

10
00:01:21.910 --> 00:01:33.280
We use media store images of media not external content.

11
00:01:33.790 --> 00:01:42.100
You are.

12
00:01:42.380 --> 00:01:54.230
And then we just use Start activity intent in the usual way which is to add in the media store class

13
00:01:56.610 --> 00:01:59.390
around the app.

14
00:01:59.700 --> 00:02:07.050
And this will then jump us to a place where we can choose images from the device that we will need Of

15
00:02:07.050 --> 00:02:11.540
course a way of displaying the image.

16
00:02:11.580 --> 00:02:16.520
So let's jump to main activity.

17
00:02:18.590 --> 00:02:20.710
And we'll bring in an image view

18
00:02:27.900 --> 00:02:30.690
which I drag over to replace the text via

19
00:02:39.140 --> 00:02:44.480
gay.

20
00:02:44.560 --> 00:02:47.690
So for now we'll just have a little friendly Android man there.

21
00:02:53.370 --> 00:02:57.600
And we'll make it a full screen

22
00:03:03.520 --> 00:03:04.090
image v.

23
00:03:06.830 --> 00:03:13.400
game and then let's jump on that and see how our public so you can see we've got the option to choose

24
00:03:13.490 --> 00:03:15.080
an image.

25
00:03:15.080 --> 00:03:20.600
Now we don't have any media on advice yet so we need to get around that problem.

26
00:03:20.600 --> 00:03:24.250
If we were on a real phone we could use Capture picture.

27
00:03:24.590 --> 00:03:32.480
But on the vast majority of simulators that just gives you something like this which you can then capture

28
00:03:32.480 --> 00:03:33.740
if you want.

29
00:03:33.770 --> 00:03:41.630
So it's not that much fun but it will prove the point and we'll use these images to import to our app

30
00:03:42.260 --> 00:03:44.780
so of course right now if I choose that picture.

31
00:03:47.400 --> 00:03:49.020
It will then go back to the app.

32
00:03:49.110 --> 00:03:51.230
But it doesn't do anything with that picture.

33
00:03:51.570 --> 00:03:59.520
So now we need to update our code to actually do something with the image and the first thing that we

34
00:03:59.520 --> 00:04:07.850
need to change is we change our stance activity method to start activity for results.

35
00:04:07.920 --> 00:04:10.970
So now we're going to expect a result from this activity.

36
00:04:11.430 --> 00:04:19.320
And as we've done before we give a request code so I normally just choose a number one that's to identify

37
00:04:19.320 --> 00:04:26.130
this particular intent but it's going to be fine for us because there's only one intent anyway and then

38
00:04:26.130 --> 00:04:28.140
to do something when the intent is finished.

39
00:04:28.170 --> 00:04:36.670
We use the on activity results method that we get.

40
00:04:37.520 --> 00:04:45.140
And you can see we've got some intent data there which is what we're going to use to get our image so

41
00:04:45.980 --> 00:04:50.070
we can check if we want to see that request code is equal to 1.

42
00:04:50.120 --> 00:04:53.630
But we're pretty sure it will be because that's the only intent in our app.

43
00:04:54.500 --> 00:05:02.470
More importantly we want to check that the result code is ok or result on the school.

44
00:05:02.480 --> 00:05:03.390
OK.

45
00:05:03.760 --> 00:05:11.420
And we've got some data because it's very much possible that the user can so they question in that case

46
00:05:11.420 --> 00:05:22.820
we shouldn't try and display the image then we're going to create a U R II which is much like a u r

47
00:05:22.820 --> 00:05:35.720
l essentially a link to our image or call it selected image and this is going to be data.

48
00:05:35.860 --> 00:05:39.890
This variable up here thought get data

49
00:05:42.640 --> 00:05:45.430
then we're going to convert that to a bitmap image

50
00:05:48.620 --> 00:05:49.600
several color bitmap

51
00:05:53.240 --> 00:05:59.500
and we do this by accessing this particular you are on location in the media store.

52
00:06:01.000 --> 00:06:16.780
So we use media store images media don't get bitmap and then we use this for our main activity to get

53
00:06:17.890 --> 00:06:30.000
content resolver to get that content and then the image that we want to get is selected image.

54
00:06:30.100 --> 00:06:37.140
Now that of course could fail so we'd surround it with try and catch.

55
00:06:37.860 --> 00:06:42.110
And then if we'd been successful we're going to add it to our image view.

56
00:06:43.750 --> 00:06:48.860
So Image view has an ID image view we can leave that as it is.

57
00:06:49.250 --> 00:06:53.040
So let's create an image re.

58
00:06:53.710 --> 00:07:03.640
It's going to be an image we from fine view by ID all says Id dot imagery.

59
00:07:06.690 --> 00:07:12.840
And then we'll take our imagery and we'll set the image bitmap

60
00:07:15.870 --> 00:07:18.290
to our bitmap that we've just created.

61
00:07:19.540 --> 00:07:27.550
So now we've got all our code but we do need to ask the user for permission to access their media store.

62
00:07:28.180 --> 00:07:30.000
So a couple of things are quiet.

63
00:07:30.010 --> 00:07:39.400
First off we request the permission in Android manifest so that they read external storage permission

64
00:07:43.350 --> 00:07:44.240
and next.

65
00:07:44.380 --> 00:07:52.170
Just like with our location earlier on in the course we need to request the user's permission actively.

66
00:07:53.170 --> 00:07:54.300
OK.

67
00:07:54.700 --> 00:08:06.750
So we're going to check self permission and this time we're looking for manifest permission don't

68
00:08:09.400 --> 00:08:10.720
read external storage

69
00:08:14.350 --> 00:08:25.430
and if that is not equal to a package manager got permission granted them will need to ask for permission

70
00:08:26.590 --> 00:08:42.850
so we can do that using request permissions with a new array of strings with a single value in manifest

71
00:08:44.520 --> 00:08:45.520
permission.

72
00:08:45.660 --> 00:08:46.110
Dot

73
00:08:49.670 --> 00:08:51.080
read external storage

74
00:08:58.950 --> 00:09:06.000
and then just a number just like I request code down there and then we need to do something when the

75
00:09:06.000 --> 00:09:14.070
user has hopefully given us permission and we do that with on request permissions result

76
00:09:19.240 --> 00:09:28.270
and we can look for requests carried is equal to one if we like.

77
00:09:28.460 --> 00:09:42.250
And then as before we check for Grundt results length being greater than zero and Grant results zero

78
00:09:42.250 --> 00:09:44.380
are equal.

79
00:09:44.740 --> 00:09:50.080
Package Manager got permission granted

80
00:09:53.590 --> 00:10:01.350
so if that's the case then we can start our intent as we're going to be doing this in two places now.

81
00:10:01.730 --> 00:10:05.680
Put it in a quick method.

82
00:10:11.940 --> 00:10:13.060
Here we go.

83
00:10:13.390 --> 00:10:17.830
So now we want to get photo here and also

84
00:10:20.610 --> 00:10:25.600
if the permission is already granted we'll get photo there as well.

85
00:10:28.850 --> 00:10:35.020
All right so that's a new addition for Android marshmallow just like with the getting the user's location.

86
00:10:35.020 --> 00:10:38.440
We have to explicitly ask for permission.

87
00:10:39.340 --> 00:10:42.010
So we're checking to see if permission is already granted.

88
00:10:42.360 --> 00:10:45.300
And if it's not then we're requesting it.

89
00:10:45.760 --> 00:10:48.050
And if that's not the case.

90
00:10:48.070 --> 00:10:50.880
Permission is granted and we're getting the photo.

91
00:10:51.250 --> 00:10:57.460
And then once they've said yes then the on request permissions result method will run and then we're

92
00:10:57.460 --> 00:11:02.800
checking to see if we've got permission then and if we are and we're running the code to get the photo

93
00:11:06.160 --> 00:11:07.030
right.

94
00:11:07.080 --> 00:11:09.850
So you can see we've got the permission request here.

95
00:11:09.930 --> 00:11:13.850
So let's allow it.

96
00:11:14.060 --> 00:11:20.540
And now it's asking us to choose a picture so let's choose the only one we have now when we jump back

97
00:11:20.540 --> 00:11:21.290
to the app.

98
00:11:21.410 --> 00:11:24.810
It's important the photo for us.

99
00:11:24.830 --> 00:11:25.740
Phew.

100
00:11:25.790 --> 00:11:32.660
So rather more code than you are perhaps expecting that but now we know how to get an image from the

101
00:11:32.660 --> 00:11:33.340
user.

102
00:11:33.380 --> 00:11:38.700
We're going to go back and do the same thing in our Instagram app.

103
00:11:38.720 --> 00:11:44.330
Now this one I'd recommend you follow along because it's a little bit fiddly we have to upload the photo

104
00:11:44.330 --> 00:11:49.900
to Passover but feel free to give it a shot yourself if you want see.

105
00:11:49.980 --> 00:11:57.270
Essentially we're going to add an option to share a photo at the top of the screen there in the menu.

106
00:11:57.440 --> 00:12:05.580
And then if they do they move request they import an image and then we'll upload that image to pass.

107
00:12:05.780 --> 00:12:07.470
So feel free to give that away.

108
00:12:07.940 --> 00:12:20.660
But I'm going to start with creating a new folder for our menu and then clicking on the menu and file

109
00:12:20.810 --> 00:12:23.730
new menu Rizzo's file

110
00:12:26.710 --> 00:12:31.670
and we'll call this the share menu.

111
00:12:38.740 --> 00:12:40.770
And it's just going to have a single item in it for now

112
00:12:46.500 --> 00:12:53.680
with the title of share and an ID of share

113
00:13:00.210 --> 00:13:01.040
that we gave.

114
00:13:01.360 --> 00:13:11.780
So now we're going to use our menu in use the list activity.

115
00:13:12.040 --> 00:13:17.380
So we'll start by adding our own create options menu method

116
00:13:26.270 --> 00:13:30.170
which if you remember uses menu inflata

117
00:13:34.610 --> 00:13:42.490
will create menu inflator menu inflates which is going to be get menu inflata

118
00:13:45.820 --> 00:13:48.220
and we take how many you inflator and we inflate

119
00:13:52.040 --> 00:14:02.820
menu that we're just created and we associate it with the menu up here that's being created.

120
00:14:03.050 --> 00:14:08.030
The menu at the top of the app and then

121
00:14:11.420 --> 00:14:17.420
we add on options item selected.

122
00:14:17.420 --> 00:14:23.010
So this is what we're going to do when the share button is tapped.

123
00:14:23.090 --> 00:14:40.400
So I will start by just checking to see if the item ID is the shared button.

124
00:14:40.410 --> 00:14:41.810
So now we want to see

125
00:14:45.560 --> 00:14:47.320
through this process.

126
00:14:47.840 --> 00:14:55.620
So I'll just copy and paste the code this time bring in the necessary classes.

127
00:14:58.280 --> 00:15:13.270
And we'll also need these two methods.

128
00:15:13.350 --> 00:15:18.120
There we go and we may well need to add permission to the manifest

129
00:15:21.280 --> 00:15:29.090
Let's have that one there read external storage.

130
00:15:29.330 --> 00:15:35.780
And so now when the user taps the share button then it will check for permission requests the permission

131
00:15:35.780 --> 00:15:39.870
if necessary and get the photo if not.

132
00:15:40.490 --> 00:15:45.870
And then once it's got the permission it will get the photo then as well.

133
00:15:48.000 --> 00:15:54.570
Now a quick thing to add because we're supporting API versions less than 23.

134
00:15:55.200 --> 00:15:56.790
We're just going to surround this with

135
00:16:00.600 --> 00:16:03.990
a check to make sure that we're in marshmallow.

136
00:16:04.860 --> 00:16:06.350
And if we're not in marshmallow

137
00:16:09.290 --> 00:16:10.070
we can just

138
00:16:12.750 --> 00:16:15.060
get photo right.

139
00:16:15.080 --> 00:16:16.790
So the last part then is t

140
00:16:19.540 --> 00:16:21.760
tell our app what to do when

141
00:16:24.840 --> 00:16:30.780
the photo is received and what we want to do here is upload it to pass.

142
00:16:30.780 --> 00:16:34.650
So I'm going to copy the carried over from

143
00:16:37.890 --> 00:16:40.150
the app that we just created.

144
00:16:40.890 --> 00:16:45.030
And for now I'm going to get rid of this image.

145
00:16:45.840 --> 00:16:47.040
And I'm just going to log

146
00:16:52.140 --> 00:16:52.740
photo

147
00:16:55.260 --> 00:16:57.120
received.

148
00:16:57.120 --> 00:17:01.090
So we're just going to do a quick check because I've added a lot of code.

149
00:17:01.500 --> 00:17:09.780
So make sure everything's connected up right and all is working well before we attempt to actually upload

150
00:17:10.200 --> 00:17:12.530
to our pass server.

151
00:17:13.050 --> 00:17:14.320
And here we go.

152
00:17:14.690 --> 00:17:16.500
So we're going to tap on the menu.

153
00:17:16.710 --> 00:17:18.310
Click share.

154
00:17:18.360 --> 00:17:20.980
Asking for permission that's a good sign.

155
00:17:21.420 --> 00:17:22.850
So we'll allow it.

156
00:17:23.160 --> 00:17:32.000
And then it should take us to the media browser and then we'll tap that.

157
00:17:32.000 --> 00:17:39.200
And with any luck that will take us back to our app and photos received super.

158
00:17:39.780 --> 00:17:47.300
So now we need to do is take this bitmap and upload it to pass server.

159
00:17:47.850 --> 00:17:52.700
And this is a lengthy process but will guide you through it.

160
00:17:52.740 --> 00:18:03.710
So we start by creating a byte array output stream code stream which is going to be a new byte array

161
00:18:03.770 --> 00:18:05.410
output stream.

162
00:18:05.780 --> 00:18:13.430
And this essentially is going to allow us to convert our image into I-PASS file which we can then upload

163
00:18:13.970 --> 00:18:17.910
as part of a past object to our pass server.

164
00:18:20.870 --> 00:18:35.090
Then we take bitmapped and we're going to compress it into a piano format say bitmap dot compress format

165
00:18:36.690 --> 00:18:46.220
PNB will have high quality and we'll do it as part of the stream

166
00:18:49.230 --> 00:18:52.200
then we're going to take a bite array

167
00:18:59.280 --> 00:19:00.960
which is going to convert our string

168
00:19:04.720 --> 00:19:13.760
to a byte array so we've now got our bitmap compressed in a PNB format and convert it to a byte array.

169
00:19:14.650 --> 00:19:22.920
And then we can finally convert that to a POS file which I'll call file

170
00:19:26.460 --> 00:19:38.550
which is going to be a new pass file which I'll call image tompion G from a battery and essentially

171
00:19:38.550 --> 00:19:40.040
to get a pass file.

172
00:19:40.050 --> 00:19:43.230
You need to go via a byte array.

173
00:19:43.260 --> 00:19:48.290
So that's why we've got that slightly fuzzy process there.

174
00:19:48.660 --> 00:19:50.640
Now we've got more straightforward

175
00:19:53.390 --> 00:19:54.030
parts today.

176
00:19:54.040 --> 00:20:04.030
We're going to create a parser object which will be a new pass object with a class of image.

177
00:20:04.760 --> 00:20:12.730
So this is going to be where we store all our images and we're going to have two variables stored here

178
00:20:12.730 --> 00:20:15.470
and the first one will be the image itself.

179
00:20:15.490 --> 00:20:24.380
So image and then file member files the past file containing the image and then

180
00:20:28.920 --> 00:20:40.320
we'll also save the user name of the user which will be Parsees a dog cat current user don't get username

181
00:20:43.100 --> 00:20:56.220
and then we use object site in background with a new safe Colback.

182
00:20:56.790 --> 00:21:02.610
And if he is now we'll let the user know that it's done so TOSed

183
00:21:07.530 --> 00:21:08.670
M.H. Schadt

184
00:21:12.330 --> 00:21:16.110
else will give the user a nice friendly error message.

185
00:21:18.250 --> 00:21:24.340
Image could not be shared.

186
00:21:24.340 --> 00:21:28.210
Please try again later.

187
00:21:30.030 --> 00:21:34.940
Whorey them so let's give it a try.

188
00:21:34.940 --> 00:21:43.400
So now when we import an image into the app it should convert it to a byte array that's to a pass file

189
00:21:43.880 --> 00:21:51.710
and then make that pass of a new pass object with a class of image and then add the image and the user

190
00:21:51.710 --> 00:21:57.470
name to that object save it in the background and give the user a nice friendly message to let them

191
00:21:57.470 --> 00:22:01.640
know whether it was successful or not.

192
00:22:01.850 --> 00:22:10.040
And then of course we should be able to see a new class over here on our pass dashboard showing the

193
00:22:10.040 --> 00:22:11.680
image that we've just saved.

194
00:22:13.630 --> 00:22:14.420
All right.

195
00:22:14.470 --> 00:22:16.210
Keep your fingers crossed.

196
00:22:16.330 --> 00:22:17.550
Let's give it a go.

197
00:22:18.040 --> 00:22:20.150
So here's our use illicit activity.

198
00:22:21.020 --> 00:22:25.310
That's top on the menu and share.

199
00:22:25.570 --> 00:22:27.370
And then it shouldn't need permission this time.

200
00:22:27.370 --> 00:22:27.860
There we go.

201
00:22:27.880 --> 00:22:37.460
We can go straight to the image and select the image and then it will go back to the app and you can

202
00:22:37.460 --> 00:22:41.030
see we've got a successful image shared.

203
00:22:41.990 --> 00:22:42.510
Wonderful.

204
00:22:42.560 --> 00:22:44.160
Let's do a refresh.

205
00:22:44.180 --> 00:22:49.870
Remember we need a refresh of the whole page because this is a new class that's coming in here.

206
00:22:51.770 --> 00:23:01.030
And with any luck we'll see new images class and the new image that we've uploaded.

207
00:23:01.160 --> 00:23:03.020
And there it is.

208
00:23:03.020 --> 00:23:06.400
So let's click on there and you can see you've got the user name Rob.

209
00:23:07.070 --> 00:23:09.560
And we've got the image as well.

210
00:23:09.710 --> 00:23:12.540
If we tap on that we should be able to see the image.

211
00:23:13.160 --> 00:23:15.130
Superb.

212
00:23:15.140 --> 00:23:19.280
So how have you managed to follow along with that and congratulations and particularly if you did manage

213
00:23:19.280 --> 00:23:21.160
to figure that out for yourself.

214
00:23:23.320 --> 00:23:25.900
We're quite close to being at the end of this app now.

215
00:23:26.050 --> 00:23:31.750
We can view all of the uses and we can share images but we can't currently view the images that other

216
00:23:31.750 --> 00:23:33.070
people have shared.

217
00:23:33.340 --> 00:23:38.170
So that's where we're going to be adding in the next and final video for this section or we'll of course

218
00:23:38.320 --> 00:23:39.080
see you there.
