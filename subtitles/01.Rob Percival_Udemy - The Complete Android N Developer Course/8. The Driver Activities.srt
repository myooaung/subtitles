1
00:00:00,600 --> 00:00:06,180
Now that the writers view is working more or less as I would want it it's time to make things work for

2
00:00:06,180 --> 00:00:08,700
the drivers side of things.

3
00:00:08,730 --> 00:00:11,290
So this is going to look like this.

4
00:00:11,310 --> 00:00:13,650
We've got our starting page that we're used to.

5
00:00:13,950 --> 00:00:23,130
So we're going to switch over to driver top get started and now we're given a list of nearby requests

6
00:00:23,370 --> 00:00:30,000
so we know the driver's location and we're doing a request using past server to get nearby requests.

7
00:00:30,000 --> 00:00:35,580
So if you have a look down the options available when you're writing your query you should find one

8
00:00:35,850 --> 00:00:41,600
that enables you to find nearby objects and then when we tap them one of these.

9
00:00:41,670 --> 00:00:49,380
So let's say we want to choose the point two miles one then you can see we're given both the driver's

10
00:00:49,380 --> 00:00:59,980
location and the user's location and the driver has the option of accepting the request.

11
00:01:00,140 --> 00:01:05,830
And if they do then that's updated on pass which will stop the existing navigation.

12
00:01:06,100 --> 00:01:16,210
And it also redirects them to Google Maps so that they can see and be navigated to that location shouldn't

13
00:01:16,210 --> 00:01:17,690
take a long time for this one.

14
00:01:18,010 --> 00:01:18,700
And that's it.

15
00:01:18,850 --> 00:01:21,670
So a few small new things in there.

16
00:01:21,670 --> 00:01:26,320
We'll be doing a little bit of googling to figure out for example how to get Google maps directions

17
00:01:26,320 --> 00:01:29,140
from your app as always give it a go yourself.

18
00:01:29,140 --> 00:01:30,370
Hope it goes well.

19
00:01:30,370 --> 00:01:31,130
Best of luck.

20
00:01:39,070 --> 00:01:39,520
All right.

21
00:01:39,520 --> 00:01:40,570
Here we got them.

22
00:01:41,050 --> 00:01:49,400
I'm going to start with a new activity for our drivers to see all the active requests.

23
00:01:49,850 --> 00:01:51,110
Our usual empty activity

24
00:01:54,500 --> 00:01:58,980
call this view requests activity

25
00:02:03,210 --> 00:02:04,180
every day.

26
00:02:04,590 --> 00:02:06,470
And before we do too much with that

27
00:02:09,450 --> 00:02:15,760
in the rider activity I'm going to add a small logout button so we'll pop this

28
00:02:18,780 --> 00:02:20,020
towards the top right

29
00:02:28,270 --> 00:02:30,700
to allow the user of course to log out

30
00:02:36,880 --> 00:02:37,700
every OK.

31
00:02:37,720 --> 00:02:40,730
So let's quickly into rider activity

32
00:02:44,960 --> 00:02:50,540
say public void log out hold by the button view.

33
00:02:54,670 --> 00:02:56,020
And then we just want the

34
00:02:59,820 --> 00:03:04,890
log the user out using Parsees I don't logout and then redirect

35
00:03:09,850 --> 00:03:11,350
to the main activity

36
00:03:19,790 --> 00:03:26,090
the application context and main activity class is where we want them to go.

37
00:03:26,980 --> 00:03:29,860
And then let's do that again.

38
00:03:29,890 --> 00:03:45,240
So that will enable us to go back to our main activity and then let's update redirect activity.

39
00:03:45,260 --> 00:03:53,690
So now if we're a writer We'll get to the right of activity but if we're a driver then we'll create

40
00:03:53,750 --> 00:03:56,350
a new intent.

41
00:03:58,400 --> 00:04:03,350
And this one will go to the view requests activity

42
00:04:10,880 --> 00:04:12,040
that we can.

43
00:04:12,610 --> 00:04:18,880
So now have to view requests is going to be a pretty simple activity it's just going to have a list

44
00:04:18,970 --> 00:04:19,280
few

45
00:04:22,230 --> 00:04:22,720
somewhere.

46
00:04:22,720 --> 00:04:23,230
There it is

47
00:04:32,600 --> 00:04:35,860
which will be a full screen

48
00:04:40,090 --> 00:04:48,670
I'll call it request list fee and then set up our list fee

49
00:04:54,070 --> 00:04:55,480
request list view.

50
00:04:55,480 --> 00:05:04,780
This is going to be a list fee from fine view by ID card of ID dot request for you.

51
00:05:05,130 --> 00:05:08,750
And in fact we're likely to need that from several locations.

52
00:05:09,250 --> 00:05:10,930
So I'll define it up there.

53
00:05:12,870 --> 00:05:14,350
And just create it here.

54
00:05:16,150 --> 00:05:20,660
Similarly we'll need an array list

55
00:05:25,280 --> 00:05:29,270
of strings which I'll call requests

56
00:05:32,160 --> 00:05:33,780
and then initially will just

57
00:05:36,510 --> 00:05:47,650
add a test to that array list and then set up our array adapter.

58
00:05:51,410 --> 00:05:52,760
And created here.

59
00:05:53,050 --> 00:06:03,400
A new array adapter using this as the context and then Android.

60
00:06:03,670 --> 00:06:15,320
Don't lay out the simple list item one as the template and then requests as our array list.

61
00:06:15,850 --> 00:06:25,700
And then finally we attach that to our requests list view.

62
00:06:26,360 --> 00:06:31,280
And just before we run that I've just noticed that we're going to need to actually set up

63
00:06:34,560 --> 00:06:35,380
a very last

64
00:06:40,070 --> 00:06:40,800
there.

65
00:06:40,860 --> 00:06:43,360
Otherwise we'll get a crash when we try and add to it.

66
00:06:45,440 --> 00:06:46,100
OK.

67
00:06:46,580 --> 00:06:47,790
So let's do a quick test.

68
00:06:47,790 --> 00:06:56,220
We should now be able to log out of the right activity and then log back in as a driver and then we'll

69
00:06:56,220 --> 00:07:01,530
see our test item there on the list view.

70
00:07:02,190 --> 00:07:05,560
And here we go see you see we're currently logged in as a writer.

71
00:07:05,610 --> 00:07:13,080
So we'll tap the new logout button which takes us back to the log in screen and now we can switch to

72
00:07:13,080 --> 00:07:16,320
be a driver tap get started.

73
00:07:16,620 --> 00:07:20,660
And this now takes us to the driver list for you.

74
00:07:21,090 --> 00:07:21,570
Excellent.

75
00:07:21,570 --> 00:07:25,650
I'm just going to update the title there.

76
00:07:30,870 --> 00:07:41,300
To say nearby requests now to offer nearby requests to our drivers we need to know where they are.

77
00:07:41,580 --> 00:07:46,470
So we're going to need all the GPS related code from the right activity.

78
00:07:46,470 --> 00:07:52,200
I think I'll do a bit of copying and pasting here to save us typing it all out again.

79
00:07:55,760 --> 00:08:00,180
So we've got our location manager and location listener

80
00:08:05,910 --> 00:08:06,750
copy that Eva

81
00:08:15,480 --> 00:08:16,610
paste and all of those

82
00:08:21,480 --> 00:08:22,110
and then

83
00:08:25,110 --> 00:08:30,950
we're not going to need the Google map but we will need location manager and location listener.

84
00:08:39,590 --> 00:08:40,820
And we'll also need

85
00:08:45,060 --> 00:08:49,870
the on request permission result method

86
00:08:55,100 --> 00:09:01,730
to do something when the user has given us permission to use that location.

87
00:09:01,730 --> 00:09:02,140
All right.

88
00:09:02,150 --> 00:09:10,520
So obviously the update map method is not there I think I may have copied one too many closing parentheses

89
00:09:10,520 --> 00:09:12,910
as well.

90
00:09:12,920 --> 00:09:13,280
All right.

91
00:09:13,280 --> 00:09:18,920
So instead of an update map method we're going to have an update list view method

92
00:09:22,650 --> 00:09:24,510
again that will need a location

93
00:09:27,540 --> 00:09:31,500
and will define it as public and void

94
00:09:37,450 --> 00:09:38,550
as we go.

95
00:09:38,750 --> 00:09:41,170
I think we need to change that.

96
00:09:41,170 --> 00:09:41,740
I don't think

97
00:09:55,630 --> 00:09:59,850
so the update list for your method is going to be much the same as what we did here.

98
00:10:05,170 --> 00:10:08,320
But it will of course get the requests from

99
00:10:11,700 --> 00:10:16,180
our past seven.

100
00:10:16,640 --> 00:10:23,550
So first off just in case we've got any active requests already saved let's clear those.

101
00:10:23,870 --> 00:10:33,200
And then we're going to run a query to get nearby requests so great.

102
00:10:33,260 --> 00:10:39,050
I passed query on past objects calling query

103
00:10:42,470 --> 00:10:43,560
and this is going to be.

104
00:10:44,090 --> 00:10:49,850
I pass querido get query on

105
00:10:54,130 --> 00:10:59,160
how request object that is.

106
00:10:59,550 --> 00:11:00,160
This one hand

107
00:11:04,020 --> 00:11:08,820
and we want requests that are near our current location.

108
00:11:09,210 --> 00:11:10,830
So we need to get our current location

109
00:11:14,110 --> 00:11:17,480
so we'll create a GOP point.

110
00:11:17,680 --> 00:11:24,670
I'm going to call this job point location and then we use new

111
00:11:28,010 --> 00:11:28,940
passaggio point

112
00:11:32,290 --> 00:11:40,090
using location get latitude and location dot to get long Ajeet.

113
00:11:40,680 --> 00:11:43,570
And I'm going to do just a very quick check here.

114
00:11:47,620 --> 00:11:49,030
To make sure location is not.

115
00:11:49,030 --> 00:11:54,820
Now we've done lots of checks earlier in the code so very much shouldn't be but it's a good idea to

116
00:11:54,820 --> 00:11:58,860
check that just before you attempt to get the latitude and longitude just in case.

117
00:12:01,540 --> 00:12:15,230
So now we want the take out query and we're looking for where near.

118
00:12:15,420 --> 00:12:18,920
So this will allow us to put in a job point.

119
00:12:19,140 --> 00:12:29,400
I would point location and it will find objects which are near our location and that will order them

120
00:12:29,400 --> 00:12:33,090
by their closeness as well.

121
00:12:33,200 --> 00:12:36,370
So I just need to check the name of record location here.

122
00:12:36,410 --> 00:12:37,760
So we want where location

123
00:12:40,780 --> 00:12:50,620
is near our driver's location and then I'm also going to limit the number of results.

124
00:12:50,620 --> 00:12:52,300
I don't think we need more than 10.

125
00:12:52,300 --> 00:12:56,100
It's likely that the driver will always choose the closest one anyway.

126
00:12:57,960 --> 00:13:03,750
And then we kind of run our query so I find in background

127
00:13:06,420 --> 00:13:13,960
with a new find callback and as usual check for error.

128
00:13:14,040 --> 00:13:14,430
Now

129
00:13:17,460 --> 00:13:24,430
and objects dot size being greater than zero.

130
00:13:26,040 --> 00:13:29,240
So if we have some objects will leap through them.

131
00:13:30,270 --> 00:13:41,700
So parse Object object in objects and then the information I want to actually show on the list is the

132
00:13:41,700 --> 00:13:48,580
distance to the request from the users current location.

133
00:13:48,720 --> 00:13:49,320
So let's

134
00:13:51,990 --> 00:13:57,890
create distance and I'm going to have it in miles it will have distance in miles.

135
00:13:58,470 --> 00:14:08,670
And then if we get the users current location says Geo point location you can see we've got these lovely

136
00:14:09,420 --> 00:14:13,670
methods which are perfect for what we want so distance in miles too.

137
00:14:14,220 --> 00:14:20,340
And then we just need to get the request location.

138
00:14:20,640 --> 00:14:29,460
So that's going to be object to get and then location we will need to

139
00:14:32,510 --> 00:14:37,900
cast that to a geo point and Vijaya point.

140
00:14:37,900 --> 00:14:41,740
I mean I passed you up with.

141
00:14:42,230 --> 00:14:42,920
There we go.

142
00:14:43,170 --> 00:14:47,990
So that will get the distance in miles that will generally be a very accurate number though.

143
00:14:48,270 --> 00:14:50,900
So I'm going to convert that to one decimal place.

144
00:14:54,290 --> 00:15:04,000
Distance 1 DP and we can do that in Java using math dot round.

145
00:15:04,000 --> 00:15:07,460
So there's no easy one decimal place method.

146
00:15:07,750 --> 00:15:12,080
But if we round outdistance

147
00:15:14,630 --> 00:15:25,310
multiply by 10 to the nearest number and then divide that by 10 that will effectively give us a number

148
00:15:25,310 --> 00:15:28,740
to one decimal place.

149
00:15:28,820 --> 00:15:31,200
I just need to cast that to a double.

150
00:15:31,370 --> 00:15:37,520
So thinking about that if for example we've got a number which is one point three and then a load of

151
00:15:37,520 --> 00:15:44,420
decimals if we multiply that by 10 we get thirteen point and then a lot of decimals.

152
00:15:44,420 --> 00:15:51,290
If we then round that to the nearest whole number it's going to be 14 because it's thirteen point six

153
00:15:51,420 --> 00:15:52,540
say 14.

154
00:15:52,880 --> 00:16:04,770
And then if we divide that by 10 we get 1.4 which is the original number to 1 decimal place.

155
00:16:04,800 --> 00:16:11,180
So that's how a person process of rounding to one decimal place in Java.

156
00:16:12,030 --> 00:16:24,040
So then we just take our request and at that distance so distance 1 DP and of course we're going to

157
00:16:24,040 --> 00:16:28,210
need to convert it to a string and we'll add

158
00:16:31,350 --> 00:16:34,190
miles on the end.

159
00:16:35,180 --> 00:16:36,020
OK.

160
00:16:36,060 --> 00:16:41,350
And when that's done we're going to want to update the list.

161
00:16:42,150 --> 00:16:51,120
So let's take our data and notify that the data set has changed.

162
00:16:53,150 --> 00:16:54,740
And then in a Meave

163
00:16:57,710 --> 00:17:01,400
the definition here to our own create method

164
00:17:07,680 --> 00:17:11,100
and just to give them a message while it's loading.

165
00:17:11,100 --> 00:17:19,350
I'm going to take our requests and clear it just in case and then I'm going to add

166
00:17:22,360 --> 00:17:28,510
getting nearby requests.

167
00:17:28,520 --> 00:17:37,250
OK so with any luck now we'll get the driver's location and then get a list of nearby requests in order

168
00:17:37,700 --> 00:17:41,450
and will display the distance from those results.

169
00:17:41,570 --> 00:17:43,530
One more very quick change I think will

170
00:17:47,020 --> 00:17:52,810
add a quick no nearby requests if there aren't any.

171
00:17:52,800 --> 00:17:54,960
So if object sizes not greater than zero or

172
00:18:03,010 --> 00:18:13,200
will add are no active requests nearby and then maybe the array adapter to be updated down that.

173
00:18:13,240 --> 00:18:14,600
All right.

174
00:18:15,160 --> 00:18:19,130
So let's give that a try and Mullet's compiling.

175
00:18:19,240 --> 00:18:22,120
I'm going to add a few more requests down here.

176
00:18:26,830 --> 00:18:30,160
So I will add just a random user name

177
00:18:36,780 --> 00:18:43,450
and then remind myself where the current location is on say 52 and minus no point 3 5

178
00:18:48,190 --> 00:18:53,120
to fifty two point one minus no point 3 6

179
00:18:58,930 --> 00:19:01,540
add another number to

180
00:19:07,890 --> 00:19:15,640
and then fifty point zero one minus point three five five

181
00:19:21,910 --> 00:19:32,550
try that again to a point zero or one minus no point 3 5 5 every gay couple more

182
00:19:39,500 --> 00:19:45,220
fifty point zero or three minus no point

183
00:19:48,140 --> 00:19:54,010
3 5 6.

184
00:19:54,010 --> 00:19:54,990
Strange that it does that

185
00:20:00,920 --> 00:20:02,220
it's Belem.

186
00:20:03,060 --> 00:20:04,410
And so that gives us four.

187
00:20:04,470 --> 00:20:06,390
That's probably enough to be working with.

188
00:20:06,600 --> 00:20:09,400
Let's go and see it in action.

189
00:20:09,510 --> 00:20:10,700
And here we go.

190
00:20:11,100 --> 00:20:14,850
So you can see we've got one that bang on which is no surprise because we haven't moved since we created

191
00:20:14,850 --> 00:20:15,570
that one.

192
00:20:15,570 --> 00:20:19,400
And then the other ones that I created are a little bit further away.

193
00:20:20,630 --> 00:20:28,890
Of course if I then update my longer you'd say man it's no point 3 5 that will update the request list.

194
00:20:29,480 --> 00:20:30,200
Excellent.

195
00:20:30,200 --> 00:20:32,250
So now we've got a list of requests.

196
00:20:32,270 --> 00:20:39,290
Our next step is to be able to view the precise location of these requests so to do that we're going

197
00:20:39,290 --> 00:20:42,250
to need new activity.

198
00:20:42,860 --> 00:20:43,760
And this is going to be

199
00:20:46,650 --> 00:20:48,200
another Google Maps activity

200
00:20:55,670 --> 00:20:58,420
I'll call it the drive out location activity.

201
00:21:03,190 --> 00:21:09,360
And you can see it's jumped to the Google Maps API to SML But we already have our key in there because

202
00:21:09,360 --> 00:21:13,500
we put it in there when we created the previous Google Maps activity.

203
00:21:15,410 --> 00:21:21,550
So we're going to want to jump to the driver location activity from the view requests activity.

204
00:21:21,560 --> 00:21:28,310
We'll do that when they tap on one of the items in the table and I'm going to do that by passing the

205
00:21:28,310 --> 00:21:34,780
driver's location and uses location to the driver location activity.

206
00:21:35,300 --> 00:21:38,080
So we'll add this down in our own create method

207
00:21:41,680 --> 00:21:58,800
and we would take our request list we set on him click listener with a new on item click his name and

208
00:21:58,800 --> 00:22:05,740
now we're going to want to pass not only the users current location but the request location as well.

209
00:22:05,740 --> 00:22:15,110
So we don't have a store currently for the request location so let's set that up we'll create an array

210
00:22:15,110 --> 00:22:15,740
list.

211
00:22:16,070 --> 00:22:17,890
And this is going to be of flights

212
00:22:22,190 --> 00:22:29,060
for request latitudes because we can't send locations directly in intense

213
00:22:31,610 --> 00:22:39,780
this is going to be a new list of flights.

214
00:22:40,160 --> 00:22:40,910
And similarly

215
00:22:45,440 --> 00:22:48,380
we'll have request longer cheat's

216
00:22:56,210 --> 00:22:58,730
which will also be an array list of flights.

217
00:22:59,180 --> 00:23:12,590
And then here as we're populating the last few We'll take request latitudes and add and we want to get

218
00:23:14,880 --> 00:23:19,190
the latitude from the object location.

219
00:23:19,770 --> 00:23:25,350
So I think what alday is rather then use that every time

220
00:23:32,530 --> 00:23:37,090
I create a request location which is going to be that object that

221
00:23:40,590 --> 00:23:42,450
and then we'll use that there as well.

222
00:23:49,310 --> 00:23:58,400
Could even be very careful and check to see if request location is not know before adding it.

223
00:24:03,160 --> 00:24:17,400
And then request location to get latitude and you've got a small issue there because it's a double.

224
00:24:17,400 --> 00:24:18,030
Not a problem.

225
00:24:18,030 --> 00:24:22,940
I think the easiest thing would be to update these two doubles

226
00:24:25,930 --> 00:24:27,190
rather than flights

227
00:24:33,810 --> 00:24:35,760
go and similarly request

228
00:24:41,990 --> 00:24:42,810
Lagace.

229
00:24:42,920 --> 00:24:43,580
Well at

230
00:24:47,990 --> 00:24:56,230
the quest location don't get let me cheat.

231
00:24:56,400 --> 00:24:59,670
And also while we're there let's not forget to clear

232
00:25:04,920 --> 00:25:10,960
multi that just here after they find him backgrounders happened

233
00:25:15,500 --> 00:25:21,860
Klaver Quest long cheats and also requests latitudes.

234
00:25:25,470 --> 00:25:28,790
All right so back to our own item click listener.

235
00:25:29,310 --> 00:25:34,850
We want to check that we can get the locations that we need to send.

236
00:25:36,060 --> 00:25:45,420
So I'm going to check to see if request latitudes dot size is greater than.

237
00:25:45,570 --> 00:25:51,180
And remember I is the number of the row that the user pressed on.

238
00:25:51,330 --> 00:25:54,870
So if the user presses on the first row that will be I will be at zero.

239
00:25:55,050 --> 00:25:59,070
So we want request latitudes to be at least 1 in size.

240
00:25:59,310 --> 00:26:02,700
So it has to be greater than I.

241
00:26:03,810 --> 00:26:05,190
And similarly request

242
00:26:09,760 --> 00:26:10,440
non-achievers

243
00:26:19,930 --> 00:26:24,970
and we're going to use the last known location as well.

244
00:26:24,970 --> 00:26:26,000
So that's here.

245
00:26:28,910 --> 00:26:36,510
So let's grab that's in fact we'll grab it here and then

246
00:26:39,690 --> 00:26:44,950
a check to make sure that last line location is not no

247
00:26:49,180 --> 00:26:53,620
and we need to do our check to make sure we have permission

248
00:27:01,780 --> 00:27:10,540
all that they version is less than 23 i.e. We're pre marshmallow

249
00:27:20,200 --> 00:27:27,060
may be gay and we want this to refer to the the activity.

250
00:27:27,640 --> 00:27:31,150
So we won't view requests activity got this

251
00:27:37,420 --> 00:27:39,440
fee.

252
00:27:39,640 --> 00:27:43,810
So if all those are the case then we'll do the redirect.

253
00:27:43,970 --> 00:27:45,530
So I will create our intent

254
00:27:53,470 --> 00:28:06,820
and we want to redirect to drive location activity doc class and then we'll add how extras

255
00:28:10,210 --> 00:28:10,630
say

256
00:28:14,200 --> 00:28:21,970
we'll have it use the latitude and this is going to be in fact will it request latitude keep our naming

257
00:28:23,780 --> 00:28:26,260
reason to be consistent.

258
00:28:27,010 --> 00:28:32,070
And this is going to be requested latitudes get I

259
00:28:40,240 --> 00:28:44,230
and then Same for request long achieved

260
00:28:47,640 --> 00:28:49,320
Everquest long teased off get.

261
00:28:49,350 --> 00:28:53,540
And we've already done a check to be sure that that exists.

262
00:28:56,550 --> 00:29:00,950
Then we'll put the call dry the latitude

263
00:29:03,730 --> 00:29:21,150
and this is going to be the last known location dot get latitude and finally the driver Lagace it will

264
00:29:21,150 --> 00:29:23,010
be the last known occasion to get

265
00:29:25,960 --> 00:29:37,570
longitude and then finally we'll start activity and run the intent OK.

266
00:29:37,910 --> 00:29:39,010
And then for now

267
00:29:42,200 --> 00:29:47,180
we'll just be a very quick recipient of that intent.

268
00:29:51,430 --> 00:29:53,190
So we'll get the intent

269
00:29:56,180 --> 00:30:05,010
and for now we'll just center it on the driver's location so we'll create a new lot to learn which will

270
00:30:05,010 --> 00:30:07,440
be intent.

271
00:30:07,520 --> 00:30:10,200
To get double extra

272
00:30:13,480 --> 00:30:18,030
The double extra We want to get is the driver latitude

273
00:30:26,100 --> 00:30:28,080
with a default value of 0.

274
00:30:28,080 --> 00:30:37,230
Just in case something goes horribly wrong and we don't have a valley and another double extra driver

275
00:30:37,320 --> 00:30:42,180
long achieved and again 0 will be the default

276
00:30:45,120 --> 00:30:46,690
and we'll call this driver location

277
00:30:55,270 --> 00:31:01,130
and we'll give it a title of your location.

278
00:31:04,000 --> 00:31:10,030
Seem to have an issue either in view requests activity that we can.

279
00:31:10,780 --> 00:31:19,780
I've missed a semi-colon or I've got an extra parenthesis easily.

280
00:31:21,200 --> 00:31:21,850
OK.

281
00:31:22,220 --> 00:31:23,080
So let's take a look.

282
00:31:23,090 --> 00:31:32,300
We should now be redirected to the driver location activity which will then show us the driver's location

283
00:31:33,740 --> 00:31:36,170
on a Google map.

284
00:31:36,220 --> 00:31:43,910
Our next step then will be to show both the driver and the user's location on the map which will require

285
00:31:43,940 --> 00:31:49,660
quite careful framing because we want to be sure that both markers are shown on the map.

286
00:31:49,940 --> 00:31:56,360
So while that's compiling Let's have a quick jump over to Firefox and see if we can find a good way

287
00:31:56,690 --> 00:31:57,230
to do that.

288
00:31:57,290 --> 00:31:59,970
Not an easy problem to solve.

289
00:31:59,970 --> 00:32:11,440
So let's take a look at something like Android Google map show two markers on map something like that.

290
00:32:11,710 --> 00:32:17,110
Let's have a look and then we get that first result looks pretty good.

291
00:32:17,110 --> 00:32:21,860
Zoom to show all the markets Stephanie what we want to see.

292
00:32:22,190 --> 00:32:24,170
They've got 10 markets but that's OK.

293
00:32:28,650 --> 00:32:32,270
So let's have a look at this we're calculating the bounds of all the markets.

294
00:32:32,760 --> 00:32:38,670
So we're using a lot to learn bounds builder and then we're looping through what looks like an array

295
00:32:38,670 --> 00:32:45,240
list of our markers and then we're generating some bounds from those.

296
00:32:45,540 --> 00:32:50,830
Then we add in some padding and update the camera using those bounds.

297
00:32:51,440 --> 00:32:53,460
Okay that looks pretty straightforward.

298
00:32:53,820 --> 00:32:57,000
We'll try that out once we've tested that everything's working.

299
00:32:59,380 --> 00:33:07,320
Over in our app and here we go here's our requests so let's tap on one of them and there we go.

300
00:33:07,630 --> 00:33:11,130
So it's redirecting nicely and displaying correctly.

301
00:33:11,140 --> 00:33:18,540
Obviously the Xoom isn't great but we'll fix that now anyway using this code

302
00:33:23,240 --> 00:33:28,880
which we're going to use to make sure that both of the markers appear

303
00:33:33,110 --> 00:33:36,250
in our map so I've selected all of that

304
00:33:40,980 --> 00:33:49,260
let's get rid of anything that isn't Kate and I think well use animate Kemmerer

305
00:33:56,050 --> 00:34:00,630
say bring is in OK.

306
00:34:01,130 --> 00:34:08,720
So if we remember what's going on here we're creating a lot to learn Baum's object and we're doing that

307
00:34:08,720 --> 00:34:12,430
from a list of markers.

308
00:34:12,770 --> 00:34:26,710
So let's create this array list of Marcus which are all cool markers and it's going to be a new rightest.

309
00:34:26,980 --> 00:34:36,430
So we haven't actually created a market before except when we're adding a marker here.

310
00:34:37,470 --> 00:34:50,600
So we should be able to take markers and then add and then we just copy how Marka creation carried

311
00:34:54,560 --> 00:34:56,430
from that.

312
00:34:57,240 --> 00:34:59,780
But of course we will need to know the location

313
00:35:02,960 --> 00:35:04,980
before we do that.

314
00:35:05,000 --> 00:35:11,090
So now we've got the drive is location that's do the same thing.

315
00:35:13,560 --> 00:35:17,340
But adding the request location

316
00:35:23,780 --> 00:35:29,550
to do that we'll need to create a layer again for the request location.

317
00:35:29,550 --> 00:35:32,650
So this is going to be a new lot to learn.

318
00:35:32,750 --> 00:35:36,750
And again we're going to use content don't get double extra.

319
00:35:37,910 --> 00:35:40,570
And I think I called it request latitude.

320
00:35:41,150 --> 00:35:44,420
Let's just check yes say request latitude

321
00:35:51,570 --> 00:36:03,110
0 just in case and that intent get double extra request not achieved with zero as the backup

322
00:36:06,440 --> 00:36:06,720
OK.

323
00:36:06,720 --> 00:36:15,030
So now we've got our array list of markers that added to the map then we're looping through those markers

324
00:36:15,600 --> 00:36:17,550
and generating the bounds.

325
00:36:18,180 --> 00:36:19,400
So a bit of padding.

326
00:36:19,410 --> 00:36:26,560
I think let's go for 30 pixels from the edge and then we update the camera.

327
00:36:26,660 --> 00:36:32,770
And so we no longer need our code to add those.

328
00:36:33,240 --> 00:36:34,440
And I'll just change that.

329
00:36:34,460 --> 00:36:39,810
It should work as Google map but have we as we've used and map everywhere else to refer to our Google

330
00:36:39,810 --> 00:36:42,540
map we'll keep it there as well.

331
00:36:42,540 --> 00:36:43,130
All right.

332
00:36:43,470 --> 00:36:50,340
So before we run that there's another change I'm going to make that is to add a request button to the

333
00:36:50,340 --> 00:36:51,990
bottom of

334
00:36:56,060 --> 00:37:03,940
that screen and this time I'm not able to drag my button in directly.

335
00:37:04,160 --> 00:37:12,050
So I'm going to show you a solution to that problem which is to essentially create a relative layout

336
00:37:14,930 --> 00:37:16,870
to contain our map.

337
00:37:16,970 --> 00:37:25,580
So we're going to copy the relative layout code from activity main and then go back to the driver location

338
00:37:25,760 --> 00:37:35,110
and then paste that in before our fragment and then we'll close the relative layout

339
00:37:40,390 --> 00:37:41,140
I'm going to set

340
00:37:48,160 --> 00:37:53,790
all the paddings to zero DP So we get all the way to the edge of the screen

341
00:37:59,550 --> 00:38:00,330
every k

342
00:38:04,160 --> 00:38:09,740
will change the context to driver location activity.

343
00:38:12,980 --> 00:38:21,700
OK so now our map is contained within the relatively out and we should be able to drag in our button

344
00:38:23,770 --> 00:38:28,010
I would go and position it now where we like.

345
00:38:28,020 --> 00:38:30,580
So I'm going to go for bottom center

346
00:38:36,190 --> 00:38:43,740
I'm going to call accepte request button unclick is going to be accepte request

347
00:38:48,950 --> 00:38:50,990
and the text will be accept request

348
00:38:53,740 --> 00:38:54,200
and then

349
00:38:57,370 --> 00:38:59,560
what we need to do is set up

350
00:39:02,880 --> 00:39:12,880
and accept request method called by a view button and here we need to do a couple of things

351
00:39:16,640 --> 00:39:28,030
we need to update the request over in pass so that we know that it's been accepted so it won't be accepted

352
00:39:28,030 --> 00:39:28,960
by someone else.

353
00:39:29,140 --> 00:39:33,370
And then we need to give the driver directions.

354
00:39:33,610 --> 00:39:38,500
So let's do the first thing first in order to update the requests we're going to need to know which

355
00:39:38,500 --> 00:39:39,960
request it is.

356
00:39:40,060 --> 00:39:42,950
And that's something we haven't actually got yet.

357
00:39:43,030 --> 00:39:51,260
So let's add that to the requests activity.

358
00:39:51,510 --> 00:39:57,170
So I will add an extra and we'll have the user name.

359
00:39:57,610 --> 00:40:02,290
And again this is something that we don't have yet.

360
00:40:02,580 --> 00:40:05,610
So let's have this in here.

361
00:40:07,660 --> 00:40:09,490
It's going to be on the list of strings

362
00:40:19,840 --> 00:40:24,340
and then we'll add that down.

363
00:40:24,350 --> 00:40:25,850
Here's a user names.

364
00:40:26,080 --> 00:40:38,210
It's going to be at and them we'll use object to get string and the string is going to be the username.

365
00:40:38,390 --> 00:40:41,810
So that is this object here.

366
00:40:45,440 --> 00:40:45,910
OK.

367
00:40:45,920 --> 00:40:55,240
So now we're going see past that as well so that's going to be user names gets.

368
00:40:55,950 --> 00:40:58,160
And again we want the right one.

369
00:40:59,280 --> 00:41:03,000
And I'll just do a check to make sure

370
00:41:05,810 --> 00:41:17,770
there are enough usernames to go around.

371
00:41:18,480 --> 00:41:20,750
So that should now pass on the usernames

372
00:41:24,490 --> 00:41:28,450
that define our intent so we can get

373
00:41:31,520 --> 00:41:32,210
wherever we need

374
00:41:37,190 --> 00:41:38,990
and then we'll create a query

375
00:41:42,040 --> 00:41:42,790
to find

376
00:41:45,830 --> 00:41:47,250
the request.

377
00:41:50,640 --> 00:41:58,880
It's going to be a pass query to get query on the request class

378
00:42:02,910 --> 00:42:05,080
and we want to find where the user name

379
00:42:08,100 --> 00:42:09,220
is equal to a

380
00:42:12,750 --> 00:42:22,860
a pope that is in and we want intent to get string extra

381
00:42:26,280 --> 00:42:27,480
and use a name

382
00:42:31,790 --> 00:42:33,430
then we'll run a query.

383
00:42:36,950 --> 00:42:40,010
With a new find Colback

384
00:42:43,810 --> 00:42:45,820
check to say that he is no

385
00:42:50,370 --> 00:42:51,570
and that we have an object

386
00:42:58,000 --> 00:42:59,910
then we'll look through them.

387
00:43:00,640 --> 00:43:03,060
Well they were very much expecting one hand

388
00:43:13,350 --> 00:43:15,360
and we're going to update that object

389
00:43:18,290 --> 00:43:28,440
with a driver use a and that driver user name will be our current user names I get current user talk

390
00:43:28,490 --> 00:43:30,860
get username

391
00:43:33,640 --> 00:43:34,090
and then

392
00:43:37,110 --> 00:43:41,960
save in the background with a callback.

393
00:43:42,080 --> 00:43:46,690
So a new safe callback.

394
00:43:47,400 --> 00:43:56,870
And as long as he is know how final thing today is then to get directions to this new location.

395
00:43:57,330 --> 00:43:58,670
Again that's something we haven't done before.

396
00:43:58,670 --> 00:44:01,830
So if we can figure out how to do it.

397
00:44:02,580 --> 00:44:12,480
So Android gets directions to location and I'll pop in Java just because if I didn't have Java it might

398
00:44:12,480 --> 00:44:15,740
look like I wasn't making an app.

399
00:44:15,840 --> 00:44:20,520
I was just seeing how to use Android itself.

400
00:44:20,520 --> 00:44:23,250
So now that top result looks pretty good.

401
00:44:23,910 --> 00:44:30,930
So looking at that one it actually looks like he's trying to draw the directions on the map which is

402
00:44:30,930 --> 00:44:31,530
not what we want.

403
00:44:31,530 --> 00:44:37,320
We want the actual driving directions on location change.

404
00:44:37,320 --> 00:44:38,250
Not really.

405
00:44:38,250 --> 00:44:39,050
This one looks better.

406
00:44:39,060 --> 00:44:42,140
Launching Google maps directions via an intent.

407
00:44:42,390 --> 00:44:44,050
That's definitely what we want today.

408
00:44:48,380 --> 00:44:49,160
OK.

409
00:44:49,540 --> 00:44:50,460
And there we go.

410
00:44:52,330 --> 00:44:53,670
That looks pretty simple.

411
00:44:59,260 --> 00:45:00,820
So we're creating an intent

412
00:45:06,700 --> 00:45:10,300
then creating a you are right

413
00:45:13,120 --> 00:45:18,580
which is a Google Maps you are right with what looks like the starting point and the finishing point

414
00:45:18,880 --> 00:45:19,620
right there.

415
00:45:19,780 --> 00:45:23,020
And then we're starting that activity.

416
00:45:24,200 --> 00:45:29,230
It's done you are right OK.

417
00:45:29,610 --> 00:45:32,740
So you put that on the next line so we can see all of it.

418
00:45:33,120 --> 00:45:39,100
So then I'm going to call this something else.

419
00:45:39,120 --> 00:45:41,650
So we don't confuse it with our previous intent.

420
00:45:45,990 --> 00:45:57,600
And then we just need to get all of the values from our initial intent.

421
00:45:57,780 --> 00:45:59,390
So it's going to be a bit messy.

422
00:46:00,980 --> 00:46:02,360
But here we go.

423
00:46:03,150 --> 00:46:05,330
So intent gets

424
00:46:09,150 --> 00:46:11,180
double extra.

425
00:46:11,180 --> 00:46:16,670
And this is going to be the starting point latitude so that they derive latitude

426
00:46:22,250 --> 00:46:23,670
the zero just in case

427
00:46:28,810 --> 00:46:30,040
and I'm going to copy that

428
00:46:36,010 --> 00:46:37,090
and replace it that

429
00:46:42,860 --> 00:46:47,250
is put back slashes in rather unhelpfully I don't need those backslashes.

430
00:46:47,290 --> 00:46:48,210
There we go.

431
00:46:48,240 --> 00:46:50,310
So now we want drive long achieved

432
00:46:56,510 --> 00:46:57,830
and then we want

433
00:47:01,200 --> 00:47:02,920
again without the backslash is

434
00:47:05,560 --> 00:47:13,050
the request latitude.

435
00:47:13,410 --> 00:47:14,250
And finally

436
00:47:19,980 --> 00:47:28,680
in fact we didn't have anything after that.

437
00:47:29,170 --> 00:47:31,240
So just the request

438
00:47:34,110 --> 00:47:34,370
to

439
00:47:38,850 --> 00:47:39,420
there we go.

440
00:47:39,600 --> 00:47:43,230
So that should create the Google Maps you are l and then

441
00:47:46,500 --> 00:47:51,800
we just start the activity to direct them to the writer.

442
00:47:52,470 --> 00:47:56,070
All right let's have a look and see if that works.

443
00:47:56,850 --> 00:47:57,520
And here we go.

444
00:47:57,520 --> 00:47:58,320
So let's try.

445
00:47:58,320 --> 00:48:02,270
The second result and see what we get.

446
00:48:03,420 --> 00:48:09,650
And sadly we get a crash but let's not worry let's have a look and see what's gone wrong.

447
00:48:13,210 --> 00:48:14,240
I've run

448
00:48:17,070 --> 00:48:20,330
so error using new zealand bounds maps as can't be zero.

449
00:48:20,330 --> 00:48:24,080
Most likely the layout has not yet occurred for the map view.

450
00:48:24,650 --> 00:48:26,440
OK.

451
00:48:26,690 --> 00:48:32,030
That's a shame because we're running this in the on map ready function so you might expect the map to

452
00:48:32,030 --> 00:48:35,450
be ready but presumably it's not laid out yet.

453
00:48:35,450 --> 00:48:40,380
So let's see our previous answer

454
00:48:43,120 --> 00:48:44,770
and see if there's any help there.

455
00:48:47,080 --> 00:48:50,610
Almost all methods require the map object to have passed the lab process.

456
00:48:50,800 --> 00:48:56,530
You can wait for this to happen using the add on label layout listener right.

457
00:48:58,950 --> 00:49:03,020
OK let's see if there's any greater assistance there.

458
00:49:05,640 --> 00:49:09,600
So they've got that specific error that we found and they've got a solution to it.

459
00:49:09,720 --> 00:49:12,660
But they said they couldn't use on global outlets.

460
00:49:13,190 --> 00:49:16,320
So let's see here we go.

461
00:49:16,320 --> 00:49:18,580
This is how to use global outlets.

462
00:49:18,590 --> 00:49:20,890
So let's do it the proper way.

463
00:49:25,920 --> 00:49:31,390
So I back over and we'll do this in on create

464
00:49:34,660 --> 00:49:37,120
so we're accessing the relative layout

465
00:49:41,650 --> 00:49:47,370
which we have but we haven't given an idea yet.

466
00:49:47,690 --> 00:49:52,430
So let's get our relative lay out and give it an ID

467
00:49:58,340 --> 00:50:00,800
I'll call it map relative lay out

468
00:50:07,760 --> 00:50:08,470
there we go.

469
00:50:08,750 --> 00:50:17,200
And then we're taking our map layout and adding and on global layout listener.

470
00:50:17,640 --> 00:50:18,460
Here we go.

471
00:50:19,950 --> 00:50:22,310
So that's where we write code to update

472
00:50:28,100 --> 00:50:29,610
everything that we need.

473
00:50:33,740 --> 00:50:35,110
So that should work fine.

474
00:50:35,120 --> 00:50:46,310
I think I'll just define my intent a little bit earlier so that it can be accessed just in case we have

475
00:50:46,310 --> 00:50:49,050
any problems with the map layouts.

476
00:50:49,430 --> 00:50:52,770
All right let's give that a try.

477
00:50:53,090 --> 00:50:56,430
As I've said before if you get a crash Don't panic just go in.

478
00:50:56,450 --> 00:50:59,770
Look at the error message try and see what's going on.

479
00:50:59,960 --> 00:51:04,670
If you really can't figure it out Googling the error message will normally get you the solution to the

480
00:51:04,670 --> 00:51:05,140
problem.

481
00:51:05,150 --> 00:51:07,440
Someone's probably been there before.

482
00:51:08,030 --> 00:51:08,410
All right.

483
00:51:08,420 --> 00:51:09,910
So let's try it again.

484
00:51:10,160 --> 00:51:11,640
Point four miles.

485
00:51:13,930 --> 00:51:15,070
And there we go.

486
00:51:15,370 --> 00:51:22,450
So we get a nice animation and both of the markers are shown on the map.

487
00:51:22,450 --> 00:51:25,460
And let's try the accept request button as well.

488
00:51:27,040 --> 00:51:35,880
We'll open that with the maps app I'll change that to the default for this device as well.

489
00:51:36,440 --> 00:51:42,210
And then except that's skip the sign in process for now.

490
00:51:45,740 --> 00:51:46,250
And there you go.

491
00:51:46,250 --> 00:51:48,230
You can see we've got the navigation there.

492
00:51:48,620 --> 00:51:59,430
So you just tap start navigation and we get to go.

493
00:51:59,490 --> 00:51:59,870
All right.

494
00:51:59,870 --> 00:52:05,160
So we're pretty much there for the driver side of things now just a couple of small tweaks.

495
00:52:05,250 --> 00:52:12,420
The first is you may have noticed that we had two markers of the same color which made it a little bit

496
00:52:12,420 --> 00:52:14,090
unclear which one was which.

497
00:52:14,400 --> 00:52:21,090
So you'll be nice to have different colored markers and see if we can figure out how to do that.

498
00:52:24,550 --> 00:52:25,920
So Android map

499
00:52:28,600 --> 00:52:30,990
change marker colors something like that.

500
00:52:33,430 --> 00:52:34,010
I would say

501
00:52:38,290 --> 00:52:38,630
so.

502
00:52:38,690 --> 00:52:41,040
Go straight to the answer.

503
00:52:41,520 --> 00:52:42,470
And that looks good.

504
00:52:42,470 --> 00:52:48,700
So we change the icon default marker and then we change the color there.

505
00:52:48,770 --> 00:52:50,930
I think that might actually be something that were done before.

506
00:52:56,250 --> 00:52:57,730
But let's have that in.

507
00:52:57,750 --> 00:52:58,850
So it will change

508
00:53:07,360 --> 00:53:08,620
the color of

509
00:53:13,880 --> 00:53:16,610
the request location to blue

510
00:53:25,720 --> 00:53:26,550
OK.

511
00:53:27,180 --> 00:53:33,970
And the other change that we need to make is now that we've got requests that have been accepted.

512
00:53:37,670 --> 00:53:45,640
And to see that we'll need to do a full refresh here because we've got a new column.

513
00:53:45,850 --> 00:53:51,490
We should find the yes that this request has a driver username and we don't want to show you those sort

514
00:53:51,490 --> 00:53:56,860
of requests in the request list because they're already taken.

515
00:53:56,860 --> 00:53:57,760
So let's add

516
00:54:04,360 --> 00:54:05,560
to the query

517
00:54:08,620 --> 00:54:16,940
take our query and we want to find where the driver username is undefined.

518
00:54:17,380 --> 00:54:24,980
So for that we can use query dot where does NOT exist.

519
00:54:27,340 --> 00:54:40,390
And the thing that we want not to exist is the driver use the name we wanted to be undefined.

520
00:54:40,410 --> 00:54:41,830
There we go.

521
00:54:42,810 --> 00:54:45,390
So let's have a quick look at that in action.

522
00:54:45,570 --> 00:54:56,220
We should now find that we can only see three requests in the user list and also that when we view a

523
00:54:56,220 --> 00:55:00,110
request we see the markers as different colors.

524
00:55:00,270 --> 00:55:01,170
And here we go.

525
00:55:01,200 --> 00:55:05,870
So first off we can't see that request that we're no longer interested in.

526
00:55:05,970 --> 00:55:14,750
And secondly if we take a new request you can see we can now see both of those as different colors.

527
00:55:14,910 --> 00:55:19,770
Although having done that I think I'm going to increase the padding slightly because there's still a

528
00:55:19,770 --> 00:55:26,790
bit too close to the edge for my liking so let's just quickly change that

529
00:55:31,050 --> 00:55:33,980
or change that to 60.

530
00:55:33,990 --> 00:55:34,380
There we go.

531
00:55:34,380 --> 00:55:37,370
So that's as far as we're going to go for the driver.

532
00:55:37,530 --> 00:55:45,030
Now all that remains is to update the riders view so that they know that our drive is on the way and

533
00:55:45,030 --> 00:55:48,580
we're going to tell them how far away the drive is as well.

534
00:55:48,600 --> 00:55:50,270
We'll do that in the next video.
