WEBVTT
1
00:00:00.480 --> 00:00:04.740
So now we know how to get all the information about a user's location.

2
00:00:04.740 --> 00:00:10.650
We're going to put this knowledge together and build an app called hiker's watch and the app looks like

3
00:00:10.650 --> 00:00:11.520
this.

4
00:00:11.910 --> 00:00:18.180
Says like one of those high cars watches and it gives your GPS location and also a bit more information

5
00:00:18.180 --> 00:00:26.310
about your location as well such as the level of accuracy the altitude and bought a hiker's watch could

6
00:00:26.310 --> 00:00:28.730
never give you the actual address.

7
00:00:28.860 --> 00:00:31.020
If there is one as well.

8
00:00:31.020 --> 00:00:35.430
So it really is just an opportunity for you to practice the skills that we've learnt in the last few

9
00:00:35.430 --> 00:00:36.330
videos.

10
00:00:36.450 --> 00:00:40.850
Notice as well that I've got a nice full screen image here.

11
00:00:40.940 --> 00:00:44.280
This is something we haven't done before so you'll need to do a bit of googling to figure out how to

12
00:00:44.280 --> 00:00:44.810
do that.

13
00:00:44.970 --> 00:00:48.380
But try and recreate the nice full screen background.

14
00:00:48.390 --> 00:00:54.390
It's a nice thing to be able to have under your belt as an Android Developer and otherwise everything

15
00:00:54.390 --> 00:00:56.810
should be reasonably straightforward.

16
00:00:57.240 --> 00:00:58.160
Best of luck.

17
00:00:58.230 --> 00:00:58.840
Go for it.

18
00:01:07.960 --> 00:01:09.100
All right and here we go.

19
00:01:09.180 --> 00:01:10.370
Hey that went well.

20
00:01:10.450 --> 00:01:18.870
I'm going to of course by creating a new project and I'll call it.

21
00:01:19.330 --> 00:01:28.980
Watch this out the apostrophe just in case it causes any problems and will go for marshmallow and an

22
00:01:29.010 --> 00:01:36.390
empty activity when not going to be using a map this time and later used as the default.

23
00:01:37.130 --> 00:01:41.100
Well that's setting up that's find a nice background image.

24
00:01:41.300 --> 00:01:47.280
One place that I get you quite often to find background images is and splash dot com.

25
00:01:47.570 --> 00:01:53.930
It's one of the few sites that you can use to get royalty free photos for things like backgrounds and

26
00:01:53.930 --> 00:01:55.990
other parts of your apps.

27
00:01:56.420 --> 00:01:59.730
Now as it happens that first one looks pretty relevant.

28
00:02:01.740 --> 00:02:03.420
So I'm going to click download

29
00:02:10.080 --> 00:02:16.420
and there we go control click save image as all right click save as on Windows.

30
00:02:16.980 --> 00:02:19.020
And I'm just going to call it background

31
00:02:22.320 --> 00:02:26.260
that's likely that that image will be far bigger than you need so as before.

32
00:02:26.270 --> 00:02:37.310
I'm going to quickly open it up in Preview tools just size and I'm going to change it to

33
00:02:41.970 --> 00:02:49.960
a thousand pixels in width should be perfectly fine.

34
00:02:50.210 --> 00:02:52.570
And I'm actually going to crop it a little bit.

35
00:02:53.710 --> 00:02:56.720
For my phone screen as well.

36
00:02:57.060 --> 00:02:59.190
I can do that using command.

37
00:02:59.190 --> 00:02:59.860
OK.

38
00:03:00.070 --> 00:03:00.710
And there we go.

39
00:03:00.720 --> 00:03:02.560
That should make a nice background.

40
00:03:04.560 --> 00:03:05.740
Stay safe.

41
00:03:05.860 --> 00:03:10.570
Obviously when you're in windows you need to find a graphics tool to do something similar for you if

42
00:03:10.570 --> 00:03:13.680
you want to crop and resize images.

43
00:03:14.890 --> 00:03:15.310
OK.

44
00:03:15.310 --> 00:03:18.860
So we're ready to go here in studio.

45
00:03:19.100 --> 00:03:24.380
So I'm going to open up the project and gonna start by making the full screen.

46
00:03:24.380 --> 00:03:29.300
There are many different ways to do this so I hope you found one of them but I think the easiest is

47
00:03:29.300 --> 00:03:34.960
to change the app theme which you can do in Android manifest Daltex email.

48
00:03:35.360 --> 00:03:43.340
So just change the theme so keep the style there and then theme and you can see that compact that will

49
00:03:43.340 --> 00:03:47.720
keep it compatible and no action bar.

50
00:03:49.040 --> 00:03:56.540
So now if we run that up we should see that it's displayed full screen and then again you can see the

51
00:03:56.540 --> 00:04:00.630
hello world is without the action bar there at the top.

52
00:04:01.880 --> 00:04:02.310
Great.

53
00:04:02.330 --> 00:04:03.350
So we've got our full screen.

54
00:04:03.350 --> 00:04:06.470
Let's bring in our image.

55
00:04:06.680 --> 00:04:14.370
I'm going to go over to find the Windows Explorer if you're in Windows and then take my background pic

56
00:04:14.420 --> 00:04:18.530
file and paste it in.

57
00:04:18.590 --> 00:04:19.550
I just did.

58
00:04:19.710 --> 00:04:25.790
See Control-C on Windows and then select the drawable folder and then command and control the pace that

59
00:04:25.790 --> 00:04:32.210
it now will go over to our layout.

60
00:04:32.300 --> 00:04:34.740
I'm going to get rid of the hello world label.

61
00:04:37.420 --> 00:04:46.830
And I'm going to bring in an image of you which is now in images and media.

62
00:04:46.990 --> 00:04:57.460
Or you go and you can see that now and Android 2.2 were immediately given the option to add an image

63
00:04:57.460 --> 00:04:59.140
resource to our image view.

64
00:04:59.290 --> 00:05:02.110
So I'll do that without a background image.

65
00:05:03.130 --> 00:05:04.200
And there we go.

66
00:05:04.670 --> 00:05:09.450
I have a quick look at the different options for scale type that could work.

67
00:05:10.850 --> 00:05:12.130
I think that looks good.

68
00:05:12.310 --> 00:05:19.890
So I'm going to put the content of the app down on the left hand side in front of the troops.

69
00:05:20.050 --> 00:05:20.600
Great.

70
00:05:20.610 --> 00:05:25.090
And one thing you might notice is that the app is not cool or the image is not quite stretching to the

71
00:05:25.180 --> 00:05:26.980
edge of the app.

72
00:05:27.010 --> 00:05:31.880
That's because our relative layout has got some padding built in.

73
00:05:31.960 --> 00:05:40.660
So the click on relative layout view or properties and then change the padding for all of those to zero.

74
00:05:51.780 --> 00:05:58.920
I would get from that to take a look and make sure everything's laid out appropriately while that's

75
00:05:58.920 --> 00:06:08.260
running well in our first text view so we're going to need a few of these.

76
00:06:08.280 --> 00:06:19.740
The first one I'm going to have will be for my title so I'm going to change the text to hiker's watch

77
00:06:21.420 --> 00:06:22.050
and then

78
00:06:25.910 --> 00:06:29.530
I'm just going to change the style a little

79
00:06:35.030 --> 00:06:40.700
so I will look for the text size has a lot of options here.

80
00:06:43.520 --> 00:06:45.520
Around 14 Aspatria moments.

81
00:06:46.160 --> 00:06:48.710
Let's change that to 20 Espey

82
00:06:52.660 --> 00:06:53.560
or 24.

83
00:06:53.740 --> 00:06:54.490
And the drop down.

84
00:06:54.490 --> 00:06:55.840
Great.

85
00:06:55.840 --> 00:06:57.100
That looks good.

86
00:06:59.050 --> 00:07:04.630
Just drag it up slightly.

87
00:07:04.870 --> 00:07:05.980
Excellent.

88
00:07:05.990 --> 00:07:13.510
And now let's bring in some labels for our location information we'll start with latitude and Lagace

89
00:07:25.910 --> 00:07:28.320
this will be our latitude.

90
00:07:28.880 --> 00:07:30.110
And I'm just going to put some

91
00:07:34.740 --> 00:07:36.610
doubtful values in for the moment.

92
00:07:38.580 --> 00:07:42.480
We need to change the color so that it looks good for those trees.

93
00:07:49.000 --> 00:07:57.390
So I think I'll just go for plain white and we'll change the size as well.

94
00:07:59.860 --> 00:08:00.900
16 shit

95
00:08:03.730 --> 00:08:05.290
work great.

96
00:08:06.030 --> 00:08:10.330
OK now I'm going to jump over to the text here.

97
00:08:13.910 --> 00:08:21.600
And just show you how we can create a layout with the axonal rather than drag and drop.

98
00:08:21.610 --> 00:08:24.390
So first off I'm going to change the ID there to a lot

99
00:08:28.330 --> 00:08:29.000
text.

100
00:08:30.840 --> 00:08:32.900
And then I'm going to copy and paste

101
00:08:38.320 --> 00:08:39.400
all of that down.

102
00:08:39.400 --> 00:08:49.240
So now here we should be Polow Latics V will change the text too long it's you

103
00:08:53.330 --> 00:09:02.340
change the margin up to something like 12 TBS and we'll change the ID here to learn text for you.

104
00:09:04.110 --> 00:09:13.600
Then began I think maybe I'll reduce that slightly bring them a little bit closer together and then

105
00:09:13.620 --> 00:09:20.560
we'll leave the rest for the moment until we see what data we actually get back from the location object

106
00:09:20.640 --> 00:09:25.160
and then we'll add the extra text views in when we're ready.

107
00:09:25.860 --> 00:09:26.370
OK.

108
00:09:26.680 --> 00:09:32.470
So let's jump over to main activity and write our code for getting the users location.

109
00:09:32.500 --> 00:09:38.410
So hopefully you remember we start by creating our location manager

110
00:09:42.830 --> 00:09:44.540
which we'll call location manager.

111
00:09:47.620 --> 00:09:50.260
And then we create our location listener

112
00:09:58.180 --> 00:09:59.800
and we bring in Klaas's

113
00:10:03.580 --> 00:10:09.990
And then when the app is ready we'll set up our location manager.

114
00:10:11.480 --> 00:10:24.280
And can I cast this to a location manager type from this to get system service and then context dot

115
00:10:25.360 --> 00:10:36.230
location service is what we want and we set up our location listener which is going to be a new location.

116
00:10:36.240 --> 00:10:36.730
Listener

117
00:10:39.890 --> 00:10:45.120
and on location changed is what we want to do something with our location.

118
00:10:45.980 --> 00:10:51.850
And for now we'll just convert it to a string and put it in the logs

119
00:11:01.330 --> 00:11:11.680
OK then we need to set up a location listening by asking for permission so as we're hopefully now fairly

120
00:11:11.680 --> 00:11:13.330
comfortable with we look for

121
00:11:16.290 --> 00:11:21.730
a build version STK of less than 23.

122
00:11:21.960 --> 00:11:25.500
And if that's the case we set up our location manager

123
00:11:29.550 --> 00:11:36.910
to start requesting location updates using the GPS provider.

124
00:11:38.340 --> 00:11:40.200
And we'll stick with 0 0.

125
00:11:40.680 --> 00:11:51.090
So it will update with no minimum time or distance requirement from the previous update and location

126
00:11:51.090 --> 00:11:56.130
listener that we want to deal with the new location.

127
00:11:57.990 --> 00:12:03.090
If that's not the case we're running marshmallow or above then we need to ask for permission or more

128
00:12:03.090 --> 00:12:06.880
precisely we need to check whether or not we've got permission.

129
00:12:07.800 --> 00:12:09.750
And we do that using context

130
00:12:12.020 --> 00:12:13.100
compatibility.

131
00:12:13.160 --> 00:12:26.270
And then check self permission checking this activity and we're checking manifest permission get access

132
00:12:26.270 --> 00:12:35.150
fine location and we want to check to see if that's not equal to the package manager got permission

133
00:12:35.150 --> 00:12:36.760
granted.

134
00:12:38.030 --> 00:12:43.310
That actually reminds me to add the permission to the manifest

135
00:12:46.470 --> 00:12:49.000
Let's do that now to access file location

136
00:12:53.410 --> 00:12:58.540
Don't forget to do that.

137
00:12:58.780 --> 00:13:08.280
I k so if permission is not granted then we need to ask for permission and we do that using activity

138
00:13:09.420 --> 00:13:18.230
compatibility to request permissions and we want to request them for this activity.

139
00:13:18.720 --> 00:13:27.790
And we're going to create a new array of strings which would just contain a single string which is manifest

140
00:13:29.590 --> 00:13:35.490
got permission taught access fine location.

141
00:13:35.490 --> 00:13:42.680
And we also send our request code which would just keep as number one.

142
00:13:42.970 --> 00:13:54.240
And then finally for this section of code if this is not the case that means we have permission so we

143
00:13:54.240 --> 00:13:56.940
can start listening for location.

144
00:13:57.210 --> 00:14:05.090
And also while we're here we have permission on the app launch then we can do something with that location.

145
00:14:05.100 --> 00:14:10.430
Now we want to do quite a lot with the location even though we just initially putting it in the logs.

146
00:14:10.470 --> 00:14:13.470
So I think what I'm going to do is create a method

147
00:14:16.120 --> 00:14:16.540
called

148
00:14:19.430 --> 00:14:29.170
update location info and this will take a location variable which we'll call location.

149
00:14:29.800 --> 00:14:30.600
And for now

150
00:14:34.720 --> 00:14:36.250
it will just look that

151
00:14:42.180 --> 00:14:45.150
but of course later on we'll use that to update

152
00:14:47.840 --> 00:14:50.850
his watch page.

153
00:14:51.210 --> 00:14:55.450
And so we'll add that here but we need to get the last known location

154
00:15:00.470 --> 00:15:02.600
which we do using location manager

155
00:15:07.510 --> 00:15:10.890
to get last known location

156
00:15:13.520 --> 00:15:17.800
from the GPL provider.

157
00:15:18.500 --> 00:15:22.580
And then I think I'll do a quick check because there's always a possibility that there isn't a last

158
00:15:22.580 --> 00:15:24.680
known location.

159
00:15:25.130 --> 00:15:27.890
So if location is not now

160
00:15:33.880 --> 00:15:37.500
then we'll call the update location info method.

161
00:15:38.320 --> 00:15:42.700
OK so now we should get a hit to the Lokes when we first run the app.

162
00:15:42.700 --> 00:15:48.250
If we've already got permission if we haven't got permission then we need to be able to process when

163
00:15:48.250 --> 00:15:54.520
the user gives us permission and we do that of course with on request permissions result.

164
00:15:57.070 --> 00:16:00.590
There it is so as before.

165
00:16:00.610 --> 00:16:07.500
We'll check to see if Granth results length is greater than zero.

166
00:16:07.960 --> 00:16:19.250
And grond results zero is equal to package manager got permission granted.

167
00:16:19.290 --> 00:16:25.260
So if that's the case then we have permission but we still actually have to check that we have permission

168
00:16:25.950 --> 00:16:28.580
even though we know that we've been given permission.

169
00:16:28.800 --> 00:16:34.950
Our code won't compile unless we explicitly check for that permission.

170
00:16:34.950 --> 00:16:46.690
So again this manifest permission access fine location and this time we want to check that that's equal

171
00:16:46.700 --> 00:16:59.100
to a package manager got permission granted and if that's the case then we can start at location manager

172
00:17:04.190 --> 00:17:12.990
going and in fact it would probably be worth creating a method to do that.

173
00:17:18.630 --> 00:17:21.870
So I'll call it start listening.

174
00:17:21.870 --> 00:17:22.710
It doesn't need

175
00:17:26.220 --> 00:17:27.330
any variables.

176
00:17:27.400 --> 00:17:29.260
We can just put our check in there

177
00:17:35.520 --> 00:17:36.140
like that

178
00:17:41.810 --> 00:17:48.370
and then we can just refer to that each time that we need to OK.

179
00:17:48.790 --> 00:17:50.380
So let's now give it a try.

180
00:17:50.440 --> 00:17:55.240
We should of course now be asked for the user's location.

181
00:17:56.800 --> 00:18:03.360
And if we get it then it should appear in the logs every time it's updated.

182
00:18:06.470 --> 00:18:13.300
Here we go he says asking for permission will tap allow and then make a small update

183
00:18:16.800 --> 00:18:25.150
to the location send that 3 and for a quick look should appear in our logs

184
00:18:27.980 --> 00:18:29.390
and there it is.

185
00:18:29.390 --> 00:18:33.940
So we've got the GPS location then we've also got the accuracy.

186
00:18:34.160 --> 00:18:42.820
We've got the time which I'm not going to displace the user and the altitude as well.

187
00:18:42.820 --> 00:18:43.410
Great.

188
00:18:43.700 --> 00:18:56.210
So let's now add in other items to our user interface I'm going to do that by copying this text.

189
00:19:01.220 --> 00:19:13.180
So this is going to be accuracy text VI we're going to align it below the on that you text me.

190
00:19:13.200 --> 00:19:17.970
I'm going to give it a bit more of a margin just to space it out a little bit.

191
00:19:18.780 --> 00:19:19.980
So you get a little laugh or you

192
00:19:25.050 --> 00:19:25.710
and then

193
00:19:29.240 --> 00:19:31.020
I'll change that so you accuracy.

194
00:19:32.340 --> 00:19:33.990
And then similarly

195
00:19:36.700 --> 00:19:44.220
for altitude.

196
00:19:44.280 --> 00:19:53.880
So this will be out text VI and it will be bely accuracy text for you.

197
00:19:55.830 --> 00:19:58.520
And finally we'll anticipate what's coming next.

198
00:20:00.640 --> 00:20:02.430
Without a dress text for you.

199
00:20:09.220 --> 00:20:10.490
That's position that's right.

200
00:20:10.550 --> 00:20:24.250
So we wanted to be below the alt text view and we want to have an ID of address text VI and then we're

201
00:20:24.250 --> 00:20:29.740
going to have multiple lines and this address takes free well and if you manage to figure out how to

202
00:20:29.740 --> 00:20:32.140
do that we use backslash and

203
00:20:38.950 --> 00:20:40.710
to generate a new line

204
00:20:45.090 --> 00:20:45.790
that we get.

205
00:20:46.060 --> 00:20:48.120
So that will be for now.

206
00:20:48.730 --> 00:20:58.370
So I'm actually going to update these labels before we get the address data.

207
00:21:05.100 --> 00:21:07.620
Could really do it the other way around it doesn't matter too much.

208
00:21:11.310 --> 00:21:12.660
We're going to do that here.

209
00:21:15.440 --> 00:21:20.130
In the update location info.

210
00:21:20.160 --> 00:21:25.900
So let's again remind us what we get from our location object.

211
00:21:25.910 --> 00:21:30.940
We've got our location accuracy and altitude.

212
00:21:31.190 --> 00:21:38.160
So we're going to need to find our various text views.

213
00:21:38.200 --> 00:21:39.280
So let's start with

214
00:21:42.000 --> 00:21:43.160
last text we

215
00:21:46.950 --> 00:21:49.800
need to convert that to a text view.

216
00:21:50.590 --> 00:21:59.520
And we're going to get it from find a view by id resources ID's to our last text view.

217
00:22:02.680 --> 00:22:07.860
And while we're doing that we'll set up the rest.

218
00:22:07.870 --> 00:22:09.350
So we've got long text textfield

219
00:22:13.670 --> 00:22:16.640
we've got Altace text fi

220
00:22:21.950 --> 00:22:23.780
and we've got accuracy takes for you

221
00:22:31.120 --> 00:22:34.460
and then we just want to set each of those appropriately so that text the

222
00:22:40.400 --> 00:22:43.870
set text and we want this to be latitude

223
00:22:46.800 --> 00:22:52.760
and then we're going to take our location object and get latitude

224
00:22:57.420 --> 00:23:03.970
similarly text you set the text too long a cheat.

225
00:23:05.380 --> 00:23:15.790
So that's like Haitian dog get unachieved and we'll take out old text vs alt..

226
00:23:17.760 --> 00:23:19.290
And set the text to

227
00:23:24.740 --> 00:23:30.260
altitude and then location dot get altitude.

228
00:23:30.410 --> 00:23:32.060
And finally accuracy

229
00:23:34.730 --> 00:23:39.430
will set the text there to accuracy.

230
00:23:41.700 --> 00:23:50.610
And then not altitude but accuracy.

231
00:23:50.760 --> 00:23:51.640
All right.

232
00:23:52.080 --> 00:23:53.260
So let's try that out.

233
00:23:53.670 --> 00:23:55.390
And then if that works.

234
00:23:55.410 --> 00:24:02.610
All that remains is to add how users address.

235
00:24:02.640 --> 00:24:03.750
And here we go.

236
00:24:04.140 --> 00:24:09.810
You can see you've already got the latitude longitude accuracy and altitude in there just to make sure

237
00:24:09.810 --> 00:24:12.710
altitude is working if I change that to 12 meters here.

238
00:24:16.890 --> 00:24:19.620
And that updates nicely there as well.

239
00:24:19.640 --> 00:24:23.930
I'm going to leave the latitude and longitude with a slightly ridiculous number of decimal places you

240
00:24:24.020 --> 00:24:29.330
could quite easily round that if you want to just I've just as well that my hikers watch at the top

241
00:24:29.330 --> 00:24:31.510
is white.

242
00:24:31.590 --> 00:24:37.270
I was fairly sure I changed that but just in case whatever I did didn't work.

243
00:24:42.600 --> 00:24:43.630
Let's go back.

244
00:24:49.650 --> 00:24:50.790
And find the Technicolor

245
00:25:01.470 --> 00:25:02.100
regalis.

246
00:25:02.100 --> 00:25:12.970
Click on the three dots and then color and then we'll go for that dark almost black color.

247
00:25:13.770 --> 00:25:14.590
Excellent.

248
00:25:14.610 --> 00:25:15.500
So all looking good.

249
00:25:15.510 --> 00:25:17.160
All that remains is to get

250
00:25:20.320 --> 00:25:23.860
our address and we do that if a member.

251
00:25:23.870 --> 00:25:31.280
By creating a geocoder object so geocoder with a capital G.

252
00:25:32.700 --> 00:25:37.620
Call it geocoding and this is going to be a new

253
00:25:41.210 --> 00:25:53.560
geocoder using the application context and the default either uses locale.

254
00:25:53.790 --> 00:25:56.340
Then we're going to create our list of

255
00:26:02.600 --> 00:26:03.140
addresses

256
00:26:07.830 --> 00:26:09.330
which I'll call list addresses

257
00:26:12.480 --> 00:26:20.070
and we're going to take our geocoder and get the information from a location and that location is going

258
00:26:20.070 --> 00:26:26.490
to be location dot get latitude location dot

259
00:26:29.630 --> 00:26:30.550
that route.

260
00:26:30.650 --> 00:26:34.170
And we are interested in one result here.

261
00:26:35.240 --> 00:26:36.500
That of course could fail.

262
00:26:36.530 --> 00:26:39.560
So we are going to surround it with try and catch

263
00:26:43.540 --> 00:26:49.370
just like and find out before we update everything.

264
00:26:49.390 --> 00:26:52.060
I'm just going to add that to the logs.

265
00:26:52.630 --> 00:27:05.530
So did I place info and the list addresses to get.

266
00:27:06.340 --> 00:27:09.420
And we want the first item in the array.

267
00:27:09.480 --> 00:27:14.410
I'm going to convert that to a string.

268
00:27:14.540 --> 00:27:23.020
Strictly speaking I should first check to make sure that there is indeed an address for us.

269
00:27:23.170 --> 00:27:38.550
So if list addresses is not no and addresses dot size is greater than zero then we're right back to

270
00:27:38.550 --> 00:27:38.940
the logs

271
00:27:42.930 --> 00:27:44.830
as we go.

272
00:27:44.830 --> 00:27:46.840
All right so let's see that in action.

273
00:27:46.870 --> 00:27:54.890
We should now get some location data obviously not just for the user yet but in the logs.

274
00:27:55.420 --> 00:27:56.280
And there it is.

275
00:27:56.380 --> 00:27:59.940
So that is our address Hexton road Lily et cetera.

276
00:28:01.390 --> 00:28:02.530
Excellent.

277
00:28:02.560 --> 00:28:05.470
So now it's just a matter of doing more or less what we did in the challenge.

278
00:28:05.490 --> 00:28:12.550
At the end of the previous video and putting this into a nice friendly format for the user and I'm going

279
00:28:12.550 --> 00:28:21.850
to do that by creating a string called address and initially I'm going to call that

280
00:28:26.420 --> 00:28:28.310
could not find a address.

281
00:28:28.430 --> 00:28:33.500
So if it does fail then at least we get a nice error message rather than just nothing worse that it

282
00:28:33.500 --> 00:28:38.020
just leaves it as the old address.

283
00:28:38.070 --> 00:28:45.280
So now we need to do our fairly lengthy checking of each item in list address.

284
00:28:45.390 --> 00:28:52.560
So we'll get through this as quickly as possible so our list addresses get zero to get our address and

285
00:28:52.560 --> 00:28:55.430
we'll start with the sub thoroughfare.

286
00:28:57.010 --> 00:28:59.260
So if that is not know

287
00:29:03.460 --> 00:29:08.150
then will append to address that part of you

288
00:29:16.230 --> 00:29:17.040
go.

289
00:29:17.400 --> 00:29:25.390
And one thing I should do actually is set the address to an empty string once we know that we are successful.

290
00:29:27.930 --> 00:29:29.880
And we'll pop a space on the end there as well.

291
00:29:33.800 --> 00:29:39.090
Then we'll do the same thing for the AFAB.

292
00:29:39.630 --> 00:29:47.450
But this time we'll add a backslash and after the fab

293
00:29:50.940 --> 00:29:54.250
then we want the locality again with a backslash in

294
00:29:59.730 --> 00:30:09.050
and then we want the postal code you know ZIP code.

295
00:30:09.650 --> 00:30:13.720
And finally we'll have the country name

296
00:30:22.970 --> 00:30:23.510
great.

297
00:30:23.530 --> 00:30:28.500
So now we've got the address all ready to go.

298
00:30:29.120 --> 00:30:31.610
We need to update the text for you.

299
00:30:32.210 --> 00:30:38.180
So let's create a new text view gold address text for you.

300
00:30:41.370 --> 00:30:46.820
And we need to convert that to a text view and we'll find it.

301
00:30:49.080 --> 00:30:57.640
Using find view by id Jules's ID dot address text.

302
00:31:00.640 --> 00:31:11.030
And then we'll take our address text view and set the text to address noticed that we're doing that

303
00:31:11.870 --> 00:31:17.570
whether or not we were successful at getting the address.

304
00:31:17.620 --> 00:31:24.690
But if we're not successful for any reason then it will say could not find address.

305
00:31:24.770 --> 00:31:25.810
Let's take a look.

306
00:31:30.220 --> 00:31:31.440
Wonderful.

307
00:31:31.500 --> 00:31:36.070
You can see we've got an address now.

308
00:31:36.070 --> 00:31:40.630
One thing I have noticed there is that we could do with

309
00:31:45.560 --> 00:31:56.280
starting the address with address and also a small thing but let's remove fake street

310
00:32:00.380 --> 00:32:01.800
altered in the text field.

311
00:32:05.870 --> 00:32:08.840
And just leave that as is.

312
00:32:09.110 --> 00:32:09.970
OK.

313
00:32:10.430 --> 00:32:13.090
Quick final check then to see everything in action.

314
00:32:15.780 --> 00:32:18.520
Should all behave now exactly as we want.

315
00:32:18.710 --> 00:32:19.920
And there we go.

316
00:32:20.120 --> 00:32:21.130
Looks great.

317
00:32:21.530 --> 00:32:30.020
And if we update obviously anything here and we'll get our data updated.

318
00:32:33.390 --> 00:32:36.630
Immediately on the app.

319
00:32:36.810 --> 00:32:39.780
Fantastic So I hope you enjoyed that one in the next video.

320
00:32:39.780 --> 00:32:44.670
We're going to prepare for the final app of this section which is the biggest app that you've built

321
00:32:44.670 --> 00:32:45.660
so far.

322
00:32:45.780 --> 00:32:47.330
Apical memorable places.

323
00:32:47.670 --> 00:32:52.710
And that actually requires more than one activity so we're going to have multiple screens for the user

324
00:32:52.710 --> 00:32:53.800
to be working with.

325
00:32:54.000 --> 00:32:57.600
And that's what we're going to find out how to do in the next video.

326
00:32:57.880 --> 00:32:58.490
So there.
