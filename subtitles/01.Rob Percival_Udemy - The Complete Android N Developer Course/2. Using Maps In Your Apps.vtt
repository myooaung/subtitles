WEBVTT
1
00:00:00.480 --> 00:00:05.010
In this section we're going to be primarily looking at apps and user location.

2
00:00:05.010 --> 00:00:10.710
These are obviously two features that are immensely powerful with mobile apps and allow you to give

3
00:00:10.800 --> 00:00:14.480
information and services to your users specific to where they are.

4
00:00:14.530 --> 00:00:19.920
We're going to start by showing you how to include maps in your applications which is actually pretty

5
00:00:19.920 --> 00:00:20.960
straightforward.

6
00:00:21.450 --> 00:00:27.790
So I'm going to create a new project which will be a Google Maps demo.

7
00:00:28.050 --> 00:00:29.790
You might notice some slight differences here.

8
00:00:29.790 --> 00:00:32.620
I'm using Android studio 2.2 now.

9
00:00:32.880 --> 00:00:38.840
So if you're still on Vashion 2.1 I'd recommend upgrading over at the Android studio download page.

10
00:00:39.150 --> 00:00:41.550
Then when you're all up and running create your new project.

11
00:00:41.580 --> 00:00:46.750
Now some of the features that we're going to use here are specific to marshmallow devices and above

12
00:00:47.100 --> 00:00:55.620
so I would recommend selecting that API level to Android 6 and then click next and then select the Google

13
00:00:55.620 --> 00:00:57.300
Maps activity.

14
00:00:58.480 --> 00:01:05.470
This will create a Google Maps activity for us which will have most of the settings that we need up

15
00:01:05.470 --> 00:01:10.650
and running for US going into undersea 2.2 looks a little bit different to what we had before.

16
00:01:10.810 --> 00:01:12.280
It's a little bit cleaner I think.

17
00:01:12.550 --> 00:01:16.710
But the good news is the vast majority of what we use is in exactly the same place.

18
00:01:16.750 --> 00:01:18.190
So you should have no problems at all.

19
00:01:18.220 --> 00:01:21.670
Transitioning from 2.1 to 2.2.

20
00:01:21.670 --> 00:01:23.140
All right so here we go.

21
00:01:23.340 --> 00:01:24.670
So now we've got our project.

22
00:01:24.720 --> 00:01:31.860
And when we open a Google Maps activity we get given a Google Maps API or SML file which has instructions

23
00:01:31.860 --> 00:01:36.330
for creating a Google Maps API key.

24
00:01:36.600 --> 00:01:37.720
So it's fairly straightforward.

25
00:01:37.770 --> 00:01:48.430
Select that big long you are ill and then jump over to your browser and paste that in there you'll need

26
00:01:48.430 --> 00:01:50.090
a Google account to do that.

27
00:01:50.090 --> 00:01:52.780
So if you don't have one it will prompt you to sign up.

28
00:01:52.960 --> 00:01:57.430
So just put in your details and create a Google account and then when you're logged in you'll be given

29
00:01:57.430 --> 00:02:00.570
the option to create an API key.

30
00:02:00.940 --> 00:02:01.850
And here we go.

31
00:02:02.050 --> 00:02:07.600
So I'm going to create a new project so I leave that as the default and click continue.

32
00:02:08.020 --> 00:02:13.160
And this will then create the project for you and enable you to get your Google Maps API key.

33
00:02:13.420 --> 00:02:14.210
And there we go.

34
00:02:14.440 --> 00:02:19.290
That's been enabled so we now just need to get our key to click go to credentials.

35
00:02:19.780 --> 00:02:24.210
And then you'll get the option to create an android API key.

36
00:02:24.900 --> 00:02:28.090
So I put in a name whatever you like really are going to put Google Maps

37
00:02:31.600 --> 00:02:39.490
API key and if you want to you can restrict your IP to work for one specific app.

38
00:02:39.510 --> 00:02:42.270
This is a good idea if you're releasing that app on the App Store.

39
00:02:42.420 --> 00:02:47.480
But I'm actually going to get rid of it so that I can use this API key more generally.

40
00:02:49.860 --> 00:02:51.760
It's completely up to you which one you'd like today.

41
00:02:52.040 --> 00:02:55.810
So just click Create when you're done and then you'll get your API key.

42
00:02:56.940 --> 00:02:57.440
Super.

43
00:02:57.600 --> 00:03:02.520
So click copy and that will copy it to the clipboard and then will head back over to Android studio

44
00:03:02.880 --> 00:03:13.930
and we just need to paste that into it says your key here will delete that and pasted in it.

45
00:03:15.170 --> 00:03:17.780
So now we want to run an app.

46
00:03:17.900 --> 00:03:23.930
But if you remember the device that I created Android lollipop or API 22 is the SDK.

47
00:03:24.170 --> 00:03:29.480
So we're going to need to create a new virtual device running marshmallow.

48
00:03:29.690 --> 00:03:32.360
I'm going to try the next house for this one.

49
00:03:32.360 --> 00:03:44.020
Click next and then this time as you can see we've got the option to download a marshmallow release

50
00:03:45.450 --> 00:03:50.970
where the Google API is absolutely crucial that whichever one you pick is at least marshmallow and has

51
00:03:50.970 --> 00:03:53.620
Google API is included within it.

52
00:03:54.030 --> 00:03:56.210
So make sure you choose one of those.

53
00:03:56.340 --> 00:03:59.820
You can choose Android in Android nuggets release if you prefer.

54
00:03:59.820 --> 00:04:04.680
That's absolutely fine but do make sure you pick one with the Google API.

55
00:04:04.710 --> 00:04:06.660
Otherwise Google Maps will not work.

56
00:04:08.150 --> 00:04:10.640
Then you might need to wait a little while for that to download and install.

57
00:04:10.640 --> 00:04:14.930
If you haven't already installed that SDK and here we go.

58
00:04:14.930 --> 00:04:16.390
So that's now done.

59
00:04:17.020 --> 00:04:22.090
So I click Finish and we can now select that option.

60
00:04:23.480 --> 00:04:24.750
Click next.

61
00:04:24.800 --> 00:04:28.400
I'll leave all of those as the default and then finish

62
00:04:31.230 --> 00:04:37.510
that then creates the HVD Android virtual device and allow us to run a wrap on it.

63
00:04:37.510 --> 00:04:38.780
So just click OK.

64
00:04:39.310 --> 00:04:46.060
So if we want to use Instant run we need to install the Android 6 I think we do say let's install it.

65
00:04:47.220 --> 00:04:49.620
And continue while that's setting itself up.

66
00:04:50.720 --> 00:04:53.460
And then we get it that's now installed.

67
00:04:53.640 --> 00:04:55.140
So we're just waiting for

68
00:04:58.370 --> 00:05:02.840
the next for the actual device to run.

69
00:05:02.840 --> 00:05:03.900
And here we go.

70
00:05:04.160 --> 00:05:13.860
So here's a device running our Google Maps and we can do all the usual things scroll around.

71
00:05:13.860 --> 00:05:15.430
Click on this default markup.

72
00:05:15.510 --> 00:05:17.540
We'll see how that was created in a moment.

73
00:05:17.700 --> 00:05:26.490
And we can even zoom in and out on the Google map using command or control on Windows and shift together

74
00:05:27.060 --> 00:05:34.650
and then dragging imitate pinched does seem to zoom in and out

75
00:05:37.400 --> 00:05:37.990
excellent.

76
00:05:38.000 --> 00:05:41.110
So that's how you add a Google map to your app.

77
00:05:41.140 --> 00:05:45.300
Let's have a quick look and see what the code is actually doing here to make this happen.

78
00:05:46.360 --> 00:05:54.580
So first off we've got the Java within our maps activity so you can see this is fairly similar to what

79
00:05:54.580 --> 00:05:55.810
we're used to.

80
00:05:55.810 --> 00:06:00.400
We've got the usual package in importing the classes etc. cetera that you've got quite a few extra ones

81
00:06:00.400 --> 00:06:07.690
this time but this time we've got a map activity which is extending a Franklin activity which is implementing

82
00:06:07.960 --> 00:06:15.310
on map ready Colback so that fragment activity is just a generic activity type that allows us to create

83
00:06:15.310 --> 00:06:22.150
any sort of activity in this case maps 1 and the on map ready callback allows us to do something when

84
00:06:22.150 --> 00:06:28.870
the map is ready if we want to see maybe display a route on the map or zoom to that location.

85
00:06:28.870 --> 00:06:36.650
So then we've got a variable of type Google map called Map which we can use to refer to the map itself.

86
00:06:36.850 --> 00:06:40.260
And you can see we've got a couple of lines of set up code here.

87
00:06:41.510 --> 00:06:49.520
Which really just creates a map fragment which finds the map itself on the layout which will look at

88
00:06:49.520 --> 00:06:58.280
in a moment and then they met fragments gets the map and that async that is short for asynchronous which

89
00:06:58.280 --> 00:07:02.720
means that it will get the map essentially in the background and we can run other code while it's getting

90
00:07:02.720 --> 00:07:04.330
the map if we want to.

91
00:07:04.940 --> 00:07:07.630
So that creates the map for us.

92
00:07:07.970 --> 00:07:15.850
Now this is the code that decides where the map is centered so you can see this is called on that map

93
00:07:15.880 --> 00:07:16.650
ready.

94
00:07:16.660 --> 00:07:21.650
So when the map is right it's essentially a callback function which is called When the map is ready.

95
00:07:22.620 --> 00:07:26.160
And then we're creating a new pair of coordinates.

96
00:07:26.160 --> 00:07:32.640
Essentially a lot less than a latitude and longitude of minus 34 and 1 5 1 which I believe is the location

97
00:07:32.670 --> 00:07:40.590
of Sydney and then we're adding a marker on the map at that position with a certain title marker in

98
00:07:40.590 --> 00:07:48.180
Sydney and then we're moving the camera i.e. the view of the map to that location.

99
00:07:48.180 --> 00:07:54.680
So that's what took us to create this marker and centering it in the map screen.

100
00:07:54.810 --> 00:07:57.570
So that's all the code that we need to actually run our app.

101
00:07:57.570 --> 00:08:03.950
Let's have a quick look at the maps activity SML file.

102
00:08:03.990 --> 00:08:06.290
There's not a great deal to look at.

103
00:08:06.360 --> 00:08:10.580
We've got our map and then we've got a fragment.

104
00:08:10.810 --> 00:08:17.440
This by the way might be the first view that you've seen of the new preview for maps.

105
00:08:17.450 --> 00:08:24.110
It's very similar to what we had before except we've got the componentry at the bottom left and properties

106
00:08:24.260 --> 00:08:25.460
on the right there.

107
00:08:25.590 --> 00:08:33.820
We've still got all which is that we're used to layouts and we can also switch to the text view whenever

108
00:08:33.820 --> 00:08:42.750
we need so you can say all we've got here is a simple fragment which has a width and height of it's

109
00:08:42.750 --> 00:08:45.740
parents and contains a Google map.

110
00:08:46.050 --> 00:08:47.620
That's as far as we're going to go in this area.

111
00:08:47.650 --> 00:08:49.890
And then video will see how to customize our maps.

112
00:08:50.100 --> 00:08:57.270
So to use specific locations and zoom levels to start with and adding and customizing markers as well.

113
00:08:57.420 --> 00:08:59.320
We'll do that in the next video.
