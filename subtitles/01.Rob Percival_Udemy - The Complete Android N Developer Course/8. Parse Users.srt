1
00:00:00,600 --> 00:00:05,150
Pass server users are one of the best features of Passover.

2
00:00:05,160 --> 00:00:08,550
They allow us to very simply sign up and log in users.

3
00:00:08,550 --> 00:00:17,530
And then those users remain signed up and logged in as long as they're using the app so lets see how

4
00:00:17,530 --> 00:00:21,230
to create a user and sign them up.

5
00:00:24,810 --> 00:00:28,320
We create a user in the way that you might expect.

6
00:00:28,490 --> 00:00:37,590
So we use passive user and I'll call that she's a user and this is going to be a new parse user

7
00:00:40,790 --> 00:00:43,760
and then we just set the two required variables.

8
00:00:43,760 --> 00:00:47,690
That is the username and password.

9
00:00:48,240 --> 00:00:53,280
So you can see we can also have an e-mail as well if we want.

10
00:00:54,060 --> 00:01:03,440
But for now I'll just have a username and password so I'll use Rob Percival as my username and I'll

11
00:01:03,450 --> 00:01:15,720
set my password as the highly secure my pass and then to sign the user up which use user sign up in

12
00:01:15,720 --> 00:01:17,770
background.

13
00:01:18,600 --> 00:01:20,720
And always good to have a call back.

14
00:01:21,360 --> 00:01:30,300
So this is going to be a new Sign-Up callback hopefully you get any idea now how these callbacks work.

15
00:01:30,940 --> 00:01:33,880
So if he is no

16
00:01:36,880 --> 00:01:37,920
then let's just log

17
00:01:41,910 --> 00:01:51,450
sign up successful else log.

18
00:01:52,220 --> 00:01:57,900
Sign up failed.

19
00:01:58,200 --> 00:01:59,710
Simple as that.

20
00:02:00,570 --> 00:02:03,460
Let's take a look and see if it works.

21
00:02:04,050 --> 00:02:05,080
Well that's compiling.

22
00:02:05,080 --> 00:02:12,570
There's one thing I'd like to show you over in the standard application you may have noticed we've got

23
00:02:12,570 --> 00:02:16,030
an option here could pantsula enable automatic user.

24
00:02:16,400 --> 00:02:23,620
And that's what creates these users here that are automatically created.

25
00:02:23,960 --> 00:02:26,220
So in some apps you might not want to do that.

26
00:02:26,430 --> 00:02:33,210
If you want to control the sign up and the log in yourself then you just comment out that line.

27
00:02:33,750 --> 00:02:38,090
And I'll actually use that setting for this app because we don't need automatic users.

28
00:02:38,190 --> 00:02:41,840
We're going to be logging in and signing up our users ourselves.

29
00:02:43,670 --> 00:02:45,290
OK let's give it a look.

30
00:02:48,130 --> 00:02:48,480
All right.

31
00:02:48,490 --> 00:02:51,650
So sun up a successful looking promising.

32
00:02:52,120 --> 00:02:58,150
So let's refresh our user list and you can see what it's done is taken the automatic use of that was

33
00:02:58,150 --> 00:03:02,860
already created and added a username and password to it.

34
00:03:03,340 --> 00:03:06,330
So signing uses up is as simple as that.

35
00:03:07,420 --> 00:03:10,440
What if we want to log them in.

36
00:03:10,450 --> 00:03:12,130
That's also pretty straightforward.

37
00:03:15,260 --> 00:03:17,750
So let's just comment out how sign up code

38
00:03:21,720 --> 00:03:23,170
so to log users in.

39
00:03:23,380 --> 00:03:30,680
We just use Pownce user dot log in in the background.

40
00:03:32,050 --> 00:03:34,320
And then we give the user name.

41
00:03:34,390 --> 00:03:41,110
So Rob Percival the password and this time I'm going to deliberately get the password wrong.

42
00:03:44,850 --> 00:03:46,150
Just to see what happens.

43
00:03:46,530 --> 00:03:50,780
And then we'll have a new logon callback

44
00:03:55,080 --> 00:04:03,340
and this time I'm going to check for the existence of the User variable.

45
00:04:03,340 --> 00:04:08,500
So if user is not know then I'll log

46
00:04:14,590 --> 00:04:19,550
Logan is successful but if it is no

47
00:04:24,570 --> 00:04:24,990
then

48
00:04:28,510 --> 00:04:37,930
we'll log in failed and then we'll use the string to see what's gone wrong.

49
00:04:41,840 --> 00:04:42,500
OK.

50
00:04:42,870 --> 00:04:45,030
So let's take a look.

51
00:04:45,450 --> 00:04:52,660
We should find that we get an error related to our incorrect password here.

52
00:04:53,730 --> 00:04:55,190
OK let's take a look.

53
00:04:57,700 --> 00:04:58,470
And there we go.

54
00:04:58,480 --> 00:05:04,530
You can see we've got luggin failed and then invalid username password.

55
00:05:05,260 --> 00:05:06,030
Excellent.

56
00:05:06,430 --> 00:05:09,000
So we're pretty much there with what we need to do.

57
00:05:10,610 --> 00:05:12,890
Just a couple more things I'd like to show you.

58
00:05:12,890 --> 00:05:20,120
The first is how we test to see if a user is logged in when the app opens up.

59
00:05:20,120 --> 00:05:22,470
And that again is very easy.

60
00:05:22,780 --> 00:05:30,700
If past user don't get current user.

61
00:05:31,040 --> 00:05:32,370
So if that is not know

62
00:05:35,270 --> 00:05:37,110
then that means the user is logged in.

63
00:05:41,920 --> 00:05:42,640
So let's log

64
00:05:46,970 --> 00:05:48,140
user logged in.

65
00:05:48,320 --> 00:06:07,860
And we can even get a user name using Parsees or to get current user dot get user name that if that's

66
00:06:07,860 --> 00:06:11,040
not the case we'll just log

67
00:06:14,670 --> 00:06:23,810
current user use are not logged in.

68
00:06:23,960 --> 00:06:25,220
Right so that's have a quick look.

69
00:06:25,250 --> 00:06:30,480
We should of course be logged in from when we signed up earlier on as repairs.

70
00:06:30,560 --> 00:06:32,230
So let's find out.

71
00:06:32,660 --> 00:06:33,750
And there we go.

72
00:06:33,980 --> 00:06:36,200
So user logged in Rob Percival.

73
00:06:36,530 --> 00:06:37,700
Excellent.

74
00:06:38,480 --> 00:06:44,090
And finally the last thing I'm going to show you is how to log out the user if the user chooses to lock

75
00:06:44,090 --> 00:06:45,220
themselves out.

76
00:06:45,410 --> 00:06:53,150
And we do that using past user don't log out.

77
00:06:53,630 --> 00:06:56,260
Simple as that.

78
00:06:56,270 --> 00:07:02,650
So now if we run that then we should get user not logged in.

79
00:07:03,880 --> 00:07:05,070
And there we go.

80
00:07:05,620 --> 00:07:08,210
So the user is now locked down.

81
00:07:08,830 --> 00:07:14,850
So that's how easy it is to sign up log in and log out users using pass.

82
00:07:15,130 --> 00:07:19,000
And if you are creating your own system to do this it will take a huge amount of time.

83
00:07:19,000 --> 00:07:22,970
So part is doing a lot of the heavy lifting for us here.

84
00:07:23,000 --> 00:07:27,940
We're now finally in a position to start building our Instagram app and we're going to start with the

85
00:07:28,000 --> 00:07:31,070
log in and sign up part in the next video.
