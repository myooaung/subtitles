WEBVTT
1
00:00:00.600 --> 00:00:05.650
Now that you're an expert in time as we're going to use this countdown timer to make a pretty fun egg

2
00:00:05.670 --> 00:00:08.520
time app I'm going to show you in action here.

3
00:00:08.790 --> 00:00:09.480
So it looks like this.

4
00:00:09.480 --> 00:00:13.040
We've got our egg and we've got our slider at the top.

5
00:00:13.200 --> 00:00:18.530
And with the slide out we can then control the time on the countdown timer.

6
00:00:19.720 --> 00:00:24.500
Then we can tap go and it will start counting down.

7
00:00:24.520 --> 00:00:27.830
You notice that the slider is disable that.

8
00:00:28.210 --> 00:00:35.070
And then when we stop in the middle of the time it resets back to 30 seconds and re-enabled the slider.

9
00:00:35.560 --> 00:00:40.220
And then let's just see what happens when it finishes.

10
00:00:40.220 --> 00:00:41.590
So the last bit of Countdown.

11
00:00:41.590 --> 00:00:42.490
And then we get

12
00:00:45.020 --> 00:00:48.960
rather impressive airhole noise when it gets to zero.

13
00:00:49.220 --> 00:00:50.880
So should be a lot of fun.

14
00:00:50.990 --> 00:00:56.270
Just before I set you off if you don't want to go online and search for the images and sound that I've

15
00:00:56.270 --> 00:00:58.360
used then I'll just show you where they are.

16
00:00:58.580 --> 00:01:04.880
So I'm using clip at panda dot com slash categories slash chicken egg clip art and there's the egg image

17
00:01:04.880 --> 00:01:06.410
that I used.

18
00:01:06.410 --> 00:01:14.300
I just found that using a search on google images and the sound is an air horn sound which is sound

19
00:01:14.300 --> 00:01:21.740
Bible dot com slash 1 540 dash dash horn to reach TNL or you can find any other sounds that you like

20
00:01:22.040 --> 00:01:24.050
on sound Bible dot com.

21
00:01:24.050 --> 00:01:24.340
All right.

22
00:01:24.350 --> 00:01:26.720
So time now for you to give that a go.

23
00:01:26.720 --> 00:01:28.140
Best of luck.

24
00:01:36.410 --> 00:01:37.100
All right.

25
00:01:37.100 --> 00:01:38.370
Hope you enjoyed that one.

26
00:01:38.780 --> 00:01:41.870
I'm going to start Of course by creating a new project

27
00:01:46.530 --> 00:01:53.320
called an egg timer and all the defaults that we're used to.

28
00:01:53.540 --> 00:02:00.880
So I'm going to begin by downloading the sound and image.

29
00:02:01.010 --> 00:02:03.500
So there's my egg it's going to click.

30
00:02:03.520 --> 00:02:07.170
Download them and there it is.

31
00:02:07.260 --> 00:02:09.950
Just to make sure it's in the same place.

32
00:02:12.970 --> 00:02:20.970
I'm just going to export it to the desktop and call it egg.

33
00:02:21.270 --> 00:02:21.860
There we go.

34
00:02:22.050 --> 00:02:24.460
And then same with the iPhone.

35
00:02:26.040 --> 00:02:27.810
I'm going to download it as an MP 3

36
00:02:30.550 --> 00:02:35.030
and I'll call it a horn.

37
00:02:35.040 --> 00:02:36.180
All right.

38
00:02:36.180 --> 00:02:38.100
Now I've got everything that I need.

39
00:02:38.340 --> 00:02:41.920
Back over to Android studio and let's import both of those

40
00:02:45.120 --> 00:02:47.780
to our roll file folder.

41
00:02:47.800 --> 00:02:48.070
Sorry

42
00:02:56.020 --> 00:02:56.810
there it is.

43
00:02:56.940 --> 00:03:02.280
And then I just right click the control clicked and reveal in find up

44
00:03:06.770 --> 00:03:08.020
and then I'm going to drag

45
00:03:11.080 --> 00:03:13.510
two new items right in there.

46
00:03:21.410 --> 00:03:24.940
I get and they've been picked up.

47
00:03:24.960 --> 00:03:31.210
Remember you can use synchronized roll if you need to if they know that lovely.

48
00:03:31.560 --> 00:03:40.920
So let's get rid of hello world and start by bringing in our Salita or seek Bob

49
00:03:45.790 --> 00:03:56.550
so I'll put it right at the top and change the width to fill parent excellent and then just double click

50
00:03:56.550 --> 00:03:59.040
and change the ID to

51
00:04:01.990 --> 00:04:06.900
time a Sipah.

52
00:04:06.970 --> 00:04:12.680
All right now I'm going to bring in an image for you.

53
00:04:12.690 --> 00:04:13.730
Where are we.

54
00:04:13.870 --> 00:04:14.940
Image V.

55
00:04:17.240 --> 00:04:25.900
Just underneath my time a and I'm going t fill parent

56
00:04:28.720 --> 00:04:35.590
for both width and height and then I'm going to change the South-Sea

57
00:04:38.830 --> 00:04:44.090
and click on the dots and find my results.

58
00:04:44.140 --> 00:04:49.940
Then I realize that I've actually put it in the wrong place and of course it should get inside drawable.

59
00:04:50.730 --> 00:04:53.190
So I'm just going to drag that over if I can.

60
00:04:53.290 --> 00:05:01.090
It's not looking like it wants to do that so let's just open it up and find her again and then copy

61
00:05:01.090 --> 00:05:06.610
it from rural and paste it into the horrible

62
00:05:10.370 --> 00:05:14.840
way and then synchronize drawable.

63
00:05:14.850 --> 00:05:15.540
There it is.

64
00:05:15.540 --> 00:05:22.310
So now I've got my Hagg right that like

65
00:05:26.170 --> 00:05:29.420
next I just need my text fee for my time.

66
00:05:31.460 --> 00:05:33.370
So I'm going to drag that in.

67
00:05:33.630 --> 00:05:39.060
And yet I want to pretty much Center it but down slightly from there I think

68
00:05:41.910 --> 00:05:50.460
will play around a little bit with this till we get it right and then let's just change the text initially

69
00:05:50.460 --> 00:05:51.000
to be

70
00:05:55.580 --> 00:06:01.550
say we have zero minutes and 30 seconds will probably be a reasonable initial

71
00:06:04.210 --> 00:06:11.910
time and then text size let's just experiment a little bit and we'll try something like 30 espie

72
00:06:16.870 --> 00:06:17.410
Yep.

73
00:06:17.840 --> 00:06:22.850
Little small for 50 maybe even bigger than that.

74
00:06:26.600 --> 00:06:27.410
Seventy ISP

75
00:06:30.690 --> 00:06:33.220
and I'm happy with the positioning of that as well.

76
00:06:33.270 --> 00:06:35.800
You can of course play around with that more if you like.

77
00:06:36.570 --> 00:06:36.900
But

78
00:06:39.780 --> 00:06:47.100
most importantly let's change the ID to time to text a few.

79
00:06:47.400 --> 00:06:50.450
And then finally we need our button.

80
00:06:51.480 --> 00:06:56.520
So let's just drag that in.

81
00:06:56.560 --> 00:06:58.340
Damn that lovely.

82
00:06:59.350 --> 00:07:03.280
And initially that's going to say Go

83
00:07:06.370 --> 00:07:14.370
and call it the controller button because it's not necessarily going to be a start button all the time.

84
00:07:14.530 --> 00:07:18.940
It's going to change around depending on the context of the app.

85
00:07:18.940 --> 00:07:24.650
All right let's start by setting up the code for our sick bar.

86
00:07:25.740 --> 00:07:33.310
So I don't create method that's first of all find it so seek by

87
00:07:36.780 --> 00:07:53.160
times seek Paul is equal to cast it as a seek by and then get it by finding view by ID is ID Dot time.

88
00:07:53.950 --> 00:07:54.260
But

89
00:07:57.420 --> 00:08:06.160
then we'll set the maximum and you can set this whatever you like really.

90
00:08:06.180 --> 00:08:08.830
I think 10 minutes is probably reasonable for an egg timer.

91
00:08:09.030 --> 00:08:17.670
So I'm going to set it as 10 minutes which in seconds is going to be 10 times 60 or 600

92
00:08:20.680 --> 00:08:30.190
then I'm going to set the current progress which remember is 30 seconds.

93
00:08:31.070 --> 00:08:33.990
So that should set us up for our initial set up.

94
00:08:34.160 --> 00:08:42.650
Then initially all we want is for when the slide is dragged up and down for this label to update.

95
00:08:42.650 --> 00:08:48.570
So let's set that up before we do a test run.

96
00:08:48.650 --> 00:09:01.420
So we want time a bar and then set on Seek bar change listener and then we want a new seek part on Seek

97
00:09:01.430 --> 00:09:09.170
bar change listener and lovely we get our default code for us as before we're not interested in on start

98
00:09:09.170 --> 00:09:11.250
tracking touch on stock tracking touch.

99
00:09:11.390 --> 00:09:15.430
We can do everything when the progress is changed.

100
00:09:15.500 --> 00:09:24.170
So our first challenge is converting from seconds to minutes and seconds and that's reason straightforward.

101
00:09:24.530 --> 00:09:34.270
We can create an integer called minutes which is going to be the number of seconds in total.

102
00:09:34.640 --> 00:09:42.470
Divided by 60 and that of course is not necessarily going to be a whole number but if we cast it to

103
00:09:42.800 --> 00:09:47.170
an integer like that then it will round down.

104
00:09:47.480 --> 00:09:51.940
So what this will do is take the number of seconds divided by 60 and around down.

105
00:09:52.070 --> 00:09:55.270
And that's exactly what we want with the number of minutes.

106
00:09:55.850 --> 00:09:57.900
So that will give us the number of whole minutes.

107
00:09:58.050 --> 00:10:03.210
Then we want the number of seconds kind of left over after those minutes.

108
00:10:03.440 --> 00:10:13.580
So we'll get that from seconds and this time we want to take the total number of seconds and subtract

109
00:10:13.580 --> 00:10:21.220
from that the number of minutes multiplied by 60.

110
00:10:21.290 --> 00:10:25.550
So you might want to just post the video and look at that for a few moments if you're not quite sure

111
00:10:25.550 --> 00:10:26.460
why that will work.

112
00:10:26.630 --> 00:10:31.920
But just to clarify what we've done in the second line there we've taken the total number of seconds.

113
00:10:31.970 --> 00:10:37.850
So that includes all the minutes and we've subtracted from that the number of seconds already included

114
00:10:38.150 --> 00:10:39.220
in the minutes here.

115
00:10:39.470 --> 00:10:41.860
And that gives us the number of seconds left over.

116
00:10:42.350 --> 00:10:47.520
So this now gives us the number of minutes and the number of seconds in our progress here.

117
00:10:49.230 --> 00:10:56.710
Then we just want to update the timer on the app which is here and you may remember our call that time

118
00:10:56.890 --> 00:10:58.800
text view.

119
00:10:59.860 --> 00:11:03.820
So let's first of all get it here.

120
00:11:04.520 --> 00:11:16.450
So it's I text fee called timer text view we want to cast it to a text fee and get it using find view

121
00:11:16.450 --> 00:11:22.980
by id dot ID time a text view.

122
00:11:25.830 --> 00:11:26.720
There we go.

123
00:11:27.310 --> 00:11:29.390
And now we just want to update it here.

124
00:11:29.810 --> 00:11:31.590
It's a time of text FYI.

125
00:11:31.770 --> 00:11:34.940
Set text

126
00:11:37.910 --> 00:11:45.320
and we're going to use the colon in the middle and then we want to take our minutes and seconds and

127
00:11:45.320 --> 00:11:47.690
convert them to a string.

128
00:11:47.750 --> 00:11:49.250
So we'll do that using integer

129
00:11:51.860 --> 00:11:56.140
dot to string minutes

130
00:11:59.110 --> 00:12:03.400
plus the colon plus integer

131
00:12:06.460 --> 00:12:10.220
8 to string seconds.

132
00:12:12.930 --> 00:12:14.020
There we go.

133
00:12:14.640 --> 00:12:16.260
So that was relatively straightforward.

134
00:12:16.260 --> 00:12:21.870
I hope we can now slide all the way up to 600 seconds or 10 minutes and

135
00:12:24.700 --> 00:12:31.630
that will then update the time a text view to show the correct number of minutes and seconds that the

136
00:12:31.630 --> 00:12:36.420
user has selected Let's take a look.

137
00:12:36.450 --> 00:12:38.400
I really like how appliques.

138
00:12:38.400 --> 00:12:41.100
Now let's go look at them.

139
00:12:41.130 --> 00:12:42.910
Fantastic.

140
00:12:43.320 --> 00:12:45.850
All the way up to 10 minutes.

141
00:12:46.140 --> 00:12:49.180
Now we've got a slight quirk that you can see that.

142
00:12:49.370 --> 00:12:55.610
That of course if the number of minutes or seconds is zero then we only get a single digit there.

143
00:12:55.740 --> 00:12:59.820
Whereas really you'd expect to see 0 0 because this is a timer.

144
00:13:00.050 --> 00:13:02.090
Now I'm quite happy with that over here.

145
00:13:02.090 --> 00:13:07.110
With the number of minutes but I'm not happy with that here with the number of seconds.

146
00:13:07.110 --> 00:13:09.350
So I'm going to add a little bit of code.

147
00:13:09.360 --> 00:13:11.580
So we've got two zeros there.

148
00:13:11.580 --> 00:13:16.440
Even though there's only one in our calculation.

149
00:13:17.160 --> 00:13:22.110
And as always there's a number of ways that we could do that but I'm going to create a string called

150
00:13:22.980 --> 00:13:27.900
second string which initially I'm going to set to

151
00:13:32.300 --> 00:13:39.890
the value of seconds but obviously converted to a string and then I'm just going to do a check to see

152
00:13:39.890 --> 00:13:46.580
if second string is equal to zero.

153
00:13:48.260 --> 00:14:02.040
And if it is we'll set second string to 0 0 or Ahmed of course will display second string here on the

154
00:14:02.040 --> 00:14:05.170
label.

155
00:14:05.310 --> 00:14:09.950
So just to check that you could of course have checked the integer stage.

156
00:14:10.150 --> 00:14:11.610
Doesn't really matter.

157
00:14:13.760 --> 00:14:20.270
Let's just make sure we should now find that our timer displays nicely then we get to zero.

158
00:14:20.270 --> 00:14:25.190
Either way you can do that for minutes as well if you like but I actually quite like the single zero

159
00:14:25.260 --> 00:14:29.600
there but it does make me think that I should change my initial value.

160
00:14:31.790 --> 00:14:44.910
From 0 0 30 to just 0 30 otherwise it'll be out of whack with the rest of the time it's all right.

161
00:14:44.910 --> 00:14:53.310
Now it's time to bring in our go button which remember we called control button.

162
00:14:53.340 --> 00:14:57.340
Now I'm going to start by adding an on click.

163
00:14:57.570 --> 00:15:01.320
I don't want to call this start time or anything like that because it's going to change.

164
00:15:01.320 --> 00:15:05.210
So I'm just going to call it control time.

165
00:15:08.700 --> 00:15:09.120
Like that

166
00:15:13.220 --> 00:15:13.860
every time.

167
00:15:14.080 --> 00:15:17.340
So now let's jump back here.

168
00:15:19.900 --> 00:15:23.920
And create our control time method.

169
00:15:23.930 --> 00:15:24.820
Do that with public

170
00:15:27.550 --> 00:15:29.980
FOID actually just forgotten what I call it.

171
00:15:29.980 --> 00:15:30.930
Control time

172
00:15:34.820 --> 00:15:47.100
and that will be called by Ivey which will call if you that's opinion and I says every case for that.

173
00:15:47.170 --> 00:15:49.240
Now I always do like to do a quick log

174
00:15:58.790 --> 00:16:04.060
whenever I introduce the button just to make sure that it's working

175
00:16:10.880 --> 00:16:14.650
before we write any of our complicated carried.

176
00:16:14.660 --> 00:16:16.420
So let's take a look.

177
00:16:18.780 --> 00:16:19.510
Button pressed

178
00:16:24.150 --> 00:16:30.450
So initially what we want to do is start the timer so let's write our code to do that first.

179
00:16:30.520 --> 00:16:31.750
So we'll create a new

180
00:16:35.080 --> 00:16:38.360
count down timer.

181
00:16:38.370 --> 00:16:45.270
Now we definitely want to count down every second.

182
00:16:45.780 --> 00:16:51.310
But it's not obvious how many milliseconds we're going to want how are we going to get that.

183
00:16:51.540 --> 00:16:57.400
Well we can get it from the CGC bar value because remember the CGC bar is the total number of seconds.

184
00:16:57.810 --> 00:17:03.960
So if we're going to get it from the Secret Valley we need this equal value to be defined outside the

185
00:17:03.960 --> 00:17:05.070
uncreate method.

186
00:17:05.220 --> 00:17:07.640
So we can access it from anywhere.

187
00:17:08.280 --> 00:17:10.140
So let's to find that that.

188
00:17:10.260 --> 00:17:14.230
And then we don't want to define it twice.

189
00:17:16.800 --> 00:17:17.500
There we go.

190
00:17:17.650 --> 00:17:18.910
So now we can use

191
00:17:22.110 --> 00:17:24.570
time a Seek get

192
00:17:27.110 --> 00:17:28.100
progress.

193
00:17:28.460 --> 00:17:30.340
And that of course is the number of seconds.

194
00:17:30.380 --> 00:17:38.220
So we want to multiply that by a thousand to get the number of seconds

195
00:17:41.370 --> 00:17:42.040
OK.

196
00:17:42.480 --> 00:17:51.240
Now we can actually tap on Countdown time and then use the light bulb there to implement the methods

197
00:17:51.240 --> 00:17:52.080
that we need.

198
00:17:52.150 --> 00:17:58.740
So on tick and on finish and then that will put the code in that we typed out manually last time.

199
00:17:58.770 --> 00:18:01.240
That's a handy shortcut.

200
00:18:01.290 --> 00:18:07.630
So on each tick we need to update the value of the time.

201
00:18:07.860 --> 00:18:12.680
So we've already got some code to do that and that's this code here.

202
00:18:12.870 --> 00:18:22.630
Again I don't want to have code in my app twice unnecessarily so I'm going to cut that and put it into

203
00:18:22.630 --> 00:18:34.030
a separate method that I can call twice so I just call it public FOID and then update timer.

204
00:18:34.560 --> 00:18:35.990
And that's going to need an integer

205
00:18:39.530 --> 00:18:42.750
which will be seconds left

206
00:18:49.090 --> 00:18:49.710
and we get.

207
00:18:49.890 --> 00:18:57.720
And then we'll Papau code in and of course now instead of progress we're going to be working with seconds

208
00:18:57.720 --> 00:19:00.520
left.

209
00:19:00.610 --> 00:19:01.840
And similarly here

210
00:19:04.910 --> 00:19:07.130
and we need to access time a text.

211
00:19:09.890 --> 00:19:11.670
So let's define it.

212
00:19:16.770 --> 00:19:21.430
Outside of all of our methods.

213
00:19:22.100 --> 00:19:25.350
So that should now update the timer whenever we call it.

214
00:19:25.350 --> 00:19:29.570
So let's start by just popping it back in here.

215
00:19:32.160 --> 00:19:41.490
Update timer and then we're going to parse it a number of seconds left which is just progress.

216
00:19:41.590 --> 00:19:42.400
And then here

217
00:19:45.610 --> 00:19:46.030
the

218
00:19:49.290 --> 00:19:53.330
need is to update the timer again.

219
00:19:53.340 --> 00:19:54.810
Now we get into an integer.

220
00:19:54.810 --> 00:20:04.560
This is a long so we're going to cast it as an integer and we want millies until finished divided by

221
00:20:06.230 --> 00:20:08.340
a thousand.

222
00:20:08.340 --> 00:20:09.570
So that's the number of milliseconds.

223
00:20:09.570 --> 00:20:14.970
Divide by a thousand to get the number of seconds and costs that to an integer to allow that value to

224
00:20:14.970 --> 00:20:19.830
be placed into the update time code.

225
00:20:19.830 --> 00:20:24.690
Now we've got a small issue up here that when I copied that code up it had the key word final in it

226
00:20:24.720 --> 00:20:27.460
which we haven't actually talked about before.

227
00:20:27.690 --> 00:20:31.480
Final is the way that we create a variable that cannot be changed.

228
00:20:31.730 --> 00:20:35.040
So Andrew Studia actually put that in for me here.

229
00:20:35.250 --> 00:20:41.340
When we created our text view because once we found a view by its ID we can't change that.

230
00:20:41.340 --> 00:20:43.580
We can't change which view that refers to.

231
00:20:43.860 --> 00:20:51.700
But here of course we haven't actually defined what the time a text view is.

232
00:20:51.750 --> 00:20:53.780
So we shouldn't use the final key word there.

233
00:20:53.910 --> 00:20:57.070
We just defined as a text view and then update it here.

234
00:20:59.730 --> 00:21:00.480
OK.

235
00:21:00.970 --> 00:21:03.590
Now I don't want to add too much code at once.

236
00:21:03.730 --> 00:21:05.770
So rather than playing a sound

237
00:21:09.210 --> 00:21:10.080
I'm just going to

238
00:21:13.340 --> 00:21:19.140
log the time or is done when we're finished.

239
00:21:19.500 --> 00:21:25.450
And then of course don't forget to actually start the countdown.

240
00:21:25.590 --> 00:21:33.450
So now we should find that when we tap the button the count down counts down and then we get that message

241
00:21:34.800 --> 00:21:36.530
in the logs when we're done.

242
00:21:37.200 --> 00:21:39.010
So that's just me.

243
00:21:39.030 --> 00:21:40.250
That's something simpler.

244
00:21:40.460 --> 00:21:42.030
Oh that's interesting.

245
00:21:42.030 --> 00:21:46.850
So we get we need to change that to 8 0 6 we'll do that in a minute but let's just check.

246
00:21:46.950 --> 00:21:48.470
Excellent that's looking good.

247
00:21:51.270 --> 00:21:51.810
Cere

248
00:21:54.680 --> 00:21:56.090
So a couple of things to note.

249
00:21:56.110 --> 00:21:59.930
Let's just check and make sure we have got time a done.

250
00:22:00.100 --> 00:22:07.030
But notice that it didn't actually call on tick the very last time.

251
00:22:07.090 --> 00:22:10.930
So that's going to look strange if we finish on 0 1.

252
00:22:10.930 --> 00:22:12.630
So we got a few little fixes to make that

253
00:22:15.730 --> 00:22:22.770
first of all we need to update the time a text few to zero when it's finished.

254
00:22:22.830 --> 00:22:23.350
He's Liam

255
00:22:30.150 --> 00:22:31.790
just like that.

256
00:22:32.350 --> 00:22:42.070
And then we need to change it so that when it's 0 4 for example let's just say Yep.

257
00:22:42.270 --> 00:22:47.100
So we definitely want that to be 0 4 not 4 Otherwise it looks like 40 seconds.

258
00:22:47.610 --> 00:22:53.230
So we could put in an else here and change that too.

259
00:22:53.280 --> 00:22:53.790
If

260
00:22:57.850 --> 00:23:06.820
seconds is less than or equal to 9 if it's a single digit

261
00:23:09.600 --> 00:23:13.530
then we want to add an extra zero in the front.

262
00:23:13.530 --> 00:23:19.890
So it will make second string equal to zero.

263
00:23:20.850 --> 00:23:27.270
Plus second string which will just put a zero in the front.

264
00:23:27.270 --> 00:23:31.310
And in fact that's exactly what we want to do when second string is 0.

265
00:23:31.950 --> 00:23:38.150
So we can actually get rid of that first if statement completely.

266
00:23:38.170 --> 00:23:42.620
Now if the number of seconds is less than or equal to nine then we just add a 0 in front.

267
00:23:42.630 --> 00:23:45.510
Either way.

268
00:23:45.550 --> 00:23:53.650
OK so let's just run that again and see if those two fixes have indeed fixed the behavior that we wanted

269
00:23:53.650 --> 00:23:59.760
them to.

270
00:23:59.800 --> 00:24:03.560
So once again it's decreased so now that looks a lot better.

271
00:24:03.580 --> 00:24:04.950
Great.

272
00:24:05.370 --> 00:24:05.750
Go

273
00:24:09.070 --> 00:24:17.260
to one and we do get 0 0 but you might have noticed a slight delay there.

274
00:24:17.760 --> 00:24:20.610
Let's just see that again.

275
00:24:20.710 --> 00:24:24.760
So if we go for three to one.

276
00:24:24.930 --> 00:24:29.570
We then get a slightly longer second finishing off.

277
00:24:29.570 --> 00:24:30.860
Now why is that happening.

278
00:24:30.860 --> 00:24:35.570
You may notice as well that when we tap go it decreases almost straight away.

279
00:24:35.570 --> 00:24:41.140
In fact it didn't decrease there jumped let's just check that again.

280
00:24:41.620 --> 00:24:44.730
So it starts decreasing straight away.

281
00:24:45.370 --> 00:24:50.200
So we really want to change that behavior so that it doesn't do that.

282
00:24:50.560 --> 00:24:56.740
So let's firstly see what's causing that what's actually going on is when we start the count down timer

283
00:24:57.040 --> 00:25:01.200
with say 10 seconds or ten thousand milliseconds to go.

284
00:25:01.390 --> 00:25:05.140
This first on tick isn't actually called immediately.

285
00:25:05.130 --> 00:25:08.000
It's called a few milliseconds after.

286
00:25:08.050 --> 00:25:15.010
So let's say we're looking for 10 seconds then this is going to get called at just under ten thousand

287
00:25:15.010 --> 00:25:20.860
milliseconds which means we're going to have say nine thousand eight hundred milliseconds divided by

288
00:25:20.860 --> 00:25:26.880
a thousand which then rounds down because we're rounding to an integer to nine seconds.

289
00:25:27.130 --> 00:25:31.690
So that's why we get the nine seconds straight away and then eight and then seven.

290
00:25:31.750 --> 00:25:34.900
And that's why we also get the delay at the end.

291
00:25:35.350 --> 00:25:44.560
So we have to do a slightly curious fix here and that is to add say one tenth of a second to our total

292
00:25:44.560 --> 00:25:51.550
count down time at time and that will allow for the time it takes for the script to actually process

293
00:25:51.790 --> 00:25:59.170
the first on take and then the delay will carry on and we'll get the output that we want and everything

294
00:25:59.170 --> 00:26:01.200
will happen actually at the right time.

295
00:26:01.210 --> 00:26:10.810
Even though it's happening a tenth of a second later as far as the app is concerned let's take a look

296
00:26:10.810 --> 00:26:12.420
now.

297
00:26:12.730 --> 00:26:14.410
So we'll take it down say eight seconds.

298
00:26:14.410 --> 00:26:18.300
Now when we go we get a slight delay which makes sense.

299
00:26:18.460 --> 00:26:23.290
So it feels better to start with and then we should get a smooth.

300
00:26:23.290 --> 00:26:23.980
There you go.

301
00:26:24.100 --> 00:26:25.640
Finish as well.

302
00:26:26.130 --> 00:26:32.230
So yeah that's a slightly odd fix that we need to put in there to make everything look better.

303
00:26:32.260 --> 00:26:34.520
We're still getting our time a done LOEG.

304
00:26:34.570 --> 00:26:37.230
So everything's looking fine.

305
00:26:37.930 --> 00:26:39.070
All right.

306
00:26:39.070 --> 00:26:44.730
Next we'll change the log to an instruction to play the sound instead.

307
00:26:44.740 --> 00:26:48.640
So we want to play this slightly horrendous air horn sound.

308
00:26:48.640 --> 00:27:02.280
So if you remember the process we want media player I'll call it and play um and then we use media player

309
00:27:02.430 --> 00:27:05.770
to create context is this.

310
00:27:06.330 --> 00:27:12.180
And then we want our DOT roar dot horn

311
00:27:15.910 --> 00:27:16.600
There we go.

312
00:27:16.860 --> 00:27:22.860
And now we've got an interesting error here so I thought I'd leave this in if we click on that.

313
00:27:22.960 --> 00:27:28.620
You can see we get an error of cannot resolve method to create anonymous Android to IRESSA can't be

314
00:27:28.620 --> 00:27:29.150
on time.

315
00:27:29.150 --> 00:27:35.230
Now that's quite strange but what's actually going on here is we normally use this in this context to

316
00:27:35.230 --> 00:27:42.370
refer to the application context but because we're inside a countdown timer here this actually refers

317
00:27:42.370 --> 00:27:49.720
to the countdown timer so we can't use this to refer to the application context which means we need

318
00:27:49.720 --> 00:27:56.350
to refer to that manually which we do using get application context.

319
00:27:56.530 --> 00:27:58.540
Context sorry.

320
00:27:58.690 --> 00:27:59.280
There we go.

321
00:27:59.530 --> 00:28:06.670
So yeah if you try and play a sound inside another countdown timeout or something like that then you'll

322
00:28:06.670 --> 00:28:12.140
get that problem so you need to use the full get application context.

323
00:28:12.920 --> 00:28:16.170
All right then it's just play a dot.

324
00:28:16.210 --> 00:28:16.580
Start

325
00:28:19.540 --> 00:28:20.440
OK.

326
00:28:21.290 --> 00:28:26.480
So let's just check that make sure I've got my volume up and we should now find that when the time it

327
00:28:26.480 --> 00:28:38.940
finishes we get lovely a whole noise.

328
00:28:41.750 --> 00:28:47.790
Two one wonderful that's going to get you to get here.

329
00:28:47.790 --> 00:28:50.290
Get your eggs sorted out William.

330
00:28:50.430 --> 00:28:53.690
So we're pretty much that we just want to do a couple of things.

331
00:28:53.700 --> 00:28:57.770
So first of all we want to change the go button to a stop button.

332
00:28:57.960 --> 00:29:04.050
When the countdown is active and we also want to disable slide when the countdown is active because

333
00:29:04.050 --> 00:29:09.360
we don't want the user to be able to change the countdown with the slider when it's active which has

334
00:29:09.560 --> 00:29:11.170
been few things slightly.

335
00:29:11.720 --> 00:29:12.440
OK.

336
00:29:12.930 --> 00:29:14.160
So I think we're going to need

337
00:29:18.180 --> 00:29:18.790
a boolean

338
00:29:22.430 --> 00:29:32.170
counter is active and initially that's going to be false.

339
00:29:35.140 --> 00:29:45.620
And then when they use the taps control time we're going to set Kansa is active too.

340
00:29:45.960 --> 00:29:46.570
True.

341
00:29:49.530 --> 00:29:57.480
And we also want to disable the seek Bahiya as well so we can do that using time a seek Paul taught

342
00:29:57.660 --> 00:30:03.900
set enabled is false.

343
00:30:04.020 --> 00:30:14.880
So that will set elevation set enabled so that will stop the user seeking back and forth while the counter

344
00:30:14.880 --> 00:30:15.900
is active.

345
00:30:16.350 --> 00:30:22.230
Now we only want that to happen if counter is active

346
00:30:25.840 --> 00:30:31.420
is false when the timer is pressed.

347
00:30:31.420 --> 00:30:33.700
So we want all of this to happen but only

348
00:30:38.630 --> 00:30:41.030
if counter is active is false.

349
00:30:41.030 --> 00:30:42.610
So this will then stop the time.

350
00:30:43.880 --> 00:30:47.030
Set counter is active to be true and disable the seek.

351
00:30:48.230 --> 00:30:52.490
There's one other thing that we want to happen when that button is initially pressed and that is we

352
00:30:52.490 --> 00:30:58.910
want to update the text of the button to say stop rather than to say go.

353
00:30:58.940 --> 00:31:06.380
So to do that we're going to need to refer to the button.

354
00:31:06.570 --> 00:31:07.730
So let's create a button

355
00:31:11.310 --> 00:31:16.100
in the widget code and remind myself what I called it.

356
00:31:16.140 --> 00:31:18.010
So control the button.

357
00:31:18.030 --> 00:31:21.710
Very sensible.

358
00:31:21.830 --> 00:31:23.750
So we'll call it control the button here as well.

359
00:31:23.750 --> 00:31:27.520
And then in the uncreate method

360
00:31:30.170 --> 00:31:31.190
we'll establish

361
00:31:33.740 --> 00:31:34.360
what that is.

362
00:31:34.380 --> 00:31:43.370
So cast it as a button and then find view by id ador ID dot control button.

363
00:31:43.370 --> 00:31:51.020
So now we can use control button to refer to that button and we'll do that here is a control button

364
00:31:51.110 --> 00:31:56.260
and then set text to be stop

365
00:32:00.890 --> 00:32:01.380
OK.

366
00:32:03.110 --> 00:32:05.030
So let's just check that all that works.

367
00:32:06.810 --> 00:32:11.760
Obviously we need to do something when County is active is equal to true as well.

368
00:32:13.070 --> 00:32:14.150
So that will be our last

369
00:32:16.640 --> 00:32:18.000
challenge.

370
00:32:18.080 --> 00:32:18.620
Here we go.

371
00:32:18.620 --> 00:32:20.570
So again we'll tap go.

372
00:32:20.950 --> 00:32:24.280
So our time is looking good you can see our slide has been disabled.

373
00:32:24.440 --> 00:32:25.060
Brilliant.

374
00:32:25.280 --> 00:32:29.270
And our button has changed to stop.

375
00:32:29.270 --> 00:32:39.170
If we tap that nothing happens because counter is active is equal to Fultz.

376
00:32:39.190 --> 00:32:46.900
So what do we want to happen if counteractive is true.

377
00:32:47.710 --> 00:32:51.260
What we want to reset the timer.

378
00:32:51.520 --> 00:32:52.600
There it goes.

379
00:32:53.200 --> 00:32:57.680
So I want to see first set the time a text.

380
00:33:00.310 --> 00:33:06.000
Back to 30.

381
00:33:06.450 --> 00:33:18.840
I want to set the time a Sikh Bob to have a progress of 30 seconds as before.

382
00:33:19.290 --> 00:33:23.170
And lastly of course we want to stop the countdown timer.

383
00:33:23.820 --> 00:33:30.880
We can do that at the moment because we haven't called our countdown time or anything so let's fix that.

384
00:33:33.200 --> 00:33:34.190
All created here.

385
00:33:34.250 --> 00:33:39.800
So count down timer we'll call it countdown timer.

386
00:33:40.830 --> 00:33:48.230
And then here this is going to be our countdown timer.

387
00:33:48.530 --> 00:33:59.210
And then once we've given it a name we can use countdown timer dot cancell.

388
00:34:00.040 --> 00:34:05.020
One more thing that we're going to need is to update the button text back to go again.

389
00:34:06.930 --> 00:34:15.660
So let's quickly do that control a button set text to go.

390
00:34:15.660 --> 00:34:16.640
All right.

391
00:34:16.640 --> 00:34:18.660
I think that's everything.

392
00:34:18.680 --> 00:34:19.400
So let's take a look.

393
00:34:19.400 --> 00:34:27.020
We should now have a fully functional take time app where we can start and stop the slash reset the

394
00:34:27.110 --> 00:34:27.500
timer

395
00:34:30.870 --> 00:34:34.630
as we like solutes First of all just check that they are adjusting still works.

396
00:34:34.650 --> 00:34:35.120
Excellent.

397
00:34:35.130 --> 00:34:37.110
And that looks nice.

398
00:34:37.110 --> 00:34:37.920
Fantastic.

399
00:34:37.950 --> 00:34:41.110
Let's bring it down to 21 seconds.

400
00:34:41.190 --> 00:34:50.100
If we go and we get this countdown and that's disabled if we stop that gets reset that gets turned back

401
00:34:50.100 --> 00:34:50.700
to go.

402
00:34:50.910 --> 00:34:57.230
But I did forget something I forgot to re enable our SIKMA.

403
00:34:57.310 --> 00:34:58.670
So let's quickly do that.

404
00:35:00.940 --> 00:35:03.120
Set enabled.

405
00:35:07.210 --> 00:35:08.030
Try that again.

406
00:35:16.870 --> 00:35:17.830
Hey guys.

407
00:35:19.090 --> 00:35:20.970
So countdown is working great.

408
00:35:20.970 --> 00:35:23.820
If we stop it resets it back to 30.

409
00:35:23.850 --> 00:35:34.400
We're back together again and seek by is enabled again and then we tap go again.

410
00:35:34.460 --> 00:35:37.780
Now there's one more thing that we forgot or that I forgot I should say.

411
00:35:37.910 --> 00:35:39.700
Can't really blame it on you.

412
00:35:40.190 --> 00:35:43.130
And that is to set counter is active

413
00:35:46.260 --> 00:35:50.430
back to Fultz again.

414
00:35:50.430 --> 00:35:58.280
Otherwise clicking that button is just going to process these all over again.

415
00:36:00.810 --> 00:36:01.240
All right.

416
00:36:01.380 --> 00:36:03.460
Fingers crossed I've remembered everything this time.

417
00:36:03.510 --> 00:36:10.500
So Guy stop excellent and go again wonderful.

418
00:36:12.020 --> 00:36:13.930
Stopping resets it back to 30.

419
00:36:14.330 --> 00:36:19.970
And then let's just make sure that our wonderful Horn is still functioning.

420
00:36:22.940 --> 00:36:27.930
And actually it makes me think OK.

421
00:36:28.050 --> 00:36:35.550
So now that's come back to 0 3 but it hasn't reset everything to the user now has to click stop to get

422
00:36:35.550 --> 00:36:38.770
everything back which really isn't great.

423
00:36:38.790 --> 00:36:40.580
There's a number of different ways you could solve that.

424
00:36:40.590 --> 00:36:42.950
And please do be creative there.

425
00:36:42.960 --> 00:36:50.820
But what I'm going to do is just run this reset mechanism when the countdown timer has finished.

426
00:36:50.820 --> 00:36:59.390
So again rather than copy and paste the code I'm going to cut it and create a new method for it.

427
00:36:59.640 --> 00:37:05.290
So public FOID reset timer.

428
00:37:06.360 --> 00:37:11.580
We don't need any variables being passed to at this time.

429
00:37:11.580 --> 00:37:12.560
So reset time.

430
00:37:12.570 --> 00:37:15.740
So we want that to happen in two places.

431
00:37:16.030 --> 00:37:28.800
One when the user manually resets and the other when the timer has finished.

432
00:37:28.800 --> 00:37:34.800
So for hopefully the final time let's just check it that will have a slightly strange effect maybe of

433
00:37:34.800 --> 00:37:40.530
resetting it back to 30 seconds but I think that'll be clear enough to the user because the sound will

434
00:37:40.530 --> 00:37:44.630
have made it very clear that the timer did indeed finish.

435
00:37:45.270 --> 00:37:46.260
So let's just make sure

436
00:37:51.600 --> 00:37:52.260
wonderful.

437
00:37:52.390 --> 00:37:53.770
So that looks fine.

438
00:37:53.790 --> 00:37:57.280
The fact that it doesn't go down to zero and resets back to 30 I think does make sense.

439
00:37:57.390 --> 00:38:01.710
But of course you can change your apps slightly differently if you like.

440
00:38:01.860 --> 00:38:02.650
Great.

441
00:38:02.730 --> 00:38:05.720
So I hope you enjoyed that one we now have a fully functional egg timer.

442
00:38:05.970 --> 00:38:10.560
We haven't quite left timers behind yet though we're going to make a brain training app in a couple

443
00:38:10.560 --> 00:38:17.400
of years time but we'll take a moment out from that to see how to hide and show user interface elements

444
00:38:17.670 --> 00:38:19.220
to allow us to make our Brain Trainer.
