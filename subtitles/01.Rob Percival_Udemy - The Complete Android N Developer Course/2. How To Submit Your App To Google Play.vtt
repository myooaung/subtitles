WEBVTT
1
00:00:00.680 --> 00:00:01.100
All right.

2
00:00:01.100 --> 00:00:05.990
So you've built your fantastic out you've tested it thoroughly for bugs you've shared it with friends

3
00:00:05.990 --> 00:00:10.630
and family and you've got feedback from them and they all say it needs to be shared with the world.

4
00:00:10.700 --> 00:00:16.280
So you're ready to upload your app to Google Play to do that you will need a Google developer's account

5
00:00:16.970 --> 00:00:24.270
and the paid version of which costs $25 and a great place to start is developers dot Google dot com.

6
00:00:24.490 --> 00:00:30.550
From there click the Android link if the website has left has changed since this video was made you

7
00:00:30.550 --> 00:00:33.920
can just go directly to developer dot Android dot com.

8
00:00:34.000 --> 00:00:40.600
And there's actually a lot of really useful stuff to help you make your apps better and look better

9
00:00:40.630 --> 00:00:42.070
as well.

10
00:00:42.070 --> 00:00:46.510
So I would thoroughly recommend spending a bit of time on developing the Android to come to know what

11
00:00:46.510 --> 00:00:52.980
Google considers great looking and well functioning apps when you're convinced the app is ready though.

12
00:00:53.170 --> 00:00:57.420
We're going to jump over to the developer console again if that link isn't there.

13
00:00:57.430 --> 00:01:06.130
Just go directly to play dot Google dot com slash apps slash publish and then click add new application.

14
00:01:06.130 --> 00:01:10.630
At this point if you haven't already signed up as a Google Play developer you'll be taking three steps

15
00:01:10.630 --> 00:01:11.430
to do that.

16
00:01:11.740 --> 00:01:16.180
And then once you've paid the fee and complete the process you'll be able to add your new application

17
00:01:17.200 --> 00:01:25.020
and I'm actually going to add the currency converter app to take us back to the very beginning of the

18
00:01:25.020 --> 00:01:33.000
course and the first app that we made so we can start by uploading the AP K or preparing the store listing

19
00:01:33.930 --> 00:01:42.570
I'm going to upload the AP K IBK is short for Android package and it's a single file that contains everything

20
00:01:42.630 --> 00:01:46.440
that the Google Play store needs to publish your app.

21
00:01:46.470 --> 00:01:50.250
We're going to start by uploading that and then we'll just see all the other settings that you need

22
00:01:50.250 --> 00:01:53.720
to tweak to get your app published.

23
00:01:53.760 --> 00:02:03.480
So we did that over in Android studio and we start by clicking the build variants button at the bottom

24
00:02:03.480 --> 00:02:04.300
left there.

25
00:02:04.800 --> 00:02:12.600
And we get a change from building a debug version of the app which we've been using so far to 8 release

26
00:02:12.960 --> 00:02:15.010
version of the app.

27
00:02:15.030 --> 00:02:20.750
So now Android studio will produce for us version of the app ready for release.

28
00:02:20.760 --> 00:02:27.390
We do however need to prove that we and only we have the ability to publish and create future versions

29
00:02:27.390 --> 00:02:28.100
of this app.

30
00:02:28.230 --> 00:02:31.370
And we do that with a process called signing.

31
00:02:32.160 --> 00:02:40.560
So in Android studio go to the build menu and then generate signed AP K and we're going to generate

32
00:02:40.650 --> 00:02:43.160
a signed IBK from the app module.

33
00:02:43.590 --> 00:02:51.760
And the key store is much like the DGM file that we used prove ownership of our AWOS instance.

34
00:02:51.780 --> 00:02:58.380
So unless you've got an existing one we'll create a new file and we start by creating the keys to our

35
00:02:58.380 --> 00:03:01.600
path paths so just where it's going to be stored on our machine.

36
00:03:02.910 --> 00:03:14.630
I'm going to store it on the desktop and I'm going to call it currency converter key store.

37
00:03:15.710 --> 00:03:17.180
You can of course store it wherever you like.

38
00:03:17.180 --> 00:03:19.890
I'd recommend somewhere nice and secure.

39
00:03:20.390 --> 00:03:26.150
Then I'm going to just use password for my password.

40
00:03:26.150 --> 00:03:32.450
I'd honestly recommend again that you'd do something nice and complex that now that we've defined the

41
00:03:32.450 --> 00:03:34.450
key store location and password.

42
00:03:34.460 --> 00:03:37.260
We do the same for the key itself.

43
00:03:37.610 --> 00:03:38.630
So I'll call this

44
00:03:41.320 --> 00:03:48.150
currency converter key and I use the same password again.

45
00:03:48.160 --> 00:03:53.630
I'd recommend you use a different one and I'll have the default validity of 25 years.

46
00:03:54.330 --> 00:03:59.790
And then I'll just fill in the details of the certificates first and last name for possible organizational

47
00:03:59.790 --> 00:04:00.160
unit.

48
00:04:00.180 --> 00:04:06.630
I'll just use my name again and similarly for organization but of course if you do have a specific organization

49
00:04:06.630 --> 00:04:08.480
you should use that.

50
00:04:09.200 --> 00:04:16.340
Now Cambridge Cambridge UK.

51
00:04:16.470 --> 00:04:16.960
All right.

52
00:04:17.010 --> 00:04:21.790
That creates Yochi store which can contain multiple keys for different apps if you want.

53
00:04:22.020 --> 00:04:29.390
And I specifically for this particular app currency converter and it gives the details of the certificate

54
00:04:29.390 --> 00:04:29.950
as well.

55
00:04:32.230 --> 00:04:36.110
And I'm going to choose to let Android studio remember those passwords.

56
00:04:36.280 --> 00:04:40.990
It depends how secure your computer is as to whether or not you're happy to do that.

57
00:04:41.520 --> 00:04:46.210
And we click next and we specify the password.

58
00:04:46.210 --> 00:04:49.850
So again something nice and secure.

59
00:04:50.930 --> 00:04:56.710
And we're going to generate our signed AP K default settings will work fine.

60
00:04:56.740 --> 00:05:02.730
And then it will build that in exactly the same way that it does when you're running it on the simulator.

61
00:05:03.010 --> 00:05:11.810
Except this time it will produce a final AP k file and there we go so it's generated the signed AP k

62
00:05:12.140 --> 00:05:14.150
we'll reveal that in Finder.

63
00:05:14.860 --> 00:05:18.760
And there it is right there in our app folder.

64
00:05:18.800 --> 00:05:28.050
So I'm now going to go back over to Google Chrome click upload the first APJ to production and then

65
00:05:28.050 --> 00:05:30.360
we'll just drop in the file that we've generated.

66
00:05:34.130 --> 00:05:41.460
And that will then upload that analyze it and see if there are any issues with it before it can be published.

67
00:05:42.170 --> 00:05:48.890
And there we go and see it's been imported it tells you how many devices it supports or excludes.

68
00:05:49.130 --> 00:05:52.150
And that's all it takes to upload your AP k.

69
00:05:52.370 --> 00:06:00.370
The rest is now just a matter of updating your store listing and the various details for your app.

70
00:06:00.600 --> 00:06:06.380
So I'm sure you can come up with a short description of a full description that describes your well

71
00:06:07.010 --> 00:06:08.380
doing things like screen shots.

72
00:06:08.420 --> 00:06:09.680
It's a little bit more tricky.

73
00:06:09.800 --> 00:06:14.440
So I'm going to show you how you can do that within Android studio itself.

74
00:06:15.520 --> 00:06:22.420
So we'll get back over to the debug version and we'll run the app in the simulator.

75
00:06:22.600 --> 00:06:28.480
And what I'm going to have to do is to get a screen shot directly from the simulator.

76
00:06:28.840 --> 00:06:35.980
You can of course use many real devices to get screenshots as well but it can be convenient to get it

77
00:06:35.980 --> 00:06:38.400
directly from the machine.

78
00:06:39.280 --> 00:06:41.160
So there we go.

79
00:06:41.380 --> 00:06:45.990
He's now running in the simulator if you will bring back some memories for you.

80
00:06:46.270 --> 00:06:54.340
So to get a screenshot of that particular screen we simply press the camera button there and it takes

81
00:06:54.340 --> 00:06:56.400
a little while but there we go.

82
00:06:56.750 --> 00:07:02.580
As our lovely screen shot it it's nice and high quality as well.

83
00:07:05.140 --> 00:07:09.810
So if we want see save that we just click save.

84
00:07:09.820 --> 00:07:19.190
And for me I'll put it on the desktop itself and then we get back over to crime at a screenshot.

85
00:07:20.560 --> 00:07:24.090
And upload that image.

86
00:07:24.250 --> 00:07:27.420
Of course you can do the same thing for tablet screen sizes.

87
00:07:27.430 --> 00:07:29.320
Android TV Android etc..

88
00:07:31.100 --> 00:07:37.610
So that's how you develop screenshots very easily for your Google Play app and I'd recommend having

89
00:07:37.610 --> 00:07:45.530
lots of screenshots to encourage people to look at your app and see very quickly what it does.

90
00:07:45.530 --> 00:07:49.880
The next thing you need to upload is a high res icon and feature graphic.

91
00:07:49.890 --> 00:07:52.340
Now that's something we need to develop for yourself.

92
00:07:52.430 --> 00:07:54.850
Or you could simply pay someone to create.

93
00:07:54.890 --> 00:07:59.810
You can do it very cheaply on a website such as five dot com or you could spend a little bit more money

94
00:07:59.870 --> 00:08:04.790
and use something like freelancer dot com or 99 designs if you want something that looks a little more

95
00:08:04.790 --> 00:08:06.780
professional.

96
00:08:06.950 --> 00:08:10.110
Again you can use promo graphics and TV banners as well.

97
00:08:10.130 --> 00:08:15.530
If you really want to go all out and upload a video screencast of your app is a great way to show people

98
00:08:15.530 --> 00:08:18.210
what your app does before they have to download it.

99
00:08:18.320 --> 00:08:21.720
So this can be a great thing to create and is quite easy to do as well.

100
00:08:23.510 --> 00:08:31.610
Then we just use the various features of the answer is an app for game choose some categories so choose

101
00:08:32.000 --> 00:08:33.330
business there.

102
00:08:34.030 --> 00:08:36.670
And I think everyone can use this currency converter.

103
00:08:38.320 --> 00:08:42.690
Then you can put in your web site and email address phone number if you like.

104
00:08:42.850 --> 00:08:44.500
And a privacy policy.

105
00:08:44.620 --> 00:08:50.580
Or you can leave that blank if don't store any user data as part of your app.

106
00:08:51.010 --> 00:08:59.950
Then we'll go back to the top and save draft and then jump down to the next one you may have noticed

107
00:08:59.950 --> 00:09:05.370
that on the content rating question below you needed to fill in a questionnaire.

108
00:09:05.560 --> 00:09:07.740
So I'm not going to run through this whole process for you.

109
00:09:07.750 --> 00:09:12.410
It's just a matter of answering honestly about what data your app could display.

110
00:09:12.460 --> 00:09:16.420
The only place you really need to be careful is if you're intentionally allowing users to access the

111
00:09:16.420 --> 00:09:21.960
Web for example and they could access any content through your apps and make sure to make that clear.

112
00:09:24.020 --> 00:09:27.970
And then allow section there is pricing and distribution.

113
00:09:28.010 --> 00:09:33.920
So if it's free everything's nice and simple if you want to have a paid up then you need to set up a

114
00:09:33.920 --> 00:09:38.390
merchant account which is simply a matter of adding your bank account details and giving Google a way

115
00:09:38.390 --> 00:09:46.860
to pay you then you can choose what will likely be all the countries for people to download your app.

116
00:09:46.910 --> 00:09:50.420
Need to specify whether your app has ads or not.

117
00:09:52.030 --> 00:09:57.640
Whether your app has an Android where Android TV or Android Auto component whether you want to opt into

118
00:09:57.640 --> 00:10:07.320
these various user programs and confirming whether you're happy for Google Play marketing to occur that

119
00:10:07.410 --> 00:10:12.270
we meet the Android content guidelines and acknowledging that your software application may be subject

120
00:10:12.270 --> 00:10:15.390
to US export laws.

121
00:10:15.440 --> 00:10:17.840
So again we'll save the giraffe there.

122
00:10:20.490 --> 00:10:23.800
And then the final two sections there.

123
00:10:23.850 --> 00:10:27.930
If you're using any in-app products then you add those there.

124
00:10:28.560 --> 00:10:35.850
And similarly if you use any services and API such as cloud messaging in that billing etc. then you

125
00:10:35.850 --> 00:10:37.990
can set those up there as well.

126
00:10:40.270 --> 00:10:45.100
Then once you've gone through and filled in all of those sections you'll be able to publish the app

127
00:10:45.440 --> 00:10:49.270
and within a few hours it should be live for the world to download.

128
00:10:49.270 --> 00:10:54.550
The next step after publishing is of course letting me know on Twitter I'm tech at Robin I love to see

129
00:10:54.700 --> 00:11:00.240
all of the apps that my students may not be very happy to tweet your app launch out to the world.

130
00:11:00.310 --> 00:11:04.600
Once you've done that you'll probably be wanting a Web site for your app to be able to point people

131
00:11:04.610 --> 00:11:10.130
towards on the web and maybe collect email addresses of those interested in your apps and services and

132
00:11:10.130 --> 00:11:15.010
to better explain to people what your app does and that's exactly what I'm going to show you how to

133
00:11:15.010 --> 00:11:18.970
create using the free hosting that comes with this course in the next section.
