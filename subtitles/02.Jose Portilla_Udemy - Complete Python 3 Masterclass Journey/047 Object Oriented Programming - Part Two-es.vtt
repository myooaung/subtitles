WEBVTT
1

00:00:04.660 --> 00:00:10.480

Bienvenido nuevo recluta en nuestra leccin anterior discutimos cmo crear una clase simple y luego agregar



2

00:00:10.480 --> 00:00:17.230

atributos esa clase ahora es el momento de discutir mtodos mtodos o funciones definidas dentro del cuerpo de una



3

00:00:17.230 --> 00:00:21.890

clase y se utilizan para realizar operaciones con los atributos de nuestra objetos.



4

00:00:21.910 --> 00:00:26.950

Bsicamente, puede pensar en mtodos como aquellas funciones que actan sobre un objeto que tambin toman en



5

00:00:26.950 --> 00:00:30.830

cuenta el objeto mismo mediante el uso de ese argumento de palabra clave.



6

00:00:31.060 --> 00:00:40.140

Repasemos esto con un ejemplo de otra clase a la que llamaremos este crculo de clase y luego creemos un atributo



7

00:00:40.140 --> 00:00:42.040

de objeto de clase.



8

00:00:42.060 --> 00:00:48.510

Recuerde de la discusin previa que el atributo de objeto de clase va a ser algn atributo que ser



9

00:00:48.510 --> 00:00:51.080

verdadero para cualquier instancia de la clase.



10

00:00:51.090 --> 00:00:52.240

Entonces para el agente.



11

00:00:52.290 --> 00:00:54.970

Todos los agentes van a vivir en el planeta Tierra.



12

00:00:54.990 --> 00:00:59.910

Entonces, si nos desplazamos hacia abajo aqu, algo que puede ser cierto para cualquier crculo es el hecho de



13

00:00:59.910 --> 00:01:04.890

que no podemos estimar que pi sea 1 o 3. 1 por ahora no importa qu tan grande sea tu crculo.



14

00:01:04.890 --> 00:01:06.290

Eso siempre va a ser constante.



15

00:01:06.330 --> 00:01:14.040

Entonces lo tendremos como nuestro atributo de objeto de clase y luego crearemos nuestro mtodo o mtodo



16

00:01:14.370 --> 00:01:16.790

de instanciacin y diremos self.



17

00:01:16.800 --> 00:01:18.950

As que siempre pasamos en esa palabra clave auto.



18

00:01:19.140 --> 00:01:24.900

Simplemente voltee Python para que este sea un mtodo relacionado con este objeto.



19

00:01:25.100 --> 00:01:38.920

Y lo que vamos a hacer aqu es tener un radio y luego diremos que resolver el radio es igual a radio.



20

00:01:39.000 --> 00:01:40.810

Entonces tenemos este mtodo de crculo muy simple.



21

00:01:40.830 --> 00:01:46.680

Entonces, si digo que mi crculo es una instancia de la clase del crculo.



22

00:01:47.150 --> 00:01:50.050

Ahora tengo que abrir parntesis cercanos aqu.



23

00:01:50.990 --> 00:01:53.150

Dice que falta el radio.



24

00:01:53.150 --> 00:01:54.620

As que vamos a proporcionar uno.



25

00:01:54.650 --> 00:01:57.160

Adelante y diga Radios a.



26

00:01:57.350 --> 00:02:03.470

Y luego, si reviso el radio de pensamiento de mi crculo, le devolver el valor.



27

00:02:03.810 --> 00:02:06.650

Ahora digamos que no siempre quiero tener que proporcionar algo.



28

00:02:06.690 --> 00:02:09.690

Tal vez quiero un radio predeterminado en caso de que no proporcione uno.



29

00:02:09.690 --> 00:02:12.270

Entonces todo lo que tengo que hacer aqu es decir es igual a.



30

00:02:12.390 --> 00:02:14.540

Y podemos establecer que el radio predeterminado sea 1.



31

00:02:14.610 --> 00:02:21.240

Entonces, cuando leo la multa de que la clase del crculo incluye ese valor predeterminado, puedo volver a ejecutarlo y el



32

00:02:21.240 --> 00:02:22.640

radio predeterminado ser 1.



33

00:02:22.750 --> 00:02:27.600

Entonces ese es un atributo de objeto de clase y ese es el nico atributo que nuestro crculo necesita es un radio.



34

00:02:27.600 --> 00:02:33.960

Ahora vamos a tener un mtodo y un mtodo muy parecido a una funcin, excepto



35

00:02:33.960 --> 00:02:41.700

que est realmente dentro de esta clase en el primer parmetro que va a tomar es uno mismo.



36

00:02:41.920 --> 00:02:45.270

Y creemos un mtodo que calcule el rea de un crculo.



37

00:02:45.340 --> 00:02:54.690

Por lo tanto, devolver radio autodidacta veces el radio autodidacta multiplicado por pi.



38

00:02:54.700 --> 00:02:59.740

As que pire al cuadrado es el rea de un crculo en una orden para llamar al atributo del objeto de clase.



39

00:02:59.770 --> 00:03:05.320

En lugar de llamar pi autodidacta, podemos seguir y llamar al crculo que pi para indicar que es un



40

00:03:05.380 --> 00:03:06.700

atributo de objeto de clase.



41

00:03:06.940 --> 00:03:12.250

Y voy a ejecutar esta celda nuevamente para agregar esas adiciones a una clase circular.



42

00:03:12.340 --> 00:03:18.610

Ejecuta esto de nuevo y luego puedo llamar al radio, pero tambin puede llamar a mi crculo y luego, si



43

00:03:18.670 --> 00:03:22.190

toco la pestaa aqu, tengo el rea PI y tambin el radio.



44

00:03:22.300 --> 00:03:28.040

Me refiero al rea y si solo ejecuto un rea como esta, por ejemplo, digo mtodo de lmite.



45

00:03:28.230 --> 00:03:31.800

Un rea del crculo en el objeto del crculo en este punto de la memoria.



46

00:03:32.010 --> 00:03:34.350

Si quiero ejecutarlo como si tuviera una funcin.



47

00:03:34.350 --> 00:03:38.370

Necesito agregar este parntesis de cierre abierto y luego devuelve el rea.



48

00:03:38.430 --> 00:03:42.930

En este caso, 1 vez, una vez 3 punto 1 4 va a ser tres puntos 1 4.



49

00:03:42.990 --> 00:03:46.620

As que vamos a crear un crculo con un radio de 3 para poder ver los resultados.



50

00:03:46.620 --> 00:03:52.200

Es un radio de 3 significa que el rea es de 28 puntos a 6 o ms o menos aproximadamente.



51

00:03:52.230 --> 00:03:54.590

As que vamos a explicar la sintaxis un poco ms.



52

00:03:54.840 --> 00:03:56.460

Este es un mtodo aqu.



53

00:03:56.490 --> 00:04:02.070

Este mtodo de rea sabe que es un mtodo en lugar de una funcin normal porque pasamos



54

00:04:02.070 --> 00:04:07.350

la palabra clave sulf que, bsicamente, dice "oye, esto no es solo una funcin que estamos definiendo".



55

00:04:07.350 --> 00:04:15.000

Este es un mtodo que se va a referir a esta clase de crculo real y luego, si queremos usar los atributos



56

00:04:15.090 --> 00:04:20.920

de esta iteracin actual del crculo, llamamos radio autodidacta en lugar de simplemente llamar al radio.



57

00:04:20.940 --> 00:04:26.590

Y la razn por la que lo hacemos es para que Python sepa que estoy hablando del radio



58

00:04:26.880 --> 00:04:32.760

que se defini aqu cuando inicializamos nuestra versin del crculo y luego multiplicamos nuevamente por radio y luego llamamos



59

00:04:32.760 --> 00:04:33.680

crculo a pi.



60

00:04:33.750 --> 00:04:36.220

Cul es este atributo de objeto de clase?



61

00:04:36.240 --> 00:04:44.040

Avancemos y mostremos otro ejemplo creando un mtodo perimetral para que podamos decir que el permetro F



62

00:04:45.060 --> 00:04:50.850

y el permetro de un crculo son solo 2 veces el radio.



63

00:04:50.850 --> 00:04:53.190

Tenga en cuenta que aqu tengo que usar el radio autodidacta.



64

00:04:53.190 --> 00:04:56.160

De lo contrario, no sabr de qu radio estoy hablando.



65

00:04:56.160 --> 00:04:58.010

Y luego puedo decir un crculo con pi.



66

00:04:58.080 --> 00:05:05.700

Si necesito usar el atributo de objeto de clase PI aparece para que cuando ejecuto esto de nuevo pueda decir mi



67

00:05:07.110 --> 00:05:13.140

crculo, pueda llamar al permetro y recordar si simplemente llamo al permetro, como este va a informar



68

00:05:13.140 --> 00:05:17.320

el mtodo que necesito para ejecutar realmente el reloj perimetral o mtodo.



69

00:05:17.400 --> 00:05:19.700

Ejecuta eso y obtn el permetro de mi crculo.



70

00:05:19.770 --> 00:05:21.090

O al menos una estimacin de eso.



71

00:05:22.120 --> 00:05:26.950

Ahora bien, estos mtodos son bastante simples, solo tomaron el auto argumento pero tambin pueden



72

00:05:27.370 --> 00:05:30.100

tener parmetros adicionales siempre que comiencen con uno mismo.



73

00:05:30.130 --> 00:05:40.260

Entonces, digamos que quera informar algo sobre un mtodo que se va a tomar a s mismo



74

00:05:40.260 --> 00:05:48.210

y puedo tener otros parmetros como, digamos, el nombre y puedo decir informes



75

00:05:51.060 --> 00:05:52.250

de devolucin.



76

00:05:53.520 --> 00:06:03.270

Y luego podemos decir el nombre del formato y si vuelvo a ejecutar este permetro del rea de radio nuevamente puedo decir que mi crculo toca



77

00:06:04.110 --> 00:06:04.750

la pestaa.



78

00:06:04.770 --> 00:06:13.440

Tenga en cuenta que he informado de algo y luego esto va a esperar que algo informe, as que puedo decir John y voy



79

00:06:13.450 --> 00:06:15.220

a decir informar a John.



80

00:06:15.230 --> 00:06:21.470

As es como se pueden tener mtodos que tambin Ticken parmetros porque se recuperan para otros objetos como la lista



81

00:06:21.470 --> 00:06:26.900

que creamos antes, si volvemos arriba aqu arriba en la parte superior, algunos de estos mtodos necesitan



82

00:06:26.900 --> 00:06:31.610

tomar en cuenta los parmetros que usted proporcion, como agregar un nuevo nmero o contando



83

00:06:31.610 --> 00:06:32.680

cuntas veces eso ocurri.



84

00:06:32.690 --> 00:06:38.120

As que tienes opciones para agregar parmetros adicionales en los que siempre debes comenzar, sin embargo, es



85

00:06:38.390 --> 00:06:44.210

esa palabra clave que bsicamente le dice a Python nuevamente que este es un mtodo, no solo una funcin,



86

00:06:44.570 --> 00:06:47.420

es un mtodo que est conectado a s mismo.



87

00:06:47.450 --> 00:06:49.920

Aqu en la clase de crculo.



88

00:06:49.930 --> 00:06:52.930

Est bien para que la notacin sea muy importante.



89

00:06:52.930 --> 00:06:54.160

Vamos a mostrarte.



90

00:06:54.160 --> 00:06:59.850

La herencia hereditaria es una forma de formar nuevas clases utilizando clases que ya se han definido.



91

00:07:00.740 --> 00:07:03.820

A menudo vas a tener clases similares.



92

00:07:03.860 --> 00:07:08.750

No desea tener que repetir todo su trabajo para poder usar la herencia para formar una nueva



93

00:07:08.750 --> 00:07:10.310

clase basada en trabajos anteriores.



94

00:07:10.520 --> 00:07:18.400

Para no hacer esto vamos a construir una clase y esta clase se llamar



95

00:07:19.250 --> 00:07:30.700

persona tendr un mtodo en s mismo primero subrayar el nombre del ltimo guin bajo y crear los atributos tambin.



96

00:07:30.720 --> 00:07:37.380

As que dir que el primer nombre sulf es igual al primer nombre que ingresas y luego diremos que el



97

00:07:37.380 --> 00:07:39.390

apellido autodidacta es igual al apellido.



98

00:07:39.420 --> 00:07:40.210

Pasan.



99

00:07:40.680 --> 00:07:45.940

Y ms adelante vamos a discutir por qu este mtodo init tiene este conjunto de guiones bajos dobles indica que



100

00:07:45.940 --> 00:07:49.210

es un mtodo especial, por lo que discutiremos mtodos especiales en un momento.



101

00:07:49.260 --> 00:07:50.160

Pero por ahora.



102

00:07:50.220 --> 00:08:00.600

Solo asegrese de que su sintaxis coincida y luego tambin diremos el informe E-F.



103

00:08:01.070 --> 00:08:03.040

Y solo va a imprimir algo.



104

00:08:03.050 --> 00:08:04.300

Note que no estoy devolviendo nada.



105

00:08:04.310 --> 00:08:05.670

Voy a imprimir algo.



106

00:08:05.900 --> 00:08:14.460

No digas que soy y vamos a decir los formatos y dir el nombre autodidacta.



107

00:08:14.720 --> 00:08:17.540

Nombre autodidacta.



108

00:08:17.750 --> 00:08:25.370

Entonces, si creo una instancia de esta persona, necesito pasar un nombre as que dir que James me pase



109

00:08:25.370 --> 00:08:26.120

un apellido.



110

00:08:26.140 --> 00:08:33.570

Bond y yo podemos decir el informe y ejecuto el mtodo de informe y se imprime.



111

00:08:33.630 --> 00:08:34.800

Soy James Bond.



112

00:08:35.040 --> 00:08:40.740

Veamos un mtodo ms para esto que dice F Hello.



113

00:08:41.780 --> 00:08:42.990

Yo.



114

00:08:43.180 --> 00:08:48.040

Y simplemente imprime Hello.



115

00:08:48.240 --> 00:08:55.100

As que tengo a esta persona llamada James Bond que informa quin es y tambin puede saludar.



116

00:08:55.110 --> 00:08:58.460

Ahora la segunda clase que vamos a hacer se llama agente.



117

00:08:58.680 --> 00:09:00.950

Ahora cada agente puede ser una persona tambin.



118

00:09:00.960 --> 00:09:09.180

As que puede ser agradable si los agentes pueden informar quines son y si los agentes pueden decir hola quin dir el agente de la clase



119

00:09:09.660 --> 00:09:14.550

y ahora vamos a pasar algo aqu, vamos a pasar a la clase de persona



120

00:09:14.610 --> 00:09:17.930

porque quiero poder para usar todo lo que he trabajado aqu.



121

00:09:17.940 --> 00:09:23.460

Quiero poder usar este mtodo de informe o usar este mtodo de saludo y para poder hacerlo puedo



122

00:09:23.610 --> 00:09:30.650

heredar la clase y esto a veces tambin se conoce como extender la clase de persona a la clase de agente, dependiendo de



123

00:09:30.650 --> 00:09:31.910

qu manera piense al respecto.



124

00:09:31.910 --> 00:09:36.160

Si el agente hereda de persona o persona se extiende a los agentes.



125

00:09:36.230 --> 00:09:43.010

De cualquier manera vamos a pasar a la persona a la clase agente, tendremos nuestro



126

00:09:43.870 --> 00:09:55.430

mtodo de nuevo aqu y vamos a decir "Qu es el nombre de autocomunicacin?", Y luego el apellido y un agente tambin deberan tener un nombre



127

00:09:55.430 --> 00:09:56.270

en clave.



128

00:09:59.270 --> 00:10:00.300

entonces tendremos esto



129

00:10:00.350 --> 00:10:08.020

Y luego, lo que vamos a hacer aqu es dentro de esta ejemplificacin o en un



130

00:10:08.020 --> 00:10:17.960

mtodo que dir persona y llamar a ese mtodo init del original, la persona luego dir el nombre propio apellido y



131

00:10:17.960 --> 00:10:23.610

luego dir el cdigo propio name es igual al nombre del cdigo.



132

00:10:23.610 --> 00:10:25.970

Ahora la sintaxis puede ser confusa al principio.



133

00:10:26.010 --> 00:10:28.040

Avancemos y definamos lo que est pasando.



134

00:10:28.050 --> 00:10:29.160

Cada una de estas lneas.



135

00:10:29.340 --> 00:10:34.020

Lo primero que hacemos es del agente. Estamos heredando la clase de persona.



136

00:10:34.200 --> 00:10:38.130

Por lo tanto, queremos utilizar estos mtodos para informar y hola de la clase de persona.



137

00:10:38.220 --> 00:10:39.930

As que vamos a seguir adelante y heredarlo.



138

00:10:39.960 --> 00:10:40.760

Fjate aqu.



139

00:10:40.860 --> 00:10:46.090

Hola, no estoy llamando al abrir y cerrar parntesis despus de la persona que acabo de pasar en persona Calle por s mismo.



140

00:10:46.170 --> 00:10:52.200

Luego tenemos nuestro propio mtodo para el agente y toma un nombre, un apellido y un nombre de cdigo, entonces



141

00:10:52.200 --> 00:10:58.020

lo que hace es usar ese nombre y apellido siempre que instancia a la persona que llama y la



142

00:10:58.110 --> 00:11:04.710

persona que en s mismo nombre y apellido nombre y luego los parmetros adicionales que son especficos de un agente en



143

00:11:04.770 --> 00:11:06.340

lugar de solo una persona.



144

00:11:06.360 --> 00:11:11.160

Continuamos y agregamos de forma autodidacta y luego sea cual sea el nombre del atributo que queremos que coincida con el privado



145

00:11:11.160 --> 00:11:12.600

que se aprob en ese momento.



146

00:11:12.840 --> 00:11:15.470

Entonces esa es la parte principal de la herencia.



147

00:11:15.720 --> 00:11:24.150

Y si ejecuto esto y crea un nuevo agente, por ejemplo, los agentes lo llamaremos variable x no son agentes y



148

00:11:24.150 --> 00:11:27.170

tienen un primer nombre que daremos el nombre.



149

00:11:27.180 --> 00:11:39.790

Alan dir que su apellido est de gira y que su nombre clave es hroe, por lo que si decimos x punto y presionamos



150

00:11:40.150 --> 00:11:47.110

TAB, podemos tomar los atributos nombre cdigo nombre apellido, pero tambin podemos decirles



151

00:11:47.110 --> 00:11:51.320

hola y tambin podemos decirles dar un informe.



152

00:11:52.000 --> 00:12:00.990

Soy Alan Turing. Observe cmo pudimos heredar el mtodo de saludo y el mtodo de informe de la



153

00:12:00.990 --> 00:12:02.490

clase de persona.



154

00:12:02.520 --> 00:12:08.600

Ahora bien, dado que se trata de un agente, probablemente no queremos que digan su nombre real con solo pedir un informe.



155

00:12:08.820 --> 00:12:15.660

Entonces, si alguna vez quiero sobreescribir un mtodo que hered, puedo bajar aqu y leer



156

00:12:15.660 --> 00:12:21.740

el mrito de ese mtodo que puedo decir si los informes son correctos.



157

00:12:21.810 --> 00:12:25.920

Y voy a sobrescribir el auto o el mtodo de informe que vino de persona a persona.



158

00:12:26.220 --> 00:12:28.660

Entonces, en lugar de reportar mi nombre, voy a imprimir.



159

00:12:28.810 --> 00:12:34.190

Lo siento, no puedo decirte mi verdadero nombre.



160

00:12:36.530 --> 00:12:40.290

Prince, pero puedes llamarme.



161

00:12:40.530 --> 00:12:47.880

Y luego daremos formato a su nombre en clave, por ejemplo, nombre de cdigo autodidacta del formato, de modo que crearemos los



162

00:12:47.880 --> 00:12:49.610

agentes que puedan decir hola.



163

00:12:49.770 --> 00:12:54.240

Excepto ahora cuando les pides que informen en lugar de informar su nombre, pudimos



164

00:12:54.330 --> 00:12:57.070

sobrescribir el mtodo de informe de persona a persona.



165

00:12:57.210 --> 00:12:59.490

Y ahora tenemos nuestro propio mtodo de informe para Asia.



166

00:12:59.580 --> 00:13:03.360

Lo siento, no puedo decirte mi verdadero nombre, pero puedes llamarme hroe.



167

00:13:03.360 --> 00:13:10.770

Entonces, adems de heredar otros mtodos de esta clase y poder sobreescribirlos, tambin podemos agregar nuevos mtodos para que



168

00:13:10.800 --> 00:13:17.100

podamos agregar un nuevo mtodo llamado verdadero nombre en caso de que alguna vez deseemos informar



169

00:13:17.100 --> 00:13:18.270

nuestro verdadero nombre.



170

00:13:18.270 --> 00:13:22.200

Y esto puede tomar y la palabra clave self y tambin puede tomarse una contrasea.



171

00:13:22.190 --> 00:13:26.550

Por lo tanto, debe proporcionar un cdigo de acceso para conocer el nombre real de este agente.



172

00:13:26.550 --> 00:13:37.860

Por lo tanto, si el cdigo de acceso es igual a uno 2, tres veces imprime el cdigo de acceso correcto y luego podemos continuar



173

00:13:37.860 --> 00:13:39.930

y copiarlo aqu mismo.



174

00:13:39.930 --> 00:13:46.190

El informe real de los nombres copiar esto volver aqu.



175

00:13:47.740 --> 00:13:48.720

Pegar eso en.



176

00:13:48.820 --> 00:13:52.130

As que eso es lo que el pasado podra proporcionar es de uno a tres, es correcto.



177

00:13:52.210 --> 00:13:57.400

Lo nico que vamos a hacer es solo decir Lo sentimos, no puedo decir mi verdadero nombre, pero en lugar



178

00:13:57.400 --> 00:14:00.640

de copiar y pegar todo lo que tenemos que hacer es decir autodidacta.



179

00:14:00.880 --> 00:14:02.120

Llamar al mtodo de informe.



180

00:14:02.140 --> 00:14:09.130

As que esto solo le dice a esta clase que si este cdigo de acceso no es 1 2 3, simplemente ejecute su propio



181

00:14:09.130 --> 00:14:09.960

mtodo de informe.



182

00:14:10.030 --> 00:14:15.340

Y esa es la clave del uso de la palabra clave del self, ya sea que se trate de un atributo



183

00:14:15.340 --> 00:14:23.020

o una llamada a un mtodo, esto le permite a Python saber que te ests refiriendo a sus propios mtodos y no a otras funciones en el espacio de nombres global.



184

00:14:23.020 --> 00:14:29.680

Entonces, si ejecuto esto, asegurmonos de tener la sintaxis correcta, necesitamos que esto sea igual a igual.



185

00:14:29.680 --> 00:14:30.310

Ahora corramos esto.



186

00:14:30.310 --> 00:14:31.270

Aqu vamos.



187

00:14:31.300 --> 00:14:33.780

As que el cdigo de Alan Turing se llama Hero.



188

00:14:33.940 --> 00:14:36.560

Pueden saludarnos si les pedimos que informen.



189

00:14:36.880 --> 00:14:44.990

No le dirn su verdadero nombre si le preguntamos, digamos su verdadero nombre y pasamos el cdigo de acceso incorrecto, le dirn que lo siento, pero no puedo



190

00:14:45.560 --> 00:14:48.250

decir que mi verdadero nombre me puede llamar hroe.



191

00:14:48.260 --> 00:14:55.100

Entonces siguen llamando a un informe si pas uno como cdigo correcto aunque digan el cdigo de acceso correcto.



192

00:14:55.100 --> 00:14:56.780

Soy Alan Turing.



193

00:14:56.870 --> 00:15:02.210

Y finalmente, lo que tenemos que discutir son mtodos especiales y tambin mtodos privados.



194

00:15:02.210 --> 00:15:07.940

Hemos visto un par de mtodos especiales especficamente este mtodo y se lo denomina especial debido a



195

00:15:08.000 --> 00:15:09.860

su doble conjunto de guiones bajos.



196

00:15:09.860 --> 00:15:14.870

Entonces en la siguiente leccin vamos a terminar nuestra discusin de programacin orientada a



197

00:15:14.870 --> 00:15:17.750

objetos hablando de mtodos privados y mtodos especiales.



198

00:15:17.810 --> 00:15:18.410

Veremos all.



