1
00:00:00,510 --> 00:00:01,410
Welcome back.

2
00:00:01,410 --> 00:00:06,660
Let's now go ahead and go over some examples solutions for your object oriented programming review exercise

3
00:00:06,660 --> 00:00:12,640
questions.

4
00:00:12,650 --> 00:00:15,700
Let's begin by creating this sphere class.

5
00:00:15,740 --> 00:00:18,260
We'll start off with our method.

6
00:00:18,470 --> 00:00:21,870
TGF underscore underscore in it.

7
00:00:22,100 --> 00:00:28,290
And then we always need to pass in self and we'll go ahead and except in a radius which means we need

8
00:00:28,290 --> 00:00:30,780
to assign a radius attribute.

9
00:00:30,780 --> 00:00:41,030
So we will say self that radius physical to radius then we will create a volume method and that will

10
00:00:41,030 --> 00:00:42,460
also need self.

11
00:00:42,890 --> 00:00:48,200
And the formula for the volume of a sphere can be easily found through Google search but it's just for

12
00:00:48,220 --> 00:00:58,070
third's times Paice we can say 3.1 four times and then we'll say self-taught radius to the power of

13
00:00:58,160 --> 00:00:59,940
three or cubed.

14
00:01:00,170 --> 00:01:04,840
So it's just 430 times pi times are cubed.

15
00:01:05,110 --> 00:01:07,580
Then we can define the surface area method.

16
00:01:07,720 --> 00:01:11,530
So we will say surface area we need a pass and self.

17
00:01:11,530 --> 00:01:19,900
And similarly we can return four times Pi or three point one four times self-taught radius to the power

18
00:01:19,960 --> 00:01:26,430
of two and it's up to you whether you want to create pi as a class object attribute.

19
00:01:26,440 --> 00:01:32,250
Here we just set in a constant 3.1 for there but that's all you had to do for the sphere class.

20
00:01:32,260 --> 00:01:34,490
Let's run this and check that it all works out.

21
00:01:34,510 --> 00:01:38,520
So sphere a radius of three surface area and volume.

22
00:01:38,540 --> 00:01:39,740
All check out.

23
00:01:39,760 --> 00:01:44,230
So that should have been pretty straightforward especially that we did a circle class in our previous

24
00:01:44,230 --> 00:01:45,060
lessons.

25
00:01:46,270 --> 00:01:51,330
Now for exercise 2 This was definitely a little more complicated so let's see what we could do here.

26
00:01:52,260 --> 00:01:57,720
We're going to start off with an init method and as described in the instructions you don't need any

27
00:01:57,720 --> 00:02:05,830
parameters here so we'll just say self and then we will create an attribute called self Rande that choice

28
00:02:07,850 --> 00:02:14,240
and sulphur and choice what it's going to have is it's going to use that random library that we imported

29
00:02:14,870 --> 00:02:21,200
and then it will use the rand int function that we discussed earlier in your training and it's going

30
00:02:21,200 --> 00:02:29,260
to pick a random number from 0 to 10 and that will set the rand choice attribute is a good lesson to

31
00:02:29,260 --> 00:02:35,180
keep in mind you can still set attributes even though you don't want your user to find them.

32
00:02:35,910 --> 00:02:38,670
Then we're going to create a method called Reset.

33
00:02:38,850 --> 00:02:52,750
Random takes and self and it's going to can make a print statement saying reset seeing random number.

34
00:02:53,010 --> 00:03:00,680
And then we just need to reset it so we can say sauf rant choice is equal to and it's the same come

35
00:03:00,680 --> 00:03:05,890
in because it's a random number random integer between 0 and 10.

36
00:03:06,020 --> 00:03:11,600
So that will go ahead and grab the current value of the ranch choice attribute and reset it to a random

37
00:03:11,600 --> 00:03:13,060
integer.

38
00:03:13,110 --> 00:03:19,410
Then finally we are going to create the guess method is basically part of the game.

39
00:03:19,830 --> 00:03:22,570
So we need to do here is first grab a user guess.

40
00:03:22,630 --> 00:03:29,970
So we create a variable called ease or guess and we'll set that as the input and we'll just ask for

41
00:03:29,980 --> 00:03:37,830
please input a random number.

42
00:03:37,860 --> 00:03:39,490
Sure there's a space there.

43
00:03:39,570 --> 00:03:41,900
And remember this is going to return a string.

44
00:03:42,150 --> 00:03:49,620
So we can just go ahead and cast it as an integer right now by wrapping that in The I.A. function.

45
00:03:49,810 --> 00:04:01,890
Then we will say if the user gets is equal to our current Rande choice so self-taught Rande choice then

46
00:04:01,890 --> 00:04:12,070
we will print correct else we will print wrong guess.

47
00:04:12,250 --> 00:04:16,570
So that's the simplest way you can create this guessing game just taking an input and then do a comparison

48
00:04:16,570 --> 00:04:21,950
here and we're going to run this and see what happens when you create a guessing game.

49
00:04:22,000 --> 00:04:26,860
So create a new guessing game and let's go ahead and see what our random choices.

50
00:04:26,860 --> 00:04:29,020
So random choice is zero.

51
00:04:29,250 --> 00:04:33,830
If we reset the random choice and see what around choices again looks like it's 10.

52
00:04:33,850 --> 00:04:35,350
So looks like that is working.

53
00:04:35,380 --> 00:04:41,050
If we ran this recent random again then we get four etc. so should be constantly changing and since

54
00:04:41,050 --> 00:04:43,450
it's random You may get the same random number twice in a row.

55
00:04:43,450 --> 00:04:44,440
Keep that in mind.

56
00:04:44,780 --> 00:04:52,690
Now let's play the guessing game so we will say gee I guess run this in a random number.

57
00:04:52,690 --> 00:04:56,100
We know it's four so let's put in something wrong first three.

58
00:04:56,140 --> 00:04:57,700
And it says run yes.

59
00:04:57,760 --> 00:05:02,890
And if you were to run this again and input for the correct value then it says correct.

60
00:05:02,890 --> 00:05:03,960
Perfect.

61
00:05:03,970 --> 00:05:09,400
So now let's add in some logic that will help the user for their next guess to say if it's higher or

62
00:05:09,400 --> 00:05:10,230
lower.

63
00:05:10,270 --> 00:05:11,860
So instead of else here.

64
00:05:12,160 --> 00:05:16,540
Well instead of just printing wrong guess we'll have another set of control flow.

65
00:05:17,050 --> 00:05:31,590
We will say if the user gets is less then the rand choice will Prince Brong guess higher

66
00:05:34,120 --> 00:05:46,120
else will say Prince wrong guess lower and we can rerun this and now it was restart another guessing

67
00:05:46,120 --> 00:05:47,410
game.

68
00:05:47,410 --> 00:05:50,910
So we can check the rand choice before we actually start the game.

69
00:05:51,310 --> 00:05:53,370
Looks like a ranch choice is zero.

70
00:05:53,590 --> 00:05:59,690
So now let's initiate our game by guessing and it's going to ask us to put around the number.

71
00:05:59,770 --> 00:06:03,700
We'll go with five which is purposely too high and it's going to go slower.

72
00:06:03,700 --> 00:06:04,090
Perfect.

73
00:06:04,090 --> 00:06:10,250
So now if we say guess we guessed all right answer which is zero.

74
00:06:10,350 --> 00:06:11,190
It says correct.

75
00:06:11,220 --> 00:06:13,750
That's all you had to do for that guessing again.

76
00:06:13,920 --> 00:06:20,370
The key thing to note here is the use of self when referencing the attributes that belong to this class

77
00:06:20,460 --> 00:06:25,140
and the other thing to notice here is that you can still create attributes even if your user doesn't

78
00:06:25,140 --> 00:06:26,610
define them.

79
00:06:26,880 --> 00:06:27,440
All right.

80
00:06:27,600 --> 00:06:30,350
Hopefully well on that and we'll see at the next lesson.

