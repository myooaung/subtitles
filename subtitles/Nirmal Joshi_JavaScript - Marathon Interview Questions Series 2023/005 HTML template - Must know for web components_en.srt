1
00:00:07,880 --> 00:00:13,310
If you observe the original component we want, which has this beautiful interface.

2
00:00:13,520 --> 00:00:17,570
Certainly it will need a lot of HTML and CSS.

3
00:00:18,440 --> 00:00:22,490
Now the code you see where we have used the inner edge HTML.

4
00:00:22,610 --> 00:00:30,380
That's the place where we need to write the HTML and CSS required for the entire component, which is

5
00:00:30,380 --> 00:00:31,670
very impractical.

6
00:00:32,540 --> 00:00:40,850
Ideally the HTML and CSS, that is the design or interface of the component should be written separately

7
00:00:40,850 --> 00:00:42,590
and we assign it later.

8
00:00:43,340 --> 00:00:48,140
We actually define a template to write the design of the component.

9
00:00:48,840 --> 00:00:53,100
When I say design, I mean the HTML and CSS.

10
00:00:53,130 --> 00:00:54,540
That is the interface.

11
00:00:54,540 --> 00:01:00,930
Like in this component, we need an image, a button, some text, etc..

12
00:01:01,800 --> 00:01:05,430
So let's create a template first for the existing component.

13
00:01:05,430 --> 00:01:11,490
But before we start it in JavaScript, you must know a template tag.

14
00:01:12,060 --> 00:01:17,370
So let me separately explain what a template tag is with a practical example.

15
00:01:17,850 --> 00:01:22,920
As the name says, this tag allows you to define the HTML template.

16
00:01:23,280 --> 00:01:30,960
Template means there is a design which you can use by making a copy or clone of it.

17
00:01:31,500 --> 00:01:39,420
Let me open a temp html file here and add some prerequisite HTML with exclamation tab.

18
00:01:40,230 --> 00:01:45,360
Let me add the script tag here and also an H1.

19
00:01:46,620 --> 00:01:50,610
Inside this, I'll say the template tag.

20
00:01:51,810 --> 00:01:54,840
Now let me add a button just after the H1.

21
00:01:55,770 --> 00:01:57,150
I'll say button here.

22
00:01:57,910 --> 00:02:01,450
And sure is the text I want on the button.

23
00:02:02,330 --> 00:02:04,910
Let me also have an on click event.

24
00:02:04,910 --> 00:02:08,060
When I click on the button, I want to show the template.

25
00:02:08,060 --> 00:02:13,790
So I'll say on Click Show Function, I'm going to call at a later stage.

26
00:02:14,300 --> 00:02:17,210
Let me also define the function in the script.

27
00:02:17,990 --> 00:02:24,800
So here I'll say function show and just have the parentheses and brackets.

28
00:02:25,710 --> 00:02:31,800
Now on a click of the button, I want to show some HTML and that HTML.

29
00:02:31,800 --> 00:02:34,080
I'm going to define inside the template.

30
00:02:34,080 --> 00:02:35,880
So I'll add a division here.

31
00:02:35,880 --> 00:02:36,840
I'll say div.

32
00:02:37,570 --> 00:02:41,710
And let me give an I.D. to this division so ID.

33
00:02:41,710 --> 00:02:42,760
I'll keep it.

34
00:02:42,760 --> 00:02:43,720
Log in.

35
00:02:44,950 --> 00:02:48,460
Now let me add a template with a division.

36
00:02:48,460 --> 00:02:55,960
I'll say template inside I'll say a div in which let me add a label.

37
00:02:56,750 --> 00:03:00,320
Log in and let me also add an input.

38
00:03:02,180 --> 00:03:03,830
Type equal to text.

39
00:03:05,580 --> 00:03:11,730
If you observe the output, the HTML written inside the template is not displayed.

40
00:03:12,060 --> 00:03:20,940
Remember template tag contains the HTML which is not rendered on the page load but is displayed only

41
00:03:20,940 --> 00:03:22,110
through JavaScript.

42
00:03:23,960 --> 00:03:29,510
Now when the button is clicked, we need to show the template design in the login division.

43
00:03:29,600 --> 00:03:34,460
So in the script section we have already given the function show.

44
00:03:34,640 --> 00:03:42,680
I will get the reference of login division using get element by ID in an object called login.

45
00:03:43,790 --> 00:03:48,470
I'll say const login is equal to document.

46
00:03:48,920 --> 00:03:54,140
Dot get element by id inside.

47
00:03:54,440 --> 00:03:56,120
I'll say login.

48
00:03:58,290 --> 00:03:59,760
Now I'll say Konst.

49
00:04:01,210 --> 00:04:10,810
Template is equal to document dot get element by id tmp.

50
00:04:11,590 --> 00:04:14,650
This is where I'm getting the reference of the template.

51
00:04:15,500 --> 00:04:26,390
As a temp and concert clone is equal to template dot content.

52
00:04:28,580 --> 00:04:30,890
Darth clone nor.

53
00:04:31,860 --> 00:04:33,930
In the brackets, I'll say true.

54
00:04:34,810 --> 00:04:39,730
I'm explaining these in a moment, but let's append this template to the division.

55
00:04:39,730 --> 00:04:42,640
I'll say log in, dot, append child.

56
00:04:43,900 --> 00:04:44,560
Clone.

57
00:04:45,570 --> 00:04:47,390
Clone is the copy of the template.

58
00:04:47,400 --> 00:04:55,050
As I mentioned, template is just the template, the design and when you want to apply it, you make

59
00:04:55,050 --> 00:04:57,300
a copy of it and then you add.

60
00:04:57,300 --> 00:05:06,840
So here we have created a clone using the template dot content dot clone method and that's a deep copy.

61
00:05:06,840 --> 00:05:12,960
When you say true, that means all the child nodes will also be included and then we are appending it

62
00:05:12,960 --> 00:05:14,310
to the division.

63
00:05:14,580 --> 00:05:18,480
Let's save this and click on the show button.

64
00:05:20,030 --> 00:05:24,470
And you can see that the content, the template is being displayed.

65
00:05:26,260 --> 00:05:31,180
Now let me run this score in the separate browser window and open the developer tool.

66
00:05:32,010 --> 00:05:34,860
You can see there is nothing inside the division.

67
00:05:35,130 --> 00:05:39,690
Now let me click on show and let's expand the division.

68
00:05:39,690 --> 00:05:47,340
Now we have the template added as a separate copy, but this is an individual division inside the main

69
00:05:47,340 --> 00:05:48,030
division.

70
00:05:48,960 --> 00:05:56,700
Clicking on the show button every time will create a clone of the template and add it to the dom.

71
00:05:59,340 --> 00:06:09,330
Instead of this fixed template in the HTML section, we can create a template at runtime using JavaScript

72
00:06:09,330 --> 00:06:13,350
with the help of document dart create element.

73
00:06:14,250 --> 00:06:17,550
Let me first try that here in this code.

74
00:06:18,770 --> 00:06:23,810
Here instead of get element, buy ID, I'll say create element.

75
00:06:25,120 --> 00:06:27,130
And let me create the template element.

76
00:06:27,140 --> 00:06:28,780
So I'll say template here.

77
00:06:30,310 --> 00:06:32,710
So this is creating a new template.

78
00:06:33,480 --> 00:06:40,950
Now here I'm going to say template dot in html is equal to bektic.

79
00:06:41,220 --> 00:06:44,700
Let me press enter and in between.

80
00:06:44,700 --> 00:06:47,730
I'm going to cut this cord.

81
00:06:48,800 --> 00:06:52,130
And paste it inside the inner HTML.

82
00:06:53,870 --> 00:06:57,080
Now let me remove the template from this place.

83
00:06:57,890 --> 00:07:00,680
Let's save this and run it again.

84
00:07:01,860 --> 00:07:03,930
And we still have the same output.

85
00:07:04,530 --> 00:07:12,840
Now in the previous call we had the template created with the HTML, whereas here we are using the JavaScript.

86
00:07:12,840 --> 00:07:16,170
That is, we are creating the template at runtime.

87
00:07:17,990 --> 00:07:22,680
You can still fine tune the score by avoiding the clone object.

88
00:07:22,700 --> 00:07:25,670
You don't need to create it separately this way.

89
00:07:25,700 --> 00:07:33,530
What you can do, you can just cut this line and paste it inside the append child and let's remove this

90
00:07:33,530 --> 00:07:34,580
const clone.

91
00:07:34,820 --> 00:07:39,770
Whether you write it in the previous way or you write it this way, it is one in the same thing.

92
00:07:39,800 --> 00:07:43,100
It's just that you are using lesser lines.

93
00:07:44,980 --> 00:07:46,960
Now let's talk about related questions.

94
00:07:46,960 --> 00:07:52,030
So the first question is, what is the purpose of the template tag?

95
00:07:52,880 --> 00:07:54,260
The purpose of the template.

96
00:07:54,260 --> 00:07:55,580
Tag is very simple.

97
00:07:55,880 --> 00:07:59,710
It's like you assign a value to a variable.

98
00:07:59,720 --> 00:08:05,450
But how about assigning a lot of HTML and CSS to a variable template?

99
00:08:05,450 --> 00:08:07,580
Does exactly the same job.

100
00:08:07,850 --> 00:08:14,390
It contains the html CSS page itself, which you can show as in when required.

101
00:08:15,220 --> 00:08:22,990
You just have to make sure that you use the clone node method, which basically creates the clone that

102
00:08:22,990 --> 00:08:24,640
is copy of a template.

103
00:08:24,640 --> 00:08:31,300
That itself is an element which you can add to any other parent element using append child.

