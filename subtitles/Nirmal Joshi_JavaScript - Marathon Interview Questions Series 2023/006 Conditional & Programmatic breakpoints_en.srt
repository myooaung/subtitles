1
00:00:00,060 --> 00:00:04,620
Let us now see how to use conditional and programmatic breakpoints.

2
00:00:05,370 --> 00:00:07,950
There are two related questions in this topic.

3
00:00:10,000 --> 00:00:16,420
We used breakpoints in the debugging pane directly, but we can put breakpoints in the program as well.

4
00:00:17,300 --> 00:00:24,830
It is same as setting a break point, but because it is set in the program, it is called the programmatic

5
00:00:24,830 --> 00:00:25,490
breakpoint.

6
00:00:26,900 --> 00:00:29,600
The syntax is the debugger keyword.

7
00:00:30,320 --> 00:00:34,430
Let's say I write the debugger command here inside the if condition.

8
00:00:35,370 --> 00:00:37,800
Save the file and click on the button.

9
00:00:38,880 --> 00:00:41,910
As you can see, the debugger paused here.

10
00:00:42,600 --> 00:00:50,250
It is advisable to write it in the code instead of the sources panel to avoid rewriting it because it

11
00:00:50,250 --> 00:00:52,290
is removed every time you refresh.

12
00:00:53,810 --> 00:01:00,740
The debugger statement is similar to console.log that we used to print logs in the console to inspect

13
00:01:00,740 --> 00:01:07,250
and evaluate our code, which we will see in the dedicated lecture for the console object.

14
00:01:07,910 --> 00:01:14,630
You can write multiple debugger statements as required as the program does not add the values.

15
00:01:15,050 --> 00:01:16,310
Let me solve this first.

16
00:01:17,290 --> 00:01:19,180
I'll put a line breakpoint here.

17
00:01:19,810 --> 00:01:22,480
Enter values, then click on the button.

18
00:01:23,390 --> 00:01:29,540
Once the debugger has paused in watch, I will write type of result.

19
00:01:31,000 --> 00:01:35,920
And press enter and one and two values are of string type.

20
00:01:36,670 --> 00:01:40,030
So in the code use part and while adding them.

21
00:01:42,140 --> 00:01:43,370
I will run it again.

22
00:01:43,370 --> 00:01:45,680
And this solves our problem.

23
00:01:46,490 --> 00:01:48,710
Now the type is converted to number.

24
00:01:49,520 --> 00:01:52,100
Let me resume the execution and see the result.

25
00:01:54,420 --> 00:02:00,240
Now, the next type that is the conditional breakpoints, are the breakpoints that will pause the execution

26
00:02:00,690 --> 00:02:05,010
only when the provided condition has a true the result.

27
00:02:06,750 --> 00:02:11,550
So the conditional breakpoint will not pause the execution if the condition is false.

28
00:02:12,510 --> 00:02:19,770
The same way we put a line breakpoint right click here and select Add conditional breakpoint from the

29
00:02:19,770 --> 00:02:20,160
list.

30
00:02:20,940 --> 00:02:26,340
This shows the dialog to add an expression or condition to check before parsing.

31
00:02:27,170 --> 00:02:33,710
I will say pause only if the value of and one is more than 15 and pressing enter.

32
00:02:35,040 --> 00:02:37,320
This sets a conditional breakpoint.

33
00:02:38,010 --> 00:02:41,430
Now, let me give values and click on ADD.

34
00:02:42,660 --> 00:02:45,630
It did not pass because the condition was not fulfilled.

35
00:02:46,530 --> 00:02:50,370
If I you for example, 18 for N1 and five for N2.

36
00:02:51,620 --> 00:02:53,660
Now you see that it poses.

37
00:02:54,830 --> 00:02:57,830
So this breakpoint depends on the condition to pass.

38
00:02:59,850 --> 00:03:02,310
Let us now discuss about related questions.

39
00:03:03,440 --> 00:03:06,920
The first question is how does the programmatic breakpoint work?

40
00:03:07,550 --> 00:03:13,310
So programmatic breakpoints are set using debugger statements in the code like we used here.

41
00:03:13,970 --> 00:03:17,270
The debugger pauses when it finds this statement.

42
00:03:17,570 --> 00:03:24,440
If the debugging is not enabled, that is developer tool is not open, then debugger statement has no

43
00:03:24,440 --> 00:03:24,860
effect.

44
00:03:25,010 --> 00:03:26,090
It will not work.

45
00:03:28,350 --> 00:03:31,710
The second question is how to place a conditional breakpoint.

46
00:03:32,750 --> 00:03:39,500
So as we did here, right click here and select Add conditional breakpoint from the list.

47
00:03:40,310 --> 00:03:45,740
This shows the dialog to add an expression or condition to check before pausing.

48
00:03:46,840 --> 00:03:49,090
You any condition here and press enter.

49
00:03:50,280 --> 00:03:52,560
This sets a conditional breakpoint.

