WEBVTT
1
00:00:00.470 --> 00:00:01.190
Hello everyone.

2
00:00:01.609 --> 00:00:05.450
In this section we are going to try the reverse number program.

3
00:00:06.020 --> 00:00:13.400
Using the same program, you can achieve one more solution that is finding a number is palindrome or

4
00:00:13.400 --> 00:00:13.730
not.

5
00:00:14.940 --> 00:00:17.010
Remember to reverse a number.

6
00:00:17.280 --> 00:00:19.740
We are not using any string operation.

7
00:00:20.490 --> 00:00:26.010
Rather, we will apply maths and logic together to reverse a number.

8
00:00:26.880 --> 00:00:29.130
So let's understand the problem first.

9
00:00:29.400 --> 00:00:35.670
When we run the code, we expect that the programme will ask the user to enter a number.

10
00:00:36.540 --> 00:00:41.280
For example, the user enters 2345.

11
00:00:42.150 --> 00:00:43.530
Then the output should be.

12
00:00:44.570 --> 00:00:46.880
5432.

13
00:00:46.880 --> 00:00:48.140
That is the number.

14
00:00:48.320 --> 00:00:54.260
User enter was 2345 and the output is five, four, three, two.

15
00:00:54.320 --> 00:00:56.090
That is the number is reversed.

16
00:00:57.590 --> 00:01:03.890
Let's understand the basics, how to achieve the solution, and then will also try to understand the

17
00:01:03.890 --> 00:01:04.940
pseudocode of it.

18
00:01:05.600 --> 00:01:13.460
Now, because we are not allowed to use any string functions and pure logic only, we will have to use

19
00:01:13.700 --> 00:01:16.640
arithmetic operators to reverse the number.

20
00:01:17.660 --> 00:01:23.630
Let's see, two, three, four, five is the number which we are supposed to reverse.

21
00:01:24.680 --> 00:01:28.310
Now the numeric system, the use has the base of ten.

22
00:01:29.210 --> 00:01:31.400
Now we want to reverse the number.

23
00:01:31.760 --> 00:01:35.630
So now the last number you see in two, three, four, five is five.

24
00:01:36.410 --> 00:01:38.360
So how did you get this number five?

25
00:01:40.270 --> 00:01:43.810
If you use the modulus, that is percentage on the number.

26
00:01:44.020 --> 00:01:51.160
That is if I write two, three, four or five modulus ten, then because the remainder will be filed

27
00:01:51.160 --> 00:01:55.090
in this number, we will get five as a separate number.

28
00:01:55.750 --> 00:02:00.340
Now next step is we need to remove five from two, three, four, five.

29
00:02:00.580 --> 00:02:05.770
So for that, we can use two, three, four, five divided by ten.

30
00:02:06.610 --> 00:02:12.970
When we do this, five will be removed from this and it will remain only two, three and four.

31
00:02:13.750 --> 00:02:15.970
Now the number is two, three, four.

32
00:02:16.780 --> 00:02:25.060
And if we do the same process, that is two, three, four, modulus ten, then the remainder will be

33
00:02:25.060 --> 00:02:25.540
four.

34
00:02:26.380 --> 00:02:34.180
But the main question is how will we join this previous remainder five and this new remainder four?

35
00:02:34.180 --> 00:02:36.460
Because now we want 54.

36
00:02:37.120 --> 00:02:43.090
For that, if we multiply this previous remainder, that is five into ten.

37
00:02:43.540 --> 00:02:48.760
And if we add this new remainder that is four, then it will make sense.

38
00:02:49.630 --> 00:02:54.340
This kind of operation we will do till the number is more than zero.

39
00:02:55.490 --> 00:02:57.840
Let's try this in pseudocode.

40
00:02:58.040 --> 00:03:01.790
And then again, we will try to understand the entire flow.

41
00:03:02.660 --> 00:03:10.310
So first thing I will use num variable where there will be an input from the user for reverse number.

42
00:03:10.520 --> 00:03:18.830
I take one variable and of course for the remainder I take one more variable and all variables we initialize

43
00:03:18.830 --> 00:03:19.670
with zero.

44
00:03:19.670 --> 00:03:22.600
That is both RTV and RDM.

45
00:03:22.850 --> 00:03:23.840
We make it zero.

46
00:03:24.860 --> 00:03:26.600
Now we want to put a loop.

47
00:03:27.410 --> 00:03:31.190
It will be till number is greater than zero.

48
00:03:31.490 --> 00:03:34.760
So the loop will go till the number is more than zero.

49
00:03:35.750 --> 00:03:42.470
Now, as we discussed, to take the remainder first thing, what we will do is will take RBM is equal

50
00:03:42.470 --> 00:03:44.950
to the number modulus ten.

51
00:03:45.650 --> 00:03:51.590
Let's write all the lines first of all, and then we will understand the steps we discussed earlier

52
00:03:51.590 --> 00:03:52.640
in the logic part.

53
00:03:53.510 --> 00:03:58.820
Assume that when the code is run, NUM will have two, three, four and five.

54
00:03:58.970 --> 00:04:01.400
Now we have this two, three, four, five.

55
00:04:01.730 --> 00:04:07.970
When the program goes inside this loop, first thing, two, three, four, five, modulus ten.

56
00:04:08.180 --> 00:04:09.950
So RTM will be five.

57
00:04:10.760 --> 00:04:15.830
The next thing is, as we discussed, that we need to add the previous and the new remainder.

58
00:04:16.250 --> 00:04:18.190
So what will we do?

59
00:04:18.200 --> 00:04:23.780
We will see the reverse number we multiplied by ten and also add the remainder.

60
00:04:23.780 --> 00:04:32.210
Now initially reversed number RTV is zero zero and 210 will be zero only plus RTM.

61
00:04:32.210 --> 00:04:35.060
So five will be added to RTV.

62
00:04:35.180 --> 00:04:36.620
Now RTV is five.

63
00:04:37.070 --> 00:04:40.190
So variable num will be two, three, four.

64
00:04:40.190 --> 00:04:41.960
That is 234.

65
00:04:42.770 --> 00:04:46.130
The next thing is two, three, four, modulus ten.

66
00:04:46.250 --> 00:04:48.740
So RDM will have four in it.

67
00:04:49.850 --> 00:04:51.980
We already have ATV as fire.

68
00:04:52.190 --> 00:04:57.020
So fire into ten is 50 plus four, so it'll become 54 now.

69
00:04:57.830 --> 00:05:00.830
Again, we divide the number, we make it 23.

70
00:05:01.640 --> 00:05:03.080
So number is 23.

71
00:05:03.080 --> 00:05:08.180
Now it goes on this line where 23 modulus ten.

72
00:05:09.240 --> 00:05:11.610
Three will be in R.E.M. now.

73
00:05:12.760 --> 00:05:17.200
So 54 into ten plus three.

74
00:05:18.460 --> 00:05:21.660
This is how it goes till the end.

75
00:05:21.670 --> 00:05:29.140
That is, unless the number doesn't reach to zero at the end, we just display the reverse number.

76
00:05:30.200 --> 00:05:36.230
That is also one more program we have achieved here, and that is to check the number is palindrome

77
00:05:36.230 --> 00:05:36.800
or not.

78
00:05:38.040 --> 00:05:43.950
If a number is seen from left and right, then it is a palindrome number.

79
00:05:44.070 --> 00:05:45.960
For example, one, two, one.

80
00:05:46.410 --> 00:05:55.440
If you read this number from left to right or right to left, it is 121 only in the above code.

81
00:05:55.560 --> 00:06:00.480
If you compare the original number and the reverse, that is the final reverse number.

82
00:06:01.260 --> 00:06:05.490
If they both are same, then the number is a palindrome number.

83
00:06:05.640 --> 00:06:06.930
Otherwise it is not.

84
00:06:07.500 --> 00:06:14.340
Of course, in the above code we will have to take an extra variable for the original number as we are

85
00:06:14.340 --> 00:06:17.520
dividing number so it loses its original value.

86
00:06:18.510 --> 00:06:23.430
I leave it to you to practice on palindrome, but you can leave comments if you have any doubts.

87
00:06:24.450 --> 00:06:27.270
Now let's try it practically in the code editor.

88
00:06:29.200 --> 00:06:31.180
I will use variable name.

89
00:06:32.170 --> 00:06:39.430
Of course I'm going to convert it into integer and I use a statement which takes an input from the user.

90
00:06:45.600 --> 00:06:51.480
I declared two more variables as we have discussed in pseudocode, reverse and remainder.

91
00:06:53.640 --> 00:06:54.510
We'll put a loop.

92
00:06:55.580 --> 00:06:56.870
Where I'll say while.

93
00:06:58.760 --> 00:07:00.290
Number is greater than zero.

94
00:07:01.810 --> 00:07:04.710
Remainder is equal to number modulus ten.

95
00:07:07.030 --> 00:07:10.990
Then reverse is equal to reverse into ten plus remainder.

96
00:07:14.680 --> 00:07:23.110
So here I am using part end in JavaScript because when you divide the number it will return our decimal

97
00:07:23.110 --> 00:07:23.500
value.

98
00:07:24.220 --> 00:07:28.210
So we want to make sure that all the decimal points are avoided.

99
00:07:28.300 --> 00:07:30.760
So I'm using the parts in here.

100
00:07:31.820 --> 00:07:34.790
And at the end we print the value of Adobe.

101
00:07:35.940 --> 00:07:38.250
Let's try to run this and see what happens.

102
00:07:42.600 --> 00:07:43.170
Let us enter.

103
00:07:43.170 --> 00:07:44.400
Two, three, four, five.

104
00:07:47.870 --> 00:07:50.120
As you can see, the output is.

105
00:07:51.180 --> 00:07:52.980
Five, four, three, two.

106
00:07:53.940 --> 00:07:55.830
This is how you reverse a number.

107
00:07:56.010 --> 00:08:02.430
Remember, we have not used any string functions, any ready string functions to reverse the number.

108
00:08:02.820 --> 00:08:07.770
There are ways where you can convert the number into string, but that's an easier way.

109
00:08:08.100 --> 00:08:15.840
Whereas this practice is this allows you to think lot of possibilities with operators as well.

