1
00:00:10,090 --> 00:00:13,360
Now, let's implement the bouncing in this goal.

2
00:00:14,210 --> 00:00:19,630
Again, I'm going to take a function seeing the bounce count.

3
00:00:21,400 --> 00:00:27,160
Let's also copy at least these two lines and pasted here.

4
00:00:27,850 --> 00:00:34,780
And of course, I'm going to remove this D.C. empty and keep D.C. empty here.

5
00:00:34,780 --> 00:00:35,890
Also, I'll say the edge.

6
00:00:36,220 --> 00:00:43,090
These are the objects we have already declared here in the previous lectures, and here I'll see the

7
00:00:43,090 --> 00:00:43,900
bounce count.

8
00:00:45,010 --> 00:00:46,390
Again, the code is similar.

9
00:00:47,500 --> 00:00:56,890
Now, when it comes to bombs, the logic was that it also executes, for example, after every 500 milliseconds.

10
00:00:57,460 --> 00:01:05,379
But that is one added condition and that condition is if in the last five hundred milliseconds, if

11
00:01:05,379 --> 00:01:09,550
you try to move the mouse, the waiting period is reset.

12
00:01:10,830 --> 00:01:18,870
Let me again emphasize on the explanation, for example, the mouse model should be fired after every

13
00:01:18,870 --> 00:01:24,510
10 minutes, provided that in last 10 minutes, the mouse was not moved.

14
00:01:25,920 --> 00:01:32,850
It means, let's say, for example, on the eighth minute, if the mouse is moved again, it has to

15
00:01:32,850 --> 00:01:34,650
wait for 10 more minutes.

16
00:01:36,730 --> 00:01:43,180
Right now, we are going to implement the 500 millisecond situation with the bounce as well, but you

17
00:01:43,180 --> 00:01:47,170
will see that the rebounds will keep on resetting the weight.

18
00:01:47,380 --> 00:01:52,710
So that will be even so the count will be even lesser compared to 30.

19
00:01:53,620 --> 00:02:02,440
And for that, we'll also take one variable because in case of Dearborn's, if the mouse is moved and

20
00:02:02,830 --> 00:02:10,979
it is not to execute, then the timer needs to reset, the timer needs to clear and to clear the timer.

21
00:02:10,990 --> 00:02:12,610
We need an object.

22
00:02:12,850 --> 00:02:16,360
So I'll say, for example, the bounce timer.

23
00:02:18,880 --> 00:02:26,080
And this timer is going to contain the reference of the time in which we created also said time out

24
00:02:26,650 --> 00:02:33,040
will have a function and after every five hundred milliseconds, something is going to execute.

25
00:02:34,160 --> 00:02:36,020
But still, the purpose is not solved.

26
00:02:36,470 --> 00:02:37,730
Why is it not hard?

27
00:02:38,030 --> 00:02:44,840
Because this is more or less like total, where after every 500 milliseconds, it's going to execute

28
00:02:44,840 --> 00:02:45,380
something.

29
00:02:46,360 --> 00:02:49,270
We want that, first of all.

30
00:02:50,320 --> 00:02:54,670
If that is a timer, then clear the timer.

31
00:02:54,700 --> 00:03:02,800
We are using timeout as a clear timeout and the D-dimer, if it is existing, we do not want that timer.

32
00:03:03,310 --> 00:03:04,300
Remove the timer.

33
00:03:04,310 --> 00:03:07,390
That is the first thing we are going to do in the bombs.

34
00:03:07,840 --> 00:03:08,320
Why?

35
00:03:08,740 --> 00:03:10,960
Because the mouse is moved.

36
00:03:11,410 --> 00:03:12,400
We are clearing.

37
00:03:13,420 --> 00:03:18,730
Now, let me just shift this inside the set time out.

38
00:03:20,070 --> 00:03:23,190
Now, let me just call this the bounce count function here.

39
00:03:24,810 --> 00:03:29,190
Let's check the output, and again, I'll explain how this entire process is happening.

40
00:03:29,520 --> 00:03:30,660
Let me just refresh.

41
00:03:33,080 --> 00:03:33,980
And you see that.

42
00:03:34,920 --> 00:03:38,970
The throttle is nine and bounds is five, in normal count is ninety three.

43
00:03:39,360 --> 00:03:42,990
So now you can imagine the difference between the execution.

44
00:03:43,830 --> 00:03:51,090
You see that after five hundred milliseconds, only the event is executed and provided that within that

45
00:03:51,090 --> 00:03:54,840
five hundred milliseconds range, I did not move the mouse.

46
00:03:54,990 --> 00:04:00,300
So I moved the mouse stop for five hundred milliseconds and then I move it.

47
00:04:00,840 --> 00:04:06,110
But let's say I keep on moving the mouse, then it is not going to execute the rebound.

48
00:04:06,120 --> 00:04:13,020
So you see that because five hundred milliseconds span is something which it is waiting for.

49
00:04:13,290 --> 00:04:19,740
And let me just stop here just 500 milliseconds, and then it has started incrementing.

50
00:04:21,050 --> 00:04:27,920
Let me go back to the cold again, let me explain what is happening here when you move the mouse.

51
00:04:28,460 --> 00:04:34,580
The first thing is we are clearing the timer, if at all that is any assumed that there was a timer

52
00:04:34,580 --> 00:04:38,570
or assume that there is no timer existing in any case.

53
00:04:38,840 --> 00:04:41,910
First of all, it resets the timer.

54
00:04:41,930 --> 00:04:45,380
That means, for example, you are 500 milliseconds.

55
00:04:45,380 --> 00:04:46,460
Timer is set.

56
00:04:46,850 --> 00:04:52,670
The moment the mouse is moved, the bounce count is executed, the timer is reset.

57
00:04:53,420 --> 00:05:00,380
Then it set the timer, the new timer, and that has the counter incremental as well.

58
00:05:01,220 --> 00:05:07,160
Now this said, timeout will be executed only after 500 milliseconds.

59
00:05:08,460 --> 00:05:13,200
Now, if your mouse is not moved, then this will be executed.

60
00:05:13,350 --> 00:05:18,270
But imagine that before this set timeout is executed, your mouse was moved.

61
00:05:18,570 --> 00:05:21,540
Naturally, it clears the timer again.

62
00:05:21,660 --> 00:05:26,400
It sets the new timer and it is to wait for 500 milliseconds.

63
00:05:26,550 --> 00:05:32,310
If you move the mouse before 500 milliseconds, it's going to again clear the timer.

64
00:05:33,270 --> 00:05:37,050
This is the logic behind implementing the bouncing.

65
00:05:37,740 --> 00:05:44,820
There are many ways there are various ways of programming and approach, setting the timer, setting

66
00:05:44,820 --> 00:05:45,540
the interval.

67
00:05:46,050 --> 00:05:52,020
This is one of the way commonly used, and this is what I have explained here with the syntax in the

68
00:05:52,020 --> 00:05:59,100
forthcoming lectures, we are going to see the use cases, the practical implementation, a small scenario

69
00:05:59,280 --> 00:06:04,980
to see in which case you use throttling and in which case you use the bouncing.

