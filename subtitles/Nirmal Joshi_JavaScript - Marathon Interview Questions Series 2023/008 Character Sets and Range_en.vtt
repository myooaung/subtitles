WEBVTT
1
00:00:01.200 --> 00:00:08.670
In this section, we are going to discuss about character sets and range used with regular expressions.

2
00:00:10.160 --> 00:00:17.570
Before we begin any discussion, there is an important note I need to mention that is, in this section

3
00:00:17.570 --> 00:00:25.790
we are going to see the basic ways and syntax of sets and ranges used in various combinations along

4
00:00:25.790 --> 00:00:27.620
with character classes.

5
00:00:27.620 --> 00:00:34.040
So we will be trying sets and ranges in detail with advanced implementation.

6
00:00:34.040 --> 00:00:41.930
Once we start working with character classes in this section, we will just get familiar with most common

7
00:00:41.930 --> 00:00:48.590
and simple usage and of course syntax of using sets and range.

8
00:00:48.590 --> 00:00:56.150
So let's begin with character sets to search for W and I in the string.

9
00:00:56.150 --> 00:00:57.830
So let's write the code.

10
00:00:57.830 --> 00:01:02.720
Let's declare a variable where I say let str is equal to.

11
00:01:03.560 --> 00:01:05.990
I wonder why it's windy.

12
00:01:06.020 --> 00:01:08.210
Now I'm going to define the pattern.

13
00:01:08.720 --> 00:01:13.910
So I will mention the W and I in square brackets.

14
00:01:14.390 --> 00:01:21.740
Of course I'm going to say slash G for global search and then let's try to that log.

15
00:01:23.830 --> 00:01:26.290
And we are using the match method.

16
00:01:26.680 --> 00:01:27.940
Let's run the code.

17
00:01:29.800 --> 00:01:35.060
As you can see, because we have given slash G that is global search.

18
00:01:35.080 --> 00:01:40.390
It searched three WS and two A's in the entire string.

19
00:01:40.660 --> 00:01:49.210
So by giving W.I in square bracket, we are giving set of characters to be searched in a given string.

20
00:01:49.480 --> 00:01:51.770
Let's also search for character.

21
00:01:51.790 --> 00:01:52.450
Oh.

22
00:01:52.660 --> 00:01:55.800
So in the same code with w i.

23
00:01:55.800 --> 00:01:57.340
I will also add.

24
00:01:57.340 --> 00:01:57.670
Oh.

25
00:01:57.670 --> 00:01:58.150
Here.

26
00:01:58.150 --> 00:01:59.770
Let's run the code again.

27
00:02:00.590 --> 00:02:06.500
So you can add a set of characters you want to search in square brackets.

28
00:02:07.370 --> 00:02:09.229
Let's take one more example.

29
00:02:09.440 --> 00:02:13.250
Let's try to search for words, starting with W.

30
00:02:14.130 --> 00:02:17.130
Second character can be I or.

31
00:02:18.330 --> 00:02:21.630
So I will say I o in square bracket.

32
00:02:21.960 --> 00:02:23.520
And then n.

33
00:02:24.390 --> 00:02:25.710
Let's run the code.

34
00:02:26.870 --> 00:02:29.480
Of course, it is not returning the entire world.

35
00:02:29.600 --> 00:02:35.210
If you want it, then you can add slash W plus character class.

36
00:02:35.210 --> 00:02:39.170
But we will try it when we learn the topic of character classes.

37
00:02:39.380 --> 00:02:43.280
The next topic I want to discuss is character range.

38
00:02:43.520 --> 00:02:49.270
Again, we use square brackets only to specify range of characters.

39
00:02:49.280 --> 00:02:53.600
So now let's try to quickly check range using square brackets.

40
00:02:53.600 --> 00:02:58.850
For example, I want to search for characters between I and O.

41
00:02:58.880 --> 00:03:09.380
Remember I'm giving range that is starting from a till or whichever character is between I and O that

42
00:03:09.380 --> 00:03:11.120
we want to search.

43
00:03:11.120 --> 00:03:14.540
So the pattern will be in the square bracket.

44
00:03:14.540 --> 00:03:16.450
I will say I dash.

45
00:03:16.460 --> 00:03:19.160
Oh, let's try to run this.

46
00:03:20.170 --> 00:03:24.910
So now it has returned all the characters between I and oh.

47
00:03:25.330 --> 00:03:26.380
One more example.

48
00:03:26.380 --> 00:03:28.330
We can try with numbers also.

49
00:03:28.690 --> 00:03:31.060
Of course, the search is of characters.

50
00:03:31.060 --> 00:03:34.330
That is no numeric operation getting executed here.

51
00:03:35.050 --> 00:03:39.520
Let's try to find all the numbers in the string between one and five.

52
00:03:40.420 --> 00:03:43.630
So we'll create a string which has numbers.

53
00:03:45.230 --> 00:03:52.940
Let's also declare the pattern where I will say one five in the square brackets and of course, the

54
00:03:52.940 --> 00:03:54.830
slash G for global search.

55
00:03:55.620 --> 00:03:58.740
Let's try to console.log with the match method.

56
00:04:02.550 --> 00:04:10.140
And now you see that all the numbers between one and five are return that is nine, eight and seven

57
00:04:10.140 --> 00:04:13.800
or even six, but that is not in the list of output.

58
00:04:14.860 --> 00:04:22.720
One more example where we can try to find all the capital letters using this range syntax.

59
00:04:23.140 --> 00:04:26.470
In that case, the pattern will look like this.

60
00:04:27.950 --> 00:04:34.070
Let's try to create a string variable where we have few upper and lower cases.

61
00:04:34.950 --> 00:04:44.670
And of course, let's create a pattern where I will say square brackets, a dash z slash G.

62
00:04:46.160 --> 00:04:49.910
Let's use the match method and run the code.

63
00:04:50.970 --> 00:04:55.860
So now you see that all the characters return are the capital letters.

64
00:04:57.150 --> 00:05:03.540
So the square bracket can be used to specify a set of characters, or you can give a range.

65
00:05:03.540 --> 00:05:08.880
When you say a dash between two characters inside the square brackets.

