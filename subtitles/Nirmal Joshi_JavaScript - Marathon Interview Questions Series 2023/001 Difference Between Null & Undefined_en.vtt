WEBVTT
1
00:00:00.060 --> 00:00:07.260
In this section, we are discussing a question that is what is the difference between null and undefined?

2
00:00:07.860 --> 00:00:14.850
The category is the JavaScript language itself, and we will see three related questions which we can

3
00:00:14.850 --> 00:00:16.470
relate to this topic.

4
00:00:17.070 --> 00:00:21.540
All right, so in all programming languages, you see null values.

5
00:00:21.870 --> 00:00:23.490
But JavaScript is unique.

6
00:00:23.640 --> 00:00:27.270
In this case, it has both undefined and null.

7
00:00:27.600 --> 00:00:31.560
And believe me, it's really confusing for even experienced developers.

8
00:00:32.130 --> 00:00:33.810
So let's begin with undefined.

9
00:00:34.140 --> 00:00:38.190
Most of the languages have data types for variables.

10
00:00:38.760 --> 00:00:45.270
JavaScript also has, but at the time of variable declaration, there is no type decided.

11
00:00:45.690 --> 00:00:50.880
Then after the value is assigned to a variable, it decides the data type.

12
00:00:52.680 --> 00:01:00.060
So before any value is assigned to a variable in JavaScript, the variable contains undefined.

13
00:01:00.240 --> 00:01:04.080
Let's run a sample code to understand it with more clarity.

14
00:01:04.260 --> 00:01:09.900
Let's say I declared a variable x and I will simply try to display the value.

15
00:01:10.080 --> 00:01:17.310
Not only that, I'm going to also display the type of X type of a kind of operator, which gives you

16
00:01:17.310 --> 00:01:21.510
the type of the variable that is the data type of a variable.

17
00:01:21.690 --> 00:01:23.610
Let's run the code and see what happens.

18
00:01:26.010 --> 00:01:34.650
As you see that the value of X is undefined and the type of X is also undefined.

19
00:01:34.950 --> 00:01:42.600
So undefined is a data type as well in JavaScript because the X doesn't have any value at this moment.

20
00:01:42.690 --> 00:01:48.810
The value, of course, it will display is undefined, but the data type is also undefined.

21
00:01:49.140 --> 00:01:54.420
Let me just assign a value to X and I will rerun the code.

22
00:01:56.170 --> 00:02:03.730
Now you see that in the first case it displays the value and in second case it says it's a number now.

23
00:02:03.970 --> 00:02:11.770
So when you do not have any value assigned to a JavaScript variable, then it is going to be undefined.

24
00:02:12.010 --> 00:02:13.990
Now let's talk about NULL.

25
00:02:14.650 --> 00:02:18.220
NULL is exactly the same as other programming languages.

26
00:02:18.460 --> 00:02:19.870
NULL means nothing.

27
00:02:20.200 --> 00:02:27.640
When you have a variable or object which you want to make empty, then you assign null to a variable.

28
00:02:27.790 --> 00:02:32.110
Say for example, let x is equal to null.

29
00:02:32.800 --> 00:02:35.260
I will display the value of x here.

30
00:02:35.530 --> 00:02:41.560
So certainly it's going to display that the value of x is not the most amazing thing.

31
00:02:41.560 --> 00:02:50.320
Here is if I have another variable which contains undefined just in case and if you try to compare with

32
00:02:50.350 --> 00:02:51.070
equality.

33
00:02:51.070 --> 00:02:53.840
Operator I'm not seeing strict equality, right?

34
00:02:53.860 --> 00:02:54.490
Three equal.

35
00:02:54.490 --> 00:02:59.110
Two is strict equality in JavaScript, which checks both value and data type.

36
00:02:59.290 --> 00:03:02.050
But here we are using simply the comparison.

37
00:03:02.440 --> 00:03:10.540
Now, if I run the code, it is true because both undefined and null represent nothingness.

38
00:03:10.720 --> 00:03:17.920
But they contain different data type because undefined and null are different in terms of data type.

39
00:03:17.920 --> 00:03:23.320
So if I use the strict equality operator, you will see that now it says that it is false.

40
00:03:24.250 --> 00:03:27.190
Let's discuss related questions of this topic.

41
00:03:27.400 --> 00:03:31.570
The first question can be what is undefined in JavaScript?

42
00:03:31.690 --> 00:03:37.600
So which you already know now that a variable which is not assigned a value is undefined?

43
00:03:39.360 --> 00:03:48.690
The second question can be what will be the output of undefined double equal to null and undefined strict

44
00:03:48.690 --> 00:03:50.070
equality null?

45
00:03:50.640 --> 00:03:56.520
So we already know that when you compare undefined and null with two equal two sides, that is a simple

46
00:03:56.520 --> 00:03:57.240
comparison.

47
00:03:57.540 --> 00:04:01.470
It's going to return true and with three equal to sign.

48
00:04:01.470 --> 00:04:02.850
That is strict equality.

49
00:04:03.090 --> 00:04:07.200
It's going to say false because it also checks the data type.

50
00:04:07.200 --> 00:04:10.770
And as I mentioned, undefined itself is a data type.

51
00:04:10.920 --> 00:04:12.870
NULL is a primitive data type.

52
00:04:12.900 --> 00:04:14.490
NULL is not an object.

53
00:04:14.520 --> 00:04:16.310
NULL is a primitive data type.

54
00:04:16.320 --> 00:04:22.440
In case if you are using type of operator with null, it displays object, but that is actually incorrect

55
00:04:22.680 --> 00:04:23.580
from the beginning.

56
00:04:23.580 --> 00:04:27.390
In JavaScript, NULL is treated as a primitive data type.

57
00:04:29.080 --> 00:04:34.480
Third question can you explicitly assign undefined to a variable?

58
00:04:34.900 --> 00:04:41.140
Now here, when I say explicitly, that means can I assign a value undefined to a variable?

59
00:04:41.380 --> 00:04:47.110
Yes, you can, because undefined itself is a kind of keyword which you can use.

60
00:04:47.350 --> 00:04:49.420
Let me show you by example.

61
00:04:49.540 --> 00:04:53.140
I can say that x is equal to undefined.

62
00:04:53.980 --> 00:04:57.820
So when you say undefined, remember I'm not using any single quarter double code.

63
00:04:57.850 --> 00:04:58.110
Right?

64
00:04:58.120 --> 00:04:59.800
Otherwise it will be a string.

65
00:05:00.130 --> 00:05:05.570
But directly, when you say undefined, that means x actually is undefined.

66
00:05:05.570 --> 00:05:06.700
So we don't need that.

67
00:05:07.030 --> 00:05:13.390
But in case when you want to compare value then the values, undefined or not, then this keyword is

68
00:05:13.390 --> 00:05:14.290
useful for you.

69
00:05:14.590 --> 00:05:14.920
Right?

70
00:05:15.040 --> 00:05:19.750
So here I can say x just to show what is the value.

71
00:05:20.530 --> 00:05:22.720
So it will be undefined.

72
00:05:23.290 --> 00:05:31.240
So these are the few tricky topics, null and undefined, which commonly are asked when you go for interviews.

