WEBVTT
1
00:00:02.350 --> 00:00:06.440
In this section we are going to discuss about modifier M.

2
00:00:10.020 --> 00:00:15.450
Modifier M allows multi-line matching with this modifier.

3
00:00:15.480 --> 00:00:24.630
Anchors are also used, so when you use modifier M, it is used with any of the anchors that is carried

4
00:00:24.630 --> 00:00:25.020
or.

5
00:00:26.660 --> 00:00:30.140
Assume that you have three lines like this.

6
00:00:30.410 --> 00:00:31.640
Hello, Line one.

7
00:00:31.670 --> 00:00:32.150
Hello?

8
00:00:32.150 --> 00:00:32.990
Line two.

9
00:00:33.020 --> 00:00:34.280
Hello, Line three.

10
00:00:34.520 --> 00:00:42.680
If you want to search for Hello World existing at the beginning of each line, remember not at the very

11
00:00:42.680 --> 00:00:47.620
beginning or end of the entire string, but beginning of each line.

12
00:00:47.630 --> 00:00:50.930
Then you will use modifier M.

13
00:00:51.230 --> 00:00:52.890
Let's check it practically.

14
00:00:52.910 --> 00:00:59.390
I'm going to create a variable here MSG, and here I'm going to write.

15
00:00:59.390 --> 00:01:00.590
Hello, line one.

16
00:01:01.100 --> 00:01:05.600
Then I'm going to add Slash and then I'll say hello.

17
00:01:05.600 --> 00:01:11.390
Line two, slash DN And the last line is Hello, line three.

18
00:01:12.080 --> 00:01:15.890
So now this MSG variable has three lines.

19
00:01:16.670 --> 00:01:20.220
I have used slash PN for new line.

20
00:01:20.240 --> 00:01:28.250
Of course it can be slash R or template literal using tactic, which we will see in a moment.

21
00:01:28.820 --> 00:01:34.880
Now let's try to console.log a pattern where we just try to search the word Hello.

22
00:01:36.020 --> 00:01:37.280
Let's run the code.

23
00:01:38.480 --> 00:01:41.780
As you can see, only one hello is returned.

24
00:01:43.160 --> 00:01:53.210
Now let's apply the flag G and also use carrot anchor to see that Hello is at the beginning or not?

25
00:01:54.230 --> 00:01:55.550
Let's run the code.

26
00:01:56.390 --> 00:01:58.880
So it still says that only one.

27
00:01:58.880 --> 00:01:59.200
Hello.

28
00:01:59.210 --> 00:02:00.590
Word is there.

29
00:02:00.950 --> 00:02:05.390
Reason the search is not performed for each line.

30
00:02:05.630 --> 00:02:09.590
Now let's add modifier M and run the code again.

31
00:02:13.200 --> 00:02:21.000
Now because of M it started searching across all lines and now it is showing Hello three times.

32
00:02:22.350 --> 00:02:27.810
Remember, if you have even a single space after slash RN, it will not work.

33
00:02:28.650 --> 00:02:34.950
For example, let's add a space after first slash n and see the output.

34
00:02:39.770 --> 00:02:46.520
So now there are only two helos found because second line does not begin with Helo anymore.

35
00:02:47.480 --> 00:02:56.020
We can also use the ES6 template literal syntax for new lines where we include the string in back take.

36
00:02:56.030 --> 00:02:57.380
So let's try that.

37
00:03:03.300 --> 00:03:05.940
Still, the output will remain the same.

38
00:03:06.780 --> 00:03:14.250
The way we have checked for beginning of each line using carrot anchor, we can use the dollar anchor

39
00:03:14.250 --> 00:03:15.750
for the end of line.

40
00:03:15.960 --> 00:03:20.820
Let's change this string and end all the lines with a number.

41
00:03:21.390 --> 00:03:28.120
Let's also change the pattern where I want to check whether all lines and with a digit.

42
00:03:28.140 --> 00:03:34.140
So I will write slash D and dollar at the end.

43
00:03:34.890 --> 00:03:37.440
Let's run the code and see the output.

44
00:03:40.100 --> 00:03:46.850
So output shows that there are three lines ending with a digit and the digit is also returned in an

45
00:03:46.850 --> 00:03:47.360
array.

46
00:03:48.950 --> 00:03:53.570
Let's remove the digit from second line and run the code.

47
00:03:59.280 --> 00:04:02.370
Now it returns only to values.

48
00:04:03.390 --> 00:04:11.010
So this is how modifier or flag M can be used for multi line search along with anchors.

