WEBVTT
1
00:00:00.090 --> 00:00:04.890
In this lecture, we will learn about XDR or phage breakpoints.

2
00:00:05.800 --> 00:00:10.480
And the question will be, how does Exige r phage breakpoints work?

3
00:00:12.200 --> 00:00:16.880
Exit Asia is an abbreviation for SML SDP request.

4
00:00:17.940 --> 00:00:25.260
If you want to break the execution when the exits are, you are a request that is ATP request or a fetch

5
00:00:25.260 --> 00:00:29.820
API that the page requests has a specific string pattern.

6
00:00:30.150 --> 00:00:33.480
The exit jar or fetch breakpoints are used.

7
00:00:35.650 --> 00:00:38.830
Commonly known as exit your break points.

8
00:00:39.520 --> 00:00:45.730
It fetches the L and pauses when the debugger runs into the specified string pattern.

9
00:00:47.250 --> 00:00:53.850
This accepts a u r l request from the user, and it is fetched when the button is clicked.

10
00:00:54.780 --> 00:00:58.890
Let me go to the browser Opening the sources panel.

11
00:00:59.700 --> 00:01:02.970
The debugging pane shows different types of breakpoints.

12
00:01:03.990 --> 00:01:09.120
Here I will expand this exit are fetch breakpoints option.

13
00:01:10.220 --> 00:01:17.120
By default, this option appears which you can check if you want to break the execution of any requested

14
00:01:17.120 --> 00:01:17.600
you ordered.

15
00:01:19.260 --> 00:01:23.340
I will select this and enter the URL for Udemy.

16
00:01:24.790 --> 00:01:26.560
And now clicking this button.

17
00:01:27.560 --> 00:01:30.200
You see, the debugger paused here.

18
00:01:32.390 --> 00:01:35.510
Similarly let's try with Amazon dot com.

19
00:01:37.130 --> 00:01:40.820
And one more example of Google dot com.

20
00:01:42.430 --> 00:01:49.630
So the debugger pauses every time a u r l is fetched or requested because we have selected this option.

21
00:01:51.160 --> 00:01:52.390
And now let me show you.

22
00:01:52.630 --> 00:01:58.740
For pausing the execution only when a particular string is encountered for that.

23
00:01:59.110 --> 00:02:06.460
Let me refresh and click on this plus icon to add a you are to string where you want the debugger to

24
00:02:06.460 --> 00:02:06.910
pause.

25
00:02:07.920 --> 00:02:08.130
Now.

26
00:02:08.130 --> 00:02:08.750
Let's see.

27
00:02:08.789 --> 00:02:09.780
I want to pause.

28
00:02:09.810 --> 00:02:11.400
Only when that is.

29
00:02:11.550 --> 00:02:13.200
W w w in the u.

30
00:02:13.200 --> 00:02:13.560
R l.

31
00:02:14.860 --> 00:02:17.590
Pressing Enter and I will uncheck this option.

32
00:02:20.210 --> 00:02:25.430
And again I provide the URL of Udemy and click on the button.

33
00:02:26.630 --> 00:02:28.040
As soon as it found.

34
00:02:28.190 --> 00:02:28.580
W.

35
00:02:28.580 --> 00:02:28.850
W.

36
00:02:28.850 --> 00:02:29.360
W.

37
00:02:29.600 --> 00:02:30.410
It paused.

38
00:02:31.630 --> 00:02:39.310
But if I copy the u r l of this HDMI output file and now if I click fetch.

39
00:02:40.590 --> 00:02:42.480
The debugger does not pose.

40
00:02:44.090 --> 00:02:45.770
Let's add one more string here.

41
00:02:45.800 --> 00:02:50.690
I will say pause only if the u r l has m in it.

42
00:02:52.350 --> 00:02:56.220
This is like the previous one and again clicking on the button.

43
00:02:57.520 --> 00:02:59.680
Again, the debugger did not pass.

44
00:03:00.430 --> 00:03:04.930
But if I change this to Amazon and click again, it pauses.

45
00:03:05.650 --> 00:03:10.930
So this breakpoint pauses the execution only when it finds the specific string in it.

46
00:03:11.410 --> 00:03:16.390
If mentioned otherwise, you can also pause on every request.

47
00:03:16.570 --> 00:03:18.100
If this option is selected.

