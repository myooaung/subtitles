1
00:00:09,980 --> 00:00:17,390
In this coding exercise, we'll try to resolve a problem where you are supposed to find two words present

2
00:00:17,390 --> 00:00:18,470
in a string.

3
00:00:18,470 --> 00:00:23,030
That means you are going to find all double words in a string.

4
00:00:23,090 --> 00:00:30,320
For example, in a string like this is two times a string and two times test.

5
00:00:30,320 --> 00:00:32,119
That is test, test.

6
00:00:32,540 --> 00:00:36,380
It should find a a and test test.

7
00:00:36,950 --> 00:00:44,540
In this example, we will have to use a capturing group and back reference facility of regular expression.

8
00:00:46,020 --> 00:00:50,400
Because we will find a word in a string first and we'll check.

9
00:00:50,430 --> 00:00:54,330
Is it the same word found for next value or not?

10
00:00:54,330 --> 00:01:01,860
So we will capture the group using parentheses, and inside those parentheses we are going to put slash

11
00:01:01,860 --> 00:01:05,010
W plus there will be a space in between.

12
00:01:05,010 --> 00:01:06,600
And then the other word.

13
00:01:06,600 --> 00:01:08,160
So we'll use slash.

14
00:01:08,190 --> 00:01:16,380
As for space in between and again, the same word found using slash one for back reference.

15
00:01:16,380 --> 00:01:23,970
So the pattern will be parentheses, slash W plus slash s and slash one.

16
00:01:24,150 --> 00:01:28,290
This will also not work for the absolute desired result.

17
00:01:28,290 --> 00:01:35,640
So there will be a word boundary needed and we can use slash B for word boundary, but we will add it

18
00:01:35,640 --> 00:01:37,920
later on after watching the output.

19
00:01:37,920 --> 00:01:39,930
So let's begin the coding.

20
00:01:39,930 --> 00:01:46,080
I will declare a variable where I say this is a string test test.

21
00:01:46,110 --> 00:01:47,520
Let's create the pattern.

22
00:01:47,520 --> 00:01:57,600
So the first thing I do is I create parentheses slash w plus for the word putting slash s for whitespace.

23
00:01:57,600 --> 00:02:04,170
And because I want to search for the same value which was found by slash W plus.

24
00:02:04,170 --> 00:02:06,540
So I'm going to use the back reference here.

25
00:02:06,540 --> 00:02:08,340
So I'll say slash one.

26
00:02:08,580 --> 00:02:11,370
Let's try to display using the match method.

27
00:02:14,350 --> 00:02:21,220
As you can see in the output, it has searched for all double words in the string, but the output also

28
00:02:21,220 --> 00:02:26,080
contains double is and the reason is very obvious.

29
00:02:26,080 --> 00:02:30,880
That is such combination of found word appearing immediately.

30
00:02:30,880 --> 00:02:39,070
That is this is where is word is repeating immediately after the is word of this.

31
00:02:39,550 --> 00:02:41,500
We do not want such cases.

32
00:02:41,500 --> 00:02:47,950
What we really want is if there is a whole word, then only it should consider as a result.

33
00:02:47,950 --> 00:02:52,000
So we will use slash B to define word boundaries.

34
00:02:52,000 --> 00:02:57,580
Let's add slash B at the beginning and end of the pattern and run the code again.

35
00:03:02,240 --> 00:03:04,370
Now we get the desired output.

36
00:03:04,370 --> 00:03:07,980
So word boundary is very essential to get complete words.

37
00:03:08,000 --> 00:03:14,840
Also back referencing is a tricky part, so make sure you have gone through my explanation on back reference

38
00:03:14,840 --> 00:03:16,250
of captured groups.

39
00:03:16,250 --> 00:03:22,250
But here we are now able to get all the double words in the given string.

