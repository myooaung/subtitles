1
00:00:07,950 --> 00:00:11,460
Let's add the delete functionality in our component.

2
00:00:11,790 --> 00:00:13,950
For that, I'm going to add a button.

3
00:00:14,400 --> 00:00:15,870
I'll say button here.

4
00:00:17,520 --> 00:00:23,250
Let me also give the class BTN and ID trash.

5
00:00:24,510 --> 00:00:26,910
Now I'm going to add an icon here.

6
00:00:28,100 --> 00:00:30,890
Let me also end it now with Icon.

7
00:00:30,890 --> 00:00:35,900
I'm going to say class FAA that is found awesome.

8
00:00:36,680 --> 00:00:40,220
And I'm going to use the FAA trash hyphen.

9
00:00:40,220 --> 00:00:49,970
Oh, let me also give an ID icon and now I'm ending the button tag as well.

10
00:00:50,660 --> 00:00:53,240
The next step, I'm going to paste the font.

11
00:00:53,240 --> 00:00:54,320
Awesome link.

12
00:00:56,420 --> 00:01:01,370
Now let me also update some CEUs related to this button.

13
00:01:02,260 --> 00:01:03,760
Now let's check the output.

14
00:01:04,269 --> 00:01:07,720
And the button is getting displayed with the trash icon.

15
00:01:08,520 --> 00:01:13,490
Now the next step is to bind the event inside connected callback.

16
00:01:13,500 --> 00:01:20,640
So I'm going to say this dot shadow route dot get element by ID.

17
00:01:21,950 --> 00:01:26,540
The idea I'm going to choose is trash dot on click.

18
00:01:27,860 --> 00:01:29,050
Is equal to.

19
00:01:29,060 --> 00:01:32,330
I'm going to have the arrow function now inside this.

20
00:01:32,330 --> 00:01:35,050
I just want to remove the components.

21
00:01:35,060 --> 00:01:37,150
I'll say this dot remove.

22
00:01:37,160 --> 00:01:38,420
It means the instance.

23
00:01:38,420 --> 00:01:40,760
The current instance will be removed.

24
00:01:40,760 --> 00:01:43,280
Let's save this and check what happens.

25
00:01:44,240 --> 00:01:50,930
Now I'm going to click this button and you can see that it is getting removed from the DOM also.

26
00:01:52,740 --> 00:02:00,570
Now when the component is removed, it is actually being removed from the DOM and at that time the disconnected

27
00:02:00,570 --> 00:02:02,670
callback method is invoked.

28
00:02:02,850 --> 00:02:04,590
Let's check that practically.

29
00:02:04,620 --> 00:02:07,040
So I will add disconnected callback.

30
00:02:07,050 --> 00:02:09,990
I'll say the method name.

31
00:02:10,850 --> 00:02:18,740
And inside let me just say alert and here I'll say this dot get attribute.

32
00:02:19,970 --> 00:02:24,770
I'm going to get the name of P name that is the product name.

33
00:02:24,890 --> 00:02:27,800
Let me join that with component removed.

34
00:02:28,250 --> 00:02:30,710
Now let's save this and check the output.

35
00:02:31,680 --> 00:02:37,740
I click on the delete and you see that the grapes component removed message is displayed.

36
00:02:38,700 --> 00:02:46,110
The reason is this alert is written inside the disconnected callback and when you remove it from the

37
00:02:46,110 --> 00:02:48,810
DOM, that event is invoked.

38
00:02:48,810 --> 00:02:51,210
That lifecycle method is invoked.

39
00:02:53,090 --> 00:03:01,430
Normally inside this disconnected callback, you can write the code you want to run at the time of detachment

40
00:03:01,430 --> 00:03:03,530
of the component from the DOM.

41
00:03:03,860 --> 00:03:11,660
For example, if you add an event with add event listener method, then you can write remove event listener

42
00:03:11,660 --> 00:03:15,250
in disconnected callback to check that practically.

43
00:03:15,260 --> 00:03:22,460
Let me just remove this on click and instead of that I'm going to use the add event listener.

44
00:03:22,820 --> 00:03:25,400
This is another way to attach the event.

45
00:03:25,940 --> 00:03:28,340
I'm going to open the parentheses.

46
00:03:28,550 --> 00:03:32,540
The first parameter in the parentheses will be click.

47
00:03:33,620 --> 00:03:35,060
This is the event name.

48
00:03:35,210 --> 00:03:36,830
Now I'll put a comma here.

49
00:03:37,700 --> 00:03:42,680
Let me remove this bracket at the moment and this equal to sign as well.

50
00:03:43,130 --> 00:03:46,790
And I will close it here as a second parameter.

51
00:03:47,090 --> 00:03:50,060
So the function is the second parameter.

52
00:03:50,060 --> 00:03:53,100
On click this function will be executed.

53
00:03:53,120 --> 00:03:57,440
So now the event is configured with the add event listener.

54
00:03:58,260 --> 00:04:06,270
When this is the situation, what you can do is you can write the remove event listener inside the disconnected

55
00:04:06,270 --> 00:04:09,840
callback so that you clear the environment.

56
00:04:09,840 --> 00:04:13,590
You clear the garbage when the component is removed.

57
00:04:14,430 --> 00:04:19,800
Let me just copy this and paste it inside the disconnected.

58
00:04:20,190 --> 00:04:23,760
And here I'll just say dot remove event listener.

59
00:04:25,290 --> 00:04:28,770
Let's save this and refresh.

60
00:04:28,980 --> 00:04:34,830
Now when I click on the trash button, the disconnected event is executed.

61
00:04:35,580 --> 00:04:40,500
And when we close, it actually clears the event for that particular component.

62
00:04:42,180 --> 00:04:46,140
So this is just the basic idea of disconnected callback method.

63
00:04:46,740 --> 00:04:48,120
Let's talk about questions.

64
00:04:48,120 --> 00:04:53,310
So the question is explain the purpose of disconnected callback lifecycle method.

65
00:04:53,610 --> 00:04:59,550
So this method is basically executed when the component is getting removed from the DOM.

66
00:05:00,470 --> 00:05:06,470
So normally the code which is related to garbage collection or the code which you want to execute at

67
00:05:06,470 --> 00:05:12,980
the time of removal of the component from the DOM that you configure inside this method.

