1
00:00:10,110 --> 00:00:14,970
Before I start discussing Dom, let us see a practical example.

2
00:00:15,450 --> 00:00:22,470
Suppose we have this HTML section which contains a heading and a button inside the division.

3
00:00:22,860 --> 00:00:29,400
The heading has been assigned with a unique ID that is message, and the button contains a function

4
00:00:29,400 --> 00:00:32,009
that is update message function.

5
00:00:32,610 --> 00:00:37,740
Then we have a JavaScript section that contains the related JavaScript coding.

6
00:00:38,970 --> 00:00:45,720
Now the output of this code will look something like this where when the button is clicked, the heading

7
00:00:45,720 --> 00:00:46,890
gets changed.

8
00:00:47,310 --> 00:00:54,840
What you need to understand here is that this is the HTML section, that is the interface, and this

9
00:00:54,840 --> 00:00:58,950
is the JavaScript section which contains the coding part.

10
00:00:59,640 --> 00:01:07,590
Now that is something which is allowing this JavaScript section to access these HTML elements.

11
00:01:07,860 --> 00:01:17,640
What I mean here is all these HTML elements which you see beat head, body H1, this division, all

12
00:01:17,640 --> 00:01:22,530
these elements can be accessed by with this JavaScript section.

13
00:01:23,450 --> 00:01:29,720
If we take a look at the browser, this section is the document section inside this browser window.

14
00:01:29,900 --> 00:01:32,900
So we have the window and the document.

15
00:01:32,940 --> 00:01:34,910
These are two different objects.

16
00:01:35,820 --> 00:01:40,990
The structure of the document is designed using HTML and CSS.

17
00:01:41,010 --> 00:01:42,870
That is the web page.

18
00:01:43,320 --> 00:01:52,410
The important point here is this section of the browser, which is called as the document is available

19
00:01:52,410 --> 00:01:54,840
internally in some way.

20
00:01:54,840 --> 00:02:00,030
And that internal presentation inside memory is the DOM.

21
00:02:01,240 --> 00:02:09,520
It means the document object, which you can see here in the code, this document object which has method

22
00:02:09,520 --> 00:02:15,250
that allows to access this when inside the HTML programmatically.

23
00:02:15,990 --> 00:02:24,360
So basically Dom is an interface which is accessible by programming languages like JavaScript or even

24
00:02:24,360 --> 00:02:25,200
Python.

25
00:02:25,470 --> 00:02:29,500
It means that the DOM is independent of any language.

26
00:02:29,520 --> 00:02:37,800
It is a structural presentation of the web page inside memory and is provided by the browser in the

27
00:02:37,800 --> 00:02:45,660
form of an object called document, which is also known as the DOM API.

28
00:02:45,690 --> 00:02:49,160
As it gives you the interface to access the DOM.

29
00:02:49,170 --> 00:02:57,210
I hope you know API is application programming interface and this gives you an interface that JavaScript

30
00:02:57,210 --> 00:03:02,860
or Python like languages can use and can access the HTML page.

31
00:03:02,880 --> 00:03:05,300
The DOM is the internal part.

32
00:03:05,310 --> 00:03:13,690
It is inside the memory which is allowing you to access these HTML elements inside the programming language.

33
00:03:13,710 --> 00:03:16,080
In our case, it is the JavaScript.

34
00:03:16,590 --> 00:03:22,340
Let's have a look at a different example, where you have a web page designed like this.

35
00:03:22,350 --> 00:03:26,490
You have the HTML head title body.

36
00:03:26,490 --> 00:03:28,980
Inside body, there are two divisions.

37
00:03:28,980 --> 00:03:34,050
One is having a heading and a button, whereas the second Dave has an input.

38
00:03:34,170 --> 00:03:41,760
Now if you consider this particular page internally, the document is created somewhat like this.

39
00:03:42,090 --> 00:03:48,570
You actually have the window as the topmost object, but the DOM does not start from that place.

40
00:03:49,360 --> 00:03:51,220
In the newer terminologies.

41
00:03:51,220 --> 00:03:57,760
The bomb that is the browser object model can start from window, but that's something which we will

42
00:03:57,760 --> 00:03:59,020
discuss later on.

43
00:03:59,810 --> 00:04:05,140
Right now the dome starts here and you see the structure where we have different elements.

44
00:04:05,150 --> 00:04:08,810
Every element has a parent child relationship.

45
00:04:08,810 --> 00:04:14,540
For example, you can see inside this division we have H1 and Button.

46
00:04:15,430 --> 00:04:18,490
And inside this division, we have input.

47
00:04:19,149 --> 00:04:22,400
These two divisions are at the same level.

48
00:04:22,420 --> 00:04:30,040
That means they are siblings, these objects of the HTML page and thats what we call the DOM tree.

49
00:04:30,770 --> 00:04:38,510
Also with this document object model, which is available inside the programming language, you can

50
00:04:38,510 --> 00:04:41,870
either remove an element or insert an element.

51
00:04:41,870 --> 00:04:44,360
You can change the text of an element.

52
00:04:44,360 --> 00:04:46,370
You can traverse through the tree.

53
00:04:46,370 --> 00:04:48,470
That is, you can search an element.

54
00:04:48,470 --> 00:04:55,760
All these things you do with the programming and that process, that action of performing various operations

55
00:04:55,760 --> 00:05:02,870
is also known as the DOM manipulation in shard searching, adding, removing through the DOM tree.

56
00:05:02,870 --> 00:05:06,500
All these is known as the DOM manipulation.

57
00:05:06,830 --> 00:05:15,530
So Dom is an internal model of document that is your web page, where every element of the document

58
00:05:15,530 --> 00:05:20,960
is an object and available for programming languages to access.

59
00:05:22,210 --> 00:05:27,820
Let's talk about few questions or a few terms which are related to Dom, and you should know that.

60
00:05:27,820 --> 00:05:32,410
So the question is what is Dom or the DOM API?

61
00:05:32,500 --> 00:05:38,320
So basically it gives you an interface, the browser in fact gives you the interface.

62
00:05:38,320 --> 00:05:46,210
And that interface is actually the document object which is available inside your programming language

63
00:05:46,240 --> 00:05:53,020
through which you can access the HTML page, you can change the color of elements, maybe you can remove

64
00:05:53,020 --> 00:05:58,240
elements, add elements, all these things you can do through this document object.

65
00:05:58,240 --> 00:06:02,680
That's what the DOM is or that's what the DOM API is.

66
00:06:03,630 --> 00:06:05,790
Second what is a DOM tree.

67
00:06:05,790 --> 00:06:08,340
So basically the DOM which we have.

68
00:06:08,370 --> 00:06:10,710
Does have parent child relationship.

69
00:06:10,710 --> 00:06:17,100
So when you try to draw it on the page or maybe somewhere you will see that there is always a kind of

70
00:06:17,100 --> 00:06:24,660
hierarchical presentation and when something comes in the hierarchical format, it becomes the tree.

71
00:06:24,660 --> 00:06:29,580
So DOM structure itself is also known as the DOM tree.

72
00:06:30,820 --> 00:06:34,810
The next question, what do you mean by dumb manipulation?

73
00:06:34,810 --> 00:06:42,160
So as I have mentioned just now, that performing various types of operations through programming language

74
00:06:42,160 --> 00:06:48,280
on the web page, through programming language, that is what the DOM manipulation is.

75
00:06:48,280 --> 00:06:53,380
That is always a need of adding removing elements at runtime.

76
00:06:53,380 --> 00:06:57,010
All those things are known as DOM Manipulations.

77
00:06:57,010 --> 00:07:00,280
That is also a term called DOM Traversal.

78
00:07:00,310 --> 00:07:07,180
Generally that happens when you loop through the entire tree in case when you want to search an element.

79
00:07:07,180 --> 00:07:12,490
For example, I give you one exercise where you have to remove an element.

80
00:07:12,490 --> 00:07:17,680
Then certainly, first of all, you need to search through that is you will have to traverse through

81
00:07:17,680 --> 00:07:18,700
the DOM tree.

82
00:07:19,030 --> 00:07:23,530
All these operations are also known as DOM manipulation.

