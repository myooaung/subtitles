1
00:00:00,060 --> 00:00:07,290
Let us see few console object methods that are related to time and timestamps in JavaScript code.

2
00:00:10,200 --> 00:00:13,290
The code requires a specific time in executing.

3
00:00:13,800 --> 00:00:19,830
We can set a timer in the JavaScript code that will display the time taken for execution.

4
00:00:21,030 --> 00:00:28,860
But this time is not your set interval, not the timer in the actual code, but this timer is related

5
00:00:28,860 --> 00:00:30,000
to the console.

6
00:00:30,810 --> 00:00:36,630
This is also a timer only, but all the matters which we are going to see are related to the console

7
00:00:36,630 --> 00:00:37,200
object.

8
00:00:38,320 --> 00:00:46,360
The Controller time method sets a timer and takes a specific name or a label for that timer as a parameter.

9
00:00:47,580 --> 00:00:54,330
The syntax is like this where you have the console, the time, and inside that let's say we give a

10
00:00:54,330 --> 00:00:57,990
label timer when this is the timer start.

11
00:00:59,140 --> 00:01:08,110
I will define two variables x and Y with their values and let's console.log x into y.

12
00:01:09,420 --> 00:01:13,650
And then end the time using the console that time and.

13
00:01:14,760 --> 00:01:20,700
And again provide a label of the timer that I want to end as it's parameter.

14
00:01:21,600 --> 00:01:24,380
This statement will end the specified time.

15
00:01:25,140 --> 00:01:26,460
Let me save this and.

16
00:01:27,460 --> 00:01:32,860
As you can see, it displays the time taken for executing this piece of code.

17
00:01:33,640 --> 00:01:39,400
This technique can be used when you want to check the response time of your code and manage it.

18
00:01:41,080 --> 00:01:49,810
Another matter related to timer is cancelled out time log that provides the current value of the timer

19
00:01:50,140 --> 00:01:53,560
set by using the console log time method.

20
00:01:55,690 --> 00:02:03,070
Let me use the short time lag method here somewhere before it performs multiplication.

21
00:02:04,160 --> 00:02:08,210
Now here I give the timer name and let me run the call.

22
00:02:08,960 --> 00:02:14,810
So it displays the time of the timer when it reaches the line with this statement.

23
00:02:15,740 --> 00:02:17,240
Let me run it twice.

24
00:02:18,650 --> 00:02:20,240
And time varies.

25
00:02:22,820 --> 00:02:25,820
Let us see related questions for this topic.

26
00:02:26,740 --> 00:02:30,640
The first question is what does the console.log time method do?

27
00:02:31,710 --> 00:02:39,690
So the canceled are time method set timer in JavaScript which returns the time taken by the code to

28
00:02:39,690 --> 00:02:40,350
execute.

29
00:02:40,950 --> 00:02:49,710
As we saw in this example here, the timer one is started and it stops when this console dart time and

30
00:02:49,710 --> 00:02:51,360
statement is encountered.

31
00:02:55,260 --> 00:02:58,920
The second question is how to check the current execution time.

32
00:02:59,460 --> 00:03:04,440
So the console, the time lag method is used to check the current time.

33
00:03:04,440 --> 00:03:08,610
That is time at a particular point where the statement is found.

34
00:03:10,660 --> 00:03:11,590
Like we did here.

35
00:03:12,830 --> 00:03:15,020
And it will vary every time we run.

