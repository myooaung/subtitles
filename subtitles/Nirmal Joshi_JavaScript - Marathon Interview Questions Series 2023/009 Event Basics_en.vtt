WEBVTT
1
00:00:02.670 --> 00:00:05.620
In this section, I'm discussing event basics.

2
00:00:05.670 --> 00:00:08.160
There will be three related questions to this topic.

3
00:00:10.070 --> 00:00:16.460
There is a lot you need to know about event handling, like the event object mouse and keyboard events,

4
00:00:16.670 --> 00:00:22.700
UI events, other dumb events, or even creating and dispatching custom events.

5
00:00:22.910 --> 00:00:30.260
I will start with fundamentals first and then move into more advanced levels with more sections on events.

6
00:00:30.530 --> 00:00:36.350
Events are various types of actions on which you can run your desired code.

7
00:00:36.680 --> 00:00:39.440
For example, you have a button like this.

8
00:00:40.070 --> 00:00:46.160
You want that when the user of this page clicks on a button, it should display a message.

9
00:00:46.490 --> 00:00:53.240
Right now, what I have designed is there are four buttons and I'm showing you that there are four different

10
00:00:53.240 --> 00:00:55.010
ways to write an event.

11
00:00:55.160 --> 00:00:56.810
So let's look at the code first.

12
00:00:57.110 --> 00:00:58.820
The output which you saw just now.

13
00:00:59.330 --> 00:01:01.910
These are the four different buttons I have taken.

14
00:01:02.150 --> 00:01:05.330
The first button is the inline way.

15
00:01:05.810 --> 00:01:12.800
It means that you can write an event like this where I can say on click equal to sign and then the code

16
00:01:12.800 --> 00:01:13.980
which you want to execute.

17
00:01:14.000 --> 00:01:20.150
So for example, instead of writing a separate function, you can write the code straight over here.

18
00:01:20.510 --> 00:01:25.040
The second way is that you write the code by calling a function.

19
00:01:25.340 --> 00:01:27.980
So let me just call a function here.

20
00:01:28.010 --> 00:01:33.680
I will say function, show, message, and here I am going to say alert the common way.

21
00:01:34.370 --> 00:01:37.280
This is the most common way we bind the event.

22
00:01:37.280 --> 00:01:38.870
So I'll say the common way.

23
00:01:39.230 --> 00:01:42.620
There are two more buttons but that I'm explaining at a later stage.

24
00:01:42.860 --> 00:01:46.610
So now with these two buttons, let me just go to the output.

25
00:01:47.150 --> 00:01:49.960
I'll refresh the screen now for these buttons.

26
00:01:49.970 --> 00:01:51.270
That is no code written.

27
00:01:51.410 --> 00:01:55.000
But when I click on the first button, it displays an alert.

28
00:01:55.040 --> 00:01:56.540
I have already written that.

29
00:01:56.810 --> 00:01:58.280
This is not an ideal way.

30
00:01:58.610 --> 00:02:00.950
So this is the code which you see.

31
00:02:01.130 --> 00:02:03.770
This way of writing the code is not advisable.

32
00:02:04.220 --> 00:02:08.330
The second, the most common way is this one where I have the button.

33
00:02:08.630 --> 00:02:12.530
But when you click on the common way, you see that the alert is displayed.

34
00:02:12.530 --> 00:02:14.720
So the function is called on.

35
00:02:14.900 --> 00:02:15.860
Click off the button.

36
00:02:16.460 --> 00:02:19.700
There are two more ways through which you can bind an event.

37
00:02:19.970 --> 00:02:25.490
So let's first of all, write code for this button that is binding event at a later stage.

38
00:02:25.730 --> 00:02:27.710
That is, again, a very easier way.

39
00:02:27.740 --> 00:02:32.070
The important thing here is that you have to have an ID for that button.

40
00:02:32.090 --> 00:02:34.820
So let's say I have taken an IED already.

41
00:02:35.090 --> 00:02:37.440
So button is the IED name.

42
00:02:37.460 --> 00:02:39.770
What I'll do, I'll take one object here.

43
00:02:39.830 --> 00:02:42.650
I'll name BTN or whatever you want to keep it.

44
00:02:43.840 --> 00:02:47.410
And there I will use the get element buy ID.

45
00:02:47.860 --> 00:02:49.450
Now I'm going to bind that un.

46
00:02:49.450 --> 00:02:56.590
So what I will do, I will say BTN dot on click is equal to now here you can write a function name,

47
00:02:56.590 --> 00:02:58.300
let's say sure message.

48
00:02:58.450 --> 00:03:02.470
Instead of that you can also write an anonymous function.

49
00:03:02.470 --> 00:03:03.910
I can say function like this.

50
00:03:04.120 --> 00:03:05.680
I don't give a name to the function.

51
00:03:05.680 --> 00:03:06.670
That's also fine.

52
00:03:06.910 --> 00:03:13.930
Now, here in the alert, I will display some message saying that event bound later on like this.

53
00:03:14.350 --> 00:03:20.260
So this is another way where you have to have an idea of a button or whichever element you are using,

54
00:03:20.260 --> 00:03:24.610
and then you assign a function by giving the event name.

55
00:03:24.610 --> 00:03:26.170
Here, let's try this as well.

56
00:03:26.440 --> 00:03:29.050
I'll just refresh the page, click on this button.

57
00:03:29.050 --> 00:03:31.210
So now you see that event bound.

58
00:03:31.390 --> 00:03:34.180
Later on, this code is executed.

59
00:03:35.870 --> 00:03:41.570
And the last way, which I want to show you, is using the ADD event listener matter.

60
00:03:41.720 --> 00:03:47.450
Now, this is a kind of matter which we have already seen in one of the discussion of event bubbling

61
00:03:47.450 --> 00:03:48.290
and capturing.

62
00:03:48.590 --> 00:03:51.500
But let's also try so that you get clear with that.

63
00:03:51.590 --> 00:03:55.850
So again, the condition with the ad event listener is similar.

64
00:03:56.120 --> 00:03:57.920
We need to have an idea of the button.

65
00:03:57.950 --> 00:04:04.850
So let's say for this BTN one and when to add the code, I will say content BTN one is equal to.

66
00:04:05.710 --> 00:04:08.310
Document card, get element, buy ID.

67
00:04:08.860 --> 00:04:16.640
The element is the body and one here I'm going to say beat one dart add event listener.

68
00:04:16.660 --> 00:04:23.440
Now remember that when you are writing an event, actually when this click event on click is the handler

69
00:04:23.860 --> 00:04:25.400
given to the HTML.

70
00:04:25.420 --> 00:04:28.150
So here we write the core event name.

71
00:04:28.150 --> 00:04:33.520
So I'm going to say click here because I want that when that button is clicked, I want to execute something.

72
00:04:33.610 --> 00:04:40.300
So on the click event, which function I want to call, let's say I'm going to call BTN one click.

73
00:04:40.300 --> 00:04:41.830
That's the function I want to create.

74
00:04:41.980 --> 00:04:49.510
That is also one more parameter while using the add event listener matter that is the true or false.

75
00:04:49.630 --> 00:04:52.030
So by default it is false.

76
00:04:52.030 --> 00:04:54.370
That means it is the babbling face.

77
00:04:54.370 --> 00:05:00.430
But if you want to change it from babbling to capturing, then you keep it true in case if you do not

78
00:05:00.430 --> 00:05:02.950
want to deal with bubbling and capturing, right?

79
00:05:02.950 --> 00:05:07.570
So by default anyway it will be babbling, which we have already discussed in previous sections.

80
00:05:07.570 --> 00:05:13.090
So just to remind you about that, right now we don't need anything about babbling or capturing, so

81
00:05:13.090 --> 00:05:15.160
I'm going to keep only two parameters.

82
00:05:15.160 --> 00:05:19.150
But that also means that by default this thing is now false.

83
00:05:19.450 --> 00:05:23.620
The next thing is we have finished the event binding now between one click.

84
00:05:23.620 --> 00:05:25.930
There is no such function, so let's create that.

85
00:05:25.930 --> 00:05:29.920
Also I'll say BTN one click and that's the function.

86
00:05:30.040 --> 00:05:33.850
And when this button is clicked, I just want to display alert.

87
00:05:34.150 --> 00:05:39.130
I'll say add event, listener's click, add something like this.

88
00:05:39.700 --> 00:05:46.510
So now we refresh the page and here I'm going to click the button to display the message.

89
00:05:48.910 --> 00:05:54.100
So there are four ways we have seen in this call where we are trying to attach the event.

90
00:05:54.100 --> 00:05:59.890
Remember the first way which I have mentioned that is that in line way is not something you should practice

91
00:06:00.160 --> 00:06:03.400
so better that you go with this common way.

92
00:06:03.850 --> 00:06:07.270
You can also go with the event listener or even this one.

93
00:06:07.270 --> 00:06:08.170
That doesn't matter.

94
00:06:08.500 --> 00:06:15.220
But generally you see that we write the event in this way only or sometimes add event listener because

95
00:06:15.220 --> 00:06:18.790
you want to change the face that is from babbling to capturing.

96
00:06:18.940 --> 00:06:23.200
Then you can certainly use the add event listener matter syntax as well.

97
00:06:23.290 --> 00:06:26.230
So this is how a simple event can be attached.

98
00:06:26.620 --> 00:06:32.170
Now there is one more thing which also we have discussed in one of our previous section that that is

99
00:06:32.170 --> 00:06:34.180
something called event object.

100
00:06:34.450 --> 00:06:39.190
The event object is the parent object of all event objects.

101
00:06:39.610 --> 00:06:46.990
Event objects like mouse event, keyboard, event, focus, event, touch, event, UI event and many

102
00:06:46.990 --> 00:06:47.440
others.

103
00:06:47.740 --> 00:06:52.300
The event object gives you access to the various properties and methods.

104
00:06:52.330 --> 00:06:56.110
We have already seen a few in the bubbling and capturing section.

105
00:06:56.440 --> 00:07:03.070
For example, method like stop propagation or a property like event to dot target.

106
00:07:03.310 --> 00:07:07.420
Let's practically try working on it here in this example as well.

107
00:07:07.510 --> 00:07:11.560
One more time let me just remove the additional cause.

108
00:07:11.560 --> 00:07:12.940
I am going to remove this button.

109
00:07:13.150 --> 00:07:20.050
I'll keep this show message as it is because we don't need any other coding at the moment and the sure

110
00:07:20.050 --> 00:07:21.970
message function will also be there.

111
00:07:22.180 --> 00:07:22.780
That's it.

112
00:07:22.990 --> 00:07:25.210
So now this is a more precise way.

113
00:07:25.450 --> 00:07:29.200
Here, I just want to display the value of the event object.

114
00:07:29.470 --> 00:07:33.580
I also want to, let's say instead of alert now, I'm going to use console.log.

115
00:07:33.790 --> 00:07:41.530
And I will also use one more property of event, let's say event, a dot type.

116
00:07:43.850 --> 00:07:45.050
Let me just refresh this.

117
00:07:45.080 --> 00:07:48.110
Now we have just one button, which is the common way.

118
00:07:48.140 --> 00:07:49.370
Now I'll click on the button.

119
00:07:49.640 --> 00:07:55.640
So now if you see the output of console.log event, this is the type of event which is displayed.

120
00:07:55.640 --> 00:07:59.420
And if I just expand this, you will see that there are various parameters.

121
00:07:59.690 --> 00:08:06.260
This shows that whether alter key is an able I mean pressed or not, is the bubbling true or false or

122
00:08:06.260 --> 00:08:08.110
bubbling is true by default, right?

123
00:08:08.120 --> 00:08:10.570
So you can also write event or bubbles.

124
00:08:10.580 --> 00:08:11.390
You can write that.

125
00:08:11.390 --> 00:08:12.740
So you will get this parameter.

126
00:08:12.750 --> 00:08:16.790
And if you use add event listener, then you can change this from bubbles.

127
00:08:16.790 --> 00:08:18.020
That is true to false.

128
00:08:18.260 --> 00:08:18.980
You can do that.

129
00:08:19.250 --> 00:08:22.940
The button buttons are all about which button was pressed.

130
00:08:22.940 --> 00:08:28.760
So this anyway, we are going to discuss in the next section when we go deeper into mouse events.

131
00:08:28.970 --> 00:08:35.390
But just I want to discuss here that these are the various properties you have of event object.

132
00:08:35.570 --> 00:08:42.110
And because event is the parent object, mouse event also has access to all the properties of event

133
00:08:42.110 --> 00:08:42.919
object as well.

134
00:08:43.370 --> 00:08:50.720
Also, you see that when I display the event or type, it displays that it is the click event.

135
00:08:51.810 --> 00:08:56.230
So that event object gives you a lot of information about the event.

136
00:08:56.250 --> 00:08:59.380
Let's see which element actually raised this event.

137
00:08:59.400 --> 00:09:03.240
If we want to get that, you can see console.log.

138
00:09:03.240 --> 00:09:06.810
At the moment I'm saying I'll event dot target.

139
00:09:07.110 --> 00:09:08.430
So let me see if this.

140
00:09:09.420 --> 00:09:11.790
And refresh the page.

141
00:09:12.730 --> 00:09:15.580
So this is the button which actually raised this event.

142
00:09:15.850 --> 00:09:16.210
Right.

143
00:09:16.660 --> 00:09:17.740
So this is the target.

144
00:09:17.750 --> 00:09:22.270
So when you say event or target, you actually refer to this HDMI element.

145
00:09:22.480 --> 00:09:25.240
So event object is really very useful.

146
00:09:25.270 --> 00:09:31.720
Sometimes if this function is not in the same scope, then you can past the event object like this.

147
00:09:31.720 --> 00:09:32.770
You can see event here.

148
00:09:32.980 --> 00:09:35.740
Now that goes to some other function.

149
00:09:36.070 --> 00:09:38.230
So I'll say maybe or video or something.

150
00:09:38.230 --> 00:09:45.490
And then if I try to display object, for example, let's say object type and object or target, so

151
00:09:45.490 --> 00:09:46.300
it's the same thing.

152
00:09:46.990 --> 00:09:49.750
So let me refresh the page.

153
00:09:49.960 --> 00:09:52.540
I just click the button and you see the same output here.

154
00:09:55.820 --> 00:10:00.140
So in this section I have discussed just a very basic idea about events.

155
00:10:00.530 --> 00:10:02.630
Now we will explore events in detail.

156
00:10:02.720 --> 00:10:09.860
Next section I'm focusing more on mouse event, where we will see the click double click mouse move,

157
00:10:09.860 --> 00:10:13.040
mouse over and various other mouse related events.

158
00:10:16.040 --> 00:10:19.280
Now let's discuss a few related questions of this topic.

159
00:10:19.670 --> 00:10:26.270
The first question is explain various ways of configuring an event with HTML elements.

160
00:10:26.630 --> 00:10:32.000
So these are the four different ways we have seen we can use to bind an event.

161
00:10:34.710 --> 00:10:39.240
The second question is explain syntax of our direct listener method.

162
00:10:39.570 --> 00:10:44.260
So that event listener matter syntax is like this that we have that you won't name.

163
00:10:44.340 --> 00:10:51.150
We also have the function which you want to call, and the third one is optional, which decides whether

164
00:10:51.240 --> 00:10:54.240
you want to go with babbling or capturing.

165
00:10:54.540 --> 00:10:56.540
Generally by default it is babbling.

166
00:10:56.550 --> 00:11:02.850
So in case if you want that, it should be capturing phase when the event is propagated.

167
00:11:03.150 --> 00:11:05.790
Then only you will use this parameter.

168
00:11:07.880 --> 00:11:11.120
The third question is what is an event object?

169
00:11:11.330 --> 00:11:18.350
So event object is something which is actually propagated whenever there is an event is generated and

170
00:11:18.530 --> 00:11:21.770
event object gives you various properties which you can access.

171
00:11:21.980 --> 00:11:26.780
You have details of the event as well as the element which raised the event.

172
00:11:27.050 --> 00:11:31.190
So event object is the parent object to handle all types of events.

