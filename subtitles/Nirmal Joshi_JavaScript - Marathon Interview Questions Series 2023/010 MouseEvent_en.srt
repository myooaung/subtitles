1
00:00:00,060 --> 00:00:04,710
In this domain web category section we are discussing mouse event object.

2
00:00:04,890 --> 00:00:07,440
There will be four related questions to this topic.

3
00:00:10,040 --> 00:00:13,250
Now we are focusing on various mouse related events.

4
00:00:13,670 --> 00:00:16,760
We have already seen a click event in the previous section.

5
00:00:17,090 --> 00:00:19,700
Let's try a few of the events practically.

6
00:00:20,090 --> 00:00:23,870
First we will see Click, Right Click and the double click event.

7
00:00:23,960 --> 00:00:27,800
At the moment I have created one division and just a function.

8
00:00:27,950 --> 00:00:34,100
The division has an ID that is the E and I have taken the reference and I'm assigning the message to

9
00:00:34,100 --> 00:00:34,970
this division.

10
00:00:35,150 --> 00:00:37,250
Let me also show you the output quickly.

11
00:00:37,280 --> 00:00:38,390
This is how it looks.

12
00:00:38,780 --> 00:00:44,630
Now I'm going to configure the click, double click and the right click event to write it in a more

13
00:00:44,630 --> 00:00:45,260
clear way.

14
00:00:45,290 --> 00:00:47,540
I'm going to write each unit on a next line.

15
00:00:47,540 --> 00:00:51,080
So this closing of division, I'm going to bring it on new line here.

16
00:00:51,080 --> 00:00:52,430
I'm going to say on click.

17
00:00:52,550 --> 00:00:57,290
And the function I'm calling is the E handler function that is event handler.

18
00:00:57,950 --> 00:01:04,190
So I write E handler here and I'm going to pass a message that click the message which is passed to

19
00:01:04,190 --> 00:01:08,480
this function that I will write here at the moment.

20
00:01:08,480 --> 00:01:09,500
Let's say remove this.

21
00:01:09,710 --> 00:01:11,450
I don't need a message here.

22
00:01:11,810 --> 00:01:18,020
So whenever an event is clicked, that is a specific string I'm passing to this message and this message

23
00:01:18,020 --> 00:01:19,490
is assigned to the division.

24
00:01:19,850 --> 00:01:21,440
Let's configure rest of the events.

25
00:01:21,920 --> 00:01:23,030
I will say on.

26
00:01:24,260 --> 00:01:25,430
Context menu.

27
00:01:25,940 --> 00:01:30,770
Now, this is an event which is executed when the user presses the right mouse button.

28
00:01:31,070 --> 00:01:37,340
So here also I'm going to call the event handler function and here I will pass right click.

29
00:01:38,150 --> 00:01:40,970
And the next event is on double click.

30
00:01:41,420 --> 00:01:48,740
Again, I'm going to say event handler and here I'll pass double click.

31
00:01:51,380 --> 00:01:56,480
So every time when an event is fired, we are passing the respective string and that we are displaying

32
00:01:56,480 --> 00:01:57,230
in the division.

33
00:01:57,560 --> 00:01:59,060
Let's try with these three events.

34
00:01:59,060 --> 00:02:00,500
First, I'm saving this.

35
00:02:00,740 --> 00:02:01,970
Now let's go to the browser.

36
00:02:02,030 --> 00:02:03,710
I'll just refresh these changes.

37
00:02:04,220 --> 00:02:07,130
Now, if I click here, you see that the click event is fired.

38
00:02:07,610 --> 00:02:13,160
When I right click, as you can see that the right click message is displayed and also the context menu

39
00:02:13,160 --> 00:02:14,510
items are also displayed.

40
00:02:14,840 --> 00:02:17,870
And if I double click here, then it displays double click.

41
00:02:18,380 --> 00:02:23,960
So on context, menu item is also one of the event which you can use to handle the right click.

42
00:02:24,440 --> 00:02:30,230
Imagine that you want to disable that right click on this particular element that is on this division.

43
00:02:30,260 --> 00:02:32,450
You don't want to have the right click.

44
00:02:32,750 --> 00:02:35,240
What you can do, you can simply return.

45
00:02:35,240 --> 00:02:35,860
False.

46
00:02:36,270 --> 00:02:36,920
I'll say.

47
00:02:38,500 --> 00:02:39,840
Return false.

48
00:02:39,850 --> 00:02:41,260
So this will cancel the event.

49
00:02:41,620 --> 00:02:43,690
In fact, this can happen to any event.

50
00:02:43,690 --> 00:02:49,090
Let's say you want to cancel the mouse down event or maybe mouse up event, then you can just return

51
00:02:49,090 --> 00:02:49,570
false.

52
00:02:49,780 --> 00:02:52,180
So that related event is not executed.

53
00:02:52,420 --> 00:02:58,720
So now for example, I right click then I do not see the context menu or the event is not executed at

54
00:02:58,720 --> 00:02:58,930
all.

55
00:02:59,350 --> 00:03:04,420
If you click, you have this event here and double click also has the event.

56
00:03:04,990 --> 00:03:06,760
So these are the click events.

57
00:03:07,450 --> 00:03:11,350
Now let's try the mouse down and mouse up event as well.

58
00:03:11,680 --> 00:03:19,240
So here instead of on click, I'll say on mouse down and here I'll say on mouse up.

59
00:03:20,140 --> 00:03:23,650
Now I'm going to change the messages and just leave this as it is.

60
00:03:24,190 --> 00:03:28,990
And this last event, let's say I do not want it, so I'm going to remove that here.

61
00:03:28,990 --> 00:03:33,060
I'll say mouse down and here, mouse up.

62
00:03:33,490 --> 00:03:36,880
Let's go to the browser refresh.

63
00:03:37,960 --> 00:03:39,820
Now I'm holding down the mouse key.

64
00:03:39,820 --> 00:03:41,410
You see it says Mouse down.

65
00:03:41,680 --> 00:03:44,170
The moment I release it, it says mouse up.

66
00:03:44,770 --> 00:03:47,920
So you have two more events like this, mouse up and mouse down.

67
00:03:48,430 --> 00:03:53,590
Apart from this mouse up and down, there are various events on mouse movement as well.

68
00:03:54,040 --> 00:03:58,480
I'm just going to discuss two events that is mouse out and mouse over.

69
00:03:58,990 --> 00:04:04,420
There are also mouse enter, mouse live and various events you see related to mouse, but they are easy

70
00:04:04,420 --> 00:04:05,200
to understand.

71
00:04:05,200 --> 00:04:07,180
So let me just discuss two events here.

72
00:04:07,180 --> 00:04:15,940
I will say mouse out and here, mouse over on, mouse over.

73
00:04:15,940 --> 00:04:17,800
I'm going to call this.

74
00:04:18,579 --> 00:04:21,730
So this function is called when you roll rollover on this division.

75
00:04:22,029 --> 00:04:26,260
So let me just save this and go back to the output and refresh.

76
00:04:26,920 --> 00:04:30,820
You see, now mouse over is constantly getting executed, right?

77
00:04:30,970 --> 00:04:38,320
The moment I move the mouse out of the region, it says mouse out so you can handle the mouse more events

78
00:04:38,320 --> 00:04:38,680
as well.

79
00:04:39,250 --> 00:04:45,130
With the event object, we have various properties, few of the properties we have discussed in previous

80
00:04:45,130 --> 00:04:46,060
section as well.

81
00:04:46,240 --> 00:04:51,490
So now we are discussing one more useful property that is event dot button.

82
00:04:51,730 --> 00:04:55,450
And for that, what I'm going to do, I'm not going to pass any string here.

83
00:04:55,450 --> 00:05:03,580
Instead I'll declare this MSE that is the variable and instead of on mouse out let me just have only

84
00:05:03,580 --> 00:05:09,280
one event that is on mouse up and I'm going to call the event handler, but without any parameters.

85
00:05:09,850 --> 00:05:11,860
We don't need any other events.

86
00:05:12,250 --> 00:05:18,280
So I'll remove this now when the mouse button is released, then the event handler is fired.

87
00:05:18,670 --> 00:05:26,710
Here, I'm going to put a condition that if event dot button if the button is let's to the value is

88
00:05:26,710 --> 00:05:35,380
zero, that means the left mouse button is pressed so I can say a message is equal to left button pressed.

89
00:05:36,340 --> 00:05:39,160
Similarly, I can put more conditions.

90
00:05:39,160 --> 00:05:44,530
I can say elseif event dot button is equal to one.

91
00:05:44,860 --> 00:05:51,430
That means the middle button, the will button is pressed so I can see message is equal to middle button

92
00:05:52,390 --> 00:06:01,120
pressed and if the value is the value of button property is two, that means right click is pressed.

93
00:06:01,120 --> 00:06:05,110
So I'll say right click or right button.

94
00:06:07,420 --> 00:06:07,900
That's it.

95
00:06:08,470 --> 00:06:10,780
So now we will check the output.

96
00:06:11,020 --> 00:06:15,280
I'll just refresh mouse up, will update the data.

97
00:06:15,670 --> 00:06:17,890
So here you see that left button is pressed.

98
00:06:18,220 --> 00:06:24,370
If I just hold down the right click and release it, you can see that it is right button is pressed

99
00:06:25,090 --> 00:06:31,420
so the button property is very useful when you want to check that which button was pressed apart from

100
00:06:31,420 --> 00:06:35,950
the button press, there are also various key values available.

101
00:06:36,550 --> 00:06:42,580
For example, you want to check whether any special key was pressed while a specific mouse event was

102
00:06:42,580 --> 00:06:43,270
executed.

103
00:06:43,600 --> 00:06:50,170
That is special keys like alter control shift, etc. So let's try that as well.

104
00:06:50,200 --> 00:06:53,740
So with event we do also have all the key which will return.

105
00:06:53,740 --> 00:06:54,010
True.

106
00:06:54,010 --> 00:06:55,270
So I can write like this.

107
00:06:55,270 --> 00:07:04,430
I can say if event dot alt key if this was true so I can write like this or I can simply say all key.

108
00:07:04,450 --> 00:07:05,770
That means it is by default.

109
00:07:05,770 --> 00:07:06,460
It is true.

110
00:07:06,700 --> 00:07:08,320
So this will check.

111
00:07:08,320 --> 00:07:10,930
If it is true, then let's say in message.

112
00:07:11,290 --> 00:07:19,600
I want that I want to display the key press was alter key or I want that if the key was, let's say

113
00:07:19,870 --> 00:07:22,690
control key, that means Ctrl key.

114
00:07:23,080 --> 00:07:28,420
If that was true, then the message will be Control Key was pressed.

115
00:07:29,110 --> 00:07:31,930
Similarly, you can check for shift key.

116
00:07:31,930 --> 00:07:37,710
Also, let me just quickly copy this thing and here I am going to say shift if shift.

117
00:07:37,960 --> 00:07:38,740
She was pressed.

118
00:07:39,130 --> 00:07:40,480
Then I'll say, shaped.

119
00:07:40,780 --> 00:07:42,670
Now when the mouse up is executed.

120
00:07:42,850 --> 00:07:46,090
It will also check whether there was any key pressed or not.

121
00:07:46,300 --> 00:07:46,630
Right.

122
00:07:46,960 --> 00:07:47,740
Let's see here.

123
00:07:47,830 --> 00:07:50,680
By default, I say no key.

124
00:07:51,220 --> 00:07:52,990
Let's refresh now.

125
00:07:53,140 --> 00:07:56,320
Now, when mouse up is fired, there is no key press.

126
00:07:56,830 --> 00:08:00,640
Now I'm holding down the control key and I'm releasing the mouse.

127
00:08:00,850 --> 00:08:03,340
So you can see that the Ctrl is displayed.

128
00:08:03,550 --> 00:08:10,690
Similarly, if I say shift and if I just release the mouse, you see that it says shift and for alter

129
00:08:10,690 --> 00:08:12,460
it will display the LG.

130
00:08:12,820 --> 00:08:19,270
So while an event is fired, if you are willing to check whether any special key was pressed or not,

131
00:08:19,480 --> 00:08:20,740
you can write like this.

132
00:08:21,040 --> 00:08:22,720
You also have a choice in this.

133
00:08:22,810 --> 00:08:27,640
For example, I want to check whether control and alter if both were pressed.

134
00:08:27,850 --> 00:08:31,270
Then I want to have some code which is to be executed.

135
00:08:31,480 --> 00:08:33,370
You can join that as well.

136
00:08:33,490 --> 00:08:41,740
For example, I can say if event dot, let's say alt key was pressed and at the same time he went dark

137
00:08:41,980 --> 00:08:43,230
next to the control key.

138
00:08:43,330 --> 00:08:45,970
Ctrl key was also pressed.

139
00:08:46,060 --> 00:08:49,900
Then I want to display a message that there are two keys pressed.

140
00:08:49,900 --> 00:08:52,090
I'll say alter plus control.

141
00:08:52,090 --> 00:08:52,940
Something like this.

142
00:08:53,200 --> 00:08:54,370
I forgot the strings.

143
00:08:54,670 --> 00:08:55,000
Right.

144
00:08:55,000 --> 00:08:56,830
So now let's try this also.

145
00:08:58,540 --> 00:09:02,440
Now I'm holding down both alter and control and executing mouse up.

146
00:09:02,740 --> 00:09:10,510
So it is able to see as long as the control keys concern on the Mac machine, you have the command button

147
00:09:10,840 --> 00:09:12,130
right instead of control.

148
00:09:12,250 --> 00:09:16,450
So far Mac machine, you also have the matter key.

149
00:09:16,450 --> 00:09:17,770
That is, you write like this.

150
00:09:18,100 --> 00:09:22,770
If you have an if condition, for example, then you write event not matter key like this.

151
00:09:22,780 --> 00:09:26,350
So this is going to check the command button on Mac machine.

152
00:09:26,680 --> 00:09:32,140
So in that case, if you are dealing with the control keys for all the machines, your condition should

153
00:09:32,140 --> 00:09:33,190
be something like this.

154
00:09:33,430 --> 00:09:43,600
If event dark control key or event dark matter key, then you have some statements to execute.

155
00:09:43,900 --> 00:09:45,040
You can write like this.

156
00:09:45,760 --> 00:09:50,860
So Event Object has various properties like this when the mouse events are executed.

157
00:09:51,100 --> 00:09:55,210
Event Object also gives you the coordinates that is x and y coordinates.

158
00:09:55,420 --> 00:10:00,300
But that topic is for some other session as we have client x, y and PDX way.

159
00:10:00,320 --> 00:10:03,550
So we are going to discuss the difference and then we'll try to implement it.

160
00:10:04,300 --> 00:10:07,780
So now let's discuss a few related questions to this topic.

161
00:10:08,080 --> 00:10:12,640
I mean, whatever we have discussed so far, we are going to get a few questions out of this.

162
00:10:13,210 --> 00:10:17,710
The first question is how will you disable right click on an element?

163
00:10:18,490 --> 00:10:24,310
So as we have discussed on the on context menu, we just right return false.

164
00:10:24,490 --> 00:10:27,940
So that will disable the right click for that element.

165
00:10:28,690 --> 00:10:34,180
Do also remember that generally when you disable the right click, that means you do not want someone

166
00:10:34,180 --> 00:10:35,290
to copy the content.

167
00:10:35,830 --> 00:10:36,940
I mean the end user.

168
00:10:37,210 --> 00:10:42,670
As long as developers are concerned, they can open the view source and they can copy the source anyway,

169
00:10:43,300 --> 00:10:45,970
but at least you can disable the right click that way.

170
00:10:46,360 --> 00:10:53,290
So that is also one more event on copy that can also be redone, which disables the copy feature for

171
00:10:53,290 --> 00:10:53,860
the element.

172
00:10:57,000 --> 00:11:03,360
The second question is how can you check whether a special key that is all shift or control key is pressed

173
00:11:03,390 --> 00:11:05,340
while an event is generated or not?

174
00:11:06,240 --> 00:11:10,080
So we have already seen that we can use event dot ctrl key.

175
00:11:10,080 --> 00:11:10,770
Shift key.

176
00:11:10,770 --> 00:11:12,600
All key, matter key.

177
00:11:12,990 --> 00:11:18,840
These are the various properties we have with event object which can be used to check the special key

178
00:11:18,840 --> 00:11:19,440
status.

179
00:11:22,030 --> 00:11:27,190
The third question is how do you check mouse button value while an event is generated?

180
00:11:27,730 --> 00:11:30,280
So it's about checking which mouse button is pressed.

181
00:11:30,640 --> 00:11:32,560
So we have the button property.

182
00:11:33,160 --> 00:11:38,500
So we wrote Discord to check whether right, maybe left or middle button is pressed or not.

183
00:11:39,010 --> 00:11:42,700
So you when that button can be used to check the mouse button value.

184
00:11:45,350 --> 00:11:49,850
And the fourth question is for Control Key and CMT on Mack.

185
00:11:50,120 --> 00:11:53,600
How will you write the condition to check the key press?

186
00:11:54,200 --> 00:12:00,200
So this is the code which you can write with checks, CTRL, that is the control key and my keys for

187
00:12:00,410 --> 00:12:01,160
the CMT.

188
00:12:01,730 --> 00:12:05,930
But this code is helpful by writing the control or command button validation.

