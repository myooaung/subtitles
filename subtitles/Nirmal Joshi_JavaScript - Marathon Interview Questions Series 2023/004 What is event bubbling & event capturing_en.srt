1
00:00:00,090 --> 00:00:05,070
In this section, we are discussing a very important concept related to domain verb.

2
00:00:05,100 --> 00:00:12,780
That is what is even bubbling and even capturing the category of this question is DOM or web?

3
00:00:13,230 --> 00:00:17,160
We will have five related questions related to this topic.

4
00:00:17,490 --> 00:00:18,720
Let's begin with the answer.

5
00:00:19,290 --> 00:00:26,310
To understand bubbling or capturing, I will create a simple program and then we try to explore.

6
00:00:26,370 --> 00:00:32,159
Here I have written a code where there is a division, and inside the division I have just a simple

7
00:00:32,159 --> 00:00:33,990
button on division.

8
00:00:33,990 --> 00:00:34,530
Click.

9
00:00:34,770 --> 00:00:39,170
I am calling a function called Div click and on button click.

10
00:00:39,180 --> 00:00:41,820
I'm calling a function called BTN and click.

11
00:00:42,180 --> 00:00:45,450
Both the functions are just displaying alert.

12
00:00:45,450 --> 00:00:48,510
That division is clicked, our button is clicked.

13
00:00:49,050 --> 00:00:55,980
If we observe the output here we have this division and the button button is actually a child element

14
00:00:55,980 --> 00:00:59,460
of division and both division and button have on click.

15
00:00:59,880 --> 00:01:03,030
Now when I click on this button, I get that message.

16
00:01:03,210 --> 00:01:04,410
That button is clicked.

17
00:01:04,950 --> 00:01:09,990
But when I proceed further, I see that division click is also called.

18
00:01:10,260 --> 00:01:13,800
Remember here I'm just clicking on the button, not on the division.

19
00:01:13,920 --> 00:01:16,260
Still the division click is called.

20
00:01:16,650 --> 00:01:20,490
Let me go back to the coding once again and show you that.

21
00:01:20,490 --> 00:01:21,750
What have we written here?

22
00:01:22,080 --> 00:01:23,100
Button on click.

23
00:01:23,460 --> 00:01:26,730
This function is getting called division on click.

24
00:01:26,940 --> 00:01:32,720
This function is gone and when I clicked on this, it actually called both the functions.

25
00:01:33,240 --> 00:01:34,740
So why this thing is happening?

26
00:01:35,720 --> 00:01:36,680
In the output.

27
00:01:36,860 --> 00:01:42,800
It executes the buttons click event, but immediately after that it executes divisions.

28
00:01:42,800 --> 00:01:44,030
Click your end as well.

29
00:01:44,450 --> 00:01:46,030
This is the babbling.

30
00:01:46,610 --> 00:01:51,770
Let's try to understand this with reference to DOM event architecture.

31
00:01:52,280 --> 00:01:56,360
This figure is a replica of the code we have written here.

32
00:01:56,540 --> 00:02:00,860
The button which is raising the event is called as the target.

33
00:02:01,370 --> 00:02:05,540
The event object does have a property with the same name.

34
00:02:05,630 --> 00:02:12,650
That is Event Dart target, which returns the reference of the element which generated the event, or

35
00:02:12,650 --> 00:02:16,520
in other words, which dispatched the event object.

36
00:02:16,820 --> 00:02:21,710
That means the event object is dispatched to get the clear idea.

37
00:02:21,830 --> 00:02:23,450
Let's try a to sample.

38
00:02:23,720 --> 00:02:26,640
I will just give a name to this button.

39
00:02:26,660 --> 00:02:28,760
I'll see BTN one.

40
00:02:29,510 --> 00:02:38,970
And here, when the button is clicked, I will display that I say alert event, dart target, dot name.

41
00:02:39,530 --> 00:02:43,640
Now we have given the name property here, so let's see what happens here.

42
00:02:43,970 --> 00:02:45,530
I'll just refresh the code.

43
00:02:46,230 --> 00:02:47,330
I'm clicking the button.

44
00:02:47,600 --> 00:02:53,330
Now you see that it displays BTN one and then the rest of the behaviour, of course.

45
00:02:53,990 --> 00:03:00,800
So event dot target returns the reference of element which raised the event.

46
00:03:00,800 --> 00:03:03,890
And that's the place from the event.

47
00:03:03,980 --> 00:03:06,920
Object is dispatched to its ancestor.

48
00:03:07,100 --> 00:03:08,120
Now I'm coming to that.

49
00:03:08,120 --> 00:03:09,200
What ancestor is.

50
00:03:09,500 --> 00:03:09,920
All right.

51
00:03:09,920 --> 00:03:14,270
So coming back to the figure, this button is the event target.

52
00:03:14,930 --> 00:03:23,000
This division is called ancestor or parent, which goes till window and window is the topmost ancestor

53
00:03:23,000 --> 00:03:24,320
or actually it's an object.

54
00:03:24,680 --> 00:03:27,710
You can see that window is part of Dom.

55
00:03:28,040 --> 00:03:29,090
It is about it.

56
00:03:29,300 --> 00:03:31,970
But we need here far more clarity.

57
00:03:32,420 --> 00:03:41,150
So from target to ancestor, the event object traverses and this traversal is called as propagation

58
00:03:41,270 --> 00:03:43,340
or event propagation.

59
00:03:43,730 --> 00:03:46,820
Now how is the event propagation happening?

60
00:03:47,120 --> 00:03:49,880
Ah, which is the path of event propagation?

61
00:03:50,390 --> 00:03:51,050
Of course.

62
00:03:51,260 --> 00:03:52,250
Bottom to top.

63
00:03:52,250 --> 00:03:53,480
And that's what we saw.

64
00:03:53,810 --> 00:03:59,900
First the button was clicked, then the button click was fired, and then the division click was also

65
00:03:59,900 --> 00:04:01,210
fired automatically.

66
00:04:01,220 --> 00:04:09,920
So this button's event is executed and then it goes on the ancestor, because the propagation is dispatched

67
00:04:10,190 --> 00:04:12,230
from bottom to top.

68
00:04:12,230 --> 00:04:14,570
And that's what is a bubble.

69
00:04:14,870 --> 00:04:18,529
A bubble has a tendency to go up from the bottom.

70
00:04:18,620 --> 00:04:21,800
And that's why we say that this is event bubbling.

71
00:04:22,160 --> 00:04:28,910
And the default part of event propagation is bottom to top.

72
00:04:29,420 --> 00:04:33,050
This is the behaviour of event management in JavaScript.

73
00:04:33,380 --> 00:04:40,550
In case if you want to stop this behaviour, that is, you warned that when the button is clicked it

74
00:04:40,550 --> 00:04:44,180
should not propagate the event to its ancestors.

75
00:04:44,480 --> 00:04:51,140
You can use this using a method called stop propagation, which is a matter of event object.

76
00:04:51,140 --> 00:04:53,760
So you can say event or stop propagation.

77
00:04:53,960 --> 00:04:55,400
Let's try that practically.

78
00:04:57,090 --> 00:04:58,230
I'll just remove this.

79
00:04:59,470 --> 00:05:06,340
Saving it, going back to the output, refreshing and just bringing the previous chord again where when

80
00:05:06,340 --> 00:05:11,620
you click on the button, the button event is fired and the division event is also fired.

81
00:05:11,710 --> 00:05:14,980
Now let's say we do not want this propagation to happen.

82
00:05:15,310 --> 00:05:20,110
Then here I will say event, not stop propagation.

83
00:05:21,040 --> 00:05:21,610
That's it.

84
00:05:21,970 --> 00:05:22,990
I'll save it here.

85
00:05:23,680 --> 00:05:24,910
Coming back to the browser.

86
00:05:25,000 --> 00:05:26,260
Refreshing and.

87
00:05:26,890 --> 00:05:27,310
Button.

88
00:05:27,310 --> 00:05:28,960
Click the button.

89
00:05:28,960 --> 00:05:29,830
Click this file.

90
00:05:30,310 --> 00:05:31,240
And no division.

91
00:05:31,240 --> 00:05:35,950
Click is available now because we have stopped the propagation behavior.

92
00:05:36,250 --> 00:05:41,920
So again, the default propagation path is bottom to top are bubbling.

93
00:05:42,130 --> 00:05:43,930
And that's what even bubbling is.

94
00:05:44,170 --> 00:05:49,240
That is the event object is dispatched on a path that is bottom to top.

95
00:05:49,450 --> 00:05:56,740
In case if you want to change this default propagation path that is instead of bottom to top, we make

96
00:05:56,740 --> 00:05:57,970
it top to bottom.

97
00:05:58,330 --> 00:06:00,910
Then that will be called capturing.

98
00:06:01,300 --> 00:06:08,350
And for capture phase, you have to use add event listener method to configure or bind the event.

99
00:06:08,920 --> 00:06:14,710
Capturing phase means top to bottom that is reverse to the bubbling.

100
00:06:15,040 --> 00:06:22,090
This also means in our code, when the button is clicked first the division click will be fired and

101
00:06:22,090 --> 00:06:23,590
then the button click.

102
00:06:23,770 --> 00:06:25,120
Let's do this practically.

103
00:06:25,780 --> 00:06:34,300
Here I will see window dart on load because I'm going to bind the events using active and listener.

104
00:06:34,480 --> 00:06:36,850
This is one of the way to write the event.

105
00:06:37,210 --> 00:06:42,820
Now we do not need this on click any more here, so I'm going to remove these things both the click

106
00:06:42,820 --> 00:06:43,960
events we don't want.

107
00:06:44,530 --> 00:06:47,080
I don't even want this name here.

108
00:06:47,320 --> 00:06:48,940
We will take two variables.

109
00:06:48,940 --> 00:06:56,560
I'll say contact between one and inside of that I'm going to get the reference off button.

110
00:06:56,680 --> 00:07:01,870
So again, I'll say button one here and I'll set this one.

111
00:07:03,340 --> 00:07:05,650
And that will be again day one.

112
00:07:06,070 --> 00:07:08,530
Now, we need to give you these ideas as well.

113
00:07:08,560 --> 00:07:12,010
So for day I will say it is equal to day one.

114
00:07:12,100 --> 00:07:15,790
And for button, I just say button one.

115
00:07:16,300 --> 00:07:20,440
So we have a difference of both between one and the one in these objects.

116
00:07:21,100 --> 00:07:23,290
Now comes the event binding part.

117
00:07:23,350 --> 00:07:28,030
Using Add event listener I submit the end one not add event listener.

118
00:07:28,300 --> 00:07:30,610
Now this method takes three parameters.

119
00:07:30,730 --> 00:07:31,810
First is the event.

120
00:07:31,810 --> 00:07:33,180
Remember we right click.

121
00:07:33,190 --> 00:07:34,980
We do not right on click here.

122
00:07:34,990 --> 00:07:36,430
That's how this index is.

123
00:07:36,640 --> 00:07:39,790
The second is which function you want to call.

124
00:07:40,000 --> 00:07:40,930
So this is the button.

125
00:07:40,930 --> 00:07:43,840
So I want to call a function, call beaty and click.

126
00:07:43,840 --> 00:07:45,400
So that will come here.

127
00:07:45,760 --> 00:07:49,390
And the last parameter is true or false.

128
00:07:49,570 --> 00:07:56,950
This actually decides the last parameter that you want to have the bubble phrase or you want to have

129
00:07:57,190 --> 00:07:59,470
the capture phase by default.

130
00:07:59,470 --> 00:08:05,560
If you do not specify, let's say you pass only two parameters, then it will be bubble phase by default.

131
00:08:05,560 --> 00:08:09,820
But if you want to make it capture phase, then you will say true here.

132
00:08:11,400 --> 00:08:18,780
Let's also attach the event with division for this all sides a click and do click is the function I

133
00:08:18,780 --> 00:08:19,440
want to call.

134
00:08:20,610 --> 00:08:22,680
And here also I just want to say true.

135
00:08:23,250 --> 00:08:29,660
So now there are two events and both are going to execute from top to bottom.

136
00:08:29,670 --> 00:08:36,179
This means when I click on the button, the capture phase will start, event object will be dispatched

137
00:08:36,179 --> 00:08:37,500
from top to bottom.

138
00:08:37,830 --> 00:08:42,299
So the first will be do one click and then the button click.

139
00:08:42,450 --> 00:08:43,890
Right, let's save this.

140
00:08:44,220 --> 00:08:45,450
Go back to the output.

141
00:08:45,810 --> 00:08:50,070
I will just refresh the browser and clicking on the button only.

142
00:08:50,670 --> 00:08:51,270
Amazing.

143
00:08:51,570 --> 00:09:00,030
It displays this click first and then it displays the button clicked because the event object is dispatched,

144
00:09:00,030 --> 00:09:02,910
the propagation path is changed.

145
00:09:02,910 --> 00:09:06,570
Now it is from top to bottom that is capturing.

146
00:09:06,720 --> 00:09:12,780
So this is event capturing and by default it is event babbling in chart.

147
00:09:12,780 --> 00:09:15,990
All these concepts are related to event propagation path.

148
00:09:16,350 --> 00:09:22,020
There are few events which do not get propagated like focus events, but it's a kind of exception.

149
00:09:22,020 --> 00:09:25,230
Otherwise events do bubble by default.

150
00:09:26,650 --> 00:09:32,440
Do not think that this bubbling or capturing behavior is weird or bad.

151
00:09:32,710 --> 00:09:34,390
It is designed intentionally.

152
00:09:34,750 --> 00:09:41,710
This type of behavior can also be useful when you have deep level elements and assumed that you want

153
00:09:41,710 --> 00:09:42,730
to handle event.

154
00:09:42,910 --> 00:09:49,990
At one point only babbling or captioning actually facilitates you with one of the most powerful event

155
00:09:49,990 --> 00:09:55,730
handling pattern called event delegation, which will be our next section stopping.

156
00:09:55,810 --> 00:09:58,960
Now let's discuss related questions of this topic.

157
00:09:59,230 --> 00:10:02,830
The first question is, which is the default propagation path?

158
00:10:03,220 --> 00:10:08,080
So now, you know, first of all, you should know what is propagation and then which is the default

159
00:10:08,080 --> 00:10:08,410
path.

160
00:10:08,440 --> 00:10:11,440
It is, of course, bottom to top that is babbling.

161
00:10:13,900 --> 00:10:17,560
The second question, how can you stop event propagation?

162
00:10:17,590 --> 00:10:24,460
So we have seen that event, our stop propagation method that helps us to stop the propagation.

163
00:10:27,180 --> 00:10:31,380
The third question is how can you change the default propagation path?

164
00:10:31,680 --> 00:10:37,710
So this is where we use the ADD event listener and the third parameter of ADD event listener.

165
00:10:37,710 --> 00:10:43,920
We make it true to make sure that instead of going bottom to top, it goes top to bottom.

166
00:10:43,920 --> 00:10:45,360
That is the capturing phase.

167
00:10:47,710 --> 00:10:54,700
The fourth question is how can you get the reference of element on which the event is fire or the reference

168
00:10:54,700 --> 00:11:01,300
of Element which raised the event so that we get using event or target, we can use event or target,

169
00:11:01,300 --> 00:11:04,300
date name, event or target dot value for that matter.

170
00:11:04,300 --> 00:11:10,870
So whichever element has the focus that elements value, we can refer to using event or target or value

171
00:11:10,870 --> 00:11:11,260
as well.

172
00:11:13,620 --> 00:11:20,520
And the fifth question can be that the code which we saw earlier that can be given and then one can

173
00:11:20,520 --> 00:11:24,690
ask you that what will be the output of this call and why?

174
00:11:24,810 --> 00:11:30,480
So you can discuss about the bubbling happening by default in the DOM architecture.

