WEBVTT
1
00:00:00.060 --> 00:00:06.330
In this section we will learn what is debugging and how to debug JavaScript code in various browsers.

2
00:00:06.570 --> 00:00:08.580
With the help of the developer tool.

3
00:00:09.820 --> 00:00:13.990
The category of this question is debugging techniques.

4
00:00:14.530 --> 00:00:18.190
There will be two related questions for this particular topic.

5
00:00:19.300 --> 00:00:25.090
Any application or program that you think of may have some or other issues or errors.

6
00:00:25.090 --> 00:00:33.040
Like sometimes it might have runtime errors or maybe design time errors which you need to resolve to

7
00:00:33.040 --> 00:00:34.510
get the desired output.

8
00:00:35.890 --> 00:00:42.400
And debugging is the process of searching and resolving the bugs or errors from the code.

9
00:00:44.100 --> 00:00:44.430
Now.

10
00:00:44.430 --> 00:00:47.430
What are runtime and design time areas?

11
00:00:48.680 --> 00:00:53.530
So runtime error is a program error that occurs at the time of execution.

12
00:00:53.540 --> 00:00:55.670
That is while the program is running.

13
00:00:56.610 --> 00:01:00.000
Runtime errors are often referred to as bugs.

14
00:01:01.440 --> 00:01:04.890
These errors are faced by the end user.

15
00:01:04.890 --> 00:01:08.640
That is the user of a program, the application, the web page.

16
00:01:10.430 --> 00:01:18.520
Design errors are the ones that occur at the time of development, at the time of designing the application.

17
00:01:19.410 --> 00:01:19.890
That is.

18
00:01:20.550 --> 00:01:28.350
The developer is calling, for example, when you accidentally write wrong variables or sometimes when

19
00:01:28.350 --> 00:01:35.640
you call the function or use variable names that are not declared or typo in programming language,

20
00:01:35.640 --> 00:01:39.870
keywords generate these types of design time errors.

21
00:01:41.880 --> 00:01:49.410
These types of errors, which we also call as syntax errors, are generated at the time of compiling

22
00:01:49.410 --> 00:01:53.370
the code and can be reduced with advanced code editors.

23
00:01:55.020 --> 00:02:01.580
So runtime errors or bugs are faced by the end user that is user of the program.

24
00:02:01.950 --> 00:02:06.900
Whereas syntax errors are design time errors are for developers.

25
00:02:09.460 --> 00:02:18.070
Desktop applications were easy to debug for runtime errors as compared to browser based web applications

26
00:02:18.070 --> 00:02:19.150
in the early days.

27
00:02:19.630 --> 00:02:26.640
But in modern web development, browsers are competent enough with debugging plugins and tools.

28
00:02:26.650 --> 00:02:30.790
For example, the developer tool available in all the browsers.

29
00:02:32.390 --> 00:02:39.650
There are various plugins available in the browser that help you to debug your application like Redux

30
00:02:39.650 --> 00:02:46.340
Dev Tools, Dart Debug Extension, X, Debug Helper, Google Analytics and many others.

31
00:02:47.210 --> 00:02:49.010
These are Google Chrome plugins.

32
00:02:49.610 --> 00:02:53.750
Other browsers also provide their respective plugins.

33
00:02:55.180 --> 00:03:00.310
But we are going to focus on the developer tool as it's a part of all the browsers.

34
00:03:01.270 --> 00:03:04.210
So let us first understand what is a developer tool?

35
00:03:05.410 --> 00:03:07.390
Every browser has a developer tool.

36
00:03:07.900 --> 00:03:13.030
The developers have to run logs, debug code, check, response time from the server.

37
00:03:13.510 --> 00:03:16.240
All such types of operations you can manage.

38
00:03:16.420 --> 00:03:18.850
You can check in the browser's developer tool.

39
00:03:20.180 --> 00:03:24.620
As the name explains, the developer tool is meant for developers.

40
00:03:25.460 --> 00:03:30.590
Now let me go to Google Chrome to open the developer tool here.

41
00:03:30.590 --> 00:03:37.880
I will go to the menu on the top right then in the more tools, select the last developer tool option.

42
00:03:39.010 --> 00:03:40.990
And the developer tool will open.

43
00:03:42.110 --> 00:03:47.900
Here you can see various tabs like elements, console sources, network, etc..

44
00:03:48.170 --> 00:03:54.350
Let us quickly go through these tabs as we are going to discuss in detail in forthcoming sections.

45
00:03:55.920 --> 00:03:58.650
This first I can hear is the inspect element.

46
00:03:59.310 --> 00:04:05.490
In fact, it is a switch that allows you to inspect any element of the HTML document.

47
00:04:05.580 --> 00:04:12.990
When you click here, it turns on and as soon as you select any element, let's see here I select this

48
00:04:12.990 --> 00:04:13.860
search bar.

49
00:04:14.190 --> 00:04:20.279
It turns off and you see here in the Elements tab, it shows the source code.

50
00:04:21.230 --> 00:04:23.090
Related to this search bar.

51
00:04:23.690 --> 00:04:30.590
Now, next is the Elements tab, which shows the HTML code of the currently open web page.

52
00:04:31.130 --> 00:04:34.610
For example, let me open the site, Amazon.

53
00:04:35.810 --> 00:04:36.140
Here.

54
00:04:36.140 --> 00:04:43.330
It shows the core of this page and on the right side, it displays the causes used for this page.

55
00:04:44.300 --> 00:04:51.440
Developers generally use this to refer and to understand what is happening behind the scene of their

56
00:04:51.440 --> 00:04:52.190
web page.

57
00:04:53.770 --> 00:05:00.250
The next is the console tab where you can try various console object statements which we will see in

58
00:05:00.250 --> 00:05:03.940
detail in a dedicated tutorial of the console object.

59
00:05:04.920 --> 00:05:12.300
Logs, warnings adders are displayed in the console tab and are categorised here in this sidebar.

60
00:05:14.040 --> 00:05:15.390
About the sauces tab.

61
00:05:15.570 --> 00:05:23.070
The name explains itself that it shows the JavaScript source code of the currently open web page.

62
00:05:23.280 --> 00:05:27.360
And here on the left side, there is a list of JavaScript files.

63
00:05:27.990 --> 00:05:33.240
If you select any of the file, you can see the source code and can check for errors.

64
00:05:33.240 --> 00:05:34.350
You can put breaks.

65
00:05:34.350 --> 00:05:40.290
And there are other things which you can do which we will see again in a dedicated section.

66
00:05:41.660 --> 00:05:49.310
This network tab displays all the requests made to the server along with the response beet and HTML

67
00:05:49.310 --> 00:05:53.870
CSS image, javascript files or any other asset.

68
00:05:54.910 --> 00:05:56.410
Let me refresh this site.

69
00:05:56.410 --> 00:06:00.490
And as you can see here, let me increase the developer tools size.

70
00:06:01.580 --> 00:06:08.180
It shows the network activity like status type, initiator, time size, etc..

71
00:06:08.570 --> 00:06:12.050
As soon as the page and its resources started loading.

72
00:06:15.130 --> 00:06:22.360
Now to open the developer tool in Firefox, I will again go to the menu and then do more options and

73
00:06:22.360 --> 00:06:25.060
select the Web Developer Tools option.

74
00:06:26.130 --> 00:06:29.640
If you are on Mac machine, go to safari.

75
00:06:30.490 --> 00:06:37.810
Preferences are press command plus comma, which is a shortcut which will bring this screen.

76
00:06:38.980 --> 00:06:43.030
Again, go to advanced and check this option.

77
00:06:43.210 --> 00:06:46.090
This action will start showing the develop menu.

78
00:06:46.870 --> 00:06:52.780
Now to open the developer tool, go to develop and click show web inspector.

79
00:06:55.770 --> 00:07:03.150
And for almost all the browsers like Chrome, Firefox, Internet Explorer, Microsoft, Edge, etc.

80
00:07:03.480 --> 00:07:12.810
the keyboard shortcut to open the developer tool is control shift IE or F12, and for Mac OS it is command

81
00:07:12.810 --> 00:07:13.740
option i.e..

82
00:07:14.650 --> 00:07:18.670
So we have seen the introduction to debugging and the developer tool.

83
00:07:19.480 --> 00:07:25.030
In the next section we will start learning about the developer tool and debugging techniques practically.

84
00:07:26.650 --> 00:07:28.540
Now let's discuss related questions.

85
00:07:30.360 --> 00:07:36.600
The first question is explain debugging and runtime versus design time errors.

86
00:07:37.080 --> 00:07:43.830
So as I explained, debugging is the process of finding and resolving the bugs or errors in the applications.

87
00:07:44.250 --> 00:07:51.090
And the difference between runtime and design time is that runtime errors are occurred at the time of

88
00:07:51.090 --> 00:07:58.470
execution, whereas the design time errors are the syntax errors that occur at the time of coding,

89
00:07:58.470 --> 00:08:02.220
that is at the time of compiling at the time of development.

90
00:08:02.550 --> 00:08:09.570
Runtime errors are faced by the end users, but design time errors are for developers as they can be

91
00:08:09.570 --> 00:08:11.670
corrected at the time of completion.

92
00:08:13.830 --> 00:08:16.110
The next question is what is a developer tool?

93
00:08:16.200 --> 00:08:19.500
So developer tool is basically for the developers.

94
00:08:19.500 --> 00:08:25.200
And all modern browsers provide integrated developer tools that help the developers to inspect their

95
00:08:25.200 --> 00:08:25.830
web page.

96
00:08:25.860 --> 00:08:32.850
So we have seen elements, console sources, network like tabs in brief and we are going to discuss

97
00:08:32.850 --> 00:08:34.770
in detail in forthcoming sections.

