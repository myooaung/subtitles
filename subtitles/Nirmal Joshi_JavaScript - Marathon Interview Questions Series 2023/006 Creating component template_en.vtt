WEBVTT
1
00:00:07.810 --> 00:00:14.500
In this court of component at the moment, we just have this H1 added to the shadow route.

2
00:00:15.400 --> 00:00:23.410
But our desired component looks like this, which has many elements and CCIS which will be easy to implement

3
00:00:23.410 --> 00:00:25.360
with the help of template.

4
00:00:25.360 --> 00:00:27.760
So let's start implementing it.

5
00:00:28.300 --> 00:00:33.730
We will create a template element which will contain the design of the component.

6
00:00:33.970 --> 00:00:37.680
I will create a template element here on the top.

7
00:00:37.690 --> 00:00:43.030
I'll say const template is equal to document.

8
00:00:43.030 --> 00:00:47.360
Dot create element inside.

9
00:00:47.380 --> 00:00:49.330
I'll say template.

10
00:00:51.100 --> 00:00:54.970
Let's take this H1 or XHTML on top.

11
00:00:55.000 --> 00:00:58.570
Instead of H1, I will say template.

12
00:00:59.620 --> 00:01:03.430
So a template is the object to which the inner HTML is assigned.

13
00:01:04.260 --> 00:01:07.000
Now let's remove the Constitution.

14
00:01:07.020 --> 00:01:08.220
We don't need it.

15
00:01:09.040 --> 00:01:14.560
Now in this append child, I will add the template object instead of each one.

16
00:01:15.160 --> 00:01:23.260
But as discussed in the previous lecture, we will have to create a clone of template and add to the

17
00:01:23.260 --> 00:01:24.430
shadow dom.

18
00:01:26.200 --> 00:01:29.770
So here I will say dot content.

19
00:01:30.930 --> 00:01:31.700
Dot.

20
00:01:31.890 --> 00:01:33.030
Clone node.

21
00:01:33.720 --> 00:01:35.130
And true.

22
00:01:36.750 --> 00:01:41.850
So this will create the copy of the template and will add in the shadow dom.

23
00:01:42.810 --> 00:01:49.980
And now you see that the component is working, but one is removed, which is absolutely fine as let's

24
00:01:49.980 --> 00:01:55.020
paste the HTML and CSS of the component inside this inner edge.

25
00:01:55.070 --> 00:01:55.740
HTML.

26
00:01:55.920 --> 00:02:04.170
I already have the HTML code of the component which I'm copying it and let me paste here instead of

27
00:02:04.170 --> 00:02:05.430
product component.

28
00:02:06.210 --> 00:02:15.000
Now let me go to the CSIS and copy the entire CSIS and paste it in the style section.

29
00:02:16.290 --> 00:02:20.070
And now you see that the components shape is taken.

30
00:02:20.820 --> 00:02:24.300
Now, let me also indent this style for a moment.

31
00:02:26.370 --> 00:02:26.790
All right.

32
00:02:26.790 --> 00:02:29.460
So now the component is in little shape.

33
00:02:30.360 --> 00:02:33.290
I just want to quickly mention about the design.

34
00:02:33.300 --> 00:02:41.070
The style is just padding margin and some shadow effects given you can check the resources for the code

35
00:02:41.430 --> 00:02:43.080
inside HTML.

36
00:02:43.080 --> 00:02:50.280
That is a division image and edge three and a paragraph with a button which is easy to understand.

37
00:02:50.730 --> 00:02:58.890
You can also observe that the components are rendered now, but with the same data that is the image

38
00:02:58.890 --> 00:03:01.170
and labels are the same.

39
00:03:01.530 --> 00:03:07.530
Ideally, when it comes to passing the data to the element, we need attributes.

40
00:03:07.530 --> 00:03:14.040
So next step we will implement attributes to pass the data for each product.

