1
00:00:00,090 --> 00:00:04,320
So this coding exercise is about removing duplicate values from and adding.

2
00:00:10,050 --> 00:00:11,610
Will be using two methods.

3
00:00:11,700 --> 00:00:17,010
There are many ways to remove duplicate values and also we are using six features as well.

4
00:00:17,430 --> 00:00:23,460
The first way to remove duplicate is we can use the filter and the index of methods.

5
00:00:24,150 --> 00:00:29,520
I hope you have checked the filter and index of method in every section of this tutorial.

6
00:00:30,450 --> 00:00:32,670
First of all, let's declare an add.

7
00:00:32,790 --> 00:00:34,140
So here I have an added.

8
00:00:34,770 --> 00:00:37,350
It might be a numeric character or string added.

9
00:00:37,380 --> 00:00:38,250
That doesn't matter.

10
00:00:38,280 --> 00:00:43,770
At the moment I am taking the numeric array for the example where we have three and five as duplicate

11
00:00:43,770 --> 00:00:46,860
values because we are going to use the filter method.

12
00:00:47,250 --> 00:00:50,220
Filter is a matter which returns a new ADI.

13
00:00:50,550 --> 00:00:53,300
At the moment I'm not taking any new ADI.

14
00:00:53,670 --> 00:00:57,870
It takes a callback function which we have already discussed in the ADI section.

15
00:00:58,260 --> 00:01:00,540
This callback function has two parameters.

16
00:01:00,540 --> 00:01:03,780
The first is the value, and second is the index number.

17
00:01:04,379 --> 00:01:06,840
At the moment I am not returning anything.

18
00:01:07,080 --> 00:01:11,390
Instead, to understand it clearly, I'm going to display a few values.

19
00:01:11,400 --> 00:01:18,270
The first thing I am going to do is I'm going to display the value V Then let's also display the index

20
00:01:18,270 --> 00:01:20,670
of let me have a separator in between.

21
00:01:21,390 --> 00:01:25,080
The second is I'm going to find the index of the value.

22
00:01:25,620 --> 00:01:29,640
Let's also display the I that is the index of that value.

23
00:01:30,060 --> 00:01:33,960
This will give you the idea that what type of validation will help to put.

24
00:01:34,350 --> 00:01:35,580
Let me just run the code.

25
00:01:38,700 --> 00:01:39,720
Now the first thing.

26
00:01:40,320 --> 00:01:43,360
The first one which you see is the value we.

27
00:01:44,380 --> 00:01:53,590
The second zero is index of value v that is one and the last is the index, the actual index of that

28
00:01:53,590 --> 00:01:54,670
value in the ADI.

29
00:01:55,030 --> 00:02:01,690
If you observe the duplicate value we have, let's see, three and five is the duplicate value in both

30
00:02:01,690 --> 00:02:04,960
the cases that is here also three and five.

31
00:02:05,440 --> 00:02:14,830
If you observe index of and I is not seen whenever there is a unique value because index off is always

32
00:02:14,830 --> 00:02:16,840
going to find the first occurrence.

33
00:02:17,320 --> 00:02:22,720
I do insist that you go through the index of explanation in the tutorial of add section.

34
00:02:23,290 --> 00:02:32,020
So here, whenever there is a change in the index of value and index, that means that value is duplicate.

35
00:02:32,410 --> 00:02:35,800
This also means that if I just return.

36
00:02:37,230 --> 00:02:41,520
By comparing the index off and i.e. with an equal to sign.

37
00:02:41,940 --> 00:02:46,650
That means I'm going to get all unique values so I can just stick new.

38
00:02:46,650 --> 00:02:54,090
Adding here let's a unique ADI and I display the value uader let's run the code.

39
00:02:56,050 --> 00:02:59,590
As you can see, we have all the unique values returned.

40
00:03:00,040 --> 00:03:08,200
So return statement in filter method will return the value which matches the condition that is when

41
00:03:08,200 --> 00:03:09,130
it returns true.

42
00:03:09,430 --> 00:03:15,700
If I just put an exclamation here, then it will display only the duplicate values of the ADI, like

43
00:03:15,700 --> 00:03:16,420
three and five.

44
00:03:16,870 --> 00:03:21,210
So this is the explanation for getting the unique value Adi.

45
00:03:22,030 --> 00:03:23,950
Now let's also try the second way.

46
00:03:23,950 --> 00:03:28,570
That is the E6 way and it is very easy to deal with.

47
00:03:29,200 --> 00:03:32,860
Again, that is a set and mapped section in this tutorial.

48
00:03:33,070 --> 00:03:36,970
You must go through the tutorial first, then you will be able to understand.

49
00:03:37,450 --> 00:03:38,050
But here.

50
00:03:39,070 --> 00:03:46,330
Instead of writing this filter or anything else I can simply do is I can use the spread operator and

51
00:03:46,330 --> 00:03:50,550
create a new set of the ADI.

52
00:03:50,860 --> 00:03:57,720
So now here you have the new set of ADI that gets converted into Adi and I'm assigning it to you area.

53
00:03:57,880 --> 00:03:58,390
That's it.

54
00:03:58,570 --> 00:04:02,020
So just three line code and you get the unique values.

55
00:04:02,230 --> 00:04:07,190
Apart from this two methods, there are many other ways you can find using that include.

56
00:04:07,330 --> 00:04:12,070
You can have a for each loop and then you can compare and return a new element.

57
00:04:12,340 --> 00:04:19,540
That's also possible, but these two are the basic ways to find the unique values from an ADI.

