1
00:00:00,060 --> 00:00:00,700
Hello, everyone.

2
00:00:01,380 --> 00:00:06,330
In this section we are going to discuss about prime number problem.

3
00:00:10,080 --> 00:00:15,090
When the program is executed, it is going to ask a number.

4
00:00:15,360 --> 00:00:17,160
It will say enter a number.

5
00:00:18,030 --> 00:00:20,940
For example, user enters seven.

6
00:00:22,090 --> 00:00:24,940
Then it'll say seven is a prime number.

7
00:00:26,800 --> 00:00:34,480
For example, the user enters ten here that it'll say ten is not a prime number.

8
00:00:35,380 --> 00:00:39,370
Let's discuss this solution through logic and pseudocode first.

9
00:00:40,510 --> 00:00:43,870
First question is what is a prime number?

10
00:00:44,890 --> 00:00:51,970
So by definition, a prime number is a kind of number which is divisible by one and itself.

11
00:00:53,680 --> 00:00:55,780
Let's take an example of seven.

12
00:00:56,710 --> 00:00:58,540
Seven is a prime number.

13
00:00:59,200 --> 00:01:02,950
That is it is divisible by one and seven.

14
00:01:03,520 --> 00:01:09,640
No other number can divide seven other than one and seven itself.

15
00:01:10,750 --> 00:01:16,420
If you consider 13, it also cannot be divided by any other number.

16
00:01:17,640 --> 00:01:23,460
But if you say ten then it is divisible by two and it is divisible by five as well.

17
00:01:24,060 --> 00:01:25,860
So ten is not a prime number.

18
00:01:26,920 --> 00:01:34,420
So if we look at this discussion, we can make out that the numbers which are not divisible by any other

19
00:01:34,420 --> 00:01:37,720
number, they are the prime numbers.

20
00:01:38,590 --> 00:01:44,050
This now we know, but how to achieve the same thing programmatically.

21
00:01:44,560 --> 00:01:49,180
Let's try to put a few steps to check whether a number is prime or not.

22
00:01:50,440 --> 00:01:52,840
Consider file, for example.

23
00:01:54,100 --> 00:02:01,210
If I want to check that file is prime or not, then first I will check.

24
00:02:01,390 --> 00:02:07,540
Is file divisible by two because one any way can divide any number.

25
00:02:08,740 --> 00:02:14,680
So I'm going to start checking with two that is five divisible by two.

26
00:02:14,770 --> 00:02:21,250
Now here I am going to use a personal date sign, even in the logic and even in the pseudocode, because

27
00:02:21,550 --> 00:02:29,590
percentage is a most commonly used operator known as the modulus operator, which returns the remainder.

28
00:02:29,950 --> 00:02:36,040
So Modulus Operator, the percentage operator can be used to check the visibility.

29
00:02:36,850 --> 00:02:40,720
So here the first question is five divisible by two.

30
00:02:41,020 --> 00:02:45,580
If it is not divisible, then for two it is prime.

31
00:02:46,210 --> 00:02:50,200
But I need to check below and minus one.

32
00:02:50,350 --> 00:02:55,630
So what I will have to do is I will check is five divisible by two.

33
00:02:56,050 --> 00:02:57,370
No good.

34
00:02:57,790 --> 00:02:59,700
Then I will check with the next number.

35
00:02:59,710 --> 00:03:01,600
Is five divisible by three.

36
00:03:02,230 --> 00:03:06,070
No good is five divisible by four?

37
00:03:06,370 --> 00:03:06,910
No.

38
00:03:07,120 --> 00:03:09,190
Then only it is a prime number.

39
00:03:09,670 --> 00:03:14,420
It means starting from two to end minus one.

40
00:03:14,440 --> 00:03:16,810
In this case, the number is five.

41
00:03:17,080 --> 00:03:22,660
We have taken example of five, so we are going to check till four.

42
00:03:23,050 --> 00:03:25,930
So starting from two to end minus one.

43
00:03:26,440 --> 00:03:31,390
If no number can divide, then only it is a prime number.

44
00:03:31,600 --> 00:03:40,060
So this means we will have to put a loop which starts at two and ends at end minus one.

45
00:03:40,360 --> 00:03:42,910
Assume that this end is 13.

46
00:03:43,030 --> 00:03:45,010
That means from 2 to 12.

47
00:03:45,370 --> 00:03:46,420
You want to check?

48
00:03:46,900 --> 00:03:53,140
Of course you can reduce the number of repetitions, but that we are not discussing at the moment.

49
00:03:53,380 --> 00:04:00,130
We can improvise the coding, but that we will see at a later stage when we can reduce the number of

50
00:04:00,130 --> 00:04:03,400
repetitions and the code can execute faster.

51
00:04:03,550 --> 00:04:11,110
But right now, fundamentally, when you check about prime number, you start with two and go till and

52
00:04:11,110 --> 00:04:11,950
minus one.

53
00:04:13,600 --> 00:04:16,149
Let's try this with pseudocode.

54
00:04:16,540 --> 00:04:25,510
For value phi we consider variable n which has value five and and is the variable which we want to check.

55
00:04:25,510 --> 00:04:27,100
Whether it's prime or not.

56
00:04:27,370 --> 00:04:35,590
We are going to put a loop using a variable called counter which will begin at two and it will go till

57
00:04:35,590 --> 00:04:36,070
four.

58
00:04:36,070 --> 00:04:40,630
That is actually and minus one and step will be one.

59
00:04:40,630 --> 00:04:48,550
That means every time it gets incremented because we need to check whether end is divisible by counter

60
00:04:48,850 --> 00:04:51,310
we are going to use and if condition.

61
00:04:52,250 --> 00:05:01,160
So ideally you may think of writing something like this if and Modulus C and D that is if it is divisible

62
00:05:01,520 --> 00:05:03,440
then it is not prime.

63
00:05:04,920 --> 00:05:10,200
And if it is not divisible in the L spot, you will say it is prime.

64
00:05:11,280 --> 00:05:14,700
So ideally when you run, this end will be five.

65
00:05:14,730 --> 00:05:16,020
And counter is two.

66
00:05:16,230 --> 00:05:18,900
So is file divisible by two?

67
00:05:19,110 --> 00:05:19,980
It is not.

68
00:05:20,340 --> 00:05:22,290
That means it will say it is prime.

69
00:05:23,770 --> 00:05:30,070
But if you put this inside the loop, the core will not work the way we are expecting.

70
00:05:30,860 --> 00:05:36,730
Let's try to run this practically here on the page to see what will be the issue.

71
00:05:37,240 --> 00:05:42,880
So five modulus, two it'll say it is prime because it is not divisible.

72
00:05:44,110 --> 00:05:46,810
Now counter will be incremented by one.

73
00:05:46,900 --> 00:05:49,090
So counter will become three.

74
00:05:49,900 --> 00:05:52,780
Is five divisible by three?

75
00:05:52,900 --> 00:05:53,980
No, it is not.

76
00:05:54,220 --> 00:05:55,900
Again, it will say prime.

77
00:05:56,260 --> 00:05:57,940
The counter will become four.

78
00:05:58,180 --> 00:06:00,220
Is five divisible by four?

79
00:06:00,640 --> 00:06:01,720
No, it is not.

80
00:06:01,870 --> 00:06:04,060
Third time it will say prime.

81
00:06:05,020 --> 00:06:09,820
So you wanted that it should show prime only once.

82
00:06:10,990 --> 00:06:14,500
Let's take an example of number six.

83
00:06:14,950 --> 00:06:19,090
So now your loop will run from 2 to 5.

84
00:06:19,750 --> 00:06:21,850
Is six divisible by two?

85
00:06:22,000 --> 00:06:26,790
It is so it will say not prime counter will become three.

86
00:06:26,800 --> 00:06:28,750
Is six divisible by three?

87
00:06:29,050 --> 00:06:30,310
Yes, it is divisible.

88
00:06:30,340 --> 00:06:32,650
Again, the message will be not prime.

89
00:06:34,320 --> 00:06:36,330
Now the counter will become four.

90
00:06:36,900 --> 00:06:38,760
So is six divisible by four?

91
00:06:38,970 --> 00:06:39,470
No.

92
00:06:39,540 --> 00:06:40,980
So it'll say prime.

93
00:06:41,700 --> 00:06:45,420
So if the number is six, sometimes it will say prime.

94
00:06:45,420 --> 00:06:48,150
And sometimes it will say it's not a prime number.

95
00:06:48,990 --> 00:06:51,390
That is something which we do not want.

96
00:06:52,140 --> 00:07:01,410
What we want is that from 2 to 5, no number should divide this given number.

97
00:07:01,650 --> 00:07:06,000
Then only it is a prime number in such case.

98
00:07:06,210 --> 00:07:11,550
What you can do is you can take an additional variable in programming.

99
00:07:11,760 --> 00:07:14,190
This is called as a flag variable.

100
00:07:15,490 --> 00:07:24,220
You can name this flag variable whatever you want to, but this flag is going to keep some status.

101
00:07:24,700 --> 00:07:31,510
It is going to store some value that will determine at the end whether it was prime or not.

102
00:07:32,290 --> 00:07:37,030
You can name this flag variable anything, right?

103
00:07:37,210 --> 00:07:40,660
You can name, test or anything you want to.

104
00:07:40,900 --> 00:07:41,860
That doesn't matter.

105
00:07:42,100 --> 00:07:46,480
What matters is the concept of flag variable.

106
00:07:47,020 --> 00:07:54,190
Whenever we say it's a flag variable, that means it's a kind of variable which is going to keep a state

107
00:07:54,940 --> 00:07:56,080
for certain things.

108
00:07:56,830 --> 00:08:01,930
So here, let me take a variable called is prime.

109
00:08:02,830 --> 00:08:09,670
Now in various programming languages, you have data type called boolean where you can keep this.

110
00:08:09,910 --> 00:08:11,170
True or false?

111
00:08:12,720 --> 00:08:18,480
But at the moment, because we are writing pseudo code and we do not want to deal with complex data

112
00:08:18,480 --> 00:08:21,870
types here, let's say in is prime.

113
00:08:22,320 --> 00:08:30,360
I'm going to say one that means I assume from the beginning that the given number is a prime number.

114
00:08:31,760 --> 00:08:34,280
You can assign the value you want.

115
00:08:34,309 --> 00:08:39,110
Let's say you decide that six means prime and seven means not prime.

116
00:08:39,500 --> 00:08:40,130
It's fine.

117
00:08:41,270 --> 00:08:47,660
But we are going to take zero and one one means we are going to consider it as a prime number.

118
00:08:47,990 --> 00:08:56,660
So now what will I do if the end was divisible by counter at any point of time?

119
00:08:57,260 --> 00:09:00,480
That means it is divisible like this.

120
00:09:00,890 --> 00:09:05,510
Then I'm going to assign value zero in prime.

121
00:09:06,170 --> 00:09:12,020
Not only that now, because one number could divide that.

122
00:09:12,170 --> 00:09:14,570
I do not want to continue the loop.

123
00:09:14,990 --> 00:09:16,460
I will come out of the loop.

124
00:09:16,460 --> 00:09:22,310
So I will say exit 40 in the language, in the programming language term.

125
00:09:22,550 --> 00:09:24,110
You are going to break the loop.

126
00:09:24,110 --> 00:09:28,970
But because we are writing pseudocode, I am trying to write simple English language.

127
00:09:30,390 --> 00:09:38,430
So here, once the number that is the end was divisible by any value of the counter that is from two

128
00:09:38,430 --> 00:09:42,000
to MN minus one, any number could divide.

129
00:09:42,330 --> 00:09:48,420
That means I'm going to assign is prime, is equal to zero, and then I'm going to come out of the loop

130
00:09:48,420 --> 00:09:56,010
because now it is decided that the number was divisible by some number and because it was divisible,

131
00:09:56,310 --> 00:09:58,710
it is not a prime number anymore.

132
00:09:59,730 --> 00:10:05,970
So now after the loop is over, the only thing you will have to do is you'll just put a condition.

133
00:10:06,300 --> 00:10:11,100
If is prime is equal to one, then you will print.

134
00:10:11,490 --> 00:10:13,890
That number is prime.

135
00:10:14,100 --> 00:10:16,890
Else is prime, value is zero.

136
00:10:17,430 --> 00:10:21,150
Then you will say number is not prime.

137
00:10:21,660 --> 00:10:29,820
So the loop is very simple to understand, but you need to understand the concept of the flag variable.

138
00:10:30,930 --> 00:10:38,400
Flag variable is a kind of variable you use to keep the status of the situation here.

139
00:10:38,580 --> 00:10:41,010
The situation was it was divisible.

140
00:10:41,130 --> 00:10:42,360
So you made it zero.

141
00:10:44,150 --> 00:10:45,710
Let's try to code this.

142
00:10:45,890 --> 00:10:48,200
I'm going to take similar variables here.

143
00:10:48,320 --> 00:10:51,290
Let's say we'll use variable and.

144
00:10:54,240 --> 00:10:56,070
Where we are going to get the data.

145
00:10:56,400 --> 00:10:57,750
So I will say prompt here.

146
00:10:59,070 --> 00:11:00,640
And enter a.

147
00:11:02,000 --> 00:11:02,510
Number.

148
00:11:05,870 --> 00:11:07,490
We'll also take a counter.

149
00:11:07,970 --> 00:11:10,370
Of course, we can put this in a follow up only.

150
00:11:10,850 --> 00:11:15,620
So I will say follow led counter is equal to two.

151
00:11:19,500 --> 00:11:24,170
Counter less thin and right.

152
00:11:24,180 --> 00:11:29,100
I don't have to say to counter less than equal to n minus one, I can say less than.

153
00:11:29,100 --> 00:11:35,010
And so if NN is five it will go till four only and counter plus plus.

154
00:11:35,580 --> 00:11:43,530
Let's try the first way where it is going to show me prime or not prime, but the things.

155
00:11:44,070 --> 00:11:52,980
So I'll just put an if condition here where if number is divisible by counter.

156
00:11:55,410 --> 00:11:58,230
That means it is a prime number.

157
00:11:58,320 --> 00:11:59,580
It's not a prime number.

158
00:12:02,350 --> 00:12:03,250
Not Prime.

159
00:12:09,030 --> 00:12:09,690
Else.

160
00:12:15,280 --> 00:12:16,690
It is a prime number.

161
00:12:19,570 --> 00:12:20,530
Let's run this.

162
00:12:26,520 --> 00:12:27,720
I enter five year.

163
00:12:29,600 --> 00:12:31,760
It says Prime three times.

164
00:12:31,760 --> 00:12:33,230
As you can see, that is a counter.

165
00:12:34,760 --> 00:12:37,880
Let me type six in this case.

166
00:12:38,720 --> 00:12:42,020
So it says non-prime two times and prime two times.

167
00:12:43,130 --> 00:12:43,290
Right.

168
00:12:43,370 --> 00:12:44,390
This is the problem.

169
00:12:44,930 --> 00:12:46,330
So we took a flag really.

170
00:12:46,340 --> 00:12:48,470
But let me take is prime.

171
00:12:48,980 --> 00:12:54,920
Now JavaScript has boolean value so I'm going to say is prime true.

172
00:12:54,920 --> 00:12:59,270
So from the beginning I'm assuming that the number is a prime number.

173
00:13:00,200 --> 00:13:05,330
Now when this was divisible, that means any number could divide.

174
00:13:05,720 --> 00:13:10,100
I'm going to say is prime is equal to false.

175
00:13:10,100 --> 00:13:11,360
I'll make it false.

176
00:13:11,750 --> 00:13:16,610
And of course I'm going to come out of the loop because I do not need to check more iterations.

177
00:13:18,540 --> 00:13:19,290
Like this.

178
00:13:20,890 --> 00:13:22,630
And outside the loop.

179
00:13:23,170 --> 00:13:24,460
I'll put the condition.

180
00:13:25,720 --> 00:13:27,160
That is prime.

181
00:13:28,920 --> 00:13:29,760
It's true.

182
00:13:31,140 --> 00:13:33,270
Then I'll display a message saying.

183
00:13:34,300 --> 00:13:35,260
That and.

184
00:13:37,410 --> 00:13:39,690
Is a prime number.

185
00:13:43,400 --> 00:13:44,150
And it's.

186
00:13:47,310 --> 00:13:48,300
And is.

187
00:13:49,300 --> 00:13:50,740
Not a prime number.

188
00:13:53,970 --> 00:13:56,130
Let's try to run this code now.

189
00:13:56,760 --> 00:13:57,690
I'll say five.

190
00:13:58,200 --> 00:14:00,000
It says five is a prime number.

191
00:14:02,040 --> 00:14:03,390
Let's try six.

192
00:14:04,770 --> 00:14:07,260
It's a six is not a prime number.

193
00:14:09,420 --> 00:14:11,970
Let's try 13.

194
00:14:13,880 --> 00:14:15,470
13 is a prime number.

195
00:14:17,980 --> 00:14:19,300
I'll say 21.

196
00:14:20,660 --> 00:14:22,980
So 21 is not a prime number.

197
00:14:23,810 --> 00:14:30,290
In short, you check the prime number possibility with this kind of logic.

198
00:14:31,010 --> 00:14:34,610
Remember, even if you repeat the loop.

199
00:14:36,350 --> 00:14:38,090
Still and by two.

200
00:14:40,010 --> 00:14:42,110
Then also you will get the correct answer.

201
00:14:42,350 --> 00:14:45,410
See, for example, you have value 100.

202
00:14:46,700 --> 00:14:53,810
Then you need to check till 50 only because by the time if it is divisible, some number will divide.

203
00:14:54,230 --> 00:14:59,330
This is to reduce the iterations and to execute the code faster.

204
00:14:59,630 --> 00:15:05,930
But at the moment we do not want to improvise on the prime number logic or we do not want to make it

205
00:15:06,200 --> 00:15:07,220
more perfect.

206
00:15:07,460 --> 00:15:09,710
We just want to target that.

207
00:15:09,710 --> 00:15:16,940
We understand the logic and we try this simpler code of finding a prime number.

