1
00:00:07,860 --> 00:00:10,260
Now let's talk about the event handling.

2
00:00:10,470 --> 00:00:17,280
We want to implement a functionality where when the button is clicked, it should update the status

3
00:00:17,280 --> 00:00:20,160
from not sold to sold.

4
00:00:22,960 --> 00:00:27,520
Now this is where we use the connected callback method.

5
00:00:28,130 --> 00:00:34,700
Here I will say this dot shadow route dot query selector.

6
00:00:35,420 --> 00:00:38,600
I'll say button dot on click.

7
00:00:39,510 --> 00:00:41,700
Is equal to arrow a function.

8
00:00:42,770 --> 00:00:44,720
Now, let's say console.log.

9
00:00:46,770 --> 00:00:48,420
Button clicked.

10
00:00:49,500 --> 00:00:56,070
Let's save this and check the output on click off buy button.

11
00:00:56,070 --> 00:00:58,140
It says button clicked.

12
00:01:00,070 --> 00:01:01,540
So on click of the button.

13
00:01:01,540 --> 00:01:03,310
The event is getting fired.

14
00:01:03,970 --> 00:01:06,700
Of course, this isn't what we want.

15
00:01:06,970 --> 00:01:09,370
We need to update the status.

16
00:01:09,370 --> 00:01:12,490
So let's do it back to the code.

17
00:01:12,790 --> 00:01:15,520
Let's remove this console log.

18
00:01:16,210 --> 00:01:18,280
Now on click of this button.

19
00:01:18,280 --> 00:01:23,110
We have to change the status from not sold to sold.

20
00:01:23,290 --> 00:01:30,100
You can directly write this dot shadow route dot query selector.

21
00:01:31,690 --> 00:01:33,890
And I'm going to change the paragraphs.

22
00:01:33,910 --> 00:01:35,290
I'll say P here.

23
00:01:35,380 --> 00:01:39,910
Dot inner text is equal to soul.

24
00:01:41,290 --> 00:01:44,920
Let's save this and check the output.

25
00:01:44,920 --> 00:01:47,170
I'll click here on the buy button.

26
00:01:47,770 --> 00:01:50,170
You see that it changes the status.

27
00:01:51,310 --> 00:01:53,620
But this is not the right way.

28
00:01:54,510 --> 00:01:59,830
It is updating on the interface, but the status actually is unchanged.

29
00:01:59,850 --> 00:02:02,820
The status attribute is unchanged.

30
00:02:03,300 --> 00:02:06,060
Ideally, we should change the property.

31
00:02:06,060 --> 00:02:08,850
That is the attribute of the component.

32
00:02:08,850 --> 00:02:16,320
So it should be component dot set attribute or element dot set attribute.

33
00:02:19,090 --> 00:02:22,570
So instead of this inner text line.

34
00:02:23,530 --> 00:02:32,830
I will say this dot set attribute in the brackets, the property, the attribute we want to change is

35
00:02:32,860 --> 00:02:37,720
p status and we want to change it to soul.

36
00:02:37,720 --> 00:02:39,940
So I will say sole.

37
00:02:40,930 --> 00:02:41,080
Now.

38
00:02:41,080 --> 00:02:42,130
Let's save this.

39
00:02:43,350 --> 00:02:45,450
Now let's click on the buy button.

40
00:02:46,170 --> 00:02:48,840
And you see that it stopped working.

41
00:02:49,230 --> 00:02:51,320
It is not changing the status.

42
00:02:51,900 --> 00:02:54,690
In fact, the attribute is changed.

43
00:02:54,690 --> 00:02:57,240
But we need to render the changes.

44
00:02:57,390 --> 00:03:06,360
We need to update the interface when there is a change in the attribute that is attribute added, removed

45
00:03:06,360 --> 00:03:07,680
or modified.

46
00:03:07,680 --> 00:03:13,140
That is an attribute changed callback method which gets executed.

47
00:03:13,350 --> 00:03:21,150
So let's add that also here, I'll say attribute changed callback.

48
00:03:22,620 --> 00:03:26,610
Now in the matter, there are three parameters passed.

49
00:03:26,640 --> 00:03:29,770
The first parameter is the attribute itself.

50
00:03:29,790 --> 00:03:31,620
So I'll say attr.

51
00:03:32,280 --> 00:03:35,910
The second is the old value of the attribute.

52
00:03:37,120 --> 00:03:42,130
And the third is new value, which is passed in the method parameter.

53
00:03:42,860 --> 00:03:44,330
Now, let's say alert.

54
00:03:45,610 --> 00:03:48,070
Here, I'm going to display the attribute itself.

55
00:03:48,070 --> 00:03:49,160
So at year.

56
00:03:50,480 --> 00:03:52,820
I'll put a plus sign to join.

57
00:03:54,110 --> 00:03:55,610
Again the old value.

58
00:03:56,090 --> 00:04:00,650
Let me also have another plus sign and the new value.

59
00:04:01,950 --> 00:04:03,960
Let me change this to single quotes.

60
00:04:04,650 --> 00:04:06,450
Well, it doesn't make any difference.

61
00:04:07,270 --> 00:04:10,420
Let me also add a comma in the codes.

62
00:04:12,540 --> 00:04:13,680
Let's save this.

63
00:04:13,830 --> 00:04:17,610
And now I'll click on the buy button.

64
00:04:19,040 --> 00:04:21,800
But you can see that it is not working.

65
00:04:22,720 --> 00:04:28,190
That is one static method which we need to add to make it working.

66
00:04:28,210 --> 00:04:29,860
So here I will say.

67
00:04:30,610 --> 00:04:35,920
Static get observed attributes.

68
00:04:36,920 --> 00:04:45,200
Now this is a method which basically returns an array of all the attributes which you want to keep a

69
00:04:45,200 --> 00:04:46,250
watch on.

70
00:04:46,280 --> 00:04:50,960
At the moment, the system, the component is not watching any attributes.

71
00:04:50,960 --> 00:04:57,410
So regardless of what changes you make to attributes, it's not going to update it.

72
00:04:57,740 --> 00:05:05,360
But if you want that the attribute change callback event should be executed, then you need to put the

73
00:05:05,360 --> 00:05:07,640
observed attribute method.

74
00:05:07,970 --> 00:05:09,980
Here I'm going to say return.

75
00:05:10,430 --> 00:05:18,560
Inside this you always have to return an array of the attributes which you want to keep a watch on.

76
00:05:18,860 --> 00:05:21,920
At the moment we just want to keep a watch on the status.

77
00:05:21,920 --> 00:05:23,210
So I'll say P status.

78
00:05:23,210 --> 00:05:25,520
That is the attribute we want to watch.

79
00:05:25,760 --> 00:05:28,820
Let's save this and refresh.

80
00:05:29,460 --> 00:05:36,630
And you can see the first time itself, the attribute changed, callback is executed and that's the

81
00:05:36,630 --> 00:05:38,820
reason why you see p status.

82
00:05:38,820 --> 00:05:46,470
That is the attribute name null is the value, initial value and then it is changed to not sold because

83
00:05:46,470 --> 00:05:54,000
at the time of component first time loaded at the design time, that is we have added the component

84
00:05:54,000 --> 00:05:56,430
with this attribute not sold.

85
00:05:57,060 --> 00:06:02,280
Let me click okay four times because this is executed for each component.

86
00:06:05,170 --> 00:06:09,570
So here in this method we will update the interface.

87
00:06:09,580 --> 00:06:16,290
So new value is a value which we are going to assign to the inner text of the paragraph.

88
00:06:16,300 --> 00:06:18,970
So here I'll say this.

89
00:06:20,020 --> 00:06:25,960
Dot Shadow root dot query selector p.

90
00:06:27,260 --> 00:06:31,490
Inner text is equal to new value.

91
00:06:32,730 --> 00:06:36,290
Let's save this and now refresh.

92
00:06:36,300 --> 00:06:39,780
Now click on Buy Button and we have the status updated.

93
00:06:42,910 --> 00:06:46,250
Now this approach still has scope of improvement.

94
00:06:46,270 --> 00:06:53,410
We can use the getter and setter methods for defining attributes, but that we will see in the forthcoming

95
00:06:53,410 --> 00:06:54,250
lectures.

96
00:06:56,080 --> 00:06:57,580
In the next lecture.

97
00:06:57,580 --> 00:07:03,700
At the moment, we are going to add the delete the trash button for each component.

98
00:07:04,360 --> 00:07:06,370
Now let's talk about related questions.

99
00:07:06,370 --> 00:07:11,560
So the first question is what is observed attributes, methods, functionality?

100
00:07:12,100 --> 00:07:18,340
Well, if you do not put this method, the attribute changed callback event is not executed.

101
00:07:18,370 --> 00:07:26,170
That event, that lifecycle method is ideally executed when there is a change addition or removal of

102
00:07:26,170 --> 00:07:27,010
an attribute.

103
00:07:27,010 --> 00:07:35,470
But if you have not listed out the array inside observed attributes, then that particular attribute

104
00:07:35,470 --> 00:07:38,280
will not be watched by the component.

105
00:07:38,290 --> 00:07:45,520
So if you do not give this method, you won't be able to execute the attribute change callback for each

106
00:07:45,520 --> 00:07:46,270
attribute.

107
00:07:47,490 --> 00:07:52,350
The second question is when will the attribute changed callback method be invoked?

108
00:07:52,590 --> 00:08:01,500
Well, any attribute change or addition of the attribute or any removal of attribute will make a call

109
00:08:01,500 --> 00:08:08,850
to this attribute changed callback method, provided that attribute is configured in the returning array

110
00:08:08,850 --> 00:08:11,250
of observed attributes method.

111
00:08:13,090 --> 00:08:17,620
How can you improve rendering with the help of attribute changed callback?

112
00:08:18,040 --> 00:08:24,670
Well, this is just a discussion where we already have old value and new value you can see in the code.

113
00:08:25,480 --> 00:08:32,860
Now, if you do not want to call this P in a text unnecessarily when there is no value change, you

114
00:08:32,860 --> 00:08:35,610
can put an if condition before this.

115
00:08:35,620 --> 00:08:38,169
You can compare the old and new value.

116
00:08:38,169 --> 00:08:42,370
If that is a change, then you can update the interface.

117
00:08:42,370 --> 00:08:43,960
Otherwise you can skip it.

118
00:08:44,800 --> 00:08:50,590
That is just a way to make sure that you avoid unnecessary interface updates.

119
00:08:51,480 --> 00:08:54,900
That's how you can improve the rendering of component.

