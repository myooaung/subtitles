WEBVTT
1
00:00:04.400 --> 00:00:07.430
Now, let's talk about a use case of throttling.

2
00:00:10.120 --> 00:00:18.910
Throttling is useful when the user performs continuous actions, such as scrawling or resizing even

3
00:00:18.910 --> 00:00:19.810
in a game.

4
00:00:20.020 --> 00:00:26.650
Let's say there is a gun which can fire one bullet per second, but you know a person playing a game

5
00:00:27.070 --> 00:00:29.020
out of control always.

6
00:00:30.030 --> 00:00:35.610
Now the person clicks the buttons more than three or four times in a second.

7
00:00:36.360 --> 00:00:38.040
It should not fire the bullet.

8
00:00:38.430 --> 00:00:41.190
It should fire the bullet after every second.

9
00:00:41.640 --> 00:00:45.990
If that's the situation, throttling is something which can help you.

10
00:00:46.800 --> 00:00:49.200
Let me show you one more example here.

11
00:00:49.800 --> 00:00:58.020
I have created a very simple program which has just an image of a gun and on every click be fired,

12
00:00:58.040 --> 00:01:01.560
the click count, and we also fire the bullet count.

13
00:01:02.940 --> 00:01:07.300
It is the very same startling concept, so I have used the timer.

14
00:01:07.650 --> 00:01:10.020
I have written the flag also.

15
00:01:10.710 --> 00:01:16.020
Initially, it is true, so if it is true, then increment the bullet count, otherwise don't.

16
00:01:17.260 --> 00:01:24.400
And then I'm resetting it inside an interval, saying fire, true after every 1000 milliseconds.

17
00:01:25.720 --> 00:01:27.120
Let me just save this call.

18
00:01:27.250 --> 00:01:29.500
This is attached with the resources, by the way.

19
00:01:30.400 --> 00:01:33.070
Let's check the output now.

20
00:01:33.100 --> 00:01:41.100
Let me click on the you see if I click very quickly, the bullet count is fired just very few times.

21
00:01:41.110 --> 00:01:42.430
Where is the click gone?

22
00:01:42.730 --> 00:01:51.250
The gun is fired for 57 times, but the bullet is just 20 times fired, so I'm saving the bullet also.

23
00:01:52.380 --> 00:02:00.090
The very same concept is very handy when this is the situation where the user is trying to generate

24
00:02:00.390 --> 00:02:05.400
more events, many events, but you want to control Asperger programs need.

25
00:02:06.500 --> 00:02:14.090
Another common situation where you may think of throttling is the scroll event, for example, an interface

26
00:02:14.090 --> 00:02:21.920
like Facebook, Instagram or Twitter where the user keeps on scrolling, which fires the scroll event

27
00:02:22.280 --> 00:02:29.510
many times and on scroll, you might be dealing with images, heavy graphics or even videos.

28
00:02:29.870 --> 00:02:34.400
In such cases, also throttling can improve the interface performance.

29
00:02:35.620 --> 00:02:37.780
Now, you know what throttling is?

30
00:02:37.960 --> 00:02:43.690
I'm sure you can also think of more situations where you can implement throttling.

