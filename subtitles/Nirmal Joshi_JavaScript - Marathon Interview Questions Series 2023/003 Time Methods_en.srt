1
00:00:00,120 --> 00:00:01,740
In this date and time section.

2
00:00:02,040 --> 00:00:05,310
Now I am discussing about the time related methods.

3
00:00:05,400 --> 00:00:07,770
There are two related questions to this topic.

4
00:00:09,060 --> 00:00:09,900
For time.

5
00:00:09,900 --> 00:00:16,320
JavaScript gives the very same date object only, but there are methods which are related to the time

6
00:00:16,320 --> 00:00:16,740
part.

7
00:00:17,040 --> 00:00:24,090
Also, that is a unique static method called data not now, which returns or timestamp in milliseconds

8
00:00:24,090 --> 00:00:28,740
elapsed since 1st January 1970 UTC.

9
00:00:29,130 --> 00:00:31,980
Let's also try just a simple statement.

10
00:00:32,130 --> 00:00:35,760
I'll say long day dot now and you see that?

11
00:00:37,620 --> 00:00:39,090
It displays the milliseconds.

12
00:00:41,020 --> 00:00:43,570
Now let us also try a few matters of time.

13
00:00:43,750 --> 00:00:48,100
First of all, I am going to declare a variable as select data is equal to new date.

14
00:00:49,290 --> 00:00:52,820
And then I will try to use a method called get time.

15
00:00:52,830 --> 00:00:55,620
So I also console.log did not get time.

16
00:00:57,000 --> 00:01:01,680
Let's also try a few more matters here, then we'll try to check it everything together.

17
00:01:01,860 --> 00:01:03,260
I will say cancelled out loud.

18
00:01:03,350 --> 00:01:04,709
Did not get hours.

19
00:01:05,780 --> 00:01:06,190
Same.

20
00:01:06,200 --> 00:01:09,950
We get minutes, get seconds and get milliseconds.

21
00:01:10,250 --> 00:01:13,850
Now let's try to run the call and see what is the output.

22
00:01:15,440 --> 00:01:20,990
Now you see that the get time returns, the milliseconds, the get hours returns a value between zero

23
00:01:20,990 --> 00:01:29,120
and 23, whereas they get minutes and seconds, both return value between zero and 59 and milliseconds

24
00:01:29,120 --> 00:01:32,690
will always be between zero and 999.

25
00:01:34,100 --> 00:01:38,090
The way we how get matters that are set matters to said the time.

26
00:01:38,120 --> 00:01:42,290
So by giving the set time milliseconds it will set the time.

27
00:01:42,290 --> 00:01:46,520
And the value is started since January 1st, 1970.

28
00:01:46,550 --> 00:01:50,030
Let's say, for example, I'll say data is equal to new date.

29
00:01:50,030 --> 00:01:51,660
Then I display the value of die.

30
00:01:52,490 --> 00:01:54,800
Now I'm going to say not set time.

31
00:01:55,250 --> 00:01:56,480
Here I'm seeing zero.

32
00:01:56,600 --> 00:01:58,370
And again I say console.log date.

33
00:02:03,000 --> 00:02:08,130
So now you see that the first date is the current date, whereas the second is the first January.

34
00:02:08,160 --> 00:02:12,300
The reason is because milliseconds given in set time is zero.

35
00:02:12,660 --> 00:02:14,790
So it gives the very first.

36
00:02:15,000 --> 00:02:16,230
That is the start date.

37
00:02:16,500 --> 00:02:25,380
The other set methods like set hours, set minutes, set seconds are set milliseconds, set the respective

38
00:02:25,380 --> 00:02:27,420
time component in the given date.

39
00:02:32,720 --> 00:02:35,120
Now let's discuss related questions of this topic.

40
00:02:36,150 --> 00:02:39,870
The first question is calculate the day difference in days.

41
00:02:39,880 --> 00:02:43,140
Now that means there are two dates and you have to count.

42
00:02:43,350 --> 00:02:46,530
What is the difference in terms of days between two dates?

43
00:02:46,980 --> 00:02:48,590
So here I'm going to take one date.

44
00:02:48,600 --> 00:02:50,610
I'll say that it's equal to New Date.

45
00:02:50,640 --> 00:02:54,930
This lecture defined 2020 August 25th.

46
00:02:55,680 --> 00:02:58,210
Then I take another date that is D1.

47
00:02:58,260 --> 00:03:02,700
I'll say New Date 2020 August 23.

48
00:03:02,920 --> 00:03:08,820
Now I'll take one variable just to get the difference between both the dates.

49
00:03:09,120 --> 00:03:13,260
I say D don't get time minus D one don't get time.

50
00:03:13,410 --> 00:03:16,890
Now the value which will get will be in milliseconds.

51
00:03:17,010 --> 00:03:23,550
So what you can do now I can see the number is equal to first of all, because I have the value in milliseconds.

52
00:03:23,700 --> 00:03:33,120
I'm going to divide that value by 1000 and this entire value I can divide by 3600 because 3600 is number

53
00:03:33,120 --> 00:03:35,100
of seconds we have in an hour.

54
00:03:35,400 --> 00:03:38,130
So right now, we are converting the value in hours.

55
00:03:38,340 --> 00:03:40,290
So let's display console.log.

56
00:03:43,280 --> 00:03:45,140
So you have this value.

57
00:03:45,230 --> 00:03:47,000
That is the number of hours.

58
00:03:47,270 --> 00:03:53,030
Now, if I further divided this value by 24, then you get the number of days.

59
00:03:54,710 --> 00:03:58,910
The second question is how can you change hours or minutes in time?

60
00:03:58,940 --> 00:04:06,800
So we have the set hours and set minutes method to set the hour part only or maybe minute section,

61
00:04:06,800 --> 00:04:11,390
maybe second or millisecond also can be changed using the set methods.

