WEBVTT
1
00:00:00.840 --> 00:00:04.600
To configure our application to talk to a database, there's actually three

2
00:00:04.600 --> 00:00:09.710
steps that we need to do. We need to start by opening up our pom.xml, and

3
00:00:09.710 --> 00:00:12.280
let's go down to where we last edited this,

4
00:00:12.280 --> 00:00:17.240
which was below JSTL and give ourselves a little bit of space in

5
00:00:17.240 --> 00:00:19.800
between that previous dependency and the next one,

6
00:00:19.800 --> 00:00:23.240
and we're going to put two dependencies inside of here.

7
00:00:23.240 --> 00:00:28.620
We're going to put the spring‑boot‑starter‑data‑dpa dependency.

8
00:00:28.620 --> 00:00:31.550
We're actually not doing anything with jpa yet, and it's

9
00:00:31.550 --> 00:00:33.160
not really the focus of this course,

10
00:00:33.160 --> 00:00:36.320
but there are some transaction libraries that are part of that

11
00:00:36.320 --> 00:00:38.840
artifact that we need inside of our code.

12
00:00:38.840 --> 00:00:44.240
And then we're going to add the MySQL mysql‑connector‑java dependency.

13
00:00:44.240 --> 00:00:47.270
Those both use dependency management from Maven,

14
00:00:47.270 --> 00:00:50.800
and so we don't have to specify a specific version in there.

15
00:00:50.800 --> 00:00:53.930
And when we hit Save, they will automatically download those and

16
00:00:53.930 --> 00:00:57.720
add them to the class path of your application. The next thing we

17
00:00:57.720 --> 00:00:59.350
need to do is to find a data source,

18
00:00:59.350 --> 00:01:02.260
and we do that by going to application.properties,

19
00:01:02.260 --> 00:01:04.380
and right now ours is blank.

20
00:01:04.380 --> 00:01:08.940
We're going to go ahead and add in four lines.

21
00:01:08.940 --> 00:01:10.750
I have already copied these,

22
00:01:10.750 --> 00:01:12.590
and I'm just going to paste them in so you don't have to

23
00:01:12.590 --> 00:01:15.130
watch me type them and make typing errors.

24
00:01:15.130 --> 00:01:17.450
But you can see the four lines we have here are

25
00:01:17.450 --> 00:01:23.170
spring.datasource.url. and that's tied to localhost:3306. If

26
00:01:23.170 --> 00:01:27.460
you'll remember when we created the Docker compose file,

27
00:01:27.460 --> 00:01:35.240
we exposed the port 3306 to 3306, and we named our database conference_security.

28
00:01:35.240 --> 00:01:39.550
We add a username of root and a password of pass, and our JDBC

29
00:01:39.550 --> 00:01:45.540
driver for MySQL is just com.mysql.jdbc.Driver.

30
00:01:45.540 --> 00:01:46.870
Let's save this.

31
00:01:46.870 --> 00:01:48.930
And if you have any red errors here,

32
00:01:48.930 --> 00:01:51.360
you need to figure those out before you proceed.

33
00:01:51.360 --> 00:01:52.570
If there are any things red,

34
00:01:52.570 --> 00:01:56.040
it means you haven't got something configured quite right.

35
00:01:56.040 --> 00:01:56.330
Next,

36
00:01:56.330 --> 00:02:01.320
we want to open up our ConferenceSecurityConfig, and at the top of this file,

37
00:02:01.320 --> 00:02:05.840
I'm going to go ahead and inject a resource. So I'm going to

38
00:02:05.840 --> 00:02:10.910
type in @Autowired, and I'm going to make this private and say

39
00:02:10.910 --> 00:02:19.840
DataSource dataSource, and save that.

40
00:02:19.840 --> 00:02:22.610
And you can see how it's grayed. That says that there is one

41
00:02:22.610 --> 00:02:24.790
configured. And since that's configured,

42
00:02:24.790 --> 00:02:27.440
it's pulling that from our application.properties.

43
00:02:27.440 --> 00:02:31.380
So that's how I know that those two are actually configured correctly.

44
00:02:31.380 --> 00:02:36.630
Then I'm going to scroll down to our Configure method that we created

45
00:02:36.630 --> 00:02:39.850
before, and we had all this inMemoryAuthentication.

46
00:02:39.850 --> 00:02:46.620
I'm actually going to replace that with .jdbcAuthentication, and

47
00:02:46.620 --> 00:02:49.700
we're going to pass in a dataSource, and it's that dataSource

48
00:02:49.700 --> 00:02:53.940
that we just injected into our code.

49
00:02:53.940 --> 00:02:54.810
Believe it or not,

50
00:02:54.810 --> 00:02:57.970
that is everything that you need to do as far as your application

51
00:02:57.970 --> 00:03:05.400
configuration is concerned to wire it up to use JDBC to read from your

52
00:03:05.400 --> 00:03:10.610
database and authenticate and authorize against. Now, for our end, since

53
00:03:10.610 --> 00:03:11.910
it's the first time we've done this,

54
00:03:11.910 --> 00:03:16.490
we do have to add a couple of tables into our database and

55
00:03:16.490 --> 00:03:18.650
insert a record in there for us to go against.

56
00:03:18.650 --> 00:03:26.000
So I'm going to open up my MySQL Workbench and run a couple of statements on there to put some data in there.

