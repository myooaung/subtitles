WEBVTT
1
00:00:01.040 --> 00:00:04.000
To add the tag libraries to our code,

2
00:00:04.000 --> 00:00:06.800
we first need to add that dependency into our POM.

3
00:00:06.800 --> 00:00:12.940
So I'm going to open up our pom.xml file, and I'm going to go down to the

4
00:00:12.940 --> 00:00:17.450
bottom of our dependencies between spring‑boot‑starter‑mail and

5
00:00:17.450 --> 00:00:23.680
spring‑boot‑starter‑test. We honestly can place it anywhere in here as long as

6
00:00:23.680 --> 00:00:28.580
it's in the dependency's tag so that we get that added to our class path

7
00:00:28.580 --> 00:00:30.720
because that's not going to compete with anything else.

8
00:00:30.720 --> 00:00:31.570
And again,

9
00:00:31.570 --> 00:00:34.750
we're not using a version here because it's using dependency

10
00:00:34.750 --> 00:00:37.830
management to pull down the appropriate version based off of the

11
00:00:37.830 --> 00:00:40.540
Spring Boot version that we are using.

12
00:00:40.540 --> 00:00:44.580
So it's just a groupId of org.springframework.security and

13
00:00:44.580 --> 00:00:49.040
artifactId of spring‑security‑taglibs.

14
00:00:49.040 --> 00:01:00.940
We'll save this, and then we can open up our src, main, webapp, index.jsp.

15
00:01:00.940 --> 00:01:05.140
And inside of here, we want to add a tag library at the top.

16
00:01:05.140 --> 00:01:15.840
So we're going to do a new tag library, %@, and we'll do taglib. And for the

17
00:01:15.840 --> 00:01:24.540
prefix, we'll do sec for security, and for the uri, we'll say

18
00:01:24.540 --> 00:01:37.940
http://www.springframework.org/security/tags and hit Enter on that.

19
00:01:37.940 --> 00:01:39.360
And just so you know,

20
00:01:39.360 --> 00:01:41.680
if it's been a little while since you've used tag libraries

21
00:01:41.680 --> 00:01:44.430
or you're not that familiar with them,

22
00:01:44.430 --> 00:01:47.650
this URL doesn't actually go out and download them.

23
00:01:47.650 --> 00:01:50.880
That's just the key in which it looks for that resource

24
00:01:50.880 --> 00:01:54.000
inside of the jar that contains it.

25
00:01:54.000 --> 00:01:59.780
So it's just the unique identifier for that jar for those

26
00:01:59.780 --> 00:02:02.540
resources, so it's going to pull that back.

27
00:02:02.540 --> 00:02:08.830
Now we can go down to our body here, and inside of here in our main we have

28
00:02:08.830 --> 00:02:12.900
this Welcome to the Conference App! Give ourselves a little space underneath

29
00:02:12.900 --> 00:02:16.270
that. We're going to enter in a few elements here.

30
00:02:16.270 --> 00:02:18.010
The first thing that we're going to do is look to

31
00:02:18.010 --> 00:02:21.220
see if they are not authorized.

32
00:02:21.220 --> 00:02:26.800
So we're going to say security:authorize, and we'll say

33
00:02:26.800 --> 00:02:30.900
access. And we're going to, inside of here,

34
00:02:30.900 --> 00:02:39.140
put an expression and say !isAuthenticated.

35
00:02:39.140 --> 00:02:44.060
So we're just saying if they're authenticated at all, skip this.

36
00:02:44.060 --> 00:02:46.140
But if they're not authenticated,

37
00:02:46.140 --> 00:02:49.520
let's go ahead and display this tag inside of here.

38
00:02:49.520 --> 00:02:51.240
And we'll just put a simple anchor tag in here,

39
00:02:51.240 --> 00:03:02.880
so we'll say a href, and we want to give that the value of login. And inside

40
00:03:02.880 --> 00:03:07.810
of here, just give it the text of Login and save that.

41
00:03:07.810 --> 00:03:12.340
So if they're not authenticated, let's give them a link to hit the Login page.

42
00:03:12.340 --> 00:03:15.240
And then if they are logged in,

43
00:03:15.240 --> 00:03:27.040
let's just do sec:authorize again, and we'll say access isAuthenticated.

44
00:03:27.040 --> 00:03:31.540
And again, that's one of those expressions that we have available for us to use.

45
00:03:31.540 --> 00:03:39.580
And we'll say Welcome Back. And we can grab the current logged in user

46
00:03:39.580 --> 00:03:51.440
by saying sec:authentication, and we use the property, and we'll just

47
00:03:51.440 --> 00:03:57.120
grab name here, and we can close that off.

48
00:03:57.120 --> 00:03:57.410
In fact,

49
00:03:57.410 --> 00:04:01.940
we're not going to do anything inside of that element, so we'll just use

50
00:04:01.940 --> 00:04:06.860
the shorthand of closing that element off inside of itself and say this.

51
00:04:06.860 --> 00:04:10.640
Now when we run the application and log them in,

52
00:04:10.640 --> 00:04:13.980
it'll determine whether they are logged in or not and

53
00:04:13.980 --> 00:04:16.900
display this text versus one over the other.

54
00:04:16.900 --> 00:04:22.620
So let's fire up our server and see what it does now. And you can see as this

55
00:04:22.620 --> 00:04:26.580
pulls up, we automatically have our Login link on here.

56
00:04:26.580 --> 00:04:31.340
And if you'll remember, that's because we're currently not authenticated.

57
00:04:31.340 --> 00:04:35.030
If I click that Login link, it'll redirect us to that Login page.

58
00:04:35.030 --> 00:04:39.980
I can put in our username and password and log in,

59
00:04:39.980 --> 00:04:42.710
and it will go back to that page and tell us, Welcome Back,

60
00:04:42.710 --> 00:04:43.940
bryan.

61
00:04:43.940 --> 00:04:48.230
Now we have stored my username as lowercase, so you could do

62
00:04:48.230 --> 00:04:52.100
something to make that prettier. or you could use the nickname

63
00:04:52.100 --> 00:04:53.200
that we stored in the database.

64
00:04:53.200 --> 00:04:57.060
That was the reason why way back a couple of modules we added

65
00:04:57.060 --> 00:05:00.530
that nickname field, so you could go ahead and have that

66
00:05:00.530 --> 00:05:01.860
nickname displayed if you wanted to.

67
00:05:01.860 --> 00:05:06.580
That's available as that UserDetails object that we customized that returned

68
00:05:06.580 --> 00:05:13.000
from our back‑end services to our UI. So pretty easy to add that. We have the

69
00:05:13.000 --> 00:05:16.960
current authenticated user and can display information toggled based off of

70
00:05:16.960 --> 00:05:18.540
whether they're authenticated or not.

71
00:05:18.540 --> 00:05:22.290
We could also display information based off if they have a specific role.

72
00:05:22.290 --> 00:05:25.540
It's just another expression that we use inside of the app. But

73
00:05:25.540 --> 00:05:27.810
really nice and pretty straightforward to do.

74
00:05:27.810 --> 00:05:37.000
Let's look at how we do the same thing though associated with methods and injecting the current logged in user into a method call.

