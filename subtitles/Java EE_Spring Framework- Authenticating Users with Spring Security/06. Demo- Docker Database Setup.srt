1
00:00:01,040 --> 00:00:05,090
I've closed down everything that we had open from our previous demos,

2
00:00:05,090 --> 00:00:09,940
and I am ready to now start adding the docker‑compose file to our application.

3
00:00:09,940 --> 00:00:11,340
And like I mentioned before,

4
00:00:11,340 --> 00:00:14,900
to have Docker running, all you need to do is go to docker.com and

5
00:00:14,900 --> 00:00:17,640
download the specific version for your operating system,

6
00:00:17,640 --> 00:00:19,250
which I've already done.

7
00:00:19,250 --> 00:00:22,050
Now, at the root of our project under conference,

8
00:00:22,050 --> 00:00:27,120
I'm going to right‑click and say New, File, and I'm

9
00:00:27,120 --> 00:00:30,270
going to call this docker‑compose,

10
00:00:30,270 --> 00:00:35,000
and you need to name yours the same, .yml, so just like

11
00:00:35,000 --> 00:00:38,420
xml, but with a y, yml, and hit Enter.

12
00:00:38,420 --> 00:00:43,070
And it does offer some context sensitive help for us in

13
00:00:43,070 --> 00:00:45,870
IntelliJ Ultimate, and some of the other IEDs do as well,

14
00:00:45,870 --> 00:00:47,110
but if you don't have one of those,

15
00:00:47,110 --> 00:00:50,550
it doesn't matter, you can write this in a Notepad. So I'm going to say

16
00:00:50,550 --> 00:00:56,120
version, and then give this 3.8, because that is the current version as

17
00:00:56,120 --> 00:00:59,340
of writing this course. And down below there,

18
00:00:59,340 --> 00:01:05,150
I'm going to say networks and we're just going to choose the default network.

19
00:01:05,150 --> 00:01:10,680
And then for services, we want to have the database service,

20
00:01:10,680 --> 00:01:21,740
so db, and we're going to have an image of mysql: version 5.7.

21
00:01:21,740 --> 00:01:25,730
Now I do know that there are later versions after this, in fact,

22
00:01:25,730 --> 00:01:27,780
MySQL 8 is out. You may go, oh,

23
00:01:27,780 --> 00:01:30,760
that's a big jump from 5 to 8. Five is actually the

24
00:01:30,760 --> 00:01:32,560
most stable one that's in production,

25
00:01:32,560 --> 00:01:36,770
and 8 has some naming convention things that actually break with a lot of

26
00:01:36,770 --> 00:01:42,380
applications, so for our image we're going to use MySQL 5.7. The

27
00:01:42,380 --> 00:01:52,400
container_name we're going to just call conference_security, and then for

28
00:01:52,400 --> 00:01:57,250
ports, and this is what we're going to export from our application to the

29
00:01:57,250 --> 00:02:05,240
inside of the container, we'll say 3306, we'll be exposed to 3306. We could

30
00:02:05,240 --> 00:02:06,960
map different ports if we wanted to,

31
00:02:06,960 --> 00:02:09,640
but this works just fine for what we're doing.

32
00:02:09,640 --> 00:02:16,380
And then we will want to have a volumes, and for the volumes we'll say

33
00:02:16,380 --> 00:02:33,490
that we want a "./.data/db:/var/lib/mysql, and this is kind of a

34
00:02:33,490 --> 00:02:38,340
standard naming convention for where it's going to store the data at.

35
00:02:38,340 --> 00:02:41,080
You'll notice that mine turned green, and that means that it's been

36
00:02:41,080 --> 00:02:43,760
entered the correct way for us.

37
00:02:43,760 --> 00:02:46,340
Then we'll say environment.

38
00:02:46,340 --> 00:02:49,040
We're going to add some environment variables underneath here, and

39
00:02:49,040 --> 00:02:58,390
we're going to say MYSQL_ROOT_PASSWORD, and we're going to just have

40
00:02:58,390 --> 00:03:01,580
our password be pass, you could obviously choose something more

41
00:03:01,580 --> 00:03:12,350
secure if you want; MYSQL_DATABASE, and we're going to call this

42
00:03:12,350 --> 00:03:17,540
database conference_security.

43
00:03:17,540 --> 00:03:22,770
This is everything we need to have Docker inside of our application.

44
00:03:22,770 --> 00:03:26,680
Now I've switched over to our terminal, and I have started typing in

45
00:03:26,680 --> 00:03:30,870
here the command to start up Docker and run that image that we've just

46
00:03:30,870 --> 00:03:36,500
created, and all I have to do is type in docker‑compose space up space

47
00:03:36,500 --> 00:03:43,880
‑d. When I hit Enter, it will go through and fire it up and run our

48
00:03:43,880 --> 00:03:44,830
project for us.

49
00:03:44,830 --> 00:03:48,530
So my Docker instance is actually running now, and if I

50
00:03:48,530 --> 00:03:51,030
launch my Docker desktop and look at it,

51
00:03:51,030 --> 00:03:54,740
I can see that it has fired up our instance for us, and

52
00:03:54,740 --> 00:03:56,140
you can see that everything is running.

53
00:03:56,140 --> 00:04:04,000
It's got its ports, tables, all that stuff is created for us. My application is up and running and ready to go.

