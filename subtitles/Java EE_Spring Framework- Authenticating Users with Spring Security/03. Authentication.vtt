WEBVTT
1
00:00:01.240 --> 00:00:04.780
This module has a lot of complex moving pieces.

2
00:00:04.780 --> 00:00:08.190
And honestly, that is just sometimes the case with security.

3
00:00:08.190 --> 00:00:10.230
To make this easier though,

4
00:00:10.230 --> 00:00:13.100
we're going to switch back to having authentication and

5
00:00:13.100 --> 00:00:16.820
authorization done through just the database so that we

6
00:00:16.820 --> 00:00:19.340
don't have another moving part.

7
00:00:19.340 --> 00:00:23.330
What we are going to do though would work just as good with LDAP for

8
00:00:23.330 --> 00:00:26.520
authentication and the database for authorization.

9
00:00:26.520 --> 00:00:29.760
It just makes it easier to not have to also add in the

10
00:00:29.760 --> 00:00:34.450
process of binding a user to the LDAP tree.

11
00:00:34.450 --> 00:00:37.440
Switching this back is as simple as opening up our

12
00:00:37.440 --> 00:00:43.880
ConferenceSecurityConfig and commenting out that ldapAuthentication that

13
00:00:43.880 --> 00:00:51.040
we had put in, and I'm just going to use a block comment for that.

14
00:00:51.040 --> 00:00:56.220
And we're going to uncomment the jdbcAuthentication that we had

15
00:00:56.220 --> 00:01:01.830
left in here earlier. Now to verify that we are actually using the

16
00:01:01.830 --> 00:01:07.200
same passwordEncoder, I'm also going to go ahead and add that on

17
00:01:07.200 --> 00:01:11.440
the end of this line as well.

18
00:01:11.440 --> 00:01:15.520
So now we have the same passwordEncoder using bcrypt

19
00:01:15.520 --> 00:01:16.670
that we had before down there.

20
00:01:16.670 --> 00:01:20.370
So we've just switched from auth.ldapAuthentication to

21
00:01:20.370 --> 00:01:25.010
auth.jdbcAuthentication, supplied the data source and the same

22
00:01:25.010 --> 00:01:32.000
passwordEncoder that we have to find just down below here, which is a BCryptPasswordEncoder.

