WEBVTT
1
00:00:00.940 --> 00:00:03.890
Before we start running our examples, I wanted to point out a

2
00:00:03.890 --> 00:00:07.550
couple of things. Currently, are ConferenceSecurityConfig is

3
00:00:07.550 --> 00:00:12.600
not referencing JDBC anywhere, but our application.properties is.

4
00:00:12.600 --> 00:00:16.660
So we have a data source defined here on these lines where we're

5
00:00:16.660 --> 00:00:22.280
still trying to talk to JDBC MySQL. We have a password, all of

6
00:00:22.280 --> 00:00:23.880
that information, our driver‑class‑name.

7
00:00:23.880 --> 00:00:28.880
You can either comment these lines out using a pound sign, so we

8
00:00:28.880 --> 00:00:33.740
can go through and comment them out, or you can make sure that

9
00:00:33.740 --> 00:00:36.090
your Docker instance is up and running.

10
00:00:36.090 --> 00:00:39.210
So your Docker instance may have gotten shut down If you restarted your

11
00:00:39.210 --> 00:00:43.390
machine, had to reboot for whatever reason and update, or you just shut down

12
00:00:43.390 --> 00:00:46.890
Docker because it was tying up resources. The reason I'm leaving these in

13
00:00:46.890 --> 00:00:48.900
here is because in a future module here,

14
00:00:48.900 --> 00:00:52.280
we are going to reference our database again when we

15
00:00:52.280 --> 00:00:54.400
customize the userDetails object.

16
00:00:54.400 --> 00:00:58.420
So even though our ConferenceSecurity isn't referencing anything right now,

17
00:00:58.420 --> 00:01:06.040
our application.properties is. So now when we run this,

18
00:01:06.040 --> 00:01:09.820
we'll go ahead and fire up that server, it will start up our

19
00:01:09.820 --> 00:01:15.640
application, and it will switch over to our browser for us once it's

20
00:01:15.640 --> 00:01:19.040
loaded, if you chose that option for it to do it. Now,

21
00:01:19.040 --> 00:01:24.120
when we pull up our application, if we click Add Registration, just like before,

22
00:01:24.120 --> 00:01:26.130
it'll take us to this Login page.

23
00:01:26.130 --> 00:01:30.450
And when we enter in the correct credentials, we click

24
00:01:30.450 --> 00:01:34.530
Login, it will go through and authentic us against LDAP. So

25
00:01:34.530 --> 00:01:36.650
it really actually wasn't that bad.

26
00:01:36.650 --> 00:01:40.840
We had to add some dependencies inside of here,

27
00:01:40.840 --> 00:01:45.850
go to our ConferenceSecurity and add LDAP authentication inside of

28
00:01:45.850 --> 00:01:52.500
here. Inside of our application.properties, we just added three lines

29
00:01:52.500 --> 00:01:58.040
for our ldif, our base‑dn, and our port.

30
00:01:58.040 --> 00:02:02.770
We ran the example of showing our password and how to get that encrypted.

31
00:02:02.770 --> 00:02:07.190
And then, finally, the most complex part was our LDIF file,

32
00:02:07.190 --> 00:02:09.990
which is rather large for this simple example.

33
00:02:09.990 --> 00:02:14.250
But it's set up for all the things that we want, too, and we even had our

34
00:02:14.250 --> 00:02:17.540
password entered in from running that unit test before.

35
00:02:17.540 --> 00:02:18.890
So if you want to add yours in there,

36
00:02:18.890 --> 00:02:23.160
you can change the UIDs throughout here to your name or add it

37
00:02:23.160 --> 00:02:28.320
as a second entry and can then take and put in your own

38
00:02:28.320 --> 00:02:35.000
password here instead of my password, which is just pass in this example, and run that example.

