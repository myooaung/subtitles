WEBVTT
1
00:00:01.140 --> 00:00:03.940
All right, to start with the modifications to our UI,

2
00:00:03.940 --> 00:00:06.630
let's open up our login.jsp page,

3
00:00:06.630 --> 00:00:10.730
and you'll see we have that div class error up above.

4
00:00:10.730 --> 00:00:13.610
We're not showing anything unless that error exists there.

5
00:00:13.610 --> 00:00:16.240
Well, to try something different with our UI,

6
00:00:16.240 --> 00:00:20.040
we're going to go ahead and throw in another div above here,

7
00:00:20.040 --> 00:00:23.630
and I've wrapped that with the c:if,

8
00:00:23.630 --> 00:00:28.180
rather than putting the c:if inside of here because it is visible by default.

9
00:00:28.180 --> 00:00:35.980
So I've said c:if test not empty param.logout. So that URL handler that we

10
00:00:35.980 --> 00:00:39.060
configured in the previous demo for the ConferenceSecurityConfig,

11
00:00:39.060 --> 00:00:44.620
we rewrote that URL to add a parameter of logout=true on the end of it.

12
00:00:44.620 --> 00:00:47.660
This now is looking to see if that parameter exists,

13
00:00:47.660 --> 00:00:49.800
and if it does exist,

14
00:00:49.800 --> 00:00:53.890
then we're going to display this div class alert

15
00:00:53.890 --> 00:00:57.840
alertâ€‘success and say that logout was successful.

16
00:00:57.840 --> 00:01:00.830
But the one thing missing is we don't have a way

17
00:01:00.830 --> 00:01:02.880
for us to call this URL just yet.

18
00:01:02.880 --> 00:01:10.940
So let's open up our index.jsp page, and we want to come over to

19
00:01:10.940 --> 00:01:16.490
this guy. And inside of here, we currently don't have the c tag

20
00:01:16.490 --> 00:01:19.320
library in here. So I'm going to go up to the top of our Login page

21
00:01:19.320 --> 00:01:22.690
and actually just copy it just to make it easier and not have to

22
00:01:22.690 --> 00:01:23.730
type all of that in.

23
00:01:23.730 --> 00:01:28.580
So we'll grab that core tag library out of login and go to the top of

24
00:01:28.580 --> 00:01:35.220
the JSP page and paste that in there at the very top.

25
00:01:35.220 --> 00:01:36.740
We'll save that.

26
00:01:36.740 --> 00:01:43.440
And now, we have inside of here, this nav header of Get Started. I'm going

27
00:01:43.440 --> 00:01:53.720
to add an anchor tag below that that is a c:out or a URL builder to call

28
00:01:53.720 --> 00:02:00.790
the perform_logout. And using that c:out tag just formats our URL the

29
00:02:00.790 --> 00:02:06.510
correct way with our application context ahead of it. And so it just

30
00:02:06.510 --> 00:02:10.520
basically builds our URL correctly for us and displays a Logout button at

31
00:02:10.520 --> 00:02:12.740
the top of our page for us.

32
00:02:12.740 --> 00:02:14.710
Let's exit full screen here,

33
00:02:14.710 --> 00:02:17.680
and we'll go ahead and restart our server just to make sure

34
00:02:17.680 --> 00:02:19.660
that all of our changes their up to date.

35
00:02:19.660 --> 00:02:20.370
Okay,

36
00:02:20.370 --> 00:02:23.680
now once we run our application, we can log in. I'll click

37
00:02:23.680 --> 00:02:28.940
that Add Registration button. Click in bryan and pass for

38
00:02:28.940 --> 00:02:30.940
our username and password.

39
00:02:30.940 --> 00:02:34.120
And now we have our Logout link at the top of our page.

40
00:02:34.120 --> 00:02:36.140
If I click Logout,

41
00:02:36.140 --> 00:02:41.590
it'll redirect us back to the Login page and say that our logout was successful.

42
00:02:41.590 --> 00:02:45.510
So this is our Twitter Bootstrap success message.

43
00:02:45.510 --> 00:02:47.530
It looks a little nicer, and it's a little cleaner

44
00:02:47.530 --> 00:02:51.240
than the red text that we had there.

45
00:02:51.240 --> 00:02:54.920
You can go ahead and change that in your own application if you want to use

46
00:02:54.920 --> 00:02:59.920
the alert for failure and browse the CSS that comes with Twitter Bootstrap

47
00:02:59.920 --> 00:03:01.420
and see there's all sorts of different boxes.

48
00:03:01.420 --> 00:03:04.800
So if you want to change your other app over to match this green bar,

49
00:03:04.800 --> 00:03:05.950
you're more than welcome to.

50
00:03:05.950 --> 00:03:07.710
But we've implemented the logout,

51
00:03:07.710 --> 00:03:14.410
and all we had to do was go through our code and add a logout section.

52
00:03:14.410 --> 00:03:20.060
You can see the login?logout=true.

53
00:03:20.060 --> 00:03:25.480
Now you understand that that logoutRequestMatcher AntPathRequestMatcher is so

54
00:03:25.480 --> 00:03:29.160
that we could perform a GET. Normally, it looks for a POST so we would have

55
00:03:29.160 --> 00:03:34.290
had to set up a form and post that in here. By implementing that request

56
00:03:34.290 --> 00:03:39.970
matcher with a GET, it bypassed that. We deleted our session and our cookies

57
00:03:39.970 --> 00:03:42.840
and permitted all to access it.

58
00:03:42.840 --> 00:03:50.260
Then for our login, we just added that nice Twitter Bootstrap dialog

59
00:03:50.260 --> 00:03:54.640
that pops up at the top of our page to display success,

60
00:03:54.640 --> 00:04:00.310
and we added a simple anchor tag to perform the actual logout.

61
00:04:00.310 --> 00:04:03.160
Pretty simple to actually add that functionality inside of

62
00:04:03.160 --> 00:04:07.580
your app and have it delete the cookies, have it delete the

63
00:04:07.580 --> 00:04:15.000
session that's currently logged in, and all we had to do is add a little bit of configuration and an anchor tag.

