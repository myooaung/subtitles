1
1

00:00:00,140  -->  00:00:03,310 line:15% 
<v Edward>I'm now going to talk about Kubeless.</v>
2

2

00:00:03,310  -->  00:00:06,470 line:15% 
Kubeless is a Kubernetes-native framework.
3

3

00:00:06,470  -->  00:00:10,880 line:15% 
You can find it on github.com/kubeless/kubeless.
4

4

00:00:10,880  -->  00:00:13,230 line:15% 
It leverages the Kubernetes resources
5

5

00:00:13,230  -->  00:00:17,420 line:15% 
to provide auto-scaling, API routing, monitoring, and so on.
6

6

00:00:17,420  -->  00:00:20,290 line:15% 
So it uses whatever is available in Kubernetes
7

7

00:00:20,290  -->  00:00:23,740 line:15% 
to provide this service framework.
8

8

00:00:23,740  -->  00:00:26,000 line:15% 
It uses custom resource definitions
9

9

00:00:26,000  -->  00:00:28,710 line:15% 
to be able to create functions.
10

10

00:00:28,710  -->  00:00:30,500 line:15% 
So, remember from earlier in the course,
11

11

00:00:30,500  -->  00:00:33,010 line:15% 
there's custom resource definitions to extense
12

12

00:00:33,010  -->  00:00:36,180 line:15% 
the Kubernetes API with own functionality.
13

13

00:00:36,180  -->  00:00:38,470 line:15% 
So, that's what Kubeless does.
14

14

00:00:38,470  -->  00:00:40,340 line:15% 
It's open source and not affiliated
15

15

00:00:40,340  -->  00:00:43,073 line:15% 
with any commercial organization.
16

16

00:00:43,073  -->  00:00:46,040 line:15% 
It also has a UI available for developers
17

17

00:00:46,040  -->  00:00:47,473 line:15% 
to deploy functions.
18

18

00:00:49,430  -->  00:00:51,500 line:15% 
With Kubeless, you deploy a function
19

19

00:00:51,500  -->  00:00:53,700 line:15% 
in your preferred language.
20

20

00:00:53,700  -->  00:00:55,110 line:15% 
Currently, with Kubeless,
21

21

00:00:55,110  -->  00:00:57,570 line:15% 
the following runtimes are supported.
22

22

00:00:57,570  -->  00:01:00,687 line:15% 
You can use Python, NodeJS, Ruby, PHP,
23

23

00:01:00,687  -->  00:01:03,964 line:15% 
.NET, Golang, and some other ones,
24

24

00:01:03,964  -->  00:01:06,433 line:15% 
but these are the most popular ones used.
25

25

00:01:07,270  -->  00:01:08,770 line:15% 
Once you deploy your function,
26

26

00:01:08,770  -->  00:01:11,790 line:15% 
you will need to determine how it will be triggered.
27

27

00:01:11,790  -->  00:01:13,530 line:15% 
So, with AWS Lambda, for example,
28

28

00:01:13,530  -->  00:01:17,820 line:15% 
you use the API Gateway to have it triggered using a URL.
29

29

00:01:17,820  -->  00:01:18,806 line:15% 
Now, you can do the same but then
30

30

00:01:18,806  -->  00:01:22,173 line:15% 
with Kubernetes and Kubeless.
31

31

00:01:23,070  -->  00:01:26,020 line:15% 
Currently, the following functions are supported.
32

32

00:01:26,020  -->  00:01:28,510 line:15% 
You can use HTTP functions.
33

33

00:01:28,510  -->  00:01:30,270 line:15% 
HTTP functions get executed
34

34

00:01:30,270  -->  00:01:33,380 line:15% 
when an HTTP endpoint is triggered.
35

35

00:01:33,380  -->  00:01:36,120 line:15% 
You'll write a function and return the text or HTML
36

36

00:01:36,120  -->  00:01:38,293 line:15% 
that needs to be displayed in the browser.
37

37

00:01:39,430  -->  00:01:41,553 line:15% 
Kubeless uses English controller for this.
38

38

00:01:42,660  -->  00:01:44,410 line:15% 
You can also have a scheduled function
39

39

00:01:44,410  -->  00:01:47,223 line:15% 
where you just schedule a function on a certain time.
40

40

00:01:48,310  -->  00:01:51,240 line:15% 
Or you can also use a publish and subscribe mechanism,
41

41

00:01:51,240  -->  00:01:53,693 line:15% 
currently Kafka or NATS is supported.
42

42

00:01:54,640  -->  00:01:56,830 line:15% 
It triggers a function when data is available
43

43

00:01:56,830  -->  00:01:59,278 line:15% 
in Kafka or NATS.
44

44

00:01:59,278  -->  00:02:01,900 line:15% 
And you can also use AWS Kinesis.
45

45

00:02:01,900  -->  00:02:05,980 line:15% 
This one triggers based on data in AWS Kinesis,
46

46

00:02:05,980  -->  00:02:08,830 line:15% 
which is similar to Kafka so it's also a purpose
47

47

00:02:08,830  -->  00:02:12,840 line:15% 
of mechanism you can subscribe to this AWS Kinesis
48

48

00:02:12,840  -->  00:02:15,030 line:15% 
when there is data available in it
49

49

00:02:15,030  -->  00:02:18,360 line:15% 
then this will trigger the function.
50

50

00:02:18,360  -->  00:02:22,663 line:15% 
Next are a few demos to show you how Kubeless works.
