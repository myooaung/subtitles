1
1

00:00:00,180  -->  00:00:01,060
<v Edward Viaene>In this demo,</v>
2

2

00:00:01,060  -->  00:00:03,143
I will show you how to install Istio.
3

3

00:00:05,100  -->  00:00:08,750
There is a directory Istio in the Kubernetes Course,
4

4

00:00:08,750  -->  00:00:11,493
where you'll find demo files in the read me.
5

5

00:00:12,870  -->  00:00:15,770
To install Istio using kops,
6

6

00:00:15,770  -->  00:00:18,360
we have to make some modifications to our kops cluster.
7

7

00:00:18,360  -->  00:00:19,480
So what I'm going to do is
8

8

00:00:19,480  -->  00:00:21,993
I'm going to launch a new kops cluster.
9

9

00:00:23,200  -->  00:00:24,913
We'll use kops create for that,
10

10

00:00:25,900  -->  00:00:28,040
is the same command as we used previously
11

11

00:00:28,040  -->  00:00:30,790
to spin up a cluster, except this time,
12

12

00:00:30,790  -->  00:00:33,050
I'm going to use node size T2 medium
13

13

00:00:33,050  -->  00:00:34,323
instead of T2 micro.
14

14

00:00:35,220  -->  00:00:37,970
This will give us a lot more memory in our cluster
15

15

00:00:37,970  -->  00:00:41,280
to launch applications.
16

16

00:00:41,280  -->  00:00:43,530
This is because Istio needs memory
17

17

00:00:43,530  -->  00:00:46,620
for its processes to start.
18

18

00:00:46,620  -->  00:00:51,240
So, the pilot process now needs two gigabytes of memory,
19

19

00:00:51,240  -->  00:00:52,680
so to make sure we have enough,
20

20

00:00:52,680  -->  00:00:53,980
we're going to use T2 medium,
21

21

00:00:53,980  -->  00:00:56,623
which provides four gigabytes of memory.
22

22

00:00:58,690  -->  00:01:02,033
Add an execute command to create this cluster.
23

23

00:01:05,430  -->  00:01:07,363
So let's have a look at the read me.
24

24

00:01:09,940  -->  00:01:13,668
Kops edit cluster Kubernetes Newtech Academy,
25

25

00:01:13,668  -->  00:01:15,833
plust the state, and we have to add this.
26

26

00:01:16,910  -->  00:01:19,760
The kubeAPIServer admissionControl,
27

27

00:01:19,760  -->  00:01:22,660
and we need to make sure that we include all
28

28

00:01:22,660  -->  00:01:24,510
these elements to admission control,
29

29

00:01:24,510  -->  00:01:26,973
because Istio needs those features.
30

30

00:01:28,820  -->  00:01:33,820
Let's do kops edit cluster Kubernetes Newtech Academy
31

31

00:01:35,490  -->  00:01:36,683
with the state.
32

32

00:01:38,970  -->  00:01:41,840
This will open the editor, and here we have
33

33

00:01:41,840  -->  00:01:44,170
the specification for our cluster.
34

34

00:01:44,170  -->  00:01:46,573
And here we can add the lines.
35

35

00:01:48,774  -->  00:01:52,130
We can add them under spec or just at the bottom,
36

36

00:01:52,130  -->  00:01:53,600
the only thing that you have to make sure
37

37

00:01:53,600  -->  00:01:55,160
is that the indentation is correct.
38

38

00:01:55,160  -->  00:01:59,620
So this kubeAPIServer and then the admissionController.
39

39

00:01:59,620  -->  00:02:03,120
I'll check whether kubeAPI server hasn't been defined yet,
40

40

00:02:03,120  -->  00:02:06,630
in our case, it hasn't, this is the only kubeAPI server
41

41

00:02:06,630  -->  00:02:08,833
that is in this specification.
42

42

00:02:09,910  -->  00:02:11,423
Then we should save this.
43

43

00:02:12,730  -->  00:02:14,710
If there is an error at this point,
44

44

00:02:14,710  -->  00:02:16,470
check the indentation again,
45

45

00:02:16,470  -->  00:02:18,330
because kops will give you an error
46

46

00:02:18,330  -->  00:02:19,680
if there's something wrong.
47

47

00:02:20,930  -->  00:02:22,400
Now we are ready, so we can do
48

48

00:02:22,400  -->  00:02:25,550
kops update cluster, minus minus yes,
49

49

00:02:25,550  -->  00:02:27,853
with our state from S3.
50

50

00:02:31,010  -->  00:02:32,710
This will then spin up the cluster
51

51

00:02:33,580  -->  00:02:35,700
we'll have to wait again, a couple of minutes.
52

52

00:02:35,700  -->  00:02:37,833
So I'll pause the demo for a couple of minutes
53

53

00:02:37,833  -->  00:02:40,573
and start again when the cluster is reachable.
54

54

00:02:42,370  -->  00:02:44,810
Cluster is starting, it should be ready in a few minutes.
55

55

00:02:44,810  -->  00:02:46,460
Let's have a look at the read me.
56

56

00:02:47,630  -->  00:02:51,940
We can download Istio, these are the instructions
57

57

00:02:51,940  -->  00:02:54,690
for the 1.0.1 version,
58

58

00:02:54,690  -->  00:02:56,640
or you can download the latest version.
59

59

00:02:57,640  -->  00:02:59,140
I'm going to download the latest version
60

60

00:02:59,140  -->  00:03:02,330
that's currently available, which is the 1.0.1.
61

61

00:03:02,330  -->  00:03:05,040
So we're just going to copy paste these lines,
62

62

00:03:05,040  -->  00:03:09,950
going to execute them, so this will download Istio 1.0.1
63

63

00:03:09,950  -->  00:03:14,950
for Linux, it will extract it in my home directory,
64

64

00:03:16,180  -->  00:03:19,800
so I have Istio 1.0.1 in my home directory,
65

65

00:03:19,800  -->  00:03:24,680
and also going to add this export path to my dot profile.
66

66

00:03:24,680  -->  00:03:28,730
So every time I log in, this path,
67

67

00:03:28,730  -->  00:03:31,310
this bin directory will be added to my path.
68

68

00:03:31,310  -->  00:03:34,720
So that everything that is in this bin directory
69

69

00:03:34,720  -->  00:03:37,750
the IstioCTL will be in the path,
70

70

00:03:37,750  -->  00:03:40,700
so I will be able to execute this command.
71

71

00:03:40,700  -->  00:03:44,160
To make this work, either you have to log out and log in,
72

72

00:03:44,160  -->  00:03:46,423
or you can just execute this,
73

73

00:03:48,280  -->  00:03:50,973
and then you should be able to execute IstioCTL.
74

74

00:03:52,630  -->  00:03:53,793
So that seems to work.
75

75

00:03:54,780  -->  00:03:57,030
So Istio configuration command line utility
76

76

00:03:57,030  -->  00:03:58,613
is now available for use.
77

77

00:03:59,860  -->  00:04:04,860
Let's go back to vagrant, my Kubernetes course,
78

78

00:04:05,110  -->  00:04:09,823
Istio directory, let's have a look at the read me.
79

79

00:04:11,630  -->  00:04:16,630
So now I can install Istio from the Istio directory,
80

80

00:04:19,430  -->  00:04:23,350
using this command to apply the CRDs,
81

81

00:04:23,350  -->  00:04:25,050
the Kubernetes extensions,
82

82

00:04:25,050  -->  00:04:28,500
and I can choose to install Istio
83

83

00:04:28,500  -->  00:04:30,800
without mutual TLS authentication,
84

84

00:04:30,800  -->  00:04:33,430
or with mutual TLS authentication.
85

85

00:04:33,430  -->  00:04:36,988
If enabled with, then there will be authentication
86

86

00:04:36,988  -->  00:04:40,440
on your microservices, but it also means
87

87

00:04:40,440  -->  00:04:42,780
that you cannot reach your services
88

88

00:04:42,780  -->  00:04:45,820
if you don't have a certificate.
89

89

00:04:45,820  -->  00:04:47,800
So it might make it a bit more difficult
90

90

00:04:47,800  -->  00:04:50,530
if you already have services running on the Kubernates.
91

91

00:04:50,530  -->  00:04:54,030
So then, to get started it's probably best
92

92

00:04:54,030  -->  00:04:56,490
to use it without authentication,
93

93

00:04:56,490  -->  00:04:58,850
and then when you want to bring it to production,
94

94

00:04:58,850  -->  00:05:00,483
you can enable authentication.
95

95

00:05:02,970  -->  00:05:05,660
So let's execute this one first,
96

96

00:05:05,660  -->  00:05:09,373
kubectl apply, the CRDs.yaml,
97

97

00:05:12,360  -->  00:05:15,550
so now it's applying all the custom resource definitions
98

98

00:05:15,550  -->  00:05:17,323
that are going to be used by Istio.
99

99

00:05:18,870  -->  00:05:22,800
Should now wait a couple of seconds, minutes,
100

100

00:05:22,800  -->  00:05:25,550
just to make sure that those CRDs are created properly,
101

101

00:05:27,460  -->  00:05:31,780
and then we should be able to install Istio,
102

102

00:05:31,780  -->  00:05:33,390
we're going to install Istio with
103

103

00:05:33,390  -->  00:05:35,897
no mutual TLS authentication for now.
104

104

00:05:43,090  -->  00:05:46,253
Now it's creating all the Istio resources.
105

105

00:05:48,480  -->  00:05:52,340
And now we have Istio successfully installed.
106

106

00:05:52,340  -->  00:05:54,080
We'll have to wait a little bit
107

107

00:05:54,080  -->  00:05:57,020
until Istio is completely started up,
108

108

00:05:57,020  -->  00:05:59,810
so we have a name space Istio system
109

109

00:06:00,740  -->  00:06:03,240
where all the containers need to be created first.
110

110

00:06:04,270  -->  00:06:05,710
Give it a couple of minutes,
111

111

00:06:05,710  -->  00:06:08,533
and in the next lecture I will show you a demo app.
