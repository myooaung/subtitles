1
1

00:00:01,121  -->  00:00:02,750
<v Instructor>In this short lecture I'll be talking about</v>
2

2

00:00:02,750  -->  00:00:04,363
Custom Resource Definitions.
3

3

00:00:05,470  -->  00:00:08,320
Custom resource definitions lets you extend
4

4

00:00:08,320  -->  00:00:10,460
the Kubernetes API.
5

5

00:00:10,460  -->  00:00:14,050
Resources are the endpoints in the Kubernetes API
6

6

00:00:14,050  -->  00:00:17,950
that store collections of API objects.
7

7

00:00:17,950  -->  00:00:21,710
For example, there is the built-in Deployment resource,
8

8

00:00:21,710  -->  00:00:23,803
that you can use to deploy applications.
9

9

00:00:24,804  -->  00:00:26,790
So I showed this one in the previous lectures,
10

10

00:00:26,790  -->  00:00:28,880
you would create the yaml file, you would use
11

11

00:00:28,880  -->  00:00:32,163
kind to deployment to deploy an application.
12

12

00:00:33,410  -->  00:00:35,800
In the yaml files you describe the object,
13

13

00:00:35,800  -->  00:00:37,913
using the Deployment resource type.
14

14

00:00:38,840  -->  00:00:43,123
You create the object on the cluster by using kubectl.
15

15

00:00:44,060  -->  00:00:46,373
So resource is like a Deployment resource,
16

16

00:00:47,230  -->  00:00:50,040
you create the yaml file using the resource to describe
17

17

00:00:50,040  -->  00:00:52,630
the object, then you put that object on the cluster
18

18

00:00:52,630  -->  00:00:54,210
and you have, for example,
19

19

00:00:54,210  -->  00:00:56,193
a Deployment running on the cluster.
20

20

00:00:57,210  -->  00:01:00,530
A Custom Resource is a resource that you might add
21

21

00:01:00,530  -->  00:01:03,873
to your cluster, it's not available on every cluster.
22

22

00:01:05,410  -->  00:01:08,890
It's an extention of the Kubernetes API.
23

23

00:01:08,890  -->  00:01:12,273
Custom Resources are also described in yaml files.
24

24

00:01:13,190  -->  00:01:16,909
As an administrator you can dynamically add CRD's,
25

25

00:01:16,909  -->  00:01:18,300
the Custom Resource Definitions,
26

26

00:01:18,300  -->  00:01:20,933
to add extra functionality to your cluster.
27

27

00:01:21,980  -->  00:01:24,270
Operators, explained in the next lecture,
28

28

00:01:24,270  -->  00:01:27,390
use these CRD's to extend the Kubernetes API
29

29

00:01:27,390  -->  00:01:29,483
with their own functionality.
30

30

00:01:30,560  -->  00:01:34,090
So in a nutshell, anyone can create CRD's,
31

31

00:01:34,090  -->  00:01:37,160
those CRD's you would have to add to your cluster,
32

32

00:01:37,160  -->  00:01:40,410
and then you can use, you can create yaml files
33

33

00:01:40,410  -->  00:01:42,290
with these Custom Resources.
34

34

00:01:42,290  -->  00:01:43,310
So you could, for example,
35

35

00:01:43,310  -->  00:01:47,631
rewrite a Deployment object as a Custom Resource,
36

36

00:01:47,631  -->  00:01:50,600
then you could deploy your own Custom Deployment object
37

37

00:01:50,600  -->  00:01:52,090
that might do something different
38

38

00:01:52,090  -->  00:01:53,923
than the standard deployment.
39

39

00:01:55,040  -->  00:01:57,230
And what it does different, that's all up to you
40

40

00:01:57,230  -->  00:02:00,800
because you can write it, we are not going to write
41

41

00:02:00,800  -->  00:02:03,890
the CRD's ourself, we are going to use operators
42

42

00:02:03,890  -->  00:02:07,189
which are going to use those CRD's that are then going
43

43

00:02:07,189  -->  00:02:09,460
to extend the functionality of your Kubernetes cluster
44

44

00:02:09,460  -->  00:02:10,973
of your Kubernetes API.
