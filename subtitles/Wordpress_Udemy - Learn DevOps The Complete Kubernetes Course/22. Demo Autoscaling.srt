1
00:00:00,320 --> 00:00:04,100
In this demo, I'm going to show you autoscaling in action.

2
00:00:05,380 --> 00:00:13,930
So, I'm in my "kubernetes-course", I have a folder autoscaling and I have just one file here "hpa-example.yml".

3
00:00:16,540 --> 00:00:21,700
This is the example that I showed you during the theory.

4
00:00:21,730 --> 00:00:30,980
I'm just going to add this to the cluster, so we have deployments that is created.

5
00:00:31,010 --> 00:00:36,580
We have a service that is created, and we have a "horizontalpodautoscaler" that has been created.

6
00:00:36,760 --> 00:00:45,680
This is a service, so my app will be accessible at Port 31001. 

7
00:00:46,390 --> 00:00:56,290
So, we do, "kubectl get hpa", I will see that I have a "horizontalpodautoscaler" with a "minpods" of 1, and "maxpods" of 10

8
00:00:57,770 --> 00:01:03,560
and it's currently waiting until it gets some metrics, which in the beginning is going to be 0%,

9
00:01:04,250 --> 00:01:11,840
because nobody is going to our app yet but that's going to change, because I'm going to launch a shell and I'm going to connect to this endpoint.

10
00:01:12,500 --> 00:01:18,100
I'm going to run this image "busybox" called "load-generator", which is just a pod name, but it's just a "busybox".

11
00:01:25,980 --> 00:01:33,400
And because I exposed this service right, "hpa-example" I should be able to use "wget" in this pod

12
00:01:33,400 --> 00:01:42,360
to connect to the web server and fetch the index. So, "wget http://hpa-example.default.svc.cluster.local:31001", [default] which is the namespace,

13
00:01:42,580 --> 00:01:46,720
[svc]for service, [cluster.local].

14
00:01:46,990 --> 00:01:50,210
And this works. And what is in that "index.html"?

15
00:01:50,230 --> 00:01:51,490
It just says, "Ok".

16
00:01:54,010 --> 00:02:00,730
It says, "Ok", but actually it executed some code that will generate some CPU usage, so if we run this in a loop,

17
00:02:00,730 --> 00:02:05,780
we will get to a higher percentage and then our autoscaling will kick in.

18
00:02:05,780 --> 00:02:08,520
So, let's run this in a loop.

19
00:02:10,160 --> 00:02:12,920
And now we just have to wait some time.

20
00:02:13,100 --> 00:02:20,780
It takes some time like a minute or so for the autoscaler to see that there is more CPU usage and then it's going to start scaling it.

21
00:02:20,780 --> 00:02:30,770
So, I am just going to open a second window and here I will check how many pods I running.

22
00:02:30,770 --> 00:02:38,540
Still currently I have three pods running and what the "hpa" says about my usage.

23
00:02:38,570 --> 00:02:40,580
Now I have 40%.

24
00:02:40,580 --> 00:02:47,090
It needs to go a little bit higher and then it will start adding more pods.

25
00:02:47,510 --> 00:02:49,400
So, I'll just pause the video for a second and when it starts scaling I will start again.

26
00:02:54,240 --> 00:02:58,140
And thenm you can see currently it is now 155%.

27
00:02:58,380 --> 00:03:02,420
So, it is starting to scale all these pods.

28
00:03:02,430 --> 00:03:10,450
So, in a few moments I will have all these pods running, which I am going then to take all these load.

29
00:03:10,540 --> 00:03:20,880
Now, what I'm going to do is, I'm just going to I'm just going to stop this one, "ctrl+c" and you can stop it.

30
00:03:21,750 --> 00:03:27,030
You can even close the container or end your session, and then you can remove the whole container if you want.

31
00:03:29,270 --> 00:03:37,100
What you will see now is that after a couple of minutes this load, this current load, this current usage is going

32
00:03:37,100 --> 00:03:44,240
to drop again, and when it drops, it's going to get lower than the target, and then Kubernetes or the autoscaler is going to remove pods. 

33
00:03:44,240 --> 00:03:48,600
We're going to end up with just one pod, because if the current utilization is 0%, because I'm not hitting this website anymore,

34
00:03:54,080 --> 00:04:00,140
then it will keep on downscaling until the minimum, and the minimum is one. If you want to always keep a couple of pods running, 

35
00:04:00,140 --> 00:04:04,100
you have to specify a minimum 3 or something like that.

36
00:04:04,280 --> 00:04:06,420
In my case it will just go down to zero.

37
00:04:06,590 --> 00:04:07,700
So, I'm going to give it a couple of minutes again.

38
00:04:07,700 --> 00:04:16,720
And here we are a couple of minutes later, current is 0% and there's only one pod running.

39
00:04:17,440 --> 00:04:23,440
All the other ones were terminated, so this basically is how out of scaling works.
