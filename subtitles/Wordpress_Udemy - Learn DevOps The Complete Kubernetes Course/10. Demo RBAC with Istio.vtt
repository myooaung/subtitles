WEBVTT
1
1

00:00:00.110  -->  00:00:02.910
<v Edward>In this demo, I will show you how RBAC works</v>
2

2

00:00:02.910  -->  00:00:05.703
in istio with our helloworld demo.
3

3

00:00:08.130  -->  00:00:10.210
First of all, I deleted all the pods
4

4

00:00:11.070  -->  00:00:13.740
and I basically started over with a new cluster to make sure
5

5

00:00:13.740  -->  00:00:16.716
that everything from the previous demos is gone.
6

6

00:00:16.716  -->  00:00:19.740
And then first go over the yaml files,
7

7

00:00:19.740  -->  00:00:20.793
the configuration.
8

8

00:00:21.760  -->  00:00:26.623
Let's have a look at helloworld-rbac-enable.yaml.
9

9

00:00:27.940  -->  00:00:32.898
Here I enabled RBAC for our default namespace.
10

10

00:00:32.898  -->  00:00:37.760
So we here see ON_WITH_INCLUSION of the default namespace.
11

11

00:00:37.760  -->  00:00:42.710
I also have to make sure that our mtls is enabled,
12

12

00:00:42.710  -->  00:00:46.660
so I'll use the MeshPolicy to enable-mtls
13

13

00:00:46.660  -->  00:00:50.930
and I'll create DestinationRule to enable-mtls
14

14

00:00:50.930  -->  00:00:52.353
for all the namespaces.
15

15

00:00:53.640  -->  00:00:56.910
I also create this DestinationRule for the api-server
16

16

00:00:56.910  -->  00:01:00.360
because the api-server is not using mtls.
17

17

00:01:00.360  -->  00:01:02.860
Then I have the helloworld-rbac.yaml
18

18

00:01:02.860  -->  00:01:07.860
and this includes all the deployments and the services
19

19

00:01:08.120  -->  00:01:10.680
from the helloworld.yaml itself,
20

20

00:01:10.680  -->  00:01:14.290
plus I added also the service accounts that we need.
21

21

00:01:14.290  -->  00:01:17.543
So let's have a look at this helloworld-rbac.yaml.
22

22

00:01:19.970  -->  00:01:21.750
This is the first service role,
23

23

00:01:21.750  -->  00:01:23.520
it's called hello-viewer,
24

24

00:01:23.520  -->  00:01:26.260
the one that I showed you in the overview
25

25

00:01:26.260  -->  00:01:27.630
in the previous lecture.
26

26

00:01:27.630  -->  00:01:30.580
So we'll need this one for the ingress controller.
27

27

00:01:30.580  -->  00:01:32.020
So the ingress controller will be able
28

28

00:01:32.020  -->  00:01:35.463
to do a GET and HEAD on the helloworld service.
29

29

00:01:36.950  -->  00:01:38.333
Then we have the world-viewer.
30

30

00:01:38.333  -->  00:01:41.690
This is for the hello service, because the hello service
31

31

00:01:41.690  -->  00:01:44.363
needs to be able to contact the world service.
32

32

00:01:45.280  -->  00:01:49.870
And then third, we have the world-2-viewer,
33

33

00:01:49.870  -->  00:01:52.080
so we'll give this one to the world service,
34

34

00:01:52.080  -->  00:01:53.910
because the world service need to be able to access
35

35

00:01:53.910  -->  00:01:55.823
the world-2 service.
36

36

00:01:57.690  -->  00:02:00.100
Then we can do the service role bindings.
37

37

00:02:00.100  -->  00:02:02.060
So I explained to you that we need
38

38

00:02:02.060  -->  00:02:05.660
to bind these service roles to a subject.
39

39

00:02:05.660  -->  00:02:10.660
And this can be a service account or we can use properties.
40

40

00:02:10.690  -->  00:02:13.820
In this case, we're going to bind it using properties.
41

41

00:02:13.820  -->  00:02:17.980
We're going to say if the source.namespace is istio-system,
42

42

00:02:17.980  -->  00:02:21.260
then we'll bind the hello-viewer.
43

43

00:02:21.260  -->  00:02:23.410
So anything in istio-system
44

44

00:02:23.410  -->  00:02:25.600
has the service role hello-viewer,
45

45

00:02:25.600  -->  00:02:28.163
and hello-viewer can then access the hello pod,
46

46

00:02:29.020  -->  00:02:30.553
the hello service.
47

47

00:02:31.870  -->  00:02:35.620
Then we have a ServiceRoleBinding for the subject
48

48

00:02:35.620  -->  00:02:39.490
cluster.local/ns for namespace, namespace is default,
49

49

00:02:40.622  -->  00:02:42.926
and the service account is hello.
50

50

00:02:42.926  -->  00:02:45.215
So we're gonna create a service account hello,
51

51

00:02:45.215  -->  00:02:48.837
and that we will attach to the hello service,
52

52

00:02:48.837  -->  00:02:51.685
and this needs access to the world-viewer.
53

53

00:02:51.685  -->  00:02:55.552
And the world-viewer can then access the world service.
54

54

00:02:55.552  -->  00:02:58.223
And then third, we have ServiceRoleBinding,
55

55

00:02:58.223  -->  00:03:00.307
and is the world-user-binding,
56

56

00:03:00.307  -->  00:03:03.555
and this will bind with the world service account.
57

57

00:03:03.555  -->  00:03:05.886
The world service account will be attached to the
58

58

00:03:05.886  -->  00:03:09.278
world pods, and then this one is unable to contact
59

59

00:03:09.278  -->  00:03:11.975
the world-2 service, so we attach it
60

60

00:03:11.975  -->  00:03:14.808
to the world-2-viewer ServiceRole.
61

61

00:03:16.090  -->  00:03:18.280
So then we need to create these two service accounts,
62

62

00:03:18.280  -->  00:03:21.984
so we have a ServiceAccount hello, and ServiceAccount world.
63

63

00:03:21.984  -->  00:03:22.817
Here is the hello ServiceAccount,
64

64

00:03:23.703  -->  00:03:25.330
here's the world ServiceAccount.
65

65

00:03:25.330  -->  00:03:29.940
And then from here on, it's the helloworld.yaml deployments,
66

66

00:03:29.940  -->  00:03:32.820
including a service account for the hello deployment
67

67

00:03:32.820  -->  00:03:34.370
and a service account for the world deployment.
68

68

00:03:34.370  -->  00:03:36.290
So this is exactly the same,
69

69

00:03:36.290  -->  00:03:38.200
I'm only using one replica though,
70

70

00:03:38.200  -->  00:03:41.540
so we have the hello deployment, and the hello deployment
71

71

00:03:41.540  -->  00:03:43.790
is going to use the hello serviceAccountName.
72

72

00:03:45.330  -->  00:03:48.530
So if you have another look, hello serviceAccountName
73

73

00:03:48.530  -->  00:03:51.830
is defined here, and then if you go up,
74

74

00:03:51.830  -->  00:03:54.247
then we see the ServiceRoleBinding
75

75

00:03:57.300  -->  00:03:59.980
for this subject, ServiceAccount hello,
76

76

00:03:59.980  -->  00:04:01.950
and the ServiceAccount hello will be bound
77

77

00:04:01.950  -->  00:04:05.690
to the ServiceRole world-viewer, and we go up again,
78

78

00:04:05.690  -->  00:04:10.020
then the world-viewer will have access to contact
79

79

00:04:10.020  -->  00:04:14.253
the world.default.svc.cluster.local using GET and HEAD.
80

80

00:04:17.270  -->  00:04:19.020
So then we have this deployment for hello,
81

81

00:04:19.020  -->  00:04:21.820
we have the deployment, we have the service,
82

82

00:04:21.820  -->  00:04:23.870
we have deployment for world.
83

83

00:04:23.870  -->  00:04:25.520
Here we also have a service account,
84

84

00:04:25.520  -->  00:04:27.470
the world service account,
85

85

00:04:27.470  -->  00:04:29.750
and then we have the service for world,
86

86

00:04:29.750  -->  00:04:31.410
a deployment for world-2,
87

87

00:04:31.410  -->  00:04:33.150
world-2 doesn't have a service account
88

88

00:04:33.150  -->  00:04:35.560
because it doesn't need to contact anything,
89

89

00:04:35.560  -->  00:04:37.680
and then we have the service world-2.
90

90

00:04:37.680  -->  00:04:39.710
So these are all the deployments the services
91

91

00:04:39.710  -->  00:04:41.080
and the service accounts.
92

92

00:04:41.080  -->  00:04:42.960
And then you have the Gateway,
93

93

00:04:42.960  -->  00:04:44.550
just like we had in the previous demos,
94

94

00:04:44.550  -->  00:04:47.636
we have a Gateway and then we have a VirtualService.
95

95

00:04:47.636  -->  00:04:48.720
This VirtualService will make sure
96

96

00:04:48.720  -->  00:04:51.820
that we can access the hello-rbac-example.com
97

97

00:04:51.820  -->  00:04:54.810
and it will then set the destination
98

98

00:04:54.810  -->  00:04:57.463
on the hello.default.svc.cluster.local.
99

99

00:04:58.710  -->  00:05:00.830
Then you have a DestinationRule,
100

100

00:05:00.830  -->  00:05:03.330
which enables ISTIO_MUTUAL
101

101

00:05:03.330  -->  00:05:05.883
and make sure that we are getting the version one.
102

102

00:05:06.950  -->  00:05:09.670
So that's it, that's a lot of yaml.
103

103

00:05:09.670  -->  00:05:11.520
Let's try to execute it,
104

104

00:05:11.520  -->  00:05:15.697
kubectl create helloworld-rbac-enable.yaml.
105

105

00:05:20.770  -->  00:05:22.277
This enables RBAC
106

106

00:05:23.400  -->  00:05:24.250
and it will do...
107

107

00:05:28.510  -->  00:05:29.850
and then we will use, again,
108

108

00:05:29.850  -->  00:05:31.810
istioctl to do a kube-inject
109

109

00:05:33.080  -->  00:05:34.940
over the helloworld-rbac.yaml.
110

110

00:05:34.940  -->  00:05:37.520
So this will inject the sidecars
111

111

00:05:37.520  -->  00:05:39.950
and then do the kubectl apply.
112

112

00:05:39.950  -->  00:05:42.650
You can find, again, all these commands in the readme.
113

113

00:05:43.597  -->  00:05:45.260
It is then going to create our pods.
114

114

00:05:45.260  -->  00:05:48.483
So like I said, only one replica this time.
115

115

00:05:49.770  -->  00:05:51.220
And now if everything went fine,
116

116

00:05:51.220  -->  00:05:54.960
I should be able to contact our istio ingress,
117

117

00:05:54.960  -->  00:05:57.510
istio ingress is going to contact hello,
118

118

00:05:57.510  -->  00:05:58.950
hello will contact world
119

119

00:05:58.950  -->  00:06:00.770
and world will contact world-2.
120

120

00:06:00.770  -->  00:06:02.490
So the only difference now
121

121

00:06:02.490  -->  00:06:04.900
is that if I login to world-2, for example,
122

122

00:06:04.900  -->  00:06:07.150
I will now be able to contact hello.
123

123

00:06:07.150  -->  00:06:09.390
Whereas, without RBAC, this is all possible
124

124

00:06:09.390  -->  00:06:11.923
because all services are open to each other.
125

125

00:06:12.950  -->  00:06:14.700
This is now running,
126

126

00:06:14.700  -->  00:06:19.700
so let's have a look at the service again.
127

127

00:06:26.860  -->  00:06:28.500
Let's do a curl,
128

128

00:06:28.500  -->  00:06:33.500
host is hello-rbac.example.com.
129

129

00:06:36.040  -->  00:06:38.940
So this gives us our Hello world.
130

130

00:06:38.940  -->  00:06:40.740
So this is all working,
131

131

00:06:40.740  -->  00:06:43.040
the services can contact each other.
132

132

00:06:43.040  -->  00:06:47.183
Let's now try to login to one of the pods,
133

133

00:06:49.040  -->  00:06:52.020
to see if we can contact one of the other services.
134

134

00:06:52.020  -->  00:06:54.883
So let's login to world-2, for example,
135

135

00:06:57.990  -->  00:07:02.990
and let's use wget to contact the hello service.
136

136

00:07:03.310  -->  00:07:05.110
The hello service is running on 8080
137

137

00:07:06.610  -->  00:07:10.250
and wget server return an error,
138

138

00:07:10.250  -->  00:07:12.180
we got a Forbidden.
139

139

00:07:12.180  -->  00:07:14.550
We only be able to access our access our services,
140

140

00:07:14.550  -->  00:07:16.910
depending on how we set our rules.
141

141

00:07:16.910  -->  00:07:19.860
We cannot just access any service anymore.
142

142

00:07:19.860  -->  00:07:23.810
So even if I want to access world, it will not work.
143

143

00:07:23.810  -->  00:07:26.903
Even if I want access world-2 it will not work.
144

144

00:07:27.900  -->  00:07:30.763
I can access my own local host,
145

145

00:07:31.840  -->  00:07:35.390
which will still work, three exclamation marks.
146

146

00:07:35.390  -->  00:07:39.023
But any other service I want to contact, that will not work.
147

147

00:07:40.890  -->  00:07:43.983
Let's try to login into our hello pod.
148

148

00:07:50.100  -->  00:07:53.310
Let's do a wget on world
149

149

00:07:53.310  -->  00:07:55.743
and we set a rule that hello can access world.
150

150

00:07:58.650  -->  00:08:00.250
So that works,
151

151

00:08:00.250  -->  00:08:03.440
because the rule allowed us to do that.
152

152

00:08:03.440  -->  00:08:06.480
So world, we were able to access
153

153

00:08:06.480  -->  00:08:08.690
and world is able to access world-2.
154

154

00:08:08.690  -->  00:08:12.790
So then we still got world and the three exclamation marks,
155

155

00:08:12.790  -->  00:08:14.240
so that works.
156

156

00:08:14.240  -->  00:08:17.373
But if you would like to contact world-2 directly,
157

157

00:08:18.240  -->  00:08:20.900
because you just want to see the exclamation marks,
158

158

00:08:20.900  -->  00:08:23.083
that will not work, we get a Forbidden.
159

159

00:08:24.130  -->  00:08:27.230
So this way we can shield our services,
160

160

00:08:27.230  -->  00:08:31.010
so we can use RBAC to setup services serves rules,
161

161

00:08:31.010  -->  00:08:33.320
to limit access like that.
162

162

00:08:33.320  -->  00:08:37.120
And, alternatively, we can also use end user to service,
163

163

00:08:37.120  -->  00:08:39.990
where you can limit the access to your services
164

164

00:08:39.990  -->  00:08:43.430
from the end user using JWT tokens.
165

165

00:08:43.430  -->  00:08:44.710
I don't show it in this demo
166

166

00:08:44.710  -->  00:08:47.760
but here we only used the subject namespace
167

167

00:08:47.760  -->  00:08:50.530
and service account, but they are also properties
168

168

00:08:50.530  -->  00:08:53.940
that you can use to allow only authenticated users,
169

169

00:08:53.940  -->  00:08:54.783
for example.
170

170

00:08:55.650  -->  00:09:00.230
So this was, again, a long demo, a lot of moving parts.
171

171

00:09:00.230  -->  00:09:03.590
So for sure you should test this out yourself.
172

172

00:09:03.590  -->  00:09:06.360
And it's very error prone,
173

173

00:09:06.360  -->  00:09:08.010
so if something very small is wrong
174

174

00:09:08.010  -->  00:09:11.760
it obviously will not work because it's access control.
175

175

00:09:11.760  -->  00:09:13.150
The access needs to be correct,
176

176

00:09:13.150  -->  00:09:15.600
otherwise you will just get these permission denied
177

177

00:09:15.600  -->  00:09:17.340
if it's not setup correctly.
178

178

00:09:17.340  -->  00:09:20.030
So test this out yourself and let me know in the Q&amp;A
179

179

00:09:20.030  -->  00:09:21.680
if you have any issues with this.
