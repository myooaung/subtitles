WEBVTT
1
00:00:00.770 --> 00:00:06.810
In this short demo, I'm going to show you how to create a new service from a YAML file 

2
00:00:06.810 --> 00:00:08.610
using a static port.

3
00:00:08.660 --> 00:00:14.300
I still have my minikube running.

4
00:00:14.300 --> 00:00:17.660
I don't have any pods, so I'm going to create a pod again.

5
00:00:20.470 --> 00:00:24.370
So, I am going to do a "kubectl create" from  my first app,

6
00:00:24.500 --> 00:00:27.930
I'm going to create this "helloworld".

7
00:00:27.930 --> 00:00:33.730
So, this is the "helloworld" pod, "helloworld.example.com".

8
00:00:33.760 --> 00:00:39.240
I am going to describe it again.

9
00:00:39.290 --> 00:00:44.500
So, this starts. It has a label "app: helloworld".

10
00:00:44.780 --> 00:00:48.970
For this pod I'm going to run a service, so I have "first-app/helloworld-nodeport-service"

11
00:00:53.110 --> 00:00:56.680
And this is going to open "nodePort: 31000".

12
00:00:56.680 --> 00:01:01.600
I'm going to use "nodejs-port", which is defined

13
00:01:04.300 --> 00:01:12.000
right here in the pod definition there is name "nodejs-port".

14
00:01:12.010 --> 00:01:13.200
This has a label, 

15
00:01:13.220 --> 00:01:14.440
"app: helloworld".

16
00:01:14.620 --> 00:01:16.540
I have a selector on "app: helloworld".

17
00:01:16.540 --> 00:01:21.660
So, this is going to be the service for this pod and I am specifying this nodePort.

18
00:01:22.030 --> 00:01:28.540
So, rather than having a random port, I should be able to access this port

19
00:01:28.540 --> 00:01:30.870
and then I'll be able to connect to the pod.

20
00:01:31.100 --> 00:01:35.940
"kubectl create", this "first-app/helloworld-nodeport-service",

21
00:01:35.950 --> 00:01:46.390
and then for "minikube service", the label of this service is in the metadata, "helloworld-service"

22
00:01:46.390 --> 00:01:47.190
I want to know the URL

23
00:01:47.470 --> 00:01:53.080
and you see, it has port 31001.

24
00:01:53.430 --> 00:02:03.150
This IP I can use to connect to the app. So, I am going to do curl of this URL

25
00:02:03.150 --> 00:02:04.000
and I get, "Hello world!"

26
00:02:05.070 --> 00:02:08.770
Now if you're on AWS then you cannot do these commands, 

27
00:02:09.030 --> 00:02:11.600
but you can go straight to the nodes,

28
00:02:11.700 --> 00:02:13.870
you just have to change the Security Groups.

29
00:02:14.130 --> 00:02:20.040
I already showed you this in one of the introduction lectures, for AWS how you can do that.

30
00:02:21.190 --> 00:02:24.410
This is just showing how you can do the same thing.

31
00:02:24.550 --> 00:02:33.030
Creating a service, but with a static nodePort. If we ask the info from our services

32
00:02:33.030 --> 00:02:33.890
and do "kubectl describe"

33
00:02:34.180 --> 00:02:39.810
it can either say "service" or you it can say "svc", which is short for service,

34
00:02:40.080 --> 00:02:46.130
and then we can describe this "helloworld-service" and this will give us some more information.

35
00:02:47.010 --> 00:02:53.730
If we want to get a list of all the services, we can just do, "kubectl get svc", and then we get a summary

36
00:02:53.850 --> 00:02:56.280
of all running services.

37
00:02:56.340 --> 00:02:57.840
This was already here,

38
00:02:57.840 --> 00:03:00.590
it's one of the services running for minikube.

39
00:03:00.810 --> 00:03:02.480
This is the one we created.

40
00:03:02.550 --> 00:03:06.010
So, you see here "Cluster IP",

41
00:03:06.120 --> 00:03:12.540
this is the cluster IP I was talking about in the theory, this is a default cluster IP, it is a default

42
00:03:12.840 --> 00:03:19.370
virtual IP that our service gets. This IP only reachable within the cluster.

43
00:03:19.410 --> 00:03:27.670
This is IP that we can use to externally exit the cluster and then we see, "NodePort: 32001",

44
00:03:27.680 --> 00:03:31.150
and we also see that another endpoint has been created.

45
00:03:31.350 --> 00:03:34.560
So, this and points can also be used within the cluster.

46
00:03:34.680 --> 00:03:40.260
So, there are multiple ways to access your app, this node port is going to be 

47
00:03:40.260 --> 00:03:42.480
a static way to access our cluster.

48
00:03:42.480 --> 00:03:48.470
Let me delete this service and let me in and create it again.

49
00:03:52.690 --> 00:03:54.510
Let's describe it again.

50
00:03:55.940 --> 00:03:58.620
You see IP address is now different.

51
00:03:58.640 --> 00:04:05.690
So this virtual IP changes if you don't define it in the YAML file. 

52
00:04:05.840 --> 00:04:06.980
So, this one for us it's not static.

53
00:04:07.010 --> 00:04:09.650
This port number, because we defined it, is a static port number,

54
00:04:09.650 --> 00:04:16.540
the one that we can use to configure external services to access our application in this pod.

55
00:04:17.120 --> 00:04:24.300
If you would want a static virtual IP, a static cluster IP, we would also have to define this in YAML.

56
00:04:26.070 --> 00:04:27.270
That's it for this demo.

57
00:04:27.480 --> 00:04:32.610
I will come back to services when I am going to discuss service discovery using DNS.
