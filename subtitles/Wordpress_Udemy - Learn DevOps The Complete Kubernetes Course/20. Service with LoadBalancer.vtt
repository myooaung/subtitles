WEBVTT
1
00:00:00.520 --> 00:00:09.130
In this lecture, I'll show you how to set up a LoadBalancer for your first app. In a real world scenario.

2
00:00:09.170 --> 00:00:14.970
You need to be able to access the app from outside the cluster. 

3
00:00:14.990 --> 00:00:23.060
On AWS you could easily add an external Load Balancer. 

4
00:00:23.060 --> 00:00:25.170
This AWS Load Balancer will route the traffic to the correct pod in Kubernetes.

5
00:00:25.550 --> 00:00:31.100
There are other solutions for other cloud providers that do not have a Load Balancer

6
00:00:31.100 --> 00:00:38.360
Like you can run your own "haproxy" or "nginx load balancer" in front of your cluster. 

7
00:00:38.900 --> 00:00:39.610
Or you can expose ports directly.

8
00:00:39.610 --> 00:00:42.710
I will show you how to do it with an AWS.

9
00:00:42.900 --> 00:00:44.560
The first ever to be launched

10
00:00:44.670 --> 00:00:47.520
You can see the YAML file on the left

11
00:00:47.520 --> 00:00:52.250
It is just going to run the pod with the "k8s-demo" 

12
00:00:52.260 --> 00:00:55.520
Which just returns "Hello World" on Port 3000

13
00:00:55.570 --> 00:00:58.010
This is the pod definition on the right, we have the service definition

14
00:00:58.030 --> 00:01:03.100
and the service definition is going to put a load balancer in front of our pod

15
00:01:03.100 --> 00:01:06.470
So that, our pod can be accessed from the Internet.

16
00:01:07.440 --> 00:01:14.070
This service has type "LoadBalancer" and when you specify this type "LoadBalancer" on an AWS, yes? It will start an AWS 

17
00:01:14.100 --> 00:01:21.790
and it will be an Elastic Load Balancer, which is a service that Amazon provides this service is

18
00:01:21.790 --> 00:01:23.600
This service is defined in the YAML file

19
00:01:23.740 --> 00:01:30.370
But earlier when you were using Minikube, then we were using the command "kubectl expose" 

20
00:01:30.430 --> 00:01:34.410
And that also creates a service, we just don't define it in a YAML file.

21
00:01:34.420 --> 00:01:38.840
Here we define our service in a YAML and then submit it to the cluster.

22
00:01:39.190 --> 00:01:42.670
It's basically the same thing whatever you do with "kubectl"

23
00:01:42.730 --> 00:01:45.950
You can also put in YAML files.

24
00:01:46.160 --> 00:01:49.250
So, this YAML file is of kind "Service".

25
00:01:49.250 --> 00:01:51.090
It has a name

26
00:01:51.230 --> 00:01:52.550
"helloworld-service"

27
00:01:52.730 --> 00:01:54.350
And it also has a spec.

28
00:01:54.640 --> 00:01:56.850
I will go over the spec in detail in the demo.

29
00:01:57.070 --> 00:02:00.650
For now just remember that you can have different services.

30
00:02:00.650 --> 00:02:07.550
This service is a type load balancer and will run on ELB. If you run this pod and this service

31
00:02:07.560 --> 00:02:14.930
You could then point a hostname like "example.com" to the ELB to reach your pot from the Internet.

32
00:02:15.030 --> 00:02:19.910
So, this is the way to make your application available to the Internet.

33
00:02:19.920 --> 00:02:22.510
I will show you all the details in the next demo.
