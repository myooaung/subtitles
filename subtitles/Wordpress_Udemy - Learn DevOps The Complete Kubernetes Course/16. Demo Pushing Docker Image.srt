1
00:00:00,890 --> 00:00:07,180
In this demo, I'm going to show you how to push a docker image to Docker Hub

2
00:00:07,340 --> 00:00:15,460
I am again logged into my ubuntu-xenial box and I'm going to use Docker login first.

3
00:00:15,710 --> 00:00:20,890
If you don't have a Docker ID yet, you have to go first to "http://hub.docker.com"

4
00:00:22,570 --> 00:00:29,200
This is the Website. If you're new to Docker, you can create your free Docker ID, you just have to enter your

5
00:00:29,200 --> 00:00:31,750
email address and a password and you can sign up.

6
00:00:31,930 --> 00:00:36,690
And then you can use those credentials to log in here.

7
00:00:37,330 --> 00:00:46,600
So, I'm going to enter my username, and my password, and then I am logged in. Once logged in, you can create

8
00:00:46,660 --> 00:00:52,350
a new Repository. Your repository is always going to be prefixed by your user name.

9
00:00:52,440 --> 00:00:54,390
And then you can enter a name.

10
00:00:54,390 --> 00:01:01,020
For instance you can say docker-demo, then you give it a short description maybe a full description

11
00:01:01,410 --> 00:01:08,520
and you can make it public or private. At the moment, you can only have a limited private repositories

12
00:01:08,700 --> 00:01:11,810
but you can have unlimited public repositories.

13
00:01:11,910 --> 00:01:18,720
I already have a repository, my repository is "k8s-demo", and that is the repository that I'm going

14
00:01:18,720 --> 00:01:20,090
to use.

15
00:01:20,160 --> 00:01:22,470
Feel free to take any name that you want.

16
00:01:23,570 --> 00:01:34,820
So the next step, is to tag our image, a previously create image, with the repository name that we specified

17
00:01:34,850 --> 00:01:35,580
in Docker Hub.

18
00:01:35,720 --> 00:01:42,990
So, I'm going to use "k8s-demo". So, I am going to tag this image with this.

19
00:01:43,210 --> 00:01:49,300
If you don't remember your tag anymore, you can use docker images, which is just going to list all the images

20
00:01:49,510 --> 00:01:51,750
of your system.

21
00:01:51,750 --> 00:01:52,700
Here is my node image for instance.

22
00:01:53,890 --> 00:01:56,800
And then you will see the image that you have created.

23
00:01:56,830 --> 00:01:58,360
I have this one now tagged

24
00:01:58,720 --> 00:02:09,220
So, this is my image and my image is now tagged with the name. So, I can now docker push this image to my repository

25
00:02:11,830 --> 00:02:13,440
So, I'm going to push this to "docker.io/wardviaene/k8s-demo"

26
00:02:18,280 --> 00:02:24,250
This will take some time to upload and then if you take another look at Docker Hub, you will see

27
00:02:24,310 --> 00:02:26,020
"Last pushed: a few seconds ago"

28
00:02:27,820 --> 00:02:35,990
And then here within tree specify a tag name, it has a tag name "latest", and it is 256 megabytes.

29
00:02:36,460 --> 00:02:39,260
You can specify a tag name, if you don't

30
00:02:39,340 --> 00:02:40,820
It just takes "latest".

31
00:02:41,050 --> 00:02:47,000
So, docker tag with column "latest" is exactly the same as not doing it.

32
00:02:48,720 --> 00:02:51,960
So, we can either tag it with "latest" or we can give the version ID.

33
00:02:52,000 --> 00:02:54,870
I'm not going to give it a version ID, I am just going to use "latest".

34
00:02:54,870 --> 00:03:02,640
So, now everything is ready to use this image that we just pushed to Docker Hub, to use this in kubernetes.

35
00:03:02,670 --> 00:03:05,670
So, that will be the next step in the next lecture

36
00:03:05,820 --> 00:03:09,170
I will show you how to run this image on kubernetes.
