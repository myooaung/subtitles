WEBVTT
1
1

00:00:00.230  -->  00:00:01.630
<v Edward>In this demo I will show you</v>
2

2

00:00:01.630  -->  00:00:05.050
how to use the node-app-demo helm chart,
3

3

00:00:05.050  -->  00:00:08.690
a chart I created myself to show you a little bit
4

4

00:00:08.690  -->  00:00:10.653
how helm charts work.
5

5

00:00:12.350  -->  00:00:14.550
I am in my helm directory.
6

6

00:00:14.550  -->  00:00:16.170
And here I have a demo-chart
7

7

00:00:17.340  -->  00:00:18.690
that I'm going to be using.
8

8

00:00:19.690  -->  00:00:22.570
The helm chart basics come from helm create,
9

9

00:00:22.570  -->  00:00:24.570
what I just showed you in the previous lecture.
10

10

00:00:24.570  -->  00:00:26.540
I just adapted it a little bit
11

11

00:00:26.540  -->  00:00:28.763
to show you a more complex example.
12

12

00:00:30.400  -->  00:00:31.510
So what does that all change?
13

13

00:00:31.510  -->  00:00:33.273
Let's have a look at the values.
14

14

00:00:34.435  -->  00:00:36.160
I have a replicaCount of three.
15

15

00:00:36.160  -->  00:00:41.160
I'm using an image that comes from my Docker Hub repository.
16

16

00:00:43.730  -->  00:00:45.600
It's called node-demo-app,
17

17

00:00:45.600  -->  00:00:48.693
which just spins up a simple node app.
18

18

00:00:48.693  -->  00:00:50.062
I have it here.
19

19

00:00:50.062  -->  00:00:52.293
I will just show you the index.js.
20

20

00:00:55.460  -->  00:00:57.750
It connects to mysql and is then going
21

21

00:00:57.750  -->  00:00:59.750
to create a table visits,
22

22

00:00:59.750  -->  00:01:02.100
and every time you hit the endpoint it's going
23

23

00:01:02.100  -->  00:01:06.250
to do an insert and then it's going to say hello world!
24

24

00:01:06.250  -->  00:01:09.580
You are visitor number, something.
25

25

00:01:09.580  -->  00:01:11.020
This is already version two.
26

26

00:01:11.020  -->  00:01:13.963
Version one doesn't have this version back here.
27

27

00:01:16.040  -->  00:01:16.873
What does it need?
28

28

00:01:16.873  -->  00:01:19.580
It needs a mysql host, mysql user,
29

29

00:01:19.580  -->  00:01:21.850
mysql password, and mysql database
30

30

00:01:21.850  -->  00:01:24.323
to be able to function because it's using mysql.
31

31

00:01:25.660  -->  00:01:26.593
Let's close this.
32

32

00:01:28.360  -->  00:01:29.830
I'm going to use this image.
33

33

00:01:29.830  -->  00:01:31.580
It's going to spin up the node app
34

34

00:01:31.580  -->  00:01:33.010
and it requires environment variables
35

35

00:01:33.010  -->  00:01:34.920
to be able to connect to mysql.
36

36

00:01:34.920  -->  00:01:36.630
Going to use a v0.0.1.
37

37

00:01:36.630  -->  00:01:38.944
I also have a v0.0.2.
38

38

00:01:38.944  -->  00:01:43.944
The only difference is that the v0.0.2 shows v0.0.2
39

39

00:01:43.980  -->  00:01:46.720
in the message when you connect it.
40

40

00:01:46.720  -->  00:01:48.527
The pullPolicy is ifNotPresent.
41

41

00:01:48.527  -->  00:01:51.920
I'm going to use a LoadBalancer type, on port 80.
42

42

00:01:51.920  -->  00:01:53.760
You can change this into cluster IP
43

43

00:01:53.760  -->  00:01:55.280
in a new port forwarding.
44

44

00:01:55.280  -->  00:01:58.170
I find it easier to just spin up a LoadBalancer.
45

45

00:01:58.170  -->  00:01:59.610
Ingress is disabled.
46

46

00:01:59.610  -->  00:02:02.930
Resources, there's nothing in the resources.
47

47

00:02:02.930  -->  00:02:06.550
And here I added the MariaDB chart configuration.
48

48

00:02:06.550  -->  00:02:08.630
So I'm going to launch a MariaDB,
49

49

00:02:08.630  -->  00:02:10.280
which is a version of mysql.
50

50

00:02:10.280  -->  00:02:13.910
So MariaDB is going to provide me mysql server.
51

51

00:02:13.910  -->  00:02:15.280
It's enabled.
52

52

00:02:15.280  -->  00:02:16.433
No replication.
53

53

00:02:17.490  -->  00:02:19.840
I want a database that is called app
54

54

00:02:19.840  -->  00:02:23.350
and I want to contact it using the app-user.
55

55

00:02:23.350  -->  00:02:26.510
On persistence, I'm going to use a volume of eight gigabytes
56

56

00:02:26.510  -->  00:02:27.453
for my data.
57

57

00:02:28.420  -->  00:02:31.120
If I'm going to use this MariaDB chart
58

58

00:02:31.120  -->  00:02:32.660
I needed to find it somewhere,
59

59

00:02:32.660  -->  00:02:35.773
and it's not in the requirements.yaml.
60

60

00:02:36.650  -->  00:02:41.650
Here I have a dependency on mariadb on version 4.x.x.
61

61

00:02:42.210  -->  00:02:45.910
Comes from kubernetes charts, repository,
62

62

00:02:45.910  -->  00:02:48.540
condition mariadb.enabled.
63

63

00:02:48.540  -->  00:02:51.730
So only get this chart if mariadb is enabled.
64

64

00:02:51.730  -->  00:02:55.140
And we're going to take this using node-app-database.
65

65

00:02:55.140  -->  00:02:56.840
Then we have templates.
66

66

00:02:56.840  -->  00:02:59.910
In the templates the main difference is here
67

67

00:02:59.910  -->  00:03:01.060
in the deployment.yaml.
68

68

00:03:02.170  -->  00:03:05.110
This is all the same as the example.
69

69

00:03:05.110  -->  00:03:07.770
Here I changed the containerPort
70

70

00:03:07.770  -->  00:03:10.570
and then I added the environment variables.
71

71

00:03:10.570  -->  00:03:14.460
So MYSQL_HOST, if mariadb is enabled
72

72

00:03:14.460  -->  00:03:18.410
then I'm going to use template mariadb.fullname.
73

73

00:03:18.410  -->  00:03:20.423
Let's have a look at our template again.
74

74

00:03:20.423  -->  00:03:21.913
Template_helpers.tpl.
75

75

00:03:24.210  -->  00:03:25.123
Mariadb.
76

76

00:03:27.420  -->  00:03:29.910
So we define mariadb.fullname,
77

77

00:03:29.910  -->  00:03:34.910
so it's going to be the release name dash and then mariadb.
78

78

00:03:35.330  -->  00:03:36.703
It's going to be truncated to a 63
79

79

00:03:36.703  -->  00:03:40.640
and I'm going to trim any suffix that is a dash.
80

80

00:03:40.640  -->  00:03:43.346
So this means that we have the release name,
81

81

00:03:43.346  -->  00:03:45.250
ReleaseName -mariadb is going to be
82

82

00:03:45.250  -->  00:03:47.184
the service from mariadb,
83

83

00:03:47.184  -->  00:03:49.210
so that's what we need for our host.
84

84

00:03:49.210  -->  00:03:50.982
That will be to MYSQL_HOST.
85

85

00:03:50.982  -->  00:03:53.580
MYSQL_USER is gonna come from values,
86

86

00:03:53.580  -->  00:03:55.920
Values.mariadb.db.user.
87

87

00:03:55.920  -->  00:03:58.263
And for database values, mariadb.db.name.
88

88

00:03:59.519  -->  00:04:00.363
So this comes from the values.
89

89

00:04:01.250  -->  00:04:02.393
Comes from right here.
90

90

00:04:04.890  -->  00:04:06.380
And then the password.
91

91

00:04:06.380  -->  00:04:09.350
When the mariadb dependency is spun up
92

92

00:04:09.350  -->  00:04:10.633
it will have a secret,
93

93

00:04:11.600  -->  00:04:14.840
and the secret will have the same name as the service
94

94

00:04:14.840  -->  00:04:16.480
or as deployment, it will just have
95

95

00:04:16.480  -->  00:04:19.410
the release name -mariadb.
96

96

00:04:19.410  -->  00:04:21.770
So that's the secret that we are going to look for.
97

97

00:04:21.770  -->  00:04:24.335
The key in a secret is going to be mariadb-password.
98

98

00:04:24.335  -->  00:04:28.230
Once I install this chart I will do a kubectl get secrets
99

99

00:04:28.230  -->  00:04:30.180
so that you see this when it's working.
100

100

00:04:31.030  -->  00:04:33.708
But then it gets the MYSQL_PASSWORD from the secret.
101

101

00:04:33.708  -->  00:04:35.700
Then we have livnessProbe and a readinessProbe
102

102

00:04:36.570  -->  00:04:37.800
to this default.
103

103

00:04:37.800  -->  00:04:42.800
So there will be a health check always hitting this URL
104

104

00:04:42.908  -->  00:04:44.790
so then our counter will definitely
105

105

00:04:44.790  -->  00:04:47.163
increase by itself over time.
106

106

00:04:48.170  -->  00:04:50.020
So that's a good test that we can do.
107

107

00:04:51.150  -->  00:04:53.243
So that's it for this chart.
108

108

00:04:54.510  -->  00:04:57.085
Let's install this chart so I'm going to do,
109

109

00:04:57.085  -->  00:05:01.130
I have the commands in my README.md.
110

110

00:05:01.130  -->  00:05:03.460
Before we can install it we need a dependency.
111

111

00:05:03.460  -->  00:05:06.650
And dependencies will be saved in charts.
112

112

00:05:06.650  -->  00:05:07.970
So chart is empty.
113

113

00:05:07.970  -->  00:05:12.210
So let's download our dependency, helm dependency update.
114

114

00:05:12.210  -->  00:05:14.173
We'll get our dependency.
115

115

00:05:15.170  -->  00:05:20.170
So now I have mariadb-4.3.1 in my dependencies,
116

116

00:05:20.200  -->  00:05:22.223
so now I can install this chart.
117

117

00:05:23.130  -->  00:05:25.430
Helm install of this directory
118

118

00:05:26.370  -->  00:05:29.003
is going to install this chart.
119

119

00:05:31.610  -->  00:05:33.210
State is deployed.
120

120

00:05:33.210  -->  00:05:35.690
The name is bumptious-fly.
121

121

00:05:35.690  -->  00:05:37.663
I have a service, a deployment,
122

122

00:05:38.795  -->  00:05:40.245
a StatefulSet for my mariadb.
123

123

00:05:41.260  -->  00:05:44.430
A pod, I have three pods for my Node.js app
124

124

00:05:44.430  -->  00:05:46.490
and one pod for me mariadb.
125

125

00:05:46.490  -->  00:05:48.180
I have the secret here,
126

126

00:05:48.180  -->  00:05:50.650
my user and my root password will be here.
127

127

00:05:50.650  -->  00:05:52.640
And I have multiple ConfigMaps.
128

128

00:05:52.640  -->  00:05:55.230
So let's have a look at the secrets.
129

129

00:05:55.230  -->  00:05:59.010
Kubectle get secret
130

130

00:06:03.210  -->  00:06:07.250
as -o yaml and we get the mariadb-password
131

131

00:06:07.250  -->  00:06:08.900
and the mariadb-root-password.
132

132

00:06:08.900  -->  00:06:10.840
So these are what the app is going to use.
133

133

00:06:10.840  -->  00:06:12.523
You have to base64 decode it.
134

134

00:06:13.964  -->  00:06:15.470
So I'm going to do base64 decode
135

135

00:06:15.470  -->  00:06:18.913
and this is in the password right here.
136

136

00:06:20.330  -->  00:06:21.410
This is autoprovision,
137

137

00:06:21.410  -->  00:06:23.020
so we don't really need to do something.
138

138

00:06:23.020  -->  00:06:24.750
Once the secret has been created
139

139

00:06:24.750  -->  00:06:28.340
then the pods will see that it has been created.
140

140

00:06:28.340  -->  00:06:30.992
It takes some time and if you restart to wait
141

141

00:06:30.992  -->  00:06:35.880
for this mariadb we could also use a script here somewhere
142

142

00:06:35.880  -->  00:06:39.600
to wait for the mariadb to be up so the app doesn't crash.
143

143

00:06:39.600  -->  00:06:40.630
But I haven't added that.
144

144

00:06:40.630  -->  00:06:42.070
It's a very simple app.
145

145

00:06:42.070  -->  00:06:44.713
So we'll just crash until mariadb is up.
146

146

00:06:46.260  -->  00:06:48.410
Now I waited a few minutes.
147

147

00:06:48.410  -->  00:06:50.260
It needed four restarts to then see
148

148

00:06:50.260  -->  00:06:52.890
that the mariadb is running.
149

149

00:06:52.890  -->  00:06:55.050
So let's have a look at the logs.
150

150

00:06:55.050  -->  00:06:55.883
Kubectl get,
151

151

00:06:56.960  -->  00:07:01.653
kubectl logs of this pod.
152

152

00:07:02.940  -->  00:07:04.183
Example app running.
153

153

00:07:05.090  -->  00:07:09.560
Let's have a look at service -o wide.
154

154

00:07:09.560  -->  00:07:11.613
It'll give us the full host name.
155

155

00:07:14.162  -->  00:07:17.370
This is the full host name that we can contact the app on.
156

156

00:07:17.370  -->  00:07:19.070
We will have to wait a little bit
157

157

00:07:19.070  -->  00:07:21.520
for the health checks to complete.
158

158

00:07:21.520  -->  00:07:24.350
Once the health check complete we see hello world!
159

159

00:07:24.350  -->  00:07:26.450
You are visitor number 45.
160

160

00:07:26.450  -->  00:07:27.940
So we also have the health checks running
161

161

00:07:27.940  -->  00:07:30.730
so this counter will increase.
162

162

00:07:30.730  -->  00:07:32.980
So we have our pods, we have three pods.
163

163

00:07:32.980  -->  00:07:35.130
Those three pods are connected to mariadb
164

164

00:07:35.130  -->  00:07:39.380
and do an inserts every time I hit this app.
165

165

00:07:39.380  -->  00:07:41.080
So this is all working.
166

166

00:07:41.080  -->  00:07:42.310
It's all very nicely working
167

167

00:07:42.310  -->  00:07:45.250
just by running helm install.
168

168

00:07:45.250  -->  00:07:48.373
So helm install installed mariadb and our app.
169

169

00:07:49.720  -->  00:07:51.250
But of course once you deploy an app
170

170

00:07:51.250  -->  00:07:53.350
you're gonna have upgrades, you're gonna have
171

171

00:07:53.350  -->  00:07:56.680
changes to your app and you want to deploy those changes.
172

172

00:07:56.680  -->  00:07:59.320
With helm you can do upgrades as well.
173

173

00:07:59.320  -->  00:08:01.600
And you can use helm upgrade for that.
174

174

00:08:01.600  -->  00:08:05.120
I have another version of this app.
175

175

00:08:05.120  -->  00:08:06.770
Let's have a look at values.yaml.
176

176

00:08:08.206  -->  00:08:09.800
I'm using tag v0.0.1,
177

177

00:08:09.800  -->  00:08:12.630
and I have tag 0.0.2.
178

178

00:08:12.630  -->  00:08:15.693
So let's upgrade, let's upgrade to 0.0.2.
179

179

00:08:17.520  -->  00:08:20.380
The command to do that I have in my README.md.
180

180

00:08:20.380  -->  00:08:25.380
There is still a bug open with this mariadb chart.
181

181

00:08:25.760  -->  00:08:28.810
If you do an upgrade and you have mariadb as a dependency
182

182

00:08:29.700  -->  00:08:31.420
and you use random passwords
183

183

00:08:31.420  -->  00:08:33.650
then it will create a new random password.
184

184

00:08:33.650  -->  00:08:36.000
So it's best that when you do an upgrade
185

185

00:08:36.000  -->  00:08:38.240
you need to specify the password
186

186

00:08:38.240  -->  00:08:40.373
or you just don't use random passwords.
187

187

00:08:41.630  -->  00:08:44.720
Random passwords are easy because they aren't as secret.
188

188

00:08:44.720  -->  00:08:46.420
But you can also define a secret yourself,
189

189

00:08:46.420  -->  00:08:48.833
put a password in there or use this set
190

190

00:08:48.833  -->  00:08:51.310
when you do the install,
191

191

00:08:51.310  -->  00:08:53.720
to make sure that the password doesn't change.
192

192

00:08:53.720  -->  00:08:55.370
I'm sure they will fix this in the future.
193

193

00:08:55.370  -->  00:08:57.863
But for now we just have to mask the password.
194

194

00:08:58.870  -->  00:09:01.270
So helm upgrade, I'm going to upgrade to v0.0.2.
195

195

00:09:03.308  -->  00:09:06.650
And the mariadb password for my app is I got it here.
196

196

00:09:08.800  -->  00:09:09.850
This is the password.
197

197

00:09:11.320  -->  00:09:13.693
The release is bumptious-fly,
198

198

00:09:14.690  -->  00:09:17.580
and the chart is in my current directory,
199

199

00:09:17.580  -->  00:09:18.823
so I will just use dot.
200

200

00:09:21.640  -->  00:09:24.363
So now it started to upgrade.
201

201

00:09:26.650  -->  00:09:30.180
One new pod is creating.
202

202

00:09:30.180  -->  00:09:33.200
Let's have a look, kubectl get pods.
203

203

00:09:33.200  -->  00:09:35.170
The new pod is running.
204

204

00:09:35.170  -->  00:09:36.670
It's not ready yet.
205

205

00:09:36.670  -->  00:09:37.843
This one is ready.
206

206

00:09:40.390  -->  00:09:42.400
So once the new pods are created
207

207

00:09:42.400  -->  00:09:44.113
it will terminate the old ones.
208

208

00:09:46.640  -->  00:09:49.703
You see now, it started terminating the old pods.
209

209

00:09:50.580  -->  00:09:53.360
Now we have three pods running.
210

210

00:09:53.360  -->  00:09:55.733
The new version and one old pod.
211

211

00:09:55.733  -->  00:09:58.963
So let's have a look using our curl command.
212

212

00:09:59.890  -->  00:10:02.810
Hello World v0.0.2 is now running.
213

213

00:10:02.810  -->  00:10:05.060
You are visitor number 179.
214

214

00:10:05.060  -->  00:10:08.100
So now we are running v0.0.2.
215

215

00:10:08.100  -->  00:10:09.430
But I don't really like this version,
216

216

00:10:09.430  -->  00:10:11.180
so I would like to rollback.
217

217

00:10:11.180  -->  00:10:13.533
So we can also rollback with helm.
218

218

00:10:13.533  -->  00:10:16.563
So helm rollback, let's use help.
219

219

00:10:17.460  -->  00:10:18.423
What does it say?
220

220

00:10:19.590  -->  00:10:24.030
First use helm history to know
221

221

00:10:24.030  -->  00:10:27.023
what versions we have released.
222

222

00:10:28.210  -->  00:10:29.453
We have two revisions.
223

223

00:10:30.400  -->  00:10:31.800
One doesn't exist anymore.
224

224

00:10:31.800  -->  00:10:33.930
One is deployed now.
225

225

00:10:33.930  -->  00:10:35.230
This is the chart version.
226

226

00:10:36.510  -->  00:10:40.540
Let's rollback to our previous version.
227

227

00:10:40.540  -->  00:10:44.633
So helm rollback bumptious-fly revision one.
228

228

00:10:47.320  -->  00:10:48.520
What's gonna happen now?
229

229

00:10:51.670  -->  00:10:53.120
It's gonna spin up a new pod,
230

230

00:10:54.150  -->  00:10:56.100
and the version of this pod will be
231

231

00:10:56.100  -->  00:10:57.450
the previous version again.
232

232

00:10:58.400  -->  00:11:01.570
So then we will switch to the previous version again.
233

233

00:11:01.570  -->  00:11:06.150
It will take some time for this pod to spin up again.
234

234

00:11:06.150  -->  00:11:10.103
Once this is spun up then you see the old ones terminating.
235

235

00:11:11.690  -->  00:11:13.610
Once all the old ones are terminated
236

236

00:11:13.610  -->  00:11:16.093
then we will be running on our old version again.
237

237

00:11:17.020  -->  00:11:18.600
All the old ones are gone.
238

238

00:11:18.600  -->  00:11:20.110
These are all new ones.
239

239

00:11:20.110  -->  00:11:21.063
Let's run curl.
240

240

00:11:22.440  -->  00:11:26.870
Hello World! My v0.0.2 is gone.
241

241

00:11:26.870  -->  00:11:29.450
You're visitor number 247.
242

242

00:11:29.450  -->  00:11:32.370
So the mariadb is still running,
243

243

00:11:32.370  -->  00:11:35.000
but my other pods have been changed
244

244

00:11:35.000  -->  00:11:36.883
back into the older version.
245

245

00:11:39.519  -->  00:11:40.602
So that's it.
246

246

00:11:41.463  -->  00:11:43.020
You can definitely see that helm provides you
247

247

00:11:43.020  -->  00:11:47.028
a very nice tool set to package and deploy your applications
248

248

00:11:47.028  -->  00:11:48.633
on kubernetes.
249

249

00:11:49.720  -->  00:11:50.870
I'll just clean up now.
250

250

00:11:52.000  -->  00:11:55.190
If I do a helm list I see my deployment
251

251

00:11:55.190  -->  00:11:58.110
and I'll just delete bumptious-fly.
252

252

00:11:58.110  -->  00:12:00.040
If you want to delete everything
253

253

00:12:00.040  -->  00:12:03.176
you can also add --purge and it will delete
254

254

00:12:03.176  -->  00:12:05.920
really everything and all the configuration.
255

255

00:12:05.920  -->  00:12:07.920
This will take some time.
256

256

00:12:07.920  -->  00:12:09.020
And now it is deleted.
257

257

00:12:10.060  -->  00:12:11.163
The pods are gone.
258

258

00:12:14.490  -->  00:12:18.020
But the data is still there because this mariadb
259

259

00:12:19.866  -->  00:12:23.160
uses stateful set and when a stateful set is deleted,
260

260

00:12:23.160  -->  00:12:27.640
then it will not delete the volumes as a safety mechanism.
261

261

00:12:27.640  -->  00:12:29.353
If you do helm list,
262

262

00:12:30.970  -->  00:12:33.320
it will not list anything anymore.
263

263

00:12:33.320  -->  00:12:37.060
If you do helm list all we see that we have,
264

264

00:12:37.060  -->  00:12:39.113
bumptious-fly in the deleted status.
265

265

00:12:39.950  -->  00:12:43.700
If we do a helm delete bumptious-fly --purge
266

266

00:12:43.700  -->  00:12:46.367
then this will also be gone done from here.
267

267

00:12:46.367  -->  00:12:48.480
And if you then do the helm list --all
268

268

00:12:48.480  -->  00:12:50.560
then it's completely gone.
269

269

00:12:50.560  -->  00:12:52.380
We might want to delete one of these volumes.
270

270

00:12:52.380  -->  00:12:53.730
You will only have one.
271

271

00:12:53.730  -->  00:12:57.769
I have more because I spun up autotests,
272

272

00:12:57.769  -->  00:12:59.700
but you will have this bumptious-fly here
273

273

00:12:59.700  -->  00:13:01.877
or whatever the name of your release is.
274

274

00:13:01.877  -->  00:13:04.670
And you might want to delete this one as well
275

275

00:13:04.670  -->  00:13:06.510
after you did the demo.
276

276

00:13:06.510  -->  00:13:08.613
So try out this demo, definitely,
277

277

00:13:08.613  -->  00:13:12.770
and if you have your old app you can also package it
278

278

00:13:12.770  -->  00:13:15.653
using helm and then deploy it just like I did here.
