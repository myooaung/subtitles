WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.110 --> 00:00:02.610
Currently, in the Edit section,

00:00:02.610 --> 00:00:06.735
we are simply outputting the tags from each one of these sections,

00:00:06.735 --> 00:00:09.765
but just like we did with the preview side,

00:00:09.765 --> 00:00:12.810
we're going to replace each one of these pieces of text or

00:00:12.810 --> 00:00:16.589
each one of these sections with a stand-alone components.

00:00:16.589 --> 00:00:20.460
This component is going to contain a text area which

00:00:20.460 --> 00:00:24.060
will contain this user input so they can edit the text,

00:00:24.060 --> 00:00:26.560
which will then display on the preview.

00:00:26.560 --> 00:00:29.420
We'll also place in a drop-down menu too,

00:00:29.420 --> 00:00:31.655
so the user can also edit this text.

00:00:31.655 --> 00:00:36.895
They can add different styles and also change the layout and positioning too.

00:00:36.895 --> 00:00:39.585
Back over to the sidebar,

00:00:39.585 --> 00:00:42.310
we have the text output for the left side.

00:00:42.310 --> 00:00:46.530
So we're going to create a text input for the edit screen,

00:00:49.400 --> 00:00:56.230
a template, then a div with the class of text input wrapper.

00:00:57.200 --> 00:01:03.810
Place in any text inside here and then we can import this into our Code Edit component.

00:01:03.810 --> 00:01:08.685
Down to the script, the text input.

00:01:08.685 --> 00:01:10.530
This in the same folder,

00:01:10.530 --> 00:01:13.680
so this will be a dot slash text input.

00:01:13.680 --> 00:01:16.810
Last in the components objects,

00:01:20.830 --> 00:01:25.590
replace our user input with this new component.

00:01:26.200 --> 00:01:30.015
It also needs the full section data,

00:01:30.015 --> 00:01:32.710
so this can be a prop.

00:01:33.200 --> 00:01:37.195
This now gives us some information to work with,

00:01:37.195 --> 00:01:39.735
placing these scripts section,

00:01:39.735 --> 00:01:43.670
the props of section,

00:01:43.670 --> 00:01:45.530
which is the type of object,

00:01:45.530 --> 00:01:53.470
and then replace our text with the text area, move these.

00:01:53.470 --> 00:01:58.775
Then set the default columns to be 50 and then four rows.

00:01:58.775 --> 00:02:01.970
Now, see this user input inside of his text area.

00:02:01.970 --> 00:02:04.765
We now need to place inside v-model,

00:02:04.765 --> 00:02:08.705
but remember we can't directly mutate props.

00:02:08.705 --> 00:02:12.085
Instead, we need to take a copy of this section.

00:02:12.085 --> 00:02:14.435
Then we can use this for our v-model.

00:02:14.435 --> 00:02:17.165
This we can pass in the setup,

00:02:17.165 --> 00:02:20.630
taking the props, and then a constant which is

00:02:20.630 --> 00:02:24.450
going to be a copy called the current section.

00:02:24.890 --> 00:02:30.345
Wrap this in a ref. We're are going to pass in the props dot.section.

00:02:30.345 --> 00:02:34.030
Import this ref from the View library,

00:02:37.000 --> 00:02:41.580
then return our current section back from set-up.

00:02:42.890 --> 00:02:46.640
This current section is now a copy of all props,

00:02:46.640 --> 00:02:49.490
which we can now use inside of v-model.

00:02:49.490 --> 00:02:53.365
The property on this section is the user input.

00:02:53.365 --> 00:02:57.140
We'll load the browser and we now have our free text areas,

00:02:57.140 --> 00:02:59.660
each one with the text inputs.

00:02:59.660 --> 00:03:02.555
Also, if you're wondering what this green circle is on the right,

00:03:02.555 --> 00:03:04.265
this is a Grammarly extension,

00:03:04.265 --> 00:03:07.420
which is available to help with any typing errors.

00:03:07.420 --> 00:03:11.510
Something to note here when we type into one of these text areas is,

00:03:11.510 --> 00:03:15.655
the current preview will also be updated automatically too.

00:03:15.655 --> 00:03:18.140
Now, I haven't admitted any custom events.

00:03:18.140 --> 00:03:21.095
We haven't created any functions to update this,

00:03:21.095 --> 00:03:24.620
but this comes back to the object reference we discussed earlier.

00:03:24.620 --> 00:03:29.810
We could stick with this and allow this to update automatically, but personally,

00:03:29.810 --> 00:03:32.420
I prefer to break the reference and do

00:03:32.420 --> 00:03:37.220
a manual update just so we'll have a little bit more control over the updates,

00:03:37.220 --> 00:03:39.454
and it makes it a little bit more predictable.

00:03:39.454 --> 00:03:40.940
To break this reference,

00:03:40.940 --> 00:03:43.130
what we're going to do is go down to

00:03:43.130 --> 00:03:47.290
the setup and rather than directly taken a copy just like this.

00:03:47.290 --> 00:03:48.935
We're going to cut this out,

00:03:48.935 --> 00:03:50.555
create a new object,

00:03:50.555 --> 00:03:53.065
and then spread these back in.

00:03:53.065 --> 00:03:55.800
We can test this out, refresh.

00:03:55.800 --> 00:03:58.140
Now, we're going to update these text areas.

00:03:58.140 --> 00:04:00.980
The previous section is not affected.

00:04:00.980 --> 00:04:04.030
Along with obtaining in this text from the text area,

00:04:04.030 --> 00:04:05.450
we also want to provide

00:04:05.450 --> 00:04:09.655
a drop-down menu when the user hovers over each one of these sections.

00:04:09.655 --> 00:04:12.020
This drop-down menu is going to contain all of

00:04:12.020 --> 00:04:14.180
the options to change things like the fonts,

00:04:14.180 --> 00:04:16.925
the colors, and also the positioning.

00:04:16.925 --> 00:04:20.840
This, create a div inside of the template,

00:04:20.840 --> 00:04:23.425
just below the text area.

00:04:23.425 --> 00:04:26.325
If you say class of menu,

00:04:26.325 --> 00:04:29.945
we need a way to control this menu popping up.

00:04:29.945 --> 00:04:35.225
We're going to add the V-show attributes and set this equal to Show Options.

00:04:35.225 --> 00:04:38.330
For now, just some texts like menu is completely fine.

00:04:38.330 --> 00:04:40.550
Then down to the setup function,

00:04:40.550 --> 00:04:45.305
we can now set up Show Options to be an initial value of false.

00:04:45.305 --> 00:04:47.060
This will also be reactive,

00:04:47.060 --> 00:04:51.620
so pass in the ref and the initial value of false.

00:04:53.090 --> 00:04:58.590
Then we need to return this from our function as this.

00:04:58.590 --> 00:05:00.755
We don't see our menu texts yet.

00:05:00.755 --> 00:05:05.615
We need a way to set this to be true when the mouse hovers over this section.

00:05:05.615 --> 00:05:09.990
For this, we have access to the mouse over event.

00:05:10.190 --> 00:05:13.610
When the mouse passes over this div section,

00:05:13.610 --> 00:05:17.845
we're going to set, show options to be equal to true.

00:05:17.845 --> 00:05:21.200
Then we also make use of the mouse out event,

00:05:21.200 --> 00:05:23.840
which is going to set the show options to be equal to

00:05:23.840 --> 00:05:27.895
false once the user moves the mouse away from this section.

00:05:27.895 --> 00:05:33.885
Therefore, this will then a close the menu like this and we can try this out.

00:05:33.885 --> 00:05:37.665
Over any of these sections is our menu,

00:05:37.665 --> 00:05:40.905
which will then disappear when we move away from the menu.

00:05:40.905 --> 00:05:45.539
Let's try this one. This now works for each one of our sections,

00:05:45.539 --> 00:05:47.280
and it is menu components,

00:05:47.280 --> 00:05:49.990
which we are going to be building next.
