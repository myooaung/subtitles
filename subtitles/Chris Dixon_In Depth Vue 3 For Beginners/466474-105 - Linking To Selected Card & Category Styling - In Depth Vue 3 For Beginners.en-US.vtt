WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.130
For this upcoming section,

00:00:02.130 --> 00:00:04.275
we will be pushing on with our project and

00:00:04.275 --> 00:00:08.805
reinforcing what we've learned so far about Vue and composition.

00:00:08.805 --> 00:00:13.500
Beginning with a little styling for the categories, currently,

00:00:13.500 --> 00:00:16.410
we have two files which need a grid style layout,

00:00:16.410 --> 00:00:18.900
and this is the category.vue.

00:00:18.900 --> 00:00:21.600
We have this class of grid wrapper,

00:00:21.600 --> 00:00:26.395
and this is going to list out all of our cards in a grid style layout.

00:00:26.395 --> 00:00:28.640
The same over in the AppHome,

00:00:28.640 --> 00:00:31.630
make use of the same class just here.

00:00:31.630 --> 00:00:37.285
The app.vue has a style sheet down at the bottom which doesn't have the scope attribute.

00:00:37.285 --> 00:00:40.430
So I'm going to add the styling for this grid inside here.

00:00:40.430 --> 00:00:45.565
Therefore, this will mean it will apply to all of the components which use this class.

00:00:45.565 --> 00:00:47.480
So let's add this in,

00:00:47.480 --> 00:00:50.765
and this is going to go inside of a media query.

00:00:50.765 --> 00:00:55.360
The grid style layout only applies when we get over 600 pixels.

00:00:55.360 --> 00:01:01.430
The first media query we're going to apply this to is the minimum width of 600 pixels.

00:01:01.430 --> 00:01:04.500
Grab the grid wrapper.

00:01:06.350 --> 00:01:10.120
First up is display to the grid,

00:01:10.370 --> 00:01:14.470
then the grid template columns.

00:01:16.330 --> 00:01:18.830
For this particular media query,

00:01:18.830 --> 00:01:21.605
we're going to place two cards side-by-side.

00:01:21.605 --> 00:01:24.300
I'm going to set this to be repeat.

00:01:24.890 --> 00:01:27.945
One needs to be repeated twice.

00:01:27.945 --> 00:01:30.425
Then if we pass in a one fractional unit,

00:01:30.425 --> 00:01:33.905
both of these columns will take up the same available width.

00:01:33.905 --> 00:01:40.080
Putting space in between these cards will also place in a grid gap of 10 pixels.

00:01:40.640 --> 00:01:45.380
Over to the browser, we now see the initial layout of our grid system.

00:01:45.380 --> 00:01:47.840
Also, if you click on any of these cards,

00:01:47.840 --> 00:01:51.200
we see the same applies to this component too.

00:01:51.200 --> 00:01:53.690
Next, we will have more available space.

00:01:53.690 --> 00:01:56.600
I'm going to add in a second media query.

00:01:56.600 --> 00:01:58.760
Let's copy this section,

00:01:58.760 --> 00:02:00.770
paste this in just below.

00:02:00.770 --> 00:02:04.780
For this, we'll make this 1,000 pixels.

00:02:04.780 --> 00:02:08.510
We already have the display type declared and also the grid gap.

00:02:08.510 --> 00:02:13.235
All we need to do inside here is the changes to be three columns wide.

00:02:13.235 --> 00:02:16.625
Then when we stretch this to be over 1,000 pixels,

00:02:16.625 --> 00:02:19.255
it then switches to be three columns.

00:02:19.255 --> 00:02:21.560
Next, back over to the homepage,

00:02:21.560 --> 00:02:29.130
we're going to set some more specific CSS for this particular component into the AppHome.

00:02:29.450 --> 00:02:32.985
Put the style section down at the bottom.

00:02:32.985 --> 00:02:37.005
This is just regular CSS.

00:02:37.005 --> 00:02:42.440
Each one of these items inside of our grid has the class of category item.

00:02:42.440 --> 00:02:45.530
We're just going to set a background gradients around

00:02:45.530 --> 00:02:50.605
each one and also add some padding to space out each one of these categories.

00:02:50.605 --> 00:02:54.000
Let's grab this, the category item.

00:02:55.300 --> 00:02:59.360
The background is going to have in a linear gradient,

00:02:59.360 --> 00:03:02.525
which will allow us to transition between two colors.

00:03:02.525 --> 00:03:08.650
The two colors, I'm going to pass in RGB values on the first one of 253,

00:03:08.650 --> 00:03:14.325
the green, 207, and also 207 for the blue too.

00:03:14.325 --> 00:03:21.620
Separated by a comma, the second RGB value is going to be red of 140,

00:03:21.620 --> 00:03:24.095
140 for green as well,

00:03:24.095 --> 00:03:27.750
and also 236 for the blue.

00:03:27.820 --> 00:03:31.205
This gives us the gradient from pink to purple,

00:03:31.205 --> 00:03:34.955
and also, the color is gone from the top to bottom.

00:03:34.955 --> 00:03:41.705
I'm just going to offset this by placing in a angle as the first parameter of 30 degrees.

00:03:41.705 --> 00:03:44.990
This will just shift the color to eight different angle.

00:03:44.990 --> 00:03:47.810
Next, some padding to give this some spacing from

00:03:47.810 --> 00:03:52.710
the text of six rems on the top and bottom.

00:03:52.710 --> 00:03:57.655
We don't need anything on the left and right since we're using this grid layout.

00:03:57.655 --> 00:04:02.270
This category item is applying styles to each one of our list items.

00:04:02.270 --> 00:04:07.160
Now, to add some space into the very top of this unordered list,

00:04:07.160 --> 00:04:12.530
I going to now select the unordered list in place in one rem of margin at the very top.

00:04:12.530 --> 00:04:15.860
This will give us our space in from our top header.

00:04:15.860 --> 00:04:19.100
The text for each one of these is surrounded in this router link.

00:04:19.100 --> 00:04:23.695
Remember that the router link produces a HTML element.

00:04:23.695 --> 00:04:26.970
We can also use this in the CSS.

00:04:26.970 --> 00:04:34.360
All we're going to do here is to set the font size to be 20 pixels. It's a little larger.

00:04:34.360 --> 00:04:39.185
We can still click on these and go through to the individual category too.

00:04:39.185 --> 00:04:41.495
When we do go through to this page,

00:04:41.495 --> 00:04:45.025
this is controlled by the category.vue component.

00:04:45.025 --> 00:04:47.900
Currently, when we click on any of these individual cards,

00:04:47.900 --> 00:04:51.815
we just have the router link pointing to the forward slash.

00:04:51.815 --> 00:04:55.400
But what we want when we click on any of these cards rather than

00:04:55.400 --> 00:04:59.420
this to be taken it to the actual cards so we can edit.

00:04:59.420 --> 00:05:03.140
The edit screen for any of our cards is this create component,

00:05:03.140 --> 00:05:04.925
which we added early on.

00:05:04.925 --> 00:05:09.819
Now, let's go to our category and we can change this router link to be dynamic,

00:05:09.819 --> 00:05:14.235
close on the sidebar, and then place in it the backticks.

00:05:14.235 --> 00:05:16.935
We need to go to the /create,

00:05:16.935 --> 00:05:21.070
has now a variable which is going to be the card.id.

00:05:21.850 --> 00:05:25.640
Remember, we got this card variable from this loop just above.

00:05:25.640 --> 00:05:30.175
The first thing we want to see is the front page of this card.

00:05:30.175 --> 00:05:33.650
Then later on, we'll also add some links to this create page,

00:05:33.650 --> 00:05:36.005
which will allow us to switch between the front,

00:05:36.005 --> 00:05:38.240
the inside left, the inside right,

00:05:38.240 --> 00:05:40.450
and also the back too.

00:05:40.450 --> 00:05:42.800
Now, with this link in place,

00:05:42.800 --> 00:05:46.000
we need to go over to the routers index page,

00:05:46.000 --> 00:05:48.975
and also changes create component to.

00:05:48.975 --> 00:05:51.400
Rather than going to /create,

00:05:51.400 --> 00:05:53.300
we also want to grab our variables,

00:05:53.300 --> 00:05:57.260
which is the card id and also the current page.

00:05:57.260 --> 00:06:05.670
The first parameter is for our id and the second one is for the page. That's my result.

00:06:05.750 --> 00:06:09.405
Anniversary, this is the card with the id of one,

00:06:09.405 --> 00:06:11.640
but then taken to the front page.

00:06:11.640 --> 00:06:14.625
Let's try Halloween. This is card number 5.

00:06:14.625 --> 00:06:16.820
This is all working fine too.

00:06:16.820 --> 00:06:20.600
We will focus on this create vue in the next video.

00:06:20.600 --> 00:06:24.500
But for now, let's go back to this category section where we're going to finish

00:06:24.500 --> 00:06:28.955
this grid off by adding a preview image rather than the card name.

00:06:28.955 --> 00:06:31.780
Over in the assets folder,

00:06:31.780 --> 00:06:35.925
into the images, we have this card preview section.

00:06:35.925 --> 00:06:40.250
This has a image with a preview of the front page of each one of our cards.

00:06:40.250 --> 00:06:44.810
Also, each one has the title with the corresponding id for that particular card.

00:06:44.810 --> 00:06:51.010
All we need to do is to access the card id and then link it to this file path.

00:06:51.010 --> 00:06:53.660
Into the category section,

00:06:53.660 --> 00:06:56.375
rather than outputting this card name,

00:06:56.375 --> 00:06:59.700
we're going to pass in the image element,

00:07:00.260 --> 00:07:03.045
pass in v-bind to the source,

00:07:03.045 --> 00:07:04.710
and then inside of the backticks,

00:07:04.710 --> 00:07:07.290
we can add our dynamic URL.

00:07:07.290 --> 00:07:10.515
The ampersand is going to link to the source,

00:07:10.515 --> 00:07:13.035
into the assets folder,

00:07:13.035 --> 00:07:17.670
the images, the card previews.

00:07:17.670 --> 00:07:22.830
Each one of these card previews has a name which links to this card.id.

00:07:23.480 --> 00:07:27.490
Also passing in the file type too.

00:07:28.070 --> 00:07:32.675
Back over to the browser, we don't see any images display in.

00:07:32.675 --> 00:07:36.060
We have a spelling mistake here.

00:07:36.710 --> 00:07:41.705
Try again, and we still don't see any images for this display.

00:07:41.705 --> 00:07:47.330
Now, this happens when we use in a dynamic image just like we are here.

00:07:47.330 --> 00:07:51.275
We could place in a static image string with no variables,

00:07:51.275 --> 00:07:53.375
and this would work completely fine.

00:07:53.375 --> 00:07:56.915
By static, we mean if we don't have this colon and the binding,

00:07:56.915 --> 00:07:59.285
and we don't have any variables inside,

00:07:59.285 --> 00:08:04.320
we may just link to the 1.jpg with the backticks.

00:08:05.360 --> 00:08:08.195
This one works completely fine.

00:08:08.195 --> 00:08:11.735
This dynamic file path fails because behind the scenes,

00:08:11.735 --> 00:08:13.990
we use in what is called webpack.

00:08:13.990 --> 00:08:17.810
Webpack is used to bundle together all of our files and all of

00:08:17.810 --> 00:08:23.245
our assets from the source directory into one big JavaScript bundle.

00:08:23.245 --> 00:08:27.560
This is any bundle which is served to the browser when we visit our website.

00:08:27.560 --> 00:08:30.679
But the problem is when this file path is dynamic,

00:08:30.679 --> 00:08:35.600
webpack doesn't know the results of this variable are compiled time.

00:08:35.600 --> 00:08:37.160
At this compile stage,

00:08:37.160 --> 00:08:39.440
it knows there is a variable inside here,

00:08:39.440 --> 00:08:43.360
which may change, but it doesn't know the exact value just yet.

00:08:43.360 --> 00:08:45.640
There is a couple of ways we can fix this.

00:08:45.640 --> 00:08:50.480
We could move the images to the public folder and this will work completely fine.

00:08:50.480 --> 00:08:53.540
Or instead, we could allow webpack and tell it we need to

00:08:53.540 --> 00:08:57.880
pass this dynamic string by roughness in require.

00:08:57.880 --> 00:09:04.385
What we need to do for this is to put out this full string in the backticks as require.

00:09:04.385 --> 00:09:07.370
Then inside the brackets, we paste in our string.

00:09:07.370 --> 00:09:09.650
We see straight away over in the browser,

00:09:09.650 --> 00:09:14.280
it would now have our images on the screen. Of course, they are very big.

00:09:14.280 --> 00:09:19.310
So what we're going to do is go over to the app.vue and also target any images

00:09:19.310 --> 00:09:25.560
which are on our application and set the maximum width be 100 percent.

00:09:26.210 --> 00:09:32.550
Save this. It now leaves a nice grid layout for our cards.
