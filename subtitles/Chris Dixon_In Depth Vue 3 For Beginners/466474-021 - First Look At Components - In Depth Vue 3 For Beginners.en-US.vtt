WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.350 --> 00:00:04.980
The previous slides used the concept of single file components,

00:00:04.980 --> 00:00:11.069
it's a component who plays into a dedicated file to keep things more organized.

00:00:11.069 --> 00:00:14.220
To do this, we need a much more sophisticated setup

00:00:14.220 --> 00:00:16.720
which we'll look at in the next section.

00:00:16.720 --> 00:00:19.740
These components placed into its own file is

00:00:19.740 --> 00:00:22.785
probably the most commonly used type of components.

00:00:22.785 --> 00:00:25.770
But first, we're going to look at some different ways of

00:00:25.770 --> 00:00:29.520
writing this beginning with the global component.

00:00:29.520 --> 00:00:33.510
The first thing I'm going to do inside of our script.js is to

00:00:33.510 --> 00:00:38.025
store our view instance inside of a constant called app.

00:00:38.025 --> 00:00:42.255
Now, we have this application stored into this app reference.

00:00:42.255 --> 00:00:46.260
We're then going to use this call mount, so app.mount.

00:00:46.260 --> 00:00:48.980
We'll then remount this to the body section.

00:00:48.980 --> 00:00:50.630
If we refresh the browser,

00:00:50.630 --> 00:00:54.180
we don't see any changes inside here, but now,

00:00:54.180 --> 00:00:56.545
having this separate reference to our application

00:00:56.545 --> 00:01:00.360
means we can now call a method called component.

00:01:00.590 --> 00:01:04.849
This app.component takes in two arguments.

00:01:04.849 --> 00:01:08.165
The first one is the name we want to give to this component,

00:01:08.165 --> 00:01:10.765
and mine is going to be app-header.

00:01:10.765 --> 00:01:13.670
When using the CDN link just like we are,

00:01:13.670 --> 00:01:16.970
the name of this component should be all lowercase,

00:01:16.970 --> 00:01:18.470
more than one word,

00:01:18.470 --> 00:01:20.690
and separated by dashes.

00:01:20.690 --> 00:01:24.710
This is because we will insert this back into our HTML just

00:01:24.710 --> 00:01:29.155
like a regular element so we don't want any naming clashes.

00:01:29.155 --> 00:01:32.750
This naming convention also means that we don't clash with

00:01:32.750 --> 00:01:36.185
any regular HTML elements such as the header,

00:01:36.185 --> 00:01:40.205
the nav, also a regular hv for example.

00:01:40.205 --> 00:01:45.940
After this, the second argument separated by a comma is going to be an object.

00:01:45.940 --> 00:01:49.410
This object is like a mini application.

00:01:49.410 --> 00:01:50.850
It can have its own data,

00:01:50.850 --> 00:01:52.710
its own methods, and basically,

00:01:52.710 --> 00:01:56.795
anything which we have just above in our regular view instance.

00:01:56.795 --> 00:02:00.575
Alongside this, it also has a template which is a string,

00:02:00.575 --> 00:02:05.210
and this is going to be the HTML which we want to output inside of the browser.

00:02:05.210 --> 00:02:10.045
This can be any HTML code such as a level one heading.

00:02:10.045 --> 00:02:13.320
Let's just add some text inside it here for now.

00:02:13.320 --> 00:02:17.280
Now, we can use

00:02:17.280 --> 00:02:22.820
this app-header inside of our index page just like a regular HTML element.

00:02:22.820 --> 00:02:26.145
Let's comment out the header section

00:02:26.145 --> 00:02:29.660
and then we can replace it with our app-header elements,

00:02:29.660 --> 00:02:34.775
save, and this is now output in place of our regular header.

00:02:34.775 --> 00:02:36.350
Now we know this is working,

00:02:36.350 --> 00:02:39.320
we can now grab our regular header section.

00:02:39.320 --> 00:02:43.745
We can uncomment this out and cut this out place,

00:02:43.745 --> 00:02:46.850
and then we can now place this as our template string.

00:02:46.850 --> 00:02:52.085
[inaudible] from all of these red underlines,

00:02:52.085 --> 00:02:55.040
but the text editor is highlighting a problem.

00:02:55.040 --> 00:03:00.125
This is because we are using quotations to surround all of this HTML.

00:03:00.125 --> 00:03:04.250
This work perfectly fine when we use a single line of HTML,

00:03:04.250 --> 00:03:06.310
just like our level 1 heading.

00:03:06.310 --> 00:03:10.070
However when we have multiple lines of HTML just like this,

00:03:10.070 --> 00:03:14.580
we need to replace these quotations with the bacticks.

00:03:15.760 --> 00:03:19.985
When we use the view CLI to setup our project soon,

00:03:19.985 --> 00:03:24.940
this will give us a cleaner way of writing our HTML code inside of these components.

00:03:24.940 --> 00:03:27.210
But for now mover to the browser.

00:03:27.210 --> 00:03:32.494
This now shows up inside of a header section but we are missing the variables.

00:03:32.494 --> 00:03:35.600
We no longer see things such as our dynamic sections,

00:03:35.600 --> 00:03:38.875
which is the name, and also the link just below.

00:03:38.875 --> 00:03:44.765
For this to work, we can also set up the data section which it needs for this template.

00:03:44.765 --> 00:03:48.550
So scroll up to the data section which we've been using.

00:03:48.550 --> 00:03:53.150
We need the name and also the link so I'm going to cut these out of

00:03:53.150 --> 00:03:57.710
the view instance and then place these back into our component.

00:03:57.710 --> 00:04:00.160
We set up the data just like we did above.

00:04:00.160 --> 00:04:02.540
This is a function which is going to

00:04:02.540 --> 00:04:06.950
return an object and we can paste in our name and our links.

00:04:06.950 --> 00:04:11.695
Don't forget to separate the data section and the template with a comma.

00:04:11.695 --> 00:04:18.300
This now places our data back into the browser but this time, from a component.
