WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.950 --> 00:00:05.355
At the moment, our application has hard-coded events.

00:00:05.355 --> 00:00:07.830
But soon, we're going to allow the user to both add

00:00:07.830 --> 00:00:11.060
new events and also edit any existing ones too.

00:00:11.060 --> 00:00:13.890
You will be doing this by adding a form,

00:00:13.890 --> 00:00:16.005
this form could be a component,

00:00:16.005 --> 00:00:18.950
and it could even be placed onto its own page.

00:00:18.950 --> 00:00:23.900
A common scenario though is to place the form into a pop up model.

00:00:23.900 --> 00:00:26.630
This means the user stays on the same page,

00:00:26.630 --> 00:00:29.285
but the form will pop up over the content.

00:00:29.285 --> 00:00:31.505
Depending on the HTML structure,

00:00:31.505 --> 00:00:34.840
modals can be tricky to position using CSS,

00:00:34.840 --> 00:00:37.200
any teleport could help with this.

00:00:37.200 --> 00:00:40.575
As an example inside of the App.vue file,

00:00:40.575 --> 00:00:42.750
by the very top of our template,

00:00:42.750 --> 00:00:46.630
imagine we had a form element just like this,

00:00:46.730 --> 00:00:50.350
in this I will just say add new events.

00:00:50.350 --> 00:00:53.180
To create this as a pop up modal,

00:00:53.180 --> 00:00:55.625
we wouldn't need to apply some CSS.

00:00:55.625 --> 00:00:59.150
Currently this form is just start at the top of the components,

00:00:59.150 --> 00:01:03.595
but generally we want a modal pop up over the rest of the content.

00:01:03.595 --> 00:01:09.409
Often we do this by setting the CSS position property to be equal to absolute,

00:01:09.409 --> 00:01:12.005
any element which is set to be absolute,

00:01:12.005 --> 00:01:15.860
will look for a parent element which is set to be relative,

00:01:15.860 --> 00:01:19.385
and then use this relative container to reference from.

00:01:19.385 --> 00:01:22.100
At the moment, this is not a huge problem since

00:01:22.100 --> 00:01:25.145
here we are inside the top level components.

00:01:25.145 --> 00:01:28.340
Well, if this form was deeply nested inside of lots

00:01:28.340 --> 00:01:31.370
of different components and lots of different wrappers,

00:01:31.370 --> 00:01:34.670
it will become a more complex CSS task.

00:01:34.670 --> 00:01:39.080
The positioning modal exactly where we want it, to help with this,

00:01:39.080 --> 00:01:42.590
the teleport feature will allow us to still keep this code

00:01:42.590 --> 00:01:46.750
inside of the template for actually render it elsewhere.

00:01:46.750 --> 00:01:49.505
Doing this provides some advantages,

00:01:49.505 --> 00:01:53.510
such as we can keep this forms HTML structure inside of

00:01:53.510 --> 00:01:57.890
the same components as the form data or its logic.

00:01:57.890 --> 00:02:03.380
It can still access anything from our view sections such as our data and our methods,

00:02:03.380 --> 00:02:06.454
but instead of being rendered inside of this component,

00:02:06.454 --> 00:02:13.345
its output in a different part can be anywhere such as another components,

00:02:13.345 --> 00:02:16.580
fulfill a modal, it may be an advantage to place this

00:02:16.580 --> 00:02:20.375
inside of the root index or HTML file.

00:02:20.375 --> 00:02:22.715
If we go into the public folder,

00:02:22.715 --> 00:02:24.890
this is contained inside of here.

00:02:24.890 --> 00:02:28.189
This index page has our main app container,

00:02:28.189 --> 00:02:31.190
this is where the rest of your application is injected.

00:02:31.190 --> 00:02:32.450
As we just mentioned,

00:02:32.450 --> 00:02:36.680
we can teleport our form to any of these nested components.

00:02:36.680 --> 00:02:40.190
Or alternatively, we could add this to the body section

00:02:40.190 --> 00:02:44.300
or can even teleport is way different elements altogether.

00:02:44.300 --> 00:02:49.055
I've had a different div with the id of modal.

00:02:49.055 --> 00:02:53.930
We could teleport this form code and places inside of this div section,

00:02:53.930 --> 00:02:58.765
meaning is completely independent from the rest of the nested structure.

00:02:58.765 --> 00:03:02.300
This would result in our form or any other section which we wanted

00:03:02.300 --> 00:03:07.255
the teleport having a left wrappers and also surrounding code to deal with,

00:03:07.255 --> 00:03:10.475
and also another benefit which is related to forms.

00:03:10.475 --> 00:03:12.995
If you know what events propagation is,

00:03:12.995 --> 00:03:17.860
you should also remove this too since it now has no elementary pass through.

00:03:17.860 --> 00:03:20.030
We now have this element to mount too,

00:03:20.030 --> 00:03:23.365
but how do we actually add this to the section?

00:03:23.365 --> 00:03:26.945
Well, to do this, we're going to cut out our form section.

00:03:26.945 --> 00:03:30.930
Then nest this inside of the teleport tags.

00:03:34.870 --> 00:03:37.400
In the opening teleport tag,

00:03:37.400 --> 00:03:41.900
we can then pass in a two attributes which is going to link to our elements.

00:03:41.900 --> 00:03:47.450
This is just like when we use a query selector or when we select an element with CSS,

00:03:47.450 --> 00:03:49.820
meaning we use the harsh for an id,

00:03:49.820 --> 00:03:51.970
and these are the id of modal.

00:03:51.970 --> 00:03:54.420
Save this and now over the browser,

00:03:54.420 --> 00:03:57.680
remember from before we added the teleport at the form,

00:03:57.680 --> 00:04:00.430
was appearing at the very top of the browser.

00:04:00.430 --> 00:04:03.365
Now if we refresh and scroll down to the very bottom,

00:04:03.365 --> 00:04:06.305
this form is now placed at the bottom of our project,

00:04:06.305 --> 00:04:08.720
meaning our teleport is taking effect.

00:04:08.720 --> 00:04:11.150
This is going to be ultimately a pop up form,

00:04:11.150 --> 00:04:13.115
so we now need a data property.

00:04:13.115 --> 00:04:17.670
We can toggle this on and off over to the data section,

00:04:17.670 --> 00:04:19.370
says obey data property,

00:04:19.370 --> 00:04:23.460
which is going to be a Boolean value called ShowForm.

00:04:25.210 --> 00:04:28.975
This will also need a button up in our template,

00:04:28.975 --> 00:04:32.025
and we can add this inside of our options wrapper,

00:04:32.025 --> 00:04:36.035
so just after the first button we'll add a second button,

00:04:36.035 --> 00:04:39.815
but our CSS, we can add the class of addNew.

00:04:39.815 --> 00:04:43.770
This is also going to listen out for a click.

00:04:43.900 --> 00:04:47.360
Just like above when we toggled the data property,

00:04:47.360 --> 00:04:50.609
we'll do exactly the same for ShowForm,

00:04:53.360 --> 00:04:57.260
and between the bottom, we'll also add a HTML entity,

00:04:57.260 --> 00:04:58.985
which will be the plus icon.

00:04:58.985 --> 00:05:01.295
The plus symbol is made up with the ampersands,

00:05:01.295 --> 00:05:05.200
the hash 43, and a semicolon.

00:05:05.200 --> 00:05:08.750
Then finally, we'll show and hide this form based on if

00:05:08.750 --> 00:05:12.740
this ShowForm data property is said to be true or false.

00:05:12.740 --> 00:05:15.810
We can do this using v-if.

00:05:16.220 --> 00:05:20.105
Save this, and now we can test this out over in the browser.

00:05:20.105 --> 00:05:23.450
You have the plus icon, click on this,

00:05:23.450 --> 00:05:25.325
see add new events,

00:05:25.325 --> 00:05:29.495
click on this again, and this has now been removed.

00:05:29.495 --> 00:05:34.385
This effect will also be more clear if we open up the browser developer tools,

00:05:34.385 --> 00:05:36.520
open up the body section.

00:05:36.520 --> 00:05:39.470
Now, inside here we can see the div with the id of

00:05:39.470 --> 00:05:42.470
app and also the div with the id of modal.

00:05:42.470 --> 00:05:46.250
These were the two sections which we have inside of our index page.

00:05:46.250 --> 00:05:49.345
Now, if we open up the modal,

00:05:49.345 --> 00:05:52.515
we see form nested inside.

00:05:52.515 --> 00:05:56.075
However, if we toggle list by clicking on a button,

00:05:56.075 --> 00:05:59.995
this now reacts to our true or false state.

00:05:59.995 --> 00:06:05.885
It is also lots of other uses too for teleport such as display messages to the user,

00:06:05.885 --> 00:06:10.355
tooltips, or just generally placing contents into other locations,

00:06:10.355 --> 00:06:13.510
so we're not restricted by our current component.

00:06:13.510 --> 00:06:15.050
In the upcoming section,

00:06:15.050 --> 00:06:21.300
we'll make use of this form which we just added to both edits and also adds new events.
