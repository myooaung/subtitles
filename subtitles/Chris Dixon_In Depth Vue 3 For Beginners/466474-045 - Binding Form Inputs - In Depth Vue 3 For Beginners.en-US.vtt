WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.710 --> 00:00:04.335
We do have more custom events to emit too,

00:00:04.335 --> 00:00:06.960
such as adding new entries to our array,

00:00:06.960 --> 00:00:11.115
editing existing events, and also removing them too.

00:00:11.115 --> 00:00:14.130
Before we can add and edit our events though,

00:00:14.130 --> 00:00:19.545
we need a way to capture what the user types in to all of these form fields.

00:00:19.545 --> 00:00:24.555
A view provides us with a directive for this called the v-model.

00:00:24.555 --> 00:00:27.465
This means we can setup a data property

00:00:27.465 --> 00:00:30.765
which is going to hold all the values which the user types in,

00:00:30.765 --> 00:00:32.805
such as this name.

00:00:32.805 --> 00:00:40.035
To do this, we'll go to AddUpdate form and then into our script section.

00:00:40.035 --> 00:00:42.890
We need a data property which is going to hold

00:00:42.890 --> 00:00:46.320
all of these values which the user types in.

00:00:46.600 --> 00:00:51.815
First, let's start with the name which we can initially set to an empty string.

00:00:51.815 --> 00:00:55.160
To see this in action, we can also output this name,

00:00:55.160 --> 00:00:57.960
loop inside of the template.

00:00:59.500 --> 00:01:03.080
Now to grab the value which has been added into

00:01:03.080 --> 00:01:06.685
our name input and store this inside of our data property,

00:01:06.685 --> 00:01:09.305
we're going to add the directive which we just mentioned,

00:01:09.305 --> 00:01:14.855
which is v-model and then we assign this to our name and data property.

00:01:14.855 --> 00:01:20.840
We can now give this a go if we open up the form and type in anything inside here.

00:01:20.840 --> 00:01:22.820
As we type inside of this field,

00:01:22.820 --> 00:01:26.215
we can see this value is updated in our template.

00:01:26.215 --> 00:01:31.280
The good thing about v-model is that it also sets up two-way data binding.

00:01:31.280 --> 00:01:34.030
This means it not only does the input update

00:01:34.030 --> 00:01:38.480
our data property but it also work the other way round too.

00:01:38.480 --> 00:01:42.350
It adds to our name section instead of passing in an empty string.

00:01:42.350 --> 00:01:45.410
If this had an initial value just like this,

00:01:45.410 --> 00:01:48.410
we can then save this and over to the browser.

00:01:48.410 --> 00:01:52.220
Now in our form, this now accepts the initial value which is

00:01:52.220 --> 00:01:56.780
passed from our data property and this can also be updated too.

00:01:56.780 --> 00:01:59.870
This idea will soon become more useful when we also

00:01:59.870 --> 00:02:02.870
use this form to edit the existing events.

00:02:02.870 --> 00:02:08.330
It can take any current event data and then the user can update using this form.

00:02:08.330 --> 00:02:10.640
Also when we're using regular HTML,

00:02:10.640 --> 00:02:14.330
we some some different ways of setting the initial values.

00:02:14.330 --> 00:02:19.355
For example, if we go to the detail section for our text input,

00:02:19.355 --> 00:02:22.340
we could set the initial value to be anything which you pass

00:02:22.340 --> 00:02:26.820
in and we can see this just here.

00:02:26.820 --> 00:02:32.090
This is a way of setting the initial value with text-based inputs or check boxes,

00:02:32.090 --> 00:02:36.895
we have the checked attributes and we can use selected for select inputs.

00:02:36.895 --> 00:02:39.475
However, when using Vue.js,

00:02:39.475 --> 00:02:42.860
all of these initial values will be ignored and we should

00:02:42.860 --> 00:02:47.585
instead use v-model for the initial value if we want to provide one.

00:02:47.585 --> 00:02:51.545
For now though, let's concentrate on adding new events.

00:02:51.545 --> 00:02:56.290
For this, we need to set up an event object in place of our name.

00:02:56.290 --> 00:02:58.970
Rather than setting all of these individually,

00:02:58.970 --> 00:03:02.705
we're going to group these into an event object,

00:03:02.705 --> 00:03:06.670
this can also be replaced inside of our output.

00:03:06.670 --> 00:03:10.780
Also our v-model is now going to be the event.name.

00:03:11.450 --> 00:03:16.325
Let's also copy this and we can add this in each one of our inputs.

00:03:16.325 --> 00:03:22.485
The input for our details will be event.details,

00:03:22.485 --> 00:03:29.385
the date, and then also the background too.

00:03:29.385 --> 00:03:35.950
This is added inside of the select wrapper and this one is event.background.

00:03:35.950 --> 00:03:41.420
Let's see this now, we should see an object as we type into each one of our fields.

00:03:41.420 --> 00:03:47.190
The name, the details, the date,

00:03:47.210 --> 00:03:51.545
and also the background-color will update our event object,

00:03:51.545 --> 00:03:56.550
which leaves us with all of the information we need to create a new event.
