WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.260 --> 00:00:03.630
The first step towards deploying our application to

00:00:03.630 --> 00:00:06.765
the web is to build our project for our production.

00:00:06.765 --> 00:00:10.755
We can create this bundle for production by using the build command,

00:00:10.755 --> 00:00:15.840
which you can see if we go to the package.json, inside the sidebar.

00:00:15.840 --> 00:00:17.910
Open this up, and so far,

00:00:17.910 --> 00:00:21.060
to run our project, we've been running NPM run served,

00:00:21.060 --> 00:00:23.580
which will start with our development server,

00:00:23.580 --> 00:00:27.439
and it will also give us things such as error messages during development,

00:00:27.439 --> 00:00:30.700
but we don't want to see things like this during production.

00:00:30.700 --> 00:00:35.660
Instead, what we want to do is to build a production ready version of our application,

00:00:35.660 --> 00:00:37.825
which is a JavaScript bundle.

00:00:37.825 --> 00:00:40.660
We can do this with the command just below,

00:00:40.660 --> 00:00:42.120
which is build, and we,

00:00:42.120 --> 00:00:44.535
again, run this from the Terminal.

00:00:44.535 --> 00:00:47.460
What we need to do is to press "Control" and

00:00:47.460 --> 00:00:50.400
"C" to close down the Terminal, and this time,

00:00:50.400 --> 00:00:54.950
MPM run build, and this will start off building

00:00:54.950 --> 00:01:00.350
our project and all of the files will be placed inside of a disk folder.

00:01:00.350 --> 00:01:03.825
We'll see this in just a second when this finishes.

00:01:03.825 --> 00:01:07.525
We can now say this about the top of our sidebar.

00:01:07.525 --> 00:01:12.070
This disc folder contains a production ready version of our app,

00:01:12.070 --> 00:01:13.900
containing all of our CSS,

00:01:13.900 --> 00:01:17.665
our images, and also our JavaScript bundles too.

00:01:17.665 --> 00:01:20.665
For JavaScript, we open this up,

00:01:20.665 --> 00:01:23.650
contains our bundle which we've talked about previously,

00:01:23.650 --> 00:01:26.665
or multiple bundles if we're using lazy loading,

00:01:26.665 --> 00:01:28.255
just as we are here.

00:01:28.255 --> 00:01:31.974
So we'll see things like our admin bundles, our app bundles,

00:01:31.974 --> 00:01:36.185
our app home, our card groups which we setup for the chunk groups.

00:01:36.185 --> 00:01:38.070
We see the not found page,

00:01:38.070 --> 00:01:40.720
and these are all lead JavaScript bundle files which could be

00:01:40.720 --> 00:01:44.365
downloaded individually or together from the browser.

00:01:44.365 --> 00:01:48.180
These files are also minified and optimized for production,

00:01:48.180 --> 00:01:49.820
and we also remove things such as

00:01:49.820 --> 00:01:53.885
the error messages and any warnings which we see during development.

00:01:53.885 --> 00:01:59.890
We can now take this disk folder and use this to deploy to a hosting service.

00:01:59.890 --> 00:02:04.670
The hosting service I'm going to show you is going to be over at netlify.com.

00:02:04.670 --> 00:02:08.000
There are lot of great hosting providers out there,

00:02:08.000 --> 00:02:11.410
but this is really popular and an easy one to get started with,

00:02:11.410 --> 00:02:14.260
and there's also a generous free version too.

00:02:14.260 --> 00:02:16.125
To make use of this hosting,

00:02:16.125 --> 00:02:21.295
I'm going to open up the terminal and make use of the Netlify CLI.

00:02:21.295 --> 00:02:24.290
If you've not used the Netlify CLI in the past,

00:02:24.290 --> 00:02:26.195
we need to install this globally.

00:02:26.195 --> 00:02:30.045
We do this with MPM, install.

00:02:30.045 --> 00:02:32.685
This is the Netlify_CLI,

00:02:32.685 --> 00:02:37.725
and then we need to use the -g flag to install this globally.

00:02:37.725 --> 00:02:39.440
I already have this installed,

00:02:39.440 --> 00:02:41.390
so I'm not going to hit Enter,

00:02:41.390 --> 00:02:43.085
and if you do see any permissions,

00:02:43.085 --> 00:02:44.900
errors, where a setting this off,

00:02:44.900 --> 00:02:48.380
you may also need to either fix these permissions or use

00:02:48.380 --> 00:02:52.870
the pseudoprefix to install this as the administrator.

00:02:52.870 --> 00:02:55.565
Once we have access to this, when installed,

00:02:55.565 --> 00:02:58.280
we can then use various Netlify commands,

00:02:58.280 --> 00:03:01.900
and the one which we want to use is the deploy command.

00:03:01.900 --> 00:03:05.000
Make sure you're inside of the project folder,

00:03:05.000 --> 00:03:08.900
hit "Enter," and if this is your first time using Netlify,

00:03:08.900 --> 00:03:14.350
you may also need to log in or create a new account if you don't already have one.

00:03:14.350 --> 00:03:17.470
Once you've signed up and verify your e-mail,

00:03:17.470 --> 00:03:20.660
you will then be taken to the account area in the browser,

00:03:20.660 --> 00:03:23.045
where you can also create a new project.

00:03:23.045 --> 00:03:25.370
Don't do this in the browser since we're going to be

00:03:25.370 --> 00:03:28.025
doing this right here inside the Terminal.

00:03:28.025 --> 00:03:33.875
You may also be asked to authorize in Netlify CLI on your very first use too.

00:03:33.875 --> 00:03:37.715
I'm already logged in since I've used this many times in the past.

00:03:37.715 --> 00:03:39.440
So back over to this Terminal,

00:03:39.440 --> 00:03:43.250
we need to answer a few simple questions to get started.

00:03:43.250 --> 00:03:45.960
First of all, we don't already have a new site,

00:03:45.960 --> 00:03:49.265
so we're going to create one inside of Netlify.

00:03:49.265 --> 00:03:51.990
I already have my team names setup in Netlify,

00:03:51.990 --> 00:03:53.510
so I'll hit "Enter."

00:03:53.510 --> 00:03:57.080
We can also add in a site name if we want. This is optional.

00:03:57.080 --> 00:04:01.900
We can also just hit "Enter" and Netlify will generate one for us.

00:04:01.900 --> 00:04:03.885
Next, the public directory,

00:04:03.885 --> 00:04:06.050
and this is the location inside of

00:04:06.050 --> 00:04:10.345
our project where our newly built site is going to be stored.

00:04:10.345 --> 00:04:13.565
We're just seeing ours is stored inside of the disk folder.

00:04:13.565 --> 00:04:19.000
So I'll hit "Enter," and this will allow a deploy a draft website.

00:04:19.000 --> 00:04:22.410
Here, if we just stretch this a little bit wider,

00:04:22.410 --> 00:04:25.010
we have a website, draft URL,

00:04:25.010 --> 00:04:27.950
open this draft URL up inside the browser,

00:04:27.950 --> 00:04:31.760
and then we see a live URL which displays our website.

00:04:31.760 --> 00:04:35.160
We can click around and check this all works.

00:04:35.260 --> 00:04:38.470
This all looks fine so far. We see our card.

00:04:38.470 --> 00:04:44.005
We can also edit and we see all the various pages and categories too.

00:04:44.005 --> 00:04:47.765
However, though, on the end of our main URL,

00:04:47.765 --> 00:04:50.375
let's try going into the admin.

00:04:50.375 --> 00:04:53.630
Well, we see page not found, and also,

00:04:53.630 --> 00:04:56.905
if we go to an unrecognized URL,

00:04:56.905 --> 00:04:58.710
we see the same message.

00:04:58.710 --> 00:05:02.965
The error is because we built a single-page application,

00:05:02.965 --> 00:05:05.000
meaning when we visit this application,

00:05:05.000 --> 00:05:07.310
we'll get a single JavaScript bundle,

00:05:07.310 --> 00:05:09.080
which we already know about.

00:05:09.080 --> 00:05:14.480
We then navigate through our applications pages on the frontend using the router.

00:05:14.480 --> 00:05:17.010
When we type in /admin or in fact,

00:05:17.010 --> 00:05:19.565
forward slash anything ourselves manually,

00:05:19.565 --> 00:05:24.550
we're then making a request to the server and expecting this page to be available.

00:05:24.550 --> 00:05:25.970
However, though, as we know,

00:05:25.970 --> 00:05:27.589
we've got a single-page application,

00:05:27.589 --> 00:05:30.920
we don't have multiple pages to request from the server.

00:05:30.920 --> 00:05:33.275
Instead, when we use things like the router link,

00:05:33.275 --> 00:05:36.830
this will intercept the section just here and then find

00:05:36.830 --> 00:05:41.095
the exact part of the JavaScript we need to display inside the browser.

00:05:41.095 --> 00:05:45.170
The solution for this when using single-page applications is to ignore

00:05:45.170 --> 00:05:50.890
any additional page requests and always return back our main homepage.

00:05:50.890 --> 00:05:53.750
Then on the frontend, our router can then take

00:05:53.750 --> 00:05:56.930
care of any pages which need to be displayed.

00:05:56.930 --> 00:06:00.890
Do this and only serve up this homepage on any request.

00:06:00.890 --> 00:06:02.630
This is pretty simple to do.

00:06:02.630 --> 00:06:05.840
Head into the newly created dist folder,

00:06:05.840 --> 00:06:08.270
and inside of the root of our disk folder,

00:06:08.270 --> 00:06:13.320
create a new file, which is called _redirects.

00:06:14.170 --> 00:06:18.995
The syntax to only return our homepage looks like this.

00:06:18.995 --> 00:06:25.645
It's /* /index.html, and then 200.

00:06:25.645 --> 00:06:29.660
This tells the web server regardless of what page we're trying to request,

00:06:29.660 --> 00:06:33.515
to only ever return back home main index.html,

00:06:33.515 --> 00:06:36.650
and also the service status code of 200,

00:06:36.650 --> 00:06:38.995
which means everything is okay.

00:06:38.995 --> 00:06:42.410
Always returning this okay message means we do need to handle

00:06:42.410 --> 00:06:47.290
any errors on the frontend and we're doing this with our not found component.

00:06:47.290 --> 00:06:51.290
Give this file a save and we can redeploy your application,

00:06:51.290 --> 00:06:57.790
which we're going to clear the Terminal and run netlify deploy for a second time.

00:06:57.850 --> 00:07:02.190
The published directory is still dist.

00:07:02.590 --> 00:07:05.610
Then call the draft,

00:07:05.960 --> 00:07:09.395
and we see that all the pages is still working.

00:07:09.395 --> 00:07:11.600
If we try to go to forward slash,

00:07:11.600 --> 00:07:14.185
then any additional page requests.

00:07:14.185 --> 00:07:18.035
Netlify is then responding back with our main index page.

00:07:18.035 --> 00:07:21.900
Then the vue router recognizes we have the admin component to load up,

00:07:21.900 --> 00:07:24.685
and this is why we see the admin on the screen.

00:07:24.685 --> 00:07:27.680
Let's try the 404 page with

00:07:27.680 --> 00:07:32.445
an unrecognized route and we'll see page not found. Okay, good.

00:07:32.445 --> 00:07:34.970
Once we're happy that everything is working,

00:07:34.970 --> 00:07:39.865
we can now get rid of this draft URL and generate a live production version.

00:07:39.865 --> 00:07:41.720
The way we do this is, once again,

00:07:41.720 --> 00:07:43.400
to run Netlify deploy,

00:07:43.400 --> 00:07:46.580
but this time --prod to signal that.

00:07:46.580 --> 00:07:49.760
We're happy with everything we see and we want to finally push

00:07:49.760 --> 00:07:54.525
this to production. There we go.

00:07:54.525 --> 00:07:56.235
Our deploy is now live,

00:07:56.235 --> 00:07:59.645
and we see our website URL rather than the draft.

00:07:59.645 --> 00:08:04.465
Open this up. There's our finished version.

00:08:04.465 --> 00:08:09.750
Let's just test our unrecognized routes once more. There we go.

00:08:09.750 --> 00:08:12.585
If we also go into our Netlify account,

00:08:12.585 --> 00:08:16.560
login if you need to, we now see our sites just here.

00:08:16.560 --> 00:08:22.625
Click on this, and this is the same URL which we've just seen inside the browser.

00:08:22.625 --> 00:08:27.530
This is a live link and it will be available for anybody to see on the web.

00:08:27.530 --> 00:08:30.420
We can also access our domain settings too.

00:08:30.420 --> 00:08:34.190
If you want a custom name in the options,

00:08:34.190 --> 00:08:39.134
we can edit the name, and you can also change this to be something more descriptive,

00:08:39.134 --> 00:08:42.995
as long as the name hasn't been used in the past by somebody else.

00:08:42.995 --> 00:08:49.420
This will also have the.netlify.app extension when we're using this free plan.

00:08:49.420 --> 00:08:53.435
Or you can also use a fully custom domain if you already have one.

00:08:53.435 --> 00:08:56.465
Or you could also purchase one from Netlify too.

00:08:56.465 --> 00:09:01.880
Lastly, Netlify also makes it really easy to have a secure site by default,

00:09:01.880 --> 00:09:03.890
we can see, if we click on this,

00:09:03.890 --> 00:09:05.870
we have the padlock symbol just here.

00:09:05.870 --> 00:09:10.520
Meaning by default, our site is loaded up with a SSL certificate,

00:09:10.520 --> 00:09:12.830
meaning our site is secure.

00:09:12.830 --> 00:09:18.725
We can also see this down at the bottom of our settings, underneath the HTTPS.

00:09:18.725 --> 00:09:21.230
If you've also uploaded a custom domain,

00:09:21.230 --> 00:09:24.215
you can also enable this free of charge too.

00:09:24.215 --> 00:09:26.900
This is our site now deployed on the web,

00:09:26.900 --> 00:09:30.030
which you can now share with friends and family.
