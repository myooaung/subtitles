WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.740
Let's now move on to add in some form validation to our form.

00:00:04.740 --> 00:00:09.315
Currently if we just go in and add no values into these inputs,

00:00:09.315 --> 00:00:13.365
we can click "Add", and this will then submit a empty events.

00:00:13.365 --> 00:00:15.555
To fix this, we're first going to pass through

00:00:15.555 --> 00:00:20.810
a validation method which will check if all of the required fields have been filled in.

00:00:20.810 --> 00:00:24.900
If not, we will then display the error messages to the user.

00:00:24.900 --> 00:00:27.315
Since there can't be more than one field missing,

00:00:27.315 --> 00:00:30.210
these are going to be stored inside of an array.

00:00:30.210 --> 00:00:32.950
So into our add update form,

00:00:32.950 --> 00:00:39.190
the first step is to add a new data property which is going to store these errors.

00:00:39.190 --> 00:00:41.720
To pass these errors, we'll then need to add

00:00:41.720 --> 00:00:45.980
a method which is going to validate all of our form inputs.

00:00:45.980 --> 00:00:49.045
Just after the data section,

00:00:49.045 --> 00:00:54.565
that's about methods, and this method name is going to be validate.

00:00:54.565 --> 00:00:57.110
We will assume that this fills all these rooms

00:00:57.110 --> 00:00:59.720
each time the user clicks on the add button.

00:00:59.720 --> 00:01:04.090
First, we want to reset any previous errors.

00:01:04.090 --> 00:01:11.050
We can do this by setting these.errors to be once again set to an empty array.

00:01:11.050 --> 00:01:12.810
We'll then check our form.

00:01:12.810 --> 00:01:14.010
We had some if statements.

00:01:14.010 --> 00:01:21.950
The first one, we're going to check if this.events.name doesn't exist.

00:01:21.950 --> 00:01:24.750
We can do this by adding the exclamation mark.

00:01:24.750 --> 00:01:29.485
Then this if statement will only run if the name property doesn't exist.

00:01:29.485 --> 00:01:33.620
We could then add the code we want to run in these curly braces or instead,

00:01:33.620 --> 00:01:36.500
for simplicity, if we keep this all on the same line.

00:01:36.500 --> 00:01:38.450
This will work fine too.

00:01:38.450 --> 00:01:40.340
If this name doesn't exist,

00:01:40.340 --> 00:01:44.170
we want to push a new message to our errors array.

00:01:44.170 --> 00:01:47.010
We'll first access these.errors and

00:01:47.010 --> 00:01:50.645
our push method which will then push a new string of text,

00:01:50.645 --> 00:01:53.200
which will be name is required.

00:01:53.200 --> 00:01:58.260
Duplicate this and we can now do the same for the event details.

00:02:02.150 --> 00:02:06.520
We then also have the date in the background which you need to take care of,

00:02:06.520 --> 00:02:08.605
so duplicate this again.

00:02:08.605 --> 00:02:11.390
This one is the date.

00:02:12.040 --> 00:02:15.480
Then finally, the background.

00:02:18.920 --> 00:02:25.820
Check if this is working by outputting these errors array up in our template.

00:02:25.820 --> 00:02:28.855
We no longer need this event information output,

00:02:28.855 --> 00:02:32.080
but we can replace this with our errors array.

00:02:32.080 --> 00:02:38.125
To actually see this, we need to call our validate method from this button.

00:02:38.125 --> 00:02:42.730
We'll extract all of this code out of the click handler and

00:02:42.730 --> 00:02:47.715
then place this into a new method down to the methods at the bottom.

00:02:47.715 --> 00:02:50.860
First, we'll set up our new method which is you add

00:02:50.860 --> 00:02:54.620
the event and then paste inside our midsection.

00:02:54.620 --> 00:02:57.405
Remove the comma from in-between these.

00:02:57.405 --> 00:03:01.615
Now since this is inside of our JavaScript or our view section,

00:03:01.615 --> 00:03:04.670
we now need to call emit with this prefix,

00:03:04.670 --> 00:03:10.450
silver line 1, line 2 and also when we access the event.

00:03:11.210 --> 00:03:13.390
Now when this form is submitted,

00:03:13.390 --> 00:03:16.855
the first thing we want to do is to pass through the validate method.

00:03:16.855 --> 00:03:19.420
Then we'll call add events very soon.

00:03:19.420 --> 00:03:23.750
Also our add bottom, we'll then call the validate method.

00:03:24.080 --> 00:03:27.465
Also the same for all the form wrapper.

00:03:27.465 --> 00:03:31.330
Get results and then call validate.

00:03:32.810 --> 00:03:36.235
Now if we go down to our validate section,

00:03:36.235 --> 00:03:39.530
inside here we're going to have two outcomes.

00:03:39.530 --> 00:03:44.680
The first outcome is going to be the form has errors.

00:03:44.680 --> 00:03:47.930
We don't want to add to the event.

00:03:48.470 --> 00:03:51.220
The second outcome is everything is fine.

00:03:51.220 --> 00:03:52.720
We don't have any errors.

00:03:52.720 --> 00:03:55.490
Now we want to create this event.

00:03:55.490 --> 00:03:58.240
If this is the case and we have no errors,

00:03:58.240 --> 00:04:01.555
all we want to do is to call this add event method.

00:04:01.555 --> 00:04:04.330
Since this also lives on the view instance,

00:04:04.330 --> 00:04:07.595
we need to call this with this prefix.

00:04:07.595 --> 00:04:10.055
However, if there is some errors,

00:04:10.055 --> 00:04:12.505
we don't want to add a new event.

00:04:12.505 --> 00:04:16.780
Instead what we'll want to do is to return out to this validate method before we get to

00:04:16.780 --> 00:04:23.800
this add events section though we can first check if this.errors,

00:04:24.630 --> 00:04:27.160
which is our array.

00:04:27.160 --> 00:04:31.095
We can check if the length is greater than zero.

00:04:31.095 --> 00:04:36.290
This means we do have errors and we're going to return out of this validate method.

00:04:36.290 --> 00:04:38.280
Let's try this over in the browser.

00:04:38.280 --> 00:04:40.760
First of all, if we hit the "Add" button,

00:04:40.760 --> 00:04:43.345
this then calls the validate method and then

00:04:43.345 --> 00:04:47.255
updates our errors array with our four messages.

00:04:47.255 --> 00:04:49.450
This means our errors is greater than

00:04:49.450 --> 00:04:52.730
zero and the return keyword will make sure you break out of

00:04:52.730 --> 00:04:57.690
this validate method before pushing this new events. That's fine.

00:04:57.690 --> 00:05:01.295
Again, we can add something in the name and the details, click "Add".

00:05:01.295 --> 00:05:03.950
You see the date in the background is missing.

00:05:03.950 --> 00:05:06.005
Let's try this with no errors.

00:05:06.005 --> 00:05:07.955
Add the date in the background.

00:05:07.955 --> 00:05:10.900
This now allows us to add our new event.

00:05:10.900 --> 00:05:16.370
The final stage is to output these errors as a list rather than an array.

00:05:16.370 --> 00:05:20.615
To do this rather than simply outputting our errors as a date property,

00:05:20.615 --> 00:05:23.255
would instead going to loop through.

00:05:23.255 --> 00:05:25.085
Create a div wrapper.

00:05:25.085 --> 00:05:32.090
We only want to show this section if our errors.length is going to be greater than zero.

00:05:32.090 --> 00:05:35.480
If it is, we'll output these as unordered to list

00:05:35.480 --> 00:05:39.005
and then output each one of these errors as a list item.

00:05:39.005 --> 00:05:45.150
We can do this with v-for and this will be error in errors.

00:05:45.290 --> 00:05:48.390
Pass in a dynamic key which can be equal to

00:05:48.390 --> 00:05:52.430
our error since each one of our error messages is unique.

00:05:52.430 --> 00:05:55.620
Then I'll put the error message.

00:05:55.970 --> 00:05:59.160
Let's try this out at

00:05:59.160 --> 00:06:05.130
the new events and the error messages will now outputs as a unordered list.
