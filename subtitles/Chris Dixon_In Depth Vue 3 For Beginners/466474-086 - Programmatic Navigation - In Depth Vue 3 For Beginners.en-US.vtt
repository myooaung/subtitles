WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.245
These router links which we have been using so far in our project

00:00:04.245 --> 00:00:08.730
allow us to change to different locations at the click of a button.

00:00:08.730 --> 00:00:11.910
Earlier, we also briefly looked at accessing

00:00:11.910 --> 00:00:15.495
the routers instance using dollar symbol router.

00:00:15.495 --> 00:00:20.025
This gave us access to things such as the parameters in our code.

00:00:20.025 --> 00:00:24.210
This dollar symbol router also exposes many of the things to

00:00:24.210 --> 00:00:28.560
suggest the ability to navigate using methods such as push.

00:00:28.560 --> 00:00:34.330
This means we can also build in navigation too into our click listeners or methods.

00:00:34.330 --> 00:00:36.965
Over in this AppHeader.vue,

00:00:36.965 --> 00:00:39.230
we have this site title in the level on

00:00:39.230 --> 00:00:42.975
heading and really what we would want is to link back to the homepage and

00:00:42.975 --> 00:00:46.820
we could either wrap this in the router link or navigate

00:00:46.820 --> 00:00:51.295
programmatically by accessing the dollar symbol router when we click on this.

00:00:51.295 --> 00:00:55.535
Let's take a look at how we can do this with the routers push method.

00:00:55.535 --> 00:01:00.575
Inside of the open inside we'll listen out for a click as we would normally do,

00:01:00.575 --> 00:01:07.860
and then we'll respond to this by accessing the router which has this push method.

00:01:07.860 --> 00:01:11.540
Inside here we can add a path which we want to navigate to,

00:01:11.540 --> 00:01:13.970
so add the forward slash,

00:01:13.970 --> 00:01:19.280
click on our site title and this now navigates back to our homepage.

00:01:19.280 --> 00:01:23.720
This is also useful for things such as pushing the user to the account area

00:01:23.720 --> 00:01:28.655
after they've logged in since this can also be used inside of a method too,

00:01:28.655 --> 00:01:32.285
the only difference is if we were to use this down in our script section,

00:01:32.285 --> 00:01:36.095
remember, we would need to add this keyword in front.

00:01:36.095 --> 00:01:40.470
Let's take a look at something else which is the replace method.

00:01:40.630 --> 00:01:47.240
Refresh now to the birthday and then our title is to be is to work exactly the same,

00:01:47.240 --> 00:01:49.645
but there is one key difference.

00:01:49.645 --> 00:01:51.930
When navigating in the browser,

00:01:51.930 --> 00:01:56.215
each page we visit is added to the previous history of entries,

00:01:56.215 --> 00:01:58.740
this is how the browser knows where to

00:01:58.740 --> 00:02:01.880
navigate to when we click on these back and forward buttons.

00:02:01.880 --> 00:02:04.925
When we use the push method which we just looked up before,

00:02:04.925 --> 00:02:07.990
these entries are also added to our history.

00:02:07.990 --> 00:02:10.865
However, as it sounds when we use the replace method,

00:02:10.865 --> 00:02:16.160
just like we are now, this will then replace the current entry rather than add a new one.

00:02:16.160 --> 00:02:18.410
We can check this if we refresh,

00:02:18.410 --> 00:02:20.225
we'll go to birthday,

00:02:20.225 --> 00:02:24.170
then click on the home route and now if we click on the back button,

00:02:24.170 --> 00:02:26.390
we're now take him back to the previous link,

00:02:26.390 --> 00:02:29.715
which is birthday, because this is being replaced.

00:02:29.715 --> 00:02:33.995
If we go back to the push method and do exactly the same,

00:02:33.995 --> 00:02:36.550
refresh, go to the birthday link,

00:02:36.550 --> 00:02:41.835
back to our home and now if click on back this then takes us back to

00:02:41.835 --> 00:02:45.030
our original birthday link since the forward slash is being

00:02:45.030 --> 00:02:49.570
added to the browser stack rather than replacing the previous one.

00:02:49.570 --> 00:02:52.080
Alongside this router also has

00:02:52.080 --> 00:02:56.560
a go method which will allow us to navigate through the browser's entries,

00:02:56.560 --> 00:03:00.530
so rather than navigate into a certain path just like this,

00:03:00.530 --> 00:03:05.255
we can cycle back or forward through as many entries as you want to.

00:03:05.255 --> 00:03:07.925
If we wanted to go back to pages,

00:03:07.925 --> 00:03:11.880
we could use negative 2 and let's try this out.

00:03:11.880 --> 00:03:16.589
Go home, click on birthday, anniversary and Christmas,

00:03:16.589 --> 00:03:19.470
then click on the site title and we're taken

00:03:19.470 --> 00:03:22.890
back to entries which was back to our birthday link.

00:03:22.890 --> 00:03:26.560
If we change this to be a positive 2,

00:03:27.050 --> 00:03:32.060
click on this, this will then push us back forward to entries,

00:03:32.060 --> 00:03:34.495
which is back to our Christmas link.

00:03:34.495 --> 00:03:39.200
This is useful if we wanted to go back and forward multiple pages, however though,

00:03:39.200 --> 00:03:42.604
if we only wanted to go backwards or forwards for one-page,

00:03:42.604 --> 00:03:48.130
we could also instead replace this with forward or also back.

00:03:48.130 --> 00:03:54.020
This will work exactly the same as go but will only work for one single page.

00:03:54.020 --> 00:03:56.900
As well as these, there is also some other methods too which you

00:03:56.900 --> 00:03:59.780
can find inside of the API docs if needed,

00:03:59.780 --> 00:04:02.330
but these are some of the more common ones.

00:04:02.330 --> 00:04:04.490
Our project, we're going to leave this as

00:04:04.490 --> 00:04:08.795
push and link this to the string or forward slash,

00:04:08.795 --> 00:04:10.970
which we'll link to the homepage.

00:04:10.970 --> 00:04:16.890
Next we'll take a look at the different types of history modes which the router provides.
