WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.530 --> 00:00:04.530
Vue.js version 3 is a major rewrite.

00:00:04.530 --> 00:00:07.620
One which came about for multiple reasons.

00:00:07.620 --> 00:00:10.290
The codebase for Vue 2 was fast,

00:00:10.290 --> 00:00:15.435
efficient on performance, but there is always room for improvement in the current design.

00:00:15.435 --> 00:00:19.040
Led by learning and discovering new things about the project,

00:00:19.040 --> 00:00:21.770
alongside the ability to now access

00:00:21.770 --> 00:00:25.990
newer JavaScript features which are available inside of modern browsers,

00:00:25.990 --> 00:00:30.565
this video is going to give you an overview of some of the key changes.

00:00:30.565 --> 00:00:33.020
Then later on when we roll a bit more Vue.JS

00:00:33.020 --> 00:00:35.915
code with a better understanding of how it works,

00:00:35.915 --> 00:00:39.725
there will be some more dedicated sections to provide us some more detail.

00:00:39.725 --> 00:00:43.915
Maybe it's not what a tomb which if some of this doesn't make sense at the moment.

00:00:43.915 --> 00:00:48.470
First of all, I want to address a big misconception about Vue 3.

00:00:48.470 --> 00:00:51.080
Since the announcement of the new version,

00:00:51.080 --> 00:00:54.020
many people think that everything they know so far about

00:00:54.020 --> 00:00:57.850
Vue is now obsolete. This is not true.

00:00:57.850 --> 00:01:01.160
You can use the Vue 3 library and still right Vue

00:01:01.160 --> 00:01:05.345
apps pretty much in the exact same way as you did in Vue 2.

00:01:05.345 --> 00:01:07.400
Many of the changes or under

00:01:07.400 --> 00:01:12.655
the hood performance improvements that the developer is not directly aware of,

00:01:12.655 --> 00:01:15.230
Vue 3 does have some features too,

00:01:15.230 --> 00:01:17.225
but these are generally additional.

00:01:17.225 --> 00:01:19.835
Meaning if you have any Vue knowledge so far,

00:01:19.835 --> 00:01:22.420
this is all fully transferable.

00:01:22.420 --> 00:01:27.785
One of the big improvements of Vue version 3 is the performance.

00:01:27.785 --> 00:01:30.230
This has been improved in multiple ways,

00:01:30.230 --> 00:01:35.585
and one of the key things is by using a ES6 feature called proxy.

00:01:35.585 --> 00:01:40.090
This results in a faster and more efficient change detection system.

00:01:40.090 --> 00:01:43.515
This is a key part in the Vue 3 reactivity,

00:01:43.515 --> 00:01:49.055
which is a process of Vue reacting to changes and updating where required.

00:01:49.055 --> 00:01:54.155
For example, if a user updated an item quantity in a shopping cart,

00:01:54.155 --> 00:01:57.790
we would also want the total price to be updated too.

00:01:57.790 --> 00:02:00.875
This is the process of reacting to a change.

00:02:00.875 --> 00:02:07.134
In Vue 2, any data which we had when we upload is automatically reactive,

00:02:07.134 --> 00:02:09.159
may miss some data changes,

00:02:09.159 --> 00:02:12.110
and there is another part of the application which relies on it.

00:02:12.110 --> 00:02:15.085
That part will also be updated too.

00:02:15.085 --> 00:02:17.484
If the user change their username,

00:02:17.484 --> 00:02:19.820
and this was displayed in the header section,

00:02:19.820 --> 00:02:22.450
it would update their automatic too.

00:02:22.450 --> 00:02:26.930
one of the caveats from Vue 2 reactivity system was if

00:02:26.930 --> 00:02:31.430
a new property was added to Vue.JS after the application had loaded,

00:02:31.430 --> 00:02:34.025
it would then not be reactive.

00:02:34.025 --> 00:02:39.590
This is something which proxies solved and we'll look at these more detailed later.

00:02:39.590 --> 00:02:43.900
Reducing all of the size of the code can also improve things too.

00:02:43.900 --> 00:02:45.290
When we use a framework,

00:02:45.290 --> 00:02:48.880
we often don't need all of the features which it provides.

00:02:48.880 --> 00:02:51.530
Meaning that when a application loads,

00:02:51.530 --> 00:02:53.810
we may be downloading additional JavaScript or

00:02:53.810 --> 00:02:57.100
assets which we don't need for our project.

00:02:57.100 --> 00:03:00.350
To help with this, Vue 3 is more modular.

00:03:00.350 --> 00:03:03.800
So more modern tooling can dropouts any unneeded code,

00:03:03.800 --> 00:03:06.040
but using the bundle size.

00:03:06.040 --> 00:03:10.070
Another big improvement is a rewrite of the virtual DOM.

00:03:10.070 --> 00:03:15.820
Again, there is a dedicated video later once we get more comfortable with Vue.JS,

00:03:15.820 --> 00:03:19.655
but for now the virtual dom update means that you can now

00:03:19.655 --> 00:03:23.965
more efficiently check which elements have changed after an update.

00:03:23.965 --> 00:03:28.130
The Vue 2 library was wrote in regular JavaScript.

00:03:28.130 --> 00:03:30.440
Over time, it was realized that a project of

00:03:30.440 --> 00:03:33.830
this size would benefit from introducing types,

00:03:33.830 --> 00:03:36.555
which will help reduce a risk in bugs.

00:03:36.555 --> 00:03:40.465
Even though the Vue 3 cause being rewritten using typescript,

00:03:40.465 --> 00:03:44.555
developers can write code even in regular JavaScript,

00:03:44.555 --> 00:03:47.935
or the now fully supported typescript 2.

00:03:47.935 --> 00:03:52.790
Typescript was available in Vue 2 puts much more deeply integrated

00:03:52.790 --> 00:03:57.530
into Vue 3 and also requiring no additional [inaudible].

00:03:57.530 --> 00:04:02.720
The composition API is probably the most talked about feature in Vue version 3,

00:04:02.720 --> 00:04:06.560
and also the one feature which has caused the most misunderstanding

00:04:06.560 --> 00:04:11.485
about how Vue 3 will force us to write apps in a completely new way.

00:04:11.485 --> 00:04:14.540
As mentioned before, the competition API is not

00:04:14.540 --> 00:04:18.095
intended to replace everything we know about Vue so far.

00:04:18.095 --> 00:04:21.470
It's intended to be purely additive and gives us a way

00:04:21.470 --> 00:04:26.390
to make our project more maintainable and reusable as they grow.

00:04:26.390 --> 00:04:29.945
We will dive into this a lot deeper later on.

00:04:29.945 --> 00:04:33.500
In addition to this, we also have some Vue features to explore,

00:04:33.500 --> 00:04:36.080
such as portals, fragments,

00:04:36.080 --> 00:04:38.395
suspense, and so much more.

00:04:38.395 --> 00:04:44.585
The key takeaway is Vue is still Vue regardless if it's version 2 or 3,

00:04:44.585 --> 00:04:46.190
but version 3 has

00:04:46.190 --> 00:04:50.845
some nice performance improvements along with some additional features you can use.

00:04:50.845 --> 00:04:52.740
Now have a little background,

00:04:52.740 --> 00:04:55.770
let's move on to writing some Vue code.
