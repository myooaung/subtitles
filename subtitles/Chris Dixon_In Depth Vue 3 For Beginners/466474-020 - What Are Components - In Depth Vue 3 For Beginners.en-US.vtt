WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:04.170
Vue.js and some other friends and frameworks or libraries have

00:00:04.170 --> 00:00:07.995
this concept of building our applications using components.

00:00:07.995 --> 00:00:12.570
The reason behind this is to break up our app into smaller pieces,

00:00:12.570 --> 00:00:17.430
making our project more easy to maintain, organize, and debug.

00:00:17.430 --> 00:00:19.679
But what is a component?

00:00:19.679 --> 00:00:23.750
Well, consider this image which is from our upcoming project.

00:00:23.750 --> 00:00:25.790
This is a countdown app where we will add

00:00:25.790 --> 00:00:29.195
events and they will be displayed in date order.

00:00:29.195 --> 00:00:32.920
We can also see the number of days to the event too.

00:00:32.920 --> 00:00:36.905
We could build this app completely in the App.vue file.

00:00:36.905 --> 00:00:39.755
But even though this is not a huge application,

00:00:39.755 --> 00:00:45.280
it may quickly become crowded and unorganized or being in one single file.

00:00:45.280 --> 00:00:49.834
To help with this, we can split up our app into parts or sections,

00:00:49.834 --> 00:00:51.575
like our button at the top,

00:00:51.575 --> 00:00:53.720
which can even be part of the App.vue

00:00:53.720 --> 00:00:57.594
file or we could move them to be a separate component.

00:00:57.594 --> 00:00:59.880
Also with our events too,

00:00:59.880 --> 00:01:02.720
the code for these could be taken out of this App.vue

00:01:02.720 --> 00:01:06.500
file and placed into an independent components.

00:01:06.500 --> 00:01:10.970
Isolating this code into a component like this means we now

00:01:10.970 --> 00:01:16.010
know where to look to edit this code rather than scrolling through a large file.

00:01:16.010 --> 00:01:19.160
Also, if there is a problem with this events section,

00:01:19.160 --> 00:01:21.650
our code is now isolated too,

00:01:21.650 --> 00:01:24.095
which will help with fixing the issue.

00:01:24.095 --> 00:01:28.220
This project also includes a form which we'll use to either

00:01:28.220 --> 00:01:32.585
add a new event or to edit an existing one too.

00:01:32.585 --> 00:01:36.400
This would also be a good use case for a component.

00:01:36.400 --> 00:01:38.720
There is no hard or fast rule to

00:01:38.720 --> 00:01:42.610
determine exactly which path we should make into a component,

00:01:42.610 --> 00:01:44.750
it's something which you have to judge

00:01:44.750 --> 00:01:48.950
yourself when a file becomes large or heard to maintain.

00:01:48.950 --> 00:01:53.560
This may be a good sign that you need to outsource into a separate component,

00:01:53.560 --> 00:01:59.335
or you can also organize by features too just like we see here with this edit form.

00:01:59.335 --> 00:02:02.460
The number of components we create does not hinder

00:02:02.460 --> 00:02:05.900
our performance or increase the size bubble up,

00:02:05.900 --> 00:02:10.970
since we use web part to bundle them altogether efficiently in the end.

00:02:10.970 --> 00:02:17.010
It's in this bundle which the browser uses for our single page applications.
