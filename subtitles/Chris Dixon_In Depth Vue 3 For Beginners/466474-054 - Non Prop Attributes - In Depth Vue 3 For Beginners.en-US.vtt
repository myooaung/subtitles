WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.010
In the previous project,

00:00:02.010 --> 00:00:04.060
we added a dark mode option,

00:00:04.060 --> 00:00:08.035
and I'm now going to do something similar which is to apply a grayMode.

00:00:08.035 --> 00:00:12.120
If this color scheme which you currently have is a bit too much for the user,

00:00:12.120 --> 00:00:13.590
this should be pretty familiar,

00:00:13.590 --> 00:00:17.145
we reduced using many of the techniques which we've already used.

00:00:17.145 --> 00:00:19.815
Starting over in the App.vue,

00:00:19.815 --> 00:00:22.575
we first need some data properties.

00:00:22.575 --> 00:00:24.465
Inside of the returns section,

00:00:24.465 --> 00:00:27.970
the first one is going to be grayModeSet,

00:00:28.220 --> 00:00:33.000
this is a Boolean value which will be currently set to false.

00:00:33.000 --> 00:00:37.655
Then also a grayMode object which is going to contain the color scheme,

00:00:37.655 --> 00:00:40.910
but our background and also our font color.

00:00:40.910 --> 00:00:43.190
This will be for our CSS silicon,

00:00:43.190 --> 00:00:47.250
first set the background property to be light slate gray.

00:00:48.460 --> 00:00:52.355
Then also our color property for the text,

00:00:52.355 --> 00:00:55.220
and you can choose any color which you want and I'm going to go

00:00:55.220 --> 00:00:59.310
for a hex value of 454444.

00:01:00.230 --> 00:01:07.360
Move to the templates, this also needs a button so we can toggle this on and off.

00:01:07.360 --> 00:01:10.535
I'm going to place this inside of our options div,

00:01:10.535 --> 00:01:14.160
and also in-between these two color buttons.

00:01:15.020 --> 00:01:17.070
The first step is to,

00:01:17.070 --> 00:01:19.850
at least now for a click on this button and then we're going

00:01:19.850 --> 00:01:23.935
to toggle this grayModeSet to be on and off.

00:01:23.935 --> 00:01:27.260
Just like we did above with the show past events,

00:01:27.260 --> 00:01:31.315
we're going to do the same, but this time for grayModeSet.

00:01:31.315 --> 00:01:34.570
We'll set this to be the opposite.

00:01:34.970 --> 00:01:37.910
We could also add some text inside of here,

00:01:37.910 --> 00:01:40.910
but instead I'm going to use a hide my entity,

00:01:40.910 --> 00:01:43.400
which is going to be the sun or the moon.

00:01:43.400 --> 00:01:44.840
To make this dynamic, we need

00:01:44.840 --> 00:01:50.960
the double curly braces and we'll also make use of the JavaScript ternary operator.

00:01:50.960 --> 00:01:53.690
If gray mode set is currently true,

00:01:53.690 --> 00:01:56.870
we're going to set the icon which is the moon.

00:01:56.870 --> 00:01:59.480
So the moon icon is the ampersand,

00:01:59.480 --> 00:02:03.300
the harsh on the number of 9788;.

00:02:04.000 --> 00:02:08.340
If this is false, we show the picture of the moon.

00:02:08.840 --> 00:02:11.460
We set this default value to be false,

00:02:11.460 --> 00:02:14.165
so we do see the icon of the moon inside of here.

00:02:14.165 --> 00:02:16.295
Let's click on this, we see the sun.

00:02:16.295 --> 00:02:18.755
So this all seems to work in fine.

00:02:18.755 --> 00:02:21.905
Now the styles which was setup as a data property,

00:02:21.905 --> 00:02:24.830
now needs to be passed down to this event components.

00:02:24.830 --> 00:02:29.885
We can change the background color and also the text for each one of these events.

00:02:29.885 --> 00:02:33.475
In the past, we've passed down props to this event components.

00:02:33.475 --> 00:02:35.065
Just like we see here.

00:02:35.065 --> 00:02:36.820
We could once again do that,

00:02:36.820 --> 00:02:41.390
but this time we're going to take advantage of non-prop attributes.

00:02:41.390 --> 00:02:44.720
This works in a similar way to the props which we've looked at in the past.

00:02:44.720 --> 00:02:47.014
Well, instead of inside the components,

00:02:47.014 --> 00:02:50.720
the template will automatically inherit these values.

00:02:50.720 --> 00:02:52.370
For this particular components,

00:02:52.370 --> 00:02:55.150
the article is the main wrapper elements,

00:02:55.150 --> 00:02:57.710
and any non-profit attributes to pass

00:02:57.710 --> 00:03:01.835
down will be automatically inherited by this main wrapper.

00:03:01.835 --> 00:03:06.380
They also appear just like a regular attribute inside of the opening tag,

00:03:06.380 --> 00:03:08.510
so if we pass an ID attribute,

00:03:08.510 --> 00:03:11.155
it would look something like this.

00:03:11.155 --> 00:03:13.610
Let's remove this and to do this,

00:03:13.610 --> 00:03:16.565
we're going to go back over to the parents App.vue,

00:03:16.565 --> 00:03:19.835
and then we can pass this down at the event components.

00:03:19.835 --> 00:03:21.530
Using the same example,

00:03:21.530 --> 00:03:25.695
we'll set the ID equal to a string,

00:03:25.695 --> 00:03:27.540
say this and over to the browser,

00:03:27.540 --> 00:03:30.810
we can refresh and open the developer tools.

00:03:31.300 --> 00:03:35.405
Use the selector and choose any one of these events.

00:03:35.405 --> 00:03:38.060
These are stored inside of an unordered list,

00:03:38.060 --> 00:03:41.300
and if we go inside of our list items on the article,

00:03:41.300 --> 00:03:44.810
this around an article has now inherited our ID.

00:03:44.810 --> 00:03:47.690
This means if we go over to our Event.vue,

00:03:47.690 --> 00:03:50.960
we no longer need to register these as our props,

00:03:50.960 --> 00:03:54.725
they're automatically inherited inside of the template.

00:03:54.725 --> 00:03:56.780
Now as a more practical example,

00:03:56.780 --> 00:04:01.760
we're going to replace this ID with the styles which you set as a data property.

00:04:01.760 --> 00:04:03.890
We combine this as

00:04:03.890 --> 00:04:09.415
a style attribute where we're going to pass down our backgrounds and also our color.

00:04:09.415 --> 00:04:11.105
Inside the data section,

00:04:11.105 --> 00:04:14.120
we have this set inside of our grayMode object.

00:04:14.120 --> 00:04:19.620
Now we only want to pass down these values if grayModeSet is true.

00:04:19.620 --> 00:04:24.695
We can now use the JavaScript ternary operator to determine if we're going to pass this

00:04:24.695 --> 00:04:30.130
as an object and we can do this using the JavaScript ternary operator.

00:04:30.130 --> 00:04:33.420
We can first check if grayMode is set.

00:04:33.420 --> 00:04:38.855
If it is, we then go to pass down our object, which is grayMode.

00:04:38.855 --> 00:04:42.460
If not, we'll just simply pass down an empty string,

00:04:42.460 --> 00:04:45.015
so none of these styles will apply.

00:04:45.015 --> 00:04:48.200
Let's give it a go over to the browser,

00:04:49.010 --> 00:04:51.840
and our toggle is all now working.

00:04:51.840 --> 00:04:53.190
Inside the developer tools,

00:04:53.190 --> 00:04:57.955
we can see this if we go into the elements section, your unordered list,

00:04:57.955 --> 00:05:02.035
and then it down to our article where we now have this dynamic style property,

00:05:02.035 --> 00:05:05.725
which has the background color and also the text color too.

00:05:05.725 --> 00:05:11.150
Click on the Sun and then our regular CSS would just apply.

00:05:11.150 --> 00:05:13.690
Now with all this work and we're just going to apply

00:05:13.690 --> 00:05:16.465
some styling it to these three buttons at the top,

00:05:16.465 --> 00:05:18.970
and the show past events button alongside

00:05:18.970 --> 00:05:21.415
this toggle is going to remain over on the left.

00:05:21.415 --> 00:05:25.820
We're going to push this addNew vamp button over to the right.

00:05:25.820 --> 00:05:28.335
Do this in the App.vue,

00:05:28.335 --> 00:05:30.435
up to the three buttons,

00:05:30.435 --> 00:05:35.230
and we're going to group our first two buttons together inside of a div.

00:05:35.230 --> 00:05:37.335
So we can grab these,

00:05:37.335 --> 00:05:41.410
add a div, and place these back inside.

00:05:42.530 --> 00:05:48.600
The style, and we're going to give this a class of option on the skull buttons.

00:05:49.190 --> 00:05:54.605
This now means our options class now has this div and also this button.

00:05:54.605 --> 00:05:57.890
We can make use of the CSS flexbox to set

00:05:57.890 --> 00:06:02.170
the alignment and add some spacing in between these two sections.

00:06:02.170 --> 00:06:05.080
Downscale style section.

00:06:07.160 --> 00:06:10.630
First of all, these options wrapper,

00:06:12.170 --> 00:06:15.620
the display type of flex,

00:06:15.620 --> 00:06:22.280
which will now maybe we couldn't set the justified content to give us some space between.

00:06:23.840 --> 00:06:26.560
This now gives us the spacing in between,

00:06:26.560 --> 00:06:29.995
so we can now focus on this time and for these individual buttons,

00:06:29.995 --> 00:06:32.680
let's begin with this addNew button.

00:06:32.680 --> 00:06:34.615
If we go back up to our template,

00:06:34.615 --> 00:06:36.535
the button over on the right,

00:06:36.535 --> 00:06:38.440
as this class of addNew.

00:06:38.440 --> 00:06:42.620
Then our two buttons on the left have this class of option buttons.

00:06:42.620 --> 00:06:45.180
Down to our style section,

00:06:45.180 --> 00:06:48.820
let's first go for the addNew button.

00:06:49.670 --> 00:06:52.075
We can make this a little larger with

00:06:52.075 --> 00:06:57.965
the font size of three rems and also the font color,

00:06:57.965 --> 00:06:59.690
which will be an RGB values.

00:06:59.690 --> 00:07:01.504
So the red is 92,

00:07:01.504 --> 00:07:05.905
the green is 84, and then 84 for the blue too.

00:07:05.905 --> 00:07:08.390
The cursor, this will be a pointer,

00:07:08.390 --> 00:07:11.675
so it changes when the user hovers over this button.

00:07:11.675 --> 00:07:17.520
Then also remove the default background and also the border too.

00:07:19.430 --> 00:07:22.625
Now, the options group on the left,

00:07:22.625 --> 00:07:26.010
which had the class of option buttons.

00:07:26.300 --> 00:07:31.625
Then when we want to target the two buttons which are nested inside,

00:07:31.625 --> 00:07:35.570
begin at some padding of 0.5 rems on

00:07:35.570 --> 00:07:39.595
the top and bottom and then at one rem on the left and right.

00:07:39.595 --> 00:07:42.140
This will just make these buttons a little bit larger

00:07:42.140 --> 00:07:44.465
and to also add some spacing in between,

00:07:44.465 --> 00:07:47.760
we can apply some margin over on the right,

00:07:48.440 --> 00:07:51.610
the background of none.

00:07:53.090 --> 00:07:56.030
Then let's go for the border. First of all,

00:07:56.030 --> 00:08:01.185
the border-radius of one rem gives us the rounded corners,

00:08:01.185 --> 00:08:02.570
and then the actual border,

00:08:02.570 --> 00:08:05.090
which is going to be two pixels wide,

00:08:05.090 --> 00:08:08.370
a color of light steel blue,

00:08:08.530 --> 00:08:11.880
and also a solid line.

00:08:12.650 --> 00:08:20.265
The font size of 1.2 rems and then finally the cursor,

00:08:20.265 --> 00:08:22.560
just so much has gone to be a pointer.

00:08:22.560 --> 00:08:26.120
The final touches to also make sure that we have vertical alignment

00:08:26.120 --> 00:08:30.110
from our two buttons on the left to all button over on the right.

00:08:30.110 --> 00:08:32.960
We can see that this puts it is little bit lower and

00:08:32.960 --> 00:08:36.125
the way to fix this is inside of the wrapper,

00:08:36.125 --> 00:08:38.570
and all we need to do inside of here is to set

00:08:38.570 --> 00:08:42.505
the align items property to be in the center,

00:08:42.505 --> 00:08:45.895
which now lines up our two sections.

00:08:45.895 --> 00:08:50.104
There's also a few more things to discover with non-prop attributes,

00:08:50.104 --> 00:08:53.010
and we're going to discover these next.
