WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.020 --> 00:00:04.575
Even though we have supplied the user some sample cards edit,

00:00:04.575 --> 00:00:06.315
which is all these ones used here.

00:00:06.315 --> 00:00:09.000
We want to also make them more flexible by also

00:00:09.000 --> 00:00:12.705
allowing them to add and remove sections too,

00:00:12.705 --> 00:00:15.900
starting with the "Add in new text section",

00:00:15.900 --> 00:00:17.490
which is this section just here.

00:00:17.490 --> 00:00:22.680
We're going to allow the user to click on a button and add new sections just below.

00:00:22.680 --> 00:00:25.950
But this we first need a button which the user can click on.

00:00:25.950 --> 00:00:29.055
I'm going to place this over in the card edit.

00:00:29.055 --> 00:00:31.680
Just above this V for loop,

00:00:31.680 --> 00:00:37.360
placed in a new div with the class of add section wrapper.

00:00:38.500 --> 00:00:43.990
Based on a button and effects of add new text section.

00:00:43.990 --> 00:00:47.120
We don't want the user to go crazy and add lots and lots of

00:00:47.120 --> 00:00:49.490
different text sections which won't fit on this page.

00:00:49.490 --> 00:00:54.760
So what we're going to do is restrict the user to only add in four sections.

00:00:54.760 --> 00:00:59.510
Inside the function we will also take care of restricting this to four sections.

00:00:59.510 --> 00:01:01.985
But on the front-end inside of our template,

00:01:01.985 --> 00:01:07.055
we're only going to show this button if the number of sections is less than 4.

00:01:07.055 --> 00:01:13.080
We already have access to our selected page props which will have this information,

00:01:13.190 --> 00:01:21.310
grab the full page into the sections and we can check if the length is less than 4.

00:01:21.310 --> 00:01:24.240
If it is, we'll learn it display this button.

00:01:24.240 --> 00:01:25.800
We've got these clusters here,

00:01:25.800 --> 00:01:30.070
I'm going to grab this and go down to the "Style Section",

00:01:31.490 --> 00:01:34.540
which can also be scoped.

00:01:36.020 --> 00:01:40.430
Before we do this let's refresh the browser and see where this button is placed.

00:01:40.430 --> 00:01:43.390
Now this leaves us with an issue.

00:01:43.390 --> 00:01:48.030
We see the error of cannot read property length of undefined.

00:01:48.030 --> 00:01:50.840
If we take a step back and think about this,

00:01:50.840 --> 00:01:54.710
some of our pages don't have any sections at all,

00:01:54.710 --> 00:01:57.740
such as some of the back of the cards and some of the inside

00:01:57.740 --> 00:02:01.160
left don't have any text sections to display.

00:02:01.160 --> 00:02:06.130
Here we are trying to access the length property of something which doesn't exist.

00:02:06.130 --> 00:02:09.410
To deal with this, we can add in a question mark just

00:02:09.410 --> 00:02:13.115
after sections and this is what's called optional chaining.

00:02:13.115 --> 00:02:16.430
This is all JavaScript and nothing to do with VueJS.

00:02:16.430 --> 00:02:19.580
This optional chaining is basically a way of saying

00:02:19.580 --> 00:02:24.170
that sometimes these sections may be there and sometimes they may not be.

00:02:24.170 --> 00:02:27.515
We are completely aware of this so don't throw an error.

00:02:27.515 --> 00:02:30.545
If we save this and now refresh the browser,

00:02:30.545 --> 00:02:33.260
we see we don't see any issues even if we don't

00:02:33.260 --> 00:02:36.715
have any sections such as this back of the page.

00:02:36.715 --> 00:02:38.950
With this address, we can now go back to

00:02:38.950 --> 00:02:41.790
our style section and we're going to place this

00:02:41.790 --> 00:02:45.595
"Add new text section" over on the right-hand side.

00:02:45.595 --> 00:02:50.110
This will make use of the flexbox and then

00:02:50.110 --> 00:02:54.830
pushes over to the right with "Justify Content Flex End".

00:02:54.830 --> 00:02:59.455
See straight away, this is pushed over to the right of our section.

00:02:59.455 --> 00:03:02.290
This also needs some margin on the bottom.

00:03:02.290 --> 00:03:05.320
The space is out from the content blow.

00:03:05.320 --> 00:03:09.865
The content blow is currently the subject and we no longer have a use for this.

00:03:09.865 --> 00:03:15.155
We can go to the text inputs and also remove this from our template.

00:03:15.155 --> 00:03:18.310
This button and also the free enough links about

00:03:18.310 --> 00:03:21.805
the talk would also benefit from a hover state too.

00:03:21.805 --> 00:03:24.160
When the user hovers over this you can change

00:03:24.160 --> 00:03:26.830
the color so the user knows this is clickable.

00:03:26.830 --> 00:03:29.350
Since we want to apply this to different sections,

00:03:29.350 --> 00:03:31.510
I'm going to place this over in the [inaudible] view.

00:03:31.510 --> 00:03:37.540
Since this style section is not scoped, just blow the button.

00:03:38.240 --> 00:03:43.560
Hover states and also the same for any list items too.

00:03:43.660 --> 00:03:47.885
Just one property for this will define the color property.

00:03:47.885 --> 00:03:55.740
This RGB value of 108108241.

00:03:55.740 --> 00:03:58.160
Your hover state is now working as now we can push on

00:03:58.160 --> 00:04:00.830
with the functionality to add a new section.

00:04:00.830 --> 00:04:04.100
After this, we're going to go over to what we use current card

00:04:04.100 --> 00:04:08.045
and create a function which is going to update our selected card.

00:04:08.045 --> 00:04:14.380
Down to the bottom, create a new function called "Add Section."

00:04:16.660 --> 00:04:20.975
Remember before we said we're going to limit the number of sections to before.

00:04:20.975 --> 00:04:24.490
But we can also take care of this at the very top of our function.

00:04:24.490 --> 00:04:27.920
We can check if the selected page,

00:04:28.500 --> 00:04:32.785
the value, the sections,

00:04:32.785 --> 00:04:37.190
the length is greater or equal to 4.

00:04:37.190 --> 00:04:42.185
If this is true, will then return out of this function without running the lines of code,

00:04:42.185 --> 00:04:43.880
which we're about to write.

00:04:43.880 --> 00:04:48.560
What we're going to do now is to basically create a new object and then it pushes

00:04:48.560 --> 00:04:53.615
to our selected card to keep the same structure as all of the rest of the cards,

00:04:53.615 --> 00:04:56.245
head over to the data dot js,

00:04:56.245 --> 00:04:59.020
and copy of one of these section objects.

00:04:59.020 --> 00:05:04.970
But to all function stores on a constant called New section.

00:05:05.290 --> 00:05:08.965
This equal to objects.

00:05:08.965 --> 00:05:15.490
To prompt the user, we're going to set the user input to be "enter your text here".

00:05:17.190 --> 00:05:21.145
We can keep in place a default height, a default color,

00:05:21.145 --> 00:05:25.945
font family, and all of the rest of the options we can keep as a default value.

00:05:25.945 --> 00:05:28.595
You can also change these if you prefer to.

00:05:28.595 --> 00:05:31.915
Then what we need to now do is to select our full cards,

00:05:31.915 --> 00:05:35.980
go into the selected page and then add each new section.

00:05:35.980 --> 00:05:40.210
This is very similar to what we're doing when we updated the card just here.

00:05:40.210 --> 00:05:42.425
Just blow our new section,

00:05:42.425 --> 00:05:45.035
crop the selected card,

00:05:45.035 --> 00:05:49.085
the value into the pages

00:05:49.085 --> 00:05:53.870
and we can access the index number with our get page index function.

00:05:53.870 --> 00:05:58.420
Call this function into the sections.

00:05:58.420 --> 00:06:02.330
Then we're going to push a new item to this array.

00:06:02.330 --> 00:06:06.240
What we want to push is this new section.

00:06:06.710 --> 00:06:10.210
Return this function at the bottom

00:06:10.490 --> 00:06:14.060
and then back over to our code edit where we can import

00:06:14.060 --> 00:06:22.090
this file and also access our function is used to run card.

00:06:22.520 --> 00:06:26.140
This is from our composable folder.

00:06:27.170 --> 00:06:30.730
Then interviews current card.

00:06:32.120 --> 00:06:39.735
Next we need a setup function to accesses this function inside of a constant.

00:06:39.735 --> 00:06:42.165
The function was at section.

00:06:42.165 --> 00:06:49.810
This is from use current card and finally add section can be returned from our setup.

00:06:49.810 --> 00:06:55.505
[inaudible] any clicks can call this function that's our button,

00:06:55.505 --> 00:07:02.235
I click, which we'll call our add section function.

00:07:02.235 --> 00:07:05.400
Let's try this out, refresh.

00:07:05.400 --> 00:07:08.275
This particular page has three sections already.

00:07:08.275 --> 00:07:10.135
We try to add one more.

00:07:10.135 --> 00:07:15.720
That's all four sections and our button now disappears. Let's try the front.

00:07:15.720 --> 00:07:21.705
Have one section, 234 and this is all now working.

00:07:21.705 --> 00:07:26.315
The upcoming videos we'll follow a similar pattern over in the use current cards.

00:07:26.315 --> 00:07:29.240
We are going to be creating a series of functions to update

00:07:29.240 --> 00:07:34.420
our selected card and then call this function from our particular components.

00:07:34.420 --> 00:07:38.490
The next one will be to remove one of our sections.
