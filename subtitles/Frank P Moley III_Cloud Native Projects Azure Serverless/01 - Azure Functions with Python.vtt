WEBVTT
1
00:00:00.005 --> 00:00:01.009
- [Instructor] We're going to start looking

2
00:00:01.009 --> 00:00:04.007
at the details of Azure Functions

3
00:00:04.007 --> 00:00:07.002
by jumping straight into our IDEs.

4
00:00:07.002 --> 00:00:08.007
Now, I want to stress,

5
00:00:08.007 --> 00:00:12.009
these are demo functions based on simple executions

6
00:00:12.009 --> 00:00:15.004
to get you into the ecosystem.

7
00:00:15.004 --> 00:00:17.006
Each use case is very different

8
00:00:17.006 --> 00:00:20.006
but again, this is just to get you familiar

9
00:00:20.006 --> 00:00:22.009
with the toolkit itself.

10
00:00:22.009 --> 00:00:26.006
So let's hit the IDE.

11
00:00:26.006 --> 00:00:27.008
So the first thing that I want you to do

12
00:00:27.008 --> 00:00:29.009
is go to the Azure extension

13
00:00:29.009 --> 00:00:31.000
and I want you to click

14
00:00:31.000 --> 00:00:35.000
the new project button underneath Functions.

15
00:00:35.000 --> 00:00:38.003
Now, I'm going to browse and create a folder

16
00:00:38.003 --> 00:00:39.009
on my local machine

17
00:00:39.009 --> 00:00:47.000
in the proper directory called python-functions.

18
00:00:47.000 --> 00:00:50.005
And within there, I will select,

19
00:00:50.005 --> 00:00:52.004
now, I'm going to be asked for language.

20
00:00:52.004 --> 00:00:54.005
I'm using Python but you'll notice,

21
00:00:54.005 --> 00:00:56.001
we have several options here.

22
00:00:56.001 --> 00:00:58.003
So let's go ahead and select Python.

23
00:00:58.003 --> 00:01:00.005
I'm going to pick my local interpreter version,

24
00:01:00.005 --> 00:01:03.007
which is 394.

25
00:01:03.007 --> 00:01:06.008
Now I'm presented with a whole bunch of templates.

26
00:01:06.008 --> 00:01:08.006
These are different integration points

27
00:01:08.006 --> 00:01:10.007
within Azure Functions.

28
00:01:10.007 --> 00:01:15.002
For this demo, I'm going to choose the HTTP Trigger.

29
00:01:15.002 --> 00:01:16.008
And now I'm going to name this.

30
00:01:16.008 --> 00:01:23.000
So this will be python-lil-one.

31
00:01:23.000 --> 00:01:25.003
Now I'm asked for authorization level.

32
00:01:25.003 --> 00:01:26.007
For most use cases,

33
00:01:26.007 --> 00:01:29.006
you are not going to want to choose anonymous.

34
00:01:29.006 --> 00:01:31.002
We're going to choose that, however,

35
00:01:31.002 --> 00:01:34.000
so that we don't have to deal with Active Directory

36
00:01:34.000 --> 00:01:36.009
and making sure that we have proper permissions.

37
00:01:36.009 --> 00:01:39.002
So let's just go ahead and select anonymous.

38
00:01:39.002 --> 00:01:43.002
Again, don't do this for production.

39
00:01:43.002 --> 00:01:45.007
We're now given a local project

40
00:01:45.007 --> 00:01:46.009
and what's in that project,

41
00:01:46.009 --> 00:01:48.001
we have several files.

42
00:01:48.001 --> 00:01:51.000
So let's take a look at those real quick.

43
00:01:51.000 --> 00:01:52.008
The first file and the one that opens

44
00:01:52.008 --> 00:01:54.005
is our init file

45
00:01:54.005 --> 00:01:56.006
and this is where the Azure Function itself

46
00:01:56.006 --> 00:01:58.003
is going to initialize from

47
00:01:58.003 --> 00:02:01.000
and we're going to talk more about that in a minute.

48
00:02:01.000 --> 00:02:04.005
You'll also notice that we have a function.json file

49
00:02:04.005 --> 00:02:06.009
that describes a lot of the permissions

50
00:02:06.009 --> 00:02:09.008
and the other information that we've just set,

51
00:02:09.008 --> 00:02:11.008
including the type of trigger

52
00:02:11.008 --> 00:02:15.000
that this function responds to.

53
00:02:15.000 --> 00:02:16.008
We then have a sample data file

54
00:02:16.008 --> 00:02:19.007
and this is used when we're doing remote testing.

55
00:02:19.007 --> 00:02:22.005
We'll get more into that later.

56
00:02:22.005 --> 00:02:24.000
We have a function ignore,

57
00:02:24.000 --> 00:02:28.002
which tells the uploader to not include the files listed

58
00:02:28.002 --> 00:02:30.007
in this, much the same way you would do

59
00:02:30.007 --> 00:02:34.007
with a gitignore, which we also get out of the box.

60
00:02:34.007 --> 00:02:36.004
Now, there's a host.json file,

61
00:02:36.004 --> 00:02:39.009
which provides metadata for the Azure function.

62
00:02:39.009 --> 00:02:41.007
There's a local_settings.json,

63
00:02:41.007 --> 00:02:45.008
which provides you details about your local environment.

64
00:02:45.008 --> 00:02:49.000
Proxies.json, again what proxies are going

65
00:02:49.000 --> 00:02:50.001
to be involved.

66
00:02:50.001 --> 00:02:52.000
And then a requirements.txt file,

67
00:02:52.000 --> 00:02:54.001
which is pretty standard for Python

68
00:02:54.001 --> 00:02:57.005
to get all of the dependencies into your virtual environment

69
00:02:57.005 --> 00:02:59.002
that you need to run this

70
00:02:59.002 --> 00:03:00.009
and you'll notice Azure Functions

71
00:03:00.009 --> 00:03:03.005
are listed in the requirements.txt file

72
00:03:03.005 --> 00:03:04.006
and they have already been brought

73
00:03:04.006 --> 00:03:09.000
into the virtual environment by Visual Studio Code.

74
00:03:09.000 --> 00:03:12.006
So let's jump into this init.python file.

75
00:03:12.006 --> 00:03:15.000
Now, you'll see here on line nine

76
00:03:15.000 --> 00:03:17.004
that this responds to a query parameter

77
00:03:17.004 --> 00:03:20.001
with the name name.

78
00:03:20.001 --> 00:03:21.008
If it's not there, then it goes

79
00:03:21.008 --> 00:03:23.005
and inspects the body.

80
00:03:23.005 --> 00:03:25.006
Now, I don't like writing functions

81
00:03:25.006 --> 00:03:28.001
that have multiple ways of calling them.

82
00:03:28.001 --> 00:03:29.005
So I'm going to do this more the way

83
00:03:29.005 --> 00:03:31.005
that I would write this function

84
00:03:31.005 --> 00:03:33.006
if I were doing it in real life.

85
00:03:33.006 --> 00:03:37.006
So I'm going to delete everything from nine down.

86
00:03:37.006 --> 00:03:42.002
Now, our line seven has an info message for the logging.

87
00:03:42.002 --> 00:03:44.006
I don't like doing info messages

88
00:03:44.006 --> 00:03:46.005
for things like function start

89
00:03:46.005 --> 00:03:48.006
and that's really all that is.

90
00:03:48.006 --> 00:03:51.002
So we're going to go ahead and get rid of that

91
00:03:51.002 --> 00:03:53.004
and now we're going to set a body element

92
00:03:53.004 --> 00:03:54.006
and that body element

93
00:03:54.006 --> 00:03:56.006
is going to come from the request

94
00:03:56.006 --> 00:04:02.000
and we're going to get the JSON payload of our request.

95
00:04:02.000 --> 00:04:04.006
Then we're going to extract the message value out

96
00:04:04.006 --> 00:04:10.008
of that body element.

97
00:04:10.008 --> 00:04:13.006
And then we are going to get a count element out

98
00:04:13.006 --> 00:04:17.007
of our body as well.

99
00:04:17.007 --> 00:04:20.005
And then we're going to set up a dictionary for a response.

100
00:04:20.005 --> 00:04:23.001
I actually want to return a payload,

101
00:04:23.001 --> 00:04:24.008
so I'm going to use the dictionary to do that.

102
00:04:24.008 --> 00:04:28.004
That way I can use JSON dumps later on.

103
00:04:28.004 --> 00:04:32.008
Now, we'll do a simple for i in range

104
00:04:32.008 --> 00:04:35.009
with our count.

105
00:04:35.009 --> 00:04:37.008
I'm going to go and in the dictionary

106
00:04:37.008 --> 00:04:40.003
at i plus one

107
00:04:40.003 --> 00:04:42.004
because I don't like zero-based arrays

108
00:04:42.004 --> 00:04:44.003
in a response element.

109
00:04:44.003 --> 00:04:46.002
It's kind of nonsensical to somebody

110
00:04:46.002 --> 00:04:47.005
who's calling it

111
00:04:47.005 --> 00:04:50.002
that isn't really understanding things

112
00:04:50.002 --> 00:04:51.009
like zero-based arrays.

113
00:04:51.009 --> 00:04:54.003
So this is just how I'm going to do it now.

114
00:04:54.003 --> 00:04:55.009
It's definitely not a requirement.

115
00:04:55.009 --> 00:04:56.008
It's just going to show you

116
00:04:56.008 --> 00:04:58.003
that we can manipulate the data

117
00:04:58.003 --> 00:05:00.002
as we're going forward.

118
00:05:00.002 --> 00:05:02.007
Now, we're going to set that equal to our message.

119
00:05:02.007 --> 00:05:04.007
So in this case, whatever our count is,

120
00:05:04.007 --> 00:05:07.002
we should print that message that many times

121
00:05:07.002 --> 00:05:11.002
in a JSON body of a response.

122
00:05:11.002 --> 00:05:13.008
And now I'm going to have this function return

123
00:05:13.008 --> 00:05:18.003
and it's going to return function.HttpResponse

124
00:05:18.003 --> 00:05:22.000
and in that response, we'll do a json.dumps

125
00:05:22.000 --> 00:05:24.004
and we'll send the response.

126
00:05:24.004 --> 00:05:25.007
Now, in order to do that,

127
00:05:25.007 --> 00:05:30.007
I need to import json.

128
00:05:30.007 --> 00:05:33.008
That's all there is to the basic code.

129
00:05:33.008 --> 00:05:35.009
Let me show you the power, however,

130
00:05:35.009 --> 00:05:39.001
of the core tools that I asked you to install.

131
00:05:39.001 --> 00:05:41.003
We're going to run over here to run and debug

132
00:05:41.003 --> 00:05:46.002
and let's start up our Python process.

133
00:05:46.002 --> 00:05:48.000
You'll notice we get a URL

134
00:05:48.000 --> 00:05:50.001
and we definitely could hit that URL

135
00:05:50.001 --> 00:05:52.006
and have it do work for us.

136
00:05:52.006 --> 00:05:56.002
But instead, we're going to go to the Azure extension

137
00:05:56.002 --> 00:05:59.000
and you'll see we have a local project listed here.

138
00:05:59.000 --> 00:06:00.008
Open up the Functions

139
00:06:00.008 --> 00:06:03.000
and you'll see our function.

140
00:06:03.000 --> 00:06:05.006
Now, I want you to right click or Option + click on it

141
00:06:05.006 --> 00:06:08.009
and go to Execute Function Now.

142
00:06:08.009 --> 00:06:15.002
Now, in this we will pass a message.

143
00:06:15.002 --> 00:06:21.006
The message will be Hello LinkedIn Learning

144
00:06:21.006 --> 00:06:24.004
and then we're going to send a count element.

145
00:06:24.004 --> 00:06:28.000
That'll be an integer and we'll send six.

146
00:06:28.000 --> 00:06:30.000
Go ahead and close that out.

147
00:06:30.000 --> 00:06:32.008
And now hit Enter.

148
00:06:32.008 --> 00:06:34.001
And if everything goes well,

149
00:06:34.001 --> 00:06:37.001
you're going to see a little message box down here

150
00:06:37.001 --> 00:06:39.004
that said that the function was executed.

151
00:06:39.004 --> 00:06:41.000
Let's open that up

152
00:06:41.000 --> 00:06:44.004
and you'll see that the function was indeed executed

153
00:06:44.004 --> 00:06:45.009
and we got a response

154
00:06:45.009 --> 00:06:48.004
and the response is a JSON body

155
00:06:48.004 --> 00:06:49.005
that has our increment

156
00:06:49.005 --> 00:06:53.003
and on each increment, we print that message.

157
00:06:53.003 --> 00:06:54.002
Pretty simple.

158
00:06:54.002 --> 00:06:55.005
It's what we would expect

159
00:06:55.005 --> 00:06:57.001
but that's really all there is

160
00:06:57.001 --> 00:07:00.005
to writing a serverless Azure function.

161
00:07:00.005 --> 00:07:02.003
There's not much else.

162
00:07:02.003 --> 00:07:03.004
In our next video though,

163
00:07:03.004 --> 00:07:05.005
we're going to deploy this to Azure

164
00:07:05.005 --> 00:07:09.000
and actually interact with it in the cloud.

