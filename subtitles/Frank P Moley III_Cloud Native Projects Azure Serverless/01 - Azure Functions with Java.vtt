WEBVTT
1
00:00:00.005 --> 00:00:02.009
- [Instructor] Our next language is going to be Java.

2
00:00:02.009 --> 00:00:05.005
We're going to jump right into our IDE

3
00:00:05.005 --> 00:00:09.006
to take a look at Azure Functions using this language.

4
00:00:09.006 --> 00:00:10.009
So within my IDE,

5
00:00:10.009 --> 00:00:14.002
once again we're going to go to the Azure extension.

6
00:00:14.002 --> 00:00:17.007
We're going to create a new one.

7
00:00:17.007 --> 00:00:20.003
We'll select the folder that I'm in.

8
00:00:20.003 --> 00:00:23.000
I'm going to choose Java as the language.

9
00:00:23.000 --> 00:00:26.006
I'm going to use Java 11 Preview.

10
00:00:26.006 --> 00:00:28.008
And now I'm going to put in the group name for Maven

11
00:00:28.008 --> 00:00:36.001
and I'm going to call this com.frankmoley.lil.azurefx

12
00:00:36.001 --> 00:00:39.003
and we will leave the project name as java-functions.

13
00:00:39.003 --> 00:00:42.002
We'll leave the snapshot version

14
00:00:42.002 --> 00:00:44.008
and we'll leave the base package.

15
00:00:44.008 --> 00:00:46.007
We're going to go ahead and accept the default

16
00:00:46.007 --> 00:00:49.002
for the app name.

17
00:00:49.002 --> 00:00:50.007
Now, this is going to take a little bit

18
00:00:50.007 --> 00:00:53.005
so be patient while the archetype runs.

19
00:00:53.005 --> 00:00:54.008
So now that that's run,

20
00:00:54.008 --> 00:00:59.001
let's jump over into our code itself.

21
00:00:59.001 --> 00:01:00.000
The first thing that we're going to do

22
00:01:00.000 --> 00:01:02.008
is open up src, test,

23
00:01:02.008 --> 00:01:06.003
and we're going to delete our two test files for right now.

24
00:01:06.003 --> 00:01:07.008
Obviously, in the real world,

25
00:01:07.008 --> 00:01:10.000
you're not going to want to delete your test files

26
00:01:10.000 --> 00:01:12.001
but they're going to cause a lot of noise

27
00:01:12.001 --> 00:01:14.001
with the way that the archetype builds

28
00:01:14.001 --> 00:01:17.003
and it's outside the scope of this course.

29
00:01:17.003 --> 00:01:21.004
So let's go into our base package.

30
00:01:21.004 --> 00:01:26.006
Let's create a new file called Payload.java.

31
00:01:26.006 --> 00:01:29.000
We'll go ahead and set the package here

32
00:01:29.000 --> 00:01:31.008
to com.frankmoley

33
00:01:31.008 --> 00:01:35.003
and we're going to create a class

34
00:01:35.003 --> 00:01:42.002
called Payload and then we'll implement Serializable.

35
00:01:42.002 --> 00:01:44.002
Now, we're going to need a couple elements in here.

36
00:01:44.002 --> 00:01:45.004
So the first thing that we're going to do

37
00:01:45.004 --> 00:01:48.009
is a String called message.

38
00:01:48.009 --> 00:01:54.004
And the second one will be an int called count.

39
00:01:54.004 --> 00:02:14.004
And now we're going to set getters and setters for this.

40
00:02:14.004 --> 00:02:16.003
All right, now that we've got our getters and setters,

41
00:02:16.003 --> 00:02:18.006
let's go into our function itself.

42
00:02:18.006 --> 00:02:20.001
We're going to make a few changes

43
00:02:20.001 --> 00:02:22.004
to the default function that comes across

44
00:02:22.004 --> 00:02:24.004
from the archetype.

45
00:02:24.004 --> 00:02:25.005
First thing I'm going to do is get rid

46
00:02:25.005 --> 00:02:28.002
of some of these comments.

47
00:02:28.002 --> 00:02:34.002
We'll name our function JavaDemo.

48
00:02:34.002 --> 00:02:38.006
Now, I want to get rid of the get here.

49
00:02:38.006 --> 00:02:41.004
And just leave POST.

50
00:02:41.004 --> 00:02:46.001
And then I also want to change the HttpRequestMessage payload

51
00:02:46.001 --> 00:02:50.007
to go from a String to be Payload.

52
00:02:50.007 --> 00:02:56.007
All right, so let's get rid of lines 25 through 27 here.

53
00:02:56.007 --> 00:03:01.008
So now we're going to do a final Payload payload

54
00:03:01.008 --> 00:03:07.009
equals request.getBody.get

55
00:03:07.009 --> 00:03:10.005
and that'll get us around the optional.

56
00:03:10.005 --> 00:03:16.006
And I also want to create a list of Payload objects.

57
00:03:16.006 --> 00:03:22.009
We'll just call this response.

58
00:03:22.009 --> 00:03:28.001
Create a new ArrayList from that.

59
00:03:28.001 --> 00:03:34.000
And now we'll do a simple for loop here.

60
00:03:34.000 --> 00:03:35.007
All right, so now within that array,

61
00:03:35.007 --> 00:03:40.002
we are going to create

62
00:03:40.002 --> 00:03:43.006
a new instance.

63
00:03:43.006 --> 00:03:44.009
Now, the reason that we're doing this

64
00:03:44.009 --> 00:03:47.000
is we're going to actually use the same object

65
00:03:47.000 --> 00:03:48.009
on the inbound and the outbound

66
00:03:48.009 --> 00:03:50.005
because they look so similar

67
00:03:50.005 --> 00:03:51.007
for what we're doing.

68
00:03:51.007 --> 00:03:53.003
In the real world, you would never do this.

69
00:03:53.003 --> 00:03:55.000
You would have a model coming in

70
00:03:55.000 --> 00:03:57.002
and a formal response coming out.

71
00:03:57.002 --> 00:03:58.009
But for these purposes,

72
00:03:58.009 --> 00:04:00.009
it will work because what I want to show you

73
00:04:00.009 --> 00:04:03.003
is how to actually return an array

74
00:04:03.003 --> 00:04:05.005
of elements and have it formatted to JSON

75
00:04:05.005 --> 00:04:08.003
because that's the most important part of this.

76
00:04:08.003 --> 00:04:12.002
So let's go ahead and populate this object.

77
00:04:12.002 --> 00:04:14.006
So we will simply set the count equal

78
00:04:14.006 --> 00:04:17.006
to the current iteration.

79
00:04:17.006 --> 00:04:22.004
And we will set the message

80
00:04:22.004 --> 00:04:25.009
equal to the message from our payload.

81
00:04:25.009 --> 00:04:30.004
And then, of course, we need to set our response.add

82
00:04:30.004 --> 00:04:35.003
equal to our response element.

83
00:04:35.003 --> 00:04:42.009
So now we can go ahead and delete line 34.

84
00:04:42.009 --> 00:04:47.006
And we'll delete everything below this return statement.

85
00:04:47.006 --> 00:04:51.008
Now, we're going to set our ResponseBuilder.

86
00:04:51.008 --> 00:04:55.007
We'll set the status to OK.

87
00:04:55.007 --> 00:04:58.001
Now, for our body, since it takes an object,

88
00:04:58.001 --> 00:05:03.002
we're simply going to send back our response element.

89
00:05:03.002 --> 00:05:05.001
So now we'll get payload in

90
00:05:05.001 --> 00:05:07.007
and that payload will be in the form of JSON

91
00:05:07.007 --> 00:05:09.008
and we'll spit out JSON.

92
00:05:09.008 --> 00:05:11.006
Now, there's one more thing that we need to do

93
00:05:11.006 --> 00:05:13.004
because Visual Studio Code

94
00:05:13.004 --> 00:05:16.003
doesn't automatically import these.

95
00:05:16.003 --> 00:05:22.007
We need to go import java.util.list

96
00:05:22.007 --> 00:05:29.005
and import java.util.ArrayList.

97
00:05:29.005 --> 00:05:33.005
And now we can run our function.

98
00:05:33.005 --> 00:05:35.001
Now, it may take a little bit to get to this point

99
00:05:35.001 --> 00:05:36.006
but once you have a build success

100
00:05:36.006 --> 00:05:38.001
that's actually built,

101
00:05:38.001 --> 00:05:42.002
so now you can go into your Azure extension,

102
00:05:42.002 --> 00:05:45.002
go to your read-only functions,

103
00:05:45.002 --> 00:05:48.008
right click and Execute Function Now.

104
00:05:48.008 --> 00:05:58.008
So we will put in here a message.

105
00:05:58.008 --> 00:06:01.002
Hello from Java

106
00:06:01.002 --> 00:06:06.004
and we will send a count of five.

107
00:06:06.004 --> 00:06:08.005
And we'll hit Enter.

108
00:06:08.005 --> 00:06:11.009
I'm going to get rid of some of these popups here

109
00:06:11.009 --> 00:06:14.007
but you'll see that we did get a response body out.

110
00:06:14.007 --> 00:06:16.005
And that response body has the count,

111
00:06:16.005 --> 00:06:19.003
which is the counter, the number of times we ran it,

112
00:06:19.003 --> 00:06:21.008
as well as the element itself.

113
00:06:21.008 --> 00:06:24.000
So that's what we would expect to see

114
00:06:24.000 --> 00:06:26.009
by passing in a value of five, we got five out.

115
00:06:26.009 --> 00:06:28.005
Again, it's a zero-based array.

116
00:06:28.005 --> 00:06:30.003
We could have modified that

117
00:06:30.003 --> 00:06:32.009
but for the purpose of this, we've done just fine.

118
00:06:32.009 --> 00:06:34.001
So in our next video,

119
00:06:34.001 --> 00:06:36.004
we're going to upload this to Azure

120
00:06:36.004 --> 00:06:41.000
and run it as a true Azure function within that ecosystem.

