WEBVTT
1
00:00:00.009 --> 00:00:02.004
- [Narrator] Before we get too deep,

2
00:00:02.004 --> 00:00:04.009
let's take a look at what serverless is,

3
00:00:04.009 --> 00:00:09.000
and how it operates at a conceptual level.

4
00:00:09.000 --> 00:00:11.002
Now, many times you may hear the word serverless

5
00:00:11.002 --> 00:00:14.009
and immediately think, well, there's no server.

6
00:00:14.009 --> 00:00:16.000
Well, that's not true.

7
00:00:16.000 --> 00:00:18.007
There obviously is a server.

8
00:00:18.007 --> 00:00:22.005
The difference here is that you are paying for operations

9
00:00:22.005 --> 00:00:25.000
not for the server itself.

10
00:00:25.000 --> 00:00:26.002
And there's a reason for this.

11
00:00:26.002 --> 00:00:28.002
This allows the cloud provider

12
00:00:28.002 --> 00:00:31.001
to aggregate a whole bunch of functions

13
00:00:31.001 --> 00:00:36.000
instead of you dedicating that VM hardware for downtime.

14
00:00:36.000 --> 00:00:39.002
So again, you're not paying to run a VM,

15
00:00:39.002 --> 00:00:41.002
you're paying for the operations.

16
00:00:41.002 --> 00:00:43.003
But there is still a server

17
00:00:43.003 --> 00:00:47.004
even though this technology name is serverless.

18
00:00:47.004 --> 00:00:52.002
Another aspect is you are not managing the time of VM.

19
00:00:52.002 --> 00:00:55.004
Now even in cloud where the VM is controlled

20
00:00:55.004 --> 00:00:57.001
by cloud infrastructure,

21
00:00:57.001 --> 00:01:00.001
you still have maintenance of a running VM,

22
00:01:00.001 --> 00:01:02.004
whatever form of compute it is.

23
00:01:02.004 --> 00:01:04.005
So that is where the benefit comes from,

24
00:01:04.005 --> 00:01:07.008
is not only are you not paying 24 hours a day,

25
00:01:07.008 --> 00:01:10.001
seven days a week for the VM,

26
00:01:10.001 --> 00:01:11.006
but you're not managing it.

27
00:01:11.006 --> 00:01:14.007
Dealing with upgrades, dealing with nodes dying,

28
00:01:14.007 --> 00:01:16.005
dealing with any of the other aspects

29
00:01:16.005 --> 00:01:19.000
that come with management of the VM

30
00:01:19.000 --> 00:01:21.004
even in cloud infrastructure.

31
00:01:21.004 --> 00:01:23.008
Now this may a little bit confusing

32
00:01:23.008 --> 00:01:26.006
as to why this is offered.

33
00:01:26.006 --> 00:01:31.006
And the key here is that it provides maximum utilization

34
00:01:31.006 --> 00:01:34.005
of the compute time itself.

35
00:01:34.005 --> 00:01:39.003
A cloud provider can take and pair cyclical workloads

36
00:01:39.003 --> 00:01:42.008
such that the maximum capacity of the VM

37
00:01:42.008 --> 00:01:45.008
is achieved throughout the entire day,

38
00:01:45.008 --> 00:01:48.003
as opposed to you out in the VM,

39
00:01:48.003 --> 00:01:51.002
where it's only achieving maximum throughput

40
00:01:51.002 --> 00:01:54.003
at given times of the day.

41
00:01:54.003 --> 00:01:58.000
Now this allows the provider to leverage many workloads

42
00:01:58.000 --> 00:02:02.002
on a group of VMs instead of you getting the leverage

43
00:02:02.002 --> 00:02:04.002
of that group yourself.

44
00:02:04.002 --> 00:02:07.005
This allows them to maximize the value again

45
00:02:07.005 --> 00:02:11.006
and do so in a way that is cost-effective for you

46
00:02:11.006 --> 00:02:14.000
and for them.

47
00:02:14.000 --> 00:02:17.006
Now, there are many, many workloads that this applies to

48
00:02:17.006 --> 00:02:21.001
that make it very attractive.

49
00:02:21.001 --> 00:02:23.004
Now, I want to take a look at this concept

50
00:02:23.004 --> 00:02:25.005
of cyclical workloads.

51
00:02:25.005 --> 00:02:29.002
Now, I'm going to give you a very exaggerated view

52
00:02:29.002 --> 00:02:31.000
of a cyclical workload,

53
00:02:31.000 --> 00:02:35.004
and I have never seen a real one that is this cyclical,

54
00:02:35.004 --> 00:02:39.001
but, I have seen workloads that mimic this,

55
00:02:39.001 --> 00:02:41.002
is just not a pure sine wave

56
00:02:41.002 --> 00:02:44.000
which is what I'm going to provide.

57
00:02:44.000 --> 00:02:46.009
Now, the idea here is that we have a single process

58
00:02:46.009 --> 00:02:47.009
that is running,

59
00:02:47.009 --> 00:02:50.002
and you'll see throughout the day, throughout the week,

60
00:02:50.002 --> 00:02:53.002
throughout the year that you have peak times

61
00:02:53.002 --> 00:02:55.009
and valleys within this workload.

62
00:02:55.009 --> 00:02:58.009
Now, again, this varies by provider,

63
00:02:58.009 --> 00:03:01.002
and it varies by situation.

64
00:03:01.002 --> 00:03:03.005
But you'll see these peaks and valleys

65
00:03:03.005 --> 00:03:06.006
throughout the life cycle of an application

66
00:03:06.006 --> 00:03:09.005
running on a single VM.

67
00:03:09.005 --> 00:03:11.002
Now in the serverless world,

68
00:03:11.002 --> 00:03:14.009
we can take and add another cyclical workload

69
00:03:14.009 --> 00:03:17.000
on this series of VMs.

70
00:03:17.000 --> 00:03:18.001
And what you see here

71
00:03:18.001 --> 00:03:21.000
is that even though we still have peaks and valleys

72
00:03:21.000 --> 00:03:22.007
of a single flow,

73
00:03:22.007 --> 00:03:25.002
we've now filled those peaks and valleys

74
00:03:25.002 --> 00:03:26.008
with a another process,

75
00:03:26.008 --> 00:03:30.009
such that the peak of one may mimic the valley of another.

76
00:03:30.009 --> 00:03:35.001
And we're getting more utilization on this VM pool.

77
00:03:35.001 --> 00:03:38.002
Now, if we add yet another workflow,

78
00:03:38.002 --> 00:03:40.003
you will see that we've reduced the time

79
00:03:40.003 --> 00:03:42.003
where we're not under peak workload,

80
00:03:42.003 --> 00:03:46.000
and we've reduced the time where we're not under a valley

81
00:03:46.000 --> 00:03:47.009
to be as small as possible.

82
00:03:47.009 --> 00:03:50.008
Now, obviously a VM is not going to just run

83
00:03:50.008 --> 00:03:52.009
three serverless functions,

84
00:03:52.009 --> 00:03:55.006
ideally, it's going to run hundreds or thousands

85
00:03:55.006 --> 00:03:57.006
in a pool of VMs,

86
00:03:57.006 --> 00:04:00.005
and this allows them to get maximum throughput

87
00:04:00.005 --> 00:04:03.008
across the workload the entire time.

88
00:04:03.008 --> 00:04:06.009
Now you may step back in question this whole idea

89
00:04:06.009 --> 00:04:08.007
of cyclical workloads,

90
00:04:08.007 --> 00:04:11.009
but I encourage you to take a look at what actually happens

91
00:04:11.009 --> 00:04:13.005
on your services.

92
00:04:13.005 --> 00:04:15.003
If you run cron operations,

93
00:04:15.003 --> 00:04:18.000
you'll see that they peak and then they go dormant

94
00:04:18.000 --> 00:04:19.008
for a period of time.

95
00:04:19.008 --> 00:04:23.003
You can see this same utilization across industries,

96
00:04:23.003 --> 00:04:25.005
look at something like e-commerce,

97
00:04:25.005 --> 00:04:27.007
where during the holiday shopping season,

98
00:04:27.007 --> 00:04:30.007
you see a ramp up in technology usage

99
00:04:30.007 --> 00:04:35.000
and then a ramp down after the holiday season is over.

