WEBVTT
1
00:00:00.005 --> 00:00:03.000
- [Instructor] Azure functions as a compute service

2
00:00:03.000 --> 00:00:04.006
from Microsoft Azure

3
00:00:04.006 --> 00:00:07.004
that allows you to run serverless functions

4
00:00:07.004 --> 00:00:11.005
without provisioning or managing virtual servers

5
00:00:11.005 --> 00:00:12.006
in the cloud.

6
00:00:12.006 --> 00:00:16.009
This runtime is scalable and can be multi-tenant

7
00:00:16.009 --> 00:00:20.009
without managing any infrastructure at all.

8
00:00:20.009 --> 00:00:24.008
Azure functions offer a robust set of language support

9
00:00:24.008 --> 00:00:27.005
making this technology more open

10
00:00:27.005 --> 00:00:30.003
for a wide variety of developers.

11
00:00:30.003 --> 00:00:32.004
Azure functions, natively support

12
00:00:32.004 --> 00:00:35.001
some of the most popular languages used

13
00:00:35.001 --> 00:00:37.005
in cloud native computing today

14
00:00:37.005 --> 00:00:40.006
including things like Java and Python.

15
00:00:40.006 --> 00:00:42.000
There's also native support

16
00:00:42.000 --> 00:00:44.001
for some other languages like Ruby,

17
00:00:44.001 --> 00:00:47.009
C-sharp, Node JS and even PowerShell.

18
00:00:47.009 --> 00:00:51.000
There's custom support for Go and Rust

19
00:00:51.000 --> 00:00:53.004
through a custom handler definition.

20
00:00:53.004 --> 00:00:56.003
Like many cloud-based service providers

21
00:00:56.003 --> 00:01:00.005
Azure functions include the ability to trigger functions

22
00:01:00.005 --> 00:01:04.002
based on actions and other cloud infrastructure

23
00:01:04.002 --> 00:01:08.003
including message and event systems, databases and storage

24
00:01:08.003 --> 00:01:12.003
and various other systems throughout the ecosystem.

25
00:01:12.003 --> 00:01:15.000
As your functions as a serverless technology

26
00:01:15.000 --> 00:01:17.000
in the Azure ecosystem,

27
00:01:17.000 --> 00:01:20.009
plays very nicely with many of these other Azure offerings

28
00:01:20.009 --> 00:01:22.004
as I just said,

29
00:01:22.004 --> 00:01:25.005
Azure functions can be used to process data

30
00:01:25.005 --> 00:01:29.004
or binary files through simple triggers in Azure.

31
00:01:29.004 --> 00:01:33.008
Changes in Blob store, RDS or Cosmos DB, for instance

32
00:01:33.008 --> 00:01:37.001
can trigger an Azure function to do work.

33
00:01:37.001 --> 00:01:39.003
And of course, they can do the opposite

34
00:01:39.003 --> 00:01:42.006
and write to Blob store or Cosmos DB.

35
00:01:42.006 --> 00:01:46.002
Azure functions can be used to respond to web requests

36
00:01:46.002 --> 00:01:49.002
through HTTP or Webhooks.

37
00:01:49.002 --> 00:01:52.000
Data streams are a powerful option,

38
00:01:52.000 --> 00:01:54.007
Asynchronous processing through integrations

39
00:01:54.007 --> 00:01:56.008
with things like Rabbit and Kafka.

40
00:01:56.008 --> 00:02:00.008
And this is really one of the most popular places to start

41
00:02:00.008 --> 00:02:03.001
with serverless functions.

42
00:02:03.001 --> 00:02:05.008
And for some use cases, IOT itself

43
00:02:05.008 --> 00:02:10.006
is a powerful integration point with Azure's IOT hub.

44
00:02:10.006 --> 00:02:12.003
And that really isn't it.

45
00:02:12.003 --> 00:02:15.005
You can create Azure functions that are durable

46
00:02:15.005 --> 00:02:19.006
meaning they maintain state if you choose to do so.

47
00:02:19.006 --> 00:02:20.008
The bounds are endless

48
00:02:20.008 --> 00:02:23.006
with Microsoft Azure serverless functions,

49
00:02:23.006 --> 00:02:26.003
but you have to know where they're valid

50
00:02:26.003 --> 00:02:27.004
and where they're not.

51
00:02:27.004 --> 00:02:30.008
And we're going to talk about that in the videos coming up.

52
00:02:30.008 --> 00:02:34.002
Now, Azure has provided many operational tools

53
00:02:34.002 --> 00:02:38.003
around Azure functions to make it a truly effective system

54
00:02:38.003 --> 00:02:40.003
for application development.

55
00:02:40.003 --> 00:02:44.000
Out of the box the console itself provides base

56
00:02:44.000 --> 00:02:46.005
but oftentimes rich enough monitoring

57
00:02:46.005 --> 00:02:49.004
of your Azure function executions.

58
00:02:49.004 --> 00:02:52.000
You can of course build customized dashboards

59
00:02:52.000 --> 00:02:55.000
if your operational needs demand it.

60
00:02:55.000 --> 00:02:58.006
Microsoft provides Azure functions core tools

61
00:02:58.006 --> 00:03:01.006
a robust offering of CLI based tools

62
00:03:01.006 --> 00:03:06.002
that include the ability to test these functions locally.

63
00:03:06.002 --> 00:03:08.008
This is one of the best in class

64
00:03:08.008 --> 00:03:12.004
for testing serverless functions without deploying them.

65
00:03:12.004 --> 00:03:14.007
And it's a requirement to have this installed

66
00:03:14.007 --> 00:03:17.006
on your machine for this course.

67
00:03:17.006 --> 00:03:20.001
Now, when it comes time to deploy,

68
00:03:20.001 --> 00:03:23.003
Azure functions provide many different paths

69
00:03:23.003 --> 00:03:25.007
some of which we will look at through this course

70
00:03:25.007 --> 00:03:29.008
including a very rich IDE integration

71
00:03:29.008 --> 00:03:31.006
with visual studio code

72
00:03:31.006 --> 00:03:35.005
and that's primarily what we're going to use in this course.

73
00:03:35.005 --> 00:03:38.005
Now that we've seen what Azure functions offer,

74
00:03:38.005 --> 00:03:42.006
let's take a look at serverless and what it offers,

75
00:03:42.006 --> 00:03:46.000
its benefits as well as its detriments.

