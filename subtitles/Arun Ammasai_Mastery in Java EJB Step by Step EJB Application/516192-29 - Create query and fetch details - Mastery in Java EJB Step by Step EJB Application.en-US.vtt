WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.205
Hello everyone, Welcome back.

00:00:02.205 --> 00:00:04.545
It's an epidays example. We use renamed caries, right?

00:00:04.545 --> 00:00:08.115
So you might be thinking, how can I do it on normal query,

00:00:08.115 --> 00:00:09.975
which means normal Egypt, Greece.

00:00:09.975 --> 00:00:13.050
So what I can do is let's go back to our mother implementation on here.

00:00:13.050 --> 00:00:15.000
What we're doing. We are using Create Named

00:00:15.000 --> 00:00:18.400
create far now I'm going to come on this one out.

00:00:19.580 --> 00:00:21.945
Let's see how we can do that.

00:00:21.945 --> 00:00:23.340
So E m dot.

00:00:23.340 --> 00:00:25.140
So instead of create name Dakota,

00:00:25.140 --> 00:00:32.745
you can simply use Create query where you can pass the quoted directly.

00:00:32.745 --> 00:00:33.910
Okay?

00:00:33.910 --> 00:00:36.950
So here you might be thinking what are the coriander to pass?

00:00:36.950 --> 00:00:39.710
Whether it is a named query or it is an ordinal create Cory,

00:00:39.710 --> 00:00:42.410
it's still going to be this same EGB query.

00:00:42.410 --> 00:00:49.430
Just copy this and go back payer bean and provide the same query here.

00:00:49.430 --> 00:00:53.760
And everything else remains the same.

00:00:54.880 --> 00:00:57.690
And so we'll see.

00:01:03.220 --> 00:01:05.420
So let's do that.

00:01:05.420 --> 00:01:10.410
Control C and paste it here.

00:01:10.810 --> 00:01:13.790
See, everything remains the same.

00:01:13.790 --> 00:01:15.290
All you need to do use whether you're using

00:01:15.290 --> 00:01:17.795
Create query or you are using and create named query.

00:01:17.795 --> 00:01:20.795
If it is the named degree, it has to be inside the entity.

00:01:20.795 --> 00:01:22.085
If it is an ordinal query,

00:01:22.085 --> 00:01:23.600
you can use simply is create query,

00:01:23.600 --> 00:01:26.945
but make sure we are using still object oriented query here.

00:01:26.945 --> 00:01:28.760
Okay, so I just made a change, right?

00:01:28.760 --> 00:01:30.200
All we need to just wait for some more time.

00:01:30.200 --> 00:01:32.480
See it automatically gets deployed here.

00:01:32.480 --> 00:01:36.050
So each diploid 654 and text before, right.

00:01:36.050 --> 00:01:40.430
So now let's go back to our test client and we'll try to test out before

00:01:40.430 --> 00:01:45.920
let's clear the console just in case if you have any existing outputs.

00:01:45.920 --> 00:01:48.005
Okay, so just clear this.

00:01:48.005 --> 00:01:54.779
And then let's run the client as a Java application and wait for a few more seconds.

00:01:58.120 --> 00:02:01.040
Okay, so we got the outcome,

00:02:01.040 --> 00:02:02.645
right, which is pretty good.

00:02:02.645 --> 00:02:07.565
So now we know how to use a create gray and how do you create a named query.

00:02:07.565 --> 00:02:11.240
And we have seen very simple sessile guess there are a lot of things still existing,

00:02:11.240 --> 00:02:14.165
how to join, and I'll talk about that one by one.

00:02:14.165 --> 00:02:16.880
So we tried to create query and create a named query.

00:02:16.880 --> 00:02:22.130
The next thing important is how we can use the create native Corey I have SQL query.

00:02:22.130 --> 00:02:23.390
I want to run it directly.

00:02:23.390 --> 00:02:25.340
I don't want to use any Egypt because

00:02:25.340 --> 00:02:28.085
the language because I don't know maybe my Corey is complex.

00:02:28.085 --> 00:02:30.965
So if I want to use my escalatory, how we can do that?

00:02:30.965 --> 00:02:33.920
We can use the native query to execute those kinda,

00:02:33.920 --> 00:02:36.480
of course, we'll see that in the next video.
