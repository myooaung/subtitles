WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.905
Hello everyone, Welcome back.

00:00:01.905 --> 00:00:04.905
So we created a queue, right?

00:00:04.905 --> 00:00:06.300
So now what we need to do,

00:00:06.300 --> 00:00:08.835
we have to post a message to check whether

00:00:08.835 --> 00:00:12.180
the message was fair posting whether it is reaching to our q.

00:00:12.180 --> 00:00:12.765
Okay.

00:00:12.765 --> 00:00:14.490
So in our test package,

00:00:14.490 --> 00:00:16.950
I'm going to create a one mole file

00:00:16.950 --> 00:00:19.875
to test whether the message is posting properly or not.

00:00:19.875 --> 00:00:22.695
So I'm going to create a new class here,

00:00:22.695 --> 00:00:25.780
and I'm going to call it as.

00:00:27.190 --> 00:00:30.470
So maybe you can call a post message to Yemen,

00:00:30.470 --> 00:00:35.539
skew post message to GMS.

00:00:35.539 --> 00:00:36.810
Q.

00:00:38.830 --> 00:00:40.445
Okay.

00:00:40.445 --> 00:00:43.700
So if if I had to type the entire code,

00:00:43.700 --> 00:00:45.080
it might take a while.

00:00:45.080 --> 00:00:46.280
So what I'm gonna do,

00:00:46.280 --> 00:00:49.235
I'm gonna copy paste each and every blog.

00:00:49.235 --> 00:00:53.240
And I'm going to explain you what it is exactly trying to do.

00:00:53.240 --> 00:00:55.310
Okay, so first thing, what do we need?

00:00:55.310 --> 00:00:58.715
We need to have the GMS connection factory, correct?

00:00:58.715 --> 00:01:00.020
So what I'm gonna do,

00:01:00.020 --> 00:01:01.790
I'm going to create our variable here,

00:01:01.790 --> 00:01:04.235
string and GOMS factory.

00:01:04.235 --> 00:01:10.520
So j m is underscore factory because we know the GMS factor,

00:01:10.520 --> 00:01:12.935
that is nothing but the connection factory.

00:01:12.935 --> 00:01:19.340
So maybe I can call it as a GMS connection factor.

00:01:19.340 --> 00:01:22.520
I'm just keeping it as a capital, right?

00:01:22.520 --> 00:01:25.535
So which means it has to be a final, right?

00:01:25.535 --> 00:01:30.995
So final, and let's copy the same code here

00:01:30.995 --> 00:01:36.380
and just paste it again and control V. And here what we're going to do,

00:01:36.380 --> 00:01:39.500
we need the TMS queue name, right?

00:01:39.500 --> 00:01:47.015
So a j, m underscore Q and this code name.

00:01:47.015 --> 00:01:50.675
Okay, So let's go back to the browser and we'll copy the information here.

00:01:50.675 --> 00:01:54.995
So we need to go to the gym as module and then open the module.

00:01:54.995 --> 00:01:57.545
And here we should be able to see the change the name.

00:01:57.545 --> 00:01:59.645
So this is all connection factory.

00:01:59.645 --> 00:02:02.555
Copy this and go back to our browser, I mean,

00:02:02.555 --> 00:02:06.320
our Eclipse and paste it here.

00:02:06.320 --> 00:02:07.895
So it is a ton I can factor now,

00:02:07.895 --> 00:02:10.040
we need to copy the queue name aswell.

00:02:10.040 --> 00:02:13.250
Just copy this name and go back to our code and then we'll

00:02:13.250 --> 00:02:17.075
keep the GMS management Q here.

00:02:17.075 --> 00:02:18.875
I mean the auto management Q here.

00:02:18.875 --> 00:02:22.910
So the next important thing is we need to get

00:02:22.910 --> 00:02:29.179
the initial context because we have this information available in our blood decelerate.

00:02:29.179 --> 00:02:34.690
So we need to retrieve the information from our WebLogic server.

00:02:34.690 --> 00:02:36.175
So you guys remember, right?

00:02:36.175 --> 00:02:38.350
So when we create a session when gland,

00:02:38.350 --> 00:02:40.600
we have the get initial context matter and

00:02:40.600 --> 00:02:43.675
this initial contact materials going to be used in multiple places.

00:02:43.675 --> 00:02:47.169
So what we're gonna do is we're going to create

00:02:47.169 --> 00:02:53.335
a separate class where we can keep all the, uh, helping methods.

00:02:53.335 --> 00:02:54.550
So what I'm gonna do here,

00:02:54.550 --> 00:02:57.250
I'm going to create a new class here.

00:02:57.250 --> 00:03:02.935
I'm going to call it as a EGB being a helper, hyper.

00:03:02.935 --> 00:03:04.990
So basically what I'm trying to do here,

00:03:04.990 --> 00:03:09.310
I'm going to copy this, get initial condition.

00:03:09.310 --> 00:03:16.395
Let me cut the entire mat and keep it inside the bin helper.

00:03:16.395 --> 00:03:18.770
So let's keep it here.

00:03:18.770 --> 00:03:22.130
And so the moment you provide or they

00:03:22.130 --> 00:03:25.040
get initially meant that gear because they cut and pasted here, right.

00:03:25.040 --> 00:03:28.970
So obviously we'll have an issue here because this matter is not visible here anymore.

00:03:28.970 --> 00:03:31.535
So since it is a static method, what I'm gonna do,

00:03:31.535 --> 00:03:33.425
I'm gonna use AGB,

00:03:33.425 --> 00:03:37.445
been helper, dot, get initial context.

00:03:37.445 --> 00:03:39.200
Symptoms are we need to do.

00:03:39.200 --> 00:03:40.805
Okay, so the next thing,

00:03:40.805 --> 00:03:43.625
Let's go back to our game SQL,

00:03:43.625 --> 00:03:46.700
where we tried to post a message, right?

00:03:46.700 --> 00:03:50.855
So let's try to get some basic information here.

00:03:50.855 --> 00:03:53.780
So I'm going to copy paste the code for now.

00:03:53.780 --> 00:03:59.210
So these are the necessary information which we are looking

00:03:59.210 --> 00:04:03.800
for C and just paste it here actually.

00:04:03.800 --> 00:04:06.349
So these are the necessary.

00:04:06.349 --> 00:04:11.300
So let's import the packages James Q,

00:04:11.300 --> 00:04:14.030
and wood and everything.

00:04:14.030 --> 00:04:17.135
According to that, everything's Java x dot J MS.

00:04:17.135 --> 00:04:19.490
Okay, so next thing what I'm gonna do is I'm going

00:04:19.490 --> 00:04:22.250
to matter because we just the instance here,

00:04:22.250 --> 00:04:24.170
but we need to assign the value to your right.

00:04:24.170 --> 00:04:28.565
So what I'm gonna do is I'm going to create a simple matter like a ward method.

00:04:28.565 --> 00:04:33.650
So public void in it.

00:04:33.650 --> 00:04:34.970
So in this particular matter,

00:04:34.970 --> 00:04:38.060
what I'm gonna do is I'm going to perform, I mean,

00:04:38.060 --> 00:04:42.230
I'm going to add the values for these factories.

00:04:42.230 --> 00:04:44.255
Okay?

00:04:44.255 --> 00:04:46.415
And, uh, for this matter,

00:04:46.415 --> 00:04:47.600
I need two important things.

00:04:47.600 --> 00:04:49.520
I need q Nim at the same time,

00:04:49.520 --> 00:04:52.640
I need the, the WebLogic server context as well.

00:04:52.640 --> 00:04:56.310
So I'm going to provide context here.

00:04:58.270 --> 00:05:02.060
And we need to have our Q NIM, right?

00:05:02.060 --> 00:05:03.540
So.

00:05:04.570 --> 00:05:07.200
Q and M.

00:05:07.420 --> 00:05:10.460
Okay, so let me do something.

00:05:10.460 --> 00:05:11.510
I had the code,

00:05:11.510 --> 00:05:14.030
so let me call the pasted here so I can explain that to

00:05:14.030 --> 00:05:18.215
you until see here and Control V. Okay,

00:05:18.215 --> 00:05:20.840
so if we take a look at the piece of code,

00:05:20.840 --> 00:05:25.170
let me modify it so I can explain it to you.

00:05:26.200 --> 00:05:28.370
Jam session.

00:05:28.370 --> 00:05:29.195
Okay.

00:05:29.195 --> 00:05:31.625
So this is James, frankly.

00:05:31.625 --> 00:05:34.350
And what does the gym instructor here?

00:05:34.540 --> 00:05:38.310
Okay, let's create a James factor here.

00:05:41.740 --> 00:05:46.290
Don't GMS factory.

00:05:46.600 --> 00:05:51.680
So normal Dame's factor is nothing but this is the James factory.

00:05:51.680 --> 00:05:55.140
I mean, our WebLogic factory.

00:05:55.570 --> 00:05:59.220
So James factor here.

00:05:59.500 --> 00:06:02.300
No, it's not our initial contact structure

00:06:02.300 --> 00:06:04.505
because this is the WebLogic initial contacts factory.

00:06:04.505 --> 00:06:08.750
So what we're looking for a is same as the connection factory.

00:06:08.750 --> 00:06:09.995
We have it here, okay?

00:06:09.995 --> 00:06:19.295
So copper basin here and copy the connection factory and paste it here.

00:06:19.295 --> 00:06:21.440
Okay, so now it is done.

00:06:21.440 --> 00:06:22.730
So let's see what are the external.

00:06:22.730 --> 00:06:24.890
So we needed rule and the exception

00:06:24.890 --> 00:06:27.545
also here because we are handling with the QRS, Right?

00:06:27.545 --> 00:06:31.820
So throws exception.

00:06:31.820 --> 00:06:34.445
Okay, so now we are good to go.

00:06:34.445 --> 00:06:38.240
So here I have a connection factory because we have other contexts, right?

00:06:38.240 --> 00:06:40.340
We did not even WebLogic, subtle context.

00:06:40.340 --> 00:06:43.070
In the context you will get everything, whatever we need.

00:06:43.070 --> 00:06:46.055
So first thing I'm trying to retrieve the connection factory,

00:06:46.055 --> 00:06:48.065
and then I'm creating a connection,

00:06:48.065 --> 00:06:50.390
and then I'm creating a new session because

00:06:50.390 --> 00:06:52.655
I'm going to pull the information from the queue.

00:06:52.655 --> 00:06:54.980
So with that, I'm going to post a message.

00:06:54.980 --> 00:06:57.020
And what are the queue name here?

00:06:57.020 --> 00:06:59.780
Because that unum, which we're going to pass to

00:06:59.780 --> 00:07:03.155
this particular matter along with the context.

00:07:03.155 --> 00:07:06.095
And then under the decision,

00:07:06.095 --> 00:07:08.390
we have a method called create Center,

00:07:08.390 --> 00:07:13.430
where you can post your message and which Q,

00:07:13.430 --> 00:07:18.019
we're going to blow it as the parameter to create central method and then desert message.

00:07:18.019 --> 00:07:20.795
Just use Session.get create message.

00:07:20.795 --> 00:07:24.605
So the moment you call the create extra message, what'll happen?

00:07:24.605 --> 00:07:27.440
We have the queue message ready.

00:07:27.440 --> 00:07:31.430
And the moment when you try to start the method obviously

00:07:31.430 --> 00:07:35.405
already happened that you connection.

00:07:35.405 --> 00:07:36.830
So the connections established,

00:07:36.830 --> 00:07:38.660
which means the message which we can zoom.

00:07:38.660 --> 00:07:42.785
I mean, with age we manipulated that is going to post it into the queue.

00:07:42.785 --> 00:07:45.470
Okay, so the next thing,

00:07:45.470 --> 00:07:49.280
what I'm gonna do is the next thing

00:07:49.280 --> 00:07:52.550
I'm going to write a month or it might be looked up big program.

00:07:52.550 --> 00:07:54.920
But once you understand each and every step,

00:07:54.920 --> 00:07:57.665
which is pretty easy to understand.

00:07:57.665 --> 00:08:00.770
So the next thing, we're going to create a method to sentiment stations.

00:08:00.770 --> 00:08:03.830
So public. While.

00:08:03.830 --> 00:08:06.965
And I sent, and what I'm going to send,

00:08:06.965 --> 00:08:09.380
I'm going to send a string message.

00:08:09.380 --> 00:08:12.575
String message.

00:08:12.575 --> 00:08:18.810
Anyway, we need to capture it with the exception, clause, exception.

00:08:19.840 --> 00:08:22.565
Okay, so what are the next thing that you're gonna do?

00:08:22.565 --> 00:08:24.980
So I have the message which needs to be sent.

00:08:24.980 --> 00:08:28.040
And here we have a message which is a text message.

00:08:28.040 --> 00:08:31.760
This message will be added into the session so that when the moment

00:08:31.760 --> 00:08:35.975
you call the start method this particular session pass this message to the queue.

00:08:35.975 --> 00:08:41.405
So what I'm gonna do here is simple message dot setText.

00:08:41.405 --> 00:08:43.415
So in their setText, what I'm gonna do,

00:08:43.415 --> 00:08:47.255
I'm gonna pass the message that is the input for the mantle, right?

00:08:47.255 --> 00:08:49.790
And then the next thing,

00:08:49.790 --> 00:08:54.065
we have a queue sender using the Q sender to send the message,

00:08:54.065 --> 00:09:02.070
to use the render queue center dot send.

00:09:02.110 --> 00:09:05.045
So what I'm going to do, I have the message ready,

00:09:05.045 --> 00:09:07.595
so just cover the message and put it here.

00:09:07.595 --> 00:09:09.455
So what happened?

00:09:09.455 --> 00:09:12.230
The message will be posted to all q.

00:09:12.230 --> 00:09:15.295
And not only that, we are dealing with a lot of connection factor rate,

00:09:15.295 --> 00:09:18.635
so we need to have a matter to properly closed each and everything,

00:09:18.635 --> 00:09:25.025
which means the ACU center and Q connection and acquisition everything.

00:09:25.025 --> 00:09:30.035
So I'm going to create a matter of blank white gloss.

00:09:30.035 --> 00:09:33.590
And again, we're going to use the throws exception here

00:09:33.590 --> 00:09:39.155
because we're going to deal with the cubes here.

00:09:39.155 --> 00:09:41.540
So first thing, let's Cindy,

00:09:41.540 --> 00:09:44.675
I mean closely cuz tender in the reverse order.

00:09:44.675 --> 00:09:47.135
So that clause and what are the next?

00:09:47.135 --> 00:09:49.100
We need to close it and incision rates.

00:09:49.100 --> 00:09:53.000
So Q session, Q session dot.

00:09:53.000 --> 00:09:56.075
And then finally the connection.

00:09:56.075 --> 00:09:59.880
So Q connection dot.

00:09:59.890 --> 00:10:04.715
Okay, so now pretty much almost everything really all we need to do.

00:10:04.715 --> 00:10:08.600
Let's create a main method and then we'll post it.

00:10:08.600 --> 00:10:09.905
Okay?

00:10:09.905 --> 00:10:12.815
I'm going to create a main method here.

00:10:12.815 --> 00:10:14.195
Anyway.

00:10:14.195 --> 00:10:16.415
He renewed exception block here.

00:10:16.415 --> 00:10:19.730
Again. We are going to use that right, the QRS.

00:10:19.730 --> 00:10:23.825
So whenever you write out the cure learned information,

00:10:23.825 --> 00:10:26.885
it needs to be covered between the try and catch block.

00:10:26.885 --> 00:10:28.370
And since we don't wanna do that,

00:10:28.370 --> 00:10:31.730
so I'm going to throw the exception in the method declaration.

00:10:31.730 --> 00:10:32.690
Okay.

00:10:32.690 --> 00:10:33.935
The first thing we need to,

00:10:33.935 --> 00:10:36.125
this is the first method which we're gonna call.

00:10:36.125 --> 00:10:38.210
Okay, So we need the context,

00:10:38.210 --> 00:10:40.069
so how we can get the context.

00:10:40.069 --> 00:10:49.070
So we're gonna get the initial context, context from.

00:10:49.070 --> 00:10:50.510
We have the helper class, right?

00:10:50.510 --> 00:10:53.570
So EGB, helper dot get initial contacts,

00:10:53.570 --> 00:10:57.755
which will give you the entire context of data about these WebLogic server.

00:10:57.755 --> 00:11:02.675
And then what do we need to do is create object for our class.

00:11:02.675 --> 00:11:10.370
Positive messages to the Q and Q S. I'm just creating objects for our class.

00:11:10.370 --> 00:11:12.770
The reason because I'm going to call them methods.

00:11:12.770 --> 00:11:15.450
So curious, dot init method.

00:11:15.450 --> 00:11:20.965
So sorry, Q dot in it matter.

00:11:20.965 --> 00:11:24.140
So in it matter which is going to be accept.

00:11:24.630 --> 00:11:28.030
Contexts rate because context is the first parameter.

00:11:28.030 --> 00:11:30.265
Second is a queue name, right?

00:11:30.265 --> 00:11:31.720
So our contacts here,

00:11:31.720 --> 00:11:34.855
and we need to have paths that queue name as well here.

00:11:34.855 --> 00:11:37.090
So what is it queue name here?

00:11:37.090 --> 00:11:40.495
So here we have a James queue name.

00:11:40.495 --> 00:11:45.190
Copy and paste it here.

00:11:45.190 --> 00:11:51.980
So shouting matter.

00:11:52.770 --> 00:11:56.560
Okay, so now I have an init method which takes my context,

00:11:56.560 --> 00:11:59.460
render, my queue name.

00:12:00.160 --> 00:12:03.425
So what are the next thing which we need to do?

00:12:03.425 --> 00:12:11.060
We have to, and it gets us send the message rate.

00:12:11.060 --> 00:12:13.384
So what is QS?

00:12:13.384 --> 00:12:15.500
Qs dot which method we're going to call.

00:12:15.500 --> 00:12:18.725
We have a method already existing called SSN matter.

00:12:18.725 --> 00:12:22.625
We can use that method the moment when you called us and matter what'll happen,

00:12:22.625 --> 00:12:26.720
whatever the message you are passing that's gonna post it into the queue.

00:12:26.720 --> 00:12:32.480
So first thing, I'm going to provide test,

00:12:32.480 --> 00:12:39.590
sorry, S message to the queue.

00:12:39.590 --> 00:12:43.490
So when you run that particular class, this particular message,

00:12:43.490 --> 00:12:47.945
it'll be posted into our queue and we should be able to see it, right?

00:12:47.945 --> 00:12:49.160
So everything is ready.

00:12:49.160 --> 00:12:53.090
So the next thing what we need to do is that's around

00:12:53.090 --> 00:13:03.540
the class and run on an application because this is not a Java class, right?

00:13:09.160 --> 00:13:12.560
Okay, So which means it is done.

00:13:12.560 --> 00:13:15.110
I should have printed something like message post or successfully.

00:13:15.110 --> 00:13:16.880
But anyway, we'll do that later.

00:13:16.880 --> 00:13:18.230
So now the message has been posted,

00:13:18.230 --> 00:13:19.745
but that we don't see any other here, right?

00:13:19.745 --> 00:13:22.175
So let's go back to our WebLogic server,

00:13:22.175 --> 00:13:24.005
and this is where we have our queue.

00:13:24.005 --> 00:13:26.720
Let's click our order management Q.

00:13:26.720 --> 00:13:32.945
And then we'll go to the wandering and see now it was a 0 before.

00:13:32.945 --> 00:13:36.245
Now we have message count as one.

00:13:36.245 --> 00:13:41.150
So now what we need to just click the queue and click on the Show Messages button,

00:13:41.150 --> 00:13:43.490
which will show you what is the message.

00:13:43.490 --> 00:13:44.960
And here we have some details.

00:13:44.960 --> 00:13:50.585
I would ID timestamp and when it is posted into the queue.

00:13:50.585 --> 00:13:54.950
And another important thing, once the message is processed from this particular Q,

00:13:54.950 --> 00:13:56.960
this particular message won't be available,

00:13:56.960 --> 00:14:00.110
you will not have a possible way to address it.

00:14:00.110 --> 00:14:01.745
So whenever you post a message,

00:14:01.745 --> 00:14:04.775
you need to keep that information in some database.

00:14:04.775 --> 00:14:07.490
Because just in case if the message is pulsar Dan,

00:14:07.490 --> 00:14:10.370
something got failed, you wouldn't be able to read trigger it again.

00:14:10.370 --> 00:14:12.785
So now what I'm gonna do, just clicked it.

00:14:12.785 --> 00:14:17.120
It will show you test message to the queue. Got it.

00:14:17.120 --> 00:14:20.840
So now we posted the message and we were able

00:14:20.840 --> 00:14:25.100
to validate that message has been reachability and Munsterberg.

00:14:25.100 --> 00:14:27.110
So what is the next thing which we need to do?

00:14:27.110 --> 00:14:28.969
Okay, so now I have security.

00:14:28.969 --> 00:14:32.555
Now let's write a cue message,

00:14:32.555 --> 00:14:34.175
a message driven bean.

00:14:34.175 --> 00:14:35.720
And using that beam,

00:14:35.720 --> 00:14:41.570
we can consume this message or consumed is message and then we'll process it.

00:14:41.570 --> 00:14:44.070
Let's do that in the next video.
