WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.400
Hello everyone. Welcome back.

00:00:02.400 --> 00:00:05.610
So this is a database we're going to try I mean, Mitch,

00:00:05.610 --> 00:00:09.330
you're going to use it for the entity or database connectivity here.

00:00:09.330 --> 00:00:12.360
So basically, we have a employees table,

00:00:12.360 --> 00:00:15.720
and we have office and employees,

00:00:15.720 --> 00:00:17.610
and we have a customer table.

00:00:17.610 --> 00:00:18.810
And when we have a customer,

00:00:18.810 --> 00:00:22.979
we have a different payments and different orders for the individual customers.

00:00:22.979 --> 00:00:23.790
And they're similar.

00:00:23.790 --> 00:00:28.425
We have our different products and different product lines and order details.

00:00:28.425 --> 00:00:31.770
So everyone has no relationship with the other table.

00:00:31.770 --> 00:00:37.560
So we're going to create the similar our database in our MySQL database.

00:00:37.560 --> 00:00:40.315
And then we're going to use that to create an entity.

00:00:40.315 --> 00:00:45.560
And then we'll create simple methods to how we can communicate to the database.

00:00:45.560 --> 00:00:49.100
So let's go back to the patient I had been,

00:00:49.100 --> 00:00:51.080
and this is my PHP, my admin,

00:00:51.080 --> 00:00:53.495
so where we can configure MySQL database.

00:00:53.495 --> 00:00:55.400
So this shopping database,

00:00:55.400 --> 00:00:58.295
so this is a database we're going to use.

00:00:58.295 --> 00:01:01.160
And here we have the same tables, customers,

00:01:01.160 --> 00:01:03.155
employee office and order details,

00:01:03.155 --> 00:01:05.855
orders, payments, product lines, and products,

00:01:05.855 --> 00:01:08.030
whatever we discussed in the previous I mean,

00:01:08.030 --> 00:01:13.610
this particular tab or in the all the tables are available in our database as well.

00:01:13.610 --> 00:01:15.980
So now we have not only our tables,

00:01:15.980 --> 00:01:18.425
we have the data also in it.

00:01:18.425 --> 00:01:22.430
Okay, so let me open up customers and I'll show you how does it look like.

00:01:22.430 --> 00:01:26.735
So we have a lot of records available That's already inserted.

00:01:26.735 --> 00:01:31.340
It's just a sample database which I downloaded from internet.

00:01:31.340 --> 00:01:38.405
So, so what I'm gonna do is we're going to create for each and every table as an entity.

00:01:38.405 --> 00:01:40.160
Okay, so how the entity is going to work,

00:01:40.160 --> 00:01:42.170
for example, let me give you a simple example.

00:01:42.170 --> 00:01:45.680
I have a table called student here.

00:01:45.680 --> 00:01:49.700
Let's start with a simple and I'll show you how this can be converted into our entity.

00:01:49.700 --> 00:01:53.480
And then I'll tell you how it can be used for other tables as well.

00:01:53.480 --> 00:01:57.095
Okay, just to have a look at the student structure.

00:01:57.095 --> 00:01:59.480
So it has a two fails in it.

00:01:59.480 --> 00:02:02.315
First one is the ID and username.

00:02:02.315 --> 00:02:05.450
And more important thing, whenever you're working with entities,

00:02:05.450 --> 00:02:10.250
make sure that particular table has some primary key in it.

00:02:10.250 --> 00:02:12.380
If you don't have a primary key,

00:02:12.380 --> 00:02:15.080
you will not be able to create entities.

00:02:15.080 --> 00:02:18.440
So primary key is monetary.

00:02:18.440 --> 00:02:21.200
Okay, so here we have an ID and a name, right?

00:02:21.200 --> 00:02:26.810
So let's go back to our Eclipse and what I'm gonna do is let me

00:02:26.810 --> 00:02:32.690
create a simple file so I can explain you how does it looks like.

00:02:32.690 --> 00:02:35.580
So let's create a new file here.

00:02:39.220 --> 00:02:45.630
And maybe a readme, not extreme.

00:02:46.360 --> 00:02:50.580
Okay, So that database fields.

00:02:51.850 --> 00:02:54.035
So we have two fields.

00:02:54.035 --> 00:02:58.055
The first one is ID and the second one is name and ID, sorry,

00:02:58.055 --> 00:03:02.765
ID is the primary key, correct? Primary key.

00:03:02.765 --> 00:03:04.970
Okay, this is the relational database.

00:03:04.970 --> 00:03:11.525
Now, I'm going to create a Java object in,

00:03:11.525 --> 00:03:15.320
with this particular Java object contains two different fields.

00:03:15.320 --> 00:03:18.965
The first one is ID and the second one is a name.

00:03:18.965 --> 00:03:21.005
So basically how it's going to happen is,

00:03:21.005 --> 00:03:24.095
so this particular Java entity,

00:03:24.095 --> 00:03:27.125
this particular Java object will represent this particular field.

00:03:27.125 --> 00:03:28.955
You might be thinking how it is possible.

00:03:28.955 --> 00:03:31.250
So using annotations, okay,

00:03:31.250 --> 00:03:35.705
so here what we can do is we can use at ID,

00:03:35.705 --> 00:03:38.975
which will convert this field,

00:03:38.975 --> 00:03:40.910
are it will associate this particular field.

00:03:40.910 --> 00:03:44.420
Do you were a database field which is ID?

00:03:44.420 --> 00:03:53.165
And then here we'll have one more field column and we can provide the column name.

00:03:53.165 --> 00:03:56.750
So basically what happened for each and every database field we are

00:03:56.750 --> 00:04:00.590
creating a fail in our Java object.

00:04:00.590 --> 00:04:03.200
And this object also we will provide

00:04:03.200 --> 00:04:05.780
some annotation called this particular object belongs

00:04:05.780 --> 00:04:12.965
to this particular schema at schema, I think table.

00:04:12.965 --> 00:04:16.055
And you can prove it. What is a table name?

00:04:16.055 --> 00:04:18.590
Student.

00:04:18.590 --> 00:04:20.600
And if you want, you can prove it.

00:04:20.600 --> 00:04:21.290
This came on a mass.

00:04:21.290 --> 00:04:24.350
Well, so basically, if you take a look at this particular Java object,

00:04:24.350 --> 00:04:28.850
it's pretty much the copy off our database table.

00:04:28.850 --> 00:04:31.190
So we have ID in our database.

00:04:31.190 --> 00:04:36.425
So similarly we have an ID in our Java object as well that will be oriented with the ID.

00:04:36.425 --> 00:04:40.085
So ID will be the reason why we are using the ID,

00:04:40.085 --> 00:04:43.820
which means it's a primary key for all others fields we're using columns.

00:04:43.820 --> 00:04:46.430
Andy will specify the name here.

00:04:46.430 --> 00:04:51.634
Okay, so this particular Java object is called as an entity.

00:04:51.634 --> 00:04:52.310
Okay?

00:04:52.310 --> 00:04:54.830
So basically if you want to communicate to the database,

00:04:54.830 --> 00:04:58.475
you don't need it as separate database called.

00:04:58.475 --> 00:04:59.900
We can do what we can do.

00:04:59.900 --> 00:05:02.240
So we can have a simple Java object.

00:05:02.240 --> 00:05:05.615
If you're trying to find some information from this particular object,

00:05:05.615 --> 00:05:08.090
it will fetch the data from the table,

00:05:08.090 --> 00:05:09.755
which means the real table.

00:05:09.755 --> 00:05:12.620
I'll show you in a simple example a, at first,

00:05:12.620 --> 00:05:14.420
what I'm gonna do is in the next video,

00:05:14.420 --> 00:05:18.545
I'm going to show you how we can create entities automatically.

00:05:18.545 --> 00:05:20.660
Using some tools on,

00:05:20.660 --> 00:05:23.960
I think we have our option in the group project itself.

00:05:23.960 --> 00:05:27.740
We can create entities from a tables so that automatically

00:05:27.740 --> 00:05:31.970
create a Java object based on the given tables.

00:05:31.970 --> 00:05:34.380
Let's do that in the next video.
