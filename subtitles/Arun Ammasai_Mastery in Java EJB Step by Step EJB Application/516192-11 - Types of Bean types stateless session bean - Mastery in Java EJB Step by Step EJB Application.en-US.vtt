WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.085
Hello everyone, Welcome back.

00:00:02.085 --> 00:00:06.165
So we created a simple project or using our Eclipse ID.

00:00:06.165 --> 00:00:08.325
So not only using Eclipse IDE,

00:00:08.325 --> 00:00:10.935
we created a new project using Maven.

00:00:10.935 --> 00:00:13.320
And we couldn't figure out how applications are,

00:00:13.320 --> 00:00:15.795
where we used to have a Project Server.

00:00:15.795 --> 00:00:20.085
And we created a EGB and we created a simple method as well.

00:00:20.085 --> 00:00:25.950
And then we created a client to test the diploid EGB, right?

00:00:25.950 --> 00:00:29.070
So since we have a basic idea but easier based now,

00:00:29.070 --> 00:00:32.110
the other things which we need to know,

00:00:32.110 --> 00:00:36.935
because those are masked, stateless session when,

00:00:36.935 --> 00:00:39.950
because when we start discussing about Egypt with are two important things,

00:00:39.950 --> 00:00:43.070
stateless and stateful session.

00:00:43.070 --> 00:00:45.290
So we need to understand the difference between

00:00:45.290 --> 00:00:49.415
stateless session when and the stateful one.

00:00:49.415 --> 00:00:51.260
So let's talk about this date class.

00:00:51.260 --> 00:00:53.900
So from the name itself,

00:00:53.900 --> 00:00:56.135
it is going to be a state, a less,

00:00:56.135 --> 00:00:58.190
which means the stateless means that represents

00:00:58.190 --> 00:01:02.670
the business logic and it does not have the data in it.

00:01:02.680 --> 00:01:06.230
And stateless bean objects are pulled by

00:01:06.230 --> 00:01:10.460
the Egypt container to service the request on-demand.

00:01:10.460 --> 00:01:12.350
And more important thing,

00:01:12.350 --> 00:01:16.675
the stateless beans are accessed by one client at a time.

00:01:16.675 --> 00:01:21.385
So you might think will happen if I have a multiple requests at the same time.

00:01:21.385 --> 00:01:27.430
So that is where the Egypt container routes each request to at different instance,

00:01:27.430 --> 00:01:30.830
like a load balancer.

00:01:31.110 --> 00:01:40.090
So what is a stateful session when it is pretty much like a stateless bean.

00:01:40.090 --> 00:01:44.230
But it holds that business logic along with the data,

00:01:44.230 --> 00:01:46.900
which means it's maintaining the state with the data.

00:01:46.900 --> 00:01:48.535
Data means it's a state.

00:01:48.535 --> 00:01:54.025
So that is a difference between these stateless and stateful session beans.

00:01:54.025 --> 00:01:57.255
The example which we discussed before if the stateless.

00:01:57.255 --> 00:02:04.620
So let's, let me go back to our ID here.

00:02:05.740 --> 00:02:09.330
Let's talk about the EGP later.

00:02:13.720 --> 00:02:17.840
Okay, So if you take a look at our EGP,

00:02:17.840 --> 00:02:22.850
which we create an ADC stateless session bean.

00:02:22.850 --> 00:02:28.520
So we'll create a stateful session being a later point of time.

00:02:28.520 --> 00:02:31.460
And for now, let's try to understand what is a stateless,

00:02:31.460 --> 00:02:35.465
stateless means without data,

00:02:35.465 --> 00:02:39.420
because it will not maintain any state, but stateful.

00:02:39.640 --> 00:02:43.955
They will maintain the data that is up different.

00:02:43.955 --> 00:02:45.515
Because if you take a look at these,

00:02:45.515 --> 00:02:48.500
state has been represented business logic and it does not have,

00:02:48.500 --> 00:02:50.000
the state, does not have the straight,

00:02:50.000 --> 00:02:51.890
which means That's not have the data in it.

00:02:51.890 --> 00:02:53.180
But stateful.

00:02:53.180 --> 00:02:54.755
It's pretty much a straight lesbian,

00:02:54.755 --> 00:02:58.010
but it holds the business logic along with the state.

00:02:58.010 --> 00:03:00.620
So business logic, only business logic with

00:03:00.620 --> 00:03:06.180
this stateless and business logic along with the state is stateful.
