WEBVTT
1
00:00:00.050 --> 00:00:03.000
- [Instructor] Now that we have a production instance

2
00:00:03.000 --> 00:00:04.090
of our API running,

3
00:00:04.090 --> 00:00:09.020
it's important that we go back to our API definition

4
00:00:09.020 --> 00:00:14.040
and update the server section to include this new server.

5
00:00:14.040 --> 00:00:18.060
So with in SwaggerHub, we're going to navigate to our

6
00:00:18.060 --> 00:00:21.090
catalogue API that we're hosting

7
00:00:21.090 --> 00:00:25.030
and within the API definition,

8
00:00:25.030 --> 00:00:30.050
we're going to add new entry within the severs array.

9
00:00:30.050 --> 00:00:32.030
So we'll add a description.

10
00:00:32.030 --> 00:00:36.020
We'll say this is the production instance

11
00:00:36.020 --> 00:00:41.060
and then we need to provide a url to our production instance

12
00:00:41.060 --> 00:00:43.040
of the API.

13
00:00:43.040 --> 00:00:48.040
Now I still have a tab open that is directed to our

14
00:00:48.040 --> 00:00:51.020
production instance of the API.

15
00:00:51.020 --> 00:00:54.050
So I'm just going to go ahead and copy everything

16
00:00:54.050 --> 00:00:56.050
before product

17
00:00:56.050 --> 00:01:00.040
and then we can head back to the API definition

18
00:01:00.040 --> 00:01:03.000
and paste this in.

19
00:01:03.000 --> 00:01:06.050
At this point we'll save the API definition

20
00:01:06.050 --> 00:01:10.010
and then if we view the documentation,

21
00:01:10.010 --> 00:01:11.060
you'll notice a few things.

22
00:01:11.060 --> 00:01:15.030
First we have two instances of our API

23
00:01:15.030 --> 00:01:17.070
within the server's drop down.

24
00:01:17.070 --> 00:01:21.070
And now if we were to view one of our operations,

25
00:01:21.070 --> 00:01:25.030
let's say this product operation.

26
00:01:25.030 --> 00:01:30.080
We're able to try it now and this time we can execute

27
00:01:30.080 --> 00:01:34.040
against our production instance.

28
00:01:34.040 --> 00:01:38.080
So here we see the results from the production instance

29
00:01:38.080 --> 00:01:45.000
of the API and let's just grab this ID from product 438.

30
00:01:45.000 --> 00:01:48.000
We'll copy it and then we're going to navigate to

31
00:01:48.000 --> 00:01:52.050
another operation that accepts a template parameter

32
00:01:52.050 --> 00:01:57.090
which is a product ID and we'll try this out as well.

33
00:01:57.090 --> 00:02:00.020
So let's adjust our security header and then we

34
00:02:00.020 --> 00:02:04.040
can put the product ID in and now we can execute this

35
00:02:04.040 --> 00:02:08.080
request and you'll see that we get the product returned

36
00:02:08.080 --> 00:02:10.080
from the API.

37
00:02:10.080 --> 00:02:13.060
So with that change in place,

38
00:02:13.060 --> 00:02:17.050
let's go ahead and publish our catalogue API.

39
00:02:17.050 --> 00:02:21.040
So click on the version and then click on publish

40
00:02:21.040 --> 00:02:24.080
and we're going to make it public and then finally

41
00:02:24.080 --> 00:02:28.080
we just click on the publish version button.

42
00:02:28.080 --> 00:02:30.080
And at this point,

43
00:02:30.080 --> 00:02:35.000
our API is now available for consumption

44
00:02:35.000 --> 00:02:38.050
by external API consumers.

45
00:02:38.050 --> 00:02:42.050
If we would like to share the link to our API,

46
00:02:42.050 --> 00:02:46.060
we can find that link within the share and collaborate

47
00:02:46.060 --> 00:02:50.010
button and here in that dialogue you'll see

48
00:02:50.010 --> 00:02:52.060
the link we can share with others

49
00:02:52.060 --> 00:02:56.050
that we would like to collaborate on this API.

50
00:02:56.050 --> 00:03:00.010
So there we have our API definition file updated

51
00:03:00.010 --> 00:03:04.050
with the latest production instance our docs are in sync

52
00:03:04.050 --> 00:03:05.090
with our implementation

53
00:03:05.090 --> 00:03:08.000
and we're ready to move on to the next step.

