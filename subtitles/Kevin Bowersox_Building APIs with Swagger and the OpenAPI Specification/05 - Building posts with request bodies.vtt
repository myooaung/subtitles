WEBVTT
1
00:00:15.060 --> 00:00:20.080
or put operation with the new data placed

2
00:00:20.080 --> 00:00:38.000
Let's create a post operation within the product

3
00:00:38.000 --> 00:00:40.002
a product end point.

4
00:00:40.002 --> 00:00:43.005
Within that path we're simply going to add

5
00:00:43.005 --> 00:00:46.009
a new operation of type post.

6
00:00:46.009 --> 00:00:49.008
Inside the post operation we can add

7
00:00:49.008 --> 00:00:52.008
a description so that API consumers

8
00:00:52.008 --> 00:00:56.008
can understand when to use this operation.

9
00:00:56.008 --> 00:01:00.005
So we can say, "Add a product to the catalog,"

10
00:01:00.005 --> 00:01:00.050
and that's what we will use this operation for.

11
00:01:00.050 --> 00:01:03.007
and that's what we will use this operation for.

12
00:01:03.007 --> 00:01:06.008
And the next thing we'll do is describe

13
00:01:06.008 --> 00:01:10.000
the request body for this operation.

14
00:01:10.000 --> 00:01:12.003
So we're going to describe the data

15
00:01:12.003 --> 00:01:15.006
that the API client must send in order

16
00:01:15.006 --> 00:01:17.009
to create a new product.

17
00:01:17.009 --> 00:01:21.004
It's very similar to some of the definition

18
00:01:21.004 --> 00:01:21.040
that we saw within the responses object.

19
00:01:21.040 --> 00:01:25.002
that we saw within the responses object.

20
00:01:25.002 --> 00:01:28.005
We have the content object once again

21
00:01:28.005 --> 00:01:33.008
and then we supply the media type of the data

22
00:01:33.008 --> 00:01:33.080
being provided, in this case we're using JSON,

23
00:01:33.080 --> 00:01:37.001
being provided, in this case we're using JSON,

24
00:01:37.001 --> 00:01:41.005
and then we're going to specify the schema object.

25
00:01:41.005 --> 00:01:46.003
And then we're able to tell our API consumers

26
00:01:46.003 --> 00:01:46.030
that we would like them to provide

27
00:01:46.030 --> 00:01:48.002
that we would like them to provide

28
00:01:48.002 --> 00:01:51.001
a single object, and then we define

29
00:01:51.001 --> 00:01:53.009
the properties of that object.

30
00:01:53.009 --> 00:01:58.002
Now, we're just going to copy the properties

31
00:01:58.002 --> 00:02:03.002
from our previous product object that we defined.

32
00:02:03.002 --> 00:02:03.020
And what we can do is put that in place

33
00:02:03.020 --> 00:02:06.005
And what we can do is put that in place

34
00:02:06.005 --> 00:02:09.008
within our API definition.

35
00:02:09.008 --> 00:02:18.001
And we'll need to do a little bit of indenting.

36
00:02:18.001 --> 00:02:18.010
And at this point we have specified

37
00:02:18.010 --> 00:02:21.000
And at this point we have specified

38
00:02:21.000 --> 00:02:24.006
our request body so our API clients know

39
00:02:24.006 --> 00:02:27.008
the data to provide to us but we haven't

40
00:02:27.008 --> 00:02:27.080
described a response at this point.

41
00:02:27.080 --> 00:02:31.001
described a response at this point.

42
00:02:31.001 --> 00:02:36.003
So the responses are in line with the request body.

43
00:02:36.003 --> 00:02:39.006
You can use the helpful lines within the editor

44
00:02:39.006 --> 00:02:42.006
to better understand where these objects go

45
00:02:42.006 --> 00:02:44.003
within your YAML file.

46
00:02:44.003 --> 00:02:48.009
And then inside of the response we can provide

47
00:02:48.009 --> 00:02:52.005
the HTTP status code of 200.

48
00:02:52.005 --> 00:02:55.009
So on a successful response we're going to return

49
00:02:55.009 --> 00:02:55.090
a 200 and we'll just say, "The product has been created."

50
00:02:55.090 --> 00:03:02.002
a 200 and we'll just say, "The product has been created."

51
00:03:02.002 --> 00:03:05.000
And at this point we've satisfied all

52
00:03:05.000 --> 00:03:05.000
of the requirements of the OAS specification

53
00:03:05.000 --> 00:03:08.009
of the requirements of the OAS specification

54
00:03:08.009 --> 00:03:13.006
and you can see on our API documentation

55
00:03:13.006 --> 00:03:16.008
we now have a product end point

56
00:03:16.008 --> 00:03:20.008
that is accessible via a post operation

57
00:03:20.008 --> 00:03:24.007
and we define the request body that an API

58
00:03:24.007 --> 00:03:27.004
client would need to provide in order

59
00:03:27.004 --> 00:03:34.000
to create a new product in the H Plus Sport catalog.

