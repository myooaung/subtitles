WEBVTT
1
00:00:00.003 --> 00:00:06.005
(upbeat music)

2
00:00:06.005 --> 00:00:08.003
- [Instructor] Let's take a look at one way

3
00:00:08.003 --> 00:00:10.000
to complete the challenge.

4
00:00:10.000 --> 00:00:12.006
To begin building an API definition,

5
00:00:12.006 --> 00:00:15.006
we need to specify three required fields.

6
00:00:15.006 --> 00:00:18.004
The first is the open API field

7
00:00:18.004 --> 00:00:22.005
where we specify the version of the OAS specification

8
00:00:22.005 --> 00:00:23.006
that we'll be using.

9
00:00:23.006 --> 00:00:26.001
In our case that's version three.

10
00:00:26.001 --> 00:00:28.008
Next is the info field.

11
00:00:28.008 --> 00:00:30.001
Within the info field,

12
00:00:30.001 --> 00:00:33.003
we can specify the version of the API

13
00:00:33.003 --> 00:00:35.009
as well as a title for it.

14
00:00:35.009 --> 00:00:36.007
In this case,

15
00:00:36.007 --> 00:00:41.002
it's going to be the H Plus Blog API.

16
00:00:41.002 --> 00:00:42.005
And then finally,

17
00:00:42.005 --> 00:00:48.004
we're able to specify the paths on the API definition.

18
00:00:48.004 --> 00:00:50.003
Within the paths field,

19
00:00:50.003 --> 00:00:54.004
we're going to go ahead and specify an article path

20
00:00:54.004 --> 00:00:59.009
that's going to be used to retrieve articles from the API.

21
00:00:59.009 --> 00:01:02.004
Because we're retrieving resources,

22
00:01:02.004 --> 00:01:05.007
it's appropriate to use the get operation.

23
00:01:05.007 --> 00:01:16.001
So we'll specify that underneath this path.

24
00:01:16.001 --> 00:01:19.007
Next we'll describe the operation's response

25
00:01:19.007 --> 00:01:21.009
in the content it returns.

26
00:01:21.009 --> 00:01:22.008
In this case,

27
00:01:22.008 --> 00:01:26.007
we'd like to describe the 200 HTTP response

28
00:01:26.007 --> 00:01:30.000
that's going to return an array

29
00:01:30.000 --> 00:01:32.006
of articles in JSON format.

30
00:01:32.006 --> 00:01:35.008
So underneath the HTTP status code,

31
00:01:35.008 --> 00:01:37.007
we'll first add a description.

32
00:01:37.007 --> 00:01:41.001
We'll say it's a page of articles.

33
00:01:41.001 --> 00:01:42.009
And then we're going to go ahead

34
00:01:42.009 --> 00:01:46.002
and describe the content itself.

35
00:01:46.002 --> 00:01:47.001
In this case,

36
00:01:47.001 --> 00:01:49.007
it's going to be in JSON format

37
00:01:49.007 --> 00:01:53.008
so we can go ahead and specify the mine type.

38
00:01:53.008 --> 00:01:56.006
The next field is the schema object

39
00:01:56.006 --> 00:02:03.002
that defines the response body returned by the operation.

40
00:02:03.002 --> 00:02:06.009
This is where the actual data or content is described,

41
00:02:06.009 --> 00:02:10.003
which in this case is an array of article objects.

42
00:02:10.003 --> 00:02:14.005
So we'll go ahead and specify the type as array

43
00:02:14.005 --> 00:02:17.006
and then we'll need to describe the items

44
00:02:17.006 --> 00:02:20.006
within that array and their data type,

45
00:02:20.006 --> 00:02:25.000
which will be of type object.

46
00:02:25.000 --> 00:02:28.000
The article object will contain properties

47
00:02:28.000 --> 00:02:30.005
whose values describe the article.

48
00:02:30.005 --> 00:02:33.001
So we're going to now add those properties

49
00:02:33.001 --> 00:02:35.006
within the properties field.

50
00:02:35.006 --> 00:02:39.002
The first will be the created date property

51
00:02:39.002 --> 00:02:42.009
and here we're going to specify that its type is a string

52
00:02:42.009 --> 00:02:46.004
but then we'll specify that the format is a date.

53
00:02:46.004 --> 00:02:49.004
Next we're going to add the tagline

54
00:02:49.004 --> 00:02:51.005
which will also be a string.

55
00:02:51.005 --> 00:02:55.009
We'll follow that with the content of the actual article

56
00:02:55.009 --> 00:02:57.009
which will be of type string.

57
00:02:57.009 --> 00:03:02.003
And then we'll specify the category

58
00:03:02.003 --> 00:03:04.004
which will be of type string.

59
00:03:04.004 --> 00:03:05.004
And then finally,

60
00:03:05.004 --> 00:03:08.008
we're going to add the tags property

61
00:03:08.008 --> 00:03:11.005
which is going to be an array,

62
00:03:11.005 --> 00:03:15.000
so we also need to describe the items

63
00:03:15.000 --> 00:03:17.008
in the array and their data type.

64
00:03:17.008 --> 00:03:19.004
Finally to tighten things up,

65
00:03:19.004 --> 00:03:22.005
we're going to add tags to our operation

66
00:03:22.005 --> 00:03:28.005
so it can be grouped under the article resource.

67
00:03:28.005 --> 00:03:30.003
So right before the paths,

68
00:03:30.003 --> 00:03:34.000
I'm going to go ahead and add the tags field

69
00:03:34.000 --> 00:03:37.004
and we can specify our first tag and its name,

70
00:03:37.004 --> 00:03:39.007
which is going to be article.

71
00:03:39.007 --> 00:03:42.005
And then we can give a description of that tag.

72
00:03:42.005 --> 00:03:49.006
We can say articles for the H Plus Sport Blog.

73
00:03:49.006 --> 00:03:51.005
After we've defined the tag,

74
00:03:51.005 --> 00:03:56.000
we can then add it to the operation using the tags field

75
00:03:56.000 --> 00:03:58.006
underneath the get operation.

76
00:03:58.006 --> 00:04:00.006
Here, I'll just specify that we'd like

77
00:04:00.006 --> 00:04:05.000
to use the article tag and you'll notice that it shows up

78
00:04:05.000 --> 00:04:07.008
within our documentation.

79
00:04:07.008 --> 00:04:09.009
We can also take a look at the end point

80
00:04:09.009 --> 00:04:11.004
that we just created,

81
00:04:11.004 --> 00:04:17.000
and we can see the article response from our operation.

82
00:04:17.000 --> 00:04:19.006
That completes our solution for the challenge,

83
00:04:19.006 --> 00:04:23.001
which should have made you more comfortable using YAML, OAS,

84
00:04:23.001 --> 00:04:26.000
and the Swagger Editor to build an API definition.

