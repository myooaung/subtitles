WEBVTT
1
00:00:00.050 --> 00:00:03.060
- [Instructor] Once we've built out our API implementation,

2
00:00:03.060 --> 00:00:08.020
we'll need to package the API for deployment to a server.

3
00:00:08.020 --> 00:00:09.090
Luckily, we're using Maven,

4
00:00:09.090 --> 00:00:13.060
which makes it extremely easy to package our software.

5
00:00:13.060 --> 00:00:15.050
Just right-click on your project

6
00:00:15.050 --> 00:00:17.030
and then go to Run As,

7
00:00:17.030 --> 00:00:19.010
then Maven build.

8
00:00:19.010 --> 00:00:20.070
Within the dialogue box,

9
00:00:20.070 --> 00:00:23.050
we need to specify two Maven goals.

10
00:00:23.050 --> 00:00:25.060
So, specify the clean goal

11
00:00:25.060 --> 00:00:28.010
and then the package goal.

12
00:00:28.010 --> 00:00:32.000
We'll also need to select the Skip Test option

13
00:00:32.000 --> 00:00:33.050
and then we need to ensure

14
00:00:33.050 --> 00:00:35.050
that we're running our Maven build

15
00:00:35.050 --> 00:00:37.020
using a JDK.

16
00:00:37.020 --> 00:00:40.010
To do this, click on the JRE tab

17
00:00:40.010 --> 00:00:43.010
and then click on Alternate JRE.

18
00:00:43.010 --> 00:00:46.050
You'll notice we're set up to run with a JRE,

19
00:00:46.050 --> 00:00:49.090
so we can go to this installed JREs button

20
00:00:49.090 --> 00:00:53.030
and here we can add a JDK.

21
00:00:53.030 --> 00:00:55.050
So click on Standard VM

22
00:00:55.050 --> 00:00:56.070
and then hit Next

23
00:00:56.070 --> 00:00:59.090
and now we'll use the Directory button

24
00:00:59.090 --> 00:01:02.000
to search for our JDK.

25
00:01:02.000 --> 00:01:04.050
My JDK is installed within

26
00:01:04.050 --> 00:01:11.080
C:\ProgramFiles\Java\jdk1.8.0_211.

27
00:01:11.080 --> 00:01:14.000
All I need to do is select this folder

28
00:01:14.000 --> 00:01:16.060
and Eclipse will load the JDK.

29
00:01:16.060 --> 00:01:21.020
Then we need to click on the JDK

30
00:01:21.020 --> 00:01:26.010
in order to use it within our Run configuration

31
00:01:26.010 --> 00:01:28.060
and then make sure we select it

32
00:01:28.060 --> 00:01:31.060
as the Alternate JRE.

33
00:01:31.060 --> 00:01:34.050
Okay, at this point we can apply those changes

34
00:01:34.050 --> 00:01:36.080
and run our Maven build

35
00:01:36.080 --> 00:01:40.050
and Maven will begin to package our software.

36
00:01:40.050 --> 00:01:43.030
There we see that our build has succeeded

37
00:01:43.030 --> 00:01:47.040
and if we navigate

38
00:01:47.040 --> 00:01:50.070
to our Eclipse Workspace

39
00:01:50.070 --> 00:01:52.040
and into our project,

40
00:01:52.040 --> 00:01:54.030
you'll see the Target Directory

41
00:01:54.030 --> 00:01:56.080
where we now have a JAR file

42
00:01:56.080 --> 00:02:00.000
that contains our packaged API.

