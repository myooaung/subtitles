WEBVTT
1
00:00:00.002 --> 00:00:06.005
(upbeat music)

2
00:00:06.005 --> 00:00:08.009
- [Instructor] In this video, I'll share my solution

3
00:00:08.009 --> 00:00:10.005
for this challenge.

4
00:00:10.005 --> 00:00:14.002
To get started, I'm going to add a component section

5
00:00:14.002 --> 00:00:20.003
to the bottom of the file.

6
00:00:20.003 --> 00:00:22.003
Within this component section,

7
00:00:22.003 --> 00:00:26.004
I'm going to create a reusable schema object

8
00:00:26.004 --> 00:00:32.008
that represents the article resource.

9
00:00:32.008 --> 00:00:34.006
This component will provide us

10
00:00:34.006 --> 00:00:38.000
with some reusability throughout the API definition,

11
00:00:38.000 --> 00:00:41.003
and we can avoid repeating the article schema object

12
00:00:41.003 --> 00:00:43.000
throughout the file.

13
00:00:43.000 --> 00:00:46.008
To define the properties on the article schema object,

14
00:00:46.008 --> 00:00:50.000
we can go ahead and copy the properties

15
00:00:50.000 --> 00:00:54.001
from the object on our get operation.

16
00:00:54.001 --> 00:00:59.001
So I'm just going to go ahead and copy these fields

17
00:00:59.001 --> 00:01:04.006
and place them within the article schema object

18
00:01:04.006 --> 00:01:06.002
at the bottom of the file.

19
00:01:06.002 --> 00:01:07.003
Once they're in place,

20
00:01:07.003 --> 00:01:09.001
I can go ahead and click on Edit

21
00:01:09.001 --> 00:01:10.007
and then convert to YAML

22
00:01:10.007 --> 00:01:13.008
and the file will automatically format.

23
00:01:13.008 --> 00:01:18.004
Now we can just go ahead and remove those properties

24
00:01:18.004 --> 00:01:24.003
from the API definition underneath the get operation.

25
00:01:24.003 --> 00:01:28.009
We'll still need to specify the type of the objects

26
00:01:28.009 --> 00:01:31.003
in the array for the get operation,

27
00:01:31.003 --> 00:01:34.000
so we can now use our new component

28
00:01:34.000 --> 00:01:36.006
by using the ref property

29
00:01:36.006 --> 00:01:39.009
and then pointing to the article component

30
00:01:39.009 --> 00:01:41.007
that we just created.

31
00:01:41.007 --> 00:01:45.009
Okay, so now we have our reusable schema object

32
00:01:45.009 --> 00:01:49.009
and we can begin to create our next operation

33
00:01:49.009 --> 00:01:52.000
on the API definition.

34
00:01:52.000 --> 00:01:56.005
If you chose the post operation to add to the article path,

35
00:01:56.005 --> 00:01:58.006
you chose the correct operation

36
00:01:58.006 --> 00:02:01.009
for creating a resource on a REST API.

37
00:02:01.009 --> 00:02:05.006
So with the post operation added,

38
00:02:05.006 --> 00:02:09.003
we're going to also add the tags field,

39
00:02:09.003 --> 00:02:13.004
and we're going to create this operation

40
00:02:13.004 --> 00:02:15.008
underneath the article tags,

41
00:02:15.008 --> 00:02:18.005
so we can nest it within that resource.

42
00:02:18.005 --> 00:02:20.003
The next thing that we'll need to do

43
00:02:20.003 --> 00:02:24.001
is specify the request body

44
00:02:24.001 --> 00:02:28.002
that will be accepted by this operation.

45
00:02:28.002 --> 00:02:30.002
Underneath the requestBody field,

46
00:02:30.002 --> 00:02:33.001
we can go ahead and add the content field,

47
00:02:33.001 --> 00:02:37.009
then we can specify the MIME type as application/json.

48
00:02:37.009 --> 00:02:43.003
And then here, we just provide the schema for the object

49
00:02:43.003 --> 00:02:46.006
that we would like to receive as the request body.

50
00:02:46.006 --> 00:02:50.008
Once again, we can go ahead and use the ref field

51
00:02:50.008 --> 00:02:56.000
and point to the article schema object that we just created.

52
00:02:56.000 --> 00:02:58.001
There's only one thing left to do,

53
00:02:58.001 --> 00:03:03.004
we need to return a response from this operation.

54
00:03:03.004 --> 00:03:06.008
So let's go ahead, we'll add the responses field.

55
00:03:06.008 --> 00:03:11.007
And then when we create a new resource on a REST API,

56
00:03:11.007 --> 00:03:14.008
we should use a 201 status code

57
00:03:14.008 --> 00:03:18.002
to indicate that that resource has been created.

58
00:03:18.002 --> 00:03:21.003
So I'll add the HTTP status code

59
00:03:21.003 --> 00:03:24.009
and then nested within it, I can provide a description,

60
00:03:24.009 --> 00:03:28.005
and we'll just say that the article has been created.

61
00:03:28.005 --> 00:03:31.004
That completes the solution for this challenge,

62
00:03:31.004 --> 00:03:34.000
which should have given you additional experience

63
00:03:34.000 --> 00:03:37.000
defining REST API operations.

