WEBVTT
1
00:00:01.080 --> 00:00:12.090
we're going to cover the most commonly

2
00:00:12.090 --> 00:00:16.000
There's going to be a lot of sections you may never use.

3
00:00:16.000 --> 00:00:21.080
So what we're going to do is take a few minutes

4
00:00:21.080 --> 00:00:24.040
That way when you're on your own after this course

5
00:00:24.040 --> 00:00:29.050
if you encounter and Edge case

6
00:00:29.050 --> 00:00:32.010
you know how to find the information you need.

7
00:00:32.010 --> 00:00:36.000
So on the OpenAPI Initiative's GetHub page

8
00:00:36.000 --> 00:00:38.030
you're going to find a repository,

9
00:00:38.030 --> 00:00:50.090
the OpenAPI specification repository that holds the spec.

10
00:00:50.090 --> 00:00:52.080
that we can take a look at to learn

11
00:00:52.080 --> 00:00:55.010
how to build API definitions.

12
00:00:55.010 --> 00:00:59.050
We'll take a look at version 3.0.

13
00:00:59.050 --> 00:01:28.050
as you scroll down the specification

14
00:01:28.050 --> 00:01:32.010
that we can then further define

15
00:01:32.010 --> 00:01:36.000
by specifying their nested fields.

16
00:01:36.000 --> 00:01:40.020
So here we see the seven or so sections

17
00:01:40.020 --> 00:01:50.090
and let's just navigate into the paths object

18
00:01:50.090 --> 00:02:04.020
the spec an we're looking at a paths object.

19
00:02:04.020 --> 00:02:10.050
is going to be the same every time.

20
00:02:10.050 --> 00:02:18.090
So for example, we see several examples

21
00:02:18.090 --> 00:02:24.030
And this is a path item object and that can change

22
00:02:24.030 --> 00:02:27.030
depending up the API, so it's not static.

23
00:02:27.030 --> 00:02:33.030
Something like get property

24
00:02:33.030 --> 00:02:38.060
because we're always going to use

25
00:02:38.060 --> 00:02:44.090
So if we drill down into the path item object,

26
00:02:44.090 --> 00:02:49.000
can be nested within that object.

27
00:02:49.000 --> 00:02:53.009
And you'll notice here we see those operations

28
00:02:53.009 --> 00:02:53.090
So there's the get, the put, the post, delete.

29
00:02:53.090 --> 00:02:59.000
So there's the get, the put, the post, delete.

30
00:02:59.000 --> 00:02:59.000
All the different operations

31
00:02:59.000 --> 00:03:00.005
All the different operations

32
00:03:00.005 --> 00:03:00.050
that pretty much correspond with http methods

33
00:03:00.050 --> 00:03:04.002
that pretty much correspond with http methods

34
00:03:04.002 --> 00:03:04.020
that can be used to invoke the different

35
00:03:04.020 --> 00:03:07.007
that can be used to invoke the different

36
00:03:07.007 --> 00:03:07.070
endpoints or operations on our API.

37
00:03:07.070 --> 00:03:11.002
endpoints or operations on our API.

38
00:03:11.002 --> 00:03:16.001
Let's drill down into the get operation

39
00:03:16.001 --> 00:03:16.010
and here we see the various fields

40
00:03:16.010 --> 00:03:19.003
and here we see the various fields

41
00:03:19.003 --> 00:03:19.030
that can be nested within that object.

42
00:03:19.030 --> 00:03:23.003
that can be nested within that object.

43
00:03:23.003 --> 00:03:28.004
So we can see that we can provide a parameters field.

44
00:03:28.004 --> 00:03:31.003
We can provide a request body.

45
00:03:31.003 --> 00:03:31.030
We can also provide responses,

46
00:03:31.030 --> 00:03:34.002
We can also provide responses,

47
00:03:34.002 --> 00:03:37.003
in fact the responses are the only

48
00:03:37.003 --> 00:03:42.001
required object within this object.

49
00:03:42.001 --> 00:03:42.010
So let's drill down into the responses object

50
00:03:42.010 --> 00:03:46.000
So let's drill down into the responses object

51
00:03:46.000 --> 00:03:51.008
and you'll notice that it has a patterned field.

52
00:03:51.008 --> 00:03:53.007
That is the http status code.

53
00:03:53.007 --> 00:03:53.070
So this is going to correspond

54
00:03:53.070 --> 00:03:56.001
So this is going to correspond

55
00:03:56.001 --> 00:03:57.008
with the various status codes

56
00:03:57.008 --> 00:03:57.080
provided by the http specification.

57
00:03:57.080 --> 00:04:00.008
provided by the http specification.

58
00:04:00.008 --> 00:04:00.080
So things like 200's for successes.

59
00:04:00.080 --> 00:04:03.007
So things like 200's for successes.

60
00:04:03.007 --> 00:04:07.007
You know 404's for resources that can't be found.

61
00:04:07.007 --> 00:04:07.070
Those sorts of things make it a patterned field

62
00:04:07.070 --> 00:04:10.001
Those sorts of things make it a patterned field

63
00:04:10.001 --> 00:04:10.010
because it will never really be fixed.

64
00:04:10.010 --> 00:04:12.005
because it will never really be fixed.

65
00:04:12.005 --> 00:04:12.050
And then if we navigate into that response object,

66
00:04:12.050 --> 00:04:17.009
And then if we navigate into that response object,

67
00:04:17.009 --> 00:04:17.090
you can see the fields available here and probably

68
00:04:17.090 --> 00:04:22.000
you can see the fields available here and probably

69
00:04:22.000 --> 00:04:22.000
the most important one is this content field.

70
00:04:22.000 --> 00:04:26.004
the most important one is this content field.

71
00:04:26.004 --> 00:04:26.040
It's a fixed field that is the media type of the objects.

72
00:04:26.040 --> 00:04:30.009
It's a fixed field that is the media type of the objects.

73
00:04:30.009 --> 00:04:30.090
So this is going to be something like application json,

74
00:04:30.090 --> 00:04:34.003
So this is going to be something like application json,

75
00:04:34.003 --> 00:04:34.030
application xml, normally it's json.

76
00:04:34.030 --> 00:04:37.004
application xml, normally it's json.

77
00:04:37.004 --> 00:04:40.008
Once again, you can see examples within

78
00:04:40.008 --> 00:04:45.005
the specification itself if you ever need help.

79
00:04:45.005 --> 00:04:47.001
So let's drill down one more level

80
00:04:47.001 --> 00:04:47.010
and talk about the schema object.

81
00:04:47.010 --> 00:04:50.006
and talk about the schema object.

82
00:04:50.006 --> 00:04:53.008
The schema object is extremely important,

83
00:04:53.008 --> 00:04:53.080
we'll use it quite a bit

84
00:04:53.080 --> 00:04:55.006
we'll use it quite a bit

85
00:04:55.006 --> 00:05:00.001
because it's used to define the inputs and outputs

86
00:05:00.001 --> 00:05:03.007
and describe the data associated with them.

87
00:05:03.007 --> 00:05:03.070
So it's really defining what data

88
00:05:03.070 --> 00:05:07.005
So it's really defining what data

89
00:05:07.005 --> 00:05:12.003
an API consumer must provide to an API operation.

90
00:05:12.003 --> 00:05:14.009
Or what data a consumer can expect

91
00:05:14.009 --> 00:05:18.004
to receive from an API operation.

92
00:05:18.004 --> 00:05:18.040
You can kind of get the pattern of reading the spec.

93
00:05:18.040 --> 00:05:21.001
You can kind of get the pattern of reading the spec.

94
00:05:21.001 --> 00:05:21.010
You keep drilling down into these nested fields

95
00:05:21.010 --> 00:05:25.000
You keep drilling down into these nested fields

96
00:05:25.000 --> 00:05:25.000
within these objects in order to learn

97
00:05:25.000 --> 00:05:27.006
within these objects in order to learn

98
00:05:27.006 --> 00:05:27.060
how to craft your API definition.

99
00:05:27.060 --> 00:05:30.006
how to craft your API definition.

100
00:05:30.006 --> 00:05:30.060
As we work throughout the course,

101
00:05:30.060 --> 00:05:32.002
As we work throughout the course,

102
00:05:32.002 --> 00:05:32.020
we're going to leverage a large portion

103
00:05:32.020 --> 00:05:34.008
we're going to leverage a large portion

104
00:05:34.008 --> 00:05:36.000
of the specification.

105
00:05:36.000 --> 00:05:36.000
But if you do run into an edge case,

106
00:05:36.000 --> 00:05:38.001
But if you do run into an edge case,

107
00:05:38.001 --> 00:05:38.010
now you know how to read the spec.

108
00:05:38.010 --> 00:05:40.000
now you know how to read the spec.

