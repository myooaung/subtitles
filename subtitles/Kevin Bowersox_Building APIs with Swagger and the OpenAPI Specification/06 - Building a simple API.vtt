WEBVTT
1
00:00:00.050 --> 00:00:28.040
- [Instructor] In this lesson, we'll build

2
00:00:28.040 --> 00:00:34.090
The API will respond to the request by returning

3
00:00:34.090 --> 00:00:46.060
Our API definition is going to be very minimal

4
00:00:46.060 --> 00:00:51.030
We can discover what fields or objects

5
00:00:51.030 --> 00:00:54.060
by visiting the OpenAPI specification.

6
00:00:54.060 --> 00:00:58.060
Here we are at the OAS 3.0 specification

7
00:00:58.060 --> 00:01:01.090
and if we navigate to the schema section

8
00:01:01.090 --> 00:01:11.040
it will list the different sections

9
00:01:11.040 --> 00:01:35.020
The OpenAPI field, the info field and the paths field.

10
00:01:35.020 --> 00:01:47.020
and that provides clues to Swagger Editor

11
00:01:47.020 --> 00:01:53.080
and we see the info field.

12
00:01:53.080 --> 00:02:09.050
the API itself, such as the title of the API.

13
00:02:09.050 --> 00:02:34.004
and we'll say it's version one.

14
00:02:34.004 --> 00:02:39.002
To do that, we first specify a path object.

15
00:02:39.002 --> 00:02:42.005
In this case, we're going to be exposing

16
00:02:42.005 --> 00:02:45.004
the product endpoint.

17
00:02:45.004 --> 00:02:48.005
Within that product endpoint, we're going

18
00:02:48.005 --> 00:02:52.004
to expose the get operation, which corresponds

19
00:02:52.004 --> 00:02:56.001
to the HTTP method that will be used

20
00:02:56.001 --> 00:02:56.010
to invoke this operation.

21
00:02:56.010 --> 00:02:58.007
to invoke this operation.

22
00:02:58.007 --> 00:02:58.070
You'll notice that we're using YAML.

23
00:02:58.070 --> 00:03:01.007
You'll notice that we're using YAML.

24
00:03:01.007 --> 00:03:04.006
So, it's important to indent two spaces

25
00:03:04.006 --> 00:03:08.006
when we have different fields on an object.

26
00:03:08.006 --> 00:03:11.003
We'll navigate to the next line,

27
00:03:11.003 --> 00:03:14.002
indent two spaces and now were able

28
00:03:14.002 --> 00:03:17.008
to specify the responses.

29
00:03:17.008 --> 00:03:21.009
This is indicating what data the API is going

30
00:03:21.009 --> 00:03:25.007
to return from this endpoint or operation.

31
00:03:25.007 --> 00:03:28.002
The first thing we provide within

32
00:03:28.002 --> 00:03:32.009
the responses object is the HTTP status code.

33
00:03:32.009 --> 00:03:32.090
From there, we can provide a description of this operation.

34
00:03:32.090 --> 00:03:37.008
From there, we can provide a description of this operation.

35
00:03:37.008 --> 00:03:37.080
We'll say, this is a list of the products in the catalog.

36
00:03:37.080 --> 00:03:42.001
We'll say, this is a list of the products in the catalog.

37
00:03:42.001 --> 00:03:44.003
(computer keys clicking)

38
00:03:44.003 --> 00:03:44.030
And then from here, we can go on to describe

39
00:03:44.030 --> 00:03:47.004
And then from here, we can go on to describe

40
00:03:47.004 --> 00:03:51.001
the response body that will be returned.

41
00:03:51.001 --> 00:03:51.010
So, we use the content field in order to do that.

42
00:03:51.010 --> 00:03:55.003
So, we use the content field in order to do that.

43
00:03:55.003 --> 00:03:55.030
Within the content field, we specify the media type.

44
00:03:55.030 --> 00:04:00.001
Within the content field, we specify the media type.

45
00:04:00.001 --> 00:04:02.006
In this case, we're going to be returning JSON.

46
00:04:02.006 --> 00:04:02.060
Then there's a schema field nested within that.

47
00:04:02.060 --> 00:04:06.007
Then there's a schema field nested within that.

48
00:04:06.007 --> 00:04:10.004
The schema field allows us to describe, kind of,

49
00:04:10.004 --> 00:04:10.040
the data format or data type that we'll be returning.

50
00:04:10.040 --> 00:04:13.008
the data format or data type that we'll be returning.

51
00:04:13.008 --> 00:04:13.080
So, we're able to indicate what the objects look like

52
00:04:13.080 --> 00:04:17.000
So, we're able to indicate what the objects look like

53
00:04:17.000 --> 00:04:17.000
that we'll be returning, specifying constraints

54
00:04:17.000 --> 00:04:20.005
that we'll be returning, specifying constraints

55
00:04:20.005 --> 00:04:20.050
and other things that describe

56
00:04:20.050 --> 00:04:23.001
and other things that describe

57
00:04:23.001 --> 00:04:23.010
the data coming back in the response body.

58
00:04:23.010 --> 00:04:25.008
the data coming back in the response body.

59
00:04:25.008 --> 00:04:25.080
To start out, we're going to say that

60
00:04:25.080 --> 00:04:28.008
To start out, we're going to say that

61
00:04:28.008 --> 00:04:28.080
the type of data we're returning is an array.

62
00:04:28.080 --> 00:04:32.004
the type of data we're returning is an array.

63
00:04:32.004 --> 00:04:32.040
Then we're able to specify what the items

64
00:04:32.040 --> 00:04:36.003
Then we're able to specify what the items

65
00:04:36.003 --> 00:04:36.030
in that array look like by describing

66
00:04:36.030 --> 00:04:39.006
in that array look like by describing

67
00:04:39.006 --> 00:04:39.060
the properties on that item.

68
00:04:39.060 --> 00:04:43.007
the properties on that item.

69
00:04:43.007 --> 00:04:43.070
In this case, we're going to have an ID for our product

70
00:04:43.070 --> 00:04:48.002
In this case, we're going to have an ID for our product

71
00:04:48.002 --> 00:04:48.020
and then nested within the ID object

72
00:04:48.020 --> 00:04:51.001
and then nested within the ID object

73
00:04:51.001 --> 00:04:51.010
we're able to specify the data type of this property.

74
00:04:51.010 --> 00:04:58.005
we're able to specify the data type of this property.

75
00:04:58.005 --> 00:04:58.050
Then we can go ahead and provide an example

76
00:04:58.050 --> 00:05:01.008
Then we can go ahead and provide an example

77
00:05:01.008 --> 00:05:01.080
of what this data might look like.

78
00:05:01.080 --> 00:05:04.004
of what this data might look like.

79
00:05:04.004 --> 00:05:04.040
Now, we're also going to have a name for our product object

80
00:05:04.040 --> 00:05:08.007
Now, we're also going to have a name for our product object

81
00:05:08.007 --> 00:05:08.070
and that's going to be of type string.

82
00:05:08.070 --> 00:05:12.001
and that's going to be of type string.

83
00:05:12.001 --> 00:05:12.010
Then we can provide a simple example.

84
00:05:12.010 --> 00:05:15.000
Then we can provide a simple example.

85
00:05:15.000 --> 00:05:15.000
We'll just say it's going to be Lemon Water

86
00:05:15.000 --> 00:05:17.003
We'll just say it's going to be Lemon Water

87
00:05:17.003 --> 00:05:17.030
and that's it.

88
00:05:17.030 --> 00:05:18.003
and that's it.

89
00:05:18.003 --> 00:05:18.030
We have a valid, OpenAPI specification 3.0 API definition.

90
00:05:18.030 --> 00:05:24.006
We have a valid, OpenAPI specification 3.0 API definition.

91
00:05:24.006 --> 00:05:24.060
You'll notice on the right hand side

92
00:05:24.060 --> 00:05:26.003
You'll notice on the right hand side

93
00:05:26.003 --> 00:05:26.030
our interactive documentation allows us to see

94
00:05:26.030 --> 00:05:30.006
our interactive documentation allows us to see

95
00:05:30.006 --> 00:05:30.060
the details of this operation on the API.

96
00:05:30.060 --> 00:05:34.002
the details of this operation on the API.

97
00:05:34.002 --> 00:05:34.020
This could be used by any API consumer

98
00:05:34.020 --> 00:05:37.002
This could be used by any API consumer

99
00:05:37.002 --> 00:05:40.000
to learn how to invoke this operation.

