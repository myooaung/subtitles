WEBVTT
1
00:00:00.000 --> 00:00:02.090
- [Narrator] APIs can expose sensitive data

2
00:00:02.090 --> 00:00:05.030
and operations that we want to protect

3
00:00:05.030 --> 00:00:08.020
from unauthorized access.

4
00:00:08.020 --> 00:00:11.000
OAS provides us with a security scheme

5
00:00:11.000 --> 00:00:14.050
to define how an API is secured,

6
00:00:14.050 --> 00:00:18.010
so that we can protect those sensitive resources.

7
00:00:18.010 --> 00:00:21.080
Within SwaggerHub, we can use a template

8
00:00:21.080 --> 00:00:24.070
to easily define a security scheme.

9
00:00:24.070 --> 00:00:27.050
So let's create a new API definition,

10
00:00:27.050 --> 00:00:30.000
and within the dialogue box we want

11
00:00:30.000 --> 00:00:33.040
to make sure that it's Version 3.0

12
00:00:33.040 --> 00:00:35.070
of the OAS spec that we're using.

13
00:00:35.070 --> 00:00:37.070
And then within the templates,

14
00:00:37.070 --> 00:00:40.050
you'll notice that we have several templates

15
00:00:40.050 --> 00:00:43.090
that are dedicated to providing security schemes

16
00:00:43.090 --> 00:00:46.080
for several OAuth flows.

17
00:00:46.080 --> 00:00:49.010
We're going to go ahead and pick the

18
00:00:49.010 --> 00:00:51.080
Password Flow, and at this point

19
00:00:51.080 --> 00:00:56.020
we're going to name our API the security template

20
00:00:56.020 --> 00:00:58.080
and we can go ahead and create it.

21
00:00:58.080 --> 00:01:00.080
Once the API is created,

22
00:01:00.080 --> 00:01:03.010
we're navigated into the editor,

23
00:01:03.010 --> 00:01:05.000
and if we scroll down to the bottom

24
00:01:05.000 --> 00:01:07.010
of this API definition,

25
00:01:07.010 --> 00:01:10.020
you can find the security scheme that

26
00:01:10.020 --> 00:01:13.010
was created within the template.

27
00:01:13.010 --> 00:01:16.010
The security scheme specifies that we're

28
00:01:16.010 --> 00:01:19.090
using OAuth, and then it further specifies

29
00:01:19.090 --> 00:01:22.090
that we're using the Password Flow.

30
00:01:22.090 --> 00:01:25.040
Here you can see we're able to specify

31
00:01:25.040 --> 00:01:31.010
the token endpoint that an API consumer can

32
00:01:31.010 --> 00:01:34.000
receive and access token from, once

33
00:01:34.000 --> 00:01:36.080
providing the appropriate parameters

34
00:01:36.080 --> 00:01:39.040
defined by the OAuth protocol.

35
00:01:39.040 --> 00:01:41.070
And then, within this we also define

36
00:01:41.070 --> 00:01:44.080
our scopes, and we have two simple scopes,

37
00:01:44.080 --> 00:01:46.040
write and read.

38
00:01:46.040 --> 00:01:50.010
So let's grab this portion of the API definition,

39
00:01:50.010 --> 00:01:52.050
and we can copy it to our clipboard.

40
00:01:52.050 --> 00:01:54.070
And now we're going to navigate back to

41
00:01:54.070 --> 00:01:59.030
My hub and into the h plus sports API

42
00:01:59.030 --> 00:02:01.030
API definition.

43
00:02:01.030 --> 00:02:04.010
At the bottom of our API definition we

44
00:02:04.010 --> 00:02:07.000
find our components object, and that's

45
00:02:07.000 --> 00:02:09.090
where we can place our security scheme

46
00:02:09.090 --> 00:02:14.030
to be reused throughout our API definition.

47
00:02:14.030 --> 00:02:17.040
At this point securing one of our operations

48
00:02:17.040 --> 00:02:20.070
on the API is extremely simple, so let's

49
00:02:20.070 --> 00:02:24.060
scroll up and we're going to secure this

50
00:02:24.060 --> 00:02:27.070
post operation on the product path.

51
00:02:27.070 --> 00:02:29.060
Because we don't want anybody to be able

52
00:02:29.060 --> 00:02:33.070
to create a product within h plus sports catalog,

53
00:02:33.070 --> 00:02:37.080
so to do that we simply use the security

54
00:02:37.080 --> 00:02:41.090
object, underneath our operation, and then

55
00:02:41.090 --> 00:02:46.030
we're able to specify, in an array, the

56
00:02:46.030 --> 00:02:50.080
password property, and inside the password

57
00:02:50.080 --> 00:02:54.040
property we simply place one of the scopes

58
00:02:54.040 --> 00:02:59.070
that were found within our security scheme.

59
00:02:59.070 --> 00:03:04.030
So here I'm specifying the right scope is used

60
00:03:04.030 --> 00:03:09.070
to protect that post operation.

61
00:03:09.070 --> 00:03:21.090
At this point we can save our API definition,

62
00:03:21.090 --> 00:03:30.070
documentation.

63
00:03:30.070 --> 00:03:34.010
So if you've ever worked with an API and had

64
00:03:34.010 --> 00:03:38.060
to authenticate in order to access a secure

65
00:03:38.060 --> 00:03:43.030
API resource, you know how valuable it is to have

66
00:03:43.030 --> 00:03:47.050
this sort of information as a consumer of an API.

67
00:03:47.050 --> 00:03:51.070
So this is going to increase your API adoption.

68
00:03:51.070 --> 00:03:54.060
Now one of the other things I'd like to cover

69
00:03:54.060 --> 00:03:57.090
while we're here, we no longer need the security

70
00:03:57.090 --> 00:04:02.010
template, so if we navigate into the security

71
00:04:02.010 --> 00:04:06.020
template API, we can click on the name and here

72
00:04:06.020 --> 00:04:07.080
we get some options.

73
00:04:07.080 --> 00:04:10.050
So you have the ability to fork the API, you can

74
00:04:10.050 --> 00:04:13.080
transfer ownership to another organization or

75
00:04:13.080 --> 00:04:17.060
another user of SwaggerHub, and then here you see

76
00:04:17.060 --> 00:04:20.070
the ability to delete an API.

77
00:04:20.070 --> 00:04:23.060
You'll need to confirm via this dialogue that

78
00:04:23.060 --> 00:04:25.080
you no longer need the API.

79
00:04:25.080 --> 00:04:29.010
So let's just go ahead and do that,

80
00:04:29.010 --> 00:04:31.070
and that's going to return us back to My hub,

81
00:04:31.070 --> 00:04:33.070
and the other thing we're going to do is

82
00:04:33.070 --> 00:04:34.080
change this name.

83
00:04:34.080 --> 00:04:37.050
It's not too friendly for this API.

84
00:04:37.050 --> 00:04:40.030
It's our catalog, so what we'd like

85
00:04:40.030 --> 00:04:44.090
to do is change this over to the h plus sports

86
00:04:44.090 --> 00:04:50.020
catalog API, and then we can actually change

87
00:04:50.020 --> 00:04:55.010
the API name by renaming it within SwaggerHub.

88
00:04:55.010 --> 00:04:58.040
So let's just call this catalog, and we can

89
00:04:58.040 --> 00:05:01.090
rename the API, and it's going to tell us we

90
00:05:01.090 --> 00:05:03.002
have unsaved changes.

91
00:05:03.002 --> 00:05:03.020
Let's save those.

92
00:05:03.020 --> 00:05:05.002
Let's save those.

93
00:05:05.002 --> 00:05:05.020
And now with those changes in place, you'll see

94
00:05:05.020 --> 00:05:09.000
And now with those changes in place, you'll see

95
00:05:09.000 --> 00:05:09.000
that we have the catalog API within the h plus

96
00:05:09.000 --> 00:05:13.004
that we have the catalog API within the h plus

97
00:05:13.004 --> 00:05:13.040
sports organization.

98
00:05:13.040 --> 00:05:16.000
sports organization.

