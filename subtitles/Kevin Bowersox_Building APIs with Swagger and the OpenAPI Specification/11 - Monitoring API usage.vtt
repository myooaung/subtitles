WEBVTT
1
00:00:00.050 --> 00:00:03.070
- [Instructor] Now that Apigee is proxying the traffic

2
00:00:03.070 --> 00:00:06.000
to our API implementation,

3
00:00:06.000 --> 00:00:09.020
we're able to take advantage of some of its features

4
00:00:09.020 --> 00:00:12.020
that it centralizes for the API.

5
00:00:12.020 --> 00:00:16.010
So in this lesson we're just going to take a quick look

6
00:00:16.010 --> 00:00:20.070
at the monitoring feature within Apigee.

7
00:00:20.070 --> 00:00:26.010
So we'll first navigate into our hsportscatalog proxy

8
00:00:26.010 --> 00:00:29.030
and inside of the proxy definition

9
00:00:29.030 --> 00:00:31.030
we see our two environments.

10
00:00:31.030 --> 00:00:35.040
Let's copy the URL for our prod environment

11
00:00:35.040 --> 00:00:39.000
and then we can paste it into the browser

12
00:00:39.000 --> 00:00:43.010
and hit our product endpoint.

13
00:00:43.010 --> 00:00:49.040
At this point I'm going to remove the tab from the browser

14
00:00:49.040 --> 00:00:53.030
and we can navigate within Apigee

15
00:00:53.030 --> 00:00:59.020
to the API Proxy Performance option via the side bar.

16
00:00:59.020 --> 00:01:01.070
So just click this third icon down

17
00:01:01.070 --> 00:01:04.080
and then API Proxy Performance.

18
00:01:04.080 --> 00:01:09.000
This is going to give us an understanding

19
00:01:09.000 --> 00:01:13.070
of all the traffic navigating to our API

20
00:01:13.070 --> 00:01:17.020
through the proxy established by Apigee.

21
00:01:17.020 --> 00:01:23.040
So when I send a bunch of HTTP traffic to our API,

22
00:01:23.040 --> 00:01:26.040
Apigee is going to capture that traffic

23
00:01:26.040 --> 00:01:30.020
and register it within this display.

24
00:01:30.020 --> 00:01:32.010
So here we see the traffic

25
00:01:32.010 --> 00:01:36.070
that has been sent to our API over the past hour.

26
00:01:36.070 --> 00:01:41.040
So this is a way that we can monitor the response times

27
00:01:41.040 --> 00:01:45.000
and the traffic to our APIs.

28
00:01:45.000 --> 00:01:46.000
One thing you should note,

29
00:01:46.000 --> 00:01:50.000
there is a slight delay in the monitoring,

30
00:01:50.000 --> 00:01:52.040
so it won't show up real-time,

31
00:01:52.040 --> 00:01:55.050
but it does give you a good understanding

32
00:01:55.050 --> 00:01:59.000
of API usage as well as response time.

