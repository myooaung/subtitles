WEBVTT
1
00:00:03.020 --> 00:00:20.090
Swagger supports the ability to mock APIs

2
00:00:20.090 --> 00:00:30.070
Let's take a look at this feature in action.

3
00:00:30.070 --> 00:00:54.000
by clicking on the view documentation

4
00:00:54.000 --> 00:00:56.004
where we can go ahead and execute

5
00:00:56.004 --> 00:01:00.006
a request against this API operation.

6
00:01:00.006 --> 00:01:00.060
You'll notice that we are able to see the response

7
00:01:00.060 --> 00:01:03.009
You'll notice that we are able to see the response

8
00:01:03.009 --> 00:01:09.004
provided back from the API and that's because SwaggerHub

9
00:01:09.004 --> 00:01:09.040
is providing this virtual server that's mocking the API.

10
00:01:09.040 --> 00:01:14.005
is providing this virtual server that's mocking the API.

11
00:01:14.005 --> 00:01:18.003
So, if we grab this URL and we copy it and put it

12
00:01:18.003 --> 00:01:20.009
into the browser, you'll notice

13
00:01:20.009 --> 00:01:23.004
that we get some JSON returned.

14
00:01:23.004 --> 00:01:28.000
So if you're an API consumer of this API,

15
00:01:28.000 --> 00:01:31.007
you can go ahead and program against this contract

16
00:01:31.007 --> 00:01:35.006
while the API implementation is being developed.

17
00:01:35.006 --> 00:01:40.006
Now, if we navigate back to MYhub and look at

18
00:01:40.006 --> 00:01:47.001
our catalog API, we can go into the Swagger UI docs

19
00:01:47.001 --> 00:01:51.009
and if we take a look at one of these operations on the API,

20
00:01:51.009 --> 00:01:55.005
you'll notice our try it now button is missing,

21
00:01:55.005 --> 00:02:00.005
and that's because we imported this API definition,

22
00:02:00.005 --> 00:02:02.006
and during the import, SwaggerHub

23
00:02:02.006 --> 00:02:05.008
doesn't stand up the auto mocking feature.

24
00:02:05.008 --> 00:02:10.006
So let's see how we can put it in place in this situation.

25
00:02:10.006 --> 00:02:13.004
So the first thing that we'll do is click on

26
00:02:13.004 --> 00:02:18.009
the name of the API and then we can click on integrations.

27
00:02:18.009 --> 00:02:21.006
Using this dropdown, we can select

28
00:02:21.006 --> 00:02:21.060
from several integrations that SwaggerHub provides.

29
00:02:21.060 --> 00:02:25.006
from several integrations that SwaggerHub provides.

30
00:02:25.006 --> 00:02:25.060
In our case, we need the API auto mocking integration,

31
00:02:25.060 --> 00:02:29.008
In our case, we need the API auto mocking integration,

32
00:02:29.008 --> 00:02:33.009
so we'll go ahead and select it and then click on add.

33
00:02:33.009 --> 00:02:37.008
At this point, we can now provide a name

34
00:02:37.008 --> 00:02:41.007
for the integration, so let's just call it auto mocking,

35
00:02:41.007 --> 00:02:45.008
and then we can create the integration,

36
00:02:45.008 --> 00:02:45.080
and it's now in place, and we can take a look at

37
00:02:45.080 --> 00:02:50.007
and it's now in place, and we can take a look at

38
00:02:50.007 --> 00:02:50.070
its configuration because there's

39
00:02:50.070 --> 00:02:53.000
its configuration because there's

40
00:02:53.000 --> 00:02:53.000
an important section here that we need.

41
00:02:53.000 --> 00:02:55.007
an important section here that we need.

42
00:02:55.007 --> 00:02:59.000
You'll notice that it says it automatically creates

43
00:02:59.000 --> 00:03:03.004
a mock for this API, and then it specifies

44
00:03:03.004 --> 00:03:07.001
the format of the URL for the mock.

45
00:03:07.001 --> 00:03:10.008
So let's go ahead and copy that because we need to add

46
00:03:10.008 --> 00:03:15.001
a server definition into our API.

47
00:03:15.001 --> 00:03:19.004
So, at the top of the catalog API,

48
00:03:19.004 --> 00:03:19.040
we're going to go ahead and specify the servers property,

49
00:03:19.040 --> 00:03:22.009
we're going to go ahead and specify the servers property,

50
00:03:22.009 --> 00:03:25.007
and then inside of the servers property,

51
00:03:25.007 --> 00:03:25.070
we can specify a description, so let's say

52
00:03:25.070 --> 00:03:28.007
we can specify a description, so let's say

53
00:03:28.007 --> 00:03:28.070
this is the SwaggerHub API auto mocking server,

54
00:03:28.070 --> 00:03:35.003
this is the SwaggerHub API auto mocking server,

55
00:03:35.003 --> 00:03:38.008
and then we go ahead and provide a URL,

56
00:03:38.008 --> 00:03:38.080
and here is where we need to complete

57
00:03:38.080 --> 00:03:42.006
and here is where we need to complete

58
00:03:42.006 --> 00:03:46.008
some of the these template parameters within the URL.

59
00:03:46.008 --> 00:03:48.006
Now, you'll notice it requires

60
00:03:48.006 --> 00:03:51.006
the owner, the API, and the version.

61
00:03:51.006 --> 00:03:56.005
Conveniently, those are found within the URL of the editor,

62
00:03:56.005 --> 00:03:56.050
so let's just go ahead and copy that,

63
00:03:56.050 --> 00:03:58.007
so let's just go ahead and copy that,

64
00:03:58.007 --> 00:04:01.005
and then we can put this in place

65
00:04:01.005 --> 00:04:01.050
by pasting that into our API definition,

66
00:04:01.050 --> 00:04:05.001
by pasting that into our API definition,

67
00:04:05.001 --> 00:04:09.003
and now if we view our documentation,

68
00:04:09.003 --> 00:04:12.007
we can expand one of our API operations,

69
00:04:12.007 --> 00:04:15.004
oops, it's still missing, so let's go ahead

70
00:04:15.004 --> 00:04:19.007
and save this in order for it to take place, okay.

71
00:04:19.007 --> 00:04:23.009
With that saved, now we can preview the docs,

72
00:04:23.009 --> 00:04:27.003
and if we expand one of the API operations,

73
00:04:27.003 --> 00:04:31.003
we now see that the try it out feature is available

74
00:04:31.003 --> 00:04:35.004
and we can go ahead and execute a request

75
00:04:35.004 --> 00:04:41.000
against a mocked version of our API implementation,

76
00:04:41.000 --> 00:04:43.001
and there we see the response.

77
00:04:43.001 --> 00:04:46.002
So we can go ahead and grab that URL,

78
00:04:46.002 --> 00:04:49.006
and we'll test that out within the browser as well

79
00:04:49.006 --> 00:04:51.009
just to make sure everything's working,

80
00:04:51.009 --> 00:04:54.008
and once again if we were an API consumer,

81
00:04:54.008 --> 00:04:59.001
we could perform development against this virtual server

82
00:04:59.001 --> 00:04:59.010
which provides mocking of our API.

83
00:04:59.010 --> 00:05:02.000
which provides mocking of our API.

