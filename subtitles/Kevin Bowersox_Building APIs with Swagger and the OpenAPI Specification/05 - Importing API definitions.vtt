WEBVTT
1
00:00:00.050 --> 00:00:02.060
- [Instructor] In some situations, you may need

2
00:00:02.060 --> 00:00:07.000
to import an existing OAS API definition file

3
00:00:07.000 --> 00:00:08.060
into SwaggerHub.

4
00:00:08.060 --> 00:00:11.090
So for example, we've worked within Swagger

5
00:00:11.090 --> 00:00:17.030
editor to build out the catalog API definition

6
00:00:17.030 --> 00:00:19.030
for H Sports.

7
00:00:19.030 --> 00:00:21.040
Let's say that we're really happy with Swagger

8
00:00:21.040 --> 00:00:23.050
editor but we'd like to graduate

9
00:00:23.050 --> 00:00:26.010
to the collaboration features that we've discovered

10
00:00:26.010 --> 00:00:27.080
within SwaggerHub.

11
00:00:27.080 --> 00:00:30.070
All we need to do is click on file and then go

12
00:00:30.070 --> 00:00:34.050
to save as YAML, and then within our course

13
00:00:34.050 --> 00:00:38.060
workspace directory I'm going to name this YAML

14
00:00:38.060 --> 00:00:42.080
file H Sports dash API dot YAML.

15
00:00:42.080 --> 00:00:45.080
So I'll go ahead and save that, and now we can

16
00:00:45.080 --> 00:00:49.040
navigate over to SwaggerHub and you'll see

17
00:00:49.040 --> 00:00:54.070
the create new option within the left-hand sidebar.

18
00:00:54.070 --> 00:00:58.090
Here we can select the import and document API

19
00:00:58.090 --> 00:01:02.080
menu item, and it allows us via this dialogue

20
00:01:02.080 --> 00:01:06.010
to browse for an API definition.

21
00:01:06.010 --> 00:01:08.010
In this case we're going to grab

22
00:01:08.010 --> 00:01:12.020
our newly-created H Sports dash API dot YAML file.

23
00:01:12.020 --> 00:01:18.010
And then we can select the organization and the visibility.

24
00:01:18.010 --> 00:01:22.040
So I'm going to leave that as H Plus Sport and private.

25
00:01:22.040 --> 00:01:24.090
And then we just click on upload the file

26
00:01:24.090 --> 00:01:30.050
and then we can import the open API definition.

27
00:01:30.050 --> 00:01:35.020
So here we now see our product API

28
00:01:35.020 --> 00:01:39.050
definition file within SwaggerHub and what we can

29
00:01:39.050 --> 00:01:44.050
do is add another object here.

30
00:01:44.050 --> 00:01:49.000
So we're going to add the tags object and then

31
00:01:49.000 --> 00:01:55.070
within the tags object we're going to build out a new tag.

32
00:01:55.070 --> 00:01:59.040
And we'll give this tag the name product.

33
00:01:59.040 --> 00:02:05.000
And then we can provide a description for this tag.

34
00:02:05.000 --> 00:02:12.000
We can say this is a product-related operation

35
00:02:12.000 --> 00:02:15.080
and now we can navigate into our different

36
00:02:15.080 --> 00:02:20.050
operations within the API definition and tag them.

37
00:02:20.050 --> 00:02:24.030
So here we add the tags object underneath

38
00:02:24.030 --> 00:02:28.040
our get operation, and then we can go ahead

39
00:02:28.040 --> 00:02:33.030
and specify that this is related to the product tag.

40
00:02:33.030 --> 00:02:38.070
So we'll just copy that YAML and add it within

41
00:02:38.070 --> 00:02:42.010
each of our operations.

42
00:02:42.010 --> 00:02:45.070
So there we'll apply it to the post.

43
00:02:45.070 --> 00:02:50.070
And then finally we can add it within our get

44
00:02:50.070 --> 00:02:54.090
for the product path.

45
00:02:54.090 --> 00:03:00.040
Okay, and then once our API definition validates

46
00:03:00.040 --> 00:03:06.040
you can see within our documentation we now

47
00:03:06.040 --> 00:03:11.010
get the product tag and all of the end points

48
00:03:11.010 --> 00:03:15.020
with that tag are grouped together in the API docs.

49
00:03:15.020 --> 00:03:18.080
So this is an excellent way that we can organize

50
00:03:18.080 --> 00:03:22.060
our operations within our API documentation,

51
00:03:22.060 --> 00:03:28.000
making them easier to consume for our API clients.

