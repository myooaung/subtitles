WEBVTT
1
00:00:00.050 --> 00:00:02.000
- [Instructor] A domain in SwaggerHub

2
00:00:02.000 --> 00:00:03.070
provides the capability

3
00:00:03.070 --> 00:00:06.080
to reuse OAS definition objects

4
00:00:06.080 --> 00:00:09.080
such as schema definitions, path items,

5
00:00:09.080 --> 00:00:14.080
parameters and responses across multiple API definitions.

6
00:00:14.080 --> 00:00:16.070
The ability to reuse objects

7
00:00:16.070 --> 00:00:21.050
across API definitions helps maintain consistency

8
00:00:21.050 --> 00:00:23.090
amongst an organization's catalog

9
00:00:23.090 --> 00:00:26.060
of API definition files.

10
00:00:26.060 --> 00:00:30.090
It also allows them to deliver API definitions

11
00:00:30.090 --> 00:00:34.040
more quickly because of the reusability we achieve.

12
00:00:34.040 --> 00:00:38.000
So, let's go ahead and create a domain

13
00:00:38.000 --> 00:00:43.070
for the HPlusSports organization within SwaggerHub.

14
00:00:43.070 --> 00:00:47.000
To do this, we click on the plus button

15
00:00:47.000 --> 00:00:48.060
on the left-hand side bar

16
00:00:48.060 --> 00:00:51.070
and then go to Create New Domain.

17
00:00:51.070 --> 00:00:55.010
Now within the Add New Domain dialog,

18
00:00:55.010 --> 00:00:56.090
it is extremely important

19
00:00:56.090 --> 00:01:00.080
that we select OAS 3.0.

20
00:01:00.080 --> 00:01:04.060
From there, we can specify the name of our domain.

21
00:01:04.060 --> 00:01:07.070
I'm just going to say HPlus for short.

22
00:01:07.070 --> 00:01:10.060
After that, we can set our version number

23
00:01:10.060 --> 00:01:13.090
which I'm going to set to version 1.0.

24
00:01:13.090 --> 00:01:15.040
With this information in place,

25
00:01:15.040 --> 00:01:17.040
we can click on Create Domain

26
00:01:17.040 --> 00:01:20.000
and our new domain will be created

27
00:01:20.000 --> 00:01:22.050
and we're navigated to the editor.

28
00:01:22.050 --> 00:01:24.050
You'll notice, within the editor,

29
00:01:24.050 --> 00:01:26.090
we already receive this template

30
00:01:26.090 --> 00:01:28.050
for creating a domain.

31
00:01:28.050 --> 00:01:31.090
Now it's set up for this Acme Components domain.

32
00:01:31.090 --> 00:01:38.030
Let's tailor that for our HPlus Sports domain

33
00:01:38.030 --> 00:01:41.020
and we'll adjust the description.

34
00:01:41.020 --> 00:01:45.010
These are components for HPlus Sport

35
00:01:45.010 --> 00:01:47.070
and then if we look further down

36
00:01:47.070 --> 00:01:50.010
within this domain definition,

37
00:01:50.010 --> 00:01:52.080
you'll see the important sections.

38
00:01:52.080 --> 00:01:55.040
So, here we define schemas, parameters,

39
00:01:55.040 --> 00:02:00.030
responses, request bodies, all of the reusable objects

40
00:02:00.030 --> 00:02:02.020
that we would like to be able

41
00:02:02.020 --> 00:02:05.060
to use across API definitions.

42
00:02:05.060 --> 00:02:07.040
Now, for our purposes,

43
00:02:07.040 --> 00:02:11.000
we are only interested in the schema section,

44
00:02:11.000 --> 00:02:13.050
so I'm actually going to remove everything else

45
00:02:13.050 --> 00:02:16.070
and then go ahead and Save our domain

46
00:02:16.070 --> 00:02:19.000
and now within MY hub,

47
00:02:19.000 --> 00:02:23.000
I'm going to navigate into our customer API

48
00:02:23.000 --> 00:02:25.060
because we'd like to be able to reuse

49
00:02:25.060 --> 00:02:30.000
our customer schema across multiple API definitions

50
00:02:30.000 --> 00:02:32.010
within the organization.

51
00:02:32.010 --> 00:02:34.010
So, I'll just go ahead and copy that

52
00:02:34.010 --> 00:02:38.020
and then we can navigate back to MY hub

53
00:02:38.020 --> 00:02:41.080
and into our HPlus domain.

54
00:02:41.080 --> 00:02:44.070
Now if you do not see the HPlus domain,

55
00:02:44.070 --> 00:02:46.010
do not be alarmed,

56
00:02:46.010 --> 00:02:50.010
there may be a filter being applied on your list.

57
00:02:50.010 --> 00:02:52.020
If there is, you'll see an option to clear it

58
00:02:52.020 --> 00:02:55.080
right about here within the search bar.

59
00:02:55.080 --> 00:02:58.070
For now, I'm just going to head back into that domain

60
00:02:58.070 --> 00:03:01.090
and then we're going to replace the error model

61
00:03:01.090 --> 00:03:04.060
with our customer schema.

62
00:03:04.060 --> 00:03:07.050
So, there we see our customer schema

63
00:03:07.050 --> 00:03:09.040
is now in place.

64
00:03:09.040 --> 00:03:12.080
So, let's save our domain once again

65
00:03:12.080 --> 00:03:14.080
and it's ready for use,

66
00:03:14.080 --> 00:03:16.060
so let's publish it.

67
00:03:16.060 --> 00:03:19.030
At this point, we have version 1.0

68
00:03:19.030 --> 00:03:21.020
of the domain published

69
00:03:21.020 --> 00:03:26.080
and we can now reference the customer schema

70
00:03:26.080 --> 00:03:28.070
defined within our domain

71
00:03:28.070 --> 00:03:32.060
inside of our customer API.

72
00:03:32.060 --> 00:03:36.000
And you'll notice that our customer API

73
00:03:36.000 --> 00:03:37.060
is currently read only,

74
00:03:37.060 --> 00:03:40.020
so that means we need to add a new version.

75
00:03:40.020 --> 00:03:42.040
This is going to be version 3.0

76
00:03:42.040 --> 00:03:45.010
of the API definition

77
00:03:45.010 --> 00:03:47.010
and now we can edit it,

78
00:03:47.010 --> 00:03:50.060
since we have defined the customer object

79
00:03:50.060 --> 00:03:52.050
within our domain,

80
00:03:52.050 --> 00:03:55.080
we can go ahead and remove the entire components object

81
00:03:55.080 --> 00:03:59.030
and now in the 200 response,

82
00:03:59.030 --> 00:04:01.080
where we reference the customer

83
00:04:01.080 --> 00:04:05.000
using the ref property,

84
00:04:05.000 --> 00:04:09.060
we can select the customer within our domain.

85
00:04:09.060 --> 00:04:11.070
So, just hit Control + space

86
00:04:11.070 --> 00:04:14.030
and you're going to get some auto completion

87
00:04:14.030 --> 00:04:17.080
where you can select the available schemas

88
00:04:17.080 --> 00:04:20.030
within our domain.

89
00:04:20.030 --> 00:04:23.010
And there you can see that we point

90
00:04:23.010 --> 00:04:25.090
to the HPlus domain

91
00:04:25.090 --> 00:04:29.090
and the customer object found within it.

92
00:04:29.090 --> 00:04:31.060
If we scroll over

93
00:04:31.060 --> 00:04:36.000
and look at our API operation,

94
00:04:36.000 --> 00:04:42.020
you'll notice that we still have our customer schema defined

95
00:04:42.020 --> 00:04:45.060
as a response for this API operation.

96
00:04:45.060 --> 00:04:48.030
That definition is now just coming

97
00:04:48.030 --> 00:04:50.070
from our domain instead of locally

98
00:04:50.070 --> 00:04:53.030
within our API definition.

99
00:04:53.030 --> 00:04:55.090
If you have a large catalog of APIs

100
00:04:55.090 --> 00:04:57.050
within your organization,

101
00:04:57.050 --> 00:04:59.030
I strongly encourage you

102
00:04:59.030 --> 00:05:03.000
to take advantage of SwaggerHub's domain feature.

