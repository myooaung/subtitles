WEBVTT

00:02.150 --> 00:08.810
Now we added routing and before we dive into editing posts, there's one important thing I want to highlight.

00:08.820 --> 00:13.910
We now have routes here in our angular app defined in the app routing module

00:14.190 --> 00:21.750
but we also have routes on the backend in the app.js file and these routes are actually not really connected,

00:21.750 --> 00:24.600
they're running on different servers,

00:24.630 --> 00:31.190
so our backend is of course running on localhost 3000 because that is the port we defined

00:31.590 --> 00:34.300
and they do different things.

00:34.310 --> 00:39.530
The angular router is actually just a tool that is able to parse the

00:39.540 --> 00:46.200
url of our app and then render different things onto the screen through javascript.

00:46.290 --> 00:47.230
That is what it's doing,

00:47.250 --> 00:49.650
it's not loading different html pages,

00:49.650 --> 00:56.880
we only have one html page, the index.html page but it's re-rendering the content on that page for the different

00:56.900 --> 01:03.630
urls we're visiting. Now important, these routes here in the angular router are only known by

01:03.690 --> 01:06.880
angular which is a client side application,

01:06.990 --> 01:11.790
so which is a javascript driven application running in the browser.

01:11.910 --> 01:18.480
This means and this will become important when we later deploy this, that the server doesn't know these routes,

01:18.630 --> 01:23.860
neither our backend here nor any server that might serve our angular app

01:23.990 --> 01:29.610
and I will show you which implications this has and how we make the server aware of this fact later

01:29.610 --> 01:31.200
when we deploy this.

01:31.230 --> 01:38.040
It's also important to note that if you were to host your angular app on the same server as your node

01:38.070 --> 01:41.300
app, there will be a couple of things to keep in mind which you will see

01:41.340 --> 01:49.380
but one important thing is that you must not use routes you defined in angular like this /create

01:49.520 --> 01:56.910
route here, that you must not use them in your backend too because what would happen then is that the server

01:56.970 --> 02:00.240
would parse and understand them because you defined them there

02:00.540 --> 02:06.660
and it would not parse the page onto angular to also have a look at that, instead it would do what it

02:06.660 --> 02:07.160
does and

02:07.230 --> 02:11.070
this is probably not that it returns the index.html file.

02:11.340 --> 02:14.940
So this is very abstract, we'll come back to this when we deploy our app

02:15.090 --> 02:20.400
but it's important to understand the difference between client side routing which is all about reading

02:20.470 --> 02:27.270
the url and re-rendering parts of the page and server side routing which is all about handling incoming

02:27.270 --> 02:30.240
requests and sending back something different.

02:30.420 --> 02:36.480
In one case, the server side routing, you really exchange data, you are sending requests and responses, in

02:36.480 --> 02:37.720
the client side case,

02:37.770 --> 02:41.780
you're not doing that, you are reading the url and you're re-rendering the page.
