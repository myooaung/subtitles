WEBVTT

00:02.690 --> 00:08.180
So with the image path extracted, we want to display that of course and to display that,

00:08.180 --> 00:12.630
let's go to the post list component which is where we do display the post data

00:12.950 --> 00:21.210
and thus far we only output the header and then in the expanded box for the posts, just the content.

00:21.230 --> 00:26.040
Now I also want to have my image in here and you can style this however you want,

00:26.330 --> 00:32.400
I'll add a little div here, class could be post image but that really is up to you

00:32.710 --> 00:35.170
and in there, I want to have an image.

00:35.390 --> 00:42.790
Now I'll again bind my alt tag here to post title and the source,

00:43.130 --> 00:46.820
well that should be bound to post image path,

00:46.880 --> 00:47.200
right

00:47.210 --> 00:50.060
because that should be a URL to the image.

00:51.170 --> 00:53.800
Now let's work on the styling in a second,

00:53.870 --> 00:55.930
let's first of all see if that works.

00:56.000 --> 00:57.650
If I go to my messages here,

00:58.600 --> 01:04.090
you see already I get an error here and I see no images anywhere,

01:04.210 --> 01:07.810
that's all not working at all.

01:07.810 --> 01:10.740
Now why is this not working?

01:10.930 --> 01:16.440
It's not working because we are of course requesting an invalid image path,

01:16.450 --> 01:21.480
we got no image paths for our older posts, so let's simply delete these.

01:24.790 --> 01:29.690
If we now reload the page, this error still is there.

01:30.590 --> 01:32.520
Now let's go to the network tab and

01:32.630 --> 01:37.790
let's check the request where we get our posts. There in the preview of the response,

01:37.790 --> 01:39.450
we have our posts array

01:39.590 --> 01:44.450
and indeed in the database, the image path is missing.

01:44.490 --> 01:53.450
So back on our server when we store our post here, the image path wasn't saved because we haven't created

01:53.450 --> 01:56.070
a post since we added that functionality.

01:56.270 --> 02:04.490
So let's delete that too and let's create another new post, so new post, spring is there,

02:06.390 --> 02:12.610
all the nice weather, how awesome is that

02:12.920 --> 02:17.330
and most importantly let's pick an image, the right one of course, not the video.

02:17.480 --> 02:18.800
Let's save that

02:19.220 --> 02:22.750
and now we actually still have a problem here.

02:22.820 --> 02:26.240
We do see that we did try to request something there

02:26.300 --> 02:29.580
and if I reload that page, we see it here.

02:29.750 --> 02:35.260
So now we at least try to reach out to a real file, in the network we can see this

02:35.330 --> 02:40.490
and in the posts which we fetched, we can also see that now there is an image path and that is our

02:40.490 --> 02:44.320
URL but we fail to fetch that image.

02:45.390 --> 02:51.830
Now the reason for that is that we didn't grant access to that images folder on our back-end. By default

02:51.840 --> 02:53.150
and that's a good thing,

02:53.160 --> 02:58.230
all your files are unaccessible, you control with your routes

02:58.260 --> 02:59.850
what can be accessed

03:00.120 --> 03:03.120
and we don't give access to the image folder anywhere.

03:03.120 --> 03:10.070
Now to change this, I will simply go to my app.js file and I will add something there.

03:10.350 --> 03:17.160
I want to make that images folder statically accessible which means any requests targeting that folder

03:17.340 --> 03:20.740
should simply be forwarded, should be allowed to continue.

03:21.760 --> 03:22.690
I'll do that,

03:22.700 --> 03:28.610
let's say after my body parser middleware calls with another middleware I add with app use

03:28.850 --> 03:32.280
and that's a middleware built into Express.

03:32.280 --> 03:38.410
It will only apply to any requests which have /images in them,

03:38.420 --> 03:40.540
so where I try to access this

03:40.950 --> 03:46.820
and if that is the case, the middleware I want to add is the one shipping with Express, the static middleware.

03:47.720 --> 03:55.430
The static middleware simply is added like this and this means any requests targeting /images will

03:55.430 --> 03:59.600
be allowed to continue and fetch their files from there.

03:59.600 --> 04:04.790
However this won't work because /images is actually incorrect,

04:04.790 --> 04:11.380
it's hidden away under back-end images. So to map this, I will import something,

04:11.540 --> 04:18.270
a package shipping with NodeJS, the path package which is added by requiring path.

04:18.290 --> 04:25.460
This allows us to construct paths in a way that's safe to run on any operating system and well, simply

04:25.460 --> 04:27.160
is constructed correctly.

04:27.530 --> 04:36.860
I can construct the path to my back-end images folder then with path join back-end images and this will

04:36.860 --> 04:42.920
simply make sure that requests going to images are actually forwarded to back-end images.

04:43.250 --> 04:50.120
With that out of the way, if we save that and we reload on the front-end, the error is gone and we see

04:50.120 --> 04:50.960
the image here.

04:51.140 --> 04:57.610
Maybe a little bit too big, we could argue about that but we can see that we can load the image.

04:57.620 --> 05:02.990
Now let's fix the styling real quick by going to our front-end code and there,

05:02.990 --> 05:05.500
I'm wrapping this in post image right,

05:05.840 --> 05:06.810
so let's go there,

05:06.830 --> 05:11.300
let's add that post image class to the respective css file.

05:11.540 --> 05:19.610
Let's give it a width of 100% and then let's target post image in the image inside of there and

05:19.620 --> 05:23.220
let's give that a width of 100% of the surrounding container

05:24.210 --> 05:25.800
and now if we have a look at this,

05:25.860 --> 05:28.260
now this looks much better already.

05:28.380 --> 05:30.050
Now you could change this a bit more,

05:30.180 --> 05:39.690
maybe give it a drop shadow, little box shadow here, 1px 1px, let's say 5px and then rgba code

05:39.690 --> 05:44.450
which looks like this,

05:44.450 --> 05:51.300
that of course is totally up to you how you want to style this, yeah I like this look.

05:51.330 --> 05:57.660
So now we got our image here loaded from the back-end, uploaded by our application.

05:57.660 --> 06:04.480
Now there's one thing you might have noticed, if you add a new image here and you upload a new post,

06:04.530 --> 06:06.050
then we got to error before.

06:06.060 --> 06:07.680
Now that's also gone

06:07.710 --> 06:13.900
now that we implemented this all correctly and we made sure that the data is saved and that we also

06:13.950 --> 06:16.370
access it correctly statically.

06:16.380 --> 06:24.480
Now with that, we're able to upload new post or create posts and upload images, we're able to display these

06:24.480 --> 06:25.230
images,

06:25.230 --> 06:31.740
the next step is of course that we're able to also edit these posts because right now, that doesn't work

06:31.770 --> 06:34.670
because we got no image value there.
