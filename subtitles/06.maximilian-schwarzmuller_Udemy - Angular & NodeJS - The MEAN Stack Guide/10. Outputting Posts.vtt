WEBVTT

00:02.140 --> 00:04.420
So the goal is to be able to output the posts

00:04.510 --> 00:11.020
and for this, I'll add another new component because I said you want to be granular and creating a post is

00:11.020 --> 00:14.810
actually something which is decoupled from outputting the posts.

00:14.860 --> 00:19.810
So in the post folder, I'll create a new subfolder which I'll name post list

00:19.960 --> 00:27.450
and in there, I'll add my post-list.component.ts and the post-list.component.html

00:27.520 --> 00:30.440
file for the html content.

00:30.760 --> 00:32.890
Now you know how to create such a component,

00:33.040 --> 00:38.080
by the way if you use the cli regularly for that, you can also create components with the cli with a

00:38.080 --> 00:38.890
command,

00:38.890 --> 00:40.820
I'm a fan of the manual approach

00:40.860 --> 00:43.050
also because it's really good for practicing.

00:43.330 --> 00:49.200
So here I'll export another class, post-list.component.html

00:49.440 --> 00:54.150
and as you know we add the @component decorator to it

00:54.300 --> 00:56.300
and in there we add a selector,

00:56.310 --> 01:08.720
this will be app post list and a template url link where we point to our post-list.component.html

01:08.820 --> 01:10.150
file.

01:10.200 --> 01:15.840
So now we got that base components set up, as you know we need to include it to app module to use it,

01:15.870 --> 01:17.370
so in the declarations array

01:17.400 --> 01:25.650
I'll add my post-list.component, also add the import, here my IDE added it and then we can use it in the

01:25.650 --> 01:34.980
app component maybe below the app post create component, there we could add app posts list, like this.

01:34.980 --> 01:37.140
Now right now our component is empty,

01:37.140 --> 01:40.490
the goal is to render a list of posts in there.

01:40.560 --> 01:44.940
So for now first of all let's go back to post create component and get rid of that ugly paragraph

01:45.450 --> 01:49.060
and then dive into the post-list.component.html template.

01:49.410 --> 01:54.840
I want to use another feature of the angular material package and that can be found under layout,

01:54.990 --> 01:58.990
I want to use the expansion panel which is a collapsible,

01:59.220 --> 02:02.520
well panel where we can display some content.

02:02.660 --> 02:10.860
Now to use this, I'll go back to the app module and import one additional module from angular material, the

02:10.960 --> 02:18.510
mat expansion module and also add this to the imports array here, mat

02:18.530 --> 02:21.470
expansion module like this

02:21.470 --> 02:28.370
and now with that added, let's go back to the post-list.component.html file and to use it, we can again

02:28.370 --> 02:35.210
have a look at the official docs, at the dummy source code there, as you can see they use the mat accordion

02:35.210 --> 02:40.550
to wrap this all, this is used to basically be able to orchestrate all these expansion panels.

02:40.580 --> 02:50.790
Now we can easily recreate this by adding mat accordion here as an element in our post-list.component.html

02:50.820 --> 02:51.880
file

02:52.240 --> 03:00.340
and in there, add the mat expansion panel element and in that mat expansion panel element, you can

03:00.340 --> 03:05.940
have a mat expansion panel header, this allow you to define a title

03:06.310 --> 03:17.440
and below that header, you can also have some regular content like here, I'm in an expansion panel like

03:17.440 --> 03:29.020
this and this would be the expansion title. Now if we save that and we go back to our application, we

03:29.020 --> 03:32.440
can see our expandable element here.

03:32.440 --> 03:37.870
Now it's sitting directly beneath the card at the top here which is not super pretty,

03:37.870 --> 03:43.390
additionally I'd also like to restrict the width of that, since I want to do restrict the width of both

03:43.390 --> 03:47.920
the input and this, maybe I want to restrict the width of the total main content.

03:48.280 --> 03:57.190
So let's go actually to the post create component, to the style there and I will not set mat card here

03:57.200 --> 03:59.470
anymore to have a width of 80%,

03:59.590 --> 04:07.510
instead I go to my app-component.css file and for the main area here, there I will set a width of 80%

04:07.510 --> 04:08.000
and

04:10.680 --> 04:12.620
margin auto for now.

04:12.900 --> 04:19.410
So now both is limited in width and centered, now to have some spacing between our post-list.component

04:19.710 --> 04:21.940
and our posts create component,

04:21.960 --> 04:24.220
we've got multiple ways of achieving this.

04:24.300 --> 04:31.050
One simple way is to add a margin top to our post-list.component and we can do this by adding post-list.

04:31.050 --> 04:40.530
component.css here and import this into our post-list.component by adding style urls here

04:41.130 --> 04:51.050
post-lists.component.css and in here then target a special selector, the post selector which

04:51.050 --> 04:52.340
targets the element itself

04:52.340 --> 04:57.320
so to say and add a margin top of 1rem.

04:57.520 --> 05:04.250
And if we save that, nothing changed because actually all the elements by default are not treated as

05:04.250 --> 05:05.550
block level elements,

05:05.630 --> 05:08.530
so we have to set the display to block first,

05:08.570 --> 05:11.490
once we do that, now we get some spacing here,

05:11.610 --> 05:12.220
cool.

05:12.230 --> 05:13.340
So now this is working,

05:13.400 --> 05:18.690
now let's go back to populating this with some content too. We get a title and a

05:18.740 --> 05:20.000
well content,

05:20.120 --> 05:24.900
so we might want to add a new field for a title here eventually

05:25.070 --> 05:29.810
but first of all, let's see how we could output a list of some dummy posts.

05:29.810 --> 05:36.620
So back in the post-list.component, we only got one expansion panel with hardcoded content in there,

05:36.620 --> 05:43.430
now let's say we had a list of posts, so in the post list component let's say we have posts and this actually

05:43.430 --> 05:44.770
is an array

05:45.000 --> 05:53.090
and in there we got some javascript object where every post has title like first post and some content

05:53.510 --> 06:00.290
like this is the first post content

06:00.820 --> 06:03.640
and we had not just one but three posts,

06:03.640 --> 06:10.930
so the second and the third post and here we got the second post and the third post content.

06:11.070 --> 06:16.870
Now it would be nice if we could dynamically loop through all these posts and output that data in our

06:16.870 --> 06:19.030
template right. Now

06:19.090 --> 06:22.000
actually angular has us covered when it comes to this,

06:22.030 --> 06:28.150
it offers so-called directives which I already mentioned before briefly which allow us to manipulate

06:28.210 --> 06:31.420
elements in the dom when needed.

06:31.420 --> 06:36.010
Now let's dive deeper into what I mean with this and how this works in the next lecture.
