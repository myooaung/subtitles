WEBVTT

00:02.360 --> 00:07.340
So in the last lecture, we started setting up our mongodb on a cloud storage

00:07.370 --> 00:12.950
or maybe you install it locally, in both situations or in both ways,

00:13.010 --> 00:15.910
you have a database, at least soon

00:16.100 --> 00:21.800
and now we need a way to connect to that database from within our node express application.

00:21.950 --> 00:24.690
And for that, we'll use a third party package,

00:24.710 --> 00:29.000
now actually there are two packages we could use. We'll install it with npm,

00:29.000 --> 00:35.380
so the command will be npm install --save to also store an entry in the package.json file

00:35.690 --> 00:40.790
and now we could use the normal mongodb client package.

00:40.790 --> 00:44.350
You'll also find a link to that on the mongodb page,

00:44.670 --> 00:52.360
if you scroll up there, here on docs, you can access the official documentation

00:52.740 --> 01:00.070
and then here you can click on getting started and there you find a nodejs section where it explains to

01:00.070 --> 01:06.640
you how you can connect to it and this code here actually uses this mongodb nodejs driver

01:06.640 --> 01:13.470
which you can download by following the installation instruction here and as you can see, the package name

01:13.470 --> 01:15.640
would be mongodb installed

01:15.660 --> 01:17.180
through node's package manager.

01:17.190 --> 01:18.730
Now we'll not use that

01:18.750 --> 01:23.500
driver, this is a defined driver and you can access your database with it,

01:23.520 --> 01:26.390
you can also access it directly from your shell

01:26.390 --> 01:29.020
by the way but we'll not do this for now

01:29.370 --> 01:32.630
but I want to use a different package for accessing mongodb,

01:32.790 --> 01:39.240
I'll use mongoose. Mongoose is a third party package which builds up on the official mongodb driver

01:39.510 --> 01:44.550
but it makes accessing mongodb much easier and more convenient.

01:44.550 --> 01:52.380
It does something which I told you that mongodb does not really use, mongoose uses schemas, so you

01:52.380 --> 01:58.490
can define how your data should look like and that allows you to conveniently store and fetch data.

01:58.490 --> 02:03.120
Now obviously this might not be the solution you're looking for if you have the requirement of very

02:03.180 --> 02:10.170
unstructured data but often that's not the case and therefore, mongoose is a great tool that could even work

02:10.170 --> 02:11.400
with such unstructured data

02:11.400 --> 02:17.010
by the way but especially if you have structured data, if you have a certain model you use.

02:17.010 --> 02:19.230
So mongoose is that package we'll use

02:19.370 --> 02:26.950
and we simply install it by running npm install --save mongoose, like this in your project folder.

02:27.240 --> 02:32.700
So now this will download and add this dependency and this tool will then allow us to connect to our

02:32.700 --> 02:40.590
mongodb server and also to interact with it, store data and fetch data. For now storing and fetching

02:40.620 --> 02:42.990
means storing and fetching posts,

02:42.990 --> 02:51.450
so in the next lecture, we'll actually start creating a schema for our post data in our nodejs app

02:51.660 --> 02:58.890
before we finally make that connection to mongodb and well, start storing and fetching our data to and from

02:58.890 --> 02:59.170
there.
