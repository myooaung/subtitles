WEBVTT
1
00:00:00.852 --> 00:00:04.703
Before we get into sprint planning, let's talk about planning releases.

2
00:00:04.703 --> 00:00:05.990
Let's do a context check.

3
00:00:05.990 --> 00:00:09.494
Remember, a series of releases are contained in an Agile project,

4
00:00:09.494 --> 00:00:11.504
so we can't do sprint planning without first

5
00:00:11.504 --> 00:00:14.371
understanding how it fits into release planning.

6
00:00:14.371 --> 00:00:17.085
Now let's look at the release planning workflow.

7
00:00:17.085 --> 00:00:20.555
All Agile projects start with Agile project planning.

8
00:00:20.555 --> 00:00:23.728
This is conducted by a product owner and the dev lead typically.

9
00:00:23.728 --> 00:00:25.978
There may be other subject matter experts as well.

10
00:00:25.978 --> 00:00:29.648
Also, the product owner is bringing in product requirements,

11
00:00:29.648 --> 00:00:34.410
list of items, ideas, concepts, basically a draft of the backlog.

12
00:00:34.410 --> 00:00:39.549
And yes, more times other than not, it can be a bit unstructured and fuzzy.

13
00:00:39.549 --> 00:00:41.753
The team needs to produce a product vision,

14
00:00:41.753 --> 00:00:43.822
which would include what the project is about,

15
00:00:43.822 --> 00:00:47.896
why we are doing the project, and listing the success criteria,

16
00:00:47.896 --> 00:00:50.857
which is the desired outcomes of the project.

17
00:00:50.857 --> 00:00:52.896
Not really that different from other project visions

18
00:00:52.896 --> 00:00:55.058
that you have seen in your career.

19
00:00:55.058 --> 00:00:59.163
Also, the project roadmap is created, which I'll jump into in a moment.

20
00:00:59.163 --> 00:01:01.949
The initial product backlog that may contain features,

21
00:01:01.949 --> 00:01:02.932
user stories,

22
00:01:02.932 --> 00:01:07.538
and epics of various chunkiness since we are still just starting out.

23
00:01:07.538 --> 00:01:10.851
The roadmap will consist of one, two,

24
00:01:10.851 --> 00:01:15.643
or several releases that would each describe the feature set to be

25
00:01:15.643 --> 00:01:19.404
delivered in business terminology so that management and executive

26
00:01:19.404 --> 00:01:23.072
leadership can relate and understand how it will help them.

27
00:01:23.072 --> 00:01:26.160
Along with each release may be target dates.

28
00:01:26.160 --> 00:01:30.654
Very rough and certainly would change based on the cadence of delivery.

29
00:01:30.654 --> 00:01:33.218
And also, budgets may be assigned.

30
00:01:33.218 --> 00:01:36.919
One of the flaws of pure Agile, as interpreted by developers,

31
00:01:36.919 --> 00:01:40.820
is that they may like to ignore dates and budgets.

32
00:01:40.820 --> 00:01:44.993
Please note, a senior executive doesn't usually care about how you work,

33
00:01:44.993 --> 00:01:49.919
that is using Agile and sprints, but instead cares about the business,

34
00:01:49.919 --> 00:01:52.662
what they can afford and when they need it.

35
00:01:52.662 --> 00:01:56.094
So somehow these two worlds must come together for a win-win.

36
00:01:56.094 --> 00:01:57.784
That could be your biggest challenge.

37
00:01:57.784 --> 00:01:58.235
Trust me.

38
00:01:58.235 --> 00:02:00.553
You will now identify the features and user stories

39
00:02:00.553 --> 00:02:03.685
that you want to have in each release.

40
00:02:03.685 --> 00:02:06.987
So the releases with their initially assigned features and

41
00:02:06.987 --> 00:02:10.706
stories along with budgets and dates will make up the

42
00:02:10.706 --> 00:02:18.000
project roadmap and release goals. Now let's go a little deeper into the release plans.

