1
00:00:01,157 --> 00:00:03,403
Sprint Planning: Part 1.

2
00:00:03,403 --> 00:00:04,311
Let's get after it.

3
00:00:04,311 --> 00:00:06,340
First, a quick context check.

4
00:00:06,340 --> 00:00:06,701
Remember,

5
00:00:06,701 --> 00:00:11,848
a sprint begins with sprint planning and contains a series of daily work events,

6
00:00:11,848 --> 00:00:15,677
followed by the sprint demo, review, and retrospective.

7
00:00:15,677 --> 00:00:18,343
At a high level, here's the agile sprint planning flow.

8
00:00:18,343 --> 00:00:22,354
In order to do sprint planning, you need the product owner,

9
00:00:22,354 --> 00:00:25,212
Scrum Master of doing pre-scrum, the dev lead,

10
00:00:25,212 --> 00:00:26,289
and the dev team.

11
00:00:26,289 --> 00:00:29,039
But we'll feed into sprint planning maybe a couple of things.

12
00:00:29,039 --> 00:00:32,256
Here I am showing that this sprint plan is for a sprint

13
00:00:32,256 --> 00:00:35,265
within release 3 and its associated backlog.

14
00:00:35,265 --> 00:00:37,366
If you are not using the release planning model,

15
00:00:37,366 --> 00:00:41,311
you would have the remaining backlog as input into the sprint planning.

16
00:00:41,311 --> 00:00:44,915
Next, the outcomes of the sprint planning are first,

17
00:00:44,915 --> 00:00:46,398
the sprint plan,

18
00:00:46,398 --> 00:00:50,522
which is focused on the next sprint within this release and also what backlog

19
00:00:50,522 --> 00:00:53,974
candidates will be in the subsequent sprints in this release.

20
00:00:53,974 --> 00:00:56,220
Next, refined user stories.

21
00:00:56,220 --> 00:01:00,143
We may need further discussion on a user story to better understand it.

22
00:01:00,143 --> 00:01:02,331
Next, refined estimates and priorities.

23
00:01:02,331 --> 00:01:04,597
Based on those refined user stories and discussions,

24
00:01:04,597 --> 00:01:09,802
we can improve the estimate and reset the priority we want to assign to it.

25
00:01:09,802 --> 00:01:11,522
Lastly, sprint backlogs.

26
00:01:11,522 --> 00:01:12,535
In this example,

27
00:01:12,535 --> 00:01:15,357
we have three sprints and have determined which user

28
00:01:15,357 --> 00:01:17,647
stories are assigned to which sprint.

29
00:01:17,647 --> 00:01:17,895
Again,

30
00:01:17,895 --> 00:01:21,219
this may change based on the outcomes of the sprint

31
00:01:21,219 --> 00:01:23,055
demo review and retrospective.

32
00:01:23,055 --> 00:01:24,326
So, in this example,

33
00:01:24,326 --> 00:01:27,862
I am showing three planned sprints in this release and

34
00:01:27,862 --> 00:01:29,959
the associated backlog for each.

35
00:01:29,959 --> 00:01:32,383
Please note, for the next sprint planning,

36
00:01:32,383 --> 00:01:33,793
let's say in two weeks,

37
00:01:33,793 --> 00:01:37,207
we will only have sprint 2 and sprint 3 since sprint

38
00:01:37,207 --> 00:01:39,788
1 of this release is complete.

39
00:01:39,788 --> 00:01:41,793
Since we are using timeboxing in this example,

40
00:01:41,793 --> 00:01:44,713
the schedule is set, and the scope is fluid.

41
00:01:44,713 --> 00:01:47,528
Each sprint for this example is two weeks.

42
00:01:47,528 --> 00:01:51,604
Typically, at this detail, resources or budget is straightforward.

43
00:01:51,604 --> 00:01:54,296
If my team consists of five, including devs,

44
00:01:54,296 --> 00:02:04,000
QAs, etc., then it would be easy to determine their labor costs. Okay, let's dive a little deeper into sprint planning step by step.

