WEBVTT
1
00:00:01.163 --> 00:00:04.473
So this is the SwaggerConfig for our docket bean,

2
00:00:04.473 --> 00:00:06.680
so let's look at the SwaggerUI.

3
00:00:06.680 --> 00:00:11.711
So first, let's make sure that our UserManagementApplication is running,

4
00:00:11.711 --> 00:00:16.622
which it is, and our ApplicationCatalogApplication is running.

5
00:00:16.622 --> 00:00:21.875
So, they're both running, and so in order to access the SwaggerUI,

6
00:00:21.875 --> 00:00:26.027
you go to localhost:8081/swagger-ui.

7
00:00:26.027 --> 00:00:27.065
html.

8
00:00:27.065 --> 00:00:33.137
So this is the initial look at the API documentation generated for us.

9
00:00:33.137 --> 00:00:39.179
So first, let's look at our Application Entity : Simple Jpa Repository.

10
00:00:39.179 --> 00:00:42.258
Let's click on the list of operations.

11
00:00:42.258 --> 00:00:48.286
So notice here we have POST, DELETE, and PUT; where we can save an application,

12
00:00:48.286 --> 00:00:52.677
delete an application, or update an application.

13
00:00:52.677 --> 00:00:57.098
So let's look at the list of operations.

14
00:00:57.098 --> 00:01:01.009
So here for posting to an application,

15
00:01:01.009 --> 00:01:08.167
it shows you an example of what you need to pass in,

16
00:01:08.167 --> 00:01:12.140
and here it gives you the ability to enter an id,

17
00:01:12.140 --> 00:01:15.258
enter a body, and click try out.

18
00:01:15.258 --> 00:01:19.325
Now let's close this by clicking on Show/Hide,

19
00:01:19.325 --> 00:01:23.927
and now let's look at our application-catalog-controller.

20
00:01:23.927 --> 00:01:26.484
So notice here there are two operations,

21
00:01:26.484 --> 00:01:29.842
GET applications for the entire list of applications,

22
00:01:29.842 --> 00:01:34.583
or GET a single application by passing in the id.

23
00:01:34.583 --> 00:01:39.030
So now, let's expand the operations,

24
00:01:39.030 --> 00:01:46.103
and let's test out get application passing in the id.

25
00:01:46.103 --> 00:01:49.471
So let's get application 1,

26
00:01:49.471 --> 00:01:55.462
and notice here we have our custom response message on the 500

27
00:01:55.462 --> 00:01:58.504
HTTP status code that says the server is down.

28
00:01:58.504 --> 00:02:01.818
Please make sure that the UserManagement microservice is running.

29
00:02:01.818 --> 00:02:05.804
And so we looked at how we could customize response

30
00:02:05.804 --> 00:02:08.171
messages from our microservices using Swagger.

31
00:02:08.171 --> 00:02:16.167
So let's try this out, let's click on try out, and here is our response body.

32
00:02:16.167 --> 00:02:21.442
So you see SwaggerUI allows consumers of microservices to

33
00:02:21.442 --> 00:02:27.000
actually test out the microservices. It's a very useful tool.

