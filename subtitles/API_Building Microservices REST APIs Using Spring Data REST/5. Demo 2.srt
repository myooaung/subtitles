1
00:00:02,122 --> 00:00:03,860
So let's see this in action.

2
00:00:03,860 --> 00:00:04,729
In our demo,

3
00:00:04,729 --> 00:00:10,376
we will add a new overriding controller for the ApplicationCatalog microservice,

4
00:00:10,376 --> 00:00:13,734
and that will call the UserManagement service to get

5
00:00:13,734 --> 00:00:16,951
additional details about a person.

6
00:00:16,951 --> 00:00:24,050
I've added a new overriding controller called ApplicationCatalogController.

7
00:00:24,050 --> 00:00:27,939
So let's look at the code for this.

8
00:00:27,939 --> 00:00:31,408
Notice we have a method called getApplications,

9
00:00:31,408 --> 00:00:37,344
we are using the applicationRepository to find all of the applications,

10
00:00:37,344 --> 00:00:42,560
and then for each application, we are calling the getPersonInfo method.

11
00:00:42,560 --> 00:00:44,840
So let's look at that,

12
00:00:44,840 --> 00:00:50,117
and here the getPersonInfo method is calling our UserManagement

13
00:00:50,117 --> 00:00:53,926
service to get additional details about the person.

14
00:00:53,926 --> 00:00:58,792
Here on line 65 I have the URL hardcoded just for testing purposes.

15
00:00:58,792 --> 00:01:03,712
In a real production application you would not want to hardcode the URL,

16
00:01:03,712 --> 00:01:06,602
but notice here it's calling the userManagementService,

17
00:01:06,602 --> 00:01:13,682
and on line 70 and 71, it's pulling out the name and the role,

18
00:01:13,682 --> 00:01:19,896
and it's assigning that on the application on line 72 and 73.

19
00:01:19,896 --> 00:01:24,732
So let's go back up, and then on line 44,

20
00:01:24,732 --> 00:01:31,809
and 45, and 47, we are actually returning that updated list of applications.

21
00:01:31,809 --> 00:01:35,663
Now I do want to show you my application class,

22
00:01:35,663 --> 00:01:39,158
notice I've added on lines 22 and 25,

23
00:01:39,158 --> 00:01:43,064
I've added two transient fields to the application

24
00:01:43,064 --> 00:01:45,212
representing the owner name and the role.

25
00:01:45,212 --> 00:01:47,138
Now these aren't persisted to the database,

26
00:01:47,138 --> 00:01:50,837
they are queried in real time using the UserManagementService.

27
00:01:50,837 --> 00:01:55,482
So let's go back to our application controller.

28
00:01:55,482 --> 00:02:00,120
Now all requests going to applications will hit this controller,

29
00:02:00,120 --> 00:02:01,880
returning the altered data.

30
00:02:01,880 --> 00:02:04,960
Now before we see this in action,

31
00:02:04,960 --> 00:02:09,452
there is another method that I've added to this custom controller that

32
00:02:09,452 --> 00:02:12,928
returns a single application; we will talk about this in the next module

33
00:02:12,928 --> 00:02:15,180
when we look at unit and integration testing,

34
00:02:15,180 --> 00:02:18,051
but I just wanted to point it out now.

35
00:02:18,051 --> 00:02:19,797
So here on line 52,

36
00:02:19,797 --> 00:02:23,272
it's a custom method to return one specific application

37
00:02:23,272 --> 00:02:26,300
based on the ID that's passed in,

38
00:02:26,300 --> 00:02:29,913
and so there again it's going to call the getPersonInfo

39
00:02:29,913 --> 00:02:32,275
adding the owner name and owner role.

40
00:02:32,275 --> 00:02:34,571
So now let's see this in action.

41
00:02:34,571 --> 00:02:38,193
We have to make sure that our ApplicationCatalog microservice is running.

42
00:02:38,193 --> 00:02:43,580
We also have to make sure that our UserManagementService is running,

43
00:02:43,580 --> 00:02:49,654
so let's click on that, and click run, and let's let the two of these come up.

44
00:02:49,654 --> 00:02:54,050
So, UserManagement has started and ApplicationCatalog has started,

45
00:02:54,050 --> 00:02:55,452
let's go to Postman.

46
00:02:55,452 --> 00:03:00,236
Now what you see here is the old call from our previous demo

47
00:03:00,236 --> 00:03:03,021
to retrieving the list of applications.

48
00:03:03,021 --> 00:03:08,476
I do want to point out here on line seven, notice the ownerId is returned.

49
00:03:08,476 --> 00:03:13,088
We do not see the name, and we do not see the role because that's the old result,

50
00:03:13,088 --> 00:03:18,443
so now we've updated it to call that custom controller that will

51
00:03:18,443 --> 00:03:21,097
add the additional information about a person.

52
00:03:21,097 --> 00:03:34,000
So let's click send, and now notice in our result we have along with the ownerId, the ownerName and the ownerRole.

