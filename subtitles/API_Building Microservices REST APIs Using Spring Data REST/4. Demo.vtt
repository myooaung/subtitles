WEBVTT
1
00:00:01.540 --> 00:00:05.106
Let's go to IntelliJ and see this in action.

2
00:00:05.106 --> 00:00:07.408
So here we have our test folder.

3
00:00:07.408 --> 00:00:11.778
Now I like to verify that the test folder is actually marked

4
00:00:11.778 --> 00:00:15.259
as a test folder via the project structure.

5
00:00:15.259 --> 00:00:19.954
So let's open the project structure,

6
00:00:19.954 --> 00:00:27.037
and notice here the test folder is marked as a test source folder.

7
00:00:27.037 --> 00:00:30.786
While we are in here, let's check the TicketManagement,

8
00:00:30.786 --> 00:00:36.484
that looks right, and UserManagement, that looks correct as well.

9
00:00:36.484 --> 00:00:37.691
So let's click cancel.

10
00:00:37.691 --> 00:00:42.944
So just check in the folder structure, it looks good,

11
00:00:42.944 --> 00:00:49.226
so let's look at our ApplicationCatalogTest.

12
00:00:49.226 --> 00:00:53.397
So we have the testGetApplication method on line 25,

13
00:00:53.397 --> 00:00:56.647
so let's look at what this code is doing.

14
00:00:56.647 --> 00:00:57.484
The first step,

15
00:00:57.484 --> 00:01:00.946
remember I mentioned to you the first step is to prepare the data,

16
00:01:00.946 --> 00:01:05.578
but there is nothing special for us to do here because our

17
00:01:05.578 --> 00:01:09.449
ApplicationCatalogApplicationLoader will load all of our applications for us.

18
00:01:09.449 --> 00:01:11.950
The next step is to execute.

19
00:01:11.950 --> 00:01:14.368
In order to send the GET request,

20
00:01:14.368 --> 00:01:17.789
we use the getForEntity method of the TestRestTemplate that's

21
00:01:17.789 --> 00:01:22.460
already auto wired in our test class; and notice we are

22
00:01:22.460 --> 00:01:25.131
passing in the application ID of 1.

23
00:01:25.131 --> 00:01:29.898
So we call that, and then on line 33 we are getting the StatusCodeValue.

24
00:01:29.898 --> 00:01:33.742
On line 34 we are getting the application returned.

25
00:01:33.742 --> 00:01:35.333
So now let's do our test.

26
00:01:35.333 --> 00:01:40.171
On line 37 we are making sure that the HttpStatus returned is that of OK.

27
00:01:40.171 --> 00:01:45.111
On line 40, we are making sure that the application is NotNull.

28
00:01:45.111 --> 00:01:50.673
On line 42 we are making sure that the application name matches TrackZilla,

29
00:01:50.673 --> 00:01:56.507
and on line 46, we are making sure that we are receiving an OwnerName,

30
00:01:56.507 --> 00:01:58.826
and the name is Jane Doe.

31
00:01:58.826 --> 00:02:00.110
So let's run our unit test.

32
00:02:00.110 --> 00:02:01.393
Now in order to do that,

33
00:02:01.393 --> 00:02:07.025
we have to make sure the ApplicationCatalog microservice is up and running,

34
00:02:07.025 --> 00:02:08.415
so let's start that.

35
00:02:08.415 --> 00:02:12.731
We also need to make sure the UserManagement service is up and running,

36
00:02:12.731 --> 00:02:15.188
so let's go ahead and get that started.

37
00:02:15.188 --> 00:02:18.966
So UserManagement is started successfully and

38
00:02:18.966 --> 00:02:21.484
ApplicationCatalog has started successfully.

39
00:02:21.484 --> 00:02:27.255
So now let's run our test for getting a specific application.

40
00:02:27.255 --> 00:02:30.811
Now we see our test has passed.

41
00:02:30.811 --> 00:02:35.890
So now let's look at the test for the ApplicationRepository.

42
00:02:35.890 --> 00:02:37.233
So in this test,

43
00:02:37.233 --> 00:02:41.873
we actually have three methods we are going to test; creating an application,

44
00:02:41.873 --> 00:02:44.867
we're going to test deleting an application,

45
00:02:44.867 --> 00:02:48.848
and we're going to test updating an application.

46
00:02:48.848 --> 00:02:53.949
So on line 28 we are creating a new application.

47
00:02:53.949 --> 00:02:59.649
On line 31 we are calling the postForEntity method of REST template,

48
00:02:59.649 --> 00:03:01.911
and we're passing in that application.

49
00:03:01.911 --> 00:03:05.323
On line 34 we are getting the response StatusCode,

50
00:03:05.323 --> 00:03:10.212
and on line 35 we are getting the resulting application; and notice,

51
00:03:10.212 --> 00:03:16.007
on line 38 we are making sure the response status is created,

52
00:03:16.007 --> 00:03:19.172
and that the resultApplication is NotNull.

53
00:03:19.172 --> 00:03:26.144
So let's run that test, and so that test passed.

54
00:03:26.144 --> 00:03:30.883
So now, let's look at updating an application.

55
00:03:30.883 --> 00:03:36.820
So here again, we have on line 61 our testUpdateApplication test.

56
00:03:36.820 --> 00:03:41.543
On line 64 we are creating an application object with an ID

57
00:03:41.543 --> 00:03:45.077
equal to the one that we want to update.

58
00:03:45.077 --> 00:03:48.217
We are creating a requestEntity on line 66.

59
00:03:48.217 --> 00:03:54.754
On line 69, notice we are calling the exchange method of the REST template,

60
00:03:54.754 --> 00:04:03.578
which will use the HTTP PUT verb.

61
00:04:03.578 --> 00:04:07.295
On line 72 we are getting the StatusCode.

62
00:04:07.295 --> 00:04:10.927
On line 73 we are getting the resulting application.

63
00:04:10.927 --> 00:04:16.169
On line 76 we are testing to ensure the HttpStatus is OK,

64
00:04:16.169 --> 00:04:20.818
and on line 79 we are verifying that the application name

65
00:04:20.818 --> 00:04:23.322
was updated to New TrackZilla Name.

66
00:04:23.322 --> 00:04:27.692
So let's run this.

67
00:04:27.692 --> 00:04:32.062
Our test case passed.

68
00:04:32.062 --> 00:04:36.572
Now lastly, let's look at deleting.

69
00:04:36.572 --> 00:04:41.668
So here, we are creating the responseEntity,

70
00:04:41.668 --> 00:04:48.556
and again we are using the exchange method of the REST template,

71
00:04:48.556 --> 00:04:51.983
invoking the DELETE verb, and in this case,

72
00:04:51.983 --> 00:04:55.657
on line 54 we are getting the response StatusCode,

73
00:04:55.657 --> 00:05:01.737
and on line 57 we are making sure that HttpStatus is NO_CONTENT,

74
00:05:01.737 --> 00:05:14.000
indicating that the application was deleted. So let's run this test, and our test case passed.

