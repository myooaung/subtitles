1
00:00:00,625 --> 00:00:02,457
So let's jump right into the demo.

2
00:00:02,457 --> 00:00:02,718
First,

3
00:00:02,718 --> 00:00:07,180
I will show you how I created modules to represent the

4
00:00:07,180 --> 00:00:09,493
ApplicationCatalog and UserManagement microservices.

5
00:00:09,493 --> 00:00:14,393
I will show you how to edit the run configuration for each microservice.

6
00:00:14,393 --> 00:00:16,908
Then we will configure H2, and lastly,

7
00:00:16,908 --> 00:00:21,127
we will test our new microservices from Postman.

8
00:00:21,127 --> 00:00:25,450
Because we need to start adding additional microservices,

9
00:00:25,450 --> 00:00:28,897
I've reorganized the IntelliJ project a bit.

10
00:00:28,897 --> 00:00:34,995
I've separated each microservice into its own separate IntelliJ module.

11
00:00:34,995 --> 00:00:39,590
We have the ApplicationCatalog module, the TicketManagement module,

12
00:00:39,590 --> 00:00:40,930
and the UserManagement module.

13
00:00:40,930 --> 00:00:45,440
So let's look at these modules in the project structure dialog.

14
00:00:45,440 --> 00:00:47,269
So for example,

15
00:00:47,269 --> 00:00:52,124
let's look at our ApplicationCatalog microservice; notice all

16
00:00:52,124 --> 00:00:56,350
of the dependencies on the dependency tab.

17
00:00:56,350 --> 00:00:59,375
If there's an additional dependency that you need to add,

18
00:00:59,375 --> 00:01:03,368
simply click the plus sign here and add your dependency.

19
00:01:03,368 --> 00:01:03,848
Notice,

20
00:01:03,848 --> 00:01:07,689
I've added the three microservices into one parent

21
00:01:07,689 --> 00:01:09,994
module called REST microservices,

22
00:01:09,994 --> 00:01:14,860
this is just to better organize the microservices.

23
00:01:14,860 --> 00:01:18,614
And then let's close this, let's do cancel,

24
00:01:18,614 --> 00:01:22,744
and then just notice for the ApplicationCatalog module,

25
00:01:22,744 --> 00:01:29,466
I've changed the name of the main application class from

26
00:01:29,466 --> 00:01:31,808
BugTrackerApplication to ApplicationCatalogApplication,

27
00:01:31,808 --> 00:01:39,100
and so I did that for each module, it just helps keep track of things.

28
00:01:39,100 --> 00:01:41,030
Notice for the TicketManagement module,

29
00:01:41,030 --> 00:01:45,744
I renamed the main class to TicketManagementApplication,

30
00:01:45,744 --> 00:01:50,628
so there again it just helps me keep track of the different modules.

31
00:01:50,628 --> 00:01:55,229
I did not want the main class for all of my microservices to have the same name.

32
00:01:55,229 --> 00:01:59,648
So what I did next, I created run configurations for each module.

33
00:01:59,648 --> 00:02:02,599
So let's take a look at one of them.

34
00:02:02,599 --> 00:02:04,623
So here for the ApplicationCatalogApplication,

35
00:02:04,623 --> 00:02:09,939
this is the run configuration, it's pretty straightforward,

36
00:02:09,939 --> 00:02:13,349
notice I'm using the ApplicationCatalog module,

37
00:02:13,349 --> 00:02:14,325
Java 9.

38
00:02:14,325 --> 00:02:14,813
0.

39
00:02:14,813 --> 00:02:21,683
What I do want to point out here is notice I've changed the server port,

40
00:02:21,683 --> 00:02:25,907
and so this is important because I want all three of my

41
00:02:25,907 --> 00:02:28,725
microservices to be able to run at the same time,

42
00:02:28,725 --> 00:02:32,127
and so now I have each of them running on a different port.

43
00:02:32,127 --> 00:02:38,061
So for the ApplicationCatalog microservice, it's set to run on port 8081.

44
00:02:38,061 --> 00:02:39,692
Let's look at UserManagement.

45
00:02:39,692 --> 00:02:43,818
Notice for UserManagement, I have the port set at 8082,

46
00:02:43,818 --> 00:02:48,696
and for TicketManagement I did not pass in a value so it's

47
00:02:48,696 --> 00:02:51,754
going to run on the default port of 8080.

48
00:02:51,754 --> 00:02:56,336
So let's close this, and let's run our microservices.

49
00:02:56,336 --> 00:03:07,415
So first let's run ApplicationCatalog, let's run UserManagement,

50
00:03:07,415 --> 00:03:09,190
and let's run TicketManagement.

51
00:03:09,190 --> 00:03:14,376
So notice if you look down here in the bottom pane,

52
00:03:14,376 --> 00:03:18,737
we have three different windows that represent each

53
00:03:18,737 --> 00:03:22,156
microservice; so ApplicationCatalog has started,

54
00:03:22,156 --> 00:03:26,301
UserManagement has started, and TicketManagement has started,

55
00:03:26,301 --> 00:03:30,114
and I do want to point out, under ApplicationCatalog,

56
00:03:30,114 --> 00:03:32,232
I did make another change.

57
00:03:32,232 --> 00:03:34,118
Under the resources,

58
00:03:34,118 --> 00:03:40,580
I removed the custom database URL for the H2 in-memory database,

59
00:03:40,580 --> 00:03:45,140
I removed what was there before and I'm just taking the default,

60
00:03:45,140 --> 00:03:47,948
and I will show you a demo of that.

61
00:03:47,948 --> 00:03:51,317
So we have our three microservices up and running,

62
00:03:51,317 --> 00:03:54,273
so let's look at them in Postman.

63
00:03:54,273 --> 00:04:00,632
Remember our UserManagement service is running on port 8082, so let's test that.

64
00:04:00,632 --> 00:04:07,414
Let's click send, and so this just returns a list of people.

65
00:04:07,414 --> 00:04:14,966
Now notice our ApplicationCatalog microservice is set to run on port 8081,

66
00:04:14,966 --> 00:04:20,796
so let's click run, and here it just returns a list of applications,

67
00:04:20,796 --> 00:04:22,964
and remember our TicketManagement service,

68
00:04:22,964 --> 00:04:27,513
it's the one we've been using this entire time,

69
00:04:27,513 --> 00:04:30,261
it's set to run on port 8080.

70
00:04:30,261 --> 00:04:31,832
So let's click send,

71
00:04:31,832 --> 00:04:36,298
and there we have three microservices running at the same time.

72
00:04:36,298 --> 00:04:36,732
Now,

73
00:04:36,732 --> 00:04:42,818
I do want to point out that the connection URL for the H2 in-memory

74
00:04:42,818 --> 00:04:48,042
database for each microservice is now the default connection URL and

75
00:04:48,042 --> 00:04:51,649
the port for application and UserManagement,

76
00:04:51,649 --> 00:04:52,851
they've changed.

77
00:04:52,851 --> 00:04:54,064
So let's look at that.

78
00:04:54,064 --> 00:04:55,519
Let's bring up the web browser.

79
00:04:55,519 --> 00:04:59,935
So here this is the connection URL for the

80
00:04:59,935 --> 00:05:03,462
TicketManagement service because it's port 8080,

81
00:05:03,462 --> 00:05:09,349
and notice the default JDBC URL, and let's click connect,

82
00:05:09,349 --> 00:05:12,969
and notice we have our ticket table.

83
00:05:12,969 --> 00:05:15,992
Let's see what's in our ticket table,

84
00:05:15,992 --> 00:05:19,447
and now let's look at our application table.

85
00:05:19,447 --> 00:05:24,727
Now remember that's set to run on port 8081,

86
00:05:24,727 --> 00:05:30,752
so let's bring that up, and again, using the default JDBC URL,

87
00:05:30,752 --> 00:05:35,235
let's click connect, and now we have our application table,

88
00:05:35,235 --> 00:05:39,217
and lastly, let's look at our UserManagement service,

89
00:05:39,217 --> 00:05:45,380
that's the one that we have running on port 8082.

90
00:05:45,380 --> 00:05:48,361
So let's look at that.

91
00:05:48,361 --> 00:05:53,888
Again, the JDBC URL, click connect, we have our person table,

92
00:05:53,888 --> 00:05:55,837
and there you have it.

93
00:05:55,837 --> 00:05:58,638
To recap what we saw in the demo,

94
00:05:58,638 --> 00:06:01,591
we created new modules to represent each microservice,

95
00:06:01,591 --> 00:06:06,180
we added each module to a parent for the entire group,

96
00:06:06,180 --> 00:06:09,472
we set up each microservice to run on a different

97
00:06:09,472 --> 00:06:13,822
port so they can all run at once, and lastly,

98
00:06:13,822 --> 00:06:17,184
H2 now uses the default database URL.

99
00:06:17,184 --> 00:06:23,987
The ApplicationCatalog microservice runs on port 8081, and this is the URL.

100
00:06:23,987 --> 00:06:36,000
The TicketManagement service runs on port 8080, and this is the URL. The UserManagement microservice runs on port 8082, and this is the URL.

