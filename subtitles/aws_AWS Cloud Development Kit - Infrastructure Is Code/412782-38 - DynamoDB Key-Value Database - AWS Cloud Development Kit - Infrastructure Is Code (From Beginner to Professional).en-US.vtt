WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:00.220
Hello,

00:00:00.220 --> 00:00:00.910
folks.

00:00:00.910 --> 00:00:02.760
Welcome to another lecture on City A.

00:00:02.760 --> 00:00:09.240
Now we're going to talk about creating fully managed no sequel databases in the cloud on

00:00:09.240 --> 00:00:11.200
then would be perfectly status license,

00:00:11.200 --> 00:00:15.680
requirement of being and fully managed multi master key Value store as well as a document

00:00:15.680 --> 00:00:16.870
store in the cloud.

00:00:16.870 --> 00:00:21.230
So if you have any use cases with low latency on global scale,

00:00:21.230 --> 00:00:25.350
then dynamodb is the database that you should be looking for your applications.

00:00:25.350 --> 00:00:28.570
So let's go ahead and see how we can put this into our city.

00:00:28.570 --> 00:00:29.250
Haystack,

00:00:29.250 --> 00:00:35.040
This is the stack that we're going to use that I'm named it as a custom denim OTP stack on

00:00:35.040 --> 00:00:35.430
Daz off.

00:00:35.430 --> 00:00:35.580
No,

00:00:35.580 --> 00:00:37.290
there are no associates that is built in.

00:00:37.290 --> 00:00:38.360
So first of all,

00:00:38.360 --> 00:00:39.270
we need to go ahead.

00:00:39.270 --> 00:00:43.650
And I had our construct into a requirements while and then we can go ahead and install them

00:00:43.650 --> 00:00:43.650
.

00:00:43.650 --> 00:00:46.050
So just follows the similar syntax.

00:00:46.050 --> 00:00:49.350
Save this and then let us go ahead and install it.

00:00:49.350 --> 00:00:53.040
So we have been started.

00:00:53.040 --> 00:00:54.350
It may finish this one.

00:00:54.350 --> 00:00:55.830
So this girl,

00:00:55.830 --> 00:00:57.450
where on import it?

00:00:57.450 --> 00:01:03.050
So we have important on.

00:01:03.050 --> 00:01:05.000
We're going to create our first table now,

00:01:05.000 --> 00:01:10.940
and I'm going to call my table as constant A set stable on me with yours.

00:01:10.940 --> 00:01:18.200
The dynamodb concept here on under that we have a method called table on Me Last always

00:01:18.200 --> 00:01:21.340
we'll go scope it to sell that it's with the same stack.

00:01:21.340 --> 00:01:26.630
Just say this is a DDB table that is dynamodb table.

00:01:26.630 --> 00:01:28.320
When you're creating an animal Devi,

00:01:28.320 --> 00:01:33.840
you need todo and partition key And the sortie on the sake can be an optional value.

00:01:33.840 --> 00:01:39.940
But partition key ihsaa required value on your partisan T can be a string or numb or any of

00:01:39.940 --> 00:01:43.670
the other attributes types that you're Then it would be support.

00:01:43.670 --> 00:01:51.880
So let us go head on and create or partition key here under this Me how something called us

00:01:51.880 --> 00:01:51.880
.

00:01:51.880 --> 00:01:53.560
Attribute Onda.

00:01:53.560 --> 00:01:58.250
We let us go ahead and add our attributes on I'm going to name my attributes as I d.

00:01:58.250 --> 00:02:03.590
You can go ahead and define or whatever name attribute you want for the partition key on

00:02:03.590 --> 00:02:05.150
this type is going to be string.

00:02:05.150 --> 00:02:09.930
Go ahead and say this is going to be string here.

00:02:09.930 --> 00:02:13.720
You consider it supports binary numerous on the string values.

00:02:13.720 --> 00:02:15.520
So I'm just going toe at it.

00:02:15.520 --> 00:02:17.180
Has string Andi,

00:02:17.180 --> 00:02:18.650
Since this is going to be a demo,

00:02:18.650 --> 00:02:21.460
I don't want my database to be there when the stock is deleted.

00:02:21.460 --> 00:02:23.570
So I'm going to add the moral for the sequel.

00:02:23.570 --> 00:02:30.390
So So let's go ahead and say the struck on Since this is going to hold my assets,

00:02:30.390 --> 00:02:31.380
the data,

00:02:31.380 --> 00:02:33.940
I'm going to add an encryption field also.

00:02:33.940 --> 00:02:37.890
So here you have something called US s oversight into oppression on I'm going to set this

00:02:37.890 --> 00:02:39.900
value as true on remembered animal,

00:02:39.900 --> 00:02:41.510
we support different types of encryption.

00:02:41.510 --> 00:02:44.280
But you can have your own keys or the Native Keys are.

00:02:44.280 --> 00:02:46.540
You can bring your custom keys on,

00:02:46.540 --> 00:02:47.360
then add them on.

00:02:47.360 --> 00:02:48.540
So so in this case,

00:02:48.540 --> 00:02:51.990
I'm going to use the AWS managed keys for encryption.

00:02:51.990 --> 00:02:53.730
Let's go ahead and sit to say so.

00:02:53.730 --> 00:02:54.350
Stack.

00:02:54.350 --> 00:02:56.940
No,

00:02:56.940 --> 00:02:57.880
my stack is completed.

00:02:57.880 --> 00:02:59.620
Letters go to her concert and ticket out.

00:02:59.620 --> 00:03:05.650
So we are in that animal DVDs board for Virginia region that could go to tables on the

00:03:05.650 --> 00:03:06.780
refresh my screen here.

00:03:06.780 --> 00:03:10.710
We should have a custom key value store that we just know created on.

00:03:10.710 --> 00:03:11.120
Of course,

00:03:11.120 --> 00:03:13.020
you can go ahead and set up your table name.

00:03:13.020 --> 00:03:17.520
Also that it also possible so that you have a custom table name there and they just go here

00:03:17.520 --> 00:03:17.720
on.

00:03:17.720 --> 00:03:20.020
The first thing that I want to show here is by default.

00:03:20.020 --> 00:03:23.180
It sets me up a provisioning capacity or for five.

00:03:23.180 --> 00:03:24.560
I see you send five W.

00:03:24.560 --> 00:03:24.860
C.

00:03:24.860 --> 00:03:28.920
That means that you don't have to want to get a lot of things that are defaulting Nature

00:03:28.920 --> 00:03:29.200
City.

00:03:29.200 --> 00:03:32.900
They automatically fills in those values for you on if your room where we set up the

00:03:32.900 --> 00:03:37.330
encryption for D Fort AWS encryption on you can see it just picked up my keys.

00:03:37.330 --> 00:03:41.080
And if I click on manage description about a particular Alexis value on the Keys,

00:03:41.080 --> 00:03:43.780
were coming from a review slash dynamodb keys.

00:03:43.780 --> 00:03:45.570
So that's the first thing,

00:03:45.570 --> 00:03:47.400
then I'm just one point with you to show,

00:03:47.400 --> 00:03:49.040
and now it isn't often item.

00:03:49.040 --> 00:03:49.870
It is not necessary.

00:03:49.870 --> 00:03:53.290
But if you're interested on seeing how Kiva lift or operates,

00:03:53.290 --> 00:03:55.600
you can just go ahead and your step makes it very,

00:03:55.600 --> 00:03:56.210
very easy.

00:03:56.210 --> 00:03:57.650
So I'm just going to say it.

00:03:57.650 --> 00:04:01.090
My first I'll be here.

00:04:01.090 --> 00:04:02.950
That's all I need to write in here.

00:04:02.950 --> 00:04:04.160
Just click on Save On.

00:04:04.160 --> 00:04:08.900
We will have our first item you can go ahead and keep on adding any number of items,

00:04:08.900 --> 00:04:13.020
so that is how simple it is to create on a fully managed,

00:04:13.020 --> 00:04:15.600
multi master key value store in the cloud.

00:04:15.600 --> 00:04:16.700
Go ahead and try it.

00:04:16.700 --> 00:04:17.500
If you have problems,

00:04:17.500 --> 00:04:18.420
put them in the comments.

