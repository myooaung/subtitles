WEBVTT

00:00.270 --> 00:01.310
All right here we go.

00:01.350 --> 00:06.630
I'm super pumped to start building this brain and I'm really happy to show you this tool this amazing

00:06.630 --> 00:13.020
Karin's tool which you will see will fully understand how to create any brain any fully connected neural

00:13.020 --> 00:18.390
network you'd like for your business problem or any other kind of application that you would like to

00:18.390 --> 00:18.880
do.

00:19.200 --> 00:20.250
So let's do this.

00:20.250 --> 00:24.720
We already import the libraries and now we are ready to build this brain.

00:24.780 --> 00:28.930
And so as I said in the previous tutorial we'll build this brain.

00:28.940 --> 00:33.490
We're going to build a class so that we can create as many brenne objects as we want.

00:33.630 --> 00:39.450
And that's why right now we have to start with class because indeed that's the way you introduce a new

00:39.450 --> 00:40.990
class in Python.

00:41.090 --> 00:45.030
And remember you have to give the name of the class which we call brain.

00:45.180 --> 00:51.750
And then the input will just enter object because indeed we're going to build our brain objects from

00:51.750 --> 00:57.840
scratch without the use of any inheritance because for example in this Burundi's is here you can input

00:57.840 --> 01:01.330
some other classes you know from which you want to use their tools.

01:01.440 --> 01:03.400
And doing this is called inheritance.

01:03.480 --> 01:06.270
But here we are directly in putting the object.

01:06.270 --> 01:09.440
We are going to build so that no inheritance is used.

01:09.570 --> 01:12.670
OK then CULLEN And here we go.

01:12.780 --> 01:16.540
Let's start with the first and only step.

01:16.560 --> 01:20.280
Yes this will be the only step of this brain class.

01:20.370 --> 01:23.590
We only have to make the init method.

01:23.610 --> 01:24.410
Why is that.

01:24.570 --> 01:31.680
Well think about it you know in the environment implementation we realize that we indeed introduced

01:31.710 --> 01:33.640
and initialized all the variables.

01:33.780 --> 01:41.400
And for some of them we initialized them by using some other object variables you know we introduced

01:41.400 --> 01:47.010
an initialized intrinsic temperature here as a function of the atmospheric temperature which is another

01:47.010 --> 01:53.160
self object very well and the current number of users and the rate of data which are some other object

01:53.160 --> 01:54.060
variables.

01:54.090 --> 01:59.870
So that means that only with this init method we can build something by playing with the object variables.

01:59.940 --> 02:05.790
And so since as I told you in the previous tutorial we were going to create some objects of these classes

02:05.970 --> 02:12.020
such as the hidden layers with the dance class or the fully assembled model with the model class.

02:12.210 --> 02:19.050
Well that means that in this method will actually be able to build the full architecture of our neural

02:19.050 --> 02:25.770
network by simply creating some variables as some objects of these classes.

02:25.770 --> 02:30.510
All right you're going to see it's going to become super clear once we start using them.

02:30.540 --> 02:36.630
So let's do this you understood we only have here to build it method and therefore this implementation

02:36.720 --> 02:40.310
as I told you will be done in only a few lines of code.

02:40.500 --> 02:45.390
Actually in total less than 20 lines of code compared to what we build before.

02:45.390 --> 02:46.660
This feels pretty good.

02:46.830 --> 02:47.560
OK.

02:47.800 --> 02:48.110
OK.

02:48.120 --> 02:57.460
So here we go with that in it method which will take as input three arguments the first one it must

02:57.460 --> 03:03.130
be a reflex hear itself of course which will refer to all the object variables which will create here

03:03.190 --> 03:07.670
but which will build the neural networks all by themselves.

03:08.140 --> 03:14.110
And then the second argument which is inevitable you know you will always use this argument especially

03:14.110 --> 03:17.360
if you want to do some tuning is the learning rate.

03:17.380 --> 03:22.110
There is always a learning rate when building a neural network.

03:22.300 --> 03:30.670
And usually the values are either 0.01 or 0.01 and we are going to point 0 0 1.

03:30.670 --> 03:32.890
And so the learning rate for those of you who don't know.

03:32.950 --> 03:38.500
Well basically it's like the speed at which a neural network will learn how to perform better and better

03:38.500 --> 03:39.100
actions.

03:39.190 --> 03:39.700
OK.

03:39.820 --> 03:45.790
So the lower is the learning rate the smaller will be the dates of the weight during the back propagation

03:45.790 --> 03:50.740
through great in the sense you know with the optimizer and the higher learning rate the higher will

03:50.740 --> 03:54.350
be the update of the weight and therefore the faster your neural network will learn.

03:54.400 --> 03:59.500
But if their learning rates too high the neural network might not learn very well.

03:59.650 --> 04:02.080
OK so this is a good value.

04:02.080 --> 04:08.230
And by the way this is a default value that I enter here is a parameter but will have to enter it again.

04:08.230 --> 04:12.850
Once we create our brain objects in both the training and the testing.

04:13.030 --> 04:13.620
OK.

04:13.780 --> 04:19.620
And then final argument which will be the number of actions.

04:19.870 --> 04:26.110
And of course this is going to be the number of actions that the AI can perform.

04:26.110 --> 04:32.350
You know to regulate the surface temperature and remember that our AI can return five possible actions

04:32.770 --> 04:34.070
which are these ones here.

04:34.210 --> 04:38.120
And therefore number of actions here will be entered as five.

04:38.150 --> 04:43.780
And again we can specify a default value and well let's put 5 but we'll have to enter it again.

04:44.180 --> 04:45.940
OK so perfect.

04:45.940 --> 04:46.700
Here we go.

04:46.720 --> 04:50.700
We are ready to define all the object variables.

04:50.800 --> 04:52.870
So let's do that in the next tutorial.

04:52.890 --> 04:54.550
And until then enjoy AI.
