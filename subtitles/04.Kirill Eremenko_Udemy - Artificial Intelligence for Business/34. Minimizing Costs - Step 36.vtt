WEBVTT

00:00.420 --> 00:04.440
All right let's get that final result of the simulation.

00:04.560 --> 00:11.040
Basically everything is ready but we would just like of course to print that final outcome which is

00:11.040 --> 00:11.840
the energy saved.

00:11.850 --> 00:16.890
And I'm going to put it in capital letters because this is what we're all waiting for.

00:17.100 --> 00:18.530
So in that fine print.

00:18.540 --> 00:21.500
Well you know let's again do it efficiently.

00:21.500 --> 00:27.660
I'm going to copy this line and paste it here because basically I'm going to use the same format trick

00:27.990 --> 00:31.130
which basically makes the whole thing have the same structure.

00:31.410 --> 00:34.530
All right so first of all what are we going to print.

00:34.580 --> 00:38.070
Not total energy spent with an eye but.

00:38.320 --> 00:40.460
And I'm going to write them capital letters.

00:40.620 --> 00:43.870
The energy saved.

00:43.980 --> 00:44.900
Very simply.

00:44.920 --> 00:46.260
All right the energy saved.

00:46.290 --> 00:51.590
The final outcome which we would like to get over 50 percent.

00:51.720 --> 00:54.270
Then what about inside these brackets here.

00:54.270 --> 00:57.790
Remember that's the format of the value you want to print.

00:58.110 --> 01:01.610
And you know the energy saved is going to be a percentage.

01:01.650 --> 01:06.720
So it's going to be for example that say hopefully 51 percent and therefore you know we don't want any

01:06.720 --> 01:11.170
decimals for percentage so we're going to keep that exact same format.

01:11.310 --> 01:12.100
That is a float.

01:12.120 --> 01:13.560
You know it will still be a float.

01:13.560 --> 01:18.890
It will be a result of a float condition of course but with zero decimal.

01:19.170 --> 01:19.530
OK.

01:19.550 --> 01:20.990
So perfect for the format.

01:21.180 --> 01:28.050
And then inside this format function well of course it is not going to be the all energy spent by the

01:28.050 --> 01:36.510
A.I. onto the server but it is going to be the energy saved by the AI with respect to the service alternative

01:36.570 --> 01:44.280
cooling system and the way to get it is to compute a relative difference between the two energy spent.

01:44.280 --> 01:50.700
The first one by the way and the second one by the surveyors alternative system and well we already

01:50.700 --> 01:52.320
have these two energies.

01:52.320 --> 01:54.120
This is energy spent by the AI.

01:54.120 --> 02:02.040
The total energy spent over the full year of simulation and this is it all energy spent by the service

02:02.100 --> 02:09.090
alternative cooling system that is the total energy spent when we have no AI still over that same one

02:09.090 --> 02:15.570
year of simulation and mostly over the same simulation with the same fluctuations of the core temperature

02:15.570 --> 02:21.780
of the server evolving along the same fluctuations of the number of users in the server and the rate

02:21.780 --> 02:23.070
of data transmission.

02:23.070 --> 02:24.650
So it's very important to remind that.

02:24.690 --> 02:28.290
So that what we're about to compute makes total sense.

02:28.540 --> 02:28.940
Okay.

02:28.950 --> 02:31.380
So therefore what is going to be the formula.

02:31.380 --> 02:32.840
Well that's very simple.

02:32.880 --> 02:40.210
You know the relative difference is just the total energy spent when we have no AI minus.

02:40.290 --> 02:47.060
It's all energy spent when we have the AI and all these divided of course by the total energy spent

02:47.070 --> 02:54.780
when we have no AI and therefore here I'm going to add some new parenthesis right here because I'm going

02:54.780 --> 03:01.390
to divide the difference by the baseline which is the total energy spent when we have no AI.

03:01.530 --> 03:03.490
Therefore I'm going to face that.

03:03.600 --> 03:05.690
Yes that's the one that's the last one I copied.

03:05.850 --> 03:07.040
This is the baseline.

03:07.110 --> 03:15.030
So see the formula the energy saved by the AI with respect to the base line which is our service alternative

03:15.030 --> 03:22.050
cooling system is the difference between the energy spent by that alternative cooling system minus the

03:22.050 --> 03:26.820
energy spent by the AI divided by it's all energy spent.

03:26.840 --> 03:29.060
My sisters are of cooling system.

03:29.280 --> 03:29.820
Right.

03:29.820 --> 03:34.760
Classic formula of a relative difference and now Leslie since you want a percentage.

03:34.830 --> 03:39.370
Well we have to multiply the whole thing by 100.

03:39.510 --> 03:44.910
So that indeed we can get a percentage instead of zero point something you know if the final result

03:44.910 --> 03:46.510
is 51 percent.

03:46.680 --> 03:53.230
Well we have to multiply this by 100 to get indeed 51 percent and that 0.50 1.

03:53.400 --> 04:00.480
And speaking about percentage what we can actually do you know after the print of the final result which

04:00.480 --> 04:01.680
will happen here.

04:01.860 --> 04:09.480
Well we can add in the percentage specified that it's the relative energy saved and percentage again

04:09.500 --> 04:16.380
now while everything is done congratulations you are at the end of this huge tunnel.

04:16.440 --> 04:21.770
We've all been together you know this was a huge implementation in five bytes and fous.

04:21.870 --> 04:22.850
And you did it.

04:22.950 --> 04:25.690
You are at the very end about to see the light.

04:25.770 --> 04:31.050
Well let's hope we're going to see the light because indeed we're hoping to get more than 50 percent

04:31.330 --> 04:32.520
in energy savings.

04:32.520 --> 04:33.590
That's our goal.

04:33.690 --> 04:37.350
And so without waiting we're going to execute the whole thing.

04:37.350 --> 04:40.940
I'm going to say first and now here we go.

04:40.980 --> 04:42.700
I just selected everything.

04:42.870 --> 04:50.600
And the final result is well we're going to have to deal with some more suspense because indeed we're

04:50.610 --> 04:53.050
running the simulation over one full year.

04:53.160 --> 05:00.000
Therefore there is going to be 12 times 30 times 24 times 60 times that's because that's the number

05:00.000 --> 05:01.590
of minutes in one year.

05:01.710 --> 05:08.430
So it's totally normal that it's taking a little bit of time but we should see the result in any second

05:08.430 --> 05:08.970
now.

05:09.180 --> 05:58.140
And if you want I'm going to put some music until we get the results.

05:58.460 --> 06:00.130
And we did it.

06:00.230 --> 06:06.510
We obtained the total energy saved by the AI is 54 percent.

06:06.530 --> 06:08.150
Mission accomplished.

06:08.150 --> 06:09.400
So congratulations.

06:09.410 --> 06:10.340
That's amazing.

06:10.370 --> 06:16.490
Not only you completed a huge implementation but also you managed to reduce significantly the cost in

06:16.490 --> 06:19.180
that server and therefore the whole data center.

06:19.280 --> 06:25.110
Because thanks to our object oriented implementation Well we can repeat that very easily for all the

06:25.110 --> 06:27.240
other servers of the data center.

06:27.290 --> 06:33.820
Therefore reducing and minimizing the total costs in energy consumption of the whole data center.

06:33.850 --> 06:39.140
So that's a great accomplishment and I hope you enjoyed not only the result but everything we've done.

06:39.350 --> 06:46.430
So now we're going to move on to the homework which will consist of reducing even more costs and energy

06:46.430 --> 06:53.060
consumption because this homework will be about implementing what we got early stopping which will allow

06:53.060 --> 06:58.560
you to train your model faster and therefore a lower number of epochs.

06:58.790 --> 07:01.640
And why does that minimize the cost even more.

07:01.790 --> 07:06.590
Well that's because you know artificial intelligence is actually quite costly for companies.

07:06.590 --> 07:12.670
Companies spend a lot of resources including of course a lot of money on the training of their algorithm.

07:12.770 --> 07:20.330
So they need EARLY START BEING to optimize that training time therefore saving up a lot of the resources

07:20.440 --> 07:25.510
including the service they use and the energy consumed during all these trainings.

07:25.700 --> 07:27.570
So that's exactly what we'll do.

07:27.590 --> 07:33.800
But it's final homework and decide you will have the early stopping technique in your toolkit which

07:33.800 --> 07:38.200
is a must have technique that you absolutely need to know about.

07:38.210 --> 07:40.310
So let's tackle this next Statoil.

07:40.310 --> 07:42.860
Congratulations again for the 54 percent.

07:42.980 --> 07:44.750
And until then enjoy AI.
