WEBVTT

00:00.470 --> 00:02.740
All right let's create these objects.

00:02.790 --> 00:05.250
So we're going to start with the environment.

00:05.250 --> 00:10.950
Of course we're going to follow the same order as how we implemented the different files here.

00:10.950 --> 00:17.820
So we started by defining the environment in this whole class here with all the variables the parameters

00:17.910 --> 00:18.780
and the tools.

00:18.900 --> 00:27.270
And so now we are ready to get for real this environment by simply creating an object of this environment

00:27.270 --> 00:28.370
class we built.

00:28.530 --> 00:29.520
So let's do this.

00:29.520 --> 00:31.620
We're going to call our environment.

00:31.650 --> 00:36.740
And so this is a variable in and will be the environment object itself.

00:36.990 --> 00:41.190
And to create it remember we simply need to call the class.

00:41.190 --> 00:47.980
So what I am about right here is just the environment class with the arguments of the init method.

00:48.270 --> 00:54.280
But this environment class we need to take it from the environment file.

00:54.300 --> 00:57.270
This corresponds to environment that way.

00:57.480 --> 01:03.810
So I'm copying this first to get Indeed this file and then run this file.

01:03.810 --> 01:07.690
So here I'm specifying the frame with the dot from this file.

01:07.710 --> 01:11.470
I'm going to get the environment class which has the capital.

01:12.000 --> 01:13.600
And then now to be efficient.

01:13.680 --> 01:19.950
Well what we're going to do you know to input all these parameters here which are the arguments of the

01:20.030 --> 01:20.960
init method.

01:21.150 --> 01:28.300
Well what we're going to do to do that in all efficiency is to copy paste all this.

01:28.500 --> 01:31.710
And we'll just replace the default value.

01:31.890 --> 01:35.240
So let's go back to our training implementation.

01:35.430 --> 01:41.020
Let's base that inside the environment class and now it's just replaced by the right values.

01:41.250 --> 01:48.750
So first we have to put the value for the optimal temperature argument and we specified the right people

01:48.750 --> 01:53.260
value which is going to be the same one as we want to use for our environments.

01:53.260 --> 01:55.080
We don't have to change anything here.

01:55.260 --> 01:59.640
Then the initial month while same good news zero corresponds to January.

01:59.910 --> 02:03.000
And we're going to start training from January.

02:03.000 --> 02:07.920
However for the initial number of users we're not going to start with then we're going to start with

02:08.610 --> 02:15.270
20 users and then for the initial rate of data Well we're not going to start with 60 that was just a

02:15.270 --> 02:16.470
default value.

02:16.470 --> 02:18.930
We're going to start with 30.

02:19.000 --> 02:24.480
Again that's only some values we choose for our environment and it's not that important in terms of

02:24.480 --> 02:25.190
AI.

02:25.430 --> 02:25.880
Okay.

02:25.890 --> 02:30.600
So done we have our environment object perfect.

02:30.690 --> 02:38.400
Now let's build a brain let's build the brain again by simply creating an object of the brain class.

02:38.610 --> 02:45.930
So the brain class would be able to hear and therefore let's again take all the parameters all the arguments

02:45.990 --> 02:50.800
of the init method which are the learning rate and the number of actions.

02:51.170 --> 02:55.330
Then let's go back to our training implementation.

02:55.500 --> 03:00.320
And again let's introduce a new variable which will be our brain object.

03:00.330 --> 03:03.290
So that's why I'm calling the brain this brain object.

03:03.310 --> 03:08.610
We're going to create it by simply calling the brain less and the brain class we import it from the

03:08.610 --> 03:14.330
brain by the NFL brain that we only have to specify brain.

03:14.330 --> 03:21.240
So from the brain file we call the brain class and inside the brain class we base our arguments.

03:21.540 --> 03:23.820
And so now we're going to be learning right.

03:23.820 --> 03:29.540
So I try with several learning rates and we will actually need a pretty small learning rate.

03:29.600 --> 03:36.420
That's with this one I got the best results so instead of taking up on 0 1 we're going to take off point

03:36.720 --> 03:38.360
0 0 0 1.

03:38.370 --> 03:38.850
All right.

03:38.850 --> 03:41.270
Just like that so very small earning rate.

03:41.310 --> 03:45.530
Again feel free to Chuen this moral by choosing some other learning rate.

03:45.540 --> 03:51.990
I'm sure some of you will beat me with some better scores and some better energy even higher energy

03:51.990 --> 03:52.860
savings.

03:52.980 --> 03:56.210
And then for the last argument a number of actions.

03:56.310 --> 03:57.860
Well indeed this is five.

03:57.870 --> 04:02.660
But remember we want to generalize this implementation as much as possible.

04:02.850 --> 04:10.630
And therefore if you want to try with a different number of actions Well you can just specify that variable

04:10.650 --> 04:16.200
here which corresponds to this one here so that if you want to try with a different number of actions

04:16.620 --> 04:20.580
this will be integrated dramatically perfect.

04:20.580 --> 04:22.010
Now we have our brain.

04:22.110 --> 04:31.090
And so lastly we're going to build the Cuban model by again simply creating an object of the class.

04:31.140 --> 04:32.780
So that's exactly the same thing.

04:32.780 --> 04:42.330
We first introduce a dequeue an object which will be created by simply going to dequeue and with capital

04:42.330 --> 04:49.670
dequeue an end class which we import from the U.N. file and file so.

04:49.950 --> 04:57.840
Well I don't really have to copy paste this detune file then indeed we're going to go to the U.N. class

04:57.840 --> 05:06.810
which is this class here and to create an object we simply take the arguments of the method which are

05:07.050 --> 05:12.120
these two arguments the maximum size of the memory and the discount factor.

05:12.120 --> 05:18.870
So I'm going back to my training implementation and inside the parenthesis of the document class I'm

05:18.870 --> 05:21.180
going to paste these two arguments.

05:21.250 --> 05:24.900
And so now the question is what values are we going to implement.

05:24.900 --> 05:27.110
Well you already know the answer.

05:27.210 --> 05:33.750
Indeed when we set the parameters here we already chose a value for the maximum size of the memory which

05:33.750 --> 05:35.370
is 3000.

05:35.400 --> 05:38.030
But we're not going to copy paste 3000.

05:38.110 --> 05:45.180
We're going to copy paste next memory because indeed we want to generalize this once again as much as

05:45.180 --> 05:46.030
possible.

05:46.320 --> 05:47.100
So perfect.

05:47.100 --> 05:53.020
And then for the discount factor Well we can keep that default value that's perfectly fine for Ardit

05:53.060 --> 05:54.080
U.N. model.

05:54.090 --> 05:54.610
All right.

05:54.610 --> 05:55.110
Perfect.

05:55.110 --> 05:59.520
Now one final very quick and easy step to do which is to choose the mode.

05:59.610 --> 06:01.750
And of course you know what to do here.

06:01.800 --> 06:08.520
Right now we want to train our AAA or more precisely train the brain of our AI with all the right you

06:08.520 --> 06:14.670
know weights of the neurons which aim to return the best actions to play in order to regulate the temperature

06:14.670 --> 06:15.750
of the server.

06:15.750 --> 06:20.120
So right now we have to choose the training mode and to do the training mode.

06:20.130 --> 06:26.610
Well remember in our environment file while we have this train object variable.

06:26.640 --> 06:32.970
So at some point in the training we'll said this train environment object variable to true but we're

06:32.970 --> 06:33.970
not going to do that now.

06:33.980 --> 06:40.050
So for what we're going to do is just introduce this new variable train which will be of course initialized

06:40.050 --> 06:47.970
to true and later on we will set this train variable of our environment object to this value of the

06:47.970 --> 06:49.280
variable train here.

06:49.620 --> 06:50.640
All right perfect.

06:50.640 --> 06:57.290
So exciting news we have all our objects and now we are ready to begin the full training.

06:57.300 --> 07:01.670
This is exactly going to be the next code section we're about to implement.

07:01.830 --> 07:08.400
And of course this is going to be a long section so get some good energy inspiration passion everything

07:08.700 --> 07:11.150
and let's mesh this in the next couple of tutorials.

07:11.250 --> 07:12.900
Until then enjoy AI.
