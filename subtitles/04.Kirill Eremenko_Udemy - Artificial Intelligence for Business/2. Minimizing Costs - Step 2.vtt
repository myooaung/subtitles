WEBVTT

00:00.830 --> 00:01.730
All right here we go.

00:01.740 --> 00:04.480
So we start with a simple search.

00:04.650 --> 00:09.090
This is and this a word that will try to minimise its energy consumption.

00:09.120 --> 00:16.160
So first of all I must explain why is there some energy consumption and what is this energy spent for.

00:16.440 --> 00:23.160
Well as you can imagine the server hosts some users and some data so some users log into the server

00:23.340 --> 00:30.510
some data is transmitted into the server and also some of the users log off the server and some data

00:30.600 --> 00:33.250
is transmitted outside the server.

00:33.630 --> 00:40.500
And all these users and data for tuition's have an impact on the surface temperature and therefore there

00:40.500 --> 00:46.790
must be a system that regulates the temperature of the server as the users come and go.

00:46.830 --> 00:56.670
And as the data come and go and let's not forget about any AI if there is no AI the server has an integrated

00:56.670 --> 01:04.080
cooling system that will automatically regulate the service temperature by always bringing every minute

01:04.320 --> 01:09.750
the service temperature into the optimal range of temperatures which you will see will be from 18 degrees

01:09.930 --> 01:12.300
to 24 degrees Celsius.

01:12.600 --> 01:18.810
So for example if a lot of users and a lot of data get into the server while this will increase the

01:18.810 --> 01:25.320
temperature of the server and let's say that the service temperature is increased to 35 degrees Well

01:25.500 --> 01:33.420
this server integrated cooling system will automatically bring down the surface temperature to 24 degrees

01:33.840 --> 01:38.030
and the granularity of our iterations will be every minute.

01:38.070 --> 01:43.210
You'll see we'll work a lot with the current temperature at time t and the next temperature at time

01:43.210 --> 01:44.030
T plus one.

01:44.130 --> 01:51.060
While the unit of time will be the minute and so every minute the server is integrated cooling system

01:51.300 --> 01:56.940
will automatically bring down the surface temperature to the optimal range of temperature from 18 to

01:56.940 --> 01:58.330
24 degrees.

01:58.480 --> 02:02.120
And so that's what happens when there is no AI.

02:02.160 --> 02:07.280
And our goal of course is to build an AI AI that will beat this system.

02:07.290 --> 02:09.810
You know the servers integrated cooling system.

02:10.140 --> 02:11.410
And how will it be that.

02:11.520 --> 02:18.720
Well it has to regulate the temperature of the server so as to spend less energy than this integrated

02:18.720 --> 02:19.460
cooling system.

02:19.470 --> 02:24.020
And we will define afterwards how energy is correlated to the temperature.

02:24.420 --> 02:26.630
All right so now let's move on.

02:27.140 --> 02:27.440
OK.

02:27.450 --> 02:30.490
So we have a huge environment to build.

02:30.690 --> 02:37.590
And when we have a huge environment to build it can be very useful to get a clear list of all the parameters

02:37.920 --> 02:40.110
all the parameters and all the variables.

02:40.290 --> 02:42.770
So let's quickly list what they are.

02:43.050 --> 02:48.480
So first we have the average atmospheric temperature over months and we will get that for each of the

02:48.480 --> 02:53.370
12 months you will see that in our code and we have the optimal range of temperatures of the server

02:53.400 --> 02:58.680
which as we just said is from 18 degrees Celsius to 24 degrees Celsius.

02:58.830 --> 03:03.420
Then we have the minimum temperature of the server below which the server fails to operate which will

03:03.420 --> 03:09.210
be minus 20 degrees the maximum temperature of this or above which it fails to operate which will be

03:09.270 --> 03:11.140
80 degrees Celsius.

03:11.340 --> 03:15.050
And we have the minimum number of users in the server which will be 10.

03:15.060 --> 03:17.960
These are just some values we choose for implementation.

03:17.970 --> 03:22.460
That's how I choose to define the environment just so that we can have a simulation.

03:22.620 --> 03:26.380
Then we have the maximum number of users in the server which will be 100.

03:26.580 --> 03:31.980
The maximum number of users in the server that can go up or down per minute which will be five meaning

03:32.250 --> 03:34.620
that you know when the users come and go.

03:34.770 --> 03:40.320
While there can be maximum five users logging into the server and maximum five users logging of the

03:40.320 --> 03:46.920
server then same we have some minimum and maximum numbers for the rates of data transmission the minimum

03:46.920 --> 03:51.900
rate of data transmission and the server will be 20 and the maximum rate of data transmission server

03:52.140 --> 03:53.650
will be 300.

03:53.670 --> 03:58.910
And again we have the maximum rate of data transmission that can go up or down per minute.

03:59.100 --> 04:00.120
And this will be 10.

04:00.300 --> 04:03.750
All right so these are the parameters we will write all this in our code.

04:03.750 --> 04:07.860
This will actually be our first step when defining the environment.

04:08.310 --> 04:10.020
OK and then we have the Horrible's.

04:10.020 --> 04:12.250
So these are very important to understand.

04:12.430 --> 04:17.590
I'm not listed here all the variables in our code because there are many of them but the main ones you

04:17.590 --> 04:22.540
know the ones that will have a huge impact on the ground that we have to accomplish.

04:22.590 --> 04:26.960
So the first variable is the temperature of the server at any minute.

04:26.970 --> 04:32.460
Remember that the iterations are measured in minutes and here what's important to understand is that

04:32.610 --> 04:34.630
we will measure separately.

04:34.630 --> 04:41.310
You know we will run separately to simulations for the two systems which are I remind the servers integrated

04:41.310 --> 04:42.330
cooling system.

04:42.480 --> 04:48.400
And of course our artificial intelligence because I remind that indeed they are complimentary.

04:48.450 --> 04:54.570
You know the servers and cooling system is activated when there is no AI and vice versa.

04:54.870 --> 05:01.110
So in order to compare the two performances of these two systems Well we will have to merge separately

05:01.190 --> 05:08.460
the two temperatures when the AI is activated and when it is not activated and then same we have a number

05:08.460 --> 05:10.440
of users in the server at any minute.

05:10.620 --> 05:13.500
The rate of data transmission at any minute.

05:13.800 --> 05:19.620
And then most importantly the energy is spent by the eye onto the server you know to cool it down or

05:19.620 --> 05:21.900
heat it up at any minute again.

05:22.020 --> 05:28.800
And separately the energy spent by the service integrated cooling system that automatically brings the

05:28.800 --> 05:34.380
surface temperature back to the optimal range whenever the surface temperature goes outside is optimal

05:34.380 --> 05:35.020
range.

05:35.130 --> 05:41.490
And obviously we will compute separately you know in two separate simulations the energy spent by the

05:41.580 --> 05:43.410
you know when we have any.

05:43.830 --> 05:49.610
And the energy spent by the servers integrated cooling system when we have no AI.

05:49.770 --> 05:56.730
And of course we will run these two simulations separately but with the same fluctuations of users and

05:56.730 --> 05:59.780
data coming in and coming out of the server.

06:00.130 --> 06:04.520
All right so you might have already an idea of how we will compute the reward.

06:05.000 --> 06:05.810
Okay.

06:06.150 --> 06:11.290
And you know when defining a huge environment Well of course we have to make some assumptions.

06:11.340 --> 06:16.770
Most of the time in here these assumptions are just to simplify the environment as much as we can so

06:16.770 --> 06:22.470
that we can focus the maximum of our energy onto our visual intelligence.

06:22.470 --> 06:28.170
So we have two assumptions and the first assumption will be that the temperature of the server can be

06:28.170 --> 06:34.830
approximated through multiple regression by function of the atmospheric temperature number of users

06:34.950 --> 06:36.870
and the rate of data transmission.

06:36.870 --> 06:43.020
So let's imagine that the data scientists run a regression and they found out that the server temperature

06:43.290 --> 06:47.400
can be approximated by a linear function of the atmospheric temperature.

06:47.400 --> 06:53.180
The number of users and the data transmission rates which are indeed variables of our environment.

06:53.420 --> 06:59.130
So they did their regression they found out that the surface temperature is linearly correlated to the

06:59.130 --> 07:04.020
atmospheric temperature the number of views and the data transmission rate and at the end of their regression

07:04.050 --> 07:12.120
they found out that the coefficients where zero equals one B1 because one point twenty five and B two

07:12.300 --> 07:14.250
equals one point twenty five.

07:14.570 --> 07:15.240
OK.

07:15.510 --> 07:20.870
So of course we will use this in our code meaning that we will implement this formula in our code.

07:20.910 --> 07:23.860
And again that's only for simplicity purposes.

07:24.360 --> 07:28.460
And then we have a second in Sumption and that is related to the energy.

07:28.650 --> 07:36.510
So assumption 2 is that the energy spent by a system which is either our AI or the servers integrate

07:36.510 --> 07:43.650
cooling system that changes the surface temperature from a temperature at time t to a temperature at

07:43.650 --> 07:50.910
time tipis one that is within one unit of time one minute can be approximated again through regression

07:51.300 --> 07:55.700
by a linear function of the servers absolute temperature change.

07:55.950 --> 07:58.940
So again the data scientists run a regression.

07:58.950 --> 08:05.480
They've trained some linear correlations between the energy and the change of temperature which is delta-T

08:05.490 --> 08:11.970
here and in the end they obtained the values of the coefficients alpha and beta which are respectively

08:11.970 --> 08:12.980
1 and 0.

08:13.020 --> 08:20.940
So that this assumption 2 becomes that the energy spent by system to heat up or cool down a server is

08:20.940 --> 08:23.940
directly the absolute value of the change of temperature.

08:23.940 --> 08:30.900
So let's say for example that are AAE from one time to the next minute changes the surface temperature

08:30.900 --> 08:34.260
from let's say 30 degrees to 27 degrees.

08:34.470 --> 08:40.640
Well that means that the energy spent by the AI to do that is three joules right.

08:40.680 --> 08:45.050
That's the assumption and of course that's again to simplify the environment.

08:45.480 --> 08:48.380
And same for the integrated cooling system.

08:48.540 --> 08:54.470
Let's say that at a specific time to service temperature goes up to 35 degrees.

08:54.660 --> 09:00.330
Well remember that this server is integrated cooling system will automatically bring down the temperature

09:00.330 --> 09:04.770
to the closest bound of the optimal range which is 24 degrees.

09:04.770 --> 09:09.690
So since at this time the surface temperature was thirty five degrees while this integrated cooling

09:09.690 --> 09:16.260
system will bring it down to 24 degrees meaning that it will cause a temperature change of 24 minus

09:16.260 --> 09:23.340
35 equals minus 11 degrees and therefore the energy spent by these servers integrate a cooling system

09:23.580 --> 09:25.330
will be 11 joules.

09:25.500 --> 09:26.120
All right.

09:26.340 --> 09:32.640
And so that gives us more simplicity of how we are going to compute the energies spent by these two

09:32.640 --> 09:34.360
systems separately.

09:34.620 --> 09:35.740
All right.

09:35.740 --> 09:38.160
And now let's move on to the next step.

09:38.160 --> 09:44.100
Our plan of attack which will be of course the same plan of attack as before where will define first

09:44.160 --> 09:49.950
the environment then explain all the AI's solution in terms of intuition and theory and of course in

09:49.950 --> 09:53.490
the end implemented the whole solution in Python.

09:53.490 --> 09:56.870
So I look forward to kick up this plan of attack in Texas oil.

09:56.910 --> 09:58.650
And until then enjoy AI.
