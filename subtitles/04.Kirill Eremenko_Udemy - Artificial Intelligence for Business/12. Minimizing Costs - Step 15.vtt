WEBVTT

00:00.390 --> 00:06.160
OK so we have two more steps to go which are part of the general framework because as you can see they

00:06.160 --> 00:07.600
are in capital letters.

00:07.650 --> 00:13.350
The first one is to make a method that resets the environment and it will have to reset the environment

00:13.620 --> 00:17.460
at the beginning of each new training epoch and to finish.

00:17.460 --> 00:23.200
We also have to make a method that gives us at any time the current state the last reward and whether

00:23.200 --> 00:24.240
the game is over.

00:24.250 --> 00:28.730
And so we'll call the first method reset and the second method observe.

00:28.830 --> 00:33.960
You know sometimes we'll have to observe the actual state of the environment at a specific time.

00:33.960 --> 00:39.480
So let's do these two methods quickly because I'm super excited and I'm burning to get to the next big

00:39.480 --> 00:43.940
step of the general framework which is of course to build the artificial brain.

00:43.980 --> 00:49.010
And then I can't wait to implement this as well because it's a pretty cool algorithm.

00:49.050 --> 00:49.290
All right.

00:49.300 --> 00:55.040
So let's make this reset method fictionally.

00:55.100 --> 01:00.290
This reset method will take of course self as a first argument because we'll use the variables of our

01:00.350 --> 01:01.120
object.

01:01.200 --> 01:06.410
But then of course another argument for the month which is the month will be in when we need to reset

01:06.410 --> 01:07.390
the environment.

01:07.430 --> 01:08.920
And why do we need that month.

01:08.930 --> 01:13.030
That's because you know we'll reset the atmospheric temperature.

01:13.070 --> 01:15.280
So actually I'm going to get it right now.

01:15.350 --> 01:20.300
That's the first thing we'll reset and you know remember we get the atmospheric temperature by getting

01:20.300 --> 01:26.870
the right index of the monthly atmospheric temperatures list of the average atmospheric temperatures

01:27.230 --> 01:32.630
for each of the 12 months and therefore I'm not only going to copy this but everything is you're going

01:32.630 --> 01:38.530
to see what will do to reset the atmospheric temperature in a few seconds.

01:38.750 --> 01:44.810
So as I just said we have two inputs the new month when we reset the environment.

01:45.110 --> 01:49.810
And now you're going to see indeed that to reset the atmospheric temperature.

01:49.910 --> 01:56.770
Well I'm going to base what I've just copied and I'm going to replace it month here by humans.

01:56.870 --> 01:57.600
Right.

01:57.650 --> 02:02.630
The new month that is the month in which we are when we are resetting the environment at a specific

02:02.630 --> 02:03.260
time.

02:03.610 --> 02:05.490
OK so that's the first one.

02:05.500 --> 02:12.620
Now let's reset quickly the other ones so remember that among our object variables we have the initial

02:12.710 --> 02:17.280
months you know what we're doing right now is just reset all the variables.

02:17.330 --> 02:18.670
There are not some parameters.

02:18.670 --> 02:24.710
So for example we want to reset the minimum temperature because it will always be minus 20 but we will

02:24.710 --> 02:29.600
of course reset the current number of users and also the current rate of data because these are some

02:29.720 --> 02:32.990
variables or are updated over the iterations.

02:32.990 --> 02:37.820
And since right now we are resetting the environment because we are actually going back to the first

02:37.880 --> 02:38.610
iteration.

02:38.720 --> 02:42.190
Well we have to reset all the variables that are updated.

02:42.380 --> 02:46.970
And so that's why we started with the atmospheric temperature and that's where right now we have to

02:47.480 --> 02:56.900
indeed reset also the initial months because that initial month is going to become of course the new

02:57.500 --> 02:58.140
month.

02:58.190 --> 02:59.720
That is our argument.

02:59.900 --> 03:03.000
Ok then let's see what do we have to reset.

03:03.020 --> 03:09.650
Well the next variable that is updated over the generations we just mentioned that it is the current

03:09.770 --> 03:10.780
number of users.

03:10.790 --> 03:17.440
You can check that these variables above are just parameters so always keeping the same value let's

03:17.440 --> 03:26.330
have that self that current number of users and will reset it back of course to the initial number of

03:26.330 --> 03:32.720
users which is a variable of our object self that initial number of users.

03:32.750 --> 03:33.650
There we go.

03:33.650 --> 03:39.650
Now let's do the same for the next variable that is updated over the iterations and that is of course

03:40.010 --> 03:42.660
the current rate of data.

03:42.770 --> 03:45.640
And actually I have an idea I'm going to copy all this.

03:45.650 --> 03:50.420
Then scroll down page that here and here.

03:50.420 --> 03:56.210
Since of course we want to reset the current rate of the data the initial rate of data.

03:56.420 --> 04:03.110
Well I'm setting the current rate of data of that current rate of data to be equal to self that initial

04:03.110 --> 04:07.090
rate of data exactly as what we did for the number of users.

04:07.460 --> 04:08.970
OK and then let's see.

04:09.080 --> 04:14.510
Well then of course we have to take care of one of the most important variables of our environment.

04:14.510 --> 04:20.150
I'm talking of course about the intrinsic temperature and now the good news is that we can directly

04:20.600 --> 04:26.870
copy all this because indeed you know since we've already reset the atmospheric temperature the current

04:26.870 --> 04:33.290
number of uses and the current rate of data well by just copying this formula here that will directly

04:33.290 --> 04:35.690
reset the intrinsic temperature.

04:36.050 --> 04:39.270
So we can just copy paste this.

04:39.380 --> 04:40.310
And here we go.

04:40.400 --> 04:45.860
Already ready to reset the next element and the next moment is the next variable that is updated over

04:45.860 --> 04:46.910
the iterations.

04:47.060 --> 04:50.740
And that's of course the temperature of the server.

04:50.750 --> 04:54.680
When we have the AI self the temperature AI.

04:54.860 --> 05:00.950
So I'm coupling this and actually again we can directly copy everything because indeed we're going to

05:00.950 --> 05:06.610
reset it to be equal to the intrinsic temperature because that was just reset.

05:06.610 --> 05:13.090
So I was crawling back down facing this perfect and now quickly for the rest.

05:13.100 --> 05:17.390
Then of course we'll reset the temperature of the server in that separate simulation.

05:17.450 --> 05:23.510
When dealing with the alternative servers integrate cooling system and so we have to reset that as well

05:23.540 --> 05:29.360
and we'll reset it to be equal to the mid temperature of the optimal temperature range.

05:29.360 --> 05:34.540
So again I am copying this and pasting it right here.

05:34.550 --> 05:35.430
Perfect.

05:35.690 --> 05:41.270
And then finally we have to reset of course the last remaining variables which are the total energy

05:41.270 --> 05:46.700
spent by the AI because when starting a new training epoch we have to set it back to zero then Same

05:46.700 --> 05:51.710
for the total energy spent by deservers alternative cooling system when we have no.

05:51.970 --> 05:56.510
And of course we have to research the reward to zero game over to zero because we're starting a new

05:56.510 --> 06:00.040
training book and therefore the game is starting instead of being over.

06:00.080 --> 06:06.140
And of course train equals one because of course we'll have to reset the environment only for the training

06:06.430 --> 06:08.530
and therefore we still want to be in training mode.

06:08.540 --> 06:15.210
So to be efficient let's just take all this actually because they will have the same value.

06:15.560 --> 06:19.200
And let's just copy that right here.

06:19.400 --> 06:20.360
And perfect.

06:20.360 --> 06:22.270
We did it efficiently.

06:22.280 --> 06:27.340
We are now ready to move on to the next and final step of this environment.

06:27.690 --> 06:34.970
Foul and also the final step of the general framework which is to make this observe method that will

06:35.030 --> 06:39.840
return to current state at a specific iteration but also the last resort.

06:40.040 --> 06:41.810
And whether the game is over.

06:42.110 --> 06:44.990
So let's do that quickly and efficiently in the next tutorial.

06:45.020 --> 06:46.570
And until then enjoy AI.
