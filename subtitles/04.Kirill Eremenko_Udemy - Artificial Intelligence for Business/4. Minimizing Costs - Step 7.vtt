WEBVTT

00:00.330 --> 00:04.430
All right here we go let's define the last important elements.

00:04.560 --> 00:11.370
But for our specific case that either is minimizing the energy consumption inside our server and so

00:11.590 --> 00:17.100
next variables we have to introduce here which are still some environment object variables are the ones

00:17.100 --> 00:20.510
related to the temperature and the ones related to the energy.

00:20.520 --> 00:23.000
So let's start with the ones related to the temperature.

00:23.130 --> 00:28.920
So remember in our specific case study there is an important thing to understand is that in order to

00:28.920 --> 00:35.310
compare the performance of our AI we have to compare it's energy spent with the energy that would be

00:35.310 --> 00:42.060
spent in the alternative situation where we have no AI and therefore to do that we have to make these

00:42.210 --> 00:48.540
two separate simulations one where we'll follow the evolution of the temperature when we have the AI.

00:48.780 --> 00:54.300
And then separately another simulation will follow the evolution of the temperature of the server.

00:54.390 --> 00:59.700
When we have no AI and that's why we have to make two separate variables here.

00:59.700 --> 01:03.960
One for the temperature of the serai when we have the AI and another one for the temperature of the

01:04.060 --> 01:06.220
zone we have no AI.

01:06.270 --> 01:13.050
However in order to make these two simulations have total sense well these two temperatures of the silver

01:13.050 --> 01:20.730
when we have the IA and when we have no AI I have to follow the same evolution of the intrinsic temperature

01:21.000 --> 01:21.620
of the server.

01:21.630 --> 01:27.270
That is the same evolution of the temperature of the server based on the fluctuations of the number

01:27.270 --> 01:33.600
of users and the rate of data transmission and that intrinsic temperature of the server which is the

01:33.600 --> 01:39.120
common base of these two separate simulations is exactly given by this formula which is the formula

01:39.150 --> 01:44.970
of Assumption 1 saying that the intrinsic temperature of the search that is the surface temperature

01:44.970 --> 01:48.750
that is independent of the actions of any system.

01:48.750 --> 01:56.160
Either the AI or the alternative system is approximately equal to the atmospheric temperature plus one

01:56.160 --> 02:01.410
point twenty five times the number of users in the solar plus one point twenty five times the rate of

02:01.410 --> 02:03.530
data transmission server.

02:03.780 --> 02:10.410
And that's this intrinsic temperature which will follow the same evolution for these two separate simulations

02:10.680 --> 02:15.960
that we're going to run separately to compare the performance of our AI with respect to the performance

02:16.020 --> 02:17.490
of the alternative system.

02:17.580 --> 02:19.020
That is when we have no AI.

02:19.260 --> 02:26.010
And therefore that's why right now we have to make three separate variables for some temperatures.

02:26.010 --> 02:31.560
The first one is going to be that intrinsic temperature which will be the common temperature evolving

02:31.620 --> 02:37.020
into two separate simulations then another variable for the temperature of the first simulation that

02:37.020 --> 02:42.960
is when we have the AI and then a third variable for the temperature of the second simulation when we

02:42.960 --> 02:49.110
have no AI and then we'll follow the evolution of these three separate temperatures and we'll be able

02:49.110 --> 02:53.010
to compare the energy spent for two separate simulations.

02:53.010 --> 03:02.580
All right let's do this and let's start with the intrinsic temperature of the server which is exactly

03:02.580 --> 03:03.870
given by this formula.

03:04.070 --> 03:04.680
All right.

03:04.830 --> 03:06.040
And therefore that is.

03:06.230 --> 03:16.490
Well let's get our variables here of the object self atmospheric temperature then plus one point twenty

03:16.490 --> 03:23.600
five times self that current number of users that is the number of users in the server at a specific

03:23.600 --> 03:24.510
time.

03:25.010 --> 03:25.750
Here we go.

03:25.760 --> 03:30.010
And then plus one point twenty five times.

03:30.140 --> 03:37.910
This time the current rate of data transmission that is self that current rate data are right one point

03:37.910 --> 03:40.970
twenty five times the current rate of data.

03:41.300 --> 03:47.630
And with that we get that intrinsic temperature of the server which will be the common base that is

03:47.630 --> 03:51.380
the common temperature evolution for our two simulations.

03:51.380 --> 03:54.210
One with the AI and one with no AI.

03:54.230 --> 04:02.490
And speaking of the temperature with the well that's going to be our next variable here self that temperature.

04:02.590 --> 04:05.730
That is the temperature of the server when there isn't the eye.

04:06.020 --> 04:12.850
And how are we going to initialize this well simply as the intrinsic temperature right at the beginning.

04:13.010 --> 04:17.270
This is exactly what is going to be the temperature of this or when we have the eye at the beginning

04:17.270 --> 04:20.550
because I will not have played any actions yet.

04:20.900 --> 04:21.250
All right.

04:21.260 --> 04:21.670
Great.

04:21.690 --> 04:28.100
Now the other temperature for the other separate simulation which we're going to call this time temperature

04:29.330 --> 04:36.620
no AI and well again for this one it would make sense to initialize it as the intrinsic temperature.

04:36.770 --> 04:43.010
But since this is the temperature of the Suroor when we have no AI that is when the server is regulated

04:43.010 --> 04:49.070
by this alternative service integrated cooling system that will automatically bring the temperature

04:49.070 --> 04:51.970
back into the optimal range of temperature.

04:52.100 --> 04:55.490
Well there is even a better way to initialize this temperature.

04:55.490 --> 05:02.370
No AI it is by sending it equal to the middle of the optimal temperature range indeed.

05:02.420 --> 05:07.520
Imagine the intrinsic temperature at the very beginning is outside the optimal temperature range where

05:07.880 --> 05:14.160
the server is integrated cooling system will automatically put it back into the optimal range of temperature

05:14.170 --> 05:17.050
so we will rather initialize it this way.

05:17.210 --> 05:24.020
And therefore I'm going to take my optimal range of temperature which is given in this variable and

05:24.650 --> 05:29.230
I'm going to get the middle of it I can either get the closest bound or the middle of it.

05:29.240 --> 05:33.700
But at this point it's more simple to get the middle of it and to get the middle of it.

05:33.710 --> 05:41.630
I'm going to get first the lower bound which has index 0 then plus the upper bound which has index 1

05:41.930 --> 05:48.710
and then we divide that by 2.0 2.0 because it's a photo operation and that will give us the temperature

05:48.710 --> 05:51.390
of the optimal range that is 21.

05:51.500 --> 05:54.590
Because the middle of 18 and 24 is 21.

05:54.590 --> 05:57.020
All right so perfect.

05:57.020 --> 05:58.440
That's it for the temperature.

05:58.610 --> 05:59.290
Good.

05:59.340 --> 06:05.780
And now that we initialize the temperatures well we can initialize the variables related to the energy

06:06.460 --> 06:12.560
and very simply there are going to be the variables that will contain the values of the total energy

06:12.830 --> 06:15.260
spent by each of these two systems.

06:15.300 --> 06:21.950
So we're going to have one variable called Total Energy AI which will be the total energy spent by the

06:21.950 --> 06:28.640
AI over the iterations either doing hold the training which will be some five month period or the whole

06:28.640 --> 06:35.270
simulation which will be a one full year and this will be the sum of the energy spent at each iteration

06:35.680 --> 06:41.240
and the same will have this other horrible total energy no AI which will be the energy spent in the

06:41.450 --> 06:42.460
other simulation.

06:42.470 --> 06:48.470
That is the simulation of the server being regulated by this alternative service integrated cooling

06:48.470 --> 06:52.720
system that is applied only when we have no AI.

06:52.800 --> 06:55.610
All right so let's introduce these two variables.

06:55.610 --> 07:04.410
First one is the total energy spent by the AI when we have the AI and will initialize that to zero point

07:04.410 --> 07:09.910
zero and then same self that total energy.

07:10.100 --> 07:16.070
No AI that is stored energy spent by this alternative service integrated cooling system when we have

07:16.070 --> 07:21.140
no AI and same will initialize this to zero point zero.

07:21.470 --> 07:27.770
And then finally here we are back into the general AI framework that we are building so that you can

07:27.770 --> 07:34.220
take a step back and adapt it to your own environments which are the reward the variable seeing whether

07:34.220 --> 07:41.570
the game is over and the moat which will say if we are in training mode that is training our AI or inference

07:41.570 --> 07:47.150
mode that is simulating the actions of our AI over a certain period of simulation.

07:47.150 --> 07:47.730
All right.

07:47.780 --> 07:52.550
So you always have to introduce and initialize these variables when doing deep reinforcement learning.

07:52.740 --> 07:56.240
And therefore Here we go with the reward first.

07:56.270 --> 07:59.730
That's going to be the reward received at each iteration.

07:59.810 --> 08:05.930
That is right after the AI plays in action and we are going to initialize this to 0.0.

08:05.960 --> 08:11.290
Then we have what we're going to call the game over.

08:11.300 --> 08:17.970
Var well which will be like a Boullion saying if the game is over and it will be cool to one if the

08:17.970 --> 08:21.540
game is over and 0 if the game is not over.

08:21.540 --> 08:26.790
And of course we have to initialize this to zero because at the beginning the game is obviously not

08:26.790 --> 08:28.800
over since it is starting.

08:28.800 --> 08:29.400
All right.

08:29.550 --> 08:35.880
And then finally the last variable which we're going to call train and which will be the mode in which

08:35.880 --> 08:42.900
will have the value one if we are in training mode and 0 if we are in inference mode that is if we're

08:42.900 --> 08:44.130
doing the simulation.

08:44.280 --> 08:50.220
And of course at the beginning well before we run any simulation we'll have to train first our AI and

08:50.220 --> 08:52.730
therefore will initialized this to 1.

08:52.770 --> 08:54.930
We have to start in the training mode.

08:55.290 --> 08:56.450
All right and that's it.

08:56.550 --> 09:03.600
That's all the variables and parameters we have to introduce and initialize for our specific case.

09:03.600 --> 09:09.240
But remember that what we just said here that is this first step introducing and initializing all the

09:09.240 --> 09:14.350
parameters and variables of the environment is the first step of this first part.

09:14.370 --> 09:18.430
Building the environment inside this whole AI framework.

09:18.600 --> 09:24.120
So remember this any time you will need to switch from this implementation that we're doing together

09:24.390 --> 09:28.000
to your implementation to solve your business problem.

09:28.870 --> 09:29.290
All right.

09:29.290 --> 09:29.850
Perfect.

09:29.850 --> 09:36.040
And now we're going to move on to the next step which will be to make a method that will update the

09:36.040 --> 09:38.640
environment right after the place in action.

09:38.830 --> 09:43.350
And again this is the next step in the general framework.

09:43.480 --> 09:45.410
So let's do that in the next Tauriel.

09:45.520 --> 09:47.220
And until then enjoy AI.
