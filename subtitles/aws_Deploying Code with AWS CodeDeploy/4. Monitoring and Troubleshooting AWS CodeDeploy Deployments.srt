1
00:00:00,240 --> 00:00:03,740
[Autogenerated] Okay, so now we have e CS and code to play set up.

2
00:00:03,740 --> 00:00:06,770
Let's look at how to monitor the service is And it's gonna be

3
00:00:06,770 --> 00:00:10,680
similar to in the previous module when we looked at cloudwatch in

4
00:00:10,680 --> 00:00:13,020
this demo would go into cover the following.

5
00:00:13,020 --> 00:00:16,030
We're going to look a tko deploy and cloudwatch events

6
00:00:16,030 --> 00:00:18,780
similar to in the previous module on.

7
00:00:18,780 --> 00:00:22,630
Then we're going to look at some of the logs in Cloudwatch, too.

8
00:00:22,630 --> 00:00:26,020
Okay, So when we're deep book in codedeploy with VCs,

9
00:00:26,020 --> 00:00:28,580
it's going to be similar to when we were deployed to the sea,

10
00:00:28,580 --> 00:00:29,990
too.

11
00:00:29,990 --> 00:00:33,250
I think the first port of call really would be to look at the

12
00:00:33,250 --> 00:00:37,640
deployment and see if there are any areas that pop up and then

13
00:00:37,640 --> 00:00:42,180
go through those errors and fix him.

14
00:00:42,180 --> 00:00:44,950
We have a lot of these Service is already being created forwards and

15
00:00:44,950 --> 00:00:47,370
automatically building on that cloud free point.

16
00:00:47,370 --> 00:00:49,580
Oh, architecture.

17
00:00:49,580 --> 00:00:52,510
Probably not a lot really going to go wrong.

18
00:00:52,510 --> 00:00:55,950
Um, and if it does, you'd probably see it here.

19
00:00:55,950 --> 00:00:57,730
So, you know, similar to it.

20
00:00:57,730 --> 00:01:03,630
With easy to, we can see all the different deployment hooks from the expect file.

21
00:01:03,630 --> 00:01:10,240
We can see what succeeded eso.

22
00:01:10,240 --> 00:01:11,860
Then let's jump over to E.

23
00:01:11,860 --> 00:01:12,070
C.

24
00:01:12,070 --> 00:01:13,680
S on here.

25
00:01:13,680 --> 00:01:15,660
Remember when we seen the task spinning up?

26
00:01:15,660 --> 00:01:19,260
We could probably see here if a task failed to spin up.

27
00:01:19,260 --> 00:01:22,090
That's probably more to do with your container.

28
00:01:22,090 --> 00:01:24,250
You can actually have a look at the logs as well.

29
00:01:24,250 --> 00:01:25,240
Here.

30
00:01:25,240 --> 00:01:29,190
Ah, and these are just pulled in from Cloudwatch.

31
00:01:29,190 --> 00:01:32,140
So we can actually see what was out.

32
00:01:32,140 --> 00:01:35,480
Put it from a container from the commands that we put in.

33
00:01:35,480 --> 00:01:44,950
Um, if we switch over to the cloudwatch dashboard on we go thio locks, maybe.

34
00:01:44,950 --> 00:01:45,950
Look, groups, Yes.

35
00:01:45,950 --> 00:01:46,750
Oh,

36
00:01:46,750 --> 00:01:50,990
we can see here that the that's where the locks that would be

37
00:01:50,990 --> 00:01:55,100
important to VCs are created on might be a little bit more

38
00:01:55,100 --> 00:02:00,790
comprehensive in here would be easier to read.

39
00:02:00,790 --> 00:02:03,050
So that's that part of it that's probably more deep

40
00:02:03,050 --> 00:02:05,240
booking your container probably a little bit outside of

41
00:02:05,240 --> 00:02:09,090
scope of this module on course on.

42
00:02:09,090 --> 00:02:12,900
And then you also have the cloudwatch events which are

43
00:02:12,900 --> 00:02:17,610
similar to of easy to where we can, you know,

44
00:02:17,610 --> 00:02:22,190
select the service in here.

45
00:02:22,190 --> 00:02:24,040
There it is.

46
00:02:24,040 --> 00:02:29,830
You know, then we can also, uh, notifications and alerts on these events.

47
00:02:29,830 --> 00:02:33,850
too.

48
00:02:33,850 --> 00:02:38,220
Such a state changes and you already know that from the last module.

49
00:02:38,220 --> 00:02:38,720
So again,

50
00:02:38,720 --> 00:02:45,710
super easy to use on super simple to debug on monitor using 80

51
00:02:45,710 --> 00:02:50,670
rest service's that are already available.

52
00:02:50,670 --> 00:02:52,240
Let's have a quick recap.

53
00:02:52,240 --> 00:02:54,520
We just covered codedeploy on E.

54
00:02:54,520 --> 00:02:55,220
C s.

55
00:02:55,220 --> 00:02:57,790
We looked at the prerequisites required.

56
00:02:57,790 --> 00:02:58,970
We then deployed T.

57
00:02:58,970 --> 00:03:03,530
C s and then we updated E CSU's in Codedeploy.

58
00:03:03,530 --> 00:03:05,530
We then looked at some monitoring indeed,

59
00:03:05,530 --> 00:03:09,600
bugging similar to with the easy to module.

60
00:03:09,600 --> 00:03:10,390
The thing is, well,

61
00:03:10,390 --> 00:03:14,130
it's good to remember that codedeploy is really flexible and we used

62
00:03:14,130 --> 00:03:17,790
it as a quick hello world service with fargate.

63
00:03:17,790 --> 00:03:21,980
But you don't have to use fargate to use code diplo VCs.

64
00:03:21,980 --> 00:03:30,000
You can't create more customizable configurations and also use that. Okay, let's go on to the next module.

