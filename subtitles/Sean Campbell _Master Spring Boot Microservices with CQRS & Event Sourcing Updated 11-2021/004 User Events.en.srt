1
00:00:00,210 --> 00:00:07,200
By now, you have already created the domain models and command objects that are required for the use

2
00:00:07,200 --> 00:00:10,120
of micro services in this lecture.

3
00:00:10,470 --> 00:00:13,650
We are going to create the user event objects.

4
00:00:14,070 --> 00:00:20,970
If you recall, an event is an object that describes something that has happened in the application.

5
00:00:21,420 --> 00:00:25,800
Basically, events are raised once a command has been actioned.

6
00:00:26,310 --> 00:00:34,080
Let's start by creating our first event object, the user register event and the events package that

7
00:00:34,080 --> 00:00:36,540
form part of the user call project.

8
00:00:37,180 --> 00:00:43,110
Let's create a new class and call it user registered event.

9
00:00:43,770 --> 00:00:50,340
Importantly, we are placing the objects in our core library package because the events are raised in

10
00:00:50,340 --> 00:00:54,540
the command API and handled in the query API.

11
00:00:55,200 --> 00:01:02,910
The user register event object is going to look exactly the same as the register user command object.

12
00:01:03,540 --> 00:01:10,950
We will also create an I.T. field and we will add a field for our user.

13
00:01:20,280 --> 00:01:28,360
We will then create another class for our user updated event.

14
00:01:31,140 --> 00:01:34,440
Again, it would look the same as the user register event.

15
00:01:34,450 --> 00:01:40,200
So let's copy the annotations and we can copy the fields.

16
00:01:43,740 --> 00:01:53,520
And then finally, let's create our last class, the user remove the event object.

17
00:01:56,700 --> 00:02:05,270
Again, we will only add the data annotation and we can just go ahead and copy the ID.

18
00:02:05,940 --> 00:02:09,930
That's all we need for the user removed event.

19
00:02:13,230 --> 00:02:15,780
Let's build our application.

20
00:02:33,890 --> 00:02:36,140
And everything built successfully.
