1
00:00:00,180 --> 00:00:07,290
Now that you have installed all the prerequisites, it's time for us to set up our micro services projects,

2
00:00:07,780 --> 00:00:15,990
open your browser and navigate to start that springboard IO to open the spring initialise, we will

3
00:00:15,990 --> 00:00:22,170
use the spring, initialize it to generate our spring with projects with all of its required dependencies.

4
00:00:22,650 --> 00:00:28,440
Spring, initialize plug ins or extensions are also available for most IDs.

5
00:00:28,740 --> 00:00:34,530
But let's rather use the Web based spring initialise to ensure that we are all in sync.

6
00:00:35,020 --> 00:00:39,170
OK, so let's start to create our first spring project.

7
00:00:39,600 --> 00:00:46,710
We have a choice between Maven or Gradle built automation tools, but we will only use MAVEN in this

8
00:00:46,710 --> 00:00:47,300
course.

9
00:00:48,060 --> 00:00:56,340
We also have a choice between Java, Cocklin or Groovy as our Java based programming languages, but

10
00:00:56,340 --> 00:00:59,380
we will use Java throughout this whole course.

11
00:01:00,160 --> 00:01:04,490
OK, next we need to select a spring boot version.

12
00:01:04,890 --> 00:01:11,980
We will select version two point four point one as the latest stable version at the time of this recording.

13
00:01:12,600 --> 00:01:17,390
The next thing we need to do is to set up the project metadata.

14
00:01:18,000 --> 00:01:21,420
The first thing that we need to do is to choose a group name.

15
00:01:21,780 --> 00:01:28,330
A group name is normally com dot org dot, followed by a company name.

16
00:01:28,380 --> 00:01:34,680
We are going to create bank account MICRA services, so let's assume we have a company called Spring

17
00:01:34,680 --> 00:01:35,160
Bank.

18
00:01:35,790 --> 00:01:39,230
Then the next thing is to select an artifact name.

19
00:01:39,390 --> 00:01:42,450
We will first create user MICRA services.

20
00:01:42,840 --> 00:01:50,670
The User Micra service will consist of a user command API and a user query API like you've seen in the

21
00:01:50,670 --> 00:01:52,170
course introduction.

22
00:01:52,650 --> 00:01:59,580
We will also create a user core project is a common project between the command and query APIs.

23
00:01:59,970 --> 00:02:07,830
So let's use user dot cmd for Camonte dot API as an artifact name.

24
00:02:08,520 --> 00:02:10,590
We can also provide a description.

25
00:02:10,860 --> 00:02:14,490
Let's call it User Command API project.

26
00:02:14,880 --> 00:02:22,380
Now you can see that our package name is com the Spring Bank to use it or cmd or API.

27
00:02:22,890 --> 00:02:30,420
We will use Java as our packaging type and like I've mentioned previously, I'll be using Java 15 in

28
00:02:30,420 --> 00:02:31,110
this course.

29
00:02:31,740 --> 00:02:35,760
Okay, now it's time to select Springview dependencies.

30
00:02:36,180 --> 00:02:41,580
We can click on the add dependencies button in the right top corner of our screens.

31
00:02:42,000 --> 00:02:45,150
The first dependency that we need is Spring Web.

32
00:02:45,600 --> 00:02:52,830
We will use spring web to create arrays controllers and to ensure that we can expose our restful endpoints.

33
00:02:53,340 --> 00:02:57,810
You can hold down control to select multiple dependencies.

34
00:02:58,380 --> 00:03:01,620
The second dependency that we will use is Lombok.

35
00:03:02,070 --> 00:03:08,160
Lombok will help us to reduce the boilerplate code that we normally have to write, especially when

36
00:03:08,160 --> 00:03:12,240
we create a command event and decode type objects.

37
00:03:12,810 --> 00:03:20,280
The final dependency that we will need for the User Command API is the spring security dependency that

38
00:03:20,280 --> 00:03:23,250
we will need to protect our micro services.

39
00:03:23,760 --> 00:03:30,690
Okay, now that we have selected all of our dependencies, our project is ready to be generated.

40
00:03:31,110 --> 00:03:37,290
You can click on the generate button and the spring initialize will generate your springboard application

41
00:03:37,290 --> 00:03:38,900
and download it for you.

42
00:03:39,510 --> 00:03:45,150
Okay, now we can generate a springboard project for our user query API as well.

43
00:03:45,690 --> 00:03:53,400
So let's change the artifact name to user dot query dot API and we can change the description to user

44
00:03:53,400 --> 00:03:55,170
query API project.

45
00:03:55,770 --> 00:04:00,150
Okay, we will keep the packaging and Java version the same.

46
00:04:00,510 --> 00:04:05,340
However, we need to add one more dependency because I use a query.

47
00:04:05,340 --> 00:04:08,700
API will use Mongo DB as its database.

48
00:04:08,820 --> 00:04:14,250
As you have seen in the first video of this course, when we looked at what we will develop.

49
00:04:15,050 --> 00:04:19,670
So let's click on the ad dependencies button and search for Mongo DB.

50
00:04:20,630 --> 00:04:28,340
You can go ahead and select the spring day to Mongo DB dependancy, OK, that's all we need to generate

51
00:04:28,340 --> 00:04:30,730
our user query API project.

52
00:04:30,980 --> 00:04:33,170
So again, we can click on generate.

53
00:04:34,230 --> 00:04:39,430
OK, now let's generate our final user project, the user core project.

54
00:04:39,870 --> 00:04:46,530
Let's start by changing the artifact name to use it at core, and we can give it a description like

55
00:04:46,530 --> 00:04:53,070
the user core project we will still use as our packaging type and Java 15.

56
00:04:53,870 --> 00:05:00,910
Now, the user core project is like a class library project, so we will not expose any for endpoints.

57
00:05:01,410 --> 00:05:04,540
So go ahead and remove the spring dependency.

58
00:05:05,040 --> 00:05:12,240
We will still use Lombok to reduce boilerplate code and spring security for some configuration objects.

59
00:05:12,660 --> 00:05:21,560
And finally, we'll use spring data Mongo DB to annotate domain entities with the document annotation.

60
00:05:22,080 --> 00:05:27,090
All right, click on Generate to generate your final user project.
