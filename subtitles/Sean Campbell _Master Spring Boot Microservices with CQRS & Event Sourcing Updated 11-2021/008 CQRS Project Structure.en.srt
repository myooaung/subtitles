1
00:00:01,230 --> 00:00:09,750
In this lecture, I'm going to show you how to structure a securest micro services project, and in

2
00:00:09,750 --> 00:00:17,970
particular when you use the Xen framework, let's start by creating a package for our models.

3
00:00:26,030 --> 00:00:34,530
Now let's go to the User Command API project and create a package for the commands.

4
00:00:35,900 --> 00:00:41,990
You'll remember that I told you what commands are in the previous section.

5
00:00:42,830 --> 00:00:46,850
Let's also create a package for the aggregates.

6
00:00:49,550 --> 00:00:53,760
Once a command has been executed, an event will be raised.

7
00:00:54,230 --> 00:01:02,780
We will create a package for events under the user core project because the command and query APIs will

8
00:01:02,780 --> 00:01:04,310
share the events.

9
00:01:08,330 --> 00:01:19,130
Now we can go over to the query API and create a package for handlers where we will create our event

10
00:01:19,130 --> 00:01:22,550
handlers and our query handlers.

11
00:01:24,830 --> 00:01:34,700
Once an event is raised, for example, a user created event, we will store a new user object into

12
00:01:34,700 --> 00:01:35,720
the database.

13
00:01:35,960 --> 00:01:38,900
Therefore, let's create a repository package.

14
00:01:42,190 --> 00:01:46,150
We will also create a package for queries

15
00:01:49,090 --> 00:01:58,450
similar to a command, basically saying, I want to query some data and let's create a package for our

16
00:01:58,450 --> 00:02:00,210
restful controllers.

17
00:02:01,210 --> 00:02:10,960
Now for serializing our Jason objects, let's create a package for DETRO, which stands for data transfer

18
00:02:11,140 --> 00:02:12,010
objects.

19
00:02:13,090 --> 00:02:16,060
Let's do the same on the command side.

20
00:02:16,060 --> 00:02:24,470
First, adding the controllers package and then finally also package for the DTA O's.

21
00:02:26,740 --> 00:02:36,610
Now let's go ahead and give our application names, proper names, let's call it use a command application.

22
00:02:39,610 --> 00:02:43,270
We can also do it for our test classes.

23
00:02:45,100 --> 00:02:55,300
And go ahead and do it for our query API as well, we can call it user query application.

24
00:02:57,760 --> 00:03:02,910
And that should make it sound more secure, compatible.

25
00:03:04,630 --> 00:03:08,620
OK, so also for our test class.

26
00:03:17,090 --> 00:03:25,940
One for configuration, and that's basically where we will add a configuration class or classes that

27
00:03:25,940 --> 00:03:30,050
will be shared between the command and query APIs.
