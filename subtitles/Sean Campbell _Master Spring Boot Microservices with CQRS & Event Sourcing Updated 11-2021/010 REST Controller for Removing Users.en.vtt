WEBVTT
1
00:00:00.240 --> 00:00:04.820
In this lecture, we are going to implement the remove user control.

2
00:00:05.370 --> 00:00:12.450
This will provide a racial endpoint that you can use to remove users, navigate to the controls package

3
00:00:12.780 --> 00:00:15.330
under the user command API project.

4
00:00:17.600 --> 00:00:23.580
Let's create a new class and call it remove user control

5
00:00:26.690 --> 00:00:36.710
first, let's add the risk controller annotation, then we can add our request mapping for our path.

6
00:00:37.190 --> 00:00:45.040
We can again use forward slash API, forward slash V1, forward slash remove user.

7
00:00:46.610 --> 00:00:53.020
Again, we will inject the command gateway via dependency injection.

8
00:00:53.030 --> 00:01:01.280
So let's start by adding a private field for the command gateway and then a public constructor that

9
00:01:01.280 --> 00:01:05.300
takes in the command gateway as the only parameter.

10
00:01:12.540 --> 00:01:14.130
Let's do the assignment

11
00:01:18.360 --> 00:01:25.800
and then remember to add the auto wired annotation to ensure that the spring AC container injects the

12
00:01:25.800 --> 00:01:33.600
command gateway, we will add the delete mapping because we will use a delete htp verb.

13
00:01:34.710 --> 00:01:38.070
So let's just specify that we will pass in an ID

14
00:01:40.560 --> 00:01:41.250
again.

15
00:01:41.280 --> 00:01:47.070
We will return a response entity with the base response.

16
00:01:52.440 --> 00:01:54.780
So let's call our method, remove yuzu

17
00:01:57.360 --> 00:02:04.080
and add in a path variable with the value equal to Idy as per the lead mapping

18
00:02:07.170 --> 00:02:14.370
and then our only parameter is string ID again.

19
00:02:14.400 --> 00:02:23.820
Let's start with a try catch where we will again return 500 internal server error if an exception occurs.

20
00:02:29.740 --> 00:02:35.440
We can go ahead and copy the tri sketch from the update, use a controller.

21
00:02:40.030 --> 00:02:47.290
And just modified slightly this change it to error while processing, remove user request for ID.

22
00:02:48.010 --> 00:02:58.390
OK, now go ahead and invoke the Senate method of the command gateway and let's instantiate a new remove

23
00:02:58.390 --> 00:03:01.000
user command, which we pass in the ID.

24
00:03:07.210 --> 00:03:16.660
Let's just go and add a whole box construct to annotation to ensure that the remove user command object

25
00:03:16.660 --> 00:03:17.860
takes in an ID

26
00:03:21.010 --> 00:03:34.480
and then we will return a new response entity where we will say that the user was successfully removed

27
00:03:37.660 --> 00:03:40.630
and let's return HTP status quo.

28
00:03:40.640 --> 00:03:43.140
Two hundred, which is OK.

29
00:03:44.590 --> 00:03:46.000
It's at a break point.

30
00:03:47.930 --> 00:03:58.400
And then we can go ahead and put break points in aggregate as well and remove user command handler.

31
00:04:10.150 --> 00:04:17.350
And let's also go ahead and debug our user query API application.

32
00:04:21.890 --> 00:04:27.980
And let's put a break point in the event handler for our user removed event.

33
00:04:35.280 --> 00:04:38.520
OK, go ahead and copy the request, mapping both.

34
00:04:39.810 --> 00:04:43.160
And then we can open Posman again.

35
00:04:47.730 --> 00:04:58.170
Space that they change it to a delete htp method and go ahead and copy the localhost, put it at one.

36
00:05:00.570 --> 00:05:08.400
Then we will pass in the I.D., so let's quickly connect to Mongo DB and.

37
00:05:09.770 --> 00:05:16.240
We will let states decide to remove Mike, since nobody knows.

38
00:05:16.320 --> 00:05:25.580
Mike, I need John and a Jane Doe, so we will pass in the unique ID for Mike Doe and then we can step

39
00:05:25.580 --> 00:05:26.540
through the code.

40
00:05:28.100 --> 00:05:33.020
And see that the removed user command were raised.

41
00:05:38.680 --> 00:05:45.760
And ultimately, the event handler that invokes the delete by idee method of the user repository.

42
00:05:48.190 --> 00:05:54.880
Press a five and then you will see that there is no longer a McDo in our database.

43
00:05:55.090 --> 00:06:02.830
However, if we look at the Domain Events collection, you will see our full trail of events where we

44
00:06:02.830 --> 00:06:10.840
registered, John Doe registered, Jane Doe registered, Mike Doe, updated Mike Doe and ultimately

45
00:06:11.200 --> 00:06:12.880
removed Mike Doe.

46
00:06:16.790 --> 00:06:23.330
And that gives you a simple illustration of the difference between the read and write database's, they

47
00:06:23.330 --> 00:06:25.430
can also see that record a 200.

48
00:06:28.020 --> 00:06:30.240
User successfully removed.
