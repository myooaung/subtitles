1
00:00:00,180 --> 00:00:07,440
To process queries as a dedicated messaging type is in line with securest best practices to segregate

2
00:00:07,440 --> 00:00:09,610
your query models from your commands.

3
00:00:10,080 --> 00:00:16,440
Now to create a query, API is fairly easy and you could do it without the need of Exxon.

4
00:00:16,830 --> 00:00:22,430
However, using the Excel framework to build a query, API holds a few benefits.

5
00:00:22,710 --> 00:00:28,770
For example, the reuse of features such as interceptors and message monitoring.

6
00:00:29,250 --> 00:00:35,930
In this lecture, we are going to create three query models, including one for finding all users,

7
00:00:35,970 --> 00:00:41,400
another for finding a user by idea, and yet another for searching for users.

8
00:00:41,910 --> 00:00:49,350
Let's start by creating our first query model navigate to the queries package under the User Query API

9
00:00:49,350 --> 00:00:50,070
project.

10
00:00:50,560 --> 00:00:57,030
Let's create a new class and call it Find All Users Query.

11
00:00:58,530 --> 00:01:02,070
Now this object will contain no fields'.

12
00:01:02,340 --> 00:01:09,510
It will simply represent a query where we want to return all users without any way close or faulter.

13
00:01:10,230 --> 00:01:16,860
Let's create another class and call it find user by idee query.

14
00:01:22,420 --> 00:01:30,610
And let's add the data annotation and we can go ahead and add an ID field.

15
00:01:38,910 --> 00:01:48,960
And then finally, let's create another class and call it search users query.

16
00:01:54,010 --> 00:02:03,250
Again, at the data annotation to reduce the boilerplate code and go ahead and add a Stringfield for

17
00:02:03,250 --> 00:02:04,420
a search full to.

18
00:02:08,120 --> 00:02:10,670
OK, let's build our project.

19
00:02:29,230 --> 00:02:32,380
And everything should build successfully.
