WEBVTT
1
00:00:00.780 --> 00:00:07.110
The final controller that we need to create for the bank account command API is one that will allow

2
00:00:07.110 --> 00:00:14.030
us to close a bank account, navigate to the controllers package and the bank account command API.

3
00:00:14.550 --> 00:00:19.650
Let's create a new class and call it a close account controller.

4
00:00:24.910 --> 00:00:30.790
As with the other controllers, we will add the risk controller annotation, as well as the request

5
00:00:30.790 --> 00:00:32.110
mapping annotation

6
00:00:34.870 --> 00:00:43.480
for our path, we can use forward slash API, forward slash V, one forward slash close bank account.

7
00:00:50.130 --> 00:00:59.130
Now, let's go and copy the private field and construct of the deposit funds comptroller, let's just

8
00:00:59.130 --> 00:01:06.500
rename our constructor to close the card controller and then we are going to add a delete method.

9
00:01:07.020 --> 00:01:11.790
Let's annotated with the lead mapping for a path.

10
00:01:11.790 --> 00:01:14.430
We will include the bank account ID

11
00:01:18.060 --> 00:01:18.780
again.

12
00:01:18.780 --> 00:01:21.890
Let's secure our method with preauthorization.

13
00:01:22.920 --> 00:01:26.340
Let's copy it from the deposit funds control again.

14
00:01:31.920 --> 00:01:37.770
And then we are going to return a response entity, basically the base response,

15
00:01:43.500 --> 00:01:52.440
let's call our method close account, it's going to take in a path variable, basically the bank account

16
00:01:52.440 --> 00:01:52.920
ID.

17
00:01:57.810 --> 00:02:03.390
And like most elite HDP verbs, we will not have a request, buddy.

18
00:02:04.440 --> 00:02:09.240
OK, so let's implement a try catch first,

19
00:02:14.400 --> 00:02:18.480
go back to the deposit funds controller and copy the catch section.

20
00:02:24.830 --> 00:02:31.130
And then we can just rename our safe area message to Iran while processing requests to close a bank

21
00:02:31.130 --> 00:02:32.860
account for ID.

22
00:02:34.370 --> 00:02:39.890
OK, now let's instantiate a new close account command object.

23
00:02:40.100 --> 00:02:50.300
By using the builder, we will just set an ID, which is our bank account idea that we pass as a variable

24
00:02:52.580 --> 00:02:57.230
and then we'll use the command gateway to dispatch the closed account command.

25
00:03:08.340 --> 00:03:16.980
And if everything is processed successfully, we can return a message bank account successfully closed

26
00:03:23.250 --> 00:03:27.990
and we will return ISP status code two hundred, OK?

27
00:03:34.230 --> 00:03:35.940
Now let's build our project.

28
00:03:51.870 --> 00:03:55.410
Go ahead and add a breakpoint in the controller method.

29
00:04:01.760 --> 00:04:07.400
As well as in the close account command handling method, also in the event sourcing handling method

30
00:04:07.400 --> 00:04:08.930
for closed current event.

31
00:04:10.360 --> 00:04:13.510
That's Dbag, our bank account command application.

32
00:04:14.980 --> 00:04:18.160
Also, our bank account query API.

33
00:04:21.980 --> 00:04:30.530
Let's put a break point in our current event handler, where we handle the account closed event, also

34
00:04:30.530 --> 00:04:33.020
run your bank account reapplication.

35
00:04:44.080 --> 00:04:52.990
Then we can go ahead and add an API gateway route for our newly created controller method, copy the

36
00:04:52.990 --> 00:05:00.820
withdrawal funds API Gateway route, change the data to bank account, CME, the API closed account,

37
00:05:02.080 --> 00:05:09.730
and change the request path to closed bank account and also copy that across to the predicate.

38
00:05:13.480 --> 00:05:16.330
Now let's run our API Gateway.

39
00:05:23.080 --> 00:05:30.370
And also, go ahead and run the Earth 2.0 authorization server, because we are going to need a JWT

40
00:05:30.520 --> 00:05:39.700
to authenticate our bank account command API login to my sequel so that we can go and copy the idea

41
00:05:39.700 --> 00:05:40.840
of the bank account.

42
00:05:47.840 --> 00:05:58.910
It's going to a bank account table and go ahead and copy the Idy now open postman and change it to delete

43
00:06:01.370 --> 00:06:06.590
localhost and put two thousand via the API Gateway

44
00:06:09.350 --> 00:06:14.570
close bank account for its bank account idy.

45
00:06:15.320 --> 00:06:17.570
Now that's going to get a JWT.

46
00:06:27.400 --> 00:06:30.550
And we will pass it as a very token.

47
00:06:33.700 --> 00:06:34.570
Hit send.

48
00:06:37.150 --> 00:06:43.690
You'll see it hits a breakpoint in our close account controller method, the command gateway dispatches

49
00:06:43.690 --> 00:06:52.870
the command it's handled and then it's marked as deleted and that deletes the aggregate hits event handler

50
00:06:52.870 --> 00:06:53.580
method.

51
00:06:53.590 --> 00:06:59.560
And if we check in our database, you'll see that we no longer have any bank accounts.

52
00:07:03.990 --> 00:07:10.140
Let's the canal event store and then you'll see a new event, account closed event.
