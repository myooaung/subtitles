1
00:00:00,390 --> 00:00:07,830
In this lecture, we are going to create our command objects for our user command MICRA service, if

2
00:00:07,830 --> 00:00:15,630
you recall, a command is a combination of expressed intent, which basically in our context describes

3
00:00:15,630 --> 00:00:18,650
what we want to use a command military service to do.

4
00:00:19,110 --> 00:00:25,740
We are going to create three command objects, a registered user command update, use a command and

5
00:00:25,740 --> 00:00:27,750
a remove user command object.

6
00:00:28,170 --> 00:00:34,860
We will create them under the commands package that falls under the User Command API project.

7
00:00:35,250 --> 00:00:40,640
Let's create a new class and call it Register User Command.

8
00:00:42,090 --> 00:00:49,020
Now, the first thing that we are going to do is add the data annotation and the builder annotation.

9
00:00:50,520 --> 00:00:55,440
Then we will add a couple of private fields, starting with an ID.

10
00:00:59,320 --> 00:01:09,640
Importantly, we will annotate the ID field with Target Aggregate Identifier in order for Exxon to know

11
00:01:09,640 --> 00:01:16,240
which instance of an aggregate type should handle the command message, the field carrying the aggregate

12
00:01:16,240 --> 00:01:23,380
identifier in the command object must be annotated with at Target Aggregate Identifier.

13
00:01:24,400 --> 00:01:31,210
Also, remember that a command should carry the information required to undertake action based on the

14
00:01:31,210 --> 00:01:32,410
expressed intent.

15
00:01:32,800 --> 00:01:38,810
More specifically, we need the user information to enable us to register a new user.

16
00:01:39,130 --> 00:01:45,340
Therefore, let's add the user domain model as a filter register command object.

17
00:01:57,010 --> 00:02:04,960
Now, let's create another class and call it update user command.

18
00:02:05,830 --> 00:02:13,960
Now, basically the update use a command object is going to look exactly the same as the register,

19
00:02:13,960 --> 00:02:15,370
use a command object.

20
00:02:16,030 --> 00:02:25,990
That is because we will use the put HTP verb instead of the PETCH in order to replace the entire user

21
00:02:25,990 --> 00:02:29,380
object rather than doing a partial update.

22
00:02:30,040 --> 00:02:34,420
So let's go ahead and copy all the fields of the register.

23
00:02:34,420 --> 00:02:35,920
Use a command object.

24
00:02:42,440 --> 00:02:50,180
Let's create another class for our remove user command object.

25
00:02:51,620 --> 00:02:59,390
Now, what's different from the other user common objects is that we will only add the data annotation

26
00:03:00,050 --> 00:03:06,890
because the remove user command object will only have a single field, which is basically an ID field,

27
00:03:07,250 --> 00:03:09,800
and the builder would be an overkill.

28
00:03:10,340 --> 00:03:13,180
Again, Target aggregates identifier.

29
00:03:13,640 --> 00:03:20,660
And we basically only need the ID because typically when you remove an object, you would only pass

30
00:03:20,660 --> 00:03:21,310
the ID.

31
00:03:21,620 --> 00:03:28,820
Okay, that concludes the creation of a command object for a user command MICRA service.

32
00:03:34,580 --> 00:03:35,570
Let's build.

33
00:03:50,470 --> 00:03:53,890
And everything seems to build successfully.
