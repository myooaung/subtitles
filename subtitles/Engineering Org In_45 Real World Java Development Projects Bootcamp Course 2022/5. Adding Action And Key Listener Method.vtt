WEBVTT
1
00:00:00.600 --> 00:00:00.940
Okay.

2
00:00:00.960 --> 00:00:07.560
So till the last part we have covered the initialize function that how we are going to initialize the

3
00:00:07.560 --> 00:00:14.130
frame by creating this private void initialize function, setting the layout for the frame, setting

4
00:00:14.130 --> 00:00:19.440
the panels are like putting up things inside the frame is done with the help of the panel.

5
00:00:19.470 --> 00:00:27.420
We are adding panel for this height, this add or delete button, this tree and this info panel containing

6
00:00:27.420 --> 00:00:31.080
in order, preorder and first order traversal of the tree.

7
00:00:31.380 --> 00:00:39.510
Also, we have created a separate panel for the title, The Binary Search Visualization, which is going

8
00:00:39.510 --> 00:00:41.700
to be the frame type.

9
00:00:42.600 --> 00:00:50.850
So here you can see that this is containing our exit on close windows, exit on clause default of operation,

10
00:00:50.850 --> 00:00:55.980
which will help us to exit through this application whenever we want.

11
00:00:56.070 --> 00:01:00.570
So this was all about putting up things inside the frame.

12
00:01:00.570 --> 00:01:08.910
Now our next concern is to like we have created button so we have to add action, listens to the button

13
00:01:09.030 --> 00:01:16.260
and in order to do so we will use this override function or like override keyword.

14
00:01:16.260 --> 00:01:25.530
So this override keyword helps us to extend this class to implement action.

15
00:01:25.530 --> 00:01:29.670
Listener So this is based basically visualization class.

16
00:01:29.670 --> 00:01:34.680
We are implementing action listener and listener on this class.

17
00:01:34.680 --> 00:01:43.110
So in that order we have to use this override function to implement those changes in the main function.

18
00:01:43.260 --> 00:01:46.050
So public void.

19
00:01:46.960 --> 00:01:50.800
Action performed is going to be the name for the function.

20
00:01:52.930 --> 00:01:53.190
Okay.

21
00:01:53.800 --> 00:01:58.500
So yes and inside the argument we are going to pass action event.

22
00:02:00.930 --> 00:02:06.880
That's the event for that specific button we are pressing.

23
00:02:07.450 --> 00:02:07.940
Okay.

24
00:02:07.950 --> 00:02:13.470
So we have created this action perform function now inside this function.

25
00:02:13.800 --> 00:02:18.960
Suppose if the text field is enabled, so is enabled.

26
00:02:20.230 --> 00:02:20.950
And.

27
00:02:22.510 --> 00:02:23.890
After this.

28
00:02:25.030 --> 00:02:32.710
You have to use this trying and catch block to like check if there are any kind of exceptions in the

29
00:02:32.710 --> 00:02:33.700
text field.

30
00:02:33.910 --> 00:02:41.740
So in data integer not passing.

31
00:02:41.830 --> 00:02:43.840
So this passing is done.

32
00:02:45.070 --> 00:02:51.280
In order to convert these integers in the form of first string format.

33
00:02:51.820 --> 00:03:03.010
So to get text, we are getting the text, text for the data field, whatever to be added inside that

34
00:03:03.280 --> 00:03:04.240
as a node.

35
00:03:04.390 --> 00:03:11.140
Now if statement checking that this event has a data source or not.

36
00:03:12.640 --> 00:03:13.300
So.

37
00:03:14.260 --> 00:03:21.250
Yes, this is going to be a method and we will use this VPN.

38
00:03:21.250 --> 00:03:31.720
And so suppose we have pressed this button and then we have to add that data inside that tree.

39
00:03:32.500 --> 00:03:38.650
And also if there is a if, then there will be else.

40
00:03:39.470 --> 00:03:43.160
So after this, if we are going to.

41
00:03:43.820 --> 00:03:56.450
So, yes, here it was if and we have to close the safe here after the third data and again or as block.

42
00:03:57.170 --> 00:04:03.950
So suppose if we then is not click, then definitely we have to delete that data.

43
00:04:03.950 --> 00:04:09.230
So we are using delete data in that block.

44
00:04:09.530 --> 00:04:14.260
So yes, the data will be deleted if the block is cleared.

45
00:04:14.270 --> 00:04:24.740
Now coming out of this LS block, they have not set text and the set text is going to again set that

46
00:04:24.740 --> 00:04:26.180
string as empty.

47
00:04:27.200 --> 00:04:28.880
So this is how it is done.

48
00:04:29.390 --> 00:04:37.760
If the get source is getting the source of the add button, then it will add that data to the BSD and

49
00:04:37.760 --> 00:04:40.880
else it will delete that data from the BSD.

50
00:04:40.880 --> 00:04:47.300
So we are going to create our dedicated add and delete function for the three.

51
00:04:47.300 --> 00:04:51.260
So once this add button is click, then what is going to happen?

52
00:04:51.260 --> 00:04:58.670
And similarly for the delete part also and yes, this text field is request focus and window.

53
00:04:58.790 --> 00:05:06.080
So whenever a text is entered inside this text field, then of focus like this cursor will appear in

54
00:05:06.080 --> 00:05:07.280
the text free later.

55
00:05:07.490 --> 00:05:15.830
And if that is any kind of exception, suppose we have entered any other thing like not an integer.

56
00:05:15.830 --> 00:05:19.700
Suppose we have entered any alphabet, then it will throw exception.

57
00:05:20.270 --> 00:05:22.010
Please enter integer.

58
00:05:22.430 --> 00:05:26.420
So this was all about this action performed function.

59
00:05:26.540 --> 00:05:36.440
Now in the similar way we are going to again create a key list type of function which is going to listen

60
00:05:36.440 --> 00:05:41.450
to the data entered by us in the form of integer.

61
00:05:41.450 --> 00:05:43.880
So how this is going to work.

62
00:05:44.150 --> 00:05:50.570
So this action performed was working for these two things, add button and delete button.

63
00:05:50.720 --> 00:05:59.420
Now this key type is going to work for the events performed with the help of our keyboard, so we have

64
00:05:59.420 --> 00:06:05.030
to enter only integers in that text field in order to add them inside the tree.

65
00:06:05.030 --> 00:06:16.490
So suppose we enter anything like anything other than integers then this key type event will throw exception.

66
00:06:17.000 --> 00:06:18.860
So public void.

67
00:06:18.860 --> 00:06:19.550
Key.

68
00:06:21.040 --> 00:06:29.890
He typed is going to be the name for this function and this will check that whether valid integers are

69
00:06:29.890 --> 00:06:32.080
entered in the text field or not.

70
00:06:32.650 --> 00:06:34.600
So he typed everything.

71
00:06:36.170 --> 00:06:40.430
And yes, it is bracket.

72
00:06:41.260 --> 00:06:48.070
He went as fast as an argument inside this function and this is going to take care inputs.

73
00:06:48.280 --> 00:06:57.040
So if we not get quicker is the way to get the characters from the keyboard.

74
00:06:57.970 --> 00:07:03.460
Yes, from the suggestions taking it and then using its method.

75
00:07:04.090 --> 00:07:10.720
So if not like suppose this text field is in not enabled then.

76
00:07:11.610 --> 00:07:13.470
We are going to simply return.

77
00:07:14.400 --> 00:07:15.180
And.

78
00:07:16.780 --> 00:07:19.750
Resist and return simply.

79
00:07:22.280 --> 00:07:27.310
And after this, we have to check this statement.

80
00:07:27.560 --> 00:07:33.260
So suppose the user has entered a character from keyboard.

81
00:07:33.290 --> 00:07:39.170
Suppose our user enters small or capital.

82
00:07:40.550 --> 00:07:45.560
So we have to use this single straight line.

83
00:07:46.320 --> 00:07:48.000
For all statements.

84
00:07:48.630 --> 00:07:52.500
So capital and.

85
00:07:55.280 --> 00:08:00.080
US suppose Terminator like line Terminator.

86
00:08:00.410 --> 00:08:02.780
So we have to check that.

87
00:08:03.200 --> 00:08:12.290
If the user hasn't done any kind of alphabay, then what popup should appear to tell the user that?

88
00:08:13.460 --> 00:08:16.390
Try entering the correct text.

89
00:08:16.400 --> 00:08:23.420
Of course, like we only accept integers, so try inputting integers only.

90
00:08:23.690 --> 00:08:25.340
So a string.

91
00:08:27.260 --> 00:08:30.020
Data for the.

92
00:08:33.750 --> 00:08:37.410
Since I did not get taxed.

93
00:08:39.570 --> 00:08:40.710
And again.

94
00:08:42.040 --> 00:08:43.060
A bracket.

95
00:08:45.020 --> 00:08:50.740
After this, we are going to check this event continue.

96
00:08:53.210 --> 00:08:57.830
So this is a method of checking the event.

97
00:08:58.860 --> 00:09:00.690
Performed with the keyboard.

98
00:09:02.280 --> 00:09:10.380
And if that data is not empty, then if statement we are going to use and pass that integer in the form

99
00:09:10.380 --> 00:09:15.470
of like suppose the user has entered our integer so there will be no exception.

100
00:09:15.480 --> 00:09:24.810
But if the user has entered this character, suppose or any terminator, then the pop up is going to

101
00:09:24.810 --> 00:09:26.070
appear which will show.

102
00:09:26.070 --> 00:09:27.810
Suppose you have entered a here.

103
00:09:27.900 --> 00:09:33.050
Then this will show an exception that please enter an integer.

104
00:09:33.060 --> 00:09:37.050
So we are going to do that inside this.

105
00:09:38.190 --> 00:09:46.410
So if the user enters anything except integers, then a pop up will show like a dialog box will appear

106
00:09:46.410 --> 00:09:49.710
showing a message that please enter integer.

107
00:09:49.950 --> 00:09:59.130
Similarly, we are checking it for D, so we are checking it for two alphabets and separately and then

108
00:09:59.130 --> 00:10:01.410
inside this else's block.

109
00:10:01.440 --> 00:10:09.930
We have checked that if the character is greater than A or less than Z, then event consume is going

110
00:10:09.930 --> 00:10:10.530
to be called.

111
00:10:10.530 --> 00:10:14.490
And what this event is doing it will return that.

112
00:10:14.490 --> 00:10:21.660
Please enter our integer also let us try checking it in the in our application.

113
00:10:21.660 --> 00:10:26.900
So suppose I have entered an integer 56 and hit that.

114
00:10:26.940 --> 00:10:34.860
Then it is successfully added and let us try to enter something other than integers and see that what

115
00:10:34.860 --> 00:10:35.940
actually happens.

116
00:10:35.940 --> 00:10:43.500
So here I am pressing any random alphabet from the keyboard and this message dialog box is a pairing

117
00:10:43.530 --> 00:10:47.640
showing that please enter integer and once we hit.

118
00:10:47.640 --> 00:10:53.340
Okay, so this is one now again try to enter any other alphabet.

119
00:10:53.820 --> 00:10:57.720
Again, this pop up will appear showing that please enter integer.

120
00:10:59.070 --> 00:11:02.880
So once we enter an integer it is working perfectly fine.

121
00:11:02.880 --> 00:11:12.990
This text field is able to take integer inputs only and no alphabetical inputs or any special symbols

122
00:11:12.990 --> 00:11:14.310
from your keyboard.

123
00:11:14.730 --> 00:11:21.740
So this was all about this text field working like how it is taking inputs.

124
00:11:21.750 --> 00:11:31.410
Only integer inputs are welcomed here and nothing, nothing other than integers like that should be

125
00:11:31.410 --> 00:11:33.150
entered inside this text field.

126
00:11:33.690 --> 00:11:41.760
So now that we have covered everything about adding panels inside the frame, whether it is the title,

127
00:11:41.790 --> 00:11:49.500
the top left and top right, the tree panel and the info panel, we have created action listeners also

128
00:11:49.500 --> 00:11:51.770
for this add and delete button.

129
00:11:51.780 --> 00:11:59.940
We have also added action listener to this text field that how it is taking the inputs and if any invalid

130
00:11:59.940 --> 00:12:06.810
input is given to it, then how it is going to show any message on the screen in the form of a dialog

131
00:12:06.810 --> 00:12:08.350
box and anything.

132
00:12:08.520 --> 00:12:10.620
Okay, it is gone now.

133
00:12:10.830 --> 00:12:18.840
The next thing we are going to cover is adding a separate function for this add button inside our code.

134
00:12:19.080 --> 00:12:26.100
We are going to give an add function and a delete function that how addition and deletion are going

135
00:12:26.100 --> 00:12:27.240
to be done.

136
00:12:27.240 --> 00:12:29.850
Suppose we try to add it in the.

137
00:12:30.830 --> 00:12:31.410
Three.

138
00:12:31.430 --> 00:12:33.950
So how it is added to the tree?

139
00:12:33.950 --> 00:12:35.210
It is added.

140
00:12:35.660 --> 00:12:40.910
Firstly, it is checked that it is less than the 500 or greater than if it is less than.

141
00:12:40.910 --> 00:12:43.730
Then it will be added to the left subtree.

142
00:12:43.760 --> 00:12:50.300
Similarly, we will use a recursive method to check that whether it is greater than this.

143
00:12:50.540 --> 00:12:52.460
Then again come into its child.

144
00:12:52.490 --> 00:12:56.770
Then if it is less than 250, then we will check for the left child.

145
00:12:56.780 --> 00:13:00.200
So this method is going to be like non repetitive.

146
00:13:00.290 --> 00:13:06.420
If the number is less than us some number then we are only going to check it for the left, subtree

147
00:13:06.420 --> 00:13:07.730
and not the right one.

148
00:13:08.060 --> 00:13:11.750
This is going to be a time saving method of course.

149
00:13:11.750 --> 00:13:20.540
So we will write this add and delete functions wisely while keeping in mind that it should reduce the

150
00:13:20.540 --> 00:13:23.090
time complexity for this algorithm.

151
00:13:23.390 --> 00:13:29.840
We have to keep in mind that we have totally checked the left subtree if the number is less than the

152
00:13:29.840 --> 00:13:33.190
parent, and then if it is greater than the parent.

153
00:13:33.200 --> 00:13:35.620
Suppose we are trying to enter this.

154
00:13:35.660 --> 00:13:36.350
How then?

155
00:13:36.560 --> 00:13:40.970
Then it will only check that this 3000 is greater then.

156
00:13:40.970 --> 00:13:46.340
And if it is better then then it will likely move this left subtree checking thing.

157
00:13:46.370 --> 00:13:51.860
It will only come to this right subtree and check that whether it is greater than 750.

158
00:13:51.920 --> 00:13:58.100
Then if it is greater than 715, then it will come to her and again check that it is greater than 1000

159
00:13:58.100 --> 00:14:03.970
or not and it will simply add it to the right panel of the 1000.

160
00:14:03.980 --> 00:14:05.600
So here it is done.

161
00:14:05.960 --> 00:14:09.790
So we are going to write methods for add and delete in our next path.
