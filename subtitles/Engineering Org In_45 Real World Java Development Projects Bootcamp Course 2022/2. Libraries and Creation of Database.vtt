WEBVTT
1
00:00:00.870 --> 00:00:06.330
So in this video we will be talking about the creation of database for this project that is cab booking

2
00:00:06.330 --> 00:00:12.720
system and the library is used in this project and the Java file which will help us to connect this

3
00:00:12.720 --> 00:00:14.190
project with our database.

4
00:00:14.340 --> 00:00:20.850
So I have already created the database, so I will be showing the details of that database.

5
00:00:20.850 --> 00:00:27.360
So the database name is I'll be using use as one.

6
00:00:27.360 --> 00:00:29.130
That was the name of database.

7
00:00:29.310 --> 00:00:31.200
So database has been changed.

8
00:00:31.200 --> 00:00:36.000
So let me show you what are the tables which we have inside this database?

9
00:00:36.000 --> 00:00:38.550
I will be writing queries, short tables.

10
00:00:41.340 --> 00:00:47.400
So these are the tables which we have in our database that there are one, two, three, four, five,

11
00:00:47.400 --> 00:00:48.810
six, seven, eight tables.

12
00:00:49.350 --> 00:00:55.630
Table one is an account which will hold the account and validating details as username and password.

13
00:00:55.650 --> 00:00:58.980
Then there is a customer, then there is an inter cab.

14
00:00:59.010 --> 00:01:04.530
This will hold the details of inter inter city cab booking and inter.

15
00:01:05.160 --> 00:01:07.150
Then there is an intercity.

16
00:01:07.170 --> 00:01:13.890
This will hold the routes and source and destination price and driver for intercity caps and trackable.

17
00:01:13.890 --> 00:01:19.440
All the details of about the intra cab bookings and inter intercity will hold the.

18
00:01:20.530 --> 00:01:23.950
Details about the source and destination for the type of caps.

19
00:01:23.980 --> 00:01:30.640
Then there is a transport will hold the details and booking of that particular user of transport, caps

20
00:01:30.640 --> 00:01:36.940
and transport with all the source and destination drivers and its price for that transport purpose.

21
00:01:37.270 --> 00:01:45.490
Now, let me show you the details or let me first describe each table so that you can understand what

22
00:01:45.490 --> 00:01:49.030
are the number of columns or the columns inside each table.

23
00:01:49.150 --> 00:01:49.990
So.

24
00:01:51.030 --> 00:01:52.170
Describe.

25
00:01:54.110 --> 00:01:54.800
Account.

26
00:01:57.220 --> 00:02:03.070
So inside account we have four things username, name, password, question and answer.

27
00:02:03.190 --> 00:02:07.930
So a question will be a general question and it's answered.

28
00:02:08.350 --> 00:02:10.900
So the question will be the security question.

29
00:02:11.230 --> 00:02:15.640
Now, let me show you the description of our customer table.

30
00:02:21.810 --> 00:02:23.970
So this will be the description of customer.

31
00:02:24.240 --> 00:02:32.070
It will have a user name, ID, type number, name, gender, country, address, phone and email.

32
00:02:32.100 --> 00:02:34.860
This will be the details in our customer table.

33
00:02:35.860 --> 00:02:39.370
Now, let me describe the entire cab.

34
00:02:40.690 --> 00:02:41.260
Table.

35
00:02:42.390 --> 00:02:46.560
So Cap Table will have the username for which the cab has been booked.

36
00:02:46.590 --> 00:02:52.800
The driver name, source and destination the car type car and its type its price.

37
00:02:52.800 --> 00:02:54.960
And for this reference number.

38
00:02:55.590 --> 00:02:58.200
If I similarly describe the.

39
00:03:01.580 --> 00:03:05.120
Inter City table.

40
00:03:05.810 --> 00:03:12.770
So inside this interesting table we will have source, destination type and driver name its price and

41
00:03:12.770 --> 00:03:13.220
car.

42
00:03:13.400 --> 00:03:15.380
So this will be inside the intercity.

43
00:03:15.410 --> 00:03:19.670
Similarly, I can define here and describe the intra.

44
00:03:20.870 --> 00:03:21.890
Cab table.

45
00:03:22.970 --> 00:03:26.600
So it will also have username, drive, source, destination, card, price and reference.

46
00:03:26.780 --> 00:03:29.690
Similarly, if I define the intra.

47
00:03:30.600 --> 00:03:31.380
City.

48
00:03:32.540 --> 00:03:36.740
So we will have source, destination, drive price and car detail inside the stable.

49
00:03:36.890 --> 00:03:43.160
Similarly for the transportation purpose will be using in transport.

50
00:03:46.600 --> 00:03:49.360
So it will also contain the name.

51
00:03:50.250 --> 00:03:58.410
Driver name, source, destination, truck weight of the thing you want it to transport distance and

52
00:03:58.410 --> 00:03:59.100
displace.

53
00:03:59.400 --> 00:03:59.760
Sorry.

54
00:03:59.760 --> 00:04:00.330
Price.

55
00:04:00.690 --> 00:04:07.050
After that, the transport table will contain the details about the driver and price.

56
00:04:07.810 --> 00:04:11.620
So it will have sauce, destination, driver, name, price, truck and distance.

57
00:04:13.170 --> 00:04:20.040
So this is the detail about each and every field or tables which we have in our database.

58
00:04:20.220 --> 00:04:25.290
Let me show you what type of detail which we have already inside our.

59
00:04:26.470 --> 00:04:27.520
These tables.

60
00:04:27.520 --> 00:04:31.510
So select asterisk from table.

61
00:04:31.510 --> 00:04:33.100
First is account.

62
00:04:34.370 --> 00:04:38.870
So inside account we have already one entry that is username.

63
00:04:38.870 --> 00:04:41.180
Name one password and your lucky number is one.

64
00:04:41.480 --> 00:04:47.600
Similarly, I can chose here for select account intercity.

65
00:04:51.250 --> 00:04:56.890
So inside intensity, we have source one to destination one and we have three types of car micro mini

66
00:04:56.890 --> 00:04:57.460
SUV.

67
00:04:57.460 --> 00:05:02.320
And for every car we have different drivers name driver one, driver to driver three, we have different

68
00:05:02.320 --> 00:05:03.280
price for them.

69
00:05:03.280 --> 00:05:06.820
And the car type we have written car one, car two and car three.

70
00:05:07.000 --> 00:05:10.540
Similarly, I can show you the data inside the intra.

71
00:05:12.520 --> 00:05:13.630
Set the table.

72
00:05:14.200 --> 00:05:22.450
It will have only one data record as RC one from Destination one and driver name its price and its car.

73
00:05:22.990 --> 00:05:25.330
Similarly, we have data inside our in.

74
00:05:27.580 --> 00:05:28.870
Transport table.

75
00:05:30.040 --> 00:05:37.570
Transportable from source one to destination one driver name, its price truck name and its distance.

76
00:05:37.960 --> 00:05:42.700
And so these are the details and the description of the tables which we have in our database.

77
00:05:44.590 --> 00:05:46.900
Now what we can do.

78
00:05:47.140 --> 00:05:53.560
Let's move to our NetBeans IDE and I will look at the libraries which we will be using.

79
00:05:53.560 --> 00:05:54.880
So let me image this.

80
00:05:55.450 --> 00:06:02.560
So here is our IED and inside which we have first our project name as cab booking system.

81
00:06:02.560 --> 00:06:08.140
Then there is the source package inside which we have a cab booking system inside which defined we have

82
00:06:08.140 --> 00:06:09.370
defined our classes.

83
00:06:09.370 --> 00:06:13.270
We will be discussing about all of these classes in our next step coming with use.

84
00:06:13.420 --> 00:06:22.180
And then inside the icon section we will have all the icons which B which we will be using to make our

85
00:06:22.180 --> 00:06:23.890
application more attractive.

86
00:06:25.390 --> 00:06:31.150
Now inside the library section, we are having my escort driver, which will help us to connect with

87
00:06:31.150 --> 00:06:38.890
our database and load the required drivers, which will be helping us to retrieve and interact with

88
00:06:38.890 --> 00:06:39.730
the database.

89
00:06:40.360 --> 00:06:45.050
So that purpose we have in this library here, my SQL driver.

90
00:06:45.070 --> 00:06:47.920
After that, there is a RS two XML file.

91
00:06:47.950 --> 00:06:53.260
This file is used here to further better representation of tables.

92
00:06:54.550 --> 00:07:02.110
Uh, during our operations of this project and we are using JDK 17, which is a Java development kit,

93
00:07:02.320 --> 00:07:04.470
and it is compatible with my NetBeans IDE.

94
00:07:04.480 --> 00:07:07.010
So that's why I am using 17th person.

95
00:07:08.110 --> 00:07:15.280
Now let's have a look at this Java class, which will help us to connect with the database which we

96
00:07:15.280 --> 00:07:17.140
have just created or I have already created.

97
00:07:17.140 --> 00:07:18.210
You have to create that.

98
00:07:18.220 --> 00:07:22.930
I have shown you all the description and the properties of that database and the number of tables and

99
00:07:22.930 --> 00:07:24.040
name of tables as well.

100
00:07:25.590 --> 00:07:29.940
So this conduit Java file is defined inside the package cab booking system.

101
00:07:30.120 --> 00:07:35.490
We have imported the Java exploit aspect package which will help us to provide the required method and

102
00:07:35.490 --> 00:07:42.600
classes to connect with our database and perform the operations on the database and can retrieve and

103
00:07:42.600 --> 00:07:44.880
fetch and update the information in our database.

104
00:07:45.060 --> 00:07:50.670
After that, we have defined the public class con inside which we have defined a connection type of

105
00:07:50.670 --> 00:07:56.370
statement connection type of instance C which will help us to create connection with our database and

106
00:07:56.400 --> 00:07:57.910
a statement type of instance.

107
00:07:57.910 --> 00:08:05.400
S which will help us to create any statement or execute any statement on our database tables.

108
00:08:05.430 --> 00:08:09.540
Now we have defined the non parameter constructor for this class that is public on.

109
00:08:11.130 --> 00:08:12.240
Inside the tribe log.

110
00:08:12.240 --> 00:08:16.530
What we are doing is we are executing a statement for name and passing argument.

111
00:08:16.740 --> 00:08:22.980
Now this line will only get executed if you have this library in your library section.

112
00:08:22.980 --> 00:08:26.570
So make sure that that library must be present in your library section.

113
00:08:26.580 --> 00:08:29.220
Otherwise this class.

114
00:08:30.080 --> 00:08:35.150
Not for name is statement will not run through your error that the drivers can't be loaded.

115
00:08:35.150 --> 00:08:41.930
So this method is taking argument from my driver and this will be executed and load all the required

116
00:08:41.930 --> 00:08:45.500
drivers which will help us to connect with the database.

117
00:08:47.270 --> 00:08:53.390
Now we have initialized the instance of C with the help of driver manager get connection.

118
00:08:53.390 --> 00:08:58.130
So Driver Manager is a class provided inside the package JavaScript aspects.

119
00:08:58.130 --> 00:09:02.150
So that's why we have imported JavaScript as strict package.

120
00:09:02.150 --> 00:09:06.830
So we are using its method get connection, which is taking three arguments.

121
00:09:06.830 --> 00:09:09.560
The first argument is the location of our database.

122
00:09:09.560 --> 00:09:15.230
So as I have just shown you that our database name was CVS one.

123
00:09:15.230 --> 00:09:22.070
So I have passed the location for that database that is GBK my SQL CVS one.

124
00:09:22.070 --> 00:09:24.590
So this will access that database.

125
00:09:24.740 --> 00:09:30.620
And after that there is the argument username of our my SQL Command Line client.

126
00:09:30.620 --> 00:09:32.420
So my username was root.

127
00:09:32.420 --> 00:09:38.060
The default username for all the MySQL command line applications is root and the password is also the

128
00:09:38.060 --> 00:09:40.760
same as wrote in a small case letter.

129
00:09:40.760 --> 00:09:45.410
But as I have changed my my SQL password, so I have written here my SQL one, two, three.

130
00:09:45.410 --> 00:09:50.690
If you do not change or didn't change your password, then your password must be our old in a small

131
00:09:50.690 --> 00:09:51.440
case letters.

132
00:09:52.570 --> 00:09:59.360
So you have to write your username and password in these two arguments after that as equals to see Dot

133
00:09:59.380 --> 00:10:00.490
create a statement.

134
00:10:00.490 --> 00:10:09.340
So this we are initializing the statement instance as with the help of connection instance C and using

135
00:10:09.340 --> 00:10:10.990
the method create a statement.

136
00:10:10.990 --> 00:10:18.790
So this will initialize our statement instance and help us to create or execute any statement further

137
00:10:18.790 --> 00:10:22.440
in our remaining classes of this project.

138
00:10:22.450 --> 00:10:26.320
Now, inside the cache block we are handling any type of exception.

139
00:10:26.320 --> 00:10:29.890
If occurs, then we will throw out that exception with the catch block.

140
00:10:29.890 --> 00:10:35.470
So that's the everything we have learned about in this video about this project.

141
00:10:35.470 --> 00:10:41.770
So we have created the database and then we talked about the libraries used in this project.

142
00:10:41.770 --> 00:10:45.760
And at last we have talked about the Condor Java file.

143
00:10:46.900 --> 00:10:50.410
Which will help us to create the connection with our database.

144
00:10:50.410 --> 00:10:52.020
So that's all from this video.
