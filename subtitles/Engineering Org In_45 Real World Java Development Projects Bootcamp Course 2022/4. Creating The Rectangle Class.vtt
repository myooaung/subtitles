WEBVTT
1
00:00:00.960 --> 00:00:01.800
Hello, everyone.

2
00:00:01.800 --> 00:00:09.390
So we have successfully created two of the classes, the Rectangle, the Java class and the circle class.

3
00:00:09.390 --> 00:00:14.200
And inside these two class the programming part was quite similar.

4
00:00:14.670 --> 00:00:21.900
The arguments, the methods, the if statement, all of them are going to be like in the same manner.

5
00:00:21.900 --> 00:00:28.470
Just the difference was in the name of the classes are now the next class we are going to create is

6
00:00:28.470 --> 00:00:32.460
the line class like a class for the line.

7
00:00:33.150 --> 00:00:40.350
And as we have already discussed that this line class is going to be a bit different from the rectangle

8
00:00:40.350 --> 00:00:41.400
and the circle.

9
00:00:41.550 --> 00:00:51.390
So yes, creating the line class and inside this line class, we are simply going to like initialize

10
00:00:51.390 --> 00:00:54.870
view of global variables.

11
00:00:54.870 --> 00:00:57.810
So in integer size.

12
00:00:58.740 --> 00:01:02.280
It floored them and.

13
00:01:03.420 --> 00:01:04.620
Oh, like.

14
00:01:04.760 --> 00:01:05.080
Okay.

15
00:01:05.100 --> 00:01:08.280
So firstly let us discuss what this means.

16
00:01:08.280 --> 00:01:17.220
So if you are a bit aware about mathematics, so you must be knowing about slopes or if we are going

17
00:01:17.220 --> 00:01:22.080
to draw a line, then definitely it should contain a slope.

18
00:01:22.770 --> 00:01:32.670
It is a mathematical term you can like discover about it when you go across concepts of straight line.

19
00:01:32.670 --> 00:01:34.980
So a straight line is a.

20
00:01:36.490 --> 00:01:46.180
If the straight line is a simple line which has a specific angle from the X axis and the Y axis and

21
00:01:46.330 --> 00:01:48.000
what actually the slope is.

22
00:01:48.010 --> 00:01:53.260
So the slow pace, the angle made by this line.

23
00:01:54.610 --> 00:01:56.290
From the accesses.

24
00:01:56.290 --> 00:02:04.570
So slope is basically our tan y by x so distance from the y axis and distance from the x axis.

25
00:02:04.570 --> 00:02:13.630
So this is a trigonometric term, but I hope that you all have a little bit idea about this concept

26
00:02:13.630 --> 00:02:14.440
of straight line.

27
00:02:14.590 --> 00:02:22.360
So this is going to be the slope for the straight line and it is going to be a float as it could be

28
00:02:22.360 --> 00:02:24.130
a decimal number also.

29
00:02:24.130 --> 00:02:25.070
So okay.

30
00:02:25.090 --> 00:02:27.760
And this slide is for the side of the line.

31
00:02:27.760 --> 00:02:34.330
Now the next part, we are going to create a constructor line.

32
00:02:34.330 --> 00:02:40.270
Inside this constructor, we are going to call for arguments.

33
00:02:41.500 --> 00:02:49.900
So X and Y are common as rectangle and circle and in text to an individual.

34
00:02:50.440 --> 00:02:55.180
So we will be coming to this that what this in 2x2 is.

35
00:02:56.500 --> 00:03:02.320
And culture and science are going to be same as the rectangle and the circle.

36
00:03:02.320 --> 00:03:09.010
So colors an inch size, or if it is a line, then there should be a size.

37
00:03:10.360 --> 00:03:11.680
Okay, so yes.

38
00:03:12.370 --> 00:03:13.090
And color.

39
00:03:13.100 --> 00:03:16.600
See inside now what is the x two and by two is.

40
00:03:16.720 --> 00:03:25.090
So if we are concerned about a straight line, then it has two points, a starting point and an ending

41
00:03:25.090 --> 00:03:25.540
point.

42
00:03:25.540 --> 00:03:32.840
So the coordinates of the starting point are this X and Y and the ending point is X to y two.

43
00:03:32.860 --> 00:03:42.610
So how the slope is going to be calculated as so this slope is basically y two minus y divided by x,

44
00:03:42.610 --> 00:03:43.660
two minus x.

45
00:03:43.660 --> 00:03:46.210
So this is a mathematical term.

46
00:03:46.720 --> 00:03:53.680
We will be using this inside our execution for the slope calculation.

47
00:03:53.890 --> 00:04:03.310
Now the super method x, y, x, two, y, two and c is going to be the arguments.

48
00:04:04.300 --> 00:04:05.420
So yes.

49
00:04:05.440 --> 00:04:06.430
Here it is.

50
00:04:07.130 --> 00:04:09.140
We are done with the super method.

51
00:04:09.800 --> 00:04:21.890
Now the next part is to access the size as it is or declared inside the class or the public class.

52
00:04:21.920 --> 00:04:25.280
Now we have to access that site inside this constructor.

53
00:04:25.280 --> 00:04:30.110
So to do so, we have to use this this keyword.

54
00:04:30.240 --> 00:04:30.470
Okay.

55
00:04:30.500 --> 00:04:34.490
So this this keyword we are going to use to access the sites.

56
00:04:34.520 --> 00:04:44.090
Now, after this keyword, we are going to check that the starting point of the line and ending point

57
00:04:44.090 --> 00:04:50.480
of the line is not same as there should be two different coordinates for the line.

58
00:04:51.440 --> 00:04:59.900
So inside the if statement we are going to write x two is not equal to x.

59
00:05:01.400 --> 00:05:06.290
In order to like forming a line, the coordinate should be different.

60
00:05:07.550 --> 00:05:19.610
On this dirt floor should be, as we have already calculated it verbally, now doing it programmatically.

61
00:05:19.940 --> 00:05:21.980
Why do miners why?

62
00:05:23.200 --> 00:05:25.720
And this is how it is written.

63
00:05:25.750 --> 00:05:30.280
So next to minus X, of course.

64
00:05:31.270 --> 00:05:35.450
So X two minus x is going to be the slope.

65
00:05:35.470 --> 00:05:36.250
Now.

66
00:05:37.350 --> 00:05:41.460
The floor should be also covered inside the bracket.

67
00:05:43.300 --> 00:05:43.780
Okay.

68
00:05:43.780 --> 00:05:49.240
So float by two minus y, one by X to minus x.

69
00:05:50.140 --> 00:05:52.280
X, one or X, whatever we call it.

70
00:05:52.300 --> 00:05:55.420
So, yes, this is for the slop thing.

71
00:05:55.540 --> 00:06:00.460
Now, what if this f if statement is not executed?

72
00:06:00.460 --> 00:06:04.760
Like if they became same, then the line is up.

73
00:06:05.550 --> 00:06:06.560
A line like.

74
00:06:06.630 --> 00:06:10.140
Which is parallel to the x axis.

75
00:06:10.260 --> 00:06:11.490
So as.

76
00:06:12.450 --> 00:06:19.310
If the same x coordinate is going for the line, the suppose this is going to be a vertical line.

77
00:06:19.320 --> 00:06:22.560
The X coordinate is going to be the same throughout.

78
00:06:22.800 --> 00:06:24.660
Just look at the movement of the mouse.

79
00:06:24.670 --> 00:06:29.790
So yes, this is going to be a vertical line with same x coordinates.

80
00:06:30.000 --> 00:06:34.110
So the slope is going to be one for this case.

81
00:06:34.630 --> 00:06:39.300
So simply calling this dot one.

82
00:06:40.680 --> 00:06:44.280
So when the line is vertical, then the slope becomes one.

83
00:06:45.670 --> 00:06:49.240
Then yes, this is going to be executed.

84
00:06:49.960 --> 00:06:58.960
So now after initializing the line and its slope, now we are going to create a moving function in order

85
00:06:58.960 --> 00:07:01.740
to make the line functional.

86
00:07:01.930 --> 00:07:08.710
So we are going to do this inside of override function as we are already containing a line.

87
00:07:09.520 --> 00:07:11.500
This is basically a function.

88
00:07:11.500 --> 00:07:18.430
So to override that, we are creating a public void, move, function.

89
00:07:18.880 --> 00:07:29.500
And inside this function the arguments are going to be integer X and integer Y and inside this function

90
00:07:29.770 --> 00:07:32.030
what is going to be consistent?

91
00:07:32.050 --> 00:07:41.980
So we have to move the line in a way like a distance from x axis and distance from y axis is going to

92
00:07:41.980 --> 00:07:48.830
be changed and the width and the height of the line is going to be like.

93
00:07:48.910 --> 00:07:51.520
Okay, so visualizing in ten.

94
00:07:51.790 --> 00:07:53.800
So suppose this is a line.

95
00:07:54.160 --> 00:08:01.750
So if we are talking about X and Y, then it is the starting point of the line as from where it is being

96
00:08:01.750 --> 00:08:07.360
started and the x2y2 is going to be the width and the height of the line.

97
00:08:07.360 --> 00:08:14.620
So basically the width and height of the line is going to be the thickness of the line and we are drawing

98
00:08:14.620 --> 00:08:16.510
and the height of the line.

99
00:08:16.750 --> 00:08:22.300
So here suppose this is the height of the line and that is a very thin line.

100
00:08:22.300 --> 00:08:24.460
So the thickness is the width.

101
00:08:25.180 --> 00:08:33.940
So in order to move that line, we have to use this keyword for the victim and what the weight is going

102
00:08:33.940 --> 00:08:39.190
to be, it is going to be like x minus this dot x.

103
00:08:40.350 --> 00:08:41.040
An.

104
00:08:43.490 --> 00:08:49.130
This is going to be added in the initial report, which was.

105
00:08:51.120 --> 00:08:55.560
Yes declared above her now in the similar way for Edge.

106
00:08:56.250 --> 00:08:59.940
So there is a thickness of the line and that is height of line.

107
00:09:00.270 --> 00:09:09.180
So we have to write it two times, just replacing the W head with H and X there with Y.

108
00:09:10.150 --> 00:09:13.600
So X is going to be why everywhere in this land.

109
00:09:14.530 --> 00:09:17.560
Okay, so this is how it is done.

110
00:09:17.650 --> 00:09:19.570
Now this door text.

111
00:09:21.420 --> 00:09:27.950
Is going to store X and this dot y is going to store Y.

112
00:09:29.630 --> 00:09:31.490
Yes, it is as simple as that.

113
00:09:31.520 --> 00:09:35.330
Now we have created the move function.

114
00:09:35.660 --> 00:09:43.850
Now, after this function, we are going to create a contains function, which is going to contain that

115
00:09:43.850 --> 00:09:52.190
if the height and width of the line is somehow different from what what we have said in the control

116
00:09:52.190 --> 00:10:01.130
panel, then a final statement should be written in this way that if this is greater than this dot x,

117
00:10:01.130 --> 00:10:09.050
so this is the starting point, this X and this W is going to be the length to which this line is going

118
00:10:09.050 --> 00:10:10.060
to be stretched.

119
00:10:10.070 --> 00:10:18.740
So, yes, we are going to check this that if the initial point is greater than that, then we have

120
00:10:18.740 --> 00:10:21.140
to return the control to X and Y.

121
00:10:21.950 --> 00:10:24.910
This is basically for stopping this.

122
00:10:24.920 --> 00:10:31.730
So suppose that we want to like draw a line of height ten centimetres.

123
00:10:31.880 --> 00:10:40.490
Then once the mouse is started from this point and once we reach the ten centimetre range, then that

124
00:10:40.490 --> 00:10:47.330
control should be then return to that point, which means that this line should be completed.

125
00:10:47.360 --> 00:10:51.920
Now we cannot increase and decrease the size of this line again and again.

126
00:10:51.920 --> 00:11:00.330
And we have done this for all four of them, like for the x y axis and for the height and width.

127
00:11:00.920 --> 00:11:04.910
And as if this is not true, then it should return false.

128
00:11:04.910 --> 00:11:12.710
And the user will fail to draw a line, which was the purpose of this function.

129
00:11:12.740 --> 00:11:20.330
Now, after this, inside this line function, we are going to like create a control function.

130
00:11:20.990 --> 00:11:21.710
Like what?

131
00:11:21.950 --> 00:11:28.880
What actually control by giving the control back to that X and Y coordinate means.

132
00:11:29.030 --> 00:11:33.800
So this is going to be a Boolean data type function control.

133
00:11:34.040 --> 00:11:40.310
And inside this control function we are passing arguments, float X and float y.

134
00:11:42.150 --> 00:11:42.480
Okay.

135
00:11:42.570 --> 00:11:46.170
So it's inside this float and X and float Y.

136
00:11:46.200 --> 00:11:48.030
We are going to check.

137
00:11:48.900 --> 00:11:56.730
So basically that control function is going to check that the what should be the minimum dimension of

138
00:11:56.730 --> 00:11:57.630
this line.

139
00:11:58.140 --> 00:12:03.600
There should be a thickness and the distance from X and y axis.

140
00:12:03.600 --> 00:12:11.940
So this control is basically controlling the dimension of the line that yes, this I integer I inside

141
00:12:11.940 --> 00:12:18.540
this for loop is are executing and again and again from -20 to plus 20.

142
00:12:18.540 --> 00:12:29.610
And if this Y which is going to be the Y coordinate of the line subtracted by Y plus c, so this difference

143
00:12:29.610 --> 00:12:35.070
should be equal to the x like what is this?

144
00:12:35.330 --> 00:12:37.110
The same is y by x.

145
00:12:37.110 --> 00:12:46.650
So basically the slope checking is done with the help of this control function that the x and y axis

146
00:12:46.860 --> 00:12:54.720
should make alignment with this line in that manner that the slope remains same throughout the axis.

147
00:12:54.810 --> 00:13:02.370
So this is basically a mathematical checking of this line that the slope should remain the same throughout

148
00:13:02.370 --> 00:13:03.270
the axis.

149
00:13:03.660 --> 00:13:05.220
The line should be straight.

150
00:13:05.520 --> 00:13:11.670
Actually, what is it actually like signified by this control statement?

151
00:13:11.670 --> 00:13:18.930
And if this is not so, then it is going to return false and no line will be drawn in result.

152
00:13:19.740 --> 00:13:28.410
Now we have a size variable declared here as a global variable, so we are going to access this size

153
00:13:28.860 --> 00:13:32.640
across other function which we will be creating or we have created.

154
00:13:32.640 --> 00:13:41.400
So in order to do so or to update this size inside any other function or to access this size like inside

155
00:13:41.400 --> 00:13:48.450
any other function, we have to use, get and set method or for this size variable.

156
00:13:48.480 --> 00:13:56.220
So in order to do so, we have to create a public get size function, which is going to like access

157
00:13:56.220 --> 00:14:01.350
the size of the line and this will simply return the size of the line.

158
00:14:01.980 --> 00:14:06.280
So yes, this is how the get size function is made.

159
00:14:06.300 --> 00:14:15.240
Now, similarly for the set of function, said function is going to update the size whenever it is needed

160
00:14:15.240 --> 00:14:19.980
and it is going to be a via void function as it is not going to return anything.

161
00:14:20.190 --> 00:14:26.700
And inside this we are passing the new size, which is of course the updated size of the line.

162
00:14:27.030 --> 00:14:33.630
And this is going to simply update this dot size to the new size.

163
00:14:34.230 --> 00:14:37.560
So the size variable is stored somewhere.

164
00:14:37.560 --> 00:14:41.760
So to access it again, again, again, we are using this keyword.

165
00:14:41.790 --> 00:14:50.520
Also, this dot size will store the new size of line inside this such size function and whenever like

166
00:14:50.670 --> 00:14:56.790
changing the size or access in the size is needed inside any function or class, then we will be using

167
00:14:56.790 --> 00:14:59.760
simply this get size and this size.

168
00:15:00.630 --> 00:15:07.650
So the suggestions will also suggest does the right thing get it will suggest that we have created get

169
00:15:07.650 --> 00:15:10.200
size and also for the set.

170
00:15:10.230 --> 00:15:17.010
If we right set then it will suggest that we have already created a set size get size function or you

171
00:15:17.010 --> 00:15:21.810
can simply call it here and update our access the size of the length.

172
00:15:21.840 --> 00:15:24.420
Now we are done with this line.

173
00:15:24.420 --> 00:15:30.690
Plus in the next part we will be creating like we have already created our main function.

174
00:15:30.690 --> 00:15:37.410
So we will be writing the code inside our main function and look how actually that things are going

175
00:15:37.410 --> 00:15:43.380
to be put up inside this frame, how the control panel is going to be fitted inside the frame.

176
00:15:43.380 --> 00:15:50.130
And after that we will be creating this empty space or we can call it as drawing area or Java class.

177
00:15:50.130 --> 00:15:55.800
So after that, that is going to be the final class which we will be creating.

178
00:15:55.800 --> 00:16:00.990
So yes, our two more classes are left to be created and we will see that in the next part.
