WEBVTT
1
00:00:00.570 --> 00:00:07.100
Now so that we have created all the menu items, classes except for water.

2
00:00:07.110 --> 00:00:15.210
So in this part we are going to create a separate class for the water item in the menu and the name

3
00:00:15.210 --> 00:00:17.730
is going to be water dot java.

4
00:00:17.820 --> 00:00:23.940
So on hitting enter, we will land up to this file containing a public class water.

5
00:00:24.060 --> 00:00:32.430
Similarly, as previous classes we are going to declare a boolean class called AIS.

6
00:00:32.610 --> 00:00:36.930
So private boolean.

7
00:00:37.770 --> 00:00:38.130
I.

8
00:00:40.390 --> 00:00:44.110
And after this, we are going to add.

9
00:00:45.340 --> 00:00:47.650
So I could be better.

10
00:00:47.800 --> 00:00:49.510
It sounds like a war.

11
00:00:50.350 --> 00:00:55.520
After this, we are going to create a constructor called Water.

12
00:00:56.440 --> 00:00:57.940
Public class.

13
00:00:58.790 --> 00:01:09.120
The water and this water object is going to contain our argument that string size as the previous classes

14
00:01:09.120 --> 00:01:11.550
that is no more difference.

15
00:01:11.940 --> 00:01:13.500
And the label has been.

16
00:01:14.520 --> 00:01:15.220
Okay.

17
00:01:15.240 --> 00:01:18.330
So this object is created.

18
00:01:18.330 --> 00:01:26.340
And inside this object in the similar way, we will be adding a super method containing the size and

19
00:01:26.340 --> 00:01:30.510
the amount to be displayed in the label.

20
00:01:30.870 --> 00:01:42.480
After this, we will be yes, attaching if statement and this if statement is containing us option pane,

21
00:01:42.720 --> 00:01:48.780
a dialog box will appear and the label will be the.

22
00:01:49.910 --> 00:01:56.360
Like main argument and the message is going to be you.

23
00:01:57.190 --> 00:01:58.510
Likewise.

24
00:01:59.200 --> 00:02:04.090
So this will ask this question to the customer.

25
00:02:04.270 --> 00:02:06.040
Would you like guys?

26
00:02:06.040 --> 00:02:21.690
And a question mark after this is also here in capital and this is going to ask yes.

27
00:02:21.700 --> 00:02:22.120
No.

28
00:02:22.150 --> 00:02:29.050
So, again, option pain asking for 40 years, no option.

29
00:02:29.230 --> 00:02:31.000
So, yes, no option.

30
00:02:31.450 --> 00:02:37.780
And it is going to return null in the beginning setting.

31
00:02:38.020 --> 00:02:42.100
So this if statement is going to set i's to true.

32
00:02:42.640 --> 00:02:53.530
So suppose if this if statement is like true, then the L statement should set the i's to false.

33
00:02:53.620 --> 00:02:58.180
So, as I said, is going to be false.

34
00:02:59.150 --> 00:02:59.780
Okay.

35
00:02:59.950 --> 00:03:03.500
So we are done with adding the spot.

36
00:03:03.520 --> 00:03:07.460
Now our next concern should be adding the price thing.

37
00:03:07.780 --> 00:03:13.840
So double price and if size is small.

38
00:03:14.290 --> 00:03:21.940
So in the price part, we have set a price like if the size equals small, then the price for water

39
00:03:21.940 --> 00:03:23.950
is going to be 1.0.

40
00:03:23.980 --> 00:03:29.400
If the size equals medium, then price is going to be 2.0.

41
00:03:29.410 --> 00:03:36.430
And as if we haven't too small and medium, then definitely the size is going to be too large and the

42
00:03:36.430 --> 00:03:39.190
price for the large water is 3.0.

43
00:03:39.220 --> 00:03:42.630
Now what if ice is added to water?

44
00:03:42.640 --> 00:03:49.390
So the cost associated with ice is the cost of the like.

45
00:03:49.870 --> 00:03:58.150
Respective sizes will be multiplied with 1.25 and the output will be updated with the help of this set

46
00:03:58.150 --> 00:03:59.350
price method.

47
00:03:59.680 --> 00:04:05.500
So suppose if the price is added, then the price is going to be 1.5 for a small class of water.

48
00:04:05.530 --> 00:04:11.370
And suppose if like ice is not added, then the price is going to remain same as one.

49
00:04:11.380 --> 00:04:14.710
So we have completed this water class.

50
00:04:14.740 --> 00:04:17.680
Now one more thing to be added inside.

51
00:04:17.680 --> 00:04:22.780
This is going to be the override method which we have added for the previous thing.

52
00:04:22.780 --> 00:04:33.520
So I am going to copy it from the T class and we'll paste it here in order to save some time.

53
00:04:34.270 --> 00:04:36.790
So what we try is.

54
00:04:37.890 --> 00:04:41.070
Is going to be displayed.

55
00:04:43.360 --> 00:04:47.800
And similarly here, water simply is going to be displayed.

56
00:04:48.850 --> 00:04:53.230
If iced, not sugar in water class.

57
00:04:53.830 --> 00:04:56.440
And we are done with this also.

58
00:04:58.010 --> 00:05:05.690
So all the classes are successfully made attached with every menu item in the radio buttons, water,

59
00:05:06.080 --> 00:05:07.730
juice and coffee.

60
00:05:07.760 --> 00:05:08.870
All are done.

61
00:05:08.900 --> 00:05:16.190
A beverage class is used to set the size, amount and price of all the items respectively.

62
00:05:16.340 --> 00:05:25.730
Now heading back to our Java class, which is the main class, and we will be adding events inside this

63
00:05:25.730 --> 00:05:27.980
in order to make things functional.

64
00:05:29.120 --> 00:05:39.080
So now attaching actions to all the buttons like make all the things functional inside the ordering

65
00:05:39.080 --> 00:05:47.250
form, we are adding a string sizeof which is going to like set the size of the selected item.

66
00:05:47.270 --> 00:05:55.360
We have three options in the size j combo box, small, medium and large and e get source equals.

67
00:05:55.360 --> 00:06:06.050
So if we click button add and if we have selected juice or tea or coffee or water, so things are going

68
00:06:06.080 --> 00:06:09.680
to be added inside the card.

69
00:06:10.010 --> 00:06:20.390
And if this statement is getting executed and if there is a like any kind of exception, then this tri

70
00:06:20.390 --> 00:06:29.240
block is going to be get executed during the execution of this if statement, if a button ad is clicked

71
00:06:29.240 --> 00:06:35.540
and any of these item is not selected, then we have to try like this.

72
00:06:35.780 --> 00:06:37.550
Calling the beverage class.

73
00:06:37.550 --> 00:06:43.370
If juice is selected, then accessing the amount of size of juice.

74
00:06:43.400 --> 00:06:50.090
Similarly, for if water is selected, then we have to access the size and amount of that.

75
00:06:50.120 --> 00:06:59.390
Similarly, for the tea and the coffee thing, now the state glass is going to set X to null and adding

76
00:06:59.390 --> 00:07:06.650
beverage to the card label report is going to add a display that this thing is added.

77
00:07:07.280 --> 00:07:14.000
We have already covered it in the above section I can show.

78
00:07:14.690 --> 00:07:20.360
So yes, we have covered it here only inside this label report.

79
00:07:20.360 --> 00:07:26.660
And this label report is going to display that this specific beverage is added to the pack.

80
00:07:26.870 --> 00:07:32.440
Similarly for the button group we have set enabled to do so.

81
00:07:32.450 --> 00:07:36.710
Initially the order button was disabled.

82
00:07:37.310 --> 00:07:44.600
Here you can see that this thing was responsible for disabling the order button in the beginning and

83
00:07:44.600 --> 00:07:52.280
once any of the action is performed, any of the thing is added to the cart, then the button order

84
00:07:52.280 --> 00:07:57.350
will be enabled and the set number will be set to true.

85
00:07:57.560 --> 00:08:04.640
Now after this, if there is a trigger block, then there should be a catch block in order to catch

86
00:08:04.640 --> 00:08:05.480
the exception.

87
00:08:06.140 --> 00:08:12.170
Now think about that, what the exceptions could be by placing any order.

88
00:08:12.350 --> 00:08:20.080
So the exceptions could be that the amount we have entered is not an integer.

89
00:08:20.090 --> 00:08:28.880
Then this catch block will be responsible for catching that error and showing the exception that to

90
00:08:29.240 --> 00:08:30.880
enter an integer as a mode.

91
00:08:30.920 --> 00:08:39.680
Suppose that in the like this place type how many glasses you want you have entered on any non integer

92
00:08:39.680 --> 00:08:40.130
thing.

93
00:08:40.130 --> 00:08:46.300
So an exception will appear and the text will be displayed that enter an integer as a note.

94
00:08:46.490 --> 00:08:54.440
Similarly, what could be the other exception that would arise that could be choose a beverage type

95
00:08:54.440 --> 00:08:55.700
and enter an amount.

96
00:08:55.700 --> 00:09:04.340
So suppose that you like a place or try to place order without setting the beverage type and size.

97
00:09:04.340 --> 00:09:10.160
So that will ask for a choose a beverage type and entertainment.

98
00:09:10.160 --> 00:09:19.340
So you have to choose a post T and I want five glasses, not try to click this add button before selecting

99
00:09:19.340 --> 00:09:20.120
these two.

100
00:09:20.780 --> 00:09:28.430
This is set to small by default, so you just have to choose from this and this.

101
00:09:28.460 --> 00:09:31.040
Until then we can click this add button.

102
00:09:31.040 --> 00:09:35.570
So this catch exception block is responsible for that only.

103
00:09:35.690 --> 00:09:39.620
So we have covered actions attached to all of them.

104
00:09:39.620 --> 00:09:47.810
Now let us try to check what is left now so that we have covered actions attached to this size, this

105
00:09:47.810 --> 00:09:51.500
radio button and this input text fail.

106
00:09:51.530 --> 00:09:57.130
Now, our next concern should be that what actions should be a list?

107
00:09:57.260 --> 00:10:00.170
Then when the ad and order button is clicked.

108
00:10:00.400 --> 00:10:01.310
So.

109
00:10:03.010 --> 00:10:09.370
On that button, click the try and catch exception blog was mentioned above.

110
00:10:09.400 --> 00:10:14.180
Now suppose if we click the order button, then what should be the output?

111
00:10:14.200 --> 00:10:15.250
So on.

112
00:10:15.250 --> 00:10:22.930
Seeing this, things can be made clear that if you get it, don't get source like the event that is

113
00:10:22.930 --> 00:10:25.600
performed is equal to the beaten order.

114
00:10:25.930 --> 00:10:30.370
This means that supposes we can order like the button or that is being clicked.

115
00:10:30.550 --> 00:10:40.870
Then our report should be like displayed or initially the report and is set to null and zero.

116
00:10:41.110 --> 00:10:50.020
But if things are getting ordered then this for loop is responsible for combining all the items added

117
00:10:50.020 --> 00:10:50.860
in the cart.

118
00:10:51.460 --> 00:10:53.950
Suppose that we have added beverages.

119
00:10:53.950 --> 00:10:55.100
One, two, three, four.

120
00:10:55.120 --> 00:11:03.730
Suppose we have ordered four things in a row so that the things are to be combined at the end and displayed

121
00:11:03.730 --> 00:11:05.070
as a whole sum.

122
00:11:05.080 --> 00:11:09.860
So this is used to like sum the total amount to be paid.

123
00:11:09.880 --> 00:11:17.920
And suppose this is initialized as we know, and the list is going to be extended till the total number

124
00:11:17.920 --> 00:11:19.270
of items to be order.

125
00:11:19.510 --> 00:11:25.300
And the report is going to be displayed the total number of items in the form of a string.

126
00:11:25.780 --> 00:11:27.180
We can see that here.

127
00:11:27.760 --> 00:11:30.400
Suppose we have ordered more than one things.

128
00:11:30.400 --> 00:11:37.110
Then the dialog box will show that 5 million glasses of water, 3 million glasses of three are ordered.

129
00:11:37.120 --> 00:11:40.270
So yes, that is going to be responsible for that.

130
00:11:40.300 --> 00:11:47.200
Also, the pay is going to be the total price of all the beverages we have ordered as a whole.

131
00:11:47.200 --> 00:11:51.850
So this pay is going to add the like total.

132
00:11:51.850 --> 00:11:58.870
So I am going to rent it out and the total amount to be paid.

133
00:11:59.920 --> 00:12:05.740
This statement is responsible for adding the total amount to be paid by the customer.

134
00:12:06.460 --> 00:12:10.190
This total price is initialized as a double data type.

135
00:12:10.240 --> 00:12:14.800
Similarly, we have declared the price, so the price is double.

136
00:12:14.800 --> 00:12:21.760
So the total price is also a double data type after which the report is going to display that total

137
00:12:21.760 --> 00:12:23.320
price of beverage is.

138
00:12:23.320 --> 00:12:25.330
So what is this report here?

139
00:12:25.570 --> 00:12:30.970
This is the report you should pay 12.5, so you should pay.

140
00:12:31.000 --> 00:12:40.720
Our dialog box will appear showing the report that this this is that report you should pay and the amount

141
00:12:40.720 --> 00:12:46.780
to be paid in dollars or any of the currency you would like to add to your application.

142
00:12:46.780 --> 00:12:47.890
It's upon you.

143
00:12:48.610 --> 00:12:58.660
So initially the label report set text is null and the order is disabled in the beginning after the

144
00:12:58.660 --> 00:12:59.400
completion.

145
00:12:59.410 --> 00:13:06.860
So after this report is generated, then everything is going to be set as before as it was in the beginning.

146
00:13:06.880 --> 00:13:13.630
So after this dialog box appearing, everything will be set to null as in the beginning.

147
00:13:13.990 --> 00:13:22.780
So I hope after the completion of this programming section, you all have gained a lot of conceptual

148
00:13:22.780 --> 00:13:26.740
idea about what is being applied inside this project.

149
00:13:26.890 --> 00:13:35.260
Everything we have used, we have extensively used the string NWT libraries in order to embed all like

150
00:13:35.280 --> 00:13:36.970
the items to our frame.

151
00:13:37.330 --> 00:13:44.260
So now let us try running the application and check that whether all the functionalities that we have,

152
00:13:44.260 --> 00:13:47.080
our task is working fine or not.

153
00:13:47.320 --> 00:13:51.100
So this is the application window open.

154
00:13:51.760 --> 00:14:01.240
So suppose we are trying to order something medium, a glass of tea for glasses of tea we are ordering

155
00:14:01.540 --> 00:14:02.980
adding to the cart.

156
00:14:03.010 --> 00:14:04.900
Would you like to add sugar.

157
00:14:04.900 --> 00:14:07.090
So it's clicking.

158
00:14:07.090 --> 00:14:07.390
Yes.

159
00:14:07.390 --> 00:14:14.650
So for medium glasses of tea with sugar added and the report is generated now after this.

160
00:14:14.650 --> 00:14:21.850
On clicking on the order button, our dialog box appears displaying 4 million glasses of tea with sugar

161
00:14:21.850 --> 00:14:30.010
is costing $20 and on hitting okay a dialog box again appears showing that what is the total amount

162
00:14:30.010 --> 00:14:37.870
to be paid by the customer so you should pay $20 and on heating on okay again we will be landing back

163
00:14:37.870 --> 00:14:42.370
to our like previous window which was initially opened.

164
00:14:42.490 --> 00:14:47.290
So again, let us try to order two things in a row.

165
00:14:47.290 --> 00:14:56.280
So adding four, add eyes, then again a glass of coffee, a large glass of coffee, adding it to cart.

166
00:14:56.290 --> 00:14:59.680
And yes, we want to attach milk to the coffee.

167
00:14:59.680 --> 00:15:01.180
One large glass of coffee.

168
00:15:01.290 --> 00:15:09.780
Vitamin K is added now on heating order for glasses for large glasses of water with ice costing $15

169
00:15:09.780 --> 00:15:19.380
and one large glass of coffee with milk, $9.75 is added to the carton, hitting a total of $24.75 is

170
00:15:19.380 --> 00:15:22.840
generated as the total bill for the customer on heating.

171
00:15:22.860 --> 00:15:26.160
Okay, back to our homepage.

172
00:15:26.160 --> 00:15:29.550
So till now, everything is working correctly.

173
00:15:29.550 --> 00:15:29.910
Fine.

174
00:15:29.910 --> 00:15:33.450
The application is running pretty well.

175
00:15:33.480 --> 00:15:41.430
I hope you all have went through the programming section like very concentrated early and gained every

176
00:15:41.430 --> 00:15:44.350
concept we have used inside this application.

177
00:15:44.370 --> 00:15:46.560
Now try running this.

178
00:15:46.680 --> 00:15:53.400
Try making codes on your own and try running the application on your own so that you will learn everything

179
00:15:53.400 --> 00:15:54.990
more accurately.

180
00:15:55.530 --> 00:16:03.270
So yes, we have completed this project and everything is working perfectly fine or at the end.

181
00:16:03.270 --> 00:16:08.550
I want to thank you all for joining this session, but thank you very much.
