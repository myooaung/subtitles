1
00:00:01,730 --> 00:00:08,220
So in this video we will talk about another two Java files, update product and delete product.

2
00:00:08,240 --> 00:00:14,720
The update product file will be used to update the details of the product, while delayed product class

3
00:00:14,720 --> 00:00:20,260
will be used to delete and record from our database about the product.

4
00:00:20,270 --> 00:00:23,000
So let's have a look at the first class, which is update product.

5
00:00:23,000 --> 00:00:29,150
This class is defined inside the package store and we have imported the necessary packages like import

6
00:00:29,150 --> 00:00:33,320
a dot font for setting the font type family and size.

7
00:00:33,320 --> 00:00:38,420
Then there is a swing j button to add any button in our frame.

8
00:00:38,420 --> 00:00:45,200
Then there is a J label for adding label, menu and menu item to add any menu bar or menu item or menu

9
00:00:45,200 --> 00:00:45,830
element.

10
00:00:45,830 --> 00:00:49,490
Then there is a g option pane which will help us to sway any dialog box.

11
00:00:49,490 --> 00:00:52,100
Then there is a J panel which will be added in our frame.

12
00:00:52,100 --> 00:00:57,190
Then there's a scroll panel which we can add in our text area or any table model.

13
00:00:57,200 --> 00:00:58,700
Then there is a text area.

14
00:00:59,880 --> 00:01:04,860
Which is a field where we can set this property like a table or false central.

15
00:01:04,890 --> 00:01:09,150
Then there's a text field to get the text from the user.

16
00:01:09,210 --> 00:01:12,860
Then there is a combo box to select from multiple values.

17
00:01:12,870 --> 00:01:17,490
And then there's the action listener, which will help us to perform our handle any action over the

18
00:01:17,490 --> 00:01:18,750
buttons or menu item.

19
00:01:18,780 --> 00:01:21,000
Then there's the key event and key listener.

20
00:01:21,540 --> 00:01:28,410
Then there's the array list, which will help us to store the similar type of element in a single variable

21
00:01:28,410 --> 00:01:29,250
as a list.

22
00:01:29,250 --> 00:01:30,930
And there's the action event.

23
00:01:32,260 --> 00:01:40,330
Which will help us to handle any event over the text area, text field buttons or.

24
00:01:41,560 --> 00:01:42,370
Menu items.

25
00:01:42,370 --> 00:01:50,440
After that, we have defined our update product class, which is extending panel and it is there inside

26
00:01:50,440 --> 00:01:52,000
which we have a text field.

27
00:01:52,670 --> 00:02:00,170
For instance, I'd field a text area, instance a text button, sorry, g button and a J combo box of

28
00:02:00,320 --> 00:02:08,870
named as company or text field or label and three IDs ID detail and company and one integer type of

29
00:02:08,870 --> 00:02:11,570
variable quantity to be stored a quantity of the product.

30
00:02:11,750 --> 00:02:15,710
Then there is a message into the product ID and quantity.

31
00:02:17,880 --> 00:02:25,680
After that we have defined the non parameter as constructor for that update product class set the frame

32
00:02:26,070 --> 00:02:27,720
or layout as null.

33
00:02:27,750 --> 00:02:35,250
After that, we have defined the bound for that frame 100, 100 and its size as eight 4619.

34
00:02:35,520 --> 00:02:37,470
Then we have defined the label.

35
00:02:39,710 --> 00:02:45,950
Update product renamed as update product set the bound for it was location will be three 2845 and size

36
00:02:45,950 --> 00:02:52,600
will be 182 across 21 setting the font for it font, family font type and font size.

37
00:02:52,610 --> 00:02:58,430
Then we adding that product to our label or frame, adding that label to our.

38
00:02:59,500 --> 00:03:00,760
Ban a lot of rain.

39
00:03:00,970 --> 00:03:07,080
Then there is another label as product setting font for it, font, family type and size.

40
00:03:07,090 --> 00:03:14,660
Then setting the bound for that label whose location will be 246 comma 136 and size will be 124 across

41
00:03:14,680 --> 00:03:17,560
21, adding that label to our frame or panel.

42
00:03:19,670 --> 00:03:26,990
Similarly, there is another label named as product details, setting the font for it, font type font

43
00:03:26,990 --> 00:03:33,440
family and font size, then adding the bound for it to its location will be to 46, comma, one, 68

44
00:03:33,440 --> 00:03:41,990
and size as 139 or cross 21 then adding that product or adding that label to our panel or frame.

45
00:03:42,260 --> 00:03:45,920
After that, we have defined the text field to enter the ID.

46
00:03:47,840 --> 00:03:49,640
Setting bond for the tax bill.

47
00:03:49,670 --> 00:03:58,010
The size will be 136, cross 20 and its location will be 449 comma 137 adding that field to our frame.

48
00:03:58,160 --> 00:04:00,500
And then we have defined the.

49
00:04:02,820 --> 00:04:10,800
Bacteria fail to store the details, setting the bound for it with location 449 168 and size will be

50
00:04:10,830 --> 00:04:15,360
136 across 58, adding that text field to over.

51
00:04:16,360 --> 00:04:18,550
Frame after that we have defined.

52
00:04:22,450 --> 00:04:28,420
The scroll panel or whatever text field or sorry over the text area setting the bound for that scroll

53
00:04:28,420 --> 00:04:35,800
panel 449 comma 168 and its size as 136 cross 58 and adding that scroll panel to our frame.

54
00:04:35,830 --> 00:04:39,040
After that, we have defined the label a label company.

55
00:04:40,980 --> 00:04:44,220
Setting bond for it and setting bond for it.

56
00:04:44,220 --> 00:04:54,230
Who size is 124 for cross 21 and it's we can say location is to what is X comma to 41 adding that to

57
00:04:54,240 --> 00:05:01,350
also well panel then we have defined the key listener over the ID field and then we have defined the

58
00:05:01,350 --> 00:05:05,010
key type, the method or key event which is taking a key event.

59
00:05:05,010 --> 00:05:11,990
E Now inside this method we have initialized our ID string variable which is equal to ID field.

60
00:05:12,060 --> 00:05:15,030
Get text or trim plus eight or get keycap.

61
00:05:17,190 --> 00:05:27,480
So this will get the text from our field and stored into the ID variable ID string variable also with

62
00:05:27,480 --> 00:05:29,640
the character key which is pressed.

63
00:05:29,910 --> 00:05:37,530
Then there is the ArrayList string data, which is a storing the values from the DB searsport id.

64
00:05:37,560 --> 00:05:45,120
So we have called the search p method of the DB class by passing the ID argument into that method.

65
00:05:45,120 --> 00:05:51,210
And the result of that or the return of that method will be stored in the ArrayList type of string named

66
00:05:51,210 --> 00:05:52,110
as data.

67
00:05:52,140 --> 00:05:54,750
Now data dot sizes equals two is close to three.

68
00:05:54,750 --> 00:05:57,840
So if the data dot size is equal to is equals to three.

69
00:05:59,450 --> 00:06:07,730
Then what we are doing is we are setting the details of the product in that text area field by with

70
00:06:07,730 --> 00:06:14,930
the help of data zero and the quantity field with the help of data or get to and switch.

71
00:06:15,960 --> 00:06:20,310
If such will be taken case of get data or get one.

72
00:06:20,310 --> 00:06:24,030
And inside the get one we will be case general.

73
00:06:24,030 --> 00:06:32,000
So to settle the field of the get one, which is the type of the company so we have what we have did

74
00:06:32,010 --> 00:06:33,870
this case, general.

75
00:06:33,900 --> 00:06:37,230
So we will select the company to get selected zero.

76
00:06:37,290 --> 00:06:42,960
And if case matched and drugs, then we will select index one from the company combo box.

77
00:06:42,960 --> 00:06:44,520
Either we will select that to.

78
00:06:44,730 --> 00:06:47,730
So this is the key event over the ID.

79
00:06:49,810 --> 00:06:54,940
These are the two key released our key press event, which are auto generated.

80
00:06:55,180 --> 00:07:00,220
And after that, we have defined the button product to update the product.

81
00:07:00,670 --> 00:07:02,560
We have defined the action perform method.

82
00:07:02,740 --> 00:07:06,610
If the quantity field or the ID field is null, we will show the error message.

83
00:07:06,610 --> 00:07:11,620
Otherwise we will be storing the ID from the ID field into our ID variable.

84
00:07:12,660 --> 00:07:19,050
Typecasting the quantity from our corn field, converting it into text and typecasting it to the integer,

85
00:07:19,050 --> 00:07:25,170
sorting into our integer variable and restoring the details of the product in detail variable type of

86
00:07:25,170 --> 00:07:26,880
company in our company string.

87
00:07:26,880 --> 00:07:33,450
And then we will call the DB dot update product to database method, which will update the product by

88
00:07:33,450 --> 00:07:36,030
taking the argument added detail, company and quantity.

89
00:07:36,720 --> 00:07:38,460
So this will update our product.

90
00:07:39,930 --> 00:07:46,920
Which is the requirement of this class then but an update product this will set the bound for that product

91
00:07:47,100 --> 00:07:51,090
location will be 449 comma 338 and the size will be 136.

92
00:07:51,090 --> 00:07:56,640
Class 23 adding that button to our panel, then we will have defined the one field text field where

93
00:07:56,640 --> 00:07:58,290
we will be writing the quantity.

94
00:07:58,290 --> 00:08:00,330
So this is the set bound.

95
00:08:02,580 --> 00:08:03,540
For that one field.

96
00:08:03,540 --> 00:08:08,910
I think that compared to the frame up that we have defines the item, a valuable label setting font

97
00:08:08,910 --> 00:08:11,010
for it, bound for it and ending that to our.

98
00:08:11,910 --> 00:08:12,400
Panel.

99
00:08:12,420 --> 00:08:20,400
After that, we have defined the company combo box and label and added the items in our company combo

100
00:08:20,400 --> 00:08:23,190
box, General Maton Drugs and Nissan Electric.

101
00:08:23,370 --> 00:08:24,600
So these are the.

102
00:08:26,420 --> 00:08:32,300
Items of the company combo box, and this is the class of update product.

103
00:08:32,330 --> 00:08:38,930
Now let's have a look at the delete product class, which will help us to delete any details of the

104
00:08:38,930 --> 00:08:39,590
product.

105
00:08:39,590 --> 00:08:42,170
So this class is also defined inside the package store.

106
00:08:42,200 --> 00:08:49,010
We we have imported the necessary package like font J button j label panel, a scroll pane, text area,

107
00:08:49,010 --> 00:08:51,800
text field color action listener action event.

108
00:08:52,010 --> 00:08:56,750
After that, we have defined the public class delete product which is extending G panel that is a one

109
00:08:56,750 --> 00:09:03,050
text field ID field a button button, delete, product label, L-A error and a string ID and other error

110
00:09:03,050 --> 00:09:05,150
is close to enter product product ID.

111
00:09:05,450 --> 00:09:07,670
Then we have defined the public delete product.

112
00:09:09,590 --> 00:09:17,580
Inside which we have initialized the layout as null for the panel boundaries 100 100 and sizes 840 cross

113
00:09:17,750 --> 00:09:23,660
699 then we have defined the label as a delete product, setting the bound for it, font for it, font

114
00:09:23,660 --> 00:09:26,870
type font size and font family adding that.

115
00:09:27,750 --> 00:09:29,040
Label to our panel.

116
00:09:29,040 --> 00:09:34,290
Similarly, there is a product ID label setting font for it, bound for it, adding that to our panel.

117
00:09:34,320 --> 00:09:36,450
After that, we have defined the ID field.

118
00:09:38,220 --> 00:09:39,820
Which is of text field type.

119
00:09:39,840 --> 00:09:46,740
Then we have set the bound for that text field, which is location is 449 comma 158 eight and it sizes

120
00:09:46,740 --> 00:09:48,150
136, cross 20.

121
00:09:48,300 --> 00:09:53,100
Then adding that field to our panel and set the maximum length for that.

122
00:09:53,370 --> 00:09:59,040
After that, we have defined the button delete product which inside for which we have defined the action

123
00:09:59,040 --> 00:10:01,340
for from the event which is taking action event argument.

124
00:10:01,420 --> 00:10:05,280
A Now, if the text field is null, then we will show the error message.

125
00:10:05,310 --> 00:10:11,160
Otherwise, if the text will contain some value, then we will store first the value of the ID field

126
00:10:11,160 --> 00:10:18,240
into our ID string and pass that ID string to our DVD product to database method, which will help us

127
00:10:18,240 --> 00:10:20,100
to delete the product from the database.

128
00:10:21,700 --> 00:10:24,850
After that, we have defined the set bond method for that button.

129
00:10:25,420 --> 00:10:31,420
So that location for the button will be 414 and comma to 19 and size will be 136 plus 23.

130
00:10:31,540 --> 00:10:38,260
Then we have added that button to our frame after at last we have defined the label error and its foreground

131
00:10:38,260 --> 00:10:46,090
color as red and it's bound as 349, comma 277 and its size will be to 17 cross 14 adding that error

132
00:10:46,210 --> 00:10:47,230
label to our.

133
00:10:48,170 --> 00:10:48,770
Panel.

134
00:10:48,770 --> 00:10:53,540
So these are the two classes update product and the delete product which will be used.

135
00:10:55,340 --> 00:11:00,050
Which will be used to add and delete product from our database.

136
00:11:00,050 --> 00:11:01,400
So that's all in the.
