1
00:00:00,990 --> 00:00:06,140
So in this video, we will be talking about the next two Java files of this project.

2
00:00:06,150 --> 00:00:09,510
Those will be the Splash Star Java and Log in Java.

3
00:00:09,510 --> 00:00:15,390
So Splash Java will be the first file which we will run when we will run our project.

4
00:00:15,390 --> 00:00:19,290
After that we will move on to our login page, then to our main page.

5
00:00:19,380 --> 00:00:26,100
So a splash stored Java file is basically just a Java file which we have created for the better representation

6
00:00:27,750 --> 00:00:34,860
so far, which what we did is we have imported here Java dot dot strict class which will help us to

7
00:00:34,860 --> 00:00:40,260
create a better graphical user interface as it is abstract window toolkit in build package provided

8
00:00:40,260 --> 00:00:41,070
by the Java.

9
00:00:41,100 --> 00:00:48,270
Similarly, we have imported the Java Export Spring package also to use its inbuilt classes and methods

10
00:00:48,270 --> 00:00:50,340
for better graphical user interface.

11
00:00:51,090 --> 00:00:53,850
After that, we have defined the class a splash.

12
00:00:55,440 --> 00:00:57,240
Then we have defined its main method.

13
00:00:57,240 --> 00:01:03,690
Inside the main method, what we are doing is as a frame we have created as frame type of object F one

14
00:01:03,690 --> 00:01:09,210
and new as frame or actually the frame class we have defined here, this is the class.

15
00:01:09,210 --> 00:01:17,040
So we have created the object for this class as frame type of object f one and passed the argument test

16
00:01:17,040 --> 00:01:19,980
payroll system free license version 2.2.

17
00:01:20,460 --> 00:01:27,020
That's for the reference only you can write anything here f one dot set visible is equals to true two.

18
00:01:27,060 --> 00:01:32,250
So the first for this visibility will be true for that frame.

19
00:01:32,270 --> 00:01:38,250
And we have defined the variable I and another integer variable x is equal to one.

20
00:01:38,250 --> 00:01:46,350
Now we have iterated over these two variables I and x and set the F one dot set location with this calculation.

21
00:01:46,350 --> 00:01:53,490
Now what this calculation does is this will open the menu or a window of the frame with a.

22
00:01:54,660 --> 00:02:00,180
Some speed and incrementing at a particular speed and F1 not set size.

23
00:02:00,180 --> 00:02:02,900
So size will be I plus x comma I.

24
00:02:02,910 --> 00:02:10,050
So this will iteratively increase the size of that window till the perfect size for that purpose we

25
00:02:10,050 --> 00:02:14,490
have used it and try is it close to thread thread dot sleep ten.

26
00:02:14,490 --> 00:02:17,520
So what it does it will create the.

27
00:02:20,000 --> 00:02:25,810
Closing of the window and the opening of the window for that every 0.1 second.

28
00:02:25,820 --> 00:02:29,450
So actually 1000 will be for the one second.

29
00:02:29,450 --> 00:02:31,520
So one zero will be 0.0 1 seconds.

30
00:02:31,520 --> 00:02:35,270
So it will close and open the window every 0.01 second.

31
00:02:35,270 --> 00:02:40,280
And in the catch block we will be handling any exception if occurs.

32
00:02:40,670 --> 00:02:43,250
Now let's have a look at the class frame.

33
00:02:43,250 --> 00:02:48,050
So class has a frame which is extending the frame and implements renewable interface.

34
00:02:49,340 --> 00:02:53,630
Inside which we have defined a thread type of instance.

35
00:02:53,640 --> 00:02:59,540
Stephen And then we have defined its parameterized constructor as a frame which is taking our argument

36
00:02:59,540 --> 00:03:04,970
of a string as that's why when we have created the instance of that string class, we have passed that

37
00:03:04,970 --> 00:03:05,390
argument.

38
00:03:05,390 --> 00:03:08,450
Payroll System Free License Version 2.0.

39
00:03:09,730 --> 00:03:16,870
After that inside the super, we have passed that a string which we will be passing to it.

40
00:03:18,060 --> 00:03:20,040
It's constructed during coddling.

41
00:03:20,040 --> 00:03:24,900
And so that construct, that value will be at the heading of that window.

42
00:03:25,020 --> 00:03:28,210
After that set, layout is a new flow flow type of layout.

43
00:03:28,230 --> 00:03:35,250
Then inside the image icon variable, see, when we have imported the image from our source of the image

44
00:03:35,250 --> 00:03:37,380
by passing the location of that image.

45
00:03:37,650 --> 00:03:45,570
After that, inside the image instance, even we have a scale that is scaled the size of that image,

46
00:03:45,930 --> 00:03:49,260
which was previously in C one with the help of get image.

47
00:03:49,260 --> 00:03:50,850
And we get a scaled instance.

48
00:03:52,250 --> 00:03:54,570
After that, we have a store that is scaled.

49
00:03:54,590 --> 00:04:01,670
Image object in our new image icon, which is a two then in the label RM one we have restored that image

50
00:04:01,670 --> 00:04:02,590
icon two.

51
00:04:02,630 --> 00:04:10,280
After that we have added the label, added the that label to our frame and initialize the table is close

52
00:04:10,280 --> 00:04:15,410
to new thread and past the current instance of class into that thread.

53
00:04:15,440 --> 00:04:17,280
Now to even start.

54
00:04:17,300 --> 00:04:20,090
What it does is it will start the thread.

55
00:04:21,450 --> 00:04:27,840
After that, there is a public wide run method we have defined, which is a method of the enable interface.

56
00:04:27,840 --> 00:04:31,980
So inside the tribe log, what we are doing is thread dot sleep 7000.

57
00:04:31,980 --> 00:04:39,090
So the thread will sleep every seventh second and this dark side as well as equals to false after that

58
00:04:39,090 --> 00:04:41,430
login f one is equal to new login.

59
00:04:41,430 --> 00:04:48,090
So after that completion of the run, we will be moving the window and closing the window to the.

60
00:04:50,250 --> 00:04:51,360
Login page.

61
00:04:51,390 --> 00:04:56,880
So this will after in the catch block, we will be handling exception if any occurs.

62
00:04:57,210 --> 00:04:59,640
So that's all from the splash class.

63
00:04:59,640 --> 00:05:04,500
Let's have a look on our the next class, which is login class, which will appear after the running

64
00:05:04,500 --> 00:05:05,490
of this class.

65
00:05:05,490 --> 00:05:07,800
So let's have a look at login class.

66
00:05:07,800 --> 00:05:09,120
Here is the login class.

67
00:05:10,970 --> 00:05:16,670
So inside the logging class we have imported the packages like Java or JWT District for the graphical

68
00:05:16,670 --> 00:05:24,020
user interface, a DOT event or district for the event handling over the buttons Java string for better

69
00:05:24,020 --> 00:05:28,310
graphical user interface and Java SQL for connecting with our database.

70
00:05:29,010 --> 00:05:33,900
After that we have defined our class login, which is extending frame and implementing action listener

71
00:05:34,680 --> 00:05:35,640
interface.

72
00:05:35,670 --> 00:05:38,400
After that, the label is L1 L2.

73
00:05:38,400 --> 00:05:44,190
So we have defined the two labels and after that there is a one text field, one password field and

74
00:05:44,190 --> 00:05:44,970
two buttons.

75
00:05:45,090 --> 00:05:50,810
So the two labels will be storing the that username value password value.

76
00:05:50,820 --> 00:05:56,070
After that one text field will be storing the enter value from the user and the password field will

77
00:05:56,070 --> 00:05:58,740
be storing the enter password from the user.

78
00:05:58,770 --> 00:06:00,000
Then there will be two buttons.

79
00:06:00,160 --> 00:06:04,930
One button will be for the login purpose or b two button, which will be for the closing purpose for

80
00:06:04,950 --> 00:06:05,940
cancelling purpose.

81
00:06:05,970 --> 00:06:10,200
Now we have defined the non parameterized constructor and its heading as login page.

82
00:06:10,290 --> 00:06:12,450
After that, setting the layout as border layout.

83
00:06:12,480 --> 00:06:18,000
Now we have defined the J2 is close to new J password field size will be ten and we have defined the

84
00:06:18,000 --> 00:06:21,240
text field even as equals to new text field size is ten.

85
00:06:22,780 --> 00:06:28,000
Now inside the label we have defined J label and new image icon class for the quad get system resource

86
00:06:28,000 --> 00:06:28,770
from this pig.

87
00:06:28,780 --> 00:06:35,230
So this so this label will be storing the pic, which we will be adding in this label.

88
00:06:35,230 --> 00:06:40,900
And after that we have defined the B1, which will be new button named as submit and we are adding that,

89
00:06:41,080 --> 00:06:45,130
adding an image also on that button that is a login image.

90
00:06:45,130 --> 00:06:48,550
So that button will be also having an image.

91
00:06:48,550 --> 00:06:55,690
And similarly for the button B to cancel, it will also have an image whose path have been passed as

92
00:06:55,710 --> 00:06:58,360
argument inside class load or get system resource.

93
00:06:58,930 --> 00:07:04,420
After that we have added action listener over these two buttons p one point add action service and B

94
00:07:04,420 --> 00:07:06,190
to dot add action listener.

95
00:07:08,140 --> 00:07:10,420
Then we have defined our four panels.

96
00:07:10,420 --> 00:07:12,130
We won't be 23, 34.

97
00:07:12,160 --> 00:07:15,940
After that, we have defined these four panels b1, b2, p three, p four.

98
00:07:16,180 --> 00:07:17,800
Then we have added.

99
00:07:18,640 --> 00:07:20,830
Hell with the border out west.

100
00:07:20,830 --> 00:07:23,200
So L.A. is restoring the image icon.

101
00:07:23,320 --> 00:07:26,380
That's the label which we have added to our frame.

102
00:07:26,440 --> 00:07:31,000
After that there is ap2 dot add new j label username.

103
00:07:31,000 --> 00:07:40,090
So inside the panel p two we are adding the new J label labeled as username and adding the text field

104
00:07:40,090 --> 00:07:41,590
on that panel also.

105
00:07:41,770 --> 00:07:49,660
Similarly in the p top panel, we are adding a new J label as password and adding the D two tech password

106
00:07:49,660 --> 00:07:52,270
field in that particular panel.

107
00:07:52,570 --> 00:07:58,030
After that, we have added that panel with the Border Layout Center in our flow layout frame.

108
00:08:00,410 --> 00:08:02,900
After that, there is a penalty for which will be.

109
00:08:03,630 --> 00:08:11,040
Inside which we have added our button, B one and V two also then we have added that p four panel in

110
00:08:11,040 --> 00:08:13,820
our frame with border layout dot south.

111
00:08:15,230 --> 00:08:21,080
Now we have set the size of the frame as 400 comma to 50 and its location as.

112
00:08:22,320 --> 00:08:27,380
600, comma 400 set the visibility of the frame as true.

113
00:08:27,390 --> 00:08:33,330
After that, what we are doing, we have defined the action performance method with the action event

114
00:08:33,330 --> 00:08:36,360
object and inside the tribe log.

115
00:08:36,360 --> 00:08:44,250
We have initialized the connection with our database first with the help of our com class and after

116
00:08:44,250 --> 00:08:48,240
that we have defined a string you is equals to one point get text.

117
00:08:48,240 --> 00:08:54,090
So what this line will does, it will take the text or the entire value from the user and store it into

118
00:08:54,090 --> 00:08:55,230
a string view.

119
00:08:55,260 --> 00:08:59,250
Similarly for the string via restored the password field as well.

120
00:08:59,250 --> 00:09:04,770
So two point get text will restore the password field the entire password from the user in our string

121
00:09:04,770 --> 00:09:07,200
v and after that is in a string.

122
00:09:07,200 --> 00:09:12,630
Q We have written the query select aspect from login where username is equals to you and password is

123
00:09:12,630 --> 00:09:13,320
close to you.

124
00:09:13,320 --> 00:09:18,570
So what this string does, it is creating a query which is select a string from login and inside the

125
00:09:18,570 --> 00:09:21,000
login table it will check for the username and password.

126
00:09:21,000 --> 00:09:27,630
So if there is any record for which the username and password will match, so then it will be executing.

127
00:09:29,510 --> 00:09:29,690
Oh.

128
00:09:29,690 --> 00:09:34,040
And taking as the control of the program to the new window.

129
00:09:34,040 --> 00:09:37,400
That will be window of the new project class.

130
00:09:38,130 --> 00:09:40,170
After that, with the help of results.

131
00:09:40,170 --> 00:09:46,050
At instance, we have executed that query by passing it to the asked execute query method as an argument.

132
00:09:46,260 --> 00:09:48,210
Then if asked next.

133
00:09:48,210 --> 00:09:50,300
So if asked next quarter.

134
00:09:50,340 --> 00:09:53,610
Does it will fetch the record for.

135
00:09:53,640 --> 00:09:57,060
For the particular username and password if it match.

136
00:09:57,090 --> 00:09:59,190
If it does not mind, that does not match.

137
00:09:59,190 --> 00:10:00,300
Then it will return null.

138
00:10:00,300 --> 00:10:02,340
So if it it will, it will return null.

139
00:10:02,340 --> 00:10:04,140
So the if block will not be executed.

140
00:10:04,140 --> 00:10:05,510
So if it matched, then we will.

141
00:10:05,520 --> 00:10:09,600
What we are doing is we will be calling a new project instance and set the visibility as to.

142
00:10:09,780 --> 00:10:12,930
After that we are setting the visibility of the current window as false.

143
00:10:13,350 --> 00:10:19,980
So in the block, if the password and username not match, then we will be showing the dialog box that

144
00:10:19,980 --> 00:10:21,060
invalid login.

145
00:10:21,750 --> 00:10:24,960
Then we will set the visibility of the current window as false.

146
00:10:26,640 --> 00:10:27,450
Inside the cast.

147
00:10:27,450 --> 00:10:32,370
BLOCK We have handled any exception if occurring and inside the public static void main.

148
00:10:32,370 --> 00:10:35,880
What we are doing is we have just created the instance of the our login class.

149
00:10:35,880 --> 00:10:38,880
So these are the two classes which we have discussed in this project.

150
00:10:38,880 --> 00:10:42,690
The first one was Splash or Java, which we did the very first class.

151
00:10:42,690 --> 00:10:44,910
We will be running just for the better interface.

152
00:10:44,910 --> 00:10:52,200
And looking after that we have defined the login class, which will be help to validate the data of

153
00:10:52,200 --> 00:10:57,930
the user with the help of username and password, which will be validating the data from our database

154
00:10:57,930 --> 00:10:59,250
table login.

155
00:10:59,250 --> 00:11:00,510
So that's all from these two.
