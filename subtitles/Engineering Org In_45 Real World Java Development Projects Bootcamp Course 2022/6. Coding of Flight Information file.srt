1
00:00:01,160 --> 00:00:07,190
So here is the flight info class, which is also defined inside the package airline and.

2
00:00:08,520 --> 00:00:09,420
Inside it.

3
00:00:09,420 --> 00:00:18,920
We have first imported the package that is a net protein bit protein, a dot SQL utils.

4
00:00:19,020 --> 00:00:21,270
If you know about this package, that's better.

5
00:00:21,270 --> 00:00:27,930
But I will tell you, this package will be used to maintain the better formatting of tables in our window.

6
00:00:27,960 --> 00:00:34,440
That J table does not provide that functionality much efficient as this package will provide.

7
00:00:34,440 --> 00:00:36,320
So it will we will use it.

8
00:00:36,330 --> 00:00:45,540
We will be using its set model method to frame our function, frame our tables and it is defined and

9
00:00:45,540 --> 00:00:46,110
provided.

10
00:00:46,110 --> 00:00:48,290
This library are as two examples are.

11
00:00:48,420 --> 00:00:52,920
So make sure that this library present in your library folder.

12
00:00:53,310 --> 00:00:55,950
Otherwise it will show you through you error.

13
00:00:57,340 --> 00:00:59,260
Of class not found.

14
00:01:01,460 --> 00:01:03,440
Then we have imported the package.

15
00:01:03,440 --> 00:01:12,140
Our .8. asterisk used to define graphical user interface and develop graphical user interface desktop

16
00:01:12,140 --> 00:01:13,370
based applications.

17
00:01:15,500 --> 00:01:21,350
And then we have imported the package, a WTA event, not as strict.

18
00:01:21,380 --> 00:01:28,700
This package will help us to handle the events on our buttons in this class, so that's why we have

19
00:01:28,700 --> 00:01:29,450
imported it.

20
00:01:29,450 --> 00:01:32,150
Also Java dot dot asterisk.

21
00:01:32,150 --> 00:01:38,090
This will help us to maintain a connection with our database, update the database or retrieve information

22
00:01:38,090 --> 00:01:39,230
from the database.

23
00:01:41,360 --> 00:01:44,900
After that, we have defined the sorry.

24
00:01:44,900 --> 00:01:49,790
We have imported the Java export string package, which is a modified version of the Abstract Vendor

25
00:01:49,790 --> 00:01:52,190
Toolkit and it provides better functionality.

26
00:01:53,650 --> 00:01:55,900
Then the Abstract Mental Toolkit Package.

27
00:01:58,670 --> 00:02:04,940
Now we have defined the public class flight info, which is extending frame.

28
00:02:06,690 --> 00:02:12,240
Inside, which we have to find a private type of table and stance named as table.

29
00:02:12,690 --> 00:02:18,210
Another private type of text field and stance labeled as text field.

30
00:02:18,360 --> 00:02:23,550
And then we have defined the void, static void, main method.

31
00:02:24,440 --> 00:02:26,000
Inside which we have.

32
00:02:27,930 --> 00:02:30,150
Created the instance of the current class.

33
00:02:31,310 --> 00:02:34,940
Flight info and setup visibility of the class as true.

34
00:02:36,730 --> 00:02:43,420
Visibility of that object is through too, so that the window must be visible whenever we run this flight

35
00:02:43,420 --> 00:02:44,290
in for class.

36
00:02:44,890 --> 00:02:49,600
After that we have defined the flight info non parameterized constructor.

37
00:02:55,150 --> 00:02:58,840
Inside which we have set up background color of the.

38
00:02:59,690 --> 00:03:02,270
Window as white and.

39
00:03:03,450 --> 00:03:12,750
Said the fun type of whole window as fond family as the homophone type as plain and font size as 13.

40
00:03:14,770 --> 00:03:22,560
Setting the default close operation by within j from not exit on clause size of the frame as 860 cross

41
00:03:22,570 --> 00:03:28,270
523 layout as null and its visibility as true.

42
00:03:35,450 --> 00:03:37,970
Then we have defined a label f code.

43
00:03:39,480 --> 00:03:41,070
Labeled as flight code.

44
00:03:42,180 --> 00:03:44,670
And set the.

45
00:03:47,040 --> 00:03:58,440
Fond of that flight code label font family as the humor font type as plain and font size as 17.

46
00:03:59,070 --> 00:04:04,200
After that, we have set the bound for that label.

47
00:04:04,560 --> 00:04:10,020
X and Y values are 50 and 100 and its size is 200.

48
00:04:10,020 --> 00:04:16,290
Cross 30, adding that F code label to our J frame.

49
00:04:19,320 --> 00:04:24,900
Then we have defined on the label of labeled as flight information.

50
00:04:26,290 --> 00:04:34,140
Set the font for the flight information label family is Tahoma type s plane and its size as.

51
00:04:37,380 --> 00:04:38,190
31.

52
00:04:39,880 --> 00:04:41,410
Setting the foreground.

53
00:04:43,480 --> 00:04:54,580
Color for that label by using the RGB value and the color class passing value of RS hundred green as

54
00:04:54,580 --> 00:05:05,050
149 and blue as to 37, setting the bound for that flight details as x as 50 by as 20 and its size as

55
00:05:05,050 --> 00:05:05,740
570.

56
00:05:05,740 --> 00:05:06,910
Cross 35.

57
00:05:09,270 --> 00:05:11,970
Adding that flight detail label to our.

58
00:05:14,720 --> 00:05:15,980
J frame or window.

59
00:05:16,250 --> 00:05:22,130
After that we have defined a button labelled as show and.

60
00:05:23,400 --> 00:05:31,170
But I'm sure setting the font for it font family as Tahoma font type as plain and font size as 20.

61
00:05:31,740 --> 00:05:34,890
Now we will be adding action list.

62
00:05:34,890 --> 00:05:36,570
Now button.

63
00:05:39,070 --> 00:05:39,910
To our.

64
00:05:41,270 --> 00:05:47,850
For the baton show and we'll be performing action event a and.

65
00:05:49,930 --> 00:05:54,040
His string code is equal to text, field or text.

66
00:05:54,730 --> 00:06:02,950
This will fetch the text from text field and store it into a string type of variable code.

67
00:06:04,090 --> 00:06:05,970
Then we have inside the try block.

68
00:06:05,980 --> 00:06:13,570
We have defined the connection object by using our common class, and after that we have defined a string.

69
00:06:17,680 --> 00:06:24,190
That's a string select f chord f name as r c source destination capacity class code class name from

70
00:06:24,190 --> 00:06:29,290
flight comma sector where flight code is equals to code.

71
00:06:29,290 --> 00:06:36,310
So where code matches, we will select these from the respective tables, flight and sector from our

72
00:06:36,310 --> 00:06:43,690
database, the results that will be used to execute those queries and this table set model db utils

73
00:06:43,690 --> 00:06:46,270
start table set to table model RS.

74
00:06:47,900 --> 00:06:51,370
This will help us to create a table in the form of our database.

75
00:06:51,380 --> 00:06:58,910
So that's why we have imported the package, which is inside of us to examine the job.

76
00:07:00,980 --> 00:07:04,400
Catch block will handle any exception if occurs.

77
00:07:06,900 --> 00:07:17,010
After that, we have set a bond for our button location as to when to cross 150 and its size as 120

78
00:07:17,010 --> 00:07:21,210
cross 30, adding that button to our J frame and window.

79
00:07:21,780 --> 00:07:24,720
Next we have initialize the table.

80
00:07:27,260 --> 00:07:36,050
Its background colour as white and it's bound as location as 23, close to 50 and its size as 800.

81
00:07:36,050 --> 00:07:37,970
Glow cross 300.

82
00:07:40,350 --> 00:07:47,460
Then we have defined the scroll panel, so the table must be scrollable, either horizontally or vertically.

83
00:07:50,620 --> 00:07:55,030
So for that we have defined the table and setting the bound for the table.

84
00:07:55,030 --> 00:07:57,700
Location of the table is 23, close to 50.

85
00:07:57,850 --> 00:07:59,440
Height and width is.

86
00:08:01,030 --> 00:08:03,010
308 hundred respectively.

87
00:08:03,190 --> 00:08:05,080
Setting the background color as white.

88
00:08:05,080 --> 00:08:06,280
Adding that to over.

89
00:08:08,440 --> 00:08:09,760
Jay Freeman, Wendell.

90
00:08:11,200 --> 00:08:12,100
Text field.

91
00:08:12,100 --> 00:08:13,300
Another text field.

92
00:08:17,140 --> 00:08:18,400
Setting the mound for it.

93
00:08:19,910 --> 00:08:24,650
Location has to 20 cross hundred width 200 high 30.

94
00:08:25,160 --> 00:08:26,960
Adding the text field to our frame.

95
00:08:30,290 --> 00:08:31,580
Then there is a.

96
00:08:34,790 --> 00:08:40,760
On the label as flight code setting it font family as Tahoma.

97
00:08:40,760 --> 00:08:44,360
Font type as plane font size as 13.

98
00:08:45,460 --> 00:08:47,290
Setting the bond for that label.

99
00:08:47,320 --> 00:08:54,190
Flight code location is 23, close to 20, and its size is 126.

100
00:08:54,190 --> 00:08:55,240
Cross 14.

101
00:08:55,840 --> 00:08:59,200
Adding that label to J frame window.

102
00:09:01,350 --> 00:09:04,530
After that, we have defined another label that is a flight name.

103
00:09:05,220 --> 00:09:12,270
We have set the font for the flight name whose font family has Tahoma font type as plane and.

104
00:09:14,730 --> 00:09:16,080
Size 13.

105
00:09:18,180 --> 00:09:23,170
After that, we have set the bound for the flight.

106
00:09:23,190 --> 00:09:27,540
Name location is one 1245.

107
00:09:28,500 --> 00:09:29,610
Comma 220.

108
00:09:29,640 --> 00:09:31,080
Size is 120.

109
00:09:31,080 --> 00:09:32,100
Class 14.

110
00:09:33,060 --> 00:09:35,610
Adding that to our j frame.

111
00:09:35,940 --> 00:09:40,980
Then there is another label source labeled as source.

112
00:09:41,280 --> 00:09:46,950
Setting the font for the source whose font family stoma font type is plane.

113
00:09:48,140 --> 00:09:49,670
Font size is 13.

114
00:09:51,070 --> 00:09:57,430
Setting bond for it, whose location is to 75, comma to 20 and it sizes 104 cross 14.

115
00:09:59,200 --> 00:10:00,850
Adding Labor to our frame.

116
00:10:01,210 --> 00:10:08,740
After that, we have defined the J label destination, which is a new J label labeled as destination

117
00:10:09,130 --> 00:10:10,720
setting the font for it.

118
00:10:11,530 --> 00:10:13,060
Font family is Tahoma.

119
00:10:13,570 --> 00:10:17,170
Font size is 13 and font type is as plain.

120
00:10:17,860 --> 00:10:20,320
Setting the bound for the.

121
00:10:23,360 --> 00:10:32,360
Our destination label location is 367, comma 220 and sizes 120, class 14 adding the destination to

122
00:10:32,360 --> 00:10:36,140
our DJ frame under the label as capacity.

123
00:10:36,920 --> 00:10:43,040
Setting the font for it was found families Tahoma font type is plane and font size is 13.

124
00:10:44,300 --> 00:10:53,510
Setting the bond for the dos location is for 97 comma to 20 and it sizes 111 cross 14, adding the capacity.

125
00:10:55,770 --> 00:10:58,020
To our frame, our window.

126
00:10:58,020 --> 00:11:07,110
Then there is another label as class code setting the font for it labelled as Tahoma sorry whose font

127
00:11:07,110 --> 00:11:12,750
families Tahoma font size is 13 and font type as plain.

128
00:11:13,170 --> 00:11:19,980
Then there is a class code which is the label setting bound for it whose location is 557 close to 20

129
00:11:19,980 --> 00:11:23,250
and its size is 120, class 14.

130
00:11:23,400 --> 00:11:27,420
Adding it to our frame at last we have the last label labeled as class name.

131
00:11:27,420 --> 00:11:29,730
Also setting the font for it was font families.

132
00:11:29,730 --> 00:11:34,740
Tahoma font size is 13 and font type is as plain setting.

133
00:11:34,740 --> 00:11:41,970
The bound is whose location is seven and comma to 20 and its size is 111 cross 14.

134
00:11:41,970 --> 00:11:44,250
Adding the class name to our frame.

135
00:11:45,790 --> 00:11:52,510
Setting the default close operation of the frame by using j from j frame height on close and setting

136
00:11:52,510 --> 00:12:00,850
the size for it, which is 900 plus 657 the visibility of the window S2 and setting the location of

137
00:12:00,850 --> 00:12:02,770
the window as 400.

138
00:12:03,130 --> 00:12:04,390
Comma 200.

139
00:12:05,910 --> 00:12:12,630
So this is about flight info java class which will be used to.

140
00:12:14,760 --> 00:12:21,150
Have a look on the information of all the available flights and our airline system management.

141
00:12:23,150 --> 00:12:26,720
So let's have a look on the run of this project.

142
00:12:26,760 --> 00:12:28,370
A run of this class.

143
00:12:28,550 --> 00:12:31,370
So I'll be running from the login again.

144
00:12:32,270 --> 00:12:34,910
Let's run the login file.

145
00:12:35,600 --> 00:12:37,340
I'll be entering validating.

146
00:12:38,670 --> 00:12:41,040
My username and password.

147
00:12:43,880 --> 00:12:45,540
That's the dashboard page.

148
00:12:45,560 --> 00:12:47,810
From here, I'll be flight info.

149
00:12:48,700 --> 00:12:51,930
So this will be the output of the flight info class.

150
00:12:51,940 --> 00:12:53,050
This is the output.

151
00:12:53,620 --> 00:12:58,990
We can enter flight code here and click on show that will show the.

152
00:13:00,350 --> 00:13:01,130
All the.

153
00:13:04,230 --> 00:13:08,190
Details of the flight which you have entered here.

154
00:13:08,880 --> 00:13:13,110
So that will be the output of the class.
