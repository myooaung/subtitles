WEBVTT
1
00:00:02.660 --> 00:00:08.390
So we are going to start a new project which is basically Java email application.

2
00:00:08.840 --> 00:00:15.170
And you can say email system with some server deployment, JSP and Java servlet.

3
00:00:15.410 --> 00:00:24.350
So if you know there are different email APIs to send email, which is basically text email, I'm going

4
00:00:24.350 --> 00:00:25.130
to send you.

5
00:00:25.520 --> 00:00:31.060
So for that purpose, I'm going to use different protocols, some APIs which are very stable APIs now.

6
00:00:32.240 --> 00:00:40.010
So sometimes you are going to develop some bigger web app for a company or consider one company which

7
00:00:40.010 --> 00:00:40.880
needs that.

8
00:00:41.300 --> 00:00:45.020
They are having some administrative help for each and every employee.

9
00:00:45.260 --> 00:00:52.970
But to send even in that employee's condition, you can create one some microservices for the purpose.

10
00:00:53.090 --> 00:00:56.360
So it's not exactly microservice I'm going to do.

11
00:00:56.750 --> 00:01:01.130
I'm just going to deploy server deployment from JSP application here.

12
00:01:01.990 --> 00:01:03.460
So this is it.

13
00:01:03.550 --> 00:01:07.540
Our project title, which is basically Java email application.

14
00:01:08.920 --> 00:01:09.580
So.

15
00:01:10.660 --> 00:01:11.870
What is our project aim?

16
00:01:12.610 --> 00:01:13.240
We choose.

17
00:01:13.300 --> 00:01:18.820
Basically we are going to develop email system to send and receive mails using java solid.

18
00:01:19.060 --> 00:01:25.740
Receiving mails is quite a tough job while doing this because of I'm going to use your Gmail as my email

19
00:01:26.230 --> 00:01:28.950
or protocol or we can say server.

20
00:01:28.960 --> 00:01:31.990
So there may be some authentication errors sometimes.

21
00:01:31.990 --> 00:01:38.920
So we can say there may be some handshake SSL errors also.

22
00:01:38.920 --> 00:01:40.600
So we need to record from that.

23
00:01:40.810 --> 00:01:46.990
Issuing mail is not very tough job, but it's very complex job while I'm using Gmail because it's not

24
00:01:46.990 --> 00:01:51.610
very open source mail as if, you know, you can try another mails.

25
00:01:51.610 --> 00:01:55.990
Also read if there are different servers for that purpose.

26
00:01:57.190 --> 00:02:02.170
My solution is I'm going with Gmail because it's very simple and all the things.

27
00:02:02.170 --> 00:02:08.440
But if you want to use 100% open source mail and you find find everything code, you can use standard

28
00:02:08.440 --> 00:02:14.140
mail or protonmail also, which is 100% open source mail systems.

29
00:02:14.320 --> 00:02:15.400
So you can do that.

30
00:02:15.400 --> 00:02:19.360
Or if you want to use another, you can use your own SMTP server.

31
00:02:19.360 --> 00:02:23.290
If you have, you can use that also for this deployment.

32
00:02:23.590 --> 00:02:27.790
So our project team is develop email system to send and receive mails.

33
00:02:27.790 --> 00:02:29.500
First ask is sending mail.

34
00:02:29.500 --> 00:02:34.920
After that we will see how we can receive our mails using our servlet technology and not using your

35
00:02:34.930 --> 00:02:36.040
pure servlet technology.

36
00:02:36.040 --> 00:02:40.840
I'm using Java as my mail, sending backend as a server deployment.

37
00:02:43.030 --> 00:02:49.810
So I'm using here JSP also for printing part or we can see efficient for front end part.

38
00:02:50.200 --> 00:02:55.930
So steps of our development is project setup how we are going to set up our project first understanding

39
00:02:55.930 --> 00:02:56.620
different tools.

40
00:02:56.620 --> 00:03:02.320
We are going to use your what the dependency injection everything I'm going to tell here then some java

41
00:03:02.320 --> 00:03:03.040
basics.

42
00:03:03.040 --> 00:03:07.060
What is the SMTP protocol here then what is the JSP basics?

43
00:03:07.060 --> 00:03:12.310
Java service dependency related application and deployment of the server is the final step.

44
00:03:12.520 --> 00:03:15.910
So that's it about our project aim and everything.

45
00:03:16.360 --> 00:03:17.170
So.

46
00:03:18.050 --> 00:03:18.820
Let us see.

47
00:03:18.830 --> 00:03:20.250
Application Requirements.

48
00:03:20.270 --> 00:03:21.530
JSP Pages.

49
00:03:22.540 --> 00:03:28.720
Finally just me here I mentioning only just three pages, but consider I am accessing their different

50
00:03:28.720 --> 00:03:33.840
also see us as file bootstrap files to create some UI for this email.

51
00:03:33.850 --> 00:03:36.000
Sending mail is very easy.

52
00:03:36.010 --> 00:03:41.260
I'm going to create some Java libraries I'm going to use here then gmail account.

53
00:03:41.260 --> 00:03:45.280
You should have gmail account or any SMTP server account.

54
00:03:45.280 --> 00:03:47.950
You have permission to access that account.

55
00:03:47.950 --> 00:03:50.000
I will tell you what permissions you needed there.

56
00:03:50.390 --> 00:03:57.100
Then Java basics to create classes and everything you need to understand that Java Oops concepts, object

57
00:03:57.100 --> 00:03:58.330
oriented programming concepts.

58
00:03:58.330 --> 00:04:01.840
Because I'm not considering only one class to create or send that.

59
00:04:02.080 --> 00:04:08.170
I want to create some different classes and I'm going to use some oops concepts here and some server

60
00:04:08.170 --> 00:04:09.170
deployment concepts.

61
00:04:09.190 --> 00:04:11.110
Why am telling server deployment concepts?

62
00:04:11.140 --> 00:04:17.620
Deployment Officer on server is very easy task for ID, but you should understand while developing you

63
00:04:17.620 --> 00:04:18.610
may get errors.

64
00:04:18.610 --> 00:04:20.620
So you should understand what are the errors?

65
00:04:21.890 --> 00:04:25.220
Then JDK 16 and some dependencies.

66
00:04:25.220 --> 00:04:33.140
Also we are going to use ID and preferring branch ID because it's very useful ID while injecting dependencies,

67
00:04:33.140 --> 00:04:36.380
it will automatically ask for that dependencies and everything.

68
00:04:37.010 --> 00:04:42.740
If you comfortable with another ID, you can proceed with that ID, but I'm proceeding with the idea

69
00:04:43.100 --> 00:04:45.590
inside the last server or tomcat.

70
00:04:45.590 --> 00:04:51.770
So I preferably say that Tomcat server because you can change your port directly in that server.

71
00:04:51.950 --> 00:04:58.730
So no need to ask it again and again for changing the server or mentioning the domain on that server

72
00:04:58.730 --> 00:05:00.800
you can easily put through the console.

73
00:05:01.490 --> 00:05:03.260
So these are the application requirements.

74
00:05:03.260 --> 00:05:05.960
So let us see what are the functional requirements.

75
00:05:05.960 --> 00:05:08.600
So what is the difference between application requirements?

76
00:05:08.600 --> 00:05:14.030
Application is just for development, but functional requirements are useful to create some classes,

77
00:05:14.030 --> 00:05:14.510
everything.

78
00:05:14.510 --> 00:05:17.510
So I'm not going very deep in that part.

79
00:05:17.510 --> 00:05:20.570
But let us check what are the functional requirements?

80
00:05:21.540 --> 00:05:25.260
So JSP pages and Java programs both are different.

81
00:05:25.260 --> 00:05:32.370
I'm creating here considering I'm not here using any database to store such emails, but in real life

82
00:05:32.400 --> 00:05:36.570
what happens actually or that email should be solved.

83
00:05:36.570 --> 00:05:44.100
So back in my database to store their emails in the database, why am not using this?

84
00:05:44.100 --> 00:05:50.640
Because this is very primary considering an email application if you want to create database also you

85
00:05:50.640 --> 00:05:54.450
can go with that or you can develop on cloud.

86
00:05:54.450 --> 00:05:57.450
Also like Google Cloud or cloud, you can use Amazon Cloud.

87
00:05:57.570 --> 00:06:00.000
There are different solutions available on Internet.

88
00:06:00.000 --> 00:06:07.200
You can use MongoDB for that database consideration because email is not just text, but there are files

89
00:06:07.200 --> 00:06:07.830
also.

90
00:06:07.860 --> 00:06:12.660
There are images also, so you can use that MongoDB part because it's very advanced database.

91
00:06:13.020 --> 00:06:19.650
So for my purpose I'm considering only text and everything here, so I'm not using any database here.

92
00:06:20.190 --> 00:06:21.210
JSP Page.

93
00:06:22.050 --> 00:06:26.720
JSP Page is basically you want front end to send mail first.

94
00:06:27.800 --> 00:06:30.560
Then connecting that logic.

95
00:06:31.330 --> 00:06:36.130
It's a second thing and having some feels like it's a subject body of everything.

96
00:06:37.410 --> 00:06:39.390
You can use with GSP also.

97
00:06:39.510 --> 00:06:43.590
In addition with UI, I need some CSS files and some user file.

98
00:06:43.590 --> 00:06:46.590
I'm using your as default template for receiving mail.

99
00:06:47.220 --> 00:06:53.730
Then Java programs, which is basically the main logic behind the sending authentication part and checking

100
00:06:53.730 --> 00:06:53.970
part.

101
00:06:53.980 --> 00:06:59.940
I'm going to use your access to an email service Java program having that purpose.

102
00:06:59.940 --> 00:07:06.600
But here I'm using Gmail's APIs because it's very easy to create that part and some mail receiving fills

103
00:07:06.600 --> 00:07:07.880
printing in console.

104
00:07:07.890 --> 00:07:10.080
You can do that part also.

105
00:07:10.980 --> 00:07:14.430
So that's about how we are proceeding with the functional requirements.

106
00:07:14.550 --> 00:07:19.020
So let us see how we can set up our project first.

107
00:07:20.430 --> 00:07:25.850
So let me go to my ID first and let me configure this first.

108
00:07:29.220 --> 00:07:29.740
Okay.

109
00:07:30.180 --> 00:07:32.170
So this is my intelligent idea.

110
00:07:32.190 --> 00:07:34.590
You can check the front end part also here.

111
00:07:37.380 --> 00:07:38.100
For.

112
00:07:40.930 --> 00:07:43.090
Let me just customize this because.

113
00:07:44.820 --> 00:07:45.600
Besides.

114
00:07:50.280 --> 00:07:52.380
So this is my intent.

115
00:07:52.390 --> 00:07:55.290
The idea or home page you can see here.

116
00:07:55.380 --> 00:07:58.080
You can choose the default themes, everything here.

117
00:07:58.410 --> 00:08:01.050
So I set it to light theme.

118
00:08:01.870 --> 00:08:06.760
So here you can see your previous projects.

119
00:08:06.760 --> 00:08:10.350
If you already created if not created, you can check your blank.

120
00:08:10.810 --> 00:08:15.940
I'm using your intel idea Ultimate Edition, or you can use Community Edition.

121
00:08:15.960 --> 00:08:20.170
Also know what is and there are plugins and everything here.

122
00:08:20.590 --> 00:08:27.100
But before proceeding with anything, let me tell you two things here.

123
00:08:27.100 --> 00:08:30.580
I'm specifying again and again, which are very important here.

124
00:08:30.670 --> 00:08:39.310
First is download Smart Tomcat, which is Tomcat Server plugin, which is very useful and right to download

125
00:08:39.310 --> 00:08:40.360
this multi run.

126
00:08:41.050 --> 00:08:49.870
It's not community preferred, but it's very useful while developing this and my event which is already

127
00:08:49.870 --> 00:08:50.230
developed.

128
00:08:50.230 --> 00:08:56.080
But try to if you install already try to update this plugin which is we are going to use.

129
00:08:56.080 --> 00:08:57.700
So just go to projects.

130
00:08:59.390 --> 00:09:06.050
When you go to the projects, you can check your new projects, click on new projects.

131
00:09:06.050 --> 00:09:08.540
So due to system load.

132
00:09:08.780 --> 00:09:10.910
For me, it will take time to.

133
00:09:12.470 --> 00:09:13.130
Do this.

134
00:09:27.350 --> 00:09:28.690
So it will take.

135
00:09:28.790 --> 00:09:29.600
It is taking time.

136
00:09:31.450 --> 00:09:38.740
So as you can see previously, you can see this window, not the previous window default.

137
00:09:38.770 --> 00:09:43.990
You can check this window then go to the Java enterprise if you are using.

138
00:09:46.450 --> 00:09:48.760
So not ultimately different community relations.

139
00:09:48.760 --> 00:09:50.350
You cannot see these things.

140
00:09:50.350 --> 00:09:53.400
So just go with Java and you can add it later that part.

141
00:09:53.410 --> 00:09:58.930
But my preference, if you are using this, you are going to create Java Enterprise Edition.

142
00:09:59.230 --> 00:10:00.490
Give the name here.

143
00:10:00.670 --> 00:10:01.420
So.

144
00:10:05.290 --> 00:10:06.040
Sister in law.

145
00:10:06.040 --> 00:10:07.540
It's taking time for me.

146
00:10:25.750 --> 00:10:29.320
So sometimes you may face these errors while developing these.

147
00:10:29.360 --> 00:10:29.650
Okay.

148
00:10:29.650 --> 00:10:34.750
So in demo, let me give you the name as e mail.

149
00:10:37.540 --> 00:10:45.130
Think be patient email application, use the location then web application.

150
00:10:45.670 --> 00:10:50.350
If you cannot see any server, no application server, go to new.

151
00:10:51.420 --> 00:10:56.040
And Jews here don't get served and give the directory.

152
00:10:56.040 --> 00:11:03.450
I already downloaded Tomcat 9.4.8 its latest server and you can use it click your web application or

153
00:11:03.450 --> 00:11:09.660
choose maven choose language Java J Unit and Change Group to Azure.

154
00:11:09.660 --> 00:11:11.520
So I'm adding here.

155
00:11:13.160 --> 00:11:13.670
Email.

156
00:11:14.450 --> 00:11:15.170
1614.

157
00:11:15.200 --> 00:11:16.350
You can choose any.

158
00:11:16.370 --> 00:11:19.130
So I'm using systems that will automatically detect.

159
00:11:19.130 --> 00:11:23.960
If not, you have to add the JDK and you are good to go with this.

160
00:11:25.340 --> 00:11:26.180
So.

161
00:11:27.310 --> 00:11:27.760
Okay.

162
00:11:31.580 --> 00:11:33.580
It will take time to load that.

163
00:11:33.590 --> 00:11:33.970
Okay.

164
00:11:34.220 --> 00:11:35.450
Oh, now it's loaded.

165
00:11:35.870 --> 00:11:36.680
Click next.

166
00:11:38.270 --> 00:11:43.670
It will show the Java eight E version Tuesdays only because after this Jakarta started.

167
00:11:43.670 --> 00:11:44.900
So the syntax is different.

168
00:11:44.900 --> 00:11:47.210
So I'm using your Java eight version.

169
00:11:47.810 --> 00:11:49.160
Click your web profile.

170
00:11:49.640 --> 00:11:56.900
Or what you can do is instead of putting the web profile, you can use this web socket and servlet.

171
00:11:57.500 --> 00:11:58.490
So that's it.

172
00:11:58.490 --> 00:12:02.720
We are going to use your Node.js on or anything not we are going to use here.

173
00:12:03.170 --> 00:12:06.410
You can use your pin validation also, but it's not required.

174
00:12:07.040 --> 00:12:10.400
You create a profile, you can see it will consider it, but.

175
00:12:12.060 --> 00:12:16.370
And solid extremely web services.

176
00:12:16.380 --> 00:12:19.500
Also, if you want to add, you can add, but I'm adding.

177
00:12:19.500 --> 00:12:19.860
Yeah.

178
00:12:21.110 --> 00:12:22.160
Don't add anything.

179
00:12:23.850 --> 00:12:25.290
Click Finish.

180
00:12:26.980 --> 00:12:35.410
So it will create a default project for you with some indexed or DSP file, some servlet files.

181
00:12:35.770 --> 00:12:41.410
So you are going to delete that files because these are not required index or DSP as it is.

182
00:12:41.410 --> 00:12:44.050
But another file, we are going to delete that.

183
00:12:44.680 --> 00:12:45.400
So.

184
00:12:46.460 --> 00:12:54.170
This is all about how we can set up our project so it will automatically create the system default project

185
00:12:54.200 --> 00:12:55.430
as your requirements.

186
00:12:55.520 --> 00:13:04.040
Sometimes it may take time because of some loading issues and everything, because it's very useful.

187
00:13:04.090 --> 00:13:08.330
ID It takes time sometimes to develop everything.

188
00:13:08.750 --> 00:13:12.950
So now it's loading, it's preparing workplace workspace for me.

189
00:13:21.260 --> 00:13:22.010
So wait for.

190
00:13:22.700 --> 00:13:25.310
It will automatically create everything for me.

191
00:13:26.340 --> 00:13:33.000
So as you can see it's processing for hello solid which is we are going to delete that because we are

192
00:13:33.000 --> 00:13:35.100
not required for that purpose.

193
00:13:35.100 --> 00:13:41.940
So we just require index, dot, JSP and servlet files which I'm going to create in the next tutorial.

194
00:13:41.940 --> 00:13:48.390
But in this tutorial I'm just focusing on the setup we are going to set up and some servlet concepts

195
00:13:48.390 --> 00:13:48.750
also.

196
00:13:50.740 --> 00:13:54.400
So let me tell you what is the import XML?

197
00:13:55.120 --> 00:14:01.660
This is the dependency injection I'm using here, Marvin, as my project mark and I'm using my main.

198
00:14:01.660 --> 00:14:06.250
So the beautiful thing of Marvin, I don't require it to download any jar files or anything.

199
00:14:06.850 --> 00:14:11.680
It will automatically use that files through everything.

200
00:14:11.690 --> 00:14:15.040
As you can see, this is loaded and you can see here my one console.

201
00:14:15.460 --> 00:14:17.110
So let me minimize this part.

202
00:14:17.320 --> 00:14:24.790
So this is my index dot JSP is notice and this is my hello servlet.

203
00:14:25.750 --> 00:14:32.590
So this package and here you can see in the HRC main, if you go to these are the views here.

204
00:14:32.770 --> 00:14:38.440
If I go to packages meaning you can not see because it's currently loaded and indexing everything.

205
00:14:39.640 --> 00:14:41.070
What if I go to Java?

206
00:14:41.080 --> 00:14:46.420
You can see in the com part, which is basically application part, you can see this email and everything.

207
00:14:47.200 --> 00:14:49.390
So email application and everything.

208
00:14:50.230 --> 00:14:57.340
So I'm going to delete this later because I'm not interested in that part and web app for all the web

209
00:14:57.340 --> 00:14:58.180
containing part.

210
00:14:59.410 --> 00:15:02.920
So it's importing all the migrants in here.

211
00:15:04.590 --> 00:15:10.140
Because no, I mean, it's just like dependency injection, you know, to specify the dependency as

212
00:15:10.140 --> 00:15:13.970
a symbol in the form of XML and it will create everything form.

213
00:15:15.040 --> 00:15:16.990
So it's indexing, as you can see.

214
00:15:18.420 --> 00:15:20.110
And then once it's loaded.

215
00:15:21.630 --> 00:15:22.820
It will default.

216
00:15:22.980 --> 00:15:23.970
Give me everything.

217
00:15:25.790 --> 00:15:28.040
So while it's loading, it's now loaded.

218
00:15:28.250 --> 00:15:32.060
Just go to your Tomcat and edit configuration.

219
00:15:32.150 --> 00:15:34.490
This is the running configuration.

220
00:15:35.510 --> 00:15:37.640
So I hope you can see this.

221
00:15:37.910 --> 00:15:39.740
So I added this file.

222
00:15:40.530 --> 00:15:41.280
Then.

223
00:15:45.360 --> 00:15:46.050
Redeploy.

224
00:15:46.320 --> 00:15:47.460
To redeploy.

225
00:15:48.090 --> 00:15:52.170
If you want to change, I'm going to change your as you told them to.

226
00:15:52.320 --> 00:15:56.050
So why I'm changing because it is caught by my another service.

227
00:15:56.050 --> 00:16:00.420
So I'm going to change this am going to apply here.

228
00:16:01.020 --> 00:16:02.400
So as you can see, this is a plan.

229
00:16:02.400 --> 00:16:03.450
This is my URL.

230
00:16:04.710 --> 00:16:05.310
Hit enter.

231
00:16:06.510 --> 00:16:10.140
If you want to check your application is running or not, your server is correct or not.

232
00:16:10.200 --> 00:16:11.610
Just click here, run.

233
00:16:12.270 --> 00:16:13.380
So now it's indexing.

234
00:16:13.390 --> 00:16:14.910
It will take time to index everything.

235
00:16:15.810 --> 00:16:16.740
Analyzing.

236
00:16:20.460 --> 00:16:21.030
Okay.

237
00:16:21.030 --> 00:16:23.510
So hit enter.

238
00:16:23.520 --> 00:16:25.170
So it started building.

239
00:16:25.500 --> 00:16:32.720
So in this console, which is basically the downward console, you can see this executing and tasks

240
00:16:32.730 --> 00:16:34.680
in surrounding the dependencies.

241
00:16:35.730 --> 00:16:38.800
So while doing this building task, let us see what is this?

242
00:16:38.820 --> 00:16:44.520
So as you can see, these are the properties of Maven and this is the dependencies is asking like Java

243
00:16:44.520 --> 00:16:45.600
X servlet.

244
00:16:45.630 --> 00:16:50.990
So I haven't mentioned any Java s thing here.

245
00:16:51.000 --> 00:16:53.670
I just added this dependency.

246
00:16:53.670 --> 00:16:59.460
So it will take automatically dependencies from the internet and it will mean give me this J.W. Jupyter

247
00:16:59.460 --> 00:16:59.780
files.

248
00:16:59.790 --> 00:17:00.890
Also it's asking.

249
00:17:00.900 --> 00:17:06.450
So it's doing all these things on their own in Maven.

250
00:17:06.450 --> 00:17:14.070
So why I'm using here my values because of this, because I don't want to download any Java specific

251
00:17:14.070 --> 00:17:15.480
Java files to develop this.

252
00:17:15.480 --> 00:17:18.470
I can just do this contradiction.

253
00:17:18.630 --> 00:17:26.940
So what is a beautiful thing is here my developing this such cases as the industry level, the system

254
00:17:26.940 --> 00:17:32.700
configuration may differ from system to system, like someone is using another voice and I'm using another

255
00:17:32.700 --> 00:17:32.880
way.

256
00:17:32.880 --> 00:17:36.720
So it will useful for developing this part also.

257
00:17:36.930 --> 00:17:40.860
So currently it's building and it will take time to build everything.

258
00:17:40.950 --> 00:17:41.670
But.

259
00:17:45.000 --> 00:17:50.220
Build is complete now you can build is complete successfully so far or the first time building it will

260
00:17:50.220 --> 00:17:50.910
take time.

261
00:17:51.750 --> 00:17:55.980
After that, it will not take time to build because we are just adding the files.

262
00:17:55.980 --> 00:17:57.510
So it will compile.

263
00:17:57.510 --> 00:18:00.690
That building takes some one minute 20 seconds.

264
00:18:00.700 --> 00:18:07.500
So as you can see and if you go to the service, currently service is not started, but it's building.

265
00:18:08.160 --> 00:18:10.350
So for the first time building, it will take time.

266
00:18:11.160 --> 00:18:15.930
After that, it won't take time at all for the building purpose.

267
00:18:22.690 --> 00:18:24.240
So as you can see this finished.

268
00:18:24.250 --> 00:18:29.830
Now I'm connecting to the service and it's running and its output is going to display.

269
00:18:30.700 --> 00:18:34.600
So it's creating everything.

270
00:18:35.110 --> 00:18:36.970
It's copying everything.

271
00:18:36.970 --> 00:18:41.830
And or sometimes you may get some this note and everything here.

272
00:18:41.860 --> 00:18:46.870
Just try to stick and wait for some time to deploy.

273
00:18:46.870 --> 00:18:52.360
Everything, as you can see, connected to the server, it will automatically create server for me.

274
00:18:52.630 --> 00:18:53.980
So wait for some time.

275
00:18:53.980 --> 00:18:56.180
It will automatically deploy server for.

276
00:18:58.210 --> 00:19:01.630
So as you can see, these are the start up in the server.

277
00:19:01.990 --> 00:19:04.810
You can see the these are the local host things.

278
00:19:05.500 --> 00:19:08.350
And now you can see these are the JSP.

279
00:19:08.380 --> 00:19:10.770
This is the JSP page basically for me.

280
00:19:10.780 --> 00:19:12.520
And if I click Hello Servlet.

281
00:19:15.970 --> 00:19:19.750
I can go to this hello hello world, which is basically my software part.

282
00:19:20.290 --> 00:19:25.130
So my store server is running now.

283
00:19:25.420 --> 00:19:26.110
Let me.

284
00:19:27.400 --> 00:19:28.510
We all this over.

285
00:19:29.800 --> 00:19:35.830
So as the system loads on my system, sometimes it may take time to.

286
00:19:37.010 --> 00:19:37.600
This.

287
00:19:37.790 --> 00:19:39.320
So this is the XML.

288
00:19:39.950 --> 00:19:48.800
And now I'm what I'm going to mention is here you can delete this everything delete and you can clear

289
00:19:48.800 --> 00:19:51.470
out this JSP also till this.

290
00:19:52.600 --> 00:19:57.370
Because this is no more required thing for us to save this.

291
00:19:59.090 --> 00:20:02.600
And you can delete this comment also.

292
00:20:02.630 --> 00:20:05.860
So in further videos I'm going to create Java and index your decimal.

293
00:20:06.020 --> 00:20:07.300
Hope you understand this part.

294
00:20:07.310 --> 00:20:10.010
I will tell you the basics of solids, everything.

295
00:20:10.280 --> 00:20:16.910
So in the next videos, let us also consider some this dependency injection.

296
00:20:17.000 --> 00:20:18.080
Also, I will tell you.

297
00:20:18.440 --> 00:20:19.040
Thank you.
