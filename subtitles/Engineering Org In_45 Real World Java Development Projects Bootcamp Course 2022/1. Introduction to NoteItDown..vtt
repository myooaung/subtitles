WEBVTT
1
00:00:00.910 --> 00:00:02.050
Hello, everyone.

2
00:00:02.080 --> 00:00:09.910
So today we are going to learn a new project in Java in the City of Learning Java project.

3
00:00:10.540 --> 00:00:19.540
So basically this application is a notepad clone made in Java and we have named it as Node in Down.

4
00:00:19.930 --> 00:00:28.720
So in this application, we are going to learn our very own notepad application in our system and that

5
00:00:28.720 --> 00:00:30.010
tool in Java.

6
00:00:30.100 --> 00:00:38.260
So using basic Java concepts and libraries, we are going to create a very, very beautiful notepad

7
00:00:38.260 --> 00:00:42.790
application with multiple features inside it.

8
00:00:43.390 --> 00:00:50.560
So this notepad feature contains a file, an edit and a help button in the navigation panel.

9
00:00:51.190 --> 00:00:54.790
This is the about page of the notepad application.

10
00:00:55.240 --> 00:01:01.570
The about page gives us a quick intro of this application we are going to make.

11
00:01:01.780 --> 00:01:07.240
So this I have set it as conventional notepad version 2.0.

12
00:01:07.420 --> 00:01:15.250
So we can see that it is an appropriate edition of the conventional notepad we are going to use like

13
00:01:15.250 --> 00:01:19.290
we are using from many years in our system.

14
00:01:19.300 --> 00:01:27.040
So yes, we are going to make a notepad of our own in Java with very simple hard coding.

15
00:01:28.150 --> 00:01:33.820
So let us take a look at this application and what it consists of.

16
00:01:34.810 --> 00:01:38.350
So this is the about page of the notepad application.

17
00:01:38.800 --> 00:01:40.900
Or we can say it as noted down.

18
00:01:41.320 --> 00:01:45.610
Also, this is the home page of the loaded down application.

19
00:01:45.760 --> 00:01:52.270
The home page consists of the title bar, the bar and the body section.

20
00:01:52.720 --> 00:01:56.950
Thus bar contains various options itself.

21
00:01:57.280 --> 00:02:02.080
So let us take a look at the specifications of this project.

22
00:02:03.400 --> 00:02:11.260
So we are going to make a notepad clone, and this is the main specification of this project.

23
00:02:12.340 --> 00:02:19.960
In this notepad, user can input a text by writing it with any style on the screen and you will get

24
00:02:19.960 --> 00:02:22.180
output as written.

25
00:02:22.360 --> 00:02:26.170
The type text output on the screen of the user.

26
00:02:27.430 --> 00:02:33.040
The notepad alone contains features such as find, edit, help, and so on.

27
00:02:34.370 --> 00:02:40.490
Even after writing the text document, the project we are making, the document we are going to create.

28
00:02:40.850 --> 00:02:49.190
We can save it, print it, copy the part of the text, paste it anywhere in the text field, wherever

29
00:02:49.190 --> 00:02:55.070
we want, and so many other interesting features this app consists of.

30
00:02:55.520 --> 00:03:01.420
So we can also save our text, which are which we are writing.

31
00:03:01.430 --> 00:03:10.550
We can open we can even open the investment documents that text document inside our system in this notepad.

32
00:03:11.270 --> 00:03:15.380
So I hope you got an idea about this project.

33
00:03:15.410 --> 00:03:23.990
Like apart from editing, saving, copying, pasting it, we can even open files from our system and

34
00:03:23.990 --> 00:03:27.170
edit it also and save it after editing.

35
00:03:27.560 --> 00:03:33.500
So there is no foundation that you have to write text head only and then save it.

36
00:03:33.800 --> 00:03:39.530
You can also use an inbuilt document and that could be edited also.

37
00:03:40.100 --> 00:03:42.700
So let us take a look at the.

38
00:03:43.760 --> 00:03:48.620
Concepts we are going to learn after completing this project.

39
00:03:49.580 --> 00:03:50.180
Yes.

40
00:03:50.180 --> 00:03:55.430
So the first question may arise in your right mind before going to make any project.

41
00:03:55.550 --> 00:03:58.910
But what will be the consequences of this project?

42
00:03:59.240 --> 00:04:04.610
What are the relevant concepts we are going to learn after making this project?

43
00:04:04.640 --> 00:04:06.740
So you are not done.

44
00:04:06.830 --> 00:04:11.570
This question is very natural concern.

45
00:04:11.570 --> 00:04:14.200
One can arise before making a project.

46
00:04:14.300 --> 00:04:21.620
So yes, let me give a quick explanation about the concepts behind this project.

47
00:04:22.430 --> 00:04:28.490
So my project is made in abstract window thinking of the abstract.

48
00:04:28.650 --> 00:04:34.280
The toolkit is the part of the Java foundational classes.

49
00:04:34.310 --> 00:04:38.840
So AWP it is abbreviated as so.

50
00:04:38.840 --> 00:04:47.030
Yes, AWP is a standard API for providing a graphical user interface for any Java program.

51
00:04:47.330 --> 00:04:55.220
So yes, we are going to build this notepad as a text window interface like you will, getting a frame

52
00:04:55.220 --> 00:04:58.700
outside the application in a separate window.

53
00:04:58.730 --> 00:05:08.600
So with the help of AWP, we are going to do this together, the UI of the application and it gives

54
00:05:08.600 --> 00:05:18.080
a very good experience to the users of the application, a good experience to the user using this interface

55
00:05:18.110 --> 00:05:26.300
as it will open in a separate window, they can perform their tasks and there is no no confliction.

56
00:05:26.810 --> 00:05:27.410
Yes.

57
00:05:27.410 --> 00:05:34.130
No contradiction between the program and the window interface of the application as we see.

58
00:05:34.650 --> 00:05:43.430
So AWP was designed as a common set of tools for the UI design that could work on a variety of platforms.

59
00:05:43.920 --> 00:05:48.960
But the program is written in Java.

60
00:05:48.980 --> 00:05:51.590
So this is a core Java tutorial.

61
00:05:51.920 --> 00:05:55.640
There are no complex languages and libraries involved.

62
00:05:55.640 --> 00:06:03.100
As I said earlier, since Code Java is being used to the to hardcore program.

63
00:06:03.740 --> 00:06:10.010
So you will be going to learn a Java notepad application to make a Java notepad.

64
00:06:10.310 --> 00:06:10.970
Yes.

65
00:06:11.300 --> 00:06:16.250
And if there is Java, then there will be classes and objects and.

66
00:06:17.450 --> 00:06:23.900
Of course, you will be going to learn the applications of classes, objects and methods in Java with

67
00:06:23.900 --> 00:06:26.690
examples while making this project.

68
00:06:27.590 --> 00:06:36.860
So yes, also this project is going to use various components of Java string like frame, g, text,

69
00:06:36.890 --> 00:06:39.050
Java, etc..

70
00:06:39.140 --> 00:06:48.530
Like Java String contains a variety of components which helps us to apply it in our program without

71
00:06:48.530 --> 00:06:49.700
writing so much.

72
00:06:49.700 --> 00:06:59.780
Often we just have to call the components and the output is output is shown on the interface of the

73
00:06:59.780 --> 00:07:02.240
user where the app is being run.

74
00:07:03.320 --> 00:07:10.910
So you may be wondering that why this Java thing when we are already using AWP in Java?

75
00:07:11.270 --> 00:07:20.930
So the answer to this question is showing the improved UI API that extends the abstract thinking.

76
00:07:21.140 --> 00:07:27.620
So basically swing is an extension to the API we are using in Java.

77
00:07:27.740 --> 00:07:35.330
So of course, if it is an extension, it contains more features and more classes, which helps us to

78
00:07:35.330 --> 00:07:40.550
make our projects more attractive in many ways.

79
00:07:41.840 --> 00:07:49.190
So with the use of abstraction in the toolkit and three, together we are going to build a good library

80
00:07:49.190 --> 00:07:54.990
for this application and use all the components required in this application.

81
00:07:55.010 --> 00:08:03.470
So let me give you a quick introduction about what the Java AWP hierarchy is that we are going to use

82
00:08:03.470 --> 00:08:04.460
in this format.

83
00:08:04.760 --> 00:08:14.300
Like I will introduce you with terms as a component container window panel and see.

84
00:08:14.420 --> 00:08:16.730
So let's get into it.

85
00:08:17.630 --> 00:08:22.970
So yes, this is Java AWP hierarchy.

86
00:08:23.480 --> 00:08:32.990
The hierarchy of Java AWP classes are listed here, like if we call Java AWP package in our Java program,

87
00:08:32.990 --> 00:08:34.700
what we are actually getting.

88
00:08:35.000 --> 00:08:42.880
So we are getting a component which consists container and inside the container we have a window and

89
00:08:42.890 --> 00:08:43.460
a panel.

90
00:08:44.060 --> 00:08:46.490
Inside the window we have a frame.

91
00:08:47.060 --> 00:08:48.050
So.

92
00:08:48.820 --> 00:08:49.630
Yes.

93
00:08:49.870 --> 00:08:51.400
What our container is.

94
00:08:51.400 --> 00:08:53.810
Container is a component in AWP.

95
00:08:53.860 --> 00:08:56.820
Container is a subclass of the component class.

96
00:08:56.830 --> 00:08:57.490
Yes.

97
00:08:57.610 --> 00:09:02.860
As we have already seen, container is the subclass of the component class.

98
00:09:02.890 --> 00:09:04.090
What is a panel?

99
00:09:04.330 --> 00:09:07.660
A panel is a concrete subclass of container.

100
00:09:09.190 --> 00:09:12.640
So aligning the components here.

101
00:09:14.150 --> 00:09:18.080
Some the hierarchy sees that we have a containing.

102
00:09:18.230 --> 00:09:29.000
So this part is the container which contains Barton's text filled tables and so many other things.

103
00:09:29.570 --> 00:09:32.690
The panel is the concrete surplus of the container.

104
00:09:32.780 --> 00:09:35.360
So yes, this is the panel.

105
00:09:35.450 --> 00:09:37.790
The inside part is the panel.

106
00:09:38.510 --> 00:09:43.970
Panel does not contains the title bar or menu, not even a border.

107
00:09:44.240 --> 00:09:47.390
So is the part excluding the border.

108
00:09:47.390 --> 00:09:50.480
And the title bar is our panel.

109
00:09:50.930 --> 00:09:56.990
The window window is the complete window we are going to open after running the project.

110
00:09:57.170 --> 00:10:04.760
And the frame in the frame of this project, like we have a frame for title, we have a frame for the

111
00:10:04.790 --> 00:10:08.760
nav bar and we have upstream for the main body of the notice.

112
00:10:08.930 --> 00:10:18.500
So yes, we have given all the prerequisite knowledge is prerequisite knowledge about this project.

113
00:10:18.650 --> 00:10:26.720
So now we are going to run the code of the program and learn how to write the code.

114
00:10:27.810 --> 00:10:33.660
We are going to learn each part of the code that what this part is doing and what that part is doing.

115
00:10:33.660 --> 00:10:40.550
And by step by step, we are going to create our very own notepad in Java.

116
00:10:40.560 --> 00:10:49.950
So without any further delays, let's start with creating a new Java project in our IDE.
