WEBVTT
1
00:00:00.270 --> 00:00:03.390
You have to recall what we have done in the sheep class.

2
00:00:03.690 --> 00:00:11.570
The sheep class provides information about a Tetris piece that holds the seven deadly sheep names and

3
00:00:12.270 --> 00:00:14.820
will be called as the new sheep.

4
00:00:15.210 --> 00:00:21.150
And the cohort holds the actual coordinates of our tight space.

5
00:00:21.660 --> 00:00:29.370
And this will be the court's table that holds all the possible coordinate values of the Tetris pieces.

6
00:00:29.370 --> 00:00:36.180
And this is a template from which all pieces take their coordinates, value all the possible values.

7
00:00:36.360 --> 00:00:44.310
So now what we have done in this thing we have done, we put one row of the coordinate values from the

8
00:00:44.310 --> 00:00:47.880
court's table into the court's area of a Tetris piece.

9
00:00:48.300 --> 00:00:53.160
We know, unlike in C++, Java names are full classes and the ordinary matter.

10
00:00:53.160 --> 00:01:01.050
Here this returns the current portion of the enum type in the animal object and after this they are

11
00:01:01.050 --> 00:01:06.900
these are the coordinate value a bit more the code that receives the coordinates of the Tetris piece.

12
00:01:07.140 --> 00:01:12.960
Suppose, for example, we have seen the minus one comma one, the minus one zero and the zero zero

13
00:01:12.960 --> 00:01:17.070
and the zero comma minus one represented a rotated shape.

14
00:01:17.460 --> 00:01:19.830
So here we have done with that thing.

15
00:01:20.280 --> 00:01:27.180
Similar to that we have created our another method to the rotate left and this code rotates a piece

16
00:01:27.180 --> 00:01:28.110
to the left.

17
00:01:28.110 --> 00:01:30.480
The square does not have to be rotated.

18
00:01:30.510 --> 00:01:32.640
That's why we simply return.

19
00:01:33.920 --> 00:01:37.970
This statement, the reference to the current object.

20
00:01:38.330 --> 00:01:44.060
Now to this we have to create another class and name it as the board.

21
00:01:45.500 --> 00:01:52.910
This is where the game logic is located, so go with package and here we will create a new class and

22
00:01:52.910 --> 00:01:54.500
name it as the board.

23
00:01:57.270 --> 00:01:59.040
In this board class.

24
00:01:59.310 --> 00:02:02.100
Firstly, we have to write.

25
00:02:03.730 --> 00:02:06.170
We will take first four constraints.

26
00:02:06.180 --> 00:02:22.470
So what we will do, we will write private final and we will take the board and your word and

27
00:02:25.320 --> 00:02:32.010
provide it to the ten and the private final

28
00:02:35.910 --> 00:02:36.660
board.

29
00:02:37.320 --> 00:02:41.100
Height is equal to 22.

30
00:02:43.260 --> 00:02:51.870
And another thing when we the private final int period.

31
00:02:54.100 --> 00:02:55.200
Interval.

32
00:02:57.010 --> 00:02:59.860
Equal to 300.

33
00:03:01.420 --> 00:03:02.060
Semicolon.

34
00:03:02.890 --> 00:03:04.690
So here we have four.

35
00:03:05.140 --> 00:03:05.650
Sorry.

36
00:03:05.860 --> 00:03:07.570
We need one more.

37
00:03:07.600 --> 00:03:11.520
I think we have two here.

38
00:03:11.530 --> 00:03:12.890
Three constraints.

39
00:03:12.910 --> 00:03:14.200
The board width.

40
00:03:14.200 --> 00:03:15.640
The board height.

41
00:03:15.700 --> 00:03:17.050
And the.

42
00:03:17.820 --> 00:03:19.510
The board width and height.

43
00:03:19.510 --> 00:03:21.060
Define the size of the work.

44
00:03:21.250 --> 00:03:25.300
The period interval constraint defines the speed of the game.

45
00:03:26.110 --> 00:03:39.400
So after this, we need another things we have to call private time or C as time and under one boolean.

46
00:03:40.420 --> 00:03:42.250
And here we'll write.

47
00:03:43.340 --> 00:03:59.840
Is falling, finished and headed it to the falls and the private pavilion is almost at the falls.

48
00:04:04.160 --> 00:04:05.360
It ain't.

49
00:04:06.530 --> 00:04:07.220
No.

50
00:04:08.680 --> 00:04:13.210
Nine and removed it to zero.

51
00:04:15.250 --> 00:04:16.900
We need private.

52
00:04:18.960 --> 00:04:25.840
It's going to end and this code X and set it to zero.

53
00:04:27.220 --> 00:04:35.290
Similar to this, we have to call in Y and Z to zero.

54
00:04:37.180 --> 00:04:37.550
Here.

55
00:04:38.800 --> 00:04:44.350
So these are not we need one more the status bar here.

56
00:04:45.340 --> 00:05:04.660
So within the primate corner, the legal status bar done and the primate chief here ordered to be done.

57
00:05:05.680 --> 00:05:09.730
The primate needs a permanent.

58
00:05:13.120 --> 00:05:15.750
It will be up and done.

59
00:05:16.080 --> 00:05:19.830
So we have some important variables are initialized here.

60
00:05:19.980 --> 00:05:21.750
We have to import this first.

61
00:05:26.440 --> 00:05:27.790
This one too.

62
00:05:30.160 --> 00:05:31.540
So here everything is done.

63
00:05:31.540 --> 00:05:36.160
We have initialized some important variables here that is following.

64
00:05:36.160 --> 00:05:44.130
Finish determines if the Tetris shape has finished falling and we then need to create a new shape here

65
00:05:44.140 --> 00:05:46.210
that is started.

66
00:05:47.110 --> 00:05:47.950
Just a second.

67
00:05:48.760 --> 00:05:51.550
The status bar.

68
00:05:53.050 --> 00:05:58.060
We need another one that is a starter is used to check if the game has started.

69
00:05:58.210 --> 00:06:03.100
Likewise, we need exposed here.

70
00:06:03.130 --> 00:06:07.080
This one is supposed is used to check at the game exposed.

71
00:06:08.380 --> 00:06:10.230
There are no lines removed.

72
00:06:10.240 --> 00:06:15.070
Count the number of lines that we have removed so far.

73
00:06:15.100 --> 00:06:21.330
The core X and the core Y determine the actual position of the following shape.

74
00:06:24.820 --> 00:06:25.350
Here.

75
00:06:25.360 --> 00:06:26.050
This one.

76
00:06:28.400 --> 00:06:31.370
So after this, what we have to do.

77
00:06:32.680 --> 00:06:42.940
Firstly, we don't do this just extends Japan.

78
00:06:44.230 --> 00:06:45.670
We have more to do this

79
00:06:48.350 --> 00:06:48.600
year.

80
00:06:49.480 --> 00:06:53.290
What we will do, we will do the public.

81
00:06:54.370 --> 00:06:55.960
Firstly, the constructor.

82
00:06:56.320 --> 00:07:01.810
So here we will write that transparent.

83
00:07:04.780 --> 00:07:08.170
Write this one a transparent.

84
00:07:10.110 --> 00:07:10.830
G.

85
00:07:13.260 --> 00:07:15.260
We will create another class.

86
00:07:15.270 --> 00:07:18.060
It will be name as a class actress.

87
00:07:18.150 --> 00:07:22.010
So we will do that first finish.

88
00:07:22.470 --> 00:07:23.130
So.

89
00:07:25.840 --> 00:07:31.260
Go to the Java one import chip in here.

90
00:07:32.470 --> 00:07:44.680
What we will do under this contract constructor, we have to write initial word and provide parent and

91
00:07:45.580 --> 00:07:51.040
create the initial board method as well under which we have to write our logic.

92
00:07:52.280 --> 00:07:56.210
So here we will do one thing.

93
00:07:57.200 --> 00:08:01.340
Firstly, we have to take the focus.

94
00:08:01.670 --> 00:08:16.610
So what we will do, we will write the private void initial board that is apparent and curly bracket

95
00:08:16.610 --> 00:08:20.660
here and call the set focus table.

96
00:08:22.220 --> 00:08:25.790
I think here focused or focus it will.

97
00:08:27.130 --> 00:08:33.390
Focus, laser focus and provide the default value with the true.

98
00:08:35.500 --> 00:08:41.350
You see this bar, right?

99
00:08:41.530 --> 00:08:44.080
Called the parent dot.

100
00:08:44.170 --> 00:08:47.730
We need to get status bar matter.

101
00:08:48.370 --> 00:08:52.560
We will create a new matter at status bar.

102
00:08:52.570 --> 00:08:56.030
Our getter here.

103
00:08:56.050 --> 00:08:56.860
This one.

104
00:08:58.380 --> 00:09:00.410
Now we have to add it.

105
00:09:00.910 --> 00:09:10.510
Even so, we will write add listener and provide to the new mm p.

106
00:09:12.120 --> 00:09:17.820
This adds the specified key listener to receive key events from this component.

107
00:09:17.830 --> 00:09:19.360
So what we will do?

108
00:09:20.470 --> 00:09:24.800
We have to write the adapter when done.
