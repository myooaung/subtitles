1
00:00:00,790 --> 00:00:05,530
So in this video, we will be talking about the next three classes of this project that is homegrown

2
00:00:05,530 --> 00:00:08,380
Java, Add, customer or Java, and we have customer Java.

3
00:00:08,380 --> 00:00:10,480
So let's start with the home file.

4
00:00:10,480 --> 00:00:13,150
It is defined inside the package cab booking system.

5
00:00:13,150 --> 00:00:18,010
We have imported the necessary packages and after that we have defined our home class, which is extending

6
00:00:18,010 --> 00:00:18,490
the frame.

7
00:00:18,490 --> 00:00:23,950
There is a string type of variable username inside the public domain is a method we have called a new

8
00:00:23,980 --> 00:00:27,010
home with the null value and set the visibility as true.

9
00:00:27,040 --> 00:00:32,350
After that we have defined the public home with the parameter string username heading as cab booking

10
00:00:32,350 --> 00:00:38,460
system and the set setting the current instance of username to the past a string username.

11
00:00:38,470 --> 00:00:42,340
After that there is a foreground color setting as callachan and set the layout as null.

12
00:00:44,050 --> 00:00:46,510
Then what we are doing is we are setting an image with the help of image.

13
00:00:46,510 --> 00:00:52,090
I can image objects passing that image to a new label and setting the bound and location size for that

14
00:00:52,090 --> 00:00:53,950
label and adding that label to our frame.

15
00:00:55,470 --> 00:01:01,410
After that there is a labor transport gap and there is a labor setting for around colour for it, which

16
00:01:01,410 --> 00:01:06,840
is white and fond family type and size for it, setting bounds for that to set its location and size

17
00:01:06,840 --> 00:01:08,940
and adding that to our new label.

18
00:01:09,330 --> 00:01:13,420
After that, we are creating a menu bar and setting that menu bar to the frame.

19
00:01:13,440 --> 00:01:18,720
After that, we are adding a menu element named as customer, setting its foreground colour as blue

20
00:01:18,720 --> 00:01:20,400
and adding that to our menu bar.

21
00:01:20,490 --> 00:01:22,140
Now we are defining the.

22
00:01:22,990 --> 00:01:24,730
Menu items for that menu element.

23
00:01:24,730 --> 00:01:25,770
First is add customer.

24
00:01:25,780 --> 00:01:27,370
Second is update customer detail.

25
00:01:27,400 --> 00:01:28,690
Third is customer detail.

26
00:01:28,690 --> 00:01:29,020
Fourth.

27
00:01:29,770 --> 00:01:31,000
Delete customer details.

28
00:01:31,000 --> 00:01:36,380
So these are the menu items inside the menu element customer.

29
00:01:36,400 --> 00:01:41,920
So we have added these menu items to that customer menu element respectively.

30
00:01:41,920 --> 00:01:43,580
And when am I one?

31
00:01:43,600 --> 00:01:44,010
Am I too?

32
00:01:44,020 --> 00:01:44,500
Am I three?

33
00:01:44,500 --> 00:01:49,630
And am I for respect for that customer, updated customer view customer and delete customer details.

34
00:01:49,870 --> 00:01:52,060
Then we have defined action over this.

35
00:01:53,880 --> 00:01:55,530
Menu items so far am I one?

36
00:01:55,530 --> 00:02:00,050
We have defined the action performance method inside which we will be calling new customer with the

37
00:02:00,090 --> 00:02:02,460
current user name and set the visibility as true.

38
00:02:02,670 --> 00:02:09,720
So we will be adding a calling the add customer class with the current username if the action is not

39
00:02:09,720 --> 00:02:12,330
performed, is on menu item one.

40
00:02:12,330 --> 00:02:16,920
Similarly, if the menu item too, then we will be calling new update customer with the current username.

41
00:02:16,920 --> 00:02:19,830
Similarly, if the menu item is three, then we will be calling.

42
00:02:21,380 --> 00:02:26,900
View customer class with ten the visibility as to if the menu item is selected from the phone and action

43
00:02:26,900 --> 00:02:32,120
performed on it, then we will be calling new delete customer and set the visibility as to after that.

44
00:02:32,120 --> 00:02:36,710
What we are doing is we will be creating another menu element as book and recap.

45
00:02:36,710 --> 00:02:43,320
It said the foreground colour is as red and background colour as sorry, adding that to our menu bar.

46
00:02:43,430 --> 00:02:46,860
After that we are adding menu item inside it.

47
00:02:46,880 --> 00:02:50,960
That is a book cap and another menu item as will book the cap.

48
00:02:51,110 --> 00:02:56,120
Then we have defined adding action performed over the menu.

49
00:02:56,120 --> 00:02:56,960
Item seven.

50
00:02:57,320 --> 00:03:02,780
If the book tab will be chosen, then we will be calling new cap with the current username and the visibility

51
00:03:02,780 --> 00:03:03,740
as through.

52
00:03:05,140 --> 00:03:10,750
After that we will be defining menu item five X and performance method and inside which if the View

53
00:03:10,780 --> 00:03:16,330
book gap is chosen, then we will be calling new book The Gap class with the current username and send

54
00:03:16,330 --> 00:03:17,410
the results to.

55
00:03:17,800 --> 00:03:22,540
After that, we have defined another menu element as book intensity gaps and the foreground color as

56
00:03:22,540 --> 00:03:24,250
blue and adding that to our menu bar.

57
00:03:24,280 --> 00:03:28,720
Similarly, it is also having three menu items will caps book gap and will book gap.

58
00:03:28,720 --> 00:03:34,540
So if the view gap menu item action performance is on the Gap menu item, then we'll be calling our

59
00:03:34,810 --> 00:03:37,210
View Gap class and set the visibility as true.

60
00:03:38,750 --> 00:03:46,560
And if the menu item nine will be executed event on menu item nine, then we will be here.

61
00:03:46,580 --> 00:03:50,510
Define the action, perform the event and we will be calling Candlestick Cab with the current user name

62
00:03:50,510 --> 00:03:51,800
and sell the visibility as true.

63
00:03:51,950 --> 00:03:59,570
And if the will book the cap class is a menu item has been selected, then what we are doing is defining

64
00:03:59,570 --> 00:04:03,920
the action perform method and calling the intensity booked cap class and with the current user name

65
00:04:03,920 --> 00:04:04,610
and setting is visible.

66
00:04:04,630 --> 00:04:05,450
It's true.

67
00:04:05,570 --> 00:04:12,290
Similarly, there is another menu element as transport setting its foreground calories red and adding

68
00:04:12,290 --> 00:04:17,840
that to our menu bar and containing two menu items book package or billboard package.

69
00:04:17,840 --> 00:04:23,390
So if the book package menu item event is performed on the book package menu item, then we will be

70
00:04:23,390 --> 00:04:29,120
calling our new tracking class with the current user name and set the visibility as to if the event

71
00:04:29,120 --> 00:04:30,830
is performed on the booked package.

72
00:04:30,830 --> 00:04:35,180
Then we will be calling our tracking details class with the current user name and set the visibility

73
00:04:35,180 --> 00:04:36,110
as true.

74
00:04:37,420 --> 00:04:42,640
Similarly, what we are doing is there is another menu item named as Bill and we have set the foreground

75
00:04:42,640 --> 00:04:45,340
color as blue and adding that menu item to our menu bar.

76
00:04:45,370 --> 00:04:48,370
After that, it will be containing a menu item check bill.

77
00:04:48,370 --> 00:04:51,730
So if the event is performed on that check bill menu item.

78
00:04:51,730 --> 00:04:55,660
So we will be calling our new check bill class with the current user name and set the visibility as

79
00:04:55,810 --> 00:04:56,320
true.

80
00:04:56,470 --> 00:05:01,390
There is another menu item as the payment, so we will be setting the foreground color as red and adding

81
00:05:01,390 --> 00:05:02,950
that menu item to our menu bar.

82
00:05:02,950 --> 00:05:04,860
And then we will be defining its menu item.

83
00:05:04,870 --> 00:05:12,010
Pay the payment inside that payment menu element and we are adding that menu item to that menu element

84
00:05:12,010 --> 00:05:12,600
payment.

85
00:05:12,610 --> 00:05:19,510
We are defining the action, perform method and call our payment class if the pay the payment menu item

86
00:05:19,510 --> 00:05:21,880
is being selected or even performed on that.

87
00:05:23,870 --> 00:05:28,700
At last there is another menu named as utility set the foreground color as blue, adding that to our

88
00:05:28,700 --> 00:05:28,940
menu.

89
00:05:28,940 --> 00:05:30,440
But it does contain three.

90
00:05:31,430 --> 00:05:34,460
Yes, it will contain two menu items, notepad and calculator.

91
00:05:34,490 --> 00:05:37,360
Adding that to that menu element.

92
00:05:37,370 --> 00:05:42,290
After that, if the notepad will be selected, then we will be calling or executing runtime red dot,

93
00:05:42,290 --> 00:05:45,650
get runtime and executing the notepad file.

94
00:05:45,920 --> 00:05:50,630
If the calculator is being selected, then we will be executing our calculator, which is a standard

95
00:05:50,630 --> 00:05:51,320
calculator.

96
00:05:52,710 --> 00:05:58,860
Then there is another menu item M7 labeled as about set the foreground colour as red and menu, adding

97
00:05:58,860 --> 00:05:59,490
that to our menu.

98
00:05:59,490 --> 00:06:06,960
But it will be containing a menu item about and if that about event is performed on that about menu

99
00:06:06,960 --> 00:06:10,260
item, then we'll be calling our new about class and send the results to.

100
00:06:11,830 --> 00:06:15,700
After that, we have set the exchange strategy from that, maximized both.

101
00:06:15,700 --> 00:06:19,930
And after that we have set the visibility as to and get the content bands at the background color as

102
00:06:19,930 --> 00:06:20,850
white for the window.

103
00:06:20,860 --> 00:06:23,760
So this is all about the home dot Java class.

104
00:06:23,770 --> 00:06:27,310
Let's go and move to the add customer class.

105
00:06:27,310 --> 00:06:28,870
So here is that customer class.

106
00:06:28,870 --> 00:06:31,150
This class is defined inside the cab booking system.

107
00:06:31,150 --> 00:06:37,120
We have imported the necessary package whose classes and methods will be we will be using in this file.

108
00:06:37,150 --> 00:06:40,630
So the class add customer is extending the frame.

109
00:06:40,630 --> 00:06:43,870
We have defined the connection variable as null and prepare the statement as null.

110
00:06:43,870 --> 00:06:49,360
There is a one private panel type of panel variable and the text field a text field.

111
00:06:49,360 --> 00:06:52,120
There are one combo box and two radio buttons and the one choice.

112
00:06:53,530 --> 00:06:58,270
Inside the main function we have called the Invoke Invoke Letter or enable and define the public run

113
00:06:58,270 --> 00:07:02,410
method inside which we have created the current instance of that customer class and set the visibility

114
00:07:02,410 --> 00:07:07,990
as true now inside the public, add customer which is throwing a scale exception we have defined, we

115
00:07:07,990 --> 00:07:09,520
have printed the user name.

116
00:07:09,520 --> 00:07:11,200
After that we have set the bound for the frame.

117
00:07:11,200 --> 00:07:14,590
We have set the content panel and adding that to our frame.

118
00:07:14,590 --> 00:07:16,030
After that, set the layout as null.

119
00:07:16,060 --> 00:07:22,230
Then we have added an image to that our ADD customer class and added that image to a label settings

120
00:07:22,600 --> 00:07:26,140
size of the label and location of the label and added that label to our frame.

121
00:07:26,170 --> 00:07:31,180
After that there is another label as new customer forum for which we have defined the font, family

122
00:07:31,180 --> 00:07:34,810
type and size, setting its location and size and adding that to our content pane.

123
00:07:34,810 --> 00:07:39,310
Similarly, there is a label for the user name, setting its location and size and adding that to content

124
00:07:39,310 --> 00:07:39,730
pane.

125
00:07:40,060 --> 00:07:45,010
With respect to text field, there is a text field seven setting its bound size and location and adding

126
00:07:45,010 --> 00:07:47,440
that to our content pane and its maximum size as ten.

127
00:07:49,090 --> 00:07:54,830
After that, there is a label ID for the ID setting its bond size and adding that to our content pane.

128
00:07:54,850 --> 00:07:58,990
Similarly, there is a combo box which is storing a string array named as passport, Aadhaar card,

129
00:07:58,990 --> 00:08:02,500
voter ID and driving license and setting its bounds.

130
00:08:03,880 --> 00:08:05,690
Which will set its location and size.

131
00:08:05,710 --> 00:08:08,780
After that, what we are doing adding that combo works to our content pane.

132
00:08:08,800 --> 00:08:13,180
Similarly, there is a label for the number setting its size and location and adding that to our content

133
00:08:13,180 --> 00:08:13,580
pane.

134
00:08:13,600 --> 00:08:18,700
Then there is a text field, even setting its size location and adding that to our content pane and

135
00:08:18,700 --> 00:08:20,260
setting its maximum size to ten.

136
00:08:20,470 --> 00:08:26,920
Then there is the label label for the name, setting its size and location, adding that label to our

137
00:08:26,920 --> 00:08:27,640
content pane.

138
00:08:27,670 --> 00:08:33,190
Similarly, there is a text field for that respect to name label, setting its size and location and

139
00:08:33,190 --> 00:08:36,280
adding that to our content pane and its maximum size is ten.

140
00:08:37,900 --> 00:08:43,090
Then we will be setting a label for the gender and its setting its location size and adding that to

141
00:08:43,090 --> 00:08:44,530
our content.

142
00:08:44,710 --> 00:08:50,290
Similarly, there is a R1 radio button that is labelled as male, setting its font, family type and

143
00:08:50,290 --> 00:08:50,830
size.

144
00:08:51,280 --> 00:08:56,290
After that, we have defined the background colour as white and for setting its location and sizing

145
00:08:56,290 --> 00:08:57,380
added that to our frame.

146
00:08:57,400 --> 00:09:02,110
Similarly, there is a radio button for the female as well, setting its font type size and family.

147
00:09:02,260 --> 00:09:06,010
After that, we have defined its background colour as white and settings, location and size and added

148
00:09:06,010 --> 00:09:06,880
that to our frame.

149
00:09:06,970 --> 00:09:09,970
There is a label for the country as well.

150
00:09:11,360 --> 00:09:17,770
So setting its bond size location and after that add that to our content pane.

151
00:09:17,780 --> 00:09:25,430
Similarly, there is ad3 text field setting its bound location, size and size of that text field and

152
00:09:25,430 --> 00:09:26,720
adding that to our content pane.

153
00:09:27,260 --> 00:09:31,960
After that, what we are doing there is another label for the permanent address, setting its bound

154
00:09:31,970 --> 00:09:34,220
location and size and adding that to our content pane.

155
00:09:34,220 --> 00:09:39,260
Then there is another text field setting its bound size location and adding that to our content pane.

156
00:09:39,380 --> 00:09:43,010
Then there is a label for the phone number setting.

157
00:09:43,010 --> 00:09:43,850
It's bound.

158
00:09:45,450 --> 00:09:47,450
And adding that to our content pane.

159
00:09:47,490 --> 00:09:54,120
Similarly for the 30 text field and there is a label for the email after that there is a text field

160
00:09:54,120 --> 00:09:55,350
to enter that particular email.

161
00:09:55,350 --> 00:09:58,650
We are setting its bound and adding that to our content pane.

162
00:09:59,670 --> 00:10:04,140
After that, what we are doing inside the blog, we are creating the connection and executing a query

163
00:10:04,140 --> 00:10:05,000
with the help of the results.

164
00:10:05,000 --> 00:10:10,350
Set instance select extract from account where username batch and over the over those accounts in our

165
00:10:10,350 --> 00:10:11,250
account table.

166
00:10:11,280 --> 00:10:16,710
We are storing the username and 37 text field and name and 32 text field.

167
00:10:17,610 --> 00:10:23,550
After that there is a button defined as ADD and for that we have defined the action performed.

168
00:10:23,550 --> 00:10:28,350
We will be creating a connection with our with the help of our icon class and a string radius equals

169
00:10:28,350 --> 00:10:28,890
to null.

170
00:10:30,320 --> 00:10:32,900
So if either one is selected, then we will set the video to mail.

171
00:10:32,900 --> 00:10:35,210
If ARP is selected, then we'll send the US female.

172
00:10:37,310 --> 00:10:38,210
Inside the block.

173
00:10:38,210 --> 00:10:43,220
We have restored the required information from the text field combo box and the radio buttons to our

174
00:10:43,220 --> 00:10:44,270
respective string.

175
00:10:45,720 --> 00:10:52,710
And we will be stewarding those values with the help of the query insert into customer buy, which will

176
00:10:52,710 --> 00:10:55,050
help us to install the values in our customer table.

177
00:10:55,050 --> 00:10:59,190
And so that show that dialog box that customer added successfully.

178
00:10:59,400 --> 00:11:05,040
If the any exception, I got an email so that please enter a valid number.

179
00:11:07,050 --> 00:11:12,000
Then we have set the location for the buttons and background and for controller added that to content

180
00:11:12,000 --> 00:11:12,350
pain.

181
00:11:12,360 --> 00:11:17,220
Similarly, there is a back button which we inside which we will be just closing the current instance

182
00:11:17,220 --> 00:11:21,600
of our class and we have set the bound for the exit button background and for controller and adding

183
00:11:21,600 --> 00:11:26,700
that to our content pane and its current foreground colour as of the complete window as white.

184
00:11:26,820 --> 00:11:28,590
So this is all about that customer class.

185
00:11:28,590 --> 00:11:32,310
Let's move on to the view customer class, which is defined inside the cab booking system.

186
00:11:32,310 --> 00:11:38,670
We have imported the necessary packages here and after that the customer class is extending the frame

187
00:11:38,670 --> 00:11:43,740
and we have defined the variables of table label and everything is there after that.

188
00:11:43,740 --> 00:11:47,000
Inside the Void Main, we have just created an instance of the current table set.

189
00:11:47,010 --> 00:11:48,060
The visibility has to.

190
00:11:49,570 --> 00:11:51,970
Then we have set the default close, operation exit on close.

191
00:11:52,000 --> 00:11:56,830
After that, we are defining the panel empty border, adding that to our panel layout as null.

192
00:11:56,830 --> 00:12:00,550
Then we have added the image with the help of label and setting its bounds and adding that label to

193
00:12:00,550 --> 00:12:01,140
our frame.

194
00:12:01,150 --> 00:12:02,410
Then there is another image.

195
00:12:02,410 --> 00:12:07,670
We have added that to our label and that is found bound and added to our frame.

196
00:12:07,690 --> 00:12:11,770
After that, what we are doing is we have defining a table, setting its bound and adding that to content.

197
00:12:11,860 --> 00:12:16,750
And similarly inside the trip log we are creating a connection and there is a query select extract from

198
00:12:16,750 --> 00:12:17,080
customer.

199
00:12:17,080 --> 00:12:19,690
We are executing that query and setting it to our model.

200
00:12:19,690 --> 00:12:27,160
With the help of the result set to table model, that class will set the model for this window and then

201
00:12:27,160 --> 00:12:29,200
there is a button as back button.

202
00:12:29,200 --> 00:12:34,180
So inside which we will be creating just the set, the visibility as false.

203
00:12:35,590 --> 00:12:39,280
After that, we have set the bound for the button background and foreground color of the button, adding

204
00:12:39,280 --> 00:12:40,220
that to our content pane.

205
00:12:40,240 --> 00:12:42,310
Similarly, there is a label for the A user name.

206
00:12:42,310 --> 00:12:45,190
We have set its bounds and adding that to our content pane.

207
00:12:45,190 --> 00:12:49,240
Then there is a label for the ID type, set its bounds and adding that to our content pane.

208
00:12:49,240 --> 00:12:52,930
Then there is another label as a number that is bound sending that to our content pane.

209
00:12:52,930 --> 00:12:58,510
Similarly, where we have done the things for the name label, a gender label or country label address

210
00:12:58,510 --> 00:13:00,370
label or phone label and the email label.

211
00:13:00,370 --> 00:13:06,070
So with the help of these labels, we will be showing the details of all the customers which are present

212
00:13:06,070 --> 00:13:07,200
inside our database.

213
00:13:07,210 --> 00:13:09,580
At last, we have set the background color as white.

214
00:13:09,580 --> 00:13:12,760
So this is all about the three classes which we have discussed in this video.

215
00:13:12,790 --> 00:13:15,840
We will be discussing about the next classes in our next videos.
