1
00:00:00,540 --> 00:00:01,620
Hello everyone.

2
00:00:01,620 --> 00:00:08,160
So I hope that you all have went through the introduction of the application part and working on the

3
00:00:08,160 --> 00:00:16,140
project part pretty well and must be wondering how to start coding a section of this application.

4
00:00:16,140 --> 00:00:24,390
So now in this part we are going to start the programming execution of the application, which we name

5
00:00:24,420 --> 00:00:27,780
build a canvas tool using Java.

6
00:00:27,780 --> 00:00:35,640
So here we are going to make a paint interface which is going to be a similar application to RMS paint,

7
00:00:35,640 --> 00:00:38,640
which we are using since childhood.

8
00:00:38,640 --> 00:00:47,250
So yes, in this ID welcome window, we are going to start like setting up our project by making the

9
00:00:47,250 --> 00:00:55,530
classes like functions calling and all objects, definitely as we are going to follow the principles

10
00:00:55,530 --> 00:00:58,770
of object oriented programming while making this project.

11
00:00:58,770 --> 00:01:04,290
So we will keep this in mind that everything revolves around objects and classes.

12
00:01:04,830 --> 00:01:13,500
So on your screens you can see the welcome page of Visual Studio Code compiler, like it is the ID inside

13
00:01:13,500 --> 00:01:18,000
which we are going to start coding our project.

14
00:01:18,090 --> 00:01:24,180
So yes, on the welcome page we have to click on this Explorer button.

15
00:01:24,450 --> 00:01:29,100
Basically it is an icon on the sidebar of the welcome page.

16
00:01:29,100 --> 00:01:36,120
So on clicking this, we will open up our interface which will contain three buttons overall.

17
00:01:36,120 --> 00:01:44,130
So we have to select Create Java project from these three so that we can start creating our Java project

18
00:01:44,130 --> 00:01:45,930
inside this ID.

19
00:01:46,140 --> 00:01:55,260
So yes, on clicking Create Java project, we came across various options like they are basically the

20
00:01:55,260 --> 00:01:59,070
supporting tools or we can call it them as build tools.

21
00:01:59,070 --> 00:02:06,970
So there are several tools in Java such as Maven, Springboard Quarks and Micro Profile.

22
00:02:07,020 --> 00:02:15,300
So these build tools basically come up with templates or like already written templates.

23
00:02:15,300 --> 00:02:24,090
We just have to use the call the templates and write the code in like write that text inside the templates

24
00:02:24,270 --> 00:02:29,820
and everything will be like already made a kind of code structure.

25
00:02:29,820 --> 00:02:34,560
But in our this project we are going to work directly with the source code.

26
00:02:35,610 --> 00:02:42,210
So we will be choosing this no tool option as we are going to like start without any tools.

27
00:02:42,360 --> 00:02:49,560
So on clicking that notepad tool option, we will come across our file chooser of our system.

28
00:02:49,560 --> 00:02:56,130
So it will be asking for our location where we want to save our our project.

29
00:02:56,250 --> 00:03:01,830
So choose a location like correctly, like in a letter switcher.

30
00:03:01,830 --> 00:03:10,890
If you wish to find your project in your system, then you have to like navigate to that location to

31
00:03:10,890 --> 00:03:12,630
find the project folder.

32
00:03:12,630 --> 00:03:17,160
So I am choosing desktop as the location of my project folder.

33
00:03:17,190 --> 00:03:26,280
Hitting on the select, the project location or text field will appear in the ID is input field, so

34
00:03:26,280 --> 00:03:29,010
it will ask for a Java project name.

35
00:03:29,850 --> 00:03:35,040
So in this text field we have to enter a name for our project.

36
00:03:35,370 --> 00:03:41,400
So let us type any name like we are going to build up.

37
00:03:42,610 --> 00:03:45,770
Bean canvass

38
00:03:48,430 --> 00:03:48,800
tool.

39
00:03:49,780 --> 00:03:55,210
So I have named this folder as paint canvas tool.

40
00:03:55,720 --> 00:03:59,750
We are going to make a canvas basically for the drawing.

41
00:03:59,770 --> 00:04:01,290
Like for painting.

42
00:04:01,300 --> 00:04:06,960
It comes up with shapes, colors as dimensions and everything.

43
00:04:06,970 --> 00:04:10,090
And later we can save that in the form of an image.

44
00:04:10,150 --> 00:04:13,720
So I choose a white name for your project.

45
00:04:13,720 --> 00:04:19,420
Like this name should reflect that what actually this project is doing.

46
00:04:19,630 --> 00:04:23,320
Do not name your project in an anonymous manner.

47
00:04:23,530 --> 00:04:27,040
Choosing a fancy name could harm that.

48
00:04:27,400 --> 00:04:31,860
Like it should reflect the actual meaning of the project.

49
00:04:31,870 --> 00:04:36,380
So, like, be wise while choosing names of your projects.

50
00:04:36,400 --> 00:04:39,460
So I have named Paint Canvas Tool.

51
00:04:39,490 --> 00:04:42,460
You can name your projects in any manner.

52
00:04:42,490 --> 00:04:48,490
Just keep in mind that it should reflect the purpose of that specific project.

53
00:04:48,520 --> 00:04:53,830
So on hitting enter, we will land up inside our project folder.

54
00:04:54,490 --> 00:04:59,740
Okay, so this is the welcome page of our project folder.

55
00:05:00,430 --> 00:05:09,290
It contains few inbuilt folders so we can see that there are four inbuilt folders and added mid-autumn

56
00:05:09,400 --> 00:05:10,150
day file.

57
00:05:10,180 --> 00:05:17,590
So these two folders, dot dist and dot vasco are due to the mercy of this compiler.

58
00:05:17,590 --> 00:05:21,430
Like we are creating a Java project inside Visual Studio code.

59
00:05:21,460 --> 00:05:29,420
So these two folders come up across with this Create Java project function of this compiler.

60
00:05:29,440 --> 00:05:36,040
So these two folders have basically no use in our project, so we are going to simply ignore these two

61
00:05:36,040 --> 00:05:36,850
folders.

62
00:05:37,300 --> 00:05:41,080
Yes, they are of no use as far as I can see that.

63
00:05:41,200 --> 00:05:49,480
So this folder as RC is going to be the main folder which is going to consist all the important files

64
00:05:49,480 --> 00:05:51,250
and folders of our project.

65
00:05:51,970 --> 00:05:55,470
So yes, this is RC folder is the main folder.

66
00:05:55,480 --> 00:06:03,640
So keep in mind that while creating any file folder, you create it inside this RC folder or in order

67
00:06:03,640 --> 00:06:05,770
to make it like functional.

68
00:06:05,860 --> 00:06:14,140
So firstly and this RC folder, you have to right click from your mouse and this dialog box will appear

69
00:06:14,140 --> 00:06:15,950
asking for several options.

70
00:06:15,970 --> 00:06:19,870
So I am going to select this new file option.

71
00:06:20,020 --> 00:06:24,610
And the first class we are going to create is the main class.

72
00:06:24,610 --> 00:06:29,890
So here our main classes, the drawing editor dot java.

73
00:06:30,520 --> 00:06:36,040
So here the drawing editor dot java.

74
00:06:37,180 --> 00:06:44,950
So yes, on hitting enter we are inside our main class drawing editor, dark java and.

75
00:06:46,290 --> 00:06:52,320
So we have created a class called Drawing Editor, which is a public class.

76
00:06:52,350 --> 00:06:57,090
Now, this class is going to be used inside other classes.

77
00:06:57,530 --> 00:06:57,840
Okay.

78
00:06:57,840 --> 00:07:01,110
So let us first look at our project window.

79
00:07:01,110 --> 00:07:03,250
That how actually it is looking.

80
00:07:03,270 --> 00:07:06,150
So what are the constants?

81
00:07:06,240 --> 00:07:13,380
So basically we discussed this in the working of the project path that we are going to create separate

82
00:07:13,380 --> 00:07:22,560
classes for this rectangle, oval and the line and a class for this drawing area which is going to be

83
00:07:22,560 --> 00:07:31,050
saved later in the form of the pages so that we can access that dimension in the like later times now.

84
00:07:31,570 --> 00:07:32,010
Okay.

85
00:07:32,010 --> 00:07:39,300
So in the next class we are going to create is going to be the rectangle class which is going to handle

86
00:07:39,300 --> 00:07:43,380
the functionalities of this button, which is the rectangle button.

87
00:07:43,770 --> 00:07:51,000
So, okay, so let us create the rectangle dot Java class inside the Assessee folder as well.

88
00:07:51,660 --> 00:08:03,240
So hitting on this new file option and typing the class names rectangle dot java and hitting enter a

89
00:08:03,240 --> 00:08:07,020
rectangle class is created inside this file.

90
00:08:07,050 --> 00:08:09,030
So okay.

91
00:08:09,090 --> 00:08:16,380
So this rectangle class, we have to import few packages first.

92
00:08:16,380 --> 00:08:20,970
So import java jwt.

93
00:08:22,150 --> 00:08:23,290
Dark color.

94
00:08:25,440 --> 00:08:25,770
Okay.

95
00:08:25,800 --> 00:08:35,440
So it is a w t dot color which is going to import the color component of the AWP or.

96
00:08:35,460 --> 00:08:35,760
Okay.

97
00:08:35,790 --> 00:08:36,540
So framework.

98
00:08:37,020 --> 00:08:45,240
So basically this AWP stands for Abstract Builder Toolkit and this color is going to provide the color

99
00:08:45,240 --> 00:08:47,270
feature inside this.

100
00:08:47,730 --> 00:08:54,940
Like suppose we are coloring something so that color feature is going to arrive from this AWP framework.

101
00:08:54,960 --> 00:09:05,370
So inside the Rectangle class, we are going to create some methods and then like call some arguments

102
00:09:05,370 --> 00:09:05,950
also.

103
00:09:05,970 --> 00:09:12,540
So yes, inside this class we are going to create a constructor rectangle.

104
00:09:13,230 --> 00:09:23,640
So this rectangle object is going to cause some arguments such as in text, into y, into W and into

105
00:09:23,670 --> 00:09:24,240
each.

106
00:09:25,290 --> 00:09:25,680
Okay.

107
00:09:25,680 --> 00:09:30,000
So these four are the arguments of this rectangle object.

108
00:09:30,840 --> 00:09:38,550
Also other like arguments are going to be the colour C and non integer F.

109
00:09:40,040 --> 00:09:40,370
Okay.

110
00:09:40,490 --> 00:09:51,650
So here we are now inside this constructor, we are going to call a super method, which is going to.

111
00:09:53,020 --> 00:09:54,220
Argument x.

112
00:09:54,220 --> 00:09:54,820
Y.

113
00:09:55,630 --> 00:09:58,030
W h c.

114
00:09:58,810 --> 00:09:59,230
Okay.

115
00:09:59,230 --> 00:10:10,930
So inside this we are going to use if f is equal to one, then R is filled, should be true.

116
00:10:11,470 --> 00:10:15,370
So we will discuss this in our moment.

117
00:10:15,850 --> 00:10:19,120
Let me first complete this coding part.

118
00:10:19,840 --> 00:10:22,150
So as filled is equal to true.

119
00:10:22,840 --> 00:10:29,020
Okay, so yes, this is the rectangle class and this is how it should be.

120
00:10:30,100 --> 00:10:32,690
What is this, x, y, w c?

121
00:10:32,770 --> 00:10:34,230
We will be coming to this.

122
00:10:35,520 --> 00:10:35,880
Okay.

123
00:10:35,880 --> 00:10:38,160
So this is the rectangle class.

124
00:10:38,160 --> 00:10:44,880
Inside this we are having a constructor called Rectangle and the arguments are in text, in divide,

125
00:10:44,910 --> 00:10:47,880
into W, in text and colour and F.

126
00:10:48,000 --> 00:10:55,020
So let us come to the like practicality of this argument.

127
00:10:55,020 --> 00:10:56,900
So what actually this edge is.

128
00:10:56,910 --> 00:11:00,060
So here you can see a black coloured rectangle.

129
00:11:00,300 --> 00:11:09,150
So that index is going to be defined the distance of this like x rectangle from the x axis.

130
00:11:09,150 --> 00:11:17,460
So suppose this is the x axis horizontally and this is the y axis, so that x and y are going to decide

131
00:11:17,460 --> 00:11:21,930
the like layout of this rectangle from the axis.

132
00:11:21,930 --> 00:11:24,780
Now what is are the blue and edge.

133
00:11:24,780 --> 00:11:31,230
So the blue is going to be the width of this figure, like this horizontal.

134
00:11:31,320 --> 00:11:34,800
It is going to be decided with the help of this, the blue.

135
00:11:35,880 --> 00:11:42,770
And that is going to be the vertical width of this rectangle, or we can call it as height.

136
00:11:42,790 --> 00:11:45,460
So we have named this as edge.

137
00:11:45,850 --> 00:11:46,930
Now the color.

138
00:11:47,080 --> 00:11:58,060
So, okay, so if we have selected this as full or empty, so helpfulness F So if F is true, like if

139
00:11:58,060 --> 00:12:06,730
is filled is true, if the figure is full, then this F is going to be called, this f is going to be

140
00:12:06,730 --> 00:12:07,700
executed.

141
00:12:07,720 --> 00:12:10,660
And otherwise nothing is going to be executed.

142
00:12:10,660 --> 00:12:12,850
Simply a rectangle will be drawn.

143
00:12:13,120 --> 00:12:20,910
So if the color is full, so we have to fill colors inside the borders of the rectangle, the return

144
00:12:20,920 --> 00:12:21,520
height.

145
00:12:22,210 --> 00:12:25,300
Should be the range of the color to be filled.

146
00:12:25,390 --> 00:12:30,520
And that's why it is inside this super method.

147
00:12:30,790 --> 00:12:39,550
So this super method is going to set the dimensions of the rectangle, whether it be the distances or

148
00:12:39,550 --> 00:12:45,400
its like height and width, or whether it should be filled with a colour or not.

149
00:12:45,430 --> 00:12:48,580
Now we are done with the rectangle class.

150
00:12:49,540 --> 00:12:55,600
In the next thing we are going to be concerned about is going to be the circle class.

151
00:12:55,600 --> 00:13:01,540
So here we are having three figures, rectangle or the circle and the line.

152
00:13:01,630 --> 00:13:09,280
So the rectangle and the circle class are going to be simple and almost similar.

153
00:13:09,310 --> 00:13:17,020
They are going to be like the circle, flags are going to be similar in the way this rectangle glasses

154
00:13:17,170 --> 00:13:20,320
just the difference will be in the name of the class.

155
00:13:20,320 --> 00:13:25,960
So just in the place of rectangle here we are going to write Circle and all the other arguments are

156
00:13:25,960 --> 00:13:26,950
going to be same.

157
00:13:26,950 --> 00:13:36,310
And even if this if statement is going to be the same, so let us create a circle class inside the society

158
00:13:36,310 --> 00:13:42,100
for the Circle dot Java is going to be the name for the file.

159
00:13:42,640 --> 00:13:44,290
And yes, here it is.

160
00:13:44,290 --> 00:13:47,530
So let us copy the same code.

161
00:13:48,880 --> 00:13:51,400
And just based it inside the.

162
00:13:52,370 --> 00:13:53,770
Circle dot java.

163
00:13:54,650 --> 00:13:57,830
Just replace the name of this rectangle.

164
00:13:59,320 --> 00:14:00,190
That's good.

165
00:14:00,370 --> 00:14:02,740
So I am going to use refactor.

166
00:14:04,330 --> 00:14:05,050
Okay.

167
00:14:05,260 --> 00:14:06,730
So perfect.

168
00:14:07,180 --> 00:14:12,340
We have renamed the Rectangle Classic Circle and all of them are going to be the same.

169
00:14:13,480 --> 00:14:17,860
So this was all about the Rectangle class and the circle class.

170
00:14:18,040 --> 00:14:24,760
So in the prototype section, we have discussed that we have to firstly create a project in the ID and

171
00:14:24,760 --> 00:14:30,910
we have did so then we have created the main class or we will be writing the code inside the main class

172
00:14:30,910 --> 00:14:32,790
in a moment.

173
00:14:32,800 --> 00:14:39,610
But initially we were concerned about creating the classes for three of the shapes.

174
00:14:39,610 --> 00:14:43,150
So we are done with the rectangle class and the class.

175
00:14:43,180 --> 00:14:48,190
Now for the third class we are going to create is the line class.

176
00:14:48,520 --> 00:14:51,940
So this line class was bit different.

177
00:14:51,940 --> 00:14:59,320
If you have seen in the working part the control panel was working differently in the manner of this

178
00:14:59,320 --> 00:15:00,130
line class.

179
00:15:00,130 --> 00:15:05,650
So the line class is going to be a bit different from this rectangle and the circle.

180
00:15:05,680 --> 00:15:13,480
So yes, we will see that how that line part was like working and what is going to be the code for that

181
00:15:13,480 --> 00:15:19,150
specific difference arising between the rectangle circle and the line class.

182
00:15:19,240 --> 00:15:22,750
So yes, we will be saying it in the next part.
