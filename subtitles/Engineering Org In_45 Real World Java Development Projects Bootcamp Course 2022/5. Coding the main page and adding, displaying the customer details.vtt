WEBVTT
1
00:00:01.080 --> 00:00:04.470
In this video, we will be talking about the next three classes of this project.

2
00:00:04.470 --> 00:00:06.480
So the first class is update customer.

3
00:00:07.290 --> 00:00:09.810
So this class is defined inside the package cab booking system.

4
00:00:09.810 --> 00:00:14.340
We have imported the necessary package whose methods and classes we will be using in this class.

5
00:00:14.340 --> 00:00:20.130
So we have defined the update customer class which is extending the frame and initialize this connection

6
00:00:20.130 --> 00:00:24.960
variable has not prepared a certain variable as not null and there is a panel content and there will

7
00:00:24.960 --> 00:00:26.190
be ten text fields.

8
00:00:27.480 --> 00:00:28.440
Inside the void method.

9
00:00:28.440 --> 00:00:32.790
We have just defined the public void run method and inside which we have created the current instance

10
00:00:32.790 --> 00:00:36.450
of the customer class with the null string and set the visibility as to.

11
00:00:37.690 --> 00:00:38.110
After that.

12
00:00:38.110 --> 00:00:43.330
What we are doing is we have created a parameterized constructor for the update customer which is throwing

13
00:00:43.330 --> 00:00:44.290
the scale exception.

14
00:00:44.290 --> 00:00:50.080
And after that we have set the bound for that frame and define the content panel and set that content

15
00:00:50.080 --> 00:00:53.440
panel with the help of set content and set its layout as null.

16
00:00:54.730 --> 00:00:58.770
After that, we have added an image, created an image with the help of class photo that gets the same

17
00:00:58.780 --> 00:01:05.800
resource by passing the path of that class, by passing the pass of that image and adding that image

18
00:01:05.800 --> 00:01:06.340
to our label.

19
00:01:06.340 --> 00:01:10.870
And then we are setting the bound for that label and adding that label to our frame.

20
00:01:12.700 --> 00:01:17.320
After that there is a label update, customer detail, setting its font, family type and size, adding

21
00:01:17.890 --> 00:01:23.000
then we are setting its location and size and then adding that to our content pane.

22
00:01:23.020 --> 00:01:29.020
Similarly, there is another label named as a username setting its bound size.

23
00:01:30.080 --> 00:01:33.680
And location and adding that to our content pane.

24
00:01:33.710 --> 00:01:39.200
Then we are creating a text field and setting its bound size location and adding that to our content

25
00:01:39.200 --> 00:01:39.600
pane.

26
00:01:39.620 --> 00:01:44.900
Then there is a label for the ID, setting its bounce size and adding that to our content pane.

27
00:01:46.190 --> 00:01:50.960
Then there is a tax related to setting its bond size and adding that to our content bin.

28
00:01:50.990 --> 00:01:56.600
After that, there is a label l two for the number setting its bound size and adding that to our content

29
00:01:56.600 --> 00:01:57.170
pane.

30
00:01:57.260 --> 00:02:02.870
After that, there is a text 53 setting its bound size and adding that to our content bin.

31
00:02:05.040 --> 00:02:06.390
After that, there is a label.

32
00:02:07.030 --> 00:02:11.140
For the name setting its bounce size and adding that to our content pane.

33
00:02:14.050 --> 00:02:15.940
Then there's the T for text field.

34
00:02:18.160 --> 00:02:19.840
Setting its bond size and letting that work.

35
00:02:19.880 --> 00:02:22.360
And then we have another label.

36
00:02:22.360 --> 00:02:27.870
As for the gender setting its bounds size and adding that to our content.

37
00:02:27.880 --> 00:02:31.570
And then there is a text field setting the bound for the test field and adding that to our content pane.

38
00:02:31.570 --> 00:02:35.800
Similarly, there is a label for the country setting the bound for the text field and in that work and

39
00:02:35.800 --> 00:02:36.460
then pane.

40
00:02:36.670 --> 00:02:42.340
Then there is a text field setting the bound location size for it and adding that to our content pane.

41
00:02:42.610 --> 00:02:48.040
Then there is another label for the permanent address setting, bound location and size for it and adding

42
00:02:48.040 --> 00:02:49.240
that to our content pane.

43
00:02:49.540 --> 00:02:51.880
Then there is another text field at seven.

44
00:02:53.340 --> 00:02:55.490
Setting down for it, adding that to our content pane.

45
00:02:55.500 --> 00:03:01.470
And after that we have defined the label for the phone number setting bound for it and adding that to

46
00:03:01.470 --> 00:03:02.340
our content pane.

47
00:03:02.340 --> 00:03:07.710
Then there is a text field setting bound for it, adding that content pane, text field to our content.

48
00:03:07.770 --> 00:03:15.210
And then there is a label deposit for which is named as a label deposit and its label is email, which

49
00:03:15.210 --> 00:03:16.680
is used for the email setting.

50
00:03:16.680 --> 00:03:20.430
It's bound, set, bound and location and size and adding that to our content pane.

51
00:03:20.430 --> 00:03:25.140
After that there is a new text field we have defined setting bound for it and ending that work and then

52
00:03:25.140 --> 00:03:30.210
pane after that there's a dry block inside which we have created the instance of our icon class and

53
00:03:30.210 --> 00:03:35.190
we have executed the query select as to from customer where username will be equal to username.

54
00:03:36.330 --> 00:03:40.860
That we have passed so far, that matching user name record, we are restoring the required details

55
00:03:40.860 --> 00:03:44.520
in our respective text fields even from 1 to 39.

56
00:03:44.520 --> 00:03:49.130
And after that, what we are doing is we are creating a button update and inside which we have defined

57
00:03:49.140 --> 00:03:54.420
action performed method inside which we have created the instance of the connection class and inside

58
00:03:54.420 --> 00:04:01.380
the trip log, we are storing the values inside our strings from our respective text fields and then.

59
00:04:02.630 --> 00:04:09.740
We have created a query in a string Q update, customer set ID type and the respective details from

60
00:04:09.830 --> 00:04:12.980
the strings on which we have installed the details of our text fields.

61
00:04:12.980 --> 00:04:20.030
And then we will execute, update that query and display a dialog box as customer details updated successfully

62
00:04:20.030 --> 00:04:23.330
and handle any exception if occurs.

63
00:04:24.600 --> 00:04:29.940
After that, what we are doing is setting the bound for the buttons which will set its location and

64
00:04:29.940 --> 00:04:33.420
size, adding foreground and background colour for that button.

65
00:04:33.420 --> 00:04:36.870
Then there is a button exit which is a used.

66
00:04:38.310 --> 00:04:42.930
For the back button and inside which inside it's excellent performance that we have defined its visibility

67
00:04:42.930 --> 00:04:48.330
as false and setting the size or location for the buttons, background and foreground color of that

68
00:04:48.330 --> 00:04:50.640
button and adding that button to our content pane.

69
00:04:50.640 --> 00:04:54.390
At last we have defined the complete color background color of the window as white.

70
00:04:54.480 --> 00:04:56.550
So that's how all about the update customer class.

71
00:04:56.550 --> 00:05:00.450
Let's move on to our next customer next class, which is a delete customer class.

72
00:05:00.450 --> 00:05:05.490
So this class is also defined inside the package cab booking system and we have imported the necessary

73
00:05:05.490 --> 00:05:06.180
package.

74
00:05:06.210 --> 00:05:09.720
After that we have defined the customer class, which is extending the frame.

75
00:05:09.780 --> 00:05:13.770
It will contain a panel and a choice type of variable C one.

76
00:05:13.860 --> 00:05:18.030
And inside the void main method, we have defined the public void and inside which we are creating the

77
00:05:18.030 --> 00:05:21.840
current instance of the delete customer class and setting the visibility as true.

78
00:05:23.860 --> 00:05:29.650
After that, what we are doing inside the public toilet customer are non parameterized constructor which

79
00:05:29.650 --> 00:05:34.180
will throw a SQL exception if any occurs then we will setting the bound for the frame and the location

80
00:05:34.180 --> 00:05:35.320
and sides of the frame.

81
00:05:35.320 --> 00:05:41.140
Then there is a setting, the panel creating panel, setting the panel and layout as null.

82
00:05:41.170 --> 00:05:46.210
After that, we are adding an image into our label one and setting the bound for that label and adding

83
00:05:46.210 --> 00:05:47.320
that label to our frame.

84
00:05:47.500 --> 00:05:51.280
After that, what we are doing is there is a label for the delete customer details, setting the font

85
00:05:51.280 --> 00:05:57.790
type family and size for that label and adding that label to our content pane before setting its location

86
00:05:57.790 --> 00:05:58.390
and size.

87
00:06:00.150 --> 00:06:01.680
Then there is a label for the username.

88
00:06:01.680 --> 00:06:06.030
We are setting its location and size and adding that to our label content pane.

89
00:06:06.030 --> 00:06:10.920
After that we have defined a choice variable new choice and we have created the connection instance.

90
00:06:10.920 --> 00:06:15.720
Now inside the type log, we will execute the query, select extra from customer and iterating over

91
00:06:15.720 --> 00:06:21.510
that account table and we will add the names of the customer into our choice variable.

92
00:06:23.250 --> 00:06:26.040
After that, we have closed the results at instance.

93
00:06:26.160 --> 00:06:31.090
Then we have set the bound and location for the our choice instance and adding that to our frame.

94
00:06:31.110 --> 00:06:36.000
Similarly, there is a label for the ID setting its location and size and adding that to our content

95
00:06:36.000 --> 00:06:36.420
pane.

96
00:06:36.450 --> 00:06:41.160
Then there is another label and setting a location and size for it and adding that to our content.

97
00:06:41.610 --> 00:06:47.670
Similarly, there is a label for the number setting its bound and adding that to our content pane.

98
00:06:47.670 --> 00:06:51.230
Then there is another label setting its bound location size and adding that to our content pane.

99
00:06:51.270 --> 00:06:56.310
Then there is a label named as name setting its bounds, location, size, and adding that to our content.

100
00:06:56.370 --> 00:07:00.960
And then there's another label setting its bound size and location and adding that to our content pane.

101
00:07:01.380 --> 00:07:02.850
After that, there is a label.

102
00:07:04.490 --> 00:07:08.570
General setting its bond, location, size and adding adding that to our content paint.

103
00:07:08.570 --> 00:07:14.330
And then there is a level five, which is an A label which will store the values of gender setting bound,

104
00:07:14.330 --> 00:07:16.730
local bound location size and adding that to our content.

105
00:07:17.390 --> 00:07:22.550
Then there is a label country setting its bounds and adding that to our content pane.

106
00:07:22.580 --> 00:07:25.340
After that, there is a new label setting bound.

107
00:07:26.320 --> 00:07:29.350
And size and adding that to our content pane.

108
00:07:29.710 --> 00:07:32.800
Then there is a label for the permanent address setting.

109
00:07:32.800 --> 00:07:37.270
It's a respect to label for the to write the permanent address.

110
00:07:37.480 --> 00:07:41.710
Then there is a phone number and it's respectable label.

111
00:07:44.670 --> 00:07:49.530
Now there is a label for the email and is back to label for to write the email.

112
00:07:49.560 --> 00:07:51.600
After that, there is a button check.

113
00:07:52.580 --> 00:07:57.440
We have defined the action performed method over that button and define the connection instance.

114
00:07:57.740 --> 00:08:02.150
After that, what we are doing is we have executing a query with the help of the results set instantiate

115
00:08:02.150 --> 00:08:07.160
or execute query select from customer where username is equal to the get selected item.

116
00:08:07.340 --> 00:08:12.380
And after that we are setting the text in our text field with respect to the details.

117
00:08:13.410 --> 00:08:14.580
From the database.

118
00:08:14.700 --> 00:08:17.280
After that, we are setting the bond for the.

119
00:08:18.750 --> 00:08:21.270
But an end for background and formula of that button.

120
00:08:21.570 --> 00:08:24.610
After that, what we are doing is adding that button to our content pane.

121
00:08:24.630 --> 00:08:30.810
Then there is a button delete which will help us to delete the delete the records which is defined the

122
00:08:30.810 --> 00:08:36.210
public void action performed and a connection class string as well is going to get selected item and

123
00:08:36.210 --> 00:08:37.650
delete customer from the user.

124
00:08:37.830 --> 00:08:41.430
From customer we have to delete the record from the customer as well as from the account.

125
00:08:41.430 --> 00:08:46.290
So we will execute both the queries and show that customer detail deleted successfully and set the visibility

126
00:08:46.290 --> 00:08:47.310
of the current window as false.

127
00:08:47.310 --> 00:08:53.580
And we will call the new home class and no new home class as false and set the visibility of log in

128
00:08:53.580 --> 00:08:54.420
classes through.

129
00:08:56.370 --> 00:08:59.500
If an exception occurs, we will show the dialog box that presented a valid number.

130
00:08:59.520 --> 00:09:02.900
Then we will set the location of the button for the background color.

131
00:09:02.910 --> 00:09:05.910
Then there's the back button which will set the visibility of the current window as false.

132
00:09:05.910 --> 00:09:10.620
And we have defined its bound location size for the background color and then that to our content pane.

133
00:09:10.620 --> 00:09:13.950
Then we have defined the complete background color of the window as white.

134
00:09:13.950 --> 00:09:15.990
So this is all about the delete customer class.

135
00:09:15.990 --> 00:09:21.540
Let's have a look at the book tab, how we'll will be able to booking an interest in track type of cap.

136
00:09:21.540 --> 00:09:27.000
So this is defined inside the cap booking system and we have imported the necessary Java packages.

137
00:09:28.350 --> 00:09:30.800
After that, this class is extending the frame.

138
00:09:30.810 --> 00:09:34.830
There is a G type table, table and resolution details, source estimation.

139
00:09:35.130 --> 00:09:38.100
There is three buttons and two choices inside the main function.

140
00:09:38.100 --> 00:09:39.490
We have defined its instance.

141
00:09:39.510 --> 00:09:45.300
After that, inside we have defined its parameterized constructor heading as vocab and setting its content

142
00:09:45.300 --> 00:09:47.580
pane or color white and exit on closed method.

143
00:09:47.580 --> 00:09:53.070
Then there is a label as booking in transit cab is foreground color blue.

144
00:09:53.070 --> 00:09:55.560
It's one type family and setting its size.

145
00:09:55.890 --> 00:10:02.970
It's bound as to 80 comma to 27 and size sizes three 5931 adding that to our frame similarly to setting

146
00:10:02.970 --> 00:10:03.890
the layout as null.

147
00:10:03.900 --> 00:10:08.490
Similarly, there is for the sole setting its font size, location size and adding that to our frame.

148
00:10:08.610 --> 00:10:12.510
Then a label for the destination, setting its font size type and adding that to our frame.

149
00:10:14.620 --> 00:10:18.280
After that, there is a show button which will show the details, background color, foreground color

150
00:10:18.280 --> 00:10:22.780
and setting its location and size and adding that to our frames and whether there is a new choice,

151
00:10:22.780 --> 00:10:24.670
setting its location and adding that to our flame.

152
00:10:24.670 --> 00:10:29.680
And similarly, for the second choice, adding that to our frame inside the block, what we are doing

153
00:10:29.680 --> 00:10:36.070
is executing a query, select extra from the property and while it will iterate over that record inside

154
00:10:36.070 --> 00:10:40.180
the event, we will store the source values inside the city will restore the destination values from

155
00:10:40.180 --> 00:10:41.620
that table inside the database.

156
00:10:43.490 --> 00:10:47.540
There is a label for the reference number settings form, family type and size and location and adding

157
00:10:47.540 --> 00:10:50.450
that label to our frame.

158
00:10:50.480 --> 00:10:56.780
Similarly, it's a vacant label and then there is a random value which will generate the random number

159
00:10:56.780 --> 00:11:03.900
and add that number to a label 14 so that the first number will be generated randomly.

160
00:11:03.920 --> 00:11:08.010
Then there's a label for the name and there is respect to the label for that name.

161
00:11:08.030 --> 00:11:10.120
Then there is a label for the user name.

162
00:11:10.130 --> 00:11:15.260
We are doing the same thing, setting the font size type and location for that and adding that to our

163
00:11:15.260 --> 00:11:15.740
frame.

164
00:11:15.770 --> 00:11:18.530
Similarly, no label for that username.

165
00:11:18.650 --> 00:11:21.680
Then there is a label for the driver name back to the label.

166
00:11:21.680 --> 00:11:24.650
Then there's a label for the price respect on the label.

167
00:11:26.980 --> 00:11:31.270
Label for the car, its name route and the route name.

168
00:11:32.680 --> 00:11:37.930
Then we have added the image, adding the image to the label, setting its size and location of that

169
00:11:37.930 --> 00:11:39.680
label, and adding that to our frame.

170
00:11:39.700 --> 00:11:45.730
After that, we have defined the action performed over the show button inside ACR and as RC and DSD,

171
00:11:45.730 --> 00:11:52.780
we have stored the selected item from seven NC two, and we have defined our instance of the class and

172
00:11:52.780 --> 00:11:53.560
inside the string.

173
00:11:53.560 --> 00:11:57.370
SD We select a custom where username will match and from the STR.

174
00:11:57.370 --> 00:12:02.230
Inside the str we are selecting the destination record in the intensity table.

175
00:12:02.230 --> 00:12:03.580
We are destination will match.

176
00:12:04.060 --> 00:12:06.610
We will be selecting results that is equal to seven points.

177
00:12:06.610 --> 00:12:07.900
Execute STR two.

178
00:12:07.930 --> 00:12:11.950
This will execute the query str two and in the label two, l four and six.

179
00:12:11.950 --> 00:12:15.820
We will set the required details like driver price and car name.

180
00:12:17.380 --> 00:12:23.860
When we execute the SDR, we will set the details in label time, like the name of the user and inside

181
00:12:23.860 --> 00:12:29.290
the label eight we will be setting the CRC to destination type of string and inside the label 12, we

182
00:12:29.290 --> 00:12:30.370
will set the user name.

183
00:12:31.090 --> 00:12:31.510
After that.

184
00:12:31.510 --> 00:12:33.870
What we are doing there is a button book cap.

185
00:12:33.880 --> 00:12:41.040
So what this will do background color as black, foreground color as white and its bound size we should

186
00:12:41.140 --> 00:12:43.030
setting its location and size.

187
00:12:43.390 --> 00:12:50.130
After that we have defined X over that button, so we are storing the required details into our different

188
00:12:50.150 --> 00:12:51.040
testing variables.

189
00:12:51.160 --> 00:12:57.040
We will be executing the query delete from and app and we will be really deleting the previous details

190
00:12:57.040 --> 00:12:59.170
before booking any new detail.

191
00:12:59.170 --> 00:13:05.200
And it shows the message that came about successfully after that where there is a cancel button.

192
00:13:05.200 --> 00:13:08.860
So for the cancel button we have defined the action for method, which will set the visibility of the

193
00:13:08.860 --> 00:13:10.660
current window as false.

194
00:13:11.840 --> 00:13:18.410
The size of the frame will be 60, comma 600 and location will be 500, comma, 20, 20 and said the

195
00:13:18.410 --> 00:13:19.780
visibility of the current window has two.

196
00:13:19.790 --> 00:13:23.810
So this is all about the three classes update customer, delete customer and lookup.

197
00:13:23.810 --> 00:13:28.820
In next video we will be knowing about the more three classes of this project.

198
00:13:28.820 --> 00:13:30.200
So that's all in this video.
