1
00:00:00,760 --> 00:00:01,800
Hello everyone.

2
00:00:01,810 --> 00:00:07,930
So I hope that you all have been through the introduction of the application part and working on the

3
00:00:07,930 --> 00:00:14,870
project part pretty well and have understood that how this application is actually working, the time

4
00:00:14,890 --> 00:00:18,040
management interface which we are going to make in Java.

5
00:00:18,040 --> 00:00:26,080
So coming to the coding execution part, we have covered everything like how each of the functionality

6
00:00:26,080 --> 00:00:32,440
is working, whether the home page are these buttons, these are scheduled page which is scheduling

7
00:00:32,440 --> 00:00:33,130
our task.

8
00:00:33,130 --> 00:00:35,830
Accordingly, there is a timer attached to it.

9
00:00:35,830 --> 00:00:42,130
And again, on hitting this continuous button we enter in this frame, there is a timeline that is a

10
00:00:42,130 --> 00:00:42,730
done button.

11
00:00:42,730 --> 00:00:49,570
Also there is a timer running for how much time which is left for our tasks and also the help page and

12
00:00:49,570 --> 00:00:54,730
definitely the end page, which is going to tell us that how much time we saved or wasted.

13
00:00:54,730 --> 00:00:59,260
So in the coding part we are going to like code everything.

14
00:00:59,590 --> 00:01:06,220
This application is going to look exactly like this and we are going to start this coding from scratch

15
00:01:06,490 --> 00:01:13,360
for this time management application and you will see that how we are using the concepts of Java in

16
00:01:13,360 --> 00:01:15,850
order to make this time management application.

17
00:01:15,850 --> 00:01:20,830
So this is the welcome page of our individual studio code here.

18
00:01:20,830 --> 00:01:28,480
We can see that there is an Explorer button on hitting this Explorer button, our option or paths for

19
00:01:28,480 --> 00:01:30,070
creating a Java project.

20
00:01:30,070 --> 00:01:38,140
So after hitting this explore button, we have to select this create Java project option from the like

21
00:01:38,230 --> 00:01:38,890
menu bar.

22
00:01:38,890 --> 00:01:43,480
We can see that and again our options for to leopard.

23
00:01:43,510 --> 00:01:50,500
So this build tool is asking for what is the type of tool we want to attach to our application.

24
00:01:50,500 --> 00:01:55,270
So in this application we are going to work directly with the source code.

25
00:01:55,600 --> 00:01:59,890
We are not using any external tools for our application.

26
00:01:59,890 --> 00:02:07,420
Otherwise there are several vehicles in Java you can explore about them later and make some other projects.

27
00:02:07,420 --> 00:02:14,020
There are Maven, Springboard Works and Micro Profile, so if you wish to learn about them, you can

28
00:02:14,020 --> 00:02:14,920
explore more.

29
00:02:14,920 --> 00:02:21,070
But in this application we are going to hit this noble tool option and work directly with the source

30
00:02:21,070 --> 00:02:22,870
code without any tools.

31
00:02:22,870 --> 00:02:31,420
So on hitting the normal tool option, our file chooser of our desktop opens up and asks us for a project

32
00:02:31,420 --> 00:02:35,650
location where we want to locate our project folder tool.

33
00:02:35,680 --> 00:02:42,670
So in this file chooser, I am going to click desktop as the location for my project.

34
00:02:42,670 --> 00:02:50,710
You can choose any location you want to store your project to, but I will advise you to choose a wise

35
00:02:50,770 --> 00:02:56,830
location for your project so that later, when you need it, you can find it on that location.

36
00:02:56,830 --> 00:03:01,450
So I save all my projects in the desktop, so I am saving it in desktop.

37
00:03:01,450 --> 00:03:08,240
Now let us name are like our input filters upper asking for a Java project name.

38
00:03:08,260 --> 00:03:16,990
So I would encourage you all to name your projects wisely as the name is worth defining what this application

39
00:03:16,990 --> 00:03:17,980
is containing.

40
00:03:17,980 --> 00:03:24,280
So in the later future, if you need that application, then you can find it with the help of its name.

41
00:03:24,280 --> 00:03:30,610
So do not name any like anonymous type of or any fancy name to your application name.

42
00:03:30,610 --> 00:03:34,360
Your application according to what is it is actually doing?

43
00:03:34,360 --> 00:03:37,270
What is the outcome of that application?

44
00:03:37,270 --> 00:03:45,430
So this application is for time management and I am going to name this application and that manner only.

45
00:03:45,430 --> 00:03:51,210
So time management interface or we can call it as time management tool also.

46
00:03:51,790 --> 00:03:59,620
So what time management tool is the name for my project folder on hitting enter, I will land up inside

47
00:03:59,620 --> 00:04:06,460
the project folder, the time management tool and inside this time management tool there are already

48
00:04:06,460 --> 00:04:08,080
some inbuilt folders.

49
00:04:08,080 --> 00:04:16,330
So this dot dot v is called folders are created as we have selected the create project option from this

50
00:04:16,330 --> 00:04:21,820
ID Visual Studio code and they are of no use inside our project.

51
00:04:21,820 --> 00:04:25,420
These are just created by the compiler or this.

52
00:04:25,660 --> 00:04:32,440
This compiler has some libraries for Java project, but our current we have no use of these two folders.

53
00:04:32,440 --> 00:04:36,790
So we can simply ignore these two and we can move forward.

54
00:04:36,790 --> 00:04:40,180
So there are two other folders that live in the cited folder.

55
00:04:40,180 --> 00:04:45,310
So this is our C folder is going to be the main folder of our project.

56
00:04:45,310 --> 00:04:52,360
All the important files and folders we are going to make inside this application is going to be consistent

57
00:04:52,360 --> 00:04:58,810
inside this SRT folder only basically this folder is going to be the body of our application.

58
00:04:58,810 --> 00:04:59,740
And inside this.

59
00:04:59,890 --> 00:05:00,560
Body.

60
00:05:00,580 --> 00:05:02,850
All the body parts will be consistent.

61
00:05:02,860 --> 00:05:10,210
So keep in mind that any of the file folder you meet in your like project that should be enclosed inside

62
00:05:10,210 --> 00:05:13,110
the society folder only and not anywhere else.

63
00:05:13,120 --> 00:05:13,810
So.

64
00:05:14,440 --> 00:05:14,770
Okay.

65
00:05:14,770 --> 00:05:20,500
So that is the Java class which is like in built file made inside the society folder.

66
00:05:20,950 --> 00:05:23,680
You can see I have not made this file.

67
00:05:23,710 --> 00:05:25,690
This is already an inbuilt file.

68
00:05:25,720 --> 00:05:27,880
We have created a Java project.

69
00:05:27,880 --> 00:05:31,990
So this after Java is created or like already.

70
00:05:32,170 --> 00:05:40,210
So inside this app there is a plus or there is a main function which is like handling the exceptions.

71
00:05:40,210 --> 00:05:46,420
So if any kind of exception is going to arise in this application, then this part of the code is going

72
00:05:46,420 --> 00:05:47,320
to be executed.

73
00:05:47,320 --> 00:05:54,190
This system that are the println is used for printing any string or if there are any kind of bugs arising

74
00:05:54,190 --> 00:05:55,120
in the application.

75
00:05:55,120 --> 00:06:01,150
So yes, if the application throws any exception, then this is going to be printed now or coming to

76
00:06:01,150 --> 00:06:07,870
the like main part we have decided in the prototype, like we have set a path in that manner that firstly

77
00:06:07,870 --> 00:06:14,950
we have to create a new project in the ID and in the second step we decided to make the main class.

78
00:06:14,950 --> 00:06:18,880
So the main class was going to be named as the timeline or Java.

79
00:06:18,880 --> 00:06:22,960
So we will be creating that main class inside this folder only.

80
00:06:23,290 --> 00:06:27,070
So let us start the coding execution part of our project.

81
00:06:27,070 --> 00:06:34,270
We are going to create our main class inside the society folder on hitting the right click of a mouse.

82
00:06:34,420 --> 00:06:41,350
We have to select this new file option inside the SA C folder and we are going to create our new file

83
00:06:41,380 --> 00:06:42,940
timeline dot Java.

84
00:06:42,940 --> 00:06:47,590
So yes, this is going to be the name for the main class timeline.

85
00:06:48,220 --> 00:06:57,250
So I am going to name this as timeline dot Java and we should must include the Java extension at the

86
00:06:57,250 --> 00:07:04,240
end of every file we are making inside this Java project so that all the Java functions and classes

87
00:07:04,240 --> 00:07:07,070
become executable inside our file.

88
00:07:07,150 --> 00:07:14,290
Now on hitting enter this timeline class is already created, so this is definitely going to be our

89
00:07:14,290 --> 00:07:21,130
main class which will like be responsible for running and testing of our application.

90
00:07:21,130 --> 00:07:28,210
Now I'm going to extend this main class as a frame and inside this J frame.

91
00:07:28,210 --> 00:07:28,600
Okay.

92
00:07:28,600 --> 00:07:36,010
So this frame is going to be an import from the Java string package or the Java string is a framework

93
00:07:36,010 --> 00:07:38,680
and inside this frame is a component.

94
00:07:39,100 --> 00:07:41,170
This frame provides this frame.

95
00:07:41,170 --> 00:07:42,940
Okay, so this is the main frame.

96
00:07:43,210 --> 00:07:50,230
This frame is providing us the frame inside which all the components, the panels and whatever they

97
00:07:50,230 --> 00:07:52,510
are, the buttons, the scheduling tab.

98
00:07:52,510 --> 00:07:55,810
So all of them are enclosed inside this frame only.

99
00:07:55,810 --> 00:07:59,110
So we have extended the main class as the frame.

100
00:07:59,110 --> 00:08:03,490
Now let us create a main function first.

101
00:08:03,490 --> 00:08:08,320
So the function is going to be run in order to make the application running.

102
00:08:08,710 --> 00:08:16,330
So public, static, void, main and a string argument we are going to pass inside it.

103
00:08:17,350 --> 00:08:21,400
I mean a square bracket and arguments as are.

104
00:08:22,060 --> 00:08:25,900
So this is how a main function is created.

105
00:08:26,230 --> 00:08:29,550
We have already seen it inside the upload java class.

106
00:08:29,560 --> 00:08:37,210
So the public static void main this main function is going to open a new timeline.

107
00:08:37,450 --> 00:08:40,870
So this timeline is the class we have just created.

108
00:08:40,870 --> 00:08:45,430
And this function is going to run this class, make this class executable.

109
00:08:45,520 --> 00:08:49,450
Now in the next step, we are going to make our constructor timeline.

110
00:08:50,170 --> 00:08:56,170
And this constructor is going to contain all the objects and methods of this timeline in class.

111
00:08:56,170 --> 00:08:59,370
So, yes, I am using this super method.

112
00:08:59,650 --> 00:09:03,670
So this is the way to initialize a constructor with a bracket.

113
00:09:04,000 --> 00:09:09,070
This basically costs that class inside this public constructor.

114
00:09:09,070 --> 00:09:12,170
So this is a constructor and we are accessing the class.

115
00:09:12,190 --> 00:09:13,540
So what is a constructor?

116
00:09:13,540 --> 00:09:19,930
So constructor is our function, we can call it, and it has the same name as the class.

117
00:09:20,080 --> 00:09:24,030
So the names are identical inside the super method.

118
00:09:24,040 --> 00:09:29,620
We are going to set the title for our application and the title is going to be task cleaner.

119
00:09:29,800 --> 00:09:32,310
So what is the super method?

120
00:09:32,320 --> 00:09:36,520
So this super method invokes just above parent class.

121
00:09:36,520 --> 00:09:42,100
So just immediate parent to it is invoked with the help of this super method.

122
00:09:42,880 --> 00:09:49,210
So yes, the super method is going to invoke this function, the timeline constructor, the method we

123
00:09:49,210 --> 00:09:53,040
can call it, and it will open up with a title task line.

124
00:09:53,140 --> 00:09:55,600
Now we have to set aside for the frame.

125
00:09:55,810 --> 00:10:03,400
So calling, set size and this is going to contain the length and width for the application whenever

126
00:10:03,400 --> 00:10:04,260
it opens.

127
00:10:04,270 --> 00:10:08,410
So 700 by 700, I am setting the yes.

128
00:10:08,410 --> 00:10:10,570
The frame as this now.

129
00:10:11,860 --> 00:10:14,470
So we have to set the default close operation.

130
00:10:14,470 --> 00:10:18,430
Also here you can see that we are having a default close operation.

131
00:10:18,430 --> 00:10:22,210
So yes, we have to set that also inside the frame only.

132
00:10:22,210 --> 00:10:28,570
So default close operation and by default we have to set it to exit on close.

133
00:10:28,870 --> 00:10:37,150
So whenever we exit it should escape through the window which is opening, it should basically escape

134
00:10:37,150 --> 00:10:42,100
out of the application window now as set content pane.

135
00:10:42,490 --> 00:10:47,470
So that is a content inside the panel or the frame we can call it.

136
00:10:47,470 --> 00:10:52,630
And this content is so new based.

137
00:10:54,210 --> 00:10:57,780
So this new base is going to consist all of the frames.

138
00:10:57,790 --> 00:11:00,430
So basically it is a multi-vendor interface.

139
00:11:00,450 --> 00:11:03,910
There are multiple phases of this application here.

140
00:11:03,960 --> 00:11:04,650
You can count.

141
00:11:04,650 --> 00:11:09,060
This is the home page, this is the schedule page, this is the timeline page.

142
00:11:09,060 --> 00:11:11,070
This is the help page which is opening.

143
00:11:11,310 --> 00:11:13,500
Basically, we can call it about the split.

144
00:11:13,500 --> 00:11:22,170
And then so 4 to 5 frames are consistent inside this application and this set content pane is going

145
00:11:22,170 --> 00:11:29,370
to call invoke this new base method, and this base method is going to contain all of them at a single

146
00:11:29,370 --> 00:11:29,700
place.

147
00:11:29,700 --> 00:11:35,040
We will be just creating this immediately after this timeline or constructor.

148
00:11:35,160 --> 00:11:41,340
Okay, so setting resizable to true we can maximize the frame or minimize the frame head.

149
00:11:41,340 --> 00:11:44,370
We are having a maximize and minimize buttons.

150
00:11:44,370 --> 00:11:50,760
Also here you can see that this is the resizable thing for the frame or the window, whatever you call

151
00:11:50,760 --> 00:11:54,480
it, and set visible is set to false by default.

152
00:11:54,480 --> 00:12:02,520
So to make the frame visible, we have to set through it, to set it to true again and again while making

153
00:12:02,520 --> 00:12:03,810
any application.

154
00:12:03,810 --> 00:12:10,500
So keep this in mind to make any of the application visible enough frame set visible.

155
00:12:10,500 --> 00:12:14,220
True is the important factor to be kept in mind.

156
00:12:14,970 --> 00:12:17,610
Okay, so now let us create the base.

157
00:12:18,210 --> 00:12:22,710
So outside this we are going to create the base method.

158
00:12:24,970 --> 00:12:26,380
So this is.

159
00:12:27,760 --> 00:12:30,700
This is inside the main class, the constructor.

160
00:12:31,390 --> 00:12:31,960
Now.

161
00:12:33,460 --> 00:12:35,370
I'm coming to the base.

162
00:12:35,380 --> 00:12:41,760
So, yes, this is the base class we have created, which is extending itself as a DJ panels.

163
00:12:41,770 --> 00:12:49,480
So we are having a panel for the homepage, a panel for the schedule page or panel for this timeline,

164
00:12:49,480 --> 00:12:52,990
this whole about page, we can call it and the end.

165
00:12:53,350 --> 00:13:01,030
So inside the place base class after extending it as a G panel, we are using this home.

166
00:13:01,030 --> 00:13:10,720
So home is our object inside this class based help schedule plus the timeline we can see this is so

167
00:13:10,720 --> 00:13:11,680
this is the timeline.

168
00:13:11,800 --> 00:13:14,110
This is the schedule, this is the home.

169
00:13:14,320 --> 00:13:22,360
And this card layout is for the image which is appearing in a form of a card or the background image

170
00:13:22,360 --> 00:13:25,290
we can call it, and the end page.

171
00:13:25,300 --> 00:13:32,320
So yes, these are all the panels which are going to be enclosed inside the base class.

172
00:13:32,680 --> 00:13:33,090
Okay.

173
00:13:33,100 --> 00:13:40,540
So this inside this base class, invoking this base constructor and this base constructor is what we

174
00:13:40,540 --> 00:13:45,760
can call it, initializing the objects for all of them, whether it is for the card layout.

175
00:13:45,760 --> 00:13:49,540
So this is the method card is equal to new card layout.

176
00:13:49,540 --> 00:13:52,870
So this is going to create a new object for the card layout.

177
00:13:52,870 --> 00:13:56,380
And similarly for the home help schedule timeline.

178
00:13:56,380 --> 00:14:04,630
And, and with the help of this keyword, we are going to access which we have already declared it here.

179
00:14:04,630 --> 00:14:12,760
So to access anything which is any object which is declared inside any class, we have to use this keyword

180
00:14:12,760 --> 00:14:14,320
in order to access them.

181
00:14:15,350 --> 00:14:17,720
Now setting the layout, of course.

182
00:14:17,730 --> 00:14:20,420
So we have to set a layout for the class.

183
00:14:20,600 --> 00:14:22,280
Yes, the cards.

184
00:14:22,760 --> 00:14:24,320
And this is the card.

185
00:14:24,320 --> 00:14:28,390
And again, adding all of the panels to the frame.

186
00:14:28,400 --> 00:14:33,520
So adding all of the panels to the frame is done with the help of this add keyword.

187
00:14:33,530 --> 00:14:40,250
So we have added all of them home help, schedule time and then all five of the panels inside the frame.

188
00:14:40,250 --> 00:14:46,920
With the help of this art and this public word show, it is going to show this card.

189
00:14:46,940 --> 00:14:52,850
So, yes, all of them are appearing in the form of a card where there is this and it's this.

190
00:14:52,850 --> 00:14:55,450
So all of them are appearing in the form of a card.

191
00:14:55,460 --> 00:15:00,590
So this show it function is going to make them visible in the form of cards.

192
00:15:00,590 --> 00:15:03,300
So this was all about the mean class.

193
00:15:03,320 --> 00:15:08,030
Now, in the next part, we will be creating all the other required classes.

194
00:15:08,480 --> 00:15:11,740
So I'll see you in the next part with the rest of the classes.
