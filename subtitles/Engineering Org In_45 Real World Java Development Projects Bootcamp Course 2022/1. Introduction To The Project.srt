1
00:00:00,660 --> 00:00:01,780
Hello, everyone.

2
00:00:01,800 --> 00:00:08,700
So in this series of learning how to make projects in Java today, we are going to make this wonderful

3
00:00:08,700 --> 00:00:15,330
application, which is totally based on our purpose of increasing your productivity.

4
00:00:15,330 --> 00:00:24,150
So after completing this project, not even we will learn our Java concepts, but definitely this application

5
00:00:24,150 --> 00:00:29,490
is going to help us to enhance our productivity on our daily basis.

6
00:00:29,490 --> 00:00:34,680
So on your screens you can see the opening window of this application.

7
00:00:34,680 --> 00:00:40,110
So firstly come to the title, so build our time management app.

8
00:00:40,110 --> 00:00:45,720
So in this project we are going to build a time management application.

9
00:00:45,720 --> 00:00:47,640
So what do you think?

10
00:00:47,640 --> 00:00:52,470
Like what comes in your mind when I say the word time management?

11
00:00:52,470 --> 00:00:58,110
So I like to think about two aspects of what actually time management is.

12
00:00:58,680 --> 00:01:01,260
That is a management for everything.

13
00:01:01,800 --> 00:01:10,410
Like we manage our job, we manage our house, we manage our daily stuff, the groceries in our kitchen,

14
00:01:10,410 --> 00:01:18,720
and we manage everything that things should like look in a proper way that whenever we need it, it

15
00:01:18,720 --> 00:01:21,630
comes up to us without any complexity.

16
00:01:22,020 --> 00:01:25,590
So what comes in your mind when you talk about time management?

17
00:01:25,590 --> 00:01:29,220
So our time is definitely not a thing.

18
00:01:29,280 --> 00:01:33,690
It is basically we can say the framework of duration.

19
00:01:33,690 --> 00:01:38,550
We can say that that there is some duration and we call it as time.

20
00:01:38,550 --> 00:01:40,110
So that is the time.

21
00:01:40,110 --> 00:01:41,580
That is afternoon time.

22
00:01:41,580 --> 00:01:44,730
That is evening time and definitely the night time.

23
00:01:44,730 --> 00:01:47,520
So how can we manage that time?

24
00:01:47,520 --> 00:01:53,010
Like suppose we have some goals to fulfill on our specific day.

25
00:01:53,040 --> 00:02:00,510
Then how can we manage the time according to the task we are like aspiring to do so.

26
00:02:00,510 --> 00:02:09,420
We have to set the goals correctly in a manner that the time should not be wasted and it should be optimized.

27
00:02:09,780 --> 00:02:15,690
Basically, it means that we can do maximum number of tasks in minimum number of time.

28
00:02:15,690 --> 00:02:24,720
So this is what time management is in which we can perform maximum number of tasks in optimal time.

29
00:02:24,720 --> 00:02:27,510
So optimal duration we can say that.

30
00:02:27,510 --> 00:02:37,350
So in this application we are focusing on the concepts of Java, of course, but what is the outcome

31
00:02:37,350 --> 00:02:38,580
of this application?

32
00:02:38,580 --> 00:02:46,950
So in this application we will be building a full fledged time management tool which will help us to

33
00:02:46,950 --> 00:02:51,240
set our tasks and our timer attached to that task.

34
00:02:51,510 --> 00:02:59,700
Basically, we have to decide that up to what time we have to complete that specific task and also we

35
00:02:59,700 --> 00:03:02,880
can attach a deadline for our tasks.

36
00:03:02,880 --> 00:03:09,660
Suppose we want to do a specific task till 3 p.m. today, then we have to set that.

37
00:03:09,660 --> 00:03:17,790
Yes, we can start this task at 11 a.m. and we have to complete this task at 3 p.m. or today only.

38
00:03:17,790 --> 00:03:23,670
So in that manner this application is going to enable us to do so.

39
00:03:23,700 --> 00:03:32,040
It is going to help us to set a goal to perform on a specific day, a timer which is going to contain

40
00:03:32,040 --> 00:03:33,000
that duration.

41
00:03:33,570 --> 00:03:42,090
Till then, the task should be performed and on the completion time it will be like running continuously.

42
00:03:42,090 --> 00:03:45,450
So this is the setting of task window.

43
00:03:45,480 --> 00:03:51,720
Or once you hit this continue button, the timer will come up automatically and a timer will run.

44
00:03:51,720 --> 00:03:57,330
That is, you have to complete this task in a definite, definite timeframe.

45
00:03:57,330 --> 00:04:04,350
So yes, in that decided timeframe, you have to complete this a busy and definite timeframe for this

46
00:04:04,350 --> 00:04:05,460
task basically.

47
00:04:05,460 --> 00:04:08,670
So coming to the home page of this application.

48
00:04:09,840 --> 00:04:14,610
How you can see that we have made this application using Java string.

49
00:04:14,610 --> 00:04:19,410
So there is a frame inside which all the components are enclosed.

50
00:04:19,950 --> 00:04:22,960
So it is containing a title task line.

51
00:04:23,460 --> 00:04:25,490
Task management made is.

52
00:04:25,500 --> 00:04:34,230
So we are like managing our tasks with respect to time that it should be done in a minimum duration,

53
00:04:34,230 --> 00:04:40,880
the optimal duration, and we can save that time and do some more productive work in that time.

54
00:04:40,890 --> 00:04:47,910
So basically we are increasing our productivity with help of this application and most importantly,

55
00:04:47,910 --> 00:04:54,630
we are organizing our lives that yes, in this time we have to do this chorus and in this time we have

56
00:04:54,630 --> 00:05:01,830
to do this course and accordingly table we have made for our multiple number of tasks to be performed

57
00:05:01,830 --> 00:05:02,520
in a day.

58
00:05:02,640 --> 00:05:06,810
So also we can decide breaks between tasks.

59
00:05:06,810 --> 00:05:16,080
Suppose we have to do a work from 12 noon to 2 p.m., then we can like decide at lunch break for half

60
00:05:16,080 --> 00:05:22,500
an hour or so so we can set the other task from 2:30 p.m. to 4:30 p.m..

61
00:05:22,500 --> 00:05:30,090
So yes, basically this is allowing us to show that breaks between tasks that yes, this is our time

62
00:05:30,090 --> 00:05:30,810
to relax.

63
00:05:30,810 --> 00:05:37,740
We can relax in this time, have our food or whatever, the nap, short nap we want to take between

64
00:05:37,740 --> 00:05:38,370
tasks.

65
00:05:38,370 --> 00:05:46,050
So this is a we can say that full fledged application which will definitely increase our productivity

66
00:05:46,050 --> 00:05:50,640
and also help us to like relieve between the tasks.

67
00:05:50,640 --> 00:05:53,700
So yes, organizing is done.

68
00:05:53,820 --> 00:06:02,910
Taking break between tasks is also managed and also we can plan our future goals also inside this.

69
00:06:03,180 --> 00:06:11,280
So on the homepage of this application that is like a goal task planner helps you to increase our productivity

70
00:06:11,280 --> 00:06:14,730
by focusing on individual tasks one at a time.

71
00:06:14,730 --> 00:06:21,030
So yes, this is a goal for this time management application we are going to make that it helps us to

72
00:06:21,030 --> 00:06:25,530
increase our productivity by focusing on an individual task at a time.

73
00:06:25,620 --> 00:06:32,520
So suppose we want to do multiple tasks in a definite timeframe then that is like definitely going to

74
00:06:32,520 --> 00:06:35,970
mess up everything and we will end up in completing none of them.

75
00:06:35,970 --> 00:06:39,900
So we can only decide one task at a time.

76
00:06:39,900 --> 00:06:44,610
And then after completing that one task, then only we can switch to the other tasks.

77
00:06:44,610 --> 00:06:47,460
So yes, this is a main goal of this application.

78
00:06:47,460 --> 00:06:50,130
We will see further what is actually happening here.

79
00:06:50,670 --> 00:06:59,580
So that is an image on the homepage which is like showing our clock and all the plans, whether it is

80
00:06:59,580 --> 00:07:01,530
thinking, planning, managing.

81
00:07:01,530 --> 00:07:09,510
And so yes, basically this image is giving us an idea about what actually time management is like going

82
00:07:09,510 --> 00:07:10,530
to teach us.

83
00:07:10,590 --> 00:07:15,330
Also there are two buttons on the homepage are start now button and a help page.

84
00:07:15,360 --> 00:07:21,690
So the start button is going to open the interface where we can organize our tasks.

85
00:07:21,690 --> 00:07:27,750
And there is a help page which is basically the telling the goals of this application.

86
00:07:27,750 --> 00:07:33,990
And about page you will be navigated to when you hit this help page button and yes, we will see what

87
00:07:33,990 --> 00:07:35,460
actually this help page is.

88
00:07:35,460 --> 00:07:40,260
So on hitting the start now button this window opens up again.

89
00:07:40,260 --> 00:07:48,690
There is a title and there is a text field and a like a side to the text field there is a continue button.

90
00:07:49,380 --> 00:07:57,540
Once you like hit like enter to and hit this continue button, then automatically these two text field

91
00:07:57,540 --> 00:08:00,330
are paired with a timer text field.

92
00:08:00,330 --> 00:08:04,080
We can say that all of these will remain empty in the beginning.

93
00:08:04,140 --> 00:08:09,600
This is the interface after entering to her and hitting the continue button.

94
00:08:09,600 --> 00:08:14,670
But initially on hitting the start button, only this text field and the continue button will appear

95
00:08:14,670 --> 00:08:15,930
on the screen.

96
00:08:16,260 --> 00:08:20,310
We will see that how actually things are working in the next part.

97
00:08:20,310 --> 00:08:27,360
But this is just a slide which is showing that this task arranging window is how it is looking.

98
00:08:27,360 --> 00:08:31,020
So yeah, so on selecting tool from here and hitting continue.

99
00:08:31,050 --> 00:08:33,870
We can align two tasks in a row.

100
00:08:34,350 --> 00:08:40,080
We can set a definite time frame for that specific task and similarly for the other one.

101
00:08:40,080 --> 00:08:48,670
So suppose I have said 9 p.m. to 10 p.m. for this task, ABC and this task basically I have set 2 a.m.

102
00:08:48,670 --> 00:08:49,670
to 3 a.m..

103
00:08:49,800 --> 00:08:52,590
So on hitting this content button.

104
00:08:52,590 --> 00:08:58,200
So suppose these are the two tasks we are aspiring to complete by 3 a.m. today.

105
00:08:58,290 --> 00:09:03,090
So yes, this is the only thing we are listing here and on hitting continue.

106
00:09:03,120 --> 00:09:06,630
We will navigate it to this window, what this window is.

107
00:09:06,630 --> 00:09:09,000
So here we are having a timer.

108
00:09:09,360 --> 00:09:10,900
That colour font.

109
00:09:10,900 --> 00:09:12,850
We can say that at the time.

110
00:09:12,850 --> 00:09:18,190
I will run in this part and this is we can call it a timeline.

111
00:09:18,190 --> 00:09:26,260
So this timeline is a frame with a black background and we can say that a number line and that number

112
00:09:26,260 --> 00:09:31,450
line is like containing a clock from 12 to 12.

113
00:09:31,480 --> 00:09:37,020
So this 12 to 12 is the daytime and this 12 to 12 is the nighttime.

114
00:09:37,150 --> 00:09:44,770
Basically, we have 24 hours in a day and we are arranging our task, the goals which we have to fulfill

115
00:09:44,770 --> 00:09:47,500
by that day inside this timeline.

116
00:09:47,500 --> 00:09:51,710
So suppose we have set 2 a.m. to three M for BCB.

117
00:09:51,760 --> 00:09:55,870
So here it is, Blue Color Day and our hair also it is blue color.

118
00:09:56,920 --> 00:10:00,790
Similarly for ABC, we have set 9 p.m. to 10 p.m..

119
00:10:00,880 --> 00:10:10,600
So this is the nighttime, the like starting of the day from 12 at night and this is the time after

120
00:10:10,600 --> 00:10:11,920
the like afternoon.

121
00:10:11,920 --> 00:10:17,620
We can say that after 12 noon this is the time till 12:00 night.

122
00:10:17,650 --> 00:10:25,120
So here, here we are changing our ABC in this timeframe and we are setting this BCD in this timeframe.

123
00:10:25,270 --> 00:10:34,900
So this is how the task that we have added inside the like this rose we can say that the text we are

124
00:10:34,900 --> 00:10:37,510
aligned in this timeline accordingly.

125
00:10:37,510 --> 00:10:42,070
The time which we have set and also this time is running here.

126
00:10:42,070 --> 00:10:51,100
So suppose that we have to start our task ABC So the ABC we have to start from 9 p.m. to 10 p.m..

127
00:10:51,310 --> 00:11:00,160
Then suppose we are currently at the we can say that one hour, 25 minutes ahead of this 9 p.m..

128
00:11:00,160 --> 00:11:02,320
So this ABC is 9 p.m..

129
00:11:02,320 --> 00:11:07,600
So suppose we are here right now like this is the time we are at present.

130
00:11:07,600 --> 00:11:10,600
So this is showing a time on that.

131
00:11:10,600 --> 00:11:15,580
What is the time left for us to start that task?

132
00:11:15,580 --> 00:11:23,860
ABC which is in this purple coloured frame, and once that time will like finish then on getting this

133
00:11:23,860 --> 00:11:31,060
done with ABC button window will open, which will show that you have saved one hour, 25 minutes.

134
00:11:31,060 --> 00:11:39,730
So suppose I have completed this ABC Bay like before this 9 p.m. to 10 p.m. as I have nothing to do.

135
00:11:39,730 --> 00:11:43,000
Then I want to complete that task earlier.

136
00:11:43,030 --> 00:11:50,260
Then if I complete that task the one hour, 25 minutes ahead of this 9 p.m., then I'm hitting this

137
00:11:50,260 --> 00:11:51,640
done with ABC.

138
00:11:51,670 --> 00:11:53,170
This window will open.

139
00:11:53,170 --> 00:11:55,870
You have saved one hour, 25 minutes here.

140
00:11:55,870 --> 00:12:00,130
You can see that a plane window will open with just a text containing that.

141
00:12:00,130 --> 00:12:02,380
How much time we have saved our wasted.

142
00:12:02,500 --> 00:12:06,520
Now suppose that we complete our task after 10 p.m..

143
00:12:07,540 --> 00:12:13,090
Then this window will show that you have wasted that specific time, which is extra.

144
00:12:13,090 --> 00:12:15,940
Now, this is the help page we were talking about.

145
00:12:15,940 --> 00:12:21,100
This is simply telling the goals of this application and not hitting this back to home button.

146
00:12:21,100 --> 00:12:24,550
We can navigate back to our like home page.

147
00:12:24,550 --> 00:12:27,220
Now what are the specifications of the project?

148
00:12:27,250 --> 00:12:33,790
We have already discussed that it is a Java string timeline like interface which helps us to prevent

149
00:12:33,790 --> 00:12:40,720
our procrastination, complete our tasks in a fixed amount of time and we do not have to waste any extra

150
00:12:40,720 --> 00:12:41,170
time.

151
00:12:41,170 --> 00:12:47,620
So yes, this is like managing everything from setting a goal, prioritizing tasks that which are tasks

152
00:12:47,620 --> 00:12:49,630
to do for us to this task to do next.

153
00:12:49,630 --> 00:12:55,390
And also taking a break between tasks here, you can see that we can take breaks between the tasks and

154
00:12:55,390 --> 00:13:01,720
this white color number line will show the amount of break we are taking between any two specific tasks.

155
00:13:01,750 --> 00:13:07,840
Now, whenever a task is completed, then done button is coming out of that timeline with a message

156
00:13:07,840 --> 00:13:12,010
of time seven times 15, which we have already encountered here that year.

157
00:13:12,010 --> 00:13:17,110
So once we hit this done button, then our window will appear, which will come or take us out from

158
00:13:17,110 --> 00:13:22,360
the timeline and tell us that what is the actual time we have saved or wasted now?

159
00:13:22,600 --> 00:13:26,650
What are the concepts we are going to learn after the completion of this project?

160
00:13:26,650 --> 00:13:33,820
So we will be using object oriented programming in Java for the light programming section of this application.

161
00:13:33,970 --> 00:13:37,120
We are going to make a Java application from scratch.

162
00:13:37,150 --> 00:13:42,520
We will be creating a new project in the ID and then coding it one by one to understand each of the

163
00:13:42,520 --> 00:13:44,230
functionalities in detail.

164
00:13:44,320 --> 00:13:51,160
Now we are going to use string and frameworks in an extensive manner, so such that we are going to

165
00:13:51,160 --> 00:13:56,920
use simple date format, array, list, calendar, basic stroke and action listener and are many more

166
00:13:56,920 --> 00:13:57,370
of them.

167
00:13:57,370 --> 00:14:01,390
We will encounter this in the next part where we will start the coding section.

168
00:14:01,510 --> 00:14:07,690
Also, we will learn how java timer and calendar functions are working inside the application.

169
00:14:07,870 --> 00:14:09,160
How we are attaching the.

170
00:14:09,390 --> 00:14:15,120
Inside the application as we know that everything we are doing inside this application is around times

171
00:14:15,120 --> 00:14:18,590
and dates and yes, we are saving time, definitely.

172
00:14:18,630 --> 00:14:25,110
So at that time it is going to be the main part of this application are definitely also we will be learning

173
00:14:25,110 --> 00:14:26,610
about classes and object.

174
00:14:26,610 --> 00:14:32,070
So if there is object oriented programming, then there is nothing without classes, objects, method

175
00:14:32,070 --> 00:14:34,740
calling functions and all of them.

176
00:14:34,740 --> 00:14:41,310
So yes, classes and objects are also going to be like the main part inside the coding section of this

177
00:14:41,310 --> 00:14:42,060
application.

178
00:14:42,060 --> 00:14:48,240
And yes, we will start the coding section after taking a quick look at the application that how it

179
00:14:48,240 --> 00:14:48,990
is working.

180
00:14:48,990 --> 00:14:50,520
So see you in the next part.
