WEBVTT
1
00:00:01.200 --> 00:00:01.630
Okay.

2
00:00:01.680 --> 00:00:09.750
So in the previous part, we have covered about all the functionalities of the buttons, the text field,

3
00:00:09.750 --> 00:00:14.310
the add download button and to verify the URL.

4
00:00:14.340 --> 00:00:22.560
We have written several functionalities to check that whether the download could be downloaded, the

5
00:00:22.560 --> 00:00:24.570
URL is valid or not.

6
00:00:24.690 --> 00:00:33.930
The HTTP control check, the lowercase check and all types of the check we have looked up to in the

7
00:00:33.930 --> 00:00:38.670
upper part of this download manager file.

8
00:00:38.940 --> 00:00:43.410
Now, in this part we are going to like check.

9
00:00:44.130 --> 00:00:47.700
We have to like update simply the buttons.

10
00:00:47.790 --> 00:00:56.610
You can see that initially we have pause and cancel button enabled when we selected already downloading

11
00:00:56.610 --> 00:00:57.270
file.

12
00:00:57.570 --> 00:01:04.800
Suppose that we have paused the file, then this highlight is going to be different.

13
00:01:05.400 --> 00:01:11.210
If a file is paused, then there is the zoom button and the cancel button will be highlighted.

14
00:01:11.220 --> 00:01:14.610
Only the pause button will not highlight.

15
00:01:14.610 --> 00:01:21.230
So the button highlight think is going to be differ in according to this date.

16
00:01:21.240 --> 00:01:24.000
So there are several steps here.

17
00:01:24.330 --> 00:01:32.300
It is downloading, it is paused, it is error and it is like an error cancer and complete it.

18
00:01:32.310 --> 00:01:41.760
So basically we have four types of status for each download you are done so this is performing or that

19
00:01:41.760 --> 00:01:49.860
only we have to update the buttons highlight according to what is the status so we have for status?

20
00:01:49.860 --> 00:01:51.340
Yes, we have discussed it.

21
00:01:51.360 --> 00:01:54.030
Downloading paused error and complete.

22
00:01:54.450 --> 00:02:01.410
So complete is going to be set as the default like case of this switch statement.

23
00:02:01.410 --> 00:02:09.690
We are using this switch statement to like switch to the highlight according to the status of the buttons.

24
00:02:09.810 --> 00:02:18.900
So yes, if the selected download is not null, this means that we are selecting, although the selection

25
00:02:18.900 --> 00:02:26.700
is made so according to the status of that selected row, the buttons are going to be enabled.

26
00:02:26.790 --> 00:02:35.700
So suppose if we have selected like row which is already downloading, then the pause and cancel button

27
00:02:35.700 --> 00:02:43.680
are set to enable and rest of the two are set to false, which means that that zoom and clear button

28
00:02:43.680 --> 00:02:47.820
are to be set as disabled for our downloading state.

29
00:02:47.820 --> 00:02:55.590
Similarly, for the state, we have already discussed it that the pause button will set to disable and

30
00:02:55.590 --> 00:03:01.440
only the resume and cancel button will be enabled for a pause state.

31
00:03:01.470 --> 00:03:10.170
And for the state only the resume and the clear button will look like like suppose I error arise.

32
00:03:10.170 --> 00:03:18.510
We have discussed it in the working part, so if error arise then we have to like simply assume that

33
00:03:18.840 --> 00:03:21.000
it is not going to work in any way.

34
00:03:22.050 --> 00:03:24.120
One only once it is going to work.

35
00:03:24.120 --> 00:03:27.660
Like suppose that is a break in your network.

36
00:03:27.780 --> 00:03:30.450
The internet is not working correctly.

37
00:03:30.450 --> 00:03:36.420
Then if error state will show you try to like disconnect and connect to your network.

38
00:03:36.420 --> 00:03:43.980
Then if you hit on the resume button, then we can assume that yes, the download can again start if

39
00:03:44.130 --> 00:03:51.330
there was a network issue, but otherwise it is not going to like perform anything that is you button

40
00:03:51.330 --> 00:03:59.310
will not work if the link is broken or there is a problem with the file inside the link.

41
00:03:59.970 --> 00:04:02.370
So yes, this is for the read part.

42
00:04:02.370 --> 00:04:11.040
And by default if the download is completed that everything is set to false despite of this clear button.

43
00:04:11.190 --> 00:04:20.250
So yes, suppose that we have this 100% downloaded file, then if we will select this, then only the

44
00:04:20.250 --> 00:04:23.370
clear button will be set to enable rest.

45
00:04:23.370 --> 00:04:28.140
All of the three will be disabled for a completed state.

46
00:04:29.400 --> 00:04:29.910
Okay.

47
00:04:30.190 --> 00:04:32.240
And also for the cancer state.

48
00:04:32.250 --> 00:04:39.060
So we can like cancel any download in the middle which is going to work in a similar way of a complete

49
00:04:39.060 --> 00:04:39.750
download.

50
00:04:41.070 --> 00:04:50.580
Only the care button is going to be labeled as so what if none of the photos are selected?

51
00:04:50.850 --> 00:04:53.970
Then all the buttons will be set to false.

52
00:04:53.970 --> 00:04:57.540
Like we have in our slides, we have no rows selected.

53
00:04:57.960 --> 00:05:04.470
All the buttons are set to disable this l statement is doing that only now.

54
00:05:05.040 --> 00:05:09.180
So what if that download is completed?

55
00:05:09.480 --> 00:05:11.760
So we have to update the buttons.

56
00:05:11.760 --> 00:05:18.960
According to that we are using this update button's function which we have declared above.

57
00:05:19.170 --> 00:05:23.280
So we are like, yes, this is the update buttons function.

58
00:05:23.280 --> 00:05:26.970
We are going to like call this update button function.

59
00:05:26.970 --> 00:05:35.430
If the download selected is not null and we are selecting that, yes, a file is going to be selected.

60
00:05:35.430 --> 00:05:38.580
Now what is going to be performed?

61
00:05:39.120 --> 00:05:45.660
So this is going to update this is update button's function and this is update function.

62
00:05:45.660 --> 00:05:52.950
So the file file in the like window is going to be updated according to this function.

63
00:05:52.950 --> 00:05:59.190
Now at last we are like setting things to the frame.

64
00:05:59.190 --> 00:06:06.570
So this is the main file which will be responsible for testing and running of the application.

65
00:06:06.570 --> 00:06:15.580
So to run in order to run this download manager, we have to add like this to the OR.

66
00:06:15.720 --> 00:06:18.450
We are using this manager object.

67
00:06:18.990 --> 00:06:21.930
This download manager is the name of our class.

68
00:06:21.930 --> 00:06:25.050
This manager is the object.

69
00:06:25.050 --> 00:06:33.810
This new download manager is going to be run whenever whenever we will try to run Java for this class.

70
00:06:33.900 --> 00:06:44.580
And yes, so this manager will show once the file will be executable and image icon will be displayed

71
00:06:44.580 --> 00:06:45.870
on the taskbar.

72
00:06:45.960 --> 00:06:50.310
So we have to like add this image to our folder.

73
00:06:50.310 --> 00:06:56.910
So I am just, just simply dragging and dropping it in this folder as well.

74
00:06:57.420 --> 00:07:03.390
All the important files are to be consistent inside this SRT folder only.

75
00:07:03.510 --> 00:07:07.530
So I have added this download icon button.

76
00:07:07.710 --> 00:07:10.170
You can see this I can head also.

77
00:07:10.680 --> 00:07:12.990
So we have added this.

78
00:07:13.020 --> 00:07:21.180
Now whenever this application will run, then this icon will be displayed on the top of the page and

79
00:07:21.180 --> 00:07:22.700
the taskbar.

80
00:07:23.100 --> 00:07:28.920
So yes, we have added the image icon, we have set the icon image.

81
00:07:28.920 --> 00:07:37.350
So this is for setting the icon and manager is going to be shown on our window whenever we will run

82
00:07:37.350 --> 00:07:39.900
this class download manager.

83
00:07:40.800 --> 00:07:49.920
So as far I can see that that we have covered everything inside this download manager class and all

84
00:07:49.920 --> 00:07:52.920
the functionalities are to be attached.

85
00:07:52.920 --> 00:08:00.390
So we have like successfully added everything to the frame, we have added functionalities to the button,

86
00:08:00.480 --> 00:08:07.890
we have added this progress, but we have checked the UI and everything like this.

87
00:08:07.890 --> 00:08:09.030
Add download button.

88
00:08:09.030 --> 00:08:12.330
That text field is covered already.

89
00:08:12.540 --> 00:08:22.520
Now we have like a second step to be performed is to create a progress renderer class inside this RC

90
00:08:22.530 --> 00:08:23.790
for that as well.

91
00:08:23.790 --> 00:08:35.370
So Progress Renderer is going to cover the progress bar which is displaying the functionality for like

92
00:08:35.370 --> 00:08:44.910
a percentage of tasks performed, whether it is 0% or it is completed, then it is showing 100%.

93
00:08:44.910 --> 00:08:45.990
So I guess.

94
00:08:47.390 --> 00:08:55.520
So we have imported all the packages which are going to be required inside this progress renderer class.

95
00:08:55.670 --> 00:09:03.890
This progress render class is responsible for this column, this specific column of the table model,

96
00:09:03.890 --> 00:09:13.340
and we are going to cover the progress renderer in this separate class as it is the most important column

97
00:09:13.340 --> 00:09:15.230
of overall table.

98
00:09:15.380 --> 00:09:25.040
So what like this progress render is continuously increasing, so we have to set everything according

99
00:09:25.040 --> 00:09:26.810
to this progress render.

100
00:09:27.560 --> 00:09:40.310
So inside this class I am going to stay like extending it to a j progress bar and with the help of this.

101
00:09:40.820 --> 00:09:45.410
Okay, so this J progress bar is a component of the string library.

102
00:09:45.980 --> 00:09:51.680
We have extended it and the string is already highlighted.

103
00:09:51.860 --> 00:09:54.080
So yes, this is a.

104
00:09:54.890 --> 00:10:01.490
Java swing component that visually displayed the progress of some tasks.

105
00:10:02.060 --> 00:10:05.770
So we have components for everything inside this library.

106
00:10:05.780 --> 00:10:10.480
Things become so simple with the help of these things.

107
00:10:10.490 --> 00:10:19.490
So, okay, so inside this we are going to implement, okay, so what we are going to implement table

108
00:10:19.490 --> 00:10:20.510
cell renderer.

109
00:10:20.750 --> 00:10:30.890
So we are having cells inside the table for progress and that cell is going to increase whenever the

110
00:10:31.220 --> 00:10:33.860
download is going to be performed.

111
00:10:33.860 --> 00:10:37.640
So table cell renderer is going to be implemented.

112
00:10:38.090 --> 00:10:48.020
Now inside this progress render class, we are going to like initialize a constructor for progress render.

113
00:10:48.350 --> 00:10:52.820
So it is going to be written like public progress render.

114
00:10:53.560 --> 00:10:55.150
And here it is.

115
00:10:55.780 --> 00:11:03.390
And inside this, we are going to like initialize two arguments into min and max.

116
00:11:03.400 --> 00:11:10.180
So the progress render is starting from zero and going up to 100.

117
00:11:10.600 --> 00:11:14.380
So yes, the progress render object is created.

118
00:11:14.980 --> 00:11:25.210
Now a super is going to be like display the mean and max state of the progress rendered object.

119
00:11:25.840 --> 00:11:29.200
So I guess we're done with this constructive thing.

120
00:11:29.230 --> 00:11:36.820
Now, our next concern is to like return this progress, but as the renderer for our given tables.

121
00:11:37.180 --> 00:11:44.590
So we are having separate progress, renderers for all the downloads which are taking place.

122
00:11:45.330 --> 00:11:45.440
Okay.

123
00:11:45.490 --> 00:11:52.810
So you can see that here we have like a separate progress renderers for all the files so we are using.

124
00:11:52.810 --> 00:11:58.120
So the above one is showing 22% and the below and ensuring trend is 12%.

125
00:11:58.210 --> 00:12:04.300
So yes, we have to return for every specific though.

126
00:12:04.450 --> 00:12:07.390
So creating a component.

127
00:12:08.190 --> 00:12:19.140
Like it is going to be a function public component and this component is going to get that specific

128
00:12:19.140 --> 00:12:20.280
table cell.

129
00:12:22.420 --> 00:12:24.340
They both said it is.

130
00:12:25.790 --> 00:12:28.670
Everything is to be written in camel case.

131
00:12:28.670 --> 00:12:30.560
So table sell component.

132
00:12:31.660 --> 00:12:33.300
It is like a renderer.

133
00:12:33.310 --> 00:12:35.860
So table setter, renderer component.

134
00:12:36.430 --> 00:12:40.500
We have called inside this function.

135
00:12:40.510 --> 00:12:44.680
We are going to add a table.

136
00:12:46.660 --> 00:12:55.810
Babel, an object which is going to be the value of that specific problem.

137
00:12:55.840 --> 00:13:04.390
Suppose whatever the percent is and a boolean, which is when that is selected.

138
00:13:04.690 --> 00:13:10.570
So the highlight is going to be a bit different if that is selected.

139
00:13:11.170 --> 00:13:11.680
Okay.

140
00:13:11.680 --> 00:13:15.730
So it is to be written together.

141
00:13:15.820 --> 00:13:21.760
So there are three functionalities inside this function.

142
00:13:22.180 --> 00:13:22.520
Okay.

143
00:13:22.540 --> 00:13:32.980
So after this we have two, we have three more like things of focus row and column to attach that also.

144
00:13:33.430 --> 00:13:33.780
Okay.

145
00:13:33.880 --> 00:13:40.570
So we have like imported all the functionalities of this get table self renderer component.

146
00:13:40.570 --> 00:13:45.790
So there are table value is selected, has focused row and column.

147
00:13:46.030 --> 00:13:55.060
So the progress bar is going to be a unique cell for all the unique downloads taking place for this

148
00:13:55.060 --> 00:13:55.630
for this.

149
00:13:55.630 --> 00:14:03.700
And it is going to have a focus, a specific row, a specific column of the complete table.

150
00:14:03.700 --> 00:14:08.290
And also everything is going to be covered in that order.

151
00:14:08.740 --> 00:14:16.630
So we are setting a percent component for the progress bar, which is going to be a float value.

152
00:14:17.140 --> 00:14:21.580
So we're taking percentage as float is our healthy practice.

153
00:14:21.580 --> 00:14:23.120
So set value in.

154
00:14:23.230 --> 00:14:29.730
So this is for the percentage which is going to be displayed in the progress render item.

155
00:14:30.250 --> 00:14:38.050
So by far we have covered all the things in the download manager class and the progress render class

156
00:14:38.050 --> 00:14:38.770
as well.

157
00:14:39.370 --> 00:14:44.890
We have covered our two classes of this project till now.

158
00:14:44.890 --> 00:14:55.870
Now there are two more classes that are need to be covered are the table model class and the other functionalities

159
00:14:55.870 --> 00:15:03.820
of the table, like the size, the speed, the time and the status part.

160
00:15:03.820 --> 00:15:07.060
And we are going to call that class simply download.

161
00:15:07.180 --> 00:15:15.550
So yes, there are two more classes to be covered after this, so we will see that in the next part.
