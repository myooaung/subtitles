1
00:00:01,430 --> 00:00:05,950
So in this video, we will be talking about our tic tac toe game.

2
00:00:05,960 --> 00:00:07,090
This will be the last video.

3
00:00:07,100 --> 00:00:11,420
After that, we will show the live run of this project of every class.

4
00:00:12,710 --> 00:00:15,380
So this tic tac toe.

5
00:00:16,850 --> 00:00:18,690
Class is defined inside the package.

6
00:00:19,340 --> 00:00:25,310
We have imported the necessary packages like Java, JWT, Java event and Java exports.

7
00:00:25,320 --> 00:00:26,210
Fantastic.

8
00:00:26,210 --> 00:00:29,510
So these will be the packages we will be importing.

9
00:00:29,570 --> 00:00:35,300
After that, we have defined our one class extending frame and implementing item listener and both X

10
00:00:35,300 --> 00:00:36,530
and listener interfaces.

11
00:00:36,740 --> 00:00:43,400
Now inside the end variable we will be having ij ij x phi and this will be the integer variables we

12
00:00:43,400 --> 00:00:45,010
will be having in this class.

13
00:00:45,020 --> 00:00:49,820
Then we have an integer area in which we have a two dimensional in which we have stored these kinds

14
00:00:49,820 --> 00:00:50,240
of.

15
00:00:51,370 --> 00:00:52,040
Values.

16
00:00:52,060 --> 00:00:58,450
This will be used to format our tic tac toe game effectively and there's even class also storing some

17
00:00:58,450 --> 00:00:59,500
kind of values.

18
00:00:59,680 --> 00:01:02,130
After that there is a boolean, a state type and set.

19
00:01:02,140 --> 00:01:05,860
These will be three variables named as boolean type of boolean.

20
00:01:05,860 --> 00:01:07,050
After that there is an icon.

21
00:01:07,060 --> 00:01:09,580
I see, I see one, I see one I see two.

22
00:01:09,580 --> 00:01:12,610
I can see I see one, one I see two, two.

23
00:01:12,610 --> 00:01:18,310
Then there's a two checkboxes, two labels, but ten type of areas for eight buttons.

24
00:01:18,310 --> 00:01:25,300
And actually it is from 0 to 8 that will be nine buttons and g button is close to reset.

25
00:01:26,710 --> 00:01:30,550
Then what we are doing is defining a method public wide show button.

26
00:01:32,280 --> 00:01:36,810
At initial what we are doing is accessible to ten boys, goes to ten and just goes to zero.

27
00:01:36,840 --> 00:01:39,990
We are iterating over the high value.

28
00:01:40,740 --> 00:01:46,140
High is equal to zero is less than is close to eight plus plus x plus is equals to 100 and g plus plus.

29
00:01:46,890 --> 00:01:48,980
We are setting by is equal to new button.

30
00:01:48,990 --> 00:01:54,270
Now if JS was equal to three, what we are doing is j is equal to zero, y is goes to Y plus hundred

31
00:01:54,270 --> 00:01:55,500
and x is equal to ten.

32
00:01:55,710 --> 00:01:57,430
Then we're setting inside the B.

33
00:01:57,440 --> 00:02:01,020
I set the amount as x, y and its size will be hundred from 100.

34
00:02:02,830 --> 00:02:04,750
Then we are adding that to our frame.

35
00:02:04,750 --> 00:02:07,690
After that, we are adding the action to that button.

36
00:02:07,840 --> 00:02:14,230
Now reset is goes to give it a new research setting its boundaries under 350 and its size will be 150.

37
00:02:14,380 --> 00:02:17,800
Adding the reset button to our frame after that reset add action.

38
00:02:18,160 --> 00:02:21,040
So this will add the action listener to our reset button.

39
00:02:23,080 --> 00:02:23,800
After that.

40
00:02:24,550 --> 00:02:28,240
This is end of Shorten class or it is a method actually.

41
00:02:30,080 --> 00:02:31,660
End of show rejected the method.

42
00:02:31,670 --> 00:02:35,390
After that we have defined the public void check, which is taking argument number one.

43
00:02:35,390 --> 00:02:40,310
So instead which we have iterated for is close to zero, i.e. less than is close to seven plus plus,

44
00:02:40,310 --> 00:02:42,350
then j for 1 to 3.

45
00:02:42,350 --> 00:02:48,090
And inside it what we are doing is a comma goes to number one and then we will be showing a four is

46
00:02:48,090 --> 00:02:48,950
equals to 11.

47
00:02:50,220 --> 00:02:51,480
This is for the check method.

48
00:02:51,570 --> 00:02:52,620
And then.

49
00:02:54,180 --> 00:02:56,100
We are doing for the computer logic.

50
00:02:56,100 --> 00:03:01,500
So in this tic tac toe game, we will be playing for the either with the computer or either with our

51
00:03:01,740 --> 00:03:03,810
player or two players.

52
00:03:03,810 --> 00:03:06,370
So public wide computer logic, which is taking antigen.

53
00:03:06,600 --> 00:03:09,660
So first we will be iterating from 0 to 7.

54
00:03:10,430 --> 00:03:18,350
And then there is a nested loop for the JV 1 to 3 because there will be three spaces in the tic tac

55
00:03:18,710 --> 00:03:25,190
toe interface and then there is what we are doing is if Ajax goes to NUM, then what we are doing a

56
00:03:25,580 --> 00:03:28,910
zero is goes to one one and a four is goes to one zero.

57
00:03:30,680 --> 00:03:32,120
Now for one.

58
00:03:32,270 --> 00:03:39,920
So what we are doing is, again, iterating from 0 to 7 and incrementing the loop and set as equals

59
00:03:39,920 --> 00:03:40,340
to two.

60
00:03:40,350 --> 00:03:43,040
So set value will be a boolean value.

61
00:03:43,190 --> 00:03:45,830
So whose value we have set here is true.

62
00:03:47,030 --> 00:03:51,710
Then if a four value is equals to ten, then encounters goes to zero.

63
00:03:51,710 --> 00:03:54,470
And then we have again defined the nested loop.

64
00:03:54,470 --> 00:03:56,250
J is equal to one and less.

65
00:03:56,330 --> 00:03:58,600
Then it goes to three and g plus plus.

66
00:03:59,030 --> 00:04:06,290
After that we have checked for the condition if b of a of ij minus one dot get I can not null so if

67
00:04:06,290 --> 00:04:09,860
there is no icon actually will be placing an image of cross and zero.

68
00:04:09,860 --> 00:04:17,390
So if there is no I can add that particular place and so that will be null if not null that there will

69
00:04:17,390 --> 00:04:17,810
be icon.

70
00:04:17,820 --> 00:04:21,920
So we will be incrementing the count plus plus if there is, I can then set.

71
00:04:21,920 --> 00:04:23,330
Yes, now is close to this.

72
00:04:23,420 --> 00:04:27,080
So inside the null will be storing the value of IAG.

73
00:04:28,300 --> 00:04:30,160
Now if count is equals to zero.

74
00:04:30,280 --> 00:04:33,280
So if count is equal to zero, what we are doing is be yes.

75
00:04:33,280 --> 00:04:38,650
Nil is equals yes nil minus one is set i can to ICI two so it'll be setting icon in that particular

76
00:04:38,650 --> 00:04:45,640
place and this dot check as equals to use null and we'll be storing this dot check passing that does

77
00:04:45,640 --> 00:04:50,230
not check to yes now and set set as equals to false and then break.

78
00:04:52,350 --> 00:04:54,300
After that inside the method.

79
00:04:54,300 --> 00:05:00,240
What we are doing is if a zero is equal to ten, so we are iterating again from the G to three plus

80
00:05:00,240 --> 00:05:00,690
plus.

81
00:05:00,690 --> 00:05:07,560
So if again get icon for that particular place, if that is also if there is no icon, we will be setting

82
00:05:07,560 --> 00:05:15,930
the AC to image to that icon to that place and pass to pass it to the distort check method and set the

83
00:05:15,930 --> 00:05:16,800
value as false.

84
00:05:16,800 --> 00:05:18,330
And then we'll be break again.

85
00:05:20,760 --> 00:05:22,500
After that, if that is, it goes to fall.

86
00:05:22,500 --> 00:05:24,270
So there will be break.

87
00:05:24,990 --> 00:05:27,990
And then if that goes to false again, then we'll break.

88
00:05:27,990 --> 00:05:32,340
So this statement will be respected for the above first statements.

89
00:05:32,340 --> 00:05:35,670
So that's why we have defined it twice after that.

90
00:05:36,180 --> 00:05:41,280
What we are doing is we are defining the constructor for that tic tac toe game class.

91
00:05:42,460 --> 00:05:44,320
I did it as tic tac toe.

92
00:05:44,410 --> 00:05:48,610
After that there is a checkbox rule CBJ new checkbox group.

93
00:05:48,910 --> 00:05:53,650
Then we have defined the checkbox group as see when it goes to new checkbox versus computer.

94
00:05:53,680 --> 00:05:58,390
CBG Falls City to see to is equal to new checkbox versus friend.

95
00:05:58,390 --> 00:06:00,040
CBG comma falls.

96
00:06:00,970 --> 00:06:03,640
SIMON We have set the bone and location for that.

97
00:06:03,670 --> 00:06:07,660
SIMON That is 128 and it size will be 100 cross 40.

98
00:06:07,660 --> 00:06:14,020
And for the sea to what we are doing is the location is one 2150 and its size is in Red Cross 14.

99
00:06:14,170 --> 00:06:16,990
Adding both of these 72 to our.

100
00:06:18,350 --> 00:06:24,620
Frame and seven segment ad item list, we will be adding item list to seven and see to respectively.

101
00:06:25,630 --> 00:06:30,580
Then there is a state as close to two trip as equals to two and set goals to setting the both.

102
00:06:30,760 --> 00:06:33,130
All the three variable variables to true.

103
00:06:33,460 --> 00:06:38,230
Then inside the IAC, one will be collecting a new image icon with the class or get system resource

104
00:06:38,230 --> 00:06:39,970
new ICI one jpg.

105
00:06:40,090 --> 00:06:45,800
Similarly, new icon image here for the class will get sys resource ici two.

106
00:06:45,820 --> 00:06:47,170
Similarly for the ESI one one.

107
00:06:47,170 --> 00:06:50,890
And I see through two images we have a stored inside these variables of image I can type.

108
00:06:53,010 --> 00:06:59,130
Then what we are doing is setting the layout as null, set the size as 3450 so the visibility as to

109
00:06:59,130 --> 00:07:01,530
and default close operation for that frame.

110
00:07:01,800 --> 00:07:05,250
After that we have defined the public void item is changed.

111
00:07:06,650 --> 00:07:11,160
So if Simon does get a state is true, then we will be set type as opposed to false.

112
00:07:11,180 --> 00:07:14,600
If we do not get a close to true, then we'll be type is close to true.

113
00:07:15,140 --> 00:07:17,320
Remove seven and remove z to three.

114
00:07:17,330 --> 00:07:23,510
Paint the complete frame 002 3450 and show the button we will be calling show button.

115
00:07:23,510 --> 00:07:29,240
So show button will be will do what its repaint again with the new image values.

116
00:07:31,250 --> 00:07:37,410
Then there is a I action performed method we have defined with the help of action event object and inside

117
00:07:37,420 --> 00:07:39,620
the if type is equals to true.

118
00:07:39,800 --> 00:07:46,820
So what we are doing is either get resources equals to reset then for is goes to 0 to 8 will set up

119
00:07:46,850 --> 00:07:47,630
by to set.

120
00:07:47,630 --> 00:07:52,010
I can null and else will be iterating over the 0 to 8.

121
00:07:53,160 --> 00:07:59,400
And if the resources from B of A, then what we are doing is by is taken as close to nil.

122
00:07:59,400 --> 00:08:05,730
So then really inside which what we are checking for, if state is true, we will be set icon to it

123
00:08:05,760 --> 00:08:13,620
to and set the state to false else if the eyes else what we are doing is inside the icon, we will storing.

124
00:08:13,620 --> 00:08:17,370
I see one image and set the status true at last.

125
00:08:17,370 --> 00:08:21,900
What we are doing is inside the bar we will set the icon to that particular icon image.

126
00:08:23,010 --> 00:08:30,330
So what we are checking for is that if the cross has been pasted, then we will be placing the zero.

127
00:08:30,330 --> 00:08:33,840
If the zero has been placed pasted, then we'll be placing the cross.

128
00:08:35,920 --> 00:08:36,730
After that.

129
00:08:37,030 --> 00:08:38,640
This is for now.

130
00:08:38,980 --> 00:08:46,870
If type is equals to false and if a resource is reset, then resetting by iterating over from 0 to 8

131
00:08:46,870 --> 00:08:48,310
and set the icon as null.

132
00:08:50,120 --> 00:08:56,000
Otherwise what we are doing is four eyes close to seven and inside it's a nested loop for 0 to 4 age

133
00:08:56,000 --> 00:08:58,670
is close to a one ij again initializing area.

134
00:09:00,450 --> 00:09:07,500
Then limited is for the computer logic for zero to less than is close to eight if to get resources from

135
00:09:07,740 --> 00:09:08,430
B1.

136
00:09:10,160 --> 00:09:13,680
We will not get ionesco's if the B1 icon is null.

137
00:09:13,850 --> 00:09:15,320
There is no icon in the null.

138
00:09:15,350 --> 00:09:18,110
Then we will set one set icon as opposed to AC one.

139
00:09:18,110 --> 00:09:24,480
And if we don't get ionesco's smell, if there is no the b4 place, then will set before I to seek to.

140
00:09:24,530 --> 00:09:25,850
Now this to check five.

141
00:09:25,850 --> 00:09:32,810
So you'll be passing and following the check method with the argument five and ls this dot compute logic

142
00:09:32,810 --> 00:09:34,730
to I so we'll be calling.

143
00:09:34,910 --> 00:09:40,520
If the condition is not true, then be the computer losing method with the argument as I value.

144
00:09:42,640 --> 00:09:43,300
After that.

145
00:09:43,300 --> 00:09:45,280
What we have did is a.

146
00:09:46,450 --> 00:09:48,160
For Isaac also less than seven.

147
00:09:48,160 --> 00:09:57,520
This will be for checking that who won or not so will be studying icon icon one and by this so for this

148
00:09:57,520 --> 00:10:03,760
place icon will be storing an icon one and I can do from this place and I can three from this place.

149
00:10:03,790 --> 00:10:08,590
Now if icon one is equals to icon two, I can go to icon three and icon one not as well.

150
00:10:09,040 --> 00:10:16,540
So if I can one not as close to null and I can, I can do a three as equals to same so and then what

151
00:10:16,540 --> 00:10:18,220
if icon one goes to see one?

152
00:10:18,310 --> 00:10:23,590
Now if icon one is close to see one means icon one is from the icy choice one.

153
00:10:23,590 --> 00:10:27,880
Then what we are doing is setting the icon to see one, one, one, one and one one.

154
00:10:29,320 --> 00:10:35,530
Every place we will set the icon to icy one, icy one, one, icy one, one and show them as a dialog

155
00:10:35,530 --> 00:10:38,800
box that this dot you one click reset.

156
00:10:38,800 --> 00:10:45,340
So if this condition will be true icy if the icon one matches to all the places with the icy one image

157
00:10:45,340 --> 00:10:50,320
so then it will show you one click reset as icy one is close to icy two.

158
00:10:50,350 --> 00:10:58,630
So if what's happening, if the image is from the icy two, then it will set the images first to icy

159
00:10:58,630 --> 00:11:05,380
to two to 2 to 2 and then show the image, show the dialog box that computer one.

160
00:11:05,380 --> 00:11:11,200
So if the image icy one match will be found from in any direction, then it will show that you want.

161
00:11:11,200 --> 00:11:17,920
If the icy two image matches found in any direction, then it will show that computer one click reset.

162
00:11:18,730 --> 00:11:23,260
Inside the main method we have defined the current instance of the class.

163
00:11:24,440 --> 00:11:25,460
New Day one.

164
00:11:25,460 --> 00:11:30,980
So whenever we run this class, run this file, the tic tac toe game will appear.

165
00:11:30,980 --> 00:11:33,680
So that's all from this tic tac toe game.
