WEBVTT
1
00:00:01.870 --> 00:00:05.170
So in this video, we will be talking about our next class.

2
00:00:05.170 --> 00:00:11.110
That is an online test class which will be creating or displaying an online type of multiple choice

3
00:00:11.440 --> 00:00:12.100
test.

4
00:00:12.280 --> 00:00:15.700
So let's have a look at its implementation and coding.

5
00:00:15.700 --> 00:00:20.800
So it is defined inside the package and we have imported the Abstract Window Toolkit package for the

6
00:00:21.100 --> 00:00:22.350
graphical user interface.

7
00:00:22.360 --> 00:00:28.870
Similarly, a DOT event for the event handling over the buttons and Java extracts going to provide a

8
00:00:28.870 --> 00:00:31.300
better GUI interface for that.

9
00:00:32.760 --> 00:00:37.050
Then we have defined our online test class, which is extending the frame and implementing X listener

10
00:00:37.080 --> 00:00:45.720
and there is a J label, l instance, a G label end and there is a G radio button JB of size five and

11
00:00:45.720 --> 00:00:51.990
then there is a, that is an area for that radio button and then there's a J button be one comma B to

12
00:00:51.990 --> 00:00:53.940
two buttons and button group of b g.

13
00:00:53.970 --> 00:01:00.600
There are some variables of integers like count current, x, y, and now and there is a type of integer

14
00:01:00.600 --> 00:01:01.790
array of size ten.

15
00:01:01.800 --> 00:01:07.620
Now inside the parameter constructor of that online, what we are doing is we are heading it as the

16
00:01:07.620 --> 00:01:11.280
past String s and Alice goes to New J label, adding that to the frame.

17
00:01:11.280 --> 00:01:16.680
After that we are defining the button group and further iterating over that five number 0 to 4.

18
00:01:16.710 --> 00:01:19.920
What we are doing is setting that button array.

19
00:01:19.920 --> 00:01:25.200
One is close to new radio button and adding that to our frame and also adding that button to our button

20
00:01:25.200 --> 00:01:25.620
group.

21
00:01:25.680 --> 00:01:30.120
After that, we have defined the two buttons we want and we go to next ten bookmark and adding that

22
00:01:30.660 --> 00:01:32.400
to that both of the buttons.

23
00:01:33.650 --> 00:01:39.330
After that, we have added both of the buttons to our frame and then set everything correctly.

24
00:01:39.350 --> 00:01:42.260
After that, we have set the bound for the label one.

25
00:01:42.350 --> 00:01:47.260
So this will set the location as 3040 and it size five 4450 across 20.

26
00:01:47.270 --> 00:01:50.930
Similarly, we have set the location for all the buttons zero one, two, three.

27
00:01:50.930 --> 00:01:52.070
So this will be the.

28
00:01:54.270 --> 00:01:56.460
Location for these buttons, radio buttons.

29
00:01:56.460 --> 00:01:59.820
And after that, what we are doing is setting the bound for the given button and setting the bond for

30
00:01:59.820 --> 00:02:01.230
the beta button.

31
00:02:01.260 --> 00:02:04.590
Similarly, what we are doing is setting the default flows operation for the frame.

32
00:02:04.590 --> 00:02:07.780
After that, setting the layout as now we will be not using any type of layout.

33
00:02:07.800 --> 00:02:10.440
Setting the location as 250, comma, 100.

34
00:02:10.440 --> 00:02:11.790
And after that, set the visibility.

35
00:02:11.790 --> 00:02:17.520
As to then what we are doing is setting the size at 600, comma, 350 for the frame inside the action

36
00:02:17.610 --> 00:02:21.680
form the method which is taking an action type of event.

37
00:02:21.690 --> 00:02:26.130
What we are doing is we are setting that to get resources equals to suppose to be one if the resource

38
00:02:26.130 --> 00:02:26.550
of the.

39
00:02:27.440 --> 00:02:34.120
One event is from B1, then we will first pass the method check to the available.

40
00:02:34.130 --> 00:02:40.730
So if it is true, then we will increment the count by plus one and current plus plus increment the

41
00:02:40.730 --> 00:02:43.760
variable current and then set everything again.

42
00:02:43.760 --> 00:02:45.970
After that, what you are doing is is current discourse skills.

43
00:02:45.980 --> 00:02:50.420
Nine We will set the P 1.10 interval false and B two dot set text result.

44
00:02:52.300 --> 00:02:55.120
After that if the command is from a bookmark.

45
00:02:55.120 --> 00:03:00.310
So if the user want to bookmark a question, what we are doing is creating a button new button bookmark

46
00:03:00.310 --> 00:03:01.210
plus x.

47
00:03:02.430 --> 00:03:07.440
After that, setting the bond for that button and after that, adding that button to our frame and adding

48
00:03:07.440 --> 00:03:08.580
accent listener to this.

49
00:03:08.670 --> 00:03:11.070
Then there is a max inside.

50
00:03:11.070 --> 00:03:15.270
The max will be stored current and incrementing the x variable and the current variable both.

51
00:03:16.840 --> 00:03:18.370
Then we are calling the set method.

52
00:03:18.370 --> 00:03:23.050
After that, if the calendar goes to nine, will be set by two points, set as equals to result and

53
00:03:23.050 --> 00:03:26.770
set the visibility of the current window as false and set the visibility as then true.

54
00:03:28.270 --> 00:03:35.770
Now for from one and for variables I and y we are iterating over those variables and what we are doing

55
00:03:35.770 --> 00:03:41.920
is getting action command and equals to bookmark plus y and if check y will be check passing check method

56
00:03:41.920 --> 00:03:46.870
two the f then we will be creating incrementing count variable and now it's close to current and then

57
00:03:46.870 --> 00:03:49.210
current as equals to m of y.

58
00:03:49.240 --> 00:03:50.860
Then we will calling the set method.

59
00:03:50.860 --> 00:03:58.870
After that we will be enabling the false property for the g button dot get resource get source and current

60
00:03:58.870 --> 00:04:04.150
is equals to now after that inside the get command we have equal for the result.

61
00:04:04.210 --> 00:04:06.280
So if then again check.

62
00:04:07.870 --> 00:04:08.680
For the Czech method.

63
00:04:08.680 --> 00:04:12.740
What we are doing is count as goes to count plus one and current plus plus.

64
00:04:12.760 --> 00:04:17.240
After that option pane, we will show the my dialog box that correct answer plus count.

65
00:04:17.260 --> 00:04:20.440
So this will be showing whenever the result button will be clicked.

66
00:04:20.440 --> 00:04:25.240
So this is showing that the correct answers and the number of correct answers with the help of count

67
00:04:25.240 --> 00:04:27.490
variables, then we will system not exit is close to zero.

68
00:04:27.490 --> 00:04:30.220
The program will be closed after that.

69
00:04:30.220 --> 00:04:35.140
This is the set method inside which we will be having our questions.

70
00:04:35.140 --> 00:04:40.810
So JB for point get selected is close to true and if current equals close to zero.

71
00:04:42.730 --> 00:04:48.460
So what's happening here is if current is close to is close to zero, then it will set the text in the

72
00:04:48.460 --> 00:04:54.850
label as this is the first text, this is the first question and set the options with respect to do

73
00:04:54.850 --> 00:04:55.090
that.

74
00:04:55.240 --> 00:04:56.260
All the radio buttons.

75
00:04:56.260 --> 00:04:57.700
j0123.

76
00:05:00.400 --> 00:05:07.330
Now for the one we will be selecting the next question and it's object it's options similarly for the

77
00:05:07.330 --> 00:05:08.230
current two.

78
00:05:09.610 --> 00:05:13.720
Current three four, five, six, seven.

79
00:05:15.760 --> 00:05:16.840
Eight and nine.

80
00:05:18.330 --> 00:05:24.330
Then what we are doing is setting the bound location for that label and after that we are for a comma

81
00:05:24.480 --> 00:05:30.330
j, comma zero and iterating over the two variables and setting the location for every radio button's

82
00:05:31.020 --> 00:05:32.460
now boolean check method.

83
00:05:32.460 --> 00:05:38.430
This is the check method which we have called again and again over the over these classes.

84
00:05:38.790 --> 00:05:40.260
Inside this action command name.

85
00:05:40.260 --> 00:05:43.770
And what we are doing inside is if current is equal to zero.

86
00:05:45.450 --> 00:05:48.540
Then we will be returning ggb when it is selected.

87
00:05:48.750 --> 00:05:57.090
So this will be checked for the this will return the correct answer.

88
00:05:57.120 --> 00:06:01.890
So this Boolean check will be returning the correct answers of every choice.

89
00:06:01.890 --> 00:06:08.520
So for the zeroth question, the selected correct selected is JB first operation first the option is

90
00:06:08.520 --> 00:06:09.660
correct for the one.

91
00:06:09.660 --> 00:06:12.990
Its second option is correct for the second.

92
00:06:12.990 --> 00:06:14.810
Its third option is correct.

93
00:06:14.820 --> 00:06:20.250
Similarly, for the third, fourth, fifth, sixth and 79th, we have returned the correct answers.

94
00:06:20.250 --> 00:06:23.070
And then after that, we have returned false.

95
00:06:25.000 --> 00:06:30.580
So inside the public static void when we have just called a new online test of the Java.

96
00:06:30.580 --> 00:06:39.730
So this is our IP finder or Java file which will help us to find the IP for the valid links over the

97
00:06:39.760 --> 00:06:40.390
net.

98
00:06:41.620 --> 00:06:44.810
I was worried from the valid URLs or website links.

99
00:06:44.830 --> 00:06:49.750
I mean, those websites would be valid or present in our World Wide Web.

100
00:06:49.780 --> 00:06:55.780
So with this class, we have defined inside the package space and then we have imported the necessary

101
00:06:55.780 --> 00:07:01.660
package like import Java exports thing, which is a modified version of the A to provide better graphical

102
00:07:01.660 --> 00:07:03.640
user interface than the AWP.

103
00:07:03.670 --> 00:07:10.000
Then we have defined a DOT event strict, which will help us to perform events over the buttons in this

104
00:07:10.000 --> 00:07:11.410
window or frame.

105
00:07:13.200 --> 00:07:15.440
Then we have defined our district.

106
00:07:15.510 --> 00:07:24.900
This will help us to use the methods which will help us to provide the ID or IP for for that particular

107
00:07:24.900 --> 00:07:28.980
link which will be entering in our text field.

108
00:07:29.160 --> 00:07:35.190
After that, we have what data is defined the IP Finder class, which is extending j frame j from classes

109
00:07:35.190 --> 00:07:39.810
provided basically by the Java string package and implementing action list.

110
00:07:40.110 --> 00:07:46.080
So action list net is also an interface and for which we will be defining its method action performed

111
00:07:46.080 --> 00:07:49.980
with the Object Action Event to perform an event over the buttons.

112
00:07:50.100 --> 00:07:52.320
After that, there is a label label l.

113
00:07:53.870 --> 00:07:58.210
And there is a text field variable and there is a button variable b.

114
00:07:58.250 --> 00:08:04.730
Now we have defined the IP finder non parameter constructor inside which is heading will be IP finder

115
00:08:04.730 --> 00:08:05.360
tool.

116
00:08:05.360 --> 00:08:08.180
And then there is a label as enter website URL.

117
00:08:08.180 --> 00:08:16.460
So this label will be used to print that statement like enter the website URL and we have set its bound.

118
00:08:18.770 --> 00:08:22.160
As Eldred said, 150, comma 70.

119
00:08:22.160 --> 00:08:26.500
So its location will be 5070 and its size will be 150.

120
00:08:26.510 --> 00:08:27.920
Tom Cross 20.

121
00:08:28.010 --> 00:08:33.020
After that there is a defined we have a text field for the respective label because if we are entering

122
00:08:33.020 --> 00:08:34.340
enter website URL.

123
00:08:34.340 --> 00:08:40.730
So for that label there must be a text field at which place where the user must be entering its URL.

124
00:08:40.730 --> 00:08:46.730
So to physical is a new digit text field which will be used to enter the URL and to set boundaries set

125
00:08:46.730 --> 00:08:47.120
bounds.

126
00:08:47.370 --> 00:08:52.850
It's so the text field will be set at 50 from 102 hundred comma 20.

127
00:08:52.850 --> 00:08:57.590
So 50 column 100 is the location and 200 comma 20 will be its size.

128
00:08:58.920 --> 00:09:02.550
Then there is a button labelled as new button find IP.

129
00:09:02.670 --> 00:09:05.670
So this button will help us.

130
00:09:06.330 --> 00:09:08.730
This button is a button named as find IP.

131
00:09:08.730 --> 00:09:14.550
So when we click on this find IP, the IP of that particular link will appear in the form of a dialog

132
00:09:14.550 --> 00:09:15.030
box.

133
00:09:15.030 --> 00:09:21.390
So after that we have set the bound for that IP, which is 100 comma 150 and it sizes 80 cross 30.

134
00:09:21.390 --> 00:09:23.940
Then we have added action listener to that button.

135
00:09:23.940 --> 00:09:29.250
After that we have added that label to our frame, added that text field to our frame, added that button

136
00:09:29.250 --> 00:09:35.430
to our frame and set the size as 400, comma, 300 and its layout as null and set the visibility as

137
00:09:35.430 --> 00:09:36.480
true of that frame.

138
00:09:38.220 --> 00:09:43.620
After that, we have defined the action performing the method which is taking argument as action event.

139
00:09:44.040 --> 00:09:47.220
So a string URL is equals to get text.

140
00:09:47.220 --> 00:09:55.080
So from the text field we'll be fetching the text and storing it into a string named as a URL variable.

141
00:09:55.110 --> 00:10:03.630
Now inside the drive, what we are doing is there is a in init address type of variable ie a.

142
00:10:05.040 --> 00:10:09.010
And which is initialized as init address dot get by name url.

143
00:10:09.030 --> 00:10:16.530
So what it is doing, it will restore the get by name URL past the URL or that method.

144
00:10:16.530 --> 00:10:20.970
Get by name and store the result in that init address variable.

145
00:10:21.210 --> 00:10:25.590
Now a string ip is string ip is equals to iact host address.

146
00:10:25.590 --> 00:10:31.770
So these methods in it address and get hold all status method will be provided with this package.

147
00:10:31.770 --> 00:10:34.220
That's why we have imported this package in this class.

148
00:10:34.230 --> 00:10:37.110
So inside the string IP, we will restore the host status.

149
00:10:37.110 --> 00:10:41.820
That will be basically the IP address dot for that particular URL.

150
00:10:41.820 --> 00:10:44.990
And then we will show the dialog box that the option is.

151
00:10:45.000 --> 00:10:46.650
So methods dialog box.

152
00:10:46.650 --> 00:10:51.210
This common IP of the URL is equals to the string IP.

153
00:10:51.210 --> 00:10:54.270
So this will show the IP if it is found.

154
00:10:55.470 --> 00:10:57.820
Now catch unknown host exceptions.

155
00:10:57.870 --> 00:11:04.260
If the host ID will not be found, then this will handle for that exception and show the message dialog

156
00:11:04.260 --> 00:11:12.120
box that even not twisting that the host not found or the error is not link is not valid now inside

157
00:11:12.120 --> 00:11:16.860
the public static void mean we have called the new IP finder class so whenever it will be run so the

158
00:11:16.860 --> 00:11:22.020
main method will be called and create its constructor so that we will have a look at this.

159
00:11:23.280 --> 00:11:29.430
Interface of that IP finder the class, and we can perform or write a URL and find the IP of that particular

160
00:11:29.430 --> 00:11:30.000
URL.

161
00:11:30.090 --> 00:11:31.080
So that's on.
