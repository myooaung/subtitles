WEBVTT
1
00:00:00.360 --> 00:00:03.420
So he and I will create our main class.

2
00:00:04.080 --> 00:00:06.390
So it should minimize the circle.

3
00:00:07.110 --> 00:00:11.550
It should extend the chief reinforced.

4
00:00:12.420 --> 00:00:15.360
Under this I will initialize.

5
00:00:15.360 --> 00:00:22.230
I will take a variable final in the offset.

6
00:00:27.930 --> 00:00:29.070
Okay.

7
00:00:29.190 --> 00:00:29.940
Just.

8
00:00:31.370 --> 00:00:36.090
Off set, which be equal to the 13th.

9
00:00:37.260 --> 00:00:41.120
Now we need a constructor of our class.

10
00:00:41.130 --> 00:00:43.110
So here I will write public.

11
00:00:43.110 --> 00:00:46.980
So Cuban under this.

12
00:00:48.100 --> 00:00:52.720
I will write a matter initially which will be created.

13
00:00:53.380 --> 00:00:55.840
We we will create this matter.

14
00:00:57.970 --> 00:01:05.710
You're just initially right here and now in this matter, we will create our new board object.

15
00:01:06.430 --> 00:01:07.640
I will write bold.

16
00:01:08.050 --> 00:01:08.710
Bold.

17
00:01:09.730 --> 00:01:10.960
Equal to.

18
00:01:13.650 --> 00:01:14.760
New board.

19
00:01:18.230 --> 00:01:30.210
Simply add that board here and make the title, which will be Our Superman.

20
00:01:32.200 --> 00:01:33.060
I known.

21
00:01:34.440 --> 00:01:34.880
Okay.

22
00:01:35.460 --> 00:01:37.470
It's the lowercase b.

23
00:01:38.720 --> 00:01:43.250
And now we have to set the size of our board.

24
00:01:44.480 --> 00:01:49.700
Here I will write set size and.

25
00:01:50.640 --> 00:01:54.330
We will ride board Dart.

26
00:01:55.710 --> 00:01:57.210
We get bored of it.

27
00:01:58.570 --> 00:02:11.140
Firstly the board vote and then plus the offset here comma, we need the board to get board height also

28
00:02:11.740 --> 00:02:21.760
and just plus add up the two multiplied with the offset variable which is equal to 331.

29
00:02:22.620 --> 00:02:27.880
And now we have to set the default close operation also.

30
00:02:28.420 --> 00:02:31.690
So here I will write frame.

31
00:02:33.230 --> 00:02:36.170
Dart accident clues

32
00:02:38.510 --> 00:02:48.930
said the location relative to the output will come on the center of window on the screen.

33
00:02:48.950 --> 00:02:56.780
So here I will pass the null value and now we have to create our main course.

34
00:02:57.380 --> 00:02:59.600
Sorry, the main method here.

35
00:03:01.190 --> 00:03:07.520
After this, I will write public static void main here.

36
00:03:08.210 --> 00:03:13.040
Under this, I will write string areas.

37
00:03:13.040 --> 00:03:14.390
Under this.

38
00:03:15.210 --> 00:03:21.090
I will write, I invoke our event Q first.

39
00:03:21.930 --> 00:03:24.930
And just take a later.

40
00:03:26.420 --> 00:03:42.200
On the deaths now near the so-called grand scheme and object of our class here and done.

41
00:03:43.690 --> 00:03:47.470
Now here I will take game, not set.

42
00:03:48.500 --> 00:03:52.490
Visible with the true boolean value.

43
00:03:53.510 --> 00:03:58.070
And so all this part has been done here.

44
00:03:59.090 --> 00:04:02.450
So simply we will run our class first.

45
00:04:03.050 --> 00:04:11.120
So just simply click on run as Java application and here we got our application.

46
00:04:11.600 --> 00:04:14.630
So here you can see I'm a soccer player.

47
00:04:14.660 --> 00:04:18.320
This is the string level which we have created here.

48
00:04:18.320 --> 00:04:20.390
This baggage will be stored.

49
00:04:20.600 --> 00:04:29.690
These are the baggage, these are the walls and these are the spaces and the selection for the changing

50
00:04:29.690 --> 00:04:30.860
of rules of the ball.

51
00:04:30.860 --> 00:04:41.720
So here when I click the upper key of my keyboard, it move upwards left key with left movement right

52
00:04:41.720 --> 00:04:45.880
give the right moment and down key for the down movement here.

53
00:04:46.190 --> 00:04:52.430
So it simply we have to check it this see here it is moving our object so.

54
00:04:53.550 --> 00:04:54.700
You can see.

55
00:04:54.910 --> 00:04:55.450
Okay.

56
00:04:55.450 --> 00:04:58.180
So I have I'm stuck here.

57
00:04:58.180 --> 00:04:58.960
So what?

58
00:04:59.350 --> 00:05:06.820
We have created a key event with our press key, which will restart our window simply on pressing our

59
00:05:06.850 --> 00:05:08.290
key on a restart.

60
00:05:08.350 --> 00:05:12.280
Working here, you can see this.

61
00:05:12.310 --> 00:05:21.790
It simply restart our game here and now what we can do is take this object and put it here.

62
00:05:22.210 --> 00:05:31.240
And when you put all these objects on the location, it simply when we got our.

63
00:05:33.130 --> 00:05:33.580
Here.

64
00:05:33.580 --> 00:05:36.070
I will take this and just simply.

65
00:05:37.390 --> 00:05:38.230
Okay.

66
00:05:39.520 --> 00:05:39.850
Here.

67
00:05:39.850 --> 00:05:41.590
I thought this bag.

68
00:05:42.610 --> 00:05:44.590
Now what we have to do.

69
00:05:46.400 --> 00:05:51.220
Do we have to push these bags to get it stuck?

70
00:05:51.220 --> 00:05:57.630
So this is how we have done our game here and simply what we have done.

71
00:05:57.640 --> 00:06:03.210
Firstly, we will start we have started with the ball here.

72
00:06:04.210 --> 00:06:08.320
Here what in this class, what we have done.

73
00:06:08.890 --> 00:06:13.300
The first thing we have take the volume is size 20 by 20.

74
00:06:13.300 --> 00:06:16.240
This reflects the space constant here.

75
00:06:17.140 --> 00:06:21.710
The offset is the distance between the borders of the window and the game world.

76
00:06:21.730 --> 00:06:23.980
There will be the four types of collision.

77
00:06:23.980 --> 00:06:27.160
Each one is represented by a numerical constraint.

78
00:06:28.030 --> 00:06:34.090
The wall bags and the areas are special containers which hold all the ball bag and the area of the game.

79
00:06:35.080 --> 00:06:38.650
This is the string level of over came the level of the game.

80
00:06:38.650 --> 00:06:39.820
Except for this place.

81
00:06:39.820 --> 00:06:41.500
There are five characters.

82
00:06:41.500 --> 00:06:49.480
The hash stands for $1 represent the box dot characters represent the place where we must move the box.

83
00:06:49.870 --> 00:06:53.350
The add character here is the one player.

84
00:06:53.350 --> 00:06:57.730
And finally the new line character starts a new row of the world.

85
00:06:58.600 --> 00:07:03.280
And here the initial world of matter initiated the game world.

86
00:07:03.430 --> 00:07:07.960
It goes through the level string and fills the above mentioned list.

87
00:07:09.200 --> 00:07:16.570
Next thing, which we have done here, the matter draws the game ball on the window.

88
00:07:16.780 --> 00:07:22.570
We create a world list which includes all objects of the game.

89
00:07:22.810 --> 00:07:27.570
Here we trade through the world container and draw the objects.

90
00:07:27.580 --> 00:07:30.970
The player and the baggage images are a bit smaller.

91
00:07:31.150 --> 00:07:37.570
So we add the two box, two boxes to their coordinates to center them.

92
00:07:37.930 --> 00:07:46.390
So if the novel is completed here, we draw the completed in the upper left corner of the window, upper

93
00:07:46.390 --> 00:07:47.080
left here.

94
00:07:47.710 --> 00:07:56.590
So when you complete all all these boxes here, it will simply give the string value here and now we

95
00:07:56.590 --> 00:07:59.670
have done with the key pressed matter.

96
00:07:59.680 --> 00:08:02.320
We check that what keys were pressed.

97
00:08:02.530 --> 00:08:05.820
We control the Superman object with the cursor keys.

98
00:08:05.830 --> 00:08:11.950
If we press the left cursor key, we check the Superman collides with the wall or with a package.

99
00:08:12.250 --> 00:08:21.520
If it does not remove the SO command to the left by the R key, we have restarted the level here and

100
00:08:21.520 --> 00:08:28.420
now we have the trackball collision method which will ensure that the Superman or baggage do not pass

101
00:08:28.420 --> 00:08:29.170
the ball.

102
00:08:29.320 --> 00:08:31.660
There are four types of collision.

103
00:08:32.050 --> 00:08:35.620
The above line check for the left collision here.

104
00:08:35.620 --> 00:08:41.260
This one and the check back collision is a bit more involved here.

105
00:08:41.530 --> 00:08:49.000
This matter is much more involved in our game because of baggage can collide with a wall or it or with

106
00:08:49.000 --> 00:08:51.760
a common object or with another package.

107
00:08:52.030 --> 00:08:58.560
The baggage can be moved only if it collides with the circle one and does not collide with another baggage

108
00:08:58.570 --> 00:08:59.260
or a volume.

109
00:08:59.560 --> 00:09:07.480
So when the baggage is moved here, it is time to check if the level is completed or not.

110
00:09:07.480 --> 00:09:16.660
So by calling the complete matter, we are checking that if the level is completed or not and the next

111
00:09:16.660 --> 00:09:25.000
thing here we have created our is completed marker to check the level is completed and we got the number

112
00:09:25.000 --> 00:09:32.920
of bags here and we get the we have compared the X and Y coordinate of all bags and the destination

113
00:09:32.920 --> 00:09:33.700
areas.

114
00:09:33.910 --> 00:09:41.860
So the game is finished when the finished bags variable equals the number of bags in the game.

115
00:09:42.190 --> 00:09:49.250
And if we do some bad move, we can restart the level, we delete all the objects from the list and

116
00:09:49.330 --> 00:09:51.070
initiate the world again.

117
00:09:51.550 --> 00:09:55.030
That is completed variable is set to the false here.

118
00:09:55.700 --> 00:09:59.560
Next thing which we have is the actor dog drama class.

119
00:09:59.560 --> 00:10:02.980
This class is the best class for other actors in the game.

120
00:10:03.370 --> 00:10:10.180
It encapsulates the basic functionality of an object in the command game and here.

121
00:10:11.170 --> 00:10:12.220
These matter.

122
00:10:12.220 --> 00:10:15.730
Jacob, the actor, collided with another whole baggage.

123
00:10:15.730 --> 00:10:20.410
Or this one next class, which we have, is the world of Java.

124
00:10:21.340 --> 00:10:27.370
Inherited from the actor class, it loads a all image from the resources.

125
00:10:27.670 --> 00:10:30.580
Other class which we have the clear class.

126
00:10:31.420 --> 00:10:36.610
Here we have the matter which will move the object inside the world.

127
00:10:36.910 --> 00:10:40.010
Next class, which we have, is the baggage class.

128
00:10:40.030 --> 00:10:42.190
It is a class for the object.

129
00:10:42.190 --> 00:10:43.660
For the baggage object.

130
00:10:43.690 --> 00:10:45.850
The this object is movable.

131
00:10:45.850 --> 00:10:49.330
So it has the movement method also.

132
00:10:49.420 --> 00:10:52.630
And next class, which we have, is the area.

133
00:10:52.750 --> 00:10:56.290
This it is the object on which we try to place.

134
00:10:56.290 --> 00:10:57.550
The baggage is here.

135
00:10:57.880 --> 00:11:02.320
Last one and the mean is our so one class.

136
00:11:02.320 --> 00:11:07.420
This is our mean class which will on running give this output.

137
00:11:07.420 --> 00:11:13.450
And here we can start and run our program and play the scheme here.
