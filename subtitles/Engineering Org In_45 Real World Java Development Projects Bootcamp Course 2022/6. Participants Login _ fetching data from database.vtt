WEBVTT
1
00:00:01.870 --> 00:00:10.270
In previous sessions we have already seen we created four page for participants and admin page also,

2
00:00:10.450 --> 00:00:12.400
so all the participants sign up.

3
00:00:13.180 --> 00:00:22.870
We created this page for login and signup, so this is a page for signup page and we have already seen

4
00:00:22.870 --> 00:00:26.110
how we are going to store this to the database.

5
00:00:26.410 --> 00:00:30.700
So this is for signup, but what is for login page?

6
00:00:30.730 --> 00:00:34.230
So it should validate each and every person according to that.

7
00:00:34.240 --> 00:00:40.390
So what I'm going to create, I'm going to create one another page, each HTML page, participant login

8
00:00:40.390 --> 00:00:46.540
page for the login purpose of participants in this we are going to pass only two fields username and

9
00:00:46.540 --> 00:00:47.200
password.

10
00:00:47.650 --> 00:00:49.660
So what will happen?

11
00:00:50.110 --> 00:00:58.840
User or participants will add this inside this page, username and password the given one while signing

12
00:00:58.840 --> 00:00:59.200
up.

13
00:00:59.740 --> 00:01:03.970
So this will use the VIP validate password I'm considering here.

14
00:01:04.800 --> 00:01:10.110
To validate each and every person's or participants during this.

15
00:01:10.440 --> 00:01:11.690
So this is about the log in.

16
00:01:11.700 --> 00:01:14.880
This is very simple page and I'm using form method.

17
00:01:14.880 --> 00:01:19.080
We have already seen form method in admin page or admin scenario also.

18
00:01:19.410 --> 00:01:22.890
So as I told you, we already created this.

19
00:01:22.890 --> 00:01:24.180
I'm closing this now.

20
00:01:24.510 --> 00:01:27.900
So what will happen once each login is done?

21
00:01:27.900 --> 00:01:29.790
It should proceed to the next page.

22
00:01:30.030 --> 00:01:33.600
So let us see how we can create VPA Java solid.

23
00:01:33.600 --> 00:01:35.250
So just a simple thing.

24
00:01:35.250 --> 00:01:40.170
Go to source package right click the new and add servlet while adding servlet.

25
00:01:40.170 --> 00:01:45.990
I'm telling you how to tick mark the add to the web XML file also that servlet.

26
00:01:46.710 --> 00:01:57.240
So this is our VAP page, I can say so this is taking all the inputs or they are using libraries.

27
00:01:57.240 --> 00:01:58.290
All the libraries.

28
00:01:59.150 --> 00:02:02.990
And this is all about the VPN exchange.

29
00:02:03.020 --> 00:02:04.300
You know about this part.

30
00:02:04.310 --> 00:02:06.950
It should throw the Soviet exception and everything.

31
00:02:07.220 --> 00:02:11.360
And this is also important things inside.

32
00:02:12.280 --> 00:02:13.300
Writing the solid.

33
00:02:13.570 --> 00:02:15.070
So what is it's doing?

34
00:02:16.600 --> 00:02:18.190
It is fetching the data.

35
00:02:20.990 --> 00:02:27.600
From each HTML form fetching the data from the HTML form.

36
00:02:27.620 --> 00:02:30.920
This is a username and password.

37
00:02:31.310 --> 00:02:33.710
This is a username and password.

38
00:02:34.280 --> 00:02:38.080
So what if log in, do not validate.

39
00:02:38.090 --> 00:02:44.270
So what I'm going to do, I'm going to create another simple Java program to invoke this.

40
00:02:45.250 --> 00:02:51.280
These things so we can say Java servlet and I'm going to use this as these are the public things.

41
00:02:51.280 --> 00:02:59.560
We can easily use this without using any object or something because these are in the same package,

42
00:02:59.860 --> 00:03:00.670
default package.

43
00:03:00.670 --> 00:03:03.730
So no need to specify object and then go further.

44
00:03:03.910 --> 00:03:08.140
So an MP and MP basically this is the username and password.

45
00:03:08.140 --> 00:03:15.610
I'm passing this and this will proceed to participants event html simple if not stay on that page using

46
00:03:15.610 --> 00:03:16.570
or do not include.

47
00:03:16.570 --> 00:03:23.050
I'm going to tell you what is included method also in further videos or further examples and this is

48
00:03:23.050 --> 00:03:26.650
all about to stay on same page as sorry.

49
00:03:26.650 --> 00:03:28.420
Username and password are incorrect.

50
00:03:31.660 --> 00:03:33.160
I will put there and.

51
00:03:34.710 --> 00:03:38.490
And let's read about this and I'm closing the connection I've got.

52
00:03:40.350 --> 00:03:47.130
So these are all our things like for Validate, but now we are going to create a log in or I can say

53
00:03:47.130 --> 00:03:49.820
log in this to validate the password.

54
00:03:49.830 --> 00:03:51.360
So this is very important method.

55
00:03:51.360 --> 00:03:52.590
I'm going to use this.

56
00:03:52.590 --> 00:03:55.740
So just create another method due to time constraint.

57
00:03:55.740 --> 00:03:56.700
I'm going to explain this.

58
00:03:56.700 --> 00:03:58.500
I already created this method.

59
00:03:58.590 --> 00:04:01.230
So I will tell and I will explain this part.

60
00:04:02.230 --> 00:04:08.770
So inside this source package you have to right click, then create Java solid and invoke the login.

61
00:04:11.540 --> 00:04:15.440
So let us see how we can create this method here.

62
00:04:15.470 --> 00:04:20.030
Our need is just java is no need to invoke anything.

63
00:04:20.510 --> 00:04:26.270
Then it should be boolean because I am going to pass boolean value as a status.

64
00:04:26.270 --> 00:04:29.390
Or we can say true or false.

65
00:04:29.390 --> 00:04:30.980
If is true it will pass.

66
00:04:30.980 --> 00:04:34.160
If it's false, it will show the error.

67
00:04:35.210 --> 00:04:36.800
It is very simple, as you can see.

68
00:04:36.800 --> 00:04:38.250
So I created one method.

69
00:04:38.270 --> 00:04:39.450
Public static boolean.

70
00:04:39.470 --> 00:04:42.620
Validate as you just validate boolean.

71
00:04:42.620 --> 00:04:45.290
Method string username.

72
00:04:45.410 --> 00:04:47.870
Now remember, what is this username?

73
00:04:48.290 --> 00:04:52.100
As I told you, there is very important things in this.

74
00:04:52.490 --> 00:04:54.830
It should not be any different things.

75
00:04:54.830 --> 00:04:55.160
Why?

76
00:04:55.160 --> 00:04:57.830
I am using this specific names here.

77
00:04:58.400 --> 00:05:05.120
So if you know that while creating table in the cmd, I will bring this select.

78
00:05:08.130 --> 00:05:09.980
Selects are from plug in details.

79
00:05:09.990 --> 00:05:16.500
You can see our this feature username like this password is like this and name like this.

80
00:05:16.500 --> 00:05:18.270
So I'm just storing the name.

81
00:05:18.720 --> 00:05:21.780
I'm not using the name, I'm going to use username.

82
00:05:21.990 --> 00:05:24.690
So this and these are very important.

83
00:05:25.080 --> 00:05:27.090
Hence I'm using.

84
00:05:28.320 --> 00:05:33.690
Similar things inside this, which is username and password.

85
00:05:34.660 --> 00:05:38.920
Or as a feel or I can say the arguments parameters.

86
00:05:40.030 --> 00:05:42.550
So this very simple thing I'm going to use.

87
00:05:42.550 --> 00:05:44.050
So these are the parameters.

88
00:05:44.050 --> 00:05:51.280
And to pass the username and password here first create a boolean variable I'm setting to status is

89
00:05:51.280 --> 00:05:51.940
equal to false.

90
00:05:51.940 --> 00:05:53.230
First it should be false.

91
00:05:53.260 --> 00:05:54.550
It should not be always true.

92
00:05:54.550 --> 00:05:56.350
So I'm passing this false.

93
00:05:56.770 --> 00:05:59.620
Then I want to access the database.

94
00:05:59.740 --> 00:06:05.800
So for accessing the database, I'm using this class for a name.

95
00:06:05.800 --> 00:06:06.940
Oracle gdb driver.

96
00:06:06.940 --> 00:06:15.340
This is a very simple thing to invoke the class in this, so I'm asking for the connection driver manager

97
00:06:15.340 --> 00:06:22.420
in this and I'm passing with pseudo username of database and password of the database and that particular

98
00:06:22.420 --> 00:06:22.780
user.

99
00:06:22.780 --> 00:06:27.820
You can create one another string for this and you can directly put that string also here.

100
00:06:27.850 --> 00:06:34.150
But I'm just passing directly here because the program is very short, then I'm considered a prepared

101
00:06:34.150 --> 00:06:34.810
statement.

102
00:06:34.810 --> 00:06:45.040
So in the previous cases like store to store the participants, you can see we can we are creating create

103
00:06:45.040 --> 00:06:47.800
statements and the statements and we are executing the query.

104
00:06:48.220 --> 00:06:52.480
But in this what I'm going to do, I already create a prepared statement.

105
00:06:52.480 --> 00:06:54.880
What is the difference between the these entities?

106
00:06:54.880 --> 00:06:58.210
So this is we can see the instant statement.

107
00:06:58.380 --> 00:07:06.400
You need not to execute something to execute that query or we can say we can invoke it very advanced

108
00:07:06.400 --> 00:07:15.280
things inside this as these store B what is it's doing is just executing that query and it's just forwarding.

109
00:07:15.610 --> 00:07:20.950
But in this I want to create everything and each and every statement.

110
00:07:20.950 --> 00:07:25.990
So what is doing it's create a prepared statement is this statement.

111
00:07:26.560 --> 00:07:30.370
So let's start from p log in details where username is this question mark.

112
00:07:30.550 --> 00:07:33.040
So what is the thing between question mark?

113
00:07:33.250 --> 00:07:38.980
The question mark specifies the line number so we can say 1 to 3 sequential numbers here.

114
00:07:38.980 --> 00:07:42.190
So I don't know what is the sequential number of this.

115
00:07:42.190 --> 00:07:43.570
It can be 2000.

116
00:07:43.570 --> 00:07:47.440
Also, as the 2000 position of the row username appears.

117
00:07:47.440 --> 00:07:49.840
Again, like inside the CMD.

118
00:07:49.870 --> 00:07:54.370
As you can see, this is the first name I know this is first and this is second.

119
00:07:54.700 --> 00:08:01.770
But while putting all the names, all the user names, the username can be disturbed and this can be

120
00:08:01.780 --> 00:08:03.580
become fourth password.

121
00:08:03.580 --> 00:08:10.030
So for that purpose, I'm putting question marks there because I don't know the specific position of

122
00:08:10.030 --> 00:08:10.450
that.

123
00:08:11.080 --> 00:08:14.470
So username and password, it's selecting.

124
00:08:14.560 --> 00:08:20.650
So string one slash username and 4 to 4 the password.

125
00:08:20.650 --> 00:08:24.040
So it's like that one for username, two for password.

126
00:08:24.040 --> 00:08:28.870
If the username comes at third position, then password becomes at the fourth position.

127
00:08:29.080 --> 00:08:31.660
So Java program will take care of that.

128
00:08:32.080 --> 00:08:41.770
Then the result set is equal to dot execute query to execute this if status adds dot next to provide

129
00:08:41.770 --> 00:08:47.440
the further to go to further one then third position then check odd number position and then even number

130
00:08:47.440 --> 00:08:50.080
position for the username and password.

131
00:08:50.290 --> 00:08:51.700
I'm closing the connection.

132
00:08:51.700 --> 00:08:58.000
I'm accepting this exception and I'm returning the status as this boolean.

133
00:08:58.000 --> 00:09:01.420
I have to return something so I'm retaining the status.

134
00:09:02.090 --> 00:09:07.890
So this is all about logging the login credentials or logging informations.

135
00:09:08.250 --> 00:09:15.260
So inside this file, validating it should validate our username and password.

136
00:09:15.270 --> 00:09:20.970
So this is all about how we can create participant's logging scenario using sign up.

137
00:09:21.270 --> 00:09:22.800
So let us see.

138
00:09:23.100 --> 00:09:25.350
I will build this project first.

139
00:09:27.630 --> 00:09:30.900
To check whether there are some errors or not.

140
00:09:31.050 --> 00:09:34.140
If there are errors, we have to debug some things here.

141
00:09:34.290 --> 00:09:40.830
So as you can see, our database process is started and G+ server is running now.

142
00:09:41.100 --> 00:09:50.430
So this will boot up your every program inside this servlet and it will throw your output to your default

143
00:09:50.430 --> 00:09:52.710
browser and it will show you automatically.

144
00:09:53.470 --> 00:10:00.700
So every time while you are running this first time after opening this, it has to build and clean build

145
00:10:00.700 --> 00:10:02.230
and then it will execute.

146
00:10:02.530 --> 00:10:07.570
So you can see all the frameworks are distributing, then visiting an visited reference, then it will

147
00:10:07.570 --> 00:10:10.780
show everything, virtual server and everything.

148
00:10:10.960 --> 00:10:13.240
So it will take time to load everything.

149
00:10:21.910 --> 00:10:30.100
So now you can see our this page is now loaded and this is all about we created the event portal, so

150
00:10:30.100 --> 00:10:35.620
let us see how we can go through the participants log login page so we already know how we can create

151
00:10:35.620 --> 00:10:36.250
sign up.

152
00:10:36.250 --> 00:10:38.650
Now we have to move to participants, log in.

153
00:10:38.740 --> 00:10:40.930
So this is about the participants log in.

154
00:10:41.080 --> 00:10:47.020
So let us go to CMD and we know that our username is j101 and password is one, two, three, four.

155
00:10:47.560 --> 00:10:49.900
Let us see if we put this.

156
00:10:49.990 --> 00:10:50.890
What is happen?

157
00:10:51.590 --> 00:10:54.290
j1010 and one two.

158
00:10:55.290 --> 00:10:56.550
One, two, three, four.

159
00:10:59.700 --> 00:11:04.620
So as you can see, I already created the further page for this.

160
00:11:04.620 --> 00:11:10.560
So I moved to the further page, which is basically participant's page participants, page for event

161
00:11:10.560 --> 00:11:11.760
registration and everything.

162
00:11:11.790 --> 00:11:18.930
I already created that page, but inside ID while you are deploying you can see we created participants

163
00:11:18.930 --> 00:11:20.550
event email HTML.

164
00:11:20.580 --> 00:11:25.320
If you are not created this page, it will throw the for zero for error basically.

165
00:11:25.320 --> 00:11:30.030
But for all that I am concerned I already created everything page inside this.

166
00:11:30.030 --> 00:11:33.840
So inside this I created participant's event page.

167
00:11:33.840 --> 00:11:37.860
So this is all about the participant event and everything.

168
00:11:38.490 --> 00:11:45.330
So what inside this we created, we want participants sign up, participants log in, validating the

169
00:11:45.330 --> 00:11:46.770
participants and log in.

170
00:11:46.920 --> 00:11:50.400
So what will happen exactly?

171
00:11:50.400 --> 00:11:53.520
So inside the Java program it will fetch that username.

172
00:11:53.520 --> 00:11:54.870
Is this password for this?

173
00:11:54.870 --> 00:11:55.860
Is this.

174
00:11:56.220 --> 00:12:00.590
So while validating this it will check both for that username.

175
00:12:01.230 --> 00:12:04.050
Password should be same like that.

176
00:12:04.050 --> 00:12:07.650
Likewise that it will execute everything inside this.

177
00:12:07.860 --> 00:12:10.620
So as you can see we are using two pos method.

178
00:12:10.620 --> 00:12:13.670
So there are two methods inside this do post and do it.

179
00:12:13.710 --> 00:12:16.050
Let us see what is the difference between them.

180
00:12:16.930 --> 00:12:20.430
So this is all about the gate and post method.

181
00:12:20.440 --> 00:12:27.190
So in case of guess that only a limited amount data can be sent to the header, but inside the post

182
00:12:27.190 --> 00:12:28.560
we can save a large amount of data.

183
00:12:28.570 --> 00:12:34.780
Like you can create any amount of HTML tags and anything inside, but inside yet you have to execute

184
00:12:34.780 --> 00:12:38.440
at least two or three only you cannot proceed with further.

185
00:12:38.770 --> 00:12:44.560
So that request is not secured because data is exposed on URL bar.

186
00:12:44.590 --> 00:12:50.530
As you can see, I want to store inside the chrome as you can see.

187
00:12:52.740 --> 00:12:54.240
It is not showing anything.

188
00:12:54.240 --> 00:12:59.940
Your participants log in or anything, but while you are using the gate method, it will show everything

189
00:12:59.940 --> 00:13:01.760
like your username and password.

190
00:13:02.280 --> 00:13:04.530
So this is a very insecure method.

191
00:13:04.890 --> 00:13:10.350
So this is very important to post method is very secure.

192
00:13:10.890 --> 00:13:18.540
But while using some simple things like I want to fetch the data, just want to fetch data from database

193
00:13:18.540 --> 00:13:21.500
and I want to show you I want to declare everything you can use.

194
00:13:21.540 --> 00:13:26.040
Git method data request can be bookmarked, but what do you bookmark?

195
00:13:26.040 --> 00:13:31.290
Method means you can invoke it again and again, but post method you cannot invoke it again and again.

196
00:13:31.620 --> 00:13:34.500
Only one time you can use get request.

197
00:13:34.500 --> 00:13:35.280
Is it important?

198
00:13:35.310 --> 00:13:40.680
It important means if second request will be ignored when first request is delivered.

199
00:13:40.680 --> 00:13:47.700
Like you cannot ask for too many gate methods, but inside post method you can ask for too many post

200
00:13:47.700 --> 00:13:48.990
same post methods.

201
00:13:49.560 --> 00:13:57.450
Gate request is more efficient and use more than post like inside our project for logging and everything.

202
00:13:57.450 --> 00:14:02.700
I want to create a one secure scenario so I use post method are not a gate method.

203
00:14:03.850 --> 00:14:11.950
As you can see inside this id I used mostly post method for in also or store password is also everything.

204
00:14:11.950 --> 00:14:18.480
I used your post method because for the logging and everything I need to create a one security environment.

205
00:14:18.490 --> 00:14:19.930
If I use do get a method.

206
00:14:19.930 --> 00:14:28.120
What will happen exactly inside chrome as you can see or for the login it will pass like username is

207
00:14:28.120 --> 00:14:30.830
this and password is this for that purpose?

208
00:14:30.850 --> 00:14:34.660
As we know, we are creating some things here.

209
00:14:34.660 --> 00:14:40.990
You can also go with some encrypted password methods or everything, but it's very complicated programming

210
00:14:41.320 --> 00:14:42.580
for the simple programming.

211
00:14:42.580 --> 00:14:47.650
What you can do, you can create just to do post method to secure every environment because it's not

212
00:14:47.650 --> 00:14:50.170
showing your username and password inside the URL bar.

213
00:14:50.680 --> 00:14:54.880
So this is all about the things why you do post method.

214
00:14:54.970 --> 00:15:00.400
So what is do post or do get a method used to invoke the request.

215
00:15:00.400 --> 00:15:06.490
So we want to create request so we use their do post or to get method in to three cases.

216
00:15:06.490 --> 00:15:09.580
In further scenarios, I will tell you how we can use do get method.

217
00:15:09.970 --> 00:15:12.010
So get request is more efficient.

218
00:15:12.010 --> 00:15:17.980
As you can see, it takes tool too much less time than do post method do post method takes too much

219
00:15:17.980 --> 00:15:22.330
time to invoke it and run everything inside the Java program.

220
00:15:22.810 --> 00:15:25.000
So this is all about the do post method.

221
00:15:25.750 --> 00:15:31.000
Other than the do post method, we have too many things get parameter inside this, but in further scenarios

222
00:15:31.000 --> 00:15:34.420
I will tell you how we can create servlet request interface.

223
00:15:35.470 --> 00:15:40.720
So in this case, we created everything related to do it and do post.
