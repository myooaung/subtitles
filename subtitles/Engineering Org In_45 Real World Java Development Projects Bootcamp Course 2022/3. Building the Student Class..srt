1
00:00:01,530 --> 00:00:09,930
So I hope you all have watched the introduction section of this project and the overview about this

2
00:00:09,930 --> 00:00:18,810
project, what we are actually going to do in this programming section of the school funds system.

3
00:00:20,700 --> 00:00:26,640
Now let's begin by creating a Java project in Visual Studio code.

4
00:00:26,670 --> 00:00:35,820
I hope you all have installed the JDK latest version and Visual Studio code ID in your systems.

5
00:00:36,120 --> 00:00:37,970
We already does.

6
00:00:39,190 --> 00:00:44,670
Discuss the installation and download part in the earlier videos.

7
00:00:44,680 --> 00:00:50,260
So yes, let's start with creating a Java project in Visual Studio code.

8
00:00:50,830 --> 00:00:53,470
Look at this Create Java Project button.

9
00:00:54,900 --> 00:00:58,890
You have to create a Java project by clicking on this button.

10
00:00:59,010 --> 00:01:04,410
Select No Build Tools as we are creating our basic ops project.

11
00:01:04,410 --> 00:01:08,610
So initially we have to select this no build told options.

12
00:01:09,730 --> 00:01:10,270
Yes.

13
00:01:10,510 --> 00:01:15,540
So this project requires a path where it will be saved.

14
00:01:15,550 --> 00:01:23,350
So I am going to create a new folder in my desktop and call it as school.

15
00:01:25,850 --> 00:01:26,990
Funds.

16
00:01:29,040 --> 00:01:30,030
System.

17
00:01:31,760 --> 00:01:34,280
And so I left the project location.

18
00:01:35,640 --> 00:01:43,410
After selecting the project location, we have to input a Java project name for this project.

19
00:01:44,820 --> 00:01:49,380
So we will input a Java project name in the text box.

20
00:01:50,200 --> 00:01:55,420
We will limit the school funds system.

21
00:01:57,000 --> 00:01:58,290
And press enter.

22
00:02:03,490 --> 00:02:12,460
So here is the School Fund System Project in Java with the inbuilt folders like settings, not JSON,

23
00:02:12,460 --> 00:02:20,080
which the Visual Studio calls provides by default a lib file which is empty and unnecessary folder,

24
00:02:20,080 --> 00:02:23,050
which is the main folder of this project.

25
00:02:23,080 --> 00:02:27,240
All the required files will be built head only.

26
00:02:27,250 --> 00:02:27,790
Yes.

27
00:02:27,790 --> 00:02:31,090
So it contains app dot java already.

28
00:02:31,090 --> 00:02:39,130
And this is the main file of this project which we are going to run to get our output of the school

29
00:02:39,130 --> 00:02:40,960
funds management system.

30
00:02:42,690 --> 00:02:50,310
Here we have a public class called App, and inside the class there is a function public static void

31
00:02:50,730 --> 00:02:52,950
with arguments as string.

32
00:02:52,950 --> 00:03:01,470
And when it throws up exception, the app throws one exception that it will print out this helloworld.

33
00:03:01,470 --> 00:03:09,420
And for printing anything in Java we have to write System.out.println and we will see it later in this

34
00:03:09,420 --> 00:03:10,740
project as well.

35
00:03:10,740 --> 00:03:15,960
So if we run this part of code, we will get the output.

36
00:03:18,190 --> 00:03:18,500
Yes.

37
00:03:18,540 --> 00:03:22,930
So here you can see that Helloworld is printed in that terminal.

38
00:03:23,200 --> 00:03:25,750
So the code is working perfectly fine.

39
00:03:26,110 --> 00:03:31,180
Let's start by making our files required in this project.

40
00:03:31,720 --> 00:03:38,920
So the first file we are going to create is in the A-Z folder and we will name it as.

41
00:03:39,510 --> 00:03:41,520
I mean, not Java.

42
00:03:43,370 --> 00:03:49,100
So here you can see that I am creating a file called Green dot Java.

43
00:03:51,850 --> 00:03:57,170
So you can see that our main file is already created.

44
00:03:57,190 --> 00:03:59,200
Here we have a main class.

45
00:03:59,350 --> 00:04:02,590
You can see we have already a main class.

46
00:04:03,370 --> 00:04:10,930
After creating the main file in SC folder, java is all about class as an object.

47
00:04:10,930 --> 00:04:14,830
So yes, you can see that we have already a class.

48
00:04:14,860 --> 00:04:20,950
Now we will import the dependencies and the library required in this package.

49
00:04:21,550 --> 00:04:26,710
Basically we are going to attach all the packages required in this project.

50
00:04:26,710 --> 00:04:29,020
So I am going to import.

51
00:04:31,800 --> 00:04:33,540
Java analyst.

52
00:04:34,470 --> 00:04:35,080
I.

53
00:04:35,120 --> 00:04:38,670
I will tell you about what java analyst is.

54
00:04:38,970 --> 00:04:41,190
Let me first import this.

55
00:04:44,490 --> 00:04:53,430
So yes, we have imported java util Aaron is currently it is gray as we haven't used in the code.

56
00:04:53,430 --> 00:04:57,570
But later when we will use this, it will become colorful.

57
00:04:57,600 --> 00:05:01,530
Now let me tell you about what Java ArrayList is.

58
00:05:03,900 --> 00:05:14,070
Java util is a package for Java for writing Java codes and ArrayList is a property of Java which gives

59
00:05:14,070 --> 00:05:21,270
us a resizable array and this ArrayList is found in the Java util package.

60
00:05:21,360 --> 00:05:27,100
As you can see that I am writing it like java dot dot arrows.

61
00:05:27,210 --> 00:05:32,760
So inside the Java util package we will get the ArrayList list function.

62
00:05:32,760 --> 00:05:42,210
So yes, ArrayList is resizable array, which we will use later in this project for adding features

63
00:05:42,210 --> 00:05:45,140
student to the array and it will be resizable.

64
00:05:45,150 --> 00:05:52,800
It will help us to increase the number of features that students in later without having any conflicts.

65
00:05:53,890 --> 00:05:58,000
The next package we are going to import is our list.

66
00:05:58,150 --> 00:06:07,480
So let me import it as import java or util package itself, not list.

67
00:06:12,470 --> 00:06:13,230
Yes.

68
00:06:13,250 --> 00:06:20,210
So we have successfully imported list and arranged for our project in Java.

69
00:06:20,240 --> 00:06:24,220
List is the facility to maintain order collection.

70
00:06:24,230 --> 00:06:30,200
It contains index based method to insert, update, delete and search the elements.

71
00:06:30,200 --> 00:06:35,630
So we will use list and list properties of Java in this project.

72
00:06:35,660 --> 00:06:38,360
Now let's begin with the.

73
00:06:39,180 --> 00:06:46,020
Plus and we will create a function public static.

74
00:06:49,120 --> 00:06:51,670
Void mean it will be our.

75
00:06:52,720 --> 00:06:57,760
Main function containing arguments as string.

76
00:06:59,710 --> 00:07:02,200
Square braces and.

77
00:07:03,490 --> 00:07:04,360
OGs.

78
00:07:04,360 --> 00:07:08,500
So yes, the parameter is passed as string arguments.

79
00:07:09,350 --> 00:07:13,730
Inside the main function, we will initialize the.

80
00:07:14,930 --> 00:07:21,230
So inside the main function we will be declaring new methods later.

81
00:07:21,230 --> 00:07:28,040
But let us first create a student class, teacher class and a school class.

82
00:07:28,070 --> 00:07:34,970
This means that Java will be responsible for running the program successfully.

83
00:07:35,120 --> 00:07:44,450
So let me create a new file in the SLC folder as well and name it as student dot java.

84
00:07:45,350 --> 00:07:46,950
So here it is.

85
00:07:46,970 --> 00:07:50,270
We have a class called student and.

86
00:07:51,100 --> 00:07:59,050
This class will contain all the information about the student ID, its roll number or whatever information

87
00:07:59,050 --> 00:08:00,540
like the fees paid.

88
00:08:00,550 --> 00:08:01,960
What is the fees paid?

89
00:08:01,990 --> 00:08:05,140
What is the fees left to be paid by the student?

90
00:08:05,140 --> 00:08:07,000
And similar kind of things?

91
00:08:07,030 --> 00:08:14,140
So let us begin this with starting this student part of this program.

92
00:08:15,250 --> 00:08:16,960
So let's start.

93
00:08:18,080 --> 00:08:23,120
Private, which is the axis specified in Java.

94
00:08:24,290 --> 00:08:32,900
There are three axis specifies in Java public, private and protected, and they have their own rules

95
00:08:32,900 --> 00:08:35,350
for the variables.

96
00:08:35,360 --> 00:08:43,520
Like if we declare a variable as private, this variable will be not would not be accessible with any

97
00:08:43,520 --> 00:08:44,330
other class.

98
00:08:44,330 --> 00:08:51,260
But if it is private public, it will be accessible by the other classes of the program.

99
00:08:52,290 --> 00:08:55,790
And the protected is similar as private.

100
00:08:55,800 --> 00:09:03,780
It is protected from the other classes that they cannot access that variable in the program without

101
00:09:04,620 --> 00:09:05,460
permission.

102
00:09:05,640 --> 00:09:12,720
So let's start with giving an integer ID object inside this class student.

103
00:09:13,320 --> 00:09:19,320
Similarly, private string name.

104
00:09:27,240 --> 00:09:36,360
And similarly for the other three variables which we are going to use grade C, spade and C total.

105
00:09:36,960 --> 00:09:38,700
So here we are.

106
00:09:39,030 --> 00:09:43,140
We have declared five methods inside this class.

107
00:09:43,140 --> 00:09:47,790
And let me commend the purpose of this file.

108
00:09:47,790 --> 00:09:56,940
So I am using control plus slash to command like this file is for keeping the track of student name

109
00:09:56,970 --> 00:10:03,630
fees, grade and C sprint keeping the track of.

110
00:10:07,110 --> 00:10:07,520
Yeah.

111
00:10:07,530 --> 00:10:08,850
So here we go.

112
00:10:08,950 --> 00:10:14,430
I recommended the significance of this file at the top of this file.

113
00:10:14,610 --> 00:10:22,320
Now, to create a new student by initializing it, we have to create a class again.

114
00:10:24,770 --> 00:10:27,520
This class is not a simple class.

115
00:10:27,530 --> 00:10:29,510
This is a constructor.

116
00:10:29,990 --> 00:10:36,020
So constructor is a class basically with same name as the.

117
00:10:36,840 --> 00:10:37,890
Above last.

118
00:10:38,040 --> 00:10:45,270
But it contains parameters inside it for the functioning of the program.

119
00:10:45,270 --> 00:10:56,700
So inside it I am initializing the arguments as in the ID name and grade grade of the students, and

120
00:10:56,700 --> 00:11:00,900
I am doing all of them inside the student constructor.

121
00:11:04,730 --> 00:11:14,480
So yes, inside this constructor, we are going to call all the functions which we declared above in

122
00:11:14,480 --> 00:11:15,500
the classes.

123
00:11:16,130 --> 00:11:25,580
So, yes, inside this constructor we are going to initialize operators for the field declares declared

124
00:11:25,580 --> 00:11:36,830
above this dot ID is for ID this dot grid is for grid and this dot name is for the name field which

125
00:11:36,830 --> 00:11:38,270
we declared above.

126
00:11:42,280 --> 00:11:45,160
So yes, we are writing.

127
00:11:46,430 --> 00:11:52,310
This operator for each field mentioned above inside the constructor.

128
00:11:52,850 --> 00:11:54,920
And yes, here we are.

129
00:11:55,130 --> 00:12:01,880
So let me give you a quick idea about what constructors are so commenting.

130
00:12:03,260 --> 00:12:11,540
So when we will require to add a new student to the school, this constructor will be called and with

131
00:12:11,540 --> 00:12:19,070
the use of new keyword in Java, the constructor is called automatically in every place, wherever we

132
00:12:19,070 --> 00:12:20,030
want to call it.

133
00:12:20,060 --> 00:12:27,350
So let me write this to create a new student.

134
00:12:29,200 --> 00:12:35,080
This constructor is called by initializing this constructor.

135
00:12:37,120 --> 00:12:39,910
The constructor with the name student.

136
00:12:42,510 --> 00:12:43,320
Yes.

137
00:12:43,500 --> 00:12:44,760
So here we are.

138
00:12:48,750 --> 00:12:49,560
Yes.

139
00:12:50,650 --> 00:12:57,130
So this constructor has the job of creating new students by initializing them.

140
00:12:58,020 --> 00:13:05,310
With her idea, unnamed and agreed, which is a compulsory fee for every new student to be admitted

141
00:13:05,310 --> 00:13:06,600
in the school.
