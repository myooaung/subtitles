1
00:00:01,110 --> 00:00:02,150
Hello everyone.

2
00:00:02,160 --> 00:00:09,630
So I hope that you all have went through the introduction part and the working of the application part

3
00:00:09,630 --> 00:00:18,000
pretty well, and now you all must be wondering how to start the coding section of the application and

4
00:00:18,000 --> 00:00:22,530
must be excited about start the programming part.

5
00:00:22,530 --> 00:00:32,310
So let us begin this by opening the welcome page of our IDE Visual Studio Code in which we will be creating

6
00:00:32,310 --> 00:00:33,630
this application.

7
00:00:33,630 --> 00:00:42,330
And once opening the welcome page, you will be seeing like an interface like this on your screens where

8
00:00:42,330 --> 00:00:47,760
you will be provided some options like file, edit and so on.

9
00:00:47,760 --> 00:00:56,610
So on the welcome page to start to create the application, we have to click on this file Explorer icon

10
00:00:56,610 --> 00:01:03,250
and once you will click this Explorer icon, some options will appear on your screen.

11
00:01:03,300 --> 00:01:08,370
Let me like maximize this in order to make it more clear.

12
00:01:08,490 --> 00:01:15,990
So we are having options like open folder, clone repository and create Java projects.

13
00:01:15,990 --> 00:01:20,880
So we are going to create a new Java project from scratch.

14
00:01:20,880 --> 00:01:29,760
So we will select this Create Java project button from this Explorer option in the welcome page.

15
00:01:29,970 --> 00:01:37,400
Once we will click Create Java Project Option, then we will be provided with some options.

16
00:01:37,560 --> 00:01:45,760
And these are basically the toolkits which are used as a support to make any application in Java, and

17
00:01:45,900 --> 00:01:51,510
there are toolkits like Maven, Springboard Quads, Micro Profile and so on.

18
00:01:51,990 --> 00:02:01,470
So in this we are not going to use any Java support, any tool kit except like we are going to make

19
00:02:01,470 --> 00:02:03,660
this application from scratch.

20
00:02:03,750 --> 00:02:10,770
So we do not want to embed any of these supports in our applications.

21
00:02:10,770 --> 00:02:19,140
So leaving this and clicking no build tools and we are going to work with source code directly without

22
00:02:19,140 --> 00:02:20,340
any build tools.

23
00:02:20,340 --> 00:02:24,480
So we are not going to use any build tools in this application.

24
00:02:25,110 --> 00:02:33,210
So clicking on normal tools and our interface will open file chooser of your desktop will open basically.

25
00:02:33,210 --> 00:02:41,130
And inside this we have to select the location of the folder of the project we are going to make.

26
00:02:41,130 --> 00:02:46,080
So I am choosing Backstop as my project location.

27
00:02:46,080 --> 00:02:53,100
You can choose any location of your choice, but keep in mind that you have to remember where you have.

28
00:02:53,110 --> 00:02:54,660
Choose that location.

29
00:02:54,660 --> 00:03:03,090
So and later, if you wish to like open the application, it would be better if you like, remember

30
00:03:03,090 --> 00:03:07,380
the location to make things more times.

31
00:03:07,950 --> 00:03:18,990
So I am choosing desktop as my project location and I input text field pairs asking for input java project.

32
00:03:19,500 --> 00:03:28,470
So we have to input a project name of our choice, which is going to be the title of the folder which

33
00:03:28,470 --> 00:03:35,970
will be created inside which the main folders and files of the application will be consistent.

34
00:03:35,970 --> 00:03:39,300
So you can choose any name for the project.

35
00:03:40,050 --> 00:03:51,780
I am going to name it as food ordering system, so my choice of name suggest that I should name this

36
00:03:51,780 --> 00:03:56,090
application as this one table.

37
00:03:56,130 --> 00:04:03,840
I want to give you all that we should name our application, our projects according to the functioning

38
00:04:03,840 --> 00:04:11,940
of that, so that it makes us clear in future that what actually this project was made for.

39
00:04:11,970 --> 00:04:22,980
Like suppose if I name this application as a whatever, ABC, X-Y-Z or any other like fancy name, but

40
00:04:22,980 --> 00:04:27,090
that would not help me in any way in future.

41
00:04:27,090 --> 00:04:35,250
Suppose in future I have to search that whether I have made a food ordering system application in my

42
00:04:35,250 --> 00:04:41,100
past and I would like I am not remembering that I have created this.

43
00:04:41,100 --> 00:04:50,310
So this will be like very complex in searching like ABC X, Y, Z or anything, any fancy name.

44
00:04:50,610 --> 00:04:58,380
So things becomes complex on naming applications in a fancy way or any like anonymous things.

45
00:04:58,380 --> 00:04:59,970
So we should name our.

46
00:05:00,850 --> 00:05:10,910
In such a way that it becomes easier for us to find the like, what is the significance of this application?

47
00:05:10,960 --> 00:05:13,870
So name your projects wisely.

48
00:05:13,870 --> 00:05:22,510
Choose our appropriate name for your applications in order to make things more like this was basically

49
00:05:22,510 --> 00:05:27,760
a tip I wanted to give you all of, but otherwise it's upon you.

50
00:05:27,760 --> 00:05:31,390
If you remember things then you can name it anyways.

51
00:05:31,390 --> 00:05:36,670
So yes, I have selected a name for my project food ordering system.

52
00:05:36,670 --> 00:05:39,310
And now I will hit enter to.

53
00:05:40,310 --> 00:05:42,760
Land into our projects folder.

54
00:05:42,770 --> 00:05:52,340
So yes, we have entered our projects folder and there are some inbuilt folders in this project.

55
00:05:52,820 --> 00:06:01,130
So we have selected the Create Project option from the Explorer tab and inside this Java project called

56
00:06:01,130 --> 00:06:02,450
US Food Ordering System.

57
00:06:02,450 --> 00:06:11,080
We have our dot list and dot v is called folders and these two folders are with the mercy of our compiler.

58
00:06:11,090 --> 00:06:14,180
This has nothing to do with our project.

59
00:06:14,180 --> 00:06:19,220
We are not going to use these two folders in our project anyways.

60
00:06:19,220 --> 00:06:21,770
So better ignored these two.

61
00:06:22,220 --> 00:06:29,750
We are going to use this sa z folder as a whole body of our project.

62
00:06:29,750 --> 00:06:32,720
So suppose that is a body.

63
00:06:33,200 --> 00:06:37,070
So inside the body we have body parts.

64
00:06:37,070 --> 00:06:44,210
So this is our C folder is the body which is going to contain the parts of our project.

65
00:06:44,210 --> 00:06:53,120
And these parts I say, I mean that files and folders which will be consisted inside this folder and

66
00:06:53,120 --> 00:06:57,740
will be totally responsible for testing and running of the application.

67
00:06:58,620 --> 00:06:59,100
Okay.

68
00:06:59,100 --> 00:07:07,380
So now switching to the prototype, which we made in order to like understand the functionalities and

69
00:07:07,380 --> 00:07:14,070
working of this application, the first thing was to create a new project in the ID, which we have

70
00:07:14,070 --> 00:07:15,190
done already.

71
00:07:15,210 --> 00:07:22,250
Now, in the next part, we will be creating a main class of this project inside the SA C folder.

72
00:07:22,260 --> 00:07:25,770
As I said, this is the main body of our application.

73
00:07:25,860 --> 00:07:31,350
So creating the main class, calling it labelled Java.

74
00:07:31,650 --> 00:07:39,690
So we have to create files and while creating files, we have to keep in mind that these file names

75
00:07:39,690 --> 00:07:41,990
should end with not Java.

76
00:07:42,000 --> 00:07:50,370
So in order to make it a Java program file, so we have to add dot java as a necessity while making

77
00:07:50,370 --> 00:07:55,600
files inside the folder or any Java project inside any other folder.

78
00:07:55,620 --> 00:07:58,950
So the main class is called as labelled on Java.

79
00:07:58,980 --> 00:08:07,950
On hitting enter, we will be landing in the labeled Java like file and we will be.

80
00:08:08,370 --> 00:08:08,790
Yes.

81
00:08:08,790 --> 00:08:17,880
So there is already class made called app dot java and this approach java will run once there will be

82
00:08:17,880 --> 00:08:19,800
any exception in our app.

83
00:08:19,800 --> 00:08:22,560
So this app.

84
00:08:22,560 --> 00:08:29,010
But Java will run in case of any runtimes error arising in our application.

85
00:08:30,090 --> 00:08:35,610
So basically it has no functional use in our application.

86
00:08:35,610 --> 00:08:44,220
It is just an inbuilt file inside the SA C folder and contains no functionality of our application.

87
00:08:44,340 --> 00:08:48,770
So yes, we have created labelled Java file.

88
00:08:48,930 --> 00:08:55,590
Now inside this we've been declaring a class which will be called as label.

89
00:08:55,620 --> 00:08:57,900
So we have created labelled Java.

90
00:08:57,900 --> 00:09:05,340
So obviously the class name is going to be labelled, this is the public class and inside it we will

91
00:09:05,340 --> 00:09:12,180
be like declaring some of the variables or we can call it as objects as there is a class.

92
00:09:12,180 --> 00:09:23,910
So inside class we have objects and inside this class we are like declaring the objects as public static.

93
00:09:26,320 --> 00:09:27,460
Final long.

94
00:09:28,750 --> 00:09:35,710
So these are the objects which are going to be used in our application.

95
00:09:36,600 --> 00:09:37,200
Okay.

96
00:09:37,200 --> 00:09:46,470
So these are the objects required in this project in order to make the form complete for ordering the

97
00:09:46,470 --> 00:09:47,780
food items.

98
00:09:47,790 --> 00:09:53,970
And these are objects are from the single library.

99
00:09:53,970 --> 00:09:58,260
So we have to import in order to make things working.

100
00:09:58,260 --> 00:10:02,400
So we are importing everything one by one importing.

101
00:10:02,420 --> 00:10:11,940
Gerardo I have already discussed this that we are going to like use this string and NWT frameworks extensively.

102
00:10:11,940 --> 00:10:15,240
So we are doing that now.

103
00:10:15,330 --> 00:10:26,400
So we have imported all the objects here from Java swing and Java String is the main toolkit which is

104
00:10:26,400 --> 00:10:30,570
responsible for making the frame of the application.

105
00:10:30,660 --> 00:10:40,200
So inside this class we are going to initialize a constructor called as label also as well.

106
00:10:40,200 --> 00:10:50,760
So this public label constructor is going to contain the layout of the like how the interface will look.

107
00:10:50,760 --> 00:10:57,240
So setting layout to null as this is going to be in default state.

108
00:10:57,240 --> 00:11:05,430
So we have set the layout now we are going to set the size of the frame and the size is going to be

109
00:11:05,880 --> 00:11:06,930
suppose.

110
00:11:07,790 --> 00:11:17,450
The set size is going to be 600 by 400 or the height and width of the application.

111
00:11:17,780 --> 00:11:25,400
And we have to import something in order to make think like we have not created the method.

112
00:11:25,400 --> 00:11:30,200
So we will create the method later in this class as well.

113
00:11:30,350 --> 00:11:39,650
Firstly, let us set everything in order to make the frame idea like what the frame is going to look

114
00:11:39,650 --> 00:11:40,270
at.

115
00:11:40,280 --> 00:11:41,690
So location.

116
00:11:41,690 --> 00:11:43,010
Relative to.

117
00:11:44,390 --> 00:11:45,800
Relative to.

118
00:11:47,200 --> 00:11:47,850
None.

119
00:11:48,750 --> 00:11:53,280
This is also going to be null and after this.

120
00:11:54,080 --> 00:11:55,430
We are going to.

121
00:11:56,400 --> 00:11:58,050
Set some more things.

122
00:11:58,560 --> 00:12:08,310
Okay, so before setting the size and layout of the frame, firstly we should discuss what are the objects

123
00:12:08,310 --> 00:12:13,590
we are going to use while making this frame or application.

124
00:12:13,590 --> 00:12:15,780
We can it anyways.

125
00:12:15,780 --> 00:12:23,670
So we are initializing a long data type for version uid.

126
00:12:23,700 --> 00:12:28,620
So we have a serial number for every menu item.

127
00:12:28,650 --> 00:12:32,040
Similarly, we have like four labels.

128
00:12:32,040 --> 00:12:33,900
We can see it here.

129
00:12:34,380 --> 00:12:40,620
So we have labels for size, for how many glasses we want to order.

130
00:12:40,620 --> 00:12:49,350
And similarly for the report and beverage we have ordered, the dialog box will also contains labels.

131
00:12:49,350 --> 00:12:54,000
So if you like, memorize it, you will get to know.

132
00:12:54,690 --> 00:12:59,820
So this J label is for all the labels inside the application.

133
00:12:59,850 --> 00:13:10,320
Similarly, this J combo box with a data type of string is responsible for the size like the J combo

134
00:13:10,320 --> 00:13:10,920
box is.

135
00:13:10,920 --> 00:13:13,740
Basically that what we call it?

136
00:13:14,130 --> 00:13:23,840
It is the like options which are appearing here as the only medium large you can see here.

137
00:13:24,060 --> 00:13:26,280
Small, medium, large.

138
00:13:26,280 --> 00:13:31,200
And these are possible with the help of J comma box.

139
00:13:31,950 --> 00:13:35,400
The sizes there are three sizes in whole.

140
00:13:35,670 --> 00:13:40,500
Also, we have radio buttons for all the items in the menu.

141
00:13:40,980 --> 00:13:48,810
We have already discussed in the introduction part that these radio buttons one, two, three, four

142
00:13:48,840 --> 00:13:53,840
are according to our choices that how many radio buttons we are going to use.

143
00:13:53,840 --> 00:13:59,750
So initially we are like declaring four radio buttons for juice, water and coffee.

144
00:13:59,760 --> 00:14:04,890
Similarly, for buttons we have buttons, add and order.

145
00:14:05,460 --> 00:14:10,380
So a button group is to be declared before and then after.

146
00:14:10,380 --> 00:14:16,410
We are initializing the buttons with the help of bit, then add and order.

147
00:14:16,770 --> 00:14:25,680
Also for the last we are declaring a text field, but how many glasses of the specific item from the

148
00:14:25,680 --> 00:14:29,160
menu we want to order and amount of.

149
00:14:29,160 --> 00:14:37,320
So this is the integer which is going to contain the amount of this for.

150
00:14:38,130 --> 00:14:38,480
Text.

151
00:14:38,800 --> 00:14:43,500
So this is going to take integer outputs, inputs.

152
00:14:43,500 --> 00:14:48,870
So we are going to save it as amount of with the help of this.

153
00:14:49,230 --> 00:14:56,210
So we have declared all the objects associated with this application.

154
00:14:56,220 --> 00:15:06,960
Now in the next part we will be looking back with adding some more styling and force with separate beverages

155
00:15:06,990 --> 00:15:15,510
as coffee, tea, water, juice and the add ons attached to it will be declared inside those classes

156
00:15:15,510 --> 00:15:16,110
only.

157
00:15:16,110 --> 00:15:23,730
So everything will be attached inside the classes and we have to add functionalities of each menu item

158
00:15:23,730 --> 00:15:25,450
within their classes only.

159
00:15:26,010 --> 00:15:29,160
So see you in the next part with all the other classes.
