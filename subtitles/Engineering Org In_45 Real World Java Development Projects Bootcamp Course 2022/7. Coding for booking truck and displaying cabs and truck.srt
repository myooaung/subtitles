1
00:00:00,630 --> 00:00:05,700
So in this video, we will be talking about the next three classes, which are bill caps, tracking

2
00:00:05,700 --> 00:00:07,090
and tracking details.

3
00:00:07,110 --> 00:00:16,530
So in view caps class, this class will be used to show the available caps type and their images.

4
00:00:16,650 --> 00:00:20,040
So this class is defined inside the package cap booking system.

5
00:00:20,040 --> 00:00:21,840
We have imported the necessary packages.

6
00:00:23,190 --> 00:00:24,060
Part of this class.

7
00:00:24,060 --> 00:00:28,470
And we have defined the public class webcast, which is extending the frame and implementing or enable,

8
00:00:28,470 --> 00:00:31,950
and there will be 19 labels.

9
00:00:31,950 --> 00:00:36,210
So these labels will be used to restore images basically, and the names as well.

10
00:00:36,330 --> 00:00:42,170
And there is a label caption and there is a thread type of variability inside the public void run method.

11
00:00:42,180 --> 00:00:50,190
What I am doing is visible through captioned or set multi Suzuki, so this is the name of that car and

12
00:00:50,190 --> 00:00:54,210
adding that caption to the label and thread sleep for 2.8 second.

13
00:00:56,150 --> 00:01:00,680
After that, setting the visibility of L two as false and for the L three as true.

14
00:01:00,770 --> 00:01:04,370
So this has followed the for the one level l two.

15
00:01:04,850 --> 00:01:09,950
So we will be doing the same thing for all the labels, like set the visibility of the L three as to

16
00:01:09,950 --> 00:01:15,830
then will be setting its name, adding that name or caption to that label, setting the visibility of

17
00:01:15,830 --> 00:01:21,230
that label as true and third slip for 2.8 second again, then set the visibility of the current label

18
00:01:21,230 --> 00:01:21,890
as false.

19
00:01:21,950 --> 00:01:27,770
Now for the next label, we will set the visibility as to set its caption and Toyota Fortuner then adding

20
00:01:27,770 --> 00:01:34,250
that caption to that label, setting the tread slip for 2.8 second and set the visibility of the label

21
00:01:34,250 --> 00:01:35,120
four as false.

22
00:01:35,120 --> 00:01:38,360
Then we will be setting the visibility of the label five has true.

23
00:01:40,370 --> 00:01:46,970
So its name will be Mato Suzuki Swift, adding that caption to the label tread slip for 2.8 seconds.

24
00:01:47,120 --> 00:01:51,920
So this this process we will be doing for every car name.

25
00:01:51,920 --> 00:01:54,650
So let me just move through this.

26
00:01:54,650 --> 00:02:02,720
So this is for the Hyundai Central type of car, doing the same thing for the auto BMW x one for the

27
00:02:02,720 --> 00:02:03,590
bike ride.

28
00:02:04,370 --> 00:02:10,790
Then there is a guy named data is zip and DF mini truck the mini truck.

29
00:02:10,790 --> 00:02:18,290
So this these will be the names of the gaps which are provided by this application.

30
00:02:19,630 --> 00:02:26,740
Now what we are doing is there is the parameter is non parameter constructor of this class inside which

31
00:02:26,740 --> 00:02:30,790
what we are doing is setting the bound or location and size for that frame.

32
00:02:30,790 --> 00:02:34,690
And after that what we are doing is setting the background color of that frame with the help of the

33
00:02:34,900 --> 00:02:40,960
RDB values and creating a new thread with the current instance and with the inside the caption There

34
00:02:40,960 --> 00:02:41,590
is a new label.

35
00:02:41,590 --> 00:02:46,930
We are setting the bound for that label, adding foreground and one type and family size for that,

36
00:02:46,930 --> 00:02:48,430
and adding that to our frame.

37
00:02:48,640 --> 00:02:53,080
After that we are creating image and adding that image to a label and setting that image location,

38
00:02:53,080 --> 00:02:56,320
size, and adding that to the frame, setting the layout as null.

39
00:02:58,230 --> 00:03:04,980
Now what we are doing is we are adding every image for every label, like for every car, we are adding

40
00:03:04,980 --> 00:03:06,100
an image of that car.

41
00:03:06,120 --> 00:03:08,250
So this is for the car one.

42
00:03:08,250 --> 00:03:09,900
Similarly, this is for the car too.

43
00:03:09,900 --> 00:03:11,310
And the label three.

44
00:03:12,870 --> 00:03:15,360
Then there is a car three in level four.

45
00:03:15,390 --> 00:03:17,910
Then there is a car four in level five.

46
00:03:18,330 --> 00:03:19,530
Similarly, there is a car.

47
00:03:19,530 --> 00:03:20,660
Five is stored.

48
00:03:21,060 --> 00:03:22,380
Image is stored in the label.

49
00:03:22,380 --> 00:03:23,190
L six.

50
00:03:23,520 --> 00:03:26,910
Then there is a car six images stored in the label l seven.

51
00:03:27,300 --> 00:03:29,550
Then there is a car seven images stored in the label.

52
00:03:29,550 --> 00:03:30,210
LL eight.

53
00:03:30,600 --> 00:03:32,000
Similarly for the car.

54
00:03:32,010 --> 00:03:39,600
910 And this will be the image and in label it and then another track image and label 11.

55
00:03:41,130 --> 00:03:48,600
So this is how the images are stored in the label and its names will be also stored in that particular

56
00:03:48,600 --> 00:03:49,140
label.

57
00:03:49,140 --> 00:03:56,880
And then we have started the thread to start, which will start running the run method and inside the

58
00:03:56,880 --> 00:04:00,900
public static domain we have called the build caps dot set visible as true.

59
00:04:01,020 --> 00:04:04,170
So this is how the vocab cap class will run.

60
00:04:04,170 --> 00:04:10,080
We will be showing its output when we will run this project completely in our last video in the life

61
00:04:10,080 --> 00:04:10,770
run video.

62
00:04:11,070 --> 00:04:14,220
Now let's move on to the next class that is tracking Java.

63
00:04:15,730 --> 00:04:25,660
This class will help us to book any type of truck if we want to export some heavy elements or things

64
00:04:25,660 --> 00:04:29,590
so that we need a truck to export those things or goods.

65
00:04:29,710 --> 00:04:32,410
So we have defined a cab booking system inside.

66
00:04:33,070 --> 00:04:36,880
We have to find this class in that the cab booking system and imported the necessary packages.

67
00:04:37,270 --> 00:04:42,640
After that, we have to find the trucking class, which is extending frame inside which we have a table

68
00:04:42,640 --> 00:04:46,480
and three labels, three buttons and three choices.

69
00:04:46,720 --> 00:04:48,330
Then we have called the new truck.

70
00:04:48,370 --> 00:04:49,270
Inside the main function.

71
00:04:49,270 --> 00:04:52,660
We have called the new training class with null values, then public trucking.

72
00:04:52,780 --> 00:04:55,540
We have defined the parameter constructor for the trucking class.

73
00:04:55,630 --> 00:05:01,270
Said the title has transport good content, a background color as color white and it said default or

74
00:05:01,270 --> 00:05:03,370
close operation exit on close.

75
00:05:04,600 --> 00:05:08,920
Then there's the label transport, good setting as foreground, colour as blue, setting its font,

76
00:05:08,920 --> 00:05:13,270
family type size and labeling, setting its location and size and adding that to a frame.

77
00:05:13,570 --> 00:05:15,880
After that, we are setting its layout as null.

78
00:05:15,910 --> 00:05:21,430
Then there is a label for the source setting its font, family size, location, and the size for that

79
00:05:21,430 --> 00:05:23,110
label and adding that to our frame.

80
00:05:23,860 --> 00:05:29,740
Similarly, similar thing doing for the destination font, family size, location and size height width.

81
00:05:29,740 --> 00:05:30,940
Adding that to our frame.

82
00:05:32,330 --> 00:05:39,830
Then for the label lines defining its font and its location size and adding that our frame.

83
00:05:40,130 --> 00:05:45,440
Then there is another label defining its font type size, setting its bound and adding that to our frame.

84
00:05:45,590 --> 00:05:51,780
Then there is a second choice setting its bound names, bound size, location, adding that to our frame.

85
00:05:51,800 --> 00:05:55,340
Then there is a C2 choice setting its bound location size, adding that to our frame.

86
00:05:56,670 --> 00:05:57,810
Inside the block.

87
00:05:57,840 --> 00:06:03,590
We have a stabilize the connection with our connection class and executed the results with se execute

88
00:06:03,610 --> 00:06:08,610
queries query select abstract from transport so it will select the order data from the transport and

89
00:06:08,610 --> 00:06:09,810
inside seven choice.

90
00:06:09,810 --> 00:06:14,280
We will be adding a string from the source of that transport and destination for the transport.

91
00:06:14,940 --> 00:06:18,660
All the source and destination which are provided in our transport table.

92
00:06:20,290 --> 00:06:24,400
Then we will be executing our seller tax reform customer well, user name will match.

93
00:06:24,400 --> 00:06:29,560
So for that particular user name, what we are doing, we are setting the names in our label anytime.

94
00:06:30,770 --> 00:06:33,890
After that there is a label l11 which is for the weight.

95
00:06:33,890 --> 00:06:37,650
So there will be weight also for the goods.

96
00:06:37,670 --> 00:06:41,630
What like what is the weight range of the goods you want to transport or export?

97
00:06:41,870 --> 00:06:46,210
Then font, family type and size and its setting, its location and size and adding that label to the

98
00:06:46,220 --> 00:06:46,730
frame.

99
00:06:46,820 --> 00:06:49,100
After that, there is ac3 new choice.

100
00:06:50,550 --> 00:06:56,100
Hiding those choices to over adding the details to our choices.

101
00:06:56,100 --> 00:07:03,300
Like 0 to 10 gives you 10 to 58, 50, 200, 300 to 50, 500 to 1000 or greater than 1000.

102
00:07:04,060 --> 00:07:07,200
After then, we will set the location and size for that particular frame.

103
00:07:07,260 --> 00:07:11,910
After that, there is show button setting background for one color and adding its location and size.

104
00:07:13,150 --> 00:07:18,190
Then we have similarly like in previous classes we have defined for the label driver frame.

105
00:07:18,370 --> 00:07:22,150
Driver name truck type truck name distance.

106
00:07:22,900 --> 00:07:23,560
Price.

107
00:07:24,630 --> 00:07:25,470
After that.

108
00:07:26,760 --> 00:07:30,890
Header image inside the label, setting its location size and adding that to a frame.

109
00:07:31,040 --> 00:07:34,250
Then we have defined the action performed inside which we inside destination.

110
00:07:34,250 --> 00:07:39,950
We have stored the destination from the set of field and in its latest thing we have stored the.

111
00:07:41,600 --> 00:07:43,400
Selected three from the C three choice.

112
00:07:43,700 --> 00:07:49,980
After that we have executed the query select x2 from transport where destination will match and price

113
00:07:50,090 --> 00:07:50,900
is close to zero.

114
00:07:50,900 --> 00:07:57,050
So for that next record in the destination field destination table, we will set the driver name and

115
00:07:57,050 --> 00:08:00,290
L2 field price and price is string.

116
00:08:01,120 --> 00:08:04,330
Track naming and sex field and distancing.

117
00:08:04,330 --> 00:08:05,200
Late label.

118
00:08:06,020 --> 00:08:07,370
Then for the switch weight.

119
00:08:07,370 --> 00:08:13,940
If the weight will match these cases, we will add extra prices over the default price with respect

120
00:08:13,940 --> 00:08:15,260
to this price.

121
00:08:17,320 --> 00:08:22,270
If the price is greater than 1000, then price will be plus 600.

122
00:08:23,310 --> 00:08:24,690
L forgot sec text.

123
00:08:24,690 --> 00:08:33,060
So we'll be setting the price in our label for after that there is a button one for the transport and

124
00:08:33,060 --> 00:08:37,020
background and for one colour of that button setting its location of the button.

125
00:08:38,050 --> 00:08:38,740
For that button.

126
00:08:38,740 --> 00:08:44,950
We have defined and stored the required details in the respective end string, and after stabilizing

127
00:08:44,950 --> 00:08:50,260
the connection with the database, we will delete the previous record in the table and end the latest

128
00:08:50,260 --> 00:08:53,560
record with the help of this value in certain transport values.

129
00:08:53,590 --> 00:08:58,450
These values will be inserted and we will execute that query.

130
00:08:58,900 --> 00:09:01,030
After that, we will show that the successfully.

131
00:09:02,630 --> 00:09:06,260
Then there is a cancel button which will be used to close this window.

132
00:09:06,260 --> 00:09:13,250
Setting the size of the frame will be 1600 and its location for 15 to 20, setting as visibility as

133
00:09:13,250 --> 00:09:13,650
true.

134
00:09:13,670 --> 00:09:20,360
So this is all about how we can book our truck to export or send transport over the source and destinations.

135
00:09:20,360 --> 00:09:23,690
So let's see the next class, which is the tracking details.

136
00:09:23,690 --> 00:09:28,820
So it will show the tracking details of how many details you have booked.

137
00:09:29,360 --> 00:09:31,970
It will show the latest booking detail, basically.

138
00:09:33,890 --> 00:09:38,550
So we are this class is extending also frame inside which you have defined the panel content, pain

139
00:09:38,570 --> 00:09:39,530
and even choice.

140
00:09:39,770 --> 00:09:44,660
We have defined inside the main method public void run inside which we have created the current instance

141
00:09:44,660 --> 00:09:47,630
of the indicated details, class and center as true.

142
00:09:48,020 --> 00:09:51,350
After that, what we are doing is creating a parameterized.

143
00:09:52,310 --> 00:09:56,570
Constructor for that class, setting the size for that content pane.

144
00:09:58,020 --> 00:09:58,930
Defining the panel.

145
00:09:58,950 --> 00:10:02,190
Adding it to our content pane and layout as well.

146
00:10:02,190 --> 00:10:07,950
Then we are adding our image icon with the help of a label label on setting bound and location for that

147
00:10:07,950 --> 00:10:08,400
label.

148
00:10:10,450 --> 00:10:10,900
After that.

149
00:10:10,900 --> 00:10:16,990
Similarly, as we did in the previous classes, we are creating a level, setting its font type size

150
00:10:17,140 --> 00:10:21,100
and its location and size and adding that to our content pane.

151
00:10:21,280 --> 00:10:23,620
Similarly, there is another for the customer name.

152
00:10:23,620 --> 00:10:25,750
It's respect on a label from the driver name.

153
00:10:26,290 --> 00:10:27,670
It's respect on a label.

154
00:10:29,080 --> 00:10:31,180
For the source destination name.

155
00:10:32,500 --> 00:10:36,040
Then there is a label for the weight, distance and price.

156
00:10:37,280 --> 00:10:41,080
After that, what we are doing is creating a connection.

157
00:10:41,090 --> 00:10:46,940
After that, inside the results that statement say dot execute query select extract from customer where

158
00:10:46,940 --> 00:10:51,320
username will match will be storing null in the string name.

159
00:10:51,350 --> 00:10:58,750
After that, we will set the text from the name field in our one label and store the name in our store

160
00:10:58,940 --> 00:10:59,570
string name.

161
00:11:01,010 --> 00:11:05,810
After that, we'll be executing select action from Internet in transport.

162
00:11:06,030 --> 00:11:11,540
Their name will match and we will store the required details in our two, three, four, five, six

163
00:11:11,540 --> 00:11:13,670
and l seven and eight table.

164
00:11:14,030 --> 00:11:19,460
Now we will be generating a random number with the help of a random class.

165
00:11:19,460 --> 00:11:22,730
And after that what we are doing is are stored close.

166
00:11:22,760 --> 00:11:29,240
So actually this is not required, I think random because it is a view tracking details.

167
00:11:29,240 --> 00:11:31,760
So we will not using that.

168
00:11:32,480 --> 00:11:39,230
After that, what we are doing is we are closing the iris connection and there is a button exit which

169
00:11:39,230 --> 00:11:42,950
will help us to move back from this window and send the possibility of the current window as false,

170
00:11:42,980 --> 00:11:48,440
its location, setting as location and size and background and foreground, color as black and white

171
00:11:48,440 --> 00:11:50,930
respectively, adding that to our content pane.

172
00:11:50,930 --> 00:11:55,030
And then we will selecting the complete background color of the window as white.

173
00:11:55,040 --> 00:11:57,740
So this is all about the three classes view caps.

174
00:11:57,740 --> 00:12:02,120
So which view caps class will show us the variable details of the caps?

175
00:12:02,150 --> 00:12:08,450
Tracking the file will help us to book a track to exporting or transporting any goods.

176
00:12:08,510 --> 00:12:14,090
And after that, there is a of tracking details which will show us the latest detail of about the.

177
00:12:15,930 --> 00:12:20,720
Track which we you have user have booked for the export exporting goods.

178
00:12:20,730 --> 00:12:23,730
So this is all about these three classes in this video.
