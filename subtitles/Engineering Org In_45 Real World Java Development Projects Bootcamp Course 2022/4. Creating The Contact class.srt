1
00:00:00,750 --> 00:00:01,660
Hello, everyone.

2
00:00:01,680 --> 00:00:06,210
So we have already created our project in the ID.

3
00:00:06,240 --> 00:00:12,590
We have created our main class, which will be responsible for testing and running of the application.

4
00:00:12,600 --> 00:00:21,490
Now our next class, which we will be creating, is the Contact Java class inside the CRC folder.

5
00:00:22,050 --> 00:00:30,060
So that I already said that we are going to create all the important files inside the CRC folder only.

6
00:00:30,180 --> 00:00:31,320
So, yes.

7
00:00:32,190 --> 00:00:32,700
Yes.

8
00:00:32,700 --> 00:00:42,330
So after hitting enter this public class contact is being created inside this AC folder and this file

9
00:00:42,330 --> 00:00:49,980
is going to contain all the consistence of the form or whether it be the first name, lastname, email,

10
00:00:49,980 --> 00:00:54,780
phone number, address, the address and at last the notes.

11
00:00:54,780 --> 00:01:01,560
So we are going to like declare all of these fields inside this contact class.

12
00:01:01,800 --> 00:01:10,230
Later we will be creating a contact constructor which will be like calling, like accessing all of them

13
00:01:10,230 --> 00:01:12,030
inside the constructor.

14
00:01:12,030 --> 00:01:21,540
Then later on we will be using set and get methods in order to like access and update all of them,

15
00:01:21,780 --> 00:01:30,000
whether it be the first name, last name, web address inside any other class as we have to access all

16
00:01:30,000 --> 00:01:32,160
of them in other classes also.

17
00:01:32,160 --> 00:01:40,950
So in order to do that, we have to set and get them all like in the first part so that only we can

18
00:01:40,950 --> 00:01:41,820
access them.

19
00:01:41,820 --> 00:01:45,930
We have already discussed the setters and getters in Java.

20
00:01:45,960 --> 00:01:50,700
Set methods are used to set like update the values.

21
00:01:50,700 --> 00:01:58,480
So suppose we want to update any of the fields inside the log in form, contact form then set.

22
00:01:58,480 --> 00:02:06,480
The method will be called again and again, which will be setting like the updated values to all the

23
00:02:06,480 --> 00:02:15,330
text fields and gate methods is used to access that specific set data to other classes.

24
00:02:15,330 --> 00:02:17,880
So there are more than one classes.

25
00:02:17,880 --> 00:02:22,740
So in order to access all of them, we will be using certain methods.

26
00:02:22,740 --> 00:02:33,960
So this contact class is all about creating the like labels of the font here this and set and get methods

27
00:02:33,960 --> 00:02:35,550
for all eight of them.

28
00:02:35,790 --> 00:02:38,700
So let us start creating this.

29
00:02:39,570 --> 00:02:50,640
So inside this contact class, we are going to declare some global variables for the labels of the form.

30
00:02:50,820 --> 00:02:54,000
So the first one is first name.

31
00:02:54,720 --> 00:03:02,100
And similarly we are going to set eight fields for all eight of the labels.

32
00:03:02,850 --> 00:03:06,810
So this is okay, so write it in camel case.

33
00:03:07,860 --> 00:03:09,390
Or a better appearance.

34
00:03:09,390 --> 00:03:12,270
And then I am going to copy this.

35
00:03:13,230 --> 00:03:15,960
For seven more times.

36
00:03:15,960 --> 00:03:23,760
We actually we have eight fields, so total of eight global variables should be declared.

37
00:03:26,230 --> 00:03:26,560
Okay.

38
00:03:26,560 --> 00:03:30,190
So we are here with five, three more to go.

39
00:03:32,710 --> 00:03:33,250
Okay.

40
00:03:33,250 --> 00:03:40,300
So all of them are going to be in string data time, whether it be the name, phone number, address

41
00:03:40,300 --> 00:03:41,140
or not.

42
00:03:41,650 --> 00:03:46,930
Just simply update the names for the.

43
00:03:47,830 --> 00:03:49,060
Like labels.

44
00:03:49,630 --> 00:03:50,980
So email.

45
00:03:51,280 --> 00:03:53,050
The fourth one is.

46
00:03:55,260 --> 00:03:55,710
Okay.

47
00:03:55,710 --> 00:03:58,800
So the fourth one was, I think phone number.

48
00:03:59,880 --> 00:04:01,590
So phone number.

49
00:04:02,850 --> 00:04:07,650
The fifth one was for the email or not email the address.

50
00:04:08,160 --> 00:04:17,070
So address is going to be consisted inside this and for the fourth one web address.

51
00:04:20,580 --> 00:04:21,300
Yes.

52
00:04:21,930 --> 00:04:24,990
So we are done with the.

53
00:04:26,730 --> 00:04:27,240
Yes.

54
00:04:27,240 --> 00:04:28,680
Address it is.

55
00:04:29,220 --> 00:04:31,750
We are done with the six parts now.

56
00:04:31,770 --> 00:04:32,280
Two more.

57
00:04:32,640 --> 00:04:34,410
I think we have total of.

58
00:04:35,990 --> 00:04:36,950
Discount.

59
00:04:37,580 --> 00:04:41,420
First name, last name, email, phone number, web address, address and notes.

60
00:04:42,410 --> 00:04:44,500
firstName, lastname email phone number address.

61
00:04:44,510 --> 00:04:48,320
Okay, so only one is left, which is notes.

62
00:04:48,950 --> 00:04:51,980
So let us update this also.

63
00:04:53,510 --> 00:04:53,790
Okay.

64
00:04:53,930 --> 00:05:01,190
So we have created all the required global variables inside this contact class.

65
00:05:01,310 --> 00:05:07,640
Now our next concern is to create the contact constructor.

66
00:05:08,210 --> 00:05:08,590
Okay.

67
00:05:08,660 --> 00:05:12,860
So inside this contact object few of the.

68
00:05:12,860 --> 00:05:16,400
Okay, so all of the eight declared.

69
00:05:18,680 --> 00:05:21,830
Global arrivals are going to record.

70
00:05:23,810 --> 00:05:25,340
Inside this.

71
00:05:26,370 --> 00:05:30,330
So let us simply paste and remove all the public.

72
00:05:31,940 --> 00:05:39,290
We are going to use all eight of them as arguments inside this contact constructor.

73
00:05:40,260 --> 00:05:40,980
And.

74
00:05:42,800 --> 00:05:43,190
Okay.

75
00:05:43,190 --> 00:05:47,510
So let us come after fixing this.

76
00:05:48,730 --> 00:05:49,910
Okay, so here we are.

77
00:05:49,940 --> 00:05:53,790
We have created this contact constructor inside this.

78
00:05:53,810 --> 00:05:58,160
We have passed all of the labels of the form as arguments.

79
00:05:58,160 --> 00:06:02,660
First name, last name, email, phone number, address, web address and notes.

80
00:06:02,780 --> 00:06:11,320
And we have used this keyword to access these all of the variables from the contact class.

81
00:06:11,330 --> 00:06:19,910
So in order to access the variables or we can call it as objects of the class inside our constructor,

82
00:06:19,940 --> 00:06:22,060
we have to use this keyword.

83
00:06:22,070 --> 00:06:27,920
So this dot first name is the way to write and we have done it for all.

84
00:06:27,950 --> 00:06:30,230
Okay, so three, seven of them.

85
00:06:30,560 --> 00:06:39,470
So, yes, after this, our next concern is to like a set and get method for all seven of them.

86
00:06:40,010 --> 00:06:45,830
So we are going to use public string.

87
00:06:48,270 --> 00:06:50,600
Forget first name.

88
00:06:52,340 --> 00:06:57,810
This is for getting the first name inside the.

89
00:06:58,100 --> 00:07:02,690
Like any other class where it is being asked for.

90
00:07:02,720 --> 00:07:09,380
The class will call this get first name and it will be accessed.

91
00:07:09,380 --> 00:07:09,890
The.

92
00:07:10,070 --> 00:07:12,410
And this is going to return the.

93
00:07:12,740 --> 00:07:14,510
Simply return the first name.

94
00:07:14,510 --> 00:07:15,710
Other string.

95
00:07:16,340 --> 00:07:16,760
So.

96
00:07:16,760 --> 00:07:18,350
First name.

97
00:07:18,620 --> 00:07:19,310
Yes.

98
00:07:21,150 --> 00:07:25,500
So we are done with using the gate method for the first name.

99
00:07:25,530 --> 00:07:29,640
Now the next part is to set this first name.

100
00:07:30,030 --> 00:07:36,330
So in the next line, public set, first name.

101
00:07:38,770 --> 00:07:45,670
And this will be helping us to update the first name whenever it is required.

102
00:07:46,120 --> 00:07:50,140
So the data type so argument is going to be the first name.

103
00:07:52,080 --> 00:07:58,020
And inside this set method we have created.

104
00:07:58,830 --> 00:08:00,600
And this is going to.

105
00:08:01,750 --> 00:08:05,080
Update the first name with the help of this keyword.

106
00:08:05,080 --> 00:08:13,810
So whenever we require the first name, we will be using this keyword to access this from the contact

107
00:08:13,810 --> 00:08:14,500
class.

108
00:08:15,420 --> 00:08:15,840
Okay.

109
00:08:15,840 --> 00:08:17,670
So set first name.

110
00:08:18,060 --> 00:08:27,360
And okay, so this is a void function and this is not going to like return anything, a void function.

111
00:08:27,360 --> 00:08:30,850
So I hope you have all been aware about that.

112
00:08:30,870 --> 00:08:34,020
Void functions do not return anything.

113
00:08:34,680 --> 00:08:45,660
So yes, they simply like will be not returning, but just updating the first name and this get first

114
00:08:45,660 --> 00:08:47,610
name is not a void function.

115
00:08:47,610 --> 00:08:50,070
It is going to return the first name.

116
00:08:50,940 --> 00:08:53,550
So yes, this dot first name.

117
00:08:54,390 --> 00:08:56,400
With a set of first name.

118
00:08:57,770 --> 00:08:59,300
After the update.

119
00:09:00,910 --> 00:09:06,470
So yes, we have used the get and set method for the first name.

120
00:09:06,490 --> 00:09:12,910
Now we will be using the get and set method for all of the labels.

121
00:09:12,910 --> 00:09:18,280
We have declared her the last name, the phone number, email address and everything.

122
00:09:19,980 --> 00:09:21,150
So here we are.

123
00:09:21,390 --> 00:09:29,880
We have used the get and set method for all of the labels we have been declared, whether it be the

124
00:09:29,880 --> 00:09:38,880
last name similar where we have like set last name and this is going to update the last name which is

125
00:09:38,880 --> 00:09:41,460
being passed as document later.

126
00:09:41,520 --> 00:09:50,100
Similarly, for the email and for the phone number for address and web address and notes.

127
00:09:50,400 --> 00:09:53,850
So all of them are in the string format.

128
00:09:53,850 --> 00:10:04,620
So it becomes easy for us to like copy and paste the same snippet just to changing the argument and

129
00:10:04,620 --> 00:10:06,150
the name for the function.

130
00:10:06,690 --> 00:10:10,110
So yes, all seven of them are done.

131
00:10:10,230 --> 00:10:15,030
Now, at the end we have to like return.

132
00:10:15,030 --> 00:10:15,510
What?

133
00:10:16,560 --> 00:10:17,100
Yes.

134
00:10:17,100 --> 00:10:25,770
So this is going to be returned here in the form of like first name plus last name inside the contact

135
00:10:25,770 --> 00:10:27,480
repository frame.

136
00:10:27,840 --> 00:10:36,540
So, yes, this panel is simply containing the first name, plus our space between them and the last

137
00:10:36,540 --> 00:10:36,930
name.

138
00:10:37,020 --> 00:10:44,490
So we have to, like, concatenate this in the form and then return this in that manner only.

139
00:10:44,640 --> 00:10:53,400
So we are going to use two string function, which helps to concatenate strings and return the output

140
00:10:53,400 --> 00:10:55,080
in the form of strings only.

141
00:10:55,500 --> 00:11:03,930
So after that, using the tool string, we have to like use the override the keyword inside this override

142
00:11:03,930 --> 00:11:04,740
keyword.

143
00:11:04,890 --> 00:11:10,200
We are going to create a public string to string.

144
00:11:11,470 --> 00:11:19,780
My third, which is going to return the name as a concatenated text.

145
00:11:20,110 --> 00:11:29,590
So yes, inside this what we are going to actually return to inside this string function, we are going

146
00:11:29,590 --> 00:11:32,020
to return first name.

147
00:11:33,370 --> 00:11:40,760
Plus space between them and plus the last name.

148
00:11:42,910 --> 00:11:44,530
Okay, so here we are.

149
00:11:45,460 --> 00:11:50,470
We have completed this contact dot java class.

150
00:11:51,290 --> 00:12:00,050
This will help us to set all the labels inside the contact information form and to get them whenever

151
00:12:00,050 --> 00:12:02,300
needed by any other class.

152
00:12:02,480 --> 00:12:05,750
Also the contact repository like.

153
00:12:05,900 --> 00:12:14,440
Basically it is representing the view of both the form, both the divisions of the frame in the beginning.

154
00:12:14,450 --> 00:12:24,170
So in the beginning we have this and what this will be consisting of all seven of the labels and firstname,

155
00:12:24,170 --> 00:12:28,760
plus last name in a concatenated form in the repository sign.

156
00:12:28,970 --> 00:12:32,450
So yes, we have covered this contact class.

157
00:12:32,660 --> 00:12:40,550
So as far I can see that we have created the mean class and the contact class.

158
00:12:40,580 --> 00:12:50,270
Now our next concern will be to like create these buttons, how these buttons are going to be like acted.

159
00:12:50,570 --> 00:12:58,610
We have to attach action listeners to these buttons and then create a separate function for adding,

160
00:12:58,610 --> 00:13:07,370
updating and removing inside the frame class, which is going to be the most important class of this

161
00:13:07,430 --> 00:13:08,270
project.

162
00:13:09,080 --> 00:13:20,240
So let us create a new class inside the society folder, naming it as a repository dot java.

163
00:13:21,620 --> 00:13:31,790
And yes, inside this class we are firstly going to import the Java list import.

164
00:13:33,050 --> 00:13:38,930
Java dot util dot list is the way to import the list.

165
00:13:41,350 --> 00:13:42,310
List.

166
00:13:42,490 --> 00:13:45,280
Okay, so here it is.

167
00:13:46,720 --> 00:13:49,750
Java to list is being implemented.

168
00:13:49,780 --> 00:13:53,080
Now what this repository is actually doing.

169
00:13:53,320 --> 00:14:04,210
So this repository helps us to like get the functionalities according to which it is being called for.

170
00:14:05,050 --> 00:14:13,110
Basically, this is going to be the structure of this repository and what this repository actually does.

171
00:14:13,120 --> 00:14:22,330
So it defines a new, elegant type of method for storing, updating and extracting the data stored from

172
00:14:22,330 --> 00:14:24,250
the application.

173
00:14:24,250 --> 00:14:31,080
So whatever data is being stored in the application is going to be like.

174
00:14:31,660 --> 00:14:40,480
Yes, here we are going to store up data and extract all of the data we are creating, whether it be

175
00:14:40,480 --> 00:14:44,030
the information about the contacts.

176
00:14:44,050 --> 00:14:51,520
So once we will clicking any of the three buttons, then the actions attached with these buttons will

177
00:14:51,520 --> 00:14:56,290
assist us with the updated information.

178
00:14:56,650 --> 00:15:04,150
If we remove any of the content, then it the repository will assist us with removing that specific

179
00:15:04,630 --> 00:15:11,080
row from this repository block and a similar way for the update and admittance.

180
00:15:11,380 --> 00:15:19,390
So yes, this the repository is going to assist us with our storing, updating and extracting that data

181
00:15:19,390 --> 00:15:20,020
stored.

182
00:15:20,680 --> 00:15:27,820
So yes, till now we have created three classes, the contact class, the main class and the repository,

183
00:15:27,820 --> 00:15:34,830
which will be helping us to access the add and update and remove functionalities.

184
00:15:35,020 --> 00:15:44,240
Now our next concern is to create the next class for handling this or object repository.

185
00:15:44,260 --> 00:15:51,400
So here we have a code, all the functionalities, whether it be update or removal, and now the next

186
00:15:51,400 --> 00:15:58,450
class we will be creating is going to be the object repository class which will be containing information

187
00:15:58,450 --> 00:16:02,820
about how to add up data and remove data in the frame.

188
00:16:02,830 --> 00:16:05,620
So yes, we will see that in the next part.
