WEBVTT
1
00:00:01.190 --> 00:00:02.350
Hello, everyone.

2
00:00:02.360 --> 00:00:09.980
So I hope that you all have went through the introduction review and the working of the application

3
00:00:09.980 --> 00:00:17.360
with you and gained a rough overview about the application that we are going to make today.

4
00:00:17.960 --> 00:00:24.080
So the application was a music playlist library made in Java?

5
00:00:24.110 --> 00:00:32.240
Yes, core Java nor any other complex libraries will be used while making this application, and we

6
00:00:32.240 --> 00:00:37.980
are going to make this application in our favorite compiler Visual Studio code.

7
00:00:38.000 --> 00:00:38.690
Yes.

8
00:00:38.690 --> 00:00:46.820
So this is the welcome window of the IDE, the compiler, which we are going to use for writing the

9
00:00:46.820 --> 00:00:49.910
code of the music playlist application.

10
00:00:50.840 --> 00:00:57.650
So let us start creating the code of the application in that idea.

11
00:00:57.800 --> 00:01:07.250
So once you open the welcome page of the IDE, you have to click this file icon on the top of the left

12
00:01:07.250 --> 00:01:07.790
panel.

13
00:01:08.000 --> 00:01:12.980
So this is Explorer Tab and we have to click this.

14
00:01:13.760 --> 00:01:21.020
After clicking the Explorer Tab option, we have to click on Create Java Project Option.

15
00:01:21.020 --> 00:01:31.130
So I hope that you all have installed the ID and the JDK latest version in order to make Java application

16
00:01:31.130 --> 00:01:34.190
and learn how to make projects in Java.

17
00:01:34.310 --> 00:01:43.370
These two are the most required things before starting to make this application, so hoping that you

18
00:01:43.370 --> 00:01:48.030
all have installed the Visual Studio code and JDK 17.

19
00:01:48.050 --> 00:01:56.090
I am moving forward, but in case if you have missed that part or have not installed, then go through

20
00:01:56.090 --> 00:01:57.650
the previous videos.

21
00:01:57.860 --> 00:02:06.770
Then where you will get the tutorial for installing both of them, the ID and the JDK version as well.

22
00:02:06.800 --> 00:02:15.350
So for those who have already installed, I am moving forward and starting to create the Java project

23
00:02:15.350 --> 00:02:16.580
from scratch.

24
00:02:17.920 --> 00:02:24.230
So clicking on this great Java project, I am going to select no build tool options.

25
00:02:24.250 --> 00:02:32.620
We are going to make this application without any external frameworks of Java like we have Maven, Springboard

26
00:02:32.620 --> 00:02:34.480
Quarks and Micro Profile.

27
00:02:34.480 --> 00:02:39.010
But in this project we have no use of these extensions.

28
00:02:39.040 --> 00:02:43.330
We are just going to begin this with no build tool options.

29
00:02:43.330 --> 00:02:51.430
And on clicking on this Noble Tool option, we will open our desktop file chooser option.

30
00:02:51.430 --> 00:02:55.810
So this is for choosing the location of the file.

31
00:02:56.920 --> 00:03:01.090
So choosing the folder for storing the application.

32
00:03:01.090 --> 00:03:06.510
So if you wish to store in an already made folder, you can do so.

33
00:03:06.520 --> 00:03:11.030
Or if you want to create a new folder, then you can also do so.

34
00:03:11.050 --> 00:03:19.750
So I am going to select the PATH Desktop for storing this application and on clicking on the Select

35
00:03:19.750 --> 00:03:24.520
Project location, we will set a location for our project.

36
00:03:24.760 --> 00:03:32.680
You must note the location for the project as later when you mistakenly close Visual Studio code.

37
00:03:32.680 --> 00:03:37.750
Then if you wish to open the project, then you go through the path of the project.

38
00:03:37.750 --> 00:03:44.890
Like suppose if you have stored the project in C drive, then you have to go and see it right in order

39
00:03:44.890 --> 00:03:46.110
to open the project.

40
00:03:46.120 --> 00:03:53.590
Similarly, if you have stored in desktop like me, then you have to open your desktop and then open

41
00:03:53.590 --> 00:03:56.350
your folder made for this project.

42
00:03:56.350 --> 00:04:01.900
So we have selected desktop folder for storing this project.

43
00:04:01.900 --> 00:04:08.410
Like the location of project is going to be in the desktop and after selecting the desktop option,

44
00:04:08.410 --> 00:04:16.210
now I have to set a name for this Java project like this dialog box is asking for input a name.

45
00:04:16.210 --> 00:04:17.530
Java project name.

46
00:04:17.530 --> 00:04:18.130
Yes.

47
00:04:18.130 --> 00:04:21.430
So we have to input a name for this Java project.

48
00:04:21.580 --> 00:04:31.420
So if suppose they want to name this project as like my music library.

49
00:04:31.540 --> 00:04:35.770
Perfect, so you can name your application anyway.

50
00:04:35.770 --> 00:04:42.130
But I like this name for my application, so I am naming this as my music library.

51
00:04:42.130 --> 00:04:50.380
So after hitting enter, a folder will be created in the desktop as I have selected that location for

52
00:04:50.380 --> 00:04:51.910
my project creation.

53
00:04:51.910 --> 00:04:59.320
So the folder will be created in the desktop only and after creation of that folder we will create files

54
00:04:59.320 --> 00:05:00.640
inside the folder.

55
00:05:00.640 --> 00:05:08.650
There will be some inbuilt files and folders inside this my music library folder which we are storing

56
00:05:08.650 --> 00:05:16.360
in desktop and similarly the folders we will create, all the files will be created, will stored in

57
00:05:16.360 --> 00:05:17.770
that location only.

58
00:05:17.770 --> 00:05:24.040
There will be no other locations where the files will be stored like any thing will not be stored in

59
00:05:24.040 --> 00:05:26.110
your C drive or anywhere else.

60
00:05:26.680 --> 00:05:31.900
This is a simple application with simple files, no complex files.

61
00:05:32.170 --> 00:05:37.660
So my music library will be the name of the folder now after hitting enter.

62
00:05:38.980 --> 00:05:41.990
And we are going to enter in our new Java project.

63
00:05:42.010 --> 00:05:44.380
So yes, we are here now.

64
00:05:44.380 --> 00:05:53.650
We have an empty page for our application which has some inbuilt folders like this dot disk which is

65
00:05:53.650 --> 00:05:55.990
due to the mercy of our compiler.

66
00:05:56.020 --> 00:06:04.210
Like these two folders are with the mercy of our compiler and the rest are due to the Java project which

67
00:06:04.210 --> 00:06:08.380
we have selected from this and click on Create Java Project.

68
00:06:08.380 --> 00:06:12.010
So these are the inbuilt folders and files.

69
00:06:12.010 --> 00:06:20.140
Like if we click inside this RC, we will see that there is an inbuilt file app, not Java, which contains

70
00:06:20.140 --> 00:06:26.530
a class called F, and this part will run whenever the app will do an exception.

71
00:06:26.950 --> 00:06:30.580
So you may be wondering what the exception is like.

72
00:06:30.580 --> 00:06:32.710
Why the Apple two exception?

73
00:06:32.710 --> 00:06:34.570
What is the reason behind it?

74
00:06:34.570 --> 00:06:38.470
So let me give you a quick look upon it.

75
00:06:38.590 --> 00:06:48.250
So suppose you are making the application and suppose there are some errors like some bugs in your application.

76
00:06:48.430 --> 00:06:59.410
So if the exception is seen by the compiler, it will throw the exception and will print this thing

77
00:06:59.410 --> 00:07:00.520
like it will print.

78
00:07:00.520 --> 00:07:07.510
Hello, this is the by default string which is created by the Java project itself.

79
00:07:07.510 --> 00:07:10.660
We can change it according to our convenience.

80
00:07:10.660 --> 00:07:18.640
So whenever the app will throw a runtime error, then this error will be displayed in your compiler

81
00:07:19.120 --> 00:07:26.650
compiler terminal and this will show that your app has some exceptions, like go and debug it and then

82
00:07:26.650 --> 00:07:28.720
try to run it once again.

83
00:07:29.080 --> 00:07:35.350
So checking exceptions are the most important thing while making a Java project.

84
00:07:35.770 --> 00:07:44.650
So yes, we are done with this app, the Java file which we have already present before, before starting

85
00:07:44.650 --> 00:07:45.160
the project.

86
00:07:45.160 --> 00:07:53.230
We are having these folders and we have this Abdul-Jabbar file as the inbuilt file in this application.

87
00:07:53.230 --> 00:07:53.950
So.

88
00:07:54.890 --> 00:07:55.380
Nice.

89
00:07:55.400 --> 00:07:59.850
Now we are here with our project.

90
00:07:59.870 --> 00:08:01.950
Now we have.

91
00:08:01.950 --> 00:08:03.990
We already made a prototype.

92
00:08:04.010 --> 00:08:07.610
You can see that we already made this prototype.

93
00:08:07.610 --> 00:08:13.040
And this will guide us that how to move forward while making this project.

94
00:08:14.620 --> 00:08:20.580
So firstly, let me zoom this for a better visibility of the viewers.

95
00:08:20.620 --> 00:08:26.050
So yes, we are done with creating our Java project in our IDE.

96
00:08:26.080 --> 00:08:34.960
Now in order to make to start making the application, we have to create classes and without classes

97
00:08:34.960 --> 00:08:36.880
there is nothing in Java.

98
00:08:37.090 --> 00:08:44.650
We have to create classes and then initialize constructors inside it, initialize functions inside it

99
00:08:44.650 --> 00:08:51.780
and then add the queries inside them so that we can make that function.

100
00:08:52.330 --> 00:09:00.070
So let us first create a file and call it song or Java.

101
00:09:00.820 --> 00:09:07.800
And by hitting it we are here in a new file which says Public Class Song.

102
00:09:07.810 --> 00:09:16.600
So this line means that we have created a class called Song and the access specifies say that this class

103
00:09:16.600 --> 00:09:17.530
is public.

104
00:09:17.530 --> 00:09:26.500
So this class is accessible by all the files in this app, and we can call it anywhere without getting

105
00:09:26.500 --> 00:09:31.910
any error and exception, like without using public.

106
00:09:31.930 --> 00:09:41.380
Suppose if we are using private then we have to set some like get and set methods in Java so that in

107
00:09:41.380 --> 00:09:50.080
order to access that class or anything like we can add public to any variable, any class, any function.

108
00:09:50.080 --> 00:09:57.940
So I am just explaining the concept behind these access specified, like what is the difference between

109
00:09:57.940 --> 00:10:01.150
creating a public class and a private class?

110
00:10:01.150 --> 00:10:07.780
So I hope you must have understood what is the difference between a public class and a private class.

111
00:10:08.170 --> 00:10:13.260
So we have went through the get set thing in our previous projects.

112
00:10:13.270 --> 00:10:22.420
You must go through them to understand the get set concepts now so that we have created this song class.

113
00:10:22.420 --> 00:10:30.970
Now we will try to add some song like song layout for the application.

114
00:10:31.060 --> 00:10:40.390
Like you can see that in the presentation section that we have a song and a place and Inside The Blaze

115
00:10:40.480 --> 00:10:49.780
we have title of the song as a string and duration of the song as a we can say that in a mathematical

116
00:10:49.780 --> 00:10:53.830
term it is like we call it decimal, I think yes.

117
00:10:53.830 --> 00:11:01.990
So the duration is as the form of decimal and the title is as the form of a string.

118
00:11:02.110 --> 00:11:12.190
So we have to create that thing inside this song class now initializing this class song with a string

119
00:11:12.970 --> 00:11:23.950
called it name of the song and the duration was decimal, so we have to initialize this as double.

120
00:11:24.070 --> 00:11:29.560
I hope you know the concept of load double in in Java.

121
00:11:30.220 --> 00:11:37.900
In order to learn how to make Java project, you must be aware with the basics of Java, the data types

122
00:11:37.900 --> 00:11:43.540
involved in Java and double is a very popular data type in Java.

123
00:11:43.990 --> 00:11:50.950
So yes, this double is containing the duration of the song and.

124
00:11:51.770 --> 00:11:56.870
We are done with both the components inside the song class.

125
00:11:57.260 --> 00:12:02.360
Now we have to call it Inside the constructor.

126
00:12:02.900 --> 00:12:04.370
Public song.

127
00:12:05.400 --> 00:12:10.200
Not a constructor, but a class functions public song.

128
00:12:10.320 --> 00:12:15.870
So inside the song function, we have to pass two arguments.

129
00:12:16.020 --> 00:12:25.170
Like whenever this function will be called, it will come up with two arguments, one as the string.

130
00:12:25.620 --> 00:12:28.680
So yes, let us name this as title.

131
00:12:28.680 --> 00:12:36.390
It will look more involving like the song has a title and or duration.

132
00:12:37.290 --> 00:12:43.080
So the arguments are passed successfully for the song class.

133
00:12:43.860 --> 00:12:52.410
For the song song function, we have created this song class inside which we have two objects.

134
00:12:52.410 --> 00:12:54.210
A class contains object.

135
00:12:54.210 --> 00:13:04.350
So this title and duration are the real world entities, or in one word we call it as the objects.

136
00:13:04.350 --> 00:13:09.540
So they have two objects and the function has arguments.

137
00:13:09.540 --> 00:13:14.520
Yes, the function consists of arguments and variables.

138
00:13:14.880 --> 00:13:23.220
So we have created the function and inside we are calling the title object using this keyword.

139
00:13:23.580 --> 00:13:28.770
This keyword used to access the objects of any class.

140
00:13:30.540 --> 00:13:39.720
And similarly for this thought duration, the dot is used to call the methods.

141
00:13:40.830 --> 00:13:47.010
This is also one of the basic concepts of learning the language Java.

142
00:13:48.570 --> 00:13:54.870
So we have called both of the objects inside this function.

143
00:13:55.020 --> 00:13:59.190
Now let me create an empty constructor.

144
00:14:00.870 --> 00:14:08.790
Currently we are not going to use this constructor, but in later, later in this project while making

145
00:14:08.790 --> 00:14:09.480
this project.

146
00:14:09.480 --> 00:14:17.790
Suppose if we will need this, then we are going to use this now after the creation of the class, the

147
00:14:17.790 --> 00:14:20.190
function and the constructor.

148
00:14:20.190 --> 00:14:30.360
Now moving forward in this song class we have to create to get title and get duration function.

149
00:14:30.360 --> 00:14:39.810
In order to return the title and the duration, we have created the title and duration inside the public

150
00:14:39.810 --> 00:14:40.380
class.

151
00:14:40.380 --> 00:14:49.680
But still to avoid any kind of exception, we are going to get them using the get method in Java, so

152
00:14:49.680 --> 00:14:53.040
we are going to see that stuff in the next part.

153
00:14:53.040 --> 00:14:54.840
So see you in the next part.
