1
00:00:00,270 --> 00:00:08,490
And so as far as we have covered everything about the download manager class, the Progress Renderer

2
00:00:08,490 --> 00:00:11,570
class and the download table model class.

3
00:00:11,580 --> 00:00:21,810
Now the last class which is going to like compile up everything is download dot java which is going

4
00:00:21,810 --> 00:00:24,590
to create a class called download.

5
00:00:24,600 --> 00:00:32,940
And inside this download class we are going to like initialize all the objects which are going to require

6
00:00:32,940 --> 00:00:41,340
like suppose whether it be the size of the download buffer, whether it be the status names like downloading,

7
00:00:41,340 --> 00:00:44,180
post, complete cancel or error.

8
00:00:44,190 --> 00:00:54,000
So we are going to like initialize all the statuses, size and everything which are going to be required

9
00:00:54,000 --> 00:00:54,870
inside it.

10
00:00:55,530 --> 00:01:01,590
So yes, this is the like packages required to be imported.

11
00:01:01,590 --> 00:01:04,320
Inside this download class.

12
00:01:04,320 --> 00:01:13,440
We are going to extend this download class to observable and this is going to implement renewable inside

13
00:01:13,440 --> 00:01:22,710
this suppose whenever or like table is concerned a specific column is concerned then status is going

14
00:01:22,710 --> 00:01:27,090
to display whether downloading was complete, canceled or error.

15
00:01:27,090 --> 00:01:38,250
So this is statuses is an error here containing five elements and the maximum buffer size for a specific

16
00:01:38,400 --> 00:01:40,560
download is one 0 to 4.

17
00:01:40,590 --> 00:01:42,930
After this it will be like convert.

18
00:01:43,050 --> 00:01:52,490
Suppose that we are showing the size as a one for MVP, so once the buffer size is completing one 0

19
00:01:52,490 --> 00:02:01,650
to 4 KB, we are showing the size in K.B., not the site size, the spreading, maybe the size that

20
00:02:01,650 --> 00:02:02,480
is in MP.

21
00:02:02,490 --> 00:02:11,010
So suppose one 0 to 4 and B is covered, then automatically the size is going to be increased by one.

22
00:02:11,010 --> 00:02:20,070
So if it was for me, then it is going to be converted to five and it is displayed as the full float.

23
00:02:21,140 --> 00:02:21,740
No.

24
00:02:21,770 --> 00:02:28,070
The rest of the objects which are required inside this is your size.

25
00:02:28,070 --> 00:02:34,600
Download it so all the members of the Yes we have declared this area.

26
00:02:34,700 --> 00:02:40,730
So all the members of the array are declared as private global variables.

27
00:02:40,730 --> 00:02:50,090
Inside this download class and I have added command to like signify what actually this declaration is

28
00:02:50,090 --> 00:02:50,780
about.

29
00:02:50,780 --> 00:02:55,910
We have declared everything globally in order to use later in this class.

30
00:02:55,910 --> 00:03:01,610
Now the next part we are going to see is a constructor for the download.

31
00:03:01,610 --> 00:03:05,120
So we have created this download constructor.

32
00:03:05,150 --> 00:03:08,270
This is you use to access the URL.

33
00:03:08,300 --> 00:03:10,160
We have declared the URL here.

34
00:03:10,160 --> 00:03:19,340
So firstly we are accessing the URL, decreasing the size by like we have set the size initially minus

35
00:03:19,340 --> 00:03:19,820
one.

36
00:03:19,820 --> 00:03:25,220
So once the you are added, the index is starting from zero.

37
00:03:25,220 --> 00:03:32,360
So we have said the size of minus one in the beginning, after which we have set the downloaded to zero

38
00:03:32,360 --> 00:03:40,880
in the beginning as there are zero downloaded files in the beginning, the status is set to downloading

39
00:03:40,880 --> 00:03:41,810
by default.

40
00:03:42,020 --> 00:03:49,520
Otherwise, if any kind of changes or updates occur, then the status will be updated to weather error.

41
00:03:50,390 --> 00:03:56,300
Initially, only downloading is going to be displayed if the successful download has started.

42
00:03:57,290 --> 00:04:05,300
So inside this download class we have like declared everything the constructor is complete.

43
00:04:05,300 --> 00:04:10,730
Now to begin the download we have called this download function.

44
00:04:10,940 --> 00:04:13,690
So yes, this is like this.

45
00:04:13,720 --> 00:04:18,590
Now the next part is to get everything declared here.

46
00:04:18,770 --> 00:04:27,170
We have to get all the variables as we have the like declared it as private.

47
00:04:27,170 --> 00:04:35,930
So in order to access this in other classes of like the download manager weather or the download table

48
00:04:35,930 --> 00:04:45,380
model, if wishes to access the these objects of this download class, then we have to use get method

49
00:04:45,380 --> 00:04:50,150
in Java in order to make these things accessible.

50
00:04:50,240 --> 00:04:59,180
So yes, we will be setting get method for the you are then the size, the speed, the average speed

51
00:04:59,180 --> 00:05:01,790
and all of the columns here.

52
00:05:03,730 --> 00:05:04,140
Okay.

53
00:05:04,180 --> 00:05:12,200
So we have a code of function for getting all the column names like you ordered size, speed, average

54
00:05:12,220 --> 00:05:14,620
speed, elapsed time remaining time.

55
00:05:14,620 --> 00:05:23,500
And with the help of this, we will be able to access all of them as like accessible variable.

56
00:05:24,070 --> 00:05:26,980
This global variable is set to private.

57
00:05:26,980 --> 00:05:35,200
So with the help of this method, we will be able to access all of them in any of the classes except

58
00:05:35,200 --> 00:05:42,390
of this download class now so that we have used get method to access all of them.

59
00:05:42,400 --> 00:05:52,060
Now our next concern is to like set the time how the format of time is going to be displayed.

60
00:05:52,570 --> 00:05:55,600
We have two time column names.

61
00:05:55,690 --> 00:06:03,040
They are remaining time and elapsed time and we are going to set our format in the form of a string

62
00:06:03,040 --> 00:06:04,060
basically.

63
00:06:04,060 --> 00:06:08,740
So the four time format is going to be displayed in the form of string.

64
00:06:08,740 --> 00:06:17,390
So we are using like access pacifier, we have a like integer, so we are converting that integer to

65
00:06:17,390 --> 00:06:19,450
a string or we can call it long.

66
00:06:19,450 --> 00:06:24,520
Also long is a large version of an integer, nothing else.

67
00:06:24,850 --> 00:06:29,110
So the time is showing in hours, minutes and seconds.

68
00:06:29,110 --> 00:06:39,850
So we are multiplying the hours by 33600, the minutes by 60 and simply in like putting the seconds

69
00:06:39,850 --> 00:06:40,630
directly.

70
00:06:40,930 --> 00:06:46,690
So this is for formatting the time for both the remaining time and the elapse time.

71
00:06:46,690 --> 00:06:54,400
Now after this, to get the download progress, we are multiplying the size by 100.

72
00:06:54,400 --> 00:07:02,740
Like suppose the total size is suppose for 500 and we have downloaded hundred.

73
00:07:02,920 --> 00:07:10,000
So we are going to like put up things like 100 divided by 500 in 200.

74
00:07:10,000 --> 00:07:12,970
So it is going to be okay.

75
00:07:12,970 --> 00:07:17,230
So it is going to be one by five and one by five.

76
00:07:17,230 --> 00:07:22,210
If converted in the form of decimal, then it is 20%.

77
00:07:22,570 --> 00:07:26,740
So 20% progress bar will display.

78
00:07:27,400 --> 00:07:36,070
Everything is like sort of mathematically how the percent will be displayed, how the time will be displayed.

79
00:07:36,070 --> 00:07:44,770
So as everything is written in a calculated manner now for us, like changing the status, like pausing,

80
00:07:44,770 --> 00:07:52,930
resuming, cancelling a specific download, we are setting a specified functions for both.

81
00:07:52,930 --> 00:07:55,040
What happens if we click on the pause?

82
00:07:55,270 --> 00:08:02,140
Then the previous elapsed time will be equal to the elapsed time like everything should be freeze.

83
00:08:02,170 --> 00:08:09,760
The elapsed time should not increase and the status which is already set to download in the beginning

84
00:08:09,790 --> 00:08:14,830
is to be set as Paul and the stage change function is called.

85
00:08:15,010 --> 00:08:23,200
Similarly, for the resume, the status is again, if said to pause, then it will be changed to downloading.

86
00:08:23,800 --> 00:08:29,380
If we can sell any download, then previous elapsed time will be again equal to the elapsed time.

87
00:08:29,620 --> 00:08:36,160
There will be no increase in the elapsed time again and the rest of the things will be remain same and

88
00:08:36,160 --> 00:08:40,070
the status will be just updated from downloading to cancelled.

89
00:08:41,230 --> 00:08:43,330
Okay, so what happens if.

90
00:08:44,150 --> 00:08:46,460
The previous elapsed time is.

91
00:08:47,320 --> 00:08:47,730
Yes.

92
00:08:47,730 --> 00:08:55,390
So if there is an error, so the previous elapse time is going to change to previous elapsed time and

93
00:08:55,390 --> 00:08:58,030
the status will be displaying error.

94
00:08:58,030 --> 00:09:01,960
And again, the set change function is going to stay.

95
00:09:01,960 --> 00:09:07,240
Change function is going to be called start or resuming the download again.

96
00:09:07,240 --> 00:09:14,350
Suppose if the download is paused and we have to again resume so the resume function is going to like

97
00:09:14,350 --> 00:09:15,760
create a thread.

98
00:09:15,790 --> 00:09:20,110
A thread is a group of processes taking place.

99
00:09:20,110 --> 00:09:24,430
So suppose our process has completed to 20%.

100
00:09:24,430 --> 00:09:32,110
Then once we will resume it, it will again start from 21% and it is going to be like a thread.

101
00:09:32,110 --> 00:09:34,240
Nothing will be like broken.

102
00:09:34,270 --> 00:09:37,990
The download will not again start from the previous state.

103
00:09:37,990 --> 00:09:42,430
It will simply like download from the where it was paused.

104
00:09:43,430 --> 00:09:45,740
Now after the like.

105
00:09:45,740 --> 00:09:53,840
Every checking we have marked the download error thing, we have talked about resuming the download.

106
00:09:53,870 --> 00:09:56,260
Now what about the URL part?

107
00:09:56,390 --> 00:10:05,090
So the you are part is going to be displayed in the form of string and how to check the validation.

108
00:10:05,090 --> 00:10:14,240
Suppose that there is some like invalid invalidity error inside the link the URL.

109
00:10:14,270 --> 00:10:22,040
Then are you as to pay your url connection part is going to throw an exception.

110
00:10:22,790 --> 00:10:26,400
Suppose the download started and there is some error.

111
00:10:26,420 --> 00:10:29,440
Then the catch block will be executed.

112
00:10:29,450 --> 00:10:37,550
Otherwise this try will be like checking that if the connection is checked properly, the bytes are

113
00:10:37,550 --> 00:10:38,180
correct.

114
00:10:38,180 --> 00:10:39,730
Everything is connected.

115
00:10:39,800 --> 00:10:48,320
The download manager is connected to the server from where the download is to be taken place and make

116
00:10:48,320 --> 00:10:53,720
sure making sure that the connection is made in the range of 200.

117
00:10:53,720 --> 00:10:57,830
So this is basically the network bandwidth terms.

118
00:10:57,830 --> 00:11:06,950
We have to make the connections successfully in order to make the download take place correctly and

119
00:11:07,580 --> 00:11:10,430
the content length should be less than one.

120
00:11:10,430 --> 00:11:17,990
Then it should throw an error, so we should at least contain one URL in order to start the downloading

121
00:11:17,990 --> 00:11:18,830
process.

122
00:11:18,980 --> 00:11:23,720
So yes, this is about the validation of the URL part after this.

123
00:11:24,410 --> 00:11:28,400
Now after this, we have to like change the size.

124
00:11:28,400 --> 00:11:30,590
Accordingly, the progress is made.

125
00:11:30,590 --> 00:11:41,570
Suppose that 220% of the download is complete, then the size should change accordingly that this size

126
00:11:41,570 --> 00:11:42,890
is a flag.

127
00:11:42,890 --> 00:11:45,740
We have to multiply the progress according to that.

128
00:11:46,370 --> 00:11:54,920
In the order of streaming any download, we are connecting things to like making connections between

129
00:11:54,920 --> 00:11:57,530
the server and the download manager window.

130
00:11:57,530 --> 00:12:00,770
Then we have to make like streaming thing.

131
00:12:01,340 --> 00:12:10,400
We have to make like check that whether the size do not increase the maximum buffer size that is above

132
00:12:10,400 --> 00:12:14,120
our size, these all are like computer network things.

133
00:12:14,210 --> 00:12:22,250
If you have studied computer networks, you must have been hard about these terms that how downloading,

134
00:12:22,250 --> 00:12:28,070
buffering, like everything goes hand in hand in networking.

135
00:12:28,280 --> 00:12:38,960
We have a time for every bit, every byte transition transmissions from the server to our system.

136
00:12:39,260 --> 00:12:42,710
So that is going to be updated in that manner.

137
00:12:43,190 --> 00:12:48,320
Buffering is taking place, so the download will be made in that manner.

138
00:12:48,400 --> 00:12:50,900
Suppose 20% is complete.

139
00:12:50,900 --> 00:12:57,860
Then the download manager will send a message to the server that we are completed 20%.

140
00:12:57,890 --> 00:13:05,180
Now, if the user hits the pause button by selecting that specific row, then the download manager should

141
00:13:05,270 --> 00:13:09,890
send a message to the server that stops sending the file.

142
00:13:10,280 --> 00:13:18,500
The user has paused, so once the user will resume that I will inform you server, then only you can

143
00:13:18,500 --> 00:13:24,040
start sending me bytes and the streaming should like resume from that time.

144
00:13:24,410 --> 00:13:28,820
After this we are going to like check the status.

145
00:13:29,090 --> 00:13:33,050
So the status is also going to update it in similar way.

146
00:13:33,080 --> 00:13:36,010
We are changing the pausing and resuming thing.

147
00:13:36,110 --> 00:13:44,000
We have to like notify the server also that currently we are downloading, we are complete, then we

148
00:13:44,000 --> 00:13:45,890
have to change the steps.

149
00:13:45,890 --> 00:13:55,100
So after this, once the download is complete, then we have to cut the connection from the server.

150
00:13:55,130 --> 00:13:55,930
That way.

151
00:13:55,940 --> 00:13:58,910
Yes, we are done with the download part now.

152
00:13:58,910 --> 00:14:01,220
We are nothing to do with the server.

153
00:14:01,220 --> 00:14:07,520
So connection is stopped and the download is like downloaded to your system.

154
00:14:07,520 --> 00:14:15,620
You can check it whether it is downloaded inside your desktop or whether whatever the location is.

155
00:14:15,620 --> 00:14:19,070
So yes, this is all about this.

156
00:14:19,520 --> 00:14:25,220
Now we will try running that, whether everything is working correctly or not.

157
00:14:25,220 --> 00:14:31,460
So for this we have to connect to network first and then check the downloading part.

158
00:14:32,970 --> 00:14:40,980
So let's try running this download manager dot java class to check whether everything is working fine

159
00:14:40,980 --> 00:14:41,730
or not.

160
00:14:41,850 --> 00:14:44,250
So hitting on this run button.

161
00:14:45,200 --> 00:14:46,880
The new window will open.

162
00:14:47,360 --> 00:14:50,960
Yes, it is working perfectly fine.

163
00:14:51,050 --> 00:14:54,510
We have a frame panels inside the frame.

164
00:14:54,530 --> 00:14:57,110
Now let us try pasting a link.

165
00:14:57,290 --> 00:14:59,630
This is a static control.

166
00:14:59,660 --> 00:15:04,290
You are controlling so the link validation will work fine.

167
00:15:04,310 --> 00:15:06,140
Now hitting a yes.

168
00:15:06,140 --> 00:15:11,450
So the is showing in the string format the size, the progress.

169
00:15:11,450 --> 00:15:16,700
And once the progress is completed, the status is updated to complete.

170
00:15:16,730 --> 00:15:20,810
Now also check that whether the play pause button is working or not.

171
00:15:20,810 --> 00:15:25,820
So selecting a specific row, pausing this row and then yes.

172
00:15:25,820 --> 00:15:32,060
So button highlight is also working fine now resuming the download now pausing again.

173
00:15:32,060 --> 00:15:37,220
Let us try to cancel this and the status is updated to cancel.

174
00:15:37,250 --> 00:15:38,420
After this.

175
00:15:38,420 --> 00:15:41,660
On clearing the row size is decreased by one.

176
00:15:41,660 --> 00:15:44,660
So yes, everything is working perfectly fine.

177
00:15:44,680 --> 00:15:48,620
Till now we have covered everything in this download manager.

178
00:15:49,430 --> 00:15:49,970
Yes.

179
00:15:49,970 --> 00:15:58,460
So all the classes are doing a special function containing a special functionality and everything is

180
00:15:58,460 --> 00:16:01,220
like working in a proper way.

181
00:16:01,370 --> 00:16:09,530
So I hope that you have gained more concepts about Java after the completion of this project.

182
00:16:09,530 --> 00:16:17,330
Now try making this project on your own and practice all the concepts we have discussed in this tutorial.

183
00:16:17,330 --> 00:16:25,820
And I hope after completing the project on your own, you will be an experienced Java project programmer

184
00:16:25,850 --> 00:16:27,200
at the end.

185
00:16:27,200 --> 00:16:35,660
So I am wishing you all the best for making and practicing this project and thanking you all for joining

186
00:16:35,660 --> 00:16:36,500
this session.
