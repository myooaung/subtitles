1
00:00:00,680 --> 00:00:09,560
So in the previous part we have covered the conditions of player X winning the game and in total there

2
00:00:09,560 --> 00:00:17,240
are eight statements with some queries inside it and showing that these are the conditions for making

3
00:00:17,240 --> 00:00:24,200
the player excellent now or what are the total like combinations of making a player win.

4
00:00:24,200 --> 00:00:30,740
So there are total this 333384x and 840.

5
00:00:30,830 --> 00:00:42,020
So total we have to cover 16 statements in order to check that if a specific player wins the game or

6
00:00:42,020 --> 00:00:42,650
not.

7
00:00:43,100 --> 00:00:47,600
So for checking that if player zero wins.

8
00:00:47,600 --> 00:00:55,700
So these are the LCF statements inside which we have written the similar combinations like one, two,

9
00:00:55,700 --> 00:00:59,750
three, four, five, six, seven, eight, nine and

10
00:00:59,900 --> 00:01:06,740
1472581599357

11
00:01:07,220 --> 00:01:10,190
and at last or else if nine.

12
00:01:10,190 --> 00:01:13,100
So there is an additional condition.

13
00:01:13,130 --> 00:01:20,840
We will come to this later for still, let's take a look at this combination that totals 16 combination

14
00:01:20,840 --> 00:01:22,250
we were talking about.

15
00:01:22,250 --> 00:01:28,850
So there are similar rules for player X winning as we are for the player or winning.

16
00:01:28,850 --> 00:01:33,050
So we have similar combinations for both of the players.

17
00:01:33,050 --> 00:01:41,480
So inside conditions are also same just in the matter of fact that for player or winning we are updating

18
00:01:41,480 --> 00:01:49,040
the account to plus one and for player x winning we are updating x count two plus one.

19
00:01:49,280 --> 00:01:52,370
So you can see there are two blocks.

20
00:01:52,430 --> 00:01:55,910
This is for the X count and this is for the account.

21
00:01:55,910 --> 00:02:03,230
And if the player x wins, we are updating the scores head and if excellence then we are updating the

22
00:02:03,260 --> 00:02:04,940
scores above.

23
00:02:04,940 --> 00:02:13,100
So this is the only difference in these two stops like player X winning and player or winning.

24
00:02:13,710 --> 00:02:20,880
And there are no other like a visible difference I can see between these two functions.

25
00:02:20,880 --> 00:02:30,570
So yes, we have covered all the possible conditions for making the player wins and at last, like we

26
00:02:30,570 --> 00:02:37,290
have already showed the message, we have talked about the dialog box thing and everything we have already

27
00:02:37,290 --> 00:02:37,860
discussed.

28
00:02:38,460 --> 00:02:47,130
So we have a 3 to 3 grid and there should be nine possible combinations and we are talking about only

29
00:02:47,130 --> 00:02:51,660
eight combinations, four X winning and eight combinations for player or winning.

30
00:02:51,660 --> 00:03:02,730
So the one condition which is left in both the players chances is this case in which, like I said,

31
00:03:02,730 --> 00:03:10,050
two nine and what is ie nine like that all the blocks are filled and no player wins.

32
00:03:10,050 --> 00:03:13,950
Initially we have set it to zero and one by one.

33
00:03:13,950 --> 00:03:19,290
If the blocks are started filling then I is updated like I.

34
00:03:19,290 --> 00:03:23,040
If this block fails, I will be updated to one.

35
00:03:23,040 --> 00:03:27,630
If this fails, I will be updated to two and total of nine.

36
00:03:27,780 --> 00:03:36,360
So if suppose all the nine blocks failed and none of the possible combination above mentioned here did

37
00:03:36,360 --> 00:03:39,840
not arrive, then what is going to happen?

38
00:03:40,290 --> 00:03:46,710
So if I becomes nine n none of the possible cases above mentioned paradigm.

39
00:03:46,860 --> 00:03:54,270
So the dialog box will appear and see no one wins and this will be going to the heading of the like

40
00:03:54,690 --> 00:03:57,590
I am talking about this now.

41
00:03:57,930 --> 00:04:02,670
We have we have already discussed it in the introduction part.

42
00:04:03,240 --> 00:04:09,250
A similar dialog box will appear this way showing that no one wins with okay.

43
00:04:09,480 --> 00:04:13,590
But then when we click the okay button, the game will be reset.

44
00:04:13,950 --> 00:04:15,030
So yes.

45
00:04:15,730 --> 00:04:26,920
So this is although like 18 conditions by far eight eight common in both and like eight eight all zero

46
00:04:26,920 --> 00:04:34,830
and one X meaning and the two conditions common in both the flip player winning is if I becomes nine.

47
00:04:34,840 --> 00:04:36,640
So this is common.

48
00:04:36,640 --> 00:04:41,440
So there are total nine plus 918 conditions covered by far.

49
00:04:41,470 --> 00:04:45,580
Now this thing is, I think, completed.

50
00:04:45,580 --> 00:04:50,670
So we have checked the functionalities of making a specific plan.

51
00:04:51,160 --> 00:05:00,850
Now in the next part, we are going to set a function for choosing the player like this function's name

52
00:05:00,850 --> 00:05:04,390
is going to be choose player and.

53
00:05:05,890 --> 00:05:12,280
If there is a if statement inside this start game.

54
00:05:13,840 --> 00:05:17,920
So the starting of game equals signal.

55
00:05:19,620 --> 00:05:21,450
Equals ignored kids.

56
00:05:21,990 --> 00:05:28,410
So basically X and O are high uppercase alphabets only.

57
00:05:28,590 --> 00:05:33,150
There are nothing special in the symbols.

58
00:05:33,360 --> 00:05:38,400
So the start game should be small.

59
00:05:38,790 --> 00:05:49,380
So inside this if statement, if the starting case is X, then start and the next player should be zero.

60
00:05:49,980 --> 00:05:57,920
So start game should be set to zero or whatever we say it.

61
00:05:57,960 --> 00:06:02,880
And if there is else, there is will be notes, of course.

62
00:06:03,000 --> 00:06:07,440
So inside there, if the game is started.

63
00:06:07,440 --> 00:06:16,890
So I am going to copy the same stuff for this cells and we'll paste it here and set this or to x.

64
00:06:17,010 --> 00:06:20,100
So this part is covering that.

65
00:06:20,100 --> 00:06:23,010
Suppose the player X is starting the game.

66
00:06:23,220 --> 00:06:26,700
So the next chance will be transferred to zero.

67
00:06:26,700 --> 00:06:34,490
And if this is not happening, then the next chance will be given to X.

68
00:06:34,500 --> 00:06:39,870
Of course the zero is starting the game so the next chance should be given to x only.

69
00:06:40,620 --> 00:06:49,290
So we have covered by far all the winning cases like launching the application and choosing the player.

70
00:06:49,590 --> 00:06:57,390
Now our next concern is going to be like initializing the contents inside the frame.

71
00:06:57,730 --> 00:07:04,180
Like you can see that this is our frame and we have to initialize contents inside the frame.

72
00:07:04,200 --> 00:07:11,160
You can see that there is a grid layout thing which has five in a row, one three in a column, and

73
00:07:11,160 --> 00:07:22,110
there are total 15 blocks, all like a banner title bar and two buttons, three set energy and two scoreboards

74
00:07:22,110 --> 00:07:24,660
for Player X and zero respectively.

75
00:07:25,500 --> 00:07:34,950
So now that we have a dedicated function for initializing the contents inside the frame, we have used

76
00:07:34,950 --> 00:07:40,970
this initialize header also and I told you that we will be looking to it later.

77
00:07:40,980 --> 00:07:44,640
So this is responsible for launching of the application.

78
00:07:44,640 --> 00:07:51,650
Like this application will open and after opening what is going to be consisted inside the frame.

79
00:07:51,660 --> 00:07:55,850
So yes, this is going to be consistent inside the frame.

80
00:07:55,860 --> 00:08:02,400
We have a frame with the mercy of frame component of the swing library.

81
00:08:02,400 --> 00:08:08,130
And this is going to give us a new frame of this dimension.

82
00:08:08,490 --> 00:08:20,220
This is the like length, width, height, and like all the four sides of the frame are responsible

83
00:08:20,220 --> 00:08:28,500
by this line, after which we have our default close operation attached to the frame.

84
00:08:29,070 --> 00:08:36,930
We can exit the frame and that will be responsible for escaping the window in which the app is opening.

85
00:08:37,050 --> 00:08:46,980
We have a great content space and the layout is set to zero, so let us try to check that whether the

86
00:08:46,980 --> 00:08:49,770
frame is correctly opening or not.

87
00:08:50,440 --> 00:08:52,120
So perfect.

88
00:08:52,150 --> 00:08:54,600
We have a picture frame.

89
00:08:54,610 --> 00:08:59,200
We have like this pane I was talking about.

90
00:08:59,200 --> 00:09:01,180
This was the pane.

91
00:09:01,180 --> 00:09:08,410
We have a heading pane and there is a frame of this dimension we have already discussed.

92
00:09:08,680 --> 00:09:11,380
So we have already created our frame.

93
00:09:11,380 --> 00:09:12,790
So congratulations.

94
00:09:12,820 --> 00:09:19,930
Now we will be setting up 15 lightweight layout blocks, two buttons and two scoreboards.

95
00:09:19,930 --> 00:09:22,800
So let's look towards it.

96
00:09:22,830 --> 00:09:25,750
But what are required after this?

97
00:09:25,750 --> 00:09:32,770
So after the creation of Frame, we are going to create the contents of the panel.

98
00:09:32,860 --> 00:09:34,510
So we have a frame.

99
00:09:34,510 --> 00:09:40,480
And inside the frame we have a panel which is going to consist the grid layout.

100
00:09:40,930 --> 00:09:46,480
So to initialize the things with the panel, we are going to.

101
00:09:46,990 --> 00:09:50,650
So these two are the functionalities of panel.

102
00:09:50,680 --> 00:10:00,400
We are going to like create inside the frame and the panel is going to contain a grid layout of a three

103
00:10:00,400 --> 00:10:09,730
by five, and then the width of the body is going to be two by two, after which the panel is going

104
00:10:09,730 --> 00:10:14,860
to contain a border layout line border like you can see that here.

105
00:10:15,280 --> 00:10:22,540
So I'm going to run this part and show you what is actually happening inside the frame.

106
00:10:23,580 --> 00:10:25,310
So it's perfect.

107
00:10:25,320 --> 00:10:33,830
The panel is created and we have a five by three divisions which we are going to cover later.

108
00:10:33,840 --> 00:10:41,640
So by far we have created a panel inside the frame and after which we are going to add more functionalities

109
00:10:41,640 --> 00:10:42,870
inside the frame.

110
00:10:43,650 --> 00:10:53,010
So after setting the like dimensions for the panel, now we are setting a button for for the button

111
00:10:53,010 --> 00:10:53,760
first.

112
00:10:53,760 --> 00:10:59,880
And that button is going to be like an action performing button.

113
00:10:59,880 --> 00:11:07,830
There is an action listener attached with that button and an event is going to be performed on clicking

114
00:11:07,830 --> 00:11:08,850
that button.

115
00:11:09,120 --> 00:11:12,690
So we have a set that text to start game.

116
00:11:12,840 --> 00:11:19,800
So if start game equals ignore X, then button set foreground color to red.

117
00:11:19,800 --> 00:11:26,640
So this first block is responsible for the first chance we are playing.

118
00:11:26,640 --> 00:11:28,670
So suppose the first.

119
00:11:29,190 --> 00:11:37,650
We are trying to play the chance by X, so we will click here and the first chance will be played.

120
00:11:38,280 --> 00:11:41,610
We are going to check this by turning the program also.

121
00:11:41,760 --> 00:11:51,480
So let's go and try running Java for this class and check that whether it is working or not so perfect.

122
00:11:51,510 --> 00:12:00,270
We have set the background for our first panel and we have also set a button like an action listener

123
00:12:00,270 --> 00:12:06,090
button which is responsible for playing the first chance by default to X.

124
00:12:06,120 --> 00:12:11,160
So and we have set the color like text font, font color, we will see it.

125
00:12:11,250 --> 00:12:15,210
Firstly, check it that if it is working or not actually.

126
00:12:15,300 --> 00:12:16,740
So yes, perfect.

127
00:12:16,740 --> 00:12:26,370
We have set this button to a working button which is an event attached to it and the button is listening

128
00:12:26,370 --> 00:12:30,990
to the actions attached with the event of that specific thing.

129
00:12:30,990 --> 00:12:33,030
So we have checked it.

130
00:12:33,030 --> 00:12:37,980
Now we will go back to the program and look at the functionality.

131
00:12:38,250 --> 00:12:42,060
So yes, this was the button thing.

132
00:12:43,350 --> 00:12:53,040
We have set the button colour to read the background colour of the panel to blue and the action attached

133
00:12:53,050 --> 00:13:03,270
with the button is that suppose if we click that button then our x symbol should appear in that block

134
00:13:03,270 --> 00:13:06,160
of the grid layout thing.

135
00:13:06,180 --> 00:13:09,900
So yes, we have done this for the first panel.

136
00:13:09,900 --> 00:13:13,320
Now we will be doing this for other nine.

137
00:13:13,320 --> 00:13:16,950
Like we have total 15 blocks in the grid layout.

138
00:13:16,950 --> 00:13:21,150
So we have to like set everything for every button.

139
00:13:21,150 --> 00:13:28,590
Like we have a separate input covering inside every button so that nine nine, like three three grid

140
00:13:28,590 --> 00:13:32,340
layout is going to consist the Xs and zeros.

141
00:13:32,340 --> 00:13:40,350
The four blocks are going to be responsible for storing the scores of the both the players and the next

142
00:13:40,350 --> 00:13:45,110
two buttons are going to contain, reset and exit buttons.

143
00:13:45,150 --> 00:13:45,570
Yes.
