WEBVTT
1
00:00:00.930 --> 00:00:07.620
So in the last part, we have created the schedule plus inside the schedule plus all of the components

2
00:00:07.620 --> 00:00:09.990
inside this frame was enclosed.

3
00:00:10.020 --> 00:00:16.620
You can see we have enclosed all the buttons, the text field for the how many, and we have enclosed

4
00:00:16.620 --> 00:00:23.400
the number of text inside the ArrayList and we have set action is not for this AMPM and this continue

5
00:00:23.400 --> 00:00:31.680
button also now as also we have added the time set checking function in a form of our list.

6
00:00:31.680 --> 00:00:38.610
So this time is being stored in the form of ArrayList and according to it it is changing its structure,

7
00:00:38.610 --> 00:00:40.960
whether it is the daytime or the nighttime.

8
00:00:41.220 --> 00:00:48.090
Also, yes, this is all about basically it is converting the integer our type of time and put in the

9
00:00:48.090 --> 00:00:54.510
string type of time input with the help of two string function as everything we have to return in a

10
00:00:54.510 --> 00:00:55.320
string format.

11
00:00:55.320 --> 00:00:59.700
Inside that list, we have created the list as a string type.

12
00:00:59.700 --> 00:01:02.610
So yes, this was all about the schedule class.

13
00:01:02.640 --> 00:01:07.230
Now moving forward in this part, we will be creating this help page.

14
00:01:07.650 --> 00:01:14.430
It will be containing three questions are back to home button and this frame is going to contain text

15
00:01:14.430 --> 00:01:14.670
field.

16
00:01:14.680 --> 00:01:18.330
So we will be adding labels for the fields.

17
00:01:18.330 --> 00:01:22.860
These three questions and a button for this back to home button.

18
00:01:22.860 --> 00:01:26.310
So let us move forward in creating this.

19
00:01:26.640 --> 00:01:31.530
So inside the CRC folder, we are going to create a new file.

20
00:01:32.310 --> 00:01:37.470
And name it as help dot java as this is going to be the health page.

21
00:01:38.310 --> 00:01:41.190
So a public class help is created.

22
00:01:41.220 --> 00:01:44.380
Now, again, extending it does depend on.

23
00:01:45.690 --> 00:01:49.320
We have done it a multiple number of times.

24
00:01:49.710 --> 00:01:58.740
So, yes, inside this health class, we are going to again import the base as object.

25
00:01:58.740 --> 00:02:00.030
So base.

26
00:02:00.990 --> 00:02:01.670
Yes.

27
00:02:01.680 --> 00:02:04.800
And the next thing is the font.

28
00:02:05.220 --> 00:02:09.720
So we have to set up font for the question and answer.

29
00:02:09.930 --> 00:02:14.970
So a Q font both should look different to each other.

30
00:02:14.970 --> 00:02:19.350
So a separate font is masked for the question and answer.

31
00:02:19.530 --> 00:02:21.630
So Q font any font.

32
00:02:22.020 --> 00:02:24.810
And the third thing is going to be the labels.

33
00:02:24.810 --> 00:02:28.770
So here we are having six total labels.

34
00:02:28.770 --> 00:02:35.070
So our label for Q one, Kyoto three and A 1 to 3.

35
00:02:35.100 --> 00:02:38.210
And you can see there are three questions and the answers.

36
00:02:38.250 --> 00:02:41.940
So in total, we will require six panels.

37
00:02:42.480 --> 00:02:44.340
So writing it as.

38
00:02:44.340 --> 00:02:51.710
Q One, two, two, two, three and a1828.

39
00:02:52.830 --> 00:02:55.110
So this is the label.

40
00:02:55.200 --> 00:02:58.950
Now let us create the constructor.

41
00:02:59.370 --> 00:03:03.270
Public health base be.

42
00:03:04.200 --> 00:03:15.990
And inside the constructor we will be firstly let us all the base here as everything is consisted inside

43
00:03:15.990 --> 00:03:19.770
the base panel, we are having base panel for all of them.

44
00:03:19.770 --> 00:03:27.180
So whenever we hit this help page, then that card layout should appear from the base class we have

45
00:03:27.180 --> 00:03:27.990
created.

46
00:03:29.010 --> 00:03:31.290
So we have two set to one.

47
00:03:31.290 --> 00:03:32.370
Q 2 to 3.

48
00:03:32.370 --> 00:03:38.910
First, the three questions should be set inside this help Java class.

49
00:03:39.000 --> 00:03:42.300
So let us first create a new level.

50
00:03:43.550 --> 00:03:47.480
And inside this, we have to set the first question.

51
00:03:47.480 --> 00:03:49.430
So what was the first question?

52
00:03:49.550 --> 00:03:56.030
How does that liner is going to help?

53
00:03:57.140 --> 00:04:00.550
So how it can improve my robot productivity.

54
00:04:00.560 --> 00:04:02.390
This could be the first question.

55
00:04:02.630 --> 00:04:07.580
So improve my productivity.

56
00:04:08.860 --> 00:04:14.800
And similarly, we will be adding two or more questions and three answers to those.

57
00:04:15.340 --> 00:04:21.760
So in total, there is going to be basically six lines for the questions and answers.

58
00:04:22.420 --> 00:04:27.640
So here we have added all the three questions and answers to that question.

59
00:04:27.820 --> 00:04:35.230
Q1, Q2, Q3 containing the three questions and need to a three containing all the three answers.

60
00:04:35.230 --> 00:04:43.840
And in order to enclose a line break kind of test, we have to use this HTML text inside Java as we

61
00:04:43.840 --> 00:04:50.140
are creating a Java UI application and it does not support the line breaks.

62
00:04:50.140 --> 00:04:56.500
So if we want line breaks inside it, then we have to enclose the text.

63
00:04:56.500 --> 00:05:05.140
The whole text inside this HTML tab are opening and closing tab as the vertex are supported by the HTML

64
00:05:05.170 --> 00:05:05.620
text.

65
00:05:05.620 --> 00:05:08.260
So yes, this is a fact.

66
00:05:08.260 --> 00:05:15.910
I want you all to know that whenever we want to include a multi line text, then you must use this as

67
00:05:16.270 --> 00:05:16.660
written.

68
00:05:16.660 --> 00:05:22.780
And inside the HTML tag enclose the text now setting the font for the question and answer.

69
00:05:22.780 --> 00:05:24.550
So here you can see the question.

70
00:05:24.550 --> 00:05:31.660
Font is slightly thicker than the answer font here also you can see this is slightly thicker than the

71
00:05:31.660 --> 00:05:41.290
answer or the font is same for both of them, which is verdana and adding font to all six of them.

72
00:05:41.290 --> 00:05:48.400
So setting font Q font for three and the answer four and then adding all six of them to the panel.

73
00:05:49.000 --> 00:05:55.630
So here you can see that we have added all three of them inside the frame with the help of this add

74
00:05:55.630 --> 00:05:56.200
keyword.

75
00:05:56.980 --> 00:06:02.980
Now, after all the questions and answers here, you can see that there is a back to home button.

76
00:06:02.980 --> 00:06:07.030
So we have to add this back to home button also.

77
00:06:07.030 --> 00:06:14.650
So using this button component of the string library, a new button we created and the text appearing

78
00:06:14.650 --> 00:06:16.750
on the button is back to home.

79
00:06:16.750 --> 00:06:19.630
Or we can also call it as back to home page.

80
00:06:19.960 --> 00:06:26.290
So yes, back to homepage is going to be that text appearing on the button and then adding this button

81
00:06:26.290 --> 00:06:28.360
to the frame with the help of add keyword.

82
00:06:28.360 --> 00:06:35.530
So yes, we have added everything inside the help page now attaching an action listener to the button,

83
00:06:35.530 --> 00:06:38.050
definitely what actually the button is doing.

84
00:06:38.050 --> 00:06:41.950
So the button will be navigating us to the home page.

85
00:06:42.400 --> 00:06:48.670
This action performance is basically moving us to the card which is showing this home content.

86
00:06:48.670 --> 00:06:54.070
So yes, once hitting the back to home button, it will be navigated back to this page only.

87
00:06:54.710 --> 00:06:54.920
Okay.

88
00:06:55.210 --> 00:06:58.810
So this was all about the Help Java file.

89
00:06:58.840 --> 00:07:03.550
We have added this help page to the frame with the help of this help.

90
00:07:03.550 --> 00:07:08.650
Plus the questions and answers are attached inside this file.

91
00:07:08.680 --> 00:07:15.910
Now, the next part we are going to create is this ender dot Java file, which is displaying a text.

92
00:07:15.910 --> 00:07:23.950
That's how much time we have saved and wasted in order to complete our task and button, which is containing

93
00:07:23.950 --> 00:07:25.690
a text, go back to home.

94
00:07:25.690 --> 00:07:32.710
So this end page is looking simple, but this will be containing like multiple things.

95
00:07:32.710 --> 00:07:39.640
Suppose we have to contain that, calculate the time which is saved and wasted in order to complete

96
00:07:39.640 --> 00:07:40.120
our task.

97
00:07:40.120 --> 00:07:47.320
So if it is wasted, so it should calculate itself that yes, the button down button is hit after the

98
00:07:47.350 --> 00:07:49.930
time frame, then it should show wasted.

99
00:07:49.930 --> 00:07:53.950
And if it is, the done button is hit before the time frames.

100
00:07:53.950 --> 00:07:58.600
If it is set, then it should show that you have saved this time.

101
00:07:58.600 --> 00:08:03.340
So let us move forward creating this end class.

102
00:08:03.340 --> 00:08:12.820
So first look at the end dot Java file inside this RC folder and here we are inside this end class.

103
00:08:12.820 --> 00:08:23.890
So this public class and again extending it to J panel and we will add action listener definitely as

104
00:08:24.070 --> 00:08:28.450
there is a back button which will navigate us back to the home page.

105
00:08:28.840 --> 00:08:40.000
So action listener So inside this end class we are going to like call some of the objects.

106
00:08:40.090 --> 00:08:42.670
So there is a message appearing.

107
00:08:43.610 --> 00:08:45.440
On the end page.

108
00:08:45.890 --> 00:08:48.080
Let us name it randomly.

109
00:08:48.170 --> 00:08:55.130
A message, a j button containing the text back to home page.

110
00:08:55.760 --> 00:08:59.510
So calling the button has be a base.

111
00:08:59.810 --> 00:09:00.770
Definitely.

112
00:09:00.980 --> 00:09:05.090
We have called this base in every class a string.

113
00:09:05.150 --> 00:09:08.210
So string is going to contain the message.

114
00:09:08.720 --> 00:09:11.750
The message is going to be contained in a string format.

115
00:09:11.870 --> 00:09:17.600
So we have to parse all the integers also in the form of a string.

116
00:09:17.600 --> 00:09:26.060
Initially, we are having our send minutes in the form of integers so only us and miniature are showing

117
00:09:26.390 --> 00:09:29.180
on the end page, not the seconds.

118
00:09:29.180 --> 00:09:37.280
So only two integers we are importing here and now moving forward to the end constructor instead it

119
00:09:37.280 --> 00:09:38.780
passing base.

120
00:09:40.090 --> 00:09:50.050
And we are having based as we so already we are having a button as we so we are using the base as be

121
00:09:50.050 --> 00:10:00.580
a so head again writing it as we only know now the bases completed like and the next thing is to set

122
00:10:00.580 --> 00:10:02.710
the layout for the end page.

123
00:10:02.920 --> 00:10:09.970
So set layout and the set layout is going to set the layout as a border layout.

124
00:10:10.270 --> 00:10:13.980
There is no greater flow layout need for this end pane.

125
00:10:14.050 --> 00:10:18.790
So simply we will be using border layout for the end page.

126
00:10:19.150 --> 00:10:21.370
Now the layout is set.

127
00:10:22.120 --> 00:10:29.230
This area should be in camel case, so the border layout is set.

128
00:10:29.500 --> 00:10:34.330
Now the next thing is to set the values inside the string format.

129
00:10:34.420 --> 00:10:38.960
Like how many times is saved or wasted in order to complete our tasks?

130
00:10:39.010 --> 00:10:42.700
So public void set values.

131
00:10:43.420 --> 00:10:51.250
So the value should be set in a calculated manner, which should actually show how many time is saved

132
00:10:51.250 --> 00:10:52.270
or wasted.

133
00:10:52.420 --> 00:10:56.830
So string is set in hours and.

134
00:10:59.020 --> 00:11:00.550
In minutes.

135
00:11:01.810 --> 00:11:09.310
So I yes, inside this set of values, we are going to set the string as a set.

136
00:11:10.360 --> 00:11:17.650
We are like assigning random names to the variables, the hours and the minutes and the seconds.

137
00:11:17.980 --> 00:11:20.370
So minutes as.

138
00:11:21.630 --> 00:11:22.640
Matt.

139
00:11:24.540 --> 00:11:28.180
And yes, all of them are done on message.

140
00:11:28.200 --> 00:11:28.730
Of course.

141
00:11:28.730 --> 00:11:40.020
So the message was so a new message, why we have already declared this message viable and inside this

142
00:11:40.020 --> 00:11:43.080
we will be passing as H&amp;M.

143
00:11:43.590 --> 00:11:47.910
So under the button after this.

144
00:11:48.450 --> 00:11:56.160
So this button is containing a new button and the text on the button is go back to home.

145
00:11:56.910 --> 00:12:02.310
So it should be enclosed inside a double inverted comma.

146
00:12:02.820 --> 00:12:04.710
Go back to home.

147
00:12:05.160 --> 00:12:09.570
So, yes, this is all about the declarations.

148
00:12:09.600 --> 00:12:15.430
Now, let us add these buttons and the message to the frame.

149
00:12:15.900 --> 00:12:17.190
So here it is.

150
00:12:17.190 --> 00:12:19.850
We have added the actual listener to the button.

151
00:12:19.860 --> 00:12:20.920
Go back to home.

152
00:12:20.940 --> 00:12:25.710
This is the action performed function, which is consisting the function.

153
00:12:25.710 --> 00:12:30.470
So the base should show the home page on hitting the go back button.

154
00:12:30.480 --> 00:12:37.560
So once we hit the go back button, the base, the card layout will navigate us back to this home page.

155
00:12:37.560 --> 00:12:45.000
So yes, this is all about this action performed function and this V dot action is now we have added

156
00:12:45.000 --> 00:12:52.020
the button and the message to the frame, the message messages added at the center of the page and the

157
00:12:52.020 --> 00:12:54.180
button is added to the south of the page.

158
00:12:54.300 --> 00:12:57.680
Similarly, we have done this for the home page.

159
00:12:57.690 --> 00:13:05.160
We have added the like content in the center, the text fields and the buttons in the south.

160
00:13:05.280 --> 00:13:09.810
And in the similar way we have added this in the end page also.

161
00:13:10.350 --> 00:13:15.780
Now coming to the message class, what the message is actually going to display.

162
00:13:15.900 --> 00:13:19.860
So inside this message class, we have extended it as g panel.

163
00:13:19.860 --> 00:13:23.190
That is a separate panel for this message to be shown.

164
00:13:23.760 --> 00:13:24.900
There is a string.

165
00:13:24.900 --> 00:13:29.460
The whole message is going to be contained in the string, a string format.

166
00:13:29.490 --> 00:13:32.280
There are hours and minutes as integers.

167
00:13:32.400 --> 00:13:35.610
And you can see we can see this.

168
00:13:35.610 --> 00:13:39.840
You have I can zoom this image in order to make it visible.

169
00:13:40.760 --> 00:13:47.100
So here you can see that you have saved one hour and 25 minutes is appearing on that page.

170
00:13:47.270 --> 00:13:55.130
So, yes, this paint component is enabling us to show or show that specific string on the end page.

171
00:13:55.670 --> 00:13:58.280
What we talked about, this paint component has.

172
00:13:58.280 --> 00:14:04.880
So this paint component is invoking graphics, which is initially not visible on the page.

173
00:14:04.910 --> 00:14:08.030
It is painting something on the frame.

174
00:14:08.180 --> 00:14:10.760
Basically, the graphics we can call them.

175
00:14:10.760 --> 00:14:18.410
And with the help of drawstring, we have used already the draw image component of the graphics library.

176
00:14:18.410 --> 00:14:20.510
Now we are using drawstring.

177
00:14:20.870 --> 00:14:27.020
So we are having everything in the integer format, but we have to pass all of them in the form of a

178
00:14:27.020 --> 00:14:27.530
string.

179
00:14:27.530 --> 00:14:34.760
So for that only we are using this paint component and it will paint it in the form of a complete string.

180
00:14:34.880 --> 00:14:43.610
So yes, this text is showing us you have message, which is the message we are creating here.

181
00:14:44.210 --> 00:14:50.440
This is the message and this message will be containing You have saved our wasted.

182
00:14:50.450 --> 00:14:53.780
So this is changing according to the user.

183
00:14:53.990 --> 00:14:59.030
Whenever they hit the button, it could be saved or it could be wasted.

184
00:14:59.180 --> 00:15:06.560
So yes, the message is containing saved or wasted a string which will contain the hours and minutes

185
00:15:06.560 --> 00:15:11.810
and the weight and the height is adjusted to half of the page.

186
00:15:11.900 --> 00:15:15.860
So basically the string is appearing in the middle of the page.

187
00:15:16.190 --> 00:15:21.700
So this was all about the end function, or we can call it the end class.

188
00:15:21.710 --> 00:15:23.770
Then your java file is done.

189
00:15:23.780 --> 00:15:30.740
Now in the next part we will be creating this mean class, the timeline class, and see how it works.

190
00:15:30.740 --> 00:15:32.000
So save in the next part.
