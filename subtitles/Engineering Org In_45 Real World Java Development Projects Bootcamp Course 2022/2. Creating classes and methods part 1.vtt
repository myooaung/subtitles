WEBVTT
1
00:00:01.120 --> 00:00:05.230
So we have seen this is setup of our project.

2
00:00:05.560 --> 00:00:13.240
So we just created one package known as email and we created a class which is basically publicly specified

3
00:00:13.240 --> 00:00:13.780
class.

4
00:00:14.170 --> 00:00:17.680
Now I will explain what is our blueprint of our project?

5
00:00:17.800 --> 00:00:22.590
And then I will explain some basics of class methods and objects, etc..

6
00:00:23.290 --> 00:00:24.440
So let's see.

7
00:00:24.460 --> 00:00:25.270
Let's see.

8
00:00:25.270 --> 00:00:27.100
What is the blueprint of our project?

9
00:00:28.960 --> 00:00:34.420
So Project Blueprint is consider this as a package package email app.

10
00:00:35.240 --> 00:00:37.640
This is email, class and methods.

11
00:00:38.460 --> 00:00:40.380
Just be I created.

12
00:00:41.830 --> 00:00:50.500
So this is Project Blueprint Package Email app and this is email class and methods and which I created

13
00:00:50.500 --> 00:00:52.870
before an ID I showed.

14
00:00:53.350 --> 00:00:55.180
So now this is done.

15
00:00:55.180 --> 00:00:59.440
These things are done in future.

16
00:00:59.440 --> 00:01:05.350
What we are going to do as we move our project we create we will create one main class.

17
00:01:05.350 --> 00:01:13.150
We will load all the methods related to this using objects, and we will execute these methods inside

18
00:01:13.150 --> 00:01:14.290
this main class.

19
00:01:14.290 --> 00:01:17.020
This is our main project blueprint.

20
00:01:17.910 --> 00:01:20.010
So let us see what is basically.

21
00:01:20.900 --> 00:01:22.830
O Java classes and methods.

22
00:01:23.570 --> 00:01:25.400
So Java class.

23
00:01:25.580 --> 00:01:27.740
Let's see first thing about class.

24
00:01:28.600 --> 00:01:33.620
Everything in Java is associated with classes, an object without classes and objects.

25
00:01:33.640 --> 00:01:37.570
You cannot create any code or we can say any method.

26
00:01:38.510 --> 00:01:39.320
In Java.

27
00:01:39.920 --> 00:01:42.650
So it contains attributes.

28
00:01:42.650 --> 00:01:46.850
Methods, attributes are basically what we can say is class.

29
00:01:47.150 --> 00:01:52.160
Classes plus attributes create some environment for method.

30
00:01:52.640 --> 00:01:59.900
So for example, in real life example you can consider chorizo object has attributes such as weight

31
00:01:59.900 --> 00:02:04.940
and color and methods are such like dry you break and something like that.

32
00:02:04.940 --> 00:02:13.490
So basically what we can create, we can create car as a class, its attributes are weight, color,

33
00:02:13.520 --> 00:02:18.950
their model numbers, etc. and methods car can stop, drive, break, etc..

34
00:02:20.030 --> 00:02:25.880
So classes like Object Constructor, we can say it's creates the object or we can constructor off the

35
00:02:25.880 --> 00:02:26.480
object.

36
00:02:27.400 --> 00:02:30.970
Or it can be a blueprint for creating objects.

37
00:02:31.120 --> 00:02:35.020
So objects are basically just invoking the class.

38
00:02:36.450 --> 00:02:42.810
Glasses also holds some user defined attributes to parse values or input from user.

39
00:02:43.650 --> 00:02:47.850
So we can view the user defined attributes also inside the classes.

40
00:02:48.300 --> 00:02:50.670
Now what is meant by objects in Java?

41
00:02:51.090 --> 00:02:55.130
So objectives are basically associated with classes.

42
00:02:55.140 --> 00:02:55.920
But.

43
00:02:56.670 --> 00:03:02.900
What is the simplest form we can say that to use a class object is used basically.

44
00:03:02.910 --> 00:03:07.290
So if you define some class and you want to use that class, you have to define the object.

45
00:03:08.080 --> 00:03:14.800
As class is already created, we have to only just create the object for that particular class as we

46
00:03:14.800 --> 00:03:17.700
created already that object class.

47
00:03:17.710 --> 00:03:22.660
We can easily create that object, but like class, then we can create the object.

48
00:03:23.030 --> 00:03:25.930
So this is all about the class.

49
00:03:26.200 --> 00:03:31.690
Now let us see some what we are going to do in our project.

50
00:03:32.230 --> 00:03:37.420
So before moving in further, I will proceed with code or a project.

51
00:03:37.610 --> 00:03:37.900
It is.

52
00:03:39.540 --> 00:03:41.910
So inside this.

53
00:03:42.830 --> 00:03:46.220
I created this class, so I need to create some methods.

54
00:03:46.550 --> 00:03:50.360
But before that, we need to invoke some libraries.

55
00:03:51.060 --> 00:03:54.990
So for the libraries, I'm going to put input.

56
00:03:55.730 --> 00:03:56.660
Java.

57
00:03:57.410 --> 00:04:00.320
Dot util dot star.

58
00:04:01.210 --> 00:04:02.110
I will explain.

59
00:04:02.110 --> 00:04:02.560
What is this?

60
00:04:02.560 --> 00:04:06.670
Meaning I'm not going to use this, but I'm not currently using this library.

61
00:04:06.670 --> 00:04:08.880
It's showing it is showing this.

62
00:04:08.890 --> 00:04:11.020
You are not using this library currently.

63
00:04:11.410 --> 00:04:16.550
But what is the significance of this is very important library.

64
00:04:16.630 --> 00:04:19.020
Java dot dot dot dot.

65
00:04:19.120 --> 00:04:21.940
Meaning in the utility I'm using utilizar.

66
00:04:21.970 --> 00:04:23.770
All things related to that.

67
00:04:24.520 --> 00:04:27.670
So we can say this very basic library inside Java.

68
00:04:28.060 --> 00:04:34.330
Another same library I'm going to use is import java dot io dot.

69
00:04:35.100 --> 00:04:39.910
But it is basically input output library for invoking and taking user inputs.

70
00:04:39.930 --> 00:04:42.150
It will be helpful library.

71
00:04:43.500 --> 00:04:44.340
So.

72
00:04:46.170 --> 00:04:47.730
As this is done.

73
00:04:49.780 --> 00:04:57.100
Our first thing I'm going to explain here is how to take user inputs in Java.

74
00:04:57.550 --> 00:05:01.380
So you can do this scanner, which is the by default method.

75
00:05:01.390 --> 00:05:03.940
We can say a default method for taking inputs.

76
00:05:03.940 --> 00:05:05.050
I'm going to use this.

77
00:05:05.680 --> 00:05:11.320
So I'm going to invoke inside class only because I'm going to specify it as a public.

78
00:05:11.710 --> 00:05:14.330
So what I can do is public scanner.

79
00:05:14.380 --> 00:05:16.580
Public is access specified a public scanner.

80
00:05:16.600 --> 00:05:24.070
As you invoke scanner, you can see now the java dot util it's started so scanner this scanner class

81
00:05:24.070 --> 00:05:28.300
is belongs to this library java dot utility it's by default library.

82
00:05:29.580 --> 00:05:31.480
Is equal to new.

83
00:05:32.640 --> 00:05:41.130
Skinner uses syntax, basically syntax to invoke scanner system, which is again one one of the by default

84
00:05:42.000 --> 00:05:45.510
classes system dot in which is basically method.

85
00:05:46.840 --> 00:05:47.890
So this is done.

86
00:05:48.400 --> 00:05:51.700
Now I'm going to set up some variables here.

87
00:05:52.000 --> 00:05:53.050
So.

88
00:05:54.150 --> 00:05:55.380
For this.

89
00:05:55.530 --> 00:05:56.610
I will explain.

90
00:05:57.660 --> 00:06:00.750
I just put here scanner glass or explanations?

91
00:06:03.580 --> 00:06:04.330
Now.

92
00:06:05.490 --> 00:06:06.210
Sitting.

93
00:06:07.910 --> 00:06:08.840
Variables.

94
00:06:11.520 --> 00:06:12.210
Setting variables.

95
00:06:12.210 --> 00:06:14.910
I'm going to set some variables here.

96
00:06:16.470 --> 00:06:17.100
But.

97
00:06:18.110 --> 00:06:20.030
For the security issue.

98
00:06:20.030 --> 00:06:23.240
We can say, I want to create some abstract thing here.

99
00:06:23.480 --> 00:06:26.060
What I'm going to do is I'm going to use.

100
00:06:27.500 --> 00:06:32.390
Private here as this is public given I'm going to use here private.

101
00:06:32.900 --> 00:06:36.350
So let us consider this private string.

102
00:06:36.350 --> 00:06:40.700
I'm going to specify four string F name, basically first name.

103
00:06:41.480 --> 00:06:44.840
Similarly private string.

104
00:06:46.400 --> 00:06:47.300
Last name.

105
00:06:48.210 --> 00:06:50.640
Similarly like that, I'm going to create some.

106
00:06:53.550 --> 00:06:55.650
Similarly like department.

107
00:06:56.740 --> 00:07:02.620
DPT department for department, then for email.

108
00:07:05.680 --> 00:07:07.750
Then for password.

109
00:07:10.600 --> 00:07:11.710
Now consider this.

110
00:07:11.710 --> 00:07:14.230
I'm going to specify all these things in the.

111
00:07:15.720 --> 00:07:19.110
String method like string as a string variable only.

112
00:07:21.450 --> 00:07:26.370
Now I'm going to specify it's male capacity which is in integer.

113
00:07:28.500 --> 00:07:29.310
Capacity.

114
00:07:30.260 --> 00:07:31.760
Equal to five.

115
00:07:32.120 --> 00:07:36.140
I'm considering by default 500 500 and be.

116
00:07:37.310 --> 00:07:39.230
Then private.

117
00:07:40.700 --> 00:07:41.560
String again.

118
00:07:41.570 --> 00:07:42.920
Alternatively, basically.

119
00:07:43.660 --> 00:07:44.260
See.

120
00:07:45.370 --> 00:07:46.050
Return.

121
00:07:48.530 --> 00:07:50.980
So we are done with invoking.

122
00:07:50.990 --> 00:07:57.680
Now, remember, these are the global or we can say these are strings can be accessible throughout this

123
00:07:57.680 --> 00:07:58.130
class.

124
00:07:58.130 --> 00:08:06.770
So in the class I can create as much as I want for methods so I can use this throughout this class.

125
00:08:07.400 --> 00:08:10.760
As you can see, this class enter, I can use throughout this class.

126
00:08:10.760 --> 00:08:16.340
So we are done with creating some variables and I'm setting use to the private to.

127
00:08:18.220 --> 00:08:22.090
Not give access directly, basically.

128
00:08:23.040 --> 00:08:25.320
Once this is done, no one can access it.

129
00:08:25.350 --> 00:08:26.010
This.

130
00:08:27.100 --> 00:08:29.680
As its access to various private.

131
00:08:31.340 --> 00:08:38.840
So let us see with some constructive methods and what is meant by method in Java.

132
00:08:42.050 --> 00:08:42.590
Okay.

133
00:08:42.680 --> 00:08:43.700
So.

134
00:08:44.970 --> 00:08:45.770
Java class.

135
00:08:45.780 --> 00:08:51.030
We have seen too, as I told you, I will tell you some more about class.

136
00:08:51.300 --> 00:08:53.370
Class is a blueprint we have seen.

137
00:08:53.700 --> 00:08:55.130
So class is something like it.

138
00:08:55.140 --> 00:08:58.050
Stores of functions automated in one block of code, basically.

139
00:08:58.930 --> 00:09:02.500
Consider an example sketch of hosts is a class.

140
00:09:03.040 --> 00:09:07.540
Then it contains all details about the prototype of house doors, windows, etc. etc..

141
00:09:08.280 --> 00:09:12.640
Who host is now the object of that class?

142
00:09:13.120 --> 00:09:14.030
Sketch of hosts.

143
00:09:14.050 --> 00:09:15.700
Basically, I created this sketch of House.

144
00:09:16.000 --> 00:09:17.410
Now House is an object.

145
00:09:17.890 --> 00:09:21.710
So what I can do is class contains all the properties of that object.

146
00:09:21.730 --> 00:09:22.210
Related.

147
00:09:22.690 --> 00:09:27.940
So syntax to declare this class class name as we created there.

148
00:09:27.940 --> 00:09:30.820
And I'm going to specify access specified before that.

149
00:09:31.960 --> 00:09:35.170
Consider if you are not given any access to there.

150
00:09:35.860 --> 00:09:41.770
By default it will be default access specified, which is basically public only in Java.

151
00:09:42.160 --> 00:09:48.580
But if you can specify public, private and protected, protected is fully protected like you have to

152
00:09:48.580 --> 00:09:49.270
invoke.

153
00:09:49.300 --> 00:09:55.660
It's more what we can say are method for privacy and security.

154
00:09:56.290 --> 00:10:00.430
So as I told you object, we are going to create object.

155
00:10:00.730 --> 00:10:05.590
I'm not created here any object, but we are going to create an object for that purpose also.

156
00:10:05.770 --> 00:10:09.850
So it's basically used to call class or execute that class.

157
00:10:10.700 --> 00:10:13.520
Object is also called as instance of classes.

158
00:10:14.060 --> 00:10:16.560
Without object, we cannot call class.

159
00:10:16.580 --> 00:10:20.900
Always remember that to call the class we have to use object.

160
00:10:21.290 --> 00:10:27.830
So for that example, previous example, as I told you, sketch of house class, sketch of house, door

161
00:10:27.830 --> 00:10:30.590
and windows are some methods or we can see functions inside this.

162
00:10:30.920 --> 00:10:32.290
So this is main method.

163
00:10:32.300 --> 00:10:39.900
If you know that in the Java public static void min is a default method to execute any program in Java.

164
00:10:39.920 --> 00:10:42.890
Without this, you cannot start the program.

165
00:10:43.980 --> 00:10:46.460
You cannot execute the program or that sketch of us.

166
00:10:46.490 --> 00:10:47.950
I created this object.

167
00:10:47.960 --> 00:10:52.850
OBJ You can see obj one new like this and execute that object.

168
00:10:54.280 --> 00:10:57.340
We are going to see in further details about Java objects.

169
00:10:57.910 --> 00:11:01.270
So now Java methods now have integrated methods.

170
00:11:01.930 --> 00:11:04.570
So I will show an ID.

171
00:11:04.600 --> 00:11:08.740
Basically if I want to print something in ID.

172
00:11:10.490 --> 00:11:13.310
My default monetary system dropped out.

173
00:11:15.240 --> 00:11:16.960
Now you will see the error here.

174
00:11:16.980 --> 00:11:18.540
Basically, this team got out.

175
00:11:18.720 --> 00:11:19.770
Any error?

176
00:11:19.800 --> 00:11:20.820
It is not.

177
00:11:21.770 --> 00:11:25.220
Or invoke inside any class.

178
00:11:25.670 --> 00:11:26.360
Why?

179
00:11:26.390 --> 00:11:29.120
The thing is, it's only defined to the method.

180
00:11:29.150 --> 00:11:30.530
First, create method.

181
00:11:30.980 --> 00:11:32.000
Create class.

182
00:11:32.000 --> 00:11:33.950
Inside that creates a method.

183
00:11:34.160 --> 00:11:35.510
Then you can invoke it.

184
00:11:35.780 --> 00:11:37.990
That method, as simple as that.

185
00:11:38.000 --> 00:11:40.730
So methods are declared within the classes.

186
00:11:41.530 --> 00:11:44.620
It contains whole code of particular functions.

187
00:11:46.230 --> 00:11:50.040
Method Contents return value and excess specifiers.

188
00:11:51.330 --> 00:11:53.370
They are the object classes.

189
00:11:53.610 --> 00:11:58.050
As object classes are created, we can easily access methods using that object.

190
00:11:59.260 --> 00:12:03.410
I mean, method is default method, as I told you to run or build code or project anything.

191
00:12:04.100 --> 00:12:04.700
Main method.

192
00:12:04.700 --> 00:12:08.690
Always remember public static equipment and it's always written strings.

193
00:12:09.050 --> 00:12:13.020
You cannot change to integer or something like that.

194
00:12:13.040 --> 00:12:13.610
You.

195
00:12:13.640 --> 00:12:18.090
You can print integers, but you cannot return integers inside.

196
00:12:18.290 --> 00:12:18.950
Main method.

197
00:12:20.180 --> 00:12:21.860
Packages are in the Java.

198
00:12:21.860 --> 00:12:28.410
As I told you, I'm against tailing that it just creating a folder and I'm storing all the classes inside

199
00:12:28.410 --> 00:12:28.670
it.

200
00:12:31.040 --> 00:12:37.760
Now there are two methods user defined methods and standard library methods.

201
00:12:38.090 --> 00:12:40.400
User defined methods like I created.

202
00:12:40.400 --> 00:12:42.110
I'm going to create some methods here.

203
00:12:42.560 --> 00:12:48.200
Similarly, like that, you can also create some user defined methods, basically.

204
00:12:48.620 --> 00:12:52.040
It's shows that it's user defined methods.

205
00:12:52.580 --> 00:12:58.760
There are some standard library methods that I created scanner system, all the standard library methods

206
00:12:58.760 --> 00:13:01.740
that that I mentioned built in methods and Java.

207
00:13:01.760 --> 00:13:08.780
So if you want to check number even or you can create some or even not functions that's user defined.

208
00:13:08.780 --> 00:13:13.290
But I specified some library method like random system.

209
00:13:13.310 --> 00:13:17.390
These are not in basically system defined methods.

210
00:13:19.340 --> 00:13:22.870
So now let's move on to our code.

211
00:13:25.040 --> 00:13:32.180
Now I'm I told you about let's see how to how we can proceed with building our project.

212
00:13:32.330 --> 00:13:34.280
So we created all things here.

213
00:13:34.640 --> 00:13:37.490
Now I want to create one constructor.

214
00:13:37.490 --> 00:13:39.120
Now, what constructor will do?

215
00:13:39.140 --> 00:13:41.600
It will print what I want, basically.

216
00:13:41.600 --> 00:13:42.200
First thing.

217
00:13:42.910 --> 00:13:52.930
Second thing, it will give me the output and as well as creating constructor itself is a like privacy

218
00:13:52.930 --> 00:13:55.480
thing inside Java.

219
00:13:56.320 --> 00:14:03.100
I am going to invoke or I'm going to run only constructor so it will not use this private string or

220
00:14:03.100 --> 00:14:03.710
something like that.

221
00:14:03.730 --> 00:14:05.320
It will take value from that.

222
00:14:05.320 --> 00:14:08.050
But you cannot change this value.

223
00:14:09.460 --> 00:14:13.140
Or we can say third party cannot change this value.

224
00:14:13.150 --> 00:14:14.590
Just I'm going to create it.

225
00:14:15.130 --> 00:14:18.100
So constructor I'm going to specify.

226
00:14:22.960 --> 00:14:26.140
You're not received.

227
00:14:26.890 --> 00:14:28.840
First name, last name and everything.

228
00:14:34.100 --> 00:14:34.730
That's it.

229
00:14:36.030 --> 00:14:38.820
Oh, I'm going to tell, like, only for that.

230
00:14:38.820 --> 00:14:40.800
Only like, first name last time.

231
00:14:40.800 --> 00:14:41.400
That's it.

232
00:14:42.230 --> 00:14:47.720
You can change it to some other names also, but be careful about the name.

233
00:14:47.750 --> 00:14:52.340
Now consider I'm going to create this as a public.

234
00:14:53.000 --> 00:14:55.160
Always remember class and constructor.

235
00:14:55.160 --> 00:14:56.120
Have same name.

236
00:14:56.480 --> 00:15:00.920
So I'm going to give the constructor attributes.

237
00:15:01.280 --> 00:15:02.630
F names, same name.

238
00:15:02.630 --> 00:15:06.950
I'm going always remember inside the constructor you have to use same name.

239
00:15:08.910 --> 00:15:09.690
After that.

240
00:15:10.720 --> 00:15:16.090
You need to specify something like this f name and this f name are totally different.
