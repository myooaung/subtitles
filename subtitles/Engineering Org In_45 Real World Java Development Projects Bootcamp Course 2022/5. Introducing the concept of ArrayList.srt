1
00:00:00,710 --> 00:00:08,660
So after the successful creation of the teacher and the student class, we are heading over to the school

2
00:00:08,660 --> 00:00:09,460
section.

3
00:00:09,470 --> 00:00:20,270
So the school is the main body which is managing the funds in a way of giving the salary to the teachers

4
00:00:20,270 --> 00:00:23,060
and receiving the fees from the students.

5
00:00:23,090 --> 00:00:32,990
So the main system here is the school for which we are creating this project for a management of soirÃ©es

6
00:00:32,990 --> 00:00:34,250
in the school.

7
00:00:34,550 --> 00:00:37,700
Similar way of the teacher and the student.

8
00:00:37,700 --> 00:00:40,280
We will create a class.

9
00:00:41,550 --> 00:00:46,830
School and inside the class we will create some variables.

10
00:00:47,010 --> 00:00:49,260
So private.

11
00:00:50,540 --> 00:00:51,350
Peter.

12
00:00:53,450 --> 00:00:53,960
Peter.

13
00:00:55,900 --> 00:01:00,190
We know that a school comprises of teachers and students.

14
00:01:00,190 --> 00:01:04,210
So it is the beginning.

15
00:01:05,010 --> 00:01:11,670
Correct beginning for this class by initializing the students and teachers.

16
00:01:11,880 --> 00:01:17,130
So, yes, the student and teachers now.

17
00:01:18,250 --> 00:01:22,120
School consists of teachers and students.

18
00:01:22,120 --> 00:01:26,770
But what is the actual purpose of this project?

19
00:01:26,890 --> 00:01:30,070
Like we are here to manage the funds.

20
00:01:30,250 --> 00:01:38,120
So how the funds are consisted of in the funds we have a total money on.

21
00:01:38,170 --> 00:01:46,360
Our total fund is earned by the school and the school have to spend it in various ways of giving the

22
00:01:46,360 --> 00:01:51,880
salary to certain teachers and save something as a profit.

23
00:01:52,640 --> 00:01:57,620
So yes, we have to create a variable for that thing also.

24
00:01:57,950 --> 00:02:04,610
So creating a private static class for the total money.

25
00:02:05,420 --> 00:02:07,580
We will learn about static in.

26
00:02:10,040 --> 00:02:12,860
Total money earned.

27
00:02:14,830 --> 00:02:15,610
Yes.

28
00:02:15,910 --> 00:02:23,590
So the total money earned by the school and in the similar way total money spent.

29
00:02:24,040 --> 00:02:28,660
So I will copy this part and paste it here.

30
00:02:29,700 --> 00:02:31,680
Total money spent.

31
00:02:32,520 --> 00:02:39,690
So, yes, we have successfully created the members of this school class as teacher student.

32
00:02:39,720 --> 00:02:43,080
The total money and the total money spent.

33
00:02:44,220 --> 00:02:49,770
Now you must be wondering that in student and teacher class.

34
00:02:49,800 --> 00:02:56,010
We initialized the ID and which was unique for every teacher and student.

35
00:02:56,040 --> 00:03:02,070
Each teacher has a unique name and each student has a unique name similar with the IDs.

36
00:03:02,460 --> 00:03:07,410
But does a school contain a single teacher or a single student?

37
00:03:07,710 --> 00:03:09,120
Is it possible?

38
00:03:09,930 --> 00:03:12,180
Let's think about it on yourself.

39
00:03:13,320 --> 00:03:21,810
The answer is no, that a school can never be built with a single teacher or student.

40
00:03:22,140 --> 00:03:24,630
It will not exist in that way.

41
00:03:24,840 --> 00:03:33,900
So you must be wondering that how to add multiple teachers and student in this class name school.

42
00:03:34,290 --> 00:03:37,900
So I am giving you a second to think about it.

43
00:03:37,920 --> 00:03:39,780
What comes in your mind?

44
00:03:39,810 --> 00:03:46,530
How to gain multiple datas with this teacher variable?

45
00:03:47,850 --> 00:03:54,150
So a method may arise in your mind of declaring this as an error.

46
00:03:55,140 --> 00:03:55,830
Right.

47
00:03:57,780 --> 00:03:58,560
So.

48
00:03:59,390 --> 00:04:01,160
Bring it in this way?

49
00:04:01,340 --> 00:04:01,820
Yes.

50
00:04:01,820 --> 00:04:04,640
So we will declare an error in this way.

51
00:04:05,270 --> 00:04:07,070
But think about it.

52
00:04:08,660 --> 00:04:15,690
So if we take the teacher and students as an error, we know the concept of vary.

53
00:04:16,040 --> 00:04:23,930
It has a limited number of size, like we have to initialize the size of the area in the beginning and

54
00:04:23,930 --> 00:04:25,310
it is immutable.

55
00:04:25,340 --> 00:04:28,070
We cannot change the size of an area.

56
00:04:28,100 --> 00:04:36,570
So suppose if a teacher wants to leave the school or join or a teacher wants to join the school later.

57
00:04:36,590 --> 00:04:39,980
So is it possible to do so with arrays?

58
00:04:40,550 --> 00:04:41,930
The answer is no.

59
00:04:42,350 --> 00:04:50,030
As arrays are immutable, if we create a size initially, we could not alter it later.

60
00:04:50,660 --> 00:05:01,760
So we have to think in a broader way to create a data type which is resizable and adds or deletes datas

61
00:05:01,760 --> 00:05:09,230
of teachers and students very conveniently without any restrictions.

62
00:05:10,850 --> 00:05:12,950
So removing make this.

63
00:05:14,020 --> 00:05:19,780
I am going to tell you about a very beautiful data type code analyst.

64
00:05:20,050 --> 00:05:30,220
Yes, Java has this data type ArrayList, which is resizable and has many features in it, which makes

65
00:05:30,220 --> 00:05:32,280
it useful in many ways.

66
00:05:32,290 --> 00:05:37,810
So I am going to show you this in this demo dot java file.

67
00:05:38,110 --> 00:05:43,300
So yes, here I have already created this demo java file.

68
00:05:45,790 --> 00:05:46,270
Yes.

69
00:05:46,270 --> 00:05:48,190
So in this.

70
00:05:49,150 --> 00:05:56,320
I have created a demo class and inside this public static void main string args.

71
00:05:56,320 --> 00:06:01,720
So here is a main function inside which the ArrayList is called.

72
00:06:02,390 --> 00:06:07,250
So list integer number is equal to new ArrayList.

73
00:06:07,640 --> 00:06:14,990
This is the way to declare an analyst in Java head it.

74
00:06:15,680 --> 00:06:20,570
After writing this link I will show you writing this again.

75
00:06:21,440 --> 00:06:23,330
If I write, list her.

76
00:06:24,860 --> 00:06:28,490
It is showing that it is from the Java Library.

77
00:06:28,490 --> 00:06:35,330
And when I write this list, this import library automatically comes here.

78
00:06:35,840 --> 00:06:37,880
So after this.

79
00:06:38,700 --> 00:06:44,670
I have created a list called numbers, which contains a data type of integer.

80
00:06:44,790 --> 00:06:54,150
So this is a demo function and I am going to run some integers in the array list and show you how it

81
00:06:54,150 --> 00:06:54,720
works.

82
00:06:54,930 --> 00:07:01,050
So let me remove this first and start adding it one by one.

83
00:07:01,290 --> 00:07:08,940
So in the list called numbers, I am going to add an integer and an integer five.

84
00:07:08,970 --> 00:07:09,600
Yes.

85
00:07:09,990 --> 00:07:10,380
So.

86
00:07:10,380 --> 00:07:11,040
Yes.

87
00:07:11,430 --> 00:07:12,150
And.

88
00:07:13,830 --> 00:07:16,560
And another integer called.

89
00:07:19,210 --> 00:07:22,000
Mistakenly typing numbers.

90
00:07:22,000 --> 00:07:23,050
It is number.

91
00:07:23,080 --> 00:07:23,770
Yes.

92
00:07:24,130 --> 00:07:28,540
So number 1015 and.

93
00:07:30,230 --> 00:07:34,310
This is the method to add numbers to the list.

94
00:07:37,360 --> 00:07:38,500
It was numbers.

95
00:07:38,500 --> 00:07:39,100
Yes.

96
00:07:39,520 --> 00:07:44,470
So you may copy it multiple number of times.

97
00:07:45,310 --> 00:07:49,990
And this is the beauty of aerialist that it is.

98
00:07:50,810 --> 00:07:53,780
It is sizable and it will never say no.

99
00:07:53,990 --> 00:07:59,280
You keep adding number the rest of your life and it will never say Stop.

100
00:07:59,300 --> 00:08:00,110
I am sold.

101
00:08:01,870 --> 00:08:07,740
There is nothing like a limitation in ArrayList.

102
00:08:07,870 --> 00:08:12,520
So after adding numbers to the list, I am going to run this.

103
00:08:14,510 --> 00:08:22,190
So on running this function, I am getting the output as 515, five 1555, 1076.

104
00:08:23,330 --> 00:08:25,520
After adding some more numbers.

105
00:08:29,560 --> 00:08:33,610
I can keep doing this multiple number of times.

106
00:08:35,060 --> 00:08:38,110
Any number I can add, like.

107
00:08:38,120 --> 00:08:38,900
Yes.

108
00:08:39,110 --> 00:08:40,850
And running it again.

109
00:08:43,760 --> 00:08:44,380
Yes.

110
00:08:44,390 --> 00:08:45,650
So perfect.

111
00:08:46,040 --> 00:08:52,160
Keep adding number to the list and it will keep displaying it in the terminal.

112
00:08:53,120 --> 00:08:57,950
It will keep giving you the output and never say that I am full.

113
00:08:58,670 --> 00:09:09,200
So this feature of Java is very useful for our project as we need this kind of data type only for managing

114
00:09:09,200 --> 00:09:11,150
our teachers and students.

115
00:09:12,790 --> 00:09:23,590
So in our student dot java file and teach your Java file, we are going to use the ArrayList feature

116
00:09:24,010 --> 00:09:34,420
in the school function to call the teachers and students multiple number of times, and we can add teachers

117
00:09:34,420 --> 00:09:38,950
again, again, again and again, and adding students again and again and again.

118
00:09:39,160 --> 00:09:45,010
So let's start declaring this here as an ArrayList.

119
00:09:45,880 --> 00:09:50,320
Now let us write this teacher inside the list.

120
00:09:52,840 --> 00:09:56,260
As we discussed in the demo part.

121
00:09:56,530 --> 00:10:00,430
So yes, a list is created called Teacher.

122
00:10:01,440 --> 00:10:03,690
Similarly for the student.

123
00:10:06,850 --> 00:10:11,980
We're creating an array list for the teachers and the students.

124
00:10:13,510 --> 00:10:20,740
So here you can see that the Java Util list package is imported itself.

125
00:10:21,440 --> 00:10:32,240
And as far as I declare this list, as soon as this list is declared, the package is imported itself.

126
00:10:33,390 --> 00:10:37,380
Now we will move further.

127
00:10:39,180 --> 00:10:48,090
So after creating this school class, we have created a school object or a constructor as we see that.

128
00:10:48,210 --> 00:10:55,210
So the school object contains the parameters as an array list for teacher and student.

129
00:10:55,230 --> 00:11:02,160
So we have used this keyword for adding teachers to this object and students.

130
00:11:03,040 --> 00:11:10,180
The total money and total money spent is not inside this constructor, so there is no need to add this

131
00:11:10,180 --> 00:11:10,750
keyword.

132
00:11:11,230 --> 00:11:18,120
So yes, we have created this object school.

133
00:11:18,130 --> 00:11:22,000
So commentators object school.

134
00:11:23,520 --> 00:11:24,840
It's created.

135
00:11:27,760 --> 00:11:29,710
Now moving further.

136
00:11:30,820 --> 00:11:37,060
So the total money earned is zero in the beginning and the total money spent is zero as well.

137
00:11:37,330 --> 00:11:46,870
Now, as similar as the teacher and the student, we have to set that teachers and students to the school

138
00:11:46,870 --> 00:11:48,700
function school class.

139
00:11:50,520 --> 00:11:56,040
So we are adding teachers to the class and.

140
00:11:57,770 --> 00:11:58,280
Yes.

141
00:11:58,280 --> 00:12:02,090
So setting and getting teachers and students that most.

142
00:12:03,320 --> 00:12:09,190
There is no restrictions with teachers and students that they are they cannot be altered.

143
00:12:09,200 --> 00:12:16,790
So yes we have said and get so this public list teacher returns the teacher.

144
00:12:16,820 --> 00:12:18,470
Let me comment this out.

145
00:12:19,540 --> 00:12:25,460
It turns out the teachers in the school class.

146
00:12:26,120 --> 00:12:26,810
Yes.

147
00:12:27,140 --> 00:12:29,300
Sorry, it was the teacher in the school.

148
00:12:29,720 --> 00:12:34,730
Similarly, this set this is a set method.

149
00:12:34,730 --> 00:12:42,980
And in a of set I have used at teacher for a better understanding of the code.

150
00:12:43,700 --> 00:12:50,930
So this part updates the teachers in the school?

151
00:12:51,320 --> 00:12:52,070
Yes.

152
00:12:54,800 --> 00:13:03,580
So you can see that we have a set and get method for the teacher and similarly for the student head.

153
00:13:03,620 --> 00:13:11,720
This part returns the students in the school class and this part updates the student in the school class.

154
00:13:12,750 --> 00:13:18,600
Now for the total money on the part in the school we have said the.

155
00:13:20,320 --> 00:13:20,920
This.

156
00:13:21,190 --> 00:13:25,520
Yes, we have said this method for total money earned.

157
00:13:25,900 --> 00:13:30,130
So this returns the total money earned by the school.

158
00:13:31,510 --> 00:13:38,410
Total money earned so far, yes.

159
00:13:38,620 --> 00:13:42,940
So total money earned is returned through this function.

160
00:13:43,180 --> 00:13:51,970
And if we need to update, we are using the set method and in besides offset, we have called it update

161
00:13:51,970 --> 00:13:52,900
total money.

162
00:13:53,170 --> 00:13:56,260
So this update.

163
00:13:58,200 --> 00:13:59,110
That total money?

164
00:14:01,300 --> 00:14:01,990
Yes.

165
00:14:02,920 --> 00:14:06,350
So this updates the total money earned by the school.

166
00:14:06,370 --> 00:14:12,490
And in this, we have summed up it as a total money earned.

167
00:14:13,960 --> 00:14:17,530
This is thus some variable.

168
00:14:17,770 --> 00:14:23,590
So total money earned is a sum of total money and plus money.

169
00:14:23,590 --> 00:14:29,040
And in the beginning, yes, we have passed money on and as a parameter.

170
00:14:29,050 --> 00:14:32,050
So total money initially is zero.

171
00:14:32,290 --> 00:14:34,360
So we can write it as.

172
00:14:35,610 --> 00:14:38,370
In a comment I will show you quickly.

173
00:14:39,560 --> 00:14:40,190
Yes.

174
00:14:40,400 --> 00:14:49,190
So this is something in the beginning, it is something as zero is equal to zero plus.

175
00:14:50,040 --> 00:15:01,440
moneyAnd suppose a student submitted our fees like 20,000, so the total money on with total value of

176
00:15:01,440 --> 00:15:02,430
20,000?

177
00:15:02,790 --> 00:15:03,570
Yes.
