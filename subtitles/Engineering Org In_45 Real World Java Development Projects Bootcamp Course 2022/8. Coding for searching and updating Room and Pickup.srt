1
00:00:00,880 --> 00:00:02,300
So here is the update room.

2
00:00:02,550 --> 00:00:03,270
Java class.

3
00:00:03,280 --> 00:00:08,920
It is defined inside the package hotel and we have imported the necessary packages.

4
00:00:10,730 --> 00:00:17,420
These are the packages which contains a D border layout scale, swing, swing frame, empty border font,

5
00:00:17,420 --> 00:00:18,980
everything which will be needed.

6
00:00:19,130 --> 00:00:24,350
And there is a class update room which is extending frame initializing the connection variable as null.

7
00:00:24,380 --> 00:00:30,530
Prepare the statement as null and one g panel and for text field.

8
00:00:30,560 --> 00:00:35,690
These are all private instances of this class and the choice variable as c one.

9
00:00:35,990 --> 00:00:38,300
Then there is a main function.

10
00:00:40,480 --> 00:00:47,350
Inside, which we have called the current stance of this class and setting it to frame invisibility

11
00:00:47,350 --> 00:00:48,220
as true.

12
00:00:48,550 --> 00:00:55,000
Then inside the closed method, we have disclosed disposed to the object and inside the public update

13
00:00:55,000 --> 00:00:57,100
room through which is throwing as well exception.

14
00:00:57,100 --> 00:01:03,250
This is the non parameterized constructor of this class and we have set the default close operation

15
00:01:03,250 --> 00:01:12,580
setting the bound of it and content pane that is a new J panel bottom layout of this panel and then

16
00:01:12,580 --> 00:01:15,730
adding it to the frame and adding its layout as null.

17
00:01:16,120 --> 00:01:21,250
Then we have added an image icon by using a label and image icon objects.

18
00:01:21,250 --> 00:01:28,030
That label is I2 and adding the label is L one, setting it bound and adding it to a frame.

19
00:01:28,270 --> 00:01:35,980
Then there is a label slave state which is stating update room status setting font for it and setting

20
00:01:35,980 --> 00:01:37,360
the bound for it as well.

21
00:01:38,890 --> 00:01:43,510
Then we have added that to our panel label under the label as guest ID.

22
00:01:45,190 --> 00:01:47,080
Setting the bond for it, adding it to our panel.

23
00:01:47,080 --> 00:01:48,730
Then there is a choice inside the tribe.

24
00:01:48,970 --> 00:01:54,430
We have created a connection with our database, executing the query select from customer but will iterate

25
00:01:54,430 --> 00:02:00,070
over our restart next while we'll trade over the rows or the data records of the customer inside the

26
00:02:00,070 --> 00:02:04,990
customer table and add the number of those customers to the choice.

27
00:02:05,230 --> 00:02:08,650
Then setting the bound for the choice and adding that choice to our panel.

28
00:02:08,650 --> 00:02:14,070
Then there is a label availability stating as availability, label setting the bound for the data adding

29
00:02:14,080 --> 00:02:14,830
to our panel.

30
00:02:14,830 --> 00:02:18,880
Then there is another label as clean status, setting the bound for it and adding to our panel.

31
00:02:18,940 --> 00:02:24,220
Then there is another text field with respect to the above those labels.

32
00:02:26,150 --> 00:02:28,730
Sitting down for the text, adding that to our panel.

33
00:02:28,820 --> 00:02:35,000
And similarly for another text field, that is for a status setting bound for it, adding it to our

34
00:02:35,000 --> 00:02:35,590
panel.

35
00:02:35,600 --> 00:02:44,150
Then there is a text field for the respective room label and setting the bound for it and adding it

36
00:02:44,150 --> 00:02:45,860
to our panel.

37
00:02:47,570 --> 00:02:51,560
Then there is J button which is check.

38
00:02:51,860 --> 00:02:53,870
We have defined X and perform limit for it.

39
00:02:54,630 --> 00:02:58,860
His string as one will get the selected item from the choice.

40
00:03:00,420 --> 00:03:02,430
And we have defined a connection here.

41
00:03:04,720 --> 00:03:07,900
Executed the query which is select extra from customer where number is equal to S1.

42
00:03:07,900 --> 00:03:13,030
So for that particular number, the data from the customer table will be fetched and over that record

43
00:03:13,030 --> 00:03:15,550
it will add text room.

44
00:03:15,550 --> 00:03:22,180
So in the text field it will send the text from the room number of that particular result set.

45
00:03:22,540 --> 00:03:28,390
And similarly for another type log, it will execute the text from room number.

46
00:03:28,390 --> 00:03:35,380
So for the room number from the room, it will select the record from the room, from the fetch current

47
00:03:35,380 --> 00:03:39,070
room number which will be selected or that data or record.

48
00:03:39,070 --> 00:03:45,930
It will iterate and set the availability as availability from the record and clean status from clean

49
00:03:45,940 --> 00:03:47,050
status from the record.

50
00:03:47,200 --> 00:03:48,340
Setting the.

51
00:03:50,520 --> 00:03:53,580
Brown of the button foreground color and background color.

52
00:03:53,610 --> 00:04:00,170
Then there is an update button on which we have upon the action event, which will update the status.

53
00:04:00,180 --> 00:04:04,500
So a clean status here updated by executing the query.

54
00:04:04,650 --> 00:04:08,850
A dialog box will appear after the addition that is updated, successful.

55
00:04:08,940 --> 00:04:14,520
And after that we have bound for the button updated the background.

56
00:04:17,230 --> 00:04:17,770
Calories.

57
00:04:17,770 --> 00:04:19,990
Black for calories white.

58
00:04:19,990 --> 00:04:20,620
And.

59
00:04:22,020 --> 00:04:23,610
Added that baton to our panel.

60
00:04:23,970 --> 00:04:26,880
Then there is another button as exit.

61
00:04:28,140 --> 00:04:32,880
For which action profound method inside which we have defined a new reception set visibility as true

62
00:04:32,880 --> 00:04:34,500
and correct visibility as false.

63
00:04:34,680 --> 00:04:40,680
It is bounce off button background color of button, foreground color of button, adding that the label

64
00:04:40,680 --> 00:04:46,560
and there is a last label as room number setting the bound for the room number adding the to that our

65
00:04:46,560 --> 00:04:48,560
panel and then there is a.

66
00:04:50,110 --> 00:04:54,100
Setting of background, color of the complete frame.

67
00:04:54,730 --> 00:04:58,240
Let's look at the next class, which is a pick up Java class.

68
00:04:58,330 --> 00:05:00,280
Define inside the package hotel.

69
00:05:00,640 --> 00:05:03,960
We have imported the necessary packages.

70
00:05:03,970 --> 00:05:05,920
Then we have defined the class.

71
00:05:08,160 --> 00:05:12,840
Which is extending from our connection very well as a prepared statement, as null results that has

72
00:05:12,840 --> 00:05:17,730
null private channel content pane, private label table and the choice events are the main function.

73
00:05:17,730 --> 00:05:23,280
We have defined public void run method, which is initializing the current class object and setting

74
00:05:23,280 --> 00:05:26,190
its visibility as true inside the dispo close.

75
00:05:26,190 --> 00:05:28,920
We are disposing the current object.

76
00:05:28,920 --> 00:05:33,630
Then we have defined the non parameterized constructor which is throwing a SQL exception, setting the

77
00:05:34,290 --> 00:05:39,150
default close operation of the frame bounds for the frame, and initializing a new panel border for

78
00:05:39,180 --> 00:05:40,050
that panel.

79
00:05:40,440 --> 00:05:41,490
Setting the current.

80
00:05:41,820 --> 00:05:43,320
Adding that panel to the frame.

81
00:05:43,320 --> 00:05:44,610
Setting the layout of the panel.

82
00:05:44,610 --> 00:05:48,810
Then there is a label as pickup service, setting the font for that label.

83
00:05:51,250 --> 00:05:54,340
Adding the bound for that label and adding it to our panel.

84
00:05:54,340 --> 00:05:59,110
Next level is the type of car setting the bond for it, adding it to the panel.

85
00:05:59,170 --> 00:06:03,910
Then there's a second choice inside which the choice will be selected from the database for which we

86
00:06:03,910 --> 00:06:06,090
have initialize the connection from the connection class.

87
00:06:06,100 --> 00:06:08,650
Then there is a result set inside the result set.

88
00:06:08,710 --> 00:06:14,320
We have executed a query select exit from driver so as it has a pick up class.

89
00:06:14,320 --> 00:06:17,800
So it will take the data from the driver class.

90
00:06:18,400 --> 00:06:20,500
It will trade over the record of the driver.

91
00:06:21,900 --> 00:06:25,320
Using Aristotle next after that seven point ad.

92
00:06:25,320 --> 00:06:30,690
So it will add the choices, brands of cars into the choice.

93
00:06:31,020 --> 00:06:34,700
Then there is a setting the bound for that choice and adding it to our panel.

94
00:06:34,710 --> 00:06:37,230
Then there is a label label for.

95
00:06:38,930 --> 00:06:40,010
Hiding the label.

96
00:06:41,140 --> 00:06:43,690
Setting the bound for it, adding it to our panel.

97
00:06:43,690 --> 00:06:47,200
Then there's a button labelled as display.

98
00:06:48,270 --> 00:06:51,030
Defining action performed on that button.

99
00:06:51,860 --> 00:06:52,100
Huh?

100
00:06:52,730 --> 00:06:55,220
There is a grocery store in the string as well.

101
00:06:55,240 --> 00:07:00,280
So that Astrovan driver brand is able to select a brand from the choice inside.

102
00:07:00,310 --> 00:07:00,770
Right.

103
00:07:01,430 --> 00:07:06,530
Initializing the connection, executing that query and setting the table model.

104
00:07:06,920 --> 00:07:09,330
Then setting the bound for that button.

105
00:07:09,350 --> 00:07:10,250
Background color.

106
00:07:10,250 --> 00:07:11,090
Foreground color.

107
00:07:11,090 --> 00:07:12,050
And that's.

108
00:07:13,910 --> 00:07:15,770
Adding it to that our panel.

109
00:07:15,800 --> 00:07:20,870
Then there is a button exit defining it's action performed.

110
00:07:21,590 --> 00:07:26,960
New reception will be true and can visibility as false defining it's bound for the background color,

111
00:07:27,140 --> 00:07:29,050
foreground color and adding it to our panel.

112
00:07:29,060 --> 00:07:35,750
Then there is a G panel defining its bound, adding it to our panel similarly for the label age.

113
00:07:36,670 --> 00:07:37,900
Label gender.

114
00:07:39,310 --> 00:07:40,660
Label company.

115
00:07:41,690 --> 00:07:42,440
And.

116
00:07:43,650 --> 00:07:45,090
The label brand.

117
00:07:46,550 --> 00:07:53,510
Label available and then at last label location, we have set the bound for all these labels and add

118
00:07:53,510 --> 00:07:54,740
it to our panel.

119
00:07:54,770 --> 00:08:00,680
At last there is a get content pane which is setting the background color as white for that complete

120
00:08:00,950 --> 00:08:02,210
window or frame.

121
00:08:03,210 --> 00:08:05,790
The last class of this project is search room.

122
00:08:07,160 --> 00:08:13,040
Define inside the package hotel imported the necessary package of that for that class.

123
00:08:13,730 --> 00:08:16,070
Class is defined which is extending the frame.

124
00:08:17,590 --> 00:08:24,550
Connection 11 a prepared statement as null results set as null age panel or text field or table at choice

125
00:08:25,270 --> 00:08:28,600
inside main, we have created the current NSA instance.

126
00:08:29,740 --> 00:08:31,870
Setting the visibility of the instance as true.

127
00:08:31,870 --> 00:08:36,130
Then inside the closed method we have closed disposed the current object of the class.

128
00:08:36,130 --> 00:08:39,430
Then there is a non parameterized constructor of this class.

129
00:08:40,610 --> 00:08:44,460
Setting the default close operation of the frame, bound for the frame and standing.

130
00:08:44,510 --> 00:08:48,020
And another panel creating the border of the panel.

131
00:08:48,560 --> 00:08:52,700
Adding it to the frame, then adding its layout.

132
00:08:54,680 --> 00:08:58,730
Then there is a label search for room setting, font for it.

133
00:08:58,910 --> 00:08:59,810
Bound for it.

134
00:08:59,810 --> 00:09:00,440
And.

135
00:09:01,390 --> 00:09:02,770
Adding it to our panel.

136
00:09:03,190 --> 00:09:09,250
Then there is a room, bed type, room, bed type setting bound for it, adding it to our panel.

137
00:09:09,580 --> 00:09:13,330
Then there is a label room number sitting bound for it, adding it to our panel.

138
00:09:13,360 --> 00:09:16,990
Similarly, there is availability setting, bound for it, adding to our panel.

139
00:09:17,020 --> 00:09:20,590
Similarly, for the price setting, bound for it and adding to our panel.

140
00:09:20,860 --> 00:09:27,580
Then there is a bedtime setting bound for it, adding to our panel and there is a checkbox only display

141
00:09:27,580 --> 00:09:28,270
available.

142
00:09:28,270 --> 00:09:33,760
So this we have added to our panel set after setting bound and its background color.

143
00:09:34,030 --> 00:09:38,590
Then there is one choice either can we see a single bed or double bed setting bound for it and add it

144
00:09:38,590 --> 00:09:40,390
to our panel as well.

145
00:09:42,680 --> 00:09:48,170
Then for the button search, we have performed the action performed inside which we have created the

146
00:09:48,170 --> 00:09:52,490
SQL query, which is a state that select as the reform room where by type.

147
00:09:52,490 --> 00:09:56,890
So the type which will be selected, it will fetch the record from the room for that particular type.

148
00:09:56,900 --> 00:10:01,460
Second query will fetch the record from the room where availability is equal to available and that type

149
00:10:01,460 --> 00:10:03,800
is equal to selected type.

150
00:10:04,210 --> 00:10:09,290
After that, inside a type log we have initialize the connection, executed the scale query and the

151
00:10:09,290 --> 00:10:17,720
setup result in our model table inside which if the checksum is selected, then we have executed the

152
00:10:17,720 --> 00:10:19,010
query SQL to.

153
00:10:20,390 --> 00:10:24,350
And said that to our table its catalog will handle any exception.

154
00:10:24,350 --> 00:10:27,050
If, of course, then we have.

155
00:10:30,390 --> 00:10:34,890
Set the tone for the button background color of the button for one color of the button, adding it to

156
00:10:34,890 --> 00:10:35,580
our panel.

157
00:10:35,610 --> 00:10:36,930
Then there's the exit button.

158
00:10:37,050 --> 00:10:40,050
Exit button, which is labeled as back.

159
00:10:40,050 --> 00:10:45,950
And it's action performance that has been defined here, which is a new reception will be true and current

160
00:10:45,960 --> 00:10:51,630
visibility as follows setting it down and setting the foreground for it, background color for it,

161
00:10:51,630 --> 00:10:53,490
and adding that button.

162
00:10:55,050 --> 00:10:55,910
To our panel.

163
00:10:55,920 --> 00:11:01,400
Then there is a table sitting bound, bound for the table, adding the table to all.

164
00:11:03,090 --> 00:11:03,610
Panel.

165
00:11:03,630 --> 00:11:04,770
Then there is the label.

166
00:11:06,220 --> 00:11:14,950
Claim status bound of the label, adding to our panel, then setting the background color of the complete

167
00:11:14,950 --> 00:11:16,180
window as white.

168
00:11:17,710 --> 00:11:21,340
So these are the last three classes of this project.

169
00:11:21,640 --> 00:11:26,740
In the next video, we will going to take a look on the complete run of this project, how this project

170
00:11:26,740 --> 00:11:32,710
is running, and also displaying that the data is actually changing in the database as well.

171
00:11:32,710 --> 00:11:41,170
We will do anything from this standalone application or a desktop based application for the hotel management

172
00:11:41,170 --> 00:11:41,770
system.

173
00:11:41,770 --> 00:11:46,330
So in this video, let's have a look at the running of these three classes.

174
00:11:46,510 --> 00:11:50,980
So if I run this update room or Java, it will look like this.

175
00:11:52,920 --> 00:11:56,700
Don't have any study because haven't added any data yet.

176
00:11:56,940 --> 00:12:00,090
The three buttons check or update or Mac.

177
00:12:00,910 --> 00:12:03,700
Now let's close this.

178
00:12:05,910 --> 00:12:09,450
How we look at the pick up to watch our final run.

179
00:12:10,200 --> 00:12:11,280
Let's run this file.

180
00:12:12,600 --> 00:12:15,180
This is how pickup service will look like.

181
00:12:16,700 --> 00:12:16,970
Till now.

182
00:12:17,020 --> 00:12:19,000
No data because I haven't edited it.

183
00:12:19,270 --> 00:12:23,050
I will be showing the complete run in the next video.

184
00:12:24,840 --> 00:12:25,470
Close it.

185
00:12:26,490 --> 00:12:27,840
The inside search room.

186
00:12:28,500 --> 00:12:30,360
We will run this file as well.

187
00:12:32,160 --> 00:12:37,590
So this is how the search room will look if you click on only display available, so only the available

188
00:12:37,590 --> 00:12:38,710
rooms will be displayed.

189
00:12:38,730 --> 00:12:45,800
If you uncheck it, then the available and occupied both type of rooms will be displayed either against

190
00:12:45,840 --> 00:12:47,670
select single bed or double bed from here.

191
00:12:48,210 --> 00:12:53,640
So that's all about the last three classes of this project.
