WEBVTT
1
00:00:00.390 --> 00:00:06.840
So I tell the last part, we have like declared all the global variables which are going to be required

2
00:00:06.840 --> 00:00:08.460
inside our application.

3
00:00:08.730 --> 00:00:15.720
We have imported all the packages which are going to be required and we have downloaded the resources,

4
00:00:15.720 --> 00:00:21.150
the image resources which are going to be involved in the application.

5
00:00:21.240 --> 00:00:26.850
So, yes, this was all about the declaration and the resources building path.

6
00:00:26.910 --> 00:00:31.860
Now coming to this build function, which is building the frame of the application.

7
00:00:31.860 --> 00:00:35.490
So we have a frame like a layout for the frame.

8
00:00:35.850 --> 00:00:43.110
We have set the background colour and image for the application, so it should open with the help of

9
00:00:43.110 --> 00:00:43.830
that icon.

10
00:00:43.830 --> 00:00:49.180
So the icon is going to be this file for dot jpg, which we have downloaded already.

11
00:00:49.200 --> 00:00:58.170
Now the set preferred size for the frame set focus equal to two as by default it is set to false and

12
00:00:58.170 --> 00:00:59.130
the j button.

13
00:00:59.130 --> 00:01:01.710
So what these buttons are for.

14
00:01:01.950 --> 00:01:05.700
So firstly, this button is for the back button.

15
00:01:06.600 --> 00:01:10.560
So here in the application we are adding a back button.

16
00:01:11.250 --> 00:01:14.160
We will see that when we will run the application.

17
00:01:15.430 --> 00:01:23.710
Also this text field for the header, you can see that this text field is containing the path.

18
00:01:23.710 --> 00:01:26.950
So currently it is showing a computer here.

19
00:01:26.950 --> 00:01:31.210
We have written it as my computer, so here it is computer.

20
00:01:31.210 --> 00:01:32.950
We can update it accordingly.

21
00:01:32.950 --> 00:01:39.670
But basically this is a text field which will contain the path of whatever folder which is open.

22
00:01:39.670 --> 00:01:47.410
So we have already seen that this was updating continuously with no timeline and containing the accurate

23
00:01:47.410 --> 00:01:50.440
part of the folder which is open here.

24
00:01:50.440 --> 00:01:55.840
We can see that it is containing the as we are inside the D drive.

25
00:01:56.660 --> 00:02:00.790
Now the next panel is containing the buttons.

26
00:02:00.800 --> 00:02:07.100
So this was the panel for the text in the header part of the window.

27
00:02:07.130 --> 00:02:09.650
Now this is going to contain the buttons.

28
00:02:09.650 --> 00:02:13.980
So the new folder, the new file, the rename and the save buttons.

29
00:02:14.000 --> 00:02:20.320
So these are all the four buttons we are concerned about save, rename, new file and new folder.

30
00:02:20.330 --> 00:02:29.930
So all these four buttons are added to the frame with the help of this add file button keyboard.

31
00:02:29.930 --> 00:02:38.690
So this adds the buttons to the window like these four buttons are updating with the help of the button

32
00:02:38.690 --> 00:02:45.860
component of the string library, and we will be adding the action listeners to these buttons later.

33
00:02:45.860 --> 00:02:49.640
So let us firstly add what is left.

34
00:02:49.640 --> 00:02:52.940
So we are creating a G panel again.

35
00:02:54.130 --> 00:02:55.710
For the full panel.

36
00:02:55.720 --> 00:02:56.320
Buttons.

37
00:02:56.320 --> 00:02:57.700
Sew buttons.

38
00:02:58.330 --> 00:02:59.560
Pewter panel.

39
00:03:01.600 --> 00:03:02.230
And.

40
00:03:04.370 --> 00:03:06.560
It will create a new J panel.

41
00:03:09.480 --> 00:03:09.930
Okay.

42
00:03:09.930 --> 00:03:15.210
So we have to set the opacity of the buttons for the panel.

43
00:03:16.590 --> 00:03:19.440
Not said topic to force.

44
00:03:20.760 --> 00:03:24.690
It is going to be slightly translucent.

45
00:03:24.690 --> 00:03:33.210
We can see that and we have to set it to four as the opacity is not going to be as that it is going

46
00:03:33.210 --> 00:03:36.450
to be transparent, a little bit translucent.

47
00:03:36.450 --> 00:03:40.290
We can say that you can see that the buttons are not opaque.

48
00:03:40.620 --> 00:03:45.780
Now the next part is or set the layout for the footer panel.

49
00:03:45.810 --> 00:03:47.430
So buttons.

50
00:03:48.450 --> 00:03:57.750
Puter panel dot set layout so that our footer is containing our dedicated layout inside the frame.

51
00:03:57.810 --> 00:04:03.030
So we have to set the layout as new flow layout.

52
00:04:04.800 --> 00:04:11.280
And this floor layout is going to contain argument zero.

53
00:04:12.980 --> 00:04:14.880
So the water is flowing.

54
00:04:14.900 --> 00:04:18.290
You can see that this is called a flow layout.

55
00:04:18.920 --> 00:04:23.500
Now the next thing we are going to add buttons to the footer.

56
00:04:23.510 --> 00:04:25.670
So we are having four buttons.

57
00:04:25.670 --> 00:04:29.090
So we will be adding all the four buttons to the footer panel.

58
00:04:29.120 --> 00:04:36.260
So buttons, footer, panel, dot add and we will be adding components as.

59
00:04:36.560 --> 00:04:38.020
So what are the buttons?

60
00:04:38.030 --> 00:04:40.610
Firstly, we are having save file button.

61
00:04:41.300 --> 00:04:42.890
So yes, here it is.

62
00:04:43.280 --> 00:04:53.000
Now I will be copying this part three more times as there are a total of four buttons and the components

63
00:04:53.000 --> 00:04:55.490
are going to be name.

64
00:04:57.690 --> 00:04:58.770
By button.

65
00:04:59.550 --> 00:05:00.900
The next one is.

66
00:05:02.870 --> 00:05:03.040
Okay.

67
00:05:03.200 --> 00:05:07.490
So what are the next two buttons, the new folder and the new file button.

68
00:05:07.940 --> 00:05:14.270
So copying it again and passing the component says add file.

69
00:05:16.210 --> 00:05:22.120
But then and at last add folder button.

70
00:05:23.700 --> 00:05:23.920
Okay.

71
00:05:24.030 --> 00:05:28.290
So this is how we have added buttons to the footer panel.

72
00:05:28.500 --> 00:05:35.220
Now, the next concern is to cover this element's counterpart.

73
00:05:35.280 --> 00:05:40.710
So we have to count the number of elements which is initially present.

74
00:05:40.710 --> 00:05:46.680
And whenever we open a folder, then count that number of elements and then display here.

75
00:05:46.890 --> 00:05:52.020
So we have to write the separate code snippet for that.

76
00:05:52.290 --> 00:05:56.940
So file this is going to count the number of files.

77
00:05:56.940 --> 00:06:01.650
So we are calling it as file, creating the method file.

78
00:06:02.160 --> 00:06:05.190
Current folder is going to be the argument.

79
00:06:05.280 --> 00:06:09.060
So whatever is the current folder we are inside.

80
00:06:09.210 --> 00:06:14.250
It is counting the number of files and folder inside that.

81
00:06:14.430 --> 00:06:16.920
So footer info label.

82
00:06:19.240 --> 00:06:24.040
And a new label for that counter.

83
00:06:24.040 --> 00:06:26.110
We can call it as counters.

84
00:06:26.590 --> 00:06:27.280
Now.

85
00:06:29.260 --> 00:06:30.000
A bracket.

86
00:06:30.010 --> 00:06:38.300
Of course, jailable is a component, so whenever we have to call it, we have to use brackets now for

87
00:06:38.300 --> 00:06:39.240
testing for labour.

88
00:06:39.460 --> 00:06:40.960
So we have to set icon.

89
00:06:41.170 --> 00:06:47.650
You can see that there is a tiny icon and it is a white colored tiny icon.

90
00:06:47.650 --> 00:06:50.320
So we have to set the icon, of course.

91
00:06:50.950 --> 00:06:53.710
So it is it already present icon.

92
00:06:53.920 --> 00:06:58.300
We can just call it whatever info label dot set icon.

93
00:06:59.660 --> 00:07:01.940
And the icon is going to be.

94
00:07:02.730 --> 00:07:04.020
File system view.

95
00:07:05.380 --> 00:07:09.970
File system we can call it from the suggestions dot.

96
00:07:10.450 --> 00:07:12.190
Get system icon.

97
00:07:13.220 --> 00:07:14.330
What a fine.

98
00:07:14.630 --> 00:07:21.840
So yes we are calling these or already embedded icons inside the.

99
00:07:21.980 --> 00:07:29.220
So jailable is written as jailable so that it is gone for infallible.

100
00:07:29.240 --> 00:07:36.890
We have called that icon for our system icon, which is already present inside the Java library.

101
00:07:37.310 --> 00:07:44.110
And after that, I can think we have to like decide it according to the path of that folder.

102
00:07:44.120 --> 00:07:52.220
Whatever path is the header is containing, it should show the count according to that path only.

103
00:07:54.210 --> 00:08:02.370
So after creating the food label, this was the food label adding four buttons to the food label.

104
00:08:02.400 --> 00:08:06.150
We were kind of like talking about this part.

105
00:08:06.510 --> 00:08:12.390
The part will be update the count for the number of folders present.

106
00:08:12.390 --> 00:08:15.640
So by default it will contain three elements.

107
00:08:15.660 --> 00:08:22.180
As we were having three divisions for the hard disk, the C, the D and the E drive.

108
00:08:22.200 --> 00:08:30.240
So this is going to be the initial text and then this folder label is going to update according to that

109
00:08:30.330 --> 00:08:31.170
file path.

110
00:08:31.170 --> 00:08:34.620
So it will get the number of calls from the path.

111
00:08:34.890 --> 00:08:39.270
Whenever we will update the path here, it is going to update accordingly.

112
00:08:39.280 --> 00:08:42.590
So initially it was three and now it is 31.

113
00:08:42.600 --> 00:08:43.740
You can see that.

114
00:08:43.740 --> 00:08:47.790
So this is how it is updating itself according to the path.

115
00:08:48.060 --> 00:08:51.540
This is the dimension for that panel.

116
00:08:52.080 --> 00:08:57.960
It is containing a return, a height, a font style, of course, and the background color.

117
00:08:58.200 --> 00:09:01.140
So it is written in a white text.

118
00:09:01.140 --> 00:09:02.880
So this is the font color.

119
00:09:02.880 --> 00:09:05.010
We have set it as color dot white.

120
00:09:05.370 --> 00:09:11.880
This is how we can set the font color and the size for the font now coming to the next part.

121
00:09:11.880 --> 00:09:14.220
So this is the footer panel.

122
00:09:14.250 --> 00:09:18.060
We have added this current folder as a method.

123
00:09:18.060 --> 00:09:21.270
We have to add that footer panel inside the panel.

124
00:09:22.020 --> 00:09:28.530
So totally these are the panel which is creating the panels and handling the panels.

125
00:09:28.530 --> 00:09:35.220
So once we have created this footer panel, footer info panel, we can see that we have to add it inside

126
00:09:35.220 --> 00:09:37.710
the frame with the help of this method.

127
00:09:38.400 --> 00:09:45.990
Now, the Next Edge panel is going to be for the display panel we are having here.

128
00:09:45.990 --> 00:09:51.630
So here you can see that we are having two divisions of this frame.

129
00:09:51.630 --> 00:09:57.540
This we are calling it a show panel and this we are calling it as a display panel.

130
00:09:57.630 --> 00:10:04.920
So we have created a footer panel, a header panel which will contain the path and the show panel.

131
00:10:04.950 --> 00:10:08.520
Now, this is the display panel we are talking about.

132
00:10:08.520 --> 00:10:12.480
So here you can see that after the footer panel.

133
00:10:12.480 --> 00:10:14.910
We are here with the display panel.

134
00:10:15.030 --> 00:10:19.530
So this display panel is containing a preferred size.

135
00:10:19.530 --> 00:10:22.710
It is containing a size inside the frame head.

136
00:10:22.710 --> 00:10:28.350
You can see that we are also resizing it with the help of this scroller.

137
00:10:28.350 --> 00:10:35.190
We can say that we were dragging the scroller and resizing that this plan, the show pane according

138
00:10:35.190 --> 00:10:36.300
to our use.

139
00:10:36.450 --> 00:10:39.560
So yes, this was all about the display pane.

140
00:10:39.570 --> 00:10:47.190
It contains a layout and we have to add that for like footer panel on the display panel to the frame.

141
00:10:47.220 --> 00:10:51.420
After this we are coming to the file browser constructor.

142
00:10:51.600 --> 00:10:55.020
So we have created the build function.

143
00:10:55.440 --> 00:11:00.150
This build function was creating all the things about the frame.

144
00:11:00.150 --> 00:11:08.460
It was basically adding every component inside the frame, whether it be the panels, the buttons and

145
00:11:08.460 --> 00:11:09.300
everything.

146
00:11:09.900 --> 00:11:15.690
Now, after the build function, we are coming to the file browser constructor.

147
00:11:15.690 --> 00:11:23.580
So inside this file browser constructor, we have called this file system view method to get this view

148
00:11:23.880 --> 00:11:25.860
enough form of file.

149
00:11:25.860 --> 00:11:32.910
So here we call this like loop, which is a padding on the screen as file system view.

150
00:11:32.910 --> 00:11:40.940
Inside this, initially we are creating a computer object which is containing default, mutable three

151
00:11:40.950 --> 00:11:41.610
notes.

152
00:11:41.610 --> 00:11:46.170
So these are the default multiple tree nodes which we have created.

153
00:11:46.320 --> 00:11:54.390
So basically inside the file browser constructor, we are attaching functionalities to the file browser.

154
00:11:54.390 --> 00:12:02.760
Initially it was like containing no subfolders and some files only the C, D and E drives were open.

155
00:12:03.210 --> 00:12:06.540
So yes, this was how initially it was.

156
00:12:06.570 --> 00:12:14.880
Now later whenever we add nodes to the tree, what basically notes that her notes are the soft folder

157
00:12:14.880 --> 00:12:16.500
to the drive divisions.

158
00:12:16.500 --> 00:12:24.240
So once we add a like subdivisions folders inside the tree, we will call it as nodes.

159
00:12:24.240 --> 00:12:28.310
And this part is completely handling the hierarchy.

160
00:12:28.320 --> 00:12:34.290
L look for the file browser, so things are opening in the form of a tree.

161
00:12:34.290 --> 00:12:37.110
These are the nodes and these are the parents.

162
00:12:37.260 --> 00:12:42.310
So this is how this file browser constructor is looking up to.

163
00:12:43.350 --> 00:12:50.790
We are adding mouse listeners and set self render, so we have to render all the files here once we

164
00:12:50.790 --> 00:12:52.470
click on this key or.

165
00:12:52.650 --> 00:13:00.090
The subfolders will be rendered inside this day and this expansion we can see that will show pain will

166
00:13:00.090 --> 00:13:05.700
be like not expanded anymore it will used to its parent.

167
00:13:06.360 --> 00:13:09.450
Also the Muslins we have discussed about it.

168
00:13:09.840 --> 00:13:13.020
We are handling the folders with a click of a mouse.

169
00:13:13.080 --> 00:13:15.000
Also the tree selection.

170
00:13:15.000 --> 00:13:15.440
Listening.

171
00:13:15.600 --> 00:13:16.410
So.

172
00:13:17.190 --> 00:13:23.850
We have to select any tree, and that tree will be expanded to its children, of course.

173
00:13:24.540 --> 00:13:32.760
So whatever we are opening, whichever folder we are opening, this text field is changing its value

174
00:13:32.790 --> 00:13:36.030
according to that specific folder spot.

175
00:13:36.060 --> 00:13:40.020
So we have to set the functionalities for that part.

176
00:13:40.020 --> 00:13:47.600
Also that how according to the tree model is changing, it is rendering itself, rendering itself.

177
00:13:47.610 --> 00:13:50.880
Then the path value is also changing accordingly.

178
00:13:50.910 --> 00:13:55.770
So this public void value change the function containing a tree selection event.

179
00:13:55.800 --> 00:13:59.400
So basically we are selecting an event from the tree.

180
00:13:59.430 --> 00:14:01.580
These tree selection is a method.

181
00:14:01.590 --> 00:14:06.930
We are selecting an event from the tree and that value of the path is changing accordingly.

182
00:14:07.200 --> 00:14:13.950
So the default material tree node, which we have already created as a method earlier, is going to

183
00:14:13.950 --> 00:14:19.020
contain the nodes and that path is going to be taken as event.

184
00:14:19.410 --> 00:14:27.120
So whatever the path is, that event is will update the path in the text field here in the header path.

185
00:14:27.240 --> 00:14:34.560
So yes, initially it will contain our text, my computer and later we will update it to the.

186
00:14:35.570 --> 00:14:39.590
But I suppose we haven't like opened this paint folder.

187
00:14:39.590 --> 00:14:42.160
Then it will be updated to be slash.

188
00:14:42.950 --> 00:14:44.960
Well, what is ten point paint?

189
00:14:44.960 --> 00:14:50.510
And inside the subfolder we are opening, then accordingly the path will be updated.

190
00:14:50.570 --> 00:14:54.260
So this is how this value change function is working.

191
00:14:54.830 --> 00:14:57.710
We have to add a three expansion listener.

192
00:14:57.710 --> 00:15:02.800
So a three is expanding and the path is updating according to that.

193
00:15:02.810 --> 00:15:06.290
So the three expanding listener is also a function.

194
00:15:06.590 --> 00:15:11.370
The program should listen to that three expansion.

195
00:15:11.390 --> 00:15:18.620
That's how this tree is expanding and what should be the folders which should appear on the show panel.

196
00:15:19.040 --> 00:15:22.780
And yes, this was how we were creating the child.

197
00:15:23.450 --> 00:15:29.480
Once we reduce that three, the children's note should be removed.

198
00:15:29.510 --> 00:15:31.640
Only the parent should be visible.

199
00:15:31.850 --> 00:15:34.850
And we have added a thread runner.

200
00:15:34.850 --> 00:15:38.990
So we have discussed about it that this is opening in a threaded manner.

201
00:15:39.320 --> 00:15:41.760
So yes, this was all about till now.

202
00:15:41.780 --> 00:15:44.930
Now the next part, we will cover a few more functionalities.
