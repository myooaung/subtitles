1
00:00:00,540 --> 00:00:08,370
Now so that we have like initialized all the global variables, all the objects which are going to be

2
00:00:08,370 --> 00:00:10,290
required in this project.

3
00:00:10,320 --> 00:00:17,820
Now, in the next step, we are going to be concerned about launching the application, and we have

4
00:00:17,820 --> 00:00:20,020
already mentioned it here also.

5
00:00:20,040 --> 00:00:28,890
So we have created the mean class named it not stresses is not Java and now we are worried about functionalities

6
00:00:28,890 --> 00:00:31,220
for launching the application.

7
00:00:31,230 --> 00:00:41,640
So firstly we have to create a function of course so that we can move forward in order to add anything

8
00:00:41,640 --> 00:00:42,510
inside it.

9
00:00:43,800 --> 00:00:52,110
So it is going to be a main function taking string argument and.

10
00:00:52,920 --> 00:00:55,640
After which arcs.

11
00:00:56,220 --> 00:01:05,910
So we have created our function and inside this function we are going to like add cases for running

12
00:01:05,910 --> 00:01:14,820
after application, opening the like application in a separate window and then other processes involved

13
00:01:14,820 --> 00:01:15,180
here.

14
00:01:16,300 --> 00:01:26,020
So this is the required functionality for launching of the application and this consists of a try and

15
00:01:26,020 --> 00:01:34,810
catch error like exceptional hand handling method and this is going to handle all the exception if suppose

16
00:01:34,810 --> 00:01:46,180
there are any complexities in a runtime of the application, so this try and catch exception handling

17
00:01:46,180 --> 00:01:57,940
methods are per listing that if like try to open this window in a new window and windows dots like we

18
00:01:57,940 --> 00:02:00,070
are setting visible to true.

19
00:02:00,070 --> 00:02:05,830
We have already covered this that by default visibility is set to false.

20
00:02:05,830 --> 00:02:12,550
So in order to make the frame visible in a new window, we have to set visibility to true.

21
00:02:12,550 --> 00:02:22,420
So suppose like we are trying to open this window and if some exception arises then we will like catch

22
00:02:22,420 --> 00:02:28,810
that exception and we will print step three like print stack press.

23
00:02:28,810 --> 00:02:37,810
And this is going to handle the exception like any of the runtime errors appearing by launching of the

24
00:02:37,810 --> 00:02:38,560
application.

25
00:02:38,560 --> 00:02:39,100
Yes.

26
00:02:39,100 --> 00:02:45,670
And this event you invoke later is handling the re-enable window.

27
00:02:46,030 --> 00:02:55,060
We have already seen that the window was responsive and the difference difference in the window is going

28
00:02:55,060 --> 00:02:57,850
to handle with the help of this statement.

29
00:02:57,850 --> 00:03:07,420
And this will make the window run even after this, a covering of running the like, launching the application

30
00:03:07,420 --> 00:03:07,900
part.

31
00:03:07,930 --> 00:03:17,350
Our next concern is to create the application like how to handle functions or for the read layout,

32
00:03:17,350 --> 00:03:20,260
the buttons and everything inside the frame.

33
00:03:20,770 --> 00:03:31,090
So for creating the application, firstly we are going to initialize public and this function which

34
00:03:31,090 --> 00:03:34,660
is going to initialize the application.

35
00:03:35,080 --> 00:03:38,890
Like initially the window was opening.

36
00:03:38,890 --> 00:03:49,750
I already showed you that an empty of nine blocks is going to open when we like run the application.

37
00:03:50,020 --> 00:03:58,270
So this is going to be responsible for that initialization and we are done with this.

38
00:03:58,270 --> 00:04:07,690
Now in the next part, we are going to set conditions for winning of the game, like who is going to

39
00:04:07,960 --> 00:04:09,010
win the game?

40
00:04:09,250 --> 00:04:17,200
This bridge should be placed here and after this we will set the initialize function later.

41
00:04:17,230 --> 00:04:19,930
You do not need to worry about that.

42
00:04:19,930 --> 00:04:29,380
This is just explained here as after the like launching of the application, obviously the initialization

43
00:04:29,380 --> 00:04:30,640
should take place.

44
00:04:30,760 --> 00:04:39,970
So after this, if we are creating a two player game, so we have to set conditions for winning or losing

45
00:04:39,970 --> 00:04:42,190
of a specific player.

46
00:04:42,220 --> 00:04:50,470
Like suppose if one player will win, other will lose, or if the game draws, then we have to set a

47
00:04:50,470 --> 00:04:52,300
condition for that also.

48
00:04:52,390 --> 00:04:59,800
So we have created this private void winning game function and inside this we have to write queries

49
00:04:59,890 --> 00:05:02,410
for make a specific player then.

50
00:05:02,530 --> 00:05:12,430
So suppose firstly we want to like cover that like suppose firstly for player X, so for player X,

51
00:05:12,430 --> 00:05:17,650
what are the winning conditions we are going to look up to in this part?

52
00:05:17,860 --> 00:05:30,550
So we have to set like if condition that is going to be responsible for checking, like whether x x

53
00:05:30,820 --> 00:05:35,950
satisfies all the like winning conditions or not.

54
00:05:35,950 --> 00:05:47,770
So if B one and B two is equal to one and B3 is equal to one, then X will win.

55
00:05:48,670 --> 00:05:50,530
So let me explain this.

56
00:05:50,530 --> 00:05:53,380
Like what actually this F is doing.

57
00:05:53,530 --> 00:05:55,900
So this is the launching frame.

58
00:05:55,900 --> 00:06:04,090
Like we set a function for launching of the application and that is responsible for launching of this

59
00:06:04,090 --> 00:06:04,660
frame.

60
00:06:04,660 --> 00:06:13,540
Now suppose that we set the if condition that B1 and B2 and B3 is equal to one.

61
00:06:13,540 --> 00:06:15,610
So what that actually means.

62
00:06:15,950 --> 00:06:18,830
So suppose that we have nine blocks.

63
00:06:18,830 --> 00:06:25,130
This is the one way to be three, three, four, five, six, seven, eight and nine.

64
00:06:25,160 --> 00:06:30,620
There are nine blocks, empty blocks in the beginning in the grid layout structure.

65
00:06:30,620 --> 00:06:34,850
And we are checking that what if player X wins?

66
00:06:34,850 --> 00:06:43,850
So if like the X comes here, here or here, firstly, we are going to check for the horizontal like

67
00:06:45,020 --> 00:06:54,890
like configuration of x and this consecutive three occurrence of X will be responsible for making x

68
00:06:54,890 --> 00:06:55,390
win.

69
00:06:55,550 --> 00:07:04,820
So in the F condition, we are writing that only that if three in a row becomes equal, then X is going

70
00:07:04,820 --> 00:07:05,570
to win.

71
00:07:06,200 --> 00:07:11,120
So I hope you understood what this statement is signifying.

72
00:07:11,210 --> 00:07:19,130
So I already shown you that what happens when a specific player wins like three cups in a row, whether

73
00:07:19,130 --> 00:07:21,650
it be horizontal, vertical or diagonal?

74
00:07:21,680 --> 00:07:30,380
This dialog box appears showing that player dash wins and we are going to set up function for that only

75
00:07:30,380 --> 00:07:32,330
inside the active condition.

76
00:07:32,330 --> 00:07:34,100
So yes, here it is.

77
00:07:34,100 --> 00:07:42,980
This J option pane dot show message dialog is responsible for that dialog box, that pop up box, which

78
00:07:42,980 --> 00:07:46,520
is appearing whenever a specific player wins.

79
00:07:46,700 --> 00:07:55,520
And this consists of a frame, a message which is in a string format displaying that player excellence

80
00:07:55,520 --> 00:07:56,770
and not central.

81
00:07:56,780 --> 00:08:06,470
So the title of that frame here you can see and after which we have the option pain information method.

82
00:08:06,500 --> 00:08:15,920
We have called these two option pane heading and information message which is displayed and we are increasing

83
00:08:15,920 --> 00:08:18,050
the score of X by one.

84
00:08:18,050 --> 00:08:19,370
This is responsible.

85
00:08:19,370 --> 00:08:25,400
Like initially we have set this to zero and we are implementing this by one.

86
00:08:25,430 --> 00:08:36,920
If X wins and then set text string value of like we are setting the x count in this code box that we

87
00:08:36,920 --> 00:08:41,900
have incremented the score and now we are fixing it to this block only.

88
00:08:42,440 --> 00:08:49,130
And similarly we are going to do this for all the three rows.

89
00:08:49,490 --> 00:09:00,470
But suppose if there is a if that should be as so what if one, two and three comes in a row and there

90
00:09:00,470 --> 00:09:02,840
should be a else condition also?

91
00:09:02,930 --> 00:09:09,710
So basically it is not about the S condition, but we call it as if condition.

92
00:09:09,710 --> 00:09:17,780
Let's suppose this happens then this is going to be displayed as if this happens, then what is going

93
00:09:17,780 --> 00:09:18,710
to happen?

94
00:09:18,710 --> 00:09:25,850
So we have to like analyze things that what are the possibilities of making a player win?

95
00:09:25,850 --> 00:09:31,120
Suppose that we are considering X, so what are the conditions for making x win?

96
00:09:31,130 --> 00:09:38,600
So this is one, two, three, four, five, six, seven, eight, nine blocks and let us analyze that.

97
00:09:38,600 --> 00:09:41,210
What are the actual condition which will make x when?

98
00:09:41,330 --> 00:09:49,970
So if one, two, three comes in zero and four, five, six and seven, eight, nine, similarly, one,

99
00:09:49,970 --> 00:09:57,500
four and seven comes in a row equals to one with an operator.

100
00:09:57,500 --> 00:10:04,490
And this is like two, five and eight and this is three, six and nine.

101
00:10:04,490 --> 00:10:09,500
So we have to set conditions for these three combinations like total.

102
00:10:09,500 --> 00:10:14,420
We have three, three, three and totally we talked about six condition.

103
00:10:14,420 --> 00:10:19,340
So we are going to copy the same thing and paste it inside.

104
00:10:20,000 --> 00:10:23,750
ll6 block as we call it.

105
00:10:23,900 --> 00:10:33,170
So copying this part and then again copying it inside this same public like private void, meaning game

106
00:10:33,170 --> 00:10:38,330
function and pasting it a total of five more times.

107
00:10:38,330 --> 00:10:41,030
So I am pasting it five more times.

108
00:10:41,810 --> 00:10:46,490
We are done with three, four and this is five.

109
00:10:46,670 --> 00:10:52,100
Now we will update the variable inside everything.

110
00:10:52,100 --> 00:10:55,640
So we are done with one, two, three.

111
00:10:55,640 --> 00:10:58,040
Now we will change it to one.

112
00:10:59,090 --> 00:11:06,290
We are changing it to like let's check one, two, three, now, one, four and seven.

113
00:11:06,530 --> 00:11:11,000
So we will update it here with one, four and seven.

114
00:11:11,180 --> 00:11:15,080
So this is going to be four and this is going to be seven.

115
00:11:15,810 --> 00:11:20,220
In this similar way for all the other ones.

116
00:11:20,220 --> 00:11:22,530
So we are done with one, four, seven.

117
00:11:22,560 --> 00:11:25,080
Now what are the possibilities?

118
00:11:25,410 --> 00:11:33,930
This this is covered now two, four and six should be taken into consideration.

119
00:11:34,350 --> 00:11:37,380
So suppose this becomes equal.

120
00:11:37,950 --> 00:11:42,930
So this is going to be before and this is going to be six.

121
00:11:43,260 --> 00:11:53,640
And inside this, if we have to write it, this is of course we will update it with ls everywhere.

122
00:11:55,250 --> 00:11:59,480
And after that, we will be updating this everything.

123
00:11:59,870 --> 00:12:08,630
Let us quickly analyze the inside structure of bias analysis statements so the inside options are going

124
00:12:08,630 --> 00:12:09,290
to be same.

125
00:12:09,290 --> 00:12:17,180
The inside component of this statement won't change for all the nine combinations we are going to write.

126
00:12:17,540 --> 00:12:24,350
As for a specific player to win, we have nine possible combinations, like nine or eight.

127
00:12:24,350 --> 00:12:29,240
Let me count one, two, three, four, five, six, seven and eight.

128
00:12:29,240 --> 00:12:36,470
So yes, there are total eight possible combinations for a specific player to win, whether it be X

129
00:12:36,470 --> 00:12:37,880
or it is zero.

130
00:12:38,120 --> 00:12:45,740
So we will be writing like nine and and six conditions and inside the structure of the code will remain

131
00:12:45,740 --> 00:12:49,640
the same for X in the OR in all the eight cases.

132
00:12:49,790 --> 00:12:53,720
Just this if thing will change in every code.

133
00:12:53,720 --> 00:12:59,180
So yes, let us try to like change it with every statement.

134
00:12:59,630 --> 00:13:09,320
So yes, we have successfully like updated everything the if conditions and the condition with the possibilities

135
00:13:09,320 --> 00:13:17,630
of player x meaning we are written total one, two, three, four and five, six, seven and total.

136
00:13:18,410 --> 00:13:19,340
Yes, total.

137
00:13:19,940 --> 00:13:21,030
So yes, totally.

138
00:13:21,030 --> 00:13:23,970
IT conditions are there for making player X again.

139
00:13:23,990 --> 00:13:33,200
Now in the similar way we will be writing code for player or winning inside this or private void winning

140
00:13:33,200 --> 00:13:34,760
game function as well.

141
00:13:35,270 --> 00:13:42,350
So let us take a look at this in the next part of this series.
