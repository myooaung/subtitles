WEBVTT
1
00:00:01.610 --> 00:00:08.660
So in this video we will be talking about our Java classes, which is an admin panel generate invoice

2
00:00:08.660 --> 00:00:09.770
and invoice.

3
00:00:10.890 --> 00:00:11.530
Class.

4
00:00:11.570 --> 00:00:18.660
So admin panel class will appear whenever the admin will log in and it will open the frame or the window

5
00:00:18.660 --> 00:00:19.500
for the admin.

6
00:00:19.500 --> 00:00:22.230
Whereas generate invoice class will appear.

7
00:00:22.620 --> 00:00:26.880
Or open the window for the cashier whenever the cashier is.

8
00:00:26.880 --> 00:00:30.450
Login and invoice is the detail of the sale of the product.

9
00:00:30.450 --> 00:00:34.320
So first let's talk about the admin panel or Java class.

10
00:00:35.100 --> 00:00:37.440
So it is defined inside the package store.

11
00:00:37.470 --> 00:00:43.490
We have imported the necessary packages like border layout Image Action Event Action is not ArrayList

12
00:00:43.530 --> 00:00:46.980
J Frame Menubar Menu Item J Panel Menu Toolkit.

13
00:00:46.980 --> 00:00:48.510
Image Icon J Label.

14
00:00:49.310 --> 00:00:53.240
After that, we have defined our class, which is public class admin panel.

15
00:00:53.270 --> 00:00:59.450
This is extending the frame and implementing action listener inside which we have defined a menu item

16
00:00:59.680 --> 00:01:05.850
item, add product a menu and then product then the menu item item, update product, delete product.

17
00:01:05.870 --> 00:01:07.430
Similarly for the cashier.

18
00:01:08.280 --> 00:01:13.740
Amend cashier item, delete cashier item, cashier, stock item, show stock and export.

19
00:01:14.070 --> 00:01:21.780
Then there is a list of panel which will install the instance of panels.

20
00:01:22.950 --> 00:01:29.670
J panel and after that there is an int variable initialize to zero, then there is a menu and then search

21
00:01:29.670 --> 00:01:35.190
and MDM search product search, cashier and then sale and then print sale.

22
00:01:35.730 --> 00:01:40.680
Then we have defined the non parameterized constructor of this class that is admin panel.

23
00:01:42.300 --> 00:01:48.960
Said the title of that panel or window as admin panel, then setting the default close operation for

24
00:01:48.960 --> 00:01:51.330
the window and bound for that window.

25
00:01:51.570 --> 00:01:56.010
After that, we have defined the menu bar and set the menu bar.

26
00:01:57.450 --> 00:02:05.340
Then we have defined this product, which will be the menu named as product and added that menu to our

27
00:02:05.340 --> 00:02:06.120
menu bar.

28
00:02:06.150 --> 00:02:13.290
After that, we have defined the item for that menu element that is add product, set that menu item

29
00:02:13.290 --> 00:02:17.700
to that menu element and after that added action listener to that menu and.

30
00:02:18.650 --> 00:02:19.400
Item.

31
00:02:19.850 --> 00:02:25.400
Similarly, there is another menu item for the update product, adding that to the menu element and

32
00:02:25.400 --> 00:02:27.170
added Excel is not for this.

33
00:02:27.710 --> 00:02:35.630
Similarly, we have a delete product menu item, adding that menu item to our product main product menu.

34
00:02:35.630 --> 00:02:40.160
And then we have added action list for the delete product menu item.

35
00:02:40.190 --> 00:02:45.880
Similarly, we have defined the menu cache here, added that menu to our menu bar.

36
00:02:46.010 --> 00:02:47.120
After that, there are.

37
00:02:48.580 --> 00:02:53.020
Another menu item, added cashier, adding that to our menu element.

38
00:02:53.020 --> 00:02:54.260
And then we have added action.

39
00:02:54.460 --> 00:02:55.270
Not for this.

40
00:02:57.380 --> 00:02:58.360
Item I'd cashier.

41
00:02:58.400 --> 00:03:00.500
After that there is a delete cashier.

42
00:03:02.290 --> 00:03:08.990
Menu item, we have added that menu item to the menu and after that we have added action for this.

43
00:03:09.010 --> 00:03:14.280
Then there is a menu stock and added that menu to our menu bar.

44
00:03:14.860 --> 00:03:17.410
After that we have defined the items for that menu first.

45
00:03:17.470 --> 00:03:21.860
So stop adding that to the menu and added Excel is not for this.

46
00:03:21.880 --> 00:03:25.360
Then there is a search menu added to our menu bar.

47
00:03:25.540 --> 00:03:26.770
After that, there is a.

48
00:03:27.960 --> 00:03:36.300
Search product menu item added that toward menu bar and then adding accent list not for that particular

49
00:03:36.300 --> 00:03:37.110
menu item.

50
00:03:37.140 --> 00:03:38.790
Similarly, we have a menu item.

51
00:03:38.790 --> 00:03:41.970
Search cashier added that also to our menu bar.

52
00:03:42.000 --> 00:03:45.690
Then we have a menu of sales type, adding that to our menu bar.

53
00:03:45.990 --> 00:03:53.550
After that, we have a menu item sale named as bill sale and added that to our menu element.

54
00:03:53.550 --> 00:03:56.070
And then we have added action list not for this.

55
00:03:56.940 --> 00:04:02.370
So there is another menu as account and menu item as logout.

56
00:04:02.370 --> 00:04:07.530
Added that to our account menu element and adding action list for the logout.

57
00:04:07.680 --> 00:04:13.260
Then there is the immense search share added selection for that menu item as well, setting the layout

58
00:04:13.260 --> 00:04:17.640
of that complete window by the help of board layout.

59
00:04:19.360 --> 00:04:25.810
Then inside the panel, I realized we have called all the necessary methods like add, add product,

60
00:04:25.810 --> 00:04:29.470
update, product, delete product, add, cashier, delete, cashier, source, stock, search, product,

61
00:04:29.470 --> 00:04:30.910
search, cashier and seal.

62
00:04:31.150 --> 00:04:34.480
We have added all these method inside the array list.

63
00:04:34.480 --> 00:04:35.440
The where is the panel?

64
00:04:35.440 --> 00:04:38.890
See the error list and edit that error list.

65
00:04:40.150 --> 00:04:41.050
To our frame.

66
00:04:41.380 --> 00:04:48.670
Now what we are doing is we are defining the action performed for action performing method with the

67
00:04:48.670 --> 00:04:51.850
help of action event for our every method.

68
00:04:51.850 --> 00:04:52.660
So now system.

69
00:04:53.260 --> 00:04:58.360
This line is for the reference or debugging purpose selected dot e dot get action command.

70
00:04:58.360 --> 00:05:00.820
This will get the action one and print that after that.

71
00:05:00.820 --> 00:05:04.150
If if the action command is equal to the ADD product.

72
00:05:04.150 --> 00:05:10.090
So if the action command is from the menu item ad product, but what we will do is remove the panel

73
00:05:10.540 --> 00:05:11.800
and get see panel.

74
00:05:13.320 --> 00:05:18.450
Revalidate the current instance, then repaint this window and add the panels.

75
00:05:18.450 --> 00:05:19.260
Don't get zero.

76
00:05:19.260 --> 00:05:22.050
So panels dot zero will be containing add product.

77
00:05:22.050 --> 00:05:25.380
So ADD product method will be called in the current frame.

78
00:05:25.380 --> 00:05:32.610
So the previous window will be closed with the help of this start get removed and the next add product

79
00:05:32.610 --> 00:05:38.640
class window will be appear and set the see panel as zero again and set the title as ADD product.

80
00:05:38.640 --> 00:05:43.440
Similarly for the update product, we have done the same thing and called Add panel to get one.

81
00:05:43.440 --> 00:05:44.910
This will call the update product.

82
00:05:46.750 --> 00:05:47.440
Method.

83
00:05:47.440 --> 00:05:52.840
And similarly for the delete product add cashier, we have done the same thing for all but this with

84
00:05:52.840 --> 00:05:59.530
the help of elseif method delete cashier so stock search product we have just changed the method in

85
00:06:00.760 --> 00:06:05.410
index like six, five and four with respect of that command.

86
00:06:05.590 --> 00:06:08.120
Then there is for the search cashier and will sale.

87
00:06:08.290 --> 00:06:12.910
So and if the logout will be called then we will dispose the current instance.

88
00:06:12.910 --> 00:06:14.640
So this is all about the admin panel.

89
00:06:14.650 --> 00:06:19.300
Let's have a look at the generate invoice panel which will be displayed or will.

90
00:06:20.530 --> 00:06:21.910
Whenever I casually login.

91
00:06:21.910 --> 00:06:24.340
So this is also defined an inside package store.

92
00:06:24.370 --> 00:06:27.250
We have imported the necessary packages.

93
00:06:27.460 --> 00:06:31.110
After that we have defined our class, which is extending frame and action.

94
00:06:31.120 --> 00:06:35.290
Lets not define the panel content pane and integer type of variable.

95
00:06:35.290 --> 00:06:37.720
JP, and there are similarly a list of panels.

96
00:06:38.110 --> 00:06:42.130
Then we have defined the main function inside which we have created the instance of the current class

97
00:06:42.130 --> 00:06:43.810
and set the visibility of the frame as to.

98
00:06:44.200 --> 00:06:49.000
After that we have defined the non parameter constructor setting the default operation for the.

99
00:06:50.900 --> 00:06:52.460
For this respective window.

100
00:06:52.460 --> 00:06:53.630
Setting the bound for it.

101
00:06:54.290 --> 00:06:55.280
Creating a menu bar.

102
00:06:55.280 --> 00:06:57.740
Adding that menu bar to the frame.

103
00:06:57.920 --> 00:07:05.870
After that, we have created a menu element file, and inside that menu element we have three menu items

104
00:07:05.870 --> 00:07:11.360
like generate invoice labels, generate invoice, added that to our menu element and added Excel for

105
00:07:11.360 --> 00:07:11.750
this.

106
00:07:11.750 --> 00:07:17.360
And there is a similarly another menu item search product and another menu items log out.

107
00:07:17.780 --> 00:07:24.050
Then we have a content pane set the content pane like new panel and set the bar tab for it, adding

108
00:07:24.050 --> 00:07:30.380
that to our content pane and then we have set the layout for it and defined our search product.

109
00:07:32.270 --> 00:07:33.710
Object as I speak.

110
00:07:33.890 --> 00:07:43.100
Now, what we have did it added a new invoice and search product to our panel ArrayList and add initially

111
00:07:43.100 --> 00:07:48.350
we have displayed and the current visibility as zero.

112
00:07:48.350 --> 00:07:51.140
So add the initial initial value.

113
00:07:51.140 --> 00:07:57.260
The invoice method will be called in this window and said that this does this this said the title for

114
00:07:57.260 --> 00:08:03.510
it is generated invoice as the generate invoice method will be shown now inside the action performed

115
00:08:03.510 --> 00:08:03.710
event.

116
00:08:03.710 --> 00:08:08.060
There will be two commands which can be either for search product.

117
00:08:08.060 --> 00:08:12.830
So if the search product will be called, we will remove the current panel instance, revalidate the

118
00:08:12.830 --> 00:08:16.250
window, repaint the window and add the panel to get one.

119
00:08:16.250 --> 00:08:18.110
So one will be called the search product.

120
00:08:18.110 --> 00:08:22.400
So this method will be called whenever the search product menu item will be clicked.

121
00:08:23.740 --> 00:08:27.760
Said the JPA has won and the visibility of the current windows is too, and the title for that will

122
00:08:27.760 --> 00:08:28.670
be such product.

123
00:08:28.690 --> 00:08:31.270
Similarly, if it is, it is from the generate invoice.

124
00:08:31.270 --> 00:08:40.180
Then we will again remove the current window, revalidate the window, repaint the window and call the

125
00:08:40.180 --> 00:08:40.450
panel.

126
00:08:40.450 --> 00:08:41.080
Not get zero.

127
00:08:41.080 --> 00:08:43.960
Because zero is containing the method of.

128
00:08:44.920 --> 00:08:45.820
New invoice.

129
00:08:46.090 --> 00:08:52.900
So this will be show the window for the invoice and if it form the logout then we will just dispose

130
00:08:52.900 --> 00:08:53.980
the current instance.

131
00:08:55.360 --> 00:09:01.900
So this is the generate invoice class which will appear or comes out as a result whenever a cashier

132
00:09:01.900 --> 00:09:07.630
will login, while the admin panel will display the panel for whenever the admin will log in.

133
00:09:07.660 --> 00:09:16.480
Now let's move to the invoice stored Java file, which will be called which will be used whenever we,

134
00:09:16.480 --> 00:09:19.050
the cashier want to show check the invoice.

135
00:09:19.060 --> 00:09:21.340
So this is defined inside the package store.

136
00:09:21.370 --> 00:09:23.440
We have imported the necessary packages.

137
00:09:24.840 --> 00:09:30.780
Then we have defined the class which is extending panel inside which we have a three text field name

138
00:09:30.940 --> 00:09:33.170
ID and P quantity.

139
00:09:33.180 --> 00:09:39.060
Then there is a table items and the text field unit price label, label, name and label as error.

140
00:09:39.210 --> 00:09:43.500
Then they static and variable in as one default table model as the team.

141
00:09:43.500 --> 00:09:46.080
And there is an object type of data variable.

142
00:09:46.740 --> 00:09:53.550
Then there is a combo box, a string list of combo box and array, a string of company and a private

143
00:09:53.730 --> 00:09:54.390
text field.

144
00:09:56.120 --> 00:10:03.140
Named as a long as zero and as g total inside the non parameter as constructor of the invoice, we have

145
00:10:03.140 --> 00:10:04.850
set the label of as null.

146
00:10:04.880 --> 00:10:10.460
Then we have defined the label named as customers and the font for it bound for it and adding that label

147
00:10:10.460 --> 00:10:11.240
to our frame.

148
00:10:11.240 --> 00:10:13.940
After that there is a C type which is a choice type.

149
00:10:15.420 --> 00:10:24.090
And also C type is the array of ArrayList of string type for the combo box setting the bound for it,

150
00:10:24.090 --> 00:10:30.450
adding that to our frame after that added the item in that combo box string list first is working customer

151
00:10:30.450 --> 00:10:33.300
and second is company customer or customer name.

152
00:10:33.300 --> 00:10:36.540
Then we have selected the index one.

153
00:10:38.160 --> 00:10:42.650
After that, we have added an item list for that particular combo box.

154
00:10:42.660 --> 00:10:45.240
Then we have defined the item change method for it.

155
00:10:45.240 --> 00:10:48.990
If it is equal to one, then we will label label names that visible.

156
00:10:48.990 --> 00:10:49.310
True.

157
00:10:49.350 --> 00:10:52.470
So this label will be visible through and name label etc. as well.

158
00:10:52.650 --> 00:11:00.720
So these labels will be shown and else if the index will not be one, then these labels will be.

159
00:11:00.960 --> 00:11:02.490
Visibility of that labels will be.

160
00:11:03.520 --> 00:11:04.600
Set to false.

161
00:11:04.720 --> 00:11:09.370
After that there is another label as the name setting the font for it, bound for it, and adding that

162
00:11:09.370 --> 00:11:13.060
to the frame and the respective text field for the name to enter that name.

163
00:11:14.260 --> 00:11:16.240
For which the invoice will be generated.

164
00:11:16.240 --> 00:11:22.090
And there is a label product with the product ID setting font for it, bound for it, adding that product

165
00:11:22.090 --> 00:11:28.210
to our frame after there is a label quantity similarly font for it bound for it, adding that to our

166
00:11:28.210 --> 00:11:28.750
frame.

167
00:11:28.900 --> 00:11:35.050
After that, there is a PID product ID text field to write the product ID setting bound for it, adding

168
00:11:35.050 --> 00:11:39.280
that to our frame and setting the column or size for that ID.

169
00:11:40.610 --> 00:11:44.150
Then be quantity to write the quantity for that product.

170
00:11:44.330 --> 00:11:47.060
After that, we have a we have a button add.

171
00:11:47.060 --> 00:11:52.910
So when this button will be performing an action so we have defined action perform method inside which

172
00:11:52.910 --> 00:11:56.330
if the unit price dot get text is equal to null.

173
00:11:56.330 --> 00:12:02.930
So if the unit price is null or the get text is equals to null, if the quantity is null or if the ID

174
00:12:02.930 --> 00:12:05.930
is null, then we will show enter required data.

175
00:12:07.520 --> 00:12:10.340
Else we will set the error label as null again.

176
00:12:10.340 --> 00:12:15.610
Then we will be having a long type of variable up FP and q inside ID detail.

177
00:12:15.620 --> 00:12:17.370
We will set null inside up.

178
00:12:17.420 --> 00:12:23.000
We will pass along unit price, so we will trim the unit price to cover up long variable.

179
00:12:23.000 --> 00:12:25.700
And similarly in Q, we will trim the quantity.

180
00:12:25.790 --> 00:12:31.070
Similarly in the ID, we will be trimming the text from the ID and a unit tries out label.

181
00:12:31.070 --> 00:12:33.320
So we will be setting these labels as null.

182
00:12:33.350 --> 00:12:41.150
After that, we inside the FP, we will be calculating the price total price by multiplying the UPN

183
00:12:41.150 --> 00:12:41.600
q.

184
00:12:42.790 --> 00:12:48.500
Then we will set the details DB Dot search details for that particular ID after that inside the store.

185
00:12:48.520 --> 00:12:55.570
We will split with the help of we will split the detail variable and inside the detail we will store

186
00:12:55.600 --> 00:12:56.620
STR of zero.

187
00:12:56.650 --> 00:12:59.500
If detail is close to nil, then also invalid product ID.

188
00:12:59.530 --> 00:13:05.740
Otherwise, if the details item is out of stock, then we will say then we will show that message.

189
00:13:05.740 --> 00:13:09.880
And if nothing, then we will show the error message as null and.

190
00:13:10.870 --> 00:13:13.570
And the company went to our company label.

191
00:13:14.930 --> 00:13:16.120
Then the hydro.

192
00:13:16.160 --> 00:13:19.160
This will be adding the row to our table and total plus FP.

193
00:13:19.160 --> 00:13:25.910
So this will add the final price to our total variable G total and set the totals inside the G total

194
00:13:25.910 --> 00:13:26.150
label.

195
00:13:26.150 --> 00:13:27.260
We will set the total.

196
00:13:27.260 --> 00:13:30.260
Then there is a set button for that bound.

197
00:13:30.260 --> 00:13:35.900
Adding that button is string header which will protect the item detail and adding that to our table.

198
00:13:35.900 --> 00:13:40.790
Similarly bound for that, a scroll panel in initializing scroll panel for the items.

199
00:13:40.790 --> 00:13:46.940
Then there is a unit price to write the unit price and there is a label unit price error message label.

200
00:13:47.060 --> 00:13:54.380
After that label delete product and product ID and the text field for the respective field labels.

201
00:13:54.380 --> 00:13:57.740
Then inside the delete button, this will perform the deletion of the.

202
00:13:58.910 --> 00:14:02.900
Field an invoice and delete button set down.

203
00:14:02.930 --> 00:14:08.510
This will set the bound for the delay button and there is a label grand total and another label which

204
00:14:08.510 --> 00:14:12.890
will help us to show that table inside the total death file.

205
00:14:12.890 --> 00:14:14.300
So the total value.

206
00:14:14.300 --> 00:14:16.700
So this is all about the three classes.

207
00:14:19.220 --> 00:14:23.240
And we in this video, we have talked about the admin panel generate invoice and invoice.
