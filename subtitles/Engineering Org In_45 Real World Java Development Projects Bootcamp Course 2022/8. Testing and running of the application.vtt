WEBVTT
1
00:00:00.910 --> 00:00:04.660
Now so that we have discussed about the switch case.

2
00:00:04.690 --> 00:00:07.890
Now we are going to implement the switch case.

3
00:00:07.900 --> 00:00:12.830
Let's see what actually happens on implementation of a switch case.

4
00:00:12.850 --> 00:00:20.710
So suppose this is a switch keyboard and inside this we are passing an argument like as action.

5
00:00:20.710 --> 00:00:29.710
So suppose if our action is performing like we have already initialized the action here and if the action

6
00:00:29.710 --> 00:00:32.940
is initialized as say dot next int.

7
00:00:33.010 --> 00:00:41.670
So like suppose we input any option from our keyboard which is going to be stored inside this action.

8
00:00:41.680 --> 00:00:44.650
It is a variable of course, an integer variable.

9
00:00:44.800 --> 00:00:52.480
So if the switch is 012, three, four, five, six, how many options we are listing?

10
00:00:52.480 --> 00:00:54.570
It will be depending on that only.

11
00:00:54.850 --> 00:01:00.520
So suppose if switch action contains initial stage zero.

12
00:01:00.880 --> 00:01:06.340
So suppose we are wishing to quit the program in the beginning.

13
00:01:06.460 --> 00:01:09.130
So what case zero is going to do?

14
00:01:09.250 --> 00:01:14.980
So Case zero is going to quit setting the quit two.

15
00:01:14.980 --> 00:01:15.430
True.

16
00:01:15.430 --> 00:01:20.920
Initially we set the quit to force and now we are changing it to true head.

17
00:01:21.250 --> 00:01:29.980
The Boolean quit is set to false by default there is no quit, but if we pressing zero from the keyboard

18
00:01:29.980 --> 00:01:37.570
then it is going to set it to true and then break the switch statement and come out of the loop and

19
00:01:37.570 --> 00:01:41.980
again will print the list like close the terminal.

20
00:01:42.550 --> 00:01:49.330
Suppose if this action is containing one like a integer could be anything 0123.

21
00:01:49.340 --> 00:01:51.760
So if suppose that is switch one.

22
00:01:51.760 --> 00:01:59.680
So it is going to execute this case one and what this case one is going to do, this is going to play

23
00:01:59.680 --> 00:02:03.670
the current song now sorry, it is the next song.

24
00:02:03.670 --> 00:02:11.770
So this one is going to play the next song and how we are going to play the next song like if not forward

25
00:02:11.800 --> 00:02:17.320
if list iterator has next and inside which listed next.

26
00:02:17.500 --> 00:02:22.140
So we are switching to the next song in the list.

27
00:02:22.150 --> 00:02:28.180
So the next song is going to be played with the use of the forward keyword.

28
00:02:28.210 --> 00:02:35.680
Like we have declared this forward here as a Boolean data type and initially it is set to true.

29
00:02:36.160 --> 00:02:41.290
So if one song is finished automatically, the second song will be played.

30
00:02:41.290 --> 00:02:48.190
And if we are, we forcefully want to play the next song before the finishing of the first song.

31
00:02:48.190 --> 00:02:55.990
Then we are going to call this forward through and if the list iterator is set then now playing the

32
00:02:56.230 --> 00:02:59.530
next song it will output this.

33
00:02:59.530 --> 00:03:09.010
Now playing the second track like this where we have pressed the key too and it played the next song

34
00:03:09.010 --> 00:03:10.060
from the list.

35
00:03:10.600 --> 00:03:18.760
Similarly, we have a else keyword option also, and if that's a let's suppose like the list has five

36
00:03:18.760 --> 00:03:24.310
songs and there are no next song so it will output like no such song available.

37
00:03:24.340 --> 00:03:26.500
Reached to the end of the list.

38
00:03:26.530 --> 00:03:32.860
Like suppose we raised like at this song and there are no songs after this.

39
00:03:32.860 --> 00:03:36.700
So what this is going to output, no song are available.

40
00:03:37.030 --> 00:03:44.230
It is to the end of the list and the forward will be set to false and the list will not move forward

41
00:03:44.230 --> 00:03:46.600
further and the loop will break.

42
00:03:47.140 --> 00:03:53.290
And suppose if we have press to from the keyboard, then this is going to play the previous song.

43
00:03:53.290 --> 00:03:59.950
In that similar way we were navigating through the next song using the has next keyword.

44
00:04:00.070 --> 00:04:08.890
Similarly we are going to use has previous keyboard to iterate through the list and play the previous

45
00:04:08.890 --> 00:04:11.860
song by setting the forward to false.

46
00:04:11.860 --> 00:04:15.300
Like Do not move forward, don't play the next one.

47
00:04:15.430 --> 00:04:18.550
Play the previous song by default.

48
00:04:18.580 --> 00:04:20.100
The next song is the play.

49
00:04:20.410 --> 00:04:27.640
Next song is played after finishing off a song but with the mercy of this key tree.

50
00:04:27.640 --> 00:04:32.170
The next song will not be played, but the previous song is going to be played.

51
00:04:32.530 --> 00:04:40.930
And the SE condition says that if there are no songs previous to that song like suppose we we were already

52
00:04:40.930 --> 00:04:45.760
raised the beginning of the list and there are no songs previous to it.

53
00:04:45.760 --> 00:04:50.710
Then it is going to reply that we have reached the end of the list.

54
00:04:50.710 --> 00:04:53.170
There are no songs previous to this list.

55
00:04:53.410 --> 00:04:59.830
Similarly for key four, we have list of all songs and print all available option for file.

56
00:05:00.100 --> 00:05:02.800
So I already told you that.

57
00:05:03.160 --> 00:05:08.590
On pressing for it is going to print the list of all the songs in the playlist.

58
00:05:09.070 --> 00:05:16.860
We will create this print list function after the completion of this part and for pressing the key five,

59
00:05:16.870 --> 00:05:20.140
all the available options will be printed.

60
00:05:21.160 --> 00:05:28.900
Like suppose you pressed any key and again we want to navigate back to the menu option and do some other

61
00:05:28.900 --> 00:05:29.800
operation.

62
00:05:29.800 --> 00:05:34.240
So we will press five and it will print the menu and then it will break.

63
00:05:34.720 --> 00:05:39.220
Now, last but not least for deleting the current song.

64
00:05:41.160 --> 00:05:49.820
So if we wish to delete the current song playing, we are using the safe statement for checking that

65
00:05:49.840 --> 00:05:56.020
if playlist size is greater than zero like suppose there are more than zero songs in the list.

66
00:05:56.050 --> 00:06:05.410
Then list iterator is going to use this remove keyword from java util library to remove the song from

67
00:06:05.410 --> 00:06:06.430
the linked list.

68
00:06:06.430 --> 00:06:12.460
We have stored all the songs in the playlist in the form of linked list and to remove anything from

69
00:06:12.460 --> 00:06:17.860
the list we are using this remove keyword list iterator do not remove.

70
00:06:17.860 --> 00:06:24.250
The iterator is going to point to the current song and it will remove this.

71
00:06:24.250 --> 00:06:30.850
And after this the list iterator will start pointing to the next song to the current song.

72
00:06:31.180 --> 00:06:33.460
We have already discussed it here.

73
00:06:33.490 --> 00:06:40.030
The link will be broken and the first song will start pointing to the third song.

74
00:06:40.480 --> 00:06:41.230
Perfect.

75
00:06:41.500 --> 00:06:46.900
So after this, yes, there is like a pause.

76
00:06:47.180 --> 00:06:50.980
The playlist size is less than zero.

77
00:06:51.070 --> 00:06:54.070
Then it is not going to delete anything.

78
00:06:54.970 --> 00:06:58.720
The program is going to run as it was running.

79
00:06:58.720 --> 00:07:04.720
It will display now playing and basically no changes are going to happen.

80
00:07:04.930 --> 00:07:09.340
So we have successfully covered all the switch cases.

81
00:07:09.340 --> 00:07:14.800
Now we are going to create a function for printing the menu.

82
00:07:15.160 --> 00:07:24.370
Yes, we have created a static void function called the print menu and the access specified is set to

83
00:07:24.370 --> 00:07:31.480
private and this function is responsible for printing all the available options in the menu.

84
00:07:31.570 --> 00:07:41.710
Like you can see that for zero we have set the action as creating for one to play the next song and

85
00:07:41.710 --> 00:07:44.680
similarly for to play the previous song.

86
00:07:44.710 --> 00:07:50.680
Three Replace the current song for list all the songs and five print all the available options.

87
00:07:50.680 --> 00:07:56.890
Again, like these are the available options and there are nothing else in the available option.

88
00:07:56.890 --> 00:08:03.430
So this thing is going to be printed again if we are pressing the key five.

89
00:08:03.430 --> 00:08:11.860
And lastly, if we will press the keys six from our keyboard, then the current song which is playing

90
00:08:11.860 --> 00:08:16.600
will be deleted and automatically the next song will start playing.

91
00:08:16.600 --> 00:08:28.660
And if you like, list all the songs again, then the resulting list will remove the song which is deleted

92
00:08:28.660 --> 00:08:33.820
and the resulting list will be reduced by size one.

93
00:08:34.090 --> 00:08:36.430
Like suppose initially there were five songs.

94
00:08:36.430 --> 00:08:41.020
Now this will contain only four songs as we deleted one of the songs.

95
00:08:41.020 --> 00:08:41.770
Yes.

96
00:08:42.160 --> 00:08:45.550
Now looking towards the print list function.

97
00:08:45.550 --> 00:08:48.550
What this print list is going to print.

98
00:08:48.910 --> 00:08:53.140
So we have created this function public static void print list.

99
00:08:53.140 --> 00:09:02.230
And as an argument the link list of the playlist song is parsed inside this function and the iterator

100
00:09:02.230 --> 00:09:03.700
is going to iterate.

101
00:09:04.700 --> 00:09:10.700
I read through the playlist which we have created in the album class.

102
00:09:10.910 --> 00:09:13.850
So this is the way to write.

103
00:09:13.850 --> 00:09:21.230
Like we are giving a heading and a food, like a header and a footer, and between the header and the

104
00:09:21.230 --> 00:09:28.160
footer, the list of the songs in the playlist is going to be called Using this by loop.

105
00:09:28.160 --> 00:09:37.820
Like Suppose Iterator not has niched, has a song then printed in the list and we are using this print

106
00:09:37.820 --> 00:09:42.920
list option to print the list of all the songs like this.

107
00:09:43.280 --> 00:09:52.430
This part is responsible for printing the list, and this is printed with the mercy of this function

108
00:09:52.820 --> 00:09:53.860
print list.

109
00:09:53.870 --> 00:10:01.980
So we are done with the programming section as far as I can see that we have covered all the functionalities.

110
00:10:02.000 --> 00:10:10.460
Now let us try to run this and see that actually what is happening inside the code.

111
00:10:12.630 --> 00:10:15.300
So the program run successfully.

112
00:10:15.330 --> 00:10:16.860
Congratulations.

113
00:10:16.890 --> 00:10:20.820
Now check if the functions are working correctly or not.

114
00:10:20.850 --> 00:10:29.250
So firstly, I'm going to press one to play the next song or let us print the list of all songs first.

115
00:10:29.250 --> 00:10:37.320
So on pressing for we have all the list of the songs in our playlist, not the album, but in the playlist.

116
00:10:37.350 --> 00:10:41.010
We have two things an album and a playlist.

117
00:10:41.020 --> 00:10:44.460
So we are listing her playlist like we.

118
00:10:44.490 --> 00:10:49.560
Our motto behind this creation is to store all of our favorite songs.

119
00:10:49.560 --> 00:10:52.590
So we are dealing with the playlist part only.

120
00:10:52.710 --> 00:11:02.130
So we have a list of all the songs now to play the next song Pressing One, and the next song is played

121
00:11:02.520 --> 00:11:05.220
initially by default.

122
00:11:05.220 --> 00:11:10.260
The first song was playing and the duration was 4.5 minutes.

123
00:11:10.260 --> 00:11:15.510
Now if we press one, then the next song from the playlist will be played.

124
00:11:15.810 --> 00:11:23.190
Now suppose we want to navigate to the previous song, so we will press two and again the first song

125
00:11:23.190 --> 00:11:28.710
will start playing now to replay the current song Pressing three.

126
00:11:29.430 --> 00:11:33.710
So this is responsible for playing the songs in a loop.

127
00:11:33.720 --> 00:11:40.920
Let's suppose this song is our most favorite song from the playlist, so we will love to play that song

128
00:11:40.920 --> 00:11:41.310
again.

129
00:11:41.310 --> 00:11:45.900
And so we will press three to replay the current song.

130
00:11:46.230 --> 00:11:50.310
So we have covered already printing the list of four songs.

131
00:11:50.310 --> 00:11:57.840
Now suppose if we want to navigate to the available options section again, so we will press five and

132
00:11:57.840 --> 00:11:59.370
hit Enter again.

133
00:11:59.370 --> 00:12:04.590
We are back in our navigation menu with all the available options.

134
00:12:04.590 --> 00:12:14.730
Now suppose we want to wish to delete the current song so pressing six from the keyboard and the next

135
00:12:14.730 --> 00:12:17.280
song is played played automatically.

136
00:12:17.280 --> 00:12:25.890
Like last one which was playing was this current song which is deleted on pressing the six key and next

137
00:12:25.890 --> 00:12:28.380
song is played automatically.

138
00:12:28.410 --> 00:12:35.430
Now let us try to print the list of all songs again and see that if it is deleted or not.

139
00:12:35.430 --> 00:12:41.640
Yes, initially we had four songs and now we are left with only three songs in the list.

140
00:12:41.640 --> 00:12:50.280
So all the functions in this library is working fine and everything is correct as far as I can see that.

141
00:12:50.730 --> 00:12:58.920
So I hope that you all have went through this tutorial very correctly and understood all the concepts

142
00:12:58.920 --> 00:13:06.510
involved in this and would love to make your own music library like you can omit anything.

143
00:13:07.080 --> 00:13:09.330
I am calling it as a music library.

144
00:13:09.330 --> 00:13:13.920
You can also call it a music playlist, library or anything you wish to.

145
00:13:13.920 --> 00:13:21.870
So I hope you all will create a playlist library of your own and learn the concepts and world behind

146
00:13:21.870 --> 00:13:22.200
it.

147
00:13:22.200 --> 00:13:31.470
Like the coding part, you can see that everything is explained very in a detailed manner and every

148
00:13:31.470 --> 00:13:40.890
concept is related to core Java nor other concepts are complex concepts are not involved in this.

149
00:13:40.890 --> 00:13:52.440
So I wish you a happy learning and let's try creating this project on your own, ending this project,

150
00:13:52.440 --> 00:13:56.490
and we'll sail with our next project in the next part.

151
00:13:56.520 --> 00:13:59.430
Till then, goodbye and thank you.
