1
00:00:02,470 --> 00:00:11,590
We are developing an employee platform of web platform using spring framework and we already set up

2
00:00:11,590 --> 00:00:15,510
our project with spring and we develop some code also.

3
00:00:16,140 --> 00:00:19,660
Now let us see what is a hybrid framework, basically.

4
00:00:20,260 --> 00:00:27,250
Hibernate is basically used for the database concepts which are basically object relational mapping,

5
00:00:27,250 --> 00:00:37,330
but you can say it's not more related to the Java interface is more related to Java to database connectivity.

6
00:00:37,750 --> 00:00:39,040
So hibernate frame.

7
00:00:39,190 --> 00:00:47,140
So if you already know we have already gives Java database connections and servlet, we can perform

8
00:00:47,150 --> 00:00:49,720
database like that back in part with Java.

9
00:00:50,230 --> 00:00:51,520
But why?

10
00:00:51,520 --> 00:00:55,270
Instead of using servlet, we can use hibernate first thing.

11
00:00:55,270 --> 00:00:59,170
You can use injection dependency in hibernate plus.

12
00:01:00,130 --> 00:01:07,720
It simplifies the development of Java application if if you closely look in a servlet code that you

13
00:01:07,720 --> 00:01:14,320
can check that we are putting the dependencies directly, that that Java database and all the things

14
00:01:14,320 --> 00:01:15,010
directly.

15
00:01:15,010 --> 00:01:21,010
We are not performing as application properties, we are performing that database connection as a class

16
00:01:21,010 --> 00:01:21,850
properties.

17
00:01:21,850 --> 00:01:26,590
So there is a tight coupling between this if there is an error in something.

18
00:01:26,590 --> 00:01:28,960
So our application will not deploy.

19
00:01:29,960 --> 00:01:33,900
If we have some database errors so we don't want to on.

20
00:01:34,220 --> 00:01:42,290
And also we are embedding the skill statements directly like Select Star and all the things, then inserting

21
00:01:42,350 --> 00:01:42,770
things.

22
00:01:44,110 --> 00:01:55,690
So that's a very difficult thing and it's not appropriate while developing all the what we can say database.

23
00:01:55,990 --> 00:02:00,040
So it is an open source lightweight or an object relational mapping tool.

24
00:02:00,910 --> 00:02:07,110
Plus it's hibernate implements the jpg, which is Java Persistence API for the data for the systems.

25
00:02:07,120 --> 00:02:13,900
So what is the data persistence if you will default entries in database rows, relational database are

26
00:02:13,900 --> 00:02:14,290
null.

27
00:02:15,160 --> 00:02:17,680
So it will not accept that null database.

28
00:02:17,710 --> 00:02:21,090
Basically it will accept only the valid databases hibernate.

29
00:02:22,940 --> 00:02:24,440
Then you are empty.

30
00:02:24,620 --> 00:02:26,600
So what is the r m doing?

31
00:02:26,930 --> 00:02:28,350
It's a jbc api.

32
00:02:28,370 --> 00:02:31,130
As it's interact with gcc api.

33
00:02:31,250 --> 00:02:35,120
But it's for data creation, manipulation and data access.

34
00:02:35,330 --> 00:02:41,960
So it is basically programming technique which maps objects to data stored in database.

35
00:02:42,320 --> 00:02:47,750
And here you can closely look at this Java application and this is object.

36
00:02:47,780 --> 00:02:53,590
You can select like we can create an object in Java application which passes through Aurum and which

37
00:02:53,600 --> 00:02:54,340
goes to database.

38
00:02:54,350 --> 00:02:59,690
If you closely look the servlet database and you see there is one separate API and its path is the skill

39
00:02:59,690 --> 00:03:01,130
set throughout the skill set.

40
00:03:01,340 --> 00:03:06,320
So we are eliminating that concepts, embedding the skill statements in Java.

41
00:03:06,320 --> 00:03:08,360
We are excluding that part.

42
00:03:08,630 --> 00:03:11,840
We are directly putting that and I will tell you what is the job here.

43
00:03:12,110 --> 00:03:19,580
So JP is basically Java persistence API, Java, you can say here is Java object or database column.

44
00:03:19,580 --> 00:03:25,190
So basically the JPA is you can say the persistence for the classes and interfaces.

45
00:03:25,490 --> 00:03:32,720
So let us see in the ID part, we are going to perform different things.

46
00:03:34,460 --> 00:03:35,540
So wait a minute.

47
00:03:41,490 --> 00:03:43,620
Pick me up on sale properties first.

48
00:03:46,100 --> 00:03:46,930
Can begin.

49
00:03:47,890 --> 00:03:49,390
You can change the things inside.

50
00:03:49,540 --> 00:03:52,000
So I'm changing the lighting.

51
00:03:52,820 --> 00:03:53,210
Okay.

52
00:03:55,100 --> 00:03:58,560
So for the proper visualization.

53
00:03:59,660 --> 00:04:02,510
So currently we haven't employed any JPEG.

54
00:04:02,510 --> 00:04:08,060
Currently you can see these are the list and I already created one interface for that purpose.

55
00:04:08,540 --> 00:04:10,940
So this is just the interface I created.

56
00:04:10,940 --> 00:04:17,570
Interface is basically just 100% abstraction which provides and dabbles in abstraction because I don't

57
00:04:17,570 --> 00:04:20,180
want to anyone to change this part.

58
00:04:20,180 --> 00:04:25,280
So I will tell you what is that gate employed by ID and what is the things here?

59
00:04:26,550 --> 00:04:37,830
Basically so void save employee is going to save the employee ID and defaulting here then.

60
00:04:39,030 --> 00:04:42,290
One thing I need to create one employee list.

61
00:04:42,300 --> 00:04:45,800
So I mentioned your employee, but I won't mention what is the employee.

62
00:04:45,810 --> 00:04:51,570
So if you want to check your persistence, you can install the plugin structures and you can get all

63
00:04:51,570 --> 00:04:52,670
the hibernate concepts here.

64
00:04:53,430 --> 00:04:58,860
Currently I'm not implementing any deep connection, so let us create one thing your model.

65
00:04:59,460 --> 00:05:02,230
So as you can see, go to this model thing.

66
00:05:03,840 --> 00:05:04,470
Basically.

67
00:05:05,640 --> 00:05:10,450
So what I'm going to do, I'm going to create one package here or.

68
00:05:11,780 --> 00:05:19,310
Let us assume when package your new and I'm mentioning as package model.

69
00:05:27,660 --> 00:05:28,080
It's.

70
00:05:31,960 --> 00:05:34,000
Mentioning Neiman's model.

71
00:05:36,550 --> 00:05:41,080
So as we can see this inside this, I'm going to create one class and.

72
00:05:42,750 --> 00:05:49,530
Well, let me mention the class name and employee, because I'm going to do that employee.

73
00:05:51,300 --> 00:05:53,670
And this I'm going to create one employee class.

74
00:05:55,900 --> 00:05:56,410
I.

75
00:05:58,850 --> 00:06:01,820
We don't require this to focus on this only.

76
00:06:03,610 --> 00:06:09,070
Now let me create one hour import package, which is basically.

77
00:06:10,210 --> 00:06:15,010
Java expert assistance, which is basically GPA.

78
00:06:16,550 --> 00:06:17,510
What is distance?

79
00:06:18,020 --> 00:06:21,380
Don't start because I'm going to implement everything here.

80
00:06:22,480 --> 00:06:23,140
Then.

81
00:06:27,630 --> 00:06:29,880
Currently these things are.

82
00:06:29,880 --> 00:06:32,640
I think that will work.

83
00:06:32,640 --> 00:06:37,200
But let me mention your database.

84
00:06:37,200 --> 00:06:42,150
So it's very useful and easy, as I told you already.

85
00:06:43,700 --> 00:06:45,170
No need to mention anything.

86
00:06:45,170 --> 00:06:45,680
Just me.

87
00:06:46,010 --> 00:06:46,940
You need to mention.

88
00:06:48,250 --> 00:06:49,780
If an independent entity.

89
00:06:50,880 --> 00:06:51,690
In the entity.

90
00:06:51,690 --> 00:06:54,300
You should mention a name.

91
00:06:56,650 --> 00:06:57,520
So even.

92
00:06:58,480 --> 00:06:59,440
Intractable.

93
00:07:00,330 --> 00:07:01,320
You've the name.

94
00:07:01,590 --> 00:07:05,760
So in that database I'm going to mention name as MP employee.

95
00:07:05,910 --> 00:07:09,930
As I told you already now.

96
00:07:11,130 --> 00:07:14,400
Or you can see these things are done.

97
00:07:14,670 --> 00:07:21,660
So what I'm going to do, this model will face the data from the database and we'll do the database

98
00:07:21,660 --> 00:07:22,650
connection, basically.

99
00:07:22,830 --> 00:07:25,050
So it's very easy entity.

100
00:07:25,050 --> 00:07:26,910
Entity means in the database entity.

101
00:07:27,510 --> 00:07:29,340
I need to mention table as MP.

102
00:07:29,970 --> 00:07:33,780
I'm going to create that table inside the database.

103
00:07:34,630 --> 00:07:42,850
So as I mentioned this persistence and table everything you can check your this logo will come so that

104
00:07:42,850 --> 00:07:47,650
so mention it's a JPEG Java persistence which provides the database connection.

105
00:07:48,280 --> 00:07:51,340
Now let me mention one thing I'd.

106
00:07:53,000 --> 00:07:53,500
Heidi.

107
00:07:53,840 --> 00:07:58,760
So it is nothing but to create the generate value and bring everything.

108
00:07:59,000 --> 00:07:59,390
So.

109
00:08:00,490 --> 00:08:05,230
These are the some default generated value you need to in your strategy.

110
00:08:05,230 --> 00:08:06,100
Strategy.

111
00:08:08,000 --> 00:08:10,640
As you can see, it's x x using for the strategy.

112
00:08:10,640 --> 00:08:16,610
So it's a matter of basically strategy and we need to mention generator type ID.

113
00:08:19,960 --> 00:08:21,850
Then Russian type identity.

114
00:08:22,000 --> 00:08:25,900
So it will create one unique parameter identity.

115
00:08:30,310 --> 00:08:32,860
And inside this unique dimension.

116
00:08:33,980 --> 00:08:34,550
Private.

117
00:08:37,090 --> 00:08:37,720
Long.

118
00:08:38,750 --> 00:08:39,020
I.

119
00:08:40,940 --> 00:08:41,980
So what is this thing?

120
00:08:42,860 --> 00:08:48,860
So, as you can see, I created this ID access to that ID thing.

121
00:08:49,700 --> 00:08:53,120
So I am going to create one ID thing inside table.

122
00:08:53,120 --> 00:08:55,340
So it will face that data throughout that ID.

123
00:08:55,580 --> 00:08:58,820
So no need to require to mention your.

124
00:08:59,360 --> 00:09:04,330
What you can say is called statement select start from where everything so it will automatically detect

125
00:09:04,340 --> 00:09:06,470
this is identity and identity party's ID.

126
00:09:06,920 --> 00:09:09,980
So now let me mention the columns here.

127
00:09:11,100 --> 00:09:11,660
Problem.

128
00:09:13,360 --> 00:09:18,190
Column is first column I'm going to mention his name is equal to.

129
00:09:20,320 --> 00:09:21,850
Horse name.

130
00:09:21,850 --> 00:09:25,240
So remember all these names should be.

131
00:09:26,670 --> 00:09:30,360
And again, private spring and spring.

132
00:09:33,420 --> 00:09:34,380
First name.

133
00:09:35,410 --> 00:09:36,610
That makes this possible.

134
00:09:36,610 --> 00:09:39,970
So this will be the entity inside the database.

135
00:09:40,000 --> 00:09:42,480
Now let me copy this part.

136
00:09:42,490 --> 00:09:46,820
So why I'm hoping I will tell you or I'm going to mention it again.

137
00:09:46,840 --> 00:09:48,280
Last name and email only.

138
00:09:48,290 --> 00:09:50,950
I'm considering your last name.

139
00:09:53,730 --> 00:09:54,510
Again, the.

140
00:09:55,580 --> 00:09:57,260
Last name.

141
00:10:01,050 --> 00:10:03,420
And again, I'm mentioning the third column here.

142
00:10:05,160 --> 00:10:08,610
Mimi So remember, these entities should be same in the database.

143
00:10:08,610 --> 00:10:11,750
Also you can mention the screen.

144
00:10:11,760 --> 00:10:12,210
So.

145
00:10:18,170 --> 00:10:18,830
Chicken.

146
00:10:20,500 --> 00:10:21,250
Violence.

147
00:10:27,930 --> 00:10:28,980
Of the database.

148
00:10:35,630 --> 00:10:37,220
Fill this in my database.

149
00:10:37,550 --> 00:10:43,220
And now what I need to mention, I need to create one gaiter and set the property.

150
00:10:43,220 --> 00:10:51,230
So for this purpose, instead of putting again and again what you can do, read, press, insert to

151
00:10:51,230 --> 00:10:52,700
insert the things here.

152
00:10:53,360 --> 00:10:58,190
So for you, I think the it will create a one generate option.

153
00:10:58,490 --> 00:11:06,080
So I don't know what is the different shortcuts for another system, but for Windows you should press

154
00:11:06,090 --> 00:11:11,600
button, insert you can check through the keystrokes, also get trend setter, go to get trend setter

155
00:11:11,600 --> 00:11:12,230
methods.

156
00:11:12,680 --> 00:11:17,150
Then you need to create for everything getter and certain methods.

157
00:11:17,150 --> 00:11:22,190
So choose everything and it okay.

158
00:11:23,490 --> 00:11:30,820
Once you hit okay, you can see it will create all the glitter and certain methods.

159
00:11:30,840 --> 00:11:31,260
So.

160
00:11:33,130 --> 00:11:34,600
These things created.

161
00:11:35,550 --> 00:11:36,300
These are my columns.

162
00:11:36,300 --> 00:11:37,710
So let me.

163
00:11:39,410 --> 00:11:40,370
The one thing.

164
00:11:42,180 --> 00:11:43,360
This is public ID.

165
00:11:43,380 --> 00:11:49,980
And after this I'm mentioning the columns and after this I'm creating a range of methods.

166
00:11:50,960 --> 00:11:52,850
So let me mention get an.

167
00:11:54,000 --> 00:11:55,110
Better methods.

168
00:11:55,410 --> 00:11:57,210
So this is for gate and set methods.

169
00:11:57,210 --> 00:11:58,950
So this should be public.

170
00:11:59,220 --> 00:12:00,480
No need to change anything here.

171
00:12:01,020 --> 00:12:02,370
These things should be public.

172
00:12:02,370 --> 00:12:05,010
So this will face the data from the database.

173
00:12:05,460 --> 00:12:09,810
So now we are currently saying these things are not deployed in anything.

174
00:12:09,810 --> 00:12:17,070
So I will create and I will tell you what we are going to work here and everything in the later part.

175
00:12:17,250 --> 00:12:21,330
But in the JPA, as you can see, you can check your upper classes.

176
00:12:21,330 --> 00:12:28,260
These packages, this table is this no need to check for streamlined court log but in employee database

177
00:12:28,260 --> 00:12:32,430
or you can say employee class we need MP as my table.

178
00:12:32,910 --> 00:12:37,620
So let me close this because the CGP pallet and that's it.

179
00:12:37,620 --> 00:12:39,990
You need to work around the GPA.

180
00:12:41,190 --> 00:12:42,240
Also.

181
00:12:44,490 --> 00:12:49,770
Now it's currently showing the food related problems because our code is not properly developed, as

182
00:12:49,770 --> 00:12:53,670
you can see, because we haven't mentioned the gate employees and we make cuts here.

183
00:12:53,850 --> 00:12:58,560
So in the later part, we are going to check what is the gate implementers, how we are going to perform

184
00:12:58,560 --> 00:13:01,230
this, how we are going to it with MySchool.

185
00:13:01,350 --> 00:13:08,040
So if you are developing on deploying on line server or on line server, you need an online database

186
00:13:08,040 --> 00:13:08,400
for that.

187
00:13:08,670 --> 00:13:12,690
So my recommendation is go with PostgreSQL, MySQL or MongoDB.

188
00:13:12,720 --> 00:13:14,640
MongoDB is not a relational database.

189
00:13:14,640 --> 00:13:21,130
So the again, these things are going to change in that database, but preferably go with my skill,

190
00:13:21,150 --> 00:13:21,990
my skill.

191
00:13:22,110 --> 00:13:25,440
So it will really help me help you understand.

192
00:13:25,470 --> 00:13:25,950
Thank you.
