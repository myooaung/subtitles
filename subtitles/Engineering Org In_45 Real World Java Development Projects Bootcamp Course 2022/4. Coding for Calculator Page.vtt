WEBVTT
1
00:00:01.300 --> 00:00:06.070
So in this video we will be talking about our next class, which is my calculator.

2
00:00:06.070 --> 00:00:12.880
So this will be help us to create a calculator interface which will calculating the different types

3
00:00:12.880 --> 00:00:14.710
of operations over the numerics.

4
00:00:16.090 --> 00:00:18.700
After that, what we did is let's move into this.

5
00:00:18.700 --> 00:00:26.020
So it is defined inside the package and import or we have imported the abstract window toolkit.

6
00:00:27.340 --> 00:00:33.100
Package for the better graphical user interface and Abstract Window Toolkit DOT Event package which

7
00:00:33.100 --> 00:00:34.420
will help us to create.

8
00:00:36.170 --> 00:00:37.980
What hand elements are the buttons?

9
00:00:38.000 --> 00:00:42.560
Now what we are doing is we are creating a public class, my calculator which is extending the frame

10
00:00:42.560 --> 00:00:45.830
after that we have defined public boolean set clear is equal to two.

11
00:00:45.830 --> 00:00:50.070
So there will be a boolean type of variable set clear which is initialized as true.

12
00:00:50.090 --> 00:00:55.490
After that, there are two double types of number number common value and there is a character type

13
00:00:55.490 --> 00:00:56.540
of variable or p.

14
00:00:57.650 --> 00:01:02.270
Now what we are doing is we are creating a string array for the Desert Button text.

15
00:01:02.270 --> 00:01:06.110
So this is the array for the buttons which will be labeled as the desert.

16
00:01:06.110 --> 00:01:11.570
So it is a7894561230 and plus minus and.

17
00:01:12.320 --> 00:01:13.150
Full stop.

18
00:01:13.160 --> 00:01:20.630
So these are the buttons and numeric buttons installed inside the designed button text string array.

19
00:01:20.900 --> 00:01:25.190
After that, what we are doing is we are creating an operation button text area which is storing divide

20
00:01:25.190 --> 00:01:32.360
as Q multiply modulus percentage minus one by x plus and it goes to these characters will be stored

21
00:01:32.360 --> 00:01:33.170
inside the setting.

22
00:01:33.200 --> 00:01:38.360
After that, MSI RMS and M Plus will be stored inside this memory button text array.

23
00:01:38.360 --> 00:01:42.320
And the special button text area will be containing backspace C and C.

24
00:01:44.020 --> 00:01:44.440
After that.

25
00:01:44.440 --> 00:01:46.300
What we are doing is my dessert button.

26
00:01:46.420 --> 00:01:53.350
My dessert button is equal to dessert button array and my dessert button will pass the dessert button

27
00:01:53.560 --> 00:01:54.880
Scotland inside it.

28
00:01:54.880 --> 00:01:57.040
So this will end after that.

29
00:01:57.040 --> 00:02:02.440
What we are doing is my operation operator button and creating operator button list and pass that length

30
00:02:02.440 --> 00:02:08.380
of the operator button list to that list that is operator button.

31
00:02:08.380 --> 00:02:12.280
Similarly for the memory button, we have did the same thing and.

32
00:02:13.800 --> 00:02:15.450
After that, my special button.

33
00:02:15.750 --> 00:02:17.010
A special button list.

34
00:02:17.160 --> 00:02:18.690
We are doing the same thing.

35
00:02:18.690 --> 00:02:21.930
My special button and pass the index dot to it.

36
00:02:22.680 --> 00:02:28.050
Then we have defined the display label label with the value zero and label dot.

37
00:02:28.050 --> 00:02:28.410
Right?

38
00:02:28.410 --> 00:02:30.750
So this will be a label for the zero.

39
00:02:30.750 --> 00:02:36.510
And then there is a memo label as null and label dot set as equals to right.

40
00:02:38.280 --> 00:02:46.080
Then we have defined some final values like frame with as close to 25 frames as close to 325 height

41
00:02:46.080 --> 00:02:48.330
as equals to 30, which is equal to 30.

42
00:02:48.360 --> 00:02:49.500
Height space ten.

43
00:02:50.580 --> 00:02:50.870
Sorry.

44
00:02:50.940 --> 00:02:52.230
Horizontal space ten.

45
00:02:52.230 --> 00:02:53.470
And vertical space ten.

46
00:02:53.490 --> 00:02:56.640
Then there's a top x 30 and top by 50.

47
00:02:56.640 --> 00:03:00.660
So these values will not be changed as these all values are of type, final type.

48
00:03:00.690 --> 00:03:05.460
Now what we are doing is my calculator inside the constructor for the my calculator is string frame

49
00:03:05.460 --> 00:03:05.670
text.

50
00:03:05.670 --> 00:03:06.840
We have passed the frame text.

51
00:03:06.840 --> 00:03:08.580
That's the constructor for the class.

52
00:03:10.160 --> 00:03:11.960
Then we have added it as super.

53
00:03:11.990 --> 00:03:17.350
After that, what we are doing is temp access equals to top x and y is equal to top right.

54
00:03:17.360 --> 00:03:19.720
So this is what we are doing.

55
00:03:19.730 --> 00:03:23.120
So top y and it is top x.

56
00:03:27.150 --> 00:03:27.960
Topics.

57
00:03:27.960 --> 00:03:29.640
So this is what's happening here.

58
00:03:29.730 --> 00:03:33.510
After that display label will set the bound for it with the help of type X and Y.

59
00:03:33.540 --> 00:03:36.690
Set the background color for that label and foreground color for that label.

60
00:03:36.690 --> 00:03:37.830
Add that to our frame.

61
00:03:37.830 --> 00:03:40.460
After that mem label setting bound for the label.

62
00:03:40.470 --> 00:03:43.310
This will set the bound and location for that, adding that to our frame.

63
00:03:43.320 --> 00:03:46.980
After that, setting the coordinates for the memory buttons topics physical topics.

64
00:03:46.980 --> 00:03:50.460
What we are doing is by is equals to top why plus to add strict.

65
00:03:50.460 --> 00:03:54.920
This will create the calculate the by instance and for the memory button length.

66
00:03:54.970 --> 00:03:57.420
We will be iterating over it and setting the memory button.

67
00:03:57.420 --> 00:03:59.250
IE it goes to new memory button.

68
00:03:59.250 --> 00:04:01.500
With these values we are parsed inside.

69
00:04:01.500 --> 00:04:02.520
It impacts.

70
00:04:02.530 --> 00:04:05.130
We will try and memory button textile.

71
00:04:06.190 --> 00:04:11.980
We will set the foreground color for that memory button, and after that we will calculate the Y value

72
00:04:11.980 --> 00:04:12.490
again.

73
00:04:12.760 --> 00:04:15.070
After that, we will set an coordinates for the special button.

74
00:04:15.070 --> 00:04:19.930
For the special button, we will be calculating temp X with this temp x and Y with these values.

75
00:04:19.930 --> 00:04:25.840
And after that we will iterate over the spatial button length and set the spatial button positions with

76
00:04:25.840 --> 00:04:30.280
the help of bypassing these values, which we have calculated just before the followup and set the foreground

77
00:04:30.280 --> 00:04:31.090
color as red.

78
00:04:31.120 --> 00:04:34.210
After that, we will calculate and change the values of the x variable.

79
00:04:35.340 --> 00:04:38.220
By calculating with these operations.

80
00:04:39.060 --> 00:04:42.030
After that, we will be setting coordinates for the digits but digit button.

81
00:04:42.030 --> 00:04:47.340
So we'll be calculating first digit X with this operation and after that we will be calculating digit

82
00:04:47.340 --> 00:04:48.210
by in this line.

83
00:04:48.210 --> 00:04:52.560
Then we will be setting temp checks and temp temp X and Y to the desert X and visit Y.

84
00:04:52.590 --> 00:04:56.520
After that, we will be iterating over the length of the desert button, and then we will set the Desert

85
00:04:56.520 --> 00:05:00.120
Button positions by passing those calculated values into its argument.

86
00:05:00.120 --> 00:05:02.280
Then we will set the foreground color as blue.

87
00:05:02.340 --> 00:05:05.790
After that, we have calculated again the temp x value with the help of a.

88
00:05:06.970 --> 00:05:08.560
With a space.

89
00:05:08.710 --> 00:05:14.200
Then we have initialize the if condition, then if this condition will be true, then temp access goes

90
00:05:14.200 --> 00:05:16.780
to visit x, otherwise there we will set.

91
00:05:16.780 --> 00:05:19.480
The value of the y is close to height plus vertical space.

92
00:05:19.810 --> 00:05:23.350
Then we have set the coordinates for the operator button.

93
00:05:23.360 --> 00:05:28.390
So here we have defined the x value for the operator button and this is the y value.

94
00:05:28.390 --> 00:05:31.690
And inside temp x and y, we have restored those instances.

95
00:05:31.690 --> 00:05:37.150
After that we have iterated over the length of the operator button and temp x's was to edge width plus

96
00:05:37.150 --> 00:05:38.680
edges are vertical space.

97
00:05:38.770 --> 00:05:42.850
After that operator button, we have defined the operator button position with the help of bypassing

98
00:05:42.850 --> 00:05:43.660
those values.

99
00:05:44.990 --> 00:05:48.260
Into its argument and set the program color as led after that.

100
00:05:48.620 --> 00:05:54.950
If this is if this statement will be true, we will be setting them accessible to ops x or y plus is

101
00:05:54.960 --> 00:05:56.630
close to height plus vertical space.

102
00:05:58.450 --> 00:06:04.060
Then we have added a window listener to that window adapter and define the window closing event method,

103
00:06:04.060 --> 00:06:09.160
which is taking in the event window event as argument and we will select the system exit dot zero.

104
00:06:09.160 --> 00:06:14.140
So set the layout as null, set the size as frame, width and frame height and set the visibility as

105
00:06:14.470 --> 00:06:14.860
true.

106
00:06:15.190 --> 00:06:20.470
After that, there is a static end to get formatted text which is taking the type of variable temp a

107
00:06:20.480 --> 00:06:23.620
string testing equals to null plus start temp.

108
00:06:23.710 --> 00:06:26.890
After that we have it checked for the condition.

109
00:06:26.890 --> 00:06:32.450
If last index is because 2.0 is greater than zero, then rest x is equal to the circle substring zero

110
00:06:32.450 --> 00:06:39.730
dot rest x or length minus two and there is a return that s text after that inside the void main method

111
00:06:39.730 --> 00:06:39.970
we have.

112
00:06:42.450 --> 00:06:46.710
Created the instance by passing them argument as calculator.

113
00:06:47.640 --> 00:06:52.790
Then we have defined the middle class here, which is extending J brand and implementing action listener.

114
00:06:53.430 --> 00:06:58.890
Its argument is a my calculator type of object c one and inside this constructor we are parsing text

115
00:06:58.890 --> 00:07:05.070
and why int which insight and string gap and my calculator OCLC object headed it as gap.

116
00:07:06.510 --> 00:07:07.500
Setting down for it.

117
00:07:07.500 --> 00:07:12.390
And this document is going to slow it down when it goes to add on this and adding a listener to this.

118
00:07:12.420 --> 00:07:18.450
After that, we have defined the string balloon type of method is in a string which is taking argument

119
00:07:18.450 --> 00:07:24.060
as and for that loop we have defined a loop and set the start character as equals to catch and return

120
00:07:24.060 --> 00:07:24.690
the true.

121
00:07:24.750 --> 00:07:30.030
After that, we have defined action performed event for which we have first stored some values in the

122
00:07:30.030 --> 00:07:32.960
temp text after the temp stack start as equals to dot.

123
00:07:32.970 --> 00:07:35.130
So what we are doing is c one point set clear.

124
00:07:35.130 --> 00:07:42.600
So this will be set text to display label and zero and a set clear as equals to false lc for the this

125
00:07:42.600 --> 00:07:42.960
condition.

126
00:07:42.960 --> 00:07:43.950
What we are doing is.

127
00:07:45.180 --> 00:07:52.410
Subtext is also seven syllable text and adding the decimal add the last and returning the values returning

128
00:07:52.410 --> 00:07:52.830
null.

129
00:07:54.150 --> 00:07:58.870
After that, we have stored indexes of close to zero and indexes close to past end of the text.

130
00:07:58.920 --> 00:08:01.140
The number format exception if any exception occurs.

131
00:08:01.140 --> 00:08:04.620
And for this if condition we will be returning null.

132
00:08:04.620 --> 00:08:07.200
And if the seven dot set clear, then will be.

133
00:08:08.970 --> 00:08:14.640
Again doing the survey index, journal and index with the help of that index variable and set clear

134
00:08:14.760 --> 00:08:17.960
goals to property falls in the block.

135
00:08:17.970 --> 00:08:22.590
What we are doing is even display label, set text and display label target text and plus index.

136
00:08:22.800 --> 00:08:27.460
After that there is a my operator button extending button implementing action listener class.

137
00:08:27.480 --> 00:08:29.250
It is also taking an instance of.

138
00:08:29.420 --> 00:08:35.190
Simon we have defined now my operator button X on my website and everything inside this class is also

139
00:08:35.190 --> 00:08:38.970
similar and pretty similar like the previous one.

140
00:08:38.970 --> 00:08:41.970
Because what we are doing is we are creating a my operating button.

141
00:08:41.970 --> 00:08:48.510
This will fix the position for the buttons of operator type and the previous class in which we are doing.

142
00:08:48.510 --> 00:08:50.880
We are setting the position for the types of button.

143
00:08:50.880 --> 00:08:54.990
So it is more similar like the previous class that is operator button.

144
00:08:54.990 --> 00:08:58.110
So similarly, we have set it everything for here.

145
00:09:00.090 --> 00:09:06.300
After that, we have defined the action performed method for which this will be for the one by X button.

146
00:09:06.300 --> 00:09:10.860
So we'll be set its position after that for the ask button, for the equal button.

147
00:09:10.860 --> 00:09:17.640
And now inside the switch method in the chosen operation, if it is job is chosen plus then we will

148
00:09:17.640 --> 00:09:18.810
do this operation.

149
00:09:18.810 --> 00:09:21.360
If it is chosen minus, then we do this operation.

150
00:09:21.450 --> 00:09:25.950
If for the multiplier, we will perform this for the modulus, we will perform this operation and for

151
00:09:25.950 --> 00:09:31.200
the divide we will performing this operations after that seven dot label, we will set the label text

152
00:09:31.200 --> 00:09:35.880
by the get formatted text m after that for the memory button we have defined the.

153
00:09:37.220 --> 00:09:38.510
Class for the memory button.

154
00:09:38.510 --> 00:09:43.400
Similarly, like the above two classes, we have defined action performed inside which if the.

155
00:09:44.230 --> 00:09:45.100
Casey's goes to sea.

156
00:09:45.100 --> 00:09:47.440
We will be clearing the text from the memory label.

157
00:09:47.470 --> 00:09:51.160
Casey's equals to are we doing this operation after that?

158
00:09:51.160 --> 00:09:57.850
If the SW then only showing value to 0.0 and if it is plus we will be performing these operations.

159
00:09:59.280 --> 00:10:04.500
Now inside the my special button, we have defined the same things similarly in our above three classes.

160
00:10:04.500 --> 00:10:10.260
Now inside the string backspace a string that is defined inside which we are doing these things.

161
00:10:11.670 --> 00:10:18.360
After that inside the action performed method or yes, we have defined the string o.p to the my special

162
00:10:18.360 --> 00:10:23.790
button not to get source get label and if object equals to backspace, what we are doing is we will

163
00:10:23.790 --> 00:10:30.720
be clearing our back, spacing the desserts which we are there in our label seven dot display label

164
00:10:30.720 --> 00:10:33.180
don't get text and time dot is close to nil.

165
00:10:33.360 --> 00:10:40.110
Then what we are doing is set the text to zero and if not null or not backspace, then we will send

166
00:10:40.110 --> 00:10:41.550
the text to the provided text.

167
00:10:41.940 --> 00:10:43.590
After that text is going to see.

168
00:10:43.590 --> 00:10:46.140
So we will be clearing all the values so that we are doing here.

169
00:10:46.140 --> 00:10:51.180
And so the label is close to null at last.

170
00:10:51.180 --> 00:10:55.710
What we are doing is displaying the set label as zero and set the clear property as true.

171
00:10:56.190 --> 00:10:59.850
So this is all about the my calculator class which we have discussed.

172
00:11:00.390 --> 00:11:04.560
And so this will help us to create an instance and better interface for the.
