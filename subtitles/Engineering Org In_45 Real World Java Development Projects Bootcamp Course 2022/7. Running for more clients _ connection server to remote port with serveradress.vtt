WEBVTT
1
00:00:01.140 --> 00:00:08.220
In previous tutorials, I told you how we created all the programmes and we are facing some exceptions.

2
00:00:08.220 --> 00:00:10.560
So I told you in that video how we can handle that.

3
00:00:10.560 --> 00:00:12.150
Exceptions with some.

4
00:00:12.510 --> 00:00:20.890
So we use the multithreading and as I told you how we can use Multithreading here to execute a main

5
00:00:20.910 --> 00:00:27.780
process in small, small processes, or we can set up processes and more.

6
00:00:27.780 --> 00:00:29.330
Which are these processes?

7
00:00:29.340 --> 00:00:34.380
Like I told you, there are different processes in connecting a client, connecting the message, handling

8
00:00:34.380 --> 00:00:35.370
that message.

9
00:00:35.370 --> 00:00:38.800
I am accepting some private messages also here.

10
00:00:38.820 --> 00:00:44.760
So that part then server date and time, server lighting, we can handle all these things through the

11
00:00:45.060 --> 00:00:49.230
multithreading and what is the Multithreading handling the multiple threads at a time.

12
00:00:49.230 --> 00:00:56.670
So what is the beautiful thing is here is I can connect many clients at the same time stamp or we can

13
00:00:56.670 --> 00:00:59.160
see the same timestamp or for that purpose.

14
00:00:59.310 --> 00:01:04.050
So I achieve multithreading by extending the thread class.

15
00:01:04.530 --> 00:01:07.800
I want to create an enable interface for that.

16
00:01:08.750 --> 00:01:11.060
Also Trade class includes the naval interface also.

17
00:01:11.060 --> 00:01:17.180
So I went through that, all these things exchanging the trade classes.

18
00:01:17.330 --> 00:01:25.130
So let us see what is implementation or we can see the deep implementation of this.

19
00:01:25.430 --> 00:01:31.730
So server side implementation I'm taking application begins with the server computer running on the

20
00:01:31.730 --> 00:01:34.130
server or supported 5000.

21
00:01:34.160 --> 00:01:34.720
Your report.

22
00:01:34.730 --> 00:01:36.500
I choose zero 1500.

23
00:01:36.500 --> 00:01:41.150
You can choose 5000 in an airport for clients to talk with one another.

24
00:01:41.180 --> 00:01:44.300
They will have to run a client code for their systems.

25
00:01:44.300 --> 00:01:47.810
So assume that you are a few friends.

26
00:01:47.810 --> 00:01:54.650
What you can do, you can run only the client code and you can deploy your server code on some server.

27
00:01:54.650 --> 00:02:00.020
Or you can say there are many servers available on the internet like Google Cloud servers are their

28
00:02:00.500 --> 00:02:00.950
servers.

29
00:02:01.250 --> 00:02:02.930
Web server also supports this.

30
00:02:03.080 --> 00:02:09.290
So what you can do instead of running server on your machine, you can deploy on internet that part

31
00:02:09.620 --> 00:02:11.960
which can do what it will be doing.

32
00:02:11.960 --> 00:02:17.480
It will be running that server class or live or we can say 24 by seven.

33
00:02:17.480 --> 00:02:23.360
So you just need to run the client, you just add that in the interface and I'm considering your only

34
00:02:23.360 --> 00:02:24.590
command line interface.

35
00:02:24.590 --> 00:02:29.960
In the next part, I will tell you how you can create some UI for that simple UI for that purpose.

36
00:02:30.140 --> 00:02:32.960
So what you can do, you can just run your client.

37
00:02:32.960 --> 00:02:36.290
So for the client purpose, then only need to run on the client.

38
00:02:36.320 --> 00:02:37.790
No need to run server.

39
00:02:37.790 --> 00:02:40.820
So server and client both are the different codes.

40
00:02:41.090 --> 00:02:46.370
What is the thing between is it's connecting throughout the TCP connection to that server.

41
00:02:46.370 --> 00:02:47.210
That's it.

42
00:02:48.210 --> 00:02:52.210
So the work code consists two classes server class and client handler class.

43
00:02:52.230 --> 00:02:59.310
So I'm I mentioned the name as different in that code, but what is the main thing is client handling.

44
00:02:59.310 --> 00:03:05.460
It's handling the client server class consists server socket which waits for client to join whenever

45
00:03:05.460 --> 00:03:06.690
a new client joins.

46
00:03:06.690 --> 00:03:13.290
It's created the trade for that purpose and you can use the run method to allocate that server part,

47
00:03:13.290 --> 00:03:16.440
broadcasting part each and everything in client handler to us.

48
00:03:16.950 --> 00:03:23.220
So when thread begins its execution, it starts by waiting for clients to send message.

49
00:03:23.220 --> 00:03:27.840
As soon as client is connected, our server and client is valid.

50
00:03:28.740 --> 00:03:29.760
It client.

51
00:03:29.850 --> 00:03:32.400
The server waits for the client message.

52
00:03:32.400 --> 00:03:35.640
So client side message when client sends the message.

53
00:03:36.570 --> 00:03:39.330
The message is control by server and move forward.

54
00:03:39.780 --> 00:03:45.030
And the Trade Center in the same message function, which is basically first trade is what is trade

55
00:03:45.030 --> 00:03:47.880
doing accepting the message once the messages arrive.

56
00:03:47.910 --> 00:03:53.850
Now trade is moved to the same message part when job is to forward the message from the client to another

57
00:03:53.850 --> 00:03:57.000
remaining client from the socket vector.

58
00:03:57.000 --> 00:04:00.020
We can say or we can say or that socket part.

59
00:04:00.030 --> 00:04:01.170
So what will we do?

60
00:04:01.170 --> 00:04:07.310
Folder That trade will convert it into object and beautiful thing of why we use your ArrayList.

61
00:04:07.320 --> 00:04:13.740
We can pass that object in the ArrayList and to round that TCP connection or we can set TCP frame packet

62
00:04:13.770 --> 00:04:16.050
will take that part and move forward.

63
00:04:16.590 --> 00:04:19.110
Hold that object, move forward to that message.

64
00:04:19.110 --> 00:04:25.020
So instead of using byte by bytecode, what we can do, we can put that object inside frame and object

65
00:04:25.030 --> 00:04:31.670
consists that message message again, it's converted into bytecode, but we don't need to convert into

66
00:04:31.680 --> 00:04:36.690
bytecode, we just need to put that object and from the socket vector it will go to the another.

67
00:04:38.970 --> 00:04:41.670
Let us see what is said in implementation.

68
00:04:41.670 --> 00:04:45.900
I'm considering your due also because I don't want to explain it again.

69
00:04:46.440 --> 00:04:50.370
So in UN I'm going to use Java string.

70
00:04:50.370 --> 00:04:56.530
So as soon as my client opens the Java application, it's connected to the front end to back backend.

71
00:04:56.550 --> 00:05:03.570
It's just basically all the similar part like client, whenever it's open send message functions will

72
00:05:03.570 --> 00:05:10.260
execute and another function in the background to which server to send a message like if the server

73
00:05:10.260 --> 00:05:12.990
is sending successfully the message, then it will be handled then.

74
00:05:12.990 --> 00:05:18.600
So message functions are there each message as server as prefixed by name by sender to increase message,

75
00:05:18.600 --> 00:05:20.280
readability and everything.

76
00:05:20.280 --> 00:05:22.650
So it is a client shared implementation only.

77
00:05:22.650 --> 00:05:24.660
So client what is the client is doing?

78
00:05:24.660 --> 00:05:27.000
Client is handling your thread first.

79
00:05:27.420 --> 00:05:31.260
Client When the client is added to that server.

80
00:05:31.560 --> 00:05:35.070
Now the client trade is accepting message from user.

81
00:05:35.070 --> 00:05:36.540
So that trade is waiting.

82
00:05:36.540 --> 00:05:39.330
One message is that part is done.

83
00:05:39.330 --> 00:05:41.430
It will push to that server put.

84
00:05:42.770 --> 00:05:43.840
And for birdie.

85
00:05:43.850 --> 00:05:46.770
Once this is done, the server will handle the pushing the message.

86
00:05:46.790 --> 00:05:51.530
Similarly, client is also waiting another thread for the another client message.

87
00:05:51.560 --> 00:05:53.450
What we can say client to message.

88
00:05:54.020 --> 00:05:56.060
So it will waiting for that purpose.

89
00:05:56.060 --> 00:05:57.020
Another thread.

90
00:05:57.050 --> 00:06:00.490
Once that message is arrived, it pushed to that part.

91
00:06:00.500 --> 00:06:03.680
What we can see front in part, and it will show that part.

92
00:06:03.860 --> 00:06:05.810
So waiting and showing the message.

93
00:06:06.440 --> 00:06:08.580
So this is the basic idea of this.

94
00:06:08.610 --> 00:06:15.640
In this also I mentioned some useful parts like who is in method and the username said.

95
00:06:15.650 --> 00:06:18.400
So I direct username which is basically private method.

96
00:06:18.410 --> 00:06:22.560
If you could add the name of that person or client.

97
00:06:22.580 --> 00:06:25.850
What you can do, you can publish it on that part.

98
00:06:25.850 --> 00:06:27.260
Or we can say private message.

99
00:06:27.710 --> 00:06:28.490
You can do.

100
00:06:29.590 --> 00:06:30.640
Then you look.

101
00:06:31.330 --> 00:06:34.080
Now the main thing is indie rock here.

102
00:06:34.090 --> 00:06:39.750
Why I'm using indie rock is if you know, this is only what we can say.

103
00:06:39.760 --> 00:06:40.930
Michael and Machine.

104
00:06:41.500 --> 00:06:43.690
But I want to join my friend also.

105
00:06:43.960 --> 00:06:45.420
So this is my point.

106
00:06:45.430 --> 00:06:51.220
It is localized and each and everything, but I want to create some thing which can be global or we

107
00:06:51.220 --> 00:06:53.500
can say port forwarding system.

108
00:06:53.500 --> 00:06:59.520
So for that purpose I need one port forwarding and my local copying thing.

109
00:06:59.770 --> 00:07:06.910
So development machine can maybe connect it to secure network behind a firewall to work around access

110
00:07:06.910 --> 00:07:14.350
restriction in JIRA runs small client process on your machine which creates private connection tunnel

111
00:07:14.350 --> 00:07:15.600
to in your cloud service.

112
00:07:15.610 --> 00:07:17.800
What is doing is indie rock is a cloud service.

113
00:07:17.800 --> 00:07:19.660
Basically what it is is doing.

114
00:07:19.690 --> 00:07:23.890
If I had a new server on my local list, it will copy that part each and everything.

115
00:07:24.370 --> 00:07:27.520
Copying means the function is copying to the cloud.

116
00:07:27.550 --> 00:07:33.850
It will create another link with port and it will proceed in that purpose.

117
00:07:33.850 --> 00:07:40.300
So if you are having some that part, what you can do, you can share your that IP address or you can

118
00:07:40.300 --> 00:07:46.650
say link your server address with port to your friend to connect friend on any network.

119
00:07:46.660 --> 00:07:52.870
I'm not saying your local network consider there are two friends when it's John and Sam.

120
00:07:52.960 --> 00:08:01.690
John is shipping is a new mark and considering Sam is sitting in San Francisco or John wants to send

121
00:08:01.690 --> 00:08:08.980
a message throughout this process or or we can say throughout this client what he can do, he can create

122
00:08:09.400 --> 00:08:13.960
some sort of third party chain, everything he can mention in the server part.

123
00:08:13.990 --> 00:08:22.180
This is my link throughout the engine log and you can and this is my port address to the Sam or what

124
00:08:22.180 --> 00:08:24.440
you can do, you can create a permanent link on an zero.

125
00:08:24.520 --> 00:08:30.400
This is my port address and this is my link forever for this my client application function.

126
00:08:30.760 --> 00:08:38.740
So what you can do, he can create one client code like this, you can put the localhost there that

127
00:08:38.740 --> 00:08:43.590
localhost change to that that IP address within zero.

128
00:08:43.690 --> 00:08:44.980
As you can see here.

129
00:08:46.270 --> 00:08:47.530
In a client part.

130
00:08:49.150 --> 00:08:51.160
Let me zoom this little bit.

131
00:08:56.430 --> 00:08:58.870
This this part, what he can do.

132
00:08:59.350 --> 00:09:04.660
He can change this localhost with server address of in zero and port number with that port number and

133
00:09:04.660 --> 00:09:06.600
in a server implementation part.

134
00:09:06.610 --> 00:09:10.720
Also, he has to change everything here.

135
00:09:11.890 --> 00:09:13.420
Like I told you.

136
00:09:14.170 --> 00:09:16.300
Or in this part.

137
00:09:17.910 --> 00:09:19.310
This is local Austin port.

138
00:09:19.320 --> 00:09:20.880
He has to change basically.

139
00:09:20.970 --> 00:09:25.380
So as I mentioned, the airport number and each and everything are different like this.

140
00:09:25.380 --> 00:09:27.570
And local laws has to change basically.

141
00:09:27.930 --> 00:09:32.580
So once this is done, what you can do, you can send that message to the SAM which is sitting.

142
00:09:32.580 --> 00:09:34.470
We will be sitting in San Francisco.

143
00:09:35.500 --> 00:09:42.040
So this is the function of a local development server is mapped to an iOS subdomain which remote users

144
00:09:42.040 --> 00:09:43.000
can access.

145
00:09:43.030 --> 00:09:47.800
No need to expose your port setup forwarding, make other network changes.

146
00:09:47.800 --> 00:09:49.090
So it is very simple.

147
00:09:49.090 --> 00:09:51.970
So I will show you how we can we can do this.

148
00:09:52.180 --> 00:09:53.020
So.

149
00:09:54.850 --> 00:09:59.980
Let me go this once you downloaded the indie rock from the indie rock website that that's for Windows

150
00:09:59.980 --> 00:10:00.700
is indie rock.

151
00:10:02.080 --> 00:10:06.190
I will go with that indie rock dot e XXI.

152
00:10:06.670 --> 00:10:09.560
Now there are many services available on indie rock.

153
00:10:09.580 --> 00:10:17.200
TCP is HTTP, but we are going with TCP, TCP and what I don't want to do, my port of the local host,

154
00:10:17.200 --> 00:10:19.960
as I told you, is 1500.

155
00:10:20.500 --> 00:10:27.000
Let me show you in a server part I mentioned no need to change that server part.

156
00:10:27.490 --> 00:10:31.510
Again, I'm telling you, no need to change this server part.

157
00:10:32.080 --> 00:10:35.170
I mention my port address is 1500.

158
00:10:35.620 --> 00:10:38.900
In the main method, this is 1500.

159
00:10:38.920 --> 00:10:40.210
So what I can do?

160
00:10:40.750 --> 00:10:43.480
I can mention this 1500.

161
00:10:43.930 --> 00:10:46.810
Now, when you will take time to run its web interface.

162
00:10:47.080 --> 00:10:49.210
So this is my web interface, basically.

163
00:10:49.630 --> 00:10:53.580
So in general doesn't support the dynamic and everything URL.

164
00:10:53.590 --> 00:10:54.910
So what you can do is.

165
00:10:57.780 --> 00:10:58.980
This place controls the.

166
00:11:00.150 --> 00:11:03.030
So it will take time to each and everything.

167
00:11:03.810 --> 00:11:14.100
So these are all about in general how we can do these things and you can put your queries and each and

168
00:11:14.100 --> 00:11:21.300
everything here with n g rock and indie rock creates the know what you can say, eternal status and

169
00:11:21.300 --> 00:11:22.170
each and everything.

170
00:11:22.230 --> 00:11:26.550
So it will give you the status and you can put the link here.

171
00:11:28.280 --> 00:11:31.040
So this is all about how we can do this part.

172
00:11:31.040 --> 00:11:37.790
But always remember, while creating an engine, the port should not be occupied.

173
00:11:37.790 --> 00:11:39.620
Or you can say it's not running.

174
00:11:40.190 --> 00:11:43.610
You have to change it first and you have to change that part.

175
00:11:44.840 --> 00:11:49.040
So this is all about how we can do this.

176
00:11:50.450 --> 00:11:52.320
So now I will.

177
00:11:52.370 --> 00:11:55.400
What I can do is I'm going with some.

178
00:12:08.290 --> 00:12:11.490
Let me go with some things.

179
00:12:12.330 --> 00:12:13.770
Which is I am mentioning here.

180
00:12:14.880 --> 00:12:16.650
Or which is basically.

181
00:12:19.110 --> 00:12:20.550
Let me show Angelo.

182
00:12:21.590 --> 00:12:22.510
And G.

183
00:12:23.180 --> 00:12:26.930
I will share this to you all.

184
00:12:27.220 --> 00:12:30.950
Like Rock, TCP 1500.

185
00:12:31.670 --> 00:12:32.660
I will create this.

186
00:12:34.870 --> 00:12:35.080
Okay.

187
00:12:35.110 --> 00:12:35.300
Okay.

188
00:12:35.320 --> 00:12:35.770
Okay.

189
00:12:41.620 --> 00:12:45.490
So this is all about how you can do this thing.

190
00:12:52.780 --> 00:12:53.320
Oh.

191
00:12:53.770 --> 00:12:56.160
So this is my new application.

192
00:12:56.890 --> 00:12:59.980
Let me clear this and let me zoom this.

193
00:13:00.100 --> 00:13:04.630
And G Rock, TCP 1200.

194
00:13:05.730 --> 00:13:09.590
So sometimes it is unavailable, but you have to keep trying.

195
00:13:09.600 --> 00:13:12.570
It gives you the proper path.

196
00:13:14.110 --> 00:13:14.680
Of them.

197
00:13:16.340 --> 00:13:17.290
And you talk.

198
00:13:19.370 --> 00:13:20.320
The ICSI.

199
00:13:22.440 --> 00:13:24.010
In thousand 500.

200
00:13:26.070 --> 00:13:30.780
So it's showing me that these examples are not working because.

201
00:13:34.410 --> 00:13:35.940
Of all these things.

202
00:13:39.510 --> 00:13:42.570
So this is how you can do it.

203
00:13:46.160 --> 00:13:46.460
Okay.

204
00:13:47.230 --> 00:13:50.800
So now my local with TCP is running.

205
00:13:51.820 --> 00:13:55.840
As you can see, my local lost and each and everything is running here.

206
00:13:56.440 --> 00:13:59.260
So this is my port and this is my engine.

207
00:13:59.500 --> 00:14:02.050
So what I can do, I can copy this part first.

208
00:14:04.560 --> 00:14:09.240
And added to the chat system with client with this local host.

209
00:14:11.570 --> 00:14:13.910
And it gives me the port also.

210
00:14:15.320 --> 00:14:17.030
So this is my board, basically.

211
00:14:22.530 --> 00:14:23.820
So what I can do.

212
00:14:25.440 --> 00:14:26.010
So where is the.

213
00:14:26.250 --> 00:14:28.140
I told you, this is my port address.

214
00:14:28.140 --> 00:14:35.760
And before this is all things are my before this whole thing is sort of reddish.

215
00:14:35.760 --> 00:14:36.780
And this is the port.

216
00:14:37.660 --> 00:14:40.630
So let me add in the board this number.

217
00:14:41.680 --> 00:14:43.480
So don't close that engine apart.

218
00:14:43.630 --> 00:14:45.340
Let me run the server first.

219
00:14:45.940 --> 00:14:48.280
So this is basically for the testing purpose.

220
00:14:48.310 --> 00:14:50.900
Not considering here, but what you can do.

221
00:14:50.920 --> 00:14:56.410
You can put that server part in some online server port each and everything.

222
00:14:56.440 --> 00:14:58.690
Now let me run the client also here.

223
00:15:03.540 --> 00:15:06.060
You can say the connection is successful to this in Europe.

224
00:15:06.060 --> 00:15:12.360
And if I put who is in command each and everything, it will giving me the all the things.

225
00:15:12.390 --> 00:15:12.900
Now what is?

226
00:15:12.900 --> 00:15:17.960
The server is running on my own machine, but client can be running on any other machine.

227
00:15:17.970 --> 00:15:19.670
Let me add one more client here.

228
00:15:19.680 --> 00:15:24.560
As I told you, this is client two and I am mentioning his name is Sam.

229
00:15:24.570 --> 00:15:26.370
Sam is also connected to this.

230
00:15:26.850 --> 00:15:28.500
So let me add a more.

231
00:15:28.500 --> 00:15:29.490
Another client.

232
00:15:30.350 --> 00:15:31.460
Whose name is.

233
00:15:32.510 --> 00:15:33.320
James.

234
00:15:33.680 --> 00:15:34.910
So there are three.

235
00:15:36.320 --> 00:15:37.940
Let me check who is in command.

236
00:15:38.580 --> 00:15:39.470
Now, as I told you.

237
00:15:39.530 --> 00:15:41.700
John, Sam James are connected here.

238
00:15:41.720 --> 00:15:46.040
So from the James what I want to do, I want to send a message on Legion.

239
00:15:46.280 --> 00:15:48.140
John So I did it.

240
00:15:48.290 --> 00:15:50.210
John Messages.

241
00:15:50.840 --> 00:15:51.410
Hello?

242
00:15:52.260 --> 00:15:53.450
So let us see.

243
00:15:53.460 --> 00:15:54.710
John King.

244
00:15:54.720 --> 00:15:55.950
John, command prompt.

245
00:15:57.640 --> 00:15:58.600
He got the message.

246
00:15:59.350 --> 00:16:00.430
Did you see the message?

247
00:16:00.580 --> 00:16:01.780
But not this.

248
00:16:02.650 --> 00:16:07.720
As you can see, this is not joining if I'm quoting from some message.

249
00:16:08.080 --> 00:16:11.260
Hello, every one.

250
00:16:11.980 --> 00:16:14.410
What you can say it is broadcasted.

251
00:16:14.470 --> 00:16:16.450
You can see it is broadcasted.

252
00:16:17.120 --> 00:16:22.640
And from the server you can say all the messages here also Sam then each and everything.

253
00:16:22.640 --> 00:16:26.060
But in a private thing you can not see each and everything.

254
00:16:26.060 --> 00:16:31.730
So this is all about how we can put forward the engine and I run this part on the engine part also.

255
00:16:31.820 --> 00:16:37.880
So in further videos I'm going to tell you how we can create a GI and I will tell you each and everything

256
00:16:38.210 --> 00:16:38.630
there.

257
00:16:40.430 --> 00:16:41.840
So let us see how we can do.

258
00:16:41.840 --> 00:16:44.110
And also just close the engine off.

259
00:16:44.120 --> 00:16:50.180
You can say server is closed connection because I already done with that part and now you can see client

260
00:16:50.180 --> 00:16:51.950
is also connect disconnected.

261
00:16:51.950 --> 00:16:56.240
These are also disconnected because I closed that in Rockport.

262
00:16:56.240 --> 00:16:58.010
So the service is stop now.

263
00:16:58.400 --> 00:17:01.100
So this is all about how we can proceed with this.

264
00:17:01.310 --> 00:17:07.190
So in further videos, what I'm going to tell you, I'm going to tell you create of UI with Java String

265
00:17:07.190 --> 00:17:10.460
and how we can connect that TCP and each and everything in that thing.

266
00:17:10.460 --> 00:17:11.630
I'm going with the simplest.

267
00:17:11.630 --> 00:17:14.990
I'm not adding that using method and some private methods also.

268
00:17:15.320 --> 00:17:17.030
So let us see in that part.
