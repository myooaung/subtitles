1
00:00:01,380 --> 00:00:06,760
So till now we have created four classes inside this project.

2
00:00:06,780 --> 00:00:13,620
The main class, the contact class, the repository and the object repository class.

3
00:00:13,620 --> 00:00:21,230
And all these four classes have covered almost the functioning of the tree.

4
00:00:21,270 --> 00:00:29,560
Now we are going to create the frame which will be like consist all the input fields, buttons and everything.

5
00:00:29,610 --> 00:00:36,180
So in this we are going to feed everything inside the frame at how actually things should be up there

6
00:00:36,210 --> 00:00:37,230
inside the frame.

7
00:00:37,440 --> 00:00:45,030
So in order to do so, firstly let us create a new file inside this RC folder.

8
00:00:45,270 --> 00:00:52,070
We are going to name it as GSC Frame, not Java and I.

9
00:00:52,200 --> 00:00:56,430
Yes, this is going to be the GSC.

10
00:00:58,230 --> 00:01:03,270
And this is going to contain all the information regarding the frame.

11
00:01:03,330 --> 00:01:10,110
So on hitting enter a class or public class, GSC frame is being created.

12
00:01:10,140 --> 00:01:20,760
Now we will extend this to us as we are going to use the Java string package for the making of this

13
00:01:20,760 --> 00:01:22,320
frame basically.

14
00:01:22,350 --> 00:01:30,360
So Java X dot string dot z frame is the way to extend this class in the form of a frame.

15
00:01:30,750 --> 00:01:35,490
So swing the frame and yes, head it is.

16
00:01:35,730 --> 00:01:39,060
So in order to do so.

17
00:01:39,960 --> 00:01:41,130
We have to.

18
00:01:42,030 --> 00:01:42,720
Yes.

19
00:01:42,990 --> 00:01:45,600
Import one thing inside the.

20
00:01:46,780 --> 00:01:52,180
Class import Java X-Wing.

21
00:01:55,620 --> 00:01:58,140
Not the default list model.

22
00:01:59,740 --> 00:02:04,780
So everything here is displayed in the form of a list model.

23
00:02:05,350 --> 00:02:13,060
The contact list are listed here in the form of yes, it is basically listed here in the form of a list,

24
00:02:13,420 --> 00:02:18,280
whether it be the list of the names or the things inside the form.

25
00:02:18,880 --> 00:02:24,850
So yes, public class C frame is extended to Java showing frame.

26
00:02:24,880 --> 00:02:35,200
Now inside this, we will be declaring like some global variables which we will use in this like file

27
00:02:35,200 --> 00:02:40,060
later I repository which we have created.

28
00:02:40,480 --> 00:02:48,310
And the arguments inside this are going to be contact and integer.

29
00:02:49,420 --> 00:02:57,130
The key value we have already like mentioned it earlier and it is going to be a repository.

30
00:02:58,770 --> 00:03:05,550
So yes, this is a repository we have created inside the frame.

31
00:03:05,700 --> 00:03:09,090
Now, the second thing is going to be the list model.

32
00:03:09,330 --> 00:03:16,440
So private, the default list model.

33
00:03:19,230 --> 00:03:24,030
And that list model is going to contain the contact.

34
00:03:24,780 --> 00:03:27,690
So contact and list model.

35
00:03:28,860 --> 00:03:30,660
So list model.

36
00:03:31,350 --> 00:03:31,980
It is.

37
00:03:32,210 --> 00:03:40,320
Now we have declared two global variables, the repository and the list model inside the GSC Frame class.

38
00:03:40,350 --> 00:03:44,730
Now we are going to create a new form inside the frame.

39
00:03:45,120 --> 00:03:47,400
So how to create this form?

40
00:03:47,640 --> 00:03:53,160
Firstly, we will like creating a constructor called GSC Frame.

41
00:03:53,370 --> 00:04:02,760
So public GC Frame and the arguments inside this are going to be the repository, of course, contact

42
00:04:02,760 --> 00:04:04,050
integer again.

43
00:04:05,820 --> 00:04:11,670
Contact comma integer and then closing this.

44
00:04:13,490 --> 00:04:14,600
So yes.

45
00:04:14,600 --> 00:04:18,710
And the name is going to be Depositary, of course.

46
00:04:19,160 --> 00:04:23,840
So this is going to create a new form inside the JSC frame.

47
00:04:24,440 --> 00:04:31,670
This dot repository will help us to access the repository we have created declared as a global variable.

48
00:04:32,270 --> 00:04:36,680
So yes, the next thing is going to be the list model.

49
00:04:38,320 --> 00:04:42,120
List model new default list.

50
00:04:45,640 --> 00:04:46,030
Yes.

51
00:04:46,030 --> 00:04:47,620
The default list model.

52
00:04:48,250 --> 00:04:54,700
So the default list model has been like called inside the constructor.

53
00:04:54,910 --> 00:04:59,260
Now we will be creating init components.

54
00:04:59,410 --> 00:05:02,680
Fail list items are two functions.

55
00:05:02,680 --> 00:05:11,830
So first let us name them here init components and.

56
00:05:14,230 --> 00:05:16,870
The Phillies list items.

57
00:05:20,500 --> 00:05:24,010
This is written like this.

58
00:05:24,640 --> 00:05:27,670
So these two functions we will be creating.

59
00:05:28,390 --> 00:05:30,190
Stay tuned in this

60
00:05:32,800 --> 00:05:34,240
contact.

61
00:05:37,130 --> 00:05:38,510
Set the model.

62
00:05:38,630 --> 00:05:47,510
So the list model is going to be the structure of the model, like the frame we are going to create.

63
00:05:48,170 --> 00:05:48,800
Yes.

64
00:05:48,800 --> 00:05:54,290
So yes, this is like a new form inside the GC frame.

65
00:05:54,770 --> 00:06:01,460
Now we will be in the next step creating order in the component function.

66
00:06:01,670 --> 00:06:13,220
So in order to do so, coming outside this and creating that private void init component.

67
00:06:15,210 --> 00:06:21,150
Yes that's suggestions are already eager to create this.

68
00:06:22,470 --> 00:06:32,340
So after the creation of this init component inside this unit components, we have to like declare all

69
00:06:32,340 --> 00:06:37,170
of the components of the form and the frame.

70
00:06:37,170 --> 00:06:48,510
So firstly we have to create a panel for the contents, then a scroll pen and it is this panel and also

71
00:06:48,510 --> 00:06:50,910
it is going to be like a scroll pane.

72
00:06:51,360 --> 00:06:59,790
Once this frame is full, then we can scroll in order to move to different like below mentioned contents.

73
00:06:59,940 --> 00:07:08,550
So yes, things are going to be like a panel, a scroll pane and the list of contacts, which is like

74
00:07:08,550 --> 00:07:10,140
this one, two, three, four.

75
00:07:10,440 --> 00:07:18,630
It is going to be stored in the form of a list, then a label for the first name, the last name, the

76
00:07:18,630 --> 00:07:26,880
address, the address, whatever it was, everything has to be firstly had declared inside the frame

77
00:07:27,030 --> 00:07:30,540
so that we can add it to the frame later.

78
00:07:32,160 --> 00:07:41,040
So inside this init components function, we have initialized all that required like whether it be the

79
00:07:41,070 --> 00:07:49,650
label, the panel, the scroll pane, the list, we have mentioned it inside the init component.

80
00:07:49,680 --> 00:07:57,420
Basically we have initialized all of the requisites of this frame inside this init components function.

81
00:07:58,050 --> 00:08:05,370
There is a panel that is a scroll pane, a list of contacts, first name, last name.

82
00:08:05,370 --> 00:08:15,210
And similarly we have a label for the first name and a text like this, a label containing string,

83
00:08:15,210 --> 00:08:17,480
first name and then a text field.

84
00:08:17,610 --> 00:08:25,350
So yes, everything is written in a paired manner without label industrial text field.

85
00:08:25,740 --> 00:08:29,370
All seven of them are to note.

86
00:08:29,450 --> 00:08:35,610
And then for the button we are using Java String Button component.

87
00:08:35,610 --> 00:08:39,120
The button is a component of string library for buttons.

88
00:08:39,120 --> 00:08:43,590
So overall we have three buttons, remove update and add.

89
00:08:43,950 --> 00:08:50,640
So yes, these all are the are declarations inside the init component function.

90
00:08:50,640 --> 00:08:59,790
Now in the next step, we are going to set the detailing of the frame like whether it be the name of

91
00:08:59,790 --> 00:09:00,810
the title.

92
00:09:00,810 --> 00:09:07,320
So it is like mentioned here in the form of a label component and also this heading contacts.

93
00:09:07,320 --> 00:09:12,420
So yes, head it is set default close operation.

94
00:09:12,420 --> 00:09:15,840
So we are setting our default close operation.

95
00:09:15,840 --> 00:09:26,070
So whenever the user hits this close button, then they will escape out of this frame and also set title

96
00:09:26,070 --> 00:09:32,490
we have set title as Java String Container Contact and name as GSC Frame.

97
00:09:32,910 --> 00:09:38,280
So this in the contact title is Java String Contact.

98
00:09:38,730 --> 00:09:43,110
And similarly we have set the frame to resizable as false.

99
00:09:43,560 --> 00:09:47,840
So we will remove this as we want to resize the phone.

100
00:09:49,450 --> 00:09:51,910
To maximize it and minimize it.

101
00:09:51,910 --> 00:09:55,300
We want to keep this function working.

102
00:09:56,540 --> 00:10:01,400
If we set it to false, then it will like become disabled.

103
00:10:02,220 --> 00:10:06,480
And we will not be able to maximize or minimize this window.

104
00:10:07,320 --> 00:10:15,900
So after removing this ad window listener, Oxo window listener is attached here to listen all the actions,

105
00:10:15,900 --> 00:10:20,130
whether it be the closing or maximizing minimizing.

106
00:10:20,130 --> 00:10:25,500
So that operation are like handled by the window adapter.

107
00:10:25,590 --> 00:10:32,640
The window event listening is covering that closing or maximizing minimizing function.

108
00:10:32,730 --> 00:10:34,430
Now inside this.

109
00:10:34,440 --> 00:10:35,970
Okay, so we are done with the title.

110
00:10:36,420 --> 00:10:39,450
Now inside the frame we are having panels.

111
00:10:40,420 --> 00:10:40,720
Okay.

112
00:10:40,740 --> 00:10:43,660
So headed to J panel contact.

113
00:10:43,680 --> 00:10:50,490
So we have setup border and it is we have a border for this repository.

114
00:10:50,490 --> 00:10:56,520
And inside the border, the white thing you can see on your screen is a parent.

115
00:10:56,790 --> 00:11:00,750
So, yes, inside the border, we have certain layout.

116
00:11:01,080 --> 00:11:05,370
These are the dimensions for the contact frame.

117
00:11:05,370 --> 00:11:10,800
So, yes, this contact panel is containing the heading as contacts.

118
00:11:11,250 --> 00:11:18,390
And inside the border, we have set the layout for the like contact repository window.

119
00:11:18,840 --> 00:11:24,300
The panels are dimensions and layouts are covered with the help of this part.

120
00:11:24,540 --> 00:11:29,100
Now the next part is to, like, handle the scroll pin.

121
00:11:29,100 --> 00:11:37,830
So yes, once this list is full, then a scroller will appear, which will enable us to scroll through

122
00:11:37,830 --> 00:11:42,120
the contacts and yes, have a through all of them.

123
00:11:42,570 --> 00:11:46,140
Now we have added event listener to all of them.

124
00:11:46,380 --> 00:11:52,470
Like once we click on any of the contacts, then it will highlight change its color.

125
00:11:52,500 --> 00:11:57,510
So yes, whichever contacts is selected, then the color will change.

126
00:11:57,510 --> 00:12:00,240
So we have added events to all of them.

127
00:12:01,180 --> 00:12:09,130
Regarding to all of the highlights we have set our separator layout also now after this.

128
00:12:10,360 --> 00:12:18,670
After completing that, contact the repository panel we have inside this contact information panel and

129
00:12:18,670 --> 00:12:24,970
that contact information panel is containing heading as contact information.

130
00:12:25,390 --> 00:12:30,730
So from here we are covering the consistence of the form.

131
00:12:30,910 --> 00:12:33,610
This is the label for the first name.

132
00:12:33,730 --> 00:12:34,510
Last name.

133
00:12:34,870 --> 00:12:39,940
So yes, all the labels are listed inside the frame with the help of this.

134
00:12:40,120 --> 00:12:47,050
Now after this for like we have set the size for the column as well and set a line.

135
00:12:47,530 --> 00:12:55,960
So once we will enter something the line is full, then it will automatically change its line and start

136
00:12:55,960 --> 00:12:57,160
up adding in that name.

137
00:12:57,370 --> 00:13:00,490
So for that reason, the note we have done that.

138
00:13:01,290 --> 00:13:10,350
Line drafting and size for the column, like what could be the maximum length for the line to be filled

139
00:13:10,350 --> 00:13:14,100
and then start executing from the next line.

140
00:13:14,220 --> 00:13:22,530
So yes, inside this contact information form, we have set the labels for everything and how the input

141
00:13:22,530 --> 00:13:25,650
should be fed inside it in the form of a text.

142
00:13:25,650 --> 00:13:32,640
So our using dot set text enables to enter the text inside the text field.

143
00:13:33,630 --> 00:13:41,130
So after the contact formal labels for the button part we are having remove and then update buttons.

144
00:13:41,610 --> 00:13:50,050
So that remove button is containing US dedicated functionalities which will remove the action performed.

145
00:13:50,060 --> 00:13:53,880
So yes, this Remove Action Performed event enables.

146
00:13:54,590 --> 00:13:59,560
To remove that specific selected row from the repository.

147
00:13:59,570 --> 00:14:06,920
Similarly with the update button, it is calling the update action perform functionality.

148
00:14:07,160 --> 00:14:14,870
So the action listener is attached to all three of the buttons remove, update and add, and the actions

149
00:14:14,870 --> 00:14:22,130
that will be performed on the click of that specific button is listed inside this void function.

150
00:14:22,130 --> 00:14:29,630
So public void function for all of them action perform all three of them and are event attached to that

151
00:14:29,630 --> 00:14:30,340
buttons.

152
00:14:30,410 --> 00:14:35,270
So add action, update action and remove action.

153
00:14:36,760 --> 00:14:44,770
So after creating all the requisites of this flame, whether it be the contact side or the form side,

154
00:14:44,800 --> 00:14:52,370
now we will be adding all of them to the frame with the help of dot and keyword.

155
00:14:52,390 --> 00:14:55,870
So yes, we will cover this in the next step.
