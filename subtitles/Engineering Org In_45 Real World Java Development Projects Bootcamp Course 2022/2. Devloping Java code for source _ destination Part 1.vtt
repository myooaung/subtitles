WEBVTT
1
00:00:00.120 --> 00:00:07.490
Previous part, I told you how the package works so backwards is just dividing the data into small,

2
00:00:07.500 --> 00:00:13.820
small fragments, you can say, to perform different data actions on the network.

3
00:00:13.830 --> 00:00:18.030
So we are going to capture that whole part using Java.

4
00:00:18.120 --> 00:00:23.030
But first step is we are going to check our client is connected to that port or not.

5
00:00:24.930 --> 00:00:27.270
So I'm considering two random friends.

6
00:00:27.270 --> 00:00:29.850
I'm not considering very common plans.

7
00:00:29.850 --> 00:00:33.510
So I will tell you what is these things and all the things.

8
00:00:33.510 --> 00:00:40.470
So as this is all network security, what we can check, we have to check our client is connected to

9
00:00:40.470 --> 00:00:42.720
code or not or it's online or not.

10
00:00:43.110 --> 00:00:51.600
So for that purpose, what I'm going to create, I'm going to create here one class I already created,

11
00:00:51.600 --> 00:00:53.520
one project name as new monitor.

12
00:00:54.180 --> 00:01:01.020
And I'm going to create one class here as native monitor, net monitor.

13
00:01:01.380 --> 00:01:02.880
So let me check.

14
00:01:02.880 --> 00:01:03.200
Okay.

15
00:01:03.240 --> 00:01:04.340
Plus, hit enter.

16
00:01:04.770 --> 00:01:07.380
It will automatically create your own class.

17
00:01:08.070 --> 00:01:08.790
No.

18
00:01:08.790 --> 00:01:15.390
Now what I'm going to put here, private string.

19
00:01:16.020 --> 00:01:23.280
So I'm going to declare here features source, target and pooled source.

20
00:01:23.280 --> 00:01:24.050
I'm considering.

21
00:01:26.890 --> 00:01:27.700
Source.

22
00:01:29.200 --> 00:01:31.660
So let me minimize this cocaine.

23
00:01:33.460 --> 00:01:34.960
And this is my source.

24
00:01:34.960 --> 00:01:39.520
So I use a shortcut to repeat that length target.

25
00:01:42.920 --> 00:01:46.850
Our import is not strong.

26
00:01:48.890 --> 00:01:49.180
Cool.

27
00:01:49.790 --> 00:01:52.390
So these are my old private strings.

28
00:01:52.400 --> 00:01:54.680
Or you can say private details here.

29
00:01:54.830 --> 00:01:55.790
I'm considering.

30
00:01:56.210 --> 00:01:58.760
Now, let me put here.

31
00:02:00.240 --> 00:02:02.610
The public static void main.

32
00:02:05.310 --> 00:02:06.070
But we've said it.

33
00:02:06.100 --> 00:02:07.600
Werman So let me put.

34
00:02:10.520 --> 00:02:14.000
I mean, and these are my.

35
00:02:18.470 --> 00:02:20.570
Peter writes, here I am considering.

36
00:02:29.080 --> 00:02:29.580
Little.

37
00:02:31.840 --> 00:02:36.820
Mostly it's private data because I'm not not going to invoke it later.

38
00:02:36.820 --> 00:02:39.880
So let us consider it as a private.

39
00:02:40.300 --> 00:02:49.960
So now I'm using here some command line arguments to use some command line arguments we have if I'm

40
00:02:49.960 --> 00:02:51.850
going to put files.

41
00:02:52.210 --> 00:02:55.540
So if ARGs, which is basically arguments.

42
00:02:56.680 --> 00:02:58.990
No, not.

43
00:03:00.040 --> 00:03:00.760
Lent.

44
00:03:01.860 --> 00:03:03.390
Is he not equal to?

45
00:03:05.000 --> 00:03:08.870
Three is not equal to three.

46
00:03:09.860 --> 00:03:17.540
What I'm going to perform here is I need to display a few things here.

47
00:03:17.540 --> 00:03:18.380
I'm going to display.

48
00:03:20.520 --> 00:03:26.040
Which is basically a very common thing you can check, which is.

49
00:03:30.220 --> 00:03:37.660
What I'm going to do is system dot dot println first

50
00:03:40.300 --> 00:03:45.640
compile java code using.

51
00:03:50.660 --> 00:03:51.330
Jack.

52
00:03:51.980 --> 00:03:56.000
So I'm using your combined command line things directly.

53
00:03:56.450 --> 00:04:02.780
System, dot, dot, print and then.

54
00:04:04.370 --> 00:04:07.880
Use Java.

55
00:04:08.360 --> 00:04:12.920
So for my thing, what here is Java.

56
00:04:16.010 --> 00:04:17.330
The name is net monitor.

57
00:04:17.330 --> 00:04:18.110
Class Name.

58
00:04:19.270 --> 00:04:22.340
Net monitor dot java.

59
00:04:22.340 --> 00:04:22.880
Basically.

60
00:04:24.450 --> 00:04:25.650
And also.

61
00:04:27.020 --> 00:04:27.970
Java command.

62
00:04:28.580 --> 00:04:32.300
I will tell you how we are going to use here then.

63
00:04:34.180 --> 00:04:35.770
Source is.

64
00:04:35.860 --> 00:04:40.750
So let me put like this a of source IP.

65
00:04:42.770 --> 00:04:43.400
Then.

66
00:04:44.900 --> 00:04:46.370
Destination IP.

67
00:04:48.600 --> 00:04:49.110
Then.

68
00:04:49.880 --> 00:04:50.300
Paul.

69
00:04:53.450 --> 00:04:56.210
So this is our basic command.

70
00:04:56.240 --> 00:04:59.600
If you are not using this, we are we have to perform these.

71
00:05:01.730 --> 00:05:03.020
Just written this, this.

72
00:05:03.350 --> 00:05:08.840
So it will return all the things in the command line if you are not performing or if you are not putting

73
00:05:08.840 --> 00:05:09.290
these.

74
00:05:09.620 --> 00:05:12.050
So these things are done.

75
00:05:12.080 --> 00:05:14.480
Now let me create your net monitor.

76
00:05:15.860 --> 00:05:25.310
And more than you can look and put in your hand as my object, we put in a monitor, so you net monitor.

77
00:05:26.420 --> 00:05:32.870
So this is my little object class.

78
00:05:35.160 --> 00:05:35.610
Object.

79
00:05:35.940 --> 00:05:37.100
Let me tell you this.

80
00:05:37.110 --> 00:05:37.890
What is this?

81
00:05:39.660 --> 00:05:40.230
How?

82
00:05:43.300 --> 00:05:46.480
Come on is going to work.

83
00:05:46.750 --> 00:05:49.330
So this is how the command is going to work.

84
00:05:49.330 --> 00:05:50.320
We are going to use here.

85
00:05:50.320 --> 00:05:55.960
So I'm using here same the command prompt directly as my directing here.

86
00:05:56.170 --> 00:06:00.250
So let me put m dot set source, get source.

87
00:06:00.250 --> 00:06:03.550
These are some things here you can use.

88
00:06:03.550 --> 00:06:10.210
So set source, set source source sources.

89
00:06:10.210 --> 00:06:12.790
Very what I'm going to put here.

90
00:06:14.390 --> 00:06:15.500
I was zero.

91
00:06:15.530 --> 00:06:29.030
So what I'm going to do, I'm sitting here like my arse is not armed zero to this point or I will create

92
00:06:29.030 --> 00:06:32.000
one set or set target every method a year later.

93
00:06:32.090 --> 00:06:36.230
But let me put this first, because this is very important.

94
00:06:37.280 --> 00:06:41.630
Stargate argument is one.

95
00:06:42.410 --> 00:06:43.670
Your argument is two.

96
00:06:43.970 --> 00:06:48.760
It's like everything in Java.

97
00:06:49.130 --> 00:06:50.690
Arguments, command line arguments.

98
00:06:50.690 --> 00:06:58.330
So it's started from zero 1 to 3 and I will create that part later and start.

99
00:07:03.470 --> 00:07:04.820
That's my common method.

100
00:07:05.330 --> 00:07:14.690
So I will tell you how it's going to work and everything else so we can perform it later with sets,

101
00:07:15.890 --> 00:07:17.330
swords and everything.

102
00:07:19.080 --> 00:07:19.370
Oh.

103
00:07:19.540 --> 00:07:27.030
So let me perform two or three things here, which is basically one private void.

104
00:07:28.490 --> 00:07:30.930
So again, it's main method only.

105
00:07:32.570 --> 00:07:44.330
Or you can lose this method if you want to use such beautiful things or brackets, you can use it in

106
00:07:44.450 --> 00:07:44.870
brackets.

107
00:07:44.890 --> 00:07:46.520
It's one plugin in it.

108
00:07:48.260 --> 00:07:50.150
So let me create one.

109
00:07:51.130 --> 00:07:51.810
But I would.

110
00:07:54.040 --> 00:07:56.280
Lloyd Webber, May 30 CET.

111
00:07:56.320 --> 00:07:57.100
Source.

112
00:07:58.330 --> 00:07:59.590
Our method is set.

113
00:07:59.590 --> 00:08:00.310
Source

114
00:08:02.820 --> 00:08:03.450
as.

115
00:08:04.770 --> 00:08:08.490
I'm going to create here string s now.

116
00:08:10.770 --> 00:08:13.050
Same source we see.

117
00:08:14.210 --> 00:08:17.990
So I'm assigning this source to this all over set source method.

118
00:08:19.580 --> 00:08:23.470
Then I need one set port.

119
00:08:23.480 --> 00:08:28.520
But before that I need to create static method because I haven't created any start method.

120
00:08:28.760 --> 00:08:32.480
So let me create one private void.

121
00:08:33.710 --> 00:08:34.640
Start.

122
00:08:38.430 --> 00:08:39.930
Which is very common method.

123
00:08:40.050 --> 00:08:42.060
It's a starting method.

124
00:08:42.060 --> 00:08:47.970
Or we can say direct method throws unknown host exception.

125
00:08:49.470 --> 00:08:50.010
So.

126
00:08:51.990 --> 00:08:52.710
Unknown.

127
00:08:54.140 --> 00:09:00.550
Post exception and Iowa exception, which is very common thing, are your exception.

128
00:09:01.540 --> 00:09:05.500
Because if there is a exception, we need to perform this.

129
00:09:06.070 --> 00:09:10.480
Similarly, for this start method, you need to throw your.

130
00:09:12.230 --> 00:09:12.980
On the moon.

131
00:09:13.520 --> 00:09:14.690
Post exception.

132
00:09:15.320 --> 00:09:17.210
And you need to throw.

133
00:09:18.080 --> 00:09:21.080
Are you exceptional exception.

134
00:09:22.040 --> 00:09:25.070
So now everything is done.

135
00:09:25.730 --> 00:09:30.170
So let me put here one timer why a timer is needed.

136
00:09:30.230 --> 00:09:34.820
So I will create that part in later new time.

137
00:09:37.190 --> 00:09:39.760
Let me invoke this thing.

138
00:09:41.050 --> 00:09:49.330
So if you check all utilities basically for the timing part, let me put it this time so you can create

139
00:09:49.330 --> 00:09:50.050
your own time.

140
00:09:50.050 --> 00:09:55.410
Working in Java always put false here because never stop.

141
00:09:55.420 --> 00:10:02.410
So it will invoke this command again and again and again and again sometimes to check the activity of

142
00:10:02.410 --> 00:10:04.150
source and destination again.

143
00:10:04.480 --> 00:10:09.280
So it's not like we are done with some part.

144
00:10:09.280 --> 00:10:11.950
We need to put this to schedule.

145
00:10:11.950 --> 00:10:13.300
We need to create schedule.

146
00:10:13.390 --> 00:10:14.950
Now it's time task.

147
00:10:14.950 --> 00:10:17.710
So let me tell you how it's going to work.

148
00:10:19.670 --> 00:10:23.880
We need to create one new test connect so task.

149
00:10:23.900 --> 00:10:24.800
It's very.

150
00:10:26.390 --> 00:10:28.200
Commenting here, Flextronics.

151
00:10:30.550 --> 00:10:32.500
So actually it's.

152
00:10:34.630 --> 00:10:35.560
It's iconic.

153
00:10:35.560 --> 00:10:36.550
So it's not.

154
00:10:40.920 --> 00:10:42.990
Let me check whether it's working or not.

155
00:10:50.190 --> 00:10:51.510
X chromosome.

156
00:11:00.320 --> 00:11:01.520
Oh, and.

157
00:11:05.520 --> 00:11:07.920
It's just because I need to.

158
00:11:10.250 --> 00:11:11.780
Perform it again and again.

159
00:11:11.780 --> 00:11:13.550
So I need to use this.

160
00:11:14.480 --> 00:11:14.960
So.

161
00:11:18.160 --> 00:11:24.520
I will create that test task later, which is basically timer task.

162
00:11:25.930 --> 00:11:28.890
And the common thing is your text.

163
00:11:29.500 --> 00:11:32.530
So task is nothing, but it's very.

164
00:11:34.840 --> 00:11:41.680
You can say robust steam to create sockets and everything, ports and litter and binding that part.

165
00:11:41.950 --> 00:11:43.750
So now I'm going to create.

166
00:11:45.500 --> 00:11:46.540
So let me put here.

167
00:11:49.860 --> 00:11:51.510
A sane source.

168
00:11:55.920 --> 00:11:58.280
Let's turn.

169
00:12:01.570 --> 00:12:03.010
Same old.

170
00:12:04.070 --> 00:12:08.800
So similar, Mr. Lloyd said.

171
00:12:08.850 --> 00:12:11.800
All I'm going to perform here in be.

172
00:12:15.220 --> 00:12:17.670
Or is equal to P.

173
00:12:19.240 --> 00:12:23.350
Which I already told you how we are going to put here and

174
00:12:25.930 --> 00:12:26.590
assign.

175
00:12:28.210 --> 00:12:28.510
Eight.

176
00:12:29.790 --> 00:12:33.480
So again, private void.

177
00:12:35.000 --> 00:12:38.810
Set a target string.

178
00:12:39.110 --> 00:12:42.680
I'm going to create here target.

179
00:12:43.040 --> 00:12:44.710
I'm going to be target is equal.

180
00:12:46.250 --> 00:12:48.970
So now we are done with this part.

181
00:12:48.980 --> 00:12:50.330
So why?

182
00:12:50.360 --> 00:12:54.650
What is remaining thing is basically our class over text.

183
00:12:54.920 --> 00:12:58.160
So class which is basically subclass here you can consider.

184
00:12:59.550 --> 00:13:04.260
And currently, which is I'm using.

185
00:13:05.940 --> 00:13:08.360
Public class monitor, not these things.

186
00:13:09.330 --> 00:13:12.750
So I need to invoke that part also.

187
00:13:16.880 --> 00:13:20.510
So in this only I'm going to create one subclass.

188
00:13:24.140 --> 00:13:25.200
You can copy this.

189
00:13:34.410 --> 00:13:35.850
They asked us.

190
00:13:40.800 --> 00:13:46.620
I will tell you, what is this test run show and what is its exchange?

191
00:13:46.620 --> 00:13:49.650
Actually, timer task or.

192
00:13:52.570 --> 00:13:53.950
Premier Rust.

193
00:13:55.700 --> 00:13:56.390
So.

194
00:13:59.050 --> 00:14:02.290
I will tell you how we are going to perform each and every thing.

195
00:14:03.190 --> 00:14:11.710
But first, remember, it's based on trust and which is going to work here.

196
00:14:15.310 --> 00:14:20.860
So it's showing me the error because I'm not implementing any.

197
00:14:22.730 --> 00:14:23.440
Done methods here.

198
00:14:23.540 --> 00:14:26.150
So let me run one method public.

199
00:14:28.700 --> 00:14:29.210
Right.

200
00:14:33.060 --> 00:14:34.230
So now you can check.

201
00:14:34.230 --> 00:14:36.220
It's overriding this.

202
00:14:37.580 --> 00:14:40.340
So lights from the air support.

203
00:14:43.360 --> 00:14:46.840
Support in industry.

204
00:14:53.830 --> 00:14:57.490
Oh, I have to change this part, so I will change it later.

205
00:15:00.070 --> 00:15:01.600
Basically nothing.

206
00:15:01.600 --> 00:15:05.410
But I will tell you how I'm going to put your report and everything.

207
00:15:05.710 --> 00:15:08.070
It should be so.

208
00:15:10.750 --> 00:15:11.760
Teacher when you.

209
00:15:24.260 --> 00:15:29.180
Oh, which is basically it's going to take the integer value of these arguments.

210
00:15:33.600 --> 00:15:35.820
Or it should be in private.

211
00:15:35.820 --> 00:15:39.690
In private, and it should be not.

212
00:15:42.800 --> 00:15:45.810
You know, you can check the same.

213
00:15:46.630 --> 00:15:46.920
Okay.

214
00:15:47.550 --> 00:15:51.120
So basically arguments is always the string part, non integer part.

215
00:15:51.120 --> 00:15:52.680
So there might be errors.

216
00:15:52.680 --> 00:15:57.330
So in the next part, I'm going to implement this run method and I'm going to declare this.

217
00:15:57.360 --> 00:15:58.390
Hope you understand this.

218
00:15:58.410 --> 00:15:58.860
Thank you.
