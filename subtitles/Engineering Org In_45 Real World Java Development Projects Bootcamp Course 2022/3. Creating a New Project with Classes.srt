1
00:00:01,470 --> 00:00:02,670
Hello, everyone.

2
00:00:02,880 --> 00:00:10,770
So I hope you all have went through the introduction part of the noted down Java application that we

3
00:00:10,770 --> 00:00:12,720
are going to read today.

4
00:00:13,350 --> 00:00:22,380
So after getting through the introduction part, I hope that you have gained an insight of what we are

5
00:00:22,380 --> 00:00:25,110
actually going to make in this project.

6
00:00:25,200 --> 00:00:29,130
A text editor or something that we call it.

7
00:00:29,460 --> 00:00:34,770
So to begin this project, we have to create a Java file.

8
00:00:35,580 --> 00:00:36,960
Sorry, a Java project.

9
00:00:36,960 --> 00:00:37,800
And then.

10
00:00:38,880 --> 00:00:40,680
Start the project coding.

11
00:00:41,040 --> 00:00:42,750
So let's get started.

12
00:00:42,900 --> 00:00:49,770
We have opened the welcome page of Visual Studio code and then trying to write our code.

13
00:00:50,700 --> 00:00:51,630
So.

14
00:00:53,160 --> 00:00:55,560
On clicking this explorer icon.

15
00:00:57,060 --> 00:00:59,460
We get the option of create a Java present.

16
00:01:00,060 --> 00:01:05,040
So clicking on this icon, we will get an option of create our project.

17
00:01:05,490 --> 00:01:07,020
We will click on this.

18
00:01:08,280 --> 00:01:11,070
Then we will select No Beatles.

19
00:01:11,130 --> 00:01:19,010
Remember, we have no need of Springboard Quacks or Micro Profile in this programme project.

20
00:01:19,020 --> 00:01:21,620
So we will select no build tools.

21
00:01:21,630 --> 00:01:25,050
You also have to select this in your system.

22
00:01:25,930 --> 00:01:26,860
So yes.

23
00:01:27,280 --> 00:01:30,760
Now we have to select a path for our project.

24
00:01:32,080 --> 00:01:37,150
Suppose I want to create my notes down in my desktop folder.

25
00:01:37,330 --> 00:01:43,570
So I will go in the desktop and select the project location as desktop.

26
00:01:44,020 --> 00:01:45,070
Now clicking.

27
00:01:45,220 --> 00:01:50,590
We get a text field asking or asking for an input, a Java project name.

28
00:01:50,800 --> 00:01:58,510
So think about the name that you want your project to be named as and input in this text field.

29
00:01:58,960 --> 00:02:03,120
So I want to name my project as noted down.

30
00:02:04,610 --> 00:02:08,450
A folder, not a noun will be created if I hit enter here.

31
00:02:08,570 --> 00:02:13,370
So name your projects carefully and then press enter.

32
00:02:14,600 --> 00:02:16,400
So after hitting enter.

33
00:02:18,030 --> 00:02:27,570
So we navigate to this folder not down here with some in-built folders inside it.

34
00:02:27,960 --> 00:02:35,460
So you can see that this noted down folder contains this dot this dot virus called lib, which is for

35
00:02:35,460 --> 00:02:38,820
libraries and and a CRC folder.

36
00:02:39,730 --> 00:02:44,320
So the Farsi folder is the main part of.

37
00:02:45,460 --> 00:02:46,810
Any Java project.

38
00:02:48,040 --> 00:02:56,230
So if we open this, expand this ASIC folder, we get already an app that Java file is created.

39
00:02:57,510 --> 00:03:06,720
So these are the invalid folders which are created after hitting the Create Java project option and

40
00:03:08,040 --> 00:03:10,080
opening this approach Java file.

41
00:03:10,110 --> 00:03:13,590
We get this thing on our screens.

42
00:03:13,830 --> 00:03:18,660
So this approach, Java is basically a class of Java.

43
00:03:19,620 --> 00:03:23,940
This class is named as app inside this class we have.

44
00:03:24,750 --> 00:03:25,760
A main method.

45
00:03:26,910 --> 00:03:31,170
Which contains which is access specified as public.

46
00:03:31,170 --> 00:03:34,680
So any class can access this throughout this project.

47
00:03:36,090 --> 00:03:40,070
And inside this we have a string argument passed.

48
00:03:40,080 --> 00:03:41,010
So what?

49
00:03:41,010 --> 00:03:44,370
This function will return our string, of course.

50
00:03:45,190 --> 00:03:54,990
So when this function is called, when an exception is thrown, this part of the project is outputted.

51
00:03:55,000 --> 00:03:55,900
Helloworld.

52
00:03:56,500 --> 00:03:58,180
So what is the exception?

53
00:03:58,210 --> 00:03:59,290
You may be wondering.

54
00:04:01,390 --> 00:04:07,990
An exception is that type of error which arises under runtime in any program.

55
00:04:08,560 --> 00:04:12,820
So suppose we are running this program and there is some error.

56
00:04:13,990 --> 00:04:18,520
So this exception will throw this.

57
00:04:20,200 --> 00:04:28,520
This part in the console that whatever we want to write that suppose we want to write it asks whether

58
00:04:30,250 --> 00:04:32,290
we can write it anything.

59
00:04:33,310 --> 00:04:36,380
By default it is written as helloworld.

60
00:04:36,400 --> 00:04:43,090
So yes, if the program is any exception, this is called as an error.

61
00:04:43,600 --> 00:04:47,500
So if I run this part or whenever this part is called.

62
00:04:49,840 --> 00:04:50,290
Yes.

63
00:04:50,290 --> 00:04:52,150
So it displays error.

64
00:04:52,570 --> 00:05:00,310
So exception handling is one of the powerful mechanism to handle the runtime error so that the normal

65
00:05:00,310 --> 00:05:02,680
flow of application can be maintained.

66
00:05:04,150 --> 00:05:07,450
It is very difficult to find the box on your own.

67
00:05:08,880 --> 00:05:14,700
With the help of the compiler, we can know that on which and on which part of the code, we are getting

68
00:05:14,700 --> 00:05:22,200
the error and it becomes easy for us to debug this and run the code again to get our successful output

69
00:05:22,320 --> 00:05:25,620
or to program what we want to run it as.

70
00:05:26,250 --> 00:05:28,380
So after this.

71
00:05:29,580 --> 00:05:37,080
We are going to create a node node loan application, so we will create a new file.

72
00:05:38,190 --> 00:05:43,560
In that sassy folder itself and name it as not.

73
00:05:45,400 --> 00:05:47,590
But not Java.

74
00:05:48,280 --> 00:05:51,010
So this is the name of the file.

75
00:05:51,040 --> 00:05:59,650
I am going to create Notepad on Java and this file will going to display the main window of the application

76
00:05:59,650 --> 00:06:02,830
that we discussed in the working part of the code.

77
00:06:03,400 --> 00:06:08,500
So after hitting enter a notepad class is already created.

78
00:06:09,130 --> 00:06:12,370
So we want a class named as notepad.

79
00:06:13,940 --> 00:06:19,910
Now we want a frame inside which the notepad application is going to be consistent.

80
00:06:21,140 --> 00:06:21,890
Store.

81
00:06:22,890 --> 00:06:27,450
We have to import the libraries for creating the functions.

82
00:06:30,430 --> 00:06:31,240
Yes.

83
00:06:32,470 --> 00:06:41,410
Let us import the Java String Library, which is going to give us components like free panel and so

84
00:06:41,410 --> 00:06:41,890
on.

85
00:06:42,460 --> 00:06:50,310
We have many other packages inside the string API.

86
00:06:50,320 --> 00:06:52,120
So yes, importing.

87
00:06:54,330 --> 00:06:57,100
Java X string.

88
00:06:58,440 --> 00:06:59,010
Yes.

89
00:06:59,010 --> 00:07:08,190
So this asterisk here denotes that we are going to import all the classes and components of this string

90
00:07:08,190 --> 00:07:14,190
package and currently it is gray as we haven't used anything from it.

91
00:07:14,790 --> 00:07:19,020
Once we will use it, it will automatically change its color.

92
00:07:19,500 --> 00:07:30,590
Now inside the notepad class, we are going to extend that clear to J frame.

93
00:07:30,600 --> 00:07:31,020
Yes.

94
00:07:31,020 --> 00:07:39,630
So this frame is a component inside the Java String Library, so you can see it in the suggestions.

95
00:07:39,630 --> 00:07:42,780
So yes, we have imported.

96
00:07:43,790 --> 00:07:49,880
Swing Library and use a different component from it now.

97
00:07:50,870 --> 00:07:55,700
Inside this notepad class we are going to create a constructor.

98
00:07:57,350 --> 00:08:03,110
Or we can say that we are going to invoke a method called Notepad inside this.

99
00:08:04,630 --> 00:08:05,320
Now.

100
00:08:07,550 --> 00:08:16,730
Suppose that we want to give our title to the app, so calling it to set title.

101
00:08:22,880 --> 00:08:27,320
And think about a title like yes.

102
00:08:28,010 --> 00:08:31,370
For me, the title goes as noted down.

103
00:08:33,600 --> 00:08:36,720
We have started the title for our programs.

104
00:08:38,030 --> 00:08:38,610
Program.

105
00:08:38,610 --> 00:08:39,300
Sorry.

106
00:08:39,960 --> 00:08:44,190
And yes, I missed a race after this.

107
00:08:45,090 --> 00:08:50,640
After creating any constructor, we have to enclose everything inside races.

108
00:08:52,370 --> 00:09:00,170
After setting the title, we are going to set bounds like there is a height and width for the frame,

109
00:09:00,860 --> 00:09:06,590
so we have to decide it how much wide and how much longer we want it to be.

110
00:09:07,190 --> 00:09:10,040
So I am setting bounds.

111
00:09:11,750 --> 00:09:12,500
Yes.

112
00:09:12,740 --> 00:09:14,300
A rectangular one?

113
00:09:14,300 --> 00:09:15,460
I think so, yes.

114
00:09:16,310 --> 00:09:21,980
I suppose you can create any size you want.

115
00:09:22,920 --> 00:09:24,150
Now for him to be.

116
00:09:25,350 --> 00:09:26,050
600.

117
00:09:26,080 --> 00:09:26,710
Yes.

118
00:09:26,710 --> 00:09:27,400
So.

119
00:09:29,220 --> 00:09:30,930
I have created bonds.

120
00:09:31,560 --> 00:09:33,270
Now I am going to.

121
00:09:34,080 --> 00:09:41,230
Set the default close operation like on exiting the program's close.

122
00:09:41,280 --> 00:09:43,800
The window is going to close automatically.

123
00:09:44,730 --> 00:09:47,370
So setting default close operation.

124
00:09:47,850 --> 00:09:54,120
I have to write set default close operations and.

125
00:09:55,450 --> 00:10:00,970
But they should be closed on invoking this method.

126
00:10:02,510 --> 00:10:04,990
Exit on clothes?

127
00:10:05,000 --> 00:10:05,470
Yes.

128
00:10:05,480 --> 00:10:08,600
So the suggestions are life.

129
00:10:10,920 --> 00:10:17,580
So that said, default close operation is going to close the frame when we exit the program.

130
00:10:18,480 --> 00:10:24,780
Now let us try to run this and see what output it is going to give.

131
00:10:26,270 --> 00:10:28,160
But before running the program.

132
00:10:28,190 --> 00:10:34,140
Firstly, we have to create a function which will be responsible for running this notepad class.

133
00:10:34,160 --> 00:10:38,420
So creating a public class.

134
00:10:41,360 --> 00:10:48,710
Collector's men, and the arguments inside will be a string.

135
00:10:50,950 --> 00:10:51,850
Yes.

136
00:10:52,570 --> 00:10:53,260
No.

137
00:10:55,130 --> 00:10:56,360
Setting this.

138
00:10:57,360 --> 00:11:00,690
New notepad plus.

139
00:11:01,420 --> 00:11:05,440
Setting the visibility of these classes through.

140
00:11:06,130 --> 00:11:08,410
We have to call set visible.

141
00:11:09,670 --> 00:11:10,300
Yes.

142
00:11:10,300 --> 00:11:11,620
Set visible.

143
00:11:11,650 --> 00:11:15,550
And it takes automatically a boolean argument.

144
00:11:15,670 --> 00:11:19,030
So we want to see the application.

145
00:11:19,030 --> 00:11:21,190
So we are setting this visibility to.

146
00:11:21,190 --> 00:11:21,790
True.

147
00:11:21,910 --> 00:11:28,450
Now let's try and run this class and see what output we are going to receive.

148
00:11:30,270 --> 00:11:31,230
So perfect.

149
00:11:31,620 --> 00:11:33,300
We have created a frame.

150
00:11:34,580 --> 00:11:35,360
Yes.

151
00:11:36,230 --> 00:11:39,410
So these are the dimensions for this frame.

152
00:11:39,560 --> 00:11:41,930
The name in the title.

153
00:11:42,230 --> 00:11:50,020
And when we click on the close, it will automatically close and exit the notepad.

154
00:11:50,810 --> 00:11:52,070
So perfect.

155
00:11:52,580 --> 00:11:59,480
We have created the wide frame of this program, a mainframe which we inside which we are going to.

156
00:12:00,240 --> 00:12:07,560
And all the components to be performed for editing, writing and saving our text documents.

157
00:12:08,010 --> 00:12:17,550
Now, in the next part, we will learn how to earn nav bar items such as file, edit, health and what

158
00:12:17,550 --> 00:12:19,760
these buttons will consist of.

159
00:12:19,770 --> 00:12:21,810
So see you in the next five.
