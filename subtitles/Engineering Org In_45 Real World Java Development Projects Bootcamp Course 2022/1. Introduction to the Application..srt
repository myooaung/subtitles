1
00:00:00,810 --> 00:00:01,980
Hello, everyone.

2
00:00:02,100 --> 00:00:10,800
So in the series of learning how to make projects in Java today, we are going to learn one more project

3
00:00:10,830 --> 00:00:12,180
within Java.

4
00:00:12,570 --> 00:00:22,460
The title of this project is Not and Classes and this is basically an interesting game made in Java.

5
00:00:22,470 --> 00:00:28,650
So we will be learning how to make this application from scratch.

6
00:00:28,650 --> 00:00:31,160
Like we will be writing the code.

7
00:00:31,170 --> 00:00:36,220
We will be like handling the functionalities behind everything.

8
00:00:36,240 --> 00:00:42,660
So on your screen you can see that this is the interface of the application.

9
00:00:42,660 --> 00:00:47,580
Like when the application will run, then this interface will open.

10
00:00:47,610 --> 00:00:51,420
This interface will open after some tasks performing.

11
00:00:51,420 --> 00:00:57,750
But the first window which will be open is this one where I am revolving my cursor.

12
00:00:57,870 --> 00:01:01,350
So this is the homepage of the application.

13
00:01:01,680 --> 00:01:03,930
This is a resizable window.

14
00:01:03,930 --> 00:01:11,580
Like we can maximize it or minimize it so we can like criticize it as we want.

15
00:01:11,580 --> 00:01:21,600
And also the other part of this application is that you will be learning how to make project in Java.

16
00:01:21,600 --> 00:01:29,550
Like you will be learning the concepts of a language and also you will be like making something very

17
00:01:29,550 --> 00:01:37,980
interesting, like making something very interesting while learning something makes the work more involving

18
00:01:37,980 --> 00:01:39,180
more amazing.

19
00:01:39,180 --> 00:01:45,030
Like suppose you are making something that after making you can enjoy playing it.

20
00:01:45,030 --> 00:01:48,030
Like this is a game, an interesting game.

21
00:01:48,330 --> 00:01:56,190
I hope you all must have went through this game in your childhood where we used to make classes, we

22
00:01:56,190 --> 00:02:03,840
used to make O's and the player with three consecutive consecutive.

23
00:02:04,590 --> 00:02:07,110
Exes are the Eagles, Vince.

24
00:02:07,110 --> 00:02:14,280
So I hope most of the like us are aware about this game.

25
00:02:14,430 --> 00:02:19,310
So now we are going to make this application with ourselves.

26
00:02:19,320 --> 00:02:21,780
And in Java, of course.

27
00:02:22,500 --> 00:02:26,880
So I hope you went through the interface of this application.

28
00:02:27,450 --> 00:02:30,540
When we will open the application, this window will open.

29
00:02:31,140 --> 00:02:36,900
This contains a total three nine and 2226.

30
00:02:36,900 --> 00:02:37,210
Okay.

31
00:02:37,260 --> 00:02:47,730
So in total there are 15 blocks are title bar containing the Java coffee icon and these three options

32
00:02:47,730 --> 00:02:52,590
of minimizing and canceling the place like escaping the application.

33
00:02:52,890 --> 00:02:58,680
Also, we have a dedicated button in the frame for exiting the application.

34
00:02:59,160 --> 00:03:02,580
You can do this with this also and this button also.

35
00:03:03,540 --> 00:03:06,960
We have a dedicated button for resetting the game.

36
00:03:07,050 --> 00:03:13,470
Like suppose for the possibility of winning any of any player becomes impossible.

37
00:03:13,470 --> 00:03:18,240
Then we can reset the game and start playing the game over and over.

38
00:03:18,390 --> 00:03:24,990
So this application is responsive, like we can play this in any size.

39
00:03:25,140 --> 00:03:31,140
I will show this in the working of application part that how this is responsive.

40
00:03:31,140 --> 00:03:38,880
I will resize the application and show you that it will like set itself according to the size of the

41
00:03:38,880 --> 00:03:39,600
screen.

42
00:03:39,990 --> 00:03:49,590
Also, there are two players player, sex, score and player all the score and the player who wins scores

43
00:03:49,590 --> 00:03:54,630
are updated like you can play infinite number of times.

44
00:03:55,260 --> 00:04:00,810
Those player winning score will be updated in this block and for zero as well.

45
00:04:01,830 --> 00:04:07,790
Now some more functionalities are like suppose player X or player wins.

46
00:04:07,800 --> 00:04:20,160
So like as soon as three of the rows matches like whether diagonally or horizontally automatically the

47
00:04:20,160 --> 00:04:29,490
pop up the offer dialog box appears and this message shown up that player opens or if player X will

48
00:04:29,490 --> 00:04:37,380
win, it will show that player x wins and you have to click on okay to exit this dialog box and to start

49
00:04:37,380 --> 00:04:39,210
playing the next chance again.

50
00:04:39,510 --> 00:04:46,170
So this dialog box is also a functionality added in the application window.

51
00:04:46,170 --> 00:04:54,420
Like in the programming part, there is a separate dedicated code section for this or dialog box.

52
00:04:54,420 --> 00:05:03,690
Similarly, suppose if we want to exit the game like like we have all the chances place and our decision

53
00:05:03,690 --> 00:05:06,660
came that this final player is winning.

54
00:05:06,660 --> 00:05:14,550
Or suppose we want to exit the application so we can click on this exit button and the dialog box in

55
00:05:14,550 --> 00:05:18,510
the similar way of the winning method for exiting message.

56
00:05:18,510 --> 00:05:25,170
Also there is a confirm dialog box will appear with a yes and or no option.

57
00:05:25,170 --> 00:05:32,850
So suppose if you click this exit button mistakenly so in the confirmation dialog box you can click

58
00:05:32,850 --> 00:05:33,390
no.

59
00:05:33,390 --> 00:05:35,610
And again the game will resume.

60
00:05:36,150 --> 00:05:45,330
Also, if you purposely click this exit button, then you can click yes to exit the game like the game

61
00:05:45,330 --> 00:05:48,630
window will be escape and the game will be closed.

62
00:05:50,150 --> 00:05:55,550
Now let us take a quick look at the specification of this project.

63
00:05:55,820 --> 00:05:58,800
So this is a game for two players.

64
00:05:58,820 --> 00:06:07,310
Like we have a player X and player row and between these two only the battle is going on that who will

65
00:06:07,310 --> 00:06:07,830
win.

66
00:06:07,850 --> 00:06:15,440
So this is a two player game and who takes turns marking the spaces in a three by three grid with X

67
00:06:15,440 --> 00:06:15,880
or you?

68
00:06:15,920 --> 00:06:20,390
So we had the three by three then this is the grid.

69
00:06:20,720 --> 00:06:26,990
These three, these three, the three either horizontally or vertically or diagonally.

70
00:06:26,990 --> 00:06:34,400
Any player comes in like consecutive way that specific player will win that game.

71
00:06:34,790 --> 00:06:43,580
Also, the player who succeeds in placing three of their mouths in horizontal, like I said, the three

72
00:06:43,610 --> 00:06:52,850
horizontal, vertical or diagonal like in a row, then that specific player will win and it is a solid

73
00:06:52,850 --> 00:06:53,110
game.

74
00:06:53,120 --> 00:07:01,010
So yes, you may be wondering that how the computer knows that the three rows are complete and this

75
00:07:01,010 --> 00:07:02,960
is the case for winning this game.

76
00:07:02,960 --> 00:07:11,510
So we have already made the algorithm like this that if the three specific places are filled with a

77
00:07:11,510 --> 00:07:21,110
single color like cross or zero, so if the horizontal or vertical or diagonal becomes same, then we

78
00:07:21,110 --> 00:07:27,200
have to like show the dialog box that that specific player wins the game.

79
00:07:27,350 --> 00:07:35,660
So we will be looking at the application program and then we will figure out that how it is an already

80
00:07:35,660 --> 00:07:40,400
solid game with a force to draw, assuming the best play from both players.

81
00:07:40,400 --> 00:07:49,520
So we have like taking the inputs from the players and there is already decided that if three comes

82
00:07:49,520 --> 00:07:56,510
in a row then we have to show that yes, you want like whether it be X or whether it be zero.

83
00:07:57,710 --> 00:08:03,830
Now we have went through the specifications of the project, the interface of the project.

84
00:08:03,830 --> 00:08:07,480
Right, how it is going to look on that window.

85
00:08:07,490 --> 00:08:14,180
Now, you all may be wondering that what actually we are going to learn while making this project and

86
00:08:14,180 --> 00:08:20,780
it is a very natural question that we are making a game, we are making a game in Java itself.

87
00:08:20,780 --> 00:08:28,820
So what are the concepts of Java we will be learning while the making of this game, this project in

88
00:08:28,820 --> 00:08:29,630
core Java.

89
00:08:29,810 --> 00:08:35,660
So the first and foremost thing we are going to learn is object oriented programming.

90
00:08:35,660 --> 00:08:43,670
In Java, object oriented programming is the best like method of making any project in Java.

91
00:08:43,790 --> 00:08:53,270
We should prefer making projects using this open concept only like it makes the coding part very easy,

92
00:08:53,270 --> 00:08:56,060
convenient and user friendly.

93
00:08:56,090 --> 00:09:02,600
Like we have to write like a bit of code and we can use it again and again.

94
00:09:02,600 --> 00:09:11,600
The reusability factor is the most like exciting feature of object oriented programming and fascinated

95
00:09:11,600 --> 00:09:12,830
me the most.

96
00:09:12,830 --> 00:09:18,410
And like this took me to this object oriented programming thing in Java.

97
00:09:18,890 --> 00:09:23,390
So yes, there are many other features in object oriented programming.

98
00:09:23,390 --> 00:09:30,680
We have classes and objects inside object oriented programming and objects are, we all know real world

99
00:09:30,680 --> 00:09:35,510
entities so we can handle the real world data with this.

100
00:09:35,510 --> 00:09:36,170
Oops.

101
00:09:36,800 --> 00:09:45,530
So yes, we have extensively used the string and AWG frameworks while making this project.

102
00:09:45,530 --> 00:09:55,220
We have used the J frame j buttons, j menu, bar item, and so many of string components are going

103
00:09:55,220 --> 00:09:58,130
to be used by making up this project.

104
00:09:58,130 --> 00:10:07,850
So it's going to be interesting learning that how this game could be made, but simply using some already

105
00:10:07,850 --> 00:10:16,850
declared components in the library, whether it be swing or AWP, we just have to simply import with

106
00:10:16,910 --> 00:10:25,400
a one line code like import Java, dot, AWP and string, and every component inside the string and

107
00:10:25,410 --> 00:10:31,940
AWP will be imported and we can use it wherever we want to use it in the code.

108
00:10:32,780 --> 00:10:38,900
So apart from these things, we are going to actually learn, of course our game tutorial.

109
00:10:38,900 --> 00:10:48,470
So you must be have heard about this that like a game development team is very complex and we have to

110
00:10:48,470 --> 00:10:49,040
learn.

111
00:10:49,130 --> 00:10:54,040
So many languages in order to make a actually working game.

112
00:10:54,050 --> 00:11:03,890
But the speciality of this project that we are going to make a game like this and this is made in core

113
00:11:03,920 --> 00:11:05,030
Java itself.

114
00:11:05,210 --> 00:11:13,940
Of course it is an interesting game and it may like involve many complex like involving like many complex

115
00:11:13,940 --> 00:11:17,720
packages, libraries, extension and it could be anything.

116
00:11:17,720 --> 00:11:26,330
But no, we are just using core Java for writing the program and with a simple Java programming language,

117
00:11:26,360 --> 00:11:28,580
you can make this project.

118
00:11:28,610 --> 00:11:38,810
You do not have to learn anything else, any like backend library, any other language like packages.

119
00:11:38,840 --> 00:11:46,710
We just have to learn how to write code in Java and then we can jump into learning this project.

120
00:11:46,730 --> 00:11:52,250
So this is the most interesting feature while making this project.

121
00:11:53,360 --> 00:11:57,200
We are also going to learn functionalities of a to play a game.

122
00:11:57,780 --> 00:12:05,750
Like there are various types of games, a single player game A to play a game or a multiplayer game.

123
00:12:05,760 --> 00:12:11,960
So in this we are going to learn that how to tackle functionalities of a two player game.

124
00:12:11,960 --> 00:12:21,140
We have to set functions like in this manner that if like this thing happens, like if suppose X comes

125
00:12:21,140 --> 00:12:28,730
in a row, whether it is horizontal, diagonal or vertical, then we have to update the score of that

126
00:12:28,730 --> 00:12:29,960
specific player.

127
00:12:29,960 --> 00:12:33,530
And like the second player score will remain same.

128
00:12:33,560 --> 00:12:34,810
That will be noted.

129
00:12:34,820 --> 00:12:42,860
So we are going to write loops, conditions inside Java so that we can tackle this to play our game

130
00:12:42,860 --> 00:12:46,100
by maintaining the scores in that manner.

131
00:12:46,100 --> 00:12:50,300
The game is happening like the game is taking place.

132
00:12:51,290 --> 00:13:02,090
So I hope you all have gained a rough idea about this project and must be like we all are having a nature

133
00:13:02,120 --> 00:13:10,220
that if we hear about something interesting, we develop our inquisitiveness inside us to learn how

134
00:13:10,220 --> 00:13:14,240
to make that specific thing which fascinated us.

135
00:13:14,240 --> 00:13:22,340
So I hope that you all are excited about learning how to make this project from scratch as we are going

136
00:13:22,340 --> 00:13:30,200
to start making things from scratch by creating a new project in the compiler and then like initializing

137
00:13:30,200 --> 00:13:37,070
classes, initializing functions and everything inside it, like all the objects, methods and everything.

138
00:13:37,070 --> 00:13:45,350
So let us take a quick look at the working of the application and then start the coding path.

139
00:13:45,380 --> 00:13:48,770
Let how to start coding for this project.

140
00:13:48,770 --> 00:13:54,410
So see you in the next part with the other functionalities of this project.

141
00:13:55,770 --> 00:13:56,610
Thank you.
