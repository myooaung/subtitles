WEBVTT
1
00:00:02.340 --> 00:00:10.680
So in this video we will be talking about the two files further that are log in or Java and or Java.

2
00:00:10.740 --> 00:00:12.690
So let's start.

3
00:00:13.290 --> 00:00:16.800
So the log in dot Java file has been.

4
00:00:19.140 --> 00:00:23.190
Designed inside or coded inside the package bank.

5
00:00:23.190 --> 00:00:29.640
And we have imported the necessary packages that are Java data for graphical user interface Java dot

6
00:00:30.150 --> 00:00:34.560
dot event to handle events on buttons or menu items.

7
00:00:34.590 --> 00:00:43.230
After that Java swing to create an interactive graphical user interface and Java dot scale to handle

8
00:00:43.230 --> 00:00:45.540
and interact with our database.

9
00:00:47.240 --> 00:00:53.300
After that we have defined the login class which is extending the frame and implementing the action

10
00:00:53.300 --> 00:01:00.650
listener inside which we have three labels 11, L, two and three and the text field F one and the password

11
00:01:00.650 --> 00:01:04.730
field PFA two and there are three buttons B1, B2 and V three.

12
00:01:05.590 --> 00:01:09.010
Now we have defined the non parameterized constructor of this class.

13
00:01:09.670 --> 00:01:12.970
Setting the title as automated teller machine.

14
00:01:13.600 --> 00:01:15.660
After that, here it is.

15
00:01:15.670 --> 00:01:16.540
Image Icon.

16
00:01:16.540 --> 00:01:22.120
We have loaded the image icon with the help of class loader logcat system resource inside which we have

17
00:01:22.120 --> 00:01:23.050
passed the.

18
00:01:24.960 --> 00:01:27.630
Part of that image which we want to display.

19
00:01:27.660 --> 00:01:31.590
After that we have a scale to the instance size and it's.

20
00:01:32.390 --> 00:01:36.560
Type image type with the help of the image object title.

21
00:01:36.890 --> 00:01:41.890
Again, we have stored that item image in the image icon object three.

22
00:01:41.900 --> 00:01:49.340
Then we have added that image icon object in the label l11 So this label will be displaying the image.

23
00:01:49.370 --> 00:01:56.150
After that, we have set the bound for that label with location will be seven, comma, ten, and its

24
00:01:56.210 --> 00:01:58.190
size will be 100 to 100.

25
00:01:59.670 --> 00:02:02.500
After that, we have added the label to our frame.

26
00:02:02.520 --> 00:02:07.190
Similarly, there is a label, one where it is showing a new label.

27
00:02:07.200 --> 00:02:08.370
Welcome to ATM.

28
00:02:08.580 --> 00:02:12.210
After that 11% set font a new font.

29
00:02:12.330 --> 00:02:14.820
The font type is also its font.

30
00:02:16.210 --> 00:02:17.290
Family is offered.

31
00:02:17.310 --> 00:02:19.750
One type is bold and font size is 38.

32
00:02:19.870 --> 00:02:24.700
After that, we have set bond bound for the fonts, which will set location and size.

33
00:02:24.730 --> 00:02:29.140
Location is 200, comma 40 and its size is for 50 cross 40.

34
00:02:29.650 --> 00:02:31.510
Then we have added that label to our.

35
00:02:33.000 --> 00:02:33.570
Frame.

36
00:02:33.570 --> 00:02:43.320
After that, there is another label as a card number for which we have said the font like font families

37
00:02:43.320 --> 00:02:48.390
railway font type is bold and font size is 28.

38
00:02:48.420 --> 00:02:50.280
After that we have said bound for it.

39
00:02:50.610 --> 00:02:52.350
Location is 125 comma.

40
00:02:53.110 --> 00:02:58.510
150 and sizes 375 Cross 30 added that label to our frame.

41
00:02:59.760 --> 00:03:05.120
After that there is text filled to a font size of 15 and set bound for it.

42
00:03:05.130 --> 00:03:08.940
Location will be 300 comma 150 in size will be to 30, cross 30.

43
00:03:09.150 --> 00:03:15.390
After that we have set the font for it, which will be Arial and the type is bold and the font size

44
00:03:15.390 --> 00:03:16.180
is 14.

45
00:03:16.200 --> 00:03:18.150
Then we have added that to our frame.

46
00:03:19.790 --> 00:03:21.980
After that, there is a label named as Penn.

47
00:03:21.980 --> 00:03:24.350
So it's we have set the font for it.

48
00:03:24.530 --> 00:03:28.760
Font Families, railway font type is bold and font size is 28.

49
00:03:28.760 --> 00:03:36.380
Then we have set the bound for it was location will be 125 comma 20 and size will be 375 cross 30 added

50
00:03:36.380 --> 00:03:37.820
that label to our frame.

51
00:03:38.120 --> 00:03:40.760
After that there is a password field.

52
00:03:40.790 --> 00:03:43.670
We have created the instance of the password field.

53
00:03:43.700 --> 00:03:50.870
Then we have set the found font for that password field font families arial font type is bold and font

54
00:03:50.870 --> 00:03:52.010
size is 14.

55
00:03:52.010 --> 00:03:59.150
After that we have created set its bounds so by which its location and size will be fixed.

56
00:03:59.150 --> 00:04:02.570
And then we have added that password fill in our frame.

57
00:04:04.080 --> 00:04:05.580
Then there are three buttons.

58
00:04:05.580 --> 00:04:11.820
First button is for the sign in, so setting its background colour as black, foreground colour as white.

59
00:04:11.910 --> 00:04:16.860
After that there is a button clear button setting its background colour as black, foreground colour

60
00:04:16.860 --> 00:04:17.640
as white.

61
00:04:17.670 --> 00:04:23.580
After that there is a button sign up whose background colour as black and foreground colour is white.

62
00:04:23.820 --> 00:04:26.730
Then we have set the layout of the complete frame as well.

63
00:04:26.760 --> 00:04:30.780
After that we have set the font and bound for each button.

64
00:04:31.350 --> 00:04:38.580
The font is a type, is bold and 14 for every button while the buttons for every button has been set

65
00:04:38.580 --> 00:04:39.390
at different.

66
00:04:41.140 --> 00:04:45.760
After that, we have added action on all of these buttons p one between v three.

67
00:04:46.030 --> 00:04:52.660
Then we have set the background color of the complete window that is colored dot white, set the size

68
00:04:52.660 --> 00:04:55.410
for the window that is 800 cross for 80.

69
00:04:55.450 --> 00:04:59.940
After that, we have set the location that is 550, comma 200.

70
00:04:59.950 --> 00:05:04.480
So that will be the location of opening of this login window and its visibility as true.

71
00:05:04.810 --> 00:05:08.620
After that we have defined the action, perform the method.

72
00:05:09.400 --> 00:05:14.740
Public Void Action performed method, which is taking an action event type of object so inside which

73
00:05:14.740 --> 00:05:19.870
we have defined a catch block, inside the try block, we have defined for the if statement which is

74
00:05:19.870 --> 00:05:22.390
a dot get sources equals to is goes to be one.

75
00:05:22.390 --> 00:05:29.230
So we one is the button which is for signing purpose here, one for sign and purpose.

76
00:05:29.230 --> 00:05:33.670
So if the source of the event is from B, one source of the event is from V1.

77
00:05:33.670 --> 00:05:39.340
Then we will create a connection with our with the help of our connection class with the database and

78
00:05:39.340 --> 00:05:46.420
inside the string car number, we will be fetching the detail from the text field one and inside the

79
00:05:46.570 --> 00:05:51.970
string pane we will be fetching the details from our past field password field and we have created a

80
00:05:51.970 --> 00:05:52.240
string.

81
00:05:52.240 --> 00:05:54.700
Q Which is holding select aspect from login.

82
00:05:54.700 --> 00:05:56.500
We are car number and pin will match.

83
00:05:56.500 --> 00:06:00.490
So at the enable login database where the car number and PIN will match.

84
00:06:02.130 --> 00:06:03.960
Then we will execute the results that.

85
00:06:05.490 --> 00:06:11.610
With the help of our civil and stance and their statement and stance and with the execute method inside

86
00:06:11.610 --> 00:06:13.300
which we have passed the string.

87
00:06:13.300 --> 00:06:14.310
Q As an argument.

88
00:06:14.310 --> 00:06:21.870
So this will execute that query after that for asked next which will be moving the control of the.

89
00:06:23.130 --> 00:06:25.590
My database over to the next record.

90
00:06:26.310 --> 00:06:31.140
That means the record which for which the card number and pin will be matched and set the visibility

91
00:06:31.140 --> 00:06:32.790
of the current window as false.

92
00:06:32.790 --> 00:06:36.360
And we will be calling new transaction pin and set as well.

93
00:06:36.360 --> 00:06:42.300
So after the successful login, we will call the transaction class by passing the pin as an argument

94
00:06:42.300 --> 00:06:44.800
to its constructor and set this visibility as true.

95
00:06:45.870 --> 00:06:49.440
Otherwise we will show that incorrect card number or pin.

96
00:06:50.250 --> 00:06:57.000
If the source of the button is from B2, then we will just set the DF one NPF two as null because b

97
00:06:57.000 --> 00:06:58.560
two button is for reset.

98
00:06:58.560 --> 00:07:01.190
I think b to button is for clear air.

99
00:07:01.230 --> 00:07:07.110
That means we will be clearing all the fields of DF one and B often that are text field and password

100
00:07:07.110 --> 00:07:07.560
field.

101
00:07:07.740 --> 00:07:11.610
If the source also button is from B three, then we will set the visibility of the current window as

102
00:07:11.610 --> 00:07:17.400
false and move the control of the program to our sign up window, which we will be learning about the

103
00:07:17.400 --> 00:07:20.130
sign up clause in our next video.

104
00:07:21.380 --> 00:07:24.560
And set the visibility as to after that inside the cache block.

105
00:07:24.560 --> 00:07:29.600
What we will be doing is we will handling any exception if occurs and inside the public static main,

106
00:07:29.600 --> 00:07:34.460
we will be setting the visibility of the login class as through.

107
00:07:35.840 --> 00:07:38.600
Now let's have a look at the pending Java file.

108
00:07:39.050 --> 00:07:45.930
So pinned or Java file is also defined inside the package bank and we have imported the necessary packages.

109
00:07:45.950 --> 00:07:50.990
Those are Java, JWT and Java events, swing and Java as well.

110
00:07:51.260 --> 00:07:56.650
Now we have defined the public class pin, which is extending the frame and implementing action listener

111
00:07:56.690 --> 00:07:57.380
class.

112
00:07:57.470 --> 00:07:59.480
Now a password field.

113
00:07:59.780 --> 00:08:03.250
There are two passwords fields 2122.

114
00:08:03.260 --> 00:08:05.270
Then there is a two buttons, b one and B two.

115
00:08:05.360 --> 00:08:09.350
Then there are three labels L1, L2 and N three and a string pin.

116
00:08:10.510 --> 00:08:12.310
And these are the instance of this class.

117
00:08:12.340 --> 00:08:18.880
After that, we have defined the parameterized constructor for this class, which is taking a pin.

118
00:08:20.100 --> 00:08:22.590
As a string variable inside it.

119
00:08:22.590 --> 00:08:28.280
So we will be setting the start pin current and stance of pin variable to the past string pin.

120
00:08:28.290 --> 00:08:36.510
After that we have defined the image icon by passing the image source or location from our system and

121
00:08:36.510 --> 00:08:38.550
then creating another image instance.

122
00:08:38.550 --> 00:08:45.840
And after that we have added that image icon to a label for setting the bound for the label whose location

123
00:08:45.840 --> 00:08:53.980
will be zero, comma, zero and size will be 960 cross 181080 and adding that label to our frame.

124
00:08:54.000 --> 00:08:56.430
After that, there are many labels as well.

125
00:08:56.430 --> 00:09:03.060
So first is the option is change your pin setting font for it, font, family type and size, then setting

126
00:09:03.060 --> 00:09:04.710
background color as white.

127
00:09:04.710 --> 00:09:10.140
Then there is another label as new pin setting font, family type and size and foreground color as white.

128
00:09:10.140 --> 00:09:12.330
Similarly, there is a new pin.

129
00:09:13.650 --> 00:09:16.740
Label setting font for it and foreground color of it.

130
00:09:16.770 --> 00:09:19.830
After that, there are three text fields.

131
00:09:20.670 --> 00:09:22.200
Sorry, these are the password fields.

132
00:09:22.200 --> 00:09:23.810
So what is the password field?

133
00:09:23.820 --> 00:09:24.830
Setting its font.

134
00:09:24.840 --> 00:09:25.650
It is the password.

135
00:09:25.650 --> 00:09:26.550
Field setting is font.

136
00:09:26.550 --> 00:09:30.120
So these two password fields will be for changing the pin.

137
00:09:30.120 --> 00:09:33.300
So we will be entering the pin two places.

138
00:09:33.300 --> 00:09:36.540
First enter the new pin, then we will be confirming the similar pin.

139
00:09:36.660 --> 00:09:39.420
After that there is a button we want change and back.

140
00:09:39.420 --> 00:09:40.770
There are really two buttons.

141
00:09:40.770 --> 00:09:46.200
Adding accent listener to both of the buttons, setting the layout of the complete window as well.

142
00:09:46.230 --> 00:09:53.490
After that, setting the layout for the one whose location will be two eight, comma 330 and size 800

143
00:09:53.490 --> 00:09:54.660
cross 35.

144
00:09:54.660 --> 00:09:56.040
Adding that to our.

145
00:09:57.600 --> 00:10:02.160
L for instance, adding the element over L for instance, where.

146
00:10:04.060 --> 00:10:08.590
L4 is another label and then there is a label.

147
00:10:08.590 --> 00:10:12.740
L three So we have set location of it and add it to our label L4.

148
00:10:12.760 --> 00:10:15.330
Then there is the password field t one.

149
00:10:15.350 --> 00:10:17.800
Add that to our label L4.

150
00:10:17.830 --> 00:10:20.710
Similarly t 23 and added both the buttons.

151
00:10:20.710 --> 00:10:24.700
Also after that we have fixed the frame size to nine 6180.

152
00:10:24.730 --> 00:10:32.470
Location has 500 comma zero and set the under quoted property as true and the set visibility as true.

153
00:10:32.920 --> 00:10:40.570
So now we have defined the action performed method which is taking an action event object inside the

154
00:10:40.570 --> 00:10:41.200
and PIN.

155
00:10:41.200 --> 00:10:49.000
We have taken the D1 point from the first password field that is T1 and inside our PIN we have taken

156
00:10:49.000 --> 00:10:53.470
the password from the DX two second password field, if not ten pins.

157
00:10:53.470 --> 00:10:59.740
If the entire pin and the confinement does not match, then we'll show that print does not match.

158
00:10:59.740 --> 00:11:03.640
And if the source of the event is from button v1, then we will.

159
00:11:05.050 --> 00:11:09.430
Check that if the password field is null, then we will show that enter new pin.

160
00:11:09.430 --> 00:11:14.020
If the second password field is null, then we will show that re-enter new pin.

161
00:11:14.350 --> 00:11:19.570
After that, we will stabilize the connection with our database with the con class, create a query

162
00:11:19.570 --> 00:11:23.710
that update bank said pin or pin where pin is equal to pin.

163
00:11:23.710 --> 00:11:27.130
Then another query to set the pin in login table.

164
00:11:27.130 --> 00:11:29.830
And then we need to set up an ID, sign up three table.

165
00:11:29.980 --> 00:11:38.050
Then we will execute all these Q-on-Q to end with three queries respectively and print the dialog box

166
00:11:38.050 --> 00:11:41.650
that pin chain successfully and set the visibility of the current window as false.

167
00:11:41.650 --> 00:11:43.720
Then we will call the new transaction open.

168
00:11:43.930 --> 00:11:44.700
That is true.

169
00:11:44.710 --> 00:11:50.470
So it will again move the control of the program to the new transaction class by passing the PIN as

170
00:11:50.470 --> 00:11:54.940
an argument to its constructor and setting the visibility as to if the source of the button is from

171
00:11:54.940 --> 00:12:00.760
B2, then we will again move to a new transaction by passing the previous PIN rather than the current

172
00:12:00.760 --> 00:12:05.020
or new pin and setting the visibility of it's true and set the visibility of the current window as false.

173
00:12:05.050 --> 00:12:09.310
The cache block will handle any exceptions if occurs inside the public static void.

174
00:12:09.310 --> 00:12:11.080
Man We have called the new pin.

175
00:12:12.140 --> 00:12:15.380
Class with the null value and set the visibility as true.

176
00:12:15.380 --> 00:12:17.870
So this is all about these two classes.

177
00:12:18.110 --> 00:12:23.050
First class, which we have talked about, is the login class which will be used to log in into our

178
00:12:23.390 --> 00:12:24.110
this project.

179
00:12:24.110 --> 00:12:30.020
And second is the pain note java file which will be managing the rendering of PIN or setting the pin.

180
00:12:30.020 --> 00:12:30.800
So that's all in this.
