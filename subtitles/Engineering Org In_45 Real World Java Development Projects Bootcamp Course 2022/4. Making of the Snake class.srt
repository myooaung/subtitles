1
00:00:00,670 --> 00:00:08,680
So now, after the successful creation of the flame, we are going to add some customization to the

2
00:00:08,680 --> 00:00:11,830
frame where the game is being run.

3
00:00:12,310 --> 00:00:15,130
So you must have seen that.

4
00:00:15,130 --> 00:00:17,970
On running this Snake Dart Java class.

5
00:00:17,980 --> 00:00:21,910
The frame opens to the top left section.

6
00:00:21,910 --> 00:00:25,180
Let me run this and show it to you.

7
00:00:27,480 --> 00:00:27,960
Yes.

8
00:00:27,960 --> 00:00:35,370
So the frame opens at the top left corner and there is option to maximize it and minimize it.

9
00:00:35,700 --> 00:00:45,150
So if we want the game in a limited frame, like a fixed height and six width for the snake to be collided

10
00:00:45,150 --> 00:00:47,040
and or complete the game.

11
00:00:47,130 --> 00:00:51,750
So we have to fix this to a fixed border.

12
00:00:51,990 --> 00:00:57,840
And also it should be open in the middle of the page, not in the top left corner.

13
00:00:58,530 --> 00:01:04,920
The top left corner is the origin like here it is zero zero location zero zero.

14
00:01:04,920 --> 00:01:10,520
So we have to move this to the middle, not open header.

15
00:01:10,740 --> 00:01:14,760
It should be opened in the middle of the page by default on running.

16
00:01:14,880 --> 00:01:18,930
So let us try writing some code for doing so.

17
00:01:19,920 --> 00:01:23,040
So we have to set location.

18
00:01:24,660 --> 00:01:26,100
Relative to null.

19
00:01:26,960 --> 00:01:34,220
So that location relative to component and passing the argument as null.

20
00:01:35,240 --> 00:01:36,620
Also for.

21
00:01:40,810 --> 00:01:46,150
For the size to be not altered.

22
00:01:46,480 --> 00:01:49,600
A fixed frame should be fixed in the beginning.

23
00:01:49,960 --> 00:01:58,870
So I have to set resizable as false so the frame can't be minimized or maximize later wards.

24
00:01:58,900 --> 00:02:01,750
Now let us try to run this.

25
00:02:03,610 --> 00:02:04,990
On running this.

26
00:02:06,410 --> 00:02:08,900
The frame opens in the middle.

27
00:02:08,930 --> 00:02:09,500
Perfect.

28
00:02:09,650 --> 00:02:17,990
So now we have set the site to resize the well as false passed as a false parameter.

29
00:02:18,020 --> 00:02:22,160
The frame is now not able to be maximized or minimized.

30
00:02:22,190 --> 00:02:30,440
It is showing a gray like invisible part is shown for the maximize button.

31
00:02:30,620 --> 00:02:36,140
We can close this and open this and escape from this.

32
00:02:36,170 --> 00:02:39,990
Now, our aim should be to set a title for this scheme.

33
00:02:40,010 --> 00:02:45,140
Like after this Java coffee mug option, we have to show our title.

34
00:02:45,170 --> 00:02:54,470
So for setting the title, as we have already used this feature, set the title as inside this.

35
00:02:54,470 --> 00:02:56,790
We have to pass the title for the game.

36
00:02:56,840 --> 00:03:02,060
Like suppose I am passing it to Snake Ofelia.

37
00:03:03,700 --> 00:03:04,940
No snake.

38
00:03:04,940 --> 00:03:05,780
Ofelia?

39
00:03:05,870 --> 00:03:06,410
Yes.

40
00:03:06,410 --> 00:03:07,080
Perfect.

41
00:03:07,100 --> 00:03:10,320
So I have said the title for the game.

42
00:03:10,340 --> 00:03:15,380
Now, let me try to run this and see if the title is set perfectly.

43
00:03:15,890 --> 00:03:16,480
Okay.

44
00:03:16,490 --> 00:03:23,060
So we have set a title for the frame inside which the game is going to be played.

45
00:03:24,080 --> 00:03:32,210
Now after setting that title, moving the frame to the middle of the page, setting the resize ability

46
00:03:32,210 --> 00:03:33,410
to false.

47
00:03:33,530 --> 00:03:38,690
We will add a black screen like a dark mode screen for this name.

48
00:03:39,170 --> 00:03:41,720
For a better appearance of the game.

49
00:03:42,290 --> 00:03:50,450
Now we have completed this snake class moving towards the board class in the board java file.

50
00:03:50,480 --> 00:03:55,310
We will set a background color for the frame.

51
00:03:55,550 --> 00:04:02,720
So inside the board object I am going to set call this set background.

52
00:04:04,660 --> 00:04:05,200
Yes.

53
00:04:05,200 --> 00:04:17,050
So I am calling this background method and inside which I am passing the color as color dot black as

54
00:04:17,050 --> 00:04:19,750
I want the background to be black in colour.

55
00:04:20,620 --> 00:04:26,770
So let us try and run this if it is perfectly working or not.

56
00:04:30,250 --> 00:04:32,370
So waiting for the execution.

57
00:04:32,380 --> 00:04:36,250
Yes, it is perfectly set to black.

58
00:04:36,400 --> 00:04:38,050
Our background is black.

59
00:04:38,050 --> 00:04:39,760
Our title is done.

60
00:04:39,790 --> 00:04:49,780
Now switching to the part where we have written a prototype and see what tasks are to be performed after

61
00:04:49,780 --> 00:04:51,280
the creation of the frame.

62
00:04:51,910 --> 00:04:59,330
So yes, we have created a Java project, added images to the project inside the icon folder.

63
00:04:59,350 --> 00:05:01,280
We have created a frame.

64
00:05:01,300 --> 00:05:09,670
Now we have to place images inside the frame and complete the images section, after which we will be

65
00:05:09,670 --> 00:05:13,210
adding keyboard events and action listener to the project.

66
00:05:13,420 --> 00:05:23,770
So let's begin closing this and now trying to add some more code for the image section.

67
00:05:25,520 --> 00:05:29,240
Now in order of adding images inside the frame.

68
00:05:29,240 --> 00:05:36,590
Firstly, we have to create a function called as public void load images.

69
00:05:37,100 --> 00:05:45,980
So firstly we have to load the images to our program trail and then only we can set positions for it

70
00:05:45,980 --> 00:05:51,740
or we can say that we can decide the places where they're going to be.

71
00:05:52,160 --> 00:05:54,380
So calling a major icon.

72
00:05:55,650 --> 00:06:05,970
Suppose for the first one like it was Apple so naming it as iPhone image one this implies and image

73
00:06:05,970 --> 00:06:07,170
icon again.

74
00:06:08,400 --> 00:06:14,040
And inside this we are going to call class loader component.

75
00:06:15,230 --> 00:06:18,350
Plus loader don't get system.

76
00:06:20,870 --> 00:06:23,540
Plus get system resource.

77
00:06:24,910 --> 00:06:26,350
So that's hard one.

78
00:06:26,800 --> 00:06:31,390
And inside this, we have to call the path for the image.

79
00:06:34,050 --> 00:06:37,480
So we have to write this inside the bracket.

80
00:06:37,500 --> 00:06:38,910
I am pasting it.

81
00:06:40,090 --> 00:06:41,530
I mentioned the name.

82
00:06:41,530 --> 00:06:44,560
We have to set the part where we have.

83
00:06:45,160 --> 00:06:48,730
So we have to write the path after a certain folder.

84
00:06:48,820 --> 00:06:52,900
Like if we close, we have to write the path from here.

85
00:06:53,170 --> 00:06:56,190
So inside this RC, we have icons.

86
00:06:56,500 --> 00:06:59,590
So I am writing it as icons then.

87
00:07:00,360 --> 00:07:11,220
Inside icons we have apple dot png so writing it as icons slash apple dot png.

88
00:07:12,540 --> 00:07:17,670
So this is the path for the apple object.

89
00:07:19,650 --> 00:07:21,420
The program has no words.

90
00:07:21,720 --> 00:07:22,080
No.

91
00:07:22,080 --> 00:07:30,060
Similarly for the boat towards the green one and the red one.

92
00:07:30,780 --> 00:07:33,690
So copying this part from hair.

93
00:07:34,600 --> 00:07:36,820
And trying to paste it.

94
00:07:38,750 --> 00:07:40,010
Two more times.

95
00:07:42,740 --> 00:07:52,130
For the green dot and the red dot, which is the head changing it as let me see the path.

96
00:07:52,670 --> 00:07:54,380
It says dot dot.

97
00:07:54,950 --> 00:07:59,960
The green one and head dot png for the red one.

98
00:08:00,290 --> 00:08:05,960
So second one should be suppose the head.

99
00:08:07,160 --> 00:08:16,580
So the head one is the head dot benji and the third one green dot as.

100
00:08:18,510 --> 00:08:18,900
Dot.

101
00:08:18,900 --> 00:08:19,230
Dot.

102
00:08:19,760 --> 00:08:20,970
I think it was.

103
00:08:21,120 --> 00:08:22,470
Let us try.

104
00:08:22,590 --> 00:08:23,220
Yes.

105
00:08:23,220 --> 00:08:26,340
So there are no errors now.

106
00:08:27,130 --> 00:08:32,010
There is a grey underline in this high volatility.

107
00:08:32,140 --> 00:08:34,480
So firstly, we have to.

108
00:08:35,390 --> 00:08:39,530
Call it in the class board.

109
00:08:39,770 --> 00:08:47,960
So inside the class board, we have to create a private like a global variable for all the three measures.

110
00:08:49,710 --> 00:08:54,570
Without which we are not able to call the images anywhere in the program.

111
00:08:54,930 --> 00:09:00,270
So far globally declaring it, we have to do this three more times.

112
00:09:00,540 --> 00:09:01,560
Image.

113
00:09:02,180 --> 00:09:06,570
But let us let us copy this three more times.

114
00:09:07,820 --> 00:09:13,940
So pasting it two more times for the head and the door.

115
00:09:14,900 --> 00:09:18,650
So for the dirt and for the head.

116
00:09:21,220 --> 00:09:21,940
Yes.

117
00:09:22,360 --> 00:09:26,230
So this is done now.

118
00:09:26,860 --> 00:09:35,680
So after adding the images as the global variables now to make the images appear in the frame, we have

119
00:09:35,680 --> 00:09:38,710
to call it that I do not get image.

120
00:09:38,710 --> 00:09:49,180
So using that image method, we are going to call these three images now for the coordinate part like

121
00:09:49,450 --> 00:09:51,710
let me show we have a coordinate.

122
00:09:51,730 --> 00:09:56,590
This is the Y axis and this is the x axis.

123
00:09:56,590 --> 00:09:59,020
So thinking it as a coordinate.

124
00:09:59,050 --> 00:10:02,110
We have an X coordinate and a y coordinate.

125
00:10:02,140 --> 00:10:08,590
So we have to call two global variables as an array like X and Y.

126
00:10:09,010 --> 00:10:15,300
We have total 300 dots, total 302, 300 is 900.

127
00:10:15,310 --> 00:10:18,040
So we have 300 as our bit.

128
00:10:18,190 --> 00:10:21,280
Let me show this to you in the board section.

129
00:10:21,280 --> 00:10:21,880
Yes.

130
00:10:21,880 --> 00:10:25,960
So we have set the preferred size as 300 by 300.

131
00:10:25,960 --> 00:10:38,170
So all dots will sum up to 9900 like 300 this, 300, this and every line contains 300 dots.

132
00:10:38,650 --> 00:10:49,120
So on multiplying it, we can see that there are $900 in total and we have set a random position for

133
00:10:49,120 --> 00:10:50,110
the snake.

134
00:10:50,380 --> 00:10:54,310
So another dot dot is ten.

135
00:10:54,850 --> 00:11:03,910
So basically the size of the dot is ten units in the beginning and random position for that, we can

136
00:11:03,910 --> 00:11:08,170
see that that changes its position after every run.

137
00:11:08,400 --> 00:11:12,640
Let's try to run this and see what I am talking about.

138
00:11:13,210 --> 00:11:16,450
So when we try to run this snake dot java file.

139
00:11:17,370 --> 00:11:20,550
We can see that the game begins.

140
00:11:20,550 --> 00:11:21,630
And the snake.

141
00:11:22,400 --> 00:11:25,490
So this is the new program.

142
00:11:25,640 --> 00:11:28,040
Let me show this to you in our already.

143
00:11:28,640 --> 00:11:35,930
So when we start the game, the apple has a random position anywhere in the frame and the snakes starts

144
00:11:35,930 --> 00:11:37,180
from this position.

145
00:11:37,190 --> 00:11:38,480
See the cursor.

146
00:11:38,510 --> 00:11:45,290
The snake starts from this position every time and Apple changes its position.

147
00:11:45,290 --> 00:11:52,700
So we have a fixed position for the object and a random position for the apple.

148
00:11:53,090 --> 00:11:58,160
So the dot is fixed and the apple has a random position.

149
00:11:58,490 --> 00:12:02,540
After this, we have set all the positions.

150
00:12:02,540 --> 00:12:06,440
Now we have to add images after images.

151
00:12:06,920 --> 00:12:12,920
In the beginning we have three dots, so we have to add one dot after other.

152
00:12:12,920 --> 00:12:22,220
And for this we are going to use a for loop inside the new public init class.

153
00:12:22,760 --> 00:12:24,920
So public static.

154
00:12:26,370 --> 00:12:30,940
Public's void in it and inside it.

155
00:12:30,960 --> 00:12:37,140
I am going to create a far loop so that images can be added one after the other.

156
00:12:37,590 --> 00:12:40,620
It's like void and inside it.

157
00:12:40,650 --> 00:12:42,780
We are going to add a for loop.

158
00:12:43,830 --> 00:12:49,770
So we have created a for loop for the image addition in the snake's body.

159
00:12:49,830 --> 00:12:52,440
So initially we have three dots.

160
00:12:52,770 --> 00:13:01,860
Let me declare it somewhere here as private and as the dot size is integer.

161
00:13:01,860 --> 00:13:06,150
So we have to initialize it as private dots.

162
00:13:07,240 --> 00:13:10,870
So after this, the red underline is vanished.

163
00:13:11,500 --> 00:13:21,040
So after which the for loop part is executed as we have a starting position for the first image and

164
00:13:21,040 --> 00:13:22,810
it should be less than naught.

165
00:13:22,840 --> 00:13:30,420
Initially it is three and it will grow in size as the snakes eat the apple and grows in size.

166
00:13:30,430 --> 00:13:38,140
So the initial position is set as the x axis is 50 minus z and y axis.

167
00:13:38,140 --> 00:13:42,430
So the distance from the x and y axis for the snake is set.

168
00:13:43,090 --> 00:13:48,880
This is the distance from the y axis and the center distance from the x axis.

169
00:13:49,030 --> 00:13:55,150
So the body of the snake has this distance from both the axis in the beginning.

170
00:13:56,550 --> 00:14:04,290
And after creating these two functions, we have to call it inside the board object as load images and

171
00:14:04,290 --> 00:14:05,080
in endgame.

172
00:14:05,100 --> 00:14:12,900
So we have successfully created two parts of the program as load images and in.

173
00:14:13,530 --> 00:14:22,320
Now in the next part we are going to create the position for the apple and the rest part from the prototype

174
00:14:22,320 --> 00:14:23,510
we have created.

175
00:14:23,520 --> 00:14:25,530
So see on the next part.
