WEBVTT
1
00:00:01.050 --> 00:00:09.090
So in previous tutorial I told you we already created a filter for filtering and checking that part.

2
00:00:09.750 --> 00:00:16.470
Now what we are going to do or what we are going to perform, it's common thing.

3
00:00:17.460 --> 00:00:22.620
If you haven't noticed that this is my encryption filter and everything I'm going to mention here.

4
00:00:23.250 --> 00:00:24.060
So.

5
00:00:25.390 --> 00:00:27.170
I keep it like this.

6
00:00:27.190 --> 00:00:28.860
You may delete that part.

7
00:00:28.870 --> 00:00:33.310
Also, I just told you how we are going to create filter palette here.

8
00:00:34.700 --> 00:00:35.400
In Java.

9
00:00:35.420 --> 00:00:39.410
So you can delete this part or you can keep it as like this one.

10
00:00:39.740 --> 00:00:49.910
So I changed to index part to mention little mention like like image or message.

11
00:00:50.540 --> 00:00:53.480
For this part, we throw them with the text area.

12
00:00:54.440 --> 00:00:57.440
I decided to create this part and everything.

13
00:00:57.440 --> 00:01:00.560
So that's index symbol form method I created with post.

14
00:01:01.880 --> 00:01:08.390
Now this is my response team, which is going to put encrypted and decrypted data here.

15
00:01:08.870 --> 00:01:15.710
So let me just use I already created one class and everything there.

16
00:01:16.220 --> 00:01:19.190
So let me use that part directly here first.

17
00:01:21.980 --> 00:01:22.940
I already.

18
00:01:24.530 --> 00:01:27.470
Volume already created due to time constraint.

19
00:01:27.470 --> 00:01:29.240
I will explain to you how it's going to work.

20
00:01:29.270 --> 00:01:34.760
Basically, what this is I'm going to use.

21
00:01:37.120 --> 00:01:37.260
Okay.

22
00:01:37.360 --> 00:01:39.330
So nothing is required to encrypt.

23
00:01:39.340 --> 00:01:40.480
Filter is working now.

24
00:01:40.810 --> 00:01:42.340
So what is this thing?

25
00:01:42.420 --> 00:01:45.280
So this is my Encrypt Freedom program.

26
00:01:45.610 --> 00:01:48.370
Instead of using Java, I'm using here.

27
00:01:49.520 --> 00:01:52.100
And this filter thing.

28
00:01:53.640 --> 00:01:57.840
Also looking glass with silver is with stippling.

29
00:01:59.100 --> 00:02:00.090
So it will deploy.

30
00:02:00.120 --> 00:02:01.170
My part again.

31
00:02:03.750 --> 00:02:04.410
So.

32
00:02:05.960 --> 00:02:06.790
Let me do one thing.

33
00:02:06.800 --> 00:02:11.230
Let me close my heart so it will not deploy.

34
00:02:12.440 --> 00:02:15.010
So encrypt part I already created.

35
00:02:15.020 --> 00:02:19.940
I'm mentioning static final boolean, boolean and filter config as it is.

36
00:02:20.390 --> 00:02:24.160
Then do filter for the filtration filter and message.

37
00:02:24.170 --> 00:02:28.130
So I am taking log messages message and similar thing.

38
00:02:28.130 --> 00:02:36.470
I'm going to use Q generator, but here I am using get sometimes D is not a is algorithm I'm using I'm

39
00:02:36.470 --> 00:02:39.740
using here D is EDI which is very strong.

40
00:02:39.740 --> 00:02:49.270
Algorithm to build is encryption which is using which is very strong tedious algorithm triple.

41
00:02:49.340 --> 00:02:56.390
This is not like it's creating a decryption format, like it's encrypted multiple times.

42
00:02:56.390 --> 00:03:03.280
It's decrypted multiple times to avoid the most security leaks it's performing in.

43
00:03:03.290 --> 00:03:05.190
First I mention only A.

44
00:03:05.210 --> 00:03:06.590
S, so it's one time only.

45
00:03:06.590 --> 00:03:08.780
So instead of this, I'm using triple time.

46
00:03:08.900 --> 00:03:09.680
It's triple thing.

47
00:03:10.820 --> 00:03:17.040
Then I'm setting the attributes here or and request dispatcher response.

48
00:03:17.040 --> 00:03:17.420
So.

49
00:03:18.020 --> 00:03:18.800
Wait a minute.

50
00:03:19.880 --> 00:03:25.970
For me, it's a response, so it will go directly to that part response.

51
00:03:26.240 --> 00:03:31.220
JSP With request and with all these things.

52
00:03:31.220 --> 00:03:31.730
So.

53
00:03:33.720 --> 00:03:35.220
It's currently no running water.

54
00:03:35.220 --> 00:03:40.680
So if you want to check, you can check that it's running.

55
00:03:40.680 --> 00:03:42.720
And that's the log part here.

56
00:03:43.780 --> 00:03:44.500
So.

57
00:03:48.940 --> 00:03:52.060
Oh, deploying is a simple thing.

58
00:03:53.620 --> 00:03:55.050
Let me go to this encryption.

59
00:03:55.060 --> 00:03:56.680
Let me suggest.

60
00:03:57.250 --> 00:03:57.760
Hello?

61
00:03:58.870 --> 00:03:59.290
Boy.

62
00:04:00.480 --> 00:04:04.140
I already created helloworld encrypt data.

63
00:04:05.860 --> 00:04:08.410
So it will encrypt data for me.

64
00:04:09.460 --> 00:04:10.480
Now you can check.

65
00:04:10.990 --> 00:04:14.940
This might equal this encrypted algorithm, this hello world is this.

66
00:04:16.390 --> 00:04:18.910
If you want to check another thing.

67
00:04:21.560 --> 00:04:27.800
I am order of this application.

68
00:04:29.180 --> 00:04:29.780
US.

69
00:04:30.780 --> 00:04:33.390
I mean, they maintain.

70
00:04:37.950 --> 00:04:38.280
Okay.

71
00:04:38.280 --> 00:04:40.560
So that's a random message I'm creating.

72
00:04:41.250 --> 00:04:42.930
And this is created.

73
00:04:42.930 --> 00:04:43.650
So.

74
00:04:45.360 --> 00:04:47.820
I created both platforms on the same part.

75
00:04:48.450 --> 00:04:53.490
Let me tell you why I created to show this not performing the application part.

76
00:04:53.700 --> 00:04:54.460
What you can do.

77
00:04:54.480 --> 00:04:59.970
You can create encryption data filters next and decryption data filters in another program.

78
00:05:00.300 --> 00:05:06.360
If I want to send data, you can put and send this data to your friend or you can check.

79
00:05:06.600 --> 00:05:10.530
So if someone is accessing data, no one can understand what is this meaning?

80
00:05:11.820 --> 00:05:13.320
There is no meaning for this.

81
00:05:13.800 --> 00:05:15.600
And there are square squares also.

82
00:05:15.600 --> 00:05:18.600
But it's decrypting and encoder of this application.

83
00:05:18.600 --> 00:05:19.680
Ask me anything by.

84
00:05:19.860 --> 00:05:21.780
So this is how it's working.

85
00:05:21.780 --> 00:05:24.600
The encryption and decryption of data always.

86
00:05:24.600 --> 00:05:26.850
So I created one simple platform.

87
00:05:26.850 --> 00:05:32.550
You can vote, you can extend it more, you can create chat application with this ciphertext.

88
00:05:32.550 --> 00:05:38.620
I already told you you can handle messaging strings like this and then furthermore part.

89
00:05:38.880 --> 00:05:46.260
So hope you understand and I will explain little briefly this code.

90
00:05:46.260 --> 00:05:49.500
If you want to choose, you can delete this part.

91
00:05:49.500 --> 00:05:50.820
This is no longer required.

92
00:05:51.690 --> 00:05:56.510
So I'm using here the these as my key in.

93
00:05:56.580 --> 00:06:02.520
For the previous part, I told you how it's working first with the encrypted mode, I'm creating encrypted

94
00:06:02.520 --> 00:06:07.380
and decrypted and I'm printing and putting that request dispatcher to this.

95
00:06:07.380 --> 00:06:11.760
If I'm waiting the catching error, it will print me this.

96
00:06:12.480 --> 00:06:14.010
You can easily do it.

97
00:06:14.010 --> 00:06:20.130
So let's but problem with servlet is it's printing the output in console also.

98
00:06:20.130 --> 00:06:23.780
So that might be a one data bridge here also.

99
00:06:23.790 --> 00:06:33.570
So you can check here if you are putting this in filter, you might get this.

100
00:06:33.570 --> 00:06:38.970
Also, if I'm using servlet, you will not get this all back end part.

101
00:06:38.970 --> 00:06:44.040
But what is this servlet log context and why I'm putting this?

102
00:06:44.040 --> 00:06:48.330
I can now create one database entries with these log files.

103
00:06:48.840 --> 00:06:49.980
Hope you understand.

104
00:06:50.160 --> 00:06:50.790
Thank you.
