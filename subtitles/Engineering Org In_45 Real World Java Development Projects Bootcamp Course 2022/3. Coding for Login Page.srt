1
00:00:00,180 --> 00:00:02,070
Our log in Java file.

2
00:00:04,560 --> 00:00:06,720
So it is defined inside the package airline.

3
00:00:06,720 --> 00:00:11,670
As you can see, this is the package and inside which here is the log in or Java file.

4
00:00:12,420 --> 00:00:19,980
So we have defined this file inside the package airline and we have imported the necessary packages

5
00:00:19,980 --> 00:00:27,630
like JWT, which is an abstract mental toolkit which is being used to develop graphical user interface

6
00:00:27,630 --> 00:00:29,880
test, top based applications.

7
00:00:31,530 --> 00:00:36,900
Then there is a Java swing package, which is a modified version of Abstract Window Toolkit, which

8
00:00:36,900 --> 00:00:42,120
is also used to develop attractive graphical user interface of applications.

9
00:00:42,880 --> 00:00:45,370
Then there is an abstract window toolkit event.

10
00:00:45,370 --> 00:00:46,000
Class.

11
00:00:47,140 --> 00:00:47,800
Package.

12
00:00:49,640 --> 00:00:54,920
Which is used to handle events in the login page.

13
00:00:54,920 --> 00:01:01,130
And then there is a Java SQL package which will help us to create and interact with our database, which

14
00:01:01,130 --> 00:01:03,470
we have created in our last video.

15
00:01:04,610 --> 00:01:09,590
Now we have defined the class login, which is extending the frame and implementing the action listener

16
00:01:09,620 --> 00:01:10,430
interface.

17
00:01:10,850 --> 00:01:14,240
Then there are two labels, 11 and two.

18
00:01:14,570 --> 00:01:19,010
There is a one text field element and one possible field data.

19
00:01:19,220 --> 00:01:22,070
Then there are two buttons B1 and B2.

20
00:01:24,240 --> 00:01:25,140
Now.

21
00:01:25,990 --> 00:01:27,760
Here is the login.

22
00:01:28,000 --> 00:01:31,060
Constructor, which is a non parameterized constructor.

23
00:01:31,750 --> 00:01:35,830
Inside the constructor it is headed as log in.

24
00:01:36,830 --> 00:01:40,130
The layout of the window is set to be null as default.

25
00:01:40,130 --> 00:01:45,110
And then we have initialized the false label L1.

26
00:01:47,060 --> 00:01:48,650
Labeled as username.

27
00:01:49,070 --> 00:01:53,030
After that, we have set the bound for the label.

28
00:01:54,640 --> 00:01:59,740
Of which first argument with the X and Y positions is starting position of the bound.

29
00:02:00,010 --> 00:02:05,890
And second and third values will be width and height of that label.

30
00:02:08,270 --> 00:02:12,500
Then we have added the label to our frame or window.

31
00:02:12,980 --> 00:02:16,700
After that, there is another label named as password.

32
00:02:17,950 --> 00:02:22,960
For which we have set mound for that label in which similarly.

33
00:02:23,910 --> 00:02:31,740
X and Y values are 40 and 70 and width and height is 130.

34
00:02:34,820 --> 00:02:37,610
We have added a to in our.

35
00:02:40,320 --> 00:02:46,320
After that, we have initialized the text field, which is one.

36
00:02:48,320 --> 00:02:50,570
Setting the tone for the text field.

37
00:02:52,300 --> 00:02:59,170
X is 150, Y is 20, its width will be 150 and height is 30.

38
00:03:01,480 --> 00:03:06,370
Adding the text field to our DJ frame with the help of a method.

39
00:03:08,560 --> 00:03:10,330
Then there's the password field.

40
00:03:11,510 --> 00:03:14,060
Initialized as a variable to.

41
00:03:16,210 --> 00:03:18,490
Then we have set the bound for the day to.

42
00:03:19,590 --> 00:03:20,890
X is 150.

43
00:03:20,910 --> 00:03:22,260
Y is 70.

44
00:03:23,180 --> 00:03:26,150
Its weight will be 150 and Hyde will be 30.

45
00:03:27,990 --> 00:03:30,630
Adding the data to our frame and window.

46
00:03:31,890 --> 00:03:36,060
After that we have added the image in our login page.

47
00:03:36,270 --> 00:03:43,710
So we have defined the image icon ie one which will loading the image from the source.

48
00:03:44,710 --> 00:03:51,010
By using class loader, get system resource and passing the location of the image.

49
00:03:51,850 --> 00:03:55,690
The image icons are stored here in this icon folder.

50
00:03:55,690 --> 00:03:56,560
As you can see.

51
00:03:56,560 --> 00:04:01,330
Here is the second jpg, which we have used here.

52
00:04:03,760 --> 00:04:05,680
So in the next line.

53
00:04:07,400 --> 00:04:08,360
We have created.

54
00:04:09,240 --> 00:04:19,790
Object of type image item, which is which is used to scale the height and instance from the image icon

55
00:04:19,800 --> 00:04:20,940
object i1.

56
00:04:21,780 --> 00:04:28,410
After that we have created another image icon object ie three to create an image with the.

57
00:04:29,730 --> 00:04:30,900
Help of object.

58
00:04:30,900 --> 00:04:31,530
I do.

59
00:04:31,530 --> 00:04:34,230
And I too is holding the image with the correct.

60
00:04:35,320 --> 00:04:36,280
Size.

61
00:04:39,920 --> 00:04:48,800
After that we have initialized a label L three and added the image icon three to that label.

62
00:04:48,800 --> 00:04:51,740
So this label will use to show.

63
00:04:52,730 --> 00:04:53,840
The image.

64
00:04:54,800 --> 00:05:00,920
Now, after that, we have said the bond for the label X is 350.

65
00:05:00,920 --> 00:05:02,210
Y is ten.

66
00:05:03,520 --> 00:05:08,050
It's worth will be 150 and height will be 150 as well.

67
00:05:09,010 --> 00:05:13,900
Then we have added the label to our window and frame.

68
00:05:16,120 --> 00:05:20,650
After that, we have initialized the button new button login.

69
00:05:21,190 --> 00:05:31,450
Its name is login button setting the bound for the button where x is 40, y is 140 and width is 120

70
00:05:31,450 --> 00:05:32,800
and height is 30.

71
00:05:34,710 --> 00:05:39,030
Then we have set the font of the button.

72
00:05:41,070 --> 00:05:47,340
One family is safe and one type is bold and the font size is 15.

73
00:05:49,300 --> 00:05:55,060
I did the action list not for the button because button will be used to handle any event.

74
00:05:56,290 --> 00:05:59,410
After that, we have set the background color of the button.

75
00:06:01,290 --> 00:06:03,630
As black and for brown.

76
00:06:03,630 --> 00:06:05,730
Color of the button as white.

77
00:06:08,430 --> 00:06:11,670
Then adding that button to our frame.

78
00:06:11,670 --> 00:06:14,190
After that, we have a button to.

79
00:06:15,150 --> 00:06:24,690
Named as cancel and we have defined the bounds for the button where x is 180, y is 140 and its height,

80
00:06:25,860 --> 00:06:29,880
width and height are one, 20 and 30 respectively.

81
00:06:30,360 --> 00:06:38,790
Similarly, like log in button, we have set the font of the cancel button here.

82
00:06:39,540 --> 00:06:42,330
Font family of serif and.

83
00:06:43,250 --> 00:06:46,310
One type is bold and font size is 15.

84
00:06:49,290 --> 00:06:53,220
Setting the background color of the button as black.

85
00:06:54,630 --> 00:06:57,240
And for one third of the button as white.

86
00:06:59,360 --> 00:07:01,250
Adding the button to our frame.

87
00:07:03,050 --> 00:07:05,060
Then we have added action listener.

88
00:07:06,190 --> 00:07:11,500
To our button be two because button will handle any event.

89
00:07:14,730 --> 00:07:21,690
Next we have initial initialize the color of the whole window background color of the whole window as

90
00:07:21,690 --> 00:07:22,350
white.

91
00:07:24,600 --> 00:07:30,900
After that, we have set the visibility of the current window as true so that whenever we call the login

92
00:07:31,080 --> 00:07:33,270
class, the window will appear.

93
00:07:34,410 --> 00:07:38,520
Setting the size of the window that is 602 300.

94
00:07:38,520 --> 00:07:40,050
That will be the size of the windows.

95
00:07:40,050 --> 00:07:41,370
600 will be the.

96
00:07:42,160 --> 00:07:45,160
We wait and 300 will be the height.

97
00:07:46,550 --> 00:07:54,470
Setting the location of the window from which point the window will appear in the screen.

98
00:07:54,680 --> 00:07:59,600
So X coordinates 600 and y coordinates 350.

99
00:07:59,600 --> 00:08:04,190
That will be the location from which the window will appear in our screen.

100
00:08:05,390 --> 00:08:12,830
Next function, we have defined here the action performed method, which is a method of action listener

101
00:08:12,950 --> 00:08:20,950
interface, which is taking the argument action event, a inside which we have defined.

102
00:08:20,960 --> 00:08:28,490
If a statement which is inside which we have given a condition that if the source of the event action

103
00:08:28,490 --> 00:08:30,230
event is from the B1.

104
00:08:30,230 --> 00:08:34,220
So this means if the B1 button has been pressed.

105
00:08:35,520 --> 00:08:36,270
So let's check.

106
00:08:36,270 --> 00:08:37,080
For what?

107
00:08:38,580 --> 00:08:40,500
Think we have created the Beaman button.

108
00:08:40,500 --> 00:08:42,840
So be one button is labelled as log in.

109
00:08:42,840 --> 00:08:44,700
So this will be used to log in.

110
00:08:44,850 --> 00:08:52,110
So if the log in button has been pressed, then we first create the connection with our database and.

111
00:08:53,700 --> 00:08:59,130
After that, we will be fetching the username from the demon text field.

112
00:08:59,130 --> 00:09:00,060
And.

113
00:09:01,540 --> 00:09:04,090
Then and storing it into a string.

114
00:09:04,090 --> 00:09:10,390
You and then we are fetching the password from the t two password field and storing it in a string.

115
00:09:10,400 --> 00:09:13,240
We after that we have created a string.

116
00:09:13,240 --> 00:09:17,110
Q Which is holding the SQL query.

117
00:09:18,280 --> 00:09:24,630
That is select extract from login where username is equals to you and password is equals to read.

118
00:09:24,640 --> 00:09:32,230
So this query after that we have using the results set object are as we have executed the query queue

119
00:09:32,230 --> 00:09:40,720
by using the connection object C one and a statement object as and pass to the queue string to the execute

120
00:09:40,720 --> 00:09:42,880
query so that the query will be executed.

121
00:09:43,090 --> 00:09:50,740
And next statement we have defined another if a statement with the argument asked next.

122
00:09:50,740 --> 00:09:52,690
So this will start next.

123
00:09:52,690 --> 00:09:58,630
We'll iterate over the rules of the login table where the username and password match.

124
00:09:58,630 --> 00:10:04,180
So suppose if the username and password does not match, the control of the program will not enter this

125
00:10:04,360 --> 00:10:11,830
statement until the username and password matches from our database values.

126
00:10:11,950 --> 00:10:14,590
So if it matches, then the then.

127
00:10:15,920 --> 00:10:18,200
We will call the new mainframe class.

128
00:10:19,240 --> 00:10:21,010
That here is a mainframe class.

129
00:10:21,010 --> 00:10:21,600
Here it is.

130
00:10:21,610 --> 00:10:27,490
We will calling this mainframe class to take us through to our next window and setting this visibility.

131
00:10:27,490 --> 00:10:31,240
As to after that, we set the visibility of the current window as follows.

132
00:10:31,240 --> 00:10:35,170
So the login window will be closed and the main frame window will be displayed.

133
00:10:38,050 --> 00:10:43,270
We will be knowing about the mainframe below mainframe Java class in our next video.

134
00:10:43,660 --> 00:10:51,190
Now in the statement, if the user name and password does not match us with our database, in this case

135
00:10:51,190 --> 00:10:59,710
we will display our dialog box showing invalid login and set the visibility of the login window as false.

136
00:11:00,670 --> 00:11:04,030
If any kind of exception occur, that will be handled by this catch.

137
00:11:04,030 --> 00:11:07,510
BLOCK And now if the.

138
00:11:08,080 --> 00:11:10,860
The source of the event is from to.

139
00:11:12,810 --> 00:11:18,100
Me button is labelled as cancel, so that will be used to cancel the login page.

140
00:11:18,120 --> 00:11:22,530
So then we will just simply call system dot exit zero.

141
00:11:22,560 --> 00:11:28,380
This will move the control of the programme out of the programme and close the programme.

142
00:11:30,880 --> 00:11:34,140
Now inside the main method is static void main.

143
00:11:34,150 --> 00:11:38,800
We have defined or created just the login object.

144
00:11:38,800 --> 00:11:44,560
So whenever it is called the login object will be created and constructor will be called so that everything

145
00:11:44,650 --> 00:11:49,270
we have just defined inside the constructor should be implemented in our window.

146
00:11:49,720 --> 00:11:55,360
So this is all about the login class, the first class of this project that is a line management system.

147
00:11:56,080 --> 00:12:00,280
Let's have a look on the run how the window will appear.

148
00:12:00,570 --> 00:12:02,080
So if we run this login page.

149
00:12:02,080 --> 00:12:03,400
So let's run this file.

150
00:12:06,690 --> 00:12:09,190
So that's how the window will appear.

151
00:12:09,210 --> 00:12:10,140
This is the window.

152
00:12:12,050 --> 00:12:15,920
Here you can enter the username and username or password.

153
00:12:15,920 --> 00:12:17,300
That is the password.

154
00:12:18,560 --> 00:12:22,740
If you click on cancel, it will move us back out from the program.

155
00:12:22,760 --> 00:12:28,340
If you click on Login, if the details matches with the database, then it will take us to the mainframe

156
00:12:28,340 --> 00:12:29,060
page.

157
00:12:29,330 --> 00:12:30,830
Let's close this window.
