WEBVTT
1
00:00:00.930 --> 00:00:09.390
So in the previous part we have successfully created the functionalities for adding song, finding the

2
00:00:09.390 --> 00:00:12.870
song and adding the song to the playlist.

3
00:00:12.900 --> 00:00:21.540
With the help of track numbers, we have set the playlist as a data structure called Link List and Important

4
00:00:21.570 --> 00:00:25.260
Link List from the Java Library as well.

5
00:00:25.800 --> 00:00:29.730
So removing the extra part from the import.

6
00:00:29.940 --> 00:00:36.060
Now we have imported both added list and link list from the Java util package.

7
00:00:37.190 --> 00:00:43.820
Now so that we have successfully created that to playlist function.

8
00:00:44.120 --> 00:00:47.210
Let us see that what is happening.

9
00:00:47.330 --> 00:00:56.600
So we have created an integer called index which is going to store track number minus one in the beginning

10
00:00:56.600 --> 00:01:04.850
and inside the state when we are checking that if the index is greater than zero and this is called

11
00:01:04.850 --> 00:01:12.320
and operator and it is a logical operator if you know the Java basics, you must have heard about logical

12
00:01:12.320 --> 00:01:13.220
operators.

13
00:01:13.640 --> 00:01:21.560
So if the index is greater than zero and index is less than the song size like suppose initially we

14
00:01:21.560 --> 00:01:24.440
have a size of some set.

15
00:01:25.100 --> 00:01:32.150
We know that we are using ArrayList, so the list is desirable, but there should be some size in the

16
00:01:32.150 --> 00:01:32.580
beginning.

17
00:01:32.580 --> 00:01:35.600
Like suppose the list is containing five zones.

18
00:01:35.600 --> 00:01:44.060
So this is going to check that if the track number is greater than zero and the track number is less,

19
00:01:44.060 --> 00:01:49.100
then like the index of the track is less than some size.

20
00:01:49.280 --> 00:01:58.640
And this if statement is going to be a function even only when this both parties true.

21
00:01:58.670 --> 00:02:06.620
Like if this is false and this is true, then it is going to return false and the loop will exit this

22
00:02:06.620 --> 00:02:07.550
if statement.

23
00:02:07.910 --> 00:02:13.970
And even if this is true and this is four, then again the same thing is going to happen.

24
00:02:13.970 --> 00:02:19.730
So this safe will only be entered if both the parts are true.

25
00:02:20.090 --> 00:02:27.140
One and one like true and true is only going to return true and then only.

26
00:02:27.140 --> 00:02:30.620
This is going to check playlist dot n.

27
00:02:31.010 --> 00:02:38.450
So if both of the things are true, then only the song is going to be added in the playlist and this

28
00:02:38.450 --> 00:02:40.190
function is going to return true.

29
00:02:40.490 --> 00:02:48.590
Otherwise, if any of these two is false, then the function will exit this statement.

30
00:02:48.590 --> 00:02:55.880
Like before entering the statement, it will directly print this system dot dot print.

31
00:02:55.880 --> 00:03:04.310
And this album does not have the song with track number and calling this object track number with the

32
00:03:04.310 --> 00:03:10.640
help of plus symbol and the function will return false, of course.

33
00:03:12.380 --> 00:03:19.190
So after checking like adding the songs to the playlist with the help of track number.

34
00:03:19.220 --> 00:03:26.090
Now in the next part we are going to add songs to the playlist with the help of its title.

35
00:03:26.270 --> 00:03:33.860
So initializing the function in the similar way public boolean add to playlist.

36
00:03:34.810 --> 00:03:44.680
We already have a function called Add to playlist, but this time the argument is going to be a title

37
00:03:44.860 --> 00:03:51.970
string title and let me copy this same thing for the playlist part.

38
00:03:53.090 --> 00:03:56.570
As only the first argument is going to differ.

39
00:03:57.710 --> 00:04:03.770
Now, if we are going to add songs with the help of title, we have to.

40
00:04:05.100 --> 00:04:12.840
Like added with to checking if the title is same then only we will bother to hand the song.

41
00:04:13.990 --> 00:04:17.710
The playlist if the title is not seen.

42
00:04:18.100 --> 00:04:25.420
So check the song and if the song is present.

43
00:04:25.420 --> 00:04:29.980
This not songs is used to call the song method.

44
00:04:30.520 --> 00:04:36.340
From the above declaration inside the for loop, we are going to arrive.

45
00:04:36.340 --> 00:04:43.690
Statement Check the song dot get title to get the title.

46
00:04:44.290 --> 00:04:52.930
We have declared this get title in the song class in the song Java file and after getting the title

47
00:04:52.930 --> 00:05:02.650
we are going to check that if this title equals the current title or not, so equals and you enter.

48
00:05:03.160 --> 00:05:07.270
And the argument of equals is going to be the title of the song.

49
00:05:07.930 --> 00:05:08.500
Yes.

50
00:05:08.500 --> 00:05:09.310
Fair enough.

51
00:05:10.370 --> 00:05:15.680
Now inside the statement if the song title equals title.

52
00:05:17.030 --> 00:05:20.960
Then list should be added.

53
00:05:21.830 --> 00:05:23.540
With the song.

54
00:05:24.640 --> 00:05:26.470
Playlist, Dan.

55
00:05:27.700 --> 00:05:34.780
Check the song like we have checked for the song and it can be added to the playlist.

56
00:05:34.900 --> 00:05:44.860
It is not present already in the list and after which this boolean function is going to return through.

57
00:05:46.160 --> 00:05:49.700
So return true is going to be the.

58
00:05:51.030 --> 00:05:51.280
Part.

59
00:05:51.390 --> 00:05:53.310
Good for this function.

60
00:05:53.310 --> 00:05:53.880
Yes.

61
00:05:53.880 --> 00:05:56.370
So we are here with this.

62
00:05:56.730 --> 00:06:07.290
Now, if there is a if statement, then to counter this, if statement, we have to write l statement

63
00:06:07.290 --> 00:06:14.250
like what will happen if this iff is not accessed, this f is not performed.

64
00:06:14.670 --> 00:06:19.530
So we have to ssis out the same thing we have.

65
00:06:20.500 --> 00:06:26.040
Like this song like track number was the above argument.

66
00:06:26.050 --> 00:06:28.660
So in this part we are going to.

67
00:06:29.520 --> 00:06:32.770
See Subtitle Plus.

68
00:06:34.290 --> 00:06:37.560
And there is no such song in that.

69
00:06:38.730 --> 00:06:39.750
There's.

70
00:06:40.960 --> 00:06:45.520
No such song in the album.

71
00:06:48.290 --> 00:06:49.190
Yes.

72
00:06:49.400 --> 00:06:56.000
So we are here with both add to playlist methods.

73
00:06:57.340 --> 00:07:06.130
So we have completed both had two playlist functions, one with the track number argument and the other

74
00:07:06.130 --> 00:07:07.660
with the title argument.

75
00:07:07.900 --> 00:07:16.750
So track number as the argument and title as argument are going to be the two part of the add to playlist

76
00:07:16.750 --> 00:07:17.530
function.

77
00:07:18.190 --> 00:07:28.510
So as far as I can see that we have successfully completed the song class by adding songs with title

78
00:07:28.510 --> 00:07:29.650
and duration.

79
00:07:30.800 --> 00:07:37.430
And yes, the song part is completed by adding the title and the duration.

80
00:07:37.670 --> 00:07:43.040
Also, the album part is completed by adding.

81
00:07:44.000 --> 00:07:49.850
Methods like functionalities for finding the songs like we have to list the song.

82
00:07:50.210 --> 00:07:57.590
I hope you have gone through the introduction section, so we have to find the songs, add the songs,

83
00:07:57.590 --> 00:08:00.440
list the songs and remove the songs.

84
00:08:00.530 --> 00:08:07.490
So yes, we have completed everything inside the album plus also.

85
00:08:08.860 --> 00:08:13.550
That does summarize this album class and then switch to the next part.

86
00:08:13.570 --> 00:08:21.580
We have find song and song at the playlist two times and this is going to output that whether this song

87
00:08:21.580 --> 00:08:23.650
is present in the playlist or not.

88
00:08:24.040 --> 00:08:30.670
Now switching to the prototype section, we have created project.

89
00:08:30.700 --> 00:08:35.400
We have created the song class, we have created the album class.

90
00:08:35.410 --> 00:08:43.150
Now we are going to create the main class which is going to run the project like this main class is

91
00:08:43.150 --> 00:08:45.040
responsible for.

92
00:08:47.260 --> 00:08:53.980
Testing and running of the project.

93
00:08:56.260 --> 00:09:00.880
Of the project music player playlist.

94
00:09:01.210 --> 00:09:01.750
Whatever.

95
00:09:01.750 --> 00:09:03.040
We say this.

96
00:09:03.280 --> 00:09:06.790
So now we are going to create the main class.

97
00:09:08.730 --> 00:09:11.310
Inside the saucy folder, of course.

98
00:09:11.940 --> 00:09:21.580
So min dot java is going to be the name for the main class and here we are inside our main class.

99
00:09:21.600 --> 00:09:24.180
Now we will start writing.

100
00:09:25.190 --> 00:09:27.350
The query is inside the main class.

101
00:09:27.890 --> 00:09:38.360
So let us initialize this main class with initializing a static void main function.

102
00:09:38.780 --> 00:09:44.660
And the arguments are going to be string arcs.

103
00:09:45.950 --> 00:09:53.150
Yes, it is going to be this way and the function is created for the main class.

104
00:09:53.300 --> 00:10:00.290
Now inside this we are going to create like we have to play songs.

105
00:10:00.380 --> 00:10:04.340
So firstly we have to add songs to the album.

106
00:10:05.120 --> 00:10:12.920
So we have created the album class already, so adding artist songs to the album.

107
00:10:13.700 --> 00:10:18.800
So suppose the first album is like album and.

108
00:10:19.850 --> 00:10:26.660
This album is new, so we have to add the new keyboard and an album.

109
00:10:27.760 --> 00:10:29.230
Inside that room.

110
00:10:29.620 --> 00:10:34.150
Suppose that we wish to add some name for the album.

111
00:10:34.450 --> 00:10:39.820
So the name is going to be like you can see that in suggestions.

112
00:10:39.820 --> 00:10:46.330
It is asking for a string name, string artist and add a list of the songs.

113
00:10:46.330 --> 00:10:55.780
So inside this album, object for this function, we are going to add a name artist and add a list,

114
00:10:55.780 --> 00:10:56.680
of course.

115
00:10:56.680 --> 00:11:01.990
So suppose the name for this album is Album One.

116
00:11:03.240 --> 00:11:10.320
And the artist is is going to be inside the double.

117
00:11:11.100 --> 00:11:15.180
So album one and the artist is.

118
00:11:16.460 --> 00:11:18.650
Like our artist.

119
00:11:19.430 --> 00:11:21.710
Second one is the artist.

120
00:11:23.620 --> 00:11:29.410
And this artist is going to be this is a colon.

121
00:11:31.540 --> 00:11:36.880
You have to select this thing from the suggestions only.

122
00:11:37.150 --> 00:11:41.140
I missed the suggestion, so I am writing it manually.

123
00:11:41.260 --> 00:11:44.830
So new album name is album one.

124
00:11:44.830 --> 00:11:48.490
And for the artist section I have to check.

125
00:11:49.200 --> 00:11:51.290
In the head.

126
00:11:51.840 --> 00:11:54.830
So the songs are still pictures memory.

127
00:11:54.840 --> 00:12:00.480
So yes, the artist should be Maroon five.

128
00:12:01.350 --> 00:12:02.130
Yes.

129
00:12:02.340 --> 00:12:07.930
So Maroon five is the artist who has sung these amazing songs.

130
00:12:07.950 --> 00:12:11.280
I am going to read in my playlist.

131
00:12:12.420 --> 00:12:17.280
So the album is created now inside the album.

132
00:12:17.580 --> 00:12:23.160
We have to add ArrayList for the title of the song and duration of the song.

133
00:12:23.160 --> 00:12:30.600
As that list of songs consists, the song and the song consist of a title and a duration.

134
00:12:31.380 --> 00:12:39.810
Now we have created this album and to add songs to the album we are calling this album.

135
00:12:40.680 --> 00:12:49.590
Object and add song is that this art song we have created in the album class?

136
00:12:49.590 --> 00:12:58.350
I have talked about it that this sad song is going to add the song to the list only if the song is not

137
00:12:58.350 --> 00:13:00.000
already present in the list.

138
00:13:00.090 --> 00:13:08.550
In case if the song is already present in the list, it will throw an exception saying that stop, this

139
00:13:08.550 --> 00:13:15.870
song is already present and the boolean function will return like this ad song was a boolean function

140
00:13:15.870 --> 00:13:19.050
and it is going to return false like stop.

141
00:13:19.050 --> 00:13:22.560
You can't add song to the list so add some.

142
00:13:22.560 --> 00:13:28.380
I am selecting this and suppose the title of the song is.

143
00:13:29.810 --> 00:13:33.890
Like the first song is supposed to stay.

144
00:13:35.460 --> 00:13:38.670
And our duration.

145
00:13:39.180 --> 00:13:44.430
Let's suppose it is 4.5 minutes.

146
00:13:45.220 --> 00:13:47.110
It is a double decker type.

147
00:13:47.110 --> 00:13:58.530
So, yes, now ending this and copying this three more times, we can copy it as many times as we want.

148
00:13:59.180 --> 00:14:01.930
Number of songs can be in finite.

149
00:14:03.270 --> 00:14:10.510
And we are using analysts and it allows us to add multiple data.

150
00:14:10.980 --> 00:14:13.620
Now for the third song, I have to check.

151
00:14:14.130 --> 00:14:16.050
Yes, it's memories.

152
00:14:16.800 --> 00:14:18.090
Memories.

153
00:14:18.970 --> 00:14:25.210
And the duration for this sub was 3.5 and for this supports 5.2.

154
00:14:25.690 --> 00:14:28.600
So we have added three songs successfully.

155
00:14:28.990 --> 00:14:32.610
Let's add one more song or better lyric.

156
00:14:32.620 --> 00:14:35.080
So we have created the first album.

157
00:14:35.080 --> 00:14:44.290
Now in the similar way, we have to create one more album so that the song has some variations, so

158
00:14:44.290 --> 00:14:46.150
it is showing some error.

159
00:14:46.150 --> 00:14:49.390
Let us try to see what the edit is.

160
00:14:50.600 --> 00:14:55.070
So the syntax error tokens are misplaced.

161
00:14:55.730 --> 00:14:56.890
Okay, so you.
