1
00:00:01,350 --> 00:00:07,200
Our project is Java COVID 19 cases tracker system.

2
00:00:07,440 --> 00:00:14,850
So we are going to develop an Web interface or web application for tracking the cases all over the world

3
00:00:15,420 --> 00:00:16,560
of COVID 19.

4
00:00:16,590 --> 00:00:24,900
So during this pandemic scenario, we have seen there are huge data analysis part in COVID tracking

5
00:00:24,900 --> 00:00:25,500
system.

6
00:00:25,740 --> 00:00:34,020
So we are going to create some data visualization or we can set data set part with some spring framework,

7
00:00:34,500 --> 00:00:39,690
and we are going to find some formal and visible solution for this.

8
00:00:40,020 --> 00:00:43,860
So COVID 19 crisis ecosystem we are going to build using Java.

9
00:00:44,460 --> 00:00:49,680
So this Java project is based on core Java Java spring framework and servlet pattern.

10
00:00:49,950 --> 00:00:52,990
So I'm not going to beat core servlet concepts here.

11
00:00:53,010 --> 00:00:55,780
I'm using some servlet concepts here.

12
00:00:55,800 --> 00:00:59,520
So our full system is based on Java Spring framework.

13
00:00:59,640 --> 00:01:03,520
I'm going to teach the Java Spring framework from the scratch.

14
00:01:03,540 --> 00:01:06,930
I'm going to explain Java code syntax each and everything.

15
00:01:07,380 --> 00:01:15,480
So our project is Java COVID 19 tracker system, and we are going to build some data representation

16
00:01:15,480 --> 00:01:18,240
part in our frontend using Java framework.

17
00:01:20,340 --> 00:01:26,550
I'm using here dataset part default dataset, but I'm not creating my own data set here.

18
00:01:26,570 --> 00:01:30,060
I'm using data set default on available on the Internet.

19
00:01:30,080 --> 00:01:33,320
You can use such similar data sets also.

20
00:01:33,650 --> 00:01:39,650
So this is one of the useful application or we can say one of the useful data representation application

21
00:01:39,890 --> 00:01:41,110
in current pandemic.

22
00:01:41,120 --> 00:01:50,030
We can find all the cases we can find or append, or we can say ascending list, descending list of

23
00:01:50,030 --> 00:01:50,780
each and everything.

24
00:01:51,020 --> 00:01:54,410
So this is all about how we are going to develop our project.

25
00:01:55,160 --> 00:01:58,790
So let us see what is our project aim first.

26
00:01:59,030 --> 00:02:05,180
So our project AIM is to develop wave applications from the ecosystem of COVID 19 cases.

27
00:02:05,330 --> 00:02:11,510
So we are going to develop one wave application for this purpose, and we are going to use your spring

28
00:02:11,510 --> 00:02:11,960
framework.

29
00:02:12,410 --> 00:02:14,140
Those types of development are six.

30
00:02:14,150 --> 00:02:14,860
Basically.

31
00:02:14,870 --> 00:02:17,690
First is project setup, how we are going to set up our project.

32
00:02:17,810 --> 00:02:20,620
Second is understanding different tools we are going to use there.

33
00:02:20,660 --> 00:02:22,790
What is the dependency design, etc.?

34
00:02:22,790 --> 00:02:25,610
What are the XML files and all the things here?

35
00:02:26,380 --> 00:02:27,940
Some Java basic concepts.

36
00:02:28,780 --> 00:02:31,270
Davos Spring Framework, Java Solid Concepts.

37
00:02:31,270 --> 00:02:34,180
I'm not going to use core solid part here.

38
00:02:34,180 --> 00:02:40,960
I'm just considering solid as some syntax Java Web interfaces, how the web interfaces are made in Java,

39
00:02:40,960 --> 00:02:42,160
Java PHI, etc..

40
00:02:42,730 --> 00:02:45,670
So this is all about how the steps of our development.

41
00:02:45,670 --> 00:02:48,400
So our project aim is to develop the reputation.

42
00:02:49,310 --> 00:02:50,850
Application requirements.

43
00:02:50,870 --> 00:02:56,990
Java Basic Knowledge If you should have some Java basic knowledge regarding the syntax speech and etc..

44
00:02:56,990 --> 00:03:02,810
I'm not going to explain from the scratch of Java, but I'm going to tell you for some simple cases.

45
00:03:03,260 --> 00:03:08,030
Java spin framework and not going with syntax this part or deep part of the Java string.

46
00:03:08,030 --> 00:03:11,900
But you should know the Java spinning, but otherwise I'm going to explain also here.

47
00:03:12,350 --> 00:03:18,590
Then Java web development how the web application developed in Java in regarding to the servlet part,

48
00:03:18,590 --> 00:03:20,720
what is the front end, back end each and everything.

49
00:03:21,050 --> 00:03:22,250
Then tools required.

50
00:03:22,250 --> 00:03:29,960
Here is JDK, this Java development kit that brings ID, which is basically intelligent idea, which

51
00:03:29,960 --> 00:03:35,840
is very useful platform to create such Java applications.

52
00:03:35,960 --> 00:03:41,060
I'm going to use your ultimate edition, but you can choose Community Edition also.

53
00:03:41,570 --> 00:03:46,430
Then Spring Initialized, which is basically web interface to initialize your project.

54
00:03:47,550 --> 00:03:50,220
So this is it about how we can go with this?

55
00:03:51,450 --> 00:03:55,140
So I'm going to specify the Java basic concepts also here.

56
00:03:55,590 --> 00:04:00,460
But before that, you should remember some Java basics in taxes.

57
00:04:00,480 --> 00:04:03,630
I'm just telling you the Java basic concepts here.

58
00:04:03,660 --> 00:04:10,230
So Java is made up of three parts other than other languages like Python or C.

59
00:04:10,230 --> 00:04:15,570
There are no parts in their languages that are just compilers or interpreters which are compiling the

60
00:04:15,570 --> 00:04:20,640
higher language language to the machine level language and you are printing the output or you are developing

61
00:04:20,640 --> 00:04:21,440
your project.

62
00:04:21,450 --> 00:04:24,330
But Java is made up of three parts.

63
00:04:24,330 --> 00:04:26,730
Firstly, JVM, which is Java Virtual Machine.

64
00:04:27,060 --> 00:04:27,360
Why?

65
00:04:27,360 --> 00:04:30,420
I'm telling you this because JVM is our runtime server.

66
00:04:30,420 --> 00:04:32,190
We can say for this purpose.

67
00:04:32,190 --> 00:04:40,530
So we are going to fetch data from one thing on available on internet which is lively, updated within

68
00:04:40,530 --> 00:04:41,840
one day or two days.

69
00:04:41,850 --> 00:04:47,310
So these are our data sets and what we are going to do, we are going to load it in the server pattern.

70
00:04:47,310 --> 00:04:50,040
We are going to represent using Java Spring framework.

71
00:04:50,550 --> 00:04:54,390
So Java virtual machine is a not physically existent machine.

72
00:04:54,390 --> 00:04:55,710
It is virtual machine.

73
00:04:56,160 --> 00:04:59,900
It provides runtime environment in which Java bytecode executed.

74
00:05:00,180 --> 00:05:03,810
It also runs programs in other languages but compiled in Java by.

75
00:05:04,560 --> 00:05:10,590
So basically it's Morse code, which is very important in the server part server and part it verifies

76
00:05:10,590 --> 00:05:16,440
the codes, which is basically the compiler error or something, which is detects, executes code and

77
00:05:16,440 --> 00:05:18,450
provides the entire environment.

78
00:05:18,630 --> 00:05:24,030
Why I'm telling you the same thing is if you are getting runtime error, no need to check your web application

79
00:05:24,030 --> 00:05:27,750
code or etc. You have to check your basic code, java code.

80
00:05:28,110 --> 00:05:30,660
So these are the things you are going to use here.

81
00:05:32,200 --> 00:05:38,250
So other than this jihadi jihadis Java runtime environment, which you set off tools, libraries, graph

82
00:05:38,290 --> 00:05:41,110
files, etc., and Java application programs.

83
00:05:41,380 --> 00:05:43,410
It is implementation of JVM.

84
00:05:43,420 --> 00:05:48,610
We can say for the implementation purpose we need backend as a jihadi for the JVM.

85
00:05:49,300 --> 00:05:50,880
Again, this is physically exist.

86
00:05:50,890 --> 00:05:52,540
So these are some libraries.

87
00:05:52,540 --> 00:05:54,940
Java files are files in Java.

88
00:05:55,760 --> 00:06:00,650
JDK, JDK Java Development Kit, which contains Git Plus JVM.

89
00:06:00,650 --> 00:06:02,750
So Jari Plus mixed JDK.

90
00:06:02,780 --> 00:06:08,000
Also, it contains Java compiler, which is basically compiling purpose and which is basically you are

91
00:06:08,000 --> 00:06:10,730
downloading the JDK only from the website.

92
00:06:11,240 --> 00:06:16,970
I'm using your Java JDK 16th version, but then you are downloading that part is basically JDK.

93
00:06:17,030 --> 00:06:22,070
So there are C version, standard edition versions, Enterprise Edition versions available on Java.

94
00:06:22,340 --> 00:06:24,170
So these are the basic things.

95
00:06:24,860 --> 00:06:32,390
So let us see pictorial representation of this game is this basically the oval shape is basically virtual

96
00:06:32,390 --> 00:06:36,680
machine which loads the bytecode and all the things are virtual like all the ram, all the things are

97
00:06:36,680 --> 00:06:37,010
virtual.

98
00:06:37,010 --> 00:06:43,430
So it's access our virtual server for our purposes by creating this application and executing all the

99
00:06:43,430 --> 00:06:49,720
code's state of libraries, Java file, some other files like documentation, etc., etc. Content content

100
00:06:49,820 --> 00:06:54,350
makes great job contents, JVM and all these things.

101
00:06:54,350 --> 00:07:01,160
JDK contains some Java files other than these, given all the things some Java compilers also are there.

102
00:07:01,160 --> 00:07:03,680
There are some dependencies in Greek also.

103
00:07:03,680 --> 00:07:08,300
So all the things makes JDK, JVM plus GIRI and Java compiler.

104
00:07:08,600 --> 00:07:13,250
So the downloaded file is basically just JDK and your installing that.

105
00:07:14,060 --> 00:07:20,570
So if you are not installed, JDK try to download latest JDK, which is 16th version, also give the

106
00:07:20,570 --> 00:07:29,600
path name and etc. You can check your path also of your thing and you can check the Java version also

107
00:07:29,600 --> 00:07:32,720
using Java version command in your CMD.

108
00:07:32,750 --> 00:07:36,440
So I checked and I'm using 16 version.

109
00:07:37,200 --> 00:07:37,940
So this is it.

110
00:07:38,040 --> 00:07:40,180
We are going to do so.

111
00:07:40,200 --> 00:07:42,990
I'm going to tell you some Java methods and classes later.

112
00:07:43,110 --> 00:07:46,860
But let us see how we can initialize our project first.

113
00:07:47,190 --> 00:07:50,010
So let me go to the Chrome.

114
00:07:50,010 --> 00:07:55,680
Your web browser, any web browser, you have to go, then go to this start dot, spring dot.

115
00:07:56,040 --> 00:08:01,080
So this is basically the spring initialize and we can say spring initializing project.

116
00:08:01,410 --> 00:08:04,440
So you can check the documentation, etc..

117
00:08:04,470 --> 00:08:08,570
So currently they are using 1.5 to 2.0.

118
00:08:08,580 --> 00:08:11,370
So this is basically on 2.2.

119
00:08:11,400 --> 00:08:12,090
Currently.

120
00:08:13,100 --> 00:08:15,970
Also you can check here Springwood versions.

121
00:08:15,980 --> 00:08:19,430
This is basically latest version and these are the snapshots.

122
00:08:19,430 --> 00:08:21,060
So these are not the stable virgins.

123
00:08:21,080 --> 00:08:23,690
You can check this is the stable version, 2.5.3.

124
00:08:24,350 --> 00:08:26,660
Then my project, we are going to use your memory.

125
00:08:26,690 --> 00:08:29,690
So in Java there are three or four frameworks already deployed.

126
00:08:29,690 --> 00:08:36,860
So other than I'm taking the web application, I'm going with core Java, part code Java are basically

127
00:08:36,860 --> 00:08:38,980
based on three or four applications.

128
00:08:38,990 --> 00:08:41,390
Popular are three and my main and gradle.

129
00:08:42,270 --> 00:08:51,030
So this basically condensed some web apps of late gbk JSP is also there and best framework also.

130
00:08:51,890 --> 00:08:58,820
But my brain is more advanced part of and which contains spring hibernate.

131
00:08:59,240 --> 00:09:06,380
Of all the things or in that part I will tell you what is hibernate and gbk basically gbk is basically

132
00:09:06,380 --> 00:09:07,580
connecting part hibernate.

133
00:09:07,580 --> 00:09:13,360
You can initialize the commands database directly in the java files.

134
00:09:13,370 --> 00:09:15,830
No need to extract that part.

135
00:09:16,310 --> 00:09:21,730
So these are the main things and Gradle is basically for the mobile app development, etc..

136
00:09:21,740 --> 00:09:24,170
So language is over Java tools, language java.

137
00:09:24,440 --> 00:09:28,820
No need to choose this code or go with Java with this.

138
00:09:29,030 --> 00:09:31,300
Now we are going to mention this code.

139
00:09:31,520 --> 00:09:32,300
I'm going.

140
00:09:33,310 --> 00:09:34,120
Minchin as.

141
00:09:35,070 --> 00:09:35,640
COVID.

142
00:09:41,980 --> 00:09:43,720
So artefact name is again.

143
00:09:45,680 --> 00:09:46,370
Well, we.

144
00:09:49,160 --> 00:09:50,540
But I like this name.

145
00:09:50,540 --> 00:09:51,680
Is this then?

146
00:09:54,270 --> 00:09:55,830
Name is COVID 19.

147
00:09:57,960 --> 00:09:58,620
Kisses.

148
00:09:59,880 --> 00:10:00,380
Record.

149
00:10:01,870 --> 00:10:02,980
Package name is this.

150
00:10:03,250 --> 00:10:07,360
Remember I'm using Java 16 and click here 16 Virgin Java file image.

151
00:10:07,960 --> 00:10:11,050
So we need to require some add some dependencies.

152
00:10:11,050 --> 00:10:13,450
Also click add dependencies part.

153
00:10:13,960 --> 00:10:16,150
So hope you can see this part.

154
00:10:16,540 --> 00:10:17,410
All the things.

155
00:10:18,260 --> 00:10:21,740
Let me add Webb part, which is Spring Webb.

156
00:10:23,680 --> 00:10:27,780
We need to deploy our application using supreme efficiency.

157
00:10:27,790 --> 00:10:29,380
So beautiful thing offspring.

158
00:10:29,380 --> 00:10:32,570
You never required any server server part here.

159
00:10:32,680 --> 00:10:38,110
Apache Tomcat is the default embedded container which deploys on the internet and you will get the output.

160
00:10:38,110 --> 00:10:41,440
So these are the default server in the spring web.

161
00:10:42,380 --> 00:10:44,060
Then let me add Tim Lee.

162
00:10:45,650 --> 00:10:51,890
Which is basically Java template engine for the server and standalone environments, which is basically

163
00:10:51,890 --> 00:10:59,510
HTML5 engine, which allows the HTML to correctly deploys on the browser and as a static prototype if

164
00:10:59,510 --> 00:11:00,300
it's so dynamic.

165
00:11:00,320 --> 00:11:09,260
Also spring and spring or we can say check also Springwood DevTools live, reload, restart.

166
00:11:09,260 --> 00:11:13,580
I need to use that part so these things I need to request.

167
00:11:13,610 --> 00:11:15,790
So Spring Web, Tim Live and Springwood.

168
00:11:15,800 --> 00:11:19,910
Other than this you can add that also for the chat bot and etc..

169
00:11:19,910 --> 00:11:21,200
So you can check there.

170
00:11:21,230 --> 00:11:28,100
I'm not using your any restful API because our HTML file will be loaded to the spring only, so no restful

171
00:11:28,100 --> 00:11:29,570
API is required here.

172
00:11:30,950 --> 00:11:33,080
So Java maven this.

173
00:11:33,920 --> 00:11:36,200
Keep as it is this and generate.

174
00:11:36,500 --> 00:11:41,660
Once you generate this, you can see the file is downloaded, which is basically the file and later

175
00:11:41,660 --> 00:11:43,820
we are going to open it in our ID.

176
00:11:43,820 --> 00:11:50,000
But before that proceeding to our project, let us see the Java Basic Concept concepts first.

177
00:11:50,870 --> 00:11:53,380
So first it's Java methods and classes.

178
00:11:53,390 --> 00:11:57,500
So everything in a java is made up of classes and objects.

179
00:11:58,450 --> 00:12:02,920
If you have seen our program in Java, again, it's class and method.

180
00:12:03,430 --> 00:12:10,270
So while writing any program, printing any output or if you are making any arithmetic program, you

181
00:12:10,270 --> 00:12:12,820
need to require classes and methods.

182
00:12:12,970 --> 00:12:17,180
So everything in Java is associated with classes and methods.

183
00:12:17,200 --> 00:12:22,450
Without classes and methods, you cannot write any Java program which is basically purely invalid Java

184
00:12:22,450 --> 00:12:22,840
program.

185
00:12:24,110 --> 00:12:24,800
What example?

186
00:12:24,800 --> 00:12:27,200
In real life, cars are objects.

187
00:12:28,240 --> 00:12:28,600
Sarah.

188
00:12:29,230 --> 00:12:33,190
Sarah Having some attributes like weight color.

189
00:12:34,150 --> 00:12:35,130
Methods are dry.

190
00:12:35,130 --> 00:12:35,930
You break.

191
00:12:35,950 --> 00:12:36,460
Stop.

192
00:12:36,460 --> 00:12:37,570
Etc. open.

193
00:12:37,570 --> 00:12:39,100
The door are also can be method.

194
00:12:39,220 --> 00:12:41,680
So these are the things like in Java.

195
00:12:41,770 --> 00:12:44,710
So methods are just the logic behind that part.

196
00:12:45,010 --> 00:12:50,050
So classes is like object constructor or blueprint blueprint for object.

197
00:12:50,050 --> 00:12:51,910
So car is the object.

198
00:12:51,910 --> 00:12:54,730
So but we can create a one class as a vehicle.

199
00:12:55,270 --> 00:12:58,260
Similarly, we can put in that vehicle motorbike.

200
00:12:58,270 --> 00:13:01,870
Also, another object car is an object truck is an or another object.

201
00:13:01,990 --> 00:13:08,710
So class is the basically the object constructor and object is basically to use that call the class

202
00:13:08,710 --> 00:13:12,520
or use that class or to execute particular class.

203
00:13:13,270 --> 00:13:16,810
An object and called instance of classes without object.

204
00:13:16,810 --> 00:13:24,700
We cannot call classes except the class in a similar class or classes subclasses part or if the class

205
00:13:24,700 --> 00:13:26,050
is inherited that part.

206
00:13:26,560 --> 00:13:33,160
So the inheritance concept without an inheritance concept, we cannot use classes without any objects.

207
00:13:33,430 --> 00:13:35,470
Methods are declared within the classes.

208
00:13:35,710 --> 00:13:38,550
It contains the whole code of particular functions.

209
00:13:38,560 --> 00:13:41,910
Methods contains return values, basic pairs also.

210
00:13:41,920 --> 00:13:46,840
So basically methods are basic the logical thinking of logical part.

211
00:13:46,840 --> 00:13:51,820
We can see logical block of classes, method, contents, all the logic of the whole process.

212
00:13:52,700 --> 00:13:58,030
And object of class is created, we can easily use that methods with the objects which something types

213
00:13:58,070 --> 00:14:04,610
like object methods, etc. in the java and you can definitely use that objects and classes and methods.

214
00:14:04,970 --> 00:14:07,040
Again, main methods is the default method in Java.

215
00:14:07,040 --> 00:14:12,650
If you are using public static void means seen with arguments which returns always strings.

216
00:14:12,980 --> 00:14:19,820
It is main method which is default method in Java to run any program in Java.

217
00:14:19,820 --> 00:14:23,330
So this is the first thing which loads on JVM.

218
00:14:23,330 --> 00:14:29,570
So while writing the code, we are going to write some logic in main method only or we are going to

219
00:14:29,570 --> 00:14:32,270
call that logic in method to run the program.

220
00:14:33,240 --> 00:14:36,090
So this is about the Java methods and classes.

221
00:14:36,090 --> 00:14:38,310
But what is this thing thing here?

222
00:14:38,490 --> 00:14:39,090
So let us see.

223
00:14:39,090 --> 00:14:40,770
What is the spring framework here is.

224
00:14:41,560 --> 00:14:47,860
So if you know, in the python or in any other languages, there are some default frameworks to deploy

225
00:14:47,890 --> 00:14:50,620
on the way as a python has Django and flask.

226
00:14:50,980 --> 00:14:58,810
Similarly in Java in 2003, spring framework is created, which is basically basic framework in Java,

227
00:14:59,020 --> 00:15:06,820
but there are several steps of development be taken and spring framework is now very popular in Java

228
00:15:06,820 --> 00:15:08,590
to deploy any web application.

229
00:15:08,920 --> 00:15:12,310
Second thing, it's long term stability.

230
00:15:12,580 --> 00:15:15,280
And third thing is it's very easy to use.

231
00:15:15,400 --> 00:15:18,340
So there are some advantages of the framework.

232
00:15:18,340 --> 00:15:20,160
Also, I'm going to deal with this.

233
00:15:20,170 --> 00:15:26,830
So spring framework is a lightweight framework, we can say, and you can start as a framework of frameworks.

234
00:15:26,830 --> 00:15:33,780
So there are different frameworks in Java as to hibernate types to be GCF.

235
00:15:33,790 --> 00:15:34,540
So.

236
00:15:35,370 --> 00:15:38,020
And these are some popular frameworks in Java.

237
00:15:38,040 --> 00:15:44,670
So spring frameworks includes all the frameworks and they made some robust framework for that.

238
00:15:44,670 --> 00:15:50,130
So no need to require Hibernate or Scrooge again and again we can use spring framework directly.

239
00:15:50,580 --> 00:15:59,500
This is my web MVC framework, which has several modules like IOC, then database injection also there.

240
00:15:59,520 --> 00:16:01,540
Then dependency injection also there.

241
00:16:01,560 --> 00:16:08,630
So these are some default cases framework you can set as a structure where we find a solution of various

242
00:16:08,640 --> 00:16:09,690
technical problems.

243
00:16:09,810 --> 00:16:16,350
So in spring framework, we can use database, then hibernate part, then JSP part, servlet part.

244
00:16:16,380 --> 00:16:17,220
Also you can use.

245
00:16:17,370 --> 00:16:20,150
So these are the some default spring frameworks.

246
00:16:20,160 --> 00:16:25,950
So in three further videos, I'm going with some steps of development and how we are going to develop

247
00:16:25,950 --> 00:16:26,870
our project.

248
00:16:26,880 --> 00:16:33,990
So first initialize your project using spring, initialize the use that constraints and use that ID.
