1
00:00:01,030 --> 00:00:07,930
So here is the employed Java file which is defined inside the package hotel, adding the necessary packages

2
00:00:07,930 --> 00:00:09,070
which are required.

3
00:00:09,830 --> 00:00:11,120
In this class.

4
00:00:11,150 --> 00:00:16,730
Now, here we have defined the class which is extending the frame and initializing the connection variable

5
00:00:16,940 --> 00:00:17,900
as null.

6
00:00:17,930 --> 00:00:26,390
Then we have here a panel labelled as content pane or table, and for more panels here, these are the

7
00:00:26,390 --> 00:00:29,360
private instance variables of this class.

8
00:00:29,660 --> 00:00:34,580
So inside the main function, we have executed the event queue to invoke later.

9
00:00:35,420 --> 00:00:38,000
Reasonable method void run.

10
00:00:38,000 --> 00:00:38,990
Define the void run.

11
00:00:38,990 --> 00:00:46,670
Inside which we have created the current object of this class and setting its visibility as true.

12
00:00:47,180 --> 00:00:51,120
Now, inside the closed method, we have disposed to this window.

13
00:00:51,140 --> 00:00:52,670
This will close the window.

14
00:00:54,720 --> 00:00:59,150
Then there is the parameter non parameter constructor which is throwing a SQL exception.

15
00:00:59,160 --> 00:01:06,120
If any occurs, then there is a default setting the default close operation of this window which is

16
00:01:06,120 --> 00:01:11,970
exit on closed, setting the bound for it, creating a new panel, setting the bound for it, adding

17
00:01:11,970 --> 00:01:17,490
that panel to the frame, setting the layout of the panel as null.

18
00:01:17,520 --> 00:01:21,720
Then there is a table setting the bound for the table, adding that table to our panel.

19
00:01:21,750 --> 00:01:28,980
Then there is a button as load data adding action listener to the load data which will be handled,

20
00:01:29,130 --> 00:01:34,410
handling the event on the button, initializing the connection with the database, selecting a strict

21
00:01:34,410 --> 00:01:39,690
form employ, executing the query which will fetch all the record from the employee data.

22
00:01:40,820 --> 00:01:44,560
As this button will be used to see the data of employer.

23
00:01:44,570 --> 00:01:48,260
So this will be executing the query and fetching the record from our database.

24
00:01:48,440 --> 00:01:51,350
And this will this statement will set the.

25
00:01:52,110 --> 00:01:53,640
Model of our table.

26
00:01:54,030 --> 00:01:55,970
Then there is a setting.

27
00:01:55,980 --> 00:02:02,100
We have set the bound for the button and its background, colour and foreground color.

28
00:02:02,130 --> 00:02:03,990
Then we have added that button to our panel.

29
00:02:04,020 --> 00:02:09,480
Next button is exit bag button adding action performed method defining for it.

30
00:02:09,780 --> 00:02:15,660
So it will just move us back to the reception page and setting this visibility of the current window

31
00:02:15,660 --> 00:02:17,040
as false.

32
00:02:18,880 --> 00:02:25,120
Now for the moving we have defined the bound for that exit button background color, foreground color

33
00:02:25,120 --> 00:02:27,430
and adding it to our panel next.

34
00:02:28,040 --> 00:02:32,110
Next, we have label off name bound for it.

35
00:02:32,110 --> 00:02:35,770
Adding that to our panel, a label as H, setting the bound for it.

36
00:02:35,770 --> 00:02:42,220
Adding that to our panel, a label as gender setting bound for it, adding to our panel.

37
00:02:42,310 --> 00:02:45,820
Then there is a job label setting bound for it.

38
00:02:45,820 --> 00:02:48,130
And adding to that, our panel.

39
00:02:48,460 --> 00:02:50,920
Then there is a salary label.

40
00:02:53,360 --> 00:02:56,600
Adding bomb for it and adding it to our panel.

41
00:02:56,690 --> 00:03:02,390
Then there is a label phone bound of it and adding to our panel.

42
00:03:02,390 --> 00:03:03,920
Then there is a higher number.

43
00:03:05,220 --> 00:03:10,470
Bound for it and adding it to a panel, similarly for the G.M. as well.

44
00:03:10,650 --> 00:03:15,750
So this is the employed Java, which is used to fetch or show the record of IMPLY.

45
00:03:15,780 --> 00:03:19,140
At last we have setting in the background color of the window as white.

46
00:03:19,170 --> 00:03:21,960
Let's move on to the customer info class.

47
00:03:23,900 --> 00:03:27,210
So package is defined inside the hotel.

48
00:03:27,230 --> 00:03:29,270
We have imported the necessary package.

49
00:03:29,930 --> 00:03:36,650
Customer info is extending JW frame connection as null j11j panel of private instance.

50
00:03:36,740 --> 00:03:42,840
And there are seven labels and one table type of private instance.

51
00:03:42,860 --> 00:03:50,510
Inside the main method, we have invoked the event Q Invoke letter inside which we have defined the

52
00:03:50,510 --> 00:03:52,400
public void run method and.

53
00:03:55,250 --> 00:04:01,160
Inside which we have defined the current object of the class, which is customer info and setting the

54
00:04:01,160 --> 00:04:02,780
visibility of it as true.

55
00:04:03,050 --> 00:04:09,530
And then we have defined the public quite close method which is will be used to close the application.

56
00:04:09,770 --> 00:04:16,730
Then there is a non parameterized constructor of the current class, setting the default operation,

57
00:04:16,730 --> 00:04:24,020
setting the bound for the frame, creating a new panel, setting border of it, adding that to the frame

58
00:04:24,020 --> 00:04:26,240
and setting the layout of the panel as null.

59
00:04:26,480 --> 00:04:32,150
Then there is a button back adding the action listener to it, defining the action.

60
00:04:32,150 --> 00:04:37,430
Perform the event on which it will take us back to the reception page.

61
00:04:38,750 --> 00:04:41,090
Setting the visibility of the current window as false.

62
00:04:41,720 --> 00:04:43,100
Setting the bounds of the button.

63
00:04:43,100 --> 00:04:44,840
Setting the background color of the button.

64
00:04:44,840 --> 00:04:49,550
Setting the foreground color of the button, and then adding that button to our panel.

65
00:04:50,420 --> 00:04:56,180
In the next we have a load data button, so that will load the customer information inside the action

66
00:04:56,180 --> 00:04:57,920
performed method of it.

67
00:04:57,920 --> 00:05:00,230
We have initialize the connection with the database.

68
00:05:01,360 --> 00:05:04,940
A strange query which takes select aspect from customer.

69
00:05:05,480 --> 00:05:09,110
Then we have using the results set object we have created.

70
00:05:10,280 --> 00:05:11,780
Executed the query.

71
00:05:13,660 --> 00:05:17,800
And we have set the model for the table which on which the data will be shown.

72
00:05:17,830 --> 00:05:23,650
Then we have shown the set, the bound for the button and.

73
00:05:25,240 --> 00:05:28,270
Setting the background color of the button and foreground color of the button.

74
00:05:28,450 --> 00:05:32,240
Then we have added that button to our panel.

75
00:05:32,260 --> 00:05:34,210
Then there is another panel.

76
00:05:37,640 --> 00:05:41,600
I'd setting Bond for it, adding that to our panel.

77
00:05:41,600 --> 00:05:46,550
Then there is a label number sitting bound for it, adding to it that our panel.

78
00:05:46,580 --> 00:05:51,770
Then there is a name setting bound for it and adding to that our panel.

79
00:05:51,890 --> 00:05:56,270
Then there's a gender setting bound for it, adding it to a panel.

80
00:05:56,300 --> 00:06:01,610
Then there's a new table setting bound for the table and adding that table to our panel.

81
00:06:01,640 --> 00:06:07,310
Similarly, for the country, bound of it and adding to a panel similarly for the room number, bound

82
00:06:07,310 --> 00:06:08,720
for it and adding it to our panel.

83
00:06:08,720 --> 00:06:13,880
Similarly for that check and status, that could be either yes or no bound for it and adding it to a

84
00:06:13,880 --> 00:06:14,300
panel.

85
00:06:14,300 --> 00:06:22,340
Then there is a deposit label, adding it bound and setting, adding it to our panel, then setting

86
00:06:22,340 --> 00:06:27,290
the bound background color of the window as white.

87
00:06:27,860 --> 00:06:32,270
So let's move to the last class of this video that is a manager in full class.

88
00:06:33,990 --> 00:06:36,670
So this is defined inside the package hotel.

89
00:06:36,690 --> 00:06:39,060
We have imported the necessary packages.

90
00:06:39,450 --> 00:06:45,240
Then we have defined the class, which is extending frame connection as null.

91
00:06:45,270 --> 00:06:51,720
There are one panel object, one table instance, and the food labels.

92
00:06:52,830 --> 00:06:54,330
For the launching of application.

93
00:06:54,330 --> 00:07:00,710
Inside the main method we have defined the public void run inside the event queue dot invoke later enable

94
00:07:00,870 --> 00:07:02,200
and inside the try.

95
00:07:02,230 --> 00:07:08,220
We have created the object of the current class, setting the visibility of the frame as true and catching

96
00:07:08,220 --> 00:07:11,160
the exception, if any occurs.

97
00:07:12,040 --> 00:07:15,100
White close method is defined inside this dot display.

98
00:07:15,170 --> 00:07:20,950
So current instance will be disposed and the window will be closed by this method.

99
00:07:21,670 --> 00:07:24,520
Then we have manager info class.

100
00:07:27,760 --> 00:07:30,610
Whose constructor is defined here.

101
00:07:31,270 --> 00:07:33,400
That is a non parameterized constructor.

102
00:07:35,240 --> 00:07:40,790
Setting the default close operation for it, setting the bounds of the frame in creating the new instance

103
00:07:40,790 --> 00:07:41,720
of the panel.

104
00:07:42,470 --> 00:07:48,740
Model for the panel, adding it to the frame, setting the layout of the panel, then instance in the

105
00:07:48,740 --> 00:07:52,430
table, setting bound of the table, adding the table to our panel.

106
00:07:53,370 --> 00:08:01,110
Creating a button instance that is labelled as low data defining action performed method for the button

107
00:08:01,110 --> 00:08:02,580
inside dry block.

108
00:08:02,700 --> 00:08:05,160
Creating the connection.

109
00:08:06,610 --> 00:08:07,480
Object.

110
00:08:07,600 --> 00:08:13,450
Then we have creating a string select abstract from employ where job is equals to manager.

111
00:08:13,450 --> 00:08:17,740
So this will bring the data where job is equals to manager.

112
00:08:17,740 --> 00:08:25,060
So inside the employ table there will be multiple employs, but it will only fetch those records where

113
00:08:25,060 --> 00:08:27,010
job fill is equal to manager.

114
00:08:27,340 --> 00:08:31,390
Then we will execute this query using the results set statement table.

115
00:08:31,400 --> 00:08:36,670
The set model will set the model for the table and catch the exception by using the catch block, setting

116
00:08:36,670 --> 00:08:41,410
the bound for that load data button, background color of the button and foreground color of the button.

117
00:08:41,770 --> 00:08:45,490
Then we have added that button to our panel.

118
00:08:46,990 --> 00:08:48,640
Then there is an exit button.

119
00:08:50,420 --> 00:08:51,620
Nevertheless back.

120
00:08:52,860 --> 00:08:59,970
Defining action performed method to that button inside which we have a new reception, setting the visibility

121
00:08:59,970 --> 00:09:06,330
of the reception as true and setting the visibility of the current method.

122
00:09:06,420 --> 00:09:07,730
Current clock.

123
00:09:07,740 --> 00:09:08,000
Sorry.

124
00:09:08,010 --> 00:09:09,780
Current window as false.

125
00:09:10,600 --> 00:09:15,760
Setting the bounds of the button, background, color of the button, foreground color of the button,

126
00:09:15,760 --> 00:09:20,250
and adding the content, adding that button to our panel.

127
00:09:20,260 --> 00:09:27,790
Next, there is a label labeled as name setting, the bound for the name, adding that label named to

128
00:09:27,790 --> 00:09:28,870
our panel.

129
00:09:28,900 --> 00:09:37,570
Then there is a label edge labeled as H, setting the bound for the label, adding that label to a panel.

130
00:09:39,500 --> 00:09:41,210
Then there is a gender label.

131
00:09:41,300 --> 00:09:43,220
Setting the bounds for the gender label.

132
00:09:43,220 --> 00:09:45,350
Adding that gender label to our panel.

133
00:09:45,500 --> 00:09:50,900
Then there is a label job setting the bound for that label, adding that label to our panel.

134
00:09:50,930 --> 00:09:57,500
Then there is the label salary, adding that bound, setting the bound for the label salary and adding

135
00:09:57,500 --> 00:09:58,460
it to our panel.

136
00:09:58,490 --> 00:10:02,150
Then there is a label as phone setting the bound for that.

137
00:10:02,390 --> 00:10:04,620
Adding that label to our panel.

138
00:10:04,640 --> 00:10:09,330
Then there is a label as the heart setting bound for it, adding it to our panel.

139
00:10:09,350 --> 00:10:15,020
The last label has Gmail of the manager, adding it to our bound and adding it to our.

140
00:10:16,190 --> 00:10:16,820
Panel.

141
00:10:17,090 --> 00:10:22,880
At last we have defined the white colour which set as the background for this window of the manager

142
00:10:22,880 --> 00:10:23,430
info.

143
00:10:23,450 --> 00:10:28,820
So this is all about the description of the codes of these three classes.

144
00:10:28,910 --> 00:10:31,130
Let's have a look on the.

145
00:10:32,560 --> 00:10:35,020
How these classes will be showing.

146
00:10:35,380 --> 00:10:37,360
What is the output of these classes?

147
00:10:37,360 --> 00:10:40,140
So let's run the first class employed on Java.

148
00:10:40,150 --> 00:10:42,280
So when this file.

149
00:10:43,760 --> 00:10:46,520
So this is look like this.

150
00:10:47,580 --> 00:10:48,330
As employed.

151
00:10:48,330 --> 00:10:53,310
Our file is used to load data, so when we click on load data, there should be data of the employer

152
00:10:53,310 --> 00:10:54,180
should be shown.

153
00:10:54,180 --> 00:10:57,150
So when we click on load data, nothing.

154
00:10:57,880 --> 00:11:03,720
Comes in front of this window, we can see nothing because we haven't added any data.

155
00:11:03,730 --> 00:11:08,680
So we will add data and see the complete run of this program in our last video.

156
00:11:08,830 --> 00:11:11,530
So let's see the output of the second one.

157
00:11:11,530 --> 00:11:12,730
Customer info.

158
00:11:14,410 --> 00:11:15,550
Then this file.

159
00:11:15,640 --> 00:11:17,100
So this is how it looks.

160
00:11:17,110 --> 00:11:22,810
It will also not show any data when we click on load data as there is not any data till now in our database,

161
00:11:22,810 --> 00:11:23,980
we have not added.

162
00:11:23,980 --> 00:11:25,810
So low data will do nothing.

163
00:11:25,810 --> 00:11:27,850
It will not show anything.

164
00:11:28,420 --> 00:11:30,010
We close this one also.

165
00:11:30,400 --> 00:11:35,500
Then manager info will look similar to the other two classes as well.

166
00:11:35,860 --> 00:11:39,250
We run the file, we got it, we click on load data.

167
00:11:39,280 --> 00:11:42,850
There will be no data as we have not added that yet.
