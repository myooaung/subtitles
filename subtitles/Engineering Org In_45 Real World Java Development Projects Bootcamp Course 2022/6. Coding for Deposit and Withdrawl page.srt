1
00:00:02,010 --> 00:00:09,740
So in this video we will be talking about the more classes these are deposit class and withdrawal class.

2
00:00:09,750 --> 00:00:11,820
So let's start.

3
00:00:11,820 --> 00:00:19,440
So this in deposit class will be used whenever a customer or account holder will deposit some account

4
00:00:19,440 --> 00:00:21,900
in it's in his account.

5
00:00:21,900 --> 00:00:25,230
So this class is defined inside the package bank.

6
00:00:25,230 --> 00:00:32,040
We have imported the necessary packages like a Java JWT, which will help us to create graphical user

7
00:00:32,040 --> 00:00:39,360
interface for this class and a blue dot event which will let us handle events on our buttons.

8
00:00:39,360 --> 00:00:44,700
And then Java starts thing which will also is a modified version of JWT class.

9
00:00:46,030 --> 00:00:48,970
JWT package and then total package.

10
00:00:49,150 --> 00:00:55,270
Then after that we have defined the hourglass deposit, which is extending frame and implementing accent

11
00:00:55,270 --> 00:00:55,840
listener.

12
00:00:56,500 --> 00:01:03,820
Now inside this class we have two text fields that is 22 and we have two buttons B one and bb2.

13
00:01:04,210 --> 00:01:06,710
So there are three buttons, b one between B three.

14
00:01:06,730 --> 00:01:08,320
Then there are three labels as well.

15
00:01:08,350 --> 00:01:09,740
L1, L2 and L3.

16
00:01:09,760 --> 00:01:12,810
Then there is a string type of variable, a pin.

17
00:01:12,820 --> 00:01:14,560
Then inside the deposit.

18
00:01:15,910 --> 00:01:17,410
A Parameterized constructor.

19
00:01:17,410 --> 00:01:19,480
We have passed that a string variable pin.

20
00:01:19,480 --> 00:01:27,850
And what we did is is to store the past variable of pin into the current instance variable of a string

21
00:01:27,850 --> 00:01:28,900
type of variable pin.

22
00:01:29,110 --> 00:01:33,970
So after that, what we have created an image icon with the help of the class loader that gets system

23
00:01:33,970 --> 00:01:38,170
results by passing the argument of the location of that image.

24
00:01:38,230 --> 00:01:43,180
Now, after that, we have scaled the instance of that image and set its size.

25
00:01:43,180 --> 00:01:51,310
And after that we have again stored that image into our image icon object type three, and then we pass

26
00:01:51,310 --> 00:01:51,790
that image.

27
00:01:51,790 --> 00:01:53,890
I can object to our label L three.

28
00:01:54,100 --> 00:02:00,640
After that, we have set the location of the label that is zero zero and its size will be 960 cross

29
00:02:00,640 --> 00:02:03,910
1080 and adding that label to our frame.

30
00:02:05,750 --> 00:02:12,680
What we did after that is we have defined a label named as interim and you want to depose it and set

31
00:02:12,680 --> 00:02:14,530
its foreground color as white.

32
00:02:14,540 --> 00:02:21,320
And after that we have set its font properties, font family system, font type is bold and its font

33
00:02:21,320 --> 00:02:22,610
size is 16.

34
00:02:22,760 --> 00:02:30,440
After that, we have defined a text field to one and set its font properties like font families.

35
00:02:30,440 --> 00:02:35,030
Railway font type is bold and its font size is 22.

36
00:02:35,840 --> 00:02:40,010
And next what we did is there is a be one button deposit.

37
00:02:41,620 --> 00:02:45,460
Labeled as deposit and there's ab2 button labelled as back.

38
00:02:45,460 --> 00:02:48,720
So these will be the two buttons which will handle events.

39
00:02:48,730 --> 00:02:55,780
Then we have set the layout as null and after the way that we have set the bound or location for the

40
00:02:55,790 --> 00:03:03,760
L1, so its location will be 190, comma 350 and its size will be 400 cross 35 and added that to our.

41
00:03:05,330 --> 00:03:08,960
L-3 then we have defined the text field and its bound.

42
00:03:08,960 --> 00:03:15,650
So it's bound will be 190, comma 420, but its location and its size will be 320 plus 25.

43
00:03:15,890 --> 00:03:19,010
And then again that added that text field to the L three.

44
00:03:19,250 --> 00:03:26,480
After that, there is a setting the button bound for that button location will be 390, comma 558 and

45
00:03:26,480 --> 00:03:31,280
its size will be 150 cross 35, adding that also to over L three.

46
00:03:31,400 --> 00:03:37,970
After that, what we did is there is a setting bound for the button to its location will be 390 comma

47
00:03:37,970 --> 00:03:39,020
633.

48
00:03:40,590 --> 00:03:43,470
And its size will be 150 across 35.

49
00:03:43,500 --> 00:03:46,500
After that, we have added that button to our label L three.

50
00:03:46,590 --> 00:03:53,070
Now we will not add action, so we will be adding action in this one button as well as for this be two

51
00:03:53,070 --> 00:03:53,940
button also.

52
00:03:54,030 --> 00:03:57,580
After that, what we are doing is setting the size of the frame.

53
00:03:57,600 --> 00:04:06,960
Like 960 across 1080 and after that setting the recorded property as true, then set location as 500

54
00:04:06,960 --> 00:04:07,710
comma zero.

55
00:04:07,710 --> 00:04:10,560
And after that we have set the visibility as true.

56
00:04:12,360 --> 00:04:20,480
Now inside the action performance method, we are passing an action event object E and inside the drive

57
00:04:20,520 --> 00:04:26,840
log we have defined a string amount which will fetching the details from the t one text field and get

58
00:04:26,850 --> 00:04:29,280
with the help of get text method method.

59
00:04:29,280 --> 00:04:31,760
And after that we have defined the data object.

60
00:04:31,770 --> 00:04:39,060
Now if the source of the event is from B1, then what we are doing is if the get text equals null,

61
00:04:39,090 --> 00:04:42,090
we are showing that please enter the amount you want to deposit.

62
00:04:42,090 --> 00:04:47,820
So if the amount deposit text field is null, then we will show the message that please enter the amount

63
00:04:47,820 --> 00:04:48,900
you want to deposit.

64
00:04:48,930 --> 00:04:50,490
Otherwise, what we are doing.

65
00:04:50,490 --> 00:04:55,440
If that field is not null, then we will establish the connection with the database with the help of

66
00:04:55,440 --> 00:05:00,540
our database class, which is gone and we will execute similar text, then execute, update and pass

67
00:05:00,540 --> 00:05:03,210
the query which is inserted into bank value.

68
00:05:03,220 --> 00:05:09,120
So bank bank will be I have told you that bank will be storing the values whenever a user or account

69
00:05:09,120 --> 00:05:09,600
will.

70
00:05:10,810 --> 00:05:14,230
Deposit some values into into his account.

71
00:05:14,230 --> 00:05:18,070
So that will contain the values, pin data and amount.

72
00:05:18,070 --> 00:05:23,560
So these values will be inserted into the bank table and we will show a message dialog box that the

73
00:05:24,640 --> 00:05:30,100
amount which he will she will enter at will be deposited successfully set the visibility of the current

74
00:05:30,100 --> 00:05:30,850
window as false.

75
00:05:30,850 --> 00:05:37,720
And we will move back to the control of the program, to the new transaction class and set the visibility

76
00:05:37,720 --> 00:05:38,400
as true.

77
00:05:38,470 --> 00:05:44,020
If the source is from B2, then we will set the visibility of the current window as false and pass the

78
00:05:44,020 --> 00:05:45,070
new transaction.

79
00:05:46,300 --> 00:05:51,640
Call the new transaction class and send the possibility of that classes through now inside that inside

80
00:05:51,640 --> 00:05:52,720
the cash block.

81
00:05:52,900 --> 00:05:57,790
We will handle an exception if occur and inside the public static void main, they will be calling the

82
00:05:57,790 --> 00:06:01,810
new deposit class with the null values and send the results to.

83
00:06:02,620 --> 00:06:04,600
So this is about the deposit class.

84
00:06:04,600 --> 00:06:08,140
Let's have a look on the withdrawal class as well.

85
00:06:08,200 --> 00:06:11,570
So this class is also defined inside the package bank.

86
00:06:11,590 --> 00:06:16,750
We have imported the necessary package, our JWT, which will help us create the graphical user interface

87
00:06:16,780 --> 00:06:22,780
Java JWT event which will help us to handle events over the button's Java exports thing, which is a

88
00:06:22,780 --> 00:06:24,960
modified version of the JWT package.

89
00:06:24,970 --> 00:06:30,790
Then Java util date which will help us to create an object of data and Java exploit aspect which will

90
00:06:30,790 --> 00:06:34,460
help us to establish connection with our database and interact with the database.

91
00:06:34,480 --> 00:06:38,900
Then this is a public class withdrawal which is extending the frame and implementing excellent listener.

92
00:06:38,920 --> 00:06:44,020
This this class containing two text field 22 and three buttons, B1, B2 and B three.

93
00:06:44,020 --> 00:06:48,490
And there are four labels and one, two, three and four and a string type of variable pin.

94
00:06:49,940 --> 00:06:52,060
Inside the parameter constructor of the bedrock.

95
00:06:52,070 --> 00:06:57,440
What we are doing is the setting, the current instance of into to the past instance of a string variable

96
00:06:57,440 --> 00:06:57,950
pin.

97
00:06:57,980 --> 00:07:03,350
After that, we will be adding an image icon with the help of class or get system result and pass the

98
00:07:03,350 --> 00:07:12,140
location of the location of the picture which we want to is stored then storing its size with the help

99
00:07:12,140 --> 00:07:13,150
of image icon.

100
00:07:13,160 --> 00:07:18,800
Again storing that image into the image icon and adding that image to icon to the label.

101
00:07:20,140 --> 00:07:26,320
Then we have fixed the location for that label, which is zero zero, and that size will be 960, 180,

102
00:07:26,350 --> 00:07:28,570
adding that label to our frame, what we are.

103
00:07:28,600 --> 00:07:32,230
So this label one is showing that the maximum withdrawal is 10,000.

104
00:07:33,580 --> 00:07:42,010
Setting its foreground color as white and setting its font as font type familiar system font is bold,

105
00:07:42,010 --> 00:07:43,970
type is bold and size is 16.

106
00:07:43,990 --> 00:07:50,890
Then there is another label as please enter your amount and its foreground color will be color of white

107
00:07:50,890 --> 00:07:57,490
and its font will be of family as system type as bold, and its size will be 16.

108
00:07:57,580 --> 00:08:03,200
Then there will be the respective text field for the entering amount and its font.

109
00:08:04,500 --> 00:08:08,980
Properties will be like railway font bolt and its size will be 25.

110
00:08:09,000 --> 00:08:13,920
Then there will be two buttons with draw button and a back button.

111
00:08:15,180 --> 00:08:20,730
Setting the layout of the frame as null after that, setting the bound or location for the label as

112
00:08:20,730 --> 00:08:27,660
190 comma 350 ended size will be 400 across 20 and adding that two over three then setting the bound

113
00:08:27,660 --> 00:08:34,650
for the L to those location will be one 9400 in size will be 400 cross 20 adding that 1203 Then there

114
00:08:34,650 --> 00:08:43,110
is a setting bound for the event text field whose location will be one 9450 and setting its size as

115
00:08:43,110 --> 00:08:44,490
330 cross 30.

116
00:08:44,590 --> 00:08:51,000
And then there is a button with one setting bound for it will be 390, comma, 588 and its size will

117
00:08:51,000 --> 00:08:52,670
be 150 cross 35.

118
00:08:52,680 --> 00:09:01,050
Then there is a button b two whose location will be 391 or 633 and its size will be 150 cross 35 adding

119
00:09:01,050 --> 00:09:02,700
that to our L three.

120
00:09:02,700 --> 00:09:08,070
Then we will be adding the action listener to our both of the buttons, setting the size of the window

121
00:09:08,070 --> 00:09:14,010
as 90, 61, 81 080 and setting the location as 500 comma zero.

122
00:09:14,010 --> 00:09:17,490
Set the recorded property of the frame as true and the visibility as to.

123
00:09:19,460 --> 00:09:21,320
After that inside the action perform method.

124
00:09:21,320 --> 00:09:22,520
What we are doing is.

125
00:09:23,930 --> 00:09:28,820
Inside the trialogue, we will restoring the text filled from the table into account and creating a

126
00:09:28,820 --> 00:09:30,410
new date object.

127
00:09:30,410 --> 00:09:36,500
And if the source of the event is from B1, what we are doing is if the text field is null, we will

128
00:09:36,500 --> 00:09:38,840
show that presented the amount you want to withdraw.

129
00:09:38,840 --> 00:09:45,710
And inside the block, inside the we will create the object of the con class and inside the results

130
00:09:45,710 --> 00:09:47,060
that are as is equals.

131
00:09:47,060 --> 00:09:51,650
To see one point as execute query select extract from bank where pain is equals to pin.

132
00:09:51,650 --> 00:09:58,810
So this will be executing the query and updating inside the bank where the pin will be matched and end

133
00:09:58,820 --> 00:10:05,000
balances equals to initially will be zero and while asked next as we iterate over the record for that

134
00:10:05,000 --> 00:10:09,590
particular pin and if I start get a string mode dot equals deposit.

135
00:10:11,240 --> 00:10:15,830
So if the mode is equal to deposit then balance plus integer dot pass and get the string amount.

136
00:10:15,830 --> 00:10:24,920
So we will be storing that amount in our balance integer variable and if otherwise what we are doing,

137
00:10:24,920 --> 00:10:31,430
we will be subtracting that balance amount from the result set into the balance.

138
00:10:31,430 --> 00:10:35,510
And then what we are doing is balance is less than integer percent.

139
00:10:35,510 --> 00:10:41,210
So if the value of the balance is less than the amount, then it will show that amount in sufficient

140
00:10:41,210 --> 00:10:41,840
balance.

141
00:10:42,320 --> 00:10:47,750
Otherwise what we will do is we will execute the insert into back bank values, pain, date, withdrawal

142
00:10:47,750 --> 00:10:48,710
and the amount.

143
00:10:48,710 --> 00:10:53,630
And we will show that the dialogue box that debited successfully set the visibility of the current window

144
00:10:53,630 --> 00:10:58,310
as false and call the new transaction with the argument pane and send the visibility as false.

145
00:10:58,310 --> 00:11:02,600
If the source of the button is from B to what we will do to close the current window and open the new

146
00:11:02,600 --> 00:11:08,270
transaction with the window, with the and with the pin value and set the visibility as to inside the

147
00:11:08,270 --> 00:11:10,520
cash block will be handling an exception if occurs.

148
00:11:12,090 --> 00:11:18,150
And public static void men will be handling new withdrawal with the null values and set visible as true.

149
00:11:18,300 --> 00:11:20,820
So this is all about the three classes.

150
00:11:21,450 --> 00:11:22,620
Sorry, there are two classes.

151
00:11:22,620 --> 00:11:23,850
Deposit and withdrawal.
