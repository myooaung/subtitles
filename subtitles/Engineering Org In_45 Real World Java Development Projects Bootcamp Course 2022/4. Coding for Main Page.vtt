WEBVTT
1
00:00:00.120 --> 00:00:05.190
So here we are in our NetBeans idea is the class mainframe on Java.

2
00:00:05.550 --> 00:00:13.170
And so this class is also defined inside the package airline as all the classes have been defined inside

3
00:00:13.170 --> 00:00:14.250
the package airline.

4
00:00:14.460 --> 00:00:22.440
And we have imported the Abstract Window Toolkit package, which is used to develop graphical user interface

5
00:00:22.440 --> 00:00:26.850
of any application, desktop based application.

6
00:00:26.880 --> 00:00:32.550
Then there is a swing package which is also used to develop graphical user interface based application.

7
00:00:32.700 --> 00:00:35.670
But it is basically advanced version of JWT.

8
00:00:36.090 --> 00:00:45.420
Then we have imported a DOT event package which will help us to handle events.

9
00:00:46.260 --> 00:00:48.540
Which will going to happen in this.

10
00:00:50.730 --> 00:00:52.230
Page of our project.

11
00:00:53.310 --> 00:00:58.530
Now there is a web defined public class mainframe which is extending the frame.

12
00:01:00.570 --> 00:01:04.350
And inside it we have defined the main method.

13
00:01:05.180 --> 00:01:12.590
Inside the main method, we have created the instance of mainframe class and status visibility as true

14
00:01:12.590 --> 00:01:14.360
so that whenever it is.

15
00:01:15.200 --> 00:01:17.120
This class will run.

16
00:01:17.330 --> 00:01:18.380
Then it will.

17
00:01:18.410 --> 00:01:20.780
It should show the current window.

18
00:01:20.780 --> 00:01:24.050
For that, we have set the visibility as true.

19
00:01:25.630 --> 00:01:29.350
Now inside the constructor of this mainframe class.

20
00:01:30.500 --> 00:01:37.700
We have had it as airline reservation management system and called the Initialize method.

21
00:01:38.210 --> 00:01:43.280
So inside the mainframe constructor, which is a non parameterized constructor, we have called the

22
00:01:43.280 --> 00:01:44.510
Initialize method.

23
00:01:44.510 --> 00:01:48.800
So let's have a look at what is Initialize method doing.

24
00:01:48.800 --> 00:01:51.830
What is the implementation of initialize method.

25
00:01:52.130 --> 00:01:53.810
So just below.

26
00:01:54.850 --> 00:01:58.780
Mainframe constructor, we have defined the public void initialize.

27
00:01:59.140 --> 00:02:01.870
Sorry, private void initialize method.

28
00:02:01.870 --> 00:02:03.760
So it is of private type.

29
00:02:06.380 --> 00:02:08.120
And why type methods.

30
00:02:08.150 --> 00:02:10.040
It will not return anything.

31
00:02:10.610 --> 00:02:17.690
Now, inside it we have defined the foreground color of the window as can.

32
00:02:17.810 --> 00:02:20.020
So that is a color which is a.

33
00:02:20.790 --> 00:02:29.430
More like a graphite color lighter than it that and setting the layout of windows as null default and

34
00:02:29.790 --> 00:02:33.750
then we have initialized a new label.

35
00:02:35.340 --> 00:02:37.980
Which does not have any name currently.

36
00:02:37.980 --> 00:02:39.060
That is another label.

37
00:02:39.060 --> 00:02:49.470
Like then we have set the icon for the label by using a new image icon object and using the class loader

38
00:02:49.470 --> 00:02:56.120
dot get system resource which will load the image from the resource from the folder icon front.

39
00:02:56.410 --> 00:02:57.390
JPG.

40
00:02:57.960 --> 00:03:02.520
Here you can see inside the icon folder we have front or jpg.

41
00:03:02.610 --> 00:03:06.610
So this image will be loaded with the help of class loader.

42
00:03:06.630 --> 00:03:08.040
Don't get system resource.

43
00:03:10.450 --> 00:03:19.570
Now we have set the label for the bond set the bounds for the label, X is zero, Y is zero, its width

44
00:03:19.570 --> 00:03:24.070
is 19, 20 and its height is 990.

45
00:03:24.280 --> 00:03:27.610
Adding the label to our j frame or window.

46
00:03:27.940 --> 00:03:33.190
After that we have created another label that is airline management system.

47
00:03:34.520 --> 00:03:36.320
Name or labeled as.

48
00:03:36.350 --> 00:03:38.150
Air India welcomes you.

49
00:03:41.550 --> 00:03:45.090
Then we have said the foreground color of this label as blue.

50
00:03:45.630 --> 00:03:49.200
After that, we have set the font.

51
00:03:50.260 --> 00:03:54.670
For that label that it's one type is.

52
00:03:55.510 --> 00:03:57.880
The Homo font.

53
00:03:59.350 --> 00:04:03.820
Style is plain and font size is 36.

54
00:04:04.540 --> 00:04:09.250
Setting the bound for that label, it's x is 700.

55
00:04:09.250 --> 00:04:10.780
Y is 60.

56
00:04:10.900 --> 00:04:11.620
It's width.

57
00:04:11.620 --> 00:04:13.510
Width will be 1000.

58
00:04:13.510 --> 00:04:15.880
And height will be 55.

59
00:04:16.780 --> 00:04:17.560
Now.

60
00:04:18.740 --> 00:04:21.020
Inside the new label.

61
00:04:22.170 --> 00:04:25.200
We have added this airline management system label.

62
00:04:25.950 --> 00:04:30.060
So new label is inside the new label.

63
00:04:30.060 --> 00:04:32.130
We have added with the airline management system.

64
00:04:34.330 --> 00:04:39.370
After that, we have created a menu bar object labeled as menu bar.

65
00:04:40.270 --> 00:04:42.850
And then we have.

66
00:04:44.030 --> 00:04:45.020
Created.

67
00:04:47.280 --> 00:04:49.110
Set the menu bar.

68
00:04:50.180 --> 00:04:51.290
In our window.

69
00:04:51.860 --> 00:04:54.380
After that, we have defined the menu.

70
00:04:55.940 --> 00:04:57.780
Elements of the menu bar.

71
00:04:57.800 --> 00:05:04.730
So the first menu element is a line system named as a line system.

72
00:05:05.060 --> 00:05:05.960
And.

73
00:05:08.310 --> 00:05:15.870
After that, we have set the foreground color of that menu, which is blue and adding that menu.

74
00:05:16.810 --> 00:05:19.120
Element to our manual.

75
00:05:21.470 --> 00:05:27.380
Now for the menu element, we have defined the menu items of the airline system.

76
00:05:27.380 --> 00:05:31.340
So menu item will be first as flight info.

77
00:05:31.910 --> 00:05:34.880
And after that we have added.

78
00:05:40.900 --> 00:05:45.640
That menu item in our menu element airline system.

79
00:05:45.640 --> 00:05:51.250
So inside the airline system, menu element, we will have a menu item as flight info.

80
00:05:51.340 --> 00:05:59.440
Similarly, there is another menu item that is add customer detail and we have added that menu item

81
00:05:59.440 --> 00:06:01.870
inside the menu element airline system.

82
00:06:03.860 --> 00:06:05.120
There is another one.

83
00:06:06.040 --> 00:06:14.770
Labelled as journey detail and added that also inside the airline system menu element.

84
00:06:15.700 --> 00:06:25.870
Then there is another menu item which is labelled as payment detail and it has been added.

85
00:06:28.460 --> 00:06:29.810
To our airline system.

86
00:06:29.810 --> 00:06:31.520
A new element as well.

87
00:06:32.120 --> 00:06:38.180
The last menu item of the airline system is cancellation.

88
00:06:40.260 --> 00:06:44.430
And that is also been added into the airline system.

89
00:06:45.420 --> 00:06:47.490
Let's remove this.

90
00:06:50.760 --> 00:06:51.630
Now.

91
00:06:51.720 --> 00:06:53.190
Now, inside the.

92
00:06:54.880 --> 00:06:55.380
Menu.

93
00:06:55.390 --> 00:06:56.830
We have defined another.

94
00:06:58.240 --> 00:07:02.320
Menu element that is exit named as logout.

95
00:07:04.670 --> 00:07:06.850
Exit dot set for ground color.

96
00:07:07.760 --> 00:07:14.600
So here we have setting the foreground color of the menu as red and then there is a menu bar.

97
00:07:15.020 --> 00:07:18.320
We are adding that menu element to our menu bar.

98
00:07:18.740 --> 00:07:27.470
Now we have defined the menu item for the logout menu element labeled as logout again and adding that

99
00:07:27.470 --> 00:07:29.420
to our menu element.

100
00:07:32.410 --> 00:07:35.980
Now we have here defined the action.

101
00:07:37.180 --> 00:07:40.510
Performed for every menu item.

102
00:07:40.630 --> 00:07:43.450
So first we will look at the flight detail.

103
00:07:45.590 --> 00:07:53.480
So flight details dot and action listener adding accent listener to that label and defining the void

104
00:07:53.480 --> 00:07:54.860
action performed.

105
00:07:55.790 --> 00:07:58.870
So which is taking argument of action event.

106
00:07:58.880 --> 00:08:07.310
So if any event occurs on the flight detail menu item, then we will call the new flight info class.

107
00:08:07.550 --> 00:08:10.400
So here is new flight info class.

108
00:08:10.550 --> 00:08:14.060
So we will call this class if the flight info.

109
00:08:16.350 --> 00:08:17.450
Flag detail.

110
00:08:18.830 --> 00:08:19.790
Menu item.

111
00:08:20.990 --> 00:08:22.580
Will be pressed or collected.

112
00:08:23.610 --> 00:08:29.970
Then we have action performed method defined for the reservation details.

113
00:08:31.080 --> 00:08:38.280
Similarly, it is taking the action event object as a inside the try block we have.

114
00:08:39.540 --> 00:08:41.610
Called new ad customer.

115
00:08:42.420 --> 00:08:43.560
So.

116
00:08:45.530 --> 00:08:47.780
This will show.

117
00:08:49.080 --> 00:08:50.100
The customer.

118
00:08:52.030 --> 00:09:00.640
This will call the customer class and if any exception occur, it will print that exception also inside

119
00:09:00.640 --> 00:09:02.200
the passenger detail.

120
00:09:03.100 --> 00:09:05.950
We have called here.

121
00:09:08.320 --> 00:09:09.790
The journey details.

122
00:09:10.710 --> 00:09:15.960
Inside the action perform event and then if any exceptional occurred, it will handle that description

123
00:09:15.960 --> 00:09:16.560
as well.

124
00:09:17.010 --> 00:09:22.740
Now for the Sector Details, one label we have defined its action performance method taking the argument

125
00:09:23.010 --> 00:09:30.090
of action event e inside the drive block, we have called payment details.

126
00:09:31.870 --> 00:09:33.730
So it will print payment.

127
00:09:33.740 --> 00:09:35.470
It will call payment detail class.

128
00:09:35.470 --> 00:09:36.730
That's here.

129
00:09:37.890 --> 00:09:39.750
Katz BLOCK will handle any exception.

130
00:09:39.750 --> 00:09:40.740
If, of course.

131
00:09:41.620 --> 00:09:43.570
Now there are last two.

132
00:09:46.900 --> 00:09:51.640
Action performed method defined for the cancellation menu item.

133
00:09:52.480 --> 00:09:54.070
Inside the action performed.

134
00:09:54.190 --> 00:10:00.340
It is taking argument action event a inside which we have called a new cancel class.

135
00:10:00.340 --> 00:10:02.380
So here is the cancel class.

136
00:10:03.680 --> 00:10:04.520
That's it.

137
00:10:05.540 --> 00:10:09.440
After that, we have defined the action list for the logout.

138
00:10:11.030 --> 00:10:11.930
Which is.

139
00:10:13.200 --> 00:10:16.470
Defining and taking the action event object.

140
00:10:18.440 --> 00:10:24.830
For that we will set if the logout will be pressed and we will set the visibility of the current main

141
00:10:24.830 --> 00:10:29.000
frame window as follows and make.

142
00:10:30.270 --> 00:10:33.750
Move the control of the program back to the login windows.

143
00:10:33.760 --> 00:10:40.050
We will call the login, create an instance of the login class and set the visibility of that login

144
00:10:40.050 --> 00:10:40.880
as true.

145
00:10:42.560 --> 00:10:48.860
At last we have set the size of the current window as 950 cross 1090.

146
00:10:48.890 --> 00:10:55.550
This will be the size of this main frame window and setting the visibility of the window as true as

147
00:10:55.700 --> 00:10:56.870
whenever we call it.

148
00:10:56.870 --> 00:11:00.260
So the visibility must be true, so the window must be visible.

149
00:11:00.590 --> 00:11:04.760
So this is all about the main frame or Java class.

150
00:11:06.220 --> 00:11:11.020
Which will appear after we log in successfully in our program.

151
00:11:11.680 --> 00:11:14.620
So let's have a look.

152
00:11:15.100 --> 00:11:18.520
On the run or running of this mainframe.

153
00:11:18.520 --> 00:11:21.010
So I'll be taking you from login class.

154
00:11:21.010 --> 00:11:25.210
So let's move to the login class first and run this file.

155
00:11:26.090 --> 00:11:26.990
I'll be running it.

156
00:11:27.970 --> 00:11:29.140
So that's how it will appear.

157
00:11:29.440 --> 00:11:30.460
You must have.

158
00:11:31.560 --> 00:11:32.850
Shown it in.

159
00:11:34.060 --> 00:11:35.100
Previous video as well.

160
00:11:35.170 --> 00:11:38.610
I'll be writing the validate details that are admin.

161
00:11:39.610 --> 00:11:44.590
And writing a password, which is one, two, three, four, five that we have.

162
00:11:45.700 --> 00:11:50.440
Learned in our database and library section where we have created our database and inserted values in

163
00:11:50.440 --> 00:11:55.150
our login table, we click on login here.

164
00:11:56.490 --> 00:11:57.670
So this page will appear.

165
00:11:57.690 --> 00:12:00.670
Now, this page is the output of mainframe page.

166
00:12:00.690 --> 00:12:06.690
This page is the output of mainframe page inside which, as I told you, that had it as the airline

167
00:12:06.690 --> 00:12:13.190
reservation system and inside which we have two menu elements, that is airline system and load.

168
00:12:13.590 --> 00:12:19.080
So inside the airline system, there are five things flight info, head customer details, journey details

169
00:12:19.350 --> 00:12:21.600
and payment details and cancellation.

170
00:12:21.600 --> 00:12:24.300
And in logout we have logout.

171
00:12:24.690 --> 00:12:27.060
So let's log on from here.

172
00:12:27.060 --> 00:12:32.790
In the next video, we will learn about adding customer details.

173
00:12:33.990 --> 00:12:36.860
After that flight info and similarly for the next ones.

174
00:12:36.870 --> 00:12:40.200
So if I click on logout, it will move us back to the login page.

175
00:12:40.380 --> 00:12:42.180
And now let's close this one.

176
00:12:42.180 --> 00:12:43.680
Also, we will keep on cancel.

177
00:12:43.950 --> 00:12:44.880
So.

178
00:12:47.230 --> 00:12:50.350
That's from the running of this mainframe page.
