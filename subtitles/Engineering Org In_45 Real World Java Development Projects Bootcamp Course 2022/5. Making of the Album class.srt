1
00:00:01,470 --> 00:00:02,550
Hello, everyone.

2
00:00:02,580 --> 00:00:11,490
So in this part, we are going to add functions for adding the songs, finding the songs, and then

3
00:00:11,490 --> 00:00:13,860
adding the songs to the playlist.

4
00:00:14,130 --> 00:00:15,720
So let's begin.

5
00:00:16,650 --> 00:00:23,760
Okay, so we have created us class, the function and the constructor.

6
00:00:24,060 --> 00:00:28,110
Now we are going to create a public song.

7
00:00:30,300 --> 00:00:31,860
Public song?

8
00:00:33,520 --> 00:00:34,540
Find song.

9
00:00:36,030 --> 00:00:37,470
Class three.

10
00:00:37,470 --> 00:00:38,340
A function.

11
00:00:38,640 --> 00:00:39,330
Yes.

12
00:00:39,330 --> 00:00:46,460
And inside which we are going to add string string title.

13
00:00:46,470 --> 00:00:55,680
So that title of the song is going to be the arguments inside the fine song class.

14
00:00:56,560 --> 00:00:58,720
After creating the class.

15
00:00:58,720 --> 00:01:02,830
Now we are going to add or for loop.

16
00:01:04,210 --> 00:01:06,550
Firstly, we have to create.

17
00:01:07,830 --> 00:01:17,070
Of a method for adding some like before the finding of the song in order to find the song is present

18
00:01:17,070 --> 00:01:17,700
or not.

19
00:01:17,760 --> 00:01:26,820
Firstly, we have to add the song to the playlist or the library as we have named it.

20
00:01:28,000 --> 00:01:37,180
So that song is going to be a Boolean type function and the arguments are going to be the title of the

21
00:01:37,180 --> 00:01:46,000
song and the duration the song contains too to matter.

22
00:01:46,000 --> 00:01:51,880
Like the song class contains two methods the title and the duration.

23
00:01:52,480 --> 00:01:57,190
So that is what we are going to call inside this.

24
00:01:57,850 --> 00:02:01,660
So we have created the function for adding the song.

25
00:02:02,810 --> 00:02:04,730
And now we are going to.

26
00:02:06,010 --> 00:02:10,070
Check if the song is present or not.

27
00:02:10,090 --> 00:02:24,400
So inside this if or if statement we are going to call the find the song which we have created her title

28
00:02:24,430 --> 00:02:30,100
of the song as we are going to find the song with the help of its title.

29
00:02:30,370 --> 00:02:35,650
And if the title is present, then this is going to return true.

30
00:02:36,280 --> 00:02:39,160
By default, it is set to null.

31
00:02:40,180 --> 00:02:49,930
So if the song title is present inside the list of the songs, then we are going to add saw songs.

32
00:02:50,810 --> 00:02:58,850
So the list like if the song title is not present till now, then only we are going to add the songs

33
00:02:58,850 --> 00:03:03,260
to the list and this is absolutely fine.

34
00:03:03,410 --> 00:03:08,300
Like what is the need to add a song which is already present?

35
00:03:09,410 --> 00:03:18,140
So yes, we have successfully added the songs with its title and its duration.

36
00:03:18,860 --> 00:03:26,060
Now inside the if statement we are going to lexis out.

37
00:03:27,100 --> 00:03:34,660
This is the shortcut for printing something we have to write as vice, and the suggestions are going

38
00:03:34,660 --> 00:03:43,090
to suggest that we have to select the censored option and this will complete the statement automatically

39
00:03:43,090 --> 00:03:45,520
like system dot dot print.

40
00:03:45,570 --> 00:03:49,660
And so what the if statement is going to print?

41
00:03:49,780 --> 00:03:53,590
Like what if a song is not present in the list?

42
00:03:53,830 --> 00:03:57,160
So we have to add this song to the list, right?

43
00:03:57,940 --> 00:04:00,460
So we are going to write it as.

44
00:04:01,710 --> 00:04:14,130
Title of the song like calling the title variable and then successfully added to the list like this

45
00:04:14,130 --> 00:04:16,890
title is successfully added to the list.

46
00:04:17,040 --> 00:04:24,600
Suppose the title is ABC like name of the song is ABC Plus successfully added to the list, so as a

47
00:04:24,600 --> 00:04:26,190
whole it is going to print.

48
00:04:26,220 --> 00:04:36,420
ABC successfully added to the list and this is going to return true as the data type of this function

49
00:04:36,420 --> 00:04:37,470
is boolean.

50
00:04:38,190 --> 00:04:44,900
This function is returning boolean boolean arguments.

51
00:04:44,910 --> 00:04:48,180
So yes, we are done with this part.

52
00:04:48,600 --> 00:05:00,030
Now we are going to complete the find song section also in the start of the add song.

53
00:05:00,330 --> 00:05:06,300
Like Suppose if the song is already present, then what we have to.

54
00:05:07,490 --> 00:05:11,270
Output, like what this function is going to return.

55
00:05:11,480 --> 00:05:16,720
So if the song is already present, then we have tosses out.

56
00:05:16,970 --> 00:05:18,710
Song with name.

57
00:05:20,570 --> 00:05:22,520
Song with name.

58
00:05:23,660 --> 00:05:24,470
Plus.

59
00:05:25,700 --> 00:05:28,280
Glass is used for adding a variable.

60
00:05:29,060 --> 00:05:38,450
And the variable here is the title of the song which we are wishing to add in the list already exists

61
00:05:39,500 --> 00:05:40,760
in the list.

62
00:05:41,450 --> 00:05:42,410
What list?

63
00:05:42,440 --> 00:05:46,880
The library which we have created.

64
00:05:47,420 --> 00:05:56,900
So if the song is already present, then this else is responsible for returning that the song is already

65
00:05:56,900 --> 00:05:58,370
present in the list.

66
00:05:58,400 --> 00:06:01,940
Do not bother to add the song again.

67
00:06:03,200 --> 00:06:07,250
So the add song part is completed.

68
00:06:07,280 --> 00:06:10,190
Now we are switching to the find song.

69
00:06:12,370 --> 00:06:15,010
Inside the find song function.

70
00:06:15,460 --> 00:06:22,540
We are going to check that the song is present in the list or not.

71
00:06:22,900 --> 00:06:31,080
Like the data type we are using to store the songs is ArrayList, which is a resizable and nothing else.

72
00:06:31,090 --> 00:06:33,310
So this the melody.

73
00:06:33,940 --> 00:06:41,830
So we have to iterate through this list in order to check whether the song is present in the list or

74
00:06:41,830 --> 00:06:42,340
not.

75
00:06:42,700 --> 00:06:53,710
So for iterating, we have to use a loop so that we can move one by one in the songs and check if this

76
00:06:53,710 --> 00:06:54,850
is present.

77
00:06:54,850 --> 00:07:03,460
Like we have to match the string that this title is already present or not, and we are going to do

78
00:07:03,460 --> 00:07:06,820
this with the help of an enhanced form.

79
00:07:07,360 --> 00:07:14,440
So inside the Find Song section, we are going to declare enhanced for loop.

80
00:07:15,010 --> 00:07:23,410
And inside the for loop we are going to check that check.

81
00:07:23,710 --> 00:07:24,910
Check the song.

82
00:07:27,460 --> 00:07:33,460
Check the song like we will create that check song functionality.

83
00:07:35,480 --> 00:07:40,700
Let me first complete that find song section and then we will.

84
00:07:42,480 --> 00:07:43,570
Get tighter.

85
00:07:43,590 --> 00:07:50,610
We have already declared in the song Java class, so get tighter.

86
00:07:51,830 --> 00:08:02,390
And after this get title, if it equals the title we are inputting, then it will throw an exception

87
00:08:02,510 --> 00:08:04,730
like this is already present.

88
00:08:04,760 --> 00:08:07,580
Please do not bother to add this again.

89
00:08:08,580 --> 00:08:11,190
And after this checking.

90
00:08:12,320 --> 00:08:13,410
Song check.

91
00:08:13,730 --> 00:08:20,270
So this is going to be the if inside the four.

92
00:08:22,330 --> 00:08:25,990
First complete the four thing or.

93
00:08:27,730 --> 00:08:30,100
Song check.

94
00:08:32,190 --> 00:08:32,790
Song.

95
00:08:32,790 --> 00:08:34,080
Check the song.

96
00:08:34,830 --> 00:08:35,740
Yes.

97
00:08:35,760 --> 00:08:37,140
The suggestions.

98
00:08:37,900 --> 00:08:43,690
Song check the song is the method is like a colon.

99
00:08:44,950 --> 00:08:53,470
This is the enhanced for loop, which is going to iterate through that list and asking that if the song

100
00:08:53,470 --> 00:08:55,750
is present in the list or not.

101
00:08:57,170 --> 00:08:59,090
Inside the for loop.

102
00:08:59,090 --> 00:08:59,750
We are.

103
00:09:00,670 --> 00:09:04,420
Writing a statement which is going to.

104
00:09:06,640 --> 00:09:14,590
Return that if the song is already present, then it is checking the checking that with the help of

105
00:09:15,610 --> 00:09:16,990
string matching method.

106
00:09:17,200 --> 00:09:19,510
So equals title.

107
00:09:19,540 --> 00:09:25,420
If this is true, then this find song is going.

108
00:09:25,420 --> 00:09:29,470
This find some function is going to return.

109
00:09:32,060 --> 00:09:32,550
Duh.

110
00:09:33,530 --> 00:09:34,060
No.

111
00:09:34,800 --> 00:09:39,940
So yes, we are done with the public song.

112
00:09:39,950 --> 00:09:44,240
Find some function which has an argument as the song title.

113
00:09:44,540 --> 00:09:53,030
So if we wish to find a song inside the list, we have to call a for loop and check that the song is

114
00:09:53,030 --> 00:10:01,570
already present on now so that we have successfully added functionalities to add song and find find

115
00:10:01,580 --> 00:10:03,620
song from the list.

116
00:10:03,650 --> 00:10:10,550
Now the next burden should be to add songs to the playlist.

117
00:10:10,640 --> 00:10:16,430
Like we have a list of songs, list of albums, list of artists.

118
00:10:16,460 --> 00:10:25,280
Now our main concern is to add songs to playlist, which was the main goal of making this project like

119
00:10:25,280 --> 00:10:29,900
we are bothered about making a playlist of our favorite songs.

120
00:10:30,050 --> 00:10:39,860
So let us initialize a function for adding songs to the playlist.

121
00:10:40,490 --> 00:10:46,910
Name this as added to playlist using Camel Case.

122
00:10:48,410 --> 00:10:55,010
And the function for adding songs to playlist is created.

123
00:10:55,460 --> 00:11:00,050
The arguments will be like, suppose the track number.

124
00:11:01,280 --> 00:11:05,600
The track number is going to be like, one, two, three, four.

125
00:11:07,370 --> 00:11:10,560
And it is going to be an integer.

126
00:11:10,580 --> 00:11:11,720
Of course.

127
00:11:13,310 --> 00:11:21,740
Also, the playlist is going to be in that link the list data structure.

128
00:11:22,280 --> 00:11:30,920
So we will come to link list, like what linked list is shortly in some time.

129
00:11:32,210 --> 00:11:38,900
First, let me call the arguments inside the function and I hope we are done.

130
00:11:39,500 --> 00:11:48,450
So we have created the function which is going to return Boolean data like either true or false.

131
00:11:48,470 --> 00:11:55,310
So public boolean add to playlist in track number and we are good to go.

132
00:11:55,310 --> 00:11:59,840
I think the link list song playlist, yes.

133
00:11:59,960 --> 00:12:08,600
So inside this in a similar way, we have done this for finding songs again, for adding the songs to

134
00:12:08,600 --> 00:12:09,460
the playlist.

135
00:12:09,470 --> 00:12:17,570
Firstly, we have to iterate through the list and check that whether the song is already present in

136
00:12:17,570 --> 00:12:19,100
the playlist or not.

137
00:12:19,400 --> 00:12:29,110
So in order to check so we have to like go firstly column or loop and enhanced for loop.

138
00:12:29,120 --> 00:12:39,740
And this is going to check again using the check the song thing like we have used it above in the find

139
00:12:39,740 --> 00:12:49,280
song section and this is going to check whether the song is present in the playlist or not.

140
00:12:50,310 --> 00:12:52,290
So song check the song.

141
00:12:52,770 --> 00:13:00,510
Colon This not songs is used for iterating through the song list.

142
00:13:01,590 --> 00:13:03,930
Now how we are going to create a playlist.

143
00:13:03,930 --> 00:13:13,420
Like we have another list of songs which contains supposed 5 to 6 songs from which we want to add 2

144
00:13:13,420 --> 00:13:15,870
to 3 songs to our playlist.

145
00:13:16,050 --> 00:13:26,610
So we will iterate through the like the list and check that whether the thing is a song is present in

146
00:13:26,610 --> 00:13:27,540
the list or not.

147
00:13:27,750 --> 00:13:32,150
And we are going to make the playlist as a lengthy list.

148
00:13:32,160 --> 00:13:37,140
So you may be wondering why we are creating a playlist as a list.

149
00:13:38,510 --> 00:13:49,940
So I listed the special data structure data type, which is going to contain a pointer to from the previous

150
00:13:50,090 --> 00:13:53,470
element and from the next element.

151
00:13:53,480 --> 00:14:02,240
So basically link list is like or tree type data structure, which has roots where the roots are connected

152
00:14:02,240 --> 00:14:08,870
to the first thing like previous element and the second thing, the next element.

153
00:14:08,960 --> 00:14:17,690
So yes, we are going to create playlist as a link list as the members of the playlist are connected.

154
00:14:17,750 --> 00:14:24,980
The current song is connected to the previous track and the current song is connected to the next track

155
00:14:24,980 --> 00:14:25,730
as well.

156
00:14:25,880 --> 00:14:30,150
So yes, it is going to be done in this way only.

157
00:14:30,560 --> 00:14:32,270
So we have covered.

158
00:14:33,040 --> 00:14:33,970
Mailing list.

159
00:14:34,000 --> 00:14:44,770
Now we are going to check this with a similar way we have added like the similar way we have checked

160
00:14:44,770 --> 00:14:47,470
it in the trying some section.

161
00:14:47,620 --> 00:14:53,950
So I've checked some get title equals equals.

162
00:14:55,470 --> 00:14:57,160
Or not title.

163
00:14:57,180 --> 00:14:59,430
So the argument in the.

164
00:15:00,800 --> 00:15:03,290
Equals is going to be the title.

165
00:15:04,200 --> 00:15:05,070
Soyuz.

166
00:15:05,100 --> 00:15:06,060
Here we are.

167
00:15:06,750 --> 00:15:13,200
So we have checked everything inside the statement and if the song is present.

168
00:15:13,980 --> 00:15:17,700
Like if the song is not present in the playlist.

169
00:15:17,790 --> 00:15:26,790
So we are going to add that to the playlist link list, which is playlist and this is added with this

170
00:15:26,790 --> 00:15:29,390
method like playlist or dad.

171
00:15:30,300 --> 00:15:31,560
Check the song.

172
00:15:34,190 --> 00:15:34,850
Yes.

173
00:15:34,850 --> 00:15:38,240
So it is going to be done like this.

174
00:15:39,050 --> 00:15:42,770
And we have added to the playlist.

175
00:15:44,010 --> 00:15:50,910
This function is going to return a boolean expression, which is going to be true.

176
00:15:50,940 --> 00:15:52,870
Like this is true.

177
00:15:52,890 --> 00:15:55,560
We have successfully added songs to the playlist.
