WEBVTT
1
00:00:00.810 --> 00:00:10.500
Now so that we have created the class and function now we will be creating to to get methods for the

2
00:00:10.500 --> 00:00:12.620
title and the duration.

3
00:00:12.630 --> 00:00:25.530
So it is going to be like public strings get title as this is forgetting the title of the song and inside

4
00:00:25.530 --> 00:00:28.200
which we are going to return the title.

5
00:00:28.620 --> 00:00:40.800
So basically this function is going to return in the title of the song return title as we have declared

6
00:00:40.800 --> 00:00:43.710
the name as string title.

7
00:00:44.530 --> 00:00:51.480
This function is going to return and this is going to return the duration.

8
00:00:51.810 --> 00:00:54.360
And the duration is double.

9
00:00:55.300 --> 00:00:58.510
Like the body types or double.

10
00:00:59.610 --> 00:01:02.310
And get the duration.

11
00:01:05.330 --> 00:01:07.490
Get duration.

12
00:01:08.300 --> 00:01:10.490
It is going to be in camel case.

13
00:01:12.670 --> 00:01:15.880
And then return the duration of the song.

14
00:01:17.160 --> 00:01:18.930
In the form of double.

15
00:01:19.230 --> 00:01:28.200
So I hope you must have understood that what is this function doing and what this part is going to return

16
00:01:28.200 --> 00:01:29.640
to the compiler?

17
00:01:30.090 --> 00:01:40.380
Now we have like collected the title of the song and the duration of the song from the class.

18
00:01:40.410 --> 00:01:48.840
Now we have to bind this as this like we have to bind this inside this brace as a string.

19
00:01:48.990 --> 00:01:51.450
This complete part is a string.

20
00:01:51.690 --> 00:02:01.080
This song is a class which we have created, and inside this song we are like outputting the title and

21
00:02:01.080 --> 00:02:03.060
duration as a string.

22
00:02:03.450 --> 00:02:09.750
So we will convert the double like it is already a string.

23
00:02:09.750 --> 00:02:17.630
The title, but the double will be returned in the form of double like or decimal thing.

24
00:02:17.640 --> 00:02:22.080
So we have to fourthly convert into a string and then return.

25
00:02:22.290 --> 00:02:31.920
So we have to call the two string method in Java and the two string method will be responsible for converting

26
00:02:31.950 --> 00:02:41.430
the duration and the title and bind them and then output them as a string as a whole.

27
00:02:41.460 --> 00:02:48.960
So for string, we have to call the override method as we are going to convert the class.

28
00:02:49.350 --> 00:02:53.670
So we have to again create a public string.

29
00:02:55.570 --> 00:03:06.790
Public string to string to string basically is a method in Java which is used to convert the other data

30
00:03:06.790 --> 00:03:08.980
types into a string output.

31
00:03:09.130 --> 00:03:14.200
So inside this two string class, I am going to return.

32
00:03:15.260 --> 00:03:16.970
The song.

33
00:03:18.510 --> 00:03:24.360
And like this song and we have a brace.

34
00:03:24.360 --> 00:03:26.190
So inside the brace.

35
00:03:26.550 --> 00:03:30.690
And to call a variable, we have to add this plus sign.

36
00:03:31.050 --> 00:03:40.230
Inside the brace we have the title, the title string and the variable title like the.

37
00:03:42.240 --> 00:03:43.980
Firstly, close this.

38
00:03:45.770 --> 00:03:54.110
Is equal to dash and the title is called As Plus.

39
00:03:54.880 --> 00:03:58.960
Title variable, which we declared in the class.

40
00:04:00.370 --> 00:04:01.900
Again Plus.

41
00:04:03.500 --> 00:04:04.760
Inside this.

42
00:04:06.750 --> 00:04:14.550
So like line changer and which is going to be enclosed inside a single inverted comma.

43
00:04:15.330 --> 00:04:17.070
Then again, a plus.

44
00:04:17.580 --> 00:04:21.610
And this is going to close the title part.

45
00:04:21.630 --> 00:04:31.440
So closing this with double inverted comma once and we are done with the title part now doing the same

46
00:04:31.440 --> 00:04:38.640
for the duration, like the duration is similar as the title.

47
00:04:38.640 --> 00:04:46.290
So duration double quotes plus the duration variable.

48
00:04:48.600 --> 00:04:56.100
Just a single double chord and no duration variable, as we said.

49
00:04:57.180 --> 00:04:58.710
So duration.

50
00:04:59.790 --> 00:05:02.160
And the press is closed.

51
00:05:02.980 --> 00:05:10.510
So closing the brace inside a single inverted comma and then closing the statement.

52
00:05:11.660 --> 00:05:18.020
So the race part is completed, as far as I can see that.

53
00:05:20.440 --> 00:05:29.410
So we have completed this two string method which will be converting the duration and title as the string

54
00:05:29.410 --> 00:05:30.490
in the hole.

55
00:05:30.520 --> 00:05:38.410
So this is the song, this is the Brace, the title, which we called Inside the String and the title

56
00:05:38.410 --> 00:05:45.280
of the song, after which A Space and the Duration Double.

57
00:05:45.400 --> 00:05:50.860
So the double is converted in the form of string with the help of this tool string.

58
00:05:51.190 --> 00:05:56.510
So as far I can see that we have completed the song class.

59
00:05:56.530 --> 00:05:59.980
Now we will switch to the album class.

60
00:06:00.070 --> 00:06:04.930
So let me create the album Java file first.

61
00:06:06.130 --> 00:06:14.140
So selecting the new file option inside the stacks folder as well as I already told you that all the

62
00:06:14.140 --> 00:06:19.450
files involved in this project will be stored inside the CRC folder.

63
00:06:19.840 --> 00:06:28.210
So inside the CRC folder I am going to create a new file and we'll name it as album dot Java.

64
00:06:29.290 --> 00:06:38.890
So we have successfully created the album class and now we'll start creating the function inside this

65
00:06:38.890 --> 00:06:39.940
class as well.

66
00:06:40.660 --> 00:06:51.430
So now that we have created the album class calling function, let us firstly declare the variables

67
00:06:51.430 --> 00:06:53.680
which are going to be used.

68
00:06:55.420 --> 00:06:58.390
The variables are object inside the class.

69
00:06:58.810 --> 00:07:08.680
I already told you about what objects are the real world entities which are the consistence of class.

70
00:07:09.010 --> 00:07:11.110
So private string name.

71
00:07:12.250 --> 00:07:13.210
And.

72
00:07:14.970 --> 00:07:25.470
Artist private string like or which artist has sung the song with us for that.

73
00:07:25.890 --> 00:07:35.370
So the album will contain a name in the string format and artist in the string format, and the list

74
00:07:35.370 --> 00:07:43.380
of songs inside the album is going to be displayed as an added list.

75
00:07:44.160 --> 00:07:51.480
So at least in the very useful concept inside Java.

76
00:07:52.410 --> 00:08:00.500
Let me firstly import this library which consists this red list feature.

77
00:08:00.510 --> 00:08:05.760
So it is inside that java you can add a list package.

78
00:08:07.280 --> 00:08:16.700
Yes, we have successfully imported the ArrayList Library and creating that list.

79
00:08:16.760 --> 00:08:19.220
Name it as some.

80
00:08:20.280 --> 00:08:26.700
The list name is going to be songs and it is going to contain songs simply so.

81
00:08:26.790 --> 00:08:29.490
There are no errors as far as I can see there.

82
00:08:29.850 --> 00:08:38.160
So let us quickly talk about list like what actually are lists and what is it is going to do in this

83
00:08:38.160 --> 00:08:38.760
project.

84
00:08:39.360 --> 00:08:48.090
So after creating this and initializing all the objects, now we are going to talk about ArrayList.

85
00:08:48.270 --> 00:08:59.840
So we have more data structure as we all have heard about it, to store a list of things, we use arrays.

86
00:08:59.850 --> 00:09:08.100
So you must be wondering that why we are not storing the song inside the array and array list.

87
00:09:08.520 --> 00:09:12.120
What is the consequence of using this list?

88
00:09:12.330 --> 00:09:18.320
So let me tell you first that an array is a limited size.

89
00:09:18.330 --> 00:09:22.680
The array has a limited size, it has a fixed size.

90
00:09:22.770 --> 00:09:27.870
We cannot increase the size and alter the elements inside the array.

91
00:09:28.500 --> 00:09:37.170
So this is a foundation like we can say that this is limitation of array, which is preventing us from

92
00:09:37.170 --> 00:09:39.330
using array in this project.

93
00:09:39.990 --> 00:09:42.900
So what is the benefit of using ArrayList?

94
00:09:43.440 --> 00:09:45.930
ArrayList is similar as an array.

95
00:09:46.230 --> 00:09:56.190
It is used for storing multiple data data types like it could be a string like what we say float double

96
00:09:56.190 --> 00:09:57.570
integer or anything.

97
00:09:57.750 --> 00:10:06.510
So storing multiple data types and the main feature of ArrayList is that it is resizable.

98
00:10:06.540 --> 00:10:12.360
The size of array is immutable, but the size of ArrayList is mutable.

99
00:10:12.390 --> 00:10:17.190
We can increase the size of a list according to our needs.

100
00:10:17.370 --> 00:10:18.570
Like suppose.

101
00:10:18.570 --> 00:10:27.630
Currently our playlist contains only five songs and we want to increase the size of the song list in

102
00:10:27.630 --> 00:10:28.410
future.

103
00:10:28.410 --> 00:10:36.870
So in array it is not possible to increase the size it is fixed, but if we are using array list we

104
00:10:36.870 --> 00:10:41.910
can increase like we do not have to set a size in the beginning in array.

105
00:10:41.910 --> 00:10:50.040
We have to set the size by in the meantime of declaring that what size, maximum size the add is going

106
00:10:50.040 --> 00:10:50.760
to be.

107
00:10:50.880 --> 00:10:53.970
But there is nothing like this in list.

108
00:10:54.180 --> 00:10:58.650
So yes, these are the benefits of using ArrayList.

109
00:10:58.740 --> 00:11:07.650
We are going to store the songs inside this list called Array List, and this is with the mercy of this

110
00:11:07.650 --> 00:11:11.790
library of Java Inside Java Utility List.

111
00:11:11.970 --> 00:11:15.510
So we have covered what ArrayList is.

112
00:11:15.510 --> 00:11:19.590
Now we are going to create a function.

113
00:11:20.550 --> 00:11:25.470
Inside this album class like we have named it.

114
00:11:26.220 --> 00:11:30.330
So the function is going to be public album.

115
00:11:31.470 --> 00:11:37.920
And the arguments are like the name of the album as a string.

116
00:11:38.820 --> 00:11:42.150
The artist as a string.

117
00:11:43.020 --> 00:11:43.980
And.

118
00:11:45.030 --> 00:11:48.330
The third one is the list of songs.

119
00:11:49.350 --> 00:11:54.480
And which is going to be a ArrayList data type.

120
00:11:54.810 --> 00:12:03.360
So we have called those two arguments and now we are going to call the third argument ArrayList.

121
00:12:03.780 --> 00:12:06.000
The second one here in the list.

122
00:12:07.100 --> 00:12:12.660
The suggestions are suggesting the suggestions are very useful.

123
00:12:13.380 --> 00:12:19.050
They helps us and saves a lot of time while writing the code.

124
00:12:19.590 --> 00:12:25.350
So we have successfully called all the three arguments inside the function.

125
00:12:25.980 --> 00:12:35.430
Now, inside this function, in the similar way we have called the songs like we can see that we have

126
00:12:35.430 --> 00:12:39.750
called this using this title and the start duration.

127
00:12:39.780 --> 00:12:46.350
This is the method of calling objects from a class inside Java.

128
00:12:46.530 --> 00:12:50.520
So this thought name is going to be name.

129
00:12:51.240 --> 00:12:54.960
Similarly, this artist is going to be.

130
00:12:56.020 --> 00:12:57.340
I best.

131
00:12:58.240 --> 00:12:58.550
Hmm.

132
00:12:58.870 --> 00:13:00.220
Our test.

133
00:13:01.340 --> 00:13:05.270
This is the method of accessing objects.

134
00:13:06.340 --> 00:13:08.110
Inside of function.

135
00:13:08.980 --> 00:13:12.400
We have already used it in the song class.

136
00:13:12.430 --> 00:13:17.040
Now we are using it in the album also.

137
00:13:17.890 --> 00:13:23.200
So all the stuff here is quite bit relatable.

138
00:13:23.200 --> 00:13:24.640
We can say that.

139
00:13:25.510 --> 00:13:29.050
And you do not have to make much effort.

140
00:13:30.050 --> 00:13:31.910
While learning Java.

141
00:13:33.520 --> 00:13:36.340
Java is such an interesting language.

142
00:13:36.400 --> 00:13:37.990
It has everything.

143
00:13:38.850 --> 00:13:40.860
Inside its libraries.

144
00:13:41.850 --> 00:13:45.510
So this is like new ArrayList song.

145
00:13:46.230 --> 00:13:50.220
So the list is accessed using a new keyword.

146
00:13:51.150 --> 00:13:57.510
This is a method of calling the ArrayList inside the function.

147
00:13:58.020 --> 00:14:05.700
So we have successfully imported all the three arguments, like we have successfully called them inside

148
00:14:05.700 --> 00:14:06.690
the function.

149
00:14:07.680 --> 00:14:15.240
Now I am going to create or construct called album.

150
00:14:16.870 --> 00:14:24.490
It is a good practice to initialize the constructor in the beginning, even if we have no use.

151
00:14:25.320 --> 00:14:25.530
Okay.

152
00:14:26.030 --> 00:14:34.580
As far as I can see that that we have successfully created our two classes named song and album.

153
00:14:34.880 --> 00:14:44.930
So after creating the song and album, we have to start adding songs to the project and this will be

154
00:14:44.930 --> 00:14:50.310
going to happen with the help of Add the song function.

155
00:14:50.330 --> 00:14:59.870
And then we are going to find the songs like we have to print the list, as you can see that in the

156
00:14:59.870 --> 00:15:00.590
second slide.

157
00:15:00.620 --> 00:15:01.180
Yes.

158
00:15:01.190 --> 00:15:07.610
So we have to find the songs like which are the songs present in the leaves list?

159
00:15:07.910 --> 00:15:10.610
And what are its durations?

160
00:15:10.760 --> 00:15:19.850
So we are going to make a dedicated function for finding the songs and for like adding the songs to

161
00:15:19.850 --> 00:15:20.750
the list.

162
00:15:21.500 --> 00:15:23.670
So see you in the next part.
