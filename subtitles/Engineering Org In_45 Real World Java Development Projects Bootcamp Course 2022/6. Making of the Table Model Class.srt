1
00:00:00,850 --> 00:00:08,890
So by far in this project we have covered the download manager class and the progress render class.

2
00:00:08,920 --> 00:00:14,500
Our next concern is to cover the like table model class.

3
00:00:14,500 --> 00:00:25,480
So firstly, we have to create our download table model class in order to add like structures to the

4
00:00:25,480 --> 00:00:26,200
table.

5
00:00:26,230 --> 00:00:30,400
How actually the table model is going to look inside the frame.

6
00:00:30,550 --> 00:00:35,410
So the class is created for download table model.

7
00:00:35,440 --> 00:00:44,620
Now inside this class we will be like, firstly, we have to import some of the packages in order to

8
00:00:44,620 --> 00:00:45,610
use the.

9
00:00:47,150 --> 00:00:50,160
Components of those specific packages.

10
00:00:50,180 --> 00:00:56,780
So Java utils is the first component we are going to use after this.

11
00:00:57,200 --> 00:01:01,970
The second package is okay, so it is import.

12
00:01:02,450 --> 00:01:07,490
And the second package we are going to use is Java string.

13
00:01:07,610 --> 00:01:13,190
So import Java X string and.

14
00:01:14,610 --> 00:01:20,040
After this, we are going to import Java exchange table.

15
00:01:20,670 --> 00:01:23,070
So it is going to be similar.

16
00:01:23,670 --> 00:01:28,110
So we will copy this and just that tab table to it.

17
00:01:29,790 --> 00:01:30,510
Yes.

18
00:01:30,760 --> 00:01:35,690
So Java X-Wing, table dot, Astrid.

19
00:01:35,730 --> 00:01:39,180
So all the components are going to be imported.

20
00:01:39,210 --> 00:01:43,950
That's why we have added Astrid to all three of the packages.

21
00:01:44,250 --> 00:01:54,480
Now we will be extending this download table model class to abstract table model component of the frame.

22
00:01:54,690 --> 00:01:58,440
So abstract table model.

23
00:01:59,800 --> 00:02:01,000
I'm headed this.

24
00:02:02,250 --> 00:02:12,750
So inside this download table model class, we will be like adding a string array for the names of the

25
00:02:12,750 --> 00:02:13,320
columns.

26
00:02:13,320 --> 00:02:17,970
We have already discussed that we have eight tables.

27
00:02:17,970 --> 00:02:28,200
Suppose it like we had it for URL size progress rendered part speed part and average speed and after

28
00:02:28,200 --> 00:02:33,090
which are elapsed time and remaining time and add the last for the status.

29
00:02:33,150 --> 00:02:40,140
So we will be like creating a string array private static.

30
00:02:41,200 --> 00:02:43,600
Final spring.

31
00:02:44,700 --> 00:02:48,870
And square braces to.

32
00:02:50,660 --> 00:02:52,950
Like initialize the area.

33
00:02:53,360 --> 00:03:04,580
So column names is going to be the name for the city and the consistency of this area is going to be

34
00:03:04,880 --> 00:03:05,300
u.

35
00:03:05,300 --> 00:03:05,520
R.

36
00:03:05,540 --> 00:03:06,140
L.

37
00:03:07,230 --> 00:03:10,940
The second one is going to be okay.

38
00:03:11,010 --> 00:03:20,340
So we have all of them the size in MP progress, speed, average speed and both the times it is remaining

39
00:03:20,340 --> 00:03:21,030
time.

40
00:03:22,270 --> 00:03:24,760
And the status.

41
00:03:24,910 --> 00:03:27,060
So it is like this.

42
00:03:27,070 --> 00:03:36,370
After this, we have to like set classes for each column in order to thread a specific input for each

43
00:03:36,520 --> 00:03:36,980
class.

44
00:03:37,000 --> 00:03:41,860
Like suppose that you are l is going to contain a string format input.

45
00:03:41,950 --> 00:03:48,310
The size is going to contain like integer inputs and be not integers.

46
00:03:48,310 --> 00:03:50,320
The size could be in decimal.

47
00:03:50,350 --> 00:03:55,870
So we will be using like a float data type for storing the size.

48
00:03:55,910 --> 00:04:03,310
And similarly for progress and speed we are using the like.

49
00:04:03,820 --> 00:04:05,470
Similarly, the float data time.

50
00:04:05,830 --> 00:04:13,570
Similarly for the time and the remaining time and the status is going to be a string which will be showing

51
00:04:13,570 --> 00:04:17,770
downloading completed post error and all of them.

52
00:04:18,250 --> 00:04:23,950
So yes, after this, we are going to contain classes for each of them.

53
00:04:24,670 --> 00:04:27,430
Private static.

54
00:04:27,940 --> 00:04:30,460
Final class.

55
00:04:31,340 --> 00:04:39,890
And in a similar way, it is going to be an editor and the name is going to be the column class's.

56
00:04:40,870 --> 00:04:42,610
Call them classes.

57
00:04:44,180 --> 00:04:46,900
It is not slow.

58
00:04:47,060 --> 00:04:49,310
We will be copying it from here.

59
00:04:51,870 --> 00:04:56,910
And so, yes, this is, again, going to be.

60
00:04:57,670 --> 00:05:06,340
So we can simply set all of them to string in order to, like, avoid any kind of inconvenience.

61
00:05:06,640 --> 00:05:15,460
String takes all of the inputs, whether it be a numerical value or not.

62
00:05:15,490 --> 00:05:23,980
So we will be using strings as at last everything is going to be displayed in the form of string.

63
00:05:24,100 --> 00:05:28,690
So we are going to copy it and paste for all of them.

64
00:05:28,690 --> 00:05:31,890
One, two, three, four, five, six, seven and eight.

65
00:05:31,900 --> 00:05:32,440
We have.

66
00:05:32,740 --> 00:05:37,840
So we will copy it seven more times and.

67
00:05:38,770 --> 00:05:45,070
And we have done it for five, six and seven.

68
00:05:45,160 --> 00:05:47,930
So, yes, this is done.

69
00:05:47,950 --> 00:05:56,080
We have created a string class for all the columns in the format of an edit.

70
00:05:56,530 --> 00:06:02,380
After this, we are going to like create a tables list of download.

71
00:06:02,410 --> 00:06:04,120
We are adding rows.

72
00:06:04,120 --> 00:06:09,430
So what is going to be the method to add the URLs to the frame?

73
00:06:09,670 --> 00:06:11,900
We will be using ArrayList.

74
00:06:11,920 --> 00:06:20,740
We have already discussed what ArrayList is in the previous series, so I am quickly summarizing and

75
00:06:20,740 --> 00:06:25,030
ArrayList is a data type which we use in Java.

76
00:06:25,270 --> 00:06:29,710
It is basically a type of array, but it is resizable.

77
00:06:29,740 --> 00:06:34,780
We can input any number of like data to this list.

78
00:06:34,810 --> 00:06:37,010
There is no fixed size.

79
00:06:37,030 --> 00:06:40,300
We can increase the size according to the need.

80
00:06:40,810 --> 00:06:47,920
It is going to be like an infinite size array, so that makes it more useful.

81
00:06:48,130 --> 00:06:58,120
We can use this ArrayList for storing like a thing which is not fixed to a specific like what we can

82
00:06:58,120 --> 00:07:00,430
say a specific limit.

83
00:07:01,480 --> 00:07:08,350
So calling this ArrayList as download and the name is going to be download list.

84
00:07:08,680 --> 00:07:19,480
So download list is going to be the name of the object and a new ArrayList downloads will be created.

85
00:07:20,390 --> 00:07:24,320
So inside this we are using download again.

86
00:07:26,430 --> 00:07:30,900
And this is going to add the downloads to this list.

87
00:07:32,190 --> 00:07:32,850
Yes.

88
00:07:32,850 --> 00:07:34,140
So here we are.

89
00:07:35,440 --> 00:07:40,630
We have created two arrays for all the columns in the table model.

90
00:07:40,660 --> 00:07:43,750
We have created array list for the downloads.

91
00:07:43,780 --> 00:07:48,510
Now our next step will be creating a new download for the table.

92
00:07:48,520 --> 00:07:52,390
So a new download function we are going to create.

93
00:07:52,660 --> 00:07:58,860
Now, after creating this list for all the others to be stored inside this ArrayList.

94
00:07:58,990 --> 00:08:05,410
Now we are adding new downloads to that table, which is going to be like visible in the window.

95
00:08:05,530 --> 00:08:13,990
So we are creating this add download function which is taking download as argument and this is going

96
00:08:13,990 --> 00:08:25,150
to add that specific download to the list after which we have to like set account for all the rows like

97
00:08:25,150 --> 00:08:34,060
this file table row insertion notification is decreasing the row count whenever a new download URL is

98
00:08:34,060 --> 00:08:42,430
added to the account, and after which we add like getting a download for a specific specified room.

99
00:08:42,430 --> 00:08:44,140
So yes.

100
00:08:44,140 --> 00:08:46,210
So this is the table model.

101
00:08:46,240 --> 00:08:51,160
Suppose our task is downloading and it is completed.

102
00:08:51,160 --> 00:08:54,790
So what happens after this is completed?

103
00:08:54,880 --> 00:08:57,310
It will be showing hundred percent here.

104
00:08:57,310 --> 00:09:05,230
We will be seeing a completed in the status thing so that specific row will be downloaded.

105
00:09:05,260 --> 00:09:15,370
Now no actions are need to be performed otherwise of clearing it and that specific row is like finished

106
00:09:15,640 --> 00:09:16,500
action thing.

107
00:09:16,720 --> 00:09:21,400
Now the next part is to remove that down, remove a download from the list.

108
00:09:21,400 --> 00:09:28,750
So suppose if we want to remove the specific row, so we have to first select the download and then

109
00:09:28,750 --> 00:09:31,090
only we can remove the download.

110
00:09:31,090 --> 00:09:33,010
So how to get the download?

111
00:09:33,010 --> 00:09:39,850
So once the download is completed or suppose if the download is taking place so we can firstly get a

112
00:09:39,850 --> 00:09:47,140
download by selecting that specific row and then we can perform actions like removing that specific

113
00:09:47,140 --> 00:09:48,250
row from the list.

114
00:09:48,490 --> 00:09:51,190
So this is doing that only.

115
00:09:51,820 --> 00:09:59,800
So after getting a specified row and removing the download from the list, that row will be removed

116
00:09:59,800 --> 00:10:03,610
and the row count will be changed to minus one.

117
00:10:03,610 --> 00:10:10,120
So suppose initially we had three rows, we have cleared the third row, then the row count is going

118
00:10:10,120 --> 00:10:14,560
to be three minus one, which is two at the end.

119
00:10:14,860 --> 00:10:23,140
After which what's left like we have covered the getting and removing our specific row or the deleting

120
00:10:23,140 --> 00:10:23,530
part.

121
00:10:23,530 --> 00:10:27,850
We have seen now get table columns count.

122
00:10:27,850 --> 00:10:31,660
So we have like a column thing, we have eight columns.

123
00:10:31,660 --> 00:10:33,700
We have already discussed it.

124
00:10:33,700 --> 00:10:40,450
So forgetting the column count, we are using this get column count function which is going to return

125
00:10:40,450 --> 00:10:42,280
the length of the column.

126
00:10:42,820 --> 00:10:50,260
Similarly for the names we are using this string get column name function which is taking column as

127
00:10:50,260 --> 00:10:56,650
the input and going to return that specific index of the column names class.

128
00:10:56,650 --> 00:11:05,470
Suppose if we are talking about the status then this index of this column names, it will be returned

129
00:11:05,470 --> 00:11:07,570
similarly for row count.

130
00:11:07,570 --> 00:11:15,520
So we are like increasing the number of rows once we are adding a new download to the list.

131
00:11:15,520 --> 00:11:23,260
So this is going to like return the size of the row which is present in the table model at present.

132
00:11:24,280 --> 00:11:33,010
Now after getting all the things for columns now like discussing what actually happening inside each

133
00:11:33,010 --> 00:11:40,210
of the column to check what is going to like, we are using this switch case for every column.

134
00:11:40,660 --> 00:11:49,540
We have total eight cases from 0 to 7 for all the indexes of the column after which we are using this

135
00:11:49,540 --> 00:11:50,680
get through.

136
00:11:50,710 --> 00:11:58,510
So for a specific row we have to get all these eight columns like in a unique way.

137
00:11:58,510 --> 00:12:00,760
So what you are is going to return.

138
00:12:00,760 --> 00:12:03,700
So the case zero is going to return this.

139
00:12:03,880 --> 00:12:07,150
You are l for that specific row.

140
00:12:07,150 --> 00:12:09,760
Suppose you are talking about this first row.

141
00:12:09,760 --> 00:12:16,360
So if we select the first row, we are talking about the first row, then we will be returned with the

142
00:12:16,360 --> 00:12:20,770
URL, size, progress, speed and everything of this row.

143
00:12:20,920 --> 00:12:23,620
So this switch case is doing so.

144
00:12:23,620 --> 00:12:31,090
It is going to return all of the values of the column, things like whether it be you are the size,

145
00:12:31,210 --> 00:12:34,540
the progress, render, and there are data.

146
00:12:35,000 --> 00:12:38,030
But all of them like we have slowed for the download.

147
00:12:38,570 --> 00:12:40,760
We are going to return the speed.

148
00:12:40,850 --> 00:12:43,070
We are going to return the time.

149
00:12:43,070 --> 00:12:47,960
And similarly the status that whether it is completed or not.

150
00:12:48,050 --> 00:12:52,650
So all of this is coming from the Download Manager class.

151
00:12:52,670 --> 00:12:57,410
We have already talked about the status and time thing.

152
00:12:57,440 --> 00:13:06,040
Now our next concern is to notify the user that what is actually happening with that specific rule.

153
00:13:06,140 --> 00:13:13,020
So this update is called whenever a download notifies its observers of any changes.

154
00:13:13,040 --> 00:13:16,300
So we have done this in the previous part.

155
00:13:16,310 --> 00:13:23,890
Also, we have used this sort of observation observable function as an argument for the update.

156
00:13:23,900 --> 00:13:27,440
We have used it in the progress render, I think.

157
00:13:28,370 --> 00:13:28,750
Okay.

158
00:13:28,850 --> 00:13:30,890
So it was in the.

159
00:13:31,800 --> 00:13:33,930
Let us check the download manager.

160
00:13:35,050 --> 00:13:35,440
Yes.

161
00:13:35,440 --> 00:13:37,630
So we have called this update.

162
00:13:38,050 --> 00:13:46,150
Whenever there is a change, any update, then this update function is going to be called in all of

163
00:13:46,150 --> 00:13:47,110
the functions.

164
00:13:47,110 --> 00:13:54,790
Similarly, we are doing this for the download table model plus also and this is going to like return

165
00:13:54,790 --> 00:14:03,610
the index of that specific column wherever the index is mean or suppose that it is the second row and

166
00:14:03,610 --> 00:14:05,260
the fifth column.

167
00:14:05,260 --> 00:14:09,340
So we will be concerned about this average speed.

168
00:14:10,300 --> 00:14:11,140
One, two, three, four.

169
00:14:11,150 --> 00:14:18,970
Yes, we will be concerned about the average speed update of that specific URL, which we are talking

170
00:14:18,970 --> 00:14:19,450
about.

171
00:14:19,570 --> 00:14:25,360
So by far we have completed this download table functions now.

172
00:14:25,840 --> 00:14:26,380
Yes.

173
00:14:26,380 --> 00:14:29,560
So that download table model class is completed.

174
00:14:29,590 --> 00:14:34,750
Now the last part is going to cover everything which is left.

175
00:14:35,020 --> 00:14:44,260
We are going to conclude everything about this code execution part in the next video and it is going

176
00:14:44,260 --> 00:14:46,870
to cover about the speed time.

177
00:14:47,140 --> 00:14:54,640
Like you can see that everything which is showing a red underline will be vanished after the creation

178
00:14:54,640 --> 00:14:57,250
of that download class.

179
00:14:57,250 --> 00:15:08,440
So it will be covering the status, time, speed and the size functionalities and we will be looking

180
00:15:08,440 --> 00:15:10,750
up to it in the next part.

181
00:15:10,750 --> 00:15:12,250
So see you in the next.
