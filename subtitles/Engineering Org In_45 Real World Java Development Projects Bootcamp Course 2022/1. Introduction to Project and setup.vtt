WEBVTT
1
00:00:02.290 --> 00:00:04.690
Java email administration.

2
00:00:05.320 --> 00:00:10.090
In this project we are going to learn basic Java project focused on.

3
00:00:11.180 --> 00:00:14.450
Object oriented design in real world application.

4
00:00:15.080 --> 00:00:23.300
So this is an email administration project where all the email details like creating mail using first

5
00:00:23.300 --> 00:00:30.980
name and last name, then giving the company department like related to that company department, then

6
00:00:30.980 --> 00:00:36.590
creating some system generated password assigning to that particular email.

7
00:00:36.890 --> 00:00:41.150
We are going to create here email administration project likewise that.

8
00:00:41.450 --> 00:00:49.190
So in this project we are going to learn some basic concepts of Java, object oriented design of Java,

9
00:00:49.310 --> 00:00:57.080
then abstraction of Java, like how we can secure our password and everything, like abstract that password.

10
00:00:57.830 --> 00:01:07.520
Also we are going to learn how we can execute or create some files in Java itself, like file handling

11
00:01:07.520 --> 00:01:08.210
in the Java.

12
00:01:08.690 --> 00:01:15.980
So after creating all the details like email their password, first name, last name, we are going

13
00:01:15.980 --> 00:01:21.710
to store that particular data or information in a text file.

14
00:01:22.630 --> 00:01:26.560
So let's see how we can proceed with this project.

15
00:01:26.830 --> 00:01:31.430
So first we are going to learn or we are going to see our project aim.

16
00:01:31.450 --> 00:01:37.050
So consider you are an I.T. support administrator, administrator or something like that.

17
00:01:37.060 --> 00:01:45.190
Your post or what we are going to do is your your task is creating email accounts for new hires or new

18
00:01:45.190 --> 00:01:45.910
employees.

19
00:01:46.390 --> 00:01:51.010
For that purpose, you need first name and last name only from the user.

20
00:01:51.010 --> 00:01:54.400
Or we can say for the new employees.

21
00:01:55.260 --> 00:01:57.390
So using that you are going to create.

22
00:01:58.270 --> 00:02:01.060
Email your email with another details.

23
00:02:01.900 --> 00:02:09.160
So steps of our development or for this project is first is project set up how we are going to set up

24
00:02:09.160 --> 00:02:13.900
all things in this basic fundamental concepts in Java.

25
00:02:14.620 --> 00:02:22.420
We are going to use Java code basically here accessing classes, methods or all the abstractions of

26
00:02:22.420 --> 00:02:24.070
in classes in Java.

27
00:02:25.490 --> 00:02:32.690
Here we are going to see basic concepts creating objects, classes, methods, file handling, java.

28
00:02:33.560 --> 00:02:38.900
Basically we are going to create one text file, txt file and we are going to store all the data in

29
00:02:38.900 --> 00:02:41.690
it and we are going to retrieve that information also.

30
00:02:42.520 --> 00:02:49.870
Creating a single execution file of just like why in this project we are going to create multiple classes

31
00:02:49.870 --> 00:02:55.780
or Java files, but after that we are compiling it into the single executing jar file.

32
00:02:56.660 --> 00:03:00.170
So this is our basic project or steps of development.

33
00:03:00.770 --> 00:03:02.240
We are going to use here.

34
00:03:03.570 --> 00:03:10.980
So our application requirements so we can see how we can proceed with our requirements.

35
00:03:11.430 --> 00:03:14.730
First, we are going to need a one JDK.

36
00:03:14.910 --> 00:03:17.940
I'm going to explain that what you mean by JDK in Java.

37
00:03:18.090 --> 00:03:22.920
And second is ID ID basically integrated development environment for Java.

38
00:03:23.280 --> 00:03:26.700
So there are multiple IDs in this field.

39
00:03:27.000 --> 00:03:30.480
We are going to see how we can use that for our application.

40
00:03:31.330 --> 00:03:32.170
First is.

41
00:03:33.170 --> 00:03:38.360
Our basic thing is generating an email with syntax like first name.

42
00:03:39.710 --> 00:03:42.890
Last name added it department.

43
00:03:42.890 --> 00:03:46.130
We are going to provide dot company dot com.

44
00:03:46.220 --> 00:03:53.990
So here first name last name last name and department is given from the user or we can say new hire

45
00:03:53.990 --> 00:03:54.440
from.

46
00:03:54.950 --> 00:04:01.730
So for the department of department we are I'm considering here sales, development and accounting here.

47
00:04:01.940 --> 00:04:09.560
Or if none is given from the new employee, then that blank will be there in email.

48
00:04:10.330 --> 00:04:12.760
Generate random string for the password.

49
00:04:14.080 --> 00:04:18.100
And so a third aim of that application.

50
00:04:19.020 --> 00:04:22.620
Applications should have some set methods to change the password.

51
00:04:23.490 --> 00:04:25.770
Then set the mailbox capacity.

52
00:04:26.340 --> 00:04:31.720
Basically the mail capacity and the define the alternate email address.

53
00:04:31.740 --> 00:04:36.000
This is also going from the user only or we can say new higher only.

54
00:04:37.220 --> 00:04:44.300
It should have some great methods to display the name, email and the mailbox capacity when we are going

55
00:04:44.300 --> 00:04:46.790
to track that email address also.

56
00:04:47.150 --> 00:04:54.980
And it should have some file handling methods or we can say of file handling methods to store some data

57
00:04:55.220 --> 00:05:00.140
in the file so it will store data and retrieve data also.

58
00:05:00.530 --> 00:05:07.130
So this is our application requirements and here we are going to use JDK, basically Java Development

59
00:05:07.130 --> 00:05:12.200
Kit and ID integrated development environment to tools we required.

60
00:05:14.610 --> 00:05:18.690
So as I mentioned, we needed some ID.

61
00:05:18.720 --> 00:05:23.700
So for the Java development, I am going to use your intel idea.

62
00:05:23.700 --> 00:05:28.500
So we are going to use integer area as our ID for the Java development.

63
00:05:28.650 --> 00:05:34.800
So in this project we are going to build our whole project using this ID.

64
00:05:35.550 --> 00:05:45.270
For the JDK or Java, we are going to use your Java SC, which is Standard Edition 16 generation JDK

65
00:05:45.270 --> 00:05:46.770
for the Java development.

66
00:05:46.770 --> 00:05:52.410
So from these websites you can download it and you can use it, utilize it.

67
00:05:52.980 --> 00:05:58.560
So for this, you need to download as per your system requirements.

68
00:05:58.830 --> 00:06:01.650
There are two versions of this ID Ultimate and community.

69
00:06:01.650 --> 00:06:09.300
You can download it and for Java SC you have to download JDK here and you have to install it once you

70
00:06:09.300 --> 00:06:10.140
installed it.

71
00:06:10.520 --> 00:06:15.660
Its ID will automatically detect the path of that JDK.

72
00:06:17.420 --> 00:06:21.260
So this is about all your tools we required.

73
00:06:22.620 --> 00:06:27.570
So first let us see what you mean by JID JV team and JDK.

74
00:06:28.110 --> 00:06:35.520
So just downloaded the JDK, Java SC, Virgin Standard Edition version 16 we downloaded is basically

75
00:06:35.520 --> 00:06:38.940
JDK, so JDK contents and JVM.

76
00:06:38.940 --> 00:06:41.580
So JVM is the smallest part of JDK.

77
00:06:42.510 --> 00:06:46.890
So Gvm is the Java virtual machine, as the name suggests.

78
00:06:47.340 --> 00:06:48.500
No physically exists.

79
00:06:48.510 --> 00:06:51.420
It's not physically exist on your system.

80
00:06:51.720 --> 00:07:00.450
Its virtual machine, but its main name is or a main function is, which provides the runtime environment

81
00:07:00.450 --> 00:07:03.180
in which Java bytecode executes.

82
00:07:04.060 --> 00:07:11.710
So what is meant by bytecode is basically you are creating some Java syntax or its higher level language

83
00:07:11.710 --> 00:07:16.750
you are writing but machine knows the lower level language 1010 machine level language.

84
00:07:16.750 --> 00:07:21.340
So it converts that byte code and executes that bytecode.

85
00:07:22.200 --> 00:07:26.820
It also run programs in other languages but compiled in Java.

86
00:07:27.240 --> 00:07:32.250
So basically if you created some other languages, I mean by Kotlin, awesome.

87
00:07:32.820 --> 00:07:36.150
These are the supports this supports the game also.

88
00:07:36.960 --> 00:07:41.370
So what is the main functions of Jamie's?

89
00:07:41.460 --> 00:07:44.520
It's loads the code, it's verifies the code.

90
00:07:44.790 --> 00:07:48.780
It executes the code and it provides the runtime environment.

91
00:07:50.130 --> 00:07:51.870
Second part is Jerry.

92
00:07:52.700 --> 00:07:54.530
Java runtime environment.

93
00:07:55.570 --> 00:07:57.520
What is the jig is?

94
00:07:58.210 --> 00:08:01.970
It is the set of tools library and some Java files.

95
00:08:01.990 --> 00:08:03.250
Java archive files.

96
00:08:04.670 --> 00:08:12.110
It's used in the Java applications programs that we are going to create and it provides the implementation

97
00:08:12.110 --> 00:08:13.040
of Java.

98
00:08:13.070 --> 00:08:20.390
It physically exists in JDK as you runtime environment is just a set of programs, protocols in JDK.

99
00:08:21.240 --> 00:08:23.580
JDK Java Development Kit.

100
00:08:23.940 --> 00:08:27.430
It contains Java GVM Java compiler.

101
00:08:27.450 --> 00:08:30.930
Java versions, basically different versions.

102
00:08:30.960 --> 00:08:34.290
All the related files and everything it contains.

103
00:08:35.180 --> 00:08:36.830
And let's see.

104
00:08:37.040 --> 00:08:39.050
What is the structure of that?

105
00:08:39.470 --> 00:08:43.430
It looks like JVM, JIRA and JDK.

106
00:08:43.460 --> 00:08:48.600
So JDK is the superclass, or we can say all the union class of JD and GM.

107
00:08:49.070 --> 00:08:51.020
So GM is the smallest part.

108
00:08:51.020 --> 00:08:53.120
Java Virtual Machine.

109
00:08:53.540 --> 00:08:58.880
Then Java runtime environment contains some set of libraries, jar files, some other files.

110
00:08:58.880 --> 00:09:01.850
Also, it contains and it contains JVM also.

111
00:09:02.800 --> 00:09:11.230
So this creates G and this is development tools contains Java files, Java compiler files, Java files

112
00:09:11.230 --> 00:09:15.490
and Java JVM all makes JDK.

113
00:09:15.490 --> 00:09:21.790
So just we downloaded the JDK, it contains the JVM, JIRA and everything.

114
00:09:22.670 --> 00:09:27.650
It will execute our Java file and it will give the desired output.

115
00:09:27.770 --> 00:09:29.900
What we are going to proceed with.

116
00:09:30.020 --> 00:09:33.050
So this is the basic concepts of JID JV.

117
00:09:33.200 --> 00:09:40.700
And now we will see how we can set up our environment or our project for our application.

118
00:09:40.700 --> 00:09:42.560
Email Administration application.

119
00:09:44.600 --> 00:09:50.420
Once you install installed our ID intelligent idea you can see this welcome screen.

120
00:09:51.640 --> 00:09:55.780
Or before that I already installed in my system.

121
00:09:55.780 --> 00:10:02.290
So before that you should set some configuration like font taste everything.

122
00:10:02.710 --> 00:10:05.380
So once this is done, you can see this screen.

123
00:10:05.620 --> 00:10:08.310
So here I am going to create new project here.

124
00:10:08.320 --> 00:10:09.190
New project.

125
00:10:14.990 --> 00:10:18.110
So it will take time to create a new project.

126
00:10:24.540 --> 00:10:34.170
So once a new project I'm going to create here, once this screen is loaded, you have to specify your

127
00:10:34.170 --> 00:10:38.730
JDK or we can say here SDK so it will automatically detect your SDK.

128
00:10:39.270 --> 00:10:41.250
Here I'm using.

129
00:10:44.020 --> 00:10:45.360
16 Virgin object.

130
00:10:45.370 --> 00:10:46.750
So I'm choosing this.

131
00:10:47.050 --> 00:10:55.240
No need to install any additional libraries like Groovy or Kotlin here or no need to specify some user

132
00:10:55.240 --> 00:10:56.740
defined libraries also.

133
00:10:57.340 --> 00:10:58.990
Just click the next.

134
00:10:59.830 --> 00:11:04.170
Or don't check this, it will create some default template.

135
00:11:04.180 --> 00:11:07.570
We don't want to create some default template here.

136
00:11:08.520 --> 00:11:09.810
Create next.

137
00:11:10.080 --> 00:11:13.500
Before that, give the project name and project location.

138
00:11:13.620 --> 00:11:18.930
So for this, I'm going to specify the project name as.

139
00:11:22.270 --> 00:11:24.160
Email application.

140
00:11:26.460 --> 00:11:30.180
You can specify your name, also project name.

141
00:11:30.180 --> 00:11:32.350
I'm going to specify email application.

142
00:11:32.370 --> 00:11:33.330
Click the finish.

143
00:11:34.300 --> 00:11:41.950
It will take time to create indexing and everything, but it will once it slow, it will show the screen

144
00:11:41.950 --> 00:11:42.490
also.

145
00:11:44.050 --> 00:11:46.630
So wait for creating a new project.

146
00:11:49.310 --> 00:11:50.420
It will take time.

147
00:12:15.120 --> 00:12:17.700
Wait for it.

148
00:12:17.710 --> 00:12:19.650
Showing the loading here, you can see.

149
00:12:19.950 --> 00:12:21.540
So wait for that.

150
00:12:21.870 --> 00:12:23.970
Scanning and indexing everything.

151
00:12:24.390 --> 00:12:28.260
It will automatically create all the folders related to our project.

152
00:12:42.790 --> 00:12:46.690
So now we are done with our setup.

153
00:12:46.930 --> 00:12:49.300
So we specify the JDK.

154
00:12:49.570 --> 00:12:51.880
Then we created our new project.

155
00:12:52.570 --> 00:12:59.680
Now you can see this is our project email application and you can see all the related files here.

156
00:12:59.710 --> 00:13:01.270
That is dot idea.

157
00:13:01.790 --> 00:13:07.150
Then folder is a main folder we are going to create here all the applications here.

158
00:13:07.360 --> 00:13:11.320
Then this is email file and all the external libraries and everything.

159
00:13:11.320 --> 00:13:15.490
So here this is only Java files we are going to use.

160
00:13:15.490 --> 00:13:19.690
So this is not at all required to see.

161
00:13:19.840 --> 00:13:22.420
And this is main file we are going to use.

162
00:13:22.420 --> 00:13:24.720
So we are done with our setup.

163
00:13:24.730 --> 00:13:28.960
Now we will see how we can proceed with our project.

164
00:13:30.900 --> 00:13:37.230
So once all this setup is done and all the things are indexed and loaded.

165
00:13:38.110 --> 00:13:40.030
Now what you are going to do is.

166
00:13:41.710 --> 00:13:43.930
Click this on.

167
00:13:44.290 --> 00:13:44.740
See?

168
00:13:44.740 --> 00:13:46.510
Right click here.

169
00:13:48.350 --> 00:13:49.730
It will take time to load.

170
00:13:50.090 --> 00:13:51.710
So just right click here.

171
00:14:04.840 --> 00:14:08.020
It will do all the options related to this.

172
00:14:09.560 --> 00:14:10.520
Click on new.

173
00:14:10.550 --> 00:14:14.570
You can see every option what we can make in this.

174
00:14:14.810 --> 00:14:22.100
So what we needed, we needed create some Java files so we need to create Java class.

175
00:14:22.100 --> 00:14:29.090
But before that, what I'm going to do is I'm creating these Java classes we are going to proceed with

176
00:14:29.120 --> 00:14:30.620
in some package.

177
00:14:30.620 --> 00:14:39.680
What is meant by package in Java is I'm going to store that specific classes in some files.

178
00:14:40.160 --> 00:14:42.110
So this is very basic project.

179
00:14:42.500 --> 00:14:46.580
In further projects, we are going to create some large projects.

180
00:14:46.580 --> 00:14:48.350
In that part.

181
00:14:48.350 --> 00:14:51.860
We need to create some different packages like in the industry.

182
00:14:51.860 --> 00:14:58.790
Also, once for the small, small requirements we can create small, small packages.

183
00:14:59.240 --> 00:15:01.160
So once package is done.

184
00:15:03.700 --> 00:15:04.710
Specify the name.

185
00:15:04.720 --> 00:15:06.970
You can see the package here.

186
00:15:06.970 --> 00:15:11.200
So I given the name has email app here for that package.

187
00:15:11.200 --> 00:15:14.410
It will create some simple folder for that classes.

188
00:15:15.650 --> 00:15:17.960
Now use this email app.

189
00:15:18.440 --> 00:15:18.740
Right.

190
00:15:18.740 --> 00:15:19.850
Click on that.

191
00:15:20.640 --> 00:15:23.280
And here I'm going to create class.

192
00:15:24.180 --> 00:15:27.090
For this, we need to create two classes.

193
00:15:27.720 --> 00:15:30.650
So what is the requirement of creating two classes?

194
00:15:30.660 --> 00:15:31.410
You will ask.

195
00:15:31.620 --> 00:15:38.970
So in one class we are going to create main method, which is basically executing method and in another

196
00:15:38.970 --> 00:15:42.600
Java file or class we are going to create.

197
00:15:43.740 --> 00:15:46.290
Or we are going to specify all our methods.

198
00:15:46.290 --> 00:15:51.870
So first let's see that method part or we can see what we are going to specify in that part.

199
00:15:51.900 --> 00:15:53.160
Let's see in that.

200
00:15:54.270 --> 00:16:04.140
So first I'm going to create Java class and in this specify name for this Java class as email, I'm

201
00:16:04.140 --> 00:16:06.060
going to give as email.

202
00:16:07.470 --> 00:16:09.270
Once it is done, it will.

203
00:16:10.440 --> 00:16:11.910
Nor that class.

204
00:16:15.740 --> 00:16:20.000
So as you can see, it will load this class for us.

205
00:16:20.980 --> 00:16:23.560
With some default structure.

206
00:16:24.780 --> 00:16:25.250
Let us see.

207
00:16:25.260 --> 00:16:26.850
What is this structure for us?

208
00:16:28.680 --> 00:16:30.710
You can hide this part also here.

209
00:16:31.020 --> 00:16:34.560
I'm going to leave this and let's see what is this?

210
00:16:34.560 --> 00:16:35.730
Basically structures.

211
00:16:36.880 --> 00:16:41.980
This is package name, email app we created under this and this is our class.

212
00:16:41.980 --> 00:16:45.820
So we are done with the primary setup of this like public class mail.

213
00:16:45.820 --> 00:16:53.380
This is the class syntax for that we will in the folder this we are going to see how we can proceed

214
00:16:53.380 --> 00:16:59.320
with our what is mean by class methods everything and we can proceed with our project in this.
