WEBVTT
1
00:00:01.380 --> 00:00:05.580
Our project is multi thread chat system using Java.

2
00:00:05.970 --> 00:00:13.650
So we are going to use your Java as a language, our primary language for creating a chat system using

3
00:00:13.650 --> 00:00:15.300
some multithreading concepts.

4
00:00:15.450 --> 00:00:19.890
So I will tell you why we are going with multi threading and each and every part and what is the multithreading

5
00:00:19.890 --> 00:00:20.760
in the Java.

6
00:00:20.970 --> 00:00:25.720
But before that, I'm going to tell some basic concepts of Java also.

7
00:00:26.160 --> 00:00:34.290
So the Java project is based on core Java Java swing for good purpose and some Java Multithreading concepts.

8
00:00:35.010 --> 00:00:38.220
I will tell you why we are going with multi trading and each and everything.

9
00:00:38.910 --> 00:00:41.700
So first this Java multi thread chat system.

10
00:00:41.700 --> 00:00:47.870
So we are going to create a simple chat system for the text and everything we are going to create.

11
00:00:47.880 --> 00:00:54.360
So this is basically text chat system only and we are going to create a Java multi trading here for

12
00:00:54.360 --> 00:00:56.820
the chat and client and server process.

13
00:00:57.030 --> 00:01:02.520
Throughout the process, I'm using client word as a user and server as a service provider.

14
00:01:02.670 --> 00:01:09.600
So remember that whenever I'm using client, it's basically means that the user of that check system

15
00:01:09.960 --> 00:01:13.680
and server is basically for the service provider of that.

16
00:01:13.680 --> 00:01:15.810
Or we can the connection for that purpose.

17
00:01:16.970 --> 00:01:22.310
So let us see what is the project aim or what is our project aim basically?

18
00:01:22.340 --> 00:01:29.090
So Project Aim is basically our developer chat application interface using using Java with two Multithreading

19
00:01:29.090 --> 00:01:37.040
concepts we are going to use here and we are going to develop a chat system with some application interface.

20
00:01:37.040 --> 00:01:38.480
Also we are going to create here.

21
00:01:39.230 --> 00:01:43.160
So these are all about how we are going to create our shared system.

22
00:01:43.400 --> 00:01:47.670
So let us see what is our basically tools we are required here.

23
00:01:47.690 --> 00:01:57.410
So first our tool is our ID, but before that, let us consider some steps of development for our project

24
00:01:57.410 --> 00:01:59.030
manner and each and everything.

25
00:01:59.210 --> 00:02:04.820
So first thing you should always remember here is.

26
00:02:05.550 --> 00:02:08.870
We are going to create your check system.

27
00:02:08.880 --> 00:02:10.440
So for that purpose.

28
00:02:11.770 --> 00:02:17.830
What we are considering here is we are going to set up our project first.

29
00:02:18.070 --> 00:02:23.190
Second is our understanding, different tools, what we are going to use here then Java.

30
00:02:23.230 --> 00:02:26.440
Basic concepts here we are going to use some.

31
00:02:27.700 --> 00:02:35.250
Or and also some knowledge of our Java swing.

32
00:02:35.260 --> 00:02:41.530
Also, you should have some Java multi trading concepts also and final step is our service edition port

33
00:02:41.530 --> 00:02:41.980
forwarding.

34
00:02:41.980 --> 00:02:44.990
So for that purpose I'm using here some systems.

35
00:02:45.010 --> 00:02:49.000
So steps are our project setup understanding different tools.

36
00:02:49.000 --> 00:02:54.850
Java Basic Concepts, Java Multithreading Java Swing Server Edition Port Forwarding.

37
00:02:54.850 --> 00:02:57.640
So these are the six steps of our project development.

38
00:02:58.880 --> 00:03:02.540
So let us see what we are going to use here or different tools.

39
00:03:04.550 --> 00:03:08.960
So application requirements Java Basic Knowledge Multithreading concepts.

40
00:03:08.960 --> 00:03:13.760
I'm going to tell, but you should know some basic concepts of Multithreading also and Java.

41
00:03:14.030 --> 00:03:18.350
I'm not telling more deep part of Java swing and each and everything I'm going to explain here.

42
00:03:18.350 --> 00:03:22.370
But you should know why we are why we are using java string here also.

43
00:03:22.760 --> 00:03:30.470
So tools required first JDK for any development you required JDK for any java development.

44
00:03:30.680 --> 00:03:32.270
Secondly, git brings IDE.

45
00:03:32.900 --> 00:03:36.230
I'm going to use here you can use community version also.

46
00:03:36.260 --> 00:03:40.570
Or if you want, you can download ultimate version also for the student purpose.

47
00:03:40.580 --> 00:03:42.100
Ultimate version is free again.

48
00:03:42.110 --> 00:03:45.890
So port forwarding and system I'm going to use your is in G rock.

49
00:03:46.160 --> 00:03:47.660
So these are the tools required.

50
00:03:47.660 --> 00:03:49.090
So these are the basic tools.

51
00:03:49.100 --> 00:03:54.470
JDK also enabled with some Java string libraries, so no need to require another libraries.

52
00:03:54.770 --> 00:04:00.020
And if you want to change your port, you will be required rock also here.

53
00:04:00.050 --> 00:04:03.620
So this is very simple port forwarding system.

54
00:04:03.620 --> 00:04:09.380
We can say if you want, you can use another also Google Cloud, also providing such systems you can

55
00:04:09.380 --> 00:04:10.090
use here.

56
00:04:10.100 --> 00:04:12.620
So these are some basic application requirements.

57
00:04:13.350 --> 00:04:17.040
So let us see first how we can set up our project.

58
00:04:18.410 --> 00:04:21.200
So or you need to create.

59
00:04:22.530 --> 00:04:26.150
Let us project here as I created already here.

60
00:04:27.710 --> 00:04:31.450
So this is my new project inside Java in your ID.

61
00:04:31.460 --> 00:04:34.440
You can see here our project and each and everything here.

62
00:04:35.960 --> 00:04:37.220
This is my chat system.

63
00:04:37.220 --> 00:04:37.910
Inside chat.

64
00:04:37.910 --> 00:04:41.060
I have some different everything.

65
00:04:41.270 --> 00:04:46.910
So first I will explain how we are going to create inside the command prompt itself and I'm going to

66
00:04:46.910 --> 00:04:48.260
some add functions.

67
00:04:48.500 --> 00:04:52.400
Later, I will create another program for you and each and everything.

68
00:04:52.700 --> 00:04:55.460
So these are how we can set up our thing.

69
00:04:55.640 --> 00:04:59.420
You just need to create a new Java project in ID.

70
00:04:59.450 --> 00:05:02.510
After clicking the new project, it will show some different options.

71
00:05:02.510 --> 00:05:04.640
Java EE, Java Web Spring.

72
00:05:04.670 --> 00:05:08.540
So you should remember you have to use only Java here java.

73
00:05:08.540 --> 00:05:10.250
Then specify your JDK.

74
00:05:10.430 --> 00:05:15.680
IDE will automatically found that your system loaded JDK and each and every tree.

75
00:05:15.770 --> 00:05:19.190
So if you don't have an install you have optional.

76
00:05:19.190 --> 00:05:20.990
So there to install JDK.

77
00:05:21.320 --> 00:05:29.060
So download that JDK from IDE itself or you can externally download from Google Chrome also or any browser.

78
00:05:29.270 --> 00:05:34.700
Then after doing these stuffs you need to create your project.

79
00:05:34.730 --> 00:05:41.870
Mention the meaningful name for that purpose and process testing with the chat system and these folders

80
00:05:41.870 --> 00:05:42.410
are created.

81
00:05:42.410 --> 00:05:46.070
SC is basically our source folder where we are going to create here.

82
00:05:46.100 --> 00:05:53.120
So we haven't mentioned the I told you, we haven't mentioned any libraries here, but as you can see,

83
00:05:53.120 --> 00:06:02.960
some libraries are already inside this all all libraries with some important thing or external libraries,

84
00:06:02.960 --> 00:06:03.740
as I told you.

85
00:06:03.740 --> 00:06:05.090
And these are nothing.

86
00:06:05.330 --> 00:06:07.580
So these are all how we can consider.

87
00:06:07.710 --> 00:06:11.090
So before that, I will tell you some basic knowledge of Java.

88
00:06:12.730 --> 00:06:13.970
So Java basics.

89
00:06:13.990 --> 00:06:18.670
So Java consists of three basic structure order.

90
00:06:18.670 --> 00:06:23.170
We can say What is the Java structure other than Python or C, C++?

91
00:06:23.170 --> 00:06:26.140
Java is very much an independent language.

92
00:06:26.950 --> 00:06:34.120
So why it is machine independent because of these three structures Gvm, GUI and JDK.

93
00:06:34.600 --> 00:06:37.720
So JVM is basically Java virtual machine.

94
00:06:38.620 --> 00:06:44.440
So if you know the virtual machine, Java virtual machine is also similar like that, it is not physically

95
00:06:44.440 --> 00:06:45.100
exist.

96
00:06:45.490 --> 00:06:49.240
Second thing is provide the runtime environment with the Java bytecode.

97
00:06:49.240 --> 00:06:50.110
So.

98
00:06:51.090 --> 00:06:57.150
This is the beautiful thing of Java is for the client system, purpose or one system.

99
00:06:57.560 --> 00:07:05.580
Like consider three systems, three computers with having separate or we can say distinct operating

100
00:07:05.580 --> 00:07:11.150
systems like one is using Windows, one is using Linux and another is using Mac.

101
00:07:11.160 --> 00:07:15.960
So these are three different OSes, but Java is machine independent language.

102
00:07:15.960 --> 00:07:22.260
So three are the clients or we can see three are the users of our chat system.

103
00:07:22.380 --> 00:07:28.020
If they have some Java platform inside their system, they can run their client.

104
00:07:28.020 --> 00:07:29.970
So it is machine independent.

105
00:07:30.300 --> 00:07:36.660
Likewise, the formal chat applications available in the market are machine independent.

106
00:07:36.660 --> 00:07:43.920
They can run on Windows, some are running on Linux also, some are running on Mac also otherwise some

107
00:07:43.920 --> 00:07:46.110
are running on Android things also.

108
00:07:46.110 --> 00:07:48.360
So these are the machine independent things.

109
00:07:49.280 --> 00:07:51.260
Similarly, we are going to create like that.

110
00:07:52.960 --> 00:07:58.300
It is also run programs in other languages but compiled in Java basically JVM remember that.

111
00:07:58.900 --> 00:08:08.350
So four are the main purposes of Gvm load a byte code or Lotus Code verifies the code, executes the

112
00:08:08.350 --> 00:08:10.360
codes and provide the runtime environment.

113
00:08:10.420 --> 00:08:12.790
So these are the basic concepts of JVM.

114
00:08:13.120 --> 00:08:19.120
JIT is Java runtime environment, which is considering some search tools, libraries, Java files,

115
00:08:19.120 --> 00:08:19.980
etc., etc..

116
00:08:19.990 --> 00:08:22.750
So as I told you inside id e.

117
00:08:23.630 --> 00:08:25.130
So these are external libraries.

118
00:08:25.130 --> 00:08:31.220
These are the parts of all our JIT Java runtime environment because these are the runtime environments

119
00:08:31.220 --> 00:08:33.800
it will call while runtime environment.

120
00:08:35.730 --> 00:08:39.540
So last thing is JDK Java Development Kit.

121
00:08:39.630 --> 00:08:44.040
It consists contents or it's made of of Java Plus JVM.

122
00:08:44.130 --> 00:08:46.420
So these are both similar.

123
00:08:46.830 --> 00:08:48.150
We can say runtime environment.

124
00:08:48.150 --> 00:08:53.490
And as I told you earlier, it contains that also it consists of Java.

125
00:08:53.520 --> 00:08:55.650
Java is basically Java compiler.

126
00:08:55.830 --> 00:09:03.000
So why we need compiler, we are writing Simula Java, but we don't know the machine language which

127
00:09:03.000 --> 00:09:05.210
is basically zero one or bytecode, etc..

128
00:09:05.220 --> 00:09:10.860
So for that purpose, compiler is needed, which is converting all the Java program in machine level.

129
00:09:11.190 --> 00:09:16.710
So Java or Java compiler is basically part of JDK Java development kit.

130
00:09:17.070 --> 00:09:23.760
So just you downloaded the JDK from Internet from Oracle website, you are downloading or you are not

131
00:09:23.760 --> 00:09:29.730
downloading git your JVM, you downloaded the JDK, which is basically whole Java package we can say

132
00:09:30.120 --> 00:09:31.670
and you install that part.

133
00:09:31.680 --> 00:09:38.340
So I'm using here 16th version of JDK for such purpose, but you can use any JDK here.

134
00:09:38.640 --> 00:09:41.460
So no special JDK is required for this project.

135
00:09:41.460 --> 00:09:45.390
So this is the basic JVM, JDK, Java, basic structure.

136
00:09:45.390 --> 00:09:52.350
So why I'm telling this again and again, because if you say I'm using your Windows system for the project

137
00:09:52.350 --> 00:09:57.490
development, if you want, you can use your another system also for this project development.

138
00:09:57.510 --> 00:10:00.720
So Java is basically machine independent.

139
00:10:01.440 --> 00:10:04.710
So this is the basic structure of JDK, Git and JVM.

140
00:10:05.380 --> 00:10:12.790
So Gvm is presenting as an oval shape because this is consistent a good file.

141
00:10:13.120 --> 00:10:16.290
So set libraries, jar files and some other files.

142
00:10:16.300 --> 00:10:19.870
Also documentation also part here, consistent guide.

143
00:10:19.900 --> 00:10:21.910
So it makes a journey.

144
00:10:22.180 --> 00:10:29.970
But while developing a JDK, Giri JVM plus some Java files, what we can see some other documentation

145
00:10:29.980 --> 00:10:30.520
spots.

146
00:10:30.700 --> 00:10:31.450
Each and everything.

147
00:10:31.450 --> 00:10:32.300
Read me files also.

148
00:10:32.300 --> 00:10:33.550
And they're in Java.

149
00:10:33.760 --> 00:10:41.080
So these are Java compiler is very important here inside the JDK and it makes a whole JDK.

150
00:10:41.080 --> 00:10:44.260
So JVM plus makes JDK.

151
00:10:45.810 --> 00:10:52.860
So Java is purely based on methods and classes, if you remember, or if you know about C or you can

152
00:10:52.860 --> 00:10:59.160
say Python it is are not like methods in classes or in Python or C.

153
00:10:59.220 --> 00:11:04.580
Basically there are classes, but it's not required that you should use there again and again.

154
00:11:04.590 --> 00:11:11.790
But inside a Java, everything in Java is associated with classes, objects and methods with attributes

155
00:11:11.790 --> 00:11:12.450
and etc..

156
00:11:12.450 --> 00:11:16.230
So starting off Java is basically methods and classes.

157
00:11:16.230 --> 00:11:22.770
So usefulness of this is you can easily create object oriented programming concepts inside Java and

158
00:11:22.770 --> 00:11:26.190
we are going to use some object oriented programming concepts also here.

159
00:11:26.490 --> 00:11:33.090
So what is object oriented is basically just create a class, create the object and use that object

160
00:11:33.090 --> 00:11:33.900
again and again.

161
00:11:33.990 --> 00:11:40.950
So no need to require create such a methods or create such classes again and again.

162
00:11:40.950 --> 00:11:44.040
Like you have to check you order an even number.

163
00:11:45.340 --> 00:11:46.510
400 times.

164
00:11:46.510 --> 00:11:55.690
So what you can do, you can check such numbers again and again 400 times or what you can do.

165
00:11:55.720 --> 00:12:02.620
You can create a method to pass that number inside that and just checking that number with the same

166
00:12:02.620 --> 00:12:04.180
logic for even an art.

167
00:12:04.300 --> 00:12:08.310
And you can use such a method again and again.

168
00:12:08.320 --> 00:12:17.080
So what is usefulness of that is you can check that method also, and it's very usable less it's very

169
00:12:17.260 --> 00:12:19.990
less time, complex complexity.

170
00:12:19.990 --> 00:12:21.730
It has a very less time complexity.

171
00:12:22.000 --> 00:12:25.240
Also, it takes very less space in your system.

172
00:12:25.390 --> 00:12:32.260
But very important thing is thing is while debugging and managing that, it will be very useful.

173
00:12:32.590 --> 00:12:34.600
So what is Java class methods?

174
00:12:35.600 --> 00:12:37.580
I'm explaining the classes basically.

175
00:12:37.580 --> 00:12:43.670
First in real life, consider a car is an object and car has a such attributes or different attributes

176
00:12:43.670 --> 00:12:50.420
such as weight, color, etc. and there are some methods you break are some methods.

177
00:12:50.630 --> 00:12:52.340
So God is an object.

178
00:12:52.610 --> 00:12:54.260
You can create a class for that.

179
00:12:54.290 --> 00:13:00.440
You can pass the attributes like weight and color and some methods like dry, you break, etc. So basically

180
00:13:00.440 --> 00:13:07.790
classes are like object constructor, which is basically constructor of object, which is a blueprint.

181
00:13:07.790 --> 00:13:10.760
Or we can say blueprint of our code or object.

182
00:13:11.780 --> 00:13:19.060
An object in Java is basically to call classes or execute particular classes without object.

183
00:13:19.070 --> 00:13:25.490
You cannot use that class at all if you are using some different part, like there are some conditions

184
00:13:25.490 --> 00:13:27.820
for using classes and objects.

185
00:13:27.830 --> 00:13:32.210
I will tell you in a letter, but object is called an instance of class.

186
00:13:32.660 --> 00:13:36.740
So without object we cannot call the class and or we cannot use that class.

187
00:13:37.360 --> 00:13:41.140
Methods is basically methods are declared within the classes.

188
00:13:42.180 --> 00:13:44.840
It contains code of particular functions in classes.

189
00:13:44.850 --> 00:13:46.590
You cannot specify the all the codes.

190
00:13:46.590 --> 00:13:50.550
You have to create methods for that purpose and you have to execute that part.

191
00:13:50.700 --> 00:14:01.050
So this is all about methods and methods contain some written values, specify then also object of classes

192
00:14:01.050 --> 00:14:04.970
created for that purpose, and we can use that basically.

193
00:14:04.980 --> 00:14:11.310
So what is the basic thing is classes is a hierarchy and it consists the method for calling the classes

194
00:14:11.310 --> 00:14:15.720
you need to create object and using that object you can use that methods.

195
00:14:16.620 --> 00:14:19.800
Syntax is very easy to code that purpose.

196
00:14:20.250 --> 00:14:27.720
Remember, if you know how to print some statements in Java or etc., you remember that you have to

197
00:14:27.720 --> 00:14:30.510
specify public static void main and inside that.

198
00:14:30.510 --> 00:14:32.160
So it is again a method.

199
00:14:32.940 --> 00:14:40.170
Static method main method is a default method in a java to run or build whole code or project.

200
00:14:40.170 --> 00:14:42.570
Other than that you cannot use any part.

201
00:14:42.570 --> 00:14:51.210
So while running any class, any method, you should invoke in the main method always, which is basically

202
00:14:51.810 --> 00:14:54.540
public static void main method inside Java.

203
00:14:54.810 --> 00:14:57.510
So this is all about Java methods and classes.

204
00:14:58.500 --> 00:15:06.060
So before going in further, let us create three Java classes here.

205
00:15:06.390 --> 00:15:09.740
When is our server?

206
00:15:09.750 --> 00:15:12.330
When is our client and when is our message?

207
00:15:12.480 --> 00:15:17.940
So for that purpose, what you are going to do is click here, right click here and start C on RC.

208
00:15:18.600 --> 00:15:20.910
So sometimes it will take time to load.

209
00:15:22.990 --> 00:15:28.720
So what I'm going to do is I'm going to create your three files, Java files.

210
00:15:28.960 --> 00:15:33.790
Click right, click on insert, see, go to new and create a Java class.

211
00:15:34.060 --> 00:15:36.430
So I'm mentioning is there is server.

212
00:15:38.990 --> 00:15:44.660
So it will definitely take everything and it will create some default things here.

213
00:15:44.660 --> 00:15:47.990
As you can see, public class server already created.

214
00:15:52.150 --> 00:15:59.110
So similarly, what I'm going to do is I'm going to mention here is as a client, which is another class,

215
00:15:59.620 --> 00:16:06.520
and what I'm mentioning here is a new name or a chat message because.

216
00:16:09.200 --> 00:16:10.010
I want to.

217
00:16:10.970 --> 00:16:14.660
Create a separate method to pass that chat message and etc..

218
00:16:14.690 --> 00:16:17.840
So these are three basic structures we are going to use here.

219
00:16:17.840 --> 00:16:20.210
So these are three classes we are going to use here.

220
00:16:20.210 --> 00:16:23.720
In the next part, I'm going to tell you how we can proceed with this part.
