WEBVTT
1
00:00:01.700 --> 00:00:08.180
So in this video we will be talking about the sign of Java class, so which will help us to create a

2
00:00:08.180 --> 00:00:11.270
new account for the customers.

3
00:00:12.050 --> 00:00:14.300
So here is the package bank.

4
00:00:14.480 --> 00:00:17.640
This signup class is defined inside the package bank.

5
00:00:17.660 --> 00:00:24.950
We have imported the necessary package like Java JWT for the graphical user interface Java DOT event

6
00:00:24.950 --> 00:00:28.670
for performing events on buttons or menu items.

7
00:00:28.670 --> 00:00:35.690
Then Java Docstring, which is a modified version of AWG package java dot dot asterisk, which will

8
00:00:35.690 --> 00:00:38.400
help us to stabilize a connection with the database.

9
00:00:38.420 --> 00:00:41.890
Then this package is provided by the library.

10
00:00:41.900 --> 00:00:47.270
This library, which we have, which is a jar file which we have talked about in our discussion of the

11
00:00:47.270 --> 00:00:48.530
database and libraries.

12
00:00:48.530 --> 00:00:52.870
And here is the another file, which is a huge utility to start.

13
00:00:52.880 --> 00:00:58.190
That's the package we have imported after that inside the public class sign up, which is extending

14
00:00:58.370 --> 00:01:00.020
frame and accent listener class.

15
00:01:01.290 --> 00:01:03.060
We have started the definition of it.

16
00:01:03.180 --> 00:01:06.090
Inside the class we have defined labels.

17
00:01:06.090 --> 00:01:12.900
There are 14 labels and seven text fields and five radio buttons and there is a single button.

18
00:01:12.930 --> 00:01:16.800
B Then there is a date chooser object.

19
00:01:16.950 --> 00:01:24.600
After that, we have defined the random array and a new random instance, and the long first for this

20
00:01:24.930 --> 00:01:32.580
line or calculation will be generating a long type of number instance as first, fourth and is inside

21
00:01:32.580 --> 00:01:39.900
the string first we will be matched dot absolute method will be calculating only the first, for instance,

22
00:01:39.900 --> 00:01:42.840
which will be stored in this long variable.

23
00:01:43.350 --> 00:01:48.150
After that there is the we have defined the non parameter constructor for the signup class.

24
00:01:49.670 --> 00:01:53.090
Set the title as a new application, a new account application form.

25
00:01:53.090 --> 00:01:57.020
So this will be the starting page for any new account application form.

26
00:01:57.050 --> 00:02:04.430
After that, we have defined our restored image in these three lines, bypassing first the argument

27
00:02:04.430 --> 00:02:08.750
or location of that image, and after that is scaling the size and.

28
00:02:10.550 --> 00:02:11.720
Size of the image.

29
00:02:11.720 --> 00:02:18.980
After that there is the image icon three inside which we have stored the image object title and inside

30
00:02:18.980 --> 00:02:22.760
the label we have stored the image.

31
00:02:24.380 --> 00:02:26.480
So that label will hold that image.

32
00:02:26.660 --> 00:02:31.430
After that, we have set the bound for the image that is location 20, comma zero and it size is 100,

33
00:02:31.430 --> 00:02:34.160
cross hundred and adding that label to our frame.

34
00:02:34.280 --> 00:02:39.980
After that there is a label new J label application form number plus first.

35
00:02:40.190 --> 00:02:42.500
So this is the application form number.

36
00:02:42.500 --> 00:02:47.810
So this first variable will be generating the random application form form number.

37
00:02:47.810 --> 00:02:53.240
So inside the string first we have installed the dot absolute of this first for variable.

38
00:02:53.240 --> 00:02:59.300
So that first will be calculated for this purpose to generate a random application number.

39
00:02:59.420 --> 00:03:05.450
After that we have set font that particular label, which font family is railway font type is bold and

40
00:03:05.450 --> 00:03:06.770
font size is 38.

41
00:03:07.130 --> 00:03:10.400
After that we have defined the label page one personal details.

42
00:03:10.400 --> 00:03:16.160
So that will this will be the page one section or which will include the personal details.

43
00:03:16.160 --> 00:03:22.250
And then we have set the font for it is for family, same railway type is same mold and it size is a

44
00:03:22.250 --> 00:03:23.150
little bit smaller.

45
00:03:23.150 --> 00:03:24.260
That is 22.

46
00:03:25.590 --> 00:03:27.750
After that there is an internal fields.

47
00:03:27.870 --> 00:03:29.490
The label first is a name.

48
00:03:29.490 --> 00:03:34.200
So for the name L three, we have set the font as railway font and 20.

49
00:03:34.770 --> 00:03:43.050
After that there is the father's name label and the same there is the same font type family and size

50
00:03:43.050 --> 00:03:44.100
we have defined for it.

51
00:03:44.280 --> 00:03:49.740
Font type Davis Size is 20 and it is of bold type.

52
00:03:50.730 --> 00:03:53.730
Similarly, we have defined a label for the date of birth as well.

53
00:03:54.150 --> 00:03:57.840
The font properties are same for this label as well.

54
00:03:58.520 --> 00:04:03.750
Further, there is a label for the gender with the same font properties.

55
00:04:04.080 --> 00:04:09.330
After that, there is a label email address which also have the same font properties.

56
00:04:10.800 --> 00:04:16.260
Then there is a label for the marital status which will hold the status of marriage of the particular

57
00:04:16.260 --> 00:04:17.130
account holder.

58
00:04:18.800 --> 00:04:21.110
With having the same foreign properties as well.

59
00:04:22.170 --> 00:04:25.350
After that the address which will also have the same property.

60
00:04:25.440 --> 00:04:30.630
Then there is a label for the city to enter the city which will also have the same font properties they'll

61
00:04:30.630 --> 00:04:30.810
be.

62
00:04:30.810 --> 00:04:33.100
Font type is bold and font size is 20.

63
00:04:33.120 --> 00:04:37.590
Then there's another label labelled as pin code, which will also have the same font property.

64
00:04:37.620 --> 00:04:42.390
Similarly, there is a label labeled as a state which will have the same four font property.

65
00:04:42.390 --> 00:04:44.940
They'll be type of bold and sizes 20.

66
00:04:45.030 --> 00:04:52.200
Then there is a font labeled as date, which in this the font size is a little bit smaller from the

67
00:04:52.200 --> 00:04:53.820
20 it's moved to 14.

68
00:04:53.850 --> 00:04:55.800
After that, there is a label month.

69
00:04:57.210 --> 00:04:59.160
It's the font size is 14.

70
00:04:59.160 --> 00:05:01.260
Also font type and family same.

71
00:05:01.410 --> 00:05:04.890
Then there is a label here whose font size is also 14.

72
00:05:06.600 --> 00:05:13.440
Now we have defined the text field with respect to text fields to enter the details inside these labels.

73
00:05:13.440 --> 00:05:20.880
So these are the text fields here for text field whose font type is the font type is bold and its font

74
00:05:21.060 --> 00:05:22.260
size is 14.

75
00:05:22.260 --> 00:05:29.100
The similar font size is for the next text fields as well to two T 3 to 4, t five and t six.

76
00:05:29.100 --> 00:05:30.540
These are seven.

77
00:05:30.540 --> 00:05:33.060
All the text field will have the similar font size.

78
00:05:33.390 --> 00:05:41.520
After that we have a defined three button that is next button, which will move us to the next signup

79
00:05:41.520 --> 00:05:47.850
page, which will be the page second for the application form, which will contain more information

80
00:05:47.850 --> 00:05:49.560
about the account holder.

81
00:05:49.560 --> 00:05:52.470
So we have set the font detail for that button.

82
00:05:52.470 --> 00:05:54.840
Background color has black and foreground colors.

83
00:05:54.840 --> 00:05:55.890
Fight for the button.

84
00:05:55.890 --> 00:06:01.740
Then there is a we have defined the radio buttons are one which will contain mail its setting, its

85
00:06:01.740 --> 00:06:03.810
font and background color as white.

86
00:06:05.670 --> 00:06:10.770
Then there are two radio buttons female setting its fonts and background color as white.

87
00:06:10.890 --> 00:06:15.000
After that, there is a button group group named as group gender.

88
00:06:15.000 --> 00:06:20.940
And inside the group gender button group, we have added both of these radio buttons and there is a

89
00:06:20.940 --> 00:06:22.950
radio button and there are three.

90
00:06:22.980 --> 00:06:29.400
Mary That's for the marital status setting font for it and set the background color as white.

91
00:06:29.580 --> 00:06:37.140
After that, there is a radio button labeled as unmarried and setting foreground, font type, family

92
00:06:37.290 --> 00:06:39.630
size and then foreground background color for that.

93
00:06:40.110 --> 00:06:42.300
And there is another label as other.

94
00:06:42.540 --> 00:06:49.770
So these are the three labels and we have created another button group, group status and added all

95
00:06:49.770 --> 00:06:54.060
of these three radio buttons inside that group status, button group.

96
00:06:55.580 --> 00:07:01.550
Then we have defined the date chooser and set the foreground color by passing the RGV values and we

97
00:07:01.550 --> 00:07:07.210
have set the bound for it to fix this location and size and added that user to our frame.

98
00:07:07.220 --> 00:07:09.950
Then we have defined the layout as well.

99
00:07:09.980 --> 00:07:13.730
After that we have defined here location of all the labels.

100
00:07:13.730 --> 00:07:19.040
So this is the location of label one location and size as well.

101
00:07:19.040 --> 00:07:20.190
Added that to our frame.

102
00:07:20.210 --> 00:07:24.800
Similarly for the alto l3l for l five for everything.

103
00:07:24.800 --> 00:07:28.580
Then we have also set the location for the date chooser as well.

104
00:07:29.000 --> 00:07:36.950
After that we have defined for the remaining labels and radio buttons, text fields, everything.

105
00:07:37.160 --> 00:07:44.390
So in the in these lines we have just defined the location and size for every text field label, radio

106
00:07:44.420 --> 00:07:47.000
buttons, whatever the elements we have.

107
00:07:49.330 --> 00:07:49.990
After that.

108
00:07:49.990 --> 00:07:55.990
From here we have added the action listener to the button because button must have handled some events

109
00:07:55.990 --> 00:08:00.010
and then we have defined the background color of the complete window as white.

110
00:08:00.100 --> 00:08:06.370
After that, we have set the size of the frame as 850, comma, 800, and then the location of the frame

111
00:08:06.370 --> 00:08:11.170
as 500, comma 120 set the visibility of the frame as two.

112
00:08:11.350 --> 00:08:15.430
After that, what we have did is here defined the action from the event.

113
00:08:15.520 --> 00:08:21.850
So this is the action performed method and which is taking an action event object a as argument and

114
00:08:21.850 --> 00:08:23.560
inside the string form number.

115
00:08:23.560 --> 00:08:24.910
So a string form number.

116
00:08:24.910 --> 00:08:30.550
We have stored the value of the string first because at the starting of it we have shown a headline

117
00:08:30.550 --> 00:08:35.770
like application form number and after that we have added the value of the first.

118
00:08:35.770 --> 00:08:37.990
So first will be the form number value.

119
00:08:38.020 --> 00:08:40.690
After that there is a name to even get text.

120
00:08:40.690 --> 00:08:45.250
So from the text field, when we have fetched the name from the text field, we have as the father name

121
00:08:45.250 --> 00:08:50.380
from the date chooser method, we have fetched the date of birth and from the gender.

122
00:08:50.380 --> 00:08:52.000
We have first passed this null.

123
00:08:52.030 --> 00:08:53.620
Now for the gender we have.

124
00:08:53.620 --> 00:08:54.880
What we had did is.

125
00:08:56.200 --> 00:08:59.780
If Radio Button one is selected, then we will set gender to male.

126
00:08:59.800 --> 00:09:06.010
If Radio Button two is selected, then we will fix the gender value as female and for the email we have,

127
00:09:06.010 --> 00:09:08.620
fetch the detail from that 33 text field.

128
00:09:08.920 --> 00:09:11.530
Then we have set the marital status as well.

129
00:09:11.620 --> 00:09:13.930
After that, we have executed a statement.

130
00:09:13.930 --> 00:09:16.650
If our three selected then marital status is married.

131
00:09:16.660 --> 00:09:19.700
If our four is selected, then marital status is unmarried.

132
00:09:19.720 --> 00:09:22.810
If our five is selected, then marital status is other.

133
00:09:23.290 --> 00:09:28.690
After that, inside the string address, we have passed the DD four from the details from the full text

134
00:09:28.690 --> 00:09:29.050
field.

135
00:09:29.080 --> 00:09:33.910
Similarly in the city from t five pin code from t six and a state from d seven.

136
00:09:35.790 --> 00:09:41.130
Now we what we have created is a created a try against block and inside the tribe.

137
00:09:41.460 --> 00:09:45.900
If things start get sick get taxed equals null.

138
00:09:45.900 --> 00:09:53.370
So if the value of the six text field is null, then we will show the details that fill that equal all

139
00:09:53.370 --> 00:09:54.630
the required fields.

140
00:09:54.630 --> 00:09:56.250
And otherwise we will.

141
00:09:56.280 --> 00:09:59.970
What we will do is create a connection object of our common class.

142
00:09:59.970 --> 00:10:02.460
And then we have created a query.

143
00:10:04.000 --> 00:10:04.540
A string.

144
00:10:04.960 --> 00:10:10.000
Q One which inside which we have written insert into sign up values.

145
00:10:10.000 --> 00:10:16.000
So these will be these values will be stored in our sign up table with respect to like form number,

146
00:10:16.000 --> 00:10:22.870
name f, name, dob, gender, email, marital status, address, city, pin code state.

147
00:10:22.900 --> 00:10:26.470
These will be the values which we will be storing in our sign up table.

148
00:10:26.470 --> 00:10:32.350
After that, we have executed the Q one query with the help of our C one point start, execute, update

149
00:10:32.350 --> 00:10:34.690
method and pass that query to that method.

150
00:10:34.690 --> 00:10:37.420
So that will be executing that query.

151
00:10:37.420 --> 00:10:44.110
And after that we have called a new sign up to with the bypassing that form number first and set the

152
00:10:44.110 --> 00:10:45.100
visibility as true.

153
00:10:45.100 --> 00:10:50.470
So once the first sign of age will be completed, the first application form will be completed.

154
00:10:50.470 --> 00:10:53.530
We will be calling as soon as the first sign up will be updated.

155
00:10:53.530 --> 00:10:59.230
We will call the second signup page so that to enter all the remaining details as well and set the current

156
00:10:59.230 --> 00:11:04.150
visibility of the window as follows inside the catch block, we will be handling the exception if any

157
00:11:04.150 --> 00:11:10.360
occurs and inside the public static void main, we will be just initializing the current instance of

158
00:11:10.360 --> 00:11:12.370
the class and set the visibility as true.

159
00:11:13.890 --> 00:11:16.980
So this is all about the first sign of Java class.

160
00:11:16.980 --> 00:11:22.230
In the next video we will be talking about the sign up two and sign up three dot Java classes, which

161
00:11:22.230 --> 00:11:25.410
will be the remaining pages for the application form.

162
00:11:25.410 --> 00:11:26.880
So that's all in this video.
