1
00:00:01,650 --> 00:00:09,660
So now we are going to develop our first quarter on the steps of development is understanding what is

2
00:00:09,660 --> 00:00:10,500
the things here.

3
00:00:10,980 --> 00:00:16,920
So this project is, we can say deployed in two parts.

4
00:00:16,920 --> 00:00:24,480
First, we are going to create one console or console thing here, which is basically console application

5
00:00:24,480 --> 00:00:28,740
for Java to understand different algorithms and how the encryption work.

6
00:00:28,860 --> 00:00:35,880
After later on, we will discuss the solid part which Java application we can see, which is providing

7
00:00:35,880 --> 00:00:37,920
encryption and decryption interfaces.

8
00:00:38,070 --> 00:00:45,180
So once this idea homepage, if you are loading to the previous projects, you have to customize that

9
00:00:45,180 --> 00:00:46,380
part in the preferences.

10
00:00:46,380 --> 00:00:48,630
I set it to welcome page always.

11
00:00:49,260 --> 00:00:51,660
So new project here.

12
00:00:55,060 --> 00:01:00,820
Will you mean the new project window for you?

13
00:01:01,660 --> 00:01:03,130
There may be no lack.

14
00:01:03,970 --> 00:01:08,170
There is some lag deploying this for me.

15
00:01:18,980 --> 00:01:23,360
Or just taking time to plan new projects.

16
00:01:23,810 --> 00:01:23,870
Okay.

17
00:01:25,940 --> 00:01:28,210
So for me, new project is started.

18
00:01:30,650 --> 00:01:33,110
It will do one thing I choose.

19
00:01:33,290 --> 00:01:34,130
Previously, Marvin.

20
00:01:34,130 --> 00:01:36,830
So we don't want Marvin.

21
00:01:39,070 --> 00:01:41,860
We required your Java project.

22
00:01:46,140 --> 00:01:47,790
So let it be loading.

23
00:01:47,790 --> 00:01:49,950
It is detecting Zika for me.

24
00:01:58,510 --> 00:02:00,310
So choose Java project.

25
00:02:01,660 --> 00:02:05,430
Your GDP -16 .0. 116.

26
00:02:05,440 --> 00:02:07,210
Virgin hit next.

27
00:02:08,520 --> 00:02:11,070
Don't do this it next.

28
00:02:11,910 --> 00:02:15,270
These are some settings but you mention here.

29
00:02:18,190 --> 00:02:20,330
Encryption key command line interface

30
00:02:22,690 --> 00:02:26,650
encryption seal damage this.

31
00:02:28,000 --> 00:02:30,000
And finish.

32
00:02:30,940 --> 00:02:34,990
So it will take time to create a new project for me.

33
00:02:36,640 --> 00:02:44,680
So if you want to check different things related to cryptography, you may check on Internet.

34
00:02:44,680 --> 00:02:52,630
There is a lot of information available for different algorithms, but most common algorithms I already

35
00:02:52,630 --> 00:03:02,470
told you and I already shared the previous information about cryptography, how it's important for different

36
00:03:02,470 --> 00:03:03,340
purposes.

37
00:03:04,090 --> 00:03:09,640
So wait for some time to choose its best settings.

38
00:03:09,640 --> 00:03:18,220
It will create the source folder, everything for me and wait for some time to ID work on this.

39
00:03:33,940 --> 00:03:36,980
So he's working for me now.

40
00:03:37,000 --> 00:03:42,670
First, I'm not going to look good directly.

41
00:03:42,920 --> 00:03:45,100
I'm going to create here two things.

42
00:03:45,340 --> 00:03:49,840
First is mine is for how the key is generated.

43
00:03:49,840 --> 00:03:54,970
So let us see how actually key generation part works.

44
00:03:58,830 --> 00:04:05,270
How is actually he thinks working here and what is the basic things I'm going to explain here?

45
00:04:05,280 --> 00:04:09,660
So let us take to that part and let us first create that part.

46
00:04:12,070 --> 00:04:19,480
So let me mention one thing here, which is I'm going to create one class here.

47
00:04:27,730 --> 00:04:27,930
It's.

48
00:04:56,170 --> 00:04:56,430
Okay.

49
00:04:59,990 --> 00:05:03,440
So wait for some time to response the ID.

50
00:05:03,470 --> 00:05:06,950
It will automatically detect your parts and everything.

51
00:05:48,240 --> 00:05:50,850
So in the HRC folder.

52
00:06:07,260 --> 00:06:09,450
Go to the H.R. sitting here.

53
00:06:13,120 --> 00:06:21,010
What did the HRC click new and choose your new class?

54
00:06:23,310 --> 00:06:27,720
So for me, I'm sitting to the symmetric as my class name.

55
00:06:29,210 --> 00:06:30,770
There should be one public class.

56
00:06:30,790 --> 00:06:33,380
So you mention symmetric.

57
00:06:36,140 --> 00:06:36,710
Hit Enter.

58
00:06:36,930 --> 00:06:38,790
It will create one class for you.

59
00:06:40,530 --> 00:06:42,860
For me, it's symmetrically symmetrical.

60
00:06:48,580 --> 00:06:53,090
So it will take time to create your own class and routines.

61
00:06:55,030 --> 00:06:58,990
So once you go to this, you can check your symmetric classes created.

62
00:06:59,890 --> 00:07:04,710
And now let me minimize this because this is no longer required.

63
00:07:07,220 --> 00:07:07,580
Okay.

64
00:07:08,000 --> 00:07:16,490
So this is my asymmetric class, which is going to have some class which is going to create a key for

65
00:07:16,490 --> 00:07:16,810
me.

66
00:07:16,820 --> 00:07:22,580
So for me, I'm for this video only or this tutorial.

67
00:07:22,730 --> 00:07:28,760
What I'm going to create, I'm going plus to create.

68
00:07:31,350 --> 00:07:31,950
You mentioned.

69
00:07:37,480 --> 00:07:39,640
So to kill it

70
00:07:44,170 --> 00:07:50,260
then if we mention one string, I'm using your algorithm.

71
00:07:50,260 --> 00:07:53,440
So A is let me mention.

72
00:07:53,590 --> 00:07:55,630
But before that, it should be fine.

73
00:07:55,660 --> 00:08:00,850
So let me mention public static finally.

74
00:08:02,320 --> 00:08:03,700
So why I'm mentioning.

75
00:08:05,140 --> 00:08:07,240
Only if not for the public.

76
00:08:07,390 --> 00:08:08,890
So why am mentioning this?

77
00:08:08,920 --> 00:08:09,390
It's final.

78
00:08:09,400 --> 00:08:10,540
No one can change this.

79
00:08:11,650 --> 00:08:14,380
So I want to stick it to that pot.

80
00:08:15,280 --> 00:08:19,170
Then I'm going to create one function.

81
00:08:20,530 --> 00:08:22,060
To create one secret.

82
00:08:23,520 --> 00:08:27,180
I am going to create one function to store the secret key.

83
00:08:29,420 --> 00:08:39,140
Understand why I used your aye aye aye is as final note being your cubicle function to create symmetric

84
00:08:39,710 --> 00:08:40,450
security.

85
00:08:40,640 --> 00:08:43,660
Why I mentioned is final because a is my algorithm.

86
00:08:43,670 --> 00:08:47,360
Let me mention algorithm for.

87
00:08:48,270 --> 00:08:48,900
Encryption.

88
00:08:52,850 --> 00:08:53,960
For encryption.

89
00:08:57,130 --> 00:09:06,670
Uh, this is my final algorithm, which is an advanced encryption algorithm I'm going to use.

90
00:09:07,150 --> 00:09:12,280
Then let me mention one function.

91
00:09:12,370 --> 00:09:15,580
Public static.

92
00:09:18,560 --> 00:09:19,430
Cigarette.

93
00:09:24,420 --> 00:09:24,810
In.

94
00:09:26,590 --> 00:09:28,510
Complete static secret key.

95
00:09:33,690 --> 00:09:34,740
Secret key.

96
00:09:36,110 --> 00:09:38,450
Or there is one default thingies.

97
00:09:40,670 --> 00:09:41,320
Three eight.

98
00:09:42,740 --> 00:09:42,980
It.

99
00:09:45,410 --> 00:09:46,520
Is a.

100
00:09:52,880 --> 00:10:04,280
With so many around us so old and so why I used your old tender crypto java crypto secret key is going

101
00:10:04,280 --> 00:10:09,110
to use here or now it should.

102
00:10:11,320 --> 00:10:12,100
Pros.

103
00:10:13,560 --> 00:10:18,990
Perception and dimension, because if there is exception, it should throw some exception.

104
00:10:21,010 --> 00:10:28,330
Then I'm going to create new instances of insecure, random class.

105
00:10:31,020 --> 00:10:39,990
Create new instances musically, object instances for new classes, which is basically secure random

106
00:10:39,990 --> 00:10:40,830
classes.

107
00:10:45,950 --> 00:10:47,840
And you can mention glass also.

108
00:10:48,620 --> 00:10:56,390
Then maybe no later, you will understand why you're developing this so secure.

109
00:10:57,750 --> 00:10:58,520
Random.

110
00:10:59,630 --> 00:11:00,910
I'm going to mention secure.

111
00:11:00,920 --> 00:11:04,070
Random as secure.

112
00:11:04,100 --> 00:11:04,910
Random.

113
00:11:09,200 --> 00:11:10,430
Secured random.

114
00:11:13,880 --> 00:11:15,230
Is equal to new.

115
00:11:16,480 --> 00:11:17,170
Security.

116
00:11:18,220 --> 00:11:28,060
So this is my object for secure random team, which is going to create random class for me passing the

117
00:11:28,060 --> 00:11:29,470
string to key generator.

118
00:11:30,670 --> 00:11:31,390
Now what?

119
00:11:31,390 --> 00:11:33,460
I required passing string to create generator.

120
00:11:38,760 --> 00:11:39,870
Passing string.

121
00:11:40,080 --> 00:11:41,640
I need to pass the string.

122
00:11:43,720 --> 00:11:44,350
Key generator.

123
00:11:44,350 --> 00:11:47,620
So passing string key generator is very easy.

124
00:11:48,640 --> 00:11:50,430
Key generator.

125
00:11:50,530 --> 00:11:52,440
There is one default function here.

126
00:11:52,450 --> 00:11:57,620
Key generator, key generator ignition.

127
00:11:57,640 --> 00:12:05,200
Again, key generator is equal to new key generator.

128
00:12:05,710 --> 00:12:07,920
And I need to mention the algorithm also.

129
00:12:07,930 --> 00:12:09,190
So what is my algorithm here?

130
00:12:09,400 --> 00:12:12,790
He used only.

131
00:12:15,140 --> 00:12:20,030
But you know, I need to mention here instances why I need instances.

132
00:12:20,030 --> 00:12:29,030
So for the purple key generator, which algorithm I'm going to use, I need to mention that get instances.

133
00:12:32,300 --> 00:12:33,110
So.

134
00:12:38,330 --> 00:12:39,140
Violet is for me.

135
00:12:39,330 --> 00:12:40,370
Okay, let me.

136
00:12:42,030 --> 00:12:43,200
This again.

137
00:12:44,440 --> 00:12:47,350
New generator.

138
00:12:55,280 --> 00:12:55,700
Get.

139
00:13:04,040 --> 00:13:04,650
U.S..

140
00:13:06,630 --> 00:13:08,190
So there might be.

141
00:13:11,820 --> 00:13:13,260
Look, I need to.

142
00:13:14,130 --> 00:13:15,030
Don't want to space.

143
00:13:15,540 --> 00:13:19,870
There is no role of new because I'm not creating any instances.

144
00:13:19,890 --> 00:13:21,630
I'm mentioning directly instances here.

145
00:13:21,630 --> 00:13:22,140
So.

146
00:13:22,170 --> 00:13:23,250
No, no.

147
00:13:23,250 --> 00:13:25,770
That you need to specify a new thing here.

148
00:13:27,900 --> 00:13:32,460
Then I need to mention the initialize the key generator.

149
00:13:36,380 --> 00:13:40,610
Initialize E gen.

150
00:13:44,040 --> 00:13:45,400
Kitchenaid's Kitchen.

151
00:13:47,290 --> 00:13:52,960
I'm mentioning here with 256 to 56, which I'm going to initialize.

152
00:13:53,350 --> 00:14:00,760
So that's a database which is going to convert to 56, which means it's going to randomize the 256 bits

153
00:14:00,760 --> 00:14:01,390
directly.

154
00:14:02,400 --> 00:14:07,350
Then what I'm going to do is keep generation initiative.

155
00:14:07,500 --> 00:14:16,020
So it's very easy to generate a dot in it to 56 to 56.

156
00:14:17,250 --> 00:14:18,600
This is my key size.

157
00:14:19,950 --> 00:14:20,370
Now.

158
00:14:22,010 --> 00:14:28,790
Not with this only I need to mention which algorithm secure random need to mention secure random.

159
00:14:30,220 --> 00:14:32,500
So now what will be happen?

160
00:14:32,830 --> 00:14:37,990
256 with randomize time is going to check not any patenting.

161
00:14:39,260 --> 00:14:41,420
Then I need to mention secret key.

162
00:14:44,990 --> 00:14:46,010
Security.

163
00:14:47,320 --> 00:14:49,180
With which instance?

164
00:14:49,330 --> 00:14:53,200
Secret key as my key.

165
00:14:53,490 --> 00:14:57,460
Key part for which purposes.

166
00:14:57,730 --> 00:15:00,100
Let me mention a small key device.

167
00:15:02,060 --> 00:15:11,470
Which which radar key generator with key e generator with generation of key which is basically generate

168
00:15:11,470 --> 00:15:11,770
key.

169
00:15:15,270 --> 00:15:17,130
So it will generate key for me.

170
00:15:18,750 --> 00:15:21,630
Now it should return foreign.

171
00:15:26,630 --> 00:15:28,100
So no, you shouldn't understand.

172
00:15:28,640 --> 00:15:33,380
So this is the method for creating the key generation part and everything.

173
00:15:33,560 --> 00:15:42,790
So in the next part, I'm going to create and I'm going to summarize this because this is not completed,

174
00:15:43,460 --> 00:15:50,300
but it's just instances of this algorithm, which is I'm going to create class to create three with

175
00:15:50,300 --> 00:15:51,020
symmetric.

176
00:15:51,470 --> 00:15:54,680
So it will randomize things and I will tell you how it's going to work.
