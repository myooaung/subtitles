WEBVTT
1
00:00:01.370 --> 00:00:02.590
Hello everyone.

2
00:00:02.600 --> 00:00:11.060
So I hope that you all have went through the introduction review of this music playlist library application

3
00:00:11.060 --> 00:00:12.380
within Java.

4
00:00:12.470 --> 00:00:17.150
Now we will have a quick look at how the app works.

5
00:00:17.150 --> 00:00:24.940
Like actually what is the working of the application we are going to learn how to make today.

6
00:00:25.340 --> 00:00:29.810
So this is the interface of the application.

7
00:00:29.810 --> 00:00:38.420
Like when we will run the main class of the application, this file is going to be open in that terminal

8
00:00:38.420 --> 00:00:42.230
and we have to perform our tasks head on.

9
00:00:42.650 --> 00:00:50.630
So you can see that it is showing the currently playing track, which is the first track from the list,

10
00:00:50.630 --> 00:01:00.310
and it is also showing available options and we have to press any of the one case to see what happens.

11
00:01:00.320 --> 00:01:04.510
So let us try to press one in the beginning.

12
00:01:04.700 --> 00:01:07.400
So I am pressing one and hitting enter.

13
00:01:08.120 --> 00:01:09.140
So perfect.

14
00:01:09.350 --> 00:01:18.980
We have 4 to 5 songs in the list and the first one was this with duration 4.5 seconds, and the second

15
00:01:18.980 --> 00:01:29.960
one is the peaches with 3.5 minutes sorry, 3.5 minutes duration and this is 4.5 minutes duration.

16
00:01:30.070 --> 00:01:37.520
So the next song is played by pressing the first key from a player, one from the keyboard.

17
00:01:37.550 --> 00:01:44.710
Now we want to navigate through the previous song like we want the state to be played again.

18
00:01:44.720 --> 00:01:48.380
So we will press to from the keyboard and hit Enter.

19
00:01:48.590 --> 00:01:56.990
And yes, the first song is played again as the song is navigated from the current song to the previous

20
00:01:56.990 --> 00:02:00.180
song, which was the first song from the list.

21
00:02:00.200 --> 00:02:03.500
Now we are going to replay the current song.

22
00:02:03.800 --> 00:02:06.080
So the current song is this.

23
00:02:06.080 --> 00:02:12.940
So if we hit Enter by pressing three, then again the same song will be played.

24
00:02:12.950 --> 00:02:15.730
So I talked about playing songs in the loop.

25
00:02:15.740 --> 00:02:22.550
Like if we like a song much more than any other song, we would love to listen to that song again and

26
00:02:22.550 --> 00:02:24.290
again without stopping.

27
00:02:24.290 --> 00:02:30.650
So we will press three and keep listening to that track continuously without any break.

28
00:02:30.650 --> 00:02:39.140
Like in our loop, we say that now the fourth key is going to list all of the songs from the list,

29
00:02:39.140 --> 00:02:43.220
so let us try that also perfect.

30
00:02:43.220 --> 00:02:52.070
So the fourth key is responsible for playing a listing the songs which are present in the album currently.

31
00:02:52.070 --> 00:02:58.670
So currently we have four songs in the song list and they are listed here.

32
00:02:59.210 --> 00:03:04.520
Now after that, suppose we are done with the listing like we saw.

33
00:03:04.520 --> 00:03:06.740
What are the songs present now?

34
00:03:06.740 --> 00:03:12.230
We want to navigate back to the available options and perform some other tasks.

35
00:03:12.230 --> 00:03:16.460
So we have to press five on the keyboard and hit enter.

36
00:03:16.580 --> 00:03:22.370
So we are back with the available options and now we can perform any other task.

37
00:03:22.370 --> 00:03:27.050
So suppose we want to play a song.

38
00:03:27.050 --> 00:03:29.510
So we are pressing one.

39
00:03:29.510 --> 00:03:38.210
So the song is playing now if suppose I don't like the song anymore and I want to delete delete this

40
00:03:38.210 --> 00:03:39.320
song from the list.

41
00:03:39.320 --> 00:03:44.360
So what I am supposed to do, like how can I remove this song from the list?

42
00:03:44.720 --> 00:03:46.670
So you got me right.

43
00:03:46.670 --> 00:03:54.080
We have to press this six to delete the current song as we no longer want it out in our list.

44
00:03:54.230 --> 00:03:56.240
So pressing six.

45
00:03:56.240 --> 00:04:03.410
And the next song is played from the list like this was the second song and the third song is played.

46
00:04:03.440 --> 00:04:09.320
Of course, if we remove this song, the next song will be played automatically.

47
00:04:09.320 --> 00:04:10.970
Now we want to see that.

48
00:04:10.970 --> 00:04:13.280
What are the songs that are left in the list?

49
00:04:13.280 --> 00:04:16.910
Like what is the list remained with the song?

50
00:04:16.910 --> 00:04:22.940
So which songs to see that we have to press for to list all the songs again?

51
00:04:22.940 --> 00:04:29.750
So yes, initially we had four songs in our list and now we have three songs in our list.

52
00:04:29.780 --> 00:04:36.440
We have deleted this second song from the list by pressing six from our keyboard.

53
00:04:36.920 --> 00:04:46.000
So by far we have like the did all the operations which are involved in this application and learned

54
00:04:46.010 --> 00:04:48.290
that how perfectly it is working.

55
00:04:48.470 --> 00:04:58.820
So now let us take a look at what are the tasks to be performed while making this application like we

56
00:04:58.820 --> 00:05:00.380
are here in this empty.

57
00:05:01.230 --> 00:05:08.420
To design a prototype, like what are the steps to be followed in order to build this application?

58
00:05:08.430 --> 00:05:17.100
So in the beginning we have to create a Java project in the IDE.

59
00:05:18.390 --> 00:05:22.980
So initially we have to create the project obviously.

60
00:05:23.250 --> 00:05:33.360
The second step should be to create a class, so to create a class like how many classes are required.

61
00:05:33.480 --> 00:05:38.580
So I think we required three class overall in this project.

62
00:05:38.610 --> 00:05:45.840
So we are going to firstly create the song class, create the song.

63
00:05:46.140 --> 00:05:56.220
I am capitalizing it so that it gives a emphasize over the class name or create a song class.

64
00:05:57.090 --> 00:05:57.570
Yes.

65
00:05:57.570 --> 00:05:58.470
So.

66
00:05:59.540 --> 00:06:04.940
The song class will be created and sung Java file inside the ASIC folder.

67
00:06:04.970 --> 00:06:10.940
We have already discussed it like how to create a class inside this RC folder.

68
00:06:10.970 --> 00:06:13.340
We have went through this already.

69
00:06:13.670 --> 00:06:20.720
Now the next motive should make it like we have three classes.

70
00:06:20.720 --> 00:06:24.110
So the second class should be the album class.

71
00:06:24.200 --> 00:06:33.050
So if there are songs, there would be albums of specific artists like suppose we have five artists

72
00:06:33.050 --> 00:06:36.130
which we are going to add in our music library.

73
00:06:36.140 --> 00:06:40.640
So we have to set albums of that specific artist.

74
00:06:40.670 --> 00:06:48.890
Suppose the artist has sung these five songs to Artist B has done these five songs, so we have listed

75
00:06:48.890 --> 00:06:50.660
them inside the album class.

76
00:06:50.660 --> 00:06:54.140
Like what are the artists and what are their songs?

77
00:06:54.320 --> 00:07:01.670
Now, after creating the song and the album classes, we have to create the main class, which will

78
00:07:01.700 --> 00:07:06.220
be responsible for testing and running of this application.

79
00:07:06.230 --> 00:07:17.570
So creating the main class and this main class will handle all the functionalities of the playlist application.

80
00:07:17.570 --> 00:07:26.780
So the main class is going to handle all the functions inside the classes, like we have objects inside,

81
00:07:26.780 --> 00:07:33.340
classes we have constructed, inside the classes we have functions inside the classes.

82
00:07:33.350 --> 00:07:38.810
So everything is going to be consisted inside this main class.

83
00:07:39.200 --> 00:07:49.700
So after creating the main class, we are going to attach the data structures like the string, the

84
00:07:49.700 --> 00:07:52.990
analyst, the link list and so on.

85
00:07:53.000 --> 00:07:56.390
So attaching the data structures.

86
00:07:57.970 --> 00:08:04.180
Within the glasses or God, these typos.

87
00:08:05.400 --> 00:08:07.920
Within the classes.

88
00:08:09.080 --> 00:08:17.510
Classes and functions as well, like inside a function we are going to call the data structure as far

89
00:08:17.510 --> 00:08:19.940
as our needs asks for.

90
00:08:20.150 --> 00:08:23.540
So attaching the data structure within the classes.

91
00:08:23.570 --> 00:08:31.480
Now let us navigate through our application once again and see what our functionality is to be performed.

92
00:08:31.490 --> 00:08:38.390
So we have to create a function to play the songs like the previous or the next, whatever we want to

93
00:08:38.390 --> 00:08:40.630
play or to replay the current song.

94
00:08:40.640 --> 00:08:45.970
So we have to create a functionality for playing and replaying of the song.

95
00:08:45.980 --> 00:08:53.200
So let me mention in head playing and replaying functionalities.

96
00:08:53.420 --> 00:08:58.010
So playing and replaying functionality should be attached.

97
00:08:58.010 --> 00:09:03.170
Her functionalities should be attached her.

98
00:09:04.490 --> 00:09:06.230
In the program.

99
00:09:06.260 --> 00:09:10.510
Now, after that, we have a listing of all the songs.

100
00:09:10.520 --> 00:09:19.220
So this is going to be done with the help of the special data structure we are going to use, and we

101
00:09:19.220 --> 00:09:23.880
will study about it in the detail when we will start to code.

102
00:09:23.900 --> 00:09:30.500
So listing the songs is going to be a main function.

103
00:09:30.500 --> 00:09:36.230
We are going to add in this project printing all the available options again.

104
00:09:36.230 --> 00:09:43.540
So yes, this is a normal thing and functionalities for deleting the song.

105
00:09:43.550 --> 00:09:49.040
So functionality for deleting the song.

106
00:09:49.250 --> 00:09:58.960
So these are the functionalities we are going to add in our project and if something remains, we will

107
00:09:59.570 --> 00:10:01.280
added later here.

108
00:10:01.340 --> 00:10:08.690
After starting the project, like when we will create the project and we will come here and see what

109
00:10:08.690 --> 00:10:14.750
are the functionalities left to be added and we will add it here in the prototype as well.

110
00:10:14.780 --> 00:10:19.430
As far as the needs are, I'm like, this is not a fancy application.

111
00:10:19.430 --> 00:10:27.200
We are just learning ops and Java concepts and the data structure attached to a specific functionality.

112
00:10:27.200 --> 00:10:30.590
So we will see that according to our needs.

113
00:10:30.590 --> 00:10:33.430
Like what are the functionality we want to add?

114
00:10:33.440 --> 00:10:34.640
There is no limit.

115
00:10:34.640 --> 00:10:39.440
We can add anything inside this player as we have, not a specific frame.

116
00:10:39.440 --> 00:10:42.190
Like we have to fix everything inside the frame.

117
00:10:42.200 --> 00:10:49.790
No, we have everything done inside the terminal only so we can add anything like it is something like

118
00:10:49.790 --> 00:10:52.170
playing with this project.

119
00:10:52.220 --> 00:10:58.400
So if we are playing this with project we have, we can press any key any time like we can press for.

120
00:10:58.490 --> 00:11:02.690
We can press five and see that everything is working fine or not.

121
00:11:02.720 --> 00:11:12.110
We can also add more keyboard keys with functions attached so that we can explore more about this application.

122
00:11:12.110 --> 00:11:22.550
Like suppose we want to add something feature like play this song after this, like adding songs in

123
00:11:22.550 --> 00:11:22.930
the queue.

124
00:11:22.940 --> 00:11:29.570
You must have heard about it so we can also create a dedicated function for that.

125
00:11:29.570 --> 00:11:34.100
Also, we can see that when we will start making the application.

126
00:11:34.100 --> 00:11:34.850
So.

127
00:11:35.380 --> 00:11:43.460
So I think we are done with the idea building thing and now we have to start making that project to

128
00:11:43.460 --> 00:11:46.340
learn what is actually happening here.

129
00:11:46.470 --> 00:11:49.550
Like after the prototype session is done.

130
00:11:49.550 --> 00:11:56.510
Now, in the next part we are going to start afresh new project in our compiler and make the classes

131
00:11:56.510 --> 00:11:59.780
and do all the functionalities we have listed here.

132
00:11:59.990 --> 00:12:02.030
So see you in the next part.
