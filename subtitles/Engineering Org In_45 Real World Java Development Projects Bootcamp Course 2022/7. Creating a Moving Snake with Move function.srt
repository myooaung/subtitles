1
00:00:01,330 --> 00:00:09,430
So now we are going to create the move function for Disney, which will be responsible for moving the

2
00:00:09,430 --> 00:00:11,230
snake inside the frame.

3
00:00:11,800 --> 00:00:21,100
So initializing the void, move, function and writing the functionalities inside the function.

4
00:00:21,220 --> 00:00:32,740
Firstly, we will create A for loop and Z for the dots and if that is greater than zero.

5
00:00:34,050 --> 00:00:36,360
Then Z minus minus.

6
00:00:37,630 --> 00:00:44,190
So this will start to move in the left direction like we have 0 to 300.

7
00:00:44,200 --> 00:00:51,700
So if the snake is that supposed 29 position, so it will start moving in the left direction.

8
00:00:51,970 --> 00:01:01,390
So Z minus minus and setting the coordinates for the x and y axis like x isn't.

9
00:01:02,380 --> 00:01:03,670
Is equal to.

10
00:01:04,620 --> 00:01:06,690
X, z minus one.

11
00:01:08,910 --> 00:01:12,000
And similarly for the Bible.

12
00:01:12,360 --> 00:01:16,350
So I am copying for the Y coordinate.

13
00:01:18,180 --> 00:01:21,120
So the snake is moving this way.

14
00:01:23,300 --> 00:01:23,880
Yes.

15
00:01:23,900 --> 00:01:27,050
Now the snake has started to move.

16
00:01:27,080 --> 00:01:36,830
So what happens when the snake moves in either of the four directions, like left and right or up and

17
00:01:36,830 --> 00:01:37,320
down?

18
00:01:37,340 --> 00:01:45,140
So we have to update the coordinates, X and Y ones, if any of the move takes place.

19
00:01:45,500 --> 00:01:59,030
So suppose if the snake moves in the left direction, then this will result to x zero as or decrease

20
00:01:59,780 --> 00:02:01,220
in the dot size.

21
00:02:01,220 --> 00:02:05,240
So x is zero minus dot size.

22
00:02:06,560 --> 00:02:09,800
Dot size.

23
00:02:11,020 --> 00:02:12,820
And here we are.

24
00:02:13,600 --> 00:02:20,650
Now, similarly, we have to do this for four more times, like four total, four times.

25
00:02:20,680 --> 00:02:29,760
So copying this and trying to paste it three more times for the other directions as.

26
00:02:30,190 --> 00:02:30,790
Right.

27
00:02:32,640 --> 00:02:36,090
Up and down.

28
00:02:36,840 --> 00:02:43,360
So we have to cover all the four directions and what the consequences are going to be.

29
00:02:43,380 --> 00:02:48,130
So if the snake moves in the left direction, the x coordinate decreases.

30
00:02:48,150 --> 00:02:53,580
If it moves in the right direction, it is going to be increased.

31
00:02:53,610 --> 00:03:00,380
Similarly, if it goes in upward direction, then the y coordinate is going to decrease.

32
00:03:00,390 --> 00:03:06,280
And if went down direction, then the Y coordinate is going to increase.

33
00:03:06,300 --> 00:03:07,050
Yes.

34
00:03:08,010 --> 00:03:09,450
So here we are.

35
00:03:09,930 --> 00:03:11,610
So I think the same thing.

36
00:03:12,900 --> 00:03:15,330
Let's do this and do this here.

37
00:03:15,930 --> 00:03:19,040
So this is for the like.

38
00:03:19,050 --> 00:03:21,060
I think I have pasted it.

39
00:03:22,380 --> 00:03:23,820
One extra time.

40
00:03:24,870 --> 00:03:28,430
So this is for the first time.

41
00:03:29,970 --> 00:03:30,450
Yes.

42
00:03:30,460 --> 00:03:38,310
So the left direction is responsible for decreasing the dot size in the x coordinate and hence it will

43
00:03:38,310 --> 00:03:39,810
be plus.

44
00:03:40,850 --> 00:03:45,880
Now as a quick explanation if the snake move downwards.

45
00:03:45,890 --> 00:03:53,030
So we are going to plus like in the comments I will show you, what is this actually like?

46
00:03:53,030 --> 00:04:01,380
Suppose if currently the snake's position is at 240 in the Y coordinate and if it moves downward trying

47
00:04:01,400 --> 00:04:01,640
this.

48
00:04:01,790 --> 00:04:09,560
So yes, suppose this is Y is equal to 240 and if it moves in the downward direction, then suppose

49
00:04:09,560 --> 00:04:12,350
it is moving ten units in the right direction.

50
00:04:12,350 --> 00:04:18,920
Then this is the down key and we are we have to update the Y coordinate as plus ten.

51
00:04:18,920 --> 00:04:22,070
So this is what we are actually doing.

52
00:04:22,070 --> 00:04:27,140
So 240 plus ten is going to be 250.

53
00:04:28,760 --> 00:04:36,020
And similarly, supposing this snake moves up direction, then the y coordinate is going to decrease,

54
00:04:36,020 --> 00:04:37,080
not increase.

55
00:04:37,100 --> 00:04:41,180
Like suppose the snake is head and it starts moving upward.

56
00:04:41,630 --> 00:04:43,300
Not the slide but the snake.

57
00:04:43,310 --> 00:04:47,720
So if the snake starts moving upwards, the y coordinate will decrease.

58
00:04:47,750 --> 00:04:52,320
Here the y continued to zero and here the y coordinate is 300.

59
00:04:52,340 --> 00:04:56,690
So obviously if the snake moves upward, the y coordinate will decrease.

60
00:04:56,690 --> 00:05:03,290
And similar is the case for the left and right direction is if it moves in the x direction like left

61
00:05:03,290 --> 00:05:09,620
direction, the x coordinate will decrease and for the right direction the x coordinate will increase

62
00:05:09,620 --> 00:05:13,700
head it is zero x and this x is equal to 300.

63
00:05:13,940 --> 00:05:18,410
So we are done with the move function.

64
00:05:19,100 --> 00:05:28,770
Now as far as we have created all the function required in this Snake Board Java class, we will create

65
00:05:28,770 --> 00:05:31,910
the action listener as.

66
00:05:32,960 --> 00:05:36,020
Public void.

67
00:05:37,220 --> 00:05:44,750
Action performed like what action is to be performed when any of the function is being called.

68
00:05:45,200 --> 00:05:47,090
So action performed.

69
00:05:48,230 --> 00:05:56,360
And so creating this action performed function and inside the parameter we are going to pass action

70
00:05:56,360 --> 00:05:59,370
event as suppose a.

71
00:06:00,020 --> 00:06:09,230
So inside this function we are going to check if the game is on like I call it as in game.

72
00:06:09,860 --> 00:06:12,260
I call in game as game is on.

73
00:06:12,650 --> 00:06:16,100
You must have heard me before.

74
00:06:16,850 --> 00:06:20,300
So if that game is on then.

75
00:06:22,000 --> 00:06:24,370
This is braces.

76
00:06:24,970 --> 00:06:28,810
So check that the balance there.

77
00:06:29,560 --> 00:06:38,680
Also check that the collision is performed or not like check collision.

78
00:06:39,400 --> 00:06:41,550
And move the snake.

79
00:06:43,510 --> 00:06:49,630
So let me explain this thing like what action is actually being performed.

80
00:06:50,080 --> 00:06:55,660
So there are three functions check up, check technology and then move.

81
00:06:56,600 --> 00:07:00,860
So I am going to explain this with the help of this frame.

82
00:07:01,040 --> 00:07:05,930
So firstly, we have to check that there are police present or not.

83
00:07:06,020 --> 00:07:10,310
Like if there is no apple, then where the snake is going to move.

84
00:07:10,370 --> 00:07:16,580
So the first thing we have executed inside the action form thing is to check the apple.

85
00:07:16,850 --> 00:07:19,430
Then we have checked the collision.

86
00:07:19,430 --> 00:07:24,450
Like suppose that we have started the snake from this coordinate.

87
00:07:24,470 --> 00:07:30,070
Then the snake is not going to move at all like the game will be over in the beginning.

88
00:07:30,080 --> 00:07:34,910
So we have to check collision like if the snake is not collided till now.

89
00:07:35,090 --> 00:07:39,860
So after checking that the apple is present, there is no collision.

90
00:07:40,040 --> 00:07:41,900
We are going to move the snake.

91
00:07:41,900 --> 00:07:43,520
Simply move the snake.

92
00:07:43,520 --> 00:07:45,590
And what is actually moving?

93
00:07:45,710 --> 00:07:54,140
So her moving the notes, we all know, moving up down left and right and coordinates are updated in

94
00:07:54,140 --> 00:07:55,190
this way only.

95
00:07:55,880 --> 00:07:58,800
So yes, the action performed.

96
00:07:58,820 --> 00:08:01,550
Listen, event is also covered.

97
00:08:03,200 --> 00:08:09,830
So after creating the action listener event, now we will come towards this paint component.

98
00:08:09,860 --> 00:08:14,950
Like what actually is going to be done after the snake moves.

99
00:08:14,960 --> 00:08:19,510
Like, suppose the snake moves, it's the apple and then what is going to happen?

100
00:08:19,520 --> 00:08:26,070
So this paint component is calling the graphics like we have created the graphics here.

101
00:08:27,590 --> 00:08:28,440
Above.

102
00:08:28,460 --> 00:08:30,770
So this graphic is going to.

103
00:08:31,220 --> 00:08:34,670
Yes, that is the graphic.

104
00:08:36,710 --> 00:08:37,190
Okay.

105
00:08:37,190 --> 00:08:41,980
So the graphic is going to add one more dot behind the tail of the snake.

106
00:08:42,830 --> 00:08:50,150
So graphic, gee, super dot paint component helps us to add the image behind.

107
00:08:50,150 --> 00:08:53,210
Like I already told you, there is no real snake.

108
00:08:53,240 --> 00:08:55,580
We are just adding image after image.

109
00:08:55,670 --> 00:09:01,270
And this we are going to do with the help of the paint component, the graphics and draw.

110
00:09:01,460 --> 00:09:04,190
Three things are responsible for that.

111
00:09:04,760 --> 00:09:11,240
Now so that we have created super paint component and draw and called draw.

112
00:09:11,450 --> 00:09:15,320
Now the image will be drawn after the tail of the snake.

113
00:09:15,350 --> 00:09:25,910
So inside the action listener part, like the a variable, as we said, we have to call repaint.

114
00:09:26,420 --> 00:09:32,870
So the repaint is going to paint after the snake most any step like checks.

115
00:09:32,870 --> 00:09:39,170
If there is apple, there are no collisions and the snake moves and each step then it will be paint

116
00:09:39,620 --> 00:09:41,900
image after the tail of the snake.

117
00:09:43,010 --> 00:09:52,370
So after covering everything, now add one more like let us try to run the function and check whether

118
00:09:52,370 --> 00:09:52,850
the.

119
00:09:54,230 --> 00:09:58,490
Now before this I am going to set focus table.

120
00:09:59,910 --> 00:10:02,340
Like we are going to contain.

121
00:10:04,000 --> 00:10:07,330
This project and control the project as.

122
00:10:09,330 --> 00:10:17,160
Keyboard functionality is only so by setting focus able to through the app will open in the default

123
00:10:17,160 --> 00:10:17,630
moment.

124
00:10:17,790 --> 00:10:25,440
Like if they will click keyboard, then it will perform the action and before this nothing is going

125
00:10:25,440 --> 00:10:26,520
to happen.

126
00:10:26,730 --> 00:10:32,130
So try checking that the app is working or not.

127
00:10:32,130 --> 00:10:35,340
Like if the snake is actually performing.

128
00:10:35,340 --> 00:10:44,250
So yes, the snake has started to move from a run and the apple has appeared at a random position with

129
00:10:44,250 --> 00:10:46,680
the help of the random we have created.

130
00:10:47,040 --> 00:10:51,790
And the move function is also working correctly.

131
00:10:51,810 --> 00:11:01,320
Like if we are pressing the up key, it is moving y minus like y coordinate is being subtracted.

132
00:11:01,350 --> 00:11:06,600
If we are pressing the left key, the x coordinate is being subtracted.

133
00:11:06,600 --> 00:11:13,230
If we are going right, the y coordinate, sorry, the x coordinate is being added.

134
00:11:14,520 --> 00:11:17,460
So the snake has grown enough.

135
00:11:17,460 --> 00:11:20,940
Now let us check with the collision part.

136
00:11:22,010 --> 00:11:24,830
So hitting this against obstacle.

137
00:11:25,250 --> 00:11:30,380
So the snake has entered the world and the pop up appears as game over.

138
00:11:31,040 --> 00:11:35,210
So everything we have created by far is working fine.

139
00:11:35,240 --> 00:11:37,400
The snake was moving.

140
00:11:37,430 --> 00:11:40,520
Eating the apple and the size was increasing.

141
00:11:40,520 --> 00:11:43,820
Like emails were being added one after the other.

142
00:11:44,510 --> 00:11:49,160
And once the snake hits the obstacle, that game is over.

143
00:11:49,190 --> 00:11:58,130
Now, one more functionality is to reject that whether the snake dies, if it hits itself or not.

144
00:11:58,460 --> 00:12:06,890
So let us check that also for that, we have to grow the snake for minimum five pointers.

145
00:12:07,490 --> 00:12:11,360
Before that, the snake is not going to collide itself.

146
00:12:12,740 --> 00:12:15,350
Let us hope that it does not collide.

147
00:12:15,350 --> 00:12:18,740
The walls mean in the meantime.

148
00:12:19,580 --> 00:12:22,820
So let us try to hit the snake itself.

149
00:12:24,890 --> 00:12:27,200
Let us grow it some more.

150
00:12:28,750 --> 00:12:31,000
And now, yes, the game is over.

151
00:12:31,390 --> 00:12:39,220
The head of the snake disappears and all the body parts are seen as the darts only and the game is over.

152
00:12:39,460 --> 00:12:42,820
So let us summarise everything we have created.

153
00:12:42,820 --> 00:12:49,230
We have created the snake class inside, which we have called a new board.

154
00:12:49,240 --> 00:12:58,960
We have a frame pack and the resize ability abilities set to false like the app is not being maximized.

155
00:12:58,960 --> 00:13:02,590
The size is fixed at 300 height n 300 width.

156
00:13:03,070 --> 00:13:11,320
Now coming to the border of Java we have imported swing and WP packages have used the packages inside

157
00:13:11,320 --> 00:13:11,800
them.

158
00:13:11,800 --> 00:13:16,360
The components like action list and inside the action listener.

159
00:13:16,360 --> 00:13:24,760
We have created dedicated actions for everything, like for moving for the keyboard keys, like controlling

160
00:13:24,760 --> 00:13:29,860
the keys, for growing the snake, for the collision and everything.

161
00:13:30,130 --> 00:13:37,570
We have successfully added the image icons, so make sure that you set the path correctly.

162
00:13:37,570 --> 00:13:43,750
In order to the image appearance we have initiated the game, set a timer.

163
00:13:43,990 --> 00:13:46,270
We have located the apple.

164
00:13:46,300 --> 00:13:51,880
We have checked that if Apple is eaten or not eaten.

165
00:13:51,880 --> 00:13:55,180
So increasing the dots accordingly.

166
00:13:55,540 --> 00:14:00,340
We have created paint and graphics for adding images one behind another.

167
00:14:00,640 --> 00:14:03,580
We have created a game over functionality.

168
00:14:03,580 --> 00:14:10,480
So what should be the appear on the screen when the obstacle is hidden and what is the functionality

169
00:14:10,480 --> 00:14:13,570
which we are going to face when the game is over?

170
00:14:13,870 --> 00:14:15,910
We are checking the collisions.

171
00:14:15,910 --> 00:14:23,440
If the snake hits itself or any of the four walls and the game is over and is stop.

172
00:14:24,340 --> 00:14:33,640
So I hope you all must have gone properly through this project program and will try to make the game

173
00:14:33,640 --> 00:14:34,420
on your own.

174
00:14:35,230 --> 00:14:42,100
Thank you all for attending this session and we'll see you later with some next project.

175
00:14:42,130 --> 00:14:43,150
Thank you.

176
00:14:43,950 --> 00:14:45,780
See you in the next part.
