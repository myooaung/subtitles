1
00:00:00,510 --> 00:00:08,160
So in the previous part we have created the item class, which is going to be responsible for testing

2
00:00:08,160 --> 00:00:10,110
and running of the application.

3
00:00:10,110 --> 00:00:18,000
And then we have created this account class which is going to manage everything about the calculation

4
00:00:18,000 --> 00:00:21,890
thing and the input output management.

5
00:00:21,900 --> 00:00:30,060
So we have created some global variables such as customer number, pin number, checking balance and

6
00:00:30,060 --> 00:00:37,170
saving balance and like initially setting a value of zero to go to the balances.

7
00:00:37,320 --> 00:00:46,920
Now this scanner input method is going to scan the input by the user, according to which the choice

8
00:00:47,040 --> 00:00:51,040
which is input and the function will be performed.

9
00:00:51,060 --> 00:00:56,940
So we have created this account named constructor.

10
00:00:57,510 --> 00:01:06,300
So this account object is containing some arguments such as customer number, pin number, checking

11
00:01:06,300 --> 00:01:08,970
balance and saving balance.

12
00:01:09,240 --> 00:01:17,160
So all these four are going to be the argument of this account constructor and we have accessed all

13
00:01:17,160 --> 00:01:20,730
four of them with the help of this keyword.

14
00:01:20,760 --> 00:01:30,020
This keyword is going to access all the objects which is declared inside the class to this account object.

15
00:01:30,070 --> 00:01:38,760
So now we have covered like creating the class, creating the constructor, passing the arguments,

16
00:01:38,760 --> 00:01:43,800
and then like accessing the objects with the help of this schema.

17
00:01:43,830 --> 00:01:54,000
Now after that, we are going to use set and get the methods for accessing like get the method is used

18
00:01:54,000 --> 00:02:03,390
for accessing all four of them in other classes and set method is used to update the values accordingly.

19
00:02:03,660 --> 00:02:12,450
So the first thing we are going to like get is going to be the customer number of course.

20
00:02:12,450 --> 00:02:17,670
So public int can get customer number.

21
00:02:19,100 --> 00:02:25,120
And this customer number is already declared variable.

22
00:02:25,550 --> 00:02:28,010
So get customer number.

23
00:02:29,310 --> 00:02:36,540
Is used to like access that private specified variable, global variable.

24
00:02:36,690 --> 00:02:44,880
And this is going to simply return the customer number which the like suggestions are showing.

25
00:02:45,090 --> 00:02:48,690
So we have a get the customer number.

26
00:02:48,900 --> 00:02:56,940
Now after that, we will be like getting all four of the global variables we have declared.

27
00:02:57,150 --> 00:03:09,450
So I will be copying this and pasting for four more times in order to like access all four of the global

28
00:03:09,450 --> 00:03:13,560
variables which are specified as private.

29
00:03:14,490 --> 00:03:15,980
On formatting.

30
00:03:15,990 --> 00:03:16,530
Yes.

31
00:03:16,530 --> 00:03:26,530
So after the customer number, we are here for the PIN number and this is going to return the PIN number,

32
00:03:26,550 --> 00:03:27,720
of course.

33
00:03:28,460 --> 00:03:31,280
After which we are having double.

34
00:03:32,820 --> 00:03:38,070
Double date start time for the check ins balance and savings balance.

35
00:03:38,460 --> 00:03:45,510
So yes, for the checking balance we are going to use checking.

36
00:03:47,450 --> 00:03:48,740
Balance.

37
00:03:49,310 --> 00:03:54,830
And this is going to like help us to access the checking balance.

38
00:03:55,460 --> 00:04:01,250
And similarly, the function will be returning the checking balance.

39
00:04:01,550 --> 00:04:06,830
So I am pasting into the see was small.

40
00:04:07,340 --> 00:04:08,090
Yes.

41
00:04:08,180 --> 00:04:14,210
So similarly, we are going to like use this double method.

42
00:04:15,280 --> 00:04:24,460
For the savings balance, just replacing this, checking with saving and also health.

43
00:04:26,440 --> 00:04:33,160
So we are done with getting all four of the global variables we have declared.

44
00:04:34,510 --> 00:04:40,510
Whenever it is needed by any other class of this project.

45
00:04:40,690 --> 00:04:49,390
Now, our second concern is to, like said all four of them, we have use get for all four of them.

46
00:04:49,540 --> 00:04:59,920
Now the next one is to set and that set method is going to help us to update the values of these for

47
00:05:00,280 --> 00:05:02,330
whenever we need it.

48
00:05:02,350 --> 00:05:06,310
So like in the next step.

49
00:05:07,480 --> 00:05:08,380
Public.

50
00:05:11,610 --> 00:05:12,000
In.

51
00:05:14,400 --> 00:05:17,040
Gus said customer number.

52
00:05:19,680 --> 00:05:22,710
And this is going to update the.

53
00:05:24,160 --> 00:05:33,430
And we have to pass a like argument inside this as customer number as this set method we are using to

54
00:05:33,430 --> 00:05:36,460
update the value of the customer number.

55
00:05:37,240 --> 00:05:49,990
And this keyword will be again used to access the customer number first and then setting this to customer

56
00:05:49,990 --> 00:05:51,250
number again.

57
00:05:52,340 --> 00:06:00,740
And on the next step this will return the custom simply like the gate method was doing.

58
00:06:01,520 --> 00:06:10,220
So with the help of suggestions, everything is so convenient saving it.

59
00:06:10,670 --> 00:06:17,810
And yes, we have great method for customer number and set method for it also.

60
00:06:18,050 --> 00:06:23,690
Now we are going to use this similar thing for the PIN number.

61
00:06:24,440 --> 00:06:32,900
So yes, just changing the customer to pin here and everywhere.

62
00:06:33,140 --> 00:06:37,910
Just simply replacing customer pin.

63
00:06:40,580 --> 00:06:48,020
Also the brain is in danger, so nothing is going to throw exception in any manner.

64
00:06:49,130 --> 00:06:51,410
So bin again.

65
00:06:52,320 --> 00:06:54,740
And setting it to.

66
00:06:56,730 --> 00:07:00,660
Also this is going to return the PIN number.

67
00:07:02,040 --> 00:07:03,420
So replacing.

68
00:07:04,260 --> 00:07:12,420
So here we are done with getting and setting off all the like private global variables.

69
00:07:12,450 --> 00:07:21,510
Now our next concern is tools like yes for calculating the checking with zero.

70
00:07:21,630 --> 00:07:28,980
So here we have two types of accounts checking and savings.

71
00:07:29,010 --> 00:07:39,810
Now suppose if the user inputs one and he or she wishes to withdraw funds from the checking account.

72
00:07:39,840 --> 00:07:48,180
So we have to set our like mathematical calculating function, which is going to like calculate the

73
00:07:48,180 --> 00:07:55,650
amount which will be left in the checking balance after that specific withdrawal.

74
00:07:55,740 --> 00:07:58,020
So public.

75
00:08:00,150 --> 00:08:04,230
Double, which is the data type for the balance.

76
00:08:04,650 --> 00:08:06,600
Get checking balance.

77
00:08:07,440 --> 00:08:16,650
And like we are going to calculate so public double calculate the checking balance.

78
00:08:20,160 --> 00:08:21,720
Just replacing this.

79
00:08:21,780 --> 00:08:24,600
Get it, calculate.

80
00:08:25,880 --> 00:08:27,380
And here we are.

81
00:08:27,710 --> 00:08:32,890
This is going to contain our amount as argument.

82
00:08:33,530 --> 00:08:36,380
And this is going to be a double data type.

83
00:08:36,380 --> 00:08:45,650
Again, inside this calculating function, we are going to like update this checking balance.

84
00:08:46,130 --> 00:08:56,540
So checking balance minus that amount, the user inputs for which to draw from the checking account,

85
00:08:56,540 --> 00:08:57,380
of course.

86
00:08:57,560 --> 00:09:08,030
So after this, let us enclose this inside a bracket for a better code representation.

87
00:09:08,240 --> 00:09:14,450
And this is going to return the checking balance after the successful withdrawal.

88
00:09:15,140 --> 00:09:22,400
So, yes, this is the method for calculating the share, like checking the.

89
00:09:23,820 --> 00:09:25,260
Checking withdrawal.

90
00:09:26,590 --> 00:09:29,410
Not the balance which to draw.

91
00:09:30,010 --> 00:09:32,470
This method is for the bit to draw.

92
00:09:32,680 --> 00:09:33,610
So yes.

93
00:09:35,490 --> 00:09:37,210
And here we have balance.

94
00:09:37,230 --> 00:09:41,490
So after the withdraw, the balance is going to be updated.

95
00:09:41,790 --> 00:09:46,890
So this is the method for calculating the checking with the draw method.

96
00:09:46,980 --> 00:09:52,860
Now, in the similar way, we are going to calculate the saving withdraw.

97
00:09:53,010 --> 00:10:02,820
So I will be copying this same function and pasting it here for calculating the saving withdraw.

98
00:10:03,210 --> 00:10:09,960
So just replacing the checking with her saving and Korea.

99
00:10:11,610 --> 00:10:14,580
So, yes, this is for saving.

100
00:10:14,760 --> 00:10:19,080
The argument will be amount no change there.

101
00:10:19,710 --> 00:10:28,530
Just the checking part will be changed with the saving part and everything will be just remain same.

102
00:10:29,370 --> 00:10:36,270
So yes, this is the function for calculating the saving withdrawal balance.

103
00:10:36,390 --> 00:10:40,590
Now we are done with the withdrawal balance calculation.

104
00:10:40,620 --> 00:10:49,920
Our next concern is to calculate the deposit balance for both the checking account and the savings account.

105
00:10:50,190 --> 00:10:53,370
So, yes, we will be doing that.

106
00:10:54,210 --> 00:11:03,180
So here we are done with savings deposit and like checking deposit where we have already covered the

107
00:11:03,180 --> 00:11:06,780
saving withdraw and the checking withdrawal function.

108
00:11:06,900 --> 00:11:10,400
Now similar way we have checked the deposit.

109
00:11:10,410 --> 00:11:18,240
So for the withdrawal we have to subtract the checking balance from the amount which is to be withdrawn.

110
00:11:18,390 --> 00:11:25,620
And for the deposit, we have to add whether it be the checking balance or the savings balance with

111
00:11:25,620 --> 00:11:33,850
the amount which is going to be deposited as deposit is to the bank and withdrawals away from the bank.

112
00:11:33,870 --> 00:11:37,260
So yes, that calculation is performed in that manner.

113
00:11:37,680 --> 00:11:44,480
Now for calculating the transfer, whether it be from checking and savings.

114
00:11:44,490 --> 00:11:48,740
So for that, we have to like check two things.

115
00:11:48,750 --> 00:11:53,550
We have to subtract checking balance from the amount.

116
00:11:53,580 --> 00:12:01,110
If the transfer is from checking account and if the transfer is from the savings account, we have to

117
00:12:01,110 --> 00:12:04,170
subtract that amount from the savings balance.

118
00:12:04,380 --> 00:12:12,330
And the second part of this thing is the savings balance will be updated with the amount which is transferred

119
00:12:12,330 --> 00:12:19,350
from the savings balance to the saver, like checking balance to the savings balance and vice versa

120
00:12:19,500 --> 00:12:22,320
for this savings transfer.

121
00:12:22,680 --> 00:12:30,360
So yes, that subtractions and additions are going to be performed in a similar way for both the types

122
00:12:30,360 --> 00:12:31,530
of transfers.

123
00:12:31,770 --> 00:12:43,530
Now our next concern is to like we have performed everything about the calculation of like withdrawal,

124
00:12:43,530 --> 00:12:45,720
deposits and transfers.

125
00:12:45,750 --> 00:12:54,000
Now the next thing we are going to cover is to create a function for getting the withdrawal input from

126
00:12:54,000 --> 00:12:56,820
the checking and savings accounts.

127
00:12:56,940 --> 00:12:58,560
So yes.

128
00:13:00,300 --> 00:13:00,510
Okay.

129
00:13:01,130 --> 00:13:10,190
This get method is used to get the withdrawal input from the user and we are like checking our exception

130
00:13:10,190 --> 00:13:17,960
kind of thing for the input which the user like made for withdrawing some money from the checking account.

131
00:13:18,050 --> 00:13:22,130
And we are going to do similar for the savings account withdrawal as well.

132
00:13:22,160 --> 00:13:34,730
So suppose the user input some money like he or she wants to withdraw ₹2,000 or dollars from the checking

133
00:13:34,820 --> 00:13:35,540
account.

134
00:13:35,630 --> 00:13:38,390
So the system is going to try.

135
00:13:39,050 --> 00:13:44,270
Yes, the current checking account balance will be printed in every step.

136
00:13:44,270 --> 00:13:52,700
We have already like discussed this in the introduction part and the money will be yes displayed in

137
00:13:52,700 --> 00:14:01,460
the form of money format and checking balance variable is called her system is going to return amount

138
00:14:01,460 --> 00:14:07,550
you want to withdraw and this is going to like the kind of scanner it is going to scan the input from

139
00:14:07,550 --> 00:14:08,600
the user.

140
00:14:08,780 --> 00:14:16,850
So yes, it will be asking for the amount to be withdrawn and it is going to check that whether that

141
00:14:17,630 --> 00:14:20,300
input amount is a valid or not.

142
00:14:20,420 --> 00:14:28,160
So first thing, it is checking that the amount is greater than the balance.

143
00:14:28,160 --> 00:14:35,600
So suppose you have 10,000 in your account and you are willing to like withdraw 20,000, then this is

144
00:14:35,600 --> 00:14:36,920
not going to happen.

145
00:14:36,920 --> 00:14:41,060
The balance is greater than the like.

146
00:14:41,060 --> 00:14:44,660
The withdrawn balance is greater than the account balance.

147
00:14:44,660 --> 00:14:51,290
So this is going to be checked inside this try and catch exception handling methods.

148
00:14:51,650 --> 00:14:54,260
You also the balance cannot be negative.

149
00:14:54,260 --> 00:14:58,310
So yes, that's what I like.

150
00:14:58,880 --> 00:14:59,390
Yes.

151
00:14:59,510 --> 00:15:08,030
That said about so the balance will become negative if the withdrawn amount is 20,000 and the already

152
00:15:08,030 --> 00:15:10,580
present balances 10,000.

153
00:15:10,700 --> 00:15:12,860
So it is going to like output.

154
00:15:12,860 --> 00:15:14,720
That balance cannot be negative.

155
00:15:14,720 --> 00:15:18,290
Enter a valid input to be withdrawn.

156
00:15:18,290 --> 00:15:26,390
Similarly for the savings account, we have the same trying catch exception method for the savings account

157
00:15:26,390 --> 00:15:30,320
in the similar way of the withdraw input account.

158
00:15:30,800 --> 00:15:34,940
So checking some savings accounts works in a similar manner.

159
00:15:36,740 --> 00:15:39,080
So this is for checking deposit.

160
00:15:39,140 --> 00:15:45,920
So yes, similar the way we we were withdrawing the money.

161
00:15:46,010 --> 00:15:53,240
We are going to deposit money to the checking account and this is going to ask like current checking

162
00:15:53,330 --> 00:15:54,170
account balance.

163
00:15:54,170 --> 00:16:00,350
Oh yes, it will display the current balance and after which it will ask that what is the money you

164
00:16:00,350 --> 00:16:02,510
want to deposit to your checking account?
