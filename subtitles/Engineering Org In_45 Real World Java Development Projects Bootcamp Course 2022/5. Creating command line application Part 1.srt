1
00:00:00,560 --> 00:00:00,750
Okay.

2
00:00:01,570 --> 00:00:10,540
So we already created this symmetric key generator part, which is generating a symmetric key of.

3
00:00:11,180 --> 00:00:13,940
Ciphertext using a algorithm.

4
00:00:15,900 --> 00:00:22,920
So we don't regret this because Java security, this package will take care of this all welcome.

5
00:00:22,980 --> 00:00:31,560
So we don't want to and as I told you, while developing this code, I told you it will always create

6
00:00:31,560 --> 00:00:34,080
another key difference here.

7
00:00:34,290 --> 00:00:39,300
So you require this XML also, which is Java X bind.

8
00:00:40,490 --> 00:00:42,760
Or you can use Java XML.

9
00:00:42,800 --> 00:00:45,620
You may find this on internet or this is Java.

10
00:00:45,650 --> 00:00:49,220
You have to download another dependency if you are using mine.

11
00:00:49,370 --> 00:00:52,450
You have to use dependency injection directly here.

12
00:00:53,350 --> 00:00:55,970
I am not currently using Maven, so I need to.

13
00:00:57,610 --> 00:01:01,540
Mention this directly, so let us see.

14
00:01:01,690 --> 00:01:03,400
We already created this.

15
00:01:03,790 --> 00:01:07,480
So now I'm going to create full project for this.

16
00:01:07,480 --> 00:01:13,060
So we close this part and this is on the added part.

17
00:01:14,470 --> 00:01:15,850
What I'm going to do is not.

18
00:01:17,010 --> 00:01:18,750
I'm going to create your one app.

19
00:01:18,750 --> 00:01:24,540
So let me give the names app dot Java Java Class App.

20
00:01:28,150 --> 00:01:36,310
So what I'm doing, I created this symmetric case for representation, but for the App Command interface.

21
00:01:36,550 --> 00:01:38,530
I'm going to proceed with this.

22
00:01:39,520 --> 00:01:42,670
Then what I'm going to mention is.

23
00:01:44,840 --> 00:01:46,190
Eat this.

24
00:01:46,600 --> 00:01:47,960
I'll go first.

25
00:01:48,020 --> 00:01:49,760
So again, that's simple.

26
00:01:49,760 --> 00:01:53,560
But in first I used your public static.

27
00:01:53,780 --> 00:01:55,700
Now I'm going to use private here.

28
00:01:56,030 --> 00:02:07,520
Remember that private I need to mention, or I don't want to change this algorithm later so no one is

29
00:02:07,520 --> 00:02:15,530
going to change this as a as the time going to mention after this.

30
00:02:17,300 --> 00:02:19,280
Using BLOCK.

31
00:02:21,270 --> 00:02:23,340
Safe would say for the block.

32
00:02:23,340 --> 00:02:24,090
It's a technique.

33
00:02:24,090 --> 00:02:33,960
CB Technique commonly known as CB is to ensure that block of separate text never going to change static.

34
00:02:35,330 --> 00:02:46,700
Finally green or I'm using the name as is sip siphon siphon.

35
00:02:47,660 --> 00:02:57,660
Now remember is slash which are going on CBS for lack of ciphertext of CBS.

36
00:02:58,520 --> 00:03:03,770
And remember there is one another thing here and p c.

37
00:03:06,770 --> 00:03:08,000
It's for you.

38
00:03:08,580 --> 00:03:12,860
Remember, this four party package is for you.

39
00:03:14,530 --> 00:03:16,480
Mostly Package C is for you.

40
00:03:18,410 --> 00:03:19,030
Pending.

41
00:03:21,230 --> 00:03:22,160
I'm going to use it.

42
00:03:22,550 --> 00:03:25,040
So this is about all about how I'm going to use.

43
00:03:26,100 --> 00:03:30,930
Now I'm going to create one static scanner.

44
00:03:30,950 --> 00:03:32,240
Private static scanner.

45
00:03:34,330 --> 00:03:34,900
Scandal.

46
00:03:35,650 --> 00:03:40,150
And let me mean in your message, but.

47
00:03:41,820 --> 00:03:43,710
So now we've done with this?

48
00:03:44,490 --> 00:03:44,940
No.

49
00:03:48,390 --> 00:03:50,400
I need to mention May 3rd.

50
00:03:55,990 --> 00:03:58,150
Here's what I'm going to do.

51
00:03:58,810 --> 00:04:00,670
I need to create static.

52
00:04:01,120 --> 00:04:01,430
Why?

53
00:04:01,480 --> 00:04:02,650
I required static.

54
00:04:03,010 --> 00:04:04,600
As I told you in previous

55
00:04:06,790 --> 00:04:09,550
tutorial or previous video.

56
00:04:09,580 --> 00:04:12,340
We created that part already.

57
00:04:12,670 --> 00:04:18,760
So similarly, what we required is we required one static key here.

58
00:04:19,240 --> 00:04:22,870
Static key generator or security?

59
00:04:23,090 --> 00:04:24,480
Security static.

60
00:04:24,640 --> 00:04:27,610
So let me create one secret.

61
00:04:29,450 --> 00:04:31,130
We tried to create security.

62
00:04:31,700 --> 00:04:35,050
So, again, it's simple as we already created this.

63
00:04:35,840 --> 00:04:36,920
It should be public.

64
00:04:37,400 --> 00:04:39,920
Public static.

65
00:04:41,900 --> 00:04:46,160
Secret game and great secret JavaScript.

66
00:04:46,430 --> 00:04:48,260
I'm going to use your secret key.

67
00:04:53,690 --> 00:05:10,250
Create yet a is because it is so it should be easy now we done with this so it shows so no secure random

68
00:05:10,250 --> 00:05:20,750
thing that will secure random java for randomizing everything secure random let me small and between

69
00:05:20,750 --> 00:05:21,320
new.

70
00:05:22,720 --> 00:05:23,210
So good.

71
00:05:25,570 --> 00:05:26,950
So that's for.

72
00:05:30,240 --> 00:05:36,750
Randomizing a gene I need to randomize again.

73
00:05:36,780 --> 00:05:42,420
When I were putting new messages like first I put hello for that hello message.

74
00:05:42,450 --> 00:05:43,860
The key should be different.

75
00:05:43,980 --> 00:05:49,800
If I put the next message by for that, my key should be different always.

76
00:05:51,800 --> 00:05:55,340
Then he generated I'm going to use key generator.

77
00:05:55,850 --> 00:05:57,290
That's the key.

78
00:05:59,210 --> 00:06:02,210
We want this key generator.

79
00:06:05,770 --> 00:06:06,520
Degenerative.

80
00:06:09,250 --> 00:06:11,020
Don't get instant.

81
00:06:11,080 --> 00:06:13,120
Just instant, instant.

82
00:06:13,360 --> 00:06:15,370
I need to mention algorithm A.

83
00:06:19,890 --> 00:06:21,750
So it's been.

84
00:06:27,130 --> 00:06:31,720
An exceptionally close search algorithm.

85
00:06:36,010 --> 00:06:37,570
So I need to handle exceptional.

86
00:06:39,130 --> 00:06:40,460
Then similar thing.

87
00:06:40,480 --> 00:06:42,130
I would use a generator.

88
00:06:42,340 --> 00:06:50,170
Generator, I need to initialize it now because I haven't created I need to initialize the generator

89
00:06:50,170 --> 00:06:50,800
in it.

90
00:06:51,490 --> 00:06:56,620
Basically initial 56, similar random connection slash secure random.

91
00:06:56,620 --> 00:06:57,380
I'm going to lose.

92
00:06:59,960 --> 00:07:01,050
So good, right?

93
00:07:02,390 --> 00:07:03,170
Let me.

94
00:07:04,940 --> 00:07:05,420
Now.

95
00:07:06,220 --> 00:07:07,850
I need to create security here.

96
00:07:08,320 --> 00:07:11,040
Security is my security.

97
00:07:12,310 --> 00:07:18,090
Jail and duty is equal to Gideon Rita.

98
00:07:20,410 --> 00:07:22,550
And not this key generator.

99
00:07:22,570 --> 00:07:25,180
Key that key generator.

100
00:07:25,510 --> 00:07:33,430
Key generator dot generators, which is default metal and which is going to be the key.

101
00:07:36,420 --> 00:07:41,310
So let me tell you what is all these things we already created here, so.

102
00:07:43,970 --> 00:07:46,060
Let me mention this again.

103
00:07:46,070 --> 00:07:46,640
Your.

104
00:07:48,360 --> 00:07:48,650
Who?

105
00:07:51,730 --> 00:07:53,620
Avoid the confusion confusion part.

106
00:07:53,620 --> 00:07:55,240
So it's going to return the.

107
00:07:56,590 --> 00:08:00,130
Now I need to create one victor part.

108
00:08:00,130 --> 00:08:03,670
So let me tell you, what is this method?

109
00:08:04,510 --> 00:08:07,660
Do you need a vector?

110
00:08:10,450 --> 00:08:13,150
I need to create a vector which.

111
00:08:15,320 --> 00:08:20,550
Any hints why I need to pass the message bite by bite.

112
00:08:21,100 --> 00:08:25,450
So for this purpose, I'm going to be public static.

113
00:08:26,930 --> 00:08:28,180
Bite me.

114
00:08:28,430 --> 00:08:28,880
Bite.

115
00:08:32,400 --> 00:08:37,980
What I need in not only this bite, I need it create initially.

116
00:08:38,280 --> 00:08:41,340
So I'm going to mention it.

117
00:08:41,380 --> 00:08:45,290
Create an issue.

118
00:08:45,660 --> 00:08:46,620
So this is my name?

119
00:08:46,620 --> 00:08:49,320
No initial.

120
00:08:54,400 --> 00:09:02,020
But you then could create initialization vectors, as I mentioned, as we saw with radiation.

121
00:09:02,440 --> 00:09:03,370
This is my name.

122
00:09:06,030 --> 00:09:08,370
I'm going to use some methods.

123
00:09:08,460 --> 00:09:08,940
So.

124
00:09:11,040 --> 00:09:14,880
Nick Minchin used with encryption.

125
00:09:15,270 --> 00:09:17,340
I need to encrypt something in this data.

126
00:09:17,340 --> 00:09:21,820
So for this purpose, what I'm going to do by.

127
00:09:27,460 --> 00:09:29,170
No, no.

128
00:09:29,170 --> 00:09:29,860
Remember.

129
00:09:29,890 --> 00:09:32,020
I need to create initialization vector.

130
00:09:32,020 --> 00:09:34,410
So initial.

131
00:09:35,560 --> 00:09:36,940
I'm going to mention you.

132
00:09:40,430 --> 00:09:41,520
We will take this.

133
00:09:44,040 --> 00:09:44,700
There's.

134
00:09:52,370 --> 00:09:54,530
You let me use camel case.

135
00:09:59,190 --> 00:10:02,640
So there may be no errors using camel case.

136
00:10:02,670 --> 00:10:12,990
No typos is equal to if you know no by mentioning 60 by 66 and point six, then it will let you do 56.

137
00:10:13,860 --> 00:10:15,960
Then I need to secure random.

138
00:10:21,260 --> 00:10:23,820
Now remember why I need to know?

139
00:10:23,840 --> 00:10:27,470
Because I need to again create a secure, random thing here.

140
00:10:28,920 --> 00:10:32,540
Randomizing every part I need to create every thing.

141
00:10:32,540 --> 00:10:36,380
Random is not only the key gene part, but also.

142
00:10:38,770 --> 00:10:41,460
Achieving the 100% randomizing.

143
00:10:46,120 --> 00:10:46,740
Secure.

144
00:10:46,750 --> 00:10:48,820
Random dot.

145
00:10:49,390 --> 00:10:50,320
Next byte.

146
00:10:50,920 --> 00:10:51,790
Next byte.

147
00:10:53,210 --> 00:10:57,740
And what I need to mention is the victor part, which is basically.

148
00:11:00,320 --> 00:11:02,330
Initially we so.

149
00:11:03,220 --> 00:11:04,360
That I already mentioned.

150
00:11:05,110 --> 00:11:06,610
And what it should be.

151
00:11:07,090 --> 00:11:08,270
It should do return.

152
00:11:08,410 --> 00:11:09,400
Initial return.

153
00:11:10,760 --> 00:11:11,890
But it should be work.

154
00:11:11,990 --> 00:11:13,880
It should be done this part.

155
00:11:18,390 --> 00:11:18,990
Encrypt.

156
00:11:23,880 --> 00:11:25,710
We will do this later.

157
00:11:29,550 --> 00:11:32,520
What we are going to do is I'm going to start.

158
00:11:33,120 --> 00:11:35,670
And let me optimize the inputs because.

159
00:11:38,320 --> 00:11:44,680
It's very useful to optimise inputs on just optimising inputs to avoid.

160
00:11:49,070 --> 00:11:50,390
Modeling delays.

161
00:11:50,990 --> 00:11:52,730
So I created this.

162
00:11:53,540 --> 00:12:01,160
Now I need to create which functions is going to take plaintext with the key with the initialization

163
00:12:01,160 --> 00:12:05,910
and its vector and another vector to convert plaintext to a ciphertext.

164
00:12:05,960 --> 00:12:08,840
So we need to create that part also.

165
00:12:08,840 --> 00:12:09,290
So.

166
00:12:10,910 --> 00:12:12,530
Return to.

167
00:12:15,770 --> 00:12:18,050
A plain text.

168
00:12:20,070 --> 00:12:27,210
And which key convert to ciphertext.

169
00:12:28,500 --> 00:12:28,900
Okay.

170
00:12:28,920 --> 00:12:30,830
So I need to get this also.

171
00:12:31,930 --> 00:12:34,780
So public static.

172
00:12:35,950 --> 00:12:36,910
Static.

173
00:12:37,780 --> 00:12:38,680
Bite again.

174
00:12:38,680 --> 00:12:39,220
Bite.

175
00:12:40,960 --> 00:12:46,030
Oh, let me mention names do a is encryption.

176
00:12:50,640 --> 00:12:52,320
I need to get this encryption.

177
00:12:54,700 --> 00:12:57,220
And inside this inscription, what I'm going to do.

178
00:12:58,980 --> 00:13:01,020
String and string.

179
00:13:03,710 --> 00:13:07,570
Plain text once you.

180
00:13:08,870 --> 00:13:09,620
Secret key.

181
00:13:09,860 --> 00:13:12,180
Information security.

182
00:13:12,250 --> 00:13:13,010
Secret key.

183
00:13:16,000 --> 00:13:17,380
And I need to mention it.

184
00:13:21,880 --> 00:13:22,450
Now.

185
00:13:22,450 --> 00:13:28,030
It is a very long method, so we will create it by.

186
00:13:31,400 --> 00:13:32,570
Small, small building.

187
00:13:32,600 --> 00:13:32,930
But.

188
00:13:35,500 --> 00:13:37,540
So let me tell you one thing here.

189
00:13:39,370 --> 00:13:42,730
Let me put these things as attributes, not as my.

190
00:13:49,630 --> 00:13:50,150
Kings.

191
00:13:50,560 --> 00:13:52,420
And let me tell you why.

192
00:13:53,200 --> 00:13:58,780
It's a tribute because two things are that one.

193
00:14:09,190 --> 00:14:10,180
Initiate.

194
00:14:12,840 --> 00:14:13,770
Or.

195
00:14:15,760 --> 00:14:16,040
With.

196
00:14:16,540 --> 00:14:25,570
I would view them as like this closing this because there are too many things here which are going to

197
00:14:26,080 --> 00:14:27,850
cause me the exception also.

198
00:14:32,180 --> 00:14:35,330
So that's what we required for this.

199
00:14:35,450 --> 00:14:39,440
So these are the plaintiffs security and initial victories.

200
00:14:39,440 --> 00:14:40,520
They're attributes.

201
00:14:41,210 --> 00:14:45,500
And now we are going to create one ciphertext and everything here.

202
00:14:47,470 --> 00:14:49,780
Who let me mention cipher cipher.

203
00:14:51,420 --> 00:14:53,610
Seafood is equal to.

204
00:14:55,370 --> 00:14:56,270
Seven.

205
00:14:57,490 --> 00:14:58,960
But get instance.

206
00:14:59,750 --> 00:15:00,920
You can get insurance.

207
00:15:02,850 --> 00:15:03,180
A.

208
00:15:07,580 --> 00:15:13,300
It is typing on a cipher.

209
00:15:21,090 --> 00:15:22,410
It's so full.

210
00:15:26,420 --> 00:15:28,820
I'll go get them.

211
00:15:29,930 --> 00:15:30,770
So.

212
00:15:38,910 --> 00:15:39,870
It is not.

213
00:15:40,650 --> 00:15:41,700
We currently.

214
00:15:45,940 --> 00:15:50,800
Next name is ASCAP, our algorithm.

215
00:15:51,490 --> 00:15:51,910
Where is that?

216
00:15:51,950 --> 00:15:55,390
Okay, so the CBS cipher block its algorithm is.

217
00:15:57,780 --> 00:15:58,710
I want to say for a good.

218
00:16:00,480 --> 00:16:00,620
No.

219
00:16:00,750 --> 00:16:11,870
What I'm going to do this force, I forbid I required some IV parameters, specs of that part and everything.

220
00:16:11,880 --> 00:16:16,200
So we will do that part later.

221
00:16:16,440 --> 00:16:24,780
So consider I created two vectors with byte, which is initial vector for initializing the randomizing

222
00:16:24,780 --> 00:16:25,440
the part.

223
00:16:25,440 --> 00:16:31,860
And second is to take plaintext and key convert and with the key convert to the ciphertext.

224
00:16:32,010 --> 00:16:33,120
So hope you understand.

225
00:16:33,120 --> 00:16:35,610
In the next part we are going to complete this.
