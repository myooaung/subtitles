WEBVTT
1
00:00:01.530 --> 00:00:09.540
So in this video we will be talking about the font chooser class which will be creating and this will

2
00:00:09.540 --> 00:00:16.620
help us to choose different fonts, its type and its size over the text area on which we will be.

3
00:00:16.710 --> 00:00:23.580
There will be some content and it will change the font for that particular content or the sequence of

4
00:00:23.580 --> 00:00:26.390
characters which we have written over the text area.

5
00:00:26.400 --> 00:00:27.770
So let's start this.

6
00:00:27.780 --> 00:00:37.380
It is this class is defined inside the package and we have imported the Java IO class package for this

7
00:00:37.380 --> 00:00:40.290
class and we have checked for the import java.

8
00:00:40.500 --> 00:00:42.210
JWT also imported.

9
00:00:42.210 --> 00:00:44.820
This will help us to create graphical user interface.

10
00:00:46.110 --> 00:00:52.500
And in both our event, which will help us to handle events over the buttons.

11
00:00:52.500 --> 00:01:00.480
And then we have imported Java X-Wing, which is a modified version of the package, and then we have

12
00:01:00.480 --> 00:01:02.670
imported Java exports with an event.

13
00:01:03.870 --> 00:01:04.350
After that.

14
00:01:04.350 --> 00:01:09.030
What we did is we have defined our class font demo, which is extending the frame.

15
00:01:10.550 --> 00:01:14.510
So inside this font user class, we have also defined a font demo.

16
00:01:14.690 --> 00:01:22.360
Now what we are doing inside the font demo is we have defined font user object as null.

17
00:01:22.400 --> 00:01:24.530
First we have defined its object as null.

18
00:01:24.560 --> 00:01:27.980
Then what we are doing is we have defined the text availability.

19
00:01:28.010 --> 00:01:32.140
After that, what we are doing is a defined edge button off named as font button.

20
00:01:32.150 --> 00:01:40.190
Now inside the font demo class we have created a font demo non parameterized constructor inside which

21
00:01:40.190 --> 00:01:42.950
we have headed as labeled as font.

22
00:01:42.950 --> 00:01:46.880
And after that there is a we have defined the text area.

23
00:01:48.330 --> 00:01:51.960
Is equal to new huge area of this size seven comma 20.

24
00:01:51.960 --> 00:01:54.660
So that will initialize the text area to our frame.

25
00:01:54.780 --> 00:02:00.690
After that, we have set font button with the new J button and it will be labeled as set font.

26
00:02:00.690 --> 00:02:06.420
So this button will be used to move us to the dialog box, which will help us to change the font style,

27
00:02:06.420 --> 00:02:07.440
size and type.

28
00:02:09.300 --> 00:02:15.630
After that, we have defined action listener as equals to new action listener, and inside this we have

29
00:02:15.630 --> 00:02:23.070
defined the action performed event which is taking an action event object as e v and after that we have

30
00:02:23.070 --> 00:02:25.380
inside the action performed method.

31
00:02:25.380 --> 00:02:31.830
We have defined the if statement inside which if dialog is equals to null.

32
00:02:31.830 --> 00:02:35.190
So dialog is what the font chooses object.

33
00:02:35.190 --> 00:02:36.690
So if that is null.

34
00:02:37.700 --> 00:02:41.930
What we are doing is we are initializing the dialog as equals to new font users.

35
00:02:41.930 --> 00:02:48.480
So we will make now calling the class phone user and pass the argument as to get font.

36
00:02:48.500 --> 00:02:55.040
So we have passed the argument to the constructor of the font user class with the to get font method

37
00:02:55.040 --> 00:02:57.860
and stored in the dialog variable.

38
00:02:59.360 --> 00:03:04.130
Now if the dialog dots show dialogue font demo and choose font.

39
00:03:04.130 --> 00:03:10.220
So if this will be true, so what we will be doing is we will be calling font demo dot this dot text

40
00:03:10.220 --> 00:03:14.300
area variable dot set font is also dialog dialog dot create font.

41
00:03:14.300 --> 00:03:17.960
So this will call the create font method of over the dialog.

42
00:03:17.960 --> 00:03:23.120
So that will be changing the font style of that text area inside the class.

43
00:03:24.710 --> 00:03:27.710
After that, we have closed our class.

44
00:03:28.780 --> 00:03:30.040
Or action is not method.

45
00:03:30.040 --> 00:03:34.290
And after that we have defined here font button dot action listener.

46
00:03:34.300 --> 00:03:37.180
So we have added action listener to our font button with the argument.

47
00:03:37.180 --> 00:03:41.430
AC Because we have created an instance of the action listener.

48
00:03:41.440 --> 00:03:41.920
AC.

49
00:03:42.550 --> 00:03:47.650
After that, what we are doing is we are adding the text area with the border layout as center to our

50
00:03:47.650 --> 00:03:48.190
frame.

51
00:03:48.190 --> 00:03:53.020
Then we have added the font button with the border layout south to our frame.

52
00:03:54.160 --> 00:03:55.930
And set the default close operation.

53
00:03:55.930 --> 00:04:02.590
So whenever the window will be closed, it will conclude over this class and close the operations in

54
00:04:02.590 --> 00:04:03.280
this class.

55
00:04:04.530 --> 00:04:11.430
After that, we have defined the bound for the frame, which will be 50 over 50 its location and 400

56
00:04:11.430 --> 00:04:15.750
cross 400 will be its size, not text, area DOT opined.

57
00:04:17.400 --> 00:04:19.230
Is now inside the text.

58
00:04:19.340 --> 00:04:20.670
Here we are, inserting the values.

59
00:04:20.670 --> 00:04:21.930
So this is the values.

60
00:04:21.990 --> 00:04:22.500
Hello, dear.

61
00:04:22.500 --> 00:04:23.160
How are you?

62
00:04:23.160 --> 00:04:25.710
And the append via.

63
00:04:25.710 --> 00:04:26.940
This is the another.

64
00:04:28.200 --> 00:04:31.070
Kind of a string we have appended in the text area.

65
00:04:31.080 --> 00:04:33.390
Then there is another numeric string.

66
00:04:33.390 --> 00:04:34.440
We have a.

67
00:04:35.460 --> 00:04:38.760
Inserted in the text, video and some sequence of characters.

68
00:04:39.960 --> 00:04:43.050
So these details will be inserted inside our text area.

69
00:04:43.050 --> 00:04:50.190
And whatever the font type is, styling or size will be chosen will be reflected in this text area content.

70
00:04:51.500 --> 00:04:57.440
After that we have set the visibility as to now inside the public static WEIDEMANN method.

71
00:04:57.470 --> 00:05:03.140
What we are doing is we are first creating the phone demo plus instance.

72
00:05:03.440 --> 00:05:04.580
After that the.

73
00:05:05.950 --> 00:05:12.910
We have defined the font user class, public class one user, which is extending the panel.

74
00:05:14.790 --> 00:05:16.200
Inside the font user class.

75
00:05:16.200 --> 00:05:20.540
What we have did is private, private font this font.

76
00:05:20.550 --> 00:05:26.940
So what it is doing is it is creating a private type of font variable named as this font and a private

77
00:05:26.940 --> 00:05:31.100
type of j list variables g is just style and size.

78
00:05:31.110 --> 00:05:37.980
Then there is a private type of dialog variable labeled as dialog and a button which is okay button.

79
00:05:39.640 --> 00:05:45.130
Now there is a text area also pdf and boolean variable as.

80
00:05:45.260 --> 00:05:45.830
Okay.

81
00:05:47.440 --> 00:05:54.610
Now inside the public font user parameterized constructor, we are passed the object of font with font

82
00:05:54.610 --> 00:05:57.730
and said that this font is equals to read font.

83
00:05:57.760 --> 00:06:03.580
After that we have initialized the area of the string named as font name inside which we have what it

84
00:06:03.580 --> 00:06:07.000
is graphics environment or set local graphics environment.

85
00:06:07.000 --> 00:06:12.610
So it will set the local graphics environment and get available font family names.

86
00:06:12.610 --> 00:06:17.920
So inside the string font name, with the help of the graphics environment and local graphics environment

87
00:06:17.920 --> 00:06:23.950
method, we will get the available font family name so it will list all the font family names in our

88
00:06:24.040 --> 00:06:25.920
string added font names.

89
00:06:25.930 --> 00:06:29.350
After that what we are doing is phase is it goes to new J list.

90
00:06:29.350 --> 00:06:35.350
So as the first variable is a kind of list, here it is GFS variable is a kind of list.

91
00:06:35.350 --> 00:06:43.030
So what you are doing is JFS is equals to new list and pass that font name list into that JFS.

92
00:06:45.140 --> 00:06:48.580
After that first dot set selected indexes was two zero.

93
00:06:48.590 --> 00:06:52.310
So default the first font will be selected in the list.

94
00:06:52.490 --> 00:06:57.470
After that, we have added phase dot, added action add list, selection list.

95
00:06:57.740 --> 00:07:03.920
So for the list, we have added the selection list now and inside which we have created the instance

96
00:07:03.920 --> 00:07:10.310
of the selection list and we have defined the method public void value changed with the list selection

97
00:07:10.310 --> 00:07:14.890
event eve and inside which we have defined for set font or create font.

98
00:07:14.900 --> 00:07:20.600
So it will be creating a font on the basis of the font which we will be selecting.

99
00:07:20.960 --> 00:07:23.720
After that, we have defined another string.

100
00:07:25.290 --> 00:07:27.720
A string array as font styles.

101
00:07:27.720 --> 00:07:31.350
Those these font styles will be a regular italic, bold or bold italic.

102
00:07:31.350 --> 00:07:33.100
So this could be the font styles.

103
00:07:33.120 --> 00:07:38.460
After that, there is a J style list in which a new j list.

104
00:07:38.460 --> 00:07:43.980
So we have parsed string array for font styles and then we have set the select index as zero.

105
00:07:43.980 --> 00:07:50.730
So at first the regular select regular type of the styles will be selected for the font.

106
00:07:52.190 --> 00:07:58.910
Then similarly we have defined the ad list selection Lesnar and for the style list as well and define

107
00:07:58.910 --> 00:08:03.260
the public void value change the method with the list selection event.

108
00:08:03.260 --> 00:08:06.830
And what we are doing is we are setting the font by create font method.

109
00:08:06.830 --> 00:08:13.970
So this will also set the font whatever the changes will be happen happening in our text area.

110
00:08:15.410 --> 00:08:21.230
After that, we have defined a string array of font sizes and its size will be 13.

111
00:08:22.310 --> 00:08:28.640
We have iterated over those 30 sites with the help of the for loop and iterating variable as j.

112
00:08:28.670 --> 00:08:33.740
After that we have installed the string ten plus J and multiplied by two.

113
00:08:33.770 --> 00:08:41.540
What it is doing is it will show the size like ten, 12, 14, like in this manner as there is no odd

114
00:08:41.540 --> 00:08:43.310
sizes for the fonts.

115
00:08:43.310 --> 00:08:47.630
So after that what we are doing is j size new j list font sizes.

116
00:08:47.630 --> 00:08:53.450
So this will pass the create a list with the help of the string area of the font sizes.

117
00:08:53.450 --> 00:08:57.620
Then we will have selecting the default index at zero.

118
00:08:57.620 --> 00:09:01.490
So at first the size will be of ten, font size will be ten.

119
00:09:02.720 --> 00:09:03.230
After that.

120
00:09:03.230 --> 00:09:09.290
What we are doing is we are adding a list, a selection listener and defining the method.

121
00:09:10.400 --> 00:09:15.160
Value changed and then passing the selection event and inside which we will set the font with the help

122
00:09:15.160 --> 00:09:16.870
of create font method.

123
00:09:17.050 --> 00:09:25.570
Now we have defined another panel and set its layout as new grid layout one, comma three.

124
00:09:25.600 --> 00:09:33.010
After that, we have defined the added some of the labels like font j label dot center font style J,

125
00:09:33.040 --> 00:09:36.060
label dot center and size J Label or center.

126
00:09:36.070 --> 00:09:38.740
So these labels have been added into that panel.

127
00:09:38.770 --> 00:09:42.520
Now, we have also added the list in our panel.

128
00:09:43.470 --> 00:09:44.030
Sorry.

129
00:09:44.040 --> 00:09:49.620
We have also created a panel for the list and set its layout as grid layout and added the scroll panels

130
00:09:49.620 --> 00:09:53.160
of the JFS style and sizes to that list.

131
00:09:54.300 --> 00:10:00.090
So inside the list of the font family, font type and font size, we will be adding the scroll panels.

132
00:10:00.090 --> 00:10:06.840
So for that purpose we have passed all the lists in the respective scroll panels and added that to our

133
00:10:07.140 --> 00:10:08.130
J panel.

134
00:10:09.580 --> 00:10:11.320
Now there is an okay button.

135
00:10:11.320 --> 00:10:16.740
So okay button will be labeled as the OC and inside there will be also cancel button as well.

136
00:10:16.750 --> 00:10:22.070
So key button adding extension to the okay button defining the action listener action performing events.

137
00:10:22.090 --> 00:10:22.390
Okay.

138
00:10:22.390 --> 00:10:23.700
So goes to true font chooser.

139
00:10:23.710 --> 00:10:28.870
This font is close to font user does not create font, so it will initialize that is font instance to

140
00:10:28.870 --> 00:10:32.800
the create font and stance and set the dialog set as well as false.

141
00:10:32.920 --> 00:10:37.690
After that, for the cancel button, we have defined the action performed event and what we are doing

142
00:10:37.690 --> 00:10:39.910
is setting the visibility of the dialog as false.

143
00:10:41.520 --> 00:10:46.080
After that, we have defined the Japan as GB button, setting its layout as floor layout and take the

144
00:10:46.080 --> 00:10:53.070
okay button to that panel and creating a dummy label and adding a cancel button to that panel as well.

145
00:10:53.100 --> 00:10:57.830
After that, what we are doing is creating a text of 5.30 and the panel.

146
00:10:57.840 --> 00:11:01.630
After that we are adding the scroll panel for the text area and adding that to our panel.

147
00:11:01.650 --> 00:11:08.520
Then we have created a central panel as well for with the grid layout one and adding that list and text

148
00:11:08.520 --> 00:11:10.500
field both to that center panel.

149
00:11:10.620 --> 00:11:16.650
After that, we have defined the layout as the bottle layout, added the label panel with the bottle

150
00:11:16.650 --> 00:11:16.950
layout.

151
00:11:16.950 --> 00:11:22.710
North Central Panel has the bottle layout, center button layout, support for the GP button and added

152
00:11:22.710 --> 00:11:24.660
new dummy labels.

153
00:11:26.410 --> 00:11:29.890
Then we have set the font to this font for the text field.

154
00:11:29.890 --> 00:11:36.610
And inside the text field what we are doing is we are setting these in content inside that text area.

155
00:11:36.880 --> 00:11:44.220
Now we have defined the public font create font method inside which we have font to this font.

156
00:11:44.230 --> 00:11:49.950
After that we want a style font plain and accessible to style or get selected index.

157
00:11:49.960 --> 00:11:54.340
So we have passed the choice to the X and inside the case zero.

158
00:11:54.340 --> 00:11:56.020
Then all plain will be selected.

159
00:11:56.020 --> 00:12:02.340
If the case is two font italic it is bold and for the third is bold plus italic.

160
00:12:02.350 --> 00:12:07.770
After that font size will be cannot enter integer passing type casted and again the size selected value

161
00:12:07.780 --> 00:12:11.590
from the size and four for the name selected from the face and for the.

162
00:12:12.840 --> 00:12:19.200
Create a new fund with the help of the font name, font style and font size and return that font instance.

163
00:12:19.530 --> 00:12:25.920
After that, there is a show dialogue, boolean or type of method which is taking argument as parent

164
00:12:25.920 --> 00:12:26.970
and the string title.

165
00:12:26.970 --> 00:12:31.920
So boolean is okay equals to false after that frame owner is equals to null if parent and stands or

166
00:12:31.930 --> 00:12:36.270
frames if the instance of frame is the stance of the parent.

167
00:12:36.270 --> 00:12:41.580
So what we are doing here is only equals to frame parent and after that there is the owner equals to

168
00:12:41.580 --> 00:12:47.310
frame swing it target and instead of the class frame, not class parent or otherwise, the dialog box

169
00:12:47.310 --> 00:12:49.940
is null and the dialog don't get on or not as equals to owner.

170
00:12:49.950 --> 00:12:53.340
We will be showing that new dialog is also under common, true and dialog.

171
00:12:53.550 --> 00:12:56.550
Add this and after that dialog don't get room pin.

172
00:12:56.550 --> 00:12:58.350
It goes to set the default button.

173
00:12:58.350 --> 00:12:58.920
Okay button.

174
00:12:58.920 --> 00:13:02.630
After that we will set the size for the dialog box 400 comma 325.

175
00:13:02.640 --> 00:13:07.110
After that we will set the title for the dialog box and set the visibility of the dialog as true and

176
00:13:07.110 --> 00:13:09.090
return the okay boolean variable.

177
00:13:09.090 --> 00:13:11.190
So this is all from the our class.

178
00:13:11.190 --> 00:13:11.980
That is a font choose.
