1
00:00:02,110 --> 00:00:14,800
In previous videos, I already created that part and everything related to the network snipping and

2
00:00:14,800 --> 00:00:15,460
everything.

3
00:00:15,550 --> 00:00:18,700
So that's you were in, which is basically for 32 bit.

4
00:00:18,730 --> 00:00:20,950
So let us create one more thing here.

5
00:00:21,610 --> 00:00:29,620
So what I'm going to perform here is let me create one new project I'm using here again in the LG idea.

6
00:00:30,940 --> 00:00:34,960
I've previously used NetBeans to show that part.

7
00:00:35,680 --> 00:00:36,350
Go with my.

8
00:00:38,590 --> 00:00:40,560
Choose your tool.

9
00:00:40,660 --> 00:00:44,200
So I'm using this succinct version of my JDK.

10
00:00:48,150 --> 00:00:49,670
So it is detecting is.

11
00:00:49,920 --> 00:00:54,870
So wait for something it will detect the SDK and then automatically.

12
00:00:59,700 --> 00:01:03,030
Once this is done, we'll need to archive

13
00:01:05,760 --> 00:01:06,090
it really?

14
00:01:06,120 --> 00:01:07,290
For coordinates.

15
00:01:07,790 --> 00:01:09,110
So let me put here.

16
00:01:13,400 --> 00:01:18,210
And work Smith as we project.

17
00:01:26,500 --> 00:01:26,720
Around.

18
00:01:28,340 --> 00:01:34,220
You can finish so it will create a new project for me.

19
00:01:34,550 --> 00:01:36,100
So wait for some time.

20
00:01:36,110 --> 00:01:38,990
It will automatically create a new project.

21
00:01:39,290 --> 00:01:43,640
So while it's creating project, let us see why we should use mapping.

22
00:01:43,640 --> 00:01:51,230
So this for all the Java class and methods I already told you in the Mavin emerging of control.

23
00:01:51,320 --> 00:01:55,490
I don't want to use that dependencies directly.

24
00:01:55,490 --> 00:01:57,060
So what is the dependency?

25
00:01:57,070 --> 00:01:57,640
Dependency?

26
00:01:57,870 --> 00:02:01,460
Just basically connecting between two classes.

27
00:02:01,580 --> 00:02:03,800
I don't want to perform that directly.

28
00:02:05,030 --> 00:02:10,970
There are design patterns that are used to remove the dependencies in the code, which is basically

29
00:02:10,970 --> 00:02:19,790
inversion of control and they make code easier and here is for maintaining each and everything part.

30
00:02:20,210 --> 00:02:29,330
So for that purpose, I preferred your one example class employee address with address and employee,

31
00:02:29,510 --> 00:02:31,370
which is I need to perform there.

32
00:02:31,880 --> 00:02:32,630
Then.

33
00:02:33,770 --> 00:02:40,730
So I did consider that employee address and I'm assigning that address to the new address so you can

34
00:02:40,730 --> 00:02:41,240
check here.

35
00:02:41,240 --> 00:02:45,440
There is a directly dependency, tight coupling dependency.

36
00:02:45,860 --> 00:02:53,330
Likewise, if there is one error in employee class, then there is error occurring in address class

37
00:02:53,330 --> 00:02:53,870
also.

38
00:02:54,620 --> 00:03:01,160
So to remove this, what we required, we required EOC.

39
00:03:01,340 --> 00:03:05,030
So here what I'm doing, I'm that's a tight coupling thing.

40
00:03:05,060 --> 00:03:08,000
Tight coupling means we cannot lose that like tight ones.

41
00:03:08,000 --> 00:03:10,010
We cannot lose that bounce easy.

42
00:03:10,370 --> 00:03:13,640
So I see inversion of control.

43
00:03:14,150 --> 00:03:16,400
I also makes code loosely coupled.

44
00:03:16,430 --> 00:03:16,820
Such as?

45
00:03:16,820 --> 00:03:20,180
There is no need to modify a code or logic over environment.

46
00:03:20,180 --> 00:03:26,750
If we having error in employee as we are using this dot, at least it's not at all directly dependent

47
00:03:26,750 --> 00:03:30,640
to employee is dependent on the this address only.

48
00:03:31,010 --> 00:03:32,480
So it's loosely coupled.

49
00:03:33,350 --> 00:03:39,230
So in spring framework it's mostly used but I'm using here for my when also I'm not using your spring

50
00:03:39,230 --> 00:03:46,400
framework, but that's XML file or annotation I'm going to create here and I'm going to add it directly.

51
00:03:46,550 --> 00:03:53,120
So advantages of dependency injection is basically adding that dependencies in XML is it makes code

52
00:03:53,120 --> 00:03:53,990
smoothly coupled.

53
00:03:54,740 --> 00:03:58,640
It's easy to maintain and makes code easy to test and everything.

54
00:03:58,640 --> 00:04:05,300
So there are different advantages of also that there are predefined templates hibernates JPA everything

55
00:04:05,300 --> 00:04:11,930
in my well that's loosely coupled and this is really easy to test also.

56
00:04:12,050 --> 00:04:13,790
So that's all the things.

57
00:04:13,790 --> 00:04:15,830
So let us move to the IDE part.

58
00:04:17,000 --> 00:04:19,130
So currently you can check it's working.

59
00:04:22,380 --> 00:04:25,610
And it will create me for some files.

60
00:04:25,620 --> 00:04:30,450
So this is my form dot xml and this is my SLC.

61
00:04:32,300 --> 00:04:32,480
Okay.

62
00:04:32,480 --> 00:04:34,130
So to see me do three things.

63
00:04:34,160 --> 00:04:37,040
Java file and resources file and dot xml.

64
00:04:37,040 --> 00:04:38,690
Having some form of xml file.

65
00:04:38,690 --> 00:04:39,230
So.

66
00:04:40,570 --> 00:04:42,130
Let me add some dependencies.

67
00:04:42,130 --> 00:04:44,860
So currently there are no dependencies here.

68
00:04:45,280 --> 00:04:50,050
So we need to perform some dependencies and adding some dependencies also.

69
00:04:58,130 --> 00:05:01,610
So adding dependencies is very easy.

70
00:05:03,350 --> 00:05:03,950
This.

71
00:05:05,030 --> 00:05:06,830
Just I need to add this.

72
00:05:09,220 --> 00:05:10,660
Many movies that I know use of.

73
00:05:12,100 --> 00:05:21,290
So there is one pick up for for Java is one called artifact there.

74
00:05:21,850 --> 00:05:29,560
So it's taking time to indexing as this is very huge and my system is taking load so it will take time

75
00:05:29,560 --> 00:05:31,390
to perform every action.

76
00:05:36,400 --> 00:05:40,750
So wait for some time to compile this and everything.

77
00:05:51,620 --> 00:05:53,330
So it's an indexing.

78
00:05:53,330 --> 00:05:53,720
So.

79
00:05:55,320 --> 00:05:55,920
Complete.

80
00:05:56,730 --> 00:05:59,310
Let it be like this only to complete this part.

81
00:05:59,310 --> 00:05:59,630
So.

82
00:06:03,450 --> 00:06:05,280
Dependency.

83
00:06:08,270 --> 00:06:11,960
I'm just taking down two dependencies and doing everything.

84
00:06:17,000 --> 00:06:19,990
So you're going to check your dependencies, adding their.

85
00:06:22,050 --> 00:06:24,450
So while this is working.

86
00:06:24,870 --> 00:06:30,060
So my suggestion is wait for sometime after developing this part.

87
00:06:30,810 --> 00:06:36,960
So because it's adding the dependency, so it's taking time to perform these actions.

88
00:06:37,380 --> 00:06:43,860
Now go to the Java file while it's doing and create here when Java.

89
00:06:45,480 --> 00:06:46,920
Which is basically our app.

90
00:06:47,280 --> 00:06:48,600
I'm going to go from there.

91
00:06:49,640 --> 00:06:53,040
So right click on this main is RC Main Java.

92
00:06:53,060 --> 00:06:58,010
You can go directly to the view of packages or packages, new packages.

93
00:06:58,140 --> 00:07:00,590
You can directly access this java.

94
00:07:33,420 --> 00:07:33,680
Okay.

95
00:07:50,240 --> 00:07:53,750
So it's taking time to perform.

96
00:07:55,960 --> 00:07:58,000
So it's not analyzing.

97
00:07:58,480 --> 00:07:58,930
Click here.

98
00:07:58,930 --> 00:07:59,440
Right click.

99
00:07:59,440 --> 00:08:00,340
Go to this.

100
00:08:01,870 --> 00:08:04,870
Or if you found Abdul Jabbar directly here.

101
00:08:04,900 --> 00:08:06,250
No need to create this.

102
00:08:06,430 --> 00:08:09,550
But I haven't found this, so I'm putting the app.

103
00:08:12,790 --> 00:08:16,270
Check with the find whether this is working or not.

104
00:08:16,930 --> 00:08:19,090
It is simple thing you can perform.

105
00:08:21,070 --> 00:08:26,620
He is the input because as you know, ESPN is probably a.

106
00:08:31,400 --> 00:08:35,760
It's taking time to load the system.

107
00:08:36,500 --> 00:08:38,630
Oh, don't worry, Alan.

108
00:08:46,280 --> 00:08:46,850
Hello.

109
00:08:51,560 --> 00:08:51,970
Voice.

110
00:08:52,760 --> 00:08:53,860
So that's the thing.

111
00:08:53,870 --> 00:08:55,010
I'm going to print that.

112
00:08:56,360 --> 00:08:59,000
Let me check where whether this is added or not.

113
00:09:00,950 --> 00:09:05,900
So please showing me the error and the error is.

114
00:09:08,000 --> 00:09:11,510
This is already performed for me.

115
00:09:12,500 --> 00:09:13,820
Now let me run this.

116
00:09:17,700 --> 00:09:19,080
So it is running.

117
00:09:20,700 --> 00:09:23,760
While training, it will build this part.

118
00:09:26,180 --> 00:09:31,890
So I'm not going to create your UI thing because I told you UI is going to take more time.

119
00:09:31,910 --> 00:09:36,740
So due to time constraint, I'm going to add some files and I'm going to check that part.

120
00:09:39,700 --> 00:09:40,660
Directly here.

121
00:09:46,030 --> 00:09:49,150
So maybe this is loading.

122
00:09:54,870 --> 00:09:56,860
It's building number and it's building.

123
00:09:56,880 --> 00:09:59,010
So what is the thing it should print?

124
00:09:59,010 --> 00:09:59,340
Hello?

125
00:09:59,610 --> 00:10:00,270
Nothing.

126
00:10:00,690 --> 00:10:02,280
It should print a loan for me.

127
00:10:02,280 --> 00:10:10,020
And as you can see, it's so your programming is now running, so no need to require to use this.

128
00:10:10,020 --> 00:10:16,140
So now we are going to perform or I'm going to work on our application.

129
00:10:16,260 --> 00:10:18,270
So our thing is very important.

130
00:10:18,270 --> 00:10:19,080
What is?

131
00:10:19,080 --> 00:10:22,530
First, we need to list our networking devices.

132
00:10:22,530 --> 00:10:29,640
What is the our networking devices is basically our networking interface, which is going to perform

133
00:10:29,640 --> 00:10:30,000
here.

134
00:10:30,270 --> 00:10:34,950
So first thing I need to mention here is Pcap.

135
00:10:36,000 --> 00:10:41,670
So we can you can check here everything we have done for everything.

136
00:10:41,670 --> 00:10:42,990
So except.

137
00:10:44,380 --> 00:10:45,430
Network interface.

138
00:10:45,430 --> 00:10:46,510
I need to mention that.

139
00:10:47,290 --> 00:10:50,980
So what you can do is just putting the code here.

140
00:10:50,980 --> 00:10:52,360
You can put your start.

141
00:10:54,360 --> 00:10:56,540
Know how we can use this.

142
00:10:56,550 --> 00:10:58,260
You can use this as a device.

143
00:10:59,280 --> 00:11:01,920
Device is equal to null.

144
00:11:03,450 --> 00:11:06,930
My device is currently null because it's not having anything.

145
00:11:09,960 --> 00:11:15,450
So pick up is which comes with very convenient method for listening.

146
00:11:16,950 --> 00:11:19,950
So I will put here 2 to 3 things.

147
00:11:22,400 --> 00:11:25,440
It's basically going to capture everything in networking devices.

148
00:11:25,460 --> 00:11:33,590
So what I'm going to do is it's came with one beautiful method we can say, which is basically an F

149
00:11:33,590 --> 00:11:38,900
selector, which is going to select intelligently over everything.

150
00:11:39,530 --> 00:11:48,700
So you should use strike action so you could catch already because so option.

151
00:11:50,090 --> 00:11:51,860
Section e.

152
00:11:55,100 --> 00:11:55,740
15.

153
00:11:56,360 --> 00:11:58,530
Outdoor Print l.

154
00:11:58,610 --> 00:11:58,920
N.

155
00:11:59,330 --> 00:11:59,690
E.

156
00:12:02,230 --> 00:12:07,640
So what I'm going to do here, I'm going to add that device.

157
00:12:07,660 --> 00:12:19,060
You know, the device is equal to one beautiful thing is a knife selector new and I have selected.

158
00:12:21,060 --> 00:12:27,630
Which selector is going to take select the network in select network terms.

159
00:12:28,460 --> 00:12:33,530
I have the methods it will assign to that part after this part.

160
00:12:38,520 --> 00:12:42,330
This system brought out.

161
00:12:44,690 --> 00:12:45,200
Not.

162
00:12:46,050 --> 00:12:49,080
But in telling print your.

163
00:12:49,080 --> 00:12:50,490
I'm going to print my.

164
00:12:55,010 --> 00:12:55,630
Putting.

165
00:12:57,190 --> 00:12:58,150
Need to work.

166
00:13:00,470 --> 00:13:01,190
Interface.

167
00:13:01,190 --> 00:13:03,590
I'm going to put my interface.

168
00:13:03,590 --> 00:13:04,100
So.

169
00:13:09,520 --> 00:13:11,830
And consistently minus its device.

170
00:13:12,580 --> 00:13:16,910
Plus, what is my device is basically a device.

171
00:13:16,910 --> 00:13:19,360
So if we print this.

172
00:13:20,860 --> 00:13:23,680
And let me run this application.

173
00:13:24,520 --> 00:13:29,530
So let me show you how it will intelligently print, select my device and everything.

174
00:13:29,620 --> 00:13:34,330
So it will go through every networking available on my part.

175
00:13:34,390 --> 00:13:36,870
And it will select that in I select.

176
00:13:42,470 --> 00:13:43,790
It's currently building.

177
00:13:46,530 --> 00:13:47,400
As you can see.

178
00:13:51,290 --> 00:13:51,980
So.

179
00:13:53,170 --> 00:13:55,870
It will take time to perform every action.

180
00:13:59,130 --> 00:14:07,020
Now let us consider why this is putting module is not native method and everything.

181
00:14:07,740 --> 00:14:08,580
So.

182
00:14:10,670 --> 00:14:13,400
You can take this static binder.

183
00:14:13,820 --> 00:14:19,670
Our application is not connected to any static binder.

184
00:14:19,790 --> 00:14:27,740
So for that purpose, specific model cannot be found to the Blue Cap Library.

185
00:14:27,980 --> 00:14:31,640
So for that purpose, we need to implement your w cap also.

186
00:14:32,420 --> 00:14:33,140
So.

187
00:14:34,870 --> 00:14:42,940
For this, you need to develop some embedded dependencies or add some embedded dependencies there.

188
00:14:57,550 --> 00:14:58,150
So.

189
00:14:59,780 --> 00:15:03,080
Let me work on some.

190
00:15:04,700 --> 00:15:09,440
Team here, which is basically gait network device, which I forgot actually.

191
00:15:10,740 --> 00:15:16,620
So before printing this, let me refactor this code.

192
00:15:19,390 --> 00:15:19,520
Yeah.

193
00:15:19,620 --> 00:15:20,890
Yeah, that's very correct.

194
00:15:21,190 --> 00:15:26,860
I'm not saying this is wrong, but we haven't mentioned something, so.

195
00:15:30,130 --> 00:15:32,230
Let me move to this part.

196
00:15:44,860 --> 00:15:46,840
Forgot to mention some parts here.

197
00:15:46,840 --> 00:15:47,070
So.

198
00:15:55,460 --> 00:15:57,530
So this is our network interface.

199
00:15:57,530 --> 00:15:59,630
And let me.

200
00:16:00,830 --> 00:16:01,840
And these this exception.

201
00:16:03,700 --> 00:16:06,130
Then in this public device.

202
00:16:07,150 --> 00:16:09,820
Now, remember, this device is not working.

203
00:16:09,820 --> 00:16:13,540
So for that purpose, we need one thing here.

204
00:16:22,350 --> 00:16:23,970
So now what?

205
00:16:23,970 --> 00:16:24,690
I changed.

206
00:16:25,490 --> 00:16:28,220
I created this gateway device I'm using here.

207
00:16:30,760 --> 00:16:36,730
Now let us check whether it's building or not because specific module is not going to be found here

208
00:16:37,420 --> 00:16:38,140
directly.

209
00:16:49,740 --> 00:16:55,800
So currently this is not if you want to check, you can check this part.

210
00:16:58,070 --> 00:17:01,850
And you can take for the class part and everything.

211
00:17:04,570 --> 00:17:08,350
So we need to add some more dependencies.

212
00:17:12,580 --> 00:17:13,270
So.

213
00:17:15,290 --> 00:17:17,480
We are mentioned with this.

214
00:17:18,780 --> 00:17:19,350
No.

215
00:17:19,350 --> 00:17:21,360
Let me add one more dependency.

216
00:17:37,700 --> 00:17:40,280
So it is taking time to do the right thing.

217
00:17:41,540 --> 00:17:42,950
And let me run this again.

218
00:17:55,510 --> 00:17:56,800
This is currently building.

219
00:17:57,370 --> 00:18:04,150
So it will take time to build and it will give me the current networking devices and everything on my

220
00:18:04,150 --> 00:18:05,020
network.

221
00:18:10,900 --> 00:18:16,390
So it's downloading the dependencies, doing the all resolving the dependencies.

222
00:18:17,230 --> 00:18:23,650
So there may be some time to perform this, but it will work.

223
00:18:24,190 --> 00:18:29,230
If you want to check, you have to use this form or XML as it is using here.

224
00:18:37,510 --> 00:18:40,900
So resolving my bar.

225
00:18:43,100 --> 00:18:44,060
I'm currently.

226
00:18:45,330 --> 00:18:47,610
Including the sinking the part.

227
00:18:47,610 --> 00:18:50,340
As you can see, it's indexing.

228
00:18:50,340 --> 00:18:53,280
So let it be in further part.

229
00:18:53,280 --> 00:18:55,410
I'm going to tell you how we can perform this.
