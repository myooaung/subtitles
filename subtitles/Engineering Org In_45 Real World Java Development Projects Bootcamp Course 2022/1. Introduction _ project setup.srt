1
00:00:01,140 --> 00:00:05,010
So our project title is Java EE Library System.

2
00:00:05,430 --> 00:00:11,700
So we are going to build an E library system with some login methods for students.

3
00:00:11,700 --> 00:00:20,280
And I'd also like for Librarian to create one EE library, which includes some been part or some JSP

4
00:00:20,280 --> 00:00:21,240
part also.

5
00:00:21,270 --> 00:00:25,520
So we are mainly focused on EE library management with Java.

6
00:00:25,530 --> 00:00:28,440
So you can develop with another languages.

7
00:00:28,440 --> 00:00:32,820
Also like Python, we have Django, then Flask also.

8
00:00:32,850 --> 00:00:35,020
Then we have PHP also.

9
00:00:35,040 --> 00:00:41,220
But while we are deploying with Java because it's really fast, again, it's easy to handle and with

10
00:00:41,220 --> 00:00:44,370
GBK and Java Servlet it's very useful.

11
00:00:44,380 --> 00:00:49,460
Like they created web thing different and for the back end thing different.

12
00:00:49,470 --> 00:00:53,130
So we can define both things very significantly.

13
00:00:53,310 --> 00:00:56,250
So our project title is Java EE Library System.

14
00:00:56,580 --> 00:01:01,830
So this project is based on GDB C Java Database Connection.

15
00:01:02,280 --> 00:01:04,530
JSP Java Servlet pages.

16
00:01:04,680 --> 00:01:13,890
Java servlet which used to create some database connection with the JSP and all the things and with

17
00:01:13,890 --> 00:01:15,210
the server deployment.

18
00:01:15,450 --> 00:01:24,270
So JSP, I'm going to tell how it will work, but let us see what is our requirements and all about

19
00:01:24,390 --> 00:01:26,550
our system, server system.

20
00:01:27,510 --> 00:01:33,390
Project AIM is basically develop a web app using Java for E-library platform.

21
00:01:33,900 --> 00:01:37,010
With the help of java servlet, JSP and gdb c.

22
00:01:37,020 --> 00:01:42,480
So I'm not controlling your server part because server is finalised for deployment and everything.

23
00:01:42,750 --> 00:01:46,500
You can use different deployment servers for the local hosting.

24
00:01:46,500 --> 00:01:53,400
I'm showing your glossary server, but for on online web deployments, you can use different platforms

25
00:01:53,400 --> 00:01:54,350
like Heroku app.

26
00:01:54,360 --> 00:02:04,920
Also use this or you can use Google Cloud platform also to deploy your server or so Heroku needs PostgreSQL

27
00:02:04,950 --> 00:02:09,240
for their deployment, but I'm using here Oracle database.

28
00:02:09,240 --> 00:02:11,400
You can easily shift to PostgreSQL.

29
00:02:11,430 --> 00:02:14,010
All the queries are same and all the things are same.

30
00:02:15,020 --> 00:02:19,100
So steps of our development is basically project setup.

31
00:02:19,670 --> 00:02:26,360
Understanding different tools, we are going to use JSP Basics, basics of database, java, servlet

32
00:02:26,360 --> 00:02:29,060
and database connection and deployment on the server.

33
00:02:29,270 --> 00:02:36,770
So before proceeding with our further system and everything, let us explain how we can set up.

34
00:02:36,770 --> 00:02:39,560
Let us understand how we can set up our project.

35
00:02:39,950 --> 00:02:46,460
So I'm using here ID as primary ID NetBeans, which is very popular and open source.

36
00:02:47,550 --> 00:02:49,100
I'm closing this panel also.

37
00:02:49,110 --> 00:02:51,120
So this is my previous project.

38
00:02:51,540 --> 00:02:53,180
Let us create a new project.

39
00:02:53,190 --> 00:02:54,330
Go to file here.

40
00:02:56,500 --> 00:02:57,370
New project.

41
00:02:58,980 --> 00:03:00,360
Once this is done.

42
00:03:13,020 --> 00:03:14,550
I need to add.

43
00:03:16,080 --> 00:03:16,830
More things.

44
00:03:19,530 --> 00:03:23,040
Likewise, you can see here a new projecting.

45
00:03:23,990 --> 00:03:25,390
I have to add this.

46
00:03:27,270 --> 00:03:29,730
My new project, as you're going to see.

47
00:03:31,610 --> 00:03:35,630
So go to Java Web here, Java and Web application, click next.

48
00:03:36,880 --> 00:03:40,890
Then I'm giving the name as E.

49
00:03:43,300 --> 00:03:43,590
B.

50
00:03:44,750 --> 00:03:45,680
As you can see, Eli.

51
00:03:47,450 --> 00:03:49,610
Let me maximize this part.

52
00:03:54,250 --> 00:03:54,460
Okay.

53
00:03:54,580 --> 00:03:55,730
Hope you can see this.

54
00:03:55,750 --> 00:03:56,020
No.

55
00:03:56,650 --> 00:03:57,070
Okay.

56
00:03:58,340 --> 00:04:00,320
Then I'm going to click next.

57
00:04:00,980 --> 00:04:03,080
Choose your your glasses server.

58
00:04:03,080 --> 00:04:05,840
I'm using e-bay next.

59
00:04:06,050 --> 00:04:08,540
I don't want to use anything here.

60
00:04:09,080 --> 00:04:09,770
Look, finish.

61
00:04:11,360 --> 00:04:13,640
So it will take time to load everything.

62
00:04:17,740 --> 00:04:18,430
So.

63
00:04:19,930 --> 00:04:21,960
Now you can see it.

64
00:04:23,020 --> 00:04:24,370
My, this is my old.

65
00:04:24,550 --> 00:04:25,390
Forget about it.

66
00:04:25,390 --> 00:04:26,200
Ignore about this.

67
00:04:26,200 --> 00:04:28,780
So E-library is my main project here.

68
00:04:29,540 --> 00:04:32,590
So let me add some libraries here first.

69
00:04:32,600 --> 00:04:37,010
As you can see, these are added libraries, but I want to add some jar folder here.

70
00:04:37,820 --> 00:04:41,210
So let me add one jar folder.

71
00:04:41,480 --> 00:04:43,550
So what is the jar folder?

72
00:04:43,550 --> 00:04:46,160
Basically is nothing.

73
00:04:46,460 --> 00:04:52,220
But I'm going to add or jar folder here.

74
00:04:54,150 --> 00:04:59,220
Java X, I want to n so this database, I will tell you about that part.

75
00:04:59,220 --> 00:05:10,230
Also, let me add my Java X if you are JDK 1.8 is not consistent java x file it will you error while

76
00:05:10,440 --> 00:05:11,940
deploying everything.

77
00:05:11,940 --> 00:05:13,350
So go to 1.8.

78
00:05:13,350 --> 00:05:14,250
I'm using this.

79
00:05:14,940 --> 00:05:16,650
I'm going to library.

80
00:05:17,760 --> 00:05:18,840
Or.

81
00:05:20,100 --> 00:05:25,440
So first find out where you store your Java X files.

82
00:05:26,570 --> 00:05:32,480
So it should be du jour XDR this eliminating it absolute but.

83
00:05:33,760 --> 00:05:35,640
So now my file is added.

84
00:05:37,340 --> 00:05:38,360
As you can see.

85
00:05:39,390 --> 00:05:40,680
If I didn't know.

86
00:05:41,590 --> 00:05:42,970
Oh, so.

87
00:05:43,930 --> 00:05:44,780
Let me do this.

88
00:05:44,920 --> 00:05:46,800
So this is my index road estimate.

89
00:05:47,230 --> 00:05:50,500
So consider this as index only.

90
00:05:50,530 --> 00:05:51,250
Nothing more.

91
00:05:51,250 --> 00:05:56,050
But let me tell you something more about this.

92
00:05:56,080 --> 00:05:57,490
So what is the index rotation?

93
00:05:57,840 --> 00:05:59,080
There is a loading page.

94
00:05:59,380 --> 00:06:03,970
So if you want to check your system is running or not, click here.

95
00:06:04,570 --> 00:06:06,250
Then go to clean and build.

96
00:06:07,550 --> 00:06:10,310
If your window is not opening your output window, go to window.

97
00:06:11,030 --> 00:06:14,590
You can use control for weather also, but I'm using your button.

98
00:06:16,360 --> 00:06:18,790
You can down here because like this.

99
00:06:19,890 --> 00:06:21,250
You can see this is deploying.

100
00:06:21,270 --> 00:06:22,890
So let us run this project.

101
00:06:24,090 --> 00:06:25,250
So this is for first time.

102
00:06:25,260 --> 00:06:27,990
So I'm just running this for first time.

103
00:06:29,010 --> 00:06:30,650
Check everything is running or not.

104
00:06:33,320 --> 00:06:37,160
I'm going to use here some default bootstrap templates.

105
00:06:37,160 --> 00:06:41,420
Also some default CSS and JSP files.

106
00:06:41,420 --> 00:06:45,700
Also not default JS files, JavaScript files and HTML cases.

107
00:06:45,710 --> 00:06:48,050
These are some already created templates.

108
00:06:48,050 --> 00:06:50,690
So I don't want to focus on that part.

109
00:06:50,690 --> 00:06:53,030
I just want to focus on Java part here.

110
00:06:53,030 --> 00:06:54,680
So I'm going to use that.

111
00:06:55,430 --> 00:06:56,370
So let's see.

112
00:06:58,510 --> 00:07:00,580
Our project is running or not.

113
00:07:05,930 --> 00:07:09,500
So it will take time actually for running.

114
00:07:11,490 --> 00:07:13,070
2 to 3 minutes it will take.

115
00:07:14,870 --> 00:07:15,680
So.

116
00:07:17,790 --> 00:07:22,230
Now you can see my project is running and it's going to do right to content.

117
00:07:22,320 --> 00:07:23,370
So this is nothing.

118
00:07:23,370 --> 00:07:25,410
But you just wrote here.

119
00:07:25,940 --> 00:07:27,870
So my deployment is running.

120
00:07:28,290 --> 00:07:35,220
I'm going to close this all things and I'm going to close my browser also because we haven't written

121
00:07:35,220 --> 00:07:35,870
anything.

122
00:07:35,880 --> 00:07:42,690
So in the next tutorial I will tell you how we can deploy this, but before that let us learn which

123
00:07:42,810 --> 00:07:47,040
tools we are going to use and what is the significance of these tools?

124
00:07:49,680 --> 00:07:51,930
So as I told you, we are going to use JSP.

125
00:07:51,960 --> 00:07:53,550
Java solid and GBK.

126
00:07:53,910 --> 00:07:59,850
So our application requirements is basically some more important part.

127
00:08:00,210 --> 00:08:01,080
So.

128
00:08:05,550 --> 00:08:06,540
What is this?

129
00:08:06,540 --> 00:08:07,950
Basically so.

130
00:08:09,740 --> 00:08:16,790
We are going to use some school statements, we are going to use some log in statements and everything.

131
00:08:16,790 --> 00:08:18,650
So let us see what we are going to do.

132
00:08:18,980 --> 00:08:23,480
So our application requirements is the Java program to display web content.

133
00:08:23,510 --> 00:08:24,380
Java program.

134
00:08:25,240 --> 00:08:27,120
You should have some basic concepts of school.

135
00:08:27,130 --> 00:08:29,910
Also, you should know about the this.

136
00:08:29,980 --> 00:08:33,550
I'm not going to explain each and every tag here in each HTML.

137
00:08:34,350 --> 00:08:36,550
I'm using your bootstrap for a better view.

138
00:08:37,530 --> 00:08:44,830
So we need one website, two admin login as admin or log in as a student admin librarian part.

139
00:08:44,870 --> 00:08:51,870
Here I am considering admin administration actions like add a book something student should have a register

140
00:08:51,870 --> 00:08:57,040
and log in book submit anything that part related to library.

141
00:08:57,060 --> 00:09:01,500
I'm going to tell you that further then JDK 1.8 we need.

142
00:09:02,420 --> 00:09:04,050
ID am going to use NetBeans.

143
00:09:04,070 --> 00:09:11,300
You can use any ID, Java EE, Virgin Enterprise Edition Version eight Oracle or my skilled database

144
00:09:11,720 --> 00:09:12,920
server or Tomcat Server.

145
00:09:13,010 --> 00:09:16,090
Remember for the server deployment, you should check both.

146
00:09:16,220 --> 00:09:24,260
If your port is 88 and if it's already occupied by my SQL Server or Oracle database server, you have

147
00:09:24,260 --> 00:09:29,020
to change the glass server either, or you have to change the Oracle database.

148
00:09:29,330 --> 00:09:36,260
Also, my recommendation is to change the last server port because it's easy and Oracle to maintain

149
00:09:36,260 --> 00:09:41,390
the Oracle database with 88 port always if HTTP is not port basically.

150
00:09:41,660 --> 00:09:43,070
So it will be helpful.

151
00:09:43,070 --> 00:09:46,250
So let's see what is basically Java servlet.

152
00:09:46,520 --> 00:09:50,750
So if you know the Java servlet parts earlier, it is going to vary.

153
00:09:51,500 --> 00:09:56,180
So Java Solid is an API that provides many interfaces and classes.

154
00:09:56,180 --> 00:09:59,180
So, so let's access the interfaces and classes both.

155
00:09:59,690 --> 00:10:06,350
So it is primary technology to build and create a web application on the servlet.

156
00:10:06,440 --> 00:10:13,070
Different steps are used now spring then hibernate also providing.

157
00:10:13,070 --> 00:10:18,950
So servlet is an interface that must be implemented for the creating on any servlet.

158
00:10:18,950 --> 00:10:24,380
So servlet is access interface for creating any web or anything.

159
00:10:24,680 --> 00:10:30,350
And so that is a class that extends the capabilities of servers, responds to the incoming request and

160
00:10:30,350 --> 00:10:31,460
etc. things.

161
00:10:32,510 --> 00:10:37,790
Now what is solid is with a component that deployed on the server part.

162
00:10:38,000 --> 00:10:45,500
So as I told you, HTML is a client part or we can say it is network part while deploying all the things.

163
00:10:45,500 --> 00:10:51,530
But the Java solids are mainly deployed and that page is Java pages are stored in the server part.

164
00:10:51,560 --> 00:10:55,840
So in this example, our system is only a client and server access both.

165
00:10:55,850 --> 00:11:04,970
But but consider there are two computers or you can say tremendous huge network of some school or university

166
00:11:05,030 --> 00:11:07,700
and though all the servers.

167
00:11:08,760 --> 00:11:11,040
Or we can say all the clients connected to the one server.

168
00:11:11,190 --> 00:11:19,380
So for all e library management system, the main logic in the servlet or main Java logic is storing

169
00:11:19,380 --> 00:11:25,800
the server side only, so it will access the request and response for every server for that purpose.

170
00:11:26,130 --> 00:11:29,430
So like adn book and etc. things for all.

171
00:11:29,430 --> 00:11:31,320
Logical, logical thinking.

172
00:11:31,440 --> 00:11:33,600
So this is all about the sole servers.

173
00:11:33,720 --> 00:11:40,080
So servers are mainly so lets are mainly running on server, which depends on the request and response

174
00:11:40,080 --> 00:11:41,040
from the client.

175
00:11:41,070 --> 00:11:49,830
So firstly, client request server for something information like I want to fetch the data from this

176
00:11:49,830 --> 00:11:52,770
database or I want to put this into the database.

177
00:11:52,770 --> 00:12:00,210
So this is all kinds of request responses generated at the runtime like in the server.

178
00:12:00,420 --> 00:12:05,100
If request is given server, we'll do something and a response will be generated.

179
00:12:05,100 --> 00:12:12,320
So that response can be data that book is added to the database that part or request can be.

180
00:12:12,540 --> 00:12:17,190
You can see that book part is book is issued for that that student.

181
00:12:17,520 --> 00:12:21,000
So these are all about how the server returning.

182
00:12:21,000 --> 00:12:23,250
So why servlet we are using here.

183
00:12:23,580 --> 00:12:26,280
So you can use normal things.

184
00:12:26,280 --> 00:12:32,910
Also CGI which is basically returning all or anything C or C++ or languages.

185
00:12:32,910 --> 00:12:38,120
But why we are not using this because it creates some processes.

186
00:12:38,130 --> 00:12:42,270
We can say CGI, common gateway interface, it creates processes.

187
00:12:42,420 --> 00:12:44,860
So it's exe as a multi processing.

188
00:12:45,330 --> 00:12:51,420
So server are limited for some amount of processes more than then processes.

189
00:12:51,420 --> 00:12:56,160
Consider one server which computing capacity is only considering 100 processes.

190
00:12:56,340 --> 00:12:59,850
So one client put one each.

191
00:12:59,850 --> 00:13:02,550
Or we can say one client put file request.

192
00:13:03,030 --> 00:13:07,740
So that request converts into the process and that process comes through the server.

193
00:13:07,740 --> 00:13:14,130
So for each client, if is creating file and or server can handle only 100.

194
00:13:14,130 --> 00:13:15,710
So it's very difficult.

195
00:13:15,750 --> 00:13:17,550
Only 20 clients can be used.

196
00:13:18,090 --> 00:13:21,060
But in the servlet parts, what's happening?

197
00:13:21,450 --> 00:13:26,880
Java itself creates servlet or requests into trading.

198
00:13:27,090 --> 00:13:30,240
So trading consists more number of processes.

199
00:13:30,480 --> 00:13:34,220
Also trading includes some trade lock.

200
00:13:34,230 --> 00:13:39,990
Also then we have known that trading have some own time complexity things.

201
00:13:39,990 --> 00:13:44,980
So it will be very easy for server to handle that processes step by step.

202
00:13:45,000 --> 00:13:49,170
So now you are clear with why we are using servlet.

203
00:13:49,290 --> 00:13:52,830
So main part is over jsp but java.

204
00:13:52,830 --> 00:13:56,610
So links are used here to create database connection and everything.

205
00:13:57,920 --> 00:14:00,200
So there are requests dispatching sublets.

206
00:14:00,200 --> 00:14:04,850
As I told you, there are a thing like request dispatcher in JSP.

207
00:14:04,880 --> 00:14:14,420
Remember J.C. does not consistently request dispatcher because dispatcher is for is providing some interfaces

208
00:14:14,420 --> 00:14:20,690
facility for dispatching request from one source to another source like one email to another email one

209
00:14:20,690 --> 00:14:22,130
servlet to another servlet.

210
00:14:22,460 --> 00:14:29,240
So it consists forward and include methods forward for forwarding that including means including the

211
00:14:29,240 --> 00:14:29,750
same.

212
00:14:30,260 --> 00:14:32,960
But so these are all about these things.

213
00:14:32,960 --> 00:14:36,410
So you understand throughout this diagram.

214
00:14:36,710 --> 00:14:39,290
So it is very easy to consider this.

215
00:14:40,370 --> 00:14:41,060
All part.

216
00:14:42,350 --> 00:14:44,990
So this is all about solid.

217
00:14:44,990 --> 00:14:46,000
So solid countries.

218
00:14:46,010 --> 00:14:47,480
Three important parts is HTML.

219
00:14:47,480 --> 00:14:52,720
CSS is just for frontend java solid program with backend part and logical method.

220
00:14:52,730 --> 00:14:55,640
Backend means basically connecting frontend to the database.

221
00:14:55,640 --> 00:15:03,230
So we need some Java logic like put this parameter to this row, put this second parameter to second

222
00:15:03,230 --> 00:15:04,160
row like that.

223
00:15:04,160 --> 00:15:06,230
We want to write a logic.

224
00:15:06,230 --> 00:15:12,260
Logic is very easy and there are some default useful statements we are going to use here.

225
00:15:12,710 --> 00:15:14,960
Web XML to control for web.

226
00:15:15,110 --> 00:15:21,680
So now we know that HTML one index html is added or which is put to the.

227
00:15:22,590 --> 00:15:26,250
Index dot Java, which is basically Java servlet, but we know that.

228
00:15:26,250 --> 00:15:29,100
But our ID or our web flow doesn't know that.

229
00:15:29,100 --> 00:15:30,260
We have to add that.

230
00:15:30,270 --> 00:15:37,380
So control flow whereby we check for the control flow of our web, everything and we borrowed XML basically

231
00:15:37,380 --> 00:15:42,930
and it will check which linking part is linked to that particular part.

232
00:15:42,960 --> 00:15:45,270
If not, it will add some dependencies also.

233
00:15:45,270 --> 00:15:49,020
So web xml will take care of all the connection and everything.

234
00:15:50,040 --> 00:15:55,350
So for their part, we are going to learn how we can create JSP, how we can set up our project.

235
00:15:55,740 --> 00:16:01,620
So in the next days I'm going to tell our project part and with the index HTML development.

236
00:16:03,670 --> 00:16:06,730
And our fully developed solid.
