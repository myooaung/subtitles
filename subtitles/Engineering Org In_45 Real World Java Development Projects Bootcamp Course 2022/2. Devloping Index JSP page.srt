1
00:00:01,470 --> 00:00:08,990
In previous part, I mentioned the functional requirements of our block block system, connect global

2
00:00:09,450 --> 00:00:15,630
block system, and I told you how we are going to perform each and every here with functional requirements,

3
00:00:15,630 --> 00:00:17,030
application requirements.

4
00:00:17,070 --> 00:00:22,410
So in this part, I'm going to mention what I'm going to perform here, which is basically servlet,

5
00:00:22,410 --> 00:00:26,460
JSP, part GBC connection each and every here.

6
00:00:26,910 --> 00:00:31,260
So stay connected with this and let us see what is our.

7
00:00:32,400 --> 00:00:33,720
So Java solid.

8
00:00:33,750 --> 00:00:40,770
So if you know what is the back end part of web frontend is basically what you are looking here, which

9
00:00:40,770 --> 00:00:42,220
is HTML and CSS.

10
00:00:42,240 --> 00:00:49,560
But consider there is one form in your web page and you are writing that form if you want, submit it.

11
00:00:50,880 --> 00:00:53,520
You got that your data is stored now.

12
00:00:53,820 --> 00:00:55,560
So what is the data is stored.

13
00:00:55,950 --> 00:01:00,690
So it will go to the database and it is entered in that database.

14
00:01:00,720 --> 00:01:03,870
Now, the thing is, you are writing in the form of HTML.

15
00:01:04,530 --> 00:01:11,550
So how your name is fetched and how it's stored in the database, because database is always a skill

16
00:01:11,550 --> 00:01:11,880
file.

17
00:01:12,000 --> 00:01:16,500
Or you can check for the CSV file generator, which is basically command separated files.

18
00:01:16,800 --> 00:01:21,950
So these are more different contents as can consider as a structure.

19
00:01:21,960 --> 00:01:24,030
Each and everything is very different.

20
00:01:24,030 --> 00:01:28,740
Like a skill are some skill statements like create table adding insert.

21
00:01:28,770 --> 00:01:33,270
So these are very simple, but you are writing in HTML is very complicated.

22
00:01:33,450 --> 00:01:40,050
So each entry is in consider as a table or you can form as a parameters.

23
00:01:40,050 --> 00:01:46,890
And our Java could handle that, fetch that parameter and put it in that database.

24
00:01:47,110 --> 00:01:52,080
So it's basically like request and response system in Java in the servlet part.

25
00:01:52,960 --> 00:01:53,590
So.

26
00:01:53,590 --> 00:01:57,520
So that is the technology which is used to create web application.

27
00:01:58,260 --> 00:01:58,620
Again.

28
00:01:58,620 --> 00:02:02,670
So it is an API that provides interface and class.

29
00:02:02,970 --> 00:02:05,310
So what is the thing is the interface and class.

30
00:02:05,310 --> 00:02:10,880
If you know the Java basics classes are structures of objects and interfaces.

31
00:02:11,040 --> 00:02:12,660
You can see instance of classes.

32
00:02:13,110 --> 00:02:17,730
So these are more different concepts, but so it's performance interfaces and classes.

33
00:02:18,570 --> 00:02:20,700
So that's the power of solid.

34
00:02:21,860 --> 00:02:25,790
So let is an interface that must be implemented for creating a solid.

35
00:02:26,210 --> 00:02:31,970
Or you can say there is a solid part which can perform the servlet actions each and every time.

36
00:02:32,090 --> 00:02:39,710
But also servlet is a class also as is performed as a class with some default libraries that are the

37
00:02:39,710 --> 00:02:43,160
capabilities to serve off servers as a name.

38
00:02:43,160 --> 00:02:46,520
So servlet, it's deployed on the server part only.

39
00:02:47,470 --> 00:02:53,860
Extends the capabilities of the servers and responds to the AI, or we can say responds to the incoming

40
00:02:53,860 --> 00:02:54,430
requests.

41
00:02:54,550 --> 00:02:56,180
So what is the request and response?

42
00:02:56,200 --> 00:03:01,390
I will tell you why you are searching on google.com for cars.

43
00:03:01,390 --> 00:03:06,230
When you are searching cars on the google dot com, you request the server.

44
00:03:06,250 --> 00:03:09,320
Show me the information about cars.

45
00:03:09,560 --> 00:03:10,320
Cars.

46
00:03:10,660 --> 00:03:12,910
Basically cars like motor vehicles.

47
00:03:13,510 --> 00:03:16,560
So you are asking for the request.

48
00:03:16,570 --> 00:03:25,210
So now server should respond with that particular page or consider there is or four car list you will

49
00:03:25,210 --> 00:03:26,020
want to show you.

50
00:03:26,440 --> 00:03:31,480
So server fails that for current list and it will respond to your server.

51
00:03:31,810 --> 00:03:37,840
So this is very complex thing as a world wide web is extended more.

52
00:03:38,140 --> 00:03:39,760
It's become very complicated.

53
00:03:39,760 --> 00:03:40,890
Very complicated.

54
00:03:40,930 --> 00:03:46,900
But request and response is very helpful for deploying your web application because web application

55
00:03:46,900 --> 00:03:55,480
performs some dedicated actions like my in my case it is performed the block system.

56
00:03:55,480 --> 00:04:00,610
But for the other application, consider as a library management, they are some different actions.

57
00:04:00,790 --> 00:04:06,400
So for particularly that we need to write code to perform such actions.

58
00:04:07,530 --> 00:04:10,220
So it can respond to any requests.

59
00:04:10,230 --> 00:04:14,820
So while we are proceeding with Java Solid, there are many other options.

60
00:04:14,820 --> 00:04:22,380
You can you see C++ per languages also, but you can use JavaScript which is very popular while writing

61
00:04:22,380 --> 00:04:23,400
such cases.

62
00:04:24,060 --> 00:04:28,900
So, so it is a web component that deployed on the server and create dynamic pages.

63
00:04:28,920 --> 00:04:37,380
So one advantage of Java solid what we can say it's deployed on the server but no need to deploy on

64
00:04:37,390 --> 00:04:42,330
the client but to extend your abilities with some web applications.

65
00:04:42,630 --> 00:04:47,010
So this is it about how we are performing the Java solid.

66
00:04:47,130 --> 00:04:50,970
So let's see, really presentation of Java servlet.

67
00:04:51,420 --> 00:04:52,590
This is my client.

68
00:04:53,890 --> 00:05:01,240
I'm sending request server will generate one response at a runtime and it will be respond to the client

69
00:05:02,140 --> 00:05:03,190
that response.

70
00:05:03,190 --> 00:05:10,630
So it can be some copy of document, it can be a data, it can image anything you can provide.

71
00:05:11,410 --> 00:05:13,010
But we can see server can provide.

72
00:05:14,090 --> 00:05:16,670
So there are different things, requests dispatched in.

73
00:05:16,670 --> 00:05:24,140
So but before that, I just want to mention that while deploying on the sub servlet what is the beautiful

74
00:05:24,140 --> 00:05:27,620
thing is it will be handled to the trade part, trading part.

75
00:05:27,920 --> 00:05:33,380
So consider there are 100 clients you just searching in your blog.

76
00:05:33,660 --> 00:05:36,330
Consider my blog system only simultaneously.

77
00:05:36,330 --> 00:05:38,390
100 client using this my system.

78
00:05:38,840 --> 00:05:43,280
So sometimes due to the my server is not very strong.

79
00:05:43,280 --> 00:05:50,210
I'm using some low level server or you can say low cost server for the deployment of my application

80
00:05:50,210 --> 00:05:57,050
purpose too, because I don't want to waste that much money on that part.

81
00:05:57,230 --> 00:06:03,660
Consider as an owner of this blog system, I just implemented the server port on the lower end.

82
00:06:03,680 --> 00:06:08,720
If I use some other technologies I need to mention multi trading part.

83
00:06:10,670 --> 00:06:12,560
You because it will not handle.

84
00:06:12,740 --> 00:06:14,930
Definitely I need to mention multithreading.

85
00:06:15,500 --> 00:06:19,550
Otherwise it will handle some clients with the different processes.

86
00:06:19,550 --> 00:06:25,680
And as my server is very low end server, it will it cannot handle that many requests.

87
00:06:26,300 --> 00:06:32,550
So instead of that, I can use Java servlet which will have ability to create multi threads.

88
00:06:32,570 --> 00:06:33,560
What is a multi trading?

89
00:06:33,590 --> 00:06:39,100
Trading is a process process divided into the different different small processes is known as a trades,

90
00:06:39,110 --> 00:06:45,320
and multi trading is like handling many processes at a time so it can divide joining the client as one

91
00:06:45,320 --> 00:06:45,770
process.

92
00:06:45,770 --> 00:06:46,700
It can be divided.

93
00:06:47,090 --> 00:06:53,450
So several trades and it can be used as my application to run an application.

94
00:06:53,450 --> 00:07:01,580
But beautiful thing is I can handle more request using multi trading in Java so let other than any thing

95
00:07:02,090 --> 00:07:03,590
or any other platform.

96
00:07:04,010 --> 00:07:11,450
So request dispatcher is basically that interfaces or we can say interfaces of java servlet dispatch

97
00:07:11,450 --> 00:07:17,870
the request to another resource from another resource, basically just proceeding from one page to other

98
00:07:17,870 --> 00:07:18,230
page.

99
00:07:19,220 --> 00:07:24,080
It may be HTP, HTML, servlet, JSP, you can use anything here.

100
00:07:24,200 --> 00:07:29,570
So for what it is just basically forwarding and including just basically the including the same file

101
00:07:29,570 --> 00:07:33,650
inside your team or you can say inside the same page you can see.

102
00:07:33,980 --> 00:07:39,710
So this is the forward, forward method, as I told you, and you can use this.

103
00:07:39,860 --> 00:07:51,080
So what I'm going to do here is I'm just going to use some default things here, like some CSS file.

104
00:07:51,960 --> 00:07:56,490
All State and state ceases to declare on my server part.

105
00:07:58,700 --> 00:08:03,200
Then I'm going to use some libraries part also here because.

106
00:08:05,200 --> 00:08:07,090
To deploy such cases.

107
00:08:07,090 --> 00:08:08,230
I need to.

108
00:08:10,300 --> 00:08:11,410
Mention it from.

109
00:08:12,770 --> 00:08:16,670
What we can say, and I don't want to create it from scratch.

110
00:08:16,670 --> 00:08:20,810
So I'm going to use some default CSS part here.

111
00:08:21,320 --> 00:08:23,540
So let me add such files.

112
00:08:28,050 --> 00:08:34,260
If you're seeing my this left side, you can see I'm currently adding this and what I'm going to do.

113
00:08:34,290 --> 00:08:40,680
Let me close this because it will deploy it again and again as a GP, but it will deploy it again and

114
00:08:40,680 --> 00:08:41,130
again.

115
00:08:41,490 --> 00:08:45,230
Let me add one further HTML also here.

116
00:08:45,570 --> 00:08:48,290
I will tell you what is the full HTML value?

117
00:08:48,300 --> 00:08:58,080
It will do the beautiful super part here, which is basically nothing but is just padding part we can

118
00:08:58,080 --> 00:08:59,340
see in our file.

119
00:09:00,000 --> 00:09:04,860
So let me add such files then images and libraries.

120
00:09:04,860 --> 00:09:05,940
I'm going to add some.

121
00:09:08,030 --> 00:09:10,720
So you can hit enter directly these images.

122
00:09:10,730 --> 00:09:14,040
These images are nothing but some web images only.

123
00:09:14,060 --> 00:09:21,860
As you can see, there are some web images which I lose here as my background part some.

124
00:09:23,250 --> 00:09:26,700
On what we can see Linkin Park each and thing.

125
00:09:26,940 --> 00:09:32,520
Then some Beijing part with pause and each and everything I'm going to use here.

126
00:09:33,210 --> 00:09:36,930
So that's how I'm going to do here.

127
00:09:40,220 --> 00:09:41,450
Once this is done.

128
00:09:45,410 --> 00:09:47,210
You can check these files.

129
00:09:50,410 --> 00:09:52,620
So sometimes there may be error in.

130
00:09:54,010 --> 00:09:55,030
These cases.

131
00:09:55,600 --> 00:09:55,770
Yeah.

132
00:09:56,980 --> 00:09:57,910
So let me check.

133
00:09:57,910 --> 00:09:59,020
What is the area?

134
00:10:09,660 --> 00:10:09,860
Okay.

135
00:10:09,990 --> 00:10:10,440
So.

136
00:10:19,790 --> 00:10:20,890
So there is no deadline.

137
00:10:21,240 --> 00:10:26,360
Okay, so this is my just everything here I mentioned is my thesis.

138
00:10:27,600 --> 00:10:29,760
So this is the digital testament.

139
00:10:30,240 --> 00:10:34,620
Let me delete this part because I will mention you what I'm going to do here.

140
00:10:52,620 --> 00:10:57,900
So let me add in the protesting saying this is not just.

141
00:11:00,150 --> 00:11:00,580
Tinker.

142
00:11:00,630 --> 00:11:01,920
I'm going to add here.

143
00:11:03,870 --> 00:11:05,160
So let me show you.

144
00:11:05,190 --> 00:11:10,860
There is too much of padding here I used while writing this, so nothing.

145
00:11:10,860 --> 00:11:17,040
But this is W3 awkward web or HTML page because I'm using here Ajax.

146
00:11:17,040 --> 00:11:21,510
I will tell you what is the AJAX is basically a synchronous thing I'm going to use here.

147
00:11:22,080 --> 00:11:26,400
Then some keywords, description and title as a test I will change it to.

148
00:11:27,790 --> 00:11:32,360
Let me follow this thing at least.

149
00:11:33,200 --> 00:11:35,050
So I will tell you what is these things?

150
00:11:35,060 --> 00:11:39,700
I just added script here and all the things your style dot cases.

151
00:11:40,580 --> 00:11:43,490
So let me first deploy this part.

152
00:11:45,610 --> 00:11:46,450
Clean and build.

153
00:11:52,480 --> 00:11:57,190
Will this successful conflict multiply this on this mine server part?

154
00:12:25,270 --> 00:12:31,230
So now my thing is let me show you how this is looking.

155
00:12:31,240 --> 00:12:34,780
So if you are adding my part, only you can check.

156
00:12:34,780 --> 00:12:40,080
I created each and everything post to register each and everything log in form.

157
00:12:40,090 --> 00:12:46,750
So these are the some default things I used your you can use your your thing and I mentioned some things

158
00:12:46,750 --> 00:12:55,630
your tutorials each and everything you can check here and I'm using this part but let me.

159
00:12:56,430 --> 00:12:58,380
Jake for this purpose.

160
00:12:58,390 --> 00:13:03,420
So this is all about who I am mentioning everything here.

161
00:13:03,960 --> 00:13:11,090
So in further part, what I'm going to do, I'm going to mention some important things here.

162
00:13:11,100 --> 00:13:11,820
So.

163
00:13:14,700 --> 00:13:16,240
It is that football team.

164
00:13:19,040 --> 00:13:20,670
So you can check this out.

165
00:13:21,170 --> 00:13:22,010
Also loaded.

166
00:13:22,430 --> 00:13:23,800
So this is it.

167
00:13:23,810 --> 00:13:25,280
Who I'm going to mention.

168
00:13:25,460 --> 00:13:29,060
But before this, let me tell you.

169
00:13:30,420 --> 00:13:31,980
What I'm going to do here.

170
00:13:32,700 --> 00:13:34,560
Let me switch to the PPD part.

171
00:13:36,700 --> 00:13:40,660
So this request or dispatcher, as I told you.

172
00:13:42,450 --> 00:13:43,890
What is the thing here?

173
00:13:44,070 --> 00:13:44,530
Request.

174
00:13:44,970 --> 00:13:45,960
DISPATCHER.

175
00:13:46,290 --> 00:13:47,970
You can check here as.

176
00:13:51,150 --> 00:13:55,200
What is the basic thing I'm going to mention here?

177
00:13:57,360 --> 00:13:58,650
As requested.

178
00:13:59,580 --> 00:14:00,960
Dispatch reason, I think.

179
00:14:00,960 --> 00:14:03,600
But you can check here as.

180
00:14:05,920 --> 00:14:10,750
This is the thing what I'm going to mention here or.

181
00:14:13,270 --> 00:14:13,650
Nyquist.

182
00:14:13,660 --> 00:14:19,480
That DOT dispatcher is very helpful thing while developing this forward is for the forwarding method

183
00:14:19,480 --> 00:14:27,640
and the thing I'm mentioning here is just for putting that part while writing this.

184
00:14:28,090 --> 00:14:28,810
So.

185
00:14:33,090 --> 00:14:36,120
Let me go to this part again.

186
00:14:37,150 --> 00:14:38,290
So these is my server.

187
00:14:38,290 --> 00:14:40,870
I'm using this connect globe and privacy trumps.

188
00:14:40,870 --> 00:14:43,260
I added just our address.

189
00:14:43,660 --> 00:14:45,880
Nothing, but I just added images here.

190
00:14:45,970 --> 00:14:50,940
You can use your more responsive things here also and you can check this.

191
00:14:51,190 --> 00:14:52,270
So this is nothing.

192
00:14:52,270 --> 00:14:53,910
But I just added images.

193
00:14:54,220 --> 00:14:58,450
Just forgot about this because I'm adding some default text here.

194
00:14:58,450 --> 00:15:04,810
I just don't want to put much more efforts on this so you can use your log in from you can check your

195
00:15:04,810 --> 00:15:08,110
recent discoveries, your latest news you can check here.

196
00:15:08,410 --> 00:15:09,310
So that's it.

197
00:15:09,610 --> 00:15:15,190
I'm going to mention this is just in this part and I just for the listing purposes, I just added this

198
00:15:15,190 --> 00:15:18,220
can change it to the later part also here.

199
00:15:18,820 --> 00:15:26,080
So in further part, I'm going to tell you how I'm going to put this each and everything.

200
00:15:26,470 --> 00:15:31,300
So that's it about this, the deployment of index dot HTML part.

201
00:15:32,820 --> 00:15:38,640
So for that part, let us see how I'm going to mention and this is the full statement as I told you

202
00:15:39,150 --> 00:15:43,440
so it is nothing, but I just created and didn't lose this.

203
00:15:43,440 --> 00:15:48,270
Okay, so this is the output and you can check my output is not random also.

204
00:15:48,750 --> 00:15:51,390
So that's it about how I'm going to deploy this.
