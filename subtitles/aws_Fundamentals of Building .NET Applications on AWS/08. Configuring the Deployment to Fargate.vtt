WEBVTT
1
00:00:01.470 --> 00:00:03.520
[Autogenerated] The first page is one of those pages

2
00:00:03.520 --> 00:00:05.820
where I don't have to make any changes.

3
00:00:05.820 --> 00:00:09.160
It defaults to using the profile I set up for the toolkit,

4
00:00:09.160 --> 00:00:11.740
giving it permissions to do the publishing.

5
00:00:11.740 --> 00:00:14.590
I'll leave the configuration as released and I'll

6
00:00:14.590 --> 00:00:16.570
leave the default repository name.

7
00:00:16.570 --> 00:00:18.580
And yes, that's supposed to be repository,

8
00:00:18.580 --> 00:00:22.630
not repository defaulting to the name of the APP net core a.

9
00:00:22.630 --> 00:00:23.540
Piat.

10
00:00:23.540 --> 00:00:25.580
I'm not gonna bother with image tags.

11
00:00:25.580 --> 00:00:28.220
And the deployment target is already set to the correct

12
00:00:28.220 --> 00:00:31.200
option to run this as a service on an E.

13
00:00:31.200 --> 00:00:32.840
C s cluster.

14
00:00:32.840 --> 00:00:35.180
And do leave this check mark here to store the

15
00:00:35.180 --> 00:00:37.760
settings in a Jason file in the project.

16
00:00:37.760 --> 00:00:39.390
So nothing to change.

17
00:00:39.390 --> 00:00:42.520
And I'll go to the next page where there are only two changes.

18
00:00:42.520 --> 00:00:47.790
We need to make the containers that air run from an image or group in a cluster,

19
00:00:47.790 --> 00:00:51.300
and you do want to create a new MP cluster just for this

20
00:00:51.300 --> 00:00:55.400
applications containers give it a name and for consistency,

21
00:00:55.400 --> 00:00:57.840
I'll still use net Corey P I.

22
00:00:57.840 --> 00:01:00.500
Next is where Fargate comes into play.

23
00:01:00.500 --> 00:01:04.270
We definitely want to launch with Fargate because I'm creating a

24
00:01:04.270 --> 00:01:07.580
new empty cluster and I don't have any existing.

25
00:01:07.580 --> 00:01:11.730
You see two clusters Anyway, this launch type is locked on fargate.

26
00:01:11.730 --> 00:01:13.310
I can't even change it here.

27
00:01:13.310 --> 00:01:17.440
But far, Gates, what I want anyway that will take care of most of the effort.

28
00:01:17.440 --> 00:01:21.040
Once we've done this configuration for the compute capacity,

29
00:01:21.040 --> 00:01:23.830
leave these defaults which are the lowest options

30
00:01:23.830 --> 00:01:26.800
and will be OK in your free tier.

31
00:01:26.800 --> 00:01:29.370
The next pair of settings is really important.

32
00:01:29.370 --> 00:01:34.980
Choosing the VPC by way of its sub nets as well as the security group.

33
00:01:34.980 --> 00:01:38.230
Remember that A VPC is essentially a private network

34
00:01:38.230 --> 00:01:41.330
on AWS and I have a few VP sees,

35
00:01:41.330 --> 00:01:46.970
including the default VPC and the one I created for my RTs database.

36
00:01:46.970 --> 00:01:48.890
Instance, by default,

37
00:01:48.890 --> 00:01:53.960
this wizard has chosen sub nets from my accounts default vpc And

38
00:01:53.960 --> 00:01:57.960
if I used those that would result in a lot more work and knowledge

39
00:01:57.960 --> 00:02:02.190
about working with the RTs database, then we should have to worry about.

40
00:02:02.190 --> 00:02:05.990
So I'm gonna change this to use the sub nets from the VPC that

41
00:02:05.990 --> 00:02:09.280
the rds instance is already part of all in.

42
00:02:09.280 --> 00:02:13.630
Check the sub nets for the default and check all three sub nets one for

43
00:02:13.630 --> 00:02:18.840
each of the U S East regions from the plural site rds BPC,

44
00:02:18.840 --> 00:02:23.040
before it closest, noticed the security group over on the right.

45
00:02:23.040 --> 00:02:23.860
That's the one.

46
00:02:23.860 --> 00:02:26.570
Associate it with the default vpc.

47
00:02:26.570 --> 00:02:28.190
As soon as I close this,

48
00:02:28.190 --> 00:02:33.760
that's going to change to the default security group of the plural site RTs vpc.

49
00:02:33.760 --> 00:02:35.920
And now it's been updated with the default security

50
00:02:35.920 --> 00:02:41.140
group for the VPC I want to work with, and I don't have to touch that now.

51
00:02:41.140 --> 00:02:45.370
Another option on this page is Theus Ein Public I p address.

52
00:02:45.370 --> 00:02:48.310
It's already checked and just leave that default.

53
00:02:48.310 --> 00:02:52.050
So the only changes on this page, we're giving a name to the new E.

54
00:02:52.050 --> 00:02:57.250
C s cluster and changing the subjects and security group to the appropriate VPC.

55
00:02:57.250 --> 00:02:59.590
Now let's go to the next pitch.

56
00:02:59.590 --> 00:03:01.680
Only one thing to change here on this page,

57
00:03:01.680 --> 00:03:04.440
and that defines the service that's responsible for

58
00:03:04.440 --> 00:03:06.540
managing the running containers.

59
00:03:06.540 --> 00:03:08.980
We do want a new service for this app,

60
00:03:08.980 --> 00:03:13.480
and again I'll keep the default name that's also the name of the application.

61
00:03:13.480 --> 00:03:15.500
Tasks are interesting.

62
00:03:15.500 --> 00:03:18.070
This really specifies how many containers should be

63
00:03:18.070 --> 00:03:22.040
available if you only have one, and it's got a problem.

64
00:03:22.040 --> 00:03:23.380
That won't be good.

65
00:03:23.380 --> 00:03:27.640
But since this isn't really for production, I'll set this to two tasks.

66
00:03:27.640 --> 00:03:29.320
I really don't need any more than that.

67
00:03:29.320 --> 00:03:32.760
That's the only change, and we can move on to the next page,

68
00:03:32.760 --> 00:03:35.530
which is where you define a load balancer.

69
00:03:35.530 --> 00:03:39.520
The load balancer sits in front of the service and containers,

70
00:03:39.520 --> 00:03:42.550
and its most important job is to ensure that users can

71
00:03:42.550 --> 00:03:44.710
always browse to the same your l.

72
00:03:44.710 --> 00:03:47.900
Even though the different tasks have their own euros and the

73
00:03:47.900 --> 00:03:50.140
load balancer will distribute the load across,

74
00:03:50.140 --> 00:03:53.790
However, many tasks or container instances are available.

75
00:03:53.790 --> 00:03:57.980
Let's have this create a new load balancer just for this application and

76
00:03:57.980 --> 00:04:02.140
notice that making that selection causes the rest of the pages options to be

77
00:04:02.140 --> 00:04:05.470
populated and all these default values air just fine.

78
00:04:05.470 --> 00:04:07.780
Now we could move on to the final page,

79
00:04:07.780 --> 00:04:12.170
where will create a new set of configurations called task definitions.

80
00:04:12.170 --> 00:04:16.140
Remember that a task is a representation of a campaigner,

81
00:04:16.140 --> 00:04:22.060
and here we used task definitions to describe attributes of the containers,

82
00:04:22.060 --> 00:04:28.140
and all of the container instances will be described by the same ask definition.

83
00:04:28.140 --> 00:04:31.420
We want to create a new task definition here.

84
00:04:31.420 --> 00:04:35.520
The definition itself needs a name, and the container needs a name to.

85
00:04:35.520 --> 00:04:39.190
The Wizard will default both names to the name of the application,

86
00:04:39.190 --> 00:04:41.440
and that works just fine for May.

87
00:04:41.440 --> 00:04:43.870
Permissions are very important when defining

88
00:04:43.870 --> 00:04:46.190
everything that fargate needs to know.

89
00:04:46.190 --> 00:04:51.490
The application running in a container needs access to other AWS services.

90
00:04:51.490 --> 00:04:52.220
For example,

91
00:04:52.220 --> 00:04:55.670
permission to get to the parameter store insistence manager

92
00:04:55.670 --> 00:04:58.410
so we can read the database credentials.

93
00:04:58.410 --> 00:05:00.410
That's the task role.

94
00:05:00.410 --> 00:05:04.290
Since this is a demo app and not production for the task roll,

95
00:05:04.290 --> 00:05:09.240
I'll create a new role that's based on the power user access policy.

96
00:05:09.240 --> 00:05:11.800
And we also need to specify a second role,

97
00:05:11.800 --> 00:05:16.200
one that allows fargate to pull images from the E C R.

98
00:05:16.200 --> 00:05:20.610
Remember, that's the elastic container registry and to publish logs,

99
00:05:20.610 --> 00:05:24.760
and we can just leave that as the default green new and the tool

100
00:05:24.760 --> 00:05:27.670
will create the correctly configured role for you.

101
00:05:27.670 --> 00:05:31.840
The container will serve up our A P I on Port 80 and when a

102
00:05:31.840 --> 00:05:36.480
containers run the last piece of Info House docker to please add an

103
00:05:36.480 --> 00:05:40.830
environment variable in the container called SP net core underscore

104
00:05:40.830 --> 00:05:43.000
environment with a value production.

105
00:05:43.000 --> 00:05:46.420
Remember that I change the program file so that it will only

106
00:05:46.420 --> 00:05:49.910
attempt to read from Systems Manager parameter store when the

107
00:05:49.910 --> 00:05:52.840
environment variables anything but development.

108
00:05:52.840 --> 00:05:53.470
Well,

109
00:05:53.470 --> 00:05:56.620
this is how that setting gets into the container and

110
00:05:56.620 --> 00:05:58.600
is available to the application.

111
00:05:58.600 --> 00:06:01.210
So in the container, it will be production,

112
00:06:01.210 --> 00:06:05.540
and the program will go ahead and read from the parameter store,

113
00:06:05.540 --> 00:06:06.940
and that's it.

114
00:06:06.940 --> 00:06:10.580
So, again, we went through a lot of information for this,

115
00:06:10.580 --> 00:06:15.440
but most of it was just to ensure you knew what all of these options were for,

116
00:06:15.440 --> 00:06:19.580
but we didn't have to really make too many changes to the default values.

117
00:06:19.580 --> 00:06:20.360
So truly,

118
00:06:20.360 --> 00:06:27.000
there wasn't a lot of effort here and now it's time to publish this thing to the cloud.

