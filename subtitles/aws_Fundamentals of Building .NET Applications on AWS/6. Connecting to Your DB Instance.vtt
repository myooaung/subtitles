WEBVTT
1
00:00:02.240 --> 00:00:04.930
[Autogenerated] Let's flip back to visual studio for a little

2
00:00:04.930 --> 00:00:09.280
more fun with the database will actually connect to it and do

3
00:00:09.280 --> 00:00:11.340
a little bit of interaction.

4
00:00:11.340 --> 00:00:14.800
There's a really easy way to connect this database to the sequel

5
00:00:14.800 --> 00:00:19.210
server Object Explorer in Visual studio Right Click on the instance

6
00:00:19.210 --> 00:00:22.300
again and choose the ad to server explore.

7
00:00:22.300 --> 00:00:26.740
This opens up the standard visual studio database Connection window,

8
00:00:26.740 --> 00:00:30.030
but pre populates it with everything you need except

9
00:00:30.030 --> 00:00:31.640
for the password to the server.

10
00:00:31.640 --> 00:00:34.090
So all paste in my password.

11
00:00:34.090 --> 00:00:37.230
We do have a small visual problem here.

12
00:00:37.230 --> 00:00:40.350
Plural site videos get recorded at a low resolution,

13
00:00:40.350 --> 00:00:44.340
and the sequel server Connection with No just doesn't fit.

14
00:00:44.340 --> 00:00:48.330
So I'll move it up so you can see that there is indeed an O.

15
00:00:48.330 --> 00:00:52.740
K button at the bottom, and I'll just hit Enter to finish this up.

16
00:00:52.740 --> 00:00:54.840
The server Explorer opened up for me,

17
00:00:54.840 --> 00:00:57.610
and there's the data connection for my instance.

18
00:00:57.610 --> 00:00:58.270
Now all right,

19
00:00:58.270 --> 00:01:03.330
click that and shoes browse in sequel server Object Explorer And there it is.

20
00:01:03.330 --> 00:01:05.600
If I'm already in visual studio,

21
00:01:05.600 --> 00:01:10.610
this object Explorer is definitely my go to for my sequel server databases.

22
00:01:10.610 --> 00:01:13.750
I'll just expand it and There are the standard system

23
00:01:13.750 --> 00:01:17.870
databases you'd expect to see in a sequel server and another

24
00:01:17.870 --> 00:01:21.640
one that's added by AWS called RDS Edmon,

25
00:01:21.640 --> 00:01:24.380
and we'll take one last look over in one of my

26
00:01:24.380 --> 00:01:27.440
favorite tools as your data studio.

27
00:01:27.440 --> 00:01:31.530
If you haven't used it yet, this is a wonderful database tool.

28
00:01:31.530 --> 00:01:33.690
It's lightweight cross platform,

29
00:01:33.690 --> 00:01:38.260
open source and free Microsoft created as your data studio.

30
00:01:38.260 --> 00:01:40.820
For those of us who find Sequel Server management

31
00:01:40.820 --> 00:01:45.480
studio to be overkill most of the time, I'll create a new connection.

32
00:01:45.480 --> 00:01:48.020
And remember that I said the DB instance.

33
00:01:48.020 --> 00:01:50.460
Endpoint is the server name.

34
00:01:50.460 --> 00:01:55.440
The AWS tool kit back in visual studio makes it easy to copy that.

35
00:01:55.440 --> 00:01:55.930
So ah,

36
00:01:55.930 --> 00:01:59.150
flip back to visual studio where I can right click on the

37
00:01:59.150 --> 00:02:02.340
instance and select copy address to Clipboard,

38
00:02:02.340 --> 00:02:04.570
then back to Azure Data Studio,

39
00:02:04.570 --> 00:02:07.610
and I can pace that into the text box to the server name.

40
00:02:07.610 --> 00:02:11.230
The toolkit does add the port to the end of the server name,

41
00:02:11.230 --> 00:02:14.980
and in this case, that's 14 33 which is the default anyway,

42
00:02:14.980 --> 00:02:19.110
so you can leave it or delete it if you want Doesn't really make a difference,

43
00:02:19.110 --> 00:02:22.410
then I can put in my sequel Log in credentials,

44
00:02:22.410 --> 00:02:25.140
so we'll type in my user name and then password,

45
00:02:25.140 --> 00:02:26.830
and I can connect already.

46
00:02:26.830 --> 00:02:30.490
We can see the server and some details about it in the overview page,

47
00:02:30.490 --> 00:02:32.450
and there are the databases.

48
00:02:32.450 --> 00:02:33.740
I'll create a new one in there.

49
00:02:33.740 --> 00:02:38.060
I'll start with a new query, and then I'll just use the built in sequel snippets.

50
00:02:38.060 --> 00:02:41.960
And there's sequel Create database that makes it easy for me

51
00:02:41.960 --> 00:02:45.500
because I cannot memorize home of the T sequel.

52
00:02:45.500 --> 00:02:49.370
I'll type in a new database name, plural site test and run the command,

53
00:02:49.370 --> 00:02:50.880
and there's the database.

54
00:02:50.880 --> 00:02:51.370
So,

55
00:02:51.370 --> 00:02:54.890
as you probably expected now that I'm connected to the sequel

56
00:02:54.890 --> 00:02:59.940
server database instance managed by Amazon RDS,

57
00:02:59.940 --> 00:03:04.550
I can work with it just like I'd work with any other sequel server database.

58
00:03:04.550 --> 00:03:07.030
There's really not anything else we need to do here.

59
00:03:07.030 --> 00:03:10.570
The database servers ready for action and in the next module will

60
00:03:10.570 --> 00:03:22.000
connect an A s p dot net core a p I to this database using entity framework core and then I'll publish it to AWS

