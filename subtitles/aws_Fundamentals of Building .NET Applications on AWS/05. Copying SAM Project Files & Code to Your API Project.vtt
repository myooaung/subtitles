WEBVTT
1
00:00:01.090 --> 00:00:04.750
[Autogenerated] Now that you've had your little tour of the sample project,

2
00:00:04.750 --> 00:00:08.360
it's time to transform the A P I that we've been working with

3
00:00:08.360 --> 00:00:12.440
earlier into an AWS serverless application.

4
00:00:12.440 --> 00:00:16.440
And we'll do that by first copying files and some code from

5
00:00:16.440 --> 00:00:19.310
the new sample project into our old A.

6
00:00:19.310 --> 00:00:19.510
P.

7
00:00:19.510 --> 00:00:22.990
I and I did consider going the opposite direction,

8
00:00:22.990 --> 00:00:27.730
adding the code from our existing AP I into the sample project,

9
00:00:27.730 --> 00:00:30.910
but I prefer to use my working project is the base,

10
00:00:30.910 --> 00:00:33.690
since it does have a lot more logic in it,

11
00:00:33.690 --> 00:00:39.250
I'll use the project as it was prior to adding the doctor support and apply the

12
00:00:39.250 --> 00:00:43.490
needed files and other co changes to do the transformation.

13
00:00:43.490 --> 00:00:47.530
Then we'll need to make some edits that give our absolute needed permissions

14
00:00:47.530 --> 00:00:52.970
and finally clean out any excess code from the files we copied over that are

15
00:00:52.970 --> 00:00:59.060
specific to that sample s three proxy controller.

16
00:00:59.060 --> 00:01:00.660
If you want to follow along,

17
00:01:00.660 --> 00:01:03.790
then the solution you want from the downloads is the

18
00:01:03.790 --> 00:01:06.440
before solution for this module.

19
00:01:06.440 --> 00:01:07.320
Otherwise,

20
00:01:07.320 --> 00:01:10.080
you can use the version of the solution that you ended up

21
00:01:10.080 --> 00:01:13.770
with After applying the logic to read from the Systems

22
00:01:13.770 --> 00:01:17.580
Manager And with that project in hand,

23
00:01:17.580 --> 00:01:21.810
we first need to update the CS Project file with the AWS Newgate

24
00:01:21.810 --> 00:01:25.930
packages and that AWS Project type element.

25
00:01:25.930 --> 00:01:30.050
So I'll copy that AWS Project type element first,

26
00:01:30.050 --> 00:01:33.220
then paste that into my C s prod.

27
00:01:33.220 --> 00:01:37.620
And then I'll copy just two of the AWS packages.

28
00:01:37.620 --> 00:01:42.140
The 3rd 1 is related to s three, so I don't really need that.

29
00:01:42.140 --> 00:01:45.390
So I'll copy them into my C s project file.

30
00:01:45.390 --> 00:01:45.840
Next,

31
00:01:45.840 --> 00:01:48.280
we need to copy over the three files that are

32
00:01:48.280 --> 00:01:51.400
specific to the serverless application.

33
00:01:51.400 --> 00:01:57.230
The three files that I want our AWS Lambda Tools Default Jason Lambda

34
00:01:57.230 --> 00:02:01.420
entry point dot CS and Server List Out template.

35
00:02:01.420 --> 00:02:03.420
I don't need local entry point, though,

36
00:02:03.420 --> 00:02:07.000
because that's just a renamed program dot CS file.

37
00:02:07.000 --> 00:02:08.590
After copying them in,

38
00:02:08.590 --> 00:02:12.790
I do need to change the name space of the Lambda Entry Point

39
00:02:12.790 --> 00:02:16.210
class because right now it's got the name space of the

40
00:02:16.210 --> 00:02:18.240
project that came from the template.

41
00:02:18.240 --> 00:02:22.250
So I just need to change that name space to net core a p I to

42
00:02:22.250 --> 00:02:24.600
match the rest of the classes in this project.

43
00:02:24.600 --> 00:02:26.020
And if I forgot to do this,

44
00:02:26.020 --> 00:02:29.650
the compiler would be happy to remind me about that problem.

45
00:02:29.650 --> 00:02:33.770
There's one more important bit of copying we need to do here.

46
00:02:33.770 --> 00:02:37.250
The unit method in the Lambda Entry Point class doesn't

47
00:02:37.250 --> 00:02:40.810
know about reading the systems Manager parameter store to

48
00:02:40.810 --> 00:02:43.040
get the database credentials.

49
00:02:43.040 --> 00:02:49.080
So I'll flip over to the program CS file and copy that bit of logic,

50
00:02:49.080 --> 00:02:53.540
then back over to Lambda Entry Point and paste it in.

51
00:02:53.540 --> 00:02:56.960
And I've got to get the name space in here a swell there.

52
00:02:56.960 --> 00:02:57.360
Remember,

53
00:02:57.360 --> 00:03:01.620
there were some changes in upsetting start Jason and the start of class,

54
00:03:01.620 --> 00:03:05.950
but those were all related to that s three proxy controller.

55
00:03:05.950 --> 00:03:09.910
So we don't need to copy any of the code from those two files,

56
00:03:09.910 --> 00:03:14.060
which means that's it for what we need to copy into our project.

57
00:03:14.060 --> 00:03:18.090
I do realize that this was a lot of steps to keep track of,

58
00:03:18.090 --> 00:03:20.250
and we still have a few more to go.

59
00:03:20.250 --> 00:03:22.700
So at the end of this module,

60
00:03:22.700 --> 00:03:25.560
I'll provide an itemized list of all the changes I

61
00:03:25.560 --> 00:03:31.000
made during this transformation. So you don't have to worry about forgetting the details

