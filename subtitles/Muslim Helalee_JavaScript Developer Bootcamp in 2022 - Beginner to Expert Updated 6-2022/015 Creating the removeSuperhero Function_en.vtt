WEBVTT
1
00:00:02.160 --> 00:00:08.039
Hi, everyone, this lecture working, going to create the removed superhero function.

2
00:00:09.290 --> 00:00:17.180
All right, so now we know that the store superhero is a static class or it means that it has static

3
00:00:17.180 --> 00:00:21.300
functions so we don't have to instantiate it every time.

4
00:00:21.530 --> 00:00:26.840
So what we are going to do is we just called it, we just called it and put a method on it.

5
00:00:26.990 --> 00:00:34.120
And then we are going to go ahead to the store superhero class and we are going to create that method.

6
00:00:34.370 --> 00:00:40.910
So we are going to say removing superheroes from the class.

7
00:00:42.260 --> 00:00:42.920
Yeah, from the.

8
00:00:43.130 --> 00:00:45.940
So now what is the name of this function?

9
00:00:45.950 --> 00:00:47.710
It is removed superhero.

10
00:00:48.020 --> 00:00:48.370
Right.

11
00:00:48.380 --> 00:00:51.140
So I'm going to say remove superhero.

12
00:00:51.320 --> 00:00:58.790
What is the parameter for which we have the argument it is going to be the collect superhero.

13
00:00:59.320 --> 00:01:00.660
Just going to pass it right here.

14
00:01:01.340 --> 00:01:03.790
So where is what is this superhero?

15
00:01:03.800 --> 00:01:04.959
We know what that is.

16
00:01:05.330 --> 00:01:11.300
It's the superhero that the user has clicked on and we know where it's where it's coming from.

17
00:01:11.300 --> 00:01:12.740
It's coming from this line.

18
00:01:12.920 --> 00:01:13.880
We have selected it.

19
00:01:14.180 --> 00:01:19.610
We have put it in, said you could go ahead and put this inside the the parentheses, but I think that's

20
00:01:19.610 --> 00:01:20.510
not a good idea.

21
00:01:20.990 --> 00:01:24.770
We should store it inside a variable and then just pass on the variable there.

22
00:01:25.100 --> 00:01:26.270
This is more professional.

23
00:01:26.810 --> 00:01:29.270
So that's come here.

24
00:01:29.630 --> 00:01:35.210
OK, so what it is that we want to do, first off, let's go ahead and let's call our superhero list.

25
00:01:35.570 --> 00:01:43.280
So we are going to say superhero list and we are going to store superhero to get superhero.

26
00:01:43.790 --> 00:01:44.160
Right.

27
00:01:44.420 --> 00:01:49.840
So this is going to give us all the superheroes which are inside the local storage.

28
00:01:50.030 --> 00:01:52.850
It comes from this function which we have talked about it.

29
00:01:53.540 --> 00:01:53.870
Right.

30
00:01:53.870 --> 00:01:55.360
And it is going to give us that.

31
00:01:55.370 --> 00:02:06.920
And then when we received the list, we are simply going to loop over that list to find out which superhero

32
00:02:07.130 --> 00:02:09.729
matches the clicked superhero.

33
00:02:09.780 --> 00:02:10.100
Right.

34
00:02:10.310 --> 00:02:15.350
So for that, we are going to say the superhero, what is the superhero that we want?

35
00:02:15.740 --> 00:02:23.450
And this for each is also going to give us the index of that superhero object, OK, because objects

36
00:02:23.450 --> 00:02:24.560
are inside an array.

37
00:02:24.560 --> 00:02:26.720
So objects are array items.

38
00:02:26.720 --> 00:02:29.060
NRA items have indices.

39
00:02:29.510 --> 00:02:29.800
Right.

40
00:02:29.810 --> 00:02:39.380
And we are going to say F and you know why we do F because f this superhero has a name which is equal

41
00:02:39.380 --> 00:02:43.880
to the superhero, then we just want to remove it from that array.

42
00:02:44.060 --> 00:02:48.260
So we are going to say superhero dart superhero name.

43
00:02:48.620 --> 00:02:56.000
If it is, if it equals the CLECs superhero what it is that we want to do, we want to grab our Hoopes

44
00:02:56.300 --> 00:03:00.800
superhero list and we are going to call this Pliss method on it.

45
00:03:01.220 --> 00:03:05.000
We are going to splice now what is the index that we want to remove?

46
00:03:05.180 --> 00:03:15.620
It is the index of that specific superhero that has an equal name as the superhero and how many items

47
00:03:15.620 --> 00:03:16.430
we want to remove.

48
00:03:16.430 --> 00:03:20.750
We just want to remove one item and now we have successfully removed it.

49
00:03:20.900 --> 00:03:23.960
So we need to let the local stories, you know as well.

50
00:03:24.290 --> 00:03:33.860
So the way that this works is whenever we retrieve items from the local is using this line, we iterate

51
00:03:33.860 --> 00:03:41.960
over it with this piece of code and we pass in a a condition if the condition this is the condition,

52
00:03:41.960 --> 00:03:47.050
we just went over it and then this superhero list is going to be changed.

53
00:03:47.390 --> 00:03:53.990
So this superhero list is not the same list as we retrieve because one item has been removed from it.

54
00:03:54.260 --> 00:03:59.660
So we need to pass the superhero he released back to the local storage as well.

55
00:03:59.900 --> 00:04:02.090
That's how this list is going to be updated.

56
00:04:02.330 --> 00:04:04.880
So we retrieve the the the list.

57
00:04:05.510 --> 00:04:09.350
We remove one item from it and then we send it back to the local storage.

58
00:04:09.690 --> 00:04:11.810
OK, so that's the process.

59
00:04:12.200 --> 00:04:16.190
And the name should just make sure that the names are the same.

60
00:04:16.519 --> 00:04:25.070
So here we have said superheroes, wi superheroes, because when we initially when we sent him to the

61
00:04:25.070 --> 00:04:27.550
local storage, we have said superheroes.

62
00:04:27.710 --> 00:04:30.880
So keep in mind that all the superheroes, they should be the same.

63
00:04:31.100 --> 00:04:38.480
Otherwise you're going to have like conflicting superhero keys in the local storage and you're not going

64
00:04:38.480 --> 00:04:39.560
to be able to remove it.

65
00:04:39.740 --> 00:04:44.930
So you have to make sure that this superhero, when when you get it, it should have the same name,

66
00:04:44.930 --> 00:04:50.510
the same key name when you said it, when you get it once more here, it should have the same when you

67
00:04:50.510 --> 00:04:54.740
said it, it should have the same name when you said it here, it should have the same name.

68
00:04:55.160 --> 00:04:59.090
So the second argument is going to be our Jason String.

69
00:04:59.090 --> 00:05:05.270
If we convert converted in order to be stored inside the local storage, we need to convert it to a

70
00:05:05.270 --> 00:05:08.330
format that local storage can pass.

71
00:05:08.630 --> 00:05:17.450
And understand, and we used it in a string of five because we convert a JavaScript value to a JavaScript

72
00:05:17.450 --> 00:05:19.580
value to a JSON string.

73
00:05:19.790 --> 00:05:21.040
That's why it's a string.

74
00:05:21.050 --> 00:05:22.220
If I just string it.

75
00:05:23.000 --> 00:05:26.960
And what it is that we want to string, we want to string the superhero list.

76
00:05:27.230 --> 00:05:32.310
So now if I come here, you can see that we have this is the index that we select.

77
00:05:32.330 --> 00:05:33.650
See, this is the index.

78
00:05:33.920 --> 00:05:36.120
It is provided to us automatically.

79
00:05:36.470 --> 00:05:41.680
So now if I click on the Hawkeye and Hawkeye has an index of two, it should be removed.

80
00:05:41.990 --> 00:05:42.760
So clicked.

81
00:05:43.400 --> 00:05:49.700
Hawkeye's is now removed because Stalder remove superhero is not a function at 158.

82
00:05:50.570 --> 00:05:53.290
So remove 158.

83
00:05:53.300 --> 00:05:54.590
It's down below.

84
00:05:55.950 --> 00:06:09.270
Remove superhero, did I right store that, uh, hmm, store superhero that remove superhero, is it

85
00:06:09.270 --> 00:06:11.330
the same name as we have here?

86
00:06:11.970 --> 00:06:12.430
Yeah.

87
00:06:12.550 --> 00:06:13.320
Oh, sorry.

88
00:06:13.350 --> 00:06:14.540
It should be static.

89
00:06:15.750 --> 00:06:17.310
It should be a static method.

90
00:06:17.310 --> 00:06:18.140
So let's save it.

91
00:06:18.150 --> 00:06:23.100
Let's go over this one more time and let's click on the Harki.

92
00:06:23.580 --> 00:06:28.890
And if I click it and you can see that hockey has been removed from this list, we have Superman, Black

93
00:06:28.890 --> 00:06:33.550
Panther, Antman and Flash, Superman, Black Panther, Antman and Flash.

94
00:06:33.810 --> 00:06:44.160
So if I were to say, like, I want to add Aquaman and I can say DC talks to fish, and if I add it,

95
00:06:44.310 --> 00:06:46.370
you can see that Aquaman has been added here.

96
00:06:46.620 --> 00:06:52.530
So if I click, let's say let's remove Superman and no, let's remove Aquaman talks to fish.

97
00:06:52.530 --> 00:06:53.090
Weird.

98
00:06:53.100 --> 00:06:55.110
So let's go ahead and click on it.

99
00:06:56.430 --> 00:06:57.560
Aquaman is removed.

100
00:06:57.900 --> 00:06:58.860
Click on the black.

101
00:06:58.860 --> 00:07:00.600
No, I'm not going to remove Black Panther.

102
00:07:00.600 --> 00:07:02.970
I'm going to remove Antman removed.

103
00:07:03.030 --> 00:07:05.390
Flash removed, Superman removed.

104
00:07:05.580 --> 00:07:06.870
We are going to keep Black Panther.

105
00:07:07.790 --> 00:07:14.240
All right, so now at this stage, our application is completed, you can see that whenever this is

106
00:07:14.240 --> 00:07:15.560
the key that I was talking about.

107
00:07:15.570 --> 00:07:20.360
So if you provide a different key, you're going to have a different key here with a different value

108
00:07:20.540 --> 00:07:22.310
and you will not be accessing that.

109
00:07:22.310 --> 00:07:25.530
So you cannot write to that or you can remove from that.

110
00:07:25.730 --> 00:07:29.000
Just make sure all the keys are the same, OK, when you provide the key.

111
00:07:29.570 --> 00:07:32.480
So this is going to be it for our application.

112
00:07:32.820 --> 00:07:36.890
And we went over a lot of very cool concepts.

113
00:07:36.890 --> 00:07:45.740
And we also we talked about two different kinds of using classes, static, and then like the kind which

114
00:07:45.740 --> 00:07:50.880
are like not so static or dynamic and we instantiate them, OK.

115
00:07:51.260 --> 00:07:59.210
So we also talked about how we can use event handlers with the with the classes.

116
00:08:00.290 --> 00:08:07.250
And if you go over this project, you can use this project as a template for other projects in case

117
00:08:07.250 --> 00:08:10.400
you're interested in this kind of code in this.

118
00:08:10.520 --> 00:08:11.780
I think this is neat.

119
00:08:12.110 --> 00:08:19.520
I think this this looks professional and especially if you're trying to apply for a job putting object

120
00:08:19.520 --> 00:08:27.290
oriented programming skills under your resume or as we call a CV, that's going to increase your chances

121
00:08:27.290 --> 00:08:28.040
of getting hired.

122
00:08:28.280 --> 00:08:30.470
So make sure you work with this project.

123
00:08:30.680 --> 00:08:36.230
You just go ahead and recreate it like a couple of times and like from memory.

124
00:08:36.230 --> 00:08:44.240
And then you can use this template to create other projects, other OLP projects, create a few of them

125
00:08:44.240 --> 00:08:49.900
added to your resume or CV, and I'm sure it is going to increase your chances of getting hired.

126
00:08:50.180 --> 00:08:57.710
And also this is going to be it for this chapter and this video and see you guys in the next one.

