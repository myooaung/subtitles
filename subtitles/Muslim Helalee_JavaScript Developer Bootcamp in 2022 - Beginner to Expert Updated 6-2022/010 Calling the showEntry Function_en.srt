1
00:00:02,250 --> 00:00:03,210
Hi, everyone.

2
00:00:03,240 --> 00:00:06,870
In this next year, we we're going to call the show entry function.

3
00:00:08,340 --> 00:00:14,190
All right, so we're do we want to actually call this function, we want to call it inside the update

4
00:00:14,190 --> 00:00:21,960
UI, because this update UI is the function which is responsible for updating the balance, the income,

5
00:00:21,960 --> 00:00:28,510
the outcome, the chart, the expense income tracker, the other tracker, the other all list.

6
00:00:29,010 --> 00:00:34,860
So what we are going to do is we are going to grab our entry list and I'm going to explain it very,

7
00:00:34,860 --> 00:00:35,700
very thoroughly.

8
00:00:36,030 --> 00:00:38,750
And we are going to run a for each on it.

9
00:00:39,750 --> 00:00:45,810
So the for each what it is going to grab is it is going to require a callback function, which we have

10
00:00:45,810 --> 00:00:46,530
done a lot.

11
00:00:46,530 --> 00:00:46,820
Right.

12
00:00:46,830 --> 00:00:47,730
But why foreach.

13
00:00:47,730 --> 00:00:55,620
Because decentralised at this point, it has something in it and because this interest is actually in

14
00:00:55,740 --> 00:01:04,200
an array we can call the foreach because we want to apply a certain logic on each of those items.

15
00:01:04,209 --> 00:01:12,180
We want to classify those items either as being inside the contractor or expense structure or being

16
00:01:12,180 --> 00:01:13,700
inside the all or whatever.

17
00:01:14,310 --> 00:01:14,790
Right.

18
00:01:14,940 --> 00:01:16,140
And something like that.

19
00:01:16,410 --> 00:01:23,550
So what we are going to do is we are going to say function lets pass and the loop variables which are

20
00:01:23,550 --> 00:01:27,360
which we are going to pass and the entry and also the index.

21
00:01:27,600 --> 00:01:35,790
So the index is what is going to define our IDE because our ID for first item is going to be one zero

22
00:01:35,790 --> 00:01:36,000
one.

23
00:01:36,000 --> 00:01:37,950
For the second one, it is going to be one.

24
00:01:38,340 --> 00:01:38,810
Right.

25
00:01:38,820 --> 00:01:46,620
And then after that we are going to open the declaration sorry, the execution context of this function.

26
00:01:48,120 --> 00:01:55,230
We are going to say, if not, we are going to have three different to actually two different conditions.

27
00:01:55,560 --> 00:01:59,940
And before writing it, let's just go into the theory.

28
00:01:59,940 --> 00:02:02,310
I mean, like everyone loves theory, right?

29
00:02:02,880 --> 00:02:07,060
So what is what what are these two conditions?

30
00:02:07,320 --> 00:02:14,970
So the first condition is that we want to check if the entry that the user has inserted has a type of

31
00:02:14,970 --> 00:02:15,720
expense.

32
00:02:16,800 --> 00:02:18,120
We want to add it here.

33
00:02:18,690 --> 00:02:23,700
And when we add it to this, we want to add this show entry.

34
00:02:24,000 --> 00:02:26,570
You know, I'm going to try I'm going to start over.

35
00:02:26,760 --> 00:02:29,430
So we have an ally here right now.

36
00:02:29,430 --> 00:02:31,990
This allai has a class which is tie.

37
00:02:32,190 --> 00:02:32,700
All right.

38
00:02:33,180 --> 00:02:40,560
If what the user has inserted is inside the expense structure, it means that this class is going to

39
00:02:40,560 --> 00:02:40,710
be.

40
00:02:41,280 --> 00:02:42,830
The idea is going to be zero.

41
00:02:43,170 --> 00:02:45,080
And what do we want to do?

42
00:02:45,390 --> 00:02:51,430
We want to graph from that what you have, what the user has inserted from there.

43
00:02:51,450 --> 00:02:54,300
We want to grab the title and we want to grab the amount.

44
00:02:54,670 --> 00:02:55,080
Right.

45
00:02:55,350 --> 00:02:56,790
And we want to show it here.

46
00:02:57,090 --> 00:03:04,200
So in here, we are going to see, for example, if I say rent 50, so we are going to see title amount

47
00:03:04,320 --> 00:03:05,760
and two icons.

48
00:03:05,970 --> 00:03:10,600
I want to show it here and they will receive a style automatically.

49
00:03:10,860 --> 00:03:13,020
Now, where is this style coming from?

50
00:03:13,050 --> 00:03:21,030
If I come to my expense structure, you can see that the less the less has a color of tomato and for

51
00:03:21,030 --> 00:03:23,550
the income tracker, it has a color of long green.

52
00:03:24,510 --> 00:03:26,700
That's where the color is coming from.

53
00:03:27,180 --> 00:03:38,430
So if I come here, so the first situation that I want to check is if entry door type equals what expense?

54
00:03:39,150 --> 00:03:41,190
Because we have two different types.

55
00:03:41,520 --> 00:03:45,650
One is expense, the other one is income as well as in here.

56
00:03:45,810 --> 00:03:49,110
So we have specified one is income and one is expense.

57
00:03:49,170 --> 00:03:57,720
OK, so if the entry type is expense, we also have them specified here as well because it says income.

58
00:03:58,200 --> 00:04:00,240
Basically we are grabbing it from here.

59
00:04:00,540 --> 00:04:08,610
So we say because this object is within this array, we select this object using this for each method.

60
00:04:09,970 --> 00:04:16,360
And we want to grab this entry is going to go inside this entry list and it is going to grab a type

61
00:04:16,870 --> 00:04:17,290
right.

62
00:04:17,440 --> 00:04:23,800
And the index is going to be dependent on the index of the item that the user has inserted, the item

63
00:04:23,800 --> 00:04:25,150
that the user has inserted.

64
00:04:25,480 --> 00:04:30,700
So if the entry type equals expense, we want to call our show into a function.

65
00:04:31,000 --> 00:04:32,790
But this is not the important part.

66
00:04:32,800 --> 00:04:37,660
The important part is these are like inserting all of these arguments.

67
00:04:37,960 --> 00:04:41,560
So it says, first we should insert the list.

68
00:04:41,740 --> 00:04:42,790
What is the list?

69
00:04:43,330 --> 00:04:48,970
When the entry type is expense, which the list does it belong to?

70
00:04:48,970 --> 00:04:50,950
It belongs to the expense list.

71
00:04:51,730 --> 00:04:57,820
I'm just going to pass an expense list and I'm going to head and you can see right away when I do comma,

72
00:04:58,180 --> 00:05:03,490
the underline is going to shift to Type C. It has shifted to what is the type?

73
00:05:03,790 --> 00:05:05,450
The type is very simple.

74
00:05:05,920 --> 00:05:07,270
Now here is the trick.

75
00:05:07,570 --> 00:05:13,840
We are not going to add the type to expense because we have already specified that right here we are

76
00:05:13,840 --> 00:05:19,690
going to say the type is going to be entry doctype duct tape.

77
00:05:20,500 --> 00:05:23,590
And after that it says, what is the title?

78
00:05:23,890 --> 00:05:27,620
The title is going to be whatever the user has inserted.

79
00:05:27,970 --> 00:05:30,650
That's why we are going to go in now.

80
00:05:30,670 --> 00:05:37,750
This entry is going to get us that specific object and from there we are going to grab either the title

81
00:05:37,750 --> 00:05:47,200
or the type or next stop the amount entries, that amount, which is the most important of them all.

82
00:05:48,340 --> 00:05:51,120
And finally, we are going to pass in our index.

83
00:05:51,370 --> 00:05:58,450
Now, the index is going to be start from zero and go all the way to as many budget indices.

84
00:05:58,450 --> 00:06:03,250
We have, for example, budget like entries we have.

85
00:06:03,580 --> 00:06:09,190
So if we have five entries for the incoming like 15 entries for the expense, the index is going to

86
00:06:09,190 --> 00:06:12,860
be fourteen because it is going to start from zero.

87
00:06:13,840 --> 00:06:14,460
This is it.

88
00:06:14,470 --> 00:06:15,030
That's it.

89
00:06:15,730 --> 00:06:20,400
Now, this is when the entry has a type of expense, FLC elusive.

90
00:06:22,920 --> 00:06:30,810
The entry F the entry has what if the entry has a type of income?

91
00:06:31,290 --> 00:06:32,460
What do we want to do then?

92
00:06:33,030 --> 00:06:38,970
Now, why do we want to do then, as we are going to call our show into a function and we are going

93
00:06:38,970 --> 00:06:39,970
to pass the list.

94
00:06:40,170 --> 00:06:44,560
So in case this is income, which less does it belong to?

95
00:06:44,670 --> 00:06:46,680
It is going to belong to the income list.

96
00:06:47,520 --> 00:06:49,500
So what is going to be the type?

97
00:06:49,500 --> 00:06:51,900
The type is going to be entry type.

98
00:06:52,730 --> 00:07:02,540
And tree type, what is the what is the third one is the title, it is going to be in the title and

99
00:07:02,540 --> 00:07:04,700
then what is the amount?

100
00:07:04,700 --> 00:07:07,760
It is going to be in tree that amount.

101
00:07:09,090 --> 00:07:17,580
Ampere, unpunched amant And finally, we are going to pass in the index, so now this is created,

102
00:07:17,880 --> 00:07:22,500
but we and we have inserted items to our expense list and income list.

103
00:07:22,770 --> 00:07:24,900
But there is one major thing remaining.

104
00:07:24,910 --> 00:07:25,600
What is that?

105
00:07:26,100 --> 00:07:27,630
That is the whole list.

106
00:07:27,870 --> 00:07:30,990
Now, I'm going to give you five seconds here, OK?

107
00:07:31,800 --> 00:07:34,260
I'm going to give you five seconds.

108
00:07:34,710 --> 00:07:41,610
And in these five seconds, what you what you have to do is think about this.

109
00:07:41,760 --> 00:07:50,340
Do we have to create another LaFalce block to enter our all list or we should just throw it casually

110
00:07:50,340 --> 00:07:53,010
there or we need another function for that.

111
00:07:53,020 --> 00:07:54,720
So we need three situations.

112
00:07:55,000 --> 00:07:58,380
I'm going to give you five seconds and the clock starts now.

113
00:08:03,000 --> 00:08:05,640
All right, so what do you think?

114
00:08:06,510 --> 00:08:08,890
I'm sure you know the answer.

115
00:08:08,910 --> 00:08:16,250
The answer is we do not need another function for that and we do not need another ounce of luck.

116
00:08:16,890 --> 00:08:17,820
And why is that?

117
00:08:17,820 --> 00:08:26,700
Because no matter the tracker, either if it is the income tracker or if it is the like, let's say

118
00:08:28,350 --> 00:08:35,250
the expense structure, it doesn't matter which track it is, where our ally is inserted, we want to

119
00:08:35,250 --> 00:08:42,480
insert it inside the oil so we do not care about any conditions in every condition.

120
00:08:42,480 --> 00:08:46,680
We want to insert the show at the entry inside overall list.

121
00:08:47,010 --> 00:08:51,090
So in that case that we want to run a code any way.

122
00:08:51,450 --> 00:08:52,590
In any case.

123
00:08:52,590 --> 00:08:53,760
In all cases.

124
00:08:54,730 --> 00:09:00,310
We do not need an if statement for that, right, because we are going to run it anyway, it doesn't

125
00:09:00,310 --> 00:09:04,650
matter what the cases, it doesn't matter what the condition is.

126
00:09:04,810 --> 00:09:09,300
So when the condition doesn't matter, what is the point of a statement?

127
00:09:09,640 --> 00:09:16,750
So outside this if statement, this elusive block, but remember, inside our for each loop, because

128
00:09:16,750 --> 00:09:19,930
all this is part of this for each loop as well.

129
00:09:20,350 --> 00:09:21,100
It is.

130
00:09:22,000 --> 00:09:29,980
We are going to append a list sorry, an object to it, and we are going to grab that object from the

131
00:09:29,980 --> 00:09:30,820
entry list.

132
00:09:31,000 --> 00:09:37,570
If we go outside this for each, the whole list will have no idea, will have no connection to this

133
00:09:37,930 --> 00:09:42,000
list and it will have no way of grabbing its objects.

134
00:09:42,490 --> 00:09:45,910
So in here, I'm just going to call the show entry.

135
00:09:46,270 --> 00:09:47,790
And now what is the list?

136
00:09:47,800 --> 00:09:52,570
The list is all list and it is going to be entry type.

137
00:09:52,570 --> 00:09:53,770
The type is entry that.

138
00:09:55,080 --> 00:10:05,520
Type the title is entry, the title and the amount of entry that amount and we are going to pass in

139
00:10:05,520 --> 00:10:08,830
our index a right.

140
00:10:08,830 --> 00:10:10,150
So no errors here.

141
00:10:10,170 --> 00:10:13,110
Let's go ahead and check out our application numbers here.

142
00:10:13,380 --> 00:10:14,240
Thank goodness.

143
00:10:14,850 --> 00:10:16,470
So let's say salary.

144
00:10:16,470 --> 00:10:17,160
I don't know.

145
00:10:17,190 --> 00:10:20,700
I keep saying Brading Salal salary.

146
00:10:21,720 --> 00:10:22,110
Funny.

147
00:10:22,590 --> 00:10:26,240
So if not 15, I'm going to say 11, 23.

148
00:10:27,180 --> 00:10:33,960
OK, when I added here, of course it is added to the income tracker and we can see we see a lawn green

149
00:10:33,960 --> 00:10:37,550
color because it is inside the correct tracker.

150
00:10:37,770 --> 00:10:40,300
And lets let's go ahead and check out the expense structure.

151
00:10:41,100 --> 00:10:45,720
There is no income there and this value is is updated.

152
00:10:45,720 --> 00:10:47,130
The balance is updated.

153
00:10:47,580 --> 00:10:48,840
The input is clear.

154
00:10:48,870 --> 00:10:52,980
So let's go ahead and let's like I don't know, like brunch.

155
00:10:54,150 --> 00:11:00,120
And let's turn to five, let's add it, and now this is working properly as well.

156
00:11:00,570 --> 00:11:01,790
This has been updated.

157
00:11:01,800 --> 00:11:04,050
The outcome, the balance has been updated.

158
00:11:04,320 --> 00:11:06,120
You don't need to worry about the math.

159
00:11:06,360 --> 00:11:07,530
JavaScript does that.

160
00:11:07,530 --> 00:11:08,640
So you should be cool.

161
00:11:10,170 --> 00:11:13,290
And it is inside the expense structure.

162
00:11:13,290 --> 00:11:15,120
It is in the correct spot.

163
00:11:15,340 --> 00:11:22,020
And now for the final thing, inside the oil and now inside the oil, we can see we have our salary

164
00:11:22,020 --> 00:11:25,770
and we have our seventy five dollars for the branch.

165
00:11:26,520 --> 00:11:34,680
OK, so we have successfully added in added items to our income tracker expense structure and to the

166
00:11:34,960 --> 00:11:35,430
list.

167
00:11:35,730 --> 00:11:43,660
And we have successfully updated the UI like the balance, the income and the outcome.

168
00:11:43,920 --> 00:11:45,780
So what is actually remaining here?

169
00:11:46,050 --> 00:11:52,560
The first thing that's still remaining, that this application is still missing as this chart, which

170
00:11:52,560 --> 00:11:58,830
we are going to start creating from our next lectures and then the local storage, the LS because when

171
00:11:58,830 --> 00:12:01,860
I reload this page, everything is going to go away.

172
00:12:02,410 --> 00:12:02,760
All right.

173
00:12:02,880 --> 00:12:04,470
But we don't want it to go away.

174
00:12:04,500 --> 00:12:08,100
So we are going to use your see you guys in the next one.

