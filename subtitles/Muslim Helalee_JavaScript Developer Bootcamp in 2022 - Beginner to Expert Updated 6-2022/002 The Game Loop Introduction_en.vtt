WEBVTT
1
00:00:01.670 --> 00:00:02.640
Hi, everyone.

2
00:00:02.810 --> 00:00:05.990
In this next year, we're going to create our game loop.

3
00:00:08.109 --> 00:00:15.490
All right, so before diving there, we have some very minimal and basic styling reset for all of our

4
00:00:15.490 --> 00:00:19.780
elements and basic styling for just that background image that we have there.

5
00:00:20.080 --> 00:00:24.600
And in the e-mail, we just have one element that is canvassed in the CSF.

6
00:00:24.610 --> 00:00:29.020
There are some styling at present here and there are some comments.

7
00:00:29.200 --> 00:00:34.130
We are going to set up the stars, the game loop, the random sine function.

8
00:00:34.600 --> 00:00:38.780
Now we have selected our canvas and initialize the 2D context.

9
00:00:39.130 --> 00:00:40.850
This is the size of our canvas.

10
00:00:41.080 --> 00:00:45.280
Now the stars color is going to be white.

11
00:00:45.580 --> 00:00:49.020
These stars number is going to be 1000, OK?

12
00:00:49.390 --> 00:00:54.550
And so each time on the screen we are going to see 1000 different stars.

13
00:00:54.940 --> 00:00:58.090
Now, I check this on my laptop.

14
00:00:58.300 --> 00:01:00.880
I could go like to 2000.

15
00:01:01.390 --> 00:01:03.970
And if I Seveso now there are 2000 stars.

16
00:01:04.180 --> 00:01:06.910
I could go all the way to 3000 stars.

17
00:01:07.210 --> 00:01:13.610
And the limit for my computer's performance was almost 4000.

18
00:01:13.870 --> 00:01:19.900
So now you can see that there are 4000 and the animation is sometimes just smooth and sometimes just

19
00:01:19.900 --> 00:01:20.440
Ligi.

20
00:01:20.650 --> 00:01:24.310
And I think it's not even 4000, it's 35 hundred.

21
00:01:24.580 --> 00:01:27.550
And I can see it's smooth and my computer is overworking.

22
00:01:27.790 --> 00:01:33.360
But if I put him to 10000 stars, you can see it's really lagging, right?

23
00:01:33.550 --> 00:01:37.690
So the limit for my computer was 30, 500 stars.

24
00:01:38.930 --> 00:01:42.070
Years might be way faster or slower.

25
00:01:42.790 --> 00:01:49.510
And I'm just going to set it to 1000 stars because now the more stars you're going to have, the slower

26
00:01:49.510 --> 00:01:50.710
the animation is going to be.

27
00:01:51.310 --> 00:01:54.470
OK, but 1000 works really, really fine.

28
00:01:54.490 --> 00:01:57.220
So let's go ahead.

29
00:01:57.220 --> 00:01:59.740
And I'm going I'm just going to set it to 1000.

30
00:02:00.010 --> 00:02:07.510
The size is going to be zero point zero 05, and this size is going to be multiplied by the inner with

31
00:02:07.510 --> 00:02:08.520
an inner height.

32
00:02:08.800 --> 00:02:17.440
So it's going to be it's going to be zero point zero zero five parts of this inner with an inner height.

33
00:02:17.860 --> 00:02:21.890
And the speed is going to be that of the inner with an inner height as well.

34
00:02:22.210 --> 00:02:32.650
So based on the values of inner with an inner height, let's say 1500 and let's say 1500 and 700, these

35
00:02:32.650 --> 00:02:34.410
values are going to be calculated.

36
00:02:34.750 --> 00:02:37.920
So first things first, I'm going to talk about the game loop.

37
00:02:38.290 --> 00:02:39.820
Now, what a what is it?

38
00:02:39.820 --> 00:02:40.750
What is the game?

39
00:02:40.990 --> 00:02:48.610
So before actually diving into the game loop itself for this project, I'm just going to create a function

40
00:02:48.610 --> 00:02:51.130
and I'm going to say run stars.

41
00:02:51.820 --> 00:02:52.180
Right.

42
00:02:52.180 --> 00:02:54.280
And I'm just going to call it run stars.

43
00:02:54.610 --> 00:02:56.920
And I'm not going to pass on anything yet.

44
00:02:56.930 --> 00:03:00.670
We are going to pass on something and I'm going to cancel like something.

45
00:03:02.910 --> 00:03:11.550
Running right now, there is a method available to us and that method is called the get animation frame

46
00:03:11.550 --> 00:03:16.670
method, and this this method is available to us by JavaScript.

47
00:03:17.070 --> 00:03:24.810
And what this method is going to do is it's going to run this function as many times as it as it can.

48
00:03:24.840 --> 00:03:26.910
And how do you know how many times it can?

49
00:03:27.210 --> 00:03:30.150
So I'm just going to go into my display settings.

50
00:03:30.390 --> 00:03:35.130
If you're going to display settings for Windows, then I'm not sure how this works for Mac.

51
00:03:35.820 --> 00:03:37.790
I know how it works for Windows.

52
00:03:37.800 --> 00:03:39.900
I've never worked with Mac before.

53
00:03:40.170 --> 00:03:45.990
So if you go to here and if you come here, advanced displays setting, you can see that my refresh

54
00:03:45.990 --> 00:03:47.610
rate is 60 hertz.

55
00:03:47.880 --> 00:03:56.520
It means that what actually it means is, is whenever whenever we create animations or games, the screen

56
00:03:56.520 --> 00:04:00.360
is being refreshed 60 times a second.

57
00:04:01.020 --> 00:04:05.280
Now, the higher the refresh rate, the smoother the picture.

58
00:04:05.790 --> 00:04:13.800
If the screen rate is like five, it means that it is going to refresh like five times a second rate

59
00:04:13.980 --> 00:04:15.630
of the screen rate is one.

60
00:04:15.630 --> 00:04:15.890
It is.

61
00:04:15.900 --> 00:04:19.230
It means that it is going to refresh one time per second.

62
00:04:19.740 --> 00:04:29.190
And the lower this number, the like the Ligeia and the more like interrupted screen experience you

63
00:04:29.190 --> 00:04:36.450
are going to get now some games like for example, run on some computers, some games that do not run

64
00:04:36.690 --> 00:04:41.520
because that the performance of this refresh rate.

65
00:04:41.520 --> 00:04:41.850
Right.

66
00:04:42.060 --> 00:04:47.510
Because the computer is not able to handle the refresh rate for that game.

67
00:04:47.850 --> 00:04:49.710
So for me, it's 60 hertz.

68
00:04:49.710 --> 00:04:51.290
It's usually 60 hertz.

69
00:04:51.660 --> 00:04:52.530
What does that mean?

70
00:04:52.710 --> 00:05:02.730
It means that this repeat animation frame is going to draw a screen for us 60 times per second.

71
00:05:03.600 --> 00:05:05.670
That's how animation actually works.

72
00:05:05.670 --> 00:05:05.990
Right.

73
00:05:06.270 --> 00:05:14.580
So that's how actually motion picture or movies, how actually they work the way that movies, animations,

74
00:05:14.580 --> 00:05:24.060
games they work is the screen is being drawn in front of our eyes 60 times per one second or it's cause

75
00:05:24.060 --> 00:05:30.750
if or frames per second, which we are going to get into, I think, in our next project.

76
00:05:31.900 --> 00:05:40.060
All right, so if I request the animation frame, which according to my computer is 60, it should call

77
00:05:40.060 --> 00:05:42.700
this function 60 times a second.

78
00:05:43.030 --> 00:05:43.380
Right.

79
00:05:43.660 --> 00:05:50.080
And the way you can call it, you just repeat a sorry request animation frame and you pass in that function.

80
00:05:50.440 --> 00:05:53.760
Run start ups run.

81
00:05:53.770 --> 00:05:55.800
I always say run, start.

82
00:05:55.810 --> 00:05:56.800
Come on, man.

83
00:05:57.610 --> 00:05:58.720
Run starts.

84
00:05:58.960 --> 00:06:04.830
And now we have created this and we have called the function here, but the function is not being executed.

85
00:06:05.200 --> 00:06:09.610
So if I come down here and if I execute the function, run.

86
00:06:12.820 --> 00:06:20.890
Run stars, and if I save it and if I come here, OK, so let's open it with Life Server.

87
00:06:22.680 --> 00:06:24.190
Hmmm, there we go.

88
00:06:24.270 --> 00:06:31.920
So if I come to inspect and if I come here and say the console, let's clear everything out and then

89
00:06:31.920 --> 00:06:34.460
we can see that this is being this is running.

90
00:06:34.800 --> 00:06:38.670
So it is it tries to run 60 times per second.

91
00:06:39.270 --> 00:06:39.570
Right.

92
00:06:39.750 --> 00:06:47.970
So if you like, for example, for one minute, it's going to run 300 and 3600 times per one minute.

93
00:06:48.150 --> 00:06:50.450
Now you can see it's already at 1000.

94
00:06:50.940 --> 00:06:56.540
And if you if you can the clock, it's running for like 30, 600 tonnes per second.

95
00:06:57.000 --> 00:07:02.430
And what it actually says is that this screen that you can see in front of you, even though it's not

96
00:07:02.430 --> 00:07:08.360
an animation, but this moving of this mouth mouse cursor, this is smooth, right?

97
00:07:08.880 --> 00:07:13.890
This is this is smooth because this refresh rate of my screen is 60 hertz.

98
00:07:14.430 --> 00:07:19.410
It tries to redraw the screen 60 times per second.

99
00:07:19.680 --> 00:07:25.110
And in each redrawing of the screen, the screen might change its position.

100
00:07:25.290 --> 00:07:27.150
So the screen might be like this.

101
00:07:27.630 --> 00:07:29.430
OK, so let's bring it here.

102
00:07:29.610 --> 00:07:30.900
It might go here.

103
00:07:30.900 --> 00:07:31.820
It might go here.

104
00:07:31.830 --> 00:07:32.940
So it might be movie.

105
00:07:32.940 --> 00:07:34.730
You can see it's lagging.

106
00:07:34.750 --> 00:07:37.050
The reason for that is I'm recording the screen.

107
00:07:37.500 --> 00:07:41.070
That's why on your screen it's not going to lag.

108
00:07:41.710 --> 00:07:45.960
And the reason that slag is because the refresh rate is slower, right?

109
00:07:47.140 --> 00:07:53.820
Then the movement of the screen, so this is actually how animations and how games they are, they work.

110
00:07:53.830 --> 00:07:55.640
I'm going to go over this concept one more time.

111
00:07:55.900 --> 00:08:04.600
The concept is the screen, the game, whatever that's in front of you has to be redrawn 60 times per

112
00:08:04.600 --> 00:08:05.070
second.

113
00:08:05.470 --> 00:08:05.970
Why?

114
00:08:06.280 --> 00:08:09.280
Because it has to accommodate for change.

115
00:08:09.290 --> 00:08:10.230
And what does that change?

116
00:08:10.480 --> 00:08:15.520
The change is simply the cursor moving from here all the way to here.

117
00:08:16.390 --> 00:08:23.330
Right, and that's exactly the ideology behind creating games, the ideology behind motion picture,

118
00:08:23.600 --> 00:08:27.200
which is movies or animations, which is again, movies.

119
00:08:27.350 --> 00:08:27.740
Right.

120
00:08:28.100 --> 00:08:30.160
So this is actually what happens.

121
00:08:30.350 --> 00:08:35.270
It's like one picture being moved or being redrawn.

122
00:08:35.270 --> 00:08:40.700
If you just research into into this, you will be able to understand how motion picture works.

123
00:08:42.230 --> 00:08:48.980
Right, so this is a method which is available to us by JavaScript, and this is called the game loop,

124
00:08:49.340 --> 00:08:54.950
right by the like cool kids in JavaScript, cool gamer's of JavaScript.

125
00:08:54.980 --> 00:08:56.360
This is called the game loop.

126
00:08:56.930 --> 00:08:57.260
Right.

127
00:08:57.380 --> 00:09:02.360
So what we are going to now keep in mind, there is another method as well that does exactly the same

128
00:09:02.360 --> 00:09:02.600
thing.

129
00:09:02.840 --> 00:09:08.990
So if I come in this one out, you can see that it just draws it just says running once.

130
00:09:09.500 --> 00:09:12.680
There is another method that does exactly the same thing.

131
00:09:12.680 --> 00:09:16.460
And that method is, you guessed, right, set interval.

132
00:09:17.770 --> 00:09:25.540
If you set the interval and you said the interval to one second or 1000 millisecond, 1000 millisecond,

133
00:09:25.540 --> 00:09:29.440
one second end run, the function starts now.

134
00:09:29.470 --> 00:09:30.700
This is one second, right?

135
00:09:30.880 --> 00:09:33.730
We want it to run 60 times a second.

136
00:09:33.730 --> 00:09:34.500
Why 60?

137
00:09:34.510 --> 00:09:36.310
Because my screen refresh rate.

138
00:09:36.670 --> 00:09:38.290
Refresh rate is 60 times.

139
00:09:38.290 --> 00:09:42.760
And if I save it and if I come here, we get the exact same result.

140
00:09:43.150 --> 00:09:50.500
So now as a game developer to be you decide which method you want to use.

141
00:09:50.860 --> 00:09:55.180
If you use that interval, it's going to be it's going to do the same thing.

142
00:09:55.180 --> 00:10:00.910
If you use repeat animation frame, which is fancier, asking to do the same thing.

143
00:10:01.180 --> 00:10:03.220
So now it's completely up to you.

144
00:10:03.220 --> 00:10:05.610
Whichever one you use doesn't matter.

145
00:10:05.620 --> 00:10:09.540
Do not let anyone tell you which one is better, which one is not.

146
00:10:09.820 --> 00:10:11.610
Both of them are going to do the same thing.

147
00:10:11.920 --> 00:10:17.410
So you can see that it it constantly, constantly doing that.

148
00:10:17.650 --> 00:10:21.190
And it doesn't matter how many times you refresh is just going to start over.

149
00:10:21.790 --> 00:10:28.900
Now keep in mind, do not confuse this with that like an infinite loop that I think we talked about

150
00:10:29.050 --> 00:10:30.830
where your browser is going to crash.

151
00:10:30.970 --> 00:10:32.510
No, it is not an infinite loop.

152
00:10:32.770 --> 00:10:38.070
It is just a thing that the browser is going to do a certain number of times per second.

153
00:10:38.170 --> 00:10:38.670
That's it.

154
00:10:39.040 --> 00:10:42.030
You can you can see that your browser still is working.

155
00:10:42.430 --> 00:10:47.920
Now, in case you're wondering about the documentation, this is window that request animation frame.

156
00:10:47.920 --> 00:10:50.010
You can go ahead and read all about it.

157
00:10:50.350 --> 00:10:52.630
And this in the main page.

158
00:10:52.750 --> 00:10:53.060
Right.

159
00:10:53.060 --> 00:10:54.390
So I'm just going to close this.

160
00:10:54.400 --> 00:10:55.870
So here we are.

161
00:10:55.870 --> 00:11:02.050
And for the purposes of this game, we are not going to use the set interval.

162
00:11:02.290 --> 00:11:03.910
I think we are going to use it.

163
00:11:03.910 --> 00:11:04.630
I'm not sure.

164
00:11:04.630 --> 00:11:08.440
But but for this, we are not going we are not going to use it.

165
00:11:08.830 --> 00:11:14.090
So now let's dive into the game loop for this game.

166
00:11:14.110 --> 00:11:20.140
So what I'm going to do here is I'm going to pass any parameter time now because we know that this request

167
00:11:20.140 --> 00:11:22.410
animation is actually working with frames.

168
00:11:22.420 --> 00:11:22.670
Right.

169
00:11:22.990 --> 00:11:30.040
So for the game loop, what I want to do here is I want to set up the animation loop.

170
00:11:30.400 --> 00:11:35.340
So inside here, I'm going to comment and I'm going to say the animation loop.

171
00:11:35.680 --> 00:11:40.010
Now, the animation loop requires two time differences, right?

172
00:11:40.180 --> 00:11:42.820
So I'm going to say let time.

173
00:11:44.020 --> 00:11:51.190
Time difference, two different time intervals, if you will, and the other one is going to be time

174
00:11:51.190 --> 00:11:55.780
lost and I'm going to set both of them to zero by default.

175
00:11:55.930 --> 00:12:01.630
And after that, I'm going to run I'm going to request the animation from here as well.

176
00:12:02.230 --> 00:12:09.190
Now, this request animation frame is responsible for the first frame and this request animation frame

177
00:12:09.190 --> 00:12:12.180
is responsible for the second frame.

178
00:12:12.700 --> 00:12:13.030
Right.

179
00:12:13.210 --> 00:12:21.900
So whenever and in here, what I'm going to do is I'm going to specify the frames as well.

180
00:12:22.420 --> 00:12:26.010
So I'm going to say so the time what is the time difference?

181
00:12:26.710 --> 00:12:32.880
You might say the time difference is the difference between the now and the time last.

182
00:12:33.160 --> 00:12:40.300
So the time now is the time that requires for this that is required for this specific frame.

183
00:12:40.540 --> 00:12:46.040
The time last is the time of the last frame and after.

184
00:12:46.090 --> 00:12:49.850
Now, now this is going to be responsible for this frame.

185
00:12:50.110 --> 00:12:54.850
What about the what about when this frame is done and we go to the next frame?

186
00:12:55.030 --> 00:12:58.060
So this is going to be responsible for the next frame as well.

187
00:12:58.480 --> 00:13:02.320
But at that part, what happens to the time last?

188
00:13:02.320 --> 00:13:05.050
What happens to the previous frame that we had?

189
00:13:05.660 --> 00:13:05.970
Right.

190
00:13:06.070 --> 00:13:12.370
And for that, what we are going to do is we are going to say time last equal to time now.

191
00:13:13.520 --> 00:13:21.800
All right, so that's it this way we are going to calculate the frame difference, so calculate the

192
00:13:22.100 --> 00:13:24.260
frame difference.

193
00:13:24.800 --> 00:13:29.310
Now the frame difference happens between the this frame that is happening.

194
00:13:29.330 --> 00:13:35.180
So if I come here, reload the page now, this frame that is happening and the previous frame that was

195
00:13:35.180 --> 00:13:35.810
happening.

196
00:13:36.200 --> 00:13:41.210
Right, this frame that is happening is responsible for this frame and next frame.

197
00:13:41.540 --> 00:13:44.840
The last frame is responsible for the previous frame.

198
00:13:44.840 --> 00:13:48.670
That was that that happened or that was happening.

199
00:13:49.100 --> 00:13:49.370
Right.

200
00:13:49.490 --> 00:13:51.980
So we have successfully set up our game loop.

201
00:13:51.990 --> 00:13:53.420
It is not going to do anything.

202
00:13:53.430 --> 00:13:55.970
Of course, we haven't done anything in here.

203
00:13:56.390 --> 00:13:58.150
It and it is not going to do anything.

204
00:13:58.160 --> 00:14:03.440
I'm just going to keep this one open and maybe, like, zoom out a bit in case we have any errors or

205
00:14:03.440 --> 00:14:05.730
in case I want to log to the console or something.

206
00:14:06.230 --> 00:14:14.840
So what we are going to do as starting our next lecture, we are going to start setting up our stars

207
00:14:14.840 --> 00:14:23.630
and also we are going to create their signs in which direction they fly, what is their velocity, what

208
00:14:23.630 --> 00:14:25.250
is even velocity?

209
00:14:25.490 --> 00:14:31.220
What is the Pythagoras's theorem that we are going to use in this project as well?

210
00:14:31.610 --> 00:14:39.670
Now, whenever you're dealing with game development, you need you need to deal with a lot of mathematics.

211
00:14:39.980 --> 00:14:43.130
That's why I gave you that website in our previous chapter.

212
00:14:43.130 --> 00:14:45.970
And we are going to go to that website often.

213
00:14:46.190 --> 00:14:46.520
Right?

214
00:14:46.790 --> 00:14:48.130
So that's it for this lecture.

215
00:14:48.170 --> 00:14:49.430
See you in the next one.

