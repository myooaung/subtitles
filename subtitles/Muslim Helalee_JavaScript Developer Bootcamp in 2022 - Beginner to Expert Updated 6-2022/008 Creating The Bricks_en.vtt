WEBVTT
1
00:00:01.790 --> 00:00:02.719
Hi, everyone.

2
00:00:02.870 --> 00:00:05.840
In this letter, we will be creating the bricks.

3
00:00:07.020 --> 00:00:13.320
All right, so we are done with the paddles movement, the ball's movement, the next logical thing

4
00:00:13.320 --> 00:00:15.710
for us would be to create our Brooks.

5
00:00:15.960 --> 00:00:20.700
So first off, I'm going to head down to our or head up.

6
00:00:21.120 --> 00:00:22.440
Where is our new game function?

7
00:00:22.470 --> 00:00:22.970
There we go.

8
00:00:23.190 --> 00:00:29.700
And in here, what I would like to do is I would like to create I would like to call a variable and

9
00:00:29.700 --> 00:00:32.940
set it to zero, initialize the note.

10
00:00:32.940 --> 00:00:34.500
We have not done that yet.

11
00:00:34.500 --> 00:00:35.160
So.

12
00:00:38.910 --> 00:00:39.690
OK.

13
00:00:40.690 --> 00:00:47.140
And for the break, we are going to need some game parameters, so I'm going to go to top and hear what

14
00:00:47.140 --> 00:00:54.670
I'm going to do as OK, so the first one that we need is going to be our brick rose, because actually

15
00:00:54.910 --> 00:01:02.640
this this the brick itself is going to be an array that is going to contain rows and columns.

16
00:01:03.280 --> 00:01:13.000
So we're going to have eight rows and this is going to be the starting number of brick rows, brick

17
00:01:13.000 --> 00:01:13.600
rows.

18
00:01:14.740 --> 00:01:16.420
Then we are going to have our.

19
00:01:16.420 --> 00:01:16.900
You know what?

20
00:01:16.900 --> 00:01:18.550
I'm just going to copy that below.

21
00:01:18.970 --> 00:01:21.800
Then we are going to have our brick columns.

22
00:01:22.360 --> 00:01:24.430
So this is going to be original.

23
00:01:24.430 --> 00:01:27.670
I'm just going to call it original.

24
00:01:30.550 --> 00:01:34.180
Original number of Brek columns.

25
00:01:36.640 --> 00:01:47.200
Perfect, then we will need a break gap, so let me just this is going to be the gap between the bricks

26
00:01:47.200 --> 00:01:50.890
as and this is going to be a fraction of the wall with.

27
00:01:51.340 --> 00:01:51.670
Right.

28
00:01:51.680 --> 00:01:56.290
So I'm just going to set it to zero point three and I'm not going to be writing the comment.

29
00:01:56.290 --> 00:02:00.250
It takes a lot of time and I'm just going to paste there.

30
00:02:00.760 --> 00:02:03.850
The next one is going to be the margin, right.

31
00:02:03.850 --> 00:02:06.370
So consed margin.

32
00:02:06.370 --> 00:02:08.560
And let's set it to for now.

33
00:02:08.560 --> 00:02:12.280
The margin is going to be the number of M2 rose above the bricks.

34
00:02:12.790 --> 00:02:13.230
Right.

35
00:02:13.270 --> 00:02:19.210
So I'm just going to copy that and I'm going to paste it right here right now.

36
00:02:19.210 --> 00:02:22.690
Empty space between the top of the bricks and the score.

37
00:02:22.960 --> 00:02:23.350
Sorry.

38
00:02:23.710 --> 00:02:24.410
What is this.

39
00:02:24.460 --> 00:02:26.260
This should be scoreboard.

40
00:02:26.800 --> 00:02:27.160
Right?

41
00:02:27.170 --> 00:02:31.860
So if we come here, this empty space that you can see.

42
00:02:31.960 --> 00:02:36.820
So this is our scoreboard, that empty space that you can see, that is going to be the margin that

43
00:02:36.820 --> 00:02:37.810
we just created.

44
00:02:38.320 --> 00:02:38.740
Right.

45
00:02:38.740 --> 00:02:43.130
And we are also going to need a max level.

46
00:02:43.330 --> 00:02:45.390
So what is going to be our maximum level?

47
00:02:45.610 --> 00:02:48.020
We are going to set it to two.

48
00:02:48.630 --> 00:02:57.070
Now, the thing about the maximum level is that whenever the level increases, we will create two Rosseau

49
00:02:57.070 --> 00:02:59.350
plus two rows of bricks per level.

50
00:02:59.980 --> 00:03:00.360
All right.

51
00:03:00.370 --> 00:03:03.340
So we are done with this one as well and.

52
00:03:05.340 --> 00:03:10.830
Right after that, what I'm going to do as another dimension, so let's save that, we're aware this

53
00:03:10.830 --> 00:03:16.020
is the directions, this is the dimensions beneath our dimensions.

54
00:03:16.020 --> 00:03:17.280
What I'm going to do is.

55
00:03:19.070 --> 00:03:27.140
Actually, I'm going to come here initializing the paddle and the ball and I'm going to come in this

56
00:03:27.140 --> 00:03:28.370
one out, you know what?

57
00:03:28.370 --> 00:03:30.700
I'm just going to change this one.

58
00:03:30.980 --> 00:03:37.640
So we have our paddle, we have our ball, we have the touch X now we need to initialize the bricks.

59
00:03:39.000 --> 00:03:43.400
We need to declare Breck's, which is going to be equal to an empty array.

60
00:03:43.400 --> 00:03:45.110
And then also the level.

61
00:03:45.680 --> 00:03:46.310
The level.

62
00:03:46.430 --> 00:03:47.240
Not the level.

63
00:03:47.870 --> 00:03:48.500
The level.

64
00:03:49.130 --> 00:03:49.610
All right.

65
00:03:49.610 --> 00:03:52.220
So perfect so far.

66
00:03:53.680 --> 00:03:59.950
So we have created we have called the initial level is going to be zero, so we have done that as well.

67
00:04:01.000 --> 00:04:07.130
Next thing the next thing that I would like to do is I would like to create the BRICS function.

68
00:04:07.720 --> 00:04:08.080
All right.

69
00:04:08.080 --> 00:04:10.080
So let's see, where should we put it?

70
00:04:14.250 --> 00:04:22.530
OK, so what I'm going to do as where is our upload speed, so the applicable speed is right here and

71
00:04:22.980 --> 00:04:28.470
I'm just going to copy this comment and I'm going to put it here and I'm going to call it create bricks,

72
00:04:28.470 --> 00:04:31.270
create bricks, function.

73
00:04:31.560 --> 00:04:32.310
All right.

74
00:04:32.580 --> 00:04:37.760
So first off, what we need is going to be we are going to need some dimensions.

75
00:04:37.770 --> 00:04:41.760
So first off, let's create the function, create bricks.

76
00:04:43.370 --> 00:04:44.000
Perfect.

77
00:04:44.480 --> 00:04:52.430
And the first, we are going to need some road dimensions, dimensions perfect, so we are going to

78
00:04:52.430 --> 00:04:57.490
say that the minimum Y position is going to be the wall.

79
00:04:58.090 --> 00:04:58.600
All right.

80
00:04:59.390 --> 00:05:03.710
And this is going to be the minimum vertical distance the bricks can have.

81
00:05:04.040 --> 00:05:11.150
And then we will have a minimum X distance as well, which is going to be both the Y position of the

82
00:05:11.150 --> 00:05:16.580
ball, minus the balls height times three point five.

83
00:05:16.760 --> 00:05:23.510
This is just some distance that I came up with and this is going to be the maximum horizontal distance

84
00:05:23.510 --> 00:05:24.760
that the bricks can have.

85
00:05:25.250 --> 00:05:25.610
Right.

86
00:05:25.620 --> 00:05:31.070
And we will have a total of space in the Y direction.

87
00:05:31.070 --> 00:05:34.820
So total space in the Y direction.

88
00:05:35.150 --> 00:05:37.250
And that is going to be the maximum.

89
00:05:39.720 --> 00:05:46.590
OK, so this is going to be the this is going to be the minimum wage and this is going to be the maximum,

90
00:05:46.590 --> 00:05:48.450
why sorry for that.

91
00:05:48.460 --> 00:05:52.200
So this is why we won't get to because these are rows.

92
00:05:52.350 --> 00:05:55.770
Whenever we talk about rows, we are working in the Y direction.

93
00:05:55.980 --> 00:05:59.430
So minimum Y and this is going to be maximum Y.

94
00:05:59.700 --> 00:06:01.380
So maximum Y.

95
00:06:03.230 --> 00:06:04.730
Perfect, minus the minimum.

96
00:06:04.760 --> 00:06:09.570
Why is going to give us the total, why the total space in the Y direction?

97
00:06:10.040 --> 00:06:12.490
So how many rows we are going to have?

98
00:06:12.500 --> 00:06:18.740
So we are going to say total rose, we are going to store there and we are going to grab the margin.

99
00:06:19.340 --> 00:06:19.670
Right.

100
00:06:19.880 --> 00:06:26.450
And the margin is going to be plus the bricks rose plus the maximum level that we have.

101
00:06:26.870 --> 00:06:29.870
And for each level we are going to have to row.

102
00:06:29.890 --> 00:06:31.460
So I'm just going to multiply it by two.

103
00:06:32.840 --> 00:06:44.090
Then let's create the row height, which is going to be the total space in the Y direction divided by

104
00:06:44.090 --> 00:06:46.040
the total rows that we have.

105
00:06:46.430 --> 00:06:54.000
So total rows and just two, for example, whenever we get to level ten.

106
00:06:54.500 --> 00:06:55.790
So this is level one.

107
00:06:55.940 --> 00:07:01.790
When we get to level ten in each level, plus two rows are going to be created and the rows are going

108
00:07:01.790 --> 00:07:03.070
to come right here.

109
00:07:03.080 --> 00:07:03.920
So all the way here.

110
00:07:04.160 --> 00:07:11.750
That's why just to provide some space between the rows on the top of the ball in the starting position,

111
00:07:11.750 --> 00:07:18.260
I just multiply by zero point, not just to reduce that, just to increase that distance.

112
00:07:18.260 --> 00:07:18.650
Right.

113
00:07:18.650 --> 00:07:21.230
And increase that gap.

114
00:07:21.680 --> 00:07:28.700
So we will have a gap as well, which is going to be the wall times, the brick gap that we have created

115
00:07:29.000 --> 00:07:32.510
and times zero point nine, which I did exactly the same thing.

116
00:07:32.780 --> 00:07:38.570
And now let the height of any row is going to be the row height minus the gap.

117
00:07:39.430 --> 00:07:39.970
Perfect.

118
00:07:41.210 --> 00:07:47.360
So we have we are done with the road dimensions, let's dive into the column Dimensions column.

119
00:07:50.910 --> 00:07:59.070
Dimensions perfect, so let's change this to call them so in the column dimensions, first off, we

120
00:07:59.070 --> 00:08:02.070
will have our total total.

121
00:08:03.650 --> 00:08:12.800
Space in the extraction, and that is going to be the width of the canvas minus the walls on both sides,

122
00:08:12.810 --> 00:08:14.480
so I'm going to multiply it by two.

123
00:08:15.800 --> 00:08:23.890
We are going to have the column with columns have width, and we are going to grab our total space X.

124
00:08:24.260 --> 00:08:32.150
And from that, we are going to subtract the gap and we are going to divide it by the break columns.

125
00:08:33.110 --> 00:08:33.710
Perfect.

126
00:08:33.789 --> 00:08:43.400
And OK, and let's grab let's try the width of the column, the width of the column we had the height

127
00:08:43.400 --> 00:08:52.070
for the row and we have with four the column, the width for the column is going to be the column width

128
00:08:52.400 --> 00:08:53.660
minus the gap.

129
00:08:55.060 --> 00:09:05.170
Perfect, so the next thing that we would like to do is create the brick class, so I'm going to come

130
00:09:05.170 --> 00:09:10.510
down here right and in the class where we have our classes.

131
00:09:10.720 --> 00:09:15.210
So we have already class for the ball and we we have a class for the panel.

132
00:09:15.220 --> 00:09:16.810
So it's in between them.

133
00:09:16.810 --> 00:09:26.440
I'm going to create the brick class and we're going to say class capital B Rec and we are going to provide

134
00:09:26.440 --> 00:09:28.030
a constructor here.

135
00:09:29.310 --> 00:09:35.040
So what what do we have inside the constructor, so we are going to have a left position, a top position,

136
00:09:35.340 --> 00:09:41.910
a with for the bricks, a height for the bricks, color for the bricks, score for the bricks.

137
00:09:42.240 --> 00:09:50.820
And we are going to have a speed multiplier because as we move up the rank, we are going to multiply.

138
00:09:50.830 --> 00:09:57.000
We are going to multiply the existing speed with some a multiplier and that is going to take care of

139
00:09:57.000 --> 00:09:58.650
that increment of the speed.

140
00:09:59.100 --> 00:10:02.580
So we are going to say this start with is going to be equal to with.

141
00:10:02.880 --> 00:10:06.480
We are going to say this stud height is going to be equal to height.

142
00:10:07.680 --> 00:10:09.690
This dot left.

143
00:10:11.550 --> 00:10:20.530
Is going to be left, this dot top is going to be top, and what else do we have?

144
00:10:20.700 --> 00:10:27.150
We have this dot bottom, which is going to be top plus the height.

145
00:10:28.790 --> 00:10:37.010
We are going to have this start, right, which is going to be left plus with we are going to have this

146
00:10:37.520 --> 00:10:48.380
color is going to be able to color and you're going to have this score we call to score.

147
00:10:48.410 --> 00:10:54.980
And finally, the start speed must be equal to speed.

148
00:10:56.420 --> 00:10:56.800
Perfect.

149
00:10:57.050 --> 00:10:58.850
So we have created that as well.

150
00:10:58.880 --> 00:11:05.090
So what I'm going to do as we are going to go back to our function, so we have all of these here.

151
00:11:05.090 --> 00:11:07.730
We have the constructor, we have the brick class.

152
00:11:09.720 --> 00:11:15.030
So in here, what I would like to do is I would like to, first off, reset the bricks in case there

153
00:11:15.060 --> 00:11:15.990
are any bricks.

154
00:11:16.290 --> 00:11:20.910
So resetting the bricks, right?

155
00:11:21.540 --> 00:11:22.150
Perfect.

156
00:11:22.440 --> 00:11:28.260
So we are going to grab our bricks and I'm going to set it to an empty array.

157
00:11:28.260 --> 00:11:32.250
And then we are going to grab the number of columns, the columns that we have.

158
00:11:32.250 --> 00:11:35.010
And we are going to say they should be the brick columns.

159
00:11:35.850 --> 00:11:38.180
The rows are going to be different.

160
00:11:38.190 --> 00:11:42.840
So we are going to say rows are going to be our brick rows.

161
00:11:45.530 --> 00:11:50.630
Brick, rose, plus the level, and in each level, we are going to have to rose.

162
00:11:51.290 --> 00:11:56.810
Now I'm going to declare I'm going to declare some variables and I'm going to say, let's color.

163
00:11:57.440 --> 00:11:58.520
And then left.

164
00:11:59.090 --> 00:12:04.010
Then the rank that they are going to have, then the rank, the highest rank that they are going to

165
00:12:04.010 --> 00:12:10.860
have, which is that red, then the score and then the speed multiplier.

166
00:12:11.570 --> 00:12:14.480
And finally, we are going to provide the top position.

167
00:12:15.800 --> 00:12:16.340
Perfect.

168
00:12:19.690 --> 00:12:27.370
All right, so what are we going to do here is we are going to loop over our we are going to loop over

169
00:12:27.370 --> 00:12:34.270
the roads and also we are going to loop over our columns and we are going to populate this BRICS.

170
00:12:34.270 --> 00:12:35.210
The BRICS are right.

171
00:12:35.590 --> 00:12:40.960
So first off, what I'm going to do is I'm going to grab our rank high and I'm going to set it to the

172
00:12:40.960 --> 00:12:44.950
number of rows that we have divided by two minus one.

173
00:12:44.950 --> 00:12:50.260
Because the reason that we do minus one is because we want to start from the bottom and then go to top.

174
00:12:50.770 --> 00:12:53.310
We are actually moving in a reverse direction.

175
00:12:53.320 --> 00:13:01.790
So now we are going to set for a little I is equal to zero and I is going to be less than the number

176
00:13:01.790 --> 00:13:02.320
of Froese.

177
00:13:02.530 --> 00:13:11.380
So each time the iterates, it is going to create one row for us and we are going to have a plus plus

178
00:13:11.800 --> 00:13:12.630
in here.

179
00:13:12.820 --> 00:13:18.240
So the I we are going to grab our Brooks array and we are going to pass and I and we are going to initialize,

180
00:13:18.490 --> 00:13:20.700
initialize it as a meteorite.

181
00:13:20.830 --> 00:13:25.830
So all of our rows are inside an empty array and then the rank.

182
00:13:26.020 --> 00:13:29.650
So the rank is going to be math that floor.

183
00:13:32.370 --> 00:13:37.210
I divided by two because because two rows are going to have the same blank.

184
00:13:38.100 --> 00:13:38.640
Perfect.

185
00:13:38.940 --> 00:13:43.580
The next thing that I would like to do as I would like to grab the color as well.

186
00:13:43.950 --> 00:13:51.690
So I'm going to we are going to call a method called get a Color, which we will create in just a moment.

187
00:13:52.140 --> 00:13:55.050
And I'm going to pass in the rank and the rank high.

188
00:13:57.000 --> 00:14:03.210
Get recolour right after that, what I would like to do, as I would like to grab the top position as

189
00:14:03.210 --> 00:14:10.230
well, so the top position is going to be the wall that we have plus the margin.

190
00:14:11.430 --> 00:14:19.260
We should come down right margin, which is going to be and we are going to have one row whenever we

191
00:14:19.260 --> 00:14:20.340
come down, right.

192
00:14:20.560 --> 00:14:27.330
And I'm going to multiply that by the arow height that we have found out and we are going to say another

193
00:14:27.330 --> 00:14:30.210
for a loop inside here and we're going to have four.

194
00:14:30.210 --> 00:14:38.160
Let J is equal to zero and J goes all the way to less than the number of columns that we have.

195
00:14:39.000 --> 00:14:45.540
Perfect, and we are going to increment by one each time we are going to grab the left position and

196
00:14:45.540 --> 00:14:48.690
we are going to say the wall plus the gap.

197
00:14:49.770 --> 00:14:57.840
Plus G times the column with so we are going to have more than one column, of course, and now let's

198
00:14:57.840 --> 00:15:04.170
go ahead on this grab Brooks are right and we are going to pass and I for the Rose and Jay for the columns.

199
00:15:04.440 --> 00:15:08.000
And in here we are going to call in our brick class.

200
00:15:08.010 --> 00:15:09.600
We are going to say new brick.

201
00:15:10.170 --> 00:15:14.100
And in the brick class, we are going to have left.

202
00:15:14.110 --> 00:15:16.050
So left is going to be equal to left.

203
00:15:16.410 --> 00:15:18.480
The top is going to be equal to top.

204
00:15:18.700 --> 00:15:24.930
We're going to have our with our height and we are going to pass on the color which for which we are

205
00:15:24.930 --> 00:15:27.810
going to create the function in just a moment.

206
00:15:29.050 --> 00:15:34.950
We are going to pass in the score, which we have not calculated yet, and we are going to pass on the

207
00:15:34.960 --> 00:15:38.930
speed multiplier, which we are not we have not calculated yet.

208
00:15:39.510 --> 00:15:45.480
So what I'm going to do is I'm just going to pass and all the way up to the color and I'm going to come

209
00:15:45.480 --> 00:15:46.200
down here.

210
00:15:47.070 --> 00:15:52.440
Let's come down and let's grab these two and I'm just going to cut them out so we don't see any issues

211
00:15:52.440 --> 00:15:53.790
here and here.

212
00:15:53.800 --> 00:15:54.210
All right.

213
00:15:54.210 --> 00:15:59.250
So let's go up here.

214
00:15:59.730 --> 00:16:01.980
So we have completed that.

215
00:16:02.130 --> 00:16:06.500
The next thing for us to do is go ahead and actually draw our bricks.

216
00:16:06.840 --> 00:16:08.960
So what I'm going to do is I'm going to come to here.

217
00:16:08.970 --> 00:16:12.420
So here we call our draw functions.

218
00:16:12.420 --> 00:16:18.390
And right after the paddle, I'm going to call a draw Brooks function.

219
00:16:18.750 --> 00:16:19.140
All right.

220
00:16:19.380 --> 00:16:22.500
And we are going to create that.

221
00:16:23.220 --> 00:16:24.800
Let's see, where should we put it?

222
00:16:24.810 --> 00:16:26.040
The draw breaks.

223
00:16:26.310 --> 00:16:27.900
So where is our draw ball?

224
00:16:28.200 --> 00:16:31.890
So here is our draw a ball and then here we have our draw paddle.

225
00:16:32.160 --> 00:16:36.960
So in here, we are going to put that drop bricks function.

226
00:16:36.960 --> 00:16:40.110
So draw bricks function.

227
00:16:40.110 --> 00:16:40.590
Perfect.

228
00:16:40.800 --> 00:16:47.460
So it is going to be a function and and the function we are going to pass and we are going to grab the

229
00:16:47.460 --> 00:16:48.330
function name.

230
00:16:49.630 --> 00:16:54.070
All right, so I'm going to say draw bricks.

231
00:16:54.100 --> 00:16:57.880
Perfect, there is not going to be any parameter here.

232
00:16:58.270 --> 00:16:59.390
So what do we want to do?

233
00:16:59.470 --> 00:17:02.770
So now we have rows of bricks.

234
00:17:03.160 --> 00:17:05.800
And based on those rows, what do we want to do?

235
00:17:05.829 --> 00:17:15.849
We want to we want to create a loop so that and through that loop, we will be creating rows for each

236
00:17:15.849 --> 00:17:17.260
of the game levels.

237
00:17:17.530 --> 00:17:24.190
Now, imagine we have, for example, like how many columns, how many rows we have eight rows, four,

238
00:17:24.700 --> 00:17:27.099
eight, eight columns and it rows.

239
00:17:27.099 --> 00:17:28.060
Is that correct?

240
00:17:28.069 --> 00:17:29.040
Then we check it out.

241
00:17:30.040 --> 00:17:32.260
Actually, the number of columns is 14.

242
00:17:32.260 --> 00:17:33.110
It is not eight.

243
00:17:33.790 --> 00:17:38.710
So imagine that for each row you have to implement a function again and again.

244
00:17:39.250 --> 00:17:46.090
So to reduce that load, what we are going to do is we are going to loop over that first and then we

245
00:17:46.090 --> 00:17:53.650
are going to whenever we loop over, each time we each time for the loop iteration happens, we are

246
00:17:53.650 --> 00:17:55.830
going to create a row for the bricks.

247
00:17:56.230 --> 00:18:01.520
So we are going to say for that row of bricks.

248
00:18:01.540 --> 00:18:09.190
So this is going to loop over all the rows and this is going to loop over each individual, let brick

249
00:18:09.580 --> 00:18:12.610
of a row, each in each individual brick.

250
00:18:13.840 --> 00:18:19.330
And for that, what we would like to do is we are going to grab our canvas context and we are going

251
00:18:19.330 --> 00:18:26.200
to say fill style and we are going to grab our brick dot color.

252
00:18:27.230 --> 00:18:35.150
Perfect, and we're going to grab our canvas context and basically we are drawing a rectangle, so I'm

253
00:18:35.150 --> 00:18:42.890
just going to say fill wrecked the position, the exposition is going to be bricked left, the Y position

254
00:18:42.890 --> 00:18:44.720
is going to be bricked atop.

255
00:18:45.620 --> 00:18:49.250
The width is going to be brick W.

256
00:18:51.140 --> 00:18:53.980
And the height is going to be Brooke H.

257
00:18:54.980 --> 00:18:55.460
Perfect.

258
00:18:55.490 --> 00:19:03.860
So we have created these as well and are right, so next thing, what I would like to do as before actually

259
00:19:03.860 --> 00:19:09.960
saving anything, I want to create a function for getting the colors as well.

260
00:19:10.430 --> 00:19:17.990
So what I would like to do is beneath this dry drawls function we have created that we have created

261
00:19:17.990 --> 00:19:18.910
the function call.

262
00:19:19.250 --> 00:19:21.430
Now we need to create the function itself.

263
00:19:21.680 --> 00:19:25.820
So I'm going to say get break color.

264
00:19:26.880 --> 00:19:27.370
Perfect.

265
00:19:27.390 --> 00:19:36.330
So it is going to be function, get break color, there is there is actually going to be two parameters

266
00:19:36.660 --> 00:19:39.600
because we passed and where is our break?

267
00:19:39.630 --> 00:19:45.660
So we called, whereas the get break color, we passed in the rank and the higher rank.

268
00:19:46.110 --> 00:19:51.570
So I'm going to pass in here the rank and the rank high.

269
00:19:53.290 --> 00:20:02.200
Or I'm just going to call it highest rank, highest rank, perfect, so what we are going to do is basically

270
00:20:02.200 --> 00:20:05.950
this is going to be a Cyesis magic that we will be doing here.

271
00:20:06.730 --> 00:20:07.370
Right.

272
00:20:07.390 --> 00:20:08.700
And you know what?

273
00:20:08.710 --> 00:20:10.660
This should not be here.

274
00:20:11.620 --> 00:20:14.950
And we first off, I'm just going to put in a comment here.

275
00:20:15.130 --> 00:20:22.510
So in the RGV, RGV color spectrum, what we have is the red is going to be equal to zero.

276
00:20:22.990 --> 00:20:23.410
Right.

277
00:20:23.410 --> 00:20:30.250
And in here, the way that we are going to build this is we are going to start from red.

278
00:20:30.580 --> 00:20:38.920
And as we decrease the redness, we increase the greenness and the color is going to transition from

279
00:20:38.920 --> 00:20:40.180
red to green.

280
00:20:40.450 --> 00:20:40.670
Red.

281
00:20:40.900 --> 00:20:42.560
That's basically what we are going to do.

282
00:20:42.760 --> 00:20:48.640
So the red, because it has a rank of zero, this is going to be a red is going to be zero.

283
00:20:48.940 --> 00:20:56.410
And then at the at the farthest side towards the top, we are going to have a red and at the farthest

284
00:20:56.410 --> 00:20:59.230
side towards the bottom, we are going to have our green.

285
00:20:59.590 --> 00:21:00.010
So.

286
00:21:02.070 --> 00:21:03.910
Let's go ahead and let's say orange.

287
00:21:03.930 --> 00:21:08.700
So the next color is going to be orange, which I'm going to set it to zero point three three, then

288
00:21:08.700 --> 00:21:11.660
we are you can see that we are transitioning to green.

289
00:21:11.970 --> 00:21:16.650
Then we have our yellow, which is going to be zero point six seven.

290
00:21:16.650 --> 00:21:21.830
And then we are going to have our green, which is going to be equal to one.

291
00:21:22.050 --> 00:21:25.320
So the farthest towards the top is the for the stores.

292
00:21:25.320 --> 00:21:27.660
The bottom is going to be green.

293
00:21:27.990 --> 00:21:29.250
And now let's go.

294
00:21:29.640 --> 00:21:31.470
Let's create a fraction here.

295
00:21:31.470 --> 00:21:37.530
So I'm going to save that fraction and the fraction is going to be the rank that we have divided by

296
00:21:37.530 --> 00:21:39.960
the highest rank.

297
00:21:40.140 --> 00:21:40.740
Perfect.

298
00:21:41.100 --> 00:21:44.040
And I'm going to declare our.

299
00:21:45.500 --> 00:21:50.720
Gee, and because we don't have any blue, I'm still going to declare, but I'm going to initialize

300
00:21:50.720 --> 00:21:51.350
it to zero.

301
00:21:52.490 --> 00:21:53.730
Perfect now.

302
00:21:53.750 --> 00:21:58.290
We are going to say a red to orange to yellow.

303
00:21:58.520 --> 00:22:00.050
So this is the first part.

304
00:22:01.310 --> 00:22:07.240
And in order to do that, we are going to increase the green of the of the colors.

305
00:22:07.520 --> 00:22:14.160
So we're going to say if fraction is less than or equal to zero point six seven.

306
00:22:14.420 --> 00:22:16.610
So we know that zero point six seven is yellow.

307
00:22:16.640 --> 00:22:20.510
So if it is this or less than that, we are in this range.

308
00:22:22.090 --> 00:22:29.260
Then the red is going to be equal to 255 and the green is going to be equal to.

309
00:22:31.500 --> 00:22:40.290
255 times the fraction that we have and what is the final color code, it is going to be zero point

310
00:22:40.290 --> 00:22:40.960
six seven.

311
00:22:41.790 --> 00:22:43.500
So we are done with this part in.

312
00:22:43.500 --> 00:22:51.150
The next part is going to be we are going to go from yellow to green and in here we are going to reduce

313
00:22:51.150 --> 00:22:51.930
the red.

314
00:22:53.250 --> 00:22:53.670
All right.

315
00:22:53.670 --> 00:22:55.710
And this is going to be Alice.

316
00:22:56.340 --> 00:23:05.010
So, Alice, the red is going to be equal to 255 times one minus the fraction.

317
00:23:06.450 --> 00:23:11.610
Perfect, and we are going to divide it by zero point three three and the G or the green is going to

318
00:23:11.610 --> 00:23:13.080
be equal to 255.

319
00:23:13.590 --> 00:23:19.950
And finally, we need this function to return and RGV color.

320
00:23:20.130 --> 00:23:23.210
So we are going to set a return openable template strings.

321
00:23:23.910 --> 00:23:24.320
All right.

322
00:23:24.330 --> 00:23:26.280
And in here, I'm going to pass in RGV.

323
00:23:26.280 --> 00:23:33.150
And so the first parameter in here is going to be the first argument is going to be are the second one

324
00:23:33.150 --> 00:23:36.060
is going to be G and the third one.

325
00:23:37.680 --> 00:23:40.740
Where is the third one is going to be blue.

326
00:23:41.710 --> 00:23:44.350
So let's pass that in and.

327
00:23:47.910 --> 00:23:56.370
OK, all right, so now the only thing left for us to do to be able to see our Breck's is just go ahead

328
00:23:56.370 --> 00:24:00.830
and call this function that we have created here.

329
00:24:02.160 --> 00:24:06.210
So this I'm going to call it inside the new game function.

330
00:24:06.420 --> 00:24:08.700
So I'm going to say create bricks.

331
00:24:09.840 --> 00:24:10.450
Let's save it.

332
00:24:10.500 --> 00:24:11.400
Let's come here.

333
00:24:11.490 --> 00:24:15.750
This is our so this is our game and this is what we have created.

334
00:24:17.120 --> 00:24:23.100
So one, two, three, four, five, six, seven, eight, nine, 10, 11, 12, 13, 14.

335
00:24:23.480 --> 00:24:23.990
So do you.

336
00:24:23.990 --> 00:24:28.900
With the with and the number of the columns, they seem OK.

337
00:24:29.210 --> 00:24:31.700
One, two, three, four, five, six, seven.

338
00:24:32.000 --> 00:24:39.100
The number of rows are OK as well, but the height of the rows is not it's not exactly what we want.

339
00:24:39.320 --> 00:24:44.780
So let's move up to where we have we have created over Brooks.

340
00:24:45.080 --> 00:24:48.230
So the height of the bricks, this is where we have created that.

341
00:24:48.480 --> 00:24:53.480
And I thought, oh, this should be multiplied.

342
00:24:53.930 --> 00:24:54.830
So let's save it.

343
00:24:54.840 --> 00:24:55.560
Let's come here.

344
00:24:55.580 --> 00:24:56.090
There we go.

345
00:24:56.360 --> 00:25:03.060
So now if I decrease the width of the window, you can see how responsive this is or if you increase

346
00:25:03.090 --> 00:25:05.390
it, they're going to get increased or decreased.

347
00:25:05.900 --> 00:25:11.450
But if you serve the ball, the thing is that we have not set up any collision detection.

348
00:25:11.780 --> 00:25:16.520
That's why it's just going to the ball doesn't know that they are there.

349
00:25:16.880 --> 00:25:17.240
Right.

350
00:25:17.390 --> 00:25:19.290
So that's it for this lecture.

351
00:25:19.310 --> 00:25:20.990
See you guys in the next one.

