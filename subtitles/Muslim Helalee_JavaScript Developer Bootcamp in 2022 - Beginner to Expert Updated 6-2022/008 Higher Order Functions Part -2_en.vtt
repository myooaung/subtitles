WEBVTT
1
00:00:01.880 --> 00:00:06.800
Hi, everyone, in this that year, we are going to pick up where we left off in the previous lecture

2
00:00:06.800 --> 00:00:09.110
of higher order functions.

3
00:00:10.070 --> 00:00:10.540
All right.

4
00:00:10.670 --> 00:00:16.100
So we have successfully understood what higher order functions are.

5
00:00:16.100 --> 00:00:21.170
There are two kinds of higher order functions or two scenarios.

6
00:00:22.280 --> 00:00:28.280
First, when functions accept other functions as arguments, they're called higher order functions or

7
00:00:28.280 --> 00:00:33.550
when we have successfully understood that that was an easy that was the easy part.

8
00:00:33.980 --> 00:00:43.940
And when the fun when any function is passed as argument to another function call, then that function

9
00:00:44.240 --> 00:00:49.970
that passed function, which is an argument, it's called a callback function.

10
00:00:50.570 --> 00:00:59.510
Now, there are a lot of ideas in the previous lecture and in this lecture and the second kind of higher

11
00:00:59.510 --> 00:01:06.410
order functions again, I mean, starting from my first course, which was the ultimate team of five

12
00:01:06.410 --> 00:01:09.830
and six is three or five elements.

13
00:01:09.830 --> 00:01:11.690
And this is three properties bootcamp.

14
00:01:13.060 --> 00:01:20.220
Of course, up until here, it's been like a few months and my pronunciation has is still not there,

15
00:01:20.350 --> 00:01:29.050
I cannot still pronounce order correctly and like like like like fast I have to say order, which is

16
00:01:29.050 --> 00:01:29.620
not correct.

17
00:01:29.620 --> 00:01:37.420
Or say or DÃ¼rer like to like like break it up in sell it in syllabus and to Celebi.

18
00:01:37.990 --> 00:01:44.490
What is the, what is the plural form of syllabus to be able to like convey the point.

19
00:01:45.070 --> 00:01:51.420
So it's been a long journey since that and I'm still pronouncing it all like that.

20
00:01:51.700 --> 00:01:59.320
So we have in the second scenario we have functions that accepting other functions as a return values,

21
00:01:59.890 --> 00:02:03.340
and in this process we create factory functions.

22
00:02:04.130 --> 00:02:04.600
All right.

23
00:02:04.870 --> 00:02:07.620
And this works because of the lexical scope.

24
00:02:07.630 --> 00:02:09.220
So what is the lexical scope?

25
00:02:09.460 --> 00:02:17.020
The lexical scope says when a function is passed inside another function as the returned values.

26
00:02:17.020 --> 00:02:21.820
Keep in mind, this is a return value and this is the condition.

27
00:02:22.150 --> 00:02:23.800
It should be a return value.

28
00:02:25.070 --> 00:02:33.830
Then that returned function or the child function has access to its parents properties, to its parent

29
00:02:34.160 --> 00:02:36.690
variables, not properties variables.

30
00:02:37.010 --> 00:02:45.230
So this function is a child of the some function and this anonymous child function has access to its

31
00:02:45.230 --> 00:02:47.900
parents variables.

32
00:02:48.830 --> 00:02:57.350
And the condition is it has to be a returned function and it means that it should be a return function,

33
00:02:57.650 --> 00:03:00.650
return function, super simple.

34
00:03:01.250 --> 00:03:03.590
And this works because of the lexical scope.

35
00:03:03.830 --> 00:03:13.850
The length again, the lexical scope says that we can access a child fund function has can access the

36
00:03:13.850 --> 00:03:16.550
variables of its parents function.

37
00:03:17.700 --> 00:03:18.120
Right.

38
00:03:19.020 --> 00:03:27.450
And now when when we create this function, we want to store the result inside this number one variable

39
00:03:27.630 --> 00:03:34.830
and we just called it, and when we call that function, what we are going to get, where is where is

40
00:03:34.830 --> 00:03:36.720
my log?

41
00:03:38.030 --> 00:03:44.330
And right now, I'm going to tell you what this button is read more like reload.

42
00:03:44.760 --> 00:03:48.260
Oh, we should call it constant unlogged here as well.

43
00:03:49.350 --> 00:03:56.430
So whenever we call it, it's again, the parentheses is missing, it is going to return the child function

44
00:03:56.610 --> 00:04:00.800
because there's some function, which is the parent function has done its job.

45
00:04:00.900 --> 00:04:02.790
It has returned this function.

46
00:04:03.450 --> 00:04:06.630
But what if we want to calculate this child function?

47
00:04:07.020 --> 00:04:07.680
What then?

48
00:04:07.920 --> 00:04:08.510
What do we do?

49
00:04:08.520 --> 00:04:10.380
What would we do then?

50
00:04:11.160 --> 00:04:17.279
We have to access this parameter by passing an argument to that parameter.

51
00:04:17.519 --> 00:04:18.690
And how can we do that?

52
00:04:18.839 --> 00:04:24.200
Whenever we open parentheses, we're going to get an intelligence pop up and it is going to say No one.

53
00:04:24.360 --> 00:04:32.460
Now you guys can see it says Y, and this is why it means that in here, inside this parentheses, we

54
00:04:32.460 --> 00:04:39.210
have access to this parameter, which means that whatever we pass in here is going to be an argument

55
00:04:39.390 --> 00:04:43.310
to this anonymous child functions parameter.

56
00:04:43.560 --> 00:04:46.670
So if I pass in six, we are going to get 11.

57
00:04:47.840 --> 00:04:50.370
Let's go ahead and let's do some more examples.

58
00:04:50.630 --> 00:04:56.000
I'm just going to do one more and I'm going to pass in one hundred and fifteen and I'm just going to

59
00:04:56.000 --> 00:04:57.370
store it inside.

60
00:04:58.010 --> 00:04:58.490
I don't know.

61
00:04:58.490 --> 00:04:59.450
Let's start inside.

62
00:04:59.450 --> 00:05:00.020
Number two.

63
00:05:00.350 --> 00:05:09.530
We could call that back in and we are going to call number two and we are going to pass and I don't

64
00:05:09.530 --> 00:05:17.000
know, like five hundred and fifty one, save it and we get six hundred and sixty six.

65
00:05:17.660 --> 00:05:18.170
All right.

66
00:05:18.980 --> 00:05:21.260
Which is actually what this chrome represents.

67
00:05:21.270 --> 00:05:22.200
Six, six, six.

68
00:05:22.850 --> 00:05:23.350
All right.

69
00:05:23.480 --> 00:05:29.600
So this is how functions can accept other functions as return values.

70
00:05:30.080 --> 00:05:30.460
Right.

71
00:05:30.650 --> 00:05:38.270
And in the process, we create a factory function and we take advantage of a scope called lexical scope.

72
00:05:38.780 --> 00:05:45.380
So I'm not going to explain it any further because I'm sure now it is clear at the end of this video,

73
00:05:45.530 --> 00:05:47.990
I want to talk about the callback function.

74
00:05:48.080 --> 00:05:49.430
I have hinted at that.

75
00:05:49.550 --> 00:05:55.640
Now, I just want to give you an example, a real world example of how callback functions are formed

76
00:05:55.880 --> 00:06:03.170
and how they how they can work, how they work and they callback functions.

77
00:06:03.380 --> 00:06:06.440
They are passed in as anonymous functions.

78
00:06:06.590 --> 00:06:10.970
And those anonymous functions, they are called callback functions.

79
00:06:11.250 --> 00:06:11.690
Right.

80
00:06:12.650 --> 00:06:15.410
So let's go ahead with the first example.

81
00:06:15.980 --> 00:06:19.130
We are going to come to our read more button in a minute.

82
00:06:20.060 --> 00:06:24.590
So it may not be in a minute, but Maypo Sarong three.

83
00:06:25.910 --> 00:06:33.500
We are looking for pine, right, so this is going to be example one and we are going to use a built

84
00:06:33.500 --> 00:06:34.660
in function.

85
00:06:35.480 --> 00:06:42.500
So when inside of this sit time out, when we provide a function, this function is going to be a callback

86
00:06:42.500 --> 00:06:51.800
function because it has been passed in as a parameter or as an argument to the set time out.

87
00:06:52.100 --> 00:06:56.630
So if I go back and if I just go ahead and say sit time out.

88
00:06:58.280 --> 00:07:07.110
And when I hit enter, we are going to we should get the where is the set time out?

89
00:07:08.030 --> 00:07:10.540
This is going to be yeah, I'm looking for this one.

90
00:07:11.000 --> 00:07:14.810
So in here, we're going to pass the time out in milliseconds.

91
00:07:14.990 --> 00:07:17.770
I'm just going to say 2000 meaning two seconds.

92
00:07:18.050 --> 00:07:22.990
And this bad boy right here, this is called an arrow function.

93
00:07:23.330 --> 00:07:26.960
We are going to take a look at this when we get to our advanced chatter's.

94
00:07:27.290 --> 00:07:28.160
What is this?

95
00:07:28.370 --> 00:07:30.040
This is the basic syntax.

96
00:07:30.290 --> 00:07:33.080
This is a very, very cool thing, but not now.

97
00:07:33.080 --> 00:07:34.610
We are not going to talk about it now.

98
00:07:35.180 --> 00:07:41.870
So we are going to create a function and this anonymous function which which for which this is the block.

99
00:07:41.870 --> 00:07:45.800
This this is the block is a callback function.

100
00:07:46.130 --> 00:07:54.110
And I want this anonymous function to implement a very, very difficult task of two, two plus two.

101
00:07:54.420 --> 00:08:01.250
And when we save it right after two seconds, we are going to see this so said Time Out is going to

102
00:08:01.250 --> 00:08:04.620
show us something after a certain amount of time.

103
00:08:05.270 --> 00:08:12.170
So if I put it to 500 milliseconds, which is half a second, we should see right after half a second.

104
00:08:12.530 --> 00:08:15.690
So this function is and a callback function.

105
00:08:15.890 --> 00:08:17.710
This was the first example.

106
00:08:18.080 --> 00:08:21.740
Let's go ahead with a more real world kind of example.

107
00:08:22.820 --> 00:08:29.180
We are going to use sit time out when we get to our darkman toggle button, we are going to use that

108
00:08:29.180 --> 00:08:29.900
time out there.

109
00:08:29.910 --> 00:08:30.870
So don't worry about it.

110
00:08:31.370 --> 00:08:34.460
So in here, this example is related to Dom.

111
00:08:34.970 --> 00:08:41.270
We are going to cover Dom in our next chapter, so don't worry about it again before diving into the

112
00:08:41.270 --> 00:08:41.809
example.

113
00:08:41.990 --> 00:08:45.590
Let's go ahead and let's check out the markup now in here.

114
00:08:46.190 --> 00:08:47.900
I want to mention two things.

115
00:08:48.050 --> 00:08:57.440
One, this course assumes that you have intermediate knowledge of e-mail and says this course assumes

116
00:08:57.440 --> 00:09:05.930
that it means that in no case, in no project will I be writing the victim on Cyesis.

117
00:09:06.060 --> 00:09:10.580
I will be providing you with the estimate markup and with the CSF styling.

118
00:09:10.790 --> 00:09:16.610
I will be explaining it, but I will not be writing it because this is the JavaScript course.

119
00:09:16.880 --> 00:09:18.920
This is not an e-mail use discourse.

120
00:09:19.100 --> 00:09:24.380
And if I go ahead and type everything out, this course is going to go to like 200 hour.

121
00:09:24.560 --> 00:09:27.410
And that is well beyond the scope of my self.

122
00:09:27.980 --> 00:09:28.250
Right.

123
00:09:28.280 --> 00:09:31.340
So that is not going to be contained within the Muslim scope.

124
00:09:31.670 --> 00:09:32.000
All right.

125
00:09:32.010 --> 00:09:35.360
So that's why I will be providing you with the code.

126
00:09:36.590 --> 00:09:39.400
But but I will be explaining it to.

127
00:09:39.830 --> 00:09:44.470
So in here inside the body, we have a button that says read more and we have a paragraph.

128
00:09:44.630 --> 00:09:46.640
Oh, gosh, where is the paragraph?

129
00:09:46.850 --> 00:09:50.450
The paragraph has and has a class.

130
00:09:51.110 --> 00:09:57.890
The paragraph has a property of displacement and we have another class of active which has a display

131
00:09:57.890 --> 00:10:03.650
of block which we are dynamically going to apply to this paragraph.

132
00:10:04.940 --> 00:10:11.240
Through JavaScript, and when we click this read more button, this is sort of like a very, very,

133
00:10:11.240 --> 00:10:12.560
very small application.

134
00:10:12.710 --> 00:10:17.450
When you click on this read more button, you're going to see some sort of text and you're going to

135
00:10:17.450 --> 00:10:18.830
see this one here.

136
00:10:19.400 --> 00:10:22.090
Here I am.

137
00:10:23.150 --> 00:10:23.720
You're going to see.

138
00:10:23.720 --> 00:10:24.390
Here I am.

139
00:10:24.950 --> 00:10:26.100
It could be anything.

140
00:10:26.390 --> 00:10:30.080
So let's go ahead and let's implement this functionality through JavaScript.

141
00:10:30.410 --> 00:10:38.450
So first off, as we have talked about variables before, I think I think I've mentioned this, but

142
00:10:38.450 --> 00:10:39.170
it doesn't matter.

143
00:10:39.170 --> 00:10:44.180
I'm going to mention, again, the same the same with access.

144
00:10:44.180 --> 00:10:53.530
When you want to style a Java and HTML element, you should first select it, then you can style it.

145
00:10:53.840 --> 00:11:02.060
So whenever you want to apply a DOM functionality to any e-mail element, you should first select that

146
00:11:02.060 --> 00:11:02.980
e-mail element.

147
00:11:03.170 --> 00:11:04.660
So which is the element?

148
00:11:04.670 --> 00:11:05.810
Do we want to select?

149
00:11:06.080 --> 00:11:09.190
Because the functionality is applied on the.

150
00:11:09.200 --> 00:11:15.590
But it's not applied on the, on the, on the paragraph because the paragraph is, is not visible,

151
00:11:15.660 --> 00:11:17.250
it's not even visible.

152
00:11:17.660 --> 00:11:20.890
So whenever we click the button we want to see the paragraph.

153
00:11:21.080 --> 00:11:25.280
So it means that the functionality has been applied on the but.

154
00:11:26.880 --> 00:11:32.580
All right, so what I'm going to do is I'm going to grab this, but right, so what I'm going to do

155
00:11:32.580 --> 00:11:38.160
is I'm going to grab this button and we are going to go ahead and we are going to tap into the world

156
00:11:38.160 --> 00:11:38.970
of document.

157
00:11:38.980 --> 00:11:46.890
This document is actually our document object model, which in short terms is the HTML document.

158
00:11:47.370 --> 00:11:54.360
So now we have top10 inside this HTML document and through a query selector method.

159
00:11:55.050 --> 00:12:02.990
Think of this as a JavaScript selector as as with C assess where we have like elements selectors.

160
00:12:03.000 --> 00:12:04.890
There are five groups of selectors.

161
00:12:06.570 --> 00:12:13.180
I want to mention this, if you want to know all about selectors, grab my e-mail five elements and

162
00:12:13.230 --> 00:12:14.940
this through properties boot camp.

163
00:12:15.420 --> 00:12:22.140
If you want to know about flexibile grit and sass and all those cool animations, grab my flexible Sanscrit

164
00:12:22.140 --> 00:12:23.280
and animations developed.

165
00:12:23.290 --> 00:12:29.250
Of course, I do have two courses to comprehensive courses on e-mail access.

166
00:12:29.670 --> 00:12:34.700
If you want to know all about them, go ahead and grab them and you will know everything about them.

167
00:12:35.220 --> 00:12:42.580
So query selected works and in the way that it grabs any element from HTML through a C assist select

168
00:12:42.580 --> 00:12:43.120
tour.

169
00:12:43.440 --> 00:12:50.880
So inside these quotations we tap inside the CSX World Cyesis Selecter world.

170
00:12:51.420 --> 00:12:56.980
Let's go ahead and let's select that element by its element selector or by name selectors.

171
00:12:57.300 --> 00:12:59.460
Now we have successfully selected that.

172
00:12:59.670 --> 00:13:02.580
Let's go ahead and let's select the paragraph as well.

173
00:13:02.700 --> 00:13:05.150
And I'm going to give it a name of Para.

174
00:13:05.340 --> 00:13:12.630
And this button has now been stored inside this Vitton variable and the Para is going to be stored within

175
00:13:12.630 --> 00:13:13.440
the para.

176
00:13:13.830 --> 00:13:17.090
The paragraph is going to be stored within the para variable.

177
00:13:17.280 --> 00:13:24.840
So I'm just going to copy that, put it right here and we are going to select it using the para para

178
00:13:25.590 --> 00:13:26.760
using the PAETEC.

179
00:13:26.760 --> 00:13:28.350
It's not paragraph, it's Peter.

180
00:13:29.130 --> 00:13:30.300
Now we have selected it.

181
00:13:30.600 --> 00:13:36.510
We want when the bottom is correct, we we want to listen for an event.

182
00:13:36.660 --> 00:13:40.140
We are going to cover all about event listeners in our next lecture.

183
00:13:40.350 --> 00:13:42.270
The point of this lecture is.

184
00:13:43.440 --> 00:13:50.280
To understand what core functions are, so this function that I've just highlighted here is a callback

185
00:13:50.280 --> 00:13:52.680
function when the button is clicked.

186
00:13:52.710 --> 00:13:53.660
What do I want to do?

187
00:13:53.790 --> 00:14:01.140
I want to grab the power and I want to tap into the world of style in the world of class list.

188
00:14:01.170 --> 00:14:05.660
Of course, I want to add a class to it and the class is active.

189
00:14:07.680 --> 00:14:14.160
And Jeff, let's save it, so when I click on this, we are going to say here I am going when I it is

190
00:14:14.160 --> 00:14:15.410
going to go click on it.

191
00:14:15.420 --> 00:14:15.970
Here I am.

192
00:14:16.650 --> 00:14:17.730
So what is this?

193
00:14:17.730 --> 00:14:19.940
We are going to cover that in our next lecture.

194
00:14:20.070 --> 00:14:25.200
But the point is, this function that I've just highlighted and I'm going to zoom in.

195
00:14:26.230 --> 00:14:31.750
This highlighted function is a callback function, and that is the point of this entire lecture.

196
00:14:32.530 --> 00:14:35.020
That's it for this lecture.

197
00:14:35.080 --> 00:14:36.870
See you guys in the next one.

