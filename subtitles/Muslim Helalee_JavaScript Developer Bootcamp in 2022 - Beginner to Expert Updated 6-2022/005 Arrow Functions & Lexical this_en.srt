1
00:00:01,540 --> 00:00:02,390
Hi, everyone.

2
00:00:02,410 --> 00:00:06,490
In this lecture, we are going to talk about Arah functions and lexical this.

3
00:00:07,680 --> 00:00:16,200
All right, so let's come back to our neighborhood friendly lexical this and also narrow functions.

4
00:00:16,620 --> 00:00:17,120
All right.

5
00:00:17,280 --> 00:00:24,570
So here we have a movie shop object inside of which we have a property movie and a method movie.

6
00:00:24,580 --> 00:00:26,850
Funt And we are using the.

7
00:00:28,660 --> 00:00:38,310
Implicit binding or the context or the context object to call this function all right.

8
00:00:38,320 --> 00:00:45,550
And in here inside the movie Funk, we have a timer which is which uses an arrow function as a callback

9
00:00:45,550 --> 00:00:47,850
function and is going to run this movie.

10
00:00:48,510 --> 00:00:48,920
All right.

11
00:00:48,970 --> 00:00:56,140
So what do you think this is going to refer in the context of this era function right now?

12
00:00:57,640 --> 00:01:05,710
The this keyword inside this error function, because error functions, they are not hardbound functions,

13
00:01:06,130 --> 00:01:14,230
it is with any other lexical, with any other lexically scoped variable, it is going to go one level

14
00:01:14,230 --> 00:01:21,580
up the chain or one level of the scope because this lock console is not referenced in here.

15
00:01:21,730 --> 00:01:23,620
Console log is going to go on the floor.

16
00:01:23,830 --> 00:01:24,850
But what about this?

17
00:01:25,120 --> 00:01:25,960
This movie?

18
00:01:26,200 --> 00:01:32,950
If we look at the call site, movie shop, dot movie Funt, this movie funk is called Right Here, but

19
00:01:32,950 --> 00:01:37,270
from the movie Funk, we have no idea what this is going to refer to.

20
00:01:37,600 --> 00:01:44,020
But when the console log is going to come one level up inside this movie funk, then we know that movie

21
00:01:44,020 --> 00:01:50,640
funk is a function which is this aware arrow functions can never become this aware.

22
00:01:50,770 --> 00:01:58,420
Now many people have in their minds a mental model that an arrow function is essentially a hardbound

23
00:01:58,420 --> 00:01:58,980
function.

24
00:01:59,230 --> 00:01:59,650
All right.

25
00:01:59,950 --> 00:02:01,270
But that is not accurate.

26
00:02:01,270 --> 00:02:06,790
The proper way to think about an arrow function is an arrow function does not define at this keyword

27
00:02:06,790 --> 00:02:07,170
at all.

28
00:02:07,480 --> 00:02:11,650
There is no such thing as a this key word in an arrow function.

29
00:02:11,840 --> 00:02:19,390
That's why in tutorials you're going to see they're going to define like a variable like let Salaf equal

30
00:02:19,390 --> 00:02:22,480
to this and then they're going to use this inside the arrow function.

31
00:02:22,810 --> 00:02:26,930
But actually the best way to do that is just use a regular function.

32
00:02:27,370 --> 00:02:27,850
All right.

33
00:02:29,090 --> 00:02:37,430
All right, so in here, what we have is so that this is going to if I just log this, we are not going

34
00:02:37,430 --> 00:02:40,730
to get anything relating to this arrow function.

35
00:02:40,730 --> 00:02:44,680
We are going to see hell or high water is a masterpiece.

36
00:02:45,140 --> 00:02:49,280
The reason for that is because we can we can get a reference for the council log.

37
00:02:49,280 --> 00:02:50,750
It is going to go one level up.

38
00:02:51,050 --> 00:02:54,650
And this movie funk is going to become a this hour function.

39
00:02:55,130 --> 00:03:01,280
And this our function is called right here on this context object of movie shop.

40
00:03:02,000 --> 00:03:05,540
And this movie shop has a movie property.

41
00:03:05,750 --> 00:03:08,690
So this movie is going to reference that.

42
00:03:08,870 --> 00:03:14,450
And if I can't Sloggett, we can see that it says hell or high water is a masterpiece.

43
00:03:15,990 --> 00:03:24,960
So an error function is a function that doesn't have a this at all, right, and so it resolves it lexically,

44
00:03:25,240 --> 00:03:32,820
it just keeps going and going and going up until it finds a function that defines a this cure.

45
00:03:32,970 --> 00:03:39,270
And whatever the discover points for that function, that's what it what it is going to use.

46
00:03:39,300 --> 00:03:39,670
OK.

47
00:03:39,870 --> 00:03:47,880
And in the SPAC, it says that an arrow function doesn't have an arrow function, doesn't define local

48
00:03:47,880 --> 00:03:51,180
bindings for arguments super this and new target.

49
00:03:51,720 --> 00:03:58,250
So to rob this lecture up an arrow function is a function that doesn't define a this kiwa.

50
00:03:58,500 --> 00:04:05,060
The reason that I created this is because the lexical this tends to confuse many people.

51
00:04:05,700 --> 00:04:06,170
All right.

52
00:04:06,180 --> 00:04:08,040
And especially beginners.

53
00:04:08,040 --> 00:04:12,210
But actually what lexical this is, it's like any other variable.

54
00:04:12,420 --> 00:04:17,430
It is going to go one level up the chain to find any function that is this hour.

55
00:04:17,670 --> 00:04:23,070
And it is going to point at how that function is called that set.

56
00:04:23,070 --> 00:04:24,170
Very, very simple.

57
00:04:24,420 --> 00:04:25,580
That's it for this lecture.

58
00:04:25,650 --> 00:04:27,180
See you guys in the next one.

