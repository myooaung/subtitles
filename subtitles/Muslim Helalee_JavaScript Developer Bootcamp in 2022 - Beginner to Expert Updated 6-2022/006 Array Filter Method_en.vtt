WEBVTT
1
00:00:01.670 --> 00:00:02.640
Hi, everyone.

2
00:00:02.660 --> 00:00:07.160
In this election, we're going to talk about the array filter method.

3
00:00:08.180 --> 00:00:16.309
All right, so the array filter method creates an array with all elements that pass the test implemented

4
00:00:16.309 --> 00:00:18.140
by the provided function.

5
00:00:18.770 --> 00:00:19.090
All right.

6
00:00:19.310 --> 00:00:25.610
So we need we are going to provide a test or a condition if that condition is met.

7
00:00:26.060 --> 00:00:32.750
The it is going to create a new array with all the elements that pass that condition.

8
00:00:33.050 --> 00:00:36.230
So let's go ahead and let's take a look at it inside our code.

9
00:00:36.530 --> 00:00:41.360
So we do have here the same array that we had before, the best songs.

10
00:00:41.510 --> 00:00:46.040
But I've added the year, the year that that song came in as well.

11
00:00:46.190 --> 00:00:50.810
I have grabbed the list of best songs from Wikipedia.

12
00:00:51.080 --> 00:00:55.040
I just search like top like best songs of all time.

13
00:00:55.340 --> 00:00:56.900
And it provided this list.

14
00:00:57.800 --> 00:01:01.300
And the year, the New Year is is actually accurate.

15
00:01:01.520 --> 00:01:05.590
So Bob Dylan, like a Rolling Stone was 1965.

16
00:01:06.080 --> 00:01:06.540
Right.

17
00:01:06.770 --> 00:01:10.750
So these are like really classic songs and I really love them.

18
00:01:11.180 --> 00:01:11.600
All right.

19
00:01:11.630 --> 00:01:20.410
So what we are going to do is we want to filter this array, the array items based on the song here,

20
00:01:20.540 --> 00:01:28.560
and we want to return only the songs whose here is either 1965 or greater than 1965.

21
00:01:28.580 --> 00:01:32.530
So let's go ahead and let's grab our best songs.

22
00:01:32.690 --> 00:01:36.590
And on the array, we are going to call the filter method.

23
00:01:36.980 --> 00:01:40.460
OK, so the filter method is going to grab.

24
00:01:40.850 --> 00:01:43.520
We are going to pass in a callback function in here.

25
00:01:43.520 --> 00:01:48.590
So the callback function is going to have a parameter and that is going to be song.

26
00:01:48.590 --> 00:01:50.030
You're right.

27
00:01:50.510 --> 00:01:52.580
And what is the callback function going to do?

28
00:01:52.740 --> 00:02:00.560
It is going to grab all the items inside this array and it is going to grab the year and it is going

29
00:02:00.560 --> 00:02:06.530
to return if that year is IEG is greater than or equal to 1965.

30
00:02:07.070 --> 00:02:12.200
Now, let's store the result of this inside a variable song years.

31
00:02:13.790 --> 00:02:20.960
And let's log it to the council so we are 100 percent accurate years.

32
00:02:21.010 --> 00:02:21.740
Let's save it.

33
00:02:22.340 --> 00:02:25.070
Oops, I should open this up with life server.

34
00:02:26.060 --> 00:02:27.020
Not here, buddy.

35
00:02:28.460 --> 00:02:35.360
You know what this is, it's going to work if you click there and say it's going to open and there.

36
00:02:36.360 --> 00:02:44.970
OK, so here, I'm just going to run it again, so here we have an area that has four items inside of

37
00:02:44.970 --> 00:02:48.150
it, and when I click on it, we can see only that.

38
00:02:48.450 --> 00:02:54.390
I'm just going to increase this, that out of the six items we are just printing for.

39
00:02:54.660 --> 00:02:55.470
And why is that?

40
00:02:55.470 --> 00:02:59.280
Because only these four songs, they pass our test.

41
00:02:59.610 --> 00:03:08.120
Our test was to grab songs whose year is either 1965 or like bigger than 1965.

42
00:03:08.910 --> 00:03:13.830
So we had 1965, we have 1971, 67 and 68.

43
00:03:14.190 --> 00:03:16.230
We had 1959 here.

44
00:03:16.500 --> 00:03:21.520
It didn't print that and we had 1958 here, which it didn't print it.

45
00:03:22.080 --> 00:03:24.890
So this is going to be it for this lecture.

46
00:03:25.050 --> 00:03:26.670
See you guys in the next one.

