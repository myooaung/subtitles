1
00:00:01,620 --> 00:00:02,410
Hi, everyone.

2
00:00:02,640 --> 00:00:06,960
In this lecture, we are going to talk about the ESX class word.

3
00:00:08,189 --> 00:00:14,910
All right, so I've just opened up this page, I should probably copy that and pasted right here.

4
00:00:16,440 --> 00:00:23,370
And let's face it here now, this is an example of how classes look like in JavaScript, but before

5
00:00:23,370 --> 00:00:24,160
going over there.

6
00:00:24,180 --> 00:00:26,820
Let's go over the documentation now.

7
00:00:26,820 --> 00:00:30,300
It says classes are a template for creating objects.

8
00:00:31,410 --> 00:00:36,480
This is where the object oriented design comes into play.

9
00:00:36,930 --> 00:00:40,350
Classes are a template, a template.

10
00:00:40,390 --> 00:00:41,490
They're not objects.

11
00:00:41,760 --> 00:00:44,940
They are a template for creating objects.

12
00:00:45,330 --> 00:00:48,000
They encapsulate data with code to work.

13
00:00:49,510 --> 00:00:57,190
On that day to classes and jails are built on prototypes, which we are going to cover later, but have

14
00:00:57,190 --> 00:01:03,270
some syntax and semantics that are not shared with the S5 class, like semantics.

15
00:01:03,670 --> 00:01:07,750
Now, defining classes, classes are, in fact special functions.

16
00:01:08,170 --> 00:01:15,670
OK, and just as you define function expressions and function declarations, the class syntax has two

17
00:01:15,670 --> 00:01:18,700
components class expressions and class declarations.

18
00:01:18,970 --> 00:01:24,580
But in this course, we are just going to go over the class declarations, not the class expressions.

19
00:01:24,820 --> 00:01:25,180
Right.

20
00:01:25,330 --> 00:01:26,660
Which are more intuitive.

21
00:01:27,010 --> 00:01:29,420
So what do we have here?

22
00:01:29,440 --> 00:01:36,730
We have the class keyword and then whatever name you provide that class, it's the first letter should

23
00:01:36,730 --> 00:01:37,330
be capital.

24
00:01:37,660 --> 00:01:39,610
This is the convention for naming that.

25
00:01:39,820 --> 00:01:42,220
And then we open curly braces.

26
00:01:42,970 --> 00:01:46,540
This part, which is the constructor function.

27
00:01:46,570 --> 00:01:49,640
This is completely like optional.

28
00:01:49,640 --> 00:01:51,550
You you can't provide it or not.

29
00:01:51,730 --> 00:01:54,760
And this is the function that we have created.

30
00:01:55,360 --> 00:01:55,690
Right.

31
00:01:55,810 --> 00:02:04,660
And in here, we call this workshop function or workshop object with the new keyword.

32
00:02:04,870 --> 00:02:09,220
Right now, this is what it looks like.

33
00:02:09,220 --> 00:02:15,040
This is what actually this is a very, very small example of object oriented programming.

34
00:02:15,430 --> 00:02:18,520
They are used to create objects there, a template.

35
00:02:18,910 --> 00:02:23,870
But if we go ahead and check the type of the workshop, it is going to return a function.

36
00:02:24,610 --> 00:02:25,030
All right.

37
00:02:26,630 --> 00:02:33,920
So these classes, they can be defined with or without an extensive class, which you are going to look

38
00:02:33,920 --> 00:02:36,020
at later in this lecture.

39
00:02:36,380 --> 00:02:40,250
OK, here we're just defining class that doesn't extend anything.

40
00:02:40,400 --> 00:02:43,060
So it is called the top level class.

41
00:02:43,250 --> 00:02:46,940
You can choose to, as I said, define a constructor or not.

42
00:02:47,000 --> 00:02:47,360
All right.

43
00:02:49,030 --> 00:02:55,960
So now let's go over how how this is going to run and now more importantly, let's go over what the

44
00:02:55,960 --> 00:02:58,120
discord is going to refer to.

45
00:02:58,480 --> 00:03:00,610
So in here we have a new keyword.

46
00:03:00,730 --> 00:03:06,820
And we know whenever we call a function with the new keyword, there are four things that are going

47
00:03:06,820 --> 00:03:07,350
to happen.

48
00:03:07,360 --> 00:03:11,320
First, the new keyword is going to create a brand new object.

49
00:03:12,040 --> 00:03:18,280
The second thing, that brand new object is going to be linked to another object, which in this case

50
00:03:18,280 --> 00:03:19,350
is this workshop.

51
00:03:19,900 --> 00:03:23,260
This it is going to be linked to this workshop and then.

52
00:03:24,240 --> 00:03:33,170
And the third thing is that what was third thing, it invokes the function, it calls it with the disk

53
00:03:33,170 --> 00:03:39,230
you were pointing at the new object, we know then the new object is created, the new object is linked,

54
00:03:39,230 --> 00:03:46,280
and that this keyword is going to point to this new object that that this that this new has created.

55
00:03:46,790 --> 00:03:49,280
And fourth and finally, F.

56
00:03:50,390 --> 00:03:56,000
And fourth, and finally, the new keyword after the function call is done, now, the function call

57
00:03:56,000 --> 00:03:56,540
is done.

58
00:03:56,750 --> 00:04:02,990
If the function does not return its own object, the new keyword is going to return that this keyword.

59
00:04:03,290 --> 00:04:05,420
So what is this going to refer to?

60
00:04:06,140 --> 00:04:12,080
The this is going to refer to this, John, because we have said that this star teacher equals a teacher.

61
00:04:12,350 --> 00:04:14,240
And where is this teacher coming from?

62
00:04:14,360 --> 00:04:19,640
The teacher is coming from right here where the function is called the callsign.

63
00:04:19,850 --> 00:04:23,780
So this is the argument, the argument which is going to be passed inside here.

64
00:04:23,930 --> 00:04:26,200
And this teacher is going to be John.

65
00:04:26,450 --> 00:04:33,380
So if I were to first off, let's go ahead and let's look to the council using our type of operator,

66
00:04:33,800 --> 00:04:40,040
the workshop with Capital W, and if I say it, we are going to see it says function.

67
00:04:40,460 --> 00:04:46,330
And now we have just stored the results of this inside this markup.

68
00:04:46,580 --> 00:04:50,300
So I'm just going to call I'm just going to log to the console that mark-up.

69
00:04:51,940 --> 00:04:55,300
So Consul Locke and I'm just going to say Mark-Up.

70
00:04:56,150 --> 00:05:02,720
And when I say it, we can see that we have a brand new object inside that brand new object, we have

71
00:05:02,720 --> 00:05:03,440
a method.

72
00:05:03,650 --> 00:05:05,270
We have a property called teacher.

73
00:05:05,270 --> 00:05:06,840
And the value for that is John.

74
00:05:07,580 --> 00:05:15,750
This is actually the object that this new keyword has created and has linked it to this workshop object.

75
00:05:16,370 --> 00:05:16,760
All right.

76
00:05:17,900 --> 00:05:20,270
So this is how classes are created.

77
00:05:20,270 --> 00:05:25,120
And this is the relationship between this constructor and this workshop itself.

78
00:05:25,310 --> 00:05:26,710
That's why it's optional.

79
00:05:26,720 --> 00:05:32,840
You can create this constructor, but you should know that it is directly in contact with this workshop

80
00:05:32,840 --> 00:05:36,880
because this argument is going to be passed inside this parameter.

81
00:05:37,470 --> 00:05:37,770
Right.

82
00:05:38,060 --> 00:05:40,010
So this is.

83
00:05:40,520 --> 00:05:41,960
But what about this ask?

84
00:05:42,500 --> 00:05:45,170
But what about this aske function?

85
00:05:46,020 --> 00:05:47,040
What happens then?

86
00:05:47,220 --> 00:05:53,370
So what I'm going to do is I'm going to go ahead and I'm going to create another variable.

87
00:05:53,490 --> 00:05:57,640
I'm going to come down here and I'm going to say, let Jess be cool to.

88
00:05:57,990 --> 00:06:04,710
So now we are creating another instance of the new keyword and we are going to call the workshop.

89
00:06:05,720 --> 00:06:07,190
Function, OK?

90
00:06:07,220 --> 00:06:15,680
And I'm just going to say, Jane, right, and now when this workshop function is is called, what is

91
00:06:15,680 --> 00:06:18,840
the this keyword is going to point out, we need to go to the call side.

92
00:06:18,870 --> 00:06:19,910
This is the call side.

93
00:06:20,390 --> 00:06:21,350
The call side.

94
00:06:22,230 --> 00:06:27,580
Says that how the function is called, how the function is called is controlled by the new Kiwa.

95
00:06:27,780 --> 00:06:33,810
So all of those steps are created and we end up with another teacher for which the value is going to

96
00:06:33,810 --> 00:06:34,570
be Jane.

97
00:06:34,860 --> 00:06:36,740
So Jane is going to be passed here.

98
00:06:36,750 --> 00:06:39,350
So this teacher is going to be equal to Jane.

99
00:06:39,930 --> 00:06:44,820
And if I were to cancel log, that's you know what?

100
00:06:47,780 --> 00:06:54,920
If I were to bring it down and let's change it to James, and if I said it, we are going to see that

101
00:06:54,920 --> 00:07:00,410
workshop, Jane, so we can create as many instances of this workshop as we want.

102
00:07:00,740 --> 00:07:03,560
OK, so this is the good thing about using classes.

103
00:07:03,830 --> 00:07:11,420
But keep in mind, this is this syntactic sugar on top of the prototypes that the JavaScript is really

104
00:07:11,420 --> 00:07:14,420
built on, OK, that the JavaScript is going to do.

105
00:07:14,870 --> 00:07:23,860
So what I'm going to do is I'm going to use were Mark-Up and Geass to do something else as well.

106
00:07:23,870 --> 00:07:27,590
So I'm going to use I'm going to call the Aske function as well.

107
00:07:27,770 --> 00:07:31,260
So now let's we have two instances of this workshop.

108
00:07:31,280 --> 00:07:33,040
One is John, the other one is Jane.

109
00:07:33,530 --> 00:07:37,330
So how can we go ahead and call this aske function?

110
00:07:37,790 --> 00:07:41,660
So why don't we have to do is I'm just going to say markup dot ask.

111
00:07:43,230 --> 00:07:50,100
And inside here, I'm going to pass and let's say teachers HTML, I'm just going to pass in three,

112
00:07:50,700 --> 00:07:52,670
I'm just going to put in three question marks.

113
00:07:53,010 --> 00:07:57,780
So it is going to say John teaches up.

114
00:07:58,170 --> 00:08:03,510
So this we are going to go over this entire scenario one more time.

115
00:08:04,140 --> 00:08:08,910
So this ask question this sorry, this ask function, it has it this key word.

116
00:08:09,180 --> 00:08:11,070
What is this, what is going to point out.

117
00:08:11,070 --> 00:08:14,700
We cannot tell that by looking at the function we need to go to the calcite.

118
00:08:15,090 --> 00:08:16,200
Here is the side.

119
00:08:16,800 --> 00:08:22,350
The ASC is called as a method on this mark-up.

120
00:08:22,980 --> 00:08:23,970
What is the markup.

121
00:08:23,970 --> 00:08:32,299
Markup is a an object and this object has a teacher of property on it.

122
00:08:32,789 --> 00:08:34,620
And what is the teacher's value?

123
00:08:34,620 --> 00:08:35,750
It is, John.

124
00:08:35,909 --> 00:08:36,299
All right.

125
00:08:36,630 --> 00:08:42,919
So this the teacher is going to be actually workshop the teacher, which is going to grab the value,

126
00:08:42,929 --> 00:08:43,250
John.

127
00:08:43,559 --> 00:08:47,910
And we are going to see John here and inside the question.

128
00:08:47,910 --> 00:08:49,370
We are going to see teachers estimate.

129
00:08:49,480 --> 00:08:52,490
And when I say that, it says John teaches HTML.

130
00:08:53,990 --> 00:09:00,740
We can do the same thing for Jane as well, so I'm just going to say, James.

131
00:09:01,810 --> 00:09:05,590
Teachers, yes, so again.

132
00:09:06,910 --> 00:09:10,600
This aske function is a this hour function.

133
00:09:10,780 --> 00:09:13,960
So what is this thing to point out?

134
00:09:14,110 --> 00:09:15,550
We need to go to the call side.

135
00:09:15,560 --> 00:09:16,630
Here is the inside.

136
00:09:17,320 --> 00:09:23,440
The Aske function has been called as a method on this Jase's.

137
00:09:23,890 --> 00:09:27,040
This J.S. is actually a an object.

138
00:09:27,220 --> 00:09:32,830
So this is the context object or the implicit binding that we talked about.

139
00:09:33,040 --> 00:09:33,400
All right.

140
00:09:33,620 --> 00:09:37,270
And it has inside of it a teacher as a property.

141
00:09:38,020 --> 00:09:38,280
Right.

142
00:09:38,620 --> 00:09:45,430
So this the teacher is actually going to be workshop the teacher and the value for this is going to

143
00:09:45,430 --> 00:09:45,950
be Jane.

144
00:09:46,210 --> 00:09:51,570
So it's going to say, Jane in here and the question is going to be teachers, J.S. And when I say that,

145
00:09:51,570 --> 00:09:53,470
it says Jane teaches us.

146
00:09:54,080 --> 00:09:54,490
All right.

147
00:09:54,790 --> 00:09:57,340
So with this, you know what?

148
00:09:57,340 --> 00:10:04,540
I wanted to cover the extents class in this lecture, the extents and this super clause and this lecture

149
00:10:04,540 --> 00:10:04,930
as well.

150
00:10:05,320 --> 00:10:08,530
What the classes with the class syntax.

151
00:10:08,830 --> 00:10:12,430
But it's been ten minutes and there is a lot to take in.

152
00:10:12,700 --> 00:10:13,660
So go ahead.

153
00:10:13,870 --> 00:10:19,030
Watch this video and just take a break and come with me to the next lecture where we will talk about

154
00:10:19,030 --> 00:10:23,310
the extents and the super clause for class constructors.

155
00:10:23,530 --> 00:10:23,910
All right.

156
00:10:24,070 --> 00:10:25,490
So that's it for this lecture.

157
00:10:25,510 --> 00:10:26,980
See you guys in the next one.

