1
00:00:02,270 --> 00:00:08,930
Hi, everyone, in this election, we are going to create the clear input and the update UI functions.

2
00:00:09,850 --> 00:00:10,480
All right.

3
00:00:10,940 --> 00:00:18,140
So I'm going to come down here below this budget and let's come down here and in here.

4
00:00:18,140 --> 00:00:22,550
I'm going to say clear input function.

5
00:00:22,970 --> 00:00:23,450
All right.

6
00:00:24,650 --> 00:00:26,990
So let's create that function.

7
00:00:28,330 --> 00:00:33,010
Function and we are going to call it clear input now.

8
00:00:35,350 --> 00:00:43,480
And the function call we have passed in an array now, even though there are two items within that array,

9
00:00:43,480 --> 00:00:47,080
but this is still counts as one argument, right?

10
00:00:48,550 --> 00:00:50,770
Because there are this argument.

11
00:00:51,990 --> 00:00:57,810
Has not been separated by a comma, so instead of doing anything, I'm just going to pass an input as

12
00:00:57,810 --> 00:01:04,260
a function parameter and in here we are going to grab our inputs and we are going to run a for each

13
00:01:04,260 --> 00:01:05,150
loop on it.

14
00:01:05,880 --> 00:01:09,810
When the foreach loop runs, we are going to run a function.

15
00:01:10,140 --> 00:01:14,730
And each time that function runs, we are going to add a parameter of input.

16
00:01:15,270 --> 00:01:19,710
Now we want this for each loop variable, which is the input.

17
00:01:19,710 --> 00:01:20,890
We want that to run.

18
00:01:21,360 --> 00:01:29,640
Now, officially, we have not started work talking about the for each with which is an array method

19
00:01:29,640 --> 00:01:35,440
or helper methods also called or higher order functions.

20
00:01:35,460 --> 00:01:38,540
We have not talked about this, but we are going to get to them.

21
00:01:38,550 --> 00:01:44,370
We have talked about the array methods, but like the basic and intermediate level for each is like

22
00:01:44,370 --> 00:01:47,850
more of a komaroff, an advanced kind of array method.

23
00:01:48,180 --> 00:01:55,320
We are going to get to those like advanced array methods after we're done with like a like a few more

24
00:01:56,010 --> 00:01:57,900
a few more projects.

25
00:01:57,900 --> 00:02:00,660
And then we are going to get to like advanced JavaScript stuff.

26
00:02:01,020 --> 00:02:05,190
But so far we are just diving from beginner to intermediate.

27
00:02:05,200 --> 00:02:06,750
This is not advanced JavaScript.

28
00:02:06,930 --> 00:02:11,870
You're going to see what advanced JavaScript is towards the middle to the end of this course.

29
00:02:12,240 --> 00:02:19,170
So we are going to grab the input and we are going to grab the value from that input and we are going

30
00:02:19,170 --> 00:02:22,020
to set it to an empty string chakra.

31
00:02:22,020 --> 00:02:22,490
Right.

32
00:02:23,400 --> 00:02:25,450
So let's say that let's come here.

33
00:02:25,470 --> 00:02:33,480
So if I come here and if I say salary, salary, I'm not going to salary fifty.

34
00:02:33,690 --> 00:02:38,760
And when I click, we can see that you have digitized, not defined.

35
00:02:39,600 --> 00:02:41,130
It didn't work.

36
00:02:41,710 --> 00:02:43,780
Why did it not work?

37
00:02:44,490 --> 00:02:47,520
So if I come here, it says clear input.

38
00:02:47,520 --> 00:02:49,580
We have clearly done that.

39
00:02:50,160 --> 00:02:52,320
This is the clear input function.

40
00:02:53,520 --> 00:02:56,670
We have grabbed our inputs, instances of data UI.

41
00:02:56,670 --> 00:03:01,190
So I'm just going to go ahead and come in those ones out and I'm going to come here.

42
00:03:01,290 --> 00:03:06,470
So let's project is easier to write 500.

43
00:03:06,470 --> 00:03:12,960
So if when I click now we can see that because there was an error before the actual function, call

44
00:03:13,620 --> 00:03:19,270
the JavaScript engine, it did not allow this to run because there was an error before it.

45
00:03:20,220 --> 00:03:22,340
So now we can see that there is nothing here.

46
00:03:22,350 --> 00:03:25,310
Both of them, they have been cleared and everything is printed here.

47
00:03:26,250 --> 00:03:31,950
What I am going to do as well as I'm going to come here and I'm going to remove we are going to end

48
00:03:31,950 --> 00:03:33,960
up with like a ton of console logs.

49
00:03:33,960 --> 00:03:37,850
So it's better that we remove them after we're done with them.

50
00:03:38,490 --> 00:03:44,790
So I'm going to come here on top of this clear input and I'm going to create the update UI function.

51
00:03:45,420 --> 00:03:47,670
We are done with the clear input for now

52
00:03:49,980 --> 00:04:00,000
function update UI and we are not going to pass and we are not going to pass in any parameter because

53
00:04:00,000 --> 00:04:02,670
we are not pastan in the argument for this function.

54
00:04:03,690 --> 00:04:06,360
So what do I want to do with this update?

55
00:04:06,360 --> 00:04:09,570
UI Now this is, as I told you, the biggest function.

56
00:04:09,930 --> 00:04:15,210
I want this update UI to change the balance, to change the outcome, to change the outcome, to change

57
00:04:15,210 --> 00:04:18,149
the income tracker expense structure and all.

58
00:04:18,450 --> 00:04:23,640
So we are going to go step by step on what we want to do for off.

59
00:04:23,640 --> 00:04:24,840
I want to creative.

60
00:04:25,050 --> 00:04:32,820
I want to initialize or redefine this redeclared, not defined functions are defined, redeclared this

61
00:04:32,820 --> 00:04:37,200
variable because if I remember correctly, there we have one.

62
00:04:37,200 --> 00:04:38,090
It is right here.

63
00:04:38,400 --> 00:04:39,570
So this is income.

64
00:04:39,810 --> 00:04:43,440
So initially the income is zero, which is this one.

65
00:04:43,650 --> 00:04:47,570
And that's why we can see that it's a zero, zero and zero.

66
00:04:48,090 --> 00:04:53,190
So first off, I want to grab these three variables and I want to provide them with values.

67
00:04:53,190 --> 00:04:53,580
Right.

68
00:04:56,410 --> 00:05:04,810
Mm hmm, let's come here, so I'm going to grab whereas so first stuff, I'm going to grab the balance.

69
00:05:04,810 --> 00:05:06,480
So I'm just going to say balance.

70
00:05:06,850 --> 00:05:11,210
We have initialized this variable and we have said the initial value to zero.

71
00:05:11,530 --> 00:05:13,060
Now we want to redeclared.

72
00:05:13,060 --> 00:05:14,390
We want to change the value.

73
00:05:14,870 --> 00:05:17,440
OK, so we are going to say balance.

74
00:05:17,440 --> 00:05:26,830
And when whenever we want to store any variable inside this balance, that that variable is that.

75
00:05:28,480 --> 00:05:34,690
Value is going to be actually a function and that function is going to be calculate balance.

76
00:05:34,910 --> 00:05:36,930
So we are going to have three functions.

77
00:05:37,390 --> 00:05:41,240
The first function sorry, two functions in here.

78
00:05:41,440 --> 00:05:44,220
So the first function is going to be calculate balance.

79
00:05:44,500 --> 00:05:51,400
The second function is to we calculate total and calculate the total is going to be called twice, once

80
00:05:51,400 --> 00:05:54,010
for the income and the other time for the outcome.

81
00:05:54,520 --> 00:05:57,180
So this is the calculate balance function.

82
00:05:57,640 --> 00:05:58,990
What do we want this to do?

83
00:05:59,170 --> 00:06:07,000
We want to pass in as arguments, income and outcome, because balance is income minus outcomes.

84
00:06:07,000 --> 00:06:14,590
So whenever we define this function, we are going to say balance income minus outcome so we can go

85
00:06:14,590 --> 00:06:18,220
ahead and we can create this function right now.

86
00:06:18,550 --> 00:06:27,940
So I'm going to come down here and I'm going to say calculate balance function.

87
00:06:28,150 --> 00:06:29,730
You know, we could do this as well.

88
00:06:30,070 --> 00:06:30,670
This way.

89
00:06:30,700 --> 00:06:32,770
This way is not like confusing.

90
00:06:32,950 --> 00:06:38,890
I could just create all the variables here and then define the functions, but I could define the functions

91
00:06:38,890 --> 00:06:40,020
at the same time as well.

92
00:06:40,690 --> 00:06:43,260
So we are going to call it calculate balance.

93
00:06:43,510 --> 00:06:47,650
Now, we have two two different arguments.

94
00:06:47,860 --> 00:06:49,360
They're separated by a comma.

95
00:06:49,720 --> 00:06:54,430
So I'm going to grab both of the arguments and I'm going to pass them as parameters.

96
00:06:55,120 --> 00:06:59,350
And I want this function to do only one thing.

97
00:06:59,740 --> 00:07:03,640
I want this function to return income minus outcome.

98
00:07:04,720 --> 00:07:07,710
This is going to be our balance and this is the balance.

99
00:07:07,930 --> 00:07:11,560
So whatever the income, whatever is the outcome, just subtract them.

100
00:07:12,200 --> 00:07:12,500
Right.

101
00:07:12,570 --> 00:07:21,940
So this is our very first function that we created here, our very first variable that we have redeclared

102
00:07:21,940 --> 00:07:22,210
here.

103
00:07:22,480 --> 00:07:24,490
The second one is going to be income.

104
00:07:25,060 --> 00:07:32,980
And on the income, what I want to do is I want to say, calculate total, calculate total, calculate

105
00:07:32,980 --> 00:07:33,580
total.

106
00:07:33,790 --> 00:07:36,160
And we are going to pass in our income.

107
00:07:37,240 --> 00:07:37,690
All right.

108
00:07:37,970 --> 00:07:40,060
And also the entry list.

109
00:07:41,230 --> 00:07:44,880
And we are going to do the same thing for the expense.

110
00:07:45,700 --> 00:07:50,170
So let's grab both of them and we are going to pass those in as well.

111
00:07:50,560 --> 00:07:55,290
Now, let's go ahead and let's create the calculate total function as well.

112
00:07:55,510 --> 00:07:56,920
I'm going to come beneath.

113
00:07:57,100 --> 00:07:57,790
I'm going to come.

114
00:07:57,790 --> 00:07:59,950
We could come beneath it or on top of it.

115
00:08:00,280 --> 00:08:14,880
I could go on top of it and I could say I calculate total function, so function calculate total.

116
00:08:15,130 --> 00:08:22,140
So we have two different kinds of two different arguments and we should pass two different arguments.

117
00:08:22,420 --> 00:08:24,100
Now, there is a cool thing here.

118
00:08:24,340 --> 00:08:30,580
The cool thing is the first argument is it seems like the type of the budget that we either want to

119
00:08:30,580 --> 00:08:32,110
pass or we want to subtract.

120
00:08:32,559 --> 00:08:35,919
So this is a type of income and this is a type of expense.

121
00:08:36,370 --> 00:08:42,220
So the first parameter I'm just going to pass and type, the second parameter is going to be our enter

122
00:08:42,220 --> 00:08:45,820
entry list or simply can't list.

123
00:08:47,780 --> 00:08:53,210
What do we want this function to do, we want to first go ahead and create a variable called sum and

124
00:08:53,210 --> 00:08:58,760
I want to make it zero, then I want to grab my list and I want to call for research on it.

125
00:08:58,960 --> 00:08:59,360
Right.

126
00:09:00,400 --> 00:09:08,500
And whenever the foreach loop runs, each time, I want to grab the entry, OK, and I want to check

127
00:09:08,500 --> 00:09:09,040
something.

128
00:09:10,000 --> 00:09:18,580
Now, if the entry type equals to the type that is written here, I want to increase that sum by the

129
00:09:18,580 --> 00:09:20,500
amount that the user has entered.

130
00:09:21,040 --> 00:09:21,910
So F.

131
00:09:23,510 --> 00:09:27,840
Entry type equals type.

132
00:09:27,980 --> 00:09:36,440
So what is this type, this entry type is going to give us either expense or income and this type is

133
00:09:36,440 --> 00:09:38,750
either this income or this expense.

134
00:09:39,110 --> 00:09:45,430
So if this type equals to either income or expense, what do I want to do?

135
00:09:45,800 --> 00:09:49,330
I want to grab our some variable and I want to add on to it.

136
00:09:49,340 --> 00:09:53,600
That's why I tacked in like a plus sign there.

137
00:09:53,810 --> 00:09:55,880
I want to add on to the amount.

138
00:09:57,480 --> 00:10:02,930
All right, to the entertainment, so we have an entry, that type, and we have an entry that amount,

139
00:10:03,630 --> 00:10:03,990
right.

140
00:10:04,110 --> 00:10:07,740
And right after that, I want to say return some.

141
00:10:07,740 --> 00:10:08,260
That's it.

142
00:10:08,550 --> 00:10:10,160
So I just want to sum them up.

143
00:10:10,500 --> 00:10:11,250
What does it mean?

144
00:10:11,280 --> 00:10:14,520
It means that whatever user passes in.

145
00:10:14,520 --> 00:10:18,960
So if I were to write, for example, project.

146
00:10:20,050 --> 00:10:27,820
And I would say 5000 now, this 5000 is going to be some, but like it's going to be combined with this

147
00:10:27,820 --> 00:10:29,860
1000 and we are going to get 6000.

148
00:10:31,450 --> 00:10:36,020
We are going to get 6000, right, so we have successfully done this.

149
00:10:36,280 --> 00:10:40,420
Now let's go ahead and let's check out if the update UI is going to work.

150
00:10:41,470 --> 00:10:41,920
All right.

151
00:10:41,930 --> 00:10:42,920
So we are here.

152
00:10:42,940 --> 00:10:46,690
Let's go ahead and let's say project.

153
00:10:47,620 --> 00:10:50,730
It is not going to print it here because we have not done that.

154
00:10:50,740 --> 00:10:52,360
We just want to print it here for now.

155
00:10:53,290 --> 00:10:53,900
Let's see.

156
00:10:53,920 --> 00:11:05,290
So if I say 100, it didn't do it because actually what we have done is we should tell the UI function,

157
00:11:05,530 --> 00:11:06,910
where do we want to print it?

158
00:11:06,940 --> 00:11:12,430
We just we have just provided the income, the expense with a certain value.

159
00:11:12,640 --> 00:11:22,180
So if I were to say cancel the log and if I provide an array here and I could say balance income and

160
00:11:22,540 --> 00:11:26,260
expense, well, this is not expense.

161
00:11:26,270 --> 00:11:30,800
This is outcome because we are working in the header.

162
00:11:30,820 --> 00:11:34,170
Now, this is balance income and this is outcome.

163
00:11:34,930 --> 00:11:39,290
So let's go ahead and let's cancel this and let's see what we are going to get.

164
00:11:39,550 --> 00:11:45,060
So I'm just going to say project and I'm going to say one 1000.

165
00:11:45,070 --> 00:11:45,780
Let's save it.

166
00:11:46,300 --> 00:11:51,910
We can see that expense is not defined at UI this and ADHD amount.

167
00:11:51,940 --> 00:11:56,440
So if I add one hundred and six at this.

168
00:11:57,070 --> 00:11:59,520
No, this is I should be sorry.

169
00:11:59,800 --> 00:12:01,310
This should be the outcome.

170
00:12:02,200 --> 00:12:02,880
Save it.

171
00:12:02,920 --> 00:12:04,630
Let's do it one more time.

172
00:12:04,630 --> 00:12:05,250
Let's go.

173
00:12:05,500 --> 00:12:06,520
Oh this is rent.

174
00:12:07,000 --> 00:12:10,570
Let's say project one hundred.

175
00:12:10,780 --> 00:12:18,760
Click on it and we can see this so we can see that we have 100 here because we have passed all three

176
00:12:18,760 --> 00:12:19,570
of them here.

177
00:12:20,740 --> 00:12:23,970
Now keep in mind we can only see 100 in the middle.

178
00:12:24,430 --> 00:12:25,720
What is this one hundred?

179
00:12:25,750 --> 00:12:30,800
It comes from the income because the income is the second item inside.

180
00:12:31,180 --> 00:12:37,730
So if I were to pass on something for the outcome, we should see this get updated as well.

181
00:12:38,020 --> 00:12:47,230
So now we can see that we have 200 for the outcome, 100 for the income, 200 minus 100.

182
00:12:47,230 --> 00:12:48,310
We get 100.

183
00:12:48,670 --> 00:12:50,830
All right, 100 minus 200.

184
00:12:50,830 --> 00:12:52,530
We get negative 100.

185
00:12:52,810 --> 00:12:59,880
But we can see that because we should, like, specify the sign for that as well.

186
00:13:00,130 --> 00:13:05,110
But for now, we can only see that we can see our balance for in short.

187
00:13:05,560 --> 00:13:14,110
So I can go ahead and I can say, hmm, how can I how can I make this work?

188
00:13:15,390 --> 00:13:15,910
You know what?

189
00:13:15,910 --> 00:13:17,920
That's that's going to be it for this video.

190
00:13:17,920 --> 00:13:22,170
I just wanted to do something crazy with this console, but you can see what I mean.

191
00:13:22,390 --> 00:13:27,030
So if I were to go ahead and reload the page, I'm going to do it one more time and I'm going to say

192
00:13:27,040 --> 00:13:27,870
project.

193
00:13:28,120 --> 00:13:30,580
So don't mind the misspell.

194
00:13:30,790 --> 00:13:36,190
I'm going to say project is going to be four fifty and I'm going to add it and I'm going to say rent

195
00:13:36,670 --> 00:13:39,910
is going to be one fifty and I'm going to add it.

196
00:13:40,160 --> 00:13:48,340
And now we can see that for fifty, OK, is going to be our income.

197
00:13:48,340 --> 00:13:52,060
One fifty is going to be our outcome.

198
00:13:52,060 --> 00:13:54,730
But the balance is still says 450.

199
00:13:54,770 --> 00:13:55,200
Right.

200
00:13:55,210 --> 00:13:58,470
And I don't know what is wrong in here.

201
00:13:58,480 --> 00:13:59,800
So we have our income.

202
00:13:59,800 --> 00:14:03,260
We have our outcome, income outcome.

203
00:14:03,280 --> 00:14:04,870
It should work fine.

204
00:14:04,870 --> 00:14:10,090
I mean, it should it should subtract them so it returns.

205
00:14:10,090 --> 00:14:11,020
Where is this function?

206
00:14:11,020 --> 00:14:12,400
So it says income.

207
00:14:13,360 --> 00:14:15,970
We have income minus outcome.

208
00:14:16,130 --> 00:14:16,630
All right.

209
00:14:18,030 --> 00:14:25,020
And we have our income, so what what do I go ahead and provided down here and let's try this one more

210
00:14:25,020 --> 00:14:33,030
time and let's say Project 100, you know what, 150 added.

211
00:14:34,060 --> 00:14:42,220
OK, it says 150, let's say Rand, let's just say 50, just click on it, and now it is calculated

212
00:14:42,400 --> 00:14:47,770
correctly, this is income, this is outcome 150, minus 50.

213
00:14:47,780 --> 00:14:50,380
We are going to get 100 that set for this lecture.

214
00:14:50,410 --> 00:14:51,930
See you guys in the next one.

