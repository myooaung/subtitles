WEBVTT
1
00:00:01.720 --> 00:00:07.540
Hi, everyone, in this letter, we are going to find out whether a card is clicked.

2
00:00:09.380 --> 00:00:16.490
All right, so first off, let's go ahead and let's create our very first variable and then this variable,

3
00:00:16.670 --> 00:00:20.370
we are going to grab all of our memory cards, right?

4
00:00:21.170 --> 00:00:24.860
So I'm just going to call him cards and we are going to say document.

5
00:00:25.340 --> 00:00:30.170
What better method than query selector or because we have two cards, right.

6
00:00:30.710 --> 00:00:33.500
So we are going to say memory dash card.

7
00:00:33.950 --> 00:00:34.360
All right.

8
00:00:34.820 --> 00:00:40.670
So after this, what I want to do is I want to provide some initial values and I want to create some

9
00:00:40.670 --> 00:00:43.550
initial variables.

10
00:00:43.850 --> 00:00:51.350
And we are going to change and or toggle the values for these variables throughout this project.

11
00:00:51.680 --> 00:00:52.060
All right.

12
00:00:52.220 --> 00:01:00.230
So first stuff I want first of all, I want to create a variable that is going to say card is.

13
00:01:01.280 --> 00:01:10.040
Flipped and noticed that amusing let not cons, because down later down the project, we are going to

14
00:01:10.040 --> 00:01:11.630
change the value of this.

15
00:01:11.930 --> 00:01:15.360
And whenever we do CONSED, we are not going to be able to do that.

16
00:01:15.380 --> 00:01:16.960
That's why we are going to use let.

17
00:01:17.360 --> 00:01:25.550
And initially I'm going to set it to false because whenever the user starts the game, no card is flipped

18
00:01:25.580 --> 00:01:27.880
because the user has not clicked on any car.

19
00:01:28.070 --> 00:01:34.970
And when the user clicks on any card then we want to, we want to grab this card is flipped and we want

20
00:01:34.970 --> 00:01:35.960
to set it to true.

21
00:01:36.470 --> 00:01:37.880
OK, as opposed to false.

22
00:01:38.120 --> 00:01:43.280
Initially it is false, but when the user clicks, then it is going to be true.

23
00:01:44.820 --> 00:01:49.430
And we are going to initialize initialise not defined.

24
00:01:49.860 --> 00:01:52.070
We are going to initialize to more variables.

25
00:01:52.290 --> 00:01:56.970
The first one is first card and the second one is second car.

26
00:01:57.450 --> 00:01:59.120
And I'm not going to give them any values.

27
00:01:59.130 --> 00:02:03.980
And this is very valid in JavaScript because we are just going to initialize them and the values they

28
00:02:03.990 --> 00:02:05.010
are going to come later.

29
00:02:05.240 --> 00:02:05.570
Right.

30
00:02:06.210 --> 00:02:11.290
So now the first thing that I want to do is I want to be able to loop over all of the cards.

31
00:02:11.290 --> 00:02:15.540
So I'm going to create I'm going to grab our cards and we are going to do our foreach.

32
00:02:17.070 --> 00:02:19.510
And in here we are going to run a function.

33
00:02:19.510 --> 00:02:27.090
Now, the foreach loop loops over all of the cards, right from card number one on the way to car number

34
00:02:27.090 --> 00:02:27.600
12.

35
00:02:27.930 --> 00:02:33.300
And the loop variable, which is also the function parameter, is going to be card.

36
00:02:33.600 --> 00:02:33.930
Right.

37
00:02:34.230 --> 00:02:42.180
And we want the card to have an event listener and we listening for a click because when the user clicks,

38
00:02:42.390 --> 00:02:44.330
then we want to flip that card.

39
00:02:44.770 --> 00:02:45.070
Right.

40
00:02:45.450 --> 00:02:47.280
So this is I think.

41
00:02:48.000 --> 00:02:48.630
What is this?

42
00:02:50.090 --> 00:02:57.200
That was Miskelly, I think I talked about this and the drawing up, if I'm not mistaken, and a couple

43
00:02:57.200 --> 00:03:06.770
of chapters back, that whenever we go ahead and we apply the lessons, we usually in real world scenarios,

44
00:03:06.770 --> 00:03:12.170
what we do is we call the function here or we write the name of the function and we create the function

45
00:03:12.170 --> 00:03:12.950
separately.

46
00:03:13.400 --> 00:03:18.590
If the function has very few lines of code, you could do it here by professional.

47
00:03:18.620 --> 00:03:19.670
You should separate.

48
00:03:20.480 --> 00:03:24.890
So what I'm going to do is I'm going to come on top and I'm going to create the function.

49
00:03:26.280 --> 00:03:31.410
Flipkart, all right, so now this is our function of Flipkart.

50
00:03:31.440 --> 00:03:36.300
All right, I'm not going to pass in any parameter in here.

51
00:03:36.480 --> 00:03:41.670
The first thing that I want to do is I want to show you something, even though officially we have not

52
00:03:42.090 --> 00:03:49.330
started talking about this key word because this key word classifies as advanced JavaScript.

53
00:03:49.830 --> 00:03:53.190
We have not reached our advanced chapters.

54
00:03:53.400 --> 00:03:59.730
Whenever we are done with these beginner to intermediate level projects, then we will go ahead and

55
00:03:59.730 --> 00:04:04.140
start the advanced JavaScript chapters and advanced JavaScript projects.

56
00:04:05.250 --> 00:04:11.610
But the this keyword is very crucial to implementing this memory game, so I'm just going to give you

57
00:04:12.150 --> 00:04:13.570
an idea of how it works.

58
00:04:13.980 --> 00:04:21.149
So in the context of this flip card that this key were first and any element inside the game that has

59
00:04:21.149 --> 00:04:21.959
been clicked.

60
00:04:22.530 --> 00:04:24.140
So it is going to give us that.

61
00:04:24.450 --> 00:04:32.520
So let's go ahead and let's cancel the log, that element or the this keyword to see what this keyword

62
00:04:32.520 --> 00:04:33.330
is going to give us.

63
00:04:33.630 --> 00:04:35.940
So this is our final project, right.

64
00:04:36.240 --> 00:04:38.310
And this is the project that we're working on.

65
00:04:38.310 --> 00:04:39.690
Not as nothing works.

66
00:04:39.910 --> 00:04:41.310
It's not functional yet.

67
00:04:42.980 --> 00:04:48.020
So let's save it, and whenever I click on this card, we are going to see that, we are going to see

68
00:04:48.020 --> 00:04:51.620
that the this keyword gives us exactly that card.

69
00:04:51.920 --> 00:04:54.970
That's why the this keyword is very, very crucial.

70
00:04:55.220 --> 00:04:59.480
So if I click on this card and if I hover over it, it's says Curious Cat.

71
00:04:59.810 --> 00:05:04.370
And it means that this image, this this is exactly what I clicked on.

72
00:05:04.400 --> 00:05:13.100
So click on this one is exactly that one and this one so that this keyword allows us to track where

73
00:05:13.100 --> 00:05:14.300
the user has clicked.

74
00:05:14.540 --> 00:05:14.940
Right.

75
00:05:15.170 --> 00:05:17.060
So I'm just going to go ahead and remove that.

76
00:05:18.290 --> 00:05:26.810
And whenever the user clicks on any card, which is the value of the this keyword, I want to add a

77
00:05:26.810 --> 00:05:27.860
class to it.

78
00:05:27.980 --> 00:05:31.350
So I'm going to say class list, dot toggle.

79
00:05:32.390 --> 00:05:36.410
Now, the toggle method is going to add that class.

80
00:05:36.620 --> 00:05:42.290
If that class is not present, if the class is present, it is going to remove that class.

81
00:05:42.530 --> 00:05:47.110
So we don't have to add and remove it manually through two methods.

82
00:05:47.240 --> 00:05:53.660
We could just use toggle and the toggle is going to take care of it for us and the class is going to

83
00:05:53.660 --> 00:05:54.320
be flip.

84
00:05:54.650 --> 00:05:57.060
I think we have specified the class of Flip.

85
00:05:57.530 --> 00:06:02.840
This is the flipped class and it does transform, rotate 180 degrees.

86
00:06:02.840 --> 00:06:04.370
And it gives us a perspective.

87
00:06:05.740 --> 00:06:08.650
So now these images, they flip.

88
00:06:09.490 --> 00:06:10.870
But they do not go back.

89
00:06:10.900 --> 00:06:14.240
All right, so there is still a lot of functionality missing.

90
00:06:14.860 --> 00:06:20.070
So now we have been able to successfully flip the cards.

91
00:06:20.560 --> 00:06:30.080
Now we should make sure that now it is the stage where we want to know whether it is the first click

92
00:06:30.160 --> 00:06:31.960
by a user, for example.

93
00:06:31.960 --> 00:06:34.150
Let's just go ahead and close this and come here.

94
00:06:34.570 --> 00:06:36.200
So this is our final product.

95
00:06:37.390 --> 00:06:45.490
Now, there is a lot of logic behind this seems very simple on the surface, but behind all this, there

96
00:06:45.490 --> 00:06:48.570
is a very strong logic that I want to explain thoroughly.

97
00:06:49.240 --> 00:06:54.340
So whenever we refresh the page, it means that this game starts fresh.

98
00:06:54.340 --> 00:06:54.760
Right.

99
00:06:55.150 --> 00:07:03.070
And we want to make sure to find out whether or not this this this is the first click by a user or the

100
00:07:03.070 --> 00:07:03.740
second clue.

101
00:07:04.150 --> 00:07:09.610
So whenever I click on this image and when we see this cat, it means this is our first click.

102
00:07:10.030 --> 00:07:16.690
And when I click on this image of this dog, it means this is the second click notice when I click on

103
00:07:16.690 --> 00:07:17.580
another card.

104
00:07:17.590 --> 00:07:23.770
We are not allowed to do it because whenever two cards are flipped, the third card is locked.

105
00:07:24.040 --> 00:07:27.310
We are going to get to that functionality later in this chapter.

106
00:07:28.060 --> 00:07:36.700
But for now, we want to know whether the claque by the user is the second the first click on a first

107
00:07:36.700 --> 00:07:39.780
card or the second click on a second card.

108
00:07:40.210 --> 00:07:41.470
We want to find that out.

109
00:07:41.800 --> 00:07:47.370
So for that, because this is programmed logic, we are going to use if statements.

110
00:07:48.250 --> 00:07:51.760
So initially the card is flipped is false.

111
00:07:51.790 --> 00:07:52.210
OK.

112
00:07:53.440 --> 00:07:59.430
And when we say when the card is left, let's go ahead and write it and I'm going to explain it.

113
00:08:00.010 --> 00:08:04.210
So when the card is flipped, it has a value of force.

114
00:08:04.670 --> 00:08:11.110
And when you add in not operator to force, it means that it is a negative and this is a negative.

115
00:08:11.290 --> 00:08:11.700
All right.

116
00:08:11.980 --> 00:08:16.530
So negative times negative, it means it is going to be positive or true.

117
00:08:16.840 --> 00:08:23.950
So this condition is going to evaluate to true when the card is flipped is is false and it has a value

118
00:08:23.950 --> 00:08:25.540
of false, false, false, false.

119
00:08:25.540 --> 00:08:34.059
We are going to get a true when it is true, it means it means that this is the first click on the first

120
00:08:34.059 --> 00:08:34.480
card.

121
00:08:34.480 --> 00:08:38.919
So we are going to grab our card is flipped and we are going to set it to true.

122
00:08:39.610 --> 00:08:42.190
Again this is in not operator.

123
00:08:42.370 --> 00:08:45.220
It negates everything that's in front of it.

124
00:08:46.120 --> 00:08:52.240
The in front of it is false and when it negates a false statement we are going to get a true.

125
00:08:53.270 --> 00:08:53.780
All right.

126
00:08:54.110 --> 00:09:01.700
And the first card is going to be equal to where this keyboard, because the this keyword is the card

127
00:09:01.700 --> 00:09:03.090
that the user has to collect.

128
00:09:03.150 --> 00:09:03.980
We know that.

129
00:09:04.760 --> 00:09:09.600
And now we want to call that first click our first card.

130
00:09:09.830 --> 00:09:10.610
Very simple.

131
00:09:11.180 --> 00:09:11.510
All right.

132
00:09:11.630 --> 00:09:17.000
I'm going to create the the statement as well.

133
00:09:17.000 --> 00:09:23.300
And we are going to wrap up this letter and we are going to pick it up where we left off in the next

134
00:09:23.300 --> 00:09:23.780
lecture.

135
00:09:24.290 --> 00:09:31.660
So when the user collects this statement evaluates to true.

136
00:09:31.670 --> 00:09:38.590
That's why we said the card is flipped through and the first card is that this keyword or is devalued

137
00:09:38.600 --> 00:09:40.910
or is the card that the user has clicked.

138
00:09:42.020 --> 00:09:48.110
And in any other scenario, we want to say that the card is flipped is false.

139
00:09:48.290 --> 00:09:56.360
It means that when the first card when the first card is flipped, then after that when it is flipped,

140
00:09:56.360 --> 00:09:57.530
we want to do this.

141
00:09:57.890 --> 00:10:04.850
But when it is not flipflopped, we want to go back to its original state when the card is not flipped.

142
00:10:05.420 --> 00:10:14.960
And this time the second card is going to have the value of the this keyword because at first for the

143
00:10:14.960 --> 00:10:21.320
first card, for the first card, when the value of the this keyword was assigned to the first card,

144
00:10:21.680 --> 00:10:24.290
the card was flipped right through.

145
00:10:24.680 --> 00:10:29.300
And when it is false, we want to add that this keyword to the second card.

146
00:10:29.660 --> 00:10:30.020
All right.

147
00:10:30.260 --> 00:10:31.470
That's it for this video.

148
00:10:31.490 --> 00:10:33.020
See you guys in the next one.

