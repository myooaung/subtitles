1
00:00:01,859 --> 00:00:06,060
Hi, everyone, welcome to Part six of Matching.

2
00:00:07,560 --> 00:00:13,650
All right, so in this picture, we are going to go over the first example, which actually is example

3
00:00:13,650 --> 00:00:14,970
number 21.

4
00:00:14,980 --> 00:00:15,750
Can you believe it?

5
00:00:15,780 --> 00:00:16,930
Twenty one examples.

6
00:00:17,520 --> 00:00:24,420
So we are going to match all the non-white space and the previous lecture we must all the white space.

7
00:00:24,420 --> 00:00:27,170
In this lecture, we're going to match all the non-white space.

8
00:00:27,180 --> 00:00:28,500
And you guessed it right.

9
00:00:28,920 --> 00:00:30,660
It is going to be the lower case.

10
00:00:30,710 --> 00:00:39,780
So I'm going to jump into the previous lecture, grab this, copy it and jump back in and put it right

11
00:00:39,780 --> 00:00:40,050
here.

12
00:00:40,290 --> 00:00:48,360
Let's grab all the 20s and turn them to twenty one and let's do CAPITALIS.

13
00:00:48,540 --> 00:00:51,960
And now we get everything that is not a white space.

14
00:00:52,410 --> 00:00:52,800
Right.

15
00:00:52,830 --> 00:00:53,970
Very, very simple.

16
00:00:53,970 --> 00:00:54,320
Right.

17
00:00:54,690 --> 00:00:58,650
We can also get the length and we can see it is 90.

18
00:00:58,950 --> 00:00:59,390
Right.

19
00:00:59,640 --> 00:01:04,200
So it is 90 now that's come these one out.

20
00:01:04,470 --> 00:01:07,680
The next one is for the next three examples.

21
00:01:07,920 --> 00:01:15,470
We are going to discuss a newer like a new idea, and that is like quantity specifiers.

22
00:01:15,930 --> 00:01:23,850
So example number two, we are going to specify upper and lower number of matches using quantity, quantity,

23
00:01:23,850 --> 00:01:25,530
quantity specifiers.

24
00:01:26,040 --> 00:01:29,390
Now, let's say we have where is a Google?

25
00:01:30,030 --> 00:01:30,820
Where is it?

26
00:01:31,230 --> 00:01:32,940
So we have Google.

27
00:01:32,940 --> 00:01:34,960
We have, uh.

28
00:01:35,820 --> 00:01:36,090
Hmm.

29
00:01:37,320 --> 00:01:39,880
Whoa.

30
00:01:40,230 --> 00:01:41,130
All right.

31
00:01:41,130 --> 00:01:42,950
So let's put in an AI there as well.

32
00:01:43,620 --> 00:01:45,270
So both of them are.

33
00:01:45,270 --> 00:01:49,130
Oh, so let's go ahead and let's find something else.

34
00:01:51,830 --> 00:01:56,940
Yeah, yeah, that like that, so we have it.

35
00:01:57,200 --> 00:02:02,630
So now what we are going to do is we are going to go ahead and create our regular expression number

36
00:02:02,630 --> 00:02:07,270
22 and inside there, I'm not going to pass anything.

37
00:02:07,280 --> 00:02:16,520
And for now, so what it is that we want to do here, we want to grab all the O's that happen two to

38
00:02:16,520 --> 00:02:17,480
four times.

39
00:02:17,480 --> 00:02:19,640
So I'm just going to provide oh, here.

40
00:02:19,940 --> 00:02:23,630
And quantity specifiers are provided inside curly braces.

41
00:02:23,960 --> 00:02:26,120
So there are going to be three scenarios.

42
00:02:26,360 --> 00:02:29,890
The first scenario is going to be we will have two numbers.

43
00:02:30,170 --> 00:02:32,570
So the first number is going to be the minimum.

44
00:02:32,720 --> 00:02:37,280
And the second number after comma, of course, is going to be the maximum range.

45
00:02:37,610 --> 00:02:40,040
Think of this like a range that we have.

46
00:02:40,400 --> 00:02:43,520
And the second case is we are going to talk about that.

47
00:02:43,520 --> 00:02:47,270
We have when we have a minimum number, but not a maximum number.

48
00:02:47,540 --> 00:02:50,000
And in the third case, we just have one number.

49
00:02:50,300 --> 00:02:50,630
Right.

50
00:02:50,810 --> 00:02:54,020
That is going to be the maximum number for us.

51
00:02:54,040 --> 00:02:54,290
Right.

52
00:02:54,500 --> 00:03:03,560
So I want to propose that a curve two to four times or like I could say one to four times or two to

53
00:03:03,560 --> 00:03:05,580
four times doesn't really matter.

54
00:03:05,600 --> 00:03:10,310
So let's let's grab this and let's put it right here.

55
00:03:10,310 --> 00:03:11,690
I'm just going to remove the length.

56
00:03:11,990 --> 00:03:14,390
We are not going to need a length anymore.

57
00:03:15,590 --> 00:03:18,460
We could do the match and we could do the test.

58
00:03:18,680 --> 00:03:22,400
So what I'm going to do is in this scenario, I'm just going to do the test.

59
00:03:22,640 --> 00:03:29,840
So we are going to write a regular expression, number two into two here, and we are going to test

60
00:03:30,230 --> 00:03:33,010
that sentence that we have.

61
00:03:33,290 --> 00:03:35,780
So let's grab it and let's say sentence.

62
00:03:36,490 --> 00:03:36,950
Right.

63
00:03:36,950 --> 00:03:39,980
And let's come in this one and come in this one.

64
00:03:39,980 --> 00:03:43,520
And and so this is one to one.

65
00:03:44,090 --> 00:03:47,300
Let's change both of them to twenty two and we get through.

66
00:03:47,600 --> 00:03:48,340
What does it mean?

67
00:03:48,350 --> 00:03:57,530
It means that we do have oase that are at least repeated two times and a maximum of four times, not

68
00:03:57,530 --> 00:04:02,570
a maximum like two to four times because there we have one, two, three and four.

69
00:04:02,720 --> 00:04:04,190
We don't care about the rest of them.

70
00:04:04,430 --> 00:04:08,210
That's why so strong we can go ahead and go over.

71
00:04:08,210 --> 00:04:11,750
One more example and I'm going to say, Regg, 22 X.

72
00:04:12,020 --> 00:04:15,110
So for this to work, I'm just going to comment about that part.

73
00:04:16,250 --> 00:04:24,800
And in here we are going to write E that are repeated three to five times.

74
00:04:24,950 --> 00:04:25,300
Right.

75
00:04:25,520 --> 00:04:30,980
We are going to grab all of them and I'm going to put in the G flag in case we need it.

76
00:04:31,280 --> 00:04:34,730
So let's stir it inside this variable.

77
00:04:35,120 --> 00:04:38,690
This time we are going to grab our sentence and match it.

78
00:04:40,480 --> 00:04:48,280
We're going to grab our sentence and match it to that regular expression, so rage 22 X and we are going

79
00:04:48,280 --> 00:04:52,620
to store, we're going to cancel log the result, so let's save it.

80
00:04:52,990 --> 00:04:54,740
So it's a sentence, that test.

81
00:04:54,760 --> 00:04:56,340
OK, so this should be match.

82
00:04:57,490 --> 00:04:58,120
Let's save it.

83
00:04:58,120 --> 00:04:59,380
And now we get that.

84
00:04:59,530 --> 00:05:03,880
So we get all the way to five and we get all the way to three.

85
00:05:04,150 --> 00:05:10,840
So it means that we get e whether it is repeated three times or a maximum of five times.

86
00:05:10,870 --> 00:05:13,410
So this is the minimum value and this is the maximum.

87
00:05:13,720 --> 00:05:18,360
So we have got in it, which is five times and we have gotten it, which is three times.

88
00:05:18,580 --> 00:05:25,690
This is how we can specify the upper and lower number of matches and the next example.

89
00:05:26,610 --> 00:05:37,020
An example, number 23, we are just concerned with specifying the lower number of matches, using the

90
00:05:37,020 --> 00:05:38,540
quantity specifiers.

91
00:05:39,000 --> 00:05:46,710
So if I were to like, let's say Grob, this example, it right here because I'm not like so much focusing

92
00:05:46,710 --> 00:05:49,570
on typing the code rather than explaining.

93
00:05:50,250 --> 00:05:59,880
So in this case, I'm just going to remove the upper the upper case sorry, the upper there upper range.

94
00:05:59,890 --> 00:06:03,540
I kind of lost the word there, so I just removed the upper range.

95
00:06:03,850 --> 00:06:05,340
And what what does that mean?

96
00:06:05,370 --> 00:06:11,460
It means that we are looking for an oh that that happens at least two times.

97
00:06:11,760 --> 00:06:15,210
We don't care how many times it it has happened.

98
00:06:15,210 --> 00:06:17,520
It should happen at least two times.

99
00:06:17,940 --> 00:06:18,230
Right.

100
00:06:18,260 --> 00:06:25,680
So let's go ahead and grab these and we are going to say 23 and we get through because we do have that

101
00:06:25,680 --> 00:06:27,840
kind of oh, that happens at least two times.

102
00:06:28,110 --> 00:06:33,630
But if I were to remove like Goggle, say, like Google and save it, we are going to get false.

103
00:06:33,990 --> 00:06:35,070
Why do we get false?

104
00:06:35,100 --> 00:06:41,700
The reason that that we get false is we don't have two consecutive O's, at least two consecutive O's

105
00:06:41,940 --> 00:06:44,230
for this pattern to return trip.

106
00:06:44,880 --> 00:06:47,400
Now, I'm sure you are getting the idea.

107
00:06:47,880 --> 00:06:55,110
So if I were to say I'm looking for an edge that happens at least two times or for an L that happens

108
00:06:55,110 --> 00:07:02,580
at least two times, then if I were to remove these two realis, then we are going to get false because

109
00:07:02,580 --> 00:07:07,530
we don't have that kind of pattern inside the string and it is going to return.

110
00:07:07,530 --> 00:07:10,400
False or true, because this is the test method.

111
00:07:10,650 --> 00:07:14,100
You can go ahead and check it out and the match method as well.

112
00:07:14,280 --> 00:07:16,010
But I'm just going to suffice to this.

113
00:07:16,320 --> 00:07:22,590
So this was the second scenario where we only have one of the bands, a specified sorry, one of the

114
00:07:22,590 --> 00:07:25,350
bands specified it was the lower bound.

115
00:07:26,570 --> 00:07:32,150
Now, now, let's go ahead and specify the exact number it is that we are looking for.

116
00:07:32,580 --> 00:07:34,650
So that is going to be our example.

117
00:07:34,650 --> 00:07:39,900
Number 24, specifying the exact number of matches, using the quantity specifiers.

118
00:07:40,290 --> 00:07:43,500
So we are looking for an exact number.

119
00:07:43,500 --> 00:07:45,480
So let's you know what?

120
00:07:45,480 --> 00:07:52,380
I'm just going to copy this, put it right here and I'm going to uncommented all of them before saving.

121
00:07:52,410 --> 00:07:56,300
Let's change it to twenty four.

122
00:07:56,790 --> 00:07:59,700
Now I'm just going to remove the comma.

123
00:07:59,700 --> 00:08:03,180
So I'm looking for oh, that happens two times.

124
00:08:03,540 --> 00:08:05,100
When I save it, we get false.

125
00:08:05,370 --> 00:08:06,390
Why do we get false.

126
00:08:06,600 --> 00:08:08,180
Because we don't have any.

127
00:08:08,190 --> 00:08:10,620
Oh that happens exactly two times.

128
00:08:10,890 --> 00:08:13,740
If I were to say Google now we get true.

129
00:08:13,860 --> 00:08:14,730
Why is that.

130
00:08:14,730 --> 00:08:21,450
Because Google has exactly two O's previously it did and that's why it returned.

131
00:08:21,450 --> 00:08:21,990
False.

132
00:08:22,440 --> 00:08:25,050
So you can do the math for this one as well.

133
00:08:25,200 --> 00:08:31,800
But this test, it actually says it actually conveys the point better than matching matching.

134
00:08:31,810 --> 00:08:35,700
It is going to give it is going to give it to us.

135
00:08:35,700 --> 00:08:40,860
But this testing is going to say whether or not this pattern is accurate.

136
00:08:41,100 --> 00:08:44,670
That's why we started with test and we ended up with match.

137
00:08:44,670 --> 00:08:47,130
And again, we are working with the test.

138
00:08:47,460 --> 00:08:51,150
You can go both ways that that's why I've done both ways in here.

139
00:08:51,300 --> 00:08:52,350
You can go both ways.

140
00:08:52,350 --> 00:08:59,040
You can you can check out if that pattern is true or if that pattern exists, and then you can extract

141
00:08:59,040 --> 00:09:00,960
the pattern using the match method.

142
00:09:01,830 --> 00:09:02,250
All right.

143
00:09:02,430 --> 00:09:04,130
So that's it for this lecture.

144
00:09:04,140 --> 00:09:05,730
See you guys in the next one.

