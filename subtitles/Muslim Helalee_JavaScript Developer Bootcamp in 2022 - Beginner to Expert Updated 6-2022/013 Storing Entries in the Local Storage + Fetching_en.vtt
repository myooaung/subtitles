WEBVTT
1
00:00:01.859 --> 00:00:02.969
Hi, everyone.

2
00:00:03.000 --> 00:00:07.770
In this lecture, we're going to add our entries to the local storage.

3
00:00:09.460 --> 00:00:15.790
All right, so inside the update, you I function, what I'm going to do is I'm going to call the local

4
00:00:15.790 --> 00:00:23.290
storage and I'm going to say that said item Y in here, because honestly, all of our items are right

5
00:00:23.290 --> 00:00:23.680
here.

6
00:00:24.310 --> 00:00:25.720
So what is the key?

7
00:00:25.990 --> 00:00:27.610
Which is which should be a string.

8
00:00:27.610 --> 00:00:37.090
So set item, it sets the value of a pair of identified a pair identified by key to value creating a

9
00:00:37.090 --> 00:00:45.360
new key value pair if nonexistent existed or key for key previously like whatever comes after that.

10
00:00:45.730 --> 00:00:51.160
So we are going to call it entry key or entry list.

11
00:00:51.910 --> 00:00:53.680
You're just going to call it entry list.

12
00:00:54.070 --> 00:01:01.840
And now, because this is in JavaScript format, we have to call the JSON that string ify method to

13
00:01:01.840 --> 00:01:04.230
convert it to the adjacent format.

14
00:01:04.720 --> 00:01:06.890
You know, Jason, Jason doesn't really matter.

15
00:01:06.910 --> 00:01:14.830
So Jason Dot strangled by Jason that string ify and what is it that we want to string?

16
00:01:15.250 --> 00:01:20.230
So keep in mind that we can only feed the local storage with an array.

17
00:01:20.920 --> 00:01:21.330
All right.

18
00:01:21.610 --> 00:01:23.950
So what is that array that we want to feed it?

19
00:01:24.250 --> 00:01:26.480
We can say it is the entry list.

20
00:01:26.950 --> 00:01:29.010
So now this function is completed.

21
00:01:29.020 --> 00:01:29.450
All right.

22
00:01:29.860 --> 00:01:35.440
So what I'm going to do is I'm going to come on top of here because there are a little bit like a couple

23
00:01:35.440 --> 00:01:36.880
of things that we need to do.

24
00:01:38.050 --> 00:01:44.170
First off, I'm going to comment out the entry list, which is like which is initialized an empty array.

25
00:01:44.530 --> 00:01:47.320
But I'm just going to go ahead and say entry list.

26
00:01:47.680 --> 00:01:49.740
I'm not going to set it to anything.

27
00:01:50.080 --> 00:01:57.940
So it is entry list because the values for the entry list are going to come from our local storage f

28
00:01:57.940 --> 00:02:00.070
the local storage has something.

29
00:02:00.700 --> 00:02:08.259
If the local storage has something, it is it is going to be an array so that we are going to set it

30
00:02:08.259 --> 00:02:09.009
to enter a list.

31
00:02:09.280 --> 00:02:11.830
If there was nothing inside the local storage.

32
00:02:11.950 --> 00:02:14.320
We just want to set the entry list and.

33
00:02:14.320 --> 00:02:14.650
All right.

34
00:02:14.770 --> 00:02:15.510
All right.

35
00:02:15.880 --> 00:02:21.400
So let's grab our entry list and we are going to say, Jason.

36
00:02:21.700 --> 00:02:26.170
OK, Jason, Jason does not pass.

37
00:02:26.440 --> 00:02:36.220
What do we now, whenever we use Jason Pass, it means that we are changing Jason language into JavaScript,

38
00:02:36.220 --> 00:02:37.600
object or value.

39
00:02:37.780 --> 00:02:39.580
OK, dot pass.

40
00:02:41.460 --> 00:02:47.640
What is it that we want to pass, we want to pass the local storage dot and from the local storage we

41
00:02:47.640 --> 00:02:51.030
want to get an item, what is the key for that item?

42
00:02:51.030 --> 00:02:57.630
It see it it just requires one parameter, one sorry, one argument inside this function.

43
00:02:57.630 --> 00:02:58.380
And that is the key.

44
00:02:58.650 --> 00:03:01.860
The key is entry dash analyst.

45
00:03:03.160 --> 00:03:09.610
All right, so it requires one, so we need a logical or operator, why?

46
00:03:09.760 --> 00:03:12.820
Because we have two billion expressions.

47
00:03:13.120 --> 00:03:17.860
If this boolean expression is true, we want the Intralytix to grab this value.

48
00:03:18.340 --> 00:03:19.740
What if that is not true?

49
00:03:19.750 --> 00:03:25.520
If that is not true, we want the interest to be equal to an empty array, which is what we had here.

50
00:03:26.260 --> 00:03:32.550
So we basically say if there is something inside the local storage, give it to the centralised.

51
00:03:32.830 --> 00:03:37.810
If there is nothing, just give the entry list in an empty, an empty array.

52
00:03:38.360 --> 00:03:45.220
OK, and we are going to update the UI as well, because if there is something we want, we want to

53
00:03:45.220 --> 00:03:50.020
show that on the UI on the Web page, if there isn't, we want to we don't want to show anything on

54
00:03:50.020 --> 00:03:50.750
the UI.

55
00:03:51.580 --> 00:03:57.300
So I think this is going to be about as far as the functionality of the local storage is concerned.

56
00:03:57.700 --> 00:04:05.380
So I'm going to come here inside the application, inside the local storage, so we we can see that

57
00:04:05.590 --> 00:04:08.470
we don't have any Keano, nor do we have any values.

58
00:04:08.710 --> 00:04:15.750
So I'm going to say salary and I'm going to set it to 13 for 64.

59
00:04:15.940 --> 00:04:18.910
And whenever I save it, we can see here we have.

60
00:04:21.720 --> 00:04:27.360
Everything here has been updated, of course, all this has had this has been updated, and in here

61
00:04:27.360 --> 00:04:31.020
we can see that we have an amount of 13, 64.

62
00:04:31.290 --> 00:04:37.100
We have a total of salary and the type is income because it has been tucked inside the income tracker.

63
00:04:37.530 --> 00:04:45.510
So let's go ahead and let's try something inside the expense tracker two, one, three, save it.

64
00:04:45.720 --> 00:04:48.030
And we can see we have another entry here.

65
00:04:48.180 --> 00:04:51.070
All of them are inside this of this array.

66
00:04:51.090 --> 00:04:52.950
OK, this is an array of objects.

67
00:04:54.270 --> 00:04:56.120
So this amounts to one three.

68
00:04:56.550 --> 00:04:59.750
The title is Rent and the type is expense.

69
00:05:00.330 --> 00:05:06.780
So all of this data is being fed from the lot as being stored inside the local storage.

70
00:05:06.810 --> 00:05:13.620
So if I reload it now, we can see that are right.

71
00:05:13.630 --> 00:05:23.190
So everything is zero, even though we can see them right here, we do have it there.

72
00:05:23.610 --> 00:05:26.610
But I think we have made a mistake here.

73
00:05:26.640 --> 00:05:30.660
The we have not called the items properly.

74
00:05:30.660 --> 00:05:31.980
So let's go ahead.

75
00:05:32.400 --> 00:05:33.770
Let's take a look at this.

76
00:05:33.770 --> 00:05:43.170
So we have our entry entry list is initialized here, Jason, that pass that item entry list, get item.

77
00:05:43.170 --> 00:05:44.970
So we need to get the item.

78
00:05:44.970 --> 00:05:53.670
The item is entry list or we need to pass in the the array, the update UI function.

79
00:05:54.980 --> 00:06:03.590
Think checking whether there is the update UI function, let's say that we should see stuff coming in

80
00:06:03.590 --> 00:06:10.520
from because they are present inside this local storage, but we are not feeding it to this application.

81
00:06:10.850 --> 00:06:16.690
So they are not coming to this, Jason, that pass local storage, that get item.

82
00:06:17.450 --> 00:06:20.410
So budget out.

83
00:06:20.690 --> 00:06:22.370
Where is the update UI?

84
00:06:24.570 --> 00:06:33.390
And trialist, so we have I think we have successfully provi gissen, the strong Afie Striatum local

85
00:06:33.390 --> 00:06:33.790
story.

86
00:06:33.820 --> 00:06:35.600
So they are stored.

87
00:06:35.610 --> 00:06:38.840
So this set method, this is working correctly.

88
00:06:39.330 --> 00:06:40.700
There is no problem there.

89
00:06:41.040 --> 00:06:48.420
The problem is with this, I think with this update UI function, because if I'm not mistaken, let's

90
00:06:48.420 --> 00:06:49.350
go ahead and let's see.

91
00:06:49.530 --> 00:06:54.780
Let's cancel that log our entry list now we can see where the problem is.

92
00:06:55.080 --> 00:06:58.170
So at the entry list is an empty array.

93
00:06:58.350 --> 00:07:00.990
It means the problem is inside this entry list.

94
00:07:01.680 --> 00:07:08.310
If the entry list has those values that we have inserted, like the salary and the rent, it means there

95
00:07:08.310 --> 00:07:11.040
is something wrong with this update UI function.

96
00:07:11.310 --> 00:07:12.440
And you know what is wrong?

97
00:07:12.450 --> 00:07:13.170
I just found it.

98
00:07:13.260 --> 00:07:14.130
I just found it.

99
00:07:14.460 --> 00:07:16.590
It is the parentheses.

100
00:07:16.590 --> 00:07:18.630
Where are the function parentheses.

101
00:07:18.630 --> 00:07:20.200
That's why it's not going to run.

102
00:07:20.820 --> 00:07:26.180
So if I come here inside the console, I can see my array, both of them.

103
00:07:26.850 --> 00:07:37.890
So the problem is I forgot to pass in the person, I forgot to write the parentheses and now it should

104
00:07:39.060 --> 00:07:42.180
grab the values, fetch the values from the local storage.

105
00:07:42.390 --> 00:07:48.570
It doesn't matter how many times you reload this page, you can see that all the values are right here.

106
00:07:49.020 --> 00:07:55.500
Everything the chart, the balance, the income, the outcome, the chart, the expense structure,

107
00:07:55.500 --> 00:07:58.140
income tracker, all everything is right here.

108
00:07:58.440 --> 00:08:01.710
The problem was just like parentheses.

109
00:08:01.710 --> 00:08:08.550
I didn't add parentheses and you saw that the entire list had those items.

110
00:08:08.850 --> 00:08:16.650
This entry list was inside this entry list, but only the update UI was this was just a basic misspelling

111
00:08:16.680 --> 00:08:18.270
that's misspelled.

112
00:08:18.270 --> 00:08:19.560
No, a typo.

113
00:08:19.860 --> 00:08:20.940
It is a typo.

114
00:08:21.090 --> 00:08:22.560
It is very, very late.

115
00:08:22.560 --> 00:08:31.230
I've started working this morning like it was I think eight thirty and it is eight thirty a.m..

116
00:08:31.470 --> 00:08:34.080
It is seven twenty four pm so.

117
00:08:35.220 --> 00:08:36.659
Thirty six minutes.

118
00:08:36.840 --> 00:08:38.370
Eight thirty six minutes.

119
00:08:38.370 --> 00:08:40.169
It should be like twelve hours.

120
00:08:40.169 --> 00:08:45.750
So we knew this was a very long day but I have to finish this project.

121
00:08:45.960 --> 00:08:48.780
So there are two more things remaining.

122
00:08:49.260 --> 00:08:56.160
One is the functionality of this delete button and the second one is the functionality of this edit.

123
00:08:56.160 --> 00:08:58.110
But so try and delete.

124
00:08:58.350 --> 00:09:01.200
We are going to do do that hopefully in one lecture.

125
00:09:01.350 --> 00:09:02.700
See you guys then.

