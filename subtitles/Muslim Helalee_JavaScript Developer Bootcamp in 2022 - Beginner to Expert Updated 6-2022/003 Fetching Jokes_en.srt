1
00:00:01,990 --> 00:00:06,070
Hi, everyone, in this letter, we are going to fetch jokes.

2
00:00:07,140 --> 00:00:15,900
All right, so before actually implementing this concept, you always need to go over the documentation

3
00:00:15,900 --> 00:00:22,980
for that specific API that you want to make requests to, the reason for that is there are actually

4
00:00:22,980 --> 00:00:24,290
two general reasons.

5
00:00:24,300 --> 00:00:37,230
And the first one is that any website has a different basis or a an EDP or out to which you can send

6
00:00:37,230 --> 00:00:40,810
it and a request or an API endpoint.

7
00:00:41,070 --> 00:00:45,870
First off, you need to grab that API input input from their documentation.

8
00:00:46,200 --> 00:00:53,670
And secondly, if there are some headers required, some authentication required, you need to know

9
00:00:53,670 --> 00:00:59,260
about that, because if you do not provide the headers or the authorization, you will not be able to

10
00:00:59,260 --> 00:01:00,530
fetch any kind of data.

11
00:01:00,870 --> 00:01:05,470
So you can see that this is going to be this is the link that I gave you in here.

12
00:01:05,519 --> 00:01:06,150
OK?

13
00:01:06,180 --> 00:01:07,170
It's right here.

14
00:01:07,500 --> 00:01:08,370
It's that link.

15
00:01:08,370 --> 00:01:14,200
And if you open it, you are going to come here and it says can be used for an API, for fetchingly

16
00:01:14,250 --> 00:01:19,190
random geo specific joke or searching for jokes in a variety of formats.

17
00:01:19,620 --> 00:01:25,500
We are not going to complicate this process because this is going to be just a very simple case of fetching

18
00:01:25,500 --> 00:01:26,100
the jokes.

19
00:01:28,050 --> 00:01:28,410
Right.

20
00:01:28,440 --> 00:01:35,400
So what I'm going to do here is we are going to go ahead and you can see that this is going to be the

21
00:01:35,820 --> 00:01:37,450
euro that we have.

22
00:01:37,650 --> 00:01:39,350
So this is going to be our base.

23
00:01:39,360 --> 00:01:40,800
You are right.

24
00:01:40,800 --> 00:01:45,890
And what I'm going to do as we do have this.

25
00:01:45,890 --> 00:01:48,000
So I'm just going to click there.

26
00:01:48,030 --> 00:01:54,210
I'm just going to go to Extension's and I'm going to do that and I'm going to close this right now.

27
00:01:54,210 --> 00:01:56,210
We shouldn't get that perfect.

28
00:01:56,790 --> 00:02:02,510
So this is the euro that we are going to making requests, which you can see that, OK.

29
00:02:02,660 --> 00:02:04,200
Let me show it to you here.

30
00:02:04,350 --> 00:02:08,250
You can see that we have an accept property here as well.

31
00:02:08,620 --> 00:02:15,600
And if you do not provided this accept applications, Jason, you will not be able to fetch any kind

32
00:02:15,600 --> 00:02:15,970
of data.

33
00:02:16,020 --> 00:02:20,020
So you can see that it says when you do this, you're going to get this response.

34
00:02:20,880 --> 00:02:22,110
So now let's go ahead.

35
00:02:22,140 --> 00:02:24,180
So this is our application.

36
00:02:24,180 --> 00:02:26,800
I just opened up, opened it up with live server.

37
00:02:27,240 --> 00:02:33,040
So what we are going to do is whenever I click the button, I want to generate a I generate a joke.

38
00:02:33,360 --> 00:02:39,030
So first off, let's let's grab the joke button.

39
00:02:39,030 --> 00:02:40,050
So joke.

40
00:02:40,200 --> 00:02:41,400
I'm just going to call it a joke.

41
00:02:41,400 --> 00:02:45,540
Beaton It's going to be document dot query selector.

42
00:02:46,410 --> 00:02:49,470
And I'm just going to select it with the element selector.

43
00:02:49,470 --> 00:02:54,690
And then we have our joke paragraph which I'm just going to call Joke Para.

44
00:02:56,150 --> 00:03:03,710
OK, document that query selector by now, we are very familiar with this query selector.

45
00:03:04,200 --> 00:03:07,060
I'm going to select it with the class, which is a joke.

46
00:03:07,340 --> 00:03:16,260
So whenever the joke button the event, when the joke button is clicked, I want to get a joke.

47
00:03:16,400 --> 00:03:18,680
Now, let's go ahead and let's create this function.

48
00:03:18,890 --> 00:03:21,830
Now, keep in mind, this is going to be an async function.

49
00:03:22,070 --> 00:03:26,230
So you need to provide the async keyword in front of the name of the function.

50
00:03:26,750 --> 00:03:31,800
So function get a joke and there is not going to be any parameter.

51
00:03:32,270 --> 00:03:36,470
So how are we going to be able to do this first stuff?

52
00:03:36,770 --> 00:03:43,430
I'm going to create a variable and I'm going to say joke you are al and that you are l that I showed

53
00:03:43,430 --> 00:03:43,580
you.

54
00:03:43,580 --> 00:03:45,080
I'm going to store it in here.

55
00:03:45,800 --> 00:03:49,460
And so let's come here and let's grab.

56
00:03:49,490 --> 00:03:50,820
So this is the you are else.

57
00:03:51,170 --> 00:03:53,720
It says that you should do a get request to this.

58
00:03:53,720 --> 00:03:55,060
You are right.

59
00:03:55,190 --> 00:03:57,200
So let's go ahead and let's face it.

60
00:03:57,230 --> 00:03:59,360
So this is where you are now.

61
00:03:59,360 --> 00:04:01,670
Let's go ahead and let's say a response.

62
00:04:03,930 --> 00:04:05,490
Consed, come on.

63
00:04:06,570 --> 00:04:07,770
Response.

64
00:04:08,040 --> 00:04:08,450
Right.

65
00:04:08,910 --> 00:04:17,250
And we are going to fetch our data now, the Fed is going to grab the euro and any other headers that

66
00:04:17,279 --> 00:04:23,250
or authorizations that we might have we have not talked about in this context.

67
00:04:23,280 --> 00:04:28,040
That's why I included this, because all APIs are not going to be straightforward.

68
00:04:28,050 --> 00:04:31,810
Some of them, they require authorization or some headers.

69
00:04:32,400 --> 00:04:32,730
All right.

70
00:04:32,740 --> 00:04:36,330
So first off, we are going to pass our joke, your URL.

71
00:04:36,960 --> 00:04:42,900
So there is the joke, you URL, and then you put in the comma and then you open curly braces inside

72
00:04:42,900 --> 00:04:43,920
the curly braces.

73
00:04:43,920 --> 00:04:50,550
When you do headers, you can see that it gives you headers, a header object, an object literal or

74
00:04:50,550 --> 00:04:57,420
an array of two items item or an array of two item arrays to set requests headers.

75
00:04:57,690 --> 00:05:00,980
So whenever you are doing the request, you need to send the headers.

76
00:05:01,380 --> 00:05:06,210
So we are going to open another curly brace because is going to be a set.

77
00:05:06,450 --> 00:05:12,210
But this in this case, you are just going to say accept our application.

78
00:05:13,410 --> 00:05:18,340
Make sure to spell it correctly, CIG's where is this coming from?

79
00:05:18,690 --> 00:05:21,050
It's coming from right here.

80
00:05:21,360 --> 00:05:27,030
So when it says accept applications, Jason and you can see it says EDG, I'm going to zoom in.

81
00:05:27,600 --> 00:05:31,010
You have to provide it inside the headers, right?

82
00:05:31,260 --> 00:05:33,120
You have to provide it inside the headers.

83
00:05:33,120 --> 00:05:35,700
Then you are going to get this this results.

84
00:05:36,300 --> 00:05:45,580
So now that our fetch is complete, if I were to say Consols log response, let's see what we get.

85
00:05:45,630 --> 00:05:51,450
So this is going to be our this is our application where we are working.

86
00:05:51,850 --> 00:05:52,950
Let's bring it down.

87
00:05:52,950 --> 00:05:53,850
Let's go up.

88
00:05:55,330 --> 00:05:57,130
Bring it up, come here.

89
00:05:57,280 --> 00:06:04,000
So now if I click on this, you can see that we get a promise so that Fach was successful, but in here

90
00:06:04,000 --> 00:06:04,930
it suspending.

91
00:06:04,960 --> 00:06:06,340
Why does it say pending?

92
00:06:06,700 --> 00:06:10,900
The reason that it's suspending is we have not added the await key word.

93
00:06:11,980 --> 00:06:15,610
The key word does literally what it says.

94
00:06:15,610 --> 00:06:23,380
It is going to await our response until the response is completed and then it is going to storeyed within

95
00:06:23,380 --> 00:06:24,270
this variable.

96
00:06:25,000 --> 00:06:28,540
If the response is not completed, it is not going to stop it.

97
00:06:28,810 --> 00:06:33,040
That's why the async a wait keywords, they go hand in hand.

98
00:06:33,040 --> 00:06:34,330
They are a combo.

99
00:06:34,450 --> 00:06:39,910
You cannot use one without the other if and this way it only works when you have a sink.

100
00:06:40,870 --> 00:06:44,610
So now if I save this, we should get some sort of response.

101
00:06:44,890 --> 00:06:48,720
Can see we get the response, we get all this mumbo jumbo.

102
00:06:48,730 --> 00:06:57,070
But the important thing is that the status is 200 and you can see our headers right here, OK, that

103
00:06:57,070 --> 00:07:05,620
we have at it now what how can we turn this into something meaningful and we know how we can do that.

104
00:07:05,620 --> 00:07:13,120
We basically say const response HRIS pontes data.

105
00:07:13,120 --> 00:07:19,690
I'm going to call it response data and we are going to say response Dargis.

106
00:07:20,680 --> 00:07:22,930
So what does Jason is going to do?

107
00:07:22,930 --> 00:07:29,860
It is going to read it, convert it into Jason file and then pass it into something the JavaScript can

108
00:07:29,860 --> 00:07:30,610
understand.

109
00:07:31,150 --> 00:07:31,480
All right.

110
00:07:31,690 --> 00:07:35,740
But these three processes, they take some time.

111
00:07:35,740 --> 00:07:42,330
So we need to wait until these processes are complete and then store it within their response data.

112
00:07:43,000 --> 00:07:48,270
So response data now, we should get some meaningful response.

113
00:07:48,850 --> 00:07:50,980
Now you can see that we get this is a joke.

114
00:07:51,010 --> 00:07:54,340
Doctor, do you want to hear the good news or the bad news?

115
00:07:54,340 --> 00:07:56,020
Patient good news, please.

116
00:07:56,020 --> 00:07:59,080
Doctor, we are naming disease after.

117
00:08:00,430 --> 00:08:08,530
So most of the jokes I don't get I don't know, maybe it's my second English second language or something,

118
00:08:08,800 --> 00:08:11,500
but this one I actually got and it was funny.

119
00:08:11,860 --> 00:08:18,190
So what we're going to do is we are going to say response data joke and then we are going to get that

120
00:08:18,190 --> 00:08:18,640
joke.

121
00:08:19,120 --> 00:08:21,460
I'm just going to simulate that for you.

122
00:08:22,660 --> 00:08:23,560
So now click.

123
00:08:24,460 --> 00:08:25,280
This is the joke.

124
00:08:25,280 --> 00:08:29,590
Click It doesn't matter how many times you click it, you're going to get a joke, right?

125
00:08:29,740 --> 00:08:31,510
What do we want to do with this joke?

126
00:08:31,660 --> 00:08:32,710
Very simple.

127
00:08:33,039 --> 00:08:37,450
We want to grab ours and not joke joke para.

128
00:08:37,450 --> 00:08:46,390
And we are going to say that inner text, inner t text and basically set it to response date.

129
00:08:46,780 --> 00:08:47,410
Let's save it.

130
00:08:47,410 --> 00:08:48,910
So we should be done here.

131
00:08:50,050 --> 00:08:51,010
OK, Kleck.

132
00:08:52,590 --> 00:08:57,180
All right, where is our this?

133
00:08:58,080 --> 00:09:04,420
We don't see it, so joke parody that in our text, have we selected it correctly?

134
00:09:04,470 --> 00:09:06,330
Does it have a class of joke?

135
00:09:07,160 --> 00:09:09,420
Yes, it does have a class of joke.

136
00:09:10,370 --> 00:09:14,710
So query selector, let's see if there is a problem there.

137
00:09:15,440 --> 00:09:22,880
So the log joke para excuse me, and.

138
00:09:24,140 --> 00:09:24,920
There we go.

139
00:09:25,220 --> 00:09:26,040
There it is.

140
00:09:26,160 --> 00:09:30,080
If I click on it, it doesn't put of their.

141
00:09:31,190 --> 00:09:37,420
Of course, we are trying to put their response, we are not trying to put the jokes or we need to do

142
00:09:37,610 --> 00:09:40,580
response dated a joke, that was the thing.

143
00:09:41,460 --> 00:09:42,030
Here we go.

144
00:09:42,060 --> 00:09:42,650
Come on, buddy.

145
00:09:44,280 --> 00:09:45,090
Guma.

146
00:09:46,110 --> 00:09:47,190
Give me the joke.

147
00:09:48,460 --> 00:09:49,540
Is it not working?

148
00:09:49,950 --> 00:09:56,310
We're doing something incorrect, so we have response data that this was supposed to be a simple project

149
00:09:56,790 --> 00:09:58,870
in straight forward, for that matter.

150
00:09:59,080 --> 00:10:08,160
And so if I say consolidate log and say response data.

151
00:10:09,600 --> 00:10:11,260
Oh, there are three ends.

152
00:10:11,490 --> 00:10:13,830
Oh, my goodness, that was a mistake.

153
00:10:14,310 --> 00:10:14,840
There we go.

154
00:10:15,690 --> 00:10:19,440
How does a Darth Vader like his toast on the dark side?

155
00:10:20,580 --> 00:10:21,300
All right.

156
00:10:21,300 --> 00:10:23,820
So there we go with our joke.

157
00:10:23,820 --> 00:10:25,950
And I'm just going to test it a few times.

158
00:10:26,400 --> 00:10:29,720
So when you click on it, it is going to give you a joke, right?

159
00:10:30,960 --> 00:10:33,820
And each time, hopefully, it is going to be a random joke.

160
00:10:34,350 --> 00:10:38,100
So that's it for this lecture and for this chapter.

161
00:10:38,130 --> 00:10:39,660
See you guys in the next one.

