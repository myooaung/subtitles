WEBVTT
1
00:00:00.640 --> 00:00:06.730
Hi, everyone, in this lecture, we are going to create an event listener for the enter key and an

2
00:00:06.730 --> 00:00:09.340
event listener for the to do add button.

3
00:00:10.380 --> 00:00:17.610
All right, so first things first, let's go ahead and let's create the comment, adding a two dash

4
00:00:17.730 --> 00:00:18.300
do.

5
00:00:19.270 --> 00:00:30.310
To adding it to do to the last, adding it to do to the last, when when the enter key is pressed.

6
00:00:30.520 --> 00:00:33.910
All right, so we are going to say document.

7
00:00:33.910 --> 00:00:37.330
We are going to add this event, Lessner, on the document itself.

8
00:00:37.600 --> 00:00:44.080
So whenever the user is wherever inside the document and presses the turkey, that item should be added

9
00:00:44.080 --> 00:00:44.770
to the list.

10
00:00:45.220 --> 00:00:49.390
And we are going to add event listener and we are going to listen for a key up.

11
00:00:49.900 --> 00:00:54.140
So when we have a key press and when we have we have a key up, the key up.

12
00:00:54.160 --> 00:01:00.190
We have talked about it a lot and I'm not going to discuss it any more and I'm not going to discuss

13
00:01:00.190 --> 00:01:01.270
it once more.

14
00:01:01.550 --> 00:01:03.040
That's better verb.

15
00:01:03.500 --> 00:01:03.940
All right.

16
00:01:04.090 --> 00:01:07.960
And we are going to call a function call to do right.

17
00:01:09.070 --> 00:01:15.430
The reason that I'm not specifically specifying the function inside this event, listener, is because

18
00:01:15.640 --> 00:01:23.020
the same function is going to be implemented for our plus sign or plus button as well, or add to do

19
00:01:23.020 --> 00:01:23.780
button as well.

20
00:01:24.100 --> 00:01:32.350
So if I, if I just go ahead and define the function within this event listener, I would have to do

21
00:01:32.350 --> 00:01:33.100
it twice.

22
00:01:33.790 --> 00:01:41.410
But if I just go ahead and create the function standalone, I can call it to ICE, which is better,

23
00:01:41.650 --> 00:01:44.180
which is a better way and which is a best practice.

24
00:01:44.650 --> 00:01:49.000
So this is adding a to do to the list when the key is pressed.

25
00:01:50.240 --> 00:01:56.900
And I'm going to grab this and I'm going to say adding it to due to the last when the plus when the

26
00:01:57.320 --> 00:02:00.970
plus icon is clicked.

27
00:02:01.580 --> 00:02:02.020
All right.

28
00:02:02.240 --> 00:02:04.310
So we are going to grab that.

29
00:02:04.460 --> 00:02:10.419
It has we have we have already selected it inside our JavaScript.

30
00:02:10.430 --> 00:02:12.560
It is to do add button.

31
00:02:12.590 --> 00:02:16.970
This is the Circle Plus Circle and we're going to add event listener.

32
00:02:17.510 --> 00:02:18.950
And what is different this time?

33
00:02:18.950 --> 00:02:25.040
The event is going to be a simple click and we're going to run the same function because the functionality

34
00:02:25.040 --> 00:02:30.870
is going to be the same for both of the events, whether it is the enter or it is the click.

35
00:02:31.490 --> 00:02:34.120
So now it is time to create that function.

36
00:02:34.400 --> 00:02:47.090
So this play to do function, I'm going to say function display to do all right.

37
00:02:47.240 --> 00:02:49.280
And we are going to grab our event object.

38
00:02:49.520 --> 00:02:52.150
Why don't we just go ahead and write the full name?

39
00:02:52.280 --> 00:02:54.310
I mean, you should do it justice, right?

40
00:02:54.920 --> 00:03:00.120
So we are going to say a display to do and we are going to grab our event object now in here.

41
00:03:00.120 --> 00:03:03.810
What I'm going to do is I'm going to control the flow of document.

42
00:03:04.430 --> 00:03:10.970
Now, there might be like a lot of places that the user might be clicking, but we are only looking

43
00:03:10.970 --> 00:03:12.530
for two places.

44
00:03:13.430 --> 00:03:16.960
The first, we are looking for two events to be more accurate.

45
00:03:17.330 --> 00:03:20.240
The first event is whenever the key is pressed.

46
00:03:20.720 --> 00:03:25.130
The second event is whenever the ad to do button is clicked.

47
00:03:25.310 --> 00:03:28.820
We don't want to do anything else when the user does anything else.

48
00:03:29.120 --> 00:03:38.060
We just want to apply our code, control the flow of that code when the aforementioned aforementioned

49
00:03:38.690 --> 00:03:40.240
two events were fired.

50
00:03:40.250 --> 00:03:42.200
So we are going to say if.

51
00:03:43.260 --> 00:03:54.000
F idot key code, so the key code for the enter key is equal to 13 f idot key code event, that key

52
00:03:54.000 --> 00:03:55.860
code equals 13.

53
00:03:56.070 --> 00:04:04.200
So this is whenever the key, which is whenever this key up happens on the enter key, we don't care

54
00:04:04.200 --> 00:04:09.630
of the key up happens on the shift or control or function or any other key for that matter.

55
00:04:09.900 --> 00:04:18.240
We only care f if the event has happened on the enter key and the key has a code of 13, if that is

56
00:04:18.240 --> 00:04:26.490
the condition or so, this is a logical or operator which we have not used in our projects, but this

57
00:04:26.490 --> 00:04:27.920
is the first time that we use them.

58
00:04:27.930 --> 00:04:29.090
But we have studied it.

59
00:04:29.110 --> 00:04:30.210
We know how it works.

60
00:04:30.660 --> 00:04:35.190
So or event dot target.

61
00:04:35.310 --> 00:04:40.530
So even that target is going to give us is going to tell us where the user has clicked.

62
00:04:41.250 --> 00:04:45.630
We say that when the event the target has a class of.

63
00:04:46.810 --> 00:04:51.580
Whenever you want to access the class of an element inside JavaScript, you just say class list.

64
00:04:52.330 --> 00:05:00.310
If the class has a value which is equal to the following, I'm just going to copy it.

65
00:05:01.550 --> 00:05:09.140
And I'm going to stay right here, OK, then we want to run a certain code, so let's go over this condition

66
00:05:09.140 --> 00:05:09.740
one more time.

67
00:05:10.130 --> 00:05:20.300
If the event happens on a key code, which equals to 13, meaning that it is the entire key or the event

68
00:05:20.390 --> 00:05:30.330
target has a class of has as a value for the class, which equals to this we want to do something right.

69
00:05:30.710 --> 00:05:32.840
So this is the logical or operator.

70
00:05:32.840 --> 00:05:41.620
It it it has to it returns true with once with at least one side of this, this expression is true.

71
00:05:41.640 --> 00:05:42.650
It is going to return.

72
00:05:42.650 --> 00:05:43.000
True.

73
00:05:43.310 --> 00:05:48.170
And when it returns true, this statement is going to run the following code.

74
00:05:48.500 --> 00:05:50.380
So what is it that we want to do?

75
00:05:51.110 --> 00:06:03.590
The first thing that we need to do is we need to check checking whether the input field is not empty.

76
00:06:03.890 --> 00:06:11.060
So when it is not until we don't want to do anything, but when it is when it is empty, we don't want

77
00:06:11.060 --> 00:06:11.810
to do anything.

78
00:06:11.810 --> 00:06:16.700
But when it is not empty, it means that the user has written something there.

79
00:06:16.880 --> 00:06:17.920
We want to do something.

80
00:06:18.260 --> 00:06:20.990
So for that, I'm just going to control the flow one more time.

81
00:06:21.180 --> 00:06:24.160
We are going to say to do so f to do is true.

82
00:06:24.680 --> 00:06:26.270
Where does this to do come from?

83
00:06:27.030 --> 00:06:28.450
It comes from here.

84
00:06:28.640 --> 00:06:29.030
All right.

85
00:06:29.210 --> 00:06:31.610
When that to do is true, what do we want to do?

86
00:06:31.890 --> 00:06:37.490
And you might ask, OK, this to do has nothing in common with this function.

87
00:06:37.910 --> 00:06:38.190
Right.

88
00:06:38.390 --> 00:06:42.060
So this is a standalone function and this is another standalone function.

89
00:06:42.320 --> 00:06:44.350
There is no link between them.

90
00:06:44.540 --> 00:06:46.370
So this to do can come from there.

91
00:06:46.910 --> 00:06:53.520
So if to do is true, we are going to call our ad to do a function which we have created right here.

92
00:06:53.810 --> 00:06:55.280
Now, this is the beautiful part.

93
00:06:55.610 --> 00:07:01.700
We have created an ad to do function and we are going to call it as a callback function inside the display

94
00:07:01.700 --> 00:07:04.340
to do, which is going to run whenever.

95
00:07:05.450 --> 00:07:09.770
Either the turkey is pressed or the plus sign is correct, right.

96
00:07:09.950 --> 00:07:12.560
So what are the arguments that we're going to pass?

97
00:07:12.570 --> 00:07:19.070
The first one is going to be to do then we're going to pass I.D. for the complete.

98
00:07:19.070 --> 00:07:21.970
We are going to say false for the trash.

99
00:07:21.980 --> 00:07:23.480
We are going to say false as well.

100
00:07:23.480 --> 00:07:23.960
Why?

101
00:07:24.290 --> 00:07:30.500
Initially, when the user enters something we do not want to check it completed.

102
00:07:30.530 --> 00:07:37.370
If we check it completed, it means that before even writing that the user says, OK, I have not even

103
00:07:37.370 --> 00:07:37.970
written it.

104
00:07:37.970 --> 00:07:39.980
And you say I've completed it already.

105
00:07:40.370 --> 00:07:41.660
That is not going to be true.

106
00:07:41.940 --> 00:07:43.550
And the same thing goes for trash.

107
00:07:43.730 --> 00:07:47.440
The user is just in the is just in the process of writing it.

108
00:07:47.600 --> 00:07:50.300
So how could the user be completing it already?

109
00:07:50.480 --> 00:07:52.790
How the user has completed it already?

110
00:07:52.970 --> 00:07:59.240
Very difficult tenses are right, but that's why initially they are going to be set to false.

111
00:08:00.380 --> 00:08:03.680
So that function is called here.

112
00:08:03.830 --> 00:08:07.940
The next thing that I want to do here is whenever we are this.

113
00:08:07.940 --> 00:08:11.920
Whenever the user writes something here, where do we want to push it to?

114
00:08:12.200 --> 00:08:16.430
We want to push it to our to do container, which is this array.

115
00:08:16.700 --> 00:08:17.150
Right.

116
00:08:18.550 --> 00:08:25.310
And we know why, because we want to show their inside our local stories as well.

117
00:08:25.540 --> 00:08:30.270
So we are going to say to do container dot, we're going to use our push method.

118
00:08:30.920 --> 00:08:31.240
Right.

119
00:08:31.360 --> 00:08:33.070
And what is it that we want to push?

120
00:08:33.070 --> 00:08:35.429
It is simply going to be an object.

121
00:08:36.100 --> 00:08:39.309
So each of the items is going to be one object.

122
00:08:39.610 --> 00:08:42.490
The object is going to have the following properties.

123
00:08:42.820 --> 00:08:49.660
So the name property is going to have a value of to do the I.D. property is going to have a value of

124
00:08:49.660 --> 00:08:54.340
ID, that Dunn is going to have a value of false.

125
00:08:55.240 --> 00:09:00.160
Initially, these are all initial values and the trash.

126
00:09:01.670 --> 00:09:08.990
That's going to have a value of phos, so initially this is how it is going to be and so we are going

127
00:09:08.990 --> 00:09:15.700
to call our to do button and whatever is the result, we are going to push it to this to do container.

128
00:09:16.250 --> 00:09:23.480
And each time we do that, we grab our IDE and we increment it by one.

129
00:09:23.930 --> 00:09:24.300
Right.

130
00:09:25.070 --> 00:09:28.660
So I think we should be good to go.

131
00:09:28.670 --> 00:09:29.100
Let's go.

132
00:09:29.120 --> 00:09:30.800
Hey, let's check out our changes.

133
00:09:31.010 --> 00:09:36.370
So I'm just going to say dog walking, let's hit enter.

134
00:09:37.040 --> 00:09:37.990
It doesn't work.

135
00:09:38.540 --> 00:09:39.830
Let's let's click on this.

136
00:09:39.830 --> 00:09:41.550
Plus sign doesn't work.

137
00:09:42.290 --> 00:09:46.220
So now let's go ahead and let's see what is wrong here.

138
00:09:49.210 --> 00:09:55.300
All right, so let's go let's open up our console, so.

139
00:09:57.010 --> 00:10:05.380
Issue detected and let's do this, let's say one, two, three, and it says uncut reference error to

140
00:10:05.380 --> 00:10:10.510
do is not defined at our baseline 54.

141
00:10:11.570 --> 00:10:16.520
So this is line 54 to do is not defined oh, we should define this to do.

142
00:10:17.060 --> 00:10:17.680
All right.

143
00:10:17.690 --> 00:10:26.120
So inside this if statement, what are we going to do in here is I'm going to create a constant because

144
00:10:26.390 --> 00:10:30.800
whatever the to do as now we know the to do right.

145
00:10:30.800 --> 00:10:35.600
The to do comes from this from this element, from this dynamic element.

146
00:10:36.290 --> 00:10:42.580
But if we take a look at it, we have not actually specified where the to do grabs its value.

147
00:10:42.770 --> 00:10:44.750
Where are the content for the to do comes.

148
00:10:44.960 --> 00:10:47.180
So in here it's a simple parameter.

149
00:10:47.330 --> 00:10:53.240
We have passed the parameter here and we have called that parameter with an argument where the to do

150
00:10:53.240 --> 00:10:56.110
define the to do is not actually defined anywhere.

151
00:10:56.360 --> 00:11:03.530
So we're going to say const to do, we are going to set it now before even setting it.

152
00:11:03.530 --> 00:11:11.690
I'm just going to go ahead and say cancel that log and we're going to grab our input now because the

153
00:11:12.920 --> 00:11:17.640
the input is where the text for the or value for the to do comes from.

154
00:11:17.960 --> 00:11:22.120
So let's say let's come here, I'm just going to write one, two, three.

155
00:11:22.490 --> 00:11:23.530
This is our input.

156
00:11:23.810 --> 00:11:25.180
So this is the input.

157
00:11:25.190 --> 00:11:25.510
Right.

158
00:11:25.520 --> 00:11:27.170
So what do I want to grab?

159
00:11:27.170 --> 00:11:30.530
I want to grab the value from this input.

160
00:11:30.670 --> 00:11:31.010
Right.

161
00:11:31.250 --> 00:11:35.540
So if I say input, not value, what is the input?

162
00:11:35.540 --> 00:11:39.570
That value is going to give us the text content of this input.

163
00:11:39.920 --> 00:11:46.610
So if I write walking and hit enter, we are going to see that it says walking.

164
00:11:46.790 --> 00:11:53.690
It is going to give us exactly the text that the user has typed in here, and that's exactly what we

165
00:11:53.690 --> 00:11:54.010
want.

166
00:11:54.020 --> 00:12:01.070
So I'm going to cut it from here and I'm going to create a constant and I'm going to set it to to do

167
00:12:01.250 --> 00:12:06.710
and we are going to say that the constant have to do has a value of input that value.

168
00:12:06.710 --> 00:12:07.880
And we know what that is.

169
00:12:08.300 --> 00:12:10.280
So that's right.

170
00:12:11.140 --> 00:12:13.260
Mm hmm.

171
00:12:13.670 --> 00:12:19.400
Watching Sunset, let's click on this plus site.

172
00:12:19.610 --> 00:12:21.470
We can see that this has been added.

173
00:12:21.920 --> 00:12:31.190
But if I just change it to sunrise and hit enter, we can see it watching sunset and watching sunrise.

174
00:12:31.490 --> 00:12:33.590
They have been added successfully.

175
00:12:33.950 --> 00:12:39.920
And the good thing is initially they are not checked, completed or they are not trashed.

176
00:12:40.460 --> 00:12:48.050
But there is one tiny problem here that whenever the user hits enter or plus sign, this input should

177
00:12:48.050 --> 00:12:49.520
clear automatically.

178
00:12:49.700 --> 00:12:51.380
So we should not be able to see that.

179
00:12:51.390 --> 00:12:55.390
But if we just go ahead and click, we can see multiple sunrises.

180
00:12:55.640 --> 00:12:56.930
So at the end.

181
00:12:58.140 --> 00:13:04.050
At the end, what I'm going to do is inside our statement, of course, this is inside the F statement,

182
00:13:04.560 --> 00:13:06.750
we are going to grab our input.

183
00:13:06.900 --> 00:13:14.970
That value, after everything has run, we are going to set it to a set of empty string, to an empty

184
00:13:14.970 --> 00:13:15.430
string.

185
00:13:15.480 --> 00:13:17.910
Why do I keep saying set of empty strings?

186
00:13:18.600 --> 00:13:22.080
So let's add a walking once more.

187
00:13:22.230 --> 00:13:25.380
We can see that it has added and it has removed it from here.

188
00:13:25.680 --> 00:13:26.880
That's it for this lecture.

189
00:13:26.910 --> 00:13:28.550
See you guys in the next one.

