WEBVTT
1
00:00:01.540 --> 00:00:02.540
Hi, everyone.

2
00:00:02.710 --> 00:00:07.689
In this lecture, we are going to implement the forum validation functionality.

3
00:00:08.470 --> 00:00:09.120
All right.

4
00:00:09.460 --> 00:00:14.030
So what are we to do as before going into the JS file?

5
00:00:14.170 --> 00:00:16.810
I need to tell you what it is that we are going to grab.

6
00:00:16.870 --> 00:00:17.250
All right.

7
00:00:17.500 --> 00:00:18.700
So first things first.

8
00:00:18.700 --> 00:00:21.100
We are going to select only two things.

9
00:00:21.400 --> 00:00:27.140
We're going to select the input which has a type of text and the input which has a type of password.

10
00:00:27.400 --> 00:00:33.010
So what I'm going to do here is I'm going to say const we have done this like a lot, so I'm not going

11
00:00:33.010 --> 00:00:37.060
to really hang on to them a lot, talk about them a lot.

12
00:00:37.060 --> 00:00:44.650
So I'm going to say document query selector and we are going to selected by the I.D., which for the

13
00:00:44.650 --> 00:00:49.800
user name is username and for the password is going to be password.

14
00:00:50.350 --> 00:00:52.510
So it's going to be password.

15
00:00:52.900 --> 00:00:54.910
Now this is going to be our.

16
00:00:56.550 --> 00:01:00.840
OK, so this is the user name input and the password input.

17
00:01:01.050 --> 00:01:05.010
Next thing is, I want to create my regular expression as well.

18
00:01:05.560 --> 00:01:13.880
And this regular I'm just going to call it like a password validator.

19
00:01:14.070 --> 00:01:19.580
I'm going to call a password or forum validator for them.

20
00:01:20.220 --> 00:01:23.430
Just call it form input validator.

21
00:01:24.240 --> 00:01:31.500
Now, this regular expression resembles a lot the I think it was the second case that we talked about

22
00:01:31.500 --> 00:01:35.460
in our regular expressions chapter.

23
00:01:35.460 --> 00:01:38.820
But there is there are actually two differences here.

24
00:01:39.000 --> 00:01:41.820
I just wanted to change it up again a little bit.

25
00:01:41.820 --> 00:01:42.210
All right.

26
00:01:42.690 --> 00:01:48.900
And I don't want to create, like a super complicated regex to confuse you and to confuse myself as

27
00:01:48.900 --> 00:01:52.600
well, because these are these tend to get really, really difficult.

28
00:01:52.920 --> 00:01:56.100
So what we are going to do is first we are going to insert a carrot sound.

29
00:01:56.100 --> 00:02:03.240
The carrot sound says that whatever comes comes after it should be at the start of that Inforum input.

30
00:02:03.750 --> 00:02:07.410
And then what I'm going to do is I'm going to create a positive lookahead.

31
00:02:08.800 --> 00:02:10.490
And what it is that we are looking for.

32
00:02:10.509 --> 00:02:11.390
So what do we want?

33
00:02:11.410 --> 00:02:16.180
We want to grab all nine digit, not all nine digit characters.

34
00:02:16.390 --> 00:02:23.920
So what the user has to insert first is going to be nine digit characters, hence the capital.

35
00:02:24.460 --> 00:02:26.320
And how many occurrences of that one?

36
00:02:26.320 --> 00:02:28.650
We want at least eight occurrences of that.

37
00:02:28.990 --> 00:02:35.950
So we want at least eight characters, which are specifically nine digits.

38
00:02:36.530 --> 00:02:36.800
Right.

39
00:02:37.120 --> 00:02:39.700
So this lookahead has done this.

40
00:02:40.990 --> 00:02:43.420
Now, these are cultural groups.

41
00:02:43.420 --> 00:02:46.570
The first cultural group is done now into the second one.

42
00:02:46.820 --> 00:02:49.270
They're going to create another positive look ahead.

43
00:02:49.630 --> 00:02:57.640
And in this case, what do we want to do is after all, the non digits are done after on nine digits

44
00:02:57.640 --> 00:02:59.550
are done, what do we want to do?

45
00:02:59.770 --> 00:03:03.390
We want to grab zero or more occurrences.

46
00:03:03.640 --> 00:03:07.000
So I'm just going to put in the star of the digits.

47
00:03:07.010 --> 00:03:07.350
All right.

48
00:03:07.510 --> 00:03:09.870
And those should be at least two.

49
00:03:10.390 --> 00:03:12.550
So we need at least two digits.

50
00:03:12.790 --> 00:03:14.680
So what are the requirements?

51
00:03:15.490 --> 00:03:23.110
The requirements for the password are we want the first eight characters to be non digits.

52
00:03:23.410 --> 00:03:28.580
And when those eight characters are done, we want at least to two digits.

53
00:03:28.900 --> 00:03:30.670
So for this to work.

54
00:03:31.030 --> 00:03:31.360
Right.

55
00:03:31.660 --> 00:03:33.450
And that's it.

56
00:03:33.460 --> 00:03:37.800
That's our form input validator, which is actually the regex.

57
00:03:38.110 --> 00:03:44.350
So what I'm going to do is now let's grab our user input and I'm going to say our development center.

58
00:03:44.350 --> 00:03:49.930
And because this is a form input, we are just going to listen for an input.

59
00:03:50.860 --> 00:03:56.770
This event is going to fire whenever the user types, any character, anything is typed.

60
00:03:57.100 --> 00:04:03.280
Each time the key is pressed and something is typed, this event is going to fire and we are going to

61
00:04:03.280 --> 00:04:08.290
call validate and I'm going to do the same thing for our password input.

62
00:04:09.420 --> 00:04:14.790
Because I don't want to create two different functions, I just want to do it in one function, so this

63
00:04:14.790 --> 00:04:17.490
function is going to be very, very, very simple.

64
00:04:17.519 --> 00:04:19.140
So let's create that function.

65
00:04:19.500 --> 00:04:21.990
Let's call it validate it.

66
00:04:22.000 --> 00:04:23.710
Let's grab the event object.

67
00:04:24.000 --> 00:04:29.030
So first off, what what we need to do is we need to find out where it is that we are right.

68
00:04:29.040 --> 00:04:32.730
Where where is it that the user is typing?

69
00:04:32.740 --> 00:04:34.260
So let's grab the target.

70
00:04:34.890 --> 00:04:40.200
So in this case, let's make this bigger and let's make this smaller.

71
00:04:40.210 --> 00:04:42.930
We don't really like we don't really need big screens.

72
00:04:43.170 --> 00:04:46.130
I'm going to zoom out a bit and I'm going to say inspect.

73
00:04:46.710 --> 00:04:48.180
So it's there.

74
00:04:48.190 --> 00:04:49.710
Let's put it on the bottom.

75
00:04:49.710 --> 00:04:52.520
Let's bring it up until here.

76
00:04:52.530 --> 00:04:53.550
Let's go to console.

77
00:04:55.160 --> 00:05:01.580
So we do have this message that I need to delete, what I'm going to do is I'm just going to add an

78
00:05:01.580 --> 00:05:05.490
autocomplete there and that message is going to go away.

79
00:05:05.750 --> 00:05:07.500
So why do we have here?

80
00:05:07.520 --> 00:05:11.290
So if I click in here and if I type A, what do we get?

81
00:05:11.870 --> 00:05:14.000
So we get an event fire.

82
00:05:14.000 --> 00:05:18.800
So the event is going to fire whenever the user types something, the data is a.

83
00:05:18.980 --> 00:05:21.680
So how do we know where the user has stout?

84
00:05:21.680 --> 00:05:28.790
First off, we need to grab where the user has typed because we have different since we have different

85
00:05:28.790 --> 00:05:35.090
requirements for each of the inputs for the user name, we don't have any projects, but for the password

86
00:05:35.270 --> 00:05:38.480
we have a form input validator that we want to test it.

87
00:05:39.330 --> 00:05:44.670
So that that's why we need to find out, so usually we go into Target, you could go into path, but

88
00:05:44.670 --> 00:05:45.870
target is easier.

89
00:05:46.440 --> 00:05:53.360
So if we go to Target now, this username has an I.D. of username.

90
00:05:54.120 --> 00:06:02.250
So let's go ahead and let's find that that ID and class and Pittsfield.

91
00:06:02.280 --> 00:06:05.430
I'm just going to remove this name because I don't need it.

92
00:06:06.180 --> 00:06:08.490
That's extra information right here.

93
00:06:09.390 --> 00:06:15.110
Let's remove it and I'm just going to type in, for example, queue we we get our event.

94
00:06:15.120 --> 00:06:21.390
So let's come here, let's go into Target so we know that this username has an idea of user name.

95
00:06:21.390 --> 00:06:21.630
Right.

96
00:06:21.630 --> 00:06:23.630
And the password has an idea of password.

97
00:06:24.120 --> 00:06:29.470
So if I come down here, let's go to I you can see that inside the eye we get the username.

98
00:06:29.490 --> 00:06:36.960
So if I were to say a target dot IED and for example, if I do.

99
00:06:36.960 --> 00:06:42.030
Q We are going to get username and if I do, for example, A, we are going to get password.

100
00:06:42.050 --> 00:06:48.200
So now we have successfully mapped where the user is going to type and the rest is very simple.

101
00:06:48.210 --> 00:06:57.840
We are going to implement an IF statement, so we are going to say the target that ID equals password.

102
00:06:58.870 --> 00:07:03.470
First off, let's do the user name, that's easier if it is user name.

103
00:07:03.490 --> 00:07:04.490
What do we want to do?

104
00:07:05.530 --> 00:07:12.770
We want to check for the length when the length is either when the length is greater than three.

105
00:07:13.150 --> 00:07:15.400
We want to add this class to it.

106
00:07:15.430 --> 00:07:18.810
This this class, this, this color of skin.

107
00:07:19.000 --> 00:07:25.850
Otherwise, if it is three or less than that, we want to add this class which says color of tomato.

108
00:07:26.260 --> 00:07:27.350
So let's implement that.

109
00:07:27.580 --> 00:07:31.060
So we are going to do another if statement in here.

110
00:07:31.090 --> 00:07:32.950
This is going to be an effort statement.

111
00:07:33.250 --> 00:07:43.810
We are going to say if the target if either target dot value, dot length is greater than three, do

112
00:07:43.810 --> 00:07:46.390
what we want to grab either target.

113
00:07:46.420 --> 00:07:49.320
I could have probably saved it inside a variable.

114
00:07:49.570 --> 00:07:52.780
We could save it inside a variable, but I'm not going to do it.

115
00:07:52.790 --> 00:07:55.930
So we know that the target is where we have clicked.

116
00:07:56.380 --> 00:08:03.940
If the target is has greater than three characters, we want to grab the class list because we want

117
00:08:03.940 --> 00:08:05.190
to add a class to it.

118
00:08:05.620 --> 00:08:07.390
What does that class validate?

119
00:08:09.230 --> 00:08:11.870
Sorry, sorry, valid, valid.

120
00:08:12.020 --> 00:08:19.220
Let's check it out, it's valid and invalid, so if it is greater than three, we want to add this class

121
00:08:19.580 --> 00:08:25.910
and in case it has a class of invalid, we want to remove it.

122
00:08:25.920 --> 00:08:29.630
So class list, dot remove.

123
00:08:30.930 --> 00:08:31.770
Remove.

124
00:08:32.860 --> 00:08:41.590
Invalid, so if it has that clause, if it has a class of if it is more than three characters at this

125
00:08:41.590 --> 00:08:46.360
class and remove this class, basically we are going to reverse this in here.

126
00:08:46.570 --> 00:08:48.520
And the says so.

127
00:08:48.520 --> 00:08:54.670
The House says if it is equal to three or less than that in any other scenario, what is that?

128
00:08:54.670 --> 00:08:59.710
Any other scenario when the length is three or less than that?

129
00:08:59.740 --> 00:09:01.830
We want to basically reverse this.

130
00:09:02.050 --> 00:09:06.310
So we want to add the invalid class and remove the valid clause.

131
00:09:07.330 --> 00:09:07.930
Check it out.

132
00:09:07.960 --> 00:09:11.080
So if I type A, that's one character.

133
00:09:11.080 --> 00:09:13.480
W, that's two characters.

134
00:09:14.440 --> 00:09:19.420
Yes, that's three characters, and if I say, yes, we are going to get we are going to see that it

135
00:09:19.420 --> 00:09:20.010
is green.

136
00:09:20.680 --> 00:09:21.160
Awesome.

137
00:09:21.760 --> 00:09:22.270
All right.

138
00:09:22.270 --> 00:09:23.650
So this one is done.

139
00:09:24.550 --> 00:09:27.630
The next one, which is the password is really simple.

140
00:09:27.640 --> 00:09:35.650
So I'm just going to come down here and I'm going to say F Iida target dot IED one, a target.

141
00:09:35.650 --> 00:09:40.060
That IED equals password.

142
00:09:41.860 --> 00:09:48.160
What do we want to do now when one it was user name, we had a different set, but when it is password,

143
00:09:48.160 --> 00:09:49.560
we want to do a different thing.

144
00:09:49.840 --> 00:09:55.860
We want to test that input's value against our regular expression.

145
00:09:56.500 --> 00:10:03.820
So what I'm going to do is we are going to Grabau form input validator and we are going to say test.

146
00:10:03.820 --> 00:10:05.700
What do we want to test it against?

147
00:10:06.170 --> 00:10:09.880
We want to test it against either target value.

148
00:10:10.930 --> 00:10:16.330
So whatever value that the password has, which is typed inside the password, we are going to test

149
00:10:16.330 --> 00:10:20.440
it against that, against this form and put validator.

150
00:10:20.440 --> 00:10:27.220
And what do we want to do then if if it is tested positive?

151
00:10:27.630 --> 00:10:36.460
OK, if the test is positive, it means that the result is the the input has tested true.

152
00:10:36.490 --> 00:10:38.410
It actually returns a true or false.

153
00:10:38.710 --> 00:10:43.650
So if it is if it if it returns true, what do we want to do?

154
00:10:43.810 --> 00:10:49.930
We basically want to add this class, we want to add the valid class and we want to remove the invalid

155
00:10:49.930 --> 00:10:51.280
class if it has that.

156
00:10:52.000 --> 00:10:59.860
And in case it doesn't pass the test, in case the result is a false boolean expression, what do we

157
00:10:59.860 --> 00:11:00.300
want to do?

158
00:11:00.310 --> 00:11:01.450
We want to do this.

159
00:11:02.050 --> 00:11:08.410
We want to remove the valid class and we want to add and add the invalid class.

160
00:11:08.410 --> 00:11:09.280
So let's save it.

161
00:11:10.150 --> 00:11:12.070
So if I come, come there.

162
00:11:12.070 --> 00:11:21.790
And if I type it there and you know what is either target that value, I want to do something else in

163
00:11:21.790 --> 00:11:23.920
here as well, because this is password.

164
00:11:23.920 --> 00:11:27.100
It doesn't matter what I type in here, you cannot see it.

165
00:11:27.280 --> 00:11:30.690
I want to grab that input value as well.

166
00:11:30.940 --> 00:11:36.970
So what I'm going to do is we are going to grab this and I'm going I'm just going to cancel log.

167
00:11:36.980 --> 00:11:39.100
And of course, we are going to remove it later.

168
00:11:39.400 --> 00:11:42.560
I just want to show you if that test actually works.

169
00:11:43.060 --> 00:11:54.250
So now if I add for example, cu w I don't know, like let's say let's say some here and now let's check

170
00:11:54.250 --> 00:11:54.480
it out.

171
00:11:54.670 --> 00:11:57.210
So we need to provide eight non digits.

172
00:11:57.220 --> 00:12:00.130
So this is how do I write this.

173
00:12:01.430 --> 00:12:09.170
I'm going to right pass, not pass word, I'm going to write Java, you can see it's Java and then I'm

174
00:12:09.170 --> 00:12:10.370
going to say script.

175
00:12:11.720 --> 00:12:18.410
So the last thing you can see that this event is fired each time a letter is input has been input.

176
00:12:18.740 --> 00:12:20.030
And finally, what do we get?

177
00:12:20.030 --> 00:12:20.930
We get JavaScript.

178
00:12:20.930 --> 00:12:26.490
And clearly JavaScript has more than eight, nine digit characters inside of it.

179
00:12:26.990 --> 00:12:30.010
So now if I type one, we can see JavaScript one.

180
00:12:30.050 --> 00:12:30.970
I'm going to zoom in.

181
00:12:30.980 --> 00:12:33.350
This is zoomed out, really out.

182
00:12:33.920 --> 00:12:35.170
So I'm going to type one.

183
00:12:35.180 --> 00:12:37.940
And what I type to it is going to turn green.

184
00:12:38.360 --> 00:12:39.040
Why is that?

185
00:12:39.050 --> 00:12:42.240
Because at first we have eight, nine digit characters.

186
00:12:42.710 --> 00:12:47.230
This is at least we need to get eight because this is a quantity identifier.

187
00:12:47.930 --> 00:12:52.600
And it says that we need to get more than either this or more than that.

188
00:12:53.150 --> 00:12:58.830
So and so we get like four here, five, six, seven, eight, nine, 10.

189
00:12:59.030 --> 00:13:00.440
So more than eight, of course.

190
00:13:00.590 --> 00:13:03.650
And then it has to be followed by two digits.

191
00:13:03.800 --> 00:13:10.160
It doesn't matter if you add, for example, Seer says it is going to be green XHTML, it is going to

192
00:13:10.160 --> 00:13:13.400
be green and it's going to be 999 green.

193
00:13:13.400 --> 00:13:14.210
It doesn't matter.

194
00:13:14.450 --> 00:13:16.100
That is the initial scenario.

195
00:13:16.100 --> 00:13:20.000
If the user wants to add more than the user is free to do that.

196
00:13:20.810 --> 00:13:21.100
Right.

197
00:13:21.260 --> 00:13:24.260
So with this, our application comes to an end.

198
00:13:24.270 --> 00:13:26.450
So I'm just going to come in this one out.

199
00:13:26.990 --> 00:13:30.830
And now if I say awesome, it works.

200
00:13:31.790 --> 00:13:41.260
And if I say a w e e one, two, it doesn't work because Assam has seven characters and I'm going to

201
00:13:41.270 --> 00:13:46.600
say a WTS OCR awesomer one, two, and it works.

202
00:13:47.030 --> 00:13:50.630
So that's it for this lecture and for this chapter.

203
00:13:50.660 --> 00:13:52.180
See you guys in the next one.

