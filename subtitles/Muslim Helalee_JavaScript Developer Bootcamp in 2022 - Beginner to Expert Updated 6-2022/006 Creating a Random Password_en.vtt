WEBVTT
1
00:00:02.260 --> 00:00:03.170
Hi, everyone.

2
00:00:03.190 --> 00:00:07.660
In this lecture, we are going to iterate over our character codes.

3
00:00:09.410 --> 00:00:15.890
All right, so we have successfully created the programme logic that we want now whenever we get our

4
00:00:15.890 --> 00:00:25.160
character codes, what we want is we want to store them inside an array and then we can grab the items

5
00:00:25.160 --> 00:00:32.910
within those within that array and we can apply a string method to it to convert them into a string.

6
00:00:32.930 --> 00:00:37.940
So let's call our new array is going to be password characters.

7
00:00:38.840 --> 00:00:41.830
And originally we are going to set it to an empty array.

8
00:00:42.380 --> 00:00:46.280
And now let's go ahead and let's loop over our items.

9
00:00:46.460 --> 00:00:48.260
So let's create the little variable.

10
00:00:48.290 --> 00:00:50.180
This time I'm going to call it H.

11
00:00:50.630 --> 00:00:59.480
It is going to start from zero and H is going to go all the way to less than our character amount that

12
00:00:59.480 --> 00:01:01.170
we have created right here.

13
00:01:01.670 --> 00:01:06.830
So this character amount, this this is the character element that I'm talking about.

14
00:01:06.950 --> 00:01:07.340
Right.

15
00:01:07.880 --> 00:01:14.170
It grabs the number of characters value, which is this number value that we have here.

16
00:01:14.180 --> 00:01:15.170
This number value.

17
00:01:15.590 --> 00:01:17.390
It is going to grab this.

18
00:01:17.690 --> 00:01:18.160
All right.

19
00:01:19.340 --> 00:01:25.160
And it is going to go all the way to the amount of that to less than the amount of that, to less than

20
00:01:25.160 --> 00:01:25.460
that.

21
00:01:25.640 --> 00:01:30.590
And each time we are going to grab our H and we are going to incremented by one.

22
00:01:30.830 --> 00:01:31.230
Right.

23
00:01:31.940 --> 00:01:39.240
So in here, what I want to do is whenever this loop, this very this loop loops over this character

24
00:01:39.260 --> 00:01:42.730
amount, I want to store that inside another variable.

25
00:01:43.280 --> 00:01:49.240
So I'm going to go ahead and I'm going to create a variable called character code.

26
00:01:49.400 --> 00:01:54.730
Do not confuse this character code with this char code that we have created here.

27
00:01:55.880 --> 00:02:00.560
This Charcot's, it grabs all the codes from that reference that we saw.

28
00:02:01.100 --> 00:02:07.070
And if they are collect, it is just going to concatenate it to the lowercase character code that we

29
00:02:07.070 --> 00:02:07.420
have.

30
00:02:08.000 --> 00:02:12.730
But this is just responsible for holding a random number.

31
00:02:13.280 --> 00:02:14.990
Where does that random number comes?

32
00:02:14.990 --> 00:02:18.800
It comes from our character codes that we have created here.

33
00:02:19.010 --> 00:02:23.960
Remember, this character code is still going to return to us a number.

34
00:02:24.080 --> 00:02:27.440
It is not going to give us a letter that we want.

35
00:02:27.470 --> 00:02:29.670
OK, it's not going to give us an alphabet.

36
00:02:30.260 --> 00:02:36.080
Now, the way that we can grab an alphabet is actually another method that we are going to cover in

37
00:02:36.080 --> 00:02:36.990
this video as well.

38
00:02:38.390 --> 00:02:44.630
So I'm just going to go ahead and open up brackets and whatever I write inside here is going to is going

39
00:02:44.630 --> 00:02:46.910
to replace this RELU variable.

40
00:02:46.920 --> 00:02:52.720
So the little variables value is going to be is going to come here and it is going to be positive.

41
00:02:53.090 --> 00:02:59.660
So to create a random number of first off, we call in a math that Flora in math, we would grab our

42
00:02:59.660 --> 00:03:07.940
math object and we call the floor method, which returns the greatest integer less than or equal to

43
00:03:07.940 --> 00:03:14.450
its numeric argument, because the math, that number, it is going to return values from zero to one,

44
00:03:14.450 --> 00:03:18.010
which are decimal, but we want like whole integers.

45
00:03:18.260 --> 00:03:20.930
So that's why we are going to use math that floor.

46
00:03:21.260 --> 00:03:26.250
And inside there, we are going to call in our math object once more and we are going to say random.

47
00:03:27.170 --> 00:03:27.670
All right.

48
00:03:27.830 --> 00:03:36.500
So we're so because this random is going to give us like from zero to one and this floor is just going

49
00:03:36.500 --> 00:03:36.920
to go ahead.

50
00:03:36.920 --> 00:03:37.670
And Floret.

51
00:03:37.680 --> 00:03:38.060
Right.

52
00:03:38.510 --> 00:03:43.610
What is the number of what is the number that we want it to be a random by that.

53
00:03:43.820 --> 00:03:44.140
Right.

54
00:03:44.960 --> 00:03:50.430
We usually pass in here a number and that number is going to be our character codes, the length.

55
00:03:50.960 --> 00:03:59.060
So as long or as many characters that we have in our character codes that many times this is going to

56
00:03:59.060 --> 00:04:00.430
give us a random number.

57
00:04:00.860 --> 00:04:05.890
So let's let's the stick and let's talk about an example.

58
00:04:05.900 --> 00:04:12.470
For example, if you have numbers from one to five, it is going to give you five different random numbers.

59
00:04:12.650 --> 00:04:18.320
So, for example, it's going to be five is going to be three is going to be four, is going to be two

60
00:04:18.320 --> 00:04:19.300
is going to be one.

61
00:04:19.850 --> 00:04:24.020
So five different variations of that random number that we want.

62
00:04:24.650 --> 00:04:30.350
And as many numbers are inside, this character codes that length.

63
00:04:30.720 --> 00:04:32.570
That's why it is going to give us the number.

64
00:04:32.690 --> 00:04:38.080
It is going to random, make our password random by those many times.

65
00:04:38.100 --> 00:04:38.440
All right.

66
00:04:39.620 --> 00:04:45.710
So at this point, we have successfully grabbed the random number that we want now.

67
00:04:45.710 --> 00:04:52.430
And that random number is, of course, always going to be associated with one with one of these letters,

68
00:04:52.430 --> 00:04:57.010
either uppercase, lowercase symbol or number.

69
00:04:57.200 --> 00:04:57.560
Right.

70
00:04:57.590 --> 00:04:59.440
So it is going to be associated with that.

71
00:04:59.720 --> 00:05:02.990
That's why we have used our character codes are Charcot's.

72
00:05:03.260 --> 00:05:08.780
The Charcot's value is going to come from here, which is initially lowercase numbers, but.

73
00:05:08.910 --> 00:05:15.540
If numbers are also click, the Charcot's is going to concatenated numbers as well, and the same goes

74
00:05:15.540 --> 00:05:18.270
for symbols and the same goes for uppercase.

75
00:05:19.730 --> 00:05:25.820
Now that we have successfully stored this these numbers inside this character code, let's put this

76
00:05:25.820 --> 00:05:27.170
character code to good use.

77
00:05:27.320 --> 00:05:30.890
So we are going to grab our material that we have just created here.

78
00:05:31.070 --> 00:05:34.580
We are going to say password characters, Dot Poche.

79
00:05:34.940 --> 00:05:38.660
We are going to add items to an array through the push method.

80
00:05:38.960 --> 00:05:48.080
Now, this is the method that is going to give us a string that from Char Code is going to give us actual

81
00:05:48.080 --> 00:05:51.900
letters from character codes.

82
00:05:52.130 --> 00:05:59.900
So up until this point, what we had was we had only numbers which are of course associated with letters

83
00:05:59.930 --> 00:06:00.890
like these numbers.

84
00:06:01.160 --> 00:06:06.180
Now, how can we convert those letters so those numbers into actual letters?

85
00:06:06.440 --> 00:06:10.610
And that is where this from char code method method it comes in.

86
00:06:11.030 --> 00:06:14.080
And where where does it take its reference from?

87
00:06:14.090 --> 00:06:22.130
It is going to take its reference from our character codes, character code, character codes.

88
00:06:22.770 --> 00:06:26.840
You know, I'm just going to miscall a character character codes.

89
00:06:27.440 --> 00:06:29.630
So it is going to grab it from right here.

90
00:06:29.720 --> 00:06:30.440
Let's save it.

91
00:06:31.630 --> 00:06:36.650
So now that we have successfully iterated over that, first off, let's go ahead on this concept.

92
00:06:36.660 --> 00:06:40.840
A lock, not time out, time lock log.

93
00:06:41.120 --> 00:06:42.950
Let's see what it is going to give us.

94
00:06:42.960 --> 00:06:45.310
So let's grab our array.

95
00:06:45.350 --> 00:06:46.070
Let's save it.

96
00:06:46.530 --> 00:06:48.680
Let's come here, here and now.

97
00:06:48.680 --> 00:06:49.640
Let's click on this.

98
00:06:49.880 --> 00:06:57.410
We get a Y so we get an an uppercase letter, OK, even though it has not been clicked.

99
00:06:57.420 --> 00:06:59.210
So this should not do this.

100
00:06:59.630 --> 00:07:00.800
Let's keep clicking.

101
00:07:01.830 --> 00:07:10.140
Oh, we can see that we get all of them, so we get a symbol, we get an upper case, we get do we have

102
00:07:10.140 --> 00:07:10.640
a number?

103
00:07:10.650 --> 00:07:11.940
This is oh yeah.

104
00:07:11.940 --> 00:07:12.330
That is.

105
00:07:12.330 --> 00:07:16.110
Oh, so this is a no, this is again a symbol.

106
00:07:16.110 --> 00:07:19.470
So we get all of them because iterates over all of them.

107
00:07:19.650 --> 00:07:23.220
And this if statement has not come into effect yet.

108
00:07:24.540 --> 00:07:32.730
So what we are going to do is we are going to pass these numbers inside this this MTA right now, this

109
00:07:32.730 --> 00:07:33.890
MTA has numbers.

110
00:07:33.900 --> 00:07:34.920
Now let's go ahead.

111
00:07:35.460 --> 00:07:40.320
And these numbers, they are passed inside this array, but we want to convert them.

112
00:07:40.650 --> 00:07:42.450
As you can see here, this is an array.

113
00:07:42.720 --> 00:07:44.790
We do not want to show the user an array.

114
00:07:44.790 --> 00:07:48.450
The arrays for developers, the users should see a string.

115
00:07:48.630 --> 00:07:52.050
So let's convert the array items into a string.

116
00:07:52.200 --> 00:07:55.830
We are going to say a return password.

117
00:07:55.830 --> 00:08:01.320
Characters dot join and we are what do we want and what do we want them to join?

118
00:08:01.320 --> 00:08:03.420
And it is going to be an empty string.

119
00:08:04.020 --> 00:08:06.090
So let's go ahead and let's click.

120
00:08:07.030 --> 00:08:13.810
And it does not present to this display, and I think I know what the problem is, we have not selected

121
00:08:13.810 --> 00:08:14.560
our display.

122
00:08:14.570 --> 00:08:15.820
So where is our display?

123
00:08:16.210 --> 00:08:22.570
I'm just going to grab the I.D. There is actually one last step remaining and this is going to be it.

124
00:08:23.020 --> 00:08:27.490
So we are going to say pass word display.

125
00:08:27.970 --> 00:08:30.440
We should update the password display as well.

126
00:08:30.670 --> 00:08:35.659
We do not want to show the users the the password inside the console.

127
00:08:36.190 --> 00:08:40.690
We want to show them like inside the HTML, inside the Web page.

128
00:08:41.169 --> 00:08:42.610
So let's select it.

129
00:08:42.610 --> 00:08:45.370
And we are going to come inside our event listener.

130
00:08:45.550 --> 00:08:49.530
And at the end of it, we are going to grab our password display.

131
00:08:49.990 --> 00:08:57.100
You remember that the result of this generate function, the result of this entire generate function,

132
00:08:57.280 --> 00:09:00.490
is going to be saved inside this password variable.

133
00:09:01.180 --> 00:09:04.120
And we are going to grab our password display.

134
00:09:05.870 --> 00:09:14.470
And Dot enter text and we are going to set it to password, let's save it click.

135
00:09:14.640 --> 00:09:21.780
So now we get an F C, we get an F, we get an eye for B, we should not be able to we should not get

136
00:09:21.780 --> 00:09:24.080
to like this.

137
00:09:24.080 --> 00:09:26.990
J, we should get only lowercase letters.

138
00:09:26.990 --> 00:09:33.050
And when we get so let's go ahead and let's increase it to like twenty one click we get everything which

139
00:09:33.050 --> 00:09:35.630
I think there is something wrong with our code here.

140
00:09:36.520 --> 00:09:43.420
So we do get everything right, so let's refresh and let's check out what the problem is.

141
00:09:44.780 --> 00:09:49.840
All right, so the problem is I'm just going to go over the problem one more time.

142
00:09:50.180 --> 00:09:56.150
The problem is, for example, when we go to 48 number of characters, the number of characters is working

143
00:09:56.150 --> 00:09:57.050
perfectly fine.

144
00:09:57.290 --> 00:10:04.760
But when we create and degenerate password, the issue is we see symbols, even though the symbols check

145
00:10:04.760 --> 00:10:12.140
check boxes not checked, we see uppercase, even though uppercase is not checked, we see numbers,

146
00:10:12.140 --> 00:10:13.840
even the numbers is not checked.

147
00:10:13.850 --> 00:10:15.680
So we see all these things.

148
00:10:16.700 --> 00:10:18.010
We print them to the console.

149
00:10:18.020 --> 00:10:18.950
That's not a problem.

150
00:10:19.160 --> 00:10:27.410
It's even a good representation of how the join method convert grabs the items of the from an array

151
00:10:27.410 --> 00:10:33.580
and converts them into a string readable and usable by that by the user.

152
00:10:34.520 --> 00:10:40.340
But the issue is that even though these are not checked, we still see them inside our password.

153
00:10:40.610 --> 00:10:42.690
So there should be something wrong with this.

154
00:10:43.100 --> 00:10:44.270
So this is the include.

155
00:10:44.270 --> 00:10:50.120
Numbers include upper symbols and include uppercase, the character amount, which is right here.

156
00:10:50.120 --> 00:10:54.760
It works perfectly fine, but they include uppercase, include a number and include symbol.

157
00:10:54.770 --> 00:10:56.330
They do not work perfectly fine.

158
00:10:57.560 --> 00:11:01.010
So we are going to go to where we have defined them.

159
00:11:01.280 --> 00:11:03.420
So this part is OK.

160
00:11:03.470 --> 00:11:07.450
So I'm just going to say, OK, and these are not OK.

161
00:11:08.060 --> 00:11:11.060
So we have our constant right here.

162
00:11:11.060 --> 00:11:12.480
It says include uppercase.

163
00:11:12.500 --> 00:11:15.830
So what is the value that the stores is?

164
00:11:15.830 --> 00:11:18.560
It says an uppercase eldard value.

165
00:11:19.950 --> 00:11:28.590
All right, so this what is this upper case element, this upper case element is it has an idea of uppercase.

166
00:11:28.620 --> 00:11:30.270
So let's come into our HTML.

167
00:11:30.780 --> 00:11:32.310
This this is the upper case.

168
00:11:32.820 --> 00:11:36.060
And we can see here that it is a type of checkbox.

169
00:11:36.070 --> 00:11:39.030
So checkboxes, they have a state of checked.

170
00:11:40.780 --> 00:11:49.570
So I think we should not grab the value for this checkbox, so if I go ahead and if I can cancel log

171
00:11:49.900 --> 00:11:52.710
this, I'm not going to cut this video.

172
00:11:52.900 --> 00:12:01.690
I could, like, go ahead and cut it and just like like find the issue off screen and like fix it and

173
00:12:01.690 --> 00:12:02.410
then show you.

174
00:12:02.590 --> 00:12:07.270
But I'm just going to do it like like like the screen is recording.

175
00:12:07.900 --> 00:12:12.800
So let's go ahead and let's see what this is going to give us inside the console.

176
00:12:13.510 --> 00:12:16.050
So for that, I'm going to go ahead.

177
00:12:16.060 --> 00:12:17.920
We have we do have a console lock here.

178
00:12:17.920 --> 00:12:18.700
Right here.

179
00:12:18.710 --> 00:12:19.900
I'm going to comment that out.

180
00:12:20.500 --> 00:12:21.460
Just click on this.

181
00:12:21.460 --> 00:12:22.300
We get on.

182
00:12:24.530 --> 00:12:30.500
We get on each time it says it is on, right, so the value is on why?

183
00:12:30.500 --> 00:12:31.400
Why is it on?

184
00:12:32.700 --> 00:12:44.890
So, uh, hmm, let's grab our upper case element, upper case, not upper case of her case element.

185
00:12:44.910 --> 00:12:46.640
Let's see what this is going to give us.

186
00:12:47.310 --> 00:12:50.160
So it it does give us a check box.

187
00:12:50.670 --> 00:12:53.250
And from this check box, what do we want to get?

188
00:12:53.430 --> 00:12:57.990
We want to we want to be able to check it so we should be able to get the checked state.

189
00:12:58.440 --> 00:13:02.400
So if I change this value to check.

190
00:13:03.940 --> 00:13:11.260
Because it is a check box and now let's go ahead and let's let's get rid of this council, it was nonintuitive

191
00:13:11.260 --> 00:13:11.620
at all.

192
00:13:12.130 --> 00:13:14.080
So now if I click on this.

193
00:13:15.430 --> 00:13:21.400
And now let's increase the number to, I don't know, like twenty seven, so in here we can see we still

194
00:13:21.400 --> 00:13:22.450
have our symbols.

195
00:13:22.450 --> 00:13:25.350
Lower case, lower case is going to be always there.

196
00:13:25.720 --> 00:13:29.380
We have our numbers, but we don't have our upper case.

197
00:13:29.800 --> 00:13:34.030
So it doesn't matter how many times they click, we don't have I don't think we have our uppercase.

198
00:13:34.330 --> 00:13:37.000
But when I click on the upper case now, we get upper case.

199
00:13:37.330 --> 00:13:43.210
So the upper case is working fine and we know that we should not grab the value but the checked state

200
00:13:43.420 --> 00:13:44.500
when they're checked.

201
00:13:44.500 --> 00:13:47.740
So now we should be able to see our password.

202
00:13:48.630 --> 00:13:49.270
OK.

203
00:13:49.290 --> 00:13:53.130
I don't see any numbers, I don't see any symbols and I don't see uppercase.

204
00:13:53.940 --> 00:13:57.030
So now if I click on the numbers, we should be able to see numbers.

205
00:13:58.370 --> 00:14:02.630
If I click on the symbols, we should see lowercase, which is the default.

206
00:14:02.640 --> 00:14:07.190
Of course, we should see numbers and symbols.

207
00:14:07.200 --> 00:14:10.290
And if I click on the case, we see upper.

208
00:14:10.560 --> 00:14:12.060
So this is our lower case.

209
00:14:12.090 --> 00:14:15.650
This is upper case number and symbol.

210
00:14:16.500 --> 00:14:19.760
So I'm just going to test it here as well.

211
00:14:19.760 --> 00:14:21.180
Like multiple times.

212
00:14:21.480 --> 00:14:24.150
We don't have any bugs here, any errors.

213
00:14:25.380 --> 00:14:29.280
So this is going to be it for this lecture and for this chapter.

214
00:14:29.880 --> 00:14:31.190
I think we are done here.

215
00:14:31.200 --> 00:14:37.110
So I'm just going to go ahead and remove these council logs because professionally, we should remove

216
00:14:37.110 --> 00:14:37.350
them.

217
00:14:38.220 --> 00:14:41.350
Do we have any on any other council log here?

218
00:14:41.400 --> 00:14:42.430
I don't think we have.

219
00:14:42.840 --> 00:14:50.280
So this application was not difficult, but we had a lot of interesting concepts and a lot of interesting

220
00:14:50.280 --> 00:14:50.910
ideas.

221
00:14:51.360 --> 00:15:01.500
And I want you guys to have the as much practice as as possible, because as many projects as you create,

222
00:15:01.530 --> 00:15:08.820
those many projects, each of them, each of those projects is going to like teach you something different,

223
00:15:08.830 --> 00:15:14.910
a different way of thinking, a different way of solving bugs or errors or whatever you want to call

224
00:15:14.910 --> 00:15:16.450
them, solving program issues.

225
00:15:17.070 --> 00:15:21.540
That's why this course is like all of our projects and there is like a ton of them.

226
00:15:22.310 --> 00:15:22.710
All right.

227
00:15:22.980 --> 00:15:27.060
This is going to be it for this lecture and this chapter.

228
00:15:27.300 --> 00:15:28.710
I know I've already said that.

229
00:15:28.980 --> 00:15:31.190
I like I like seeing that.

230
00:15:31.740 --> 00:15:35.220
See you guys in the next chapter and have a good one.

