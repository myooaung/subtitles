1
00:00:02,020 --> 00:00:06,250
Hi, everyone, in this last year, we are going to check for a win.

2
00:00:07,550 --> 00:00:15,260
All right, so we have successfully drawn the whenever the computer wins, whenever the user wins or

3
00:00:15,260 --> 00:00:21,590
the R.I wins, but they were only like putting one piece when they put four pieces in a row, then they

4
00:00:21,590 --> 00:00:22,010
should win.

5
00:00:22,010 --> 00:00:22,270
Right.

6
00:00:22,670 --> 00:00:23,780
But first things first.

7
00:00:23,780 --> 00:00:26,640
Before doing that, we need to check for a tied game.

8
00:00:27,050 --> 00:00:30,740
So what I'm going to do is I'm going to go inside the select cell.

9
00:00:30,740 --> 00:00:31,700
Where is our cell.

10
00:00:34,030 --> 00:00:37,840
The select sell function, where is that?

11
00:00:37,870 --> 00:00:38,450
There it is.

12
00:00:38,830 --> 00:00:45,880
So in here, what I'm going to do is right after we return from the when it is not highlighting, what

13
00:00:45,880 --> 00:00:51,010
I'm going to do is I'm going to check for a tied game.

14
00:00:52,240 --> 00:01:00,610
Now, if it is not game over, so if game over is not true, it means that we are checking for a tight

15
00:01:00,610 --> 00:01:00,790
game.

16
00:01:01,180 --> 00:01:06,060
So first off, what I'm going to do as I'm going to grab the game tight.

17
00:01:06,250 --> 00:01:09,520
So inside the game tight, of course, we need to set it to true right.

18
00:01:10,000 --> 00:01:11,940
And let's loop over that.

19
00:01:12,100 --> 00:01:19,810
So we are going to save for that row of grit and then for let.

20
00:01:21,150 --> 00:01:23,640
Let sell of Arrow.

21
00:01:23,820 --> 00:01:33,540
We are looping over all of the cells, if the cells owner, if any cell doesn't have any owner, so

22
00:01:33,540 --> 00:01:34,770
let's set it to No.

23
00:01:36,990 --> 00:01:42,160
If it means that they're OK, this is not correct.

24
00:01:42,480 --> 00:01:50,130
So if the cell owner is no, it means that there is a specific cell and that cell is not felt.

25
00:01:50,610 --> 00:01:54,270
That cell has not been occupied by either the FBI or the R.I.

26
00:01:54,620 --> 00:02:03,270
And then we are going to say that the game tied is is false because the game only is tied when all of

27
00:02:03,270 --> 00:02:09,880
the board is filled, all these circles are filled and there is no winner, then the game is tied.

28
00:02:10,110 --> 00:02:15,840
So in here I'm just going to say game tied is false and that's what I'm going to do as.

29
00:02:17,690 --> 00:02:27,590
And here is also go ahead and I'm going to check whenever a game is is tight, so I'm going to say if

30
00:02:27,590 --> 00:02:29,600
game tight is true.

31
00:02:31,540 --> 00:02:35,330
We are going to grab the game over and we are going to set it to true.

32
00:02:35,840 --> 00:02:40,060
All right, so when the game is not over, it means there it's not time.

33
00:02:40,360 --> 00:02:45,070
And when the game is over, it means that the game is not is actually tight.

34
00:02:45,430 --> 00:02:45,650
Right.

35
00:02:45,700 --> 00:02:48,800
So we just said the game over and we'll run another game.

36
00:02:49,210 --> 00:02:50,950
So let me just take a look at this.

37
00:02:50,960 --> 00:02:55,740
So we have said for let's row off grid, let's sell Aphro.

38
00:02:55,900 --> 00:02:59,530
If the sales owner is empty, then it means that it is not tight.

39
00:02:59,950 --> 00:03:07,630
And then we got out of that loop and we have said that if the game tied is true, only when the game

40
00:03:07,810 --> 00:03:09,160
is is over.

41
00:03:09,880 --> 00:03:10,410
Right.

42
00:03:10,450 --> 00:03:18,010
So to test this, I'm going to come because we have a lot of rows and columns.

43
00:03:18,250 --> 00:03:24,220
I'm just going to reduce the columns to three and I'm going to reduce the rows to to let's say that

44
00:03:24,370 --> 00:03:25,150
it's come here.

45
00:03:25,630 --> 00:03:27,000
So draw.

46
00:03:27,010 --> 00:03:29,880
You can see that it says we should not get this.

47
00:03:30,700 --> 00:03:33,610
So there is something wrong in here.

48
00:03:35,440 --> 00:03:36,370
All right.

49
00:03:38,630 --> 00:03:45,920
OK, so we get we do get the text, you can see the text, but you can see that it is looping over that.

50
00:03:46,040 --> 00:03:50,000
And I think the problem is that we are not breaking out of that loop.

51
00:03:50,000 --> 00:03:53,930
So where is our whereas the logic that we just wrote.

52
00:03:54,680 --> 00:03:56,300
Hmm, where is it?

53
00:03:56,300 --> 00:03:56,930
Where was it?

54
00:03:57,230 --> 00:03:59,780
It was inside the select cell.

55
00:03:59,810 --> 00:04:01,600
So let me select.

56
00:04:01,610 --> 00:04:02,200
There we go.

57
00:04:02,360 --> 00:04:03,320
This is where it is.

58
00:04:05,630 --> 00:04:16,160
We need to get out of this sloops, and whenever each of the iterations is answers, that's the game.

59
00:04:16,250 --> 00:04:20,230
Whenever the game is not tied, we just want to get out of that iteration.

60
00:04:20,540 --> 00:04:23,560
So I'm just going to reference the order in here as well.

61
00:04:24,020 --> 00:04:26,090
So now we should get the game tight.

62
00:04:26,090 --> 00:04:29,590
So hopes we still do not get it.

63
00:04:30,260 --> 00:04:33,260
So break outer and outer.

64
00:04:33,260 --> 00:04:36,020
And we have referenced the outer there as well.

65
00:04:37,160 --> 00:04:42,920
OK, what what seems to be the problem, we should fill all this and then it should say game.

66
00:04:44,420 --> 00:04:46,900
OK, save it once more, come here.

67
00:04:46,920 --> 00:04:48,560
We should not get this text.

68
00:04:53,950 --> 00:05:03,520
So we say that game tired is true, we break out of that, we say that if the cell is if the cell is

69
00:05:03,520 --> 00:05:08,890
not, I'm just going to provide in one other equal sign and I'm going to say, there we go.

70
00:05:08,890 --> 00:05:09,860
And now it works.

71
00:05:10,150 --> 00:05:12,940
So if I click on this one, we should get this.

72
00:05:12,940 --> 00:05:20,710
We should see the drawer and the drawer works only when all of the cells are filled and there is no

73
00:05:20,710 --> 00:05:21,400
winner there.

74
00:05:21,880 --> 00:05:29,770
So I'm going to go back to TARP and I'm going to reset the size to seven columns and six rows.

75
00:05:29,770 --> 00:05:30,640
I think that was it.

76
00:05:30,640 --> 00:05:30,970
Right.

77
00:05:31,830 --> 00:05:38,910
Sims writes seven columns, six rows, perfect, so the next thing that I would like to do is I want

78
00:05:38,910 --> 00:05:39,750
to create.

79
00:05:42,320 --> 00:05:45,100
Let's see what it is that we want to create here.

80
00:05:47,960 --> 00:05:55,160
I want to create the connect for function, I want to say that whenever four dots are connected in one

81
00:05:55,160 --> 00:06:03,800
line or like in one row or V that row, like diagonally, vertically or horizontally, one four are

82
00:06:03,800 --> 00:06:08,660
connected in a row, then we want to we want to specify a winner.

83
00:06:09,070 --> 00:06:09,370
Right.

84
00:06:09,620 --> 00:06:12,500
So let's see.

85
00:06:13,100 --> 00:06:13,400
Hmm.

86
00:06:15,680 --> 00:06:23,030
Right below our check when where is our check when the this is the dimensions, this is the check went

87
00:06:23,210 --> 00:06:23,950
right here.

88
00:06:23,960 --> 00:06:27,290
I'm going to create the connect now.

89
00:06:27,290 --> 00:06:29,510
This is the main function that we have here.

90
00:06:29,900 --> 00:06:35,110
That's why the name of the function is actually the name of the game that we are playing.

91
00:06:35,690 --> 00:06:36,130
All right.

92
00:06:36,140 --> 00:06:38,930
So let's go ahead and let's create this function.

93
00:06:39,050 --> 00:06:46,010
I'm going to say function connect for I'm going to pass as a parameter, an empty array.

94
00:06:48,080 --> 00:06:54,020
Right, and first off, we are going to initial we are going to declare a variable count and we are

95
00:06:54,020 --> 00:07:01,250
going to set it to zero and we are also going to declare a variable last owner.

96
00:07:02,200 --> 00:07:05,860
Last owner of that cell, and we are going to initialize it to No.

97
00:07:08,080 --> 00:07:08,540
Perfect.

98
00:07:08,740 --> 00:07:11,470
Let's let's grab our winning cells.

99
00:07:13,290 --> 00:07:15,690
Uh, what is wrong here?

100
00:07:16,970 --> 00:07:22,070
Expect, uh huh, last owner equals.

101
00:07:22,100 --> 00:07:24,740
No, I mean, this is correct, it should work.

102
00:07:25,590 --> 00:07:26,220
Let.

103
00:07:27,190 --> 00:07:27,880
Count.

104
00:07:30,800 --> 00:07:36,500
That count equals zero and let last owner.

105
00:07:38,640 --> 00:07:40,170
C o u a..

106
00:07:41,990 --> 00:07:45,940
And last owners should be equal to, oh, there they are.

107
00:07:45,980 --> 00:07:47,450
I know what the problem is.

108
00:07:47,450 --> 00:07:48,940
We missed something up here.

109
00:07:49,430 --> 00:07:52,010
So there is there was the parentheses missing.

110
00:07:53,910 --> 00:07:56,710
Let's put it here.

111
00:07:57,300 --> 00:08:03,830
OK, so mistype out there, let's grab our account and set it to zero.

112
00:08:05,300 --> 00:08:09,950
And then we are going to grab the last owner and set it to No.

113
00:08:11,090 --> 00:08:18,170
At first, these are what we want to do, right, and then let's grab the winning cells so we know that

114
00:08:18,170 --> 00:08:22,350
we have some winning cells and I'm going to create an array for them.

115
00:08:22,910 --> 00:08:28,970
And now what we are going to do is we are going to say for let's let's move over that.

116
00:08:28,980 --> 00:08:32,700
So let equals zero zero zero.

117
00:08:33,590 --> 00:08:47,180
Why am I doing that for zero and let the I should go all the way to cells that, um, length that length.

118
00:08:47,460 --> 00:08:47,930
All right.

119
00:08:48,140 --> 00:08:52,280
And we are going to increment the AI by one each time, so.

120
00:08:55,530 --> 00:09:03,810
If there is no owner, right, it means that if the if there is no winner in here, what we are going

121
00:09:03,810 --> 00:09:06,000
to do is we are going to reset the game.

122
00:09:06,150 --> 00:09:06,510
All right.

123
00:09:06,780 --> 00:09:08,370
So let's check for that as well.

124
00:09:08,400 --> 00:09:17,030
So we are going to say sells the I or any item inside the cell if it doesn't have any owner.

125
00:09:17,250 --> 00:09:20,490
So we are going to set it to know if it doesn't have.

126
00:09:20,790 --> 00:09:21,660
Why can't it?

127
00:09:21,660 --> 00:09:22,060
Right.

128
00:09:22,060 --> 00:09:22,390
Zero.

129
00:09:22,470 --> 00:09:24,940
OK, if it doesn't have any owner.

130
00:09:25,080 --> 00:09:25,730
What do we want?

131
00:09:25,770 --> 00:09:28,470
Do we want to reset the count to zero.

132
00:09:30,060 --> 00:09:39,460
And the winning sells sell, there is an estimate missing it should be initialized to as an empty array.

133
00:09:40,560 --> 00:09:42,260
But what if we do have an owner?

134
00:09:42,480 --> 00:09:44,430
We do have like an owner.

135
00:09:44,460 --> 00:09:44,840
All right.

136
00:09:45,240 --> 00:09:50,730
And that owner has to be repeated again and again and again for us to win.

137
00:09:50,880 --> 00:09:58,110
So four cells in a row, like one, two, three, four, four cells in a row, they should be dedicated

138
00:09:58,110 --> 00:09:59,130
to one owner.

139
00:09:59,130 --> 00:10:02,700
So the owner is the same owner, so same owner.

140
00:10:04,450 --> 00:10:06,920
To the count, to the count.

141
00:10:07,990 --> 00:10:09,610
So we are going to say alse.

142
00:10:11,630 --> 00:10:13,310
Actually, this is Al-Saqqaf.

143
00:10:14,940 --> 00:10:18,870
Our safety sells item does owner.

144
00:10:19,810 --> 00:10:22,850
Is actually equal to the last owner.

145
00:10:22,870 --> 00:10:24,930
This is why we created the last owner.

146
00:10:25,330 --> 00:10:28,180
So, for example, this is our first on a cell.

147
00:10:28,600 --> 00:10:31,880
This is the owner and then this is the second cell.

148
00:10:31,900 --> 00:10:34,990
So this owner, this is the owner now.

149
00:10:34,990 --> 00:10:41,440
And this is the lastone and the last owner and the current owner, they are equal to each other when

150
00:10:41,440 --> 00:10:42,820
they're equal to each other.

151
00:10:42,830 --> 00:10:48,100
What it is that we want to do, we want to grow our account and incremented by one.

152
00:10:48,250 --> 00:10:55,990
And we are going to grab the winning cell's array and we are going to push to it the the item from the

153
00:10:56,010 --> 00:10:56,920
cells array.

154
00:10:58,290 --> 00:10:59,160
That item.

155
00:11:00,700 --> 00:11:04,040
Now, let's go ahead and let's create another al statement here.

156
00:11:04,480 --> 00:11:13,240
So if the owner is a new owner, so new owner, we are going to we are going to have a new count there.

157
00:11:13,690 --> 00:11:21,970
So let's say else count, should we still have to increase their increment, the count by one and the

158
00:11:21,970 --> 00:11:22,730
winning sales?

159
00:11:22,750 --> 00:11:28,450
Of course, they're going to be empty because we have a new owner there and we are going to push that

160
00:11:28,450 --> 00:11:31,840
to the winning sales in case that that player wins.

161
00:11:31,840 --> 00:11:33,790
So winning sales start to push.

162
00:11:36,910 --> 00:11:40,690
That's that item we are we are just pushing it to that item.

163
00:11:41,410 --> 00:11:44,950
All right, so let's go ahead and let's find out the last owner.

164
00:11:45,070 --> 00:11:49,120
So we are still inside this loop, right?

165
00:11:49,130 --> 00:11:51,130
So this is all happening inside the loop.

166
00:11:51,400 --> 00:11:54,370
So said the last owner.

167
00:11:55,570 --> 00:12:02,380
So the last owner is equal to the sells item.

168
00:12:03,310 --> 00:12:11,650
This is the sells item, the dog owner, so we just said that and now let's check if there are four

169
00:12:12,760 --> 00:12:16,860
ducks in a row, then that is the owner sorry, that is the winner.

170
00:12:17,140 --> 00:12:21,070
So we are going to safe count is equal to four.

171
00:12:22,130 --> 00:12:24,490
And you can see that we are incrementing the count here.

172
00:12:24,670 --> 00:12:27,690
If the owner equals the last owner, we increment the count.

173
00:12:27,850 --> 00:12:33,190
And if the count goes, the counting fermentation goes all the way to four.

174
00:12:33,760 --> 00:12:34,590
What do we want to do?

175
00:12:34,600 --> 00:12:37,840
We want to say, let's sell off wedding sells.

176
00:12:39,860 --> 00:12:48,060
And are going to say Soldat Wener equals to true cell, wener equals to true, perfect.

177
00:12:48,380 --> 00:12:53,750
So what if what if we don't have four in the row, we just want to return.

178
00:12:53,900 --> 00:13:00,890
True from it, when we have four in the row, we basically return true from this statement.

179
00:13:01,580 --> 00:13:04,040
And in case we don't have any.

180
00:13:06,220 --> 00:13:14,050
Any four in a row, we just want to return false from this entire function, so this function is created.

181
00:13:14,080 --> 00:13:20,140
Now, what I'm going to do is I'm going to go to inside our cell constructor.

182
00:13:21,080 --> 00:13:23,900
Right, and I'm going to add the winner there.

183
00:13:23,930 --> 00:13:26,230
We need to specify the winner there as well.

184
00:13:26,990 --> 00:13:30,530
So let's come down here and I'm going to say this.

185
00:13:31,550 --> 00:13:35,650
The start winner is equal to false.

186
00:13:35,930 --> 00:13:38,790
So initially, we are not going to have any winner, right.

187
00:13:38,810 --> 00:13:43,790
And if they play and there is a winner, then we are going to have a winner there.

188
00:13:44,150 --> 00:13:49,060
Now, I need this winner added to this condition as well for the highlighting.

189
00:13:49,070 --> 00:13:50,690
So I'm just going to add this.

190
00:13:51,380 --> 00:13:52,610
Let's just provide a space.

191
00:13:52,910 --> 00:14:01,010
This Dudd winner or this not highlight is not then we want the color and the color is no longer going

192
00:14:01,010 --> 00:14:01,820
to be this.

193
00:14:03,200 --> 00:14:04,130
We are going to change.

194
00:14:04,130 --> 00:14:05,880
We are going to check for the winner as well.

195
00:14:06,110 --> 00:14:13,590
So if this winner is true, we want to show the the color of the winner.

196
00:14:13,640 --> 00:14:17,720
So the color eye and we want to show that.

197
00:14:18,500 --> 00:14:22,580
Otherwise, we want to check if this that highlight is true.

198
00:14:22,880 --> 00:14:24,530
If this is not highly it is true.

199
00:14:24,530 --> 00:14:30,100
We are going to show the color for the R.I, otherwise we are going to show the color for the EHI.

200
00:14:32,070 --> 00:14:32,900
Perfect.

201
00:14:33,000 --> 00:14:40,740
Now, let's see now in order to actually check for any winner, we have to go to our check win function,

202
00:14:41,130 --> 00:14:42,090
which is right here.

203
00:14:42,210 --> 00:14:45,060
And I'm going to comment this one out instead of now.

204
00:14:45,060 --> 00:14:50,450
Here is the here is where we want to provide the logic to check for any win.

205
00:14:50,700 --> 00:14:54,920
So there are going to be four different conditions in case someone wins.

206
00:14:55,350 --> 00:14:56,630
There is the horizontal.

207
00:14:57,000 --> 00:14:58,110
There is the vertical.

208
00:14:58,230 --> 00:14:59,760
There is the diagonal.

209
00:14:59,880 --> 00:15:00,450
Right.

210
00:15:00,810 --> 00:15:02,510
There is the diagonal left.

211
00:15:02,760 --> 00:15:04,870
So we need to check for four conditions.

212
00:15:05,280 --> 00:15:10,710
Now, first off, what I'm going to do is I'm going to get I'm going to say getting all the cells.

213
00:15:12,580 --> 00:15:18,830
From each direction, from each of the directions, so it doesn't matter.

214
00:15:18,850 --> 00:15:21,610
Each direction just can provide a space.

215
00:15:21,760 --> 00:15:22,960
They're going to you know what?

216
00:15:22,960 --> 00:15:24,430
I'm just going to go ahead and remove that.

217
00:15:24,430 --> 00:15:26,260
That's not necessary here anymore.

218
00:15:26,920 --> 00:15:28,240
And let's say so.

219
00:15:28,240 --> 00:15:34,480
The first one is going to I'm just going to ride diagonal left diagonal left his bottom right to top

220
00:15:34,480 --> 00:15:34,900
left.

221
00:15:36,270 --> 00:15:41,910
And I'm going to set it to an empty array, right, and then let's grab the diagonal.

222
00:15:43,600 --> 00:15:47,350
Right, the diagonal right is going to be bottom left to top right.

223
00:15:49,100 --> 00:15:51,410
We are going to have our horizontal.

224
00:15:53,520 --> 00:15:55,830
Which we know what that is and we're vertical.

225
00:15:58,060 --> 00:16:05,170
So there are only four directions that a win can occur, right and right after that, let's go ahead

226
00:16:05,170 --> 00:16:12,360
and let's check for different scenarios and let's push to these to these arrays.

227
00:16:12,580 --> 00:16:15,550
So what I'm going to do is I'm going to create a for loop.

228
00:16:16,450 --> 00:16:26,080
So for all of the eye is going to for let I saw that I equals zero, so the I's going to start from

229
00:16:26,080 --> 00:16:33,270
zero and the AI is going to go all the way to less than the great arrows.

230
00:16:34,030 --> 00:16:38,860
We're going to iterate over the rows and also the columns.

231
00:16:40,540 --> 00:16:42,490
So this is going to be the rows.

232
00:16:42,490 --> 00:16:48,010
And I'm going to say for let J equals zero.

233
00:16:50,440 --> 00:16:55,840
They should go all the way to great columns, less than that, and we are going to increment Jay by

234
00:16:55,840 --> 00:16:56,140
one.

235
00:16:56,740 --> 00:17:04,329
So first off, let's check let's push to the horizontal horizontal array, horizontal cels.

236
00:17:08,240 --> 00:17:16,710
Horizontal cells and we are going to say f the eye equals Roe then means that it is horizontal.

237
00:17:16,940 --> 00:17:21,109
So we are going to grab the horizontal array and we are going to push to it.

238
00:17:21,920 --> 00:17:27,050
The what do we what we are going to push we are going to push the our grid because all of the cells

239
00:17:27,050 --> 00:17:28,640
are actually inside that grid.

240
00:17:29,030 --> 00:17:32,240
And it is we are going to push the rose and the columns.

241
00:17:33,050 --> 00:17:36,800
The next situation is vertical cells.

242
00:17:38,340 --> 00:17:43,110
For the vertical says, we should say that whenever because we are talking about the vertical, it's

243
00:17:43,110 --> 00:17:43,610
columns.

244
00:17:43,610 --> 00:17:49,210
So we are going to grab the J because J is actually what's iterating over those columns.

245
00:17:49,260 --> 00:17:50,430
So if J.

246
00:17:50,430 --> 00:17:58,590
Equals call, we are going to say vertical, vertical dot push.

247
00:17:58,590 --> 00:18:03,030
Let's push to that array, the same grid that we have.

248
00:18:03,060 --> 00:18:08,610
So just to not repeat, just to save some time, I'm just going to grab it and put it there.

249
00:18:09,090 --> 00:18:14,520
And the next thing is I'm going to go ahead to diagonal left.

250
00:18:14,520 --> 00:18:26,820
So diagonal left, right and OK, so the diagonal left, if I is less than the J if the number of columns

251
00:18:27,290 --> 00:18:34,260
start a number of rows is less than the number of columns when if that equals to the number of rows,

252
00:18:34,680 --> 00:18:41,010
less than the number of columns, if both of them are equal to each other, it means that we are moving

253
00:18:41,010 --> 00:18:43,050
in a diagonal left position.

254
00:18:45,090 --> 00:18:49,240
And we want to push Bush to that array, what do we want to push?

255
00:18:49,260 --> 00:18:51,010
We want to push that to that right.

256
00:18:51,750 --> 00:18:56,700
And finally, we have our diagonal right.

257
00:18:59,240 --> 00:19:04,940
There is a misspelling there, it doesn't really matter, but still diagonal.

258
00:19:07,320 --> 00:19:08,940
Diagonal.

259
00:19:10,380 --> 00:19:11,250
Is it correct?

260
00:19:11,280 --> 00:19:13,740
I think yeah, it is correct.

261
00:19:13,770 --> 00:19:25,560
So if the rose plus the the eye, the eye, which is the red rose iterator, plus the column columns

262
00:19:25,560 --> 00:19:30,330
iterator, that equals the row plus column.

263
00:19:30,720 --> 00:19:34,920
If they're the same, it means that we are moving any diagonal.

264
00:19:34,920 --> 00:19:35,640
Right.

265
00:19:37,250 --> 00:19:44,840
And we are going to push to the to that our grid, which has a number of columns and number of rows,

266
00:19:45,560 --> 00:19:49,820
and finally what I'm going to do is I'm going to get out of that for a loop.

267
00:19:50,770 --> 00:19:51,170
Yes.

268
00:19:51,170 --> 00:19:51,980
The for loop.

269
00:19:51,980 --> 00:20:01,070
And there so I'm going to get out of it and I'm going to say if any half, four in a row.

270
00:20:02,590 --> 00:20:04,390
Return a win.

271
00:20:05,620 --> 00:20:12,400
So we want to return, right, so we are going to return let's call the Connacht for a function and

272
00:20:12,400 --> 00:20:16,120
we are going to pass and let's pass in diagonal left or.

273
00:20:21,120 --> 00:20:22,340
Connect for.

274
00:20:24,480 --> 00:20:28,550
Connect four, and it's passing the diagonal, right?

275
00:20:29,970 --> 00:20:37,080
Or connect for so any of the if any of these conditions is true, we are going to return it when?

276
00:20:38,220 --> 00:20:40,860
Horizontal and connect for.

277
00:20:42,890 --> 00:20:43,670
Verticle.

278
00:20:44,810 --> 00:20:48,790
Let's save it and hopefully we should be able to see something here.

279
00:20:52,980 --> 00:21:00,960
OK, so if completed this as well, so if I come here now, if I put that there, oh, we have not automated

280
00:21:00,960 --> 00:21:03,480
this, I'm just going to play the part as well.

281
00:21:04,080 --> 00:21:06,120
So first off, let's check.

282
00:21:06,120 --> 00:21:10,020
You can see it says human one, and we can still see our selection.

283
00:21:10,030 --> 00:21:11,280
We are going to take care of that.

284
00:21:11,280 --> 00:21:11,810
Don't worry.

285
00:21:12,120 --> 00:21:15,110
But the important part is it checks for a vertical.

286
00:21:15,600 --> 00:21:18,000
Let's see if it checks for a horizontal.

287
00:21:19,140 --> 00:21:20,370
I'm just going to put it there.

288
00:21:20,700 --> 00:21:21,500
Put it there.

289
00:21:21,510 --> 00:21:22,620
And there we go.

290
00:21:22,630 --> 00:21:24,490
Computer one horizontal.

291
00:21:24,690 --> 00:21:27,990
Now let's check for a vertical sorry, diagonal.

292
00:21:28,530 --> 00:21:30,360
So.

293
00:21:32,110 --> 00:21:34,690
There we go.

294
00:21:35,940 --> 00:21:37,360
And it's this human one.

295
00:21:37,410 --> 00:21:38,940
This was diagonal, right?

296
00:21:39,270 --> 00:21:42,230
I'm going to check one for the diagonal left as well.

297
00:21:46,720 --> 00:21:49,790
What they are us that they are.

298
00:21:51,840 --> 00:21:59,580
There we go, it's a human one, diagonal left, so our logic is perfectly fine, we have now the only

299
00:21:59,580 --> 00:22:03,480
thing remaining for us is actually create that A.I., right.

300
00:22:03,480 --> 00:22:08,870
And we need to call the AI inside our brain is our game loop.

301
00:22:08,880 --> 00:22:10,160
This this is the game loop.

302
00:22:10,350 --> 00:22:12,230
We need to call that here as well.

303
00:22:12,900 --> 00:22:13,260
Right.

304
00:22:13,280 --> 00:22:19,890
So what we're going to do is actually we're going to do all of that in our next lecture and see you

305
00:22:19,890 --> 00:22:20,550
guys then.

