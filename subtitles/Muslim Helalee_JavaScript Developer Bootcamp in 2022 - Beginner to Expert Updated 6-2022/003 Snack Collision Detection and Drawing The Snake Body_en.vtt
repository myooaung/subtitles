WEBVTT
1
00:00:01.500 --> 00:00:02.400
Hi, everyone.

2
00:00:02.780 --> 00:00:08.970
In this lecture, we will apply collision detection and draw the snake's body.

3
00:00:10.850 --> 00:00:12.050
All right, so.

4
00:00:13.680 --> 00:00:20.450
First off, what I would like to do is let's draw our snack, the thing that the snake is chasing after.

5
00:00:20.880 --> 00:00:29.100
So let's put that here and I'm going to call it a draw snack.

6
00:00:31.540 --> 00:00:39.010
And dysfunction, that's first stuff created, define it, so draw sneck.

7
00:00:40.870 --> 00:00:47.310
This function is going to create a square for us, which we are going to call snack, of course, so

8
00:00:47.440 --> 00:00:51.210
we are going to grab our context and we are going to say film style.

9
00:00:51.850 --> 00:00:53.070
Now, what color should it be?

10
00:00:53.080 --> 00:00:54.640
I put it to red.

11
00:00:54.710 --> 00:00:56.080
I'm just going to put it to red.

12
00:00:56.590 --> 00:01:02.500
And the Phil wrecked is going to be what is the position?

13
00:01:02.620 --> 00:01:07.840
So we are going to grab this snacks exposition times, the tile count, the same thing.

14
00:01:09.930 --> 00:01:21.580
And then the snacks y position times the tile count and for this size is going to be tile size.

15
00:01:21.810 --> 00:01:25.220
Now, the size is exactly the size of the head of the snake.

16
00:01:25.860 --> 00:01:28.720
That's the thing that you have to provide it with that size.

17
00:01:29.070 --> 00:01:35.840
So now that we have created the function, let's go ahead and actually call this function.

18
00:01:36.450 --> 00:01:39.570
So I'm going to come on top of the draw snake.

19
00:01:40.380 --> 00:01:41.880
Well, didn't I copy it?

20
00:01:42.090 --> 00:01:43.290
I think I did.

21
00:01:43.800 --> 00:01:46.140
So let me copy it.

22
00:01:47.010 --> 00:01:50.400
Let me delete this from here.

23
00:01:52.880 --> 00:01:54.840
And put it there, save it.

24
00:01:55.640 --> 00:01:56.210
There we go.

25
00:01:56.240 --> 00:02:02.780
So this is the snake, of course, we will be going right through the snake now, but whenever whenever

26
00:02:02.780 --> 00:02:08.900
we get to the collision detection, whenever a headset, then we will be, well, basically the snake

27
00:02:08.900 --> 00:02:10.020
will be just eating it.

28
00:02:10.699 --> 00:02:11.270
So.

29
00:02:12.700 --> 00:02:21.240
Next up, I'm going to apply collision detection for our snack first, so underneath so.

30
00:02:22.420 --> 00:02:34.150
First off, let's go ahead and let's call it I'm going to say snack snack Kuli Culley deti.

31
00:02:34.810 --> 00:02:36.400
I think we have done this before.

32
00:02:36.970 --> 00:02:41.860
So it's going to be snack quality, a collision detection, I'm sure you know what I mean.

33
00:02:42.460 --> 00:02:44.920
And let's put it right here.

34
00:02:44.920 --> 00:02:54.160
So we are going to say function snack quality and let's grab that one and put it here and also put the

35
00:02:54.160 --> 00:02:54.940
function here.

36
00:02:57.420 --> 00:03:05.310
Whoops, what was that so snack colly dirty not state that.

37
00:03:07.320 --> 00:03:09.390
And there is an I missing.

38
00:03:12.030 --> 00:03:12.550
Perfect.

39
00:03:12.840 --> 00:03:20.760
So what do we want to do within this now, whenever the head of the snake heads the snack, we want

40
00:03:20.760 --> 00:03:23.790
the snake to disappear and reappear somewhere else.

41
00:03:24.120 --> 00:03:25.770
That is basically what we want to do.

42
00:03:25.800 --> 00:03:41.430
So if if the snacks X equals these snakes heads X, and keep in mind, this is this should be a logical

43
00:03:41.430 --> 00:03:47.640
or because we don't just want to check for one direction, we want to check for both of the axes and

44
00:03:47.640 --> 00:03:48.650
that is X and Y.

45
00:03:49.020 --> 00:03:51.180
So if the snacks Y.

46
00:03:53.670 --> 00:04:00.770
Snack Y also equals the snakes y position of the head, then what do we want to do?

47
00:04:01.170 --> 00:04:07.830
We want to reposition our snack, so let's grab the position of the snack and we are going to save snack

48
00:04:08.190 --> 00:04:10.050
math dance floor.

49
00:04:10.890 --> 00:04:18.810
And within there, we're going to say randomise the position so that random times tile count, we don't

50
00:04:18.810 --> 00:04:20.640
want it to go out of the tiles.

51
00:04:20.640 --> 00:04:20.970
Right.

52
00:04:21.390 --> 00:04:25.320
We are going to do the same thing for why we don't want him to be equal.

53
00:04:25.800 --> 00:04:26.730
There could be cool.

54
00:04:26.740 --> 00:04:30.540
Like, of course they will be equal by random.

55
00:04:31.230 --> 00:04:37.860
So I think we are done here, so.

56
00:04:39.690 --> 00:04:44.210
Let's actually go ahead and save this and let's see if it if it is going to work.

57
00:04:45.660 --> 00:04:46.210
There we go.

58
00:04:46.230 --> 00:04:52.470
You can see that the we don't there are still a lot of functionality missing, but the important one

59
00:04:52.470 --> 00:05:00.480
is whenever the snake hits it or eats it, then it is going to reappear somewhere else within the canvas.

60
00:05:00.480 --> 00:05:03.840
Of course, that should be a priority.

61
00:05:04.350 --> 00:05:09.420
Now, what I would like to do is I would like to go ahead and create a class for a snake body.

62
00:05:10.870 --> 00:05:19.960
So it is going to be the snake body class, the snake body class.

63
00:05:21.550 --> 00:05:24.870
Right, so we are going to say class snake.

64
00:05:27.430 --> 00:05:34.630
This is going to be very, very, very simple, we just have a constructor and we're going to pass in

65
00:05:34.630 --> 00:05:43.240
the X and the Y position arguing said this dot X equals X and this study Y equals Y.

66
00:05:43.900 --> 00:05:44.310
Perfect.

67
00:05:44.320 --> 00:05:45.040
Let's save it.

68
00:05:45.670 --> 00:05:47.990
So now what should we do with this?

69
00:05:48.010 --> 00:05:49.330
Where should we call it?

70
00:05:49.870 --> 00:05:50.190
Right.

71
00:05:50.350 --> 00:05:58.670
First off, we need an array to contain all of these snakes parts or snake's body parts.

72
00:05:58.960 --> 00:06:06.550
So what I would like to do here, as I would like to say, snake body array, so all of these snakes,

73
00:06:06.550 --> 00:06:08.950
body parts are going to be within this array.

74
00:06:09.460 --> 00:06:12.610
You say CONSED, it is getting very graphic.

75
00:06:12.610 --> 00:06:14.440
So let's move on.

76
00:06:14.680 --> 00:06:20.270
And now within our draw snake function.

77
00:06:20.920 --> 00:06:22.660
So where is our draw snake function.

78
00:06:22.670 --> 00:06:25.520
We have drawn the snake there within there.

79
00:06:25.690 --> 00:06:28.900
Let's go ahead and let's draw the the body.

80
00:06:29.150 --> 00:06:31.060
So let's call our context.

81
00:06:31.300 --> 00:06:34.480
The body is actually is consisting of parts.

82
00:06:34.780 --> 00:06:38.080
Each of the parts is actually one square in this case.

83
00:06:38.500 --> 00:06:40.300
So we are going to say film style.

84
00:06:40.300 --> 00:06:41.800
Let's put it to green.

85
00:06:42.970 --> 00:06:43.960
Sorry, orange.

86
00:06:44.230 --> 00:06:48.880
Green is the head and let's let's loop over it.

87
00:06:48.890 --> 00:06:51.340
So we are going to tell it I equals zero.

88
00:06:51.850 --> 00:06:54.160
We are looping over the length of the body.

89
00:06:54.490 --> 00:07:00.100
So we are going to I goes all the way to snakes bodies length.

90
00:07:01.270 --> 00:07:01.720
All right.

91
00:07:01.720 --> 00:07:02.530
So length.

92
00:07:04.800 --> 00:07:11.890
And then we will increment I by one each time because we want to create one part at a time.

93
00:07:12.210 --> 00:07:20.570
So now let's grab each of the parts and that part is going to be the snake bodies iterator in this loop.

94
00:07:20.790 --> 00:07:23.340
So we are going to grab our fill wrecked.

95
00:07:23.340 --> 00:07:27.540
And for each time this loop runs, we will create one part.

96
00:07:27.840 --> 00:07:29.670
What is the exposition of the part?

97
00:07:30.180 --> 00:07:32.010
The exposition of the part is simple.

98
00:07:32.010 --> 00:07:34.290
What is the wide position that is also simple.

99
00:07:34.680 --> 00:07:35.870
What is the size now?

100
00:07:35.880 --> 00:07:39.690
The size is the tile size, the size that we have had so far.

101
00:07:40.110 --> 00:07:44.400
So we are going to say part X times.

102
00:07:45.550 --> 00:07:57.100
Times the tile count, that is the exposition, the Y position is going to be part Y times tile count,

103
00:07:58.510 --> 00:08:05.320
tile size four with tile size four with and tile size.

104
00:08:05.710 --> 00:08:06.680
So height.

105
00:08:07.270 --> 00:08:07.730
All right.

106
00:08:07.740 --> 00:08:09.150
So we are done with.

107
00:08:09.610 --> 00:08:16.890
Now let's grab our array, which is snake body, and we are going to push to it that class that we have.

108
00:08:17.080 --> 00:08:20.650
So we are going to instantiate the snake body class right here.

109
00:08:21.370 --> 00:08:24.900
And we need two positions, X and Y.

110
00:08:25.150 --> 00:08:31.720
So the X position is going to be the snake's exposition, the snake's heads position and the Y position

111
00:08:31.720 --> 00:08:33.760
is going to be the snake head y position.

112
00:08:34.299 --> 00:08:40.870
The reason that we are doing it this way is because you can see that right after the head is where the

113
00:08:40.870 --> 00:08:44.320
body is being redrawn right now.

114
00:08:46.270 --> 00:08:49.140
All right, so we should be able to see something.

115
00:08:50.060 --> 00:08:50.570
OK.

116
00:08:52.300 --> 00:08:55.630
So let's go ahead and let's actually save this.

117
00:08:56.710 --> 00:09:01.240
And hopefully we should do we should see something so now.

118
00:09:02.280 --> 00:09:03.000
There we go.

119
00:09:03.030 --> 00:09:07.530
You can see that there is a problem clearly, but why is that problem?

120
00:09:07.980 --> 00:09:15.360
It is because whenever we are moving the snake in one direction, we are not clearing it from its previous

121
00:09:15.360 --> 00:09:15.900
position.

122
00:09:16.230 --> 00:09:22.190
And that is going to create for us this whole mess, this all of this mess.

123
00:09:22.920 --> 00:09:26.340
And you can basically fill the screen with the snake.

124
00:09:27.150 --> 00:09:27.530
Right.

125
00:09:27.570 --> 00:09:35.220
So we need to clear the position of the snake, the position of the body of the snake.

126
00:09:35.730 --> 00:09:36.180
Right.

127
00:09:36.420 --> 00:09:37.350
And.

128
00:09:39.930 --> 00:09:41.850
OK, so how do we do that?

129
00:09:42.300 --> 00:09:48.330
Where does the array so the array is going to be our snakebit it that is something that we need to clear

130
00:09:48.450 --> 00:09:50.220
in its previous iteration.

131
00:09:50.830 --> 00:09:52.860
So we are going to grab the snake body.

132
00:09:54.060 --> 00:09:55.650
So if snake body

133
00:09:58.380 --> 00:10:06.240
snake body length is greater than its tail snake tail.

134
00:10:07.760 --> 00:10:11.180
Length, then we want to grab the snake body.

135
00:10:12.680 --> 00:10:13.440
Where is the body?

136
00:10:13.940 --> 00:10:14.430
There we go.

137
00:10:14.450 --> 00:10:20.690
We want to grab it and we want to call the shift method, which is going to remove the first element

138
00:10:21.260 --> 00:10:22.180
from the array.

139
00:10:22.220 --> 00:10:22.690
Right.

140
00:10:23.240 --> 00:10:24.200
So let's save it.

141
00:10:24.380 --> 00:10:26.900
And now let's go ahead and check it again.

142
00:10:27.830 --> 00:10:29.720
So there we go.

143
00:10:30.940 --> 00:10:38.590
So originally, when it starts, we want the snake's body to to have a length equal to its tail.

144
00:10:38.740 --> 00:10:44.820
We don't want it to be bigger if it is bigger than it is going to be drawn all over the screen.

145
00:10:45.220 --> 00:10:51.310
If it is equal to that, then whenever you eat something, then the tail is going to increase.

146
00:10:51.340 --> 00:10:51.700
All right.

147
00:10:52.870 --> 00:10:55.060
I'm going to reiterate this one more time.

148
00:10:55.690 --> 00:11:02.020
Whenever we start the game, we want the body to have a size of the tail.

149
00:11:04.240 --> 00:11:12.010
If in case in the starting point, the size is not the size of the tail, but the size of the body is

150
00:11:12.010 --> 00:11:13.850
greater than the size of the tail.

151
00:11:14.050 --> 00:11:16.480
We want to remove the first item from the array.

152
00:11:18.250 --> 00:11:24.490
OK, there we go, and you can see that it is not if the tail were to be like three parts, then you

153
00:11:24.490 --> 00:11:26.250
would see three parts, right?

154
00:11:26.680 --> 00:11:28.290
But the tail is not parts.

155
00:11:28.720 --> 00:11:30.370
The tail is only two parts.

156
00:11:30.610 --> 00:11:33.190
That's why you can see only two parts.

157
00:11:34.120 --> 00:11:34.540
Right.

158
00:11:36.250 --> 00:11:44.470
So I think with this, our lecture comes to an end, right, and in the next lecture, what we will

159
00:11:44.470 --> 00:11:46.630
do is we are going to go ahead.

160
00:11:46.630 --> 00:11:48.310
We are going to draw the score.

161
00:11:48.520 --> 00:11:50.500
We are going to draw the game over.

162
00:11:50.680 --> 00:11:55.360
And we will also also handle wall collision.

163
00:11:55.540 --> 00:11:55.930
Right.

164
00:11:56.050 --> 00:11:59.380
And whenever the snake hits the wall, we are going to say go game over.

165
00:11:59.500 --> 00:12:03.110
Whenever the snake hits its own body, we are going to say game over.

166
00:12:03.280 --> 00:12:07.080
So with our next lecture, this project is going to come to an end.

167
00:12:07.420 --> 00:12:09.610
So see you guys in the next lecture.

