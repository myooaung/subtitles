WEBVTT
1
00:00:01.630 --> 00:00:06.190
Hi, everyone, in this that year, we're going to talk about more extreme methods.

2
00:00:07.790 --> 00:00:14.030
All right, now, before diving into string methods, I want to show you how you can find the index

3
00:00:14.030 --> 00:00:17.270
of any given letter inside a string.

4
00:00:17.300 --> 00:00:21.290
OK, so first off, let's go ahead and let's create a string.

5
00:00:21.620 --> 00:00:24.800
Let's call it pet, and we are going to say Berdy.

6
00:00:26.100 --> 00:00:27.930
The third right?

7
00:00:27.990 --> 00:00:32.369
So this is our strength and strength, of course, could be more than one word.

8
00:00:32.790 --> 00:00:38.160
And let's go ahead and let's consider the logit to let's log it to the console.

9
00:00:38.160 --> 00:00:39.120
That's log pet.

10
00:00:39.330 --> 00:00:40.780
And we have hit the bird.

11
00:00:41.130 --> 00:00:41.940
Now, let's see.

12
00:00:42.060 --> 00:00:47.270
Let's say we want to grab the second index of the strength.

13
00:00:47.620 --> 00:00:50.940
OK, first, I'm going to show you how you can select it.

14
00:00:50.940 --> 00:00:52.730
Then I'm going to explain it to you guys.

15
00:00:53.010 --> 00:00:58.920
So we are going to say console and I want to log it to the console and we're going to say Pat and we

16
00:00:58.920 --> 00:01:00.620
are going to open brackets.

17
00:01:00.840 --> 00:01:04.260
This is the same brackets as we had with arrays.

18
00:01:04.260 --> 00:01:04.620
Right.

19
00:01:04.920 --> 00:01:09.780
So as you guys know, that indexes in JavaScript, they start from zero.

20
00:01:09.960 --> 00:01:10.350
All right.

21
00:01:10.570 --> 00:01:11.850
So they start from zero.

22
00:01:11.860 --> 00:01:18.600
We want to grab the second index and we want to know what is the letter that is associated with this

23
00:01:18.600 --> 00:01:19.520
second index.

24
00:01:19.530 --> 00:01:22.640
And when I say it, we are going to get R and why is that?

25
00:01:22.830 --> 00:01:25.340
So let's come back in our consular log.

26
00:01:25.530 --> 00:01:28.380
So the B is going to be the zero.

27
00:01:28.650 --> 00:01:31.600
That index for the B letter is going to be zero.

28
00:01:32.100 --> 00:01:33.080
This is going to be one.

29
00:01:33.090 --> 00:01:34.370
And this is going to be two.

30
00:01:34.600 --> 00:01:37.320
OK, I'm going to show you another example.

31
00:01:37.650 --> 00:01:45.150
So let's go ahead and let's grab, let's say, the eighth index and we get the E so zero one, two,

32
00:01:45.150 --> 00:01:48.330
three, four, five, six, seven and eight.

33
00:01:48.570 --> 00:01:49.050
Yes.

34
00:01:49.050 --> 00:01:57.250
Spaces are also and there are also considered as like numbers like zero, one, two, three.

35
00:01:57.270 --> 00:02:03.730
OK, there also like I did inside the number of the indices that we want to graph.

36
00:02:04.320 --> 00:02:05.940
OK, let's do one more.

37
00:02:06.480 --> 00:02:11.580
And now let's go ahead and let's find, I don't know, the index of four.

38
00:02:11.820 --> 00:02:12.630
What is the word?

39
00:02:12.630 --> 00:02:16.560
It is why we have zero one, two, three and four.

40
00:02:18.490 --> 00:02:26.080
All right, so there are other methods, there are other ways that we can use to get the index indices

41
00:02:26.080 --> 00:02:26.630
as well.

42
00:02:27.040 --> 00:02:30.730
For example, if I go ahead and if I copied this one down below.

43
00:02:31.070 --> 00:02:31.310
OK.

44
00:02:33.340 --> 00:02:41.110
And let's go ahead and instead of this, we are going to say named length and these methods, they are

45
00:02:41.110 --> 00:02:49.600
associated with length length so we can get indices of any string through the length property of that

46
00:02:49.600 --> 00:02:50.590
string as well.

47
00:02:50.950 --> 00:02:58.000
So now we know we know from our previous lecture that the number that the value of length is always

48
00:02:58.000 --> 00:03:04.270
going to be one more than the value of the than the last index of whatever it is that we are talking

49
00:03:04.270 --> 00:03:04.450
about.

50
00:03:05.170 --> 00:03:13.390
So if the last index of this entire sentence, this entire string is, let's say 12 one less than that,

51
00:03:13.810 --> 00:03:17.610
then length is let's say 12, one less than that is going to be eleven.

52
00:03:17.620 --> 00:03:23.020
So so when we go one less than the length, we get the last index.

53
00:03:23.260 --> 00:03:27.660
OK, so if I go ahead and if I save it, we get not a number.

54
00:03:27.670 --> 00:03:33.150
And the reason for this is because the operation is actually not accurate.

55
00:03:33.370 --> 00:03:35.770
We don't have any named string here.

56
00:03:35.920 --> 00:03:38.440
So I'm just going to go ahead and I'm going to replace it with Pat.

57
00:03:38.650 --> 00:03:43.200
But this illustrates what the not a number represents.

58
00:03:43.480 --> 00:03:45.820
It is actually a numeric value.

59
00:03:45.850 --> 00:03:50.950
I know it doesn't show anything, but it is actually a numeric value.

60
00:03:50.980 --> 00:03:55.810
So now when I save it, we still get not a number.

61
00:03:55.990 --> 00:03:56.350
All right.

62
00:03:56.500 --> 00:04:00.360
And the reason for that is this should be inside these brackets.

63
00:04:00.370 --> 00:04:00.970
Let's save it.

64
00:04:01.120 --> 00:04:02.280
And now we get the deal.

65
00:04:02.680 --> 00:04:03.050
All right.

66
00:04:03.310 --> 00:04:04.990
So what does this mean?

67
00:04:05.020 --> 00:04:10.930
It means that we can get the last index by calling the length property.

68
00:04:11.440 --> 00:04:11.890
OK.

69
00:04:12.730 --> 00:04:19.470
And in other words, we can get the index of any string using our negative numbers.

70
00:04:19.720 --> 00:04:27.930
So through these three Consolo logs, we got the index of this string from left to right.

71
00:04:28.060 --> 00:04:32.230
But if we can get the index from right to left as well, and this is negative one.

72
00:04:32.470 --> 00:04:35.710
So negative one is the first last letter.

73
00:04:35.890 --> 00:04:38.820
Negative two is the second last letter.

74
00:04:39.250 --> 00:04:45.990
The eye is going to be the third letter from the last or from the from the other side.

75
00:04:46.300 --> 00:04:50.690
So let's go ahead and check it out for self and then we are going to move on to the methods.

76
00:04:50.920 --> 00:04:57.160
So if I put it, we should get an R, let's do one more and we should get an eye and we do get a nine.

77
00:04:57.430 --> 00:05:01.050
So this is how we can find an index of any given string.

78
00:05:01.600 --> 00:05:05.670
Right now, let's go ahead and let's talk about more string methods.

79
00:05:06.220 --> 00:05:14.740
So let's say you have a string and this method is called Trem Trem method, and it does exactly what

80
00:05:14.740 --> 00:05:15.890
the name suggests.

81
00:05:16.150 --> 00:05:19.060
Let's say you have a string that is that's a song.

82
00:05:19.900 --> 00:05:21.550
You have a variable of song.

83
00:05:21.760 --> 00:05:24.730
And then there you have a lot of space.

84
00:05:24.730 --> 00:05:26.190
It's just shallow, right?

85
00:05:26.620 --> 00:05:27.750
There is a lot of space.

86
00:05:27.760 --> 00:05:32.650
OK, if you go ahead and if you cancel it right.

87
00:05:32.650 --> 00:05:35.690
And let's say song, you're going to get this.

88
00:05:35.860 --> 00:05:39.310
So there is a lot of space here and there is a lot of space here.

89
00:05:39.550 --> 00:05:41.590
What if you want to remove this space?

90
00:05:41.860 --> 00:05:46.450
OK, in that case, what we can do is we just called the trim method.

91
00:05:46.960 --> 00:05:50.260
And because this is a method, we have to provide it with the parentheses.

92
00:05:50.410 --> 00:05:53.050
And now those spaces, they are gone.

93
00:05:53.480 --> 00:05:53.780
Right.

94
00:05:54.100 --> 00:05:56.260
So this is the trim method.

95
00:05:56.470 --> 00:06:03.820
The next method that I want to talk about is the index off method, which is actually.

96
00:06:05.780 --> 00:06:13.640
A case sensitive method, and it does the reverse of what we did here, so here we we wrote a number

97
00:06:13.640 --> 00:06:17.840
and we found the index of any letter associated with that number.

98
00:06:18.140 --> 00:06:22.610
But the index of Metha, it it actually does the opposite of that.

99
00:06:23.060 --> 00:06:28.880
We provided with a letter and it gives us the index, the number for that.

100
00:06:29.070 --> 00:06:31.310
OK, so it is index of.

101
00:06:32.490 --> 00:06:40.110
OK, let me and the method worked here as well, so we have let me bring this back.

102
00:06:40.560 --> 00:06:42.780
So we are going to say Consul Deathlok.

103
00:06:44.300 --> 00:06:53.120
And we are going to grab our pet, right, and we are going to say that index index off.

104
00:06:53.360 --> 00:06:57.880
So what what what is the letter that we want to find the index of?

105
00:06:58.160 --> 00:07:00.830
So let's say we want to find the index of the why.

106
00:07:01.250 --> 00:07:03.350
If I put it there, it says four.

107
00:07:03.560 --> 00:07:06.010
So zero, one, two, three.

108
00:07:06.020 --> 00:07:08.950
And this is and this has an index of four.

109
00:07:09.230 --> 00:07:16.550
So you can find the letter which is associated with the index and you can find the index which is associated

110
00:07:16.550 --> 00:07:17.230
with the letter.

111
00:07:17.240 --> 00:07:18.340
It's super simple.

112
00:07:18.890 --> 00:07:23.360
The next method that I want to talk about is the chart at Method.

113
00:07:24.570 --> 00:07:25.020
OK.

114
00:07:27.340 --> 00:07:35.290
Now, this method tells us what is the letter at that specific index that we provided, right.

115
00:07:36.160 --> 00:07:40.930
So we are just going to go ahead and we are going to say cancel the log and we are going to grab our

116
00:07:40.930 --> 00:07:45.070
pet variable and we are going to say chaar at now.

117
00:07:45.070 --> 00:07:47.650
We want to find out what is the.

118
00:07:47.830 --> 00:07:51.230
Now, keep in mind that here we do not provide a number.

119
00:07:51.550 --> 00:07:57.400
This is a number inside quotations or it means that it is actually a string in JavaScript.

120
00:07:57.760 --> 00:07:58.090
All right.

121
00:07:58.100 --> 00:07:59.520
This is not a number here.

122
00:07:59.890 --> 00:08:04.750
So we want to find out what is the letter at the point of, let's say four.

123
00:08:04.900 --> 00:08:06.390
And it is going to give us why.

124
00:08:06.790 --> 00:08:08.170
So we have zero.

125
00:08:08.170 --> 00:08:09.390
One, two, three.

126
00:08:09.400 --> 00:08:10.870
And this is number four.

127
00:08:11.060 --> 00:08:14.010
OK, so this is the chart at method.

128
00:08:14.320 --> 00:08:21.090
The next method is going to be the slice slice method and it slices our strings.

129
00:08:21.310 --> 00:08:28.570
OK, so by default, if you just go ahead and call it on any string, it is going to slice from the

130
00:08:28.570 --> 00:08:29.200
first.

131
00:08:29.380 --> 00:08:30.910
So we are going to say slice.

132
00:08:31.090 --> 00:08:34.860
So how how many, how many words do we want?

133
00:08:35.020 --> 00:08:37.530
How many letters do we want it to slice?

134
00:08:37.750 --> 00:08:43.990
So let's say we wanted to slice four letters and when we save it and then we just can see it slices

135
00:08:43.990 --> 00:08:45.890
one, two, three and four.

136
00:08:46.270 --> 00:08:50.130
So Bird has four letters and those have been sliced out.

137
00:08:50.440 --> 00:08:58.030
We can provide it with a starting index to slice from and that and in that in that case, we are going

138
00:08:58.030 --> 00:08:59.500
to pass in two arguments.

139
00:08:59.770 --> 00:09:05.440
The first argument is going to be the index at which we want this slicing to start.

140
00:09:06.400 --> 00:09:12.070
Let's say we want it to start at the index of four and continue for like like five.

141
00:09:12.730 --> 00:09:14.250
And we get a Y.

142
00:09:14.530 --> 00:09:21.250
OK, so this is how it actually works and we get a we get a Y.

143
00:09:21.460 --> 00:09:24.370
And the reason for that is because I made I made a mistake.

144
00:09:24.610 --> 00:09:30.610
It's not actually the this is actually the starting index and this is the ending index.

145
00:09:30.920 --> 00:09:35.020
OK, so let's say we want this starting index to be four.

146
00:09:35.200 --> 00:09:37.390
So we have the starting index.

147
00:09:37.390 --> 00:09:44.080
Four is going to be our Y and let's say the ending index should be like five, six, seven, eight,

148
00:09:44.080 --> 00:09:45.060
nine and ten.

149
00:09:45.340 --> 00:09:47.800
Let's put it to ten and let's see what we get.

150
00:09:48.430 --> 00:09:49.140
We get this.

151
00:09:49.240 --> 00:09:54.880
So it has sliced out of this array, this that we have here.

152
00:09:56.040 --> 00:10:02.260
So from the index of four, up until the index of ten, we have these characters inside that string.

153
00:10:03.040 --> 00:10:08.950
The next method that I want to talk about is the split method split.

154
00:10:10.260 --> 00:10:16.650
OK, and it splits apart the strength that we have into multiple strengths.

155
00:10:16.680 --> 00:10:22.950
OK, so what I'm going to do is we are going to say console the lock.

156
00:10:23.220 --> 00:10:26.960
The reason that we do console logs a lot is because it is visual.

157
00:10:26.970 --> 00:10:29.100
We can see what we are doing here.

158
00:10:30.080 --> 00:10:33.460
All right, so we are going to say, Pett, that split.

159
00:10:34.150 --> 00:10:37.790
All right, now, what do we what is the splitting point?

160
00:10:37.820 --> 00:10:41.450
What do we want this to be split at that point?

161
00:10:41.570 --> 00:10:45.560
So we want it to be split at these pieces that we have there.

162
00:10:45.770 --> 00:10:49.830
So for space, I'm just going to provide a space inside these quotations.

163
00:10:50.030 --> 00:10:55.810
And when I say that you guys can see we get an array, this syntax belongs to an array.

164
00:10:55.820 --> 00:10:56.130
Right.

165
00:10:56.300 --> 00:10:59.770
So we got we got we got Berdy, which has an index of zero.

166
00:10:59.960 --> 00:11:03.950
We got there, which has an index of one and bird, which has an index of two.

167
00:11:04.310 --> 00:11:05.420
So this is split.

168
00:11:05.660 --> 00:11:12.170
The next method that I want to talk about is the includes method and it is super simple.

169
00:11:12.410 --> 00:11:17.060
We just check if this string includes anything that we want to look for.

170
00:11:18.080 --> 00:11:24.140
For example, this is an email address when, for example, you have like a passage and inside that

171
00:11:24.140 --> 00:11:29.930
passage you want to look for an email address and you check whether that email address is present there.

172
00:11:30.260 --> 00:11:32.840
OK, so here I'm just going to say it includes.

173
00:11:33.840 --> 00:11:40.830
And I'm going to provide it with the Atkeson, and when I say that and we we get a Boolean and it's

174
00:11:41.010 --> 00:11:48.630
false because we don't have an act inside this bird, the bird, we can go ahead and check if we have

175
00:11:48.630 --> 00:11:49.390
something else.

176
00:11:49.680 --> 00:11:52.910
So let's go ahead and let's see if we have an eye there.

177
00:11:53.550 --> 00:11:54.500
And it's is true.

178
00:11:54.510 --> 00:11:55.710
We do have it there.

179
00:11:56.550 --> 00:12:00.600
And the final method that I want to talk about here is the replace method.

180
00:12:01.020 --> 00:12:07.530
We grab any word inside from our string and we replace it with something else.

181
00:12:08.130 --> 00:12:10.740
So let's go ahead and see it in action.

182
00:12:11.130 --> 00:12:16.000
And we have had to replace don't forget the parentheses.

183
00:12:16.380 --> 00:12:19.730
So now, again, we have two arguments in here.

184
00:12:19.980 --> 00:12:25.700
So the first argument is that the thing that we want to replace so what do we want to replace?

185
00:12:25.710 --> 00:12:29.700
For example, we want to replace this bird.

186
00:12:29.880 --> 00:12:33.630
OK, let's say we want to replace the.

187
00:12:35.860 --> 00:12:37.670
So we want to replace them.

188
00:12:37.690 --> 00:12:39.550
What do we want to replace it with?

189
00:12:39.580 --> 00:12:43.210
We want to replace it with a so we get Berdy a bird.

190
00:12:43.630 --> 00:12:44.020
All right.

191
00:12:44.830 --> 00:12:46.340
So that's it for this lecture.

192
00:12:46.420 --> 00:12:48.370
See you guys in the next one.

