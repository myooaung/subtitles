1
00:00:01,910 --> 00:00:02,810
Hi, everyone.

2
00:00:02,960 --> 00:00:08,330
In this next year, we are going to create the lower case and upper case character assessments.

3
00:00:09,730 --> 00:00:15,130
All right, so we are done with this length assessment, but I'm going to do is we are not going to

4
00:00:15,130 --> 00:00:16,480
work inside that anymore.

5
00:00:16,660 --> 00:00:20,800
And now we we know what we are going to get from the.

6
00:00:23,060 --> 00:00:27,950
From the length assessment function and we have pushed it to this array, the next thing that we want

7
00:00:27,950 --> 00:00:31,760
to push to that array is going to be, let's say, that push.

8
00:00:32,360 --> 00:00:36,230
We are going to say lower case assess.

9
00:00:37,200 --> 00:00:40,990
Meant and we're going to say password, right?

10
00:00:41,130 --> 00:00:47,640
So we are going to push the lowercase character assessment and also the uppercase, so I just copied

11
00:00:47,640 --> 00:00:50,280
it down and I'm going to say Humper.

12
00:00:51,390 --> 00:00:57,600
Case now let's go ahead and let's create these two functions, so I'm going to come down here and you

13
00:00:57,600 --> 00:00:57,840
know what?

14
00:00:57,840 --> 00:01:01,410
I'm going to common this length.

15
00:01:02,720 --> 00:01:05,810
Assessment function.

16
00:01:06,970 --> 00:01:15,490
All right, so let's copy this, let's put it right here, this is going to be lower case, a character

17
00:01:15,490 --> 00:01:16,370
assessment.

18
00:01:17,260 --> 00:01:19,920
OK, so let's create that function.

19
00:01:19,930 --> 00:01:24,500
It is going to be lower case assessment and we are going to pass in the password.

20
00:01:25,270 --> 00:01:29,320
So what do we have inside this lower case assessment now?

21
00:01:29,320 --> 00:01:35,800
Inside this lower case assessment, we are going to have our regular expression that is going to check

22
00:01:36,070 --> 00:01:42,010
for lower case characters and it is going to print all of their occurrences.

23
00:01:42,310 --> 00:01:42,670
All right.

24
00:01:42,880 --> 00:01:49,860
So what we are going to do here is first off, let's go ahead and let's create our regular expression.

25
00:01:49,870 --> 00:01:53,500
So I'm going to say consed I'm going to I'm going to say matches.

26
00:01:54,190 --> 00:01:55,210
So or.

27
00:01:56,910 --> 00:01:57,970
Character match.

28
00:01:57,990 --> 00:02:00,540
So let's call it character match.

29
00:02:01,200 --> 00:02:02,190
It's a better name.

30
00:02:02,760 --> 00:02:06,160
So what do we want this character match to have?

31
00:02:06,420 --> 00:02:15,150
So we want to grab our password and match it to a regular expression that we create and we want to store

32
00:02:15,180 --> 00:02:17,120
the result inside this variable.

33
00:02:17,460 --> 00:02:17,750
Right.

34
00:02:18,030 --> 00:02:21,660
So let's grab our password and we say darts match.

35
00:02:22,530 --> 00:02:26,100
And what is the regular expression that we are going to pass in?

36
00:02:26,370 --> 00:02:27,420
Very, very simple.

37
00:02:27,430 --> 00:02:28,350
We want to grab.

38
00:02:29,470 --> 00:02:36,440
All the occurrences of small, lower case numbers, all the occurrences of those.

39
00:02:36,790 --> 00:02:40,030
So what I'm going to do is I'm going to say inside Brackett's.

40
00:02:41,490 --> 00:02:45,100
Lowercase, A. all the way to lowercase Z.

41
00:02:45,480 --> 00:02:51,210
And we want to grab all of their occurrences, so that's why I just provided e.g. there.

42
00:02:51,600 --> 00:02:56,040
So I want to grab our password and match it against this regular.

43
00:02:57,180 --> 00:02:58,160
Very, very simple.

44
00:02:58,170 --> 00:02:58,440
Right.

45
00:02:58,950 --> 00:03:02,760
So what are the conditions of this match?

46
00:03:03,030 --> 00:03:03,390
All right.

47
00:03:03,660 --> 00:03:05,300
There are going to be two conditions.

48
00:03:05,310 --> 00:03:10,110
The first condition is going to be when the password has no length.

49
00:03:10,410 --> 00:03:17,280
We are going to say password has no lowercase numbers when the length of the password is zero.

50
00:03:17,610 --> 00:03:22,330
Of course, we know that the password has no no characters at all.

51
00:03:22,500 --> 00:03:24,840
So how could it have lowercase characters?

52
00:03:25,050 --> 00:03:27,980
So we just say the password has no lowercase characters.

53
00:03:28,410 --> 00:03:35,340
And when the length is equal to two or greater than that, we are going to say password could use more

54
00:03:35,340 --> 00:03:36,650
lowercase characters.

55
00:03:36,990 --> 00:03:39,180
So let's create those two statements.

56
00:03:39,600 --> 00:03:44,910
Very similar to what we did in the length are very, very similar to this one.

57
00:03:44,920 --> 00:03:49,230
In fact, I could just copy it and I could put it here, but I'm not going to do it.

58
00:03:49,440 --> 00:03:51,850
So we are going to say character match.

59
00:03:52,350 --> 00:03:53,910
So this is our character match.

60
00:03:53,920 --> 00:04:02,310
OK, we're going to say that the character match Dath length because this is going to return characters

61
00:04:02,910 --> 00:04:04,380
dart length.

62
00:04:05,160 --> 00:04:09,450
If it is equal to zero, we are going to return.

63
00:04:10,440 --> 00:04:15,550
An object, what does that object, the object is going to have two properties inside of it.

64
00:04:16,200 --> 00:04:19,380
One is going to be PWI to check or password check.

65
00:04:19,380 --> 00:04:21,170
The other one is going to be strength lost.

66
00:04:21,540 --> 00:04:24,390
We are going to say password has.

67
00:04:26,130 --> 00:04:26,880
Now.

68
00:04:28,630 --> 00:04:36,850
Lower case characters, passport has no lower case characters, and we are going to reduce the strength

69
00:04:36,850 --> 00:04:38,210
by 20 percent.

70
00:04:38,800 --> 00:04:41,820
I mean, you could change these strengths up and down.

71
00:04:41,840 --> 00:04:47,360
Doesn't really matter as long as when you add all of them together, it should add on to 100.

72
00:04:48,040 --> 00:04:56,110
So what and the next condition is if character match length.

73
00:04:57,020 --> 00:05:04,680
So that length is equal to or is less than or equal to two, if it is equal to two or less than two.

74
00:05:05,120 --> 00:05:12,000
We are still going to say that it is not something that we want and you should use more lower case characters.

75
00:05:12,500 --> 00:05:16,870
So in this case, we are going to return this.

76
00:05:16,880 --> 00:05:17,720
Copy this.

77
00:05:18,260 --> 00:05:19,100
Let's put it here.

78
00:05:19,310 --> 00:05:20,000
Password.

79
00:05:20,360 --> 00:05:21,170
Password.

80
00:05:22,760 --> 00:05:33,650
Must have more lower case characters and we are going to reduce the strength by, for example, five

81
00:05:33,650 --> 00:05:35,520
percent and let's save it.

82
00:05:35,720 --> 00:05:38,450
So this is the lower case assessment.

83
00:05:38,450 --> 00:05:39,940
We have created this function.

84
00:05:40,250 --> 00:05:44,410
We have pushed it to this assessment and it should print the message here.

85
00:05:44,870 --> 00:05:50,350
So if I were to say one, two, three, OK, cannot get what is this error?

86
00:05:51,050 --> 00:05:56,050
So it just cannot read property length of null at line fifty five.

87
00:05:56,690 --> 00:06:02,420
So this is line fifty five character match that length.

88
00:06:03,090 --> 00:06:09,500
Why doesn't like and let's log it to the console, let's see what character match is going to give us.

89
00:06:10,930 --> 00:06:11,420
Right.

90
00:06:11,750 --> 00:06:18,560
And oh we are going to say this is going to be a and or logical operator.

91
00:06:18,590 --> 00:06:21,530
OK or logical operator.

92
00:06:21,530 --> 00:06:28,170
We are going to say if it doesn't have any match return an empty array, because in this case we we

93
00:06:28,220 --> 00:06:29,170
have only numbers.

94
00:06:29,180 --> 00:06:31,050
That's why it's just type error.

95
00:06:31,070 --> 00:06:31,420
Right.

96
00:06:31,610 --> 00:06:33,140
This is an error on our part.

97
00:06:33,380 --> 00:06:37,880
We are going to say if there are no matches, just return an empty array.

98
00:06:38,030 --> 00:06:38,390
Right.

99
00:06:39,570 --> 00:06:45,310
So let's go ahead and log it to the council, this character match as well.

100
00:06:45,330 --> 00:06:53,010
So if I were to, like, make this a little bigger and put in one, two, three, you can see that reference

101
00:06:53,020 --> 00:06:55,500
error, upper case assessment.

102
00:06:55,880 --> 00:06:56,900
It's common, this one out.

103
00:06:56,910 --> 00:06:58,470
We have not created that function.

104
00:06:58,480 --> 00:06:59,310
So one, two, three.

105
00:06:59,580 --> 00:07:06,630
You can see that it returns an empty array and it says password has no lower case numbers because it

106
00:07:06,630 --> 00:07:08,370
doesn't have any lower case numbers.

107
00:07:08,900 --> 00:07:11,580
OK, so it is going to return that.

108
00:07:12,150 --> 00:07:15,390
And if it has any lower case numbers, for example.

109
00:07:15,390 --> 00:07:19,200
Q W it still says password is short.

110
00:07:19,200 --> 00:07:21,480
I think it is going to come.

111
00:07:21,630 --> 00:07:23,970
It comes from the length, so don't worry about that.

112
00:07:24,900 --> 00:07:29,310
And it says password must have more lower case characters.

113
00:07:29,700 --> 00:07:32,990
Let's add this s in here as well.

114
00:07:33,000 --> 00:07:35,440
So let's do a D.

115
00:07:35,850 --> 00:07:42,840
It says more lower case characters and if I do one more lower case character like A.W., then that message

116
00:07:42,840 --> 00:07:49,920
goes away because we only print the message if the if there is no lowercase character and we print the

117
00:07:49,920 --> 00:07:52,930
message if there is to or less than that.

118
00:07:53,340 --> 00:07:59,460
So now that we have created this lowercase character assessment function, what we can do is we can

119
00:07:59,460 --> 00:08:02,790
basically the same thing happens for uppercase.

120
00:08:03,240 --> 00:08:06,300
Only the regular expression is going to be different.

121
00:08:06,300 --> 00:08:10,380
And this instead of this lowercase, we are going to say uppercase.

122
00:08:11,700 --> 00:08:15,410
So that's why I just copied it, because it's basically the same thing.

123
00:08:15,420 --> 00:08:16,620
I don't want to waste your time.

124
00:08:16,950 --> 00:08:21,000
And the regular expression is going to be simple as well.

125
00:08:21,000 --> 00:08:26,220
And it is going to be a uppercase A. and an upper KCC.

126
00:08:27,760 --> 00:08:35,919
Very simple, so let's remove that, and if I do QE, it says password must have lower case.

127
00:08:35,960 --> 00:08:39,840
OK, let's come in this one and we have commented this one out.

128
00:08:39,850 --> 00:08:42,240
It doesn't push it to that assessment array.

129
00:08:42,640 --> 00:08:48,400
So if I say QE, it says Password has no uppercase characters.

130
00:08:49,750 --> 00:08:53,920
OK, no, let's add as here, this ad is here, let's save it.

131
00:08:54,130 --> 00:09:00,520
So if I do want to know, you can see that password is too short, password has lowercase, has no lowercase,

132
00:09:00,520 --> 00:09:01,960
no uppercase characters.

133
00:09:02,380 --> 00:09:06,040
If I add Q w e, it says password has no uppercase characters.

134
00:09:06,250 --> 00:09:11,830
If I do like C V, it has a good password.

135
00:09:11,830 --> 00:09:13,870
Must have more uppercase characters.

136
00:09:14,110 --> 00:09:18,160
I could say D CVT and it says it could be longer.

137
00:09:18,340 --> 00:09:18,760
All right.

138
00:09:19,150 --> 00:09:22,630
Because we need to provide it more than ten characters.

139
00:09:22,810 --> 00:09:26,470
And if I provide for five six it is going to be 100 percent.

140
00:09:28,550 --> 00:09:28,910
Right.

141
00:09:29,060 --> 00:09:34,580
So basically, we have created this and now you can see that I'm not going to we are not going to do

142
00:09:34,580 --> 00:09:41,450
anything else in this video except that I'm going to explain this part that at this point you can see

143
00:09:41,450 --> 00:09:43,730
that we have a lot of duplicate code.

144
00:09:44,140 --> 00:09:44,430
Right.

145
00:09:44,600 --> 00:09:52,520
So when we get to our numbers function right here and special characters function, then we will have

146
00:09:52,520 --> 00:09:57,580
four functions that basically do the same thing that basically have only.

147
00:09:57,740 --> 00:10:03,620
So the difference is where the difference is, inside the function, inside the regular expression and

148
00:10:03,620 --> 00:10:04,450
inside the time.

149
00:10:05,600 --> 00:10:06,830
That's the difference.

150
00:10:07,160 --> 00:10:13,520
So when all of the code is almost similar and only the difference is that much, what do we want to

151
00:10:13,520 --> 00:10:14,230
do with that?

152
00:10:14,750 --> 00:10:22,340
We want to create a function, a universal function that is going to be called each time this lowercase

153
00:10:22,340 --> 00:10:25,580
assessment or uppercase assessment functions.

154
00:10:25,790 --> 00:10:27,200
These functions, they're called.

155
00:10:27,470 --> 00:10:34,580
And that function is going to house our criteria along with the parameters for regular expression,

156
00:10:34,580 --> 00:10:40,040
because this is going to be different for this type, which is going to be different, and then it is

157
00:10:40,040 --> 00:10:46,400
going to have a password, which by default, all the functions have as a parameter that we are going

158
00:10:46,400 --> 00:10:47,660
to do in our next lecture.

159
00:10:47,690 --> 00:10:48,950
See you guys then.

