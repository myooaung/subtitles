1
00:00:01,260 --> 00:00:08,490
Hi, everyone, in this lecture, we are going to create our generate password event listener.

2
00:00:09,570 --> 00:00:17,040
All right, so now what I'm going to do is whenever we click on this, I want you guys to pay very,

3
00:00:17,040 --> 00:00:21,390
very close attention because this key is actually what is it?

4
00:00:21,450 --> 00:00:24,060
It is actually an input type of Zimet.

5
00:00:25,290 --> 00:00:32,759
So as far as inputs which have types of submit their concern, whenever you click on them, the page

6
00:00:32,759 --> 00:00:34,210
reloads, what does it mean?

7
00:00:34,230 --> 00:00:41,980
It means that this is a form and when you click on the input it is going to submit the form.

8
00:00:42,270 --> 00:00:46,110
That's why after the forum submission, the page reloads.

9
00:00:46,440 --> 00:00:47,940
This is not something that we want.

10
00:00:48,150 --> 00:00:52,530
So if I click on it, you can see that this page, it flashes, right?

11
00:00:52,680 --> 00:00:55,920
This title, this e-mail markup, it flashes.

12
00:00:56,130 --> 00:00:59,700
It means that this form is being submitted.

13
00:01:00,120 --> 00:01:04,920
And whenever it does submit, we will never be able to generate our password.

14
00:01:05,250 --> 00:01:13,270
So what I'm going to do is in this lecture, I'm going to prevent this default behavior, our form submission.

15
00:01:13,320 --> 00:01:13,660
Right.

16
00:01:14,760 --> 00:01:22,650
So before doing that, we need to grab a few more elements in this in this to be able to work with them.

17
00:01:22,710 --> 00:01:23,090
All right.

18
00:01:23,280 --> 00:01:26,790
So what I'm going to do is, first off, I'm just going to grab our form.

19
00:01:27,120 --> 00:01:28,520
The form has.

20
00:01:28,530 --> 00:01:29,700
So let's come here.

21
00:01:29,700 --> 00:01:32,610
Let's create a constant I'm just going to call it form.

22
00:01:32,730 --> 00:01:36,950
I could say form, aliment or form, contain or let's call it form container.

23
00:01:38,430 --> 00:01:40,560
So this is going to be a reform container.

24
00:01:40,620 --> 00:01:46,560
Let's go ahead and say document that query selector and let's see what does it have.

25
00:01:46,860 --> 00:01:47,970
So this is our form.

26
00:01:47,970 --> 00:01:53,110
Let's grab it by the I.D. and let's put it right here.

27
00:01:53,550 --> 00:01:56,220
So now we have successfully selected our form.

28
00:01:56,430 --> 00:01:57,840
I'm going to come down here.

29
00:01:59,240 --> 00:02:12,470
All right, and I'm going to say generating generating the password when the form is submitted.

30
00:02:13,250 --> 00:02:13,640
All right.

31
00:02:13,790 --> 00:02:18,870
So now what I'm going to do is I'm going to Gravois form container and I'm going to add a listener.

32
00:02:19,460 --> 00:02:20,710
Now what what is it?

33
00:02:20,720 --> 00:02:22,510
The event that we are listening for?

34
00:02:22,520 --> 00:02:23,540
It's not a click.

35
00:02:23,720 --> 00:02:25,520
It is submit event.

36
00:02:25,640 --> 00:02:25,970
Right.

37
00:02:26,300 --> 00:02:34,130
So we have talked about some of the events that we in the theory, in the theoretical lectures, but

38
00:02:34,130 --> 00:02:36,020
I didn't that was on purpose.

39
00:02:36,020 --> 00:02:43,700
I purposefully did not cover all of them because this course is a very, very practical and hands on

40
00:02:43,700 --> 00:02:44,120
course.

41
00:02:44,270 --> 00:02:50,360
And I just wanted to show you I just wanted to give you an idea of what events are and how we can manipulate

42
00:02:50,360 --> 00:02:51,650
them through functions.

43
00:02:51,830 --> 00:02:59,960
And then because we have a wide range of events, I decided that I would cover them whenever they came

44
00:02:59,960 --> 00:03:01,320
up in our projects.

45
00:03:01,610 --> 00:03:05,780
So now in here we have an input event and a submit event.

46
00:03:05,990 --> 00:03:13,040
And when the summit event is received or is listened for, we are going to run a function inside the

47
00:03:13,040 --> 00:03:13,460
function.

48
00:03:13,470 --> 00:03:20,090
We, of course, you are going to grab our event object and there is a method called prevent default

49
00:03:20,360 --> 00:03:24,140
that is going to prevent the default behavior of this form.

50
00:03:24,350 --> 00:03:27,360
So I'm going to say that prevent default.

51
00:03:27,590 --> 00:03:28,460
This is a method.

52
00:03:28,460 --> 00:03:32,030
So I'm just going to open parentheses and this is going to be let's save it.

53
00:03:32,380 --> 00:03:33,020
Let's come here.

54
00:03:33,170 --> 00:03:37,940
So now when I click on this, I'm sure you are hearing you can hear the clicking.

55
00:03:39,250 --> 00:03:44,060
The page does not flash, it means that this is not being submitted.

56
00:03:45,100 --> 00:03:51,290
So this is one of the first steps that we need to be able to create and we're password.

57
00:03:51,790 --> 00:03:52,210
All right.

58
00:03:52,360 --> 00:04:00,190
So the next thing that I want to do here is I want to create our generate password function as well.

59
00:04:00,640 --> 00:04:01,020
All right.

60
00:04:01,330 --> 00:04:08,410
So I'm just going to go ahead and I'm going to store it inside a variable called password, and I'm

61
00:04:08,410 --> 00:04:11,350
going to call the function generate function.

62
00:04:12,290 --> 00:04:17,310
Oops, generate password function, all right.

63
00:04:17,690 --> 00:04:24,890
And inside this function, what I'm going to do is now this is a function expression and for function

64
00:04:24,890 --> 00:04:29,060
expressions we do not want and we do not need to provide the function.

65
00:04:29,060 --> 00:04:30,440
Key word, right.

66
00:04:32,210 --> 00:04:37,530
I think I made a mistake here saying that this is a function and this is not actually a function.

67
00:04:37,880 --> 00:04:39,610
This is a function call.

68
00:04:39,620 --> 00:04:42,580
We are going to create the function outside this event.

69
00:04:42,590 --> 00:04:43,100
Listener.

70
00:04:43,790 --> 00:04:46,910
Now, this is a function call when the function is called.

71
00:04:47,120 --> 00:04:54,790
We want to store the value that comes out of it inside this password password variable.

72
00:04:54,830 --> 00:04:55,210
Right.

73
00:04:55,490 --> 00:04:58,490
And this function call has four arguments.

74
00:04:58,760 --> 00:05:03,400
The first argument is going to be our character is going to be a character amount.

75
00:05:04,910 --> 00:05:13,580
The second argument is going to be include not include uppercase, upper case.

76
00:05:14,120 --> 00:05:18,140
The third argument is going to be what does this include?

77
00:05:18,890 --> 00:05:21,070
Include upper case.

78
00:05:21,070 --> 00:05:22,670
So this is include upper case.

79
00:05:25,000 --> 00:05:28,220
The third argument is, what do we have for a third argument?

80
00:05:28,240 --> 00:05:30,160
We could say include no.

81
00:05:31,300 --> 00:05:38,650
Or a numbers, and for the fourth argument, we could say, you guessed right, include symbols.

82
00:05:39,220 --> 00:05:42,520
So symbols include symbols.

83
00:05:42,550 --> 00:05:43,180
Let's save it.

84
00:05:43,660 --> 00:05:45,880
So now this is a function call, right?

85
00:05:46,090 --> 00:05:53,050
We have called our function inside this form container and why why we have done this because in our

86
00:05:53,050 --> 00:06:01,210
final application, when we say when we specify the number of characters, let's put it to 41, we say

87
00:06:01,420 --> 00:06:05,290
to include numbers, to include symbols and to include uppercase.

88
00:06:05,650 --> 00:06:12,380
And you might ask, okay, why do this and say this form container form containers, eventless listener.

89
00:06:12,790 --> 00:06:19,510
The reason for that is this is the event that is handling our password generation.

90
00:06:19,870 --> 00:06:20,210
Right.

91
00:06:20,530 --> 00:06:27,250
So when this event of submit is fired, this function is going to be called the function of generate

92
00:06:27,250 --> 00:06:34,420
password and the value is going to be stored inside this variable, which we are going to use later

93
00:06:34,420 --> 00:06:34,770
on.

94
00:06:34,810 --> 00:06:35,270
All right.

95
00:06:35,740 --> 00:06:40,300
So when the function is called, we are going to call the character amount.

96
00:06:40,660 --> 00:06:43,150
Where is the character around how we specify?

97
00:06:44,470 --> 00:06:46,440
No, we have not yet specified it.

98
00:06:46,450 --> 00:06:51,390
We are going to specify we are going to create these as we go on.

99
00:06:51,400 --> 00:06:51,730
All right.

100
00:06:51,730 --> 00:06:56,240
I'm going to tell you where this where does this where does this come from?

101
00:06:57,340 --> 00:06:59,020
This is our character, Amand.

102
00:06:59,290 --> 00:07:01,960
We have uppercase, we have numbers and we have symbols.

103
00:07:02,500 --> 00:07:10,780
So whenever we say click, whenever the user clicks on that generate password, which is a submit event,

104
00:07:11,020 --> 00:07:15,550
this function is going to be called and the value is going to be stored inside this password.

105
00:07:15,910 --> 00:07:20,830
And then that value is going to be swabbed with this value of that.

106
00:07:20,830 --> 00:07:25,290
We have hardcoded for this each three, which is the password display value.

107
00:07:25,660 --> 00:07:29,500
We are going to do that these step by step.

108
00:07:29,530 --> 00:07:35,260
So now what I'm going to do is before moving forward, I want to create these variables right here.

109
00:07:36,370 --> 00:07:40,570
But even before creating that so we have a correct character amount.

110
00:07:40,840 --> 00:07:43,990
The character amount is the number of characters that we have.

111
00:07:44,170 --> 00:07:47,520
We have include uppercase, include numbers and include symbols.

112
00:07:47,800 --> 00:07:50,750
First off, we need to go ahead and we need to select them.

113
00:07:51,160 --> 00:07:56,770
So what I'm going to do is I'm going to reference them here and I'm going to store their values inside

114
00:07:58,450 --> 00:07:59,710
these variables.

115
00:07:59,740 --> 00:08:04,560
So the first one is going to be numbers element and I'm going to call it document.

116
00:08:05,170 --> 00:08:07,800
We are going to select it through the query selector.

117
00:08:08,590 --> 00:08:11,650
Let's pass and the ID, which is numbers.

118
00:08:12,800 --> 00:08:15,770
And let's create two more, so this is going to be.

119
00:08:17,620 --> 00:08:24,610
Call it, say, symbols, and this should be uppercase and we are going to check it, of course, that

120
00:08:24,610 --> 00:08:30,310
we are are we are doing it correctly, so uppercase.

121
00:08:30,850 --> 00:08:32,650
So the numbers input.

122
00:08:32,679 --> 00:08:33,130
Yes.

123
00:08:34,510 --> 00:08:41,559
So the numbers input has an idea of numbers, the symbols has an idea of symbols and the uppercase has

124
00:08:41,559 --> 00:08:42,669
an idea of uppercase.

125
00:08:43,080 --> 00:08:46,630
The reason that we are selecting them is because they are checkboxes.

126
00:08:46,840 --> 00:08:55,470
Whenever the user checks these checkboxes, then the user will be able to include numbers if numbers

127
00:08:55,470 --> 00:09:02,640
is checked, symbols if symbols is checked and uppercase if uppercase is checked inside their own like

128
00:09:02,650 --> 00:09:04,400
customized password.

129
00:09:04,870 --> 00:09:11,020
So now we have selected all three here and now let's go ahead and let's create the constants.

130
00:09:11,170 --> 00:09:15,220
So this these arguments, they are not out of place.

131
00:09:15,490 --> 00:09:19,480
So I'm going to say so the character, a man that I've passed here.

132
00:09:20,450 --> 00:09:23,720
It's going to be the number of characters that we have.

133
00:09:24,290 --> 00:09:27,170
I have not selected the number of characters, have I?

134
00:09:28,820 --> 00:09:33,320
Or we have created so this is I have selected that, so I don't need to select it again.

135
00:09:33,630 --> 00:09:35,730
So this is going to be a number of characters.

136
00:09:36,120 --> 00:09:38,250
What is it that we want to graph from there?

137
00:09:38,250 --> 00:09:41,990
It is, of course, the value which we have talked about before here.

138
00:09:42,180 --> 00:09:43,700
So this is the value, right?

139
00:09:45,190 --> 00:09:49,900
Now, it is going to be that and then we are going to create our numbers.

140
00:09:51,250 --> 00:09:53,350
So let's go ahead and let's call it numbers.

141
00:09:54,760 --> 00:09:59,500
Or I'm just going to call it include, because this is the name that we have specified here.

142
00:09:59,810 --> 00:10:01,330
So where is this?

143
00:10:01,330 --> 00:10:02,170
Right here.

144
00:10:02,770 --> 00:10:03,610
So.

145
00:10:05,910 --> 00:10:07,910
Let's grab our numbers.

146
00:10:09,920 --> 00:10:16,190
No element does dot value, we are going to grab the value of it, let's create two more and provide

147
00:10:16,190 --> 00:10:16,680
a space.

148
00:10:16,970 --> 00:10:19,040
So this one is going to be.

149
00:10:20,600 --> 00:10:21,810
So that's numbers.

150
00:10:21,830 --> 00:10:24,910
This is, you know, what I'm going to created in the same order.

151
00:10:25,040 --> 00:10:26,930
So the second one should be upper case.

152
00:10:26,940 --> 00:10:31,490
I'm just going to grab the upper case and put it right here.

153
00:10:31,490 --> 00:10:36,200
And the second one is numbers and the third one is symbols, symbols.

154
00:10:36,710 --> 00:10:39,380
And now so the first one is upper case.

155
00:10:40,010 --> 00:10:41,090
Upper case.

156
00:10:41,600 --> 00:10:44,990
This is numbers and this is symbols.

157
00:10:46,780 --> 00:10:51,700
All right, so we have created four of these include.

158
00:10:52,850 --> 00:10:54,060
Symbols.

159
00:10:54,560 --> 00:10:57,360
OK, so that is capitalized.

160
00:10:57,710 --> 00:11:06,470
So now we have created four variables and each variable holds the value of each of these input types.

161
00:11:06,830 --> 00:11:11,160
So one of the variables holds the values, the value of number of characters.

162
00:11:11,570 --> 00:11:15,250
The other variable holds the value of the numbers.

163
00:11:15,920 --> 00:11:18,730
The next one holds the value of the symbols.

164
00:11:18,740 --> 00:11:22,460
And finally, the last one holds the value of the uppercase.

165
00:11:22,670 --> 00:11:27,060
Whenever the user clicks on that, we want to include these inside our password.

166
00:11:27,080 --> 00:11:32,030
So when the user clicks numbers and generate a password, we can see numbers.

167
00:11:32,270 --> 00:11:36,270
When these are symbols, you are going to see symbols and uppercase, you are going to see uppercase.

168
00:11:37,130 --> 00:11:37,540
All right.

169
00:11:37,850 --> 00:11:39,420
So I hope you're not confused.

170
00:11:39,440 --> 00:11:41,450
This is really, really simple.

171
00:11:41,690 --> 00:11:44,480
We have I'm just going to recap very, very quickly.

172
00:11:45,320 --> 00:11:52,550
We have grabbed our four container and inside there we have said that we have grabbed this submit event

173
00:11:52,550 --> 00:11:59,930
of the form and we have prevented the default behavior, which is the form submission, so we can generate

174
00:11:59,930 --> 00:12:00,540
a password.

175
00:12:00,800 --> 00:12:06,260
Then we have called our generate password function, which which we are yet to create, of course,

176
00:12:07,430 --> 00:12:14,720
with for arguments and y for arguments, because we have one, two, three and four form inputs here

177
00:12:14,840 --> 00:12:17,120
and we want to include them inside the function call.

178
00:12:17,720 --> 00:12:23,330
And then because these very these arguments, they are not created, they're not defined, we have just

179
00:12:23,330 --> 00:12:26,150
defined them here with their specific value.

180
00:12:26,420 --> 00:12:30,830
So character amount is no characters that we have done here.

181
00:12:30,830 --> 00:12:36,680
We have selected their value and then uppercase element that value the numbers element, that value

182
00:12:36,680 --> 00:12:40,980
and symbols element that value that set for this lecture.

183
00:12:41,000 --> 00:12:42,620
See you guys in the next one.

