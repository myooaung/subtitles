WEBVTT
1
00:00:01.020 --> 00:00:05.910
Hi, everyone, in this lecture, we are going to talk about dumb events.

2
00:00:07.390 --> 00:00:16.750
All right, so we have I think we have just like very briefly have talked about event listeners and

3
00:00:16.750 --> 00:00:20.260
now this is the lecture to go really in-depth into them.

4
00:00:20.860 --> 00:00:29.890
Now, done events are the kind of like inputs that we listen for when we receive some sort of user input.

5
00:00:29.890 --> 00:00:36.820
And after that, we run some sort of code or logic based on that event and why we do that.

6
00:00:36.940 --> 00:00:43.780
We do it because we want to make the website, our website, our Web page or our Web application more

7
00:00:43.780 --> 00:00:46.650
interactive and bring it to life more dynamic.

8
00:00:46.660 --> 00:00:47.010
All right.

9
00:00:47.590 --> 00:00:57.280
So in almost all of our projects inside this course, we are going to have some sort of dumb interactivity

10
00:00:57.280 --> 00:00:58.030
with the user.

11
00:00:58.660 --> 00:00:58.990
All right.

12
00:00:59.140 --> 00:01:01.050
So what are these interactions?

13
00:01:01.060 --> 00:01:03.490
So I've listed eight of these interactions.

14
00:01:03.730 --> 00:01:06.410
There are there could be literally thousands.

15
00:01:06.910 --> 00:01:13.050
So when the user clicks, when the user hovers, scrolls, fills out a form, double clicks, mouse

16
00:01:13.050 --> 00:01:15.070
is over and an element.

17
00:01:16.380 --> 00:01:19.050
User drugs and drops user presses key.

18
00:01:19.320 --> 00:01:27.360
It doesn't matter as long as the user does something with the website, we can capture it and we can

19
00:01:27.510 --> 00:01:32.820
implement logic based on that interactivity between the user and the website.

20
00:01:33.600 --> 00:01:35.790
This is where dumb events come from.

21
00:01:36.270 --> 00:01:43.970
All the everything that the user does is actually translated to an event in the world of JavaScript.

22
00:01:44.340 --> 00:01:51.390
So whatever the user does to our website, whether the user scrolls fills out the form, whatever that

23
00:01:51.390 --> 00:01:52.710
is called, an event.

24
00:01:54.160 --> 00:02:00.940
And these events they built, they belong to done to the document object model because at the end of

25
00:02:00.940 --> 00:02:03.820
the day, user is working with the document.

26
00:02:03.820 --> 00:02:05.560
Right, that we have created.

27
00:02:05.740 --> 00:02:14.620
And Dom is actually an object kind of representation or an object model of that document.

28
00:02:15.370 --> 00:02:15.690
All right.

29
00:02:15.850 --> 00:02:19.780
So now I'm sure you are getting what is and how it works.

30
00:02:20.630 --> 00:02:20.980
Right.

31
00:02:21.130 --> 00:02:29.130
And the way we can communicate with the user through events is that we always add an event listener.

32
00:02:29.140 --> 00:02:33.250
We always listen for an event and when the event is fired.

33
00:02:34.210 --> 00:02:36.920
We do something, this is how simple it is.

34
00:02:37.120 --> 00:02:38.700
This is the logic behind it.

35
00:02:39.070 --> 00:02:40.950
So we are going to talk about events.

36
00:02:40.960 --> 00:02:48.790
We are going to start with the click event when the user clicks and in the markup, we just have two

37
00:02:48.790 --> 00:02:49.340
buttons.

38
00:02:49.360 --> 00:02:54.190
The first one has a class of change, Viji, and the second one has a class of reset.

39
00:02:54.580 --> 00:03:02.080
Viji and what I want to do, I wanted what I what it is, what it what is it that I want to accomplish?

40
00:03:02.890 --> 00:03:08.640
What I want to accomplish is when the user clicks the change object or change background, the background

41
00:03:08.650 --> 00:03:09.850
of the body is change.

42
00:03:09.970 --> 00:03:16.870
And when the user clicks reset B.G. the background of the body is reset to its original or maybe like

43
00:03:16.870 --> 00:03:20.560
it's reset it to some sort of original kind of color.

44
00:03:21.100 --> 00:03:21.490
Right.

45
00:03:21.670 --> 00:03:24.060
So this is exactly what I want to do here.

46
00:03:24.310 --> 00:03:32.180
So first off, whenever we want to interact with HTML elements through Dume, we have to reference those

47
00:03:32.180 --> 00:03:34.480
HDMI elements inside the JavaScript.

48
00:03:34.990 --> 00:03:36.280
We have to select him.

49
00:03:36.490 --> 00:03:39.490
So let's go ahead and let's select the first button.

50
00:03:41.260 --> 00:03:47.140
Concert and OK, so I'm just going to go ahead and I'm going to go very generic on this and I'm going

51
00:03:47.140 --> 00:03:52.420
to say change, but not getting better or better.

52
00:03:53.170 --> 00:03:53.500
All right.

53
00:03:53.610 --> 00:03:54.910
I'm going to say document.

54
00:03:57.110 --> 00:04:00.170
Document, dot, query selector.

55
00:04:00.290 --> 00:04:06.210
So what is the class of this button, the class of this button is that change dash biji.

56
00:04:06.830 --> 00:04:07.200
Right.

57
00:04:07.610 --> 00:04:15.020
So we can go ahead and console log it to make sure that we have selected the button correctly change

58
00:04:15.020 --> 00:04:15.530
button.

59
00:04:15.800 --> 00:04:18.680
And now if I hover over that button is selected, see.

60
00:04:19.100 --> 00:04:24.710
So we have successfully selected that and I'm going to remove this console because we are getting more

61
00:04:24.710 --> 00:04:28.120
and more better and good about this JavaScript thingy.

62
00:04:28.460 --> 00:04:31.490
And we don't need so many console logs anymore, do we?

63
00:04:31.760 --> 00:04:32.100
Right.

64
00:04:32.120 --> 00:04:33.130
You feel comfortable?

65
00:04:33.380 --> 00:04:37.070
I feel like you feel comfortable writing JavaScript at this point.

66
00:04:37.250 --> 00:04:40.370
And that is exactly the intention behind this course.

67
00:04:40.850 --> 00:04:45.460
When you finish it, you're going to become a fantastic JavaScript developer.

68
00:04:46.060 --> 00:04:46.490
All right.

69
00:04:46.640 --> 00:04:51.260
If you are a fantastic you are going to become a fantastic KO'd, right?

70
00:04:52.740 --> 00:04:58.470
All right, so now we have selected that button, we are going to say we are not when you select that

71
00:04:58.470 --> 00:05:05.640
button, you then you want to add an event listener to that button, because event is something that

72
00:05:05.640 --> 00:05:06.600
the user does.

73
00:05:07.140 --> 00:05:09.780
So event is not something that we do.

74
00:05:09.780 --> 00:05:11.750
Event is something that the user does.

75
00:05:12.000 --> 00:05:17.720
So when the user does an event or implements an event, we want to listen for that event.

76
00:05:17.910 --> 00:05:19.320
So we are going to say change.

77
00:05:19.320 --> 00:05:21.690
Better not add event listener.

78
00:05:21.700 --> 00:05:25.620
This is one of the most beautiful methods in JavaScript.

79
00:05:26.190 --> 00:05:26.520
All right.

80
00:05:26.790 --> 00:05:30.060
So we have called this idea from listener.

81
00:05:31.420 --> 00:05:33.590
So what do we want to listen for?

82
00:05:33.730 --> 00:05:37.930
So this out of the listener is going to accept two arguments.

83
00:05:38.590 --> 00:05:38.910
All right.

84
00:05:39.100 --> 00:05:45.020
So the first argument is the kind of event that we want to listen for, and that is the click event.

85
00:05:45.040 --> 00:05:46.230
Yes, that is right.

86
00:05:46.450 --> 00:05:48.820
We have a click event in JavaScript.

87
00:05:49.540 --> 00:05:49.860
Right.

88
00:05:50.110 --> 00:05:56.320
So we want to listen for a click, because whenever we click this button, we are actually clicking

89
00:05:56.320 --> 00:05:56.470
it.

90
00:05:56.470 --> 00:05:56.830
All right.

91
00:05:57.100 --> 00:05:59.290
So we want to listen for a click.

92
00:05:59.500 --> 00:06:05.370
And when the user clicks and we capture it, what do we want to do with that?

93
00:06:05.770 --> 00:06:08.270
We want to run a callback function.

94
00:06:08.530 --> 00:06:12.670
This is where everything in JavaScript ties together.

95
00:06:13.180 --> 00:06:17.740
Now, we have talked about variables in our first chapters.

96
00:06:17.920 --> 00:06:20.500
We have talked about functions, arrays, loops.

97
00:06:20.680 --> 00:06:28.210
And when it when we get to creating real world webs like real world projects, you're going to see how

98
00:06:28.240 --> 00:06:34.740
all of these pieces, they come together and they complete the puzzle that is JavaScript.

99
00:06:35.020 --> 00:06:40.870
And after you complete it and you take a look at this entire picture, which is JavaScript, you're

100
00:06:40.870 --> 00:06:44.950
going to know that it has never been a puzzle, right?

101
00:06:45.130 --> 00:06:46.630
It has always been there.

102
00:06:46.630 --> 00:06:48.460
And you can always learn it.

103
00:06:48.880 --> 00:06:49.310
Right.

104
00:06:50.860 --> 00:06:52.870
So I'm very excited.

105
00:06:52.870 --> 00:06:58.720
Very, very, very I can barely contain the excitement because I really love events.

106
00:06:58.720 --> 00:07:06.030
And most and and most of the things that you can see on the website, it's done through dumb, OK?

107
00:07:06.280 --> 00:07:13.060
It is one of the most amazing and awesome things and of course, powerful things that JavaScript can

108
00:07:13.060 --> 00:07:13.270
do.

109
00:07:14.110 --> 00:07:14.520
All right.

110
00:07:15.070 --> 00:07:21.370
So we are going to grab the document, that body we have done this before, the way we can access the

111
00:07:21.370 --> 00:07:23.160
body element of an e-mail.

112
00:07:23.170 --> 00:07:27.400
We have the reserve we have a reserve selector in JavaScript for that.

113
00:07:27.520 --> 00:07:28.800
And that is document that.

114
00:07:28.810 --> 00:07:30.960
But and we want to style it.

115
00:07:31.300 --> 00:07:33.200
What is the style that we want to add?

116
00:07:33.340 --> 00:07:37.150
It is a background color, right.

117
00:07:37.510 --> 00:07:40.420
So what is the background color that we want to add to it?

118
00:07:40.630 --> 00:07:47.430
The code is going to be eight F, C o a nine.

119
00:07:47.830 --> 00:07:52.420
And remember, this style is going to be an inline style for the bot.

120
00:07:52.730 --> 00:07:53.080
Right.

121
00:07:53.290 --> 00:07:55.720
And at the same time, what do I want to do?

122
00:07:55.930 --> 00:08:00.540
I want to console I want to log to the console and message as well.

123
00:08:00.790 --> 00:08:03.310
So the message is going to be console the log.

124
00:08:04.570 --> 00:08:08.470
And I just want to say that the.

125
00:08:10.450 --> 00:08:18.740
Change big button has been collected.

126
00:08:19.480 --> 00:08:25.210
I just want to do that, so now technically when I click on this button, we should see the background

127
00:08:25.210 --> 00:08:28.620
color change and we should see some sort of message down here.

128
00:08:28.930 --> 00:08:30.120
So let's go ahead and click it.

129
00:08:30.140 --> 00:08:37.450
Weida We see that this background color has changed and we see that it says the change button has been

130
00:08:37.450 --> 00:08:37.870
clicked.

131
00:08:38.289 --> 00:08:46.210
And congratulations on creating your very first event and you're on your way to become a very fantastic

132
00:08:46.360 --> 00:08:46.930
developer.

133
00:08:47.740 --> 00:08:51.700
So now let's go ahead and let's implement an if listener for this.

134
00:08:51.850 --> 00:08:57.460
So when the user clicks the reset, B.G., we want the background color of the body to go to.

135
00:08:57.460 --> 00:08:59.600
It's like maybe the original was white.

136
00:08:59.620 --> 00:09:00.850
We wanted to go to white.

137
00:09:02.280 --> 00:09:09.540
So in here, what I'm going to do is I'm going to, first off, grab the reset button, so I'm going

138
00:09:09.540 --> 00:09:18.110
to say reset button document dot, query selector.

139
00:09:19.100 --> 00:09:22.440
All right, and what is the class name off of this button?

140
00:09:22.610 --> 00:09:30.090
It is dot reset dash, which you can't check it out, but I'm not going to sew.

141
00:09:30.150 --> 00:09:31.010
So in here.

142
00:09:31.400 --> 00:09:33.190
Now, what do we want to do?

143
00:09:33.210 --> 00:09:41.060
I'm I'm explaining this at this event event listeners in depth at the start, because when we get to

144
00:09:41.060 --> 00:09:48.290
creating what I always say websites, when we get to creating apps and projects, then there are a lot

145
00:09:48.290 --> 00:09:51.350
of other complicated stuff that I need to explain.

146
00:09:51.470 --> 00:09:57.410
And I'm just going to be writing the ad of a listener and I'm going to expect you guys to understand

147
00:09:57.410 --> 00:10:04.760
what I'm saying, what I'm writing, actually, because I have to explain the advanced stuff I cannot

148
00:10:04.760 --> 00:10:05.120
like.

149
00:10:05.930 --> 00:10:08.290
What is it the word Klencke on this ad?

150
00:10:08.340 --> 00:10:08.930
One listener.

151
00:10:08.930 --> 00:10:11.700
And every time it comes up, I should explain it in depth.

152
00:10:11.870 --> 00:10:15.660
No, that is not how I like like web development works.

153
00:10:15.860 --> 00:10:22.250
That's why when a new fresh topic starts it, it should be explained thoroughly.

154
00:10:22.400 --> 00:10:31.040
And afterwards, it just it is just typed and the next fresh topic is going to be explained thoroughly.

155
00:10:31.370 --> 00:10:31.640
All right.

156
00:10:31.880 --> 00:10:38.000
So this reset button, we want to we want to grab the reset button and whatever the reset button is

157
00:10:38.000 --> 00:10:38.540
clicked.

158
00:10:38.840 --> 00:10:40.970
We want to listen for a click.

159
00:10:41.150 --> 00:10:49.190
So let's grab the reset button where our reset button and no user does.

160
00:10:49.190 --> 00:10:52.340
The clicking user carries out the event.

161
00:10:52.460 --> 00:10:55.640
We as developers, we listen for that event.

162
00:10:55.850 --> 00:10:57.920
So we set out a listener.

163
00:10:58.580 --> 00:10:59.630
And what is the event?

164
00:10:59.630 --> 00:11:00.980
The event is the click.

165
00:11:01.370 --> 00:11:05.030
And after it has been clicked, we are going to run a callback function.

166
00:11:06.490 --> 00:11:07.490
What do we want to do?

167
00:11:07.870 --> 00:11:11.710
Basically, we want to do these two lines and I'm going to paste him right here.

168
00:11:13.130 --> 00:11:19.280
We want to change the background color of the body to faith, and I'm going to say the reset button

169
00:11:19.280 --> 00:11:21.980
has been correct, the reset button.

170
00:11:22.280 --> 00:11:27.170
So now if I click on change, we are going to say the change button has been click.

171
00:11:27.290 --> 00:11:32.420
And when I click on the reset, the background color is going to reset and it's going to say the reset

172
00:11:32.780 --> 00:11:33.920
button has been clicked.

173
00:11:34.250 --> 00:11:41.720
Think of this is as a very, very low level, very, very small, tiny, miniscule application.

174
00:11:42.260 --> 00:11:49.850
But it conveys this point and it conveys the strength and power and potential of dumb events.

175
00:11:50.200 --> 00:11:51.320
That's it for this lecture.

176
00:11:51.440 --> 00:11:53.000
See you guys in the next one.

