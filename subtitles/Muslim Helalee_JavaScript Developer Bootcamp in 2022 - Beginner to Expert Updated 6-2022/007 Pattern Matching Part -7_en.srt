1
00:00:02,550 --> 00:00:05,460
Hi, everyone, welcome to Matching Part seven.

2
00:00:06,689 --> 00:00:13,370
All right, so an example, example, number 25, we're going to check for all or none.

3
00:00:14,280 --> 00:00:21,750
Right, so this is the case of, for example, we have for example, you know what, I'm just going

4
00:00:21,750 --> 00:00:27,420
to go ahead and create it so we have a sentence and I'm going to call it a sentence two.

5
00:00:27,660 --> 00:00:35,010
And you know how there are like different words for different things, like in American English and

6
00:00:35,010 --> 00:00:42,840
in British English, for example, in American, it is just s.L, COLB or I think this is American.

7
00:00:43,080 --> 00:00:46,010
And in British we have like not we.

8
00:00:46,530 --> 00:00:48,420
Yeah, of course we I'm speaking English.

9
00:00:48,600 --> 00:00:50,610
So in British we have you.

10
00:00:51,120 --> 00:00:52,860
So you want to match.

11
00:00:53,100 --> 00:00:58,250
If the word has that extra you or it doesn't have that extra you.

12
00:00:58,710 --> 00:01:05,670
So we are, we want to check for that or it doesn't matter if it, if it is there or if it is not there.

13
00:01:06,960 --> 00:01:11,890
OK, I don't think this name conveys that, but I'm just going to leave it there.

14
00:01:12,060 --> 00:01:14,990
You can go ahead and come up with a better name for this example.

15
00:01:15,600 --> 00:01:21,840
So in case we have that COLB, you are what it is that we are going to do.

16
00:01:22,020 --> 00:01:26,100
So we are going to create a regular expression, number 25.

17
00:01:26,610 --> 00:01:33,780
And what it is, the pattern that we are going to insert that is going to ignore that extra you so that

18
00:01:33,780 --> 00:01:35,090
it is not going to ignore it.

19
00:01:35,100 --> 00:01:38,730
It is just going to say that that you is optional.

20
00:01:39,030 --> 00:01:45,470
So if we find that you are inside that word, then the pattern is true.

21
00:01:45,480 --> 00:01:50,500
If even if we don't find it, that then the pattern is going to be true as well.

22
00:01:50,850 --> 00:01:55,290
So with a pattern found might or might not contain the letter you.

23
00:01:55,620 --> 00:02:02,910
So in any case, even if it contains it, even if it doesn't contain it, we are we want to return to

24
00:02:02,910 --> 00:02:05,650
you because color and color, both of them are the same.

25
00:02:06,120 --> 00:02:08,880
So I'm just going to write the word here.

26
00:02:09,180 --> 00:02:14,580
But when I put in the you am just going to provide it with with an optional question mark.

27
00:02:15,910 --> 00:02:18,470
All right, and now let's create a result.

28
00:02:18,500 --> 00:02:19,910
So this is resolved.

29
00:02:20,950 --> 00:02:25,840
Now, this is a search we used to do search 25 result.

30
00:02:26,500 --> 00:02:26,920
Right.

31
00:02:27,040 --> 00:02:28,680
And what do we want to do?

32
00:02:28,720 --> 00:02:35,020
So now what I'm going to do is I'm just going to test it because I want to see whether or not this is

33
00:02:35,020 --> 00:02:36,580
actually true or false.

34
00:02:37,450 --> 00:02:40,060
So I'm going to grab on a regular expression.

35
00:02:41,950 --> 00:02:46,810
And upon which, upon this, I want to test it right and.

36
00:02:48,810 --> 00:02:51,720
Test, I want to test that sentence.

37
00:02:51,750 --> 00:02:59,720
So let's go ahead and write sentence number two and I think we should open up a live server.

38
00:03:00,210 --> 00:03:05,000
So let's come here and let's check it out, says life server.

39
00:03:05,010 --> 00:03:07,980
OK, let's log it to the console.

40
00:03:08,970 --> 00:03:14,340
What it is, it's a search 25 result we get through, why do we get through?

41
00:03:14,520 --> 00:03:23,040
Because this contains the letter you if I come in that one out and if I remove it, we still get through,

42
00:03:23,220 --> 00:03:26,720
because this is the optional question mark right here.

43
00:03:26,730 --> 00:03:27,780
This is the lazy.

44
00:03:27,960 --> 00:03:29,400
It is just looking for that.

45
00:03:29,700 --> 00:03:32,480
Whether or not we find it, we are going to get through.

46
00:03:32,970 --> 00:03:38,700
But what if I go ahead and I comment that one out not there.

47
00:03:38,700 --> 00:03:41,090
I'm just going to remove that question mark.

48
00:03:41,310 --> 00:03:42,480
Now we get a false.

49
00:03:42,660 --> 00:03:47,970
But if I come in this one in, we get through because there isn't we are just looking for this.

50
00:03:47,970 --> 00:03:51,620
And if I this could be another one.

51
00:03:51,630 --> 00:03:54,720
So let's come in this one and we get false for this one.

52
00:03:54,720 --> 00:03:57,020
And of course, we are going to get true for this one.

53
00:03:57,270 --> 00:04:05,700
So instead of doing two patterns, we can just do one and we can say that that you is actually optional.

54
00:04:06,120 --> 00:04:08,520
So this is you could call it like the optional.

55
00:04:09,270 --> 00:04:10,100
This is up to you.

56
00:04:10,140 --> 00:04:12,570
Did you just come up with a better name for this example?

57
00:04:12,930 --> 00:04:14,840
And that's it for this example.

58
00:04:15,060 --> 00:04:22,050
So the next example is actually going to be our final example of this chapter sorry, this lecture.

59
00:04:23,100 --> 00:04:27,300
And it is called Lookahead.

60
00:04:27,540 --> 00:04:29,580
So we have two kinds of lookahead.

61
00:04:29,850 --> 00:04:33,480
We have a positive lookahead and we have a negative lookahead.

62
00:04:34,020 --> 00:04:34,410
Right.

63
00:04:34,410 --> 00:04:41,940
And this is example number twenty six now lookahead are patterns that tell JavaScript to look ahead

64
00:04:41,940 --> 00:04:45,990
and your string to check for patterns further along.

65
00:04:46,410 --> 00:04:50,000
It is useful for searching for multiple patterns in the same string.

66
00:04:50,370 --> 00:04:52,770
So how do how do these lookahead they work.

67
00:04:53,010 --> 00:04:58,830
So first off, we are just going to go over the positive lookahead the positive lookahead is when we

68
00:04:58,830 --> 00:04:59,970
are looking forward.

69
00:05:00,300 --> 00:05:05,190
The negative lookahead is when we are looking backward, even though it says lookahead.

70
00:05:05,190 --> 00:05:07,260
But we do have negative lookahead as well.

71
00:05:08,710 --> 00:05:17,560
So if I were to create a regular expression, so I'm just going to call it a 26 X, and now let's put

72
00:05:17,560 --> 00:05:22,040
in the pattern that we want to look now I'm going to look for J.

73
00:05:23,560 --> 00:05:29,590
I'm going to this is how I'm going to explain this look ahead, because this is really important in

74
00:05:29,590 --> 00:05:30,640
regular expressions.

75
00:05:30,650 --> 00:05:32,560
That's why I'm stressing a lot on it.

76
00:05:32,800 --> 00:05:35,580
And that's why there are no more examples in this lecture.

77
00:05:36,400 --> 00:05:44,200
So this regular expression is going to match for the letter J.

78
00:05:44,590 --> 00:05:51,490
F if this is a condition, think of it as a conditional, if that's why inside the parentheses, if

79
00:05:51,490 --> 00:05:56,680
and if that J has in front of it a letter U.

80
00:05:57,820 --> 00:06:05,530
If the J has in front of it a letter you then that J is the J that we are looking for and we want to

81
00:06:05,530 --> 00:06:06,760
print it to the console.

82
00:06:07,690 --> 00:06:14,740
All right, again, if after Jay, we have you, we want to grab that, Jay, so we are looking for

83
00:06:14,740 --> 00:06:18,700
jobs which have a you in front of them.

84
00:06:19,330 --> 00:06:19,830
Right.

85
00:06:20,080 --> 00:06:23,110
So, you know what?

86
00:06:23,620 --> 00:06:24,100
Excuse me.

87
00:06:24,100 --> 00:06:31,210
I'm just going to say jumps Jarek's So we do have a Jay here as well, but it has in front of it and.

88
00:06:31,210 --> 00:06:33,820
Oh, so that should not match for this one.

89
00:06:34,240 --> 00:06:34,620
All right.

90
00:06:34,630 --> 00:06:37,120
And you know what?

91
00:06:37,180 --> 00:06:39,810
Let's copy this to spot right here.

92
00:06:39,940 --> 00:06:41,070
We are going to test it.

93
00:06:41,080 --> 00:06:42,400
We are not going to print it.

94
00:06:42,660 --> 00:06:45,120
We're going to test it because true and false is better.

95
00:06:45,340 --> 00:06:47,970
You know how you can print it through the match.

96
00:06:48,250 --> 00:06:50,200
So that's completely up to you.

97
00:06:50,200 --> 00:06:51,780
You know how you can do that.

98
00:06:52,390 --> 00:06:59,410
And let's grab all the 20 fives and let's turn them to 26.

99
00:06:59,740 --> 00:07:03,300
So this is going to be sentence the first sentence.

100
00:07:03,670 --> 00:07:06,250
Now we are going to test it against this.

101
00:07:06,250 --> 00:07:08,010
And when I say it, we get true.

102
00:07:08,500 --> 00:07:09,370
Why do we get through?

103
00:07:09,370 --> 00:07:16,750
Because we have at least one Jay that has in front of it a letter you now keep in mind, whenever you

104
00:07:16,750 --> 00:07:18,940
do match, it is not going to return.

105
00:07:18,940 --> 00:07:22,180
The you the you is basically a condition.

106
00:07:22,360 --> 00:07:27,370
If that condition is met, we are going to print whatever comes before the condition.

107
00:07:27,610 --> 00:07:33,670
So before the condition, we are going to suggest we are going to print it now, whenever.

108
00:07:33,700 --> 00:07:39,130
Now in both of the lookahead, whether it is positive or negative, you're going to get this question

109
00:07:39,130 --> 00:07:40,240
mark and the parentheses.

110
00:07:40,600 --> 00:07:46,120
But when it has the negative lookahead, we know what the knot operator is in JavaScript.

111
00:07:46,540 --> 00:07:50,750
That is the like the exclamation mark.

112
00:07:50,770 --> 00:07:55,300
OK, so if you have exclamation mark in here, it is the negative lookahead.

113
00:07:55,450 --> 00:07:57,220
So let's go over that as well.

114
00:07:57,460 --> 00:08:01,970
Maybe like go over this like go over a few scenarios for this.

115
00:08:02,470 --> 00:08:06,160
So now let's go ahead and let's put in oh we should get through.

116
00:08:06,700 --> 00:08:16,240
But if I put in like, like m we should get false because we don't have any J in front of which we have

117
00:08:16,240 --> 00:08:20,920
M we have js in front of which we have you or Oh we don't have M.

118
00:08:20,920 --> 00:08:22,330
That's a second letter.

119
00:08:22,450 --> 00:08:23,590
We don't care about that.

120
00:08:23,830 --> 00:08:28,600
We care like directly after J we should have O and you.

121
00:08:28,840 --> 00:08:31,330
If we have only you we get true.

122
00:08:31,330 --> 00:08:34,990
If we have anything else we are going to get false.

123
00:08:36,289 --> 00:08:43,309
All right, so now let's go ahead and let's talk about the negative look ahead, so let's change it

124
00:08:43,309 --> 00:08:47,690
to negative lookahead and the negative loggerhead.

125
00:08:47,710 --> 00:08:51,770
I'm just going to talk I'm just going to grab this example one more time.

126
00:08:53,820 --> 00:08:54,320
You know what?

127
00:08:54,360 --> 00:08:57,230
Only these three, and I'm going to paste him right here.

128
00:08:59,190 --> 00:09:05,670
That's common to all of them, and so we have an equality sign, it means that this is a positive look

129
00:09:05,670 --> 00:09:06,030
ahead.

130
00:09:06,330 --> 00:09:09,510
If we have an exclamation, it means in negative look ahead.

131
00:09:10,020 --> 00:09:10,320
All right.

132
00:09:10,500 --> 00:09:12,270
So in the negative, look ahead.

133
00:09:12,270 --> 00:09:20,370
We say that if this j if this J and I have to apologize, because at the start of this lecture, I said

134
00:09:20,370 --> 00:09:23,550
that when it is positive, we are looking forward.

135
00:09:23,550 --> 00:09:25,590
When it is negative, we are looking backward.

136
00:09:25,590 --> 00:09:30,540
And I even joked about, even though it is a look ahead and I have to apologize for that because that

137
00:09:30,540 --> 00:09:38,040
was actually not accurate, even though even if it is positive or negative, we are basically looking

138
00:09:38,040 --> 00:09:38,550
ahead.

139
00:09:39,030 --> 00:09:41,380
OK, it's not like we are looking backward.

140
00:09:41,700 --> 00:09:45,270
We are just testing for a condition when that condition is true.

141
00:09:45,670 --> 00:09:57,080
And in this case, we are testing in the case of positive lookahead, we are testing for a like a positive.

142
00:09:57,420 --> 00:10:06,490
I'm just going to get positive for a positive condition to be true and for a negative look ahead.

143
00:10:06,780 --> 00:10:11,060
Again, I do apologize for that misinformation and I want to correct it.

144
00:10:11,400 --> 00:10:15,030
I could like we do this video, but I'm not going to do because.

145
00:10:17,500 --> 00:10:20,920
Teachers, they do mistakes, they commit crimes as well.

146
00:10:21,730 --> 00:10:28,360
So we are testing for a negative condition to be true, even though this is negative.

147
00:10:28,510 --> 00:10:34,030
We want that negative condition to be true in order for this entire thing to return.

148
00:10:34,870 --> 00:10:37,220
OK, so I hope I hope you're not getting confused.

149
00:10:37,510 --> 00:10:39,930
So the results of this should be true.

150
00:10:39,970 --> 00:10:48,880
If I say that we get true because we do not have any genes that have in front of them and em when we

151
00:10:48,880 --> 00:10:52,000
do not have them, it means that it is a negative condition.

152
00:10:52,510 --> 00:10:56,980
And when that negative condition returns, true, we are going to get through in here.

153
00:10:58,180 --> 00:11:04,090
But what if what if I put a few here now before running this?

154
00:11:04,570 --> 00:11:09,000
If we come here, we can see that we have a gene that has in front of it a you.

155
00:11:09,400 --> 00:11:14,170
So this condition is not this negative condition is not true.

156
00:11:14,200 --> 00:11:20,270
This negative condition, the condition is negative, but the status of this condition is false.

157
00:11:20,620 --> 00:11:22,720
That's why it is going to return false.

158
00:11:23,440 --> 00:11:24,700
Well, it did return.

159
00:11:24,700 --> 00:11:25,270
True.

160
00:11:25,870 --> 00:11:33,050
So we are going to get any that doesn't have that doesn't have you.

161
00:11:33,100 --> 00:11:36,060
So it is going to give us true because there is true.

162
00:11:36,220 --> 00:11:38,030
So let's go ahead and let's match it.

163
00:11:38,560 --> 00:11:44,820
So if I were to match it, I'm just going to come and this one out and I'm going to create another variable.

164
00:11:46,150 --> 00:11:46,690
You know what?

165
00:11:46,690 --> 00:11:48,750
This part is going to be the same.

166
00:11:48,760 --> 00:11:49,710
Let's put it here.

167
00:11:49,720 --> 00:11:52,090
Let's see what it is going to give us in the console.

168
00:11:52,510 --> 00:11:57,430
So let's grab our sentence and we are going to say match what it is, what it is that we're going to

169
00:11:57,430 --> 00:12:01,050
match it against regular expression 26.

170
00:12:01,300 --> 00:12:11,620
So we do get that even though this condition says that we want to get if after gee, there isn't any

171
00:12:11,620 --> 00:12:13,360
you print.

172
00:12:13,810 --> 00:12:18,990
Oh, I know why it did that, because we do have this jogs in here as well.

173
00:12:19,240 --> 00:12:23,800
So for the for clarification purposes, I'm just going to remove that.

174
00:12:23,920 --> 00:12:25,090
And now we get no.

175
00:12:25,720 --> 00:12:28,410
And now this is working as I expected it.

176
00:12:28,420 --> 00:12:37,690
We get false because we don't have any JS that there isn't a you in front of them.

177
00:12:38,020 --> 00:12:40,510
We only have one Jadot in front of that.

178
00:12:40,810 --> 00:12:41,510
There is a you.

179
00:12:41,680 --> 00:12:43,810
So we are going to go over this one more time.

180
00:12:44,110 --> 00:12:52,990
So this negative condition, it has to have a status of true for this entire regular expression to return.

181
00:12:52,990 --> 00:12:53,410
True.

182
00:12:54,040 --> 00:12:59,400
But it says that a J that doesn't have you in front of it.

183
00:12:59,890 --> 00:13:08,530
It did say true because we had dogs and dogs had a J in front of which we had an O, and in that case

184
00:13:08,530 --> 00:13:10,810
this condition was true.

185
00:13:10,960 --> 00:13:14,310
Even though the condition is negative, the status is true.

186
00:13:14,620 --> 00:13:23,770
But now that that I have removed that it says find a G that in front of it, it doesn't have a Q So

187
00:13:23,770 --> 00:13:25,540
let's go ahead, find it.

188
00:13:25,550 --> 00:13:26,860
There is nothing in here.

189
00:13:27,160 --> 00:13:32,920
So this entire condition is the status of this entire condition is going to be false.

190
00:13:32,920 --> 00:13:34,990
That's why this is going to return false.

191
00:13:35,980 --> 00:13:39,850
And let's say that we see false.

192
00:13:39,850 --> 00:13:41,230
Let's comment this one out.

193
00:13:41,680 --> 00:13:42,790
That's common, this one.

194
00:13:42,790 --> 00:13:43,780
And we get through.

195
00:13:43,780 --> 00:13:44,260
Why?

196
00:13:44,560 --> 00:13:48,160
Because we are looking for a J that in front of it.

197
00:13:48,160 --> 00:13:51,730
There is not an M, so let's go ahead and check.

198
00:13:51,730 --> 00:13:52,780
Yep, there it is.

199
00:13:53,500 --> 00:13:56,890
And so this negative condition is going to have a status.

200
00:13:56,890 --> 00:14:02,950
If true, that's why this entire thing is going to return trip that set for the negative, positive

201
00:14:02,950 --> 00:14:04,060
and negative look ahead.

202
00:14:04,090 --> 00:14:06,130
I hope you have understood that.

203
00:14:06,130 --> 00:14:11,320
And again, apologize for the third time for that misinformation that I gave you.

204
00:14:11,320 --> 00:14:12,850
It was my bad, my mistake.

205
00:14:13,840 --> 00:14:16,750
And both of the look ahead, they look ahead.

206
00:14:16,960 --> 00:14:20,200
But one of them is going to have a positive condition.

207
00:14:20,200 --> 00:14:23,500
The other one is going to have a negative condition to be true.

208
00:14:23,800 --> 00:14:24,190
Right.

209
00:14:24,400 --> 00:14:26,650
So see you guys in the next lecture.

