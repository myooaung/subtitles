1
00:00:01,580 --> 00:00:02,510
Hi, everyone.

2
00:00:02,660 --> 00:00:07,400
In this lecture, we are going to talk about the extents and super clauses.

3
00:00:08,710 --> 00:00:14,440
All right, so first off, what is the extents clause that we have written here?

4
00:00:15,160 --> 00:00:21,910
All right, so if you want to extend one class into another class, we use the extended clause.

5
00:00:22,810 --> 00:00:23,920
Why do we want to do that?

6
00:00:24,160 --> 00:00:31,600
So we don't have to redefine any other methods that are already defined in the workshop.

7
00:00:32,920 --> 00:00:42,220
Class, right, because they can be so-called inherited using the extends clause so we can inherit this

8
00:00:42,220 --> 00:00:46,060
method and we can inherit the this method if we do.

9
00:00:46,240 --> 00:00:48,340
And so this another workshop.

10
00:00:48,340 --> 00:00:50,260
This is another workshop.

11
00:00:50,980 --> 00:00:51,940
Hence this.

12
00:00:52,630 --> 00:00:55,710
The first letter is capital for the classroom.

13
00:00:55,990 --> 00:00:58,480
And we say that we want to extend the workshop.

14
00:00:58,480 --> 00:01:03,430
So whenever we do extend, we get access to all the data that's inside the workshop.

15
00:01:03,940 --> 00:01:11,640
And in here we have a method or a function that is speak up and a message as Pastan as a parameter.

16
00:01:11,680 --> 00:01:11,980
Right.

17
00:01:12,300 --> 00:01:13,900
And it says this don't ask.

18
00:01:13,900 --> 00:01:15,920
So we are invoking this function.

19
00:01:16,360 --> 00:01:21,330
So now if I run this code, what is the this keyword is going to point out?

20
00:01:21,610 --> 00:01:25,000
First off, we have two different kinds of discourse.

21
00:01:25,300 --> 00:01:27,190
One of the discourse is right here.

22
00:01:27,200 --> 00:01:29,100
The other one is inside this class.

23
00:01:29,260 --> 00:01:31,310
So we have two different this keywords.

24
00:01:31,840 --> 00:01:35,440
So let's first off talk about that, this key word, which is right here.

25
00:01:36,750 --> 00:01:44,370
So if we go ahead and call this workshop and we can see that we have not called it, we just we have

26
00:01:44,370 --> 00:01:45,990
just called the another workshop.

27
00:01:46,440 --> 00:01:46,790
All right.

28
00:01:46,950 --> 00:01:50,070
So but what happens here is this.

29
00:01:50,070 --> 00:01:52,620
Another workshop extends the workshop.

30
00:01:53,010 --> 00:01:55,470
So we need to go inside this, another workshop.

31
00:01:55,470 --> 00:01:57,450
First off, where is the workshop called?

32
00:01:57,630 --> 00:01:59,520
It's called online number 16.

33
00:02:00,120 --> 00:02:01,400
This is the call site.

34
00:02:02,010 --> 00:02:05,380
So we want to find out what this is referring to.

35
00:02:05,460 --> 00:02:05,830
All right.

36
00:02:06,060 --> 00:02:09,979
So this is going to bring us to line number 69 from the line number 16.

37
00:02:10,000 --> 00:02:11,400
We are going to go inside this.

38
00:02:12,760 --> 00:02:22,420
In here, we can see that we have another this, so we can see that this this is going to reverse this,

39
00:02:22,420 --> 00:02:26,030
this and what is this this referring to?

40
00:02:26,230 --> 00:02:28,570
So we need to go to where this functions.

41
00:02:28,570 --> 00:02:30,310
Speak up has been invoked.

42
00:02:30,640 --> 00:02:33,210
The function speak up has been invoked in here.

43
00:02:33,550 --> 00:02:42,910
So the function speak up has been invoked as a method on this python, which is an object which has

44
00:02:42,910 --> 00:02:43,660
been created.

45
00:02:43,660 --> 00:02:46,020
But the new keyword, which is right here.

46
00:02:46,510 --> 00:02:46,830
All right.

47
00:02:46,990 --> 00:02:55,660
So this python, it should have this key word on it, which comes from the new object which has been

48
00:02:55,960 --> 00:02:59,010
created when we call this another workshop.

49
00:02:59,650 --> 00:03:00,010
All right.

50
00:03:00,160 --> 00:03:05,410
And we say that that is due and we passed as an argument, which is Julian.

51
00:03:06,530 --> 00:03:14,390
All right, so what happens is when we say that speak up, this is the teaches by Python message is

52
00:03:14,390 --> 00:03:16,000
going to be teach us Python.

53
00:03:16,370 --> 00:03:17,720
But what about this, Julia?

54
00:03:17,930 --> 00:03:23,900
Because we are extending the workshop, it means that we are grabbing this constructor and we are grabbing

55
00:03:23,900 --> 00:03:24,890
this aske function.

56
00:03:25,280 --> 00:03:30,850
This Julian is going to be passed in here instead of this teacher and also passed in here.

57
00:03:31,040 --> 00:03:35,750
So we are going to get that this teacher is going to be equal to Julie, right.

58
00:03:35,930 --> 00:03:40,730
Because we don't have any any other method in here.

59
00:03:41,210 --> 00:03:48,690
Whenever we call, whenever we extend the workshop to this another workshop, it it means like this.

60
00:03:48,690 --> 00:03:51,940
So I'm just going to copy this and I'm going to pass it right here.

61
00:03:52,130 --> 00:03:53,540
So now it makes more sense.

62
00:03:53,570 --> 00:03:53,860
Right.

63
00:03:54,170 --> 00:03:58,120
So we are going to pass on this, another workshop inside the constructor.

64
00:03:58,400 --> 00:04:02,850
So this Julie-Anne is going to pass past in here and then ultimately passed here.

65
00:04:03,050 --> 00:04:07,550
So this of this constructor is going to refer to Jullian.

66
00:04:07,560 --> 00:04:08,500
So this is done.

67
00:04:08,510 --> 00:04:11,690
I'm just going to remove it from here so we know what this is.

68
00:04:11,930 --> 00:04:15,980
So this is going to be Julian, this star teacher is going to be Julian.

69
00:04:16,100 --> 00:04:19,180
And then the question, so where is the question coming from?

70
00:04:20,360 --> 00:04:21,050
The question?

71
00:04:21,050 --> 00:04:23,250
We are asking the question right here.

72
00:04:23,450 --> 00:04:25,720
So the question is this argument.

73
00:04:25,910 --> 00:04:31,190
So this argument is going to be passed inside this perimeter and this parameter is going to pass.

74
00:04:31,190 --> 00:04:37,780
It has an argument in here to this ask so we know the question is going to be teachers by thought,

75
00:04:37,940 --> 00:04:39,660
and I'm just going to remove that as well.

76
00:04:39,890 --> 00:04:41,180
So what about this?

77
00:04:41,540 --> 00:04:47,960
What is the this key word in here, inside this another workshop, what inside the speaker function

78
00:04:48,080 --> 00:04:49,220
is going to refer to?

79
00:04:49,370 --> 00:04:51,770
So we need to go to where it is called.

80
00:04:51,920 --> 00:04:54,170
It is called on line number 17.

81
00:04:54,590 --> 00:04:57,470
And we can say that it has been called on the python.

82
00:04:57,890 --> 00:05:02,600
OK, and Python is a new object that has been created by the new keyword.

83
00:05:03,140 --> 00:05:09,370
And that object has one method in it sorry, one property in it, and that is teacher.

84
00:05:09,950 --> 00:05:14,680
So we are going to grab that teacher and we are going to pass it right here.

85
00:05:14,690 --> 00:05:18,020
So this ask is going to be Teacher Dot ask.

86
00:05:18,660 --> 00:05:19,010
All right.

87
00:05:19,190 --> 00:05:20,720
And what is the teacher asking?

88
00:05:21,170 --> 00:05:24,260
The teacher asking this this argument.

89
00:05:24,260 --> 00:05:25,630
I hope you're not getting confused.

90
00:05:25,880 --> 00:05:29,760
This is how classes work in OLP pattern.

91
00:05:29,780 --> 00:05:30,130
All right.

92
00:05:30,140 --> 00:05:36,420
So what I'm going to do is whenever I save it, whenever I run this code, we are going to see first

93
00:05:36,440 --> 00:05:41,210
off, Julian, because that is the first argument in here, OK?

94
00:05:41,360 --> 00:05:43,640
Because this is the only council that we have.

95
00:05:43,910 --> 00:05:46,200
OK, so this is going to log it to the console.

96
00:05:46,850 --> 00:05:50,300
So this the teacher is going to be juliann the question.

97
00:05:50,510 --> 00:05:51,410
Where is the question?

98
00:05:51,440 --> 00:05:56,840
The question is teachers python, because this is passed right here and then pass right here and then

99
00:05:56,840 --> 00:05:57,410
right here.

100
00:05:57,800 --> 00:06:02,050
This task is going to refer to this aske, which is right here.

101
00:06:02,240 --> 00:06:02,520
Right.

102
00:06:02,690 --> 00:06:08,320
So if I say it, we are going to see Julieann teaches Python and we can see that Julieann teaches Python.

103
00:06:08,510 --> 00:06:14,000
It is a bit complicated, but once you get the hang of this, you will know, OK, that you are going

104
00:06:14,000 --> 00:06:17,870
to go up and down until you find what the this refers to.

105
00:06:18,140 --> 00:06:24,380
And when you find one that this refers to, basically you can master object oriented programming, like

106
00:06:24,380 --> 00:06:25,310
very easily.

107
00:06:26,360 --> 00:06:28,320
So this is the extents clause.

108
00:06:28,340 --> 00:06:31,790
The next example that I want to talk about is going to be the super class.

109
00:06:32,120 --> 00:06:38,960
So I'm just going to say extend extends and then we have super and I'm going to also tell you what is

110
00:06:38,960 --> 00:06:39,670
the difference.

111
00:06:40,130 --> 00:06:46,760
So I'm just going to go ahead and come in this code out and I'm going to go over this code.

112
00:06:46,940 --> 00:06:49,640
I'm just going to copy it and I'm going to paste right here.

113
00:06:50,180 --> 00:06:55,790
I am going to come in this one out and we are not going to run anything for now.

114
00:06:56,370 --> 00:07:02,130
OK, so what do we have here is now when do we when do we use the extent?

115
00:07:02,480 --> 00:07:08,370
So in the class system, we also have this this sorry, when we use the super.

116
00:07:08,600 --> 00:07:16,940
So in the class system we also have the super and we use it whenever we want to, whenever we want to

117
00:07:16,940 --> 00:07:18,830
do relative polymorphism.

118
00:07:19,190 --> 00:07:22,040
What is the what is relative polymorphism.

119
00:07:22,430 --> 00:07:31,220
Relative polymorphism is if you have a child class like another workshop that defines a method of the

120
00:07:31,220 --> 00:07:37,140
same name, which is ask OK, as a parent class, as this class.

121
00:07:37,580 --> 00:07:44,270
So this workshop has a method ask, which is the parent of this another workshop, because this is this

122
00:07:44,270 --> 00:07:48,500
is going to extend it so you can see that super works with extents.

123
00:07:49,070 --> 00:07:53,780
And now we have this we have a method that is had that has the same name as this one.

124
00:07:55,070 --> 00:08:02,030
OK, this is also called shadowing, and we can refer now what is this super going to allow us?

125
00:08:02,030 --> 00:08:08,330
We can refer to the parent from the child by saying Souper Dout.

126
00:08:09,230 --> 00:08:12,560
So this is the method which is called Inside Another Workshop.

127
00:08:12,560 --> 00:08:13,520
I'm just going to bring it up.

128
00:08:14,030 --> 00:08:21,950
And whenever we say super dot, it means that the parent of this, another workshop has a method called

129
00:08:21,950 --> 00:08:22,520
Aske.

130
00:08:23,060 --> 00:08:28,670
And the argument for that method is going to come from this aske.

131
00:08:28,970 --> 00:08:35,120
So we grab the message and we say to uppercase, I could just remove this to uppercase just to remove

132
00:08:35,120 --> 00:08:42,860
the confusion and assist Trever teachers react apart from the super that it is going to just point to

133
00:08:42,860 --> 00:08:46,130
the method which is defined on its parent.

134
00:08:46,340 --> 00:08:49,460
Apart from this, everything works in the same way.

135
00:08:50,270 --> 00:08:52,670
And I'm going to go over this one more time, OK?

136
00:08:53,180 --> 00:09:00,110
And before going over this, I just want to say that this is an example of extension beyond syntactic

137
00:09:00,110 --> 00:09:07,190
sugar, because prior to E is six classes, there was there was essentially no way to do relative Molefe,

138
00:09:08,360 --> 00:09:11,900
relative polymorphism, very, very difficult word.

139
00:09:13,580 --> 00:09:16,700
There was no equivalent of the super keyword.

140
00:09:17,000 --> 00:09:24,020
And whenever we get to the prototypes, we can see that we can only extend classes or prototypes.

141
00:09:24,020 --> 00:09:26,870
In that case, we cannot do the super.

142
00:09:26,870 --> 00:09:31,910
We cannot, like, do the same class names in both of the prototypes.

143
00:09:32,570 --> 00:09:32,980
Right.

144
00:09:32,990 --> 00:09:35,900
So we are going to go over this one more time.

145
00:09:36,110 --> 00:09:39,470
So in here we have a class that is called workshop inside.

146
00:09:39,470 --> 00:09:43,250
There we have a constructor and we have a method called Aske.

147
00:09:43,820 --> 00:09:45,500
We do have this teacher.

148
00:09:45,590 --> 00:09:45,950
Right.

149
00:09:46,070 --> 00:09:50,540
And then we have another class of workshop that extends the class workshop.

150
00:09:50,840 --> 00:09:53,510
And we have a method that has the same name.

151
00:09:53,510 --> 00:09:58,390
That is that that a method on the parent has.

152
00:09:58,670 --> 00:10:02,890
So basically here we have a naming collision, but this is not a name in college.

153
00:10:03,500 --> 00:10:08,270
So what do we want to do is we want to we want to run.

154
00:10:08,780 --> 00:10:13,040
We want to call this another workshop class, which is actually a function.

155
00:10:13,190 --> 00:10:14,900
And we want to pass in the TREVER.

156
00:10:15,350 --> 00:10:23,510
So whenever we extend it means that we grab all of these and we put them right here, OK, we extend

157
00:10:23,510 --> 00:10:24,520
all the classes here.

158
00:10:24,800 --> 00:10:31,610
So this way, I know this is not like literally this is literally this is not something that is happening,

159
00:10:31,610 --> 00:10:34,710
but a runtime this is actually what's happening.

160
00:10:34,760 --> 00:10:36,770
OK, we are not rearranging the code.

161
00:10:36,770 --> 00:10:39,310
I'm just showing you how this actually works.

162
00:10:39,800 --> 00:10:42,650
So what I pass in Trever, let's go one level up.

163
00:10:42,830 --> 00:10:49,850
So when I pass in Trever, this driver is going to be passed inside this constructor, the inside this

164
00:10:49,850 --> 00:10:52,300
parameter and then is going to be passed here.

165
00:10:52,700 --> 00:10:55,850
So this DOT teacher is going to be equal to Trever.

166
00:10:56,180 --> 00:10:57,440
So this line is done.

167
00:10:57,560 --> 00:10:59,930
You know what that this is going to refer to?

168
00:11:00,980 --> 00:11:07,580
And because that this the teacher is equal to Trever, we know that the first argument inside this,

169
00:11:08,180 --> 00:11:14,540
the first part of this argument is going of this log for this log function is going to be.

170
00:11:14,540 --> 00:11:17,900
Trever, what is the second argument, which is this question?

171
00:11:18,210 --> 00:11:22,220
OK, so let's go ahead and let's see where this function is called.

172
00:11:22,250 --> 00:11:23,420
Where is this function?

173
00:11:23,420 --> 00:11:24,410
Ask this call.

174
00:11:24,800 --> 00:11:26,930
The function asked is called right here.

175
00:11:27,110 --> 00:11:31,700
So which one of these two asks is actually this function of call?

176
00:11:32,000 --> 00:11:37,670
We can see that this is a function declaration and this is a function call because both of them have

177
00:11:37,670 --> 00:11:41,540
the same name we tag on a super dot.

178
00:11:41,870 --> 00:11:51,020
It means that we can use the same names for classes as we have in the parent and the same name for the

179
00:11:51,020 --> 00:11:51,890
child as well.

180
00:11:52,730 --> 00:12:00,560
So so if I pass in a program an argument to this parameter for this function declaration, that argument,

181
00:12:01,010 --> 00:12:06,290
which is now a parameter in here, is going to be passed again, as an argument for this ask question,

182
00:12:06,680 --> 00:12:07,910
where is this coming from?

183
00:12:07,920 --> 00:12:12,830
So how can I how can I pass it then pass a parameter here.

184
00:12:13,160 --> 00:12:14,510
OK, sorry.

185
00:12:14,510 --> 00:12:15,740
Pass an argument here.

186
00:12:15,740 --> 00:12:17,100
I hope you're not getting confused.

187
00:12:17,360 --> 00:12:20,560
So an argument is passed into a parameter.

188
00:12:21,050 --> 00:12:25,430
So in order to find that argument, we need to go to where that function is called.

189
00:12:25,430 --> 00:12:26,880
The function is called right here.

190
00:12:27,230 --> 00:12:28,540
So we are going to grab this.

191
00:12:28,550 --> 00:12:29,360
Teachers react.

192
00:12:29,360 --> 00:12:30,650
We are going to pass it here.

193
00:12:30,990 --> 00:12:35,390
Oops, teachers react.

194
00:12:36,040 --> 00:12:36,980
Let's grab it.

195
00:12:37,550 --> 00:12:40,430
It is going to be passed there and it is going to be passed there.

196
00:12:40,790 --> 00:12:48,290
So now we know that this the teacher is Trever and question is going to be teachers react.

197
00:12:48,740 --> 00:12:49,070
Right.

198
00:12:49,080 --> 00:12:53,750
I'm just going to go one level back and now so this one is done as well.

199
00:12:54,200 --> 00:12:55,700
So now this one is done.

200
00:12:55,700 --> 00:12:57,500
We know what this is referring to.

201
00:12:57,500 --> 00:12:58,880
It is referring to Trever.

202
00:12:59,090 --> 00:13:01,400
We just go to the call site where it is called.

203
00:13:01,730 --> 00:13:05,060
And this when we find it, we know that this is Dreaver.

204
00:13:05,060 --> 00:13:06,110
And where is the question?

205
00:13:06,110 --> 00:13:07,250
We go to the call side.

206
00:13:07,550 --> 00:13:08,840
The call center is here.

207
00:13:09,080 --> 00:13:14,180
Then it is inside this function for this function ask we go to the call side, which is right here.

208
00:13:14,940 --> 00:13:20,240
OK, so it is going to be Superdad ask, so what is super?

209
00:13:20,240 --> 00:13:25,790
It is going to grab this class right here, this method from the workshop class.

210
00:13:26,060 --> 00:13:32,390
And we know that this method is going to return council log teacher Trever and the question which is

211
00:13:32,390 --> 00:13:33,410
teachers react.

212
00:13:33,680 --> 00:13:41,150
So at the end react ask is going to say, Trever, teachers react and it is going to come from line

213
00:13:41,150 --> 00:13:43,720
number twenty seven because this is our cancela.

214
00:13:44,060 --> 00:13:50,950
But we call this function online number 33 and we call the ask function on line thirty eight.

215
00:13:51,110 --> 00:13:55,310
So this is how all of these they are linked together.

216
00:13:55,970 --> 00:14:00,290
That's it for the extents and super clauses.

217
00:14:00,590 --> 00:14:09,020
We are technically we are done with the with the sugar layer of this object oriented programming section

218
00:14:09,020 --> 00:14:09,830
of our course.

219
00:14:10,350 --> 00:14:12,230
Now this is the sugary part.

220
00:14:12,440 --> 00:14:19,400
What is what is actually happening in JavaScript whenever you create classes or what what are these

221
00:14:19,400 --> 00:14:21,680
classes are created based upon?

222
00:14:21,890 --> 00:14:29,990
That is the prototype, OK, which are starting from our next lecture up until the end of this chapter,

223
00:14:30,110 --> 00:14:32,000
we are going to talk about the prototypes.

224
00:14:32,150 --> 00:14:38,090
So, you know, the two sides of this object oriented programming that set for this lecture.

225
00:14:38,100 --> 00:14:39,560
See you guys in the next one.

