1
00:00:01,700 --> 00:00:02,660
Hi, everyone.

2
00:00:02,900 --> 00:00:06,440
In this lecture, we will be creating our constructor.

3
00:00:08,270 --> 00:00:15,950
All right, first things first, we have selected our canvas element and we have got the context 2D

4
00:00:16,100 --> 00:00:19,670
on the canvas element and we have stored it inside the canvas context.

5
00:00:20,090 --> 00:00:23,660
The canvas with is the inner width of the window.

6
00:00:23,660 --> 00:00:27,210
The canvas is height is the inner height of the window.

7
00:00:27,590 --> 00:00:28,910
So first things first.

8
00:00:28,910 --> 00:00:35,840
What I'm going to do before actually grabbing the creating the constructor that we are we will be working

9
00:00:35,840 --> 00:00:37,750
throughout this project.

10
00:00:37,760 --> 00:00:39,290
I want to create the game loop.

11
00:00:39,290 --> 00:00:42,440
So I'm just going to say the game loop.

12
00:00:43,710 --> 00:00:49,590
And the game loop, I'm just going to call this function, and he made balls, so it's going to be animated

13
00:00:49,590 --> 00:00:53,210
balls and there are there aren't going to be any parameters.

14
00:00:53,490 --> 00:00:56,400
So this function is going to request the animation frame.

15
00:00:56,580 --> 00:00:59,450
And inside that, we are going to pass in the functions name.

16
00:01:00,120 --> 00:01:05,090
And right after that, I'm just going to clear the canvas.

17
00:01:05,459 --> 00:01:12,330
OK, so we have talked about this in or I think previous chapter was when we talked about a really a

18
00:01:12,330 --> 00:01:12,680
lot.

19
00:01:12,730 --> 00:01:15,360
I'm not going to go over it like any more.

20
00:01:15,390 --> 00:01:23,070
So we basically, whenever this animation happens, it means that the ball is constantly being redrawn

21
00:01:23,070 --> 00:01:30,800
with every time the screen is being refreshed or with every frame in that refresh state.

22
00:01:30,960 --> 00:01:37,520
And basically, whenever we get to the next state or next frame, we want to clear the previous one.

23
00:01:37,540 --> 00:01:42,240
So we do not see the previous iterations of that or the previous evolution of that.

24
00:01:42,480 --> 00:01:47,820
If we see it, then it is going to take away from the illusion that this is an animation.

25
00:01:48,030 --> 00:01:48,410
All right.

26
00:01:48,630 --> 00:01:49,860
So we have created that.

27
00:01:49,860 --> 00:01:54,840
And I'm just going to call this function right here so we can get to the fun stuff quicker.

28
00:01:56,070 --> 00:02:00,150
Next step, what I'm going to do is I'm going to go on top of on top of it.

29
00:02:00,390 --> 00:02:07,040
I'm going to create a class and I'm going to call it run balls class.

30
00:02:07,050 --> 00:02:07,390
Right.

31
00:02:07,620 --> 00:02:10,770
So this is going to run the balls on the screen.

32
00:02:11,220 --> 00:02:11,580
Right.

33
00:02:11,580 --> 00:02:13,470
And I'm going to say class.

34
00:02:13,800 --> 00:02:16,590
We know how classes are created.

35
00:02:16,590 --> 00:02:19,620
We just have to provide the class keyword in front of it.

36
00:02:19,860 --> 00:02:21,840
And the name should be capital.

37
00:02:22,050 --> 00:02:23,910
Like the first letter should be capital.

38
00:02:24,420 --> 00:02:26,080
And let's open this.

39
00:02:26,100 --> 00:02:28,920
So this is going to be a template for an object.

40
00:02:29,220 --> 00:02:36,150
That's why it's called object oriented, even though it has a class keyword in the object oriented paradigm.

41
00:02:36,150 --> 00:02:37,610
We use classes.

42
00:02:37,620 --> 00:02:38,010
Right.

43
00:02:38,370 --> 00:02:41,520
So in here, I'm going to pass in a constructor.

44
00:02:41,790 --> 00:02:48,420
The idea behind constructor is whenever we call this run balls and we provide the arguments for this

45
00:02:48,420 --> 00:02:55,080
class, all the arguments of this class are going to be parameters are going to be the values for the

46
00:02:55,080 --> 00:02:57,960
parameters of the constructor of that class.

47
00:02:58,410 --> 00:03:00,080
So what do we need here?

48
00:03:00,240 --> 00:03:02,460
Because we are creating circles.

49
00:03:02,460 --> 00:03:11,880
So we need an exposition, a Y position, a the circles will be moving with different speeds in different

50
00:03:11,880 --> 00:03:12,560
directions.

51
00:03:12,840 --> 00:03:15,840
Basically, we will be having different velocities.

52
00:03:16,110 --> 00:03:22,980
So x the velocity in the extraction, the velocity in the Y direction, and then we will be having different

53
00:03:22,980 --> 00:03:31,110
radii, the same radius and then our colors for the circle.

54
00:03:31,120 --> 00:03:32,880
So red green.

55
00:03:32,880 --> 00:03:35,180
I'm going to do we have done this color a lot.

56
00:03:35,190 --> 00:03:37,960
So I'm just going to do I'm just going to follow that.

57
00:03:38,640 --> 00:03:47,820
So after that, let's say this EXPE is going to be the exposition and then we are going to say this,

58
00:03:47,820 --> 00:03:51,990
dad, why he is going to be the Y position of the circles.

59
00:03:52,530 --> 00:03:59,820
This dot xvid, the velocity is going to be the velocity that is going to be passed as the value for

60
00:03:59,820 --> 00:04:02,280
that parameter, which is S.V..

61
00:04:02,880 --> 00:04:06,240
Then the same thing is going to come for the Y v.

62
00:04:07,340 --> 00:04:10,400
Right, and right after that, we have our.

63
00:04:13,870 --> 00:04:24,220
This dart radius is going to be equal to radius, then let's get the colors, this red, red and this

64
00:04:24,790 --> 00:04:28,590
dot green is going to be equal to green.

65
00:04:28,600 --> 00:04:34,220
And finally, we have this blue is going to be equal to blue.

66
00:04:34,930 --> 00:04:38,200
So now we have created our constructor, right.

67
00:04:38,350 --> 00:04:44,350
What I'm going to do is inside this class, I'm going to create a function that is going to draw the

68
00:04:44,350 --> 00:04:44,620
ball.

69
00:04:44,630 --> 00:04:48,060
So I'm going to call it drawing the balls.

70
00:04:48,670 --> 00:04:52,210
And I'm just going to say draw balls.

71
00:04:54,850 --> 00:05:00,820
And this is going to be a function expression with no parameter, so how can we draw a circle on the

72
00:05:00,820 --> 00:05:02,570
screen or a ball on the screen?

73
00:05:02,830 --> 00:05:05,860
We are going to grab our canvas context.

74
00:05:06,190 --> 00:05:12,190
And first off, I'm going to specify the film style because we do not want to provide it a stroke.

75
00:05:12,200 --> 00:05:13,690
We want to fill that circle.

76
00:05:14,140 --> 00:05:17,290
So for that, I'm going to use these tactics and I'm going to say RGV.

77
00:05:17,290 --> 00:05:19,170
So what is the first color?

78
00:05:19,180 --> 00:05:20,140
It's red.

79
00:05:21,500 --> 00:05:29,500
The second color is going to be green and the third color is going to be blue.

80
00:05:30,190 --> 00:05:37,090
So it's Passan Blue, but this is not going to work because we have no reference to the screen blue

81
00:05:37,090 --> 00:05:39,250
and this red, green and blue.

82
00:05:39,400 --> 00:05:45,820
We need to passant this the red in that case this red is this one and the value for that is going to

83
00:05:45,820 --> 00:05:46,570
come from there.

84
00:05:46,780 --> 00:05:52,900
So I'm just going to click there and hold out multiple times and I'm going to say this, dot now these

85
00:05:52,900 --> 00:05:56,990
values are going to be referenced from this key word, right?

86
00:05:57,160 --> 00:05:58,880
So this is the film style.

87
00:05:58,900 --> 00:06:01,600
Let's begin our path.

88
00:06:01,930 --> 00:06:03,250
So begin path.

89
00:06:03,460 --> 00:06:11,910
And now what I'm going to do is I'm going to call the canvases our property and our method.

90
00:06:12,160 --> 00:06:14,410
This is going to take in the exposition.

91
00:06:14,410 --> 00:06:20,380
So this expe, this dot, why the y position.

92
00:06:20,380 --> 00:06:32,440
So y and then the circle is radius, circles, radius and we have the starting angle zero and the ending

93
00:06:32,440 --> 00:06:38,050
angle, which is going to be math that pi times two.

94
00:06:38,620 --> 00:06:43,670
And finally we are just going to say canvas get context fill.

95
00:06:45,190 --> 00:06:50,680
If I save it and if I let's just go ahead and open this up with a life server, we are not going to

96
00:06:50,680 --> 00:06:53,110
see anything on the screen except for this cat.

97
00:06:53,410 --> 00:06:56,920
The reason for that is we need to instantiate this class.

98
00:06:56,920 --> 00:07:01,140
I mean, this class is created, but we have not instantiated here.

99
00:07:01,300 --> 00:07:07,480
I'm not going to instantiated in this video because I just want to make sure that the collision is there

100
00:07:07,480 --> 00:07:09,250
for for the ages.

101
00:07:09,610 --> 00:07:09,880
Right.

102
00:07:09,910 --> 00:07:18,090
So what I'm going to do is I'm going to say collision detection on it just right.

103
00:07:18,220 --> 00:07:20,140
And I'm going to create a function.

104
00:07:20,140 --> 00:07:22,060
I'm going to call it update balls.

105
00:07:22,660 --> 00:07:27,040
And this is going to be a function expression.

106
00:07:27,610 --> 00:07:29,380
So we are going to function.

107
00:07:29,380 --> 00:07:30,640
No parameters there.

108
00:07:30,970 --> 00:07:37,630
And I'm going to say, if now when we have our balls on the screen, how can we provide it with that

109
00:07:37,900 --> 00:07:41,050
idea that the balls should not go off the canvas?

110
00:07:41,510 --> 00:07:42,880
So you can see that when it hits.

111
00:07:42,880 --> 00:07:47,890
For example, let's take the right side first and I'm going to you know what?

112
00:07:47,890 --> 00:07:49,570
I'm just going to enlarge them.

113
00:07:49,570 --> 00:07:54,600
So they are a bit better visible so we can really talk about them, how we can implement this.

114
00:07:55,090 --> 00:07:57,000
So we say that whenever.

115
00:07:57,280 --> 00:08:04,090
Now, in this case, in the case of this collision detection, what I want to do actually is I want

116
00:08:04,090 --> 00:08:06,310
to change the position.

117
00:08:06,550 --> 00:08:09,080
I want to change the velocity when they hit the ball.

118
00:08:09,700 --> 00:08:13,380
Now we are going to have two different kinds of collision detection.

119
00:08:13,570 --> 00:08:20,920
The first kind is going to be that whenever any circle or any ball hits any of the edges of the screen,

120
00:08:20,920 --> 00:08:21,990
it should bounce back.

121
00:08:22,000 --> 00:08:22,960
That's first line.

122
00:08:23,260 --> 00:08:32,289
The second kind is whenever we create these circles, they should not be created outside the canvas

123
00:08:32,289 --> 00:08:36,150
or like half of the half of the diameter should be outside the canvas.

124
00:08:36,159 --> 00:08:40,179
No, they should be created inside the canvas, not off the canvas.

125
00:08:40,450 --> 00:08:43,140
That's going to be the second kind which will be talking about.

126
00:08:43,480 --> 00:08:51,010
So whenever the exposition, for example, if the exposition, if a ball is right here, if the exposition

127
00:08:51,010 --> 00:08:57,480
of the ball is greater than the width of the canvas, it means that the ball is off the canvas.

128
00:08:57,490 --> 00:08:57,850
Right.

129
00:08:58,300 --> 00:09:04,900
And we need to add in the radius because we need to make sure that not only one part of the circle is

130
00:09:04,900 --> 00:09:09,100
off, but the circle is off the canvas by its full radius.

131
00:09:09,710 --> 00:09:10,030
Right.

132
00:09:10,060 --> 00:09:16,650
So what I'm going to do here is I'm going to say if this if the position, the X position of the ball.

133
00:09:16,870 --> 00:09:22,040
Now, what I'm going to do is this is just for collision detection on the right side.

134
00:09:22,570 --> 00:09:23,410
Keep that in mind.

135
00:09:23,560 --> 00:09:29,370
If the if the X position of the ball plus its radius.

136
00:09:29,410 --> 00:09:38,800
So it's Grobin, the radius, it means that the position of the X is off the canvas by its full radius,

137
00:09:39,310 --> 00:09:46,230
going to say canvas element with if it is greater than that, it means it's off the canvas.

138
00:09:46,480 --> 00:09:47,470
What do we want to do?

139
00:09:49,000 --> 00:09:59,140
We want to grab the horizontal velocity so this X V and we are only interested in changing the direction

140
00:09:59,140 --> 00:09:59,520
for that.

141
00:09:59,740 --> 00:10:06,000
So if it, if it goes that way and it and it tries to go off the canvas, it should bounce back.

142
00:10:06,010 --> 00:10:07,880
So it's very simple.

143
00:10:08,110 --> 00:10:10,820
So this is going to take care of the right side.

144
00:10:11,080 --> 00:10:13,380
What about the left side for the left side?

145
00:10:13,570 --> 00:10:18,950
Because if we if we go towards the left, it means that it is getting smaller than zero.

146
00:10:19,600 --> 00:10:21,520
So greater than zero is right.

147
00:10:21,520 --> 00:10:26,710
Smaller than zero or negative numbers, which are smaller than zero are going to be towards the left.

148
00:10:26,980 --> 00:10:34,240
So what we are going to do is we are going to if the X position of any ball is less than zero bytes

149
00:10:34,240 --> 00:10:35,260
for radius.

150
00:10:35,800 --> 00:10:36,170
Right.

151
00:10:36,610 --> 00:10:43,420
So this is going to be a logical or operator and we are going to if the X position of any ball bytes

152
00:10:43,420 --> 00:10:44,220
for radius.

153
00:10:44,220 --> 00:10:50,200
So minus this, the radius, the reason that we say minus is because we are moving in a negative direction

154
00:10:50,680 --> 00:10:53,410
is greater than sorry is less than zero.

155
00:10:54,700 --> 00:11:03,430
We again, we still want to change the the velocity, we want to say that if the velocity, whichever

156
00:11:03,430 --> 00:11:11,050
direction the velocity is just bounced back and this is going to be the same for the Y direction as

157
00:11:11,050 --> 00:11:11,330
well.

158
00:11:11,650 --> 00:11:13,900
So I'm just going to copy it and I'm going to put it right here.

159
00:11:14,080 --> 00:11:22,040
So if the Y position of the of the balls plus this radius is greater than the canvas height.

160
00:11:22,450 --> 00:11:26,200
So first off, we just talk about the bottom side.

161
00:11:26,230 --> 00:11:31,690
So this is the bottom side, because when we come towards the bottom of the page, that's where the

162
00:11:31,870 --> 00:11:33,210
things they get bigger.

163
00:11:33,370 --> 00:11:37,760
And when we get towards the top of the page, that's when they get smaller.

164
00:11:37,780 --> 00:11:45,160
So if the X Y position of the ball plus is for radius is higher than the canvas is high, whereas canvas

165
00:11:45,160 --> 00:11:47,230
element that height, it's this bottom part.

166
00:11:47,390 --> 00:11:51,290
If it is greater than that, it means the ball is off, the canvas just bounces back.

167
00:11:51,790 --> 00:11:54,370
So we are going to say bounce the ball back.

168
00:11:54,760 --> 00:11:55,040
Right.

169
00:11:55,270 --> 00:12:02,770
And if the ball is off the canvas from the top, it means it's less than zero by for radius.

170
00:12:02,770 --> 00:12:03,960
Just bounce it back again.

171
00:12:05,400 --> 00:12:13,020
And what I'm going to do is because we need these balls to keep moving, I'm going to add the ball velocity,

172
00:12:13,680 --> 00:12:15,980
I'm going to added on to the position.

173
00:12:16,230 --> 00:12:22,500
That's why the balls, they are constantly moving because we are constantly adding this velocity to

174
00:12:22,500 --> 00:12:22,650
it.

175
00:12:23,010 --> 00:12:28,440
So we will be creating all this like this, the velocity.

176
00:12:28,650 --> 00:12:35,190
And in our next structure, of course, we are creating the X position, the Y position, the X velocity

177
00:12:35,190 --> 00:12:36,930
device, the Y velocity.

178
00:12:37,290 --> 00:12:44,430
OK, and then you will know, OK, whichever value the Y velocity has, the Y position is going to be

179
00:12:44,430 --> 00:12:45,550
added on by that.

180
00:12:45,750 --> 00:12:52,200
So if the Y velocity is one, the Y position at first is going to be one and then it is going to be

181
00:12:52,200 --> 00:12:56,190
one plus one and then is going to be two plus one and three plus one.

182
00:12:56,370 --> 00:12:58,760
We will be just adding it on to that.

183
00:12:59,010 --> 00:13:07,280
So I'm just going to say y position plus plus equal this dot y v.

184
00:13:07,740 --> 00:13:08,120
All right.

185
00:13:08,430 --> 00:13:09,120
And.

186
00:13:10,790 --> 00:13:13,710
Basically, that's it, so that's it for this lecture.

187
00:13:13,910 --> 00:13:21,050
See you guys in the next one where where we will be creating our for loop and in the next lecture we

188
00:13:21,050 --> 00:13:23,840
will be actually creating the circles on the screen.

189
00:13:24,020 --> 00:13:27,400
And you will be seeing that how these circles they actually move.

190
00:13:27,710 --> 00:13:29,060
So I'll see you guys then.

