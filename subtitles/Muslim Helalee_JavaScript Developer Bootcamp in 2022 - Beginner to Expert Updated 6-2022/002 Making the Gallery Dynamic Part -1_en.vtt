WEBVTT
1
00:00:01.400 --> 00:00:06.110
Hi, everyone, in this last year, we are going to make our image gallery dynamic.

2
00:00:07.410 --> 00:00:12.740
All right, so what we are going to do is we are going to go ahead and we are going to grab the full

3
00:00:12.780 --> 00:00:16.350
image that the form is class that we have added here.

4
00:00:16.350 --> 00:00:19.350
And I think we do have it here as well.

5
00:00:19.380 --> 00:00:20.870
Yes, it is here.

6
00:00:21.180 --> 00:00:28.770
We are going to grab the full image class and we are also going to grab the small image.

7
00:00:28.950 --> 00:00:33.890
And the reason for that is whenever we click on those small images, right.

8
00:00:34.020 --> 00:00:36.290
We want the full image to appear.

9
00:00:36.300 --> 00:00:38.790
So we want those to be clickable as well.

10
00:00:39.930 --> 00:00:43.530
And in the end, what we are going to do is we are going to grab our moral as well.

11
00:00:43.560 --> 00:00:48.000
So let's go ahead and let's select through CONSED.

12
00:00:49.350 --> 00:00:51.330
Let's select the full image.

13
00:00:53.440 --> 00:00:59.170
I was about to say, success says, all right, we're going to select it through our query selector

14
00:00:59.170 --> 00:01:00.360
method, right?

15
00:01:00.420 --> 00:01:03.470
That's why I told you guys that this is my favorite method.

16
00:01:03.730 --> 00:01:07.210
It doesn't matter what you want to select, it can select anything.

17
00:01:07.450 --> 00:01:13.930
And you don't need to worry about the class or the I.D. as with like get element by idea or by class,

18
00:01:14.110 --> 00:01:15.670
then those are a bit difficult.

19
00:01:15.880 --> 00:01:21.370
You have to make sure that your element, if you're selecting it through get element by idea, you have

20
00:01:21.370 --> 00:01:23.140
to make sure that it has an ID.

21
00:01:23.500 --> 00:01:28.720
But with query selector you can select it through any valid Sears's selector.

22
00:01:29.320 --> 00:01:33.520
So you don't need to worry about classes or IDs for a JavaScript.

23
00:01:33.520 --> 00:01:39.550
Whenever you're developing your HTML, you need to you don't need to worry about it, OK, because there

24
00:01:39.580 --> 00:01:41.800
are a lot more things that you need to consider.

25
00:01:42.040 --> 00:01:47.830
So if even if you can that take one thing out of your way, then you have done a pretty good job.

26
00:01:48.220 --> 00:01:50.710
Now let's go ahead and let's grab our gallery.

27
00:01:51.250 --> 00:01:53.710
And inside the gallery, we are going to grab our image.

28
00:01:53.710 --> 00:01:56.890
And finally, we are going to grab our model.

29
00:01:57.940 --> 00:02:05.800
And the model has we are going to grab it through a document that that query selector and we are going

30
00:02:05.800 --> 00:02:09.250
to say model, say it.

31
00:02:09.820 --> 00:02:10.259
All right.

32
00:02:10.270 --> 00:02:12.080
So now we have selected them.

33
00:02:12.100 --> 00:02:15.470
So what is what is it exactly that we want to do?

34
00:02:16.240 --> 00:02:21.790
So now you guys can see we actually have 10 images, so we don't have one image.

35
00:02:22.000 --> 00:02:24.520
We have 10 small images.

36
00:02:25.030 --> 00:02:33.160
And we want to make sure whenever the user clicks on any of those, the larger version of that specific

37
00:02:33.160 --> 00:02:34.720
image should be displayed.

38
00:02:35.350 --> 00:02:36.520
Now, what does this mean?

39
00:02:36.670 --> 00:02:40.130
It means that we have two options in here.

40
00:02:40.150 --> 00:02:43.030
One, we can grab all the images.

41
00:02:44.180 --> 00:02:53.390
And apply if listeners individually for each one of them, and that if a listener is going to do the

42
00:02:53.390 --> 00:02:59.120
same thing for all 10 images, that is very valid.

43
00:02:59.780 --> 00:03:01.010
Sorry, JavaScript code.

44
00:03:01.010 --> 00:03:07.670
And no one is going to argue with that, apart from the fact that in that case, your code is going

45
00:03:07.670 --> 00:03:14.750
to look amateur and it's not going to look professional because the the way that the professional way

46
00:03:14.750 --> 00:03:21.950
that we can do this is we can use a loop, a new kind of loop that can be that can make our lives a

47
00:03:21.950 --> 00:03:23.180
lot easier.

48
00:03:23.480 --> 00:03:29.800
And that loop each time is going to take one of these images whenever the user clicks.

49
00:03:30.110 --> 00:03:36.290
So it is going to with one line of code or with one loop, we will be able to access all the images

50
00:03:36.620 --> 00:03:43.310
and add an event listener once we don't need to add event listeners for each individual image.

51
00:03:44.150 --> 00:03:44.560
All right.

52
00:03:44.900 --> 00:03:51.380
So what I'm going to do is I'm going to grab this small image, because this is it's actually the small

53
00:03:51.380 --> 00:03:58.820
image that the user is going to click on and then the model and the full image is going to appear.

54
00:04:00.020 --> 00:04:06.200
So everything actually happens on this small image, so I'm going to say small image and we are going

55
00:04:06.200 --> 00:04:10.910
to grab the we are going to say for each small image that for each.

56
00:04:11.440 --> 00:04:11.860
All right.

57
00:04:11.990 --> 00:04:15.190
So this for each is actually a loop.

58
00:04:15.550 --> 00:04:21.740
OK, this is an array method we have not talked about for each yet because it is sort of like an advanced

59
00:04:21.740 --> 00:04:23.990
kind of thing that we need to cover.

60
00:04:24.170 --> 00:04:27.530
And I have made sure that we are going to cover it officially.

61
00:04:27.710 --> 00:04:33.620
Of course, we are going to use it a lot in our projects, but that new report is going to be postponed

62
00:04:33.620 --> 00:04:36.110
to after these beginner projects.

63
00:04:36.380 --> 00:04:40.040
But still, I'm going to explain it as though this is the lesson.

64
00:04:40.610 --> 00:04:43.310
So this is this is also a loop.

65
00:04:43.880 --> 00:04:50.740
This is a four for each loop that loops over and loops over a number of items.

66
00:04:51.050 --> 00:04:53.540
This for each is actually an array method.

67
00:04:53.540 --> 00:05:04.520
We have talked about what our methods and whatever this four for each loop runs, it requires an A for

68
00:05:04.520 --> 00:05:06.170
each loop variable.

69
00:05:06.320 --> 00:05:12.890
So we have talked about the four variable of the four sorry, the four loops, the wire loops, the

70
00:05:12.890 --> 00:05:19.430
four of loop, and in each of those three types of loops we needed a variable.

71
00:05:19.430 --> 00:05:21.070
And why do we need a variable?

72
00:05:21.320 --> 00:05:29.900
We need a variable because that variable has the job of iterating over that collection of data that

73
00:05:29.900 --> 00:05:31.850
we own or that we have.

74
00:05:32.300 --> 00:05:32.650
Right.

75
00:05:32.810 --> 00:05:44.270
So the loop variable is actually the variable that is going to grab the value of that data collection

76
00:05:44.270 --> 00:05:46.130
that we have individually.

77
00:05:46.310 --> 00:05:50.870
It is going to grab the value of each item in that collection individually.

78
00:05:51.110 --> 00:05:57.610
And each time it grabs it, we going to we are going to apply a function there.

79
00:05:58.070 --> 00:05:58.440
Right.

80
00:05:58.640 --> 00:06:06.350
So for any loop, this is why we need a new variable, because the loop variable is actually the thing

81
00:06:06.350 --> 00:06:10.010
that loops over that data collection.

82
00:06:10.140 --> 00:06:12.910
In this case, our data collection is ten images.

83
00:06:12.920 --> 00:06:15.080
It is an image data collection.

84
00:06:15.350 --> 00:06:17.750
And for that we are going to need a loop variable.

85
00:06:17.990 --> 00:06:26.690
So whenever this loop runs, we are going to run a function and inside the function we are going to

86
00:06:26.690 --> 00:06:30.580
add our loop variable as the function parameter.

87
00:06:30.800 --> 00:06:31.110
Right.

88
00:06:31.370 --> 00:06:34.190
So this is going to be our function parameter.

89
00:06:34.310 --> 00:06:34.760
Right.

90
00:06:35.390 --> 00:06:40.150
So let me grab there was an error function before that.

91
00:06:40.430 --> 00:06:44.320
So this is actually the syntax for an error function.

92
00:06:44.600 --> 00:06:47.120
We are going to talk about error functions as well.

93
00:06:47.660 --> 00:06:52.760
So that's why I'm just going to go ahead and write a regular function sorry.

94
00:06:52.760 --> 00:06:54.260
Function expression here.

95
00:06:55.880 --> 00:07:03.170
So whenever the loop runs, we are going to apply a function and the function is going to have a parameter

96
00:07:03.170 --> 00:07:11.120
of image because that image is actually the loop variable and this image parameter or loop variable

97
00:07:11.300 --> 00:07:17.140
is the variable that's going to grab each of these images individually.

98
00:07:17.510 --> 00:07:22.570
So it is going to allow us to not write 10 add event listeners, but only one.

99
00:07:22.910 --> 00:07:24.380
That's why we use for each.

100
00:07:24.560 --> 00:07:31.170
It's a very, very common array method that usually all applications, they use it in some way or another.

101
00:07:31.580 --> 00:07:36.500
So we are going to add an event, listener image dot add one listener.

102
00:07:38.860 --> 00:07:41.890
All right, so at event.

103
00:07:43.040 --> 00:07:50.090
Listen, you're right, and when the average listener is added, what did we want to listen for?

104
00:07:50.240 --> 00:07:51.680
How am I supposed to correctly?

105
00:07:52.940 --> 00:07:59.900
All right, so let's grab that one and let's remove the other one, so whenever the image, the small

106
00:07:59.900 --> 00:08:01.850
image is correct, what do we want?

107
00:08:01.880 --> 00:08:09.620
We want the image variable to go ahead and to listen for a click event, because now the all these 10

108
00:08:09.620 --> 00:08:16.520
images, they're all our image variables because each of them individually is an image variable.

109
00:08:17.000 --> 00:08:21.620
And whatever will be listen for a click, we want to run in some sort of function.

110
00:08:22.160 --> 00:08:23.560
So what is that function?

111
00:08:23.780 --> 00:08:29.660
And whenever we click on an image, we are going to grab the model and we are going to add a class to

112
00:08:29.660 --> 00:08:29.810
it.

113
00:08:30.020 --> 00:08:31.260
And what is this class?

114
00:08:31.280 --> 00:08:35.830
This class is that dynamic open class that we have added in success.

115
00:08:36.559 --> 00:08:38.720
And this is not the only thing.

116
00:08:38.870 --> 00:08:40.490
So now this model appears.

117
00:08:40.500 --> 00:08:41.809
So let's go ahead and let's save it.

118
00:08:41.809 --> 00:08:44.300
And when we click on it, we don't see the model.

119
00:08:46.180 --> 00:08:52.990
We have an odd event listener, we are going to listen for a click, right, and when the click happens.

120
00:08:53.290 --> 00:08:55.990
We are going to have the open class for that.

121
00:08:58.050 --> 00:09:04.350
For that model, let's go ahead and check out our style, that Cyesis or model is going to have a class

122
00:09:04.350 --> 00:09:07.740
of open and the opposite is going to be one.

123
00:09:07.740 --> 00:09:09.810
And the pointer events is going to be all.

124
00:09:11.040 --> 00:09:18.720
And I think the reason that it doesn't work is because I don't think that we are selecting our images

125
00:09:18.720 --> 00:09:19.200
right now.

126
00:09:19.200 --> 00:09:23.850
So let's go ahead and let's inspect him and let's see whether or not we are selecting it.

127
00:09:24.510 --> 00:09:29.170
It says type error for each is not a function of this.

128
00:09:29.880 --> 00:09:33.470
So here this there is a problem right here.

129
00:09:33.780 --> 00:09:39.690
It says for each and there is something wrong with the small image selector.

130
00:09:40.050 --> 00:09:44.550
So if I were to go ahead and comment about everything here and.

131
00:09:46.080 --> 00:09:54.210
Let's go ahead and let's say conserve Deathlok, let's log our small image, small image, let's save

132
00:09:54.210 --> 00:09:58.980
it and let's see what we get so we get the first image.

133
00:09:59.100 --> 00:09:59.490
All right.

134
00:09:59.640 --> 00:10:04.170
So we're that the rest of them now the problem lies here.

135
00:10:04.360 --> 00:10:11.130
So whenever we consider the log, because we have said query selector, we are going to grab the first

136
00:10:11.130 --> 00:10:14.070
image, but we don't have only one image.

137
00:10:14.070 --> 00:10:15.420
We have 10 images.

138
00:10:15.600 --> 00:10:20.750
And for that reason, we are going to say query selector all because we want to grab.

139
00:10:22.170 --> 00:10:25.960
All 10 images are now you guys can see it returns an array.

140
00:10:26.550 --> 00:10:34.350
The reason that for each did not work was our small image was it was actually an element.

141
00:10:34.590 --> 00:10:36.680
It wasn't an array, OK?

142
00:10:36.840 --> 00:10:41.580
It was just a simple stored value for a variable.

143
00:10:41.820 --> 00:10:43.500
Now it is a novelist.

144
00:10:43.510 --> 00:10:44.430
It is an array.

145
00:10:44.440 --> 00:10:49.470
You guys can see the syntax where at least it behaves like one right now.

146
00:10:49.470 --> 00:10:51.570
The foreach each is going to be applied on it.

147
00:10:51.570 --> 00:10:52.650
It says analyst.

148
00:10:52.800 --> 00:10:58.860
But the syntax is like an array and we have oops, we have our indices as well.

149
00:10:58.860 --> 00:11:01.540
Zero all the way to nine and the length is ten.

150
00:11:01.770 --> 00:11:03.910
So this behaves like an array.

151
00:11:04.110 --> 00:11:11.220
So after this, what we should be able to do is we should be able to grab our image and to apply the

152
00:11:11.220 --> 00:11:13.260
class that we added to our model.

153
00:11:13.770 --> 00:11:19.770
So now in here, if I click on this bromet, we're going to see our background color of green and we

154
00:11:19.770 --> 00:11:21.780
are going to see the small image of the rabbit.

155
00:11:22.080 --> 00:11:24.790
But there is actually two problems here.

156
00:11:24.990 --> 00:11:28.830
Whenever I click anywhere, the model does not appear well.

157
00:11:28.890 --> 00:11:30.870
Basically, actually, there are three problems.

158
00:11:31.410 --> 00:11:36.550
The first problem is we have we don't have any dynamic way of getting out of this model.

159
00:11:37.950 --> 00:11:43.220
The second problem is whenever we click on any other image, we see the rabbit.

160
00:11:43.230 --> 00:11:44.670
So we see the first image.

161
00:11:44.910 --> 00:11:51.830
And that image has been hard coded inside the HDMI, so we should dynamically change it.

162
00:11:51.840 --> 00:11:53.240
So that is the second problem.

163
00:11:53.580 --> 00:11:59.960
The third problem is we don't see the full original high resolution image.

164
00:12:00.450 --> 00:12:03.480
So these three things we are going to fix in our next lecture.

165
00:12:03.510 --> 00:12:04.860
See you guys that.

