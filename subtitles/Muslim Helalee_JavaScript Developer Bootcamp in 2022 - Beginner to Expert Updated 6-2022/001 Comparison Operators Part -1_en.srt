1
00:00:00,910 --> 00:00:06,610
Hi, everyone, in this picture, we are going to talk about comparison operators in JavaScript.

2
00:00:07,820 --> 00:00:16,850
All right, so we are going to start our way through the greater greater than comparison operator,

3
00:00:17,060 --> 00:00:17,460
right.

4
00:00:17,630 --> 00:00:23,250
And the results of these operators is going to be a boolean expression, right.

5
00:00:23,390 --> 00:00:29,210
So the way that I'm going to I'm going to going to be showing you guys how these operators work is directly

6
00:00:29,660 --> 00:00:33,050
printing them to the console or logging them to the console.

7
00:00:33,290 --> 00:00:37,070
So let's go ahead and let's see if two is greater than one.

8
00:00:37,400 --> 00:00:38,420
We get it true.

9
00:00:38,430 --> 00:00:40,670
So this is greater than one.

10
00:00:41,150 --> 00:00:41,480
All right.

11
00:00:41,630 --> 00:00:42,950
These are super simple.

12
00:00:42,980 --> 00:00:43,340
All right.

13
00:00:43,350 --> 00:00:46,550
So the next one is the less than comparison operator.

14
00:00:47,060 --> 00:00:47,530
Right.

15
00:00:47,540 --> 00:00:50,440
And for that, I'm going to say console the log.

16
00:00:50,990 --> 00:00:52,750
Let's go ahead and let's check it out.

17
00:00:52,760 --> 00:01:05,690
If one is I don't know, like let's see if two is less than one, we get a false it is two is not less

18
00:01:05,690 --> 00:01:06,160
than one.

19
00:01:06,170 --> 00:01:08,750
So we get a boolean, which is false.

20
00:01:09,230 --> 00:01:12,230
The next one is greater than or equal to.

21
00:01:13,040 --> 00:01:14,360
So it's greater.

22
00:01:16,220 --> 00:01:25,220
Than or equal to right, and the way it works is I'm just going to copy it and put it here and we are

23
00:01:25,220 --> 00:01:32,330
going to say if 15 is greater than or equal to 15, we get it true.

24
00:01:32,330 --> 00:01:32,690
Right.

25
00:01:32,810 --> 00:01:34,550
So let's check out another condition.

26
00:01:34,790 --> 00:01:35,680
Let's check it out.

27
00:01:35,690 --> 00:01:44,480
At 16, we get a false because 15 is not equal, neither equal nor greater than 16.

28
00:01:44,660 --> 00:01:46,420
So we get a false right.

29
00:01:46,910 --> 00:01:51,230
So this is the greater than or equal to comparison.

30
00:01:51,230 --> 00:01:51,800
Operator.

31
00:01:52,070 --> 00:01:56,280
The next one that I want to talk about is less than or equal to.

32
00:01:56,630 --> 00:01:57,060
All right.

33
00:01:57,710 --> 00:02:00,450
So these are very, very, very simple.

34
00:02:00,470 --> 00:02:05,060
That's why I'm just copying them down below, because they're super simple, right?

35
00:02:06,690 --> 00:02:10,720
So for the first one, we get it through and for the second one, we also get it.

36
00:02:11,370 --> 00:02:19,110
And the reason for that is because 15 is actually equal to 15 and what it is equal to 15, the operator

37
00:02:19,110 --> 00:02:21,290
actually ignores this lesson than sign.

38
00:02:21,570 --> 00:02:26,730
And you might say, OK, 15 is not less than 50, but it is actually equal to 15.

39
00:02:26,970 --> 00:02:35,630
And the second expression is true because 15 is either equal to 16 or less than 16.

40
00:02:35,880 --> 00:02:37,600
So it is not equal to 16.

41
00:02:37,620 --> 00:02:41,860
And this equality sign is not evaluates to true.

42
00:02:42,060 --> 00:02:45,640
So this less than sign is evaluated to true.

43
00:02:46,110 --> 00:02:50,430
So these are less than or equal to comparison operators.

44
00:02:51,270 --> 00:02:57,930
Now, these are not that like that much exciting and that much like they are important, very, very

45
00:02:57,930 --> 00:03:04,170
important JavaScript, but not as important as the rest of comparison operators that we are going to

46
00:03:04,170 --> 00:03:04,710
discuss.

47
00:03:05,010 --> 00:03:11,640
So the first very, very important one is the double equal equality operator.

48
00:03:12,760 --> 00:03:20,380
Equality operator, OK, it only cares now this operator only cares about the value, not the time,

49
00:03:20,740 --> 00:03:25,930
and doesn't care about the type, it enforces the type to make them the same time.

50
00:03:26,260 --> 00:03:31,340
It causes the type also also called type coersion in JavaScript.

51
00:03:31,780 --> 00:03:39,670
So if we go ahead and if we say cancel the log now, let's take a look at this operator and how it works

52
00:03:40,090 --> 00:03:43,360
and let's go ahead and let's say one equal to one.

53
00:03:43,360 --> 00:03:46,630
We should get it through because one is equal to one.

54
00:03:46,910 --> 00:03:49,030
OK, how about this?

55
00:03:49,040 --> 00:03:52,960
How about one equal to the strength one?

56
00:03:53,410 --> 00:03:58,450
We get a true but this is not actually true because this is a number.

57
00:03:58,450 --> 00:04:00,610
But this part this is not a number.

58
00:04:00,640 --> 00:04:02,200
This is a string.

59
00:04:02,680 --> 00:04:07,090
And because numbers and strength, they have different types.

60
00:04:07,330 --> 00:04:10,690
The quality operator does not care about those types.

61
00:04:10,870 --> 00:04:15,550
As long as the value is the same, it is going to coerce the type.

62
00:04:15,910 --> 00:04:18,440
OK, this is called type coercion in JavaScript.

63
00:04:18,890 --> 00:04:23,980
OK, so let's go ahead and let's take a look at more examples.

64
00:04:24,220 --> 00:04:28,530
This let's say we have a Z word here and this is Z.

65
00:04:28,750 --> 00:04:30,550
It is going to be true, of course.

66
00:04:31,100 --> 00:04:38,020
OK, so let's go ahead and let's see if true is equal to true.

67
00:04:38,020 --> 00:04:39,010
We should get it true.

68
00:04:39,490 --> 00:04:44,830
OK, we did get a true let's say a false is going to be equal to true.

69
00:04:45,010 --> 00:04:51,610
We get a false because in this case, even though the type is the same, this is a boolean, this is

70
00:04:51,610 --> 00:04:54,060
a bully, but the value is different.

71
00:04:54,070 --> 00:04:55,620
This is false and this is true.

72
00:04:56,020 --> 00:05:02,230
And I'm just going to go ahead and give you some more examples, because I I think that this is really

73
00:05:02,230 --> 00:05:03,420
important to understand.

74
00:05:03,640 --> 00:05:10,180
So we are going to say if zero is equal to an empty string and it is true because zero is empty and

75
00:05:10,180 --> 00:05:11,440
empty string is empty.

76
00:05:11,740 --> 00:05:12,100
OK.

77
00:05:13,820 --> 00:05:17,090
And let's go ahead and let's check out if

78
00:05:19,700 --> 00:05:29,150
undefined is equal to now, because both of them have actually the same concept, but the type is different.

79
00:05:29,660 --> 00:05:34,240
That's why it but because this is called the operator doesn't care about the type.

80
00:05:34,550 --> 00:05:37,880
It just makes him like it just causes the type.

81
00:05:37,880 --> 00:05:40,010
So we get it through right here.

82
00:05:40,250 --> 00:05:44,480
OK, so let's go ahead and let's take a look at another one.

83
00:05:44,720 --> 00:05:48,470
Consider log false and zero.

84
00:05:48,830 --> 00:05:49,790
We get it through.

85
00:05:50,270 --> 00:05:53,720
And let's go ahead and let's take a look at two and one.

86
00:05:53,780 --> 00:05:55,130
We should get it through as well.

87
00:05:55,700 --> 00:06:02,510
So this is so this is how this equality, the double equal equality operator works.

88
00:06:02,690 --> 00:06:04,700
I'm just going to comment about everything.

89
00:06:05,270 --> 00:06:11,600
And the next operator that I want to talk about is the strict equality operator.

90
00:06:11,900 --> 00:06:16,790
And it has three equal sides are equality.

91
00:06:18,960 --> 00:06:27,550
Operator and why you should always use the strict equality operator, because this extra this extra

92
00:06:27,600 --> 00:06:35,700
quality, if it also checks, it also checks for the tie that we are comparing.

93
00:06:36,000 --> 00:06:39,680
So what I'm going to do is I'm just going to copy all of them and I'm going to put them here.

94
00:06:39,820 --> 00:06:44,580
I'm going to grab these double equals and I'm going to control the everywhere and I'm going to turn

95
00:06:44,580 --> 00:06:46,230
them to triple equals.

96
00:06:46,590 --> 00:06:48,900
And now we are going to take a look at them one by one.

97
00:06:49,110 --> 00:06:54,780
So we get it through because one is the same as one in type and in value.

98
00:06:55,860 --> 00:06:59,250
But this is the this is the cool part one.

99
00:06:59,250 --> 00:07:05,910
The number one is not equal to the string on one, even though the value is the same, but the type

100
00:07:05,910 --> 00:07:06,430
is different.

101
00:07:06,450 --> 00:07:07,260
This is a string.

102
00:07:07,260 --> 00:07:08,110
This is a number.

103
00:07:08,460 --> 00:07:08,880
All right.

104
00:07:09,300 --> 00:07:10,410
Let's take a look at this.

105
00:07:10,410 --> 00:07:14,480
It is true because both of them have the same value and the same type.

106
00:07:14,940 --> 00:07:17,640
This should bring back two as well.

107
00:07:17,760 --> 00:07:21,540
This is false because false is not equal to true.

108
00:07:21,600 --> 00:07:22,190
All right.

109
00:07:22,380 --> 00:07:23,030
Shocker.

110
00:07:23,580 --> 00:07:27,000
This is false because zero this is a number.

111
00:07:27,000 --> 00:07:29,520
This is a strength.

112
00:07:30,090 --> 00:07:30,480
Right.

113
00:07:30,480 --> 00:07:35,820
And this should be false as well, because undefined, the type of undefined is different than the type

114
00:07:35,820 --> 00:07:36,390
of null.

115
00:07:36,780 --> 00:07:39,190
And these two should be false as well.

116
00:07:39,720 --> 00:07:46,170
So this is the difference between these strict equality operator and the usual equality operator and

117
00:07:46,170 --> 00:07:52,850
why you should always use this, because we want to make sure that the type and the value they are equal.

118
00:07:53,430 --> 00:07:59,700
The other two year comparison operators that I want to talk about here, they're actually different

119
00:07:59,700 --> 00:08:03,510
versions of these operators that we have talked about here.

120
00:08:03,750 --> 00:08:05,670
They're actually different versions of them.

121
00:08:05,910 --> 00:08:10,350
And we are going to talk about them in our next lecture.

122
00:08:10,360 --> 00:08:12,540
So see you guys in the next lecture.

