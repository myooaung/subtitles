WEBVTT
1
00:00:01.750 --> 00:00:02.719
Hi, everyone.

2
00:00:02.740 --> 00:00:06.340
In this letter, we're going to talk about default binding.

3
00:00:07.700 --> 00:00:15.950
All right, so the default binding is going to be our last and fourth and last way of calling functions.

4
00:00:16.250 --> 00:00:16.750
All right.

5
00:00:16.760 --> 00:00:18.980
And the default binding.

6
00:00:19.890 --> 00:00:27.570
As our fallback if none of the other three methods or other three ways they worked, OK, this is called

7
00:00:27.570 --> 00:00:32.870
default binding because we are not calling it this is not implicit binding, OK?

8
00:00:33.060 --> 00:00:34.290
It is not like this movie.

9
00:00:34.290 --> 00:00:38.450
Funk is being called upon as a method of an object.

10
00:00:38.910 --> 00:00:43.420
It is not an explicit binding because we are not using that call or apply.

11
00:00:43.690 --> 00:00:47.340
It is also not we are also not using the new keyword.

12
00:00:47.760 --> 00:00:49.860
So it should be the default binding.

13
00:00:50.310 --> 00:00:55.830
Now, if I were to save this code, what do you think is going to is going to be printed inside the

14
00:00:55.830 --> 00:00:56.340
console?

15
00:00:57.330 --> 00:01:02.280
And for that, I'm going to zoom in a bit inside the console and I'm going to make it a bit bigger as

16
00:01:02.280 --> 00:01:04.080
well, because we need to see this.

17
00:01:04.720 --> 00:01:05.160
All right.

18
00:01:05.970 --> 00:01:11.870
So let's first off go over the code, what we have and let's predict what is going to happen.

19
00:01:12.180 --> 00:01:16.380
So here we have a variable called movie and the value is Rush.

20
00:01:16.860 --> 00:01:22.050
And then we have a function that says movie function and we have a movie description parameter.

21
00:01:22.530 --> 00:01:24.770
We have a console like this movie.

22
00:01:25.050 --> 00:01:32.970
So whenever we have a this key word inside a function, that function automatically is called a this

23
00:01:32.970 --> 00:01:34.230
aware function.

24
00:01:34.440 --> 00:01:34.770
All right.

25
00:01:35.040 --> 00:01:37.110
So this is this our function?

26
00:01:37.110 --> 00:01:39.120
This is also at this hour, a function.

27
00:01:39.750 --> 00:01:42.750
The name of this function is other movie func.

28
00:01:43.050 --> 00:01:47.160
The differences that we are using strict mode inside this function.

29
00:01:48.120 --> 00:01:54.280
We are calling the movie func here with an argument and the other movie funkier with an argument.

30
00:01:54.660 --> 00:01:58.410
So if I were to save this, what is going to happen?

31
00:01:58.830 --> 00:02:02.730
OK, remember what happens at compile time, what happens in runtime?

32
00:02:02.730 --> 00:02:06.510
I'm not going to go over the compile time, but I'm going to go over the runtime.

33
00:02:06.510 --> 00:02:09.080
What is going to happen at the execution time?

34
00:02:09.539 --> 00:02:12.480
What is the execution engine or the PVM is going to do?

35
00:02:13.080 --> 00:02:13.410
All right.

36
00:02:13.560 --> 00:02:20.820
So whenever when we when we call this function here, this function gets invoked and inside here we

37
00:02:20.820 --> 00:02:21.880
have a console lock.

38
00:02:22.320 --> 00:02:26.220
Now, this console is there is no reference inside this function.

39
00:02:26.460 --> 00:02:28.920
So lexically this console is going to go up.

40
00:02:29.730 --> 00:02:35.610
And then when we do know that this movie description is going to come right from here, this is not

41
00:02:35.610 --> 00:02:36.420
what I'm talking about.

42
00:02:36.420 --> 00:02:37.970
I'm talking about this third movie.

43
00:02:38.370 --> 00:02:42.210
So what where is this movie going to point at?

44
00:02:42.480 --> 00:02:45.240
Because this console lock is going to come out of it.

45
00:02:45.240 --> 00:02:47.820
It is going to point out this global variable.

46
00:02:48.090 --> 00:02:52.620
The reason for that is because the call site is the global scope.

47
00:02:52.860 --> 00:03:00.000
So it is going to refer to this global variable and this global variable has a value of rush.

48
00:03:00.210 --> 00:03:06.060
So for this this movie we are going to see Rush is a racing movie.

49
00:03:06.150 --> 00:03:06.480
Right.

50
00:03:06.490 --> 00:03:10.310
So I'm just going to go ahead and come in this one out and I'm going to save it.

51
00:03:10.560 --> 00:03:13.530
So we do get that from line number four.

52
00:03:13.920 --> 00:03:16.800
So what if what happens if I do this now?

53
00:03:16.800 --> 00:03:20.160
Keep in mind, this function is in strict mode.

54
00:03:20.490 --> 00:03:29.720
So in strict mode, we are invoking a function which is this aware without providing it with any this.

55
00:03:30.030 --> 00:03:32.190
So what do you think is going to happen here?

56
00:03:33.270 --> 00:03:40.020
So we don't have any this and we don't have any this context for this function.

57
00:03:40.170 --> 00:03:42.690
We don't know what this this is going to point at.

58
00:03:43.140 --> 00:03:46.620
And we are in this strict mode, so we should see something go wrong.

59
00:03:46.620 --> 00:03:46.890
Right.

60
00:03:47.070 --> 00:03:54.510
So if I save it, we can see that it it says says it says Oncotype Error Cannot read property movie

61
00:03:54.510 --> 00:03:59.210
of undefined ad line number nine and line number fourteen.

62
00:03:59.430 --> 00:04:02.100
So this is line number nine and this is line number 14.

63
00:04:02.550 --> 00:04:03.600
Why do we give that?

64
00:04:04.410 --> 00:04:11.850
Because specifically in strict mode, when you invoke a function with no other this bindings, the default

65
00:04:11.850 --> 00:04:15.000
behavior is to leave this undefined.

66
00:04:15.030 --> 00:04:15.390
All right.

67
00:04:15.690 --> 00:04:23.700
So now what we are going to do is what we have is we are we are trying to access a property on an undefined

68
00:04:23.700 --> 00:04:26.100
value, which is a type error.

69
00:04:26.430 --> 00:04:27.480
I'm going to say this again.

70
00:04:27.750 --> 00:04:35.850
We are trying to access a property on an undefined value, which is a type error.

71
00:04:36.330 --> 00:04:43.920
It is, because it's almost certainly an error on our part to define a this our function and invoke

72
00:04:43.920 --> 00:04:47.700
it without any this, this, that.

73
00:04:47.730 --> 00:04:55.590
Now, this is a terrible idea that's almost as bad as Accra's Auto creating Global's, which nobody

74
00:04:55.590 --> 00:04:57.360
would ever do right now.

75
00:04:59.300 --> 00:05:05.210
You should always keep in mind that whenever you're invoking a function, even if it is not in the strict

76
00:05:05.210 --> 00:05:09.670
mode, you should provide it in this binding or in this context.

77
00:05:09.950 --> 00:05:11.480
What is this pointing at?

78
00:05:11.480 --> 00:05:19.100
You should at least have the clue of what this this is going to point to now in the non strict or so-called

79
00:05:19.100 --> 00:05:21.290
sloppy mode in here.

80
00:05:21.710 --> 00:05:21.980
Right.

81
00:05:22.190 --> 00:05:27.710
It end up it ends up using the global object, which is almost never what you want.

82
00:05:27.870 --> 00:05:35.090
OK, and again, in exactly the same way, that's almost never the case that you want to create.

83
00:05:35.200 --> 00:05:36.790
Order IDEAglobal.

84
00:05:36.890 --> 00:05:44.270
OK, but Strich Mode fixes that up for us and it says, hey, you made an error and now we know how

85
00:05:44.270 --> 00:05:45.500
we can fix this error.

86
00:05:45.670 --> 00:05:53.520
OK, now one last thing is the error is not that we are doing this dot reference the error.

87
00:05:53.690 --> 00:05:54.500
Keep this in mind.

88
00:05:54.500 --> 00:06:03.920
You should notice the error is that we are invoking a function without providing it with a this binding

89
00:06:03.920 --> 00:06:05.780
within this context.

90
00:06:06.200 --> 00:06:13.250
OK, we need to use one of the other three methods, either use the new keyword or use the call or apply

91
00:06:13.430 --> 00:06:15.170
or use the context object.

92
00:06:15.500 --> 00:06:17.930
OK, so there we go.

93
00:06:19.910 --> 00:06:21.750
Four ways to invoke function.

94
00:06:21.770 --> 00:06:24.510
Those are the only four ways, by the way.

95
00:06:24.530 --> 00:06:31.940
OK, that said, just these four words, there is no other way that you can invoke a function that is

96
00:06:31.940 --> 00:06:39.520
that said, OK, that's all you need to learn to be able to understand how the this key word gets bound.

97
00:06:39.850 --> 00:06:44.330
And now let's go ahead and reset our mind back.

98
00:06:44.600 --> 00:06:52.430
The question that we want to answer is, if we have a this aware function, how do we know what the

99
00:06:52.430 --> 00:06:54.120
this keyword is going to point out?

100
00:06:54.590 --> 00:06:55.040
OK.

101
00:06:56.570 --> 00:07:01.480
Now, we want we want to assume that by just looking at the function, we can find that out.

102
00:07:01.700 --> 00:07:08.810
But now, after all these four lectures, we know there is no way we can we can we can know for sure

103
00:07:09.020 --> 00:07:12.770
what the this keyword is going to point out by just looking at the function.

104
00:07:12.980 --> 00:07:14.800
We need to look at the call site.

105
00:07:14.810 --> 00:07:16.700
I cannot stress this enough.

106
00:07:16.940 --> 00:07:18.370
We need to look at the site.

107
00:07:19.220 --> 00:07:27.410
And after that, when we get to the call site, we should know how the function is being called, because

108
00:07:27.410 --> 00:07:34.400
every time it gets called, the how of the call controls what the this keyword will point at.

109
00:07:34.630 --> 00:07:41.630
OK, and lastly, the last thing that I want to discuss when it comes to function calls it is the.

110
00:07:43.760 --> 00:07:51.960
Binding precedents, so binding press dence, think it is DNC or DNC?

111
00:07:51.980 --> 00:07:52.970
I'm not sure about that.

112
00:07:53.630 --> 00:07:55.430
So what do you think?

113
00:07:55.430 --> 00:07:59.770
If we have all these four methods, which one is going to take precedence?

114
00:08:00.200 --> 00:08:02.160
That's what I want to write in here.

115
00:08:02.300 --> 00:08:07.640
So the first method that that the first way is going to take, which is going to take precedence.

116
00:08:07.670 --> 00:08:09.530
I'm just going to create a multiline comment.

117
00:08:09.920 --> 00:08:13.180
The first one is going to be the new key word.

118
00:08:13.460 --> 00:08:15.590
This is going to have the higher priority.

119
00:08:15.890 --> 00:08:19.280
And number two, we are going to have our call.

120
00:08:20.480 --> 00:08:30.550
Slash, appli, slash binde, where is the parentheses for this one spot right here and finally bind

121
00:08:30.950 --> 00:08:36.409
and our third and final way is going to be a context object.

122
00:08:37.039 --> 00:08:41.760
So in case you're wondering about the binding precedents and finally, OK.

123
00:08:41.780 --> 00:08:43.549
And that is pretty obvious.

124
00:08:43.880 --> 00:08:47.060
That is the default binding.

125
00:08:47.990 --> 00:08:49.400
Binding.

126
00:08:52.420 --> 00:08:53.220
Default binding.

127
00:08:53.470 --> 00:08:58.630
So in case you're wondering about the binding precedents, we have the new key word which has the higher

128
00:08:59.230 --> 00:09:03.700
precedence and then the court the this is not called.

129
00:09:03.700 --> 00:09:04.900
This is not count.

130
00:09:04.960 --> 00:09:06.210
This is not see, assess.

131
00:09:06.700 --> 00:09:08.420
And then we have context object.

132
00:09:08.440 --> 00:09:11.020
And finally, we have the default binding.

133
00:09:11.200 --> 00:09:16.710
OK, just that set just these four rules, OK?

134
00:09:16.720 --> 00:09:19.630
And this is in this specific order.

135
00:09:19.780 --> 00:09:20.140
Right.

136
00:09:20.320 --> 00:09:27.820
And it will perfectly and completely answer every question you may have about what does the this keyword

137
00:09:27.820 --> 00:09:28.450
point it.

138
00:09:28.810 --> 00:09:29.960
That's it for this lecture.

139
00:09:29.980 --> 00:09:31.570
See you guys in the next one.

