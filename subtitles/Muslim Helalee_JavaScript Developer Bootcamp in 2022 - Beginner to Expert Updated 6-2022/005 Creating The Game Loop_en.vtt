WEBVTT
1
00:00:01.839 --> 00:00:02.780
Hi, everyone.

2
00:00:02.920 --> 00:00:05.890
In this next year, we're going to create the game loop.

3
00:00:07.160 --> 00:00:16.309
All right, so first things first, I'm going to say I'm going to call this run game, so run game function,

4
00:00:17.000 --> 00:00:21.530
a.k.a. the game loop, right.

5
00:00:21.530 --> 00:00:23.480
And let's create this function.

6
00:00:23.480 --> 00:00:25.120
So run game.

7
00:00:25.640 --> 00:00:27.320
What do we want to do here first?

8
00:00:27.330 --> 00:00:33.740
So the first thing is I want to clear the canvas and I'm going to be commenting out the steps so they

9
00:00:33.740 --> 00:00:34.880
are not confusing to you.

10
00:00:35.300 --> 00:00:37.670
So I'm going to say clearing the canvas.

11
00:00:38.960 --> 00:00:43.730
I'm not going to go over why, because we have talked about it a lot, so I'm going to grab the dry

12
00:00:43.740 --> 00:00:49.910
rectangle function and I'm going to pass in zero for the exposition, zero for the Y position, you

13
00:00:49.910 --> 00:00:54.230
can see that it gives us all the parameters for which we need to pass and the arguments.

14
00:00:54.620 --> 00:00:57.260
Zero for the exposition, zero for the Y position.

15
00:00:57.290 --> 00:01:01.220
What about the with the width should be our canvas elements with.

16
00:01:01.850 --> 00:01:02.930
So let's click here.

17
00:01:02.930 --> 00:01:10.070
Canvas element with and it should be dot dot with.

18
00:01:10.340 --> 00:01:13.370
And after that we have the height of the canvas.

19
00:01:13.370 --> 00:01:16.550
So canvas element dot height.

20
00:01:17.480 --> 00:01:19.730
And right after that what do we have.

21
00:01:19.760 --> 00:01:22.370
We have the can we have the color.

22
00:01:22.370 --> 00:01:24.420
You can see that it underlines the color.

23
00:01:24.710 --> 00:01:30.780
So the color of the canvas is actually going to be four six eight sorry.

24
00:01:31.160 --> 00:01:34.370
Eight three a zero.

25
00:01:34.760 --> 00:01:35.200
Right.

26
00:01:36.290 --> 00:01:38.440
Not not a yasue that is zero.

27
00:01:38.570 --> 00:01:41.180
So we have successfully cleared the canvas.

28
00:01:41.880 --> 00:01:43.130
What I'm going to do as.

29
00:01:45.530 --> 00:01:52.040
In this project, I'm not going to be using data request, animation frame, I'm just just going to

30
00:01:52.040 --> 00:01:53.720
be using the timer.

31
00:01:53.990 --> 00:01:57.440
So we have talked about how there are two.

32
00:01:57.450 --> 00:02:01.760
There are two ways of actually like creating.

33
00:02:03.400 --> 00:02:09.970
That frames per second illusion, one was the builtin method, which was discussed in animation frame,

34
00:02:09.970 --> 00:02:11.410
the second is set interval.

35
00:02:13.060 --> 00:02:21.880
I'm going to be using set and interval in this game and I'm going to say looping the game to keep it

36
00:02:21.880 --> 00:02:22.630
running.

37
00:02:23.730 --> 00:02:24.040
Right.

38
00:02:24.040 --> 00:02:27.820
And first off, I'm going to create a constant frames per second.

39
00:02:28.870 --> 00:02:29.290
All right.

40
00:02:29.300 --> 00:02:32.190
So we are going to have 60 frames per second.

41
00:02:32.680 --> 00:02:34.780
The higher the fringe, the smoother the game.

42
00:02:34.780 --> 00:02:41.560
But you need to find like the perfect balance of that so the game doesn't look so set interval.

43
00:02:41.710 --> 00:02:43.150
We are going to call our.

44
00:02:44.890 --> 00:02:50.500
I'm going to call a game init function, I know it's not the run game function, but I'm going to tell

45
00:02:50.500 --> 00:02:50.860
you why.

46
00:02:51.280 --> 00:02:53.950
So we are going to divide it by the FPS.

47
00:02:54.400 --> 00:03:03.430
So right after that, what I'm going to do is I'm going to create the game, the game initialization

48
00:03:04.330 --> 00:03:09.520
function, and I'm going to say function game init.

49
00:03:10.120 --> 00:03:13.600
I'm not going to pass in any groups, any parameters.

50
00:03:13.600 --> 00:03:17.620
I'm just going to I'm just going to call a run game in here.

51
00:03:17.830 --> 00:03:18.200
Right.

52
00:03:18.400 --> 00:03:20.290
So we have called the Irun game there.

53
00:03:20.410 --> 00:03:23.290
And now let's actually save this and let's check it out.

54
00:03:23.530 --> 00:03:24.340
So there we go.

55
00:03:24.340 --> 00:03:33.010
Our canvas is drawn and you can see that the thing is about this canvas, something that we can't actually

56
00:03:33.010 --> 00:03:41.080
visualize as that the canvas is constantly being redrawn 60 times per one second.

57
00:03:41.080 --> 00:03:47.200
The canvas is being drawn and clearly drawn and clear, and the color for the canvas comes from the

58
00:03:47.200 --> 00:03:47.800
right there.

59
00:03:48.280 --> 00:03:55.690
The next thing that I would like to do here is let's go ahead and let's call the functions that we have

60
00:03:55.690 --> 00:03:56.620
created there.

61
00:03:56.920 --> 00:04:04.890
So for the draw, not for the drawing, it's a function I'm not going to pass in anything.

62
00:04:04.950 --> 00:04:05.260
Right.

63
00:04:05.260 --> 00:04:11.320
So I'm just going to say, let's just call it draw net, save it.

64
00:04:11.350 --> 00:04:12.130
Let's come here.

65
00:04:12.130 --> 00:04:12.880
Let's check it out.

66
00:04:13.150 --> 00:04:13.690
There we go.

67
00:04:13.690 --> 00:04:17.329
Sabaneta has been successfully drawn, OK?

68
00:04:17.380 --> 00:04:19.000
They are completely identical.

69
00:04:19.120 --> 00:04:21.640
So we just we just had to draw that net.

70
00:04:21.640 --> 00:04:23.620
Call that right.

71
00:04:23.620 --> 00:04:28.690
And OK, so the next thing that I want to call is going to be drawing our scores.

72
00:04:28.690 --> 00:04:33.820
So draw, score, function.

73
00:04:35.830 --> 00:04:44.710
And what was the function, it was dry text, so so if I come up here, this is our text we had, we

74
00:04:44.710 --> 00:04:49.320
must have content then the exposition, the Y position and then the color.

75
00:04:49.870 --> 00:04:58.140
So the content of this draw text is going to come from the player, the player score.

76
00:04:58.180 --> 00:04:58.600
Right.

77
00:04:58.780 --> 00:05:04.380
So which player score it is going to be is it depends on which players actually score it.

78
00:05:04.600 --> 00:05:07.420
So we need to call this function two times.

79
00:05:07.660 --> 00:05:10.300
So I'm going to call it two times or I'm just going to call it once.

80
00:05:10.310 --> 00:05:11.400
I'm just going to copy it.

81
00:05:11.770 --> 00:05:19.990
So the first time that I want to pass and the content, the content is going to be player paddle are

82
00:05:20.020 --> 00:05:23.040
I don't score.

83
00:05:23.560 --> 00:05:23.820
Right.

84
00:05:24.310 --> 00:05:25.570
So what is the score?

85
00:05:25.870 --> 00:05:30.280
The score is initially this is the score is initially zero.

86
00:05:30.290 --> 00:05:34.230
So it is going to grab that and it is going to pass it right here.

87
00:05:34.240 --> 00:05:41.050
So that is the first argument for the second one we need to pass and the exposition and then the Y position

88
00:05:41.050 --> 00:05:41.840
and then the color.

89
00:05:42.130 --> 00:05:47.770
So now I'm going to go and I'm going to go over the concept for like 30 seconds and then we are going

90
00:05:47.770 --> 00:05:48.660
to jump into game.

91
00:05:49.990 --> 00:05:52.420
So this is our canvas.

92
00:05:52.570 --> 00:05:55.800
This line says that the canvas has divided by two.

93
00:05:56.050 --> 00:06:01.060
So this part is canvas with divided by two.

94
00:06:01.480 --> 00:06:02.020
All right.

95
00:06:02.200 --> 00:06:04.570
And this is also canvas with divided by two.

96
00:06:04.870 --> 00:06:05.500
But now keep.

97
00:06:05.800 --> 00:06:12.610
Now, let's think let's imagine if I divide each of these halves of the canvas by two, we are going

98
00:06:12.610 --> 00:06:15.430
to get four different segments of a canvas.

99
00:06:15.700 --> 00:06:16.030
Right.

100
00:06:16.210 --> 00:06:21.790
It means that we have the first segment of the canvas, then the second, then the third and then the

101
00:06:21.790 --> 00:06:22.180
fourth.

102
00:06:22.930 --> 00:06:23.290
Right.

103
00:06:23.440 --> 00:06:33.310
And how why do I want to do this is because the drawing, these texts that's actually I've actually

104
00:06:33.310 --> 00:06:34.030
drawn this.

105
00:06:34.450 --> 00:06:41.950
I've divided the canvas and this text when I when I divide the canvas directly in this metal, this

106
00:06:41.950 --> 00:06:43.690
text appears right there.

107
00:06:43.870 --> 00:06:52.180
So the text appears right at the first the intersection of the first and the second segment of the canvas.

108
00:06:52.900 --> 00:07:00.490
This text appears right at the intersection of the third and fourth segments of the canvas.

109
00:07:00.610 --> 00:07:02.860
So let's interpret that into code.

110
00:07:03.340 --> 00:07:10.090
So the for the r.i the intersection is the first segment and then the second segment.

111
00:07:10.090 --> 00:07:10.510
All right.

112
00:07:11.850 --> 00:07:14.460
So I'm just going to I'm just going to open parentheses.

113
00:07:14.550 --> 00:07:16.110
It's going to be the first segment.

114
00:07:16.470 --> 00:07:22.230
The first segment of what the first segment of the canvas is with how many times the canvas has been

115
00:07:22.230 --> 00:07:22.920
divided.

116
00:07:22.920 --> 00:07:24.930
It has been divided by four times.

117
00:07:25.230 --> 00:07:25.940
Very simple.

118
00:07:26.430 --> 00:07:30.570
So this is the with this is where the position for that is going to come from.

119
00:07:30.750 --> 00:07:32.970
You can tweak these values as well.

120
00:07:33.340 --> 00:07:35.810
And how about the Y position?

121
00:07:36.030 --> 00:07:43.530
So for the Y position, I've divided the canvas into ten different parts and the score is directly on

122
00:07:43.530 --> 00:07:44.910
the first segment.

123
00:07:45.270 --> 00:07:46.500
So it's on the first segment.

124
00:07:46.510 --> 00:07:51.670
This is second, third, fourth, fifth, sixth, seventh, eighth, ninth and tenth.

125
00:07:52.200 --> 00:07:52.500
All right.

126
00:07:52.510 --> 00:07:56.310
So it is going to be on the first segment of that division.

127
00:07:56.580 --> 00:08:03.180
We basically think of it like Excel tables, like tables that you just divide the canvas divided and

128
00:08:03.180 --> 00:08:04.760
you just put something somewhere.

129
00:08:05.040 --> 00:08:06.320
I've basically done that.

130
00:08:06.330 --> 00:08:08.720
This is basic alignment using canvas.

131
00:08:09.210 --> 00:08:11.190
So this is going to be Dutkiewicz.

132
00:08:12.360 --> 00:08:14.000
How many divisions are there?

133
00:08:14.010 --> 00:08:19.980
There are ten divisions and I'm going to grab that and I'm going to put the division right here.

134
00:08:20.610 --> 00:08:21.120
All right.

135
00:08:21.120 --> 00:08:26.550
And I'm going to grab this division and I'm going to put it right here.

136
00:08:26.550 --> 00:08:26.970
I know.

137
00:08:28.110 --> 00:08:35.100
I know we don't need to multiply it by one, but this is just because whenever we get to the draw text

138
00:08:35.100 --> 00:08:37.520
for the A.I., this is going to make sense.

139
00:08:37.530 --> 00:08:37.890
Why?

140
00:08:38.100 --> 00:08:43.429
Why have I provided that they're the color is going to be white.

141
00:08:43.860 --> 00:08:47.160
So now if I say that, you can see that it rearranges our code.

142
00:08:47.490 --> 00:08:55.350
So this is going to be draw text for the R.I and this is going to be for the A.I. So for the AI, where

143
00:08:55.350 --> 00:08:59.460
is the canvas versus the score in the with.

144
00:09:00.620 --> 00:09:05.900
It's directly at the intersection of the third and the fourth, so instead of passing one, I'm just

145
00:09:05.900 --> 00:09:10.340
going to pass in three and the vertical position is going to be the same.

146
00:09:10.340 --> 00:09:13.640
And the score, the color is also going to be the same.

147
00:09:13.670 --> 00:09:17.500
So if I if I save it and if I come here, you can see that it goes there.

148
00:09:17.690 --> 00:09:23.830
And now if I if I were to just like, decrease the width of this window and just keep it floating around,

149
00:09:24.110 --> 00:09:25.200
take a look at this one.

150
00:09:25.220 --> 00:09:28.140
So I'm just going to make it make this one smaller.

151
00:09:28.280 --> 00:09:35.180
So if I were to put it like at five five segments of of ten segments of the height, it should come

152
00:09:35.180 --> 00:09:35.770
to the middle.

153
00:09:36.290 --> 00:09:37.580
See, it's in the middle.

154
00:09:37.790 --> 00:09:41.450
If I put it at the eight segments of the height, it's going to go there.

155
00:09:41.450 --> 00:09:45.140
If I put it at 10 segments of the height, it is going to go there.

156
00:09:45.650 --> 00:09:48.380
If you put it at one segment of the height, it's going to go there.

157
00:09:49.310 --> 00:09:49.600
All right.

158
00:09:49.850 --> 00:09:52.160
And the same one at the same goes for the width.

159
00:09:52.400 --> 00:09:56.270
So if I put it at the fourth, it is going to go it's going to go off.

160
00:09:56.540 --> 00:09:59.740
If I put it at the second, you can see it's directly in the center.

161
00:09:59.960 --> 00:10:03.710
If I put it at the one, then both of them are on top of each other.

162
00:10:03.920 --> 00:10:05.350
That's why they're thick.

163
00:10:06.260 --> 00:10:11.140
So let's put it at the third one and it's come here.

164
00:10:11.240 --> 00:10:13.130
So we have successfully drawn them.

165
00:10:13.320 --> 00:10:20.300
The next thing that I want to do as I want to draw our paddles in this lecture as well, because these

166
00:10:20.300 --> 00:10:21.170
are really simple.

167
00:10:21.180 --> 00:10:21.480
Right?

168
00:10:21.740 --> 00:10:26.030
So I'm going to say a draw drawing the paddles.

169
00:10:28.160 --> 00:10:37.790
For our I and I, so we have a function for drawing rectangles, we are going to call this function

170
00:10:37.910 --> 00:10:43.520
and whenever we pass in different parameters, it is going to grab it with different positions.

171
00:10:43.520 --> 00:10:46.360
It's going to create different rectangles in different positions.

172
00:10:46.910 --> 00:10:49.190
So the first rectangle is going to be right here.

173
00:10:49.190 --> 00:10:50.930
The second one is going to be right there.

174
00:10:51.170 --> 00:10:54.370
So we already know how that is going to work.

175
00:10:54.380 --> 00:10:55.910
So I'm going to come down here.

176
00:10:56.060 --> 00:10:58.340
I'm going to call the draw rect function.

177
00:10:59.890 --> 00:11:07.090
Right, first off, let's draw the player, our eye panel, so I'm going to say player ah oops.

178
00:11:07.540 --> 00:11:13.250
Ah I what is the exposition that is going to be the exposition of the panel.

179
00:11:13.600 --> 00:11:19.300
We have already talked about that and this is going to grab it from this object that we have here.

180
00:11:20.290 --> 00:11:26.770
So this is our object and it is going to grab the exposition from that, that's why we used it up there.

181
00:11:26.770 --> 00:11:33.790
So it's easier for us to reference it the way position is going to be the Y position for the panel,

182
00:11:34.480 --> 00:11:37.250
the width is going to be the width of the panel.

183
00:11:37.480 --> 00:11:41.980
So with the height is going to be the height of the panel.

184
00:11:44.200 --> 00:11:45.140
What else do we have?

185
00:11:45.160 --> 00:11:53.290
So finally we have color, so the color is going to be the color for the panel and if I save it and

186
00:11:53.290 --> 00:11:55.240
if I come here, we should see our panel.

187
00:11:55.270 --> 00:11:55.810
There we go.

188
00:11:56.470 --> 00:12:02.240
Now, you can see that this game is getting closer and closer to something that we can use.

189
00:12:02.740 --> 00:12:07.780
So if I say if I copy that, put it right here, I'm just going to grab all the prize and I'm going

190
00:12:07.780 --> 00:12:09.370
to change them to I.

191
00:12:10.660 --> 00:12:11.410
And that's it.

192
00:12:11.770 --> 00:12:16.690
And there we go, we have our part for the air, because these values, these properties are coming

193
00:12:16.690 --> 00:12:18.280
from the object that we created.

194
00:12:18.670 --> 00:12:21.580
And the final thing that I want to do in this lecture is.

195
00:12:22.850 --> 00:12:32.780
Draw the ball, so I'm going to say drawing the ball for drawing any sort of circle circles, we have

196
00:12:32.780 --> 00:12:41.450
creative utility function for that and we can basically grab this function and pass and the X Y radius

197
00:12:41.450 --> 00:12:42.110
and color.

198
00:12:42.290 --> 00:12:46.930
And it is going to draw as many circles as we want, but we want only one.

199
00:12:47.180 --> 00:12:53.480
So I'm going to call that function, draw a circle and I'm going to say grab the exposition of the ball.

200
00:12:54.260 --> 00:12:57.590
Then for the position, for the Y position.

201
00:12:57.590 --> 00:12:59.480
Grab the Y position of the ball.

202
00:13:00.670 --> 00:13:05.710
For the with grab the balls with for the height.

203
00:13:07.700 --> 00:13:15.650
For the hide, grab the Von's height and for the color guard, grab the balls color.

204
00:13:17.560 --> 00:13:22.250
All right, so let's say that we should see our ball.

205
00:13:22.390 --> 00:13:23.790
I mean, is there any error?

206
00:13:23.800 --> 00:13:25.770
I mean, they should inspect it.

207
00:13:25.840 --> 00:13:26.950
There are no errors.

208
00:13:26.950 --> 00:13:29.110
And why do not we see that?

209
00:13:30.580 --> 00:13:42.220
So we have our borders, XP, that Wikipedia, Editta, GCG, DCL, Okelo, our draw circle.

210
00:13:44.490 --> 00:13:46.240
One, two, three, four.

211
00:13:46.620 --> 00:13:50.130
How many have we passed and one, two, three, four, five.

212
00:13:51.400 --> 00:13:58.780
Oh, this is the exposition for the ball we don't have any with in height, what do we have?

213
00:13:58.780 --> 00:14:00.310
We just have a radius.

214
00:14:00.810 --> 00:14:07.840
Okay, so I'm going to remove the height because they're not rectangles.

215
00:14:08.410 --> 00:14:10.000
We just have a radius.

216
00:14:10.000 --> 00:14:11.370
That's why we didn't see the ball.

217
00:14:11.950 --> 00:14:12.610
There we go.

218
00:14:12.640 --> 00:14:13.870
There is our ball.

219
00:14:15.420 --> 00:14:22.140
So we have successfully created the functions for the elements, the properties for the elements, and

220
00:14:22.140 --> 00:14:28.950
then we call the functions with those properties for the game elements and it is going to redraw rescreen

221
00:14:28.960 --> 00:14:30.670
60 times per second.

222
00:14:31.410 --> 00:14:32.580
That's it for this structure.

223
00:14:32.610 --> 00:14:34.350
See you guys in the next one.

