1
00:00:01,839 --> 00:00:02,780
Hi, everyone.

2
00:00:02,980 --> 00:00:07,150
In this lecture, we are going to talk about function declarations.

3
00:00:08,520 --> 00:00:15,630
All right, so we have talked about what functions are and how we can use them to our advantage, but

4
00:00:15,630 --> 00:00:19,790
this chapter is specifically designed for four functions.

5
00:00:20,040 --> 00:00:24,590
So we are going to dive very deep into the topic of functions.

6
00:00:24,600 --> 00:00:24,990
All right.

7
00:00:26,070 --> 00:00:31,010
And we are going to take a look at how we can create functions in different ways.

8
00:00:31,050 --> 00:00:37,050
OK, so the first kind of functions that we are going to talk about are called function declarations

9
00:00:37,350 --> 00:00:39,100
or function statements.

10
00:00:39,640 --> 00:00:44,850
Now, before diving into function declarations, I just want to go over what functions are one more

11
00:00:44,850 --> 00:00:46,020
time very quickly.

12
00:00:46,380 --> 00:00:53,400
So functions are actually reuse reusable pieces of code that we can use all the time.

13
00:00:54,330 --> 00:01:02,250
Now there are two steps to using a function to implementing a function in JavaScript first.

14
00:01:03,910 --> 00:01:09,200
We define a function and then we call the function as many times as we want.

15
00:01:09,460 --> 00:01:15,610
So as long as we call it, as long as we don't call it until we call it, the function is going to be

16
00:01:15,610 --> 00:01:16,000
asleep.

17
00:01:16,240 --> 00:01:18,580
The function is not going to do anything.

18
00:01:18,850 --> 00:01:23,500
So we have to call the function and we have to call it that function.

19
00:01:23,500 --> 00:01:26,260
Do this and the function is going to get up and do that.

20
00:01:27,160 --> 00:01:32,270
So first off, what I'm going to do is I'm going to we are going to go through a few examples in this

21
00:01:32,290 --> 00:01:32,700
lecture.

22
00:01:32,710 --> 00:01:40,630
So we are so we can make sure that we fully understand what function declarations are, because later

23
00:01:40,630 --> 00:01:44,710
in this chapter, we are going to talk about function expressions as well.

24
00:01:44,860 --> 00:01:48,190
No function declarations are also called function statements.

25
00:01:49,030 --> 00:01:55,400
So function declarations are what are named functions.

26
00:01:55,420 --> 00:02:02,180
So for creating any function, the first keyword that we have to write is the function itself.

27
00:02:02,410 --> 00:02:08,400
So this function is not the name of the function, the name of the function comes now.

28
00:02:08,620 --> 00:02:16,840
So if I go ahead and if I say my func, this is the name of the function and this is the simplest syntax

29
00:02:16,840 --> 00:02:17,780
for any function.

30
00:02:18,160 --> 00:02:19,820
So we have the function keyword.

31
00:02:20,020 --> 00:02:22,580
We have this part is the function name.

32
00:02:22,930 --> 00:02:30,750
This is the parentheses inside which we pass in a function parameter which we are going to cover.

33
00:02:31,000 --> 00:02:38,740
And this is the function scope, which is which is responsible for implementing a code that we tell

34
00:02:38,740 --> 00:02:39,160
it to.

35
00:02:40,080 --> 00:02:46,440
All right, so we are going to start with very, very simple stuff, very first, we want this function

36
00:02:46,440 --> 00:02:49,110
to log to the console, a message.

37
00:02:49,500 --> 00:02:55,320
The message is going to be I am a function right now.

38
00:02:55,340 --> 00:02:57,600
Now, this function has not been called.

39
00:02:57,870 --> 00:03:01,140
That's why there is no result in the console.

40
00:03:01,350 --> 00:03:05,930
Now, in order to make a function work, we have to call it now.

41
00:03:05,940 --> 00:03:08,280
The function is called by the function name.

42
00:03:08,430 --> 00:03:12,350
So we are going to say my func because it's a function.

43
00:03:12,360 --> 00:03:18,130
We open parentheses and now we just save it and we are going to see I am a function.

44
00:03:18,510 --> 00:03:25,920
Now this function name in parentheses is different than this function name in parentheses as this is

45
00:03:25,920 --> 00:03:32,070
the function name and inside the parenthesis here we are going to pass in a parameter, but in here,

46
00:03:32,640 --> 00:03:39,300
in the function call we do not pass parameters and the function call we pass in arguments.

47
00:03:39,540 --> 00:03:51,060
So I'm just going to go ahead and comment that out at the top in the function name we pass in the function

48
00:03:51,060 --> 00:03:51,390
name.

49
00:03:51,420 --> 00:03:54,840
I'm just going to say function name parameters.

50
00:03:58,250 --> 00:03:59,000
And.

51
00:04:00,220 --> 00:04:08,210
In the function call, you are going to have arguments and that's in the function call, all right.

52
00:04:08,830 --> 00:04:14,380
So whenever you pass in an argument, the argument is going to take the place of the parameter and it

53
00:04:14,380 --> 00:04:17,529
is going to be inserted within the function, which we don't have now.

54
00:04:17,920 --> 00:04:22,770
OK, so this was our very first look at the function declaration.

55
00:04:22,780 --> 00:04:25,410
Now we are going to take a look at a few examples.

56
00:04:25,660 --> 00:04:27,970
So this is our example, number one.

57
00:04:27,970 --> 00:04:35,230
And we and in this first rewrite the function key word and then the function name, which is some nums,

58
00:04:35,690 --> 00:04:44,580
it means that we want to check some some numbers and we are going to say consult the log five plus six.

59
00:04:44,920 --> 00:04:46,860
And when I say it, we don't see anything.

60
00:04:47,020 --> 00:04:50,460
The reason for that is we have to call the sum nums function.

61
00:04:50,980 --> 00:04:53,000
And when we say it, we are going to get 11.

62
00:04:53,380 --> 00:04:57,160
So this is the first example, very, very simple stuff.

63
00:04:57,640 --> 00:05:01,090
We are going to get to the advanced stuff later down the course.

64
00:05:01,680 --> 00:05:02,050
All right.

65
00:05:02,070 --> 00:05:03,790
So this is our example.

66
00:05:03,790 --> 00:05:08,800
Number two in this, we are going to say we are going to create a function and we are going to call

67
00:05:08,800 --> 00:05:09,640
it message.

68
00:05:10,930 --> 00:05:11,360
All right.

69
00:05:11,710 --> 00:05:20,500
And inside the function, we are going to create a variable called red and we are going to give it a

70
00:05:20,500 --> 00:05:28,330
code which is which is going to be cash flow as zero zero zero zero.

71
00:05:28,510 --> 00:05:28,930
Right.

72
00:05:28,930 --> 00:05:29,620
Is tomorrow.

73
00:05:29,950 --> 00:05:32,380
And we are going to say council does log.

74
00:05:33,970 --> 00:05:37,110
We're going to use the tactics, the hex.

75
00:05:38,530 --> 00:05:47,710
I'm just going to go lower case, the hex value of the red color is now we are going to use our template

76
00:05:47,710 --> 00:05:48,250
literals.

77
00:05:48,250 --> 00:05:52,320
And inside there we're going to pass in our our variable.

78
00:05:52,330 --> 00:05:52,690
Right.

79
00:05:53,050 --> 00:05:56,940
So the hex value of the red color is this.

80
00:05:57,190 --> 00:06:03,610
Now, whatever we call the function, the message function, we are going to see that message.

81
00:06:03,970 --> 00:06:08,580
The color of the red sorry, the hex value of the red color is this.

82
00:06:09,040 --> 00:06:10,880
So this is our second example.

83
00:06:10,890 --> 00:06:14,830
Let's go ahead and let's dive into our third example.

84
00:06:16,440 --> 00:06:22,920
This is example number three and in here, what I'm going to do is I'm going to say function and the

85
00:06:22,920 --> 00:06:28,250
function name is going to be color and we are going to pass in a parameter.

86
00:06:28,300 --> 00:06:28,680
Right.

87
00:06:28,690 --> 00:06:33,810
So the parameter is going to be hex and we are going to say console's Deathlok.

88
00:06:35,570 --> 00:06:36,770
Consider log what?

89
00:06:36,800 --> 00:06:42,950
Consider log hacks and in here we are going to pass, we are going to call the function and inside the

90
00:06:42,950 --> 00:06:44,860
function call what do we pass?

91
00:06:45,020 --> 00:06:48,710
We pass arguments or argument or arguments.

92
00:06:49,920 --> 00:06:56,520
So what I'm going to do is I'm going to pass in a color value if one one and oh, and we are going to

93
00:06:56,520 --> 00:06:57,030
save it.

94
00:06:58,530 --> 00:07:03,020
Oh, this is a string, so it should be Pastan in quotes.

95
00:07:03,060 --> 00:07:04,840
Let's save it and we are going to see that.

96
00:07:05,280 --> 00:07:07,480
So what what is actually happening here?

97
00:07:07,770 --> 00:07:13,710
So whenever we call the function and we pass in an argument, the argument is going to take is going

98
00:07:13,710 --> 00:07:18,420
to be passed and right here instead of or in place of the function parameter.

99
00:07:18,660 --> 00:07:24,540
And when when it is passed here, it is going to be passed by this function inside the function scope

100
00:07:24,540 --> 00:07:26,070
or inside the function block.

101
00:07:26,580 --> 00:07:33,420
And when it is open and whenever we see that parameter, we are going to replace it by the value for

102
00:07:33,420 --> 00:07:34,470
the function argument.

103
00:07:34,770 --> 00:07:38,840
So actually this entire thing is going to be passed right here.

104
00:07:39,540 --> 00:07:46,890
We can call the function and as many times as we want, we can pass in another color hex color.

105
00:07:46,890 --> 00:07:47,940
And we are going to say.

106
00:07:50,010 --> 00:07:52,380
Ey ey ey ey.

107
00:07:54,200 --> 00:08:01,430
It's DFC that save it and we are going to see that so we can use the function as many times as we want.

108
00:08:01,970 --> 00:08:09,140
That's basically the whole idea of calling functions, creating functions and calling functions multiple

109
00:08:09,140 --> 00:08:09,620
times.

110
00:08:10,250 --> 00:08:10,630
OK.

111
00:08:11,810 --> 00:08:12,290
E.

112
00:08:12,310 --> 00:08:17,120
S for f random color color codes, right?

113
00:08:17,420 --> 00:08:18,810
So this is our example.

114
00:08:18,830 --> 00:08:24,570
Number three and the final example is going to be our example, number four.

115
00:08:24,890 --> 00:08:28,710
So we are going to say example for and in here.

116
00:08:28,730 --> 00:08:31,540
First off, let's go ahead and let's write the oops.

117
00:08:31,550 --> 00:08:35,440
What was that function keyword itself.

118
00:08:35,630 --> 00:08:42,260
Then we are going to give it a name of calc nums, calculate numbers, and we are going to pass an X

119
00:08:42,260 --> 00:08:46,590
here as a parameter and we are going to say console Deathlok.

120
00:08:47,060 --> 00:08:49,740
Now this is going to be like a rather long one.

121
00:08:49,760 --> 00:08:56,030
So what I'm going to do is first I'm going to go ahead and I'm going to create I'm going to create another

122
00:08:56,030 --> 00:08:56,610
one as well.

123
00:08:56,870 --> 00:08:58,970
So this is going to be X plus one.

124
00:09:00,260 --> 00:09:10,070
And outside the the parentheses, I'm going to multiply it by X and when it is multiplied by X, what

125
00:09:10,070 --> 00:09:16,380
I want to do is I want to grab the whole result and I want to divide it by X plus ten.

126
00:09:16,490 --> 00:09:17,200
Let's save it.

127
00:09:17,720 --> 00:09:25,460
So now whenever we call the function calc called nums, we should present an argument for that function

128
00:09:25,460 --> 00:09:26,050
parameter.

129
00:09:26,300 --> 00:09:29,820
So let's say the argument is four and we are going to get this number.

130
00:09:30,380 --> 00:09:36,530
So if we're passing like 200, we are going to get this number because it is going to come right here.

131
00:09:36,540 --> 00:09:46,010
For example, if it is 200, it is going to be 200 plus one to one divided by 200 and then sort multiplied

132
00:09:46,010 --> 00:09:49,700
by 200 and then divided by two hundred and ten.

133
00:09:49,850 --> 00:09:52,590
And we are going to get this value right.

134
00:09:52,910 --> 00:09:56,330
So this is about function declarations.

135
00:09:56,330 --> 00:09:58,720
In our next lectures, we are going to even die.

136
00:09:58,970 --> 00:10:01,470
We're going to dive even deeper into functions.

137
00:10:01,470 --> 00:10:03,740
So see you guys in the next lecture.

