1
00:00:02,040 --> 00:00:07,380
Hi, everyone, in this picture, we are going to clean up our code using promises.

2
00:00:08,370 --> 00:00:12,750
All right, so this is the code that we had from our callback.

3
00:00:12,750 --> 00:00:14,670
Hell, where are you?

4
00:00:14,670 --> 00:00:19,140
This code that we had and I've just copied and pasted it right here.

5
00:00:19,650 --> 00:00:19,980
Right.

6
00:00:20,100 --> 00:00:26,520
And now what we're going to do is we're going to use promises to take a look at how this callback can

7
00:00:26,520 --> 00:00:27,290
be resolved.

8
00:00:27,720 --> 00:00:30,510
So let's look where this actually ends.

9
00:00:30,510 --> 00:00:31,850
It ends right here.

10
00:00:31,860 --> 00:00:34,470
So I'm just going to go ahead and I'm going to delete all that.

11
00:00:35,220 --> 00:00:36,270
You're going to save it.

12
00:00:36,560 --> 00:00:36,930
All right.

13
00:00:37,140 --> 00:00:38,430
So now what are we going to do?

14
00:00:38,430 --> 00:00:41,790
Is inside this get questions function?

15
00:00:42,720 --> 00:00:45,690
We are going to instantiate a new promise.

16
00:00:45,690 --> 00:00:49,440
But in this case, we are going to return the new promise.

17
00:00:50,070 --> 00:00:59,070
So return new promise to keywords are made available to us, and that is resolve and reject.

18
00:01:00,150 --> 00:01:01,810
And then we are going to run this function.

19
00:01:01,830 --> 00:01:03,540
So now everything in here.

20
00:01:04,560 --> 00:01:08,940
I mean, like everything is going to come right here.

21
00:01:08,950 --> 00:01:09,690
That's it.

22
00:01:10,770 --> 00:01:13,050
All right, why do we have errors?

23
00:01:15,820 --> 00:01:26,020
OK, so we have worries there, Arakan state, oh, this area is missing, perfect, so now everything's

24
00:01:26,020 --> 00:01:26,610
right here.

25
00:01:27,070 --> 00:01:34,060
Now we are not using callbacks anymore, so I'm going to get rid of the callback from here and in here

26
00:01:34,060 --> 00:01:35,950
instead of passing a callback.

27
00:01:36,130 --> 00:01:38,900
Now, this is where the request is successful, right?

28
00:01:39,310 --> 00:01:44,440
So instead of passing a callback, we are going to pass on the resolve function.

29
00:01:44,440 --> 00:01:47,250
So resolve what do we want to do?

30
00:01:47,440 --> 00:01:50,170
We want to grab our questions retrieved.

31
00:01:50,560 --> 00:01:56,620
And in here, instead of passing again the same callback, we are going to pass and reject.

32
00:01:56,800 --> 00:02:00,420
So this is where the where the HDP request is resolved.

33
00:02:00,670 --> 00:02:02,320
This is where it is rejected.

34
00:02:02,350 --> 00:02:07,660
So in here, we are going to do reject and I'm just going to say the same thing.

35
00:02:07,660 --> 00:02:10,060
Error, fetching data.

36
00:02:11,730 --> 00:02:12,060
Right.

37
00:02:12,180 --> 00:02:18,480
So everything else works in the same way we have been able to clean up our code a little bit now what

38
00:02:18,480 --> 00:02:22,680
we are going to do is we need to call our get questions.

39
00:02:23,010 --> 00:02:26,460
So I'm going to go outside of it, which is right here.

40
00:02:27,050 --> 00:02:27,390
Right.

41
00:02:27,390 --> 00:02:28,830
And we are going to call them.

42
00:02:29,070 --> 00:02:31,460
So I'm going to do this in two steps.

43
00:02:31,470 --> 00:02:33,840
So you really understand what we are doing here.

44
00:02:34,110 --> 00:02:37,260
So first off, let's go ahead and let's say get questions.

45
00:02:38,040 --> 00:02:38,410
All right.

46
00:02:38,730 --> 00:02:43,130
So inside here, because this question has one parameter.

47
00:02:43,140 --> 00:02:46,660
It requires an argument, which is the value of that parameter.

48
00:02:46,860 --> 00:02:52,730
So this parameter is actually the question source for which is actually the request.

49
00:02:52,740 --> 00:02:53,880
You are a source.

50
00:02:54,150 --> 00:02:55,050
What is the source?

51
00:02:55,050 --> 00:02:56,760
The source is going to be the same thing.

52
00:02:57,360 --> 00:02:59,970
We go into the questions folder.

53
00:03:01,970 --> 00:03:03,080
Questions folder.

54
00:03:03,110 --> 00:03:11,840
And from there, we are going to grab the six questions come, by the way, to respond that questions

55
00:03:11,840 --> 00:03:15,650
one dash to dot Jason, Jason.

56
00:03:16,010 --> 00:03:16,340
All right.

57
00:03:16,350 --> 00:03:17,590
So we grab that.

58
00:03:17,780 --> 00:03:19,120
So now we are done with this.

59
00:03:19,130 --> 00:03:23,050
After that, I'm just going to toss in a dot then in here.

60
00:03:23,210 --> 00:03:31,010
Now, this dot then is going to be resolved or is going to be used when the process started, when they

61
00:03:31,010 --> 00:03:35,960
promised, not the process, when the promise is either resolved or rejected.

62
00:03:36,410 --> 00:03:38,300
So what we are going to do here is.

63
00:03:39,720 --> 00:03:45,780
First off, I'm just going to make a request to this single file, to the single file, and then we

64
00:03:45,780 --> 00:03:50,880
are going to resolve and reject it, and then I'm going to show you how you can make requests to multiple

65
00:03:50,880 --> 00:03:52,090
API endpoints.

66
00:03:52,590 --> 00:03:56,310
So in here, we are just going to pass on the questions.

67
00:03:59,870 --> 00:04:07,040
Come on, so we are going to pass on the questions data if the promise is resolved and what do we want

68
00:04:07,040 --> 00:04:07,780
to do with that?

69
00:04:08,360 --> 00:04:15,950
We want to say, Consul Locke, we want to grab our questions data now because we are going to have

70
00:04:15,950 --> 00:04:21,100
five different data for our questions we have because we have five different files.

71
00:04:21,350 --> 00:04:23,930
I'm going to try to keep up with them.

72
00:04:23,930 --> 00:04:26,960
So I'm going to say I'm going to print a string as well.

73
00:04:27,380 --> 00:04:28,790
Which six questions?

74
00:04:28,790 --> 00:04:32,150
One, one, two, three, one to two.

75
00:04:32,720 --> 00:04:38,100
And then we are going to print the questions data, questions date.

76
00:04:38,600 --> 00:04:40,910
So this one is done right now.

77
00:04:42,440 --> 00:04:47,390
What we are going to do is we are going to tag on the data catch as well.

78
00:04:47,400 --> 00:04:54,530
So we are going to say that catch this is going to take this is going to be called this function is

79
00:04:54,530 --> 00:04:58,310
called whenever this elusive block.

80
00:04:58,310 --> 00:05:00,410
It runs whenever we get an error.

81
00:05:01,130 --> 00:05:01,410
Right.

82
00:05:01,510 --> 00:05:05,900
So if I were to go ahead and complete this, I would just write error.

83
00:05:06,440 --> 00:05:08,630
And what do we want to do with this error?

84
00:05:09,110 --> 00:05:12,080
We just want to say we just want to log it to the console.

85
00:05:12,090 --> 00:05:16,090
So console the log and I'm going to print a little message as well.

86
00:05:16,100 --> 00:05:17,750
I'm just going to say rejected.

87
00:05:18,690 --> 00:05:26,670
And then we are going to pass and our error should probably put in a comma here, so let's save it and

88
00:05:26,940 --> 00:05:28,440
let's make the smaller.

89
00:05:29,600 --> 00:05:31,730
OK, so let's.

90
00:05:32,890 --> 00:05:34,350
Keep the smaller as well.

91
00:05:35,380 --> 00:05:37,060
Scared to console.

92
00:05:38,440 --> 00:05:45,750
Now, if I click on this, you can see that we get I should shouldn't make this zoom zoom out.

93
00:05:45,760 --> 00:05:48,280
I'm not sure if you can see it clearly.

94
00:05:48,280 --> 00:05:51,670
And that is not a good thing that the teachers do when they zoom out.

95
00:05:52,390 --> 00:05:54,190
So I'm just going to do this.

96
00:05:54,730 --> 00:05:55,660
But you know what I mean?

97
00:05:55,660 --> 00:05:57,550
Like, if I zoom out, this is what we get.

98
00:05:57,880 --> 00:06:02,430
So we get questions wanted to do and we also get our questions.

99
00:06:02,740 --> 00:06:07,750
So we were able to do to make this request using promises.

100
00:06:08,080 --> 00:06:11,970
We can see we can see that we have used promises, but there is something missing.

101
00:06:12,370 --> 00:06:17,220
We have five files or we have five API endpoints.

102
00:06:17,530 --> 00:06:22,660
What if you want to make a request to those now before doing that, let's for example, let's say we

103
00:06:22,660 --> 00:06:23,770
have questions.

104
00:06:24,310 --> 00:06:28,240
We have a file that is questions one to five.

105
00:06:28,240 --> 00:06:29,620
We don't have that sort of file.

106
00:06:29,860 --> 00:06:31,600
So let's say, well, let's see what we get.

107
00:06:31,810 --> 00:06:35,980
So if I click on this, we can see that we get our error error.

108
00:06:36,250 --> 00:06:42,250
We rejected error, fetching data error, fetching data because the reddest state was four, but the

109
00:06:42,850 --> 00:06:46,460
HTTP status is four or four.

110
00:06:46,490 --> 00:06:48,400
See, that's why we get this error.

111
00:06:48,580 --> 00:06:54,790
So it's nice that we can see that this reject and resolve without commenting them out, like in a previous

112
00:06:54,790 --> 00:06:55,840
lecture they work.

113
00:06:56,230 --> 00:06:59,920
So I'm just going to go ahead and remove this one to five.

114
00:06:59,920 --> 00:07:01,450
Just put it back to one to two.

115
00:07:01,690 --> 00:07:03,800
And when I click, we make this request.

116
00:07:04,210 --> 00:07:07,800
So now let's go ahead and let's implement the second step.

117
00:07:07,960 --> 00:07:15,460
So the first step was just to warm you up so as to what we are going to do here that's going to come

118
00:07:15,460 --> 00:07:15,990
in that one.

119
00:07:16,420 --> 00:07:23,410
So this was the warm up state in step step and this step, we are going to make requests to all five

120
00:07:23,410 --> 00:07:24,930
of those files.

121
00:07:24,940 --> 00:07:25,300
All right.

122
00:07:26,060 --> 00:07:28,210
So now you know how these actually work.

123
00:07:28,390 --> 00:07:29,830
So I'm just going to breeze over them.

124
00:07:29,830 --> 00:07:32,830
So we have get questions for this.

125
00:07:32,830 --> 00:07:37,990
We are going to pass in a path to our questions, which I'm just going to grab it from there and I'm

126
00:07:37,990 --> 00:07:39,070
going to put it right here.

127
00:07:39,310 --> 00:07:41,260
And then we are going to add the dot.

128
00:07:41,260 --> 00:07:47,620
Then dot then is going to be added when we want to resolve the promise.

129
00:07:47,660 --> 00:07:50,850
I'm just going to grab the questions data and put it right here.

130
00:07:52,840 --> 00:07:56,800
Now, there is only there is going to be only like two things different.

131
00:07:57,040 --> 00:08:02,500
And I'm going to explain to you what those two things are and basically the rest of the stuff they are

132
00:08:02,500 --> 00:08:04,750
going to be like this, only two things.

133
00:08:04,750 --> 00:08:06,160
So we are going to.

134
00:08:07,950 --> 00:08:08,410
Uh.

135
00:08:09,580 --> 00:08:11,210
Questions.

136
00:08:11,800 --> 00:08:14,880
This is incorrect, misspelled, I just misspelled.

137
00:08:15,010 --> 00:08:21,880
Just ignore that I'm going to correct it in here and say questions, questions.

138
00:08:21,890 --> 00:08:25,180
All right, so we are going to say consult, log.

139
00:08:26,650 --> 00:08:28,410
And what do we want to log to the council?

140
00:08:28,420 --> 00:08:30,790
We want to log almost the same message.

141
00:08:31,270 --> 00:08:38,460
We are going to say question one to two and then we're going to grab our questions data.

142
00:08:39,070 --> 00:08:39,400
All right.

143
00:08:39,520 --> 00:08:45,620
So now so we have selected our first API endpoint in this case or our first U.

144
00:08:45,730 --> 00:08:46,120
URL.

145
00:08:46,360 --> 00:08:46,660
What?

146
00:08:47,080 --> 00:08:48,490
How can we select the second?

147
00:08:48,700 --> 00:08:51,030
So we are going to do it a different way.

148
00:08:51,250 --> 00:08:57,400
So in here, the way that we do it with promises is we are going to return the other promises.

149
00:08:57,670 --> 00:09:04,600
So the promise, they get questions, they get questions which should handle question number three and

150
00:09:04,600 --> 00:09:08,840
four or the second file that is going to be returned.

151
00:09:09,040 --> 00:09:09,390
All right.

152
00:09:09,550 --> 00:09:11,230
So we are going to say return.

153
00:09:11,230 --> 00:09:12,160
Return what?

154
00:09:12,460 --> 00:09:16,840
Now, keep in mind that we are still inside this dot then, right?

155
00:09:16,960 --> 00:09:17,470
We are.

156
00:09:17,950 --> 00:09:19,540
We are still inside this.

157
00:09:19,550 --> 00:09:19,900
Right.

158
00:09:20,100 --> 00:09:22,630
I'm going to explain to you why we are still inside.

159
00:09:23,110 --> 00:09:25,000
So we are going to grab our questions.

160
00:09:25,270 --> 00:09:31,930
And in here, I'm going to pass in the path for the second file that we want to grab or the second API

161
00:09:31,930 --> 00:09:32,470
endpoint.

162
00:09:32,470 --> 00:09:35,680
And I'm going to change it to three and to four.

163
00:09:36,100 --> 00:09:36,460
Right.

164
00:09:36,460 --> 00:09:42,160
So this is the second file and we are basically just returning this now.

165
00:09:42,160 --> 00:09:48,580
When we return this this quest get questions function when we call it and when we return it, it is

166
00:09:48,580 --> 00:09:49,960
going to return a promise.

167
00:09:50,440 --> 00:09:50,750
Right.

168
00:09:50,980 --> 00:09:57,730
And when this returns, I promise this entire thing all the way to here, it is going to return a promise.

169
00:09:58,420 --> 00:10:07,120
And when this entire thing returns a promise, we can we can put another dot and at the end of the initial

170
00:10:07,120 --> 00:10:09,310
dot and so does then.

171
00:10:09,400 --> 00:10:10,570
So not that end.

172
00:10:10,960 --> 00:10:14,800
We can put another dot then at the end of the initial one.

173
00:10:15,010 --> 00:10:21,100
So I'm just going to say that the reason that this is going to work is because this entire block is

174
00:10:21,100 --> 00:10:22,570
going to is going to return.

175
00:10:22,570 --> 00:10:23,140
I promise.

176
00:10:23,560 --> 00:10:28,510
This then only works when we have returned a promise like in this case.

177
00:10:28,660 --> 00:10:30,400
So we have returned a promise.

178
00:10:30,400 --> 00:10:35,830
That's why the original DOT then worked and now we are returning.

179
00:10:35,830 --> 00:10:37,480
And again, another promise.

180
00:10:37,480 --> 00:10:39,790
That's why the second Dudin is going to work.

181
00:10:41,090 --> 00:10:44,840
And in here, we're going to add questions, data.

182
00:10:45,800 --> 00:10:48,440
Right, and let's create the error function.

183
00:10:48,620 --> 00:10:50,360
What is this error function going to do?

184
00:10:50,600 --> 00:10:53,650
The error function is going to do basically the same things.

185
00:10:54,290 --> 00:11:00,620
So it is going to grab our question is going to print question three and four and then print the questions

186
00:11:00,620 --> 00:11:01,040
as well.

187
00:11:01,580 --> 00:11:06,050
Now we are going to create we are going to return this, get questions once more.

188
00:11:06,440 --> 00:11:13,920
But instead of looking for for the same API endpoint, we are going to look for a different API input.

189
00:11:14,270 --> 00:11:19,110
This is how we make requests to multiple files using promises.

190
00:11:19,490 --> 00:11:22,340
Now, we saw how callback, how they worked.

191
00:11:22,550 --> 00:11:26,250
Now this is how promises and this is also called promise chaining.

192
00:11:26,600 --> 00:11:32,530
Now, whenever I say return, get questions, six questions, five and six.

193
00:11:32,930 --> 00:11:40,000
This is going to return a promise and in and resulting in this entire thing, return and give promise

194
00:11:40,220 --> 00:11:42,800
so I can add another dot then as well.

195
00:11:43,070 --> 00:11:45,260
So now you know how this works, right?

196
00:11:45,710 --> 00:11:47,570
So questions we have questions.

197
00:11:47,570 --> 00:11:49,930
Data are going to create our error function.

198
00:11:50,330 --> 00:11:53,940
We are going to do the same thing in here until we are done.

199
00:11:54,590 --> 00:11:59,360
So this time I'm going to call it questions five and six.

200
00:12:00,760 --> 00:12:06,040
Because this is going to return questions five and six and just going to remove I'm just going to cut

201
00:12:06,040 --> 00:12:09,430
this because this is going to return questions five and six.

202
00:12:09,610 --> 00:12:12,900
And when it returns that, what do we want to do with that?

203
00:12:12,910 --> 00:12:18,830
So you can see that first the promise is returned, then we say what we want to do with that.

204
00:12:19,180 --> 00:12:22,770
Don't be confused with this, like in the first case.

205
00:12:22,780 --> 00:12:26,680
So if I were to like, I don't know, what should I do here?

206
00:12:27,130 --> 00:12:31,780
So I'm just going to create a comment, put the code that I you know what?

207
00:12:31,810 --> 00:12:34,120
I don't need to put this code here.

208
00:12:34,570 --> 00:12:38,470
So I'm I'm going to grab this.

209
00:12:40,400 --> 00:12:45,740
I'm going to grab all this right, I know it's going to throw an error, but I'm just going to put it

210
00:12:45,740 --> 00:12:46,070
here.

211
00:12:48,010 --> 00:12:54,340
Because I want to explain something now, keep this only this in mind and I'm going to zoom in, I guess

212
00:12:54,340 --> 00:12:55,180
that's a lot.

213
00:12:57,160 --> 00:12:59,240
Increase the largest.

214
00:12:59,830 --> 00:13:05,970
So what happens here now, this gett questions, this part that I've highlighted, it is going to return

215
00:13:05,980 --> 00:13:06,630
a promise.

216
00:13:07,030 --> 00:13:11,740
That's why we can add a dot then method on it when we return.

217
00:13:11,740 --> 00:13:12,610
Get questions.

218
00:13:13,300 --> 00:13:15,570
Aren't we stating the same thing?

219
00:13:15,760 --> 00:13:18,230
We are saying return another promise.

220
00:13:18,550 --> 00:13:20,440
That's why we can add a dot.

221
00:13:20,440 --> 00:13:22,480
Then after that, promises return.

222
00:13:22,780 --> 00:13:29,900
Keep in mind the dot then or dot catch they are added when the promise has already been returned.

223
00:13:30,340 --> 00:13:38,500
So the dot then relating this promise comes after the promise in the same case that we had a promise

224
00:13:38,500 --> 00:13:41,320
here and the dot then came after it.

225
00:13:41,530 --> 00:13:44,550
So this is the promise and the dot then came after.

226
00:13:44,690 --> 00:13:47,930
It works in the same way we have a promise, then comes after it.

227
00:13:48,370 --> 00:13:51,240
So in this this way, you're not confused, right?

228
00:13:51,520 --> 00:13:57,490
So in here what we have is now we are we are returning another promise.

229
00:13:57,670 --> 00:14:03,770
And this time it is going to be questions seven and eight while zooming is really cool, zooming in.

230
00:14:04,180 --> 00:14:08,720
So when that returns a promise, this entire thing is going to return the promise.

231
00:14:09,010 --> 00:14:15,460
So we are we can just say dot then and in here we can graph questions, data.

232
00:14:16,980 --> 00:14:22,650
And what what do we do with questions, data, while we can't allow it right?

233
00:14:23,010 --> 00:14:29,820
So in this case, we are going to say seven and eight and we logged the console to the council.

234
00:14:29,860 --> 00:14:33,930
Now, what do we want to do is we want to return yet another promise.

235
00:14:34,260 --> 00:14:37,140
And that promise is going to be the last one questions.

236
00:14:37,140 --> 00:14:38,480
Number nine and 10.

237
00:14:38,490 --> 00:14:41,010
We are making requests to this.

238
00:14:41,010 --> 00:14:41,590
You are out.

239
00:14:41,640 --> 00:14:46,680
So this is a are we are again making requests to multiple earths.

240
00:14:47,970 --> 00:14:49,980
And what is this going to do?

241
00:14:50,160 --> 00:14:56,250
It is going to when we do return, they promise this is going to be return as a promise so we can add

242
00:14:56,250 --> 00:15:01,410
a dot then method to it and we are going to run and grab the questions data.

243
00:15:02,640 --> 00:15:07,470
And finally, we can say cancer lock in here.

244
00:15:07,970 --> 00:15:08,300
All right.

245
00:15:08,310 --> 00:15:11,190
So we are just going to say console this time.

246
00:15:11,190 --> 00:15:13,620
It is going to be questions nine and 10.

247
00:15:14,130 --> 00:15:17,730
So you might be asking where are I'm just going to zoom out to this level.

248
00:15:17,730 --> 00:15:23,040
I'm sure this is still readable because we need to work in two different windows.

249
00:15:23,980 --> 00:15:32,380
All right, so like this so what is what is the catch, where do we grab where do we catch our error?

250
00:15:32,740 --> 00:15:39,760
So the good thing about promise chaining is whenever you whenever you chain all these promises, you

251
00:15:39,760 --> 00:15:42,550
just go ahead and add a dart catch at the end.

252
00:15:42,880 --> 00:15:49,970
And this error is going to catch any error, whether that is in the first API endpoint, in the second

253
00:15:49,970 --> 00:15:53,500
opinion point in the third one and the fourth one or in the fifth one.

254
00:15:53,800 --> 00:15:56,890
So this dot catch is going to work for all of them.

255
00:15:58,010 --> 00:16:04,970
So we don't have to specify error and catch error and data all the time, we can just specified once.

256
00:16:07,020 --> 00:16:08,220
What do we want this to do?

257
00:16:08,250 --> 00:16:10,950
We just want to log it to the council at this stage.

258
00:16:12,900 --> 00:16:13,930
Grab our air.

259
00:16:14,430 --> 00:16:18,330
What is there going to be, the air is going to be this.

260
00:16:20,340 --> 00:16:24,590
All right, so what else do we have here?

261
00:16:24,600 --> 00:16:26,930
So I think we are done here, let's save it.

262
00:16:27,360 --> 00:16:32,420
So the the format rearranges it, which is very helpful.

263
00:16:32,700 --> 00:16:39,750
So we have Doug, then Doug and Doug, then we are we are having as many then as many.

264
00:16:40,740 --> 00:16:43,500
You are requests that we are making.

265
00:16:43,830 --> 00:16:47,190
So if I click on this, we can see that we are grabbing all of them.

266
00:16:47,200 --> 00:16:48,620
So I'm just going to increase this.

267
00:16:48,870 --> 00:16:49,890
We have questions.

268
00:16:49,890 --> 00:16:51,990
One, two questions, three, four questions.

269
00:16:51,990 --> 00:16:53,900
Five, six, seven, eight, nine and ten.

270
00:16:54,210 --> 00:16:57,260
And if you click on any of them, you are going to get the data inside them.

271
00:16:57,510 --> 00:16:59,250
So this is an array of objects.

272
00:16:59,250 --> 00:17:03,420
The Proteau, it says array and all these array methods are right.

273
00:17:03,420 --> 00:17:07,859
And it's, for example, inside this, we have our choices and then we have the question itself.

274
00:17:08,750 --> 00:17:14,490
So this is actually how we would use promises to clean up code.

275
00:17:14,540 --> 00:17:17,960
All right, so I think I think we are done here.

276
00:17:18,260 --> 00:17:19,490
So this was step one.

277
00:17:19,500 --> 00:17:24,470
This is not really necessary for you to do this was necessary for me to do so.

278
00:17:24,619 --> 00:17:28,660
I could, like, convey the point of promises better.

279
00:17:29,180 --> 00:17:31,900
But this is actually what we done, what we have done.

280
00:17:32,150 --> 00:17:35,990
This is a much cleaner code, a much clearer, cleaner syntax.

281
00:17:36,170 --> 00:17:41,720
Of course, there are other ways of doing even better than this, which we are going to dive into.

282
00:17:41,720 --> 00:17:47,720
But for now, this is the best way that we have so far learned when it comes to callbacks and when it

283
00:17:47,720 --> 00:17:50,370
comes to promises.

284
00:17:50,750 --> 00:17:52,160
That's it for this lecture.

285
00:17:52,160 --> 00:17:54,560
And see you in the next one.

