WEBVTT
1
00:00:02.320 --> 00:00:07.810
Hi, everyone, in this letter, we are going to implement the law board functionality.

2
00:00:09.440 --> 00:00:11.700
All right, so what is Lakeport functionality?

3
00:00:11.720 --> 00:00:19.520
First off, let's go ahead and let's see a crash situation, a situation in which our application crashes.

4
00:00:19.880 --> 00:00:24.400
So if I click on this, click on this and click on this, we can see three cards.

5
00:00:24.470 --> 00:00:24.770
Right?

6
00:00:25.100 --> 00:00:30.250
But this card stays here so we can click as many cards as we want.

7
00:00:30.350 --> 00:00:30.710
Right.

8
00:00:31.910 --> 00:00:34.250
Clearly, this crashes our application.

9
00:00:34.520 --> 00:00:45.470
So we need to whenever two cards are flipped, we need to lock the board until they either they either

10
00:00:45.620 --> 00:00:51.980
are either a match, so they they get disabled or they're not a match and they get flipped.

11
00:00:52.220 --> 00:00:54.830
Until then, we want to lock the board.

12
00:00:55.610 --> 00:00:55.960
Right.

13
00:00:56.270 --> 00:00:59.000
So let's go ahead and let's implement that functionality.

14
00:00:59.180 --> 00:01:07.250
But before that, just a little bit of refactoring was left and I forgot to do it in the previous video,

15
00:01:07.400 --> 00:01:08.580
so I'm just going to do it here.

16
00:01:08.870 --> 00:01:13.040
So now this statement is actually not really necessary here.

17
00:01:13.190 --> 00:01:18.860
So if I go ahead and if I go ahead and write return, it is going to do the job of this task statement.

18
00:01:20.770 --> 00:01:26.440
If the condition is if this condition evaluates to true, these two lines of code, they are going to

19
00:01:26.440 --> 00:01:26.800
run.

20
00:01:27.010 --> 00:01:35.680
If it is if it does not evaluate to true, then the then the if statement is going to return and these

21
00:01:35.680 --> 00:01:36.880
lines, they're not going to run.

22
00:01:37.060 --> 00:01:46.630
So this return actually does what the else statement would, did what the statement did.

23
00:01:46.870 --> 00:01:47.260
All right.

24
00:01:47.260 --> 00:01:48.160
So let's come here.

25
00:01:48.160 --> 00:01:52.450
What I'm going to do is I'm going to come down here and I'm going to create a.

26
00:01:53.920 --> 00:01:58.510
Variable, and I'm going to call it Lockbaum Solok board, right?

27
00:01:58.650 --> 00:02:01.830
So initially I'm going to set it to false, right.

28
00:02:03.170 --> 00:02:09.229
So this log board is initially set to false, what I'm going to do is and in case you're wondering,

29
00:02:09.560 --> 00:02:12.750
this is called state management and JavaScript.

30
00:02:12.770 --> 00:02:13.100
All right.

31
00:02:13.780 --> 00:02:16.430
Four different frameworks.

32
00:02:16.430 --> 00:02:21.640
We have different methods of state management, different technologies of state management.

33
00:02:21.980 --> 00:02:26.210
But this is actually what how we do it simply in JavaScript.

34
00:02:26.240 --> 00:02:26.620
All right.

35
00:02:27.140 --> 00:02:32.060
So we we define a state and then we toggle that state.

36
00:02:32.390 --> 00:02:32.710
Right.

37
00:02:32.810 --> 00:02:38.660
So Lakeport is false if the LOC board is true.

38
00:02:38.810 --> 00:02:39.250
Right.

39
00:02:39.470 --> 00:02:48.830
For example, if a user wants to click a third card, what do we want to do is we want to grab a relock

40
00:02:48.830 --> 00:02:49.220
board.

41
00:02:49.640 --> 00:02:52.760
That's log board.

42
00:02:53.150 --> 00:02:58.940
OK, if the log board is true now, initially it is false of course, but one, it is true.

43
00:02:59.090 --> 00:03:02.300
We want to return from this from this function.

44
00:03:02.630 --> 00:03:06.860
It means that if the log board is true, none of this function is going to evaluate.

45
00:03:07.010 --> 00:03:12.380
And the user, it means that the user will not be able to click on a third card.

46
00:03:12.670 --> 00:03:17.330
OK, so when do we want to apply this Lockbaum when?

47
00:03:17.690 --> 00:03:20.320
So when is the log true?

48
00:03:20.420 --> 00:03:25.050
We have specified that at start in the beginning, the log board is false.

49
00:03:25.090 --> 00:03:25.380
Right.

50
00:03:25.520 --> 00:03:27.680
So when do we want to apply that?

51
00:03:28.970 --> 00:03:35.030
I'm going to come in here and tell our flip cards function and we are going to apply the log board in

52
00:03:35.030 --> 00:03:35.380
here.

53
00:03:35.390 --> 00:03:35.780
Right.

54
00:03:37.210 --> 00:03:45.040
And the reason for that is whenever we click on the disabled, whenever the user chooses both of the

55
00:03:45.280 --> 00:03:50.920
identical cards or the cards there are similar or they're correct, then the cards are going to get

56
00:03:50.920 --> 00:03:55.090
disabled and a second round draft is going to start.

57
00:03:55.270 --> 00:04:00.360
It means that when this and this, they are a match, then we start over.

58
00:04:00.970 --> 00:04:05.640
Then whenever two cards, they're a match, then we start over.

59
00:04:05.650 --> 00:04:11.200
It means that we end up with two with two selections.

60
00:04:11.660 --> 00:04:17.649
OK, it is when there are not a match, that is excuse me.

61
00:04:17.890 --> 00:04:23.080
It is when they're not a match that we do not want a third selection.

62
00:04:23.410 --> 00:04:28.550
OK, so when they're a match it means that we can go on to the second round.

63
00:04:28.720 --> 00:04:31.610
So this is the second round, but this is not a match.

64
00:04:31.720 --> 00:04:35.910
So until it specifies as a match, we do not want to move forward.

65
00:04:36.250 --> 00:04:36.610
All right.

66
00:04:36.730 --> 00:04:42.850
So putting them inside the disabled cart doesn't actually accomplish anything, because when they're

67
00:04:42.850 --> 00:04:47.500
a match, we do not usually care about whether the board is luck or not.

68
00:04:47.690 --> 00:04:49.390
We are just looking for a match.

69
00:04:49.810 --> 00:04:52.270
When it is a match, then it is a match.

70
00:04:52.270 --> 00:04:58.180
We do not want to log the board because if we lock the board right here, the user will not be able

71
00:04:58.180 --> 00:04:59.660
to go to another round.

72
00:04:59.860 --> 00:05:01.570
So now you can see this and this.

73
00:05:01.570 --> 00:05:05.560
They are a match, but the user will not be able to click on any other card.

74
00:05:06.570 --> 00:05:12.660
So that is not programmed logic as well, so we need to put him inside the envelope, cause what if

75
00:05:12.660 --> 00:05:15.100
they are not a match when they're not a match?

76
00:05:15.270 --> 00:05:20.640
What do we want to do is we want to grab our Lakeport and we want to lock the board, OK?

77
00:05:21.070 --> 00:05:21.690
And.

78
00:05:23.750 --> 00:05:31.970
So initially, we are going to lock it and after 1500 sec and milliseconds, we want to unlock the board.

79
00:05:32.580 --> 00:05:33.080
All right.

80
00:05:33.290 --> 00:05:41.360
And the reason for that is so when the user clicks on two cards, OK, the user should not be able to

81
00:05:41.360 --> 00:05:42.740
click on the third card.

82
00:05:42.890 --> 00:05:50.420
The third card should not flip right until 1500 seconds is passed.

83
00:05:51.200 --> 00:05:52.580
So what does this do?

84
00:05:52.730 --> 00:05:53.720
It is going to grow.

85
00:05:54.020 --> 00:05:55.270
So I'm going to show you here.

86
00:05:55.400 --> 00:05:57.450
So when I click on this and this two.

87
00:05:57.480 --> 00:05:58.580
So this is a match.

88
00:05:58.940 --> 00:05:59.620
It's OK.

89
00:05:59.630 --> 00:06:00.670
The cards are disabled.

90
00:06:00.860 --> 00:06:08.720
So when I click on this, I should not be able to click on a third card until the two cards that I clicked.

91
00:06:08.900 --> 00:06:10.520
They are evaluated.

92
00:06:10.530 --> 00:06:19.010
It means that until this 1500 millisecond time is passed, that's why originally we said they were to

93
00:06:19.010 --> 00:06:19.580
true.

94
00:06:20.600 --> 00:06:22.670
It means that we lock the board.

95
00:06:22.670 --> 00:06:23.100
Right.

96
00:06:23.330 --> 00:06:25.560
So let's go ahead and let's comment that out.

97
00:06:25.790 --> 00:06:29.480
So originally this is locked, but when I click on this, this is unlocked.

98
00:06:29.750 --> 00:06:33.440
But now you guys can see I cannot unlock anymore, see.

99
00:06:34.100 --> 00:06:35.820
So I have to go ahead and refresh.

100
00:06:35.840 --> 00:06:39.650
This is this is going to crash urologic logic as well.

101
00:06:40.010 --> 00:06:43.580
I'm going to go over this because I think this might be confusing a little.

102
00:06:43.640 --> 00:06:44.780
This is state management.

103
00:06:44.790 --> 00:06:46.890
This is really cool in JavaScript.

104
00:06:47.390 --> 00:06:58.670
So we talked about how we do not need to lock the board or unlock the board when it when we have disabled

105
00:06:58.670 --> 00:06:59.440
our cards.

106
00:06:59.660 --> 00:07:02.870
So when the cards are disabled, we do not care about that.

107
00:07:04.070 --> 00:07:05.930
That's why we are not going to put it there.

108
00:07:05.960 --> 00:07:06.370
Right.

109
00:07:06.830 --> 00:07:13.610
But it is when the cards are not a match is when we want to lock the board or unlock the board.

110
00:07:13.880 --> 00:07:14.210
Right.

111
00:07:14.840 --> 00:07:22.910
So when the cards are in the conflict state, OK, when when we say when we want to run this envelope,

112
00:07:22.910 --> 00:07:24.140
cards function.

113
00:07:24.380 --> 00:07:26.270
First off, we lock the board.

114
00:07:26.600 --> 00:07:26.990
Right.

115
00:07:27.020 --> 00:07:36.800
So when I click on this and I click on this and the second card and if that card is not a match, then

116
00:07:36.800 --> 00:07:39.780
this board is going to get locked down.

117
00:07:40.460 --> 00:07:44.090
So now now these two cards, they were not a match.

118
00:07:44.090 --> 00:07:44.370
Right.

119
00:07:44.630 --> 00:07:47.430
So now technically, the board should be locked.

120
00:07:47.690 --> 00:07:51.830
So now, see, I cannot click on anything because.

121
00:07:52.040 --> 00:07:52.900
And why is that?

122
00:07:53.360 --> 00:08:01.250
Because this if statement has run and this function cannot run anymore and it says return.

123
00:08:02.180 --> 00:08:06.470
This is why if statements they control the flow of logic.

124
00:08:06.890 --> 00:08:14.180
Now, this statement has blocked this flow of this logic, the flow of this logic, because we have

125
00:08:14.180 --> 00:08:20.270
said that when the lock is true return, it means wrap everything up.

126
00:08:20.270 --> 00:08:25.160
We are done here and we know that the Lakeport has a return.

127
00:08:25.160 --> 00:08:25.520
True.

128
00:08:25.520 --> 00:08:27.530
From here, the vault is lock.

129
00:08:27.860 --> 00:08:31.190
There is no way that you can flip the cards anymore.

130
00:08:31.500 --> 00:08:33.480
And this is not something good, right?

131
00:08:33.500 --> 00:08:34.299
This is a bug.

132
00:08:34.610 --> 00:08:36.830
This is an issue with our application.

133
00:08:37.159 --> 00:08:45.560
When the user makes a mistake or I should not call it a mistake, when the user is not able to find

134
00:08:45.560 --> 00:08:52.010
two identical cards, the user should be able to try again without refreshing the page.

135
00:08:52.220 --> 00:08:56.120
So if I refer a refresh the page, we will be able to flip the cards.

136
00:08:56.120 --> 00:08:59.110
But then again, we sent we face the same thing.

137
00:08:59.540 --> 00:09:01.540
This is not a good user experience.

138
00:09:01.940 --> 00:09:11.810
So when we say that the cards are not a match, we should lift that lock, OK, because we want the

139
00:09:11.810 --> 00:09:13.350
user to try again.

140
00:09:13.460 --> 00:09:15.620
That's why we are going to comment.

141
00:09:15.620 --> 00:09:17.140
And the lock board false.

142
00:09:17.510 --> 00:09:19.370
Now, the lock board is false.

143
00:09:19.550 --> 00:09:24.770
It means the board is not locked and this statement does not evaluate to true.

144
00:09:24.770 --> 00:09:25.520
It is false.

145
00:09:25.760 --> 00:09:28.160
So this code is going to run.

146
00:09:28.310 --> 00:09:33.380
If this if this condition is true, there is this function is going to be return.

147
00:09:33.560 --> 00:09:42.320
But if this condition is not true or is false, then this code is going to run right now when the user

148
00:09:43.100 --> 00:09:46.870
cannot find identical cards, the user can try again.

149
00:09:47.840 --> 00:09:51.980
We do not want to take this ability away from the user to try again.

150
00:09:52.490 --> 00:09:57.170
This is why this part is really, really crucial in creating this memory game.

151
00:09:58.430 --> 00:10:05.180
Again, this seems really simple on the surface, but there is actually a lot of moving parts and you

152
00:10:05.180 --> 00:10:08.300
guys can see that whenever we click on two cards, we cannot click.

153
00:10:08.840 --> 00:10:13.800
We did click on the third one, so we cannot click on the third one.

154
00:10:13.850 --> 00:10:14.210
All right.

155
00:10:14.240 --> 00:10:16.430
So if I click on these two, they are a match.

156
00:10:16.610 --> 00:10:18.110
We can move on.

157
00:10:18.470 --> 00:10:19.570
They are not a match.

158
00:10:20.120 --> 00:10:21.710
So you can only.

159
00:10:22.100 --> 00:10:30.410
On the third cart after 1500 milliseconds after this time, because this function takes care of that,

160
00:10:30.950 --> 00:10:32.510
so I hope everything is clear.

161
00:10:32.520 --> 00:10:33.620
That's it for this lecture.

162
00:10:33.650 --> 00:10:35.120
See you guys in the next one.

