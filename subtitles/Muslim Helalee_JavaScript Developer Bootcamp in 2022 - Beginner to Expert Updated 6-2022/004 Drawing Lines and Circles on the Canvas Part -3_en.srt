1
00:00:01,430 --> 00:00:08,300
Hi, everyone, in this last year, we are going to complete the drawing lines and drawing circles functions.

2
00:00:09,140 --> 00:00:16,580
All right, so we have created the draw circle function and we have provided with two points, which

3
00:00:16,580 --> 00:00:18,380
are the X and Y coordinates.

4
00:00:18,680 --> 00:00:27,620
And we have told it to start the path, but we have not specified what the circle size is going to be,

5
00:00:27,620 --> 00:00:31,070
what the diameter is going to be for the circle.

6
00:00:31,070 --> 00:00:31,430
All right.

7
00:00:31,440 --> 00:00:34,250
Now we are going to call the ARC method.

8
00:00:34,490 --> 00:00:34,910
All right.

9
00:00:35,180 --> 00:00:40,190
Now, the ARC method is responsible for the first half.

10
00:00:40,190 --> 00:00:44,690
We are going to give it in an X coordinate and then we are going to give it a Y coordinate, then the

11
00:00:44,690 --> 00:00:45,470
radius.

12
00:00:45,980 --> 00:00:51,860
Right, which is going to be our size, then the start angle, which is going to be zero and the end

13
00:00:51,860 --> 00:00:54,580
angle, which is going to be another number.

14
00:00:55,010 --> 00:00:55,370
Right.

15
00:00:55,820 --> 00:00:59,810
So let's go ahead and let's complete this according to this Intellisense.

16
00:00:59,990 --> 00:01:00,370
All right.

17
00:01:00,890 --> 00:01:07,790
So for the X, what I'm going to do is I'm just going to pass an X as the as the argument and I'm going

18
00:01:07,790 --> 00:01:10,730
to pass on the Y there initially undefined.

19
00:01:11,900 --> 00:01:15,710
And when the mouse is done, we have set him to offset X and offset Y.

20
00:01:15,920 --> 00:01:22,040
When the mouse is up, we have again reset him to undefined and now we are going to pass in the values

21
00:01:22,040 --> 00:01:22,440
here.

22
00:01:23,630 --> 00:01:25,490
The next thing is going to be the radius.

23
00:01:25,490 --> 00:01:29,360
The radius is going to be the size that we have, which is ten.

24
00:01:29,570 --> 00:01:32,930
And after that we are going to give it the start angle, which is zero.

25
00:01:32,930 --> 00:01:34,280
And the end angle.

26
00:01:34,850 --> 00:01:37,720
The ending angle is going to be our math object.

27
00:01:37,790 --> 00:01:44,300
PI right now PI has a value of three point one four one five nine, something like that.

28
00:01:44,870 --> 00:01:49,500
But whenever you're drawing a circle, PI also means 180 degrees.

29
00:01:50,150 --> 00:01:57,490
So if one PI is 180 degrees a circle, a full circle is 360 degrees.

30
00:01:57,740 --> 00:02:00,630
That's why we are going to have to multiply it by two.

31
00:02:01,370 --> 00:02:05,130
So this is this arc is going to create for us a circle.

32
00:02:05,900 --> 00:02:13,580
Now let's provide the color of this circle and we are going to say fill style now for the line.

33
00:02:13,580 --> 00:02:16,100
It was stroke's style for the circle.

34
00:02:16,100 --> 00:02:17,600
It is Phil style.

35
00:02:17,960 --> 00:02:23,640
And we are going to set it to our color variable that we have prespecified and we are going to grab

36
00:02:23,640 --> 00:02:26,360
the seats and we are going to tell it to fill.

37
00:02:27,400 --> 00:02:29,200
We are going to call it the DFL method.

38
00:02:30,670 --> 00:02:35,220
All right, so now these functions, they're created, how do we know that they actually work?

39
00:02:35,500 --> 00:02:36,810
We need to call them.

40
00:02:36,820 --> 00:02:37,200
All right.

41
00:02:37,390 --> 00:02:42,170
So we are going to grab our canvas and we are going to apply another lesson.

42
00:02:43,120 --> 00:02:47,290
Now, this listener is going to listen for a mouse move.

43
00:02:48,340 --> 00:02:49,630
Mouse move.

44
00:02:49,910 --> 00:02:56,380
Right now, this is a mouse move event and it is going to run a function and we are going to grab the

45
00:02:56,380 --> 00:02:57,880
event object as well.

46
00:02:58,360 --> 00:03:03,420
Now, why is it mouse move now when the mouse is down the express?

47
00:03:03,460 --> 00:03:04,780
It is true, right.

48
00:03:05,050 --> 00:03:12,340
And whenever the is pressed is true, we want to grab the X coordinates and the Y coordinates.

49
00:03:12,740 --> 00:03:17,350
Right when the mouse is up, we don't we actually do not want to do anything.

50
00:03:17,360 --> 00:03:19,540
So ignore this part for now.

51
00:03:20,770 --> 00:03:23,520
So when the mouse is done, the rest is true.

52
00:03:23,530 --> 00:03:23,950
Right.

53
00:03:25,000 --> 00:03:27,390
So this is the part that I'm focusing on.

54
00:03:27,760 --> 00:03:35,170
So when the expressed is true, what I want to do is I want this function to also kick in when the expressed

55
00:03:35,170 --> 00:03:43,120
is true, because then when the user clicks and then moves the mouse, OK, it's not like whenever you

56
00:03:43,120 --> 00:03:47,230
click, when you click and then move, it's not going to do anything.

57
00:03:47,500 --> 00:03:50,610
But when you click and then mouse move.

58
00:03:50,620 --> 00:03:55,150
OK, now this is actually two events firing at the same time.

59
00:03:55,710 --> 00:03:57,540
OK, I'm going to explain this one more time.

60
00:03:57,880 --> 00:04:00,180
The first event is Mouse Down.

61
00:04:00,220 --> 00:04:01,060
This is the mouse.

62
00:04:01,060 --> 00:04:01,420
Don't.

63
00:04:02,350 --> 00:04:09,460
I'm sure you can hear the clicking whenever you click that is the mouse down and when you move the mouse,

64
00:04:09,460 --> 00:04:11,420
this is going to be the mouse move.

65
00:04:11,950 --> 00:04:12,310
All right.

66
00:04:12,520 --> 00:04:16,300
So we are actually firing two events at the same time.

67
00:04:16,720 --> 00:04:22,810
And we won those two events to basically do the same thing, to work together, not do the same thing,

68
00:04:22,960 --> 00:04:24,270
but to work together.

69
00:04:24,670 --> 00:04:27,690
That's why I'm telling you for now, just ignore this mouse up.

70
00:04:28,750 --> 00:04:32,050
So when the mouse is down, the expressed is true.

71
00:04:32,200 --> 00:04:37,540
And we are going to add an if statement here and we will say F is pressed is true.

72
00:04:37,900 --> 00:04:38,370
All right.

73
00:04:38,890 --> 00:04:43,410
So now this condition is going to return whenever the expressed is true.

74
00:04:43,690 --> 00:04:48,280
So let's go ahead and let's consider the let's let's log to the console.

75
00:04:48,280 --> 00:04:48,970
One, two, three.

76
00:04:49,190 --> 00:04:49,570
All right.

77
00:04:50,170 --> 00:04:52,300
And I'm going to show you how this actually works.

78
00:04:52,300 --> 00:04:53,980
So let's come here.

79
00:04:53,980 --> 00:04:55,180
This is our project.

80
00:04:55,720 --> 00:04:57,480
And initially we don't have anything.

81
00:04:57,700 --> 00:05:01,120
So if I click and if I unclick, nothing changes.

82
00:05:01,300 --> 00:05:03,010
We don't see anything to the console.

83
00:05:03,370 --> 00:05:12,840
But when I click and move the mouse, you can see that we see 123, 293 times it has been printed.

84
00:05:13,480 --> 00:05:18,760
So whenever we click and move our mouse, then the event is going to fire.

85
00:05:20,630 --> 00:05:27,620
I'm going to go over this one more time when we click, it means that this event is fired and we and

86
00:05:27,830 --> 00:05:31,820
when this event is fired, it means that the express is true.

87
00:05:31,820 --> 00:05:38,210
And we want a map where the user we want to go to the exact spot where the user has clicked.

88
00:05:39,110 --> 00:05:41,560
And when we go there, what do we want to do?

89
00:05:41,810 --> 00:05:50,660
We want to log to the console, the number one, two, three, whenever the user moves their mouse or

90
00:05:50,660 --> 00:05:52,340
mouses like that.

91
00:05:52,790 --> 00:05:58,580
So click we don't see any one to three, but whenever we move, we can see that this number is getting

92
00:05:58,580 --> 00:05:59,000
increased.

93
00:05:59,180 --> 00:06:01,820
So it's three hundred and eighty four now.

94
00:06:01,820 --> 00:06:03,560
It's five hundred and forty two.

95
00:06:04,010 --> 00:06:04,410
Right.

96
00:06:04,880 --> 00:06:09,800
So this is actually how this is going to work and this is going to return for us.

97
00:06:09,800 --> 00:06:11,090
A Boolean statement.

98
00:06:11,390 --> 00:06:17,060
If the Boolean is true, this if statement is going to run, because when the boolean is true, this

99
00:06:17,060 --> 00:06:23,270
condition of is Prast is true, but when the condition of is pressed is not true.

100
00:06:23,300 --> 00:06:24,610
This code is not going to run.

101
00:06:24,800 --> 00:06:30,890
So it doesn't matter if I just go ahead and hover on it and move because this is mouse up and in the

102
00:06:30,890 --> 00:06:34,640
mouse up, the X and Y there, undefined and expressed is false.

103
00:06:34,910 --> 00:06:36,080
Then this event is not.

104
00:06:36,470 --> 00:06:44,210
This event fires when this event fires, this event and this one, they're not going to fire but and

105
00:06:44,210 --> 00:06:44,780
vice versa.

106
00:06:44,780 --> 00:06:48,010
Of course, when mouse down and mouse move, they fire.

107
00:06:48,470 --> 00:06:51,770
This is not going to work because they're polar opposite.

108
00:06:51,770 --> 00:06:52,670
This is mouse down.

109
00:06:52,670 --> 00:06:53,570
This is mouse up.

110
00:06:54,680 --> 00:06:58,160
This mouse move works in conjunction with this mouse done.

111
00:06:58,730 --> 00:07:04,490
So now that this part is clear, we are going to create two more constants and I'm going to call them

112
00:07:04,490 --> 00:07:15,080
X2 and I'm going to set it to E that offset X and I'm going to create another Y two constant and I'm

113
00:07:15,080 --> 00:07:19,740
going to put it to equal to either offset Y.

114
00:07:20,510 --> 00:07:27,520
And now here is where we are going to call our draw circle and our draw line functions.

115
00:07:28,100 --> 00:07:33,520
So whenever we call the draw circle function in the function call, we pass in arguments.

116
00:07:33,770 --> 00:07:36,770
So what are the arguments that we are going to pass in?

117
00:07:36,770 --> 00:07:39,230
There are going to be the X2 and the Y two.

118
00:07:40,340 --> 00:07:43,910
We are going to call our draw line.

119
00:07:45,020 --> 00:07:50,780
Function as well, and we are going to pass, and because that function function has four parameters,

120
00:07:50,780 --> 00:08:01,880
we need to pass in for argument's so X, Y, then we are going to pass and X2 and Y to know these functions

121
00:08:01,880 --> 00:08:08,330
there past the the only thing remaining is we just have to set the X to X2.

122
00:08:09,440 --> 00:08:11,210
And the why two white.

123
00:08:12,120 --> 00:08:19,560
Why, to save it and let's come here and whenever we click and move, you can see that it is drawing

124
00:08:19,560 --> 00:08:28,590
something now is the part where I'm going to explain to you guys why in the first place why we needed

125
00:08:28,920 --> 00:08:32,000
to draw lines and circles in the first place.

126
00:08:32,429 --> 00:08:37,260
And this is actually the most critical part of this entire application.

127
00:08:37,260 --> 00:08:44,460
If you understand why I not understanding this function is very, very simple, very understanding.

128
00:08:44,460 --> 00:08:45,950
This function is easy as well.

129
00:08:46,380 --> 00:08:48,990
But why did we need these functions?

130
00:08:50,160 --> 00:08:51,630
And I'm going to tell you why.

131
00:08:51,660 --> 00:08:52,970
I'm just going to show you first.

132
00:08:53,220 --> 00:08:58,350
So I'm just going to click here and I'm going to move very fast and I'm going to zoom and we are going

133
00:08:58,350 --> 00:09:00,010
to inspect what is happening here.

134
00:09:00,480 --> 00:09:03,430
So in here, you can see that we have a line here, right?

135
00:09:03,510 --> 00:09:04,830
I'm going to zoom even more.

136
00:09:05,250 --> 00:09:07,830
It's blurry, but it proves my point.

137
00:09:08,470 --> 00:09:13,120
We have a line and we have a circle inside that line.

138
00:09:13,590 --> 00:09:18,300
So either the circle is on top of the line or the line is on top of the circle.

139
00:09:18,310 --> 00:09:20,940
We will never find out because they have two different colors.

140
00:09:21,180 --> 00:09:22,380
We can find that.

141
00:09:22,380 --> 00:09:23,010
Find out.

142
00:09:23,820 --> 00:09:27,930
We can just go ahead and say, let's put it let's put the line to red.

143
00:09:28,320 --> 00:09:34,260
And now when I do this and now we know that the line is actually on top of the circle, that's not the

144
00:09:34,260 --> 00:09:34,580
point.

145
00:09:34,590 --> 00:09:38,560
The point is, oops, come on, buddy.

146
00:09:39,120 --> 00:09:40,350
The point is something else.

147
00:09:42,100 --> 00:09:48,280
The point is why we needed to draw a line and a circle, so in the final project, if I click here and

148
00:09:48,280 --> 00:09:53,120
if I move very fast, we can see that this line is actually uniform.

149
00:09:53,680 --> 00:09:57,300
It doesn't mean that there aren't circles in there.

150
00:09:57,340 --> 00:09:58,640
There are circles.

151
00:09:59,110 --> 00:10:02,730
And how do we know that because of this arc, you can see this arc.

152
00:10:03,220 --> 00:10:06,520
This shows that this is not a line.

153
00:10:06,520 --> 00:10:07,860
This is a circle.

154
00:10:08,140 --> 00:10:10,710
So this arc specifies it's a circle.

155
00:10:10,720 --> 00:10:12,580
This arc specifies it's a circle.

156
00:10:12,940 --> 00:10:16,710
But this straight line, it shows that it is a line as well.

157
00:10:17,920 --> 00:10:19,990
But where is the circle in sight here?

158
00:10:20,000 --> 00:10:24,360
We can see circles inside this line, but we can see those here.

159
00:10:25,120 --> 00:10:33,100
The reason for this is because this circle is arc has actually a size to wise of this line.

160
00:10:33,850 --> 00:10:42,520
I told you that we will be returning to the size to this size of the line with the line with is going

161
00:10:42,520 --> 00:10:43,390
to be 10.

162
00:10:45,260 --> 00:10:50,480
Is initially 10, but if you go ahead and if you multiply it, let's say by three.

163
00:10:50,810 --> 00:10:53,060
Let's save it and let's see what is going to happen.

164
00:10:53,450 --> 00:10:55,070
Now, let's go very fast.

165
00:10:55,220 --> 00:11:00,770
And then we can see that this line is actually bigger than the circle and this is not the thing that

166
00:11:00,770 --> 00:11:01,230
we want.

167
00:11:01,250 --> 00:11:06,040
So whenever the user draws this bizarre thing, this is not what we want.

168
00:11:06,530 --> 00:11:14,630
We want to make sure that the circle and the line, they have the same dimension and going coming back

169
00:11:14,630 --> 00:11:17,570
to why we needed to draw to draw a circle.

170
00:11:17,570 --> 00:11:25,250
And their line is whenever we use canvas and we want to draw like we want to do drawing the drawing

171
00:11:25,250 --> 00:11:30,920
is consists of is consisting of a circle and a line.

172
00:11:31,100 --> 00:11:32,920
The line is doing this.

173
00:11:32,930 --> 00:11:35,900
So let's go ahead and let's come into the circle.

174
00:11:37,620 --> 00:11:39,540
Oops, I was not supposed to.

175
00:11:40,290 --> 00:11:47,340
Now, if I go ahead and if I come on, buddy, I don't think we can draw a line because it is dependent

176
00:11:47,340 --> 00:11:48,190
on the circle.

177
00:11:48,210 --> 00:11:49,300
Let's see if we can.

178
00:11:49,300 --> 00:11:50,260
No, we cannot.

179
00:11:51,060 --> 00:11:54,810
So I'm just going to go ahead and come to doubt from here.

180
00:11:54,890 --> 00:11:55,950
Mm hmm.

181
00:11:57,040 --> 00:11:57,910
No, we cannot.

182
00:11:57,940 --> 00:12:00,190
So they are dependent on each other.

183
00:12:01,270 --> 00:12:01,980
Come on, buddy.

184
00:12:02,060 --> 00:12:07,170
Sometimes it's so frustrating, it's not even doesn't it does not even work.

185
00:12:08,240 --> 00:12:08,840
Close it.

186
00:12:09,260 --> 00:12:18,320
All right, so the reason that we need a line and a circle function is this circle and line function.

187
00:12:18,320 --> 00:12:22,950
They are going to work with each other to create the smooth line that we have here.

188
00:12:22,970 --> 00:12:25,430
This is not smooth, but this is smooth.

189
00:12:27,050 --> 00:12:28,710
All right, so this is smooth.

190
00:12:28,730 --> 00:12:36,120
All right, so this line is consisting of lines and circles, right?

191
00:12:36,190 --> 00:12:38,450
That's why we need we need to right.

192
00:12:38,450 --> 00:12:39,050
Both of them.

193
00:12:40,370 --> 00:12:45,250
OK, so I'm just going to put it to size to let's save it.

194
00:12:45,260 --> 00:12:46,030
Let's come here.

195
00:12:46,040 --> 00:12:50,240
So when I draw a line now, this looks very, very uniform.

196
00:12:50,780 --> 00:12:52,880
But of course, these they do not work.

197
00:12:52,880 --> 00:12:55,750
If I go ahead and change the color, it doesn't work.

198
00:12:56,330 --> 00:13:00,610
Some of the functionality, this functionality of the toolbar is remaining.

199
00:13:00,800 --> 00:13:05,650
But as far as the canvas is concerned, we have been able to draw.

200
00:13:05,900 --> 00:13:11,690
Now, whenever the user clicks somewhere and drags this, the user will be able to draw a line.

201
00:13:12,080 --> 00:13:12,520
All right.

202
00:13:12,890 --> 00:13:14,920
So this is going to be it for this lecture.

203
00:13:15,050 --> 00:13:16,600
See you guys in the next one.

