1
00:00:01,950 --> 00:00:08,070
Hi, everyone, welcome to part two of coding an eye for the DOT connector game.

2
00:00:09,280 --> 00:00:14,950
All right, so before actually getting started with this lecture, I want to point your attention to

3
00:00:14,950 --> 00:00:16,360
a mistake that I did.

4
00:00:17,310 --> 00:00:18,760
Just go ahead and make this.

5
00:00:18,910 --> 00:00:20,650
I'm sure you got this.

6
00:00:21,340 --> 00:00:31,060
I mistyped it as Daehlie I or it should be delayed and just come here to our EHI function and convento

7
00:00:31,060 --> 00:00:34,110
these two as well, because I want to show you something.

8
00:00:34,390 --> 00:00:38,200
And what do we have in here is.

9
00:00:40,190 --> 00:00:47,510
That we can actually see the I think, and actually select something, not actually select something,

10
00:00:47,510 --> 00:00:50,420
but actually like think and try to select something.

11
00:00:51,590 --> 00:00:57,590
And you can see that the I paused for one second, which is the selection process, and then passed

12
00:00:57,590 --> 00:00:59,420
on the turn to the player, so.

13
00:01:00,510 --> 00:01:01,120
There we go.

14
00:01:01,260 --> 00:01:07,890
So I just wanted to show you that that the eye is actually working, but not the way that we want it.

15
00:01:08,280 --> 00:01:10,650
So we need to make it work the way that we want.

16
00:01:10,660 --> 00:01:13,390
So we have created these coordinates.

17
00:01:13,410 --> 00:01:15,960
Now, let's go ahead and let's actually choose.

18
00:01:16,800 --> 00:01:22,490
So choosing from a random site, a random free site.

19
00:01:22,680 --> 00:01:27,070
So it is if it is free, we want it to be randomized.

20
00:01:27,300 --> 00:01:30,470
That's why the wanted this one time.

21
00:01:30,480 --> 00:01:34,280
It is like grabbing top, then bottom, then left and right.

22
00:01:34,590 --> 00:01:36,120
So it's just all over the place.

23
00:01:36,150 --> 00:01:37,530
That's because it is random.

24
00:01:38,730 --> 00:01:43,380
So I'm going to create an array, an empty array, and I'm going to call it free coordinates.

25
00:01:45,000 --> 00:01:45,540
All right.

26
00:01:45,550 --> 00:01:46,110
So.

27
00:01:47,440 --> 00:01:56,720
And then if that side, that specific side which the is trying to select is not selected, then we want

28
00:01:56,720 --> 00:01:58,110
the state to select it.

29
00:01:58,330 --> 00:02:02,830
So we are going to say, if not this side bottom.

30
00:02:04,550 --> 00:02:09,949
That's selected, if Sidebottom is not selected, then grab our free coordinates.

31
00:02:12,590 --> 00:02:21,200
And Pushtu at that specific site called Net Bottom Perfect Arezzo, we are going to repeat this for

32
00:02:21,200 --> 00:02:22,380
the other three as well.

33
00:02:23,030 --> 00:02:25,250
And one more time, not two one.

34
00:02:27,730 --> 00:02:39,250
If the site which is not selected is left, then we want the coordinates of that left side to be pushed

35
00:02:39,250 --> 00:02:46,420
to the coordinates of the site, which is not selected is right, then we want the coordinates of right

36
00:02:46,420 --> 00:02:48,970
to be pushed to that array.

37
00:02:49,540 --> 00:02:57,670
If the side which is not selected to stop, we want the coordinates of the top to be pushed to that

38
00:02:57,670 --> 00:02:57,950
site.

39
00:02:58,300 --> 00:03:02,940
Now, after all of these, what do we want this function to return?

40
00:03:03,280 --> 00:03:06,040
We want this function to return coordinates, right.

41
00:03:06,550 --> 00:03:11,310
And because all of these are free, we are going to return them randomly.

42
00:03:11,680 --> 00:03:15,610
We don't want to we don't want our A.I. to be predictable.

43
00:03:15,970 --> 00:03:20,580
We want it to be random or unforeseeable, something like that.

44
00:03:20,860 --> 00:03:24,910
So we we have like some sort of challenge in front of us.

45
00:03:25,270 --> 00:03:33,220
If we know the pattern along which the A.I. selects, then it is going to be supremely easy for us to

46
00:03:33,640 --> 00:03:37,840
beat the right, but it should be some sort of a challenge.

47
00:03:38,050 --> 00:03:39,850
So let's pass and length.

48
00:03:40,270 --> 00:03:44,050
And now that this is going to give us.

49
00:03:44,960 --> 00:03:51,890
A random sight, what I would like to do is let's come here to first off, let me take a look at this

50
00:03:51,900 --> 00:03:52,130
here.

51
00:03:52,160 --> 00:03:52,840
Perfect.

52
00:03:53,270 --> 00:03:55,100
The to spell is correct.

53
00:03:55,340 --> 00:03:59,470
So I'm in here now.

54
00:03:59,480 --> 00:04:05,660
I'm going to comment that one out and I'm going to remove the players, turn right and.

55
00:04:08,650 --> 00:04:11,110
I think we are ready to test our air.

56
00:04:11,710 --> 00:04:13,710
So now you can see I'm just going to reload.

57
00:04:14,080 --> 00:04:15,190
Now it is my turn.

58
00:04:15,370 --> 00:04:19,870
If I select something, it is first highlighted and then selected.

59
00:04:19,870 --> 00:04:21,480
The same thing goes for the computer.

60
00:04:21,910 --> 00:04:24,980
The computer first highlights and then selects.

61
00:04:25,660 --> 00:04:26,250
There we go.

62
00:04:26,260 --> 00:04:27,470
Computer just selected.

63
00:04:27,730 --> 00:04:32,940
Now let's check our A.I. You can see because there are free sites, they're happening randomly.

64
00:04:32,950 --> 00:04:34,790
One was right here, the other one is there.

65
00:04:35,380 --> 00:04:40,870
Now, what I would like to do is check our A.I. for like deficiencies.

66
00:04:40,870 --> 00:04:42,790
For shortcomings.

67
00:04:44,070 --> 00:04:46,860
All right, good, I good.

68
00:04:47,840 --> 00:04:48,640
Very good.

69
00:04:50,370 --> 00:04:58,770
They are we will be tracking this behavior very closely, so we need to be very careful where it is

70
00:04:58,770 --> 00:05:00,210
that the A.I. has selected.

71
00:05:03,060 --> 00:05:08,600
If we are careful, we might be able to find out what the problem is, if there is any problem.

72
00:05:10,660 --> 00:05:11,470
All right.

73
00:05:12,550 --> 00:05:13,540
That is one way.

74
00:05:16,830 --> 00:05:17,550
Perfect.

75
00:05:18,570 --> 00:05:19,380
Oh, there we go.

76
00:05:19,410 --> 00:05:27,090
So this was a mistake, by the way, you can see that we have these other options like these one, two,

77
00:05:27,600 --> 00:05:29,730
three, four, like almost 10 options.

78
00:05:29,730 --> 00:05:37,350
But why did the guy go for this one, even though that we have said that whenever two sides are completed,

79
00:05:37,770 --> 00:05:39,570
that is the third option.

80
00:05:39,570 --> 00:05:40,970
The third priority.

81
00:05:41,400 --> 00:05:48,350
What are the first to the first two is if any square has three sides completed.

82
00:05:48,540 --> 00:05:52,370
So clearly the eye didn't obey that priority.

83
00:05:53,370 --> 00:06:01,410
The second priority actually has two options, whether the square has zero sides like it's an empty

84
00:06:01,410 --> 00:06:04,140
square or one side.

85
00:06:04,710 --> 00:06:13,590
Why did the AICC grab this and selected it is because the I thought that this line actually belongs

86
00:06:13,590 --> 00:06:14,400
to the circle.

87
00:06:14,610 --> 00:06:19,430
Sorry, I'm keep I, I keep saying circle, I mean square.

88
00:06:19,950 --> 00:06:22,710
So the er thought that it was the square.

89
00:06:24,000 --> 00:06:31,440
And because it had one, two, three sides empty and only one side completed, then it just went for

90
00:06:31,440 --> 00:06:31,580
it.

91
00:06:31,860 --> 00:06:36,320
But this is a problem because the A.I. did not account for the top neighbor.

92
00:06:36,750 --> 00:06:39,510
So we need to grab the valid neighbor as well.

93
00:06:39,510 --> 00:06:42,100
And we need to pass on some code for that as well.

94
00:06:42,570 --> 00:06:45,900
I'm just going to finish this so you can see that the eye guided itself.

95
00:06:46,140 --> 00:06:49,200
So clearly, our first priority is working.

96
00:06:49,530 --> 00:06:56,220
The say the third priority was actually was we we have not tested death yet.

97
00:06:56,220 --> 00:06:58,770
We have tested our first and second priority.

98
00:06:59,040 --> 00:07:03,800
The third priority is when the A.I. gives a point deliberately.

99
00:07:04,290 --> 00:07:05,760
So let's test it for that.

100
00:07:05,770 --> 00:07:06,350
There we go.

101
00:07:06,540 --> 00:07:07,610
This is a mistake.

102
00:07:07,920 --> 00:07:09,750
This is not our third priority.

103
00:07:10,050 --> 00:07:14,160
This is actually our first priority today.

104
00:07:14,160 --> 00:07:16,320
I thought that this square was empty.

105
00:07:16,620 --> 00:07:20,520
That's why I selected the top part, OK?

106
00:07:22,670 --> 00:07:27,750
And this is going to be our second priority, zero or one side's.

107
00:07:29,400 --> 00:07:33,290
Hmm, this is clearly another mistake by the.

108
00:07:34,490 --> 00:07:38,120
So you can see how incompetent it is so far.

109
00:07:38,990 --> 00:07:41,680
Right, so we're shit.

110
00:07:41,700 --> 00:07:43,890
I'm going to give him these points.

111
00:07:45,460 --> 00:07:52,120
Of course, first priority clearly is working good, and this is going to be our third priority because

112
00:07:52,120 --> 00:07:55,990
there is no other point, there is no other priority.

113
00:07:56,260 --> 00:08:01,150
They cannot select a square that has three sites completed.

114
00:08:01,150 --> 00:08:06,000
The I cannot select a square that has one zero or one side is completed.

115
00:08:06,010 --> 00:08:12,970
So the I select a square that has two sites completed and that is going to give a score.

116
00:08:14,900 --> 00:08:21,110
And I would have to give this to the FBI and the FBI is going to beat me.

117
00:08:21,990 --> 00:08:23,110
Yeah, it is.

118
00:08:23,730 --> 00:08:31,530
So even though this is not that competent, I it just so even with that, it is like a pretty good eye.

119
00:08:31,530 --> 00:08:36,830
But still we have to do some stuff to make sure that it is competent enough.

120
00:08:37,230 --> 00:08:42,179
So what I would like to do where we were, we set up the options for the air.

121
00:08:42,299 --> 00:08:44,380
We need to manipulate these options.

122
00:08:44,880 --> 00:08:52,950
So first off, I'm going to create a variable called sites and this variable is going to call a function

123
00:08:52,950 --> 00:09:00,300
get Valette neighbor site, which we are going to create and we are.

124
00:09:00,300 --> 00:09:04,440
And it is going to accept the row and the call.

125
00:09:05,880 --> 00:09:13,590
Now, the basic thing that we want to do here is to remove a bug in which the FBI gives a point to the

126
00:09:13,590 --> 00:09:14,100
player.

127
00:09:15,670 --> 00:09:23,560
And how is this actually happening is by selecting a third side, eventually allowing us to select the

128
00:09:23,560 --> 00:09:24,250
fourth one.

129
00:09:24,850 --> 00:09:28,210
Now this function is going to return two things.

130
00:09:28,210 --> 00:09:31,220
One, if it returns nothing.

131
00:09:31,540 --> 00:09:32,290
What does that mean?

132
00:09:32,320 --> 00:09:34,140
So basically, there are two cases.

133
00:09:34,140 --> 00:09:40,780
So I'm just going to go over to the theory first and then the implementation if this function comes

134
00:09:40,780 --> 00:09:42,000
back with nothing.

135
00:09:42,930 --> 00:09:48,780
It means that our current cell that we are selecting has no valid neighbors.

136
00:09:50,560 --> 00:09:57,850
All right, and it means that the FBI is going to be giving us the point, what is the priority in which

137
00:09:57,850 --> 00:10:01,640
the FBI gives us the point that is the third priority.

138
00:10:01,990 --> 00:10:07,210
So if the FBI is giving us the the point, why is that?

139
00:10:07,210 --> 00:10:14,590
Logic should be contained within our case, one within our second priority, we need to push it to our

140
00:10:14,590 --> 00:10:15,660
third priority.

141
00:10:16,000 --> 00:10:19,030
That is point number one by number two.

142
00:10:19,540 --> 00:10:26,500
If this function does come back with some sort of coordinates or options, then.

143
00:10:27,810 --> 00:10:32,340
It means that the FBI can use the squares to select his side.

144
00:10:33,120 --> 00:10:36,420
Now, what does this what does all of this mean?

145
00:10:36,450 --> 00:10:40,800
It means that we need to set the priority dynamically.

146
00:10:41,410 --> 00:10:41,690
Right.

147
00:10:41,790 --> 00:10:43,060
How do we do that?

148
00:10:43,350 --> 00:10:50,550
So first off, I'm going to create a priority variable and I'm going to set it to this size length that

149
00:10:50,550 --> 00:10:55,980
we have and we are going to check for the length if the length is greater than zero.

150
00:10:56,400 --> 00:10:57,240
What does that mean?

151
00:10:57,900 --> 00:10:59,250
It means that the.

152
00:11:00,920 --> 00:11:08,510
Now, if the sides length is greater than zero, it means that the FBI has come, sorry, this dysfunction

153
00:11:08,750 --> 00:11:10,970
has come back with something.

154
00:11:12,630 --> 00:11:20,370
Whatever it is, we want that to be contained within our second priority, we said that if it doesn't

155
00:11:20,370 --> 00:11:25,610
come back with anything, then we want to push it to our third project.

156
00:11:25,950 --> 00:11:30,630
So if it does come back with something, we want to push it to our first priority.

157
00:11:31,020 --> 00:11:38,970
And if it is, and else we want to push it where third priority, which is right here right now, we

158
00:11:38,970 --> 00:11:41,080
need to modify this options as well.

159
00:11:41,520 --> 00:11:49,590
So instead of just saying option one, we are going to pass in our priority and then we are going to

160
00:11:49,590 --> 00:11:51,030
create an object here.

161
00:11:52,470 --> 00:11:58,260
So the object is going to have to properties, the first one is going to be square, which the square

162
00:11:58,260 --> 00:12:00,130
is going to be this array that we have.

163
00:12:00,150 --> 00:12:02,850
I'm just going to pass it right here and then.

164
00:12:04,130 --> 00:12:12,020
We need to take into consideration the sides as well, because we are within the realm of controlling

165
00:12:12,410 --> 00:12:20,090
that weird behavior, we are going to set the sights key to the sides value, which is going to be supplied

166
00:12:20,090 --> 00:12:20,630
from here.

167
00:12:23,560 --> 00:12:31,100
Now, I'm going to ask you a question now, our code has significantly changed, right?

168
00:12:31,120 --> 00:12:33,580
This code doesn't match this.

169
00:12:33,790 --> 00:12:35,590
This pattern doesn't match this one.

170
00:12:35,980 --> 00:12:37,390
Now, what do you think?

171
00:12:37,630 --> 00:12:40,740
I know you think that, OK, we should put this one here as well.

172
00:12:41,200 --> 00:12:45,770
But what do you think the sides is going to accept as a value?

173
00:12:46,240 --> 00:12:48,370
We know what the square is going to accept.

174
00:12:48,370 --> 00:12:50,260
That is the square itself.

175
00:12:50,500 --> 00:12:52,000
But what about the side?

176
00:12:53,790 --> 00:13:00,270
What do you think it is going to accept now, because whenever we are in our first priority, we do

177
00:13:00,270 --> 00:13:04,680
not care which neighbor it is, we just want the EHI.

178
00:13:04,830 --> 00:13:07,950
Basically, the EHI does not care what neighbor it is.

179
00:13:08,430 --> 00:13:14,820
The are just the I's just concerned with filling that fourth line and scoring.

180
00:13:15,300 --> 00:13:18,030
So we don't need the sides here.

181
00:13:18,030 --> 00:13:22,530
So I'm just going to delete it and I'm going to set it as an an, an empty array.

182
00:13:23,280 --> 00:13:24,840
What about our third priority.

183
00:13:24,930 --> 00:13:32,310
So aside from the fact that we are pushing one of the options to the third priority, the third priority

184
00:13:32,310 --> 00:13:33,420
is nowhere.

185
00:13:33,440 --> 00:13:41,010
Where the aid is going to take is going to be like care is going to care about any neighbors, because

186
00:13:41,010 --> 00:13:48,120
in this, the eye doesn't have a choice, doesn't have to think about neighbors because there are no

187
00:13:48,120 --> 00:13:49,650
neighbors to think about.

188
00:13:50,970 --> 00:13:54,960
So basically, the sides is going to be an empty array.

189
00:13:55,900 --> 00:13:56,900
Here as well.

190
00:13:57,910 --> 00:14:03,640
Now that that is going to be it for this lecture, because we talked about a lot of advanced concepts

191
00:14:04,150 --> 00:14:08,090
and we are going to pick up where we left off in our next lecture.

192
00:14:08,110 --> 00:14:09,310
See you guys then.

