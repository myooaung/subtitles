WEBVTT
1
00:00:01.580 --> 00:00:08.480
Hi, everyone, in this lecture, we are going to implement the stopping and speeding functionalities.

2
00:00:09.230 --> 00:00:18.820
All right, so first off, let's come here and let's create the tarping functionality, right.

3
00:00:19.160 --> 00:00:25.640
So for that, we are going to grab our star between DOT and we are going to add an event listener to

4
00:00:25.640 --> 00:00:25.820
it.

5
00:00:26.060 --> 00:00:28.010
The event is going to be click.

6
00:00:28.220 --> 00:00:33.590
And when it is clicked, we are going to run a function called stop text.

7
00:00:34.010 --> 00:00:40.130
Now, let's come down here and let's create the stop text function.

8
00:00:40.440 --> 00:00:40.870
All right.

9
00:00:41.180 --> 00:00:44.570
So we are going to say function, stop.

10
00:00:45.420 --> 00:00:50.060
Text, right, and what do we want this function to do?

11
00:00:50.460 --> 00:00:51.750
We want this function.

12
00:00:53.100 --> 00:01:04.170
To stop, if the text is being text is being read or if the or if the text is passed, in any case,

13
00:01:04.470 --> 00:01:07.030
we want to we want to stop that function.

14
00:01:07.070 --> 00:01:07.380
Right.

15
00:01:07.680 --> 00:01:12.890
So what we are going to do is we are going to say speech synthetics, dot cancer.

16
00:01:12.960 --> 00:01:14.880
This is going to stop the speech.

17
00:01:15.220 --> 00:01:15.600
Right?

18
00:01:15.900 --> 00:01:17.100
This is going to stop it.

19
00:01:17.340 --> 00:01:20.820
And we are also going to say speech.

20
00:01:21.820 --> 00:01:23.560
Speech synthetics that resume.

21
00:01:24.510 --> 00:01:31.110
All right, so you know what, I'm just going to swap their places because whenever the speech is being

22
00:01:31.890 --> 00:01:36.570
spoken, we want to either resume it or we want to cancel it.

23
00:01:36.600 --> 00:01:37.050
All right.

24
00:01:40.150 --> 00:01:48.880
What I mean is whenever we pause or text, we we should resume it if we do not resume and the stop button

25
00:01:48.880 --> 00:01:49.800
is not going to work.

26
00:01:49.960 --> 00:01:55.940
So the resume method is going to be called inside the stop function and inside the agreed text function.

27
00:01:56.230 --> 00:02:03.520
So let's go ahead and let's check out and let's grab our text from right here, spaced it here.

28
00:02:03.520 --> 00:02:08.289
Let's click on the read quick brown fox pause, stop.

29
00:02:08.500 --> 00:02:10.210
See the quick brown fox.

30
00:02:10.930 --> 00:02:16.200
And when we stop it and when we read it again, it is going to start from the beginning.

31
00:02:16.720 --> 00:02:16.990
Right.

32
00:02:17.500 --> 00:02:22.690
So this is the stopping functionality, the final functionality that I want to implement.

33
00:02:22.690 --> 00:02:25.630
And this video is going to be the speed.

34
00:02:27.700 --> 00:02:35.140
The speed, input, functionality, input, functionality, right, and for this, we are going to grab

35
00:02:35.140 --> 00:02:41.050
our speed button and we are going to add an event listener to it now because the speed button is actually

36
00:02:41.050 --> 00:02:45.070
an input right and input type of number.

37
00:02:45.070 --> 00:02:45.850
It is an input.

38
00:02:45.850 --> 00:02:51.370
We are going to add an input event to it and we will listen for it.

39
00:02:51.370 --> 00:02:55.890
And when the input event is fired, we are going to run a function.

40
00:02:56.290 --> 00:02:57.730
What is the function going to do?

41
00:02:57.970 --> 00:03:01.590
The function is going to stop the text, right?

42
00:03:02.230 --> 00:03:08.860
The function is going to stop the text and the function is going to call our read text method, read

43
00:03:08.860 --> 00:03:12.070
text function.

44
00:03:12.070 --> 00:03:17.860
It is going to call that function as a callback function and the parameter is something very, very

45
00:03:17.860 --> 00:03:18.160
cool.

46
00:03:18.580 --> 00:03:22.900
So for this to work, the parameter of what I'm going to do is I'm going to go ahead and I'm going to

47
00:03:22.900 --> 00:03:25.690
initialize I'm not going to give it a value.

48
00:03:25.690 --> 00:03:31.490
I'm just going to initialize a variable called current char or current character.

49
00:03:32.830 --> 00:03:33.250
All right.

50
00:03:33.370 --> 00:03:35.860
And now what I'm going to do is where is our.

51
00:03:37.060 --> 00:03:37.360
Hmm.

52
00:03:37.570 --> 00:03:38.260
Here are this.

53
00:03:38.530 --> 00:03:40.240
No, that is not this hero.

54
00:03:40.240 --> 00:03:46.330
This so inside the read, what do we want to do is we want to grab our utterance and the text that the

55
00:03:46.330 --> 00:03:48.580
computer has just received to read.

56
00:03:48.730 --> 00:03:51.100
And we want to grab a substring of that.

57
00:03:51.370 --> 00:03:51.790
Right.

58
00:03:51.970 --> 00:03:53.610
And why do we want to do that?

59
00:03:53.620 --> 00:04:02.710
I'm going to tell you why the text that substring substring and I'm going to pass in the current char.

60
00:04:02.980 --> 00:04:03.350
Right.

61
00:04:03.880 --> 00:04:06.640
So let's come into our final finished application.

62
00:04:06.640 --> 00:04:10.540
Let's say functionality or not functionality.

63
00:04:10.810 --> 00:04:14.230
Let's copy a portion of our text.

64
00:04:15.590 --> 00:04:18.890
I copied its pasted right here.

65
00:04:19.940 --> 00:04:28.100
OK, so let's add an S here, let's click on the read, right, pay pay very, very close attention.

66
00:04:28.400 --> 00:04:35.360
And the thing that you're looking for is whenever I click read and if I try to change the speed, it

67
00:04:35.360 --> 00:04:41.570
is going to start from a from for example, if it is inside, if it is in this ward, it is going to

68
00:04:41.570 --> 00:04:43.400
start from the start of this word.

69
00:04:43.760 --> 00:04:49.250
It is not when I change the speed, it is not going to start from the beginning of the text.

70
00:04:49.400 --> 00:04:53.660
It is just going to start from the beginning of the word that it was just speaking.

71
00:04:54.110 --> 00:04:54.390
Right.

72
00:04:54.800 --> 00:04:56.450
So that's how it is going to work.

73
00:04:57.530 --> 00:04:58.000
Stop.

74
00:04:58.610 --> 00:05:00.110
All right, let's paste it.

75
00:05:00.110 --> 00:05:02.090
Let's read in the distant future.

76
00:05:10.640 --> 00:05:11.710
I hope that is clear.

77
00:05:12.050 --> 00:05:17.870
I just I just kept clicking on the Interstellar and I just kept increasing the speed.

78
00:05:18.050 --> 00:05:23.360
And it could not go any further from this word because it has to say it completely.

79
00:05:23.360 --> 00:05:24.680
Then it can go forward.

80
00:05:25.040 --> 00:05:25.700
Let's read

81
00:05:29.060 --> 00:05:29.870
acceptance letter.

82
00:05:32.360 --> 00:05:39.590
See, so each time that we go ahead and we increase the speed or decrease the speed, the speech is

83
00:05:39.590 --> 00:05:45.590
going to stop at that specific word and it is going to grab a substring of that word, which is the

84
00:05:45.590 --> 00:05:46.280
first one.

85
00:05:47.300 --> 00:05:49.250
And how does this actually help us?

86
00:05:49.670 --> 00:05:56.660
This is going to help us implementing the functionality of increasing the speed whenever the computer

87
00:05:56.660 --> 00:05:58.690
is actually still speaking.

88
00:05:59.060 --> 00:06:04.310
So you can increase it even without this speed, without this event listener, you can increase the

89
00:06:04.310 --> 00:06:08.450
speed after the text is done or before the text is ever spoken.

90
00:06:08.810 --> 00:06:09.860
You can do that.

91
00:06:10.070 --> 00:06:16.730
But if you want to implement the functionality to be able to increase the speed at the exact time when

92
00:06:16.730 --> 00:06:21.050
the speech is being spoken, we need to have another event listener.

93
00:06:21.320 --> 00:06:25.910
And that event is going to be a boundary event which is specific to our utterance.

94
00:06:26.180 --> 00:06:32.930
So I'm going to come down here and I'm going to say utterance that ad event listener, add event listener.

95
00:06:33.440 --> 00:06:40.640
And now this is a very specific event for our utterance and we are going to look for the boundary whenever

96
00:06:40.640 --> 00:06:41.900
we find the boundary.

97
00:06:41.900 --> 00:06:46.190
We are going to grab our event object and we want we are going to run a function.

98
00:06:46.520 --> 00:06:49.210
So we are going to say current char should be equal.

99
00:06:49.400 --> 00:06:55.640
Now, we have initialized our current character, but we have not specified a specific value.

100
00:06:55.970 --> 00:06:57.840
This is a function call, right.

101
00:06:59.060 --> 00:07:03.760
The function is going to be called inside the speech text sorry, the speed button.

102
00:07:04.160 --> 00:07:06.290
What is the current charas value?

103
00:07:06.290 --> 00:07:08.780
The current Charas value is going to come from IDOT.

104
00:07:10.610 --> 00:07:18.740
Char or character index, this method is available to us by this utterance, so if I go ahead and if

105
00:07:18.740 --> 00:07:22.440
I can log it, you will understand what I mean.

106
00:07:22.460 --> 00:07:29.900
I mean, this point you understand so well, I'm going to go to top here and I'm going to grab our very

107
00:07:29.900 --> 00:07:31.090
overused sentence.

108
00:07:31.100 --> 00:07:31.760
Come on, buddy.

109
00:07:32.510 --> 00:07:33.950
And I'm going to stay right here.

110
00:07:33.980 --> 00:07:36.080
So now let's go ahead and let's click read.

111
00:07:38.190 --> 00:07:40.270
I didn't read it, come on, buddy.

112
00:07:40.900 --> 00:07:41.380
Read it.

113
00:07:42.460 --> 00:07:43.410
Stop it.

114
00:07:44.320 --> 00:07:47.260
And then read it quick, Brown Fox jumps over the lazy.

115
00:07:47.950 --> 00:07:52.850
Now you can see that we have one, two, three, four, five, six, seven, eight, nine.

116
00:07:53.140 --> 00:08:00.460
We have nine indices here and we have one, two, three, four, five, six, seven, eight and nine

117
00:08:00.460 --> 00:08:00.970
words.

118
00:08:01.330 --> 00:08:06.850
So each of these indices, it represents the starting letter of a word.

119
00:08:07.510 --> 00:08:10.230
OK, so this team has an index of zero.

120
00:08:10.240 --> 00:08:13.510
We get zero here then index one two.

121
00:08:13.870 --> 00:08:16.780
Oops, this is index of three.

122
00:08:16.780 --> 00:08:23.060
And this Q which is the starting letter of the second word is going to have an index of four.

123
00:08:23.440 --> 00:08:28.660
So this Brown has an index of ten, the F has an index of sixteen.

124
00:08:28.870 --> 00:08:31.890
The jump has an index of twenty.

125
00:08:31.900 --> 00:08:32.940
We can count it.

126
00:08:33.280 --> 00:08:34.559
So this is zero.

127
00:08:34.690 --> 00:08:41.140
One, two, three, four, five, six, seven, eight, nine, 10, 11, 12, 13, 14, 15, 16, 17,

128
00:08:41.140 --> 00:08:41.960
18, 19.

129
00:08:42.159 --> 00:08:43.340
There we go to one.

130
00:08:43.570 --> 00:08:45.400
So this has an index of twenty.

131
00:08:45.760 --> 00:08:49.630
And the current chart is what I just consultor the log.

132
00:08:49.780 --> 00:08:51.600
Sorry, log to the console.

133
00:08:51.970 --> 00:08:57.310
So the current Charas value is going to come from the event object, the character index.

134
00:08:57.460 --> 00:09:04.660
It's like the path that we had for our previous project, which was the to do OK like path like target

135
00:09:04.660 --> 00:09:05.830
that we use all the time.

136
00:09:06.100 --> 00:09:12.730
Whenever we say event object on the event out of boundary, which is on the utterance, we can use the

137
00:09:12.730 --> 00:09:18.310
char index if you want to know all the I'm just going to come in this out and I'm going to paste it

138
00:09:18.310 --> 00:09:18.580
here.

139
00:09:18.910 --> 00:09:24.490
If you want to know all the event properties and objects that you will get Juska, you just have to

140
00:09:24.490 --> 00:09:25.120
do this.

141
00:09:26.680 --> 00:09:28.270
This is everything you will get.

142
00:09:28.300 --> 00:09:37.270
So if I just click on this, these are everything you will get whenever you specify or you add a boundary

143
00:09:37.270 --> 00:09:37.840
event.

144
00:09:37.840 --> 00:09:40.680
And where is our character index?

145
00:09:41.230 --> 00:09:45.640
This is our character index because this was the first word.

146
00:09:46.090 --> 00:09:48.130
And if I come down here to here.

147
00:09:48.160 --> 00:09:50.020
So this is the word number eight.

148
00:09:50.350 --> 00:09:54.390
Our character index should be thirty five.

149
00:09:54.400 --> 00:09:56.890
OK, character index is thirty five.

150
00:09:57.160 --> 00:09:58.930
This is the name is word.

151
00:09:59.590 --> 00:10:00.880
What else do we have here.

152
00:10:00.910 --> 00:10:02.070
Let's take a look at it.

153
00:10:02.890 --> 00:10:08.710
OK, so we have text as the brown fox boundary.

154
00:10:08.980 --> 00:10:10.450
The one type is boundary.

155
00:10:10.720 --> 00:10:17.770
So we have all this information but we only want the the character index property.

156
00:10:18.460 --> 00:10:18.940
Right.

157
00:10:20.380 --> 00:10:24.160
So I think I think we are done here.

158
00:10:24.190 --> 00:10:30.070
So what I'm going to do is I'm going to delete these council logs and let's take a look at it.

159
00:10:30.250 --> 00:10:37.630
So we have all of our functionalities reading, pausing, stopping and speed and put functionality.

160
00:10:37.900 --> 00:10:38.350
All right.

161
00:10:39.550 --> 00:10:45.550
We have created our utterance and utterance to even listeners for the utterance specific, for the utterance.

162
00:10:46.030 --> 00:10:51.250
We have a text function, our postfix function, stop text function.

163
00:10:51.850 --> 00:10:52.620
All right.

164
00:10:52.630 --> 00:10:54.830
So let's go ahead and let's check out our application.

165
00:10:54.850 --> 00:11:00.450
I'm just going to close this and I'm going to say, hey, they're wide open.

166
00:11:01.330 --> 00:11:04.330
What is up is click.

167
00:11:04.630 --> 00:11:05.010
Hey, there.

168
00:11:05.020 --> 00:11:05.340
What is.

169
00:11:06.840 --> 00:11:10.050
OK, so this was a bit of a fast we can decrease it.

170
00:11:12.040 --> 00:11:19.180
OK, we can say, read it, stop, read it there one is we can pause it, of course.

171
00:11:20.140 --> 00:11:23.550
So let's let's grab our text from here.

172
00:11:24.590 --> 00:11:27.650
OK, let's put it right here, Sayeret.

173
00:11:29.240 --> 00:11:33.170
Stop it read it is also necessary for space navigation.

174
00:11:33.990 --> 00:11:36.020
OK, stop, stop.

175
00:11:36.150 --> 00:11:39.090
It is also necessary.

176
00:11:39.510 --> 00:11:46.890
OK, the speed is also working with me, if I put it to zero point five that only the drug provides.

177
00:11:47.870 --> 00:11:48.340
OK.

178
00:11:52.090 --> 00:11:53.890
As well.

179
00:11:54.060 --> 00:12:01.510
And so this is the final one, this is eight a this is one of the politics, religion.

180
00:12:01.790 --> 00:12:02.780
All right.

181
00:12:02.780 --> 00:12:06.500
So we should we should we should be good.

182
00:12:07.120 --> 00:12:11.980
So this is going to be at the for this chapter and for this project.

183
00:12:12.220 --> 00:12:13.530
I hope you have enjoyed it.

184
00:12:13.540 --> 00:12:16.210
There were quite a lot of new things.

185
00:12:16.420 --> 00:12:17.260
What am I doing here?

186
00:12:17.740 --> 00:12:19.410
There were quite a lot of new things.

187
00:12:19.420 --> 00:12:21.250
We had speech, synthetics, utterance.

188
00:12:21.250 --> 00:12:24.910
We worked with some utterance, some new event listeners.

189
00:12:24.910 --> 00:12:27.400
As you can see, there are a lot of listeners.

190
00:12:27.580 --> 00:12:36.100
And one thing that I that I think you have mastered by now is using if statements that said for this

191
00:12:36.100 --> 00:12:41.370
lecture and for this chapter and of course, for this project.

192
00:12:41.590 --> 00:12:43.600
See you guys in the next one.

