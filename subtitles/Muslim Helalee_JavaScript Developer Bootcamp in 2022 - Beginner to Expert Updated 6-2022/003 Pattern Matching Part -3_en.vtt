WEBVTT
1
00:00:02.110 --> 00:00:03.020
Hi, everyone.

2
00:00:03.550 --> 00:00:07.030
In this next hour, we're going to go over the matching part three.

3
00:00:08.680 --> 00:00:16.600
All right, so in the example line we have getting the March numbers and characters of Alphabet with

4
00:00:16.600 --> 00:00:18.440
brackets, the match method.

5
00:00:19.510 --> 00:00:22.420
So what I'm going to do is I'm going to create a regular expression.

6
00:00:22.420 --> 00:00:27.060
But before that, notice that we have some numbers inside the string as well.

7
00:00:27.310 --> 00:00:31.630
They don't make sense, but I just wanted to provide them for testing purposes.

8
00:00:32.860 --> 00:00:34.480
So Reg nine.

9
00:00:34.510 --> 00:00:37.580
Oops, what is that nine X equals.

10
00:00:37.750 --> 00:00:39.520
So what it is that we are looking for?

11
00:00:39.730 --> 00:00:45.760
So what I want to do is I want to grab numbers from one to three, including one and three.

12
00:00:46.450 --> 00:00:53.900
Also, I want to grab the alphabet letters from X to Z, including X and Z.

13
00:00:54.160 --> 00:01:02.170
So we are going to grab numbers one, two, three and letters X, Y and Z so we can do that with brackets

14
00:01:02.170 --> 00:01:02.590
as well.

15
00:01:02.770 --> 00:01:08.890
And I want to grab all the occurrences of these numbers sorry, these characters.

16
00:01:09.010 --> 00:01:12.070
And I want to ignore the case sensitiveness.

17
00:01:12.070 --> 00:01:17.550
So let's go ahead and let's search him out in here.

18
00:01:18.250 --> 00:01:22.540
So if I say it, we get one one so we get only numbers.

19
00:01:22.540 --> 00:01:23.860
One, two, three.

20
00:01:23.860 --> 00:01:25.840
We don't get four, five, six.

21
00:01:26.230 --> 00:01:29.590
And we only get the letters X, Y and Z.

22
00:01:30.100 --> 00:01:38.350
So we have an X and we have a Y and we have Z here because this contains all the English letters of

23
00:01:38.350 --> 00:01:38.980
alphabet.

24
00:01:39.190 --> 00:01:40.750
We do get all of them in here.

25
00:01:40.990 --> 00:01:45.220
But notice we don't get be D a F, whatever.

26
00:01:45.520 --> 00:01:51.550
We just get what we have provided inside the search pattern that's coming this one out.

27
00:01:51.560 --> 00:01:54.430
And let's go to the next example.

28
00:01:54.460 --> 00:01:58.480
So in the next example, we are just provided this line.

29
00:01:58.480 --> 00:02:04.150
I thought this was like in the previous lecture, it was a bit confusing where the example ends, where

30
00:02:04.150 --> 00:02:06.310
the second word, the other example starts.

31
00:02:06.580 --> 00:02:08.440
So I just provided it like this.

32
00:02:09.639 --> 00:02:14.590
And you don't want just for your simplicity purposes, I'm just going to provide this comment here as

33
00:02:14.590 --> 00:02:14.890
well.

34
00:02:15.310 --> 00:02:21.520
It is going to grab this, including one three X and Z, in case you're wondering about the boundary

35
00:02:21.520 --> 00:02:22.260
characters.

36
00:02:22.750 --> 00:02:29.530
So example turn getting not the matched numbers and characters with brackets.

37
00:02:29.530 --> 00:02:30.480
The match method.

38
00:02:30.730 --> 00:02:33.190
This is the negated character sets.

39
00:02:33.730 --> 00:02:36.070
So let's see, how can we work with this?

40
00:02:36.250 --> 00:02:38.680
So let's create our regular expression.

41
00:02:38.680 --> 00:02:42.450
So this is not nineteen ten X.

42
00:02:42.980 --> 00:02:43.600
All right.

43
00:02:43.600 --> 00:02:47.260
So inside these slashes, I'm just going to provide our brackets.

44
00:02:47.590 --> 00:02:55.570
So I want to grab everything that does not match what I have written inside these brackets.

45
00:02:56.390 --> 00:03:05.880
OK, so get everything except what this brackets what what these brackets like search for.

46
00:03:06.340 --> 00:03:09.040
So we are just going to provide the carrot symbol.

47
00:03:09.760 --> 00:03:12.840
Make sure you do not confuse this with carrot.

48
00:03:13.300 --> 00:03:22.480
This is the a vegetable and but this is like veggie, whatever, vegetable, vegetable.

49
00:03:22.480 --> 00:03:25.120
But what we are looking for is carrot.

50
00:03:25.670 --> 00:03:26.950
It is this symbol.

51
00:03:26.960 --> 00:03:28.960
So these two are different.

52
00:03:29.500 --> 00:03:29.800
Right.

53
00:03:29.810 --> 00:03:30.880
So this is the carrot.

54
00:03:30.880 --> 00:03:37.990
This is the six six key keyboard I like on your keyboard.

55
00:03:37.990 --> 00:03:44.260
The sixth one, not the calculus calculator part, but these are letters that these keys which are on

56
00:03:44.260 --> 00:03:47.590
top of your alphabets and in your keyboard on your keyboard.

57
00:03:48.010 --> 00:03:55.330
So I'm moving away from that weird discussion whenever we provide the carrots inside the brackets.

58
00:03:55.330 --> 00:03:56.320
Keep keep this in mind.

59
00:03:56.320 --> 00:03:59.980
The carrot is inside the brackets when it is outside the brackets.

60
00:04:00.790 --> 00:04:03.190
Well, weird, weird enough.

61
00:04:03.190 --> 00:04:04.780
It has a different meaning.

62
00:04:05.020 --> 00:04:05.320
Right.

63
00:04:05.320 --> 00:04:06.340
So keep this in mind.

64
00:04:06.610 --> 00:04:10.870
So we want to grab everything which are not numbers from one to nine.

65
00:04:11.170 --> 00:04:19.269
OK, so maybe like you should provide to six and like you just provide three.

66
00:04:19.269 --> 00:04:25.960
OK, we don't want to grab the numbers from one to nine and we also don't want to grab characters from

67
00:04:25.960 --> 00:04:26.680
a TV.

68
00:04:26.950 --> 00:04:29.090
And we also do not want to grab the space.

69
00:04:29.110 --> 00:04:30.310
We just provide the space.

70
00:04:30.700 --> 00:04:38.080
We want to grab all the occurrences of this and also ignore the case sensitiveness and before running

71
00:04:38.080 --> 00:04:38.470
this.

72
00:04:39.430 --> 00:04:46.180
I'm just going to provide this comment, get everything except the ones included in this, so let's

73
00:04:46.180 --> 00:04:54.670
go ahead and let's run this and come these one in and just grab this search.

74
00:04:55.810 --> 00:05:02.170
Turn and let's save it so we get everything, which is not the number, which is not the number from

75
00:05:02.170 --> 00:05:06.830
one to nine, so we don't see one to nine and which are not the letters ATV.

76
00:05:07.530 --> 00:05:07.900
All right.

77
00:05:09.890 --> 00:05:18.960
So we have ABCDE, J, k, l and O p q r s t u v WXYZ.

78
00:05:18.980 --> 00:05:22.490
So we only get W, we get X and we get Y and we get see.

79
00:05:23.120 --> 00:05:27.110
So this is how the carrot works inside the brackets.

80
00:05:27.560 --> 00:05:28.880
For the example.

81
00:05:28.880 --> 00:05:34.820
No.11, what it is that we want to do is we are going to getting we are going to get the March numbers

82
00:05:34.820 --> 00:05:38.140
and characters that occur one or more times.

83
00:05:38.360 --> 00:05:42.110
So so far we only crowd them all of the occurrences through this.

84
00:05:42.120 --> 00:05:43.490
Duflot but.

85
00:05:44.600 --> 00:05:49.250
We want to grab the occurrence if it is one or more time, this is where this plus comes in.

86
00:05:50.920 --> 00:05:56.980
So we have now we are talking about this, plus we talked about this carrot, you can see it as much

87
00:05:56.980 --> 00:05:58.720
as the start of the string or line.

88
00:05:58.990 --> 00:06:01.830
That's because the carrot is outside the bracket.

89
00:06:02.140 --> 00:06:03.170
That's what it means.

90
00:06:03.190 --> 00:06:06.640
So we are going to go ahead and go over this by the end of this chapter.

91
00:06:06.650 --> 00:06:08.950
You will know what that 60 file means.

92
00:06:09.640 --> 00:06:13.570
So let's go ahead and let's create our Regg 11 X.

93
00:06:14.590 --> 00:06:21.730
And what it is that we are looking for is we want to grab the occurrences of let's say.

94
00:06:24.150 --> 00:06:31.200
Al, for example, Al, two times, so we don't have any Al, I'm just going to provide really this

95
00:06:31.200 --> 00:06:35.830
word in here and unexpected, OK, it is this year.

96
00:06:36.060 --> 00:06:40.950
So I want to grab one or more occurrences of Al, right.

97
00:06:41.070 --> 00:06:43.830
So I'm just going to provide an F plus here and.

98
00:06:45.540 --> 00:06:46.050
OK.

99
00:06:47.530 --> 00:06:54.490
So but because we are looking for one or more times, it could be there could be like two L's, that's

100
00:06:54.490 --> 00:06:57.580
why we should use the G flag so we can get all of them.

101
00:06:57.820 --> 00:06:59.360
We can print all of them.

102
00:06:59.830 --> 00:07:00.270
All right.

103
00:07:00.280 --> 00:07:02.650
And let's put this here and.

104
00:07:03.880 --> 00:07:11.740
OK, so let's save it, let's grab this and let's put it to 11, if I save it, we get the oil first

105
00:07:11.740 --> 00:07:13.530
and we get the the double.

106
00:07:13.900 --> 00:07:16.020
And now let's go ahead and let's look at this.

107
00:07:16.150 --> 00:07:18.540
So this it comes from this lazy.

108
00:07:18.830 --> 00:07:19.120
Right.

109
00:07:19.330 --> 00:07:20.920
So this is the Lascelle.

110
00:07:21.460 --> 00:07:26.860
And this is going to be really the second the double al is going to come from this.

111
00:07:26.860 --> 00:07:27.200
Really.

112
00:07:27.460 --> 00:07:35.930
So what this plus does, it is going to grab this the character that is inside the string and has been

113
00:07:35.950 --> 00:07:36.340
rapid.

114
00:07:36.790 --> 00:07:43.600
Is there or and the occurrences either one time or more than that, the occurrence basically means how

115
00:07:43.600 --> 00:07:48.780
many times the letter or character has been repeated inside the string.

116
00:07:49.060 --> 00:07:52.110
So up until here we have only one answer.

117
00:07:52.120 --> 00:07:56.200
It has been repeated only once, but in here we have two other wells.

118
00:07:56.470 --> 00:07:58.660
That's why we have two other L's in here.

119
00:07:58.660 --> 00:08:01.380
And it means that it has been repeated a second time.

120
00:08:01.690 --> 00:08:03.070
We want to grab all of them.

121
00:08:03.950 --> 00:08:04.360
All right.

122
00:08:04.550 --> 00:08:10.800
As opposed to if we were just to provide the gif, like we would get all the individual else.

123
00:08:11.030 --> 00:08:11.380
All right.

124
00:08:11.590 --> 00:08:15.090
But this plus it is going to combine them wherever they are.

125
00:08:15.100 --> 00:08:21.920
So if there is another word that let's say we have another really that has three L's, and if I say

126
00:08:21.940 --> 00:08:27.910
it, we are going to get all the individual URLs, but if we use the plus side, we are going to combine

127
00:08:27.910 --> 00:08:28.120
them.

128
00:08:28.120 --> 00:08:29.140
We will know, OK?

129
00:08:30.930 --> 00:08:33.539
Where are the these these are combined.

130
00:08:33.600 --> 00:08:39.780
OK, so this was the example, No.11, let's dive into the example number 12.

131
00:08:40.730 --> 00:08:48.680
OK, so and here we are going to get the mushed characters that occur zero or more times, so we talked

132
00:08:48.680 --> 00:08:50.070
about one or more times.

133
00:08:50.090 --> 00:08:53.140
Now, let's go ahead and let's talk about zero or more times.

134
00:08:53.570 --> 00:08:58.970
So for this one, I'm going to do is we are going to use another sentence, and that is Google.

135
00:08:59.980 --> 00:09:03.610
All right, let's create our regular 12 X.

136
00:09:05.060 --> 00:09:11.120
And what it is that we are looking for, so we are looking for Geo and we are going to put in this the

137
00:09:11.120 --> 00:09:11.870
asterisk.

138
00:09:12.230 --> 00:09:15.320
And that said, so let's go ahead and let's save it.

139
00:09:18.820 --> 00:09:23.500
And I'm going to explain to you before saving this to the console and printing it to the console, I'm

140
00:09:23.500 --> 00:09:31.540
going to explain to so we are looking for a character of G and after that we are looking for the O part

141
00:09:31.540 --> 00:09:35.890
could be repeating, could be like repeated zero or more times.

142
00:09:35.890 --> 00:09:39.790
But in here we could see that it is almost two, three, four, five.

143
00:09:39.830 --> 00:09:42.060
So there is almost eight times.

144
00:09:42.340 --> 00:09:45.510
So we don't care how many times it has been repeated.

145
00:09:45.850 --> 00:09:50.680
So because Google has two O's, you can just provide it like this.

146
00:09:50.680 --> 00:09:55.600
You can say you can just provide the asterisk and the asterisk is going to look for O.

147
00:09:55.960 --> 00:10:02.280
Whether the O has been is there has been repeated zero or more times.

148
00:10:02.290 --> 00:10:04.960
So if the O isn't there, it is going to match.

149
00:10:05.140 --> 00:10:08.440
If the O is there only once it is going to match.

150
00:10:08.650 --> 00:10:11.660
If there is more than one O it is going to match as well.

151
00:10:11.860 --> 00:10:16.660
So if I say it we get that specific G right.

152
00:10:16.780 --> 00:10:18.370
So we get the G from here.

153
00:10:20.120 --> 00:10:27.470
OK, so this is the the example number 12, so we are getting the matched characters that occurred zero

154
00:10:27.470 --> 00:10:28.450
or more times.

155
00:10:29.030 --> 00:10:39.490
So let's say that we get the G because this has been groups and defined the index as number seven to

156
00:10:40.160 --> 00:10:42.680
the oh, we are checking against.

157
00:10:42.740 --> 00:10:44.810
I thought there was something incorrect.

158
00:10:45.050 --> 00:10:53.270
We should just write sentence two and now we are getting the Google, not the early part JLE part,

159
00:10:53.270 --> 00:10:55.970
but that part we are getting, we are getting all the OS.

160
00:10:56.210 --> 00:11:00.730
But if I were to decrease all of them to only one hour, we are going to get that as well.

161
00:11:00.950 --> 00:11:06.470
So it doesn't matter how many times the O has been repeated, it is going to grab all the occurrences

162
00:11:06.470 --> 00:11:07.310
of that oh.

163
00:11:07.310 --> 00:11:14.210
Which has been repeated so the occurrence could be zero or the occurrence could be like more times than

164
00:11:14.210 --> 00:11:14.570
zero.

165
00:11:16.240 --> 00:11:23.770
Let's dive into the example number 13, we are going to do 16 examples like former examples in this

166
00:11:23.770 --> 00:11:24.580
lecture as well.

167
00:11:24.970 --> 00:11:30.040
So in this, we are going to get the matched characters with lazy matching.

168
00:11:30.400 --> 00:11:36.700
Now, this idea is a bit like this is a newer thing that we talk about in regular expressions.

169
00:11:37.000 --> 00:11:42.820
So what I'm going to do is I'm going to stop right here and I'm going to come in here and I'm just going

170
00:11:42.820 --> 00:11:45.490
to say part four.

171
00:11:45.550 --> 00:11:52.120
So in the next lecture, we are going to talk about part four within the same file.

172
00:11:52.390 --> 00:11:55.330
So that said for this lecture, see you guys in the next one.

