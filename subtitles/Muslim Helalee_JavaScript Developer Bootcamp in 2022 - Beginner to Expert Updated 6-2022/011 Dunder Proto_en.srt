1
00:00:01,800 --> 00:00:06,120
Hi, everyone, in this lecture, we are going to talk about Dundar, Protoje.

2
00:00:07,000 --> 00:00:13,030
All right, so what is Dundar Protoje before getting there, so here on line number 10?

3
00:00:13,060 --> 00:00:21,540
I have a console lock that says is dot constructor equals triple equal, which is district equality.

4
00:00:21,550 --> 00:00:25,250
Operator equals the workshop function.

5
00:00:25,630 --> 00:00:30,840
Now, before asking before answering this, let's go ahead and let's take a look at the prototype chain.

6
00:00:31,210 --> 00:00:39,790
So this is our largest object and we have said that constructor so does this JS object has a constructor

7
00:00:39,790 --> 00:00:40,890
property on it now.

8
00:00:41,200 --> 00:00:44,530
So when we don't find a property on an object, what do we do?

9
00:00:44,540 --> 00:00:48,900
We go one level up the prototype chain, we go to the Aske object.

10
00:00:48,910 --> 00:00:52,450
Does this one have a constructor property on it?

11
00:00:52,480 --> 00:00:52,980
Yes.

12
00:00:53,320 --> 00:00:54,670
And what is it pointing at?

13
00:00:54,670 --> 00:00:56,260
It is pointing at the workshop.

14
00:00:56,260 --> 00:01:04,629
So Jayce object actually has a constructor prototype constructor property.

15
00:01:04,989 --> 00:01:11,380
It comes from, it comes, it went one level up the prototype chain to find it the same way as the ASC

16
00:01:11,380 --> 00:01:11,830
method.

17
00:01:12,220 --> 00:01:15,850
But there is one constructor and that what is that constructor.

18
00:01:15,850 --> 00:01:19,030
That constructor is going to be our workshop function.

19
00:01:19,420 --> 00:01:28,450
So if I were to come here and to save this, that is just that constructor equals workshop we should

20
00:01:28,450 --> 00:01:29,030
get through.

21
00:01:29,200 --> 00:01:31,750
So if I save it, we are going to get through.

22
00:01:31,900 --> 00:01:33,520
And it comes from line number 10.

23
00:01:33,700 --> 00:01:34,050
Right.

24
00:01:34,420 --> 00:01:37,920
So let's come to line number 11.

25
00:01:38,110 --> 00:01:39,910
Here we have I'm not going to save it.

26
00:01:39,910 --> 00:01:40,830
I'm just going to come commented.

27
00:01:40,850 --> 00:01:47,850
And here we have Geass dot, dot, underscore, underscore, Proteau underscore, underscore.

28
00:01:48,100 --> 00:01:49,000
This is very long.

29
00:01:49,290 --> 00:01:50,650
It's a very long name.

30
00:01:50,650 --> 00:01:50,900
Right.

31
00:01:51,130 --> 00:01:58,150
So what we could do is we could say double underscore Proteau and then underscore or we could shorten

32
00:01:58,150 --> 00:02:03,680
it to double under or we could say Dundar.

33
00:02:03,730 --> 00:02:08,979
OK, so double under some cool developers, they call it Dundar Protozoan.

34
00:02:08,990 --> 00:02:10,150
Guess you see it somewhere.

35
00:02:10,300 --> 00:02:13,290
They're basically referring to this GETER function.

36
00:02:13,330 --> 00:02:20,860
OK, so if I were to save this line number 12, we are going to get true as well.

37
00:02:20,860 --> 00:02:21,740
And why is that?

38
00:02:22,090 --> 00:02:23,970
Let's take a look at this one more time.

39
00:02:24,130 --> 00:02:25,860
So this is our JavaScript.

40
00:02:26,110 --> 00:02:28,050
Sorry, this is our religious object.

41
00:02:28,330 --> 00:02:30,520
Now, I hope you're not getting confused.

42
00:02:30,520 --> 00:02:35,320
This is the the newly created object.

43
00:02:35,320 --> 00:02:37,110
This is not like JavaScript.

44
00:02:37,450 --> 00:02:40,000
This is just like I'm just going to you know what?

45
00:02:40,000 --> 00:02:42,480
I'm just going to grab it and I'm going to say just class.

46
00:02:42,790 --> 00:02:45,550
So it is not confused with the language itself.

47
00:02:46,570 --> 00:02:49,220
I'm just going to suggest class and I'm going to say.

48
00:02:49,390 --> 00:02:54,790
We are going to get through, but if I come here and let's assess, why do we get through?

49
00:02:55,240 --> 00:02:58,780
So this this should be just class as well.

50
00:02:58,780 --> 00:03:02,820
I should I don't know if I can edit this.

51
00:03:02,830 --> 00:03:06,160
I created this in paint, so I should go back and I recreate it.

52
00:03:06,460 --> 00:03:07,390
But you get the idea.

53
00:03:07,390 --> 00:03:09,310
This is deejay's class object.

54
00:03:10,680 --> 00:03:15,710
So this J.s class object, does it have a Dundar proud on it, a go getter function on?

55
00:03:15,710 --> 00:03:15,990
No.

56
00:03:16,230 --> 00:03:20,480
So what it what it is going to do, it is going to go one level up the prototype chain.

57
00:03:20,820 --> 00:03:26,220
Does this workshop prototype have it, Dundar Proteau?

58
00:03:26,250 --> 00:03:27,350
No, it doesn't.

59
00:03:27,780 --> 00:03:32,730
So it is going to go one level up one more time to the main JavaScript object.

60
00:03:33,000 --> 00:03:40,230
Now keep in mind this the object function on the left and this main JavaScript object object, they

61
00:03:40,230 --> 00:03:41,400
are available to us.

62
00:03:41,400 --> 00:03:43,560
It doesn't matter if you run the code or not.

63
00:03:43,570 --> 00:03:46,140
That's why they're called line zero environment.

64
00:03:46,500 --> 00:03:48,170
They are available to us.

65
00:03:48,300 --> 00:03:48,630
Right.

66
00:03:49,830 --> 00:03:53,550
Does this mean that GS have a Dundar Proteau on it?

67
00:03:53,850 --> 00:03:55,040
Yes, it does.

68
00:03:55,350 --> 00:03:58,020
And if we come here, I've provided you with the link.

69
00:03:58,590 --> 00:04:04,410
You can see that we have our object, which is in capital o object dot prototype.

70
00:04:04,440 --> 00:04:08,010
So this is object dot prototype then what it is referring to.

71
00:04:08,010 --> 00:04:09,500
It is referring to this object.

72
00:04:09,810 --> 00:04:18,380
It has a prototype property, but it is actually deprecated, but it is still used in JavaScript.

73
00:04:18,390 --> 00:04:20,180
I'm going to show you where it is used.

74
00:04:20,790 --> 00:04:21,120
All right.

75
00:04:21,269 --> 00:04:25,980
And this is even though it's a prop., it is actually a GETER function.

76
00:04:25,980 --> 00:04:31,910
So if we come here and I told you that the prototype and the spec is Brocket bracket prototype.

77
00:04:32,700 --> 00:04:33,060
Right.

78
00:04:33,070 --> 00:04:34,680
So where can we find it?

79
00:04:34,710 --> 00:04:38,790
OK, is a GETER function and a setter function.

80
00:04:39,300 --> 00:04:45,390
So this main object does have this property on it, which is actually an a function, even though there

81
00:04:45,420 --> 00:04:47,820
are no parentheses, but it is a function.

82
00:04:48,240 --> 00:04:50,130
So unlike no.

83
00:04:50,610 --> 00:04:52,010
What is 12.

84
00:04:52,020 --> 00:05:01,290
If I suggest class dot Dundar Proteau, we are actually invoking this GETER function and when we invoke

85
00:05:01,290 --> 00:05:06,270
that GETER function, why is it equal to the work of that prototype for that?

86
00:05:06,270 --> 00:05:10,540
We need to come in this to align and so we can see why is it equal to that.

87
00:05:11,010 --> 00:05:13,200
So just Dundar Proteau.

88
00:05:13,200 --> 00:05:13,980
It is going to.

89
00:05:15,170 --> 00:05:18,250
OK, so this one should be just class as well.

90
00:05:19,970 --> 00:05:20,830
Class.

91
00:05:20,880 --> 00:05:26,560
Let's say that we get an ask function which is inside this object.

92
00:05:26,750 --> 00:05:27,800
What is this object?

93
00:05:27,800 --> 00:05:30,640
This object has been created by the new keyword.

94
00:05:30,800 --> 00:05:32,210
We have talked about that a lot.

95
00:05:32,690 --> 00:05:39,600
But if I click here, you can see that the Dundar Proteau is or the prototype is the object.

96
00:05:40,400 --> 00:05:42,470
So this is actually an object.

97
00:05:42,490 --> 00:05:42,820
Right.

98
00:05:43,220 --> 00:05:49,310
And if I were and you can see that it is the constructor of function, ask is also a function.

99
00:05:49,310 --> 00:05:51,050
Constructor is also a function.

100
00:05:51,290 --> 00:05:56,000
And if we can if we come here, we can see that we have our aske function, which is right here, and

101
00:05:56,000 --> 00:05:59,420
then we have our constructor, which is the workshop.

102
00:05:59,570 --> 00:06:04,920
And if I click, all the information is going to be is going to be inserted here.

103
00:06:05,510 --> 00:06:07,940
So now it comes from line number 14.

104
00:06:07,940 --> 00:06:13,730
If I were to say workshop that prototype now for first stuff, what is workshop that prototype.

105
00:06:13,760 --> 00:06:14,830
So this is workshop.

106
00:06:15,080 --> 00:06:16,390
This is a prototype.

107
00:06:16,550 --> 00:06:23,560
We know whenever we say something that prototype, we are referring to this main JavaScript object.

108
00:06:23,750 --> 00:06:26,750
And does this mean JavaScript object?

109
00:06:26,990 --> 00:06:29,030
Have an ask method on it?

110
00:06:29,030 --> 00:06:29,860
Yes, it does.

111
00:06:30,020 --> 00:06:32,380
So we are going to get the same results as this one.

112
00:06:32,390 --> 00:06:36,710
And if I say it, we get exactly the same result in is an object.

113
00:06:36,710 --> 00:06:40,190
We have an ask method and we have the constructor workshop.

114
00:06:41,120 --> 00:06:44,270
And why do we get the same thing for JS classes?

115
00:06:44,270 --> 00:06:47,800
Because when this Jayce class, it goes wonderful up.

116
00:06:47,840 --> 00:06:48,560
What do we get?

117
00:06:48,800 --> 00:06:50,390
We get the Aske method.

118
00:06:50,390 --> 00:06:52,130
That's why both of them are equal.

119
00:06:53,170 --> 00:06:59,170
All right, and now there is actually another property on the object function that is going to give

120
00:06:59,170 --> 00:07:01,440
us the prototype of whatever we pass.

121
00:07:01,870 --> 00:07:09,550
So if I save it, we can see that the prototype of the jazz class is actually the same function, the

122
00:07:09,550 --> 00:07:11,040
same thing that we have done here.

123
00:07:11,380 --> 00:07:16,350
So Prototype and Dundar Proteau are actually the same thing.

124
00:07:16,720 --> 00:07:21,100
And if I were to do this, we are going to get through once more.

125
00:07:21,970 --> 00:07:22,260
All right.

126
00:07:22,480 --> 00:07:25,290
So I just wanted to go over this Proteau as well.

127
00:07:25,750 --> 00:07:26,800
You have the link.

128
00:07:26,800 --> 00:07:32,070
You can go ahead and read more about it, even though it is deprecated, but it is still used in JavaScript.

129
00:07:32,080 --> 00:07:33,270
You can see it right here.

130
00:07:33,790 --> 00:07:36,430
It is going to give us the prototype.

131
00:07:36,700 --> 00:07:43,360
If you have seen it before and you don't know why is it written like this weird thing that is this is

132
00:07:43,450 --> 00:07:47,620
Proteau underscore, underscore, Proteau underscore, underscore.

133
00:07:47,770 --> 00:07:49,090
What is it now?

134
00:07:49,090 --> 00:07:49,840
You know what it is?

135
00:07:49,840 --> 00:07:50,410
It is.

136
00:07:50,410 --> 00:07:56,890
It is actually the prototype of whatever it is that we are going to pass inside of it.

137
00:07:57,490 --> 00:07:57,790
Right.

138
00:07:57,940 --> 00:08:02,740
And the prototype is actually referring to the main JavaScript object.

139
00:08:03,040 --> 00:08:05,200
That's why we are going to get an object in here.

140
00:08:05,590 --> 00:08:05,950
All right.

141
00:08:06,160 --> 00:08:07,360
That's it for this lecture.

142
00:08:07,390 --> 00:08:08,890
See you guys in the next one.

