WEBVTT
1
00:00:01.950 --> 00:00:02.910
Hi, everyone.

2
00:00:02.940 --> 00:00:06.660
In this lecture, we are going to talk about the prototype chain.

3
00:00:08.090 --> 00:00:17.360
All right, so what is the prototype, can I have made a relatively bad drawing in here, but this is

4
00:00:17.360 --> 00:00:18.630
going to prove my point.

5
00:00:18.680 --> 00:00:26.690
We have a code snippet in this window and we have like a diagram that is going to show us how this code

6
00:00:26.690 --> 00:00:28.490
is actually implemented.

7
00:00:28.850 --> 00:00:34.300
OK, and it is going to also show us the prototypical chain or the prototype chain.

8
00:00:34.670 --> 00:00:34.920
Right.

9
00:00:35.120 --> 00:00:40.760
So what I'm going to do is it even says here the prototype chain I've written there, the prototype

10
00:00:40.760 --> 00:00:41.190
chain.

11
00:00:41.210 --> 00:00:41.600
All right.

12
00:00:41.870 --> 00:00:46.960
So I'm just going to go ahead and I'm going to zoom in and I hope it is visible for you guys now.

13
00:00:48.260 --> 00:00:56.780
So before diving into this code and giving you the diagram for that code, we need to know and we need

14
00:00:56.780 --> 00:01:01.730
to understand what happens on the line zero environment.

15
00:01:02.630 --> 00:01:02.930
All right.

16
00:01:03.080 --> 00:01:11.090
So we have a function, a very critical function, which is called object in JavaScript.

17
00:01:11.420 --> 00:01:14.420
Now it has a capital O object.

18
00:01:14.750 --> 00:01:15.110
Right.

19
00:01:15.320 --> 00:01:23.390
And it has some methods on it, like object keys, object that values object entries.

20
00:01:23.630 --> 00:01:28.040
We have talked about them in our Advanced Data Structures chapter.

21
00:01:28.400 --> 00:01:30.350
That is actually a function.

22
00:01:30.350 --> 00:01:31.430
It is not an object.

23
00:01:31.430 --> 00:01:35.460
It has methods on it, but it's actually a function.

24
00:01:35.480 --> 00:01:35.780
All right.

25
00:01:36.170 --> 00:01:37.990
And here is the link for you.

26
00:01:38.000 --> 00:01:39.720
This is the link to MDN.

27
00:01:40.520 --> 00:01:40.880
All right.

28
00:01:41.060 --> 00:01:43.310
So if you come here, you can read all about it.

29
00:01:43.310 --> 00:01:47.180
What it what it is, what it has on it, how can it how it can be used.

30
00:01:47.600 --> 00:01:47.940
All right.

31
00:01:48.080 --> 00:01:51.830
So this is an object function, right.

32
00:01:51.830 --> 00:01:54.690
And as as you can see here, this is actually a function.

33
00:01:55.310 --> 00:01:55.630
All right.

34
00:01:55.730 --> 00:02:05.000
And this object function is actually one of the ways of one of the ways that we can create objects in

35
00:02:05.000 --> 00:02:05.780
JavaScript.

36
00:02:06.690 --> 00:02:14.130
All right, so this is an object, an object function, and this is so before going forward, I need

37
00:02:14.130 --> 00:02:18.660
to tell you that whenever you see circles, those are functions.

38
00:02:18.670 --> 00:02:24.330
And when you see squares like this, even though this is not a square, this is a rectangle.

39
00:02:24.330 --> 00:02:25.320
But you know what I mean.

40
00:02:25.620 --> 00:02:28.350
When you see squares, they are objects.

41
00:02:28.350 --> 00:02:30.680
When you see circles, they are functions.

42
00:02:31.290 --> 00:02:36.780
So we have this very, very important function in JavaScript, which is called object.

43
00:02:37.320 --> 00:02:37.650
Right.

44
00:02:37.770 --> 00:02:43.020
And we have a very, very critical object in JavaScript as well.

45
00:02:43.470 --> 00:02:49.280
In fact, it is so important in JavaScript that we actually don't have a name for it.

46
00:02:49.470 --> 00:02:51.750
So this is an unnamed object.

47
00:02:51.780 --> 00:02:52.840
This is not a function.

48
00:02:52.860 --> 00:02:53.910
This is an object.

49
00:02:55.110 --> 00:03:01.440
All of the non primitive data types, they descend from this MANGES object.

50
00:03:02.100 --> 00:03:04.680
And you do you know how we named this?

51
00:03:04.680 --> 00:03:08.910
We name it by the with the property that points at it.

52
00:03:09.540 --> 00:03:16.680
So from this object function, there is a property that is pointing at this main JavaScript object and

53
00:03:16.680 --> 00:03:19.110
that property is called Prototyp.

54
00:03:19.730 --> 00:03:20.070
Right.

55
00:03:20.230 --> 00:03:22.560
It is the same word that we have here.

56
00:03:22.830 --> 00:03:23.120
Right.

57
00:03:23.340 --> 00:03:24.920
And now you're getting OK.

58
00:03:25.110 --> 00:03:27.920
What is the prototype chain water prototypes.

59
00:03:28.140 --> 00:03:34.800
Why do we need to know and how by the end of this chapter you will understand, OK, how object oriented

60
00:03:34.800 --> 00:03:40.170
programming works and how you can create instances of classes.

61
00:03:40.670 --> 00:03:41.020
Right.

62
00:03:41.310 --> 00:03:49.200
So how do we name this main JavaScript object is we name it with the property that is pointing at it.

63
00:03:49.620 --> 00:03:52.830
The property that is pointing at it is called prototype.

64
00:03:53.250 --> 00:03:53.600
All right.

65
00:03:53.610 --> 00:03:58.290
I could go ahead and zoom, zoom in a bit more like here.

66
00:03:58.500 --> 00:03:58.870
All right.

67
00:03:59.010 --> 00:04:00.230
So I think this is good.

68
00:04:00.690 --> 00:04:05.360
So the prototype property is the property that is pointing at this object.

69
00:04:05.640 --> 00:04:13.590
So whenever we say something that prototype, what we actually mean is this main JavaScript object,

70
00:04:13.740 --> 00:04:20.399
because something that prototype is the name of this object, whatever that thing is, in this case,

71
00:04:20.399 --> 00:04:21.209
it is workshop.

72
00:04:21.209 --> 00:04:22.950
We are going to get to the workshop later.

73
00:04:23.940 --> 00:04:24.890
We are first.

74
00:04:24.900 --> 00:04:29.750
We are in the line zero environment and then we are going to go into code execution environment.

75
00:04:30.390 --> 00:04:30.650
Right.

76
00:04:30.660 --> 00:04:31.890
But first we are here.

77
00:04:32.340 --> 00:04:39.960
Now there is another property that is pointing from this main JavaScript object back to this object

78
00:04:39.960 --> 00:04:40.530
function.

79
00:04:41.190 --> 00:04:47.520
And that property is called a constructor right now.

80
00:04:47.760 --> 00:04:49.320
This is actually how it works.

81
00:04:49.330 --> 00:04:51.810
So we have I'm just going to go over this one more time.

82
00:04:52.050 --> 00:05:00.780
So we have an object function and it has a property prototype that is pointing at the main JavaScript

83
00:05:00.780 --> 00:05:01.380
object.

84
00:05:01.950 --> 00:05:10.530
And this this object is so important that we don't have a name for it and we name it based on the property

85
00:05:10.530 --> 00:05:13.800
that is pointing on it, pointing sorry, pointing at it.

86
00:05:14.550 --> 00:05:15.620
And that property is.

87
00:05:17.130 --> 00:05:25.350
So if I were to say workshop to type, what I actually mean is this workshop is our function and that

88
00:05:25.350 --> 00:05:27.330
prototype is this object.

89
00:05:27.340 --> 00:05:33.180
So we are actually whenever you say workshop that prototype, we are talking about the main JS object

90
00:05:33.180 --> 00:05:34.770
because that is the name of this.

91
00:05:35.100 --> 00:05:37.610
The name comes from whatever points on it.

92
00:05:38.340 --> 00:05:38.540
Right.

93
00:05:38.790 --> 00:05:43.080
So this is what happens in the line zero environment.

94
00:05:43.260 --> 00:05:48.060
And now what we are going to do is we are going to come to the code execution environment.

95
00:05:48.060 --> 00:05:50.040
I'm just going to say, how can I zoom out?

96
00:05:52.250 --> 00:05:53.940
20 percent, very small.

97
00:05:54.620 --> 00:05:59.600
So what now what I'm going to do is we are going to come down here and we are going to talk about the

98
00:05:59.600 --> 00:06:01.760
code execution environment.

99
00:06:03.130 --> 00:06:09.850
All right, so first off, what I'm going to do is we are going to go from from this workshop object

100
00:06:09.850 --> 00:06:14.270
and we are going to go down and I'm going to explain to you how this diagram actually works.

101
00:06:14.710 --> 00:06:18.240
So here we have a function, which is workshop.

102
00:06:18.250 --> 00:06:18.570
All right.

103
00:06:18.880 --> 00:06:25.540
So what I what I did was I just drew a circle and I just wrote workshop in it because this is a function.

104
00:06:26.080 --> 00:06:26.410
All right.

105
00:06:26.680 --> 00:06:33.970
And whenever you create this function, this object, which is the most important object in JavaScript,

106
00:06:34.600 --> 00:06:39.670
which is so important that we don't have a name for it is created automatically.

107
00:06:40.490 --> 00:06:40.840
All right.

108
00:06:41.050 --> 00:06:43.420
For now, just go ahead and ignore this ask.

109
00:06:43.450 --> 00:06:43.750
Right.

110
00:06:44.100 --> 00:06:52.780
And from this workshop started from this workshop function, there is a property pointing at this object.

111
00:06:53.260 --> 00:06:56.110
And that property is you guessed it right.

112
00:06:56.110 --> 00:06:57.210
It is prototype.

113
00:06:57.880 --> 00:07:06.250
And from this object, there is a property that is pointing back to this workshop and that is called

114
00:07:06.250 --> 00:07:07.150
constructor.

115
00:07:07.690 --> 00:07:15.310
And this constructor implies that the workshop function is a constructor of this object.

116
00:07:16.470 --> 00:07:23.610
All right, and there is also a hidden linkage now when you see double lines, it means that this linkage

117
00:07:23.610 --> 00:07:24.270
is hidden.

118
00:07:24.540 --> 00:07:27.090
But there is some there is a link there.

119
00:07:27.120 --> 00:07:27.470
Right.

120
00:07:27.780 --> 00:07:35.580
But there is a link between this object that was created by the workshop that was created when the workshop

121
00:07:35.580 --> 00:07:37.290
was instantiated.

122
00:07:37.890 --> 00:07:44.560
This workshop and this object has a link to the main JavaScript object.

123
00:07:45.690 --> 00:07:47.760
We are going to come back to this line later.

124
00:07:47.790 --> 00:07:51.690
So what I'm going to do now is we are going to move past this.

125
00:07:51.910 --> 00:07:52.410
All right.

126
00:07:52.410 --> 00:07:59.760
And we are going to go down this diagram to see what else we can find inside our code that can be represented

127
00:07:59.760 --> 00:08:00.960
inside the diagram.

128
00:08:02.100 --> 00:08:08.070
So now what I'm going to do is we are going to come to this line where we have the new keyword.

129
00:08:08.280 --> 00:08:10.090
We know what the new keyword is going to do.

130
00:08:10.110 --> 00:08:12.960
The new keyword is going to do four things.

131
00:08:12.960 --> 00:08:19.140
One, the new keyword is going to create a right, a brand new object.

132
00:08:19.530 --> 00:08:21.990
This is the brand new object that we have here.

133
00:08:22.170 --> 00:08:27.120
But before coming here, I just want to tell you what it why is this ask on this object?

134
00:08:27.390 --> 00:08:33.659
So we know that this main object of JavaScript, it doesn't have a name, we name it by the property

135
00:08:33.659 --> 00:08:34.970
that is pointing at it.

136
00:08:35.250 --> 00:08:37.260
What is the property that is pointing at it?

137
00:08:37.289 --> 00:08:38.370
This is prototype.

138
00:08:38.700 --> 00:08:45.300
Whenever you tack something on to prototype, this is going to be passed inside this object.

139
00:08:46.290 --> 00:08:46.580
All right.

140
00:08:46.770 --> 00:08:53.130
So it doesn't matter what that is without got a method, which in this case it is a method or B that

141
00:08:53.130 --> 00:08:54.860
like another property.

142
00:08:55.140 --> 00:09:00.390
So this in this case ask is a function which doesn't really matter if it is a function or a property.

143
00:09:00.630 --> 00:09:08.760
Whenever you say some function that prototype and you say dot anything that that anything is going to

144
00:09:08.760 --> 00:09:11.610
be added to this main JavaScript object.

145
00:09:12.210 --> 00:09:14.030
Right now, let's come back to this line.

146
00:09:14.070 --> 00:09:17.280
Whenever the new keyword is run for things happen.

147
00:09:17.940 --> 00:09:20.730
One, a brand new object is created.

148
00:09:20.740 --> 00:09:22.200
This is the brand new object.

149
00:09:22.200 --> 00:09:26.400
This object right here with the is it orange?

150
00:09:26.430 --> 00:09:28.560
Yeah, I think it's yellow.

151
00:09:28.560 --> 00:09:29.310
Dark yellow.

152
00:09:29.340 --> 00:09:31.260
I'm not I'm not really good with colors.

153
00:09:31.950 --> 00:09:32.330
All right.

154
00:09:32.340 --> 00:09:35.300
So this brand new object is created right here.

155
00:09:35.310 --> 00:09:36.510
That's the first thing.

156
00:09:36.930 --> 00:09:42.270
The second thing that the new keyword does is it links this object to another object.

157
00:09:42.270 --> 00:09:45.460
So it is going to link it to the main JavaScript object.

158
00:09:46.320 --> 00:09:56.250
The third thing that the new keyword is going to do is it is going to invoke the the function, which

159
00:09:56.250 --> 00:09:58.050
in this case is the workshop function.

160
00:09:58.330 --> 00:09:58.710
Oops.

161
00:09:59.280 --> 00:10:02.430
With the this keyword pointing at the object.

162
00:10:02.700 --> 00:10:09.150
So in this case, this this key word has a property teacher and that property teacher is going to be

163
00:10:09.150 --> 00:10:10.420
added to this object.

164
00:10:10.630 --> 00:10:13.500
Now you can see that here we have a property teacher.

165
00:10:13.710 --> 00:10:18.540
So this this key word that this key word in this case in line No.

166
00:10:18.540 --> 00:10:20.790
Two points to this object.

167
00:10:21.240 --> 00:10:27.870
And the fourth and final thing that the new keyword is going to do is whenever the function is called,

168
00:10:27.870 --> 00:10:32.490
if the function doesn't return an object, which in this case it doesn't.

169
00:10:33.530 --> 00:10:40.340
The new keyword assumes that you meant to return, that this keyword and this is the this keyword is

170
00:10:40.340 --> 00:10:45.080
pointing to this object, that's why the new keyword is going to return.

171
00:10:46.400 --> 00:10:52.680
So this object is then going to be called what it is going to be called JASE'S.

172
00:10:53.630 --> 00:10:59.340
So now that this part is clear, this other part of Jianguo should be clear as well.

173
00:10:59.540 --> 00:11:02.510
But what I'm going to do is I'm going to go again.

174
00:11:02.510 --> 00:11:04.280
I'm just going to explain it one more time.

175
00:11:04.520 --> 00:11:06.170
So it's really concrete.

176
00:11:06.530 --> 00:11:15.020
So unlike number 10 in here, we have a new keyword and the new keyword is going to do four things.

177
00:11:15.020 --> 00:11:18.080
One, it is going to create a brand new object.

178
00:11:18.080 --> 00:11:20.030
Hence we have a square here.

179
00:11:20.840 --> 00:11:23.080
Second thing, it is going to link it.

180
00:11:23.120 --> 00:11:24.530
This is a hidden linkage.

181
00:11:24.710 --> 00:11:27.020
It is not obvious to us, but it is there.

182
00:11:27.470 --> 00:11:29.900
It is going to link it to another object.

183
00:11:29.900 --> 00:11:32.720
In this case, it is going to be the main JSS object.

184
00:11:33.620 --> 00:11:42.620
All right, and then what invokes the function it it invokes the function with the this key word pointing

185
00:11:42.620 --> 00:11:44.820
at the newly created object.

186
00:11:45.290 --> 00:11:48.980
So what is what is the property that the this keyword has?

187
00:11:49.010 --> 00:11:50.320
The property is teacher.

188
00:11:50.600 --> 00:11:54.530
So the teacher property is going to be added to the brand new object.

189
00:11:55.040 --> 00:12:01.850
And fourth and final thing is when the new keyword is put in front of a function and when that function

190
00:12:01.850 --> 00:12:09.710
is run or is called or is invoked, if that function doesn't return an object, which in this case it

191
00:12:09.710 --> 00:12:16.130
doesn't, that this the new keyword is going to assume that you meant to return, that this key word.

192
00:12:16.610 --> 00:12:20.750
And what is the this keyword pointing out that this key word is pointing at this object.

193
00:12:21.050 --> 00:12:26.530
So the new keyword is going to return this object, which is called Jianguo.

194
00:12:27.170 --> 00:12:27.520
All right.

195
00:12:27.770 --> 00:12:30.140
So so far we know all this.

196
00:12:30.990 --> 00:12:31.460
All right.

197
00:12:31.760 --> 00:12:34.700
And what we are going to do next is.

198
00:12:36.010 --> 00:12:43.420
Come to line number 12 and what do we want to do here is we want to grab this juice object and we want

199
00:12:43.420 --> 00:12:52.780
to and we want to invoke this function on, OK, now, if we come to our diagram, can we see do we

200
00:12:52.780 --> 00:12:56.780
have any aske function on this JS object?

201
00:12:57.100 --> 00:12:58.210
No, we don't have it.

202
00:12:59.470 --> 00:13:08.230
So how it is that we can invoke this aske method on this Java Geass object and this G.S. object doesn't

203
00:13:08.230 --> 00:13:12.210
have the Aske method or the Aske function on it.

204
00:13:12.520 --> 00:13:23.860
So because of this internal hidden linkage, which is also called the prototype chain, what we have

205
00:13:23.860 --> 00:13:27.820
is what the behavior or the default behavior is.

206
00:13:28.090 --> 00:13:36.670
Whenever we cannot find a method or a property on an object, we go one level up, we go to the next

207
00:13:36.670 --> 00:13:40.990
object in the chain and what is the next object in the chain?

208
00:13:41.050 --> 00:13:42.450
This is the object in the chain.

209
00:13:42.670 --> 00:13:46.630
And we ask that object, do you have an ask method on you?

210
00:13:46.840 --> 00:13:53.680
And this object is going to say yes and we are going to invoke that function and this aske function

211
00:13:53.680 --> 00:13:54.630
is going to be invoked.

212
00:13:54.940 --> 00:13:59.320
Now, this aske function, it also has a this key word on it.

213
00:14:00.550 --> 00:14:05.590
What do you think the this keyword is going to be pointing at in this case?

214
00:14:08.080 --> 00:14:15.820
OK, I'm sure you got the answer correct, but for me to be able to tell you, we have to go step by

215
00:14:15.820 --> 00:14:16.210
step.

216
00:14:16.570 --> 00:14:22.000
So whenever we want to find out whether this keyword is pointing out, we need to go to the side, whereas

217
00:14:22.000 --> 00:14:24.610
the car side inside is line number 12.

218
00:14:25.090 --> 00:14:32.330
OK, we found the Aske method right here, but the car side is this JSS object, right?

219
00:14:32.590 --> 00:14:40.240
So whenever we call that function on the Jayce object, what is the this keyword is going to be pointing

220
00:14:40.240 --> 00:14:46.720
out that this keyword is going to be pointing at at this object, the object that is called G.S..

221
00:14:47.920 --> 00:14:48.940
What is Disvalue?

222
00:14:48.940 --> 00:14:49.990
That's irrelevant.

223
00:14:50.020 --> 00:14:55.240
But in case you're wondering, it's going to be the steady and in the case of Jianguo object, it is

224
00:14:55.240 --> 00:14:56.370
going to be this, John.

225
00:14:56.650 --> 00:15:02.350
So I'm going to go I'm going to explain this one more time for Jianguo, and I'm sure you will understand

226
00:15:02.350 --> 00:15:02.490
it.

227
00:15:03.010 --> 00:15:07.840
So we have an internal hidden linkage, which is called the prototype chain.

228
00:15:08.410 --> 00:15:15.160
Why we call it the prototype chain and why is it important is because whenever we call a function or

229
00:15:15.160 --> 00:15:21.520
a method on an object and that object doesn't have that function in this case, the Jango object doesn't

230
00:15:21.520 --> 00:15:23.110
have an ASC function on it.

231
00:15:23.410 --> 00:15:31.450
When we call it on this function and when we cannot find it, we go one level up the chain, the prototype

232
00:15:31.450 --> 00:15:31.730
chain.

233
00:15:31.750 --> 00:15:39.570
So this to our prototype change and we go to the next object in Chinta, to the top object in chain.

234
00:15:39.760 --> 00:15:41.800
And what is the next object enchained?

235
00:15:41.800 --> 00:15:47.020
That is the this is the unnamed or the workshop, that prototype object.

236
00:15:47.560 --> 00:15:47.920
Right.

237
00:15:48.220 --> 00:15:51.850
And we ask this object, do you have an ASC method on you?

238
00:15:52.210 --> 00:15:57.100
And the Aske object is going to say yes and we are going to invoke it.

239
00:15:57.370 --> 00:16:04.300
I mean, this Jianguo object is going to invoke it and within what when it invokes it, what is the

240
00:16:04.310 --> 00:16:10.780
this keyword is going to point it for us to be able to identify what the this keyword is going to be

241
00:16:10.780 --> 00:16:11.470
pointing out.

242
00:16:11.470 --> 00:16:13.120
We need to go to the car site.

243
00:16:13.360 --> 00:16:16.900
Where is the car side considers line number 13 in my case.

244
00:16:17.650 --> 00:16:18.130
All right.

245
00:16:18.670 --> 00:16:25.360
And when we go to the car side, we can see that that this keyword is going to be pointing at this object

246
00:16:26.500 --> 00:16:31.390
because the ASC function was called on the Jianguo object.

247
00:16:31.390 --> 00:16:33.220
We know that Jianguo is an object.

248
00:16:33.400 --> 00:16:37.780
We can see that right here, this visual representation, it is an object.

249
00:16:38.290 --> 00:16:45.220
And when it invokes the aske function and it goes wonderful up to the prototype chain, it invokes the

250
00:16:45.220 --> 00:16:51.400
aske function that this keyword of the aske function is going to be pointing this Jianguo object.

251
00:16:51.970 --> 00:16:52.390
Right.

252
00:16:52.810 --> 00:16:54.760
And what is the value in this case?

253
00:16:54.760 --> 00:16:56.430
It is going to be John so.

254
00:16:56.620 --> 00:17:01.960
Well you know what, I'm just going to go ahead and change this to description just just that.

255
00:17:02.220 --> 00:17:02.620
All right.

256
00:17:02.890 --> 00:17:09.819
So this is how all these work and if I were to just go ahead and save this code and come in here, we

257
00:17:09.819 --> 00:17:12.250
can see that it's a steady is great teacher.

258
00:17:12.460 --> 00:17:14.500
John is also a great teacher.

259
00:17:17.609 --> 00:17:19.770
All right, so we are done here.

260
00:17:19.859 --> 00:17:26.550
All right, but at the end, what I want to say is that this is actually a fantastic system because

261
00:17:26.550 --> 00:17:28.590
we have one method, OK?

262
00:17:28.680 --> 00:17:29.880
That is the Aske method.

263
00:17:30.030 --> 00:17:36.070
And we can call like potentially like 100 instances of this aske method.

264
00:17:36.300 --> 00:17:39.830
So the method can be called on the JS object.

265
00:17:40.020 --> 00:17:46.050
It can be called on the Django object, it can be called in like on many like it can can be called on

266
00:17:46.050 --> 00:17:51.450
like 10 or 15 or 100 other instances of this aske method.

267
00:17:51.720 --> 00:17:53.940
So this is a fantastic system.

268
00:17:54.300 --> 00:18:01.830
And I just want to say that whenever we want to find out what the this keyword is going to be pointing

269
00:18:01.830 --> 00:18:05.340
out, we need to go to the we need to go to the call site.

270
00:18:05.400 --> 00:18:05.750
All right.

271
00:18:06.120 --> 00:18:09.400
And it doesn't matter where you find the function.

272
00:18:09.420 --> 00:18:12.480
So in this case, we found the function of the prototype chain.

273
00:18:12.810 --> 00:18:14.580
But it doesn't matter where the function is.

274
00:18:14.580 --> 00:18:21.240
You should always go to the call site and you should see what that function is being called in and what

275
00:18:21.240 --> 00:18:23.970
is the context in which that function is being called.

276
00:18:24.330 --> 00:18:30.420
So in the case of the aske function is being called in the context of G.S. and in the case of Jianguo,

277
00:18:30.420 --> 00:18:34.140
the ASC function as is being called in the context of Django.

278
00:18:34.770 --> 00:18:34.950
Right.

279
00:18:35.130 --> 00:18:38.910
And also this link, this hidden link is also a prototype chain.

280
00:18:39.430 --> 00:18:39.750
Right.

281
00:18:39.960 --> 00:18:42.600
So that that is going to be it for this lecture.

282
00:18:42.630 --> 00:18:44.150
See you guys in the next one.

