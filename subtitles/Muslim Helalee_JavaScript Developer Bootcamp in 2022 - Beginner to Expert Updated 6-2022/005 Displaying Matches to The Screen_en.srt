1
00:00:01,890 --> 00:00:07,080
Hi, everyone, in this letter, we are going to display our matches to the screen.

2
00:00:08,530 --> 00:00:15,340
All right, so this is where we are working with here, and I'm just going to create a constant first

3
00:00:15,340 --> 00:00:22,840
here because I'm going to call this find matches function in here and I'm going to say, hmm, matches

4
00:00:24,640 --> 00:00:25,330
array.

5
00:00:25,590 --> 00:00:26,050
Right.

6
00:00:26,830 --> 00:00:35,530
And OK, what should I call this calling is really, really, really difficult and find I'm just going

7
00:00:35,530 --> 00:00:40,660
to call it find a right and let's call that function, find matches.

8
00:00:40,930 --> 00:00:42,850
So what are you going to be the arguments?

9
00:00:43,780 --> 00:00:46,150
The first argument is going to be our word to match.

10
00:00:46,150 --> 00:00:50,460
And then so the this array is going to be the same.

11
00:00:50,470 --> 00:00:52,080
So I'm just going to pass it right here.

12
00:00:52,690 --> 00:00:57,250
So the word to match is going to be a bit trickier to to do.

13
00:00:57,260 --> 00:01:02,380
So, first off, I'm going to do a Consolo, so you really understand what it is that we are working

14
00:01:02,380 --> 00:01:02,620
with.

15
00:01:02,890 --> 00:01:05,090
So here we have this keyword.

16
00:01:05,560 --> 00:01:11,340
So what is the this keyword is going to point out whenever I save this and I go back to the screen.

17
00:01:11,740 --> 00:01:18,100
So the this keyword, whenever we want to find what it points are, we need to go to where this has

18
00:01:18,100 --> 00:01:22,890
been called so that this keyword has been called inside the display matches function.

19
00:01:23,200 --> 00:01:24,880
Where is the function called for?

20
00:01:24,880 --> 00:01:29,470
This display matches the function call is right here or right here.

21
00:01:29,470 --> 00:01:30,420
Doesn't really matter.

22
00:01:30,820 --> 00:01:33,520
And what does this function has been called on?

23
00:01:33,700 --> 00:01:39,170
It's desertion, but so that this value is actually going to be search input that value.

24
00:01:39,730 --> 00:01:41,410
So if I come here.

25
00:01:42,430 --> 00:01:48,480
All right, so if I just go here and if I type new, you can see that we get and we get an EWR.

26
00:01:48,730 --> 00:01:52,360
So each time we type something, I'm just going to clear this.

27
00:01:52,660 --> 00:02:01,270
So if I type and we get NCW space Y or ARC, you get the point right.

28
00:02:01,480 --> 00:02:06,600
So this is going to show us how the user is going to be searching.

29
00:02:06,610 --> 00:02:06,970
Right.

30
00:02:07,330 --> 00:02:13,510
So when the user types and all these cities and states that have an inside their name, they're going

31
00:02:13,510 --> 00:02:18,700
to show when the user types the E in front of the name, then the search.

32
00:02:19,060 --> 00:02:26,310
Each time the user types something, the search result is going to get narrower and narrower and narrower.

33
00:02:26,590 --> 00:02:26,940
Right.

34
00:02:27,160 --> 00:02:29,710
And we know what the this value is going to refer to.

35
00:02:29,740 --> 00:02:34,930
So let's cut it from here and let's remove that.

36
00:02:35,290 --> 00:02:35,760
It's common.

37
00:02:35,770 --> 00:02:42,100
This one it so our first argument work to match is actually going to be this that valley.

38
00:02:42,670 --> 00:02:42,970
Right.

39
00:02:43,240 --> 00:02:49,330
And now let's go ahead and let's create a an element, OK?

40
00:02:49,420 --> 00:02:56,650
And this element is going to be the element that our suggestions you well, is going to is going to

41
00:02:56,650 --> 00:02:57,020
adopt.

42
00:02:57,020 --> 00:02:59,020
So I'm going to comment this one out as well.

43
00:02:59,470 --> 00:03:03,470
So our you our suggestions is going to be asking to adopt this element.

44
00:03:03,470 --> 00:03:09,460
So I'm just going to say match match element.

45
00:03:10,170 --> 00:03:10,680
All right.

46
00:03:10,690 --> 00:03:17,560
And let's whenever also inside this match element, we are going to grab our find.

47
00:03:18,070 --> 00:03:20,460
Oops, find her right.

48
00:03:21,010 --> 00:03:24,080
Because this is going to return to us an array.

49
00:03:24,370 --> 00:03:25,960
We can map through it.

50
00:03:27,470 --> 00:03:33,410
All right, so we are going to go ahead and map through and when we are mapping through it, what it

51
00:03:33,410 --> 00:03:35,900
is actually that we are looking for.

52
00:03:36,260 --> 00:03:36,580
All right.

53
00:03:36,950 --> 00:03:41,480
So we are looking for a state and a city.

54
00:03:41,690 --> 00:03:41,990
All right.

55
00:03:42,230 --> 00:03:44,660
So I'm just going to do a map and.

56
00:03:45,440 --> 00:03:53,990
All right, so I'm going to say place this time I'm going to say place and let's create oops, let's

57
00:03:53,990 --> 00:03:54,670
create this.

58
00:03:54,890 --> 00:03:59,690
So before actually creating that line that we have.

59
00:03:59,720 --> 00:04:07,130
Right, that elai that we are going to we are going to give it to the suggestions to adopt before creating

60
00:04:07,130 --> 00:04:10,120
that what it is actually that we are trying to do.

61
00:04:10,400 --> 00:04:15,620
So we are looking for a specific city or a specific state.

62
00:04:16,160 --> 00:04:16,480
Right.

63
00:04:17,570 --> 00:04:26,180
And when we get that specific city or specific state, we want to put the value of that inside a span.

64
00:04:26,240 --> 00:04:27,110
Why span?

65
00:04:27,290 --> 00:04:29,690
Because spans are in line elements.

66
00:04:30,100 --> 00:04:34,710
It means that they do not create new lines inside this HDMI.

67
00:04:34,730 --> 00:04:35,300
What page?

68
00:04:35,570 --> 00:04:44,630
It means actually that whenever you say new, you can see that the city and the state, they are on

69
00:04:44,630 --> 00:04:51,200
one line, if you do div device are block level elements and spans are inline level elements.

70
00:04:51,530 --> 00:04:53,270
We need inline level elements.

71
00:04:53,270 --> 00:04:58,400
You could do block, but you should have to, you could do def, but then you would have to change the

72
00:04:58,400 --> 00:05:00,980
display property, which is like extra headache.

73
00:05:01,430 --> 00:05:04,120
So we want to we want them to appear in one line.

74
00:05:04,190 --> 00:05:06,860
That's why we are going to use a Ispat.

75
00:05:07,580 --> 00:05:13,760
So one of the span's is going to grab the value of this our city.

76
00:05:14,030 --> 00:05:20,690
The other span is going to grab the value of our estate and then we are going to create an ally.

77
00:05:21,050 --> 00:05:25,850
And inside that ally, we are going to insert both of our Spens.

78
00:05:26,450 --> 00:05:29,390
That's basically what it is that we are trying to do.

79
00:05:31,490 --> 00:05:38,480
All right, so first off, let's create these variables, but before creating those, we need a way

80
00:05:38,720 --> 00:05:40,910
to be able to find that match.

81
00:05:41,210 --> 00:05:43,850
What is that way that we can find the match?

82
00:05:44,300 --> 00:05:44,660
Right.

83
00:05:44,900 --> 00:05:47,580
So we have already talked about it right here.

84
00:05:47,600 --> 00:05:50,380
So what I'm going to do is I'm going to do the same thing here.

85
00:05:50,780 --> 00:05:52,370
So we have our regex.

86
00:05:52,940 --> 00:06:00,530
This regex is going to find that that that value that the user has typed in and it is going to match

87
00:06:00,530 --> 00:06:00,800
it.

88
00:06:01,470 --> 00:06:05,740
OK, it is going to match it to what's inside that list that we have.

89
00:06:06,150 --> 00:06:06,470
Right.

90
00:06:06,560 --> 00:06:11,180
So, OK, I'm going to say New Reg XP.

91
00:06:12,710 --> 00:06:15,690
And we are going to pass in this dot value.

92
00:06:15,890 --> 00:06:22,010
We know what this dot value is, so this dot value from here is going to be passed here and from here.

93
00:06:22,010 --> 00:06:26,340
It is going to be passed to the word to match and this dot value.

94
00:06:26,360 --> 00:06:29,980
So the second one, the second argument is going to be our flaks.

95
00:06:30,380 --> 00:06:31,370
Where are the flock's?

96
00:06:31,370 --> 00:06:32,790
It's even written right here.

97
00:06:33,620 --> 00:06:33,970
All right.

98
00:06:34,250 --> 00:06:40,030
So the flags are going to be G and I global and insensitive flag, right?

99
00:06:40,130 --> 00:06:42,200
So now we have a regular expression.

100
00:06:42,200 --> 00:06:43,970
Let's create our aliments.

101
00:06:43,970 --> 00:06:52,400
So Consed City name, I'm going to call it city name and we are going to say place that city.

102
00:06:52,700 --> 00:06:55,820
So place that city is going to give us the city name.

103
00:06:55,970 --> 00:06:56,300
Right.

104
00:06:56,540 --> 00:06:58,670
And then we are going to replace that.

105
00:07:00,080 --> 00:07:01,920
We are going to call the replace method.

106
00:07:02,120 --> 00:07:03,480
What do we want to replace?

107
00:07:03,500 --> 00:07:05,880
We want to replace regular expression.

108
00:07:06,260 --> 00:07:06,830
What is this?

109
00:07:06,830 --> 00:07:08,750
Regular expression is going to return.

110
00:07:08,910 --> 00:07:10,280
It is going to return.

111
00:07:10,460 --> 00:07:15,700
The thing, the value that the user has typed, it is going to return that.

112
00:07:16,250 --> 00:07:18,410
What do we want to replace it with?

113
00:07:18,650 --> 00:07:20,060
Now, this is the cool part.

114
00:07:20,360 --> 00:07:22,720
We want to replace it with a span.

115
00:07:22,730 --> 00:07:24,650
So let's create that span.

116
00:07:25,370 --> 00:07:30,920
So span and span, what do we have inside the span?

117
00:07:31,160 --> 00:07:37,020
The span is going to have a class of very cool highlight there.

118
00:07:37,160 --> 00:07:39,290
This is where the highlight is coming from.

119
00:07:39,950 --> 00:07:49,520
And then the spine is going to grab the this value, this dot value, because this value is the value

120
00:07:49,520 --> 00:07:50,870
that the user has typed.

121
00:07:51,260 --> 00:07:54,350
We want to put it inside this span, this stored value.

122
00:07:54,350 --> 00:07:55,040
Very simple.

123
00:07:55,610 --> 00:07:55,900
Right.

124
00:07:56,000 --> 00:08:02,120
And now I'm going to do the same thing for our state name as well to just speed this process a little.

125
00:08:02,780 --> 00:08:03,120
Right.

126
00:08:03,170 --> 00:08:08,930
So we have instead of city name, we are going to have state name, state name.

127
00:08:09,650 --> 00:08:11,780
And the first one should be lowercase.

128
00:08:12,020 --> 00:08:19,340
So we are going to say place dot state that replace replaced replace the regular expression, just replace

129
00:08:19,340 --> 00:08:24,400
that regular expression with this pan and this pan has a class of highlight.

130
00:08:24,530 --> 00:08:26,510
And what is this man actually going to do.

131
00:08:26,810 --> 00:08:30,980
This, this, this you can see here this new which is which has been highlighted.

132
00:08:31,280 --> 00:08:32,630
It is actually a span.

133
00:08:32,630 --> 00:08:35,870
That's why there on the one one line, I can show you that.

134
00:08:35,880 --> 00:08:40,770
So if I come inside this aliments, this is the trick behind this.

135
00:08:41,780 --> 00:08:46,220
OK, so now if I can you can see that we have an ally and everything is inside that.

136
00:08:46,820 --> 00:08:48,690
But what do we have inside that ally?

137
00:08:48,710 --> 00:08:49,910
We have a span.

138
00:08:50,240 --> 00:08:52,210
What do we have inside that span?

139
00:08:52,220 --> 00:08:53,780
We have two more spans.

140
00:08:54,320 --> 00:09:00,470
So one span is going to be have a class of highlight for the new, which is the state, which is the

141
00:09:00,470 --> 00:09:00,920
city.

142
00:09:01,100 --> 00:09:03,400
And the other one is going to be new for the state.

143
00:09:03,860 --> 00:09:06,770
You can see these are the spans that we are creating.

144
00:09:07,220 --> 00:09:09,460
So this part is going to stay the same.

145
00:09:09,470 --> 00:09:13,970
This part is going to be replaced very, very, very, very simple.

146
00:09:14,540 --> 00:09:14,920
All right.

147
00:09:15,110 --> 00:09:21,200
So if I were to say Tulsa and now check inside this elai, check this out.

148
00:09:21,890 --> 00:09:24,780
We just have one span, and that is for Tulsa.

149
00:09:25,160 --> 00:09:31,240
So as many cities and states are being highlighted, those many spans we want to create.

150
00:09:31,820 --> 00:09:32,300
Right.

151
00:09:32,720 --> 00:09:35,220
So now we have created this one as well.

152
00:09:36,110 --> 00:09:38,460
Now, what do we want to do with this?

153
00:09:38,700 --> 00:09:43,580
Basically, we want to return a year from this return.

154
00:09:44,390 --> 00:09:48,410
Return what it is that we want return, return.

155
00:09:48,410 --> 00:09:50,060
Certainly not a an ally.

156
00:09:50,070 --> 00:09:51,790
So let's create that ally.

157
00:09:52,880 --> 00:09:54,680
So it's going to be Elai.

158
00:09:54,680 --> 00:10:00,680
And in here we are going to say, Ally, in case you're wondering, if you just click, you can see

159
00:10:00,680 --> 00:10:00,950
this.

160
00:10:01,160 --> 00:10:05,270
I'm just going to zoom in so you can really see you can see this yellow underline.

161
00:10:05,450 --> 00:10:08,510
It's because I have a an extension.

162
00:10:09,390 --> 00:10:18,900
I don't think I've shown you I think we talked about it in the first chapter, it is, let's see, highlight

163
00:10:18,900 --> 00:10:20,010
matching tack.

164
00:10:20,010 --> 00:10:21,810
You can just go ahead and stall this.

165
00:10:22,110 --> 00:10:29,340
And it is very useful in JavaScript because you, unlike HTML, you can see how it works in e-mail as

166
00:10:29,340 --> 00:10:29,580
well.

167
00:10:29,820 --> 00:10:35,160
But in e-mail, if you just click here, it is going to show you the ending taxe.

168
00:10:35,190 --> 00:10:40,140
The ending is here, but in JavaScript it doesn't say if you just click here, it can show you the ending

169
00:10:40,140 --> 00:10:41,190
tag word address.

170
00:10:41,850 --> 00:10:45,600
So this law is going to have a class of.

171
00:10:47,830 --> 00:10:51,610
I'm just going to call it name and what do we have inside this alley?

172
00:10:51,760 --> 00:10:53,530
This is the important part.

173
00:10:53,920 --> 00:10:59,090
First off, we are going to have our city name and then a comma.

174
00:10:59,200 --> 00:11:00,650
So what is the structure?

175
00:11:00,910 --> 00:11:03,880
We have our city name, then comma, then Oklahoma.

176
00:11:05,340 --> 00:11:15,120
Right, and then state name, this is where you can change the structure, you can change it every every

177
00:11:15,120 --> 00:11:17,970
which way you want, don't change it inside the span.

178
00:11:17,970 --> 00:11:19,680
The span has nothing to do with that.

179
00:11:19,890 --> 00:11:21,590
Just change it inside this ally.

180
00:11:22,210 --> 00:11:26,780
And finally, after we get that ally, where do we want to put it?

181
00:11:26,790 --> 00:11:30,060
Now, keep in mind this map one more thing.

182
00:11:30,060 --> 00:11:35,420
Very importantly, this map method, it actually returns an array.

183
00:11:35,700 --> 00:11:38,400
So we need to convert that array to a string.

184
00:11:38,400 --> 00:11:40,130
So we just say don't join.

185
00:11:41,010 --> 00:11:41,820
Join at what?

186
00:11:41,820 --> 00:11:44,420
At the at an empty string.

187
00:11:44,820 --> 00:11:47,460
And what do we want to do with this match element?

188
00:11:47,970 --> 00:11:49,230
We just grab our.

189
00:11:50,370 --> 00:11:51,990
Suggestions container.

190
00:11:52,590 --> 00:11:53,490
So where are you?

191
00:11:53,520 --> 00:11:56,290
So this is our suggestion's container.

192
00:11:56,310 --> 00:11:57,580
Let's copy that.

193
00:11:58,350 --> 00:12:06,660
Put it right here and we are going to say that inner turmoil is going onto the match element and save

194
00:12:06,660 --> 00:12:06,760
it.

195
00:12:06,780 --> 00:12:08,310
We don't have any errors here.

196
00:12:08,340 --> 00:12:11,360
No errors here and it's there.

197
00:12:11,460 --> 00:12:12,270
So let's see.

198
00:12:12,280 --> 00:12:16,260
Our new oops can see there.

199
00:12:16,260 --> 00:12:20,220
Find error is not defined at 28.

200
00:12:20,220 --> 00:12:24,540
So let's go to 28, find a red dot.

201
00:12:26,330 --> 00:12:30,550
Oh, you can see that I'm just going to zoom in for you, so it's really visible.

202
00:12:30,770 --> 00:12:35,030
You can see that this F is capital, this F is lowercase.

203
00:12:35,300 --> 00:12:39,710
You can see how sensitive identifiers are in JavaScript.

204
00:12:39,720 --> 00:12:41,970
You need to be really, really careful.

205
00:12:42,650 --> 00:12:49,520
Another way is if you pay really close attention, I'm going to zoom in even more and you can see that

206
00:12:49,730 --> 00:12:56,540
I hope you can, that this match element, because it has been called here, is highlighted.

207
00:12:56,540 --> 00:12:58,720
But this find area is not highlighted.

208
00:12:58,970 --> 00:13:01,760
It's a little bit faded out, as you would say.

209
00:13:02,000 --> 00:13:07,550
But if I change it to this, you can see that it just got highlighted like that.

210
00:13:09,280 --> 00:13:10,460
So there we are.

211
00:13:10,480 --> 00:13:12,910
I think this is the zoom level that we are at.

212
00:13:13,360 --> 00:13:19,540
So now if I save this and if I come here and if I say new, you can see that we get all the results

213
00:13:19,540 --> 00:13:20,440
for the Newquay.

214
00:13:20,830 --> 00:13:24,220
So I'm just going to say, Merryland, we get all this.

215
00:13:24,220 --> 00:13:28,480
If I say D.C., do we have D.C.?

216
00:13:29,230 --> 00:13:30,110
Washington?

217
00:13:30,520 --> 00:13:36,310
Yeah, we do have Washington, District of Columbia and let's say Ohio.

218
00:13:36,670 --> 00:13:37,750
We do get Ohio.

219
00:13:38,230 --> 00:13:42,190
Um, let's say California.

220
00:13:43,030 --> 00:13:44,250
Ah, Arizona.

221
00:13:44,260 --> 00:13:46,000
Yeah, I really like Arizona.

222
00:13:46,330 --> 00:13:56,700
So we have Phoenix, Taksin, Mesa, Chandler and Arizona.

223
00:13:56,890 --> 00:13:58,990
I didn't know it was in city name.

224
00:13:59,470 --> 00:14:01,540
I always thought it was a character name.

225
00:14:02,380 --> 00:14:06,180
OK, so what does our project comes to an end.

226
00:14:06,880 --> 00:14:14,710
I know it wasn't that API oriented, but it was a lot like regular expression oriented.

227
00:14:14,710 --> 00:14:23,200
And it's actually based on the this data that we get from here, because getting a data are getting

228
00:14:23,200 --> 00:14:30,250
some sort of data from and from an external API is usually the easy part.

229
00:14:30,250 --> 00:14:38,390
It's the making a sense of that data is is the part which is a bit trickier and a bit more difficult.

230
00:14:38,810 --> 00:14:39,060
Right.

231
00:14:39,430 --> 00:14:47,620
So so you saw how simple it was to give this data and to push it inside this array, but actually using

232
00:14:47,620 --> 00:14:50,200
it in a in a meaningful way.

233
00:14:50,440 --> 00:14:53,740
That was what made our process a little bit lengthy.

234
00:14:53,890 --> 00:14:58,990
I wouldn't say difficult, but critical, but very, very important.

235
00:14:59,650 --> 00:15:06,880
You not only you should be able to to grab data, to fetch data, to retrieve data, but you should

236
00:15:06,880 --> 00:15:09,970
be able to use that data in a meaningful way.

237
00:15:10,420 --> 00:15:14,970
And and the and that's the main reason for getting the data.

238
00:15:14,980 --> 00:15:17,190
If you don't want to use it, why do you want to fetch it?

239
00:15:17,830 --> 00:15:25,450
So so using it in a meaningful way is as important, I would say even more important than actually getting

240
00:15:25,450 --> 00:15:28,990
the data, because getting the data is the simple part.

241
00:15:29,290 --> 00:15:33,070
The the difficult part is actually making sense of that data.

242
00:15:33,610 --> 00:15:37,450
OK, this was a very, very, very small example right now.

243
00:15:37,450 --> 00:15:41,080
Think of Facebook, think of YouTube, think of Twitter.

244
00:15:41,470 --> 00:15:48,820
What is the logic behind all of their data when whenever you just click like on the like button, what

245
00:15:48,820 --> 00:15:50,350
happens in the background?

246
00:15:50,590 --> 00:15:57,460
You can see that an array of operations, they take place and they're not visible to the eye.

247
00:15:57,670 --> 00:16:05,170
But because you are developers, you will get to understand, OK, what actually happens when the page

248
00:16:05,170 --> 00:16:08,920
loads, when we get data, when when we want to load that data.

249
00:16:08,920 --> 00:16:15,460
For example, when you're working with the YouTube API and you want to, for example, update the title

250
00:16:15,460 --> 00:16:18,700
of your video based on the number of views that you have.

251
00:16:19,190 --> 00:16:19,600
Right.

252
00:16:20,170 --> 00:16:22,030
Some some YouTube words do that.

253
00:16:22,030 --> 00:16:26,740
And that's simple to do, but it is the API implementation of YouTube.

254
00:16:27,250 --> 00:16:27,640
Right.

255
00:16:27,640 --> 00:16:31,060
And it is making a sense of that that data.

256
00:16:31,990 --> 00:16:37,630
Is is what makes this entire process interesting and difficult at the same time.

257
00:16:37,930 --> 00:16:39,310
So that's it for this lecture.

258
00:16:39,340 --> 00:16:41,890
See you guys in the next chapter.

