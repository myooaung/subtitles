1
00:00:00,280 --> 00:00:03,640
OK so let's refresh what our master plan was here.

2
00:00:03,660 --> 00:00:09,690
The whole point of using faker was eventually we want to be able to insert 500 of these or we have an

3
00:00:09,720 --> 00:00:11,650
e-mail that's randomized.

4
00:00:11,820 --> 00:00:16,080
And we also want to have a date created at date that is randomized.

5
00:00:16,080 --> 00:00:17,530
So let's focus on that part.

6
00:00:17,910 --> 00:00:22,330
We saw just refresh your memory that we can do things like this.

7
00:00:22,410 --> 00:00:23,390
Let me get a comment.

8
00:00:23,400 --> 00:00:33,110
All of this into just run one line at the bottom which is cancel that log faker dot dot dot past and

9
00:00:33,120 --> 00:00:35,260
that just gives us data in the past.

10
00:00:35,280 --> 00:00:39,010
I think it's within a year and maybe two.

11
00:00:39,010 --> 00:00:41,940
And let's see what I'm screwing up here.

12
00:00:41,950 --> 00:00:50,070
That faker that date passed onto log and we'll go over to the correct terminal here and we'll run node.

13
00:00:50,190 --> 00:00:50,800
Yes.

14
00:00:51,960 --> 00:00:52,610
OK.

15
00:00:52,950 --> 00:00:54,020
Now we're getting a date.

16
00:00:54,060 --> 00:01:01,270
Now you may have noticed a problem here this date syntax which I'll put here just so we can take a look.

17
00:01:01,410 --> 00:01:03,010
It's not valid javascript as it is.

18
00:01:03,050 --> 00:01:07,060
It's complaining that this is not going to jive well with our database.

19
00:01:07,290 --> 00:01:14,100
Remember that our database I ask you is expecting something like this where we have the year just do

20
00:01:14,100 --> 00:01:14,200
it.

21
00:01:14,210 --> 00:01:19,880
Is your year year Dasch month month dash day day space minute.

22
00:01:19,900 --> 00:01:23,090
Everybody we have our hour minute minute second second.

23
00:01:23,920 --> 00:01:31,180
So sort of in the time part looks OK and we got all this stuff that we don't want the year though the

24
00:01:31,180 --> 00:01:33,930
month the day of the week.

25
00:01:34,150 --> 00:01:36,920
We don't want the month spelled out we just want the day.

26
00:01:36,970 --> 00:01:38,380
This is a problem.

27
00:01:38,770 --> 00:01:40,670
So to prove that it's problematic.

28
00:01:40,810 --> 00:01:45,380
Let's try something let's try taking this date right here.

29
00:01:45,550 --> 00:01:47,510
Monday April 24th 2017.

30
00:01:47,670 --> 00:01:51,820
Copy it over and let's insert it manually into my Eskew.

31
00:01:51,850 --> 00:01:52,990
Let's see what happens.

32
00:01:53,320 --> 00:02:01,330
So I'll do an insert into users who have e-mail and created at values.

33
00:02:01,960 --> 00:02:03,950
And we'll just pick a random e-mail.

34
00:02:04,060 --> 00:02:13,840
Let's do Dusty at gmail dot com comma and then we'll pass in this giant javascript date or the javascript

35
00:02:13,840 --> 00:02:17,180
style date string.

36
00:02:17,200 --> 00:02:19,630
What do you think will happen when we insert this.

37
00:02:19,630 --> 00:02:23,990
So I'm just going to paste it in and hit enter.

38
00:02:24,010 --> 00:02:25,170
All right one row affected.

39
00:02:25,210 --> 00:02:26,370
One warning.

40
00:02:26,380 --> 00:02:28,000
Well let's see what happened.

41
00:02:28,120 --> 00:02:31,360
Let's do a select star from users.

42
00:02:31,780 --> 00:02:42,250
Actually that's the like start from users where e-mail equals dusty at gmail dot com that created that

43
00:02:42,730 --> 00:02:45,450
is all screwed up it said to Tuesday year 0 0 0 0.

44
00:02:45,460 --> 00:02:48,230
It's a problem that's not going to work for us.

45
00:02:48,270 --> 00:02:48,900
It's wrong.

46
00:02:49,090 --> 00:02:49,740
Right.

47
00:02:50,020 --> 00:02:54,820
So that's proving to you all part of this is to show you that the javascript way of doing data that

48
00:02:54,820 --> 00:03:00,750
we get from faker is not compatible with my as well.

49
00:03:00,880 --> 00:03:03,160
So let's just see what happens.

50
00:03:03,430 --> 00:03:04,780
I guess I can keep this here.

51
00:03:05,030 --> 00:03:08,550
Let's see what happens if we go to our app Jay.

52
00:03:08,560 --> 00:03:09,610
Yes.

53
00:03:10,540 --> 00:03:17,950
And we try and insert a person with a fake or date what do we get an error message or what happens.

54
00:03:17,980 --> 00:03:23,240
So we'll do this make some space here and rather than just e-mail.

55
00:03:23,260 --> 00:03:29,790
We'll also do created at which is faker date past.

56
00:03:29,850 --> 00:03:35,500
So the same thing we did down here which generated this date but now we're doing it dynamically here

57
00:03:35,500 --> 00:03:43,730
with an e-mail and it created that date both dynamic we're going to insert person using the same syntax.

58
00:03:44,680 --> 00:03:46,020
And let's see what happens.

59
00:03:46,470 --> 00:03:47,050
OK.

60
00:03:47,320 --> 00:03:48,700
Hold our breath here.

61
00:03:48,910 --> 00:03:52,950
Node APTA genius.

62
00:03:53,000 --> 00:03:54,960
And what do you know we don't get an error.

63
00:03:55,010 --> 00:03:56,200
So what's going on.

64
00:03:56,210 --> 00:03:57,350
Did it work.

65
00:03:57,380 --> 00:03:58,390
Let's come over here.

66
00:03:58,580 --> 00:04:05,510
Unfortunately we're not able to do our you know select star in order by created it because our Creator

67
00:04:05,510 --> 00:04:06,710
that date is now very.

68
00:04:06,740 --> 00:04:10,880
So it's no longer that the last one added in has the most recent date.

69
00:04:10,940 --> 00:04:13,700
So we'll just do a select star from users.

70
00:04:14,780 --> 00:04:19,880
And what we'll look for in my case I happen to know the data that we're working with.

71
00:04:19,880 --> 00:04:22,420
This was the one that was just added.

72
00:04:22,630 --> 00:04:24,580
Thirty eight years of course will be different.

73
00:04:24,740 --> 00:04:31,850
But notice that the date time created that isn't 0 0 0 0 like we had for Dusty This was the one where

74
00:04:31,850 --> 00:04:36,740
we manually took this the same exact thing coming from javascript.

75
00:04:37,160 --> 00:04:38,970
But we did it ourselves and it didn't work.

76
00:04:38,990 --> 00:04:45,270
But then when we used person instead of variable and then we use connection query and we passed it in.

77
00:04:45,440 --> 00:04:46,650
It somehow worked.

78
00:04:46,650 --> 00:04:49,570
And basically it comes down to the magic of this library.

79
00:04:49,790 --> 00:04:55,250
And I'm showing this to you to illustrate another point which is there's a lot of work that goes into

80
00:04:55,490 --> 00:05:00,100
sewing the stitches between something like node and my as well.

81
00:05:00,230 --> 00:05:08,320
So if we go to the docs here if we do a search for I'll just do date time and I think it's down.

82
00:05:08,440 --> 00:05:08,720
OK.

83
00:05:08,720 --> 00:05:09,830
Here we go.

84
00:05:09,860 --> 00:05:15,650
If you look there's something right here that says date objects are converted to year year year year

85
00:05:15,650 --> 00:05:17,510
Dashon month month Desch day date.

86
00:05:17,510 --> 00:05:20,380
Basically the syntax we're looking for they're converted to that.

87
00:05:20,510 --> 00:05:28,610
So as part of this library it takes it upon itself to bridge my Escudo and notes it says all right if

88
00:05:28,610 --> 00:05:31,940
this is a javascript date which is what we're working with from faker.

89
00:05:32,090 --> 00:05:38,540
Well I know that the users are trying to insert it into my Escuela table that has no idea about javascript

90
00:05:38,540 --> 00:05:39,020
dates.

91
00:05:39,110 --> 00:05:41,700
So we're going to convert it before we send it.

92
00:05:41,780 --> 00:05:47,290
And then one other kind of interesting thing we can do is save this to a variable and we'll call it

93
00:05:47,360 --> 00:05:49,670
and results.

94
00:05:50,410 --> 00:06:00,840
And if I just do a canceled out log and result as well which again all new stuff I know it can be overwhelming.

95
00:06:00,860 --> 00:06:04,820
What this will do is show us that compiled sequel that is being sent over.

96
00:06:05,000 --> 00:06:10,010
So this is kind of before what person looks like and this will be an after.

97
00:06:10,100 --> 00:06:11,010
Let's take a look.

98
00:06:11,780 --> 00:06:12,920
Well if you go to node

99
00:06:15,970 --> 00:06:23,110
OK so you can see before we had created it looks like this Tuesday May it's the wrong format.

100
00:06:23,120 --> 00:06:30,410
That's javascript formant but some time before we actually sent this over it was converted to created

101
00:06:30,420 --> 00:06:34,500
that is equal to 20:16 dash 0 5 dash 24.

102
00:06:34,520 --> 00:06:37,750
And this is the correct my as well syntax.

103
00:06:38,270 --> 00:06:43,520
So this is kind of cool to be able to see the end result sequel that's being sent over.

104
00:06:43,640 --> 00:06:50,480
This is you know valid sequel that we could just copy this over and yeah it might look slightly different.

105
00:06:50,480 --> 00:06:58,070
These are a scaped which you do not have to do but if you notice this is sequel syntax and we could

106
00:06:58,070 --> 00:06:59,210
just paste that in.

107
00:06:59,600 --> 00:06:59,930
OK.

108
00:06:59,960 --> 00:07:03,400
So I'm going to get rid of that but I just want you to see that you could do that.

109
00:07:03,620 --> 00:07:08,540
And more importantly the whole point here was to show you that there's stuff happening behind the scenes

110
00:07:08,630 --> 00:07:13,710
which can be great and useful but it's also the stuff that you just don't know what's happening sometimes

111
00:07:13,820 --> 00:07:15,600
and you run into it you discover it.

112
00:07:15,800 --> 00:07:18,740
But it's the job of these libraries to connect the two.

113
00:07:18,770 --> 00:07:23,390
And there's a discrepancy in this case between how jobs could PENDELL States and how my school handles

114
00:07:23,390 --> 00:07:24,650
or expects of them.

115
00:07:24,650 --> 00:07:31,190
So behind the scenes this library that we're not writing we're not in charge of somebody is that library

116
00:07:31,190 --> 00:07:33,770
is patching them it's fixing it for us.

117
00:07:33,770 --> 00:07:34,210
OK.

118
00:07:34,460 --> 00:07:36,340
So we've inserted a single user.

119
00:07:36,350 --> 00:07:40,540
Now all we have left is to figure out how we insert 500 that's the next video.
