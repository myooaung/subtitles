WEBVTT
1
00:00:00.240 --> 00:00:01.020
All right.

2
00:00:01.020 --> 00:00:04.340
So our final example here as I mentioned it's a little different.

3
00:00:04.350 --> 00:00:07.940
We're not just going to be validating data before it's inserted.

4
00:00:08.130 --> 00:00:13.380
We're actually going to create new data based off of another action.

5
00:00:13.380 --> 00:00:15.170
So we're working with Instagram's still.

6
00:00:15.300 --> 00:00:22.170
But the idea is that we want to keep track of when somebody unfollowed somebody else right now when

7
00:00:22.170 --> 00:00:26.490
a follow is deleted when that entry is gone it just disappears.

8
00:00:26.490 --> 00:00:31.190
And we don't have a record of it which is typical that's how most databases work.

9
00:00:31.350 --> 00:00:36.120
But sometimes there's information that you would want to keep that you might want to store so you can

10
00:00:36.120 --> 00:00:39.200
refer back to it later because it could be meaningful.

11
00:00:39.200 --> 00:00:46.890
So in a site like Instagram if there's a pattern to people on following certain companies or other users

12
00:00:47.220 --> 00:00:51.870
and you can discern that pattern that's potentially really important to figure out you know why people

13
00:00:51.870 --> 00:00:56.540
are following or when these mass unfollow events happen.

14
00:00:56.610 --> 00:00:58.020
It's valuable information.

15
00:00:58.230 --> 00:01:04.320
So the idea is that rather than doing something before an insert like we've been doing here we're going

16
00:01:04.320 --> 00:01:07.210
to do something actually after a delete.

17
00:01:07.290 --> 00:01:13.440
So after a follows is deleted we're going to insert a new row into a separate table that doesn't exist

18
00:01:13.440 --> 00:01:14.010
yet.

19
00:01:14.010 --> 00:01:18.390
So we're kind of going to be transmitting it from one table to another.

20
00:01:18.390 --> 00:01:21.300
Now you could argue there are other ways of doing this.

21
00:01:21.450 --> 00:01:26.060
You could you know instead of creating a new entry and a table you could take that.

22
00:01:26.060 --> 00:01:33.870
The original follows table and have a status active word de-activated or following in unfollowed or

23
00:01:33.870 --> 00:01:38.520
something like that that you could toggle on and off their marriage to that there are merits to both

24
00:01:38.520 --> 00:01:39.000
sides.

25
00:01:39.030 --> 00:01:44.100
But because this is in the triggers section it's a great example and it's a really common application

26
00:01:44.460 --> 00:01:47.880
just logging information logging events that happen.

27
00:01:47.930 --> 00:01:50.870
It's probably the most common use for triggers.

28
00:01:51.270 --> 00:01:57.490
So hopping over here what we need to do first is actually define a unfollowed table.

29
00:01:57.600 --> 00:01:59.650
So we have our follows table.

30
00:01:59.910 --> 00:02:01.900
I'm just going to copy the entire thing.

31
00:02:04.550 --> 00:02:12.260
And change it to unfollow and we'll keep it as follower ID and follow we ID that's fine.

32
00:02:12.430 --> 00:02:14.950
Created that everything else can stay the same.

33
00:02:14.950 --> 00:02:18.320
Now we have basically a duplicate table just called unfollowed.

34
00:02:18.670 --> 00:02:19.950
And it will start off empty.

35
00:02:20.200 --> 00:02:26.770
But then let's say you know someone with idea 5 is following someone with idea of six and then they

36
00:02:26.770 --> 00:02:27.460
delete that.

37
00:02:27.460 --> 00:02:29.970
Or we do it because they've unfollowed them.

38
00:02:30.220 --> 00:02:37.390
We would then take that and insert it into the unfollowed table the same order follow ID and follow

39
00:02:37.390 --> 00:02:39.030
the ID or the same.

40
00:02:39.460 --> 00:02:45.590
But then we have a time created that for when that event happened when the unfollowed thing happened.

41
00:02:45.610 --> 00:02:47.240
So that's pretty much it.

42
00:02:47.260 --> 00:02:53.170
Now what we want to do is have it happen automatically whenever a follows is deleted.

43
00:02:53.170 --> 00:02:56.010
So first things first I'm going to rerun this file.

44
00:02:56.350 --> 00:03:01.900
I'm dropping the database creating it again using the database and then creating all these tables inserting

45
00:03:01.900 --> 00:03:02.660
all this data.

46
00:03:02.680 --> 00:03:07.260
You don't have to do that if you just want to follow along just run this code here.

47
00:03:07.690 --> 00:03:08.220
OK.

48
00:03:08.450 --> 00:03:11.580
Source IGY as well.

49
00:03:12.110 --> 00:03:12.830
Perfect.

50
00:03:12.870 --> 00:03:15.370
So you've got that new table.

51
00:03:15.370 --> 00:03:21.450
If we take a look unfollowed and it's empty Josepha trust me on that.

52
00:03:21.450 --> 00:03:28.040
So what we want to do now is actually create our new trigger so we could do it in the same file.

53
00:03:28.080 --> 00:03:32.010
I'm going to do it in a separate file just so it's easier for you to see if you're going through my

54
00:03:32.010 --> 00:03:32.700
code here.

55
00:03:32.790 --> 00:03:37.600
So we'll call this the unfollowed trigger.

56
00:03:40.790 --> 00:03:48.780
Perfect and I'll go ahead and copy the starter code again and paste it into.

57
00:03:49.200 --> 00:03:57.190
So the trigger name we could call it anything that's go with capture unfollow or something like that.

58
00:03:57.870 --> 00:04:04.650
And what we want to do is rather than doing it before something is deleted we can do it afterwards because

59
00:04:04.650 --> 00:04:10.340
maybe there's a problem potentially something wouldn't be deleted if struggling if a good example.

60
00:04:10.350 --> 00:04:15.100
But but there could be some situation where the delete doesn't actually go through.

61
00:04:15.210 --> 00:04:18.530
In which case we don't want to create an unfollowed.

62
00:04:18.630 --> 00:04:22.540
So we're going to do it after something is deleted.

63
00:04:23.280 --> 00:04:27.990
So after delete on the table name is follows.

64
00:04:28.500 --> 00:04:30.510
That's our follows table here.

65
00:04:30.810 --> 00:04:37.320
So when one of these is deleted immediately afterwards our code goes in here and all that we want to

66
00:04:37.320 --> 00:04:52.420
do is insert into the unfollowed table just like this entered into an follows then we'll have follower

67
00:04:52.770 --> 00:05:02.640
ID and follow the ID every go and then our values and the question is What are those values just like

68
00:05:02.640 --> 00:05:10.410
before where we had new follower ID and new doubt follow we ID corresponding to the new row that's going

69
00:05:10.410 --> 00:05:13.600
to be inserted when something has been deleted.

70
00:05:13.830 --> 00:05:25.410
We have access to old follower ID comma old that follow we Id just like that.

71
00:05:25.440 --> 00:05:30.420
So this works on its own but Im actually going to show you another syntax that I like for this situation

72
00:05:30.750 --> 00:05:37.260
which is using set so the set syntax is another way of inserting something actually it will just go

73
00:05:37.260 --> 00:05:39.990
to my solution to show you it looks like this.

74
00:05:40.200 --> 00:05:48.700
Insert into an follows and then we have set follower ID equals all that follower ID comma father we

75
00:05:48.740 --> 00:05:51.470
ID equals all that follow we ID.

76
00:05:51.570 --> 00:06:01.930
So it's really up to you what you prefer but I just wanted to show the syntax and Rigaud just like that.

77
00:06:01.960 --> 00:06:09.750
So essentially all you're doing is using an equal sign to assign them rather than values parentheses.

78
00:06:09.790 --> 00:06:11.830
You know that old syntax that we're used to.

79
00:06:11.830 --> 00:06:13.190
So I'm just going to mix it up here.

80
00:06:13.300 --> 00:06:16.400
But to be clear you absolutely can use the other examples.

81
00:06:16.400 --> 00:06:18.180
Well the typical answer.

82
00:06:18.340 --> 00:06:22.610
So we don't need an error message or anything here because this isn't a validation.

83
00:06:22.660 --> 00:06:24.450
We're not responding with something.

84
00:06:24.480 --> 00:06:26.420
We're not preventing something from happening.

85
00:06:26.470 --> 00:06:33.850
All that we're doing is connecting these two tables so that when something is deleted from follows something

86
00:06:33.850 --> 00:06:36.180
an analog is created and follows.

87
00:06:36.490 --> 00:06:42.880
Which as I said is a pretty common situation not follows an unfollowed necessarily but capturing a kind

88
00:06:42.880 --> 00:06:51.430
of meta data or capturing other information based off of sequel happenings if you will so events things

89
00:06:51.430 --> 00:06:56.770
changing being deleted updating that you're then capturing and logging somewhere else so that you can

90
00:06:56.770 --> 00:06:58.140
refer back to it.

91
00:06:58.180 --> 00:07:00.640
So you usually don't just do this willy nilly.

92
00:07:00.760 --> 00:07:03.730
Typically there's a reason you want to store that information.

93
00:07:03.730 --> 00:07:08.800
Otherwise it can kind of it can get bloated very quickly especially if you have a lot of triggers going

94
00:07:08.800 --> 00:07:09.230
on.

95
00:07:09.330 --> 00:07:14.050
I'm actually going to spend a couple of seconds at the end of this section with some advice about when

96
00:07:14.050 --> 00:07:17.380
to use triggers and why not to use them and how they can get out of hand.

97
00:07:17.500 --> 00:07:19.060
But for now this is perfect.

98
00:07:19.180 --> 00:07:20.360
So let's save it.

99
00:07:20.440 --> 00:07:22.770
Make sure we don't have any syntax issues.

100
00:07:23.470 --> 00:07:25.040
And let's see what happens.

101
00:07:25.480 --> 00:07:26.530
So Will do.

102
00:07:26.530 --> 00:07:27.170
Source

103
00:07:29.650 --> 00:07:38.510
unfollow trigger as well as the name of the file looks like it worked.

104
00:07:38.730 --> 00:07:46.740
So let's verify right now select star from unfollowed is nothing there.

105
00:07:47.250 --> 00:07:55.380
Let's do a select star from follows and that's limited to five if I can spell it correctly.

106
00:07:55.420 --> 00:07:58.980
Select OK.

107
00:07:59.160 --> 00:08:06.870
So what we're going to do is say that follower ID to unfollowed person or follow a person person with

108
00:08:06.870 --> 00:08:07.710
idea of one.

109
00:08:07.710 --> 00:08:10.170
So we're going to delete this right here.

110
00:08:10.170 --> 00:08:11.450
So let's do it now.

111
00:08:11.850 --> 00:08:22.760
Do a delete from follows where follower ID equals two.

112
00:08:22.890 --> 00:08:24.340
And we could just leave it at that.

113
00:08:24.370 --> 00:08:27.890
Now I would delete all of these that have followed follower ID.

114
00:08:28.090 --> 00:08:37.320
To do and follow the ID equals one that D There area.

115
00:08:38.160 --> 00:08:38.740
OK.

116
00:08:40.310 --> 00:08:42.820
So it should be gone if we selected.

117
00:08:42.890 --> 00:08:44.220
Now it's gone from there.

118
00:08:44.570 --> 00:08:48.420
And if we looked at unfollowed us there we go.

119
00:08:48.500 --> 00:08:52.380
We now have follower ID to follow the ID 1.

120
00:08:52.470 --> 00:08:54.560
So just to show you that one more time.

121
00:08:54.620 --> 00:08:57.770
Let's go ahead and delete all follows.

122
00:08:57.770 --> 00:08:59.530
Where follower ID is three.

123
00:08:59.570 --> 00:09:00.960
So that should be quite a few.

124
00:09:01.270 --> 00:09:03.140
Ninety nine.

125
00:09:03.300 --> 00:09:08.840
Now if I look at all unfollowed we have ninety nine new entries.

126
00:09:08.840 --> 00:09:10.280
So pretty cool.

127
00:09:10.340 --> 00:09:14.330
Very easy way to kind of transfer that data over into another form.

128
00:09:14.540 --> 00:09:18.560
And you're not always strictly duplicating data like this.

129
00:09:18.710 --> 00:09:21.210
Sometimes your summing data together.

130
00:09:21.260 --> 00:09:26.660
So when something is inserted or deleted maybe you're keeping a tally in another table somewhere.

131
00:09:26.660 --> 00:09:29.670
Maybe you're keeping a total if you have a shopping cart.

132
00:09:29.890 --> 00:09:37.700
You have a cart table and then you have you know your items or your products table and any time a product

133
00:09:37.700 --> 00:09:38.960
is entered into a card.

134
00:09:38.980 --> 00:09:43.460
And each time a new product is created you're going to update the total and you could do that using

135
00:09:43.460 --> 00:09:44.420
a trigger as well.

136
00:09:44.420 --> 00:09:50.420
So it's not just copying exact data like we're doing here from followers or followers and transmitting

137
00:09:50.420 --> 00:09:52.640
it identically into unfollowed.

138
00:09:52.730 --> 00:09:57.210
But that's a simple example that makes sense in the context of our Instagram data.

139
00:09:57.350 --> 00:10:00.290
So that wraps up kind of what I want to do with triggers.

140
00:10:00.290 --> 00:10:03.240
Hopefully you see some of the possibilities around them.

141
00:10:03.350 --> 00:10:08.990
The next video is going to be pretty quick just talking about how you can delete triggers.

142
00:10:09.050 --> 00:10:14.600
You can view your triggers kind of managing them and then we're also talking a little bit about kind

143
00:10:14.610 --> 00:10:16.930
of a warning around triggers.

144
00:10:17.000 --> 00:10:17.560
So see that.
