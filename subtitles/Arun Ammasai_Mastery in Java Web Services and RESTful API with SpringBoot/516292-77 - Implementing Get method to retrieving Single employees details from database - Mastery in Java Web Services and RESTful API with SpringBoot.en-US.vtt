WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.475
Hello everyone, Welcome back.

00:00:02.475 --> 00:00:05.010
So an application up and down and up and running.

00:00:05.010 --> 00:00:06.825
So let's go back to our controller.

00:00:06.825 --> 00:00:09.495
So this is the end point we are going to try now.

00:00:09.495 --> 00:00:13.905
So let's go back to our postman and let's pay the urine.

00:00:13.905 --> 00:00:18.015
So the moment I hit this particular view or what do we need to get?

00:00:18.015 --> 00:00:19.815
We will get all the employees,

00:00:19.815 --> 00:00:21.090
not only the employees,

00:00:21.090 --> 00:00:24.870
because employees are associated with some departments as well.

00:00:24.870 --> 00:00:30.120
Right. So it'll give the employee along with your department information as well.

00:00:30.120 --> 00:00:36.630
Let's hit C Now we've got all the employee information, employee ID 1,

00:00:36.630 --> 00:00:40.380
2, 3, and employer if it doesn't have any I mean,

00:00:40.380 --> 00:00:43.430
Employee 3, One department.

00:00:43.430 --> 00:00:47.810
So we have the information here and employ a default doesn't have any department,

00:00:47.810 --> 00:00:51.095
so we have the empty here.

00:00:51.095 --> 00:00:53.570
Similar way, Employee 2 has a multiple departments,

00:00:53.570 --> 00:00:56.165
so everything is displayed in the response.

00:00:56.165 --> 00:01:00.500
Right? If you don't want to see the aisle departments, you know what to do, right?

00:01:00.500 --> 00:01:02.795
You know, to use the JSON AIG, no.

00:01:02.795 --> 00:01:05.330
Okay, So what is the next thing which we need to do?

00:01:05.330 --> 00:01:08.030
We try to run on obligation, right?

00:01:08.030 --> 00:01:11.600
We tried only the, uh, get all employment dots.

00:01:11.600 --> 00:01:13.220
So the next thing what we need to do,

00:01:13.220 --> 00:01:17.540
we have to get employee base shown the employee ID.

00:01:17.540 --> 00:01:19.175
So this is the second method which you're going to try.

00:01:19.175 --> 00:01:24.500
Let's copy them at that from our own controller and put it in our next,

00:01:24.500 --> 00:01:26.285
I mean, our new controller.

00:01:26.285 --> 00:01:27.665
And here what we need to do,

00:01:27.665 --> 00:01:32.310
so interfere employee, I'm going to provide that JP before.

00:01:33.220 --> 00:01:37.325
And there are few things which we need to modify here.

00:01:37.325 --> 00:01:42.890
So we're going to pass it along because employee has the ideas along.

00:01:42.890 --> 00:01:44.930
So we're not going to use

00:01:44.930 --> 00:01:48.425
a service anymore because we're gonna use a employee repository.

00:01:48.425 --> 00:01:53.135
So let's copy the imply repository and it's pasted here.

00:01:53.135 --> 00:01:57.680
And there are multiple ways you can use good-bye id.

00:01:57.680 --> 00:01:59.705
So which we did an employee.

00:01:59.705 --> 00:02:06.035
But it's efficient if you are using another method,

00:02:06.035 --> 00:02:10.790
find by ID, which will give you an optional.

00:02:10.790 --> 00:02:14.315
Which means you can check once you got the response back,

00:02:14.315 --> 00:02:16.655
you can check whether we have our data in it.

00:02:16.655 --> 00:02:18.200
And then if you don't have a data,

00:02:18.200 --> 00:02:20.495
you can send out a response back.

00:02:20.495 --> 00:02:23.300
So since they already had an alpine to check here,

00:02:23.300 --> 00:02:26.510
you can either gopher get by ID,

00:02:26.510 --> 00:02:28.505
I'll find Bahrain thing is fine for now.

00:02:28.505 --> 00:02:30.530
I'm going to use the ID here,

00:02:30.530 --> 00:02:33.980
and this will return an optional of employee,

00:02:33.980 --> 00:02:36.425
so we need to use the get.

00:02:36.425 --> 00:02:37.745
Okay?

00:02:37.745 --> 00:02:44.480
So here I want to check if you're using a optional of employee here, it's not an issue.

00:02:44.480 --> 00:02:47.045
You can simply check a condition here.

00:02:47.045 --> 00:02:49.490
Employee dot E is present my thought.

00:02:49.490 --> 00:02:51.200
But since we have object directly,

00:02:51.200 --> 00:02:53.480
I'm just using the tab and I'll check.

00:02:53.480 --> 00:02:54.800
Okay, so you have the employees.

00:02:54.800 --> 00:02:58.490
Now what we're going to do, we will simply throw an exception.

00:02:58.490 --> 00:02:59.495
Right?

00:02:59.495 --> 00:03:02.030
So let's save it. The next thing what we need to do,

00:03:02.030 --> 00:03:03.230
Let's switch that out.

00:03:03.230 --> 00:03:09.060
Obligation on wartime because we need to apply the latest changes right?

00:03:09.880 --> 00:03:13.410
Applications getting starter.

00:03:14.770 --> 00:03:17.750
It's getting started on our application.

00:03:17.750 --> 00:03:19.010
It's up and running.

00:03:19.010 --> 00:03:20.710
So let's go back to imply control,

00:03:20.710 --> 00:03:24.350
the URL which you're going to hit JPA employees.

00:03:24.350 --> 00:03:26.495
And we need to provide the employee ID.

00:03:26.495 --> 00:03:27.905
Let's go back to Postman.

00:03:27.905 --> 00:03:30.170
And here we know we have multiple Let's

00:03:30.170 --> 00:03:33.080
try with the employee ID to which he has a multiple information.

00:03:33.080 --> 00:03:33.770
Right.

00:03:33.770 --> 00:03:38.210
So the endpoint I'm going to try sorry,

00:03:38.210 --> 00:03:45.335
JP slash employees, and I'm going to pass the input here as a path variable.

00:03:45.335 --> 00:03:47.795
So employee ID number 2.

00:03:47.795 --> 00:03:52.670
And let's try it again, send c, whatever.

00:03:52.670 --> 00:03:56.255
Now we got the name and all the departments.

00:03:56.255 --> 00:03:58.565
Not only that, we got the links as well

00:03:58.565 --> 00:04:01.910
and we know the reason why the links or Sinbad, right?

00:04:01.910 --> 00:04:07.255
It's because we have the entity Model enabled here.

00:04:07.255 --> 00:04:09.775
So just not only simply sending the response back,

00:04:09.775 --> 00:04:12.850
so you feel you are trying to fetch a single employee in

00:04:12.850 --> 00:04:15.910
just in case if you want to written all the employees,

00:04:15.910 --> 00:04:18.685
you can use this particular you are okay for now.

00:04:18.685 --> 00:04:21.265
We have localhost employees to,

00:04:21.265 --> 00:04:23.650
so these are the, you are, this is a URL.

00:04:23.650 --> 00:04:25.525
Forget all the employees.

00:04:25.525 --> 00:04:26.500
Got it.

00:04:26.500 --> 00:04:31.120
Okay, so let's go back to our ID.

00:04:31.120 --> 00:04:35.020
Okay, so we try and get all employees get symbolism as

00:04:35.020 --> 00:04:38.905
single employee in based on the employee ID.

00:04:38.905 --> 00:04:40.495
And then what are the next thing which we need to do?

00:04:40.495 --> 00:04:45.910
We need to perform some post method like how to store employee?

00:04:45.910 --> 00:04:46.570
Correct.

00:04:46.570 --> 00:04:50.150
Because the information which we received so far all coming from the database.

00:04:50.150 --> 00:04:52.565
Right. Okay. Let's go back and check it one more time.

00:04:52.565 --> 00:04:54.920
So what is a Daniel?

00:04:54.920 --> 00:04:59.810
So this information is coming from database.

00:04:59.810 --> 00:05:00.830
Let's go back to our database.

00:05:00.830 --> 00:05:01.700
I'll show you.

00:05:01.700 --> 00:05:05.045
So let's call it employee database and right leg.

00:05:05.045 --> 00:05:06.770
See, we have Danielle.

00:05:06.770 --> 00:05:09.320
So Danielle to employee ID is two.

00:05:09.320 --> 00:05:10.880
Okay. Let's check the department.

00:05:10.880 --> 00:05:14.600
So how many records available for Daniel Daniel employed is to rate.

00:05:14.600 --> 00:05:17.255
So we have two departments are associated to Daniel.

00:05:17.255 --> 00:05:20.660
That is the same response we got Indie postman asked,

00:05:20.660 --> 00:05:24.900
well, I guess in the next video we're going to perform some save operation.
