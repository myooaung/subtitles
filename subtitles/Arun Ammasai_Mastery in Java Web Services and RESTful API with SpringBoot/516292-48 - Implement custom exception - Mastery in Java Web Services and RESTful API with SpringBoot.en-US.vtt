WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.235
Hey everyone, welcome back.

00:00:02.235 --> 00:00:05.580
So we just handle the exception in a different way.

00:00:05.580 --> 00:00:07.410
So whenever the employee is not available,

00:00:07.410 --> 00:00:12.090
we just send a runtime exception and it throws a employee

00:00:12.090 --> 00:00:14.130
not one exception I need to satisfy entered

00:00:14.130 --> 00:00:17.805
internal cellular energy is not quite what we are expecting, right?

00:00:17.805 --> 00:00:20.670
But somewhat it is saying the employee is not formed.

00:00:20.670 --> 00:00:22.890
But we need to make things even much better.

00:00:22.890 --> 00:00:25.500
So we cannot just draw our antenna exception.

00:00:25.500 --> 00:00:28.160
We always go for the custom exception.

00:00:28.160 --> 00:00:29.255
If you're working on a project,

00:00:29.255 --> 00:00:33.935
you have to have a special classes to handle the exceptions, right?

00:00:33.935 --> 00:00:36.035
So now what we're gonna do,

00:00:36.035 --> 00:00:38.600
we're gonna create a warm exception class,

00:00:38.600 --> 00:00:42.095
for example, what I'm going to do, I'm going to create a class called here.

00:00:42.095 --> 00:00:44.420
Employee not found. Okay, so let me do

00:00:44.420 --> 00:00:50.150
an employee not found that the glass and I'm going to create now.

00:00:50.150 --> 00:00:54.770
So eventually the class will be not available because we need to create the class.

00:00:54.770 --> 00:00:56.015
So create the class.

00:00:56.015 --> 00:00:57.860
And instead of service package,

00:00:57.860 --> 00:01:01.010
I'm going to keep it in the exhibition pastiche.

00:01:01.010 --> 00:01:03.990
Exception handler.

00:01:04.690 --> 00:01:08.660
Okay, exception underscore handler is much better,

00:01:08.660 --> 00:01:10.715
so okay, and click OK.

00:01:10.715 --> 00:01:11.330
Ok.

00:01:11.330 --> 00:01:16.865
So now we've got the employee not phone and it's not going to extend throwable.

00:01:16.865 --> 00:01:19.340
Let's keep it as a runtime exception.

00:01:19.340 --> 00:01:25.115
And let me go over at the message here using the parameter here.

00:01:25.115 --> 00:01:28.265
So whenever the exception comes,

00:01:28.265 --> 00:01:29.300
you know what I'm simply going to do.

00:01:29.300 --> 00:01:33.770
I'm going to simply overwrite the superclass constructor,

00:01:33.770 --> 00:01:35.210
which is nothing but runtime exception.

00:01:35.210 --> 00:01:37.235
I'm going to pass the message,

00:01:37.235 --> 00:01:38.900
maybe I can give it some thing proper,

00:01:38.900 --> 00:01:40.460
something called a message.

00:01:40.460 --> 00:01:43.325
So S gene.

00:01:43.325 --> 00:01:44.615
So let's save it.

00:01:44.615 --> 00:01:48.770
Now let's go back to imply a controller here and now the error is gone.

00:01:48.770 --> 00:01:54.230
So now all we need to do is just in the project and will build and the postman.

00:01:54.230 --> 00:01:55.910
And then we'll see what is the exception.

00:01:55.910 --> 00:01:58.890
Now, let's get started again.

00:02:00.670 --> 00:02:04.085
So the application is getting started now.

00:02:04.085 --> 00:02:07.220
Okay, so we got our atomic or server up and running.

00:02:07.220 --> 00:02:10.265
So let's go back to our Tomcat. I'm in Postman.

00:02:10.265 --> 00:02:11.765
So now all we need to do,

00:02:11.765 --> 00:02:14.850
just try to hit the same request again.

00:02:15.040 --> 00:02:19.430
So you want to run now it is 500 internal server error,

00:02:19.430 --> 00:02:22.865
but still regard the imply not found exception.

00:02:22.865 --> 00:02:25.850
But this is not what we are expecting, right?

00:02:25.850 --> 00:02:29.120
So we have to have a proper example and we should not send

00:02:29.120 --> 00:02:33.905
a 500 error message because phi and it belongs to a server not found.

00:02:33.905 --> 00:02:35.270
If the user is not found,

00:02:35.270 --> 00:02:37.760
it's better we should send something called format for

00:02:37.760 --> 00:02:40.715
which is a user not found or something like a page not found.

00:02:40.715 --> 00:02:43.580
So we don't want to make a much changes.

00:02:43.580 --> 00:02:45.170
It's very simple things to fix it.

00:02:45.170 --> 00:02:48.755
So do you remember the employee not fun with the classes you greater.

00:02:48.755 --> 00:02:51.275
So whenever this class got executor,

00:02:51.275 --> 00:02:53.960
we know all we need to do just to annotate the class with

00:02:53.960 --> 00:02:57.455
the response extra option response status.

00:02:57.455 --> 00:03:02.210
So response status and

00:03:02.210 --> 00:03:05.870
the status will tell you what value you're going to pass either what is it,

00:03:05.870 --> 00:03:08.135
what type of error message you're going to send?

00:03:08.135 --> 00:03:10.025
It is going to be HTTP status.

00:03:10.025 --> 00:03:12.935
Let's put it at something like relevant message.

00:03:12.935 --> 00:03:14.735
It's not found.

00:03:14.735 --> 00:03:19.280
Okay, So HTTP status, just fine.

00:03:19.280 --> 00:03:22.250
So let's put not found.

00:03:22.250 --> 00:03:24.575
Okay, so this is our prompt error message.

00:03:24.575 --> 00:03:26.270
So now whenever the same time,

00:03:26.270 --> 00:03:28.789
whenever this particular exception rises,

00:03:28.789 --> 00:03:30.905
so instead of sending a 500 error,

00:03:30.905 --> 00:03:33.260
this control will tells the application,

00:03:33.260 --> 00:03:34.850
okay, I have the exception handled.

00:03:34.850 --> 00:03:36.380
So whenever this got executed,

00:03:36.380 --> 00:03:38.150
just throw a naught for next minute,

00:03:38.150 --> 00:03:40.235
she's a 404 error message.

00:03:40.235 --> 00:03:42.810
Let's rerun the program.

00:03:43.330 --> 00:03:46.950
And applications getting started now.

00:03:50.310 --> 00:03:52.690
Okay, so application is up and running.

00:03:52.690 --> 00:03:57.670
Let's go back to Postman and we'll just try to fit the same again.

00:03:57.670 --> 00:04:00.969
See what happened now, initially it was 500,

00:04:00.969 --> 00:04:01.990
which is a salary issue,

00:04:01.990 --> 00:04:04.945
but now we've got four not four error message.

00:04:04.945 --> 00:04:08.215
Correct. So this is the appropriate error message because

00:04:08.215 --> 00:04:11.605
I'm trying to search for some employee and he's not available.

00:04:11.605 --> 00:04:14.230
So we are sending employee not phone or four not four,

00:04:14.230 --> 00:04:15.955
that is a proper error message.

00:04:15.955 --> 00:04:19.360
But if you take a look at the response,

00:04:19.360 --> 00:04:23.140
we cannot sin these kind of responses do the clients.

00:04:23.140 --> 00:04:26.800
So we have to send a proper way of exception blocking.

00:04:26.800 --> 00:04:30.475
So we have to create our own exception classes.

00:04:30.475 --> 00:04:33.435
So whenever the experts and a expression rises,

00:04:33.435 --> 00:04:36.920
we have to send the exception in D in our own format.

00:04:36.920 --> 00:04:41.210
For example, we have to have an exception class which contains the exception message

00:04:41.210 --> 00:04:45.740
and locked race and some other adequate information.

00:04:45.740 --> 00:04:47.630
So whenever the explanations we will send,

00:04:47.630 --> 00:04:51.274
always so you'll send that format to the lines.

00:04:51.274 --> 00:04:52.325
Right?

00:04:52.325 --> 00:04:54.110
So to do that, what we're gonna do,

00:04:54.110 --> 00:04:56.390
we're gonna create our own exception class,

00:04:56.390 --> 00:04:58.070
having some own properties.

00:04:58.070 --> 00:05:00.875
And we'll develop top of it.

00:05:00.875 --> 00:05:03.840
We'll, we'll see that in the next video.
