WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:02.010
Hello everyone, welcome back.

00:00:02.010 --> 00:00:07.155
So we're trade load of new methods and new implementation like we tried GET method,

00:00:07.155 --> 00:00:08.220
we tried post method,

00:00:08.220 --> 00:00:10.785
and we tried delete method as well, not only that,

00:00:10.785 --> 00:00:14.250
we implemented the exception handling,

00:00:14.250 --> 00:00:17.670
so how we can handle specific exception or how you

00:00:17.670 --> 00:00:21.520
can handle the entire exception is happening all over or applications, right?

00:00:21.520 --> 00:00:26.300
So we have employee Global Exception Handler which contains two methods.

00:00:26.300 --> 00:00:29.750
One is handling all the exemption and another one is handling

00:00:29.750 --> 00:00:34.820
all the employee not found exception to this for a specific exception.

00:00:34.820 --> 00:00:36.755
So whenever you look at the class,

00:00:36.755 --> 00:00:39.065
it always worked with the response entity.

00:00:39.065 --> 00:00:41.570
What is the response entity in the first place, right?

00:00:41.570 --> 00:00:45.740
So this is your request body and response body.

00:00:45.740 --> 00:00:49.460
So if you want to intercept you are response and we

00:00:49.460 --> 00:00:53.480
have to make some changes to it and send back to the client or the user.

00:00:53.480 --> 00:00:56.960
So that is the job of the response entity.

00:00:56.960 --> 00:01:00.695
So that is where the all the exemption intensive new response entity,

00:01:00.695 --> 00:01:04.040
which means it's a new updated response. That's all.

00:01:04.040 --> 00:01:06.065
And not only that,

00:01:06.065 --> 00:01:09.620
we kind of modified the response as well,

00:01:09.620 --> 00:01:12.350
how to send your eye and naturally information to

00:01:12.350 --> 00:01:15.650
the user when you're trying to save some employee.

00:01:15.650 --> 00:01:17.255
But what is missing here?

00:01:17.255 --> 00:01:18.335
Just think about this.

00:01:18.335 --> 00:01:19.805
Let's go back to Postman.

00:01:19.805 --> 00:01:20.150
It.

00:01:20.150 --> 00:01:21.920
I'm, I'm just we have a name,

00:01:21.920 --> 00:01:23.150
an email here, right?

00:01:23.150 --> 00:01:26.345
So what if I remove the at symbol and it triggered a request,

00:01:26.345 --> 00:01:27.980
it will still work, right?

00:01:27.980 --> 00:01:31.130
Because we don't have any validation in place.

00:01:31.130 --> 00:01:34.460
So that is the reason we are going to introduce the validation,

00:01:34.460 --> 00:01:35.690
the validation which you're going to use.

00:01:35.690 --> 00:01:38.285
It's a Java x-dot validations.

00:01:38.285 --> 00:01:41.360
So let's go back to our application.

00:01:41.360 --> 00:01:45.635
And then before we start the implementation,

00:01:45.635 --> 00:01:48.770
you need to add the one mode dependency in newer

00:01:48.770 --> 00:01:53.735
home.html is just nothing but Spring Boot,

00:01:53.735 --> 00:01:57.080
we need to add this data validation so that there

00:01:57.080 --> 00:02:00.875
is a dependency for the validation purpose.

00:02:00.875 --> 00:02:03.290
Okay, So, but once you added the dependency,

00:02:03.290 --> 00:02:08.420
make sure you're building your application once and updating a Maven project once.

00:02:08.420 --> 00:02:11.000
And once it is done, we need to go to

00:02:11.000 --> 00:02:14.570
our employee dot Java because this is the user I'm in disease,

00:02:14.570 --> 00:02:18.155
the DDO which I'm using when we are trying to use the employee.

00:02:18.155 --> 00:02:20.615
And I have introduced at valued here.

00:02:20.615 --> 00:02:24.095
So the reason why I used at valid here,

00:02:24.095 --> 00:02:27.710
because this is a one is going to tell, that is spontaneity.

00:02:27.710 --> 00:02:29.675
I enabled the validation here.

00:02:29.675 --> 00:02:32.000
So before you get the request,

00:02:32.000 --> 00:02:36.290
just validate your request and then send the request to

00:02:36.290 --> 00:02:39.320
the inputs autumn methods because this employment

00:02:39.320 --> 00:02:42.560
that is going to pass as an input to save employer, right?

00:02:42.560 --> 00:02:45.050
So before we even go to this line number,

00:02:45.050 --> 00:02:49.609
it will validate your requests whether it meets all the validation criteria.

00:02:49.609 --> 00:02:52.490
But for now, we don't have any validation criteria.

00:02:52.490 --> 00:02:55.070
We need to create some.

00:02:55.070 --> 00:02:57.500
And this valid if you take a look at this valid,

00:02:57.500 --> 00:03:00.200
it's come center Zhao, excellent validation.

00:03:00.200 --> 00:03:01.910
And now we're going to employ D2.

00:03:01.910 --> 00:03:06.365
And here we're going to implement something explicitly for name and the email.

00:03:06.365 --> 00:03:07.895
Okay, So for example,

00:03:07.895 --> 00:03:11.810
I'm going to specify some size when I'm using a name.

00:03:11.810 --> 00:03:14.360
For example, you have to use a minimum characters.

00:03:14.360 --> 00:03:17.525
So I want a minimum three characters in my name.

00:03:17.525 --> 00:03:19.850
At the same time, some max.

00:03:19.850 --> 00:03:22.100
Maybe for now I'm just using a file.

00:03:22.100 --> 00:03:24.980
But what if the criteria is not matched in your input?

00:03:24.980 --> 00:03:26.870
We have to send that error message, right?

00:03:26.870 --> 00:03:31.070
So we need to send some error message saying like invalid input

00:03:31.070 --> 00:03:38.190
or invalid For name.

00:03:40.390 --> 00:03:43.010
This is going to be invalid.

00:03:43.010 --> 00:03:46.730
Okay? So we have an email as well, right?

00:03:46.730 --> 00:03:49.685
So let's enable the e-mail as well.

00:03:49.685 --> 00:03:53.075
So what happened the moment when you enable email?

00:03:53.075 --> 00:03:55.040
So whenever you pass the input for an email,

00:03:55.040 --> 00:03:57.905
it will check whether it contains the at symbol.

00:03:57.905 --> 00:03:58.970
You might think so bad.

00:03:58.970 --> 00:04:01.190
I can find all these different kind of

00:04:01.190 --> 00:04:03.530
validation set is simple thing is that you can go to

00:04:03.530 --> 00:04:09.395
you like you're a man went repository or Maven dependencies here, you can identify them.

00:04:09.395 --> 00:04:11.510
So if you're, if you're not able to identify,

00:04:11.510 --> 00:04:14.585
just use your Control or Command and click the constraint.

00:04:14.585 --> 00:04:17.070
It will take you to the entire package here.

00:04:17.070 --> 00:04:20.815
So here it is available Java x-dot validation.

00:04:20.815 --> 00:04:23.230
Under the constraint we have a set false,

00:04:23.230 --> 00:04:25.300
true, which is used for JUnit test cases.

00:04:25.300 --> 00:04:26.620
And we have a decimal max,

00:04:26.620 --> 00:04:28.885
the minimum, minimum decimal max-min,

00:04:28.885 --> 00:04:30.820
which we know we are using some decimals

00:04:30.820 --> 00:04:33.250
and you have to put some restriction. What is a minimum value?

00:04:33.250 --> 00:04:36.175
What is the maximum value and how many digits?

00:04:36.175 --> 00:04:39.580
And a male discipline which we used and a future, our future,

00:04:39.580 --> 00:04:42.235
that person and max value mean value which we already used,

00:04:42.235 --> 00:04:44.020
and negative and negative or 0.

00:04:44.020 --> 00:04:47.770
So 1 minus r naught minus minus r of 0.

00:04:47.770 --> 00:04:49.270
And a similar way, not black,

00:04:49.270 --> 00:04:50.740
not empty, NOT null, null.

00:04:50.740 --> 00:04:52.450
That a lot of things that you're going to use it.

00:04:52.450 --> 00:04:55.195
And we tried to use the size as well.

00:04:55.195 --> 00:04:59.249
So you can export all of them when you're using the validation.

00:04:59.249 --> 00:05:03.425
For now, what I did is I enable the validation for my name and my e-mail.

00:05:03.425 --> 00:05:07.175
So all we need to do is just restart your application and run.

00:05:07.175 --> 00:05:08.840
So what we have done so far,

00:05:08.840 --> 00:05:13.685
we enabled some validation in the employee D20 at the same time,

00:05:13.685 --> 00:05:16.505
that is the DDH passing as an input to save employee.

00:05:16.505 --> 00:05:19.250
So before I add the valid answer,

00:05:19.250 --> 00:05:22.745
because this request body needs to be validated, right?

00:05:22.745 --> 00:05:25.520
So let's read it out application and then we'll go to Postman.

00:05:25.520 --> 00:05:29.465
I will try to hit some store, some new employee.

00:05:29.465 --> 00:05:32.420
So the application is getting started now,

00:05:32.420 --> 00:05:35.550
my shot enough few seconds.

00:05:36.730 --> 00:05:41.570
Okay, so our Tomcat server successfully started on, it's up and running.

00:05:41.570 --> 00:05:43.085
Let's go back to our postman,

00:05:43.085 --> 00:05:48.275
and this is the input which we're using for save employee, right?

00:05:48.275 --> 00:05:53.255
So let's pass it something like a dummy user domain.

00:05:53.255 --> 00:05:57.665
So and I'm going to use that at gmail.com or gmail.com.

00:05:57.665 --> 00:05:58.910
I'm going to hit Enter.

00:05:58.910 --> 00:06:01.460
Now it's matching all the criteria for now we need to check

00:06:01.460 --> 00:06:03.920
whether it is storing your not two,

00:06:03.920 --> 00:06:07.940
not one, which means the employee inserted.

00:06:07.940 --> 00:06:10.085
And if you go to this, the header and you can see the information,

00:06:10.085 --> 00:06:12.200
what is the user ID for?

00:06:12.200 --> 00:06:14.555
So I'm going to hit the other API,

00:06:14.555 --> 00:06:16.895
which will give all the employee information here.

00:06:16.895 --> 00:06:19.475
You see some new employee information here.

00:06:19.475 --> 00:06:22.610
Okay, Let's try to provide some invalid inputs.

00:06:22.610 --> 00:06:23.885
So now what I'm gonna do,

00:06:23.885 --> 00:06:27.455
I'm going to modify because a name has a limit three to five.

00:06:27.455 --> 00:06:30.035
What happened if you prefer a DJ?

00:06:30.035 --> 00:06:33.140
Select me, pass some invalid because we have a 22 file,

00:06:33.140 --> 00:06:34.310
let me try it for a name, right?

00:06:34.310 --> 00:06:38.495
So what I'm gonna do, I'm gonna prove or something like just AJ.

00:06:38.495 --> 00:06:41.360
So let's hit St. see,

00:06:41.360 --> 00:06:42.860
we've got a bad request.

00:06:42.860 --> 00:06:44.240
What is body?

00:06:44.240 --> 00:06:47.390
I don't have anything though there is no error messages because we

00:06:47.390 --> 00:06:50.600
have to provide some proper response back to the client.

00:06:50.600 --> 00:06:53.210
But anyway, still it's not a required valid I mean,

00:06:53.210 --> 00:06:55.340
it's not a proper requests.

00:06:55.340 --> 00:06:58.370
Let's modify its back to dominate.

00:06:58.370 --> 00:07:00.650
So now the name is looks good.

00:07:00.650 --> 00:07:02.900
What happens if I remove the add symbol here?

00:07:02.900 --> 00:07:05.690
And I'm going to hit the send button again.

00:07:05.690 --> 00:07:08.300
Again, it failed with the 400 bad requests.

00:07:08.300 --> 00:07:13.025
Let me add the add symbol again and trigger it C.

00:07:13.025 --> 00:07:18.380
Now we just created the reason we have the validation in place and it was enabled now.

00:07:18.380 --> 00:07:23.870
But that is not quite enough because the user must know what happened and what is wrong.

00:07:23.870 --> 00:07:25.325
So they need to know.

00:07:25.325 --> 00:07:29.360
So why my recursive God failed and what is the reason behind it?

00:07:29.360 --> 00:07:31.250
So we have to send some response back,

00:07:31.250 --> 00:07:35.735
which means we are going to modify the response entity.

00:07:35.735 --> 00:07:37.940
Right now we're sending the response rates.

00:07:37.940 --> 00:07:39.620
So the next thing which we need to do,

00:07:39.620 --> 00:07:42.320
we need to send some proper response.

00:07:42.320 --> 00:07:43.640
So how are we going to do that?

00:07:43.640 --> 00:07:46.220
So let's go back door until j.

00:07:46.220 --> 00:07:48.215
Let's go back to our exception class.

00:07:48.215 --> 00:07:53.180
So let's use a global exception handler because we have the this, uh,

00:07:53.180 --> 00:07:55.970
here we have our different methods to intercept

00:07:55.970 --> 00:07:58.040
your response and they'll modify

00:07:58.040 --> 00:08:00.980
something and just take a look at the response into the acceptor.

00:08:00.980 --> 00:08:03.950
What is the purpose of response entity exception handler.

00:08:03.950 --> 00:08:07.040
So this is a class which will take care of the human response,

00:08:07.040 --> 00:08:08.780
whatever is happening in your response body.

00:08:08.780 --> 00:08:11.015
This is the one that's going to take in care.

00:08:11.015 --> 00:08:12.890
And here there are a lot of mothers available.

00:08:12.890 --> 00:08:14.945
The one method which you're looking for,

00:08:14.945 --> 00:08:17.840
because our input arguments are not valid, right?

00:08:17.840 --> 00:08:20.435
So for that we have a specific method here.

00:08:20.435 --> 00:08:27.000
So something like you should be able to handle method argument's not valid.

00:08:27.550 --> 00:08:30.050
And methodical.

00:08:30.050 --> 00:08:33.500
Let me search for it to live.

00:08:33.500 --> 00:08:38.645
And okay, so here,

00:08:38.645 --> 00:08:42.290
handle mutter argument not valid.

00:08:42.290 --> 00:08:44.180
So this is a method I'm going to you,

00:08:44.180 --> 00:08:47.210
I'm going to write in our exception handler.

00:08:47.210 --> 00:08:49.100
So whenever this happens,

00:08:49.100 --> 00:08:51.020
I'm going to modify our response.

00:08:51.020 --> 00:08:52.895
Okay, so let's implement that.

00:08:52.895 --> 00:08:56.570
So let's go back to our Global Exception Handler.

00:08:56.570 --> 00:08:57.860
I'm going to overwrite here.

00:08:57.860 --> 00:09:01.190
So override methods.

00:09:01.190 --> 00:09:04.010
The method which I'm going to override from the base class,

00:09:04.010 --> 00:09:06.560
which is response and take some handler and the mother

00:09:06.560 --> 00:09:09.965
which I'm looking for handling method or human not valid.

00:09:09.965 --> 00:09:10.835
Yeah.

00:09:10.835 --> 00:09:12.875
This is the mother which I'm going to override.

00:09:12.875 --> 00:09:14.990
So now we have the significant in place.

00:09:14.990 --> 00:09:18.680
So let's remove this. Okay, now when you do update the,

00:09:18.680 --> 00:09:20.630
we need to modify some changes here.

00:09:20.630 --> 00:09:22.865
So we need to send this response back because

00:09:22.865 --> 00:09:25.700
this is a response we always send back to the client because in

00:09:25.700 --> 00:09:27.770
this particular exception respond belongs to

00:09:27.770 --> 00:09:32.360
our project alone because it's employee exception response.

00:09:32.360 --> 00:09:36.890
Right? And here, I don't want to send the exception message because anyway,

00:09:36.890 --> 00:09:39.575
I will send that exception message in the description.

00:09:39.575 --> 00:09:41.120
So for now what I'm gonna do,

00:09:41.120 --> 00:09:44.640
I'm gonna mention something like invalid inputs.

00:09:47.890 --> 00:09:53.015
So invalid inputs.

00:09:53.015 --> 00:09:55.505
Invalid input, okay?

00:09:55.505 --> 00:10:00.304
And I don't want to send my description as a details.

00:10:00.304 --> 00:10:05.180
So let's send some other information like exactly to the race.

00:10:05.180 --> 00:10:06.860
So what I'm gonna do, I'm gonna use

00:10:06.860 --> 00:10:14.510
the request to get d or not the requests we had a method all human,

00:10:14.510 --> 00:10:20.540
not where we need to get the exception from the this particular exception class.

00:10:20.540 --> 00:10:23.330
So what I'm gonna do, I'm gonna remove this and I'm

00:10:23.330 --> 00:10:26.150
going to use the exception dot. We need.

00:10:26.150 --> 00:10:28.235
We have something like good binding mater.

00:10:28.235 --> 00:10:32.360
So get, search for it and get binding, binding results.

00:10:32.360 --> 00:10:33.050
Okay?

00:10:33.050 --> 00:10:35.060
So this will give you the information and you need to

00:10:35.060 --> 00:10:37.280
convert that as a string in order to send back.

00:10:37.280 --> 00:10:40.280
And then we have the, our date when this exception, okay,

00:10:40.280 --> 00:10:42.830
so now we have the validation error message and what

00:10:42.830 --> 00:10:45.590
is the description of the message details?

00:10:45.590 --> 00:10:46.940
And finally, what do we need to do?

00:10:46.940 --> 00:10:48.380
We need to send the response back, right?

00:10:48.380 --> 00:10:52.970
So this is a matter of you're going to use the response back and return.

00:10:52.970 --> 00:10:55.475
And here I have to pass the exception,

00:10:55.475 --> 00:11:00.020
but I'm not going to pass a not found here because it's a bad request,

00:11:00.020 --> 00:11:01.295
so I don't want to use that.

00:11:01.295 --> 00:11:04.550
So we need to send a status as a bad request.

00:11:04.550 --> 00:11:07.310
Okay, so let's save it and refresh our server and we'll

00:11:07.310 --> 00:11:11.640
see how the changes is going to be impact our application.

00:11:17.770 --> 00:11:21.570
So an obligation is getting started now.

00:11:28.600 --> 00:11:32.090
Okay, So I would our Tomcat server is up and running.

00:11:32.090 --> 00:11:33.605
Let's go back to our Postman.

00:11:33.605 --> 00:11:36.870
And I'm going to trigger the same request.

00:11:37.960 --> 00:11:40.115
There is no issues.

00:11:40.115 --> 00:11:43.640
So it will not have anything in the response body.

00:11:43.640 --> 00:11:46.160
But I'm going to modify some time because I cannot

00:11:46.160 --> 00:11:48.920
use more than 50 or so because the condition is 32,

00:11:48.920 --> 00:11:52.865
five, Let's try DM me use or which contains more than 50 year it is right?

00:11:52.865 --> 00:11:55.940
So now I'm going to create again, hit Send.

00:11:55.940 --> 00:11:59.075
See now we've got the error message invalid input,

00:11:59.075 --> 00:12:01.265
and we have the information MOD,

00:12:01.265 --> 00:12:04.220
what are the issue and why we're deducting the message.

00:12:04.220 --> 00:12:04.985
Here.

00:12:04.985 --> 00:12:08.000
The name the name is the one is causing the tissue.

00:12:08.000 --> 00:12:09.290
Okay, So now what I'm gonna do,

00:12:09.290 --> 00:12:13.280
I'm gonna modify it to normal and high heat.

00:12:13.280 --> 00:12:15.005
Again, it's working.

00:12:15.005 --> 00:12:16.925
Let's modify the email.

00:12:16.925 --> 00:12:18.695
I remove the at symbol,

00:12:18.695 --> 00:12:20.420
and let's hit Send again,

00:12:20.420 --> 00:12:24.890
again, inverted input, but this time it's because of the email.

00:12:24.890 --> 00:12:29.675
So this is how we need to send a proper response back to the guidelines.

00:12:29.675 --> 00:12:32.495
Okay, So just keep one thing in your mind,

00:12:32.495 --> 00:12:34.250
whatever you're doing in this particular area,

00:12:34.250 --> 00:12:35.495
it's a response body.

00:12:35.495 --> 00:12:37.760
And if you want to make changes in the response body,

00:12:37.760 --> 00:12:41.540
you need to make use of the response entity.

00:12:41.540 --> 00:12:43.740
Thank you.
