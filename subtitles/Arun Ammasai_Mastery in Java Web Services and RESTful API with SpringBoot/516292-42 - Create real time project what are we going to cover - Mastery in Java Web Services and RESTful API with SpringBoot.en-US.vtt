WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.695
Hello everyone, Welcome back.

00:00:01.695 --> 00:00:06.960
So we discuss about simple rest API project with a simple methods how

00:00:06.960 --> 00:00:09.780
to get the information on how to pass the input

00:00:09.780 --> 00:00:13.035
and get the information and some basic details, right?

00:00:13.035 --> 00:00:14.760
But now it's time for us to create

00:00:14.760 --> 00:00:18.330
some real team project and explore the additional methods.

00:00:18.330 --> 00:00:21.210
So far we want to discuss the get methods, right?

00:00:21.210 --> 00:00:25.500
So we're going to talk about postman dot and delete an even much more.

00:00:25.500 --> 00:00:30.775
So for now what we're gonna do is we're going to create a new project for anyway,

00:00:30.775 --> 00:00:33.440
handle something like employee management system.

00:00:33.440 --> 00:00:38.675
So I'm going to create the application named as employee Desktop Services.

00:00:38.675 --> 00:00:41.555
So go to File and New Project,

00:00:41.555 --> 00:00:44.525
and we're going to use the Spring assistant.

00:00:44.525 --> 00:00:49.080
Next. Let's name it densa employee service.

00:00:49.600 --> 00:00:53.180
Employee service, which is much better.

00:00:53.180 --> 00:00:53.780
Okay.

00:00:53.780 --> 00:01:04.440
And at February I'm gonna give the same employee salaries and I'm going to choose Java 8,

00:01:05.110 --> 00:01:10.340
employee service and the default package,

00:01:10.340 --> 00:01:13.085
we're going to use some byte code,

00:01:13.085 --> 00:01:17.090
one last Thursday, and then click Next.

00:01:17.090 --> 00:01:19.340
And now we need to choose the dependencies.

00:01:19.340 --> 00:01:21.230
The first thing which we need as a web support,

00:01:21.230 --> 00:01:22.940
which means a Spring Web.

00:01:22.940 --> 00:01:26.135
The next thing we need GPS I put maybe for now,

00:01:26.135 --> 00:01:28.760
for the next few more, a few more minutes are adopting.

00:01:28.760 --> 00:01:31.250
So we're going to cover with the hard-coded data.

00:01:31.250 --> 00:01:33.680
So once he discussed the hard-coded data and

00:01:33.680 --> 00:01:36.440
how to use them again to get post and delete method.

00:01:36.440 --> 00:01:40.190
And then we'll convert the same enters into a GPA methods.

00:01:40.190 --> 00:01:43.620
So we need GPS support over there.

00:01:45.400 --> 00:01:48.230
And we need an in-memory database.

00:01:48.230 --> 00:01:50.885
So I'm going to use harsh clarinetist here.

00:01:50.885 --> 00:01:53.450
And then what else we need?

00:01:53.450 --> 00:01:55.535
Let's do the DevTools also.

00:01:55.535 --> 00:01:57.890
So let us use DevTools.

00:01:57.890 --> 00:02:01.160
So del dot is going to help us whenever you don't have

00:02:01.160 --> 00:02:04.505
to stop the server and shouted again whenever you make a change.

00:02:04.505 --> 00:02:07.100
So whenever you were ID identifies that is

00:02:07.100 --> 00:02:11.150
a change because that Dave do a plugin is enabled, right?

00:02:11.150 --> 00:02:12.725
So it's automatically start,

00:02:12.725 --> 00:02:15.590
stop the application and it automatically start the application.

00:02:15.590 --> 00:02:19.100
So all we need to do, just make the change and wait for a few seconds and then go to

00:02:19.100 --> 00:02:23.555
the browser and our postman and you're going to execute the methods.

00:02:23.555 --> 00:02:28.985
Let's click Next. So I'm going to name and to say employers are always here to finish.

00:02:28.985 --> 00:02:31.955
Or maybe we can name it as a employee service.

00:02:31.955 --> 00:02:40.355
Employee rest service. Which makes sense.

00:02:40.355 --> 00:02:43.700
And finish the unit.

00:02:43.700 --> 00:02:46.160
Oh, okay.

00:02:46.160 --> 00:02:48.485
This project will be downloaded a few seconds.

00:02:48.485 --> 00:02:50.915
Okay, so now we've got our application.

00:02:50.915 --> 00:02:53.690
I'm in my own application downloaded from

00:02:53.690 --> 00:02:56.735
the spring initializer and everything is available here now.

00:02:56.735 --> 00:02:58.505
So what are we going to discuss here?

00:02:58.505 --> 00:03:00.905
So first thing, let me create a note here,

00:03:00.905 --> 00:03:03.650
like under the source file,

00:03:03.650 --> 00:03:08.030
and I'm gonna keep it as a notes dot TXT.

00:03:08.030 --> 00:03:10.530
So the step one.

00:03:10.930 --> 00:03:13.550
So what we're going on this trip.

00:03:13.550 --> 00:03:21.840
So create a DTO objects, Dataverse end controllers.

00:03:24.070 --> 00:03:28.295
So which is a simple controller with a getMethod.

00:03:28.295 --> 00:03:34.200
And then maybe I can keep it something like this.

00:03:34.270 --> 00:03:43.400
Step 1 and step 2, implement get metadata.

00:03:43.400 --> 00:03:45.770
And once we tried that,

00:03:45.770 --> 00:03:47.720
we're going to implement the postman

00:03:47.720 --> 00:03:55.730
dot dot and then

00:03:55.730 --> 00:04:02.400
we'll work on something else handling the response.

00:04:02.590 --> 00:04:05.705
So the way how we elicit the response, I mean,

00:04:05.705 --> 00:04:09.605
the proper meaningful response that though those things will consider.

00:04:09.605 --> 00:04:14.105
And then we'll discuss about when we are going for the handle, their responses.

00:04:14.105 --> 00:04:20.640
And then we're going to talk about specific exception handling.

00:04:20.950 --> 00:04:32.310
And then overall, which made the order of a project or project exception handling.

00:04:33.160 --> 00:04:37.520
So these are the first section which you want to try.

00:04:37.520 --> 00:04:42.750
And then finally the last we're going to try, delete operation, implement.

00:04:44.110 --> 00:04:47.015
Delete my dot.

00:04:47.015 --> 00:04:51.320
So this is our steps we're gonna follow

00:04:51.320 --> 00:04:56.340
for the next few more topics and then we'll monitor the GPA.
