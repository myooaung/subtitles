WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.950
Hello everyone, Welcome back.

00:00:01.950 --> 00:00:06.420
So we just created a method which will return all the employees,

00:00:06.420 --> 00:00:08.760
but that's not all the time.

00:00:08.760 --> 00:00:12.000
I might need a specific employee information.

00:00:12.000 --> 00:00:13.410
So how can I do that?

00:00:13.410 --> 00:00:15.540
So we have to write a method which will return

00:00:15.540 --> 00:00:18.600
a single employee because I'll pass an employee ID,

00:00:18.600 --> 00:00:21.570
you need to return the employee accordingly.

00:00:21.570 --> 00:00:22.890
So let's write a method for that.

00:00:22.890 --> 00:00:25.665
And again, it's going to be a GET method.

00:00:25.665 --> 00:00:27.940
So I'm going to use a get mapping.

00:00:27.940 --> 00:00:30.770
So the yuan which you want to perform here,

00:00:30.770 --> 00:00:32.945
we're going to use the employees again,

00:00:32.945 --> 00:00:34.655
but not limited to employees.

00:00:34.655 --> 00:00:37.385
After that, we're going to prove it one more path.

00:00:37.385 --> 00:00:42.530
User or, or after the employees,

00:00:42.530 --> 00:00:44.705
you might provide some inputs.

00:00:44.705 --> 00:00:47.330
So if you want to pass some inputs,

00:00:47.330 --> 00:00:51.770
you have to provide within the curly braces and it is going to be your employee ID.

00:00:51.770 --> 00:00:54.995
So you're going to hit the same URL,

00:00:54.995 --> 00:00:56.210
but along with the URL,

00:00:56.210 --> 00:00:58.085
you're going to pass some inputs as well.

00:00:58.085 --> 00:01:01.430
So the moment you are application receives

00:01:01.430 --> 00:01:03.440
this particular kind of request you to lay

00:01:03.440 --> 00:01:06.005
invoke the method which you were not right now.

00:01:06.005 --> 00:01:16.220
So this method is going to be returned employee and get employee by ID.

00:01:16.220 --> 00:01:21.150
So the input is going to be an int n AMP ID.

00:01:21.280 --> 00:01:24.170
And there are a lot of times you might end up with

00:01:24.170 --> 00:01:27.425
an issue because the requisite is not recognized.

00:01:27.425 --> 00:01:31.220
Because the reason, even though if you pass the information here,

00:01:31.220 --> 00:01:36.545
you needed element that you need to take these input from the request.

00:01:36.545 --> 00:01:38.045
So in order to do that,

00:01:38.045 --> 00:01:42.115
you have to use the another addition here,

00:01:42.115 --> 00:01:44.555
call it a bot variable.

00:01:44.555 --> 00:01:46.440
Okay?

00:01:47.770 --> 00:01:51.380
So you need to use the path variable here.

00:01:51.380 --> 00:02:00.425
The next thing we're gonna do, employee, employee.

00:02:00.425 --> 00:02:05.550
So we're going to use our employee DO surveys to get the employee information.

00:02:06.790 --> 00:02:09.650
Employee by ID.

00:02:09.650 --> 00:02:12.320
And we're gonna pass the employer ideas are in,

00:02:12.320 --> 00:02:15.140
but of course it will throw an error message because we don't have

00:02:15.140 --> 00:02:18.005
the metadata Implementation in the employee Diego.

00:02:18.005 --> 00:02:22.560
So what we're gonna do, let's write the implementation.

00:02:26.110 --> 00:02:29.310
Create a multi-layered.

00:02:31.510 --> 00:02:34.355
So we came to imply to you,

00:02:34.355 --> 00:02:37.745
and we have the method called get employee by ID.

00:02:37.745 --> 00:02:45.170
So all I'm gonna do is I'm going to use the Java 8 filter functionality here.

00:02:45.170 --> 00:02:46.670
So we have the list, right?

00:02:46.670 --> 00:02:48.350
So I'm going to use a list dot.

00:02:48.350 --> 00:02:51.830
So I had to open the stream in order to use the filter.

00:02:51.830 --> 00:02:55.655
And filter which will accept a pretty good as the input.

00:02:55.655 --> 00:02:58.835
And I'm gonna use the lambda expression.

00:02:58.835 --> 00:03:03.260
And AMP dot get employee ID,

00:03:03.260 --> 00:03:09.500
which is equal to the input employee ID which I received FDA request.

00:03:09.500 --> 00:03:14.915
So if any of them are matches, if find any,

00:03:14.915 --> 00:03:21.545
then pretend that or else return a null.

00:03:21.545 --> 00:03:24.380
So as simple as that.

00:03:24.380 --> 00:03:28.760
So if you want to keep it no clear way,

00:03:28.760 --> 00:03:33.095
so I just opened it and just have a look at it.

00:03:33.095 --> 00:03:35.630
So here I'm opening the stream and another stream,

00:03:35.630 --> 00:03:37.790
I'm filtering that data once.

00:03:37.790 --> 00:03:39.620
And the filtering condition I'm using checking

00:03:39.620 --> 00:03:41.945
the weather the employee ID matches with the employee ID,

00:03:41.945 --> 00:03:44.255
which is coming from the employee input.

00:03:44.255 --> 00:03:47.870
And if find any return it or L certainly null.

00:03:47.870 --> 00:03:51.845
Got it. So now let's go back our employee controller here.

00:03:51.845 --> 00:03:53.915
So now we've got the response back.

00:03:53.915 --> 00:04:03.515
So all we need to do just return rate AND employee which we received.

00:04:03.515 --> 00:04:06.230
C, as simple as that,

00:04:06.230 --> 00:04:08.750
there are some other additional things which we need to do.

00:04:08.750 --> 00:04:13.565
What happened just in case if I don't have the employee available in the list.

00:04:13.565 --> 00:04:18.125
So those scenarios, we need to handle the response in that proper way,

00:04:18.125 --> 00:04:20.345
the way how it is in a response back,

00:04:20.345 --> 00:04:21.560
we'll talk about in the next video.

00:04:21.560 --> 00:04:24.005
But before, let's start the application,

00:04:24.005 --> 00:04:26.225
let's reach out the application.

00:04:26.225 --> 00:04:33.935
So we can check this second month at the first one which we already tried Is employees.

00:04:33.935 --> 00:04:36.080
So the next one, we're going to do the same thing.

00:04:36.080 --> 00:04:37.430
But additionally what we're gonna do,

00:04:37.430 --> 00:04:41.225
we're gonna pass some other parameters.

00:04:41.225 --> 00:04:42.980
So previous little hardware to one,

00:04:42.980 --> 00:04:45.979
to all the employees has the same idea I just modified.

00:04:45.979 --> 00:04:50.810
So when we run it now we will get D are different data.

00:04:50.810 --> 00:04:52.715
So the spring we're just getting started now.

00:04:52.715 --> 00:04:53.990
Yes, our salary strata.

00:04:53.990 --> 00:04:56.615
Let's go back to our postman and hated again.

00:04:56.615 --> 00:04:59.135
See now we've got all different employees.

00:04:59.135 --> 00:05:03.890
But all I want to do is I want to fetch only the employer ID 102 35.

00:05:03.890 --> 00:05:07.895
So after the employee is I'm going to pass 1235.

00:05:07.895 --> 00:05:09.755
See what happened.

00:05:09.755 --> 00:05:14.690
We got the the specific employee alone.

00:05:14.690 --> 00:05:15.650
Okay.

00:05:15.650 --> 00:05:17.420
Send the next video we're gonna talk about, uh,

00:05:17.420 --> 00:05:19.925
how we can perform a post mapping,

00:05:19.925 --> 00:05:22.100
which means post method example.

00:05:22.100 --> 00:05:24.755
So we are just retrieved, right?

00:05:24.755 --> 00:05:26.915
So the next thing, how are we going to

00:05:26.915 --> 00:05:32.340
store or add an employee that we'll discover next video.
