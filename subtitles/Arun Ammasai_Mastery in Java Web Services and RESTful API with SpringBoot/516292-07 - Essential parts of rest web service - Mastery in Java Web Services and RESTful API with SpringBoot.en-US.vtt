WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.410
Hello everyone.

00:00:01.410 --> 00:00:02.550
Welcome back.

00:00:02.550 --> 00:00:06.120
So let's see some essential information when you're working with

00:00:06.120 --> 00:00:10.065
the rest API is there are some key factors which you need to aware of it.

00:00:10.065 --> 00:00:12.285
The first one is called as a URI,

00:00:12.285 --> 00:00:15.285
which is nothing but a Uniform Resource Identifier.

00:00:15.285 --> 00:00:17.760
And the second one is the representation.

00:00:17.760 --> 00:00:23.445
So which means what kind of input or output format you are expecting from the API, right?

00:00:23.445 --> 00:00:25.335
So the first thing is requested URI,

00:00:25.335 --> 00:00:30.150
you're writing a method and your method must have some URI information.

00:00:30.150 --> 00:00:32.100
So because then you have a multiple methods,

00:00:32.100 --> 00:00:34.350
if you're trying to make a call to an arrest API,

00:00:34.350 --> 00:00:36.790
your API must have its own address.

00:00:36.790 --> 00:00:40.340
Rs, I'll call will not sure which method is going to call.

00:00:40.340 --> 00:00:42.290
For example, you have a three month is 114,

00:00:42.290 --> 00:00:44.240
set one for our blood 14 delete,

00:00:44.240 --> 00:00:46.745
right when I'm making the call to the API,

00:00:46.745 --> 00:00:48.515
you need to use the property API.

00:00:48.515 --> 00:00:51.410
For example, if you're using some x,

00:00:51.410 --> 00:00:54.290
y is r.com slash update.

00:00:54.290 --> 00:00:57.545
So whenever using the update it has to call

00:00:57.545 --> 00:01:02.645
the update method which you return inside the web services.

00:01:02.645 --> 00:01:04.265
So for example, you,

00:01:04.265 --> 00:01:05.960
we're all using our Mason's, right?

00:01:05.960 --> 00:01:09.575
So when you're looking for a mobility will not directly go and launch into mobile.

00:01:09.575 --> 00:01:11.270
So when I hit mobile,

00:01:11.270 --> 00:01:14.840
it will take the end point from the Amazon, from jammies.

00:01:14.840 --> 00:01:16.370
And we have multiple categories, right?

00:01:16.370 --> 00:01:19.040
Santa the amaze, and we have our products and other electronics.

00:01:19.040 --> 00:01:20.690
We have mobile, the similar way.

00:01:20.690 --> 00:01:26.150
Each and every section or each and every different kind of a product has its own URI.

00:01:26.150 --> 00:01:31.670
So the URI is the essential information when you're making your STATA calls.

00:01:31.670 --> 00:01:34.325
Not only were making API calls when you're doing your development,

00:01:34.325 --> 00:01:36.770
because we are the one who's going to provide the endpoints of

00:01:36.770 --> 00:01:40.250
the methods and then the representation.

00:01:40.250 --> 00:01:42.980
Obviously, what is the input and the output format,

00:01:42.980 --> 00:01:44.345
as I mentioned earlier,

00:01:44.345 --> 00:01:49.460
it will accept are different types of data like JSON, XML, text,

00:01:49.460 --> 00:01:51.860
and HTML, which I just mentioned only four of them here,

00:01:51.860 --> 00:01:56.165
but it will accept even much more different varieties of input information.

00:01:56.165 --> 00:01:59.090
Okay, So let's discuss about the,

00:01:59.090 --> 00:02:01.910
the soap services and the rest services, right.

00:02:01.910 --> 00:02:04.610
Let's have a look at what exactly is the difference

00:02:04.610 --> 00:02:07.610
between the arrest and the visitor occurred when it comes to, uh,

00:02:07.610 --> 00:02:11.360
an approach, rest is fol following the architectural approach,

00:02:11.360 --> 00:02:14.120
which means there is no specific set off a roll.

00:02:14.120 --> 00:02:16.130
You can use one link, these kind of input type.

00:02:16.130 --> 00:02:19.715
On output type, we can use different types of information.

00:02:19.715 --> 00:02:22.040
I would need a format of input and output.

00:02:22.040 --> 00:02:24.815
But when it comes to wisdom, we don't have a choice.

00:02:24.815 --> 00:02:28.595
We have to go for only the XML schema, right?

00:02:28.595 --> 00:02:31.040
What are the formats are supported in rest, as I mentioned,

00:02:31.040 --> 00:02:34.535
I'll XML JSON, hash table to extend file and etc.

00:02:34.535 --> 00:02:37.610
But wisdom, we know that it's only an XML.

00:02:37.610 --> 00:02:40.715
And what is the definition is followed by arrest,

00:02:40.715 --> 00:02:43.640
which is a W3, see and wisdom.

00:02:43.640 --> 00:02:46.249
It's falling their own definition and WSDL.

00:02:46.249 --> 00:02:49.850
And what are the way we can make a call R?

00:02:49.850 --> 00:02:54.230
We can transport the information one way through high strategic when it comes to a rest.

00:02:54.230 --> 00:02:57.470
But when you are using a visible, you can make,

00:02:57.470 --> 00:03:00.410
you can transport the information using HTTP at

00:03:00.410 --> 00:03:04.145
the same time you can use the M2 SQL MQ is a message queue,

00:03:04.145 --> 00:03:07.040
so it will post it in some particular Q and

00:03:07.040 --> 00:03:10.040
a drill picked up from the particular location and it will process the response.

00:03:10.040 --> 00:03:11.390
And the response is again,

00:03:11.390 --> 00:03:14.120
put it into the same queue and someone alice into

00:03:14.120 --> 00:03:18.290
the particular port and they will get the response I'm sent back to the blind.

00:03:18.290 --> 00:03:19.295
Right?

00:03:19.295 --> 00:03:21.815
So this is a basic informations about

00:03:21.815 --> 00:03:25.355
what different types of services like a slope under arrest.

00:03:25.355 --> 00:03:30.695
So in the next section we're going to talk about what exactly we need a spring.

00:03:30.695 --> 00:03:32.720
So, and what is the advantage of using a spring?

00:03:32.720 --> 00:03:36.095
And let's see some, some simple example to understand

00:03:36.095 --> 00:03:41.255
the inversion of control or dependency injection will talk about in the next section.

00:03:41.255 --> 00:03:42.810
Thank you.
