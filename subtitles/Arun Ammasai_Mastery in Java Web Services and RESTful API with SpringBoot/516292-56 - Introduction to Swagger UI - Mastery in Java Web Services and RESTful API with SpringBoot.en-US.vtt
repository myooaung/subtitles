WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.965
Hello everyone, Welcome back.

00:00:01.965 --> 00:00:06.660
So we discussed about the content negotiation and implementing the head YES,

00:00:06.660 --> 00:00:08.790
and validation and exception handling, right?

00:00:08.790 --> 00:00:12.000
The next important thing, once your application is entirely up to you,

00:00:12.000 --> 00:00:14.400
how you're going to hand over it to your clients,

00:00:14.400 --> 00:00:15.870
which makes you not want your Antoine,

00:00:15.870 --> 00:00:18.750
I handle your project but you have to prove it

00:00:18.750 --> 00:00:22.905
the details I would encourage you or your services like a documentation.

00:00:22.905 --> 00:00:26.040
So kind of a visible documentation

00:00:26.040 --> 00:00:27.900
when you're talking about the slopes are within the how the

00:00:27.900 --> 00:00:33.630
wisdom which contains all the input and output Andy method APA calls information,

00:00:33.630 --> 00:00:37.050
but because that is with Dell based, XML based,

00:00:37.050 --> 00:00:39.690
but our rest API,

00:00:39.690 --> 00:00:41.470
they are pretty much based on

00:00:41.470 --> 00:00:45.365
any specific type of data because that is architectural type, right?

00:00:45.365 --> 00:00:50.660
So how we are going to do that documentation when you are writing for some applications.

00:00:50.660 --> 00:00:55.774
So we're going to make use of a swagger dependency.

00:00:55.774 --> 00:01:01.220
Okay, so now one thing which we need to know to enable the swagger,

00:01:01.220 --> 00:01:05.675
you need to add a specific dependency newer POM file.

00:01:05.675 --> 00:01:08.570
Let's go back to the palm to take someone.

00:01:08.570 --> 00:01:12.395
Okay, So the dependency which we are trying to add is here.

00:01:12.395 --> 00:01:17.270
It's a swagger which is available on the io dot spring fox.

00:01:17.270 --> 00:01:19.280
That is a group ID. Okay, if you're not sure,

00:01:19.280 --> 00:01:21.260
Let's go back to the browser and search for it.

00:01:21.260 --> 00:01:27.720
So I'm going to prove it. I o to OT spring of spring folks, right?

00:01:28.810 --> 00:01:32.010
Spring false.

00:01:34.660 --> 00:01:35.930
Okay.

00:01:35.930 --> 00:01:38.120
So I'm going to use this.

00:01:38.120 --> 00:01:41.270
Okay. This is the accurate information.

00:01:41.270 --> 00:01:43.835
Just copy the information and let's go back to our intelligence.

00:01:43.835 --> 00:01:46.715
And let's put ever, or it's a poem here.

00:01:46.715 --> 00:01:49.685
Let's put the dependency here.

00:01:49.685 --> 00:01:55.445
Okay, so now we just kept a dividend 3 and our palm that file at all.

00:01:55.445 --> 00:01:56.990
The next thing which we need to do,

00:01:56.990 --> 00:01:59.510
you have to build your application runs.

00:01:59.510 --> 00:02:05.255
So go to my oven and just click install and run once.

00:02:05.255 --> 00:02:10.685
Or you can go to your command prompt and you can click Ambien install.

00:02:10.685 --> 00:02:13.190
That is also fine. So basically what we're trying

00:02:13.190 --> 00:02:15.710
to do whenever you add some new dependency in your palm,

00:02:15.710 --> 00:02:17.720
read XML, make sure you're building in 1s.

00:02:17.720 --> 00:02:20.070
So now the build is success.

00:02:20.530 --> 00:02:23.600
So we have the dependency.

00:02:23.600 --> 00:02:24.635
Now all we need to do,

00:02:24.635 --> 00:02:26.315
just go back to our entropy.

00:02:26.315 --> 00:02:28.099
I'm an employee surveys application.

00:02:28.099 --> 00:02:30.545
So the only thing which we need to do here,

00:02:30.545 --> 00:02:33.320
just enable swagger, write.

00:02:33.320 --> 00:02:36.860
Enable swagger to, that is the only thing which you

00:02:36.860 --> 00:02:40.220
need to do because we're going to use the at default documentation.

00:02:40.220 --> 00:02:44.070
Just save it and start your application once.

00:02:47.170 --> 00:02:50.705
In a Spring Boot application is getting started now,

00:02:50.705 --> 00:02:55.565
it might take another few seconds to get it up and running.

00:02:55.565 --> 00:02:58.490
Okay, so our Tom current salary is up and running.

00:02:58.490 --> 00:03:00.995
So it is running under port number 800 81.

00:03:00.995 --> 00:03:06.875
Okay, so now let's go back to our postman and let's create a new request here.

00:03:06.875 --> 00:03:09.965
And it's going to be HTTP.

00:03:09.965 --> 00:03:12.935
I'm just trying to access the API.

00:03:12.935 --> 00:03:15.530
So this is a URL which I have already tried once.

00:03:15.530 --> 00:03:17.780
So here if we take a look at localhost 800,

00:03:17.780 --> 00:03:20.945
80, and this is the documentation URL.

00:03:20.945 --> 00:03:23.750
So v2 slash API docs,

00:03:23.750 --> 00:03:26.120
which will give you the entire dilemma,

00:03:26.120 --> 00:03:29.225
whatever current application, Let's click Send.

00:03:29.225 --> 00:03:32.795
See, now here let me make it clear.

00:03:32.795 --> 00:03:37.355
Okay, So here, just take a look at this response yet the swagger,

00:03:37.355 --> 00:03:41.660
we are using 2 version and a description and this information is all

00:03:41.660 --> 00:03:46.100
about your application and these are the default and descriptions.

00:03:46.100 --> 00:03:48.290
We can modify it later.

00:03:48.290 --> 00:03:51.185
And then the host which you're looking for,

00:03:51.185 --> 00:03:53.010
the Working on a cell local versus 800,

00:03:53.010 --> 00:03:55.975
800 and evoke in your real name project it will be a different.

00:03:55.975 --> 00:03:58.295
And then you have something like tags.

00:03:58.295 --> 00:03:59.735
But for now we're not going to use it.

00:03:59.735 --> 00:04:03.650
Taxes mostly used for grouping multiple controllers into a single section,

00:04:03.650 --> 00:04:06.515
kind of a category session and then pants.

00:04:06.515 --> 00:04:07.970
So this is where we'll have

00:04:07.970 --> 00:04:11.330
all the information about what are the methods we're going to call n,

00:04:11.330 --> 00:04:14.210
what are the response types for that and request type for it.

00:04:14.210 --> 00:04:16.400
So if you take a look at it, here we have the get

00:04:16.400 --> 00:04:19.759
all employees where we are calling the get all employee methods.

00:04:19.759 --> 00:04:22.895
And these are all available under the employee controller.

00:04:22.895 --> 00:04:26.210
And this information available in the tags as well.

00:04:26.210 --> 00:04:28.520
See, that is a controller here.

00:04:28.520 --> 00:04:33.530
So under this control and this is a good method,

00:04:33.530 --> 00:04:35.870
that is the reason we have get all employee using

00:04:35.870 --> 00:04:38.630
it getMethod and what would be the response for that?

00:04:38.630 --> 00:04:40.490
There is no input for this particular method, right?

00:04:40.490 --> 00:04:42.485
So there'll be no input for it,

00:04:42.485 --> 00:04:43.640
because if you have inputs,

00:04:43.640 --> 00:04:45.950
you'll have the parameters here, okay?

00:04:45.950 --> 00:04:49.069
And then the response and the 200 responses,

00:04:49.069 --> 00:04:50.885
okay, which means a successful response.

00:04:50.885 --> 00:04:53.810
So what kind of response it's going to return back?

00:04:53.810 --> 00:04:56.630
So it says it is going to return an array type,

00:04:56.630 --> 00:05:01.775
which means a kind of a list and list of employees.

00:05:01.775 --> 00:05:04.730
So now you need to know, so here we have a definition for employee,

00:05:04.730 --> 00:05:07.415
but how do I know what employee contains?

00:05:07.415 --> 00:05:09.050
So to identify those information,

00:05:09.050 --> 00:05:10.955
you can go down here,

00:05:10.955 --> 00:05:12.890
go down to the bottom there,

00:05:12.890 --> 00:05:14.150
you can have something like,

00:05:14.150 --> 00:05:17.100
let me go to the bottom here.

00:05:20.470 --> 00:05:22.550
So we have so many methods here.

00:05:22.550 --> 00:05:28.860
Does it lead one command, command.

00:05:31.660 --> 00:05:33.830
Okay, Let's go back.

00:05:33.830 --> 00:05:36.380
I think I missed, it's a big JSON format.

00:05:36.380 --> 00:05:39.600
So definition to the employees clicking because this,

00:05:39.600 --> 00:05:42.380
this is an array type is going to be employee and that

00:05:42.380 --> 00:05:45.290
employee detail information which is available the definition,

00:05:45.290 --> 00:05:47.210
because definition contains what are

00:05:47.210 --> 00:05:51.110
the inner elements for the employee. Let's click this.

00:05:51.110 --> 00:05:56.195
And it's not going to workout here on, I'm gonna do.

00:05:56.195 --> 00:06:03.290
Come on. I didn't say you do and say okay,

00:06:03.290 --> 00:06:04.895
so let's try to search here.

00:06:04.895 --> 00:06:07.260
Okay, So the employee right?

00:06:10.240 --> 00:06:13.295
Employee and search for it.

00:06:13.295 --> 00:06:19.580
And if you go down, okay,

00:06:19.580 --> 00:06:20.975
see here the definition.

00:06:20.975 --> 00:06:23.750
So this is a definition which we talked about in the beginning

00:06:23.750 --> 00:06:26.885
set definition of employee which will attend as an array.

00:06:26.885 --> 00:06:32.389
Say this employee contains an email as a string and employee ID which is an integer.

00:06:32.389 --> 00:06:34.355
And I, we have a name as well,

00:06:34.355 --> 00:06:35.960
which is a type of a strong,

00:06:35.960 --> 00:06:37.955
I'm sorry, a string.

00:06:37.955 --> 00:06:41.810
So we can easily relate to all of them appeal.

00:06:41.810 --> 00:06:43.640
It's just like our normal with Dell.

00:06:43.640 --> 00:06:47.495
So we have a input methods here and we have the definition for that.

00:06:47.495 --> 00:06:49.805
So let's go back to the method.

00:06:49.805 --> 00:06:55.400
Okay. Does it matter which were discussing about so to save employee, right. Okay.

00:06:55.400 --> 00:06:56.555
So get all employee,

00:06:56.555 --> 00:06:58.670
so we have the air,

00:06:58.670 --> 00:07:03.200
but the response is going to be typeof array and the type of arrays going to be employee.

00:07:03.200 --> 00:07:05.810
And if you want to know what are the elements inside the node employee,

00:07:05.810 --> 00:07:07.745
you can go to the definition button, you can verify it.

00:07:07.745 --> 00:07:12.515
The definition is available under this path section.

00:07:12.515 --> 00:07:15.020
Okay. You might see something like a phone not on

00:07:15.020 --> 00:07:18.395
unauthorized and some other information.

00:07:18.395 --> 00:07:22.085
So these are all specifically used to for the security purpose.

00:07:22.085 --> 00:07:24.980
Normally whenever you call an API,

00:07:24.980 --> 00:07:26.690
anyone can call an API, right?

00:07:26.690 --> 00:07:28.430
But you want to put some restriction in place,

00:07:28.430 --> 00:07:30.380
one lead, these people can call my APIs.

00:07:30.380 --> 00:07:32.990
So those timing situation, you will pass the user ID and password.

00:07:32.990 --> 00:07:36.755
And that situation we'll have the authorized to message here.

00:07:36.755 --> 00:07:38.540
There is the first method. Let's go down.

00:07:38.540 --> 00:07:42.605
We'll see the next method. And next method is going to be a delete method.

00:07:42.605 --> 00:07:45.355
And see here the operation delete employee

00:07:45.355 --> 00:07:48.260
by using delete method before it's a GET method.

00:07:48.260 --> 00:07:52.100
But here the delete method and the method enemies delete employee by ID.

00:07:52.100 --> 00:07:53.750
But take a look at here.

00:07:53.750 --> 00:07:55.520
In previous method, we don't have

00:07:55.520 --> 00:07:59.675
the atom because I'm not passing any inputs to the method.

00:07:59.675 --> 00:08:01.205
But here if you take a look at it,

00:08:01.205 --> 00:08:02.510
we have a parameter.

00:08:02.510 --> 00:08:08.314
The parameter is employee ID and we are passing the employee through the part,

00:08:08.314 --> 00:08:10.445
not as a body.

00:08:10.445 --> 00:08:15.514
Right. Do you remember we passed a local host aids are aids reemploy slash 1234,

00:08:15.514 --> 00:08:20.525
so that the input request I'm in the input element is going as part of a path.

00:08:20.525 --> 00:08:22.790
That's what he meant we mentioned here as a path.

00:08:22.790 --> 00:08:24.830
And the description is employee ID and required.

00:08:24.830 --> 00:08:27.380
Yes, it is true if you're not providing good,

00:08:27.380 --> 00:08:30.395
I'm going to call the API and it is going to be integer type.

00:08:30.395 --> 00:08:32.120
So and what the response for that?

00:08:32.120 --> 00:08:33.905
It is just a 200 response.

00:08:33.905 --> 00:08:35.330
If employees deleted yes,

00:08:35.330 --> 00:08:39.515
it will return a 200 which saying like it's success and again,

00:08:39.515 --> 00:08:41.870
unauthorized and some secret information.

00:08:41.870 --> 00:08:45.380
Let's go down. And here we have saved all employee.

00:08:45.380 --> 00:08:49.265
Take a look at it. This is a sale and blow using post method,

00:08:49.265 --> 00:08:52.220
which means we have the method body here.

00:08:52.220 --> 00:08:53.705
I'm in a request body.

00:08:53.705 --> 00:08:56.120
So let's go down here.

00:08:56.120 --> 00:09:00.050
Here is the parameter and the input.

00:09:00.050 --> 00:09:04.910
We are passing through the body and the name is employee EMP,

00:09:04.910 --> 00:09:08.840
that is a instance we are going to pass and it's required,

00:09:08.840 --> 00:09:13.805
true, you have to pass it or else you won't be able to create data employee.

00:09:13.805 --> 00:09:15.695
And what is the input for that?

00:09:15.695 --> 00:09:17.600
It's again an employee schema.

00:09:17.600 --> 00:09:21.350
We all know that what employee does contains MLA contains the name, e-mail,

00:09:21.350 --> 00:09:26.930
and D Employee ID so that both things that are available under this definition path,

00:09:26.930 --> 00:09:28.820
which is available below the path.

00:09:28.820 --> 00:09:31.099
So let's go down below.

00:09:31.099 --> 00:09:34.040
And here we have another method for each employee by ID.

00:09:34.040 --> 00:09:36.770
So again, another GET method passing one simple parameter

00:09:36.770 --> 00:09:40.475
c. Whatever the method you'd done in the rest controller,

00:09:40.475 --> 00:09:46.505
it's just a high level overview of all you were at rest methods.

00:09:46.505 --> 00:09:49.490
So if you send this particular file to a claimed,

00:09:49.490 --> 00:09:51.230
they should be able to understand what are

00:09:51.230 --> 00:09:53.240
the methods available and what are the inputs we

00:09:53.240 --> 00:09:57.590
need to pass an auto response we're going to receive everything will be available here.

00:09:57.590 --> 00:09:59.945
So if you go down,

00:09:59.945 --> 00:10:01.340
we have only dreamer, That's right.

00:10:01.340 --> 00:10:04.055
So we discuss about those three methods.

00:10:04.055 --> 00:10:06.380
And there are some, a lot of additional information

00:10:06.380 --> 00:10:08.435
available here because we go through the definition, right?

00:10:08.435 --> 00:10:13.310
You can literally see what are the input types and what the input type contents.

00:10:13.310 --> 00:10:15.920
For example, employees, a DDO, that's an input rate.

00:10:15.920 --> 00:10:20.600
So what imply contains which you'll available under the definition.

00:10:20.600 --> 00:10:24.750
So let's go down here.

00:10:26.880 --> 00:10:29.170
Okay, so here is a definition,

00:10:29.170 --> 00:10:32.395
but I don't have that JSON add in my browser.

00:10:32.395 --> 00:10:33.670
And I did have some issues.

00:10:33.670 --> 00:10:36.880
That is why I'm I had to keep scrolling here.

00:10:36.880 --> 00:10:38.650
Omega, That's my bad.

00:10:38.650 --> 00:10:40.810
Okay. We have option to a shrink it.

00:10:40.810 --> 00:10:45.085
Okay, Let me go back and then show you how to do that.

00:10:45.085 --> 00:10:52.570
So here we have something like okay is the tax section and this is a path omega,

00:10:52.570 --> 00:10:54.415
this even much easier now.

00:10:54.415 --> 00:10:57.130
So we have the host and the base path,

00:10:57.130 --> 00:11:00.715
which is nothing but localhost slash and the tax here,

00:11:00.715 --> 00:11:02.800
we all know what tax content rate,

00:11:02.800 --> 00:11:05.785
what are the different controllers.

00:11:05.785 --> 00:11:08.930
And then after the tax will have the paths which

00:11:08.930 --> 00:11:11.945
contains all the methods and the input type and output type.

00:11:11.945 --> 00:11:16.860
And if you go to the definition,

00:11:17.200 --> 00:11:19.370
Let's go back to the definition.

00:11:19.370 --> 00:11:20.225
It's minimise that.

00:11:20.225 --> 00:11:22.040
So here is a definition.

00:11:22.040 --> 00:11:27.215
So here we have a host tax and here's the path which can in all the matter,

00:11:27.215 --> 00:11:28.745
let's shrink the past as well.

00:11:28.745 --> 00:11:31.055
And as a path we have the definition part,

00:11:31.055 --> 00:11:33.545
have all the methods and input and output type.

00:11:33.545 --> 00:11:38.550
And definition contains all the inputs and what are the inner elements for that.
