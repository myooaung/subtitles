WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.830
Hello everyone, Welcome back.

00:00:01.830 --> 00:00:06.075
So now we have other controller and need has-a some proper methods in it.

00:00:06.075 --> 00:00:07.830
How you're going to test it out.

00:00:07.830 --> 00:00:10.545
There are multiple ways you can do that.

00:00:10.545 --> 00:00:13.859
If it is a getMethod, we can simply test using a browser.

00:00:13.859 --> 00:00:16.620
But when it's a post method, it's complicated.

00:00:16.620 --> 00:00:20.865
So we have to get some additional interfaces are

00:00:20.865 --> 00:00:22.590
different softwares like a postman or

00:00:22.590 --> 00:00:25.905
so PIR rest at once controller or something like that.

00:00:25.905 --> 00:00:32.265
But in our entire course we're going to use the Postman as our client.

00:00:32.265 --> 00:00:36.255
So the way how we can use the Postman, there are multiple things.

00:00:36.255 --> 00:00:43.340
You can go to your browser and you're gonna simply using like a postman for Chrome.

00:00:43.340 --> 00:00:47.030
And you can choose the first link and it'll take you to the place where it

00:00:47.030 --> 00:00:52.354
will add your postman client into your Chrome extension.

00:00:52.354 --> 00:00:54.710
But I'm not going to use it anyway because I have

00:00:54.710 --> 00:00:57.410
the desktop version which is installed on my machine.

00:00:57.410 --> 00:01:01.220
But if you're new and you don't have anything in your local machine,

00:01:01.220 --> 00:01:04.789
you can directly go ahead and install in your browser.

00:01:04.789 --> 00:01:09.530
And then the same approach is applicable for a different browsers as well.

00:01:09.530 --> 00:01:13.805
You under if you're using like Mozilla Firefox,

00:01:13.805 --> 00:01:16.205
it's pretty much the same open data.

00:01:16.205 --> 00:01:17.795
So for now what I'm going to do,

00:01:17.795 --> 00:01:19.985
let me open my postman.

00:01:19.985 --> 00:01:22.925
So this is my Postman looks like,

00:01:22.925 --> 00:01:24.785
and I'm going to create a new request here,

00:01:24.785 --> 00:01:28.055
and we're gonna execute d u orders.

00:01:28.055 --> 00:01:31.535
So let's go back to our intelligence here.

00:01:31.535 --> 00:01:33.320
So we have the application ready,

00:01:33.320 --> 00:01:35.630
but we need to start the application in order

00:01:35.630 --> 00:01:39.200
to call the methods are used, the APIs, right?

00:01:39.200 --> 00:01:41.480
So all we need to do is just go on right leg

00:01:41.480 --> 00:01:45.424
your application run employees or Reese's obligation.

00:01:45.424 --> 00:01:49.280
So it might take a seconds because it's the first time, right?

00:01:49.280 --> 00:01:54.200
So, so the application is getting started now.

00:01:54.200 --> 00:01:59.060
So once it says like your Tomcat, Apache started successfully,

00:01:59.060 --> 00:02:04.625
which means we can go ahead and Randy a payment that so what is the problem here?

00:02:04.625 --> 00:02:07.940
Okay, So Field Service,

00:02:07.940 --> 00:02:10.595
Employee control require a bean type.

00:02:10.595 --> 00:02:11.810
So what is the problem?

00:02:11.810 --> 00:02:13.340
What is missing here?

00:02:13.340 --> 00:02:15.620
Right, list have a look at data message.

00:02:15.620 --> 00:02:20.870
So there is a required to being a type of employee Diego, right?

00:02:20.870 --> 00:02:23.750
So let's go back.

00:02:23.750 --> 00:02:26.030
Okay, so take a look on this.

00:02:26.030 --> 00:02:27.710
So we have a risk controller, okay,

00:02:27.710 --> 00:02:31.805
The other thing is they have employed d over which we tried as our autopilot.

00:02:31.805 --> 00:02:33.695
But he would take a look at the imply to you.

00:02:33.695 --> 00:02:37.985
We don't have any annotations here because this mother is providing

00:02:37.985 --> 00:02:43.700
some information as to the risk controller through the auto-grading functionality.

00:02:43.700 --> 00:02:46.205
So you'd have to be annotated with some,

00:02:46.205 --> 00:02:49.010
at least a component or it can be annotated or service.

00:02:49.010 --> 00:02:50.750
So our application can understand,

00:02:50.750 --> 00:02:52.340
okay, this is going to be provider.

00:02:52.340 --> 00:02:55.595
So for now I'm going to use the component even if you want,

00:02:55.595 --> 00:02:58.565
you can use the services as well.

00:02:58.565 --> 00:03:01.460
So that's the only thing that she's missed out.

00:03:01.460 --> 00:03:03.695
So this is how our entire application,

00:03:03.695 --> 00:03:05.765
I mean, our entire course is going to run through.

00:03:05.765 --> 00:03:08.600
We make a mistakes and we will resolve that issue.

00:03:08.600 --> 00:03:10.460
Then we'll move on to the next thing.

00:03:10.460 --> 00:03:13.805
So next, let's start the application again.

00:03:13.805 --> 00:03:16.790
Expand the console one more time.

00:03:16.790 --> 00:03:20.820
So the Spring Boot application is getting started now.

00:03:21.190 --> 00:03:26.180
Hopefully it will start successfully because we have everything in place, right?

00:03:26.180 --> 00:03:28.160
So of course it will start.

00:03:28.160 --> 00:03:31.100
Okay, So it is failing in, okay,

00:03:31.100 --> 00:03:34.325
it says the port aids or eight areas already in use.

00:03:34.325 --> 00:03:39.260
So this is another issue which you always phase in the spring.

00:03:39.260 --> 00:03:41.970
But the reason might be,

00:03:42.370 --> 00:03:45.590
if you take a look at I have multiple entrance,

00:03:45.590 --> 00:03:46.910
I have one intelligent students.

00:03:46.910 --> 00:03:48.575
I have my Eclipse instance running,

00:03:48.575 --> 00:03:49.730
so my Eclipse instant,

00:03:49.730 --> 00:03:53.255
there are other projects that are running there occupying our port number.

00:03:53.255 --> 00:03:55.910
Aids are aids. So how do we resolve that issue?

00:03:55.910 --> 00:03:57.260
It's just simple thing.

00:03:57.260 --> 00:03:59.750
How to prove it. You would warn port number when you're running

00:03:59.750 --> 00:04:02.390
your own applications. It's pretty simple.

00:04:02.390 --> 00:04:08.045
Go to you what application at properties and you can provide server port.

00:04:08.045 --> 00:04:09.890
So here you can provide any number.

00:04:09.890 --> 00:04:12.545
So we're going to provide 800, 81.

00:04:12.545 --> 00:04:15.890
So now when the application strategy it's look for it

00:04:15.890 --> 00:04:19.250
will create the server using 800 eight when port,

00:04:19.250 --> 00:04:21.875
right, let's run the application again.

00:04:21.875 --> 00:04:24.605
Always face the issues.

00:04:24.605 --> 00:04:26.540
So I near the more issues,

00:04:26.540 --> 00:04:28.955
which means we are learning more.

00:04:28.955 --> 00:04:32.250
Accountability is just getting started.

00:04:39.280 --> 00:04:41.165
Okay, It's pretty cool.

00:04:41.165 --> 00:04:43.550
Just have a look at this error message. The message.

00:04:43.550 --> 00:04:47.120
So downcast shot and the port number 800, 81,

00:04:47.120 --> 00:04:49.190
the moment I change the port number,

00:04:49.190 --> 00:04:51.455
that port confident has been resolved.

00:04:51.455 --> 00:04:55.775
So all we need to do is just go to your browser and hit the URL.

00:04:55.775 --> 00:04:57.185
So let's go back to the controller.

00:04:57.185 --> 00:04:59.810
So the service is you want to try is employees.

00:04:59.810 --> 00:05:02.600
Okay with the port number of 800, 81 cell.

00:05:02.600 --> 00:05:06.935
Let's go to our postman here and let's try to type the URL.

00:05:06.935 --> 00:05:11.615
So cash today being and local port,

00:05:11.615 --> 00:05:12.950
the port number which you're looking for,

00:05:12.950 --> 00:05:17.675
it's 800, 81, end the endpoint URL is employees,

00:05:17.675 --> 00:05:19.685
and it is going to emit getMethod.

00:05:19.685 --> 00:05:22.339
The moment if I hit Send,

00:05:22.339 --> 00:05:25.490
we'll be getting the response from our API.

00:05:25.490 --> 00:05:30.515
See, we have all three hard-coded information is here, right?

00:05:30.515 --> 00:05:32.480
I could have changed the employee ID anyway.

00:05:32.480 --> 00:05:34.340
So when we are adding a user,

00:05:34.340 --> 00:05:37.460
I'm going to, I'm going to create a random employee ID.

00:05:37.460 --> 00:05:39.710
So it's not going to be a problem, but the same thing.

00:05:39.710 --> 00:05:41.930
And so this is a getMethod, right?

00:05:41.930 --> 00:05:47.930
So what will happen if you run them at I supposed method not allowed.

00:05:47.930 --> 00:05:52.415
You need to understand what are the different error messages are coming from newer APIs.

00:05:52.415 --> 00:05:54.170
So based on the error message itself,

00:05:54.170 --> 00:05:55.700
you can understand, okay,

00:05:55.700 --> 00:05:57.830
this is a problem, that there is a possibility.

00:05:57.830 --> 00:06:01.220
So you might modify the URL and you hit some requisites working.

00:06:01.220 --> 00:06:03.350
And then again you are replacing some other you are.

00:06:03.350 --> 00:06:05.090
But that particular method is that GET method,

00:06:05.090 --> 00:06:08.795
but you forgot to change the get method here.

00:06:08.795 --> 00:06:11.869
So these things that happen in everyday basis.

00:06:11.869 --> 00:06:17.510
So learn the error messages are undetermined error messages,

00:06:17.510 --> 00:06:22.310
it'll be easy for us to get in involved with the spring boat.

00:06:22.310 --> 00:06:24.560
So in the next video we're going to try another get

00:06:24.560 --> 00:06:28.140
mapping method for search for a specific employee.
