WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.665
Hello everyone, Welcome back.

00:00:01.665 --> 00:00:03.855
So let's go back to our employee Ripper controller.

00:00:03.855 --> 00:00:05.880
So we did add at the department.

00:00:05.880 --> 00:00:08.160
So now let's go back to our controller will see

00:00:08.160 --> 00:00:10.665
we have one more method for delete mapping.

00:00:10.665 --> 00:00:14.805
So let's replicate them at that which we've done repository.

00:00:14.805 --> 00:00:17.400
Okay, so what we're trying to do,

00:00:17.400 --> 00:00:21.240
we're trying to delete the employee.

00:00:21.240 --> 00:00:24.720
So I'm going to use the JPA employee,

00:00:24.720 --> 00:00:26.515
maybe I can new stuff live.

00:00:26.515 --> 00:00:31.655
So JPA employee and the delete operation and I had to provide the employee ID.

00:00:31.655 --> 00:00:34.400
Right? And one important thing we are going to

00:00:34.400 --> 00:00:37.280
call the service because we're going to use the repository.

00:00:37.280 --> 00:00:38.015
Which repository?

00:00:38.015 --> 00:00:41.660
It's the employer eight, so it's going to be employee repository.

00:00:41.660 --> 00:00:47.370
And then what do we need to do?

00:00:47.740 --> 00:00:52.340
Delete employee which accepts a entity.

00:00:52.340 --> 00:00:56.910
Okay, so we did something wrong here. Let's go back.

00:00:58.150 --> 00:01:02.375
Okay, so first thing we need to find out the employee,

00:01:02.375 --> 00:01:03.830
then only we can delete them.

00:01:03.830 --> 00:01:10.325
So employee repository, dot find by ID,

00:01:10.325 --> 00:01:14.270
find by ID, which will give you optional of employees.

00:01:14.270 --> 00:01:16.130
So we don't donate to the employee from it.

00:01:16.130 --> 00:01:17.570
So we're gonna use the get method.

00:01:17.570 --> 00:01:22.310
So now Employee ID, so long right in here.

00:01:22.310 --> 00:01:25.040
So employee ID, okay,

00:01:25.040 --> 00:01:27.185
so now we have the employee and we have the check here.

00:01:27.185 --> 00:01:29.000
If employees not fun, what I need to do,

00:01:29.000 --> 00:01:30.935
I need to trigger our response.

00:01:30.935 --> 00:01:35.660
The next thing, so now we have an employee exist all we need to do

00:01:35.660 --> 00:01:40.985
those employer repository and delete the employee from the database.

00:01:40.985 --> 00:01:42.930
So a and B.

00:01:43.000 --> 00:01:49.410
So save it and just rebuild your application one more time.

00:01:52.470 --> 00:01:55.730
Applications getting started.

00:01:59.640 --> 00:02:03.580
You could say you set up the formatting slaughter weird because I enable

00:02:03.580 --> 00:02:07.910
the debug level in our obligation and property.

00:02:09.450 --> 00:02:13.165
Okay, so our sorrow is up and running in the AIDS rate when port.

00:02:13.165 --> 00:02:14.425
Let's go back to the controller.

00:02:14.425 --> 00:02:17.440
So this is a, this is the URL I'm trying to heap now.

00:02:17.440 --> 00:02:20.020
So let's copy this and go back to the postman.

00:02:20.020 --> 00:02:22.255
And let's create a new Murdoch, I mean,

00:02:22.255 --> 00:02:25.330
a new request here and it's going to be a delete one.

00:02:25.330 --> 00:02:33.075
So http, localhost 881,

00:02:33.075 --> 00:02:36.980
lash based on Okay,

00:02:36.980 --> 00:02:40.610
it's going to be last JPA employed.

00:02:40.610 --> 00:02:41.750
But here what we need to do,

00:02:41.750 --> 00:02:44.915
we need to provide any employee ID which I wanted to delete.

00:02:44.915 --> 00:02:49.010
Okay, So let's go back and provide any employee ID.

00:02:49.010 --> 00:02:50.465
So let's do something here.

00:02:50.465 --> 00:02:51.920
So we have RDS,

00:02:51.920 --> 00:02:56.495
MySQL DB employee under we have seven different employees.

00:02:56.495 --> 00:02:58.175
So which one we can choose it.

00:02:58.175 --> 00:03:00.620
Let's try Employee 2.

00:03:00.620 --> 00:03:04.625
So let's see how many records are available indeed, department as well.

00:03:04.625 --> 00:03:07.775
For employee to we have to record the newer departments.

00:03:07.775 --> 00:03:10.040
So I'm going to use two.

00:03:10.040 --> 00:03:13.220
Okay, so I'm gonna hit Send now.

00:03:13.220 --> 00:03:16.804
Okay, So 200, which means success.

00:03:16.804 --> 00:03:20.795
So now we need to verify whether that imply got deleted or not.

00:03:20.795 --> 00:03:24.770
So let's go back to that getMethod because the get method,

00:03:24.770 --> 00:03:26.180
it will kill all the employees, right.

00:03:26.180 --> 00:03:28.655
Let check whether the employee ID 2 is available.

00:03:28.655 --> 00:03:29.990
Id is one available.

00:03:29.990 --> 00:03:31.235
I did three is available.

00:03:31.235 --> 00:03:33.590
Id for is element two is not available.

00:03:33.590 --> 00:03:37.145
So let's go back and check in the database itself.

00:03:37.145 --> 00:03:39.845
So here I would need to check D.

00:03:39.845 --> 00:03:40.805
Okay.

00:03:40.805 --> 00:03:43.115
See, I don't have the employee ID two

00:03:43.115 --> 00:03:47.270
because two is the employee ID which we deleted from the database.

00:03:47.270 --> 00:03:49.865
Right. And it is not available here.

00:03:49.865 --> 00:03:50.600
Okay.

00:03:50.600 --> 00:03:55.280
So Employee ID to contain some additional information that department right.

00:03:55.280 --> 00:03:58.085
So let's see whether those information are available.

00:03:58.085 --> 00:04:02.435
See those information are still available.

00:04:02.435 --> 00:04:08.090
So we need to find out why the child table information or not deleted.

00:04:08.090 --> 00:04:10.160
And is there any specific reason for it?

00:04:10.160 --> 00:04:11.555
Yes, it does.

00:04:11.555 --> 00:04:16.550
When you're going back to just go back to the employee entity, right?

00:04:16.550 --> 00:04:19.940
But here we have a one-to-many relationship map, very employee,

00:04:19.940 --> 00:04:23.855
we need to explicitly specify the cascade type,

00:04:23.855 --> 00:04:27.725
which means whenever you are trying to do something with the employee,

00:04:27.725 --> 00:04:30.440
will it impact your department whether you're

00:04:30.440 --> 00:04:33.380
updating or deleting or doing something else.

00:04:33.380 --> 00:04:35.705
So we have something called a cascade.

00:04:35.705 --> 00:04:38.000
You have to provide the cascade type.

00:04:38.000 --> 00:04:40.280
So cascade all means.

00:04:40.280 --> 00:04:42.560
It will work on the Insert,

00:04:42.560 --> 00:04:44.180
select the updated everything,

00:04:44.180 --> 00:04:49.010
or you want to only perform the casket operation whenever the remove operation happens.

00:04:49.010 --> 00:04:53.150
So in that scenario we can use the cascade it type dot demo.

00:04:53.150 --> 00:04:55.670
So now I just modify one of these things.

00:04:55.670 --> 00:04:59.179
And now what I'm gonna do a study where application.

00:04:59.179 --> 00:05:02.525
So some while.

00:05:02.525 --> 00:05:05.990
Meanwhile, what we can do is let's go back to our database.

00:05:05.990 --> 00:05:07.190
We'll find out what are the

00:05:07.190 --> 00:05:12.230
common any employee which contains records in the both tables.

00:05:12.230 --> 00:05:14.660
So department I have our employee one right.

00:05:14.660 --> 00:05:16.550
Employed one has that I caught.

00:05:16.550 --> 00:05:19.670
So okay.

00:05:19.670 --> 00:05:24.230
So employee ID one has the record indie deep employee at the same time dependent assets.

00:05:24.230 --> 00:05:26.960
And now we're going to pass the Employee ID one and we'll see

00:05:26.960 --> 00:05:30.515
whether it is deleting the information from both the tables.

00:05:30.515 --> 00:05:34.730
So let's go back to our ID to see whether our obligations up and running.

00:05:34.730 --> 00:05:41.105
It's still starting. Okay, so our application is up and running.

00:05:41.105 --> 00:05:47.405
Let's go back to our postmen and the ID which I'm going to pass now,

00:05:47.405 --> 00:05:51.320
one because it has the entry in the employee and the department asked,

00:05:51.320 --> 00:05:53.450
Well, let's click Send.

00:05:53.450 --> 00:05:56.854
Yes. 200, which means it's a successful.

00:05:56.854 --> 00:06:02.210
Let's go back and validate the data so the employee ID 1 is existing.

00:06:02.210 --> 00:06:04.205
Now I'm going to refresh the query.

00:06:04.205 --> 00:06:08.539
See employee one is gone now it got deleted from the employee.

00:06:08.539 --> 00:06:10.580
Let's check in the department I sell whether we have

00:06:10.580 --> 00:06:13.835
the employee ID associated record available.

00:06:13.835 --> 00:06:17.000
See what happened. There is no associated occur for

00:06:17.000 --> 00:06:20.720
the employee ID one because we have the cascade type S remove,

00:06:20.720 --> 00:06:23.840
which means whenever some delete operation happening automatically delete the record

00:06:23.840 --> 00:06:28.380
from the child table as well.
