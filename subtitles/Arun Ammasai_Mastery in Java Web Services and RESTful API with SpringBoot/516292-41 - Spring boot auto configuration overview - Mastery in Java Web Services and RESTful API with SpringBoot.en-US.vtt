WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:01.680
Hello everyone, Welcome back.

00:00:01.680 --> 00:00:04.425
So the next thing we need to know how the mapping is happening,

00:00:04.425 --> 00:00:06.330
how the satellite dispatcher are working,

00:00:06.330 --> 00:00:08.565
because our left dispatcher is a one is

00:00:08.565 --> 00:00:11.355
responsible for handling the request and response.

00:00:11.355 --> 00:00:11.895
Correct.

00:00:11.895 --> 00:00:16.575
But how it is handled here because we didn't do any specific request is I mean,

00:00:16.575 --> 00:00:17.820
that's our dispatcher, right?

00:00:17.820 --> 00:00:20.790
Because it automatically then when you choose

00:00:20.790 --> 00:00:24.180
the spring web application when you're creating the project.

00:00:24.180 --> 00:00:26.745
So to see the detail information,

00:00:26.745 --> 00:00:29.460
meaning to enable the debug mode,

00:00:29.460 --> 00:00:31.680
so which will give you additional information.

00:00:31.680 --> 00:00:38.020
So all you need to do is so logging level

00:00:38.030 --> 00:00:47.030
or G dot spring frame work is equal to put it in a debug mode.

00:00:47.030 --> 00:00:48.590
So just save it.

00:00:48.590 --> 00:00:51.380
So logging dot-dot-dot or you didn't Spring framework.

00:00:51.380 --> 00:01:00.140
So now all we need to do just render application and see the console.

00:01:00.140 --> 00:01:02.540
Now you see lot of different content here.

00:01:02.540 --> 00:01:05.540
Initially it's just ten to 20 lines of a code red,

00:01:05.540 --> 00:01:08.630
but now we are running in a debug mode.

00:01:08.630 --> 00:01:10.640
I'm not running your applications that debug mode.

00:01:10.640 --> 00:01:13.534
I enabled the debug for the application.

00:01:13.534 --> 00:01:16.100
So now it'll give you a lot of additional information.

00:01:16.100 --> 00:01:18.420
Let's have a look at it.

00:01:26.430 --> 00:01:30.140
See that a lot of things happening now.

00:01:31.200 --> 00:01:35.560
It is bad. So now let's minimize it.

00:01:35.560 --> 00:01:42.320
We need to increase or decrease the font size so we can see the information clearly.

00:01:43.500 --> 00:01:45.805
So I just maximize this.

00:01:45.805 --> 00:01:49.750
Okay, so just have a look at the logs that you created.

00:01:49.750 --> 00:01:53.749
So let's go back to the beginning so we can see all of them.

00:01:55.470 --> 00:01:57.280
Okay?

00:01:57.280 --> 00:02:01.285
So here where it started,

00:02:01.285 --> 00:02:04.600
okay, so everything is started here.

00:02:04.600 --> 00:02:08.435
So creating a beans, these beans,

00:02:08.435 --> 00:02:10.490
we are not even used,

00:02:10.490 --> 00:02:15.215
I mean manually, but those things are automatically created.

00:02:15.215 --> 00:02:17.720
So how those things are created, okay,

00:02:17.720 --> 00:02:21.080
That is the reason the rest APIs so

00:02:21.080 --> 00:02:23.150
powerful because you don't have to do

00:02:23.150 --> 00:02:25.850
any specific coding to handle the requests and responses.

00:02:25.850 --> 00:02:28.910
So let's see how this our dispatcher is mapped to here.

00:02:28.910 --> 00:02:31.160
So let's come down here.

00:02:31.160 --> 00:02:33.635
We should be able to see somewhere in a boat here.

00:02:33.635 --> 00:02:35.330
So the server is started here,

00:02:35.330 --> 00:02:37.190
okay, which is good. Take a look at it.

00:02:37.190 --> 00:02:39.170
Local host initiating m,

00:02:39.170 --> 00:02:40.760
but with publication contexts.

00:02:40.760 --> 00:02:43.670
So this is a place where the application context, it's loader.

00:02:43.670 --> 00:02:46.985
Okay, So which means our dispatch below this.

00:02:46.985 --> 00:02:50.585
Okay, so let's just have a look at this particular line.

00:02:50.585 --> 00:02:53.360
See dispatcher servlet.

00:02:53.360 --> 00:02:55.190
So this is a root.

00:02:55.190 --> 00:02:57.755
So localhost and the port number and this slash,

00:02:57.755 --> 00:03:01.265
everything is taken care by the dispatcher servlet.

00:03:01.265 --> 00:03:04.040
So this configuration we have done manually when you're

00:03:04.040 --> 00:03:06.935
doing for these soap web services, right?

00:03:06.935 --> 00:03:10.250
So and there are a lot of things which created as part of

00:03:10.250 --> 00:03:13.955
the back-end process because we are using lot of dependencies, right?

00:03:13.955 --> 00:03:16.730
Because we may not use it directly,

00:03:16.730 --> 00:03:19.820
but we are requiring them in the back-end process.

00:03:19.820 --> 00:03:21.740
Miscibility or not, we don't have any

00:03:21.740 --> 00:03:26.405
explicit at Tomcat server here about how our application is up and running.

00:03:26.405 --> 00:03:29.120
Because we have the Tom cat jazz available,

00:03:29.120 --> 00:03:32.405
which will create a standalone Apache service.

00:03:32.405 --> 00:03:36.080
Those things has been done through the creating mean in the background.

00:03:36.080 --> 00:03:38.645
So if you have a dime just open the landfill,

00:03:38.645 --> 00:03:40.625
can put it into some separate text file

00:03:40.625 --> 00:03:43.745
and you can reach out to each and every one of them.

00:03:43.745 --> 00:03:46.700
So if you take a look at it, it's creating the beans

00:03:46.700 --> 00:03:50.555
for your MVC, for front-end, back-end.

00:03:50.555 --> 00:03:53.750
And that is why we have the MVC pattern fossa, right?

00:03:53.750 --> 00:03:55.265
We know the purpose of MBC,

00:03:55.265 --> 00:03:56.540
so we can have the front-end,

00:03:56.540 --> 00:03:58.770
back-end along to get there.

00:04:00.190 --> 00:04:02.690
But we need to understand,

00:04:02.690 --> 00:04:05.600
we do have some explicit mapping, right?

00:04:05.600 --> 00:04:08.435
Like under the welcome control,

00:04:08.435 --> 00:04:11.360
we have something like welcome dot MSC, these things, right?

00:04:11.360 --> 00:04:12.470
These are manual mapping, right?

00:04:12.470 --> 00:04:15.215
So is there available in the logs?

00:04:15.215 --> 00:04:19.250
It has to be available because when this particular you are hates,

00:04:19.250 --> 00:04:22.655
it needs to know which bin has to look for.

00:04:22.655 --> 00:04:25.140
So let's search it.

00:04:25.870 --> 00:04:28.460
So we can't search the entire log here.

00:04:28.460 --> 00:04:35.750
So what I'm gonna do, I'm gonna find a welcome message here. Okay, So here.

00:04:35.750 --> 00:04:40.460
So welcome controller or anything else?

00:04:40.460 --> 00:04:43.280
Okay, I won't be able to find it here.

00:04:43.280 --> 00:04:45.605
Let me try to see this.

00:04:45.605 --> 00:04:47.885
So welcome.

00:04:47.885 --> 00:04:50.885
See here the welcome controller.

00:04:50.885 --> 00:04:52.700
So the mean has been created for

00:04:52.700 --> 00:04:57.455
our welcome Quintin welcome controller is nothing but the class which we created.

00:04:57.455 --> 00:04:59.705
So for that particular class,

00:04:59.705 --> 00:05:02.735
the beam will be automatically created when the application launches.

00:05:02.735 --> 00:05:06.980
So let's go down and see what other things are available.

00:05:06.980 --> 00:05:09.980
And I will compare chain and this is a fine.

00:05:09.980 --> 00:05:12.895
Okay, so everything we do,

00:05:12.895 --> 00:05:14.570
it'll be taken get automatically

00:05:14.570 --> 00:05:17.374
even we haven't talked about the auto wide functionality.

00:05:17.374 --> 00:05:20.059
So auto white and I'll, it's even much advanced.

00:05:20.059 --> 00:05:23.495
But variation shall we'll talk about that in the data point.

00:05:23.495 --> 00:05:24.960
Thank you.
