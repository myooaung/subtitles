WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.410 --> 00:00:03.240
When building WordPress themes,

00:00:03.240 --> 00:00:06.600
it is really important we consider that not everybody who

00:00:06.600 --> 00:00:10.365
used our themes may speak the same language as us.

00:00:10.365 --> 00:00:13.620
Now most of us don't have the ability to fully translate

00:00:13.620 --> 00:00:17.250
our themes word for word into many other languages.

00:00:17.250 --> 00:00:20.370
However, as a theme developer, we don't need to.

00:00:20.370 --> 00:00:23.310
What we can do though is develop our theme in

00:00:23.310 --> 00:00:26.310
a way so we can easily be translated by others,

00:00:26.310 --> 00:00:29.610
or in other words, make our theme translation ready,

00:00:29.610 --> 00:00:33.165
and this process is called internationalization.

00:00:33.165 --> 00:00:37.965
It is also another term you may also hear called localization.

00:00:37.965 --> 00:00:42.225
This is the process of somebody actually translating the words in our theme,

00:00:42.225 --> 00:00:44.825
and I we'll take a look at this in the next video.

00:00:44.825 --> 00:00:47.370
To actually make our theme translation ready,

00:00:47.370 --> 00:00:50.155
it's not really as difficult as it may sound.

00:00:50.155 --> 00:00:54.200
WordPress provides us with some localization functions which

00:00:54.200 --> 00:00:58.190
we use to wrap any text we want to be available for translation,

00:00:58.190 --> 00:01:01.825
and we've used these multiple times in our theme already.

00:01:01.825 --> 00:01:04.850
Just before we begin now in our theme,

00:01:04.850 --> 00:01:09.095
we no longer need the HTML files from earlier when we use Bootstrap.

00:01:09.095 --> 00:01:11.965
So we can remove the blogs of HTML.

00:01:11.965 --> 00:01:14.970
Delete this file from our project,

00:01:14.970 --> 00:01:17.700
and the same for the contact.

00:01:17.700 --> 00:01:23.595
Since have already removed the contents of these into our PHP files,

00:01:23.595 --> 00:01:28.385
I'm going to go through some various methods beginning with the most simple,

00:01:28.385 --> 00:01:30.740
which is a basic tech string,

00:01:30.740 --> 00:01:34.140
and there are plenty of these in the front-page.php.

00:01:34.550 --> 00:01:41.720
Let's open this up and if we look for some texts such as spa facilities here,

00:01:41.720 --> 00:01:44.960
we will have a simple piece of text and all we need to do to make

00:01:44.960 --> 00:01:49.780
this translatable is to wrap it inside of a function like this.

00:01:49.780 --> 00:01:52.870
Let's first cut this out,

00:01:53.000 --> 00:01:55.835
create our PHP wrapper,

00:01:55.835 --> 00:01:58.190
use the double underscores,

00:01:58.190 --> 00:02:01.585
and then we can paste in our text as a string.

00:02:01.585 --> 00:02:05.280
The second argument is the text domain.

00:02:05.280 --> 00:02:10.010
This is tranquilwp, and this text domain must match

00:02:10.010 --> 00:02:15.870
the text domain we added in the style.css up at the top here.

00:02:16.730 --> 00:02:19.910
As in this text domain will effectively grouped

00:02:19.910 --> 00:02:23.645
together all of our translations for our theme,

00:02:23.645 --> 00:02:29.290
and distinguish them from translatable text from other themes or plug-ins.

00:02:29.290 --> 00:02:31.680
I'm not going to go through each string on

00:02:31.680 --> 00:02:35.045
this page since the process is exactly the same,

00:02:35.045 --> 00:02:37.040
and this is something you can go ahead and do

00:02:37.040 --> 00:02:40.070
yourself if you would like as more practice.

00:02:40.070 --> 00:02:44.990
Instead though, I'm going to show you how to handle some other types of string output in,

00:02:44.990 --> 00:02:47.330
such as when we use the echo.

00:02:47.330 --> 00:02:50.730
Let's go over to the functions,

00:02:52.250 --> 00:02:56.540
and inside here we've used the underscore e function,

00:02:56.540 --> 00:03:00.215
let's go down a castaway search for underscore

00:03:00.215 --> 00:03:07.270
e. I've used them here inside of our feature text function.

00:03:07.270 --> 00:03:13.190
This is good because this WordPress function is already translatable by default,

00:03:13.190 --> 00:03:17.905
all we need to do is add the text domain as the second argument.

00:03:17.905 --> 00:03:22.040
So add in tranquilwp, and of course we

00:03:22.040 --> 00:03:25.925
can do the same for all of the underscore e functions in our theme,

00:03:25.925 --> 00:03:31.330
or you can go on better with this too by escaping our strings at the same time.

00:03:31.330 --> 00:03:36.560
WordPress also provides us with some functions which both escapable strings,

00:03:36.560 --> 00:03:39.505
all would make them translation ready.

00:03:39.505 --> 00:03:42.815
Escape in a string is the process of removing

00:03:42.815 --> 00:03:47.584
any amount of characters so it's safe to output as HTML,

00:03:47.584 --> 00:03:50.960
such as the esc_html_e function,

00:03:50.960 --> 00:03:53.230
which we add just like this.

00:03:53.230 --> 00:03:58.544
So before our e, we can add escape, HTML,

00:03:58.544 --> 00:04:04.810
underscore e, and this can also be good practice to add to all of the strings too.

00:04:04.810 --> 00:04:08.970
Below this we also have the printf function.

00:04:08.970 --> 00:04:12.265
Both the printf and sprintf functions,

00:04:12.265 --> 00:04:15.785
will display a string of text with a variable inside,

00:04:15.785 --> 00:04:19.579
just as we've used here with the symbol.

00:04:19.579 --> 00:04:22.715
This function is also translatable,

00:04:22.715 --> 00:04:26.690
so all we need to do for WordPress to recognize this is to again

00:04:26.690 --> 00:04:31.260
add our second arguments of our texts domain of tranquilwp.

00:04:31.850 --> 00:04:36.255
Next up we have the comment stop PHP templates.

00:04:36.255 --> 00:04:38.295
So let's go over to here.

00:04:38.295 --> 00:04:44.350
The comments.php file also has some examples of translatable functions.

00:04:44.350 --> 00:04:46.435
This is also using printf,

00:04:46.435 --> 00:04:47.885
just as we used before,

00:04:47.885 --> 00:04:50.030
but also nested inside.

00:04:50.030 --> 00:04:52.065
If we take a look for this,

00:04:52.065 --> 00:04:56.780
is the underscore x function and underscore nx.

00:04:56.780 --> 00:05:00.339
Although these are a little more complex to understand,

00:05:00.339 --> 00:05:02.770
translation could be easier.

00:05:02.770 --> 00:05:06.714
Both of these functions are translation ready by default,

00:05:06.714 --> 00:05:11.035
and both take in the same text domain as the last parameters.

00:05:11.035 --> 00:05:15.760
So first of all, the underscore x just above the closing bracket,

00:05:15.760 --> 00:05:17.650
we can add a comma,

00:05:17.650 --> 00:05:22.640
then also pass in our text domain of tranquilwp.

00:05:22.880 --> 00:05:27.585
We'll also do the same below for our underscore nx function,

00:05:27.585 --> 00:05:29.670
just after the comments title,

00:05:29.670 --> 00:05:32.920
the last parameter of tranquilwp.

00:05:33.800 --> 00:05:38.374
The last thing I want to show you is how to deal with WordPress functions,

00:05:38.374 --> 00:05:40.550
which will take in a string as a parameter.

00:05:40.550 --> 00:05:46.140
We have an example of this over in the index.php.

00:05:46.220 --> 00:05:53.850
Head over to there, and then if we look for the tags which is inside of the loop,

00:05:53.850 --> 00:05:55.440
in the tagged function,

00:05:55.440 --> 00:05:59.374
we've added the string we want to use as an optional parameter,

00:05:59.374 --> 00:06:02.090
and we can also make these texts translatable.

00:06:02.090 --> 00:06:07.270
All we need to do is wrap the text inside of a translatable function,

00:06:07.270 --> 00:06:11.025
so let's cut out all of the contents,

00:06:11.025 --> 00:06:12.560
and then just like we looked at before,

00:06:12.560 --> 00:06:14.840
we can use the double underscores,

00:06:14.840 --> 00:06:16.550
open up the brackets,

00:06:16.550 --> 00:06:19.435
and then paste in the text inside.

00:06:19.435 --> 00:06:22.384
Then we add in our final arguments,

00:06:22.384 --> 00:06:25.450
which is our text domain of tranquilwp,

00:06:25.450 --> 00:06:29.015
and this is all we need to do to wrap our text

00:06:29.015 --> 00:06:32.450
from a function argument to make it translation ready.

00:06:32.450 --> 00:06:36.065
This is how we can prepare our theme for translation,

00:06:36.065 --> 00:06:38.705
and it's not too difficult to accomplish.

00:06:38.705 --> 00:06:41.510
If you would like to carry on with the rest of the theme,

00:06:41.510 --> 00:06:45.065
go ahead and do things in the same way as we've just seen,

00:06:45.065 --> 00:06:48.020
but next up we will look at the process of actually

00:06:48.020 --> 00:06:52.140
translating this text into other languages.
