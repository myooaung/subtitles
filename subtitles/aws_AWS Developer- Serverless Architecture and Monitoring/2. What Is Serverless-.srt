1
00:00:00,940 --> 00:00:05,800
Oftentimes, when certain terms and technology become what I might call buzzwords,

2
00:00:05,800 --> 00:00:09,070
it can often become difficult to get to the bottom of what

3
00:00:09,070 --> 00:00:12,120
they truly mean and how it can impact you.

4
00:00:12,120 --> 00:00:15,540
Cloud is definitely one of those words that dominated the

5
00:00:15,540 --> 00:00:19,600
technology conscious for many years as companies looked at what

6
00:00:19,600 --> 00:00:22,070
migrating to the cloud could do for them.

7
00:00:22,070 --> 00:00:26,020
It became so prevalent that memes developed around the

8
00:00:26,020 --> 00:00:28,950
cloud solving all the world's woes.

9
00:00:28,950 --> 00:00:34,200
Well, the term serverless has reached that same level of notoriety now,

10
00:00:34,200 --> 00:00:38,510
and I feel the need to really pull apart the facts from anything you

11
00:00:38,510 --> 00:00:41,530
may have heard that doesn't really jive with reality.

12
00:00:41,530 --> 00:00:46,740
So let's start by putting the emergence of serverless into perspective.

13
00:00:46,740 --> 00:00:48,320
In the early days of the web,

14
00:00:48,320 --> 00:00:50,790
companies would need to purchase their own infrastructure,

15
00:00:50,790 --> 00:00:53,690
such as servers and networking appliances,

16
00:00:53,690 --> 00:00:56,840
in order to properly maintain a web application.

17
00:00:56,840 --> 00:01:00,740
Then the cloud came along and disrupted that entire practice by

18
00:01:00,740 --> 00:01:04,170
relieving businesses of the burden of owning hardware.

19
00:01:04,170 --> 00:01:09,830
Platforms like AWS virtualized the hardware required to run applications and

20
00:01:09,830 --> 00:01:13,800
let users control infrastructure through GUIs and APIs.

21
00:01:13,800 --> 00:01:18,120
That change from on‑premises to the cloud was world‑changing,

22
00:01:18,120 --> 00:01:22,020
and many businesses are still going through extensive

23
00:01:22,020 --> 00:01:24,640
migrations to make the most of the cloud.

24
00:01:24,640 --> 00:01:28,990
When AWS introduced its Lambda service in late‑2014,

25
00:01:28,990 --> 00:01:33,370
it inadvertently created the final piece of the serverless puzzle.

26
00:01:33,370 --> 00:01:37,030
While there were some services that AWS offered before

27
00:01:37,030 --> 00:01:39,440
Lambda that fit the serverless model,

28
00:01:39,440 --> 00:01:44,920
Lambda made true serverless applications a reality in AWS. The

29
00:01:44,920 --> 00:01:48,240
advent of serverless meant that not only did businesses not

30
00:01:48,240 --> 00:01:50,220
have to manage physical servers,

31
00:01:50,220 --> 00:01:53,660
they didn't even have to manage virtual servers anymore either.

32
00:01:53,660 --> 00:01:54,290
In addition,

33
00:01:54,290 --> 00:01:57,260
the cost model that had been flipped on its head with cloud

34
00:01:57,260 --> 00:02:00,680
billing was once again revolutionized with serverless's

35
00:02:00,680 --> 00:02:03,440
pay‑only‑for‑what‑you‑use model.

36
00:02:03,440 --> 00:02:06,900
I think the serverless revolution could be as big as the cloud

37
00:02:06,900 --> 00:02:10,160
revolution, and it really has only just begun.

38
00:02:10,160 --> 00:02:13,870
So let's get into some specifics about serverless. The key

39
00:02:13,870 --> 00:02:17,000
aspects of serverless are the following. A completely

40
00:02:17,000 --> 00:02:20,830
abstracted infrastructure. With serverless, you don't know what

41
00:02:20,830 --> 00:02:22,620
instances your code is running on,

42
00:02:22,620 --> 00:02:26,730
how it's scaling, or any of the other multitude of concerns you have to keep

43
00:02:26,730 --> 00:02:30,400
track of with server management. Pay for what you use.

44
00:02:30,400 --> 00:02:32,930
Since you're not managing the infrastructure,

45
00:02:32,930 --> 00:02:36,560
you don't need to pay for it when your application isn't using it.

46
00:02:36,560 --> 00:02:40,160
Say goodbye to idling servers eating up your wallet.

47
00:02:40,160 --> 00:02:42,810
Stateless. With any serverless service,

48
00:02:42,810 --> 00:02:46,180
you won't be storing state and your compute layer. You would

49
00:02:46,180 --> 00:02:50,270
have to rely on explicit persistence like a cache or a

50
00:02:50,270 --> 00:02:52,920
database to preserve your state.

51
00:02:52,920 --> 00:02:55,620
Event based. The way that things happen in a

52
00:02:55,620 --> 00:02:58,170
serverless application are from events,

53
00:02:58,170 --> 00:03:03,140
whether it's HTTP events or scheduler events or messaging events.

54
00:03:03,140 --> 00:03:06,790
Things happen from explicit events, and you'll need to think about

55
00:03:06,790 --> 00:03:10,850
your architecture with that communication model in mind. These

56
00:03:10,850 --> 00:03:14,300
aspects will play a large role in how you will architect and write

57
00:03:14,300 --> 00:03:15,940
code for your application.

58
00:03:15,940 --> 00:03:19,100
A serverless application is quite different than a regular

59
00:03:19,100 --> 00:03:21,440
web application running on a server.

60
00:03:21,440 --> 00:03:27,000
In the next video, let's take a look at how to architect a serverless application.

