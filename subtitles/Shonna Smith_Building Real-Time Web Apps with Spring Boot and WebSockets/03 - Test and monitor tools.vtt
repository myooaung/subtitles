WEBVTT
1
00:00:01.010 --> 00:00:02.030
- [Instructor] Let's finish up our learning

2
00:00:02.030 --> 00:00:06.040
with some mentioning of testing and monitoring tools.

3
00:00:06.040 --> 00:00:09.050
Most modern browsers have a feature called developer tools

4
00:00:09.050 --> 00:00:11.000
and it'll get you pretty far

5
00:00:11.000 --> 00:00:13.060
in your testing and monitoring of your chat app client

6
00:00:13.060 --> 00:00:15.060
so let's not overlook that.

7
00:00:15.060 --> 00:00:18.080
However, there are a few other tools worth mentioning

8
00:00:18.080 --> 00:00:22.090
that may help you in doing some more bulletproof testing.

9
00:00:22.090 --> 00:00:26.020
First, if you wanna stick to using client-side tech

10
00:00:26.020 --> 00:00:28.080
to test your client-side code,

11
00:00:28.080 --> 00:00:31.060
you may wanna look at a tool called Artillery

12
00:00:31.060 --> 00:00:33.070
or a similar tool.

13
00:00:33.070 --> 00:00:36.030
In particular, Artillery is an easy-to-use

14
00:00:36.030 --> 00:00:37.080
load testing toolkit.

15
00:00:37.080 --> 00:00:39.000
It's written in Node,

16
00:00:39.000 --> 00:00:42.000
but you don't need to know Node to use it

17
00:00:42.000 --> 00:00:45.010
and you can be up and running with it within minutes.

18
00:00:45.010 --> 00:00:47.070
They have documentation with an example of using it

19
00:00:47.070 --> 00:00:49.050
for WebSocket testing.

20
00:00:49.050 --> 00:00:53.040
The next test tool to consider is Apache's JMeter

21
00:00:53.040 --> 00:00:55.020
or something comparable.

22
00:00:55.020 --> 00:00:58.040
Again, this is for load and performance testing.

23
00:00:58.040 --> 00:01:02.050
It's written in Java and has a fully featured test IDE

24
00:01:02.050 --> 00:01:05.010
which gives you that record and playback capability

25
00:01:05.010 --> 00:01:07.050
so you can record your test scripts.

26
00:01:07.050 --> 00:01:11.030
And let's return back to some server-side testing.

27
00:01:11.030 --> 00:01:13.060
I can't say enough how useful it is

28
00:01:13.060 --> 00:01:15.080
to write unit and integration tests

29
00:01:15.080 --> 00:01:19.030
and frameworks like JUnit, HttpUnit,

30
00:01:19.030 --> 00:01:22.020
or collectively we'll refer to them as xUnit.

31
00:01:22.020 --> 00:01:24.030
Given that the bulk of your business logic

32
00:01:24.030 --> 00:01:25.060
may be server-side,

33
00:01:25.060 --> 00:01:27.010
this is where you'll wanna invest

34
00:01:27.010 --> 00:01:29.060
a lot of your test time and effort.

35
00:01:29.060 --> 00:01:30.070
Again, you can learn more

36
00:01:30.070 --> 00:01:33.020
about Spring Test-Driven Development with JUnit

37
00:01:33.020 --> 00:01:36.000
by visiting the library and taking that course.

