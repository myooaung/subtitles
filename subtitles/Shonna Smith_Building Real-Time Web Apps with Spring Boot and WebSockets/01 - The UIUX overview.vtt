WEBVTT
1
00:00:01.000 --> 00:00:02.070
- [Instructor] So, we finished implementing and testing

2
00:00:02.070 --> 00:00:04.080
our server-side app code.

3
00:00:04.080 --> 00:00:07.060
It's now time to look at the user experience

4
00:00:07.060 --> 00:00:09.090
and what we want to achieve with this real-time app

5
00:00:09.090 --> 00:00:11.050
on the client side.

6
00:00:11.050 --> 00:00:13.040
Remember, we're building a chat application

7
00:00:13.040 --> 00:00:16.030
that helps event guests stay in touch with each other

8
00:00:16.030 --> 00:00:20.030
as well as the event host and the event venue staff.

9
00:00:20.030 --> 00:00:21.030
So, let's take a minute here

10
00:00:21.030 --> 00:00:23.020
and remind ourselves of our major features

11
00:00:23.020 --> 00:00:24.090
especially as it relates to implementing

12
00:00:24.090 --> 00:00:27.000
the desired user experience.

13
00:00:27.000 --> 00:00:30.010
Then, we'll take a brief look at the HTML that was needed

14
00:00:30.010 --> 00:00:32.030
to create this user experience.

15
00:00:32.030 --> 00:00:34.000
Our features that we wanna implement are

16
00:00:34.000 --> 00:00:35.050
joining a chat group.

17
00:00:35.050 --> 00:00:37.020
We wanna make sure that once people join,

18
00:00:37.020 --> 00:00:39.030
they can send messages.

19
00:00:39.030 --> 00:00:42.020
And eventually, we want participants to be able to get

20
00:00:42.020 --> 00:00:45.070
real-time updates and cues of interactivity.

21
00:00:45.070 --> 00:00:50.030
So, let's see what that looks like.

22
00:00:50.030 --> 00:00:53.050
So, here's our finished user interface.

23
00:00:53.050 --> 00:00:56.090
We've provided areas for users to join a group

24
00:00:56.090 --> 00:01:00.020
or join the conversation by entering their name.

25
00:01:00.020 --> 00:01:02.020
They can also leave a group.

26
00:01:02.020 --> 00:01:04.070
There's a section for listing members that have joined

27
00:01:04.070 --> 00:01:06.040
once they do join.

28
00:01:06.040 --> 00:01:08.050
And there's a way to show messages

29
00:01:08.050 --> 00:01:10.060
as well as send a message.

30
00:01:10.060 --> 00:01:12.040
Those are the basics.

31
00:01:12.040 --> 00:01:16.030
So now, let's talk about how we're gonna implement this.

32
00:01:16.030 --> 00:01:17.090
While creating the HTML

33
00:01:17.090 --> 00:01:21.030
is definitely out of scope for this lesson,

34
00:01:21.030 --> 00:01:24.000
I did want to point out the essential lines of code

35
00:01:24.000 --> 00:01:27.070
in the HTML that makes the client development possible.

36
00:01:27.070 --> 00:01:30.010
First, there's the two JavaScript libraries

37
00:01:30.010 --> 00:01:31.080
that we have to import

38
00:01:31.080 --> 00:01:35.000
so that we have access to the sockjs API

39
00:01:35.000 --> 00:01:37.040
and the stomp-websocket API.

40
00:01:37.040 --> 00:01:41.090
Lastly, we have to import our own app.js file.

41
00:01:41.090 --> 00:01:43.030
This is where we will write

42
00:01:43.030 --> 00:01:45.040
all of our custom JavaScript code

43
00:01:45.040 --> 00:01:48.000
in our upcoming exercises.

