WEBVTT
1
00:00:01.020 --> 00:00:05.010
- Whenever a message is sent from the browser to the server,

2
00:00:05.010 --> 00:00:09.010
it will first come from the browser as a JSON object.

3
00:00:09.010 --> 00:00:11.040
Once it reaches the server, we will need

4
00:00:11.040 --> 00:00:15.000
to model that object to represent the types of classes

5
00:00:15.000 --> 00:00:17.070
we want to work with in our application.

6
00:00:17.070 --> 00:00:20.040
In this video we're gonna talk about our model classes

7
00:00:20.040 --> 00:00:23.040
that we need for our real time chat app.

8
00:00:23.040 --> 00:00:26.080
We want to model things like the chat participants,

9
00:00:26.080 --> 00:00:30.010
and the chat messages that come from the browser

10
00:00:30.010 --> 00:00:33.030
as well as chat messages that come back from the server.

11
00:00:33.030 --> 00:00:35.080
So let's get started creating our model.

12
00:00:35.080 --> 00:00:40.080
To begin, let's go and open up our model package.

13
00:00:40.080 --> 00:00:44.060
And as you can see here, I have three simple model classes,

14
00:00:44.060 --> 00:00:47.060
just to give you an idea of what we need to do.

15
00:00:47.060 --> 00:00:50.010
I want to begin with creating our ChatInMessage.

16
00:00:50.010 --> 00:00:52.040
So let's begin typing some of our properties

17
00:00:52.040 --> 00:00:54.020
that we'll need.

18
00:00:54.020 --> 00:01:00.030
First we're gonna need a string, to represent our sender ID.

19
00:01:00.030 --> 00:01:05.010
Next, we'll need another string to represent

20
00:01:05.010 --> 00:01:09.050
maybe the sender's name.

21
00:01:09.050 --> 00:01:17.080
And we do need a string to represent the message.

22
00:01:17.080 --> 00:01:23.030
And because, eventually this will be production ready,

23
00:01:23.030 --> 00:01:26.060
we do want represent the timestamp.

24
00:01:26.060 --> 00:01:30.080
So I'm gonna make that a date object for now.

25
00:01:30.080 --> 00:01:32.080
Feel free to change it to a different type as you

26
00:01:32.080 --> 00:01:35.060
evolve this sample application.

27
00:01:35.060 --> 00:01:39.060
So those are all of the properties that we need.

28
00:01:39.060 --> 00:01:42.020
And for our last step, we do want to create our

29
00:01:42.020 --> 00:01:45.010
Getters and Setters for all of our properties.

30
00:01:45.010 --> 00:01:48.070
To do that, we can right click anywhere in the Class,

31
00:01:48.070 --> 00:01:53.090
choose 'Source,' and then, 'Generate Getters and Setters.'

32
00:01:53.090 --> 00:01:56.060
Then, 'Select All,' because we want to create

33
00:01:56.060 --> 00:01:59.080
Getters and Setters for all of our properties,

34
00:01:59.080 --> 00:02:01.090
and click 'OK.'

35
00:02:01.090 --> 00:02:04.070
Now you see all the Getters and Setters done.

36
00:02:04.070 --> 00:02:08.010
And I want to add a little bit of white space

37
00:02:08.010 --> 00:02:11.040
right after our timestamp property.

38
00:02:11.040 --> 00:02:13.070
That's our ChatInMessage.

39
00:02:13.070 --> 00:02:17.010
So this should represent all of the data that we would

40
00:02:17.010 --> 00:02:22.040
expect on any message that comes in from the browser.

41
00:02:22.040 --> 00:02:25.090
Let's set up another model object.

42
00:02:25.090 --> 00:02:28.040
Let's see what our ChatOutMessage.

43
00:02:28.040 --> 00:02:30.070
Now this is going to represent any messages that come

44
00:02:30.070 --> 00:02:34.000
out from the server.

45
00:02:34.000 --> 00:02:38.030
Again, we're going to create some properties, strings again.

46
00:02:38.030 --> 00:02:41.020
So for our ChatOutMessage,

47
00:02:41.020 --> 00:02:47.020
first string is just the content of the message.

48
00:02:47.020 --> 00:02:53.030
And, let's make another string to represent

49
00:02:53.030 --> 00:02:55.010
maybe a group name.

50
00:02:55.010 --> 00:02:57.070
This is going to help us later on, when we want to target

51
00:02:57.070 --> 00:02:59.040
who we're targeting messages at.

52
00:02:59.040 --> 00:03:02.080
Maybe at particular groups, or individuals.

53
00:03:02.080 --> 00:03:05.060
And lastly again,

54
00:03:05.060 --> 00:03:11.000
let's make sure we have a timestamp on these messages.

55
00:03:11.000 --> 00:03:13.000
Alright, so I'm done creating my properties.

56
00:03:13.000 --> 00:03:15.070
And once again I do want to create my accessors,

57
00:03:15.070 --> 00:03:18.000
so all of my Getters and Setters.

58
00:03:18.000 --> 00:03:21.030
I'm gonna click on 'Source.'

59
00:03:21.030 --> 00:03:23.040
Choose 'Generate Getters and Setters.'

60
00:03:23.040 --> 00:03:28.030
And I want to 'Select All.'

61
00:03:28.030 --> 00:03:31.010
And now add a line here right after timestamp,

62
00:03:31.010 --> 00:03:34.050
just to clean this up with a little bit of white space.

63
00:03:34.050 --> 00:03:40.030
And that completes our model object for our ChatOutMessage.

64
00:03:40.030 --> 00:03:46.030
Lastly, I'm gonna go back into my model package.

65
00:03:46.030 --> 00:03:50.080
And because chats involve participants, why not model

66
00:03:50.080 --> 00:03:55.050
a class to represent what a participant might look like?

67
00:03:55.050 --> 00:03:59.020
Again, I'm gonna start with a couple of strings here.

68
00:03:59.020 --> 00:04:04.010
Participant has a first name and, surprise, surprise,

69
00:04:04.010 --> 00:04:08.010
they probably have a last name.

70
00:04:08.010 --> 00:04:11.020
And for the purposes of a chat app, though, you might want

71
00:04:11.020 --> 00:04:13.090
to say they have a short name.

72
00:04:13.090 --> 00:04:16.050
Different applications may call this something else,

73
00:04:16.050 --> 00:04:19.090
but let's call it a short name.

74
00:04:19.090 --> 00:04:25.040
And something new, for our app, we might want to specify

75
00:04:25.040 --> 00:04:27.040
a participant type.

76
00:04:27.040 --> 00:04:31.030
Remember, we're creating this for event guests, event staff,

77
00:04:31.030 --> 00:04:35.020
so we want to be able to specify what type of participant

78
00:04:35.020 --> 00:04:37.010
you are.

79
00:04:37.010 --> 00:04:39.040
Now that I have my properties,

80
00:04:39.040 --> 00:04:44.020
I'm going to add my accessors again by choosing 'Source,'

81
00:04:44.020 --> 00:04:50.080
'Generate Getters and Setters,' I want to 'Select All.'

82
00:04:50.080 --> 00:04:53.090
Generate all of my Getters and Setters again.

83
00:04:53.090 --> 00:04:56.060
And once again right after the participant type, I want

84
00:04:56.060 --> 00:05:01.040
to add some white space here for readability.

85
00:05:01.040 --> 00:05:04.060
And that takes care of enough model classes

86
00:05:04.060 --> 00:05:06.000
just to get you started.

87
00:05:06.000 --> 00:05:09.040
I'm sure you could imagine more, and could create more

88
00:05:09.040 --> 00:05:13.040
as you develop this into a production worthy app.

89
00:05:13.040 --> 00:05:15.010
So let's recap a little bit.

90
00:05:15.010 --> 00:05:18.010
Right now our model is pretty simplistic.

91
00:05:18.010 --> 00:05:22.050
It consists of messages that are sent from the client,

92
00:05:22.050 --> 00:05:24.070
we call that model class the ChatInMessage.

93
00:05:24.070 --> 00:05:26.090
We also create a ChatOutMessage.

94
00:05:26.090 --> 00:05:30.030
This is to represent any messages that come from the server

95
00:05:30.030 --> 00:05:32.040
and are sent to the browser.

96
00:05:32.040 --> 00:05:36.010
We also created a ChatParticipant model class.

97
00:05:36.010 --> 00:05:38.090
This is to represent the fact that there are participants

98
00:05:38.090 --> 00:05:41.070
on both sides of these messages that have names,

99
00:05:41.070 --> 00:05:44.040
and short names, and other properties.

100
00:05:44.040 --> 00:05:47.070
We may develop the model more later, but for now,

101
00:05:47.070 --> 00:05:48.080
this is good enough.

102
00:05:48.080 --> 00:05:51.000
Let's move on to creating our controllers.

