WEBVTT
1
00:00:00.090 --> 00:00:02.070
- So we just created our first controller

2
00:00:02.070 --> 00:00:04.040
to handle the simplest case of

3
00:00:04.040 --> 00:00:07.000
a user sending a message to a destination

4
00:00:07.000 --> 00:00:09.040
and the web socket server broadcasting that message

5
00:00:09.040 --> 00:00:11.060
back to other participants.

6
00:00:11.060 --> 00:00:14.040
For our next coding exercise, we're going to

7
00:00:14.040 --> 00:00:16.040
extend that controller to provide the

8
00:00:16.040 --> 00:00:19.080
hallmark feature of any modern chat app.

9
00:00:19.080 --> 00:00:21.080
We need to provide that visual key

10
00:00:21.080 --> 00:00:24.020
that another participant is typing.

11
00:00:24.020 --> 00:00:27.010
In order to provide that real time update

12
00:00:27.010 --> 00:00:30.010
about users typing, we'll need to implement

13
00:00:30.010 --> 00:00:31.060
a controller handler method

14
00:00:31.060 --> 00:00:35.040
and map the additional topic subscription.

15
00:00:35.040 --> 00:00:38.030
So let's get started so you can see how that's done.

16
00:00:38.030 --> 00:00:43.020
To begin this exercise, I'm going into my controller package

17
00:00:43.020 --> 00:00:46.030
and opening the chat controller class.

18
00:00:46.030 --> 00:00:49.040
I'm gonna double click on the editor for that class

19
00:00:49.040 --> 00:00:54.010
so we can maximize the space that we have.

20
00:00:54.010 --> 00:00:56.050
So we're gonna pick up from where we left off

21
00:00:56.050 --> 00:00:58.080
in our last exercise.

22
00:00:58.080 --> 00:01:01.050
We need to add another method so that we can let

23
00:01:01.050 --> 00:01:04.060
other users know when someone is typing.

24
00:01:04.060 --> 00:01:07.030
So for our next method, we're gonna give it a name

25
00:01:07.030 --> 00:01:11.090
handle user is typing,

26
00:01:11.090 --> 00:01:14.040
something simple enough

27
00:01:14.040 --> 00:01:17.090
and the message signature is going to be

28
00:01:17.090 --> 00:01:20.060
the same as our other method.

29
00:01:20.060 --> 00:01:24.000
So, I'm gonna copy from my incoming argument

30
00:01:24.000 --> 00:01:27.030
a chat in message object.

31
00:01:27.030 --> 00:01:30.020
I'm gonna copy the fact that, for now,

32
00:01:30.020 --> 00:01:32.030
we're just gonna say if any exceptions happen,

33
00:01:32.030 --> 00:01:35.030
this method will throw those exceptions.

34
00:01:35.030 --> 00:01:39.080
Now, to handle this we will not do a simulated delay.

35
00:01:39.080 --> 00:01:46.030
We're just gonna get right to returning a response.

36
00:01:46.030 --> 00:01:50.030
And again, we're gonna use our chat out message object,

37
00:01:50.030 --> 00:01:53.040
to encapsulate any responses that go out.

38
00:01:53.040 --> 00:01:55.020
But for this response,

39
00:01:55.020 --> 00:01:57.070
and for the simplicity of this exercise,

40
00:01:57.070 --> 00:01:59.050
we're just gonna type a simple message.

41
00:01:59.050 --> 00:02:01.060
Someone is typing.

42
00:02:01.060 --> 00:02:04.070
I'm sure you can imagine as you mature this application

43
00:02:04.070 --> 00:02:06.040
you might want to include some logic

44
00:02:06.040 --> 00:02:08.030
so that you can tell who is typing

45
00:02:08.030 --> 00:02:09.090
and send back their name.

46
00:02:09.090 --> 00:02:12.000
But for our purposes, we're just gonna send

47
00:02:12.000 --> 00:02:15.060
a simple message back,

48
00:02:15.060 --> 00:02:19.080
and let's not forget that we also have to

49
00:02:19.080 --> 00:02:25.040
finish this off by adding the correct message mapping.

50
00:02:25.040 --> 00:02:29.070
For our message mapping we're gonna call this

51
00:02:29.070 --> 00:02:33.090
the guest update URI for this controller

52
00:02:33.090 --> 00:02:38.090
and the topic we want to send this back to

53
00:02:38.090 --> 00:02:41.080
again we're gonna prefix that with topic

54
00:02:41.080 --> 00:02:45.050
just as a convention.

55
00:02:45.050 --> 00:02:51.050
And lets call this guest updates.

56
00:02:51.050 --> 00:02:53.050
And that's it, there you have it.

57
00:02:53.050 --> 00:02:55.040
We've made sure that there's now a method

58
00:02:55.040 --> 00:02:58.030
to handle the logic that we want to happen

59
00:02:58.030 --> 00:03:01.030
whenever a user is typing a message.

60
00:03:01.030 --> 00:03:02.090
So quick review

61
00:03:02.090 --> 00:03:05.020
To make sure that we can give our users that

62
00:03:05.020 --> 00:03:07.060
visual indicator, that someone is typing,

63
00:03:07.060 --> 00:03:10.040
we simply had to add another handler method

64
00:03:10.040 --> 00:03:13.050
to our existing chat app controller, and,

65
00:03:13.050 --> 00:03:16.090
as before we had to add the same mappings

66
00:03:16.090 --> 00:03:19.040
and send to annotations.

67
00:03:19.040 --> 00:03:22.000
Next, we'll focus on what we need to do

68
00:03:22.000 --> 00:03:24.000
in our message broker component.

