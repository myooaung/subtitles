WEBVTT
1
00:00:06.060 --> 00:00:08.240
Welcome back to that course in our programming.

2
00:00:08.400 --> 00:00:14.520
In today's tutorial we will learn how to address or extract components of a list.

3
00:00:14.520 --> 00:00:17.000
All right so let's dive straight into it.

4
00:00:17.040 --> 00:00:22.140
There are three ways to extract components of a list.

5
00:00:22.170 --> 00:00:26.520
The first way is through just ordinary square brackets.

6
00:00:26.520 --> 00:00:30.630
This will always return a list.

7
00:00:30.630 --> 00:00:34.140
Second way is through double square brackets.

8
00:00:34.140 --> 00:00:44.480
This will always or will return the actual object within the component and the third way is the dollar

9
00:00:44.480 --> 00:00:45.660
sign.

10
00:00:45.690 --> 00:00:50.610
So this is the same as the double square brackets.

11
00:00:50.610 --> 00:00:54.680
But perdere the are you going to say it's pretty.

12
00:00:54.790 --> 00:00:56.500
Here I just want an always.

13
00:00:56.680 --> 00:01:00.240
OK so let's have a go list are all one.

14
00:01:00.240 --> 00:01:05.520
So just print a list and we see that we have three elements or three components in our list.

15
00:01:05.520 --> 00:01:08.370
Let's start by trying to address this first component.

16
00:01:08.370 --> 00:01:10.290
Let's try all three methods.

17
00:01:10.290 --> 00:01:14.790
So list underscore are all one square brackets one.

18
00:01:15.030 --> 00:01:19.620
Run that as you can see what we call it is it is still a list.

19
00:01:19.620 --> 00:01:27.290
We've still got an A list which has one component machine and it's that vector with one character.

20
00:01:27.300 --> 00:01:28.280
Our old one.

21
00:01:28.290 --> 00:01:34.230
So now if we try the second method list Aurel one and then double brackets one.

22
00:01:34.350 --> 00:01:36.650
What we will get is now is different.

23
00:01:36.650 --> 00:01:40.620
You can see that here we had this name of the component here we don't.

24
00:01:40.620 --> 00:01:46.560
And that's because this is now a vector it's no longer a list and if we try the first met a third method

25
00:01:46.980 --> 00:01:49.960
list dollar sign machine you're on that.

26
00:01:50.220 --> 00:01:52.970
You can see that it's same output as here.

27
00:01:53.040 --> 00:01:58.170
All right let's try the second component but the stamp will do a bit more investigation.

28
00:01:58.260 --> 00:02:04.670
So let's go list are all one second component and we run that.

29
00:02:04.680 --> 00:02:12.870
So here we've got dollar signs that's meaning that's the name of this component and this is the component

30
00:02:12.870 --> 00:02:12.900
.

31
00:02:12.900 --> 00:02:14.430
This is the vector here.

32
00:02:14.460 --> 00:02:16.050
So what do I do.

33
00:02:16.050 --> 00:02:21.980
First thing I want to show is if I make this bigger write like that.

34
00:02:21.990 --> 00:02:24.370
So now that this whole vector doesn't fit here.

35
00:02:24.480 --> 00:02:29.810
If I run this now this should kind of explain what this one means right.

36
00:02:29.970 --> 00:02:35.340
This one and then this three is just like if you had a vector if you just output a vector and doesn't

37
00:02:35.340 --> 00:02:36.520
fit on your screen.

38
00:02:36.570 --> 00:02:40.290
That's where the one comes from that's where the threat comes from and helps you understand.

39
00:02:40.290 --> 00:02:44.880
OK this is the first cell in the second element Elger this newline.

40
00:02:44.890 --> 00:02:51.360
So there's a third element right so don't get confused by this one over here it's just there just because

41
00:02:51.360 --> 00:02:56.140
something didn't fit on the screen as it would be when you print out a normal vector.

42
00:02:56.460 --> 00:03:00.000
So going back to our concept here regardless that's.

43
00:03:00.020 --> 00:03:03.360
That's the name of this component of this list.

44
00:03:03.450 --> 00:03:05.280
And how do I know that this is a list.

45
00:03:05.310 --> 00:03:06.450
Well it's very simple.

46
00:03:06.600 --> 00:03:07.490
Let's just check it out.

47
00:03:07.560 --> 00:03:10.830
Type off and let's copy this in here.

48
00:03:10.830 --> 00:03:13.960
So let's just prove that this is indeed a list.

49
00:03:14.210 --> 00:03:16.270
As you can see it is a list.

50
00:03:16.320 --> 00:03:18.470
All right let's check in on list.

51
00:03:18.490 --> 00:03:21.590
R l 1 double square brackets.

52
00:03:21.680 --> 00:03:23.240
I now put two in here.

53
00:03:23.580 --> 00:03:27.560
So now we just got this vector by itself.

54
00:03:27.630 --> 00:03:32.180
What do you think we will get if we check type of here.

55
00:03:32.460 --> 00:03:34.290
What do you think will get.

56
00:03:34.350 --> 00:03:41.550
That's right we got double because this is a vector of doubles so completely it has nothing to do with

57
00:03:41.550 --> 00:03:42.620
the list anymore.

58
00:03:42.750 --> 00:03:49.470
You can take this value assign it to letter to letter Zed and or letter A and it'll be a completely

59
00:03:49.500 --> 00:03:50.580
separate vector.

60
00:03:50.580 --> 00:03:57.660
We've extracted the element out of the list whereas here in this case it's still a list.

61
00:03:57.660 --> 00:03:59.510
Just a smaller list.

62
00:03:59.640 --> 00:04:03.180
And now let's try out the final version.

63
00:04:03.300 --> 00:04:04.520
R l one.

64
00:04:04.680 --> 00:04:07.990
And here we're going to say dollar sign stats.

65
00:04:08.010 --> 00:04:13.890
So if you run that here you can see that we've got Once again the stats and let's see what that will

66
00:04:13.890 --> 00:04:14.720
look like.

67
00:04:14.850 --> 00:04:17.480
If we look at the type of.

68
00:04:17.970 --> 00:04:19.380
Once again it's double.

69
00:04:19.380 --> 00:04:24.360
So indeed these two approaches return the identical result.

70
00:04:24.510 --> 00:04:29.760
Just this one is a bit more convenient because we actually can specify the name of the component.

71
00:04:29.790 --> 00:04:35.160
And as you can imagine if you have lots and lots of components then this way you can easier or it's

72
00:04:35.160 --> 00:04:39.630
a simpler way of addressing them rather than looking through a list and trying to remember where each

73
00:04:39.630 --> 00:04:40.960
component is sitting.

74
00:04:41.190 --> 00:04:43.060
All right so I'm going to question now.

75
00:04:43.110 --> 00:04:45.300
Can you solve this mini challenge.

76
00:04:45.300 --> 00:04:50.600
How would you access the third.

77
00:04:50.700 --> 00:04:51.320
Wait for it.

78
00:04:51.330 --> 00:04:54.630
Element of the vector.

79
00:04:54.630 --> 00:04:57.610
So the maximum utilization.

80
00:04:57.610 --> 00:04:58.570
How would you access that.

81
00:04:58.570 --> 00:05:03.540
So you know list let's print out a list list are all one in a list.

82
00:05:03.540 --> 00:05:05.540
We've got three components machines.

83
00:05:05.550 --> 00:05:06.980
That's a low threshold.

84
00:05:06.990 --> 00:05:09.550
How would you access this value.

85
00:05:09.570 --> 00:05:15.480
This third element of the component which is the vector stat's in our list.

86
00:05:15.480 --> 00:05:16.900
How would you do it.

87
00:05:17.070 --> 00:05:20.300
All right so you propose a video and give it a go yourself.

88
00:05:20.310 --> 00:05:22.920
Otherwise I'm going to show you the answer right now.

89
00:05:22.920 --> 00:05:25.770
So the answer here is a list Aurel one.

90
00:05:26.130 --> 00:05:30.060
And then you'd say OK how do I get to this vector by itself.

91
00:05:30.060 --> 00:05:30.840
Not in list.

92
00:05:30.840 --> 00:05:32.540
How do I get just the vector.

93
00:05:32.730 --> 00:05:33.750
Well this way right.

94
00:05:33.780 --> 00:05:39.420
So either this way or this way and then you'd say two and then you'd say three.

95
00:05:39.630 --> 00:05:41.100
Right because you want.

96
00:05:41.100 --> 00:05:42.330
So let's get rid of that for a second.

97
00:05:42.330 --> 00:05:47.470
That's the vector and then on top of that we want to get to the third value.

98
00:05:47.670 --> 00:05:48.230
So there we go.

99
00:05:48.250 --> 00:05:49.780
That's how you do it.

100
00:05:49.830 --> 00:05:57.650
And of course the other approach is to replace the double brackets to move dollar sign stats.

101
00:05:58.020 --> 00:05:59.170
You get the same result.

102
00:05:59.220 --> 00:06:03.600
There go as you can imagine with the single brackets you can really do that because with single brackets

103
00:06:03.600 --> 00:06:08.640
you'll still have a list and the end you would still need to access the element.

104
00:06:08.640 --> 00:06:10.310
All right so there we go.

105
00:06:10.320 --> 00:06:15.000
And we've got one more left to do so we've done the first component.

106
00:06:15.000 --> 00:06:20.670
The second component I'll leave it up to you to practice with the third component so just go ahead and

107
00:06:20.670 --> 00:06:26.280
do this same approach or this approach where you access it this way and you access it this way.

108
00:06:26.490 --> 00:06:29.590
And then you extract it this way as well.

109
00:06:29.590 --> 00:06:36.030
And just that'll do some additional practice and really cement in what we learned today and that's all

110
00:06:36.030 --> 00:06:36.980
for this tutorial.

111
00:06:36.990 --> 00:06:39.150
I look forward to seeing the next one.

112
00:06:39.150 --> 00:06:40.640
Until then happy coding
