WEBVTT
1
00:00:04.320 --> 00:00:08.880
Hello and welcome back to the advanced course on our programming.

2
00:00:08.880 --> 00:00:15.360
This is going to be a quick tutorial and we're going to understand what is a missing value in our missing

3
00:00:15.360 --> 00:00:18.020
values are represented by the symbol and a.

4
00:00:18.030 --> 00:00:21.510
So this is a special variable as you can see it's highlighted in red.

5
00:00:21.540 --> 00:00:23.460
So let's read a little bit about it.

6
00:00:23.520 --> 00:00:30.210
If he type in questionmark and say and then look at our pop up window here and we zoom in a bit you

7
00:00:30.210 --> 00:00:35.300
can see that here and a stands for not available or missing values.

8
00:00:35.460 --> 00:00:42.900
And L.A. is a logical constant of length 1 which contains a missing value indicator and some some additional

9
00:00:42.900 --> 00:00:45.220
information which you're not going to go into right now.

10
00:00:45.390 --> 00:00:53.140
So what is and then a in that case why is it logical so we already know a couple of logical constants

11
00:00:53.140 --> 00:00:53.330
right.

12
00:00:53.340 --> 00:00:54.350
We know the true and false.

13
00:00:54.350 --> 00:00:57.930
So now they're telling us that there's a third one which is an an a.

14
00:00:58.140 --> 00:01:00.600
So let's have a look at that in a bit more detail.

15
00:01:00.900 --> 00:01:02.500
So we already know that we have.

16
00:01:02.510 --> 00:01:04.860
True which is a logical concept.

17
00:01:04.860 --> 00:01:11.190
We have false which allows real concern and the representation for truth is actually a one representation

18
00:01:11.190 --> 00:01:12.490
for Forces 0.

19
00:01:12.510 --> 00:01:18.470
But now we've been told that there's another one a third a logical concern which is an end and they

20
00:01:18.490 --> 00:01:18.750
.

21
00:01:18.790 --> 00:01:21.520
So how do we go about this how to understand this.

22
00:01:21.690 --> 00:01:29.480
Well the thing is that in programming oftentimes especially in data science data mining analytics oftentimes

23
00:01:29.700 --> 00:01:31.890
it is a case that a value is missing.

24
00:01:31.890 --> 00:01:38.760
So for instance there's no like there's no numeric value in a column that they're supposed to be and

25
00:01:38.760 --> 00:01:45.060
that value is missing or there could be a Boolean column where they could be true or false or what happens

26
00:01:45.060 --> 00:01:46.080
if the value is missing.

27
00:01:46.080 --> 00:01:51.420
Let's have a look an example let's say that's answer the question how many Carstares does Mike have

28
00:01:51.450 --> 00:01:52.010
right.

29
00:01:52.050 --> 00:01:55.180
We can answer the question like has one car right.

30
00:01:55.260 --> 00:02:00.720
We could answer the question Mike has two cars or 50 cars or maybe Mike and Mike has zero cars.

31
00:02:00.720 --> 00:02:01.070
Right.

32
00:02:01.200 --> 00:02:05.260
So basically these can be looked at as.

33
00:02:05.420 --> 00:02:07.820
Or if we pose a question as does Mike have a car.

34
00:02:07.830 --> 00:02:11.790
And the answer is true or does Mike have a car the answer is false.

35
00:02:11.910 --> 00:02:16.800
But what if we don't know the answer if we don't know whether it has or doesn't have a car.

36
00:02:16.830 --> 00:02:21.600
How do we populate that field in that case we can say false because that would mean he doesn't have

37
00:02:21.600 --> 00:02:21.950
a car.

38
00:02:21.960 --> 00:02:22.260
Right.

39
00:02:22.260 --> 00:02:29.040
So we would have to say and that's the logic behind the name and this kind of ventures into the field

40
00:02:29.040 --> 00:02:36.620
of three valued logic or ternary or trivalent logic which is a whole area of mathematics.

41
00:02:36.750 --> 00:02:41.250
But we're not going to venture in that deep into there we're just going to look at the implications

42
00:02:41.250 --> 00:02:42.360
this has on programming.

43
00:02:42.360 --> 00:02:45.590
So for instance I can what can I do if these variables right.

44
00:02:45.600 --> 00:02:49.360
What can I do if the existing logical constants are you know.

45
00:02:49.470 --> 00:02:50.920
Well I can compare them I can say.

46
00:02:50.920 --> 00:02:52.000
True right.

47
00:02:52.050 --> 00:02:54.740
I want to check if true is equal to false.

48
00:02:54.780 --> 00:02:56.060
Let's have a look at that.

49
00:02:56.060 --> 00:02:57.930
The answer is false is not equals false.

50
00:02:57.930 --> 00:02:58.710
Makes sense.

51
00:02:58.800 --> 00:03:02.160
I can check if true is equals to 5.

52
00:03:02.230 --> 00:03:04.050
True is not equal to 5.

53
00:03:04.050 --> 00:03:05.880
Can check if true is equals to 1.

54
00:03:05.880 --> 00:03:09.300
That will be true because that is the representation of one.

55
00:03:09.480 --> 00:03:10.740
I can check same thing for false.

56
00:03:10.740 --> 00:03:14.450
I can check if false x equals to 4 for instance.

57
00:03:14.460 --> 00:03:18.270
Not if I check your false equals to false.

58
00:03:18.270 --> 00:03:26.010
The answer will be true right because false does equal to false and I can check if false equals to zero

59
00:03:26.010 --> 00:03:26.400
.

60
00:03:26.400 --> 00:03:28.170
The answer is true because false is zero.

61
00:03:28.170 --> 00:03:30.150
That's how it's presented in programming.

62
00:03:30.510 --> 00:03:32.220
But now can I do the same thing if any.

63
00:03:32.220 --> 00:03:35.680
Can I check if and and and they equals to true.

64
00:03:35.700 --> 00:03:37.000
What do you think the answer is here.

65
00:03:37.140 --> 00:03:39.670
Well you'd think the answer would be false right.

66
00:03:39.720 --> 00:03:43.220
So that is not icles true so would be false.

67
00:03:43.440 --> 00:03:45.520
But in reality the answer is A.

68
00:03:45.540 --> 00:03:51.060
So what if I want to check if an array is equal to true or false.

69
00:03:51.060 --> 00:03:59.000
Again it's an end and they if I check and A's equals to 15 is also and they can choke of 15 equals and

70
00:03:59.530 --> 00:04:00.610
also an A.

71
00:04:00.810 --> 00:04:04.070
Can I check if N and NE is equal to and ne is.

72
00:04:04.070 --> 00:04:08.320
Surely this has to be true right and once again we get.

73
00:04:08.370 --> 00:04:09.360
And they.

74
00:04:09.570 --> 00:04:10.220
And why is that.

75
00:04:10.230 --> 00:04:15.960
Well that is because we are comparing a missing value to something also missing value compared to True

76
00:04:16.320 --> 00:04:17.540
or false.

77
00:04:17.550 --> 00:04:20.990
We don't know if what the result is so the result is again a missing mail.

78
00:04:21.000 --> 00:04:25.950
And even when you compare missing value to missing value the result is going to be a missing value.

79
00:04:25.950 --> 00:04:31.140
That's how programming works is very similar to what normal is in a scale if you know ASCII programming

80
00:04:31.180 --> 00:04:31.490
.

81
00:04:31.550 --> 00:04:37.390
So and a you can look at and in a as a null in a school and basically represents a missing value cannot

82
00:04:37.440 --> 00:04:41.280
compare and way to anything else including another and it.

83
00:04:41.490 --> 00:04:45.990
And that poses some implications that we're going to have to deal with going forward in these tutorials

84
00:04:45.990 --> 00:04:46.280
.

85
00:04:46.350 --> 00:04:52.140
But for now that's all I wanted to show you about their name just to make sure that we're on the same

86
00:04:52.140 --> 00:04:58.140
page that it's a third type of logical variable and it's very specific and very special in the way that

87
00:04:58.590 --> 00:05:05.250
it compares to other things and that obviously we're going to have to deal with it in certain special

88
00:05:05.250 --> 00:05:05.710
ways.

89
00:05:06.060 --> 00:05:08.140
And I look forward to seeing you on the next tutorial.

90
00:05:08.160 --> 00:05:09.970
Until then happy coding
