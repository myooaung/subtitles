WEBVTT
1
00:00:01.040 --> 00:00:05.680
Let's talk about how Agile/Scrum and kanban are similar, yet so different.

2
00:00:05.680 --> 00:00:08.210
But you know, your learning curve shouldn't be too bad at

3
00:00:08.210 --> 00:00:13.280
all. So we are on the same page, here is what I mean when I

4
00:00:13.280 --> 00:00:15.300
use the phrase Agile/Scrum.

5
00:00:15.300 --> 00:00:18.250
Agile is an iterative approach to project management and software

6
00:00:18.250 --> 00:00:21.580
development that helps teams deliver value to their customers.

7
00:00:21.580 --> 00:00:24.570
Instead of delivering large blocks of work sequentially,

8
00:00:24.570 --> 00:00:28.490
an agile team delivers work in small, but consumable increments.

9
00:00:28.490 --> 00:00:31.920
Scrum is an agile process framework for managing software

10
00:00:31.920 --> 00:00:35.040
development. Ken Schwaber co‑developed the Scrum framework with

11
00:00:35.040 --> 00:00:37.880
Jeff Sutherland in the early 1990s.

12
00:00:37.880 --> 00:00:40.340
Please note Scrum is very prescriptive,

13
00:00:40.340 --> 00:00:44.380
though in most organizations people have morphed it to fit their needs. Well,

14
00:00:44.380 --> 00:00:48.240
I totally support that 100%.

15
00:00:48.240 --> 00:00:50.370
In case you're not that familiar with Agile/Scrum,

16
00:00:50.370 --> 00:00:52.250
here's a super quick overview.

17
00:00:52.250 --> 00:00:52.790
First,

18
00:00:52.790 --> 00:00:56.270
Agile delivers software incrementally and iteratively.

19
00:00:56.270 --> 00:00:59.270
Incrementally means we haven't incremental process in which

20
00:00:59.270 --> 00:01:01.460
software is developed and delivered in parts.

21
00:01:01.460 --> 00:01:05.630
Each part or increment represents a completely working piece of

22
00:01:05.630 --> 00:01:08.640
functionality. The size of the increment is not important,

23
00:01:08.640 --> 00:01:12.110
but an increment is a fully coded and tested piece of software.

24
00:01:12.110 --> 00:01:16.610
Value‑driven versus plan‑driven. Agile is often referred to as

25
00:01:16.610 --> 00:01:20.040
value‑driven approach as opposed to the traditional waterfall

26
00:01:20.040 --> 00:01:21.780
approach that is plan‑driven.

27
00:01:21.780 --> 00:01:26.860
Hence, iterations need to provide value versus an arbitrary planning date,

28
00:01:26.860 --> 00:01:29.910
forcing features that may not provide the needed value.

29
00:01:29.910 --> 00:01:31.600
Also, with Agile,

30
00:01:31.600 --> 00:01:35.000
the value of features drives the order of the work

31
00:01:35.000 --> 00:01:36.620
to be developed and delivered.

32
00:01:36.620 --> 00:01:39.890
Items with the most value, as determined by the business,

33
00:01:39.890 --> 00:01:44.230
are prioritized the highest. And the Agile values, based on the Agile

34
00:01:44.230 --> 00:01:49.620
Manifesto, drive the way the work itself is performed. Most importantly to me

35
00:01:49.620 --> 00:01:53.440
is for you to be flexible and adaptable at all times.

36
00:01:53.440 --> 00:01:56.090
Nothing that'll be discussing this course is cast in concrete.

37
00:01:56.090 --> 00:02:01.440
Life in software development is not that simple.

38
00:02:01.440 --> 00:02:06.040
Agile and kanban have much in common, so kanban will be somewhat familiar and,

39
00:02:06.040 --> 00:02:09.530
I think, quite frankly, relatively easy to learn and use.

40
00:02:09.530 --> 00:02:10.750
There are stand‑ups,

41
00:02:10.750 --> 00:02:13.420
though they are different, as we learned in a previous module.

42
00:02:13.420 --> 00:02:16.130
There are teams working on features, and again,

43
00:02:16.130 --> 00:02:19.300
with some slight variations on how those features are worked. And

44
00:02:19.300 --> 00:02:22.450
the teams are finishing their work before starting new ones. And

45
00:02:22.450 --> 00:02:24.250
again, pretty close to the same.

46
00:02:24.250 --> 00:02:25.290
There are subtle,

47
00:02:25.290 --> 00:02:29.130
important, and critical differences that you will soon discover in

48
00:02:29.130 --> 00:02:33.940
this module and certainly in the rest of the course.

49
00:02:33.940 --> 00:02:35.150
Here is my point of view.

50
00:02:35.150 --> 00:02:37.570
I am a big fan of Agile/Scrum.

51
00:02:37.570 --> 00:02:41.790
I have embraced and used Agile/Scrum for many years and really like it, though

52
00:02:41.790 --> 00:02:44.760
I have made some variations to meet business constraints.

53
00:02:44.760 --> 00:02:48.380
Agile/Scrum offers great improvements over traditional or

54
00:02:48.380 --> 00:02:50.930
waterfall approaches by a long shot.

55
00:02:50.930 --> 00:02:52.040
But is it perfect?

56
00:02:52.040 --> 00:02:55.560
I have never seen two organizations apply Agile/Scrum in the

57
00:02:55.560 --> 00:02:57.770
same way, and I'm totally fine with that.

58
00:02:57.770 --> 00:03:01.850
Still a great benefit over waterfall and a great methodology. If the

59
00:03:01.850 --> 00:03:04.670
Agile philosophy promotes adaptability and flexibility,

60
00:03:04.670 --> 00:03:06.660
which it does, of course, then to me,

61
00:03:06.660 --> 00:03:09.840
it is okay to adjust your usage of Agile as you see fit.

62
00:03:09.840 --> 00:03:10.980
That's just my opinion.

63
00:03:10.980 --> 00:03:12.180
That's my point of view.

64
00:03:12.180 --> 00:03:21.000
Keep an open mind. Kanban is a great tool to have in your toolbox and may be better suited for a situation than Agile/Scrum.

