WEBVTT
1
00:00:01.140 --> 00:00:04.740
Here is the basic idea on how we go from a backlog item to one or

2
00:00:04.740 --> 00:00:07.240
more tasks that it'll take to get the job done.

3
00:00:07.240 --> 00:00:12.180
Use the specify step to create tasks, so a backlog card becomes tasks.

4
00:00:12.180 --> 00:00:14.520
Now each task has its own note card,

5
00:00:14.520 --> 00:00:17.660
and each note card will tie back to a parent backlog

6
00:00:17.660 --> 00:00:19.430
card, you know, for reference.

7
00:00:19.430 --> 00:00:22.190
Therefore, a one backlog card may translate into,

8
00:00:22.190 --> 00:00:22.490
say,

9
00:00:22.490 --> 00:00:25.860
five task cards, for example. The goal is to have each task

10
00:00:25.860 --> 00:00:28.130
to take about the same amount of time.

11
00:00:28.130 --> 00:00:31.910
Now, this is hard to do, quite frankly, but if possible,

12
00:00:31.910 --> 00:00:35.520
will better enable your team to consume and complete the work.

13
00:00:35.520 --> 00:00:38.810
Estimate the number of tasks to complete the effort.

14
00:00:38.810 --> 00:00:41.140
If the specify step has two people,

15
00:00:41.140 --> 00:00:44.700
they need to come to a consensus on what the decomposed tasks

16
00:00:44.700 --> 00:00:47.900
are and the total count of those tasks.

17
00:00:47.900 --> 00:00:52.280
Estimates are not what the task itself takes to do,

18
00:00:52.280 --> 00:00:55.900
but the number of tasks. And generally speaking,

19
00:00:55.900 --> 00:01:02.340
each task should be about the same size or chunk of work.

20
00:01:02.340 --> 00:01:06.910
It is generally understood in the kanban community that detailed estimates of

21
00:01:06.910 --> 00:01:13.180
each task, say in hours, are not value added. So please note, a kanban system

22
00:01:13.180 --> 00:01:16.200
may not look at the estimate of the work item itself,

23
00:01:16.200 --> 00:01:19.190
but measures all work equally and uses that

24
00:01:19.190 --> 00:01:23.940
information to base future projections.

25
00:01:23.940 --> 00:01:26.950
Here's an example of a kanban board with some tasks.

26
00:01:26.950 --> 00:01:32.370
A backlog card comes over into specify and is turned into three task cards.

27
00:01:32.370 --> 00:01:35.770
Those task cards will continue through the flow to implementation and

28
00:01:35.770 --> 00:01:39.310
validate and ultimately become the delivered feature.

29
00:01:39.310 --> 00:01:42.630
The task cards will always have a relationship or pointer back to the

30
00:01:42.630 --> 00:01:46.450
feature, and the completed feature will have a relationship back to the

31
00:01:46.450 --> 00:01:50.840
tasks that were required for that feature.

32
00:01:50.840 --> 00:01:52.770
When will that work be done?

33
00:01:52.770 --> 00:01:55.530
Trust me, you may be asked that question a lot,

34
00:01:55.530 --> 00:01:57.490
so let's see how we might make an estimate.

35
00:01:57.490 --> 00:02:01.920
First, consider a period of historical time, say four weeks.

36
00:02:01.920 --> 00:02:05.090
Next, determine the number of tasks completed in that

37
00:02:05.090 --> 00:02:07.640
period of time and the task per day.

38
00:02:07.640 --> 00:02:10.750
So we have 80 tasks, and there were 20 days of work in

39
00:02:10.750 --> 00:02:14.280
those 4 weeks, so 80 divided by 20 is 4,

40
00:02:14.280 --> 00:02:16.460
so we have 4 tasks per day.

41
00:02:16.460 --> 00:02:17.440
Next,

42
00:02:17.440 --> 00:02:21.670
determine the current work‑in‑progress task count, and add

43
00:02:21.670 --> 00:02:23.900
the estimated number of tasks to that.

44
00:02:23.900 --> 00:02:29.110
So, the work in progress is 36 tasks right now, our new estimate, say, is

45
00:02:29.110 --> 00:02:34.890
8 tasks, so our total would be 44 tasks. Next, calculate the estimated

46
00:02:34.890 --> 00:02:37.200
time for the new work item to be complete.

47
00:02:37.200 --> 00:02:42.700
That would be 44 divided by 4 tasks per day equals 11 days.

48
00:02:42.700 --> 00:02:44.260
So, as you can see,

49
00:02:44.260 --> 00:02:48.410
we are using the number of tasks to make our estimates and not the

50
00:02:48.410 --> 00:02:51.090
actual amount of time the task would take to do.

51
00:02:51.090 --> 00:02:55.480
Now we will cover more about estimation and forecasting in the module,

52
00:02:55.480 --> 00:03:02.740
Managing Your Workflow. So the 11 days is known as the lead time.

53
00:03:02.740 --> 00:03:05.670
So let's make sure we understand what lead time is.

54
00:03:05.670 --> 00:03:08.860
Lead time is the amount of time it takes for a single unit

55
00:03:08.860 --> 00:03:11.990
of work to go through the value stream.

56
00:03:11.990 --> 00:03:15.410
That is the time from starting to work on a feature and

57
00:03:15.410 --> 00:03:17.780
completing it and handing it off.

58
00:03:17.780 --> 00:03:21.420
So in our example, it's from specify to deliver.

59
00:03:21.420 --> 00:03:24.900
It's not the amount of time that it might sit in the backlog,

60
00:03:24.900 --> 00:03:32.000
because it may be a case where the customer wants to reprioritize this new piece of work, so it would be the next thing to pull in.

