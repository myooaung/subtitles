WEBVTT
1
00:00:01.140 --> 00:00:02.410
Here is my point of view.

2
00:00:02.410 --> 00:00:05.540
Moving from a waterfall in Kanban will be a challenge.

3
00:00:05.540 --> 00:00:08.980
It changes the way you do things and may cause conflict due to

4
00:00:08.980 --> 00:00:11.670
the way people are used to doing their job.

5
00:00:11.670 --> 00:00:14.470
I strongly recommend training so that your team will become more

6
00:00:14.470 --> 00:00:17.460
comfortable with Kanban, and maybe even more importantly,

7
00:00:17.460 --> 00:00:20.690
a coach or mentor to help shepherd the learning process

8
00:00:20.690 --> 00:00:23.440
forward and answer any just in time questions.

9
00:00:23.440 --> 00:00:25.050
There will be a transition time,

10
00:00:25.050 --> 00:00:28.790
so be prepared and be patient. And will management buy

11
00:00:28.790 --> 00:00:30.800
in? That's an important question.

12
00:00:30.800 --> 00:00:34.490
We will address this question in a subsequent module titled

13
00:00:34.490 --> 00:00:37.190
preparing for organizational challenges.

14
00:00:37.190 --> 00:00:40.000
Kanban is all about delivering value to the customer

15
00:00:40.000 --> 00:00:42.500
while creating the least possible waste.

16
00:00:42.500 --> 00:00:45.340
Always focus a team on that important goal.

17
00:00:45.340 --> 00:00:49.620
Your team can keep some of their current practices and work incrementally over

18
00:00:49.620 --> 00:00:53.670
time embracing Kanban, and thereby, reducing any disruption.

19
00:00:53.670 --> 00:00:55.710
Now management will like that as well.

20
00:00:55.710 --> 00:00:59.990
Okay, now let's summarize this module.

21
00:00:59.990 --> 00:01:02.830
The traditional and waterfall approach is sequential by

22
00:01:02.830 --> 00:01:05.970
milestones and typically covers longer timeframes.

23
00:01:05.970 --> 00:01:09.710
A significant weakness is the fact that time between writing the

24
00:01:09.710 --> 00:01:13.540
specs and delivering software can be lengthy and you want that time

25
00:01:13.540 --> 00:01:15.970
to be as small and short as possible.

26
00:01:15.970 --> 00:01:18.640
I can hardly remember what I watched for TV last night,

27
00:01:18.640 --> 00:01:21.040
let alone a requirement I wrote 4 months ago.

28
00:01:21.040 --> 00:01:24.770
We covered some new concepts, such as building software with feature teams,

29
00:01:24.770 --> 00:01:27.640
regular standups, and the notion of done rules.

30
00:01:27.640 --> 00:01:30.870
That is exactly what done means and when you can move on to

31
00:01:30.870 --> 00:01:34.350
the next task or pull the task forward.

32
00:01:34.350 --> 00:01:38.110
Kanban delivers small batches of work and the work in progress is

33
00:01:38.110 --> 00:01:42.600
limited, both of which greatly contribute to increase quality. Also

34
00:01:42.600 --> 00:01:45.990
with Kanban, the customer engagement is not just up front in the

35
00:01:45.990 --> 00:01:47.800
traditional spec writing approach,

36
00:01:47.800 --> 00:01:50.540
but continuous throughout the feature development

37
00:01:50.540 --> 00:02:00.000
and overall project development. Up next, transitioning from Scrum to Kanban. I'll see you there.

