1
00:00:01,240 --> 00:00:07,850
Let's talk about work in progress limits and done rules. Completing

2
00:00:07,850 --> 00:00:10,790
features restricted by work in progress limits.

3
00:00:10,790 --> 00:00:13,910
Another big change is limiting our work in progress,

4
00:00:13,910 --> 00:00:16,850
which to me at first didn't seem to make much sense since I was

5
00:00:16,850 --> 00:00:19,150
so used to people just piling on the work.

6
00:00:19,150 --> 00:00:22,290
Please note kanban systems limit work in progress,

7
00:00:22,290 --> 00:00:26,690
not resources. Got more work? Well, add resources. Limiting work in

8
00:00:26,690 --> 00:00:30,790
progress just means that you finish what you are working on before

9
00:00:30,790 --> 00:00:33,510
you pull or start the next piece of work.

10
00:00:33,510 --> 00:00:35,770
Here's another example, though it might be subtle.

11
00:00:35,770 --> 00:00:40,060
Why would a developer take on more work when she could simply

12
00:00:40,060 --> 00:00:44,740
unblock a verify task and further clarify the spec or how the

13
00:00:44,740 --> 00:00:46,620
system behaves for someone else?

14
00:00:46,620 --> 00:00:48,760
If she just keeps pulling work forward,

15
00:00:48,760 --> 00:00:51,740
it really wouldn't matter since the downstream resource was blocked

16
00:00:51,740 --> 00:00:55,780
anyway. Get the point? Small batches and restricting work in progress

17
00:00:55,780 --> 00:00:59,380
enable all the knowledge about the specs and how they were implemented

18
00:00:59,380 --> 00:01:03,950
and tested to be current and on point in the minds to be more easily

19
00:01:03,950 --> 00:01:05,610
remedied and resolved.

20
00:01:05,610 --> 00:01:06,540
You know how it is.

21
00:01:06,540 --> 00:01:10,620
The half life of my memory is not very long at all, so the shorter the

22
00:01:10,620 --> 00:01:17,440
time span between spec writing and delivering code, the better. Done Rules

23
00:01:17,440 --> 00:01:20,300
or When to Do the Next Thing. With waterfall,

24
00:01:20,300 --> 00:01:23,900
you complete the step, such as requirements completely, and then

25
00:01:23,900 --> 00:01:26,810
you move on to the next step, and we really don't go back. In

26
00:01:26,810 --> 00:01:31,560
kanban, work is only pulled forward that has started if the done

27
00:01:31,560 --> 00:01:33,530
rules are satisfied. Well,

28
00:01:33,530 --> 00:01:36,590
what are the done rules you say? Every step in a kanban

29
00:01:36,590 --> 00:01:39,900
system will have its own unique done rules that makes

30
00:01:39,900 --> 00:01:41,980
sense for your workflow and team.

31
00:01:41,980 --> 00:01:45,830
So only when the rules say the work in this step is complete can the

32
00:01:45,830 --> 00:01:49,160
work move forward. Just so you better understand this, here is an

33
00:01:49,160 --> 00:01:52,500
example of a done rule for an implement step.

34
00:01:52,500 --> 00:01:55,020
The rule is comprised of several elements.

35
00:01:55,020 --> 00:01:56,300
Okay, here's the rule.

36
00:01:56,300 --> 00:01:59,670
The code is developed, the code is unit tested, the specs were

37
00:01:59,670 --> 00:02:02,520
updated if they needed to be, the code is checked into a

38
00:02:02,520 --> 00:02:05,260
repository, and a clean bill was created.

39
00:02:05,260 --> 00:02:07,770
You can certainly relate to all these, but the person

40
00:02:07,770 --> 00:02:12,760
downstream would only pull this to verify if in fact all five

41
00:02:12,760 --> 00:02:15,120
of these items were in fact complete.

42
00:02:15,120 --> 00:02:18,190
I will be going into more detail on this topic in the module,

43
00:02:18,190 --> 00:02:21,310
Managing Your Workflow, later in this course. Again,

44
00:02:21,310 --> 00:02:24,390
every organization has different resourcing challenges,

45
00:02:24,390 --> 00:02:33,000
so be flexible, and try to adhere to limiting work in progress and succinct done rules for each value stream step.

