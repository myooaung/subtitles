1
00:00:00,006 --> 00:00:03,000
- [Instructor] When practicing trunk based development,

2
00:00:03,000 --> 00:00:04,006
the work for a larger feature

3
00:00:04,006 --> 00:00:07,002
may be broken down into smaller pieces

4
00:00:07,002 --> 00:00:10,003
that you're frequently merging into trunk.

5
00:00:10,003 --> 00:00:12,001
For some features, this can mean

6
00:00:12,001 --> 00:00:15,000
that parts of its code are merged into trunk

7
00:00:15,000 --> 00:00:18,003
while other parts are still under development.

8
00:00:18,003 --> 00:00:21,000
So those completed parts of a feature

9
00:00:21,000 --> 00:00:22,008
that are merged into trunk

10
00:00:22,008 --> 00:00:26,001
might get shipped to production in the next release

11
00:00:26,001 --> 00:00:29,008
regardless of whether the entire feature is ready.

12
00:00:29,008 --> 00:00:32,001
That might raise some concerns for you,

13
00:00:32,001 --> 00:00:34,005
but a technique called feature flagging

14
00:00:34,005 --> 00:00:37,002
makes it easy to handle this situation.

15
00:00:37,002 --> 00:00:39,005
Let me explain how it works.

16
00:00:39,005 --> 00:00:41,007
A feature flag is used to toggle

17
00:00:41,007 --> 00:00:44,009
the availability of a feature in our software.

18
00:00:44,009 --> 00:00:46,007
It allows us to deploy code

19
00:00:46,007 --> 00:00:49,007
without making it visible to the end users,

20
00:00:49,007 --> 00:00:53,000
or, if we'd like, we can choose to make the feature

21
00:00:53,000 --> 00:00:56,001
available under certain conditions.

22
00:00:56,001 --> 00:00:58,000
Let me give you an example.

23
00:00:58,000 --> 00:01:01,002
Let's say you're working on an eCommerce website

24
00:01:01,002 --> 00:01:02,007
and you've built a new filter

25
00:01:02,007 --> 00:01:04,009
for the site's product catalog.

26
00:01:04,009 --> 00:01:07,007
You might create a feature flag for the new filter

27
00:01:07,007 --> 00:01:09,000
that allows you to toggle

28
00:01:09,000 --> 00:01:12,002
whether or not the feature is displayed on the site.

29
00:01:12,002 --> 00:01:14,000
While testing the feature,

30
00:01:14,000 --> 00:01:17,004
you can toggle the flag on for non-production environments,

31
00:01:17,004 --> 00:01:19,006
like development, to make it available

32
00:01:19,006 --> 00:01:22,002
for the team to test and review.

33
00:01:22,002 --> 00:01:24,005
However, in the production environment,

34
00:01:24,005 --> 00:01:26,004
you might toggle the flag off

35
00:01:26,004 --> 00:01:28,006
because it hasn't been thoroughly tested

36
00:01:28,006 --> 00:01:32,001
and ready for use by the actual customers.

37
00:01:32,001 --> 00:01:35,004
So, the feature would be in the production code,

38
00:01:35,004 --> 00:01:38,007
but it hasn't been released for the customers.

39
00:01:38,007 --> 00:01:41,001
Then, once the feature is ready,

40
00:01:41,001 --> 00:01:43,002
you can just toggle the feature flags

41
00:01:43,002 --> 00:01:47,006
so that the new filter becomes available for your customers.

42
00:01:47,006 --> 00:01:51,004
When using feature flags, we draw a clear distinction

43
00:01:51,004 --> 00:01:53,009
between a deployment and a release.

44
00:01:53,009 --> 00:01:57,004
A deployment moves the code for a feature to an environment,

45
00:01:57,004 --> 00:02:01,005
but doesn't necessarily make it available for the end users.

46
00:02:01,005 --> 00:02:05,005
A release is when the actual feature is made available

47
00:02:05,005 --> 00:02:07,002
which, in this case, is achieved

48
00:02:07,002 --> 00:02:10,000
by activating our feature flag.

49
00:02:10,000 --> 00:02:11,006
When using feature flags,

50
00:02:11,006 --> 00:02:14,003
there's a number of strategies to choose from.

51
00:02:14,003 --> 00:02:17,000
You can simply toggle the feature on and off

52
00:02:17,000 --> 00:02:18,003
just like we discussed.

53
00:02:18,003 --> 00:02:20,000
That's one strategy.

54
00:02:20,000 --> 00:02:23,008
Another is to selectively choose certain users

55
00:02:23,008 --> 00:02:25,006
or a percentage of them

56
00:02:25,006 --> 00:02:28,001
that the new feature will be released to.

57
00:02:28,001 --> 00:02:31,001
This approach lets you test out the new feature

58
00:02:31,001 --> 00:02:32,008
with a small batch of users

59
00:02:32,008 --> 00:02:35,009
to determine if it should be released more widely.

60
00:02:35,009 --> 00:02:38,000
If the feature doesn't test well,

61
00:02:38,000 --> 00:02:41,005
it can easily be turned off using our feature flag.

62
00:02:41,005 --> 00:02:43,000
You might hear of this strategy

63
00:02:43,000 --> 00:02:45,005
referred to as a dark launch.

64
00:02:45,005 --> 00:02:47,007
It's used by companies like Facebook

65
00:02:47,007 --> 00:02:52,002
to strategically ship an experiment with new features.

66
00:02:52,002 --> 00:02:54,005
Implementing feature flagging can be as simple

67
00:02:54,005 --> 00:02:56,002
as adding an if statement

68
00:02:56,002 --> 00:02:59,005
and a configuration value in your project.

69
00:02:59,005 --> 00:03:01,009
But, to get the most from feature flags,

70
00:03:01,009 --> 00:03:03,006
you'll want to use a platform

71
00:03:03,006 --> 00:03:06,006
that is specifically designed to manage them.

72
00:03:06,006 --> 00:03:09,002
You'll find number of feature flagging platforms

73
00:03:09,002 --> 00:03:11,006
that you can use like LaunchDarkly

74
00:03:11,006 --> 00:03:15,000
or the open source alternative, Flagship.

75
00:03:15,000 --> 00:03:17,006
These tools normally provide an SDK

76
00:03:17,006 --> 00:03:21,000
that you can use to add the feature flag to your code

77
00:03:21,000 --> 00:03:22,008
and a management console

78
00:03:22,008 --> 00:03:24,008
where you can control the feature flag

79
00:03:24,008 --> 00:03:26,008
from a user interface.

80
00:03:26,008 --> 00:03:29,007
In our next lesson, we'll walk through a demonstration

81
00:03:29,007 --> 00:03:31,008
of how feature flagging can be applied

82
00:03:31,008 --> 00:03:35,007
to our small static website using LaunchDarkly.

83
00:03:35,007 --> 00:03:37,002
If you'd like to follow along,

84
00:03:37,002 --> 00:03:39,004
you'll need to create a free trial account

85
00:03:39,004 --> 00:03:42,006
at launchdarkly.com, or, if you'd like,

86
00:03:42,006 --> 00:03:44,001
you can just watch the lesson

87
00:03:44,001 --> 00:03:48,000
to see how the concept of feature flagging works.

