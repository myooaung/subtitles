WEBVTT
1
00:00:00.006 --> 00:00:03.005
- [Kevin] Now. we're going to start work on a new feature

2
00:00:03.005 --> 00:00:06.008
that way you're able to see GitHub flow in action.

3
00:00:06.008 --> 00:00:11.001
For this feature, we'll add a second course to our webpage.

4
00:00:11.001 --> 00:00:15.002
So here in LinkedIn Learning, I'm going to copy

5
00:00:15.002 --> 00:00:20.004
the embedded markup for my course, GitOps Foundations.

6
00:00:20.004 --> 00:00:22.005
All right, with that in the clipboard,

7
00:00:22.005 --> 00:00:25.004
let's head over to a Git Bash terminal

8
00:00:25.004 --> 00:00:29.008
and here we're going to check out the main branch.

9
00:00:29.008 --> 00:00:32.002
Once we're on the main branch, we'll go ahead

10
00:00:32.002 --> 00:00:34.007
and do a pull to fetch the latest changes

11
00:00:34.007 --> 00:00:37.006
from the team's shared repository.

12
00:00:37.006 --> 00:00:41.001
Now, let's create a feature branch where we can perform

13
00:00:41.001 --> 00:00:44.002
our development work for this new feature.

14
00:00:44.002 --> 00:00:50.001
I'm going to name the branch feature/kb-123

15
00:00:50.001 --> 00:00:53.004
and then second-course.

16
00:00:53.004 --> 00:00:56.002
All right, now we have our new feature branch.

17
00:00:56.002 --> 00:01:00.005
Let's go ahead and we'll open up the index.md file

18
00:01:00.005 --> 00:01:04.007
with Visual Studio code so that we can make our changes.

19
00:01:04.007 --> 00:01:07.009
Here in the file, I'm just going to paste the markup

20
00:01:07.009 --> 00:01:10.009
for the second course below the first one.

21
00:01:10.009 --> 00:01:14.002
After I've saved these changes, we can navigate back

22
00:01:14.002 --> 00:01:17.006
to our Git Bash shell, then using Git

23
00:01:17.006 --> 00:01:20.005
I'll go ahead and commit these changes.

24
00:01:20.005 --> 00:01:23.004
We'll say that we've added a second course

25
00:01:23.004 --> 00:01:25.008
in our commit message.

26
00:01:25.008 --> 00:01:27.006
And with those changes committed,

27
00:01:27.006 --> 00:01:32.001
we can push our feature branch to our shared repository.

28
00:01:32.001 --> 00:01:35.005
(typing)

29
00:01:35.005 --> 00:01:37.002
All right, now the changes are

30
00:01:37.002 --> 00:01:40.004
in our feature branch and we've pushed it to GitHub.

31
00:01:40.004 --> 00:01:42.007
So let's head over to GitHub,

32
00:01:42.007 --> 00:01:45.004
and we'll create a pull request to merge

33
00:01:45.004 --> 00:01:47.005
our changes in the feature branch

34
00:01:47.005 --> 00:01:50.006
into the main branch, that way it can be released.

35
00:01:50.006 --> 00:01:52.006
You'll notice GitHub has picked up

36
00:01:52.006 --> 00:01:55.008
on our changes in the branch so we'll go ahead

37
00:01:55.008 --> 00:02:01.000
and start the process of creating the pull request.

38
00:02:01.000 --> 00:02:03.001
Once I create the pull request

39
00:02:03.001 --> 00:02:06.009
we can go ahead and merge it into our main branch,

40
00:02:06.009 --> 00:02:09.001
which is going to cause the changes

41
00:02:09.001 --> 00:02:11.006
to be deployed for our website.

42
00:02:11.006 --> 00:02:13.008
Now that we've merged the pull request

43
00:02:13.008 --> 00:02:17.001
I'm going to go ahead and I'll delete our feature branch.

44
00:02:17.001 --> 00:02:19.002
Now, let's head over to the actions,

45
00:02:19.002 --> 00:02:22.003
and we can see how the deployment's going.

46
00:02:22.003 --> 00:02:24.003
All right, it looks like our site was deployed.

47
00:02:24.003 --> 00:02:26.001
Let's go check it out.

48
00:02:26.001 --> 00:02:31.001
There it is now, we have two courses on our page, excellent.

49
00:02:31.001 --> 00:02:35.000
Before we wrap up, let's talk through one more scenario.

50
00:02:35.000 --> 00:02:36.006
Let's say that there was a problem

51
00:02:36.006 --> 00:02:39.002
with our change that needed hot fixed.

52
00:02:39.002 --> 00:02:42.003
In GitHub flow, we just follow the same steps

53
00:02:42.003 --> 00:02:46.005
that we just took to fall forward and fix the problem.

54
00:02:46.005 --> 00:02:48.006
It's the same development workflow,

55
00:02:48.006 --> 00:02:51.005
and there's no need for a hot fix branch.

56
00:02:51.005 --> 00:02:55.001
So you can see how GitHub flow simplified our workflow

57
00:02:55.001 --> 00:02:57.007
which is great, but there's some other things

58
00:02:57.007 --> 00:03:00.008
you'll need to do to make this workflow successful.

59
00:03:00.008 --> 00:03:04.000
So let's start there in our next lesson.

