WEBVTT
1
00:00:00.007 --> 00:00:02.004
- [Instructor] Let's work on a new feature

2
00:00:02.004 --> 00:00:03.008
for our small website

3
00:00:03.008 --> 00:00:07.001
so that we can see how trunk-based development works

4
00:00:07.001 --> 00:00:09.009
and get a look at feature flags.

5
00:00:09.009 --> 00:00:12.006
To start, let's get a fresh copy of the code

6
00:00:12.006 --> 00:00:14.003
by pulling all of the changes

7
00:00:14.003 --> 00:00:17.006
from the main branch in the shared repository on GitHub

8
00:00:17.006 --> 00:00:20.002
to our local repository.

9
00:00:20.002 --> 00:00:22.000
Now we're synced up with Trunk,

10
00:00:22.000 --> 00:00:26.004
so let's open our index.md file to add the new feature,

11
00:00:26.004 --> 00:00:29.006
which is going to add another course to the page.

12
00:00:29.006 --> 00:00:32.000
This time, I'm going to add the markup

13
00:00:32.000 --> 00:00:33.004
from LinkedIn learning

14
00:00:33.004 --> 00:00:36.004
that embeds my learning Java collections course

15
00:00:36.004 --> 00:00:37.008
into our site.

16
00:00:37.008 --> 00:00:41.000
So I'll just go ahead and copy that markup.

17
00:00:41.000 --> 00:00:44.001
And then back in our index.md file,

18
00:00:44.001 --> 00:00:46.002
I'm going to go ahead and paste it here

19
00:00:46.002 --> 00:00:48.002
at the bottom of the page.

20
00:00:48.002 --> 00:00:52.004
Now, I'm also going to wrap that markup in a div,

21
00:00:52.004 --> 00:00:56.005
and I'll give that div an ID of preview,

22
00:00:56.005 --> 00:01:02.005
and then I'm going to set its display property to none.

23
00:01:02.005 --> 00:01:06.000
All right, let's go ahead. We'll close that div.

24
00:01:06.000 --> 00:01:09.001
And now we've wrapped that markup that embeds the course,

25
00:01:09.001 --> 00:01:10.000
and initially,

26
00:01:10.000 --> 00:01:13.002
it's going to be hidden on the page by default.

27
00:01:13.002 --> 00:01:15.003
Now, to control when this content

28
00:01:15.003 --> 00:01:17.001
is accessible to end users,

29
00:01:17.001 --> 00:01:19.008
we'll add a feature flag in our site.

30
00:01:19.008 --> 00:01:20.006
To do that,

31
00:01:20.006 --> 00:01:24.007
we'll need to add the LaunchDarkly JavaScript client.

32
00:01:24.007 --> 00:01:26.004
So up at the top of the page,

33
00:01:26.004 --> 00:01:30.008
I'm going to go ahead and add a reference to that script.

34
00:01:30.008 --> 00:01:33.003
This will give us a client that we can use

35
00:01:33.003 --> 00:01:34.009
to retrieve the feature flag

36
00:01:34.009 --> 00:01:38.006
that we created in our last lesson.

37
00:01:38.006 --> 00:01:40.004
Now that we've created the client,

38
00:01:40.004 --> 00:01:43.000
I'm going to add a block of JavaScript

39
00:01:43.000 --> 00:01:45.005
that uses the LaunchDarkly client

40
00:01:45.005 --> 00:01:47.005
to retrieve the feature flag,

41
00:01:47.005 --> 00:01:50.009
which can be used to toggle the display value

42
00:01:50.009 --> 00:01:53.001
of our preview div.

43
00:01:53.001 --> 00:01:53.009
In this code,

44
00:01:53.009 --> 00:01:57.004
we initialize the client by providing our client ID.

45
00:01:57.004 --> 00:01:59.001
We'll fetch that in a minute.

46
00:01:59.001 --> 00:02:01.003
Then, in this event handler,

47
00:02:01.003 --> 00:02:04.001
we listen for changes to our feature flag,

48
00:02:04.001 --> 00:02:07.001
and then depending on the value of that feature flag,

49
00:02:07.001 --> 00:02:11.002
we'll toggle the display property on our preview div.

50
00:02:11.002 --> 00:02:13.006
When the feature flag is activated,

51
00:02:13.006 --> 00:02:15.004
we'll display our content,

52
00:02:15.004 --> 00:02:18.008
but when it's not, it'll be hidden for end users.

53
00:02:18.008 --> 00:02:21.008
You can see that this code is missing two values:

54
00:02:21.008 --> 00:02:24.005
our client ID and the flag name.

55
00:02:24.005 --> 00:02:27.001
So let's head over to LaunchDarkly,

56
00:02:27.001 --> 00:02:29.006
and we'll grab these values.

57
00:02:29.006 --> 00:02:31.005
Here, we can see our first value:

58
00:02:31.005 --> 00:02:32.009
the name of our feature flag.

59
00:02:32.009 --> 00:02:35.000
It's course-preview.

60
00:02:35.000 --> 00:02:37.003
The second value, the client ID,

61
00:02:37.003 --> 00:02:39.005
we can obtain from the account settings,

62
00:02:39.005 --> 00:02:42.002
so let's navigate to our Account settings

63
00:02:42.002 --> 00:02:44.002
and then click on Projects,

64
00:02:44.002 --> 00:02:47.003
and here you'll see that we have two environments

65
00:02:47.003 --> 00:02:48.006
for our feature flag.

66
00:02:48.006 --> 00:02:51.005
Now, we're going to work in our production environment,

67
00:02:51.005 --> 00:02:54.006
and here you can see the client-side ID

68
00:02:54.006 --> 00:02:56.001
for that environment.

69
00:02:56.001 --> 00:02:58.003
Let's go ahead. We'll copy that.

70
00:02:58.003 --> 00:03:03.006
And then back in our index.md file, I'm going to paste it,

71
00:03:03.006 --> 00:03:06.005
and then we'll provide the name of our feature flag.

72
00:03:06.005 --> 00:03:09.009
It was course-preview.

73
00:03:09.009 --> 00:03:13.003
Okay, now this code is ready to be merged into Trunk

74
00:03:13.003 --> 00:03:15.000
so that it can be deployed.

75
00:03:15.000 --> 00:03:17.000
Let's go ahead, and we'll create a commit

76
00:03:17.000 --> 00:03:20.005
that saves these changes in our local repository.

77
00:03:20.005 --> 00:03:21.006
For the commit message,

78
00:03:21.006 --> 00:03:24.001
I'll just say that we're adding a new course

79
00:03:24.001 --> 00:03:27.007
and a feature flag.

80
00:03:27.007 --> 00:03:30.000
Okay, now we've committed the changes.

81
00:03:30.000 --> 00:03:31.000
Let's go ahead,

82
00:03:31.000 --> 00:03:35.007
and we'll push them over to the shared repository.

83
00:03:35.007 --> 00:03:37.008
All right, now the changes are pushed,

84
00:03:37.008 --> 00:03:40.000
and it's going to trigger the GitHub action

85
00:03:40.000 --> 00:03:42.008
that's going to build and deploy the page.

86
00:03:42.008 --> 00:03:45.008
For small teams working directly against Trunk,

87
00:03:45.008 --> 00:03:48.007
that's how simple the development workflow can be

88
00:03:48.007 --> 00:03:50.007
in trunk-based development.

89
00:03:50.007 --> 00:03:53.003
Now, of course, for production systems,

90
00:03:53.003 --> 00:03:57.001
you would want some tests in place to verify these changes.

91
00:03:57.001 --> 00:04:01.002
But for our simple project, it's really not necessary.

92
00:04:01.002 --> 00:04:03.001
Okay, let's head over to GitHub,

93
00:04:03.001 --> 00:04:06.006
and we'll take a look at how the deployment is going.

94
00:04:06.006 --> 00:04:07.004
There, we can see

95
00:04:07.004 --> 00:04:10.001
that our website was successfully deployed.

96
00:04:10.001 --> 00:04:12.008
Let's go ahead, and we'll open the page,

97
00:04:12.008 --> 00:04:14.009
and you'll notice that our third course

98
00:04:14.009 --> 00:04:17.000
is currently not present.

99
00:04:17.000 --> 00:04:20.004
Now, let's toggle our feature flag over in LaunchDarkly

100
00:04:20.004 --> 00:04:22.000
to see what happens.

101
00:04:22.000 --> 00:04:24.000
So here on the feature flag,

102
00:04:24.000 --> 00:04:26.003
I'm just going to scroll over to the right,

103
00:04:26.003 --> 00:04:30.006
and I can just click on this toggle in order to activate it.

104
00:04:30.006 --> 00:04:33.002
So I'll save the changes,

105
00:04:33.002 --> 00:04:35.009
and now if we just give it a minute,

106
00:04:35.009 --> 00:04:38.008
we'll see that the third course is present

107
00:04:38.008 --> 00:04:41.004
and displayed on our page.

108
00:04:41.004 --> 00:04:43.000
If we'd like to toggle it off,

109
00:04:43.000 --> 00:04:46.008
we can just go ahead and deactivate our feature flag,

110
00:04:46.008 --> 00:04:49.003
and there you can see it disappeared.

111
00:04:49.003 --> 00:04:51.006
So that's just a basic example

112
00:04:51.006 --> 00:04:53.005
of how feature flags can be used

113
00:04:53.005 --> 00:04:55.004
with trunk-based development.

114
00:04:55.004 --> 00:04:58.000
Our example used a flag on the client side,

115
00:04:58.000 --> 00:05:00.002
but there are SDKs that you can use

116
00:05:00.002 --> 00:05:04.000
to toggle features on and off on the server side, as well.

117
00:05:04.000 --> 00:05:05.008
You'll find that using feature flags

118
00:05:05.008 --> 00:05:08.001
is a great way to break down your features

119
00:05:08.001 --> 00:05:10.000
so you can keep your changes small

120
00:05:10.000 --> 00:05:11.009
and avoid long-lived branches,

121
00:05:11.009 --> 00:05:14.001
which is how your team will be successful

122
00:05:14.001 --> 00:05:16.000
with trunk-based development.

