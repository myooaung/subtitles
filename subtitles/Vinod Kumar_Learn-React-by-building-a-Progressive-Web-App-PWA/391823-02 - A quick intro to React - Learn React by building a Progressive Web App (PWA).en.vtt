WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00:00.000 --> 00:00:06.290
in this video,

00:00:06.290 --> 00:00:08.990
let's have a quick intro on Regis.

00:00:08.990 --> 00:00:15.460
The edges is a jobless complexity for building user interfaces developed and maintained by

00:00:15.460 --> 00:00:16.080
Facebook.

00:00:16.080 --> 00:00:18.880
If you're looking at something called MBC,

00:00:18.880 --> 00:00:20.620
readjust our justice.

00:00:20.620 --> 00:00:26.930
The view part off Embassy React makes it painless to create interactive user interfaces.

00:00:26.930 --> 00:00:32.210
You can design simple views for each state in your application state being the data

00:00:32.210 --> 00:00:33.060
maintained by your,

00:00:33.060 --> 00:00:38.940
um on react well efficiently update and render just the right components When your data

00:00:38.940 --> 00:00:39.580
changes.

00:00:39.580 --> 00:00:40.600
Using the act,

00:00:40.600 --> 00:00:44.950
you can build encapsulated components that manage their own state,

00:00:44.950 --> 00:00:48.070
which is data and then compose them in tow.

00:00:48.070 --> 00:00:50.470
A very complex user interfaces,

00:00:50.470 --> 00:00:55.940
since a component logic is written in JavaScript instead off something like templates,

00:00:55.940 --> 00:00:57.630
which are like HTML snippets,

00:00:57.630 --> 00:01:03.730
you can easily pass rich data through Europe and keep the state out of the actual dawn to

00:01:03.730 --> 00:01:06.350
understand what component is on the boat.

00:01:06.350 --> 00:01:07.790
Have a look at this application,

00:01:07.790 --> 00:01:12.360
and this is a movie brother application that we're gonna develop here.

00:01:12.360 --> 00:01:15.450
The application is made up off lots of components,

00:01:15.450 --> 00:01:20.300
so you can think of the entire application itself as one component,

00:01:20.300 --> 00:01:26.320
which is made up off child components like Heather Component home component.

00:01:26.320 --> 00:01:28.450
When you're searching for movies,

00:01:28.450 --> 00:01:33.100
you get a list off movies that could be another component on a movie list itself is made up

00:01:33.100 --> 00:01:37.610
off movie card components on when you click on a particular movie.

00:01:37.610 --> 00:01:39.220
We want to get the details of the movie,

00:01:39.220 --> 00:01:45.310
and we have this movie details component over here so effectively you have a tree off

00:01:45.310 --> 00:01:46.030
components.

00:01:46.030 --> 00:01:52.130
So up is the component that has child components like Header Home Movie List.

00:01:52.130 --> 00:01:57.250
Movie Details Editor on movie list itself has another child component called movie card.

00:01:57.250 --> 00:02:00.850
So what does a company look like in reaches?

00:02:00.850 --> 00:02:05.600
A component can be created in two is number one is a class.

00:02:05.600 --> 00:02:09.850
Here is an example off a class at that extends component,

00:02:09.850 --> 00:02:11.700
which is supported by the ECJ s.

00:02:11.700 --> 00:02:15.690
A class rece component in the edges has a function called render,

00:02:15.690 --> 00:02:18.150
which is automatically called very arduous luxury,

00:02:18.150 --> 00:02:23.400
which is supposed to return an HTML snippet in an XML format.

00:02:23.400 --> 00:02:28.940
Since we're combining the JavaScript and examining the same court on this part is called as

00:02:28.940 --> 00:02:30.000
JSX.

00:02:30.000 --> 00:02:35.170
It's an XML within the JavaScript in not a string like you can see that we don't have any

00:02:35.170 --> 00:02:35.710
double courts,

00:02:35.710 --> 00:02:41.490
a single courts over here and this is going to be processed and render to the actual Dom.

00:02:41.490 --> 00:02:46.310
You can also create a component using a function,

00:02:46.310 --> 00:02:50.620
and the function just is an equal int of the render function that we just know.

00:02:50.620 --> 00:02:54.730
So it's supposed to written and it's demon in the form of an XML,

00:02:54.730 --> 00:02:57.280
which is again a J six over here.

00:02:57.280 --> 00:03:02.960
Now we can simplify this particular function in tow es six out of function by removing the

00:03:02.960 --> 00:03:05.950
function keyword on and adding an adult here.

00:03:05.950 --> 00:03:10.130
So something that looks like this we have a constant app.

00:03:10.130 --> 00:03:13.670
So the variable app here represents an entire function.

00:03:13.670 --> 00:03:14.370
In this case,

00:03:14.370 --> 00:03:15.350
it's an arrow function.

00:03:15.350 --> 00:03:16.620
We dont bad.

00:03:16.620 --> 00:03:16.740
Um,

00:03:16.740 --> 00:03:17.760
it was in this example,

00:03:17.760 --> 00:03:21.860
but eventually you may see that there could be some perimeters also.

00:03:21.860 --> 00:03:26.740
So one thing that you may have to keep in mind is the name off the function or the name of

00:03:26.740 --> 00:03:30.940
the class that represents a component must start with Captain later.

00:03:30.940 --> 00:03:31.850
Otherwise,

00:03:31.850 --> 00:03:33.430
you're going to get an editor.

00:03:33.430 --> 00:03:35.660
That's it for this video.

00:03:35.660 --> 00:03:36.680
In the next lecture,

00:03:36.680 --> 00:03:40.150
let's get started with developing react applications

