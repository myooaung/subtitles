WEBVTT

0
00:03.100 --> 00:06.350
So in the last lecture we created the sidebar here.

1
00:06.780 --> 00:15.490
So we, first we registered a sidebar using the register_sidebar() function and we gave it unique ID here "primary-

2
00:15.520 --> 00:16.500
sidebar".

3
00:17.400 --> 00:25.860
And that created an area in the wp-admin where we can drag and drop widgets in the Primary Sidebar.

4
00:26.130 --> 00:32.040
And then to display this primary sidebar bar we use a function called dynamic_sidebar() and we gave it

5
00:32.040 --> 00:33.640
the ID of the sidebar.

6
00:34.470 --> 00:36.870
And that's what appears here.

7
00:37.470 --> 00:40.190
So in this lecture we need to do pretty much the same thing.

8
00:40.410 --> 00:43.020
Only this time it will be a little different.

9
00:43.020 --> 00:50.670
So here's the template that I already created to prepare for this course. And I have my footer here.

10
00:50.680 --> 00:56.490
And what we need to do is create multiple sidebars for each column in the footer.

11
00:56.790 --> 01:02.340
So we have the first column that has the recent posts widget. And it could also have another widgets 

12
01:03.180 --> 01:04.410
below this one.

13
01:04.410 --> 01:10.350
And the second column with the tags will also have multiple widgets and so on. But we also need this

14
01:10.980 --> 01:12.720
number of columns to be dynamic.

15
01:12.750 --> 01:14.700
We need to get some input from the user.

16
01:14.850 --> 01:18.570
And depending on this input we'll have to create different number of sidebars.

17
01:18.720 --> 01:25.230
So what I'm proposing is, we will instruct the user that he have to type a comma separated values for

18
01:25.230 --> 01:26.490
each column.

19
01:27.180 --> 01:35.520
In other words, if they let's say typed 3, 3, 3, 3 this will mean 4 columns and

20
01:35.520 --> 01:39.310
each column will span 3 columns, you know, 12 column width system.

21
01:39.450 --> 01:42.790
So the total of these numbers should not be more than 12.

22
01:42.810 --> 01:46.510
So for example 6 and 6 would create 2 columns here.

23
01:46.650 --> 01:49.830
And each one would have a sidebar with its own widgets.

24
01:49.830 --> 01:53.460
So in this example here this is 3 and 3 and 3 and 3.

25
01:53.460 --> 01:54.760
So let's do it.

26
01:54.960 --> 02:00.130
So first we need to register new sidebars. But this time it will be different. This time we don't

27
02:00.130 --> 02:05.790
know how many sidebars we need to register. And to know that we need the user's input, right?

28
02:05.790 --> 02:09.460
Later in the course we'll have an entire section about how to get input from the user.

29
02:09.480 --> 02:12.640
You know for theme options and settings and stuff like that.

30
02:12.670 --> 02:19.370
But for now let's just assume that we have an input from the, let's define a variable.

31
02:19.660 --> 02:21.100
I'm gonna call it $footer_layout.

32
02:23.950 --> 02:29.570
And let's hardcode it for now and later we will, you know, create a text area where user can type and

33
02:29.580 --> 02:37.240
this and then we get the user's input. So let's assume he typed 4 threes. And let's also create a

34
02:37.240 --> 02:42.510
new variable called $footer_bg.

35
02:43.040 --> 02:45.470
And we hardcode it for now.

36
02:45.500 --> 02:47.720
So this would be either dark or light background.

37
02:47.780 --> 02:53.320
And then later we will create an option for the user to choose whether he needs a light footer or

38
02:53.320 --> 02:55.110
a dark footer.

39
02:55.160 --> 02:57.020
Now we need to register our sidebar.

40
02:57.440 --> 03:01.010
And that as mentioned will depend on how many numbers the user type here.

41
03:01.010 --> 03:02.140
So in our case it's 4.

42
03:02.310 --> 03:04.170
But maybe the user would type something else.

43
03:04.390 --> 03:12.050
So what we can do is we can convert this variable into, instead of a comma separated string, into an array

44
03:12.500 --> 03:13.420
of numbers.

45
03:13.580 --> 03:22.520
So we can use a PHP  function explode(). And this function takes a separator which is in our case a ","

46
03:23.540 --> 03:25.590
and a string.

47
03:26.060 --> 03:27.930
So $footer_layout.

48
03:28.400 --> 03:34.600
So this variable $footer_layout will now hold an array of 3 and 3 and 3 and 3.

49
03:34.690 --> 03:43.020
And now we can loop over this array and register a sidebar for each iteration, right? So let's call

50
03:43.040 --> 03:47.940
this variable $columns and then let's

51
03:48.030 --> 03:51.210
go ahead and create a foreach loop.

52
03:51.370 --> 04:02.050
So "foreach ( $columns as $i => $column)".

53
04:02.450 --> 04:07.830
So $i will be the index and $column will be the current number which is 3 and 3 and 3 and

54
04:07.830 --> 04:12.830
so on. And for each iteration we need to register sidebar.

55
04:13.020 --> 04:20.260
So "register_sidebar()" and we'll have an array of arguments.

56
04:20.370 --> 04:22.030
So we've done that before.

57
04:22.770 --> 04:29.470
So let's actually copy these and edit them instead of typing the whole thing.

58
04:29.540 --> 04:32.600
So this is not primary-sidebar anymore 

59
04:32.660 --> 04:35.170
this is a footer-sidebar.

60
04:36.380 --> 04:43.370
But as we mentioned this should be unique so for each iteration let's append the index.

61
04:44.400 --> 04:46.950
So "$i + 1".

62
04:51.560 --> 04:53.590
And for the name let's call it "Footer

63
04:56.640 --> 04:57.930
"Footer Widgets"

64
05:02.510 --> 05:05.660
and then "Column" and then the number.

65
05:05.670 --> 05:11.750
So remember how we put variables in a string that is translated and escaped.

66
05:11.830 --> 05:12.700
We use printf().

67
05:15.880 --> 05:16.500
sprintf()

68
05:16.530 --> 05:24.260
if you don't want to echo. And the second argument is the number which is "$i+1".

69
05:27.940 --> 05:40.220
And the description. I'll just type "Footer widgets". And "before_widget" I have a class defined in the CSS called

70
05:40.970 --> 05:45.280
"c-footer-widget". And let's remove the margin.

71
05:45.290 --> 05:50.910
And let's just add something that will change the color scheme of the widget.

72
05:51.480 --> 05:54.630
So I mentioned we have a footer background option here.

73
05:55.080 --> 06:00.010
So if the footer background is dark we need the widget to be light and vice versa.

74
06:00.410 --> 06:09.670
So let's create a new variable. Let's call it $widget_theme.

75
06:09.920 --> 06:18.700
And then a simple if condition here. If footer background is light

76
06:22.870 --> 06:26.970
then the $widget_theme should be dark.

77
06:27.010 --> 06:35.580
So I have a class called "c-footer-widget--dark".

78
06:36.900 --> 06:43.900
And if you read about the BEM naming convention for CSS, the "--" is a modifier, it changes some

79
06:43.900 --> 06:49.710
stuff in the component. So "dark" will make the widget dark

80
06:50.140 --> 06:51.280
and the other one is light.

81
06:51.290 --> 07:02.850
So if it's not light it's dark. So the class should be "light". And then we will copy this variable and append it in

82
07:04.080 --> 07:05.020
the class here.

83
07:05.370 --> 07:05.790
So, like so.

84
07:13.790 --> 07:17.750
we don't have to change anything here. So let's go to the wp-admin.

85
07:17.830 --> 07:27.480
And we should expect 4 new sidebars. So let's go to this page and refresh it.

86
07:28.150 --> 07:32.070
And great. We have now Footer Widgets Column 1 and 2 and 3 and 4.

87
07:32.380 --> 07:40.960
Let's try and maybe remove one of these. And we now only have three sidebars.

88
07:41.040 --> 07:43.400
So this is the first step registering

89
07:43.580 --> 07:44.510
the sidebars.

90
07:44.520 --> 07:46.210
Now we need to display them.

91
07:46.470 --> 07:54.330
So this will be similar to what we have done in the sidebar.php using dynamic_sidebar() to load

92
07:54.810 --> 07:55.450
the sidebar.

93
07:55.470 --> 07:56.470
So let's do this.

94
07:56.640 --> 08:00.140
So in the footer.php let's create a new div.

95
08:03.300 --> 08:11.070
And I'm gonna put some classes that I styled in my CSS so "c-footer" and then close

96
08:11.070 --> 08:11.900
it.

97
08:12.180 --> 08:20.400
I guess we also need to access the theme options that we defined in the sidebars in the footer.

98
08:20.520 --> 08:24.290
We need to know the columns and the footer background also.

99
08:24.980 --> 08:26.050
So let's copy these.

100
08:26.460 --> 08:32.270
And then as I mentioned, later we will this will be dynamic. And it's open a PHP tag.

101
08:32.560 --> 08:35.700
Sorry "<?php" and paste.

102
08:39.910 --> 08:47.860
So now I've access to these options so if we have a dark background we need a class called "c-

103
08:47.860 --> 08:51.500
footer--" and then the footer background.

104
08:51.500 --> 08:56.600
So let's open a PHP tag and then "echo $footer_bg".

105
08:57.500 --> 08:59.400
So this will add a class footer

106
08:59.520 --> 09:03.680
"c-footer c-footer--dark" for a dark background.

107
09:03.890 --> 09:11.440
And on the other hand in the sidebar if it's dark it will add a classs light for the widget.

108
09:11.440 --> 09:17.920
So now we need to create a row with columns and the columns will depend on the user's input.

109
09:17.920 --> 09:21.880
So let's create a class="o-container".

110
09:31.400 --> 09:37.130
And then another one. A row, so "o-row".

111
09:42.440 --> 09:45.610
And then inside the row we'll need to create the columns.

112
09:45.620 --> 09:51.610
So here where we will have to do a similar loop that we did here.

113
09:52.430 --> 10:02.460
So let's open a PHP tag and start a "foreach" loop "foreach ( $columns 

114
10:03.790 --> 10:04.780
as $i => $column )"

115
10:11.280 --> 10:13.720
And open { and close PHP.

116
10:14.940 --> 10:20.430
And then open PHP tag and close the loop. And then inside here we'll have some HTML.

117
10:20.510 --> 10:27.240
So now we need to create a column which will span the current column, which will be 3 and 3 

118
10:27.240 --> 10:28.360
and 3 and 3.

119
10:28.860 --> 10:30.680
So let's go to index to copy.

120
10:30.870 --> 10:35.470
It's longer class here. So let's copy this one

121
10:41.040 --> 10:44.770
and paste it and close.

122
10:45.000 --> 10:50.020
And what we need to change is the "span-4@medium".

123
10:50.310 --> 10:51.180
So let's open a PHP.

124
10:51.340 --> 10:51.770
tag

125
10:54.460 --> 10:59.320
and inside of it let's "echo $column".

126
11:05.140 --> 11:10.600
So let's save and before going further let's see what this have done.

127
11:11.140 --> 11:22.150
So here we now have a footer,an empty footer. And that seems packed in have container, row and then we have

128
11:22.540 --> 11:25.400
4 columns each one spanning 3.

129
11:25.420 --> 11:35.340
So let's change one of these to 4 for example.

130
11:35.480 --> 11:40.260
And now we're having 3 3 3 and 4, great.

131
11:40.260 --> 11:43.580
So let's now display the sidebar.

132
11:44.540 --> 11:51.080
So what we need to do is like we did for the other sidebar. we need to check if the sidebar is active

133
11:51.260 --> 12:02.360
and if so we will display it using dynamic_sidebar(). So let's open a PHP tag and if a sidebar active or is_active_

134
12:02.380 --> 12:06.200
sidebar and then I remember the ID

135
12:10.430 --> 12:12.380
was footer-sidebar and then the index.

136
12:12.380 --> 12:12.630
Right?

137
12:12.650 --> 12:18.460
So "footer-sidebar-"

138
12:19.400 --> 12:24.070
and then "($i+1)". 

139
12:24.560 --> 12:35.010
So this will check if each column in the loop is active and then. So let's close the PHP here.

140
12:35.930 --> 12:43.600
And if this condition is true dynamic_sidebar() and then the ID which is the same as this one. So let's

141
12:43.610 --> 12:51.490
copy this and add it here and ;. And this should do it.

142
12:52.450 --> 12:53.230
So let's go to.

143
12:56.430 --> 13:03.740
We have an error here. And I just forgot to append here and here.

144
13:04.540 --> 13:11.810
So this. Let's now go to the admin and add some widgets. So let's add the categories.

145
13:16.950 --> 13:19.890
And add tags.

146
13:23.570 --> 13:30.320
And maybe some text.

147
13:30.360 --> 13:34.480
And finally let's have a gallery.

148
13:41.350 --> 13:42.410
Select some images

149
13:46.890 --> 13:51.400
and save. Now if you refresh our web site.

150
13:51.610 --> 13:53.670
And here we have it.

151
13:54.610 --> 13:59.480
So let's do something like changing the layout. So let's  try 4, 4, 4.

152
14:03.270 --> 14:08.760
And we now have 3 columns each one spanning 4 columns in the grid system.

153
14:08.860 --> 14:15.280
Let's try and change this to "light". And we'll also have to change it in the sidebars.

154
14:17.910 --> 14:22.630
But of course when this field is in the theme options we won't have to change it manually.

155
14:22.630 --> 14:25.800
So now we have a light footer.

156
14:25.840 --> 14:27.300
Of course that's not the best styling

157
14:27.310 --> 14:32.030
but as I mentioned it's not CSS or design course so this will do.

158
14:32.390 --> 14:43.950
So let's get back these variables. Let's finally add, here in the finished website we have, a text here.

159
14:44.340 --> 14:47.500
And later this text will be also the element from the theme options.

160
14:47.520 --> 14:48.150
So let's add

161
14:48.210 --> 14:49.840
the markup for this one.

162
14:50.460 --> 14:55.500
So in footer.php and after the "c-footer" class let's add another one

163
14:58.650 --> 15:03.480
and this one is called "c-site-info".

164
15:03.600 --> 15:12.500
It also needs the background colors so "c-site-info--" the footer background.

165
15:17.070 --> 15:21.910
Close it and then inside of it we will have also to go into a container.

166
15:21.910 --> 15:25.000
Let's copy this as to save some time.

167
15:33.500 --> 15:34.540
And we have

168
15:34.590 --> 15:37.490
inside the row, a column.

169
15:37.490 --> 15:39.970
So let's copy this one.

170
15:40.730 --> 15:45.760
Of course if you're talking it compose the video and copy.

171
15:46.530 --> 15:51.510
So this will span 12 and that will also have a class called

172
15:51.680 --> 15:58.200
"c-site-info__text".

173
15:58.530 --> 16:08.580
So let's close it. And let's now type some text and later we will get this text also from the theme options. So

174
16:12.870 --> 16:16.380
So it should look like this one now.

175
16:16.530 --> 16:17.660
And here it is.

176
16:17.930 --> 16:32.820
And finally let's just cover and in each case imagine the user did not put any widgets in all the columns.

177
16:33.160 --> 16:35.070
So let's delete all these.

178
16:35.770 --> 16:37.960
And then let's refresh.

179
16:38.290 --> 16:41.190
So we'll have this empty space here which looks weird.

180
16:41.320 --> 16:45.320
So we need to check first if, before the  footer sidebars are empty.

181
16:45.530 --> 16:49.470
We don't have to display this thing at all. So in the footer

182
16:49.770 --> 16:55.080
let's create a flag and call it $widgets_active

183
16:59.470 --> 17:01.710
and set this to "false".

184
17:05.500 --> 17:08.620
And then we need to loop over the $columns.

185
17:21.480 --> 17:22.170
Then check

186
17:25.170 --> 17:26.850
if any of them is active.

187
17:26.850 --> 17:37.910
So "is_active_sidebar()" and then we can copy the ID from here. So "footer-sidebar-" current index.

188
17:41.290 --> 17:43.810
If any one of them is active,

189
17:43.840 --> 17:46.860
we'll have to set the flag to "true".

190
17:47.350 --> 17:49.530
So $widgets_active = true".

191
17:52.090 --> 18:02.290
And thenlet's add an if condition here. If $widgets_active, or at least one column is

192
18:02.320 --> 18:04.990
active display the footer.

193
18:05.050 --> 18:09.290
Otherwise we don't have to display the footer so

194
18:10.160 --> 18:10.810
let's close it.

195
18:19.000 --> 18:21.690
So now we don't have any footer.

196
18:21.910 --> 18:31.590
And if we had just one widget we'll have it. Great.

197
18:31.590 --> 18:36.080
So I think this was a long lecture. Let's carry on in the next lecture.