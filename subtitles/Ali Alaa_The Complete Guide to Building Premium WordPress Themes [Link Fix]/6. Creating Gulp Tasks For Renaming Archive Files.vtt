WEBVTT

0
00:03.210 --> 00:07.390
So in the last lecture we created archive templates for the custom post type.

1
00:07.620 --> 00:12.570
But now we have a problem that our custom post types and taxonomies are prefixed with the "_themename"

2
00:12.570 --> 00:13.660
placeholder.

3
00:13.970 --> 00:20.510
So during development we had to call our templates with the placeholder in order for them to work.

4
00:20.550 --> 00:26.880
However after we built our theme the "_themename" placeholder in the custom post types and custom taxonomies will

5
00:26.880 --> 00:32.400
be replaced with the actual theme name. But the templates here however will not be replaced.

6
00:32.400 --> 00:37.200
We're not doing anything to replace the file names in the templates.

7
00:37.500 --> 00:46.110
So let's go to our gulpfile. And now what we need to do is when we bundle our theme before compressing we

8
00:46.120 --> 00:48.560
need to rename these files, right?

9
00:49.640 --> 00:56.060
So let's Google a gulp package called "gulp rename".

10
00:58.790 --> 01:01.040
And let's install it.

11
01:01.040 --> 01:03.440
So let's copy its name here.

12
01:03.670 --> 01:05.830
And let's go to,

13
01:05.840 --> 01:13.980
so this is the plugin make sure you are in the theme. And let's stop this and "npm install

14
01:14.160 --> 01:20.180
--save-dev gulp-rename".

15
01:25.100 --> 01:28.750
So while it's installing let's take a look at the documentation.

16
01:28.930 --> 01:35.600
So it takes a source file and then we pipe it. We pipe here rename function and give it another name, right? Or

17
01:35.700 --> 01:39.310
another path. And then we save it in some destination.

18
01:39.940 --> 01:43.400
Or we can have a function and that's what we will use.

19
01:43.450 --> 01:47.120
So let's instead of reading this list see this in action.

20
01:47.170 --> 01:50.810
So let's run "npm start" again.

21
01:53.130 --> 01:57.300
And now in the gulpfile let's import it.

22
02:01.500 --> 02:08.910
And let's create a new key here in the paths object and this will contain all the files that we want

23
02:08.910 --> 02:09.680
to rename, right?

24
02:09.690 --> 02:17.560
So let's call it "rename" and the source will be an array of all the files that we want to rename.

25
02:17.550 --> 02:21.940
So I'm gonna paste this and add "," here.

26
02:22.130 --> 02:27.350
So the "archive -_themename_portfolio", "single-_themename_portfolio" and the taxonomies.

27
02:27.380 --> 02:28.760
Right?

28
02:29.000 --> 02:32.500
And let's create a new task anywhere here.

29
02:33.820 --> 02:40.160
And let's call this one "replace_names" maybe "replace_filenames".

30
02:43.770 --> 02:46.470
And we will return

31
02:47.770 --> 02:48.770
"gulp.src"

32
02:50.250 --> 02:55.680
and then "(paths.rename.src)".

33
02:55.810 --> 03:03.560
So now we have here an array of all the files that we want to rename. And then we will ".pipe(rename())".

34
03:04.340 --> 03:05.570
And inside the rename

35
03:05.570 --> 03:11.070
we'll have a function and this function will receive an argument called "path" and we'll see what the "path"

36
03:11.100 --> 03:11.710
will contain

37
03:11.710 --> 03:13.270
in a moment.

38
03:13.960 --> 03:22.720
So let's inside this function "console.log(path)". And inside of this function we'll do the renaming

39
03:22.840 --> 03:25.060
logic and then we will pipe

40
03:27.770 --> 03:30.650
the renamed files our root folder.

41
03:30.660 --> 03:38.500
So "gulp.dest())" and then we need to put the renamed files in the root folder, right?

42
03:42.090 --> 03:47.800
So let's now try to run this function or this is a task.

43
03:49.500 --> 03:57.710
Let's Control+C and then "gulp replace_filenames". And now we have the console log that we did.

44
03:57.720 --> 03:59.070
So let's.

45
04:00.110 --> 04:07.050
So for every file in this array we will have an object that will contain "dirname" and "basename" and

46
04:07.200 --> 04:08.600
"extname".

47
04:08.610 --> 04:11.740
So what we want to modify is the "basename".

48
04:11.790 --> 04:20.280
So what we can do is we can modify this basename. So "path.basename=" and we want to call it the

49
04:20.280 --> 04:25.870
same thing but replace "_themename" with the actual theme name, right?

50
04:25.890 --> 04:37.770
So we can say "path.basename.replace("_themename",info.name)" from package.json.

51
04:37.770 --> 04:38.660
Right?

52
04:40.460 --> 04:41.450
And that's it.

53
04:41.480 --> 04:42.820
So let's try and run this function now.

54
04:47.020 --> 04:55.130
And let's see. And as you can see we now have single-_themename and we have single-firsttheme

55
04:55.130 --> 04:57.700
single-firsttheme_portfolio.

56
04:58.250 --> 05:03.270
And same for  taxonomy and the archive.

57
05:03.740 --> 05:06.350
So when do we actually need to run this task?

58
05:06.670 --> 05:13.370
It's when we build our theme or bundle our theme sorry before the after building and before compressing

59
05:13.400 --> 05:15.350
into a zip file.

60
05:15.470 --> 05:23.150
So let's add this one. And let's try and bundle and see what will happen. So "npm run bundle".

61
05:26.190 --> 05:37.870
So let's see inside the themes, firsttheme and packaged. Let's remove this.

62
05:37.940 --> 05:45.140
And as you can see we have the one that has the correct theme name but we still have the old one. And it

63
05:45.140 --> 05:50.100
will not cause a problem but it will be useless and we don't need to include it in our bundle.

64
05:50.130 --> 05:50.790
Right?

65
05:51.140 --> 06:00.930
So what we can do is when we bundle our theme we have here the paths that we will ignore,

66
06:00.950 --> 06:01.400
right?

67
06:01.520 --> 06:06.330
So if you remember we will bundle all files except some files.

68
06:06.350 --> 06:10.790
So the exclamation mark here means that this file will not be included.

69
06:11.030 --> 06:13.360
So we can do the same for the old files.

70
06:13.430 --> 06:17.200
You can add these files here

71
06:21.060 --> 06:29.010
and then just add the exclamation mark. So this files will be ignored when bundling the theme.

72
06:29.360 --> 06:32.200
So let's try now again. Let's remove this one.

73
06:35.880 --> 06:41.290
And let's unzip and now we have only one.

74
06:46.520 --> 06:47.040
So great.

75
06:47.040 --> 06:52.550
So finally we need to during development we don't need to have these ones,

76
06:52.800 --> 06:53.920
the firsttheme ones.

77
06:53.950 --> 06:54.810
Right?

78
06:54.840 --> 07:00.370
So after building we need to run another function that will delete these ones.

79
07:00.690 --> 07:09.070
So let's create a new task. Let's type it here and then we will create it, "delete_replaced_filenames".

80
07:13.830 --> 07:15.570
So remember the "series" will run

81
07:15.600 --> 07:17.320
each one of these separately.

82
07:17.340 --> 07:20.160
So this one won't run until this one finishes.

83
07:20.220 --> 07:26.370
So after renaming and compressing and everything is fine we will just delete the files that we

84
07:26.360 --> 07:28.320
renamed.

85
07:28.380 --> 07:32.360
So let's create this task here.

86
07:33.300 --> 07:35.100
So "export const".

87
07:38.550 --> 07:45.000
And you already have a package called "del" that delete files.

88
07:45.660 --> 07:53.630
So what we can do is we can "return del()". And then we need an array of the files that we want to delete.

89
07:53.730 --> 07:56.620
So what we can do is we can create an array like this one.

90
07:56.810 --> 08:01.260
And then just replace the "_themename" with the "firsttheme". So let's do that.

91
08:01.260 --> 08:07.740
So we'll use this array and then loop through it and replace "_themename" with the actual theme name.

92
08:07.740 --> 08:19.030
So we can use the map() function. So "paths.rename.src.map()". And the map function will return a new array.

93
08:19.070 --> 08:24.000
So it will take a function that will receive the current item in the array.

94
08:24.500 --> 08:27.620
So this will be the "filename".

95
08:27.960 --> 08:30.770
This will be each one of these.

96
08:31.190 --> 08:34.000
And then we need to return the new file name.

97
08:34.040 --> 08:41.220
So "filename.replace("_themename",info.name)".

98
08:41.660 --> 08:42.710
So let's save.

99
08:43.130 --> 08:49.190
And just to make this clear. The delete receives an array of the files that we want to delete. And the

100
08:49.190 --> 08:50.120
map function

101
08:50.150 --> 08:57.420
will map through the files in the "rename.src" which are these ones. And then it will return a new array.

102
08:57.540 --> 09:03.450
But each item this array will have "_themename" replaced with "info.name", right?

103
09:03.470 --> 09:06.830
So let's run this.

104
09:06.830 --> 09:08.550
Hopefully one final time.

105
09:10.600 --> 09:15.880
So let's have check this first and it's fine.

106
09:16.080 --> 09:18.640
And let's check the development folder.

107
09:19.620 --> 09:22.700
And we only have the "_themename" ones, right?

108
09:24.030 --> 09:25.810
So I hope this was clear.

109
09:26.190 --> 09:28.220
If you have any questions let me know.

110
09:28.500 --> 09:31.490
Let's now do one final thing for this lecture.

111
09:31.710 --> 09:39.490
As we mentioned we need to add a new option in the Customizer to allow the user to modify this "portfolio"

112
09:39.520 --> 09:41.170
slug in the URL.

113
09:41.640 --> 09:43.060
So let's do that in the next lecture.