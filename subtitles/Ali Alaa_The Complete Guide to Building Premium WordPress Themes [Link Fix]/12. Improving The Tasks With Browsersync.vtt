WEBVTT

0
00:00.170 --> 00:11.280
So let's do an improvement to the current tasks that we have. So right now we are watching for changes for

1
00:11.280 --> 00:15.390
all our tasks in the "watch" task here.

2
00:15.630 --> 00:21.120
So let's open our website and make sure you have your MAMP server open.

3
00:28.080 --> 00:29.010
And let's run

4
00:29.010 --> 00:30.200
"gulp"

5
00:30.330 --> 00:32.100
"gulp dev".

6
00:35.040 --> 00:36.430
And out watch is watching for changes right?

7
00:36.450 --> 00:41.510
So let's go to the bundle.scss

8
00:44.010 --> 00:45.340
and the header.

9
00:45.610 --> 00:47.880
And let's change this color.

10
00:51.860 --> 00:59.730
And the "styles" task run. And then in the browser we have to go and refresh.

11
01:00.080 --> 01:12.550
I think we maybe you need to disable the cache.

12
01:12.610 --> 01:20.740
So here we have. So evertime we need to change something in the JavaScript or CSS or PHP we need to go back to the

13
01:20.740 --> 01:22.060
browser and refresh.

14
01:22.180 --> 01:25.000
So we can actually automate this refresh thing.

15
01:25.090 --> 01:29.200
So whenever we change anything the browser will refresh automatically.

16
01:29.230 --> 01:34.090
So to do this let's go to search for "browser sync".

17
01:40.170 --> 01:44.300
And install it.

18
01:44.340 --> 01:48.140
So this is the plugin that will help us control the browser.

19
01:48.320 --> 01:54.210
I mean refresh it or do other things but for in our case we'll just need to refresh.

20
01:54.440 --> 01:58.410
So we don't need to write the "-g" here.

21
01:58.640 --> 02:03.880
We just need to install it for this project so "--save-dev". 

22
02:06.690 --> 02:10.140
So it's now installed so let's go to the documentation.

23
02:13.310 --> 02:23.440
and we'll find a gulp integration documentation here. So let's just do it in the gulpfile.

24
02:24.150 --> 02:26.370
So the first thing that we need to import it.

25
02:30.340 --> 02:31.450
So "import

26
02:35.380 --> 02:41.590
browserSync from 'browser-sync'"

27
02:44.390 --> 02:48.890
and they do and then we need to create a new browserSync server.

28
02:49.660 --> 02:59.230
So browserSync actually create a mini server. So to do that we will call the creator function on the browserSync

29
03:00.870 --> 03:03.760
object.

30
03:05.020 --> 03:11.510
So now we will have our server but it's not started yet. So we need to create a task to start the server.

31
03:11.890 --> 03:16.230
So I'm gonna create a new task and call it "serve"

32
03:21.300 --> 03:24.410
And this time we need the done() function.

33
03:24.960 --> 03:31.330
So I'm gonna post in the argument. And then to initialize the server

34
03:31.370 --> 03:44.150
we need to call "server.init". And then in the options we have a key of "proxy". And then inside of it

35
03:45.050 --> 03:48.410
the URL of our MAMP server.

36
03:48.440 --> 03:53.790
So what they're doing here is we are kind of wrapping our MAMP server in the browserSync server in

37
03:53.790 --> 03:59.480
order to use the browserSync features.

38
03:59.490 --> 04:01.130
So here is my

39
04:01.440 --> 04:11.890
URL, yours could be different. And then call "done()" to let Gulp know that we've done our task. And we'll

40
04:11.890 --> 04:18.670
create another task. And this task will refresh the browser. So "export const reload"

41
04:22.590 --> 04:29.520
and it need the "done()" also. And just call "server.reload".

42
04:33.160 --> 04:35.530
That's it.

43
04:35.710 --> 04:39.670
And call "done()" of course.

44
04:39.920 --> 04:45.890
So when do we need to run the "serve" task? It's one we thought our development, right?

45
04:45.910 --> 04:53.410
So before watching here I'm gonna run the "serve" task.

46
04:53.600 --> 04:55.740
And when do we need to reload the browser?

47
04:57.010 --> 04:59.090
After a file is changed.

48
04:59.140 --> 05:00.180
Right?

49
05:00.220 --> 05:04.790
So in the "watch" task after a SASS file is changed

50
05:04.810 --> 05:10.720
we run the "styles" task. And after the "styles" task is done we need to refresh the browser.

51
05:10.930 --> 05:12.040
Right?

52
05:12.040 --> 05:22.950
So we run "gulp.series" and call the "styles" and after the style is done we will call the "reload" task.

53
05:26.260 --> 05:28.480
And same for "scripts"

54
05:30.980 --> 05:33.370
"gulp.series", "scripts" first

55
05:33.560 --> 05:41.700
and then when it's done we reload the browser. And let's do also the same thing for the "images".

56
05:47.500 --> 05:52.920
And the "copy" task .

57
05:54.260 --> 06:00.320
So now whenever a task is done the "reload" task will be called.

58
06:00.450 --> 06:07.310
One more thing we need also to reload when a PHP file is changed.

59
06:07.330 --> 06:14.550
So if you change something in one of our templates like the index.php we need also to refresh the browser

60
06:14.550 --> 06:16.550
to see the change.

61
06:17.070 --> 06:18.300
So let's watch for

62
06:21.490 --> 06:28.990
all PHP files in the root folder or any top folder,

63
06:31.880 --> 06:33.890
and call "reload".

64
06:34.260 --> 06:40.870
We don't have any other tasks that we do for the PHP files so we just reload.

65
06:40.930 --> 06:41.090
Great.

66
06:41.100 --> 06:43.140
I think that will do it.

67
06:43.140 --> 06:44.220
So let's try it out.

68
06:44.230 --> 06:46.220
Let's run

69
06:46.570 --> 06:46.980
"dev".

70
06:52.040 --> 06:56.660
and as you can see now our URL is changed.

71
06:56.660 --> 07:01.130
It's now running in port 3000 and you should always use

72
07:03.840 --> 07:13.740
the URL that browserSync gave you in order to use browsingSync features. If we use the old one,

73
07:13.740 --> 07:19.350
the MAMP one, it will still work but the browser not refreshed and any other browserSync features.

74
07:19.410 --> 07:20.380
Ok.

75
07:20.700 --> 07:27.480
So let's now try and change something and see if the browser will refresh. So I'm gonna,

76
07:30.850 --> 07:34.720
I need to split screen here.

77
07:34.720 --> 07:41.120
in order to see both. And let's change something in index.php.

78
07:41.310 --> 07:53.350
So let's remove the title. And save and as you can see it's automatically refreshed

79
07:56.530 --> 07:57.000
Great.

80
07:57.040 --> 07:58.640
So let's try the CSS.

81
08:00.130 --> 08:04.400
The header file and let's try "blue".

82
08:07.360 --> 08:15.130
And it did refresh actually but we have this caching issue.

83
08:15.150 --> 08:26.070
We need to disable any bug in chrome. So browser is horrible actually so let's go back to white.

84
08:29.280 --> 08:34.190
So as  you can see, it automatic, it's automatically refreshed.

85
08:34.360 --> 08:43.160
So great. So one more improvement actually we can do in the CSS is that we can

86
08:50.850 --> 08:51.630
in the gulpfile.

87
08:54.260 --> 09:02.810
Let's remove the "reload" part from the watching the SASS files, and call just "styles".

88
09:04.620 --> 09:12.110
So we just reverted back to the old code here and browserSync actually has a really cool feature.

89
09:12.850 --> 09:20.750
If you're running a CSS task you can call pipe after the "dest" pipe, you can call pipe

90
09:20.750 --> 09:26.220
again and inside of it "server.stream".

91
09:26.620 --> 09:33.170
And this will inject the CSS in the browser in your document without even refreshing the page.

92
09:33.300 --> 09:34.080
So.

93
09:34.220 --> 09:35.270
Ok.

94
09:36.350 --> 09:38.480
So let's try it out. Let's

95
09:42.290 --> 09:46.640
rerun the "dev" task.

96
09:52.730 --> 09:53.350
And let's 

97
09:57.050 --> 09:58.250
split screen here.

98
10:00.190 --> 10:05.500
And go to CSS file and change the color again.

99
10:08.010 --> 10:11.520
And I don't know, I don't know, if you can tell but trust me it's not refreshing.

100
10:11.700 --> 10:15.630
It's actually changing without even refreshing.

101
10:15.630 --> 10:18.450
So that's raised right.

102
10:18.450 --> 10:24.570
I think this section maybe have taken too long. But I think we're really doing some great stuff here.

103
10:24.810 --> 10:29.780
And you can use this knowledge in any other project or any other theme.

104
10:29.910 --> 10:36.990
We still have some a couple of other things before finalizing this you know JavaScript section and getting back

105
10:36.990 --> 10:37.960
to WordPress.

106
10:37.980 --> 10:43.520
So next lecture we will discuss how to bundle your theme for production.