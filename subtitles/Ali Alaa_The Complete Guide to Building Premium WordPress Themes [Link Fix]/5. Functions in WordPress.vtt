WEBVTT

0
00:03.590 --> 00:09.170
So we've seen throughout the bits of code that were written so far that we've used some functions like the 

1
00:09.160 --> 00:11.490
get_header() and have_posts().

2
00:11.790 --> 00:15.600
And also the template tags that we've used here.

3
00:15.600 --> 00:18.340
These functions are a part of WordPress's core.

4
00:18.660 --> 00:24.450
So they are included in WordPress and made available for us to use directly without, you know, having

5
00:24.450 --> 00:27.220
to include a special file at the top or anything. 

6
00:27.570 --> 00:35.190
During this course we'll use a lot of WordPress's functions. But WordPress also allows us to create our own functions.

7
00:35.220 --> 00:37.940
So for example you can write some functions to use

8
00:38.010 --> 00:44.520
WordPress's hooks. And we'll talk about hooks later in the course. Or maybe you need to use functions if

9
00:44.520 --> 00:49.080
you have some bits of code that you'll have to reuse in multiple templates.

10
00:50.280 --> 00:55.560
All custom functions that you write in your theme must be included inside of a file called 

11
00:55.560 --> 00:56.750
functions.php.

12
00:57.300 --> 01:05.040
So let's go to our root folder and create a new file. And let's call it functions.php. And then

13
01:05.040 --> 01:10.470
we can write any function here. And it will be available in all templates without having to include

14
01:10.880 --> 01:12.840
this functions.php file.

15
01:13.230 --> 01:18.150
But before writing any custom function that will add some feature to your theme you must think if you

16
01:18.270 --> 01:25.530
should put it in your theme or in a plugin. If this feature should work regardless of what theme is currently active

17
01:25.890 --> 01:29.660
then you should put it in a plugin. Because once you  switch the theme

18
01:29.700 --> 01:31.530
it will be gone.

19
01:31.530 --> 01:37.920
So plugins in WordPress adds extra functionality to WordPress without you know having to belong to a specific

20
01:37.920 --> 01:38.580
theme.

21
01:38.880 --> 01:45.360
So in this course we will have some functionality that will require creating plugins. But for now let's just

22
01:45.360 --> 01:47.270
focus on theme functions.

23
01:49.140 --> 01:51.520
So let's now start creating some functions. 

24
01:51.520 --> 01:56.620
So I'm gonna open a PHP tag. And let's go to index.php.

25
01:56.770 --> 02:00.970
And here we have the post information, the date and the author.

26
02:01.450 --> 02:07.030
And this is a fairly long piece of code and it will probably be used in other templates, right?

27
02:07.320 --> 02:12.210
So when we create another template it doesn't make sense to write this whole thing again.

28
02:12.340 --> 02:16.760
So let's move this piece of code into a function and then call the function here.

29
02:17.170 --> 02:22.990
So let's cut this and open a PHP tag. And let's call a function that we will create in a

30
02:22.990 --> 02:28.440
moment. And let's call it post_meta().

31
02:28.450 --> 02:35.500
Now we can go to functions.php and create a function post_meta() and just paste the HTML

32
02:35.500 --> 02:37.500
for the meta information.

33
02:38.520 --> 02:41.650
But we can't just paste HTML inside of PHP

34
02:41.790 --> 02:48.390
we must close the PHP first and paste and then open the PHP again to close the curly braces for

35
02:48.390 --> 02:49.790
the function, right?

36
02:50.840 --> 02:53.710
And I still have a syntax error here.

37
02:53.840 --> 02:58.550
I think I forgot to add the function keyword and sorry for that.

38
03:01.250 --> 03:02.050
All right.

39
03:02.130 --> 03:07.250
So if you don't like to close and open PHP tags in order to put HTML

40
03:07.590 --> 03:13.510
we can remove these PHP tags and then echo the HTML as a PHP string,

41
03:13.540 --> 03:13.880
right?

42
03:13.890 --> 03:18.030
So let's do that now. Let's echo the "Posted on" as a string.

43
03:23.070 --> 03:25.910
And let's also echo the ANCHOR tag as a string.

44
03:25.930 --> 03:34.550
So let's open single quotes and then remove the echo in the PHP tag and close the single quotes. And

45
03:34.550 --> 03:43.800
then append  the function. And then let's remove the closing PHP tag. And  just wrap the rest of the HTML tag

46
03:44.010 --> 03:51.790
in single quotes. Right? And then we'll have to do the same for the rest of the lines.

47
03:51.850 --> 03:57.360
I'll probably skip this in the video. I think you can do this on your own.

48
03:57.580 --> 04:04.180
So I'm done with echoing the PHP strings. Here it is if you want to copy anything. Let's make sure

49
04:04.450 --> 04:06.200
what we've done is still working.

50
04:06.520 --> 04:13.110
So I want to go back to index.php and let's remove this var_dump(). And then let's go to the browser and

51
04:13.120 --> 04:15.680
refresh.

52
04:15.770 --> 04:18.370
And as you can see everything is still in place.

53
04:18.410 --> 04:25.020
The Posted on, the date and the author name. We have a space missing before the "By".

54
04:25.170 --> 04:27.990
So let's add it here.

55
04:30.760 --> 04:37.030
So it's looking good now so let's go back to the index.html and let's do the same thing for

56
04:37.600 --> 04:38.670
the Read More link.

57
04:38.680 --> 04:45.460
Let's cut this from here. And let's open PHP tags and let's call a function that we will create

58
04:45.460 --> 04:50.210
in a moment. And let's call it readmore_link().

59
04:50.260 --> 04:53.310
And now let's go to functions.php.

60
04:53.530 --> 04:57.470
And let's create this function. So function

61
04:57.620 --> 04:59.830
readmore_link().

62
05:04.180 --> 05:05.590
And than  let's paste the HTML

63
05:05.740 --> 05:10.930
and then we will have to convert the HTML to strings like we did in the last function.

64
05:11.110 --> 05:17.670
I'll do it also and skip this in the video.

65
05:17.770 --> 05:18.840
So I'm done now.

66
05:18.850 --> 05:22.620
Here it is if you want to copy anything.

67
05:22.710 --> 05:25.980
Now let's go back to the browser and make sure everything is working fine.

68
05:27.360 --> 05:30.200
And looks like the title is echoing twice here.

69
05:31.010 --> 05:31.400
Ok.

70
05:31.420 --> 05:35.460
So the_title_attribute() function already echoes the title.

71
05:35.770 --> 05:38.530
And we are already echoing the string here.

72
05:38.890 --> 05:47.050
So we need a function that returns the result and not echo it. And to do that we can still use the_title_attribute()

73
05:47.110 --> 05:53.400
but posted an array with a key of echo and this key of echo will be false, right?

74
05:54.230 --> 05:55.330
And let's check.

75
05:55.370 --> 05:59.270
And our problem should be solved. Great.

76
05:59.270 --> 06:00.710
So let's go back now.

77
06:00.820 --> 06:04.220
And we need to do more improvement.

78
06:04.220 --> 06:10.580
So as you may imagine this function that PHP file as we go further in the theme can contain a lot

79
06:10.580 --> 06:11.240
of functions,

80
06:11.240 --> 06:12.070
right?

81
06:12.110 --> 06:17.870
So it's always a good idea to do some organization in functions.php. So you can create some files

82
06:17.990 --> 06:21.620
and then include these files in functions.php.

83
06:21.620 --> 06:27.830
So let's do that now in our theme. Let's create a new file called helpers and we'll put inside of it functions

84
06:28.280 --> 06:30.110
like these two helper functions.

85
06:30.110 --> 06:31.230
All right.

86
06:31.550 --> 06:36.240
So let's create this file inside a new folder and let's call it lib.

87
06:36.290 --> 06:42.200
Short for library. And then inside of this folder let's create   a new file

88
06:42.340 --> 06:44.370
and call it helpers.php.

89
06:47.610 --> 06:54.930
And then finally let's paste, open PHP first, and then paste our functions inside of it. And then let's go back to

90
06:54.930 --> 07:01.530
functions.php and include this file using require_once(). So require_once() and then the path

91
07:01.530 --> 07:09.730
of the file which will be lib and then helpers.php. And let's go back and make sure it's still

92
07:09.830 --> 07:11.380
working.

93
07:11.480 --> 07:16.550
And as you can see everything is still working in theme. But now we just have things more organized.

94
07:17.540 --> 07:24.050
So one last thing for this lecture. Any function that you create in your theme it must be prefixed with

95
07:24.050 --> 07:26.070
a unique prefix.

96
07:26.210 --> 07:31.190
And this is not only a best practice but also it's a requirement.

97
07:31.190 --> 07:38.800
If you want to submit themes to WordPress or Theme Forest. And this prefix is usually your theme name.

98
07:39.160 --> 07:43.130
So let's prefix our functions here with our theme name firsttheme.

99
07:45.380 --> 07:52.800
And let's also go back to index.php and modify the function calls. And let's just make sure everything is

100
07:52.800 --> 07:53.760
still working.

101
07:54.580 --> 08:02.230
And the reason we did this is to avoid having a conflict with an another plugin or maybe a WordPress core

102
08:02.230 --> 08:05.160
function that has the same name.

103
08:05.330 --> 08:10.590
So you shouldn't have generic names to your functions to avoid any PHP errors.

104
08:11.610 --> 08:13.300
So I think that's it for functions for now.

105
08:13.360 --> 08:15.420
Let's move on to the next lecture.