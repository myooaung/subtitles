WEBVTT

0
00:01.890 --> 00:07.380
So in the last lecture we defined what we want to do to decide "sizes" attributes.

1
00:07.440 --> 00:11.100
Let's now code it. So now in the filter

2
00:11.100 --> 00:13.420
we have all the variables we need.

3
00:13.440 --> 00:17.990
We have the $width of the image and we have the $layout and we have the $content_width.

4
00:18.030 --> 00:25.600
So let's start with an if condition that will check for the layout. And if the $layout is "full", we will define

5
00:25.600 --> 00:29.660
available sizes and this will be a string.

6
00:30.150 --> 00:35.600
And we'll put all conditions here and then at the end we will return the string, right?

7
00:36.540 --> 00:41.630
So the full layout now is what we have. So let's write the condition for it.

8
00:41.670 --> 00:50.160
And as we mentioned as long as the screen width is larger than 862 the image will be 800 pixels. And if the screen width

9
00:50.460 --> 00:58.290
is less than 862 the image will cover 100% of the screen - some margins and paddings and

10
00:58.290 --> 01:06.710
borders. So let's write this condition now. "'(max-width: 862px) '.

11
01:06.990 --> 01:15.150
And here we can use the calc() function because we will need to calculate the 100% of the screen

12
01:15.150 --> 01:17.020
"-" something, right.

13
01:17.250 --> 01:24.190
So this something is a padding of 1.25rems on both sides.

14
01:25.620 --> 01:37.150
So we can do "1.25rem*2 - " the margins of this DIV which is 0.625 on

15
01:37.150 --> 01:37.960
both sides.

16
01:37.960 --> 01:47.530
So we can do "0.625rem*2 - " the "2px" for the borders on both sides.

17
01:49.290 --> 01:57.020
And let's close the bracket for the calc() function. And then if the screen is larger then 862, the image

18
01:57.030 --> 02:01.890
will be 800px. And 800px is actually the content width,

19
02:02.010 --> 02:11.670
so let's do this dynamically. Let's append the $content_width and then "px". And this will be it for the full

20
02:11.720 --> 02:16.130
width layout. So let's see now.

21
02:16.310 --> 02:20.910
And as you can see we have our conditions here and it should be working fine.

22
02:21.340 --> 02:25.800
But now let's try to change this image to "Medium" again.

23
02:26.450 --> 02:28.550
So it will be less than the content width.

24
02:31.730 --> 02:33.620
And let's fresh.

25
02:33.860 --> 02:41.910
And as you can see the image tag loaded an 800 pixel image because that's what our conditions will do.

26
02:41.930 --> 02:48.350
But when the user actually chooses that he wants to use the medium size image he should expect the medium

27
02:48.350 --> 02:50.250
size image to appear here.

28
02:50.510 --> 02:56.910
So let's do this other condition. So let's write an if condition about this one.

29
02:56.910 --> 03:06.890
And if $content_width is less than or equal the width of the image, we will do this.

30
03:06.900 --> 03:14.170
Otherwise we'll do the other condition that we mentioned in the previous lecture. And this condition

31
03:14.170 --> 03:20.500
was max-width of the image width

32
03:22.840 --> 03:30.610
+ 62. Remember that when the width of the screen becomes equals to less than the width of the image +

33
03:30.730 --> 03:37.390
the margins and paddings on the left and right which we calculated and it was 62. And unfortunately

34
03:37.390 --> 03:39.080
we can not use calc() here.

35
03:39.460 --> 03:43.350
So we have to put the value in pixel, in the media query, right?

36
03:45.090 --> 03:55.200
And then "px" and close, sorry, close the media query. So when the width of the screen is less than that, the image

37
03:55.200 --> 03:59.380
will take "100vw - "

38
03:59.460 --> 04:01.340
also these things, right?

39
04:04.370 --> 04:11.510
And otherwise if the screen width is larger than the image width + 62, we would like to load the original,

40
04:11.660 --> 04:19.280
the actual size of the image which is the $width. I hope I'm making a sense here.

41
04:20.340 --> 04:30.260
Let's see now. As you can see we are loading the 300 pixels image. Or actually the conditions is wrong here.

42
04:31.840 --> 04:33.310
Oh, this is "sizes" not "size"

43
04:33.340 --> 04:33.910
Sorry.

44
04:37.440 --> 04:38.790
And I've our condition.

45
04:38.810 --> 04:46.640
So 300 pixels but if we screen width is less than 362, we will calculate the screen width - the paddings

46
04:46.640 --> 04:47.400
and margins.

47
04:47.420 --> 04:47.930
So

48
04:52.140 --> 04:58.620
the full width of the screen and then the padding the margins and the borders. Let's also make sure that

49
04:59.280 --> 05:03.770
this is working for other image sizes that are less than 800.

50
05:03.770 --> 05:12.260
So we have the "Medium Large". It's less than 800 also. And what should change is

51
05:12.350 --> 05:13.040
the media query.

52
05:13.040 --> 05:21.020
So now it's 830. And 830 will be the image width + 62. And also the default width will be 786 now

53
05:21.200 --> 05:24.710
which is the width of the "Medium Large" image.

54
05:24.710 --> 05:33.250
So great. We still have one condition missing which is if we have a sidebar, right?

55
05:33.410 --> 05:40.640
So let's change the post to sidebar. And let's refresh.

56
05:41.060 --> 05:43.220
And here we'll have three conditions.

57
05:43.220 --> 05:51.110
The first condition is the condition we're having now where the content width will be 738. And the

58
05:51.110 --> 05:59.200
second condition will be when the screen width reaches a certain number of pixels, the content and the sidebar

59
05:59.210 --> 06:01.570
will start to resize, right?

60
06:01.640 --> 06:09.390
So this is another condition. The third condition is when the content will take the full width and

61
06:09.390 --> 06:10.640
also the sidebar.

62
06:10.830 --> 06:13.690
This one, right?

63
06:13.820 --> 06:22.430
So this condition happens when the screen width is 640 or less, right?

64
06:22.560 --> 06:27.710
And this one will happen when the screen width is 1200 or less.

65
06:30.930 --> 06:36.590
And then the other condition which is this one will be the default condition.

66
06:36.720 --> 06:38.280
Right? So let's write

67
06:38.400 --> 06:52.140
the first two conditions. So let's write an "elseif". And if $layout is "sidebar" we will have to calculate the $sizes

68
06:52.140 --> 06:53.340
again.

69
06:53.850 --> 07:01.710
And the first condition next to it is 640 pixels and that's when the content is taking the full width

70
07:01.710 --> 07:02.480
of the screen.

71
07:02.730 --> 07:08.610
So in this case how much of the screen width the images will take? It will take the full width of the screen

72
07:08.610 --> 07:10.790
- the paddings the margins.

73
07:11.010 --> 07:20.730
So you can actually copy this, this whole calc() and put it here for this condition.

74
07:20.800 --> 07:31.030
Next one is a bit tricky. And it's "max-width" we mentioned is 1200 and we'll have to do a calc() for this one also.

75
07:31.180 --> 07:35.560
But let's see what we'll have to put inside this calc(), right?

76
07:35.740 --> 07:41.760
So in this case the contents will not be taking the full width of the screen.

77
07:42.100 --> 07:47.980
It will be taking the full width of the screen - the paddings and margins - the sidebar and

78
07:48.070 --> 07:50.030
also its paddings and margins,

79
07:50.150 --> 08:02.320
right? So let's start by putting the full width of the screen, 100vw. And let's subtract first the sidebar.

80
08:02.490 --> 08:09.930
So the sidebar will be, it will span 4 columns and a column is 33.33333

81
08:10.050 --> 08:12.320
percent of the screen.

82
08:12.360 --> 08:16.600
So to translate that here, we can subtract

83
08:16.850 --> 08:24.460
33.33333vw. And then the sidebar

84
08:24.950 --> 08:30.650
will have these two margins on the right and left and 
they are .625.

85
08:30.920 --> 08:40.700
So let's subtract these *2. And then we have to subtract these paddings and borders and the margins of

86
08:40.700 --> 08:44.340
this one. The ones we did in the other conditions.

87
08:45.850 --> 08:51.170
So they were at 1.25rem *2 and 0.625rem *2 and 2px.

88
08:52.760 --> 09:01.410
So you can subtract these. We can actually do *4 here and remove these. And that will be it for this

89
09:01.410 --> 09:02.920
condition, the 1200.

90
09:03.210 --> 09:06.830
The last condition will be the default which will be the content width,

91
09:07.030 --> 09:08.800
right?

92
09:10.530 --> 09:22.670
And that's when the screen width is larger than 1200. So $content_width and then append the "px". And let's save.

93
09:23.820 --> 09:24.580
Let's take a look now.

94
09:27.460 --> 09:31.790
And we have our conditions here and this should be working fine.

95
09:33.270 --> 09:34.960
So that's it for the sidebar.

96
09:36.420 --> 09:42.030
But also make sure that this is not the only condition that you'll have to calculate, the single blog

97
09:42.030 --> 09:42.710
post.

98
09:42.720 --> 09:45.830
You'll also have to change this layout.

99
09:45.840 --> 09:50.990
It will be different if you are in an archive page or a page template maybe and so on.

100
09:51.000 --> 09:55.350
One final thing I want to mention is let's go back to the full width layout.

101
09:58.600 --> 10:05.010
Remember the "alignwide" and "alignfull" features that are included in Gutenberg.

102
10:05.560 --> 10:11.710
For these images what we calculated here will not be exactly accurate because now the image takes more

103
10:11.710 --> 10:14.650
width than the content width. But in this footer

104
10:14.650 --> 10:20.560
we don't have any information about the alignment that this image has.

105
10:20.560 --> 10:27.130
So there is no way in this filter that we can check if this image has an "alignfull" so we can do some

106
10:27.130 --> 10:28.540
other calculations.

107
10:28.570 --> 10:30.840
So maybe WordPress will include this in the future.

108
10:30.850 --> 10:35.390
But for now that's all what we can do.

109
10:35.470 --> 10:44.960
Also another thing if we had a, let's go to the Customizer. And let's add a logo. So you should change this

110
10:44.960 --> 10:45.860
to 8888.

111
10:50.560 --> 10:51.420
So let's add a logo here.

112
10:57.580 --> 11:06.070
And let's publish. And if we refresh here and inspect the image, you will find that the image will take

113
11:06.190 --> 11:10.140
the same "sizes" attribute that we did in our filter.

114
11:10.360 --> 11:12.290
And this might not be what you need.

115
11:12.310 --> 11:15.570
Might want to create a custom "sizes" attribute just for this logo.

116
11:15.810 --> 11:17.710
So I'm going to leave this for you.

117
11:17.710 --> 11:22.510
Try to do it alone and let me know how you did it in the Q&A in this lecture.

118
11:22.720 --> 11:24.250
And then we can discuss it.

119
11:24.490 --> 11:25.780
So that's it for this lecture.

120
11:25.780 --> 11:30.670
I know it's one of these lectures that may not be very straightforward. So let me know if you have any

121
11:30.670 --> 11:34.150
questions or anything is unclear. And see you in the next section.