WEBVTT

0
00:03.600 --> 00:08.220
So in order to install NPM you must have a node.js installed in your machine.

1
00:09.430 --> 00:14.660
Actually NPM comes with node.js if you install node.js in your machine. You'll automatically have

2
00:14.660 --> 00:21.280
NPM. So go to nodejs.org if you don't already have node.js and then download it and

3
00:21.370 --> 00:23.840
install it. After we've done installing

4
00:23.890 --> 00:30.110
node.js should now open your terminal or command line prompt in Windows.

5
00:30.270 --> 00:36.160
And if you type "node -v" a version should come up.

6
00:36.360 --> 00:42.460
And also if you should, if you type "npm -v" the same thing.

7
00:42.900 --> 00:46.500
So that's how you make sure you've successfully installed node and NPM.

8
00:49.550 --> 00:51.460
So now we can start installing

9
00:51.800 --> 00:57.890
NPM in our theme. I'm having htdocs folder opened here.  I'm gonna browse to

10
00:57.890 --> 01:07.980
my theme folder, this one. And then in the command line or the terminal I'm gonna type "cd".

11
01:08.260 --> 01:13.370
And on mac you can drag the folder to get the path.

12
01:13.600 --> 01:17.590
And I think on Windows you can just copy the address bar.

13
01:19.300 --> 01:27.510
And now we should be inside the folder in the command prompt as you can see, firsttheme. So to initialize

14
01:27.510 --> 01:29.430
NPM inside this folder,

15
01:29.890 --> 01:32.840
we can type "npm init".

16
01:34.150 --> 01:40.290
And you have to type some information. So package name,

17
01:40.300 --> 01:50.110
you can call "firsttheme". And version, we can leave it 1.0.0 the default. And description

18
01:50.170 --> 01:51.760
no not important right now.

19
01:54.110 --> 01:55.400
You can leave these.

20
01:58.220 --> 02:06.410
You can actually edit these later so I'm gonna just leave the default for now.

21
02:06.410 --> 02:14.230
Now if you go to the Visual Studio Code or your text editor we will have the package.json created.

22
02:15.650 --> 02:20.980
And it will have the information that we've just filled so you can edit this you actually.

23
02:20.990 --> 02:25.360
So now we have NPM setup and our folder. Let's now.

24
02:25.590 --> 02:27.730
install NPM packages.

25
02:27.810 --> 02:33.240
So as I mentioned we'll need Gulp and this is the official repository for Gulp.

26
02:36.010 --> 02:38.880
And here are the instructions to install it.

27
02:38.890 --> 02:47.080
So if we, if we type "npm install gulp", it will install version 3.9 and we actually need version, 4 the latest

28
02:47.080 --> 02:48.520
version.

29
02:48.520 --> 02:57.010
So we're gonna type this line here. "npm install gulp@next".Let's open the documentation for version 4.

30
03:01.360 --> 03:04.170
And we'll go to the Get Started section.

31
03:07.490 --> 03:10.160
So first we have to install the Gulp CLI.

32
03:10.250 --> 03:14.470
And this is a command line tool that we will install globally on our machine.

33
03:14.480 --> 03:16.290
It's not just on in our folder.

34
03:16.440 --> 03:23.450
So I'm gonna copy this line and paste it here. And it has "--global" will make sure it's installed

35
03:23.570 --> 03:27.670
on the machine and not just on this folder.

36
03:27.890 --> 03:29.450
So why am I get this error here?

37
03:29.560 --> 03:31.330
It's a permission error.

38
03:32.090 --> 03:40.070
And if you get that, just type "sudo" before the command if you're on Mac. And if you're on Windows you can run the command

39
03:40.070 --> 03:48.160
line as an administrator. So we've successfully install the Gulp CLI globally now.

40
03:48.300 --> 03:59.300
We can make sure that it's installed by typing "gulp -v". So we've the CLI version 2.0.1. Now

41
03:59.330 --> 04:04.090
let's install Gulp itself in our project folder.

42
04:04.530 --> 04:08.070
So I'm gonna copy this command. Notice here

43
04:08.430 --> 04:10.230
the "--save

44
04:10.440 --> 04:12.080
-dev" flag.

45
04:12.330 --> 04:14.920
And I'll tell you what will this do in a moment.

46
04:16.740 --> 04:20.500
So we copied it in the command line.

47
04:27.900 --> 04:35.530
And after it's done we can go to the package.json again and now we will have a new key here "devDependencies"

48
04:36.870 --> 04:40.740
and " gulp". And that's what the --save-dev 

49
04:41.060 --> 04:51.330
flag did. If we actually just type "npm install gulp" we'll not save the gulp package in the package.json.

50
04:51.460 --> 04:53.410
That's important.

51
04:53.790 --> 05:03.190
So at this point we should in the command line if we type "gulp -v" inside our folder we should

52
05:03.190 --> 05:03.790
have two things now.

53
05:03.790 --> 05:10.930
The CLI version which is the global version of Gulp CLI and the local version of the Gulp package

54
05:11.010 --> 05:12.340
in our folder.

55
05:12.850 --> 05:15.930
So let's go back now to the Gulp documentation.

56
05:16.800 --> 05:26.900
And after installing it, it says we should create a file called gulpfile.js. So let's do that. I'm gonna create it

57
05:26.900 --> 05:34.050
from the command line using the touch command.

58
05:34.110 --> 05:35.160
So now we have this.

59
05:37.800 --> 05:39.830
gulpfile in our theme.

60
05:43.780 --> 05:46.090
And then we can create our tasks.

61
05:46.090 --> 05:46.970
So let's copy that.

62
05:51.210 --> 05:53.280
And paste.

63
05:54.020 --> 06:02.830
So this code will include the Gulp library from the node_modules. When we use the require() function and

64
06:02.830 --> 06:05.180
include the library,

65
06:05.200 --> 06:14.770
it will go to the node_modules and include that library. Now we're defining a new task which is "default". And then

66
06:14.770 --> 06:21.130
the second argument is a function. So inside this function we should write our task logic.

67
06:21.160 --> 06:23.970
So let's now just type "console.log

68
06:25.010 --> 06:35.430
('hey')". And let's see what we can do. In the, in the terminal we can type "gulp" now and this would run the

69
06:35.430 --> 06:37.230
default task.

70
06:37.230 --> 06:38.730
So as you can see we have "hey" here.

71
06:41.750 --> 06:43.850
We can create a new task, another task

72
06:47.300 --> 06:48.720
and let's call it this time

73
06:48.730 --> 06:49.280
"hello".

74
06:53.440 --> 06:54.390
And pass the function.

75
06:57.140 --> 06:59.420
And then "console.log

76
07:00.310 --> 07:06.050
('hello')".

77
07:06.120 --> 07:08.410
Now if you can, if we type "gulp hello"

78
07:11.140 --> 07:12.720
we'll get "hello".

79
07:13.630 --> 07:15.880
And we have a some sort of an error here.

80
07:17.600 --> 07:20.020
It says the following task did not complete.

81
07:20.480 --> 07:28.340
And the reason is that we should tell Gulp that our task has completed. So we've seen in the code that we've copied

82
07:28.340 --> 07:32.870
we have a, we call a function called done() here which is pasted in the task.

83
07:32.990 --> 07:35.600
This is how we tell Gulp that we've done with the task.

84
07:38.560 --> 07:43.300
So if we type "done()" in the arguments of the function then call it.

85
07:47.060 --> 07:50.690
And then "gulp hello" we won't get that error.

86
07:53.460 --> 07:59.520
So one thing you should have noticed here if we define a task called default this task will run if we type

87
07:59.610 --> 08:04.900
"gulp" here without any task name, right?

88
08:06.020 --> 08:08.370
One more thing I would like to do here.

89
08:08.870 --> 08:15.330
You probably know that JavaScript has new versions that they release every year.

90
08:15.650 --> 08:17.720
So now we've the ES

91
08:18.080 --> 08:20.960
2015 and 16 and 17.

92
08:21.140 --> 08:25.850
So we need to be able to use this new syntax in the gulpfile.

93
08:26.080 --> 08:33.590
So instead of the require statements here, we can use the ES6 import statements, like so

94
08:34.040 --> 08:39.680
"import gulp from 'gulp'".

95
08:39.850 --> 08:46.990
And also we can use arrow functions and all the new JavaScript features. But to do that we have to do

96
08:46.990 --> 08:49.890
something first. We can't just do that directly.

97
08:49.930 --> 08:56.770
So let's go back now to the Gulp repository and there's a section here about using latest JavaScript

98
08:57.100 --> 08:59.970
version in the gulpfile.

99
08:59.990 --> 09:06.520
So the first thing is that we should rename gulpfile to gulpfile.babel.js.

100
09:06.840 --> 09:08.890
So let's do that now.

101
09:17.490 --> 09:28.100
And then we should install these packages. So.

102
09:29.180 --> 09:38.700
And this one is install a package called babel. And babel is responsible for transpiling the new JavaScript

103
09:39.060 --> 09:44.490
versions into older JavaScript versions in order to run for older browsers.

104
09:44.790 --> 09:49.410
So it has some templates or presets that we can transpile.

105
09:49.590 --> 09:54.120
So here we're using ES15 and that is kind of old so we can use.

106
09:54.150 --> 09:57.570
We can update that to a package called babel-

107
09:57.670 --> 10:05.730
preset-env. And that will make sure we are transpiling the latest versions. So let's install that.

108
10:10.720 --> 10:12.870
And after that

109
10:14.610 --> 10:17.710
we should create a new file .babelrc

110
10:17.780 --> 10:18.340
.babelrc.

111
10:22.880 --> 10:24.480
And add the preset 

112
10:24.480 --> 10:28.220
inside of it.

113
10:28.330 --> 10:33.790
So in our case we installed the env. Sorry, the env preset.

114
10:39.150 --> 10:41.830
And now we can write ES6 inside the gulpfile.

115
10:42.670 --> 10:48.840
So I'm gonna comment this and then rewrite a task within ES6 syntax.

116
10:49.260 --> 10:52.660
So "import gulp from 'gulp'".

117
10:58.590 --> 11:00.150
And then to create a task

118
11:00.390 --> 11:02.820
all you have to do is just to export the function.

119
11:03.000 --> 11:11.160
You don't have to call "gulp.task". To export a function and the function name is the task name.

120
11:12.600 --> 11:15.660
And we can use arrow functions.

121
11:15.660 --> 11:21.330
And if you don't know what I'm talking about I really recommend you can go and read about the the new

122
11:21.330 --> 11:23.240
JavaScript versions.

123
11:33.500 --> 11:37.030
So let's now try and run "gulp

124
11:37.320 --> 11:41.730
hello". And we get the same result.

125
11:43.820 --> 11:55.780
From "gulp" now we'll get an error because  we have not defined a default function. And to do that in the ES6 syntax

126
11:55.910 --> 12:00.240
you just have to export a default function.

127
12:00.260 --> 12:01.510
So "export default

128
12:04.190 --> 12:10.010
hello" and then run "gulp". And it will run the hello() function.