WEBVTT

0
00:02.630 --> 00:09.060
In the previous lectures we had some parts in our code where we define some variables and then we mentioned

1
00:09.060 --> 00:13.750
that later we will get these values from a theme option's page.

2
00:13.860 --> 00:20.890
So I think it's now time to do that and we will do that using the Customized API.

3
00:21.060 --> 00:28.290
So I'll put a link to this guide here but we will walk through most parts of it, so you can go through

4
00:28.290 --> 00:28.410
it

5
00:28.410 --> 00:33.670
after watching this section if you need to know more information.

6
00:34.020 --> 00:37.970
So let's open our website and always make sure your MAMP server is open.

7
00:38.010 --> 00:43.810
I have mine opened here and I'm gonna change my theme and run "npm start".

8
00:49.040 --> 00:51.260
And let's open a new tab.

9
00:51.280 --> 00:52.130
wp-admin.

10
01:01.900 --> 01:08.240
And let's go to appearance and Customize. So if you're using Gulp and browserSync

11
01:08.250 --> 01:11.260
that we set up you'll get this a blank page.

12
01:11.320 --> 01:17.580
And that's because WordPress is using an iframe to display the Web site here.

13
01:17.720 --> 01:23.220
And iframe needs to load the local host 8888 which is the MAMP port.

14
01:23.300 --> 01:26.030
But we are using 300.

15
01:26.360 --> 01:29.330
And that violates the iframe security policy.

16
01:29.330 --> 01:32.960
So when you're using the Customizer make sure to use the 888 port.

17
01:35.970 --> 01:38.010
And it should load.

18
01:38.070 --> 01:44.880
So here is the Customizer and by default it has some default options that is included with the WordPress

19
01:44.880 --> 01:45.410
core.

20
01:45.420 --> 01:54.050
So you can change the Site Title and as you can see it will reload the whole iframe in order to reflect

21
01:54.050 --> 01:55.200
on your website.

22
01:55.310 --> 02:00.330
You can add a fav icon from here as well and you can also edit the menus.

23
02:00.350 --> 02:04.530
So here we get a list of all menus and we can create a new one.

24
02:04.670 --> 02:09.850
And here we get the menu locations that we defined in our theme in the last section.

25
02:09.980 --> 02:15.310
So we have the main menu which is assigned to a menu called the "Main Menu". And we can, and we have the footer

26
02:15.370 --> 02:22.550
menu but we haven't displayed it anywhere in the theme. So we can edit the Main Menu and we can do

27
02:22.550 --> 02:27.260
that and that will refresh the menu as you can see.

28
02:27.530 --> 02:29.160
So that's pretty cool right.

29
02:29.480 --> 02:39.830
So one quick note here, remember when we were creating the JavaScript for the navigation in source navigation.

30
02:40.730 --> 02:47.450
And I told you that we have to use a event delegation here and we can't attach the event directly to the "menu-

31
02:47.510 --> 02:48.990
item-has-children".

32
02:49.100 --> 02:54.500
And the reason was in the Customizer our JavaScript is now working and everything.

33
02:54.710 --> 03:00.410
And if you change something in the menu the Customizer will refresh this menu and add new DOM 

34
03:00.650 --> 03:02.330
elements in the menu.

35
03:02.330 --> 03:10.430
So if we attach the event directly. And let's try it out. Attach the event directly to the item.

36
03:13.030 --> 03:14.120
And refresh.

37
03:17.850 --> 03:20.700
And we can edit the menu directly from this button.

38
03:22.990 --> 03:27.820
So it's working now initially but if we change something it will refresh and JavaScript won't work

39
03:27.820 --> 03:33.740
anymore because these are new DOM elements and they don't have the event attached to them.

40
03:35.920 --> 03:43.990
However delegating the event to the "c-navigation" element it will ensure that this event will

41
03:43.990 --> 03:48.600
always run because the "c-navigation" element is always there.

42
03:48.700 --> 03:51.860
It won't get replaced when the menu is replaced.

43
03:51.880 --> 03:56.520
Second search for event delegation if you want to know more about this.

44
03:56.560 --> 04:04.120
But anyways let's see some other features in the Customizer. So we have the widgets and we get all

45
04:04.120 --> 04:07.760
the sidebars that we register in our theme.

46
04:07.970 --> 04:11.850
And then you click on one of them and we get the widgets in the sidebar.

47
04:12.580 --> 04:20.530
So let's try and edit this and 7 posts and this will refresh the whole iframe and it will reflect on

48
04:20.530 --> 04:23.050
the widget. And we can add another widget

49
04:33.070 --> 04:34.460
and so on.

50
04:34.600 --> 04:43.430
We also have the home page settings and if you need to add additional CSS to your theme. So you can

51
04:43.430 --> 04:47.000
type here some CSS.

52
04:52.820 --> 04:57.450
And it will reflect in your theme directly without even refreshing the iframe.

53
04:57.860 --> 05:01.130
Let's take a look now at the structure of the Customizer code wise.

54
05:01.130 --> 05:03.550
So it's an object oriented API.

55
05:03.650 --> 05:09.260
There are four main objects in the Customizer: Panels, Sections, Settings and Controls.

56
05:09.290 --> 05:11.930
So it's open this diagram here.

57
05:13.200 --> 05:15.480
So this is the Customize control.

58
05:15.480 --> 05:17.100
And this is the iframe.

59
05:17.160 --> 05:19.190
So it's this and this.

60
05:19.200 --> 05:25.220
So the Customize control contains panels and sections and controls. So the sections are these which is

61
05:25.240 --> 05:35.040
"Site Identity", "Menus", "Widgets", "Homepage Settings" and so on. And controls are these fields and these controls

62
05:35.040 --> 05:37.420
are used to change settings.

63
05:37.500 --> 05:42.240
So we have settings and controls. The settings of various saved in the database so we can use as options

64
05:42.440 --> 05:46.090
and controls as the UI that you change the settings with.

65
05:46.380 --> 05:49.840
So you can have text fields and checkboxes and stuff like that.

66
05:49.920 --> 05:52.880
And these are controls that will change settings.

67
05:53.400 --> 05:59.950
So as you can see here we have controls inside sections and these controls will change settings.

68
06:00.060 --> 06:06.620
And when you change controls and settings it will reflect on the iframe by either refreshing the whole

69
06:06.770 --> 06:12.540
iframe. Or two other things selective refresh and post a message and we'll take a deeper look at these in

70
06:12.720 --> 06:14.180
later lectures.

71
06:14.310 --> 06:18.290
And we also have panels and the panel can contain multiple sections.

72
06:18.450 --> 06:26.390
So we mentioned that we have sections and each section can have multiple controls. Panels are

73
06:26.400 --> 06:30.460
another object that can contain multiple sections.

74
06:30.540 --> 06:37.650
So here we have one panel that contain these sections but this API is designed to have multiple panels

75
06:37.980 --> 06:43.940
so we can have another panel with other sections. But this will be rarely used and actually it's mentioned

76
06:43.940 --> 06:46.610
here in the in this guide.

77
06:46.810 --> 06:53.520
The themes should not register their own panels in most cases. So we will ignore panels in this course.

78
06:53.790 --> 06:55.750
And you probably won't need to use it.

79
06:55.770 --> 07:02.430
So all of these things panels, sections, controls are PHP classes and they're all managed by another

80
07:02.430 --> 07:06.540
PHP object which is called the Customize Manager object.

81
07:06.540 --> 07:10.010
So how do we access this object is by using actions.

82
07:10.110 --> 07:11.890
So let's go to our code.

83
07:12.020 --> 07:21.390
And now let's create a new, let's close this one, let's create a new file in the lib. And let's call it customize.php

84
07:22.040 --> 07:27.770
customize.php. And let's include it in functions.php.

85
07:32.420 --> 07:35.110
And inside customize

86
07:35.290 --> 07:38.860
let's create a new function. Sorry this. open PHP tag first

87
07:42.610 --> 07:43.900
and create a new function

88
07:47.200 --> 07:53.270
prefixed and let's call it "customize_register".

89
07:53.480 --> 07:58.370
And this action get the customized manager object path here.

90
07:58.370 --> 08:02.840
So let's call it $wp_customize.

91
08:03.210 --> 08:13.290
And then let's add our function to the action. And the action is called "customize_register".

92
08:17.700 --> 08:19.990
and let's give it the function.

93
08:20.010 --> 08:31.900
So inside this function we now can access the Customize Manager object. And we can use some methods inside

94
08:31.950 --> 08:37.260
this class like add_panel(), get_panel(), remove_panel(), add_section() and so on,

95
08:37.320 --> 08:42.520
in order to edit and add sections and fields and settings to the Customizer.

96
08:42.540 --> 08:45.020
So let's add our first setting in the next lecture.