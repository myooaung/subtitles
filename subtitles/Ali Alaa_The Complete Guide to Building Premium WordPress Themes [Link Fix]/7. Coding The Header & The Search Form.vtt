WEBVTT

0
00:03.020 --> 00:12.330
So we've done our sidebar and the footer and the post loop. It's now time to do the header and it will eventually

1
00:12.330 --> 00:13.590
look like this.

2
00:13.740 --> 00:19.890
And I always like to remind you that this is not the best designed template so that it might not look

3
00:20.180 --> 00:23.490
that pretty but you just need to focus on the functionality.

4
00:23.490 --> 00:27.720
So for this lecture we'll see how to add this seach form and site title.

5
00:27.740 --> 00:32.060
And for the navigation at the, it's a long enough topic to have it's own section.

6
00:32.130 --> 00:39.100
Let's go back to our template and in our folder let's open header.php.

7
00:39.100 --> 00:49.780
And before starting I just want to let you know that I've installed Font Awesome using NPM.

8
00:49.790 --> 00:56.140
So "npm install" and this command here and I added "-- save" to be saved in the package.json.

9
00:56.170 --> 01:01.910
And also I loaded the fonts in our bundle file, bundle sass file.

10
01:02.050 --> 01:04.220
And that's in these three lines.

11
01:04.450 --> 01:08.820
It's worth pointing that if you would like to add some third party library like Font Awesome

12
01:08.890 --> 01:11.840
it's a best practice to bundle them in your CSS file.

13
01:11.840 --> 01:15.300
You might think maybe it's easier to add a cd and link or something.

14
01:15.400 --> 01:20.300
But if you read the theme requirements on Theme Forest they mentioned that you shouldn't use the cd

15
01:20.300 --> 01:22.900
ends and any third party library you include,

16
01:22.900 --> 01:24.590
it should be bundled in your files.

17
01:24.610 --> 01:27.010
So that's why I included them in the sass file.

18
01:27.600 --> 01:31.720
And when we compile our sass they are bundled in our final CSS file.

19
01:32.050 --> 01:34.970
So anyways, let's go to our header.

20
01:36.910 --> 01:38.760
And now let's create our main header.

21
01:38.920 --> 01:48.590
So I'm gonna use the HEADER tag with a "role" of "banner". And I'm gonna give it a class to add a margin

22
01:50.730 --> 01:52.010
"u-margin

23
01:54.800 --> 01:56.310
-bottom"

24
01:57.150 --> 01:58.170
and "-40".

25
02:03.580 --> 02:12.670
And let's create a div to wrap all our content in a div. So let's add a with an ID "content"

26
02:15.850 --> 02:23.510
that will open after the header and then close it just before the footer. So here.

27
02:26.390 --> 02:30.040
We should have a header and then the DIV with ID "content" and then the footer.

28
02:33.000 --> 02:36.320
Let's nowadd some classes that I styled for the header.

29
02:36.510 --> 02:39.960
So we have "<div class="c-header">".

30
02:42.650 --> 02:43.230
End.

31
02:46.820 --> 02:52.890
And then we've "<div class="o-container"

32
02:56.600 --> 03:04.370
and "u-flex". These are usually the classes for flexbox. "u-allign-justify"

33
03:06.800 --> 03:14.610
and "u-allign-middle". And you can check these classes in the sass files.

34
03:19.010 --> 03:24.860
And then we have a DIV for the logo with a class

35
03:25.150 --> 03:28.250
"c-header__logo".

36
03:32.110 --> 03:37.760
And then in the theme options section we'll learn how to get the logo from the user as an image

37
03:37.760 --> 03:40.610
but now let's add the site title.

38
03:43.580 --> 03:47.570
So an ANCHOR link with a class

39
03:47.570 --> 03:54.140
"c-header__blogname".

40
03:54.770 --> 03:55.880
And then "href="

41
03:59.330 --> 04:04.940
open PHP and then echo "home_url()".

42
04:05.330 --> 04:13.560
And this is the URL of your website.

43
04:13.880 --> 04:16.050
Let's close PHP.

44
04:16.460 --> 04:20.990
And then inside the ANCHOR tag we'll open another PHP tag and display the

45
04:24.040 --> 04:25.890
using the bloginfo() function

46
04:26.140 --> 04:28.650
we will show the site name.

47
04:29.380 --> 04:33.740
So these are template tags that display information about your web site.

48
04:33.830 --> 04:37.810
So let's close the PHP tag and then close the ANCHOR tag.

49
04:38.770 --> 04:43.430
And if you are paying attention you will notice that we forgot something important here.

50
04:44.680 --> 04:47.510
We need to escape URL for the link.

51
04:50.990 --> 04:54.900
And esc_html for the blog name.

52
05:01.420 --> 05:03.160
So let's see how that looks like.

53
05:08.140 --> 05:13.710
And we've here header now and the site name and it links to the home page.

54
05:13.800 --> 05:15.020
Let's now add the search form.

55
05:15.060 --> 05:24.140
So after the logo class we'll open a PHP tag and use a template tag called get_search_form(). And it takes

56
05:24.430 --> 05:28.310
a boolean whether to echo the HTML of the form or we just return it.

57
05:28.310 --> 05:33.590
So we need to echo so, let's gonna give it true. And close and let's see what this looks like.

58
05:37.950 --> 05:44.540
And it's the search form as you can see and WordPress automatically generates the HTML for this one.

59
05:44.700 --> 05:48.320
But you can create your own markup and you will see how in a moment.

60
05:48.340 --> 05:50.120
So let's type this anything.

61
05:50.700 --> 05:55.350
And this will take you to a link with an "s" parameter in the URL.

62
05:55.410 --> 06:01.770
So for these functions that WordPress generate HTML for you can add some lines of code in your theme

63
06:02.340 --> 06:08.940
to make WordPress to use HTML5 syntax for HTML it generates like this search form.

64
06:09.570 --> 06:15.380
So to do that we have to type something in functions.php. And let's

65
06:18.730 --> 06:21.820
let's add a new file in the lib folder.

66
06:24.490 --> 06:27.830
And let's call it "theme-support

67
06:30.760 --> 06:44.950
.php". And let's include this file in the functions.php. "theme-support".

68
06:45.050 --> 06:49.210
So here we have to create a function. Let's open PHP tags.

69
06:55.130 --> 06:58.610
And don't forget to prefix, "_themename".

70
07:00.440 --> 07:10.570
And it's call it  "theme_support". And we'll attach this function to a hook, an action hook.

71
07:10.610 --> 07:17.400
So "add_action()". And let's call "after_setup_theme".

72
07:20.900 --> 07:27.770
And then the function name and ignore the other parameters.

73
07:27.860 --> 07:35.900
So this action is used to add support for features that are not supported by default by WordPress.

74
07:35.900 --> 07:43.120
So for example one of these features is, remember in the very early lectures when we created this header.php

75
07:43.170 --> 07:51.610
file and we mentioned that we don't need to add a TITLE tag and WordPress will generate it automatically

76
07:51.730 --> 07:52.250
using the 

77
07:52.270 --> 07:54.030
wp_head() hook, right?

78
07:55.000 --> 07:59.810
But if we go now to the web site you'll find no title, you'll find the URL.

79
07:59.910 --> 08:05.790
And that's because you want to explicitly tell WordPress I want to support this feature. And that's through the

80
08:06.110 --> 08:08.200
"after_setup_theme" action.

81
08:08.200 --> 08:17.790
So inside the function we can call a function called add_theme_support(). And it takes a "feature".

82
08:18.150 --> 08:20.150
So the feature for the title is" title-tag"

83
08:23.960 --> 08:26.350
So let's save and see our title now.

84
08:27.310 --> 08:32.810
And as you can see in the tab now, in the header there is title. And it's automatically generated by WordPress, here

85
08:32.840 --> 08:35.470
you don't need to do anything.

86
08:35.800 --> 08:38.320
So some other features that you'll need

87
08:41.080 --> 08:41.890
to add is.

88
08:44.740 --> 08:50.790
You know when you create a post you have an option to add a thumbnail. And this is not supported by default so we have

89
08:50.890 --> 08:56.460
we have to explicitly mention that we would like to support this.

90
08:56.700 --> 09:05.260
So "post-thumbnails". And we'll add other features throughout the course but let's add the one that we need

91
09:05.260 --> 09:08.220
now which is the HTML5.

92
09:08.800 --> 09:10.240
So it's called "html5".

93
09:10.450 --> 09:15.600
And then it takes an array of things that you want to support HTML5 for.

94
09:15.610 --> 09:18.500
So we have our search form.

95
09:18.570 --> 09:26.420
Let's also have the "comments" or "comment-list","comment-form".

96
09:26.860 --> 09:30.210
We've the "gallery" and the "caption".

97
09:30.990 --> 09:37.820
So let's save now and now our HTML, our form will support HTML5 syntax.

98
09:37.940 --> 09:39.180
So that was just a side note.

99
09:39.230 --> 09:44.990
Let's carry on now and we need now to customize the search form in order to look like this one.

100
09:45.110 --> 09:49.100
And that's why I actually installed Font Awesome to use this search icon.

101
09:49.100 --> 09:52.300
So let's go ahead now and create our custom form.

102
09:52.310 --> 09:58.220
So in header.php we call get_search_form(). And get_search_form() as I mentioned will generate the

103
09:58.220 --> 10:00.010
HTML for the search form.

104
10:00.110 --> 10:07.360
But before that it would actually search your theme folder for a file called searchform.php.

105
10:07.370 --> 10:17.870
So in the root theme folder create a new file called searchform.php.

106
10:20.670 --> 10:22.340
And let's just type some text here.

107
10:28.050 --> 10:29.790
And now let's fresh.

108
10:29.910 --> 10:38.280
And now we have our file loaded. So now in the search form file we can create our own form with our own markup.

109
10:38.340 --> 10:39.920
So let's do that.

110
10:39.930 --> 10:43.980
So to create a search form you simply create a normal HTML form.

111
10:49.260 --> 10:52.120
And this form will submit a get requests. So

112
10:52.500 --> 11:03.300
the method is "get". And the action will be your home, your.

113
11:03.810 --> 11:09.120
So let's open a PHP tag and echo "esc_url()".

114
11:11.870 --> 11:22.490
And "home_url" and the root path. And remove the extra arguments we don't need these. And close PHP

115
11:23.930 --> 11:27.790
and close the FORM tag.

116
11:28.970 --> 11:31.610
So now I have a form. And now we need a search input.

117
11:31.640 --> 11:32.740
So it's also simple

118
11:32.780 --> 11:41.970
HTML input of type "search". And this is important.

119
11:41.990 --> 11:49.230
The name should be "s" because this is what WordPress use in order to filter your posts with this parameter.

120
11:49.380 --> 11:55.280
So let's close the INPUT. And then we can have a button to submit.

121
11:55.280 --> 11:57.100
So you should have a type "submit".

122
12:04.690 --> 12:13.710
And let's see now. So we now have a search input and a button. And it takes you to the URL, home 

123
12:13.710 --> 12:16.300
URL with the "s" parameter. So WordPress

124
12:16.370 --> 12:21.910
now will know that if you request a URL with the "s" parameter that you are in search page and it

125
12:21.910 --> 12:27.130
will display the search page template and filter the posts against the search query.

126
12:27.180 --> 12:29.730
So that's actually all you need in order to create a search form.

127
12:29.740 --> 12:33.210
Anything else you add is just to add extra functionality to the form.

128
12:33.250 --> 12:36.550
So one minor improvement we can do is add a placeholder.

129
12:41.330 --> 12:46.970
So we don't have an empty input here. But it would also be nice to have here instead of the placeholder

130
12:46.970 --> 12:50.840
the value of the current query if we are in a search page.

131
12:51.050 --> 13:00.950
So if we do that we can add a value. And inside PHP tags we'll call a function called get_search_query().

132
13:05.790 --> 13:08.040
And that will get the search query

133
13:08.060 --> 13:11.090
if there is one and an empty string

134
13:11.570 --> 13:12.140
otherwise.

135
13:15.010 --> 13:18.830
But notice that this is the value of the "value" attribute.

136
13:18.930 --> 13:25.410
So it's an HTML attribute , so we should use the esc_attr()  before echoing it.

137
13:32.960 --> 13:37.850
And now we'll have the value that we typed. Let's type another one

138
13:38.090 --> 13:39.280
and it's still there.

139
13:39.350 --> 13:45.070
So for me the reason I wanted to create a custom search form is to add my classes and to add the

140
13:45.080 --> 13:52.320
icon. So instead of wasting your time and type the whole thing here, I'm gonna paste it. And just walk through it

141
13:52.740 --> 13:53.400
real quick.

142
13:53.400 --> 14:00.770
So I added a class "c-search-form" and, you know, a label with some classes and some accessibility

143
14:00.780 --> 14:01.430
bit here.

144
14:01.440 --> 14:04.770
"screen-reader-text" because a label needs a text.

145
14:04.920 --> 14:11.820
But in my case I didn't want to display it for styling issues so I put it in SPAN and give it a class

146
14:11.820 --> 14:17.320
screener text. And then we have our input with a class and the placeholder. And the placeholder of course

147
14:17.320 --> 14:19.830
should be escaped and translated.

148
14:19.830 --> 14:26.370
So use "_x" here. If you remember "_x" will give context to your translated string.

149
14:26.850 --> 14:33.430
And then I have my button and my icon here, the I tag.

150
14:35.040 --> 14:40.170
And then because also for accessibility about and should have a text, so I added SPAN with a "screen-reader

151
14:40.170 --> 14:46.540
-text" class. And inside of it, the text for the button. So you can take a look at this form and if

152
14:46.560 --> 14:48.080
you have any questions let me know.

153
14:48.090 --> 14:53.220
I just thought it would be a waste of time to type all of it on screen.

154
14:53.220 --> 15:01.770
So in the next lecture we'll discuss how to create the navigation and make menus and pretty much everything

155
15:01.770 --> 15:05.760
you need to know about navigation WordPress. So see you in the next section.