WEBVTT

0
00:03.210 --> 00:08.910
So we've seen in the last lecture that WordPress outputs responsive images. So let's in this lecture take a

1
00:08.910 --> 00:15.810
brief look on what responsive images are so that we can understand what's going on and then we can

2
00:16.290 --> 00:19.920
modify the responsive images that WordPress outputs.

3
00:19.950 --> 00:27.060
So I'm gonna be using the website called "placeholder" where you give it some sizes in the URL and

4
00:27.060 --> 00:30.460
it will return an image with this size, right?

5
00:31.920 --> 00:36.690
And let's now go to the header and let's write a normal image tag.

6
00:36.900 --> 00:39.900
So an IMG tag can have a "src" attribute.

7
00:40.270 --> 00:49.990
So let's give it a URL from placeholder and an alternative text.

8
00:50.100 --> 00:57.150
So this will be a normal image. A responsive image however is an image that can load different image sizes

9
00:57.270 --> 00:58.720
depending on some conditions.

10
00:58.740 --> 00:59.480
Right?

11
00:59.480 --> 01:06.550
So we have two attributes. We have the "srcset" attribute and we also have the "sizes" attribute.

12
01:07.140 --> 01:10.020
So let's see what each one of these mean.

13
01:10.080 --> 01:15.380
So the "srcset" attribute is basically a list of all image sizes available for a certain image.

14
01:15.390 --> 01:16.410
Right?

15
01:16.470 --> 01:22.990
So let's say we have our image here and let's say we also have some other image sizes.

16
01:23.640 --> 01:35.920
So let's say we have an image of  maybe 320x150 and another one maybe 512x250,

17
01:36.030 --> 01:43.010
some arbitrary numbers. And these should be "," separated.

18
01:43.320 --> 01:49.010
And also after each URL you should explicitly mention the width of this image.

19
01:49.140 --> 01:52.250
So this one is 320 and then you write "w" for width.

20
01:52.560 --> 01:54.620
And this one is 512w.

21
01:55.020 --> 01:57.300
And this one is 1200w.

22
01:57.540 --> 01:58.430
Right?

23
01:58.470 --> 02:01.970
So we now have different image sizes for the same image.

24
02:01.980 --> 02:05.100
So how will the image tag decide which one of these to load?

25
02:05.520 --> 02:08.280
This is the role of the "sizes" attribute.

26
02:08.370 --> 02:16.000
So inside the "sizes" attribute we define some conditions. And these conditions are normal CSS media queries.

27
02:16.200 --> 02:20.640
So you can have "max-width: 320px".

28
02:21.090 --> 02:23.330
So here you define a condition. So if the screen width

29
02:23.340 --> 02:26.540
is 320 pixels or less,

30
02:26.580 --> 02:31.110
the width of the image will be let's say 300 pixels, right?

31
02:31.200 --> 02:33.330
And let's say you have another condition.

32
02:33.390 --> 02:34.380
So ",".

33
02:35.160 --> 02:44.280
And if the screen width is maybe less than 480 our image size maybe will be maybe 460.

34
02:44.360 --> 02:45.740
Right?

35
02:45.780 --> 02:51.610
And then finally we have a fallback condition. If none of these conditions are met our image size will

36
02:51.610 --> 02:55.260
be 1200 pixels.

37
02:55.440 --> 03:00.580
So what will happen now is if the screen with a 320 or less,

38
03:00.930 --> 03:06.580
you mentioned that your image width will be 300 pixels. So the image tag will search in the "srcset"

39
03:06.580 --> 03:07.530
attribute

40
03:07.620 --> 03:12.750
which one of these is closest to the 300 pixels and it'll probably be the 320.

41
03:12.780 --> 03:16.300
So it will load this image, right?

42
03:16.390 --> 03:17.160
And so on.

43
03:17.230 --> 03:23.170
And the great thing about this is here you can use any CSS unit. So you can use "%" you can use "vw".

44
03:23.440 --> 03:25.960
You can also use the "calc" function.

45
03:25.960 --> 03:32.890
So what you can do here is very flexible and we'll see actually in our template how to create our own sizes

46
03:32.890 --> 03:33.570
attribute.

47
03:33.670 --> 03:38.180
But let's for now I see this.

48
03:38.280 --> 03:45.160
So now the screen width is 1300 something so the image loaded is 1200.

49
03:45.210 --> 03:51.940
So let's now decrease the screen width to less than 320.

50
03:51.960 --> 03:55.230
It's now 297.

51
03:55.230 --> 04:00.340
It's in the bottom left of the screen and let's reload.

52
04:00.380 --> 04:03.720
And now the 320x150 images loaded.

53
04:04.090 --> 04:10.750
Let's increase the screen width until it meets the second condition which is 480.

54
04:12.490 --> 04:15.990
So less than 480 and larger than 320.

55
04:16.000 --> 04:22.020
We mentioned that the image width will be 460 so it'll probably go and find the closest one which will

56
04:22.030 --> 04:23.000
be the 512.

57
04:23.010 --> 04:26.840
Right? So let's see now. Let's go.

58
04:26.870 --> 04:29.010
Larger than 420.

59
04:29.030 --> 04:38.900
And as you can see the image changed to the 512. And if you go more than 480 it will go to the 1200

60
04:38.930 --> 04:39.530
image

61
04:43.250 --> 04:49.690
Let's refresh now and we have the 1200 image loaded. If we go down the image won't change because

62
04:50.050 --> 04:56.050
it's pointless to actually load a smaller image when you already have a large image loaded.

63
04:56.050 --> 05:04.300
So this will only happen when you are in a small screen and then you go up, right? So now you know that.

64
05:04.350 --> 05:07.870
Let's now go to one of the WorldPress images.

65
05:08.010 --> 05:15.350
Let's see what WordPress does in the responsive image attributes. So let's actually copy this and paste it

66
05:15.830 --> 05:17.820
to see things better.

67
05:20.060 --> 05:23.040
So now the "src" attribute will not be important.

68
05:23.060 --> 05:26.620
It will just be used as a fallback if anything went wrong here.

69
05:27.990 --> 05:31.200
So let's ignore the "src" attribute and let's go to the "srcset".

70
05:31.710 --> 05:36.580
And what WordPress will do is that it will list here all the image sizes.

71
05:36.840 --> 05:38.070
And that's exactly what we need.

72
05:38.070 --> 05:43.900
So we have the 1200 width image which is the custom image that we defined.

73
05:44.140 --> 05:45.700
We have the medium 300.

74
05:45.730 --> 05:49.340
We have the medium_large and we have the large.

75
05:49.630 --> 05:51.100
So this is perfect.

76
05:51.310 --> 05:52.460
That's exactly what we need.

77
05:52.480 --> 05:55.360
We don't need to edit anything here in the "srcset".

78
05:56.210 --> 05:59.610
And the "sizes" however WordPress will add a condition.

79
05:59.670 --> 06:07.860
So if max-width is less than or equal 1200 it will assume that the image will take 100 vw which

80
06:07.860 --> 06:10.640
is the width of the screen, the full width of the screen.

81
06:10.800 --> 06:13.860
Otherwise it will just be 1200.

82
06:14.340 --> 06:23.210
So let's take a look at, one of our. Let's go to this post.

83
06:23.300 --> 06:28.480
So here for example we have an image and this image have a size large. And large has a width of 

84
06:29.120 --> 06:30.260
1024,

85
06:30.500 --> 06:31.720
right?

86
06:31.730 --> 06:40.490
So WordPress assumes that as long as the screen width is larger than the image width, you'll need to load 1024 version.

87
06:40.990 --> 06:48.370
And if the screen width is less than the 1024, it will assume that the image will cover the full screen width.

88
06:48.860 --> 06:57.400
So it adds here the 100vw. But the case is that WordPress adds may not be optimize to your theme, right?

89
06:57.440 --> 07:01.730
In our case here we have a content width of 800, this width.

90
07:01.930 --> 07:08.560
So we don't actually necessarily need to load the 1024 version if the screen size is larger than 1024.

91
07:08.840 --> 07:16.560
In our case actually the image will have a width of 800 until the screen size is less than a certain

92
07:16.950 --> 07:17.620
width.

93
07:18.000 --> 07:25.310
It will start actually cover the whole screen except these margins and paddings, right?

94
07:25.380 --> 07:30.220
So our case is  actually a lot more complicated than what WordPress did here.

95
07:31.160 --> 07:36.950
So we need to write our own sizes attribute and calculate this depending on which page you are in and

96
07:36.950 --> 07:37.670
which layout

97
07:37.670 --> 07:38.490
you are using.

98
07:38.700 --> 07:47.200
So for a blog post for example, we can have a blog with a sidebar remember. And this will be a totally

99
07:47.200 --> 07:48.750
different case.

100
07:48.880 --> 07:55.010
So let's in the next couple of lectures learn how to create our own sizes attribute.