WEBVTT

0
00:03.330 --> 00:09.990
So in order to make this menu accessible, and by accessible I mean it can be accessed by screen readers

1
00:10.270 --> 00:15.210
and also blind people who navigate using the keyboard without any mouse access.

2
00:15.210 --> 00:22.370
So first you should make sure that you have your focus ring. And focus ring is this ring around the

3
00:22.520 --> 00:24.430
links and buttons and stuff like that.

4
00:24.620 --> 00:30.030
And that will let you know which link you're currently focused on. So if you're navigating by keyboard and

5
00:30.140 --> 00:32.510
I'm now clicking tab,

6
00:32.810 --> 00:35.250
you will know exactly which link you're on.

7
00:35.630 --> 00:41.960
And if you click enter on one of these it will go to this link. To make sure you have this focus ring,

8
00:41.990 --> 00:46.530
actually it's in  most browser it's there by default.

9
00:46.530 --> 00:56.860
So if we inspect this link and toggle the focus state. And I'm gonna remove my styling. So I'm gonna

10
00:56.860 --> 01:03.060
remove the focus outline. And this is the default browser one.

11
01:03.160 --> 01:06.930
You can change how it looks, but you should never remove it.

12
01:06.940 --> 01:10.250
You should never say focus outline none

13
01:10.480 --> 01:16.810
And that's not only for the menu that's for any link or button or any focusable element in your

14
01:16.810 --> 01:17.930
page.

15
01:17.980 --> 01:19.260
So that's the first thing.

16
01:19.360 --> 01:26.740
But now even that we have that and we are navigating using the tab key. And I'm gonna remove the.

17
01:30.810 --> 01:33.270
I'm navigating using the tab key now.

18
01:33.750 --> 01:37.490
But for me now there is no way to open the sub menu.

19
01:37.830 --> 01:40.970
If I, if I'm not having a mouse and that's a problem.

20
01:40.980 --> 01:41.760
Right?

21
01:41.760 --> 01:51.410
So to tackle that there are multiple ways. So I'm gonna Google now "accessible dropdown menu". And you probably

22
01:51.410 --> 01:57.490
find the first link. And here we'll find the multiple approaches.

23
01:57.800 --> 02:08.150
I choose to use this one. So this one you will, you can navigate using the tab and they also have an a

24
02:08.150 --> 02:13.340
down arrow like we do. But the down arrow they have is actually a button so you can focus on it,

25
02:13.400 --> 02:21.650
you can click enter and then you can continue navigating.

26
02:21.740 --> 02:24.040
So that's what we're gonna do for our menu.

27
02:24.050 --> 02:29.460
We're gonna turn  our icons here into not just icons but buttons.

28
02:30.200 --> 02:31.450
So let's do that.

29
02:31.770 --> 02:46.530
So before doing the this button thing let's take a look at this one. And let's inspect. And let's inspect  the menu that

30
02:46.530 --> 02:49.270
has children.

31
02:49.980 --> 02:55.230
And if you take a look at the link you'll find that it has two attributes, two "aria" attributes. And "aria"

32
02:55.230 --> 02:58.290
attributes are for accessibility, for screen readers.

33
02:58.310 --> 03:03.870
So as you might know the "aria" attributes and accessibility thing, it's a big topic and there is a lot to read

34
03:03.870 --> 03:04.190
about it.

35
03:04.200 --> 03:10.780
But I'm gonna, I'm just gonna summarize this article and what we need to do for each thing.

36
03:10.950 --> 03:18.030
If it has a submenu we need to add the "aria-haspopup" attribute which will be true and "aria-expanded"

37
03:18.220 --> 03:23.950
attribute which will be true if the menu is currently opened and false if it's closed.

38
03:24.000 --> 03:31.980
So that's actually a great exercise to do to use WordPress filters in order to modify this menu and

39
03:31.980 --> 03:34.710
add some attributes to the ANCHOR tag.

40
03:35.250 --> 03:36.730
So we have this ANCHOR tag here.

41
03:36.780 --> 03:40.250
We need to filter it and add some attributes to it.

42
03:40.250 --> 03:46.490
So let's go to navigation.php.

43
03:46.540 --> 03:51.360
And let's add another filter.So let's create a new function.

44
03:54.390 --> 03:56.210
And "_themename_"

45
03:56.400 --> 04:07.820
And let's call it "aria_hasdropdown". And this filter will receive three attributes.

46
04:07.820 --> 04:10.500
So the first one is the attributes array.

47
04:10.500 --> 04:14.040
It's an array of attributes for the link, the ANCHOR tag.

48
04:14.160 --> 04:17.200
And we can modify it and return it like any field.

49
04:17.530 --> 04:26.490
And we'll see in a moment. And the $item like this one, the navigation post object. And the $args which is also like

50
04:26.490 --> 04:28.830
this one, the arguments of the

51
04:28.860 --> 04:30.350
wp-nav-menu() function.

52
04:30.450 --> 04:32.900
So we need to do the same thing when it first to check.

53
04:33.510 --> 04:35.240
If we are in the right menu.

54
04:35.420 --> 04:37.880
So let's copy this one.

55
04:37.990 --> 04:43.800
And also we need to check that if our current menu item has children.

56
04:44.140 --> 04:45.980
So let's copy this one also.

57
04:46.870 --> 04:49.410
And if so we need to modify the attributes.

58
04:49.510 --> 04:56.320
So as I mentioned the $atts or the attributes is an array of the attributes, HTML attributes

59
04:57.250 --> 05:00.240
for the link not for the LI.

60
05:00.550 --> 05:07.060
So that's what we need. Ao we can add an attribute by just adding a new key to the array. So

61
05:07.120 --> 05:13.770
in our case the key will be the attribute and the value will be the value. So "aria-haspopup"

62
05:14.050 --> 05:20.350
and this will be "true". Another one "aria-expanded".

63
05:21.610 --> 05:29.650
And this will be "false" by default. Because by default the menu items will be closed. So let's save and we

64
05:29.650 --> 05:31.590
actually did not add a filter.

65
05:34.000 --> 05:47.430
So it's called "nav_menu_link_attributes" and the function.  We actually have typo here, "aria".

66
05:50.240 --> 05:50.990
And

67
05:53.560 --> 06:00.660
priority 10 and arguments we have 3. So let's save and let's take a look now.

68
06:01.010 --> 06:01.890
Ok.

69
06:02.200 --> 06:04.890
Looks like we have an error.

70
06:05.860 --> 06:10.810
Ok we forgot to return the filtered attributes.

71
06:15.970 --> 06:21.030
As you can see now, for the link that has submenu,

72
06:21.160 --> 06:22.870
we now have our attributes.

73
06:22.870 --> 06:23.350
So great.

74
06:23.350 --> 06:25.950
So later we will, using JavaScript,

75
06:26.020 --> 06:31.560
we will manipulate these attributes when the menu is opened we will change "aria-expanded" to "true".

76
06:31.720 --> 06:34.760
And when it's closed we will reverse it and so on.

77
06:35.170 --> 06:40.240
But for now let's do the important part which is turning this icon a button.

78
06:40.420 --> 06:48.590
So we have this icon here we added using this filter. So what we needs to is just to wrap it in a button.

79
06:48.820 --> 06:54.860
But I'm just gonna create a new function for this button because this will be a lot of HTML. So

80
06:55.280 --> 06:57.630
almost better organization for your code.

81
06:57.910 --> 06:59.150
So let's call it

82
07:03.210 --> 07:11.880
"button" and it will take some arguments about let's just  create our HTML. So let's create a new variable called $button

83
07:13.930 --> 07:19.270
and will open a button and give it a class

84
07:19.420 --> 07:27.340
And this will be used in JavaScript. So it's important to give it a class to be able to target this button.

85
07:29.080 --> 07:32.940
And inside this button we need to concatenate the icon.

86
07:32.950 --> 07:42.150
So let's copy this and let's change this to "button" and let's close the button tag.

87
07:42.340 --> 07:45.690
So concatenate and "</button>".

88
07:51.170 --> 07:55.810
So the first argument for this function will be the direction of the arrow.

89
07:56.900 --> 07:58.310
And let's give it a default value.

90
08:01.510 --> 08:09.610
And let's remove this and concatenate it using the function argument.

91
08:13.200 --> 08:21.960
And this function will the return of the HTML.

92
08:22.220 --> 08:25.450
And now we can use this function here.

93
08:28.260 --> 08:35.720
And this one will take the down arrow and this one will take the right.

94
08:39.700 --> 08:40.240
So let's see

95
08:40.280 --> 08:46.870
now if this is working. We now have this as a button.

96
08:47.330 --> 08:51.080
So let's focus on this link and then tab.

97
08:51.360 --> 08:53.460
And now we are able to focus on the button.

98
08:53.520 --> 08:58.760
Of course we we don't have any function as you know we'll write some javascript in the next lecture where

99
08:58.760 --> 09:01.910
we can click enter on the button and it will open the submenu.

100
09:01.920 --> 09:04.490
But for now let's just finish this up.

101
09:04.490 --> 09:08.770
So what we need to do is add some text for screen readers.

102
09:08.790 --> 09:12.260
So I think I've mentioned this a lot.

103
09:12.310 --> 09:18.240
We have a button here that only has an icon a screen reader user will not be able to tell what this

104
09:18.240 --> 09:19.070
button will do.

105
09:19.080 --> 09:24.150
So we need to have some screen-reader-text for this button so that the screen readers will know what this

106
09:24.150 --> 09:29.250
button will do when it's focused. So let's add a SPAN.

107
09:36.500 --> 09:47.560
And let's give it a class "u-screen-reader-text". Sorry because we don't need this text

108
09:47.560 --> 09:52.510
to appear actually. We just need it for screen readers. And let's give it to another class.

109
09:52.510 --> 09:57.390
And this will be for the JavaScript which will be in the next section.

110
10:00.530 --> 10:07.420
And inside the SPAN will there be something and then we'll close the SPAN.

111
10:08.360 --> 10:14.780
So inside the SPAN we need to add some text. So I think the text for this button could be two things.

112
10:14.880 --> 10:19.200
It could be show the the title of the menu and then submenu.

113
10:19.200 --> 10:27.150
So in this case "Show About The Tests" submenu or if it's already opens it should read "Hide About The Tests"

114
10:27.340 --> 10:28.290
submenu.

115
10:28.320 --> 10:29.440
So how to do that.

116
10:29.680 --> 10:31.070
Let's go back now to the code.

117
10:31.260 --> 10:42.540
So the default text will be, let's do sprint() and you'll see why in a moment. And then "esc_html__"

118
10:42.540 --> 10:48.020
and then we'll type our text here. And then text domain.

119
10:50.740 --> 10:55.140
So we need the text to be "Show"

120
10:55.930 --> 11:00.880
and then the title of the menu. And then "submenu".

121
11:01.450 --> 11:05.620
So the second argument for the sprint(),  it needs to be the title of the menu.

122
11:05.920 --> 11:07.520
So where do we get that from.

123
11:07.600 --> 11:10.060
We can pass it here and the function.

124
11:10.230 --> 11:19.540
It's the $title.

125
11:20.020 --> 11:28.410
And then you can use it in the function.

126
11:28.430 --> 11:37.020
So now I have a SPAN with a class "menu-button-show" and it's text says "Show" and than the title "submenu".

127
11:37.310 --> 11:38.890
And when you do another one.

128
11:39.410 --> 11:43.240
So this duplicated this and let's call this "menu-button-hide".

129
11:43.700 --> 11:51.960
And this classes are for the JavaScript as I mentioned. And this one will say "Hide submenu".

130
11:52.200 --> 11:57.940
And this is what we need to be read out by the screen reader when the menu is already opened and we

131
11:57.940 --> 11:59.400
need to hide it.

132
11:59.430 --> 12:02.840
So by default the menu will be closed. So we need only the first text.

133
12:02.920 --> 12:05.700
So to make the screen readers ignore the other text

134
12:05.740 --> 12:11.940
we can add "aria-hidden="true"" and this will be ignored.

135
12:12.090 --> 12:19.860
And using JavaScript when the menu is opened we will set this to "false" and then add "aria-hidden="true"" for

136
12:19.860 --> 12:21.150
the first text.

137
12:21.270 --> 12:31.610
So I hope this makes sense to you. Let's now save and see what we have now. And the menus and the icons disappeared.

138
12:31.830 --> 12:41.050
I discovered the mistake I made. So let's go to add this closing tag here,

139
12:42.120 --> 12:57.200
and here. So let's check again. And we now have our icon or button. It has the icon and has two SPANs. The second one will be

140
12:57.210 --> 13:00.500
"Hide" and then "About The Tests" which is the menu title, "submenu"

141
13:00.500 --> 13:04.600
So we need a space here and this will be hidden by default.

142
13:05.060 --> 13:10.820
So by default this one would be read out by the screen reader which is "Show the submenu" and using 

143
13:10.960 --> 13:15.380
JavaScript we will reverse this two when the menu is opened.

144
13:15.410 --> 13:20.730
I hope it's clear now. Let's just add the space. Or actually it's not a space issue.

145
13:20.750 --> 13:22.290
I just forgot to add the

146
13:22.690 --> 13:25.310
"s".

147
13:25.490 --> 13:26.560
So sorry for that.

148
13:26.670 --> 13:34.750
And now there is a space before the "submenu". Let's add the JavaScript logic for this button

149
13:34.790 --> 13:35.570
in the next lecture.