WEBVTT

0
00:01.880 --> 00:10.080
In last lecture we created a comments.php file and now we need to start coding this template.

1
00:10.530 --> 00:16.890
So the first thing we need to do, we need to check if the current post is password protected.

2
00:19.680 --> 00:21.360
If the current post is password protected,

3
00:21.370 --> 00:24.560
we don't need to show these comments template, right?

4
00:24.580 --> 00:29.930
So we have a function called post_password_protected or password_required().

5
00:33.490 --> 00:38.800
And if so we will return and the form won't be displayed.

6
00:38.980 --> 00:46.390
So let's make sure this is working. So let' echo this. So the post_password_required() function will return "true" if

7
00:46.390 --> 00:48.070
the password is required.

8
00:48.490 --> 00:54.580
But it will return "false" if the password is required and you typed the right password. And that's exactly

9
00:54.580 --> 00:55.090
what we need.

10
00:55.090 --> 00:57.940
So let's go to the password required post.

11
01:03.680 --> 01:11.430
As you can see we don't have the template here which should be this string. Let's type the password.

12
01:12.400 --> 01:15.550
And now we have it, right?

13
01:15.560 --> 01:23.370
So next we need to create a DIV with an ID of "comments". Let's close PHP first.

14
01:24.890 --> 01:26.120
And then I'm gonna give it a class

15
01:29.160 --> 01:31.290
"c-comments" and this class is for styling.

16
01:31.290 --> 01:34.800
But the ID is important and I'll tell you why now.

17
01:35.250 --> 01:37.870
So the reason why the ID "comments" is important.

18
01:37.930 --> 01:44.000
Let's go to the template-parts and then post and then content.

19
01:44.140 --> 01:46.690
Let's do something here.

20
01:46.690 --> 01:58.800
Let's called a function called get_comments_link(). And this will get something called comments link for this

21
01:58.800 --> 01:59.960
post.

22
02:00.570 --> 02:02.100
And remember we're in the content.php

23
02:02.100 --> 02:04.330
so we are in the loop here.

24
02:07.520 --> 02:08.840
And then we need to echo this.

25
02:13.640 --> 02:19.580
So as you can see this function will return a URL for this post but with an ID at the end.

26
02:19.700 --> 02:28.140
So here have ID "respond". But if you have a post with comments we will have ID "comments".

27
02:28.210 --> 02:29.700
So if you go to this link now,

28
02:35.670 --> 02:41.130
what will happen is adding this ID "comments" here will scroll to a DIV with ID "comments".

29
02:41.430 --> 02:47.550
So if you're familiar with HTML you already know that if you had an ID in the URL it will scroll to this

30
02:47.640 --> 02:54.540
DIV with this ID. And that's the reason why we added the DIV with ID "comments" here. And see if you don't have comments

31
02:54.540 --> 02:59.520
for a post we'll have respond and you'll see why also later.

32
02:59.520 --> 03:03.180
So let's carry on this, remove now the get_comments_link().

33
03:06.930 --> 03:13.680
And what we'll have to do now is we have to display a title with a number of comments. But before displaying

34
03:13.680 --> 03:15.030
the title

35
03:15.210 --> 03:18.830
let's add an if condition that will check if we have comments.

36
03:19.050 --> 03:27.260
So "if (hane_comments())" and then close it. And inside of it I'm gonna add an H2 tag with a class

37
03:27.510 --> 03:36.310
"c-comments__title". And then inside this H2 tag we will, we need to print if we

38
03:36.310 --> 03:39.310
have a single comment, we will print "1reply to"

39
03:39.340 --> 03:40.550
and then the post title.

40
03:40.850 --> 03:44.320
If you have more than 1 comments we will print

41
03:44.500 --> 03:46.460
for example "2 replies to"

42
03:46.510 --> 03:48.480
and then the post title.

43
03:48.540 --> 03:50.700
So I think you should know how to do this by now.

44
03:50.790 --> 03:54.430
We'll use printf and _n(). So let's open PHP. And let's

45
03:57.080 --> 04:02.870
first add _n(). So the _n() need to be escaped as well.

46
04:02.970 --> 04:05.590
So esc_html( _n() ) .

47
04:05.970 --> 04:12.510
So the "single" will be a placeholder for the number of comments. We'll have 2 placeholders here so

48
04:12.600 --> 04:17.580
we will have to use not only "%s", we'll have to use numbers.

49
04:17.620 --> 04:23.110
So "%1$s". So you can use these numbers if you want to add multiple placeholders.

50
04:23.120 --> 04:33.000
You can read more about the printf() function if you need to know more. And then "Reply to " and then the

51
04:33.000 --> 04:34.310
second placeholder.

52
04:34.490 --> 04:37.830
So let's add the title of the post

53
04:37.830 --> 04:47.340
inside the " ". And then the second placeholder. So next to we'll have the "plural". So let's add this

54
04:47.400 --> 04:48.970
in new line.

55
04:50.550 --> 04:55.390
And the plural will be "Replies" that will be the only difference.

56
04:55.570 --> 05:04.550
And then the number and this will be the number of comments. So let's get_comments_number() and finally the text

57
05:04.580 --> 05:04.930
domain.

58
05:09.970 --> 05:16.540
So what do we need to do now? We need to put the output of this in a printf() to replace the placeholders.

59
05:16.900 --> 05:26.210
So printf and then the first argument will be the output of the _n() function and the second argument

60
05:26.210 --> 05:29.640
will be the number of posts but formatted remember.

61
05:29.850 --> 05:37.930
So let's call number_format_i18n(), internationalization, and then get_comments_number(). And this will

62
05:37.930 --> 05:39.310
be the first placeholder,

63
05:39.390 --> 05:48.550
the "%1$s". The second one will be the title of the post. So get_the_title(). And let's also write a comment

64
05:48.580 --> 05:49.860
for the translators.

65
05:50.770 --> 05:57.950
So "1 is number of comments and 2 is post title".

66
06:01.960 --> 06:02.760
Let's save this and see.

67
06:05.880 --> 06:09.880
And we have "19 Replies to " and then the post title.

68
06:10.320 --> 06:14.410
So next we need to display the comments, the actual comments. And to do that

69
06:14.430 --> 06:22.200
we use a function called wp_list_comments() and will also call this function inside "if ( have_comments() ) "

70
06:22.200 --> 06:23.190
condition.

71
06:23.340 --> 06:32.310
So let's open PHP and let's call wp_list comments(). And it can take an array of arguments.

72
06:32.360 --> 06:33.780
We'll see that in a moment.

73
06:33.930 --> 06:36.980
So let's save and see what will this look like.

74
06:37.400 --> 06:39.790
So as you can see it outputted the comments.

75
06:40.100 --> 06:41.990
And if you inspect

76
06:44.790 --> 06:46.570
each comment will be in an LI.

77
06:46.680 --> 06:54.900
But we don't have a UL. So it's your responsibility to add UL before calling wp_list_comments() function.

78
06:54.940 --> 07:03.650
So let's do that. And I've a class called "c-comments__list".

79
07:04.140 --> 07:09.750
So we now have the comments wrapped in a UL. So let's see the arguments that we can put here.

80
07:11.170 --> 07:13.700
So here we have an avatar.

81
07:14.320 --> 07:18.710
Maybe it's a bit small so we have an argument called "avatar_size".

82
07:18.940 --> 07:32.750
So let's say "200". We also have an argument called "reply_text" and let's say "hello" for example. And let's see now. As you can see we've a large 

83
07:32.750 --> 07:33.350
avatar

84
07:33.410 --> 07:35.620
and the reply text is now "hello".

85
07:35.660 --> 07:44.420
So the next step is in the wp-admin in the Discussion Settings you can choose to paginate your comments. So we can break

86
07:44.420 --> 07:51.500
comments into pages and let's say 5 per page. And you can also choose the order and stuff like that. But let's save

87
07:51.510 --> 07:55.840
now. And let's reload.

88
07:59.240 --> 08:06.100
So we now have 5 comments but you don't have any pagination, right? So to display the pagination we will have to

89
08:06.100 --> 08:11.070
call a function called the_comments_pagination().

90
08:16.700 --> 08:19.350
And now we have the pages here.

91
08:19.360 --> 08:21.160
Right?

92
08:21.400 --> 08:25.490
So finally and obviously we need to display the comments form itself.

93
08:25.720 --> 08:28.510
And this is also we need just to call a function.

94
08:28.510 --> 08:29.530
And this function is called

95
08:32.230 --> 08:32.980
comments_form().

96
08:37.240 --> 08:44.020
But make sure you add this function call after the have_comments() if condition. We always need to display this

97
08:44.320 --> 08:48.890
form.

98
08:48.990 --> 08:51.190
It's actually called "comment_form()" not "comments"

99
08:54.910 --> 08:56.450
And now we have the form.

100
08:56.460 --> 09:01.340
Right? Let's go to the comment_form() documentation.

101
09:02.640 --> 09:07.980
I just want to let you know that this function can take a lot of arguments. And using these arguments

102
09:07.980 --> 09:12.330
you can customize every bit of HTML in this form.

103
09:12.630 --> 09:18.390
So you have an example here you can customize even the IDs in the classes for the form and for the submit

104
09:18.390 --> 09:21.440
button. And the titles and stuff like that.

105
09:21.480 --> 09:26.500
You can actually also customize the comment field, the HTML for the comment field. You can add your

106
09:26.500 --> 09:27.680
own textarea.

107
09:27.990 --> 09:33.820
Actually every HTML that is outputted in this form you can customize it using the arguments in the

108
09:33.820 --> 09:35.170
comment_form() function.

109
09:35.340 --> 09:39.630
But I think you can do that yourself if you will have to do it.

110
09:39.910 --> 09:43.070
But in our case the comments form is fine this way.

111
09:43.160 --> 09:45.420
Let's just make sure the reply link is working,

112
09:45.450 --> 09:49.660
which is hello. And it's now working fine.

113
09:49.960 --> 09:58.720
What we need to do now finally in this comments.php. We need to check. Let's open PHP and we need to check

114
09:58.720 --> 10:02.820
if the comments are disabled. So "!"

115
10:03.040 --> 10:04.670
and then comments_open().

116
10:08.140 --> 10:10.060
If the comments are disabled,

117
10:10.210 --> 10:14.710
but we have some comments, so get_comments_number().

118
10:14.710 --> 10:19.940
You would like to maybe display a message that you can't add comments to this post anymore,

119
10:19.960 --> 10:20.860
right?

120
10:20.890 --> 10:23.890
So maybe P tag and  I have a class called

121
10:24.130 --> 10:29.510
"c-comments__closed".

122
10:29.830 --> 10:32.500
And then we need to echo a string escaped and translated.

123
10:36.060 --> 10:40.760
And let's say "Comments are closed for this post". 

124
10:44.880 --> 10:47.020
So our comments template is now done.

125
10:47.380 --> 10:51.580
We have everything now for a fully functional comments template.

126
10:51.670 --> 10:58.710
But one more thing that maybe you would like to do is to customize the markup for each comment. So WordPress

127
10:58.830 --> 11:02.390
will generate some markup here for a comment.

128
11:02.640 --> 11:10.160
As you can see. But maybe you don't like that and you want to create your own markup for the comment.

129
11:10.230 --> 11:15.810
So let's see how we can do that in the next lecture or actually before we go to the next lecture.

130
11:16.020 --> 11:21.200
Remember the get_comments_link() function that we outputted here. And it added an ID of "comments"

131
11:21.210 --> 11:27.480
if you have comments and an ID of "respond" if we don't have comments, right? So the comments form we have

132
11:27.480 --> 11:30.510
an ID of "respond".

133
11:30.690 --> 11:35.950
And that's why the get_comments_link() added this ID in order to scroll through the comments form if

134
11:35.950 --> 11:37.590
we don't have any comments.

135
11:37.590 --> 11:38.520
All right?

136
11:38.610 --> 11:41.600
So I just wanted to mention that, see you in the next lecture.