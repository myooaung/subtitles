WEBVTT

0
00:03.240 --> 00:06.670
So in the last couple of lectures we created a plugin.

1
00:06.720 --> 00:12.720
And we did this by manually creating a folder in the plugins folder in wp-contents. And then we came

2
00:12.720 --> 00:19.160
in the Plugins page in wp-admin and activated our plugin. But now we have a problem that when 

3
00:19.170 --> 00:26.220
you bundle your theme for production, for users. And then users will activate your theme but that won't automatically

4
00:26.220 --> 00:27.860
activate the plugins.

5
00:27.960 --> 00:34.770
So we included a plugins folder inside our theme that will contain the metaboxes plugin and any other

6
00:34.770 --> 00:39.870
plugins that we will create throughout the course. So you can instruct your theme users

7
00:39.960 --> 00:46.950
and you know, tell them to activate these plugins, go to plugins and add new and then upload this zip

8
00:46.950 --> 00:49.830
folder. But there is a much better way to do that.

9
00:50.070 --> 00:53.910
And this actually required if you are developing for Theme Forest.

10
00:53.940 --> 00:57.970
So what we will do is that we will integrate some third party library.

11
00:58.170 --> 01:03.720
And what this library will do is it will allow us to create some list of plugins that are required

12
01:03.720 --> 01:09.870
by the theme. And if these plugins are not installed it will display a message here that will say "These

13
01:09.870 --> 01:12.290
plugins are not installed and they are required by your theme.

14
01:12.330 --> 01:13.550
Do you want to install them now?".

15
01:13.680 --> 01:18.930
And if you click yes it will take you to a page where you can have a list of all the plugins that we

16
01:18.930 --> 01:25.890
as a theme developer will define. And you can click activate and the this third party library will go to the

17
01:26.460 --> 01:32.810
plugins folder and activate your theme. And the theme user will not have to do this step by himself.

18
01:33.270 --> 01:37.610
So this library is called "TGM Plug Activation".

19
01:41.420 --> 01:49.910
So let's go to their website and download it.  So let's choose Theme here. And this is pretty cool you can choose if

20
01:49.910 --> 01:55.250
you are distributing this theme for WordPress.org or Theme Forest.

21
01:55.560 --> 01:59.200
So let's choose Theme Forest and let's choose a Text Domain.

22
01:59.460 --> 02:07.600
So in our case our text domain is "_themename". And don't worry we will include this library inside of our

23
02:07.600 --> 02:10.880
theme so the "_themename" will be replaced when we build.

24
02:10.970 --> 02:15.640
It also takes a Function Prefix which will be the same in our case. And it also takes a Name and let's make

25
02:15.640 --> 02:21.690
this also "_themename" so it will be replaced with our theme name when we build our files.

26
02:21.730 --> 02:22.570
So let's generate.

27
02:26.110 --> 02:27.920
And it downloaded a zip folder.

28
02:28.050 --> 02:35.000
So I'm donna copy this from the download folder and paste here.

29
02:35.050 --> 02:36.520
So here it is.

30
02:36.690 --> 02:37.440
And let's open it

31
02:40.720 --> 02:46.990
And it will contain some files but the file that we need is class-tgm-plugin-activation.php.

32
02:47.480 --> 02:48.400
So let's copy that.

33
02:52.380 --> 02:56.710
And then let's paste it inside maybe in the lib folder.

34
02:57.670 --> 03:00.330
And let's also copy this example and put it here.

35
03:00.350 --> 03:03.320
You won't use it actually but we need to take a look at it.

36
03:03.340 --> 03:09.010
So we go to our code editor. And we now have this file here.

37
03:09.060 --> 03:14.020
And as you can see we'll find "_themename" here in some places but we don't have to actually edit anything

38
03:14.050 --> 03:14.710
in this file.

39
03:14.710 --> 03:18.280
We will just include it in our functions.php.

40
03:18.310 --> 03:24.470
So let's do that or let's actually create a new file in the lib.

41
03:24.480 --> 03:36.680
Let's call it include-plugins.php. And then in functions.php let's include this file.

42
03:43.510 --> 03:45.670
And then inside include-plugins

43
03:45.740 --> 03:52.260
let's open PHP and include the TGM Plugin Activation class.

44
03:52.360 --> 04:00.380
So let's use maybe require_once and the path will be theme directory

45
04:03.650 --> 04:04.230
and then "/lib/"

46
04:07.880 --> 04:09.470
and let's copy its name.

47
04:09.600 --> 04:11.090
It's too long.

48
04:18.660 --> 04:23.260
So now that we have this class included we can now use it.

49
04:23.370 --> 04:26.170
So how to use it is included in the example here.

50
04:26.190 --> 04:33.120
So you can take a look at this. And they have examples for how to require a plugin that is bundled with

51
04:33.120 --> 04:34.740
your theme. And that's what we will do.

52
04:34.740 --> 04:41.390
And they also have examples on how to require plugin from the WordPress repository and or a plugin

53
04:41.380 --> 04:43.560
in a remote server and stuff like that.

54
04:44.010 --> 04:50.030
So you can read this but in our case we'll need to require a plugin that is bundled inside of our theme,

55
04:50.290 --> 04:51.800
in the plugins folder.

56
04:52.470 --> 05:00.840
So to do that let's add_action(). And the action's called "tgmpa_register".

57
05:01.830 --> 05:03.930
So this action is called somewhere in this

58
05:04.100 --> 05:10.540
class. And let's define a new function "_themename_register

59
05:13.780 --> 05:20.780
_required_plugins".

60
05:20.880 --> 05:22.320
And let's create this function now.

61
05:28.770 --> 05:36.960
So we need to define an array of plugins, array of required plugins.

62
05:37.050 --> 05:37.620
Right?

63
05:37.620 --> 05:48.110
And an array of configuration for the TGM Plugin Activation class.

64
05:48.370 --> 05:49.490
Right?

65
05:50.020 --> 05:56.450
And then we call a function called tgmpa(). And it takes the $plugins

66
05:59.540 --> 06:01.520
and the $config.

67
06:05.140 --> 06:06.220
And that's it.

68
06:06.300 --> 06:11.110
We now have to fill these arrays. So let's go to the example again.

69
06:13.670 --> 06:19.040
And here we have all the possible configurations in the config array.

70
06:19.150 --> 06:24.590
So you can read about those here its commented and everything is explained. So you have the ID for example

71
06:24.590 --> 06:26.280
and stuff like that.

72
06:26.630 --> 06:33.350
So if you want to override any of these you can put it here but in our case we won't need to override

73
06:33.800 --> 06:34.990
any of these.

74
06:35.080 --> 06:42.500
So let's just use the defaults and let's just define the array of plugins. So each plugin we'll add will be also an array.

75
06:42.830 --> 06:46.270
And this array will contain information about this particular plugin.

76
06:46.340 --> 06:53.090
So the "name", let's use our placeholder "_themename metaboxes".

77
06:57.250 --> 06:58.870
And it needs a "slug".

78
06:59.250 --> 07:08.860
The slug is usually the theme's folder name and we called it "_themename-metaboxes".

79
07:12.490 --> 07:17.860
And the "source". And source is where your plugin is located inside your theme.

80
07:17.990 --> 07:18.490
Right?

81
07:18.550 --> 07:24.450
So it's in the get_template_directory_uri().

82
07:25.450 --> 07:35.510
And then we created a folder inside the lib folder called plugins and it's called firsttheme

83
07:35.600 --> 07:42.800
firsttheme-metaboxes.zip. But let's use also the "_themename" placeholder here. So that if we use this plugin

84
07:42.810 --> 07:47.710
in another theme, it will still work without having to replace anything here.

85
07:47.720 --> 07:53.410
It also takes a "required" boolean. And in our case we need this plugin to be required.

86
07:56.740 --> 07:57.430
And a "version".

87
08:00.800 --> 08:03.890
And our version is we defined here.

88
08:03.900 --> 08:05.130
1.0.0.

89
08:08.900 --> 08:10.130
And this is important.

90
08:11.440 --> 08:16.190
It's called "force_activation" and this will force your plugin to be installed.

91
08:16.270 --> 08:20.020
What actually Theme Forest will reject your theme if you set this to "true".

92
08:20.110 --> 08:26.820
So always set this to "false". You should never force a user to activate a certain plugin.

93
08:26.830 --> 08:30.550
And there's also "force_deactivation".

94
08:30.580 --> 08:38.250
So let's duplicate and "deactivation" and you should also set this to "false".

95
08:38.600 --> 08:41.660
So let's save now and see what this will do.

96
08:41.890 --> 08:45.590
So let's go to wp-admin and we have an error.

97
08:45.750 --> 08:50.570
And the require_once, it needs an absolute path in the server.

98
08:50.620 --> 08:56.060
So let's remove the URI and let's refresh.

99
08:56.100 --> 09:07.990
So we have another error in line 24. So let's call this $plugins because we call that $plugins here. Sorry for that.

100
09:07.990 --> 09:08.910
Let's refresh now.

101
09:09.830 --> 09:11.180
And let's go to Plugins.

102
09:14.440 --> 09:15.960
And let's deactivate this plugin.

103
09:17.070 --> 09:22.270
And as you can see now we have a message "The following required plugin is inactive:

104
09:22.360 --> 09:23.590
_themename metaboxes".

105
09:23.610 --> 09:28.690
So "Begin activating plugin" and let's activate it.

106
09:29.040 --> 09:34.010
And now it's activated without us having to upload the plugin manually or anything.

107
09:34.230 --> 09:39.560
So we've now activated the "_themename _pluginname" plugin in which we use for development.

108
09:39.660 --> 09:46.370
But when we build our theme it will actually go and get this folder and activate the build plugin.

109
09:46.680 --> 09:51.970
So why don't we go now and build our theme for development and make sure that everything is working fine

110
09:52.110 --> 09:55.860
and plugins are included correctly.

111
09:56.070 --> 10:00.750
So I have a, I'm gonna open a new Finder

112
10:01.140 --> 10:08.830
in htdocs. And I installed a new WordPress installation a blank one called WordPress.

113
10:08.860 --> 10:12.400
So if you go to themes now you'll find the default themes.

114
10:12.470 --> 10:15.030
So let's go to this new installation.

115
10:15.040 --> 10:25.950
It's in localhost:8888 and then wordress and wp-admin. And let's now build our theme.

116
10:26.030 --> 10:38.440
So inside the theme directory I'm gonna run "npm run bundle".

117
10:38.490 --> 10:46.100
So now inside the packaged we should have firsttheme and this should be the file that we just bundled.

118
10:46.220 --> 10:47.750
So let's go now here and Add New Theme.

119
10:51.180 --> 10:58.420
And Uploads and then go to our file which is this one and try activate it.

120
11:01.030 --> 11:06.190
So great, it is activated and it's now asking for the firsttheme metaboxes plugin.

121
11:06.200 --> 11:12.840
So let's "Begin installing" and let's "Install". And then it will display this error.

122
11:12.870 --> 11:17.540
So I've done some debugging on this and I've reached a solution.

123
11:17.530 --> 11:22.770
So let's go to the gulp file in our theme and not in our plugin.

124
11:26.040 --> 11:32.170
And when we compress our files for some reason when we run the "replace" task,

125
11:32.370 --> 11:37.500
you know the "replace" task  will be run on each file and replace "_themename" with "info.name".

126
11:37.590 --> 11:45.670
But apparently when this file is a zip file it gets corrupted by this "replace" task. So let's write

127
11:45.700 --> 11:52.480
an if conditions here that will only run the "replace" task if this file is not a zip file.

128
11:52.760 --> 11:56.770
So what happens basically is when we were having all the files in

129
11:56.770 --> 12:00.750
our theme here. And we're having our plugin in the lib/plugins folder.

130
12:01.180 --> 12:07.870
So when this firsttheme-metaboxes.zip file when it passes through this "replace" task, gets

131
12:07.870 --> 12:11.400
corrupted and in our built theme it's saved as a corrupted file.

132
12:11.410 --> 12:14.200
And that's why we get this message here.

133
12:14.430 --> 12:18.060
So let's try this if condition now. So "gulpif"

134
12:22.860 --> 12:27.740
and "gulpif" can take a boolean but can also take a function.

135
12:28.800 --> 12:32.980
And what's great about this is that this function gets past the file object.

136
12:33.120 --> 12:36.430
And this is the current file that is currently being replaced.

137
12:36.450 --> 12:42.200
So we need to see if this file ends with a ".zip" and if so we will return "false".

138
12:42.240 --> 12:47.080
Otherwise we will return "true". And whatever we are returned from this function

139
12:47.160 --> 12:57.000
it will be the argument of the "gulpif". So to get the extension of the file, we can write an if condition.

140
12:57.710 --> 13:03.690
"if (file.relative.split('.'))"

141
13:04.440 --> 13:10.140
So file.relative will get the name of the file and the split on the "." will convert it to an array.

142
13:10.250 --> 13:16.370
And this array will contain the name and then the extension. And the last item in the array will be the extension.

143
13:16.370 --> 13:27.060
So we can use the pop() to get the last item. And if this is not equal to "zip", if it's not a zip file, we

144
13:27.060 --> 13:32.260
will return "true". Otherwise you can return "false". But since

145
13:32.250 --> 13:39.570
this is an arrow function, we can skip the return. And you can remove the if condition.

146
13:45.100 --> 13:46.450
And this { }.

147
13:49.730 --> 13:53.140
And whatever will be returned from this condition,

148
13:56.360 --> 13:58.720
whatever will be returned from this 

149
13:58.900 --> 14:00.560
it will be returned in the function.

150
14:00.580 --> 14:05.770
So if not zip that will return "true" and that's what this function will return.

151
14:06.010 --> 14:08.180
And this will be the argument of the "gulpif".

152
14:09.150 --> 14:15.680
So let's save now. And if this was confusing to you make sure you read more about arrow functions.

153
14:15.880 --> 14:20.350
So let's now try and bundle the theme again.

154
14:26.260 --> 14:30.670
We've an error. I think we've an extra bracket here.

155
14:33.600 --> 14:40.040
And a bracket missing here. So let's try run this.

156
14:47.080 --> 14:47.980
And let's go now to

157
14:50.790 --> 15:03.390
the WordPress installation and the themes. And let's delete this one and activate, install the theme again.

158
15:03.610 --> 15:09.380
Also when you delete the theme make sure you are in the blank installation. Please don't remove the original

159
15:09.380 --> 15:12.050
theme that you are developing.

160
15:12.480 --> 15:13.520
So let's upload the theme.

161
15:19.220 --> 15:20.240
And let's activate.

162
15:24.170 --> 15:25.360
And install the plugin. 

163
15:25.640 --> 15:28.080
And then the error is gone but we now have another error.

164
15:28.370 --> 15:34.140
So it says that our plugin consists of more than one file, but the files are not packaged in a folder.

165
15:34.460 --> 15:41.720
So I also did some debugging on this and this is probably a bug in the TGM Plugin Activation class.

166
15:42.960 --> 15:52.420
But to solve this let's go to the gulpfile in the plugin and not the gulpfile in the theme. And in the "compress" 

167
15:52.560 --> 15:55.890
task let's add an option here called "base".

168
15:56.900 --> 16:00.170
And it takes a relative path to the parent.

169
16:00.470 --> 16:05.880
So what we need to do now is we need to go to the plugin in the command line, the plugin in the theme

170
16:06.090 --> 16:08.940
and this the plugin again.

171
16:15.530 --> 16:23.400
And let's remove the theme in the WordPress installation in a new installation the blank one. And then let's

172
16:24.540 --> 16:38.200
go to our plugin in htdocs and myfirsttheme, wp-content, themes. Oh sorry plugins.

173
16:38.280 --> 16:42.050
So this is the new packaged one with the "base" option.

174
16:44.390 --> 16:52.310
And we will replace this with the one in the plugins folder in the theme folder.

175
16:52.580 --> 16:55.230
So I'm sorry I know this might be a bit confusing.

176
16:56.580 --> 17:00.750
So now we replaced the plugin that is bundled in our theme.

177
17:01.020 --> 17:03.760
So let's build our theme again.

178
17:03.780 --> 17:10.270
So inside the theme directory in the command line let's run a bundle and then go to the package folder.

179
17:13.630 --> 17:14.950
Now we have the new file.

180
17:15.160 --> 17:16.210
So let's try now.

181
17:16.240 --> 17:18.980
And we deleted the old theme in the blank.

182
17:19.090 --> 17:20.350
WordPress installation,

183
17:20.350 --> 17:23.260
this one. So let's try now and add the theme again.

184
17:31.990 --> 17:32.920
And activate.

185
17:36.550 --> 17:42.090
And install the plugin and hopefully this time. And successfully installed.

186
17:46.090 --> 17:49.800
So let's now edit a post. Oh sorry.

187
17:49.940 --> 17:53.270
Sorry we actually installed the plugin but we did not activate it.

188
17:53.310 --> 17:57.480
So we also get the message here that the plugin is installed but not activated.

189
17:57.480 --> 18:06.670
So let's activate it. And let's edit post. And we have all our boxes here.

190
18:07.050 --> 18:13.770
So that was a lot of work and I actually spent a lot of time debugging the problems that you saw here.

191
18:14.190 --> 18:18.310
But when you create other plugins in the future you won't take as much time

192
18:18.330 --> 18:25.510
hopefully. If this lecture is a bit confusing to you I really recommend that you rewatch it again.

193
18:25.750 --> 18:29.720
And I think it will make things more clear. So let's do

194
18:30.180 --> 18:37.760
one final improvement. So as you can see every time we bundle our theme, we will have to go to our plugin

195
18:38.090 --> 18:42.710
or in the future it will be our plugins, we'll create other plugins. And then go to the package folder

196
18:42.770 --> 18:47.150
and take the theme our already bundled plugin. And then put it in the

197
18:50.510 --> 18:54.120
lib folder and plugins and paste it here.

198
18:54.470 --> 18:58.070
And every time we update the plugin we'll have to do the same.

199
18:58.210 --> 19:01.130
So why don't we in the gulpfile in the theme,

200
19:01.520 --> 19:06.780
Ok, not in the plugin, add a new task here in the

201
19:06.870 --> 19:14.320
when you are building the theme that will automatically go to the plugins folder and gets the zip file

202
19:14.590 --> 19:17.570
and put it in the plugins folder in the theme.

203
19:18.940 --> 19:27.100
So in other words it will go to wp-content/plugins/_themename-metaboxes/packaged and

204
19:27.100 --> 19:35.430
get this file and put it here in the lib/plugins. And this will be in the same "bundle" task that

205
19:35.430 --> 19:37.790
bundles the theme.

206
19:37.920 --> 19:39.540
So this will be a great improvement.

207
19:39.580 --> 19:41.590
Let's do this in the next lecture.