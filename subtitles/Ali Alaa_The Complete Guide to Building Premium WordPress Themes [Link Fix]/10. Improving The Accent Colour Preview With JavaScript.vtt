WEBVTT

0
00:03.230 --> 00:05.970
So in the last lecture we've added this color field.

1
00:06.150 --> 00:12.580
And whenever we change it, it will refresh all iframe. And the color will be reflected on our styles.

2
00:12.680 --> 00:18.480
But let's now do an improvement to this. So that this color will be changed immediately without refreshing

3
00:18.480 --> 00:19.200
the iframe.

4
00:19.320 --> 00:24.460
So let's go to customize.php. And let's choose "transpose" here.

5
00:26.040 --> 00:31.380
And set it to "postMessage"

6
00:31.410 --> 00:37.820
So now we can run our JavaScript callbacks whenever the setting changes in the customize-preview.js.

7
00:37.830 --> 00:48.550
So let's add one more callback and let's, you know, copy and change the setting name which is the "_themename_accent_colour"

8
00:48.550 --> 00:49.250
"_themename_accent_colour".

9
00:51.550 --> 00:57.630
So now whenever this color changes we will have the new value in the two variable. 

10
00:57.970 --> 01:00.330
But what can we do with it.

11
01:00.580 --> 01:06.760
So remember when I told you in the source here that the inline style will have an ID.

12
01:06.820 --> 01:15.900
So what we can do is we can use this ID here to change the inline styling whenever the value changes.

13
01:16.140 --> 01:21.850
So let's use jQuery to select this style tag.

14
01:23.230 --> 01:24.330
And it's an ID.

15
01:27.580 --> 01:31.390
And using ".html" we can change the styles inside of it.

16
01:31.420 --> 01:35.890
So let's now set it to an empty string just to check if it's working.

17
01:36.600 --> 01:43.550
And let's go back now to the Customizer.

18
01:43.570 --> 01:49.150
So now what we expect is whenever we change the color these styles will be removed and the original

19
01:49.150 --> 01:50.420
color will be restored.

20
01:50.440 --> 01:51.630
So let's try this now.

21
01:54.750 --> 01:57.000
And let's inspect the iframe now.

22
01:59.660 --> 02:06.870
And inside the iframe let's open the HEAD tag and somewhere we'll have our,

23
02:07.270 --> 02:07.710
yeah 

24
02:07.760 --> 02:10.400
here it is, the inline CSS.

25
02:10.440 --> 02:14.500
And now it's empty because we removed all the styles inside of it.

26
02:14.500 --> 02:23.240
So what we can do is we can replicate what we've done in the PHP but this time using JavaScript. So let's

27
02:23.240 --> 02:24.450
copy the string.

28
02:24.820 --> 02:29.310
And inside the customize-preview we now need to append this string.

29
02:29.470 --> 02:37.490
But this time using the new color. So let's do this but of course we'll have to change some stuff in the string.

30
02:37.800 --> 02:48.200
So let's open a instead of the "  a` and close it. And then to use a variable inside a `

31
02:48.200 --> 02:49.620
string

32
02:49.690 --> 03:00.840
we can type $ and the variable that we want to put here is the "accent_colour" the "to" variable.

33
03:00.950 --> 03:02.090
I think this should work.

34
03:02.090 --> 03:03.010
So let's try it out.

35
03:09.390 --> 03:18.400
So as you can see each time we change the color the, let's inspect it again.

36
03:21.070 --> 03:22.770
And let's open the inline.

37
03:22.770 --> 03:29.680
And as you can see the content inside the this DIV will change to our new color using this the CSS, using the

38
03:29.830 --> 03:31.770
JavaScript.

39
03:31.900 --> 03:40.350
So this looks great but there is however a problem with it is that you probably if you have a large

40
03:40.430 --> 03:43.560
template you will probably have a lot of styles here.

41
03:43.560 --> 03:50.480
So to duplicate the selectors each time you want to add a selector here in the PHP and in the

42
03:50.480 --> 03:53.920
JavaScript. This could not be very efficient.

43
03:53.960 --> 04:00.290
So let's try to figure out a way in order to avoid repeating ourselves in the next lecture.