WEBVTT

0
00:03.550 --> 00:13.560
So in the last lecture we created a single.php file. Let's now go to the content.php and let's display things differently

1
00:13.950 --> 00:16.070
if we all are in a single page.

2
00:16.410 --> 00:24.920
So first I'm gonna wrap my content in a class and this will just be used for styling. And

3
00:24.980 --> 00:29.740
I'm gonna call it "c-post__inner".

4
00:36.500 --> 00:39.660
So first we need to display the post thumbnail.

5
00:40.420 --> 00:44.830
And that's actually gonna be for both, the single and in the loop as well.

6
00:45.130 --> 00:46.980
So we don't have to do an if condition for that.

7
00:46.990 --> 00:51.860
So let's do another if condition to check if we have a post thumbnail.

8
00:51.970 --> 00:58.280
So to that we call the function called get_the_post_thumbnail().

9
00:58.900 --> 01:01.950
And since we are in the loop we don't have to provide an ID.

10
01:02.300 --> 01:08.790
And if this function is not equals to an empty string then we have the post thumbnail.

11
01:09.630 --> 01:14.400
So let's just close the if condition.

12
01:14.500 --> 01:22.000
So if you have post thumbnail we need to echo or output some HTML and I have a class called "c-post

13
01:22.170 --> 01:24.510
"c-post__thumbnail"

14
01:25.540 --> 01:27.230
And inside of it

15
01:27.570 --> 01:32.730
let's output the post thumbnail. So let's call the_post_thumbnail().

16
01:32.760 --> 01:36.380
It takes a "size". 

17
01:37.180 --> 01:41.220
And in case you don't have any WordPress experience before we'll have

18
01:41.410 --> 01:46.490
an entire section about images in WordPress but just in a nutshell

19
01:46.600 --> 01:53.490
when you upload an image to WordPress, WordPress will resize it to three different sizes; thumbnail, medium and large.

20
01:53.710 --> 01:57.730
And when you retrieve an image you can choose which  size you want.

21
01:57.790 --> 02:04.200
So let's choose large for now and later in the course we'll learn how to create custom image sizes.

22
02:04.210 --> 02:09.220
So let's see now. Let's go to a post that has a thumbnail.

23
02:09.280 --> 02:11.500
And as you can see we now have an image.

24
02:14.930 --> 02:23.200
And using my class the "c-post__thumbnail" I added a negative margin just to fill the whole space here.

25
02:23.420 --> 02:27.690
And of course we'll have it also in the single page.

26
02:27.710 --> 02:43.630
So let's keep this one open and let's now, we actually need to add the thumbnail inside "post__inner".

27
02:44.140 --> 02:47.740
And let's use some HTML5 tags as well.

28
02:47.740 --> 02:55.860
So the title and the meta information, the date and the author, can be put in the HEADER tag.

29
02:57.660 --> 03:05.490
So this will be the header of the post. And also we've a class for that for styling and "c-post

30
03:05.970 --> 03:11.590
"c-post__header". And let's close it.

31
03:11.950 --> 03:14.270
And this will include also the post meta.

32
03:20.210 --> 03:27.610
But notice we have an H2 tag here, but in a single blog post we need the post title to have an H1 tag.

33
03:27.770 --> 03:28.540
Right?

34
03:28.720 --> 03:31.350
And that for SEO and that sort of stuff.

35
03:31.630 --> 03:35.760
So let's now use our first is_single() if condition.

36
03:36.160 --> 03:44.920
So "if (is_single())" and this will check obviously if we're in single post.

37
03:48.790 --> 03:50.060
So let's copy this.

38
03:53.800 --> 03:55.300
And let's type the else.

39
04:02.760 --> 04:09.270
And inside the else we'll have the H2 and close the if condition.

40
04:09.420 --> 04:13.160
And if it's single we have an H1 tag.

41
04:16.650 --> 04:21.220
And we also have a class "single-title" and that's just for styling.

42
04:21.580 --> 04:30.900
So "h1". So let's see now. And as you can see now we have a much bigger font here for the single blog page. 

43
04:31.260 --> 04:36.180
And it's not just for the size but the H1 tag is used for SEO. So in a single blog page

44
04:36.180 --> 04:40.470
his is the main title for your page, right?

45
04:40.830 --> 04:44.920
Next we have of course the "excerpt" and the "content"

46
04:47.640 --> 04:49.910
So let's copy this condition.

47
04:53.800 --> 05:02.680
And if single we'll have to output something else we'll have to output the "excerpt", right?

48
05:08.460 --> 05:09.730
So this will be similar. So let's

49
05:09.750 --> 05:16.340
copy this. But if single we'll have to instead of the "excerpt" we'll output the content.

50
05:19.200 --> 05:23.060
And the class here also, we need to call it the "content".

51
05:25.540 --> 05:37.350
So now we have all the content for this post. We also in the single blog page will have to remove

52
05:37.360 --> 05:39.240
"Read More" and Delete Post".

53
05:39.230 --> 05:44.480
And we'll have to remove this var_dump() anyways. So let's go here.

54
05:44.740 --> 05:47.950
Let's remove this. And you can actually delete

55
05:48.030 --> 05:53.990
this delete button. This feature was for testing the capabilities and that sort of stuff. It is not

56
05:54.010 --> 05:56.800
important anyway. And let's write an if condition here.

57
06:01.200 --> 06:02.490
And if not single

58
06:06.570 --> 06:07.830
display the "Read More" link.

59
06:07.830 --> 06:09.930
Otherwise we don't need to display it.

60
06:12.690 --> 06:13.910
So fine.

61
06:14.020 --> 06:15.540
Let's now just make sure.

62
06:18.940 --> 06:23.660
It's still working there and fine.

63
06:23.690 --> 06:31.360
Finally if we are in a single blog post we need to display after the content, the tags and categories.

64
06:31.850 --> 06:33.260
And this is actually required.

65
06:33.500 --> 06:38.060
You have to display the post tags and category somewhere in the theme.

66
06:38.270 --> 06:49.010
So let's go to the content and we'll only have to add this if in single. So let's copy and close it. And

67
06:49.010 --> 06:51.110
we have to type some stuff in it.

68
06:51.140 --> 06:52.200
Right?

69
06:52.280 --> 06:57.840
So we have the HEADER for the post and the part that will have the tags and categories can be the FOOTER.

70
06:59.970 --> 07:12.740
Let's give it a class "c-post__footer". And let's open PHP.

71
07:12.780 --> 07:17.030
So first we need to display the categories and we only need to display the categories

72
07:17.100 --> 07:25.290
if the post has some categories,all right? So to do that we can use another conditional tag which is called

73
07:25.290 --> 07:27.500
has_categories() or has_category().

74
07:27.600 --> 07:35.880
And this will check if the current post has any categories. And if so we need to output these categories, right?

75
07:35.880 --> 07:47.120
So let's echo function called get_the_category_list(). And it takes first argument a "separator".

76
07:47.310 --> 07:51.850
So this will be a string of all the categories and they will be separated by something.

77
07:52.100 --> 07:53.920
So in our case a ", " will be fine.

78
07:54.020 --> 07:55.670
Comma and then space.

79
07:55.680 --> 07:57.440
So let's see what this will output.

80
08:02.310 --> 08:03.910
And we've one category here.

81
08:04.260 --> 08:08.940
Let's go to another post where we have, let's search for categories.

82
08:11.690 --> 08:16.100
So we've a post with many categories here as you can see.

83
08:16.100 --> 08:22.530
So they are now separated by a ",". But we need to do something that might not come to mind.

84
08:22.790 --> 08:28.220
We need to translate this ",". And this might sound weird but maybe in another language things are

85
08:28.220 --> 08:30.250
separated differently, right?

86
08:30.290 --> 08:35.420
So maybe in any language that is written from right to left the ","will have to be translated to

87
08:35.420 --> 08:38.030
another ","in another direction.

88
08:38.070 --> 08:40.220
So you have to provide this option in your theme.

89
08:40.250 --> 08:45.640
You have to escape and translate this ","

90
08:49.560 --> 08:53.030
And of course our text domain. 

91
08:53.470 --> 08:56.640
Let's now instead of echoing this let's put in a variable. 

92
08:56.640 --> 09:06.820
Let's call it $cats_list, cats for categories. And we need to add some text before the categories like

93
09:06.820 --> 09:07.570
"Posted in"

94
09:07.600 --> 09:14.390
and then the categories. So let's do a printf() and then escape and translate

95
09:17.210 --> 09:18.230
and then "Posted in".

96
09:20.850 --> 09:21.850
And then a placeholder.

97
09:25.380 --> 09:32.160
And the text domain. And we need to replace this placeholder with our categories.

98
09:35.800 --> 09:36.650
So let's save now.

99
09:36.650 --> 09:41.060
And as you can see we have ""Posted in" and then the categories.

100
09:41.270 --> 09:44.800
Let's now just echo some DIVs for styling.

101
09:46.590 --> 09:47.520
So I have a DIV called

102
09:51.220 --> 09:56.620
"c-post__tags" and close it.

103
10:01.930 --> 10:08.290
Oh sorry, we're still in the categories, so "cats" .

104
10:08.470 --> 10:12.940
And finally let's do something that will be very useful for translators.

105
10:12.940 --> 10:16.140
Remember the comments that we had for translators.

106
10:16.910 --> 10:20.310
So if you add a comment that starts with "translators"

107
10:22.950 --> 10:29.940
and then ":". You can write the comment for the translator to explain this string here.

108
10:30.240 --> 10:35.040
So when a translator will find a string that is just a "," it might be confused.

109
10:35.190 --> 10:47.590
So you can write a comment and say "used between categories". And let's do the same also for the printf().

110
10:47.610 --> 10:50.160
And mention that the placeholder.

111
10:50.210 --> 10:54.230
So "%s is the categories list".

112
10:58.410 --> 11:00.030
And then nothing will change here of course.

113
11:00.030 --> 11:04.370
But we've added some useful stuff in our theme.

114
11:04.520 --> 11:08.250
Let's now do the tags. So "if (has_tag())".

115
11:09.570 --> 11:13.860
That will check if this post has any tags.

116
11:15.540 --> 11:20.930
And we'll echo some styles. Let's copy this and change it to "tags", sorry.

117
11:23.700 --> 11:25.990
And close it.

118
11:27.870 --> 11:38.530
And in a similar way, let's create $tags_list variable. And call a function called get_the_tag_list().

119
11:38.530 --> 11:43.460
And this one takes "before" and  "separater" and "after" 

120
11:43.640 --> 11:50.560
and "id".  So let's, we don't need the ID now. So let's say we need to add the tags in the lists, in a UL, unordered

121
11:50.560 --> 11:51.360
list.

122
11:51.610 --> 11:57.500
So how to do that given we have the list and we can add before and after and separater.

123
11:57.550 --> 12:02.550
So "before" we need to add an opening tag for the UL.

124
12:02.680 --> 12:13.780
Then "after" we need to add a closing tag for the UL. And then the "separator" we need to close the LI before 

125
12:14.260 --> 12:15.660
and then open the next one.

126
12:16.000 --> 12:23.140
But this way for the first and last tag we will be missing the opening LI for the

127
12:23.620 --> 12:28.710
first one and closing LI for the last one.

128
12:30.630 --> 12:31.570
So let's echo this.

129
12:38.120 --> 12:39.870
And let's see.

130
12:40.120 --> 12:42.500
So we have our tags now.

131
12:42.760 --> 12:44.230
And I did some styling for them.

132
12:44.230 --> 12:46.840
So let's search for tags.

133
12:46.900 --> 12:56.540
And we have a post "many tags". And just to make sure everything look fine. And let's inspects.

134
12:56.670 --> 13:02.280
So what we do, we call the get_the_tag_list() function. As "before" the list

135
13:02.280 --> 13:10.070
we echoed UL and then the LI for the first one. And then as a "separator" we outputted the closing LI

136
13:10.140 --> 13:12.640
and then the opening LI for the next one.

137
13:13.980 --> 13:15.980
Which is this.

138
13:16.890 --> 13:25.900
And then "after" the list we echoed the closing UL and then the closing LI for the last tag.

139
13:25.980 --> 13:28.040
So I hope this is clear.

140
13:28.080 --> 13:29.460
I think that's it for

141
13:29.700 --> 13:36.390
for the content.php now. Let's move on and after the content we need to display information about the

142
13:36.390 --> 13:36.830
author.

143
13:36.870 --> 13:38.690
So let's do this in the next lecture.