WEBVTT

0
00:03.170 --> 00:10.050
So in the last lecture we created like a skeleton for creating custom widgets. So we have now three functions that

1
00:10.050 --> 00:14.690
we will use to display our widget in the frontend and in the backend

2
00:15.000 --> 00:18.860
and also to sanitize and save our fields.

3
00:19.260 --> 00:23.470
So let's start by creating our fields in the backend here.

4
00:24.940 --> 00:28.850
Let's say we want to make our widget exactly like this one.

5
00:28.920 --> 00:35.290
It will have a title and number of posts. And maybe also display date and maybe we can add a dropdown

6
00:35.560 --> 00:41.800
that will have some options that will let you specify how you want to sort your posts by date, by comments and

7
00:41.800 --> 00:46.500
so on. So let's start with the title.

8
00:46.750 --> 00:51.600
Let's go back and in the form(), we will have to output some HTML,

9
00:51.640 --> 00:53.330
right?

10
00:53.530 --> 01:01.480
So let's close PHP and open it. And inside of here, let's add a P tag

11
01:02.500 --> 01:04.810
and this P tag will wrap our input.

12
01:08.190 --> 01:16.350
And let's create a LABEL for our input and inside of it we want to display a label that is the title,

13
01:16.360 --> 01:16.870
right?

14
01:16.870 --> 01:20.770
So let's display and escaped and translated text,

15
01:23.930 --> 01:25.100
"Title".

16
01:26.090 --> 01:27.710
And of course text domain.

17
01:31.670 --> 01:33.800
And let's close the LABEL.

18
01:34.340 --> 01:41.620
Let's add a ":" here. And let's create our input. So it will be an INPUT.

19
01:41.920 --> 01:48.110
Let's give it a class, I think we used that before, class "widefat". It's a WordPress class, it will make the input

20
01:48.410 --> 01:56.390
take the full width. And let's give it an ID and the ID you can't just hardcode it.

21
01:56.800 --> 02:02.550
You should use a WordPress function that will generate a unique ID for this field for this widget.

22
02:02.770 --> 02:10.240
So this function is actually a method in the class, in the WP_Widget class. So we can use $this to reference

23
02:10.560 --> 02:17.210
the class and the method is called get_field_id(), right?

24
02:18.200 --> 02:21.560
And here we can put a name for our field, so let's call it "title".

25
02:22.640 --> 02:27.680
So this name is important, we will use it when we display our widget in the frontend and also

26
02:27.680 --> 02:38.390
when we sanitize our fields. Well we also need a name for our input. And similar to the ID we shouldn't

27
02:38.400 --> 02:48.400
also hardcode this, we should use a function. Let's copy this and instead of "id", it's called get_fie_name(). Let's add a "type="text""

28
02:48.730 --> 02:53.140
and that's it for now.

29
02:53.450 --> 02:59.040
Let's close it. And also we need in the label, we need to add FOR tag.

30
02:59.550 --> 03:02.220
And it will for the ID.

31
03:02.230 --> 03:06.910
So let's copy this and put it here.

32
03:07.690 --> 03:09.550
So let's save and take a look now.

33
03:13.020 --> 03:15.060
And we've our first field here.

34
03:15.060 --> 03:17.300
So let's type anything here and save.

35
03:17.670 --> 03:23.940
And of course nothing is saved because we haven't written anything in the update() function yet, right?

36
03:24.380 --> 03:26.790
So in the update() function

37
03:26.910 --> 03:29.230
we have the $new_instance and the $old_instance.

38
03:29.670 --> 03:37.380
So the $new_instance object it will contain the values that you typed here after you click save. And the

39
03:37.420 --> 03:44.030
$old_instance will contain the values that was written here before you change and click save, right?

40
03:44.120 --> 03:47.740
So in our case for example it was an empty string and then we typed this.

41
03:48.160 --> 03:54.510
So the $new_instance will contain a key called "title" that will contain the string and the $old_instance

42
03:54.510 --> 04:02.160
will contain a key called "title" that will contain an empty string. And inside of this function we should somehow

43
04:02.790 --> 04:08.890
use these variables and return a new object that will contain what will be saved in the database.

44
04:09.790 --> 04:12.980
So if we return $new_instance here.

45
04:17.400 --> 04:22.950
What we will do is we will return an object that contains the values that we typed here.

46
04:23.100 --> 04:25.210
And that's exactly what we need.

47
04:26.040 --> 04:30.670
So let's type something and save. And we still get an empty field here.

48
04:30.690 --> 04:35.720
And that's because in the inputs we do not specify a value.

49
04:35.930 --> 04:37.960
Right?

50
04:37.980 --> 04:39.440
So how do we get the value.

51
04:39.770 --> 04:46.360
It's by using this $instance. This $instance will contain the current values of this widget.

52
04:46.430 --> 04:48.800
So why don't we try and var_dump() it?

53
04:53.700 --> 04:57.850
And we have an array and it contains "title"

54
04:57.970 --> 04:59.580
and then the value that we typed,

55
04:59.590 --> 05:00.220
right?

56
05:00.250 --> 05:07.580
If we change anything here let's type, as you can see the $instance will change.

57
05:07.620 --> 05:15.450
So what we need to do now is we need to first check that we have a "title" key in this $instance.

58
05:15.810 --> 05:20.610
And if so we will display it in the value otherwise we will display an empty string.

59
05:21.320 --> 05:28.990
So let's write an if condition here. "if (is_set($instance[

60
05:31.840 --> 05:32.650
'title']))".

61
05:33.000 --> 05:38.120
So if you have a "title" key in this $instance then we want to use it, right?

62
05:38.130 --> 05:44.790
So let's create a new variable called $title and assign it to title of $instance.

63
05:48.100 --> 05:49.960
Otherwise we will

64
05:52.870 --> 05:54.960
add an empty string to the $title variable.

65
05:55.010 --> 05:56.650
Right?

66
05:57.100 --> 06:00.270
And then we can use this variable as a value here.

67
06:00.290 --> 06:02.640
So let's open PHP.

68
06:03.160 --> 06:10.250
And don't forget we are in an HTML attribute, the "value" attribute, so we should esc_attr()

69
06:10.870 --> 06:14.740
and then our $title. And we should echo this.

70
06:15.010 --> 06:16.730
Let's see now.

71
06:20.240 --> 06:27.510
And now we have our value. Let's save. Let's refresh and we still have it.

72
06:27.660 --> 06:28.980
So that's great.

73
06:29.160 --> 06:35.390
But now when we save, when we update our widget, we'll return the $new_instance.

74
06:35.640 --> 06:42.090
Another say, the $new_instance will contain the thing that you typed here and the $old_instance will contain the thing

75
06:42.420 --> 06:46.020
that was typed here before you save this one.

76
06:46.110 --> 06:50.040
So we probably won't need the $old_instance in the update() function.

77
06:50.070 --> 06:56.190
We will only need what you typed after you save it, right? And that's exactly what the $new_instance will

78
06:56.190 --> 06:56.890
contain.

79
06:57.090 --> 06:59.350
But we're actually returning the $new_instance, we're returning 

80
06:59.400 --> 07:02.280
what the user typed here without any sanitization, right?

81
07:03.470 --> 07:10.180
So what we have to do is, we have to sanitize all the values inside this $new_instance.

82
07:10.190 --> 07:19.810
So what you can do is, you can create a new array, let's call it $instance. And it will be an empty array. And let's return

83
07:19.830 --> 07:21.780
this one instead of the $new_instance.

84
07:23.010 --> 07:26.730
And then inside of this new array, we will add our values

85
07:26.760 --> 07:28.260
but after sanitization.

86
07:28.260 --> 07:29.230
Right?

87
07:29.340 --> 07:34.890
So let's say "$instance['title']" and this will be.

88
07:35.290 --> 07:49.260
Let's also check that we have this value in the $new_instance array. So is_set() and then "title" of $new_instance.

89
07:49.260 --> 07:54.310
So if you have a "title" in the $new_instance we want to display it but after sanitization. So we can use

90
07:54.310 --> 07:55.880
maybe sanitize_text_field().

91
07:59.430 --> 08:01.910
And pass it the "title".

92
08:02.100 --> 08:05.060
Otherwise we will just save an empty string.

93
08:05.070 --> 08:06.490
Right?

94
08:06.570 --> 08:08.480
So that's all what we need to do for the title.

95
08:08.490 --> 08:10.700
So let's make sure it's still working.

96
08:17.460 --> 08:19.740
And it's not.

97
08:20.060 --> 08:23.060
All right, we should be array.

98
08:25.220 --> 08:27.050
So let's refresh and

99
08:34.600 --> 08:35.340
and it's working.

100
08:35.350 --> 08:36.810
Let's type, trying type

101
08:36.890 --> 08:37.680
some HTML.

102
08:41.850 --> 08:49.440
And save and as you can see the sanitize_text_field() will strip it. And just to believe that we actually

103
08:49.770 --> 08:50.760
did something here.

104
08:50.760 --> 08:59.450
Let's go back to returning the $new_instance and let's type HTML.

105
09:03.090 --> 09:04.740
As you can see it's not removed.

106
09:04.810 --> 09:05.710
Right?

107
09:05.710 --> 09:11.520
So that's how to sanitize your fields. Let's in the next lecture create our other fields,

108
09:11.530 --> 09:13.770
this whole thing and the include date.

109
09:13.810 --> 09:18.060
And also we have the number of posts.

110
09:18.280 --> 09:24.160
And then after that we will display the frontend of the widget. So see you in the next lecture.