WEBVTT

0
00:03.160 --> 00:09.970
So let's now define a color picker a field that we'll use in order to change the accent color of the website.

1
00:10.120 --> 00:13.200
So let's create a new section and we'll call it General Options.

2
00:13.500 --> 00:16.220
And then inside of it we'll put the Color Picker.

3
00:16.680 --> 00:17.520
So let's go now to

4
00:20.680 --> 00:26.280
the customize.php and I've added some comments here for the different sections that we'll add

5
00:26.280 --> 00:31.700
throughout the course. So let's add a new section and call it General Options. Let's do that quickly and let's

6
00:31.770 --> 00:32.380
copy this.

7
00:35.760 --> 00:38.280
And just change the "footer" to "general".

8
00:46.050 --> 00:48.450
Now let's add a new setting to

9
00:48.600 --> 00:50.720
to add to this field. So.

10
00:54.550 --> 00:57.960
And let's call it "accent_colour" and

11
01:00.600 --> 01:03.630
pass an array of options. And I have a typo

12
01:04.140 --> 01:04.440
here.

13
01:07.370 --> 01:14.700
So give it a "default" value. And we'll make this the current color.

14
01:14.760 --> 01:16.370
Let's see the code for it

15
01:19.170 --> 01:19.850
And this one.

16
01:26.450 --> 01:36.440
And we'll also sanitize it. So "sanitize_callback" and we don't have to define a custom function.

17
01:36.440 --> 01:45.220
There is a core function WordPress called "sanitize_hex_color" which will sanitize the color in this format the hex format.

18
01:45.230 --> 01:47.040
So this will be perfect.

19
01:47.240 --> 01:54.480
Now it's time to add a control for the settings. So to add an HTML element control we used to define the control as 

20
01:54.530 --> 01:58.640
so, and a type of text or select or ant HTML element.

21
01:58.660 --> 02:01.090
But now we need a custom color picker.

22
02:01.460 --> 02:07.520
So this will be a little different. But it's easier as well WordPress provides custom classes.

23
02:07.900 --> 02:15.700
And if you go to this guide and the core custom control section. You'll finally some classes like WP_Customize _Color_Control

24
02:15.730 --> 02:19.760
or Medis_Control for images and audio and stuff like that.

25
02:20.210 --> 02:24.700
So the one that we will need is customize color control.

26
02:24.770 --> 02:31.320
So let's copy this example and it's defined a little bit differently.

27
02:31.460 --> 02:39.940
So you first initialize the WP_Customize_Color_Control and then you pass it the $wp_customize object which is this

28
02:39.980 --> 02:47.330
one. And then you add the setting name here or the control name which should be the same. And then the

29
02:47.330 --> 02:48.350
array of options.

30
02:48.380 --> 02:51.230
So a little bit different but nothing really hard here.

31
02:51.290 --> 03:00.840
And let's change the text domain. And the sction we will need to add it in the our newly created section.

32
03:04.500 --> 03:05.950
And let's see now our Customizer.

33
03:10.800 --> 03:16.160
And we now have a General Options section and inside of it an accent color.

34
03:16.560 --> 03:20.200
So now we can change this color and the iframe will refresh.

35
03:20.220 --> 03:27.430
But of course nothing will change now because we haven't used this field yet. So let's do that now.

36
03:27.630 --> 03:34.820
So let's open our website and let's view the source.

37
03:35.000 --> 03:39.970
So we have our CSS loaded here, in the bundle.css file. 

38
03:40.060 --> 03:44.470
And what we need to do is to load some styles after this file to override it.

39
03:44.650 --> 03:49.730
But also we need this file to be a PHP file because we will need to write some PHP in it, right?

40
03:49.750 --> 03:53.010
We need to get this field using some PHP functions.

41
03:53.490 --> 04:00.630
So you might think, all right, we can go to the footer.php which will be loaded definitely after we load our CSS

42
04:01.210 --> 04:06.920
files and write some inline styles to override it.

43
04:07.200 --> 04:11.060
So let's try to do that. As you go to footer.php.

44
04:13.820 --> 04:21.580
And let's add some inline styling here. Let's add a background to the body.

45
04:22.090 --> 04:24.630
And now because we're in a PHP file we can use,

46
04:24.710 --> 04:27.060
you can open a PHP tag and write some PHP.

47
04:31.270 --> 04:35.520
So we can echo the theme option.

48
04:35.620 --> 04:38.200
So "get_theme_mod".

49
04:38.230 --> 04:43.050
And then the name which we called "accent_colour".

50
04:46.450 --> 04:48.000
So let's try and see if this will work.

51
04:56.710 --> 05:00.040
And as you can see it's working and let's try and change it.

52
05:05.390 --> 05:07.360
And it's working great.

53
05:07.440 --> 05:15.350
So the idea is to override any styles that use this color in an inline style that is loaded after the our

54
05:16.220 --> 05:18.970
original bundle.css, fine.

55
05:19.190 --> 05:24.110
However writing these styles in the footer.php is not right approach.

56
05:24.110 --> 05:30.980
So let's delete what we've written now. And let's see how to properly add inline styles in WordPress.

57
05:31.390 --> 05:33.210
So let's go to enqueue-assets.

58
05:33.680 --> 05:39.780
So to add inline styles in WordPress properly you need to use in the "enqueue_script" action.

59
05:39.860 --> 05:47.090
You need to call a function called wp_add_inline_style(). And it takes a "handle" and the "handle" should be

60
05:47.090 --> 05:53.670
handle over CSS stylesheet that already exists. And you want to load these styles after it. So we

61
05:53.780 --> 05:56.570
need to load our styles after our main stylesheet.

62
05:56.570 --> 05:58.930
So it should be this handle.

63
05:59.690 --> 06:04.730
And it also takes the CSS string that we want to enqueue.

64
06:05.330 --> 06:07.270
So let's write some CSS as a string.

65
06:12.070 --> 06:17.380
And let's try now and see. Sorry I typed script here instead of style.

66
06:21.460 --> 06:24.580
So let's try again and it's working.

67
06:25.030 --> 06:28.520
And let's see it in the source.

68
06:28.780 --> 06:34.670
And as you can see right after the bundle.css we now have an inline style which also had an ID

69
06:34.790 --> 06:36.940
and this will be very useful in the future.

70
06:37.430 --> 06:39.090
And our string here. 

71
06:39.470 --> 06:42.090
But of course we will have probably a lot of CSS here.

72
06:42.110 --> 06:47.040
So it doesn't make sense to write all of it in the second argument here as a string.

73
06:47.300 --> 06:49.170
So let's create a new file.

74
06:50.130 --> 06:57.850
In the lib and let's call it inline.css. And here we will define a string variable that contains all

75
06:57.850 --> 07:04.770
of our CSS styles that we need to add inline. And then we'll import this variable here and add it as second

76
07:04.770 --> 07:05.960
argument.

77
07:06.070 --> 07:14.310
So let's do that. So let's open PHP and the define a new variable. Let's call it $inline_styles.

78
07:20.000 --> 07:20.860
And let's add some CSS.

79
07:21.190 --> 07:27.530
So we need to change all the A tags to our accent color from the Options page. So.

80
07:32.710 --> 07:36.580
And in case you don't know if you use a double quote here in a string

81
07:36.590 --> 07:43.940
you can use PHP variables like that instead of, you know, concatenating using the dot and stuff

82
07:43.940 --> 07:45.360
like that.

83
07:45.380 --> 07:52.110
So let's define a $accent_color variable that we will get from the options.

84
07:52.280 --> 07:53.240
So "get_theme_mod()".

85
07:55.990 --> 08:06.490
And a name which is this one, and as the default value is this color here.

86
08:10.650 --> 08:16.920
But of course this is a value from the database so we should sanitize it or escape it before using it.

87
08:16.920 --> 08:25.020
So let's use the same function that we used in the Customizer.

88
08:25.490 --> 08:32.600
So we now defined a variable here with the CSS string. And we need to make it available here. So we can

89
08:32.600 --> 08:39.650
use PHP's include() function. And include() needs an absolute path.

90
08:39.680 --> 08:43.800
So you can use "get_template_directory()" without "uri".

91
08:44.420 --> 08:59.190
And then our path which is "/lib/". And "inline-css.php". And now this variable will be available and we can

92
08:59.190 --> 09:01.950
post it as a second argument.

93
09:03.430 --> 09:04.630
So let's see now.

94
09:07.960 --> 09:10.920
And as you can see the link color already changed.

95
09:10.960 --> 09:12.830
So let's try and change it.

96
09:15.650 --> 09:22.110
And as you can see the link colors change and any CSS we will add in this file will be applied to.

97
09:22.110 --> 09:24.000
So that's great.

98
09:24.000 --> 09:28.430
So let's add some more styles to this file. So let's see what else we can add.

99
09:28.440 --> 09:32.940
We have the focus ring and the focus ring is the,

100
09:36.270 --> 09:37.870
it's an outline color.

101
09:38.280 --> 09:42.510
So let's try and add some style for this one.

102
09:42.630 --> 09:44.430
So let's go to the inline-css.

103
09:44.460 --> 09:56.770
And add one more selector here ":focus". And then this time it'll be the same but "outline-color".

104
10:00.890 --> 10:01.910
So let's see now.

105
10:08.710 --> 10:12.310
And as you can see the outline color changed.

106
10:12.640 --> 10:17.320
And of course as we change it it will reflect on the Customizer.

107
10:17.320 --> 10:19.080
We also have this border color.

108
10:22.060 --> 10:34.360
So let's save this and add it here. And this will be "border-left-color" 

109
10:37.330 --> 10:40.300
and it will be, it will take the $accent_colour.

110
10:42.010 --> 10:46.120
And we have also some backgrounds like the button.

111
10:46.130 --> 10:49.820
Button and input submit.

112
10:50.040 --> 10:56.860
So if you have a large template this will be a kind of a boring process but it's worth it. And this will

113
10:56.860 --> 10:57.670
"background-color".

114
11:01.320 --> 11:07.060
So we don't have to do all of them so let's try these.

115
11:07.130 --> 11:12.400
And as you can see we have our color in all the selectors. So let's do these as well.

116
11:12.810 --> 11:15.940
And this will be, let's add class

117
11:15.970 --> 11:16.700
"open" here.

118
11:22.480 --> 11:23.200
And

119
11:26.350 --> 11:29.090
let's hover on the LI.

120
11:29.280 --> 11:32.100
And this will be it.

121
11:32.250 --> 11:33.980
So let's add this one to the background.

122
11:47.020 --> 11:50.820
And fine. So you can do some improvements to this.

123
11:50.830 --> 11:54.260
So right now the whole iframe will refresh if we change the color.

124
11:54.310 --> 11:59.680
So let's figure out a way to do this as fast as possible without refreshing the whole iframe.