WEBVTT

0
00:02.910 --> 00:10.070
So we mentioned custom post types a lot of times during this course. Let's now create custom post types.

1
00:10.250 --> 00:18.200
Just to remind you, in WordPress by default we have some post types like the post and the media and pages. And

2
00:18.200 --> 00:27.050
they are all saved in the same table in the database so here we have the our database and the posts

3
00:27.140 --> 00:33.340
table. And they're just differentiated by a column here called "post_type".

4
00:33.360 --> 00:38.850
So we have post and we've page and we have attachment for images and stuff like that.

5
00:38.880 --> 00:46.050
So let's say now we need to create a new custom post type. Let's say we need to create a portfolio. So a user can

6
00:46.050 --> 00:48.330
add portfolio items.

7
00:48.330 --> 00:55.020
So what we will do is we will add another item here in addition to post and pages we will add portfolio.

8
00:55.290 --> 01:00.850
Also when you create a post you can add categories and tags, right?

9
01:01.120 --> 01:05.620
So let's edit any post.

10
01:05.750 --> 01:09.400
So we have here categories and categories can be hierarchical.

11
01:09.520 --> 01:13.250
They can have, you know, categories and subcategories and so on.

12
01:13.570 --> 01:15.330
And you also have tags. Tags however 

13
01:15.350 --> 01:18.010
can only have one level.

14
01:18.160 --> 01:21.540
There is no hierarchy in tags.

15
01:21.730 --> 01:27.700
So we need to do the same thing in our custom post type. For each portfolio item we need to create

16
01:28.060 --> 01:35.530
2 taxonomies. So categories and tags are called taxonomies. And taxonomies are things that you use to classify

17
01:35.950 --> 01:37.550
your post.

18
01:37.730 --> 01:42.780
So here we have the category taxonomy and tag taxonomy. In the portfolio item we need to create also

19
01:43.060 --> 01:47.640
custom taxonomies. We need to create a project type.

20
01:47.810 --> 01:53.280
So this will be the type of the portfolio item in our website, video and so on.

21
01:53.540 --> 01:55.460
And this will be hierarchical.

22
01:55.670 --> 01:56.850
It will have this UI.

23
01:56.930 --> 02:05.310
And it can have parents and children. And we will also create a skills taxonomy. And this will be like

24
02:05.310 --> 02:12.590
the tags no hierarchy, just one level, tags and subtags and so on. And the skills can be,

25
02:12.680 --> 02:18.090
you know, the skills used for this project like, maybe HTML, CSS, Photoshop and stuff like that.

26
02:19.410 --> 02:27.300
So WordPress provides functions to register custom post types and custom taxonomies. But let's do that in

27
02:27.300 --> 02:28.300
the next lecture.

28
02:28.320 --> 02:34.080
And therefore this lecture let's create a plugin where we will register our post types and taxonomies.

29
02:34.410 --> 02:39.690
So custom post types are also one of these things that you have to register in plugins and not in

30
02:39.690 --> 02:40.930
your theme.

31
02:40.980 --> 02:51.590
So let's go to our folder and the plugins. And let's copy the maybe the shortcodes.

32
02:56.200 --> 03:08.850
And let's call this one "post-types". And let's go ahead to our text editor and let's add the new folder to

33
03:08.880 --> 03:09.570
the workspace.

34
03:13.040 --> 03:20.020
So post-types and let's modify the stuff in the package.json.

35
03:20.040 --> 03:31.970
So let's call this one "post_types" and avoid using "-" in this name because

36
03:32.600 --> 03:39.620
we use this prefix in functions names and functions names cannot contain "-", right? So always use

37
03:39.680 --> 03:46.710
"_" instead. And in the gulpfile in this plugin we will not have any CSS or javascript.

38
03:46.720 --> 03:52.430
We will just register post-types. So we won't have to do anything in the gulpfile.

39
03:52.880 --> 03:59.000
You can maybe remove the CSS and JavaScript tasks. But let's keep them for now.

40
03:59.390 --> 04:07.590
And what we have to do next is we have to go to the includes. And let's remove the files

41
04:07.620 --> 04:08.390
that we don't need.

42
04:15.700 --> 04:30.410
And in index.php let's also remove all of that stuff. And let's modify this to "Custom Post Types". And

43
04:30.590 --> 04:38.100
let's create some files, new files in includes. And we'll create a single file for each thing that we will

44
04:38.180 --> 04:38.590
register.

45
04:38.600 --> 04:56.770
So we will register a portfolio-post-type.php and we will also register a project-type-taxonomy, let's call it

46
04:57.030 --> 05:02.350
project-type-tax.php and finally a skills taxonomy.

47
05:07.210 --> 05:13.390
And let's finally include these files here and in the next lecture we'll start populating these files.

48
05:13.450 --> 05:20.970
So include_ones() and "includes/portfolio-post-type.php".

49
05:23.930 --> 05:36.380
And "project-type-tax" and the "skills-tax". And finally we'll have to go into our theme and modify a couple of

50
05:36.380 --> 05:37.390
things, right?

51
05:37.400 --> 05:44.370
We will have to modify the gulpfile and include our new plugin in the "plugins".

52
05:44.510 --> 05:46.100
So let's copy one of these.

53
05:49.730 --> 05:56.040
This one is called "post-types". 

54
05:56.130 --> 06:05.790
And finally we'll have to go to the include-plugins file and we'll have to require another plugin.

55
06:07.240 --> 06:19.650
So this one's gonna be "post types" and "post-types". And also "post-types.zip".

56
06:19.890 --> 06:21.130
So I think that will be it.

57
06:21.150 --> 06:30.240
Let's now go to the website and we should now have any dashboard message that we have a plugin that we

58
06:30.240 --> 06:37.900
need to activate. So let's activate it. And let's do one final thing.

59
06:38.420 --> 06:40.180
Let's try and build our plugin.

60
06:40.700 --> 06:47.600
So in a new tab I'm gonna change to my plugin and run "npm run

61
06:47.950 --> 06:48.390
bundle".

62
06:53.920 --> 06:55.140
All right we have an error.

63
06:57.070 --> 07:03.370
So I think we need to clear the CSS and the JavaScript files.

64
07:03.370 --> 07:07.230
So here we import some files that do not exist anymore.

65
07:07.270 --> 07:12.940
So let's delete this whole assets folder, we won't need that

66
07:15.780 --> 07:19.340
and let's run build again.

67
07:24.160 --> 07:35.010
And also we'll have to remove the in the gulpfile in the plugin not in the theme. Let's also remove the styles and

68
07:35.010 --> 07:42.230
scripts and the images from the "build" and the "dev" tasks. We won't need these anymore.

69
07:44.350 --> 07:45.010
And

70
07:47.710 --> 07:55.850
now it's done. Let's go to the packaged. And we have some old files here.

71
07:58.630 --> 08:03.820
So an issue here as you can see the file will be called firsttheme-post_types

72
08:03.880 --> 08:07.610
because that's what we put in the package.json.

73
08:07.760 --> 08:16.130
And here we mentioned that the plugins path is "post-types" so you can either change this to "_".

74
08:16.630 --> 08:19.920
But if you want to keep consistent with the other plugins

75
08:20.120 --> 08:29.710
we can modify the gulpfile in the plugin and in the "compress" task when we name our plugin.

76
08:29.760 --> 08:37.710
So in the "zip" task we can, the info.name which will contain post_plugin we can replace the

77
08:37.710 --> 08:43.040
"_" with a "-".

78
08:43.070 --> 08:51.710
So let's try and build now.

79
08:51.920 --> 08:56.880
And as you can see you have firsttheme-post-types. So 

80
08:56.970 --> 08:58.600
that was a quick note.

81
08:58.680 --> 09:03.900
Let's in the next lecture start registering our custom post types and custom taxonomies.