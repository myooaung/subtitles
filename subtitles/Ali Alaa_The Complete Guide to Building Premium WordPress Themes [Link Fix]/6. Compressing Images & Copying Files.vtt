WEBVTT

0
00:00.080 --> 00:02.880
[music]

1
00:03.180 --> 00:09.720
So let's now create a task that will whenever we add an image to the images folder in the source folder,

2
00:10.070 --> 00:18.000
it will get minified and then added to the images folder in the distribution folder.

3
00:18.000 --> 00:20.490
So let's install a new package.

4
00:20.850 --> 00:23.290
It's called "gulp-imagemin".

5
00:32.690 --> 00:34.100
So I'm gonna install it.

6
00:35.980 --> 00:38.280
Make sure you are in the right directory.

7
00:44.840 --> 00:45.540
So after it's done

8
00:45.610 --> 00:57.990
I'm gonna go ahead and import it in the gulpfile. So "import imagemin from 'gulp-imagemin'".

9
01:02.770 --> 01:04.410
And then let's create a new task.

10
01:04.620 --> 01:12.710
Or let's put the source and destination path for the images task here first.

11
01:12.850 --> 01:13.960
So the source will be

12
01:19.950 --> 01:25.980
"src/assets/images".

13
01:25.980 --> 01:31.410
And then we want to detect all the images inside this folder, not just one image like we did for the 

14
01:31.410 --> 01:33.210
the SASS files.

15
01:33.390 --> 01:39.440
So to do that we can use the * thing and this will

16
01:42.420 --> 01:52.950
match all the files and subfiles with the extensions between the { }. 

17
01:53.090 --> 01:57.920
So you can add whatever image extensions you want to minify.

18
02:03.800 --> 02:12.810
And then the destination is gonna be "dist/assets/images".

19
02:16.730 --> 02:18.370
So let's create the task now.

20
02:21.260 --> 02:31.680
"export const ", let's call it  "images". And then create an arrow function and then we'll return the gulp

21
02:31.790 --> 02:32.840
no stream.

22
02:32.910 --> 02:34.680
So "gulp.src"

23
02:38.860 --> 02:41.830
I think I mistyped "return".

24
02:42.770 --> 02:47.570
And then "paths.images.src".

25
02:50.490 --> 02:53.100
And then we'll pipe the imagemin plugin.

26
02:57.500 --> 03:00.110
We can also do this only for production.

27
03:00.110 --> 03:02.260
So let's use the "gulpif()"

28
03:07.630 --> 03:11.730
if PRODUCTION run the imagemin().

29
03:16.050 --> 03:18.700
And then save it to destination folder.

30
03:25.300 --> 03:29.460
So "paths.images.dest".

31
03:34.760 --> 03:36.680
So that it. Let's try it out now.

32
03:39.590 --> 03:50.690
So I have an image here. In my desktop. So I'm gonna copy it in the source folder,

33
03:50.810 --> 03:51.740
the assets,

34
03:51.850 --> 03:52.580
and the images.

35
03:57.930 --> 04:00.190
And then run "gulp images".

36
04:08.820 --> 04:10.700
And let's go to the dist folder.

37
04:13.500 --> 04:15.050
And the assets/images.

38
04:15.180 --> 04:18.270
And here we have the image.

39
04:18.370 --> 04:23.050
Now if you run the the task with the production flag.

40
04:26.580 --> 04:29.140
So the same as it is just a bit small to it.

41
04:29.190 --> 04:30.750
It can't be minified so I get,

42
04:30.840 --> 04:32.700
I got a larger image.

43
04:33.220 --> 04:38.670
So let's try it out. Let's put in the source and then images

44
04:42.740 --> 04:44.150
And let's go to the dist folder

45
04:47.460 --> 04:53.980
and run the command again with the production flag. So as you can see here

46
04:54.230 --> 04:58.890
"Minified 1 image by 1.8%". Great.

47
04:58.900 --> 05:01.210
So let's see what we can do next.

48
05:01.210 --> 05:08.560
So what if we have the we want to add something to the assets folder in the source but we don't really want

49
05:08.560 --> 05:10.030
to run any task on it.

50
05:10.030 --> 05:17.700
We just wanted to copy it. Like for example we can add a font folder here and we want just to copy

51
05:17.700 --> 05:19.910
it into dist folder.

52
05:19.980 --> 05:22.800
So let's create a task for that.

53
05:22.800 --> 05:29.310
And this one will not require any plugins. I'll just make a new key here.

54
05:29.320 --> 05:30.780
Let's call it "other" 

55
05:36.160 --> 05:38.190
and source for it will be an array.

56
05:41.290 --> 05:53.340
So we need to match all files and folders in the assets directory in the source folder, except the ones that

57
05:53.340 --> 05:55.700
we run tasks on.

58
05:55.710 --> 06:05.940
So the "!" here will exclude these folders. So I want to exclude assets and then we can use the { }

59
06:05.940 --> 06:11.430
here to type multiple folders inside the assets directory. So the "images"

60
06:13.950 --> 06:21.410
and the "js" and the "scss".

61
06:21.780 --> 06:23.650
And then we'll have to do the same thing.

62
06:23.970 --> 06:30.780
But the same for any files and folders inside these directories.

63
06:31.840 --> 06:37.240
So what we've done here, we want to copy all the files inside the assets except the ones that we

64
06:37.240 --> 06:45.400
run tasks on images, js and scss folder and the files and folders inside of them. We don't need

65
06:45.400 --> 06:46.940
to copy these as well.

66
06:47.380 --> 06:55.820
So let's write the task now. And I'm gonna call it "copy".

67
06:55.910 --> 06:56.320
Sorry.

68
07:02.760 --> 07:06.690
And what we have to do is

69
07:06.690 --> 07:09.880
just "gulp.src

70
07:13.060 --> 07:20.630
(paths.other.src)" and I think we forgot to.

71
07:20.880 --> 07:23.710
Yeah we forgot to type the destination.

72
07:24.340 --> 07:34.940
So the destination will be just the assets folder.

73
07:34.990 --> 07:45.760
So anything that matches the other source paths. We'll just pipe it and save it or copy it rather to the 

74
07:45.770 --> 07:57.640
assets folder which is "paths.other.dest". And that's it. So let's try this.

75
07:58.430 --> 08:02.380
We're inside the source folder now.

76
08:04.290 --> 08:09.510
And the "assets". And let's say let's use one of the images. So let's copy and paste this image.

77
08:09.540 --> 08:14.440
But outside the images folder. So before they copy task 

78
08:14.540 --> 08:17.540
nothing should happen. But after running to copy task

79
08:20.730 --> 08:21.600
it should appear here.

80
08:21.600 --> 08:23.640
So let's try this out.

81
08:23.650 --> 08:25.010
Let's run "gulp copy".

82
08:29.130 --> 08:33.400
And we've an error "path is not defined", ok.

83
08:41.420 --> 08:42.210
Another error.

84
08:45.460 --> 08:47.040
Ok, I'm sorry I should type here

85
08:47.120 --> 08:47.760
"gulp

86
08:47.780 --> 08:48.380
.dest".

87
08:53.570 --> 08:54.540
And should work.

88
08:56.370 --> 08:58.190
And it didn't work.

89
08:58.200 --> 09:03.900
Must have.

90
09:03.900 --> 09:04.670
All right.

91
09:04.750 --> 09:06.830
I mistyped the destination folder.

92
09:06.910 --> 09:08.690
Sorry about that.

93
09:09.430 --> 09:10.330
And let's try it again

94
09:14.700 --> 09:16.060
And we have our image

95
09:16.090 --> 09:18.130
copied from

96
09:18.190 --> 09:21.170
the source folder to the dest folder.

97
09:21.930 --> 09:27.630
And that would apply to any folder or anything that you copy inside the assets folder except the images and

98
09:27.690 --> 09:29.410
css and the js folder that 

99
09:29.410 --> 09:37.170
we'll create probably in the next lecture. I just have one problem now. If we, in the source folder, decided

100
09:37.170 --> 09:38.220
to delete an image

101
09:41.290 --> 09:44.380
or delete a folder or delete anything inside the assets.

102
09:44.520 --> 09:46.940
It won't get deleted in the dest folder.

103
09:49.720 --> 09:52.960
So let's try tackle this in the next section.