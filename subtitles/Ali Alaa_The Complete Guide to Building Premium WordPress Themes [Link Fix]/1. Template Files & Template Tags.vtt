WEBVTT

0
00:03.810 --> 00:06.430
So in the previous section we installed WordPress.

1
00:06.930 --> 00:12.900
And then we added some plugins and some dummy data. During the course we'll use these plugins and these

2
00:13.260 --> 00:15.520
dummy content we imported.

3
00:15.750 --> 00:19.630
But for now let's discuss some important aspects about WordPress.

4
00:19.980 --> 00:23.460
And these are templates, the loop and functions.

5
00:23.460 --> 00:29.790
So the word template can be used in different contexts in WordPress. So it can refer to template files

6
00:30.330 --> 00:36.690
which are files in your theme that construct the markup for your WordPress pages. And we also have template

7
00:36.690 --> 00:43.200
tags which are functions that are used to pull another file or some data from the database. And template

8
00:43.200 --> 00:49.970
hierarchy which refers to the logic that WordPress uses in order to decide which template file to use

9
00:50.100 --> 00:52.430
depending on your requested URL.

10
00:52.800 --> 00:59.200
And finally we have page templates. And we will discuss this later in the course.

11
00:59.240 --> 01:06.650
So as I mentioned before index.php is the only template required for a WordPress theme. And we'll see why

12
01:06.650 --> 01:08.070
in a moment.

13
01:08.120 --> 01:13.280
So templates can be embedded in other templates and that's to either organize your code into smaller

14
01:13.280 --> 01:18.630
parts or when you have pieces of code that will be used in multiple templates. These kinds of templates

15
01:18.630 --> 01:20.980
are called template partials.

16
01:21.350 --> 01:29.100
So for example you can have a header template and the footer template and a sidebar. And these template will

17
01:29.100 --> 01:31.680
be used in multiple places in the theme.

18
01:32.070 --> 01:38.640
And so to pull these templates in the main template we use template tags. We have some predefined template

19
01:38.640 --> 01:47.040
tags like get_header() which will pull a file called header.php and get_footer() which will pull a file

20
01:47.040 --> 01:49.560
called footer.php.

21
01:49.590 --> 01:51.870
And of course get_sidebar().

22
01:52.050 --> 01:58.020
There are also functions like get_search_form() which will get a search form template. And you can actually

23
01:58.020 --> 02:04.230
create your own templates and include them using a function called get_template_part(). And we'll use this

24
02:04.230 --> 02:09.360
function a lot throughout this course. So let's see how that will look like in code.

25
02:09.360 --> 02:15.400
So first make sure you have your MAMP server started and then open your browser on the URL of your project.

26
02:15.840 --> 02:19.350
So right now we have our hardcoded dummy text here.

27
02:19.650 --> 02:21.600
So let's try and make this more dynamic.

28
02:21.870 --> 02:29.400
So the HTML tag and the HEAD tag and the BODY tag and the closing BODY and HTML tags will be included

29
02:29.430 --> 02:31.530
throughout the whole website, right?

30
02:31.610 --> 02:37.270
So let's now create two template parts for the header and the folder and include them in the index.php.

31
02:37.510 --> 02:43.710
So now I'm gonna cut the upper part of the index.php and put it in header.php. And let's go back

32
02:43.710 --> 02:49.460
now to index.php and include the header file using the template tag get_header().

33
02:52.310 --> 02:53.840
And let's do the same thing

34
02:53.840 --> 03:00.380
now for the footer. So let's call the function or the template tag get_footer()  to get a file called footer.php

35
03:00.420 --> 03:03.230
that we will create in a moment.

36
03:03.290 --> 03:06.260
So let's now create the footer.php file.

37
03:11.860 --> 03:15.160
And then put the closing tags.

38
03:15.220 --> 03:16.410
One quick note here.

39
03:16.600 --> 03:23.110
If your theme for example has multiple headers maybe different styles different markup, you can create

40
03:23.140 --> 03:29.440
another file in your theme header-something and then in the get_header() function it accepts an argument

41
03:29.860 --> 03:31.520
which will be this something.

42
03:31.750 --> 03:38.620
So for example in index.php if we added a parameter "vertical" to the get_header() function then we can create

43
03:38.620 --> 03:46.340
a header-vertical.php file in our theme. And that will be used instead of the header.php. Another

44
03:46.340 --> 03:52.320
thing you may have noticed that my text editor auto completes the WordPress functions. And that's because I

45
03:52.320 --> 03:56.470
am using a Visual Studio  Code extension for that.

46
03:56.490 --> 04:02.910
So if you're not using Visual Studio Code, you'll probably find something similar for your text editor.

47
04:02.910 --> 04:05.240
So I really recommend using one of these.

48
04:05.400 --> 04:06.910
It will be quite helpful.

49
04:07.230 --> 04:09.150
So let's go back now to the browser

50
04:09.280 --> 04:12.280
and make sure what we've done is actually working.

51
04:12.380 --> 04:18.420
So I'm gonna refresh and right click and View Page Source. And as you can see we still have our header and

52
04:18.420 --> 04:19.370
footer.

53
04:19.590 --> 04:24.560
So we've reached the good point now in our theme. However we still have a problem in our header.

54
04:25.020 --> 04:30.030
We have some hardcoded data like the language attributes and the language can actually be changed from

55
04:30.030 --> 04:36.240
the WordPress backend. So WordPress provides  a function called language_attributes() and this function will add

56
04:36.420 --> 04:39.410
the language attribute to the HTML tag dynamically.

57
04:41.780 --> 04:46.090
Another dynamic attribute in the header is the charset.

58
04:46.190 --> 04:49.210
A charset can also be changed from the WordPress backend.

59
04:49.260 --> 04:55.040
And for this we use another template called bloginfo(). bloginfo() will get some information about your

60
04:55.040 --> 04:56.020
blog.

61
04:56.540 --> 04:57.990
So inside PHP tags

62
04:58.000 --> 05:00.380
let's now call bloginfo().

63
05:00.800 --> 05:06.590
And then it accepts a parameter and this parameter is the information that we need to get about a blog.

64
05:06.590 --> 05:15.970
So in our case it's "charset". Finally we have the TITLE tag. The TITLE tag also needs to be dynamic.

65
05:16.260 --> 05:21.140
And for this one we use a function called wp_head(). The wp_head() function

66
05:21.140 --> 05:27.150
does not only add the TITLE tag, it adds actually anything that you want to add inside the HEAD tag.

67
05:27.310 --> 05:32.620
So if you for example want to add a STYLESHEET tag in the HEAD tag you won't just hardcode it in the

68
05:32.770 --> 05:40.410
HEAD tag. You'll somehow use the wp_head() function to inject your STYLESHEET tag in the HEAD tag.

69
05:40.510 --> 05:41.980
And we'll see how to do that later.

70
05:42.280 --> 05:45.190
But for now let's go to the footer.php.

71
05:45.520 --> 05:51.910
And likewise we have a function called wp_footer(). And this function will also be used to add anything

72
05:51.910 --> 05:56.340
you need to add in the footer. So let's say you need to add a SCRIPT tag in the footer,

73
05:56.530 --> 06:03.490
you will also not just hardcode the SCRIPT tag in the footer.php but you'll somehow use wp_footer() function.

74
06:03.490 --> 06:09.360
So let's now go back to the browser and view the source and let's see what these functions have done.

75
06:10.690 --> 06:16.210
So as you can see the wp_head() and wp_footer() functions added some styles and some scripts

76
06:16.390 --> 06:17.630
in the header and in the footer.

77
06:17.710 --> 06:23.240
So basically WordPress used wp_head() and wp_footer() functions to load some styles

78
06:23.240 --> 06:25.980
and scripts that it needs to run your website.

79
06:26.590 --> 06:31.810
And as we progress in this course we will see how to use these functions to add our own styles and scripts

80
06:31.810 --> 06:32.480
as well.

81
06:33.930 --> 06:40.300
So we've seen how to use template tags like get_header() and get_footer() to pull another file into our template.

82
06:40.560 --> 06:46.120
We also used the bloginfo() which is used to pull some information about your blog from the database and

83
06:46.120 --> 06:49.250
not just pull another file like get_header() and get_footer().

84
06:49.370 --> 06:55.230
You also have other examples of template tags that get information from the database like the title and

85
06:55.230 --> 06:56.040
the content.

86
06:56.130 --> 06:59.900
And these ones are used to get the title and the content of a blog post.

87
06:59.910 --> 07:07.140
So imagine we have some posts here in index.php. We can use these tags to get information about each post.

88
07:07.380 --> 07:12.060
But how do these tags know which post title and content to get?

89
07:12.120 --> 07:17.240
They must be placed inside the loop. So let's see what the loop means in the next lecture.