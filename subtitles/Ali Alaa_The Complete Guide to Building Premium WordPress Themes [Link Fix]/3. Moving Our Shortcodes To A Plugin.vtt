WEBVTT

0
00:03.210 --> 00:08.700
So in the last couple of lectures we created a couple of shortcodes. BÄ±t then we mention that shortcodes

1
00:08.710 --> 00:13.760
should also be in a separate plugin and you should not define any shortcode in your theme.

2
00:13.770 --> 00:19.590
So let's create a new plugin for shortcodes like we did for a custom field. But this time it will be a lot

3
00:19.590 --> 00:22.020
easier because we've done before.

4
00:22.590 --> 00:30.600
So let's go to the plugins folder. Let's actually copy and paste the metaboxes plugin folder. And

5
00:30.600 --> 00:35.130
it will take some time because we have the node_modules.

6
00:35.300 --> 00:37.310
Sorry, we have the node_modules

7
00:40.070 --> 00:42.370
folder which is a bit large.

8
00:42.740 --> 00:47.580
So now we have it. Let's call it "_themename-shortcodes"

9
00:51.100 --> 00:52.800
now let's go to Visual Studio Code

10
00:52.810 --> 00:55.360
and let's add this folder in our workspace.

11
00:59.970 --> 01:09.570
So plugins and shortcodes. And leti's go to package.json  and here we'll have to change the name of the

12
01:09.620 --> 01:10.000
plugin.

13
01:10.020 --> 01:18.600
So "shortcodes" and you don't have to change anything else. In the gulpfile

14
01:18.730 --> 01:28.540
we will listen the styles path change this to "bundle". In shortcodes we will add styles for the HTML components

15
01:28.630 --> 01:30.200
that we create.

16
01:30.250 --> 01:35.530
So we'll have styles that we have to be enqueued in the frontend and we probably we won't have admin styles

17
01:35.560 --> 01:45.260
So let's create a bundle file. And same also for the "scripts".

18
01:45.860 --> 01:52.010
And I think that's it. Let's save. Let's go to the source folder and

19
01:55.060 --> 01:56.110
rename this to bundle.

20
02:00.550 --> 02:01.510
And this.

21
02:06.340 --> 02:10.090
And then in includes let's remove this file,

22
02:13.110 --> 02:22.590
the metaboxes file. And in enqueue scripts we will have to enqueue in the frontend not in the admin, so let's

23
02:23.040 --> 02:24.330
change the action to 

24
02:24.330 --> 02:30.390
"wp_enqueue_scripts". And we can also remove the "admin"  from the function name, here

25
02:31.000 --> 02:39.850
and here. We also don't need this if condition. And let's remove "admin" from the handle and change this to

26
02:39.870 --> 02:46.860
"bundle". And same for the "css".

27
02:46.940 --> 02:52.910
And I think that will do it. And we'll see you now when we try it.

28
02:53.030 --> 02:55.860
We also have the index.php.

29
02:56.240 --> 03:03.140
Maybe you need to change this to the "Shortcodes" and remove the "metaboxes".

30
03:06.090 --> 03:07.380
So I think that will be fine for now.

31
03:07.380 --> 03:11.470
Let's go back to the theme and we'll have to change some stuff here as well.

32
03:11.490 --> 03:12.540
Right?

33
03:12.830 --> 03:19.410
We'll have to go to the gulpfile and add the new plugin here.

34
03:19.530 --> 03:24.530
So when we bundle our theme the plugins will be bundled automatically.

35
03:24.540 --> 03:26.960
So "_themename-shortcodes".

36
03:30.920 --> 03:39.290
Also we need to go to the lib and include plugins. And we need to include this plugin as well.

37
03:39.500 --> 03:47.050
So let's copy this and add another one. And this one will be "shortcodes".

38
03:52.690 --> 04:01.990
Well let's go back now to the wp-admim. And now we have the message that we have a plugin that needs to

39
04:01.990 --> 04:03.220
be activated.

40
04:03.760 --> 04:04.540
So let's do that.

41
04:08.400 --> 04:10.910
And now we're having our plugin activated.

42
04:11.220 --> 04:20.150
So let's now copy the code the shortcodes code from the theme to our plugin. In functions.php.

43
04:20.300 --> 04:27.600
So before doing that let's create a folder in the includes, in our plugin all right not in the theme.

44
04:30.190 --> 04:31.860
And let's call it shortcodes.

45
04:32.020 --> 04:39.670
We need to do some folders just for organization. And inside shortcodes we'll create another folder. And this one will be

46
04:39.670 --> 04:46.840
called button. And this folder will contain all the files for the button. So we can have a PHP file that

47
04:46.840 --> 04:49.060
defines the shortcode.

48
04:49.110 --> 04:57.230
Let's call it button.php and you will probably also have some styles for this button.

49
04:57.290 --> 04:57.570
Right?

50
04:57.570 --> 05:15.110
So let's create a new file button.scss. Now let's copy the shortcode and let's open PHP and paste. And let's 

51
05:15.110 --> 05:26.030
say your buttons will have a class "_themename_button". And then your button.scss you will style this

52
05:26.310 --> 05:27.100
class

53
05:27.280 --> 05:29.980
So let's say we've a "border-radius" something

54
05:29.990 --> 05:36.530
So what we need to do now is we need to include the button styles in the bundle.scss which is

55
05:36.530 --> 05:37.560
in the source folder.

56
05:37.910 --> 05:43.810
And you also need to include the shortcode function for the button in the index.php.

57
05:43.930 --> 05:50.680
You should now know that any code that you would like to run in your plugin should be included in index

58
05:50.740 --> 05:52.220
index.php.

59
05:52.340 --> 05:58.800
So let's first open a new tab in the terminal and in Windows you can open a new cmd window.

60
06:00.760 --> 06:03.450
And let's change to our plugin.

61
06:04.620 --> 06:07.120
And let's run "npm start".

62
06:09.900 --> 06:14.360
And now we should have ous CSS and JavaScript compiled in the dist folder.

63
06:14.510 --> 06:20.150
So let's now go to the source folder and the bundle.scss.

64
06:20.650 --> 06:24.540
And let's include the styles for the button, right?

65
06:24.960 --> 06:33.090
So we will import and then we are in the source folder and the assets folder and the scss folder,

66
06:33.090 --> 06:42.170
so we need to go up three times and then we need to go to includes,right? And shortcodes

67
06:43.930 --> 06:57.020
and button, button the folder and then button.scss file. So let's save and let's see the dist.

68
06:57.270 --> 07:00.020
And now we have the styles for the button.

69
07:00.100 --> 07:06.540
So great. So let's see how to import the button shortcode function here.

70
07:06.670 --> 07:15.930
We can just simply use include_once() and that will be in includes and shortcodes and buttons or button

71
07:16.060 --> 07:21.000
and then button.php.

72
07:21.230 --> 07:27.590
But when you define shortcode inside of plugins you must add them in an action called init():

73
07:27.710 --> 07:34.560
I think we've used thatbefore. And this action will be called when WordPress is initialized.

74
07:34.620 --> 07:40.630
So because plugins are loaded in an early stage in WordPress, so you have to wait for WordPress to load using the

75
07:40.630 --> 07:43.890
init() function and then define your shortcodes.

76
07:44.350 --> 07:54.820
Let's give it a function and let's call it "_themename__pluginname_init".

77
07:58.180 --> 08:06.740
And then inside this function we can create our shortcodes. So inside this function we will include the

78
08:06.740 --> 08:09.440
code for the shortcode creation.

79
08:09.440 --> 08:23.520
Right? So let's save now. Let's see this page. We now have our shortcode working but it looks like we have a

80
08:23.520 --> 08:31.240
problem with our CSS file and JavaScript. And ok we did not change the "metaboxes" here to "shortcodes"

81
08:31.290 --> 08:42.770
So let's go to enqueue-assets in our plugin and change this to "shortcodes". Let's save now.

82
08:43.810 --> 08:51.120
And now we don't have any errors here. And let's inspect this. And as you can see we have the "border-radius".

83
08:51.250 --> 08:54.520
So I think that's a very good organization for our shortcodes.

84
08:54.550 --> 08:59.050
We have a folder that will contain any files belonging to this shortcode so we can have here

85
08:59.060 --> 09:04.240
also JavaScript files and then we can include these JavaScript files in the bundle.js.

86
09:04.510 --> 09:07.450
And I think we'll have an example where we will have to do that.

87
09:07.990 --> 09:17.840
And whenever we add a folder here we should also include it in the index.php in the init() action.

88
09:18.060 --> 09:19.200
Let's finally

89
09:19.300 --> 09:24.650
go to functions.php in the theme. And let's remove this icon

90
09:24.670 --> 09:25.290
shortcode.

91
09:25.680 --> 09:29.670
I just did it for the nested shortcode example, so let's ignore it for

92
09:29.680 --> 09:35.790
new. And let's in the next lecture create a couple of more shortcodes which should be a little more complicated

93
09:35.970 --> 09:38.130
than the button that we created.

94
09:38.400 --> 09:39.300
So see you in the next lecture.