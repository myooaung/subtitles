WEBVTT

0
00:03.140 --> 00:09.380
So in the last lecture we displayed the comments and the comment form. And we also mentioned that WordPress

1
00:09.390 --> 00:12.190
will generate a markup for the comment.

2
00:12.210 --> 00:13.440
So this may be fine with you.

3
00:13.440 --> 00:18.770
You can just style it. But in some cases maybe you need to change this markup completely.

4
00:18.780 --> 00:21.790
And if that's the case then this lecture is for you.

5
00:21.840 --> 00:23.430
Otherwise it's not.

6
00:23.430 --> 00:25.960
It's not really necessary lecture.

7
00:26.160 --> 00:34.500
So to create our own markup we can go in the wp_list_comments() function and then add another argument or another

8
00:34.500 --> 00:37.260
option. And it's called "callback".

9
00:40.270 --> 00:44.770
And this will be a function that will be responsible for rendering each comment.

10
00:44.770 --> 00:47.770
So let's add a function that we'll create it.

11
00:48.190 --> 00:58.770
So "_themename_" and maybe "comment_callback. Let's go to the lib folder and create a new file. And let's call it comments-callback

12
00:59.250 --> 00:59.840
comments-callback.php.

13
01:02.420 --> 01:04.690
And let's include this file in functions.

14
01:07.910 --> 01:12.500
And then inside this function let's create, inside this file sorry, let's create our function.

15
01:17.320 --> 01:20.990
And let's echo any string now inside this function.

16
01:23.420 --> 01:29.620
And let's go back. And ask you can see all the comments will be this thing that we echoed in this function.

17
01:29.750 --> 01:34.790
So this function now will be responsible for displaying the comment and it will receive three arguments,

18
01:35.750 --> 01:37.150
the $comment object

19
01:37.270 --> 01:44.620
and this is kind a like the $post object contains all the information about the comment. And the $args.

20
01:44.800 --> 01:49.090
And these are the args that we pass to wp_list_comments().

21
01:49.510 --> 01:55.880
So it will contain the "avatar_size" and "reply_text" and all the other default arguments.

22
01:56.120 --> 02:03.800
It will also contain the depth of the current comment being rendered. And we'll need all of these

23
02:04.020 --> 02:09.400
when you are writing this function. So let's close or before doing that let's

24
02:09.540 --> 02:20.200
var_dump(). Let's echo PRE tags and var_dump()  the $comment object just to see what it contains.

25
02:25.190 --> 02:31.080
As you can see for each comment, we will have the comment_ID and the post_ID and the comment_author and

26
02:31.320 --> 02:34.520
of course the date and time and the common_content.

27
02:34.530 --> 02:37.620
We also have if the comment is approved or not.

28
02:37.710 --> 02:42.350
And the comment_type and the comment_parent and so on.

29
02:42.370 --> 02:52.040
So let's now start  outputting our comments. So let's close PHP and then open it. And here we'll 

30
02:52.040 --> 02:53.440
type our HTML.

31
02:53.870 --> 03:01.430
So we have an LI tag. So remember the post_class() function that will output some classes for the post.

32
03:01.460 --> 03:06.370
We have the same thing for the comment and it's called comment_class().

33
03:06.570 --> 03:16.050
So "comment_class()" and here we can also add an array of custom classes. So for my styling I need a class called

34
03:16.050 --> 03:22.350
"c-comment" and I also need if the comment is a child or is a reply to another comment I need

35
03:22.350 --> 03:23.130
to add some class.

36
03:23.130 --> 03:25.930
Otherwise I'll just add the "c-comment".

37
03:26.130 --> 03:33.140
So to check if the comment is a reply o not, we can see if it has a parent, right?

38
03:33.170 --> 03:39.350
So we've just seen the object the $comment object that has the key called "comment_parent" .

39
03:39.360 --> 03:42.190
So if that exists it means that this is a child.

40
03:42.190 --> 03:48.100
So I will add a class "c-comment" with a modifier of child.

41
03:48.520 --> 03:50.490
Otherwise I just add nothing.

42
03:50.850 --> 03:52.940
So let's see.

43
03:53.010 --> 03:58.380
So now we have the UL. And each LI will have the "c-comment" class

44
03:58.430 --> 04:01.070
and the other classes that WordPress will generate.

45
04:01.070 --> 04:08.100
It's important also when you write a custom callback that you don't close the LI. The LI will be closed automatically

46
04:08.100 --> 04:09.150
by WordPress.

47
04:09.360 --> 04:17.010
And that's because when you have a comment that has children or has replies, the replies will also be inside

48
04:17.010 --> 04:17.950
the LI.

49
04:18.020 --> 04:18.930
So WordPress will check that

50
04:18.930 --> 04:26.870
and if the comment has replies it will add the replies and then close the LI. So let's remove this. Great.

51
04:26.880 --> 04:34.570
So let's now create the body of the comment. And let's use an ARTICLE tag for this. And I'm gonna give

52
04:34.570 --> 04:42.510
it a class of "c-comment__body" and then close it.

53
04:42.530 --> 04:49.280
Now we need to echo the avatar for the comment author. Inside PHP let's

54
04:49.420 --> 04:50.180
echo the avatar.

55
04:53.180 --> 04:58.000
So get_avatar() can take a "comment" object. So we'll pass it our $comment object. And it also needs the

56
04:58.000 --> 04:58.650
"size".

57
04:58.690 --> 05:01.740
So let's say 100 pixels.

58
05:01.850 --> 05:05.950
And let's say we need to add a class to the avatar for styling. So we can add it here.

59
05:05.980 --> 05:16.150
It takes an array of args, HTML args. So we can add an array and "class" and then our class which is "c-comment

60
05:16.150 --> 05:20.080
"c-comment__avatar".

61
05:21.400 --> 05:26.880
And for these two arguments let's set them to "false".

62
05:26.970 --> 05:32.880
We'll need to change them. So let's see now.

63
05:33.200 --> 05:34.760
And now we have the avatar.

64
05:35.060 --> 05:37.060
Next also who we need an "Edit" link.

65
05:37.070 --> 05:43.010
So if you're an admin or if you are a user that have the authority to edit a comment. It's a good

66
05:43.010 --> 05:46.030
practice that you put an "Edit" link for each comment here.

67
05:46.460 --> 05:49.550
So to do that we will call a function called

68
05:52.150 --> 05:58.870
edit_comment_link(). And this function will automatically check that if you're a logged in user and you're capable

69
05:58.870 --> 06:02.200
of editing this comment. And it will output the link

70
06:02.350 --> 06:05.110
if so. We won't have to check this by ourselves.

71
06:05.290 --> 06:07.280
So it takes a text and before and after.

72
06:07.390 --> 06:14.350
So we can echo and we can output an escaped translated text. Let's say "Edit"

73
06:14.680 --> 06:23.760
maybe "Edit Comment" and text domain, "_themename". And now for before and after

74
06:23.790 --> 06:30.950
let's say we need a SPAN and give it a class for styling "c-comment__

75
06:31.040 --> 06:34.160
"c-comment__edit-link".

76
06:34.700 --> 06:39.260
And after you will have to close the SPAN. So let's see.

77
06:42.120 --> 06:48.490
And I forgot the this.

78
06:48.600 --> 06:50.270
So now we have an Edit link.

79
06:50.270 --> 06:55.640
And if you click on it it will take you to Edit Comment page in the wp-admin. 

80
06:55.770 --> 06:58.700
Great.

81
06:58.700 --> 07:05.470
So next we need to display the time. And the time will be wrapped in a link in an A tag.

82
07:05.800 --> 07:11.100
And this A tag will be a link to the comment. And you'll see what a link to the comment mean

83
07:11.510 --> 07:12.020
in a moment.

84
07:12.030 --> 07:20.020
So let's add an A tag and let's give it a class "c-comment__time".

85
07:22.420 --> 07:29.080
And the "href" will be a link to the comments. So let's

86
07:29.350 --> 07:33.350
esc_url(). And the "url" will be, we'll  call a function called get_comment_link().

87
07:34.900 --> 07:39.350
And this function needs the "comment" object. And it also needs the "args",

88
07:39.360 --> 07:47.390
this one. So let's paste it. And we can ignore the rest of the arguments. And then inside of the A tag we

89
07:47.390 --> 07:53.040
can have a TIME tag to display the time. And it takes "datetime" attribute.

90
07:53.270 --> 07:59.060
an this "datetime" attribute needs the time of the comment in certain format. So we have a function called

91
07:59.060 --> 08:05.060
comment_time() and the format for the "datetime" attribute is "c".

92
08:05.440 --> 08:08.080
And finally inside the TIME tag

93
08:08.570 --> 08:14.970
we will output a string for the time. So let's say we need to display, instead of displaying the date,

94
08:14.980 --> 08:21.890
let's display for example one hour ago, one week ago and so on. We haven't done this I think in this template so

95
08:21.970 --> 08:23.360
see how this can be done.

96
08:23.500 --> 08:32.150
So let's open PHP and let's call a function called human_time_difference() or human_time_diff().

97
08:32.310 --> 08:35.250
And this takes two times and it will display a string

98
08:35.410 --> 08:40.790
that will be the difference between these two times in a human readable way,

99
08:41.200 --> 08:43.210
like one week or two weeks and so on.

100
08:43.330 --> 08:49.870
So what we need to give it is, we need to give it the time of the comments. So get_comment_time and the 

101
08:50.020 --> 09:00.180
human_time_diff() function needs the due times to be a timestamp. So you can use "U" here for a timestamp and we need the current time

102
09:00.390 --> 09:08.880
to get the difference between the two times. And we also need it as a timestamp so we can give it

103
09:08.880 --> 09:17.330
"U". And let's see. I think we need to echo this.

104
09:17.450 --> 09:23.670
And as you can see 6 years, 5 years but we need to add the "ago" text, right?

105
09:23.730 --> 09:26.250
So you should know how to do this now.

106
09:26.410 --> 09:30.800
But just to remind you. You can just think that ok, I'm gonna append "ago".

107
09:30.990 --> 09:34.880
But that's a wrong approach even if you escape and translate "ago".

108
09:34.920 --> 09:40.950
You need to use printf() for that because maybe in another language the order of the words will be

109
09:40.950 --> 09:41.810
different.

110
09:41.810 --> 09:48.090
So you need to use printf() and use placeholders and a translator will reorder the placeholders depending on

111
09:48.090 --> 09:56.080
the language. So "printf( esc_html__() )". 

112
09:56.110 --> 09:58.400
And the "text" will a placeholder.

113
09:58.630 --> 10:01.780
And then "ago" and the text domain.

114
10:05.340 --> 10:16.050
And the second argument of the printf() will be this.

115
10:16.420 --> 10:24.080
I think this should be fine. Let's see now. And as you can see 6 years ago, 5 years ago and so on.

116
10:24.610 --> 10:32.290
So what is the link that get_comment_link() will return? If you hover over here and look at the bottom left

117
10:32.290 --> 10:36.700
of the screen, you'll find that it will take you to the same URL of the post.

118
10:36.760 --> 10:41.200
But then it adds a "#" and "comment-7".

119
10:41.260 --> 10:43.640
And this is the ID of this comment.

120
10:43.690 --> 10:45.520
So each one will be different.

121
10:45.520 --> 10:53.060
So when you click on this or when you go to this link, so let's copy this. And let's go to it.

122
10:53.860 --> 10:56.070
It's supposed to scroll down to this comment.

123
10:56.150 --> 10:56.910
Ok?

124
10:57.370 --> 11:02.590
And to do that you already know that we should add an ID to the HTML element that we need to scroll 

125
11:02.590 --> 11:06.000
to. So in our case we can scroll to the article.

126
11:06.170 --> 11:10.250
So let's give it an ID. Or maybe maybe you can scroll to the LI.

127
11:10.870 --> 11:15.460
And we'll need another ID for the ARTICLE and you'll see why in a moment.

128
11:15.460 --> 11:24.710
So let's get an ID here and this ID will be "comment-" and then open PHP. And then we can get

129
11:24.710 --> 11:31.900
the ID from the $comment or we can call a function called comment_ID(). And it will display the

130
11:31.900 --> 11:33.380
ID of the current comment.

131
11:33.760 --> 11:34.330
So

132
11:37.460 --> 11:39.580
let's see now, let's inspect a comment.

133
11:40.190 --> 11:42.330
And as you can see "id=comment-7".

134
11:42.500 --> 11:46.900
And if you click on this it will scroll to this comment.

135
11:47.480 --> 11:51.160
Let's next to display the name of the comment author.

136
11:51.400 --> 11:53.730
And we need to do that even before the date.

137
11:54.260 --> 12:06.170
So let's here add a DIV. And let's give it a class "c-comment__author". And

138
12:06.280 --> 12:15.760
I'm also gonna wrap this two in another DIV which is called "comment_content". And that's just for styling

139
12:15.990 --> 12:18.760
I need the avatar to be in a separate DIV

140
12:18.800 --> 12:19.980
and the other content.

141
12:20.000 --> 12:22.850
So I'm gonna call it "content" and close it

142
12:27.630 --> 12:32.940
And it will contain any other content for the post except the author and the edit link.

143
12:32.940 --> 12:42.400
All right so let's display the author and this is by easily calling a function called get_comment_author_link().

144
12:42.600 --> 12:52.640
And it takes the $comment object or the comment ID but we have the $comment object. so this will display a link

145
12:52.740 --> 12:57.870
for the author if the author have a website. And in the section we saw that

146
12:58.010 --> 13:00.680
any users can add a website in his profile.

147
13:00.910 --> 13:07.400
So this is what this link will be. And it will display the name of the author. As you can see we've a link here.

148
13:07.490 --> 13:13.520
This user did not leave a link so there is no link and so on.

149
13:13.540 --> 13:18.850
So I think this lecture is long enough now. So let's carry on in the next lecture and then display the

150
13:18.850 --> 13:20.050
rest of the comment.