WEBVTT

0
00:03.870 --> 00:12.840
So in the last lecture we imported this post from the Gutenberg plugin. And this post has some content. And it uses some

1
00:12.840 --> 00:18.600
of the Gutenberg features. So Gutenberg is a block based Post editor

2
00:19.130 --> 00:27.100
where you can add blocks and here we have some blocks. And we can also drag and drop these blocks like so.

3
00:27.690 --> 00:31.600
So this post was made to showcase some of these Gutenberg blocks.

4
00:31.610 --> 00:40.010
So we have for example, the gallery block and we have some images that takes a wider width than the content.

5
00:40.240 --> 00:42.950
And we have videos and stuff like that.

6
00:43.230 --> 00:47.360
Blockquotes and the buttons.

7
00:47.550 --> 00:56.340
So let's view this post in the frontend. And let's take a look and you'll find that WordPress already styled

8
00:56.580 --> 01:01.960
some of the stuff like the gallery. It's already styled like how it's styled in the editor.

9
01:05.490 --> 01:08.670
But we also have some stuff that looks different.

10
01:08.680 --> 01:08.960
Right?

11
01:08.970 --> 01:16.640
So for example we have the image that takes wider width than the content.

12
01:17.910 --> 01:22.610
And we also have some blocks here that also take wider width than the content.

13
01:22.810 --> 01:25.490
But unlike this one this takes the full width.

14
01:25.960 --> 01:30.500
This is just a bit wider and same for the video here.

15
01:31.000 --> 01:37.180
And also we have a blockquote here and here. They look a bit different.

16
01:37.180 --> 01:42.650
And one of the reasons Gutenberg was created is to give you as a post editor, when you're creating

17
01:42.650 --> 01:47.700
the post it should give you an idea of how this post to look like in the frontend.

18
01:49.340 --> 01:51.500
So let's try and do that.

19
01:51.660 --> 01:59.150
Let's first tackle the images or the blocks that are aligned a bit wider than the content. Or they just

20
01:59.150 --> 02:02.070
take the full width like this image.

21
02:02.720 --> 02:04.470
So how do we do that?

22
02:04.540 --> 02:12.810
Let's go to theme-support. And this is a feature in Gutenberg that your theme will have to support. So before

23
02:12.840 --> 02:19.870
typing anything here if you take a look at an image block you'll find that you can align left or center

24
02:19.870 --> 02:29.070
or right. But your theme can also decide to add some more alignments. So let's "add_theme_support()" and this feature

25
02:29.070 --> 02:39.310
is called "align-wide". So let's save and let's see what difference this will make.

26
02:39.320 --> 02:46.180
So if you now click on this component. And this is called the cover image component which is an image with

27
02:46.180 --> 02:53.330
some text on top of it. And as you can see now we have two other options: Wide width or Full width.

28
02:53.450 --> 02:56.720
So add_theme_support() added these two options here.

29
02:56.890 --> 03:02.450
But we  still, we don't style these options correctly in the frontend.

30
03:02.970 --> 03:14.510
So what we have now is some classes "alignwide". And  here we will have "alignfull" and all we need

31
03:14.510 --> 03:20.620
to do is in our CSS for the theme we need to style these in order to look something like this,

32
03:20.660 --> 03:21.820
right?

33
03:21.830 --> 03:25.120
So we've already done that in the CSS, in _post.scss.

34
03:25.300 --> 03:30.900
But I just removed it in order to see what it would look like before adding these classes.

35
03:31.040 --> 03:35.410
So I added this classes only for the o-single-post-full.

36
03:35.490 --> 03:40.530
So these classes only be added for the full layout blog post and you'll see why in a moment.

37
03:40.530 --> 03:43.040
So let's uncomment these.

38
03:43.610 --> 03:48.140
So I just added some styles, some negative margins.

39
03:48.200 --> 03:49.510
Let's take a look.

40
03:51.380 --> 03:54.180
So let's take a look first at the "alignfull".

41
03:54.670 --> 04:04.330
So here for example I have this container which is 75rem and also some paddings 0.625 on the left

42
04:04.330 --> 04:11.900
and right. And then inside this container we have our content in the post__inner and this has a maximum

43
04:11.900 --> 04:13.490
width of 50.

44
04:13.640 --> 04:15.520
So we have 75 and 50.

45
04:15.650 --> 04:21.030
So this empty space and this empty space combined will be 25rem.

46
04:21.110 --> 04:23.710
So each one of these sides is 12.5rem.

47
04:23.860 --> 04:29.580
So what I did for the "alignfull" is that I added a negative margin of -12.5 .

48
04:30.080 --> 04:38.250
And also we have the padding. And the maximum width of 75rem which is this full width minus

49
04:38.330 --> 04:45.000
the paddings on the left and right which will be 1.25rem. And that's what made

50
04:45.000 --> 04:47.150
it stretch to the full width

51
04:47.220 --> 04:52.010
as you can see. So of course this CSS styles only concerns

52
04:52.020 --> 04:53.900
my template or my styling.

53
04:53.910 --> 04:59.430
So I don't want to get into more details because probably yours will be different. But I just want to

54
04:59.430 --> 05:02.570
give you an idea of how should you style these.

55
05:03.090 --> 05:09.990
So we have for example the "alignwide" and this should not take the full width but also should be a little

56
05:09.990 --> 05:11.820
bit wider than the content.

57
05:11.820 --> 05:17.640
So we have the text here and this is the main content's width. And "alignwide" should be a little bit wider

58
05:17.700 --> 05:18.760
than this width.

59
05:18.870 --> 05:23.180
So I just added a margin left of -100 pixels on both sides.

60
05:23.640 --> 05:25.960
I also find out for the video.

61
05:27.840 --> 05:33.790
So make the video responsive or take the full width of the container we have here a class called "is-type-video"

62
05:33.910 --> 05:37.140
and that wraps the video iframe.

63
05:37.340 --> 05:40.760
And this also has "alignwide" so it's a bit wider than the content.

64
05:40.760 --> 05:47.030
So to make the video responsive I added some styles for the is-video-type.

65
05:47.090 --> 05:48.300
Right?

66
05:48.530 --> 05:55.550
So if you have "wp-block" of type "embed" and it's a video and these are the classes that Gutenberg

67
05:55.590 --> 05:58.260
gives to your blocks.

68
05:58.270 --> 06:01.910
So I just added these classes for it to make it responsive. So let's save.

69
06:04.760 --> 06:09.740
And now the video will take the width of the container.

70
06:09.840 --> 06:18.270
I also found out for example that this block, the cover image block it needs to take some exercise

71
06:18.390 --> 06:22.600
for the "alignwide" and "alignfull".

72
06:22.820 --> 06:25.560
So I added this style here for example.

73
06:25.770 --> 06:27.450
It needs a "width: auto". 

74
06:28.000 --> 06:32.670
So if we save this it will take the full width of the container.

75
06:32.900 --> 06:37.520
So as I mentioned this might be different for you. But all you have to do is to make sure that the

76
06:37.520 --> 06:42.950
"alignwide" and "alignfull" are working as they should work in your frontend.

77
06:43.340 --> 06:50.780
So one more thing we can do, as I mentioned the Gutenberg editor should give you a good idea on how the post will

78
06:50.780 --> 06:57.380
look like in the frontend. So it shouldn't be exactly the same but at least you can try to style these

79
06:57.380 --> 06:59.580
components here to look like a frontend.

80
07:00.610 --> 07:04.770
So how do we do that? We can go to the enqueue-assets.

81
07:04.870 --> 07:07.810
It's so in the lib folder.

82
07:07.820 --> 07:11.320
enqueue-assets. You can add a new action here.

83
07:12.080 --> 07:15.140
And this action is called "enqueue_

84
07:18.260 --> 07:19.270
"enqueue_block_editor_assets"

85
07:20.110 --> 07:25.910
And let's give it a function "_themename

86
07:30.490 --> 07:41.030
"_themenamelook_block_editor_assets". And what this action will do is that it will allow you to enqueue some CSS only in the Gutengerg

87
07:41.030 --> 07:53.680
page. So let's create a file first in the css. Let's create a new file in the scss folder called editor.

88
07:55.510 --> 08:01.120
And then we'll have to go to the gulpfile in order to add this file here.

89
08:02.750 --> 08:09.930
So let's copy this just change this to editor.

90
08:10.060 --> 08:15.040
So this file will be compiled when we save it. But now we need to enqueue it. Se we've done this a lot so

91
08:15.040 --> 08:19.500
let's copy the bundle and it will be the same thing.

92
08:21.930 --> 08:24.740
But let's just change the "handle". Let's call it 

93
08:24.770 --> 08:39.090
"block_editor_styles". And it'll be "editor.css". So what you can do in this file? This file will be enqueued

94
08:39.210 --> 08:42.140
in this page, in the Gutenberg editor.

95
08:42.750 --> 08:50.170
So what you can do is you can inspect and see what styles you need to change and change them.

96
08:50.820 --> 08:56.730
So for example let's say our background and the frontend was blue for instance.

97
08:56.730 --> 09:01.350
And we need the Gutenberg editor to look roughly like the frontend.

98
09:01.740 --> 09:09.840
So we'll go to the body and you'll find that the body for the Gutenberg page has this class "gutenberg-editor 

99
09:09.840 --> 09:10.420
"gutenberg-editor-page".

100
09:10.560 --> 09:13.230
And then you'll go to the editor.scss.

101
09:16.160 --> 09:16.980
And then

102
09:23.610 --> 09:29.610
And we should have this file now in the list. All right. When we modify the gulpfile we need to rerun

103
09:30.440 --> 09:31.260
"npm start".

104
09:40.220 --> 09:45.860
As you can see we now have a blue background and this will just be for Gutenberg page.

105
09:45.880 --> 09:50.720
So this of course can apply to any block here or any item.

106
09:50.730 --> 09:58.040
So these blockquotes for example you can style them to match the blockquotes here.

107
09:58.710 --> 10:02.780
So let's remove this.

108
10:02.800 --> 10:09.260
So in this file you can also import any fonts that you  use in your theme in the frontend so to

109
10:09.250 --> 10:11.770
be enqueued in the Gutenberg page.

110
10:11.770 --> 10:17.920
You can also import some elements that you use in your  frontend in your SASS components if that's

111
10:17.920 --> 10:21.140
gonna help you in the Gutenberg editor.

112
10:21.280 --> 10:26.590
So for example we mentioned the blockquotes styles. Instead of rewriting these whole styles again you

113
10:26.590 --> 10:30.760
can maybe import elements and typography.

114
10:31.170 --> 10:39.330
And this is where I styled the blockquote. And I think that will  be all what you need to do about Gutenberg

115
10:39.370 --> 10:43.660
right now. Of course by the time Gutenberg arrives more things will appear.

116
10:43.660 --> 10:45.370
I'll keep you updated.

117
10:45.370 --> 10:51.910
One final thing I would like to mention is probably I'm not sure if it will be in this course or another

118
10:51.910 --> 10:57.460
course it will depend on how much content it will be. But I will probably make some lectures about how

119
10:57.460 --> 11:00.540
to create your own blocks here.

120
11:00.640 --> 11:06.040
So WordPress allows us to do that and this will be a great feature. But I'm not sure yet if it will fit

121
11:06.340 --> 11:09.140
this course or it will need another one.

122
11:09.370 --> 11:11.200
But anyways I will keep you updated.

123
11:11.440 --> 11:13.780
So I think that's it for Gutenberg now.

124
11:13.790 --> 11:16.600
Let's move on to the next section.