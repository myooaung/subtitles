WEBVTT

0
00:03.330 --> 00:09.360
So in the last lecture  we took a look at the structure of the navigation menu that WordPress generates. And as you

1
00:09.360 --> 00:15.990
can see for each item WordPress adds some useful classes like the object type if it's a page or a post

2
00:16.230 --> 00:19.920
and if it has children and the ID of the item and stuff like that.

3
00:19.920 --> 00:24.320
So let's now uncomment the styles.

4
00:28.310 --> 00:32.060
And I just want to give you some tips when styling these menus.

5
00:37.570 --> 00:43.880
So when you're styling menu items always use the ">" sign here in your CSS which is

6
00:43.900 --> 00:45.190
the direct child.

7
00:45.340 --> 00:51.710
And that's because if you have submenus and you don't use the direct child you'll end up styling the

8
00:51.730 --> 00:55.970
submenu children and probably you don't need that.

9
00:55.990 --> 01:01.180
So as you can see here we have a submenu and the A tag here is definitely gonna be styled differently

10
01:01.660 --> 01:03.880
than the submenu A tag.

11
01:03.890 --> 01:11.080
So in my styles I always use the direct child sign in order to not mess with the submenu children.

12
01:11.080 --> 01:13.680
Another thing to style the submenus

13
01:13.700 --> 01:20.990
I use absolute positioning. So if the LI of the menu item that has children has a class called "open"

14
01:21.420 --> 01:27.040
the submenu will have "display : block" and it will be absolutely positioned in order to look like this.

15
01:27.040 --> 01:34.660
And the reason why I use the class "open" to display block for the submenu I know you might be thinking

16
01:34.690 --> 01:39.730
this could be done using CSS. So using CSS when you hover in the parent menu item

17
01:39.730 --> 01:43.410
you can target the child submenu and display block on using CSS.

18
01:43.420 --> 01:49.750
But the reason I use this class is that I wanted to do it with JavaScript because it will help us and

19
01:49.750 --> 01:53.760
the accessibility section that we will talk about later.

20
01:53.760 --> 01:58.170
So let's now write this JavaScript that will add and remove this class on hover.

21
01:58.210 --> 02:06.700
So I'm gonna go to my folder and in the "js" in the "assets" in the "src". I'm gonna add in the

22
02:06.700 --> 02:09.490
"components" folder navigation.js.

23
02:13.030 --> 02:14.800
And then include it in the bundle.

24
02:21.210 --> 02:28.300
And then inside navigation.js let's "import $ from 'jquery'".

25
02:31.650 --> 02:40.580
So let's take a look at our classes that we need to target. So we have the menu is wrapped in a "c-navigation"

26
02:40.630 --> 02:44.780
class and then a menu item will have a class of "menu-item".

27
02:44.890 --> 02:47.580
But we need to target only menu items that has children.

28
02:47.590 --> 02:51.240
So we will target "menu-item-has-children" class.

29
02:51.400 --> 03:00.550
So let's do that. Let's create an event listener on the "c-navigation" and we need to do event delegation

30
03:00.550 --> 03:00.990
here.

31
03:01.140 --> 03:09.770
So I'm gonna use the "on('mouseenter')".

32
03:10.260 --> 03:19.110
And we need to target ".menu-item-has-children". So we could have done that directly without

33
03:19.770 --> 03:23.770
the event delegation and then remove this.

34
03:24.120 --> 03:29.600
But I intended to do this way and you will know why I did it this way later.

35
03:30.480 --> 03:38.960
So let's add the third argument here which is the callback function which takes the event as an argument.

36
03:39.060 --> 03:43.050
So this is an arrow function which is new in ES6.

37
03:43.050 --> 03:51.870
And if you use arrow function as callback for an event you can't use this instead you can use "(e)" which

38
03:51.870 --> 03:54.830
is the event and then the current target.

39
03:54.900 --> 03:59.540
And this will be the current target which is this class  that we hovered on.

40
04:00.030 --> 04:10.480
So if you hover on menu item with this class we need to "addClass('open')". And then on "mouseleave" we need to

41
04:10.480 --> 04:12.990
remove the class "open". So let's actually copy this

42
04:13.240 --> 04:25.560
and paste it. And instead of "mouseenter" we'll now type "mouseleave". And instead of "addClass", "removeClass".

43
04:25.690 --> 04:28.520
So let's see now and as you can see it's working.

44
04:28.550 --> 04:29.910
Setting the class "open"

45
04:29.910 --> 04:36.620
when we hover on the item and when we hover  away it removes the class "open". So let's take a look at the finished menu

46
04:36.630 --> 04:39.060
here and let's see what else we can do

47
04:39.060 --> 04:48.560
now. So now we can add these arrow icons for menu items that have children. And also for children that

48
04:48.560 --> 04:49.780
have subchildren

49
04:49.880 --> 04:53.440
we should add another icon which would point to the right.

50
04:53.460 --> 04:59.690
So first create a child menu with submenus. So

51
05:02.390 --> 05:03.450
let's do this and save.

52
05:07.260 --> 05:10.590
And now we'll have this child menu will have submenus.

53
05:10.680 --> 05:16.560
So in order to add these icons WordPress provides filters in order to filter each nevigation

54
05:16.560 --> 05:18.640
menu title.

55
05:18.690 --> 05:22.090
So let's go to navigation.php.

56
05:22.420 --> 05:35.010
Let's add this filter. So let's create a function called, of course prefix, and then let's call it "dropdown_

57
05:35.280 --> 05:43.370
icon". This filter receives four parameters, the $title which is the navigation label that we need

58
05:43.380 --> 05:51.540
to filter, and the $item. And the $item is, remember we mentioned that the navigation menu item is a post

59
05:51.560 --> 05:57.390
object. So this $item is basically the post object that will contain all the information about this

60
05:57.390 --> 05:58.350
post

61
05:58.590 --> 06:05.820
or this menu item which is the post. And the third one is $args and the $args are the arguments that we

62
06:05.820 --> 06:06.660
paste

63
06:07.140 --> 06:15.520
in the wp_nav_menu(), so it will contain the "theme location". And finally the $depth. And the $depth

64
06:15.610 --> 06:18.830
is how deep this menu item is.

65
06:19.060 --> 06:20.120
So.

66
06:20.350 --> 06:21.860
So this is the first level.

67
06:21.880 --> 06:24.400
It has depth of zero.

68
06:24.700 --> 06:29.970
And this one this first submenu have a depth of one and this one a depth of two.

69
06:30.030 --> 06:30.450
And so on.

70
06:33.310 --> 06:50.200
All right. So let's now hook this filter. So "add_filter" and it's called "nav_menu_item_title" and 

71
06:50.210 --> 06:54.120
give it a function. And since we are having arguments here

72
06:54.180 --> 07:01.710
so we should define how many arguments we have. So 4. And the priority is default priority which is 10.

73
07:01.920 --> 07:06.960
So this filter will run for all your menus and all your menu items.

74
07:07.560 --> 07:09.360
So it will run for this menu.

75
07:09.780 --> 07:13.390
It will filter this menu item and this one and this one and this one.

76
07:13.590 --> 07:16.680
And the children and same if we have another menu.

77
07:16.970 --> 07:21.270
So if you have another menu somewhere in the footer for example this filter will also run.

78
07:21.390 --> 07:26.010
But in some cases maybe we need to run it only for a specific menu.

79
07:26.010 --> 07:37.110
So to check that, we add an if condition and then get the theme location from the $args.

80
07:37.470 --> 07:44.390
And as I mentioned the $args are the $args that we gave to the wp_nav_menu.

81
07:44.400 --> 07:48.440
So it has the "theme_location".

82
07:49.020 --> 07:55.430
So let's copy main menu and if the theme location is main menu

83
07:55.690 --> 07:56.660
then we'll proceed.

84
07:56.680 --> 08:00.040
Otherwise we don't need to run this to the other menus.

85
08:00.040 --> 08:05.510
The second thing we need to check. We only need to add these icons for menu items that have children.

86
08:05.540 --> 08:07.240
Right?

87
08:07.450 --> 08:09.770
So to check that let's have another if condition.

88
08:09.900 --> 08:16.030
And this will be available in the $item which is the navigation post object.

89
08:16.030 --> 08:25.320
This object will have a property classes and classes will contain all the classes that are generated

90
08:25.320 --> 08:28.300
for this menu item. And this will be an array of classes.

91
08:28.350 --> 08:33.100
So let's check if this array has a "menu-item-has-children".

92
08:33.440 --> 08:39.890
And if so we'll preceed. So to do that we'll use a function called in_array().

93
08:40.780 --> 08:49.420
And this obviously checks if something exist in array so if "menu-item-has-children" exists in this array, the array

94
08:49.870 --> 08:52.100
of classes then proceed.

95
08:52.480 --> 09:00.280
And the last thing we need to check. We need to check if this menu item that has children has a depth of 0. So we'll add

96
09:00.300 --> 09:02.810
a down icon or a depth of more than zero.

97
09:02.810 --> 09:06.160
So we'll have the a direction

98
09:06.480 --> 09:14.890
icon. And we already have the depth parameter here in the arguments.

99
09:15.060 --> 09:26.680
So if $dept is zero we'll display the icon for the down direction icon and else the right direction

100
09:26.710 --> 09:28.530
icon. So remember this is a filter.

101
09:28.560 --> 09:32.960
So we have the title and we need to filter it and return it.

102
09:32.970 --> 09:34.890
So the last thing is to return.

103
09:37.590 --> 09:45.020
"return $title". And before returning it we can add some stuff to it.

104
09:45.020 --> 09:48.070
So let's add the icon.

105
09:48.140 --> 09:55.060
So $title and then append the icon to it.

106
09:55.400 --> 09:56.810
And then icon is an I tag.

107
09:57.100 --> 10:08.930
with a class "fa fa-angle-down". And for accessibility also

108
10:08.930 --> 10:12.230
icons are often given "aria-hidden="true"".

109
10:17.210 --> 10:24.570
And then close the I tag. And the same for the right.

110
10:24.740 --> 10:29.840
icon. We'll just need to change the class which is "right", "angle-right".

111
10:31.810 --> 10:32.920
So let's see now.

112
10:34.860 --> 10:41.370
And we now have or down icon and our right icon. And it's not properly styled for a reason.

113
10:41.390 --> 10:42.570
You'll see why later.

114
10:42.670 --> 10:47.950
So I think now we're ready to create a mega menu which is simpler than you expects.

115
10:48.160 --> 10:50.290
And then we finally do the accessibility thing.

116
10:50.300 --> 10:51.230
So see you in the next section.