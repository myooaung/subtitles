WEBVTT

0
00:03.010 --> 00:09.110
Let's now display the frontend of a widget and this should be the easiest part in the widget creation.

1
00:09.330 --> 00:11.670
So we have the

2
00:14.370 --> 00:20.380
widget() function here. And this function is responsible for displaying the frontend of widget.

3
00:20.970 --> 00:26.340
And we mentioned that we have the $args and the $args will contain what we will have to display before

4
00:26.340 --> 00:30.170
the title, after title, before the widget and after the widget.

5
00:30.300 --> 00:33.420
So we will have to use these values.

6
00:33.420 --> 00:41.470
And it also contains the $instance which will contain the values that we typed here.

7
00:41.570 --> 00:42.680
Right?

8
00:42.680 --> 00:45.660
So we have everything we need. Let's start coding.

9
00:46.220 --> 01:00.760
Let's remove this "echo" and this var_dump(). The first thing we have to do is "echo " and then "$args" and "before_widget",

10
01:00.760 --> 01:08.500
right? So here in our primary sidebar we specified that we want a SECTION tag before our widget.

11
01:09.580 --> 01:13.140
So let's add it.

12
01:13.260 --> 01:16.830
And let's also add the "after_widget".

13
01:21.350 --> 01:23.040
And now let's display the title.

14
01:23.060 --> 01:26.200
So let's also check if is_set()

15
01:29.260 --> 01:34.950
and then the "title" inside the $instance.

16
01:35.030 --> 01:36.920
So you might think why do we have to check.

17
01:36.950 --> 01:43.550
We already, we are already sure that we have a title inside of the instance because we already saved

18
01:44.110 --> 01:46.760
our widget and we included a title.

19
01:47.300 --> 01:54.780
But what if you made an update to your theme and you added a new option in your widget, a new field and

20
01:54.780 --> 02:01.430
your theme users already have instances of your widget that they created before this update.

21
02:01.430 --> 02:06.860
So let's say your widget did not have a title before and then you made an update and added the title

22
02:07.160 --> 02:14.100
and use it like so, "echo $instance['title']" before checking is_set().

23
02:14.160 --> 02:19.070
And let's say you have a user that already created an instance of your widget before this update without

24
02:19.070 --> 02:20.890
having the title field before.

25
02:21.260 --> 02:23.060
Now when he runs your new code

26
02:23.060 --> 02:28.400
he will try to access the title inside of the $instance but it will not exist. It will display an

27
02:28.400 --> 02:35.050
error because this user did not save your widget after the new update, right?

28
02:35.060 --> 02:37.830
So I hope I'm making sense.

29
02:37.860 --> 02:45.320
So anyways it's always a good idea to check is_set() first. And then if so we need to echo the title, right?

30
02:45.710 --> 02:47.910
But before echoing the title

31
02:47.930 --> 02:53.030
there is another thing that you have to do. So let's create a variable called $title and normally this should

32
02:53.030 --> 03:01.310
be the "title" in the $instance. But actually there is a WordPress filter called "widget_title" that can filter

33
03:01.580 --> 03:07.550
widget title. And you want to make sure that this filter is applied before displaying your title.

34
03:08.150 --> 03:20.230
So what we can do is, we can call it apply_filters(). And then apply the "widget_title" filter to the "title"

35
03:20.230 --> 03:22.770
in your $instance.

36
03:23.290 --> 03:28.930
So this way if some developer used this "widget_title" filter it will be applied to your widget.

37
03:29.020 --> 03:29.690
Right?

38
03:30.130 --> 03:33.380
And then finally we have to echo the $title.

39
03:33.940 --> 03:38.850
But remember we will also have to echo before and after the title.

40
03:39.000 --> 03:46.420
So this will be "$args['before_title']" and also "after_title".

41
03:49.900 --> 03:56.320
And finally remember we mentioned before that, before outputting any variables that you get from the user

42
03:56.330 --> 03:59.310
you should escape. So let's escape the title.

43
04:04.180 --> 04:06.300
And let's try it out 

44
04:06.350 --> 04:06.480
now.

45
04:11.390 --> 04:19.160
So we've our titles and they are wrapped in the H5 and then the SECTION tags.So great.

46
04:19.430 --> 04:24.800
But what if we have an empty title.

47
04:26.670 --> 04:34.270
Let's save and refresh. We'll have an empty H5 tag and we don't need that.

48
04:34.360 --> 04:38.610
If the title is empty we don't need to display the title at all, right?

49
04:38.800 --> 04:50.410
So in addition to this if condition, this is_set() check, we can also check that the title is not empty.

50
04:50.410 --> 04:58.740
So is_set() will check that the title key exists in the $instance array is_empty() will check that the "title"

51
04:58.750 --> 05:03.700
key in the $instance array is not an empty string, right? So let's save.

52
05:06.290 --> 05:16.170
And now we don't have our title. We don't have any H5 tags. Great. So let's output the post. So remember when

53
05:16.170 --> 05:22.050
we mention that we have a class called WP_Query that we can use in order to get some posts from the

54
05:22.140 --> 05:22.820
database.

55
05:24.030 --> 05:25.370
Let's now use this class.

56
05:25.540 --> 05:31.180
So let's create a new variable called maybe $most_recent_query.

57
05:31.910 --> 05:35.180
And let's instantiate a new WP_Query class.

58
05:35.210 --> 05:43.070
It's the "WP" and "_query". And it takes an array of arguments and these arguments will

59
05:43.070 --> 05:46.790
let you filter these posts in a lot of ways.

60
05:46.790 --> 05:53.240
So in our case we need to change the number of posts and the order, right.

61
05:53.240 --> 05:56.710
So let's first specify the "post_type".

62
05:57.320 --> 06:07.250
We only need posts, so "post". For the number of posts we can add an argument called "post_per_page". And we need

63
06:07.250 --> 06:10.050
to get the value from the $instance, right?

64
06:10.390 --> 06:17.560
But first we need to check is_set($instance['post_count']".

65
06:21.750 --> 06:26.770
So if so we will output this.

66
06:27.210 --> 06:30.790
But make sure it's parse to an integer so intval().

67
06:34.290 --> 06:37.510
Otherwise maybe default it to 3, right?

68
06:37.560 --> 06:44.820
Next we have the "orderby". We called it "sort_by" it's actually called "orderby" in the WP_Query class. So

69
06:51.450 --> 06:57.990
is_set() and then "sort_by", we'll output it but sanitized.

70
06:58.080 --> 06:59.620
So let's copy it from here.

71
07:02.350 --> 07:07.020
Otherwise maybe default it to "date".

72
07:07.260 --> 07:11.290
And now we will loop through the posts that this query found.

73
07:11.340 --> 07:18.310
So "if ($most_recently_query->have_posts())" let's echo a

74
07:18.320 --> 07:22.260
maybe a DIV, a container for the post

75
07:25.610 --> 07:32.150
and close it. And then loop through the posts using while loop.

76
07:32.600 --> 07:38.840
So while have  posts, let's call the_post() function.

77
07:42.520 --> 07:44.830
And then for each post we need to echo

78
07:45.100 --> 07:47.210
maybe also a div, so let's.

79
07:50.910 --> 07:55.040
And inside of this DIV let's echo the title and the date.

80
07:55.160 --> 07:59.400
So I added a H6 tag with the URL and the title.

81
07:59.830 --> 08:04.160
Let's also add, remember we have an option called "include_date",

82
08:04.170 --> 08:10.670
right? So let's check "$instance['include_date']". And if "include_date" is "true"

83
08:10.860 --> 08:13.640
let's output get_the_date(),

84
08:16.490 --> 08:19.660
otherwise let's output nothing.

85
08:20.270 --> 08:21.490
So I think that will be fine.

86
08:21.560 --> 08:22.250
Let's take a look.

87
08:25.700 --> 08:26.840
And undefined,

88
08:27.050 --> 08:33.030
ok. You know that kind of stuff happens when you copy paste things.

89
08:34.020 --> 08:38.600
Let's change this to $instance instead of $new_instance.

90
08:38.600 --> 08:41.560
So I think the "post_count" is not working.  

91
08:41.590 --> 08:50.510
Let's see this one, the first one, we set it to 3. And it's actually getting a lot of posts. So let's take a look.

92
09:02.900 --> 09:03.520
All right so

93
09:03.690 --> 09:08.430
this is "posts_per_page" not "post_per_page", sorry. And now it should be working fine.

94
09:09.030 --> 09:14.400
So it's 4 not 3 because there is a sticky post. If you would like to ignore sticky posts,

95
09:14.400 --> 09:15.550
we can add an argument here

96
09:15.640 --> 09:24.360
called ignore_sticky_posts and set it to "true". It's now we have 3 posts and let's try to

97
09:26.890 --> 09:28.150
include date

98
09:31.060 --> 09:36.960
and maybe change this to random.

99
09:37.120 --> 09:45.970
So now we've our dates and if you refresh every time the order will be random. You'll get some random posts.

100
09:46.260 --> 09:48.980
So great I think that will be it for our widget.

101
09:49.050 --> 09:53.810
Let's finally take a look at how out widget will look like in the Customizer in the next lecture.