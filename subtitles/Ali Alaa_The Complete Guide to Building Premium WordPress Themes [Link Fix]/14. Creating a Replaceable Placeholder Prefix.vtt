WEBVTT

0
00:02.160 --> 00:09.520
Let's do a final improvement in our tasks before moving on back to the WordPress stuff.

1
00:09.530 --> 00:16.320
So remember in the any the function that we write, you have to use the theme name as a prefix, right?

2
00:16.500 --> 00:21.780
When you're done with your theme you'll probably end up with a lot of functions that you can reuse in

3
00:21.780 --> 00:22.770
other themes.

4
00:24.190 --> 00:34.250
So instead of using, hard coding your prefix here as "firsttheme" let's select all our prefixes,

5
00:34.640 --> 00:40.080
I'm using the Ctrl+D in VS Code, and lets do something like

6
00:40.240 --> 00:47.160
a generic placeholder like "_themename".

7
00:47.210 --> 00:52.390
So it could be anything but I just chose "_themename".

8
00:52.490 --> 00:55.200
You can choose any other generic prefix you like.

9
00:56.420 --> 00:57.200
So let's save this.

10
00:57.200 --> 01:05.110
And let's, also we have the theme name and the prefix in other, in the helpers file.

11
01:05.110 --> 01:12.560
So let's replace these as well. And we'll also do that for the text domain.

12
01:16.970 --> 01:23.460
And save. Let's search the folder for "firsttheme"

13
01:23.870 --> 01:27.220
just in case we missed any.

14
01:27.450 --> 01:28.970
So we have.

15
01:29.400 --> 01:39.460
Yeah in index.php we need to also replace the function calls and the text domains. So replace these with

16
01:39.690 --> 01:42.100
the "_themename".

17
01:42.220 --> 01:45.110
We also have it in the gulpfile and the package.

18
01:46.290 --> 01:47.490
We don't need to change these.

19
01:47.490 --> 01:54.900
Maybe in the style.css we can also change these to the placeholder. What we're gonna

20
01:54.900 --> 02:02.970
do now is create a task that will search for all "_themename" instances and replace them with

21
02:03.960 --> 02:05.570
the theme name in the package.json.

22
02:05.590 --> 02:13.370
So that way whenever you want to create a new theme you can actually use your old functions and

23
02:13.370 --> 02:19.820
just replace the name in the package .json and run a task that will replace the placeholder with

24
02:19.820 --> 02:23.930
the actual theme name. All right.

25
02:23.960 --> 02:26.750
So let's create the task now.

26
02:26.990 --> 02:30.620
In gulpfile. Let's install a plugin.

27
02:31.020 --> 02:31.880
"gulp replace".

28
02:40.430 --> 02:45.370
So this plugin replaces you know a string in a file with another string.

29
02:46.050 --> 02:52.350
So let's install it and while it's installing let's actually use it.

30
02:52.410 --> 02:53.410
So let's "import

31
02:56.840 --> 02:57.650
replace

32
03:00.050 --> 03:02.030
from 'gulp replace'".

33
03:05.060 --> 03:15.140
And then we want to also import the package.json. Why? In order to get the name of the theme that we

34
03:15.140 --> 03:17.480
will replace with a placeholder.

35
03:17.480 --> 03:19.610
So let's "import"

36
03:22.490 --> 03:30.820
let's call it "info". And we will get this from package.json.

37
03:31.210 --> 03:33.100
All right?

38
03:33.140 --> 03:35.510
Now when do you want to replace the files.

39
03:35.540 --> 03:37.340
It's right before we bundle them.

40
03:37.340 --> 03:37.920
Right?

41
03:39.190 --> 03:44.590
So before zipping the files we need for every file that we are bundling we need to search for the placeholder

42
03:44.590 --> 03:47.300
and replace it with the actual theme, theme name.

43
03:47.300 --> 03:52.440
So I'm gonna pipe the replace plugin so ".pipe(replace())".

44
03:55.240 --> 03:56.550
And it takes the first argument

45
03:56.550 --> 04:01.270
the thing that we want to replace. So "_themename".

46
04:01.310 --> 04:04.590
And then the string that we want to replace it with.

47
04:04.700 --> 04:11.410
So it's gonna be info. And info will be the package.json  object.

48
04:11.460 --> 04:17.600
So want the name property form it. So "info.name". One more thing, we also need to,

49
04:18.350 --> 04:24.000
the name of the zip file will also needed to be dynamic. We need to get it from "info.name", so let's change

50
04:24.000 --> 04:24.680
this from the

51
04:24.670 --> 04:31.200
normal strings to a string with a ` in order to put a variable here.

52
04:31.210 --> 04:43.710
So " `${ info.name}.zip`. Let's save this and try to run. "npm run bundle"

53
04:43.720 --> 04:44.240
again.

54
04:49.400 --> 04:51.480
Let's now open the zip file.

55
04:53.330 --> 05:00.630
And open let's say the, one of the functions and see if the placeholder is replaced. So let's open

56
05:00.640 --> 05:12.810
enqueue-assets and as you can see it's new "firsttheme". Unlike the original enqueue scripts file which is here,

57
05:13.340 --> 05:14.900
which has the placeholder.

58
05:15.490 --> 05:21.310
So great. So now we have a foundation for any new theme that we want to create.

59
05:21.360 --> 05:28.430
We have task now that that will dynamically replace a "_themename" placeholder in order to reuse functions.

60
05:28.740 --> 05:35.040
And this will also apply to anywhere we use the "_themename" like in the text domain as we saw.

61
05:35.340 --> 05:41.310
So this will make it very easy for us in the future to make a new theme and reuse some code from our

62
05:41.310 --> 05:42.980
old themes.

63
05:42.990 --> 05:43.650
So I think that's it

64
05:43.650 --> 05:47.630
now for the gulp file. We'll come back actually to this file

65
05:47.880 --> 05:51.290
during the course too, you know we'll have to do some other stuff.

66
05:51.300 --> 05:54.630
But for now let's finally get back to the WordPress stuff.