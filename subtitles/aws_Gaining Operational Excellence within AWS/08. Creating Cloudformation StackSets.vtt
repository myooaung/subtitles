WEBVTT
1
00:00:00.640 --> 00:00:03.060
[Autogenerated] All right, let's dive into stack sets.

2
00:00:03.060 --> 00:00:05.610
Now I'm at the CloudFormation console screen.

3
00:00:05.610 --> 00:00:09.360
I'll go to stack sets and let's create one of these.

4
00:00:09.360 --> 00:00:10.910
So I'm gonna click on Create.

5
00:00:10.910 --> 00:00:14.000
I'll say my template is ready and I'm going to upload

6
00:00:14.000 --> 00:00:17.740
one that I downloaded from AWS.

7
00:00:17.740 --> 00:00:20.640
I'll click on next,

8
00:00:20.640 --> 00:00:24.450
and this brings us to a familiar screen we give our stacks at a

9
00:00:24.450 --> 00:00:27.350
name will leave the description what it is,

10
00:00:27.350 --> 00:00:31.760
and then we can specify parameters similar to a normal stack.

11
00:00:31.760 --> 00:00:36.240
Now I'll leave these as the defaults I'll click on next,

12
00:00:36.240 --> 00:00:38.930
and this brings us to a permissions section.

13
00:00:38.930 --> 00:00:43.440
Now this is where it really differs from normal CloudFormation stacks.

14
00:00:43.440 --> 00:00:47.280
We have to specify an administrative role,

15
00:00:47.280 --> 00:00:51.180
and you'll notice that this role will be used for administering our

16
00:00:51.180 --> 00:00:54.940
individual accounts that we want to deploy to.

17
00:00:54.940 --> 00:00:56.200
So what that means is,

18
00:00:56.200 --> 00:01:00.430
this admin role will assume this execution role here at

19
00:01:00.430 --> 00:01:03.440
the bottom in each of our accounts.

20
00:01:03.440 --> 00:01:06.400
So what that looks like and I am.

21
00:01:06.400 --> 00:01:10.770
We have our admin role, which is allowing CloudFormation to assume it,

22
00:01:10.770 --> 00:01:14.100
and it has privileges to assume this role down here.

23
00:01:14.100 --> 00:01:16.870
The execution role, which,

24
00:01:16.870 --> 00:01:22.080
if we look at the trust relationship allows that admin role to assume it.

25
00:01:22.080 --> 00:01:24.940
So that's how those pieces fit together.

26
00:01:24.940 --> 00:01:26.740
I'll click on next.

27
00:01:26.740 --> 00:01:30.110
And now we specify either the accounts that we want to

28
00:01:30.110 --> 00:01:35.540
deploy to in a CSV file or manually, or we can choose our Oh,

29
00:01:35.540 --> 00:01:36.260
use that.

30
00:01:36.260 --> 00:01:37.250
We want to push, too.

31
00:01:37.250 --> 00:01:40.490
So if we're in an organization in an enterprise,

32
00:01:40.490 --> 00:01:42.660
this is useful for our use case.

33
00:01:42.660 --> 00:01:44.240
I'll do accounts.

34
00:01:44.240 --> 00:01:47.870
I'm gonna only paste my single account here that I have.

35
00:01:47.870 --> 00:01:49.950
And now we move down to regions.

36
00:01:49.950 --> 00:01:54.760
So I can specify which regions in this list of accounts up here

37
00:01:54.760 --> 00:02:00.040
that I want to deploy to so I'll select to.

38
00:02:00.040 --> 00:02:04.640
So we're deploying to us East one in us West to.

39
00:02:04.640 --> 00:02:08.880
But this stack set lives in us East to the next thing

40
00:02:08.880 --> 00:02:10.990
we have is deployment operations.

41
00:02:10.990 --> 00:02:14.550
So we specify the number of accounts per region.

42
00:02:14.550 --> 00:02:16.650
We want to deploy these stacks to.

43
00:02:16.650 --> 00:02:18.230
I'll leave it at one,

44
00:02:18.230 --> 00:02:23.130
and we'll also leave our failure tolerance at zero we can review

45
00:02:23.130 --> 00:02:27.740
our stack set and then I'm going to submit.

46
00:02:27.740 --> 00:02:30.440
Now you can see we have an operation running,

47
00:02:30.440 --> 00:02:32.970
and if I go to stack instances,

48
00:02:32.970 --> 00:02:37.630
we'll see We have two stacks being deployed there in the same account,

49
00:02:37.630 --> 00:02:40.640
but they're in the two regions that we specified.

50
00:02:40.640 --> 00:02:45.110
Now these error outdated because they're just now being deployed.

51
00:02:45.110 --> 00:02:46.530
But now, when I refresh,

52
00:02:46.530 --> 00:02:51.610
you see that are us East one is current and are us West to is now

53
00:02:51.610 --> 00:02:54.590
getting deployed because that first one finished.

54
00:02:54.590 --> 00:02:57.740
And that's because we set a concurrency of one.

55
00:02:57.740 --> 00:03:00.380
All right, so just like that, we're all current.

56
00:03:00.380 --> 00:03:04.640
So if I go back to operations, we see its success.

57
00:03:04.640 --> 00:03:06.050
I'll go to info.

58
00:03:06.050 --> 00:03:07.110
And there you go.

59
00:03:07.110 --> 00:03:12.320
We can now see our info on our stack set that we deployed containing are

60
00:03:12.320 --> 00:03:16.660
multiple stack instances and it's all from a single location.

61
00:03:16.660 --> 00:03:22.290
So now if I go to us East one,

62
00:03:22.290 --> 00:03:26.670
I should see a CloudFormation stack here from our stack set.

63
00:03:26.670 --> 00:03:27.480
And there it is.

64
00:03:27.480 --> 00:03:32.110
Stack set our stacks at name and then and identify error

65
00:03:32.110 --> 00:03:38.110
populated by CloudFormation we can CR resource is our events all

66
00:03:38.110 --> 00:03:40.450
the good stuff that goes along with stacks.

67
00:03:40.450 --> 00:03:43.940
So if I check in us west to as well,

68
00:03:43.940 --> 00:03:48.640
we should see the same stack just with a different idea in the end.

69
00:03:48.640 --> 00:03:51.310
And there it is create complete.

70
00:03:51.310 --> 00:03:55.040
All of our resource is and our events.

71
00:03:55.040 --> 00:03:57.250
Okay, so how do we clean up?

72
00:03:57.250 --> 00:04:01.340
Well, let me go back.

73
00:04:01.340 --> 00:04:06.940
And if I select our stack set, I'll go to actions and then delete.

74
00:04:06.940 --> 00:04:10.870
Now this is going to error out and you'll see why.

75
00:04:10.870 --> 00:04:13.540
It's because it's not empty.

76
00:04:13.540 --> 00:04:16.550
So we have to get rid of those sub stacks before

77
00:04:16.550 --> 00:04:18.750
we can delete the stack set itself.

78
00:04:18.750 --> 00:04:22.140
So what I'll do is you can go to actions.

79
00:04:22.140 --> 00:04:24.940
Delete stacks from stack set.

80
00:04:24.940 --> 00:04:29.640
You can specify all of your accounts or some of your accounts.

81
00:04:29.640 --> 00:04:34.340
You can add all of your regions or specify custom regions,

82
00:04:34.340 --> 00:04:37.590
and then it's the same deployment options at the bottom Now.

83
00:04:37.590 --> 00:04:41.660
One key difference here is that you can retain stacks,

84
00:04:41.660 --> 00:04:45.350
and what that means is CloudFormation will leave those sub

85
00:04:45.350 --> 00:04:48.630
stacks in the different accounts and regions.

86
00:04:48.630 --> 00:04:54.340
But it just dis associates those stacks from our stack sets.

87
00:04:54.340 --> 00:04:57.060
So then we can manage the stack set separately.

88
00:04:57.060 --> 00:04:58.940
Then the stacks themselves.

89
00:04:58.940 --> 00:05:04.240
I'll click next, and then I'll click on Submit.

90
00:05:04.240 --> 00:05:04.970
And there you go.

91
00:05:04.970 --> 00:05:10.440
It's running now, so I'll pause here and pick back up when it succeeded.

92
00:05:10.440 --> 00:05:12.140
All right, so we've completed now.

93
00:05:12.140 --> 00:05:16.640
So now, under stack instances, we have none.

94
00:05:16.640 --> 00:05:20.790
So let's delete the stack set, and this should let us delete it.

95
00:05:20.790 --> 00:05:24.030
Now there we go.

96
00:05:24.030 --> 00:05:26.530
And now it's gone, so we're all cleaned up.

97
00:05:26.530 --> 00:05:31.000
So that's how you can leverage CloudFormation stack sets to deploy a

98
00:05:31.000 --> 00:05:35.840
similar template to multiple accounts as well as regions.

99
00:05:35.840 --> 00:05:46.000
Now that we have a firm grasp on CloudFormation in its use cases, let's move on to learning about a W s ops works.

