1
00:00:01,140 --> 00:00:01,580
[Autogenerated] all right,

2
00:00:01,580 --> 00:00:04,950
So now that we have an understanding or an overview

3
00:00:04,950 --> 00:00:10,700
of what CloudWatch events are, let's go ahead and demo some of these out.

4
00:00:10,700 --> 00:00:12,340
Now, in this clip,

5
00:00:12,340 --> 00:00:17,700
we're going to look at scheduled expression based CloudWatch events.

6
00:00:17,700 --> 00:00:23,840
So over here on the left, I click on events I'm going to click on Get started,

7
00:00:23,840 --> 00:00:26,800
and this brings us to our create rules screen.

8
00:00:26,800 --> 00:00:31,340
Now, the first thing we do here is we select our type of trigger.

9
00:00:31,340 --> 00:00:32,440
We have Event-Hubs.

10
00:00:32,440 --> 00:00:35,900
Kern, which is next, and then we have schedule,

11
00:00:35,900 --> 00:00:38,240
which I'm going to select for this one.

12
00:00:38,240 --> 00:00:41,730
Now, this brings us to two different options.

13
00:00:41,730 --> 00:00:45,360
And these error the two different types of scheduled expressions.

14
00:00:45,360 --> 00:00:52,090
We have a rate expression where we define an integer and then a rate,

15
00:00:52,090 --> 00:00:54,840
so minutes, hours or days.

16
00:00:54,840 --> 00:00:59,750
So I'll set this at one minute for now, or we can set a Cron expression.

17
00:00:59,750 --> 00:01:00,200
Now,

18
00:01:00,200 --> 00:01:04,160
the Krahn expressions here might differ a little bit from what you

19
00:01:04,160 --> 00:01:08,140
might be used to if you work with Cron's in Linux.

20
00:01:08,140 --> 00:01:12,240
So the first section is the minutes of the day.

21
00:01:12,240 --> 00:01:14,510
The second is the hours.

22
00:01:14,510 --> 00:01:16,940
Then we have the day of month.

23
00:01:16,940 --> 00:01:21,140
So the first, the second the third, etcetera.

24
00:01:21,140 --> 00:01:23,640
We have the month itself.

25
00:01:23,640 --> 00:01:27,510
We have the day of week, day of week, meaning Sunday,

26
00:01:27,510 --> 00:01:30,200
all the way through Saturday.

27
00:01:30,200 --> 00:01:33,910
And then we have the year and you can see CloudWatch actually

28
00:01:33,910 --> 00:01:38,140
shows us what our next 10 trigger dates will be,

29
00:01:38,140 --> 00:01:43,510
so we can see that this is going to trigger every day at the same time.

30
00:01:43,510 --> 00:01:44,260
12.

31
00:01:44,260 --> 00:01:45,640
UTC.

32
00:01:45,640 --> 00:01:51,740
So if I change this third sprechen in, let's say I change it to the 15th.

33
00:01:51,740 --> 00:01:54,520
It's going to trigger this rule on the 15th.

34
00:01:54,520 --> 00:01:56,490
So these error very powerful.

35
00:01:56,490 --> 00:02:00,940
Now for this demo, I'm going to select a fixed rate of one minute,

36
00:02:00,940 --> 00:02:03,110
and that brings us to our targets.

37
00:02:03,110 --> 00:02:06,340
So we add a target for this event,

38
00:02:06,340 --> 00:02:11,540
and you can see we can actually target several different services.

39
00:02:11,540 --> 00:02:17,210
We can do batch jobs we can do easy to instances we can trigger

40
00:02:17,210 --> 00:02:21,100
toward can nested streams or maybe a SNS topic.

41
00:02:21,100 --> 00:02:26,240
It's very, very versatile now for this, we'll do lamb to function.

42
00:02:26,240 --> 00:02:32,860
I'll select my function here and we'll see what this does as it invokes.

43
00:02:32,860 --> 00:02:37,940
You can notice that we can configure a version and alias if we wanted to,

44
00:02:37,940 --> 00:02:42,340
and we can configure our input so we can pass the matched event

45
00:02:42,340 --> 00:02:47,340
we can pass part of the matched event we can send constant JSON

46
00:02:47,340 --> 00:02:49,840
or we can transform our input.

47
00:02:49,840 --> 00:02:51,840
Now I'll leave it at matched event.

48
00:02:51,840 --> 00:02:55,310
I'll configure our details and let me give it a name,

49
00:02:55,310 --> 00:02:57,000
and with that a description.

50
00:02:57,000 --> 00:03:00,760
We'll leave it as enabled, and I'll create our rule.

51
00:03:00,760 --> 00:03:01,700
And there we go.

52
00:03:01,700 --> 00:03:06,840
We now have our CloudWatch rule with a rate based expression.

53
00:03:06,840 --> 00:03:07,050
Now,

54
00:03:07,050 --> 00:03:10,310
one thing to keep in mind here is when you create a rate

55
00:03:10,310 --> 00:03:14,000
based expression in CloudWatch events,

56
00:03:14,000 --> 00:03:18,690
it always invokes immediately when you create it for the first time.

57
00:03:18,690 --> 00:03:22,140
So when we created that, it invoked that function.

58
00:03:22,140 --> 00:03:24,320
And then a minute from that point in time,

59
00:03:24,320 --> 00:03:27,230
it will invoke it again and then so on until we

60
00:03:27,230 --> 00:03:29,940
either disabled or delete this rule.

61
00:03:29,940 --> 00:03:31,620
So let's go ahead and check that out.

62
00:03:31,620 --> 00:03:35,540
Now let me go to Lambda.

63
00:03:35,540 --> 00:03:38,640
I'll go to my CloudWatch event here.

64
00:03:38,640 --> 00:03:43,900
Let's go to monitoring and we can CR metrics and you can

65
00:03:43,900 --> 00:03:47,640
see here we have had an indication, so that's great.

66
00:03:47,640 --> 00:03:51,210
So in roughly another minute or actually a little bit less,

67
00:03:51,210 --> 00:03:53,640
we should have to indications.

68
00:03:53,640 --> 00:03:59,360
Let's go ahead and look at our logs in CloudWatch we can CR Day and time,

69
00:03:59,360 --> 00:04:00,880
which is the one that just occurred.

70
00:04:00,880 --> 00:04:05,170
So if I open this log stream there we go we can see our first

71
00:04:05,170 --> 00:04:11,440
indication at 307 UTC and it prints our rate based event.

72
00:04:11,440 --> 00:04:16,740
And then exactly one minute later, we have our second request.

73
00:04:16,740 --> 00:04:19,530
So it's invoking every single minute.

74
00:04:19,530 --> 00:04:25,420
So now you can see how we can leverage CloudWatch events to trigger

75
00:04:25,420 --> 00:04:30,140
certain services to customize our own workloads.

76
00:04:30,140 --> 00:04:33,930
These CloudWatch events are very powerful and they

77
00:04:33,930 --> 00:04:37,240
meet a broad amount of use cases.

78
00:04:37,240 --> 00:04:39,480
So let's go ahead and clean this up.

79
00:04:39,480 --> 00:04:42,630
And then after I delete this rule will go ahead and wrap up

80
00:04:42,630 --> 00:04:50,000
this clip and then move on to the next one, which is going to discuss event based events.

