WEBVTT
1
00:00:01.240 --> 00:00:03.140
[Autogenerated] Well, let's get started.

2
00:00:03.140 --> 00:00:08.940
So I'm in the AWS console and I want to navigate to CloudFormation.

3
00:00:08.940 --> 00:00:11.560
This brings us to the CloudFormation screen,

4
00:00:11.560 --> 00:00:16.640
and you can see it loads the stacks that we currently have for this region.

5
00:00:16.640 --> 00:00:19.820
Now on the left we can see, we have stacks.

6
00:00:19.820 --> 00:00:22.540
We have stack sets which,

7
00:00:22.540 --> 00:00:30.240
provided by AWS extend the functionality of our stacks by enabling us to create,

8
00:00:30.240 --> 00:00:34.120
update or delete them across multiple accounts and

9
00:00:34.120 --> 00:00:36.840
regions with a single operation.

10
00:00:36.840 --> 00:00:39.630
So this ties back to that infrastructure is code

11
00:00:39.630 --> 00:00:43.140
deployment scenario that we discussed earlier.

12
00:00:43.140 --> 00:00:48.230
You would use a single template to deploy across multiple regions and accounts,

13
00:00:48.230 --> 00:00:51.740
and you can control it from one central account.

14
00:00:51.740 --> 00:00:57.380
And then we see we have exports and exports are simply values that we

15
00:00:57.380 --> 00:01:02.810
have had output that we can references with other stacks so we can

16
00:01:02.810 --> 00:01:07.240
import our exports and use them where necessary.

17
00:01:07.240 --> 00:01:09.360
Now we'll cut off there for now.

18
00:01:09.360 --> 00:01:11.740
We'll talk about the rest later on,

19
00:01:11.740 --> 00:01:15.340
and let's just go ahead and let's create a stack.

20
00:01:15.340 --> 00:01:15.730
You'll see.

21
00:01:15.730 --> 00:01:20.830
The first thing we do is we have to prepare our template so we can choose.

22
00:01:20.830 --> 00:01:22.120
Template is ready.

23
00:01:22.120 --> 00:01:27.540
We can use a sample template provided to us by A W S.

24
00:01:27.540 --> 00:01:30.440
Or we can create one in the designer.

25
00:01:30.440 --> 00:01:34.140
Now we'll talk about designer a little bit later on.

26
00:01:34.140 --> 00:01:38.930
But for this video, let's just use that the template is ready now.

27
00:01:38.930 --> 00:01:40.510
Once we do that, you see,

28
00:01:40.510 --> 00:01:45.100
we have to specify where our template is sourced and we can do

29
00:01:45.100 --> 00:01:49.540
this by storing it in an Amazon S3 bucket.

30
00:01:49.540 --> 00:01:53.340
Or we can upload one from our local machines.

31
00:01:53.340 --> 00:01:56.640
For this demo, I'm going to upload a local one.

32
00:01:56.640 --> 00:02:01.430
So I've chosen my file are create E C two with security group dot

33
00:02:01.430 --> 00:02:05.440
template and let's just go ahead and click on next.

34
00:02:05.440 --> 00:02:10.340
And now we specify our stack details, so we give it a name,

35
00:02:10.340 --> 00:02:13.230
and in the gray underneath this text box,

36
00:02:13.230 --> 00:02:16.690
you can see we have some restrictions that we have to follow.

37
00:02:16.690 --> 00:02:21.840
So let me give my stack of name and it brings us to parameters.

38
00:02:21.840 --> 00:02:24.850
Now, parameters are exactly what they sound like.

39
00:02:24.850 --> 00:02:30.840
They allow us to input custom values when we're creating or updating our stacks.

40
00:02:30.840 --> 00:02:34.940
So the four parameters that I have in this template

41
00:02:34.940 --> 00:02:37.840
are are easy to instantiate type,

42
00:02:37.840 --> 00:02:41.160
and you can see it's a drop-down with several different

43
00:02:41.160 --> 00:02:44.340
instance types located within it.

44
00:02:44.340 --> 00:02:44.560
Now,

45
00:02:44.560 --> 00:02:48.630
these error defined as constraint types and we'll discuss these when

46
00:02:48.630 --> 00:02:53.340
we dissect the template file in the next clip.

47
00:02:53.340 --> 00:02:59.280
We then have key name So the name of our easy to keep pair that we want to use

48
00:02:59.280 --> 00:03:03.360
and this has to be in existing keep error in your account.

49
00:03:03.360 --> 00:03:05.540
So that's another constraint.

50
00:03:05.540 --> 00:03:12.210
We point to the latest am I IDE provided to us by a W s And what

51
00:03:12.210 --> 00:03:16.120
this is pointing to is an s s m parameter,

52
00:03:16.120 --> 00:03:21.140
which we looked at earlier That's open to the public for us to use.

53
00:03:21.140 --> 00:03:25.090
And this resides within a W s itself.

54
00:03:25.090 --> 00:03:28.690
And the last thing we see is our SSH location.

55
00:03:28.690 --> 00:03:34.940
So we're going to specify a cider range that we want to SSH From now,

56
00:03:34.940 --> 00:03:38.330
you always want to lock this down as much as possible,

57
00:03:38.330 --> 00:03:43.840
which is following a best practice for AWS of least privilege.

58
00:03:43.840 --> 00:03:49.040
But for this clip, we'll leave it open just so I can SSH easily.

59
00:03:49.040 --> 00:03:52.570
So I'll click on next we can specify tags.

60
00:03:52.570 --> 00:03:53.870
So what this does?

61
00:03:53.870 --> 00:03:54.850
Is it tags?

62
00:03:54.850 --> 00:03:57.270
Each of our resource is that get created.

63
00:03:57.270 --> 00:04:02.640
So maybe I want to say the environment is Dev For this particular stack,

64
00:04:02.640 --> 00:04:04.050
we have our permissions.

65
00:04:04.050 --> 00:04:08.940
So we can decide what role we want CloudFormation to assume.

66
00:04:08.940 --> 00:04:14.370
To create these resource is if we desire now, you'll see it's optional.

67
00:04:14.370 --> 00:04:16.390
And if you don't choose one,

68
00:04:16.390 --> 00:04:21.780
CloudFormation simply uses your own permissions based on your credentials,

69
00:04:21.780 --> 00:04:23.840
so we'll leave this blank.

70
00:04:23.840 --> 00:04:27.220
We have advanced options, so let's take a look at these.

71
00:04:27.220 --> 00:04:30.910
We have a stack policy in stack policies.

72
00:04:30.910 --> 00:04:36.540
Essentially allow us to define a protected resource within her stack.

73
00:04:36.540 --> 00:04:41.610
You can select none we can Enter one in here and you could see

74
00:04:41.610 --> 00:04:44.450
it needs to be JSON formatted or we can.

75
00:04:44.450 --> 00:04:48.210
Upload a file like before, similar to our template.

76
00:04:48.210 --> 00:04:48.700
I'll choose.

77
00:04:48.700 --> 00:04:53.740
None will look at the next part, which is rollback configuration,

78
00:04:53.740 --> 00:04:57.410
and this is where we can specify an amount of time,

79
00:04:57.410 --> 00:05:02.240
as well as an alarm that we want to use if anything goes awry.

80
00:05:02.240 --> 00:05:06.720
So if our deployment takes longer than expected, we can trigger an alarm.

81
00:05:06.720 --> 00:05:09.510
Third, we have notification options,

82
00:05:09.510 --> 00:05:15.170
so we can send an SMS message to a topic based on events

83
00:05:15.170 --> 00:05:17.470
that happen within CloudFormation,

84
00:05:17.470 --> 00:05:22.090
and I'll show you what this means here in the upcoming clips and then,

85
00:05:22.090 --> 00:05:25.840
lastly, we have stack creation options.

86
00:05:25.840 --> 00:05:27.590
We can roll back on failure.

87
00:05:27.590 --> 00:05:31.590
So if any resource fails to create we can,

88
00:05:31.590 --> 00:05:36.040
roll back the entire stack so we don't have a partial deployment,

89
00:05:36.040 --> 00:05:36.600
so we'll leave.

90
00:05:36.600 --> 00:05:39.160
That enabled we can set a time out.

91
00:05:39.160 --> 00:05:42.720
So if this is the point for, let's say, 15 minutes,

92
00:05:42.720 --> 00:05:46.370
let's go ahead and time out and cancel the stack creation.

93
00:05:46.370 --> 00:05:49.630
And then finally, we have termination protection,

94
00:05:49.630 --> 00:05:51.710
and this does what it sounds like.

95
00:05:51.710 --> 00:05:55.540
It prevents the stack from being accidentally deleted.

96
00:05:55.540 --> 00:05:57.440
We'll leave this disabled.

97
00:05:57.440 --> 00:06:01.340
I'll click on next, and now we get a review.

98
00:06:01.340 --> 00:06:03.800
We see the template URL were using.

99
00:06:03.800 --> 00:06:08.740
We have the stack description we can estimate a cost if we wanted to.

100
00:06:08.740 --> 00:06:10.650
We see our stack details,

101
00:06:10.650 --> 00:06:14.540
which are specifically our parameters that we specified.

102
00:06:14.540 --> 00:06:20.140
We have our stack options, so I'm configuring a tag of environment equal to Dev.

103
00:06:20.140 --> 00:06:22.060
We're not specifying any.

104
00:06:22.060 --> 00:06:25.740
I am Rolls Nora stack policy.

105
00:06:25.740 --> 00:06:29.680
We left rollback config the same and notification options.

106
00:06:29.680 --> 00:06:34.340
We enabled our roll back and then we also specified a time out.

107
00:06:34.340 --> 00:06:37.140
So let's go ahead and create this stack.

108
00:06:37.140 --> 00:06:40.070
And what's happening right now is we see we have our

109
00:06:40.070 --> 00:06:43.140
stack here on the Left web server,

110
00:06:43.140 --> 00:06:46.840
and we're on the events tab within CloudFormation.

111
00:06:46.840 --> 00:06:49.760
Now, when things get created or fail,

112
00:06:49.760 --> 00:06:55.820
it logs or tracks are changes in this events tab so we can see our first

113
00:06:55.820 --> 00:07:00.240
event is it's a user initiated creation in progress.

114
00:07:00.240 --> 00:07:02.610
And then, as resource is, get created,

115
00:07:02.610 --> 00:07:06.210
they'll appear in this Event-Hubs like so you can see,

116
00:07:06.210 --> 00:07:11.640
we started creating an instance, sync your itty group that completed.

117
00:07:11.640 --> 00:07:17.340
And then we created Easy to instance, and then that completed.

118
00:07:17.340 --> 00:07:23.900
So you can see now are stack info is set to create complete so we can now view.

119
00:07:23.900 --> 00:07:27.140
Our resource is, and we have two of them.

120
00:07:27.140 --> 00:07:31.010
We can look at the parameters we specified and we can look at.

121
00:07:31.010 --> 00:07:36.690
The outputs is well, now the outputs are exactly what they sound like.

122
00:07:36.690 --> 00:07:40.140
They're output ID values from our template creation.

123
00:07:40.140 --> 00:07:44.890
So what I want to do is locate this instance in my ec2 console,

124
00:07:44.890 --> 00:07:48.620
and let's just verify that the security group is attached

125
00:07:48.620 --> 00:07:56.240
and created and the tags populated, so let's go to easy to.

126
00:07:56.240 --> 00:08:01.360
We have one running instance, and that is the same resource.

127
00:08:01.360 --> 00:08:02.770
You can see the instance.

128
00:08:02.770 --> 00:08:05.030
IDE is the same.

129
00:08:05.030 --> 00:08:08.440
It's a T three small, which we specified.

130
00:08:08.440 --> 00:08:11.290
It's got our Web server Instance Security group,

131
00:08:11.290 --> 00:08:14.690
which was created by our template and you can see it

132
00:08:14.690 --> 00:08:18.040
allows the SSH rule that we define.

133
00:08:18.040 --> 00:08:22.630
And if we look at tags we can see, we have our environment of Dev.

134
00:08:22.630 --> 00:08:28.240
So this exists for both the E C two as well as the instantiation group.

135
00:08:28.240 --> 00:08:32.260
You'll also notice that CloudFormation actually puts its own

136
00:08:32.260 --> 00:08:36.440
tags on Resource Is that belonged to a stack.

137
00:08:36.440 --> 00:08:38.850
You can see it's got to logical IDE.

138
00:08:38.850 --> 00:08:43.140
We has our stack IDE, which is the stack we just deployed,

139
00:08:43.140 --> 00:08:47.790
and it lists what stack name this resource belongs to.

140
00:08:47.790 --> 00:08:53.610
So now that we have seen and verified are re sources are created correctly,

141
00:08:53.610 --> 00:08:54.300
Let's go ahead.

142
00:08:54.300 --> 00:08:57.210
We'll pause here and in the next clip,

143
00:08:57.210 --> 00:09:03.000
we'll go ahead and run an update of this stack. So we can view how those work

