WEBVTT

00:02.200 --> 00:08.330
In the last lecture, we added this x-axis. I now want to come to the end of the section by showing you

00:08.480 --> 00:12.650
how you can add your own options here for your chart.

00:12.890 --> 00:18.630
You can right now not choose any options here and would be nice if we could take the option whether

00:18.630 --> 00:21.080
we want to show the axis or not

00:21.260 --> 00:23.520
amongst some other default options.

00:23.600 --> 00:24.830
While that's easy to do,

00:24.890 --> 00:26.930
now I'll show you how it works.

00:26.960 --> 00:33.770
We can add our own configuration objects by going to the capabilities.json file again and here,

00:33.920 --> 00:39.120
after this array where we set up the dataViewMappings here,

00:39.650 --> 00:47.000
I'll add a new node, objects because these options we can set up are basically named objects, objects

00:47.000 --> 00:49.370
we can work with in our Typescript code.

00:49.850 --> 00:55.730
So that's objects and here we can now define our own option. Give it any name you like,

00:55.730 --> 01:03.260
I'll name it enableAxis because this what I want to trigger here and that takes again a Javascript

01:03.320 --> 01:04.930
object here in is json

01:05.030 --> 01:09.070
notation, like that. In there,

01:09.150 --> 01:13.530
I have to set up display name, so that node name here was up to you

01:13.550 --> 01:22.170
but in each node name, in each option you create, you have to define a display name, so I'll name this

01:22.300 --> 01:22.890
enable axis,

01:22.910 --> 01:25.680
that is what will show up in our menu thereafter

01:26.690 --> 01:32.800
and thereafter we also need to set up some properties for this option. Here,

01:32.930 --> 01:42.140
again up to you, I'll set up a show property which will be displayed as a toggle, as a switch.

01:42.380 --> 01:48.040
So here I do this by adding a display name which I'll also name enableAxis

01:48.200 --> 01:56.950
but more important, I'll add a type here and that type is also an object where I set bool to true and by

01:57.090 --> 02:02.570
setting bool to true, I'm indicating that this should be a switch because a switch gives you a boolean

02:02.570 --> 02:03.970
value, true or false

02:04.100 --> 02:06.040
and by true, I said this is a boolean,

02:06.050 --> 02:07.090
yes it is,

02:07.220 --> 02:09.470
so now it will display as such a switch.

02:09.680 --> 02:17.330
If we save this and we reload our chart here, you now see all of a sudden we get a couple of options

02:17.330 --> 02:21.340
here but not our own one strangely enough, I'll come back to this

02:21.440 --> 02:26.810
but we've got a couple of default options which are provided by Power BI since they don't require our

02:26.810 --> 02:27.850
help to work.

02:28.010 --> 02:35.980
So here, we can switch some things and make sure, well to do styling like we can style all the visuals.

02:36.020 --> 02:40.670
However as I mentioned, our own option is not showing up here

02:40.940 --> 02:47.840
and the reason for this is that when running our code, when displaying our visual, Power BI is detecting

02:48.080 --> 02:55.460
that we're not able to handle a change in the option, that whenever we switch this switch, we don't

02:55.460 --> 02:56.210
do anything,

02:56.210 --> 02:57.910
we only set it up here,

02:57.920 --> 03:00.580
we don't handle it in our Typescript code.

03:00.630 --> 03:03.210
That is something we'll need to handle next, that

03:03.230 --> 03:06.650
we actually retrieved the settings the user set up.
