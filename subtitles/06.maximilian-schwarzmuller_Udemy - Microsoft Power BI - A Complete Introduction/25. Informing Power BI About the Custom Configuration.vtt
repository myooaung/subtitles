WEBVTT

00:02.210 --> 00:06.860
So in the last lecture, we added a whole bunch of code and still we can't see our own option but that's

00:06.860 --> 00:13.300
only because one function, one method in our class here where we also have the update method is missing,

00:13.460 --> 00:17.680
let's add this method. I'll add it below this update method,

00:17.810 --> 00:24.920
so below here. There I'll add a new public method which is called and the name is important

00:25.040 --> 00:29.640
enumerateObjectInstances.

00:30.030 --> 00:32.010
This will receive options of type

00:32.010 --> 00:38.970
enumerate visual object instance options, a very short name but basically that means that gives us

00:39.060 --> 00:41.190
all these options we set

00:41.190 --> 00:48.930
and with that, we have a method which will be executed by Power BI which should return a visual object

00:49.560 --> 00:52.110
instance enumeration.

00:52.650 --> 00:59.250
And whilst these are all very long names, what this will by the end do is it will extract the data

00:59.430 --> 01:06.620
the user might set up and therefore enable these buttons in the first place and pass that into,

01:06.630 --> 01:16.260
by Power BI so to say, so that Power BI can then give them to us, so that the code where we check for the

01:16.260 --> 01:24.000
existence, where we check with the get option value here, if the enableAxis is set, where we try

01:24.000 --> 01:28.590
to access the objects, so that this is actually populated.

01:28.680 --> 01:34.960
We need to add this method so that Power BI populates this for us in the metadata of our data view.

01:35.610 --> 01:45.020
So what goes into this method then? Well we have an object name here, that is on our options,

01:45.020 --> 01:53.070
the object name. We call or Power BI calls this method for each option we may configure and executes it

01:53.240 --> 01:53.900
on it.

01:53.900 --> 01:58.020
So this forEach option is executed for each option, so that is here,

01:58.040 --> 02:02.300
in our case only one option but it would be executed if we had more than one too.

02:02.300 --> 02:09.890
So for enableAxis, this would be enableAxis here basically. Then we have our object enumeration

02:10.130 --> 02:18.440
which is a visual object instance or an array of such instances

02:18.550 --> 02:20.700
and that's an empty array at the beginning.

02:20.970 --> 02:25.610
That basically is the array of our objects you could say.

02:25.690 --> 02:29.840
Now I want to switch my object name and

02:29.880 --> 02:35.520
keep in mind this would be executed more often than once, so if you have multiple possible settings you

02:35.520 --> 02:40.810
set up in the capabilities.json file, you need multiple cases in this switch statement.

02:40.980 --> 02:43.950
I only, whoops, let me type here please,

02:43.980 --> 02:49.400
I only need one case and that is enableAxis because that is the only option we defined

02:49.410 --> 02:53.050
and that's a normal switch case statement here

02:54.000 --> 02:58.090
and that of course is object name here, not just the object.

02:58.410 --> 03:04.770
So if we have the case that it's enableAxis, then I want to push that onto my object enumeration, so onto

03:04.770 --> 03:10.530
the array of all objects which in the end is then available in the metadata where we try to access it. I'll

03:10.600 --> 03:14.500
call push here therefore, push a Javascript object on that

03:14.700 --> 03:20.470
and this Javascript object I push here should have an object name property and here,

03:20.490 --> 03:28.550
this is simply the object named we retrieved. It also should have a properties property, that is a Javascript

03:28.550 --> 03:31.950
object where we will have a show property

03:32.000 --> 03:39.920
in our case since we're in the enableAxis case and this will be our bar chart settings, enableAxis

03:40.040 --> 03:40.580
show,

03:40.580 --> 03:51.220
so what we retrieve there. Now selector should be null, that is the selector which identifies our object,

03:51.820 --> 03:53.520
now interesting to us here

03:53.920 --> 03:59.950
and with that, Power BI now is aware of our options and able to do something on each option.

04:01.350 --> 04:08.170
Now with this in place, after our switch statement, I can return this object enumeration array.

04:08.430 --> 04:14.480
So this array of all our objects in our Power BI is aware of it and our code can be aware of it.

04:14.520 --> 04:22.170
Now with this if we save that and go back to our bar chart and reload it and reload that here,

04:22.190 --> 04:25.750
so switch to another tab and then back, you see enableAxis here

04:25.880 --> 04:32.370
and now if you switch this, you see the axis is shown or hidden depending on your setting.

04:32.540 --> 04:34.630
So this is how you added your own setting

04:34.700 --> 04:40.070
and of course you can go much more complex than this, this is just to get you started.
