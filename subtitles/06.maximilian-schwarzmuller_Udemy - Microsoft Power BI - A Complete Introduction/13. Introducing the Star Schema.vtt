WEBVTT

00:02.550 --> 00:06.530
We want to shape our current query and to do that,

00:06.560 --> 00:13.250
we want to apply a simple data model schema, the star schema and we will build the base for that schema

00:13.340 --> 00:17.120
right now in the query editor. Before we start,

00:17.150 --> 00:24.290
let me make a quick note. In this course, we will focus on the capabilities of the Power BI tools,

00:24.320 --> 00:27.910
so how these tools work and how you can connect those tools, 

00:28.280 --> 00:34.570
nevertheless I think it makes sense to take a quick look at the basic concept of such a star schema.

00:34.850 --> 00:36.240
Let's do that right now.

00:37.240 --> 00:42.280
So if you ever heard about the star schema, you might have heard about two things,

00:42.280 --> 00:44.380
FACT table and DIM tables.

00:44.560 --> 00:48.240
Well, a FACT table is a single table in a star schema,

00:48.250 --> 00:52.520
whereas the DIM table, the dimension tables exist multiple times,

00:52.900 --> 00:55.750
let's take a closer look at how this works.

00:55.750 --> 00:57.870
Imagine you have the following tables,

00:57.880 --> 01:04.030
you have one table named products, in this products table, you have different columns which are equal

01:04.030 --> 01:05.860
to the bullet points you see right here.

01:06.220 --> 01:11.800
The first bullet point is the identifier product and the important thing is that this identifier product

01:11.800 --> 01:14.110
column is a unique column,

01:14.110 --> 01:20.860
this means each value exists only once and each of this identifier identifies the product,

01:20.860 --> 01:23.280
this means the product type, the price per unit,

01:23.280 --> 01:26.000
the cost per unit and other types of information.

01:26.440 --> 01:32.530
So this is the first table that you might have. You might have a second table, the customers table. In

01:32.530 --> 01:36.830
this customers table, you have the first column which is the identifier of the customers,

01:36.880 --> 01:42.400
again a unique value for each row and each identifier is defined by the first name,

01:42.400 --> 01:44.580
the second name, the age and so on,

01:44.620 --> 01:50.500
so any information that you could add to a potential customer table. You might have a third table,

01:50.500 --> 01:54.750
the time table. The time table again has one unique column,

01:54.760 --> 01:58.550
this is the identifier date column which would basically be the date,

01:58.600 --> 02:05.850
so day, month and year and some other information like year, quarter, month, week or day

02:06.260 --> 02:09.740
and you might have a fourth column, the SalesPoint column.

02:10.030 --> 02:15.700
The important thing is that you again often identify an IdentifierGeo which is the unique identifier of each sales

02:15.700 --> 02:21.760
point that you have and the sales point might be defined by the continent, the country, the city, the address

02:21.820 --> 02:23.980
or anything else that you might imagine.

02:24.460 --> 02:28.760
Now as you can see, there should be a certain relation between those data,

02:28.770 --> 02:29.650
right?

02:29.830 --> 02:35.110
If you have a sales point where you sold the product, you might want to know what kind of product you

02:35.110 --> 02:37.480
sold, who bought the product,

02:37.480 --> 02:39.750
so which customer you sold the product to

02:40.000 --> 02:47.500
and when you sold the product. So you need something like a connection that allows you to create a communication

02:47.500 --> 02:50.060
base for the four tables that you have right here.

02:51.100 --> 02:57.670
Now at the moment, you only have those four DIM tables, the dimension tables and you have to add that combination

02:57.670 --> 02:59.110
table as I would call it,

02:59.110 --> 03:07.360
so this table. This table combines the information of the four tables with the unique identifiers we just

03:07.360 --> 03:08.460
talked about,

03:08.620 --> 03:11.740
you can see them in the first four bullet points.

03:11.740 --> 03:16.710
The important thing is that this FACT table is exactly what I just said,

03:17.350 --> 03:23.890
if you create a schema like that, a star schema, then you can connect all the four tables with just that

03:23.890 --> 03:29.770
FACT table in the middle because if you look at the DIM table products, you can see that the identifier product

03:30.040 --> 03:31.820
is also in the FACT table.

03:32.110 --> 03:37.180
The same thing is the DIM table customers with the identifier customers which is also in the FACT

03:37.180 --> 03:38.170
table,

03:38.190 --> 03:43.260
this is also true for the remaining two tables, the time table and the SalesPoint table.

03:43.270 --> 03:49.140
Now with this schema, we would be able to create a basic data model using the star schema

03:49.150 --> 03:53.390
as I just said and by that, we could give our model some more structure.

03:54.510 --> 04:00.770
Now the question you might ask yourself is, what has this to do with our current population combined

04:00.770 --> 04:04.970
query that we have because currently, we have a structure like this.

04:04.970 --> 04:06.750
We have the population combined query,

04:06.800 --> 04:11.890
so one table with the country ID, the country, the year and so on.

04:12.050 --> 04:12.960
This is true

04:13.370 --> 04:20.570
but what if we were to create the following schema. We would split our population combined table into

04:20.630 --> 04:24.500
a DIM table region and a DIM table age,

04:24.500 --> 04:29.890
this means we would kind of spin off the information about the countries and about the age groups.

04:29.900 --> 04:30.970
Now why would we do that?

04:31.160 --> 04:36.710
Well as you can see in the DIM table region, we have the country ID which is an information that we already

04:36.710 --> 04:37.330
have,

04:37.610 --> 04:40.600
we have the country, also something we already have

04:40.940 --> 04:42.570
and we have that region,

04:42.650 --> 04:45.030
this is something that we don't have at the moment

04:45.380 --> 04:47.800
and this is an information that I want to add.

04:48.170 --> 04:53.510
Now we could add that in the population combined query, of course this is not a problem but I think it's

04:53.510 --> 04:59.600
better if we apply a structure like that to keep our model, well better organized because then you have

04:59.660 --> 05:05.900
two tables with additional information like region or age and you have that FACT table which combines

05:05.900 --> 05:11.600
the information and the only information we have in the FACT table about the country is the country ID,

05:11.690 --> 05:17.350
so only one column. The same thing is true for the DIM table age or age group,

05:17.360 --> 05:20.620
we will see how we will call that. In the DIM table age,

05:20.630 --> 05:22.190
we have that age group ID,

05:22.400 --> 05:23.700
we don't have that at the moment

05:23.720 --> 05:26.580
so we have to create that, we have the age group,

05:26.600 --> 05:32.750
so the 0 - 4 and so on, this is something that we have and we want to have the category. Well this

05:32.750 --> 05:37.470
category is something like baby, adult, senior and so on,

05:37.490 --> 05:43.910
so also something that we have to create. Now again, we will create that separately in the DIM table

05:43.940 --> 05:48.300
age group and only add the age group ID to our FACT table,

05:48.310 --> 05:53.770
so to the population table in the middle and this is what we want to do in the next videos.

05:53.940 --> 06:00.990
So we want to turn that single population combined query into a basic structure for a star schema like

06:00.990 --> 06:01.960
this.

06:02.100 --> 06:06.740
Now I think it's time to start that, let's do this right now.
