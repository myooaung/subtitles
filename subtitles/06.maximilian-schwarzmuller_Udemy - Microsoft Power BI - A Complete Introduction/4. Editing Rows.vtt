WEBVTT

00:02.740 --> 00:07.370
Time to start working with the query editor and time to work on the rows.

00:07.450 --> 00:09.420
So here I am in the first query

00:09.670 --> 00:14.630
and one thing we can see is that the color names are not really good

00:14.810 --> 00:16.660
and we're working on a data model

00:16.660 --> 00:22.870
finally in this project and in Power BI and whenever you work on data models, you have to make sure that

00:22.870 --> 00:28.240
the columns are named correctly and that they really represent the data that you can see in the corresponding

00:28.240 --> 00:30.160
column. At the moment,

00:30.160 --> 00:31.420
this is not the case

00:31.630 --> 00:38.140
so we have to change that column names and good names for that columns that would be the data in row

00:38.170 --> 00:39.460
two.

00:39.460 --> 00:42.560
Now you might say we had the problem in the first module,

00:42.560 --> 00:44.400
right and you're right,

00:44.630 --> 00:48.500
however let's take a more detailed look at the problem right now.

00:48.940 --> 00:54.650
So we want to make sure that the names in the second row are the column names

00:55.090 --> 00:57.880
and to do this, we have to make two things.

00:57.970 --> 01:02.890
We first have to delete the first row because this row, nobody needs that actually

01:02.890 --> 01:08.400
and then we have to turn that second row which will then be the first row of course into the header,

01:08.470 --> 01:10.040
so the column names.

01:10.160 --> 01:12.000
Now let's see how this works.

01:12.040 --> 01:15.330
The first thing we have to do is to delete the first row is

01:15.550 --> 01:23.190
we have to go to the home ribbon right here and then go to the reduce row section right there. In this

01:23.190 --> 01:23.630
section,

01:23.630 --> 01:24.690
we have two options,

01:24.730 --> 01:27.340
we can either keep rows and if you click right here,

01:27.340 --> 01:30.450
you can see that you have different options on what you want to do with those rows

01:30.610 --> 01:32.130
but we don't need that right now

01:32.470 --> 01:35.770
and you have the remove rows functionalities right there

01:36.130 --> 01:38.180
and this is what we need, right?

01:38.200 --> 01:39.910
We have that remove top rows,

01:39.910 --> 01:44.560
this is the one that we want to use right now but you can also see that you have multiple options on

01:44.620 --> 01:46.120
how to work with that rows.

01:46.360 --> 01:49.780
So you can remove the bottom rows, alternate rows,

01:49.780 --> 01:55.510
this means you can define a pattern which allows you to remove every fifth row for instance and you

01:55.510 --> 01:59.140
can also remove rows depending on certain row types,

01:59.140 --> 02:04.250
so if you have duplicates, blank rows or errors. We will take a look at those throughout the course

02:04.420 --> 02:08.320
but right now, we only need the remove top rows option right here.

02:08.710 --> 02:10.020
Let's press that

02:10.270 --> 02:13.690
and now we have to specify how many rows we want to delete.

02:13.690 --> 02:15.660
Well in our case, this is easy,

02:15.670 --> 02:19.070
we start counting from the top so we want to delete the first row,

02:19.120 --> 02:27.790
so one, like this. We now press enter or OK and we can see that the first row is gone, again

02:27.970 --> 02:33.520
you can see that also in the applied steps, remove the top rows and you can see that from the core perspective

02:33.610 --> 02:34.840
right there.

02:34.990 --> 02:41.380
Now that we did that, we have to make one more thing, we have to turn that first row into a header.

02:41.710 --> 02:47.580
So you can simply go to the home ribbon and in the right part here, you can find the use first row

02:47.590 --> 02:49.060
as header function.

02:49.060 --> 02:51.280
Now this is the transform area,

02:51.460 --> 02:53.260
don't we have a transform ribbon?

02:53.500 --> 02:54.390
Yes we have that

02:54.460 --> 03:00.340
and if we click right here, you can see that you also have that use first row as headers option right there

03:00.640 --> 03:06.370
and the important thing is that the functionality is exactly the same but there are some functions which

03:06.370 --> 03:08.210
you can find in the multiple ribbons

03:08.260 --> 03:12.010
and this just allows you to work with Power BI the way you prefer,

03:12.010 --> 03:16.350
however the important thing is that we want to turn the first row into a header

03:16.630 --> 03:21.610
and if you click the button in the upper part, this will happen immediately. If I click it in the lower part,

03:21.850 --> 03:23.870
you can find that you have two options,

03:23.980 --> 03:28.660
you can either turn the first row into the headers which is what we want to do or you can turn the

03:28.660 --> 03:30.430
header into a first row.

03:30.430 --> 03:32.450
Now let's click the first to see what happens,

03:32.530 --> 03:35.700
I know we don't want to do that but just to make sure that you saw it.

03:35.890 --> 03:41.580
So if you click that, you can see that the first row is now equal to the header,

03:41.770 --> 03:44.940
well this is what happens right there but we don't want to do that.

03:45.040 --> 03:50.890
So we can undo that step by simply going to the applied steps area right here and pressing onto that

03:50.970 --> 03:51.810
x,

03:51.880 --> 03:58.570
if we do that, you can see that we undid our last action and this is good because we didn't want to turn

03:58.570 --> 03:59.950
the headers into first row,

04:00.130 --> 04:06.490
we wanted to turn the first row into headers and let's do this now by clicking here and we can see that

04:06.490 --> 04:09.000
we now cleaned that table

04:09.040 --> 04:14.670
initially. We're not done yet of course but I think with the first query, this looks fine for a moment.

04:15.160 --> 04:19.030
Let's see what you have to do in the second query, right here.

04:20.140 --> 04:22.200
In this query we have the same problem

04:22.190 --> 04:24.230
first, we see that the first row,

04:24.250 --> 04:26.250
well this should be the header actually

04:26.680 --> 04:31.000
and this is just a problem that we have because we change the options,

04:31.000 --> 04:37.900
you remember we disabled this automatic data detection and this is the reason why Power BI doesn't turn that

04:37.900 --> 04:42.600
first row into the header automatically because it would have recognized that this is probably the

04:42.610 --> 04:43.320
header.

04:43.330 --> 04:48.550
However we know how we can change that so we can simply go to the home ribbon or we can stay in the transform ribbon

04:48.550 --> 04:49.820
of course, as you prefer

04:49.960 --> 04:57.140
but let's click here and press use first row as headers, like this and we can see that we did that

04:57.430 --> 05:04.840
but there is another problem in that query. If you look at the rows 9 to 12, you can see that N/As, N/A

05:04.850 --> 05:06.550
this might be an error,

05:06.580 --> 05:13.000
right? Now if we would go to the home ribbon, go to remove rows and press remove errors,

05:13.190 --> 05:19.610
well this wouldn't work because this is an error as it looks to us but at the moment,

05:19.750 --> 05:26.050
let me just unselect that, we can see that all of these columns are formatted as text,

05:26.170 --> 05:29.530
you can find that right here but we'll talk about that later.

05:29.610 --> 05:34.990
Now the problem is that N/A is not recognized as an error at the moment from power BI,

05:35.170 --> 05:35.970
it's just text

05:35.970 --> 05:40.090
so this is basically the same thing like 2000 or Afghanistan right here,

05:40.090 --> 05:42.300
it cannot identify that as an error

05:42.580 --> 05:48.880
so we cannot use the remove errors function at the moment in this table but we have another option how

05:48.880 --> 05:50.140
to solve that problem,

05:50.230 --> 05:52.270
we could apply a filter,

05:52.510 --> 05:53.810
let's see how this works.

05:54.160 --> 05:57.530
So first, we select a column that includes that N/A, 

05:57.610 --> 06:03.340
so in our case this location column right here and if we now press onto that error right here, you can

06:03.340 --> 06:06.070
see a list of the rows of that column,

06:06.220 --> 06:10.120
not all of the rows of course, as you can see where that list may be incomplete

06:10.120 --> 06:16.110
command right here. If you press load more, you can see that all of the rows are loaded right now

06:16.330 --> 06:19.310
and now you have two options on how to find that N/A.

06:19.330 --> 06:21.490
You could either look for it right here

06:22.210 --> 06:26.670
and we find it right there or you can type N/A

06:27.160 --> 06:34.370
and then you can see that we have N/A in this section. If you now unselect N/A and press OK,

06:34.870 --> 06:40.960
then you have a problem because now you unselected N/A which is totally correct

06:40.960 --> 06:46.920
but you also unselected all of the other countries that were not displayed in that window.

06:47.200 --> 06:48.440
Let's see what happened.

06:48.550 --> 06:54.730
If I click onto the filter, you can see that we unselected all the countries that didn't include that

06:54.790 --> 06:56.030
N/A term

06:56.290 --> 06:57.830
and this is a big problem

06:57.940 --> 07:01.460
so you have to be really careful when you use that search function.

07:01.480 --> 07:04.020
This is why I wouldn't recommend that at the moment.

07:04.180 --> 07:12.000
Now let's press cancel and undo that filter and go back to the filter again and now look for N/A manually,

07:12.310 --> 07:13.750
we have it right here.

07:13.900 --> 07:22.230
Now if we unselect it now and press OK, we can see that only N/A was unabled or was filtered,

07:22.270 --> 07:25.960
let's check that by clicking the filter and pressing load more

07:26.380 --> 07:32.880
and as you can see, we loaded all of the countries, the only country that is not in the list is our N/A

07:32.880 --> 07:33.880
right here,

07:33.910 --> 07:35.300
so this is fine now.

07:35.560 --> 07:37.940
So we cleaned the second table,

07:38.290 --> 07:43.060
let's go onto the third query, right there. In this query,

07:43.090 --> 07:45.050
I don't see a problem right here

07:45.280 --> 07:50.420
but if I scroll down, we can see that we have some blank rows in there

07:50.770 --> 07:54.270
and now we have two options on how to solve that problem,

07:54.280 --> 07:57.730
that's also something that you will find in Power BI more often.

07:57.730 --> 08:01.420
You normally don't have one way on how to solve your problems,

08:01.420 --> 08:08.230
of course there are better ways or worse ways but generally, you have multiple options for many problems.

08:08.350 --> 08:12.640
In this case, we can solve the problem using two different approaches.

08:12.640 --> 08:15.070
One approach would be the filter again,

08:15.190 --> 08:21.130
so if you click onto the filter right here for instance and now unselect a blank column like this and

08:21.130 --> 08:27.070
press OK, we can see that we don't have that blank column, that blank row anymore.

08:27.460 --> 08:31.490
Now this is one option but you already know how to filter rows,

08:31.510 --> 08:37.480
so let's undo that by clicking here again and again you see how important this apply steps function

08:37.480 --> 08:37.880
is,

08:37.930 --> 08:39.250
it really is a big help

08:39.370 --> 08:44.880
when you work with the query editor. Now we want to get rid of those blank rows which are back again

08:44.920 --> 08:51.250
now and to do this, we can go to the home ribbon right here and go to remove rows

08:51.670 --> 08:54.760
and here we have that remove blank rows option right there.

08:55.000 --> 08:59.380
If you click that, you can see that we remove the blank rows.

08:59.740 --> 09:01.970
So this looks almost good right now,

09:01.990 --> 09:07.230
the only thing we have to change is that again, the first row has to be turned into headers.

09:07.360 --> 09:13.150
I explained that this is just due to our options but this is good for the moment because then we see

09:13.390 --> 09:20.110
how the data are imported into the query editor in a raw form without any changes applied automatically.

09:20.110 --> 09:25.670
Now let's change that by pressing the use first row as headers button again, like this.

09:26.760 --> 09:27.680
This is it,

09:27.720 --> 09:31.760
we now did our first cleaning of the rows in the query editor

09:32.070 --> 09:37.550
but one thing you might have seen throughout that cleaning procedure, if you look at the different queries,

09:38.220 --> 09:40.910
you can see that they are basically the same,

09:41.160 --> 09:44.060
the only difference is the period they cover.

09:44.070 --> 09:49.580
So wouldn't it be great if we could combine those three queries into one single query?

09:49.980 --> 09:52.580
Let's see how this works in the next video.
