WEBVTT

00:02.530 --> 00:08.200
Now that we learned about all these files and folders, let's start changing our visual and let's leave

00:08.260 --> 00:12.030
the easy example of having some text in here. Instead

00:12.070 --> 00:14.840
it would be nicer to have some real shapes

00:15.130 --> 00:21.520
and as I showed you earlier in this module, for shapes, we can use d3, this package which makes it easy

00:21.520 --> 00:30.110
for us to build and manage svg or actually any elements but especially svg elements in our chart.

00:30.460 --> 00:34.830
So for that, we need to install that package and we do this in the command prompt

00:34.990 --> 00:40.960
by canceling this running process. On Windows you can do this by hitting control-c twice or three times

00:40.960 --> 00:47.650
actually to skip this and automatically quit, on Mac or Linux which you can also use for developing

00:47.650 --> 00:48.240
this,

00:48.280 --> 00:51.310
you'll also press control-c but only once.

00:51.490 --> 00:53.430
Now let's quit this process

00:53.620 --> 01:00.610
and now we need to install a new package which I will do by running npm install and now not -g because

01:00.610 --> 01:02.470
I don't want to install it globally,

01:02.470 --> 01:09.020
instead it should stay in this bar chart project which is why we should run it in this folder and there,

01:09.020 --> 01:10.880
it's the d3

01:10.970 --> 01:12.700
package, though here

01:12.790 --> 01:15.000
I won't use the latest version

01:15.040 --> 01:17.400
since there we had some substantial changes

01:17.440 --> 01:20.940
and it doesn't have any disadvantages of using the older one,

01:20.990 --> 01:27.300
so the version I will use is actually 3.5.5.

01:27.340 --> 01:33.630
Now I will add a flag, --save which will add an entry to package.json,

01:33.670 --> 01:36.750
you don't need that flag but to keep track of all the dependencies,

01:36.790 --> 01:37.880
you should add it.

01:38.200 --> 01:44.380
So now you can hit enter and this will now download it and create a new folder in your project folder,

01:44.530 --> 01:48.400
the node_modules folder which stores all your dependencies.

01:48.400 --> 01:50.850
If you go back to your editor and click this refresh

01:50.850 --> 01:56.470
icon here, you will see this new node_modules folder which holds all third-party dependencies you installed,

01:56.670 --> 02:00.090
the d3 folder and dependency we installed with this command,

02:00.160 --> 02:03.920
you can also see that we now have an entry in the package.json file.

02:04.120 --> 02:10.600
Now this is one thing and we also now need to inform our project about this third-party package because

02:10.600 --> 02:17.780
it is pbiviz start command which will bundle all our code in the end and pull all our files together,

02:17.890 --> 02:24.190
so we need to inform pbiviz, the Power BI visual tools that we added a new package which it should include

02:24.460 --> 02:28.930
and we do this in the pbiviz.json file here under externalJS,

02:28.960 --> 02:38.400
what you do is you simply link that file by pointing to node_modules/d3 and then in there

02:38.450 --> 02:40.390
and you can actually have a look at this,

02:40.470 --> 02:41.580
in d3,

02:41.640 --> 02:47.940
we want to include this d3.min.json file, so d3.min.json and this will make

02:47.940 --> 02:50.340
sure that we actually have this file available.

02:50.400 --> 02:57.120
So don't forget to save this pbiviz.json file and with that, we're ready to use d3, well almost.

02:57.270 --> 03:05.220
Keep in mind we're using Typescript here and since we use Typescript, we actually need to install a bridge

03:05.340 --> 03:12.540
from this Javascript package which the d3 package is to Typescript code because Typescript doesn't

03:12.990 --> 03:16.700
recognize the shape or the schema

03:16.730 --> 03:23.820
d3 uses. So we can't get Typescript support for d3 if we just install the Javascript package because

03:23.820 --> 03:27.530
how would Typescript know which type a certain object there uses and so on, 

03:27.540 --> 03:28.460
it couldn't.

03:29.050 --> 03:36.060
Thankfully a lot of these translation files are available for download and we can easily install the

03:36.060 --> 03:44.280
types for this d3 package by running npm install, still in the same folder, in the bar chart folder,

03:44.410 --> 03:54.710
now add types d3 and here version 3.5.38 with the @ separator in between.

03:54.750 --> 03:59.150
And then I'll add dash to save dev to mark it as a development-only dependency,

03:59.190 --> 04:04.440
it will then be stored as such in the package.json file and it is clear that we only need this here

04:04.440 --> 04:07.700
in development because we only use Typescript during development.

04:08.040 --> 04:11.690
I can now hit enter and this will install it and also store it

04:11.700 --> 04:16.840
in the node_modules folder as you can see in there once I refresh this,

04:16.830 --> 04:20.640
here we have the types folder. With the types installed,

04:20.760 --> 04:26.790
we need to add them to our tsconfig.json file because right now, tsconfig or Typescript

04:26.880 --> 04:28.980
wouldn't be aware of these types.

04:29.040 --> 04:37.530
So what we add here is the type routes node in this json file which takes an array as input and

04:37.530 --> 04:44.850
that should be type routes and in this array, you simply add a path with ./ for a relative path pointing

04:44.850 --> 04:48.450
to your node_modules folder

04:49.780 --> 04:56.250
and in this node_modules folder, it's the @types folder and with that, we're telling Typescript whenever

04:56.260 --> 05:01.370
you're encountering some code you don't recognize, like us calling d3,

05:01.630 --> 05:06.980
have a look at node_modules types folder and see if you can find some translation for it there

05:07.120 --> 05:10.610
and for d3 since we installed it, it will find that.

05:10.630 --> 05:14.090
Don't forget to save this change too and thereafter,

05:14.200 --> 05:21.130
don't forget to rerun pbiviz with the start command to keep on compiling our code.

05:21.130 --> 05:27.340
With that, we installed d3 and the types and we're now ready to use that to create our own shapes and

05:27.400 --> 05:29.320
add them to our chart.
