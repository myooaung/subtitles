1
00:00:05,440 --> 00:00:11,750
Welcome to this lecture on dashboard deployment let's deploy our applications to the web so other people

2
00:00:11,750 --> 00:00:12,490
can use it.

3
00:00:12,710 --> 00:00:16,900
So far all of our applications have just been locally hosted on our computer.

4
00:00:17,000 --> 00:00:21,590
But we want other people to be able to visit our dashboards from other computers what we need to do

5
00:00:21,710 --> 00:00:26,600
is take our application dashboard service to the Web through some sort of hosting service and then people

6
00:00:26,600 --> 00:00:29,450
can visit that your L and play around for dashboard.

7
00:00:29,450 --> 00:00:32,840
We already have a full step by step guide for this deployment in the guidebook.

8
00:00:32,840 --> 00:00:37,710
This video is just going to follow along those steps in the guidebook.

9
00:00:37,760 --> 00:00:41,960
Please keep in mind that you have lots of hosting options besides Heroku which is what we use in this

10
00:00:41,960 --> 00:00:42,560
video.

11
00:00:42,800 --> 00:00:47,430
There's options like AWOS Digital Ocean Google Cloud Platform Azure et cetera.

12
00:00:47,600 --> 00:00:49,830
There's dozens and dozens of options.

13
00:00:49,840 --> 00:00:54,290
Keep in mind that the process for the playing a dashboard with Dasch is essentially the same as a flask

14
00:00:54,290 --> 00:00:58,580
application since what dash is creating is a flask application.

15
00:00:59,180 --> 00:01:03,860
So if you want guides for it deploying a flask application similar to our dashboard the various other

16
00:01:03,860 --> 00:01:07,070
platforms we can do is just view this link right here.

17
00:01:07,100 --> 00:01:12,560
It has full step by step guides for the deploying flask app to over a dozen other hosting services.

18
00:01:12,680 --> 00:01:16,430
Since there's so many hosting services it doesn't really make sense to do a single video for all of

19
00:01:16,430 --> 00:01:20,580
them especially since they all seem to follow the same basic process.

20
00:01:20,720 --> 00:01:25,130
What we're going to do is use Heroku since it's one of the easiest to deploy to and it has a free tier

21
00:01:25,130 --> 00:01:26,000
option.

22
00:01:26,040 --> 00:01:30,020
Are we going to do now is continue by deploying the app we just created in the authorization lecture

23
00:01:30,170 --> 00:01:31,120
to the Web.

24
00:01:31,130 --> 00:01:32,550
Let's get started.

25
00:01:32,570 --> 00:01:37,730
The first thing you need to do is go to Heroku dot com and then figure out on the page where you can

26
00:01:37,730 --> 00:01:38,500
sign up.

27
00:01:38,510 --> 00:01:39,650
There's always a free tier.

28
00:01:39,680 --> 00:01:43,910
And keep in mind this page does change from time to time but you can either click sign up over here

29
00:01:43,940 --> 00:01:46,960
but there's usually a sign up for free button somewhere on the page.

30
00:01:47,060 --> 00:01:51,010
Click on sign up for free and then you're going to enter your information.

31
00:01:51,040 --> 00:01:55,030
First Name Last Name email address and then roll and country.

32
00:01:55,030 --> 00:01:57,670
Let me go ahead and fill this out and then create my free account.

33
00:01:57,670 --> 00:01:58,060
All right.

34
00:01:58,150 --> 00:02:03,460
Once you've created your account on Heroku you should receive an e-mail so you just confirmer e-mail

35
00:02:03,610 --> 00:02:08,050
set your password and then it will take you to your dashboard which is that dashboard the Heroku dot

36
00:02:08,050 --> 00:02:11,080
com slash apps and then we want to get started.

37
00:02:11,080 --> 00:02:14,180
So when were you to Heroku its going to ask us what language we're using.

38
00:02:14,180 --> 00:02:15,810
So we're going to be using Python.

39
00:02:16,030 --> 00:02:20,010
So click on python there and then it will take us to a setup page.

40
00:02:20,140 --> 00:02:24,030
And basically this is the entire guide we're going to be following.

41
00:02:24,040 --> 00:02:29,500
So once you click on Python the next step is to click here where it says setup going to zoom in a little

42
00:02:29,500 --> 00:02:30,090
bit here.

43
00:02:31,990 --> 00:02:36,670
And I'm going to click over here which is set up and then you'll see a command here that says download

44
00:02:36,670 --> 00:02:38,740
the Heroku command line interface.

45
00:02:38,860 --> 00:02:43,510
So this will apply to deploy your application directly from your command line and the pending operating

46
00:02:43,510 --> 00:02:47,820
system you are using you'll download for Mac OS Ubuntu or Windows.

47
00:02:47,860 --> 00:02:51,130
Since I'm on a Windows computer at the time that I'm filming this I'm going to download for Windows

48
00:02:51,190 --> 00:02:58,080
64 bit and then click the download button and then down here on the bottom you should see it being downloaded.

49
00:02:58,180 --> 00:03:02,610
I'm going to fast forward in time and install the Heroku command line interface.

50
00:03:02,680 --> 00:03:07,330
Once you've downloaded the Heroku command line interface and you begin to set it up you should see the

51
00:03:07,330 --> 00:03:09,530
options for installing three main components.

52
00:03:09,610 --> 00:03:11,530
One is the Hiroko CLID.

53
00:03:11,530 --> 00:03:15,370
The other one is setting the path to Heroku Seelye and the other one is get.

54
00:03:15,400 --> 00:03:17,260
So go ahead and install all of these.

55
00:03:17,270 --> 00:03:23,380
So click next and it's going to install Heroku click install and let it set up.

56
00:03:23,420 --> 00:03:25,390
It's fast forward in time till this is finished.

57
00:03:25,390 --> 00:03:26,110
All right.

58
00:03:26,110 --> 00:03:30,940
Part of the installation process for the Heroku command line interface is get go ahead and just click

59
00:03:30,940 --> 00:03:33,710
next through these and choose the default options.

60
00:03:33,730 --> 00:03:36,600
So a lot of this is just what get or recognize and what it won't.

61
00:03:36,610 --> 00:03:41,650
So go ahead and just choose all the options that are default and then install that will install it for

62
00:03:41,650 --> 00:03:44,550
us along the Heroku command line interface.

63
00:03:44,590 --> 00:03:47,580
We're going to forward in time until it's finished installing.

64
00:03:47,610 --> 00:03:47,960
All right.

65
00:03:47,950 --> 00:03:52,840
I finished installing the Heroku command line interface and at the next step is to create and activate

66
00:03:52,900 --> 00:03:58,370
and populate a virtual environment using the virtual in vi library which will work very well.

67
00:03:58,390 --> 00:04:03,430
Heroku as a quick note these instructions are going to be slightly different for Windows and Mac OS

68
00:04:03,430 --> 00:04:05,030
Linux users.

69
00:04:05,170 --> 00:04:09,850
That's why I would recommend going to our Python dashboards guidebook and then going down to where it

70
00:04:09,850 --> 00:04:11,110
says deployment.

71
00:04:11,110 --> 00:04:16,720
Scrolling down a little bit and eventually you'll see deploying apps Heroku that step one step two that

72
00:04:16,720 --> 00:04:17,720
we've already gone through.

73
00:04:17,860 --> 00:04:21,480
And then here we're going to start with installing virtual environment.

74
00:04:21,480 --> 00:04:25,990
And if you follow along eventually there's going to be a step five for Windows and a step five for Mac

75
00:04:26,020 --> 00:04:27,400
OS and Linux users.

76
00:04:27,400 --> 00:04:29,410
Since I don't own Windows computers I'm filming this.

77
00:04:29,410 --> 00:04:31,350
I'll be following along with the Windows version.

78
00:04:31,510 --> 00:04:35,860
But keep in mind if you're a Mac OS or Linux user you're going to want to follow with these commands.

79
00:04:35,910 --> 00:04:40,150
They're very similar but they're a little slightly different for things like source activate instead

80
00:04:40,150 --> 00:04:41,720
of just saying activate.

81
00:04:41,740 --> 00:04:42,520
Keep that in mind.

82
00:04:42,520 --> 00:04:46,360
So Mac OS the Linux users you have a separate set of instructions to follow.

83
00:04:46,480 --> 00:04:52,650
When we start talking about creating and activating our populating a virtual A.V. right now we're on

84
00:04:52,650 --> 00:04:58,230
step install virtual NVI what we're going to do now is install it by going to a command line and installing

85
00:04:58,500 --> 00:05:01,080
install virtual EMV at my terminal.

86
00:05:01,110 --> 00:05:03,900
Let's do that right now or I've brought up my command line.

87
00:05:03,940 --> 00:05:12,420
I'm going to type Pipp install virtual envy and this commands the same for Mac OS Linux users or Windows

88
00:05:12,420 --> 00:05:12,870
users.

89
00:05:12,880 --> 00:05:14,320
It's just a simple Pipp install.

90
00:05:14,340 --> 00:05:19,770
Same way we Pittman's called Dash and all the other libraries so just continue on and this will take

91
00:05:19,770 --> 00:05:25,230
just a few seconds to install virtual ENTP once it's finished installing the next step is to actually

92
00:05:25,230 --> 00:05:27,550
create our virtual development folder.

93
00:05:27,650 --> 00:05:32,850
We're going to do is wherever you want on your computer you're going to make a directory and then CD

94
00:05:32,850 --> 00:05:33,840
into it.

95
00:05:33,840 --> 00:05:36,580
Right now ometer users and then my user name.

96
00:05:36,660 --> 00:05:46,340
I'm going to CD to my desktop and now I'm located on my desktop and then I will type M K D R that stands

97
00:05:46,340 --> 00:05:54,440
for make directory and then I will type out my dash app and what this is saying is go to your desktop

98
00:05:54,680 --> 00:05:58,860
and making new directory or a new folder called my underscore dash app.

99
00:05:58,880 --> 00:06:01,690
We want to make sure that we have no spaces in the file path.

100
00:06:02,700 --> 00:06:03,320
OK.

101
00:06:03,440 --> 00:06:06,890
Once I created that directory I can see the into that directory.

102
00:06:06,920 --> 00:06:13,910
So say my cache and you should be able to tab autocomplete this and now I'm located at my dash app folder

103
00:06:14,240 --> 00:06:15,580
underneath my desktop.

104
00:06:15,710 --> 00:06:19,760
And if you type CD and hit enter it should report back that same directory.

105
00:06:20,150 --> 00:06:28,690
Now we want to initialize an empty get repository to say get in it for initialize enter and it's going

106
00:06:28,690 --> 00:06:30,910
to initialize an empty get repository.

107
00:06:31,000 --> 00:06:35,410
And now we're at the step 5 where it's a little different for when the users are Mac OS so reference

108
00:06:35,410 --> 00:06:37,300
the guidebook Mac OS and Linux users.

109
00:06:37,390 --> 00:06:43,180
If you're going along this video we're going to do now is create a virtual environment.

110
00:06:43,180 --> 00:06:55,130
We can do that by typing up Python that M. virtual NVI and then all savey and the enter.

111
00:06:55,320 --> 00:07:00,600
And this is going to create a virtual environment and recall that a virtual environment basically is

112
00:07:00,600 --> 00:07:06,240
a way to make sure you have the same versions of packages inside of your virtual environment so that

113
00:07:06,240 --> 00:07:09,380
you don't have to worry about updates to packages.

114
00:07:09,420 --> 00:07:13,680
I want to fast forward in time until this virtual environment has been finished creating.

115
00:07:13,740 --> 00:07:13,990
All right.

116
00:07:14,010 --> 00:07:15,420
Looks like it's already done.

117
00:07:15,420 --> 00:07:17,980
Now what I'm going to do is activate the virtual environment.

118
00:07:18,120 --> 00:07:22,680
Again keep in mind it's slightly different for Windows users for Mac OS users going to Windows.

119
00:07:22,680 --> 00:07:23,850
So what I do is the following.

120
00:07:24,840 --> 00:07:34,710
I say Period backslash V E and V backslash scripts backslash activate.

121
00:07:34,710 --> 00:07:39,720
Now what this is saying is just go to the scripts folder inside that virtual environment folder and

122
00:07:39,720 --> 00:07:41,210
then activate.

123
00:07:41,220 --> 00:07:45,360
So I run that and notice now in parentheses I see the end of each.

124
00:07:45,600 --> 00:07:50,260
And that means I'm running the virtual environment called v v v v.

125
00:07:50,280 --> 00:07:52,190
That's the actual name of the environment.

126
00:07:52,230 --> 00:07:54,670
So technically you could have called this line of V.

127
00:07:54,680 --> 00:07:58,740
Ian V whatever you wanted was calling it virtual environment.

128
00:07:58,740 --> 00:08:04,770
Now we need to do is install dash at any desired dependencies into our virtual environment.

129
00:08:04,770 --> 00:08:09,090
This is essentially just the list of Pipp install instructions so we can Pippin's all dash Pitman's

130
00:08:09,110 --> 00:08:10,670
thought dash authorization.

131
00:08:10,710 --> 00:08:11,800
So I'll do that as well.

132
00:08:12,120 --> 00:08:17,190
And I'm going to forward it serious and time until I'm done with installing all requirements for a list

133
00:08:17,190 --> 00:08:20,660
of all those requirements just check out the guidebook they're listed right there.

134
00:08:21,030 --> 00:08:24,490
I'll see you in a little bit when I'm finished installing all these libraries.

135
00:08:24,810 --> 00:08:25,070
Right.

136
00:08:25,080 --> 00:08:28,080
I just finished installing all those requirements.

137
00:08:28,080 --> 00:08:32,580
Keep in mind if your dashboard has other requirements like it's using Pandurs or an umpire pantless

138
00:08:32,600 --> 00:08:36,210
data reader you will need to install those in your virtual environment as well.

139
00:08:36,210 --> 00:08:40,680
Since we're doing a relatively simple dashboard that just depends on dash and dash authorization.

140
00:08:40,680 --> 00:08:42,790
We don't need to install those further libraries.

141
00:08:43,130 --> 00:08:52,180
OK so we're going to do now is installing new dependency called Piep install and then unicorn.

142
00:08:52,230 --> 00:08:55,170
So the unicorn enter.

143
00:08:55,500 --> 00:08:59,930
And that's going to allow us to directly connect and push this to our Hiroko application.

144
00:09:00,240 --> 00:09:05,760
So we don't step five again step five is going to be a little different for a users of Mac or Linux

145
00:09:05,820 --> 00:09:07,420
or Windows users.

146
00:09:07,560 --> 00:09:12,090
But now that we have a directory called my flash application and we have a virtual environment for the

147
00:09:12,090 --> 00:09:18,720
libraries we need where we want to do is add a new file to this development folder for my app which

148
00:09:18,720 --> 00:09:24,180
means I'm going to go to the Adam text editor grab the application file add one more line to it and

149
00:09:24,180 --> 00:09:26,250
then save it to my dash app.

150
00:09:26,280 --> 00:09:29,340
And again this is step 6 inside the guidebook.

151
00:09:29,460 --> 00:09:35,370
Let's go ahead and copy the basic authorization section file and add a new line to it so we can successfully

152
00:09:35,460 --> 00:09:42,540
play it to Heroku or here I am at the Adam text editor here I have the previous file it's also in the

153
00:09:42,560 --> 00:09:48,060
guidebook of our authorization section code or we just added some username password pairs and then added

154
00:09:48,060 --> 00:09:51,040
those to the authorization of the actual file.

155
00:09:51,180 --> 00:09:59,160
We need to do now is add one more line here and the line we need to add is server is equal to app server

156
00:09:59,720 --> 00:10:03,970
and that allows dashboards to understand that you're actually deploying this to a server.

157
00:10:03,990 --> 00:10:09,390
So I'm going to save this and then I'm going to save this file to the folder we created earlier on my

158
00:10:09,390 --> 00:10:09,910
desktop.

159
00:10:09,960 --> 00:10:13,000
So I will say file say this.

160
00:10:13,080 --> 00:10:18,150
So underneath this top under my dash app remember'd that's the actual directory recreated at the command

161
00:10:18,150 --> 00:10:18,740
line.

162
00:10:18,780 --> 00:10:25,590
I will save this as app one dot PI and then hit save.

163
00:10:25,600 --> 00:10:27,430
OK so this is app one that pie.

164
00:10:27,490 --> 00:10:32,290
Again it's underneath the folder I created at my desktop what I'm going to do now is add a few more

165
00:10:32,290 --> 00:10:33,040
files.

166
00:10:33,130 --> 00:10:38,680
One of them is a ignore file which is used by get and that identifies files that won't be pushed into

167
00:10:38,680 --> 00:10:39,410
production.

168
00:10:39,610 --> 00:10:45,540
The other one is a deployment file that we're going to need to add a little information about what server

169
00:10:45,760 --> 00:10:47,830
and the file name of our application.

170
00:10:47,830 --> 00:10:52,420
And then another one is a requirements that text file which describes her Python dependencies and that

171
00:10:52,420 --> 00:10:55,370
can actually be created automatically.

172
00:10:55,420 --> 00:11:02,980
Let's start by creating the ignore file rule say file new file and inside of this I'm going to type

173
00:11:02,980 --> 00:11:03,760
in the following.

174
00:11:03,760 --> 00:11:05,310
Let me zoom in here.

175
00:11:05,500 --> 00:11:17,830
We'll say the envy Asterix dot PI see dot D s underscore store and then dot envy.

176
00:11:17,900 --> 00:11:21,440
And again you can always copy and paste this from the actual guidebook.

177
00:11:21,500 --> 00:11:23,870
I'm going to say file save as then.

178
00:11:23,870 --> 00:11:33,010
Back in my desktop under my dash app what I'm going to do is save this as get ignore and just have the

179
00:11:33,110 --> 00:11:36,340
save as all files so here's ignore.

180
00:11:36,380 --> 00:11:37,760
I'm going to save this.

181
00:11:37,970 --> 00:11:39,480
So there's my ignoring you can notice.

182
00:11:39,500 --> 00:11:44,980
Adam should probably change at styling for it that I'm going to create a new file.

183
00:11:45,010 --> 00:11:47,370
This one's going to be our prok file.

184
00:11:47,410 --> 00:11:51,500
It's going to say web Colin G.

185
00:11:51,550 --> 00:11:57,600
Unicorn space app one colon server.

186
00:11:57,790 --> 00:12:04,690
So app one here that refers to that file name the apple in the pie of our application and server that

187
00:12:04,690 --> 00:12:07,220
refers to the variable server inside that file.

188
00:12:07,240 --> 00:12:13,120
So that connects to that server is equal to app that server that we have inside the Apple Pie file.

189
00:12:13,120 --> 00:12:18,730
So right now this is entitled I'm going to save file save as and again under this my dash underscore

190
00:12:18,760 --> 00:12:28,400
app but I'm going to do it just save as all files proc file save that and then that's ready to go.

191
00:12:28,670 --> 00:12:32,740
And then we need a requirements that text file and that can actually be created automatically.

192
00:12:32,900 --> 00:12:36,800
Let me show you how you can do that from your command line going to open up a command line here.

193
00:12:37,340 --> 00:12:40,570
And then I need to CD into the file I created earlier.

194
00:12:40,580 --> 00:12:45,110
Right now I'm partly examples which is not what I want I'll say see the dot dot.

195
00:12:45,330 --> 00:12:51,810
Now I'm at my desktop that is going to change directory into my dash underscore app or whatever you

196
00:12:51,810 --> 00:12:53,510
happen to call your directory file.

197
00:12:53,520 --> 00:12:55,770
And here is where I'm going to run the line.

198
00:12:56,640 --> 00:13:04,990
And let me make sure that my virtual environment is activated will say the backslash the NV backslash

199
00:13:05,560 --> 00:13:09,520
scripts backslash activate.

200
00:13:09,600 --> 00:13:10,030
All right.

201
00:13:10,030 --> 00:13:11,860
Looks like my virtual varments activated.

202
00:13:11,860 --> 00:13:12,400
That's good.

203
00:13:12,400 --> 00:13:20,510
Now I just to say Pip freeze greater than requirements.

204
00:13:20,700 --> 00:13:21,410
XTi.

205
00:13:21,510 --> 00:13:23,760
So going to zoom out a bit so you can see it all in one line there.

206
00:13:25,170 --> 00:13:25,560
All right.

207
00:13:25,650 --> 00:13:30,150
So what's the saying is once you have activated your virtual environment again that's just the line

208
00:13:30,150 --> 00:13:30,700
right here.

209
00:13:30,780 --> 00:13:32,970
It's a little different depending if you're on Mac OS or Linux.

210
00:13:32,970 --> 00:13:38,520
Check the guidebook though we just say that freeze and then grab all the actual libraries installed

211
00:13:38,520 --> 00:13:44,550
in this virtual environment and set it to the requirements file then enter and you should now notice

212
00:13:44,550 --> 00:13:52,980
when you go to your desktop under the my app if you do ls or Diyar and we expand this we now have a

213
00:13:52,980 --> 00:13:59,170
requirements text file which is just a list of all the libraries so we need to run our dashboard.

214
00:13:59,640 --> 00:14:01,010
OK so we're ready to go.

215
00:14:01,170 --> 00:14:06,660
Let's now actually logon to our Heroku account and we can do this at the command line as well.

216
00:14:07,050 --> 00:14:14,860
So we will say Heroku log in and then you're going to need to add to your Heroku credentials.

217
00:14:14,860 --> 00:14:16,100
So we'll do that now.

218
00:14:17,170 --> 00:14:21,110
They the type Heroku create.

219
00:14:21,440 --> 00:14:25,940
And this is where you need to choose a unique name for your actual Dasch application.

220
00:14:26,150 --> 00:14:27,580
The name must start a full letter.

221
00:14:27,590 --> 00:14:31,040
It can only contain lower case letters numbers and dashes.

222
00:14:31,040 --> 00:14:38,290
So I'm going to try to think of something unique here by just saying M 1 1 1 1 1 1.

223
00:14:38,330 --> 00:14:41,930
I don't think anyone's ever chosen that application name since we're on the free tier.

224
00:14:41,960 --> 00:14:46,660
That's where we need to do so again you can't use this actual name because I'm creating it right now.

225
00:14:46,880 --> 00:14:48,430
Choose your own unique name here.

226
00:14:48,440 --> 00:14:55,580
So Heroku create and then your unique application name will say M whatever here and then enter and it's

227
00:14:55,580 --> 00:15:01,160
going to update and I'm going to fast forward in time until that's finished updating and setting that

228
00:15:01,160 --> 00:15:01,680
up.

229
00:15:01,700 --> 00:15:02,090
All right.

230
00:15:02,090 --> 00:15:04,490
Once it's done you should see a URL here.

231
00:15:04,490 --> 00:15:07,330
That's the or that or you're going to be able to visit in just a little bit.

232
00:15:07,370 --> 00:15:12,440
Once you've actually pushed your application dashboard to this your L if you get some sort of error

233
00:15:12,440 --> 00:15:17,480
like Access is the night that means you didn't actually choose a unique name and you need to choose

234
00:15:17,480 --> 00:15:18,210
another name.

235
00:15:18,260 --> 00:15:22,380
Basically just repeat the Heroku create with some other more unique name.

236
00:15:22,420 --> 00:15:22,850
OK.

237
00:15:23,060 --> 00:15:24,550
So we have my dash app.

238
00:15:24,560 --> 00:15:27,800
What needs to do now is say get at.

239
00:15:27,820 --> 00:15:38,920
So that adds all the files then we're going to get commit dash em and then say initial launch use double

240
00:15:38,920 --> 00:15:48,340
quotes here and then that's committed everything and then we're just going to say get push Heroku M..

241
00:15:48,850 --> 00:15:51,350
That's going to push all our files to Heroku.

242
00:15:51,460 --> 00:15:52,120
We don't have that many.

243
00:15:52,120 --> 00:15:57,030
So it shouldn't take too long and it's going to essentially deploy your current code to Heroku.

244
00:15:57,040 --> 00:16:01,270
Keep in mind the first time you push it's actually going take a little while longer because it's setting

245
00:16:01,270 --> 00:16:04,910
up Python and or dependencies on that remote server.

246
00:16:04,930 --> 00:16:09,930
I'm going to fast forward in time until it's finished installing and setting everything up for us.

247
00:16:09,940 --> 00:16:16,000
All right so that's finished what we want to do now is actually run our application by saying Heroku

248
00:16:16,710 --> 00:16:21,270
P.S. colon scale Web equals one.

249
00:16:21,370 --> 00:16:25,500
And that's essentially the frontier they enter and it's going to scale.

250
00:16:25,510 --> 00:16:28,120
I know diagnos notice it's running free.

251
00:16:28,270 --> 00:16:31,500
So if you scroll back up you're now ready to visit.

252
00:16:31,570 --> 00:16:37,520
At that your URL that was shown earlier which in this case is right here.

253
00:16:37,520 --> 00:16:43,340
This is B.S. and the whatever your Dasch name I'm going to copy this and visit this in my browser and

254
00:16:43,340 --> 00:16:46,110
I should see my dash put up location live and running.

255
00:16:46,110 --> 00:16:47,790
All right here I am at the browser.

256
00:16:47,800 --> 00:16:48,830
It needs me to sign in.

257
00:16:48,830 --> 00:16:53,510
Which makes sense because we set it up with authentication which you should probably do if you're running

258
00:16:53,510 --> 00:16:55,220
your stuff online.

259
00:16:55,610 --> 00:17:00,570
So user name password I'm going to sign in now.

260
00:17:03,660 --> 00:17:05,240
And here we get to see our dashboard.

261
00:17:05,340 --> 00:17:11,050
So notice now I can play around and scale it and the dashboard is live and operating.

262
00:17:11,160 --> 00:17:13,890
And you can also make changes any time to application.

263
00:17:13,890 --> 00:17:19,240
You can check out the guidebook on how to actually update your application if you update your files.

264
00:17:19,320 --> 00:17:24,300
It's essentially just adding committee and then pushing it again to Heroku master and then Pip freezing

265
00:17:24,300 --> 00:17:27,690
and installing the new requirement files as necessary.

266
00:17:27,690 --> 00:17:32,460
There's also a troubleshooting guide in the guidebook as well in case you get anything like the app

267
00:17:32,460 --> 00:17:33,570
server not found there.

268
00:17:33,660 --> 00:17:34,800
Those sort of mistakes.

269
00:17:34,980 --> 00:17:37,820
Usually they're just typos if you followed everything we just did.

270
00:17:37,890 --> 00:17:41,550
And if the guide book you should now have an application live at this.

271
00:17:41,550 --> 00:17:43,670
Whatever you are all was chosen.

272
00:17:43,670 --> 00:17:47,880
All right I hope that was helpful to you and I hope now you have all the skills necessary to deploy

273
00:17:47,880 --> 00:17:51,930
your own dashboard to the web and share your new creations with the world.

274
00:17:51,930 --> 00:17:53,670
Thank you so much for taking the course.

275
00:17:53,670 --> 00:17:54,840
I hope you learned a lot.

276
00:17:54,840 --> 00:17:59,730
Feel free to look at the next lecture where we have various coupons and offers for other courses.

277
00:17:59,790 --> 00:18:01,470
We'll see you at the next lecture.

