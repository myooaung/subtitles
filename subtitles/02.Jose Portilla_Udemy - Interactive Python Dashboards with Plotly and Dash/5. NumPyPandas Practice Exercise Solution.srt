1
00:00:05,290 --> 00:00:09,670
Welcome back in this lecture we're going to quickly go over the solutions for the crash course exercise

2
00:00:09,670 --> 00:00:10,460
questions.

3
00:00:10,480 --> 00:00:11,310
Let's get started.

4
00:00:11,440 --> 00:00:11,680
OK.

5
00:00:11,680 --> 00:00:16,450
So for the first task it was to import pandas and pie so that should have been pretty straightforward.

6
00:00:16,450 --> 00:00:25,120
Just import them pies and P and import pandas as PD and test number two is to set some pies random number

7
00:00:25,120 --> 00:00:33,080
generator to seed 1 0 1 so to do that we call N.P. And then after this we call the random library and

8
00:00:33,080 --> 00:00:37,060
that offer that we call the seat function and then passen 101.

9
00:00:37,070 --> 00:00:38,090
So that's all you need to do.

10
00:00:38,090 --> 00:00:41,500
You actually don't need to assign this to anything you just call that random seed.

11
00:00:41,690 --> 00:00:49,940
And then that allows you to create our random matrix so we can say Matt is equal to the random and then

12
00:00:49,940 --> 00:00:57,410
we'll call rand I.A. for random integer will give it the limits so we can go from 1 to 1 0 1 because

13
00:00:57,410 --> 00:01:00,530
that upper limit is Xclusive.

14
00:01:00,590 --> 00:01:05,930
So it goes up to 1 including 1 to 1 and then as a third argument we can't pass in a tuple of dimensions.

15
00:01:05,960 --> 00:01:08,810
So 100 rows by five columns.

16
00:01:08,810 --> 00:01:11,920
So if you messed up and put in 100 here not a huge deal.

17
00:01:11,930 --> 00:01:15,470
Just keep in mind that the limit may be exclusive.

18
00:01:15,470 --> 00:01:20,400
And then we're going to print out that matrix so we can see it at the end when we run our script then

19
00:01:20,420 --> 00:01:24,550
task number four is just basically passing that matrix to PD data for him.

20
00:01:24,740 --> 00:01:30,950
So we can actually copy and paste that in here will say F is equal to Panas data frame Pasdar matrix

21
00:01:31,040 --> 00:01:37,160
and then we will print out Matt then up next task's number five.

22
00:01:37,220 --> 00:01:41,330
That was to reassign these columns to be this list of names.

23
00:01:41,330 --> 00:01:46,360
So the way to do that is simply one line just say D-Nev. columns is equal to.

24
00:01:46,490 --> 00:01:47,990
And then you can just pass and the list.

25
00:01:48,020 --> 00:01:51,440
So we call that the list is going to need to match up as far as dimensions.

26
00:01:51,440 --> 00:01:57,230
So if I try to pass in a list of two values when I have five columns Pandurs is going to give you an

27
00:01:57,230 --> 00:01:57,790
error.

28
00:01:57,850 --> 00:02:02,040
The Here we have essentially five values in this list.

29
00:02:02,070 --> 00:02:08,900
So is going to rename the columns 0 3 4 to these five names right here and then we can print our data

30
00:02:08,900 --> 00:02:13,450
frame again to check that that worked then task 6.

31
00:02:13,450 --> 00:02:14,520
So let's go through this.

32
00:02:14,530 --> 00:02:18,080
First we need to actually create the random numbers.

33
00:02:18,280 --> 00:02:27,160
So we'll say random numbers variable is equal to the random the rand I.A. and it's going to go we can

34
00:02:27,160 --> 00:02:36,370
say 0 to 100 We'll grab 200 values there and then we're going to reshape that to be 50 by four.

35
00:02:36,370 --> 00:02:37,710
So that's one option.

36
00:02:37,870 --> 00:02:43,330
The other option instead of doing this reshape is to just grab this and then stick it in here.

37
00:02:44,590 --> 00:02:46,500
As the actual dimensions.

38
00:02:46,540 --> 00:02:48,840
So it's kind of up to you how you want to do this.

39
00:02:49,030 --> 00:02:55,990
Then we're going to grab column names and we're going to have this just be a b c the actual going is

40
00:02:55,990 --> 00:03:05,270
copy and paste here ABC the other quick trick for this is if you just say A B C D as a string and then

41
00:03:05,270 --> 00:03:07,010
call that split on it.

42
00:03:07,010 --> 00:03:10,290
This command right here will return back this list.

43
00:03:10,310 --> 00:03:12,990
So on the solutions you'll see us use that split command.

44
00:03:13,460 --> 00:03:18,290
But for now we'll pass that list itself and then using that we can create a frame we'll say the physical

45
00:03:18,290 --> 00:03:27,890
to PD data frame where the data is equal to our Random data that we created before.

46
00:03:27,900 --> 00:03:36,130
So those are going to be those random numbers and then our columns argument is just equal to call names

47
00:03:36,130 --> 00:03:41,620
parameter we just made an endless print out that to frame to make sure that all worked we will save

48
00:03:41,620 --> 00:03:42,130
that.

49
00:03:42,130 --> 00:03:44,950
Now let's open up a terminal and run the script.

50
00:03:45,070 --> 00:03:48,350
So say Python and I just call that my example.

51
00:03:48,910 --> 00:03:53,980
You'll call it probably of course crash review exercise or whatever happens to be called we'll run this

52
00:03:54,100 --> 00:03:56,070
and let's make sure everything worked.

53
00:03:56,080 --> 00:03:57,640
So it looks like we have our data here.

54
00:03:57,670 --> 00:03:59,320
We scroll all the way up.

55
00:03:59,440 --> 00:04:00,730
We have a b c d.

56
00:04:00,760 --> 00:04:02,470
So that's looking good.

57
00:04:02,470 --> 00:04:08,440
We scroll up here looks like we have some real numbers and we have EF 1 EF 2 or 3 of 4 label that worked

58
00:04:08,440 --> 00:04:08,880
out.

59
00:04:09,040 --> 00:04:12,750
Looks like we have a matrix of random numbers so that'll work out as well.

60
00:04:12,850 --> 00:04:18,600
Probably should have chosen some smaller numbers but hope we can see that everything turned out as expected.

61
00:04:18,610 --> 00:04:19,060
OK.

62
00:04:19,240 --> 00:04:21,910
If you have any questions who are free to post the Q&amp;A forums.

63
00:04:21,910 --> 00:04:27,190
But really that's all you need to know for the rest of this course is to just be able to read any data

64
00:04:27,310 --> 00:04:30,070
using pandas and then be able to manipulate it slightly.

65
00:04:30,190 --> 00:04:33,030
Such as grabbing columns or grabbing rows.

66
00:04:33,040 --> 00:04:37,210
Thanks everyone and we'll see you at the next lecture where we finally begin to discuss plumply.

67
00:04:37,240 --> 00:04:38,030
We'll see you there.

