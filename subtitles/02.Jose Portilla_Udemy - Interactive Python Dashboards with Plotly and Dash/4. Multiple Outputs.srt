1
00:00:05,320 --> 00:00:06,370
Welcome back.

2
00:00:06,370 --> 00:00:10,690
Now that we've learned how to work with multiple inputs Let's expand our understanding for multiple

3
00:00:10,690 --> 00:00:12,490
outputs.

4
00:00:12,740 --> 00:00:18,140
So we just saw how we can connect multiple inputs simply by adding to the list for that input function

5
00:00:18,740 --> 00:00:20,230
to obtain multiple outputs.

6
00:00:20,240 --> 00:00:26,680
We will need to add multiple function and call back decorator pairs to our dashboard script.

7
00:00:26,690 --> 00:00:31,820
So for this example our dashboard is going to take in two inputs one for a number of wheels and another

8
00:00:31,820 --> 00:00:33,210
for a color selection.

9
00:00:33,380 --> 00:00:35,640
And we're going to have two versions of the dashboard.

10
00:00:35,690 --> 00:00:37,730
The first version is just going to be very simple.

11
00:00:37,730 --> 00:00:42,400
It's going to display two outputs and return that back as text in your dashboard.

12
00:00:42,410 --> 00:00:48,110
The second version is then going to collect information from the two inputs and display a single corresponding

13
00:00:48,140 --> 00:00:50,110
output in the form of an image.

14
00:00:51,030 --> 00:00:53,430
So we've already set up a data frame in this format.

15
00:00:53,460 --> 00:00:55,880
We have one column which represents number of wheels.

16
00:00:56,070 --> 00:01:00,150
In other column which represents a color and then a linked jpg file.

17
00:01:00,540 --> 00:01:05,670
So what we're going to do is based on the inputs of wheels and colors we'll look up an image and return

18
00:01:05,670 --> 00:01:09,890
that image that's going to be the second version of the dashboard.

19
00:01:09,980 --> 00:01:12,810
So the images are already stored in the data folder and set up for you.

20
00:01:12,860 --> 00:01:17,090
So we're going to be able to connect the input selection of colors and wheels to the appropriate image.

21
00:01:17,270 --> 00:01:21,020
Let's go ahead and see what the final results are going to look like and then build it for ourselves.

22
00:01:21,020 --> 00:01:25,340
We're going to build out a simpler version of the dashboard and then the second one will have the actual

23
00:01:25,340 --> 00:01:27,390
images displayed back.

24
00:01:27,440 --> 00:01:32,780
OK here we have the simpler first version of our dashboard here we just have two inputs and two outputs

25
00:01:32,840 --> 00:01:34,380
the first input just a radio button.

26
00:01:34,400 --> 00:01:36,140
It's going to return back what you've selected.

27
00:01:36,260 --> 00:01:41,200
And the second one has another output and it returns back again we selected red blue yellow.

28
00:01:41,420 --> 00:01:44,120
So two inputs and two separate outputs.

29
00:01:44,120 --> 00:01:48,210
Then let's see what the second version of this dashboard is going to look like.

30
00:01:48,560 --> 00:01:51,060
OK here we have the second version of the dashboard.

31
00:01:51,080 --> 00:01:53,660
And now essentially actually have three outputs.

32
00:01:53,660 --> 00:01:56,960
We do show the number so you select that one two three.

33
00:01:56,990 --> 00:01:59,880
We also show the colors of that red blue or yellow.

34
00:02:00,020 --> 00:02:03,820
And then the final output is an image that corresponds if your selection pair.

35
00:02:03,890 --> 00:02:09,440
So you can select two wheels and then the color blue and you should see some two wheeled blue vehicle

36
00:02:09,860 --> 00:02:14,840
or if we say red and the number three there we can see three wheels on a red tricycle.

37
00:02:14,990 --> 00:02:19,310
So that's the main idea we've already selected all these images for you and that's why that data frame

38
00:02:19,340 --> 00:02:23,230
has the column that corresponds with some JPEG name.

39
00:02:23,390 --> 00:02:26,690
Let's get started by jumping to the text editor and coding this out.

40
00:02:26,690 --> 00:02:29,720
We're going to start with that first version and then add the image to it.

41
00:02:29,930 --> 00:02:32,950
OK here we are the text editor to save a little bit of time.

42
00:02:32,960 --> 00:02:34,520
I already have the inputs for that.

43
00:02:34,820 --> 00:02:39,830
Both core NHT HTL components the input and output dependencies as well as Pandurs.

44
00:02:40,010 --> 00:02:42,580
And I've read in the data wheels not CSP file.

45
00:02:42,620 --> 00:02:49,070
So underneath the provided data folder the CSP file has the color the wheel and the image name is wheels

46
00:02:49,070 --> 00:02:50,360
that CXVII.

47
00:02:50,390 --> 00:02:52,510
Let's get started by creating our application.

48
00:02:52,750 --> 00:02:57,400
We will say app is equal to national cash as we've done before.

49
00:02:57,710 --> 00:03:01,910
And then we'll start working with the layout going to expand this just to get a couple more lines here

50
00:03:02,600 --> 00:03:06,870
and we'll say app lay out is equal to.

51
00:03:07,240 --> 00:03:09,420
And we're going to create a division here.

52
00:03:09,430 --> 00:03:13,460
Remember that takes an a list and we essentially just have four things right now.

53
00:03:13,480 --> 00:03:17,220
We have two radio items and then two outputs.

54
00:03:17,560 --> 00:03:23,600
So we will say the following from core components grab radio items.

55
00:03:23,860 --> 00:03:26,990
And right now we'll just have that as an item in the list.

56
00:03:27,070 --> 00:03:31,820
Then we also want something to display the output of the chosen number of wheels.

57
00:03:31,930 --> 00:03:38,370
So we'll say we'll actually make that a div in itself and that will just take in some text.

58
00:03:38,850 --> 00:03:42,980
Now we have another set of radio items that's going to be for the color.

59
00:03:43,140 --> 00:03:46,880
And again we're going to report back what the color selection was.

60
00:03:47,010 --> 00:03:53,130
And in order to make sure that we have a nice break what we can do is in-between this div and the radio

61
00:03:53,160 --> 00:04:01,800
items we can add an h tim l dot capital H R and that adds kind of a horizontal rule which gives you

62
00:04:01,800 --> 00:04:03,410
that little line separator.

63
00:04:03,480 --> 00:04:07,770
It's up to you whether you want to add this but it gives it a nice separation between the set of items

64
00:04:07,770 --> 00:04:10,740
and the Stiv and the set of items and that div..

65
00:04:11,070 --> 00:04:15,590
Let's go ahead and give these IDs so we can later call them in our callbacks.

66
00:04:16,200 --> 00:04:19,030
So we'll say the first one is wheels.

67
00:04:19,050 --> 00:04:20,930
So that's the number of wheels.

68
00:04:21,000 --> 00:04:23,010
The second one will be the output of that.

69
00:04:23,070 --> 00:04:28,900
So we'll say the idea here is wheels cash output.

70
00:04:29,140 --> 00:04:37,370
And then for the second pair of radio items will say that this is colors and then the output here is

71
00:04:37,370 --> 00:04:43,490
just going to be colour's output this horizontal rule doesn't need anything because we won't actually

72
00:04:43,490 --> 00:04:45,530
be using it in our callbacks.

73
00:04:45,530 --> 00:04:47,800
So we have a radio items in our div..

74
00:04:47,810 --> 00:04:53,010
Now it's time to adjust the radio items themselves to give them some options.

75
00:04:53,030 --> 00:04:57,210
So this is very similar to using a dropdown.

76
00:04:57,380 --> 00:05:04,780
Remember that the dropdown had this parameter called options and it was essentially a list of dictionaries

77
00:05:05,530 --> 00:05:13,330
where there was a label value and there was a value value so to speak.

78
00:05:13,330 --> 00:05:17,970
So we're going to construct this dictionary with list comprehension for the number of wheels.

79
00:05:17,980 --> 00:05:20,410
We essentially want the label in value to be the same.

80
00:05:20,410 --> 00:05:25,610
So the user sees either 1 2 or 3 and then the value is going to be the same.

81
00:05:25,840 --> 00:05:30,850
So we're going to say label is I value as I.

82
00:05:31,520 --> 00:05:37,450
And then we're going to construct this dictionary for I in and you have essentially two options here

83
00:05:37,460 --> 00:05:38,920
you can just easily make a list.

84
00:05:39,080 --> 00:05:40,270
One two three.

85
00:05:40,280 --> 00:05:45,200
So that's in general if you only had three numbers which in this case we only have three wheels but

86
00:05:45,260 --> 00:05:53,950
let's say you had a data frame with many more unique options we could also do is just grab the wheels

87
00:05:53,950 --> 00:06:00,070
column and then ask for that unique values.

88
00:06:00,110 --> 00:06:01,880
I mean sure sort of spell that right.

89
00:06:04,740 --> 00:06:09,760
OK so this is essentially going to say grab me all the unique values from the wheels and in our case

90
00:06:09,760 --> 00:06:13,450
we only have one two and three as the unique values in that wheels column.

91
00:06:13,450 --> 00:06:15,720
And you can print out the data frame and check that out yourself.

92
00:06:15,820 --> 00:06:20,940
But this is going to be kind of more generic than just saying one two three.

93
00:06:20,940 --> 00:06:23,580
All right so we had the idea or idea for the wheels.

94
00:06:23,640 --> 00:06:27,520
The options we're going to construct this list of dictionaries using list comprehensions.

95
00:06:27,720 --> 00:06:31,630
And finally let's give it a default value.

96
00:06:31,710 --> 00:06:35,430
So I want to zoom out just a little bit so we can see the whole thing.

97
00:06:35,430 --> 00:06:39,400
So the value itself we're going to say value is just a default.

98
00:06:39,510 --> 00:06:46,560
We'll have it start as one and we're going to do a very similar thing for the second pair of radio items.

99
00:06:46,620 --> 00:06:51,290
So it's copy options and values and then edit it to what we need.

100
00:06:51,390 --> 00:06:53,630
So say color here enter.

101
00:06:53,950 --> 00:07:00,340
Get some type of spacing here and I'm going to copy paste options and the value.

102
00:07:00,660 --> 00:07:02,580
Except this time it's going to be colors.

103
00:07:02,610 --> 00:07:04,630
So it's sort of being numbers for the value.

104
00:07:04,640 --> 00:07:11,010
I will say that the default value for the colors is blue and then we're going to have the same I label

105
00:07:11,240 --> 00:07:11,920
value.

106
00:07:12,000 --> 00:07:13,810
But in this case we don't want unique wheels.

107
00:07:13,830 --> 00:07:18,690
We want unique color which is just red blue and yellow.

108
00:07:18,690 --> 00:07:23,970
Alternatively you could have manually written out a list of strings with red blue and yellow but this

109
00:07:23,970 --> 00:07:24,700
is more generic.

110
00:07:24,750 --> 00:07:27,790
And they'll work better for us in the future.

111
00:07:27,810 --> 00:07:28,390
OK.

112
00:07:28,470 --> 00:07:32,570
So that's basically all we need for our particular layout.

113
00:07:32,640 --> 00:07:38,420
We're going to add a little bit of style to it to this overall div and that's just an optional style

114
00:07:38,430 --> 00:07:39,830
so it looks a little nicer.

115
00:07:40,170 --> 00:07:46,000
So we can add a font family to this and you can technically add in whatever you want.

116
00:07:46,000 --> 00:07:48,520
So this is just to show you how you would edit the fonts.

117
00:07:48,550 --> 00:07:59,020
So shoes Helvetica and then we'll also say adjust the font size and let's make it 18 again.

118
00:07:59,050 --> 00:08:00,240
This is totally optional.

119
00:08:00,260 --> 00:08:04,380
It's just styling elements kind of going to introduce these slowly throughout the course so you can

120
00:08:04,380 --> 00:08:07,460
get an idea of how to customize your dashboards through style calls.

121
00:08:07,470 --> 00:08:15,070
Remember the style is now associated with this outermost div So we just took care of the layout.

122
00:08:15,070 --> 00:08:19,900
Now we need to do is create two functions one for the wheels and then one for the color values.

123
00:08:19,900 --> 00:08:23,440
Then after that we should be done and be able to run our server.

124
00:08:23,440 --> 00:08:34,170
So let's connect these will say the F and we'll have this be a back a and this is going to take in some

125
00:08:34,170 --> 00:08:36,750
value for the wheels.

126
00:08:37,080 --> 00:08:45,910
And this is going to return you chose and then we'll just say that format's whatever that wheel's value

127
00:08:45,910 --> 00:08:46,170
was.

128
00:08:46,180 --> 00:08:48,080
So that's the number that was chosen.

129
00:08:48,160 --> 00:08:54,950
So that's called back a and we'll make another one called call back be it's really up to you what you

130
00:08:54,950 --> 00:08:59,200
want to call these functions but Colback B that's going to correspond with the colors values will say

131
00:08:59,210 --> 00:09:09,390
colors value and it's going to be the same thing return you chose and then I'll tell you for formatting

132
00:09:09,420 --> 00:09:13,980
what colors value chose will say colors value.

133
00:09:14,180 --> 00:09:14,710
All right.

134
00:09:14,800 --> 00:09:20,080
Now currently These functions are actually connected to any inputs or outputs and specifically we want

135
00:09:20,080 --> 00:09:25,090
to connect these IDs for wheels and wheels output as well as colors and colors output.

136
00:09:25,270 --> 00:09:29,490
So we'll see that through the use of callbacks.

137
00:09:29,590 --> 00:09:33,070
So this first one will say at app that callback

138
00:09:36,880 --> 00:09:48,890
and this is going to take in an output and also an input I remember input goes inside of a list.

139
00:09:49,070 --> 00:09:55,160
So it's copy and paste that template because we're also going to be applying it to our second callback.

140
00:09:55,160 --> 00:09:57,490
Now the output for this first one that's the wheels value.

141
00:09:57,680 --> 00:10:00,390
So we want the output to be in this div..

142
00:10:00,500 --> 00:10:08,740
So I'll say the output ID is going to be wheels output to make sure we put it as a string.

143
00:10:08,740 --> 00:10:09,620
There we go.

144
00:10:10,060 --> 00:10:17,680
And then the actual parameter to be adjusted inside that div is going to be children which is essentially

145
00:10:17,680 --> 00:10:23,920
just when you pass a string into a div then the input that we're going to do remember that's going to

146
00:10:23,920 --> 00:10:27,430
be wheels right here and then it's going to be value.

147
00:10:27,520 --> 00:10:32,980
So I'll say wheels and value.

148
00:10:33,270 --> 00:10:38,160
So we have our component IDs and the component properties that are supposed to be linked and then the

149
00:10:38,220 --> 00:10:41,340
input it goes into this function and then it does something.

150
00:10:41,340 --> 00:10:46,830
In this case it just returns back the value for the children which is just a string here and we're going

151
00:10:46,830 --> 00:10:55,010
to do the same thing here except now it's going to be colour's output as the id and then it goes to

152
00:10:55,010 --> 00:10:56,220
the children of that year.

153
00:10:56,240 --> 00:10:58,090
So this is the Stiv right here.

154
00:10:58,280 --> 00:11:11,570
And then the input is going to be the colors ID for the value so we'll say colors and then value.

155
00:11:11,570 --> 00:11:12,020
All right.

156
00:11:12,020 --> 00:11:13,230
So that should be it.

157
00:11:13,430 --> 00:11:21,400
Let's say if name is equal to main We'll take her app and we'll run the server.

158
00:11:21,620 --> 00:11:25,430
Let's run this make sure we didn't do any typos but I'm going to zoom out just so we can see the entirety

159
00:11:25,430 --> 00:11:26,110
of the code.

160
00:11:26,330 --> 00:11:32,810
We have our imports read in our data creator that application set up our layout with kind of these pairs

161
00:11:32,810 --> 00:11:35,250
of radio items and give a little break.

162
00:11:35,270 --> 00:11:37,120
Another set of radio items in the div..

163
00:11:37,280 --> 00:11:40,700
And then we have our two outputs again for outputs.

164
00:11:40,700 --> 00:11:45,710
You're going to need a separate decorator for each output because output is just singular for the inputs

165
00:11:45,740 --> 00:11:47,950
as we saw we could stack them up.

166
00:11:47,960 --> 00:11:53,790
So let's say this and run it and see if everything worked out by some basic thought PI enter.

167
00:11:53,810 --> 00:11:55,390
Looks like I got a typo somewhere.

168
00:11:55,400 --> 00:11:56,480
Invalid syntax for.

169
00:11:56,480 --> 00:11:57,640
Value equal to 1.

170
00:11:57,860 --> 00:11:59,750
And I can see here I already forgot the commas.

171
00:11:59,750 --> 00:12:04,610
So let's add those commas in because two items taking a list of parameters.

172
00:12:04,700 --> 00:12:05,620
Save that again.

173
00:12:05,720 --> 00:12:09,330
It's really easy to make common typos so happens to everyone.

174
00:12:10,260 --> 00:12:11,400
OK so it looks like a running.

175
00:12:11,400 --> 00:12:12,450
I'm going to copy this.

176
00:12:12,450 --> 00:12:15,510
Put it in my browser and see if it worked ok at my browser.

177
00:12:15,510 --> 00:12:18,280
I can see the two inputs as well as my horizontal brake bar.

178
00:12:18,420 --> 00:12:23,640
So you chose one two three you chose red blue and yellow perfect.

179
00:12:23,640 --> 00:12:28,140
Now go ahead and add the second part where we can change up the image.

180
00:12:28,200 --> 00:12:32,210
So that's going to be one last function call so let's add that in.

181
00:12:32,250 --> 00:12:32,610
All right.

182
00:12:32,600 --> 00:12:35,570
Back here at the text editor I'm going to control C.

183
00:12:35,580 --> 00:12:41,610
Kill that server right now and we add in a few things we need to add in a function that will allow us

184
00:12:41,610 --> 00:12:45,090
to actually decode or encode I should say an image file.

185
00:12:45,090 --> 00:12:51,080
So we're going to come back in here and import one more thing in order to work with images in Python.

186
00:12:51,360 --> 00:12:58,890
And that's going to be import base 64 and mixer using Python 3.6 or above in order for this to work

187
00:12:59,550 --> 00:13:04,110
and we're going to create an image here that's going to allow us to encode our image file in order to

188
00:13:04,110 --> 00:13:07,440
display it in the HTML.

189
00:13:07,640 --> 00:13:08,690
And this is where are you going to do.

190
00:13:08,690 --> 00:13:15,920
In general to this blate Jay Peggs and your dashboard will say DMF we'll create a function called encode

191
00:13:15,930 --> 00:13:17,220
image.

192
00:13:17,220 --> 00:13:23,440
It takes in some image file and it's going to create an encoded version of it.

193
00:13:23,450 --> 00:13:34,160
So say in code it is equal to and then we call that base 64 library and call B 6 for in code.

194
00:13:34,540 --> 00:13:40,570
And we're going to open that image file with the parameter.

195
00:13:40,580 --> 00:13:48,140
RB So that's read binary and then right off of that open call will say read.

196
00:13:48,260 --> 00:13:52,760
Remember you can always copy and paste this from our provided files because I know there's a lot here

197
00:13:52,760 --> 00:13:54,830
that can easily cause a typo.

198
00:13:55,610 --> 00:14:08,650
After this we're just going to return the string data colon image forward slash P ngi semi colon base

199
00:14:08,650 --> 00:14:21,260
64 comma curly braces and then we'll say that format and we will say encoded and then say decode open

200
00:14:21,260 --> 00:14:22,630
close parentheses.

201
00:14:22,640 --> 00:14:27,510
So what this is doing is it's going to read in that image file using this command.

202
00:14:27,530 --> 00:14:30,010
Open that image file read binary.

203
00:14:30,020 --> 00:14:31,180
It's going to read it.

204
00:14:31,280 --> 00:14:34,470
We're going to that in code it looks like I actually wrote this twice.

205
00:14:34,490 --> 00:14:36,850
We're going to encode it with be 64 in code.

206
00:14:37,100 --> 00:14:43,730
And then once encoded Well we're going to do is return this specific string which is how platies a simple

207
00:14:43,730 --> 00:14:50,570
file or similar call is going to be able to display the image so it's going to be data Colan image for

208
00:14:50,570 --> 00:14:51,870
Slash P and G.

209
00:14:51,920 --> 00:14:58,450
So my colon base 64 comma and then the actual code for the decoded version of that file.

210
00:14:58,460 --> 00:14:58,700
All right.

211
00:14:58,700 --> 00:15:00,050
So a lot to do here.

212
00:15:00,110 --> 00:15:00,620
Make sure.

213
00:15:00,650 --> 00:15:03,060
I would really suggest that you copy and paste this from the notes.

214
00:15:03,080 --> 00:15:05,750
It's really easy text only make a typo here.

215
00:15:05,750 --> 00:15:10,420
So we're going to continue by adding And one more div into our layout.

216
00:15:11,430 --> 00:15:18,960
So at the very bottom of this we'll say color output comma and then in order to display an image we

217
00:15:18,960 --> 00:15:24,900
can say HVM L I M G will give this in ID display image

218
00:15:29,880 --> 00:15:37,020
and then we'll say source is equal to children and we'll see why in a second.

219
00:15:37,440 --> 00:15:43,920
And we're going to adjust the height of the image will say height is equal to 300 that way in case the

220
00:15:43,920 --> 00:15:47,050
images are widely varying in size.

221
00:15:47,070 --> 00:15:49,410
We don't get any errors there.

222
00:15:49,410 --> 00:15:53,220
Let's save that.

223
00:15:53,330 --> 00:15:59,460
And then at the very bottom we're going to add in a function to actually call back those images.

224
00:15:59,780 --> 00:16:10,020
So say T.F. callback image and Colbeck image is going to take a parameter wheels and the color in order

225
00:16:10,020 --> 00:16:12,030
to display the correct image.

226
00:16:12,060 --> 00:16:23,170
So we'll say we'll end color in right now where I am my path to the images is in my data folder on their

227
00:16:23,170 --> 00:16:25,190
images forward slash.

228
00:16:25,270 --> 00:16:29,470
Remember the Pentagon on where you're located with the script you may need to say Dot dot dot to go

229
00:16:29,470 --> 00:16:33,980
back up at the Rectory but I'm right now located in the same directory as my data folder.

230
00:16:34,150 --> 00:16:46,020
So I need to say data images and then we're going to say return in code image and we'll say path Plus

231
00:16:46,030 --> 00:16:48,770
we're going to concatenate this with the string value.

232
00:16:48,890 --> 00:16:53,260
I'm actually going to copy and paste this from the provided that postscript because this one's really

233
00:16:53,260 --> 00:16:56,250
easy to make a typo on just because it has so many brackets.

234
00:16:56,290 --> 00:17:00,550
Certainly not impossible type out but I want to make sure for the purpose of filming this I don't mess

235
00:17:00,550 --> 00:17:05,110
this up so I'm going to copy and paste this from the notes and you can do it as well.

236
00:17:05,530 --> 00:17:08,920
And I put it all in one line so I can explain what's happening here.

237
00:17:08,920 --> 00:17:12,630
So essentially what we're doing is we're saying the following.

238
00:17:12,630 --> 00:17:17,640
This callback image takes in a wheel that's going to be a number and a color that's going to be red

239
00:17:17,640 --> 00:17:18,840
blue or yellow.

240
00:17:18,840 --> 00:17:20,980
Then we have our default path.

241
00:17:21,030 --> 00:17:26,250
So underneath the data folder I have another folder called images and then I want to return the encoded

242
00:17:26,250 --> 00:17:27,530
version of the image.

243
00:17:27,570 --> 00:17:32,820
So it's going to take that path and then what I want to do is grab that actual last column where it

244
00:17:32,820 --> 00:17:36,500
says something like Blue unicycle dot J peg to do that.

245
00:17:36,660 --> 00:17:44,370
When you do the following with pandas we to say get me back the data frame where data frame wheels is

246
00:17:44,370 --> 00:17:50,010
equal to the wheel provided and data frame color is equal to the color provided.

247
00:17:50,220 --> 00:17:56,310
Then grab the image column and then since that returns back a whole data frame when you say values of

248
00:17:56,310 --> 00:17:57,080
zero.

249
00:17:57,090 --> 00:17:58,910
So this is a lot of pand this code.

250
00:17:59,220 --> 00:18:00,980
And remember our focus is with plot line.

251
00:18:01,020 --> 00:18:05,130
But the way we've organized the data file for you so you don't need to make a bunch of manual calls

252
00:18:05,160 --> 00:18:08,610
the jpeg or else we've organized it that way for you.

253
00:18:08,610 --> 00:18:14,640
So keep in mind a lot of pandas here but all this is saying is grab that specific value from the image

254
00:18:14,640 --> 00:18:18,290
column or the number of wheels matches up and the color matches up.

255
00:18:18,330 --> 00:18:24,950
So that's what this entire line is doing is just going to grab that string and then append it or concatenate

256
00:18:24,950 --> 00:18:26,980
it with that path to the images.

257
00:18:27,270 --> 00:18:28,500
Once you have this callback image.

258
00:18:28,500 --> 00:18:34,630
All we need to do is add the actual callback through the decorator will say app that callback

259
00:18:37,900 --> 00:18:48,210
we set up our output and we'll say display image is the ID and the source is what we want to adjust

260
00:18:48,270 --> 00:18:54,260
because remember if we come back up here this last one has the ID display image and we want to adjust

261
00:18:54,270 --> 00:19:00,000
the source of wherever the image is coming from which is what we're going to return here with the encoded

262
00:19:00,000 --> 00:19:01,590
version of that image.

263
00:19:01,590 --> 00:19:06,970
So right now we have that source and now it's time to add in the inputs and we're actually taken into

264
00:19:07,050 --> 00:19:09,000
inputs the color and the wheels.

265
00:19:09,000 --> 00:19:11,910
So inside this list will have two inputs.

266
00:19:13,580 --> 00:19:15,900
Let's put this on a new line for the second one.

267
00:19:16,010 --> 00:19:18,780
The first input that's going to correspond to the wheel.

268
00:19:18,800 --> 00:19:20,680
So the idea for that one is wheels.

269
00:19:20,990 --> 00:19:24,560
And then we just want to grab the value selected from that radio button.

270
00:19:24,980 --> 00:19:33,580
And the second one is going to be the colors and we'll grab the values select that they're OK.

271
00:19:33,600 --> 00:19:34,810
So let's save this.

272
00:19:34,830 --> 00:19:39,180
We'll run it and once we see that it's working we'll go ahead and do a quick review of everything we

273
00:19:39,180 --> 00:19:40,050
just typed out.

274
00:19:40,430 --> 00:19:45,340
But let's make sure we don't have any typos especially if so many commas everywhere will run enter.

275
00:19:45,690 --> 00:19:49,050
And it looks like it's running so let's head over to our Chrome browser OK.

276
00:19:49,050 --> 00:19:50,210
Headed over to the browser.

277
00:19:50,220 --> 00:19:55,790
Looks like it's working with the default soulis shoes something like 3 am red or yellow and 3 and it

278
00:19:55,800 --> 00:19:59,910
looks like it's connecting to the right images in the actual folder so you can play around with this

279
00:20:00,270 --> 00:20:03,260
and see all those images that are available to you.

280
00:20:03,390 --> 00:20:03,690
OK.

281
00:20:03,680 --> 00:20:04,820
Back at the text editor.

282
00:20:04,860 --> 00:20:06,770
Let's go ahead and do a quick rundown.

283
00:20:06,780 --> 00:20:12,450
We have all our imports we've read in the data we've created our dash application and then to work with

284
00:20:12,450 --> 00:20:15,220
images you need to use the sort of functionality.

285
00:20:15,360 --> 00:20:19,650
That way the HTL image can be accepted the correct way.

286
00:20:19,680 --> 00:20:24,730
Then we created this layout has the radio items and the div or horizontal break.

287
00:20:24,730 --> 00:20:29,790
Another set of radio items and a div and then the female component that's displaying the image and we

288
00:20:29,790 --> 00:20:31,590
add a little bit of styling here.

289
00:20:32,530 --> 00:20:37,360
Then for the callbacks and the functions we have one callback for actually reporting back what we'll

290
00:20:37,360 --> 00:20:44,320
value is chosen then we have another output input combo for the colors value that was chosen and then

291
00:20:44,350 --> 00:20:50,420
we have a callback for displaying the image takes in two inputs the wheels and colors value.

292
00:20:50,440 --> 00:20:52,670
Then it uses panels to look it up.

293
00:20:52,690 --> 00:20:54,460
So that's what this entire line is doing here.

294
00:20:54,460 --> 00:20:58,540
Just looking up the value of pens that string to the path for your images.

295
00:20:58,540 --> 00:21:02,950
So at the end you get something like data slash images flash red unicycle dot Japan.

296
00:21:03,160 --> 00:21:08,410
And that can be converted back to display to this image and then we run the whole server.

297
00:21:08,800 --> 00:21:09,580
OK.

298
00:21:09,600 --> 00:21:11,400
Definitely check out the guidebook for this one.

299
00:21:11,620 --> 00:21:13,210
And we'll see you at the next lecture.

