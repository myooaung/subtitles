1
00:00:05,370 --> 00:00:07,320
Welcome back everyone in this lecture.

2
00:00:07,320 --> 00:00:11,990
We're going to walk you through some basic dash layout components.

3
00:00:12,150 --> 00:00:17,310
So we're going to do this lecture is create our first dash application object and then we're going to

4
00:00:17,370 --> 00:00:22,010
edit that app's layout and we're going to show you how to do things like add.

5
00:00:22,110 --> 00:00:27,030
Elements through that dash core component capabilities and it will also show you how to add a graphs

6
00:00:27,090 --> 00:00:30,450
and figures to the actual dashboard application.

7
00:00:30,450 --> 00:00:35,840
One quick note here is we're going to start off with a very manual way of creating our data and layout

8
00:00:35,850 --> 00:00:39,690
for the figures we'll be using some dictionaries and nested lists.

9
00:00:39,870 --> 00:00:44,070
But I want you to keep in mind that later on in just a few more lectures we're going to be showing you

10
00:00:44,070 --> 00:00:49,100
how to easily insert partly figures into an existing dash dashboard layout.

11
00:00:49,260 --> 00:00:54,120
That way you can use all the knowledge you just learned about partly charts and easily insert them into

12
00:00:54,120 --> 00:00:55,260
your dashboards.

13
00:00:55,260 --> 00:00:59,520
The reason we're going to show you a more manual dictionary method right now is because that can better

14
00:00:59,520 --> 00:01:02,590
reflect the actual official dasht documentation.

15
00:01:02,670 --> 00:01:07,020
So we're going to lineup in the beginning with the dash documentation and then later on show you how

16
00:01:07,020 --> 00:01:10,720
you can easily use plotless figures and insert those.

17
00:01:10,920 --> 00:01:15,120
And at the end of all this we'll show you how to run the app server and check it out in your browser.

18
00:01:15,120 --> 00:01:18,030
So let's get started by hopping over to our text editor.

19
00:01:18,030 --> 00:01:18,350
All right.

20
00:01:18,350 --> 00:01:20,470
Here I am in my pie file.

21
00:01:20,490 --> 00:01:24,620
I went ahead and called this basic thought pie and we need to do a couple of imports here.

22
00:01:24,690 --> 00:01:26,960
We're going to say import dash.

23
00:01:27,180 --> 00:01:28,320
That's the main one.

24
00:01:28,470 --> 00:01:34,190
And then we're going to be exploring Dasch core components and dash HTL components through this lecture

25
00:01:34,200 --> 00:01:35,090
and the next one.

26
00:01:35,280 --> 00:01:37,270
So let's import them both right now.

27
00:01:37,470 --> 00:01:42,470
We're going to say import Dasch core components as DCC.

28
00:01:42,750 --> 00:01:48,860
And then we will also import Dasch HTL components as h T.M..

29
00:01:49,150 --> 00:01:51,220
Notice here those underscores there.

30
00:01:51,730 --> 00:01:57,250
Then the next thing to do is actually create our application which is essentially the dashboard itself.

31
00:01:57,250 --> 00:01:57,840
So we'll see.

32
00:01:57,850 --> 00:02:02,340
App is equal to dash dot dash.

33
00:02:02,340 --> 00:02:07,270
And if you're familiar a flask at all this is essentially creating that flask application that dashes

34
00:02:07,300 --> 00:02:08,430
doing for you.

35
00:02:08,590 --> 00:02:12,590
So it may feel a little familiar if you've gone through a flask course before.

36
00:02:12,610 --> 00:02:13,640
If not don't worry.

37
00:02:13,660 --> 00:02:15,700
You don't need to know flask to know dash.

38
00:02:16,050 --> 00:02:16,560
OK.

39
00:02:16,840 --> 00:02:20,430
Now let's go ahead and continue by grabbing our apps.

40
00:02:20,440 --> 00:02:25,440
Lay out and then we're going to set that equal to a few things.

41
00:02:25,530 --> 00:02:26,870
We're going to call HVM.

42
00:02:26,910 --> 00:02:32,010
Remember that's the dash HTL components dot and then call Divx office.

43
00:02:32,040 --> 00:02:37,350
So this is going to create what is essentially a division in our dashboard to insert things.

44
00:02:37,590 --> 00:02:44,730
So inside of this Div. I'm going to create a variable called children and I'm going to set that equal

45
00:02:44,730 --> 00:02:48,960
to a list and there's going to be three main things in this list.

46
00:02:48,960 --> 00:02:53,020
One we're going to show you how to add in more HTML components.

47
00:02:53,040 --> 00:03:00,940
So if I wanted a better component I could say a simple H-1 and then inside of this I could just pasand

48
00:03:00,950 --> 00:03:04,150
something like Hello dash.

49
00:03:04,300 --> 00:03:08,810
So we'll just keep that one item in this list and we'll add on items as we go along.

50
00:03:09,070 --> 00:03:10,380
But there's my app layout.

51
00:03:10,540 --> 00:03:15,610
Now what I'm going to do is at the very bottom of my script I'm going to do a simple if name is equal

52
00:03:15,610 --> 00:03:21,830
to Main and then inside of this Ossi app run underscore server.

53
00:03:21,910 --> 00:03:27,320
And essentially what this does is it just checks if you're running when you call Python basic but pie

54
00:03:27,670 --> 00:03:29,160
if you're actually running the script.

55
00:03:29,170 --> 00:03:33,970
So that's if name is equal to Maine meaning you're calling the script directly it's going to grab the

56
00:03:33,970 --> 00:03:36,690
application object and then run the server.

57
00:03:36,700 --> 00:03:41,100
So right now when we run this application for our dashboard we should just see.

58
00:03:41,110 --> 00:03:42,350
Hello ash.

59
00:03:42,700 --> 00:03:49,390
Let's save that and run it Python basic about pi and what's going to happen is it will spit back out

60
00:03:49,870 --> 00:03:51,520
the address to visit.

61
00:03:51,760 --> 00:03:56,080
So it's typically one to seven point zero point zero point one eighty fifty.

62
00:03:56,110 --> 00:03:58,530
Make sure to copy it with a Right-Click.

63
00:03:58,570 --> 00:04:02,290
Don't use Control-C Otherwise you will actually quit the dashboard.

64
00:04:02,300 --> 00:04:08,340
So just a quick hit there and then I'm going to paste that into my browser and bring it to my browser

65
00:04:08,340 --> 00:04:10,190
overseas and see what it looks like.

66
00:04:10,410 --> 00:04:15,060
And there it is simply Hello dash as a header one element with the mail.

67
00:04:15,250 --> 00:04:16,630
And that's our first dashboard.

68
00:04:16,720 --> 00:04:18,740
And we did this all with Python.

69
00:04:18,760 --> 00:04:24,310
So typically you would have to no front end stuff like HTL directly to actually do this and create a

70
00:04:24,310 --> 00:04:25,440
file that would serve it.

71
00:04:25,630 --> 00:04:28,480
But we did this all just a few lines of Python code.

72
00:04:28,510 --> 00:04:33,880
Granted it really does help if you already are familiar with things like HTL to understand what each

73
00:04:33,880 --> 00:04:35,070
element is referring to.

74
00:04:35,260 --> 00:04:40,900
But it's not 100 percent necessary when to close this now and let's kill our server by then Control-C

75
00:04:40,900 --> 00:04:41,960
at our command line.

76
00:04:42,340 --> 00:04:45,630
So he created that simple H-1 hetter one.

77
00:04:45,820 --> 00:04:47,580
Let's go ahead and add something else to it.

78
00:04:47,590 --> 00:04:55,520
We're going to now add a division inside of this we'll say T.M. and we can say something like this to

79
00:04:55,530 --> 00:05:07,630
create another div and here I can say dash web dashboards with Python so I'll say that as well.

80
00:05:07,690 --> 00:05:09,760
Let's make sure we have commas here.

81
00:05:10,970 --> 00:05:16,400
And if we run this again and go back and bring in our browser again.

82
00:05:16,470 --> 00:05:20,930
So 1 2 7 8 50 then you should see.

83
00:05:21,280 --> 00:05:25,230
Hello dash dash web web dashboards with Python from there.

84
00:05:25,270 --> 00:05:31,870
So that's adding simple HTML components with dash into our actual dashboard.

85
00:05:31,870 --> 00:05:36,190
So now that we understand that flexibility Let's go ahead and add in a graph.

86
00:05:36,190 --> 00:05:41,920
So the way we're going to do this is we're now going to use that higher level more abstract service

87
00:05:41,920 --> 00:05:43,610
which is Dasch core components.

88
00:05:43,810 --> 00:05:49,110
So the Estela components that allows you to essentially do HVM all calls like H-1 or divs.

89
00:05:49,150 --> 00:05:53,730
Can check that documentation for the variety of HDMI components that are available to you.

90
00:05:53,770 --> 00:05:57,120
But really what you want to be working with later on are the core components.

91
00:05:57,220 --> 00:06:06,460
Those are the things that are really going to look a lot more so to speak python instead of h e OK so

92
00:06:06,520 --> 00:06:08,170
we have reached him all components there.

93
00:06:08,170 --> 00:06:16,710
Now let's play around with our Dasch core component and we will call DCC dot and we're going to call

94
00:06:16,710 --> 00:06:22,450
graph here and inside of this graph we're going to give it an ID so we can reference it.

95
00:06:22,490 --> 00:06:25,110
Let's just call this example.

96
00:06:26,190 --> 00:06:33,240
And then also inside this graph object what I'm going to do is add in a figure parameter say a figure

97
00:06:33,300 --> 00:06:34,140
is equal to.

98
00:06:34,440 --> 00:06:39,660
And this figure is going to take in a dictionary and this dictionary is going to have two familiar components

99
00:06:40,560 --> 00:06:41,580
or two familiar keys.

100
00:06:41,580 --> 00:06:48,090
I should say it's going to have a key for data which is later on going to have some stuff and it's going

101
00:06:48,090 --> 00:06:51,610
to have a key for layout.

102
00:06:51,630 --> 00:06:56,550
So as you know we've already worked with plot Platini for graphs and we've definitely already created

103
00:06:56,880 --> 00:06:59,700
our data list and our layout calls.

104
00:06:59,700 --> 00:07:03,990
And later on in a feature lecture we're going to show you how to answer exactly what we already know

105
00:07:04,350 --> 00:07:07,730
into this dasht component graph call.

106
00:07:07,920 --> 00:07:14,880
But right now we're going to create these manually which means recall that data is a list inside of

107
00:07:14,880 --> 00:07:15,400
this data.

108
00:07:15,420 --> 00:07:30,170
What I'm going to do is this data list I'll say X is one to three y what's the string Why is the list.

109
00:07:30,180 --> 00:07:32,020
Let's say for one to

110
00:07:35,670 --> 00:07:40,330
and then I need to specify that type Let's make this a bar chart.

111
00:07:40,660 --> 00:07:44,190
So it takes in the string bar and then we can give this a name.

112
00:07:44,700 --> 00:07:47,750
Let's give this the city name S.F..

113
00:07:47,760 --> 00:07:52,500
So it's going to be a bar chart of certain values for San Francisco and we're going to create one more

114
00:07:52,500 --> 00:07:54,420
dictionary inside the state.

115
00:07:55,870 --> 00:08:00,000
And we're going to just copy and paste this dictionary because it's going to be almost the same thing.

116
00:08:00,110 --> 00:08:04,380
And let's give it some different values for why that way the bars are different heights.

117
00:08:04,580 --> 00:08:11,140
So I'll say two four and five and let's give it a different name such as NYC.

118
00:08:11,760 --> 00:08:15,270
And for the LEO we can go ahead and just pasan a dictionary here.

119
00:08:16,370 --> 00:08:20,180
So inside this dictionary for lay out let's just say title

120
00:08:25,020 --> 00:08:31,790
and give this thing a title the sexual Grath can say bar plots.

121
00:08:31,900 --> 00:08:32,430
All right.

122
00:08:32,610 --> 00:08:38,280
Now something to be really careful of is you'll notice we're using a ton of braces and brackets.

123
00:08:38,280 --> 00:08:41,330
It's really easy to XLE unbalance them.

124
00:08:41,370 --> 00:08:47,730
So if you ever have any syntax error such as end of line errors or unbalanced parentheses errors.

125
00:08:47,850 --> 00:08:53,520
But I would highly suggest for now is copying and pasting from the notes we provide later on when we

126
00:08:53,520 --> 00:08:56,710
actually insert plot lead figures like we already know how to create.

127
00:08:56,790 --> 00:09:01,920
It's going to be a lot easier to keep those balanced but we're going to follow the documentation quite

128
00:09:01,920 --> 00:09:06,810
closely in the beginning that we have as a reference and then later on we're going to show you how to

129
00:09:06,900 --> 00:09:09,670
simplify things with plotless itself.

130
00:09:09,750 --> 00:09:13,890
But for now let's go ahead and quickly review what we just created.

131
00:09:13,890 --> 00:09:20,160
We already know that we created our app here so that's our dash app then we grab the layer attribute

132
00:09:20,250 --> 00:09:24,570
of our application and inside of all this we have T.M. div.

133
00:09:24,660 --> 00:09:29,410
So this prince who's right here is actually the last print sees down here on line 18.

134
00:09:29,890 --> 00:09:34,080
So everything inside this div It's a children's list for here.

135
00:09:34,080 --> 00:09:40,740
So this is everything by children means everything is going inside this div and we have an H-1 in other

136
00:09:40,740 --> 00:09:41,800
div inside of that.

137
00:09:41,880 --> 00:09:48,000
And then this graph object and this graph object is coming from Dasch core components and inside of

138
00:09:48,000 --> 00:09:54,090
this graph we went ahead gave it an ID and then we have this figure dictionary which has a data list

139
00:09:54,540 --> 00:09:55,370
inside that list.

140
00:09:55,370 --> 00:10:00,720
We have two dictionaries are going to represent bar plots where we have 1 to 3 on the x axis and then

141
00:10:00,720 --> 00:10:03,650
these Y's are going to represent the height of the bars.

142
00:10:03,660 --> 00:10:05,690
It knows it's a bar because we're set type bar.

143
00:10:05,850 --> 00:10:10,510
And then it's going to be able to name them on the cover with this name key value pair.

144
00:10:10,650 --> 00:10:15,930
And then after that we have this layout dictionary which is just title bar plots.

145
00:10:16,140 --> 00:10:16,650
OK.

146
00:10:16,840 --> 00:10:20,850
And it's a little difficult to read because there's a lot going on here that as I keep mentioning don't

147
00:10:20,850 --> 00:10:21,760
worry in the future.

148
00:10:21,960 --> 00:10:28,020
And just a few lectures it's going to be really simple but let's go ahead and run this into Control-C

149
00:10:29,190 --> 00:10:33,120
run Python basic pie and see what this looks like in our update.

150
00:10:33,270 --> 00:10:36,780
And we should be able to now see our nice dashboard with the figure.

151
00:10:37,020 --> 00:10:38,750
So I'm going to bring it in over here.

152
00:10:39,700 --> 00:10:45,730
And he comes here we can see bar plots we see Hello dash dash web dashboards of Python bar plots and

153
00:10:45,730 --> 00:10:46,600
I can hover over these.

154
00:10:46,600 --> 00:10:50,210
I see one two three and I can see my bar plots.

155
00:10:50,380 --> 00:10:50,800
All right.

156
00:10:50,800 --> 00:10:53,070
So we just created this awesome dashboard.

157
00:10:53,110 --> 00:10:57,470
Let's do a very quick overview of the main ideas you should be getting out of this lecture.

158
00:10:57,520 --> 00:10:59,960
Don't worry about memorizing everything you just saw here.

159
00:10:59,980 --> 00:11:04,090
All I want to do is point out some key characteristics of dashboards.

160
00:11:04,180 --> 00:11:09,070
The very first thing I want to point out is you'll notice appeared in the Yoro were actually visiting

161
00:11:09,190 --> 00:11:13,230
a Web application so you'll have to keep running this.

162
00:11:13,220 --> 00:11:15,640
This is not just a static H-2 him l file.

163
00:11:15,690 --> 00:11:17,640
You can save here to your desktop.

164
00:11:17,680 --> 00:11:21,850
You'll need to actually run the server for the web application to work.

165
00:11:21,940 --> 00:11:27,850
So it's very much like any web application for other tools like flask or Django.

166
00:11:28,000 --> 00:11:34,050
I'm going to control C here only minimize this terminal and quickly just go over the main ideas.

167
00:11:34,090 --> 00:11:38,930
So again the main ideas we have these special imports for dash dash ct s h t m l.

168
00:11:39,040 --> 00:11:45,430
We create our Dasch application we call lay out offer a dash application and then all we can end up

169
00:11:45,430 --> 00:11:52,810
doing is call each T.M. div which is basically going to be a container for either HTL components which

170
00:11:52,810 --> 00:11:57,460
you can use if you're very comfortable if h Timah already or which we're going to really focus on in

171
00:11:57,460 --> 00:12:03,910
the course that core components and its core components their higher level more abstract objects that

172
00:12:03,910 --> 00:12:08,560
were going to be able to quickly use to actually insert plot lead figures.

173
00:12:08,570 --> 00:12:12,290
So inside our typical call will be something like DCC.

174
00:12:12,330 --> 00:12:17,190
That graph usually won't be calling things like h tim l H1 or H to melt.

175
00:12:17,470 --> 00:12:20,080
Instead will focus on the core components here.

176
00:12:20,080 --> 00:12:24,350
Notice how this graph component is going to be a really common one that we're going to be using.

177
00:12:24,520 --> 00:12:31,770
It takes in an ID and a figure and inside that figure we can see that it has data and layout.

178
00:12:31,900 --> 00:12:37,870
So later on we're going to be able to actually answer our previous lists for data like the traces we

179
00:12:37,870 --> 00:12:43,720
made with go that scatter calls or go histograms that sort of thing as well as the layout parameters

180
00:12:43,750 --> 00:12:45,580
we previously described.

181
00:12:45,580 --> 00:12:50,170
Once you've set everything up in your layout down at the bottom you're going to say if name is equal

182
00:12:50,170 --> 00:12:54,810
to Main which basically says OK if I'm running this stop PI script what should I do.

183
00:12:54,940 --> 00:12:58,720
You take that application and you run the server in the very next lecture.

184
00:12:58,720 --> 00:13:03,610
We're going to take this exact code that we have here and expand a little bit on it just to show the

185
00:13:03,610 --> 00:13:07,180
level of customization that is available to you.

186
00:13:07,230 --> 00:13:09,850
Again I don't need you to memorize any of this stuff.

187
00:13:09,910 --> 00:13:12,790
I just want you to understand the general structure.

188
00:13:12,820 --> 00:13:19,830
Do your imports set up your dash dashboard get grabbed a lay out set div and then inside.

189
00:13:19,840 --> 00:13:23,110
This will have Estela components or dash core components.

190
00:13:23,110 --> 00:13:26,830
If you understand those basic concepts then you're good to continue on.

191
00:13:26,830 --> 00:13:28,210
We'll see you at the next lecture.

