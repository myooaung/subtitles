WEBVTT
1
00:00:06.170 --> 00:00:14.960
In this lecture, you'll learn about SLAAC, S-L-A-A-C. That's Stateless Address AutoConfiguration.

2
00:00:15.530 --> 00:00:23.270
In IPv6, our normal hosts, like usually our desktop computers can be assigned their IPv6 addresses

3
00:00:23.570 --> 00:00:30.080
through either static addressing where the administrator goes on each host individually and manually

4
00:00:30.080 --> 00:00:40.790
puts an IP address on there or through DHCPv6, which is equivalent to DHCP in IPv4 or through SLAAC,

5
00:00:40.790 --> 00:00:46.610
which there is no equivalent for in IPv4. Our DHCP servers,

6
00:00:46.610 --> 00:00:55.130
if we're using DHCP, track the MAC address to IP address assignments of the IP addresses that they

7
00:00:55.130 --> 00:00:56.390
have given out.

8
00:00:56.600 --> 00:01:02.960
So they are keeping state information about the state of what IP addresses they gave out,

9
00:01:02.960 --> 00:01:08.420
what MAC address that maps to. So that is stateful addressing.

10
00:01:09.590 --> 00:01:17.480
With SLAAC, which is Stateless Address AutoConfiguration, hosts learn the /64 subnet that their

11
00:01:17.480 --> 00:01:21.090
IPv6 interface is on from the local router.

12
00:01:21.180 --> 00:01:23.270
It's also on that link.

13
00:01:23.540 --> 00:01:33.080
And then the host uses that information to generate its own IPv6 address, usually based on the EUI-64

14
00:01:33.080 --> 00:01:36.050
addresses, similar to what we did with the routers earlier.

15
00:01:36.290 --> 00:01:48.050
However, modern operating systems don't use standardized EUI-64 method because that raises privacy concerns

16
00:01:48.230 --> 00:01:53.450
because PCs can be tracked by their MAC address. So modern operating

17
00:01:53.450 --> 00:02:01.670
systems like modern versions of Windows use a different method to generate the 64-bit host portion

18
00:02:01.670 --> 00:02:06.560
of the address, which is completely randomized. The router,

19
00:02:06.560 --> 00:02:13.700
when you do this, when you're using SLAAC, does not track which hosts have which IP address. It doesn't

20
00:02:13.700 --> 00:02:16.580
track the IP address to MAC address mapping.

21
00:02:16.770 --> 00:02:23.660
So that is stateless addressing as opposed to the stateful addressing when the IP addresses are given out

22
00:02:23.900 --> 00:02:25.370
by the DHCP.

23
00:02:26.750 --> 00:02:36.320
When a global unicast IPv6 address is configured on a router interface, then router advertisements, which

24
00:02:36.320 --> 00:02:43.400
advertise the 64-bit network portion of the address on that interface are sent out by the router

25
00:02:43.400 --> 00:02:53.210
by default. It's sent out using ICMP and it's sent to the 'All Nodes' multicast address using the interfaces

26
00:02:53.210 --> 00:02:56.030
link local address as the source address.

27
00:02:56.030 --> 00:02:59.810
So that gets sent out to everybody on the local link.

28
00:03:00.120 --> 00:03:08.510
So that's how the hosts can learn what the network portion is on that link, and they can use that to

29
00:03:08.510 --> 00:03:12.780
generate their full 128-bit IPv6 address.

30
00:03:13.100 --> 00:03:20.570
So if you used SLAAC, it means that your host can get their IP address without having to use a DHCP

31
00:03:20.570 --> 00:03:25.610
server. As well as the advertisements going out from the router,

32
00:03:25.790 --> 00:03:31.300
hosts can also send a router solicitation message to request that information.

33
00:03:33.360 --> 00:03:41.970
As well as telling the hosts which subnet to generate their IP address on, the router will also tell

34
00:03:41.970 --> 00:03:46.790
the hosts to use itself, the router, as the default gateway.

35
00:03:47.460 --> 00:03:55.530
But the original implementation did not support any information other than the default gateway address.

36
00:03:55.680 --> 00:04:00.230
I'll speak about that a bit more in a second, but let's first off, see what happens here.

37
00:04:00.510 --> 00:04:08.910
So let's say that we're looking at PC1 down in the bottom left corner. On R1, we've configured

38
00:04:08.910 --> 00:04:19.589
interface fa2/0 facing the PC with IP address 2001:DB8:0:0::1.

39
00:04:19.800 --> 00:04:26.070
Soon as you configure that global unicast address on the router, it will start sending out router advertisements

40
00:04:26.070 --> 00:04:26.520
on that

41
00:04:26.520 --> 00:04:36.240
link telling anybody who's interested that the 64-bit network portion of the address there is

42
00:04:36.270 --> 00:04:38.880
2001:DB8:0:0/64.

43
00:04:39.270 --> 00:04:46.800
So if PC1 has been configured to automatically generate its address using SLAAC, it will learn

44
00:04:46.800 --> 00:04:52.240
the network portion of the address and then it will automatically generate the host portion.

45
00:04:52.260 --> 00:04:53.970
So that is how SLAAC works.

46
00:04:54.270 --> 00:05:03.350
The router will also tell PC1 that. "Hey I am 2001:DB8:0:0::1.

47
00:05:03.570 --> 00:05:06.040
Use me as your default gateway."

48
00:05:06.780 --> 00:05:10.380
So when you first see this, you think great, SLAAC's a brilliant idea.

49
00:05:10.620 --> 00:05:13.860
It means that we don't have to use DHCP anymore.

50
00:05:14.170 --> 00:05:16.160
So it's one less thing that can go wrong.

51
00:05:16.170 --> 00:05:18.870
We don't have the DHCP server there. Also,

52
00:05:18.870 --> 00:05:23.600
we don't need to configure it and it's a bit more efficient because it's stateless as well.

53
00:05:24.060 --> 00:05:26.460
So that's how it seems at first.

54
00:05:26.760 --> 00:05:33.960
But the problem, which is kind of unbelievable when you hear it, is that when SLAAC was designed,

55
00:05:34.230 --> 00:05:39.690
there's no mechanism for giving out other information other than the router address.

56
00:05:39.960 --> 00:05:45.480
So the PC cannot learn its DNS server from SLAAC.

57
00:05:45.480 --> 00:05:49.200
And obviously DNS is completely critical to networking.

58
00:05:49.380 --> 00:05:52.980
We need DNS for networking to work in modern networks.

59
00:05:53.160 --> 00:05:58.450
So you're still going to need a DHCP server anyway.

60
00:05:58.650 --> 00:06:05.730
Now, there are some standards that are being put in place which will support this additional information,

61
00:06:05.910 --> 00:06:08.810
but there's not really widespread support for that yet.

62
00:06:09.900 --> 00:06:17.420
So in practice, a DHCP server will still be required to give out additional information like the DNS server.

63
00:06:17.910 --> 00:06:25.680
But if the IP address is assigned by SLAAC and the DNS server is assigned by DHCP, then that does still

64
00:06:25.680 --> 00:06:33.150
also result in a stateless configuration because the DHCP server, it's only just sending out the DNS information.

65
00:06:33.160 --> 00:06:40.950
It's not tracking which IP address is mapped to which MAC address because it's not giving out the IP addresses.

66
00:06:40.950 --> 00:06:43.260
Those are being learned by SLAAC.

67
00:06:45.220 --> 00:06:54.830
When a host is using SLAAC, it's going to send the traffic out using a source address of ::.

68
00:06:54.850 --> 00:06:58.600
:: is the unspecified address.

69
00:06:58.990 --> 00:07:06.190
So when a host is going to get its IP address from SLAAC or from DHCP, it's going to be using that until

70
00:07:06.190 --> 00:07:13.420
it gets the normal IPv6 address on there. Because :: is unspecified or unknown,
 

71
00:07:13.600 --> 00:07:17.760
it's also used for our default static routes as well.

72
00:07:17.980 --> 00:07:24.400
So if you do an ipv6 route to ::/0, that's equivalent to a route 0.0.0.0

73
00:07:24.400 --> 00:07:27.190
0.0.0.0,

74
00:07:27.220 --> 00:07:29.980
the default route in IPv4.

75
00:07:31.980 --> 00:07:40.380
Next thing to tell you about is neighbor discovery. Neighbor discovery is the IPv6 version of IPv4's

76
00:07:40.380 --> 00:07:43.680
ARP and it works in a very similar way.

77
00:07:43.890 --> 00:07:51.690
But rather than using ARP requests and replies, Neighbor Discovery uses ICMP neighbor solicitations, and

78
00:07:52.140 --> 00:07:53.760
neighbor advertisements.

79
00:07:53.760 --> 00:08:00.090
They're basically the equivalent of ARP requests and replies. Neighbor solicitation messages are sent

80
00:08:00.090 --> 00:08:05.280
to the solicited-node multicast address, which reaches all hosts on that subnet.

81
00:08:07.030 --> 00:08:17.480
Last thing to tell you about here is a command that we can use to verify our IPv6 neighbors, which

82
00:08:17.480 --> 00:08:20.450
is show ipv6 neighbors.

83
00:08:20.720 --> 00:08:27.740
So we're using the normal network topology that we've been using throughout the rest of this section.

84
00:08:28.340 --> 00:08:37.039
And if I go on R2 and do a show ipv6 neighbors, this is when we haven't generated any traffic

85
00:08:37.039 --> 00:08:39.360
to global unicast addresses yet.

86
00:08:39.360 --> 00:08:46.160
Let's go back a slid and you'll see that those global unicast addresses beginning

87
00:08:46.160 --> 00:08:47.450
2001:DB8:0:0,

88
00:08:47.700 --> 00:08:54.190
they have been configured on the router right now, but we're not generating any traffic with them yet.

89
00:08:54.560 --> 00:08:58.580
So when we do the show ipv6 neighbors, we have done that on R2,

90
00:08:58.790 --> 00:09:06.080
you see that it discovers the link local addresses on R1 and R3 because the routers are going to

91
00:09:06.080 --> 00:09:12.890
be constantly sending out some traffic using those link local addresses as the source address.

92
00:09:13.340 --> 00:09:19.730
But it won't discover the global unicast addresses until we actually see some traffic from there.

93
00:09:19.970 --> 00:09:26.720
So if I go on to R2, when I first did a show ipv6 addresses, it doesn't see R1's global unicast

94
00:09:26.720 --> 00:09:31.520
address but if I then ping R1's global unicast address to generate some traffic,

95
00:09:31.790 --> 00:09:34.010
and then I do a show ipv6 neighbors,

96
00:09:34.250 --> 00:09:39.560
you can see down at the bottom in the diagram here, that it can see the link local address on R1,

97
00:09:39.680 --> 00:09:42.050
it can see the link local address on R3.

98
00:09:42.230 --> 00:09:48.770
And there's also report of the global unicast address on R1 as well now because we had some traffic

99
00:09:48.770 --> 00:09:49.430
going to it.

100
00:09:50.050 --> 00:09:53.570
OK, so that was it for this lecture.

101
00:09:53.570 --> 00:10:00.740
One more lecture to do in this section where we'll take a look at acsess control lists in IPv6.

102
00:10:00.860 --> 00:10:02.570
See you for that in the next lecture.

