WEBVTT
1
00:00:06.420 --> 00:00:17.040
In this lecture, you'll learn about connected local and static routes for IPv6. IPv6 routing works

2
00:00:17.040 --> 00:00:25.330
pretty much exactly the same way as it does for IPv4. But IPv4 routing and IPv6 routing

3
00:00:25.350 --> 00:00:26.940
are separate processes.

4
00:00:27.120 --> 00:00:30.360
And they each have their own separate routing table.

5
00:00:30.600 --> 00:00:37.950
So if a router receives an IPv4 packet, meaning it's got an IPv4 address as the destination, it

6
00:00:37.950 --> 00:00:41.550
will route it according to its IPv4 routing table.

7
00:00:41.910 --> 00:00:49.880
And if that same router receives on IPv6 packet, it will get routed according to its IPv6 routing table.

8
00:00:50.070 --> 00:00:57.420
Now, obviously for a router to be able to route IPv6 traffic, it needs to have IPv6 enabled.

9
00:00:57.600 --> 00:01:04.050
So it needs to have IPv6 unicast routing, it needs to have its own IPv6 addresses and it needs

10
00:01:04.050 --> 00:01:07.350
to have the IPv6 wrote in its routing table.

11
00:01:08.100 --> 00:01:17.040
The IPv4 and IPv6 routing tables are built in exactly the same way through static routes or via dynamic

12
00:01:17.040 --> 00:01:26.400
routing protocols like RIP, EIGRP and OSPF. All of those dynamic routing protocols support both IPv4

13
00:01:26.580 --> 00:01:28.260
and IPv6 as well.

14
00:01:29.660 --> 00:01:39.020
IPv4 routing is enabled by default on a Cisco IOS router but IPv6 routing is not so you have to

15
00:01:39.020 --> 00:01:39.710
turn it on.

16
00:01:40.010 --> 00:01:45.630
The way that you do turn on is with the command IPv6 unicast routing.

17
00:01:46.010 --> 00:01:53.720
Now, if you forget to put that command on there, you can still configure IPv6 addresses on the routers

18
00:01:53.720 --> 00:01:59.910
interfaces and it will be able to communicate with hosts that are on those same subnets.

19
00:02:00.230 --> 00:02:06.880
But if a host tries to send IPv6 traffic through the router, the router won't forward it.

20
00:02:07.100 --> 00:02:13.850
So this can be confusing because the host will be able to ping the router. The router might be able to ping whatsoever on

21
00:02:13.850 --> 00:02:14.690
the other side.

22
00:02:14.900 --> 00:02:21.700
But if you don't have IPv6 unicast routing enabled, the router is not going to forward the traffic.

23
00:02:21.710 --> 00:02:27.410
So whenever you're configuring IPv6 and a router, that should be the first command that you put in.

24
00:02:29.540 --> 00:02:36.350
The connected and local routes, just like everything else, worked the same way in IPv6 as we do

25
00:02:36.350 --> 00:02:45.170
in IPv4. So you see in the example configuration here, we've got a dual stock, meaning that it's running

26
00:02:45.170 --> 00:02:48.500
IPv4 and IPv6 at the same time.

27
00:02:48.800 --> 00:02:51.770
You don't need to do that if you're running IPv6.

28
00:02:51.770 --> 00:02:59.030
So you could have a router with IPv4 only, or you could have a router with IPv6 only, or you can

29
00:02:59.030 --> 00:03:03.320
have a router running both IPv4 and IPv6.

30
00:03:03.320 --> 00:03:03.950
When you do that,

31
00:03:03.950 --> 00:03:05.240
it's called a dual stack

32
00:03:05.250 --> 00:03:05.480
router.

33
00:03:06.420 --> 00:03:12.200
So the way we can do that is like you see in the example here on interface fa0/0,

34
00:03:12.500 --> 00:03:19.280
we've configured an IPv4 address, that's IP address 10.10.1.1 and we've also configured

35
00:03:19.280 --> 00:03:29.030
an IPv6 address on that interface 2001:DB8:0:1::1, which is the standard /64.

36
00:03:29.150 --> 00:03:35.510
And we've also configured an IPv4 and an IPv6 address on fa2/0.

37
00:03:35.900 --> 00:03:42.560
As usual, when we are configuring IPv4, the command starts with just IP like IP address.

38
00:03:42.830 --> 00:03:48.440
When we're configuring IPv6, it starts with IPv6 like IPv6 address.

39
00:03:50.340 --> 00:03:57.450
So we've got those IP addresses configured on the interfaces. When you do that, it will automatically

40
00:03:57.450 --> 00:04:04.380
enter a connected and a local route for those interfaces into the routing table.

41
00:04:04.860 --> 00:04:10.110
So what I'm going to do in this section is I will look at IPv4 first as a refresher and then we'll compare

42
00:04:10.110 --> 00:04:12.780
that with how things will look with IPv6.

43
00:04:13.200 --> 00:04:17.310
So we've configured our interfaces with IPv4 and IPv6.

44
00:04:17.310 --> 00:04:23.220
We then do a show ip route and that will show us the IPv4 routing table.

45
00:04:23.520 --> 00:04:26.610
And you can see we've got entries that match the interfaces

46
00:04:26.610 --> 00:04:34.380
we just configured. Our connected route for 10.10.0.0/24 out interface fa2/0,

47
00:04:34.510 --> 00:04:42.630
and a connected route for 10.10.1.0/24 out interface fa0/0. From IOS 15,

48
00:04:42.630 --> 00:04:45.930
the router will also add local routes as well.

49
00:04:46.170 --> 00:04:53.580
Local routes always have a /32 mask. So I can see

50
00:04:53.580 --> 00:04:59.020
10.10.0.1/32 on fa0/0.

51
00:04:59.520 --> 00:05:07.290
The reason we can see both connected and local routes, reason that this was added is allows us to see the

52
00:05:07.320 --> 00:05:11.390
full configuration on the interface from a show ip route command.

53
00:05:12.030 --> 00:05:18.450
I can see the connected route is

54
00:05:18.450 --> 00:05:20.510
10.10.0.0/24.

55
00:05:20.730 --> 00:05:26.490
And the matching local route is 10.10.0.1/32.

56
00:05:26.940 --> 00:05:35.340
So I know that the IP address in the interface is 10.10.0.1/24. OK, so that was for IPv4. The same example to see

57
00:05:35.340 --> 00:05:35.670
the IPv6 routing table, is of course,

58
00:05:35.670 --> 00:05:36.030
show ipv6 route.

59
00:05:36.370 --> 00:05:39.680
And we'll have similar entries in here as well.

60
00:05:39.700 --> 00:05:46.620
So I've got my two connected routes which match the IPv6 addresses that I've added and my two local routes

61
00:05:46.620 --> 00:05:47.310
as well.

62
00:05:47.610 --> 00:05:54.510
IPv6 users are 128-bit address, so the local routes will show up as /128.

63
00:05:54.720 --> 00:06:03.630
So I've got my connected route for 2001:DB8::/64 on fa2/0 and my

64
00:06:03.630 --> 00:06:07.320
other connected route 2001:DB8:0:1::/64 is

65
00:06:07.330 --> 00:06:14.420
on fa0/0 and I can see my /128 local routes there as well.

66
00:06:16.220 --> 00:06:23.660
If a router receives traffic for a network which is not directly attached to, it needs to know how to get there

67
00:06:23.660 --> 00:06:25.490
in order to forward to traffic.

68
00:06:25.790 --> 00:06:31.040
So like you just saw, whenever we configured an IP address on the interface, the router is directly attached

69
00:06:31.040 --> 00:06:35.770
to those networks and those rights will be automatically added into the routing table.

70
00:06:36.110 --> 00:06:42.920
But if it wants to get to a network that is not directly attached to it needs to know how to get there.

71
00:06:43.310 --> 00:06:49.730
So as an administrator, you can manually do that by adding a static route to that destination or the router

72
00:06:49.730 --> 00:06:57.770
can learn it via a routing protocol like RIP, OSPF, EIGRP, BGP and ISIS.

73
00:06:59.120 --> 00:07:03.320
So let's have a look at an example of adding static routes.

74
00:07:03.660 --> 00:07:10.970
I've got R2 on the left, which is connected to the 10.1.0.0/24 and a 10.0.0.0/24

75
00:07:10.970 --> 00:07:13.760
networks so it doesn't need routes added for them.

76
00:07:14.120 --> 00:07:21.740
But the 10.0.1.0/24 and 10.0.2.0/24 networks are behind

77
00:07:21.740 --> 00:07:22.460
R1.

78
00:07:22.640 --> 00:07:28.660
So R2 is going to need to have routes added to get to those networks behind R1.

79
00:07:29.090 --> 00:07:36.410
Similarly, R1 will need to have a route added to get to the 10.1.0.0/24 network, which

80
00:07:36.410 --> 00:07:38.000
is behind R2.

81
00:07:39.290 --> 00:07:48.230
So I add routes on R1. I've got ip route 10.1.0.0 255.255.255.0 for the subnet

82
00:07:48.230 --> 00:07:48.620
mask.

83
00:07:48.800 --> 00:07:57.650
And the next hop address is 10.0.0.2, which is the interface that is on R2, that R1 can reach

84
00:07:57.650 --> 00:07:58.340
directly.

85
00:07:58.760 --> 00:08:05.420
Then from my routes going back in the other direction, I'm going to have ip routes for 10.0.1.0

86
00:08:05.420 --> 00:08:14.010
and 10.0.2.0, both with a 24-bit mask. On R2 where the next hop is R1, at 10.0.0.1.

87
00:08:14.270 --> 00:08:15.370
So you knew that already.

88
00:08:15.410 --> 00:08:18.900
That's how we do it in IPv4. For IPv6,

89
00:08:18.920 --> 00:08:24.170
obviously it's going to be very similar. So here on R1,

90
00:08:24.440 --> 00:08:33.380
we need to add a route to the 2001:DB8:0:0 network, which is behind R2. So in IPv4,

91
00:08:33.380 --> 00:08:34.429
it's ip route.

92
00:08:34.429 --> 00:08:35.620
In IPv6,

93
00:08:35.630 --> 00:08:36.890
we say IPv6

94
00:08:36.890 --> 00:08:37.159
route.

95
00:08:37.309 --> 00:08:38.700
So we've got ipv6 route

96
00:08:39.110 --> 00:08:41.990
2001:DB8.

97
00:08:42.140 --> 00:08:47.960
And I don't need to put in the 0 and 0 because remember, for when we've got a contiguous bank

98
00:08:47.960 --> 00:08:50.990
of zeros, we can just say :: there.

99
00:08:51.180 --> 00:08:59.360
So we say 2001:DB8::, meaning that all the rest of the fields are a 0/64 

100
00:08:59.570 --> 00:09:07.220
and then the next hop address is R2 at 2001:DB8:0:1::2.

101
00:09:07.220 --> 00:09:10.710
So that's the route on R1 to get to the network behind R2.

102
00:09:10.980 --> 00:09:15.530
I'm also going to need a couple of routes on R2 to get to the networks behind R1.

103
00:09:15.770 --> 00:09:27.350
So I say ipv6 route on R2, 2001:DB8:0:2 and another route for 2001:DB8:0:3 /64.

104
00:09:27.440 --> 00:09:35.030
And the next hop address is R1 at 2001:DB8:0:1::1.

105
00:09:36.640 --> 00:09:43.840
OK, so that's how we add our static routes, just like with IPv4. We can also do summary and default

106
00:09:43.840 --> 00:09:49.960
routes in IPv6 as well. Looking at how we do it in IPv4 first.

107
00:09:50.200 --> 00:09:53.920
So the routes here are on R1.

108
00:09:54.820 --> 00:09:58.200
I've got a summary route here up at the top.

109
00:09:58.510 --> 00:10:01.870
So you see the networks beginning with 10.1.

110
00:10:01.870 --> 00:10:08.860
I've got 10.1.1.0 is between R4 and R3. And 10.1.0.0 is between R3 and R2.

111
00:10:08.860 --> 00:10:12.360
R1 is not directly connected to those networks.

112
00:10:12.370 --> 00:10:14.390
So it's going to need a route to get there.

113
00:10:14.440 --> 00:10:17.140
I could do that by adding two separate routes.

114
00:10:17.410 --> 00:10:24.730
I could have a route for 10.1.0.0/24 and another route for 10.1.1.0/24.

115
00:10:24.940 --> 00:10:33.190
But I can summarize that to 10.1.0.0/16 and then that will encompass both networks.

116
00:10:33.190 --> 00:10:36.610
So I can do it by just adding one route rather than adding multiple routes.

117
00:10:36.880 --> 00:10:43.750
So my command there is ip route 10.1.0.0 255.255.0.0

118
00:10:43.750 --> 00:10:47.130
and the next hop address is on R2 at 10.0.0.2.

119
00:10:47.530 --> 00:10:57.190
I also need a normal route for ip route 10.1.3.0 which is between R4 and R5. I use a 24-bit mask here.

120
00:10:57.190 --> 00:11:04.270
255.255.255.0 and the next hop address is R5 at 10.0.3.2

121
00:11:05.230 --> 00:11:09.670
Then we'll see that R1 is also connected out to the Internet.

122
00:11:09.850 --> 00:11:16.750
So I want a default route for all traffic that's not on the inside, that is going to go out to the Internet.

123
00:11:17.140 --> 00:11:19.790
The command for that is ip route

124
00:11:20.030 --> 00:11:20.380
0.0.0.0 0.0.0.0

125
00:11:20.380 --> 00:11:20.680
0.0.0.0 0.0.0.0

126
00:11:20.680 --> 00:11:22.510
0.0.0.0 0.0.0.0,

127
00:11:22.510 --> 00:11:24.310
means it's a default static

128
00:11:24.310 --> 00:11:24.630
route.

129
00:11:24.940 --> 00:11:30.250
And the next hop address in this example is 203.0.113.2.

130
00:11:30.490 --> 00:11:33.400
That is the router out to our service provider.

131
00:11:33.520 --> 00:11:41.130
So that's how we do it in IPv4. A similar scenario for IPv6.

132
00:11:41.530 --> 00:11:46.480
So here I'm going to do my summary route first.

133
00:11:46.480 --> 00:11:54.040
So you see all the networks beginning with 2001:DB8:0 are available along the top half

134
00:11:54.040 --> 00:11:55.390
through R2.

135
00:11:55.390 --> 00:12:01.660
So that will cover my network between R3 and R4, and my network between R2 and R3.

136
00:12:01.930 --> 00:12:12.610
Rather than adding separate /64 routes for 2001:DB8:0:1 and 2001:DB8:0:2, I can add a

137
00:12:12.610 --> 00:12:17.830
/48 route for everything beginning with 2001:DB8:0.

138
00:12:18.160 --> 00:12:25.350
So I say ipv6 route 2001:DB8:0::48.

139
00:12:25.390 --> 00:12:33.190
So that's going to cover everything beginning with 2001:DB8:0 and the next hop address is

140
00:12:33.220 --> 00:12:37.090
2001:DB8:0::2 which is on R2.

141
00:12:37.510 --> 00:12:41.320
I also need a route for the network between R4 and R5.

142
00:12:41.470 --> 00:12:47.880
So I say ipv6 route 2001:DB8:1:1::/64.

143
00:12:47.890 --> 00:12:49.200
So this is not a summary route.

144
00:12:49.510 --> 00:12:55.540
The next hop address is R5 at 2001:DB8:1::2.

145
00:12:55.750 --> 00:12:59.130
And I'm also going to add a default static route here as well.

146
00:12:59.170 --> 00:13:01.120
So do that in IPv6,

147
00:13:01.330 --> 00:13:02.350
it's ipv6

148
00:13:02.350 --> 00:13:05.470
route ::/0.

149
00:13:05.620 --> 00:13:09.310
That's the equivalent of 0.0.0.0 0.0.0.0

150
00:13:09.310 --> 00:13:13.680
in IPv4. And the next hop address is at my service provider.

151
00:13:13.690 --> 00:13:16.510
That's

152
00:13:16.720 --> 00:13:18.370
2001:DB8:3::2.

153
00:13:19.570 --> 00:13:28.520
OK, so that was our connected routes, our local routes, static routes, summary routes and the default static route

154
00:13:28.690 --> 00:13:30.220
for IPv6.

155
00:13:30.610 --> 00:13:35.740
Next up, we're going to take a look at how to actually configure this with a lab example.

