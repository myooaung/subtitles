WEBVTT
1
00:00:07.370 --> 00:00:14.240
In this lecture, you'll learn how firewalls work, and I'll also compare them with packet filters,

2
00:00:14.420 --> 00:00:22.910
but your access control, so firewalls secure traffic passing through them by either permitting or denying

3
00:00:22.910 --> 00:00:23.090
it.

4
00:00:23.120 --> 00:00:29.720
According to their rules, stateful firewalls maintain a connection table which tracks with to a state

5
00:00:29.720 --> 00:00:35.490
of traffic passing through the firewall return traffic is permitted by default.

6
00:00:35.630 --> 00:00:37.970
You'll see what that means coming up in a second.

7
00:00:38.180 --> 00:00:42.890
So an example of some firewall rules and our example here.

8
00:00:43.640 --> 00:00:44.660
We've got a firewall.

9
00:00:44.670 --> 00:00:48.020
We've got our inside network with our hosts on the inside.

10
00:00:48.020 --> 00:00:51.350
And it's got tangled tangle over twenty four network.

11
00:00:51.630 --> 00:00:58.400
And we've got the outside connected to the Internet and there's an Internet Web server there, two or

12
00:00:58.400 --> 00:01:01.070
three or one one three dot 10.

13
00:01:01.340 --> 00:01:08.060
The way we have set up our firewall rules is to deny all traffic from the outside to the inside for

14
00:01:08.060 --> 00:01:08.750
security.

15
00:01:08.930 --> 00:01:15.410
And we're going to permit outbound web traffic from the 10 dot dot handle, all 24 network, so that

16
00:01:15.410 --> 00:01:17.870
we set up those rules on the firewall.

17
00:01:18.870 --> 00:01:25.690
Then our host on the inside cannot handle it handled and sends out some Web traffic to the external

18
00:01:25.690 --> 00:01:33.420
observer at two or three oh one one three or 10 traffic is allowed because we have a rule to permit

19
00:01:33.420 --> 00:01:38.060
outbound Web traffic from tend to handle it, handle all 24.

20
00:01:38.760 --> 00:01:47.280
Then when the outbound traffic is sent out, it will be up into the firewalls, connection, cable and

21
00:01:47.280 --> 00:01:48.270
the connection to able.

22
00:01:48.270 --> 00:01:53.760
It will now say that a connection has been initiated from 10 dot, dot, dot 10.

23
00:01:53.880 --> 00:02:00.230
And in our example, that horseshit happens to be using the passport number four nine one six oh and

24
00:02:00.230 --> 00:02:07.490
not going out to two or three to one one three 10 on destination Port Arthur for HTTP.

25
00:02:08.759 --> 00:02:17.250
Then the Web server sans return traffic bot to the host on the inside, the source and destination IP

26
00:02:17.250 --> 00:02:20.690
address and part numbers are going to be flipped around the other way now.

27
00:02:20.920 --> 00:02:27.360
So that traffic is going to come from a source IP address of two or three or one one, three, 10 and

28
00:02:27.360 --> 00:02:29.570
a source part number of it.

29
00:02:29.850 --> 00:02:37.050
And it's got a destination IP address of 10, dot, dot, dot 10 and a destination point number of four

30
00:02:37.050 --> 00:02:38.210
nine one six.

31
00:02:38.610 --> 00:02:45.900
So that matches the connection in the connection table, the firewall she's dropped and it will permit

32
00:02:45.900 --> 00:02:52.020
the return traffic because it's valid return traffic for an existing connection in the connection table

33
00:02:52.320 --> 00:02:56.550
that overrides the deny all traffic from outside to inside.

34
00:02:56.550 --> 00:03:00.030
Ruel because it is a legitimate return traffic.

35
00:03:01.360 --> 00:03:07.900
Now, in this next example, the host on the inside 10, Dalton Dalton Dalton, has not initiated a

36
00:03:07.900 --> 00:03:11.730
connection to the Internet server on the outside.

37
00:03:12.040 --> 00:03:17.440
True and not case, the web server on the Internet tries to send Traficant to 10.

38
00:03:17.440 --> 00:03:19.080
Dalton, Dalton, Dalton.

39
00:03:19.330 --> 00:03:25.600
It does not match an existing connection, but traffic is going to be coming from a source of two or

40
00:03:25.600 --> 00:03:32.200
three to one one three Dalton and Port number eight and a destination IP address of 10 Dalton, Dalton,

41
00:03:32.200 --> 00:03:37.020
Dalton and the destination port again, for example, with four nine one six oh.

42
00:03:37.240 --> 00:03:43.090
That is now going to be dropped, according to the denial traffic from outside the inside rule.

43
00:03:43.300 --> 00:03:48.770
And there is no existing connection in the connection table that would override that.

44
00:03:50.430 --> 00:03:58.170
OK, so that's how firewalls work and how the rules work, Next-Generation Firewalls are available for

45
00:03:58.170 --> 00:04:06.240
next generation firewall bot moves beyond part and protocol inspection layers three and four and inspection

46
00:04:06.240 --> 00:04:12.840
and blocking to add application level inspection intrusion prevention on user based security.

47
00:04:13.080 --> 00:04:20.940
So deep pocket inspection analyzes pockets up to only seven of the oversized stock rather than it does

48
00:04:20.940 --> 00:04:27.450
with older traditional firewalls where they would the traffic up to three or four different permissions

49
00:04:27.450 --> 00:04:30.420
can also be applied to different users as well.

50
00:04:30.550 --> 00:04:35.400
So again, it goes beyond source and destination IP addresses and part numbers.

51
00:04:35.520 --> 00:04:37.940
It can look up to layer seven and pockets.

52
00:04:37.950 --> 00:04:40.620
It can also recognize different users as well.

53
00:04:40.800 --> 00:04:47.860
And that way you can apply different rules to different users based on their job.

54
00:04:47.880 --> 00:04:52.950
Those in the circle associated with Firepower is a next generation firewall.

55
00:04:53.100 --> 00:04:58.410
It does support the deep pocket analysis and it is also have IP functionality.

56
00:04:59.830 --> 00:05:01.790
OK, so that was firewall's.

57
00:05:02.110 --> 00:05:08.180
Next up, let's move on to competing them with pocket fillers and obnoxious control.

58
00:05:08.320 --> 00:05:10.900
Security policy is a pocket filter.

59
00:05:11.260 --> 00:05:17.470
Pocket fillers, unlike stateful firewalls, do not maintain a connection table.

60
00:05:17.660 --> 00:05:23.380
So because of this, they affect traffic in one direction only they do not take to stay of two week

61
00:05:23.380 --> 00:05:25.330
connections going through the ricer.

62
00:05:26.360 --> 00:05:33.500
If you have an oxygen applied on the way out only, but return traffic will be allowed because all traffic

63
00:05:33.500 --> 00:05:35.840
is allowed when an e-mail is not applied.

64
00:05:36.020 --> 00:05:40.940
So if you just have an e-mail applied in the outbound direction, you don't have an e-mail applied in

65
00:05:40.940 --> 00:05:42.620
the inbound direction as well.

66
00:05:42.640 --> 00:05:46.600
But all traffic will be allowed inbound because there's not an e-mail to control it.

67
00:05:47.060 --> 00:05:53.570
If you have �kos applied in both directions, you will need explicit entries to allow both the outbound

68
00:05:53.570 --> 00:05:57.980
and return traffic as well, because it does not keep track of the state.

69
00:05:58.140 --> 00:06:04.940
It's not going to recognize the incoming traffic, the traffic coming back as valid return traffic.

70
00:06:06.320 --> 00:06:12.580
So we'll do a similar example to what we had earlier with firewall, but now we're doing it for an access

71
00:06:12.590 --> 00:06:13.030
control.

72
00:06:13.550 --> 00:06:17.950
So here we've got an inbound ACL on the outside interface.

73
00:06:17.960 --> 00:06:20.990
So that's going to apply traffic coming in from the outside.

74
00:06:21.140 --> 00:06:23.080
And they're the same as we did with the firewall.

75
00:06:23.090 --> 00:06:24.590
We're going to deny all traffic.

76
00:06:24.920 --> 00:06:28.130
We also have an inbound ACL on the inside interface.

77
00:06:28.130 --> 00:06:31.760
So that's going to affect traffic coming from the inside, going to the outside.

78
00:06:31.910 --> 00:06:36.620
And there were going to Web traffic from ten to twenty four.

79
00:06:36.740 --> 00:06:39.530
So the same is what we were doing with the firewall.

80
00:06:41.040 --> 00:06:47.640
Then a host on the inside 10, Dalton, Dalton, Dalton, Senge, outgoing Web traffic to the external

81
00:06:47.640 --> 00:06:51.800
served on the Internet, two or three or one one three ten.

82
00:06:52.080 --> 00:06:57.160
We've got the inbound e-mail on the inside interface, which permits Web traffic from Tandler.

83
00:06:57.210 --> 00:07:03.390
Handles handle all swash twenty four, but does allow traffic to the web server so the traffic will

84
00:07:03.390 --> 00:07:05.880
be allowed to pass through the router.

85
00:07:06.240 --> 00:07:09.360
The connection is not tracked in a connection.

86
00:07:09.360 --> 00:07:12.200
Tableful like it would be in stateful firewall.

87
00:07:12.990 --> 00:07:19.610
So then when the web server tries to send return traffic back in comes from two or three or one one

88
00:07:19.630 --> 00:07:21.690
three, ten or eight going.

89
00:07:21.910 --> 00:07:24.750
It handles handle ten point four nine one six.

90
00:07:24.790 --> 00:07:31.350
Who is going to be dropped because of the inbound hgl on the outside interface to deny all traffic?

91
00:07:31.560 --> 00:07:37.830
She can see there is a difference between stateful firewall and a pocket filter, a stateful firewall

92
00:07:37.830 --> 00:07:45.060
distract state of connections and allows Vinewood return traffic and HGL does not track the state of

93
00:07:45.060 --> 00:07:45.780
connections.

94
00:07:45.870 --> 00:07:51.150
So if you've got �kos applied in both directions, you're going to need to have explicit rules to allow

95
00:07:51.150 --> 00:07:53.570
traffic going out and coming in as well.

96
00:07:54.800 --> 00:08:01.970
So return till I return traffic in our example, you need to either remove the denial traffic from outside

97
00:08:01.970 --> 00:08:10.340
to inside ICAO on the outside interface or odd permit TGP any equals Athie cannot understand or order,

98
00:08:10.340 --> 00:08:15.710
order, order two five five range four nine one five to six five five three five.

99
00:08:15.910 --> 00:08:23.300
So with the first access controllers there, what you'd be doing is just basically turning off security

100
00:08:23.480 --> 00:08:25.010
from the seat of INSIGHT.

101
00:08:25.010 --> 00:08:28.700
Obviously you don't want to do that with the second example.

102
00:08:28.700 --> 00:08:32.480
You still have an issue on the outside for traffic coming in.

103
00:08:32.690 --> 00:08:37.820
But what you're doing is you're seeing if it's coming from a Web server, then allow it to go inside

104
00:08:37.820 --> 00:08:42.429
horse on the entire range of possible part numbers.

105
00:08:42.799 --> 00:08:49.850
So it's not shocking to see if connection and this view is opening up a security hole in your network.

106
00:08:50.060 --> 00:08:56.410
So those two options, neither of them is a secure option for a router connected to the Internet.

107
00:08:56.690 --> 00:09:01.850
So because of that, we would always have a stateful firewall connected to the Internet because we do

108
00:09:01.850 --> 00:09:07.280
want to have higher level security and be able to track the state of the connections.

109
00:09:08.640 --> 00:09:14.040
Now, you might have heard of the established keyword before and you might think this is a solution

110
00:09:14.040 --> 00:09:14.650
to the problem.

111
00:09:14.970 --> 00:09:21.960
So what we can do here is on our list, on the outside interface for traffic that is coming in, we

112
00:09:21.960 --> 00:09:24.260
could see adversarial access.

113
00:09:24.480 --> 00:09:27.970
One hundred permit HCP any equals Athie.

114
00:09:27.990 --> 00:09:34.070
So we're looking for any traffic that is coming inbound from a Web server that is going to hand out

115
00:09:34.080 --> 00:09:39.120
hand to hand or order, order, order to verify when we see if it was established.

116
00:09:39.390 --> 00:09:47.550
Now, intuitively, this looks like it's making the ox's control list on the right or in the full manner,

117
00:09:47.700 --> 00:09:51.170
but it doesn't actually do what you think it does.

118
00:09:51.180 --> 00:09:54.090
It doesn't mean much of a connection.

119
00:09:54.090 --> 00:09:59.590
And if it was established from the inside going I liable to turn traffic back in doesn't actually mean

120
00:09:59.610 --> 00:10:06.870
that the established keyword and an ACL only checks for the OC flag in return traffic.

121
00:10:07.110 --> 00:10:13.170
It does not keep track of the of the connections.

122
00:10:13.350 --> 00:10:21.300
So if you do this, it's not turning your ACL or stateful ACL and it's actually easy for attackers to

123
00:10:21.300 --> 00:10:25.010
get rankest just by setting the flag in their traffic.

124
00:10:25.120 --> 00:10:28.350
Again, it's still not as secure as the full firewall.

125
00:10:29.490 --> 00:10:39.330
Now it is possible to enable the firewall feature set on Rohter, so if you do enable the IOW firewall

126
00:10:39.330 --> 00:10:45.490
feature set, that does turn it into a stateful firewall with the firewall features.

127
00:10:45.630 --> 00:10:49.070
It uses different commands and you use in ECL.

128
00:10:50.820 --> 00:10:56.280
OK, so now you're maybe thinking, well, why do we even have ox's control lists then?

129
00:10:56.550 --> 00:10:58.980
Wouldn't we just use a firewall everywhere?

130
00:10:59.010 --> 00:11:02.970
Well, actually, you can use them to complement each other.

131
00:11:03.360 --> 00:11:10.890
So your ACL pocket filters and your viewers can add to an overall defense in depth strategy with your

132
00:11:10.890 --> 00:11:11.850
defense posture.

133
00:11:11.880 --> 00:11:14.420
You don't want to put all your eggs in one basket.

134
00:11:14.610 --> 00:11:20.010
You don't want to just have a firewall and watch your entire security defense.

135
00:11:20.160 --> 00:11:22.200
You want to have defense in depth.

136
00:11:22.290 --> 00:11:23.760
So you've got a firewall there.

137
00:11:23.760 --> 00:11:29.070
If an attacker manages to get through the firewall, you've got other defense mechanisms beyond that

138
00:11:29.070 --> 00:11:31.050
as well to make it more difficult for them.

139
00:11:31.290 --> 00:11:34.860
Also, a firewall, really guards against external threats.

140
00:11:35.040 --> 00:11:37.770
You need to guard against internal threats as well.

141
00:11:37.770 --> 00:11:39.240
So you don't just have a firewall.

142
00:11:39.400 --> 00:11:42.690
You also have additional security mechanisms in place.

143
00:11:43.050 --> 00:11:49.290
Standard practice is to use firewalls on major security boundaries, such as your Internet age, and

144
00:11:49.290 --> 00:11:51.750
augment this with internal issues.

145
00:11:52.110 --> 00:11:58.590
Purely external threats are primarily covered with strong firewall and IP protection on the network.

146
00:11:58.590 --> 00:12:05.190
Perimeter sense hosts should also have a firewall and IP protection from internal hosts.

147
00:12:06.250 --> 00:12:12.610
So let's have a look at an example, network topology again, this is the exact same topology as we

148
00:12:12.610 --> 00:12:14.400
had in the last year.

149
00:12:14.650 --> 00:12:16.620
So we've got our Internet edge here.

150
00:12:16.630 --> 00:12:22.060
We've got a firewall on the perimeter between our internal network.

151
00:12:22.060 --> 00:12:26.640
And I say to the Internet and we've got our servers in DMZ.

152
00:12:26.800 --> 00:12:32.980
We have traffic going to our internal servers here, both from our internal hosts and from the Internet

153
00:12:32.980 --> 00:12:33.580
as well.

154
00:12:33.700 --> 00:12:39.440
We've also got an IPS there to give it an additional level of security.

155
00:12:39.640 --> 00:12:44.860
Now, the difference we're going to do here is that on the inside, we've got two different departments

156
00:12:44.860 --> 00:12:45.070
here.

157
00:12:45.250 --> 00:12:51.670
We've got Department AI and Department B, and for example, I'll share the department in department

158
00:12:51.670 --> 00:12:55.400
because she'd should never actually be communicating with each other.

159
00:12:55.630 --> 00:13:01.840
Well, I can't enforce on the firewall here because Department Air and Department B are connected to

160
00:13:01.840 --> 00:13:05.800
only our three switch on the insight to traffic between the two departments.

161
00:13:05.800 --> 00:13:07.300
We just go via the switch.

162
00:13:07.300 --> 00:13:09.100
It never touches the firewall.

163
00:13:09.280 --> 00:13:15.160
So in this situation, how can I secure traffic between the two different departments?

164
00:13:15.520 --> 00:13:18.400
Well, I could put another firewall in that.

165
00:13:18.400 --> 00:13:23.490
That would add to the expanse and also to the complex is, well, a much easier option.

166
00:13:23.490 --> 00:13:29.770
And what I'm going to do is I'm going to configure an e-mail or my earlier three switch here to prevent

167
00:13:29.770 --> 00:13:34.890
traffic between those two internal departments so they can BHUVAN departments can get out of Internet.

168
00:13:35.050 --> 00:13:39.670
They can also get to the internal servers, but are not allowed to communicate with each other.

169
00:13:40.340 --> 00:13:43.930
OK, so that was how stateful firewalls work.

170
00:13:44.380 --> 00:13:50.920
OK, also a competition with packet filters are e-mails and how you can use them in combination with

171
00:13:50.920 --> 00:13:51.430
each other.

172
00:13:51.640 --> 00:13:53.080
See you in the next lecture.

