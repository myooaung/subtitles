WEBVTT
1
00:00:06.350 --> 00:00:15.140
In this lecture, you'll learn about classification and marking, which is part of your KUOW configuration

2
00:00:15.680 --> 00:00:21.680
for year or switch to give a particular level of service to a type of traffic.

3
00:00:22.140 --> 00:00:30.050
Obviously, it has to recognize traffic first, common ways to recognize for traffic hour by costs,

4
00:00:30.380 --> 00:00:32.270
which is class of service.

5
00:00:32.270 --> 00:00:40.520
That's only are to marking DCPI, which is differentiated service code point, but only are three.

6
00:00:40.520 --> 00:00:48.080
Marking an access control list are using Anbar, which is network based application recognition.

7
00:00:48.260 --> 00:00:50.570
And we're going to cover Waterboys.

8
00:00:50.570 --> 00:00:53.030
Different types are in this lecture.

9
00:00:54.710 --> 00:01:03.440
So first one was cost of service, this is on layer to KUOW marking there's a three bit field in the

10
00:01:03.440 --> 00:01:10.790
layer to or two point one huge frame header, which is used to carry the cost marking service every

11
00:01:10.790 --> 00:01:10.970
bit.

12
00:01:10.970 --> 00:01:18.610
Field in Middleton Q header is specifically used for marking and versus free bits.

13
00:01:18.620 --> 00:01:26.480
So that means that we can set a value from zero through to seven and the default value is zero, which

14
00:01:26.480 --> 00:01:29.120
is designated as best effort traffic.

15
00:01:29.250 --> 00:01:34.610
So if a value is not explicitly put on there, it will be left at zero cost.

16
00:01:34.610 --> 00:01:40.640
Six and seven are reserved for network use like growing protocol network control.

17
00:01:40.640 --> 00:01:50.360
Traffic service means the next highest value available is five, which costs the higher the number,

18
00:01:50.540 --> 00:01:53.090
the more important the traffic.

19
00:01:53.090 --> 00:01:58.310
Typically IP Fawn's Mark Vercoe signaling traffic as Coche three.

20
00:01:58.640 --> 00:02:06.770
What Colque signalling is used for is setting up a call and taking a call down the voice payload, which

21
00:02:06.770 --> 00:02:10.340
is the Sporkin voice is marked as Cos� five.

22
00:02:10.460 --> 00:02:17.720
So we use two different values there because the spoken voice is more important than the call signalling,

23
00:02:17.930 --> 00:02:23.840
you know, I should use the requirements for voice in the last lecture, which was the maximum latency

24
00:02:23.840 --> 00:02:30.320
of one hundred and fifty milliseconds, maximum of thirty milliseconds and a maximum loss of one percent.

25
00:02:30.650 --> 00:02:33.830
Voice requirements are Furbish Sporkin voice.

26
00:02:34.070 --> 00:02:42.020
If I am here in Thailand and you're over in New York and I'm talking to you over an IP call, my pockets

27
00:02:42.020 --> 00:02:48.440
have got a hundred and fifty milliseconds to get you and its spoken voice, the call signaling which

28
00:02:48.440 --> 00:02:50.570
handles we call Charpentier down.

29
00:02:50.720 --> 00:02:56.240
Well, if those pockets get delayed, then maybe the call takes a fraction of a second longer to say

30
00:02:56.240 --> 00:02:57.290
up or tear down.

31
00:02:57.440 --> 00:02:58.460
It's not a big deal.

32
00:02:58.460 --> 00:03:00.230
We're not going to notice it on the call.

33
00:03:00.380 --> 00:03:02.720
So that's why the voice payload audience has spoken.

34
00:03:02.720 --> 00:03:05.660
Voice gets given a higher value than call signalling.

35
00:03:07.120 --> 00:03:16.750
Next, marking is DGP differentiates differentiated surfaces, could point, and so we just covered

36
00:03:16.750 --> 00:03:25.360
the class of service marking that is coated in a layer to header the DCP value is coded into layer three

37
00:03:25.360 --> 00:03:30.640
in the IP header in an iPad or a single byte called.

38
00:03:30.640 --> 00:03:36.160
He was the type of service based on the DCPI value is coded in there.

39
00:03:36.340 --> 00:03:39.460
A single buycks type of service has got eight bits.

40
00:03:39.700 --> 00:03:43.810
DCP uses the first six bits in that byte.

41
00:03:43.990 --> 00:03:47.310
Six bits gives us sixty four possible values.

42
00:03:47.620 --> 00:03:49.470
Again, the default is zero.

43
00:03:49.520 --> 00:03:55.480
So if a value is not explicitly put on, there is going to be marked as DCP zero, which is designated

44
00:03:55.480 --> 00:03:56.260
for best effort.

45
00:03:56.260 --> 00:04:00.970
Traffic doesn't get any special service IP phones mark.

46
00:04:00.970 --> 00:04:09.250
There are calls signaling traffic as DCP 24, which is also known as she asked three.

47
00:04:09.520 --> 00:04:15.400
So FDCPA versus 64 possible values going from zero to sixty three new medical.

48
00:04:15.640 --> 00:04:23.200
And those values have also got the code name, which is basically like a nickname for the numerical

49
00:04:23.200 --> 00:04:23.670
value.

50
00:04:23.860 --> 00:04:27.730
Just she has three is the nickname for DCB.

51
00:04:27.730 --> 00:04:28.570
Twenty four.

52
00:04:28.690 --> 00:04:30.550
They both mean exactly the same thing.

53
00:04:30.820 --> 00:04:33.580
Code signaling traffic marked as twenty four.

54
00:04:33.700 --> 00:04:34.450
She has three.

55
00:04:34.690 --> 00:04:41.530
The voice payload again gets a higher value is the P forty six which is also known as Eastaugh which

56
00:04:41.530 --> 00:04:42.820
is expedited forwarding.

57
00:04:43.630 --> 00:04:47.440
So there are standard markings for other traffic types as well.

58
00:04:47.590 --> 00:04:54.820
Those are the standard markings for voice signalling and voice payload, which should be used by all

59
00:04:54.820 --> 00:05:01.090
vendors for some other traffic types, for standard markings, for voice as well, such as 26, which

60
00:05:01.090 --> 00:05:08.800
is F thirty one for mission-critical data and thirty four, which is er for a one for standard definition

61
00:05:08.800 --> 00:05:09.160
video.

62
00:05:09.370 --> 00:05:11.710
High definition video uses tags for.

63
00:05:13.630 --> 00:05:17.740
Next thing to talk about is the trust boundary.

64
00:05:17.920 --> 00:05:25.920
The switch the end devices are plugged into should be configured to trust markings from an IP phone.

65
00:05:25.930 --> 00:05:29.200
It's plugged in there and pass them on unchanged.

66
00:05:29.410 --> 00:05:37.810
The IP phone is generating its own pockets and it's going to put its own markings on those pockets,

67
00:05:38.080 --> 00:05:45.220
the switch to trust them so they get passed on to the router so the writer can put them into the better.

68
00:05:45.220 --> 00:05:45.640
Q.

69
00:05:46.680 --> 00:05:54.450
But you don't want to trust any markings from the pi�ce behind the forward because maybe there's a user

70
00:05:54.450 --> 00:06:00.630
there and he or she is tech savvy and they think, oh, I've got an IP phone plugged in here.

71
00:06:00.750 --> 00:06:07.320
If I marked my own pocket, coming from the PC is EASTAUGH, I'll get better quality service and the

72
00:06:07.330 --> 00:06:07.790
right.

73
00:06:08.070 --> 00:06:11.620
But the problem is that bandwidth is going to take bandwidth away.

74
00:06:11.620 --> 00:06:15.910
If it was designated for voice and it's going to cause bad call, a voice calls.

75
00:06:16.110 --> 00:06:21.630
So you need to make sure that the switch trust the phone, but it doesn't trust the PC behind the phone.

76
00:06:21.660 --> 00:06:23.100
So trust before.

77
00:06:23.110 --> 00:06:25.770
And any traffic coming from the PC behind there.

78
00:06:25.920 --> 00:06:32.790
The switch you'd mark traffic down to cost zero and zero, marking it as best effort.

79
00:06:33.730 --> 00:06:40.630
And in this light here, you can see the pocket coming from the phone, if you are confused about the

80
00:06:40.630 --> 00:06:49.090
cost in the DSP value, the phone can put both a cost and a DGP value on the same pocket.

81
00:06:49.240 --> 00:06:55.290
So this is a single pocket here and you see Forna sending atrophic to somebody in another office.

82
00:06:55.750 --> 00:07:00.820
We've got the Lear five to layer seven information in the pocket, which is going to include bespoke

83
00:07:00.820 --> 00:07:06.160
invoice layer for Voice Uses UDP.

84
00:07:06.380 --> 00:07:08.710
I'll just go in a quick tangent for one second here.

85
00:07:08.860 --> 00:07:09.550
You know what?

86
00:07:09.550 --> 00:07:15.430
In in the early lectures when we were talking about earlier for Nusi stock and we spoke about TCP and

87
00:07:15.430 --> 00:07:24.490
UDP and TCP connection oriented, and if a packet is lost, it will reach and pocket what is UDP is

88
00:07:24.490 --> 00:07:25.450
best effort.

89
00:07:25.540 --> 00:07:29.230
It just stands and assumes that it's going to get there.

90
00:07:29.440 --> 00:07:33.890
Well, voice uses UDP Roggeveen TGP.

91
00:07:33.910 --> 00:07:37.720
Maybe when we were doing was lectureship before you thought well why would we ever use UDP.

92
00:07:37.720 --> 00:07:44.680
We're always going to use TCP for voice traffic because you've got voice quality requirements that if

93
00:07:44.680 --> 00:07:48.130
a packet is lost there's no point in sending it again.

94
00:07:48.130 --> 00:07:49.710
It's too late already.

95
00:07:49.750 --> 00:07:54.280
So we use UDP for voice because it's got less overhead than TCP.

96
00:07:54.550 --> 00:08:00.090
The actual protocol is used is AACAP Realtime Protocol, which is based on UDP.

97
00:08:00.340 --> 00:08:04.630
So on our voice pocket when we're sitting at our table can voice our voice payload.

98
00:08:04.810 --> 00:08:12.040
We've got the AATB UDP part number and therefore as the phone is making the packet, it will then encapsulate

99
00:08:12.040 --> 00:08:17.710
that with the layer three header which has got the source and the destination IP address, and it also

100
00:08:17.710 --> 00:08:22.870
puts the DCPI value in that IP header, its voice pagosa.

101
00:08:22.870 --> 00:08:29.020
It marks as f the phone or not saying pocket encapsulated in the layer to header.

102
00:08:29.290 --> 00:08:35.710
The layer to header has got the source and the destination mark addresses and it will mark the profligately

103
00:08:35.710 --> 00:08:37.510
or two as Coche five.

104
00:08:37.659 --> 00:08:39.130
So it's not an either or thing.

105
00:08:39.130 --> 00:08:43.510
The phone will put Beauvoir's markings on the pocket.

106
00:08:44.350 --> 00:08:45.790
OK, moving on.

107
00:08:46.660 --> 00:08:52.060
Next up, so our quality requirements for voice on video, voice and video and points that we just covered,

108
00:08:52.060 --> 00:08:55.060
they marked their own Scherfig with a DCPI value.

109
00:08:55.060 --> 00:08:57.640
They can do that because they're generating the package.

110
00:08:58.240 --> 00:09:04.630
If you want to give a particular quality of service to an overapplication, however, idea application

111
00:09:04.630 --> 00:09:10.960
running between our workstation and a server, the endpoints will typically not be able to mark their

112
00:09:10.960 --> 00:09:11.650
own traffic.

113
00:09:11.650 --> 00:09:14.180
That won't be supported in the application.

114
00:09:14.440 --> 00:09:23.020
So in that case, you can market for that endpoint and access control list can be used to recognize

115
00:09:23.020 --> 00:09:26.650
traffic based on its layer three and layer for information.

116
00:09:26.980 --> 00:09:34.450
For example, secure shelf traffic going to and from a router tend to handle 110 on TCP, part number

117
00:09:34.450 --> 00:09:42.100
22 if you want it to give that S.H. Traffic Better service because access is an interactive application.

118
00:09:42.220 --> 00:09:47.800
When you're using it, you get an immediate response back from the thing that you're configuring with

119
00:09:47.800 --> 00:09:48.370
associates.

120
00:09:48.520 --> 00:09:53.360
If you're finding that vice louvres a delay, you could give associates better service.

121
00:09:53.650 --> 00:09:56.500
Well, you probably wouldn't need to because it's very small bandwidth anyway.

122
00:09:56.680 --> 00:10:04.180
But is traffic that maybe you would want to configure a kiosk policy for with your PC is not going to

123
00:10:04.180 --> 00:10:08.770
be a market when associates pocket or switch wouldn't do that either.

124
00:10:08.770 --> 00:10:10.020
But you can do it for it.

125
00:10:10.060 --> 00:10:18.130
So on switch that is connected to the PCs on to the router, you can configure an ACL there which is

126
00:10:18.130 --> 00:10:22.600
looking for traffic going to and from the router on part 22.

127
00:10:22.810 --> 00:10:26.890
And you can configure a policy that will mark that with a DSP value.

128
00:10:27.980 --> 00:10:30.520
So that's one way you can mark the traffic for the endpoints.

129
00:10:30.760 --> 00:10:33.400
Another way you can do it is with Anvar.

130
00:10:33.550 --> 00:10:39.730
So an access control list that you've learned about already, you know that we can specify we can recognise

131
00:10:39.730 --> 00:10:46.990
traffic based on layer three and forward information in the ECL and bar the deeper packet inspection

132
00:10:46.990 --> 00:10:52.910
and stands for network based application recognition and it can recognize traffic based on it.

133
00:10:52.910 --> 00:10:57.550
So we're free to layer seven characteristics to users.

134
00:10:57.560 --> 00:11:03.040
You can download signatures from Cisco and you can think of it just like your antivirus software.

135
00:11:03.250 --> 00:11:08.860
You know, if your antivirus software, you install that and you regularly update it with new antivirus

136
00:11:08.860 --> 00:11:09.490
signatures.

137
00:11:09.670 --> 00:11:14.160
The antivirus signatures look for NGUON characteristics of a particular virus.

138
00:11:14.530 --> 00:11:20.230
And Bart is doing the same kind of thing, is looking for new characteristics of a particular application

139
00:11:20.440 --> 00:11:21.550
up to VMware.

140
00:11:21.550 --> 00:11:27.700
Seven information in that pocket so you can download signatures from school for wellknown applications.

141
00:11:27.820 --> 00:11:30.220
You can also write your own custom applications.

142
00:11:30.220 --> 00:11:32.740
You don't custom signatures if you want to as well.

143
00:11:34.970 --> 00:11:40.220
OK, so there are other methods we can use as well, but those are the mean methods that are most commonly

144
00:11:40.220 --> 00:11:49.220
used for DCPI is preferred classification and Markit method, because the writer can very quickly gather

145
00:11:49.220 --> 00:11:53.030
the information from a single byte in the IP header.

146
00:11:53.300 --> 00:11:59.990
If you compare this with Anvar, with Anbar, all traffic going through or the driver has to check this

147
00:11:59.990 --> 00:12:00.770
type of traffic.

148
00:12:00.770 --> 00:12:01.710
I'm looking for it or not.

149
00:12:01.730 --> 00:12:06.290
So all pocket's it is looking up to layer seven information in the pocket.

150
00:12:06.650 --> 00:12:12.500
If if it's looking at the information instead, that's just a single by in the IP header.

151
00:12:12.500 --> 00:12:18.470
So obviously the right word is doing a lot less work to look for DCPI information rather than using

152
00:12:18.470 --> 00:12:18.990
Anbar.

153
00:12:19.190 --> 00:12:24.740
So it's preferred that when traffic gets to the driver, it should be the VCP.

154
00:12:24.980 --> 00:12:30.050
That is the marking type that is specified in your cuing policies.

155
00:12:30.830 --> 00:12:36.830
If you do use another method like ACOR Anbar, because the endpoint can't markets zone traffic that

156
00:12:36.830 --> 00:12:39.530
should be done is close to the source as possible.

157
00:12:39.680 --> 00:12:44.360
And then at DCPI value added there she can see an example.

158
00:12:44.360 --> 00:12:49.770
Here we've got the server is running an important application that we want to give better service to.

159
00:12:49.800 --> 00:12:58.490
So we need to recognize the traffic from the application so we configure equal policy, a classification

160
00:12:58.490 --> 00:13:05.150
and marketing policy on our earlier three switch that is connected to the server, looking at the layer

161
00:13:05.150 --> 00:13:13.460
free and clear for information in the ashow, then on switch when we send it on upstream, the switch

162
00:13:13.730 --> 00:13:17.120
odd's a DSP value on traffic.

163
00:13:17.210 --> 00:13:25.820
So rather than having the ECL on the router and having it do more work, we add the ACL and switch and

164
00:13:26.010 --> 00:13:31.490
distributes the QC effort and it makes things more efficient.

165
00:13:31.790 --> 00:13:37.190
OK, so that was it for classification and marking.

166
00:13:37.220 --> 00:13:41.120
When you do classification and marking, this isn't actually doing anything yet.

167
00:13:41.330 --> 00:13:45.710
Always doing is putting p value in the pocket.

168
00:13:45.710 --> 00:13:49.060
It's not giving it any different service yet.

169
00:13:49.340 --> 00:13:52.430
This is a misconfiguration misunderstanding.

170
00:13:52.430 --> 00:13:57.320
I see sometimes that people think they can just do classification and marking and Rotch QC configured.

171
00:13:57.320 --> 00:14:00.920
It's not classification and marking doesn't do anything on its own.

172
00:14:01.040 --> 00:14:02.630
It puts the marking on there.

173
00:14:02.840 --> 00:14:10.340
But then you have to take an action based on not marking or switches to recognise the traffic and then

174
00:14:10.340 --> 00:14:13.490
give it a different type of service.

175
00:14:14.070 --> 00:14:19.400
Usually we're going to be doing queuing when we do that and that's what we're going to be covering in

176
00:14:19.400 --> 00:14:20.570
the next lecture.

177
00:14:20.570 --> 00:14:22.010
And I'll show you how to do it there.

