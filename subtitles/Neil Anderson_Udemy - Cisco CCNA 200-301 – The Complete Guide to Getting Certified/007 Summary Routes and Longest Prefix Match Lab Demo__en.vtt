WEBVTT
1
00:00:06.260 --> 00:00:11.420
In this lecture, we'll do a walkthrough in the lab of our

2
00:00:11.450 --> 00:00:20.290
summary routes and our default routes. We're using the same lab set up again with three PCs and five

3
00:00:20.340 --> 00:00:21.210
routers.

4
00:00:21.250 --> 00:00:29.510
They're all pre-configured with their IP addresses and routers R1 to R4 have connectivity to 

5
00:00:29.510 --> 00:00:37.640
each other along the top path with static routes. R5 does not have any routing configured yet. Let's

6
00:00:37.790 --> 00:00:38.790
have a look at that.

7
00:00:38.820 --> 00:00:41.790
So I'm here on PC1,

8
00:00:41.790 --> 00:00:49.190
let's just move over to R1 and do a 'show ip route'. And

9
00:00:49.220 --> 00:00:57.920
you can see I've got static routes for all of the individual 10.1.0.0/16

10
00:00:57.920 --> 00:01:06.080
networks configured on R1. On R2, I've got routes configured there as well,

11
00:01:06.080 --> 00:01:08.270
again all /24s.

12
00:01:08.450 --> 00:01:16.870
The same on R3 and on R4, so

13
00:01:16.930 --> 00:01:24.580
if I jump onto PC1 and then let's just have a look and see the IP address of PC3, okay so PC1

14
00:01:24.600 --> 00:01:26.700
is 10.0.0.10,

15
00:01:26.710 --> 00:01:29.860
PC3 is 10.1.2.10.

16
00:01:30.010 --> 00:01:39.880
So from PC1, I ping 10.1.2.10, you can see that there's connectivity there and also

17
00:01:39.880 --> 00:01:47.050
I'll do a traceroute as well so I'll trace 10.1.2.10 and you can see it's going

18
00:01:47.050 --> 00:01:55.450
10.0.1.1, 10.0.0.2, 10.1.0.1, and 10.1.1.1.

19
00:01:55.510 --> 00:02:02.570
We have to look back at the topology diagram, it's going R1 to R2 to R3 to R4.

20
00:02:02.610 --> 00:02:05.160
Okay, so that is the current set up.

21
00:02:05.380 --> 00:02:16.930
If we have a look back at R1 again, you'll see that it's got individual routes for each of the networks

22
00:02:16.990 --> 00:02:20.960
going over to the left hand side.

23
00:02:21.090 --> 00:02:24.720
So let's just remove these individual routes

24
00:02:24.730 --> 00:02:36.160
so I'll go 'config t' and 'no ip route 10.1.0.0 255.255.255.0'. 

25
00:02:36.280 --> 00:02:44.700
I can see it's a /24 from the routing table and the next hop was 10.0.0.2. So that will

26
00:02:44.700 --> 00:02:46.060
remove the first route

27
00:02:46.090 --> 00:03:00.580
I'll use the up arrow to remove the second route which is 10.1.1.0 and also 10.1.2.0, and finally,

28
00:03:00.610 --> 00:03:04.830
10.1.3.0.

29
00:03:05.060 --> 00:03:08.680
Again, if I now do a 'do show ip route,'

30
00:03:08.830 --> 00:03:16.540
I should see I've got no static routes left in a routing table and if I tried to ping PC3 from

31
00:03:16.540 --> 00:03:22.380
PC1 now this is going to fail because R1 doesn't have routes.

32
00:03:22.500 --> 00:03:30.520
Okay, so let's replace all of those individual /24 routes with a single summary route.

33
00:03:30.580 --> 00:03:41.450
So before, if we just scroll up a little bit, I had four separate /24 routes for 10.1.0.0,

34
00:03:41.560 --> 00:03:45.500
10.1.1.0, 10.1.2.0, 10.1.3.0. So I can replace that with a summary route,

35
00:03:45.550 --> 00:03:53.350
I'll make that ip route 10.1.0.0 and a /16, so 255.255.0.0,

36
00:03:53.410 --> 00:03:59.980
and this will cover everything that begins with 10.1 it doesn't matter what the last two octets

37
00:04:00.040 --> 00:04:07.770
are, and the next hop address is 10.0.0.2. And if I now do a 'do show ip route.'

38
00:04:07.780 --> 00:04:14.600
I've just got one static route in the routing table rather than four, and this should give me connectivity

39
00:04:14.740 --> 00:04:17.410
from PC1 to PC3. Again,

40
00:04:17.500 --> 00:04:24.010
let's just check that, so I'll do the ping and you see that hopefully in a second this will work,

41
00:04:24.010 --> 00:04:24.510
there you go

42
00:04:24.510 --> 00:04:29.370
so it took a couple of pings for ARP and stuff like that and the ping is now working.

43
00:04:29.410 --> 00:04:31.990
So that's how you can configure a summary route.

44
00:04:32.020 --> 00:04:37.210
It cuts down on your admin work because you don't need to configure so many routes,

45
00:04:37.210 --> 00:04:41.280
it also takes up a little less memory in the routers as well.

46
00:04:41.330 --> 00:04:47.220
Okay, so that was the first part of the lab that I wanted to show you. The next thing that I want to show

47
00:04:47.220 --> 00:04:54.070
you is the effect of the Longest Prefix Match when we have overlapping routes.

48
00:04:54.160 --> 00:05:01.860
So let's go back to the topology diagram again, and we've got connectivity between that routers R1

49
00:05:01.860 --> 00:05:09.160
to R4 along the top path. R5 does not have any routes configured right now.

50
00:05:09.250 --> 00:05:10.460
So, let's fixed that.

51
00:05:10.490 --> 00:05:18.870
I'll configure a summary route on R5 pointing at the routes behind R1 which all start with

52
00:05:18.870 --> 00:05:29.460
10.0. So back on the lab again, I'll go onto R5 and I'll configure 'ip route 10.0.0.0

53
00:05:29.500 --> 00:05:35.790
255.255.0.0', I'll use a /16 again as a summary to cover all

54
00:05:35.790 --> 00:05:46.680
the networks, and the next hop address on R1 was 10.0.3.1. Then, I want to check that

55
00:05:46.680 --> 00:05:55.410
I can ping this from the far side of R5. So, I'll just have a quick look back the diagram again.

56
00:05:56.060 --> 00:06:01.710
Now, obviously, R5 is able to ping 10.0.3.1 out the fasterEthernet3/0

57
00:06:01.710 --> 00:06:09.630
interface. I'm going to ping a 10.0 network from the 10.1.3.2 interface that's 

58
00:06:09.650 --> 00:06:17.850
fastEthernet2/0 on R5, and I'm going to ping PC1. Now, the way that ping works by default by the way,

59
00:06:17.850 --> 00:06:26.480
that any traffic originating from the router itself works is it uses the exit interface as the IP address.

60
00:06:26.820 --> 00:06:33.480
So if I just do a standard ping from R5 going to 10.0.1.10 the source address will

61
00:06:33.480 --> 00:06:40.140
be 10.0.3.2 because that would be the exit interface. That I can override this by doing

62
00:06:40.140 --> 00:06:47.310
an extended ping I'm saying I want to use 10.1.3.2 as the source address. So the way

63
00:06:47.310 --> 00:06:52.650
I do that is on R5, I'm just going to enter ping and then it's going to take me through the extended

64
00:06:52.650 --> 00:06:53.230
commands.

65
00:06:53.280 --> 00:07:02.730
Yes I do want to use IP, the target IP address is PC1 which is 10.0.1.10, repeat count is

66
00:07:02.730 --> 00:07:03.930
5, that's fine,

67
00:07:03.930 --> 00:07:06.330
same for the size and the timeout.

68
00:07:06.390 --> 00:07:12.750
Yes, I do want to use extended commands because I'm going to set the source IP address to be

69
00:07:12.780 --> 00:07:21.870
10.1.3.2. And then I can just take defaults for everything else and hit Enter to get those, and it's

70
00:07:21.870 --> 00:07:28.340
doing the ping now. And again missed first couple for ARP and then the ping was a success.

71
00:07:28.370 --> 00:07:35.370
So I do have connectivity between the far side interface on R5 and PC1.

72
00:07:35.520 --> 00:07:40.380
Next, let's check and see what path it's actually taking.

73
00:07:40.380 --> 00:07:47.220
So I'll do a traceroute as well I'll do an extended traceroute with the same settings again, so the

74
00:07:47.220 --> 00:07:51.020
target IP addresses is 10.0.1.10.

75
00:07:51.180 --> 00:08:00.000
The source address is going to be 10.1.3.2 again, and I can accept the defaults for

76
00:08:00.000 --> 00:08:07.800
everything else, and I can see it went to 10.0.3.1 and then 10.0.1.10.

77
00:08:07.830 --> 00:08:14.070
So we have a look at the topology diagram again, 10.0.3.1 is the fastEthernet3/0 

78
00:08:14.070 --> 00:08:20.670
interface on R1. So that traffic took the direct path. It went from R5 to R1 and

79
00:08:20.670 --> 00:08:27.540
then to PC1. And let's review what's going to happen with the traffic coming back in the other direction

80
00:08:27.540 --> 00:08:39.600
from PC1, so I'll jump back onto R1 again and I'll do a 'do show ip route' on here, and you see we've

81
00:08:39.600 --> 00:08:47.190
got that summary route that we just configured. So traffic for all of the 10.1 networks which includes

82
00:08:47.250 --> 00:08:57.710
the 10.1.3.2 interface on R5 is going to go via 10.0.0.2 which is on R2. Let's

83
00:08:57.720 --> 00:09:04.920
just look at the topology diagram again, so 10.0.0.2 is the fastEthernet0/0

84
00:09:04.920 --> 00:09:11.970
interface on R2. Okay, so the traffic going from R5 to R1 is taking the direct path between

85
00:09:11.970 --> 00:09:21.090
them, but the return traffic from R1 to R5 is going to go R1 to R2 to R3 to R4 to R5

86
00:09:21.090 --> 00:09:27.460
Let's just verify that that is what's actually happening, so I'm going to jump on PC1

87
00:09:27.630 --> 00:09:39.840
and do a 'traceroute 10.1.3.2'. So here is PC1 and I'll trace to 10.1.3.2,

88
00:09:39.930 --> 00:09:47.870
and you'll see it's going through all of those hops, so that was R1, R2, R3 and, R4.

89
00:09:48.140 --> 00:09:51.740
So, we've got an asynchronous traffic flow here.

90
00:09:51.740 --> 00:10:00.770
Traffic from R5 to PC1 is going directly via R1, traffic from PC1 going back to R5 is

91
00:10:00.770 --> 00:10:05.970
going through R1, R2, R3, R4 before it then gets to R5.

92
00:10:06.030 --> 00:10:13.940
So if you're routing, traffic in both directions is typically going to follow the same path but it doesn't

93
00:10:13.940 --> 00:10:14.700
have to.

94
00:10:14.750 --> 00:10:19.760
It's going to follow whichever path you tell your routers to take.

95
00:10:19.760 --> 00:10:22.450
Alright, so let's fix this now,

96
00:10:22.520 --> 00:10:28.570
let's set it up so that the traffic is going to go directly in both directions.

97
00:10:28.700 --> 00:10:38.970
So to do that, I need to go back onto R1 and I'm going to configure ip route for 10.1.3.0

98
00:10:38.970 --> 00:10:42.080
255.255.255.0,

99
00:10:42.130 --> 00:10:50.950
with a next hop of R5, on the directly connected link which was 10.0.3.2.

100
00:10:50.960 --> 00:10:56.430
And if I have a look at the routing table now, I'll do a 'show ip route'.

101
00:10:56.630 --> 00:11:02.580
You'll see I've got a route here for 10.1.0.0/16,

102
00:11:02.780 --> 00:11:08.280
and I've also got a route for 10.1.3.0/24.

103
00:11:08.330 --> 00:11:15.650
So 10.1.3.0/24 is actually a subset of the 10.1.0.0. Both of these routes make

104
00:11:15.650 --> 00:11:19.880
it into the routing table because they're not exactly the same.

105
00:11:20.060 --> 00:11:28.520
And what's going to happen is whenever I send traffic to 10.1.3.x it will match both of

106
00:11:28.640 --> 00:11:29.960
these routes.

107
00:11:30.230 --> 00:11:38.570
But because the second route has got a longer prefix, it's a /24 compared to a /16, meaning it's

108
00:11:38.570 --> 00:11:41.060
more specific, it's the bottom right

109
00:11:41.060 --> 00:11:47.880
that will take effect and the traffic will go via 10.0.3.2. Traffic for any other network

110
00:11:47.900 --> 00:11:53.240
that begins with 10.1 like 10.1.0 or 10.1.1, etc., will only match

111
00:11:53.240 --> 00:11:54.230
the top route.

112
00:11:54.230 --> 00:11:56.700
So it will go through the top route.

113
00:11:56.720 --> 00:12:01.220
So let's just verify that this is what's going to actually happen.

114
00:12:01.250 --> 00:12:08.420
So if I go back onto PC1 now, and 'trace 10.1.3.2' again, we should see this taking

115
00:12:08.420 --> 00:12:11.890
the direct path now and we can see that's what happened.

116
00:12:11.900 --> 00:12:12.220
Okay,

117
00:12:12.250 --> 00:12:19.130
so that was our summary routes and the effects of the longest prefix match.

