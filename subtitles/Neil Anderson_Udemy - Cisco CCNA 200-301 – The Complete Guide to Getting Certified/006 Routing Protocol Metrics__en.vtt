WEBVTT
1
00:00:06.300 --> 00:00:11.160
In this lecture, you'll learn about routing protocol metrics.

2
00:00:11.230 --> 00:00:19.350
A router may receive multiple possible paths to get to a destination network because it might have multiple

3
00:00:19.350 --> 00:00:21.900
different ways it can get to that network.

4
00:00:21.930 --> 00:00:27.470
It might have multiple neighboring routers with paths available through all of them.

5
00:00:27.720 --> 00:00:28.950
Only the best path,

6
00:00:28.980 --> 00:00:35.730
however, out of all the ones that the router knows about is going to make into the routing table and be

7
00:00:35.820 --> 00:00:44.040
used. So the different Interior Gateway Protocols (IGPs) needs some way of determining which is the best path,

8
00:00:44.360 --> 00:00:51.840
and they all use different methods to calculate that. Each possible path will be assigned a metric

9
00:00:51.840 --> 00:01:00.030
value by the routing protocol which indicates how preferred the path is, and the lowest metric value is preferred.

10
00:01:00.060 --> 00:01:01.680
So high numbers are bad,

11
00:01:01.680 --> 00:01:03.860
lower numbers are better.

12
00:01:03.990 --> 00:01:10.500
An easy way to remember this is with OSPF the name of the metric is cost.

13
00:01:10.500 --> 00:01:15.900
And just like if you go shopping, the lower the cost of something, the better it is.

14
00:01:15.900 --> 00:01:21.870
So remember go lower the cost or the lower the metric, the more preferred the path is going to be.

15
00:01:21.870 --> 00:01:28.740
Our Distance Vector routers advertise to each other the networks that they know about, and their metric to get

16
00:01:28.740 --> 00:01:29.740
to each of them.

17
00:01:29.810 --> 00:01:35.460
Link State routers advertise all the links in the area of the network to each other.

18
00:01:35.460 --> 00:01:42.420
Each router will take that information and then use it to make an independent calculation of its own

19
00:01:42.420 --> 00:01:44.820
best path to get to each destination.

20
00:01:46.500 --> 00:01:52.620
If the best path to a destination is lost, for example, because a link went down, it will be removed from

21
00:01:52.620 --> 00:01:56.490
the routing table and replaced with the next best route.

22
00:01:56.520 --> 00:01:59.180
The route that is got the next best metric,

23
00:01:59.190 --> 00:02:05.950
if one is available. So this is a big advantage of our dynamic routing protocols. They're self healing.

24
00:02:06.030 --> 00:02:11.630
If anything changes on the network, the routing tables will be updated to reflect that.

25
00:02:13.010 --> 00:02:20.140
So let's take a look at the different methods, the different metrics that are used by our different routing

26
00:02:20.140 --> 00:02:20.890
protocols,

27
00:02:20.950 --> 00:02:28.980
starting off with RIP, the Routing Information Protocol. RIP always uses hop count as the metric.

28
00:02:29.020 --> 00:02:31.690
A hop is meaning it goes through another router.

29
00:02:31.870 --> 00:02:38.090
So, how many routers does this router have to go through to get to the destination network.

30
00:02:38.200 --> 00:02:42.860
The maximum hop count by default in RIP is 15.

31
00:02:42.880 --> 00:02:52.160
You can't change that though. The paths which are more than 15 hops away are marked as unreachable by default. So there's

32
00:02:52.210 --> 00:02:56.410
a scalability limitation with RIP.

33
00:02:56.590 --> 00:03:07.060
In the example you see on the slide here, we've got network 10.0.1.0/24 is connected

34
00:03:07.060 --> 00:03:15.410
behind R1. And from R4, all the links in the top path are a hundred megabits per second links.

35
00:03:15.430 --> 00:03:25.480
They're all fastEthernet. The links going down via R5 are old 10 megabits per second links. But with RIP,

36
00:03:25.540 --> 00:03:33.670
because it always uses hop count, it is the bottom path that is going to be preferred, because it's only

37
00:03:33.670 --> 00:03:41.410
two hops to go from R4 to R5 to R1, rather than three hops going via R3, R2,

38
00:03:41.440 --> 00:03:50.290
and R1. So you can see a problem with RIP here, it's always going to use the shortest hop count even

39
00:03:50.290 --> 00:03:55.920
if those links are low bandwidth links, which would really not be the best path.

40
00:03:55.990 --> 00:04:01.480
So because of the scalability limitation, and because it also doesn't take the bandwidth of links into

41
00:04:01.480 --> 00:04:11.760
account, RIP is not normally used in production networks. Only in really small networks or in test environments.

42
00:04:12.160 --> 00:04:21.310
So let's go through an example of how the metric is going to work in RIP. So R1 has formed

43
00:04:21.310 --> 00:04:30.160
an adjacency with R2, and it will say that, "hey R2, you can get to these networks via me: 10.0.1.0

44
00:04:30.190 --> 00:04:37.720
/24, which is going to cost you 1 hop; 10.0.2.0/24, and 10.0.3.0/24, which

45
00:04:37.720 --> 00:04:47.000
are also one hop away; 10.1.3.0/24 is two hops away, and 10.1.2.0/24

46
00:04:47.010 --> 00:04:52.090
is three hops away." Because the first three networks there are all directly

47
00:04:52.090 --> 00:05:02.480
connected on R1, 10.1.3.0 is behind R5 from R1's point of view and 10.1.2.0

48
00:05:02.540 --> 00:05:10.660
is behind R4, so they are an additional one or two hops away. So R2 will get that information.

49
00:05:10.660 --> 00:05:18.820
It will update its routing table. It will then pass the information onto R3. So R2 will say, "Hey R3,

50
00:05:18.820 --> 00:05:24.850
you can get to these networks via me, 10.0.0.0/24 is one hop, because

51
00:05:24.850 --> 00:05:33.610
R2 is directly connected to it, 10.0.1.0/24, 10.0.2.0/24, and 10.0.3.0/24 are two hops

52
00:05:33.700 --> 00:05:41.770
away." R3 will then pass the information onto R4, and it will tell R4, "You can get to

53
00:05:41.810 --> 00:05:49.630
10.0.0.0/24 through me. It will cost you two hops. 10.0.1.0/24 and 10.0.2.0/24

54
00:05:49.640 --> 00:05:52.480
are three hops away, and 10.1.0.0/24

55
00:05:52.480 --> 00:06:00.880
is one hop away." So that's the information getting propagated. So if we look at the information that reached

56
00:06:00.880 --> 00:06:08.440
R4 from R3, R3 told it that, "You can get to the 10.0.1.0/24

57
00:06:08.430 --> 00:06:15.850
network through me, and it's going to be three hops." Okay so that was along the top path. R1 is

58
00:06:15.850 --> 00:06:19.630
also directly connected to R5 and we're running RIP everywhere

59
00:06:19.650 --> 00:06:26.110
so it will form an adjacency with R5 as well, and it will also send updates to R5. So it will

60
00:06:26.110 --> 00:06:33.460
tell R5 that, "You can get to 10.0.0.0, 10.0.1.0 and 10.0.2.0/24.

61
00:06:33.490 --> 00:06:38.200
It's one hop because they're directly connected on R1, and 10.1.0.0/24

62
00:06:38.200 --> 00:06:44.380
is two hops." So it sends that information to R5. R5 will update it's routing table and

63
00:06:44.380 --> 00:06:52.560
then it will pass the information onto R4. It will tell R4, "You can get to 10.0.0.0, 

64
00:06:52.570 --> 00:06:58.570
10.0.1.0, and 10.0.2.0/24 through me. It will be two hops. And also

65
00:06:58.700 --> 00:07:07.690
to 10.0.3.0/24, and that will be 1 hop." So if I just skip back a few slides here, you see

66
00:07:07.690 --> 00:07:13.650
along the top path, R3 told R4, "You can get to the 10.0.1.0/24

67
00:07:13.650 --> 00:07:21.100
network and it is three hops away." R5 also advertises the 10.0.1.0/24

68
00:07:21.090 --> 00:07:28.430
network that it's only two hops away. So R4 learns two potential paths it can use to get to

69
00:07:28.430 --> 00:07:35.640
that 10.0.1.0 network, either through R3 or R5. R3 is three hops away, R5

70
00:07:35.670 --> 00:07:43.020
is only two hops away, so it is the route via R5 that is going to make it into the routing table,

71
00:07:43.080 --> 00:07:50.400
because it's got the best metric. Both routes will be there in the RIP database, but it's only the best one

72
00:07:50.400 --> 00:07:57.710
that actually makes it into the routing table, which is the one that's got the lowest metric. So R4,

73
00:07:57.710 --> 00:08:02.470
like I just explained, is I learned those two possible routes to get to the 10.0.1.0/24

74
00:08:02.500 --> 00:08:10.040
network. Three hops via 10.1.1.2 out interface fastEthernet0/0, two hops

75
00:08:10.040 --> 00:08:16.160
via 10.1.3.2 out fastEthernet2/0, and it puts the best one in the routing table

76
00:08:16.160 --> 00:08:23.330
which is via R5. So we do the 'show ip route', we'll see just one best route via R5 has made it

77
00:08:23.330 --> 00:08:25.000
into the routing table.

78
00:08:25.010 --> 00:08:31.720
Okay, so that was how RIP works with the hop count as it's metric.

79
00:08:31.730 --> 00:08:34.970
Let's look at the metrics for the other routing protocols as well.

80
00:08:35.000 --> 00:08:37.929
I don't need to go through it step by step for these other ones though.

81
00:08:38.179 --> 00:08:40.380
So you saw a problem there with RIP.

82
00:08:40.400 --> 00:08:49.490
If I go back a couple of slides, the top path in our network topology is all a hundred megabits links, but

83
00:08:49.490 --> 00:08:55.520
the bottom path is only 10 megabits per second links. So really we would prefer the traffic to go across

84
00:08:55.520 --> 00:08:59.440
the top path. But because RIP users hop count,

85
00:08:59.600 --> 00:09:04.460
the traffic is always going to go along that worse bottom path.

86
00:09:04.490 --> 00:09:09.510
So let's see how it works with OSPF as compared with that.

87
00:09:09.860 --> 00:09:14.090
So OSPF does take bandwidth into account.

88
00:09:14.210 --> 00:09:21.550
It uses cost as the metric which is automatically derived from interface bandwidth by default.

89
00:09:21.740 --> 00:09:29.330
You can also manually configure the cost of the links if you want to manipulate the path that OSPF is typically

90
00:09:29.360 --> 00:09:31.730
going to take the best path anyway.

91
00:09:31.880 --> 00:09:39.860
And in our example, it is going to prefer the path from R4 to R3 to R2 to R1 for the

92
00:09:39.910 --> 00:09:43.970
10.0.1.0/24 network.

93
00:09:44.000 --> 00:09:51.130
So unlike RIP, which used hop count and went along the bottom path, which we didn't want, OSPF is going to

94
00:09:51.140 --> 00:09:57.530
use cost which takes bandwidth into account and it's going to go along the top path because those links

95
00:09:57.530 --> 00:09:59.980
have gotten much higher bandwidth.

96
00:10:00.110 --> 00:10:09.080
So if we have exact same topology, and we enable OSPF on our interfaces, and do a 'show route' you'll see

97
00:10:09.080 --> 00:10:12.380
that traffic will go across the top path.

98
00:10:12.440 --> 00:10:20.570
Traffic is going out interface fastEthernet0/0 from R4, which is with top path. IS-IS

99
00:10:20.690 --> 00:10:30.260
also uses cost as the metric, but unlike with OSPF, it's not automatically derived from the interface bandwidth.

100
00:10:30.260 --> 00:10:34.240
All links have got an equal cost by default.

101
00:10:34.340 --> 00:10:43.100
So if you want to force a particular path to be used in IS-IS based on which path has got the best bandwidth,

102
00:10:43.370 --> 00:10:45.730
you're going to have to manually you configure that.

103
00:10:45.830 --> 00:10:49.530
It's not going to do it automatically like OSPF does.

104
00:10:49.670 --> 00:10:58.100
If you don't manually set the link costs in IS-IS in our example, then the lowest hop count will be used

105
00:10:58.130 --> 00:11:01.460
which was the bottom path in our example again.

106
00:11:01.520 --> 00:11:06.720
So again, it's going to use path R4 to R5 to R1 by default

107
00:11:06.720 --> 00:11:14.060
in IS-IS. Now in IS-IS, you can manipulate it to go along the top path, in RIP

108
00:11:14.060 --> 00:11:17.060
you're not really able to do that.

109
00:11:17.300 --> 00:11:25.880
The last IGP we have is EIGRP and it uses the bandwidth and delay of the links to calculate the metric.

110
00:11:26.100 --> 00:11:31.590
Load and reliability can also be configured, but they're ignored by default.

111
00:11:31.880 --> 00:11:36.590
So bandwidth is used the same as it was with OSPF,

112
00:11:36.590 --> 00:11:38.500
we also have dealy as well.

113
00:11:38.630 --> 00:11:40.840
But the way the EIGRP works,

114
00:11:40.880 --> 00:11:46.160
it's not like it's sending probes over the links to measure what the delay is.

115
00:11:46.160 --> 00:11:50.810
It uses a fixed delay which is based on what the bandwidth is.

116
00:11:50.810 --> 00:11:57.050
So basically, it's based on the bandwidth again. You can manually configure the delay on links if you want to

117
00:11:57.050 --> 00:11:58.500
manipulate the path.

118
00:11:58.550 --> 00:12:06.590
So with OSPF and EIGRP, because it is going to use the best bandwidth links anyway, typically, it's going to

119
00:12:06.590 --> 00:12:08.770
choose the path that you would want it to.

120
00:12:08.870 --> 00:12:15.890
But if for some reason it's not, you can override that with manual configuration, and in our example again,

121
00:12:15.920 --> 00:12:21.950
it's going to use the top path because those are the higher bandwidth links. It will use that path by

122
00:12:21.950 --> 00:12:23.990
default.

123
00:12:24.040 --> 00:12:30.290
So, last slide, let's consider how we would choose a routing protocol.

124
00:12:30.320 --> 00:12:38.420
Like I've said before, you do not want to be running multiple routing protocols inside your organization.

125
00:12:38.660 --> 00:12:40.460
Because it's going to get messy,

126
00:12:40.460 --> 00:12:43.520
it makes things hard to work with each other.

127
00:12:43.520 --> 00:12:48.480
Organizations will almost always standardize on one protocol.

128
00:12:48.630 --> 00:12:53.330
Really the only reason they would have multiple different protocols is if there was a merger or it was

129
00:12:53.330 --> 00:12:56.660
some kind of historical or political reasons for it.

130
00:12:57.140 --> 00:13:04.730
Okay, so we're going to choose one routing protocol. Comparing them, RIP uses hop count and has a default maximum

131
00:13:04.730 --> 00:13:06.310
metric of 15.

132
00:13:06.320 --> 00:13:13.910
So it's not usually used in production networks because of its scalability limitations. EIGRP is very

133
00:13:13.910 --> 00:13:20.270
simple to maintain, calculates changes very quickly, and its metric calculation will normally choose the

134
00:13:20.270 --> 00:13:22.130
best path by default.

135
00:13:22.130 --> 00:13:27.230
It is, however, typically only supported on Cisco routers.

136
00:13:27.230 --> 00:13:35.360
It was originally completely Cisco proprietary. Cisco made moves to open it up a while ago, but it's still

137
00:13:35.360 --> 00:13:41.500
mostly only supported on Cisco routers. So it kind of forces you into using all Cisco routers 

138
00:13:41.510 --> 00:13:47.990
if you're going to use EIGRP. OSPF's metric calculation will typically choose the best path by

139
00:13:47.990 --> 00:13:50.130
default, like EIGRP.

140
00:13:50.210 --> 00:13:55.390
It is an open standard which is supported by all vendor's routers and because of this,

141
00:13:55.400 --> 00:13:58.570
it's the most commonly deployed IGP today.

142
00:13:58.700 --> 00:14:03.740
It is, however, more complicated to maintain than EIGRP.

143
00:14:03.950 --> 00:14:10.160
And finally, IS-IS links need to be manually configured, or it will use hop count to determine the

144
00:14:10.160 --> 00:14:13.680
best path which is not usually what we want to happen.

145
00:14:13.700 --> 00:14:19.830
It's typically only used in service provider networks or large organizations with their own MPLS

146
00:14:19.850 --> 00:14:22.830
network who choose it because of its scalability.

147
00:14:23.130 --> 00:14:31.520
Okay, so because of this, it really comes down to either EIGRP or OSPF for most organizations. EIGRP

148
00:14:31.520 --> 00:14:35.770
is the simplest one to use and it works great

149
00:14:35.900 --> 00:14:41.270
but you can really only use it if you're using only Cisco routers. OSPF

150
00:14:41.330 --> 00:14:46.830
also works great as well, but it's more complicated to maintain.

151
00:14:46.850 --> 00:14:50.830
It is, however, supported on all vendors' routers.

152
00:14:51.100 --> 00:14:51.480
Okay,

153
00:14:51.570 --> 00:14:55.050
so that's everything I needed to tell you about metrics.

154
00:14:55.070 --> 00:14:58.320
Let's have a look at how it works in the lab next.

