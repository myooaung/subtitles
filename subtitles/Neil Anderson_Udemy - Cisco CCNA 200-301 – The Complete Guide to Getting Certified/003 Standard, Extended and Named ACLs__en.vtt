WEBVTT
1
00:00:06.260 --> 00:00:15.860
In this lecture, you'll learn about standard, extended and named ACLs. And we're going to start looking

2
00:00:15.860 --> 00:00:22.250
deeper into the syntax of our access control list. So you saw the slide in the last lecture.

3
00:00:22.460 --> 00:00:29.090
That's the format of the command, when we're building our ACLs. At global config, we start with access-list

4
00:00:29.090 --> 00:00:33.560
and then we have a number for the access-list.

5
00:00:34.280 --> 00:00:38.530
The different numbers, if it's numbered from 1 to 99,

6
00:00:38.660 --> 00:00:40.880
it's an IP standard access-list.

7
00:00:40.880 --> 00:00:46.880
If it's from 100 to 199, then it's an extended list. And we'll get to

8
00:00:46.880 --> 00:00:56.690
the extended in a second. So the original implementation was standard and extended numbered ACLs. Standard

9
00:00:56.690 --> 00:01:00.510
ACLs reference the source address only.

10
00:01:00.530 --> 00:01:07.760
So that's all the router is caring about when it processes the ACL is the source address. It is not looking at

11
00:01:07.760 --> 00:01:12.200
the destination address the protocol, the port number, anything like that.

12
00:01:12.530 --> 00:01:15.650
Extended ACLs are more granular, however.

13
00:01:15.650 --> 00:01:19.760
They don't just check the source address.

14
00:01:19.970 --> 00:01:21.410
They can also check

15
00:01:21.440 --> 00:01:27.730
the protocol like TCP or UDP, the destination address and the port number.

16
00:01:27.770 --> 00:01:28.370
So you just saw

17
00:01:28.370 --> 00:01:36.800
on the last slide the ranges for these are if it's numbered from 1 to 99, it's always a standard ACL.

18
00:01:36.950 --> 00:01:42.710
If you number it from 1 to 99, you can't put information in there like the destination IP address.

19
00:01:43.040 --> 00:01:49.700
If it's numbered from 100 to 199, it's always an extended ACL, which does allow you to put

20
00:01:50.300 --> 00:01:51.950
even more granular information.

21
00:01:53.260 --> 00:01:56.510
Now, Cisco improved this later on.

22
00:01:56.530 --> 00:02:04.030
So that was the original implementation, which standard was from 1 to 99, extended was from 100 to

23
00:02:04.030 --> 00:02:04.900
199.

24
00:02:05.140 --> 00:02:11.500
Now, it's not likely, but it is possible in very large environments like service providers.

25
00:02:11.650 --> 00:02:17.710
And if they've got lots of sub interfaces that they could run out of ACL numbers.

26
00:02:17.710 --> 00:02:21.130
So normal enterprises wouldn't happen, but it is feasible.

27
00:02:21.370 --> 00:02:28.540
So because of this, Cisco expanded the range. And standard is now not just 1 to 99.

28
00:02:28.540 --> 00:02:33.490
They also included 1300 to 1999 as well.

29
00:02:33.500 --> 00:02:36.450
So you can use any of those numbers for a standard ACL.

30
00:02:37.000 --> 00:02:41.030
The extended ACL numbers were also expanded as well.

31
00:02:41.050 --> 00:02:47.790
It doesn't just include 100 to 199, it also includes 2000 to 2699 as well now.

32
00:02:47.800 --> 00:02:52.750
So here's an example of a standard ACL.

33
00:02:53.050 --> 00:02:58.660
We've got access-list 1 deny 10.10.10.10 0.0.0.0.

34
00:02:58.690 --> 00:03:04.660
So the wildcard mask here would mean that we're just looking for the particular host,

35
00:03:04.810 --> 00:03:05.170
10.10.10.10.

36
00:03:05.410 --> 00:03:08.800
And then the second line is access-list 1 permit

37
00:03:09.010 --> 00:03:13.050
10.10.10.0 0.0.0.255

38
00:03:13.270 --> 00:03:21.130
So what this ACL is doing is it's denying the one particular host, 10.10.10.10.

39
00:03:21.250 --> 00:03:27.340
It's permitting everything else on the 10.10.10.0/24 network.

40
00:03:29.380 --> 00:03:37.570
The default wildcard mask for a standard ACL is 0.0.0.0. So this is a wildcard. So that would

41
00:03:37.570 --> 00:03:45.820
equate to a subnet mask of 255.255.255.255, meaning it's an individual host address.

42
00:03:46.060 --> 00:03:52.930
So if we look back, we said the first line access-list 1 deny 10.10.10.10 0.0.0.0

43
00:03:52.930 --> 00:03:54.580
because

44
00:03:54.580 --> 00:03:55.510
0.0.0.0

45
00:03:55.510 --> 00:03:56.700
is the default,

46
00:03:56.740 --> 00:04:00.580
we could have just said access-list 1 deny 10.10.10.10

47
00:04:00.740 --> 00:04:02.710
means the same thing.

48
00:04:03.670 --> 00:04:06.520
Don't forget to enter the wildcard

49
00:04:06.520 --> 00:04:11.290
when you're specifying an IP subnet though, not just an individual host.

50
00:04:11.590 --> 00:04:15.490
The command line will allow you to enter the command.

51
00:04:15.490 --> 00:04:17.709
For example, access-list 1 deny 10.10.10.0

52
00:04:17.829 --> 00:04:24.910
with no wildcard mask, but this obviously would not match anything

53
00:04:24.910 --> 00:04:31.150
then and it would be an error. So for when you are specifying a subnet, I'll go back a slide again.

54
00:04:31.360 --> 00:04:37.660
The second line was access-list 1 permit 10.10.10.0 0.0.0.255.

55
00:04:37.660 --> 00:04:43.780
Remember to put the wildcard mask in when you're specifying a subnet or it's going to default to /32

56
00:04:43.780 --> 00:04:45.460
and it's not going to work.

57
00:04:47.430 --> 00:04:55.160
OK, so that was a standard ACL we were just looking at the source address. With an extended ACL,

58
00:04:55.290 --> 00:04:58.160
we can have much more granular information in there.

59
00:04:58.180 --> 00:05:02.460
So an example of an extended ACL, again at global config,

60
00:05:02.460 --> 00:05:08.580
We'd say access-list 100 deny tcp from 10.10.10.10,

61
00:05:08.610 --> 00:05:09.510
wildcard mask

62
00:05:09.510 --> 00:05:10.450
0.0.0.0.

63
00:05:10.480 --> 00:05:17.210
So we're looking for the host where the source port number is greater than 49151

64
00:05:17.520 --> 00:05:24.120
going to a destination address of 10.10.50.10 with a wildcard mask of 0.0.0.0.

65
00:05:24.150 --> 00:05:28.830
So looking for the host again and equals a destination

66
00:05:28.830 --> 00:05:37.500
port number of 23. Telnet, which you'll also learn about later, uses 23 as its destination port.

67
00:05:37.620 --> 00:05:45.320
So this would be denying telnet traffic from the host 10.10.10.10 going to the host

68
00:05:45.420 --> 00:05:46.710
10.10.50.10.

69
00:05:47.550 --> 00:05:55.380
Then the next line access-list 100 permit tcp 10.10.10.0 with a wildcard mask of 0.0.0.255,

70
00:05:55.540 --> 00:06:03.180
source port is greater than 49151, going to a destination host of

71
00:06:03.180 --> 00:06:05.400
10.10.50.10 equals telnet.

72
00:06:05.550 --> 00:06:10.620
So this is a very similar example to the standard ACL that we had before.

73
00:06:10.890 --> 00:06:17.830
But the standard ACL was just saying block all traffic from 10.10.10.10 and allow

74
00:06:17.870 --> 00:06:22.380
everything from the 10.10.10.0/24 subnet. Here,

75
00:06:22.380 --> 00:06:24.090
we're getting more granular.

76
00:06:24.330 --> 00:06:27.120
We're seeing it's not just all traffic coming from there.

77
00:06:27.270 --> 00:06:31.530
It's telnet traffic, which is going to a particular host.

78
00:06:32.010 --> 00:06:37.800
OK, so those were examples of standard and extended ACLs.

79
00:06:38.880 --> 00:06:47.550
The extended ACL does not have a default wildcard masks. So with the standard ACL,

80
00:06:47.550 --> 00:06:55.560
the default wildcard mask is a /32 0.0.0.0. The extended does not have a default.

81
00:06:56.070 --> 00:07:03.600
So if you put in an extended ACL and you don't specify the wildcard mask, it will give you an error message.

82
00:07:03.790 --> 00:07:05.790
So you can see that's what I did here.

83
00:07:05.940 --> 00:07:10.650
I said access-list 150 deny tcp 10.10.10.10,

84
00:07:10.800 --> 00:07:14.820
and then I went straight to the source port without specifying the wildcard mask.

85
00:07:14.970 --> 00:07:20.940
If you do that, the command line will throw back and error saying that there's invalid input. It shows

86
00:07:20.940 --> 00:07:21.230
you where.

87
00:07:21.240 --> 00:07:23.310
It's because I didn't enter the wildcard.

88
00:07:24.560 --> 00:07:28.100
OK, so that was standard and extended ACLs. The last type of

89
00:07:28.370 --> 00:07:30.380
ACL we have was another improvement.

90
00:07:30.470 --> 00:07:38.600
So originally we had standard ACLs, then we had extended ACLs. Then standard and extended, the

91
00:07:38.600 --> 00:07:43.490
ranges were expanded and then after that, Named ACLs came out.

92
00:07:43.500 --> 00:07:49.470
So you can now reference ACL either by a number or by a name. Named ACLs

93
00:07:49.490 --> 00:07:56.420
begin with the command ip access-list at global config instead of access-list, which is for numbered

94
00:07:56.420 --> 00:07:57.200
ACLs.

95
00:07:57.570 --> 00:08:03.350
So if we go to global config, we say ip access-list and then a question mark, to check syntax. The

96
00:08:03.350 --> 00:08:03.590
next

97
00:08:03.590 --> 00:08:07.970
command, we say whether this is going to be an extended or a standard ACL.

98
00:08:09.350 --> 00:08:15.710
The syntax for Named ACL is very similar, but slightly different with numbered ACLs.

99
00:08:15.920 --> 00:08:19.640
So let me show you the numbered ACL again. With a numbered ACL,

100
00:08:19.640 --> 00:08:27.290
it always starts with access-list and then the number and then it's going to be a denied entry or a permit

101
00:08:27.290 --> 00:08:32.659
entry. With named ACL, the syntaxes are a little bit neatier and tidier.

102
00:08:32.809 --> 00:08:34.820
So it starts with ip access-list,

103
00:08:34.820 --> 00:08:38.380
then you say whether it's standard or extended, and then you give a name here.

104
00:08:38.390 --> 00:08:44.320
I've named it Flackbox-Demo, then you say your entries.

105
00:08:44.330 --> 00:08:47.860
So I've denied 10.10.10.10 0.0.0.0.

106
00:08:47.870 --> 00:08:52.960
I've permitted 10.10.10.0 0.0.0.255.

107
00:08:53.090 --> 00:08:59.360
So when you use a named ACL, when you put the first line in, when you create the named ACL, it then

108
00:08:59.360 --> 00:09:06.320
goes into a submenu where you configure the rules in that ACL.

109
00:09:06.560 --> 00:09:13.310
When you do a numbered ACL, it's different and that you always do it at global config and you have to say access-list

110
00:09:13.310 --> 00:09:15.440
then the number at the start every time.

111
00:09:15.500 --> 00:09:18.380
So very similar configuration, named ACL.

112
00:09:18.380 --> 00:09:20.120
It's been your way of doing it.

113
00:09:20.270 --> 00:09:21.980
It's what's more commonly used now.

114
00:09:21.980 --> 00:09:24.200
It's a little bit tidier configuration.

115
00:09:24.810 --> 00:09:31.460
OK, so that was our standard, our extended, our named ACLs.

116
00:09:32.210 --> 00:09:38.840
One other thing I want to tell you, I nearly forgot, is about that source port number. Because you

117
00:09:38.840 --> 00:09:40.530
maybe wondering about that.

118
00:09:40.580 --> 00:09:43.400
So here's our extended access-list example.

119
00:09:43.730 --> 00:09:49.100
And you can see in our source port, I've specified is greater than 49151..

120
00:09:50.000 --> 00:09:56.780
The reason I've used this is that with modern versions of Windows, from Windows 7 and later, it uses

121
00:09:56.780 --> 00:10:00.530
a random source port number whenever it's sending traffic out.

122
00:10:01.040 --> 00:10:05.120
But it begins with the number 49152.

123
00:10:05.390 --> 00:10:10.220
It can be 49152 or higher, but not up to a certain number in the range.

124
00:10:10.220 --> 00:10:17.180
It used to be greater than 1024 with older versions of Windows like XP, but it's a bit of a higher

125
00:10:17.180 --> 00:10:17.790
number now.

126
00:10:17.840 --> 00:10:22.130
So I just thought I'd mention that in case you were wondering where that source port number came from.

127
00:10:22.520 --> 00:10:29.360
With the ACL, it's not so common to care about source port number because that can change.

128
00:10:29.540 --> 00:10:33.590
But the destination port number will be fixed based on the application.

129
00:10:33.830 --> 00:10:37.280
OK, that's everything I needed to tell you in this lecture.

130
00:10:37.400 --> 00:10:42.440
See you in the next one where we'll start going through the rest of the syntax.

