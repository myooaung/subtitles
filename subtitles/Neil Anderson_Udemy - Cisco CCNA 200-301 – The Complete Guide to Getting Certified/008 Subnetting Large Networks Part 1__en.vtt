WEBVTT
1
00:00:06.270 --> 00:00:14.550
Up to this point, we've done several examples of subnetting Class C networks, and hopefully, you've got

2
00:00:14.550 --> 00:00:15.700
a good handle on that now.

3
00:00:15.700 --> 00:00:21.880
In this lecture, we're going to take it on a stage by subnetting larger networks.

4
00:00:21.900 --> 00:00:24.630
So, we're going to look at subnetting our Class A

5
00:00:24.640 --> 00:00:26.570
and our Class B networks.

6
00:00:27.030 --> 00:00:34.820
Let's say for our first example that we've been allocated a Class B. The IP address is

7
00:00:35.040 --> 00:00:38.080
135.15.0.0/16.

8
00:00:38.130 --> 00:00:39.350
That's our network address.

9
00:00:41.140 --> 00:00:49.010
And if we subnet that into /29 subnets, we're going to have 3 bits for host addressing because we've

10
00:00:49.010 --> 00:00:54.030
got 32 bits in the address. 32 minus 29 gives us our 3 bits.

11
00:00:54.350 --> 00:01:02.720
And that will allow us 6 hosts per network because 2 to the power of 3 is, 2, 4, 8 minus our 2, gives

12
00:01:02.720 --> 00:01:04.069
us 6 hosts.

13
00:01:04.190 --> 00:01:11.510
So a /29, that's going to give us 6 available hosts per network, whether we're using a

14
00:01:11.540 --> 00:01:18.770
Class A, B, or C. It's going to be the same for all of them. Here, because we were allocated a Class B 

15
00:01:18.770 --> 00:01:20.210
/16 range,

16
00:01:20.360 --> 00:01:28.010
we're going to have 13 bits for the network address. If it was a Class C, we would only have 5 bits for

17
00:01:28.070 --> 00:01:34.520
the network address because it's 24 to 29, a difference of 5, that would give us

18
00:01:34.520 --> 00:01:43.550
5 bits. With a Class B, we've got those extra 8 bits, so 5 plus 8 gives us the 13 bits, and that is

19
00:01:43.550 --> 00:01:50.150
going to allow a total of 8192 subnets. Let's count that up as well,

20
00:01:50.150 --> 00:02:06.010
so 2 to the power of 13, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096,

21
00:02:06.020 --> 00:02:16.370
and finally 13, 8192. For the IP address 135.15.10.138

22
00:02:16.420 --> 00:02:18.520
/29,

23
00:02:18.570 --> 00:02:22.820
what would be the network address, the broadcast address, and the range

24
00:02:22.850 --> 00:02:24.510
of valid IP addresses?

25
00:02:24.930 --> 00:02:28.030
You know the drill by now. Please pause the video,

26
00:02:28.040 --> 00:02:31.050
figure that out, and we'll come back with the answer.

27
00:02:34.170 --> 00:02:34.510
Okay,

28
00:02:34.580 --> 00:02:41.870
here's the answer. So the question was, IP address is 135.15.10.138/29,

29
00:02:41.990 --> 00:02:46.980
what's the network address, the broadcast address, and the range of valid IP addresses?

30
00:02:46.990 --> 00:02:49.640
We'll write this out the same way as usual.

31
00:02:49.640 --> 00:02:52.640
So we write out the IP address and the subnet mask,

32
00:02:52.640 --> 00:02:58.920
we put the line in after the /29, and the line is going in after the 8.

33
00:02:58.940 --> 00:03:04.830
You can see here if you look up in the top right, we've got 1's under the 128 and the 8.

34
00:03:04.850 --> 00:03:11.080
So we add those two together, 128 plus 8 is 136.

35
00:03:11.150 --> 00:03:18.030
So, the network address must be 135.15.10.136.

36
00:03:18.070 --> 00:03:19.560
The line is after the 8,

37
00:03:19.580 --> 00:03:27.360
so we add 8 to 136. The next network address would be 135.15.10.144.

38
00:03:27.570 --> 00:03:34.250
And if the next network address is 135.15.10.144, then the broadcast address must be 135.15.10.143,

39
00:03:34.250 --> 00:03:40.450
and the valid addresses for our hosts fall between the network address and the broadcast address.

40
00:03:40.490 --> 00:03:47.950
So, that's 135.15.10.137 up to 135.15.10.142.

41
00:03:48.460 --> 00:03:57.620
Another popular way of calculating the network address, the broadcast address, and the host addresses

42
00:03:57.620 --> 00:04:04.340
is by using the magic number method. You'll see this being cited in quite a few places on the Internet.

43
00:04:04.460 --> 00:04:13.110
This one is very handy if you've been given the subnet mask in dotted decimal notation rather than with a slash.

44
00:04:13.190 --> 00:04:17.930
In that case, you can usually figure it in your head. So a /29,

45
00:04:18.190 --> 00:04:26.360
if we wrote that out in dotted decimal notation, it's 255.255.255.248, and what you do with the magic

46
00:04:26.360 --> 00:04:33.160
number is you take the value in the octet that is being subnetted, so 248

47
00:04:33.150 --> 00:04:42.530
in this case. You take that away from 256, so 256 minus 248 gives you 8, and you know that the network

48
00:04:42.530 --> 00:04:45.940
addresses are going to go up in blocks of 8.

49
00:04:46.100 --> 00:04:51.490
In our example, our address is 135.15.10.138,

50
00:04:51.530 --> 00:04:54.600
so we find which block of 8 is closest to that.

51
00:04:54.620 --> 00:04:57.000
So 10 times 8 is 80,

52
00:04:57.080 --> 00:05:02.950
another 5 times 8 would be 40, add the 80 and the 40 together, that gives us 120.

53
00:05:03.040 --> 00:05:06.400
The difference between 120 and 138 is 18,

54
00:05:06.440 --> 00:05:09.600
so 2 times 8 is 16 would give us 136.

55
00:05:09.620 --> 00:05:11.720
That's the closest value we get here.

56
00:05:11.810 --> 00:05:19.400
So the network address must be 135.15.10.136, and then we add the 8 to the 136 to get the 135.15.10.144 again, and

57
00:05:19.400 --> 00:05:21.630
we know that that is the next address block.

58
00:05:21.710 --> 00:05:28.160
Okay, so that's the magic number method. The magic number method, just whatever the subnet mask is, you

59
00:05:28.160 --> 00:05:33.750
subtract that from 256, and that gives you your address blocks. It's pretty similar to the way that

60
00:05:33.770 --> 00:05:39.800
I was doing it previously. The way that I normally do it is the octet that is being subnetted on, I write that out,

61
00:05:39.800 --> 00:05:47.570
so I write out 128, 64, 32, 16, and so on, and then I will figure out what the bit pattern is, and then

62
00:05:47.570 --> 00:05:56.130
I can put the line in, and I can see where the address block is at. But play around with this a bit,

63
00:05:56.160 --> 00:06:01.050
try out the different methods of doing it, and figure out which one you're most comfortable with, and

64
00:06:01.050 --> 00:06:04.510
that's the one you can use in practice and the one that you're going to use on the exam day.

65
00:06:07.440 --> 00:06:15.540
Okay, let's move on to another example. So this example now, we'll do a Class A where we're going to subnet

66
00:06:15.570 --> 00:06:21.210
on the 4th octet. Previous example we just did was a Class B on the 4th octet. This is going to be

67
00:06:21.210 --> 00:06:29.550
a Class A on the 4th octet. And here, we've been allocated 60.0.0.0/8. Same first

68
00:06:29.550 --> 00:06:35.620
question again, if we apply the subnet mask 255.255.255.240,

69
00:06:35.760 --> 00:06:41.250
so it's the same style of question, but a different mask here, how many subnets do we have and how many hosts

70
00:06:41.250 --> 00:06:42.280
per network?

71
00:06:42.300 --> 00:06:47.670
So, as usual, stop the video, and I'll see you back in a second to give you the answer.

72
00:06:52.070 --> 00:06:58.310
Okay, so this example here, you see the other example is we've been given the subnet mask as a slash notation.

73
00:06:58.670 --> 00:06:59.600
On the exam,

74
00:06:59.600 --> 00:07:01.690
maybe you'll be given as a slash notation,

75
00:07:01.700 --> 00:07:04.020
maybe you'll be given in dotted decimal.

76
00:07:04.040 --> 00:07:07.590
Here, we were given it in dotted decimal, and we can figure out that

77
00:07:07.720 --> 00:07:10.880
255.255.255.240,

78
00:07:10.880 --> 00:07:15.380
that is the same as a subnet mask of /28.

79
00:07:15.380 --> 00:07:17.900
Again, if you're not sure of it, you can just write it down.

80
00:07:17.990 --> 00:07:22.050
The more practice you get with these, though, you'll get really fast at doing it.

81
00:07:22.160 --> 00:07:28.970
If you look at the last octet there, 128 plus 64 is 192, plus 32

82
00:07:28.970 --> 00:07:36.410
is 224, plus 16 is 240, plus 8 is 248, plus 4 to 252, plus 2 is 254,

83
00:07:36.410 --> 00:07:39.080
and plus 1 is 255.

84
00:07:39.080 --> 00:07:42.620
You see, I was able to do that without even thinking about it.

85
00:07:42.770 --> 00:07:46.610
Once you practice this a little bit, you'll be doing exactly the same thing.

86
00:07:46.610 --> 00:07:53.630
So for our example with a /28, we put the line in, and we can see that we've got 4 bits

87
00:07:53.630 --> 00:07:55.170
for our host addressing.

88
00:07:55.170 --> 00:07:57.190
So that's 2, 4, 8, 16

89
00:07:57.200 --> 00:08:01.200
minus 2 gives us 14 hosts per network.

90
00:08:01.360 --> 00:08:08.930
And now, because we were allocated a Class A /8, we're going to have 20 bits for the network addresses

91
00:08:09.170 --> 00:08:14.720
because the difference between the default /8 and the /28 that we're using is

92
00:08:14.720 --> 00:08:22.440
20 bits. So 2 to the power of 20 works out at a little over 1 million subnets.

93
00:08:22.440 --> 00:08:27.890
And hopefully, you wouldn't have to figure out a number as big as that on the exam, but if you had to, you'd

94
00:08:27.890 --> 00:08:33.289
still be able would do it. Again, you just start at 2 and just keep doubling up all the way until you've

95
00:08:33.289 --> 00:08:36.860
done it 20 times. As usual,

96
00:08:36.870 --> 00:08:39.400
we've got part 2 of the question.

97
00:08:39.470 --> 00:08:45.040
For the IP address 60.15.10.75/28,

98
00:08:45.600 --> 00:08:52.530
what is the network address, the broadcast address, and the range of valid IP addresses? Pause the video,

99
00:08:52.530 --> 00:08:57.650
and I'll see you back here with the answer. Okay,

100
00:08:57.790 --> 00:09:05.560
for this example, the line is after the 16 when we draw it out, so the network address is going to go up in multiples

101
00:09:05.560 --> 00:09:07.220
of 16.

102
00:09:07.390 --> 00:09:14.080
I can see by looking at the last octet of the address that I've got a 1 under the 64, and that's

103
00:09:14.080 --> 00:09:14.610
all,

104
00:09:14.620 --> 00:09:19.960
so the network address is going to be 60.15.10.64.

105
00:09:20.110 --> 00:09:26.860
And if I add 16 to that, the next network address will be 60.15.10.80.

106
00:09:27.130 --> 00:09:35.110
So our broadcast address here must be 60.15.10.79, and the range of valid host addresses

107
00:09:35.140 --> 00:09:44.550
falls between the network address and the broadcast address, so that's 60.15.10.65 up to 60.15.10.78.

108
00:09:44.890 --> 00:09:48.950
Another way you can do it is by using the magic number,

109
00:09:49.090 --> 00:09:55.180
and this is a way you can do it quite quickly in your head, especially if you were given the subnet mask

110
00:09:55.240 --> 00:10:00.160
in dotted decimal notation rather than in slash notation.

111
00:10:00.160 --> 00:10:04.900
But even if you have been given in slash notation, you can still do it this way. You'll just need to convert

112
00:10:04.900 --> 00:10:06.930
it to dotted decimal first.

113
00:10:06.940 --> 00:10:11.700
So our example was a /28, and a /28,

114
00:10:11.740 --> 00:10:17.670
the subnet mask is going to be 255.255.255.240.

115
00:10:17.680 --> 00:10:21.540
We can figure that out by adding up the numbers, so a /28

116
00:10:21.680 --> 00:10:28.690
is going to use the first 4 bits in the last octet. So 4 bits is going to be 128 plus 64

117
00:10:28.690 --> 00:10:36.130
is 192, plus 32 is 224, plus 16 is going to be 240. Then, what we do

118
00:10:36.130 --> 00:10:43.810
with the magic number is we take that number away from 256. So if the number we're subnetting at is 240,

119
00:10:43.810 --> 00:10:48.880
then 240 taken away from 256 is going to be 16,

120
00:10:48.910 --> 00:10:56.950
so we know that the address blocks go up in multiples of 16. With our example, it's asked us to

121
00:10:56.950 --> 00:11:01.680
figure out the network address for 60.15.10.75.

122
00:11:01.780 --> 00:11:05.740
So, we just go up in multiples of 16 until we get to the closest subnet.

123
00:11:05.770 --> 00:11:12.370
That would be 16, then 32, we can double that to 64, the next one would be 80,

124
00:11:12.370 --> 00:11:15.010
so 75 is between 64 and 80.

125
00:11:15.040 --> 00:11:20.450
So, the network address must be 60.15.10.64.

126
00:11:20.500 --> 00:11:22.640
We know that the next block starts at 60.15.10.80,

127
00:11:22.780 --> 00:11:29.560
so the broadcast address must be 60.15.10.79, and valid hosts would be 60.15.10.65 to 60.15.10.78.

