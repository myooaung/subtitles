WEBVTT
1
00:00:06.400 --> 00:00:16.470
In this lecture, I'm going to configure default routes and also load balancing in the lab.

2
00:00:16.510 --> 00:00:18.790
It's the same lab set up as before.

3
00:00:18.790 --> 00:00:27.100
We've got our routers R1 to R5, and our PC1, PC2, and PC3 clients. Right now in the lab,

4
00:00:27.100 --> 00:00:32.950
the routers have all been configured with their IP addresses and we've got static routes between all the

5
00:00:32.950 --> 00:00:34.700
different subnet.

6
00:00:34.720 --> 00:00:40.450
There's just one interface that hasn't been configured yet, which is on fasteEthernet3/0

7
00:00:40.480 --> 00:00:47.620
in R4 we're going to configure that with a public IP address going out to an Internet Service

8
00:00:47.620 --> 00:00:55.630
Provider. So R4 is going to get IP Address 203.0.113.1 and the next hop out to the Internet

9
00:00:55.720 --> 00:01:02.700
is at the Service Provider at 203.0.113.2. So let's configure that

10
00:01:02.700 --> 00:01:03.180
now,

11
00:01:03.230 --> 00:01:08.740
so I'll go onto R4 let's just 'show ip interface brief.'

12
00:01:08.740 --> 00:01:16.600
You see I don't have that internet interface configured yet, so I'll go to global configuration.

13
00:01:16.600 --> 00:01:29.890
And then it was interface fastEthernet3/0 and the IP address is 203.0.113.1,

14
00:01:29.950 --> 00:01:35.770
and we'll use the normal /24 for our lab example

15
00:01:35.800 --> 00:01:39.960
and remember to do a 'no shutdown' on the interface.

16
00:01:40.310 --> 00:01:43.150
Okay, so that is our interface configured.

17
00:01:43.180 --> 00:01:44.720
Let's just check that it's come up.

18
00:01:44.770 --> 00:01:46.420
So we'll do a 'do

19
00:01:46.420 --> 00:01:52.660
show ip interface brief' again and try to spell brief correctly.

20
00:01:52.830 --> 00:01:57.140
And there we can see that fastEthernet3/0 is up/up so

21
00:01:57.160 --> 00:01:58.340
that's good.

22
00:01:58.360 --> 00:02:02.860
Next thing to do is to add a route going out to the Internet.

23
00:02:02.890 --> 00:02:09.630
So obviously, this is going to be for all traffic, everything that isn't for our internal networks.

24
00:02:09.639 --> 00:02:15.640
So the way that you configure a catch-all or a default route is 'ip route'

25
00:02:15.670 --> 00:02:22.260
and then it's for 0.0.0.0 and a subnet mask 0.0.0.0.

26
00:02:22.270 --> 00:02:29.880
This is going to catch everything that does not hit a longer prefix or a more specific match

27
00:02:29.880 --> 00:02:30.680
route.

28
00:02:30.740 --> 00:02:38.170
And the next hop is our Service Provider which was at 203.0.113.2.

29
00:02:38.380 --> 00:02:48.700
And if I now do a 'do show ip route', I can see that thee gateway of last resort has been set to the Service

30
00:02:48.700 --> 00:02:57.970
Provider at 203.0.113.2, and there is our static route it gets an asterisk at the end of the S

31
00:02:57.970 --> 00:03:01.250
to indicate that this is a default static route.

32
00:03:01.750 --> 00:03:09.700
So that is R4 configured for now. Let's also configure default static routes on our other routers

33
00:03:09.730 --> 00:03:10.570
as well.

34
00:03:10.690 --> 00:03:15.100
So if we go back to the topology diagram, R3's next hop

35
00:03:15.110 --> 00:03:21.010
again, it doesn't have direct connectivity to 203.0.113.2 so its route is going

36
00:03:21.010 --> 00:03:30.550
to point at the next hop address of 10.1.1.1. So let's configure that one next, so

37
00:03:30.610 --> 00:03:41.920
that was on R3, I go to global configuration and add a default static route so 0.0.0.0

38
00:03:41.980 --> 00:03:50.750
0.0.0.0 and the next hop there was 10.1.1.1. I'll do a 'do show ip route'

39
00:03:50.770 --> 00:03:58.120
to verify again, I can see that the gateway of last resort is set to the next hop and there is the default

40
00:03:58.180 --> 00:04:05.320
static route. Back to the topology again, next thing we'll do is R2 it's going to have a next hop ofs

41
00:04:05.320 --> 00:04:16.950
10.1.0.0. so back on to the lab again, and onto R2, global config and 'ip route

42
00:04:17.070 --> 00:04:21.160
0.0.0.0 0.0.0.0,'

43
00:04:21.160 --> 00:04:31.610
a next hop of 10.1.0.1. And you have there already, I'll just verify again. I forgot to put

44
00:04:31.620 --> 00:04:39.910
the 'do' in thr front there because I'm not in exec mode, and there is the default static route added fine there as

45
00:04:39.910 --> 00:04:49.200
well, and then we'll do R5 next. Let's just check what its next hop is, so R5 to get out to

46
00:04:49.210 --> 00:04:59.950
the Internet, its next hop 10.1.3.1. So R5 next, 'config t', 'ip route

47
00:05:00.310 --> 00:05:04.170
0.0.0.0 0.0.0.0'

48
00:05:04.210 --> 00:05:06.160
next hop

49
00:05:06.230 --> 00:05:16.850
10.1.3.1, and verify. Okay, so that is, go back to the topology again

50
00:05:19.420 --> 00:05:26.780
R4, R3, R2 and, R5, all configured with a default static route going out to the Internet.

51
00:05:27.370 --> 00:05:29.230
On R1,

52
00:05:29.270 --> 00:05:33.220
I'm going to configure it with two different paths to get out.

53
00:05:33.260 --> 00:05:41.050
I'm going to configure a path via R2, and I'm also going to configure an other route via R5 and then the

54
00:05:41.050 --> 00:05:43.660
router will load balance between them.

55
00:05:43.770 --> 00:05:51.350
So when you want to do load balancing, the route and the prefix have to be exactly the same.

56
00:05:51.350 --> 00:06:02.870
For example 0.0.0.0 and 0.0.0.0, or if I was doing a route to get out to the 10.1 networks behind

57
00:06:02.930 --> 00:06:04.100
R4

58
00:06:04.100 --> 00:06:09.940
I could have 10.1.2.0/24 for both routes,

59
00:06:09.970 --> 00:06:13.090
one going to R2 and one going to R5.

60
00:06:13.190 --> 00:06:16.710
But if one of them was a /16 and one of them was a /24,

61
00:06:16.730 --> 00:06:17.880
that wouldn't work.

62
00:06:17.900 --> 00:06:18.930
Okay, so the

63
00:06:19.220 --> 00:06:25.180
destination you're routing to and the subnet mask have to be exactly the same with your routes

64
00:06:25.190 --> 00:06:28.710
to be able to do equal cost load balancing.

65
00:06:28.800 --> 00:06:33.080
So let's do that on R1,

66
00:06:33.190 --> 00:06:39.360
so I'll go on there, go to global configuration, and I'll do an 'ip route

67
00:06:39.410 --> 00:06:40.660
0.0.0.0'

68
00:06:41.420 --> 00:06:47.620
and a subnet mask of 0.0.0.0 and I'll do the first one going out via R2.

69
00:06:47.610 --> 00:06:54.220
So that was a next hop of 10.0.0.2, and then I'll hit the up arrow to do another route

70
00:06:54.440 --> 00:07:00.620
going via R5 and that was at 10.0.3.2.

71
00:07:00.840 --> 00:07:04.320
And if I now do a 'do show ip route', I should

72
00:07:04.340 --> 00:07:10.770
see both of these showing up in the routing table, so there is my default static route.

73
00:07:11.040 --> 00:07:18.440
And I can see it's going via both of the next hop addresses so the router will laod balance the outbound traffic

74
00:07:18.440 --> 00:07:20.860
via both of these. So

75
00:07:20.870 --> 00:07:26.740
going back to the topology diagram again, that means that traffic from my PCs is going to be load

76
00:07:26.750 --> 00:07:28.590
balanced over the two paths.

77
00:07:29.120 --> 00:07:38.390
However, if we look on R4, I'm not doing load balancing on there yet. So I'll verify that first and then

78
00:07:38.390 --> 00:07:45.240
what I'm going to do is I'm going to do two routes from R4 getting back to the 10.0.1.0 network

79
00:07:45.240 --> 00:07:47.050
and the 10.0.2.0 network.

80
00:07:47.150 --> 00:07:55.190
I'll send one via R3 and I'll send the other one via R5. So on R4,

81
00:07:55.270 --> 00:07:59.110
let's do a 'do show ip route,'

82
00:07:59.360 --> 00:08:08.790
and I was looking for the 10.0.1.0 network where PC1 is, and it's going via 10.1.1.2

83
00:08:08.790 --> 00:08:12.490
which is on R3 and 10.0.2.0,

84
00:08:12.500 --> 00:08:17.010
I've also got a single route for that going via R3 as well.

85
00:08:17.100 --> 00:08:27.820
So let's add a couple of routes here, so ip route to 10.0.1.0 255.255.255.0 and I'll send

86
00:08:27.820 --> 00:08:33.549
this via R5 at 10.1.3.2, and I'll do the same

87
00:08:33.559 --> 00:08:44.810
also for the 10.0.2.0 network and if I do a 'do show ip route' now, I'll see that I'm load balancing

88
00:08:44.810 --> 00:08:50.780
on those 10.0.1.0 and 10.0.2.0 networks.

89
00:08:50.880 --> 00:08:59.540
So I go back to the topology diagram, traffic going out to the Internet from PC1 and PC2 should be

90
00:08:59.540 --> 00:09:04.140
load balanced over the top and the bottom path.

91
00:09:04.360 --> 00:09:09.410
So let's go back to the command line to verify that.

92
00:09:09.460 --> 00:09:13.160
I'll go on to PC1,

93
00:09:13.250 --> 00:09:19.070
now I don't actually have Internet connectivity in my lab here, so I'm not going to be able to ping

94
00:09:19.100 --> 00:09:26.240
an address on the outside but I'll be able to verify the path as far as R4 and I should see half

95
00:09:26.240 --> 00:09:30.830
of it going over the top path and half of it going over the bottom path.

96
00:09:30.860 --> 00:09:33.060
So let's verify that.

97
00:09:33.140 --> 00:09:38.390
From PC1, I'll do a trace, I'll just make up a public IP address, so let's do a trace to

98
00:09:38.390 --> 00:09:48.080
50.50.50.50, and I see that that is going via 10.0.3.2 which is R5

99
00:09:48.110 --> 00:09:49.270
on the bottom path.

100
00:09:49.310 --> 00:09:57.340
So I'll break out of that and I should see the other half of my traffic going via R2 which is at

101
00:09:57.440 --> 00:09:59.860
10.0.0.2.

102
00:09:59.990 --> 00:10:04.400
But let me tell you the way that the load balancing algorithm works as well.

103
00:10:04.490 --> 00:10:11.510
If I keep doing a trace between the same source and destination, you'll see that it's always going to take

104
00:10:11.510 --> 00:10:12.520
the same path.

105
00:10:12.530 --> 00:10:16.790
So from PC1 to 50.50.50.50,

106
00:10:17.000 --> 00:10:25.520
it's always going via R5. The way that the load balancing algorithm works is it's based on a hash

107
00:10:25.790 --> 00:10:33.640
between the two different hosts. So traffic from one host to another host between the same two IP addresses of

108
00:10:33.650 --> 00:10:37.100
the same port is always going to go over the same path.

109
00:10:37.100 --> 00:10:43.480
The reason for this is that it's not going to do round robin load balancing for the same flow.

110
00:10:43.550 --> 00:10:50.240
So say that my PC1 host was accessing a web server at 50.50.50.50.

111
00:10:50.600 --> 00:10:57.360
I don't want that traffic for the same flow to be going over two different paths because it could cause the packets

112
00:10:57.380 --> 00:11:01.900
to arrive out of order and that could cause problems for my application.

113
00:11:01.900 --> 00:11:09.210
So the same flow will always go over the same path, but if I do it trace to a different IP address,

114
00:11:09.300 --> 00:11:10.990
there's a 50/50 chance

115
00:11:11.030 --> 00:11:16.910
it will either go over the same path or a different one. So I'll just go up one IP address and now I can see

116
00:11:16.910 --> 00:11:24.260
that when I'm going to a different IP address of 50.50.50.51 it is going over the top path,

117
00:11:24.530 --> 00:11:34.640
which is via router R2. Okay, so that's how to configure our static default routes and also

118
00:11:34.640 --> 00:11:38.660
how our load balancing works. See you in the next section.

