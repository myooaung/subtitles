WEBVTT
1
00:00:06.170 --> 00:00:14.870
In this lecture, you'll learn about summarization and the default route. On the slide here,

2
00:00:14.910 --> 00:00:20.330
this is a summary of what we configured in the last lecture. So on R1,

3
00:00:20.720 --> 00:00:25.100
we don't need to enter routes for its directly connected networks.

4
00:00:25.130 --> 00:00:30.080
They were automatically put into the routing table when we configured our IP addresses.

5
00:00:30.350 --> 00:00:35.000
But, we do need to configure routes for anywhere that the router is not directly attached to.

6
00:00:35.330 --> 00:00:42.950
So we've got routes to the 10.1.2.0/24 network, 10.1.1.0/24 network, and the 10.1.0.0/24 network, which are all

7
00:00:42.950 --> 00:00:45.410
available behind R2,

8
00:00:46.010 --> 00:00:53.450
but it is actually possible to summarize that into one route.

9
00:00:53.990 --> 00:00:59.300
For static routing, summary routes lessen the administrative overhead because if you've got

10
00:00:59.300 --> 00:01:03.190
less routes to configure, that lessens the workload on you.

11
00:01:03.530 --> 00:01:10.070
It also lessens the memory usage on the routers. The last routes that are in the routing table, the

12
00:01:10.070 --> 00:01:12.080
last memory it's going to take up.

13
00:01:12.200 --> 00:01:13.550
And you see an example here.

14
00:01:13.550 --> 00:01:16.010
We're going down from three routes to one

15
00:01:16.010 --> 00:01:17.990
route, which isn't much of a difference

16
00:01:17.990 --> 00:01:22.310
but in large environments, it can make a big difference. So the way we do the

17
00:01:22.310 --> 00:01:26.120
summary is on R1, rather than having the three

18
00:01:26.120 --> 00:01:26.330
routes.

19
00:01:26.590 --> 00:01:27.760
Let's go back in the slide,

20
00:01:27.880 --> 00:01:29.920
So you saw the traditional way of doing it.

21
00:01:30.200 --> 00:01:34.940
I've got a separate route for the 10.1.0.0/24 network, 10.1.1.0/24 network,

22
00:01:34.940 --> 00:01:43.820
and the 10.1.2.0/24 network, which are all pointing at the same next hop. When our subnets are in contiguous

23
00:01:43.820 --> 00:01:44.840
ranges like this,

24
00:01:44.840 --> 00:01:51.290
following on one from the other, it's usually possible to summarize them, which is what we've done here.

25
00:01:51.530 --> 00:02:00.320
So rather than having separate routes for 10.1.0.0, 10.1.1.0, and 10.1.2.0, which

26
00:02:00.320 --> 00:02:07.880
are all of a /24, I've configured one route for 10.1.0.0 with a subnet mask of

27
00:02:07.880 --> 00:02:10.910
255.255.0.0.

28
00:02:11.000 --> 00:02:18.320
This route will be good for all subnets that begin with 10.1, so 10.1.0.0, 10.1.1.0,

29
00:02:18.320 --> 00:02:24.320
10.1.2.0, etc., and they're all reachable through 10.0.0.2.

30
00:02:24.560 --> 00:02:27.110
So, that's how we configure summarization.

31
00:02:27.920 --> 00:02:36.560
And in our example here, I summarized at the classful boundary for a class B address, which is going to

32
00:02:36.590 --> 00:02:46.400
cover our routes all the way from 10.1.0.0 to 10.1.255.0, which is a pretty big

33
00:02:46.400 --> 00:02:46.910
range.

34
00:02:46.910 --> 00:02:51.950
Maybe we don't want to have all of those subnets available behind R2,

35
00:02:52.190 --> 00:02:57.080
maybe some of them that are still within the 10.1.0.0 are available through a different path.

36
00:02:57.320 --> 00:03:04.010
So you can be a bit tighter with your summarization like you see in the example here.

37
00:03:04.040 --> 00:03:11.630
So rather than saying ip route 10.1.0.0 and then to 255.255.0.0, here I've said ip

38
00:03:11.630 --> 00:03:13.200
route 10.1.0.0,

39
00:03:13.210 --> 00:03:20.090
and then I've used a subnet mask of 255.255.252.0, and again pointing at

40
00:03:20.090 --> 00:03:25.160
R2 at 10.0.0.2. To see what's happening here,

41
00:03:25.160 --> 00:03:32.090
if you remember back to the subnetting section, I know that it's definitely going to begin with 255.255

42
00:03:32.090 --> 00:03:36.800
because all of the subnets I'm pointing at begin with 10.1.

43
00:03:36.950 --> 00:03:38.960
It's on the next octet

44
00:03:38.960 --> 00:03:41.390
that I am going to be summarizing.

45
00:03:41.390 --> 00:03:50.090
Here, I just want to summarize 10.1.0.0 to 10.1.3.0 and I've used the value of 255.255.252.0.

46
00:03:50.090 --> 00:03:52.430
You know the way that the subnetting goes up,

47
00:03:52.430 --> 00:03:56.630
it goes up from from 252 to 254, and then to 255.

48
00:03:56.840 --> 00:04:03.170
So that means that I've used two bits there. Two bits gives us four possible values.

49
00:04:03.360 --> 00:04:06.050
That's where we get the zero to the three from.

50
00:04:06.230 --> 00:04:09.860
Okay, so that's how we configure our summary routes.

51
00:04:10.640 --> 00:04:14.510
Next thing is the Longest Prefix Match.

52
00:04:14.690 --> 00:04:19.430
So this is something that can come up, particularly when you do have summary routes.

53
00:04:19.700 --> 00:04:22.610
So in the example here, it's the same topology before

54
00:04:22.760 --> 00:04:25.910
but we've now also added R5.

55
00:04:26.180 --> 00:04:32.120
The link from R1 to R5 is on the 10.0.3.0/24 network and it is directly connected.

56
00:04:32.360 --> 00:04:38.890
There is also a subnet of 10.1.3.0/24 which is running from R4 to R5.

57
00:04:39.290 --> 00:04:46.830
So if I just left it with my route of 'ip route 10.1.0.0 255.255.0.0, 10.0.0.2'

58
00:04:46.830 --> 00:04:54.410
you see the path that traffic would take to get to R5 at 10.1.3.2

59
00:04:54.650 --> 00:05:02.180
or anything on the 10.1.3 network is it would go from R1 to R2 to R3 to R4

60
00:05:02.180 --> 00:05:05.450
and then to R5, because my route is pointing at

61
00:05:05.570 --> 00:05:14.960
10.0.0.2. Now, I do want traffic for all of the 10.1 networks like 10.1.0.0 and 10.1.1.0,

62
00:05:14.960 --> 00:05:19.230
and maybe I've got a 10.1.4.0 also behind R4 here

63
00:05:19.400 --> 00:05:22.280
I want all of that traffic to go via R2.

64
00:05:22.640 --> 00:05:29.420
But if I'm sending traffic to the 10.1.3.0 subnet,  I don't want it to go along the top path.

65
00:05:29.570 --> 00:05:34.880
I want it to go along the bottom path via R5 because that's a more direct route.

66
00:05:35.150 --> 00:05:38.830
So I'm also going to add a route for that as well, which is 'ip route

67
00:05:38.840 --> 00:05:45.950
10.1.3.0 255.255.255.0 10.0.3.2'.

68
00:05:46.700 --> 00:05:54.950
Now you see if I send traffic to 10.1.1.0, well that only matches one of these routes, which is the top one.

69
00:05:54.950 --> 00:05:56.990
Obviously, it doesn't match 10.1.3.0,

70
00:05:57.170 --> 00:06:02.750
so it will take the top route and it will go via R2 at 10.0.0.2.

71
00:06:03.350 --> 00:06:09.200
If I send traffic to 10.1.3.0, that matches the top

72
00:06:09.200 --> 00:06:12.590
route, and it also matches the bottom route as well.

73
00:06:12.590 --> 00:06:14.570
And both of these are in the routing table.

74
00:06:14.870 --> 00:06:16.320
So, which route is 

75
00:06:16.340 --> 00:06:20.600
the router going to take? It takes the one with the longest prefix.

76
00:06:20.990 --> 00:06:25.220
The second route is got a prefix of 255.255.255.0.

77
00:06:25.460 --> 00:06:29.920
The first route is got 255.255.0.0. So

78
00:06:29.930 --> 00:06:32.990
the second route is a longest prefix.

79
00:06:33.200 --> 00:06:41.330
So, all traffic for the 10.1.0.0 networks will go via R2 unless it's for 10.1.3.0, which will go via

80
00:06:41.330 --> 00:06:44.280
R5, which is exactly what I want to happen.

81
00:06:44.750 --> 00:06:51.290
Another way of saying the longest prefix match and I'm more intuitive way of thinking about that is whichever

82
00:06:51.290 --> 00:06:54.290
is the most specific route is going to win.

83
00:06:54.780 --> 00:06:58.430
Okay, so that's what happens when you have overlapping routes.

84
00:06:58.730 --> 00:07:05.720
But what if you've got multiple routes for the exact same destination? Meaning, it has the same destination

85
00:07:05.720 --> 00:07:08.360
IP address and the same prefix as well?

86
00:07:08.760 --> 00:07:14.260
In that case, the router will load balance the traffic over those routes.

87
00:07:14.550 --> 00:07:17.540
So see the example here. On R1,

88
00:07:17.540 --> 00:07:23.150
we've got a couple of routes and they're both going to the exact same destination. They're both for

89
00:07:23.150 --> 00:07:30.200
10.1.0.0, and the subnet mask of 255.255.0.0. One route has the next hop of

90
00:07:30.200 --> 00:07:35.460
10.0.0.2 and the other route has the next hop of 10.0.3.2.

91
00:07:35.540 --> 00:07:38.180
So in this case, they're both exactly the same,

92
00:07:38.420 --> 00:07:43.400
then the router will load balance traffic over the two different next hops.

93
00:07:44.720 --> 00:07:51.750
Okay, last thing to tell you about in this lecture is the default gateway, which shows up when you do a 'show

94
00:07:51.830 --> 00:07:57.650
ip route' is the gateway of last resort. So in the topology here,

95
00:07:57.650 --> 00:07:59.900
it's the same example as the last slide,

96
00:08:00.110 --> 00:08:03.830
but let's say that we also have a route going out to the Internet.

97
00:08:03.830 --> 00:08:06.920
So R1 is connected to the Internet.

98
00:08:07.220 --> 00:08:13.880
We're using a public IP address there, on the R1 side it's 203.0.113.1.

99
00:08:14.030 --> 00:08:18.380
And on the Internet side, it's 203.0.113.2 at

100
00:08:18.680 --> 00:08:28.010
our service provider. So to add a route going out to everywhere else that we haven't specifically

101
00:08:28.010 --> 00:08:30.020
had a route for elsewhere,

102
00:08:30.470 --> 00:08:35.600
it is '0.0.0.0 0.0.0.0' so

103
00:08:35.600 --> 00:08:43.220
our full command is 'ip route 0.0.0.0 0.0.0.0' going to the next hop at our service

104
00:08:43.220 --> 00:08:47.570
provider of 203.0.113.2.

105
00:08:47.990 --> 00:08:55.400
So a default route is a catch-all for any traffic that does not match one of our more specific routes.

106
00:08:55.610 --> 00:08:57.110
So in our example here,

107
00:08:57.740 --> 00:09:04.280
if we sent traffic to the 10.1.1.0 network, that will match the top

108
00:09:04.280 --> 00:09:07.730
route going to 10.1.0.0 and it will also match to

109
00:09:07.730 --> 00:09:09.860
the bottom route going to 0.0.0.0,

110
00:09:09.890 --> 00:09:10.970
which is everything. 

111
00:09:10.970 --> 00:09:12.920
The top route is more specific

112
00:09:13.070 --> 00:09:20.870
so that will be sent to R2 at 10.0.0.2. If we send traffic to the 10.1.3.0 network, that

113
00:09:20.870 --> 00:09:22.640
will match all three routes

114
00:09:22.640 --> 00:09:25.070
but it's the middle route which is more specific,

115
00:09:25.220 --> 00:09:29.180
so that will be sent to R5 at 10.0.3.2.

116
00:09:29.570 --> 00:09:34.460
If we send traffic out to the Internet at 50.50.50.50,

117
00:09:34.640 --> 00:09:36.230
it doesn't match

118
00:09:36.230 --> 00:09:38.720
the first two routes. It only matches the last route,

119
00:09:38.870 --> 00:09:41.120
So that will be sent out to the Internet.

120
00:09:41.570 --> 00:09:48.140
Okay, so that was our default route and our summarization. Next lecture,

121
00:09:48.140 --> 00:09:49.700
we'll take a look at this in the lab.

