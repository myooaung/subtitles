WEBVTT
1
00:00:01.006 --> 00:00:03.589
(upbeat music)

2
00:00:06.260 --> 00:00:08.370
In this lecture, you'll learn about

3
00:00:08.370 --> 00:00:12.910
the OSPF metric, which is the cost.

4
00:00:12.910 --> 00:00:15.720
As OSPF is a Link State routing protocol,

5
00:00:15.720 --> 00:00:16.860
the router will learn

6
00:00:16.860 --> 00:00:19.630
about all the destinations in it's area,

7
00:00:19.630 --> 00:00:23.820
the links to get there and their costs.

8
00:00:23.820 --> 00:00:28.310
The router will select routes based on the lowest cost

9
00:00:28.310 --> 00:00:29.990
to get to the destination

10
00:00:29.990 --> 00:00:33.533
and that's the route that will make it into the routing table.

11
00:00:34.790 --> 00:00:37.880
In a multiple area OSPF network,

12
00:00:37.880 --> 00:00:40.970
ABRs know the information for each area

13
00:00:40.970 --> 00:00:42.490
that they are connected to,

14
00:00:42.490 --> 00:00:44.880
so that will normally be two areas.

15
00:00:44.880 --> 00:00:46.330
'Area 0' (the backbone)

16
00:00:46.330 --> 00:00:49.780
and also the normal area that they're connected to.

17
00:00:49.780 --> 00:00:51.990
When multiple areas are in use,

18
00:00:51.990 --> 00:00:55.660
each router has individual routes for each IP subnet

19
00:00:55.660 --> 00:00:59.590
in its own area and also summary routes to other areas

20
00:00:59.590 --> 00:01:01.423
which go via the ABR.

21
00:01:02.720 --> 00:01:04.800
For destinations in its own area,

22
00:01:04.800 --> 00:01:07.330
a router looks at all available links

23
00:01:07.330 --> 00:01:09.220
that it can use to get there,

24
00:01:09.220 --> 00:01:10.830
and then it will choose the path

25
00:01:10.830 --> 00:01:13.540
with the lowest overall cost.

26
00:01:13.540 --> 00:01:16.720
For destinations in a different area,

27
00:01:16.720 --> 00:01:20.110
a router looks at all available links to get to the ABR

28
00:01:20.110 --> 00:01:22.610
and chooses the path with the lowest overall cost

29
00:01:22.610 --> 00:01:23.790
to the ABR.

30
00:01:23.790 --> 00:01:25.700
It's then up to the ABR to choose

31
00:01:25.700 --> 00:01:27.513
the best path onwards from there.

32
00:01:28.770 --> 00:01:32.120
The SPF, Shortest Path First algorithm

33
00:01:32.120 --> 00:01:35.390
calculates the overall cost for each available path

34
00:01:35.390 --> 00:01:37.090
to each destination network

35
00:01:37.090 --> 00:01:40.490
and then selects the lowest cost path.

36
00:01:40.490 --> 00:01:43.720
And the overall cost is the cumulative cost

37
00:01:43.720 --> 00:01:46.250
of all outgoing interfaces.

38
00:01:46.250 --> 00:01:51.250
So, the algorithm that OSPF uses to choose the best path

39
00:01:51.600 --> 00:01:54.940
when multiple paths are available, it's very simple.

40
00:01:54.940 --> 00:01:57.100
It just looks at the cost

41
00:01:57.100 --> 00:02:00.220
in all of the different outgoing interfaces

42
00:02:00.220 --> 00:02:03.210
that it can use to get there and whichever path

43
00:02:03.210 --> 00:02:05.640
has got the lowest overall cumulative cost

44
00:02:05.640 --> 00:02:07.760
is the one that's going to be preferred.

45
00:02:07.760 --> 00:02:10.780
Now, you should ensure that the cost is set the same

46
00:02:10.780 --> 00:02:13.640
on the interfaces on both sides of the link,

47
00:02:13.640 --> 00:02:15.800
or you can get asymmetric routing.

48
00:02:15.800 --> 00:02:18.670
Let's have a look at an example of that.

49
00:02:18.670 --> 00:02:20.670
So in the example here,

50
00:02:20.670 --> 00:02:25.560
we're going to look at the 10.1.2 network on the left

51
00:02:25.560 --> 00:02:29.130
and sending traffic over to the 10.0.1 network

52
00:02:29.130 --> 00:02:31.500
on the right, and also return traffic

53
00:02:31.500 --> 00:02:33.830
coming back in the other direction.

54
00:02:33.830 --> 00:02:36.560
So for traffic going from left to right,

55
00:02:36.560 --> 00:02:39.400
to the 10.0.1 network,

56
00:02:39.400 --> 00:02:42.840
R4 can either send out traffic along the top path

57
00:02:42.840 --> 00:02:46.350
via routers R3, R2, and then R1,

58
00:02:46.350 --> 00:02:48.400
or it can send it along the bottom path

59
00:02:48.400 --> 00:02:51.580
via router R5 and then R1.

60
00:02:51.580 --> 00:02:55.340
And R4 knows about all those different links,

61
00:02:55.340 --> 00:02:58.060
it knows about the cost of the links as well.

62
00:02:58.060 --> 00:03:00.520
It will add up the cost along the top path,

63
00:03:00.520 --> 00:03:02.970
it will also add up the cost along the bottom path,

64
00:03:02.970 --> 00:03:06.130
whichever path has got the lowest overall cost

65
00:03:06.130 --> 00:03:08.690
is going to be the path which is used.

66
00:03:08.690 --> 00:03:10.620
And when it's looking at those costs,

67
00:03:10.620 --> 00:03:12.893
it's the cost on the outgoing interface

68
00:03:12.893 --> 00:03:14.890
that it is going to use.

69
00:03:14.890 --> 00:03:17.460
So for traffic going along the top path,

70
00:03:17.460 --> 00:03:22.220
the outbound interfaces would be FastEthernet 0/0 on R4,

71
00:03:22.220 --> 00:03:25.430
and then FastEthernet 1/0 on R3,

72
00:03:25.430 --> 00:03:27.633
and then Fast 0/0 on R2,

73
00:03:28.510 --> 00:03:31.170
and finally the connected interface

74
00:03:31.170 --> 00:03:33.953
which is Fast 1/0 on R1.

75
00:03:35.060 --> 00:03:36.980
Obviously along the bottom path,

76
00:03:36.980 --> 00:03:39.260
it's also going to calculate the cost that it would be

77
00:03:39.260 --> 00:03:40.400
if it used that path,

78
00:03:40.400 --> 00:03:44.510
which is outbound interface Fast 2/0 on R4,

79
00:03:44.510 --> 00:03:49.510
and then 3/0 on R5, and then 1/0 on R1.

80
00:03:50.480 --> 00:03:53.340
For traffic coming back in the other direction,

81
00:03:53.340 --> 00:03:57.680
if a host like a PC on the 10.0.1 network

82
00:03:57.680 --> 00:03:59.993
sends traffic with a destination address of 10.1.2,

83
00:04:01.155 --> 00:04:03.475
that traffic is going to come into R1,

84
00:04:03.475 --> 00:04:06.280
and then R1 needs to select either the top

85
00:04:06.280 --> 00:04:08.790
or the bottom path to send the traffic out of,

86
00:04:08.790 --> 00:04:10.520
whichever one has got the lowest cost.

87
00:04:10.520 --> 00:04:12.700
For traffic going along the top path,

88
00:04:12.700 --> 00:04:14.953
the outbound interface is Fast 0/0 on R1,

89
00:04:16.055 --> 00:04:17.603
and then 1/0 on R2, and then 0/0 on R3,

90
00:04:20.800 --> 00:04:22.113
and finally 1/0 on R4.

91
00:04:24.040 --> 00:04:26.780
Obviously the bottom path, the outbound interfaces

92
00:04:26.780 --> 00:04:29.430
would be 3/0 on R1, 2/0 on R5, and finally 1/0 on R4.

93
00:04:33.650 --> 00:04:35.860
So notice that the outbound interface

94
00:04:35.860 --> 00:04:38.410
is on the other side of the link,

95
00:04:38.410 --> 00:04:41.067
depending on which direction the traffic is going in.

96
00:04:41.067 --> 00:04:44.290
So, for traffic going from left to right,

97
00:04:44.290 --> 00:04:47.280
it's going to go out Fast 0/0.

98
00:04:47.280 --> 00:04:49.210
On that same link for traffic coming back

99
00:04:49.210 --> 00:04:54.010
the other way from R1, it's on Fast 0/0 on R3.

100
00:04:54.010 --> 00:04:57.610
Now, we pretty much always want traffic

101
00:04:57.610 --> 00:05:01.160
to go along the same path in both directions

102
00:05:01.160 --> 00:05:03.330
between any two points on our network.

103
00:05:03.330 --> 00:05:08.050
So to ensure that, if you set the cost of a link,

104
00:05:08.050 --> 00:05:11.290
make sure that you set it on both interfaces.

105
00:05:11.290 --> 00:05:13.280
If you've got a different cost

106
00:05:13.280 --> 00:05:15.420
on different sides of your links,

107
00:05:15.420 --> 00:05:17.800
then traffic can end up taking different paths

108
00:05:17.800 --> 00:05:19.070
in different directions.

109
00:05:19.070 --> 00:05:21.590
By default, the cost will be the same

110
00:05:21.590 --> 00:05:24.470
on both sides of the link, but if you change anything,

111
00:05:24.470 --> 00:05:28.573
make sure you do the same thing on both sides of the link.

112
00:05:29.590 --> 00:05:31.670
So having a look at an example

113
00:05:31.670 --> 00:05:35.140
of an OSPF metric calculation,

114
00:05:35.140 --> 00:05:40.030
R2 over on the left has got two possible paths it could take

115
00:05:40.030 --> 00:05:45.030
to get to the 10.0.1.0/24 network behind R1.

116
00:05:45.640 --> 00:05:49.660
It could either go over the single link directly to R1,

117
00:05:49.660 --> 00:05:51.343
or it could go via R3.

118
00:05:52.450 --> 00:05:56.451
If it goes over directly the link to R1,

119
00:05:56.451 --> 00:06:00.118
the cost would be 50 (the cost to R1) plus 10,

120
00:06:01.137 --> 00:06:05.228
(the cost of the link itself), so that cost would be 60.

121
00:06:05.228 --> 00:06:08.602
To go along the bottom path via R3,

122
00:06:08.602 --> 00:06:12.416
the cost would be 10 plus 10 plus 10.

123
00:06:12.416 --> 00:06:14.290
So the cost there would be 30.

124
00:06:14.290 --> 00:06:18.890
So the bottom path has got a lower cost,

125
00:06:18.890 --> 00:06:20.730
even though it's a longer hop count,

126
00:06:20.730 --> 00:06:23.890
it's a lower cost because it's better quality links,

127
00:06:23.890 --> 00:06:25.380
we're going to have higher bandwidth,

128
00:06:25.380 --> 00:06:28.203
so it's going to prefer to take the lower path.

129
00:06:30.500 --> 00:06:34.280
Next thing to talk about is the reference bandwidth.

130
00:06:34.280 --> 00:06:39.280
The cost for OSPF is automatically derived

131
00:06:39.300 --> 00:06:41.630
from the interface bandwidth.

132
00:06:41.630 --> 00:06:43.520
So a higher bandwidth interface

133
00:06:43.520 --> 00:06:46.190
will be automatically preferred.

134
00:06:46.190 --> 00:06:48.060
The way that the cost is calculated

135
00:06:48.060 --> 00:06:50.420
is it's the reference bandwidth

136
00:06:50.420 --> 00:06:53.840
divided by the actual interface bandwidth.

137
00:06:53.840 --> 00:06:55.970
And the default reference bandwidth

138
00:06:55.970 --> 00:06:58.690
is 100 megabits per second.

139
00:06:58.690 --> 00:07:01.573
So what this means is if you've got a FastEthernet link,

140
00:07:01.573 --> 00:07:04.260
that would default to a cost of one.

141
00:07:04.260 --> 00:07:07.798
Because FastEthernet, the default bandwidth on there is 100

142
00:07:07.798 --> 00:07:09.520
for 100 megabits per second.

143
00:07:09.520 --> 00:07:14.120
We divide 100 by 100, that gives us a cost of one.

144
00:07:14.120 --> 00:07:17.373
On a serial interface, like a T1 in the example here,

145
00:07:17.373 --> 00:07:22.373
the bandwidth there is 1.544 megabits per second.

146
00:07:23.260 --> 00:07:26.860
So that will default to a cost of 64

147
00:07:26.860 --> 00:07:31.720
because 100 divided by 1.544 is 64.

148
00:07:31.720 --> 00:07:34.140
So you can see that the higher bandwidth interface

149
00:07:34.140 --> 00:07:37.080
is going to be automatically preferred.

150
00:07:37.080 --> 00:07:40.230
But there's a problem here.

151
00:07:40.230 --> 00:07:43.020
Because OSPF will treat all interfaces

152
00:07:43.020 --> 00:07:47.270
of 100 megabits per second or faster as equal,

153
00:07:47.270 --> 00:07:49.350
the best possible cost is one.

154
00:07:49.350 --> 00:07:52.040
We don't have like a 0.1 cost.

155
00:07:52.040 --> 00:07:56.480
So FastEthernet, Gigabit Ethernet, and 10 Gigabit Ethernet,

156
00:07:56.480 --> 00:07:59.560
et cetera, 40 Gigabit Ethernet, 100 Gigabit Ethernet,

157
00:07:59.560 --> 00:08:03.010
they will all default to a cost of one

158
00:08:03.010 --> 00:08:07.030
and this can cause undesirable routing in modern networks

159
00:08:07.030 --> 00:08:09.643
with modern high speed ethernet interfaces.

160
00:08:09.643 --> 00:08:13.010
You see the example in the diagram here.

161
00:08:13.010 --> 00:08:16.150
The link directly between R1 and R2

162
00:08:16.150 --> 00:08:19.038
on the top path is FastEthernet.

163
00:08:19.038 --> 00:08:21.740
So with the default reference bandwidth of 100,

164
00:08:21.740 --> 00:08:24.040
it gets a cost of one.

165
00:08:24.040 --> 00:08:27.530
But on the bottom path going via R3,

166
00:08:27.530 --> 00:08:29.690
they're Gigabit Ethernet interfaces,

167
00:08:29.690 --> 00:08:32.539
so they're faster, they've got higher bandwidth,

168
00:08:32.539 --> 00:08:35.080
but because we've got the default

169
00:08:35.080 --> 00:08:37.059
reference bandwidth of 100,

170
00:08:37.059 --> 00:08:40.230
they get a cost of one each as well.

171
00:08:40.230 --> 00:08:44.350
So the top path will have a default cost of two,

172
00:08:44.350 --> 00:08:46.510
which is the cost from R2 to R1,

173
00:08:46.510 --> 00:08:48.550
plus the cost of the link itself.

174
00:08:48.550 --> 00:08:49.860
And then along the bottom path,

175
00:08:49.860 --> 00:08:51.840
it's going to have a cost of three.

176
00:08:51.840 --> 00:08:55.480
So the bottom path is not going to be preferred.

177
00:08:55.480 --> 00:08:57.620
The router is going to use the top path,

178
00:08:57.620 --> 00:09:00.880
which is FastEthernet even though it's slower

179
00:09:00.880 --> 00:09:03.350
than the bottom path which has Gigabit Ethernet.

180
00:09:03.350 --> 00:09:05.500
So really we would prefer the traffic

181
00:09:05.500 --> 00:09:07.700
to go along the bottom path.

182
00:09:07.700 --> 00:09:09.830
So the way that we can force this

183
00:09:09.830 --> 00:09:13.416
is by changing the reference bandwidth.

184
00:09:13.416 --> 00:09:16.410
The reason that the default reference bandwidth

185
00:09:16.410 --> 00:09:20.090
is 100 by the way, is that OSPF has been around

186
00:09:20.090 --> 00:09:21.190
for a long time.

187
00:09:21.190 --> 00:09:23.890
And when OSPF first came out,

188
00:09:23.890 --> 00:09:25.950
we were back when ethernet networks

189
00:09:25.950 --> 00:09:29.420
used old-style classical ethernet of 10 megabits per second.

190
00:09:29.420 --> 00:09:32.237
And at the time, network engineers thought,

191
00:09:32.237 --> 00:09:34.780
"Well, maybe sometime in the future,

192
00:09:34.780 --> 00:09:36.960
we'll have 100 megabits per second.

193
00:09:36.960 --> 00:09:40.360
Well, but that's way off, we'll never get faster than that,"

194
00:09:40.360 --> 00:09:42.460
Obviously times have moved on,

195
00:09:42.460 --> 00:09:45.730
and we do have much faster ethernet interfaces

196
00:09:45.730 --> 00:09:48.500
than FastEthernet of 100 megabits per second now.

197
00:09:48.500 --> 00:09:51.707
We've got Gigabit Ethernet, we've got 10 Gigabit Ethernet,

198
00:09:51.707 --> 00:09:55.720
and we've even got 40 gigabit and 100 Gigabit Ethernet now.

199
00:09:55.720 --> 00:09:58.870
But using the old default reference bandwidth,

200
00:09:58.870 --> 00:10:02.450
they'll all be treated the same equal cost by OSPF.

201
00:10:02.450 --> 00:10:04.920
So we want to set the reference bandwidth

202
00:10:04.920 --> 00:10:06.950
to a higher value.

203
00:10:06.950 --> 00:10:11.020
The way you do that is at global config, router OSPF,

204
00:10:11.020 --> 00:10:12.430
and then under there the command

205
00:10:12.430 --> 00:10:15.110
is auto-cost reference-bandwidth

206
00:10:15.110 --> 00:10:18.720
and what you want to set the reference bandwidth to.

207
00:10:18.720 --> 00:10:22.060
So if you set it to 1000, for example,

208
00:10:22.060 --> 00:10:24.130
that would mean that Gigabit Ethernet interfaces

209
00:10:24.130 --> 00:10:28.170
will have a cost of one, FastEthernet will get a cost of 10.

210
00:10:28.170 --> 00:10:31.600
But you want to think a bit further ahead in the future.

211
00:10:31.600 --> 00:10:33.720
If on your current production network,

212
00:10:33.720 --> 00:10:37.320
your fastest interfaces right now are Gigabit Ethernet,

213
00:10:37.320 --> 00:10:40.060
don't set a reference bandwidth of 1000

214
00:10:40.060 --> 00:10:42.480
because maybe in a year or two's time,

215
00:10:42.480 --> 00:10:45.560
you're going to have 10 gigabit, 40 Gigabit Ethernet,

216
00:10:45.560 --> 00:10:46.980
and 100 Gigabit Ethernet.

217
00:10:46.980 --> 00:10:50.440
So set it to a high value that you're not going to have

218
00:10:50.440 --> 00:10:52.470
to change it again in future.

219
00:10:52.470 --> 00:10:54.370
And when you set the reference bandwidth,

220
00:10:54.370 --> 00:10:57.330
you need to do it the same on all routers

221
00:10:57.330 --> 00:10:59.990
so they're all using a consistent metric.

222
00:10:59.990 --> 00:11:01.430
So the example here,

223
00:11:01.430 --> 00:11:05.090
I've set auto-cost reference bandwidth 100,000,

224
00:11:05.090 --> 00:11:07.600
which is 100 Gigabit Ethernet.

225
00:11:07.600 --> 00:11:09.480
So now for our example,

226
00:11:09.480 --> 00:11:12.190
the FastEthernet interface along the top path

227
00:11:12.190 --> 00:11:14.230
will get a cost of 1000,

228
00:11:14.230 --> 00:11:16.700
the Gigabit Ethernet interfaces along the bottom path,

229
00:11:16.700 --> 00:11:18.400
get a cost of 100.

230
00:11:18.400 --> 00:11:21.690
So it will now prefer the bottom path

231
00:11:21.690 --> 00:11:24.053
because we changed the reference bandwidth.

232
00:11:26.030 --> 00:11:27.840
So in real world networks,

233
00:11:27.840 --> 00:11:29.750
typically all you'll have to do

234
00:11:29.750 --> 00:11:31.740
is just change reference bandwidth,

235
00:11:31.740 --> 00:11:35.580
and then OSPF is going to automatically select

236
00:11:35.580 --> 00:11:37.560
the highest bandwidth paths,

237
00:11:37.560 --> 00:11:40.240
which is what you would normally prefer.

238
00:11:40.240 --> 00:11:43.530
However, you might want to manipulate this,

239
00:11:43.530 --> 00:11:47.260
for example say you've got a high latency satellite link

240
00:11:47.260 --> 00:11:49.410
which has higher bandwidth but you want to prefer

241
00:11:49.410 --> 00:11:51.260
a lower bandwidth interface.

242
00:11:51.260 --> 00:11:54.910
You can do that by manipulating the OSPF metric.

243
00:11:54.910 --> 00:11:57.250
Another reason would be just if you want to spread

244
00:11:57.250 --> 00:11:59.570
the load of your traffic across different paths

245
00:11:59.570 --> 00:12:00.730
in your network.

246
00:12:00.730 --> 00:12:03.920
So OSPF takes the bandwidth of an interface into account

247
00:12:03.920 --> 00:12:05.690
when calculating the metric,

248
00:12:05.690 --> 00:12:09.640
so paths along higher bandwidth links will be preferred.

249
00:12:09.640 --> 00:12:11.500
The most desirable path will typically

250
00:12:11.500 --> 00:12:14.083
be automatically selected like I just said.

251
00:12:15.210 --> 00:12:17.570
But if you want to use a different path,

252
00:12:17.570 --> 00:12:20.300
you can manipulate that by manually changing

253
00:12:20.300 --> 00:12:24.570
the bandwidth or the OSPF cost on interfaces.

254
00:12:24.570 --> 00:12:26.890
It's recommended to use cost

255
00:12:26.890 --> 00:12:29.640
because the bandwidth setting can affect many features

256
00:12:29.640 --> 00:12:32.250
other than OSPF, such as QoS.

257
00:12:32.250 --> 00:12:36.500
With OSPF, we manipulate the cost rather than the bandwidth,

258
00:12:36.500 --> 00:12:38.830
but both would have the same effect.

259
00:12:38.830 --> 00:12:41.010
So if we are going to manipulate the bandwidth,

260
00:12:41.010 --> 00:12:43.730
you see in the example here on R1

261
00:12:43.730 --> 00:12:46.470
I've said show interface serial 1/0.

262
00:12:46.470 --> 00:12:48.270
And I can see there that the bandwidth

263
00:12:48.270 --> 00:12:51.150
is 1544 kilobits per second,

264
00:12:51.150 --> 00:12:54.270
which is the default bandwidth on a serial interface.

265
00:12:54.270 --> 00:12:55.840
If I wanted to change this,

266
00:12:55.840 --> 00:12:59.428
in global config, I can go to interface serial 1/0

267
00:12:59.428 --> 00:13:02.020
and then say bandwidth 768.

268
00:13:02.020 --> 00:13:04.560
Again, at the physical level,

269
00:13:04.560 --> 00:13:07.120
the link is still going to run at the clock rate.

270
00:13:07.120 --> 00:13:09.700
So if the clock rate is 1544,

271
00:13:09.700 --> 00:13:11.820
it's still going to run at 1544.

272
00:13:11.820 --> 00:13:13.990
Setting the bandwidth does not change

273
00:13:13.990 --> 00:13:16.580
the actual physical speed of the interface,

274
00:13:16.580 --> 00:13:19.900
it just changes how IOS will look at that interface

275
00:13:19.900 --> 00:13:21.530
for software policy.

276
00:13:21.530 --> 00:13:26.530
So this is how we could manipulate the overall cost

277
00:13:26.570 --> 00:13:29.420
for that link by changing the bandwidth.

278
00:13:29.420 --> 00:13:33.490
But the better way of doing it is by directly changing

279
00:13:33.490 --> 00:13:35.270
the cost because that wouldn't affect

280
00:13:35.270 --> 00:13:38.010
other software policy like QoS.

281
00:13:38.010 --> 00:13:41.930
To do that, we can say interface FastEthernet 0/0,

282
00:13:41.930 --> 00:13:44.460
ip ospf cost 50,

283
00:13:44.460 --> 00:13:46.493
will change the cost on that link.

284
00:13:47.940 --> 00:13:50.510
And to verify what the cost on a link is

285
00:13:50.510 --> 00:13:53.470
we can do a show ip ospf interface.

286
00:13:53.470 --> 00:13:55.430
If you've got a lot of interfaces on the router

287
00:13:55.430 --> 00:13:58.490
and you just say show ip ospf interface and hit enter,

288
00:13:58.490 --> 00:14:00.670
you're going to get quite long output.

289
00:14:00.670 --> 00:14:03.980
So you can also specify the individual interface here.

290
00:14:03.980 --> 00:14:06.760
You'll just get information about that one interface.

291
00:14:06.760 --> 00:14:09.980
We can also do a show ip ospf interface brief

292
00:14:09.980 --> 00:14:12.330
to get it in a short output to see the cost

293
00:14:12.330 --> 00:14:15.250
on all of our interfaces.

294
00:14:15.250 --> 00:14:20.100
Okay, so that's all the information about the OSPF metric.

295
00:14:20.100 --> 00:14:23.440
Next lecture, we'll take a look at actually configuring it

296
00:14:23.440 --> 00:14:24.273
in the lab.

