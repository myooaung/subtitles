WEBVTT
1
00:00:06.980 --> 00:00:15.380
In this lecture, we're going to work through a case study where you can see cloud computing in action

2
00:00:15.380 --> 00:00:21.530
with live Damul severe case study is what you can see on the slide here.

3
00:00:21.940 --> 00:00:32.409
And see, we're a company and we're a startup and we want to deploy a new three-tier e-commerce application.

4
00:00:32.420 --> 00:00:34.840
So we are going to be selling something online.

5
00:00:35.180 --> 00:00:43.150
It's a three tier e-commerce application, meaning the first tier is our front end Web servers where

6
00:00:43.160 --> 00:00:44.450
customers will connect.

7
00:00:44.450 --> 00:00:51.200
Then over the Internet, traffic from the air goes back to some application middleware servers, which

8
00:00:51.200 --> 00:00:54.770
will process the orders and then the backend.

9
00:00:55.190 --> 00:01:02.130
The here we've got our database servers, which holds the inventory and customer information, etc.

10
00:01:02.130 --> 00:01:05.770
This is a pretty standard three tier e-commerce application.

11
00:01:06.140 --> 00:01:10.910
Now we've got choices of how we are going to deploy this.

12
00:01:11.100 --> 00:01:15.170
Let's say that we are going to be a large company.

13
00:01:15.290 --> 00:01:22.130
So we want to have a bulletproof data center to hirees our application.

14
00:01:22.130 --> 00:01:29.210
And, well, we could build our own data center and then we could buy all of our own equipment and we

15
00:01:29.210 --> 00:01:32.210
could prevision it and configure it all ourselves.

16
00:01:32.510 --> 00:01:39.740
Obviously, that would take months, if not years, to find a site for the building, to have a building

17
00:01:39.740 --> 00:01:44.270
built to make sure that there's redundant power and cooling in there.

18
00:01:44.480 --> 00:01:51.680
Then to buy all of the network equipment, the storage equipment, the servers, get everything onto

19
00:01:51.680 --> 00:01:58.550
the site, have everything physically connected together and then configured and also to test it would

20
00:01:58.550 --> 00:02:01.010
take literally months to do that.

21
00:02:01.370 --> 00:02:04.550
And it's not just for new companies like a new start up.

22
00:02:04.700 --> 00:02:10.940
This could be an existing company and they want to deploy a new application.

23
00:02:11.190 --> 00:02:17.750
And again, they want it's a mission-critical application, so they want it to be in a highly available

24
00:02:17.750 --> 00:02:18.530
data center.

25
00:02:18.800 --> 00:02:19.730
The same choices.

26
00:02:19.730 --> 00:02:26.000
Again, they're they could either maybe put it into the existing facility, but the facility would have

27
00:02:26.000 --> 00:02:32.600
to be that kind of really hard and data center to hirees this application.

28
00:02:32.780 --> 00:02:38.870
If not, they would be they would be building their own facility and then all of the other problems

29
00:02:38.870 --> 00:02:39.410
as well.

30
00:02:39.590 --> 00:02:46.100
Another thing is that for and you start they're going to have to find staff, know how to do this,

31
00:02:46.250 --> 00:02:51.230
and they're going to want stuff that they're confident that they know how to do this and a best practice.

32
00:02:51.230 --> 00:02:58.880
Mï¿½RNER So that's one way that you can do it, which is going to take months and be hugely expansive

33
00:02:58.880 --> 00:03:01.340
and be mostly a capital expenditure.

34
00:03:01.700 --> 00:03:07.970
The other way that you can do it is you could deploy it in a cloud solution.

35
00:03:08.220 --> 00:03:13.510
And when you do that, you're deploying it in somebody else's datacenter.

36
00:03:13.880 --> 00:03:20.590
The data center is already built and you know that it's been built to the best practice, you know,

37
00:03:20.600 --> 00:03:25.640
about everything in there is redundant and highly available for provisioning it.

38
00:03:25.640 --> 00:03:32.660
You can get it up and running in literally hours instead of taking months or years.

39
00:03:32.970 --> 00:03:36.800
So let's have a look at how we're going to do that.

40
00:03:37.010 --> 00:03:45.080
And for example, I'll use AWG, Amazon Web Services, because they are by far the most popular cloud

41
00:03:45.080 --> 00:03:47.390
provider for this type of service.

42
00:03:48.290 --> 00:03:57.620
So I've already opened up the console and AWG and for this we want infrastructure as a service IATSE.

43
00:03:57.740 --> 00:04:02.720
I'll explain what the different deployment models are later in this picture.

44
00:04:03.560 --> 00:04:09.350
ISIS is what Amazon are probably best known for, what they're doing for the other products as well.

45
00:04:09.350 --> 00:04:10.880
But it's their most popular product.

46
00:04:11.180 --> 00:04:16.250
So their solution for this is Ishita stands for Elastic Cloud Compute.

47
00:04:16.640 --> 00:04:20.300
You see Amazon provide all the other types of cloud services as well.

48
00:04:20.300 --> 00:04:24.650
You can also provision storage and they are cloud based applications.

49
00:04:24.830 --> 00:04:31.610
You can do application development there, etc. But for this example, we are going to use to because

50
00:04:31.610 --> 00:04:39.620
we are going to be provisioning servers in the Amazon cloud and we also want to have our firewalls and

51
00:04:39.620 --> 00:04:41.510
our would balancers there as well.

52
00:04:41.720 --> 00:04:46.490
Let me just go back to the diagram to explain not what this page is alluding to.

53
00:04:46.730 --> 00:04:52.580
I said about the freakier application with the front end Web servers, the application middleware and

54
00:04:52.580 --> 00:04:54.980
the backend database servers in front of us.

55
00:04:55.160 --> 00:04:58.970
Obviously, we want to have a firewall facing out to the Internet.

56
00:04:59.720 --> 00:05:03.650
And when traffic comes in, we've got a farm of Web servers here.

57
00:05:03.650 --> 00:05:05.060
And these are all basically.

58
00:05:05.220 --> 00:05:11.190
Identical, running the same application when traffic comes in, we want to load balance across these

59
00:05:11.190 --> 00:05:15.000
different servers, so we've got load balancers in front there.

60
00:05:15.240 --> 00:05:17.310
We'll see that for this particular application.

61
00:05:17.310 --> 00:05:22.410
It's handled within the application for sending traffic back from the front end Web servers.

62
00:05:22.710 --> 00:05:22.980
OK.

63
00:05:23.040 --> 00:05:26.070
You know, we've got no single points of failure here.

64
00:05:26.110 --> 00:05:28.640
We've got redundant components for everything.

65
00:05:28.950 --> 00:05:35.100
So let's go and have a look at an example of how we would configure this issue for the servers.

66
00:05:35.100 --> 00:05:40.640
We're going to run rows of virtual machines as instances in AWG.

67
00:05:40.890 --> 00:05:45.810
This is using virtualization that I'm going to talk about in another lecture later in my.

68
00:05:46.260 --> 00:05:47.490
And let's see how to do it.

69
00:05:48.010 --> 00:05:53.880
So I'll click on Launch Instant's and I'm going to configure my Web servers first.

70
00:05:54.750 --> 00:05:59.640
First thing it asks me is what operating system do you want to run on those servers?

71
00:05:59.940 --> 00:06:03.390
And it gives me an option of lots of different flavors of Linux.

72
00:06:03.390 --> 00:06:07.260
I could also run them on Windows if I wanted to as well.

73
00:06:07.440 --> 00:06:13.350
I'm just doing a demo here, so I'll just take cheap option, which is the Amazon Linux EMI.

74
00:06:13.530 --> 00:06:17.310
When I say it's cheap, I mean, you don't have to pay for licensing like you do with Windows.

75
00:06:17.440 --> 00:06:19.200
It's not there's nothing wrong with it.

76
00:06:19.200 --> 00:06:20.370
It's good operating system.

77
00:06:20.880 --> 00:06:29.970
Next thing is, I need to specify the CPU and the amount of memory in those servers.

78
00:06:30.150 --> 00:06:35.850
Again, I will just take the lowest one here because it's just the demo with one virtual CPU and one

79
00:06:35.850 --> 00:06:36.210
gigabyte.

80
00:06:36.840 --> 00:06:42.330
We scroll down, you see that you can get really powerful servers, but there's one with for a virtual

81
00:06:42.330 --> 00:06:42.870
CPU's.

82
00:06:42.870 --> 00:06:47.940
One hundred and sixty gigabyte from obviously the more powerful the server you one, the more it's going

83
00:06:47.940 --> 00:06:48.630
to cost you.

84
00:06:48.990 --> 00:06:56.490
I then click on next to configure the interestingness details and in here I can specify how many instances

85
00:06:56.490 --> 00:06:58.020
I want to.

86
00:06:58.020 --> 00:07:03.660
And our example, we were just starting off with four servers, but you could say however many Web servers

87
00:07:03.660 --> 00:07:07.710
you want, this is just for the Web servers because these are all going to be identical.

88
00:07:07.980 --> 00:07:14.070
I would prevision the middleware servers and the database server separately because they're going to

89
00:07:14.070 --> 00:07:15.660
have different specifications.

90
00:07:15.690 --> 00:07:21.450
So I would put forward and here I'll just leave it as one in a Damul also know, is it what it's asking

91
00:07:21.450 --> 00:07:28.860
if I want to configure an auto scaling group, what you can do is you can monitor how busy the servers

92
00:07:28.860 --> 00:07:34.980
are and IWG and if it goes above a certain threshold, for example, the amount of connections that

93
00:07:34.980 --> 00:07:41.760
are coming in or how busy the CPU is, it can automatically spin up additional servers.

94
00:07:41.940 --> 00:07:45.000
So that's the elasticity that we were talking about before.

95
00:07:45.180 --> 00:07:48.540
You can manually add servers on demand anytime you want to.

96
00:07:48.540 --> 00:07:51.860
You can also harvest automatically be done for you as well.

97
00:07:52.050 --> 00:07:56.400
So based on the current demand, additional servers can be spun up.

98
00:07:56.400 --> 00:08:00.450
Also, if demand drops below a threshold, you can start shutting servers down.

99
00:08:00.540 --> 00:08:06.300
So it's very elastic and you can automate about the next thing is the network configuration.

100
00:08:06.300 --> 00:08:11.580
So looking at our example, we are going to need three different networks here.

101
00:08:11.940 --> 00:08:17.730
I was running out of space and diagram, but I'd probably put firewalls in between each of these tiers

102
00:08:17.730 --> 00:08:20.220
as well to the Web servers.

103
00:08:20.220 --> 00:08:25.980
The middleware servers and the backend servers are all going to be in different versions and in different

104
00:08:25.980 --> 00:08:27.120
IP subnets.

105
00:08:27.210 --> 00:08:30.510
So I would configure that with the network settings.

106
00:08:31.500 --> 00:08:35.700
Then I can click on next and add storage here.

107
00:08:35.700 --> 00:08:42.179
I say how much storage I want for the different servers, whether I want to use a local disk inside

108
00:08:42.179 --> 00:08:48.960
for servers or an external sann, and I can also get performance guarantees for my storage in here as

109
00:08:48.960 --> 00:08:49.290
well.

110
00:08:49.440 --> 00:08:50.960
I'll just accept the default.

111
00:08:51.420 --> 00:08:53.430
The next page you can add tags.

112
00:08:53.430 --> 00:08:58.980
This is useful if you've got a lot of servers for keeping them organized, then on the next page it's

113
00:08:58.990 --> 00:09:06.510
the security group and this is where I configure my firewall to specify the type of traffic that I want

114
00:09:06.510 --> 00:09:09.090
to highlight coming into those different servers.

115
00:09:09.600 --> 00:09:18.060
I then click on review and launch and I can view a summary of the specifications of my server here and

116
00:09:18.060 --> 00:09:19.200
then click on launch.

117
00:09:19.380 --> 00:09:25.080
And in around 10 or 15 minutes time, those servers will be up and ready.

118
00:09:25.830 --> 00:09:31.910
So you can see the difference here with using a traditional on premises or cool model would it takes

119
00:09:31.950 --> 00:09:34.950
over a week to get new servers online.

120
00:09:35.130 --> 00:09:40.920
When you're using cloud, you can have new servers up and running literally in fifteen minutes.

121
00:09:40.920 --> 00:09:48.790
It's super fast and you can spin up additional ones whenever you need to and quickly as well.

122
00:09:48.820 --> 00:09:53.370
That was the characteristics of cloud that we covered in the last lecture.

123
00:09:53.700 --> 00:10:00.510
I've got that in the next slide show here where the cloud characteristics first one on demand self-service.

124
00:10:00.690 --> 00:10:04.720
I did not need to raise a ticket and have somebody manually.

125
00:10:04.720 --> 00:10:04.970
It can.

126
00:10:05.360 --> 00:10:11.510
Everything for me, it was all on me, it was on demand and through a self-service Web based portal,

127
00:10:11.690 --> 00:10:14.030
that's what you'll use see for cloud services.

128
00:10:14.300 --> 00:10:19.490
The next one, Rapides lost this you so that I could prevision and very quickly and it can automatically

129
00:10:19.490 --> 00:10:21.970
scale up and down in line with demand.

130
00:10:22.400 --> 00:10:24.410
The next one is broad network access.

131
00:10:24.410 --> 00:10:26.690
We're not servers finished being built.

132
00:10:26.810 --> 00:10:32.000
I'll be able to access it from inside my own office or I could access it from out on the Internet.

133
00:10:32.480 --> 00:10:34.730
The next one is resource puling.

134
00:10:34.730 --> 00:10:38.750
I'm going to cover this in more depth as we go through the rest of this section.

135
00:10:39.270 --> 00:10:45.440
Those virtual servers, they're not running on their own separate dedicated server hardware.

136
00:10:45.680 --> 00:10:48.820
They're shared with other customers as well.

137
00:10:49.160 --> 00:10:51.740
The benefit I get from this is that lowers the costs.

138
00:10:52.460 --> 00:10:59.810
And then finally, the measured service based on how much virtual CPU power I want, the amount of mammone,

139
00:10:59.960 --> 00:11:03.140
the amount of storage and other characteristics as well.

140
00:11:03.140 --> 00:11:08.800
I'm going to be billed based on what I provisioned and I'm going to get a monthly bill for that.

141
00:11:09.020 --> 00:11:16.310
So it's going to be an ongoing OpEx cost rather than a large upfront CapEx cost having expand the start.

142
00:11:17.010 --> 00:11:23.690
OK, let's have a look at some other things as well while I'm here just to point this out, because

143
00:11:23.840 --> 00:11:28.340
when we get into the software defined networking, I'm going to talk about this some more.

144
00:11:28.760 --> 00:11:33.950
So if I go back, you know, when I was talking about how we do it, traditionally there's going to

145
00:11:33.950 --> 00:11:38.090
be different teams that are going to be involved in getting this set up.

146
00:11:38.390 --> 00:11:44.330
You've got the server team who are going to install the operating system, install any patches and also

147
00:11:44.330 --> 00:11:46.490
install the applications.

148
00:11:46.730 --> 00:11:53.210
You've got the networking team who are going to configure the villines, configure the right wing information,

149
00:11:53.210 --> 00:11:56.270
configure the firewalls and configure the Lord balancers.

150
00:11:56.540 --> 00:12:00.590
And you've got the storage team who are going to provision the storage.

151
00:12:00.800 --> 00:12:04.280
If it's on a large datacenter, it's probably going to be external storage.

152
00:12:04.400 --> 00:12:10.610
So they're going to have to configure configure for storage for this particular server and execute it

153
00:12:10.610 --> 00:12:11.150
as well.

154
00:12:11.400 --> 00:12:16.520
So that's all that, Emmanual, and it makes it more time consuming when we use cloud.

155
00:12:16.520 --> 00:12:25.700
I specified everything I wanted free this really easy to use self-service portal while I was in here,

156
00:12:25.700 --> 00:12:27.080
it was to have a quick look again.

157
00:12:27.080 --> 00:12:35.540
So I specified the amount of CPUs and mamady I want and on the page before I specified the operating

158
00:12:35.630 --> 00:12:43.190
system that I wanted after a quick review and launch, it does not go back to somebody who's going to

159
00:12:43.190 --> 00:12:44.390
manually configuration.

160
00:12:44.570 --> 00:12:46.040
It's all automated.

161
00:12:46.370 --> 00:12:53.240
So we've got the front end cert software here where I specify the operating system, the actual specs

162
00:12:53.240 --> 00:13:02.510
of the server, also the networking details as well on the storage details and spinning up.

163
00:13:02.510 --> 00:13:05.930
Actually bringing up the server is all automated.

164
00:13:06.200 --> 00:13:11.450
So we've got this front and software that is then going to talk to software behind here.

165
00:13:11.630 --> 00:13:18.440
They can talk to the different server storage and networking components and automatically provisioned

166
00:13:18.440 --> 00:13:19.130
everything.

167
00:13:19.300 --> 00:13:23.020
That's how we can be up and running in around 15 minutes time.

168
00:13:23.420 --> 00:13:28.370
I could also configure other security settings in here as well.

169
00:13:28.610 --> 00:13:34.310
So it just gives you an idea of the standard kind of services that we use with Cloud.

170
00:13:34.610 --> 00:13:36.890
OK, that will do for this lecture.

171
00:13:36.980 --> 00:13:38.000
See it in the next one.

