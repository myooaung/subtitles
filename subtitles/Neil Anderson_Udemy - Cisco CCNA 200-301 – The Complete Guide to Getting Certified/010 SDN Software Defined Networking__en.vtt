WEBVTT
1
00:00:07.340 --> 00:00:15.950
In this lecture, you'll learn about SDM software defined networking before I explain what Estienne

2
00:00:15.950 --> 00:00:24.320
is, we need to review the planes on our Ersin and switches back the data control and management planes.

3
00:00:24.620 --> 00:00:27.830
The data plane can also be known as the forwarding plane.

4
00:00:28.070 --> 00:00:31.350
That's where traffic is forwarded through the debate.

5
00:00:31.550 --> 00:00:37.850
So if, for example, you're sitting in the office and you open up a Web page out on the Internet and

6
00:00:38.060 --> 00:00:43.970
traffic, the pockets are going through the router, then those pockets are passing through the airplane.

7
00:00:44.180 --> 00:00:51.320
So any normal production traffic, which is which is forwarding through its interfaces, that is going

8
00:00:51.320 --> 00:00:55.700
through the data plane, the next plane that we've got is the control plane.

9
00:00:55.970 --> 00:01:02.360
The control plane makes decisions about how to forward traffic control plane pockets, such as routing

10
00:01:02.360 --> 00:01:10.040
political updates or free or spinning to updates earlier to our destined to or locally originated on

11
00:01:10.040 --> 00:01:11.450
the device itself.

12
00:01:11.600 --> 00:01:19.010
So if, for example, we've got a couple of drivers are one and are two and they're sharing NPF updates

13
00:01:19.010 --> 00:01:26.210
with each other, well, when our one advertises I wrote to our two pocket originates on our one and

14
00:01:26.210 --> 00:01:27.960
then it's dashed into our two.

15
00:01:28.180 --> 00:01:34.610
So unlike the pocket's in the data plane which are passing through, there are pockets in the control

16
00:01:34.610 --> 00:01:39.080
plane originate from on Terminix, on the voters or the switches.

17
00:01:39.380 --> 00:01:42.250
Finally, we have got the management plane.

18
00:01:42.920 --> 00:01:47.870
The device is configured and monitored in the management plane, for example.

19
00:01:47.870 --> 00:01:55.610
If you're connecting to that or switch to manage it through Telnet or MSH, you're working in the management

20
00:01:55.610 --> 00:01:55.940
plane.

21
00:01:56.150 --> 00:02:05.310
You could also be managing it via a guey using a yes or via S&P or an API application programming interface.

22
00:02:05.360 --> 00:02:08.030
OK, so those are our three planes.

23
00:02:08.990 --> 00:02:14.450
Network infrastructure devices, your viewers and switches are responsible for their own individual

24
00:02:14.450 --> 00:02:22.190
control on their planes in a traditional environment, so all the pockets are passing through or a switch

25
00:02:22.820 --> 00:02:29.870
or switch that is responsible for forwarding them in the plane and also, again, using SPF as the example

26
00:02:29.870 --> 00:02:30.950
in the control plane.

27
00:02:31.550 --> 00:02:39.200
Each individual writer is responsible for updating its own routing table, which is how it makes was

28
00:02:39.200 --> 00:02:43.160
forwarding decisions with software defined networking.

29
00:02:43.340 --> 00:02:45.800
It breaks with the traditional model.

30
00:02:45.810 --> 00:02:47.240
So we've dealt with the end.

31
00:02:47.390 --> 00:02:55.520
It decouples the data and control planes rather than having bovver data and control planes running individually,

32
00:02:55.520 --> 00:03:03.080
one at a time when each of our network devices with the and the control plane is moved off to a centralized

33
00:03:03.080 --> 00:03:04.430
SDM controller.

34
00:03:04.670 --> 00:03:08.600
So the network infrastructure devices are still responsible for forwarding traffic.

35
00:03:08.600 --> 00:03:11.000
So they're still controlling their own data plane.

36
00:03:11.180 --> 00:03:15.860
But the control plane intelligence moves to a centralized SD and controller.

37
00:03:17.240 --> 00:03:23.090
Rules for pocket handling are sent to the network infrastructure devices from the controller and the

38
00:03:23.090 --> 00:03:29.060
network infrastructure devices queeny controller for guidance as needed, and we provide it with information

39
00:03:29.060 --> 00:03:31.010
about traffic that they are handling.

40
00:03:32.930 --> 00:03:40.730
We can run again either as a pure Estienne or as a hybrid SDM with a pure Estienne control plane runs

41
00:03:40.730 --> 00:03:48.320
purely on the city and controller, and the plane runs purely on the network devices with a hybrid ESTIENNE.

42
00:03:48.470 --> 00:03:54.710
The majority of control plane intelligence is again provided by the SDM controller, but the network

43
00:03:54.720 --> 00:04:00.290
devices retain some control plane intelligence as well as with the airplane operations.

44
00:04:00.440 --> 00:04:08.090
And most implementations, including used by Cisco, use a hybrid ESTIENNE because it can be more efficient

45
00:04:08.090 --> 00:04:09.640
and higher performance that way.

46
00:04:10.940 --> 00:04:15.810
OK, so let's look at the Estienne architecture, the information on this slide.

47
00:04:15.830 --> 00:04:17.980
You definitely want to know for Vishniac.

48
00:04:18.620 --> 00:04:20.130
So what's the architecture?

49
00:04:20.149 --> 00:04:23.320
Everything is from the point of view of the controller.

50
00:04:23.330 --> 00:04:24.410
So we'll start there.

51
00:04:24.710 --> 00:04:26.570
That is the controller.

52
00:04:26.720 --> 00:04:30.400
We've got our SDM controller, which provides the network services.

53
00:04:31.220 --> 00:04:36.220
Then it's going to be managing our network devices are our switches, et cetera.

54
00:04:36.470 --> 00:04:42.470
They are living in the infrastructure layer, which in the hierarchy is going to be below the control

55
00:04:42.470 --> 00:04:44.150
there with the ESTIENNE.

56
00:04:44.780 --> 00:04:50.450
And because everything in architecture is from the point of view, the Estienne controller and the network

57
00:04:50.450 --> 00:04:56.180
devices are below it in the hierarchy, then we're going to be using southbound APIs from the controller

58
00:04:56.330 --> 00:04:58.580
to control the network devices.

59
00:04:59.030 --> 00:05:05.900
The APIs could be using open flu, which was one of the earlier SDM protocols.

60
00:05:05.900 --> 00:05:14.980
It's open source otherways that the controller can control the devices is via S&P Arrest API, Netcom,

61
00:05:15.140 --> 00:05:20.480
Rascon or S.H. just depends on the particular implementation which will be used.

62
00:05:20.630 --> 00:05:27.350
Often controllers can use different protocols and they will use whichever one is supported by the particular

63
00:05:27.350 --> 00:05:28.730
device they are managing.

64
00:05:29.780 --> 00:05:32.420
We also have the application layer.

65
00:05:32.630 --> 00:05:39.110
That's where we have our Estienne business applications because this is above the controller in the

66
00:05:39.110 --> 00:05:39.830
hierarchy.

67
00:05:40.100 --> 00:05:45.290
From the controllers point of view, it's going to be communicating with that with northbound APIs,

68
00:05:45.530 --> 00:05:49.220
northbound APIs are typically going to be using rest.

69
00:05:49.500 --> 00:05:54.820
OK, so let's have a look at this actually in action so you can visualize it.

70
00:05:55.100 --> 00:05:58.550
So I'll go back to my SWC example again.

71
00:05:58.860 --> 00:06:03.380
If an Amazon Web Services, I'm going to be provisioning a virtual machine there.

72
00:06:03.530 --> 00:06:05.830
At this point, I've already configured all my settings.

73
00:06:05.840 --> 00:06:07.610
I'm just on the review page now.

74
00:06:07.820 --> 00:06:14.390
And you can see here that in this Web based front end, I've configured my network settings.

75
00:06:14.500 --> 00:06:16.640
I want my virtual machine here.

76
00:06:16.640 --> 00:06:21.680
So I've specified the network subnet, if I want to have it, want it to have a public IP address.

77
00:06:21.890 --> 00:06:24.780
I've also specified my firewall rules here as well.

78
00:06:25.070 --> 00:06:32.000
So this is the front end that the user is going to be interacting with me when I'm provisioning my virtual

79
00:06:32.000 --> 00:06:32.540
machine.

80
00:06:33.110 --> 00:06:37.190
And from here we need to get the server configured.

81
00:06:37.190 --> 00:06:40.460
So I need to have the operating system installed.

82
00:06:40.650 --> 00:06:43.580
Also, I need to have all my network infrastructure devices.

83
00:06:43.670 --> 00:06:49.090
So I've configured all my settings in here looking at our hierarchical model.

84
00:06:49.610 --> 00:06:54.830
This is the application where this is my front end as the end business application.

85
00:06:55.310 --> 00:06:59.810
I fill in for information there and then when I click the button to actually provisioned the virtual

86
00:06:59.810 --> 00:07:06.560
machine, the northbound APIs using Rasht are going to communicate with the SDM controller and then

87
00:07:06.560 --> 00:07:12.180
it's a SDM controller, which is actually going to push the configuration to my network devices below

88
00:07:12.200 --> 00:07:14.330
there, because that's how it's typically going to work.

89
00:07:14.510 --> 00:07:20.840
You're going to have a front end user or the administrator is going to be interacting with the application

90
00:07:20.840 --> 00:07:21.170
layer.

91
00:07:21.290 --> 00:07:26.360
It uses a rest API to communicate with the controller and then the controller will use it, Sigfried

92
00:07:26.360 --> 00:07:29.480
APIs to actually push the config to the devices.

93
00:07:30.950 --> 00:07:36.180
They finally let's look at what the controllers are available from Cisco.

94
00:07:36.410 --> 00:07:42.290
First up, we've got the APIC, which stands for Application Policy Infrastructure Controller, and

95
00:07:42.290 --> 00:07:48.500
the APEC is the main component of Cisco Asiye, which stands for application centric infrastructure.

96
00:07:48.740 --> 00:07:53.870
APEC is designed to manage, they are saying, our environments with nexus switches.

97
00:07:54.350 --> 00:07:57.960
So when you're in an I.T. environment, typically it's the asset.

98
00:07:58.020 --> 00:08:00.840
Nerva is going to have your higher end devices in there.

99
00:08:00.980 --> 00:08:02.960
That's what all your services are located.

100
00:08:03.120 --> 00:08:05.060
You want to have high performance there.

101
00:08:05.450 --> 00:08:11.780
And because of this, the data center is often the first place that new technologies are going to be

102
00:08:11.780 --> 00:08:12.470
implemented.

103
00:08:12.770 --> 00:08:15.250
And that was the case with Cisco Estienne.

104
00:08:15.530 --> 00:08:22.190
So if you had a Cisco based datacenter, you were using Nexus switches where you were able or you still

105
00:08:22.190 --> 00:08:27.380
are able to control that with the using the Cisco APIC.

106
00:08:28.230 --> 00:08:34.289
After the epic was released that's been available for several years, the next one that was available

107
00:08:34.289 --> 00:08:35.970
was the epic Yelm.

108
00:08:36.179 --> 00:08:41.500
The Epic M stands for application policy infrastructure controller enterprise module.

109
00:08:41.610 --> 00:08:47.490
So where are the APIC is designed for use in data center environments and it controls Nexus switches.

110
00:08:47.610 --> 00:08:54.030
The APM is designed to manage enterprise environments, but your campus, your branch on the WAN.

111
00:08:54.330 --> 00:09:03.380
Now, the APM has actually been upgraded recently to the DNA center, the DNA center.

112
00:09:03.390 --> 00:09:07.900
It's got most of the same features and functions that the EPIC yammered.

113
00:09:08.070 --> 00:09:10.600
The APM has not going to end of life yet.

114
00:09:10.620 --> 00:09:17.820
As I am recording this, it will do some time through because DNA Center is new, even new version of

115
00:09:17.820 --> 00:09:18.750
APIC Yelm.

116
00:09:19.140 --> 00:09:26.880
The APIC used in data center environment is not covered in the Shishani exam, but DNA Center for Your

117
00:09:26.880 --> 00:09:29.040
Enterprise Environments is so.

118
00:09:29.040 --> 00:09:32.700
In the next lecture, we'll be looking in more detail at DNA Center.

