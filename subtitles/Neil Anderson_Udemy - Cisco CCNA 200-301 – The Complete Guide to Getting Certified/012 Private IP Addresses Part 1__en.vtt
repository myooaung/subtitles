WEBVTT
1
00:00:06.620 --> 00:00:12.020
In this lecture, you'll learn about the private address ranges.

2
00:00:12.110 --> 00:00:24.050
These were documented by the IETF, that's Internet Engineering Task Force, in RFC 1918. RFC stands for Requests

3
00:00:24.050 --> 00:00:30.830
For Comments. So when the IETF released some documentation, they release it as an RFC number, meaning

4
00:00:30.830 --> 00:00:35.160
that other engineers can comment on it and maybe suggest improvements.

5
00:00:35.450 --> 00:00:38.750
But the RFC is still a finished standard as well,

6
00:00:38.840 --> 00:00:46.740
so the final standard, as of today, for private IP addressing is RFC 1918.

7
00:00:46.790 --> 00:00:51.800
There are a lot of other RFCs out there as well, for pretty much every technology,

8
00:00:51.860 --> 00:00:54.150
but if you asked me to name an RFC number,

9
00:00:54.160 --> 00:00:54.920
then

10
00:00:55.000 --> 00:01:00.370
the only one that I probably could is RFC 1918 for private addresses.

11
00:01:00.410 --> 00:01:05.990
Because if you're in conversation with somebody, it's quite common to call it an RFC 1918 address.

12
00:01:07.940 --> 00:01:15.970
Sticking with our theme of how the Internet was originally designed to work,

13
00:01:16.190 --> 00:01:23.540
private IP addresses were originally for hosts that should not be connected to the Internet. Because,

14
00:01:23.540 --> 00:01:28.550
obviously, if you're an organization and you got a part of your network that you don't want to be connected

15
00:01:28.550 --> 00:01:33.130
to the Internet, you're not going to pay for public IP addresses for those hosts.

16
00:01:33.140 --> 00:01:38.480
That would be a waste of money paying for IP addresses that are never going to be used. So a way that

17
00:01:38.480 --> 00:01:44.500
you could save money is by using private IP addresses on there instead.

18
00:01:44.570 --> 00:01:50.420
The other benefit you get from it is that the hosts are not going to be connected to the Internet,

19
00:01:50.420 --> 00:01:52.400
so it makes them more secure as well,

20
00:01:52.400 --> 00:01:55.710
and it locks down that they can't talk on the Internet.

21
00:01:55.760 --> 00:01:58.970
So if you're thinking, "Well, why would anybody ever do that?"

22
00:01:59.240 --> 00:02:01.350
Maybe it's a highly secured environment,

23
00:02:01.430 --> 00:02:07.190
like maybe it's a bank, and the bank has got a part of their network that they want to keep completely off

24
00:02:07.190 --> 00:02:09.110
the Internet for security reasons.

25
00:02:09.110 --> 00:02:11.960
They would use private IP addresses there.

26
00:02:11.990 --> 00:02:17.090
Another possible example is maybe you've got a high school, and they've got PCs there,

27
00:02:17.120 --> 00:02:21.830
but the school authorities don't want the kids to be able to get on the Internet.

28
00:02:21.950 --> 00:02:28.110
Again, they would use private IP addresses there. So, the addresses that are private,

29
00:02:28.130 --> 00:02:35.090
there's a range in each of the different Classes A, B, and C. In Class A, we've got to 10.0.0.0

30
00:02:35.120 --> 00:02:43.310
to 10.255.255.255, and that uses the standard Class A subnet mask

31
00:02:43.310 --> 00:02:44.150
of /8.

32
00:02:44.180 --> 00:02:49.970
So we can also write it as 10.0.0.0/8 or 10.0.0.0 with the subnet

33
00:02:49.970 --> 00:02:54.620
mask 255.0.0.0. The Class B private

34
00:02:54.620 --> 00:03:02.800
range is 172.16.0.0 to 172.31.255.255.

35
00:03:02.810 --> 00:03:10.370
That is 172.16.0.0/12, so the Class B range does not use the default subnet

36
00:03:10.370 --> 00:03:18.980
mask of /16. And the Class C range of private addresses is 192.168.0.0 to 

37
00:03:18.980 --> 00:03:22.090
192.168.255.255.

38
00:03:22.460 --> 00:03:28.610
So the Class C range use, again, it's not the default mask. It uses a /16, which is the normal default

39
00:03:28.610 --> 00:03:30.440
mask for a Class B network.

40
00:03:31.190 --> 00:03:37.760
Okay, so those are the three ranges of private addresses. You want to have these committed to memory.

41
00:03:38.090 --> 00:03:43.620
So just like you're going to commit to memory what the range is for Class A,

42
00:03:43.630 --> 00:03:45.280
Class B, and Class C,

43
00:03:45.280 --> 00:03:48.930
also remember what the ranges are that are used for

44
00:03:48.950 --> 00:03:50.510
the private addresses.

45
00:03:50.510 --> 00:03:56.180
This is not just for the CCNA exam. Really, you're expected to know this off the top of your head when

46
00:03:56.180 --> 00:04:02.670
you're working in the real world as well because you'll see the RFC 1918 addresses are used a lot

47
00:04:02.690 --> 00:04:03.810
in the real world.

48
00:04:03.830 --> 00:04:06.170
I'll get to the reason for that very soon

49
00:04:06.170 --> 00:04:12.680
in this lecture. So, let's look at an example of where we would use private addresses

50
00:04:12.680 --> 00:04:16.240
back in the day when we wanted to keep our hosts off of the Internet.

51
00:04:16.339 --> 00:04:17.899
So, this is a secured environment.

52
00:04:17.899 --> 00:04:25.310
We've got Bank A on the left, we've got Bank B on the right. Bank A have got a public part of their

53
00:04:25.310 --> 00:04:28.210
network that is used for their staff who are allowed to access the Internet

54
00:04:28.260 --> 00:04:29.300
that's at

55
00:04:29.300 --> 00:04:31.970
175.11.0.0

56
00:04:31.980 --> 00:04:33.000
/24.

57
00:04:33.170 --> 00:04:37.820
And then they've got a different part of their network, which is maybe where they have some very sensitive

58
00:04:37.820 --> 00:04:42.730
servers that they want to keep off the Internet, and they put on there the private address 10.10.10.0.

59
00:04:42.780 --> 00:04:50.180
Bank B, their public address is 196.14.10.0, and they've also got a

60
00:04:50.180 --> 00:04:55.530
private range which is 172.18.5.0/24.

61
00:04:55.560 --> 00:04:56.610
Okay, an example,

62
00:04:56.610 --> 00:05:04.030
example number 2, you can see that here, Bank A and Bank B are both using 192.168.10.0.

63
00:05:04.040 --> 00:05:09.360
That's fine. They don't have any connectivity to each other anyway because they're on completely

64
00:05:09.360 --> 00:05:16.380
separate networks. So you'll find that with private addresses, loads of organizations all over the world

65
00:05:16.590 --> 00:05:23.160
will be using the same private address ranges. They can't use the same public address ranges because

66
00:05:23.160 --> 00:05:28.620
we need to have connectivity to each other over the Internet. But the private addresses don't have any

67
00:05:28.620 --> 00:05:37.110
connectivity outside the organization, so those addresses can be reused over and over again.

68
00:05:37.260 --> 00:05:42.510
Okay, let's revisit the IPv4 global address space problem.

69
00:05:42.510 --> 00:05:49.800
So, the designers of IPv4 did not realize how big the Internet was going to get, and when they first

70
00:05:49.800 --> 00:05:57.360
designed the IPv4 format, they thought that 4.3 billion addresses is going to be more

71
00:05:57.360 --> 00:05:59.850
than enough for what would be required.

72
00:05:59.910 --> 00:06:06.720
But the problem is, we know today that 4.3 billion is nowhere near enough. So, another

73
00:06:06.720 --> 00:06:11.630
problem is that the protocol is not efficient in the way that it allocates addresses as well.

74
00:06:11.640 --> 00:06:16.740
Again, because they thought that they had more than enough addresses, they didn't worry about wasting

75
00:06:16.740 --> 00:06:17.430
addresses.

76
00:06:17.430 --> 00:06:25.770
For example, the 127.0.0.0 address. They're wasting an entire Class A range just for the loopback testing. Also,

77
00:06:25.770 --> 00:06:31.650
the way that large address blocks were given to organizations who were not using anywhere near as many

78
00:06:31.650 --> 00:06:36.540
as the actual addresses they were given. So the IPv4 address space,

79
00:06:36.570 --> 00:06:42.360
really, it's not big enough for how many addresses we actually need on the Internet today.

80
00:06:44.100 --> 00:06:52.410
So, they actually run out of addresses. Quite a while ago, back in the late 1980s, they realized

81
00:06:52.410 --> 00:06:57.190
that they were going to run out of addresses, so they started working on a solution to the problem.

82
00:06:57.330 --> 00:07:04.800
And in the 1990s, the solution that was developed was IPv6. So, the addresses we've been talking about up

83
00:07:04.800 --> 00:07:11.730
to this point in the course has been the IPv4. IPv6 addresses have got a different format, where IPv4

84
00:07:11.760 --> 00:07:21.660
addresses are 32 bits long, IPv6 are 128 bits long. But the address space is not just four times

85
00:07:21.660 --> 00:07:27.930
as big as the IPv4 is. It's actually exponentially bigger than that because we keep doubling it every

86
00:07:27.930 --> 00:07:35.280
time we add a bit. And the IPv6 address space is actually 7.9x10 to the power of

87
00:07:35.280 --> 00:07:39.110
28 times as many addresses as IPv4.

88
00:07:39.120 --> 00:07:46.050
So there is a huge amount of addresses with IPv6, and it was developed in such a way that they should

89
00:07:46.050 --> 00:07:47.720
never run out of addresses again.

90
00:07:50.010 --> 00:07:53.790
But there's also a problem with IPv6,

91
00:07:53.790 --> 00:08:01.410
just like there was a problem with IPv4. The main issue is that there's not a seamless migration

92
00:08:01.410 --> 00:08:04.840
path from IPv4 to IPv6.

93
00:08:04.860 --> 00:08:11.520
So if you're an organization, you've already got your host deployed, and you've got IPv4 addresses

94
00:08:11.520 --> 00:08:15.980
on there, and you've done all of your IPv4 addressing design,

95
00:08:16.020 --> 00:08:17.280
it's not easy.

96
00:08:17.280 --> 00:08:25.100
You can't just flick a switch and convert that to IPv6 because the address format is completely different.

97
00:08:25.170 --> 00:08:30.310
It's not seamlessly backwards compatible with IPv4.

98
00:08:30.620 --> 00:08:37.140
So it's quite a big project to migrate from IPv4 to IPv6

99
00:08:37.140 --> 00:08:45.020
if you're already an existing organization. So because of that, NAT, Network Address Translation was implemented

100
00:08:45.050 --> 00:08:55.320
as a temporary stop gap before everybody could convert to IPv6. And the way it works is an organization

101
00:08:55.320 --> 00:08:57.720
can use those RFC 1918

102
00:08:57.720 --> 00:09:05.010
private IP addresses on their inside network, which are not publicly routable, so they don't work on the

103
00:09:05.010 --> 00:09:10.980
public Internet. But what they can do with those addresses is on the way out, they can convert them to

104
00:09:10.980 --> 00:09:14.730
the public IP address on the outside.

105
00:09:14.790 --> 00:09:20.070
So if you're using a private IP address on the inside, whenever you communicate with anybody out on the public

106
00:09:20.070 --> 00:09:25.620
Internet, when the traffic gets to them, it looks like it's coming from a public IP address,

107
00:09:25.620 --> 00:09:28.780
so they're able to send the traffic back to you.

108
00:09:29.190 --> 00:09:36.900
And many hosts in the inside, so many hosts in the inside using those private IP addresses, can share a few or

109
00:09:36.900 --> 00:09:44.090
even just a single public IP address on the outside. So, let's have a look and see how this works.

110
00:09:44.100 --> 00:09:50.020
You see, we've got Office A on the left, and they've bought a small range of public IP addresses, which is

111
00:09:50.020 --> 00:09:58.660
175.11.0.1/28, which gives them 14 addresses, and they're using the private addresses

112
00:09:58.660 --> 00:10:05.530
on the inside of 192.18.10.0/24, and they've got 200 hosts on the

113
00:10:05.530 --> 00:10:06.330
inside.

114
00:10:06.550 --> 00:10:13.750
Well, they're able to convert or translate those private addresses on the inside to the public addresses

115
00:10:13.750 --> 00:10:18.140
on the outside whenever they communicate with anybody on the Internet.

116
00:10:18.140 --> 00:10:25.100
So if we didn't have private addresses and NAT, they would have required 200 public IP addresses for

117
00:10:25.100 --> 00:10:26.580
those hosts on the inside.

118
00:10:26.650 --> 00:10:29.080
But now, they're doing it with just 14,

119
00:10:29.080 --> 00:10:32.300
and actually, they could have done it with just 1 if they wanted to.

120
00:10:32.320 --> 00:10:40.450
So, they're using private addresses and NAT. This saves loads of addresses in the IPv4 public address

121
00:10:40.450 --> 00:10:41.570
space.

122
00:10:41.640 --> 00:10:46.810
It also saves organizations money as well because they don't need to pay for those public IP addresses.

