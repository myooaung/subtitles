WEBVTT
1
00:00:06.290 --> 00:00:09.310
In the last lecture, you learned about ARP,

2
00:00:09.320 --> 00:00:18.980
the Address Resolution Protocol, and how it's required to allow communication between two hosts over

3
00:00:19.010 --> 00:00:20.950
an Ethernet network.

4
00:00:20.960 --> 00:00:27.080
In the last lecture, you saw how it works when both hosts are on the same IP subnet.

5
00:00:27.080 --> 00:00:32.770
In this lecture, we'll cover how it works when they're on different IP subnets.

6
00:00:32.880 --> 00:00:34.420
So you already knew that

7
00:00:34.420 --> 00:00:38.810
that means that the traffic is going to have to go via a router.

8
00:00:38.810 --> 00:00:44.680
So, we'll work through an example for this. In the example, 172.23.4.1

9
00:00:44.690 --> 00:00:49.900
wants to send a packet to 192.168.10.1,

10
00:00:49.910 --> 00:00:58.310
so that's two different IP subnets. You see the sender over there on the left, the receiver is on the right,

11
00:00:58.500 --> 00:01:07.970
and we've got a router which is going to route traffic between those two subnets. We can't have ARP

12
00:01:07.970 --> 00:01:15.920
working the way it did earlier when both hosts were on the same subnet. If the sender on the left sends

13
00:01:15.920 --> 00:01:23.870
out a normal ARP request for 192.168.10.1, that will go out as a Layer 2

14
00:01:23.870 --> 00:01:30.830
broadcast, and it wouldn't be forwarded by the router. So, the ARP request would never get to the

15
00:01:30.830 --> 00:01:31.510
receiver.

16
00:01:31.550 --> 00:01:34.340
So obviously, that isn't going to work.

17
00:01:34.340 --> 00:01:41.590
Also, we know that when we send traffic between two different IP subnets, it has to be sent via a router.

18
00:01:41.750 --> 00:01:49.880
So, the sender is not going to send an ARP request for 192.168.10.1. It knows

19
00:01:49.880 --> 00:01:57.140
not to do that because it compares its own IP address and subnet mask with the destination IP address,

20
00:01:57.380 --> 00:02:03.560
and it can see that it's on a different IP subnet. The sender knows that it has to send the traffic

21
00:02:03.560 --> 00:02:10.789
via a router, so it doesn't send an ARP request for the final destination. It sends an ARP request for

22
00:02:10.789 --> 00:02:17.600
its default gateway. The sender at 172.23.4.1 will send an ARP request

23
00:02:17.630 --> 00:02:26.030
for 172.23.4.254, which is its default gateway. That comes from

24
00:02:26.060 --> 00:02:34.490
a source MAC of 1111.2222.3333 of the sender. The destination MAC is, as usual, for an ARP request, 

25
00:02:34.730 --> 00:02:35.180
FFFF.FFFF.FFFF,

26
00:02:35.180 --> 00:02:41.770
the Layer 2 broadcast address. And in the ARP request, it says it's a request for

27
00:02:41.770 --> 00:02:49.850
172.23.4.25, asking it for its MAC address. That will hit everything in

28
00:02:49.850 --> 00:02:59.150
the 172.23.4.0 subnet, including the router. The router will see it's an ARP request

29
00:02:59.150 --> 00:03:05.190
for itself, so it will send an ARP reply. That comes from its source MAC of the

30
00:03:05.220 --> 00:03:15.410
172.23.4.254 IP address, which was 4444.5555.6666, and the destination MAC address is 1111.2222.333.

31
00:03:15.470 --> 00:03:24.470
The router knows to send it there because that source MAC was in the original ARP request. The

32
00:03:24.530 --> 00:03:33.070
sender will have been holding the IP packet that's intended for the final destination while it sent out

33
00:03:33.110 --> 00:03:41.060
the original ARP request there. It now knows where to send it to for the destination MAC address, so it

34
00:03:41.060 --> 00:03:48.700
will now send that IP packet. The IP packet will come from a source IP address of the sender,

35
00:03:48.740 --> 00:03:55.940
172.23.4.1. The destination IP address is the IP address of the final destination,

36
00:03:55.940 --> 00:04:04.130
so that will be 192.168.10.1. The source MAC is 1111.2222.3333, and the destination

37
00:04:04.130 --> 00:04:13.380
MAC is for that sender's default gateway, which was 4444.5555.6666. So that packet will hit the router,

38
00:04:13.530 --> 00:04:22.190
and the router sees that it needs to send it to 192.168.10.1. The router does not know the

39
00:04:22.220 --> 00:04:28.700
MAC address of 192.168.10.1 because it hasn't communicated with it before

40
00:04:28.730 --> 00:04:35.960
in our example, so it's not in the ARP cache. So, the router will hold the IP packet from the sender

41
00:04:35.960 --> 00:04:43.680
on the left, and it will send an ARP request for 192.168.10.1. That will go out its

42
00:04:43.760 --> 00:04:51.020
interface on the right, which has got IP address 192.168.10.254, so it's in the

43
00:04:51.020 --> 00:04:56.980
same IP subnet as the final destination. It will say it's an ARP request for

44
00:04:57.040 --> 00:05:04.340
192.168.10.1, it comes from the source MAC of the router's IP address,

45
00:05:04.340 --> 00:05:06.960
192.168.10.254.

46
00:05:07.030 --> 00:05:09.950
That was MAC address 4444.5555.7777,

47
00:05:09.970 --> 00:05:11.380
and it's an ARP request, 

48
00:05:11.440 --> 00:05:18.790
so it goes to a destination MAC of the Layer 2 broadcast, FFFF.FFFF.FFFF. That will hit everything

49
00:05:18.840 --> 00:05:26.400
in the 192.168.10 subnet, including the receiver over on the right. The receiver on

50
00:05:26.400 --> 00:05:26.940
the right

51
00:05:26.950 --> 00:05:35.020
will see it's an ARP request for its IP address of 192.168.10.1, so it will send the ARP

52
00:05:35.080 --> 00:05:43.450
reply. The ARP reply comes from its source MAC of 2222.3333.4444, and it goes to the destination MAC of the

53
00:05:43.470 --> 00:05:48.450
router's interface on the right hand side there, which was 4444.5555.7777.

54
00:05:48.490 --> 00:05:53.060
The router now knows the MAC address of the final destination on the right, 

55
00:05:53.140 --> 00:06:01.600
so it will send the IP packet. The IP information in the packet never changes. The source IP address is

56
00:06:01.630 --> 00:06:07.320
always the original sender, which is 172.23.4.1

57
00:06:07.330 --> 00:06:13.870
in our example, and the destination IP is always the final destination address, which was

58
00:06:13.870 --> 00:06:16.400
192.168.10.1.

59
00:06:16.450 --> 00:06:23.590
The source MAC is the router's interface on the right hand side, which was 4444.5555.7777, and the destination

60
00:06:23.590 --> 00:06:31.280
MAC is 2222.3333.4444. So, you may be noticed, let's go back a slide in the example,

61
00:06:31.300 --> 00:06:36.300
like I said, the source and the destination IP address never change end to end,

62
00:06:36.580 --> 00:06:43.060
but the MAC address source and destination will change physical hop by physical hop.

63
00:06:43.060 --> 00:06:46.880
We'll have another look at that in more detail in the next lecture as well.

64
00:06:47.650 --> 00:06:51.890
Okay, so that is how ARP works for routed traffic.

65
00:06:51.970 --> 00:06:59.680
If you want to view the ARP cache on a Cisco router, the command is simply 'show arp', and to clear the

66
00:06:59.680 --> 00:07:02.620
ARP cache, it's 'clear arp-cache'.

67
00:07:02.680 --> 00:07:05.830
Let's have a look at that now in the lab.

68
00:07:05.830 --> 00:07:11.710
This is a continuation of the last lab where we covered DNS

69
00:07:12.070 --> 00:07:18.100
and where we had our R1 at 10.10.10.1, R2

70
00:07:18.100 --> 00:07:21.670
is at 10.10.10.2, and R3 

71
00:07:21.670 --> 00:07:25.460
is at 10.10.20.1.

72
00:07:25.620 --> 00:07:34.960
So if I jump onto R1 here, and I'll do a 'show arp', it's already done pings to R1 and

73
00:07:34.960 --> 00:07:36.020
R2.

74
00:07:36.270 --> 00:07:43.000
And let me just make this full screen and do it again to make it show up a bit more cleanly. You

75
00:07:43.000 --> 00:07:52.360
can see that it's got entries in here for 10.10.10.1, where you can see the MAC address,

76
00:07:52.480 --> 00:08:01.360
and its reachable interface FastEthernet0/0, and also 10.10.10.2, the MAC

77
00:08:01.360 --> 00:08:11.380
address there, and the interface it's reachable out of. We could also have a look at R3 as well,

78
00:08:11.920 --> 00:08:24.790
so let me just bring that back up again. And if I go onto R3 and do a 'show arp' on here, I need

79
00:08:24.790 --> 00:08:33.370
to go to enable prompt first, so let's say 'end', and then 'show arp', and R3 is in the 10.10.10.20 subnet.

80
00:08:33.490 --> 00:08:34.570
So on there,

81
00:08:34.570 --> 00:08:40.120
let me just make this full screen again just so you can see a bit more cleanly. You can see it's got entries

82
00:08:40.120 --> 00:08:47.090
for 10.10.20.1 and 10.10.20.2. So, that's how you see the ARP table on a

83
00:08:47.140 --> 00:08:54.100
Cisco router. It's very simple, just a 'show arp', that will show you the known IP address, the MAC address,

84
00:08:54.160 --> 00:08:56.890
and the interface that it is reachable on.

