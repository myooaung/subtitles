WEBVTT
1
00:00:06.300 --> 00:00:12.660
In this lecture, you'll learn about the IP address classes. We're going to cover

2
00:00:12.660 --> 00:00:21.270
classes A, B, and C here, which are used for allocating addresses to our hosts, and then in the next lecture,

3
00:00:21.270 --> 00:00:31.590
we'll cover classes D and E. The first thing to talk about is the effect that that line has, which designates

4
00:00:31.590 --> 00:00:36.930
where the network portion of the address is and the host portion of the address.

5
00:00:37.450 --> 00:00:44.670
If the subnet mask is a /8, for example, using the first 8 bits for the network portion of the address.

6
00:00:45.000 --> 00:00:50.520
8 bits for the network portion, 24 bits for the host portion.

7
00:00:50.520 --> 00:00:57.840
If we compare that with a /24, we're going to have 24 bits for the network portion and only 8 bits

8
00:00:57.840 --> 00:01:00.140
for the host portion.

9
00:01:00.540 --> 00:01:02.410
So, we could have a /8,

10
00:01:02.440 --> 00:01:08.520
it's going to have not many networks but a lot of hosts per network, or a /24,

11
00:01:08.520 --> 00:01:11.940
we'd have a lot of networks but not many hosts per network.

12
00:01:12.240 --> 00:01:17.880
So we've got a trade-off whenever we decide where that line is going to be, about how many networks we're

13
00:01:17.880 --> 00:01:20.390
going to have, and how many hosts we're going to have.

14
00:01:22.270 --> 00:01:32.500
Let's talk about how Internet addressing was originally supposed to work. Because when IPv4 was

15
00:01:32.500 --> 00:01:39.120
first conceived, the designers didn't know about what was going to happen with the Internet.

16
00:01:39.130 --> 00:01:45.590
They didn't realize that there would be a huge explosion of usage, and everybody would be using it,

17
00:01:45.710 --> 00:01:48.280
and that everybody would require an IP address.

18
00:01:48.490 --> 00:01:53.860
So when they first designed it, they designed it for what was right

19
00:01:53.860 --> 00:02:01.540
at that time. And as we go through this section, you need to think about the Internet about how it was

20
00:02:01.540 --> 00:02:07.160
then to understand why IPv4 was designed the way that it is.

21
00:02:07.180 --> 00:02:12.310
There's a few issues with IPv4 that you'll learn about as we're going through this section,

22
00:02:12.310 --> 00:02:18.600
and those issues came about because the designers didn't realize what was going to happen in future.

23
00:02:18.670 --> 00:02:23.970
So as long as you think about it from that point of view, then everything should make sense.

24
00:02:24.510 --> 00:02:31.300
The original way that IPv4 addressing was meant to work, when a company wanted to communicate

25
00:02:31.300 --> 00:02:32.410
on the Internet,

26
00:02:32.410 --> 00:02:39.810
they would apply for a range of IP addresses. The global assignment of IP addresses is handled by IANA.

27
00:02:39.980 --> 00:02:46.240
That stands for the Internet Assigned Numbers Authority. So they are up at the top level, looking at it

28
00:02:46.240 --> 00:02:47.920
from a global point of view.

29
00:02:47.950 --> 00:02:54.340
They assign large blocks of addresses to the local authorities in different regions. So a company,

30
00:02:54.370 --> 00:03:02.380
they would apply to their local authority to get a range of public IP addresses. If they had 6000 hosts,

31
00:03:02.380 --> 00:03:03.380
for example,

32
00:03:03.490 --> 00:03:09.160
they would ask for a range of IP addresses big enough to cover that, plus some room for growth in the

33
00:03:09.160 --> 00:03:10.430
future as well.

34
00:03:10.570 --> 00:03:15.360
That company would then allocate those addresses to their hosts in their different offices.

35
00:03:17.170 --> 00:03:23.570
Unfortunately, when IPv4 was created, the designers didn't realize how big the Internet was going

36
00:03:23.570 --> 00:03:24.090
to get

37
00:03:24.090 --> 00:03:29.230
like we were just saying. So, they didn't create a big enough address space.

38
00:03:29.260 --> 00:03:35.930
There's not enough IPv4 addresses for every host that actually needs an IPv4 address

39
00:03:35.980 --> 00:03:44.590
that's going to be communicating on the Internet. So, IPv4 ran out of addresses. The long term solution

40
00:03:44.650 --> 00:03:52.770
for the problem is IPv6, which has got a much bigger address space. IPv4 is a 32 bit address.

41
00:03:52.900 --> 00:03:59.140
IPv6 is 128 bit address. We're going to be talking about IPv6 in a lot

42
00:03:59.140 --> 00:04:02.040
of detail in a later section.

43
00:04:02.380 --> 00:04:09.310
Private IP addresses with NAT, which is Network Address Translation, are, however, currently deployed in

44
00:04:09.310 --> 00:04:13.480
the majority of enterprise networks as a workaround.

45
00:04:13.790 --> 00:04:16.980
So IPv6 is the long term solution,

46
00:04:17.110 --> 00:04:24.280
but today, private addresses with NAT is actually more commonly deployed. But as time goes on, there will

47
00:04:24.280 --> 00:04:26.450
be more uptake of IPv6.

48
00:04:26.590 --> 00:04:34.000
Again, we're going to discuss private addresses, NAT, and IPv6 in a lot more detail as we go through

49
00:04:34.000 --> 00:04:35.090
the course.

50
00:04:35.620 --> 00:04:43.240
But as I was saying, to understand the next few lectures, don't think about private addressing, NAT,

51
00:04:43.240 --> 00:04:46.180
and IPv6 yet. We're going to get to there later.

52
00:04:46.270 --> 00:04:52.630
To understand why we have those and how they work, you need to understand the original implementation

53
00:04:52.630 --> 00:04:53.260
first,

54
00:04:53.350 --> 00:04:56.240
so that's what we're going to cover first.

55
00:04:56.240 --> 00:05:04.150
So, Class A addresses. The Internet authorities split the global IPv4 address space into separate

56
00:05:04.150 --> 00:05:05.410
classes.

57
00:05:05.410 --> 00:05:10.810
Class A addresses are assigned to networks with a very large number of hosts,

58
00:05:10.840 --> 00:05:15.490
so Class A, there's going to be a small network portion and a large host portion.

59
00:05:15.550 --> 00:05:22.310
The high-order bit, which is the first bit, in a Class A address is always set to 0.

60
00:05:22.400 --> 00:05:26.750
If you look down on the bottom left, the address there, you see I've highlighted the first bit.

61
00:05:26.770 --> 00:05:34.750
It's always going to be a 0 in a Class A address. With Class A addresses, the default subnet mask is

62
00:05:34.750 --> 00:05:46.000
a /8, so 255.0.0.0, and valid network addresses range from 1.0.0.0 to 126.0.0.0/8.

63
00:05:46.060 --> 00:05:53.770
So ,that's the network address. The actual host address ranges from 1.0.0.0

64
00:05:53.770 --> 00:06:04.840
to 126.255.255.254. So 1 to 126, that allows for 126 networks, and if you counted

65
00:06:04.840 --> 00:06:13.420
up the host bits, 24 to the power of 2, adds up to 16,777,214

66
00:06:13.420 --> 00:06:15.850
hosts per network.

67
00:06:17.580 --> 00:06:23.850
Now, you may be noticed there, if you actually counted this up, the available values if you set the first

68
00:06:23.850 --> 00:06:30.720
bit as 0, we could have all 0s, and we could go up to 127. But all 0s

69
00:06:30.720 --> 00:06:38.370
and 127 are not in the valid address range that we can assign to our hosts because they are reserved

70
00:06:38.400 --> 00:06:48.330
addresses. 0.0.0.0/8 is reserved and signifies 'this network', and it's used by some protocols.

71
00:06:48.390 --> 00:06:58.800
So, 0.0.0.1 to 0.255.255.255 are not valid addresses that you can assign to hosts. That entire range is

72
00:06:58.800 --> 00:07:08.010
not available. Also, 127.0.0.0/8, which is also in the Class A space, is also reserved.

73
00:07:08.010 --> 00:07:15.480
That is used as the loopback address, and it's used for testing the IP stack on the local computer.

74
00:07:15.480 --> 00:07:25.320
So, 127.0.0.1 to 127.255.255.255 are not valid host addresses. You see, I've written down at the

75
00:07:25.320 --> 00:07:32.130
bottom here, whoops! They just wiped out over 33 million addresses that could have been used for

76
00:07:32.190 --> 00:07:37.500
addressing actual hosts on the public Internet. If you think about it, 'this network', they could have

77
00:07:37.500 --> 00:07:43.230
just used a single address for that. One address rather than 16 million addresses. And the same for the

78
00:07:43.230 --> 00:07:49.830
loopback, we didn't really need 16 million addresses to be used for loopback testing, and if you're thinking,

79
00:07:49.890 --> 00:07:55.770
"Well, there's this huge shortage of addresses on the Internet, why would they do something crazy like that?"

80
00:07:56.190 --> 00:08:03.330
The reason is, when IPv4 was designed, they didn't realize that they were going to run out of addresses,

81
00:08:03.600 --> 00:08:09.000
so they thought, "Hey, it's no problem, we can assign 16 million addresses for testing, it doesn't

82
00:08:09.000 --> 00:08:14.040
matter, because we don't have a shortage of addresses." They didn't realize what was going to happen later

83
00:08:14.040 --> 00:08:21.180
on. Let me give you a demo of using the loopback, so let me open up a command prompt here on my

84
00:08:21.180 --> 00:08:29.730
laptop, and if I did an 'ipconfig', again, I've got loads of virtual adapters on here. But if I scroll up

85
00:08:29.730 --> 00:08:38.460
slowly, you'll see I don't have the IP address 127.0.0.1 assigned to any of my network cards

86
00:08:38.460 --> 00:08:48.120
in here. It's built-in with IP, so I can ping 127.0.0.1, which is the loopback address, and you see

87
00:08:48.120 --> 00:08:56.040
I'm getting a reply which means it's up. The reason you do this is to test that TCP/IP is working on the

88
00:08:56.040 --> 00:09:03.780
local machine. If you wanted to check, say that you're in New York, and you want to check that you've got

89
00:09:03.780 --> 00:09:10.320
connectivity to a server in Boston, you could ping that server. There's not much point in pinging a

90
00:09:10.320 --> 00:09:16.530
server in Boston if you can't get to your local default gateway router in New York, so you would

91
00:09:16.530 --> 00:09:23.010
ping that first. And also, there's not much point in pinging the local router if TCP/IP isn't even working

92
00:09:23.010 --> 00:09:24.080
on your laptop.

93
00:09:24.150 --> 00:09:30.480
So the way that you verify that TCP is up and running on your laptop is by pinging the loopback, and we

94
00:09:30.480 --> 00:09:33.610
can ping 127.0.0.1.

95
00:09:33.660 --> 00:09:40.800
But, like I was saying, it's the entire Class A range beginning with 127 that is actually reserved for

96
00:09:40.980 --> 00:09:42.250
testing loopback.

97
00:09:42.360 --> 00:09:50.580
So I don't have to ping 127.0.0.1, I could ping 127.100.200.50,

98
00:09:50.580 --> 00:09:51.680
and this is going to work as well.

99
00:09:51.720 --> 00:09:58.980
I can ping anything beginning with 127, and it's going to check the local TCP/IP stack.

100
00:09:58.980 --> 00:10:00.790
So it's good to have an address for testing,

101
00:10:00.810 --> 00:10:03.920
not so good that they took out an entire Class A network for it.

102
00:10:04.470 --> 00:10:13.590
Okay, so you see that all 0s would begin with 0, obviously, and 127 is 0 and then all 1s. Class A always

103
00:10:13.590 --> 00:10:17.950
begins with a 0 as the first bit.

104
00:10:18.200 --> 00:10:27.050
Now, obviously, a company that had a Class A address would not put all 16 million hosts into a single logical

105
00:10:27.110 --> 00:10:27.890
network.

106
00:10:28.040 --> 00:10:31.640
That would be terrible for performance and security.

107
00:10:31.880 --> 00:10:40.730
They would split that big /8 range up into smaller subnets and assign those to their different departments

108
00:10:40.790 --> 00:10:43.070
in their different offices.

109
00:10:43.100 --> 00:10:49.760
For example, if they received a Class A address 15.0.0.0/8, they could allocate the subnet

110
00:10:49.820 --> 00:10:50.350
15.0.1.0/24

111
00:10:50.370 --> 00:10:58.770
to sales computers in New York. 15.0.2.0 255.255.255.0

112
00:10:58.800 --> 00:11:07.210
to accounting, that was just the same /24 in dotted decimal notation, and 15.0.9.0/24

113
00:11:07.220 --> 00:11:11.250
to sales computers in Boston. So, they would have that huge network that

114
00:11:11.260 --> 00:11:17.110
they got assigned by the Internet authorities, and they would split up into smaller subnets that

115
00:11:17.120 --> 00:11:22.190
they could assign to their different offices and their different types of hosts in different offices.

116
00:11:22.190 --> 00:11:29.480
And when you do that, it's called subnetting. You're going to master subnetting in a later lecture because

117
00:11:29.600 --> 00:11:30.890
it's super important.

