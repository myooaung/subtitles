WEBVTT
1
00:00:06.040 --> 00:00:15.100
At the end of this lecture, you're going to understand how we can implement subnetting.

2
00:00:15.260 --> 00:00:21.530
Now, I'm actually going to cover subnetting over a few lectures in this section.

3
00:00:21.660 --> 00:00:32.009
Subnetting is a really important topic, not just for passing the CCNA exam but for networking in general.

4
00:00:32.009 --> 00:00:39.360
It's really one of the core knowledge areas that you need to understand if you're going to work in networking.

5
00:00:39.360 --> 00:00:45.450
So if you need it, take a quick break before you watch this lecture, then get yourself a cup of coffee,

6
00:00:45.540 --> 00:00:49.710
and come back, and we're going to dive deep into networking.

7
00:00:50.270 --> 00:00:50.790
Oh, yeah,

8
00:00:50.790 --> 00:00:59.170
to understand this lecture, you need to think about it from the context of the originally intended IPv4

9
00:00:59.170 --> 00:01:00.410
design,

10
00:01:00.420 --> 00:01:07.800
just like we did in the previous few lectures there, where all hosts which can communicate on the Internet

11
00:01:08.070 --> 00:01:10.630
have a public IP address.

12
00:01:10.680 --> 00:01:17.000
Now, if you're already working in a company where you've already got exposure to working on the network,

13
00:01:17.000 --> 00:01:24.660
the chances are your company is using private IP addresses. As we go through these lectures,

14
00:01:24.660 --> 00:01:27.860
do not think about it from that point of view.

15
00:01:27.880 --> 00:01:35.930
Okay, we're going to get into private IP addresses later, and I'll also explain how modern day networks work.

16
00:01:36.000 --> 00:01:43.660
But before we get there, you need to understand how IPv4 worked in the first place.

17
00:01:43.670 --> 00:01:45.670
It's a natural progression.

18
00:01:45.750 --> 00:01:51.900
Understand this first, and then you'll be able to understand why we use private addresses on our networks

19
00:01:51.960 --> 00:01:53.610
and how they work as well.

20
00:01:53.650 --> 00:01:59.610
Again, so just bear with me, and think about it from the point of view of how the Internet worked 10

21
00:01:59.610 --> 00:02:06.110
or 15 years ago before we were running out of addresses and before everybody was using private addresses.

22
00:02:06.110 --> 00:02:12.180
Well, I say that, by the way, the majority of companies are using private addresses, but there are

23
00:02:12.180 --> 00:02:15.180
a few out there that are using public addresses everywhere.

24
00:02:15.180 --> 00:02:16.340
That is pretty rare, though.

25
00:02:17.160 --> 00:02:17.650
Okay,

26
00:02:17.760 --> 00:02:24.630
so for our example, let's say that we're a network designer for a small business with four departments

27
00:02:24.660 --> 00:02:31.030
that are spread over two offices, and we want to manage our own public address space.

28
00:02:31.050 --> 00:02:38.250
So what we could do is we could buy four separate Class C networks for that,

29
00:02:38.400 --> 00:02:42.120
but the problem is public IP addresses cost money.

30
00:02:42.150 --> 00:02:48.390
So rather than doing that, rather than buying separate networks from the Internet authorities, we could

31
00:02:48.390 --> 00:02:53.980
purchase a single range and subnet into smaller portions.

32
00:02:54.020 --> 00:03:00.420
Let's say we've only got a handful of hosts in each of those departments. Rather than buying 256 addresses

33
00:03:00.420 --> 00:03:01.140
for each,

34
00:03:01.200 --> 00:03:08.580
we can buy a single class C range, and then we can divide that network up into smaller networks and assign

35
00:03:08.580 --> 00:03:10.950
it to the different parts of our networks.

36
00:03:10.950 --> 00:03:19.760
So in an example, let's say we've got that Class C range, and it is 200.15.10.0/24,

37
00:03:19.800 --> 00:03:27.300
the default Class C subnet mask. So to do our subnetting, to divide that network into smaller subnets,

38
00:03:27.360 --> 00:03:34.470
we need to borrow some host bits and add them to the network portion of the address.

39
00:03:34.710 --> 00:03:41.010
So, we're going to move the line that separates the network portion of the address and the host portion

40
00:03:41.010 --> 00:03:42.830
further over to the right.

41
00:03:42.840 --> 00:03:49.020
We're going to take some of our host addresses away and give them to the network portion of the address.

42
00:03:49.320 --> 00:03:51.450
When we do subnetting,

43
00:03:51.510 --> 00:03:58.410
the line always moves to the right, and the further to the right we go, the more subnets that we're

44
00:03:58.410 --> 00:04:00.570
going to have, but the less

45
00:04:00.570 --> 00:04:09.060
the amount of hosts that we'll have on each subnet. To calculate the number of available subnets that we're

46
00:04:09.060 --> 00:04:11.580
going to get by moving the line to the right,

47
00:04:11.670 --> 00:04:16.940
we use a formula of 2 to the power of subnet bits.

48
00:04:16.990 --> 00:04:23.070
Now, the first time I saw this, I thought, "Oh, I don't know how to do to the power of, never really covered

49
00:04:23.170 --> 00:04:29.000
that in school much!" Don't worry. It's super simple, as you'll see as we go through these next few lectures.

50
00:04:29.160 --> 00:04:37.460
If a Class C network uses a /28 subnet mask, then we've borrowed 4 bits from the default of /24.

51
00:04:37.500 --> 00:04:40.430
A normal Class C mask is a /24.

52
00:04:40.440 --> 00:04:42.450
If we change that to a /28,

53
00:04:42.720 --> 00:04:49.560
the difference between 24 and 28 is 4. The way we calculate how many subnets we're going to get

54
00:04:49.560 --> 00:04:58.090
by doing that is it's 2 to the power of the amount of subnet bits that we've borrowed.

55
00:04:58.110 --> 00:05:03.510
So, we borrowed 4 bits for the network portion from the host portion. To see how many networks we're

56
00:05:03.510 --> 00:05:03.870
going to get,

57
00:05:03.900 --> 00:05:07.260
it's 2 to the power of 4. To calculate this,

58
00:05:07.260 --> 00:05:11.190
it's dead easy. You can do it on your fingers, you start off with 2, and you just double.

59
00:05:11.190 --> 00:05:15.030
So I go 2, 4, 8, 16.

60
00:05:15.060 --> 00:05:19.190
I'm going to now have 16 available subnets.

61
00:05:19.350 --> 00:05:26.180
Another example, if a Class B network uses the same /28 subnet mask. Well, the default for a Class B

62
00:05:26.190 --> 00:05:28.260
is /16.

63
00:05:28.350 --> 00:05:34.890
So if we subnet that to a /28, we've borrowed 12 bits. To see how many subnets we're

64
00:05:34.890 --> 00:05:39.470
going to get, it is going to be 2 to the power of 12.

65
00:05:39.550 --> 00:05:55.770
So let's do this one, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096

66
00:05:55.770 --> 00:06:01.980
subnets. For that one, you might have noticed it's easy if you remember that 2 to the power of 10

67
00:06:01.980 --> 00:06:03.920
is 1024.

68
00:06:04.160 --> 00:06:05.950
We just keep doubling each time.

69
00:06:06.270 --> 00:06:11.880
And remember that hosts on different subnets need to go via a router if they want to communicate

70
00:06:11.940 --> 00:06:12.660
with each other.

71
00:06:12.720 --> 00:06:17.510
That's the whole point of having our IP addressing and doing subnetting.

72
00:06:17.550 --> 00:06:23.940
It's to divide our network up into different logical parts of the network. And it's the routers that

73
00:06:23.940 --> 00:06:30.810
are the devices that know how to get everywhere, and it can direct the traffic.

74
00:06:30.960 --> 00:06:35.100
So that was how to calculate the number of subnets we're going to get.

75
00:06:35.220 --> 00:06:41.400
It's 2 to the power of how many bits we borrowed. To calculate the number of hosts,

76
00:06:41.460 --> 00:06:46.800
it's 2 to the power of how many host bits there are minus 2.

77
00:06:46.890 --> 00:06:52.110
We need to subtract 2 because we've got the network address and the broadcast address that can not

78
00:06:52.110 --> 00:06:53.360
be assigned to hosts.

79
00:06:53.400 --> 00:06:54.710
That's the 2 that we take away.

80
00:06:55.350 --> 00:07:02.250
So if a Class C network uses a /28 subnet mask, then we've got 4 bits left for hosts.

81
00:07:02.290 --> 00:07:03.950
There's 32 bits in the address.

82
00:07:04.050 --> 00:07:10.050
If we're using 28 for the network portion, that leaves 4 for the host portion. 2 to the

83
00:07:10.050 --> 00:07:17.470
power of 4 is 2, 4, 8, 16 minus 2 for the network address and the broadcast address,

84
00:07:17.520 --> 00:07:21.620
that means that we would have 14 available addresses for our hosts.

85
00:07:22.260 --> 00:07:28.830
If we've got a Class B network, and it's using a /28, again, we've got 4 bits left for our hosts.

86
00:07:29.100 --> 00:07:33.220
So 2, 4, 8, 16 minus 2 is 14.

87
00:07:33.270 --> 00:07:36.200
It's exactly the same.

88
00:07:36.210 --> 00:07:41.700
So notice that the amount of hosts we're going to get is going to be dependent on the subnet size, and it's

89
00:07:41.700 --> 00:07:47.910
going to be the subnet mask's size, it's going to be the same whether it's Class A, Class B, or Class C. But the

90
00:07:47.910 --> 00:07:54.150
amount of subnets we'll get, if I go back and slide, it's going to be different for Class A, B, or C because

91
00:07:54.150 --> 00:08:00.450
we've got different default subnet mask sizes. For example, if we use a /28 with

92
00:08:00.450 --> 00:08:08.100
a Class B, then we're going to have 4096 available subnets. If we use a /28

93
00:08:08.160 --> 00:08:14.550
with a Class C, we're going to have 16 available subnets. There's a difference there, but for the hosts,

94
00:08:14.580 --> 00:08:21.380
it's always going to be the same. A quick note on 'ip subnet-zero' command.

95
00:08:21.410 --> 00:08:27.720
Just like we have to subtract 2 to get the number of valid hosts, back in the day,

96
00:08:27.830 --> 00:08:32.770
we used to also have to subtract 2 from the number of available networks.

97
00:08:32.780 --> 00:08:39.429
This is because, in the original Internet standards, it wasn't allowed to use network bits of all 0's

98
00:08:39.429 --> 00:08:44.810
or all 1's, just like we can't use host bits of all 0's or all 1's.

99
00:08:44.810 --> 00:08:51.950
So, that took away two of our available subnets. However, there wasn't really any practical need for that,

100
00:08:52.420 --> 00:08:53.870
and it wasted address space.

101
00:08:53.920 --> 00:08:57.980
There is a practical need with the host bits because we've got that network address and the broadcast

102
00:08:57.980 --> 00:08:59.580
address that are actually used.

103
00:08:59.710 --> 00:09:05.130
But as far as the number of subnets goes, we were taking away 2, not really for any good reason.

104
00:09:05.770 --> 00:09:14.060
So on Cisco routers now, for quite a long time, there's a default command of 'ip subnet-zero', which disables

105
00:09:14.120 --> 00:09:15.190
that behavior.

106
00:09:15.200 --> 00:09:17.180
The command is enabled by default,

107
00:09:17.180 --> 00:09:22.850
so those two extra network addresses are available in Cisco networks.

108
00:09:22.850 --> 00:09:27.410
It's important that I tell you this because you might look up something on the Internet.

109
00:09:27.410 --> 00:09:34.350
You might look up a subnet calculator there, and it will tell you that there are 14 networks available

110
00:09:34.360 --> 00:09:36.320
on a Class C with a /28,

111
00:09:36.350 --> 00:09:43.910
for example, when I'm telling you that there's 16. With Cisco networks and for the CCNA exam, do not

112
00:09:43.910 --> 00:09:47.540
take 2 away from the number of available subnets.

113
00:09:47.630 --> 00:09:48.550
Okay, and I want to tell you that

114
00:09:48.580 --> 00:09:52.150
just so you don't get confused if you're looking up anything on the Internet.

