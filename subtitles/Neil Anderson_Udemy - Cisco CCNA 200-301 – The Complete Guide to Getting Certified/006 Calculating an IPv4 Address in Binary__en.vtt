WEBVTT
1
00:00:07.610 --> 00:00:15.310
Each octet in the IP address has a value ranging from 0 to 255.

2
00:00:15.320 --> 00:00:17.000
Let's see how we get that.

3
00:00:17.240 --> 00:00:19.270
So, it's an octet, there's 8 bits there.

4
00:00:19.490 --> 00:00:20.590
Let's count them out.

5
00:00:20.850 --> 00:00:26.330
So 1, 2, 3, 4, 5, 6, 7, 8 bits,

6
00:00:26.620 --> 00:00:27.950
and it's binary,

7
00:00:27.950 --> 00:00:36.300
so the rightmost digit, the rightmost bit, is going to be either a 0 or a 1. And then, we're going to

8
00:00:36.350 --> 00:00:39.340
double each time we add a bit to the left.

9
00:00:39.350 --> 00:00:46.290
So it goes 1, 2, 4, 8, 16, 32, 64, and 128.

10
00:00:46.340 --> 00:00:54.410
It's binary so we multiply it by 2, we double each time we go up, and the values are going to range

11
00:00:54.410 --> 00:00:59.080
from 0 to 255 for each octet in our IP address.

12
00:00:59.300 --> 00:01:04.580
If we put a 0 in on all of those bits, obviously, all 0 adds up to 0.

13
00:01:04.970 --> 00:01:11.810
If we put a 1 in on each of the bits, if you add these up 128 plus 64 equals 192,

14
00:01:11.810 --> 00:01:19.620
192 plus 32 equals 224, 224 plus 16 equals 240,

15
00:01:19.620 --> 00:01:28.000
240 plus 8 is 248, 248 plus 4 is 252,

16
00:01:28.000 --> 00:01:36.390
252 plus 2 is 254, and 254 plus 1 is 255.

17
00:01:36.450 --> 00:01:41.630
Now, if you're wondering how I was able to add those up so quickly, and it didn't even look like I was

18
00:01:41.630 --> 00:01:42.590
thinking about it,

19
00:01:42.620 --> 00:01:43.720
yeah, that's right.

20
00:01:43.820 --> 00:01:49.490
When you get more experienced with networking, this is going to be second nature to you.

21
00:01:49.520 --> 00:01:54.380
IP addressing is really core to everything that you're going to be doing,

22
00:01:54.410 --> 00:01:58.670
so you're going to know IP addressing and its format like the back of your hand,

23
00:01:58.700 --> 00:02:00.200
just like I just showed you there.

24
00:02:00.690 --> 00:02:01.030
Okay,

25
00:02:01.100 --> 00:02:07.190
so that's how we can get the values from 0 to 255. On each of those octets,

26
00:02:07.240 --> 00:02:13.250
the bit pattern in here on each of those different bits can be any combination that you want of 1s and 0s.

27
00:02:13.250 --> 00:02:13.880
It

28
00:02:14.090 --> 00:02:20.470
goes from 0, at the lowest value, up to 255, at the highest value.

29
00:02:20.920 --> 00:02:28.300
The example IP address I gave you earlier was 192.168.10.15, that's in dotted decimal

30
00:02:28.300 --> 00:02:38.080
notation. Let's convert that to binary. So the way that you do this is get a piece of paper and

31
00:02:38.080 --> 00:02:45.660
a pencil and write down what you see here on the slide. So starting from right and go to the left,

32
00:02:45.700 --> 00:02:55.650
write out 1, 2, 4, 8, 16, 32, 64, and 128. And then, to figure out what your IP address is in binary,

33
00:02:55.660 --> 00:02:59.880
start off with the first octet is 192.

34
00:02:59.920 --> 00:03:04.810
So, we'll do that. The first thing to do is you start going from left to right.

35
00:03:04.810 --> 00:03:08.280
When you write it out, it's easiest to write it from right to left,

36
00:03:08.380 --> 00:03:11.900
but when you're figuring things out, we go from left to right.

37
00:03:12.250 --> 00:03:19.940
The first thing to ask is, can 128 go into 192,

38
00:03:20.080 --> 00:03:24.420
or is 128 equal to or less than 192?

39
00:03:24.520 --> 00:03:25.780
Yes, it is.

40
00:03:25.780 --> 00:03:33.730
So if that's the case, we put a 1 under the 128. Then, what we do is we see what we've got left.

41
00:03:33.730 --> 00:03:38.440
Well, 192 minus 128 is 64,

42
00:03:38.500 --> 00:03:40.330
so we've got 64 left.

43
00:03:40.330 --> 00:03:45.570
We then go to the next column and see, does 64 go into 64?

44
00:03:45.730 --> 00:03:46.630
Yes, it does,

45
00:03:46.630 --> 00:03:49.060
so we put another 1 in there.

46
00:03:49.060 --> 00:03:52.880
We then take the 64 away, and we're left with 0.

47
00:03:53.020 --> 00:03:56.040
Then, does 32 go into 0?

48
00:03:56.050 --> 00:03:56.860
Obviously, not.

49
00:03:56.860 --> 00:04:02.020
It doesn't go, so we put a 0 there, and it's pretty obvious, we've got 0 left,

50
00:04:02.030 --> 00:04:05.570
so we're going to have 0 on all of the rest of the columns.

51
00:04:05.680 --> 00:04:17.070
So, 192, if we were going to write that in binary, it is 11000000. And then,

52
00:04:17.079 --> 00:04:20.290
to do a final check to check that we got this right,

53
00:04:20.290 --> 00:04:27.670
add these digits together. Add 128 plus 64, when we add them together, it comes up to 192, which is

54
00:04:27.670 --> 00:04:28.900
the value we wanted,

55
00:04:28.990 --> 00:04:31.580
so we know that we got that right.

56
00:04:31.660 --> 00:04:36.580
When you're working this out, if you ever get anything that does not end with a 0 value, you know

57
00:04:36.580 --> 00:04:39.340
you've made a mistake, so go back and try it again.

58
00:04:39.490 --> 00:04:41.340
Okay, so that was our first octet.

59
00:04:41.440 --> 00:04:51.190
Let's do this same process again for the second octet of 168. So, does 128 go into 168? Yes, it does,

60
00:04:51.190 --> 00:04:59.260
so we'll put a 1 in there. And then, the difference between 168 and 128 is 40. We've got 40 left.

61
00:04:59.620 --> 00:05:03.700
Does 64 go into 40? No, it doesn't,

62
00:05:03.730 --> 00:05:09.810
so we put a 0 in that column. Then, does 32 go into 40? Yes, it does,

63
00:05:09.820 --> 00:05:18.480
so we put a 1 in there. And then, 40 minus 32 gives us 8 left. 16 does not go into 8,

64
00:05:18.520 --> 00:05:22.440
so we'll put a 0 in there. 8 does go into 8,

65
00:05:22.450 --> 00:05:28.960
so we put a 1 in, and 8 minus 8 gives us 0 left, so we know we can just fill in the rest of

66
00:05:28.960 --> 00:05:42.000
the columns with a 0. 168 in binary is 10101000, and our final check, add the numbers together.

67
00:05:42.040 --> 00:05:47.980
128 plus 32 plus 8 does equal 168,

68
00:05:47.980 --> 00:05:49.750
so we got that one right as well.

69
00:05:51.570 --> 00:05:59.550
The first half of our IP address in dotted decimal is 192.168. In binary, it's 11000000.

70
00:05:59.550 --> 00:06:08.710
10101000, so hopefully, you followed along with that.

71
00:06:08.740 --> 00:06:14.850
Okay, what I want you to do now is to stop the video and work out

72
00:06:14.840 --> 00:06:25.060
the last two octets yourself. So convert 10.15 into binary, and when you've done this,

73
00:06:25.090 --> 00:06:34.840
I want you to give me the entire IP address in binary notation. So, what your output will be is

74
00:06:34.870 --> 00:06:43.100
11000000.10101000. and then the next octet in binary,

75
00:06:43.120 --> 00:06:44.230
and then another dot '.',

76
00:06:44.260 --> 00:06:52.970
and then the final octet in binary. So go ahead, stop the video now, and we'll check your answer in a second.

77
00:06:55.300 --> 00:06:55.750
Okay,

78
00:06:55.800 --> 00:06:59.250
so hopefully, this is the answer that you

79
00:06:59.640 --> 00:07:00.390
got,

80
00:07:00.390 --> 00:07:02.820
192.168.10.15,

81
00:07:02.820 --> 00:07:12.310
so the first octet was 11000000, 128 plus 64 equals 192.

82
00:07:12.420 --> 00:07:22.820
The next octet of 168 was 10101000, 128 plus 32 plus 8 equals 168.

83
00:07:22.830 --> 00:07:32.330
In the next octet, you should have got 00001010, 8 plus 2 equals 10,

84
00:07:32.640 --> 00:07:42.690
and then the last octet of 15, you should have got 00001111, 8 plus 4 plus 2 plus 1

85
00:07:42.690 --> 00:07:43.590
equals 15.

86
00:07:43.610 --> 00:07:47.620
If you look at the top of the slide here, that should have been your final output.

87
00:07:47.640 --> 00:07:51.750
That is the complete IP address in binary.

88
00:07:51.810 --> 00:07:58.950
Hopefully, you find that really simple. With just a tiny bit of practice, you will be able to do this without

89
00:07:58.950 --> 00:08:03.190
hardly even really thinking about it. Okay,

90
00:08:03.230 --> 00:08:11.840
so that's how we figured out the IP address. To set the boundary between our logical networks,

91
00:08:11.840 --> 00:08:20.720
our subnets, the IP address is going to be combined with a subnet mask, and you'll learn about the subnet

92
00:08:20.720 --> 00:08:22.370
mask in the next lecture.

