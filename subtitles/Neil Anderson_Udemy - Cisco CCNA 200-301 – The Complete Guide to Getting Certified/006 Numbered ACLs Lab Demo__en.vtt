WEBVTT
1
00:00:06.320 --> 00:00:14.480
In this lecture, you'll learn how to configure access control lists with a lab demo. So, here's a lab.

2
00:00:14.480 --> 00:00:22.340
I've got to open in GNS3 here and I've got a couple of routers, R1 and R2.

3
00:00:22.700 --> 00:00:25.130
I've got PC1 and PC2 which is in

4
00:00:25.140 --> 00:00:27.650
10.0.1.0/24 subnet.

5
00:00:27.920 --> 00:00:33.500
And PC3 is in 10.0.2.0/24.

6
00:00:34.040 --> 00:00:38.810
I've already configured the routing.

7
00:00:39.170 --> 00:00:39.610
So,

8
00:00:39.680 --> 00:00:48.340
if I console on to PC1 and let's try pinging R2 at 10.0.0.2.

9
00:00:48.350 --> 00:00:54.650
So pinging 10.0.0.2 from PC1 works OK.

10
00:00:54.890 --> 00:01:02.260
I know for sure it's going to work from PC2 as well because it's in the same subnet.

11
00:01:02.450 --> 00:01:03.640
But let's just do it anyway.

12
00:01:04.040 --> 00:01:15.650
So ping 10.0.0.2 from here as well and let's check everything's OK from our 10.0.2.0/24 subnet as well.

13
00:01:16.160 --> 00:01:20.760
So I'll 10.0.0.2 which is R2 from there as well.

14
00:01:20.840 --> 00:01:25.320
OK, so connectivity is all working just fine.

15
00:01:25.430 --> 00:01:32.520
Let's have a look at the routing table on R1 so I'll jump on there.

16
00:01:32.810 --> 00:01:43.610
I do a show ip route and try to do it without a typo. And I've just got my connected and local routes on there.

17
00:01:43.670 --> 00:01:51.110
And because R2 is also on the 10.0.0.0/24 network, 10.0.0.2, that's why I've got connectivity

18
00:01:51.110 --> 00:01:51.680
everywhere.

19
00:01:52.340 --> 00:02:01.520
OK, looking back at the topology diagram and the scenario where that we are the network administrator

20
00:02:01.550 --> 00:02:06.590
and we've been given some security tasks to secure the network.

21
00:02:06.830 --> 00:02:15.680
So the first scenario is the PCs in the 10.0.2.0/24 network should not have any connectivity

22
00:02:15.680 --> 00:02:23.660
to R2 at 10.0.0.2, but that the PCs in the 10.0.1.0/24 subnet,

23
00:02:23.660 --> 00:02:30.830
they should have connectivity to R2 and also PC3 in 10.0.2.0/24 still should have connectivity

24
00:02:31.130 --> 00:02:33.440
to 10.0.1.0/24 as well.

25
00:02:33.680 --> 00:02:41.480
So usually when we are configuring ACL to do security, we'll secure as close to the source as possible so

26
00:02:41.480 --> 00:02:45.320
that traffic isn't going over any part of the network that it doesn't need to.

27
00:02:45.800 --> 00:02:51.740
But if we look at the scenario here, let's say we've been given a task that we have to configure each a standard

28
00:02:51.740 --> 00:03:01.910
numbered access list To do that and it has to be on R1. So we could do it inbound on 

29
00:03:01.910 --> 00:03:10.760
fa2/0 at the bottom here. With a standard ACL, you can only specify the source address. To be

30
00:03:10.760 --> 00:03:13.040
able to specify source and destination,

31
00:03:13.040 --> 00:03:17.510
that it's going to, that needs to be an extended or a named extended ACL.

32
00:03:18.080 --> 00:03:24.440
So what we want to do is we want to block traffic from 10.0.2.0/24 to R2.

33
00:03:24.560 --> 00:03:34.090
But we need to allow traffic from 10.0.2.0 to 10.0.1.0. So we can't put the ACL inbound on that

34
00:03:34.100 --> 00:03:36.050
fa2/0 interface

35
00:03:36.050 --> 00:03:42.830
in R1, because we block traffic from 10.0.2.0 we would be blocking it going to R2. But we'd

36
00:03:42.830 --> 00:03:46.430
be blocking it to the 10.0.1.0 subnet as well.

37
00:03:46.670 --> 00:03:55.340
So the only way that we can do this task using a numbered standard ACL, is by putting it on that outside

38
00:03:55.340 --> 00:03:59.690
fa0/0 interface on R2.

39
00:04:00.050 --> 00:04:03.920
So if that's not clear yet, let's do it and then you'll see what I mean.

40
00:04:04.820 --> 00:04:11.990
So, we want to block traffic from 10.0.2.0, allow traffic from 10.0.1.0.

41
00:04:12.320 --> 00:04:15.950
So let's go on the command line on R1.

42
00:04:16.279 --> 00:04:29.720
I'll go to global config and I'll make this access-list 1 and I'm going to deny traffic from the

43
00:04:29.720 --> 00:04:32.210
10.0.2.0/24 subnet.

44
00:04:32.510 --> 00:04:41.720
The wildcard mask is 0.0.0.255 because it's a /24 and it's a

45
00:04:41.750 --> 00:04:44.750
standard ACL, I can tell because it's number 1.

46
00:04:45.050 --> 00:04:48.740
So I can only specify the source address. So that's all that

47
00:04:48.750 --> 00:04:57.290
I need to put in here. Now in all of your access-list, there is always an implicit 'deny any any' at the bottom

48
00:04:57.290 --> 00:04:58.190
of the list.

49
00:04:58.340 --> 00:04:59.060
But I need to

50
00:04:59.190 --> 00:05:02.900
allow traffic from the

51
00:05:03.230 --> 00:05:03.610
10.0.1.0 network.

52
00:05:03.650 --> 00:05:04.790
So for that I'm going to

53
00:05:04.880 --> 00:05:13.640
do access-list 1 permit 10.0.1.0 0.0.0.255

54
00:05:14.730 --> 00:05:24.090
again. And that's all I need to do apart

55
00:05:24.090 --> 00:05:29.790
from actually applying the access-list of course. To do that, let's look at the topology diagram again.

56
00:05:30.300 --> 00:05:34.460
And I'm going to do it on the outside interface fa0/0.

57
00:05:34.590 --> 00:05:43.860
So back on the command line, I go to interface fa0/0 and the command now is

58
00:05:44.220 --> 00:05:45.570
ip access-group 1 out.

59
00:05:45.810 --> 00:05:51.930
And I'm doing it in the direction towards R2 so that is in the outbound direction.

60
00:05:52.230 --> 00:05:57.780
Looking at the apology diagram again, if I wanted to control traffic going from the 10.0.2.0

61
00:05:57.780 --> 00:06:06.600
network to R2, I could either do it inbound on fa2/0 as it comes into R1 or I can do

62
00:06:06.600 --> 00:06:12.420
it outbound on fa0/0 as it goes out of R1 on its way to R2.

63
00:06:12.690 --> 00:06:19.350
But like we said earlier, you can't do that in this particular scenario because if I blocked traffic

64
00:06:19.350 --> 00:06:26.040
coming from 10.0.2.0 coming in on fa2/0, it wouldn't just stop it getting it to R2.

65
00:06:26.190 --> 00:06:29.760
It would stop it getting to 10.0.1.0 network as well.

66
00:06:29.910 --> 00:06:36.630
And I need to allow that. So that's my whole config. Let's just have look at it again.

67
00:06:37.170 --> 00:06:44.910
So I denied traffic from 10.0.2.0. I permitted traffic from 10.0.1.0 and applied the outbound

68
00:06:44.910 --> 00:06:47.850
on the fa0/0 interface.

69
00:06:48.060 --> 00:06:50.780
So let's check that it is working.

70
00:06:51.060 --> 00:06:59.160
So let's go on to PC1 first and check that PC1 still has connectivity to the router. So I'll

71
00:06:59.160 --> 00:07:02.940
ping 10.0.0.2 and that is all good.

72
00:07:02.940 --> 00:07:03.600
PC1 has

73
00:07:03.600 --> 00:07:06.300
and I know that PC2 has as well.

74
00:07:06.690 --> 00:07:11.400
PC3 should not have connectivity 10.0.0.2,

75
00:07:11.400 --> 00:07:17.580
so let's check that. Ping 10.0.0.2 and there we go. The ping fails.

76
00:07:17.580 --> 00:07:23.880
So my access list is working but it should have connectivity to the PCs in the other subnet so I'll ping

77
00:07:23.880 --> 00:07:28.650
PC1 at 10.0.1.10 and that is successful.

78
00:07:28.650 --> 00:07:31.410
So that is the first task completed.

79
00:07:31.740 --> 00:07:40.860
We used a numbered standard ACL to block traffic from the 10.0.2.0 subnet to R2 at 10.0.0.2 but

80
00:07:41.250 --> 00:07:44.190
allow all of our other traffic everywhere else.

81
00:07:44.940 --> 00:07:48.300
OK, so that was a numbered standard ACL.

82
00:07:48.300 --> 00:07:53.070
Next up, let's have a look at a numbered extended ACL.

83
00:07:53.400 --> 00:08:02.280
And if I go back to the topology again, the scenario this time is going to be we're going to permit

84
00:08:02.280 --> 00:08:11.340
telnet from PC1 to R2. Let' say that PC1 is our administrator workstation and telnet is a way that

85
00:08:11.340 --> 00:08:14.220
you can remotely get onto the command line on our router.

86
00:08:14.430 --> 00:08:17.490
We'll cover it in more detail in a later section.

87
00:08:17.610 --> 00:08:24.120
So we're going to allow it from PC1, but PC1 is the only administrator workstation.

88
00:08:24.270 --> 00:08:34.470
So no other PC, no other subnet is allowed to telnet onto R2. So let's configure that.

89
00:08:34.710 --> 00:08:44.670
So I'll go on to the command line on R1 again and in my ACL I'm going to do an extended ACL which

90
00:08:44.670 --> 00:08:51.060
allows traffic from 10.0.1.10 to 10.0.0.2 when it's telnet traffic, but

91
00:08:51.060 --> 00:08:55.860
denies it from everywhere else and is going to allow all other traffic.

92
00:08:56.130 --> 00:09:04.050
So let's go onto R1 to configure this. So, let's go down a few lines.

93
00:09:04.050 --> 00:09:11.040
I'll say access-list, and it's an extended ACL this time, so that starts with 100.

94
00:09:11.040 --> 00:09:18.900
I'll use that for my number and I'm going to permit traffic from host 10.0.1.10, but I'm

95
00:09:18.900 --> 00:09:21.120
going to specify its telnet traffic.

96
00:09:21.120 --> 00:09:30.090
So I need to say this is TCP, so I permit TCP and I'm going to see from host 10.0.1.10,

97
00:09:30.300 --> 00:09:38.010
and it's going to host R2 at 10.0.0.2 and then equals the port is telnet.

98
00:09:38.430 --> 00:09:42.570
I could also have said equals 23. The router would take that command as well.

99
00:09:43.290 --> 00:09:45.240
So I'm allowing it from PC1.

100
00:09:45.960 --> 00:09:50.040
I don't want to allow it from any other PC in that subnet. So I say access-list 100

101
00:09:50.040 --> 00:09:58.560
and I'm going to deny TCP from the 10.0.1.0 0.0.0.255 subnet

102
00:09:58.570 --> 00:10:04.830
going to host 10.0.0.2 equals telnet.

103
00:10:07.010 --> 00:10:13.010
And you can see it's important I get these in the right way. If I put that second command first, I'd

104
00:10:13.010 --> 00:10:18.200
be blocking traffic from all hosts on the 10.0.1.0 subnet, including PC1.

105
00:10:18.360 --> 00:10:23.450
So I need to make my more specific commands up at the top of the ACL.

106
00:10:23.870 --> 00:10:27.230
And then I want to allow all other traffic.

107
00:10:27.230 --> 00:10:29.110
I'm just controlling telnet here.

108
00:10:29.510 --> 00:10:41.120
So I need to also say at access-list 100 permit ip any any to allow all other traffic and not overrides

109
00:10:41.480 --> 00:10:46.330
the 'implicit deny any any' at the bottom of the ACL.

110
00:10:46.340 --> 00:10:52.550
The 'implicit deny any any' is still down there at the bottom but the router reads the 'permit ip any any'

111
00:10:52.550 --> 00:10:52.970
first,

112
00:10:53.090 --> 00:10:57.680
so this is going to allow all traffic apart from what I explicitly denied.

113
00:10:57.890 --> 00:10:59.930
OK, so that's my ACL configured.

114
00:11:00.170 --> 00:11:04.200
And importantly, we need to remember to apply it at

115
00:11:04.650 --> 00:11:07.250
the interface. It's really easy to forget to do this.

116
00:11:07.490 --> 00:11:13.700
So you're looking at the topology diagram and it's always best practice to secure as close to the source

117
00:11:13.700 --> 00:11:15.800
as you can. So here,

118
00:11:15.830 --> 00:11:26.080
we could put the ACL either inbound on this interface and outside here, which is

119
00:11:26.210 --> 00:11:31.040
fa1/0 on the router.

120
00:11:31.070 --> 00:11:40.250
Actually, let me make a note just to make that clear. So I'll save this as fa1/0 and

121
00:11:41.560 --> 00:11:45.940
that is the interface that we're going to put this on.

122
00:11:47.460 --> 00:11:49.050
Let me try to clear that up a bit.

123
00:11:49.230 --> 00:11:49.950
OK, that's fine.

124
00:11:50.220 --> 00:11:53.150
OK, so we're going to put it on fa1/0.

125
00:11:53.730 --> 00:11:58.620
Let me just cleared that up a bit, making mess in my topology diagram here. OK,

126
00:11:58.710 --> 00:12:00.070
so it's going to go inbound there.

127
00:12:00.600 --> 00:12:07.800
I could also put outbound on fa0/0, but I've already got an ACL configured on there, the ACL

128
00:12:07.800 --> 00:12:08.810
that I did earlier,

129
00:12:08.820 --> 00:12:10.460
my standard numbered.

130
00:12:10.620 --> 00:12:17.670
You can only have one ACL per interface, per direction. So I'm going to put it on fa1/0. So

131
00:12:18.030 --> 00:12:26.640
back on R1, I'll go interface fa1/0 and it's ip access-group 100.

132
00:12:26.640 --> 00:12:30.390
And it's in this time because it's coming in

133
00:12:30.390 --> 00:12:32.400
fa1/0 going out

134
00:12:32.430 --> 00:12:33.890
fa0/0.

135
00:12:34.530 --> 00:12:36.630
OK. So that's my ACL configured.

136
00:12:36.970 --> 00:12:39.010
Let's test it next.

137
00:12:39.030 --> 00:12:48.150
So if I go on to PC1, I should be able to telnet to 10.0.0.2. Telnet's already

138
00:12:48.150 --> 00:12:49.850
been configured and there you go.

139
00:12:49.850 --> 00:12:55.410
I can see it's working because I'm getting the password prompt. So I'm able to telnet onto R2 from

140
00:12:55.410 --> 00:12:56.700
PC1.

141
00:12:56.850 --> 00:13:03.600
I should not be able to get on there from PC2, so let's check that.

142
00:13:04.240 --> 00:13:12.620
I'm going to PC2 and I'll telnet to 10.0.0.2 and there you go - destination unreachable.

143
00:13:12.640 --> 00:13:13.060
That's good.

144
00:13:13.060 --> 00:13:18.400
It's because my ACL was blocking the traffic, but it should just be telnet traffic. I should be

145
00:13:18.670 --> 00:13:21.720
ping 10.0.0.2 and that's working.

146
00:13:21.730 --> 00:13:23.680
So that is all good.

147
00:13:23.800 --> 00:13:31.120
Actually, looking back at the topology diagram, again, I didn't need to specify anything about PC3

148
00:13:31.120 --> 00:13:37.770
because I already had my first ACL blocking traffic going out to R2 from it.

149
00:13:37.780 --> 00:13:39.730
So it was getting blocked already.

150
00:13:40.480 --> 00:13:48.130
OK, so that was a numbered standard and a numbered extended.

151
00:13:48.430 --> 00:13:57.180
I'll do a named ACL in the next lecture because I feel like this one's going on for a little while now.

152
00:13:57.340 --> 00:14:00.070
So go get yourself a cup of coffee if you want to.

153
00:14:00.220 --> 00:14:03.070
I'll see you back here for named ACLs.

