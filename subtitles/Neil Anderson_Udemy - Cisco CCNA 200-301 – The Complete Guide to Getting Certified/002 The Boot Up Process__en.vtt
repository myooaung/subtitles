WEBVTT
1
00:00:06.320 --> 00:00:15.290
In this lecture, you'll learn about the boot up process on your routers and switches, and to understand

2
00:00:15.320 --> 00:00:21.310
how they boot up, you need to know about the different memory locations on your device.

3
00:00:21.320 --> 00:00:24.620
There's four built-in memory locations.

4
00:00:24.620 --> 00:00:28.470
First up, we have ROM, the Read Only Memory.

5
00:00:28.550 --> 00:00:37.070
Then, we have Flash. On older devices, that will be installed in the cache on the motherboard. On newer

6
00:00:37.070 --> 00:00:38.000
devices,

7
00:00:38.000 --> 00:00:40.710
it's a removable CompactFlash card.

8
00:00:40.820 --> 00:00:44.340
Then, we've got NVRAM, the Non-Volatile RAM,

9
00:00:44.470 --> 00:00:48.980
and finally, the RAM, the normal Random Access Memory.

10
00:00:49.010 --> 00:00:56.970
You can also use an external USB memory stick plugged into the device as well.

11
00:00:57.210 --> 00:01:04.510
Okay, so first one is Read Only Memory, the ROM, and that is what is used when the device is first powered

12
00:01:04.599 --> 00:01:07.720
on. ROM has got two main functions,

13
00:01:07.720 --> 00:01:14.480
First is the Power On Self Test. The POST test will check for any problems with the hardware.

14
00:01:14.590 --> 00:01:19.870
It will then load the bootstrap, and the bootsrap will look in Flash for an

15
00:01:19.870 --> 00:01:22.290
IOS software image to load

16
00:01:22.300 --> 00:01:32.080
next. If an IOS image can't be found in flash then the device will show the ROMMON prompt at the command

17
00:01:32.080 --> 00:01:32.420
line.

18
00:01:32.440 --> 00:01:35.070
That means the device has failed to boot up

19
00:01:35.080 --> 00:01:41.620
if you see a command prompt that says ROMMON. The ROM Monitor, that's what it stands for. That can be used

20
00:01:41.620 --> 00:01:45.520
to recover a missing or corrupted software image.

21
00:01:45.550 --> 00:01:54.700
In that case, you can boot from USB or an external Trivial File Transfer Protocol (TFTP) server to recover

22
00:01:54.760 --> 00:02:02.490
the device. The instructions for doing that can be slightly different depending on the model of router

23
00:02:02.500 --> 00:02:05.020
or switch that you need to recover.

24
00:02:05.290 --> 00:02:12.460
So to get instructions, just search in Google for 'Cisco ROMMON  Recovery' for your particular platform.

25
00:02:12.490 --> 00:02:15.360
We'll have a look at that at the end of the lecture

26
00:02:15.370 --> 00:02:17.400
when I do a lab demo.

27
00:02:17.800 --> 00:02:19.690
Okay, so we had the ROM memory

28
00:02:19.870 --> 00:02:29.200
and then the Flash memory. So, ROM does a POST test and loads up the bootstrap, which then looks in Flash

29
00:02:29.200 --> 00:02:32.090
memory for an IOS system image.

30
00:02:32.320 --> 00:02:39.070
It will load the first image that it finds there by default, but you can override that with the 'boot

31
00:02:39.070 --> 00:02:40.390
system' command.

32
00:02:40.460 --> 00:02:47.560
Now, when you get the device initially from the factory, it's just going to have one software image on

33
00:02:47.560 --> 00:02:55.000
there. But you can upgrade that device because Cisco come out with newer versions of the software regularly.

34
00:02:55.000 --> 00:03:00.970
So, in that case, you can download the new version of the operating system, and then you can copy it down to

35
00:03:00.970 --> 00:03:02.620
Flash. In that case,

36
00:03:02.650 --> 00:03:07.550
you'll have two copies, two different system images on Flash now.

37
00:03:07.810 --> 00:03:12.910
So when the system boots up, you're going to need to tell it which one to boot from. It will default to

38
00:03:12.910 --> 00:03:19.720
choosing the first one. To make sure that you get the newer image, the command to use is 'boot system'

39
00:03:19.840 --> 00:03:28.560
and then 'flash' and then the system image name. That's a global configuration command. Next type of memory

40
00:03:28.650 --> 00:03:30.080
is NVRAM.

41
00:03:30.330 --> 00:03:37.070
When the system has finished loading the IOS system image from Flash, it will then load the start-

42
00:03:37.060 --> 00:03:44.760
up config, configuration file from NVRAM, and the saved start-up config then becomes the current

43
00:03:45.030 --> 00:03:47.760
running-config in RAM.

44
00:03:47.760 --> 00:03:52.450
If no start-up config file was found, then the system will load the Setup Wizard.

45
00:03:52.500 --> 00:03:57.930
If no start-up config file was found, it's because you just factory reset it, or it just actually

46
00:03:57.930 --> 00:04:07.020
come from the factory. Whenever you enter a command in IOS, it takes effect immediately and goes into the

47
00:04:07.020 --> 00:04:12.900
running-config in RAM. To make your changes permanent across a reboot,

48
00:04:12.900 --> 00:04:19.350
we do the 'copy running-config start-up config' command, and that copy it into NVRAM, which will

49
00:04:19.350 --> 00:04:22.880
be used the next time the system boots up.

50
00:04:22.950 --> 00:04:28.500
The reason it's designed like this is so if you're working on the router or a switch, and you make some

51
00:04:28.500 --> 00:04:34.560
kind of catastrophic error, and then you can't get to the switch or router anymore, you can just pull

52
00:04:34.560 --> 00:04:37.340
the power out of the back, put the power back in,

53
00:04:37.340 --> 00:04:43.940
boot it back up again, and it will boot back up with the old startup-config before you'd made the error

54
00:04:43.940 --> 00:04:48.520
in the running-config that caused you to lose connectivity to the command line.

55
00:04:50.000 --> 00:04:53.320
Okay, the last type of built-in memory is RAM,

56
00:04:53.330 --> 00:04:58.750
the Random Access Memory. So, the IOS system image and the start-up config

57
00:04:58.760 --> 00:05:06.150
are loaded from Flash for the system image, and from NVRAM for the startup-config into RAM during boot up.

58
00:05:06.150 --> 00:05:12.450
And RAM is then used as a normal working memory of the device, and if you're wondering, "Well, why don't

59
00:05:12.450 --> 00:05:14.740
we just keep everything in RAM then?"

60
00:05:14.880 --> 00:05:18.230
The reason is that RAM is volatile memory.

61
00:05:18.260 --> 00:05:23.850
It does not survive a power outage or a reboot, so we can't keep the files in there that we need to keep

62
00:05:23.850 --> 00:05:24.900
permanently.

63
00:05:24.900 --> 00:05:35.130
They need to be saved in persistent storage like our Flash and our NVRAM. A couple of other things

64
00:05:35.130 --> 00:05:36.060
to tell you,

65
00:05:36.060 --> 00:05:41.440
first up, the VLAN database. That file is the 'vlan.dat' file.

66
00:05:41.580 --> 00:05:49.400
It's just on a switch where it saves the VLAN information, and that is saved in either Flash or NVRAM,

67
00:05:49.430 --> 00:05:52.080
depending on the model of the switch.

68
00:05:52.080 --> 00:05:53.760
I know we haven't covered VLANs yet.

69
00:05:53.760 --> 00:05:56.050
Don't worry, we'll cover that in a later section.

70
00:05:56.070 --> 00:06:04.350
I'm just mentioning it now as we talk about the different memory locations. The last thing, the system

71
00:06:04.380 --> 00:06:13.200
can also load a system image and/or startup-config from an external TFTP server rather than from Flash

72
00:06:13.260 --> 00:06:14.990
or NVRAM.

73
00:06:15.000 --> 00:06:22.890
That is not recommended, though, because the device will not be able to boot if it loses connectivity to that

74
00:06:22.920 --> 00:06:24.700
TFTP server.

75
00:06:24.700 --> 00:06:32.580
So, the only reason you would ever really do that is if you want to load a new version of the system

76
00:06:32.580 --> 00:06:37.180
image and there's not enough Flash memory capacity on your device to store that.

77
00:06:37.500 --> 00:06:43.830
Then, you can save it to an external TFTP server instead and boot from there. But, really, not recommended

78
00:06:43.860 --> 00:06:48.670
because if you lose connectivity to TFTP server, your device won't be able to boot.

79
00:06:48.790 --> 00:06:51.750
Okay, so that was all the information.

80
00:06:51.750 --> 00:06:56.600
Last thing is to give you a demonstration of all this in the lab.

