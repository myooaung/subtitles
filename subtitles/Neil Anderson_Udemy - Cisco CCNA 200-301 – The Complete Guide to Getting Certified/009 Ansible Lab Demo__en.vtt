WEBVTT
1
00:00:07.340 --> 00:00:14.190
In this lecture, you'll learn how to perform network automation using Ansible with a lab demo.

2
00:00:14.480 --> 00:00:18.320
I've already got my lab environment set up and I've got three writers.

3
00:00:18.350 --> 00:00:21.790
There are one hour to an hour, three.

4
00:00:22.100 --> 00:00:29.510
And right now I've got no configuration on the towers other than I've configured them with an IP address

5
00:00:29.510 --> 00:00:30.530
for management.

6
00:00:30.710 --> 00:00:33.080
And I've also enabled S.H. on there.

7
00:00:33.170 --> 00:00:37.520
So the Ansible will be able to connect and push the configuration.

8
00:00:37.850 --> 00:00:44.210
The configuration that I'm going to do is I'm going to add a new interface to each other with an IP

9
00:00:44.210 --> 00:00:44.690
address.

10
00:00:44.840 --> 00:00:52.060
I'll also configure them with their A.P. server and I'm going to enable logging Synchronoss on the SS

11
00:00:52.160 --> 00:00:53.030
H lines.

12
00:00:53.150 --> 00:00:56.840
So I just verify the current configuration on the right first.

13
00:00:57.050 --> 00:00:58.640
So I'll go to our one.

14
00:00:58.880 --> 00:01:05.090
I'll do a show IP interface brief and you can see it's just got its management IP address one seven

15
00:01:05.090 --> 00:01:08.870
two twenty three one one two one are two.

16
00:01:08.870 --> 00:01:12.290
Is it one or two and are three is one or three.

17
00:01:12.950 --> 00:01:20.810
And if I do a should run and include A.P., you can see that Antep server has not been configured and

18
00:01:20.810 --> 00:01:29.180
I'll do a sure run and then scroll down the bottom and you can see on my UI lines for each axis that

19
00:01:29.180 --> 00:01:33.110
I do not have logging synchronous configured on there.

20
00:01:33.510 --> 00:01:39.470
OK, so let's now go on to the ansible machine and get this set up.

21
00:01:39.740 --> 00:01:48.650
So I've already got Ansible installed on Linux Virtual Machine, which is running ST or S and let's

22
00:01:48.650 --> 00:01:52.310
check the Ansible is running OK on here.

23
00:01:52.310 --> 00:01:58.520
Actually first off, I'll just change to my ansible directory, but I've already got set up on here

24
00:01:58.760 --> 00:02:07.940
and then I'm going to see Ansible localhost for this local machine and I'm calling the module ping that

25
00:02:08.030 --> 00:02:10.250
is going to ping itself with Ansible.

26
00:02:10.250 --> 00:02:12.410
I can see I've got green success there.

27
00:02:12.530 --> 00:02:18.210
So Ansible is working just fine on my machine here, OK.

28
00:02:18.260 --> 00:02:26.990
Next thing is that I want to check my inventory that I've got our one hour to and our three did there.

29
00:02:27.320 --> 00:02:34.520
Before I look at the ansible directory, let's just check there added to my hosts file here on this

30
00:02:34.520 --> 00:02:40.400
Linux machine because I want to be able to connect to them by their hostname as well as their IP address.

31
00:02:40.700 --> 00:02:46.940
So I will see Schiro to elevate my privileges and then cut through the file.

32
00:02:46.940 --> 00:02:47.750
And it's easy.

33
00:02:47.750 --> 00:02:51.410
She hosts and then I.

34
00:02:52.470 --> 00:02:59.580
Enter my password and I can see that I do have entries for our one hour, two and three with our management

35
00:02:59.580 --> 00:03:00.660
IP addresses.

36
00:03:00.870 --> 00:03:05.130
OK, next, let's check the ansible inventory.

37
00:03:05.560 --> 00:03:14.970
So for that, I'm going to do Sudoku again and the inventory is in ANSI Swash Ansible slash hosts.

38
00:03:15.810 --> 00:03:19.680
And here is my inventory for Ansible.

39
00:03:19.830 --> 00:03:24.510
So you can see here that you can configure groups in the inventory.

40
00:03:24.510 --> 00:03:27.180
So I just walk through what I've got configured here.

41
00:03:27.450 --> 00:03:32.190
So up at the top I've added each of my hosts are one, are two and are three.

42
00:03:32.490 --> 00:03:34.500
And I'm just a comment in there.

43
00:03:34.530 --> 00:03:38.310
That's why it's got the hash at the front to see that those are individual hosts.

44
00:03:38.700 --> 00:03:40.880
Then I've also got groups configured as well.

45
00:03:40.890 --> 00:03:44.370
So our one and our two are thirty seven, forty five years.

46
00:03:44.550 --> 00:03:47.130
So I've created a group called thirty seven.

47
00:03:47.130 --> 00:03:50.400
Forty five hour three is a seventy two hundred.

48
00:03:50.400 --> 00:03:57.870
So I've got a group called seventy two hundred and ten of also created a group called Rotor's All which

49
00:03:57.870 --> 00:04:03.960
contains the other groups of thirty seven, forty five and seventy two hundred.

50
00:04:04.680 --> 00:04:10.880
So the reason I've got my inventory configured like this means that if I want to push some changes just

51
00:04:10.890 --> 00:04:15.030
to our one, then in my playbook I can reference our one.

52
00:04:15.210 --> 00:04:21.779
If I wanted to push changes to all of my thirty seven forty five hours then I can specify the thirty

53
00:04:21.779 --> 00:04:28.440
seven forty five writers group and if I want to apply changes to all of my drivers, then I apply that

54
00:04:28.440 --> 00:04:30.960
to the all group in my playbook.

55
00:04:30.960 --> 00:04:33.330
And that's what I'm going to be doing in the example here.

56
00:04:33.660 --> 00:04:39.150
So you can see here that when you are using Ansible for network automation, you could have different

57
00:04:39.150 --> 00:04:43.190
groups for your viewers, for your switches, for your firewalls, etc..

58
00:04:43.350 --> 00:04:49.350
Also, different groups may be based on the location of those devices, and that means that it's very

59
00:04:49.350 --> 00:04:53.550
easy a target where you want to change the configuration to.

60
00:04:54.360 --> 00:04:59.220
OK, so my inventory is all looking good.

61
00:04:59.460 --> 00:05:06.480
Next up, what she what files I've got in my ansible directory here inside my home directory and I've

62
00:05:06.480 --> 00:05:09.900
got my URL config Yamal.

63
00:05:09.900 --> 00:05:12.000
That is my playbook that I'm going to be using.

64
00:05:12.120 --> 00:05:14.820
And I've also got a host vars directly.

65
00:05:15.240 --> 00:05:17.760
What was Hoopsters directory is used for.

66
00:05:17.980 --> 00:05:25.020
If you want to specify variables for your individual host, you can also specify variables based on

67
00:05:25.020 --> 00:05:25.790
the groups as well.

68
00:05:25.810 --> 00:05:31.170
So if I wanted to configure variables which are common to all of my seven hundred drivers, I could

69
00:05:31.170 --> 00:05:33.240
have had that for that there.

70
00:05:33.630 --> 00:05:36.210
So let's see what is in Hocevar.

71
00:05:36.320 --> 00:05:42.720
So I'll do an Atlas post vars and you can see that I've got a variable file for our one hour too.

72
00:05:42.720 --> 00:05:47.850
And our three, they are written in YAML, so let's see what is in there.

73
00:05:47.850 --> 00:05:57.630
So I'll do I can't host VARs and ah one y email and then here you can see so you can see that this is

74
00:05:57.630 --> 00:05:58.320
a yaml file.

75
00:05:58.320 --> 00:06:04.260
So because of that it starts with my three dashes and then I'm seeing the ansible connection is coming

76
00:06:04.260 --> 00:06:11.360
from this local machine and then I've specified my login credentials to the username is flat box and

77
00:06:11.360 --> 00:06:12.750
the password is flat box.

78
00:06:13.020 --> 00:06:16.400
I've added a matching username and password on my routers.

79
00:06:16.590 --> 00:06:17.640
Obviously real world.

80
00:06:17.640 --> 00:06:20.910
You're going to want to use a better password than that.

81
00:06:21.330 --> 00:06:28.370
And then I've also specified the Lookback address as well because I'm going to be creating a new lookback

82
00:06:28.470 --> 00:06:31.080
interface on the voters with an IP address.

83
00:06:31.230 --> 00:06:34.410
Obviously, the three drivers need to have a different IP address.

84
00:06:34.590 --> 00:06:38.310
So looking here, this is the one and this is the IP address.

85
00:06:38.310 --> 00:06:40.050
It's going to get on its back.

86
00:06:40.200 --> 00:06:43.260
And if we have a look at our two.

87
00:06:44.840 --> 00:06:52.730
You can see the handle handle one or two are one was one or one, and our three is going to be one or

88
00:06:52.730 --> 00:06:53.070
three.

89
00:06:53.410 --> 00:06:57.010
OK, so I've got Ansible set up on this machine.

90
00:06:57.260 --> 00:07:02.470
I have got my variables set up for my different hosts if I can log in them.

91
00:07:02.480 --> 00:07:08.810
And I've also specified the IP address is going to be used on back there as well.

92
00:07:08.960 --> 00:07:17.450
OK, next thing to do is let's check the icon connect then to the host via SFH, to management, to

93
00:07:17.450 --> 00:07:21.140
the command for that is I'll do an ansible dash.

94
00:07:21.380 --> 00:07:25.380
The module is paying and all in the inventory.

95
00:07:25.400 --> 00:07:31.610
This is a default wild card where you see all it's going to ping everything in the inventory.

96
00:07:31.760 --> 00:07:38.450
Now when I do this because I've got my credentials in those variable files, I need to do this from

97
00:07:38.450 --> 00:07:43.520
the same directory that was arranged that I'm doing it from my ansible directory where I've got those

98
00:07:43.520 --> 00:07:44.390
variable files.

99
00:07:44.390 --> 00:07:47.120
Service should hopefully work, so I will hit enter.

100
00:07:47.780 --> 00:07:50.720
And what it's doing here is it doesn't just hang them.

101
00:07:50.900 --> 00:07:53.690
They actually check that it can log into them as well.

102
00:07:53.840 --> 00:07:58.460
And I've got all success for all three of them, so that all looks good.

103
00:07:58.580 --> 00:08:06.080
So everything's set up and I should be able to actually use my playbook to push some configuration to

104
00:08:06.080 --> 00:08:07.280
those devices.

105
00:08:07.460 --> 00:08:11.600
So let's have a look and see what kind of things that we can do with Ansible.

106
00:08:11.600 --> 00:08:16.530
And Ansible does have a load of network modules already built into it.

107
00:08:16.530 --> 00:08:18.540
Just makes your life really easy.

108
00:08:18.710 --> 00:08:23.750
So let's have a look and see what is available by doing a Google search for it.

109
00:08:23.870 --> 00:08:26.630
So you can see I've already set this up ahead of time.

110
00:08:26.630 --> 00:08:33.230
I've Googled for Ansible network modules and I'm going to look at the first hit there and you can see

111
00:08:33.230 --> 00:08:36.080
that these are all the built in modules and Ansible.

112
00:08:36.380 --> 00:08:37.929
So there's loads of them here.

113
00:08:37.940 --> 00:08:45.110
If I was to control F and I'll look for Aiwass and then looking at Aiwass, you can see these are all

114
00:08:45.110 --> 00:08:51.590
the different modules that are built in for working with iOS writers so we can manage our layer to our

115
00:08:51.590 --> 00:08:54.800
layer three interfaces, BGP, et cetera.

116
00:08:54.980 --> 00:09:01.510
Also with the iOS config in iOS command module, you can send any commands that you want to in iOS,

117
00:09:02.180 --> 00:09:05.840
but it's also modules for an actual ashlawn.

118
00:09:05.840 --> 00:09:13.460
Cisco, there's also going to be iOS six are, etc. So loads of built in tasks in here, which makes

119
00:09:13.460 --> 00:09:17.660
it really easy to use Ansible for network automation.

120
00:09:18.500 --> 00:09:24.340
OK, and all of these modules actually run as Python scripts, so let's just check that.

121
00:09:24.350 --> 00:09:30.740
So I'll go back onto my ansible machine again and I'm just going to copy this command from my other

122
00:09:30.740 --> 00:09:36.790
window here, because this is the directory that was Python Scriptura.

123
00:09:36.830 --> 00:09:40.820
And so I've looked for Ansible Modules Network and have a hit enter.

124
00:09:41.000 --> 00:09:46.910
You see, that ties up with all of the different sections of modules that were available.

125
00:09:46.910 --> 00:09:52.820
When I Googled for this, you can Seaver's modules for as I said earlier, iOS iOS six are anextra,

126
00:09:52.820 --> 00:09:56.480
was also Juneau's, etc. Other vendors in here as well.

127
00:09:56.750 --> 00:10:00.440
And let's look at the modules for Ayash.

128
00:10:00.980 --> 00:10:02.750
So iOS in the and there.

129
00:10:02.930 --> 00:10:06.440
And you can see again, those are the modules that we just had to look at and Google.

130
00:10:06.470 --> 00:10:13.850
And you can see that by extension, these are actually pre-built Python script in Ansible for managing

131
00:10:13.850 --> 00:10:15.260
your IOW routers.

132
00:10:15.770 --> 00:10:23.090
Okay, so next, we're ready to actually push the configuration to the writers with the Ansible playbook.

133
00:10:23.390 --> 00:10:26.510
So let's have a look at what I've got written in there.

134
00:10:26.510 --> 00:10:29.840
So I'll do a cut there or config YAML.

135
00:10:29.840 --> 00:10:33.020
So this is the plague that I've written already.

136
00:10:33.080 --> 00:10:34.880
Let's have a walk through what I'm doing here.

137
00:10:35.630 --> 00:10:42.380
So it's a YAML file, so it starts with three dashes and then I've given it the names and I'm going

138
00:10:42.380 --> 00:10:44.090
to be doing my regular config here.

139
00:10:44.330 --> 00:10:46.340
I'm applying it to Reuters all.

140
00:10:46.340 --> 00:10:48.770
So that was the group that you saw in the inventory.

141
00:10:48.920 --> 00:10:51.350
The config is going to be pushed to all of my writers.

142
00:10:51.680 --> 00:10:56.600
Gobber Fox knew by default when Ansible connects to the device, start the playbook.

143
00:10:56.690 --> 00:10:59.450
It will gather some facts about to save some time.

144
00:10:59.450 --> 00:11:03.770
Here I am turning that off and then I've got my tasks.

145
00:11:04.040 --> 00:11:11.690
The first one I've named the A.P. server and the module is Iooss A.P. and I'm going to configure an

146
00:11:11.690 --> 00:11:17.240
A.P. server of to one of my drivers and that is going to be present.

147
00:11:17.460 --> 00:11:24.200
OK, so if you just came this completely new, you used Ansible before and you know that you want to

148
00:11:24.200 --> 00:11:28.610
set Antep server on your drivers, how do you find out how you would do that?

149
00:11:28.730 --> 00:11:35.120
Well, you check the documentation, so I will go back to Google again.

150
00:11:36.320 --> 00:11:40.920
Let me just scroll through here to you that if I can find it, OK, there we go.

151
00:11:40.940 --> 00:11:42.550
So I would look at the network more.

152
00:11:42.830 --> 00:11:49.760
I would look in the IOM section and there is actually one called I was A.P. so I can be pretty sure

153
00:11:49.850 --> 00:11:56.140
about the one it used for saying the A.P. server and the name of the module is IOPS underscore A.P.

154
00:11:56.330 --> 00:11:58.250
So I do a Google search for that.

155
00:11:58.520 --> 00:12:03.560
And then that brings me this page here, which is the documentation for that module.

156
00:12:03.800 --> 00:12:07.700
So you can see all of the different parameters that available here.

157
00:12:07.940 --> 00:12:11.210
And a bit further down, it gives me some examples.

158
00:12:11.240 --> 00:12:16.040
So that was how I found out how it was set up using Ansible.

159
00:12:16.040 --> 00:12:16.970
Very simple.

160
00:12:17.330 --> 00:12:20.440
So I have got that in my playbook.

161
00:12:20.450 --> 00:12:25.490
Other things I wanted to do was to configure logging synchronous on SSA sessions.

162
00:12:25.780 --> 00:12:31.670
Now, there's not a module which is dedicated specifically to this, but if I want to do any command,

163
00:12:31.670 --> 00:12:34.180
I can use the IOC config module.

164
00:12:34.190 --> 00:12:36.530
So that's what I what I'm using here.

165
00:12:36.950 --> 00:12:38.690
And then I'm seeing the line.

166
00:12:38.690 --> 00:12:43.550
I'm going to add the config, I'm going to add is logging Synchronoss and where I'm going to advertise

167
00:12:43.550 --> 00:12:46.460
underlying the UI 015.

168
00:12:46.850 --> 00:12:52.370
Then I'm also going to create a box zero interface using the Iooss interface module.

169
00:12:52.370 --> 00:12:55.100
And the name of the interface is going to be Lookback zero.

170
00:12:55.320 --> 00:12:56.810
So that's how you create the interface.

171
00:12:56.960 --> 00:13:00.410
I need to use a different model to the actual IP address on it.

172
00:13:00.790 --> 00:13:04.760
So there I'm using the module YOSSELE three interface.

173
00:13:04.940 --> 00:13:10.610
I'm going to configure my lookback interface and because I need to have a different lookback address

174
00:13:10.610 --> 00:13:16.190
on my three different routers, I'm referring to the variable of Lookback zero address.

175
00:13:16.370 --> 00:13:22.070
If you remember when we looked in the host varas file, I had a variable in there called Back Zero Address

176
00:13:22.190 --> 00:13:25.100
and then I'm calling it from here in my playbook.

177
00:13:25.350 --> 00:13:29.450
Then the last thing I'm going to do is I'm going to see if the configuration if modified.

178
00:13:29.630 --> 00:13:36.980
So that's using the iOS config module and I'm going to save when Ansible running this playbook has made

179
00:13:36.980 --> 00:13:39.720
some actual changes to the writers.

180
00:13:40.610 --> 00:13:44.540
OK, so that is everything that I'm going to be doing there.

181
00:13:44.570 --> 00:13:50.810
So now what's actually running the playbook to the command provider is Ansible.

182
00:13:51.920 --> 00:13:54.950
If I can spell it right, dyche playbook.

183
00:13:56.490 --> 00:14:03.240
And then the name of my file was right here, config YAML, I'll hit Enter and it's going to start running

184
00:14:03.240 --> 00:14:07.460
through the playbook because your first task is Antep server.

185
00:14:07.650 --> 00:14:11.130
It's going to be pushing the A.P. configuration to my rotors.

186
00:14:11.280 --> 00:14:14.670
And I can see it's changed our one hour to an hour.

187
00:14:14.670 --> 00:14:16.460
Three civil looks good.

188
00:14:16.680 --> 00:14:21.000
I've also set the logging Synchronoss on my SFH lines.

189
00:14:21.210 --> 00:14:22.920
I've created my Luvox.

190
00:14:23.130 --> 00:14:29.160
I'm now adding the IP address to the loop box and finally I'm going to see the config.

191
00:14:29.320 --> 00:14:30.000
So that's been done.

192
00:14:30.000 --> 00:14:32.310
An R one and R two.

193
00:14:32.550 --> 00:14:40.100
It's just trying on our three right now, OK, and timed out on our three so I could try that again.

194
00:14:40.110 --> 00:14:42.420
These things can happen and I'll have demonstration.

195
00:14:42.630 --> 00:14:47.940
You can see that the whole works just fine apart from ar3.

196
00:14:48.160 --> 00:14:53.040
OK, so looking down at the bottom you can see I've got green for our one and our two and you can see

197
00:14:53.040 --> 00:14:54.540
that it's changed five things.

198
00:14:54.540 --> 00:14:55.800
We're on our three.

199
00:14:55.800 --> 00:15:01.500
It's red because it looks like it's mine to change the configuration, but it just failed to actually

200
00:15:01.500 --> 00:15:02.190
save it.

201
00:15:02.650 --> 00:15:06.690
OK, so let's go back and check this now.

202
00:15:06.690 --> 00:15:08.040
So I'll go into our one.

203
00:15:08.310 --> 00:15:15.750
I'll do a show IP interface brief and you can see there is my loop back with DOT one or one.

204
00:15:15.750 --> 00:15:23.940
I'll do the same on R to show IP interface brief and there is back with its IP address configured on

205
00:15:23.940 --> 00:15:24.270
there.

206
00:15:24.270 --> 00:15:27.120
I know what's being done successfully on our three as well.

207
00:15:27.510 --> 00:15:31.800
And if I do a show run and include and keep.

208
00:15:32.830 --> 00:15:39.760
There's the A.P. server configured and everyone was logging Synchronoss so much to assure John for that.

209
00:15:40.300 --> 00:15:48.100
And I'll scroll down to the bottom and you can see that logging Synchronoss has been applied to my UI

210
00:15:48.100 --> 00:15:48.490
lines.

211
00:15:48.580 --> 00:15:49.670
OK, so all good.

212
00:15:49.680 --> 00:15:53.380
So Ansible was able to push the config successfully.

213
00:15:53.650 --> 00:15:54.040
Let's see.

214
00:15:54.040 --> 00:15:56.380
Something else happens with Ansible as well now.

215
00:15:56.650 --> 00:15:57.420
So I'll just go back.

216
00:15:57.440 --> 00:16:04.560
I'm just going to run the playbook again just to show you the idea of Ansible being a dependent.

217
00:16:04.840 --> 00:16:05.860
It's quite hard to say.

218
00:16:06.130 --> 00:16:12.010
And what it means is that when it goes to push configuration, if it sees the configuration already

219
00:16:12.010 --> 00:16:14.620
there, then it's not going to do it again.

220
00:16:14.630 --> 00:16:15.700
So it's not going to overwrite.

221
00:16:16.090 --> 00:16:18.310
First off, it checks is just already there.

222
00:16:18.340 --> 00:16:20.860
If it is, then I don't need to make any changes.

223
00:16:21.070 --> 00:16:29.290
Now, when you do command line with the ansible module, that will actually overwrite but the A.P. server

224
00:16:30.190 --> 00:16:33.060
and everything else in there, it's going to be unchanged.

225
00:16:33.430 --> 00:16:40.000
So I can see there was only one change on each year when I ran the playbook this time.

226
00:16:40.210 --> 00:16:45.390
But when I ran the playbook the first time, it made the full five changes.

227
00:16:45.430 --> 00:16:48.740
OK, so it can see everything in here was OK.

228
00:16:48.760 --> 00:16:52.990
Again, still having a problem with our free for some reason it's a different type of driver.

229
00:16:53.020 --> 00:16:59.890
I could troubleshoot that later, but all I really needed to show you here to show you Ansible in action

230
00:16:59.890 --> 00:17:01.720
during our network automation.

231
00:17:01.870 --> 00:17:03.250
See you in the next Licia.

